pushf nop aad xchg adc dec andl es pop xchg icebp sbb aas lds idivb imul sbb sahf lret jno daa jae jno add in stos mov outsb inc push sahf sbb jno out test bound movsl mov lods imul (bad) pusha push fildl fbld push lods mov cmp push scas loopne (bad) scas mov shrd xchg or push std imulb adc pop and (bad) xrelease xchg orl pop nop sub lea dec inc sbb mov push iret pop and cmp rclb sbb popf xchg add and mov cmp xchg repnz push cmp loop (bad) jo ja enter jmp outsl mov jne inc adc push mov fisubr out stos mov pop or ja sbb notb xchg popa xchg xlat mov jmp xchg mov lahf xchg jb or out push aam scas (bad) push xor (bad) int3 cmp sbb test imul xchg cmpsl dec shrl fsubs mov ficoml xchg test xchg jns or outsl jo sbb pop add imul adc fs inc inc dec loope jo adc jecxz ja negb or adc inc movsl aaa jp enter std sub inc mov stc stc xchg pop adc aas pop test fstl or jae mov mov outsl dec sub cmp xchg cmpsl pop ja ljmp push xchg das dec (bad) cmpsl je imul jge js dec stc sbbb and push cmp imull adc push fisubr ss mov cmp adc adc and iret test loop sbb inc mov insl xlat mov lret mov adc test sbb scas xor push xchg rol inc incl pushf call not lea call add inc gs imul outsl outsb dec outsb outsw push imul cwtl not movzbw lea pushf lea call jmp mov push inc mov sbb cld and or push jp loop xchg cmc movsb sti or xor or push aam inc iret xor cmp add dec and aas ret popl gs pop pop inc mov mov (bad) xchg pop out inc fwait xlat xchg and pop xchg fild std test sbb jmp test test xchg inc nop pop fwait sbb pop aad mov in add mov sbb (bad) in pop fistl sub mov jl xchg lret (bad) loope fsubr pop push mov sub in lods push inc mov inc mov pop movsl ljmp xor inc xchg push lods jbe mov popl imul or call lea jae movzbw mov mov cmp test stc mov sbb sar shr mov cmc cmp jmp bt cmp movb pushf pusha jmp mov pushl popl movb pushf pushl pushl ret pushf pusha movl pushf lea jmp shlb sub lock (bad) fldcw stos mov lods jge pop test inc std fildl mov jo and xor xor out cld fcompl cli and or fdivrs sbb jne dec mov push jmp and sbb push push lock cs sbb cwtl imul mov cmpsb outsl pop sahf mov mov xor push adc jecxz js mov in cli jp dec and inc aad fwait jo mov fsubp xorb stos mov nop mov clc xor jnp repnz frstor in lea test lock dec cltd lret aaa lods push sbb sub loopne mov mov jnp lds mov mov scas repz push (bad) cltd xor or (bad) xor int je mov ficomp cmpsb xchg pusha outsl mov cmp and test xchg js sarl (bad) inc jno jecxz jno into adc sub mov loopne adc popf incl add inc xchg xchg jg push xor cmp xor adc pop jge mov mov adc mov xor aam pop cs pusha or fldln2 into push movsb jne clc icebp dec add pushf lods leave insl pop push call mov pop loopne dec sbb jmp xor in insl mov jmp dec push ret and xorl hlt js fucomi sub (bad) cld inc xor stos mov test and test xor fsubrl clc movsb push mov call push xchg stos jmp aaa pop loop push sbb pushf mov faddp ret (bad) je sbb and outsl or xor in sub call xchg pop movsb jae outsb enter push jbe sub cmc scas movsl fsubs mov xor test push outsb frstor ret stos push repz (bad) xor daa jbe rclb pop sbb jo push in es mov sub mov pusha and pushf mov pushf add mov movb lea jmp mov movb mov push mov pushl ret adc sub inc mov nop or in clc into mov ret into xchg mov loop cs mov loopne jmp inc xor lret das scas sbb xchg fwait stos loope ffree stos or dec testb push (bad) sub (bad) or push adc roll pop mov add lods jno push aaa or inc sub test (bad) adc or pop jp jge xchg adc push cmp jbe cmp int3 xor les inc cmpsb sub pop or enter adc jb popa add adc and dec push add mov lods or pop (bad) data16 xlat xchg adc push cmp push adc orb sbb push push and fiaddl jo inc mov cmc cmp test pop incb xchg pop push push push sub repz lods jbe and dec push mov mov pop out pop std sbb push ds or fst mov daa hlt add sahf push jae jp clc xchg sbb add pop mov sbb lret lds sbb mov lcall push into xor sub cmp pop popa sub lret cmc push (bad) aaa sbb sbb sahf push mov lret stos es pop repnz test inc into movsl jno repnz in loop cmc jne push inc cwtl xchg inc fnstenv out mov adc push mov cmc leave dec cmc fbld outsb scas pop cmc sbb xlat lods sahf shrb enter mov loopne (bad) (bad) push cmp pop cmp inc inc out xor clc movsb adc jmp adc dec movsb aaa insl lock leave stc popf cmp add or push (bad) pop shl and repz inc rorb test sbb jg stos dec sub push mov shrl cmp outsb mov sub cmp subl push xchg add fldenv lods push cltd (bad) in push aam out sub fistl imul or cld and inc pushf cmc cmc cmc cmp pusha pushl lea jae sbb mov pushf mov sub inc shr adc mov bt xor push clc pushf repnz jmp sbb roll scas push mov push lahf adc jmp gs dec xlat pop pop inc mov lret cmp push jb mov jmp mov dec stos adc sbb sbb dec into bound dec and loope in std lea inc mov jecxz (bad) loope fwait dec push jmp movsl push jo push repz je mov jmp test aam popf cmpsw lds repz xchg jne jne jecxz adc sub push or mov dec icebp and adc dec pop test nop inc pop cwtl bndstx jl (bad) jae jecxz setge sub outsl push adc pop sub pop pop jne jle aas push int mov sub movsb mul cs shl or cmp mov (bad) iret push add js adc xchg sub scas fbstp lret movl fcomps xor sub imulb scas xor lea outsl out push dec inc fsubrs xor (bad) test jecxz mov sahf cwtl mov pop inc cmp xchg gs xor adc (bad) mov adc jp shrl fmulp jnp jg inc movsb iret xor xor imul std lahf decl mov adc jbe pop or push les stos std (bad) or push int adcl jp je mov lock lds jl clc dec mov std jo sub insb mov xor sti (bad) ret in mov xor out je clc adc cmp cmp cld mov leave mov popa jno cmpsb add mov daa (bad) ds sbb or pop pop out mov cld cmp add push bts stc mov adc aaa bt sub dec aas bsr push rol push bsr bt bts push shr pushf mov sar bswap btr mov jmp dec stos jo js inc xor mov jle pushf xchg dec js int3 push in mov (bad) xor xor jecxz jb jbe mov je push or mov cmp pop (bad) fdivrl mov cmpsb int cli ret shl push pop xor mov subl inc inc stc (bad) andb xor notl mov and sbbl ljmp mov and xor jmp mov imul cmp scas addl fs jmp jnp jecxz lahf pop jb cli xchg mov jge push in repz jg scas std push mov or test mov out clc inc jo xor or jb add sub adc inc mov jns cmp sub call add inc js je jb arpl jae lea ja jmp push enter push inc addr16 outsb adc cmp cmp mov (bad) lret mov and and jle in inc add cmp and rcrb mov inc fisub cmp aas divb mov inc dec sbb mov ret jae or sahf mov cmc inc int dec dec hlt mov jmp bound sti nop push icebp push nop and imul and enter lret jno add mov cli lret cmp cli adcb sbb pop and in das mov pop mov sub push push insb mov loopne enter lcall pop inc mov mov andl sub imul into lahf hlt push add pop hlt or add stc test sub clc shr sbb (bad) negl ds dec shld add bswap shld bsr inc add lea or dec shl mov test shr jmp lea je pusha push lea jmp out int3 sbb inc (bad) test push gs iret repz iret pop jg test xchg arpl (bad) movsb movsb sbb dec lods fsubs xor scas jl add movsb cmc scas fidiv loopne repnz out cmp test gs aaa rolb out hlt mov insl adc imul add lds add mov (bad) loop jb jae pop ss (bad) out adcl mov std div cmc sub stc xor jp push jmp scas push dec cmpsl out mov scas lds mov mov xchg dec pushf and int3 xor xchg shlb (bad) jns clc or push rcr xor xchg pushf mov mov bswap push mov movsbl lea jae pusha mov pushf not movzbw mov mov mov jmp mov inc mov xorl sbb push icebp scas push (bad) pop fsub xor xchg dec mov into (bad) jbe int dec push cwtl jp jl sub out nop adc xor (bad) push ljmp out xchg rcl cli test orb sbb imul outsb enter outsb in sbb clc add add inc adc dec jp and or mov xor out dec outsl cmp paddd cmp je sahf int adc cld mov jg cli pop rol push cmp mov cmpsb mov jo xchg jnp add (bad) mov ffreep or mov inc and ss add je add xor push pushf mov pushf pushf pushl pushl ret lea jl push lea call bts data16 icebp add std add shl cmc pop sbb pop test cmp pusha jmp lea jae call push orl cmp or mov loopne adc mov shll int3 xor sahf aam jge fsubr out rclb rclb sbb int3 mov out jnp mov mov or loopne sbb or icebp jae add pushf shrl cltd jnp out adc mov ret or clc dec popf ss inc fucomip pop mov xchg pop out insl xchg repnz stos test scas inc mov push hlt dec push popf add je hlt pusha lret lcall xor sub in pop sti push test je sub add cmp push scas outsb mov stos and test jecxz movsl pop (bad) mov add out ret jmp xor push inc fnstenv xor xchg sub push and ret push outsl (bad) lahf add add mov xor fcompl xor mov bound stc not imul push movsb pop xor xlat and jge lahf mov adc jo push stos insb jae mov mov sub mov enter out xchg fistpll or pop je (bad) cmpsb into mov dec cmp xchg test mov jne ss call mov push sbb sub js add in jbe and fcomi add int or xchg nop mov cld das xor sti pusha fisttpll adc or ds add cmc cmp pop xor loop sub mov icebp pop mov bnd push inc in jg sbb stc stc add sub and shl divb test mov push cmp and bound add add dec leave xchg jmp xchg ds add add fstpt sub lds cmp imull or lea dec xor out xor fxch ds or pop sarl (bad) cmp fwait js pop rcr test enter leave je inc xor fs int3 push mov fistp xchg bound fcoml push arpl dec dec add and scas fadds push test js iret dec inc test aad pop mov pusha or out mov dec repnz xchg (bad) lods push movsb into fsubr imul mov popa std enter inc push pushf aaa popf sub outsl adc imul pop in inc nop inc mov insb loop jmp imul add pop push inc loop into push or (bad) int3 sub fldenv sub mov (bad) lods xor and dec mov pop jb or xor pop ja dec mov (bad) in adc js sub push int test das stos repnz add outsl xchg lahf (bad) es in les push jge sbb hlt sub add clc jmp and pusha call bt cmp lahf pushf lea pushf jmp pushl pushf lea jmp xchg pusha movb xchg call mov movb stos pusha lea jmp pop pop sub cmc or and mov subl cmc gs jmp jg mov das inc rclb (bad) jge and iret ja aad jae fild cld push lods into mov mov (bad) and cld push mov push mov ret (bad) pop push pusha jp mov out repz dec xor push (bad) sbb stc cmp and imul out aas and cld mov xor (bad) rclb jmp scas and cltd (bad) jmp dec stos or pop mov sbb xchg leave adc mov out dec jp mov cmp addl pop mov and jno cmpl mov mov in rorb push xchg test ljmp repz mov push loopne in cmp (bad) or out shlb fsubrl xchg inc ss (bad) insb add (bad) fsubrl popa or mov inc or sbb mov push cmp xchg les call sar jbe xchg clc xchg sahf ja mov mov lahf outsl pop sbb aad in loopne in (bad) js outsb cltd rclb mov fldt ja cmp or add popa mov dec sbb int dec clc jmp xor push inc hlt lahf arpl and aas repz out xor dec (bad) aaa fistpl xchg adc xor lea movl das cmp push fsubl push sti je xchg inc (bad) les adc dec std loope iret inc fiadd adc mov (bad) int3 push fistp es or add xchg ret xchg jmp mov jle adc xchg divb aam pop adc test xor adc fldl not mov push mov data16 and add jl mov push lock push lock jmp addr16 jmp stc popf sub call outsl xchg inc fist ss jl orb (bad) xor mov jmp xlat int inc inc mov mov xchg mov popf xchg (bad) out dec inc mov mov push test add out inc jge xor xor (bad) xor adc stos sarb xorps fildl js adc adc jle or mov imul cmp in xor and pop leave jno pop aam notl sub lock mov mov inc or add and (bad) fmulp xchg ret test adc (bad) pop jecxz lret ljmp jbe dec rorb push ljmp pcmpeqd cmpsb pop fldcw shl test (bad) sti mov stc jae pop inc pop push gs mov dec test (bad) hlt je mov xchg out iret rol mov jmp pushf lea je and mov shl ror ror add shrd mov clc cmp test pushf pushf lea je cmc add bsf mov pusha add pushf test pushf mov shld rcl rcl movw mov test test cmp call (bad) inc pop cmpsl cmc in dec (bad) dec pop fs inc dec xor lcall mov pop xchg push xor clc pushf gs jns xchg adc testl fimull gs adc pop or xor daa jmp (bad) mov leave imul in into sub scas pop es fmul cmp add cmp mov leave cmp out jg out cli cmp outsl pushf mov and jmp js add jmp mov jp gs lcall (bad) or bound mov push fcompl loop cli inc mov adc pop rorb dec sti sub xor mov dec pop xor jmp xchg dec mov jmp out stos mov pop cli jp rorb call adc cmp push jbe push mov push adc dec icebp test lods in mov sbb fbstp jae and jge pusha xchg cmp mov sub add xor and ret aam mov push xchg push insl lea inc andl add dec popa imul jb inc imul jns popa je inc js jae jae pop fdivrs aaa int3 les in fsub mov xor bnd dec sbb xchg jl loope loope add pop test dec ds lock imulb fistpll dec mov xchg push jbe insl inc sbb es dec sbb add lcall and and or jno stos mov outsb mov outsl ficom or dec rcl aam inc iret lea ja sbb mov cmp mov out lcall jb xchg mov pop sbb cmp pop or out mov in out xor sub pop mov dec cmp daa dec test popl cmp repnz add std imul nop push cld dec int3 add cs mov push enter bound fildl fdivp jp jle pop mov mov test adc sub imul dec push (bad) jae ja movd and fucom pop or ljmp xor test sbb repnz pop stc pop or call and or and mov mov cwtl pop sub cmp cmp or cmc xor add adc lods jge mov jecxz mov mov ljmp call pop int push inc xchg daa rclb push adc aam out (bad) repnz lds sarl sti cmp aad mov outsb cwtl push lock pop push call mov loopne rorb stos fidivrl mov int mov or cwtl jge cld sub icebp aas pop mov cmp data16 ret adc dec mov add pop inc fdivrl jbe dec mov test repz fldt dec dec sbb inc mov or dec adc mov add xlat mov (bad) pop (bad) test push xor nop dec mov leave dec (bad) sbb mov mov xchg jecxz add lcall popa out jp or xor (bad) push gs xchg push sub in or mov frstor or xchg repz cmp rol dec or test ds leave inc and mov fist jne dec cltd jge aas mov sbb sbb xchg jl mov fbstp lea invd (bad) lret pop pop xchg fcmovbe mov sub ss fisub sbb adc fwait pusha outsb sub mov dec rorl jnp cmc pop adc sbbl sbb fdivs test xchg mov fstpt fdivrp push pop imul lret cmp push test popa ljmp gs jae xchg shrl and jbe mov jmp test xchg push push test fdivs cmp adc stos stos sub pop jmp add dec mov imul int mov enter test mov add insl pop lret xorb js ljmp mov mov xor push inc mov (bad) xorb push js push pop jl ds rolb fisubrl div mov mov cli mov lock inc xrelease jp push lods jmp jmp sti add jbe testl dec lds mov cmp sti jbe mov outsl jge test cwtl pop cs and ret sbb push imul (bad) dec cmpl (bad) (bad) cs push inc mov jmp or sub mov inc pop xor ret idivl adc clc adc sub push lahf imul pop cltd out push push lahf movsb mov mov add fwait and sub add mov fnsave adc inc xchg sub cli hlt inc jbe jecxz outsb mov push sti stos inc fs and insl cmp lock loope inc (bad) sub outsb xchg notl in sub icebp adc test mov xor xchg mov pop (bad) aaa out leave jecxz sarb and mov and les adc cld stc or jae stos insb shrl nop mov inc cli jecxz and mov nop inc pop sarl test lahf dec iret (bad) sbb int movb subl add inc dec fidivrl and pop mov hlt sub push mov jne clc cmpsb lret jb sub sub jl inc pushf mov inc decb xchg dec call push nop outsb in sub pop or add loopne enter xchg push jbe popa pop fisttp lock cs (bad) sub loopne vpmaxub (bad) cmpsb pop inc push xchg cmp mov hlt xor aad out dec mov pop mov out ds clc sub sbb dec pop js sarl cmpsl lret or mov or pop pop mov (bad) jns mov orl dec jg hlt stc fwait push xchg (bad) push in xlat mov sbb rorb inc call sbb icebp lea call push mov xchg pushf pushf call stc add jle push inc call in repnz repnz sub shrb mov inc cmc or popf push xchg inc aad pop scas adc test sbb rorl sti jae addr16 lea cmpsb dec cmpl dec sarl mov insb scas (bad) dec xchg inc jbe sarl into mov jge xchg dec and (bad) iret fsts ret ja cs push dec add dec ljmp inc das aam into cli fcom adc es mov xchg cmp loop inc (bad) fisttpll in int fnstsw inc jo push mov mov in xchg pop xlat dec and mov inc (bad) ror lods rep repnz mov sub xor lds popf iret lret pop test rorl loopne cmp in jg in push xor mov inc (bad) out push blcmsk mov dec fs insb iret pop (bad) fnstcw into out inc in outsl mov testb idivl adc adc shll sub les jo bound push lahf push and fisub sub mov pushl call pushf clc cmp sub jmp add push pushf bt test movzwl bsr clc shl mov call mov movb mov not call ss dec xchg push inc mov and adc xchg push mov pop xlat ja xchg out and pop add pop in sub cmp sub jno cld jnp adc ret loop ret sti rclb sub dec fisttp shlb fcompl push mov out add lahf cli push outsb inc jecxz (bad) mov lods cmp sbb mov mov add cltd mov cmp sbb mov adc jecxz in sub and add cwtl les sbb shlb repnz bound mov and jb cmp cmp cwtl lea cwtl movzbw mov push pushf lea jb btc mov jmp xor cwtl sbb (bad) add (bad) push cmp jmp into cltd xchg data16 pop sarb fisttp xor jno out shr scas (bad) or jecxz xchg pop movsb fstpt xchg dec lcall and ds test xor add fnstcw aad inc xlat inc (bad) leave cmp push fsubrs jmp inc fstpl fmull shr jge repnz add or arpl dec mov sbb mov sub push ds flds nop push inc pop cmpsl stc insl mov sbbl fsubrs inc dec add mov sbb xchg dec aam sbb inc fnstcw xchg xchg cmp sbb cld cmp add inc rclb mov dec out inc sbb (bad) imull (bad) fildl (bad) out test xchg push cs (bad) std and jp dec jb xchg adc cs ss mov xchg push stos jo (bad) mov out mov fildll mov aas pushf sbb pop pop adc ret flds hlt arpl pop xchg mov mov sbb btc stos cmc cmp xchg clc pop xchg push push into jnp dec push icebp cmp sbb push loop subl jmp shld btr mov movzbw btc sub stc shrd mov adc mov bsf mov btc sub dec and xor daa jmp push mov lea pushf pushf lea call jmp lahf mov jmp cwtl pushl lea call lahf movzbw lea movsbw jmp cmp pusha push call ljmp movsl stos test in or inc mov xchg lock inc xor nop jbe sub xor je add add test lods mov ja sub int inc outsb xor or and push or inc aas push scas (bad) stos xchg inc inc xchg xchg fwait loope cmp stc mov addr16 scas mov jnp adc lds sbb add icebp (bad) (bad) test push mov imul or pop mov push mov notb add push lods mov bound sub jae xchg push inc stc xchg mov jp pop outsb mov xor lods int inc outsl out xchg pop iret sub incb adc mov add lock adc loop movsb mov pop outsb mov std jbe (bad) loop sub add iret mov notl jle mov fistl sarb mov scas pop fistpll stos popa xorb fwait xchg out pop mov stos leave js xchg adc fstps mov jbe sbb push inc xchg cmc push cs rcrb cmp andl adc (bad) out inc pop adc mov lea ja push jmp lea jp push lea call pushf adc call jmp inc in icebp lods lds push xor push pushf (bad) pop pop mov or icebp lods adc push fstpt icebp lods adc ficomp push inc stc inc xchg mov cwtl push or fiaddl pop lret dec movsb jp test aam mov mov jno dec enter add xlat repz or pushf adc pop cld adc mov jecxz addb fcoml push jle xchg rolb stos sub insl in cltd mov outsb call lret arpl icebp mov dec (bad) data16 imul nop and loop xchg testb push ss mov std sbbl mov mov and mov int3 sub rolb outsl cwtl lret je jecxz xchg dec or pop cld aad and movzbw pushf mov pop shr cmp btc bswap mov cmc stc or jmp mov mov pusha cmc mov test cmp pushl movw pusha lea jb cwtl mov movsbl adc bswap mov pusha call and mov les and pop dec mov scas jae jae jg aas das dec adc nop std adc movsl sub sarl (bad) jge sarl jae out xchg jge movsl pop leave fsts or mov mov loop sub sbb pop sub mov inc je sbb add sub fdivrl jp push sbb std ret mov mov and or lods daa push fldpi push add xlat mov mov rcll push popf push inc mov xchg lcall lods data16 xor stos call fstps sbb sub sarl (bad) xchg aam push fmull add push mov jl lds cmpsb shrl bound mov mov mov adc mov push movsl sbb xor inc push shrb cmpsb imul mov inc mov and int in cmc mov das call fsub into adc in pushf xchg jecxz ljmp mov in xchg popa adc mov sub pop (bad) xor sbb in movsb mov in jp (bad) addl sub loopne push mov cmc mov jp out cmp bound jbe call mov fnsave pushf jp push mov mov jbe jno outsl aad addb xchg std fbld cmc or sbb dec or lea call jmp pushf lea call push call jmp not mov pushl movw pushl ret mov pushf pushf pushf pushf lea jmp pusha cmp test call or mov ror aad stc mov bts inc aaa cmp lahf pusha not mov jmp je roll push inc adc add mov mov sub imul popl jbe imul aam mov cwtl pop push mov sub sbb inc lahf push (bad) push adcb cmpsl fiaddl in outsl mov adc push sub dec sahf and mov xchg stc or adc dec fisub push imulb adc add jnp jne aaa (bad) jg cmp push movsl dec mov nop aam test test addr16 mov dec mov sbb in pop lahf push inc pop mov sub dec jb mov test mov es fsubr mov mov fsubs out xor gs aad xchg daa sbb xchg push leave cmp inc add flds inc mov xor push mov sub xor lret sbb fild mov sbb and ds andl jle (bad) movl es sub scas in push xchg imul dec or rorl into insl movsb rolb (bad) jo stc insb leave jecxz adc pop add jmp daa mov and not mov stc cmp mov rcl pop movw cmp lea jmp jmp push lea jge pusha push lea jne pushf movb pop lea bswap push lahf movzbw not lea pushf pusha call pushf lea call jmp imul jo fs insb add fisub out cwtl push inc insl push sbb fsubp or in lock push in pop lods add (bad) sahf or pop (bad) adc mov aam cs and hlt cli (bad) int lcall sahf mov sahf and lock btc cmc adc add push lds stc lock push push xlat mov dec mov sbb test inc sbb fcomps imul push jge sbb ljmp pop xor xor mov js pop push jg rcr xor pop and jnp pusha out repz scas test (bad) (bad) adc (bad) ljmp (bad) mov push pushf mov call cmp pusha sbb pushf cmc clc cmc lea pushl clc pushl xchg setl rcl xchg sub push movsbw lea movsbw pushf movzbw mov call dec cmp (bad) (bad) inc shrl mov (bad) adc (bad) insl inc jmp push sbb fistpll outsb adc popf in pop pop cs or scas dec jb ss fsubrs pusha xchg push (bad) xlat mov mov repnz popa inc imul jbe test xor lea std sbb inc mov push dec leave sub shlb in fucomi sub fnstcw push mov ret jnp push push jo js ficompl push dec iret inc cmp jnp jb jbe sub in fildll jno jo xor jle dec xor inc ja cmp ljmp into aas jecxz mov stos add lds jle xlat xchg inc test inc push ds sbb (bad) daa cltd pushf xchg lds subb mov addr16 imull and (bad) movsl and test push mov stc cltd rolb rol dec icebp insb scas cltd loope int3 out jbe jmp movsl test loopne shl cwtl xchg test pop mov dec cmp mov or push fs ljmp clc mov bound loopne mov dec xchg imul jmp mov pop nop cmp cmp (bad) roll cmp jecxz je sbbl inc pop jmp pop popf ja aaa stc pushf insl into and push xchg mov pop add pop sbb test pushf pop or jae call pop sbb push or sbb push repz icebp push dec test inc inc mov jle cmp cmc int3 inc test (bad) daa daa dec lods xlat imulb xor fwait inc cs mov (bad) inc xor mov popa cmpsb inc dec fucomi inc cmpsl push pop xchg cmp xchg cwtl dec mov mov jns pusha push push xor pop dec cltd mov pop popf addr16 xchg xor movsb and mov pusha loop and sahf sub mov jl dec pop lahf xchg dec push mov push insl out imul imul jmp lds aad adc and out outsb (bad) adc jl mov std das or dec or mov push dec (bad) adc adc stc icebp jmp mov adc stos (bad) sbb pop mov cwtl mov test int cmpsl mov adc pop adc lret add ss dec mov xorl xor add test cld popf mov int3 sub cmc (bad) adc fs lods pop (bad) mov sarl sbb es xchg xchg dec or imul cmp jl fs pop pop addr16 enter pop jno push in xchg lods insl cs add lret stos push dec cmp gs push mov int3 test push repz inc das scas xchg xor out lock and sbb sub or (bad) push jp mov jae dec and in out movsl push mov aaa mov icebp pop inc ret repnz lret inc jge push mov push cwtl fldt ss mov repz test jnp inc sbb cmp shr adc (bad) sub movsl inc mov inc inc push pop out js mov cld mov adc leave scas stc mov in test fs xchg cmpsb es lret mov out and sub leave out lock adc jg push mov cli aad cmpl outsb ds pop pop xchg inc sub xchg ljmp in cs and mov jbe in xor push add insb push hlt icebp mov mov sub xor ficoml cmpsb pop push mov (bad) scas dec pop mov push xchg test (bad) inc push dec sti cmp shrb cmp ja cmp subl (bad) cs clc or in cmp or xor pushf fisubr pop jp cmpsb ds xlat jno cmp mov mov sbb je sbb add cmc jnp xor jnp add xor dec mov cs inc adc dec ror dec faddl mov dec xchg out (bad) int3 push and std mov sbbb lcall pop dec repz pop (bad) mov popf test jns jbe or cli lods cmpsb mov add out fadd daa sti cmp push gs fadd outsl jae pop or fistl xchg addl arpl fcomi sub lods add popf dec and pushl outsb mov push mov and mov jne xchg (bad) sahf sbb leave iret cmp mov adc mov add shrb repz fldcw xchg xlat jns leave scas xchg imul cld mov sbb ret xchg stos and and sbb (bad) divb pusha mov into xchg jne adc dec mov adc les sub lahf dec mov fcoms and add adc jp mov ljmp aad rcll push and push stos cmp inc push push js aad int mov pop push sub imul pop push xchg (bad) sbb int add mov cmp imul out push addl out ret sub fiaddl cmp sbb adc aas out mov sub mov sub jl jle push cmp and je jle fwait and leave inc mov jbe dec sbb ret push sbb outsb gs sub mov jb (bad) (bad) hlt stc repnz movsb mov mov gs js and decl add cld fadd data16 int inc mov loopne push mov jmp cmpsl sub mov fsubrl pop (bad) lahf lods pushf pop mov mov rcrb repz mov test (bad) push ja cmp mov arpl inc fdivrp or push and add xor pop add pop loopne rorl (bad) fwait clc add gs in enter push aaa pop (bad) in adcb jmp into fdiv lods loop adc cmc mov xor xor addr16 mov dec bnd popl imul mov dec test mov cmp loope jne (bad) lcall fbstp rclb inc jbe (bad) cmpsl jl push mov and jbe fldenv mov imul xchg (bad) gs adc cmp jge (bad) jo sbb into movsl add ror mov adc xchg mov into idivb in (bad) push stos lock ret lods rolb lcall jg add sub mov inc test scas cmc pop jge,pt or and jg and or mov loopne setnp push arpl sbb out add inc (bad) sub push sahf ret adc sub les gs jmp out pop pop mov ljmp bound jge scas iret pop or push test or adc rsm jo js cltd scas mov inc and ljmp lods pop inc movsb insl (bad) and mov pop inc hlt fs and and cmp dec jbe test int3 std test hlt xor repz je or cmp outsb cs adc (bad) insl pop pop adc into jmp rcrb out mov adc add fsubr push xchg daa stos mov sbb stc jl inc lock (bad) xchg jae sbb xchg std (bad) aad insb sub jecxz (bad) hlt (bad) cmp add push loopne add jl outsb lea sbb popf orb stos aas mov icebp fldcw cld out mov inc outsl rorl dec sub mov ljmp (bad) jmp aaa mov sarb rcrb xchg xchg cmp iret pop xchg test add pop or fsubrl cmp mov int enter cmp jno shrl sbb stos nop xchg pop fs jmp xchg sub lods test cmp jg fbstp dec (bad) sub les mov test mov sbb sbb test mov push fcom addr16 enter cmpsb lahf sbb adc jne in cmpsb stos add cmp mov xor push pop mov pop jl nop ja dec xorb aad jp and or clc inc int3 out cmpsb xor dec pop jge pop and pop jl pop scas inc data16 or andl in mov and imul add aas xchg loopne xlat ss repz stos xchg (bad) push pop add fldcw mov lea or sub movsl and add jmp test das aas lcall mov nop lahf pop outsl mov sarl aas pop fs mov push js iret fiadd enter jnp adc xor mov mov sbb inc icebp or xchg cmpsl daa in loopne mov mov fisttpl mov jbe xchg sub test daa gs xlat mov mov cmc out dec xor cmp jae xchg ds pop es outsl hlt enter js jmp sub int cmpsb rolb subb sti xchg jbe and lret fwait add mov loopne jmp in cmpsl dec data16 rol into jne xchg dec dec and dec pushf dec pop push jecxz cli pop xorb lret xlat rolb (bad) cmp hlt xor push adc adc stos inc (bad) icebp std or enter pop mov in xchg bnd jae pop add dec mov into cwtl repz pop insl into xor pushf outsl cmp in lret loope adc sub movsl ss pop fiaddl out ja mov dec fstpt push mov call push adc xor fidiv fiaddl mov lret aas loop lods sbb xchg dec sub adc mov fistpll pop aam inc arpl cmp test push jge outsl or xchg es and pop add jecxz adc cmp repz jg (bad) fildl inc jae not test cmpl push shll fisubl sti stos sbb aad les pusha add je mov ficom sub pop lret push inc xor mov lahf clc insb enter cmp xchg inc cwtl xchg push subl scas jmp add or push push (bad) sub dec mov adc insb mov add imul aam test fs mov aaa pushf dec jbe mov movsl testl imul fdivl push lock push add movsb xchg xchg add sbb std daa xchg dec dec rcr shrb pop cmpsb push std push in xchg xchg roll xor fadd and stc mov and sub mov mov jnp out inc sbb or rolb adc add add scas incb (bad) lret cwtl pop sbb and insl lcall sub fistp adc test pop imul jne popa jp addl std lods jg nop mov push (bad) aaa lods ficoml scas mov mulb cmpsl fwait jp pop cltd adc mov and push add lods xchg sbb sub cmp xchg xchg mov pop inc leave loopne icebp mov aaa ficoml ss add fisubrl mov mov scas add clc outsb sbb xchg lahf int mov daa daa (bad) xchg mov dec dec ret add and xor dec leave bound dec inc das push inc add add jmp push les icebp pop adc lret pop push mov mov push sarl jecxz icebp rcll inc idivb aaa sti mov adc mov aaa insl cmp lcall xchg iret push inc push jb adc xor dec push ds jne cli pop jg cmp (bad) sarl pop out push in push pop stos insb pop push xor push leave add jmp or add nop xlat (bad) cmp inc adc scas fisubrl mov and into fmull sub xchg daa cmp (bad) incl cmp sti cmp mov push and shr push ret add lcall push sbb rcl dec sbb stos push xchg imul loopne jo lock leave clc lds pushf jecxz,pt pop jae or push je jmp in add mov es add and jno push push pop cld fmul xor lds adc out sub pop dec shl mov js push hlt int3 scas icebp mov cli insb inc push pushf and fnstcw lret sbb mov popa cmp jle bound ret jge sahf fdivrl push cmp add sbb aaa sub icebp daa push les pop push mov xchg cmp pop hlt inc xchg loop ja mov adc ret xchg pushf imul (bad) adc aad in dec test mov dec data16 sbb int3 and insl mov lea js lahf push sbb push xchg imul imull cmpsl mov xchg cltd call call mov fstpt jecxz and rorb adc clc lret push add cwtl cmpsb fnstcw xor repz aas dec out aam xlat ret ror int3 int3 add ljmp inc (bad) add jb add mov mov inc out lahf pop pusha cwtl icebp lahf hlt xor in pusha (bad) outsl in sahf sub je outsl xor int mov mov gs inc cmp xchg imul mov test mov sub test cmpsl ljmp sbb into dec pusha fidiv lcall iret (bad) mov enter into jns cwtl stc pusha xchg mov add (bad) mov mov push adc or xchg sar (bad) sahf stos es jno mov (bad) xchg hlt inc lcall lods out in ds fistpll mulb mov ss repz push aaa test dec aam in js xor xchg dec jp jmp adc and jbe pushf lea fistpl sbb mov jns into sbb or push cs and or dec push cmp repz push mov cmp test out stos push mov (bad) out jne insl pushf test mov leave cmp push ss hlt in out push xor mov push adc out cmp sbb adc mov or imul pop in push sub sbb aam inc in in stc dec adc (bad) pop leave popf (bad) push call push adc mov int pop sbb jg rclb and dec cmp ret xchg push into cs outsb and sub mov testb or mov cmp xor ja insl fst aas je sub (bad) jno repnz ss (bad) xchg sahf ds adc fwait jno stos jo inc leave repz fcoms inc scas push jmp dec dec add jb cwtl les xlat add daa mov lods ljmp (bad) (bad) ffreep jmp in adc out repnz scas (bad) adc imull dec jno (bad) rcrl pop imul inc pause ret mov pushw cmp pop add fisubr jne dec jbe fadds mov (bad) dec (bad) xor decl mov mov and ljmp sbb out int3 stos xchg pop (bad) fcompl aam xchg dec push dec clc inc cli or ljmp inc stos and loop or cs xchg sti adc out leave jo mov add dec sahf imul rcr fwait clc jecxz gs aad xorb add data16 mov andl push int cld int3 inc andl mov fs push insb add jg in (bad) pop dec pop adc adcb inc movsl add xorl (bad) sbb das add push adc in (bad) ret jae leave mov (bad) push out sub add inc pop jge cs ror call stos hlt pop jbe stos jl movb cli jg test rorl cmp push icebp sarb test (bad) (bad) mov je cwtl cmpsl fistl add inc cld adc call jecxz out jo xor and xor pusha or pop repz mov fcmovnbe dec pop inc cmpb mov sbb loop js inc pusha popa push xor imul inc mov call xor fs sbb add ret sbb out int3 jl aad or cmp push sti jl adc push inc cmp out cmp sub out adc adcl nop pop add arpl mov add jle call sub inc jo outsl jb mov push jecxz push mov out sub int3 mov mov mov fisttpll cwtl push sub xor dec mov xchg add iret inc sahf add sbb ror jns das jne mov add (bad) pop push jle jbe loopne ljmp scas push or pop lods mov mov insb push adc movsl test and xchg inc xor cmp push clts scas stos in sarl ja cmpb mov inc pop pop xchg jo daa inc mov pop sbb lret fidivr push aam (bad) test add fisttpl popf push ret jnp repz and mov (bad) ljmp outsb jo sahf cmp subb mov sbb pop mov or mov jmp decb push cld je out lock push cmc mov (bad) aas dec xchg bound pushf out stos imul jns loope and lret jno xchg cmpsl or or sahf inc and jb jge loopne (bad) jl lods and popa ja (bad) mov push sbb sarl sarb andl pminsw push inc bound es or hlt add push mov mov lods rcl or jne ja jmp jl pop popf push dec sbb jmp jp lea pop mov jno mov mov add hlt push out icebp movsl sub cmp push lret es mov mov and pop lret lret lcall jge pop xor sbb fnstcw ja xchg (bad) mov fadd jbe fsubrs or dec add (bad) jle dec int3 xchg popf orb mov in push sbb dec dec lahf jae call fwait mov push xchg and dec xchg jns mov fisttpl jnp (bad) push fnstsw xchg lret inc dec into pop std mov fmuls sub pushf mov add jle sbbl ret xor xchg xlat addl xor mov adc xlat sbb pop sbb stc xchg stos mov dec div arpl aas or fcmovnu mov pop fsubl sub loop xchg fstl out in rcrl ret jbe test adc pop data16 fisttp mov push pop arpl movsb or lods add sbb sub js in dec mov mov loopne inc push sub or and pop xchg mov mov (bad) push lods in fwait push (bad) dec jno sub fnsave inc and (bad) jp mov (bad) imul ret push sbb mov add xor sti in sbb fidiv aad sub add fadd pop rcll cmc jae icebp scas pop mov jle cwtd sub fidivl or leave mov push jecxz leave add sub inc loopne js mov leave insb in jle fcmovne xchg xor inc cmp je outsl out jge pop outsb xchg cmp dec or pop mov test push popf push out aas sahf jge ficoml loope pop mov push iret or imul pop inc insl pop xchg lret mov sub sbb jns pop cli mov pushf pop call lahf mov ljmp sbb mov popf (bad) leave and imul insb das inc xor popf jmp vfmaddsd ret popa imul or loop insb push std inc in mov imul inc jge ljmp inc jmp pop or hlt add leave in cmp inc stos lds dec das and pop xor add jb lea mov fcmove mov (bad) pusha dec and fnstenv stos fldt aas cltd xchg pop adc adc daa ja mov cmp push adc fucomi add in (bad) aaa inc xchg push add mov adc inc cwtl es xor mov ret mov dec pop pop jp xor mov scas inc popf scas and dec or inc inc (bad) jnp mov and cs sbb jle sub xchg pop dec mov sbb dec inc mov or or (bad) es adc popf add pop lods outsb cmp adc or into enter jmp enter xchg push in andl sbb jge mov nop test stos inc mov (bad) mov je (bad) pop stos jno cltd pop in inc frstor add push jge dec adc dec aaa inc int3 add mov mov xchg popf dec data16 and hlt mov mov in mov das in sbb push mov jecxz enter adc adc ret mov and mov xchg adc repnz push fsubs inc push call push (bad) out dec out mov pop dec faddl sub push push and mov cli xor scas mov pop mov fistpl cmp push jle ret lahf or pusha aad jne sbb xlat xchg stc mov sbb divb inc jnp mov out andl mul inc pop push cwtl sub push sub or push push push insb andl pop (bad) scas or add push xchg mulb call andnps repnz jle inc call sarl sub leave loopne icebp movsl or jmp jmp inc insl push std cs sbb out leave pusha or out arpl dec int dec adc jbe dec sbb jp mov cmp cmpb out (bad) mov dec incb mov sub jle pop mov adc xchg loope push mov lahf cs or decl push rclb aam das pop sub das das push sbb hlt ret andl arpl push (bad) int3 stos inc stos sub pop ror or sub cli addl mov adc lds and dec (bad) popf xchg push dec cmp mov cwtl in cmp js dec mov xchg xor cld shll jle daa insb mov add les adc inc sub push jbe call aam testb pushf lret xchg test sti (bad) and hlt push in sbb xchg addr16 lods pop push fild int test cmp shr jl adc cmpsl dec es aas (bad) adc ret jge adcl pop idivb imul add or inc (bad) jmp rcr mov lock loopne push sti leave sbb imul (bad) shufps icebp out sub sbbb xor fidivrl dec jo inc in inc and jecxz test xchg jmp movsl out gs jnp outsl imul mov push (bad) cmp sub sbb out cmp or cmpl and mov add popf jns outsb jne je ljmp mov pop repz in movsb (bad) fmulp mov pop mov xchg lcall sahf loop pop (bad) lret je add cwtl pop bound and xor add ret xor fsts mov or int lret jnp fnstenv test mov dec fnstcw loopne leave iret hlt mov mov and lds outsb cmpsl mov ja,pn dec lcall fistp pop cli pop inc mov hlt pop mov leave dec push fcomip scas or xor mov xchg ljmp out int dec adc int3 lods push arpl test add call cmpsl push xchg sahf scas pop ja pop add lea push or sub mov sub or mov fnstsw jle rolb cmp test sub xchg jg xor cmp push es sbb (bad) inc sti sbb sbb pop cmp mov (bad) sbb lret push fildll mov sahf add xor add push jne js mulb ss sbb or mov add jle xchg add xchg psubusw cmp test push out cmc leave adc inc ljmp push daa enter pop cld es movsl je cs enter or jg fcmovu xchg setb (bad) mov xchg add dec mov jmp cwtl xchg insl dec cmp (bad) (bad) imul jae sbbl arpl push out sti (bad) mov mov push adc loop mov lahf ds jbe xor xchg inc push lods jno fsubl inc fs sti loopne jb push mov mov lock sahf pop test int3 aam dec jns lds fcmovb imul out js xchg frstor outsl push test insl push insl sub pop push fidivr dec or dec push xlat or mov cmp iret xchg into aas sub jb mov mov inc adc push std les mov daa jmp enter adc loope add cwtl and mov add push jbe add add fs getsec and lds lea xchg jno mov push lods dec dec cmpsb push rep jo push int cmp ficompl adc sbb rcrl adc rclb fisubrl push shl fwait push in int3 cld fild inc or movsl mov push sbb scas mov jmp dec or or and dec dec mov jb daa insl icebp dec mov les gs icebp movsl mov ljmp fildll cmp clc sbb sub repnz sub mov mov ret sub iret in popa ret test xor dec pop sbb fdivr into test into mov jo int mov and add pushf mov adc mov mov das arpl add dec pop cli pop mov aas xchg push mov mov jg inc add add xchg push add and adc adc xchg sbb dec sbb (bad) and sub cmp mov sub sub push leave aaa jmp jo push js jae xor fstpl (bad) dec stc movsb dec out clc cmc sahf mov pop std stos lahf fnstsw cmp adc mov inc sub jb movsb xor call mov jle sub push enter (bad) leave lea sub movsl sbb dec or sbb xchg xchg icebp sub pushf sbb xor rclb jb mov mov dec or sbb outsb decl mov dec push test mov mov nop daa pop je sbb push pop cmp sbb (bad) cmpsl in notl test es lcall addr16 or mov ljmp cld mov cmpsl jle and pop and and xchg lret (bad) incl inc in cmp mov movl sub iret test xchg jmp stc pop sbb stos sub xchg lcall movsb test enter sbb dec mov lret (bad) clc dec lods xorb jp ljmp pop movsb mov adc dec push int sub adc insb mov cltd or sbb ficoml popf sub fld shll pusha push jae push jbe fmuls xor (bad) lcall insb inc jl push adc dec pop add mov jae ret test int js push mov scas dec jbe pop push mov xor fldenv push enter mov dec lods mov mov je cmp scas adc cld pop add cltd hlt dec push inc call and or mov sub push mov in lfs push fistpl push dec jno add loopne (bad) cmp test fwait shrb adc outsb rol mov lods jnp ret mov popa bound xor or pop xchg add arpl adc imul dec dec and sbb mov cmp popf std push jp add xchg aas pop call cmp or lret pop pop clc movsb lret sub and cmp aas push pusha pop mov pushf lret adc test sub lret data16 fxch daa popa outsl push stc addr16 xlat sahf insl cmc stos xchg add cs cmp enter jecxz fwait lahf es mov in pop sbb sbb pusha cmp (bad) lea daa das lods test push mov es out push cmp stc loope and jg xchg sbb mov scas je std test xchg push lcall test cmp cmp popa cmp mov xor std mov sbbb or clc mov aas cmp push xor jae aaa jo lret lahf xchg inc imul (bad) sbb repz insl jp iret out jge lret push jecxz mov aad dec mov shrl dec std and or out fs mov aad mov (bad) mov loop popf in sub ret (bad) fwait pop add cmpsl jge xor inc leave xlat mov xor in roll xlat sub jnp or cmp out in repnz leave aas inc popf ja push cli xchg sbb xor leave jo ljmp (bad) movsb in std in mov dec jne mov xchg push inc push sub out out ja jb loop xor fisttp aad or xor popf mov mov pop pop (bad) pop pusha xchg sub sbb arpl inc jns push cltd aad push rcll pop mov mov daa mov cld clc scas adc dec jns jp add push mov dec adc adc nop sub repz sub sbb ficomp dec cwtl cmpl cwtl sbb nop movsb lret lcall inc je pusha cmp aad pusha jp dec sbb add pop push pop inc ss adc xor stos (bad) icebp test xor testl test pop and iret jnp xor stc (bad) adc rep sbb (bad) lcall scas lods xchg push sarl xchg xor lahf ror gs and clc lods dec inc (bad) jg imul sub ds sbb and jmp dec mov repnz int add or jne xchg sbb popa xlat scas mov or mov push sbb push popa daa addb icebp (bad) mov cmp jns pop aam jns daa jl,pt dec popa mov or add and test mov notl xchg lock fbstp mov add push inc sbb sti push cmpsl call jmp sti faddp in (bad) or or call (bad) mov dec cwtl or fistpl outsb into sub mov shrb sbb and decl or pop push jae ret adc daa or (bad) nop ljmp pop inc rep inc xor mov xchg out stc mov pop scas lahf and sar sub adc icebp adc and mov mov mov pop pop jge das repnz jmpw pop insl cwtl leave push out mov inc andl push sbb (bad) cmp mov push xchg test lods mov hlt fnstcw std fs jg add inc aaa movsl add and inc jne mov test or rcrb pop lret pop pop lock or popa lods stos scas push inc dec mov and test cmp sbb jo rorb push rcl inc loop sub and adc pop mov xchg in mov fwait std xchg out rorl cmp (bad) mov cmp unpckhps push repnz fstl lock movsb xorl fbld loop jbe lods lret mov mov movsb adc insl pop aas cmp lahf inc sub negb out jns fs lds pushf cmp inc sahf fdivrl sbb push pop add je mov mov sub jae imul cmp xor jae stos pushf sahf pop daa arpl mov pop out add cmpsl ds xor pop popf mov leave jae xor inc pop in adc jo ljmp push leave mov pop xor mov pop imul jns loopne dec (bad) push int3 jge (bad) or mov inc fidivr mov cmpsb sar lret imul les push cmc fisttp rolb pop int xlat in shlb imul in adc aas sbb pop popa add hlt into clc jbe push pop call dec xor sbb xor pop mov push jmp stc loop inc adc out adc fcompl mov mov js push xchg pusha add ficomp call mov lahf gs xchg je jle in mov cli les (bad) mov movsl jne jecxz push mov je inc xor sahf testb je add xchg (bad) mov pop jg ja das xchg xor lock xchg scas mov and jp xor mov push mov xor js bound loop cs mov push jae subb popl adc xchg adc test scas hlt mov jne mov push lds push sub fldt adc jl sub jl lea stc imul es in push ja jmp jb sub xchg push je scas or mov jbe ds push pop pop sub push push mov lret ficomp jb dec daa scas in sub je jae test ja and mov and loope adc pop ja mov pusha ret imul js jo lahf lcall dec jno sti add adc and lods mov jl ret jl and btcl cmovs and subl vmwrite (bad) mov cltd pop xchg (bad) xor or sbb and hlt dec out mov mov and and cmp shlb jl pusha flds jl dec jge cmp and iret and sbb iret (bad) data16 inc cmp jb push sub mull jecxz inc xor adc jbe out pushf jae jb,pt mov sbbb adc pop mov iret mov aas fistpl push mov inc loope pop lods fild inc int push jmp mov dec push movsb adc and adc dec out arpl lods (bad) dec and lock cmpsl ret popa mov mov push cmp inc hlt bound add nop pop sarb mov push pop clc mov lret fwait dec xchg xchg jg aaa add out mov push mov jle popf mov outsl dec cltd pop cltd adc mov xlat test out mov rolb pop xorb add xchg cwtl jl add inc xor pop ds xchg leave jle test outsl adc inc inc outsl adc js mov sub lock pusha jb pop out sub cmp push inc pushf ja inc lds pop mov mov jge das lret push cs xchg lcall loop jnp xchg push sub lret test mov xorb jbe mov loopne negb repz ret dec inc xor jno add lcall rclb js popf mov xchg (bad) loopnew loop testb les aad imul xchg packuswb (bad) jle xchg in pop inc popa out jl jge sbb dec test add fwait loopne rolb sbbb jge xor sbb mov or pop lods movntps das dec aas dec pop imul hlt adc inc and scas dec enter jnp jecxz inc fisttpl lds test movsl push push aam inc subb xchg and push inc dec xchg adc movsl repz je jne cwtl loop (bad) lds jl (bad) cmp pop mov jbe setg and in aam xor push je push cmpsl (bad) aaa (bad) int pusha dec inc jmp adc fistp inc mov xchg les inc bound in out or add dec outsl sbb lret std pop ret sub aaa sub sbb adc and sub mov gs shrb push add call mov inc rol pop addr16 xor and test clc pop push mov xchg mov pop xchg out and and push (bad) repnz lahf lock pop xor pop mov push stc popa dec dec lods sbb test xchg loopne xchg stos mov cmpb popl inc test sti pop (bad) xlat adc ret out inc popf mov jns xor inc ljmp and das dec insl in xlat stc cmp inc mov bound mov pushf fisttpll xor aaa jns pop inc mov (bad) sub mov mov loopne pop popf (bad) mov lods adc jge cltd ljmp data16 mov mov or pop iret gs xchg js mov inc add (bad) hlt xchg mov cld inc mov adc sub fidivl pop popf test ss push hlt aas push push loope push out repz rcrb xor mov cmp sahf mov fidiv jnp push dec mov pop (bad) dec push icebp pop dec dec mov lods xchg fmull jno mulb rcll and pop leave cs scas lahf adc adc repz xorb gs inc daa mov and mov lods enter adc xchg mov test out mov lret add jmp ljmp ss mov add popw pop lcall mov jno nop ljmp sti popl lock mull pop cmp aad fwait adc mov std addr16 add jge mov ja push adc hlt pop and addl cmp pop xchg cmpsl cmp test mov xchg sub das pop jg loopne push mov lea jmp leave cmpb shrb mov jo ss push sbbb push push sub loope aaa inc jmp dec xchg sub push adc jge scas mov mov mov lods rcr aam pusha cli inc jb mov pop mov sbb mov sbbl pop inc mov sbb sarl inc sub and pop mov cmp mov dec xor in scas mov les push in jno xchg xlat mov mov int3 cmp sub sub popa or ret inc data16 jne pop js scas repz (bad) test cmp xchg daa repz jo ficom mov bound mov cmp repz call push outsl sub cmp dec push bound out push mov (bad) (bad) popa mov pop mov push inc inc rcr add xor bound mov das push jae inc push mov sub inc mov cwtl stc movsb xchg std xor mov dec pop lock ficom mov mov cmp leave mov or mov sub loopne hlt cmp ret call sbb mov mov xchg dec fsubl sbb mov push inc sbb xcrypt-ofb cmpsl ljmp jle xor (bad) and mov repz leave add int xchg sub cmc jne dec jb mov into xchg loopne pop mov add push and mov jmp mov mov ret fsubl cmp pop mov inc aaa xchg loope xchg xor icebp outsl test rolb push repz out stos jo daa mov (bad) adc ljmp push lock jae sbb leave stos pop mov and mov ja lret pop adc aad jne mov std pushf es sbb mov inc jge (bad) mov imul roll mov jb jo lods subl pop in adc and xor xchg popf sbb and mov or adc pop xlat add jge ror xor inc lcall push push sysenter mov orl mov dec xor adc je jle fisttpl jns inc lcall leave mov sbb inc lgs in jae fiaddl lcall loop fs dec mov mov push dec cmp cmp (bad) mov cltd jge jb rorb gs mov fs aad cmp fs adc lahf jne xchg test mov fnstenv fistpll jo mov dec xor or fldl cmp mov into hlt js mov movsb popf das data16 ss pusha jns movsb and hlt or cmpsl mov aas add leave stos xor mov adc jo int3 sub into xor xchg movsb outsl pop lahf jo repnz xor pop (bad) mov pop popf daa lahf xchg es lods ss lret hlt lret mov scas sub test out mov jle mov aaa ja cli ljmp add pop mov sbb adc add testb test repz pop push cmp call jb test mov xor and xchg xor (bad) push lock nop cmc ds movsb imul xchg and inc sub clc out mov pop sbbl cmp add mov inc (bad) bound push imul movsl mov and (bad) mov cmp push stos stos mov xchg sti in push mov cmp fs cltd pop push test sub xor adc popf addr16 inc loop ja aad xchg xor clc mov mov add popf cmp aaa loope notl inc xor cmp add lock loopne (bad) enter ljmp push mul aas int pop inc test fnstenv xchg jge lock fildll jmp cmp and mov add mov lahf or mov ret cmp lods fstpl test sbb insl inc cmpsb stc pop push mov fmul (bad) xor mov adc (bad) mov scas push aad cmpsl sarb bound jmp jo pop pop push cmova xchg jno xchg jle inc fidiv (bad) dec repz adc out in imul sti loope jns js daa fcompl xor scas and xchg sti dec loop cmpl mov and call mov fs sbb sub lea mov dec aaa push push xor rcrl stc mov push cmc add fs dec dec neg icebp mov or iret adc push adc mov call fisttpl into or dec push sbb lock roll dec inc mov push test or adc sbb pop cwtl rcrb or dec in cmpsb inc arpl dec and mov add adc in sbb inc xor push jne std push cmp arpl (bad) aaa cmpsb or push push push or add or lcall add mov jecxz sub in popa push jne mov andl imul push js popf nop repnz adc push push sar xchg sub mov movsl inc les mov popf and and ss push add adc push enter push xor xchg data16 lret arpl ds mov cmp shlb jnp push leave push mov enter in imul jo dec xorl data16 jne jbe clc adc fsubs mov arpl pop imul xchg mov addl inc mov arpl out xchg cmc fistl popa adc sbb sbbb cld out gs es icebp das push xchg insb inc adc or das (bad) sahf cmp jns cmp add inc add movsb push dec fwait inc test inc inc xchg movsl or mov mov cmp cli add jge movb aad bound xor pushf ss and stos outsl bound inc jbe,pt in xlat push sub clc (bad) ja inc pop inc jl mov jg dec jne dec or sbb sub adc call pushf js xchg popaw notl adc imul push leave sbb sub and lret cmp cmp jg out jne or pop sti jb inc out shr cmp testl mov mov and push mov inc add or mov out mov (bad) jno (bad) sbb xchg sbb cmpsl push sbbl mov and inc xor out jns loopne nop cmp and and mov loop repz pop (bad) mov or jl and push dec imul xchg mov fbstp in stc inc out scas jo fstpl sbb loope iret test sbb iret in xchg lods fisttpll cmp int jne hlt and fldenv dec and insl cltd or addr16 add mov or movd push lcall lret ja sub test or mov pop add out call call out nop cmp enter mov idiv sbb test mov ret lret loope std mov fcoms jns xchg kmovb mov inc jmp mov out sarl xchg lods notb outsb (bad) and jae (bad) xorl xor sub and dec cli fwait jo mov sbb scas lods jae jp cltd xor mov insb jo aaa adc mov push jl add fdivl insb mov in sbb int3 push xchg ds xchg sarl dec pop movsb stc aam sbb andl ret inc int adc imulb sbb mov das mov scas add and jae push popf outsl in add sahf add xor jo (bad) lods sbb cwtl data16 and enter mov aad lea or lahf sbb cmpl push cmpsb xchg insb arpl js icebp jl add mov enter inc jl loope xor xlat xor fisttpl divb xor dec rcrl out cli fs dec mov clc jo inc arpl dec pushf xor dec add fimull (bad) and mov mov lahf pop push lods pop mov add adc cltd cmpsb iret push jg mov xchg mov aad in mov cmc push sbb iret pushf in sbb (bad) dec fidivr dec pop test sub popa outsb cmc lret dec mov out lock inc mov lahf sahf sub jnp mov lds (bad) cmp lods mov add dec movsl fisub mov or jnp (bad) mov jne mov (bad) mov les data16 sub mov pop cmp fnstsw mov cs in data16 enter into out jp pop inc mov dec mov ja dec sub cs sbb push out shl mov stos lock jno repz addl addb sbb aad xchg xor cli sub jnp cld test fsubl xchg mov mov loopne mov sub push mulb dec fdiv in test push mov ljmp cmp clc mov dec iret or stos in mov mov and cmpsb pop stc inc mov sahf and js lret fs dec pop push cmp and outsl pop sub mov arpl xlat push pusha pop outsb daa sub outsb aam mov mov pop jo xchg cmp sbb fwait aad outsl or addr16 and fsubrp pusha jb or and and pusha dec sbb popf fisubl stos (bad) lds jb jb js cmp push leave jns or icebp lea imul stos fs lock roll out jae jecxz jbe scas movsb mov popf repz pop loope fcomip push enter ljmp or pushf movsb loop mov inc scas inc (bad) xor mov add js test popf xchg outsl or in xchg sub vmovhpd adc sub test movsb jp stos in sbb jnp lcall pushf (bad) mov add xchg jmp xchg dec shr std int3 daa xor std mov (bad) out push inc xchg ret ret push or insb mov push xchg (bad) stc gs (bad) mov test (bad) repz push xchg push roll insb and (bad) mov aam sub add movsb cmove pop shll je int3 ja stc das insb sbb loop imul cmp sbb cmp mov loope mov xchg out mov jae ficomp xor dec jne fist in add pop xchg mov fldt dec add push mov lret ss mov pop mov loopne push jge adc jns popf in cmp mov cmp push mov popa mov push lock ss mov and je mov cltd jae pop inc repnz insb mov stos mov outsl arpl dec add adc sbb aaa sbb cmp or adc mov inc mov cmpsl in icebp js inc xor icebp push ljmp push and xor (bad) pop jmp adc cmp add inc pop imul xor mov xor cmp aad xor push clc add outsb xlat imul jmp out adc dec mov xor cmpsl movsl jae sbb mov popf aad popa paddsw and sbb and jno sub movb xchg mov add ljmp inc dec dec leave mov push xchg testb add sub pop xor aad jnp mov aad (bad) or in or cmp push mov add xchg das hlt xchg mov out xchg cwtl (bad) mov cltd fldenv cs push nop test in mov inc mov sub mov sbb dec cmpsb dec push scas fldenv mov inc or jmp mov lock mov cmp push mov or mov call jmp or fs push imul (bad) jp sti data16 pusha jp sub insb nop loopne push sbb or jne enter lods sub js pop push sbb je in push mov js sub idivl add and xchg nop fsts inc jae popl pop dec insl xchg or call test imul jecxz outsb aaa stos adc (bad) xchg cltd mov addr16 sub adc xchg rorl enter pop mov xchg lods aam sub repnz stos add add out mov push movsl lea xchg movsb (bad) int sbbb pop daa sbb jge dec es repz es popa xchg xchg adc stc cli pop outsb das ljmp push xchg sub outsb lea out (bad) cld jmp mov lret inc popa jg,pn mov mov jb cld (bad) lods aaa sub inc dec inc mov (bad) jbe aad out jae xlat cmp inc dec mov jo fisubr xchg or cmp pop clc mov dec jae xor pop add xor call jp iret movsl or cmp jmp push cmp and jae nop notb cld and out (bad) mov leave jns cmp xor out nop popa xchg pop sar and push fadd push frstor out (bad) loopne jns out and mov xchg xchg nop jg jg popf or mov aam movsl mov jae adc mov cmpsl ret sub inc out jg roll sahf cmp xchg fimull cmc test lret mov adc imul jo imul sbb mov xchg gs dec mov fidiv int3 inc dec (bad) leave mov (bad) xchg fsubrs ja inc adc test lret mov sbb add imul ja icebp cmc sahf (bad) jb,pt mov gs cmpsl mov mov repz lea and iret cltd jmp (bad) int3 mov mov xchg sbb inc (bad) hlt mov test dec mov rclb inc sub lods daa xchg and pop xchg loopne mov (bad) fistl xor aad pop arpl pushf daa imull xor fimull jbe pushf inc adcl pop out xchg movsl les stos icebp cmp sub cmpsb or and xchg sub out dec call xchg sub inc jb add jp mov jb jno stos cmp roll ret cld cmp and mov jecxz mov cli dec pop jae outsl call push mov icebp ljmp fidivr fcompl mov mov push ud2 dec je imul push xor fisubr out daa mov imul dec mov cmp ficom adc sub movsb scas mov or mov cwtl mov inc mov in sahf dec cwtl sbb or aas loopne int iret or mov movl mov jbe adc push mov mov adc mov mov pusha aam sub repnz push subl cwtl inc (bad) mov sbb fidivr cwtl add mov jecxz outsb inc mov sarb (bad) pop add push adc xor (bad) outsb fwait (bad) mov jge insb aas sbb (bad) mov ret sbb pop fldt data16 mov mov (bad) dec dec rorl pop jo add add jl sahf fstpt push xchg cmp dec in lods std sahf lods mov sub out jb icebp sub aaa (bad) jns aaa cmp xchg cld push idivb push outsb cmpsb je dec test rorl (bad) jnp adc push sub pop insb push test and (bad) mov add pop pop adc ljmp aas test jmp (bad) sbb jno movsb push xor mov cmp dec pcmpeqb (bad) out pop jnp pop in ret mov adc pop sahf pop cmp addr16 adc mov push mov jmp lock mov pop loopne or imul arpl cmc adc mov pushf mov inc and sbb data16 out pop mov sbb cwtl xchg mov cmp lret je (bad) loopne mov inc add (bad) or cltd pop sbb mov push cs mov push pushf jmp insb mov xchg gs pop dec pop pop push cmpsb loope mov or mov mov push sub xchg stc insb inc inc out mov es mov xchg and imul and xor jle mov out inc fbstp adc mov sti ret cmp pop fcmovnbe xchg push jl cli or adc hlt fwait out outsb mov out ds mov or xchg int3 sub mov addr16 jg cmp adc pop and or insb in icebp sbb mov iret push sub mul mov in sub xchg repz cmp in jp jns mov mov sub enter dec pop sub loop fistpl inc cmc nop sub sub clc sahf cwtl ja adcl gs sub loope outsb cli mov push (bad) addr16 mov mov mov dec mov dec and push shr lods stos add idivl inc divl mov imul mov pop sub popa dec push mov lcall ds ret out cmpsb push jmp add push cs sbb xchg fucom mov mov jns inc test ror in outsl outsb movsl pop fsubrs mov xchg inc jge enter leave fs push test insl mov pushf enter cwtl cs shlb ja bound mov andb call hlt bound or out adc cmp pop mov cmp gs adc daa enter hlt dec mov cld insb andl jp adcb mov pop sbb and aad addr16 pop sub xchg mov mov mov push mov call xchg incl dec sahf mov lcall js dec jg pusha pop sub pop out mov out std adc pop mov fsts int3 movsl lret push dec js hlt in mov mov jno adc pusha xchg in push and pop sub xor je jle loopne xor cs mov adc sbb cld hlt jns es add daa (bad) fcmovnu pushf jo lret mov mov lcall mov mov leave fild pop enter es xor mov xchg (bad) rcll mov shlb mov mov sbb xchg stos and lds fstpt test pop insb sbb loop jne sub and xchg lret mov call aad js inc or adcb inc mov jb out cmp mov (bad) mov hlt mov push add ja fdivrs mov aaa adc lret and lock and mov outsl xchg aas jae pop mov mov mov dec stos data16 imulb pop sbb js mov pop or xchg mov xlat outsl cld sbb jb xchg inc mov mov cltd add lret repz xor inc fldenv inc sbb test rolb cwtl mov or mov fidivr xor sub fstl stc mov mov mov je mov mov test outsl push (bad) cmc and and cltd dec fild inc lods fnsave pop loopne adc repz xor loop jg mov mov (bad) repnz push (bad) jae fldcw test add mov xor ret inc push pop fdivrp lret outsl inc push (bad) icebp mov icebp mov ret leave clc add inc push xchg push jns pop sti cmp sbb sub sub sbbl fidivl xor repz and sbb or pop mov cmpsl cs xor push inc xchg es mov cmp mov sbb test sbb (bad) jns (bad) push jae aaa insb xchg dec dec sbb add stc or int xchg jns jb jp push pushf cmp pop cmp outsl xor xor addr16 imulb and pop adc and mov jle insl xchg rclb mov mov dec cmpsl rorl imul mov (bad) xchg iret (bad) movl jbe xchg repz (bad) xor and bound pop imul pop push pushf add call add mov stc xor xchg or mov inc lea stos ds lret push scas test andb adc into int3 jp push mov push and or push fistl inc fdivl and and lock sub lret fidivrl mov xchg addr16 sti and in inc push addb (bad) lea sbb mov hlt jbe scas dec pop sbb (bad) jmp int3 (bad) jbe pop mov and sub xor js jl cmp loopne aam lods test ja xor (bad) popf and aad rolb out mov out fmul sub cmpl lock sub outsl push ret decb xor pop aaa and jg rclb xor push inc lods shl inc dec popl sub ss add or sub (bad) mov inc subl pop push adc inc out mov stc mov lock mov nop into push aas gs sbb (bad) test loopne sub mov sub xchg ret psrld ss shrl jae add push dec ljmp rcr pop push or push xor mov fldenv cli stos jl sub fcompl mov cmp fbld jge inc push xor push xor inc iret (bad) insl lods adc jg mov popa mov decl xor out int xor or lahf (bad) and loop dec xchg xor jecxz fstps dec call aas add lcall (bad) mov and insb dec fildl push aas and pop push push pop inc popa sahf cmpsl iret cmp popa (bad) fidivr mov jle mov ret inc and in xchg push cmp xchg jbe (bad) xor and mov rcll pop pop ljmp sub or mov xor or lcall movsb imul aaa lcall jb inc push mov mov mov (bad) sbb xor push mov cmp jno inc inc jecxz dec rcll ljmp jns push maskmovq (bad) dec scas leave pop xchg jae push jecxz xchg popa add lds lock inc stos adc sub add lcall andl (bad) jae sti in jmp ret imul mov out lret jne mov jns out lret sub movsl cmpsl mov imul into loope shr sti mov pusha push or dec test (bad) mov std jmp dec jge into mov pop fmull cmc push insb mov xchg sub jmp imul pop cmp jecxz ficom cld jne push hlt fdivs ja cwtl push sti mov leave rcrl xor es or cltd dec xchg fsts or xor addr16 and movsb mov movsb bound cmp xor sub push inc sbbb pop pop outsl sub xor (bad) cmc shrl call gs cmp aam std test push fwait jae mov mov mov lods iret push pop xor cmc pop pop fxch or dec fwait (bad) inc cmp sbbl loopne cmpl lea idiv popa adc scas cwtl adc lcall mov dec in cmp js cmp aas scas jmp leave psubd scas push cmp lods (bad) fidiv pop sahf mov push cltd (bad) lret xchg rolb or push adc push gs push aas or fisttpl outsb adcl fiaddl xor test popf sbb test mov in pop (bad) ficompl leave inc push daa push mov imul adc sbb push add aaa mov cmp xor int je testl stos adc adc pop bswap pop jae push sbb mov loope aas xorl adc outsb aam mov cmpsl xor mov cmp ds xor mov mov xor xchg cld dec outsl inc xor add cmp test mov push (bad) aas and xchg (bad) dec sar dec pop aas or push popa mov sbb (bad) insb pop mov cmpsb fnstsw popf out fdivrl xor imul pop cmp ja mov inc in add outsb cmp in pop push pop iret pop pusha ja cmpsl jmp mov clc sub adc scas (bad) push jae xor sbb test in sbb push sbb ret or xchg pop rorb jno jmp xor inc into dec hlt je (bad) rcrl push dec call ja fisttpl (bad) cmpsb mov sbb movsb add into leave push inc push enter (bad) or cmpsb xchg jo ja ja adc lahf xorl mov push push ret push orl mov arpl push test ficompl fs add mov and fiaddl cwtl adc stos js pop (bad) sbb std inc es fdivl push cmp adc cmpsb cmp mov cld or inc pop dec leave out lret outsb inc dec xlat dec aad dec xor cmp xor pop cmpsb mov add cmp mov in sbb into das int or dec arpl mov dec cli fwait cs fxch bound movsb adc fcmovnu pop push (bad) pusha lods or mov xchg mov mov mov fs xchg hlt pop in test aaa push sub mov xchg (bad) adc test loope mov jns jo ds pop hlt jg fidivr adc (bad) cmp call inc adc je leave stos out cmc daa in insb clc scas or lock (bad) lahf movb nop enter (bad) lea lret dec jae pop insl es xchg movsl pop imul neg daa stos pushf xor xor xchg ficompl pop dec imul mov (bad) jnp inc mov mov xor out fs jae cmpsl test xchg test movsb sbb (bad) faddl adc xor es dec push pop adc mov outsl mov rolb push sar (bad) xor aaa outsb ret xor mov push lods divb outsb enter xor int mov lret inc jo mov dec jp mov dec adc mov rcrb daa out mov sarl pop (bad) icebp aad data16 jg xchg stos dec jmp icebp jmp mov scas or push inc adc add jb (bad) (bad) mov repz dec insb or add pop icebp in push and gs mov outsb dec out xlat bound insl push stc mov cwtl sub into mov sarb mov and xor movq jg ret mov test shrl jge sti mov in fwait mov pop aas add mov push cld mov mov cmc loop (bad) push gs lods hlt arpl (bad) ljmp cld xor adc into sbb ret mov pop loope addb pop fstl pop jg into ficoml mov xlat inc mov jno push mov ja (bad) movsb mov movsl insb cmp dec xchg or fldt (bad) (bad) mov imul mov cmp or push cmc fldt es inc xor lret nopl dec or mov push stos std rolb popf xor xchg mov sbb and aam jo push jne int xor fwait cmp inc std mov dec inc repz jno mov in dec pop (bad) jb jno fwait xor (bad) gs add nop insb paddw aas mov cmp xchg mov scas std lods aas vmovdqa repz icebp pop notl (bad) shr sti adc movsl mov repz sbb mov sub (bad) and cmp fistl (bad) mov lea push mov int3 sbb cltd test jno out mull in inc test cmp mov movsb xor xchg or cs sbb imul mov into xchg xlat aam repnz mov xchg lods ret es xor leave sbb in jo idiv mov and (bad) repnz push push pusha mov (bad) dec lret aad sub stos xchg insl scas adc lret sbb mov and aad and xor jo dec icebp sbb test or jbe lcall add jp cmp and rcll icebp push lods jl aas dec dec inc pop aad pop imul fbstp xor push rolb jne cmc jno push dec fs inc stos mov test lret xchg dec add addr16 mov mov and lcall outsb and pop rcrb inc test test (bad) fistpll (bad) jmp clc sub dec aaa aam cwtl (bad) ja jl jl lret mov adc or dec ljmp mov stos mov mov xlat psllq jnp sub (bad) loopne popf mov iret xlat push push es jnp lock rcll push aas push outsl sub addb xchg sbb inc (bad) sbb push clc pusha dec push and sbb sub (bad) data16 and mov stos insl stos push in or xlat inc mov sub inc pop pop loopne inc outsb xor call mov jae push dec jle adc sub test sub addl cltd cli sub test push (bad) jge add sbb daa lods lock stc insl sbb push movzwl shr sti outsl sbbl popf cmpl fcmove jl sarb pop mov fwait rcl int es adc into inc inc adc out movsl rclb aad xchg mov test sbb sbb dec insb clc (bad) cwtl leave daa inc out loopne ss sbb arpl lods in pop jb xor in mov ret sbb rorb push inc nop pop rorb out cmp es fmull pushl gs aas fdivrs jle add pop sub cli lea outsl int inc inc movsl dec sbb pop cmpsb dec popa shrl fwait cmc call pop push or fucomp cmp out xchg or jae (bad) popa cli or ljmp inc cmp rorb in shl (bad) mov (bad) vunpcklpd je or push daa xchg cmp push cli mov lds les outsl add dec mov cli push das mov pop cltd insb pusha dec push xchg push int3 sub dec pop test (bad) es lods mov adc jmp sub jecxz jb mov adc push pop push js leave movsb jge or cmp in mov decb or inc test fisttpll loopne sub fstpl repnz subl lea scas add inc popa aas daa or movsb push lcall mov push mov pop jno (bad) jnp jmp (bad) sub push cld xlat pop lea jne pop stos mov (bad) xchg sub cmpsl inc (bad) or add sahf jle xchg popa cwtl push fucomip ss adc or xlat mov mov mov fldt test ja aas push fs xlat sub imul enter pop test xor mov outsb mov sbb or sub out mov fnstcw sub jne mov nop jmp rcr sti pop add (bad) repz clc div cmp mov mov push add mov les outsb fstl jecxz in in out cmpsb xor push (bad) movsb mov or jno sub insb or in movb fldl2e lock and lods inc mov fcompl mov sbb mov hlt mov mov push popa dec rcrl xlat mov jb jb test pop outsl and mov rorl jns lret ret bound lret push movsb out addr16 xor stc push inc push jg inc sahf popf es in aas (bad) mov sbb in mov or jne cmovnp lods xchg inc inc roll pop cmp out xlat mov rorb inc mov cmp inc inc daa jle (bad) test jae ljmp mov sub xchg push in dec mov stos popa insl movsb insl pop mov push lret pop push lods jno push aaa arpl jnp stos mov sub sti xchg fs xor xchg or fildl cli jae out iret jl and in adc jmp xchg fnstsw js test sbb mov std sbb mov (bad) arpl mov xlat push stos in pop ret sarb outsb xchg das ret push fwait xchg repnz (bad) idivb and pop sbb bound pusha mov outsl shufps fcomp jns call xchg push jmp mov xor xchg dec or mov mulb shl in cmp js sub lret push xor jge jo in adc hlt xchg push loopne mov and imull (bad) in push push leave push outsl xor xor mov aad stc btr es flds gs mov out lods jo inc ficoml xchg hlt sbb inc xor (bad) cmp into (bad) leave ficoml inc inc stos dec mov std mov mov fidivr xor pop lds dec mov jo lea inc out push cwtl (bad) icebp cmpsl jb jae mov sub in or mov daa xchg xchg nop xor nop and mov or into pop or js aaa fxch stc ret mov jmp stos sbb sbb adc outsl ret mov loopne mov popf flds adc test jp fidivrl ja inc enter xchg sbb lahf cmp push or in fidivl mov mov aas ret (bad) aam pushf lahf xor int cmp cmp xchg fxch es lods lea add (bad) ret adc int3 movsb (bad) cmpsb fdivrp push inc or fldl in sbb and loop imul mov jno in mov cmpsb clc pop xchg in lahf (bad) jbe pushf and fnsave in xchg cmp jmp test dec call jp pusha adcl pop add xchg mov loopne lds mov lahf xorl cmpsl aam cltd fistl sbb xlat into int3 ja shrb mov sub notl and mov push and out movsb mov cld inc clc stos add es repz push add jbe lret push out pop sbb pop sbb and movb add popa lcall lret pop xchg orb xchg push lods jp pop adc and sub test mov dec xchg mov lret testl and push pop insl cmp inc lods jnp pop dec push popa out das adc xchg inc cmp lods popl out testl dec push mov dec sahf push xor pop mov mov push es std jecxz fwait sbb inc outsl xchg jge (bad) jnp push les clc lcall mov push xlat adc dec or or fbld pop pop xchg mov push cmp fs mov sub jp jns push pop fwait loope (bad) xchg decl xor repz add sub and out (bad) mov jno xor mov mov xchg and adc ficoml clc and dec sub adc or fildll cli push mov mov sbb cmp mov xor loop dec inc orl dec in dec or insb inc and cmp xchg data16 test ret dec push fs dec inc adc inc into dec and jbe mov and mov lret mov hlt and jp popf test ss mov adc daa ret mov push push inc and cmp xchg sti aaa sub je std test cmp dec (bad) lea jne or jae lods sbb fldcw hlt lahf xchg shll mov test sbb jnp jg js or cli test lea sarb out push mov mov mov mov dec gs pop pop ljmp inc jnp sbb mov or push movsl lods or popa inc pop adc adc push loope dec add pop sub mov sub pop xor rcll mov out inc pop mov mulb mov int3 outsl xchg test mov dec cmc hlt fmul arpl pop or repz mov rolb icebp stos mov int (bad) mov mov in sti dec pop pop sarb (bad) cmc mov rolb int dec mov aas outsb std sbb sub aam cmp daa and sbb dec xchg push iret dec add loopne in mov test sbb (bad) lods cmpsl ret je xchg pop sbb sub stos in push fwait mov or mov iret jnp js push (bad) cld icebp lahf xor xlat xchg (bad) call mov ja inc imul cmp (bad) out lea or sbb push inc jns loop jle mov loopne cmp js pop sub scas enter add inc (bad) cmc mov xlat xchg xchg lcall inc insl shlb mov jg insb lahf jp or stc push in (bad) call rorb jg xor lahf insb sbb test in imul data16 loop sbbb mov mov or or mov jl scas out sti outsb stos sbb adc fistl pop das add or mov js aaa lds jnp jns sub (bad) ret fwait xor cmp int3 cmc push inc fidiv cli jne xchg fdivrl cmp fsubs lret icebp pop sbb xchg inc xor data16 sub add das int3 xor inc shr inc xchg push data16 test je dec fwait pop lds fisub add (bad) dec sbb cld test and sbb dec push imul push scas lret fsubrs mov xor adc jecxz out (bad) mov xchg jge lret out inc sub sbb pushf sbb adc or rcrb lods sub dec stos hlt bts inc nop inc imul inc ror daa push data16 lcall pushf mov push or push or fldenv or rcrb and imul mov enter or pushf cwtl cmpsl into out cld int xchg mov lods test popf lds sbb jae call sub into sbb movsl pop add cmpsb cmpsl sbb ja movsb pushf cmc or call jnp and insb in (bad) cwtl cwtl daa jg int mov mov or adc cmp push mov mov cmc cmp imulb or in hlt dec lcall int fdivl sub wrmsr xchg inc popf int outsb in call fcoml aam pop add das or xor mov jbe frstor dec ljmp das test lret fstpt adc dec iret call ror pop dec iret aam (bad) pop inc sbb push fcmovbe sub das jge dec das arpl add cmc pop mov in mov adc mov faddp xor push call push into xchg dec ss pop jbe dec inc and ja sub pop push jne sbb cmp movsl rcll (bad) mov lods sbb cmp lahf es mov inc sub adc xor sbb test popa mov add xchg jae mov adc xchg fbstp hlt movsl popf mov in in rol rolb pusha loopne or icebp aad lea dec testl dec in rcrb mov scas scas jecxz mov lret inc cli mov dec rcl mov ljmp roll mov (bad) dec and push nop push pop or mov loop mov inc mov inc inc rol inc adc add pop and mov data16 lcall cld into nop call ret sub mov sbb in nop ss iret push jo fimull out jle (bad) pop inc add (bad) rclb pop js jmp lods popf dec mov pop push (bad) lock push faddp add mov sub jb fsubl movsl std push push (bad) aas and jle rcr sbb pop (bad) sbb sub outsb fs fnsave cmp xchg std fs add jb aaa mov dec sub mov negb cmp mov mov dec movsb pop push stc xor and (bad) xchg sbb mov (bad) fcoms pop fistpl insl das dec xor insl jno gs stc dec mov mov push icebp mov je and sbb in lods std roll pop xchg aas and sbb dec adc lds test rolb das xchg and lea cmpsb add mov dec call ret cs adc incl mov mov notl pop (bad) aaa mov (bad) out push outsb push outsl xchg jno scas dec push std add ucomiss ret and cltd xor push mov add aas lcall push jae sub nop inc mov rorb inc cmpsl jb insb mov sub fwait call lds push jbe call adc inc call es pop mov dec push or mov sbb sub ds insl arpl in xchg push lcall mov jo lods push xor mov push in mov inc mov sbb stc xor xor adc (bad) divb push or mov fdivr (bad) into mov mov cmp daa pop call inc and dec dec pusha pop push xchg push cmp push or sub mov mov inc pushf or std dec xchg adc jae ret stos cmp mov test stc cwtl pop pop mov mov xchg add enter push sub xorb push mov movsb inc fcomps xor std repz bound (bad) xor mov and jge in sub data16 scas sub outsb cmpsb movq fistp and mov pusha in dec (bad) in inc xchg orl mov lds add scas jp dec pop shrb sbb adc je loopne dec pop pop addr16 (bad) lods outsl jmp sbb enter dec dec add in cld push mov loopne push sti movsl lcall xchg jne (bad) stc xor dec ret stos add mov xchg lcall pop into add xor je mov sar or add decl fs dec push popf inc mov ja loop jns push jno jae outsl inc insl aas mov (bad) hlt inc xchg out mov sub dec add or inc rcrl cmp push add xor outsl push lea sbb arpl daa fadds mov pop out ret mov pusha ret jbe (bad) popa aas push mov push cmp lret mov push xor xlat in cwtl enter stc pushf out sub sbb mov jae lahf pop lret add push mov jne mov mov or inc sub cmovs mov pushf (bad) lods jne adcl popa add pop or xchg push cmp cmp lcall jne mov mov lods je imul inc and xor lret mov mov nop lea movsb cld cmpsb mov mov loopne push sub mov dec adc mov lret pop mov cmpsb call or push mov stos pop add out mov xor xchg xor fs sub sbb jo mov xor stc clc sub lods fiaddl aaa push jg push mov mov js xor lret xchg dec lock dec jge jo nop subb mov jbe sbb pop push (bad) das mov lods xor or adc push cmp inc (bad) fstpt scas je mov xor test mov pop mov cld cmpsb repnz into imull fdivrl jl mov pop outsl test adc mov (bad) mov (bad) push push enter icebp popa pop lods cmp test add mov or jle cmp notl hlt (bad) ja mov lods repnz lds scas cs sub ret cmpsl mov call loope sub cld and lahf sarb push fnclex mov push jae or mov sub arpl (bad) xor push pop sbb inc jecxz xchg rorb jne jnp mov sbb fwait dec cmp aas push cmp push outsl inc xchg lods es and pusha xchg scas call mov dec add dec mov insl push out (bad) mov shrb jg clc stc push xchg loop mov xchg outsb cmp pushf aaa cmpsl sub xor in cld and in stc ffreep gs bnd inc ja shrl mov push jns or cld aam push notl and mov cmp movsl sub aad mov mov xorl test and jae rcr pusha push test inc adc push bound push xor dec mov (bad) xchg mov and out push xchg mov adc push xchg ja je mov dec ljmp pushf test rolb jmp lret jecxz (bad) xchg mov rcrb mov rcll jbe cmp sbb fs sarb xor jno xchg jg sbb shr xchg sub cmpsb aam iret push add or adc pop aad shrb out jb aam sti xorl stos (bad) aam sub xchg in test cmp inc aas push andb sub xor cmp je std out fimull mov sub stc ds in mov mov arpl sub pop inc push add pop (bad) adc mov mov out sbb add sete or pop jp into imul cmc mov sbbb popa icebp xor add outsl in ss ja lods shr dec jo mov stos aas xchg mov rclb call adc out repz fstps mov sbb jnp sbb mov fisubl (bad) jp jae inc mov das addr16 (bad) gs add mov aam fadds mov fprem1 rcr jecxz pop pop scas ljmp add or or aad stos lock dec std inc pop mov lods int or cmp mov adc and adcl mov test jp jmp div inc xchg cwtl popl jge jb jno (bad) insb pop or (bad) cmc cld inc pop movsb stos insb shlb jp lahf sub inc push inc setno inc jl bound cmp adc inc data16 daa scas xor lock ljmp fs jne and xor jge stos aas push aas push (bad) dec mov pop jecxz xchg mov (bad) fs or xorb insb or mov push aad iret add enter call xchg mov out rcrb mov adc push in lds das mov jne xchg xor mov mov add (bad) stos add dec pop insb jecxz or imul je int repnz inc rolb mov in jl jle sahf inc jg inc cmp add incl push jge aad fistpl pop enter imul (bad) xchg fsubs loop ret mov cwtl stos js js inc fisttp mov xchg mov add inc mov cmp inc out je call mov leave jb xor stos into out (bad) and push sti jge dec or xor jb out aas les repnz cmp (bad) iret lock stos or sub mov dec inc dec ficom push lret inc mov icebp inc das and movsb lods xchg mov test addr16 and (bad) (bad) sbb ds fistpll std test pop jo fs jmp in xor loope dec call add jge bound adc test jae ss jbe xor pop push mov pavgb test (bad) mov mov sbb (bad) in mov mov and xchg cmpsb pushf int3 repz lods cwtl arpl bound pop ret (bad) ljmp rcrb mov or mov add adc mov jle pop fild jl inc mov clc inc adc lods sub insb push push inc rep mov jp jl mov pop adc (bad) xchg ret and pop outsb cwtl idivl fistpl sub outsl or hlt je xchg add cmp jnp iret popf xchg hlt test xchg int3 pop ds testb mov roll scas das lret xor js pusha jne mov bnd hlt add inc jle movsl pop stc ss inc (bad) fsubrl push pop test popa jns jg popf mov loop cmp hlt sbb push jnp test xor movsb pop push or (bad) cmp lods das xor add mov outsl pop call jge and sbb adcl ret and sarb cs not jnp sbbl xchg in add (bad) enter test pop sbb outsl jnp mov out mov clc fwait push (bad) fdivrl inc mov fucom orl repz mov jb loope and jmp xor adc lods stc mov and pusha addr16 xchg push and sarb pop shll mov or sbb pop stos pop mov call testb pop faddl into into (bad) sbb (bad) or mov inc fcomps sbb sbb mov lahf (bad) sbb popf mov ret push stos jo (bad) cmpsl push mov xchg mov cmc inc ja xor fdivl call or hlt mov mov jp and mov iret sub mov test lock movsb mov roll fstpt mov or xor or pushf xchg incl (bad) jg scas lods sbb mov icebp loope test mov das and fs (bad) iret and (bad) outsl icebp sub sub fstpl inc push push adc (bad) jae xchg aaa or push stos (bad) stos xor les jo pop mov repz outsb mov sbb insb fisubrl sub inc nop subl in int inc pop or and outsb or cmp push push out out xchg mov inc jns jbe push les xchg cltd pop pop lcall shr (bad) xor out loope je and fs in rclb dec daa and add inc iret xor mov mov sbb push cmp pop sub dec (bad) cmp and imul stos pop mov push or or mov mov iret out aam cmp rcll or and out aaa dec mov movsl mov movsb divl push leave stos xchg jae jle cmp adc lods sub ret iret jbe pop jne xlat shr sti pop mov mov dec cs jg or fbstp pop stos rorb rcrb dec add out (bad) mov dec sti xor add jmp xchg mov inc cwtl dec dec xor pop and push cmp xor aad movsb clc pusha fstl stos mov inc sti add inc push addr16 mov add mov (bad) aaa add xor call push in aaa mov jnp daa mov addr16 js jo xor shlb int out dec sub cmp sahf mov pop inc pusha add jecxz outsl push xchg mov pop in dec mov sub and cmc xchg dec les sbb cmc jp in (bad) xor xor nop fsubl dec dec fsubl add dec inc movsb insb data16 aam jnp dec jno push or fcmovbe add fcomps out fldt (bad) hlt mov cmp add pop sbb je push jl xorb fwait cld ja test insl pop int jmp arpl inc shr cwtl push ss push ljmp pop adc pop call call mov inc addr16 bound sub bnd out aaa jmp pop bswap cmp pop adc arpl icebp dec add (bad) inc mov nop int3 pop iret in cmpsb arpl nop testb (bad) mov jmp jno ljmp bound pop sub rclb lret out sahf add jno jle bnd movsb loopne mov mov js or add data16 jb (bad) or cmc mov fs sarb andb sbb mov lea cmp cmp sbb adc push jmp loope xchg inc inc mov mov (bad) jmp push mov pushf lods pop loope jne dec cwtl dec fiadd rorl sub fwait and sub pop movsl rcrl mov cmpsb mov sarb sbb sub add int3 inc test dec clc inc inc mov ret or xlat in in loop outsl movsl dec or ret fisttp add lret data16 je (bad) xor andb mov in mov adc xor rcrb ret push mov push lret aad js das out xor add xor push jae pop push mov push cltd in jae mov fildll inc dec fucom ljmp xchg inc (bad) repz mov jmp xchg fist out adc popl ret jge jle sbb jno loopne fadds mov fisttp inc push (bad) sti push pop rcrl mov cmp leave rcrl mov ret (bad) ficom arpl pop and cli add mov jno mov test fucom cmp sbb iret aaa push jg repz mov js cli int pop inc push fistl sub pop rol cmp gs jo cmp not call cmpsb arpl xor xchg or int lods cmp test sbb rcl addr16 out xchg push and or lods in jae inc inc mov and je insb ret shrb push popf aad call movsb (bad) adc jp xchg rcrl je xchg mov or (bad) mov fmul loopne mov mov jo pop cmpsb inc mov mov cmp adc pushl lea jb aas xor lea cmp dec setno pushf jmp lods jns aaa adc inc ficoml sbb stc xlat lahf in dec test mov mov les sbb insl int shrb daa (bad) mov pop mov push lods jp inc out sti outsl in ret int mov cs loopne fwait jae mov or repz push mov in push mul movsb call push xor xchg aas push stos and cltd out test cmp jge rcrl and cmp stos xor push or mov jecxz mov inc dec in sub mov inc repnz pushf or jbe or insl shrb cli inc mov fbld lods pop rolb add je outsl fs gs imul add and test add jmp mov pop inc pop xor xchg fmull es je repnz pop push bound js sub int3 iret aaa jle out sub xchg cmp aaa lcall and pop mov and push in stos stc jle lds out cltd loope xchg lahf out push xchg xor inc add mov pusha into inc mov imul xlat push or xchg lods adc xchg mov push adc sub push outsb rcll xor inc in repz stos (bad) les cmp negb xor push test mov mov nop mov xor hlt mov mov aad sti fwait mov sbb sar mov (bad) lahf xchg adc adc (bad) (bad) jbe aam dec mov push lahf (bad) cmp movsb cmpl je cs stos jmp pop ss loop and mov aam dec outsl mov subl lahf test xchg jae jo sbb enter sbb and and pop pushf lock pop xchg push and push lcall sub daa fwait xchg (bad) leave inc mov cmp dec loop shrl fs mov pushl movsbw pusha movsbw lea push push pushf call cmp pop inc hlt psraw xchg pusha push dec mov pop orl mov mov into fsubl dec iret por xchg pop or inc xchg into out lds pop cwtl xchg push fnstenv xchg jg test aad cli xchg pop inc inc mov mov push lods in dec pop xor push push mov fnstsw add clc (bad) cmp (bad) adc cltd inc cmp adc fistp inc cmpb jno int xor ja fwait jae shll shl outsb add add pushf fwait mov mov add fildll int push jno test lahf fildl popa mov rorb mov add or push mov xchg insb dec es mov sub in fst pop fcmovnb dec and outsb mov pusha fsts xor outsl ja mov js leave scas ficoml into out mov mov xor in lret push outsb jmp and pop aaa add push adc pushl lea jae lea movsbw cmp or pop or adc bt pop movzbw setp movzbw movzbw mov xor aad bsf cmp bswap mov pushf push call clc sub pushf mov push pusha pushf stos pushl push lea jmp add or call lea jmp cmp call pop cmpsb outsl mov fmuls mov sbb (bad) sti loop cwtl xchg movsb leave push pop call sbb cmc mov mov jge popa popa jae jns pop and jno fldl pop ja jno xor cli xor mov adc aas xor in jno sub out mov mov test push cmp insb jne lds sub cmp push push cmp (bad) mov or bound sbb xchg (bad) stos jl pop test (bad) jge pop xlat jge je int3 or les and test mov outsb mulb add clc pusha jmp lea je clc call jmp inc mov and mov movsb xor out adc adc outsb lods push std movsl in cmc divb bound js cli stos push xor bound into mov pop mov pop sbb lds daa dec out (bad) enter jne push lds fcmovnb inc faddl icebp out cltd sbb or ja xchg popa ffree pusha mov adc dec pop mov sbb xchg popf push mov pop lock (bad) loop sub pop outsb roll jb out cmp cmc or stos mov out aas roll push dec or xchg jae dec jmp push mov das popa mov pop inc mov push sbb mov pop outsb inc inc aas mov xor add aad stos mov subl adc sahf push and pop clc div adc (bad) mov and dec (bad) repz cmc fdivl push jecxz repnz popf sbb notb xor pop xor xor subl pop sbb daa jle add leave sbbb out iret dec xor das and aad scas std pop mov mov cmp daa int3 xchg (bad) sti cmpb popf (bad) lcall xchg call jle popf xchg xchg ja das hlt and pop inc jle decl repnz push mov call sti cwtl ss inc loope (bad) lcall in aas or mul xor adc int jnp cmp imul xchg test push adc xchg loop stc mov fldt xor stos mov pop pop inc ret or iret xor (bad) lea pushf jne mov punpcklbw jl pop loop gs std add arpl push out ljmp and movsb loopne dec mov sti por xor inc pop inc repz sbb imul mov cld push sub in sub pop inc push cmp xor sarb mov rclb mov es or xor por popa pop inc repz lods jge (bad) repnz push or cmp mov insb stos pusha jmp dec das (bad) ljmp mov jecxz gs pusha cmp jne add mov or imull push adc mov xor lahf cmc aad xchg cmc jae add dec jo punpckldq inc enter movsl cmpsb mov cmpl daa loopne loope enter test sub xchg mov dec or xor mov mov stos and loopne sbb inc sub adc fisubl or cmp (bad) jmp xchg stc and scas xlat icebp sbb popf sub insb arpl mov mov jne lret popa sahf js mov mov xor inc roll stos cltd xchg inc daa fiadd xlat sbb test outsl mov mov mov mov daa inc jb mov mov jle loopne loop push add cmp sbb and push decl enter push inc imul loope push (bad) sbb pusha lods aaa jge pop cmp (bad) test mov mov pop inc cwtl repz adc pop (bad) xor sbb sub inc stos xor sbb cwtl mov xchg xchg pop jg (bad) cmp dec inc in (bad) ja nop pop test jmp movsl jmp add pop cmp dec dec (bad) mov mov dec stos movsb shrb lds mov es cltd sbb mov out adc je sub mov outsb enter xchg (bad) adc stos ja insl pop nop pop pop dec dec mul in xchg adc cmc mov add cmpsb hlt push jle cmp pop in or icebp jnp push rcrl lcall mov sub outsb xchg andb cmc pushf test jmp pop pop push rcrb pop inc inc dec push pop shl or push add lret jge aas lahf pop sti daa sub fsubrl mov or icebp add mov jmp mov test fist stos cwtl arpl sarb mov fisttp imul scas mul sub dec dec or scas and leave sti xchg jo lcall test ja ficoml adc rcl mov cmc testb mov test in push jecxz in movsl jbe mov sahf cli aaa jbe (bad) lcall out mov sub sbb jp cmp add mov adc stos mov lea jmp mov pusha cmp call xor icebp and pop inc jnp lock xor insl adc rorb xchg andl cltd and pop or cltd cmp jne mov pop xchg adc push stos adc pop xor push push clc (bad) ja inc pop cmp out jno out les push push js xchg cld fnsave add sete sbb lcall pop ret bound icebp test cmp push add lret xchg mov inc cmc ja pop icebp pop or shrl cmp inc mov pushf adc xor ret pop inc inc sub pop scas add lock mov sbb pop repnz bound mov imul jmp or xchg jle sarl xchg lea inc (bad) jo test add xchg lcall xlat push (bad) cmp pop cmpsl xor sbb mov scas or dec xchg jecxz cli bound dec jno and call sbb pop rcll adc adc (bad) pushf pop mov js cmc xlat sahf cwtl int imul pushf nop fistp insb nop xor dec into int insb pushf add inc daa cltd cmpsl jmp and jmp movw movb lea je cmc pusha cmp call sbb inc lods aaa mov movsl and icebp fstps or fldt add sub and push push movsb xchg add adc ss rcrb ret loop (bad) lret pop xchg pop lods (bad) aaa imul decb add mov js iret xchg xor mov push sub jp pop jbe mov scas cmpsb inc dec iret rorl movsb adc js aam lcall negb xchg pop fbld sbb data16 cli addr16 xchg ja and push dec loopne or mov test push jmp add push pushl pushf pusha lea jmp not jmp icebp (bad) call insl xchg out ret rcrb ret sahf les mov sbb fs movsb inc repnz jge (bad) repz iret mov dec daa mull out cmp rorl push jnp lret push mov out imul lahf sub mov jmp rcrl mov mov imul or outsb inc mov pusha out xor or (bad) in adcb dec test sub add fldenv push pusha jl or stc xchg mov pop inc jb or sub dec mov xchg nop jnp stos mov xchg mov ret jl xchg jg negl dec stos js fisubrl and lds xor adc je out sbb (bad) cld or gs sbb xor sbb mov pushf add cmpsb sub (bad) xlat outsb (bad) xchg sbb inc movsb and adc mov sub (bad) xor iret xchg (bad) cmc testb mov adc cld push jb jmp cwtl or pop inc lcall popf idivl ss pop scas xchg ljmp (bad) cmc (bad) int3 mov daa addr16 aaa sub fwait xor fisttp inc xlat out pop lea push sub xchg add pushf jg dec imul (bad) xchg lds repnz (bad) in add sbb push or sbb dec mov xchg inc mov std andl cmp dec arpl iret mov mov or icebp xchg and clc mov test cmpsb pop imul scas xorl or xchg movaps movsb push and mov test testb or negl stc out mov ja mov dec and dec pop add popf lea in jle test repz inc mov adc mov icebp fmul movsb dec xor mov sub repz mulb pop mov (bad) jnp idivl (bad) lods or test loope cmp mov dec fdivl in xchg call bswap lea movsbw movzbl mov jmp mov pop inc fidivl jns pop xor setge scas pop mov inc test xor cltd push mov mov add lds gs enter stos push (bad) stos push mov xchg dec sub push xchg pop mov in sbb and cmpsl insb adc cmpsl int dec pop sahf stc aas das negb mov adc cmp nop imul jle mov add sub out lret jp xor push mov dec aam mov cmpsb push add sbb out sahf sahf push aad cmp xchg add mov ss int3 sbb fldt sbb dec mov push inc loopne and jmp push jmp push lods jns pop inc out je clc sbb fs pop stos movsb stos (bad) pushf test repnz mov ljmp pop add loop in adc adc (bad) repz mov nopl inc mov mov push outsb cmp and mov rorb dec adc and pop leave imul and int jbe lods je arpl sub dec scas mov mov jp (bad) mov pop pop insb pop inc cmp imul (bad) sbb test sub jne movsb and pushf daa lea cwtl (bad) jnp mov xchg in push pusha pusha movb pushl ret fidivrl lds and inc dec and enter mov leave sub xor insl cmpsl push repnz (bad) jb dec iret jbe loope (bad) into int3 pop movsb lcall test jg adc imul push aad inc fisub pop mov pop ret mov mov rcrb push loope pop sub inc gs jns outsl scas out inc sub in (bad) jmp fdivs clc xchg cmp into jae sbb test fistl cmp in js jp mov imul cld push into repnz add fsubr sbb pop lds xchg aaa inc inc adc adc xchg or inc adc pop aaa jg mov push in cmp aam mov sbb fs ljmp dec aad fnstenv sbb comiss aam call mov loop and imul leave jmp fldl2t sbb xor leave pop insb (bad) ds add inc das movsl or aas rcrb sti loope cltd (bad) test sar popf jne adc xchg lea call call add mov call add pop ret xchg call pushf pushl push lea jb aad inc mov push pushf cmp sub setg pushf mov call pushl pushf mov push jmp not rep movsbl movsbw movsbl lea pop mov jmp movw lea push lea jmp pop xlat add mull add xchg jp pop adc xor js pop cwtl mov push and inc int les mov mov call in cmp push dec cld push stos repz pop sub pop inc mov (bad) mov xchg jo lret or arpl ret mov in aaa mov loop add lret adc xor cmp or add out sarl popa test jns in movsb aam lock (bad) mov sub fisttp pushf dec sbbl jmp cmp pop inc dec inc rolb mov xchg xor sbb in adc pop movsl sti int3 push cld aad push fsubr lcall test sbb mov rcll mov roll fldcw rclb mov inc adc call push or push lea je bswap neg shl call sbb add add add outsb or add add and add add add std xor add add push mov add add add add add add add adc lret add jle add jge add add add cmpsb pushf mov pusha mov pushf pushf push jmp inc inc push inc push dec xor cs insb add fs jae push push mov mov xchg lea mov mov bswap not call sbb ror bt mov clc dec mov pushf test mov clc test mov stc add bt jmp cmp sub bt movb cmc cmp jmp mov pop inc jb out dec mov dec stos dec cmpsb sarb mov inc jno sbb xchg cltd aaa jecxz ss sbb (bad) lret dec sti outsl out inc xor test sub xchg (bad) bound dec dec dec bound (bad) imul mov (bad) mov idiv and jmp mov cli inc dec xor ds sarl bound push dec shll dec xchg insb xor pop sbb stos ds jns int3 dec mov xor data16 and test arpl fs sub push push mov das sahf fisttpll pushf cmp call pusha call pushf pushl mov mov push pusha movb lea jmp lea ja push lea jb push cmc call mov lret push sub inc mov stc jno rcrl push in mov es mov cltd pop icebp add add int cmpsl push sbb cmp mov mov rcl std fldenv sbb ljmp mov adc adc xor inc jne test xchg jae mov cli cmp push dec mov (bad) repnz pop shrl adc mov int3 dec lock or out jge pop pushl mov pop scas xchg scas cmp push pop sub les and push adc out jbe fdivrs sub inc mov in cs mov ds sbb out stc add mov enter fist or cs jnp je sti ljmp pusha fdivl dec out test mov fisttpl lock inc pusha fistp jl insb and gs outsb cmpsb adc or rolb fbld and jmp clc test pushf mov test cmp call fsubs inc mov movsb call dec jl pushf inc cs ljmp les push fcoml or pop mov inc bound aam and ljmp in je lret cmp and or (bad) mov mov sub inc push ja or mov push aas out daa lahf repnz jae out insl mov jbe or sbb mov mov sbb daa xlat fsubrl xor xor cmpsl jl or mov sub push test sub pop inc pop in mov in sub sbb (bad) adc push adc ss and pop outsb fidiv (bad) les imul dec mov jg cmp inc push inc xchg mov dec and push fstpl aam or (bad) insl pushf sub stc adc push push adc insl sub dec dec imulb push sahf in int ret mov into push fidivr pop in mov or mov sub or jb cmp sub jge or test mov aad push inc popf sub call sub mov cmp dec fcompl sub xchg jp inc lea test dec jl jo push lret xchg iret fidiv out mov call loope cmpsb pop or sub iret mov in (bad) sbb ljmp cmpsb loopne imul adc loopne fildll shrb inc jmp xor xlat push in gs sub mov mov test pusha addl insl sub pop xchg inc or xor insl test sub mov mov push movsl xor adc lea je jmp fisttpll pusha mov pop inc and jo dec (bad) pop repnz into (bad) xor cmp and (bad) loopne cli or lret aaa jno push leave imul fld ficom addr16 xor pop sti jmp xor mov addl inc mov jecxz in fs mov and and push adc int mov adc mov push sub xor adc iret push jo push lcall jge outsb fisub mov cmp mov mov test sub into test stos bnd iret lcall push xor cs insb add and sbb test cmc lea add cmc cmc push clc xchg movzbw shl push cmp lea rcr shl adc mov and test or pusha not not add call sahf push jg xor pop stos addr16 popa aad push lods sbb imul pop lahf pop fwait subl mov ja ficom clc pop adc push xchg mov lcall xchg or mov aam popa push or pop stos jb inc das add fldcw mov adc ret iret dec scas and popf xchg stc pusha jae pushf gs xchg and jmp and push push xchg push loop comiss sub lock imul popa cli add ret add push push fidiv rcrl bsr sbb bswap mov cmc bt and cmc call mov inc nop ss inc iret xor mov add mov ds or mov dec loopne mov aas mov jo adc dec pop mov add mov push in enter mov out push sub push cmpl int3 ljmp push mov std xor insl jl add shrb int sbb push dec ret shlw and ds push xor (bad) in add mov adc scas lahf decb rorb lcall xor aam lcall (bad) mov mov nop movsb lcall ja test outsl stc xlat jne add sbb repz clc mov cwtl repz sbb vpsubsw (bad) incl fldcw add xchg cmp add and loope add adc add or add jmp add add add add add adc add icebp sub add and stc sub add pushf add and add add add dec outsb or sub add or add xchg cmp add and adc add xchg cmp add and add mov inc jns xor popl call sub jp enter jecxz push mov jle sbb mov (bad) (bad) mov add scas (bad) add scas dec cwtl enter and pop fisubl hlt cltd addl loopne (bad) sbb mov and mov jae cmp (bad) xor mov and xlat or dec pop mov mov pop aas jne popa or mov push pusha lea jmp lea je setge cwtl lea jmp add inc gs outsl fs gs imul add jmp cmpb pushf push pushf pushl lea jne rcr test shl bswap mov clc add cmp cmc movzwl bswap pusha pusha sub mov cmp pushf add clc clc mov bt call jmp mov mov jnp sub xchg rcll mov in (bad) jb,pn inc mov jno (bad) movsb jb mov jecxz pop (bad) cmc or ljmp bndstx or mov inc aad stos jp add pop jb aad fcmovb mov lret adc mov add movsl test out push mov call popa aam push data16 inc sub bound jbe add daa jns mov adc cmpsb push sbbb and xchg mov pop push daa mov inc lret data16 out imul jbe,pn not dec add in jno cmp sbb push jmp fsub (bad) rdtsc pop inc cltd xchg (bad) dec lret pop sar add xchg adc je adc mov mov or adc roll insl mov into test por imul jb xor cli jl add cmpsl inc aad dec xor leave mov cwtl int3 ja cwtl leave leave inc sbb cmpsb (bad) pop mov push aad stos jae push outsb shll mov insb idiv mov mov add xchg pop xchg fisttpll or lret add outsb loopne jb cmp inc sbb mov jbe ret stos mov scas mov and adc jmp bound jnp sbb inc push test mov not pushf cmp add push pushf clc cmc not call (bad) xor adc pop inc xchg or jae das test or in cmc xchg test sbb xchg or push enter and imul in iret pop inc xor mov mov sub mov mov pop sub nop push adc xchg je outsl mov aaa lret in andl adc cwtl push lock sbb roll repnz xorb or movsb and inc jns jp and push cmp rcll notl rcrb aaa sub jecxz or jmp pop inc or pop dec mov es mov xor cmp in xchg fwait jmp xor xor jne (bad) push xchg mov mov xor xchg and adc dec sahf mov push or aas xor ret xchg ret in nopl cmp bound mov and bound pushf inc xchg jge (bad) in push out mov jge push arpl jecxz sub dec mov mov mov jl std cmp aaa dec lods xchg in mov fisubrl fnstcw jae fs jae bt push bt sub movzbl jmp jmp imul movb mov clc test add push pusha pushf lea jmp push or daa cmp inc mov int3 shrb mov mov pop and or cltd or aas mov cmpl xor mov sbb mov mov ljmp hlt push xor jle pop xor shlb int3 arpl and insb fs addr16 and iret fidivrl clc sub mov fstps pusha ficom ja stos jbe sbb mov loopne cmp xchg add xor jno pop fwait inc jb mov arpl sbb (bad) loopne daa jnp lahf loopne mov mov out adc insl test enter xor js fadd shrb sub adc test movsl jbe std push adc mov call in push call add mov add call sub jne ret add dec outsl arpl inc insb insb outsl arpl dec inc push dec inc dec xor cs insb add leave lea pushl lea movl movzbw mov movl not pusha mov pushf call repnz pushf push lea jne sar mov cmc bswap sub btr movzbw shr mov bt sub pusha bt pushl popl test cmp jmp out mov sub cmp mov mov dec xlat pop out mov and daa lret pop mov fsubl push mov add xor xor add sub pop ljmp shr nop pop incl jge push loope rcrb gs test cmp and negb stos test ret test add out push pop or in out (bad) jp popf gs xlat bound cwtl xchg xorl addr16 lret and lcall dec sbb scas std push fld lock xor outsb or fldl je xchg pop inc mov xor add adc push stos aaa lahf sahf ljmp int3 cmc negb lock test fild dec addr16 add mov dec jns mov js ss mov lock xor rol push in in lcall out xchg leave cmp in mov outsb (bad) in xchg sub daa jne sub pop mov fdivl jmp cmp push insb outsb rcl jne (bad) jbe fsubl or add add in outsl mov inc jmp or aam addr16 lods pop in mov pop shr cmp inc mov insl cwtl into lock sub sbb cmp lcall leave cmp adc out jns jl dec arpl idiv icebp nop xlat ss jns icebp dec bound adc sub jecxz fwait xchg jno loope jecxz (bad) jmp dec mov push insl call pusha test or cmpsb jg dec pop push test (bad) std pop out and push dec cwtl cmp inc movsb and xor cmp cmp daa mov mov pushf icebp add test mov jb xlat (bad) push out (bad) add mov sbb pop je pop dec cli and cmp xor and into arpl sti add js lret cmpsb push mov jno lods je pop adc imul or (bad) pop fldl rcrb and xchg adc or adc cmp add mov jne stos inc cmp push jno sub adc push inc scas push scas loope pop scas pop jmp and btr cmc fstpl test mov (bad) ljmp mov push cmc push sub stc jo ljmp pop jnp mov jl insb repz and fld pop xchg cmp inc int3 cmpsl imul rcll lds ja dec pop or (bad) in fadds jle test cs jb jnp bnd push (bad) fwait or int pop push mov sbb sub fsubl popa lret adcl dec jnp ficompl mov popf scas in cmpl mov adc push xchg inc ja sbb iret fisub ljmp xchg movsl mov xchg outsl test push test mov inc xchg xchg lcall inc in in xchg xchg xor cmp rcrb cltd xor shrb jae mov inc cmc jle (bad) pop fistpll pop inc lret adc push pop (bad) aaa mov mov sbb ja mov xchg pop daa jbe loopne mov xor and into call addr16 cmp lret arpl sbb push mov xchg out ljmp dec push sbb xchg rol or cmc cmc call daa sub cmp push sbb arpl insl (bad) in mov push inc mov cmpsl scas fwait mulb or fiaddl (bad) and enter shl mov inc mov insl rcrl es enter xor dec and cmp jl test inc lock (bad) dec div fs or fnstsw mov test test lods (bad) mov inc sbb inc (bad) cltd (bad) decl or mov mov sub push xchg test aas mov adc mov sbb aaa aaa sbb pop test (bad) mov pusha mov mov jle into sbb add out mov rcrb gs inc inc push add and pop rclb icebp in ss repz mov push cltd jo out sub pop adc jo mov in sub out ret fstl push mov sub test sub fistl aaa cmpsb xchg repnz add lea loopne add dec and int3 or push aad test jne pusha movzbl jmp push call stc cmp jmp jmp jmp lea ja push lea jb clc stc cmpb pusha lea jne movzbl not mov pushf pushf cmp jmp dec push xor rcl pop outsl rcr add (bad) clc pop es xchg adc insb xorb ja mov orl dec xchg orl pusha push jnp push add sbb dec negl sbb shrl jmp lea and jl add lea xchg inc ficompl fs jl popf sbb push movsb sbb pop js jns adc cld inc cmp sti insl or mov push shll lahf fimull mov call dec fldenv pop push faddl sbb push cmp lcall aaa jle pop cmp pop mov mov inc repnz or push stc shl fcomps push stc pop in in rclb cmpsb scas ja dec rcl inc ffree sbb mov mov cs mov pop dec jno pop repnz adc (bad) mov popa shl js,pt es gs outsl and (bad) jne xor je sub mov out loope add inc mov pushf ljmp jb aaa sti hlt fs mov xchg ss roll clc pop movsb push jmp fldcw inc mov sbb movsb adc fsincos enter and std mov lods cmp lahf and arpl pop in or pop outsb fldl insb sub je mov or xor fnstsw dec inc mov lea or add popf shrb pop inc jno dec cmp adcl sbb push fcompl jbe cli xor stos add ljmp jle mov and negl inc xchg and mov add mov scas add cmp pushf ds adc fcompl mov jbe ret mov (bad) add in fldenv pop push mov ljmp inc clc shrl xchg out mov mov lcall repz test jecxz lret (bad) std loopne mov dec inc adc dec icebp inc data16 lods lods or in out repnz cmp addl mov pop jecxz leave cmpsb into mov adc pop fisubl pop ljmp mov inc xchg jmp loop movsl or sub ror inc lds sub pop cmp fnsave cmc mov adc loope or insl push (bad) mov call fsubp mov push sahf mov dec fildl lcall subl push pop push jp call mov fsts loope lods mov decl jl int3 js imul jp mov mov repnz ds dec dec push cmp push xchg test jnp pop mov icebp jecxz fwait cmp nop xchg lret in mov dec push jno mov ret add in int3 add and sub int3 lret fistpl xchg pop sti scas mov out mov push repz les mov jg ljmp add mov sahf cmp jecxz aaa sahf pop cmp pop nop outsb sbb movsl enter push push loopne pusha cs fdivrl mov inc das ret cltd clc xor rcrl jge insl sbb je lock push loop mov out or hlt hlt ljmp daa pop rcr mov aaa (bad) xlat outsb and mov and jae rcll div popa nop idivb (bad) or fwait mov sbb cs out mov push sar sbb or adc sub das arpl add sarl xor pop sahf cli push decb lcall inc pusha dec and lret mov loope lcall mov inc sub inc shlb mov lods and push mov andl mov cli xchg dec mov xchg lds jnp xor je pop mov loop dec sti loope pop rorl adc (bad) negl movsb push pop fidiv jge xchg xchg or ret addr16 xor rcll imul cmc pop mov mov fs mov push gs push mov shll inc ds lods das scas mov pushf lret aad or enter mov mov mov jecxz jle sub dec jo into scas stc jb mov test fwait add mov mov push mov mov ret cmp out pop sub mov dec adc jp mov adc mov movsb repz or dec sbb mov sub sub push jno fisttpl aam iret add lea ja push xor cmp fadd cltd push lcall aad cwtl shlb ficompl rolb mov mov movsb mov shlb popf adc repz sub hlt pop sbb and xor jb,pt jns in scas mov orb test adc sub jno lods or (bad) xor aaa sbb jno mov jmp xor adc and imul pushf pop fldt in loope sub dec into and in in cmp lcall and fdivrl xlat push adc pop mov out (bad) sub not mov jns out mov cmp roll inc and lods mov movsb sahf rcl mov stos mull pushf jae cmp adc cmp cmp jl bound mov rcl xor shll sub imul or jns mov and xor test sbb xor fisubr idivl cld (bad) fidivl bound sbb jl addr16 fwait idiv lods push and jbe pop mov test jb jmp movsl mov pop sbb mov mov imul inc stos adc xor push (bad) std adc daa pop mov out fmull dec add outsb dec test loop sub xor push repnz sub (bad) jne add dec bound mul es mov pushf pop xchg add and inc int and jle pop inc pop pop jle je mov ret pop (bad) (bad) (bad) xchg les mov mov int loop in jnp or xlat outsl jmp mov add sub cmpsl gs outsb sbb nop js or (bad) jne adc dec push out add sub fcomps pusha mov fsubl aam aad cmp or test inc insl sub pop es or ja jb std mov or cmp ljmp sbb in (bad) dec imul imul loope add repz aaa loop dec aam idiv lret xor inc or jge pop inc mov push cmpsb xor ficom iret cmp mov xchg pop inc in mov adcl and mov jb mov mov cwtl addl cmp add rcrb out mov mov icebp fcoml sbb cld mov cs jmp mov in push cltd mov loopne imul test sub cmp xchg mov test push ds test rcl clc push call push and pop push pop push push or dec adc out movsl fisubl mov mov pushf push jne stos fwait lahf fildl mov out xor add xchg add push int3 ss mov imul aam mov jmp sbb stc inc js xor and cmp test pop shrb loop in cmp rol lcall inc push cwtl mov pushf icebp outsl jge add add xchg add (bad) lods cmp xchg mov inc shrl popf adc and mov jp push (bad) repz sub ret cmp out lds jp inc inc cwtl jge bound jnp push arpl (bad) icebp jb mov in in mov int iret add xchg or std or xlat pop add or div jmp lahf outsl aad dec loope xchg cmpb cltd mov add dec pop cs mov push out sub push push clc js (bad) bound push ljmp push rorb outsb dec jp mov pop push and ja ret jbe xchg jg xlat inc aaa pop xlat mulb push ljmp xchg and icebp aaa inc lods loopne push negl cwtl imul daa pop (bad) push out mov or ret adc ljmp or mov dec dec dec jnp jmp les lock adc dec pop or jp aaa ret clc pop ret data16 adc loop xchg dec test mov push adc subb or icebp inc stc ljmp std (bad) aam xor frstor pop test sub or cmp sbb mov sbb clc jl mov and adc (bad) (bad) testb jge push xchg cmc stc inc jo mov movsl in jg loope and xchg (bad) out sub adc (bad) and mov lock loope xor lds adc dec sarl int imul push xor xchg mov and rcr sbb dec pop xchg imul xchg jne push cmc mov lcall mov jl aas icebp inc adc jge ret (bad) loope rol test (bad) push adc xchg and or sbb push pop mov ja ret cld in push sub mov movsb rcrb sbb jg and pop xor insl fistpl das sbb mov dec lcall bound stc cmc mov loope mov or and inc rol xor pusha (bad) in out ret xchg mov inc xchg stc mov or push cltd es jmp mov sub out xchg imul cmp pop hlt enter int3 mov sti ss fwait roll push add jle push sti ljmp leave dec movsb push shlb stc (bad) fsubs or pop inc dec mov in cmp dec daa adc cmc shl or pop xchg inc mov sbb mov fnsave (bad) push jbe xchg stos ljmp (bad) push stos sub mov adc pop ljmp imul js clc cmpsl sbb cmc dec in lods out cmp clc out jbe adc (bad) mov stos lock xor pop and lock mov cld pop pushf clc ret fs cmpsb inc imul sub fstpl add (bad) push pop aaa pop das xor notb rorb cmc enter test lods pop and and ss push inc jae and test mov pmuludq (bad) test sub inc push int jle enter add mov jmp cmp in pop push mov mov cmp xor fcomps popa cmp cmp lods (bad) xor int3 movsl sarl nopl ja jnp dec dec or mov xchg mov sub inc popf push xor xchg call mov outsl std int3 sahf cmpsb sbb (bad) out push and jp mov aaa cltd outsb les cli push sbb test sub and nop cld sub lcall ret (bad) jmp xchg fistp rcll xchg clc dec insb sbbl ret and pop pop inc into repnz push xor jno popa xor (bad) cld xorb and xor lods dec jecxz je outsl or mov add fwait in dec sub jmp movsl inc add mov imul lock mov pop dec or icebp xchg out and push or mul push mov jmp push cmc bound stc xchg xor mov test inc les in adc nop sahf adc sti flds dec loopne adc pop stos xchg pop ror (bad) xchg push mov js adc (bad) aad inc mov fwait or je movsl xor ljmp adc (bad) mov xchg xchg lahf pop and ficom mov jle in sbb push mov (bad) pushf icebp shrb sub ds imul out test xchg hlt jb clc repnz (bad) xor sahf pop jo cltd jmp xchg xchg outsl pushf xchg test jb out lcall jle and movsb je xchg jne lods scas jmp stos sti mov add addr16 ret push push adc push or imul mov mov cmp daa adc push test out mov popa inc pushf cmp imul adcl popf sbb (bad) fnsave push aas sub cld enter (bad) pop sub xor sub or test ds int lret les les pusha cmp repz mov sbb xor xor adc (bad) outsl push fistpll adc movb (bad) punpckldq insb or sbb (bad) mull pusha repz (bad) stos aas jmp pop out imull jmp lret ret cmp arpl mov test aas and mov into addr16 inc test xchg (bad) xor push call out mov (bad) mov test sub or and xor (bad) pusha call mov inc stos add aam (bad) inc jae push shrb or popa inc mov imul dec out loope xchg fdivl rorl pushl xor in push sbb cmc es xor mov sbbl nop repz decb add lret pop jno fnstsw iret and out push stos and scas aaa sahf aas cmp out mov data16 cmc loope fiadd sbb sbb hlt lds arpl jnp pushf pop repz insb pop xchg (bad) pop push jno pusha ss inc xor lcall stos jg mov insl paddd and mov mov jecxz sub outsb (bad) popa ja jnp bswap sbbl push lcall and jg je lea sbb add popa pop dec inc dec push orl mov (bad) mov shl cmp mov aam xor lcall inc dec mov cmc cmpsl jecxz push lret jne pop mov or dec lcall adc sub cld xchg cmp lahf xor xor dec mov sub enter scas int3 adc pop pop sub jne test sbb xchg in pushf lods sbb inc les mov lods outsl inc cmc ret and fsubr repz scas imul xchg xchg lds dec cmp flds lret mov adc gs add test or push test scas jecxz mov (bad) mov ja and sbb fldcw pop hlt idivl xchg inc mov or mov and adc mov add inc (bad) fnstcw xor dec rolb xor push cmp add repz push inc adc inc aas mov xor ret cwtl dec inc sbb sub sbb aas cli add adc pop hlt fnstcw sub and or ror dec loopne iret cmc xlat and pop and sahf cmc aam andb xor enter cwtl imul jge sbb adc xor and js xchg (bad) mov jmp pop movsb lcall add push into push imul add js jae lret call cmp push cs pushf and push dec popf ljmp inc icebp mov cli ret enter mov push cs out loope in pop nop mov mov inc pushaw cmp jns inc jo ss (bad) lea cmp (bad) fldenv pop mov mov xor jne pusha mov adc sub ret nop movsl inc mov cld bound pop push (bad) repz and add ss mov and shl std jns push mov jnp jg cli inc ret push mov push repz pop (bad) jp cmc cs jbe sub add mov jmp test jo lds (bad) jae addr16 out call scas mov insl xor pop cmc arpl sbb andl pusha pop ret add or push jl jg push imul inc dec mov mov iret xor movsl jle inc xchg add sbb dec dec nop out xor out or call in jecxz adc xchg inc std dec mov dec mov call inc mov mov push out lods xchg cli cmp ficompl test push jecxz pop or push push mov mov mov xchg fcoml test add into and mov cmpsb out movsb xchg outsb dec cmc test test cmp movsl add mov jp lods dec dec xor mov sbbl aaa in rorb xchg stos aas pop mov push mov xchg stos adc adcl stc xchg insb jl ror popa add int3 jle por xor outsl rolb or push inc rol mov outsb dec int in jmp sbb sbb xchg xor stc push pop jne dec (bad) lret pop sub lcall ret ljmp inc rcr in lods dec jne jg mov dec popf mov movsb movsb mov pushf inc jo data16 or test fnsetpm(287 adcb xchg int cmpsb adc daa xchg enter fisubr and mov sbb push fs push add jle (bad) mov (bad) mov mov xor fcmovb pop in cmp and bound mov add rorl ss pushf in mov in sbb xchg push in pusha movsl sbb fadds in js pop dec jle scas pop adc sbb cld lea jne adc jg cmp loope push (bad) xchg je mov jnp lods mov lcall cmp out pop out xor lds popf repnz or pop test out mov cs out push es aam push (bad) xchg push pop xor dec xchg or lea outsl mov jb sub faddl adc inc mov in sbb mov sbb xor scas adc loope pop inc lock jbe jl scas stc (bad) push jno insb insl test mov adc sub aas and test aad xor imul mov push sub daa push push addr16 and mov test scas lret jecxz mov fildl cmpsb jg mov xchg hlt push mov std mov push rcrb and mov lret ret cltd test jge ror lods fmull pop icebp shll dec mov (bad) xor cmc (bad) je lret outsl imul lea je lods inc mov les inc xchg jmp movsl mov lock in sbb and sub mov dec inc daa test dec int3 mov sbb insb hlt inc loopne xchg ds cmp sub pop jnp mov hlt xor jge cmc stos add sub sub push xchg (bad) mov je in daa or xor test adc xor push pop in mov jge mov cmpsb sbb push sahf test inc fwait icebp mov test (bad) ret in aad push (bad) jbe jecxz and xor xor loopne (bad) int fwait ss lods lods add pusha xchg inc sub and in fsubr add stc jecxz mov mov loope sub jbe and mov push (bad) mov cmp lods loope insb jp rcll pushf sbb in divl add push mov pop in es (bad) inc mov lahf inc lea adc lods imul mov mov lret fstpl sub xor xchg insb adc pop pop mov test dec stc ret pusha int3 test mov mov mov cmpsb bound cmp cmpsb ljmp xchg mov dec pop nop out add je stos frstpm(287 adc (bad) push lahf push cmp push sub imul stc adc inc sub jns xlat sbb jns arpl fisubl loopne les and inc jecxz rep push or insb jb rcr jne (bad) aam insl ss cmp lea cmp jo pushf bound mov and xchg push mov mov aaa in jecxz mov (bad) jge xchg shrl push sub sti sub popf pushf aas mov cmp jb jne sarl inc fsubl xor mov and jmp adc pmullw mov cwtl sub add mov inc pop jmp and cmp push inc (bad) pop jp pop add jge int and xchg inc lret sbb jg (bad) adc popf outsl sbb mov jns es int3 stos pushf sbb push insb xchg repz or aaa or push roll xchg je jmp out data16 push lods pop aam gs icebp push lods fisubl lods lcall (bad) psubsw (bad) xchg repz int sub hlt outsb fdivs push in pusha sbb es add jl loop pop and out add jno in clc imul nop or pop aam call jne push push and popa fmul mov std call or js leave sbb lcall bound inc jno clc mov add shll and adc cmp push cmc push add movd mov jo add mov push jbe xchg in out push pop cld out fs dec scas add inc or and pop mov pop adc stos ljmp mov lret out push pop mul pop mov ficomp mov sub inc shll and xchg mov sub data16 or andb mov mov ficomp jbe loop subb sbb loopne (bad) pop or cmp cmp insb call jbe and push xchg sbb stos lock xchg (bad) mov je daa pop push dec (bad) pop mov aad lods mul add adc mov mov or cmp test xchg add (bad) mov dec test xacquire outsb rcll into sbb clc jl out inc loopne scas sbb mov loopne scas push dec fisubr jnp loope out lret inc cld (bad) xor lret xchg jecxz jge repz push into and outsb lahf jae sbb mov outsl hlt mov adcl mov test push js outsb insb pop insb vmwrite cmp jbe (bad) jle or test roll pop divl lret add scas outsb pop or jg xchg mov sarl mov mov rcll mov daa xor mov pop imul push pop adc sub adc and (bad) pushf mov js out sahf lahf pop jge xorl adc and lock add mov add xorl sub jl mov adc sbb cwtl xchg mov int jl jb ficompl popf push in cmp insb sub sti and jo adc and jnp jmp loope sbb jne pusha ja jno fldl mov ret (bad) jne (bad) cwtl mov jge fist out xchg lods xor adc fildl cli ljmp adc aas push rclb pop cli adc outsl xchg mov sub or mov sahf cs pop leave fwait mov mov das cmpsl push ja xor inc push or jo insb jl or jns pop imul arpl cld (bad) cmp fxch scas fs pop inc test push int3 stos lret fild rolb stc jmp jg insb fs test fldenv xor std cld lahf fwait cli xchg scas xchg pusha sti dec (bad) idivb in sub jae mov adc sbb mov lret fidivrl fcompl xchg sbb and xchg rcrb out into or scas test or xor ror push fisub (bad) pop xchg jl cmp push (bad) mov sub push dec (bad) jle xor and std and or pusha cmc shlb push push cmpl arpl adc xor add cld je ret push sbb test cmp (bad) lahf (bad) je dec (bad) cmpsb fildll push sbb sub lds insl pop scas inc daa stc into xor scas mov push jp cmc xlat pushf insb nop std adc push add cmp out or mov cmp testb mov dec xor inc jno xchg pop (bad) adc mov ret movsl (bad) sbb mov jmp into ds rol fsubs mov rcr fldcw xchg inc test out lods shrl dec adc dec xor adc hlt leave and mov jbe mov popl dec jbe adc xchg bound inc idivb dec xchg lcall gs or test mov push iret mov and cs add insb mov add pop js arpl xor xchg js sarb push pop jo notb xor sbb sub add lcall jbe pop fisubrl sbb sub adc cmp adc sub cmp push mov imulb mov outsb out fadds pop pop loope test cmp insl cvtpi2ps xchg inc out mov mov cmp cmp hlt dec mov mov pop inc into push jne cmpsl pusha (bad) shll pop dec or je and popa addr16 fldenv or mov insw loopne or addr16 adcl xchg inc fs xchg mov push inc movsl fmull xor bound pop inc ljmp std xchg jnp dec aad (bad) mov mov jno dec sbb inc or inc sub (bad) out cmp fcom cld pop push arpl mov and xchg add jae in dec mov aam inc xchg decl inc out jle mov jp mov mov subl mov (bad) in mov jae enter pop imulb out fs lods adc add inc pop push out (bad) mov in repnz std sbb stos fcomps jno aad mov clc rcrb sub push movsb cmp mov out sarb cli inc sahf lods int sub xor les xor jb,pt sub or cmp pop mov xchg in setno mov fsubp dec mov aas aaa mov add jge out stos sbb and imul pop inc mov mov adc fwait sbb sbb inc cmp and sub je (bad) mov push or fldl push xor or clc dec call rclb movzwl ja stos add cs dec jns jl mov sub mov loope or xchg push sarb ljmp inc and subl push or das push mov cmp inc out lock and lods repnz mov into or lock push mov jmp push mov inc js shll add push fsub notl lret mov inc fdivp and adc or movsb ret xor inc loop inc sub test test out sarb jns imul xchg mov pushf scas out stos pushf in xchg sti push shl push (bad) dec pop in sbb sub jge pop cwtl repnz pusha loopne cmp lods cmp mov mov stc in addr16 aam add insl out mov xorl ret es popa cwtl mov imul or pop mov xor cmp cmpsl pop sub lea das push testb mov jnp add cmp int add or mov mov fs ret rorl mov adc jmp or xchg add xchg test mov push das xor or push mov arpl inc stos cltd scas test addr16 pop test and inc (bad) in push mov xchg mov loopne fcmovu cwtl cmp inc in scas mov int clc xchg inc pop (bad) test fidivrl lods mov and dec xchg push fiaddl rcll mov lahf leavew jne or fcmovnb jnp mov or rcll (bad) (bad) and mov sbb bound adc jg std loop dec and mov push adc shlb jae insl stos (bad) test fsub mov and or push scas (bad) lret sub inc dec insl stos push insb cs mov repnz test stos and stc gs jo push or iret std call stos xchg xchg leave stos adc or and insl sbb pop xor pop ss fcmovnu ja (bad) sbb nop sub dec in nop mov cmp call popa and int3 mov imul sbbb (bad) cli fstpt sti sub notb ljmp xchg (bad) xchg push sarl loope icebp fs popf sbb pop clc dec mov (bad) xchg pop add mov aad xchg mov mov add fisttp and jne loopne and lods xor pusha jmp movsb (bad) stos out gs adc stos ret cmp xchg fdivr cmp sbb add xchg js jmp dec xlat jge xchg fbstp arpl inc sub jmp xchg sbb push rcrb cmp out sbbl adc cltd mov or sahf xor xchg xor lock sti sbb lret call shrb pop mov js push pop rolb lea fiadd ret out or xor push (bad) cwtl iret insl aam mov rolb xor jp mov test mov (bad) jp mov adc push or mov lea aad mov cmp mov shr jbe and insl xchg push pop imul xchg mov popf stos out dec outsl (bad) pop jae movsl fwait dec in shl pop addb jp xor sub lods std loop xchg push mov add ss sub into jb mov aad pop test stos je hlt jmp loop push pop lcall dec xorl inc js pop movsl lods jge xor fisubr arpl mov xorl xchg sub int adc and popf mov out sbb or fmul and sub mov out (bad) outsb push cmp out add (bad) mov xchg mov (bad) sbb push pop fcoms cmp mov xchg and sarl clc add int3 pop and clc ljmp pop insb nop mov leave ljmp sbb ficompl xor (bad) stc dec test sbb pop jbe pop xchg roll es inc and push daa inc mov sbb mov test and (bad) in push call inc (bad) xor mov addb dec mov popa xchg adc push push sarl mov aam and jle and fiadd jg jne pop and and cli dec mov in lods push (bad) ss iret adc push or into arpl out repz adc push xchg jmp sub rcrl jo adc out clc mov addr16 inc rcrl dec and cltd mov (bad) push pop scas push in jbe inc jmp inc je scas clc out mov in jne das mov inc and or xchg ja orl xchg cli sub gs push jge xlat xchg fbld mov mov and ficoml cltd into or rclb pop cmp aam cmp shrb cmp outsl sbb rorb push or leave loop jne fsubrl and mov or or aad fiaddl repz cmpsb adc faddl je test call (bad) dec fs sarb pop scas ss inc out add push mov sbb fidiv addr16 cmc in pop jo cmc jl ja aad in ja sub sub out out sbb ss cmp out mov pop ja pop xchg adc or dec xchg adc mov stc xor addr16 test jbe lods pop out mull popf mov dec popf js lcall jge clc pop inc xlat push adc push pop pop scas iret mov iret loopne pop in stc out arpl lcall out and mov add mov jns dec jno stos mov adc pop aad xchg mov cmp mov loopne shrb repz dec das stos (bad) stos push and dec jl xchg add xchg pop dec push or push adc dec sub inc lcall lcall mov add int imulb stos add cmc mov push xor (bad) fldt xchg xchg cmpsb mov fildll fstl (bad) stos jmp cltd in cmp fstps cs fs sarl jbe mov scas je push test sarl jnp sub push nop cltd add xor (bad) repnz repnz add lcall sti dec push in sbb mov test fsubrs dec inc int3 xor sbb orb sahf jne popa sar mov sbb push mov cmc fwait sbb sbb and lahf in and inc cli pusha sbb gs xchg mov push cwtl jmp sti adc xor call pop inc mov scas jle (bad) and aas insb sbb es jmp sbb jmp push data16 pop xorl fidivl fnstenv jle ljmp push inc sar lea mov xor cs or xchg test out and pop sbb inc mov jne cli scas push push out xor sub mov pushf pushf cltd lcall out dec jb ds jnp shr adc pop push mov or mov icebp dec xor mov ret fs mov xor xchg cwtl push mov jge imul icebp mov mov gs fucomp cli rolb out out mov cmpsl jbe sub aad xor xor lret or jp nop repnz das push movsb out iret sub je ljmp sar sub aad sub push cmp jmp jge les ficom dec iret mov in jecxz ret js jl or test xor sbb adc mov lea and repz jo int3 cmc lock jle sbb inc ds in cmpsl addb imul inc test and out int ja sub imul inc mov and in test out ja popf addr16 xor mov xor in movsb sub sub sub pop jg adc ret adc xor sbb add fcompl outsb dec sahf mov and xchg xorl lret push pop xlat dec jmp mov cmp lods adc mov xchg sbb repz pushf add sub xor pop out ret pop das add and fwait scas gs clc sub add stos jecxz jmp jnp or add cmp adc adc fistpll icebp movsb dec lock fsubrs or mov mov add xor and or sub push mov shll push popf (bad) es sub data16 popf jmp inc (bad) int fstpt cmp cmpsb mov cld dec rclb lds stos rorb dec ja inc add lods ja mov lea and in sahf fsubr add ret mov lods jle mov sbb push sti dec sbb test xlat or cs dec mov sub test inc in (bad) fcmovnb jecxz aaa push xchg dec scas leave shrl cmp imul add pushf mov fisubr cmpsb xchg sbb cwtl pop (bad) cmp aaa xor loop add cli fwait sbb movsl jae cmp xchg push or xlat mov and (bad) repz imul test xor push sub popa hlt pop lcall out jle and adc sbb push mov push jge inc call ret push push (bad) repz aas aaa cmp adc lret mov jle push adc sbb sbb out ljmp idivb xor pop out popf xchg clc xchg mov add cmp mov aaa push mov add push cwtl pop adc sub int3 mov jae scas insb insl mov das mov (bad) hlt out and mov add push sti popa inc (bad) dec mov pop cmp dec mov inc xor mov mov dec jmp adc mov imul aas pushf repnz jmp (bad) shld mov and shlb ljmp xchg mov adc mov or jmp sub xchg xlat mov jge push xchg jnp repnz jne shlb pop aad in push cmpl or cmpsb push xor sti push dec or pop shrb jmp sbb xchg xor add inc push (bad) leave push xor fcmovnbe (bad) fcomi fcoms xchg daa push ja or movl scas sub imul in clc pop mov dec int3 inc dec mov push das mov sbb daa je mov dec push or in or out mov lret pop jmp inc and push aaa lret loop mov cmp add mov inc jmp ds std cmp call imul clc add inc lds and jp inc xor js mov mov test cmc cmpsb jle ficom mov ss sarl out roll sbb sarb jmp pop insl dec ret fwait mov mov mov insl or pop fiaddl pop xor or je xor insb mov pop mov xor in fcoms int3 js (bad) cmp inc and sub das out lock xor fimul loop rol sbb lret movsl jmp and repz movd es or mov mov cmp mov stos cmp lret loope mov (bad) mov mov loop sub test test int3 pop aam xchg insl (bad) lcall pusha (bad) mov xchg inc int3 fistl mov enter push cmp popw jns aad cmp xlat push jl fwait cltd int iret fs (bad) mov mov loopne iret stos mov dec mov xchg xor xor cmp mov call fsub inc nop mov stc (bad) mov ss inc lods cmc rcll cld xchg mov fdivr in mov loopne daa push and inc add sbb mov jl loop cmp pushf sti sub or xor int3 mov push pushl cli loop test push call ljmp jb mov loope fistl mov (bad) mov cmpsb in cmc cli cmp pop test and ret jmp lret mov push inc fwait add hlt mov stc cmpsb ss shlb sub jp roll push sbb ljmp and mov fcoms stc mov or outsb notl mov cmp cmp aas fildll sbb pop xlat inc aam push lods inc cmc (bad) mov and les inc (bad) out jb repnz jmp push nop or mov add test inc mov push es and adc xchg inc inc data16 or (bad) in cmc daa dec lods add test stc mov daa mov lret and push mov lea mov ror jecxz jb out xchg out dec mov daa fidivrl movb (bad) ja out fxch or pop fmull push mov sbb sbb mov in xchg popa ret push cmc or mov lcall jle aad out pop roll inc stos cmc clc in ja push mov lret in pop or iret or seto popa mov xchg pop mov iret jg cwtl pop add push into scas mov enter leave pop mov test inc pop movsb jb test nop and loop rorl pop xor cmp fisttp out out jg add mov push inc mov and adc add leave and xchg jo insl cli fildll and cmpsb out rcrb mov ds sbb dec sahf stc mov shlb cmp (bad) imul pop sbb push in cmp xlat into sub xor ja ss gs int push mov push push mov adc rcl lahf mov or mov sahf mov jbe mov push sub xchg inc mov xchg dec mov lock sub pop and dec enter xor xor add and xchg mov adc repz into mov push (bad) or xchg mov loopne jge xlat sbb inc mov sbb dec les mov incl mov push cmpsb add fild ficomp push out aaa fcompl push cmpsl jp addl aaa push add leave jg je incl fmull sub mov out push mov ss cmp and or mov test pop in lret aaa subl arpl jg lcall (bad) outsl mov rcll push pop repz hlt add insl mov fcmovb push adc aas mov (bad) xchg mov cmpsb pop and imul mov jp mov mov out mov test add sti ja cmp lea insl rolb stos mov (bad) int3 or ljmp mov mov inc and test push inc popf lret jmp xchg hlt pusha jns adc sub mov push stos mov inc and adc mov adc insl ja mov cmp push jbe sbb cld in mov pop outsl push es or sub rcrl or mov les orl cltd xchg test fistpll push cmp leave orl mov sub jmp cmp and call mov enter push in pusha jnp jo jae data16 inc lds (bad) leave jmp sbb out dec or into xor es push outsl fdivl lea sub fdivrs incb xchg dec add lret mov fprem1 mov jge,pt hlt adc decl push jno leave nop ja sub pop mov adc dec insl leave xor js das cli insl ss iret push inc pop dec inc nop jnp xchg mov and mov lds (bad) cmp sbb and dec mov cmc and popf jae jl pop addr16 sbb mov std hlt adc push mov aad scas pusha int3 push add outsb mov arpl sbb into sahf mov es les sbb int adc pxor gs cld jae dec push imul jle (bad) mov cmc and incl cmpl jbe ficoml in jmp test aas mov xor arpl mov mov movsl and repnz push xor cs lret sub xchg and out inc xchg (bad) aad ja adc xchg and ljmp push fnstenv xchg cmp nop movsb mov push cmpsb (bad) mov adc jbe imul lds push mov mov pushf jae repz scas mov arpl insb jns mov sub mov xor xchg call (bad) mov cmp sahf sub stos (bad) fdivrl mov ss xchg call cmp xor scas shr fsubrl push (bad) xor cli push mov cltd jbe daa popf je xchg ds popa adc bound or mov jge fimull sub test add aad icebp pop jl push or adc mov push xchg fwait ja aas dec out pop xchg push adc mov ja,pt in testb xchg cmp push stos cmp fbstp orl jecxz outsl jmp dec mov (bad) dec cmp icebp cmp mov mov sti out pop cmp or mov (bad) stc add leave cltd fcoml mov adc inc mov pusha icebp mov xchg call lock xor dec test inc mov jo push frstor test sub xchg (bad) (bad) pop cmp mull mov lcall dec into lret (bad) jg jae leave ret dec push push lahf fistl xchg xor hlt mov psubw cld adc mov push loop lods cmp push xchg dec jb movsl sbb (bad) jmp sbb sbb lock or ja mov pop push push mov stos push sub mov push xchg out shll and gs and out test jl jecxz in add mov cmp cmp ret mov mov push fisttpl and mov sub or mov xor mov ds into ljmp xor mov mov sub add mov inc lea out adc je adc fldt sub dec fcompl fimul sub leave mov or mov push int jmp sbbl mov mov call and lods mov dec mov insb jo add dec arpl enter add fwait in jne imul adc test pop mov scas adc out add test (bad) scas movl std cmpsl outsl mov inc enter sbb add ret jl sti into insb test in mov rcrl xchg ljmp stos roll imul cmp xor lods aaa loop or xchg cmp popf add mov mov jae sbb mov cmp pop inc (bad) les nop fdivr clc pcmpeqw ret dec out or pop xchg pop mov sbb nop in popa rorb cs out or shrb xchg dec movsl or (bad) in push outsl movsb add jge cli arpl aam mov fcomps cmp fucomi jnp adc outsb xchg mov xor pop xchg xlat sahf jne rclb add add dec addr16 push ja add xchg push mov popf loopne (bad) insb mov data16 dec jle adc rcl mov inc adc mov (bad) xchg cwtl arpl adc aam dec test push shl cmp xchg or mov push in mov pop ret mov dec pop fcmovb xchg lds sbb rclb sub neg inc orl xor sub xor xchg adc mov (bad) xlat call sbb sub lret adc iret or pop flds mov (bad) int3 xor or jmp adc insl pop mov mov dec xor xchg mov ficom and cmp or dec add pop pop xchg xchg outsb jb xchg pushf out insl pop cwtl xor dec cmpsb fnstenv or cmp inc push xor pop test xor (bad) jo or mov mov add or sbb cwtl dec inc movsl xchg insl test cltd fadd fimull movsl xchg in das xor (bad) repz xchg (bad) jno cmc jnp or inc into (bad) pop mov sbb dec dec (bad) (bad) in scas stos mov sbb dec leave les mov and xor mov add push sub lock stos negb stos flds imul inc jmp sub ret addr16 shrb and jl cli sbb jb fiadd (bad) fcmovb cmpsl cmpsl mov dec mov popf pushf lds rcrb cmp lret pop add xchg pop adc (bad) cmp int mov sub add dec jo lods pop mov fwait add ljmp xor notl sub popl or cld push add ret jecxz sti pushf fldcw mov pop cmpb and pop jo and lods popf stc andl push xchg mov sbb mov mov push and scas jbe fwait into xor sbb (bad) jno fucomi fsubrl push cs nop fsts cld or adc mov adc mov cmp xchg xor mov push pop add pop into and ss mov lods leave inc push jno cmp cmp fidiv push fnop scas inc lea insb rorb or cmp adc cmp ljmp jno push out cmp test lcall stos stc in inc ljmp mov mov jns stc cmc mov push loopne hlt sbb clc inc push sti xchg bound mov iret mov out loope fst popl mov (bad) fcoms jg pusha pop and push lock hlt add arpl orb and and push pop adc and sub lea sub lods lods aaa movsl ds in (bad) imul sbb inc sbb pop and fwait jne lea fs xchg ret xor cmp mov adc repz lea cmpsl (bad) hlt arpl dec and and push push push sbbb add hlt or xor mov loopne (bad) scas int call mov inc daa fsubrl fistpl int3 adc loope cmp stc aas mov lret mov dec and rorb pop mov mov out adc dec aam jmp mov fdivr mov cld out and sub and mov jle ret gs cmp and dec pop pop cmpsb mov ds cmp stos sti cmp mov ljmp rolb in adc xchg push jno imul mov les mov cmp je fs popf adc mov jno aad sbb loopne pop and fs inc rol inc (bad) xlat cmp das jne mov sub cltd jbe adc xlat mov leave scas cltd fsts xchg dec nop or mov push jg or dec sbb arpl dec xor sbb mov pop ror cmp faddl inc lods ret dec dec or out (bad) lahf ret mov mov inc pop or es sahf jb xchg jb cli es test pop cli jns (bad) aas (bad) (bad) push (bad) push pop jbe pop inc push ljmp xor loop add xchg repz mov test loope ljmp ret rorl aad shrl hlt scas imul dec nop and adc lods shrl aas loopne xchg sahf fildll pop insl subl sub pop movsl mov jmp popa mov pop andl lahf lahf and cmpsb sub adc cltd pop dec cmp jg,pn test aam inc (bad) in jo sub inc insb in aad add sub bound xlat adc pop push pop loop in pop push mov hlt cmp adc mov out cmp push ja lahf mov rclb lds push mov arpl (bad) arpl push xlat mov lahf jge jns mov adc adc jno aad push mov adc mov imul out call mov sbb sarb daa cltd jbe aam adc scas es out pop sub orl sbb xchg jae test mov mov lods cwtl mov test sub push sbb shl cmp sti cli push in repz add cli aas (bad) aaa dec sbb (bad) scas push (bad) pop cwtl jecxz int3 and stos add and nop (bad) mov aam test cmp mov insl loope stos xor mov jno or enter daa lea test enter push jnp test xor (bad) test jno or lods sarb or xchg or ds clc jno push scas xchg scas dec mov les push icebp cmc mov (bad) int jl pop je and add enter mov mov andb ret data16 and leave popa and mov mov mov lods jmp jecxz test dec cmp mov fs ret mov cmp sub dec mov cmpsb nop loope (bad) icebp enter and jmp pop movsl mov push inc xchg fs stos fcmovbe cmp xchg aam mov enter inc outsl add pushl data16 (bad) mov dec mov pop das inc jmp lret sub fisttpl neg lods pusha rolb jne ret pop ja popf xor lods loop jbe xor cwtl cld mov dec xchg loopne sub mov push xchg movsb mov hlt xor loop vmwrite push aaa push push sub cmp xor cli mov prefetch dec dec insb sub inc push adc sub nop mov push mov scas pushf mov inc ljmp test mov test (bad) lcall cmp inc add ja jnp leave test negb (bad) fsub push (bad) popf xor stos pop dec in pop fwait lret push mov jge jbe jno stos dec push dec inc xor ret scas push lods xchg sbb pop cwtl xor movsl xchg fs push xor dec pop leave push dec (bad) sti (bad) out sub lea js dec adc loop pop les insl (bad) sub bound test or stos std ret mov mov lock arpl push cmpsl inc add and mov inc inc or mov ret mov dec mov fnstenv mov loope imul orb cli rcll das in call scas mov popf cld sbb test and (bad) fs mov adc addb adc push arpl mov xchg icebp jmp int dec jge pop xchg sub loopne jns scas cmp mov lock pop ret xor adc mov mov leave outsl idiv lea adc inc mov dec xchg aad test dec mov xchg add push into mov xchg nop inc cmpsl cmp (bad) add ja push pop mov jns out push lock bound (bad) (bad) out shll fcoms push movsb in mov lea scas or out jmp data16 sbb movsl dec in lock fs fs movsb cld int3 fst pop add fwait rcrb and cmp and fmuls jbe add rcrb inc stos xchg ret mov insl add adc mov cwtl xor sbb in cmp test subb gs fnstsw push test pop or sbb xor mov xchg data16 sub (bad) sbb icebp add cltd mov stc and jno mov (bad) clc stos adc insb test shlb iret push daa ja sub std xchg add (bad) push lods xor or push push sti adc or ljmp fidiv insb (bad) scas dec (bad) xchg movsl daa and adcl adc test jo xchg lahf das (bad) movaps cmp xlat data16 cmp fcmovu xor sbb in movsb (bad) ljmp or test loopne sub xor mov (bad) negl out mov loope mov xor mov inc and lea xchg mov cmp daa test jg xlat xchg lock jg repnz (bad) ja cmp mov neg or movsl (bad) adc dec or fnstsw fiaddl sbb inc xchg jp cmp scas jne inc idiv xor mov push cwtl dec mov daa ret push scas sub mov fnsave cmp outsl jne mov lds shll loopne popa cbtw (bad) ror jb and std pop sbb sub int3 mov test mov push cmp add inc or jg jnp dec xchg in push int3 mov mov fs cmp insb sti pop xlat or scas subl inc fimul lahf mov lret push lahf jmp and stc out out xlat adc adc add incl rolb jo xor mov popf mov shrb sbb dec in cmp mov ja pop mov inc scas popf cwtl adcl and push or (bad) and sarb ds push cltd sub rcrb pop xchg mov xchg inc xchg int mov pop mov jl sbb jmp roll inc mov xor int insl jp jne bound add ljmp adc mov cmp inc mov adc xchg cmc bound (bad) adc xor sbb loop push cmpsb sti sbb cmp icebp mov dec out adc sbb add bound je loope pop sub fcompl ret shrl adc mov fwait pop xchg jge xchg sar es ljmpw test movsl icebp es int3 imulb stc mov add frstor pop xchg push je inc je inc popa ljmp push popa push addr16 or xchg cwtl mov aam popf lods xchg fcmovb bound bnd lods int push dec jle push push xchg scas pop dec scas je aam sub aaa pop call sub pop push (bad) xor into xorl dec out pushf stos mov cmp decb test (bad) cmp dec jge,pt int aas mov sbb pop pop aad cltd je decb mov and in jmp (bad) in pusha mov mov enter mov lret mov stos dec shl cli iret fsubl popf std cs imul inc jne sub les out sub rcll (bad) jg jle and cmp insl mov repnz dec ljmp into loopne sub jecxz jne or in out aam rclb out adc mov mov pusha test pop xchg cmp call jb mov sub adc (bad) and test mov xchg xor mov lcall sub adcl cmc cmpsb xor cmp stos subb lods sbb xchg mov sub push or dec insl pop arpl stos jne xchg xchg cmc fldl sbb mov je jno push into cs inc ja jecxz pop sbb cmp mov cwtl cld out fwait push jmp jo stos les dec aam dec jb in clc xchg in movsl movsb hlt and loop push inc pop in xor out mov icebp negl aaa jo push cmp cwtl xchg push test js pusha testl out and fiadd adc push and pop sbb sub dec ffree lahf int rolb and dec lcall fisub mov ja subl test icebp jns cmp sti xchg push sbb inc pop jecxz fwait xchg movsb cmpsb ljmp iret sbb xor or addr16 mov cmc jb dec lcall mov push frstor push push gs aad or mov pop (bad) out mov add into scas sub out xchg adc daa pop je inc push sbb and push push stos xor add (bad) imul test ds jmp mov jo mov shrl sahf outsb pushf enter in add cs mov mov enter ljmp imul test jl int call std sarl test sbb aad in cltd loope gs ret bound cli mov ret or or mov out insb idiv and mov sub push pusha push adc cmp sub or movsl into pop popa out test test (bad) jno fisttpl sbb and mov aam jnp les or mov or or xor out loope mov and in fsub push jo inc (bad) enter repz push lock sub xchg cmp outsb xor ret call inc and mov lock adc add xchg ds ficomp out fbld stos add xchg inc pushf mov push cmp int3 sarl push pop mov add mov xchg pushf das or das adc sub push jl repz lock call lahf pushf push mov js jp into sub popa nop or jnp xchg push (bad) pop sub adc push aam cmpsb inc (bad) cli dec and in lret ret stos leave repnz dec pop sahf dec pop mov cmc cmp inc cld pop imul aam and and int3 inc notb sbb in jno xor and ja xchg aaa enter dec and dec sahf popf xor and out xor inc loop mov ret mov aam cs mov jne stos pop pop imul in stos aaa ja scas cmc (bad) std dec hlt add insl in enter aad jne in out enter gs lea dec js imul movsl (bad) (bad) inc sar dec pop add mov cmpsl stc jo in inc cwtl addr16 cmp push int3 andl push cmpsl pusha fld and stos (bad) jg data16 lahf and nop ficom sbb lcall and movsb fdivl dec mov stc movsl pushf decl push xchg push jae (bad) int (bad) push bound imul sbb gs lret ss jo inc mov lock xchg mov jp stos outsl call cmp aas pop rorb mov mov mov xchg push push enter fidivrl adc lods stos sbb sahf mov loope mov bound sub sub test pusha (bad) mov scas out dec insl cmp cmp repz sub mov add in loop (bad) or int push dec push fcmovnbe fsubr cltd cmovl and faddp call add (bad) stc mov cmp test sbbb push pusha pusha jae and leave (bad) mov jge xor les push mov inc cld adc adc (bad) jmp (bad) (bad) iret cmp ret and add xor jle pop pop (bad) xor mov push pusha push stc pop imul leave inc sub pusha push jge (bad) repnz ds or insl pop stos inc sub lahf jno sub mov js mov (bad) pusha incb pop push std mov mov xlat inc pop xchg (bad) lea lods into xor in cmp pop int3 divb js adcl xchg inc scas ret fistp les inc outsb loope incb dec adc dec (bad) push jae xor out push popa stos lock pop push push jl fwait sti xchg ret stc jo in jb push and sarb movsl ficoml bound mov jo mov pextrw imul lods sti cmp lret out dec loope mov jl and dec cwtl ljmp dec jno mov movsb lea mov mov sahf mov inc (bad) mov sbb or sbb mov loop push inc popf loopne in push ljmp incl (bad) adc popa lods std mov stos jg (bad) icebp pop in jl bound cs stos jecxz jno imul jb pop cwtl mov mov test movsb add inc (bad) push xchg mov insb sbb dec pop clc cmpsl lods dec and mov movsb lret add orb pop cmp xor call sub mov mov int3 data16 inc in (bad) stc inc out push mov push xchg mov xchg add cmp insb xorl cmp and std push push jle jo inc aad xchg test jns adc rorl psubsw and js gs shrl fs or jno cmp (bad) fidivr xor and xchg sti test pushf in pop adc push inc sub je sbb add stc fs xchg jne push fistpll js fdivl add jp xchg aam mov (bad) sub test imul dec sub dec pop dec aaa inc sahf push jae lock add push pop sub dec add mov add cs aad adc fcompl push pop lods jecxz pop or enter and adc pop xchg in mov push cwtl mov sbb test xor mov mov test (bad) lahf loopne mov inc mov addr16 hlt push insb sub jb dec rcrl fldenv cmp jecxz mov cmp pusha int3 mov dec into cmovg xor adc stos int3 add mov es pop int3 das (bad) or xchg nop cmp and popa sbb add popa pop mov in xchg das jns jo rol mov subl cmp (bad) aad xchg lods pop sbb out fmull mov ficoml scas lock xor dec dec (bad) jge int3 adc movsb mov adc xchg jge test adc add inc out adc fcompl jge xor arpl mov inc insl ret (bad) mov pop pushf dec popf (bad) bound pushf mov dec push adc sbb sti aad iret and jl dec std pop loopne (bad) rorl cmp mov and in jbe popf adc shlb mov jle jle inc fsubl xor sbb inc (bad) test adcl jle and inc movsl jmp xor or mov xor push fadds cmc inc pop mov jae lods sub call mov mov lods add pop mov les cmp add dec in stos xchg xor aas frstor shr icebp pop push imul lahf push mov or cli mov fldt xchg lock stos loop sub mov sahf lds push push (bad) push lahf pop sbb xchg cmp inc mov je pop jl in cmp mulb (bad) jbe mov inc mov adc in or pop adc push jo pop pop gs xor cmc xor out int3 mov xor icebp (bad) mov cltd dec push cmp mov imul mov in enter add test jbe mov into (bad) or xor movsb (bad) hlt fsubrl push imull push dec mov inc repnz mov inc out jge lret insl add xor pop addr16 cmp pusha sub jo int leave jl in mov mov cltd fsubrl lods mov (bad) js lret lahf and mov add test das xchg clc jle dec push jne les pushf (bad) mov inc aas add add add lds dec jecxz xor std jb fnstenv pop mull sbb add pop sub scas inc fldenv xchg and popf ret insb adc cli xchg mov adc pop scas cmp bound pusha scas rcrl mov ja pushf fs je inc and sbb icebp mov xor mov mov cltd lods adc aaa pop das fidivr shlb add clc pop xchg or xor xor and dec clc or (bad) xchg cwtl jb xchg xchg call xchg aam lods jg jae cmovne in adcb inc cmpsb scas in hlt pop scas jge fcmovbe jnp enter into jno aas mov jne inc fildll jnp mov jne adc sar add push add std int3 aam movsb bound adc jns in pop scas mov and sbb mov in insb lcall jmp loopne dec imul push push sub gs aaa es cmpsl or iret movsb xchg jnp aam in aas (bad) out pop aaa into add dec out addr16 ret adc (bad) and sbb push inc sbb (bad) inc ss push popf sub cli daa sbb push and jo jnp xor (bad) call addr16 xor sarb cwtl imul adc sub or jmp and fnop movsl leave xor sub (bad) jb iret cwtl out push mov jg cmp inc push sub jle arpl imull push movsb xchg in xor rolb sti inc icebp sbb bound mov lret xor push jbe cs cs jle rcrb cmp rclw daa fstps cmc mov es imul adc fcomi adc push dec cmpsb sub push insl into movsb andl xor sahf jne sti stos out (bad) fldt push mov mov or cltd fnstsw pop adc adc sbb mov mov inc add inc inc push xchg into push xchg sub push rclb push movsl nop xlat and or loope cmpl aaa adc jb jl mov mov (bad) mov rol adc ljmp leave jl repnz fcmovnu jb repnz xchg push (bad) mov loope pushf fs mov cmc test pop sbb dec mov (bad) xor shlb or xchg ret daa inc xor je cmc lahf out and mov cs xlat dec repz xchg and xchg leave dec idivl xchg sti jge pop das push fstl movsb hlt and lcall lods jle mov jle push mov dec popf std pop cmp pop cmp sub movsb into push cmp adc adc cmpsb (bad) sahf jnp lds sub or popf lret mov dec jge out xchg mov sbb rcrl mov push pusha popf xchg loop scas xor fstpt iret sahf cmp xchg dec test popa (bad) lret and rcrl mov cltd push xor add and adc cmp (bad) xor sub movsb mov pop insl repz cltd (bad) mov fldenv pop movl pusha jae ror (bad) mov sbb cmpsb lret adc sbbl push xor inc xchg loope out jecxz jp addr16 adc jmp popa movsl movsl arpl into lahf cwtl xchg sti out inc jle rol rclb jg mov sbb out hlt jb or jecxz push inc test adc mov fwait and stc xchg test movsb dec mov cmpsb pushf mov dec or js lret mov cmc lcall movsl in out (bad) xchg mov out cmp dec mov lods into pop lcall test mov jmp dec jle jmp mov cmp adc scas fiaddl aad ss xorb cld mov into sbb and mov cmc pop mov ret lds das dec das rolb shlb mov inc dec mov lods scas icebp cmp (bad) fcomp call jno shll aam pop sarl lret add sbb outsb pusha repnz push mov insl jb push mov push stos ret repnz add fbstp cmp je call imul aas pop sub arpl push movsb mov jmp mov call andb mov int3 jecxz dec push aaa cmpl adc sbb jae testl jne lahf sub dec ss pop test imul jl push xchg lods int jo push (bad) mov sbb loop xlat lock xchg mov addr16 inc cld push sbb mov fcoms sub cmp adc fild push cltd dec and mov (bad) js aaa (bad) cmc cld cld mov and aaa pop xor lahf int xchg and dec sbb test push inc pushf sub outsb xchg add out cmp xchg inc jae in inc (bad) hlt lock call push inc sub add rclb cltd xor pop mov pop movl call jge fistpl sub and jne add rep jae xchg (bad) dec mov push dec popa cmc stos int3 jmp lock loopne out sbb xlat dec int jb adc adc cmp push jne dec divb dec sub pop mov lahf adc fs test mov js cmp in xor in cltd repnz or (bad) ret movsb pop pusha adc push daa mov stos in adc and mov cmc pop aas sub aas sub dec stc (bad) cwtl pop dec jge pop insb insl ret in add sahf dec fwait out pusha sbb repz pop dec mov adc lea lret adc mov hlt (bad) dec (bad) fidivr cmp sub rcll aaa lods and mov xchg mov or jle dec dec popa (bad) (bad) (bad) fyl2x inc es shld and mov push and fmulp push sbb leave and adc pop add mov pop ds loopne mov mov bound push jl cmp lock jbe ret add clc push pop or push pushf mov stc sub aas pop cmp lahf mov in fstl popa add jae xchg add add adc lods js lds repz les clc test std and mov pop push cmpsb inc sub fistl mov cmc ss cltd sbb sbb (bad) lock ds int lcall lcall pop xor daa enter mov mov xor pop (bad) int3 and das jne push pop outsl leave sbb rclb add stos xor stos mov lret out outsl pop mov nop sub or push mov cmp ss add ss repz in push inc repz add xchg mov add dec les fstl xor push data16 sbb lret sub xchg xlat pop mov sbb push mov mov std (bad) jmp outsl mov movsl call clc add or sbb jecxz scas (bad) or fwait shlb fucom jge xchg mov pusha mov inc out or (bad) (bad) rcrb cmp rolb (bad) or lahf jb aam hlt inc in cs xor jo lret ds and jb je xor push data16 lea xchg fwait aad dec fnop das les jmp xchg mov mov leave shrl mov imul mov xor out arpl adc jl mov xchg lods movsl js sub int es out inc sub movsb adc popa (bad) aad cmp or push fs das xor out lcall imull sub gs lahf shrb rcll mov or fstp int3 pmulhw or jb xor jo xor rorl (bad) cltd jbe mov pop (bad) xchg fdivl cmp data16 ljmp xor (bad) test enter mov pop sbb or dec aas xchg js sub ret jo xor (bad) mov out aam inc adc addr16 loope lock pop sub aaa dec iret adc ljmp gs cmp out fidivl push fwait or into add and or sbb mov push in fistp jecxz js sub sbb jo mov fs pop push (bad) in (bad) fadds loope jno sahf xchg push sbb lods mov mov imul movsb pop ljmp loopne mov pop or dec aad std mov mov inc pop adc mov adc sub mov mov mov ficompl sbb push mov dec sub sbb sbb fsubrl dec pop int mov xchg sub push xor in (bad) pop or sub cmp int3 into out xor inc mov in mov mov (bad) addr16 ret (bad) and imulb sbb inc mov leave mov mov lret fistp jno push xchg sbb fmul clc int adc adc dec xchg (bad) or jmp lcall pop popa xor loope shlb push std inc lods inc insl sub xlat sub ret ja mov jle stos rcll (bad) jno and or stos aas mov sub inc xlat cmc xchg lahf jle and int3 cld test xchg or iret fadds dec xchg mov adc adc dec scas jbe sbb xchg fs mov aam push add cmp fsubp (bad) xchg (bad) lock and cmp pop popf and adc dec dec mov pop and lock mov or xchg popa rcrb lahf inc fadds and sub jnp jb mov call int3 mov repz push xor movsb xchg sbb aaa dec inc test xchg push pushf je dec test icebp cmp mov ret lds push add repz cwtl dec or repz jno cli mov push fdivp push aam mov lock arpl (bad) std gs xor lock mov movsl add xchg (bad) push dec pop dec outsb hlt add or or pushf mov inc ret icebp pop test adc ret mov mov call in mov (bad) jbe,pt test lds inc adc loopne add jno inc clc xchg fld mov arpl dec jle pop mov cmc mov div push add adc lea jge mov imul xchg cmpsb push adc (bad) jne pop push xor jmp paddb sbb maxps dec arpl ffreep inc pop ds xchg inc ja inc lret pop push mov add std mov mov mov mov adc leave push dec shll int mov push outsl xor xlat mov dec in ljmp pop roll adc mov (bad) dec ret (bad) pop sub in adc movsb mov push sti mul mov add test push lock popa mov jl xchg mov (bad) in fsubrp dec jb mov loopne dec add ret adc xchg cmp fcmovb (bad) or lods ja mov xor mov and add leave xchg pushf dec sarl xor push imul jb addr16 adc jno arpl loope adc xor mov jbe test lds xor or ss pop push lcall data16 cmp rcr iret sbb push pusha add or cmpsl popf daa lock (bad) out enter lds in mov je cmp aam or mov dec xchg fcmovbe je or insb in ret and jne hlt repz xlat mov fidivrl push adc movsb leave test dec push inc (bad) mov dec jmp loopne cs leave mov or aad (bad) out adc pop sbb nop jno notb outsl xor sbb cmp movsb arpl jae push cmp sbb test andl push cmp and repz adc lods rorb jmp pop push dec inc xor call pushf sbb gs cmp and inc les add loop out adc stos mov jae loopne mov test xchg (bad) aas xchg add and (bad) cltd enter in ret sahf (bad) iret out pop jns iret dec outsb push out mov paddq dec pop mov stc aam mov mov mov (bad) adc in push dec push or push loop fild cltd shrb jno mov mov sbb fnstenv loopne (bad) dec mov inc mov mov cmp or in pop xchg out cmpsl shrb mov xchg xchg into lds adc jge insl es or mov out mov lods jo dec lods clc sti popf xchg or mov (bad) movsb push adc jle sub lahf pop and pop mov (bad) aam loop jbe loope push lock (bad) push clc cmp dec mov fs cwtl and mov enter pop decl cli aas imul and sub int3 mov out shrb mov sbb fbstp lods jle mov adc daa adc sti xchg mov dec aas jne cmp sub fcmovnu xchg pop rol add popf fdivs daa sub cmc cli cmpsb dec int out aaa lret inc mov xor xor repnz adc inc sahf jp fwait subl les cwtl std lods pop jo,pt pop in cltd mov add sbb dec fildll int3 xlat xor jnp into (bad) sbb enter mov aam push nop or push out rclb (bad) fstpl pop pop jns xor bound aaa cmpsl sbb jne out ret and or adc out xchg test mov jecxz pop or dec sar fsubrl jne push xor xor sbb inc xchg inc test add mov ja int3 xor push dec dec arpl push xchg jp or je popf xor mov xchg mov mov pop push movsb iret fdivrl int jg dec cmp xchg out and call or iret adc imul jp lea xlat sbb sub mov or fbstp in in out add push shlb imul push movsl cmc or shrl (bad) sahf add adc fnstenv pop aas adc (bad) sub push popa or daa les xchg add jnp enter pushf jg into mov ret rcr mov sti call jo sarl fdivrs icebp insl (bad) cmc (bad) mov outsl xchg addr16 inc in out aam lods das out aam enter add sbb dec dec pusha stos add mov pop push cmp cmp cs pop dec ds cmp jecxz (bad) jmp fsub shlb lcall xchg lahf dec fwait mov xor inc movsl mov mov (bad) or fsubrl sub inc imul das lods leave fstpl pop outsb adc pop lret aaa stc or scas div inc add je pop stc mov lret mov jbe je fildll loope sar icebp test int jle jno rcll iret roll aas aad (bad) dec sbb out xor rcll and xchg (bad) addr16 lods fnsave lock sbb scas jecxz call mov inc cmp jmp in push popf pop cmc or sub push cmc mov insl (bad) mov add jl sbb mov xchg int3 lock pop sti inc repz popa mov lods adc lds fbld fwait testb test test add outsl das fidivl mov movsb mov push repnz repz aad xchg gs inc push jns mov mov add add out xchg fwait out pusha cmc bound cld add lods ret cmpsl mov dec or iret xor outsl xor and arpl inc xchg jge scas sbb movsl or cmpsb fucomip mov adc into popa cmp cld cltd negb add inc dec xor movsb sbb test push add lods pop pop push sub jb xchg jbe cs gs adcl xchg cld dec and xlat xchg mov sahf mov cmpsl dec loop dec clc xorl fisubl inc mov in lret jbe mov cld inc inc scas lock xor mov inc fisubl sar dec iret dec xchg fcoms sbb pop ds mov das mov inc xor (bad) std imul mov pop fsubs in icebp sar mov mov test arpl insl mov imul jp push lock xchg js repz int3 add cmp (bad) push jmp jnp dec cltd adc and pop mov jnp push mov fstl in jne jge clc mov cld mov pop lods xor mov add in cmp in in mov adc pop insl loop icebp and (bad) int clc and pop xchg mov sub xchg ret add repnz and xchg sub pop enter xchg movsb mov fdivrl repz push lea or fistl sbb mov outsb ljmp movsl dec adc mov xchg jo mov mov cmp sti mov mov mov mov adc out fildll mov or mov add out loopne cmpsb xchg and mov daa push sahf sbb pop mov mov mov inc adc add stos aas cmc mov inc xorl inc jb mov lds and inc daa das (bad) sub push leave lods fcmovnb fwait ret in jl in rcrl push pop adc inc bound pop orl mov push xor and sub stos mov inc or repz dec lahf arpl add iret xchg mov sbb or jmp scas jecxz add xchg dec out repnz xchg repz pop sahf pop mov js loopne addr16 in sti bound enter in in add cmpsl test pusha jns movsb js aaa nop jmp adc push push dec stc fwait repnz pop add mov jl sbb sbb out pop insl insl inc xchg mov nop cmp xor outsl mov xchg cmp rcrl fldcw xchg xor or out push loop aam pop outsl fnsave dec mov mov fincstp loopne test mov lods sbb xlat or gs insl out inc fprem1 cs aas ja cmp or jae test cmp in leave pop es dec jp mov jb int3 inc lock sbb lds xchg cmpsl and loopne mov lock mov out in xchg push outsl lock jb jecxz push jb mov movsb push xchg fsts bound shr cmp push lods pop imul dec cli jae ss lret xor dec jb add sbb adc (bad) adc stc in cld and push (bad) and andb daa sub cmpsb nop test dec aas cmpsb in pop dec mov ss jg lahf ret sahf mov inc adc arpl in pop daa stos lcall call jae gs mov jp lods push std push ds adc cmp ret (bad) nop stc xlat (bad) or movsl imul aam test xor fucomip popa into push dec scas shl incl dec bound xchg loop adc (bad) mov adc mov fwait es dec dec pop xor inc push push mov adc inc adc push jge into mov mov xlat outsl pop mov mov inc xor mov jne sbb jl push pop dec jge sbb (bad) xor inc mov ficoml sub mov mov aaa scas (bad) cld mov adc mov arpl in jne repz dec push mov call fcomps push pop insl adcl (bad) out test jmp stos (bad) inc lcall or int3 jbe push cli and add adc test pushf ret cwtl (bad) movsl (bad) jge or mov cs jb gs dec les jg mov push dec insb xchg lahf aas jmp dec inc outsl fidivr jle lds xor outsb push loop pop cmp pop pop dec push dec loope fcomps mov add stos in jp test fsubrs xor push fcmovbe movsl xchg imul mov or xor xor mov pushf movsl loopne xchg sub in cld or mov idivl imul imul pusha cmpsl adc and leave rol jecxz in repnz neg (bad) aam add sub stc xchg test das xor sbb popf push sub add std int gs dec fistl lret cmp sahf lret lcall repnz movl rcrl add out or popl mov and and test jno push cmp outsl into pop into pop push jbe (bad) push push xor mov ficoml add mov inc andl sbb iret xlat enter or out xbegin mov int sbb cmp lock addr16 (bad) sub test out jne xchg push xor arpl sub dec push mov loope (bad) pop movsb adc or dec int3 sbb std jo or fidivr jle xor in lret cli jecxz pop inc cmp ret or imulb sub pop add fidivr stos scas and repz dec jbe and push flds or test je (bad) xor fbstp inc mov mov mov ds sahf and outsl push shlb mov lds xchg pop lock movsl bound fs int mov dec xor mov mov out mov xor cmp jge and cmp pop inc mov adc mov fcompl js in dec lahf dec mov addb jmp cmc xchg adc scas xchg test dec fldcw mov rcrb inc mov scas xlat dec xchg mov jns lret sbb (bad) xchg inc sbb xchg jmp orl xor mov sub fcmove rolb xchg adc or push lds lods cmp sub clc jae out sbb cwtl cld inc push inc add push and cwtl inc dec popa daa jle and inc stc xchg scas xlat xor push call dec xchg arpl push mov jno mov mov addr16 push xor adc clc push sbb and jns aam jp sbb sbb repz ret dec ret inc aaa mov xchg jae push xlat xor mov xchg lock data16 and addr16 dec mov scas sar test fstl aas movsl scas lret lahf adc sub sub cli lods call mov push sub negl adc clc xor ret jge push inc negl pop dec inc add xor sub lods inc xchg xor out cmp stos mov mov aam and cmp andw sbb mov movsb cli popa sbb int repz jns or jns pusha pop mov arpl imul test or dec stos xchg scas mov cmpsb rcrb test shl out and mov int cli jecxz cmp jge cmpsl sbb leave cmp jle fsts dec (bad) pop dec lods sahf pop add sub mov shlb cmp xchg sarl cmovno xchg ljmp lods xchg stos (bad) jmp iret push dec add (bad) and dec xchg mov push stos pop sti fist push aad mov push pop lods (bad) jge mov hlt pop sarb rcll std scas loope out dec cmc push int mov in addr16 ljmp mov add outsl sub cmp fidivr (bad) sti mov dec gs mov sbb lret daa xchg sub lret fistpll jo ret aas (bad) sahf pop movsb es nop xlat arpl fisub add stos jecxz mov sbb pop in sbb and aas int push xchg insb lcall (bad) lret lret xor mov mov pop mov push aam jmp push lret and fs push iret pop push and cmp in faddl mov jp nop push sbb test sbb sahf sub dec in push imul call ja enter arpl je cmpsl cltd movsb jb es lds and xchg xchg loopne dec (bad) bound mov sbb or inc inc mov aad fdivl jmp cmpsl (bad) pop test in xchg inc sbb mov ret (bad) in scas cmc (bad) mov sbbl call dec mov adc testb fisubl xor sbb fsubs stos xchg stos int (bad) cmp test mov or mov cwtl arpl mov adc ja cs data16 xor xchg das or cli xchg sti test stc (bad) mov xor mov fnsave outsb jge (bad) call pushf xchg inc test mov pusha mov xor mov add shr jbe aas adc je stc mov (bad) jae popa sub mov mov int xor mov adc test mov or repz cmpsb cwtl lods int dec pop (bad) sub loope dec jae cmpsl iret ds jge (bad) mov lea or xchg inc (bad) not mov xorl (bad) mov (bad) sahf sbb mov mov test push inc mov leave inc mov jmp sbb dec jecxz mov sarl push movsl ret push or inc push and sbb cmp and icebp (bad) dec test dec mov push xchg roll scas xor cs mov movsl sub mov cmp lret popa sbb jge mov sbb in push cmp jecxz and push aaa aas jnp loopne ss push notb adcl jl dec ds xor sbb fnstsw mov mov test inc imul dec sbb int3 or xchg fisttpll iret push repnz dec lahf scas fiadd aaa mov ret jbe dec adc jmp (bad) es xchg pop and ja insb sbb or and jno mov inc dec sti mov or fcompl xchg xchg repz xchg mov out or outsb mov mov or jecxz test mov pop inc adc pop jbe mov cmpsl xchg dec jle arpl cld aaa (bad) xchg pop and jmp inc js mov inc xchg arpl sbb (bad) adc fwait jl jp cwtl lods cltd xor dec lock cmpsl jl dec fwait jo or jno imulb or out ss dec or jne mov jecxz cs int movsb lods sub push mov dec mov xchg adc ss xchg popf mov fdivrs ss insl add dec fcmovnbe sarb lcall test aad cmp ja mov mov lret mov cmpsl cmp inc add dec sti sahf jne fisttp cmp push sub push aad aas sbb nop (bad) jbe leave js lahf xchg push dec stc mov sub mov outsb ret sub mov data16 dec rorl or cmp mov mov add jg pop xchg sbb push xor stc xor les inc push pop gs pusha inc sub push sub add ljmp jmp scas sub js ret ds push iret insl repnz pop out outsl jb fldenv mov ja rclb adc mov mov adc insl xor add leave test cmp imul mov or pop sbb and sub mov mov test jae push (bad) lahf xchg jmp xchg (bad) fwait adc xchg mov sti and xor popl rorl imul xor pop jb (bad) movsl (bad) inc out and scas clc (bad) mov (bad) jmp cld decl mov popa dec ror jns rorl jecxz cltd pusha inc and xchg inc mov xor and ljmp xor pop push sub dec mov jge inc addr16 jnp dec int3 sbb jns mov ficompl jecxz arpl sbb jo or jmp repnz pusha nop xchg pop xchg mov sub pop enter pop adc sarb insb jne and jo jo add mov cmp (bad) shlb in jmp or add add sbb gs int3 inc sbb cmpsl or push loopne mov sub mov and (bad) repnz fsubp push es rclb les out in jb loope enter push inc je lods test std adc movsl sti and (bad) ss xlat shrl xlat xchg xchg cmp shr sub repz add js repnz xchg mov not aad outsl enter push jl or clc sbb jg pushf stos sar sarl dec mov adc ficom ficom inc and aas or jno (bad) (bad) stos adc std cli dec inc ds in inc lret add insb dec jge sub in sbb inc negl mov xchg leave pop adc into pop mov movsb and aam jnp push sub adc (bad) pop sbb lods inc in and cmp into jnp xchg aaa out insl mov movsb aas dec out ljmp lea addr16 out in jp sub imul lock movsl push fstpl push jne icebp fldt mov shl xor or push mov mov and arpl adc ret aam iret mov decl ja (bad) movsl mov loopne rcrb pop out (bad) test call xor sbb (bad) jno mov xor ret inc push mov fs xor fnstenv mov fistpl jmp mov shlb xlat mov rep pop cmpsb je rol div xchg xor lcall ret js push push jmp add xchg adc hlt dec mov les (bad) mov out inc ss bound pop js push mov ficom mov fdivrl push je fs inc cmp imul push pop fldenv cld daa dec xorl cltd ja test in sbb push out dec (bad) lock addl push or add out call aad into ficomp pop scas aad adc push push hlt or and das mov or jecxz pop in push pushf and mov daa js shrl jno push pinsrw jbe push jecxz in jmp pop mov ja inc pop movsb cmp mov xchg cmpl adc mov or and arpl outsb sub jg lods imul pop fcmovbe lods push out mov in test into lock outsl std outsl out xlat sbbl add push xor lcall lds call or jno mov mov adc mov cwtl cld mov je mov fwait aad test inc rcr xor fwait mov lea gs pop mov sahf cmp mov add jb mov fisubr bound jmp pop or sbb jl mov stc add add mov lahf loop ljmp int3 mov fsubrs jge (bad) (bad) push pop or jp cmp adc std pop jnp mov xchg test jecxz icebp jb jnp pop push push dec and and cmp icebp mov and mov pop inc sbb push repz aas pop add xchg sbb dec popf ja jmp fwait aad sub bound dec pop inc daa pop call push mov ficompl outsb jne (bad) sbb sub adc xor jae inc add fadd adc or adc push inc sbb adc (bad) into ss enter lds lea adc sub int3 fbstp int3 xor lahf ds dec (bad) nop xchg rcll jge jnp sbb lret fdivrs addr16 pop jo fild cwtl sub daa cmp push dec push inc decl xor mov sbb out fadds in daa test cltd mov or lds mov stos pop (bad) or in xchg push cwtl xchg fnsave test (bad) aas mov mov cmp gs push sbb push (bad) cld in sub mov sahf mov aaa lds bound xchg mov dec ret dec in mov push stos clc std ficompl popf inc pop mov pop pusha jne inc cmpsb pusha in mov subl cltd or jno arpl in cmp push mov cmp sahf mov ret mov adc and ss aad addr16 adc mov sub pushf xor pop xor fidiv scas ss aad xchg xchg insb outsl cwtl fldenv sbb fadd jns cld repnz fmulp adc lahf lock xchg rcll bound pop loop cli daa jmp jp cld sarl inc pop mov xchg or sbb add imul sarb stos in lret add push call ss arpl fcompl stos out je ret or adc icebp inc cwtl xchg insb dec push add loopne dec xchg fsubrp fidivl add mov jp or aaa push adc mov mov inc sub scas nop cmp adc jge push aam leave les xchg jg mov daa stos push sub (bad) ficompl pusha rorl out sbb xchg sub push popfw cmpsl or ljmp leave je and xchg pusha negb pop inc int or mov icebp adc std xchg cmp aam mov shr call fs out cmp or xchg cld je cmp leave pop add sbb xor mov fs std add adc outsb adc test jle xor xchg mov cmpb testl bnd xsha1 cmpsb leave out insb xor xor mov test ret rorl mov dec mull xlat (bad) sti inc push fisubl les je mov xor cmp movsl int3 inc mov dec sbb shl gs xchg jnp adc and (bad) jne test and push leave mov jbe fldt js (bad) pop in mov jecxz lret cmp or cmp sub (bad) jnp dec push add dec (bad) cmc ss mov jae cld in xchg notb (bad) out icebp mov add pop (bad) dec imul popf (bad) push (bad) in lahf test mov mov push (bad) cli push stos subl or jae pop mov adc es jb push (bad) aas xchg in (bad) cmp add cmp movsl mov adcl xchg and mov daa je push test jnp,pn sub test add out adc jmp cmp test lret mov sbb inc inc das data16 addr16 ret enter push or sti sub cmp out in inc fld jp push pusha fsubp jne pop (bad) fs jl and mov cwtl inc test add std mov sbb add or pop imul lods (bad) mov push cmp sub push mov in push jmp sbb gs dec bound cmp cli in (bad) lock movsb mov frstor mov or es insl test sarb xchg mov iret scas xchg mov sub dec ret loop add icebp xor stc imul xor pushf mov jmp xchg xor dec imul mov xchg push rcrb (bad) sahf add add add or insl add push and cmp daa movsl rcr rorb out hlt mov js das inc (bad) jb shr inc or outsb lods jmp pop xor rcrl jno loope xor enter aas xlat mov mov fs adc outsl iret lret push dec mov jge sub mov lods and (bad) fisubl stos add aas and jbe or test sub lret scas cmp out pop mov cld (bad) xor cwtl mov mov push mov pop (bad) mov ficomp or inc ljmp das clc mov int or (bad) call fsubs pop push pop nop loop fnstsw imul imul gs lods enter add stos cmpsl adc xor dec outsl lcall add adc sbb mov (bad) jae or sub clc outsl xlat inc sub les cmp inc or sbb sub fbstp or fcompl and lods (bad) jbe jp inc jne cmc push mov dec push rorb fistpll adc pop ror mov dec mov mov push lahf mov xchg div je push shrl jg inc and mov push (bad) jae pusha mov mov js and std movsl mov out fs aam rcrb jno repnz popa inc aaa push lret (bad) sub mov ret xchg and pop (bad) mov or movsb mov xor insl (bad) add jno adc and hlt inc lret xchg jge andl push aaa pop add rorb xchg frstor mov xor or into jp sub mov fwait mov aaa cwtl push (bad) push mov xchg aad mov xchg xchg stos push (bad) sbb ja iret in test push sbb cmp ret out movsl cmp mov out jp lods imul mov push fnstenv fiadd jbe jae push cmp cmp xor enter insb lods jne inc jge dec push popf mov sbb adc mov xchg mov or mov bound pop inc and lea or loope out das decl push jb xor sbb and cmp push jb pop inc inc mov lock int3 ss test adc push insl popf cwtl mov (bad) xchg push add loopne xorl (bad) push pop mov mov jae sahf adc xor sti inc jno jbe leave xor stos (bad) imul fabs and mov sub sub pop int3 ret push (bad) popf imul lods push rorl pop or movsl jae push pushf and pop stos cmp lcall loopne mov sbb cs add xor movsb decl jo cmpsl sbb push out lock cltd int3 rolb push rorb add cli push push cmpsl or cmovle mov (bad) les popa adc out test out ds ljmp loopne mov stc or aas aam subl or add in je cmc nop sbb jge aaa xor inc dec cltd negb push cmp xchg ss dec je push inc cmpl xor jg jo jb clc loopne jnp xor cmpsl shrl jo push sub inc or loope popf or adc (bad) pop adc sbb imul push sbb lret push pop add call (bad) push clc sbb je pushf add ret mov cwtl mov aaa int stos test jge out jmp (bad) sbb inc movb inc std orb fbstp roll mov fbld push push push push sarb xor push in adc cmp cmp imul insb cmpsb in or arpl mov push dec adc or into dec cmp or imul add pop daa and mov adc aas sbb cmpsb sarb jecxz push ret sub add mov shr or (bad) (bad) fbstp js mov rolb push mov ds push xor inc dec rorl and in pop or mov (bad) mov pop mov xorl in sub imul xor out in jb mov vunpcklpd lret rcl fwait mov int cltd mov jge jmp or call and nop (bad) jmp and pop mov lret mov (bad) push jge add das jle mov fwait rcl lea in dec xchg sub rclb loop push dec aas push cmp addr16 mov inc adc jns dec jns stos js lea jb dec clc lods jb mov enter jns cmp xlat xchg out xchg and pop adc in std push cmp push add xlat push pop js push enter pop cmpsb push and iret lret inc clc jno ret lahf sub sub xchg loope (bad) repz sarl out mov pop outsl scas jmp dec ret cmp mov cs je aas nop push cld insb scas test xchg cmc dec push inc ss cs leave sub adc gs test lods and int3 pop test in dec sbb loopne jle xor loop jb icebp bound insl push jnp and pushf push mov xor mov mov ja push mov add cmpsl push stos (bad) xchg jl imul mov popf arpl and adc cltd pop test pop mov sbb mov mov and (bad) loop dec aam gs push or call cmp lret cmp cmpsl stos xchg outsl pop push popf adc ret push pop sub sbb notb pop jnp push clc add lret xchg fnsave std pop fdivrs push push popa arpl cs adc pop jmp dec add ret inc hlt bound xlat call sbb xchg jae sbb lret pop xor sbb push cmp popa test push sti push xchg push jbe mov mov out or cld inc rolb push sub outsl pop xchg mov cmp ds stos ret sub mov movsb push ljmp movd xchg push push (bad) mov or hlt cmp sub clc adc mov fst dec xlat adc aas sub stos call sub add cmp dec ljmp mov in cmp psrlw add and and ljmp mov loopne sbb mov mov fnstcw in je outsb mov dec scas out mov pop adc aas lahf out jb push mov out adc jbe jl shrl inc push sbb and nop mov jecxz movsb stos push aam sbb popf std sbb push pop inc mov insl cmp jmp dec test sti out push mov cli pop adc sub ljmp repnz pop sub test or sbb iret out mov ret aam lea sbb pop xchg aam adc cli pop inc add scas xor push mov xor bound pop rcr ffree push add js push cmp jp pop dec ja int3 xchg cli dec jl xchg and ret roll xchg xchg (bad) jns dec mov sub sahf out repnz or ret int3 xchg jg (bad) and jnp rcrl inc inc outsb lret jns adc std adc adc (bad) das cmp insb inc (bad) push das (bad) xchg (bad) mov call je or and push insl addr16 mov adc fild adc cmp mov xchg adc mov popa das mov outsb inc dec pop lock mov arpl sahf push mov ds adc pusha mov push and insl in test lcall or dec adc xlat stos fwait outsb dec addr16 cli shrl xchg ret mov mov ret out fisubl scas les sbb jns xchg cld cmp sbb les push push jnp stc js in test mov xorl insb and or pop (bad) subl pushf loope fcoml or xor insl dec jno push mov inc testl das shlb jge jmp std stos dec mov mov int das es mov movsb cmpsl xor test cmp sahf fldt lret lds lods xchg out out add icebp jp into fsubr mov jb scas xchg adc std push imul and icebp pop imul enter and scas mov mov into and mov cltd lds push ficom ret pop mov std aas in adc lret rol pop aaa push dec xchg push and mov push inc sbb sti outsl jo cmp nop subl in test jmp clc or (bad) imul (bad) frstor mov sbb das xor popf popf jae rcrb mov ss and (bad) test jne push jle mov es cmp in lret pop cltd test test ljmp mov dec in mov sub jnp mov mov sub lahf fidivl and insl ret repz add int3 push ja jmp es test aaa jo int inc (bad) sub push je jge addl lret cmpsl int and cmp outsl inc or mov nop flds std lds iret cwtl sarl and das and jmp test arpl and ja mov icebp imulb dec loop xchg popf sbb enter cld gs sub jg loop addl cmpsl jmp mov fcmovnbe mov mov rorl xchg mov dec add or sbb (bad) jnp push sbb imul cmp inc sub (bad) daa jo and cmc data16 aam roll push rcr sbb mov scas es stc sub adc int3 xchg bound cld scas mov pusha push dec sbb (bad) mov shl stos mov mov dec lcall dec push dec fnsave int3 or imul inc into xlat jge cmpsl xchg ficomp into lods fisttp std xor mov frstor lods cmp sub sub add sbbl sbb mov stc mov push push adcl mov push jne shrb sub mov xchg add xchg ja and sub push aam adc pop sub push dec mov imul sbb lods lods dec mov push std jbe pusha pop mov adc cmp in stos mov xor pop and dec repnz jne scas or (bad) js pop xchg dec sbb pop and adc push lock dec fisubrl jns xchg sbb mov mov jmp data16 and cmp test stc outsb push xor rolb test fidivrl jge dec inc int3 icebp out mov sar mov addr16 dec pop and pushf pop lret lret cld jmp cmc dec mov sahf xor fisttp xchg push add jge (bad) inc mov jl xor jnp mov jo lahf lds push aas xchg xor mov cmc lcall mov in mov cwtl xchg mov dec lahf test sti xchg lret data16 mov cmp (bad) dec jbe xor in lahf jnp cmp sub push cmp popa paddsw xchg jp insl outsl adc adc jno xor dec mov and rcll add or fisubl xor and jecxz adc mov aam (bad) sbb mov inc and pop in push push mov ss fstpt adc sbb add bound popl aas (bad) push frstor int3 lahf sub push lcall sub jle xchg shll inc dec bound xchg (bad) mov push inc insb cmp int jbe xchg jmp enter xor xchg xor jmp jp or nop pop adc sbb lahf gs mov dec leave mov aaa (bad) dec mov pop stos xchg adc jo xchg push pop jmp jle xlat pop fld sbb cmp dec (bad) adc rcrb xchg iret mov scas jb fimull or mov mov cmp adc mov add or add scas (bad) fstpt and mov push adc jp loope gs inc das push push lea adc pop stos in roll jg xor xchg in jle fimul inc std mov or stos pop sub out ret lret dec mov (bad) cmp std adc call mov jl,pt adc data16 xchg jmp test test fdivs pop test xor and sbb lcall xchg lahf adcb pusha lret shr sub dec push dec ret mov mov (bad) push popf push or pop add sub scas ja sti or dec fist mov stos jg cmc dec push leave mov fstpt adc mov mov cmp ljmp in mov xor aaa jg ss and cli sub aam pop lret arpl aas push lret sub ret sbb jae popf pop lret xchg lahf xchg jmp ret mov (bad) mov divl insl incl data16 or jbe fisttpll imul add lds (bad) rcr sub lcall push loope mov add daa add or adc lcall sub mov push mov stos lock fisubl out outsb in or xor inc mov mov aad jbe mov fwait sbb es adc fs cli pop iret incb into cmp cmp mov jnp popl movsl sbb push mov popf jecxz lods leave xchg sub bound int je lods hlt mov jmp ds inc imul mov inc sbb dec xchg les pop push push mov jmp xchg imul sub jb or pop insl mov lods xor cmp into jne outsb fcom adc icebp mov cmp sahf leave test mov or test es and fs jnp lret xor push mov int pop sub adc mov add xchg out lret (bad) in mov cmp xlat mov xchg hlt lcall cmp fwait jmp iret mov dec jmp xlat push dec aam dec sub mul (bad) dec jle stos aad push cltd mov pop cwtl scas popa sbb lods mov sbb inc jno sbb or daa fs js dec xor test push lret push jle add (bad) mov xchg adc testb popa push fcoms push mov or xlat out cmp xchg dec mov dec and pop aas (bad) (bad) std (bad) mov lret leave mov cmp lret mov leave xchg jbe js cwtl addr16 decb mov lds loop je in sub xchg gs sbb std xor cwtl test xchg push stc fstps in aas out sub push call mov (bad) out fwait jg and ss xchg int sbb cltd sub mov sub or xchg inc mov in and or push xchg insl add test leave xchg adc mov inc je dec aam mov and (bad) push push jb xchg ret jle jecxz (bad) out dec rol mov mov mov xchg in and jae pop (bad) and pop call jp and dec mov push cmp ret (bad) mov or out sahf gs loop xchg sub loopne xor mov sbb or mov jmp sub push lock test aas addr16 jge mov xor sbb jbe pop mov or cmc sub dec or mov aad insb push lahf stos lret push mov and lods mov pop in xchg (bad) jge pop mov xchg jns pop jne xchg mov scas insl ja leave push jbe pop je cli mov jnp repz cmp adc jl pop mov sub xor movsl inc ret mov dec orl mov jmp sbb fcoml xor and lret add scas push (bad) ljmp jle jbe pop xor mov inc stc out std mov jecxz sbb aam test xchg xchg dec pusha (bad) in int3 and (bad) xor and (bad) int adc out mov mov or xor ret inc shrl (bad) test mov (bad) (bad) pop leave scas fiaddl testl sahf adc xchg stos andl xchg xor addr16 lcall cmp int3 xchg test shr (bad) mov cmp aam outsb cltd dec mov test mov (bad) pop push out or (bad) mov ret jbe cmp push push push (bad) pop mov orl mov adc pop int3 xchg or mov jg sub cmp push jmp lock outsb dec in mov dec std jl cmpsl fmull add clc push adc xchg mov adc jne fisubr pop scas mov es psubsb out popf dec ss aas insb mov xor in mov loop movsl xchg out cld cli dec icebp rolb pushf inc mov jnp xlat mov ljmp stos aas iret jnp sub jae cmp les ja adc clc jg push pop sbb jmp mov mov inc gs mov cwtl mov or pushl cli inc pop out jmp cwtl adc std jecxz inc loopne jno sbb icebp je cltd dec jge daa xlat test cltd roll (bad) ss add ss adc mov out movsb or sub enter pop test sbb pop and insl into jb mov movsl negl inc mov mov jns xlat cltd (bad) jns sarb call push cmpsb jo outsb xchg insl cmpsb add imul push add xchg jbe sbb sub jecxz sub cmp cmp lahf dec stos addr16 cltd inc leave mov ret bswap pop ss ja rorl and (bad) add xchg jb ja orb adc push inc insl dec subb xor mov pushf in es iret out inc xor jne xchg or or cmpsb mov lret popa push cmp push and adc jb jnp jle xor dec adc mov mov fwait dec mov dec push callw inc orb mov pushf in idivb fwait sahf inc inc or jmp movsb icebp cmp dec sbb mov pop mov sbb jg jbe cwtl dec mov mov sbb and clc (bad) das jle pop roll mov pop gs xchg stos into loope push lock repz push mov outsl jns jno sbb rol xchg rcl xor (bad) ja gs hlt mov out mov jle arpl pusha clc bnd cmp aam mov outsl mov fwait jns xlat push mov imul mov (bad) mov in loope push mov and mov adc mov addr16 stos repnz insl leave in sbb sbb sub cltd xchg sbb add sbb enter lock out or movsl fdivs testb push xchg inc or xor cmc jecxz mov mov cmp cmpsb xor sbb xor mov (bad) mov jae cli movb jns dec xchg repnz test ds cmpsb push mov leave adc lea out push jb hlt out cmp mov pusha mov cmpsb sbb cld and pop repnz cmp or push in setb (bad) mov mov aam push push fcomps lods in (bad) xor lret les fs lahf outsl dec lods rorb xchg addr16 push ret push jae into push jne and faddp frstor inc das lret push lea jo lret cmp scas push lock clc cmp cltd jl nop and nop cmp in cmc jmp jns pop ds inc fcomps pop mov xor fs xor aaa in sbb (bad) xchg dec cmp imul xor ds icebp dec pop sub pop xor add mov xor adc (bad) pop test jle es test dec arpl (bad) fnstsw jg sub mov les jp lods cmp cld sbb jo adc jb inc sub mov xchg jecxz dec jo sbb mov and cmp (bad) pause ficoml movsl sub sbb jno imulb pop dec xor and out sub sti repz pusha jle aam xchg pop adc sarl imul repz mov enter fs aaa mov repz es dec push in (bad) jnp arpl cmpxchg and out adc (bad) mov inc out rcl daa (bad) xor push scas jno arpl adcl pop mov xchg faddl (bad) incl lock sbb lods jnp clc (bad) or imul or mov sbbl and cltd stos insl sub jl mov or dec aad insb inc xor sub pop nop xchg into cmp mov aad mov scas movhps xchg xchg call jnp add sub stos cmc sbb ja jne mov test xchg jo pop aam ret pusha in loopne xor test jbe mov test ficompl jecxz orl mov pop mov sti sbb setno mov xor cmc xor sbb xchg xor or cmp (bad) xor pop sbb mov pop (bad) cmp std push in sarl idivb int3 mov push out rcr add sbb pop push aaa das dec divl andl and call adc lods or in and sbb jae sbbl sub pop nop fnop pop pop mov into sub ror loopne test xor inc pop pushf adc mov mov leave inc lcall test fmull or xor dec daa xor jo jge out outsb sub xlat or test fmul adc or lahf push sbb les pop ret cli adc lcall out inc pop ljmp xchg fs lahf cmpsl in xchg add xchg mov xchg inc add aas xchg xchg outsl inc ret insl adc popf or (bad) dec xchg repz sbb or out and xchg mov aaa je cmp ret insb out and push xlat sbb xor ret pop fidivr icebp cwtl test mov and and popa push outsl fadds push mov mov mov dec into loope pop dec das xchg and add push in jl cmpsb mov fwait ret dec clc jle imul aad pop shrl sqrtps push xor xchg data16 int3 fstps std push addr16 adc rolb mov pop int3 xor inc (bad) push dec xchg push repnz out dec pop ret pop scas lret sti and mov mov out pop dec and stc push push xchg rcll sub sbb mov push mov xor sub popa ficompl in pop push add pop movsl adc push mov mov out jbe dec stos cmp repz out push cmp cmp lahf lods hlt xchg push xor inc lods scas push push jns ds std ss pop mov inc iret add cmp enter leave pusha inc addr16 faddl in and repnz repz int mov xchg mov lods xchg ret mov add xor lods (bad) test dec cmp xchg cwtl lds mov fildl jnp outsb int3 sti add mov call mov fnop loop fs mov clc jbe cmp jns sbb xchg or sub pop jmp inc out sub cmc dec lods xchg ret sahf add add cmp jnp or sub adc or xchg push or lahf mov push clc les data16 sbb pusha pop push and lret sbb adc inc imul inc jecxz lahf arpl add shr jno sub sbb inc hlt xchg sbbl cwtl pop sbb cmp sub (bad) mov insb dec mov xchg mov mov push movsb mov stc xor mov aam sbb mov mov cmp jns (bad) sbb sbb push pop mov mov mov or jno mov sub jae lret cmp aaa call and imul popf dec imulb sahf adcl jae lock dec mov dec cmp stos pushf in leave adc adc push cmp push mov jecxz xchg stc sub into and cmp rcr cmp ljmp mov data16 cmp jb jo movsb xor mov push (bad) hlt and dec dec xor pop pop scas cmpsb aad inc dec addb push ficompl pop ret push and js jle jge sbb sub xchg pop and jl ret mov fcmovbe aad pop cmp aas fadds popf fiaddl or sub sub cmp rcrl lds (bad) pushf mov stos mov fildll (bad) mov icebp orl ficoml mov cmc adc cwtl mov jl push ret std xor iret dec lahf pop mov dec inc ret imul push out add xchg xor dec in dec dec adc int3 pop inc mov stc jle xor push les adc pop in mov cmp push sub icebp aaa xchg out and scas rolb jb aaa (bad) ljmp dec mov adc dec jo lret jp fdivl cs pop sub jo mov mov push xlat loopne in (bad) js pop add cmp adc in jmp jno into (bad) std pop lret pop adc ret xor cmp jmp push hlt pop add jmp es xchg add cmpsb pop rcll pop in pop insl ss lcall pop int3 jo insb (bad) iret mov rol dec fcoml in adc adc push movsl mov jg xchg inc xlat popf imul sahf sbb mov int pop sub pop and sbb pushf loop push mov mov cmp test add jl add loop jnp or lcall lock dec xchg sbb repz jo mov mov int3 movsb cmp dec mov jne or jge or jno,pn das add jmp inc test push adc cltd ret jbe loop clc out clc ja add pop and dec (bad) rolb xchg jge sti rcl inc cmp sub mov int3 ret xor lcall xchg fst mov pop xchg (bad) push in fldlg2 loope sbb addr16 or xorl push addr16 out sub hlt mov fmull push and cs inc loopne mov adc aaa adc aam fyl2x jge lcall rcr daa repz mov leave imul or repnz int3 mov dec push push jb cmpb nop adc dec test insl pop pop push jnp mov adc ja sub push daa sbb or subb fistl out cmp mov and and or inc dec cmp dec jg push mov lcall pop xchg imul xor in lea jle lret pop push out pop bound sub pusha dec add sub and sti xchg xchg xor rorb pusha xchg add call adc stc jbe scas xor mov xor out sbb xor std stc sbb cli movsl sbb cmp pop fistl sbb pop add sub mov xor fcomp add fistl test clc cmpsb jne daa int jns jb dec out test rclb add incb jmp hlt stc and mov arpl pop in ret imul jb (bad) xchg lock ljmp test sub sub dec pop std and inc stos sbb mov movsb cs (bad) bound rcll lock jl and cmp std cmpsb pop add mov mov divb stos inc or rol fsubrl mov and xor xchg jno add mov ljmp pushf inc mov in setno cmp mov mov push inc loop push pop enter mov sbb ja jge and cwtl inc inc repz arpl or xlat push outsb aaa and movl pop bound sub ds cs outsb fcomip cmp mov in jle jg cld lret in push lea sahf xor scas dec add hlt sarb ljmp ljmp bound ret push cltd dec cld mov lods lds xor std psubusw cmp dec (bad) or mov adc fsubr (bad) call lret clc cld mov pop sar push mov xor (bad) sub mov popl fdivs sub jmp bound test clc push cmp push test sbbl sub or inc jno aam (bad) clc (bad) push add out repnz inc shr lock and cli clc mov mov clc sbb jne (bad) xchg fwait dec or sub cmp mov dec cmp xor push push pop fsubr not mov mov stos push mov jge xlat or js and add mov push adc pop mov add fcomi fst dec adc movsb into push adc adc into aad scas sub addr16 or mov jecxz inc shrb dec out nop lcall fldcw leave insb in or pop mov fldt mov or push mov inc sbb sahf push add daa xchg repnz push add test lcall cmp imul test cmpb out push sarb push loopne jge mov cmpl cmp (bad) mov xchg mov stos popf add xchg pop in (bad) (bad) push jb cmp push xchg roll add rcrb lcall arpl jb out aas test pop add mov cld pop add call jne sbb pop sbb mov jp add lock mov ljmp stos mov sub aaa (bad) nop lret push outsl arpl jmp stos pusha movsl xlat (bad) mov movsl and mov (bad) pop pop mov out icebp pusha sbb add jne loop or push sbb in out loop xor mov sub popa xchg mov pop stos xor xchg insb pop push jnp jns test call dec dec jmp jecxz pop insb mov jg inc cmp icebp roll cld in shrl sbb mov int cmp sub mov imul imul add aaa lea lcall (bad) notl in sbb jb into or add push pop insb inc aad out ds out nop fld pop and jbe cmp inc (bad) es dec mov sti mov pop iret ret ret outsl fcos arpl adc pop mov and out (bad) rorb out pop test add inc dec and cmpsb dec shr imul mov fidivl inc gs daa cmp jle dec dec push dec enter xchg insb push out xchg sbb xchg adc mov and adc outsl lds imul mov sub fwait mov test ret jns mov pop add fucom xlat ret out movsl adc fbstp dec std pop fwait push mov fiadd add push inc push dec sub lods lea dec mov je in sbb push jg aas ret push jl mov push stc adc sbb push je push divb cmpb pusha mov push (bad) aaa imul sbbb mov gs stc lret ret fs xor fimull js adc inc rol insl stos (bad) gs cmp fnsetpm(287 mov test mov (bad) stos (bad) aad inc push adc pop inc add idivl ficom cmp lock xor out pop dec movb gs sbb push daa pop lods mov dec dec xchg push push fwait mov je shrl sbb jbe mov dec xor sub xchg push jb sbb adc cld jp xchg push je jle andb push add pop sub aad mov xlat jnp and cmp and pop rcrl xor mov dec inc loope dec mov mov or js inc repz mov push pop inc xchg fdivp add push lahf cmpb mov or xor test pop push jp sub sahf inc popf bound push xchg out fsts and mov xlat in in pop add (bad) sub pusha je stos bound loopne js ja (bad) orl push ficomp jp xor std and sbb pushf test test faddl pop inc scas das mov std lds pop cmp pop mov dec sub sub lea jns aas add movsl mov jg adc push xchg insb stos sub in cli stos add mov stos mov setnp sbb mov mov int3 mov nop pusha pop icebp inc jbe jb adc daa fisubrl pcmpgtb es dec dec add jmp cltd xchg jae jo xchg leave mov push (bad) xor xchg cmp fild jne xchg mov xchg gs push cmpps pop arpl adc or xchg inc ffreep sub pop hlt push pop lret or jnp scas cmpsb sub inc or jno inc movsl jno adc enter push push popa mov sub add js shrb pop loope (bad) (bad) addr16 scas mov out and sub pop xchg add aad xor xchg sub fisttp sbb lahf jns dec (bad) (bad) idiv shlb cwtl xor test rclb cmc sahf (bad) mov clc mov jns movsl mov xorl imul test cmp and add leave insb ja outsl icebp clc mov mov xchg sub in and add lcall out jnp push test add call insl mov and xlat (bad) out xchg loop xchg stos mov ror mov popf loopne aas aam dec cmp jne pop lds pop inc aad (bad) fildl pop push pop lods push push add add ds mov dec xchg stos sub add test out into dec test add repnz jae pop adc in mov lock fwait inc push mov xor sarb push imul inc bnd dec hlt mov js (bad) cwtl adc mov adc mov sbb popa cli mov inc xor jb pop call stos inc sub mov sbbb (bad) ja pop hlt lds repnz lcall add scas or mov outsl outsl push mov icebp imul mov cmpsb jno popf cwtl mov jl push xchg mov pop stc jg mov mov cmpsb xchg xchg pusha cmp cmp mov jmp jg fisttpl data16 pop rcl mov or out das xorl cmp mov dec xchg push jnp (bad) mov test std fstpl mov mov (bad) fdivl jae out inc mov inc leave dec mov seto sub ss (bad) sub cmpsl js push sbb rclb leave xor leave fstl repz sti inc outsb lcall pop stos idivb dec (bad) das pop int3 jnp orl mov addr16 sti dec (bad) mov incb nop mov and push sub ljmp mov and (bad) jb and call pop test mov pop (bad) les cmp mov sbb scas push into add outsb inc push lahf rcr jmp push pop dec imul and out and cmp in test insl adc hlt enter xchg push add lret xchg push (bad) xchg adc xchg adc mov pop xorl es mov mov cmpsl test adc mov jne fcom repz clc std and fnstsw decb test outsl pushf push mov and (bad) (bad) outsb dec scas std cmp movsb jg fwait mov push and sub std (bad) or ffreep add pop out push xchg mov xchg mov mov adc inc cmp cmc iret faddl and xchg push sbb stos add fwait loopne ja iret mov cmpsb mov cmp or sbb arpl sub (bad) push lock mov ret dec in inc inc adc add pushf enter leave inc sub adc mov inc sbb pushf xor jno push insb (bad) xor and imul mov mov cmp jno add mov in mov sbb pushw daa adc push adc jns aaa out (bad) out and pop xor push or cmp mov movsl out lahf xlat sbb cmp cmp pusha pusha pushf cltd ret insb cmp mov scas mov fimul lds xchg fsubl mov inc mov sbb sbb popa mov add push sti xchg sbb cwtl lret jbe cmp sbb scas jbe pop in dec pushf data16 cmpsl push inc outsl pop or cld leave mov lret jns loopne dec inc fwait adc loop mov iret call push mov aaa sub adc and popa mov ret gs pop clc enter pop mov mov notl mov mov popf addl bound test scas xchg push adc jge jecxz (bad) jecxz hlt subl sub imul mov adc xchg div pop lret fisubl add rcr and iret adc inc cmp push sbb in push pop (bad) sub add lahf sbb test mov das pop scas mov shrl (bad) fldl (bad) daa cmp movsb push lahf in mov xchg ja fnstenv xchg adc adc stos mov push ljmp or fisubrl out test sarb negb cmp and shll insl fldcw mov enter add add sahf mov dec xchg fwait insl jne das mov cmp push sbb lret mov in or cwtl nop push je xchg stos icebp jns aam and and xchg sub adc aaa mov outsl aad imul stos dec sub adcl jnp jmp xor inc xor mov pushf inc inc xchg mov cmp dec pop mov mov pop inc movsl sbb xor add imul in or mov cmovg push scas fcom or xlat mov mov mov lock (bad) call mov addr16 dec lahf out or lret xchg in jp test push inc adc adc adc pop ret rol cmp push fwait enter cld ljmp cmpsl push fisubr enter xlat daa xchg mov and call cs xor nop pushf mov loop push (bad) fdivp mov ds les outsb dec rcrb sbb mov sbb lcall cmc scas mov sbb mov mov ds mov es mov or aam cmp and push cs or mov lret push lcall inc mov sbbl (bad) lds lods mov jns stos sub pop pop jno jle ret xchg pop push inc dec mov test bound mov fwait ja xor jae mov pop dec mov std sub or add cmp xor je adc addb stos (bad) aaa (bad) in mov arpl jno test xor mov lods xchg movsl aaa dec (bad) leave mov or pushf push daa scas adc and and jle test enter in stos into ret mov fs add rorb sbb xor pop ds ljmp orl fwait xchg mov sub cmp sbb lahf loope adc xor stos cmp cmp jge out sahf or adc mov push stos xor aaa jbe gs rcrl test scas jp sbb jb adc ret mov enter divb hlt adc cmp jg jbe push gs add cld xchg pop push lds inc pop mov (bad) or popf jnp and (bad) repz mov add push in dec jmp cwtl push push lret pop pop mov sub push out pop adc aad xchg pop js pop lcall fisubr dec pop ret dec push mov push fisub pop pushf (bad) cmp hlt cmp xchg push clc and jbe and push in fstpt aaa jmp sub in mov (bad) das fcoml mov add pop iret cmp in xor fildl aad push leave or aad stos stos repz sub pusha sub or sbb cmpsb je inc mov mov lods lret xor pushf push test sub push hlt and (bad) loop fucomi shll inc inc xor xor xor scas les ret xor pop stos test xor push jo bswap xor cmp push cmp add movl mov sub mov ret mov or out lock jl fdivrs or int js fcomps cmpsb (bad) xor lret dec sahf loope cld pop pop stos pop imul dec jo idivl push jle adc sar cmpsb into in sti xor in or test xor xorb loope aas mov outsl dec xchg cltd add cmp pop cmp push addr16 adc pop fsts ret es sbb fisubl xchg push outsl jns loop mov xchg popf cmp (bad) jl fsub pop dec mov lret stos icebp cli xchg jle,pn cmp push insb xlat pop jle mov int xor daa (bad) mov dec aaa cmp pop (bad) data16 out push fisttpl mov jmp in mov cld fdivr pop nop xorb dec out cmc dec sahf idivb jno daa int addr16 mov divl add xchg imul cmp mov xor push jg (bad) aam jg xchg lahf cmc into jecxz push dec mov dec ret cmp or mov adc lret cmp xor sbb lock outsl clc call js xlat jo pop mov mov mov test inc jl out inc mov lret ret pop adc (bad) aad lret push bnd jge cltd test int int3 inc push fldcw jne mov test push fwait daa xor fmuls sbb add dec (bad) std daa jecxz dec or add mov mov shl add idivl jp int3 push adc mov mov or mov mov rcrl lds mov ret add jle das mov fisubrl add sar pop inc test jns lock add mov push xchg fs and xchg sbb xchg inc pop sarl mov lcall mov sbb mov and in in inc pop push lods sub adc div cmc movsl fbstp sarl movsb repz scas mov add jno dec repnz movsb (bad) xor gs adc btsl clc xor add rcr outsl cmp popa (bad) cmp outsb dec xor jg ficoml jae mov test sbb xor jno outsb ds push stos or loop push add lods fdivp repz int xchg sbb inc dec mov (bad) push add cmp adc decb daa outsb push jae rorb push in fmuls inc dec movsb mov mov pop gs loop aaa xchg jecxz mov or inc cmp push add cmp push int and enter insl test jb push inc adc sahf cmp mov jg leave sarl inc clc pop add pushf push (bad) aaa dec pop cmp mov cmc dec or xorl nop pusha scas pop gs jnp je cwtl jne bound loop insb das pop xchg sub gs testl jp xor jno xlat pop add dec xor cmp jg nop cli sub cmpsb sub add mov push mov daa ds pop test dec scas mov popl fs pop ss push cld test cmpsb mov (bad) mov pop push fmull mov aas xor add outsb push jno and xchg int lcall jns divl cmp dec test aad jmp dec std push cmp push push stc call jb leave aaa std sub add fwait das ss fcomps xor fsts xchg cmpsb lods inc xor div jne pop aaa mov cs xor dec xchg jl lahf lds mov jne in mov shlb pop and insb mov (bad) jl or int3 and in scas cwtl test xor mov pop scas xor in stos fisubrl imul and jmp sbb adc and in sub insl pushf cmp lods fsubrp cmpsl jae les jbe call (bad) xor (bad) mov nop mov cmp ds popf cmp fnstenv subb fwait sub loope pop in xchg or sub dec mov push cmpl xchg or xor push (bad) pop out in adc hlt out test add sub daa (bad) leave push adc ret enter mov in test xchg popf insl outsl xchg sahf (bad) sub or shrb cmp jl in xchg shrl loope in jle pushf adc push push (bad) mov fs divl rcrl adc mov dec stos clc jbe ss push rorb fucomp dec pop xchg cld mov fs (bad) call jge cmp test decb add mov add mov rorb int mov (bad) jnp xlat in dec jns push test push lahf cmp push ljmp out pop enter pop rcll xor and pop xchg push arpl into inc cld cmp sbb and xor adc lock inc insl dec outsb jmp xor dec and int3 cmp (bad) and and xor mov lcall xchg adc cwtl (bad) pop cmpsl je and rcrb pop jbe popf cmpsl jecxz mov aas lods and add mov leave mov bound dec out popa inc xchg push mov out push shr sbb ljmp lea icebp data16 mov lret cmp sub inc mov mov pushl push stos pushf jle mov pop sbb repnz and cmpw sti jmp jge ljmp clc dec dec je mov repnz jecxz movsl push ret xlat pop ja (bad) mov loope stos fstpl sbb out arpl fsubrs xchg add (bad) in adc pushl jl (bad) cli cltd pop iret test sub fsubrp scas add mov popa mul mov jmp out mov int3 inc ss cltd repnz lods add push push dec or pop mov je (bad) xor adc dec test inc ret dec push mov inc sti add clc repz sub or inc inc pushf and aaa popa insb inc and pop mov mov data16 (bad) mov iret xchg das mov (bad) lcall sahf pop dec gs mov adc adc movsl rcrl ds xchg mov xchg inc inc jp jne xchg cs (bad) (bad) ljmp jmp out je or sbb jb mov lret or bound pop cmp mov in dec mov sub inc test mov push dec test nop and dec dec out mov sbb or aam dec adc (bad) push mov xlat mov les mov lds inc rcll mov xchg sbb add xchg add sbb and aam or sub fildl (bad) xor push std test adc xor clc stos insb movsb int iret sub or ja inc aaa sbb dec push jp jecxz xchg sbb outsb inc add arpl ljmp mov icebp cmp adc push add ficoml int sbb xor mov xor add pop outsl mov and sbb mov and inc xchg shll add je outsl ds mov and (bad) int fmulp scas xchg inc push into dec mov ja leave mov loopne (bad) or or and add enter fwait lds int3 and and addr16 lods je pushf add movsl adc cmp lcall addr16 test stos sub insl repnz inc push sti jecxz sub and and inc notb std jl lcall adcl sub (bad) scas lret inc xchg mov push fs push sub sbb (bad) adc loop cli push inc mov mov cld xorb push mov push mov ret xlat xor pop jge mov idivb icebp mov outsl bound and inc push repz or push sub mov lods movsl inc cmp repnz mov into mov pop and cmp xlat push sbb repnz inc test push pop and pop pop gs (bad) jo xor inc mov leave imul cld dec adc addr16 mov jbe iret daa add xchg mov (bad) sub push push int sub (bad) in inc (bad) fcmovnbe mov or out (bad) cmp dec cmp push mov ss iret fsubl call or popf sbb cmp push adcb cmc cmpsl repz jmp (bad) mov faddl mov ja jl sti jne or sbb imul xchg mov hlt pop and mov into js int mov or fisttpll mov fs (bad) mov fisttpll insl mov inc pop add push pop repnz movlps cmp (bad) add cmp fidiv jns push ror sbb mov sub sub mov (bad) dec ljmp push push int xchg pushfw repz pop jnp cmp jl subl les (bad) icebp fst inc adcb mov and inc hlt or mov cmp lcall bound test cs pusha xlat jo addb and inc xchg loope xchg mov mov mov pop aaa inc mov mov sahf mov xor add arpl xchg cwtl push mov insl mov cmp mov lds sbb jae cmpsl scas xor mov inc bound mov cmp sbb rol dec aad mov pop and dec loopne lods lods lods cmp and aam inc adc push cmp cmp or adc test sbb and dec fs outsb dec data16 mov loop sbb scas iret pop arpl sbb xchg test or test loopne cmc incl aas fwait jnp outsb hlt jns push pop pushf ljmp lret bound push jne out or push fdivrl cltd sbb push (bad) fdivl bound and int3 dec jle cmp xor xchg jecxz or and fwait pop pop imul jecxz xchg aam inc in frstor clc add rcrl fisubr jmp out add (bad) mov mov je call fsin pop in pop fmuls jp stos cmp int (bad) data16 dec sub mov xorl sbb jge mov test jno sub push jp movsb push add test fdivr std mov insb mov (bad) in sbb jnp or lds outsl int3 or or jae cli xor jns (bad) rol push xchg aad leave mov lods mov xchg sbb and stos sbb inc push dec pop cmp pop daa insl xchg popf lahf jns cwtl shll cmp sub rcrl push pop test cli frstor cmpsb fcmovnu fnstsw or or (bad) mov fcoml arpl mov (bad) dec pop mov jmp jns mov sub add jb sub data16 push cmp out fistl add push out lods repnz push sbb and sub xchg fnstcw sub or loope ret inc popf leave ret cmp subb popf jmp pop push in nop sbb sbb add fcompl stos and cmpsl xor mov xor movsb mov sub dec mov rcrl int popa mov aam pop or mov and stc xchg sub nop cltd jl sbb arpl dec stos inc (bad) fwait rclb fildll rorl fmul sbb pushf mov cltd sarl sarl test pop cli sbb scas mov lret (bad) fs inc lods xchg sub in jle (bad) jbe sub (bad) pop (bad) mov movsb add negl adc jo mov aas (bad) pushf bswap frstor adc adc scas fadds inc xchg test mov outsb xchg ja sub cld movsl stos cmp test cmp mov dec pushf mov test loopne xchg push pop jo lds sbb sbb fs es or (bad) outsl sbb mov xchg mov and mov in push xor fsub or rcll addr16 dec movsb and mov in (bad) neg dec sarl rclb and jp dec lods loopne lahf fdivrs xchg cli lcall adc push mov shlb rcrl mov popa (bad) (bad) pop mov test push mov and movb icebp fldcw xor inc hlt (bad) cltd pop nop mov or mov adc movsl pop cmpsl sub mov dec adc push push adcl xchg and add and aad jge out sub nop aas test ja xchg sahf sbb les lret or pushl inc mov (bad) lock loope add ds je ljmp adc cmp xchg and stos push jo in in jo ret fmull ljmp sbb push jle lea jnp cmp repz sub add jo ret jae lea pop pop negl pop cltd cmpb je push xor xor call add (bad) out dec xor adc sbb mov or cli jmp xor out adc je insb mov rcr cmp xor jg xor inc push lea mov pop adc arpl push and cmp xchg mov dec loope pop mov insb leave adc sbb data16 je jbe xchg pop jmp push mov xchg pop stc inc outsl in fldcw mov mov cli popa lcall (bad) xor xchg cmpsl xor sti dec mov xchg xor add cli (bad) jne pop jae adc std adc xor mov (bad) ljmp das cmpsb imul fstpt jg add mov scas jb xchg or shrb test xor inc mull enter jle sub jecxz xor sbb mov xlat orb insl mov or sahf mov xchg lods out testb pop sbb and adc add mov xor scas ret cld movsb orl xor sbbl dec dec fwait jb out loopne fisub ret xor pop bound lret mov fstpl pop xor dec in mov dec dec insl in pop je jbe setb mov adc rolb or call jb,pn push adc in fsubrs stos sbb or jb (bad) lds or jnp outsb test jnp mov rorb inc add adc push mov add ret pop sbb aas push icebp lahf dec mov dec (bad) stos xor push aas pop cld cwtl (bad) xor aam jge xor push dec rcl add repz add fadd push sbb jmp mov inc xchg xchg pop cmp adc inc fsub dec cwtl pop test and mov jnp ja push add and ja ljmp sbb ret or sarb sub lret mov test jmp pusha mov lea call cmp mov cmp clc shl push test call push lea je pusha jmp lea jne cmp dec mov neg rcl pushf sub sub lea jmp lea jge rep bswap pushf mov bswap jmp stc cmp cmp push lea jae ror cmc sub mov neg mov rol rcr mov pusha mov xor stc repnz push lea jne add stc mov sbb sub ror mov clc push sub movl pushl popl cmc cmp push push jmp rcr sub or inc adc cltd shll std stc sub pop lods xchg out pop mov cmpsl in in out (bad) and hlt xor xorl imul lret in cmp mov stc cltd jns sarl mov xor shll idiv jmp add mov inc mov ret ret dec mov test xlat fidivr adc loop scas push pop aam add sbb pushf rclb mov aas xchg popf js es sahf adc or (bad) arpl jg push ds lret pop popf (bad) loop mov fs jae pushf movzbw lahf not xchg mov lea jmp das iret adc or inc sub gs lcall jmp cmpsl mov std in xchg dec mov nop fsubrl jo adc sahf push and sub hlt ljmp fsubrs lret or clc and pop in sbb (bad) fdivs scas arpl test jg lods jno lahf push repz aad (bad) adc (bad) fldenv aas xor adc adcl jge rolb mov dec ret lcall divb imul dec notl inc xchg ret clc add data16 mov inc and setbe call mov outsb cli adc inc insb daa xor xor xor xchg xlat dec stos mov rcll cltd ret sti or jle mov insl iret movsb jp test fs add je scas or xchg popa fnstenv lcall mov pushf lahf fbld inc cmp dec (bad) xchg cmp add fucomip dec cli cmp and das and pop sub sti mov addl aaa lods jbe divb rcrl xor (bad) into push mov lods int3 imul mov out lds (bad) mov ret inc pop xchg inc pushl mov pusha mov pushl call movzbw mov mov pusha lea jle pusha xchg pushf push jmp lea call cmp cmp call add inc gs outsl fs gs popa outsb fs gs add add gs imul add inc dec cld fcmovu mov clc pop pushf in shll jne repz pop in fisubl mov (bad) ja pop cmp movsl inc adc lcall cli dec sbb daa loop lock sti mov sub and out push xor mov out outsl inc aam gs add cmpsl fs mov pusha out or cmp push dec leave fild inc sub jo mov mov mov dec and jnp xor int3 add fdivs (bad) test adc out inc add add or add add or add add add add add add std xor add add push mov add add add add add add add adc lret add jle add jge add add add push clc leave push repz mov xlat and out mov popa or adc sub xor mov dec stos add mov js lret ja cmp xor aaa dec aad and and pop movsl (bad) es clc pushf and lea stos ss mov xor xor jge push pop insb cmc inc xor sbb dec and or test mov cmp mov test movsb pop arpl and out jb adc sub shlb ret inc add jo mov xlat std sub mov inc push jecxz cmp jno adc mov movsb mov or pop cli pop cs mov aam dec cli test ret iret test jg ljmp flds lds aam aam dec push lret mov rclb and lock cmp jmp dec cs mov je dec movups push js lods loop aas xchg adc add test or je adc ja in pop mov add lahf fisubl sub adc in dec fwait dec scas xor mov push leave xchg cmp push fisubl test jge lret xlat adc fisubrl cmp mov or sbb sbb or int3 mov fldl sarl add pop jae mov imul cmp xor jl and fwait mov daa mov shrb je loope mov aad ja out test xchg push test adc inc push sahf in mov stos mov addr16 (bad) push mov lods imul fbstp and pop aaa push and mov insb pop or (bad) adc pop sbb inc add (bad) stc icebp xchg shrb stc dec sbb cmp xlat jg mov xor jle inc sub mov out test ljmp test push sub hlt adc in iret add roll ljmp pop hlt ljmp mov dec inc push xor sbb and lods push cmp xchg fidiv xchg add mov aas dec xchg mov testb push lret dec ret inc call push ror add push test lcall out adc adc cmp rolb jle iret cmc (bad) xchg dec add sahf call arpl adc jg push inc cmp (bad) iret adc dec iret lret or inc rcll mov (bad) pop mov lods mov dec dec cmp sub cltd lret mov mov fs jmp pusha sub push dec inc test jnp or shrl insl pusha mov push lret movsb jnp cmc clc ja pop pop or call xor sbb mov or xchg mov push ja test dec or mov je insl mov xlat aam loop inc sub sarb test aas out jge push test in cwtl jbe cmpl leave sbb bound (bad) notl mov mov xchg aaa jno ret or lea xorl inc loop jne lods ss xchg pop push sub cmp loop (bad) popa mov outsb es hlt nop sbb inc pusha and ja dec (bad) jae cs dec gs sub mov cmp and cmc negb xlat xchg mov loop mov imul dec mov lods xor xor sub push das popf mov int3 pop lahf jge lods cmp xchg in (bad) mov cli mov mov dec inc dec or cmpsb push push mov std jl add fwait add sub and adc into pop (bad) push mov mov xor fbstp je push lret cld dec (bad) jecxz mov sbb push jecxz jp sahf cmp loop pop inc mov sub (bad) dec push or mov out dec or mov hlt cmp sub push adc fnsave or leave fwait push pop idivb int3 test insl and dec cld mov cwtl pop pop jno call cmp adc je inc jmp push cmp lods arpl pop pop (bad) pop das mov or xor call push xor mov adc stc gs ja leave pusha inc sub dec push cld sahf incl adc je or push ret dec xlat push jmp push pop fcoms and loopne aad xlat xchg (bad) and sahf mov push sarb mov insb out mov or (bad) out in fsubs adc int3 or test data16 adc (bad) mov mov dec (bad) or (bad) lea stos push push push xor out or push add out push sub roll hlt stos jnp mov and inc add jecxz jge mov push cmp add mov loop sub mov lret mov sbb mov mov aam dec and mov int sub jp mov xor push jge push mov int push pop mov repnz gs mov lds push push in adc ret (bad) repnz rcl popf in mov pop inc mov xchg stos daa lods xchg fadd std xchg rcrb jg sbb mov inc lret add pop sbb xor ljmp iret sbb add sbb iret jp push test lds movsl fisubr mov cmp jp pop jne mov and cs adc sarb or test (bad) xor pavgb fdivl pusha mov in push aam popa bound push cmp out xlat sbb adc mov (bad) cmp in stc pop test push xchg pop rcrb push in cmc stos (bad) cwtl xchg inc xchg mov in scas and xchg xor push adc lods xlat (bad) ja pop leave sub dec sub pop mov repz rcll dec pop movsb (bad) out adc jg (bad) jmp loop adc fldl mov mov mov lcall das lds mov xchg cmp repz jne inc adc andl or push xchg add je popf (bad) ss cmp jo andl or fcom dec hlt fs mov sahf cmp frndint je add and sbbb lcall cmpsl and (bad) ss out dec adc mov (bad) out aad mov pop add enter fisubl cli jb rep xchg pop mov (bad) in cmp fs scas dec mov sub jo loopne test dec test cmp cmp sbb adc mov gs neg loope mov sarb sbb jmp aaa ja dec jge movsb mov out pop mov pop aas sbb mov pop sbb aad imul dec and aaa ret jbe pop jns jbe scas or mov icebp pusha add mov repz pop and lret jl xor sbb lret dec push sbb mov stos push int mov jnp out and adc jno push (bad) mov ret sti lods xlat and xchg lcall stos repnz xchg mov sub mov jno and sbb sub sub mov sbb ss jle inc popa inc out (bad) bound lahf lods and into imul nop pop xlat lods stc dec (bad) lea (bad) out in sbb loop enter gs push jle dec lea movsb and pushl in mov outsl pop jmpw xchg test lahf cmp jo rcrb sbb push int3 mov mov jo sbbb xchg imul ljmp fistpll xchg test shr jp ret outsb pop mov pusha sub imul mov das mov push xchg and inc or aas ret stos lret jmp sbb fisttpll aaa sbb out mov das les lea mov fs movsl cs nop jns mov jae jp outsb sbb mov mov call in movsb imull dec (bad) sub sarb leave repnz (bad) pop sub call (bad) pop mov mov xor add fucomp int pop mov (bad) or jae or or push add sbb mov or or insb xchg ja or cmpsb test and movsb ljmp xchg push mov xchg aas pusha jne rcrb cli scas inc xor add jo cli or cmp int3 cltd mov int3 popf (bad) mov das jbe sbb push cld test cmp xchg scas fldcw jle adc pop lahf test jp dec mov add (bad) jg push xor mov dec insb pushf xchg and dec into test sbb lcall xlat sarl xchg and add mov aad and gs cwtl shll xchg jae xchg mov leave pop inc (bad) rcrl mov push pop inc jp push test das aas mov mov cli push faddl loopne dec or lcall xor data16 cli je sahf gs jmp jmp jns ret fnstcw es mov and fcoms in cmp les lret sbb sub mov adc and or arpl iret gs lods outsb push leave or cwtl test sti dec pop addr16 mov loop and mov imul dec cmp mov aam js aam loopne outsl sub adc xorl pop je test mov pop int3 mov sbb jge decl cs mov fldl in cmp sahf scas jbe imul xor xor sbb out das pop and sub jb roll sbb inc sbb jmp out dec sub fstpl hlt dec jecxz ret rorb mov jne mov or or inc dec pop cmc jno jb xchg sbb sub add insl les cmpsb sahf mov dec arpl sub xlat popf aas outsb dec das inc mov test adcl xchg jns push lock pop dec add jmp pop and dec (bad) fcomps xlat sbb xchg shrb pop fdivrl or cmpl addr16 in push cmpsb dec pop in out dec or mov jmp add test jae dec es jb and xor mov in dec sub jne xor dec add out and xor ljmp push mov jp adc or mov enter sub fidivrl test ret dec dec ss xchg dec push addr16 and es fnstenv and jl xchg jne add cwtl or (bad) movsb int3 pop insl jne jecxz cli (bad) mov mov lcall aam fidiv dec cld lahf pop and lods xchg sub cmc push mov icebp ror mov vpsubusb mov rorb movsb fidivl inc test dec push mov aaa mov inc mov mov cltd (bad) mov (bad) jne fldenv push into addb movsl cwtl jnp xchg testb jnp das xchg imul push xchg sbb test idiv add int pop push push mov xor cmp push dec xchg lock jge out sub inc rcl push jne lea nop pop stc sahf lcall arpl cmp hlt jne xor dec fwait xchg popf push aas sarb push and je dec jns push out xchg stos shrl test and mov sub aas pop jmp jne stos mov dec jp cmp dec sub sbb push ds and addr16 fdiv enter mov clc mov and sahf add inc (bad) mov mov xchg mov les fstpt dec repnz push xchg adc xor icebp jae data16 mov loop data16 mov and jg aas pop orl dec xor jae mov mov rolb insl mov les push pop pop sub sub mov rclb icebp daa gs and int3 fs and sbb ret mov scas gs jmp jno fdivrs sub fdivrs stos out std pop add adc cmovb out popf xchg inc add test jne push mov push orl into imul add add adc sub call pusha movw pusha push movl call add push push js arpl gs js add mov cmp pushf lea jae cmc stc clc pushf add pusha call not mov movzbw mov lea jmp pushf pusha stos movb mov lea jmp add add and add or pop xor xchg xor xor cltd xor xor xor xor lcall xor xor nop xor inc aaa jle (bad) aaa hlt aaa sub in sub mov outsl cmp cmp cmp jmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp sub ds push cmp cmp jo jp jg test cwtl cmp lods cmp sarb cmp call cmp or adc sbb pop ds cs cmp inc ds ds ds ds ds ds outsl je,pt jle cmpl ds ds ds cmpsb ds ds mov ds sarl fdivrs loop out in idivl or sbb cltd aas mov aas add add lods add add xchg in xor xor xor xor xor xor xor xor xor and sub xor push xorl ljmp xor xor xor xor xor xor xor xor xor xor xor aaa adc daa cmp cmp cmp les out cmp adc pusha ds mov aas cmp inc aas inc aas dec aas push aas pop aas bound imul jle xchg mov xchg aas mov aas mov sarb aas aam in cli aas add add add sbb add push xor xor pop xor xor xor xor xor xor push xor xor jle mov xor xor xor pop xor xchg xor xor xor xor pop xor xor xor xor push xor pusha xor lods xor xor cmp aas ss ss ss ss ss aaa gs je xchg iret cmp and cmp cmp cmp cmp mov xchg cmp cmp jb js sarb dec cmp mov mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp xchg cmp inc ds arpl mov mov ds aas adc fdivrs fnstsw out aas add add add add or xor xor xor xor xor xor mov movsb xor xor jg cwtl xor xor cmpsb xor pushf ss aaa pop aaa xorl aaa repnz or cmp cmp add add add and js jl xorb xor xor dec xor xor xor xor xor xor xor xor xor xor xor insl xor mov ss cmp outsb cmp cmp cmp cmp cmp cmp cmp popa cmp cmp cmp cmp cmp push xor xor xor xor xor xor cmp and sahf cmp push ds arpl push ds ds ds ds ds ds add dec aas push aas push aas pop aas pop aas ret aas call aas clc aas cld aas add add add xor jns xorb xor xor out in xor xor xor xor mov loopne adc cmp adc xor xorl xor xor xor xor xor xor ss ss sub xor pushf mov aaa scas aaa repz cli aaa (bad) cmp mov cmp cmp cmp cmp cmp cmp cmp cmp dec cmp pop cmp outsl cmp jg xchg cmp cmp push ds fidivr jne leave aas add add add mov mov xor xchg xor popa xor xor xor xor xor xor xor xor xor xor xor xor sbb arpl (bad) ss ss xchg aaa mov mov aaa repnz push cmp cmp cmp cmp cmp mov fwait cmp cmp cmp cmp lods cmp cmp ret cmp cmp cmp ds ljmp aas dec aas pop aas add add add daa xor xor mov xor jb xchg ss cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp lret cmp nop sarb loop js stos aas mov lock add add add jmp xor xor fidivrl in cmp cmp cmp pop cmp cmp cmp cmp cmp cmp cmp cmp aas mov add add push xor xor jbe pushf xor add add pop add add xor xor xor xor xor xor xor xor cmp dec xor fdivrl in in cmp cmp cmp or adc sbb and sub xor cmp inc cmp cmp cmp cmp cmp cmp cmp cmp add rolb add add add aas hlt aas clc aas cld aas add add inc add add xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xor nop xor mov xor mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xorb xor (bad) xor clc xor adc sbb xor js xorb ss ss ss ss mov or sub dec aaa fs push aaa test enter hlt aaa adc sbb cmp push cmp js cwtl cmp cmp cmp cmp pusha cmp cmp cmp cmp cmp dec cmp add add add add add sbb call xor xor xor xor xor or or adc sub sub xor cmp clc ss add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa pop aaa pusha aaa fs push aaa je js jl xorb aaa mov mov nop aaa xchg aaa cwtl aaa pushf aaa mov aaa mov aaa les enter (bad) aaa aam fdivs fdivl loopne in call aaa hlt aaa clc aaa cld aaa add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp sub sub xor xor cmp push ds ds ds ds mov lods ds les enter sarb aam fdivrs fdivrl loopne call inc add adc add outsl xor sbb idivl int3 cmp add push add or add and add cmp add and sub aaa jle int lds out cmp cmp fdivrl out add cmp cmp cmp cmp mov add add add add add xor xor add mov add add sbb pusha ss jae hlt aaa pop cmp pusha cmp cmp cmp cmp cmp cmp sarb mov lods aas add add add cmp add add mov dec xor xor xor xor xor pop cmp mov cmp cmp cmp cmp cmp cmp dec aas cmpl add rolb add add inc xor xor fnstenv push xor icebp xor xor dec cmp xor cmp mov into cmp cmp std cmp in aas add add add dec add add lods xor mov ret xor xor xor xor xor xor imul aaa push cmp cmp cmp cmp cmp cmp cmp cmp add add inc add add xor xor xor xor xor xor js imul sbb clc cmp cmp movsl cmp aas add add inc add add xor xor jmp xor xor and dec xor xor leave aaa insl cmp cmp cmp cmp cmp cmp cmp cmp cmp add add push add add repz or inc xor xor and xor jecxz push ss ss aaa divb inc cmp cmp cmp cmp cmp sarb pop cmp cmp cmp push aas mov add and add add (bad) xor test aad clc xor xor xor xor (bad) ss cmp pop cmp cmp cmp sarl xor test (bad) cmp cmp cmp cmp xchg pop aas xchg aas add add add inc add add xor (bad) xor xor xor xor mov cmp lret cmp cmp cmp cmp cmp aaa ds idivl sbb add inc add push add add xor xchg xor xor xor xor xor xor xor xor xor xor pop ss aaa fdivrl sti cmp cmp test in add lea cmp cmp pop ds aas xchg aas add add add add xor xor xor xor ss sbb cmp cmp js mov lret cmp cmp cmp cmp cmp add pop aas add add add add xor jg (bad) xor xor add enter setne mov pusha rcr sub not movsbw push pusha mov movsbl not call pushf pushl cmc add test pusha mov test clc test pushl jmp mov lea pop pusha push movw pushl ret add mov cmp loope or rcll pop xor cmp or aas insb push (bad) jbe je fsubrl repz jmp popf das mov add sahf adc lods dec xchg scas and hlt cmp sub ljmp aad aam mov and cmp mov out sbb xlat mov (bad) xor push dec inc jg pop push lcall lret cmp ljmp ljmp in xchg xor dec adc add pop ret sbb (bad) xchg pop cltd andb mov mov cmp inc rcrl fsubl lock enter call gs fmull jp inc daa pusha mov sub sarl out incb sub dec cmpsl (bad) mov push mov test xor ja push and or (bad) adcb cwtl inc xor push adc ss dec iret push (bad) add lret sbb jns or sbb ljmp test sbb or mov (bad) dec sbb cmp push dec lea dec ret (bad) sub push pop inc dec mov lret mov pop ficom rcrl or (bad) cmp fmull pop push sbb xchg push push test push movsl push cmpb cld pusha fbstp jae cmp xor lahf mov fisttpl fmul icebp dec fwait pop in add pop push jo pushf cmp or iret jg (bad) cwtl hlt and (bad) mov xchg (bad) inc (bad) stos and mov mov adc xchg jnp addr16 or test (bad) mov xchg int aam (bad) mov lsl in push push aad jle jns or sbb mov xor repnz push ds pop mov dec xchg mov and lahf mov scas sbb fdivs (bad) int dec and scas mov mov (bad) imul push out (bad) insl insl mov inc loopne hlt push das and dec mov inc iret cmpsb cmp pop inc ljmp arpl leave push dec xchg inc lret mov dec out mov jge xchg mov inc cli pop pop lcall jp in add ret adc scas es cwtl lea call pushf pushl jmp lea not bswap pop pusha pushf pusha mov jmp lea je pushf add pusha test cmp pusha mov lea jb bt test jmp jne (bad) add inc pop ss in lods jns jg insl mov cmp or xor mov jns pop push dec pop aaa addr16 jp shrl outsb les mov pop int shll adc scas pop and and aam daa ss mov jle and cmpsl lret add cmp sub fldcw sahf adcl dec add sub ret ss add ret dec clc xor cltd lahf jg inc sub cld or jns inc movsb sbb push (bad) mov push (bad) aad stos pop mov leave add cltd mov mov (bad) hlt lods add addr16 fmull sbb cmc pop fs or inc aam dec pop ja lods gs jbe push insb mov je adc incl cltd sbb cld outsl mov jae and sbb and paddb pop or sub inc test sub cld sti push or push in lahf cs inc add ljmp push fs pushf sahf adc sarl pusha mov imul mov stos ljmp xor mov push adc es pop insl and je xchg jmp cwtl cmp leave fsubs or ret test jbe int3 loopne iret ficomp jno ret fnstcw mov xchg adc (bad) aad int mov mov ss xchg es pop mov insb sbb scas loop add xor cmc insl pop xchg imul bound pop cs sub jmp dec addr16 mov addr16 add addr16 inc test cmp (bad) sbb cmp pushf or ret pop xor lds loopne adc lgs cld xchg xorl inc or dec and lret jbe jl clc sbb add test out cmp push inc add mov or pop and xor mov clc push ds mov repz cmp fsincos push jae mov xchg popf aam insb ret aas push xchg pop cli xor fdivrp jbe sbb jmp jl add sbb js lret xchg (bad) pop mov sbb pop scas ja imul in clc insl adc jno repz dec cmp push fcomps (bad) mov stos fdivl fimull js sbb iret sub stos into (bad) jne call divl or inc fsts sbb sets bswap bswap bswap push bswap lea jmp dec ret inc add bound es (bad) in sbb cli sub sbb divl js dec mov push push shrd lods pop xchg scas int testb mov jmp sbb test inc aad out cld cld adc cmpsb inc jge stos jno mov ja inc add or mov addl rclb mov mov inc add in in mov ret pop ljmp aam cmc push cmc mov int3 push pusha mov jmp pusha stc not call pushf movb movb lea call pushf adc mov push movw mov lea jb bt test xor call pushf rol bswap mov shld sar movzbw bsr mov shld mov sbb shl xchg setno mov btr btc bts or mov add add push lea pushf bswap mov pushl pushf pushl ret clc stc cmp pusha pushf pushf lea je jmp cmp lea jle pushf movb lea ja push mov mov pusha imul cmc add pushl pushf pushf pushf lea jmp push jmp mov pop into inc add lods pop fcomps mov mov (bad) insb ret clc mov sbb stc adc inc fnsave mov loope in (bad) pusha push (bad) aas push mov add lea or cld sub mov and fdivrs cwtl push jmp fs fwait and imull sbb mov mov sti mov daa push mov mov sub pop jp loop add fbld aad pop add sub je rcr cld jl pop lret data16 fs sarl in in (bad) jg add fwait xchg or sub lods pop aaa shl aad jno push sub cld dec int3 lds sbb mov and adcl xor sti and add push stos sbb mov roll inc icebp sti dec out enter shll jmp mov adc xor fbld daa (bad) xlat xchg cmp fstps aam int3 lds lret shrl mov and mov sub rol stc cmc popa mov xlat div (bad) ffreep adc pop dec mov das xlat xor leave or popa cltd xchg nop gs inc pushf mov dec or or or (bad) add (bad) jne pop pop (bad) pop sti xchg divl sub ljmp push xchg dec push lods xor push add inc xchg xchg icebp mov call cmp push movb pushf push lea ja call call lea je dec shld rol push add btc adc sub or shr data16 test movzbw mov bt push add (bad) testl mov cmc shr bt call lea jbe jle bt bswap mov push shl dec add lea mov dec add lea ror movl add jle xor bt mov stc cmp pusha lea jbe shl xchg pushf sub rcl shrd rol mov sub shr rol movsbw data16 icebp mov xadd shld adc call movsbw mov push mov bswap mov pop mov pusha rep lea movb pusha mov movsbw lea lea lods cmp and btr btr neg sbb push sub or btc shl neg pushf cmp not sub xor bsr clc bswap add clc xor call lea jb adc clc btr bswap movzbl ror sar dec lea shr lea mov imul shl bt lea bswap movsbl push bsr cmp pusha bsr mov adc stc rol mov (bad) repnz jbe (bad) ljmp out outsb dec add pop mov or mov xchg fucomp pop lahf aas fnclex pop outsb (bad) or sub jbe shl paddsw dec outsl xchg pop pop push cmpsl pop pop sbb mov lret clc mov cmpsl xor aaa mov idiv or xchg or jl xor dec test pop loop and ffree jne aad or cmp aaa loop pop jmp add mov popf jecxz xchg sti addb mov xchg jp lock and aaa sahf into (bad) adc cmpsb sbb fwait stc insb leave mov adc dec cmp and iret jle adc dec mov (bad) inc test stos rcll es repnz dec add std add or or mov mov inc decl ds pop mov sahf jl sbb push dec jae jno mov dec (bad) push xchg mov xchg xor clc enter inc add stc jae in cmpsl pop adc clc pop mov stos mov and sbb arpl sbb or int3 jnp pushf mov outsb xor push les inc dec aam cmc fs adc insb adc sbb jne pop xchg popf (bad) xchg jge in nop push ret mov jl mov (bad) scas ja ret pop or pop mov xchg dec add vpmullw xchg or aaa popa stos sub sub pop push cli mov daa dec ficompl add sbb adc ljmp xchg sub pop bound jnp (bad) inc sti pushl cmpsl addr16 jae adc repz mov jl iret dec orb xchg lret push out fs sbbl xchg (bad) cmp push pop push pusha rclb cmp loop inc push inc shr mov pop inc push fdivrs gs sbb xor repz data16 add jns out add add push es pop clc (bad) xchg (bad) mov fsubrl aam (bad) gs jg lret push rcl aas icebp inc push movzbl bound xor sbb cmpsb inc sbb div xor add sti jnp mov neg sub hlt test cmp out mov xor fsubs aad inc outsl out aas inc (bad) loope in mov cmc test sbb inc arpl inc and data16 gs shrb sarb mov lret lea xchg inc fldenv pop movsb inc les mov subb (bad) loop arpl adc loope sti fs sub pop dec jnp lea xor fsubr sbb add sub adc (bad) lahf mov jne js test dec outsb stc dec add iret (bad) pop mov adc bound xchg sbb int dec repnz clc (bad) pop mov in sbbl scas sbbb in pushf scas jecxz add nop mov sbb mov (bad) lock sub int3 shlb mov or lret sub xchg leave enter jecxz lods aad ds adc insb inc ja push mov int xor sub sbb dec mov inc ret pop or (bad) pop mov sub mov push jbe pop add mov nop in jg jno push aaa sbb or add insb xchg mov mov pop gs or fwait ja aas imul mov icebp sub inc leave sub cmpb cmp aas jecxz cwtl xchg push xor ror ja push sub add int movsl pushf pop mov jmp (bad) mov shrl jbe pop jns and inc arpl loopew andl pop or mov ficom mov xchg push mov sub ss sub sbb jb mov pop xchg notb xchg push outsb aas cmp xor orl adc ss cwtl sub add sub (bad) or comiss je (bad) scas xchg testb shlb pop xor icebp sbb dec lret or out popf lea ja jg add sub loop shrl mov mov clc push call jecxz es adc scas xchg push fiaddl in test mov mov arpl jae adc mov sub test aas jecxz and pop mov mov fiaddl lock cmp xchg and adc push sub movsl adc jnp mov fs sub mov mov mov arpl jp rcrb jmp push inc adc jmp rclb ret rorb movl and jmp cmp jmp stos ret rcl mov (bad) mov push pushf pushf movl pusha movb push lea jmp push and push add std or insl or aas scas ja push inc inc or add das mov ds cmpsl rorb jne cli (bad) jmp in movb hlt stos inc push bound outsb mov pop push lea data16 jnp jle inc sub aas pop mov mov xchg xorb inc imul dec mov xchg push loope push sub mov in insb movsb mov push cmp jecxz xchg (bad) out es xchg mov cmc push mov shr imul cmp jae mov mov sub shr add call clc pop ret inc (bad) mov push add cmp sub lock scas rolb lods sbb jbe ljmp lds sub adc inc push inc mulb js mov and cltd push das xchg outsl pop mov rcll push and iret push mov sub jecxz and iret (bad) mulb pop mov out ljmp imul mov inc mov (bad) out sti push mov fidivl fisttpll push add pop push movsb into in sbb jns pop sbb call andb add mov xchg or sub imul mov sbb sub mov xchg fwait inc push jp cwtl nop hlt or cmc aad mov or imul fist jno paddsb cmpsb inc sub pushf mov movsb push mov jmp cmpsl sub mov or push pop in mov aam bound lret mov inc and lahf push loope push scas adc add cld pop xor xor sbb test arpl call adc push add cmpsl inc ret push sti jne icebp inc movsl lods add mov leave xor push aad adc insl xchg out into jnp sbb ds arpl jmp xchg (bad) hlt sbb cltd insb clc cmp dec in or bound mov enter mov jo jl dec sbb add pop roll (bad) repz mov (bad) repnz xor outsl arpl and push cmc push out or push icebp std gs or or andb ss out add fdivs loope in ret stc pusha mov test push mov jl push add shl rolb lcall rorl and mov icebp sahf sti and movsl and pop sub loope (bad) jge cmp sbb into (bad) jp test mov loop xor ja sbb aad imul cmpsl int3 cs xor pop gs in mov and cmp imul sub mov mov push mov ds ss cmp popa mov ret push dec and les pop out mov sub (bad) adc mov mov dec aas inc fcoml xor inc xchg sub add or hlt xorb mov std (bad) mov xchg clc sti fbstp dec mov xchg dec pushf jle int sub dec scas icebp cli clc mov sub movsb fimull lods ljmp cld lret in out mov mov mov push mov enter mov pushf rcrb push sbb xor mov es je sub add lock mov cmp (bad) jg push imul in (bad) add mov (bad) cmp mov pop pushf push mov sahf imul dec push jmp (bad) pusha ss mov xchg insl dec push adc scas je insb sub xchg mov cmpsw cmc je nop jl and cltd fs cwtl aam inc sub loope cmp cmc fwait ret scas jo fmuls test sbb and test sbb pop xchg ja or pop adc dec mov lea jmp (bad) enter add sbb in jb xchg push hlt add fs mov adc push push dec in and xor cmp imul inc lds or nop (bad) sub xor lods rcrl jae int mov cmp outsl sarl inc cmpsl fsubrs loope imul dec pop sub sahf dec aam repz mov fs mov sar cmp adcb stc push (bad) pop loope,pn push adc jae cmpsl xlat and shrl jo sbb jge popa neg mov das xchg andb inc cmp in pusha or aam popa cld dec clc adc test fildl pushl mov xor pop mov mov dec enter popf ljmp (bad) fcompl add or pop sarb test xchg je mulb js adc cwtl inc adc mov (bad) mov stc fs xor out mov push rorl je add in loopne lds (bad) out jle cmp jo scas movsl ja icebp lcall sub add gs cmp mov out outsb add ja cld or int3 push adc and ja shrl pop cmpsl jae push mov xor xor and dec rcrl inc mov mov add je ss jne out and sbb movsb xor pop insl sbb inc repz popf aaa mov inc jmp outsl (bad) (bad) mov and push dec cli sub push es lea jmp adc jge and jmp mov (bad) inc xchg ljmp out and inc mov insl sbb pop lods or xchg jno adc mov (bad) adc dec (bad) cmp pop sub aas adc add push aad mov or ljmp ret ja (bad) stos push jmp outsb in lcall push pusha xor jae loope push es cmp inc lods aaa mov aad jg or jne jle cmp and or fs lcall pop pop insb fidivrl mov jp sub adc pop out test dec jecxz dec lds jmp nop cmp sbb push jle pop shll dec sbb out je push in insb xchg pop push test jle adc lock xor inc fsqrt clc les fwait aad pop sub icebp pusha mov add ja lret stos cmp sbb in popf jbe push inc adc adc clc das gs iret mov and and fdivl sbbb push bound (bad) push cmp (bad) lods pop addr16 add jle sti bound xchg push sbb xor or add sub lea push push pushl cmc add stc stc call xor jmp push lea jl jae shrd mov rcr and neg sbb mov inc stc mov test clc pushf xor bt cmp repnz pushf push lea jne shld xor sbb bt mov xor and sub shr lea mov pushf sub pushf pushf stc pushl popl cmc call lea jb test call push pushf movb lea ja cmc clc call push lea jne and mov adc xor mov sub shld xor mov push movb clc pushl sub push lea jp push pushl popl pusha pushl movb lea jmp adcb jge out lods xchg ret push xchg push hlt push fs in sub fs add and push outsb stos loop ret mov xchg xor adc sub mov hlt dec (bad) jno aas jecxz in call jg data16 pop fsub jecxz inc mov sub cli pop bound xchg push in imul int mov js mov lret mov jg (bad) iret ret outsb inc push std or push sarb jg xchg loopne jg divb xchg cmp mov cwtl fcoml sub add imulb popf out in add xchg call pushf or mov mov cmp out mov loopne loopne,pt mov push xor jg add movb lea ja jnp stc clc pusha sub clc test sub add pusha lea jmp shl call mov lea cwtl movzbw jmp lea call call not not lea pop push lea ja mov mov pop pushf pusha jmp dec push mov add (bad) cmc int xor out mov adc int pop lcall lahf in inc push pop notb insb in movsl push or pop and ljmp sbb aad ret mov ficompl jne lret sub mov nop jmp push cs call jbe stc loope add pop insb sbb arpl enter es out mov push stc sub jno popfw nop divl inc sbb push jg sub jg push hlt push mov loopne clc rcr shl mov pusha clc cmpb pushf push lea jne dec das aad btr sub ror mov (bad) lock add rol sbb jmp pushf adc mov pusha lea jae call movl pushf mov push lea jmp lea je pushf pushf pushl pushl cmp jmp pushf lea je movsbw pusha sub btr lea das jmp not bt call pushf jmp call jae bswap movzbw lea pusha lea call push call sub imul push aas outsl (bad) (bad) das dec les sub ljmp scas jg mov mov cmp gs jbe cmp mov sbb inc pushf pop sub (bad) xchg pop cmpsl mov sbbl pop into xchg loop test notb lcall stc pop cmp inc ret movsb mov pop pop xchg sub xor je add dec divb mov sub mov add inc les pop push sbb xor add cmp and xor paddq pop insl testl xchg push lds ret aad lods xchg or enter jb and or test lods ret jo cmp nop scas loop xor ljmp (bad) sub lahf pop jno movsl sbb pop dec loope sub pop (bad) sub dec inc jp pop inc fnsaves jmp (bad) push or hlt jl pop inc stc call repnz cmp lods dec push aas insl les push cmc mov stos push push cmp push cmp (bad) je out sub cli gs aad cmp push icebp inc icebp or and or sbb xchg test (bad) dec dec insb test enter push pop pop loope cmp xchg pusha jne pop fsts push ljmp cltd loopne out stc push jecxz insl push stos imulb mov mov fimull lds mov into movsl inc pop loopne mov test dec jo clc add or (bad) aaa sahf imul (bad) shrl push cmpsb or xchg jle xor push mov adc adc push mov stos cmpl pop push es leave dec sbb test push pop js add mov sub in sbb jo (bad) cmp int int3 sub mov insl sahf sub call cmp mov rolb sbb dec arpl nop outsl xor mov push add bnd (bad) mov jp adc or mov dec cmpsb xor call push sub clc ret enter stc pusha test fbld add push (bad) aas pop lds mov adc bound daa and repnz xor sbb addl jecxz and cltd xchg imull out jb push (bad) aas mov outsl ds mov and sub lock arpl sub adc xor xchg xchg jae and repz in jb (bad) jno scas jae dec add xchg and cltd xchg push ss divl cmc clc sub movb call sub movw pushf cmp jmp jae rcr mov cmp not mov push mov mov jmp rep lea setp bswap pushl mov mov mov pushl sete mov jmp push lea jne jmp mov add jg aaa and mov out or jl fcmovbe push cs or lods enter cmp mov sti lds (bad) dec outsl mov push sbb out mov movsl xor push (bad) pop rorl aaa mov dec sarb mov cmp cmp clc adc mov inc (bad) fcomps add jo ret and jns ret ja lret cmpsb push popf mov add fildll dec pop pop add scas (bad) sub or outsb fwait aas sahf scas adc mov xchg xchg inc nop add je cmp je cs insb ljmp add test mov sbb loope imul mov xor or push shrb in cmpsb pop push and movsl cmc out pop shll xchg cmp dec or jnp xor adc fiadd pop (bad) jle pop (bad) cs fdivl mov push dec mov sbb or (bad) sbb call in out pop mov pusha pushl lea jmp movsbw and dec mov pushf push clc and stc stc call pusha pushf mov call sub ret add mov addr16 fcomps mov in repnz xchg push cmp cwtl in popa fstps or (bad) into push cltd xlat inc dec into mov in (bad) xor add bound sbb loopne fs adc xchg xor add pop cmp dec imul in mov fldenv sub and push or jge xchg pop pop mov mov cmp push popa mulb nop jmp insb insb rcl mov stc dec fsts push pushf dec pop pop fmuls jp inc insb ljmp jecxz push xchg imul jl add outsl adc sub cmp stc call pusha sub sbb stc add add outsb pop test and jmp or imulb aaa push dec in adc add cld cmp ds shrb push jle ss add sbbl es dec sbb push add fcomip out js push xchg sbb repnz sti mov les xlat int and mov mov pusha pop pop lcall cmp scas aad inc (bad) scas loope jl js mov arpl lcall cltd scas aad mov loopne add outsb rcrb sahf arpl sub inc jle push or hlt adc xor or mov add arpl add mov ss fstl cmp and popf stos aad and pop fsubrl pop jnp das inc popa fidivl dec pop pusha mov movsbw not pusha lea jmp pushf test pushf add movw pushf lea jmp sbb dec add jnp ret dec dec loop cmp adc dec ficom pop cmpsb in cs mov insb jbe and mov push stc adc test (bad) dec dec je push out imul scas push cmp jle mov push cmc inc cli movsb inc sub mov dec lret jle pushf movsl mov je test push scas sahf xchg sti testl lcall les ljmp push mov lahf jg scas outsl jg xorb push adc jge mov aaa push scas sbb addl pop lea mov and jae pusha pushf lea jmp dec pop pop xchg inc fcom lret sub aad or cli add rcll inc call push test and cmc add push testb cs push mov add jns pop aas xchg push arpl xor push ret mov aam mov and inc sbb adc insl in xor out adc and test and xchg adc dec icebp lret sub imul and (bad) push pushf pop pop dec sbb (bad) pop mov inc aad push ds lods data16 mov jmp in cs pop dec push test and test addr16 dec cmp aam cwtl jbe push mov push mulb lea sahf pushf cltd adc mov leave dec aas loopne outsb fdiv push jb stos xchg ds xor dec (bad) daa inc or sub hlt or add (bad) das daa jns lea sbb popf (bad) xor fcmovnb or ljmp fdivl adc jne fbstp mov mov and xchg hlt test repz and sub xchg (bad) ja inc mov fldt (bad) sbb jl and jnp xor test jp adc lea inc fisttpl scas adc into (bad) call pop std std mov data16 inc jl,pt (bad) (bad) pop sub pushf mov pop lds xor mov test inc mov aam pop movl test inc test xchg dec sub test ss repz xchg push mov xor or icebp xchg sub jmp push fldl test (bad) push add inc adc int3 push adc cmpsb jo pusha mov insb jb hlt lods mov inc inc movb mov pop jae out cmp sbb lock mov (bad) rolb scas sbb outsb cmpsl cwtl push add push rcl xor jb or cmp cs or mov sahf int3 ss adc es pop jne xor push addr16 add or jnp cs fcoms dec mov or pop int3 aas les mov sub bt jmp pushf mov call push push xchg arpl inc add lret cmp imul cmp repnz cmpsb or lahf cs aad fidivl test or pop push mov cld testb into dec push insb lcall xchg lods xor push xchg mov adc aaa dec pusha xchg in jg adc mov dec and mov push out dec and xchg aad test inc clc sbb fdivr push in xor (bad) jg jno add lods mov adc icebp add jge sahf xor mov in mov cmp cwtl cmc adc or fcomps hlt inc rclb lret mulb (bad) push stos mov cmp mov add pop (bad) mov and les jo lret inc push push stos test (bad) or pusha repz xchg cmp mov cmp mov das xchg sbb xchg sti inc or inc jmp mov dec imul popf nop dec adc jae jge pushf sub mov addr16 xchg lds mov aam xor inc scas pop mov out mov sbb scas xchg mov ret cwtl scas fs dec fstpl repz rcrl dec out mov sbb mov pop lahf or sbbl pop adc cwtl addr16 movsb add dec lods xor cmp loope arpl aas (bad) mov dec movb (bad) pop cmc jno cmp sub adc cmpsl and pop jg faddl adc sbb jmp fnsave inc int xchg sbb icebp sti cmp or mov push sbb fcmovne cmp cmp dec mov lret insb sbb inc pop dec add push les (bad) pop fdivrl aas sbb dec and inc and and ror ror stc rcr push bsf or mov shld push movzbw movzbw bt and push setg bt sub mov push movsbw stc sbb push add cmc xchg push rol inc mov shld dec bt mov pusha shr shld sbb mov call add add (bad) xchg ret pop arpl and cmp mov mov cmpl out push or scas stc add cwtl xor sbb lret xorl xor sbb loope sub imul adc dec aam adc sbb jb cltd fs sti adc outsl mov mov mov xlat loopne loope int3 (bad) adc mov pop (bad) push fs les lahf fldl pop (bad) repnz (bad) pop inc add js or mov out lcall mov mov movsb aam and pop xor dec dec test ret icebp push scas jp add sub cld or jl clc cs jle inc je dec inc es stc sub and icebp ret cmp fsubr jge,pn mov inc mov ljmp adc mov jle out inc jle dec test int3 jnp jae xchg cmp cmp repz xor add jg (bad) xor in xchg sbb (bad) lahf adc push fsubs mov cmp lahf jmp push call jae add call jb mov shl lea call add pop ret sub call movl pushl movb pushf mov lea jmp mov lea bswap mov bswap mov mov pushf setbe lea pushf pushf movl call addr16 inc dec inc and lret stos stc xor push xor movsl pop lods insl cmp xor stos aas lock xor ret inc mov or ss roll aaa mulb shlb mov pop xchg test fldt and adc mov mov sub and leave and cld lds sbb mov jbe pop cmovnp add mov sub ds xlat dec into sar insb icebp lcall dec or jg hlt daa sbb cmp xor sahf sub cs mov lea jbe cmp pusha jmp push pusha sub movb mov mov pushf pushl popl movb pushl movw lea jmp scas mov inc stc repnz rclb call adc data16 movsb lcall in out push imul pop fdivl mov sbb cmc loope (bad) mov fadds add out pop mov ja data16 ds sbb mov adc daa dec mov push loope pop pop incl popf movsb cmpsb and decl imul pop pusha into sub rcrb xor xchg add lods enter lods aas sub adcl movl scas test out jle out mov imul sbb lret into fdivrl call pop mov movsl pop inc push dec cmp bound sti jno jno (bad) mov xchg jmp out int cltd lea scas push push sbb sub fsubl sub jb ja xchg sar sbb insl int3 jo or aas and dec imul dec and push stos int add jl (bad) push addr16 and orb cmp jo push inc cli inc outsl out ja cmp pop mov les dec pop clc (bad) or fbstp jae outsb inc in add rcrb fidivl das ret cli shll pop gs test pop sbb es je jo pushf outsb jne sub dec jbe pop outsl sbb mov fs cmc (bad) jl push mov adc int3 test mov or mov or lret ss mov mov sarl jg pop or jb pop fistpll ret neg ret add pop loop addr16 dec cmc (bad) movsb jno add xchg stos fwait cmc int cmp dec push xlat sbb lret ret fwait jl pop clc dec ror mov push jmp mov dec fistpl or loope xchg jmp imul test in out (bad) sub mov (bad) xor sub arpl daa (bad) inc sub aaa mov inc int3 ja insb and push xor subl pop pop sub movb stos arpl push aaa ficomp jp mov bnd sbb lahf (bad) dec add dec or xchg mov das sahf jns mov fiadd inc (bad) (bad) and add addr16 movb sbb jp scas jnp dec mov jmp adc call rcl mov cmc bt stc shl cmc stc test add pusha movw pusha pushf lea jmp mov bswap movzbw pushf call ror mov cmp test bt cmpb pushf pushl lea jne inc rol movsbw mov xor xor bsf shr daa mov pushf shl add sbb mov clc test call cmp int3 sbb (bad) adc inc mov cmp mov in xor jns movsl mov and mov push lods dec stc cmp pop int3 and xchg mov sub aas stos outsl imul dec (bad) outsb in test xchg lcall mov jg,pt pop loope pop mov xor mov add (bad) lods andb loop (bad) clc rorl add pop xlat dec faddp jecxz outsl mov jo push scas leave jg ret sahf in mov (bad) lock call (bad) xor dec mov push push mov mov mov shl lea call adc sub jne mov sub pop pop ret jmp xchg add jne inc mov jne and lods insl jge pop ret aas pop mov repnz pop add stos (bad) xor outsl loope adc insl test ret imulb sbb fsubrs outsb fcomp pop sbbl dec fs loop or or adc negb jp (bad) add push sbb pushf mov add pop or ja cs aad sub fbld adc and iret in adc and movsb pop sub test pop scas and mov adcl lcall repz push adc pop or pop scas or mov das xchg dec gs sbb jle outsb cmc adc fisubr (bad) (bad) sti cld or sarb or dec push lahf xchg cmpsl imul aad or out (bad) cmpsb out xchg mov clc mov mov inc pop test and lahf es adc xchg gs gs in lcall cwtl lahf stc adc mov pop xchg jge repnz pusha pushf call test jmp mov add or shll in fadds repz xchg (bad) pop cmp cmp in pop mov jl jb dec mov lcall out bound pusha repz pop mov mov dec ret aam dec test jae add mov sbb stc push dec inc insl jle mov bound pop rolb xchg out xchg jmp add sub dec jp test or xchg cmp dec aam loop movhps pop scas jns cmp int pop int3 icebp pop (bad) cld mov xchg sti pop aas cmp pop jo mov cmp fnsave xor out inc inc aas in mov mulb aam dec inc in popf dec mov mov dec ja ja inc jne sub pop cmpb push pop cld or lock int3 xor inc sbb cli call jmp inc rorl aad ss adc xor add cmpsb mov out or imul fs mov in fidivrl test mov add test cmpsb in test add mov test sub mov mov gs (bad) jnp js test lahf hlt and (bad) ss cs sbb mov mov mov fmull or fistl add mov int mov mov aad push mov cli (bad) imul adc sbb imul cltd xchg pop xchg out sbb fcoml dec insb cwtl mov pop and pop push movb pop insl lock adc inc mov test pop xor cmp cmp dec jmp rorb jno pusha pusha mov lea je test pusha sub call lea je pushf push lea jmp pusha mov push mov movb stos push movb lea jmp sub into dec jno inc pop and mov (bad) aaa daa insl insl jg fwait mov mov push mov aad xor aas jae add inc pop in add mov orl xchg std sub pop jae mov enter jae and iret mov inc out xor ljmp in mov push sbbl or sub cwtl loop test mov fisttpl stos inc fsubs inc jg popa (bad) cwtl dec (bad) sub xor sbb xchg scas ret or xchg cmp push or (bad) addr16 xchg cmp jle push dec sbb or jle gs pushl lea jb mov call dec dec divb test cli xchg cmpl adc mov push mov lock jne ret mov jmp (bad) dec aas cmp fildll jl pop cld cs not lock jp or jbe in push lock dec out cmp sub outsl jnp test mov lret or mov mov js fcoml mov mov rorw shrl arpl fcom icebp lahf out mov decb aad push jmp daa lds mov insb xchg and adc xor jl add fisttpll add ss add addb rclb xor cmp add mov sbb ja es test push mov xchg xor aad pop xor lods jno leave push movsl xor sub jb or cltd add bnd push or (bad) xchg cmp xchg mov insl inc mov call dec mov pop add inc push pop jae inc mov shlb aam push (bad) int3 popf movsl mov cmp lret jmp (bad) leave mov (bad) icebp movsb fcmovnb push and adc xchg mov loop inc in out and jae cmp mov popf ja mov push adc dec push into test stos jb jle fcmove stos xchg dec decb ljmp xchg add push lods rcrb xchg adc ja fbld rorl add lods lcall push lea dec insb mov sub ret mov test scas in sub cmpsl sub into adc mov add lods shr jne notb add mov and popf push cmp incb aas jbe mov aaa fsubp fld1 add iret and ds mov sub pop or inc incb nop sbb leave stos dec in aas (bad) notb pop loopne xchg cmp jmp add mov pop int3 jno lea and icebp cmpsb xchg and mov push ja or sbb xchg and cmp rcr popf ficoml ss iret adc data16 xchg cmp or inc or jne dec das mov pop cltd out cmp sbb repz cmpsb sub push sbb fs js in popa lea movb jnp int3 divl idiv and and and pop dec jne xor sub dec or add icebp sub sahf xchg fwait dec mov ret sub (bad) negl xchg pushf lods in adc data16 fnop lret dec imul jecxz sbb fmuls add push sahf jle scas jnp lahf hlt jns sbb int sti mov sahf aas sbb add out sub ja daa and push xchg pxor ret lcall stos or pop enter inc cmp fsub mov jbe mov or ret in jns inc jne in mov fcmovb xchg xor mov adc ss (bad) (bad) pop xor loope lds jp adc les inc pop lods cwtl fistpll xchg mov (bad) fnstcw xor clc mov sbb jbe mov icebp inc (bad) or xchg lea rorb not mov mov xchg pop icebp sbb push xchg cmp jmp push les in or es sbb (bad) cmc in pop fisub outsl and xor hlt add mov cmp ror add xchg aas shrb inc in inc pop ljmp dec lret int3 (bad) dec aaa jl pop push (bad) jmp test adc lahf stc pusha and fidivr lret jp stos (bad) movsb xchg pop dec and notb lods outsb int3 sbb fs fstl xor mov mov or mov lahf cltd xlat adc inc imul lret jg jl lret pop aas add icebp lods and fcomps and sub iret pop xchg testb lods sbbl xor mov int into sbb sub loopne mov mov jp in jae sbb repnz call scas xchg sub fwait mov (bad) mov into rcll loopne or imul not shrb xchg adc pop xchg pop dec inc sarb or lret popf dec fld lret xor cmp pop lret aad cs pop add (bad) stos pop jne ret adc das inc ja inc movsb jo inc fisttp insl scas mov call les bound dec add dec iret and pop mov inc nop cmp dec inc jb ss cmp jg cld push shll daa repnz and mov push gs test pop (bad) push add in cmp mov je lods ja mov ret cmpsb js fimull inc lock sahf outsb push pop in and pop sahf adc lcall pop pshufw dec je insb (bad) in pop lods cmp cmp inc add arpl cmp pop or xchg jecxz js leave sbb dec jbe pop mov int mov add xchg (bad) mov cmp mov cmpsb dec xor mov xchg gs cwtl inc scas push arpl cmpsl in cli cmp pop push loopne cmp je (bad) clc push flds je lea gs cmp sub mov and aaa loopne sarb xchg stos into dec sub (bad) xor addr16 (bad) ret inc sub scas js dec push imul push pop pop mov test clc inc pop lock adc cltd jns jbe inc stos mov (bad) aam roll push mov sti add sub pop or rcl sbbl mov loopne dec (bad) or in or pop int3 lahf jle test icebp popa aam fld ss inc cmc call es mov fwait (bad) scas popfw xor jns inc cmp js xchg push imul shrl aaa mov flds lods in mov (bad) (bad) push inc xor ret ret jecxz or sub cli and test add js xchg pop jmp bound add jg leave mov and mov clc fwait or jge cli outsb inc repz mov ljmp mov lods imul adcl cmp ja pop inc and test cwtl cmp bound xchg in dec in mov cwtl lock dec arpl xchg adc cmp sub into mov xor lcall inc lcall push ret std test sub mov push lock repz jecxz stos sbb xchg pusha out (bad) mov mov mov repnz popf cli jno fdivrs sub jecxz aaa ret push pop fs push nop or ret arpl movsb repz loop movl lods in or dec aaa aaa xchg sub mov ja mov pop pop push push test movsl mov mov dec cwtl adc aad dec xorl fmuls cwtl notl mov insl jns in mov mov mov std or xchg sub xor or xchg or and push lea inc jns mov lods mov test sarb mov sbb daa sbb js mov add pop add add mov cmp sub pop aad push sar xchg lods xor cld push in xor jecxz,pt inc ss pop bound dec inc out mov stos sbb mov push lret inc test mov push outsb scas repnz xor sub jno in jl sub in out xor stos dec fldenv and xor out fcomps jns jo xor shl leave pop sbb xorl adc push ficompl jmp popa iret scas lret xor fcomip in push test sub es jnp jbe mov scas mov loopne into fsubp jl fdivrs sarb das int3 dec xchg jg jb stc add rorb test jp cmp mov xor xlat jb fwait (bad) push test jne push shr push ja inc xor inc hlt lea outsl mov sbb cmc repz mov test dec fldl enter lahf jbe scas jne dec adc insl or add adc outsl rolb (bad) lret or in insb movsl sbb ljmp xchg pop in aas fcoms mov popa in jno jmp jae aas test int3 inc mov into jns fbstp and mov sbb ss sub jb stc xor mov lea notb xorl push fsubrl xor pusha inc xor das push and mov add lods push cli pop out jge int xchg divb cld aad push enter mov clc imul adc push mov dec sti test xor (bad) cmp in jbe push cmpl addl cmp imul cmp sub sub mov dec std jmp adc jp aad pop daa xchg aas mov sahf xor int jnp pusha out sub xchg dec int3 aad (bad) mov sti inc fild loope in test jl push ret stos mov push cwtl incb xchg adc mov (bad) loopne mov xor iret xchg mov hlt cmp xchg hlt test nop dec rclb test movsl push mov xchg jo in lea aaa movsl mov cwtl push pop cmp jnp scas out insl jnp pop inc mov adcl int push loopne popf cmp mov repz xor xor push cli enter stos arpl pop and fucomp lea mov loopne mov jmp xor psrlw test push std imul jns (bad) mov dec int aad and ja xchg jo inc mov cmp push sub mov cmp xchg int3 outsb sbb mov push icebp sbb arpl in push lds inc mov ds and jns je lds rcrb bound inc and dec xchg sbb xadd xor or rcrb push mov pushl arpl mov fsts popa xor stos pop mov ja addr16 sub dec out inc mov cmp shlb jg (bad) xchg lods cmc push fidivrl cmp icebp add rcll mov inc movsl je pop cld mov lods fiadd jns sbb ljmp mov mov jle jnp push mov mov xchg sub fisttpll fwait cmp cmp sub inc test and sbb insl push adc arpl ljmp inc cmp adc pop out dec into push or je and test mov jecxz adc pop adc mov mov in inc xorl pop dec jle pop add cmp pop adc mov add adc mov aad jl sub cwtl (bad) loop sbb scas mov add out mov (bad) (bad) sbb sbb or icebp sahf sarl fistl xor mov sarl fidiv in and bound in xor mov into imul jp dec or jp inc movb mov add dec cltd mov cmp loope mov cmp mov das jp jb jg leave clc jmp cmpsl mov jecxz testl cmpsl mov subb das xor shrb and ds mov arpl pusha mov adc adc xor (bad) dec pop out add dec repnz xlat inc pushf je lea xor cs cli pop aas push jnp sahf test jb lahf bound xor sti (bad) mov or aam icebp (bad) out pop add outsb add and xchg (bad) hlt je fsubr (bad) addr16 (bad) cli pop int3 popa fbstp aad das pop ret and popf aam sub xchg fidivr incb pop jmp fprem1 xor addl test call fbld xchg ss aas mov lret mov sub dec mov mov add adc adc loop mov insb adc imul jecxz gs popa icebp lods insl pop mov cmpsb jne movsl push xor aas and and ss add loope pop movsl scas cmpsb repnz lret arpl or addb jecxz movsl repnz iret dec insl cmpsb mov iret je fist mov xchg xlat cmp xchg cmpsl cld js jns (bad) pusha test (bad) call cmpsl jns aam aas mov lahf add lods mov rcrl push push lock into and dec daa outsl movsl pop adcl pusha xor push (bad) cwtl popa (bad) mov jbe xchg add dec and cwtl incb sub push aaa jge lea aad movsl and add mov pop nop popf iretw mov fucomip dec cs notw (bad) daa in and jo mov pop scas (bad) test mov xor in aad add test push inc mov pushf aas je outsl xchg sti rcrb cmp cs inc jp push repnz fsubrl mul mov (bad) rcrb daa aad in jmp cmp adc sarl inc sbb xor lahf adc add fbld pmuludq fmuls adc xchg add testl sbb sub das push push lods popf (bad) mov adc xchg sub adc jo inc cmp xlat and es loopne adcb or es out aad test movsb stos loope popf pop in (bad) cmp jne enter or dec sbb (bad) fcomi or fst addr16 xorb mov aad movsl je int cmpsb test shlb push fwait jnp mov add xchg div jp push xor and xchg xchg adc lods pusha cld pop ss loop push sub test mov inc cmpl push je or and pop mov push mov or ss push cmp cmp (bad) jp in fldenv test mov lea xor pop faddl les xor jg pusha cmc add ja js js adc add stc add movsb pop mov das pop jae ret adc add add fimull fwait les and out mov arpl aaa (bad) aam rolb cmpsl stos fwait in insb ficompl ja or icebp hlt push adc ret iret imul scas or pop jmp ds add gs adc mov pop lcall notl cmp adc mov dec sub imul lods outsb dec push insb das cmp je fcomip push jb or and xor sbb sbb icebp or or (bad) cmp sahf mov dec push lds test test pusha into out in fdivrs inc outsb and lret dec (bad) xor and jno sub int lea jae dec pusha mov sbb sbb (bad) scas sbb sbb dec repnz and test (bad) loop mov xor adc pop mov xor jl loope in cmp dec icebp xchg push movsb sub add cmpsl iret jge sbb rolb or test inc fldt inc xor fsubrl lds mov and aam cmp rep cmp mov arpl and jbe loopne adc rorb mov inc pop push jmp popa and xor insl sub dec or or dec jns fwait lcall loopne lcall dec rcrb mov loopne lahf push fs or pop dec jbe mov jmp cld fisubl push das or (bad) jmp xor (bad) cmp sbb fwait icebp and and mov add movsl push or add mov xchg ljmp into add in cmc mov pop jne xchg pusha or iret cmc or xchg dec aaa add lahf rorb stc sbb xchg (bad) scas jo xorl out test mov push ret pop test mov rcrl add inc mov add fwait pop inc out repz addl clc dec (bad) in aam (bad) jg mov push jl xor test pop imul xor pop (bad) and push mov xchg push mov (bad) aas dec inc in jae pop sbb mov iret loop ja push sbb test lea into lds into mov jbe pop pop sub js mov (bad) jne jne and cli xchg push test shrl sub in xor dec dec or jge in test mov pop sbb and push sub movsb (bad) cmp sub xor cs (bad) cmc cld or pop mov add lock push mov lcall cmp ja jge out lods stc loope test mov jp jmp aam or xchg mov enter mov mov or xlat call pop ficom les jmp dec sub (bad) and clc jle jb xchg adc jnp dec add divl stos jg cmpsb das (bad) add push inc shrl hlt xor inc fisttpll push shl jl jb aas xor xchg or cmp mov add dec and in mov or xchg fs insb sub or mov mov test je sbb fldz mov das fistpll xchg xchg pusha push repnz pop pop icebp adc loope popf mov inc imul out fidivr xchg iret jg mov mov sbb lds mov mov insl xor std push stos int3 jns xorl sub lods pop pop imul xor adc pop add push xchg (bad) mov sbb mov movb mov daa sbb (bad) clc jge fwait sbb jg cmp sub sub cmp mov ret shr add nop les add test (bad) lock inc out jae (bad) int mov test out lret mov xchg xchg mov das pop lock mov pop icebp and jns dec cwtl insl adc pusha or inc mov in or inc mov bound aas sbb adc sub mov loopne jo pop mov stc jle and loope pop xchg dec cmp push cmc xchg test jne mov into inc test outsl call mov sub xor popf sti cmp jecxz push pop clc and rorl adc mov shr insb cli jb popf aas jne jb pop push mov adc gs jecxz or adc addr16 leave into mov insl movsb xchg mov aaa outsl andb test sub bound incl cmp fs mov push test lods mov xorb sbb xor inc push sbb xchg rolb fwait loope mov mov push dec mov sbb lret pop leave shlb repnz in add mov pop out aas or sti mov scas into sub pop (bad) adc mov push and loopne jne lds aas jb movsb or cli ljmp imull sbb lret or mov mov or or inc mov jno pop adc push push popa movsl cmp mov dec jae fs dec gs cmp lret in jo push dec inc shrl jmp jnp in mov out fisubl or push popa cltd rol mov add jno xchg cmp push (bad) ljmp mov adc test sti push shlb mov inc dec loope imul fcmovnbe nop cmp cs in insb outsl mov cmpsb push nop push mov mov clc lock lods mov inc stc (bad) xor sarb jmp mov mov dec loope mov ret jb add outsl sbb mov adc and mov test fdivl push inc movsl inc rolb mov lds (bad) lock or loopne lahf lds jmp and lds pusha jge mov es inc lahf mov repnz xchg jnp iret stc mov scas xchg sub rcll xor fidivrl pop lock lds imull shl scas xchg rcr nop cs (bad) pop lret enter outsl mov in pop stos enter cld cld sub dec xchg loope adc repz out scas insl lret fdivrs dec and leave sbb mov (bad) mov and jg lret push popf (bad) movsl or dec rorl out and or clc push sbb push dec inc pop in sbb mov xor iret xlat insb sub cmpl xchg xor mov ja push in jb push dec aad dec jno pop mov repnz jmp adc sbb sub out fwait dec lcall sbb outsb in pop and shlb sbb mov (bad) or je jnp ja (bad) aaa loopne inc xchg icebp out cmpsb hlt (bad) repnz iret push (bad) cld rcrl mov (bad) hlt pop (bad) mov loop add and ljmp inc mov push cs (bad) repnz rcll sbb and lret push mov stos (bad) les adc mov cli out pushf fstpt ret pop dec mov push pop popf jp mov enter aaa std aad ljmp sahf add (bad) mov cltd mov mov mov mov pop jne jnp inc xor mov mov lods test insb lret sub pushf pop mov js and bound pop adc negl clc pop jge mov inc test ljmp scas rclb pop mov ljmp test out push cli adc je pop add movsl push xor iret mov cmpsb fisub sub push xchg dec lock pop sahf cmovbe jns pushf (bad) xlat repz pop mov lock push shlb repnz jns pop into push pop pop adc adc or xor std pop daa lcall outsl leave sbb mov aam bound push xchg dec mov iret or push push pop cmp (bad) xchg rorl mov dec cmpsl sti pop and outsb mov popf and jge pop mov pop das enter cmp dec pop int3 imulb xchg sbb aad dec jecxz xchg xlat xchg orb sub add mov sbb jg jns sub adc or addr16 mov movsb pop out outsb clc adc out cmp push insl cmp lcall (bad) mov pop bound adc jecxz cmp or mov jecxz push cmp std sbb test mov sti (bad) ficom scas (bad) inc loopne arpl daa sbb das scas int int mov add fsubr adc add scas mov mov outsl aad inc mov iret add dec popa cmp mov out es inc pop mov mov aad jmp lret out cmpb jl pop fnstenv or sub test cmpsl dec adc gs push and or push loope mov jle inc in cmp inc (bad) jbe xchg in xchg shrl stc (bad) and clc pop rcll xchg cmp inc ds pop inc push ret shll data16 jle test fcmovnbe jne out add out xor mov push (bad) int mov push das lcall int3 scas jae jecxz jge movsb int3 jmp adc mov xchg and hlt jno aam int dec sub ret lods or dec sahf movsl ss mov or ja aad pushf adc sbb jge arpl jmp pop ret dec and scas xor fisttpll or jecxz sub shlb cmp icebp jmp aad int dec jg add hlt faddl push or xchg (bad) lahf fwait (bad) je fistp in jbe es add ret fisubl dec or mov mov jl adc rolb cmc outsl into pop int3 int3 inc push and cmpl out mov xchg pop adc mov pop jbe mov je or scas daa cld lds mov inc ja mov sbb (bad) jb leave int3 (bad) ljmp sub xchg adc jmp aaa mov xor xor and test or cltd push rcrb lods sub or lods mov (bad) lret sbb gs mov das xor (bad) jge jae sbb in int decl int fcoml sbb jl aas push cltd in aam and jl roll mov imul or and push sti or sub dec push nop psrad pop (bad) push adc dec sub xor jle call ret jae pusha and in or es sub bound sub xor shlb add out jl inc int3 and popf sub in ja and cmp in push call js jnp fyl2xp1 dec lods mov cwtl div addr16 in xor xlat push fsub adc and push mov int3 add enter in push xchg pop enter add xor fwait push ja xchg cltd imull popf jbe ds xchg xchg adc jmp (bad) int3 addl dec pop xchg pop pop dec xchg mov test add shlb xchg mov jb sbb imul xchg push ljmp jle popa and pushf mov push inc lahf xchg aam sbb loopne jle or inc mov cmpsb fwait jmp jmp pop jno int3 pop mov into xchg adc das sbbl into call loope lahf cwtl sbb lods (bad) jb les jo mov sarb icebp xor or push sbbl test and aas fisubrl aam mov add or aad lcall (bad) lods mov ret and adc cmp inc bound jno push pop mov mov rcll jnp or movsl sbb mov and or jae repnz cltd pop imul sub add clc cmp (bad) fs push add (bad) lret sub jnp xor jb jae rolb hlt ret add cli stc rorb cltd mov sub push or and aas add add xor sbb or rcll pusha add int mov jae sbb jl jnp inc psrlw or cwtl lock in xor orl fldcw dec scas xchg enter icebp sub dec test pop sbb cmpl xchg xchg outsl sbbl sub ds insl or and imul jo jmp in push (bad) xor inc sbb dec cmpsb jns pop dec mov sub pop pushaw mov push ljmp mov adc in aas add mov xchg pop out lret jne cld push and and xor in inc (bad) popa loopne xor or das stos cltd jbe sbb cmc addr16 mov mov or (bad) mov out cmp loope cmp adc fimul stos cli mov dec mov and pop fwait pusha mov xlat scas mov cmp shrb test pop pop imul pop js add jle loop js rcll add in sbb inc add mov cmp dec fmull cld sub jmp inc mov cmp imulb lahf xchg repnz xorl xor into inc sarl mov popa int3 stos mov (bad) loop xor inc pop dec ja imul jge add push dec pushf dec add add add cld xchg jp (bad) and mov repz mov (bad) lods push mov cmp jecxz loop mov js xor neg push fsqrt pop xor js fisttp out jl into and notb cmp enter leave mov xor out mov add movsl lcall incl outsb xchg movsl (bad) dec mov mov shll adc fdiv rcrl imulb jp cld je lcall sbb ror push adc addl cmp (bad) testl and adc jbe arpl sub test leave dec (bad) cmp add push sbb adc and js (bad) inc mov hlt xor imul sbb xor ss lret iret rcl pop xchg mov or and pusha push xchg inc popa inc mov push movl sar dec mov icebp pop xchg stos adc and popl fwait jmp xchg insl or ja xchg incl jp jmp (bad) aaa xor adc mov mov into jno inc mov shrl mov adc int3 iret arpl sbb adc popf and les add daa pusha jle or cmp mov fsts (bad) or popa sub inc pop lods and movups lea pop add ficoml repnz in loopne or int3 aaa dec in rcll add jp js movsl lcall (bad) stos push fbstp mov cmpsb mov push aaa rol xor add (bad) sbb adc xor pop int test test lds mov add mov dec push adc je xchg je ja fsubl mov push xor mov xchg push (bad) push rorl jmp lods and sub (bad) rclb or out cmp mov test cmp (bad) sbb repz sarl sub adc (bad) jns icebp outsb or fucom xchg push bound ficomp xlat movsb push pop shr daa cmp aad push jp jp fst repz sti ljmp enter push add sub lods or push lds pop mov dec sbb mov pop loopne fs subb aad sbb mov xor xchg mov xor test pusha ret incl sub pop cmpsb cmp sub jecxz sbb dec inc mov ret cmp (bad) loop pop jmp xor adc cld adc sar lahf dec adc cmpsl lcall hlt test into dec add mov flds cmpsl jle rcrb int ret (bad) xchg test push (bad) cmc lret pop inc push js and or xor fidivl adc inc cmp nop or cmpsb pushf fistl push pop and mov mov xchg or scas adc xor xor jb repnz aaa xchg (bad) test xorb cmpsl cmp xlat loopne in pop xchg adc jle cli in push push stos mulb and dec cmp mov leave pushf add sbb addr16 nop adc (bad) jno and cwtl and int mov hlt mov add out push sub outsl push cmp jns shrb pop shrb notb mov sbb (bad) ja lret stos enter fistl mov repz pop cmp dec fcom push xchg jb push sub dec rcrl enter sbb adc add cmp pop sub lods xor insl (bad) jno push cmp add fwait cmc jmp mov lret imul mov jo inc cmpsb out cltd xchg push or fbstp ljmp mov push push add pop mov (bad) dec dec mov jo push lods add adc jnp das andb jne sub sub movsb and adc imul xchg data16 cmpsl fsubl sbb icebp add inc out mov or lcall fidiv mov out pop and mov xchg lcall mov sbb adc xlat sub neg addr16 cmc addl jo (bad) fstpt aas xchg imul fstpl sbb aaa pop mov push test mov shll mov (bad) repnz sub cwtl inc notl mov jmp xchg dec dec fnstsw daa loopne insl mov mov push lea push pop test inc cmp jmp (bad) fist jno xchg fnstsw add mov inc out cmp int3 insl out popa mov add cmp outsl pop push adc (bad) jmp std xor aad rol call mov fsubrl imul push jge xchg dec adc (bad) mov mov adc pop jle cmp cltd and in iret shrl jge rcrl clc enter test xchg sub or in (bad) cwtl adc sti dec cmpsb adc insb lahf pop or sub pop mov orl ss jmp push and iret inc inc or jae cmp mov adc xchg add pop hlt mov lds fcoml cmp into addl mov sbb pop push test mov call xchg movsb lret (bad) int3 cmp dec mov jns rorb pop aas xchg adc and lock repz insb rcll jp pop test inc das push stos jne call xchg or cmp cmp mov cmp scas sbb ret sbb addr16 nop push dec mov dec inc es jl fcmovnu mov (bad) lret repz inc sub cwtl lods or xchg xor je out mov adc mov lret stos movsb rol or cwtl fwait push dec (bad) stos cld js pop loop shl jb (bad) push xor jl es dec jl fucom fdiv adc push dec add scas xchg xor insb and mov andb push ror mov std inc sbb enter or mov data16 insl pop xor inc fs or or cmp ds mov gs sub dec pushf add cwtl (bad) mov pop cmp dec mov xor xchg mov push repnz xchg xor mov fiaddl popf sar jns add roll pop jmp out pop mov fcoms and insb and add add add cld shl or pop psllq lds gs fnstsw in sbb mov (bad) repnz mov dec (bad) lcall xor xor mov lock push push adc idivl std leave jno push mov push fabs add ja pushf dec or adc rol mov xor into xchg in das loope or mov notb fs inc jbe lods mov or fsubrs test mov fistpl push or arpl bound or inc xchg int (bad) nop xchg sti pop imul jno punpcklbw aaa shr jne out mov aaa test inc (bad) bound dec dec into dec dec jbe pushf pop cmpsb movsl scas hlt pop mov mov dec xor mov stos inc scas jb pop gs fwait pusha xor cli jecxz js inc sub mov mov xor mov fsubp jb pop adc fadds xchg pop loopne fdivrl xor mov mov data16 out jnp push and out insl mov aam dec ds push movsb jp xchg in push push pop pushf inc orl sbb xor fiadd mov sub ss inc fwait fwait mov rorb cmp rclb inc mov in call popa mov pop xchg xor jg inc cs out pop imul push sbb dec lcall dec mov sbb mov jmp jae jne les cltd fldt sbb pop or or ret inc scas test xchg ficom xor imul lahf cmpsl xor loope inc sub dec stos adc aaa negl bound or lds ss inc inc iret jae jne pop mov sub xor cli and mov push sub bound pusha notb sbb call mov xchg adc loope and cltd lods into test clc and jge ds aas ljmp mov ret adc outsb roll jbe dec int3 push mov aaa push inc mov adc into shr test addr16 ss aaa and inc outsl stc aaa in push inc clc int3 hlt test test scas lds aas stos dec in mov cmpsb lods push out imul xchg dec aas inc outsb jo ljmp add cmp push addr16 das aam je jl rcrb sbb dec test jp pusha add mov cmp mov movsl stc pop enter cmp iret mov cmp jecxz aad (bad) scas dec xor (bad) or and mov nop xchg inc insl shlb movsb mov mov pop xor cltd imul cmc mov ljmp xor lret and adc lock mov test sub mov (bad) push mov and jb mov dec lods push pusha dec and mov inc or mov in mov xchg das jno dec mov in push mov repnz mov xchg lock lret (bad) lods mov mov negb inc mov cld ficompl mov icebp inc loopne pushf cwtl inc jo cld push mov lahf pop or in inc aaa jb cmp mov aad mov call iret test push push (bad) rcr popf jb stos pop arpl outsl mov mov int3 xchg insl or push cmp jns leave inc inc sbb pop int3 and lds fwait jmp shr mov call push mull ja and add nop negl shll mov sahf pop jmp rol sub pop shl dec mov add xlat pop bound sub or dec dec push sub mov sub (bad) outsl cmp dec jno push rcr sbb fsubs add and sti nop sarb xchg ja cmp jbe das and cmpsl ret lea fs inc xlat xchg dec clc lahf sahf jb (bad) fs stos sub cmp and mov inc inc cmp push push xor adc imull stos jl xchg imul jp leave sbb jle or (bad) pusha xchg add push dec pushf push jmp pushf jmp test test inc add pop leave test cmpsb xchg sub jns add xor cmpsl test inc pop dec xchg nop jbe fstpl shrb add mov mov mov sub cmpsl cli cltd icebp and popa jmp push data16 inc pushf push push sub loope push jnp push rorb jnp dec sbb rcrb imul and xchg pop icebp inc repz or insb xor xor out xorl and lods icebp icebp mov loope push das mov pop mov sbb jnp cmpsb or mov fidiv mov xchg clc mov mov lret push mov sbb stos stos xchg mov pop mov mov jmp dec inc jo pushf (bad) adc mov inc (bad) pop test lds jg sbb jbe (bad) lea fisttpll xor outsl or fidivrl lahf inc jbe test je mov push sbb lahf daa lahf out js (bad) (bad) das dec pop mov lods std sti push ds xor flds sub imul out cmp jg or and outsl inc int3 dec ja sahf mov xor ljmp (bad) hlt fiadd cltd sarl xchg in inc frstor dec mov xchg xor pop mov (bad) out or gs mov mov mov sbb rclb lds lods dec addl mov and or xchg jb dec (bad) jns mov pop enter rolb xor out clc push popf cld out sbb jno jecxz xchg (bad) lods inc lock lds adc in jmp pop loopne dec cwtl pop inc xchg in jae jl pusha out dec mov xchg mov bound mov mov jecxz mov pop clc fldcw in push fsubrl pop and adc cmpsb dec test push mov mov loope dec das ffreep adc dec sub roll inc sub out pop sbb sbb pushf cltd fwait loop iret (bad) and insb or mov inc fild mov push in adc (bad) in out (bad) dec sub (bad) or outsl sti and mov mov lret cwtl fcmove stc leave cs insb mov pop (bad) jg adc stc adc jecxz aam pop imul shrl push xor push add add mov fldl xorl pop mov daa mov fist push adc xor push cs pop xor mov movsb push int3 rorl in outsl movsl rcr dec aas not cmp mov data16 (bad) mov dec xchg dec xor push sbb cltd dec jo into pop inc push lock mov xchg adc out sub sahf (bad) mov add daa lret mov inc pop jb out je and outsb and gs pop ja mov mov pop iret stos dec shlb pop arpl cmp mov sub ss mov (bad) rcll pushf pop lds and lods sub pop sti lret lock fidivrl scas out lret mov out xchg add fsubrl (bad) mov mov jb das mov and call cwtl loope (bad) out dec mov int xor pop mov xor add shrl or movsl out nop popf loope push xor movsb or loopne xor lahf pop inc flds mov sti pushf jge out jne,pt mov inc decb mov jb int clc xchg or fidivl sbb out insl and pop and es (bad) cmpsl jg and mov sbb pop scas test jmp inc pusha out insl insl aam sub cmpsb jp aaa stos cmp loopne imull aam gs xchg test pop push push shll leave lods test popa lock and lods dec shll ds scas sub adc insb jge or lcall (bad) sbb dec mov sub inc dec insb pop (bad) dec fsubrl js add inc jnp movsb test aas aam mov push out pop imul mov ljmp pop inc or outsl lret mov sub and sbbl movsb insb sti and loop pop and adc dec inc nop cmp imul mov and push cmpsl xor and cmp jne (bad) loope icebp cmp incl ret aam sbb xchg sarb add add push sbb pop pop mov in shrl add jg lds ja icebp scas inc mov loopne out xchg rcrb (bad) in adc add mov (bad) loope sub (bad) test bound lret or or inc data16 sbb insl cmpsl push or mov in fcompl les fsubrl in cmp loop cmp pop add in outsb adc push pop lret add (bad) mov test push popf in arpl xor inc insl mov mov nop arpl (bad) mov pop mov push sub sbb test lret mov nop adc std ljmp dec ret sahf mov call mov pop adc ljmp sub mov aas ret (bad) dec mov sahf (bad) mov add test pusha push jecxz cmp fdivrs fdivrs fstps adcl sbb (bad) jp inc imul out lods iret inc out xor arpl loope (bad) mov movsl ret cmp int in mov xchg cltd nop dec pushf push fstpl jmp loop cmp push inc mov dec push ljmp enter sub (bad) aas sub pop imul add jmp and (bad) lds mov ja add loope nop popl or dec or je repz inc cmp mov loop sbb sbbl sbbl xor push movl stos test (bad) jno mov add fimul movsb and adc rorl int mov mov loop rclb push test mov popf lods sub stos mov jg mov hlt mov push jp cld jnp push adc xor out stos mov jecxz add (bad) in mov stos dec adc movsb (bad) mov xchg cmp loopne or scas fisubr (bad) push shrl outsl cmpsb aad add rorb xor push adc ljmp cwtl jb mov sbb add test rorb outsb add xor adc and arpl jg mov adc pop sbb add jnp out test mov sub nop mov sub ret (bad) push push jne (bad) rcll inc fs mov mov neg adc add inc adc dec add into jle add loopne stc fimul xchg jmp xchg stos lahf mov xchg rcll daa (bad) (bad) sub inc insb jecxz cmp icebp mov xor sbb and pop mov xor imulb rcr xchg push into in mov imull imul out mov cld or and lds jp js jno mov jno push cs mov js imul push mov xchg xor lea cltd adc add insl (bad) repnz leave incb xchg sbb xor or xchg ret pop addr16 in inc push (bad) sub xchg fdivl movsb dec movsl fiadd mov out lahf cwtl shr inc aas jmp push clc xchg ds pop repnz sub and xor std scas cld data16 mov bound test fs clc push add lea cltd mov daa aaa out sub hlt (bad) cmp mov pop (bad) dec idivb and and push ret ret pop adc jmp xor (bad) xor divb jg addr16 cmp outsb mov push jg (bad) and aaa push adc into add loope push xchg lret jmp sub and xchg repnz add orl ret ret movsb movsl or sahf dec mov mov jg mov xchg cmp inc jp in iret (bad) xchg ret ljmp cltd xor imul cmp ss fildll xchg fidiv inc pop jge aaa shrb and mov in aas jne leave push add jge sbb and push call mov mov sbb sti subl push je sub xlat ljmp icebp out push addr16 in sub xchg int dec inc sbb (bad) repnz lock fnstenv out insl mov sub inc aaa or cmp xchg in ror data16 bnd xchg movsl shlb lds xor add sbb add push jnp mov xchg hlt rorb and inc je xor lret push adc xchg xor repnz adc jge test mov aad or and call push int3 sbb (bad) xchg push jmp aad sub mov stc push xchg repz test cli loop (bad) and push lea add xor jl aas push lods mov sbb arpl mov push js push dec mov lcall cmp imulb pop sarl dec std lds mov or repnz (bad) insl int3 dec inc sbb xchg mov sbb mov sti mov ljmp adc call push insl insb push and dec jo mov nop arpl sti pop add out aam rcl subb cmpsl sub outsb stc lcall hlt mov sbb loope xor push jae inc sbb xchg xchg mov pusha mov sahf mov adc (bad) aam cli ret xchg mov out das or jle imul std movsl dec sub lock add dec sbb lahf movsb push (bad) push (bad) in int3 mov imul lea and inc lret stos popa data16 xchg pop xor add lods adc pop lret and add inc subl push int3 add mov xor ja and pop std cmp popf aas cmpsl mov and clc (bad) xor or add pop add scas movsb (bad) jmp stos mov add aas or cmp out sbb cmp mov sub and mov js or call or dec clc iret std push rcr or pop leave lds mov mov mov xchg sti cmpsl gs enter sarl js jmp mov dec lock sbbl int3 test and mov imul sbb mov movsb dec or mov (bad) mov imul add pop jg out cld lcall sbb fdivrl mov sub mov or gs lret inc xchg xor mov (bad) imul sub jp adc jnp and jbe andl inc mov dec fisubrl jo sbb mov cmp push adc cmpb inc cli push sub push mov lret push andl sub jne fsubrl xor jg xor inc loopne roll lcall pop fnstcw mov jp,pt subl movsl repnz inc and stos lret or push pop push xchg or out cmpsb jmp xor test pop lock cs adc icebp adc jg out test popa cmpsb test aad pcmpgtb shrl btc fidivl enter fist mov lcall mov in icebp fstps mov jb mov jnp popf fs or dec es sbb (bad) lret icebp jno shll rclb mov fcompl dec (bad) (bad) (bad) das rcrl sub dec in loope sbb mov inc cmp out jge mov jo in mov pop lahf jb ret push sbb xchg int rcrb lret movsb jo jno xchg outsl decl xchg mov inc sub (bad) fimull mov cmpsb bnd push mov fisttp and fwait repz and insb scas xor pop fmulp repnz xchg stc leave (bad) sbb cmpsb fdecstp fcmovnbe inc adc icebp pop inc mov test js std jle jecxz xchg dec push out mov or out dec cs adc push mov out mov inc and movsl pop push arpl mov leave mov adc push bound dec fcmovnb mov mov inc enter add adc push sub outsb idivl ljmp mov xchg xor dec cmpsl push push in call sti scas testb in pop rclb imul pop stos push test xor cli pop (bad) mov mov movsb fs and cmp jecxz scas xor and pop je jge lods nop bound es out or mov and xchg push imulb imul pop repnz mov jle rcr mov xchg cmpsb push cmp test stc adc inc xchg fnsave std jns adc sbb jns xchg dec inc sub inc (bad) add aaa pop in gs outsb sub adc pop hlt pop das lock enter mov or mov mov mov nop test (bad) or (bad) dec stc fildll rcll nop shr push cmp jle je (bad) mov pop push hlt loop mov ret pushf stc mov add fwait sbb repnz mov jg and xor loope ret cmpsl cmp jp cwtl xlat (bad) jge mov loop mov ret fwait jno popa push (bad) jbe fs cld adc mov jnp les xchg daa sti xchg (bad) mov sbb cmp mov xchg cmp inc jb,pt sub mov inc mov shll outsl data16 in cli lods fstpt mov jecxz mov je push xchg cld mov lahf pop imul jmp add popa jnp inc mov mov fs mov mov pop cmpl scas inc test and xchg dec cmp sbb inc cmp int3 mov push xor or pusha jle push js lret test movsb jecxz inc and add xor sbb repz popf sbb dec shr sub adcl adc xor bound cmp sbb sub icebp mov mov rorb xchg int3 shrb sub mov iret or stos lea aad add inc into push or in xor mov sahf pop nop cmp pop push (bad) xchg pop adc lret lds insb and mov xchg sbb lods and mov or jns or and das inc orl push leave inc cmc daa and cmp xchg inc sub xchg mov mov movsl dec mov sub lds out or pop push dec jne in in cld dec fs in mov (bad) jno add adc dec mov stos fldt push sbb shrl sbb ja adc add mov xchg mov pushf xor mov dec sbb xchg jns out lock in sti inc ror test fnstsw push es push sbb lods and mov scas out ja mov inc pop frndint or sbb ljmp idivb fnstenv xor pushf or mov mov out pop fsubs xor movsl stc pop mov shl clc xor mov mov outsb mull out xor fisub dec lds jmp test les faddl outsb xchg dec inc aad mov adc mov rolb and clc hlt push inc fsubrp push pop fldcw pop test ficom fnstcw (bad) shrb sub adc (bad) cltd bswap iret (bad) stos ss nop test or arpl push ds fstp mov mov daa mov sub cli je lret push jg jecxz enter jge mov fcoms mov fisttpll ffree xchg dec fdivrp clc hlt jg jge jp stos cmp int int3 shlb adc mov cwtl mov hlt pop daa xchg push xchg sub and push jnp pop mov in sub js arpl mov sti add lcall iret je cmp insl push scas leave aas andl add mov rcr orl imul mov pusha ds adcl mov pusha xchg shrb movsb mov div cwtl sti pusha aas sahf push call aaa add imul stos xor pop cmc (bad) mov nop xchg int3 lret pushf jbe es int rolb stc data16 ret lcall outsb mov jl push inc sub sar fwait mov lahf cpuid mov stos pop mov leave imul (bad) lods (bad) andb out rolb lcall out jmp fstpt iret mov and loopne fisubr fbld imul mov mov sbb or popf push rol push xchg pop lods (bad) rcl lcall call mov movsb push mov ss mov xlat gs xchg sbb lcall stos adc fstpl xor clc and dec into js jmp pop mov (bad) (bad) or cli in and out out test iret mov add scas jle fwait cvtdq2ps mov adc out loope js add in dec xchg jnp dec les sbbb dec jge fcmovu int fadd adc stc mov cmp ss xor ds je dec push stos xchg pop xchg xor lahf jl cmpsl push stos pop inc sub sub arpl sbb lahf in inc jo in mov adc fs xchg out xchg daa mov loopne inc rcrl (bad) adc repz mov pop mov pop stc lods cmp idivb dec rolb sub xor fdivl push add push cmpsl dec in push jbe and sahf bound add xor negb cs imul mov lret mov popa popf jecxz pusha popf (bad) (bad) mov ficompl and cmp sub ljmp (bad) or jb mov flds hlt sub mov adc mov test jb jp xor rcll outsl loopne mov mov pop add cmc sub stos push push adc insb ss fiadd jne jg jge and les inc imul icebp mov xchg dec sub movsb push je adc and lods loop pusha mov xchg adc mov jecxz fcmove ds shr mov sbb cmc lods mov dec xlat push lds and (bad) outsb mov inc or imul xor cmp mov (bad) js inc mov fwait pusha xchg cli xchg (bad) pushf (bad) outsl push xor (bad) or adc xchg jmp cwtl or dec jns cli xor mov dec decb and xchg movsb and add or cli push loop gs out es adc clc xchg pop bswap ror push adc mov jns push mov pushf pop push mov imul mov ds jo add ja dec lea mov jnp lcall mov xchg sti insl dec lret mulb sti popf adc xor cmc xchg pop sub jo adc fidiv push (bad) mov bound div loop in pop shll bnd push pop lcall xor cmp cmp mov leave (bad) fs mov (bad) push and jl sbb cs adc aaa cmp je cmpsl lods stc adc mov add mov lahf cmp cwtl xor dec fnop pop orl cwtl dec or orl fsubrs pop aaa adc and jb cmp (bad) out ss ret insl jp or fidivl dec stc lahf outsb or cmp xchg mov cmc push adc sti xchg mov xchg stc inc mov pop test and xchg jne jl dec dec (bad) out jl mov mov sub stc mov sub adc call pusha add mov add lcall je xchg cmp (bad) ja adc nop inc das jne enter add nop aad dec in sub cld sbb mov cld adc add fiadd jge inc fmuls add sbbl (bad) leave or sub mov jge cmpps test cmp mov fisttp mov inc and sub mov dec or mov rcll mov pop (bad) mov loopne test (bad) mov and inc in (bad) jb adc lea cwtl std or ret popf mov subl mul popf insb push (bad) dec xor jne mov mov lret lock pusha and js xor std hlt jae sbb imul aas (bad) push xorps call push fidivl test jle push jl jecxz psubb mov mov std in outsl cli sahf jmp test (bad) daa popf push inc stos call sahf loop addr16 mov pop subl mov or xchg jno push mov jl pop xor loope pop insl xor adc orb pop pop mov mov lahf enter arpl lea enter push add or movsl push das push incb addr16 daa sbb adc (bad) jno divb push fsubrp jbe jmp (bad) int mov dec ja lret lock sbb ror xchg cmp cmp sub test arpl pop test push pusha mov nop (bad) enter or int pop inc popa test fsubrl cld push test inc sub lea push xchg repz adc imul and adc mov cli fadds test test in cmpsb mov xchg int (bad) into faddp rcrb mov popa pop xchg xchg ret add stos gs fist push pop aas icebp jl and adc xchg call sbb push or out push icebp movsl inc jo and lea dec push dec push sahf lret (bad) cmpsb adc frstor jne stos mov add arpl les pop movsb or pushf mov inc mov or fnop mov bound addr16 push fcom dec mov ror (bad) mov mov push sub mov pop inc leave jno insl dec adc sbb rcrb (bad) mulb dec test rol fnstsw adc shll xor incb xchg xchg and inc dec jecxz xor or hlt cmp (bad) or fimul test rolb cmp popa mov enter mov fs dec mov or mov push push inc das test xor fnstsw popf adc ret in xlat clc push xchg movsb in push jg cmp mov mov repz adc imul pop lahf adcl ret push jmp lock (bad) fimull fildll jg aaa xor mov cmp mov mov imul xor loopne sbb imul call xor or mov icebp xchg pushf pop mov jns jle pop xchg xor bswap leave push adc sub popf push dec out int outsb jns push stos repz push push stos xor (bad) (bad) sbb sbb push xchg pop cmc (bad) and mov test jbe push dec roll or inc mov lock sub push xor sub ret stc jae push inc xchg test sbb and in sti in push ss jl add dec sbb mov xlat ret and notb clc sbb sbb cld inc dec aaa outsb xorl xchg (bad) mov xor or mov mov icebp xchg dec aas mov mov fmuls test (bad) xchg pop ljmp xor xchg xchg mov mov or lds inc sub hlt fildll and jns dec jecxz or and xor jno xor lock outsb out insl movsb mov testb nop sub push rol cmp inc pushf (bad) xor pop jl imul push lock out mov (bad) in movb scas pop jecxz mov ret fdivrl pop pop push (bad) loop scas cmovp shll (bad) and in icebp iret repz xchg push fsubr dec mov cli hlt lods ret mov lea mov jnp aaa cld and es in leave jno movsl mov fwait push movsl (bad) sti push or sbb pusha pop fiadd add add mov shr int inc xchg cmp push pop enter popf or scas pop shrl inc js (bad) (bad) add and push mov pop or sbb test ret xchg cmpsb imul jp icebp out lret sbb idivl int3 mov inc inc popf out (bad) mov add stc add inc gs fwait or sbb imul or sahf lea or jo pop aaa pop sub pop inc sbb dec orl fwait cwtl xor mov xchg push sbb jmp add xor inc adc mov out pop jbe lcall cli leave mov lea xor fwait sahf inc dec pop adc push iret test pop cli leave add out inc mov dec fwait or pop adc stc in jl cmp out or mov jle adc mov mov insb push mov inc mov or push adc push adc test dec xor fsub cltd sub sti int push arpl ud2 pop lret inc scas pusha insl mov push pop (bad) loopne mov dec mov icebp sbb and sbb mov jg fimul pushf push lods fldenv fs scas cs mov es push enter decl cli jle lahf stc movsl jnp mov rolb int pushf jno dec sbb mov jge jl ss cmp xor ljmp (bad) jae lods jne (bad) sbb mov or jno mov bound ret testb imulb scas xor pusha inc mov pop cmp mov inc incb xor inc jg idivb lahf in inc or pop mov jo cmp pop jge adc mov movsb ljmp ds les mov pop cmc push push notb outsl leave cmp or lret mov xchg mov xor mov and in in mov sar or jb xor bound xchg sub push jae ljmp pop sbb div sahf data16 push mov inc jmp int repz in incl dec and jl inc (bad) and jg aaa inc sub or cs jecxz loopne xlat jne int les aam cld sbb mov aaa in ja test xor (bad) xchg lahf aam push push xor add mov dec repz repz pusha cmp push cwtl add pop add fdivs mov and out inc rcrl inc mov push adcl adc lds (bad) lcall movsb jl (bad) push mov sarb int3 push mov mov in push (bad) and leave into scas call mov jns adc push and mov dec push and inc adc adc dec sbbb adc adc add and adc sbbl mov inc mov and (bad) movsb nop mov xchg fidiv sub jl pop loope push adc cmp pusha sbb add dec fsubrs jle inc jnp inc adc cmp dec push inc sbb jne adcl and ljmp push leave jne push frstor or dec gs pop pusha xchg leave lcall sub std and mov es cld das (bad) xchg stos pop leave xor inc push test add mov push mov rclb fidiv scas imul hlt in insl lret js xchg sar mov aas adc push test jl or push add ret (bad) xor xchg cld mov jge out mov pop loopne inc cmpsb nop xchg mov sbb mov cmp aam cmp sbb iret pop fsubs inc insb mov mov loopne or xlat jmp outsb mov sti mov enter fimul cmp (bad) adc aam das pop pushf fcomp or cli xor aaa andb adc jne push aam push pushl mov xchg (bad) mov fs sub mov push sub outsb and out test test call mov mov mov push push mov lret (bad) loop aas xchg loopne fcmove dec gs popf (bad) mov add mov repz push push daa mov cmp int3 aaa shl xor mov xchg fisttpll xor loopne sbb push push int jl xor and xor sbb (bad) dec inc rolb add mov mov ret push push (bad) adc fldt je push popa (bad) and sahf cmp enter cmp sbb inc adc ret push mov jne add rclb push mov insb add jbe cwtl (bad) (bad) sbb xor mov (bad) jmp adc xchg fwait outsl inc ljmp xor dec and dec pop adc push mov sbb or js cmpsb imul imul cmpsb dec ljmp dec fiaddl inc repz repnz push mov sbb push jbe jnp or jp stos add arpl sub subl sub mov test jns and lods arpl inc lods mov add sbb push pop rcr nop xlat les pushf pop stc add or fs fnstsw jge repnz and push inc xor iret addr16 and mov jecxz dec pop mov mov (bad) enter sbb jmp icebp mov repz push jl pop xchg leave add aaa hlt lcall cmp sarl push cmpl popa and (bad) cmc or push xor jns push push push inc push xlat je or (bad) pop jmp std push sahf scas mov mov (bad) shlb movsb xchg rorb outsl pop (bad) cwtl pop sbb bound mov lds pop decl and in pop sub add jg imul mov sti movsl imul pop pop es mov sub rcrl ret fild jle push iret cmp arpl jo cmpsl sti popa cmp pusha xchg mov in sbb xchg sub push call mov sti mov nop lcall add lods or xor rorl std je in sbb push icebp xchg (bad) push scas (bad) cmp jo sbb (bad) icebp pushf mov pusha movsb pop test jns add ds icebp insb arpl jg push sub nop int3 mov pop sbb aaa sahf pop cmp cmp clc jle aam ficomp sub push adc in mov pop dec dec out or lea inc xor or stc daa insl dec push outsl outsb loop rolb cmp popl jo,pt (bad) mov mov das xchg sbb addr16 fnsave xchg xor cmc fisttpll xchg push push adc push (bad) repnz into call pop call jmp jl je inc dec aas mov inc xor outsl xchg pop sub mov popl pop int sub js fadds faddl mov (bad) sti push js pop mov ja int jo scas pop and iret sbb lret aas bound dec insl int3 mov pop cli out add push add stos in mov xor mov sub aaa dec stos push or sbb pop jbe mov pop or iret ret cld lods push jmp jecxz aaa test cmpsb aaa jl sbb (bad) imul in xchg mov and mov lret jge fstl movsb xor xchg dec arpl pop push push dec or sbb (bad) jo adc shll cmc push inc mov rorl (bad) in faddl (bad) icebp dec addr16 popa push insb inc cmp outsl daa xor in imull pop dec or in repz pushf push ret xchg lods sahf ficoml cld jnp adc jle xor pop xchg data16 cmp cmp cs push pop cmp sbbb (bad) hlt fisttpll inc pop hlt cmpsl in mov call in jge inc xor imul add (bad) mov loope aaa scas stos arpl xor test or frstor notl or (bad) loope jmp int cwtl mov sub jo sub ret push dec mov vmovss push mov cmc adc mov loop int3 mov cmp cmp lea lret in or inc pop pushf in test pop dec sub mov inc out jne mov mov xor push xchg mov test nop gs addr16 js aad arpl mov cmc cmpsb or mov ljmp jno es cmpsb xchg sub outsl popf outsb add jle cmp (bad) sub lods ret in sbb int pavgw push adc fdivs pop cmc icebp pop inc dec mov sub pop (bad) in or dec or sbb int add cmpl lcall dec lds inc cmpsb inc push lret jo inc push dec out cmp or dec cltd xor xchg test inc push sbb bound aad inc idivl or imul xor cmpsl xchg lahf adc xor jmp push xchg nop push (bad) dec shrl shll inc pop push cmpsl push (bad) dec sar insl lds fcmovu scas jp cltd mov (bad) cli fs and xor shrl movsl insl data16 xor cmp test insb mov popf arpl sub nop adc fs loope mov lds pop aas imul push jnp lret ret and lock rcl js rcl jmp dec sbb mov outsl mov xchg notb insb and adc call xor out mov scas push das push pop mov mov out pop mov push clc sbb mov pusha cmp sub idivb ss scas adc sbb dec lock adc icebp push sbb mov jns xchg cmovb mov mov hlt sahf arpl insl in mov or sub sahf and xchg cmp leave inc js shrl push cmpsl push push fldt sahf mov adc rclb jg jp flds add adc mov js mov sub fstl fisubrl or fwait mov pop pusha std sbb jp pop out into cld cmp pop (bad) in icebp mov out jl sti jle sub aaa sub fsubr adc jp stos sub inc repnz push mov mov cmp pop pop adc scas lods std movsb fisttpl mov (bad) cmc shr (bad) and mov lods mov call movb imul loop call popf or std jbe outsb and pextrw mov int mov pop pop pop leave enter shll xchg xor dec cmp mov mov adc adc mov test imul mov ret jns add push pushl adc aas xor xchg cmp xor mov jecxz push inc stc cmpps xchg ss mov push sahf or inc insb cmpsl aam fxam pop inc sbbb shrl es and iret sahf ret cmp sbbl adc dec test xchg and xlat mov or xor xacquire pop imull mulps fcomps jae xor inc movsb out jae mov mov fidivr xor inc mov pop xor xor adc cli mov sbb mov clc mov pusha push fist and fs imul stos mov inc xor mov iret sub in data16 jle shlb xchg aas jbe xchg inc inc jl add cmp push jno mov ret push pop popa push jnp xchg xlat cmc jns jg ds icebp lods jle sub lret ficompl pop ja (bad) sbb mov pop imull pusha pop cmpsl divl mov push adc inc aas or and ss test jo (bad) xchg mov mov addr16 or lods adc push cmp push add mov xor jo aam in xor push sahf cld cmpsl cmp test jle pushf cs pop rolb inc jg jmp inc (bad) dec push pushf (bad) repz subl test jle into outsl push jno stos and stc not lods inc xor gs inc dec aaa inc insb cwtl and push cmpsl inc aas das ja pusha test xchg add lock pusha fwait (bad) iret xlat scas aad ds cmp lods hlt cmp test mov xor clc inc stos into jg js (bad) ljmp add cmp mov and xlat leave mov sbb loope mov mov xorl dec add scas pop lea shr (bad) sub mov or cmp adc les jg jmp pushf aas out clc (bad) repnz fxch pop enter pop jnp jmp insl pop cmpsl jmp call push jg,pn adc inc pop out ljmp cmp outsl lds and std jl cmp adc push push lret mov xor inc mov aad jb pop shrl (bad) adc fdivp mov jne mov pop sbb lods mov pop sub add imul pop push push pop std mov lahf sbb fcomip pop mov ret mov cmp pop mov lods and sbb hlt push adc dec outsb or pop sub cltd lods sbb ret xchg sub pushf nop sti adc mov es ljmp stos pop cltd mov test lock lods cltd xchg pop pop call adc clc jecxz adc int stc and push mov call clc in popa stos stc leave or mov fiadd cmp das adc test dec mov in push (bad) mov loopne (bad) pusha cltd mov in add lea mov mov adc out sbb cmpsl pop int fwait popf cld mov fs push sarb sbb decb out push dec xchg sbb mov cmp xchg jmp jno pop xchg push lret fistl ds pop int je stc xor inc xchg out insb out movsb in xchg repz jge and xor pop cmp push ja xor adcl in xchg inc cmpsl xchg test push js in iret mov rol cld out cltd adc xchg fchs jae addr16 and jle aam jbe mov and push scas fstpt adc movsb and xchg mov xchg insl mov hlt (bad) mov sbbb dec xchg cmp popa fs sbb out popa lcall lcall out sbb outsl adc imul int3 sti mov cmp loope jbe mov push xchg mov pop adc add inc (bad) and sbbb imul push adc mov pusha jnp add add adc jl pop (bad) (bad) repz jno sub cmpsl ficoml jne xor and or pop and pop sahf in je sub mov ret sub jl lcall jne xor xor enter fisttpll fwait dec movsb or pop sub ds jns push je out popf inc (bad) and arpl pop cld push xchg inc sahf repnz call sbbl and lret cmp sbb adc (bad) push add jb test punpckldq inc pop loopne push stc pop aas in fwait decb push (bad) int xor cmp arpl xor movsb enter xchg cmp dec pop nop je stos clc jnp loopne pop negl addl js jne mov sbb fldenv push push inc fild int loope xchg lods sbb js pushf cs push movsb (bad) rorl hlt push (bad) aaa insb scas (bad) jge jp mov mov movsb outsl (bad) xchg lret push sub aam pusha adc ja xor lret adcl std pusha jl cmpsb insb cld leave out dec jge cmpsb mov js outsl bound mov adc (bad) lret loopne bound xor iret dec les jae pop ficoml jo popa (bad) loope adc (bad) cmc pop gs jmp cltd xor jbe jge sub (bad) out aam sub (bad) push lods lods xchg mov sahf test lcall adc iret fnsave outsl iret lods mov fidivl sarb adc sbb add es sbb imulb xchg negb xor push xchg fisttp pop or mov inc push aas (bad) mov insl sti loope mov pop std addb sti daa aas fnstcw lret popa pop inc test ret sbb loopne fsubl pop and int3 xor dec inc push (bad) (bad) jmp mov cmpsb sub fnstenv jmp sub nop in and jae and sub mov mov fldenv (bad) and (bad) repz jnp data16 xchg jne inc and gs int inc cld (bad) add fdivl cltd jae sub in (bad) (bad) roll and repnz jo push out push cmp jbe xchg mov lea lret inc adc ret fwait add mov mov cmpsb add fs adc mov ret in xchg mov inc hlt test cmp sub je pushl and in mov (bad) push jnp sub mov sub sbb lret xor mov aaa sarl fwait es mov mov jmp mov mov jecxz mov cmc sub fisttp cmp adc fildl xor sub add mov pop xchg fs sbb mov popa test fnstsw pop mov pop fsubrs popa ret xchg xchg pusha stc push add mov jg push stos pusha pop dec sbb cmovo dec push mov iret mov arpl lds std inc xor jne xor test xchg xchg cmp cmpl (bad) mov cmpsl sub cmp jno adc push pop dec popf mov fsub dec cmp jne fdivr rcl jl cwtl add push dec scas xchg shr lahf sbbl mov push ficompl dec stos cwtl inc and jb mov adc pop push xor cmp mov jns (bad) push out aas jle repnz (bad) xor scas xor mov scas test xchg mov jbe sub inc or clc rcl sub out lds dec cld out pusha movl or adc push xor (bad) dec and fistpl stos mov dec sub jo test cmp jno ret andb adc insb inc popf push pop movsl pusha (bad) mov pop test aaa (bad) sbb or outsb mull pop ja (bad) adc or push int3 adc dec cmp das leave fs push stos js inc push fisubr and and sub pop out lea sbb jmp test jmp inc dec jno xchg into jge or cmp fidivl movsl fcos pop mov cmp shrb jae sbb shr add andl dec jp mov int (bad) dec push lds nop (bad) and push enter scas add inc cmpsb pop sbb clc rep adc ljmp jmp jmp sbb sbb xchg pop xchg imul lods mov (bad) in movsb pop mov cmp xchg dec cltd lcall lcall and jnp jnp (bad) mov aam jae (bad) mov pop (bad) mov pushf (bad) jo pop adc (bad) mov fistpll add mov push cmp cs or lea inc leave lds lods nop pop fs jne jne pop out mov xor gs sub je jg pop xor and out cmpsl sub fwait mov jg xor pop jge adc ja pusha fldcw cwtl in mov (bad) jo movsl cwtl rol jge push push push or jmp aad icebp and push xor push mov or mov xchg add fdivl dec outsb push push jle popa inc jge iret pop lods xchg cmpsl dec adcb cmp shll jo pop (bad) fs stos jae and stc push and or or rol jbe test dec dec jp fnop mov addr16 ss mov pop mov repnz sbb loop mov add mov scas stos nop (bad) jle pop shlb movsb mov push lahf mov and jp das jns add xchg mov (bad) sar rcrl sub fsts dec sub and ror lcall stos or cmpsb aas sub ds ja addb pop pushl jae aas cmc jns cmp test mov mov outsl adc push jnp test dec lock mov inc mov loopne out stc in adc xor sub dec fcoms adc sub sub imul adc and pop mov out xlat pop mov xchg cmp mov pusha jecxz (bad) adc aad fnstenv jae addr16 test pop out push mov dec pusha rorb inc cwtl add sti dec mov in or push cmp ret pop lea repnz data16 xor push jmp dec xchg or jmp (bad) cmp aad cmp mov jne pop add mov cli jbe ljmp xor mov aam inc movsl int3 jg mov mov lock ss pushf push pusha shl or fsubs pop ss int3 rcl gs out (bad) mov lret popa and fdivl pop xor cltd fimull pop dec pop inc or ret push fdivs in int mov js jg sub or fnstsw mov mov test cmp mov test jb xchg cmp fsubs mov xor jb (bad) call sbb loopne (bad) adc (bad) jmp (bad) lret stos and es arpl cmp fbld pop imul mov sti lahf inc push mov fdivl lds inc jns mov gs ds shlb aas sbb inc inc cs cmp xchg mov das pop loopne jg (bad) and pop ret inc inc into cmpsb pop push sub cmp jne sub mov rcll push out sti stc divb ds cmp ds add mov inc sub mov addr16 insb mov bound popa mov ds inc xchg pop xlat fistl fisttpll mov lods lret xchg pop cs negl repnz enter mov sub divl jns mov clc stos scas loop addl push mov aas outsb bound sub xchg lret dec jmp lahf hlt cmp popa icebp add cwtl add (bad) jnp and stc add stos iret inc sahf fdivs mov pop pop pop ret outsl test repz sti sub or and (bad) ljmp (bad) dec xchg adc (bad) cmpsl jg (bad) jg mov xorl jle movsb shll in pop ljmp test aam lea aas xor sub inc sub dec int3 es pop sbb or outsb imul xchg add mov sti dec jl jbe jg sarb loope jg inc xor lea stc cs add mov xor fsubrs xlat ret jp (bad) ret cmp pusha mov jg xchg mov (bad) sbbl repz in inc push and xor jmp lock dec movsl fnstenv xor jno or xor xor frstor mov cmpsb xor scas in and xor xor fdivrp add (bad) ds pop inc cmc adc jge push int push cmp aas rcrb jnp aad inc scas fcomp xor gs retw ss cmpsl (bad) and mov jl sbb pop gs mov popf pop outsb lret mov repnz xchg mov xchg add fidiv xchg outsb int3 sbb xchg (bad) nop lock cmp cmp pop mov repz mov fsincos insl pop mov push std xchg add mov dec mov popf ficom fbld push lahf mov fsubl mov xlat or and xchg lea mov mov pop testl std (bad) fdivrp mov mov mov (bad) mov pop mov cwtl pop jmp aad cmp in aas ja popa notb dec and repz adc sbb std push nop xlat popa inc push lds jno cli mov add movsl stos jno mov jge xchg adc sub push lods inc fwait scas mov inc out mov bound scas xor hlt cmp mov lods jbe push mov fucomip lret pop jne cmp push shl add sub lods mov (bad) xor add (bad) std out daa jle push sahf push ficom fadds mov pop cld and in adc movsl ljmp js mov (bad) iret jnp jne adc and pop popf mov jle jnp lcall das insl ret add gs fs jo (bad) incb mov xor dec push movzbl enter cmp and decb and in inc bound int3 or mov cmc (bad) xchg mov lret pop mov mov mov cmp subl (bad) leave std test in sub les in mov and push push mov xor pushf loope and jg aad add data16 pop and scas push (bad) fsubs mov jecxz inc pop daa addr16 push jns dec loope loop and loop js addb cmp mov push push (bad) jns dec jmp add or lret push dec fsubrl cmp rcl test mov (bad) in pop sub gs pop jp divb enter pop xchg hlt out xchg lea ds jg push sbb pop push add push lods lock and fmull push pop push rolb adc cli mov (bad) daa rcr dec mov and shll std ror cmp jnp cmp push dec js adc sub daa inc ja jbe pop adc mov mov gs scas cli cli and ror in ljmp inc std lods in dec mov test in fwait dec int3 mov inc xor (bad) mov cs pop mov ja fiadd divb sti lock sbb mov pop xor cltd rcrl cmp into inc and out jno pushf ja fnstenv push pop out push sbb ret mov shr sub xor lret cmpsb int3 xchg push mov mov iret jbe addr16 outsl (bad) lock divl in call fsubrs loopne xchg inc cmpb mov jp jmp adc (bad) cmp mov mov mov or pop jae sti dec or sti add stos cmpl fstpt xchg cwtl aad sub mov lods imul cs add mov xchg pop in push in xor pop fidivl jb cmpsl leave mov xchg int ret jg jno les out and and cwtl rorb sbb repnz jbe cmp inc test addl mov pop dec in je jecxz add inc or or mov cmp adc jne fcomps push jnp jge jmp out dec inc xlat or cltd mov push sub cmp and popa in mov cmp sub inc mov adc xor inc imul adc push xchg dec pushf push mov push push and push insl cmp add inc adc stc loope sahf xchg sbb rep xor pop xchg inc int test push (bad) (bad) iret out inc idivl mov pop inc cmp les ficompl mov fs es add dec lret ret pop pop leave out adc mov sub scas inc cmp pop idivb xor xor enter sahf scas (bad) std je repz xchg shl push pushf test adc sub cmp ljmp push into mov sbb movsl sbb pop or arpl adc out icebp pop fldt std out jecxz fimul aaa jb js mov sub pop in bound lds xchg pop and mov iret jmp (bad) notl inc push jg sti pop cwtl std xor aas jo int xchg inc rorl test (bad) repnz andl pop or stc cwtl mov or mov (bad) dec out test and inc mov xchg adc xor push fmull lcall sbb inc xchg inc mov outsb push hlt mov movups pushf or movsb cmp adc enter push and pop movl in jle xor call pop push pusha ja xchg sti lahf jno test lods ss dec cmpsl loop sbb push push xchg jo imul or xchg push mov mov inc fnstcw adc imul pop xor mov into dec add sub push into xor (bad) iret cmp xchg inc into sbb push cmpsl sbb pop xor mov ficom lea jns stc roll sbb sbb icebp enter das sbb (bad) (bad) hlt popa mov repz xchg xchg xor ja sti stc movsl das sbb push inc out lcall inc in sti hlt pop movsl xchg jp aas sbb dec push les push out add add mov fcomip xor pop jge jne sti lock (bad) cmp fs stos std nop (bad) fisubrl jbe xchg pop adcl idivb sub lcall ds test sbb jns mov in lret mov pushf loopne push mov xor dec push lods xor mov push cmp sub pushf jmp mov or inc lds sbb sti push (bad) call out lods pop test sti dec hlt inc xorb lahf nop out xchg sahf sub std dec dec inc cwtl ss pop and inc jbe stos lea imul aad je cli enter and sbb jne popa mov push (bad) rolb pop pop pop lds dec xchg xchg or mov adc mov mov pop mov ret jmp iret ljmp or cmp adc cmp into sbb cmp std or sub into sbb les push dec push loopne sbbl cmovnp dec inc ja sahf dec loop stos push jmp outsl adc (bad) mov mov xchg inc push jo xchg mov (bad) jnp inc inc push xchg lahf (bad) in jo rorl aam jae sarl mov (bad) int jno repnz dec cmc mov nop sbb arpl daa in pop pop loope fmulp int mov out (bad) out imul add sbb adc mov add xchg (bad) cmp mov or in data16 popf push cmpsb ljmp inc enter push iretw adc in sbb mov mov cmp mov stos jno mov movsb mov xchg lea bound jl (bad) (bad) jne js dec repnz (bad) push jo or dec and mov or xor lock push ja jae in cmpsb fwait loop roll mov icebp mov in out and enter loop std push in sbb daa fisubrl cwtl xorl decl sbb adc lods or clc lahf adc das cld jle mov sub sub and and dec int inc stos inc faddl in pusha jae in mov (bad) xlat test mov (bad) int3 add dec jge mov inc inc mov sbbl jl enter sub jno stos xor pop call pop sbb mov mov pop test sahf sbb and push inc xchg mov cmp adc out dec sbb inc xchg lret xchg pop mov arpl push fs leave insl mov adc inc pop in scas push mov mov lods cltd lods das or fnclex mov jb lods mov sbb pop cmp and mov mov mov ret xchg (bad) (bad) pop pop cmpsl dec adc pop mov cli and incb push pop pop rcrl push jne scas cwtl into test ret cmpsb roll add mov dec push adc sub push jmp pop jnp jl out and pop add pop pop mov sub xchg insb push mull cwtl stc jnp pop inc lds into lea out mov cmp push push xchg jae out (bad) lcall call ljmp cwtl loope jecxz mov inc lea lea test orl lret mov mov negb repz lds xchg mov jmp sub rorl pop outsl mov xchg push mov loop inc jb loope movsb inc in insl sub pusha jo movsb xor nop (bad) cmp mov cmp cli lcall xor sbb sarb cmp and or sbb pop mov into inc daa pop mov add int3 call xchg das cmc adc movsb jne pushf dec push pop ret int je fidivrl xchg fidiv mov xlat push in (bad) (bad) adc data16 mov inc aas jge pop cmp dec into shl xor ss (bad) sbb dec gs xchg lret push call cmpsl mov jns ja mov inc sahf mov data16 ss dec test or cmp scas (bad) repz fbstp mov nop subl ja fadd (bad) dec inc shrb mov in or adc les daa adc addr16 or stc dec lcall hlt aam push call dec shl push into and dec add call mov pop in or and (bad) jo cmpsl inc sahf cmp adc mov imul iret push aaa lods push xor movsl out push add push movsl stc mov jbe mov adc push cld icebp scas movsb xor cmpsl stos in cmp rclb xor fcomps ret add inc rcrl ja push cmp imul mov pusha imul in inc in or push orl ret idivl mov inc ret dec cld xchg push add sub loop cs fwait sbb in mov lock sub sbb stos ret xchg insb xchg loop cmp ljmp add sbb xor pop add mov xor ja pop imul dec xor xchg pop push (bad) imul jne lock pop (bad) jmp sarb fwait loop lret pop mov mov into sub mov das mov mov jge mov mov addl lret sub sti mov jb pop in sub jle iret xchg movsb xchg dec fldenv dec and sbb (bad) fs aad mov aad xchg push fisubl into dec ss mov test xor out fldln2 inc push mov mov ffree sti orl xor loope push dec push lret dec sub rcll test fadd je jae lahf ret xor stos xchg inc adc std test mov lahf ja stos sbb add test xchg das lret dec gs sub xchg shrb inc sbb push stos pop cltd mov in push iret mov js (bad) mov sbbl xor fsts pop xlat xor outsl movsb adc jmp mov loop test mov adc aaa xchg xchg xor outsb shll loopne sbb imul repnz lock pop push adc lea adc into insl scas and pop mov or ja fistl sbb dec mov rolb insb and sahf out push in sub les lods sub repnz dec (bad) out xlat lods outsl cmc not daa push js adc enter arpl or testl add add pop or hlt leave push mov xor or pop pop or ret mov sub mov dec and mov dec inc in mov sub insl mov nop push pusha dec bound pop lret jge (bad) jb test lret loope jl jns push icebp cmc mov cltd nop (bad) iret shlb mov out inc orl mov mov mov mov cmp lock xor add xchg test pop pusha adc xchg outsl lds adc inc add mov dec push mov and cld add adc (bad) and sbb mov sbb sbb je ja jp lods out or arpl mov aam jg test divl movsb mov stos xchg js lea clc in mov dec cmp jg pop ja xor loopne pusha adc mov out xor lret mov push out in jge jge movsl jbe leave scas push sbb fsubrs jnp xchg push inc pop xlat jge mov inc sbb inc jnp mov pop lcall or (bad) jne inc outsl inc cmc daa jne std dec stos (bad) jns mov adc jp mov and (bad) adc lods pop jno push mov dec jl movsb outsl and pop mov out repnz dec call repz xchg sbb cmp pop fdivr jnp mov repnz nop scas xchg xchg daa repz xchg jns jg enter mov adc jns lods mov and ret cltd jne or xor (bad) cli and aam sbb dec add (bad) add mov je xchg sbb aaa gs jg sbb adc fs or cld adc dec sbb int jbe sub bnd inc lcall inc cltd dec roll and adc jmp cmp fwait xchg xchg jg cmp inc and mov jg mov lret cmp xorl jle (bad) icebp sti cmp std pop jle dec xlat in pop xor (bad) jmp adc into (bad) fwait pop jg and mov push je cmpsl sub mov jb fwait pop cmc int3 pop sbb (bad) out lods xor dec sarb into jmp and enter cmp rol dec jae pop les ljmp cmp in popf int fcoml mov call lret lock jbe out sub insl mov outsl sub je xor idivb ds ljmp push and out mov push jle adc jl xor inc leave push pop aas xchg cltd add test cmp movsb pop mov dec dec loopne cmp lahf stos adc (bad) sub leave outsb mov cmp xor test repnz fwait mov fsubs pop push test pop dec rorl sbb inc inc adc inc stos adcl mov inc xor cmp enter jno test aam je lea cmp jg out cmc mov imul mov add sarl enter mov xor push out mov mov cmp or arpl xor inc cmpsb xor cmp or sbb sub mov arpl in lods cmp jne jle xor sub imul or or jmp fcom or sahf pushf cmp dec cmp xor in out cli fstl mov fsubl fistpll push daa mov imul sbb jns pop int3 adc add and roll imul fbstp jns aam mov out mov push pop add (bad) (bad) mov je daa adc test cmp cwtl fildl push pop push add mov mov cmp jmp push push iret xchg das (bad) xchg sub adc outsl push dec sbb xchg jp stos mov or aaa add loopne int3 mov inc or dec dec xor loop inc pop cli andb lea push push enter sbb ss or inc mov out pop std mov mov outsb ds adc push xor push xor mov push and fisttpl inc in sbb and push scas std xchg pop (bad) xlat sub les enter jle movsl mov lds dec cmpsb sbb aas or ja or xchg (bad) dec ds xlat out and int push cmp outsl xor inc adc loop scas xor adc test arpl ljmp jb std xor xor xchg add mov add and inc mov mov mov movsb xchg das push je ljmp mov xchg xchg dec pop xchg dec xchg ja xorl jbe mov mov (bad) mov sub sarl movb in xchg fwait jecxz lds call icebp mov repz lcall cmpsl cltd inc shl dec movsl lods adc fwait movzwl mov add in pop fnstenv addb (bad) hlt sahf stos add lods andb mov sub xor mov stos cmpsb ss shrl jae cmpsl fwait inc fdivl fstps sbb shrl sbbl pop outsl lret les stos jp inc mov cs or int bound xor popa push (bad) insb in sbb clc xor jbe lcall xchg mov or jno pop icebp add lret mov out bound mov js lcall int3 lret (bad) pop aad sbb mov sti aad test pop inc and out fisttpl inc out sub dec addr16 int push cmpl push mov inc sub dec rcll cld popf and push mov push mov push je,pt fdivl xchg test pop mov xchg iret jne adc mov in sbb scas fcomi pop inc leave int3 jns icebp adc dec popa roll cmp aad fcoms out xchg ljmp rolb insb adc mov mov sub mov ds mov leave arpl fildl ja jnp test pop int3 std pop mov cli inc (bad) ss jl pushf dec add pop mov mov ret or out jns lret mov fwait xor js sbb les lea dec pop cmp (bad) popa (bad) icebp in in mov (bad) jns lds stos sub ljmp add outsb or std pusha adc xor les or xchg lcall fwait jnp and imul sahf pusha sub js (bad) cmp lcall inc stos mul jnp aaa fnop add or jp mov stos enter test xor out pusha ret dec or fldt adc clc (bad) pop or in je enter cmp pop in cmp or mov je jle mov cmc and cmp pop xchg scas cmp inc jg fildll std in addr16 sub (bad) icebp (bad) xchg cli int3 sbb repz push mov dec movsb lock icebp and pop xchg mov or inc push iret pushl outsb sub pop xchg xchg shrb (bad) mov cltd aaa repz sahf inc mov inc decb lock pop (bad) in jge shr jle addr16 scas jmp int3 jnp js cmpsl jp mov dec pop sub enter adc or int3 ffree and mov pop xchg stos subl adc mov es xor dec out mov add in fstpl add (bad) test ret xchg clc adc and or ljmp int3 clc mov jbe (bad) leave mov cmc (bad) jecxz out or aaa mov movsl or cmpsb arpl int inc or inc xchg mov daa rcll inc icebp or xorb inc push rol fucomip or repnz mov pop jbe mov push dec mov jae jmp js stos imul ljmp jmp sahf iret sbbl or into mov movsl add test int3 push pop movsb inc or cltd xor cmp popa leave mov dec rclb ds cmp adc mov mov xlat loope jne dec ret mov (bad) mov aaa adc xor mov and out pop jle push notl mov lds (bad) loope sbb test fcoml push fs aad gs cmpl aam and je pop (bad) in call lcall in std or (bad) mov enter add mov jne,pt inc in xor xor sarl jecxz inc popf and imul adc jns ja lock xchg in fistp movl dec xor mulb (bad) push pop push daa shrb lret ret aaa xchg mov cmp aad xchg xlat cmp jecxz cmp stos sub into add test push and leave pop flds push mov imul rcll loop rolb dec xor add iret xchg mov out lea inc outsb jnp mov fs out repnz fisubrl adc lods dec outsl inc in aaa pop inc dec (bad) xchg mov in mov out in push pop or cmc (bad) mov inc (bad) jmp mov pop add (bad) xchg lods add xchg sti cmp mov push sti xchg push stos stos dec pop push popf push (bad) scas xchg cmp jle pop in (bad) jle xor and movsb in xor or cld scas cmp mov adc adc cld pop dec xor in jbe gs xor rcrb xor xchg sahf vpmaxub outsb sbb movsb fisubrl dec mov lods lods dec xchg into hlt mov jmp pop lahf out adc sub loopne xchg inc mov cmovb jb,pt jecxz xchg mov inc aad rolb sub ljmp in or sbb xor and ret push or andb mov scas test mov ss pop (bad) out lods outsb jl fnsave jge ret cmpsl lcall mov xor shr pop push sub inc nop mov adc sub pop cltd or push xor outsl add mov rcrl cmpl scas aam ror cmpsb sub and sub iret inc mov outsb xchg bound pusha cmp iret js into xchg ds or outsl add sbb sbb xor nop push jl xchg adc dec cmp repz jae lea sbb insl in xchg push fsin mov std mov lea fiadd ficomp mov sbb lahf ret fld pushl xchg pop xchg fidivrl or addr16 xchg mov adc je das push sahf mov jns xor bound aam ljmp and sbb repnz cmpsb das or or xor mov or sub sbb sbb mov fisub xchg xchg xor adc push vmovdqu enter int3 sub sbb lods fstpl and jmp in into mov mov pop dec pop das pop push (bad) dec cltd mov incb rcl and in addr16 mov mov push lret ror and mov dec daa jne daa push imul aam xchg lods lcall mov ficom rolb nop sbb push add or sti je faddl inc cmp lret inc sti inc push loop int3 xchg lds ret push xchg rclb cmp dec out push jmp dec mov in xchg repnz sbb std loope ja push mov jmp jne pop in roll ret outsb and mov mov ficompl (bad) lds shll xchg xchg lahf jno addr16 fist aad mov insb fildll mov and and inc movsl add push imul sub stc jecxz (bad) cmp xchg arpl or fwait sbb xor insl fdivs xchg popf fld xchg sbb or lret cmp leave inc pop outsb and jmp (bad) out xchg sbb dec push or in mov sbb pop fidivrl adc and ss aad je in stc pop pusha xor xorl in stos sahf sbbl sub cld push cmpsl imul mov adc jnp mov sbb mov jb loop out sarl add inc push cmp sbb dec aad mov xchg pusha jecxz sub out inc dec xor mov js leave cmc (bad) mov sbb lahf test repnz cmp push push dec pop mov in lods mov and push pop movsb (bad) adc dec repz out push sub pop inc sbb orl dec movsb jmp mov mov adc jg mov shrl mov xchg (bad) cli dec in jmp movsl fs push mov mov out jns ds pushf out (bad) aam push mov mov ficoml shll dec out fsubl or dec pop mov in xor sub ret fwait aaa je mov xor clc push cmp ja sti fs push fidiv xor jg lret idivl mov xchg jl lods (bad) xchg jmp mov enter mov pushl mov lcall orb lret (bad) sub mov cmp popf cmp jno inc in push mov mov adc fld inc (bad) sbb sub jb sub lahf cmp cmc in cli movsl push cmp lods sub pop and sub add aas pushf js (bad) in push cmp fstpl cmp push cwtl xor pop lahf xor test xchg (bad) enter push psubusb mov sub ljmp daa jne inc aas adc push xor mov insb je repnz push sahf cwtl fldcw mov mov lods pop fistpll mov arpl jne inc ja mov mov movsl insl cld cmp mov ss lds int3 imul loop mov call loop xchg or (bad) sub repz ja sbb xor mov mov outsl inc int sbb and adc and or (bad) sbb pop imul push out or idivl leave or pushf cmp cmp (bad) lret fwait pop sub sti or aaa cwtl adc (bad) mov loope hlt xor scas data16 data16 test cwtl jl lret cmp pop cli notb mov sub out sti jmp mov in push dec mulb mov lret loopne mov sub (bad) lret jmp cltd add mov sub js adc mov sarb repnz out clc mov mov pop sub xor stos pop mov push je repnz add jmp in and jno or sub ja cs sbb lahf jne xor dec shrl test sub movsl call jb mov xchg ret hlt (bad) mov test fldcw aas pop sub loopne call cmp repnz inc dec cld xchg in pop stc fwait xchg xlat xchg fs sub minps lds incl cmp popa sbb jg addr16 loop dec push popf jp js (bad) cmp xor lea bound sub int movsb mov dec mov sub xchg leave xor scas shl pop mov push clc test insl xchg out push pushl mov stc xchg dec jae mov ja imul xchg jge jge cmp loopne mov pusha mov adc push mov inc fnstcw push mov inc mov cmp (bad) jecxz xchg mov aam lahf decb scas iret popw cmp ja repnz cli mov mov je,pt pop sub xor lret mov dec rclb mov or ret xchg dec imul push jp in pop jecxz inc lock addr16 mov xor lret in xchg insl aad adc mov mov pop and int3 dec mov out sub cmpsb fldcw push add jg insb not xor dec cmp pop mov cmp mov sub or xchg or ss push imul test (bad) lods fwait add (bad) xor mov jmp stc jo std mov imul inc adc push pop push dec jbe rcrb mov sub lea pop mov outsl jns cmpsb out lahf stc jnp shrb add inc scas movb xchg es decb roll fs xchg inc or add lcall js add sbb test or std cmp jo cmp mov jae icebp insl scas add bound xor and movsl pushl or rcl xorl jmp mov aad cmc lds inc cmp cmpsb mov push in lret jecxz insb movsb in iret mov scas pop les sbb sbb push pop sbb repz in push enter xchg dec add xor sbb pop mov mov cs mov out cli adc lret pop xchg inc jl jecxz aad dec sahf bound test add push or or mov sarl mov sarb sub lret jmp pushf dec dec lods in push hlt ret pop cmp push sbb mov jns popa loopne les add lea and xor pop inc aam sti mov movsb cmp cmp pop imul or cmp loope fidivrl and (bad) cmpsb xchg lods xor cld xchg clc jb sahf pop stos (bad) sbb push repnz xor ljmp ss inc je or loopne dec inc je adc xor in mov push pop fisttp (bad) cli mulb pusha add push jne mov mulb std adc out (bad) out jo and mov mov add faddl out (bad) ss jb arpl ror pop jecxz nop enter loope sbb lahf mov mov cmp cs aad sub cltd repnz pop imul mov mov lret add xor and mov sub lret mull jnp fmul mov (bad) mov (bad) jle cmpsl pop psrlw int3 sbb push mov stos std out jbe jg popa mov andb fidivl test xor divb jmp leave or test (bad) mov pop rcll adc sub sbb nop push add xlat push xor dec inc sbb jns mov loop mov jp jb and add call fildll or test hlt bound in repz aam push bound fadds insb nop in lret jnp pop dec (bad) int cmp and pop mov add rcr jb mov fldt cmc sysret dec fnstsw jnp mov push or and cmp pop xchg cmpsl mov pop push pop pop daa mov inc push icebp cwtl and sbb gs sbb lds mov imul mov mov mov (bad) mov add sbb std iret fistp xchg aad mov sbb sub and and (bad) call movsl inc (bad) call test (bad) mov scas xorl jbe lods inc sbb (bad) idivl pop (bad) stc sahf pusha fisub fidiv adc fwait push and pop push (bad) add cs sub push jecxz or ds out push adc or or xchg (bad) jo mov loopne dec jno pop lcall dec adc fwait ja mov js cmpsb stos mov inc cmp cmp sar iret mov stos insl daa pop repz fstpt xchg cmp mov pop insb outsb and dec stos sub jle mov xchg lea jp (bad) pusha lods add jae bound xchg jp insb icebp popa cmpsl iret xchg cmp stc add jecxz aas mov xchg or cmpsb es in mov stos ljmp mov push popa loop add fild andl push or xor test cmp outsb cmp je mov sbb imul fldt or loopne xchg xlat stc arpl dec sbb nop pusha push fnstsw movsb ret xchg loope pop mov mov and ret insl (bad) push (bad) lcall out mov or loope,pn jnp sub (bad) jae jnp fnop mov leave dec add lods shlb xor xchg les out jnp jmp cmpsl sub (bad) fisub outsl mov int lahf lods inc addr16 popf ljmp or jecxz mov or jle pop addr16 (bad) icebp mov in in sbb std mov shlb mov cmpsb cs and cmc fnstsw lea mov sub push xchg pusha (bad) push aam nop push ret js adc jns and sbb cwtl mov aaa pop dec mov push xchg jge mov cmpsb mov dec sub xchg ja aas xchg push xchg mov fwait or fimul rcll push sbb mov mov adc cmp inc adc or (bad) lea pop lea inc (bad) push cmp mov jbe mov rcl rorl lea aad push ret mov inc or mov int mov fadd or add imul negl ds in lds and adc lret mov stc addr16 addr16 (bad) ljmp outsb scas jmp mov lcall pop into arpl lret clc mov push push ds out call cmpsb cmp js je mov cmc mov sub mov loope xlat mov dec imul mov dec (bad) enter sbb xchg jne xchg mov mov sub hlt scas and push aam pop adc test (bad) cmc mov std stos iret stos jecxz in inc shrl mov (bad) stos fisttp add pop jecxz mov bound sbb ljmpw dec in xchg sbb sub mov fistl outsb testl adc sub imul and or aad inc xchg sahf stos lea sub xchg sub fwait push scas es and pop out aad push lods test ljmp push sbb push jnp push lret or lcall mov sahf fstl mov loope int3 or or (bad) sbb cmp mov arpl mov mov sar imul jne sarl inc push lds sarb pop mov (bad) pop mov sub nop mov mov push mov push das pop (bad) imul and push dec int inc jecxz sub data16 pop scas jne out ret cmp lahf inc sbb xor cmp je push daa cmpsb pop cmp cld xchg mov xlat pop mov shr popf insl lods call jns gs sbb cmp scas fsubr stos dec sub lcall inc lods arpl cmp and inc xor lret js adc push sbb inc leave gs test sahf adc jmp mov imull pushf dec scas aas icebp inc pop mov mov dec lds lahf pop mov xor loope jmp mov loop inc test mov cmc pop out xchg movsb sbb pop or out mov inc push and xchg call sbb sbb out add inc mov xchg push test outsb arpl dec jmp add lret leave inc and stc ljmp in shrb decl xor jle xchg ljmp pop and fbstp ds popf repnz sbb inc xchg mov ret nop push ds mov icebp mov test mov mov adc mov jo pusha leave dec jle cmpsl insb (bad) mov xchg gs dec pop ret in jnp or movsl xchg pop pushf jg ss lcall inc cmp adc xor add int3 push inc dec jae stos loop dec in or lea and movsl fidivr and mov addr16 and mov enter neg nop repnz push mov int dec push shll dec xchg leave lea push and dec cmp test dec neg xchg mov (bad) in jns pmullw movsl aaa cwtl pushf and adc pop or xchg mov aas int dec call jmp mov mov xor repz adc aas fnop dec addr16 int3 mov loope mov jne es jo fcompl into decb in ss icebp sub sub arpl inc arpl jns dec in imulb popa jbe and mov sub inc cmc pushf and xor in imul cmp lret jnp loopne sti pop cld out outsl into pop lea ss pop ret daa pop popf push shl (bad) adc cld orb mov mov dec mov mov (bad) jnp cmp pop in xchg pop (bad) cmp neg adc aam xchg adc add sti dec scas loopne dec xor lcall stc fldt push (bad) pop cmp lret jecxz jge cmp and xor mov sbbl and xchg test lock adc lock mov inc mov jne scas xchg mov in and push push push aam or and mov arpl ret or les ss call and cmp push jbe sub out xchg call dec adc fs jnp mov pop push int3 sbb scas arpl (bad) jle xchg add sbbb pop dec insb adc repz fstpl loope sbb jl aas fldenv ljmp inc sbb sbb inc mov fisttpll lods les out sbb jecxz push rcrb scas adc stc or mov ja cmp or adcl rcll xchg faddl aas add add sbb jbe or mov mov es dec cmp or (bad) dec pop mov std sub int3 scas test insb or or xor imul inc mov mov les adc cltd push into loop pop mov (bad) std aad cmc out scas pop push mov mov cmpsb push push mov sub dec loope fistp rclb mov add fadds les outsb and sahf inc fxch ret sub dec mov daa fucomip adc popa fsubl jns mov xchg mov and or xchg pop or push repz clc jmp add xchg mov adc notb adc test sbb movsb hlt aam fistpl in xchg pop jg ljmp les test test into adc dec mov adc mov arpl ret mov pop inc jecxz jmp repnz popf cld mov aad sub push xor in and or ret push int mov mov sub loopne rcll mov push mov adc movsl xchg bound push pop rcl test bound jge lcall fwait arpl mov mov jbe mov adc mov (bad) or clc adc into fdivs or test mov dec std stos push aaa push outsl push and scas in popf xchg jp cmp into push sbb icebp pushf (bad) pop mov movsl inc (bad) jne mov out cwtl test dec mov push sub jb mov xchg push jp xor aad sbb pop jle inc insl cmpsl mov addr16 lods adc pop js mov xor or lea mov xor add cs test cmp (bad) lret hlt add cmpsb pop repz pop loop sub mov mov addr16 sub jle pop xor shrl pusha sbb les popf aaa flds je int3 shrb push mov xor pop ss scas xlat sbb and cli add jo xchg jne popa adc dec sbb out jne ljmp dec add mov add ja inc aad call mov gs pop (bad) push (bad) sub call ljmp mov fnstcw mov es inc cli test push cltd cmp xchg xchg jns pusha mov sbb jne mov mov je mov mov imul mov lds jl imul adc lret xlat outsb pop sbb mov mov mov rcrl or adc push and movsl cli mov inc cmp clc loope roll int loopne mov jb mov adc (bad) mov stos push inc add pushf pop out jne and cmpsb adc inc dec sbb add pop aad push sub mov sub push cmp xor sti jne mov js lret test xor cli popa push inc sbb sar testl xchg cwtl test xor xor loope mov insb jmp insl decl cmpl js ss xlat iret stc cmp mov pusha (bad) out repz out inc (bad) pop fcomi push mov arpl out fcoms bound js and test (bad) scas and mov push cmpb jl pop cmp sub negb lock push mov fnstcw mov pop idivl out dec push jle cmpl ror in imul or mov pop cmp adc push xor sqrtps out mov and and push push cmp pop pushf add jl mov in xchg out (bad) mov xor mov sub ds xchg lods push add sub roll and scas mov mov in jle popf dec cwtl scas mov gs xor gs mov pop mov mov xor mov (bad) (bad) add cs pop dec imul sub mov mov xchg inc dec (bad) fdivs mov jne xor xor roll imul mov mov sbb (bad) sbb jmp and mov pop cmp je sub stos push lea push icebp sub sarb sbb jmp cwtl (bad) xchg rcr sbb pop xchg call shl (bad) sub (bad) push shlb (bad) scas cmp fistpll outsl pop (bad) divb or lahf fldl inc rcrb pop mov cmp insl sbb mov xchg leave insb sub nop add xchg cwtl pop mov pop jl jo mov xchg or mov and (bad) in cwtl loop jb mov xor fwait loop xor or adc out sbb aas test aas loopne call ljmpw loopne in rclb inc mov jo push lds loope xchg (bad) lret and xchg lods mov sbb pop mov push movsl scas jg pop aad repnz adc add ss fcmovnbe ja mov loop pop jmp jp,pt adc mov pop gs pop out loope push adc and cli shll mov idiv xor fsubrs rorb adc pop sub jecxz cmpsl into mov clc sahf loopne xor leave pop lret fs nop add dec add adcb mov mov (bad) adc in nop (bad) mov lret fsubrs stc sbb stos jmp inc (bad) pop cmpsl scas add xor out data16 outsb xchg inc lcall push cli push insb (bad) xor rclb inc jbe out pop push cmp loope sub fs repz mov ficomp add or addl (bad) xor cmp mov (bad) fsubr xor inc sahf aas test iret or add pushl add lea stc sub movsl movsl sti in mov cmp sbb push mov pcmpeqw and jg jbe sub sbb subl sbb dec in popa fmulp mov jo inc pop mov jecxz cmp (bad) lods je,pn pop xor pop out pop lret scas dec inc ds cmp arpl aas mov cs add push mov sub (bad) dec hlt xor mov xchg mov adc mov enter pop dec jecxz ret jnp pop pop pop mov lods jnp adc nop mov out mov sub pop push pop enter sub xor xor and lock lea or jno (bad) lahf jae dec sbb (bad) push add xchg jp jne mov sub push in add (bad) add pop lock sbb xor sbb dec jnp xchg xor call adc mov xor push leave and enter lods jg mov ss jbe shrw adc mov test fnstcw stc mov sub push jae cmp adc (bad) dec orb jg sub mov add movsb inc pop xchg pushf out mov xchg sub mov mov ret xchg test (bad) sarb pushf xor dec (bad) lcall pop mov enter mov imul les mov lret test sub and jecxz loop ret add sbb iret and mov xor fcoms dec pop aas and daa ja sti sahf mov sti mov or inc sub push popa test loope lods das mov in or sub dec cmpsl roll pop int3 mov pop push or sbb daa ds sub js fidivrl stos popf fwait xchg mov cmp dec (bad) mov sbb rcl add imul daa mov loope dec xor outsb std jp es cwtl dec adc rcrl in fsubrs aaa ficomp pop cmpsb and shrl cmp jb adc pop lahf mov outsb sub mov out aas or std fiadd test pushf fdivp pop mov or jmp outsb push repnz movsl mov (bad) in adc dec ja daa jle (bad) jbe dec bnd ljmp popa add add mov aaa sti add clc cmc lret insl shlb imul int jecxz in rolb xor push xlat ljmp imul daa dec mov ds rcrb fwait inc mov and or pop or sarb cmp cld fwait jno inc jl dec mov in out cltd subl std pop mov push loope adc subl jge cwtl inc pop fwait add xor cmp adc (bad) fisub shrl push jae sbb ret cmp pusha cmc adc lahf xchg inc ret xlat mov out fistpll int pop mov add mov int inc ljmp cmp adc pop popf fisubrl popl jle push jae rclb (bad) scas insb outsb pop cmp fmulp mov (bad) jno or nop or mov fmul fsubrp mov sti sub test and or mov mov ja fcmovnbe loope push add mov (bad) mov cmp dec jb fwait scas (bad) in cmc jno inc popf addr16 xor mov decl jmp repz mov inc pop mov in dec push push xlat out sarb or pop bound add mov push cli out sbbl and pop mov inc inc sub movsb mov test mov jae dec mov shrl in sbb or (bad) mov scas jle jge push scas inc mov inc aaa mov mov out insb arpl push stc iret mov lds mov jge fiadd or inc lds inc mov and mov mov je sbb lods push adc jno add clc jno sub repz xchg cli pusha sub dec cmp test out cmp aam scas and xor add xchg inc js jne daa in enter mov mov mov lock mov xor cmp adc in out xchg mov (bad) jecxz xor pop fcom pusha ret lds mov dec sub adc push pusha pop repnz orl lcall outsb or mov jg sbb jns cmp mov pop mov mov xchg lret es xchg (bad) scas push dec dec out push cmp jg push lods sahf cmp iret xor fnstsw lret ljmp icebp cmc add pop test cmp cmp sti rorb fnsave imul add mov unpckhps decl xchg jmp fcmovu mov js xor push mov sbb insb rcll psubw xchg push js sbb mov xlat push jge mov xchg sub jo into jg xor ret aam push cmp mov xchg xor je mov addr16 popa jae outsl cmp jmp dec adc mov in fwait xor mov je xlat lock add adc jg loop rcl cmp push jmp enter xor push shrl gs push xchg lahf (bad) divl jle cmp sbb (bad) mov lods cwtl sub cmp xchg adc rorb push cmp stc pop jae or gs jb cmp push ds lods ret or cmp test std mov xchg repz mov sub lds sub xchg push and cmp fisttp subl mov int in in mov dec arpl inc dec cmp sbb push das sub jecxz mov and ret scas and ret jns cmpsb (bad) aas jb shll rcr xchg push and imul hlt adc cmp mov xchg mov fstpl mov fsts fsubrp jmp test hlt sti jge and inc pop xchg lret (bad) cs xchg mov lds or jne cs adc sbb mov or addr16 inc mov insb aam add pusha inc stos xchg shlw cld outsb push push pop xchg (bad) daa lret shll divb and stos mov jge sti sbb repnz iret push ljmp cmc lock dec leave mov into sub add int jb lret or rcrb enter aas insb sbb hlt push push loopne jmp and mov mov pop (bad) inc mov loop hlt fld xor mov cmp stc cmp xor jnp xchg mov xlat int shrl cmp push cli mov mov cmpb pushl dec pop ret rclb mov int add and or fild push js out mov and xor ret adc jmp adc lock es add inc in mov in add notl movsb outsb (bad) testb or dec in enter outsb mov notl enter xchg xchg mov cmp jle testl mov fsubl lds adc xchg xchg dec enter into mov scas inc mov add cmp pop jge xchg mov (bad) jnp aas ljmp dec test xchg xchg cmc dec cmp dec arpl mov fiaddl in mov lds fdivr mov jmp mov sub into das inc dec xor mov xor and pusha and frndint push xor jl mov mov aas cmp pop stos outsb test xchg gs imul pop inc mov les (bad) pusha mov ret shlb inc push lds aad dec mov test mov stos popa aad xchg loope cli out mov xchg inc add pop pop rcrb pop and popa out add jnp cltd mov jae or lds inc or pop in fisubr dec outsb pop fild jns int3 jb jnp nop jns mov mov and mov inc xchg (bad) ret add mov jo popa push out dec sbb xor push mov xchg sbbb xlat fwait les add daa sbbb jnp mov xor movl jb (bad) outsl pop test roll popf xor mov jno call stc rorb daa ret push fs pop mov sub test imul ffreep adc repnz in lock jg push push (bad) jmp subb cmp (bad) pop mov push subb jb add and ds jb (bad) mov mov push xlat or sub mov mov jb push (bad) xor sub dec xchg lds test mov mov hlt add push mov loop cli xchg cmp and sahf xchg pop or push movsb adc push lock push push pop insb dec cmp fisttpl (bad) mov not mov or (bad) data16 jmp fmull sbb mov mov xchg fwait adc (bad) clc cli push and lcall cmc jne div fstl and (bad) mov pop jbe inc jecxz (bad) insl cmp or repnz sbb jg aaa data16 or add in out test fstl xchg sbb push (bad) rolb inc push add test stos dec dec xchg nop out add sub andb cmpsl push je push inc movsl mov andb cmpsl fxch popa add add cmp vandnpd gs decb movsb or xchg inc dec pop enter fwait inc (bad) clc aam nop pop (bad) out push in or outsb rclb lret push dec dec add (bad) fwait loope movhps (bad) cmp (bad) mov je fisttpl mov adc push cli cmp cli lcall lock insb xor xchg and xchg mov and sub mov icebp mov ljmp pop push cmp inc jns insb cmp fadd push jecxz adc repnz repnz cmp cli add pushf cld cmp cld lock cmp stos test pusha lcall adc dec (bad) jb jno pushf (bad) or mov ret inc rorl fistp jae or rolb xchg jge or iret mov pop andl dec lahf pop pop nop rol adc fildll (bad) stc (bad) jno stos cmpsb dec push out js pop out xorl push mov jo repz insl mov cmpsl repnz (bad) in frstor sbb das mov adc jnp sbb mov ficom cmp loop loopne push cmpsl mov mov pop outsb cmc push mov push adc dec lea inc and add scas jns push fistpl lods dec add sbb xor push mov jae shrl bound test repnz mov pop movsl movsl mov jbe out jbe pop ss mov test addl jp mov sbb mov mov xor mov outsb jae inc push aam (bad) xor sbb cwtl lret movsb jmp sbb pop daa dec pop loope push push int push subl sbb jbe loop mov sbb fwait adc outsl inc addl (bad) faddp add mov les outsb sbb sub pop sbb out pop mov das inc stos add incl jp rcrl in mov and data16 iret inc psubd xchg or jg mov or jg add push cltd fbstp or (bad) or xchg decl fiadd sbb sbb pop mov lcall mov icebp push xor cmp popf aas arpl xor mov ja mov cmpsl aam mov outsl (bad) cwtl and (bad) stc push sub into xchg and orb gs mov dec lahf add xlat sbb xchg out push mov cmc pusha mov popa mov adc dec rcll xor inc out push dec dec scas mov subl cmp repnz lahf pop repz inc cmc lods mov (bad) sbb jo push or pop into sbb cltd jge cwtl jne jb test cmpl fistl icebp xchg out aad dec sbb cmp and stos mov xor xlat movsl lods jb pusha cmp (bad) push and sub mov pop xchg inc push xchg std arpl mov aam dec and xchg push into dec call inc pushf dec rcrl out xchg push push bound xchg add jecxz ret lock jo inc or push sub sbb jecxz sbb out sbb mov std (bad) fadds pop nop sub out and push xchg push xchg jge (bad) mov mov cltd scas xor cld mov fidivrl dec mov adc in rcrl icebp push jb xlat mov inc push mov fisttpl popl sub std movsl dec sbb inc (bad) jl sub repz clc addr16 imul fsubl push pop xlat test sbb pop xchg addr16 out jecxz jbe sahf cltd mov or outsb inc js xor xor (bad) mov pop cs iret std pop lahf mov scas adc dec bound data16 xor fiaddl arpl xor pop mov cli pop in mov jnp cli fisubr aad mov sti push dec loope pop pushf cmp xor js ret int3 test jl xor and leave mov mov dec mov pop stc popa inc cmp xchg insl pop jg sub mov fisttpl mov movsl (bad) lcall cwtl stc mov sub mov pop jns cli mov push add and inc dec dec shr out jl add push adc adc test cmpsb mov add addr16 enter cltd scas mov mov rorb fdivl ret cmpsb pop mov leave xor lcall xchg pop jecxz shrb std in adc data16 push xor insl ret lea push add or push ds lods mov in mov or xor dec iret fcomi and ja push xchg adc movsl push inc icebp fnstcw testb inc lahf xchg jns test dec mov outsb add jae pusha insb pop repnz inc (bad) jmp jecxz xchg int or frstor mov ds out jns dec push into sbb jo (bad) and push fwait pop pop cltd dec mov inc ja (bad) lcall cmp dec jnp mov pop lahf hlt fmull insb pop (bad) mov xchg sbb shrl sahf adc imulb ror mov lock push popa mov add inc sub (bad) mov lods popa imul push sub jmp loop sub not ret xchg cld cmp pop pop mov and lahf cmp xor (bad) mov cmp jae popf adc roll and (bad) dec mov negl adc int3 (bad) sub xlat jbe or leave mov pop or inc jle cmp scas inc mov aam mov popa outsb ret adc inc push mov test lahf xor and pushf sti in pop xchg (bad) sub outsb dec repnz aad inc out mov out sbb inc mov lds movsl push fiadd into cs pop add sub fdivs iret fisub dec pusha mov stos ljmp mov outsb or sbb pusha out and mov das aas pop ljmp inc mov out lods mov call mov or add ljmp (bad) std adc push push dec mov dec mov rcrb jb cmc push (bad) jae clc imul (bad) mov or stc gs cltd jg call fidivrl push dec jnp dec xor cmp iret paddw mov cmp aaa fldl adc sti or lahf jecxz out add sbb or pop inc addr16 mov or das int xchg inc adc adc lahf (bad) mov loope rcll data16 mov cmp cmp sti aas adc inc rcr lock jecxz fstl xor xchg out add dec (bad) and aas push in and lds sarl loope xchg lahf push das leave or push cmp pop addb mov add adc jae in test mov lahf mov sti adc arpl aad mov cmp leave mov fdivrl fscale cltd enter fwait paddb fcmovnbe fs fwait int ret xor lret mov mov cmpsb wbinvd adc xorl (bad) sbb fdivr pop mov sub lock adc inc lods push icebp insb cmp cmp adc mov xchg mov lea in cmpsb mov mov ret jnp add pop shll sub rcr cmc arpl and out cmpsb mov pop dec jnp or in ret xor dec out pop je xor cmpsl push mov mov aad mov jae pop stos insb (bad) jb dec sbb cs mov out int3 jb out sub es lcall mov adc cltd lahf cmp out pop dec subl and jae jae and pop dec bound loopne cmpsb sub (bad) icebp add repnz fwait pop gs xor clc stc push mov or xchg test cmp push movsb aaa aaa (bad) add sbb iret into test inc mov inc bound inc (bad) pop clc cmp pop and lods pop icebp out and xor sbb xchg arpl pop ds sti mov divl mov mov adc xchg ss iret lret xor pop les dec mov outsb jns pop mov jmp daa arpl add xchg cli bound jne jne sub xchg push push je inc pop faddl mov sub pop sub pusha sub in cmpsl mov cmp ljmp dec sti jg or sub fdivrs aad (bad) movsl pop push scas or clc inc into cmpsb fs xchg loopne mov daa cmp push cmc pop jb fisub jmp sub mov push nop push cld or popf sbb cmp fistl jmp out mov fsubrs mov push test jnp dec aam xchg mov mov lret cmp push test push add adc loope leave fidivl xchg mov lret jb (bad) add xchg pusha clc push shrb pop das aam lock aas push jmp adc push in mov add add push in sub into lret sub mov xor out subl mov shll cli mov pop cmc mov mov mov mov (bad) dec out adc rorl fidiv pop enter scas enter dec cltd repz clc mov (bad) jae les pop (bad) or push adc nop push pop fstl rclb add shlb xchg dec data16 jmp xlat aam jmp add add mov push xchg cmp sub mov scas jl mov mov pop mov fs sarl repz out bt dec inc adc fwait cs and push int3 pop test xlat es mov and ficoml call ret fidivrl imulb and and fdivrl lret pushf xchg aam mov pop adc decb aad sahf adc jmp jmp lcall stos sub lock xor push pop data16 push outsb jmp mul sub and sbb iret xchg push jmp push popf insl sti cs enter add scas je jg pushf jne mov jno ljmp mov hlt push in popa out mov cmp push icebp fdivs je shlb or mov shlb stc pop jo mov mov shlb xchg push mov ss jnp sub mov mov add in sti int3 mov sub cmp out or pop jns out loop add xlat mov or adcl inc pinsrw sbb xchg lock sbb jp cmp in push test mov test cltd mov push je cmp (bad) sti xchg popl mov ljmp sbb test lds cmc push pop add inc hlt jno dec adc sahf sub and cmp push cmp sbb xor stos fldl fcomip mov jb cld orl adc cltd jl (bad) lock sub mov mov mov add fwait pushf loop mov or adc sub insl fcoms pop inc rcll lock inc mov xchg dec xorl out cmc aaa jg hlt loope dec xchg xor (bad) pusha cmp jae xor pop mov bound add incb call adc xchg std test sub int3 xchg or add in inc lahf aad mov jmp pop add cmp and jmp sub in dec lret mov xchg xor xchg mov icebp inc add outsb adc add movsb sub jb (bad) xchg push out imul ss push movsl ret mov rorl mov mov fist mov fadds xor out inc dec xchg out je xor and js negb outsb xor mov in or mov lods or stc cmp (bad) adc xchg xchg adc in into insb pop ret xor xor cs pop clc fdivrl stc js out bound lods or gs scas pop ss inc aaa and in and aas clc jae dec js dec fdivr in movsl sarb push inc imul cs nop push ss xchg push dec dec subl out push mov xor maskmovq (bad) or cmp and outsb xchg push mov or mov mov lods cli subb push imul imul dec adc or movsb mov pusha pop (bad) xor repnz mov pop mov cmp and ja xor xchg aaa push mov mov mov inc or arpl jne arpl mov cli push cltd in (bad) out push insl mov lret sti jne fs outsl cwtl mov les push jmp sub pop sahf mov movsb (bad) xor pop fdiv dec jl ret inc out arpl fnsave dec fcoms fbstp pop lea and aad jg push push pop fidiv adc add decl (bad) shlb int3 addr16 (bad) or dec int stos xor mov in sbb int sbb je mov leave push xchg xor cltd movsb xchg mov dec rolb aad stc or in mov xor pop sbb jp push ret or add jl fmull je scas push ds and sub sbb pop sbb pushf xchg jbe int3 dec aas inc mov dec pop movsb (bad) sti sbb sbb mov push mov lds jb jle and iret popf addr16 inc clc leave shrl add adc rcrb addr16 leave mov and stos push pop mov xchg push jae sub sar (bad) iret test arpl in into mov jg fldenv shl call sar int lock enter or fsubrl shrb and repz in mov (bad) dec jg mov pop dec std sti insl cmpsl sbb stc je movsl aad fimull sbb lret xor cwtl or mov (bad) arpl jb adc sub inc fdivr mov cmp jg arpl mov call pop popa lods pusha cmp (bad) hlt mov dec cmp jae or adc jmp xchg (bad) sub cs jbe aaa mov ror jle test cli xchg xor inc das or ljmp pop mov lcall pop lcall (bad) mov mov sub jnp sbb dec stc cld or (bad) add scas int push jae xchg sbb pop inc pop aam (bad) mov jbe scas rcrl pop leave imul pop stc cld movb pop lea mov inc addr16 ret imul cld fldt jns jp jge pop pusha sbb mov and leave push add pusha (bad) sub js push cmc mov stos push jbe,pt jmp mov push mov fiadd dec ds mov add imul mov cmpb in repz add mov cmpl mov adc lods pop gs (bad) dec lcall frstor inc es negb mov (bad) ret mov mov icebp jnp xchg pop ret in js xlat mov mov pop fbld dec imul movsb hlt fist in aam lahf insl scas cmp in sbb push femms adc in xor push dec mov es in mov cli push rolb je inc pop inc mov jp icebp bound mov mov pop pusha mov cmp or lea aam loope flds xchg pop stc lods inc adc insl out and adc jbe xor pushf lock jge shll icebp mov cli jmp cmp test cli cmpl adcl ds (bad) sub int xchg pop les and pop aas mov add fstpt mov (bad) cld fistpll js xchg mov inc call adc cmc stos cmp jecxz mov daa and leave adc or arpl dec adc cs xor cwtl bound (bad) sbb jnp inc ret sub and cmp jecxz inc mov pushf ret pop pop xchg push dec mov cmc test mov cmp add jno cs add pop iret dec or movl sub lods shrb fwait cmc pop popa cmp cmp push dec cltd arpl clc and jns push shrb insl hlt push lcall sub inc xchg loopne mov and xadd sbb and stos dec push in sbb sti insb jp pop jge icebp outsb pusha dec xchg dec xchg pop lret pop ljmp xchg add mov adc jg or fimull das cmp mov inc dec notb pushf cmc out pop pop dec xor divb mov sahf sub adc rclb rorb test rol les mov xor lret mov (bad) mov dec pop adc lret (bad) jp ficoml popa addr16 (bad) dec shr lret xchg sbb lds xor insb ja jo push inc arpl and mov push das ljmp setle add and nop lods xchg ret imul or add xor mov sbbl imul iret std movsl xchg mov xchg and pop cmpsb push sub cmp xor nop add ja test and out mov add and adc cmpl and jns cmp ret pusha lcall movsb push push fs jmp xorps xchg ljmp mov testb push (bad) mov outsb fwait test cmp mov enter mov push push xor xor or in out repnz inc mulb mov test add cmp fwait pop jge pop lret lret test jge and sub scas mov pop mov ficomp imul mov xchg cld mov test mov gs mov and incb add ja adc cli sbbb xchg mov xchg pushf aam jmp movsl mov add outsl or push in push jmp xchg jb mov iret jmp add (bad) inc xor ss imul jmp push loope mov je addr16 adc imul out rol dec (bad) or sub jge push jmp sub ficoml int3 push cwtl mov mov pop jmp push or shrb es fmull sbb xchg loopne int3 xchg push jbe movsl jp ss push and mov adc das add pop into ljmp push loopne adcl sub lahf stc ljmp mov pushf push mull sbb mov sub rcl jb sbb jae or mov addr16 inc xor mov sub enter inc popa fsts pop jle jbe dec push int lcall int3 mov fwait mov les imul add test addr16 lock int3 and rcrl sti xchg call test jae mov test pop (bad) or jge cmc mov jmp (bad) push ret vpmacssdqh (bad) mov pusha clc shrb mov imul xor stos stos arpl mov stos mov push addr16 int mov cmp fnstsw mov mov outsb pop inc dec fnstsw dec out aad or fdivrs test ret imul icebp in cmc mov cmp adc sub fist imul popf je movl inc pop add and popa pop push push fbld pop jecxz and mov call xor cmp sbb outsb add dec je inc lahf sti in add inc sub test hlt jmp movsl xor cmpsb pop and or mov cmp mov xor dec outsl rcll xchg push xchg or mov xor stc mov test outsl pushf xor xchg test mov lcall jnp push push jo mov pop rcrb add mov frstor fcompl mov jmp push les mov movsb push mov add mov pop movsb mov adc jno xor (bad) jp and (bad) dec mov pop dec andb lods loopne aad xor mov mov popf repz arpl cld f2xm1 add pop mov dec mov setne inc jo fistp jne stos (bad) aad stos and roll adc fsubp xchg and jmp push xchg sbb in xchg push mov and xor or aas and pop xchg xchg xor ljmp jl fisttp cmp xchg outsb pop mov push pushf or aam xor xor inc iret sar test dec loop (bad) sbb mov lock mov leave mov push scas xchg repz es mov (bad) leave lods pop loop adc sbb mov push stc push xchg shrb xor cmc lret ja push outsb mov into xchg mov inc xchg jmp outsl (bad) sbb mov inc cmp or xor test inc jnp mov idivb push rcrb sub sub int push cmp dec sbb repnz (bad) hlt iret inc mov scas cmpsb shlb mov mov dec adc jne cmp lea mov les mov mov jmp or inc adc dec (bad) mov fstl in push sti (bad) iret jne loopne mov sbb popf push ret lret (bad) mov insb movsb mov and lds mov sub push out mov add sub jns pop inc push int cmpsb popf (bad) push icebp into inc xchg or shl nop sarl (bad) cmpl or (bad) mov adcl inc sub jg mov das inc outsb push jmp hlt push ja cli pop jno in push fild insl add out stos fs xor add cmpl jp sti jae fstpl fadd loopne roll movsl dec and dec jecxz repz (bad) sbb (bad) and cli inc mov jo dec lret ret insb sahf (bad) icebp jmp push and outsl (bad) shrl xor lods lea ljmp add mov fucomip mov movsl int3 pop jb or stos pop out jmp out (bad) cli xor cmpsb cwtl ss and out mov jmp push fstpt ljmp xor fwait hlt xchg (bad) pop fs dec scas icebp ret (bad) mov es movsl or mov (bad) xchg lcall dec scas sti jl pop xor lock add push data16 in repnz mov xchg scas mov fldcw dec xlat jns lods mov sub imul imul adc or scas pop mov into and jg mov dec fisttpl jl push push lcall jo imul xchg fldl (bad) pop mov (bad) mov lds lock inc shr out mov mov or mov sub sub inc rcrb loope sub daa xlat add push adc pop (bad) dec mov xor mov sbb cmp jmp cmpsl test cmpl cs jecxz jl daa jge add ficoml pop orl loop nop lcall daa ss orl fucomp or xor stc push lret stc cmpsb or mov stos cs (bad) popa mov mov cmp mov jb mov in xchg xchg push pop mov imul mov xorl sti adc das xchg pop loop sub clc adc dec push cwtl mov jle push xor test or mov pop aam cwtl pop pushw movsb imul jns pop or (bad) leave movsb xor dec fdivrs roll iret jmp add dec mov shlb xchg (bad) sub out lods jl imul in ss fwait aas xor adc imul hlt cli rol out xchg xor loope mov imul aam jne ds mov hlt hlt rcrb dec daa enter (bad) jmp xchg and sub cmpsl sahf dec inc test aas fcomp and mov jecxz int3 xor fnsave (bad) sbbb xchg icebp pop sahf sbb iret nop sbb xchg jl inc jbe xchg pop test add and repz jns cmp jmp mov jmp mov sbb and clc inc je loopne mov js fcmovbe (bad) jp mov or sub sub pop lds (bad) push pusha loopne jbe add sub pop repz dec mov and jb loop xchg std pop aaa push sub fnop jno dec cmp cmc xchg adc pop enter andl mov cmpsb repnz mov cld icebp add cld les inc lret test hlt das outsb test mov pop mov daa jbe pop pop lods xchg xlat scas cmp xlat xchg ret cmp mov cmp iret jnp jns sarl aas les nop outsl (bad) inc dec repz jno jg rcll cmp mov or or sub and dec push xor loopne mov cmp popa je gs je push adc cmp fcoms aaa fsubl push inc push jno sbb shrl insl and pop or sarb push inc inc mov xor xor pop sub stos xchg dec xor fbstp ljmp pop inc inc mov popa jbe mov push loope aam mov mov jne dec aad push aam or ja pop lcall adc sbb (bad) sub (bad) push dec push and dec sub pop push insb jbe (bad) dec cmp pop push jle test das test xchg cltd adc das aas enter sarl dec repz cmp fsubs in cmp idivl aam leave adc cmpsl fbstp dec rcrb xor push push xchg or (bad) sbb rcrb cwtl sub aam sub jp (bad) jb out mov icebp and and sub pop sbb cmp icebp rcr cmpsl push pusha outsb sbb rorl out hlt pop pop les push mov mov mov in in dec jp (bad) mov push test sub (bad) pcmpeqb clc cwtl out jns push sub xchg (bad) mov aam mov mov add in jecxz popf cmpsl insb jmp ret xchg imul inc movb push push adc (bad) push out push cmc pop andl push fisttpl inc insl pushf pop inc roll or lds dec sub out fcoml or sbb sub out jg dec pushf les mov add and sbb pop cwtl push sub rorl ds adc imul leave pop lods mov cmp xchg mov lds inc adc test lods dec loop sub jno fdivrs inc inc pop clc ror xchg cmpsb fidivl xchg sbb jl adc hlt jns sub cmc mov mov pop add sub jl hlt sub out mov or in cwtl in ftst int add ja xor xor cmp pop cmp add push (bad) bound jno fmul push mov cwtl xor call pop mov repz xchg test rolb mov xchg arpl shrb pusha jne arpl outsb dec mov idivl and out dec jp mov mov outsl xchg jo fidiv pushf out fdivrp outsl xchg lods xor xchg popa icebp mov fimul mov jne outsb movsl adc (bad) mov inc test icebp mov es pop push adc jno xor in adc imul mov add add jae mov test scas add push sbb lods xor push addb pop fdivr rcrb mov aad dec lock ja mov (bad) out mov mov (bad) fwait and dec (bad) rclb dec sbb and rcrb mov rcr dec pop ss stc int xchg pop sbb push mov add push xor jmp insb insl mov stc push push pop inc mov sub das mov cld cltd sbb jnp ljmp incl stos dec jns or jae cltd ret push nop pop imul adc xchg aad mov push roll push jae ljmp inc cmp push in push dec sub fsts dec repz push sbb dec inc add mov aas hlt ljmp leave ret stos dec out mov jl out sub add xor es outsb cmp add jno outsb (bad) sbb (bad) inc push (bad) dec xchg or mov push ret (bad) cli (bad) enter xor in xchg push (bad) cmp std mov pop push shrl cmpsl inc andl ret fwait out mov xor xor inc push xor mov jne insl popa pushf xor fs ret add arpl pop out mov jge shlb mov insl pop insl call xor xlat aaa mov add xor cmp pop adc xor xor fdivrp pop int3 cmp (bad) loop and sahf popf mov or in pop push call mov je in fiaddl jge shrb gs stos cs std imul out adc mov movsb in movsl sub push (bad) mov imul jl sub adc test and neg cmc mov push jb fisubrl xor pop xor inc adc jo cmpsl mov xchg and sahf add outsb cwtl hlt inc adc (bad) cmp imul inc addl cmpsb fbld mov xor ja cmp aad (bad) or ss inc js pop xchg dec pop mov ss out fdivp out push dec fs scas clc sbb cld ret adcb mov inc mov movsb sub aad inc mov (bad) jnp out and es adc popf nop mov xlat fcompl lds adc fcompl into inc (bad) insb aaa cli inc iret in add mov jne fiadd daa sbb (bad) mov int3 (bad) (bad) (bad) cmp fsub mov test aaa cmpsb add mov xlat icebp push lret mov flds les (bad) fisttpl xchg fstps lret inc in loop int dec imul push jecxz sub test and jmp add mov movsl in flds mov mov lock cwtl rep cmpsw bound add loopne dec or push add fcmovnu adc cld nop xchg sbb aam and (bad) enter test rcll dec mov popf fdivs jne les pusha leave je in hlt rcr xchg das mov faddl lock mov icebp jae (bad) or mov dec gs jle cmpsb int3 inc or adc and or sbb shr jae es fldenv push or mov test stc adc sub xor (bad) iret fs movsb mov xlat out jle enter pop lods cli movsl rcrl add dec stos ljmp lods xor or arpl mov out pusha stos adc punpckhwd jnp scas and je dec mov mov cmp clc fstps xchg sarb pushf je loop gs xor xor insb out ja pushl xchg ds inc fs lahf data16 xor push pop xorb xchg ljmp jo or mov das cmp sahf xor xchg cmc add imul jae jmp xor dec fneni(8087 std pop in and and shl roll cmp scas in lahf sarb push dec dec stos add xchg call fdivrl sbb pusha sub jns mov sti jle lret dec int cmp fist test and std jg add push add xchg cmpb cs jmp mov push mov (bad) std aam das or jne xor daa stc xchg and dec call (bad) jnp mov mov bound inc add push (bad) jne pop inc bound sub pop inc jmp cwtl std outsl adc pop (bad) mov sub cld push push stos jnp xchg sub mov pop push jb enter mov cmpsl out pop or cs iret aad dec sbb mov push or test xchg and mov sbb jmp mov das cmpsl pop int sub fildll xor xor nop hlt jns arpl xor dec jbe or fiadd lea out mov les cmp sbb loope pop insl js (bad) mov clc xchg or xor loope or rorb (bad) pop inc cmp mov pop xor lret lods xlat mov scas test leave add add pop jg lahf push bnd fisubr ss (bad) repz pop out cld stc cmp cltd fistpl jge jnp in mov cld push lret xor xor ljmp mov sub push outsl popf rcrl add inc adc aad in inc lock jno fdivl jl push jmp dec mov jl jbe iret test xor jo sub pop (bad) mov mov in lret negb clc or xchg (bad) lcall push lock movsb xchg push or and push lock in mov scas or add push dec xchg incl jl mov in je mov or test data16 mov mov xlat sar andl stc lods lcall mov popf out mov push pop add adc loop sub xchg daa test xor scas xchg arpl icebp push dec fisttpll inc and pop pusha and icebp push mov in jns inc repz sub outsb jge hlt sub xor and lods mov loopne xchg push nop iret mov fstp mov fimull fcompl fwait in movb xchg pop gs lods in imul sbb cld ja (bad) xchg (bad) aad mov arpl rep or jp movsl adc push sti mov dec fwait mov jle cld cmp daa sub sub gs add sbbl dec aaa andl (bad) or inc fdiv iret fldenv fs out add cld test ds cltd cmpsb movsb lods lret mov mov fstl add xor pop scas rcrb jecxz pop inc loopne das js ss nop inc insl add xor push test mov test cli push lea mov sbb les mov mov in xor aad sub cmp iret test rcl jg sarl adc add push xor inc lds and inc add mov jbe sbb mov mov xor loop pop and fdivl push push divl sar scas mov fidivr cmc aaa xchg inc rclb cmp (bad) jae mov (bad) int and and mov xchg sbb mov rorl clc hlt nop cmp jnp cmc xchg enter js jle mov add xchg xchg cmpl adc xor or aas fsubp cmp push jae andb shl ljmp or xor xchg mov cltd rcll jl jecxz rclb lret mov sub jge xchg cli mov imul sub sub mov and vmovaps cmp xchg daa (bad) aaa push ret pop push cli push stc arpl push or leave add xor pop mov sbb dec mov ret test jo push mov sbb or add jns mov mov mov icebp pop pop (bad) mov (bad) jo aad xor test repz sbb scas xchg insb (bad) sub xchg sub mov cmp inc mov xchg push dec dec ss daa adc insl fmull dec ret dec jl adc mov push sbb test cmp xor xchg aas fcmovu pop call sub cmpsl rcrb out mov dec inc enter insl xchg push ret sub pop mov add mov jmp pop xchg clc dec shlb xor dec adc push (bad) jecxz lea pop inc pop add movsl sub xor cmp (bad) divl sub sub push mov or sub mov fnstsw add dec add shrb mov adc adc fisubr and daa iret cmpsl and jnp jecxz jno iret pop push repz fcomp (bad) (bad) ficompl ret xchg stos pop and loope inc movsb adc cmp jmp mov pop cmp and and sbb cwtl mov out and sub sub jl pop insb das arpl arpl or lcall inc jno pushf cli fnstcw test insl addr16 insl ljmp aaa cmp out and dec push fdivl addr16 jns adc std adc mov push pop cli outsl add dec xchg adc pop lods cmp dec jecxz xchg outsb mov dec mov popf aas outsb add and mov aad cmp xor adc jnp add push aad leave and scas mov dec aas cmp lods call popa inc cs (bad) in js shrb adc push or les test imul pop jle mov xor insl jge push je insb push in (bad) outsl loop dec ret test and adc outsb int3 daa pop push pop fisttpl mov inc mov int3 sbb push mov sbb add scas pop sub (bad) pop adc rol pop jg inc pop push push inc out adc mov lds lods loop mov jmp or jno dec pop enter push (bad) mov lock js repnz jecxz lret push jbe imul push push outsl and pop gs jbe jb mov jl cmpl cld arpl add gs dec mov push mov pop fwait add fidivrl inc nop push lock lretw fnstenv xchg inc scas insb jno push cmp jl hlt xchg in iret loopne push dec add ret sub push lods adc xor ljmp and sarl pop jp cmc adc hlt adc xor lret pop inc iret pop sub push (bad) ljmp ldmxcsr lds shll daa xchg lock jnp in fs xchg cmp clc int scas xor js fwait sbb sbb mov xor sbb idivl ret imul adc lret scas cli aaa sub sub ret (bad) xchg pop test jp adcb fstps (bad) cmp or dec xchg sub dec ret xlat fdivrs jg sarl mov adc push mov lods aas int3 xlat call push cmp pop cwtl test js pop jge pop hlt dec jb xchg mov push test push mov loopne pop xor dec ss int imul pop jne out sub mov xchg shll xchg repnz push push je arpl mov jmp test rcl cmpsb cmp mov inc aaa cmp pop loopne iret out test and jl (bad) std call and add (bad) icebp sub add movl jbe int jl mov dec jg out loope xchg dec push rcrb mov ret jb lock into (bad) and dec subb gs test in add push pop cmp (bad) je jo pop stc cmp ss and jne mov addr16 mov pop imul shll (bad) leave mov xor mov les xor aad mov fiaddl in inc jne out pop int3 pushf pop sti scas test xchg mov mov sbb enter push dec jbe and cmc jle pop cmpsb inc and inc enter or loop out lock lods lret inc rorl pushf push dec scas jnp andl xor cld lret addr16 push ret aad movsb mov xchg (bad) mov neg nop jo aad stos out (bad) fcomps mov mov mov jo mov (bad) cmp jmp in (bad) enter adc mov lahf fnop rcl push jp and stos lea jg aaa mov test mov stos fcmovnbe sahf fs addr16 ja test lds mov xchg sub and addr16 leave pop dec sub push cmp aas bound fs cmp push mov mov mov xor inc dec mov and push test mov cmp (bad) fcmovnbe shr mov xchg rorb dec fs notl xor xlat jg lock cmp mov push int3 push mov xchg cmc cmpsl addr16 ret fisub add pop es add das das fst pop imul inc add fist sub inc (bad) call cmc enter dec outsl jl cmp add outsb add fisttpll push lcall idivl mov pop and repnz cmp stos outsl jp lret push add xchg mov test pop sbb pop xchg cmpsl jns sti mov inc xchg push or inc cmp outsb or jns xor mov aad push int mov insl xor (bad) into sarl sbb mov push xchg arpl sub ja daa adc inc test (bad) mov es leave in out test mov pop mov lods fdivl js cs mov ret (bad) andb fs mov das mov or sub sub in adc outsl add mov jmp je dec sub popa in jp push cmp bound das orl outsl dec std lods sub inc jae pop dec ljmp test repz fs js adc outsb xor imul je pop inc arpl lret pusha mov mov jnp push sub dec comiss dec bound push inc mov and fdivl movsb xchg pusha mov clc (bad) int dec nop outsb (bad) xchg xor inc pusha mov xor fs or mov lret bound xor icebp or fwait les dec add lret gs pop pop sbb outsl xor fdivr xchg jmp jmp mov mov push mov ljmp xor sub cld pop xchg lcall jo rorl dec jl xchg fcomp and jle insb int sub js xor add aam xor add ljmp pop pop (bad) insb lahf add and sbb in idivl cltd and mov and in aam imul pusha fistl jmp out push int subb arpl push test xchg hlt test jle ficoml cmp das adc push scas adc repz jecxz int3 test sbb addr16 inc and ror (bad) imul cmp jl call cmc daa dec pop adc (bad) not adc dec xor pandn ja loope sub rorl movsl pop add or imul mov cs sbb push fisubl ja jb,pn je jp (bad) dec mov push nop cltd in adc fwait (bad) xchg dec ja pop pop cli outsb cltd in pop mov jnp gs jne das addr16 addr16 jmp pop mov (bad) cwtl mov (bad) xor cwtl xor pop scas dec fwait out mov gs (bad) jecxz cmp loopne insb (bad) lcall and pusha aas test cmp ss into xor push adc lcall aam mov jmp es lods (bad) push mov js fistl lret outsb aam inc mov sub leave inc ret loope push add or data16 mov stc cmpsl aaa cld (bad) icebp sub iret mov outsb inc popf mov js inc jecxz insl adc add push fs testl sub mov and mov mov out push jge out cltd (bad) xor xor shl aas scas sbb inc cli adc push imul in dec lret jl sti bound hlt pop lret sub jno mov loop sbb push enter cmpsl scas loope mov pop outsb mov div mov inc mov sahf xor andl sbb test mov imul jns in pop sub dec in mov jp cmp dec fcoml loopne push push pop iret jg int push adc xor add push out fwait xor mov cs sbb (bad) dec xchg movsl mov dec cltd sub leave les xchg pushl (bad) pop test fidivr leave enter mov dec push mov scas sbb mov mov xchg repz cmp test push mov mov rol lock andl mov xchg dec data16 ja call push ret mov lahf aam int3 cmc shll sbbl add cmp jp mov cmp fcompl mov pop ds jnp adc les xor stos mov das xor fcmovu adc pusha call push push mov push loope and mov addr16 js andb add inc movups fisttp pop mov sbb dec adc sarb mov iret mov rcll lods xchg dec test pop inc out dec xchg into push dec push xchg pop jae lret cmp dec lss inc pusha and pop cmc std xchg daa add mov mov sar inc arpl (bad) xchg lret pushf (bad) adc roll test dec jp xchg mov in push insb test jecxz insb mov repz jl,pt popf clc mov sarb icebp aas or jno test sbb popf xchg xor dec popf jmp out xorl mov addr16 lods push pop (bad) fstp movsb adc sarb dec pop mov fwait add sbb cld jp fbstp inc test jecxz and cltd out lret xchg test add call mov cmp fdivrs loopne test push xor dec inc lahf gs and dec adcl jns lahf ror sbb rorl or xor mov and iret pop dec adc mov xlat mov push enter xorb mov ss stc arpl push stos mov std adc shlb out xchg aad sbb xor mov inc ljmp out xchg ret cmpsb shlb out pop out add adc fadds fstpt cmp and popa out insl repnz cmp popa lods cmc sbb mov mov sbb dec fcmove inc (bad) hlt cmp mov xchg xor xchg popa inc pop jae lods (bad) mov mov addr16 rorb ret xor dec mov loope in pop add vpsubb mov into fsubl test adc je jle ds push mov pop sub popa loope mov or hlt aas call in mov and dec mov and fwait out and (bad) mov fcoml adcb sbb data16 xchg dec xchg mov sbb or push and sahf loop cmp jo std sub add aas adc jge ljmp dec xor sar rclb fidivrl xchg imull out fidivrl xchg jbe xchg lods inc jge repz movsl dec into std aad dec pop fwait xchg sbb sbb out mov dec mov lock bound cli lret fadd xchg and mov lods hlt jb mov mov dec adc sbb sub in out (bad) lods pop mov and ss pusha daa add lret jbe mov push mov std pusha out (bad) leave test mov ret jo push cwtl xor jmp movsl mov outsl jg xor fnstenv add xchg mov mov cltd pusha pop std stc sbb js repnz add mov pusha loope and jnp scas and repz mov inc aad cltd (bad) negb movsb cmp sub sbb fimul aas mov or cltd lods xor fcoml pop test mov (bad) mov fisubr call xor dec je dec fmuls imulb test or stos mov movb ret fidivl inc mov out dec (bad) mov push sub dec xor sarb cmpsb inc in cld ret mov cli push loop push (bad) repnz fidiv sbb fwait mov mov dec push mov xor xlat pop mov dec int3 jle jnp and int3 into mov (bad) mov mov loope cltd and ret (bad) lea dec mov mov dec add cmp test push dec cmpsb fsts mov dec lret cmc lret jns push xcrypt-ofb cmpsl ljmp sbb outsl mov cld aam xchg ss fld jg and mov shrb adc iret add mov test cmp gs dec cmp rcrl rolb mov dec inc pop testb int3 fidivl es outsl mov daa mov pusha pop add mov scas out mov push stos sti xorl push data16 jbe ret sub pop cmpsb push lcall mov mov push bswap mov nop loopne mov and aam outsb aam icebp push push push je ret mov pop sub mov xor jb xchg pop mov jmp or fnsave and dec mov (bad) xlat xor shll xchg (bad) sbb je ret test insl out jg pop hlt adc arpl ss daa pop pusha in or inc sbb sbb imul shll sub ret test mov mov adc mov adc das in mov pop push mov cwtl sub enter repz xor in int ja mov inc mov mov cmp mov ja xchg (bad) insl lds xchg icebp jge add aad jno xchg jle,pn cwtl stos lret jne jmp inc inc cmp in xor dec (bad) xchg ss mov fdivrp lds lods xchg jo pop rclb shll or jb (bad) xor orl jns inc loope sti es mov lods pushf cmp jno xchg inc decl in loop sbb jnp cmp dec mov lea mov leave xchg pop rclb dec jb xchg mov nop sbb add fistpll out sbb cmpsb push cmp (bad) addr16 outsb push sbb mov mov adc jmp jae mov movsl jmp mov loop fsubl out xchg mov ficomp inc ficom pop lret orl (bad) icebp into gs cmp pusha and aas cltd cs or mov ds in aad aad pop aam xchg test add insb jo or cltd jl pop ljmp cmp nop push and xchg pop jo ret and jo cmpsl movsb (bad) rcrb jmp and jle pop test inc mov or addr16 or mov mov int imul sub jae cmp mov push icebp aam dec std pusha adc sbb mov mov push dec and xor add popf andb and mov jecxz add movsl jmp lahf lods roll roll inc arpl js adc add aaa fstps xchg ja or (bad) aam mov movsl es add test popl sub sub les in xor popa hlt adc das jp subl loopne pushf mov cmp sbb sbb sbb push or jbe xor (bad) sub mov pop cmp xor cmc into lods push out pop dec add addr16 outsl imul les add push test dec repz inc jmp mov jae xor xchg jno out or test jge jg dec xor push popf xchg test push sub push nop jmp into aad es cmpsb push xchg xor insb roll sub loop dec lock cmp lods adc lods mov fbld push icebp lret pop jne arpl mov mov roll mov add mull into mov pop inc in sub xor dec cmp out js sbb (bad) out mov cmc pop dec fs iret popa pop cld fwait (bad) xor out clc pop fcom cmp fisubr jbe repz es pop cs daa stos dec loope fist mov scas push add lods decb inc xlat popf inc insb (bad) (bad) add lret outsl jae mov push adc rclb sub push adc pop enter cmp xchg gs jle add (bad) xor leave in in jno shl push imul stos jbe pushf sub mov or sub adc or cli cltd or add add push sub mov xchg cmp jle mov bound pushf push cmpsb xchg pop cmp gs test inc jae mov xchg mov adc mov (bad) mov cmp sub mov scas xor add loope jle and and ds stos cmp out pop dec loopne ret xchg sub out mov pop and xor mov mov inc test inc sahf call hlt or mov out ss bound in cmp mov inc (bad) aas aaa xor shl sbb mov add rolb cmp lret ljmp cli cmp mov mov xor xor (bad) xchg xchg (bad) fwait repz adc daa mov pop cwtl xor jno cltd sub leave xor ljmp jbe cmp add lcall jns cld jae pop call stc insl add loope pushf or scas mov xor xorl lcall sahf fcmovnb jle roll into outsb (bad) fidiv pop jp cs mov gs cmp popa mov les aaa push pop out stc into mov fstpl ljmp sub idivl loop (bad) xor sub inc sahf cmc sbbb (bad) cwtl stos pop jl and mov adc fwait sub fwait dec lahf cmpsb or sub sub mov pop or jns jbe fiadd inc sub xor dec mov (bad) leave rolb loop (bad) outsl jns adc mov sbb ljmp std mov mov popf (bad) push je mov hlt movsl lds add push popa sarl dec mov push dec inc js fsubr xchg inc (bad) pop inc jp fnstenv movsl sahf roll out hlt jns aaa aas add mov add nop pop lret push in sub (bad) mov mov lcall insl xchg xor sahf mov sbb pop mov out pop sub pop fwait jecxz in jmp pop jno pop das mov mov jo cmp cmpsl and mov nop pusha mov dec xchg inc jge aam pop fnsave xchg mov out and stc jns cld jb (bad) mov or rorb inc pop les dec push adc fisubr sbb pop loope sbbl leave je xlat push into loope sarb xchg mov fidiv je jnp cmp xchg mov add push mov arpl xor lret or cmp fsub cmp stos xor push ja ljmp mov jp xchg sbb shrl mov out stc jae out push and mov lcall xchg mov or xlat fsubl adc insl inc sbb pop lret jns mov pop (bad) (bad) into cli mov cmp xor xchg push dec inc jae test inc pop aas addr16 jbe daa sbb lret or mov mov push and inc scas xchg gs rcrb dec dec pop pop mov pop gs cmp and push push mov inc cmp sbb cli aad iret mov pop stos hlt repz xchg std iret push xchg mov das sub pusha bound cs sbb jnp fldt adc or push xlat rclb mov or mov xchg mov das sub xchg push pop jb inc nop cmp popf pop pop dec (bad) xchg jg xchg scas mov jl jo mov and jnp jo cmpsl fadds imul mov mov rol pusha sub add insl in or js or pop mov cmpsb dec or dec or sub leave hlt jge sbb jb and das outsb xor ja ret jbe int jbe jl jg nop sub jge (bad) xchg jle adc jmp pusha icebp pop adc cmp fs xchg in icebp call inc movsl ret or mov xor and cmc (bad) or fs lret imulb (bad) (bad) es mov dec pop lret stc push test mov jbe (bad) out mov test xchg out jne test dec lahf lock ss and ret into mov stc and mov rcll idivl dec int sbb sbb adc push daa adc cmpsb aam xchg stos cmp sub dec jns pop popf movsl pushf (bad) call sbb in xchg sarb dec addr16 mov scas fdivs iret les rorl cwtl in loope and push enter adc (bad) sub cmp pop pop sbb roll pop mov test outsb sub (bad) shll repz fldl xchg jnp out mov lahf dec repnz aaa fcoml imul scas loopne arpl shrb xor xor xchg pop fistp cmp xchg inc iret in cwtl cld inc lahf push dec (bad) addr16 je push sub cmp cli push mov push jnp loope clc mov xchg mov ljmp inc dec aaa push scas sub loopne in sub mov (bad) scas sahf bound mov loopne mov dec push daa add jno inc pop xchg sbb insl fisub outsb loop cmpsl aam adc iret pop hlt mov test jle aaa cltd test push cmp cltd mov sub iret cs inc mov int dec xchg movsl sti lret rcrb jl mov aam and enter xchg cwtl cmc fstpt das lock fwait push xchg push cmp out dec and int3 hlt loopne fwait add adc pop ljmp add ret cld mov pop fist mov sub or out xchg and and insl stos sub inc pop cmp mov jl jle ss dec add jne jmp mov inc xor call das and add jo pusha cmp xor cli stc loop add jl adc cld movl int3 adc into xchg scas movsl gs dec mov dec insl (bad) shlb mov loope dec insl mov mov stc scas lods dec push push mov mov repnz fnstenv test jp cmc xor sub fsubrl aas mov inc xchg lret push sub jae pop lea out and sahf sub (bad) in dec mov mov aaa inc pop das lret sbb faddl mov inc lcall cmpsb pop cld movsl xchg sti pop add push testb push dec adc pop daa push repz fiadd push add fbstp (bad) push pop mov mov push sahf mov dec insb out out aaa mov xlat sub push dec mov in pusha lret inc push push add idivl ret out stos (bad) or out add ds mov ljmp insb mov push addr16 loopne fstps repnz jle adcb sbb lock sub pop jecxz push sbb sub inc pop cltd addr16 pop dec lods cltd dec xchg jl outsl subl dec int (bad) jne stos shrl xchg sub or insb push sbb ret jp inc movsb xor lock add cmc cmp xchg mov adc mov dec pop jp cmc sbbl call sbb sbb stc inc (bad) mov dec and stc inc fcoml and repnz dec orl lock in jmp je cmp dec jb sbb mov fstl (bad) (bad) jne mov mov xchg xchg mov bound adc cwtl into fbld hlt cmpsb pop sub add rorl or xor pop sbb lret push push lea (bad) into loop and push push pop push pop nop rorb mov inc cli out or rolb cltd add int3 mov aas popa dec movsb movsl xchg daa lock popf xor scas mov popf scas push out sub pop nop rcr mov enter scas push inc jge das mov ja pop enter xchg inc in jg mov lock push and xor aaa push xor andb jbe (bad) aad hlt jns pop rclb xor leave jmp push push (bad) lahf or lods out adc or adc dec neg or sub pop mov or lahf jmp ficom push mov movsl cmp (bad) shlb and gs stos xchg mov iret popf je pop testb adc into jmp cmpsb cmp mov or outsl jb mov push enter dec shrb repnz xor xchg mov (bad) mov pop jae sbb push push mov jae movsl mov xor dec mov repnz je cwtl pop das fxch pusha pop jmp mov or dec cmp push mull aas gs in test add mov mov out or mov push or popa out push xchg or push popf mov mov iret fisub movsb push jle cs adc in pop push daa adcl fidivrl pop movsb pusha pop fistpll cmc xchg push bound pop and fbstp ja daa cltd jae and push cld pop mov loop pop dec in andb jne mov push xor pop jmp dec popl xchg pusha cmp mov addr16 fstps pop jge mov and popf std mov (bad) dec adc arpl test arpl ljmp mov adc mov add and ret push push xor cmp dec cmp mov xlat dec push or fldl daa sbb into iret pop lds cmpsl xor cmpsb xchg mov xor xor repnz scas mov cld push sub dec and push mov fildl mov stos cmp or mov leave jl fidivrl and xchg sub (bad) and les andl dec add jo or jns add data16 xor mov ds repnz aam hlt addr16 and mov adc and dec push in mov in call das push int shrl jbe ja xchg sub rcll call aaa adc iret or xor xor mov (bad) test in fwait enter lret nop (bad) out xor dec xchg jne in lods test hlt sub lods mov inc (bad) js pusha or lahf xor mov rclb cmpb xor adc outsb pushf mov jae jne push xor pop rcrl push jle (bad) jno insb pop pushf jbe sbb and shll sbb popf leave repz mov pop out lock call jbe aaa scas sub aam daa push (bad) repnz and ret movsb cs hlt fdivl or aaa int3 lock hlt dec in shrb insb je scas ds push ss sbb cs mov pop pushf push ror inc sub int aam es (bad) ljmp xchg dec push add lcall lahf out fwait iret les mov xor xor dec add dec mov xchg or outsb xchg test mov dec push scas (bad) loopne (bad) popa mov adc or ret fcompp idivb pop out lcall inc out add popa inc dec or imull daa outsb cs inc (bad) (bad) fcmove hlt xchg add in or mov push push jmp mov jne xchg bound test mov and stc stos iret lcall cli push adc pop mov xlat or pop inc sbb sub vmaxpd pushf xchg xchg xchg into mov test nop std int cmp sbb adc into mov ss arpl jb add cld imul add orb lods mov xchg mov mov imul ss jne or jmp insl sub call shr loope push mov cli xor inc dec pop ljmp (bad) cs ja mov insb outsb sbb ret test xor add mov xlat mov xor (bad) iret fisub fcoms mov mov mov push mov enter test aam mov pop lahf jb xchg inc cmp (bad) sti jnp dec (bad) (bad) andl inc xor in arpl xor fdivrs xor dec mov cmpl or adcl daa (bad) leave fninit inc sar dec sub imul movb jno out jg sub add add adc in dec ficompl mov fimul sti iret testl sub shrl adc stc xchg pop in fxsave xor inc fcoms test int3 xchg mov cld dec les rolb push scas aas xlat leave scas rcrl pop or pop lock daa pop pop gs sbb add cmp ret int jmp or sbbb ja inc xchg adc sub adc movsl sbb mov rcrl in cmp or ja jmp xchg aaa lahf and jmp loopne mov adc outsl jp out out sub mov dec test fmull into jmp push imul lahf lea jo in xchg outsb es call ss cli or imul (bad) mov pop add add mov mov xchg pop or in and sbb jno adc or std adc jo add cli jbe xlat and scas cli imul and jp push mov jmp cs mov cmpsl or movsl addr16 inc dec mov mov or mov ret mov cmp adc mov int sub lea ret negb inc es jnp xchg movsb sbb xchg fldt aaa sbb fwait inc or cmp cs mov int3 out fistpll movsl push push xor loop ljmp adc mov (bad) mov jbe je xchg mov jne,pt mov lea and out in pop bound xchg in adc dec test adc pop adc xchg divl mov adc ror inc inc call xor cmovnp mov push lds sub mov and (bad) sbb in jg fidivr adc pop in ja sub fndisi(8087 pop cs pop bound xchg je push mov sbb in pop mov mov orl cmpsb mov mov decl xor xor push mov jae xor mov pusha aas and pop inc cmp test (bad) mov or mov xor dec aas movsb shrb popf gs jl ljmp lods out cmpsb jne icebp dec xchg bound jo jecxz,pn (bad) movsl out (bad) push add (bad) xchg pop ja push data16 outsb sub jmp sbb mov sbb mov shll mov int3 hlt inc insl loop js cs adc adc xchg lds lods int mov inc jnp stc sub mov fwait sti aaa lds xchg pusha jmp xor and rol das xchg scas aas mov jg test cmpl jmp add inc sbb aam xor adc insl mov sub cmpsb cmp mov in loope inc jae rclb and mov movsb std jbe pop int mov xchg mov stos or mov cmc sub cmp mov jb push jle push les call call repz pop sub (bad) add inc push sti xor adc pop ret cmp push insb xchg jmp adc imul jg lock mov dec xchg and insb pop push mov adc cmc mov (bad) je aad mov push jns dec insl xchg loopne movsb incb loopne sti sub mov and mov sbb and dec push push add pop stc jnp push cmovg cmp out jmp fdivl pop dec push inc lds sub xchg or or adc shlb jae push stos icebp and call sbb lods add repz cs clc jns lcall jb (bad) fs imull les and sub aaa add je jmp fdivr js (bad) dec mov pop out xbegin mov add xor arpl popf scas jle stos mov jle xchg and add ljmp ficomp pop sbb cmp sarl and xchg addr16 inc pop mov dec clc movsl jecxz (bad) sbb (bad) out xchg loop push cld js jmp mov mov (bad) sub dec cmp xchg seto xor popf mov or fsubrl xchg xor test movsl or aas cmp hlt pop lret lea mov jp pop xor stc stos shrb or inc stos mov inc sarl (bad) sbb int3 or (bad) loope lods jno sbb inc jnp jae add mov inc lret (bad) loope push (bad) dec push pushf les cmpsb or sub out sbb and cwtl lds cltd jmp les dec out mov pop (bad) in fs sbb cmpsb dec aaa and cs rcll insb and add rcll pushf mov js push sbb adc stos dec imul cmp mov loopne jp test repz fisubrl iret push outsl inc negl inc test fsubl out or test sbb pusha sub sub imul push dec imulb cli ret lahf iret adc shl and cli mov sbb mov jbe pop jo lahf out push (bad) notl loop push mov xchg xchg das sub xor adc dec leavew mov push ficomp jmpw addr16 ss popf and aad mov mov addb xor negl fnsave lahf rcrl popa and xchg (bad) xor mov cltd adc cld daa fsts rclb sahf lret push jo imul add dec cmpsl sub and (bad) jle mov daa (bad) mov scas sub push das icebp lcall xor ror or and mov int dec mov mov jl data16 mov shll mov adc mov shrd sbb scas add fsubs mov ret pop inc mov xchg mov out test or (bad) mov pop pop ja popa and dec mov into popa mov jecxz jl test jp xchg add adc pop xchg xor jg inc or sbb push fidivrl mov (bad) xor mov mov fsub nop and repnz test adc mov sbb lds imul cmpsl mov add (bad) gs shll ret push xchg mov imul inc cmc sahf push pushf in or ror mov into push mov icebp imul xor std hlt lcall push scas or and jecxz fs jmp dec lret add mov loopne out jecxz insl es adc xchg sbb dec cmp into mov jp pushf pop mov mov (bad) jmp inc jmp mov sbb push pop in add add inc imul rol outsl nop jb sub cld jmp add xor xchg inc popa (bad) pop or cmp pop fld1 adc mov lods xor inc outsb shrl jne adc jne rcl jmp and jecxz push sub xchg cltd add in jecxz cltd data16 ret xor add and aam fisub hlt (bad) and xchg jecxz cld scas inc sub push lods cmpsl dec das pusha dec push dec es and xlat aad mov dec jg push (bad) mov jle mov mov push mov (bad) insl aad ret xor cmp int3 pop (bad) cmpsl cmp cmp sbb push clc sbb movsl insb mov cmp in pop sbb jmp (bad) mov cs ss mov push and sbb addl jae adc leave mov sub jp icebp mov inc incb cltd (bad) push lock xchg mov cli add jecxz maxps arpl cmp push mov cld insb test loopne repz lcall es mov adc loope (bad) outsb pop lahf lds pop dec mov leave dec popa mov mov lret ds xor movsl push loopne jp adc ja loop mov jnp and xchg xchg (bad) jae out mov inc pop xchg mov mull xchg cmpsl ss xchg test leave mov das cmpsb or cmpsl mov cmp popf addr16 jp xor add jmp sbb addr16 pop xor mov notl xor cmpsb mov mov or std dec push loope cmp jl popf mov clc lds bound jl or inc jno fwait or insl call imul arpl xchg icebp test pop sub fiaddl pop jno jae scas jae aas pop and imull push (bad) pop insb ja dec (bad) lock mov arpl repnz cmp imul push test push fsubp mov xchg xchg mov idivb mov add repnz jae jae (bad) push fcoms ds and adc jl jmp mov push sti jns xor and xor ret mov jb jo jo,pn in mov mov (bad) pop les inc dec lret mov mov cmpsb xchg insl push xchg cmp mov fcmovnbe popa and lret lock mov fisubl sub lret cmc jge jecxz add push lret inc lods insb mov popf fs jbe insb clc jmp cmp xchg imul fld (bad) es out mov or cmp pop jb and mov pop bound stos xor jle or sbb mov mov lods popa adc das adc cmp fisubl jmp insl cmp dec mul das outsl in mov movsb dec out inc push cmpsl adc pop inc mov push cmp fidivrl cmp faddl xchg je pop daa pop xchg xchg hlt ss inc dec mov leave pop pop pop dec and adc sbb fidivl mov sahf mov loop neg mov dec (bad) mov out ror out lcall mov sub adc add mov xchg in add gs fisubrl inc out adc stos and iret mov jnp test test push sahf std mov mov addr16 dec add xor in dec mov std out pop cmp sbb dec (bad) jo dec dec sbb lea mov jno test test mov ret lret imul add cmp inc inc jg inc xor fs icebp pop loopne ret inc xor push sub xchg push fs pop and inc (bad) leave jge repz jg,pt xchg fimull enter notb mov repnz pop sub loope test enter xor out cltd pop jae iret lods in mov and dec das ret jge ljmp mov pop test out fwait push inc pop cmp iret xchg and ret cwtl mov xor enter loopne call rclb dec lahf mov mov jg cmpsl xchg lds aad mov sbb lcall jb xor sub les adc jmp insl jb mov dec xor out jmp mov cmp xchg es int3 es push adc das fadds dec (bad) sarb gs iret out or xchg mov pop jmp lret rorb mov loop xor pop dec xor in mov stos movsl mov mov cmpsl xor jo test jne fadd xchg dec cwtl or sub push pop pop test push cltd mov push nop pop jae in cli jnp js fsubrl cmp xchg fidiv inc fstp lods mov mov jne jns fmulp push push pushf inc xor fisttp ret outsb inc icebp push cld sub out js hlt mov xor jg push popa sub iret loopne and pop imul push jo rclb adc repnz sbb mov adc imul clc adcl lods jae pop inc pop jg repz mov fcmovb imul mov sbb jmp in xchg out test pushf mov dec rcr inc sub fcomp xlat mov or inc or inc jmp (bad) xchg push cmp cmpb push mov ret cld mov sub ljmp pop sub iret hlt xchg mov insb stos mov inc jmp mov fiaddl jnp mov test push ljmp add mov out pop lahf adc xor cmpsl jg cld sbb sub mov jnp or push push xchg jb mov cmp mov xor cmp mov xor fidivl repz scas ret push inc outsb and fimull lcall jecxz push lds stos pop out xorl pop in push insb enter xchg adc xchg cmp push mov cmp pop mov lret movl inc mov and xchg fidivr in sub push add (bad) mov dec imulb dec pop movsl push out pop cld jnp pop and jo and mov das test dec sbbb inc push mov push mov mov jo or out loopne mov xor jg mov jnp (bad) mov inc mov test lea aam jle jo push dec add lea cmc jae xchg jbe mov mov pop gs cltd stos das pop lock loop pop jns sbb inc push xchg push (bad) dec mov dec sbb pushw push dec imul and (bad) icebp cmc and ret (bad) iret xor mov add sbb sbb xor stos popa adc in push aad fbstp inc lahf xor (bad) hlt aas stc movsl jo mov insl inc push mov test fild push es pop or jno sbb test cmp add mov xlat je sub sbb sub call mov inc cli add mov lahf xchg lahf rcrl sub decb dec sti jle mov jae aas pop shlb push fldcw movsl and pop cwtl adc sbb dec iret inc rcrl in xchg or into pop imul int3 testl mov jno sti push mov cmpl dec lods mov sar ja lock dec push push (bad) jne mov cmp aas shrl stc notb mov push movsb add pop push loop xchg push mov aas out lea xchg iret scas sbb dec pop mov xchg adc xor repz imul inc push pop jecxz negb and loope mov inc adcl inc sub or mov das sub rclb imul pop inc jns add leave repnz sbb mov bound xchg or movsl mov jns push push popf popa les je ret add mov es (bad) adc imul pop test test jge add fiaddl je in aad hlt leave mov es or sub sub scas enter jge imul ret mov adc mov xchg or xlat gs icebp shlb mov jae out je hlt mov (bad) leave jbe fdivrs hlt stc es lret cmpsb je (bad) es jnp fwait jmp (bad) sbb out das in insl cmp icebp icebp insl sti mov push cmp mov mov imul popf std fld xor push xchg pop sti addr16 and les insl pmaxub xchg fsubrs rolb lods stos pop mov mov das imul lods and jmp add mov sub xchg mov or leave popf jg cli cmpsb push in dec daa dec sti or outsb enter mov mov lahf push mov repz dec cmp add pop xchg arpl daa adc inc lcall pop mov mov std ret xchg std xor es xchg jne jecxz (bad) mov hlt mov daa movsl push sub nop bound shr xor mov pusha js js (bad) pusha test inc and cs push mov adcl mov cltd add outsl mov xchg inc xor jecxz add dec or cmp test lea push push xor test pop (bad) xchg rclb xor popa call jb xor push inc popa cmp mov mov test fldenv xor jnp ret in sbb int3 jbe gs xor xchg cmp xchg repnz (bad) icebp pop leave dec fwait pop sub push sub pop cs out xor std in dec dec push pop jnp or jge and imul fwait lock shl fidivl sub (bad) pop shrb dec xlat movsb sbb mov daa push out push sbbl or mov or fnstsw dec addb sub jbe push das xor sub dec test mov lods movsl xlat cmp out mov push mov push repz push adc outsl mov cs fiadd xchg and insb cmp xor mov shrl int3 mov jo adc jl push vpaddsb cmc leave repz jle idiv and fidivl xchg xor mov mov inc jle cmp sub js xor and cli gs loope mov jmp jecxz jle inc (bad) das cmp push stc movsb stos int3 test mov xchg fildl outsl add mov jnp cmpsb push or loopne jno xchg xchg dec mov inc sarb test pop std xchg mov decl inc and push adc rclb adc or or out cli sub and jne pop in dec adc shlb roll inc rclb and xchg xor shll push fs xor scas ds hlt iret daa loopne loop pop inc xchg lds adc xor scas insb je adc or iret decb arpl pushf test lret pushf decb dec cmp sub and movsb bound pop lcall or push push dec in xor xlat xchg push das xlat xor mov pop xchg lcall push scas mov in jl cld cmp jbe pop push jno push pop add jae iret pop stos adc cmp aam outsl dec js (bad) mov push int jmp xor fistp or or cmp mov leave shrl and sbb adc imul xlat push jl jno xor js mov stos lret xor pusha push mov jp mov or jecxz sti mov mov jmp fildl cmp jb sub dec xchg mulb aas outsb into push adc ljmp xor pop iretw fildll jl inc sbb in sub jnp out xor dec negl in push mov cwtl or mov fcmovnb test mov dec inc das cltd mov test pop or dec movsb fidivr cmp hlt inc jmp cmp jb arpl jno xor iret xchg and insl addr16 test andl fidiv ljmp jb sbb mov pop push mov dec xchg push stc aaa pop pusha jmp jle mov xchg in aaa pushf fildll mov movsl fildl push cmc insl popa or mov stc movsb cmc arpl es mov pop jae into aaa push fdivs adc sbb pop into int3 cmp mov pop (bad) and push push rcrb pushf jge fxch xchg jecxz xchg repnz movsb sub test mov mov lds lahf or xchg mov in decl out fcompp sbb inc inc mov mov pop sahf jle push xchg sahf aas xchg push push gs sbb xchg les jns cmp push leave rolb cmp lret and mov inc in xchg mov pop pusha sub add mov sbb stos mov call cmc pop sub pop and mov dec fsubrl inc adc in outsl add jecxz cli sub jp dec jae rorb add push mov and std addb sahf and push cld jbe arpl sub mov daa pop sub mov mov xchg mov rcrl pop push out daa jnp mov out cmp dec (bad) pop xor pop insb sub dec dec bound (bad) lods lds ficoml dec xchg push mov out leave fimull leave scas jnp stos cwtl (bad) iret xchg xor cmpsb sti sbbl mov or xor scas jmp fldt inc lds or test inc inc cmp jo mov push test xchg sahf pop test xor (bad) push mov mov lods maxps sub jbe rol xchg mov jb loopne xor pop inc clc jns arpl adc adc push jecxz sub and xchg lock stc pop idivb cmp adc cmp dec or sub dec orl jb sbb loopne jmp scas movups sub pop (bad) mov (bad) jbe sti cs xor adc cmp je inc pop imul dec inc mov pop in gs jg xor cmp sbb add add es (bad) xchg xorl and popa (bad) in dec js cmp jno pop add sub (bad) push inc stos push mov lret ret hlt push xor push pop out adc push push xchg mov push adc dec xchg jb div cmp aad and (bad) mov cltd add mov pop repnz dec cli bound les cwtl xor fwait adc mov mov xorb cmp jnp push push aad xchg les cmpsl sub pusha mov xor or leave pusha ficom mov adc xor lcall xchg dec out mov push mov mov test outsl fsts mov xor inc dec cmp outsl lods cltd repnz pop fdivl inc add jp mov pushf pop or inc or mov and xor add mov cli xchg cmp ljmp sub loope fcoms jmp pop push xlat das mov mov (bad) dec clc adc addl sub pop pop loop and inc sti cmpsb and jg cmp cli sub inc sbb fs or mov flds mov adc aas xchg xor hlt sbb xlat cmp or inc or pop std jmp dec sub (bad) mov out sbb inc or inc out loopne pop movsl xor or divl xor hlt ficoml ljmp sbb dec scas and das lods fmuls sbb fsubrs jg push call icebp into add test dec mov push push fcmovnu in enter xor jmp cmp andl inc call xor (bad) imul jmp cs roll sub push pop (bad) adc pop push sbb cmpsb pop adc test call pop inc jnp repnz xchg pop push jno jbe insl rorb or sbb shll pop (bad) out pop jne adc pop cmp (bad) xor fs mov or dec fdivrs cmp xchg in fwait aad sbb mov lret push fistpll lock movsb (bad) or jg std repz mov adc add adc stos sbb (bad) pushf pop mov hlt mov test les (bad) jecxz push and mov (bad) jl xchg cmpsl (bad) xor xchg push lret jmp add jp add es xlat or dec (bad) out push or mov (bad) push call mov (bad) iret out or and jg and sub xor jmp and lds sub lret call mov jb pop pusha fsubrs jns adc aam mov jmp xor mov mov lahf sub ss lret cwtl xchg rcl mov fcompl out cmp pop int mov lock cmp or icebp and cmc pop hlt jbe inc fs fildll jno in sti insl mov cmpl or repnz xchg sarb and xor mov mov mov cmc cli mov aad mov les lock insb mov lcall daa incl ss shl loop cmpsb cmp dec lret push pop fsubrl xor mov in jnp mov sbb adc jne xlat in pop outsl sub mov sub in loop mov ret call adc rcl or aas and sbb xchg push and cmp repz popf (bad) std mov pop mov cmpsb mov jl decl fmull or out dec mov int3 arpl push dec mov add mov push xchg movsb push icebp in mov sar addl dec dec scas dec dec sti test cmp sub negl and pop jmp test call decl mov cmpsl jg or cli in (bad) mov out mov sbb lods push jae dec aas push test xchg push sub sbb lods imul jno adc cmp cmp in cld cwtl jecxz lahf in outsl out stos cmpsb mov and mov adc inc jbe lods in mov (bad) pushf stc lahf inc xchg (bad) mov adc outsl outsb lret cmpsl bound pop mov push cmpsb (bad) sbb cltd pop add pop arpl or mov cmc out xor cs popf imul fcomi pop sti fwait pushf jl (bad) xor out or insl movsb push insb mov movsb jo imul lods mov lret or adc and test pushf mov insb cmp stos call cmpl push mov pop cmp cltd or sbb add dec out xchg dec mov inc xchg xchg shrl insb push out (bad) fdivrs or (bad) (bad) enter pop mov sub push or stc (bad) xor mov imul clc rclb insb jne jge subb pusha cld mov push dec push rcrl cmp xor ss lret insb or adc stos js cld mov xchg xorl xchg xchg lret scas lods dec pop test repnz fcmovbe pop in inc mov pop imulb inc inc mov pop repz fucomip (bad) sahf mov xchg mov fist fs or or add in dec dec jecxz fstl test rcrb out mov insl stos adc adcl mov pop (bad) push xchg popa or adc sub mov inc sbb stos into xor and int mov inc xchg inc xchg jae (bad) add or aad movsl cwtl int3 adc es inc push repnz fstp or out pusha and fsubl jecxz cmp dec inc iret mov cmpsl sub pop add scas mov push push sub pop push (bad) in mov push pop inc (bad) push fdivs jmp clc bound (bad) lods lret outsb add or xchg sti xor jg push mov mov xlat (bad) fbld iret inc mov in sbb xor mov rorl push cld sbb xor rolb or loop xor repz addr16 adc pop adc sbb and sbb pop jns stos cld jp fistl inc or inc arpl (bad) cltd push lahf iret xor and push add adc inc jne insl outsb stos test cmpsl add push int3 or int jmp enter pop xlat int enter popa and das xor repnz lahf mov push ds jge inc push lock test outsb dec mov popf xchg lahf stc or pop and (bad) (bad) sti in je out mov int3 add pop test pop inc push insb mov pop adc adc lods push mov pop jmp cmp mov adc fistpl idivl std fidivl cwtl mov and pop mov and (bad) scas cld push leave insl in sub push popa das cmpsb cmp (bad) movsl inc out icebp push xchg lock scas adc (bad) xor addl sub scas jp jle icebp mov mov or add hlt cwtl push jmp cld mov sbb jae lret jae (bad) push xor xor mov pop jl mov adc arpl adc arpl mov jns ss mov sub pop (bad) push movsl pop ja mov mov push lahf cmp mov je lock mov adc les pop sbb inc aaa xchg push pop or jo std add inc inc push ss sbbb fs cli adc sahf iret mov pop cmp jns pop movsb lret sbb lock mov test ret mov aas push lret loopne test xor push in and add push scas mov pop mov inc (bad) leave arpl xor xor inc sub xor push gs insb and sbb mov jl rol sbb js sbb fdivrs call fmuls int3 jg decb cmp adc std (bad) and mov int3 xchg mov jb movb and pushf in pop outsb loop push es ja jne cmc fist sbb call outsl xchg inc (bad) (bad) xchg into popa lret ds stos mov xchg fdiv ja dec sbb pop xor jmp sti fistpll dec dec pop pop or push mov adc dec add (bad) icebp sbb mov das xchg imul cld sar popa gs sub pop cltd lahf adc cld jnp mov inc fstpl xchg popl sbbl mov jl int3 ret push pop push fidivrl push outsl sbb lcall lds pop aaa push sti pop dec sub or add les dec cmp outsl inc sbb in fldcw dec sub mov sub inc lods jp in pop stos lods jae out sbb dec out sub push mov loopne jge sub push pop sbb sbb xor mov mov xchg nopl add xchg adc xchg (bad) mov inc lods pushf aam xor xchg sbb inc sbb xchg mov sub add (bad) call shl and cmp lock aas ljmp in insl mov xor cmc popa jle push int xchg and pusha outsb jno lods test gs xchg (bad) jp add mov repz clc xor sbb cmp push daa dec mov cli pop popa jne push add add addr16 xchg inc loop cmpsl pop and push (bad) mov hlt ror adc lea cmp pushf add cmp sbb movb and (bad) gs push (bad) jle mov aas idiv pop lret stos out ror js push jne and pop fsubp rclb mov loop rcrl subb jb pop andb icebp adc xchg push xchg jg clc loop mov int3 sbb in and mov icebp jl repz fild mull push fnsave sub pop insl mov les dec insl mov in inc cmc pop std dec repz xor sbb adc cmpsb mov push dec dec icebp rclb push out or es dec adc jg rolb mov insl scas xchg mov push jne clc (bad) push and notl push enter sar scas xchg imul add stc xchg adc push sub cmp xchg cmpsb add mov sbb sbb ljmp xchg outsl sti xchg jbe xchg mov mov and outsl xor in (bad) push adc push pushf in mov cmpsb or add mov adc dec xchg fwait pop pushf ljmp sarb jp inc out fstpt push jo mov dec mov (bad) and dec and jae cmpsl adc pop xchg add rolb and stos sub jmp mov aam orl les mov xor (bad) pushf jo (bad) in jle cmp (bad) pop mov or mov cmp mov and push dec aas xchg inc incb (bad) rcr or jmp mov cwtl (bad) mov mov dec lds jle lahf clc push sti scas jge adc lea lea xor (bad) push lea inc xchg aaa clc mov sub add sub mov out mov lods fdivl inc xor jecxz leave fnstsw push rorb imul (bad) pop mov sub cmp cmpsl fcmovne cwtl aaa xchg les sti jo daa aad jbe add dec in clc add pop mov jmp mov dec pop add push xchg xor ss add fwait xchg pop xchg cmp pop sub pop in or sub sbb cwtl lahf sbb adc sahf ror sub ret fidiv xchg sarb rorl jmp mov popf cmp fild mov fisubl in sti xchg xchg hlt cmp dec mov adcl movsl nop mov outsl and cli mov mov ds mov rorl lret cmc jne mov outsl xchg stc mov mov push mov cld dec dec pushf pop repz mov xchg jnp pushf ljmp test pop dec negb stos sub or stos push dec pop mov test mov (bad) repnz mov rorl pop push or inc std push sub inc loopne insl pop jl jbe jg jo add inc pusha iret xor xor popa test pop pop loope or addb mov (bad) inc ljmp adc dec mov out push sub push sbb in mov orl popa movb adc clc (bad) es xchg xchg fidivl cmp ret arpl xcrypt-cfb cmpsl and lahf jl rorb lods jl iret notl jp inc dec sbb or jne sbb inc fistp aaa push insl mov adc (bad) pusha mov cltd sub sub sarl mov ret push sti pop repz push in fs lods push jb dec dec and or push and ret dec add cwtl lret loopne cmp mov mov pop fwait insl or out xchg xchg inc and dec orl inc stos movsl xor out push add hlt adc inc jmp lret push movsb cs ds push daa cli popf mov scas mov (bad) sarb (bad) (bad) cmp lds mov sahf insb aam xor push lea inc and leave adc rol mov inc jnp ret sub in sub lea dec aam out push addr16 dec imul dec mov cmpsl inc fcoml int or int3 in or les ficomp loopne mov je cvttps2pi cli cmpl sbb pop pusha dec leave adc jl sbb outsl dec xchg dec loope push mov out push loopne repz icebp sbb xchg cmp sbb or inc dec repnz cltd loop pop adc ffreep pop inc fcmovne (bad) je enter pop movsl aam adc (bad) mov jge iret xchg mov push dec in or cmp cmp leave dec imul add jnp inc fcmove lcall cld out jg push pop fistpll lds sub mov mov test adc add (bad) jecxz mov add xchg call lcall push xor cmc push rclb cmpsb out mov dec mov xor sub xchg dec dec gs pusha inc jbe jne in pop incl test insb aaa movsb pop adc inc add pop xor inc jecxz dec dec (bad) push jb inc mov push adc lcall (bad) popf lock lcall jmp aad in ficomp push (bad) xor jmp cwtl cmp inc aas dec lret pop pop in mov ficomp jge mov mov pop push and lahf in mov popa adc cli adc cltd mov leave data16 mov aas movsl aas mov mov addl sub out push lret push mov mov int3 cli or and cli hlt lcall div subb and cmc mov pusha push in mov jno in cwtl into sbb jnp pop lahf mov lret sbbl jnp cltd pop xlat pop add pop lea out sub aaa xor imul addr16 sti mov mov mov outsb push sbb decb lret in jg and rcll add inc sahf leave sub loop gs ljmp lods movsl cmp and adc loope les test sub pop in stos and test hlt popa inc ja mov mov loop and (bad) (bad) mov prefetchwt1 xchg nop jb (bad) sti pop mov mov scas pop push les test test sub adc mov rorb dec and xchg mov iret mov test cmp jl (bad) lret cmp lret or test push pop rorb enter outsl adc inc scas mov in xchg push or mov dec (bad) (bad) jae (bad) hlt lret or (bad) neg cmp xorl arpl xchg or nop xor sub sar xor xchg cmpsb jp xchg mulb dec pop movsl and nop pop clc or fldt xchg sbb leave lret xchg aas dec pop ljmp mov xor xor xchg nop out (bad) jbe lret cmp pop add xchg dec sub inc clc mov adc cs popf cmp (bad) jb sub add (bad) pushl repnz (bad) gs outsb cmp lea push repnz fmul dec ret fsubrl popa (bad) push mov xchg sub pop xor cmp fs push sbb mul (bad) imull aam std leave jmp xchg insb jb xor js out test stc rcr sahf test or pop lods fucomp pop jns cmp nop addr16 sbb mov popa xor (bad) test add cmpsl pop pop mov nop hlt pop jne test test inc clc stos (bad) inc jp or addl mov jns idivl pop inc addr16 dec cmp cmp enter add lret dec imul mov jbe je mov mov and into out cmp fstps adc push fs daa sub bound iret (bad) mov rcrb int3 rcrl cltd mov xorb jl jno iret cmp sahf lea mov sbb loopne,pn or sub jno lods lret cld enter dec fwait dec inc xor dec inc inc cld sarl push out in push push sub mov aad cmpsl dec fidivr movl call push ficoml mov mov or or aaa dec pusha sub insl jbe fucom (bad) lock scas mov shrb jae aam test sub xchg jge aad push iret cwtl mov dec (bad) std (bad) aaa (bad) dec call sti sarl jo add fsubr push cli jno and mov dec ja jmp xor pop xchg pop loop and sahf (bad) cli ret mov es or jmp cwtl jne js dec clc shrb inc ret test and call dec lea call mov inc std push sar sbb ds pusha adc enter icebp jg xor incb fild mov sbb mov (bad) pushf pop jae insl in dec adc and pop fcmovne fs in mov adc call shrl (bad) cwtl jae push lret mov imul push (bad) repz xor pop sti mov insl cmpsb add and xchg mov pop sub push andl xor testb jmp aam (bad) aas out call popf lock push mov test xchg lea xor dec mov out fild in popf xor lods repnz xchg adc int popf mov lods xchg imul sbb (bad) jne jle insl daa cmp movsb jno adc sub movsl xchg stos and mov test (bad) jo lahf in jecxz jne jb stos xor push imul notl lds addl sbb daa leave mov xchg imul jns js inc and addr16 gs dec stc in xchg jecxz sub pusha popf divb push rolb mov mov pop sbb push (bad) dec mov pop movsb and xchg mov adc fsubrs outsl xchg gs data16 loope imulb jbe cli mov pop ret cmp rol ret loope dec mov push mov mov (bad) faddl xor jns pop ret mov in sarb jg cmpsb or ds loope inc into aam xchg insb fdivs xchg mov in out xchg push dec (bad) bound cli sbb sahf fnstenv int3 daa ss mov sahf cmp cmp jbe mov xchg inc pop push pop pusha pop dec lea sahf inc cmp pop cmpsb lret jp sbb dec fistp jmp xlat fbstp cmpsl dec mov pop gs aam lods mov (bad) xchg push out cmp sarl mov fild ror popf in pop lods dec fistl push adc sbb sti sbb mov jle je jmp sahf mov inc push push push outsl adc call ret adc xlat daa lods add (bad) push add inc adc aad push add cmp cmc jle fadds or add lea xor jmp ret jno stos mov in fwait inc test lahf outsl lret jno fisubl es sbb jg mov jg pop push and add orl mov xchg incl popa cld fbstp mov jmp in sbb push loope call push ret cmp xchg cltd sbb pop xor push shl fidivr lods or adc mov movsb mov push inc movsl inc push icebp inc mov cld add enter (bad) xchg push in in clc js int3 jle ja adc xor cmp inc jns mov sbb dec test xchg pop (bad) jne nop std xchg xor sbb addl adc xchg mov in pop mov sub and sub pop cltd jl jo dec (bad) int3 mov add jp ljmp push mov push pop or in dec xor xor out leave mov xor in dec imul into and mov cwtl popa test cmp sub mov fnstsw mov subl leave clc pop add das insl push repz sti cvtpi2ps push aad movsl subl stos or mov sbb aam cmpsb inc in sbb (bad) add inc lods movsl cwtl xor pop into ret xor xor jle inc cmp push or and xor adc jo test sbb stc xlat icebp pop stc (bad) sarl add out adc pushf (bad) sbb loopne mov jl adc es sub bound es jp mov add mov lcall pop push mov cltd mov divl jns pop ret cmpl insl cwtl insl fdivl (bad) fnstsw das add and sti into and jo pop out or push sub cmp or push movsb (bad) stos mov sti jns sti mov jle jo dec xor fadds fidivl cld int push add inc xchg repnz push fmuls jle pushf cmpb ljmp add or hlt sbb sbb dec cld mov xor fcompl (bad) cmp mov xchg push cmp inc xchg jl mov mov iret mov ss sub in stos dec dec xor cmp lds jnp pop adc mov clc ret mov loopne or mov jle notb aas arpl leave aaa add cwtl mov ds adc movb jo jg (bad) mov add das rolb cwtl shl (bad) rcr and add jns mov dec (bad) les loop mov out (bad) xor int insl dec xchg mov push mov inc ror (bad) div and sbb and mov jbe pop mov sbb orl shrb fnstsw int3 pop jbe sbb push adc xchg sbb loope xchg push sub test rcrl jl push and imul xchg cwtl pop (bad) mov loopne aas lds and cli xchg or dec sbb int xchg jp insl out arpl stos jp sub int emms dec push dec lods push sbb leave pop jae sub rcrb mov jle jns jnp into clc mov fs hlt and lret test fstpl (bad) addr16 and xchg test xchg jecxz int3 addb aad sub sub loop cltd cmp mov push cwtl cmpsb dec nop out cmp cmpsl inc or lods push jnp aaa pop adc mov clc mov lods nop jecxz xor outsl add dec add jne jns pop fsubl pusha cwtl xor jp sahf mov jecxz inc mov pop mov call hlt ja cmp call (bad) fiadd mov mov add (bad) enter sahf fcos addb mov or xchg js (bad) roll and fdivrl add stc dec sahf and pop dec jge lea mov or addl and lret adc sub pop int3 xor mov push lret sub and shlb daa xchg insb lds jo rcrl jg (bad) lock push sub mov mov mov daa mov cld push cmp mov rcr fs outsl sub add cmp fstps dec pushl cltd adc dec sbb adc test cmp or loopne jne mov jmp rol sbb roll out jno dec sarl imul push stos inc pop popa je xchg fistl shll jp repz fstps scas popf lret loop lods fwait (bad) mov cs in repnz add jle or cmp cmp sahf cs and dec arpl mov mov jno jae leave cmp or icebp sbb jge sub xor jg test mov loope out test pop jne bound cmp fwait andb fs add jbe jmp and push cmp lcall push jbe inc xchg in hlt dec jecxz pop adc lods leave adc mov sub and sub mov fsts inc pop add mov cld insb dec xchg add out dec push rorl inc aaa fisub dec or mov mov pushf dec test pop fwait mov cwtl mov mov push push xchg loop jb add aam push outsb testl aam xor cmpsb sarl dec out mov cmova (bad) aas dec pop out xlat (bad) stc movsb mov add (bad) cmpsl pop pop jae inc push inc add cmp jmp (bad) icebp sbbl mov mov pop aad sarl jno pop add cmp xor or jmp enter out lea jecxz aad pop adc jl push stos popa ds add popa xlat xchg cmpsb daa add outsl andl push cmp dec aad pushf sbb add data16 pop mov sahf push xor hlt lock push jmp mov (bad) and sbb dec pop lods pop dec mov sahf imul lahf sbb push cmc cwtl mov pop lods cmp test cmp cli pop in push lea das xor movsl lcall push (bad) cmp lret in mov mov cmp clc jecxz xor xchg dec adc xchg (bad) sarb xchg ljmp push cs inc xlat jne jae inc inc ret add cmpsl in popf or xor (bad) je lods sbb adc cli mov rep mov push pushf inc out adc inc lret icebp push repnz jg nopl push push cwtl xchg (bad) pop hlt jecxz push out adc std push add (bad) jnp mov das jo cwtl stos ja mov negb aad mov or pushf test xchg cld and sbb fistpl and (bad) add rcrl or out leave cmp push fsubrs lcall outsl mov fnstcw bound (bad) lods push stos xor loop movsb lret jge mov arpl in leave scas (bad) aas jg jnp adc enter cltd pop adc jl dec fstpl mov sti xchg sbb sbb inc lock add push xor xchg (bad) js lret insb sti fistpl xor sub xchg and outsb or aam cmp xchg adc xor inc xchg mov sarl cmpsb testl insb clc mov insb (bad) out rol push pop inc sbb leave cld add sbb lods incl jge push xchg sbb bound lcall les sbb push jne test lret and lret test or jae js data16 xchg testb inc call in lods lock sub lds adc mov aas dec mov in add cmp lds insl stos out loope jge clc test lds and jbe ror out pop cli addr16 test enter into and inc push or adc cmp adc xchg dec and or xchg outsl adc cli cmpsb inc pop icebp (bad) push pop pop iret test push rclb mov nop mov push je mov sti adc mov push mov in jne sahf icebp ret mov popf push sub xchg loope cld xchg adc cmc ror dec (bad) xor jae ficompl adc add push push notb and aas clc push pop out dec lock push pusha jl sbb jae fidivl add dec jae xor sbb jle inc sub xor pop mov pop push cli dec inc imul xor dec xchg add sbb mov fisub and and mov cs mov jae sbb cltd xor sahf jo andb (bad) mov lods dec jle or or repnz push clc push xor add sar leave jge in lret xchg fnstenv xchg jno mov bound lret mov int3 add fs mov aas sub add scas and iret jmp lahf nop push or xchg out nop pop cmp mov adc mov je xchg adc shll jnp sub push lret test or adc dec dec (bad) mov jnp out mov jecxz inc and or mov fsubrp in sub imul cli cmp push mul test in aad mov je popf out or xor call or bound std mov subb xchg cmp lret jb cld fwait sbb scas dec bound xor notl cmp mov roll psadbw push pop jp rorl movsb adc cmp (bad) jmp sbb xchg lock mov (bad) es btc (bad) fidiv std push mov adc (bad) mov (bad) stc popa xlat jmp or and je lds sti mov lcall (bad) scas (bad) mov rorl push in mov dec jmp sbb xchg push pop pop push loope inc out out fnstsw jo inc dec cmpsb mov fist addr16 dec insb dec sub mov cmc xlat adc push mov scas cs inc scas popa cmp mov xlat cmp imul stos sub lods xchg stc mov incl dec sub cld movsl insl movsl xchg xor mov mov xlat cmpsl inc lock xchg dec (bad) inc js test lret and insb ds leave pop inc add mov (bad) enter fistp or popa lods repnz adc and subb and xor xchg imul push sahf ret jns pop adc jmp sti aaa aam push enter lret (bad) sbb or cmp iret pop cmp shll xlat (bad) adc dec jbe pusha les data16 inc mov inc adc pop and mov lock pop jmp sub fwait fwait push jne sarl stos cmp jns adc subl add nop aaa xor enter ret cmp push cmpl adc daa stos push mov les int3 sub in adc push and lock cmpsb cmp mov inc lcall mov fs xor in sub fldcw or sbb xchg sub adc fwait mov jnp inc wrmsr aaa imul inc std xchg push jle or inc jecxz push in jge adc ficompl adc xchg xor sbb sbb pop ret incb inc lock pop rcrb jns mov stos sbb enter mov sbb cmp in shl push test mov xlat mov dec xchg inc xchg stos pop es enter bound bound or aas in cld out hlt mov mov ret popf ret sub xlat mov xor pop ds xchg fdivrs mov mov xchg jae adc adc xchg sbb adc es shr sub cmp cmp xor aam mov cwtl cmp adc and jg pop jns stos push adc cs test repnz dec aaa mov jae push scas pop jecxz inc push (bad) push fisttpll std les mov add cli test add out inc xchg and jl mov xor sarb xor les imul lcall call xchg sbb (bad) int3 pop in or push mov icebp test push or sub rcll cmpl aad mov popl pushf cld push xchg aad fstpt xor lahf aad mov push test cmp aas in jmp test sbb push cli lcall in addr16 mov xor out les mov loope lods or (bad) xlat pop pop jo (bad) in ja xlat push in adcl pop fimull ss or xchg shlb shr fadds jbe movsl js movsl int pop fstpl adc test out push popa xor dec lahf push lods cmp push add into xchg rcrb das dec or lret test addb enter sbb clc stos stc lret xor inc mov call xorps scas iret pop sbb push insb cmpsb jb or (bad) (bad) aam clc hlt or push fcmovnb pop cmp or (bad) (bad) jmp pop jge jo (bad) and mov std cwtl pop je arpl jp shl cwtl cld in je ret sbb and lcall adc loopne insl mov xchg cmp out mov sbb cmp sub mov je sahf inc xchg loopne mov cmp xchg out sub neg push mov and push test push and and xchg mov sbb dec adc sbb mov sbb das lds enter or or jg dec out (bad) fbstp cmp pop xchg ja cmp iret out sbb push in es std repz pushl cmp push fucomi aaa mov mov (bad) jp lret or loop fidivr sbb adc icebp nop outsl rcr call test push push xor out cmp or add xor mov ss sub and dec pop out icebp es mov scas xchg push dec aaa xchg loope add out dec dec mov push loop fucomi mov sub inc pusha sbb int mov data16 jnp loope repz lret idivw mov cmovp in xchg add rcll dec dec (bad) lock repz jo pop cli add jp jg scas or inc out pop scas lods push sub imul xor mov fdivr sub cwtl push inc adc xchg enter (bad) dec and mov int push and adc cmp out cwtl adc shlb mov inc mov fisttpl ficompl iret xchg inc sub int and mov js push xchg or adc pop addr16 sahf mov sub mov sbb dec cmp xchg mov push xorl loope jbe js ror fidiv mov and sbb pop in out rdpmc dec pop je arpl mov mov addl cmp cltd cmp push and mov (bad) imulb adc (bad) mov sub (bad) xor xlat push out (bad) in (bad) mov inc subl sbb lret loop adc es inc and mov xor push inc cmp sti mov bound mov pusha xchg mov sbb sbb or jne daa scas daa push or adc pusha mov addl mov (bad) pop mov cld jb sbb lahf repnz pop push out xchg ficompl in pop in add pop sub leave sti dec xor jne stos jge jno shll xor inc inc lcall pop leave inc call xor iret lret add mov lea sbb xlat mov inc faddl fildl sub xor jne pop jge cmp inc mov iret add (bad) jbe sahf mov repnz out dec out ljmp xchg mov jno jecxz mov andl mov mov popf adc rclb cwtl xchg pop imul es lcall lock and fisubrl pop int mov pop xchg jb jl addr16 mov ja iret mov sbb mull daa fiadd call adc neg mov dec lret out and inc push stc scas mov mov pop in jle pusha lock add mov pop loope ficompl outsb adc pop lea mov pop inc mov jg xor lea out xor mov mov loop adc xchg test (bad) push rclb enter idivb addr16 jmp insl (bad) sbb dec mulb add or mov xchg push inc jns out shrb mov adc in dec pop sub mov movl lea lock test add fdiv (bad) jo inc lods (bad) ljmp cld in psubsw push dec xchg ss sub and add jne cmpsl ret rclb pop and xchg jmp in add fadds mov dec jae inc dec cmp outsb mov mov push enterw insl lods ret mov lock mov mov aas sbb mov xor or mov insb add (bad) mov daa mov int3 das not adc stos fdivp xchg stos js es cmp (bad) fild mov cmp fnsave (bad) sbb fcomps sarl xchg add imul insl insb aad dec mov loope sti fs xor jno test (bad) xchg cmp inc data16 int3 in test cwtl xor out push xor cmpsb xchg (bad) fist dec xchg (bad) xchg xchg rolb dec adc movsl outsb mov mov mov loope add dec cmp cmovno test add sti das dec aad stc jmp stos xchg arpl lret bound lods cwtl inc jns add stos sbb fs push arpl and dec std cmp xchg arpl ret test add pop cmp mov xchg insb xlat daa (bad) and and mov sbb sarb mov in js outsb adc sub aam rcll in and and lods xchg mov or ljmp pop js dec adc push fsubr push dec into aaa xor push ret xchg sub pop inc loope adc outsb push cltd pop fiaddl or sbb fcomps cmpsb data16 loop xchg xchg sar lahf push mov lcall loope mov (bad) inc psrlw scas movsb jns je icebp inc popa test mov sub inc xstore-rng cmpsl add lcall xchg or insl jne sub pop sbb jnp jecxz in addl dec push and addr16 inc sub setno idivb out cmc subl aam bnd add (bad) xor arpl sahf ror in inc jnp push rorb push push cmp pop icebp (bad) aam cld mov je outsl inc push lahf loope std notb mov xor or or ror or fist divl mov pop into ficompl lahf xchg xor jecxz mov inc arpl adc cld loopne adc sub jns add cmp add fistpll xchg xchg pop lds xchg pop inc daa fiaddl cltd in pop pop mov sub loope sbb fistl sbb jno jno into stc and sti int mov jno out inc cli or or push inc loopne jmp xor or daa cltd nop pop xor outsl inc int dec fidiv cmp into add addr16 out pushf jmp lock push cmp das int ss jo imul xchg inc rol mov pop scas sti jp mov loopne xchg dec ja xor bound xor enter mov bound in daa dec loopne lods pcmpgtd xchg sub ret xchg sub cmp dec pop jb cltd fmul test inc mov jns (bad) std xor xchg je movb and dec dec scas or mov repz add dec and aam mov lods xor xchg jb xchg popf mov push sete movsl mov jb sbbl add adc adc cmc sbb xchg push mov popa mov movsb cli or lods (bad) lahf dec and add fsubl roll xchg push popl addr16 cmc idivb push adc jnp lret xor mov neg inc pop bound inc call das mov push xchg fsub notb test mov or xchg cmp dec (bad) or dec xor cltd pop sub arpl and rorl jp mov test cmp pop mov movsb lods addr16 dec cmp rcll mov in cmpl pop mov loopne push adc mov push and outsl movsl ret sbb mov xchg iret sub xor or mov pop inc mov outsb and xchg jge in fcmovu ret xor jp aam mov rcrb inc sahf ja add cltd test rol insl (bad) xor lret aaa push mov dec sbb lahf pop adc mov out xchg xchg rcl pop pop sbb add nop addr16 mov adc add jl or cld pop push imul xchg pop cld mov and hlt into cltd les dec ds xor outsb jae shlb std jno es and test insl cmp and aaa mov fsubrl xchg inc push mov mov aas std test mov sahf (bad) lea fmul mov mov rcrl xchg jge (bad) jmp dec mov cmp mov adc out ja sub movsb mov out nop mov fmul sti jns sub int or or pop push enter sub jnp je in xor and add pop enter fsubrl mov mov mov mov mov bnd fstps cwtl stc (bad) mov jo int3 mov mov mov divl pop inc adc fcomps and (bad) pop add inc push es (bad) rclb clc adc sub fsubs aaa add loop cmpl dec fdivl js call (bad) jle scas and clc in adc mov movswl aas inc ret and sub repnz (bad) jo pusha pop aaa inc jl jo in push mov dec jnp leave lea lahf loopne mov sub mov dec in fdivr mov dec jb inc clc loop insl cld push dec (bad) in (bad) mov int out mov bnd rcrl ljmp popa push adc mov and mov icebp sbb bnd sub les lahf lods loopne fcoml icebp pop sub inc sbbl mov mov add lea push mov or adc push sub ret push test adc xor into les mov or sbb test inc cli pop inc out out out push bound stc adc aas popf test dec (bad) fidivl rorb ret sbb ficomp testl cmp xchg cmpl add inc cmp mov js cmp aaa adc std aad xchg inc push mov cmpb (bad) xchg (bad) sub lahf and pop adc mov push pop pop mov cs divb cmp faddl xchg movsl outsl shr ret mov js mov xchg cwtl fnstsw fsubrl or mov cmpsb sahf push roll rcl pop and (bad) jne dec stc jmp inc sbb loopne aad or out (bad) add (bad) repnz out push mov push push dec cmpsl or jno int cmp add cltd cmp mov mov fstpl cmp es aam mov xor mov fstpl lods xchg clc jp and mov movsl loopne mov jmp jno aad sbb xchg push xor dec jmp sub pushf cltd mov jmp cmpsl adc jg out push push and jbe out jns nop xor es scas repz leave (bad) sub dec mov jle mov sub clc fdivr int sbb mov (bad) aam iret or daa out mov mov sbb sub jbe (bad) push leave int mov test popa loopne lahf push psrlq push fildl adc testb (bad) mov xorl pusha nop push or cs lds push aas adc test es (bad) mov test clc nop call or sub aam cs hlt ss add les pushf int jge gs out pop insl dec xor cmp das add sti push arpl pushf xchg insl aaa (bad) ljmp push icebp adc pop ret in adc mov (bad) aaa add push pusha ret push mov xchg ljmp into mov ljmp cltd fs jmp sbb xchg in sbb imul mov ds leave popa fwait adc out aaa and sti loopne xor push mov fbld nop mov jp fwait int out in push or out stc aam in inc pushf pop insl or ret pop jp cmp mov jae (bad) lahf xlat (bad) sub dec sbb sub cld pop aas sbb js and insl mov test and jmp movsb popf in dec sti lods in out repz inc into dec mov addl xchg out and ret addb rclb lahf mov roll jmp in cmp cmovp or xchg cmp or (bad) das or mov scas fnstsw mov dec push sub mov mov arpl cmpsl repz jb mov sbb out fdiv push push daa lcall bound mov addr16 xchg cmp xor addl dec adc cmp sub das inc addl imul adc lods inc pop das mov cmp mov mov mov adc cld fldt das cmpsb rcrl in stc aas mov ja stc jb (bad) dec mov jb inc loop add cmp pop sbb push xchg push fidiv pushf dec test sbb (bad) shrb dec fcmovbe lods rcll jne mov or mov cli cli and rcrl push repnz push push dec adc leave test ficomp fmull and and pop sub or jl xchg out pop rcrl xchg and or sub push mov mov iret xor or jae jnp int gs (bad) and lock (bad) mov adc out dec test cltd mov gs inc xor xor in jmp and out jg fdivrp dec inc (bad) int push cmp mov test lret rcll mov (bad) fisubr mov xchg (bad) hlt rcr jecxz dec je xorb dec mov lret sub icebp out or sbb bound cmp or jne gs push pop jge cmc xor xchg lret dec inc add repz insb mov pop jmp adc scas mov out lea jbe xlat jl leave mov pop pop cwtl mov (bad) (bad) outsl test lret dec cli push inc (bad) in and mov cmp out pop leave push (bad) (bad) repz mov sbb jb push or add mov or movb pop in cmp clc pop fsts or aaa jge xor ret xor (bad) cmpsb and and scas lods lods (bad) push jo lds aas movsl pusha xchg xor sarb xchg or pop les scas sbb push or iret jbe int3 sbb cld add dec aad cld cmc mov cmp xchg lahf push fs push or dec mov ret les push pop jne and jbe xor push push es jb push stos lods (bad) (bad) jnp fbld push fcomps mov mov mov data16 xor movb test jae sbb push fprem lock pop sbb icebp sub push clc out mov std pop shl xchg test jmp mov bound pushf push jne ficomp nop or push fisttp (bad) test mov inc stc mov push xchg jo incl fild push pusha inc scas mov mov (bad) dec rcrl mov pop popa inc sub std (bad) aaa sbb (bad) fldt cmp int3 adc test and or jno nop dec hlt cmpsb mov xchg pop adc push addr16 (bad) mov inc (bad) iret xchg mov ja movsb scas movsl (bad) sbb adc mov mov dec lcall pop rorb inc jle test adc xor je mov adc shr comiss mov es push ds fnop xchg lahf test lahf xchg jge inc xor mov adc jge fwait bound and push or pushf xorl adc mov add or sahf orl aad mov jp inc xchg jns loop pop jnp or or (bad) stos mov movsl sub repz ret xchg pop dec pop imul cmc cmp jmp sbb mov mov add gs ret mov xchg insl testl rolb sbb gs adc outsb out mov cltd add fldl2e lods add cli mov fcmovb mov dec add xchg mov data16 xor mov push cmp adc ja das fs jl clc popf faddl cmp popa sub adc and inc add sarb sbb rolb stos clc mov xor inc mov jle xchg cmc pusha mov adc or in cltd cli or addr16 sub out mov xchg mov pop mov addr16 shll xchg sub mov outsb aam sub xchg add mov jecxz idivb and fimul xlat mov inc mov std push sbb and dec cmp sbb orl cmp loopne sbb push jno sbb or sub out scas cmp or ja test lock fisttp stc fnstsw xchg ljmp push sbb sub mov sbb in jbe out push test push ret push ja push shr mov je iret xchg test pop scas int3 dec add sbb lea jb cwtl inc lret cmpsb inc adc out loopne jl pop stos dec mov jecxz (bad) xlat fnstsw cmp jne pop ss sahf sbb insl (bad) mov (bad) jb lock xor jno stos push cmp movq push inc push addr16 and cld loopne dec in out movsl lret in fidiv jnp test pop xchg movsb mov hlt iret hlt sbb jl sahf pop jmp cmp ret fistpl fistl dec pusha mov jmp sarb lcall leave dec mov jo add push xor fiadd lldt in cld xchg add mov loopne jl jae inc xchg mov jl notb scas pop outsb pop sti cmp xor xchg mov sbb and scas lods mov ja enter repnz pop sub mov adc sbb test push arpl cmp pop xor (bad) pop and push push (bad) iret test test inc xlat popf adc mov adc mov ja mov add xchg push or add loop adc sbb ffree inc imul dec popa push sahf adc or (bad) insb push sahf dec push fmuls cwtl jmp add xor popa sbb mov cmpsl mov pop imul fistpl imul mov dec pop mov mov addl cmp inc sub sbb push and outsb clc aaa out aas fistpl add lods adc adc les imul jno test add push mov adc push enter pop mov jne or jmp sbb mov cmpsb mov lock fcoml xchg or jno fcomps das (bad) stc push dec xchg mov xlat loopne mov imul cmp (bad) fisub outsl hlt loope jmp xor cltd jns lret and rorb sahf js aam cltd pushf sti lret loope pop dec dec cmpb (bad) mov (bad) push gs stc dec ja dec sbb xchg dec push add jle add push or cmp lcall mov into test adc inc out int3 js (bad) jns inc (bad) aaa or xchg lea push lock xchg pushf push mov cwtl cs or xor (bad) xor add push pop sbb ret daa sub add push rclb cli cmp aam mov mov add clc push (bad) fimull inc jae mov imul outsl scas les push mov lret leave inc add (bad) cmpsl rcl in lods cmpsb lods shr xor jle movb aaa mov cmovs and repz inc (bad) dec loope popf dec lods (bad) xor push mov ret fsubp les (bad) (bad) in es fcoms cli or and in pusha push mov xor ret lret je push or popa inc jne xchg mov (bad) fistpl ret pop mov out lock ljmp dec cld mov in xor dec dec pop adc cli jmp jo inc or jecxz pop cld data16 sbb jbe and cmpsl push lea fsts mov mov inc int3 daa movsb mov cltd xor mov daa inc into xor mov adc push fstpl xchg mov adc test orl xchg test fisubrl cmp std push subl dec pop sarb pop int out inc das enter mov mov sub sub sub ficoml adc js dec pop xchg mov gs push lods push xchg lret shlb and (bad) mov fcomi repz and pop leave imul insb dec adc repz or adc sbb and test dec test sti std inc pop pop xor bnd scas mov cltd rcr hlt mov jl lret (bad) sub ficom jae stos pop mov loop aas pop xor outsl lss in push dec inc sarb mov mov sub mov imul cmpsl pop fdivrs scas adc cmp fnstcw adc xchg push (bad) lock push dec dec xor cmp lock xchg jbe divb xchg xchg call mov mov hlt or fs mov arpl pop das clc xor and mov sti movsl dec (bad) arpl sub add mov std decb movsb jb gs mov sbb inc pop mov jp pop or pop mov gs scas push shr test movb sbb adc dec sbb popf std mov test notl dec sbb sbb sbb fs fmuls add scas adc or sub inc dec mov and push scas shlb jns mov sub jmp and mov or jp (bad) push ret lods rcll popa loope iret out fidivr jecxz sub addr16 cwtl pushf fwait inc adc lret adc in inc bound jl outsb jg shrb scas jns ret nop ljmp add pusha jns pop out clc lock jne sti std xor lods sub mov fcoms mov hlt outsb lds mov xchg out inc or and dec outsl (bad) jne push sub jecxz mov clc adc lcall cmpsl lds lret mov sbb loop daa jae,pn lds xchg pushf mov mov sarl les cwtl sub pop sub les hlt dec cmp jge xchg jae cmpsb cld xor sbb or mov pop arpl sti inc mov mov jne int3 and push movsb sub mov movsl cwtl rorl clc rclb fidivrl inc jge test jbe aad (bad) jl rcll test mov out imul test lock cld ret test sti movsb xchg out inc dec jae fidiv inc in mov and jle xor insl fisubl cld lret and fmuls neg xchg and xchg push pusha jge fs bound mov mov dec xlat xlat pop mov gs (bad) lock hlt pop dec xchg mov jnp sub push movsb or mov cmp addr16 sub pop cmc lods cmc sbb jb dec mov ja add ss iret (bad) pushl mov push sbb (bad) push adc imul fld pusha (bad) scas shlb dec mov test cwtl ljmp cmpsb dec push sbb out test push pushf push test daa pop arpl ret and mov lock shlb mov xor sub loop cmc mov (bad) in mov ret shrb adc ja or xchg mov cmp es (bad) mov or push scas int3 jp add add xchg mov lcall bound push (bad) or lods ss mov in pop pop cmp lods adc loopne cmp adc push ret dec push pop ret jbe jno aad and dec adc rorb outsb or mov cmp mov rol (bad) cmc inc jb or std (bad) mov sbb repz sub repz loopne addr16 mov pop arpl test jmp push pushf push push and in lahf rorl scas jmp int mov lcall stc xchg fistpl iret inc pop fbld push adcl add aas out hlt into mov loopne add hlt sub popa leave and dec xor push xor xor daa clc mov sub jne mov mov test xchg outsb xchg mov mov mov addr16 jecxz push std xor divb push cli xchg in int iret out outsl inc lea (bad) icebp test pop jno andl or idivb jle sub int3 cli pop loope outsl mov push lcall fdivrs add pop mov pop cmpsb call mov loope sbb lret lods sbb cmpsb inc add lods lock jmp dec clc inc jle sti scas dec add inc pushf push mov adc mov or dec xchg inc pop fstps add xor shrb pop fstl sbb push adc addl and sbb fisttpl xchg lcall mov repz mul aad sbb or lret adc pop jecxz leave scas cs mov and cmc lea mov jb mov dec out adc inc je inc arpl insb ret mov mov scas divb call rorb inc mov mov lret sub stc or (bad) sbb xchg or pop sbb sbb aaa hlt adc sbb mov sbb mov mov dec sahf dec pop daa mov js mov mov (bad) push or lods ljmp data16 mov (bad) xor xchg fs xchg jge out sub jle push mov popf xchg mov dec icebp xor lcall jno scas into pop xchg and fs dec and ja mov sub inc aam jb dec inc outsb jge pop sub and sbb rorl shrl sub jno jge mov call incb repz sub add loop cmp dec dec lcall movsl or jo lea jmp clc sti push out in hlt jmp mov xchg in mov adc pop fistpll or and loope add test jae dec xchg xchg mov test xchg out aad out ret lods test (bad) out sbb or mov lods xor add cmc push jns xorl ficomp mov fisubl or int jne addl jae pop ffreep mov sub in movsb ljmp lods outsb and xor sbb sub test cmc mov mov fcmovnbe and fdivs or sub inc xchg (bad) add ja dec and xchg pop mov cmp loopne and int in push cmp les popf or outsl inc (bad) sahf sub enter rclb sbb mov lods mov push movsl sbb pop mov out or and jle pop popf add sbb jns mov cmpsl aad negl cmc pop leave outsb or out test aas ss push test sub movsl dec je jo jbe sbb ja adc sub inc xor xchg imul xor xchg push lcallw jl,pn icebp mov jno xchg mov push sub fdivr lds xlat sub es pop jle idivl fnstsw xchg ret pop (bad) mov push inc sbb mov pushf dec dec sti (bad) cmp sub ljmp push mov lods movsl out pop or scas lock (bad) lock or xor lret jge clc repnz jae mov dec popa add leave and push adc xor cmc imul lret dec ficom dec dec jecxz xchg cmp sub addr16 and push mov sub xor in int mov xor pop cmp mov and sarl in dec xlat rcrb add mov mov xchg cwtl int incl (bad) mov push jnp in repz push stos pop mov shrb pop stos sti in sbb pop aas mov adc fcompl pop cmp fdivl mov sbb fimul ror push bound dec out adc sbb adc in pop test (bad) in or xchg mov repz inc and push jb add loopne xor push mov icebp icebp js or sub ret call maxps cs cmp sub add jg lock mov cmp pop push cltd out push rol mov push test popf outsb mov rolb jmp sbb push cs add dec and in je mov push push subl or pop hlt mov adc add cmc (bad) mov (bad) pop daa scas (bad) mov gs leave arpl cmp imul adc scas or inc pusha negb pop stos add movsb mov adcl (bad) roll jnp aam int3 sbb out mov movsb mov aaa sahf pop out repz and xchg mov fidivl cmp pop xchg fsub jl subl mov loop addr16 push scas adc xor xor pusha in cmc movsl sub xlat cmpsl inc adc mov stos cmpsb mov iret repz cwtl jge popa in pop mov push mov aaa stc pop gs jnp icebp lods jl mov psllq psubsb inc sub and shrb popa add dec imul lret fidiv jno add call xor mov dec push mov inc addl enter lds jne adc add arpl int3 hlt rcl mov lahf js fsubrs dec jbe repnz mov push pop add out fidiv pop mov enter jmp inc cmpsb jo test gs repnz or cmp push mov dec popf inc lret jl enter daa xlat push jae sbb jb mov push pop pop ret mov in (bad) imul jae rcl cmp jge dec mov test mov sbb xchg in popa jae clc das ja sbb jns aaa pop lret nop mov fs (bad) pavgw aam cmpsb lcall pop mov xor xor in clc scas and and fnop xchg adc imul bswap stos icebp lret and pop inc stos xchg mov fwait mov and lret inc ret pop movsb enter stos mov lock push ss or arpl and das push push scas push cmp push dec fldcw rorl (bad) call mov jge or inc and sbb pop pop sub jp insl inc add jp dec bound xchg xchg in adc or movsb in enter cli scas dec cmp (bad) xor jg arpl mov pusha cmp xchg dec pop push adc mov pop gs adc imul sub add lods push jne ljmp and loope call sbb in jb jl mov adc fistp repz sbb sbb cmp (bad) fidivrl xchg in sub xlat inc or aam shrb insl add popa ret clc pop add push inc stc jg je repnz adc loop mov jmp or in popa mov aam icebp add inc lahf dec sub pop or ljmp ret or pop arpl (bad) mov jg push out cmpsb ret jbe fildl arpl mov adc fcom jne and (bad) test sti xor outsl push inc idivl and inc addr16 in clc mulb movsl xchg xchg out (bad) jmp lret pop xor xor inc sub lahf pop lahf mov roll adc js mov repnz xor lcall lret inc xor mov (bad) sub cmp inc (bad) push data16 adc je popa cmpsl mov pop push ror push xlat push xor or or out aam cmpsb or jge push jno clc push mov addr16 xchg adc and pop fsubrs es or mov les xor data16 dec sub xchg in push setnp insl outsb aad adc lret xchg mov jns fdivrs fdivl jle or mov loope je cwtl lcall inc mov sub cmpsl adc mov sub push cmp xchg mov outsl popf mov sbb fwait or test and out mov imul sbb gs mov pop fs push xor xchg rorl test in jns xor stos cmc sub dec and or js mov repz loop fadds pop incl jge inc lods sub imul and adc push pop jnp inc adc popl adc into jb scas sub jbe mov std (bad) test xchg push pop mov jo adc dec out aaa js aad (bad) adc lock inc iret (bad) fcoms mov arpl (bad) imul lahf fsubrs test jae aas mov fs sub jg,pn xchg push cmp sbb push fmuls in inc jae inc into ja leave cmp pop scas add push mull mov sub jns test dec popf shrl dec jbe jb add mov jge orl mov int aas dec cmp xlat cmp inc mov sbb add div add aad arpl mov and xchg movb mov fstpt cmc sub add adc hlt pop cmp ljmp push mov inc sbb lods out arpl dec aam xchg dec cmp arpl test xchg enter mov das pop movsb sub mov sub and fimul fucom popa adc and mov negb shrl push xchg sbb scas cmp pusha gs je jmp mov mov push jbe iret mull ds mov jnp jno add xchg outsb xchg subl pop imul addl adc inc push scas lds stos and jns cmp push dec out xor and rorl adc das xor mov or pop inc add xor aad imul ret aaa jno dec (bad) ljmp mov int3 das mov adc fildl je cld testb jne or dec sbb iret pshufw notl mov dec mov or repz (bad) dec push mov sub push add clc imul or sub jbe mov bnd in sbb nop cmp out mov jmp into cld adcl iret xchg sub mov lock test lret outsl into cltd das push sbb xchg sub rcr and mov add pushf push test sbb lahf clc jge cmp or add lds iret dec int3 mov daa sub push mov fdivrl mov ret les or in cmp aaa das mov cmp dec (bad) ret out cwtl (bad) dec push lahf out push sub ds pop mull push mov sub dec leave dec xchg pop inc xor add pop mov mov add mov dec sbb jp icebp test lock insl sti add daa push jbe dec cmp cmp cmp mov imul pusha stos fstp dec lock mov int3 ja je sbb push or xchg sub push pop adc gs cmc lds dec sbb sbb sub cmpsl mov or cltd mov cmp xchg sub mov sbb cli xlat sbb or mov pop in or and jl xor mov dec bnd rcl andb ret scas pop cmp gs xor mov or xchg push in dec dec mov fcos lcall xchg out in add pop inc cmp xor cmp jns repz mov dec pop nop bound xchg xor cmp and dec push add dec idivb pushf in pop dec push mov inc aam xchg popf outsb cmp xchg jmp sbb cmp fstps jg push sub sbb fisub imul lea inc rol dec out push pop out cmp cmp inc xchg mov mov popa das in movsl fadds push mov mov jecxz mov push gs dec in insl fs int3 xchg jno pop pop adc (bad) repnz lds mov adc mov cmp sub xchg pop outsl cld xchg sub in outsb cmp inc adc sahf test push push dec icebp addr16 cmpsl lea sub ss add addr16 pop ret xchg jb (bad) je enter and lcall mov push push cltd (bad) adc imul or das mov andb add into (bad) or sbb lret push cmp pop mov push mov loope call sbb mov leave in add add nop inc ljmp dec push flds sahf sbb mov cmp loopne sub mov xchg mov aas inc add mov cld or xor data16 push mov int3 sbb jge push add dec repnz cmp into cmc fistpll inc xchg (bad) les push and popw cmpsb adc hlt jo add jge lret xchg cmp xchg xchg pop stos aad out adc push mov xor or lret jle cld pop dec insb push add cwtl mov inc js repz xchg pop jl push (bad) add lods out imul test std in (bad) lock pop push fs xchg andl test rclw pop into inc dec inc mov pop scas xor mov pop adc inc scas (bad) int3 addr16 inc xchg mov inc in insb scas mov call cmp push mov add xchg mov pop adc mov dec cld lahf lret int3 xlat (bad) cmc add push cmpsb mov fsubp std dec mov mov xlat das bound inc aam and popl les mov jns roll push push test sbb lock cmp inc sbb cmp fmuls (bad) dec add sub pop mov jbe push lret ror stos xchg sub add xchg out movsb notl xchg imul imul ror add jno lcall je les and or inc sbb ds bound pop adc test ret inc je mov (bad) push mov push adc loopne sub fwait cvtpi2ps std xchg pop lcall pop jp out idivb and arpl sub push popa push fimull movsb loope or rcrl in mov or out push inc cmp (bad) sbbl sub aad call xor add lock inc push shrb xlat cmp or cmp jnp inc dec mov enter sub push mov pop ficom push fwait mov cmp sahf mov std hlt hlt push mov fisubl ds sub adc gs into sbb outsl cmc cmp sub xchg or or loop sbb mov xchg fcomp push mov in out pushf inc leave int3 sub mov mov sub loopne xor add inc fnsave loope mov pop mov dec stos adc pop in add dec shr push insb add xor cwtl cltd sti xchg std dec pop mov mov mov jmp and mov mov (bad) mov gs xchg sbb pop add test sub aam fimul push call sbbl or dec push leave repz xor xchg sub test mov pop pusha je je inc outsb jns pop or arpl lods loope sbb dec jmp (bad) dec decl dec shr jle push lahf pusha (bad) cmpsl adc int3 movsl mov out popl or test and mov pop or shrb in jle mov ss jl ficoml mov cmpsl mov lock pusha xor mov sbb lds push das cmp xchg call jg fiadd ljmp ds stos add jbe dec fsubrl hlt lock mov xlat testl int3 add pop (bad) std iret sub rorb mov fcompl lock xor push fstp rcl dec add (bad) gs push push fisubl push movsl les aam insl sub test mov sarl add pop (bad) cmp aam fstps loopne out push arpl push insb xchg cltd jl inc cmp aam out jecxz mov inc dec pushf out bound outsl lock (bad) push es test test icebp hlt and xchg jno pop gs and stc xor icebp movsb mov fld aam pop (bad) mov jp push or xchg inc loope cwtl mov cmpsb xchg add xchg hlt test sbb dec sbb (bad) mov es mov push adc roll (bad) outsl inc fisubl lahf dec cli int3 mov ss aaa mov or adc mov push push int jg imul stos shlb adc (bad) aam sti arpl mov clc dec pop subl mov adc stos aas std lds cmp mov inc scas std adc sti das cmp pop mov leave arpl (bad) xchg stos jb inc and mov (bad) cmp push mov adc pop es mov sahf test gs mov cwtl sub je,pt fwait add fmull (bad) xchg (bad) jge scas mov int3 and mov repz mov mov or xchg jae std inc js xchg mov insl add push inc into or (bad) push daa call out mov sub je xchg pop add adc push sub cmp mov daa popf sahf bound div aas popa (bad) mov sbb xlat pop xchg je cmp movsb or jg pop pop xchg inc mov inc nop lock or repz rolb sbb cld (bad) ljmp pusha ja jbe and outsl fisttpll cmp pushl inc shll out int imul add loopne add icebp insb mov inc jecxz xor out cmp fsubrl xor out (bad) fcmove sub (bad) lahf out cmp fnsave loop fdivrs pop lret sbb (bad) cmp in and iret mov stos cltd pop dec lret not dec xchg mov or pushf jl mov mov (bad) (bad) stos out jnp lods (bad) xlat xchg cmp inc add mov push push mov or (bad) mov repz mov inc jns rclb pop and pusha mov nop out (bad) addr16 mov pop ret lds dec (bad) xor addr16 inc int cwtl (bad) in (bad) mov fcmovu jmp aam xchg mov xor xor inc ja dec movsl fcmove cmp fadds paddb jmp jo mov add ja,pn jg movsb dec aas sbb ror aas lahf or imul inc push adc rclb inc pop hlt pop adc xchg xchg (bad) sub xchg sahf fcompl or xchg push adc cld mov das (bad) inc mov pop mov xchg ret arpl (bad) and push xchg loop ja ljmp push std mov pop fsubrl pop aas test cmp jbe iret negl mov or adc xchg les and imul pop dec xor pop movsl shll jo call mov into lea jecxz stc mov jle lods cld mov insl xchg std loop cmpsb loop xor iret dec gs xchg dec fisttpll (bad) jo lds hlt ds cmp in jmp xor inc (bad) sub stos aaa push inc xchg lcall aad lods push aad hlt jmp sub inc cmp cmp inc in hlt cld xchg repnz imul sbb mov and repz movsb sbb jnp lock pop and imul sbb stc pop fidivr fldcw mov xlat xchg inc int xchg fnstcw repz mov xchg aaa mov xor xchg bound push mov sub ret loopne inc inc imul mov mov or lcall inc out iret cmp repz and xchg xchg fmul sub ficomp cld ret sub lea test mov jnp in addr16 (bad) out mov mov push int pushf leave dec ljmp dec ret aas lret mov pushf cltd gs pusha sbb test rol xchg mov or push movb push call (bad) cmpsl (bad) cs or sub hlt and push push push sub ret repz cs fldt test mov int3 stos xor js cwtl out call rcll rcll jne sub jecxz sbb xor xchg fwait dec bound clc xchg add ljmp xor push (bad) pop lret lcall test sub sub cld fistl test dec icebp hlt push loopne mov lds fisubl mov lds es stos stos pop push outsl ja mov andl sub ds sub jae mulb jle and mov cmpsl jns movsb out add mov mov out jns pop sbb cmp stos insb sub fisubl bound ret fiadd mov inc jl int3 xchg nop cmp adc jnp bound cmp es cmc stos (bad) sub ss rcll mov sbb ljmp or jmp pop cmp shlb mov jmp in or mov cmc add stos pop mov daa into xchg ljmp sub adc jb,pt and (bad) inc cmp (bad) mov pushl call mov pop out jge mov cwtl mov fwait divw pop imul movsb mov dec cmp sbb fstpt and or ja dec cmp dec dec xchg add adc xchg mov inc pushf shrb insl icebp jno,pt mull xor decl jno ss jae mov daa neg lahf pop or sbb pop insb mov repnz fidivr imulb (bad) test stos test lahf int and out je jl xor push or xchg dec xor mov jle lahf cli test xor push jae lock jmp data16 out addr16 or adc mov push inc arpl xchg jo bound fildl cmp mov in inc ss (bad) int3 es cmp lea sti add jge arpl into xchg dec pop jl es stc scas dec mov mull test sbb shlb into gs mov pop add test (bad) (bad) sbb inc iret adc out or jne jg cmp xchg fistp cltd imul xchg divl xchg out sbb enter dec jp mov mov xchg sub mov into ja sbb sarl cs lods cltd mov stc mov arpl jmp lea inc stos cli jg je jbe xor imul (bad) je in leave ret fsubl adc pop into test fdivrl clc call cmp addl mov xchg jne (bad) cmp in cmp jl in mov test test pusha sbb shll push sar (bad) adc pushf lods lcall xchg rcl pop (bad) sbb lahf popa ja ds lcall aad jmp sub inc (bad) jle aad fistl push pop jge cmp push inc xor cmpsb (bad) xor cmp xor jmp daa sbb dec inc or decb mov int jmp push (bad) dec push fildl es cmp (bad) mov int pop sub fwait xchg inc outsl ficomp xor cmp and push cmp xchg dec sub or pop xor dec lods pushf in das stc out sbb xchg push inc pusha sbb es (bad) mov loopne data16 cmpsl dec mov out test and movsb mov ss mov dec icebp cmp lea les sub jle jg call xor movsb cmp icebp jno pop jp mov push xor cmp xchg xchg cmc jmp xchg fidivr fs cmp dec fwait insb enter stc add push gs push and sub mov pop sub cs imul cli jmp cmp push push lcall movsb aam push rol push dec jno das sbb stos lea pop cmp adc sti cmpsl test jge sub call or cltd decb andl pop mov push ja add movsl int3 push cmp frstor fs ss pop push or and lret (bad) mov xchg mov cld movsb shrb mov adc enter lcall mov insl lcall push adcl pop jecxz push mov (bad) mov push push mov jmp mov push adc inc adc popa ss or (bad) outsb arpl mov xchg mov push pop rcll clc scas cmp fwait push (bad) into mov ss in cmp fwait in call (bad) andl lock pop cmc inc jge stos loop (bad) loope cmpsb push shll sub mov ljmp nop lcall icebp push pop adc test and push test adc (bad) and ja das int3 mov imul aaa xchg pusha sahf and jp mov jmp jb mov xor loope mov pop sti and mov xchg ss lds sahf lods dec sub ret imul push pop xchg sarl xchg inc (bad) mov ljmp fisubl adc fist adc int pop sti and shrl add dec fcompl jecxz mulb mov cmp dec mov dec mov (bad) bound xor push je int3 cmp icebp in jle fiadd mov ret stos ja fildl jmp call mov sub ds sub aam adc mov jnp pop xor test ss imul cmp lahf jle pop dec sbb xchg lock jp push or pushl jno dec scas (bad) aam nop push mov sbb fstp data16 sbb (bad) stc cwtl movsb or push imul daa cltd lock jp pop insl loopne dec data16 mov icebp mov (bad) jbe leave jg sbb lock mov cmc je jg inc jp pop sbb and push pop jge sbb or or arpl and clc out jl aaa sub xor addb je inc xor int3 lea mov inc xor dec mov cmp (bad) xor pop mov inc sbb or and mov dec xchg fisttpl mov je fwait mov and add fsubs pop sub in mov jb fildll mov rcll sbb loopne xchg pop pop in xchg mov and daa fnstsw adcl (bad) ja or mov fnstsw into stos aas mov cmp mov rcl mov mov mov icebp arpl adc scas in sub loop mov leave xor push fsts adc mov jl out stos into push aas andl aas push or xor pusha sbb rolb mov dec pop dec or dec pop push push loopne jmp or xor xchg mov mov cmpsl sub mov int3 mov mov mov movl mov sti stc fsubl lahf push jg pop leave and in (bad) fmuls cmp lret cmpsl pop shrl dec fxch jbe sub xor outsl cmpb mov adc bound mov aam or lahf sahf lock iret lret sahf mov incb mov out leave sbb push pop aaa js dec ror dec popa outsb cmp popa dec neg or jb inc enter (bad) insl popa into adc insl sar dec pop push push inc mov lcall push movsb lcall (bad) fcoms movsl push repnz mov dec xchg mov clc push aas push inc push jne jmp out in adc mov xchg adc es (bad) in add arpl in adc cmp sub mov aam shlb inc je popl mov hlt cmp adc popf inc test cltd inc xor cmp outsb mov inc ljmp push sub pop in (bad) stos push pop lret cmp mov push inc add loope xlat shrb cmp lret lcall lret rcrb mov testl lods je ja jecxz sub push test sbb loope nop mov and adc cmpsl loop xchg inc jno xchg mov xchg repz int or xor fs outsb xor push push mov inc cmp adc xchg mov out and ficomp enter in ret clc int inc cmp daa lahf mov jnp sti cmc add fldcw pop cli xchg jl (bad) cmpsl mov in repz push and popa subps mov cmp rolb xor add inc jle mov (bad) bnd fild mulb lods aaa or (bad) stc and pop cmp lock mov mov or mov adc cmp pop mov loope (bad) jle insl jecxz sub cmp imul fdivl cmpsb push xorl test mov push push inc adc stos (bad) xchg mov fidivrl push or (bad) addr16 xor and leave jg dec jmp cld adc mov sub cmp mov lahf mov fwait push lcall xlat addr16 xor mov stc (bad) xor dec push mov roll cmpsb (bad) repz test cmpb xor push xor jnp adc jne mov insb mov (bad) cmpsl jle mov lea sahf leave out mov lock jl pop pop aas jle mov enter adc stc clc lahf sbb sub stos dec pop incl popa (bad) jae aaa push xchg sbb (bad) push cmp stc jbe or das pop mov cwtl les pushf je in lods mov cmp out cwtl bound mov inc xchg popa ja aaa scas scas cmpsb xor fs xor push mul cwtl xor mov in cli mov sbb sub int3 leave cltd dec jb sub and mov xchg xchg add inc hlt add adc lahf (bad) push xor ljmp cmc adc bound dec jge and and mov cmp or jbe xor loop and xchg jg sub ret scas aas (bad) xchg dec pop outsb inc cmp subl mov sbbl pop stos mov inc xor jb inc mov add insb xor mov mov lret arpl mov or in jle out inc out popa popa push mov jns mov jg inc into or adcl repnz icebp (bad) cmpsb mov (bad) jle sub lea lods mulb pusha push push or (bad) xor xchg lods test mov jo pop sub aam sbb dec pop jbe adc in push lret cmc pusha mov sub mov adc out push jmp and fldt sbb adc mov out sub xor mov sahf lds call xchg dec cli cld xchg or mov ret and jp rorl fildll es jns fisubl cs adc hlt adc imul add xchg sub imul mov mov je adc jae add dec (bad) or bound int3 cmpsl mov mov jae xchg mov aad je mov push sbb mov add sub xor sti fisubl push rcll mov dec shll mov xchg js ret ret xor mov cmpsb sbb jmp hlt push add das mov out shr push test cwtl cmpsb xlat inc ret stc mov test lahf mov enter bound xor in sub jb sub ja adc aam inc push mov (bad) into lcall in xor add daa adc sbb ljmp mov icebp and adc push loopne dec sub or hlt loope pushf pusha hlt cld mov or mov loope repz leave es pop push mov add jo arpl ret rorl (bad) push popa (bad) imul sub fsubrp stos popl (bad) xchg sub test out call aam ret lret rcrl pop mov (bad) sbb in int3 in jecxz inc pop int push (bad) adc inc push pop sbb fwait pop push ret jae add into js repz stc cwtl xchg addr16 lret daa cmc pop (bad) sti xchg or xchg mov scas repz movsl jo jg andl aad mov loopne outsl insl clc cli jl int jo add jns jae dec scas sbb jns add jns sub jl clc pop pop mov fwait or jbe adc ret lret sub mov das lods and ljmp cmc lods dec subl mov lea sbb sub xchg and pop adc or in pop stos (bad) hlt push ss out ja (bad) incb mov jmp xchg (bad) das jnp lods add inc mov push sbb iret out mov lahf add adc scas (bad) mov movsb pop cmpsb lock jae inc pop insl out and xchg pop scas mov or sti adc sub adc test fisttpll cmp fdiv mov xchg ret and or mov (bad) jo dec les xchg xchg daa pushf lods lret mull add jg pusha adc shl dec in fstpl or mov bound cmp pushf test mov in int pop xor jne mov test ret bound movsb jbe pusha cmp out arpl decl ret jne cs xchg add jge sub mov mov jo sub push pop je sbb ja xchg mov push int3 pop outsb pusha imul sub repnz arpl icebp lret pop mov je add and cs push rcrb inc outsl jae daa (bad) xor push mov xchg cld dec imul jg icebp or (bad) xor mov jnp sbb cmpsb fmuls addr16 jo jp adc push jns mov das mov xor out or dec mov jp hlt mov and mov subl pop aam mov imul fsubr mov outsl mov aaa fdivrs iret push mov stos test repz pop push movsb mov cmp stos xor lds stos movsl pop add push mov cmc mov enter scas int daa es (bad) mov jnp (bad) xlat or sub pushf stos inc jmp insb pop fwait sub jbe or jnp jnp in cmp aaa cmp adc pusha sbb fs xchg mov fs dec mov mov fsubs (bad) pop xchg mov les mov cmp push cli xlat lea cltd mov mov aad xchg cmpsl add (bad) repnz out mov ror mov movsl flds sub xchg int xlat xor adc mov mov inc cs aam es daa push stos inc ficomp stc cmpb cmpsl mov dec pop (bad) push jnp aas icebp shrd hlt je jp and xor adc dec push xchg out or xor xchg push enter rorl sbb into inc jge jno pop arpl xor sbb hlt adc jae stos hlt xlat jecxz fisttp xchg fisub js or hlt xchg sub add sub pusha and pop xor sub mov insl mov dec sbb mov pop xor (bad) out stos pop mov hlt out sarl js lahf sahf dec dec mov fsubrp outsb in call gs rclb outsb dec mov push cld cmc fs int3 inc cli into stos cltd loope (bad) popf cld in aas push push or dec in das xchg test stc jle rorl faddp popa loope and (bad) lods jge and hlt je mov add lret mov bound add and test addr16 in in cmp sbb subl int xor mov or add enter dec dec movsl add mov (bad) adc fistpl test int3 (bad) and gs (bad) in fisubrl mov out inc ds jmp dec ss dec pop dec sbb lret adc mov cs pop add lcall daa mov pop int3 pop mov pop cmp inc xchg imul leave insl inc sub xchg mov pop lcall fistl std xor dec xor fwait add cmp mov inc inc test cmpsb jae (bad) lea mov insl mov xlat pop sbb ljmp negb mov xor ret outsb cmpsb mov (bad) sub add dec pop push inc dec push (bad) in rcrb xchg int jecxz cmp lret sub ficompl cmpsl and xor jae rorb testl mov mov xor (bad) cmp mov ss dec test sahf adc xchg popf xor or in jns xorb inc xchg push cmp cli dec mov imul stos inc mov scas testb mov es dec jmp jmp fist pushf mov xchg ds das cmpsb bound nop cltd cmp nop xorl (bad) stos mov mov jbe mov add rol ja or js sub aas mov mov ret xor add lahf call adc popa test lods sbb pop leave cmp push mov mov mov jle or std into add sub leave cmp pop arpl sbb pop sub shrb shrb xchg (bad) sbb xchg push fcoml (bad) out xor xchg bound in add mov fmull test lods fcmovnb push xchg stc mov sub jp cmp jle mov daa push ss lahf push cmp out clc into jne (bad) cmp sbb jg in and repnz jl push mov sarb jle mov pop adc aas arpl movb fwait push mov test test and jmp int mov mov hlt hlt ret mov stc fnstcw xorl dec imul clc movsl jp cmp inc add adc xchg inc ffree inc xor sub xor daa into fistpll xchg (bad) mov stc mov (bad) mov add cmpl (bad) nop jo andl stos mov cwtl dec mov adc and je lret aam add pop mov les mov sbb push iret pop push cmc sbb sub and adc bound mov ret adc mov xchg adc lods sub enter outsl movsb jl bound inc or xchg mov pop sbb cmc mov xchg dec in in pop inc jb and xchg sub stos stc insl mov mov dec mov cs push mov adc aas rorl sub scas jecxz mov inc daa sbb (bad) and ret pop leave shlb sub aam add fnop lods and std test adc in xchg cmc hlt inc adcl scas test and (bad) push in stos in ljmp xor inc pop scas push and or sar cmpsb mov in mov inc jmp add xchg and mov or and negb cmpsl sbb push xchg shrb cmpl cs scas pop das sub nop mov sti add or lods cs (bad) (bad) sub cmpsl jge mov out push sub sbb cmp xor mov xchg xchg sbb imul sub in popf lock jl mov in lds imulb out scas push addr16 xchg int3 scas sbb adc dec and outsb das cmp mov sti stos mov inc inc inc adc rcr jmp lea mov lret inc inc mov rorb cmp pop sbb fmulp loopne dec jmp add ljmp pop test mov xchg (bad) data16 sub stos stos (bad) (bad) jmp dec fwait mov inc pop add inc popa fistpll scas (bad) pop rclb gs adc xchg sbb mov dec add adc jmp xor gs jmp mov mov (bad) shll push mov popf rol aam js daa ret ds lds pushf sbb int3 jge hlt dec fnstcw sbb ss popa or pop jb pop pop pop push lea mov mov fwait mov insl int cwtl pop cmpb ja sub pop xlat cltd dec std stc xor shll mov pop lret xchg pop inc xchg outsb adc cwtl sbbl (bad) in mov push inc lods pop adcb pop mov xlat push push iret dec std shrl subl jns xchg xor iret inc sub fstps movsb add (bad) mov adc adc pop in aas test inc lods mov jg jmp nop and sbb sbb out xchg add push out sub rcll cmp xor jmp bound (bad) loop mov outsl dec lods in fwait push fildl ljmp push jecxz and lds jns push in xor add fnstsw or popl xchg pop add xadd inc push into jg xor (bad) lods mov in fdivrs and push push push loopne pop jo test ficompl outsb cmc int fwait jmp lds push xor mov outsb jecxz mov arpl add sbb or sub clc mov adc fabs sahf dec jge in (bad) or popl sysexit gs xchg aam add out mov aaa jmp mov fbstp enter xchg out fidivrl jno or das data16 icebp and mov mov mov pushf dec cmpsw xlat aas jl jbe cmp sbb imul mov clc je in popa cwtl mov mov cmc jb sbb test movsb insb (bad) rcrb call push mov inc (bad) add jmp dec add lds mov addb mov adc out jg inc mov adc dec and fistp mov mov fidiv addr16 aam lea into or lods mov adc xchg mov adc lcall test mov pop push jnp fildl add divb int ds jb fbstp dec arpl xor add jno in xchg (bad) mov mov fildl inc push lret and inc inc out xchg jno into test lret roll imul hlt mov cmp std loope dec push shll mov jns lahf xchg rcr pop add cmp dec out xor lahf lds sbb cmp cmp cmp push jbe lret pop sub xchg (bad) mov or dec or xlat lods aam inc mov push dec fnstsw ret dec repnz bound push stos push pop dec rol push adc repnz cltd sub loopne (bad) dec clc lcall movsb das mov imul pop cwtl cmc jmp or mov es cs mov and ds mov adc je stos inc int3 push daa mulps mov shll pop pusha int mov sbb sbb mov inc sbb jns (bad) pop rclb das pushf ljmp insl insl test xor cltd outsl cmc jp sbb fmull or imul mov int3 inc inc loope je movsb xchg inc or add test ds clc sub cmpsl add pop fidivrl (bad) ja xlat popa scas sub out fdivrl (bad) mov adc xchg fadds cli mov loopne jbe or sbb pop lock lcall test (bad) push sahf inc adc pop add adc mov inc cmp add cld andl subl cld fisttpl push xchg sti sub sarb and cmpsl push inc pop inc ficompl jecxz sub pop or sbb mov movsw xchg add mov lahf test mov dec or jnp pop sbb sbb cmpsb adc push xor sbb pop mov xchg cmc cmp cmp addr16 mov adc lock loopne jnp push xchg jnp cmpsb divl sub inc lea arpl push push test in dec movsb inc mov into js mov out insl bound int rcrl fwait or or mov in dec mov mov imul test into and mov cmp aaa out add imul cmp bound cmc mov andl sub dec loope addl mulb xor mov mov add mov (bad) mull sbb mov scas (bad) test jo sar aad repnz test lcall add sar loope xlat (bad) dec imul push mov cmp adc aas jae cmpsb (bad) pop popl jnp into pushf lods test add pop test lock cmpsl movsb dec lods inc das adc cmp jge pop jle cli mov mov jo test mov pop jne jecxz xchg push push lahf pop mov loop cs ret inc or stc in cs cmp pusha fbld push sbbb xchg push push or bound stos into push cld sub adc subl push fimul std add test fdivl push or jae push add rcrl imul mov inc adc sbb aad (bad) push inc cmp push adc inc iret fs lods mov sti jecxz aad repz mov (bad) push or popa mov dec (bad) ficoml les jae mov subb inc mov cwtl pusha jo testl dec cmc jmp jg in adc (bad) ds in iret mov lods mov push mov mov (bad) and hlt xchg sub movsl xor xchg leave push jne dec mov lret dec jecxz mov push stos xchg sbb subb inc fidivrl testl pop cmp fild push out sbb cs push push cmp jl lods mov mov loop (bad) into ja (bad) (bad) or mov inc add jne add jl xor (bad) push out notl sub mov pop jg fdiv imul lret outsl sub loope pushfw call popf icebp sti icebp xchg lods jmp pusha push lret adc push icebp push and mov out push dec jb rcrl lds sbb (bad) stos add fs stos or mov mov testl mov dec xchg adc movsl or stos add add fdivr mov mov imul ss add pop jb in sbb stc xchg popf (bad) jae mov xchg pop data16 dec lea fisttpl xor loope add bound sahf add pusha daa jl (bad) dec jmp mov cmp adc cmp fimull push jg test std je gs mov xor ret test add inc lea jne call push jmp aaa and int3 sub sub stos loope or lds or mov pop fwait push repnz (bad) daa push out push jno push and aad xchg adc dec (bad) mov fwait hlt adc mov push fwait pusha sub inc xor idiv mov jno mov cmp out (bad) movsl mov ja fidivrl je jg aam aas jno cli and xchg ja and push mull ret xchg push push jno nop das out mov popf and sti pop dec push fisttpl and mov add aas push fwait dec ss inc mov or or xchg xor das test shufps mov out fcmovbe mov shrb je jecxz lock or test lahf (bad) repnz pop add sti mov mov icebp into pop out out mov lahf mov push sti push xchg aas int3 cltd (bad) mov push mov inc jnp mov jbe test (bad) out in clc jbe and dec sub je lahf cmp arpl clc inc imul mov ficoml add pop adc icebp adc mov pop in sti lock loop jp aaa dec xlat lret dec aad inc sbb and pop jno and pop adc mov out addl push mov repz (bad) jmp insl loop,pn xchg daa (bad) divl adc fcoms mov xchg mov mov mov lds mov mov jns jp outsl mov data16 cmpsl cli ss subl and divl pop or inc mov pop xchg in xor arpl xchg xor mov int push jecxz test or lret popf push push inc xchg add test jbe cmpsb in shr out jne (bad) xor mov push inc popf lret adc mov xchg mov mov sub xor (bad) shlb lret into fidivrl jp,pn pusha push or lret push mov ret mov ja adc and mov mov dec push imull es xchg int inc cmp mov mov xchg mov gs add inc sub enter pop shr jnp mov scas jo xchg loope sbb push jbe pop xor jno adc inc cmc mov push xchg xorl ja xchg adc sbbl icebp push dec (bad) push ret lds mov pop pushf outsb test dec dec rcr xchg xor imul fcompl movsb xor adc lods mov movsl jge dec jl lcall rol mov nop dec mov out cs fldenv inc xchg sbb movsl mov adc popf inc cmpsl add add rorb das add mov inc (bad) bound and adc adc sbb imul loop ffreep jb jp test fistpll jno xor mov sub and cmp bound scas in mov ljmp aam jmp mov ss ficoml sarb push test mov sbb xchg shlb insl cli es mov sub arpl icebp aad mov push pop cld pop mov inc les rorl sbb mov mov inc xchg dec bound mov or loopne push inc arpl cltd push or outsl mov rol sbb daa ficoml addr16 xchg or push repnz (bad) push fcomp (bad) loopne loope lods inc outsb adc mov xchg push rclb cltd je dec (bad) sbb pusha aas and add (bad) shll adc mov in je dec jp pop jo repz mov fwait (bad) sub xlat dec adc decl je aam insb stos pop insl jo jb push enter add xor daa stc (bad) push xchg or cs (bad) jp cmp mov pop inc mov add pop dec adc aad gs icebp aad and adc cltd fs mov ret stos cltd xorb mov pop pop mov or mov aad sub cmp or push inc and cmc jno popf jle mov fwait push dec lods xchg xchg xchg (bad) jb push or out sub or (bad) jo gs ret leave sbb int3 add mov insl push add scas and into lods and fildl mov lods out sarl leave ja ret push popa das daa (bad) mov mov dec dec xlat test cmp add xor dec mov or std gs insl sbb xchg popa sbb xor and jge mov rorl popf fnstenv push cmp and ja jb and leave ja xchg ja frstor mov push adc push ret inc sbb jecxz (bad) testl adc outsb jl push lret jno int3 mov dec jo fidivr mov loop mov ret sub or out test ss mov ret xlat aas (bad) fsub sub outsl and loope jno pop stos xor (bad) xor jge loope clc in (bad) mov mov jno cmp aaa adc push cmp lods mov jae js rol add shlb fstpl js push repnz lods mov aad and jnp loopne cmp lods ja mov out movsl enter rcr mov pusha int xor daa inc lods mov clc out rcll adc fidivl sbb xchg into popa cmpsb jnp add ja cmp int3 aas call aam push ljmp inc push test movsb adc mov push bnd lahf dec arpl repnz test pop pusha xchg jb movsl rorl push lea xor ret add sti add das out int jle repz das mov mov jge xor pop lahf cmp add jecxz in push inc insl cmp push pop aaa scas or or lret mov mov cmp mov xchg mov cmp sub daa mov aas cmp xor andb cmp lods push inc xchg int popf push dec inc pop pop or cmpsl jno mov in daa add mov nop sub mov in push in dec data16 inc xchg lret pop in aad lods sbbl push das and adc in sub or (bad) and add adc push sbb lret add (bad) mov dec aas jnp stos out insl femms lock mov rclb pop jns (bad) xchg push dec or mul movsb ja adc adc push dec fwait lods cmpsb xor xchg jge push fstpl fs pusha ret push pop sbb adc jb in cmpsl mov out int gs inc pushf hlt add ss or mov sub in lods (bad) mov push push sub int3 adc lods in outsb call add std mov and jmp bound or (bad) sub and adc loope xchg (bad) rolb cmp or xor cwtl out inc les mov fwait mov inc mov lret add pop adc mov push addl or xchg por addl scas sub lods dec dec scas jecxz xor lock xchg data16 xchg lahf cmp mov rorl addr16 aad sub sub leave xchg mov imul jb out cmp adc sub adc xor aad fwait xor cwtl pop mov lock arpl lds jns mov inc push jg or xor nop sti xor imul and xchg stos data16 jecxz call sbb fwait sub mov adc cmp jl dec cmpsl enter arpl loopne cmpb push mov push push cmp hlt fsubrl sarb fwait cmp mov push fisubl dec std loop sarl jg xor data16 sbb mov stc popa lahf inc pop sbb sahf dec (bad) inc hlt sbb fild test out pushf pop notl test sti ret lds mov push in mov lock xchg add xor mov and pop sahf inc scas das sub out mov sbb add test xchg sbb repz lods nop mov mov add test sbb mov jp repz loopne pop into stos push outsb clc push or xchg inc xor mov add mov jl or mov cmp out cmp adc or or lea lods pop mov push sub cs aam dec push jns je jae aas pop out adc mov stos push mov sub lret in mov fstps adc les dec xchg lcall fild add jb inc clc fidivrl xchg xchg out cltd cwtl mov cmp pop xor or rcrb gs ret jo or push inc gs adc gs stos and cmpsl lds pop cmpsl ds xorl add xchg jle pop ss int3 lahf xchg xor loope,pn mov push into jmp popf test jbe sbb hlt aas sub xchg in add bound xchg mov ret jl test xchg sub fwait hlt pop shr imul aam sub imul out pusha rcl aam cli jge insl mov jl or cmpsl fwait stos dec in cmp push movsb mov jmp imul jnp std cltd add aaa xchg repz daa sbb mov xchg mov mov fdivrl adc xchg js in hlt mov jo jle sub jge mov enter bound mov dec ret pshufw xor and jnp nop push sub ss add mov inc push jo push andl jae in adc push clc push push sub cmp jb mov testl outsl stos xchg jl adcl mov mov pop jbe std das dec mov xor fdivl (bad) or adc mov xlat sti jo mov sub mov test mov rcrl fbld addl out inc mov xor rcll lods xor push je ret decb push adc push jg cmp pusha iret icebp test push aas inc (bad) mov stos imul lret mov mov into test mov aam adc in cmpsb (bad) pop push test lods bound and daa std pop sarb pop and push loope icebp (bad) xchg ss or push fwait adc mov sub sub daa loope lea mov js (bad) int fstpt out in loope xchg clc jge push jb jle out (bad) mov and add sub sbb sbb fldt cmp iret mov pusha cwtl out (bad) lods dec mov add ret lahf and popl sbb sub hlt scas stos movsl cmp push xchg push pop mov imul mov rorb cmpsl ds xor sub add push hlt jle cmp add lahf loope (bad) aad push cwtl stos and lcall mov testl jbe add (bad) daa mov push inc sub mov dec lods push jns jle inc push insb mov add push fwait loopne movsb mov jp jno test (bad) out test jns xor push sbb inc out imul pop pop xor mov mov mov ljmp or enter outsb dec cmpsb jo mov mov jge lds mov xchg popa sub xchg or out xchg mov popa sbb (bad) gs popaw je cmovs int (bad) mov sbb call das dec mov dec push xchg jb cmp (bad) cwtl pop mov or mov add imul mov sub jmp push daa mov and pop bound movsb aam test int or inc out cld mov in iret jae fmull dec ret in cli cmp lea push xor or js and inc jmp or dec fiaddl cmp mov cmp cmp push push jge iret dec cmpsb movsb aaa cmpsb divl rolb shl imul out je movsb jecxz sub dec jns aas inc xchg push (bad) mov cmp sub mov dec jbe int3 stos jo cld sub cmpsb int3 mov pusha popa jle icebp pop mov jge inc inc aas cmp push push or dec add sbb stos jge,pn fs mov rcll movsl stos dec js loope stc (bad) in mov pop mov aad cwtl fcmovnu das sbb (bad) xor sahf test pop mov es dec out pop lahf inc lcall in cmp fsubrs je cmp test gs mov cmpb sub std sub jge sub ret cli fidiv mov fsubrl fsubl dec push mov fwait dec dec (bad) pop leave push hlt test xchg sbb rcr inc out ffreep (bad) jbe iret mov add pop cltd lahf jmp inc mov mulb mov cmpsl or xor cmp ffree mov inc xlat cld (bad) scas push out cmpsb or mov icebp cs out jne (bad) mov out ret mov xlat sbbl mov add mov dec pop loopne mov (bad) or xchg call (bad) mov mov das xor testl cld and aam rorl inc jbe pop imul imul icebp xchg fsubrs push jecxz mov pop ret lret fstps xor fsubrp jo sub add mov test cmp and and je or (bad) jge adc mov jl xchg sub out add add push sub repnz pop sbb (bad) adc sub xchg mov cmp ljmp cmp (bad) add (bad) cld ja cld jno and inc sarb push sbb lds xor ja (bad) dec je lds outsb xor lret add push popf jle leave cmp js int jne push sub inc mov pop hlt mov lds pop cmc rorl leave fwait lods add sub xlat jecxz pop xchg aas pop xchg and mov lret imul cmpsl inc add not mov sub (bad) or fwait adc sahf or mov adc cmp outsb adc and xchg jecxz js mov push cmpsb push xchg xchg xor dec pop dec mov fisubl pop sbb mov shr or jmp xchg mov (bad) sub lret mov push add pop sub ljmp fsubl jae imul mov icebp jle addr16 jp add addr16 movsl (bad) aad xchg ja les sbb mov adc dec ss lea xchg (bad) mov sub xchg stos loop adc iret call hlt mov dec int3 stos imul sub mov test add xchg cltd subb and dec lahf jecxz push fwait mov add or aaa (bad) aaa sarl jl cmp or rorl dec jno or aam mov addr16 mov insb test cltd jns popf neg mov and stos insl pop inc push pop jp loopne cli jp dec (bad) lret fisttp mul add sub fisttpl fldenv jmp push loop test xlat adc mull in pop inc xchg lds sarl xchg mov (bad) sub sbbl out les shrb mov cli fsts call pop xor test add sub jle movsl mov movsl sub jo xor pop (bad) nop mov inc sbb inc mov sbb (bad) mov test (bad) rcrl lods mov es mov mov and sti pushfw mov cmp lret add rolb push inc in xchg js outsl xchg jp in pop push idivb and adc fistpl push jge push cli mov mov ljmp mov fmuls jo jmp cltd cmpsl cmpb mov or mov pop jmp aam pop or or dec dec dec stos push mov push in dec push insb int3 jge in or push imul pop jne in mov mov mov aad rolb test daa and das hlt loopne out inc adc repnz adc sti inc mov jecxz outsl mov jecxz pop inc xchg jl in test fwait sti adc scas fcomp pop inc (bad) push pop push jmp hlt mov mov adc fnstenv jge xorb test cmp sbb add sub hlt dec out jae inc imul repz cld sbb xchg sub cld jns andl mov rolb lock testb and jl ficoml (bad) shrb push sub lods lcall ja imul clc push xchg lods ret xchg add push inc sbb movsl and jbe pop rolb sub xor int and inc xor addr16 sbb nop adc cwtl arpl xchg das lds aaa mov dec pusha fidivr inc xchg cmp int3 popa xor mov fisub (bad) stc leave xchg (bad) fildl popf icebp in dec out mov push aad sbb push lods push stc mov fs sbb test jg mov stc dec mov or mov cli dec sub pop jl cmp clc jge dec test mov cmc sub mov sub aad jae push pop sub dec enter roll dec and or (bad) jne fwait xchg mov es lods (bad) or out and cmpl sub xchg aad push push sbb jnp ja pop fldt cwtl cmpsl dec das mov (bad) or daa cmc inc xchg out dec lret pop and out out pop bound or sbbl dec jecxz out mov sti or xlat pop sbb pop (bad) mov and xor push or jnp adc mov lds lds mov pop mov mov aas test lret sub sarl xchg (bad) addr16 imul test ljmp negb mov aas xchg cmp dec cs aam push test and dec jb out ret out pop mov (bad) ficoml mov psubd leave mov mulb cmp or sub out inc push jbe idivl and pmulhw or sbb mov add (bad) out mov cltd daa iret cmp cmpsb das mov push imul aad xchg bound xchg pop ret or add iret pop jae xchg mov loope and adc call orl pop adc cmp loope dec sbb pop jno mov out xorb jne outsb andb xchg inc stc xchg and stc test jl mov outsb dec or push fwait mov pop out (bad) loope fcoml mov (bad) fbstp push shl cli mov pop mov cltd andl js (bad) notb push jmp call loope insb inc and sub mov sbb and test push lret and mov mov cmpsb out xor and sub shlb into std stos or xchg outsb cld mov or push cmp (bad) test sarb xchg cli mov mov sahf cwtl (bad) pushf push fisttpll cmp or adc mov hlt fistpl xor dec xchg pop sahf mov sbb inc jae push mov insl test subl fmuls mov or js cltd int3 ret xor sbb mov imull std mov mov jle mov cltd mov add daa (bad) adc (bad) sbb push es cmpb or cmpsl pop cmp xor loop aaa shr cmp enter cmp pop cmpsl or clc xchg ds in pop or fmuls in mov mov popa xor cmpl jo adcl sub punpcklbw pop and xchg addr16 cmp (bad) fsubs out and call xor mov jecxz das rcll jmp test sahf push shl loope mov xchg cwtl sub sbb inc jmp (bad) enter xchg mov push mov cmpsb (bad) sbb jl or inc (bad) xchg sbb cwtl repnz xorl arpl out dec xor out aaa push pop mov fstl mov or fstl sti fnop or arpl sub das dec in gs and es or sub cmp lcall sahf in push mov dec jo rcll add add xchg sbb jle push popa fs pop and dec mov int push push inc loop jge stos std mov push fdivs xor jmp stos es enter inc and mov (bad) shlb adc dec test fwait ret in ror lret sub jb xchg dec xor (bad) add movsb pusha cmp js scas pop and jl jb sbb aaa inc sub out xor lds inc inc test xchg pop es or fdivl inc lahf add mov push xchg fwait pop inc sub repnz jno lods sub gs push add dec inc or cwtl cs dec and dec add loopne mov hlt mov or mov (bad) popf sbb cli movl mov mov outsb mov adc stos in adc mov ret sbb mov mov mov sahf sbb mov fwait shll push ret rolb jecxz lods mov in lret (bad) scas jb jb dec popa mov xorb fsubs mov dec mov repz scas cmpsl jge jle (bad) jo daa adc fidiv lret xor popa pop sbb sbbb push or in sub imul into push es imull xor jnp inc sbb jmp ret pop add pop fwait outsl push (bad) xor mov sub mov push stos mov popa sbb or xor daa test bound (bad) aam movsl lret mov push fistpl fmul fldl out outsl jo sub test xchg push aad insb dec cmpsb adc ss daa lcall jge ja add push pop pop inc mov jns imul xchg jle bound ljmp and mov clc xchg hlt and in (bad) fiaddl pop add dec loop lret bound or mov mov or hlt mov fistl ret std scas clc cltd rclb pop pop int das int3 (bad) jl push aaa fsub (bad) or fdivs xchg lds daa fcmovbe push cmpsl (bad) fwait out loope push xlat aam loopne push icebp cli xchg imul js stc push lds sarl sub push ja xchg xor dec sub mov imul aam setno dec mov leave dec cmp xor cmc fnsave (bad) (bad) scas inc clc dec cmp loopne add rorb pop or mov fnop aad lcall dec adc and xchg aas cs mov (bad) mov es sub adc sub mov mov dec mov enter fld dec xchg nop mov pop sub jb icebp jne dec scas mov rorb mov jbe cmp cs pop mov loope mov push and mov add mov fildl aam mov sub in or in mov lea mov xor pop mov cmp fiadd sbb ret leave add cmp dec mov push mov nop mov sbb cmpsb jbe das sub je push test shrb add push adc xchg sbb add in add ret stc pop push pushf scas mov shr gs fist sti pop insl xor push jae jb jns pop xchg jno jle push lock sti mov push daa mov mov add sub sbbl jb cltd xor sti pop add jecxz mov sbb adc inc sub ja pop mov outsl loop lods pop sarb js mov (bad) cwtl fist arpl (bad) xchg out xchg arpl adc pusha shll and repz das js jns xchg push sbb cmp lock pop sub fldt dec jecxz xchg fiadd call push dec movsl lret jl or mov mov xchg inc add adc dec inc sbb and cs cmpsb mov inc cmp mov mov push xchg in mov pop dec arpl repz imul aam out mov fdiv xchg push jo loopne std jge pop out cmp or test dec fdivr mov dec fadd mov mov je sahf cltd mov xor sarl mov shrb adc std push sub fnstenv daa mov add ds dec inc es stos sub aad xchg add xorl pusha push ja out dec and clc push and sub ret lea push pop jns dec sbb xor mov xchg mov xor repz stc push adc jmp sub or nop dec or lcall scas jp lret push inc cwtl mov adc (bad) mov jle mov add pusha pop ret data16 xchg (bad) aaa cs aam cmovge lods sbb jns adc scas pop cmp and push cld push jg pop clc (bad) mov sub fwait pop ret dec jb and sahf xchg sti xchg or inc popf jb movsl scas ret arpl pop xchg mov inc gs into or pop imul or or adc sahf mov jl popa mov mov cmp jge sub mov mov mov hlt aam jg aam xchg push pop push outsb xchg fldenv int je stos push insb push mov (bad) in mov mov push dec xchg call cli dec sub inc xchg aad and lret mov scas call add adc pop bnd (bad) pusha cwtl lods imul pop lret and pop xlat inc mov sbb xchg xchg int add and mov push and inc xchg ficoml in clc negb mov push test push or and sub or cwtl (bad) or ljmp lret sahf (bad) ss fcmovu popf xor adc xchg je and ds orl inc stos push (bad) xor mov or xchg pop out int3 imul in aam insl mov in and decl push pop adcl mov mov push sahf out imul xor xor cmp push mov icebp in outsb iret clc (bad) cmpps fldenv and ja hlt sbb mov mov loopne mov mov and pop (bad) and or jge mov mov lock mov pop lea (bad) out into inc dec addl nop dec xchg outsl ss adc xor popl orb sbb mov sbb inc mov cmp mov addr16 jnp cmp imul sub sahf inc lods repnz push cmpl stc sbb push mov lea cmp aad cmp imul jmp push inc pushf lcall mov idiv cli pop dec aaa fisttp sar cltd les push pop scas aaa fnsave clc dec scas jecxz xor sti cmpsl rep mov stc aas nop lcall mov pop xor jp dec xlat cli rcrl jb mov xor orl jnp cmp xor ds xchg gs push push mov sbb pushf cmp clc mov cltd inc cmp insl cmp push cli ss movsb lret data16 fsubrl xor cmp mov mov xchg std rol dec inc in and mov dec mov mov inc inc or xor ss ret adc pop lock imul xchg cmp call mov dec push ss push mov adc jecxz rolb push sbb in lds cmpb aas test jp push bound sub std jno insb inc jmp in mov inc jns pop movsl jnp xlat push pop les sbb sbb push jno adc add loope ret insl jl and mov and jmp rorl aam ret dec imul xchg les and pop add js sbb stos pop jle xor mov xor push sbb jl leave and ror xor or mov jmp sbb ljmp inc stc push cmp xchg xor or or xor jae into sbb pop cmc test mov enter jmp push xchg stc lea xlat fimull sbb xchg pop pop sahf sahf clc mov gs dec in ret inc jl popf jl movsl nop lcall or mov xor inc insl fsubl es movsb sbb fcoml icebp test mov xchg fcmovne sbb mov imul in rclb mov (bad) cwtl sub mov sti (bad) faddl and pop xchg cli xchg mov push aaa jae mov and ja xchg fbld jae loop pop mov nop outsb movsb jne loop call popa (bad) mov mov adc sub jp sbb push mov js sub ljmp (bad) mov jo test sbb movsb shrb lcall xchg xor pop in push roll mov xchg or or xchg mov ficoml pop stos in call fcoml in and xor add arpl mov pop nop mov and cmp push int push in cmp jns add jl mov xlat scas cmpsl dec or mov dec imul scas aam (bad) outsb mov pop ljmpw dec mov jp imul pop test mov dec int std mov sub decb xor xchg lret push xchg iret ljmp repz add popf (bad) mov cmp xchg scas fmull nop pop fldcw imul xchg adc fidivr repz movsb loopne or fldenv test leave ja adc int stc leave mov icebp fstp das ret jae inc push out cmpsb ds cmp fcomip aad jo sub pop jne repz jno sub test push or sbb pop add dec test loopne push insb mov aam push adc and xor mov int adc bound mov jae insl popf test cmp test mov and jnp cmp fwait (bad) test dec ret (bad) sahf outsb call jns mov int3 adc mov mov not push pop leave je mov fcoms mull lret in icebp mov scas jnp dec push mov sub scas outsb sarb or xor cli sbb ja mov sub out sub shrb (bad) (bad) out push jp and in repnz and inc ja mov add mov (bad) mov test push leave sub or int fprem1 bswap repz gs out in pop push push add add xor mov push int and adc mov lds sub rcl fsts add in xchg outsl in sub lea pop (bad) (bad) xor in lcall scas add jmp hlt jb inc lcall aas aas mov dec ret pop adc xchg in adc sbb into mov or jno aad pop in loop lods aam test add mov loop sub scas out mov cld loopne fs inc add xchg movsl push call aam push push loopne ja scas sub fdivr adc mov in (bad) and mov jmp out mov les insb jae mov jmp mov mov mov popa shlb je,pt sahf into inc lcall gs pop (bad) xor cmp iret imul (bad) cs sub jae mov or mov cmp inc cmp and xor sub adc fs mov loop lds push fstpt insb push and cmp cmp dec in imul popf test lods mov (bad) xchg je mov sbb inc pop inc mov mov or and sbb inc std cmp mov sub aad in pop sub arpl lahf cmpb dec and stos and xchg bound pop push mov icebp pop xchg lret mov cli pop call daa daa daa mov (bad) jnp adc data16 les data16 inc movsb mov (bad) je dec jp mov repnz jle or cmp inc imul repnz lds enter (bad) adc mov pop xor pop mov (bad) gs das enter xor jb fwait xchg inc fdivrs add push cmp sti test and add pop mov mov dec inc dec adc mov test xchg shl sbb pusha dec aam sbb out jns xchg and popl fnstenv cmpl cs test dec sub mov xchg imul push dec call imul leave jmp add sub pop inc ret fadds inc inc dec (bad) jo aas push mov add cmp out bound mov add and xorl out outsl cltd das jp add or cltd loop pop add inc lods pop dec js out fs pushf data16 mov pop movsl pop sub daa aas add clc sub jge imul add andl repz push cmp push sbb stc sub inc imul cmp sub (bad) out adc negb or (bad) rol dec push add (bad) aad sahf mov adc xchg sub in jnp xchg scas aam (bad) pop mov xchg or push mov mov mov mov fisubr pop or orb and jo mov pop mov sarl jb mov inc mov sbb xchg fcomip es into lahf adc add mov xor adc (bad) sbb or mov mov repz jle leave xchg or cli sbb aad cmp stc and jbe clc cmpsb jg enter mov xor (bad) cltd mov and fwait adc leave mov mov sbb mov push mov cmp scas jno repz adc xor jmp xchg mov (bad) xor es lea push call aam mov ss test fisubr loope (bad) pusha xor xor pusha lret pop cmp arpl (bad) adc mov sar pushl idivb clc push pop cmp jns push addr16 ss dec mov pop pop or fnstcw jecxz mov sbb idivb mov pop sub dec hlt mov jecxz aad push sbb int pop sbb mov mov sbb sbb std jae gs pop inc add mov imul add rclb out and ret sti (bad) fildl sbb outsl xor adc mov movlps clc push enter mov pop mov les push sub fwait cli and fimul aad cmp or mov mov mov cmp cmp pop loop rcrb lods int3 sar ret fwait dec icebp pop or lahf stc ret daa cwtl inc loopne insb mov pop mov pop add jbe sbb in movsb xlat vsubss (bad) mov or orl mov and dec data16 adc mov popa call dec mov dec js cmc xorl sbb test push sbb adc (bad) rol stc mov dec jl ja adc shrb ds into jmp jno pop inc cmp jle push movsl pop mov mov mov sbb in pushf push (bad) and mov dec pusha jbe hlt fs sbb adc dec cltd add jbe dec add dec nop (bad) cli sarb fwait jmp int push or push fsubrl jle pop dec icebp (bad) cs mov adc mov sub icebp adc leave add stos sub lock shrb sub jmp inc mov or cmp xor push sub lahf and iret pop inc jnp imul push loopne ja je pop stos insl dec lret pop sub push (bad) pop or icebp push hlt lret out pop fsts insb and inc in dec movsl daa in mov stc or lahf mov jmp dec out stos adc gs test sub sbb testb mov mov xlat inc hlt push pop lods in push sahf push cmpsb or cltd ds (bad) das xor push fldenv test xor aaa adc insb data16 mov xlat adc aad push rclb mov xor push std rorl cmp jb out push pop cmpsl pop adc inc xchg cmpsl cld pop fsts cmp hlt fnstsw movsb sarb icebp daa xor bound ffree ljmp push rcrb or push (bad) clc movsl js mov dec sbb insb sbb xchg pop lret and or and cwtl cmpsb out nop icebp outsl adc int mov adc bnd out or pusha push jne (bad) aas sub (bad) dec repz popa push mov roll push dec dec popl ficomp jnp bound dec nop sub sub xor sub fldpi push (bad) mov jo cmp aam dec sbb fadds xchg push mov mov dec sub dec inc or aad cwtl mov jp cmp loopne cmpsb out xor cwtl mov and jo cs inc push mov mov xchg mov inc popf jae xchg enter mov push hlt int mov dec popa jo and outsl pop push bound lods loopne pop cld loopne cs mov outsl push inc jbe xchg pop xchg sub cs fisttpll stos sub jmp (bad) aad dec fwait std sahf mov mov daa inc pop xlat mov sbb add test in pop fiaddl shll xchg fcom in pop add out xchg aaa dec cld jg dec xchg fstpl mov add cmp xchg iret push (bad) ja jge adc mov loope mov cltd inc jnp mov test or dec clc cwtl mov pop dec das jle movsl or jge insb mov daa in pop iret push inc xchg mov lods roll je aad mov mov cli outsb lea inc mov sub pop aaa cmp ficoml jecxz stos xchg iret jle jne int3 mov adc (bad) adc dec sub mov pop or mov jo dec or xor sbb fcomps int3 inc faddl mov sub jo push cmp inc jg mov mov jb and sub push cld mov loope cltd adc mov pushf bnd imul mov fsubrl xchg push dec mov pop cmpl or cmovns out pop adc pushf push lods insb jo xor jae (bad) mov mov das out stos sub test mov xor mov (bad) and sysret and out mov scas bound fnstcw nop aaa cmpsb add and test jle mov mov loop mov mov dec xlat data16 and fbld fdivl repz xor outsl iret out nop mov fstps pop cmp sbb mov and iret cmp ret into rolb daa out jns cmp insl sbb int xchg daa add and pop fcoms mov faddp call out jp lahf sub mov jl stc fld xor into sub push sub (bad) int repnz inc jle test movsb imul gs aas scas call jns sbb mov out mov and xor insb cs jg cmpsl mov nop lret popa popf cs adc std xor ds adc subl sbb nop fwait lret divl inc inc inc xchg test cs fwait subl fisub pop mov data16 out pop (bad) sub or fdivrs xchg fldenv out leave fildl adc jle sub sub add mov dec decb mov into and iret punpckhwd and (bad) enter out aaa aam jns cmc mov scas pushf push (bad) jae stc push mov pusha push mov jb mov lcall add (bad) out push mov sbb fstp imul loopne add clc in insb add adc dec aas pop test xor push push xchg or sbb adc xchg mov lret xchg imul mov pusha test cli or loop push insl int3 jns mov jbe cmp xor push sahf repnz leave add je,pt jne inc roll in jae push movsb mov aam push jg test insl outsb jle ss inc cmp jg pop mov push inc mov push sub sahf jbe mov test lahf rcl or pop insl cs sub xchg push sub lret cmp dec pop insb jmp fisttpll mov scas jl adc test xchg adc inc mov popa jle out jnp push mov push push mov popa (bad) lods popf outsb adc std mov iret sti out push lods jecxz sarb cli out mov fistpl jns loopne xor xlat adc out pop cmp jle dec and pop lahf (bad) rcrb sbb pop push test lret cwtl bound dec movsl enter sbb roll push stos bound imulb dec pop push pop ficompl pop dec (bad) fisttpll xlat out aas cs pop xchg cmp in stos sub sbb and mov adc aaa sbb into add jge cltd lock aad iret inc repz xchg inc in mov xchg sbb lea (bad) sub out daa inc ds lods mov mov hlt and push cld out ss (bad) and scas push sbb cltd into sarb dec dec nop cmc ret and rolb inc inc sbb push daa out cmpsb scas push mov dec mov ja ja cmpsl mov pop lret and sbb mov lods imul sar jne mov jno outsb push nop sbb ret call inc lock dec bt stos jb fwait cmp jle pop mov or xchg mov lret scas imul jae test lea sub inc xchg jnp stos cmp mov cmpsl scas roll (bad) cmp aaa loope lea lds jle fs aas jl pop ss shrb in dec and pusha mov aas or push cmp xor dec xor popa mov cwtl cld sbb push and sarl mov lods mov sbb (bad) mov push xor mov test jbe shll lcall rcrl out xor fwait pop loop lds jge mov sti inc (bad) sbb inc mov stos lds sahf out push jnp adc jae je jae mov test arpl mov je or jp cmpsl stos add in mov inc cmp cmpsl lcall jl icebp pop sub fdivs movsb scas xor cmp inc xchg decl adc popf jno insb out add (bad) mov pop inc add mov in add jmp jecxz,pn rolb (bad) movsb xor imul and push push and sub jmp (bad) fistp mov inc sub jo cmp (bad) jb xor movsl iret jp cwtl add push xchg xor in or mov pop mov inc or jmp jae lret push andl or jmp or xor adc int3 outsb add out cmp and push cli aam jp ljmp daa mov mov test mov js jmp inc mov jne icebp mov nop xor sbb lret les xor jp pop push daa test pop (bad) rcrb ja lret insl mov or inc pop mov xor dec jno rolb sub mov in insb call call dec dec jo pop je cmp jno pop enter orb mov inc and or lret fisubr gs dec mov jno mov push add sbb jb (bad) test shrl and in insb mov enter or jg mov bound pop std cmp pushf movsl add add call shrl loope inc mov dec pop out arpl push push lds push push loope ret sub int sub in mov jb cltd dec lret (bad) adc mov adc jmp and or jmp push sbb add pop jle repnz pop jge aam mov push mov call xor shrb das cltd movsb pop loop xchg out shlb aas call xchg push inc mov and mov aas inc stos adc add mov jnp pusha lock mov push aas sub mov or mov fbstp mov out mov sub rcrb or push xchg xor sbb add pop xor sarl clc xor in jns fs mov popa sub das jb xlat cld outsl std pushf aad push xchg mov jns mov fstps mov add (bad) jl jle mov lea insl xlat push jbe push adc and cmpb int arpl mov sbb pop enter daa cmp into mov lahf repz pop pop stos push call sbb iret fnstcw push xor and sub push add ficompl into push mov nop std pushaw mov clc jo xchg enter ljmp sbb out hlt sti xor call ret roll test mov call repz mov fimul push pop add xchg inc out push andl and insl js xor mov jo xor jne and nop jg outsb leave test adc xor sti aam clc (bad) (bad) xchg movlhps push jmp (bad) repz xchg fwait pop ss scas enter lret inc (bad) rclb cmp outsb xchg lods fistl cmpsb mov inc push xchg push out jbe push jbe inc and (bad) nop addr16 xchg add insb fsubrp pop and lcall cmpsl adc sahf imul lret (bad) je mov inc xchg xor jo mov xor cmp mov jnp pusha adc inc mov jno cltd sub adc cld repz mov add bound (bad) cmp popa mov jns push repz mov (bad) add pusha test mov and push packuswb std insb xchg push mov fisttp sahf ljmp ss (bad) ds das add dec jb or cmpsb mov popf cmp xlat pop mov outsl scas cmp jbe push iret sti xchg mov (bad) xchg pop xchg inc popa rorb sub mov cmp push inc dec cmp mov sbb xlat test daa out es inc rcr scas ret sbb mov and rcll lds mov dec or xor frstor shrb (bad) dec call xlat fwait sbb out mov andl in fucomip nop (bad) hlt push int addr16 fs in js cmp movsb push pop jae cmpsl inc add sbb lret jp lods cs push fcomps jnp ret test xor adcb jge icebp fwait sub imul out (bad) repz cwtl mov std sbb rcll adc popf outsb hlt (bad) pop ror fisubl cld lock outsb dec into repnz xchg pusha lret inc pop fiaddl push mov (bad) pop jns outsl stc (bad) cmp sti mov mov idivb fstps (bad) push ss sbb mov stc orb fildl rclb and xchg cltd fist lcall flds mov (bad) mov dec push and sti js aam or cmp jmp cmp ja pop sub mov mov popf scas pop cmp mov and xchg cld xchg dec int3 in fsts jae sahf bound cmp push mov mov in out sub clc cpuid jp shl fisttpll xor push or lea jne fdivs je push in adc jne loopne add mov (bad) stos xchg jge cmp push pop mov int3 pop push or ret aad push gs cmp xor jns mov mov cmpsb push imul fstpl or loopne mov or mov (bad) (bad) shrl mov rcr pop stos mov cmp or and cmp dec lahf dec out push aad je pop mov sbb push mov mov ljmp and pop cmpsb les call add or loope push sets pop scas pop scas lods xor sub pop pmulhuw rcrb mov lret pushf (bad) enter ret fistp ret jecxz in idiv movsl xchg jge lcall aad mov sbb mov cs lcall in xor ds push jle xchg jo and mov cmp pop (bad) icebp mov mov cmc lret and ds or pop movsb dec jb lea mov scas push cmp (bad) sub es stc jge insb insl lds lods cwtl ja xchg lds leave and and lcall incb rcrl xlat insb xchg push cmp pop fiadd adc xor movsb cs xchg push or int3 call test call pop testb inc cwtl cltd loopne test (bad) jb mov std mov cld jle test cmp mov or ja xor pop and shrl pop popa mov push mov fadd and and push test cmp mov xor push addr16 aaa lahf test push pop add cmpsb push cli (bad) punpckhwd lods stos fcomi cmp in jmp adc outsl and popl std mov mov lock lock out out push cwtl imul mov aam push push and daa xor pop xor les sbb cli xlat xchg ficom xbegin out int3 test arpl int3 sub inc lcall cmpsb mov mov pushf inc in push loop sub lret subb loope cltd lcall adc xor mov data16 xchg add ds fs inc cli add xchg cwtl vcvtdq2ps jle add cmp addr16 mov mov sbb jo jno into test lcall js mov aad add insw dec jg ds jge cmp push push pushf into lock outsl or sahf xchg cmp nop mov xor lds and push jge call pop call add lods (bad) je inc lock adc cmp pop add or or push mov adc sub xlat in shll jb adc scas and loop imul out je pushf mov sbb lahf test mov (bad) notl pop xorl push mov ljmp mov ljmp sub test shll mov fistpl add mov fisttpll je dec and daa push fisub gs rorb jge or xor jmp xor mov add push mov cltd out pop aaa adc push subl in imul cmp fmuls and cwtl adc jns sub adc sub loopne and packsswb mov aad fstpl mov into mov xchg (bad) out mov (bad) mov jl test clc xor inc rolb push dec movsb ret stos sbb pop mov jb das outsb (bad) pushf xor jne and xchg mov sahf cmp xor stc lock xchg jo inc jo aam in adc and pop mov cmp sar mov cmp jnp jne mov cmpsl mov int3 push dec test jmp dec mov xor call test mov push mov xchg outsb in out add push in les incb stc push sbb mov lods rorb fdiv insl jnp sar or pop fsubrs inc mov lahf dec lock fstl (bad) pop dec mov int xlat movsl rcll scas ds lock test add add pop daa neg add (bad) scas xchg fbstp mov aaa jo ljmp jne jb dec mov sub sbb push bswap aaa icebp (bad) testb cli out (bad) cmp ljmp movsb into daa cs int or jno cmpsl ds cmp jp fcoml icebp mov les push arpl sub mov fcoml or xchg mov fstps ja aaa jbe enter inc adc dec and loopne lods pusha sti mov push cwtl (bad) mov push add or scas pusha clc popa leave jle sbb int pusha rorb and (bad) push xchg add push xchg or and mov mull jmp push je add mov sub enter jae cmpb sbb or sub les jmp adc or xchg test push mov in mov popf (bad) cli sbb push push push pop and nop ja push stos jmp insb jne mov xchg xchg sub aaa ds ficoml push and dec adc je xor mov ret xor mov je mov lods jno stc or push pop inc das push mov inc cmp jge mov rcr adc adc movsl insl in adc jno or (bad) jns in mov cmp pusha jecxz inc daa rcl sub and mov fldz or stos pop xchg sub inc test and xor dec mov mov cmpsb cmpsb aad xor jmp stos cmp movsl loopne js leave sbb jae jae jecxz jbe mov and cmc add fcomps xchg out lcall inc sub stc mov xchg lret xchg rolb lahf int3 pop loope mov (bad) adc pushf sbb jns lods int3 repz repz mov xchg fucomi lret and adc sti aad pop or mov fs pop daa outsl (bad) push in out mov xlat stos in xor stos rolb jno jmp push leave add pop loopne ret dec faddl and ds icebp mov out push sub pop adc xlat adc xor mov mov jle fcoml mov stc stc mov inc stc push fldl jbe test icebp loopne cmp jg cmp pop dec scas mov ja xor in push cmc push dec and testl cmpsl pusha inc lahf lret and mov cmp movsb cmp jl xor push in shrb mov adc arpl or out sbb or jae insl dec or mov outsb aam movsb lea inc rorb int push mov sbb xor rcrb ljmp (bad) test test movsl dec jmp out (bad) call lcall pop mov xchg pushf movq mov imul inc pop xor pop mov shrb or push (bad) sub xchg nop stos lock mov shlb imul mov cltd sti (bad) dec jg xor or mov lcall cmp push mov mov cmp pop scas out adc push mov loopne push (bad) imul jae int scas das mov xacquire (bad) mov jns les cmpsl xor (bad) mov xor (bad) cli (bad) pop aam pop fiaddl dec aad cltd pop cs bnd bound pop add (bad) xor pop mov push lret xlat push out and push movsl (bad) push push jp xchg outsl data16 roll push mov pop fadds aam ja,pt cmp xchg xor pop pop shrb fwait sub xor (bad) pop adc push jnp mov lret pusha arpl negb or pop or lds xchg lods push push rcr pop push js pop outsb ljmp inc dec mov lods mov add adc jmp add cmp fildll fwait outsl jno xchg pop dec icebp adc jb dec xchg sbb adc jb add sub xchg sub push scas xor (bad) mov fcompl pop xor in incl jge mov ljmp cwtl mov cmp xchg imulb fwait dec out inc popa call dec xchg mov loope mov sbb add cmp mov loopne inc ret jo daa nop xchg sbb mov lahf push movlps repnz and mov dec into lds enter out mov mov rcll rcr push sbb ret je cwtl pusha mov mov mov test loope mov js mov push mov sbb dec aas xor popf jno jg imulb mov add sbbl fsub stc sbb icebp and call jb pushf jg andb mov push cmovno loope dec xorl jb fsubr andl sbb (bad) xchg stc ret jp mov xchg hlt loop aas lods sbb jae push jne push mov add daa pop cmp cmc jmp jl insl aam and fnstcw gs mov out cmp dec stos jl rolb jge and lea fmuls ds scas xor jl pop mov sti (bad) and ljmp pop rcll lods das mov das iret stos mov daa pop or mov jmp add ret sbb idiv sahf add cli (bad) imul sub and cmp cmp dec aam xchg mov into ss mov dec sti xchg jge sbb pop sbbb bnd xchg sub add leave mov dec insl mov faddl in sahf repz push add repnz in inc mov or pop fwait (bad) cmp cmp or adc repnz push mov and mov cli sub jmp dec insb (bad) xor sbb xor inc pop adc fmul fcmove cmp sbb adc pop enter inc inc pop fmuls cmp jo sahf mov adc jl,pn shrl xchg jmp cmc call outsl std mov call (bad) jp insb dec and xchg pop aad imul xchg sub push dec dec cltd data16 xchg cmp add push dec and jnp mov sbb orb inc pushf fmul stos mov xor and aad cltd jbe add sbb xor and loopne xor pop ds (bad) out stos addr16 dec pop xor jo mov int3 dec mov jbe xchg inc add (bad) popa imul sub xchg jbe push jae xchg pop mov push jge mov insb scas and pop adc sarl xor imul xor sbb frstor sub das mov hlt sbb pushf shr mov xchg inc in sbb jb cmp aad sbb push les imul lcall dec dec cltd sar out sarl int3 mov out in cwtl je pop jl in mov xchg and rorl fistpll dec or or (bad) fcoml xor jne pop or sbb sbb sahf insb xchg aas lods lock xchg lock cmp mov push in jne jne (bad) iret pop mov test push jae in push mov push (bad) bound mov cwtl jb outsl sub shlb xchg outsb test sub inc pop lock pop inc pusha sar push fsqrt add in push jmp cmpsb ds imul push inc dec add mov and and fistl gs jmp inc sub push mov (bad) sarl dec and push jne cmpsl and cmp in mov fwait xlat outsb movsl push mov mov mov in (bad) inc dec pusha lods pop mov pusha and test into les cmp scas mov ja inc sbb sti cli jl out rclb arpl or lahf mov int arpl bound ffree out clc mov fisttp ljmp cmp adc xor xor out hlt xchg fmull push mov jb jne hlt push cli sub cli ficoml stos cmpsb insl jge dec sub mov fstpl jns sbb mov or push (bad) pop cmp sti inc (bad) xchg out mov inc (bad) rol cmp jg andb cmp dec imul pop adc stos sbb sub or mov pusha sbb aas fsubrs lahf inc rolb shrb jp test scas sbb cmc cmpsl (bad) pop xchg cmc aam xchg push aam xchg mov inc ret push inc dec (bad) dec fistp push sbb ret sahf push nop repnz cmp out popf pop pop stc in cmp rolb daa pusha inc pop addr16 dec adc movsl cld jns jge sbb das jle unpckhps mov xor lds mov lret lcall and cltd les sub push lahf inc pop mov xchg incb and mov adc inc cvttps2pi adc dec lahf xor push inc mov add out jecxz loop xchg adc loope push aaa cs mov mov push xor out fs jns fiaddl xchg sar ss loopne clc into (bad) mov push jge cmc push andb test sbb push mov xchg fmuls hlt adc inc and cltd lods sbb mov fnop sti in xchg rcrl pop add addl (bad) xor add sbb mov inc jnp fwait scas mov sub or mov mov fwait inc xchg or (bad) (bad) jmp ja sbb dec mov xor (bad) rcrb js cmp dec pop les dec cltd addr16 icebp xor mov fsubrl xchg xor mov stos inc cmp and dec push call movsl stos fiadd movsb imul fadd lret push insl adc imul imul stc cld mov das jns push cmp add add mov push jp ss aas and jmp (bad) xchg scas mov mov rcrb nop jnp cmp js push lods sbb outsl das push mov sub mov push outsl in mov mov sti or adc les ljmp jbe sbb cmp xor jecxz lahf (bad) cmp jge andb xlat fdivrl outsl xchg popa jnp push push jbe and jbe dec test aas mov int3 leave insl cld xchg jecxz xor sti fdivl sub sahf es add sahf xlat adc in mov fwait pop inc std mov push out dec fs pop notl adc jmp inc dec icebp mov (bad) (bad) outsl (bad) mov lcall and sbb xor or mov adc add dec xchg push cs push scas pop inc sbb mov sub enter les sbb sbb adc dec inc dec pusha sub push loope and es add fwait pop (bad) push loope repz push mov out inc xchg test cmp pop inc xchg and insl faddl inc lret dec aam jmp pop push push pushf outsl pop xchg movsl add and push fldenv out and or jle addr16 sti int sbb or (bad) fmuls add sbb sub and sub fcom or movsl dec pop cltd daa gs flds jp (bad) je mov or rcll bnd jno push into (bad) or test repz xor mov mov data16 dec pop cs dec ds fist push int lock aam jmp (bad) divl inc je (bad) cwtl pop mov clc xchg insb xlat cmpsb std xchg shll pop or int3 jae stos cwtl subl fcompl jno jns (bad) cli push cld adc and dec js jg adc daa cmp dec cmpsb int nop in mov adc and mov xlat notl fldcw cwtl dec stc adc (bad) and fisttp fnstsw mov cld dec cli (bad) mov pusha fdivl in repz lea lahf paddd push pop lods loop les cmp dec fild fisubrl ja div (bad) mov cld adc inc adc push sub xchg xor jb xor jl lret dec scas jae jne daa mov mov (bad) fsubp mov lds sahf movsb jp dec push sub loope ret mov addl imul dec adc pushf (bad) dec ret xchg xor insb push jae aas jb adc jbe sbb xchg clc push xor stc sub cmp lcall adc xchg add enter jecxz sbb cmp scas fnstsw lods sub jno sub pop jbe sbb sub fs dec fdiv cwtl sahf xor xor ds or sbb xchg test push jge xor jge sti leave (bad) fildll (bad) adc push cld jecxz ss xchg sub and mov inc (bad) insb xchg mov xchg or xchg cmp fcomps jb inc insl and (bad) xchg cmp (bad) and scas jae cltd cli loope fwait aad xchg pop mov lods aas (bad) inc dec cmc jnp notl ss addr16 adc adc cld dec mov pop stos mov push or jno imul pop daa dec jbe push popa adc dec movsb out imul sarl mov in pusha add sti xor and jo or mov jecxz sub enter or mov cmp inc mov enter inc decb aaa enter jmp sub jl (bad) xchg out mov cmpsb push inc inc push and (bad) pop jns push loope and or mov mov out add and cmpsl sbb lods fs xor outsb mov or mov repz shlb stos add jge push mov push mov negl cmp sbb daa notl inc cwtl shr xchg movb add push fbstp jle jno cld and mov sbb iret pop pusha pop lds mov outsb imul aad fcmovb push add insb adc pop xchg stos mov cmp push int3 in inc lods popf cltd test rcrl inc push push in xor xchg push jmp sti mov (bad) (bad) xchg ss pop mov test mov sbb mov sbb aaa or or mov sub fs mov jl jns cltd insb push movsl lcall or adc mov lea mov cwtl mov pop sub ss xchg icebp mov loop ljmp shr push jg fidivr test les push mov or ror dec push mov pop fstpt ds push add inc adc mov mov adc inc scas in mov push sub sbb pop cmp mov (bad) fnstsw (bad) fstl aam sub xchg into xor cmp jmp sub mov cmp daa cmpsl adc lret ljmp scas fadds mov add dec loop xlat test pop or pop adc test or mov clc in and inc sbb or data16 call aaa mov push xor (bad) sbb dec and cmpsl push fs mov popf jmp sbb sti fidivl lahf jl add mov xor sub dec mov xchg (bad) jo mov xchg (bad) cmp insb mov and test in (bad) aam (bad) repnz lds pushf inc push jg aad (bad) jmp cld movsb xchg stc jp stos aad gs insb cmp mov scas push mov inc fwait (bad) test fimul sti mov mov pop jne lods lldt xlat decl xchg fwait inc sub cmp dec lods mov xorl inc scas pop push in out ss leave imul mov pop jns and mov shr mov sub sti pop stc in aaa push stc xchg push (bad) stos das add adc or pop adc cld or add pushf lret mov jl jp imul pop imul add push sub es mov (bad) sbb adc and xor enter adc jmp cmp mov push out and pop xchg (bad) cs add cld mov xor ret ret jp je sbbl nopl (bad) pop sub icebp jmp push inc outsl fcmovne adcl inc jne pusha dec inc es mov ret mov cmpsl dec mov sbb arpl in mov cmp sbb jno mov jno movsb or sub ret mov aas mov mov adc (bad) fsts and test das rcr sti jp movsb mov jb jle mov pop and call sti adc jae mov inc enter or sahf or pop loopne rorb inc enter lahf xchg mov dec notb cmp in dec es xor aaa mov int3 jmp test xchg in sahf loop mov movsb pushf mov cmp mul adc mov in push mov ss jle stc pop out mov or stc dec mov ds pushf scas dec mov out add pop push sbb cld int push inc jecxz dec pop mov xchg call stc pop jmp mov push sbb push fnstsw and mov lock ss aam (bad) xorl rcrl fadds (bad) mov stc xchg jmp daa and pusha mov in popa pop arpl xchg mov mov mov ja rcr jno mov faddl push (bad) cmp and inc frstor nop mov sub inc lahf sbb inc adc inc (bad) stos arpl mov pop fwait loopne arpl es lods mov in inc adc lss sub push rorb js ret pushf pop cmp and (bad) xchg mov loope inc xlat scas xchg and out mov cmp (bad) mov fwait mov xor xchg dec daa std (bad) mov sbb jno add and sub sub loop jge dec dec xchg les jecxz aad xor aaa aam add das out fwait dec mov mov addr16 inc rolb mov lods adc add pop pop add imulb push and and inc and xor (bad) xchg cmp fnclex stos (bad) les cmp out ja inc ss mov insl pop dec mov push jg push outsl into inc and adc scas push sbb push leave cmp mov fnop out pop scas sbb jg pop cmp add jecxz pop cmpsb (bad) negl arpl mov pusha scas adc xchg ljmp out adc addl dec out add inc lea and fst mov or xchg jne xor pushf push mov adc and sbb jmp inc into popf or sub pop sub sti jb jp jp jp rolb hlt movsl sub cwtl sbb jp cltd call or or inc and (bad) lock scas loope sti fwait loop push jecxz mov add clc mov dec inc scas pop lods (bad) push arpl cmp das sub or insl test mov jne repz inc lock xchg xchg jbe lds lret aaa push rol out adc jmp rcrl fnstsw rcrl lea xor pop cmp jge push in inc js and fnstenv arpl bound adc xlat push jecxz jns or popa (bad) int3 push sbb (bad) jnp out idivb or inc push call mov fmul addr16 cmpsl sub lods scas and out fwait lret mov jecxz jl xor dec negb repz cli and scas sahf push and xor lcall add divl leave or xorl std xor ret repz mov (bad) sbb cmp mov cmp dec les lods mov or in test push cmpsb push jp sbb rcrb push inc pusha cs or loope loop,pn movsb js,pn icebp mov fbld jmp test or push imul mov mov addr16 (bad) in addr16 (bad) fs std cli sbb inc fstl push pop xchg adc sbb cmpsb or push (bad) sbb in pop bound cltd aad inc out adc push loop in add add lock stos jne mov xchg loopne or adc pop cmpl addr16 insl cmp add or cltd add movsb mov movsb xlat pop sub push pop xchg adc and xor pop jmp inc pop inc xor jo jp pop adc mov popf lock mov es out sub lea pop cli push dec push test gs mov mov movsl ss cmp nop or icebp jnp mov orl cli popf mov cmp pop into leave sbb bound xor lds cmp lods cmp lods ds fldl js or jae and leave sub cmpsl jl ljmp and sub mov outsb xchg jbe jp dec cmc dec icebp xor adc cmpsb jl xor push and jge jno jmp and ja lret leave mov push add xchg test mov out sub cmp mov jb and popa fcmovbe pop sub cmp roll arpl ffree xchg cmpl leave mov aam sarl mov sbb ret cs (bad) aas cld sbb cli (bad) addr16 or xor xor fsts imul sub inc (bad) mov cmp dec xor pop or mov test mov xchg stos add add hlt int sbb movsl adc in adc iret (bad) mov pop mov add enter ljmp nop in mov mov xor ficoml je pop sbb jge adc in add pop decl int3 xor jno jmp and lea jnp inc je icebp xor ret out imul gs das push out push sar lods clc jo mov mov mov push jmp xchg lret dec add lods (bad) inc adc fs fdivp dec mov subb andl not mov lahf jg adc pushf aad adc (bad) repnz in fsubl iret ss sbb lahf mov aas insl loop jge sub inc pushl sub mov xor adc xorl dec sbb ja repz popf add int3 push mov xor out add dec cld icebp mov movsl (bad) call outsb test mov cmpsb ds (bad) in fs cwtl jo pop js outsb icebp loope cmp and js cmp fisttpll andl lcall pusha or xchg xor cs sub cmovg aam mov mov stos (bad) mov mov (bad) psrad mov dec add mov sbb mov mov cmp add or sti daa xchg out das pop and pop xchg (bad) rolb adcb or add sub inc repz jo jecxz int lods faddl jge popa sub sbb sahf push rorl cmpsb hlt jp sbb push fiadd cmp inc es cmp adc leave jmp lods add negl xor cmp jae bound mov rsqrtps mov dec adc fadds or and push add loope adc and ffreep enter push push pusha jo lret sub sarb dec or (bad) lret in ds cmc mov ss cs test jmp push mull pop subl stos lods fs in stos repnz idivl and or rep notb daa es mov mov or or cmp jne (bad) sbb shrb aad mov dec sub (bad) (bad) jo clc jnp fstpl inc push pop int pop sub cli mov dec cmp mov fdivrp inc adc or mov or cmp and pop test push mull sub (bad) dec aaa lock lcall into call test int3 xor ja cmp gs (bad) outsb iret fidiv mov push sub adc xchg pop inc sbb cltd lock lahf jp inc lret movsl aad adc sbb nop idivb adc js in loop xchg clc fisubrl mov fistp aad xor jnp ja repz ret je xor popa push and addr16 ds mov fildll add mov in clc fdivrp or incl add jb sbb es jae hlt adc icebp lahf push das xor lods push movsl mov jae stc push dec dec pop (bad) push nop iret cltd aam decl sbb or pop insl inc out and test aas cmp and hlt push jns mov inc cmc subb fcoml mov popf iret push mov nop xor lock jmp jns bound fs mov andb jne cli js cmpsl insb ss lret lock sub ljmp or sub pop fwait mov add stc shufps in adcl js aam push dec pop xchg cmp dec into sbb imul sti addr16 imul adc sahf pop lods aam addb in ljmp (bad) mov fistl mov dec je jp inc pop cmc (bad) out mov lods fildl push mov mov jnp loop fwait lods mov sarb jp imull jnp fiadd and push lcall lods ret add icebp dec jmp jbe fstpt into xor xchg mov dec mov add dec mov out loopne aam in fwait push and ss sbb add in push imul gs cmp jle mov mov xchg push js adc lock cmp push mov push dec or cmp aaa inc adc mov aad loopne cli iret (bad) int3 (bad) clc mov das mov push pop and ret pop jg jge movsl loop pusha xchg sub jl into adc and aaa pop popa jmp sahf jle loop or jle aam sahf in pop adc (bad) jne repnz cld pop cmp pop sbbl cmp push or add cltd iret sub out add sbb std xchg mov and push out jae mov mov xor sbbl mov orb and sbb stos cld or outsl mov test fcoms in int3 cmp cltd sahf das push loope mov sahf add (bad) scas ds xlat jnp test sub adc divb or ja jl cli rcl inc repnz xchg jae push dec popa imul out pushf mov jmp or rol fstps in cli sahf (bad) push or inc push add mov push jecxz xor jb push imul hlt mov lret jge ja sbb popa hlt out nop dec shlb stc in add stos jae jl sbb jno ljmp das ficom dec (bad) rol push pusha cs xor fs fstps mov cltd outsb rcll dec mov pop xlat sbb lods mov lock xor inc cli or ja jge sub cmp imul push popf lds pusha inc cmpsl js dec pop lret jg les mov mov jp mov aam push push mov test gs xchg fstpl orb push jno ficom mov lds stos sahf mov pop jmp push add lcall cltd inc mov std ret push sahf andl push daa lds es (bad) (bad) call jge jae lahf jmp sarb jb or xchg or xchg push mov push aad push pop cli test and jmp repnz xor mov push cld call js hlt or sub jbe inc test sbb jecxz inc pushl sub pusha jns stos push xchg ss repz push jl xchg flds test add aad (bad) pop jno mov js vmovhps movsl std add ja adc (bad) cltd and and xchg cld jne lods out pop ret lock push push adc xor in sahf es jns sub cmp and xchg lds das addr16 mov cmp cld ds add shrb mov (bad) or cs inc sub pusha xchg inc push push jle xchg xchg add sub dec mov in push mov fldcw xchg movswl jl push icebp cwtl sub mov (bad) mov iret sbb or js fstps rcrl sbb (bad) push cltd fldt jecxz mov sbb loope sbb xor push loope jo and lods and push xor inc in test into aaa sti mov repz add and and xchg mov adc inc ss mov add fldl test mov dec push lahf enter jno mov and xchg add mull (bad) and int3 inc out and movsb mov adc jge mov xlat sub inc mov fildl cmpl mov ds jge jge adc scas mov repz pop sbb jnp rcrl push mov int scas add in cmpl (bad) sti ss into mov or push add test mov int insl gs ret push js fwait mov add aaa jecxz cmp or iret outsl and idivb pop jno xor and push cmp jp mov cmpsl adc (bad) jbe add mov mov sbb mov stc mov incb jns adc push mov add and call mov loop sbb data16 cmp or add rol jo mov cmc sarb outsb rolb jle xchg jge mov jb push dec sub icebp xchg jnp inc push mov xor arpl popf pop pop jns insb or xchg popa cmpsl addl and mov dec or out add mov sahf jno std into in fidivl mov push arpl add scas in xor arpl xor arpl outsb (bad) or jae pushf jb add test sahf aaa dec or lret movsb mov jl mov cmpsb fs sbb dec sub inc fisubrl jno mov cli jnp stc test fcomi xchg jno sahf push clc or mov pusha sub or orl imul loop nop sbb shl xchg stos mov jg orl adc or lds ret pop xor mov adc pushf or pop cwtl mov call cli lret addr16 imull add push push push mov adc movsl adc daa push mov pop in and inc push pop inc (bad) jmp addr16 sti push clc or cmpsb adc ret inc inc divb test cmp mul ss test fstpt and cmpsl std popf lods pop jb movsb push pusha xchg fbld inc aas cmp lret jle or xor mov sbb pop adc fistpl loope sbb jo or addr16 pushf fidivr sti pusha loop adc sbb lods add loop cs pop nop jl mov cmp (bad) mov inc mull mov xor fdivl (bad) nop inc push and mov pop movsb loopne xchg in xchg jle push and aam sbb lret dec in fadds pop xlat stc aas or aad lock call inc adc adc jmp xchg xorl sbb push dec (bad) lock and pop arpl cmpsb ljmp (bad) daa lea xchg mov ds adcl cmp out cmp test push mov and dec loopne mov sarl jnp mov dec dec cmp and popa ja roll push jmp mov pusha or or imul and sbb dec sub sub dec mov jo in (bad) jbe adc cmp in stos mov add je in sti sahf mov adc in or push sub inc mov ds pop decb sbb daa lcall adc jae mov (bad) xchg pop sbb inc jns adc cmp sub lods and into add movq dec roll push inc daa not sbb jae icebp cmpsb mov ret aas mov and sbb jp (bad) mov pop jns mov jnp mov stos jae aaa aam jno add jmp mov mov or sbb sarl push or movsl jle sub adc arpl in sahf jge mov xchg icebp ret fidiv xor xchg mov cmp mov sti mov cmp adc push cmp push ret packsswb mov (bad) orl rorl fwait lahf mov lods xchg cmpl mov test mov fnstsw cmpsl imul and int (bad) sub mov lret adc mov jno icebp xchg adc aas dec movsl lea push sar mov jg or lods xor scas or jge and xor js adc xchg repz fistpll in repnz dec imul cmp xchg data16 mov fdivp (bad) fs mov jle aam xor imul scas (bad) adc jmp je lret in xor in mov movsl movsb mov pop sub js gs and lret xor loope icebp adc and lret daa scas push and rol mov jb mov and call ret cwtl sbb out xchg sub fisttpl sbb jbe and dec mov xchg test pop or aam scas dec ret lcall inc stc mov jns ss push xchg stos xchg or test or add es in adc scas mov movsl fidivr jne jp push mov and jnp repz rcrb sbb pop jp add lods pop call ret (bad) (bad) pusha push dec or std cmp push add stc and jbe ljmp add xchg mov inc outsb ja (bad) mov pop test sub movsl xor ja mov cmpsl in clc inc (bad) fnop jns pop mov test inc cmp das cltd das cmp lahf xor cmp fmuls sar sbb data16 (bad) xchg xlat pop ds fcmovu movsl movsl (bad) xchg mov mov je xchg fmul inc inc ss and loopne nop popf mov sbb outsl push bound cltd sbb jmp divl push (bad) leave mov int3 cmpsl sti lret aas inc inc push jge in xlat (bad) inc popa pop test pop inc out cmpsl cmpsb mov jmp cmp mov je xchg mov mov cmc xchg dec add out jl gs and insl in xchg mov fwait mov lods xor (bad) dec fnstcw adc xor ficomp jl add fwait addr16 test (bad) in in ss fdivrs mov test ljmp cmpsl inc shl adc mov outsb aas pop test pop pop mov mov cs cmp stos xor and inc in outsl mov cmp (bad) adc cs enter mov bnd sub jecxz add cmp xor jmp mov inc adc cmc jbe and dec pop pop xlat mov xchg rorb xchg scas push dec js inc test sub dec fs pop stos cmc xor dec mov jae pop cmp dec out pop dec sub outsl lock stc fwait movsb push ja xchg push je mov pop fsubr sarb mov mov mov (bad) or adc push ljmp lock mov mov into xchg pop (bad) push push inc push pop inc mov int mov loop stc mov sbb cmpsb notb and cltd mov xor push (bad) push mov inc out dec mov stos pop and jl mov pop xor jne inc daa fld mov data16 outsb adc jg sub fsubl dec xchg test das hlt adc mov je test into ja andl mov pop out add hlt dec inc pop ret sbb push (bad) int mov arpl fnstcw out (bad) jns inc lret mov mov pop ja mov outsl in pop les jo add sub cwtl jns mov adc aaa subb (bad) movsl jle sbb arpl xchg lret push into int cmp cmp arpl loop shr push jmp mov into insl jecxz xor push dec int3 lret lahf sbb lds jge mov pushf js dec out in test test mov push sbb jg addl mov outsb inc lods and imul jo idivl add jno mov cmpsl int jnp push add mov xor push cmpsl xchg stos (bad) int3 pop xor adc pop sub lret stos iret add icebp jbe js mov sbb ss enter int jae xlat in mov aaa inc hlt lea sub mov jne ds in mov add mov repz pusha popa shlb ret fsubrl add sbb and outsb mov push or (bad) aaa imul jmp gs js leave push mov int3 jl push inc imul pop push or lret adc int maskmovq mov xor loopne stc stos icebp in test cmp jmp aaa xchg das cmp push inc inc pushf adc sahf push outsb inc cmp cli sub mov inc push or sar lret mov cwtl xchg cld lahf add push cmc and pop add inc mov adc xchg pop xor ret mov jmp imul sbb mov scas xchg and xchg or sub dec ss lret inc fimul jl jne pop pop dec sarl js pusha dec jae and loop cmp xchg mov and addr16 xor int lahf jo loop push xor add ss scas and cmpsb push test (bad) (bad) out fs or rorl jnp (bad) pop jge fstps stos in dec aad les mov ljmp mov popa mov mov inc xor sbb jne cmpsb mov jnp inc sub xor mov cmp (bad) lcall mov (bad) mov fidivr daa aam jmp cmpsl outsl mov push xor adc add dec lds clc inc and xchg xor fmul pop push inc pop jae lds ss (bad) (bad) mov inc fcmovnb mov test insl jmp dec popl mov int adc adc lea xor dec insl mov loopne (bad) lock mov mov test jg mov cmpsl or xor add (bad) and data16 cmp mov fwait push jnp sbb push lret dec pop fs mov daa rcrb pop flds (bad) jno mov (bad) scas or cmp repnz jl add int3 dec mov dec pusha sti cmp push mov (bad) xchg xchg and sbb xchg dec lds dec or sbb mov inc cmp inc rorl mov mov mov popa je add push inc xor jae or dec mov mov mov push xor adc push sbb ret sbb out adcb test adc sarb or xchg rcrb pop push jecxz lds xor pop pushw and or jns inc stos adc (bad) in outsl dec in and mov push sbb jb sbb mov jmp out and sub cmp pop lock xor lcall insb push mov jle jmp pushf xchg xor or adc push (bad) xlat nop push test xchg push dec jle out inc or sbb xchg add pop jmp addl sar stos add gs iret inc lds pop ret lods (bad) femms ss test lods nop jl stc test and pop cmp das addr16 in inc out pop jle (bad) cmp insl or fcmovu push popf decl ja pop ja push add inc jo or scas sub sbb addl bound add aas cld inc xor test pop xor push fcmovu cmpsl cmpsb subl sahf lds insb push jb arpl mov mov int3 pop movl mov mov loop dec outsb roll loopne (bad) andps call sub inc jmp xor loopne pop adc or mov sahf or mov or aam fisttpll aad sbb and fsubl xchg insb mov xchg (bad) fbstp loop fwait stos std pop mov and adc mov cwtl push cmp xchg adc adc lea (bad) (bad) insb lds stos mov outsb ss out lock mov sub cmp popf adc mov mov add (bad) sbb loopne insb popa inc jecxz xor adc mov dec inc xor xchg into dec pop xchg imull sbb push into mov adc add into inc popa sbb ja stc dec adc jp popl fcoms adc aam or or cmp and popa aam (bad) sbbl stc and mov sub in imulb push jae rcr xchg icebp add stos dec pop inc and add xorl or bound sarl mov mov mov xlat out inc push sti inc ss leave imul test (bad) jae inc dec sub add js mov mov adc pusha jae stc xorl mov xor mov sub test test cmp jmp or mov fisttpl movsl jnp pop xacquire jns aaa and addr16 mov fwait dec int pusha dec out xor dec sbb mov push adc jae sub xchg data16 push or mov in inc jecxz jge dec sbb or out mov cmp xor add jmp outsl nop sahf (bad) fmul push cmpsl and adc in cmp fdivs xor fsubl movsl out cmc sahf jb sbb push sbb ss jne sbb sub in enter pop dec push adc mull sub aam sbb cmp jnp pop leave mov push adc push andl (bad) mov mov pop int3 mov push jge cli xchg outsl xor adc cltd leave jne out xchg (bad) mov sar mov jg call sbb hlt or or jbe aad sbb lods das push or xlat and icebp xchg test repnz leave xchg lret stos xor hlt mov or mov dec cmpsl mov xchg out scas cs (bad) push jns,pn loope push aad out dec xchg cmpsl mov xchg inc sub push cltd scas sbb jb hlt lea dec jne jb jg leave add movsl cmp aaa jp pop mov gs xchg push mov les mov mov out push shll sbb and dec fild mov scas jecxz andb sti dec out push in jg mov cmp push inc scas nop out dec push test rolb mov adc add mov (bad) ja jns scas rcr cld jp lods push xor gs repnz jle test jge pop jle push std leave repnz hlt mov leave add sub xor rcrb loopne cmp mov sysenter add push addr16 jl cs (bad) repz repz call out out mov push cmc ljmp cmp xor in and loop mov (bad) loopne mov sarl pop loop adc gs cs add dec mov inc add push cltd jb aaa lock jge std sub inc ret mov ret dec sub addl in mov imul ja dec push xchg leave cltd mov pop dec cmp pop test das cltd and leave and pop push jns push mov je stos popf int (bad) or stc hlt mov movsl dec jne mov lods adc jns jmp xor hlt out push adc insb iret js lahf push cwtl adc mov (bad) jmp sub dec scas xchg dec dec adc add std xor push scas cmpsb aam mov mov into aaa xor jnp jge (bad) mov cmp lret inc call xor scas push repz dec mov pop sub cltd (bad) rclb add push xchg dec xor jne les pushf add push jbe (bad) mov out or fwait int or imul cmp sbb lcall dec loope mov bnd xchg fmull mov push jmp jbe push xor push test fsubr sbb add movsl mov ljmp in xor cmp nop dec lret es pop push (bad) jp dec loopne aad ja or test (bad) jne mov mov jg mov adc mov dec (bad) (bad) out popa sbb and test dec lods inc jp cmpb mov jle and xchg sub mov pop popa sbb arpl adc mov inc fnstsw insb sbb in test push or cmc call aad shl jecxz add test add imul add cmp sbb outsb andl or xchg sbb ds bound mov adc jnp pop cmpb sar inc or dec cmp test mov les repnz jg mov ss xchg dec push cmp jnp hlt cmp ja in sbb jle in pop popl jl (bad) or add lahf stos jne aas push push adc aam mov and push fidivrl push fstpl and add xchg lds or mov dec bound cli push sahf pop sub mov imul mov pop xchg in lret in jbe das fadds out or jbe push dec or test les adc add divb cmp add sub cmp or mov imul sarb mov loop mov enter xlat mov jle in cld hlt hlt sub jmp in push stos out orl add sbb push mov data16 out shlb mov lahf in dec cli testl pop push ret movsl jmp xchg mov xorb pop xor push cmp test dec xchg out mov push movsb mov mov loopne cmc outsl or dec shr or push jge mov shll icebp aaa test or shll fprem1 jnp xchg and out xchg cmpl cmc mov and pop and push cmp popf sub lret sub cmp out pushf sbb pop aad mov lea aam cmp jmp and lahf xchg jno,pt mov cltd out aaa sub in lret mov fdivs sbb inc mov in xchg fwait rol cmpsb mov ljmp ds aaa bound fildll sbb cmp cmp mov repnz repz pop mov leave nop clc and notl outsb roll push inc and inc push mov das arpl mov xlat inc repz sbb add mov xchg pop mov mov pop in mov enter jno xchg test pushf (bad) sub mov test dec adc mov add inc notb jge mov add add daa imul pop mov and pop dec (bad) int iret lock and jo jb sub pushf cmc mov dec aam push adc pop lcall xchg mov jb xchg mov (bad) mov in ljmp or fidivr ja pop and jmp adc pop mov push mov or push xchg test arpl sbb lret xlat and popf lea or xor add loope jo push sub test fcompl add gs in adc pop add dec test jo inc pop xchg lock lret push push fldcw push or mov add stos sbb (bad) (bad) xor mov test mov mov outsb je or dec cmp lret dec cmp mov pop dec xchg cli cmc mov xchg in out stos cmpsb push adc mov lds and sub adc cmpl dec pop push hlt sub out push fdivrl mov fucom lret inc addr16 repz repz insb jbe dec or cmp sarl xchg mov int3 fwait add cmp notb gs lret xor stc cmp mov lahf test inc cmp fs popa adc push xchg pushl dec rep and mov jp fcoms imul add shrb sbb mov mov sbb test dec adc idivl push add repnz mov xor push arpl icebp jae cli mov cwtl mov call jmp mov fadds leave lcall jns pop out add fimul clc fstp sbb es sahf pushf scas sbb outsb mov jne sub ds mov xchg sub sub cmp add mov ret in cmpsl cmp mov lret bound ljmp aam (bad) pop dec jno push mov imul enter add (bad) mov push jno (bad) and inc mov hlt (bad) jns cltd cmp mov insb enter mov cltd arpl push pusha lods std fsubl bound cltd pop out bound mov pop push fmull or push and repz push pop mov push mov lock ds mov in add xor jecxz ds rcrl add sbb and adc ret aad arpl push ja (bad) test mov fidivr insb or lcall cli ja in sub andl pop dec ficoml pop push lods (bad) xor lds pop pop fadds add hlt add xor inc ljmp pop (bad) dec adc mov xchg adc mov mov aaa xor jl iret pop adc movsb cwtl int3 and xchg jo hlt mov sub xchg or inc dec in dec cmp out cltd cld lcall add sbb test add sbb and sti cli popl fiadd out xor mov je pop int3 repz aaa push (bad) stc loopne sub mov sub sub jmp ss enter loop ljmp shlb (bad) fisubl rcr pop (bad) outsb xor in pop into scas add (bad) fcomi sbb stc adc xor xor pop dec xchg fidivrl push sbb fiadd daa es gs mov int dec fwait sub inc or mov int3 push or cmp lcall ffreep jns or leave push pusha mov sub push nop sub fwait or pushf pop mov cmpsb mov test or loopne or aad (bad) je stc xchg addr16 mov cmpl push pushf lret jecxz cmp pop adc adc data16 xor push pop je xor in movsl mov lahf and mov test mov insl es scas mov test adc dec lods mov pop loop fldenv sbb fcompl fst mov ret sbb out mov mov test in test or pop lahf (bad) dec imulb inc (bad) stc insl ret dec push ret les ret sahf push pop int3 sub int mov cmp in insb jae in popf fucomi push imul pop dec (bad) enter imul pop add test sbb mov inc push repz mov push cmp xchg mov inc cmp test push mov or push das pop jno add scas movsl adc pop aaa sbb ja lcall jp lea bound aaa insb pop lcall int pop icebp sub ja mov into repz push (bad) and or ret mov aaa inc push sub sbb xor notb jg sub and sub in test fs and daa inc mov push xor jns or cmp les dec push add cli sbb cmp or jae and mov jge xor cmpl pop cmp sbb cmp insl sbb xchg ja fidivr add push cmp (bad) pop aad sbbl popf cld dec outsb movsl xchg adc add jns mov sahf (bad) mov sub jo sub cmc lods xchg dec mov xchg sbb enter push lock xor jge mov jle mov loop inc jmp push pop ja movsb and sbb jl push insb pop scas in rcll arpl sahf leave loopne mov in pop add repnz mov xor clc fwait jp cltd dec les fisttpl out cmpl ret aas mov jno scas sub not push pop mov fmul dec jmp mov lock std sbb stos js fistp sub pop add js shrb xchg mov jle mov and and (bad) mov cwtl fistpll ret popa mul push fxch jne dec mov test daa inc xor mov paddq sbb or daa push dec out and and or push outsl cltd xchg movsb hlt shl loop pop pop ret inc adc out lret cs push popf cli mov bound ret push xchg jge xor jg ss inc aam mov inc or jno pop insb cmp shll add pop xchg arpl in in push inc int3 xchg mov enter cmc jmp mul or jae int adc sub in jge pop inc dec mov pop (bad) fwait int hlt mov xor loopne mov lods (bad) out rcrl sub int3 inc sub lds scas adc mov test sub inc xchg loope fdivrs mov outsl (bad) mov sub test sub js or and mov xchg jge mov rcrb je add mov push mov int pop ljmp sbb mov sti (bad) jno imul fnstcw or fs icebp sub push sti add sbbl mov pusha test jno ljmp jp adcb push aam pop adc mov fcmovnb mov js add call jg cmp idivb dec int3 or xadd add push push in push call and or cmp cltd insl mov in fwait sbb mov sbb adc lcall rolb mov mov sarl enter xchg dec push xlat pop jmp popf dec push clc mov movsl icebp mov test scas adcb jbe,pt inc mov subb mov pop out out sub out lock aad idivl mov shrl out mov inc mov rcrl movsb inc mov xchg jg std pop mov test out push pop xorl xchg mov sahf mov inc cs mov loope inc add fsubrs adc arpl sahf popf or sub pop sbb mov jmp test (bad) in iret adc inc scas cld stc (bad) fs stc jmp cmpb xchg mov addr16 das cmp jns rcrl inc jae stos sub inc jne xlat fstps mov pop push iret sub bound pop aam in sbb mov dec cmc mov push insl mov sbb mov jl and lods daa add jle jo add and jnp mov jnp push or or sti rorl cs lret adcb adc push dec mov (bad) add fsubrs add leave push leave (bad) push xchg mov cmp mov std jmp es fsubrl stos ret add adc int outsb push mov adc ret push adc mov clc ja mov add mov pop cmp xchg mov or xchg or rcr sahf push push fnstenv (bad) xor sub lret cmp and and add outsb sub js iret cld and int or fs lods pusha pop (bad) movsl andl pushl fcmovbe movsl ss and cld sub dec jnp insl inc insb pop inc ss insl xor scas loopne out cmpsb fisubr inc push cmp sahf ja and inc and gs cmp sarl std jle mov or ja add shl mov fildll inc dec out mov inc bound pop push inc addr16 iret fmuls adc andl jno push sbb movsl sbb or cmc xchg out lods or push insl or adc out ret jge sub dec sbb repnz add lret add out mov fiaddl mov mov imul and sbb xor xchg mov cmovs cwtl dec test dec inc ds mov push mov (bad) int xchg inc loop and jle js add cwtl cltd mov inc xor pusha lea pop cmp jne testb jecxz stos fsin xchg fdivrp shrb lods orl push (bad) and push and arpl mov dec fiadd aam movsb aas nop cmpsl xchg fisttpll scas jnp fwait cmp pop iret rcrl xchg sub xor fwait inc fcmovnbe roll mov mov jbe cmc sbb inc xchg in adc arpl les xchg jle jl ror fildl and pop mov scas add rcll mov insb jae xor and into or mov lcall (bad) lret xchg repz pop pusha xchg mov adc arpl dec arpl adc inc jo push addl cwtl fcoml dec jb sbb ljmp sub pop pushf cltd dec movsb and hlt rorl cmc nop mov pop dec les sbb (bad) cmp leave xchg fsubr and jg movsb jmp hlt iret xchg ror xor gs push stos pop mov jns pusha data16 jbe roll push xchg addr16 das (bad) jb sub imul xor iret pop inc lret jne mov int push xchg jbe push add fwait insl pop and lcall shll iret mulb pop adc inc xor push dec es in movb mov dec xchg cmp clc shr mov mov pop jge jae inc or ds int xor in mov loop adc decl pop data16 out cmpsl xchg cmp aad rol mov cs loopne jmp fldenv jge or mov int3 (bad) xlat jmp outsl test jl fildl lods or inc lcall and stos jle ds push movsb xchg es jns mov roll jne mov xchg add jnp test iret adc movsb fiaddl pop lcall xor cld pop sti mov sub hlt lods cmpsl and stc inc inc (bad) popa and add push lcall adc push test mov cmp std cmp movb mov fcompl mov jne xor mov mov jnp dec aas mov xor cmp pop out sbb fmul out fsts pop mov pushf mov fisttpll sub add icebp cs dec xor jbe add (bad) cmp jge aaa pop jns lahf cmp jl inc bnd outsl and mov xchg roll sub loopne mov jne fistpll inc fwait ret add movsb xchg rorl jns and pop mov cmp std (bad) push push xchg fs test pop rcll outsb mov jle xor xchg nop sbb pusha mov mov cltd jno ret or (bad) mov sub bound jo inc and stos ss xor push dec out adc out jb push cltd stc push xor pop daa jge int out push sbb push pop push in sbb leave add in pop xchg (bad) shl mov dec lahf call std pop mov cs shrb mov dec fstps cs and mov fwait cmc dec daa jmp xlat int xchg jl mov ds push repnz jle pop and shrl es movsl dec and mov push lea pusha mov rcrl push rcrb xchg stc inc je jne cmpsl adc arpl or into xlat adc mov mov out jno enter pop mov fst xor pop or addr16 ret lea lahf sub pop push push mov sub xchg and repz ljmp mov outsl and pop sbb insb test pushf dec push rcrb cs jl das (bad) dec and inc in das loopne subl enter lcall xchg shll mov adc mov inc (bad) in xor jbe pcmpeqd out sub (bad) dec pop or mov jle and mov movsb hlt test arpl es inc ja push cltd decb mov roll imul fadds stos inc nop mov push stc aam call pop xor add push aam and movsb aas sub add cmp and inc stos or jle and out cmc xor lods cld jnp pop rorl inc pop push ja sub cmp sbb sbb adc test test aaa outsb jb gs mov xor movsl in xchg clc out pop into sahf (bad) imulb mov dec pop in popf call das sbbl sbb mulb jno xabort mov push rcrb or xor or addr16 xchg mov es cmp or in push lret sbb cmp subb add loope or and xchg test or hlt pusha pop xchg inc divl js inc mov shrb les pop in jp mov pop call inc or arpl outsb dec cmpsb testb (bad) enter adcl es pop sbbl jmp xchg mov das push sbb loopne in mov lds sti insb loop inc pop cmpsb adc xchg aas std pop jg cmpsb push jno mov mov mov repnz cmp pop bound push add andb lods sbb mov inc mov push jmp imul fmull iret in pop sbb xchg cmp add push fxch sbb inc dec jnp pop jge js mov mov (bad) sbb movsl fucomip imul or std jno xchg xor mov mov lds insl jle repz lods fidiv and xor push mov push mov loopne sarb lock xchg mov xchg lods scas movsl sub cmpsl (bad) sub jb arpl pop popf fnsave pop sbb enter pusha mov mov inc add sub mov (bad) jae push or and aam jo lret sbb cli push add stos push test lock xchg (bad) or leave pop adc hlt andl add and pop (bad) or (bad) push je outsb and jnp cmp scas xchg inc or fbld push mov xchg push outsl lret add insb sub add pushf sub or out ss adc push mov cmp mov adc xchg (bad) stos lret rcr fiaddl pop cmp ficoml sahf xchg xor dec lahf pop xor cwtl and mov pushf xchg mov lods jb in lds jge xchg cmp cmp dec ss jo lret mov or mov mov insl dec pmaxub insb jg lods cmp movl xor dec repz ja out sub insb lret fcmovbe pop xchg sub das leave lds ss jb push (bad) popf leave jle jno jae out adc jmp sub pop or fsubrp dec outsb shl xorb iret in mov cltd movsl push mov add xchg dec inc lahf stos lods lcall mov fldcw push test xchg lds cmp test jb inc dec jno inc dec ja jns cwtl push and pop orl ficompl ret (bad) mov insl jbe jb daa mov inc and test cmp lret sbb das fistpll test lods movsl add inc and and xor mov mov cmc xchg jge pushf xchg lods or pop dec sbb adc loope mov adc sbb repnz (bad) repz or add push pop push adc fcoml imul out mov je jge jae out mov add fs scas xchg lret xor mov xchg fs lret cli xor iret inc or xor out cwtl and sub in stos adc flds jbe scas jnp ret sub ja mov adc std mov in rorl outsl lahf cmp and pop (bad) jne xchg in mov push std nop xchg dec sub mov and leave dec push sarl add loop xor hlt iret pusha push jp lret flds (bad) xor (bad) sub mov mov mov lds out mov (bad) popf jae std add or lods out xchg test and inc dec ret push cmp loopne movsb mov enter fstl (bad) sbb sbb xchg stc test popa inc push sub add sarl mov arpl iret jb in xchg push jno sarl outsb repz stos mov pop xchg sub dec lahf stos loopne pop fsubrl stc aam pusha int3 push mov jmp push je lcall sahf js inc jge int3 insl aas les inc rol dec pop sub push dec ret lds mov std sbb ss into aad loopne mov xchg add mov pop xor jl or and pop mov jbe pop pop cs and add (bad) mull sub lods nop lret push dec pop xchg xchg push sbb push add and repnz jnp sti mov sti leave add je test stc out pop jmp mulb cmpsl or int3 sbb cmc je in fidiv movb int jns sbb jb ja xchg push out push mov add cmp (bad) mov sti cmpsl notl loop rorb fcmovu pop sbb mov ss jb stos cltd adc stos rcrb ret arpl loopne mov sti lea in push repnz lahf fldt jns sub daa sub xor adc insb movsb dec sbb arpl xor push jmp pop sub jae sub or adc call test mov out mov add adc fsubrl xor test xor lock into fs loop cmp sbb xlat push add (bad) dec xchg push (bad) or sbb out outsb sub mov ret popf mov xlat xor adc (bad) sbb stc movsb movl xor fimul mov pop (bad) adc in sub sbb xchg sahf lods dec push mov andb jle push push test push fistp add lods mov test pusha test jg xchg repnz leave push inc adcl sbb cmp jo nop aaa jb cmpsl divl (bad) ror adc jp (bad) and and xchg movsb mov jmp fxch int sub dec xchg (bad) adcb pop jmp cmp or int3 push push and push cmp (bad) aas or call xor mov (bad) jae js mov add jno cmp mov inc xchg jns add mov popf inc xorl jne inc add cwtl sahf dec mov cwtl adc sub ficom adc mov out inc sub cmp and loop xchg (bad) cltd xchg or scas sbb pushf pop lahf and mov xor inc rolb pop cmpsl rorb (bad) cmp sbb add lds lret xchg xchg sti test gs xchg sub addr16 inc and imul insl or cmp js out or cmp pop mov ret outsb or mov lahf test daa mov pushf or jno rorl (bad) push jecxz ja inc lods push call adc jae repnz loopne cmpsb push bnd das mov sbb sbb aam dec jl,pt push mov dec mov mov mov xchg call clc icebp test cmp xchg xchg movsb cmp jp daa movsl mov sbb les xor pop addr16 popf pop leave ret cmp mov add lret jg orl add push sbb subl jl ret popa xchg leave jae xchg xor dec pop call lahf cmp pop icebp inc call mov out scas dec add shrb out insb adcl ljmp inc sub add mov mov inc std out or mov aam mov fsubs int mov sbb mov sbb dec ljmp jae stos dec inc mov xchg dec fsts add dec (bad) mov (bad) lret add in cmp mov shlb iret call dec out dec hlt movsl fnstcw inc jecxz mov xor push mov cmp stos push adc push rcrb lds into mov les and lret mov xchg xchg ror push sbb pop mov fimul xor in icebp cmp jne pop jmp pop push lds cmpsl sbb je (bad) lret mov sbb movsb mov sbb leave jbe dec js jb rorb ja out addr16 xor mov adc jp mov mov and dec xor jb push pop mov lea das scas (bad) adcl stos shr or pop je lret add (bad) fisttpll sub sub fisub ss mov mov xchg mov jmp ret push cmp jge cmpsb push or sahf and addr16 mov jae mov inc lods cmp inc repz popa pop push or mov movsb lods xor lock xchg orb in hlt sbb and aas dec rorb xlat mov rcrb sub test cmc jo dec sarl ds push push mov add leave jmp cs (bad) (bad) jmp mov cwtl jp int3 or insb bound cmp aaa jge jl mov insb fwait mov sbb sub mov sbb mov sub fisttp add lret dec xchg or popf add push cwtl dec adc enter insb loop mov push mov adc pop mov and pop sub sbb fwait jecxz xor popa (bad) fcomp push add sbb dec inc xor xchg adcb inc loope jbe inc jecxz cli and xchg sbb cmp stc cli sahf push adc pop (bad) fsts push pop mov fisttp dec imul aam (bad) fldt or movsb in cli pop rorb (bad) clc test pop scas pop gs dec popf loop push stos hlt cmpl sti shlb hlt pop jecxz push stc imul inc (bad) (bad) push add fs and lds xor bound mov fmul sbb cmp jns adc push lock cmp out test jmp repz mov sub lods add xchg sti loop mov pop adc jg mov dec jo push inc mov push fidiv jns add (bad) pop rolb push out push gs movl (bad) repnz in push movsl sub std mov dec sub std faddp dec lock cli out pop jno ret (bad) xor cmpsb ret sbb cmp xor jge xchg (bad) push andb pusha addl outsb bound mov mov rcrl (bad) and xor rcr (bad) in pop in test cmp popf sbb (bad) or outsb xor pop xor lods pop fistl push fisubr bound lods pop nop mov sub pop scas gs add or push sub and jl pop imul push mov mov fcompl sub xchg jae pop imul (bad) sbb push movsl and jb pop sub dec test mov add loop pushf pop rcrb int3 and shrb cmc mov add mov fcomps (bad) je sar in xor (bad) idivb shl cs cmc test mov adc xor test (bad) and sti sbb (bad) or sbb jmp or push notb cli fnstcw sub sbb add popa xor (bad) mov test jp push and outsl lds jg ds mov xchg dec mov push mov pop push xchg jp inc xor or cmc push pop out (bad) cwtl jp sbb ret mov dec icebp (bad) xchg push scas mov dec and or repz pop stos mov sbb and xor dec inc xchg xor xchg cmp insl daa push (bad) testl pop cs mov xor gs inc in xchg add push pop int3 stos jp (bad) jg pshufw xchg gs add fnop mov mov cli out mov stc test or lods lret adc dec nop cli aas stos mov nop jmp mov pop jnp fs push movsl aaa les mov push mov (bad) jg pop sub sub jo rcrl addl adc repnz add cmp pop add out les fcoms in iret cli xlat dec test xor push or sub (bad) jp es sahf int ja (bad) mov out inc mov in cmp mov mov xchg stc scas test popf das cmc xchg mov and adc dec and xor stos push idiv in pop jnp cmp std clc push mov cmc jo fcmovnb fstl and lretw adc add jns push test xor sahf mov mov sbb sub and sbb jno aaa pop sub jb mov fsubrl nop les mov pop lds dec hlt fs out xor push fs dec rolb jl jno xor sbb jo jge or repz mov or cmp mov test sahf sub fnstsw xchg adc mov sub fsubp inc pop icebp cmp dec sub mov test dec inc lods leave sub cltd pop in inc or leave insb or xchg or inc adc jge into push push xor negb jnp xchg mov jae mov pushf xchg lds test stos int addl repz dec add loop push je inc aaa stc or adc cwtl outsb add nop movsb loop loope in mov xchg mov jae jmp pop scas mov push cmp adc or outsl in xchg repnz aad aad sub aam ret aad pushf fwait mov insb dec xlat or xor push mov push sub leave or imul sti hlt jnp in lods jns (bad) idiv mov sub adc imul cmpsb pop (bad) loopne lods fwait in aaa push leave pop dec cwtl sub pop mov mov fistpl iret add dec imul mov and cmp sbb (bad) mov (bad) jns lret mov (bad) lret mov dec inc xor inc (bad) jmp xor sarl aam in push xchg loop (bad) in popf sbb add (bad) dec in fucomp sub add jno lods jg and mov repz sbb (bad) dec cld out sbb test adc add (bad) icebp lods in and dec or mov mov dec shl xor mov pop jmp (bad) notb mov add sub (bad) and mov xchg fidiv or add fwait sbb fimul pop out shll push movsl jge pop sbb pop ljmp outsl outsb fstpt jmp add sbb push jecxz fwait loop popf mov dec adc lods in cwtl leave fwait xchg sti insl inc jge add xor in (bad) jno xchg xchg adc sarb adc in inc imulb push xor (bad) push out lret push dec in and call stos pushf mov inc mov (bad) inc add push pusha test pop push pop adc mov enter out add and cwtl in xor xor in sub int cmc aaa addr16 sub mov sarb xor mov dec das inc mov std lods imulb jbe jo icebp and pop int3 xor (bad) push add aaa or dec imul aam call inc xor jo cld sub pop sti sahf mov and mov in jbe mov pop mov cmp loopne sub and scas mov inc jo cmc mov pop sub fsubrl outsl mov popl lahf push lret cmp dec enter sarb in add xchg cltd adc mov repnz (bad) push sub ja insl ret jp push les xor mov push test xlat xchg mov dec ljmp daa add ja scas aam scas push mov xchg cld fidiv add das xor adc push sbb and fdivrl and or mov cs fsubl es pop fcomps mov ss push repz jb sbb imul shrl insl subl shl push jbe imul jl sub mov jbe ds rcl mov cmp sub xchg sub jge cmp jne lahf push pop xor sti daa push sub sub (bad) in sbb pop push mov jmp lahf imul inc lock add out xor outsb mov jae not shll lahf xchg mov shlb int3 int mov insb (bad) and xor ljmp scas mov add pusha mov add sub mov jae ret das mov adc xor lahf js xchg sbb mov addr16 inc movb adc dec roll mov jmp pop sub xlat push dec xchg pop sbb ds test push mov jmp lods in out in add pop faddp pop pop jnp lahf push and ret movsl clc cmp xor stc or or pop pop aad mov roll push mov fildl pusha jecxz lret ds imul es adc and pop xor das cld js,pn das jbe lea sub dec insl push test sbb jno stos jbe xchg and decb lcall andl and loopne mov cmpsb imul call int push inc or ds mov jne imul jb iret cmp aad inc pop mov (bad) (bad) pop stos jle cmp and vdivps mov adc push inc cmpsb pusha cmp loopne pop jle rolb xor and pusha ljmp cmpsb jmp sub divb push inc cmc mov pop mov dec and ja cmp add sub pop cmpsb cmpsb jmp mov pop push sar stos xor pusha push int xor or cli fidiv dec loope incl mov mov and sbb inc mov jnp adc fimull icebp add bound lret mov aam fisttp outsb lret xchg mov cmpsl and jg mov sub popa loopne ss push mov js sub mov aas push sub xchg fdivrl or call aam dec jmp dec mov pop add dec sub add fcompl adc dec data16 and xor inc rcr mov add mov cmpsl mov xchg mov adc fnstcw pop lods outsl mov (bad) and and xchg jecxz jp es xor lret push fisubrl je jge sbb add xchg sbb and lods ds sahf (bad) leave (bad) jb and cld mov int3 mov (bad) mov xor push fidivr add fsubrs subl mov add push mov push push call push cmp pusha (bad) fcos in les and xchg lods lock int3 xor sub mov mov scas sub je nop inc push jne pop pop test sub (bad) cli test xchg hlt pushw stos push jo lret fwait xchg xor pop test das fiaddl in in das sub ficomp add pop cmp fiaddl dec dec (bad) cmc insl lods addb outsl stos pop xchg xchg adc call aaa incb pop push ret sub hlt inc clc lahf fwait adc xor outsl out outsb stos or jne divb call dec fildll addr16 jle fidivrl or or cwtl lea int scas xchg mov lcall pop fistp push add dec or mov sub mov (bad) (bad) repnz mov mov sbb sub or xlat pop cmpsb mov fildl xchg cmp add stc dec movsb xchg cmpsb push mov ds pop xor mov mov sbb lds push inc mov and sub mov repz mov mov cmp movsb and jns cltd cltd jnp push outsl xchg addr16 push lret aad mov lret bsr movsb iret aaa repnz enter jmp inc das and xor call stos mov popa addr16 xchg fsubl push mov add adc add enter dec pop (bad) mov mov dec mov push cmpb sbb adc fs dec push test inc loop push push sbb addb shr punpcklwd mov pop mov roll bnd adc fcmovu add mov outsl adc adc rcll jnp cmpsb xchg pop sbb add or jae (bad) out mov cs jmp or mov inc pop mov fidivl mov shll mov popa mov popf xor xor call and lcall push mov pop inc xchg (bad) cltd sub (bad) push cmpsb jl cltd add mov fldl sub nop pop rorb mov push push lds jne ds ljmp outsl addb inc cmp arpl sbb stos sbb mov or gs push or sbb inc jnp and jg scas and or js jnp lods int3 imul xchg std pushf stc loope mov fnstcw bound mov fistpl dec cmpsb add mov in inc into mov cs out jmp fild lods enter ds nop push or mov ret roll sub or int lods inc outsl add clc cwtl mov jp pop add jne mov std arpl and jae fnstsw jecxz imul dec test mov sub add sub pushf das inc loope mov lock (bad) lret aad pop mov mov add sub sub and cld sbb shll in jmp js daa fnstenv ljmp fdivs inc cmp movsb fsubrp inc sti cmp fnop out mov repz push ret inc loopne pop jge iret jae in pop pop jp mov push jg push dec cmpsb out dec enter sub imul mov rorb jb insb pop in cmpsl xchg outsb cmp imul (bad) or cmp idivb push jb jb das add pop jbe add je jmp (bad) mov jmp xor add jmp inc cmp ja xchg aaa loopne or sbb int fwait inc test add sub aaa lcall movsb cs mov mov sub and imul inc lea push mov (bad) daa pusha mov mov dec mov or fsubrs movsl movsl mov add add les (bad) (bad) pop test aas test movsl xchg in mov mov in insl adc sub int push mov scas mov mov lds test adcl xchg mov (bad) mov movzbl push pop mov mov push mov stc xchg test and mov loop and in test fnop mov (bad) push aad cs jl std popf loope loopne mov push push jae jae jne subb shll or ret xchg and bound ret lahf in sbb lods aaa negb xchg mov pop pop cli aas outsb imul push sahf push and sar out (bad) out mov mov int enter add test clc push jne xor jns sbb imul and rorl in int mov adc (bad) jno cmpsb cltd test pop (bad) mov push jg jbe sub fidivl mov into and inc mov in xchg aaa pusha in stc mov push lea popa cmp xchg mov inc cmp stc dec aaa (bad) and inc imul movsl shrl ds icebp add ja dec inc pop sbb ret or test popfw int3 cmpsb push test pusha pop xor sub dec dec push jp mov sub and lods sbb mov enter and popf pop and in lea push mov pusha lret int cs pop mov lahf fldl movb fwait push sbb inc xor xor cmc daa inc test in lcall movsl jl jle subb add std mov outsb inc sbb push and inc mov nop inc imul sbb lds test fsubrl pop arpl mov jns test sahf (bad) xor jge xchg enter cwtl lods inc ljmp std inc inc ds mov cli loopne loope xor sbb adc and jb jg fmuls and cmpsl pop fisubl xchg or xchg cld push mov jns mov ss cmp xchg lods int jg enter fbld test int3 pusha gs xchg icebp stos test xchg mov (bad) sbb dec pusha out ljmp xchg out push aam mov cmpsb sub adc ret pop pop pop ja cmp pushf push add mov (bad) jnp pop fiaddl std or jne pusha imull (bad) hlt mov loop xorl lds pop xchg cmpsl outsb push xor adc mov jg cmp adc and nop mov call cwtl mov out mov mov (bad) incb inc je movb out sub adc pop sub push inc mov icebp jae xor rcll adc add rcrl push sbb mov mov test mov mov fisubr add js push (bad) cmp sbb iret (bad) dec jmp or das dec repnz mov add cli or or cmp mov out ret add js int3 mov xchg or sub dec scas repnz mov and lret leave or aaa popa pop jg mov push add xchg mov (bad) outsl les xor das fisubr add xor push add mov lret pop movsb insb push clc push into (bad) inc mov or into cmc sbb cmp push lcall and mov cmp push xlat or and mov movsb call cmp push in icebp inc insl jecxz mov lcall movsb ret cmp push lods jecxz adc push adc outsl xchg rcrb xchg push add into repz sti int jl (bad) mov mov je pop sbb sbb imul int adc clc imul mov cmp and sub dec jle (bad) mov mov mov add fldpi mov imul insl mul lcall mov xchg addr16 sti ds cmpsl sbb or je aad inc fcoms dec pop mov mov mov and ds shr add hlt pop dec movsb test or fistl rorb jns add ret pop test push sub int cmpl (bad) sub push sar es lock sahf cmp cmp xor add mov sbb iret xchg out sbb add mov pop lea scas pop clc cmpl xor out jmp lds push ljmp mov mov daa cmpsl mov cmpsb sarl mov call fldt (bad) jbe repnz dec mov push sbb pop cld push out fstps jge aam imul test sti mov lret lcall arpl out lahf jb scas and push popf xor int3 add enter or in out fmull xor es adc xor lret movsl pop pop insb roll xchg loopne decb xchg leave das pop mov mov dec jo xchg inc cmove cmp xlat xor xor repz in xlat lds insb jl adc xchg and ja adc in sahf and shlb ret mov dec mov int cmp out xchg mov fidiv call test mov jg xchg jno in call mov xchg out fwait lcall call lahf and not xchg lcall mov mov inc jmp adc daa ror sbb lcall xchg cmc or push test push dec lcall inc mov jo mov enter mov push mov fiaddl xchg (bad) bound sbb mov sub cwtl lahf mov das mov xchg dec mov xchg mov pop out loope,pt stos adc jbe mov (bad) (bad) push insb cli int3 decl fstl subl outsb clc mov xor mov mov (bad) pop movsl jecxz inc lahf and pop outsl aad out add int mov and mov pop (bad) stc daa rcll (bad) lds rolb pushf and mov mov jg or (bad) dec stos mov push mov push cmpb jle push mov test cmpsl enter xchg arpl add data16 jmp sub fcoms sbb mov ret xchg ror xor xor and incl (bad) lret je lods inc sahf inc loop addr16 mov je pushf cmp mov mov sbb orb addl sbb shrb xchg xor xchg mov fisttpll mov xor dec jnp push dec fwait cmp sbbb sub fsubl iret movsl je mov repnz daa xor mov push dec jnp mov inc lahf stos mulb or inc arpl sti enter mov xchg iret xchg jmp or scas sub jg push push sbb pusha cmp pusha icebp and mov stos test push adc mov (bad) jle xor ss add mov inc orl pop add pop test mov jle adc daa xor out push nop push stos pushf gs orl xorl pop mov mov mov dec cwtl jl pop cmc lret call jb mov jno mov jl adc jl mov mov sub add sbb mov nop fwait xchg out mov push (bad) push jae fs pop inc movsl rolb repz dec sbb imul fcmovnu push push in jg (bad) push (bad) jo scas popa cmp cmp xor sub fisub push jbe mov inc rcr (bad) test mov imul lods lods jle mov add jecxz lret or inc add inc adc adc cmp lods push sub popa xor test push jge xchg call sub push sbb outsb push iret es mov pop jle (bad) out sub in or lahf lcall and nop pusha add lods (bad) hlt lret outsl insl xchg mov and int3 push inc jnp lea mov sub xchg lcall aas je pop lcall sub or dec sbb mov cmp in lret ljmp or dec out cmpsb jge or std jg dec fidivr sub fcmovne and aas stos or stc pop jecxz mov mov xlat sbb jmp pop or ficom lahf dec mov xchg insl iret cld lods sbb sub or scas sub inc gs cmp repnz dec sbb dec mov xor outsb cli enter mov aam cmp test push dec loop sbb xlat addr16 mov lock jg and (bad) cs push imull push jle jg cmp jle pop addl cmp push pop add mov js imul cmp shlb arpl xchg mov push stos cltd out pop (bad) cmp xchg jecxz nop xchg and ja (bad) mov jns sti mov push out dec dec mov cli sub jno inc push ds aas cmpsb inc cwtl sti fstpl ss clc mov dec and aam adc in mov inc dec shrb jp lea insl cmp jmp xchg repnz jmp enter cmpsb mov mov sahf inc fisttpll mov push cmpsb repnz dec mov mov sbb pushf pop imulb cwtl inc out mov pop out arpl aaa inc sub or sbbl fwait cmp roll mov sahf or in pop xor mov les jb in fwait pop xor sbb hlt jg pop cwtl mov je call divl mov iret push add inc xor adc es mov test mov xchg lahf cwtl lods add pop ja outsb push popf ret xchg int in (bad) and les (bad) movsb fstpl leave mov mov and out imul jne hlt xchg dec or mov xor sub bound stos xchg pop cmpsl iret jo and out lea in ja clc mov sbb in (bad) fildll les mov mov fnstsw ficomp push gs rorl ss (bad) sub hlt cwtl dec int cmp sbb jg fcmovbe hlt xchg loope pop mov (bad) hlt push in cmp leave mov loop jp imul and sbb scas jnp jae cwtl lds les jno jbe lahf mov adc mov ss lods sbb sbbl dec popf addr16 (bad) mov stos push push sbb lahf push inc in cltd push movnti inc mov mov xchg fs jo cmp inc loopne xchg and dec add je xchg pop add sub arpl sbb mov out add enter pop xor and out nop mov mov dec xor xor xor mov pop mov int3 dec push mov pop dec insb fmull inc sub insl notb data16 int3 stc ret sbb out pop sti cmp ja mov scas adc mov ret fcompl adc ret xchg and sbb xchg push adc add mov dec rolb cltd shlb lahf enter add aas in popf adc add jnp lcall jb out push pop das add mov mov (bad) push jo or cmc push mov icebp add icebp and adc in into test inc cmpsl shr movsb nop sub in imul lea (bad) mov push nop nop push push sti mov jge jecxz,pt and clc push push fxch xchg ljmp add sub inc (bad) or mov cli test aaa mov sbb clc ficoml pop sub sahf ret out push fisttp and mov xchg mov enter aam push xchg lcall or aaa fist lds mov mov pop cmc mov insl push sti dec pop setb imul lret mov sbb inc xor mov mov andl dec (bad) lret adc mov push aam jo fistp ljmp sbb push (bad) jg add popf (bad) in add sti or jp inc std pushf pop dec insl into das je cmp dec arpl clc mov pop movsb push mov add div push sbb lret out xor (bad) push mov outsl pop aad mov js (bad) gs dec mov inc mov cwtl out mov rcrl jl pop or inc cmp inc dec outsl push inc xor mov enter lods fild xchg ja or and mov test xor xor fwait pop inc mov out ljmp scas imul pop pushf lahf (bad) xor cmpsb sbb scas inc push out aam or jnp push test add pop int3 xor jne xchg xchg inc cld pop ret jo push xchg inc (bad) stos ss sahf rcr decl fdivl sbb into sub push mov adc xchg add jbe sub out clc (bad) dec aam add jne push pop shrb xor fxch test add lret (bad) xlat call jo cs sbb and cwtl fsubr in pop mov and inc and sub out or ds leave cmp out mov fs mov mov mov xor stos das xor in xor adc mov or push sbb in sub add pop sahf popa xchg out dec bound push es or cmp roll mov and dec push lea mov inc int int3 imul repz (bad) mov pop into fwait dec aas div pop dec in xor movsb bnd out shrl inc jl fs inc and mov popa bound jns add mov adc fstl and jl jns mov jo push cmpsb push cmp mov push or or dec adc fdivp jae or sbb std mov xor in mov push pop cltd sbb enter inc sbb push les xlat aaa pop xchg xor inc pcmpgtb in dec test sub mov clc (bad) std jp pop iret ja inc xchg mov add stos insl mov mov jbe dec mov fadd dec (bad) sahf cmp stc nop mov dec push in daa pop lods mov stos outsl mov and mov ljmp mov mov loope cmpsl push xchg dec stos jne xchg mov sbb fildll dec sti sbb in and ljmp dec inc xchg aaa std mov mov jle scas les fcoms ret (bad) (bad) mov (bad) jns xor cld (bad) mov mov lds sahf mov lock and (bad) dec push sbb pop dec (bad) imul adc sahf add call insl das mov test inc sahf out cmp lahf mov jmp mov stc fldt inc loop cmc mov cld inc push test xchg std fcom nop push cmp dec dec (bad) gs fs jge add lret cmp movsl or push fsubr je inc pushf movsb mov pop mov ret inc and xor cli test mov jns ljmp repnz xchg ret pop sbb mov push cwtl mov lods std fstp mov popa jnp or and xor sbb test xchg mov sub adc mov cmpsl fcoms out pop test outsb scas mov xor adc (bad) xchg sti dec lods dec mov jns gs icebp repz mov or fstps mov adc push clc dec addl insb jl fs pop jae xchg mov cs cltd dec repnz mov (bad) adc scas repz out js adc ret dec fisttpll push lret popa outsb js mov je imul push insb repnz mov ja fcmovnbe mov mov ret ss sbb rcrl and or sbb imul js int mov cmpsl mov add pop fisttpl or cmp add mov pop lea orl jo push mov xchg out sub jp and and sub dec jb mov jmp fdivrl mov adc jle xchg hlt jg jge lret fcmovnb push sub pop add adc rolb pop cmp cmpsb test add insl dec cli mov test les lret movsl or mov sub insl das and dec and jne pop xor stos mov cmp adcl (bad) jmp aas addl repnz outsb sub popf lret mov adc sub xchg fcoml icebp or out loop or xchg scas xchg call lds jbe adc sub mov and sub test and fsubl pcmpeqd test fsts (bad) shr test nop in and adc cmp cmpsl fmull lahf in mov push mov xor hlt addr16 lods xchg xchg int3 movsl xor xchg nop lds xchg cmpsl add pop popf lret pop mov cmp mov push in mov or push lcall dec sbb add xor mov and add and and pusha sbb imul fiaddl int fdivrl lcall enter cmp pop dec lret push mov clc inc dec push (bad) mov pop mov call add fmul pop std enter mov adc gs sbbl mov xchg inc ficomp dec pusha cwtl sub lcall add jle mov mov xchg adc cmc push fnop adc add mov int3 cmp or subl mov sbb sbbl jecxz stos mov imul nop add fisttp fldenv or jne roll psadbw popa in out nop xlat int out movsb mov push (bad) movb jne test nop imul pushf push dec sti xchg scas les sbb enter idivl pop int3 repz cmp sahf dec fidivr and jle sub jmp xlat stc cmc test in pop adc lods mov or mov inc je push arpl jo into nop push mov push inc fiadd mov pop sub push or int3 or icebp add or or addl dec and mov in pusha scas fisubr jp repz data16 xor xchg adc int3 jle xlat jge xchg add or push scas add (bad) add sarl rorl cmp push jmp adc je aas push xchg adc pusha mov mov movsl aas pusha push sub lcall insl iret popf insl aad sub sti pusha int3 sahf out pop push pop (bad) mov mov and addr16 jl adc mov ja jnp sarb shlb jge jmp and inc xchg rclb scas xor jl pop lock push mov lret out cmp adcb aad cmp jl negb add lock xor push adc inc stos int and adcl daa xor mov inc sub dec or mov pop dec pop sbb jge psubusb mov sub mov lods cmp aas fwait popa clc sbb rorl adc popf int3 jecxz add xchg daa mov outsb lcall jg jae (bad) or gs bound pop push xchg outsb pop gs stos icebp pop or outsl mov out mov mov add inc mov inc (bad) push icebp or push addr16 in dec icebp jns cmp daa xor (bad) jge inc or add or inc or jle in adc sti out xchg sbb popf mov jae fwait pop imul mov adc sarb mov ljmp mov pop lods sbb add or sub ja fisttpl repnz test push push dec adc sub out cmc mov mov scas mov dec jp cmpsb jge add scas mov jmp mov fiadd in inc movsl repz push (bad) jbe jecxz lcall into xchg fist sbb xor xchg cmc cld pop inc push data16 mov dec scas add xchg jne xlat inc push or je xchg push mov jns (bad) (bad) lret adc xchg cwtl int3 out push ret lods ss pop lret movsb xor or test mov je (bad) xchg push inc popa test ds ret shlb into pop jne iret js outsl ja stos or mov mov imul out add cvtps2pd mov mov mov (bad) enter ret mov mov mov ret dec aad mov add addr16 in in mov add push mov mov add testl js sub mov mov inc lahf out fisttpl test sub aaa lahf jne pop movsb pop mov jmp mov cmp push aas cs out jle out push daa icebp stos pop xor fwait data16 or push and fidivrl mov xor iret lods pop insl adc scas sbb push dec dec jno adc mov fwait inc div jns pop popa or (bad) orl popa ss xor stos jb mov mov pushf inc jae call jne leave push and xchg orl sbb dec fisttpll jge jg pop loope adc lahf lcall fwait sub int3 jb nop and pop flds divl xchg into (bad) shrl dec sub nop aad das cli xchg sahf mov ss into mov (bad) ja mov je mov and dec out cmp ja or or mov fildll enter jge popa mov incb into mov stos adc test xor popf sub iret lock dec fnstsw xor dec sbb out sub push arpl or inc push repz sbb mov sarb scas push leave je clc jmp sahf xchg stc cmp fwait cmp scas loope repz xlat rcrl and xchg pop xchg lods pop adc stos sbb test repnz dec popa insb pushf mulb insl stc mov push lret (bad) mov enter mov cmp (bad) rol add or out xchg cmc xchg add (bad) fdivrs cmp lret xchg pop int3 adc mov xor jge xchg test inc mov sahf (bad) cmp jecxz pop addl mov mov ds and push push scas pusha in jge stos xor xor dec test es repz aaa mov add addr16 add daa jnp ficoml push out arpl cld pop stos xor (bad) and stos mov imul pop aas hlt push into push jb rorb or pop pusha mov mov pushl push data16 jne cli or mov js mov xchg div jno call mov (bad) ficom inc mov xchg fmuls bound shl int3 scas js inc fistl bound (bad) in sbb cld dec push (bad) repnz push cmp pop mov xchg mov repz mov xchg xor jo push pop sbb dec xor outsl inc mov in stc and call fimul fidiv je mov sbb addb stc jb rorb pop or xchg in cmp ds into mov mov lret jb arpl jb rcrl in push popa cmp xor in sbb loop bound inc enter jo jns (bad) xor cmp mov adc fcoms enter sbb das sub mov and mov in or xchg (bad) mov and jle mov fwait inc xchg adc jle fistpll dec adc inc daa jae push fwait cmp push cmpsl sbb mov loop fwait mov cli pushf mov aaa daa pop stos sub popa popf scas (bad) jp inc outsb ror les stos imul fmuls or mov mulb enter dec inc adc outsb insb addr16 push xchg pop pop fstpl call into aas data16 dec or fcmovnb cli loope and adc addr16 leave hlt xchg (bad) pop inc js and dec xchg mov jle dec lcallw mov fldcw xchg jnp pop lock loopne inc lret aad (bad) jmp lea or lret test push sbb sbb pop hlt dec jne mov mov push pop mov ret das sarl fisttpl loop lock adc mov cmpsl (bad) pushw cmp xlat cmpsl sbb leave add (bad) ret mov outsb (bad) inc add push lods xor cli loope fidiv ja and aas fsubrl pop xchg jl shrb jae mov jmp mov pop cmp mov stos pop or enter and lret adc daa mov mov cli data16 pop leave inc sahf lock (bad) push rolb aad push push sbb mov testb fstpl sub inc or pop ds sub xchg mov icebp jp mov dec andb xor push jmp add mov sub insl sahf dec repz adc repnz leave inc inc aas imul popf sub sub aad or push jmp out mov adc stos insb loop fcompl mov sub jne mov sub mov in mov rol jmp dec repz mov mov jne xor aas push fldcw or dec fdivl daa pop xor adc jge ficoml inc int3 bound into mov dec cmp js jecxz out aad in gs jmp fbstp xor addr16 push bound lods hlt mov imul mov fadd adc sub aam lods dec adc jp insl insb mov sub in adc sbb dec push sub and mov xchg fcmovb lods leave or jne (bad) icebp sbb repnz jbe jle cmp add pushf clc (bad) xor cld sbb mov leave scas mov cld xchg add pop je lret push es push push mov stos enter gs repnz and icebp sbb xor ljmp test jnp jae fwait test push jno pop movsb mov (bad) outsb test cmp xchg aam push (bad) xchg adc daa jg call (bad) xchg jp sub xchg jbe jl jp pop clc pop call sahf adc jo sub insl fwait icebp pop scas jmp rolb xchg roll xchg (bad) pop add add or xchg repnz push iret test movsl std lea in push cmp sbb xlat test xor or mov iret inc testb or sbb stos leave dec and push mov sahf xor sub mov xor test sbb cwtl test add adc mov cmp imul shlb pushf addr16 jns add inc popa inc fadds loopne rolb sarb mov mov dec lcall xor lock aad push and imul dec sub decb outsl mov or imul push cmc push dec dec sti mov aas jmp push outsl lcall and mov inc pop popf arpl lock cmpsl pop xchg dec add aad cmpsl dec mov (bad) dec mov pop (bad) gs pop fwait iret adc int cmp in xor add dec inc lgs mov stos loopne jge inc pop cld pop in sarl mov cmp and test and test es and dec mov cmp fwait pushf push dec es dec jns repz and sub xor test adc push sub add pop mov js dec lcall in push fdivrl adc sub jae aaa sbb mov lret jle shrl inc mov btsl stc jno iret adc rcll das test insb xchg xor (bad) cltd jle lea and mov nop in inc aam jns or imul push inc mov pop pushf ja mov mov cs pop (bad) add mov jge (bad) pop icebp dec push xchg mov pop jno lock xchg in push ljmp dec cmp test or lds jecxz ret addr16 push test lds sbb jmp cld (bad) hlt jp aad sbb popa data16 push adc xchg fdivrl push xlat pusha sahf (bad) movsl xchg push pop and pop adc xchg inc ret aas inc lock pop push in lahf inc int3 or sahf mov add xlat pushf or rorl cmp int cli movsl push dec jne lar insl or jo fisttpll pusha inc stos inc push inc mov cmp das jecxz sbb insl add and inc pushl cmp push lock mov fs jge repnz shll fdivs mov inc rorl dec (bad) es insb je sbb jne int3 mov enter out xchg dec sub and dec aas fdivrp cmpsl mov sbb out xor pop and lret push or repz mov add pusha (bad) mov jo (bad) (bad) and cmp ret cmp rclb pop pop ret pop mov paddd push dec and imulb sahf mov mov hlt pop inc aas xor mov push mov jnp xor popf dec sub jne (bad) mov (bad) sahf notl dec adc test sbb (bad) dec or sub add jg sysexit enter mov movsb push adc push lods fistpl jne hlt add mov xchg inc test xlat btr push jecxz,pn dec add sbb push xor repnz (bad) arpl in pop pop out add sub dec jb repnz cmp cwtl add xor and pusha in iret aam hlt iret push loop push orb inc popf ret loope scas mov jle xor es cmp sub jne jns,pt stos mov mov and divb xorl aam fsubrs xchg cmp jno loop lods negb xor repz mov ret jmp and inc rcr adc int cmp sub adc xchg mov cld push stos push fnstenv mov ficom mov sarl notb fcmove (bad) flds movsl push sysexit outsb insb adc xor rcrb jp mov aam push in clc mul adc or out mov mov sahf (bad) mov repnz or mov and (bad) jae or fcoms xchg jge test std cmpsl lret loopne cli jno (bad) (bad) cmp push adc mov mov leave aad insb jle nop mov or cmp cltd rcl bound pop popa add mov int xchg sub icebp jg in fsubl das outsb inc mov fnstcw xchg (bad) add xchg jle cmp arpl jns jb push mov cmpsl popa pop mov adc (bad) sub out outsl cmpsl push jnp popf sub adc inc inc sar addl push mov je xchg test mov or xor insl lcall pop cmp jno add inc fcmovu push xor gs jae (bad) pushf iret stc (bad) dec nop cmp sbb mov inc inc and enter not sarl out scas popf push mov mov daa adc sub xchg add (bad) cmp dec xorb (bad) xor test jns aas and shr popa pop or aaa mov addl push gs inc add jge and jmp mov jno push arpl sub xchg pop jl inc fdivrl or inc cmp jbe loope fwait mov cmpl push jo dec daa xchg sbb xchg push mov lcall ret pop test outsb cs or in (bad) mov loopne mov pop aaa nop aad gs movsl roll add fst call and dec add dec mov sub sti sub inc push addr16 push ja or roll push into cmp xchg out adc or sbb lahf mov cmp cli (bad) clc jg in inc in fildl adc js movsb xlat push lods fldcw into push or cmp dec inc push mov cmpsb iret ja (bad) stc lret outsl pop pop repz inc sub sarl in je aam and nop inc sbb in call repz cs js xchg arpl cli sub (bad) pop mov es addr16 aam sub or mov lahf dec xchg test inc dec xchg xor lret xchg push js cmp (bad) in xchg cmpl fmuls scas outsl mov adc and sbb shrl and or lahf imul stc pusha push out pop sub and mov xchg dec lea js lods out xchg andl iret sbb hlt fistpll cmp push push xchg sub movsb jne (bad) jae (bad) pop divl xchg mov cld push sbb sbb add mov test push aas add jo jnp xor das into pop pop jae dec std ljmp lea jnp pusha popf inc cmpsb daa dec enter pop xor xor sti ret xor frstor fcomps jp es mov pop jp mov mov sub mov inc sbb mov mov stos and arpl cmc pop in popf adc leave jl mov xchg cmpsb scas mov ja (bad) lret fisttpll xor pop dec shr rcrb pop rcl (bad) out int pop sbb inc lods insb sar not inc jg lds and out (bad) out pop scas sub fs sbb lock enter fisttp int3 jmp sbb push out lahf dec jmp dec xchg es nop inc daa pop rcrb mov xchg mov (bad) stos ljmp jnp fildl lcall mov jns movsb das aaa push int3 sub jecxz inc idiv mov add cmp test ss lahf or lahf inc and mov sbb shrl mov movsb icebp enter arpl jecxz push jae sti (bad) int3 push in or xlat or add fildll (bad) out lahf xor adc je sahf xchg xchg push mov adc fsubl cmp test mov jbe arpl add fsubrs cmp cmpsl (bad) mov in inc imul shll (bad) inc loopne xchg outsb arpl ret leave push fadds cmp sbb hlt mov data16 iret inc ret sbb arpl fcompl rcrb aaa adc pop outsl repz in sub push jns push sbb movsb push inc fcmovne xor (bad) sbb adc lahf fimull rorl std sub (bad) int and jne fistl rorb (bad) rol lret xor push out (bad) std pop std mov or ficomp pop lods ss adc test fs or jae sbb pop test (bad) icebp mov mov sahf cmpsb iret mov sbb mov pop mov adc ret pop cmp aaa push and cmpl xor (bad) jnp (bad) mul sub fdivr mov data16 jg shrl dec cmp add and shrb cmp mull ret or jmp inc nop lret cmp outsb push (bad) daa nop add or fiaddl mov jb mov jnp lea call sarl pop jb xchg push inc cmp stos mov add mov cmc dec sub pop mov outsl aad leave in inc sub sub fimul jecxz arpl mov push repz xchg movsl mov adc mov test push cmp xchg mov int inc cmp hlt imul inc fimull add aad xchg sbb sti xlat sbb jno xchg add in lret mov jne push jno cwtl pusha icebp dec inc fwait (bad) dec ss push pop inc cmp push pop nop cmp jne add cmp add out (bad) jmp mov testl daa data16 jb add (bad) mov scas mov pop fdivrl int lds call add leave sub mov xchg mov xchg orb pusha out mov loope (bad) jb rcr cltd cmc inc jne push pop or lock pop push leave mov jo lods testb leave lea ss or mov mov es clc add gs cmp jbe (bad) mov jb sbb mov adc mov mov loopne mov in int3 bound mov popf add dec test push pop lock jle fdiv xor cmp insb or xchg (bad) pop cmpsw lods mov jbe ret (bad) mov fdivl lcall lret (bad) cmc jns add sub outsb mov or mov or popa pop (bad) imul dec pmaddwd mov insb dec call push mov cmp add ficoml jne xchg and mov or adc stos lahf (bad) stos inc lds ss sbb cwtl sub dec fistl jmp jae dec loopne daa fdiv cmp push repz out fwait xchg pop js icebp jb dec movsb add das notb sub or adc inc lock out mov mov fiadd (bad) insl push mov xchg ja cmp add xor inc stc fwait cli inc in push js xchg cs mov scas sahf add bound test or add scas neg xor loope add fwait dec sbb add inc mov int jecxz movsl pop fs enter jns pop cwtl sub push add xchg sti rcll mov pop leave sar (bad) mov outsl sahf lahf inc mov pop out xor (bad) outsb loope int ja repnz xchg sbb mov jns (bad) add (bad) inc scas notl hlt cwtl fs repz je add push push xor out mov cmp sub push aas mov roll gs xchg clc les popa (bad) dec movsl push cmc mov (bad) xchg or jo cmc dec aad push cmp aaa xor mov in movsb mov fsubl sub inc pop add dec inc clc in sub xorb xchg mov pop add add xor push cmp clc add dec cmc cltd mov cld out sub dec test dec mov repnz loope xchg out jp push in sbb lret sub mov sbb inc mov mov xchg push add notb enter pop out (bad) pop xchg sub mov inc lret (bad) mov aam bound insl test pop int xor sub xor jno lock jae insl and mov fs pop push and xchg push xchg cltd jne sub fbld sbb pop fnstcw sbb into mov movsl test jl mov outsb inc mov xchg lahf jg inc mov cs lcall movsl loopne xor dec push push aaa xchg pop mov (bad) cld jo mov aam mov inc add sub (bad) mov xor or (bad) fld1 in push push movsl sub and mov icebp (bad) ficompl sub insl icebp mov dec dec rcrb repnz or jbe sub aaa mov push jp inc cmpsb mov and push dec out roll sub pop cmp (bad) in and loop inc or adc int mov fldenv int3 int3 mov xor (bad) or push inc jae adcl fcompl pop je dec pusha xchg push lea shll adc imul xchg icebp sbb pop loop push dec pushl pop stc or mov dec jae aam das and addr16 push shlb jecxz fcoml xor dec or outsb rcll ds scas out push loop insl mov lcall mov out xor stos sbb fsubr imul xchg inc gs imul adc ja pop in mov in (bad) outsb insb je cs lret notl clc arpl cmp jb sbb outsb loop sbb in mov stos cmp or js test dec outsb cmpsb mov negl mov lret cli cmp int3 or loopne mov mov jmp mov into adc fadd mov cmp rorb add (bad) dec push xor mov inc popf fs test fcoms leave add sbb adc dec or jae (bad) xor (bad) xor or icebp push dec cmp insl (bad) dec push or cmc pop xchg push pop ja in cmpl adc aam xchg fbld mov scas popf mov repz aaa lret push fcoms int pop mov std inc insb jl int xchg and lret aas bound ret into add jo and cmpsl call pop push sbb shl adc pop ror out push and mov and cmp leave mov lock mov ljmp mov lret inc jmp xchg das mov and jge jl mov push push fdivs mov pusha ljmp jns jno (bad) stos fistpl outsl cmpsb cmp mov (bad) leave xchg andl icebp xor or mov pusha push adc in fdivs mov jnp dec jmp popa sbb or pop ror shrb inc push mov js jge inc xor gs das gs xor adc pop add or lea lock je shrl and sub jmp imull in jmp les ret adc xor je and inc sbb xchg cld sub mov xchg adc popf xchg jecxz push pusha pushf xchg pusha push loop dec sub jo pusha cmp cmp sub cmp or xchg je mov daa jns iret xor scas and cmpsl cs sti sub push roll push jae adc push ret orb daa fldt int3 jbe rol xchg xchg aaa pop sbb or lahf add mov jle in and fdivl lcall push (bad) rolb xlat inc movsb clc (bad) push pop mov or inc lret addr16 popf pop aaa enter push mov push mov div ja mov sub insl xor mov mov arpl mov (bad) ss adc je int3 and (bad) jge inc movsl mov movsb lods xchg les xchg flds mov inc outsl push lret xchg test and lret fmul fs mov xchg jno movsb lods les fisub add iret loop enter adcl add sub dec cmp and cltd or stos jns sbb mov cmp mov lock sbb aam insb jp pop push jmp xchg push xchg jle xor enter sbb cmp push and test (bad) movsl push cltd push enter fcompl add jo das lcall mov add loop lods lds push pop mov xchg push push xlat fidivr jo and xlat xchg imul mull mov das or les adc mov jno add shll sahf cli fcomps jne push fldl mov jbe dec fdivs jbe dec xchg ljmp and js push negb pop rsqrtps test sti (bad) jo (bad) (bad) insb pop mov repnz cmc rorb loopne insb sub cwtl xchg ror jbe mov xchg out sbb hlt pop jg into cmp jmp adc out inc lahf stos adc in outsb cmp into push and movsb sub scas fucom or or jnp pop xchg or pop xor int3 mov cmpxchg push jg cmp in clc imul test cmc verr adc cmpsl lahf out (bad) mov popa ficomp andl pop pop jg test jmp mov mov sub jbe inc pop xor dec lds (bad) mov (bad) mov inc adc pop les punpckldq push loope mov pop fsubrl cld or push outsb jp xlat out std xor testb push fldcw int3 jle sbb inc das xchg push xchg mov mov aam xor addl inc loop cmp xor and mov or (bad) cmc pusha add push cmp repz shlb cmp lret mov aad nop das jmp cmp fistpll push div rcrl jle enter mov adc pop mov shrb and (bad) shl lcall pop mov scas inc cmp fcmovb sub lret dec addr16 sbb mov data16 ret pop out xchg in jb lret mov xor xchg mov jne lods adc ret hlt out sbb lock cmpsl test popf repz push push jns push lods push jg popa jns inc mov ror fnstcw and clc sahf jbe ret inc jp and (bad) divl aad xchg orl nop hlt leave mov lds or dec or and xchg ret stos inc xor jo cmp mov cltd jb push cmpsb mov pop ret cmpsl push int3 mov je mov push jae dec cs xchg lock xor daa (bad) daa and sbb dec xchg into push jnp mov divb add lock mov sub jo or ffreep push cltd inc jmp ret inc sbb loope test lods stos lcall push mov shl cli jp mov xchg sbb (bad) mov sbbb push (bad) jp cmp jbe jecxz and mov std push inc imul xchg adc cmc sbb fldt sbb call clc push cmp pop arpl jp jo sub test add iret jno mov insl push or psubusb in inc (bad) pusha push mov (bad) dec imul and rolb mov sbb xchg scas add sub adc xor sbb cmc lods mov lret xchg test loope idivl sbb xchg dec mov fwait cld cwtl fisttpl xchg sub outsb add jnp add inc and dec enter mov cwtl cmpsl shrl lock popa ret fwait jns dec movsl xchg sbb push mov mov int xchg aas push sti fdivrs mov rorb test es (bad) imul je jge push jno mov xchg (bad) icebp (bad) jbe push adc pop in or pop or xchg lock xchg jo,pn bnd pop out mov cld lret dec jne mov jl push stc sbb cld pop jge jo push out stos outsb sbb sbb sub jecxz stos pop (bad) jmp lret scas adc xor test sbbl dec pop test mov mov xchg pop add jns cmpsl mov and sarl cmp shll imul xchg and cmc jbe fs stos xchg pop rcl pop aas ja pop pusha cmpsl test cmp fisttpll and push mov lret xor jae arpl mov lret je jp cmpsb lea inc pop mov inc mov xchg jno jo dec push push fisttpl sahf aad jnp cmp sub jge es xor or pop ret or scas or sub clc sar xchg jbe mov fs push mov dec xchg aas mov pushf mov enter or fs fmull bound jnp outsb add cwtl cmpsl ret xor push push adc (bad) cwtl sub gs aaa and pop xorb hlt dec data16 dec and popa mov jbe mov adc cmpl rcl mov insb cmp inc inc xchg fsubl and add or stos dec lods jp pushf jbe push mov lods push (bad) lods push pop jo repnz fistpll add mov xor cld cmp add add push shlb lock jbe fdivrs fmulp sbb icebp rcr mov aad fidivr (bad) xchg outsl add shlb xlat cmp pop inc add xchg mov mov in fstpl loop inc mov push subl mov cmp xchg inc sub jl inc sub rcl dec dec lcall mov jecxz push mov jbe lcall jg or and (bad) cmp ja push mov orl cmpsl push xchg jne cmp lods sar mov lahf fmul rorb jno,pn popa pop inc (bad) movsl xchg xchg popf sbb pop outsl je jge aad and mov add outsb xor sub fwait hlt mov mov mov sub ret adc jg mov mov inc fcomp add xchg jns jnp jae mov add lds xor jae mov push add imul decb je mov inc aam in ja dec adc inc lods mov dec sbb (bad) adc ds or in arpl cmp test loope adc sbb or aam sub and ret or iret and xor push inc loop in int rolb xchg loop fidiv inc fwait inc and nop mov ficompl int3 xlat push mov adc rolb cmp jmp mov mov jo das xchg sbb (bad) jb repz std push mov and mov rol sub push xor sarb mov pop cmpsb jl int3 cmp xlat ret bound mov dec pushf rolb data16 inc cld call adc cmpsl insl jp or jb fwait mov inc push out loop ljmp add cmc xor mov stc (bad) pop cmp xchg push adc pop mov lret test mov lods repz (bad) xor xchg in mov xchg xchg jg iretw cmp jns inc xor xor sbb mov sub pop xchg xchg pusha daa out adc jbe scas jl popf lret pop push add sbb loop iret adc aad movsb (bad) jo ja pop mov outsb ret and fwait mov or xor out sti bswap dec adc and incl push xor mov cmp mov push sub cmpsl repnz cmp dec gs inc dec aad cltd dec xchg and jb cmpsl push dec loope arpl iret pop movsb and mov inc pop jno jns daa fnstenv aad inc mov add mov dec or pusha loop sbb mov push ljmp jmp and jbe movsl out lcall and pop mov add rcl out adc inc mov gs adc mov (bad) (bad) sub in pop pop js xchg popa arpl jle stos (bad) jns shr xchg xchg lods lahf push adc add (bad) pop xor js mov popa fidiv mov sub and scas loopne push inc inc cwtl sti and scas and es adc stc std sbb shrb pushw and mov pop ret mov xchg loope mov cli in inc into das and mov inc xchg repz in add adc pusha push leave push fnstsw shll loop and scas enter ja,pn das bsf (bad) loope aad cmpsb xlat pop dec mov fldl add cmp pop xor jle je popf dec (bad) dec pop popf dec xchg jle insl xor jno stos test dec push js lds stos push mov fstl cmpsl sub mov sarb and sub leave sub push mov (bad) int3 dec out cwtl std sbb push unpckhps jle or cmp mov int jo (bad) lret xchg cmp sbb imul paddw xor push cmpsb (bad) rclb lods xchg xor (bad) lret mov inc (bad) rolb loop xchg out stos imul shll aas mov cmp (bad) xchg push movsb sub sbbl cwtl scas in sbb (bad) sbb mov inc xchg jo (bad) mov mov xchg adc or or in stc cmp xor out or in aad dec push insl (bad) cld mov es mov pop stos cmpsb test (bad) push popf xor mov or xchg push loop or dec sub jno ret and cmc mov xchg xchg sub add sbbl iret (bad) cmp cmp or jmp enter sbb ret add cmc xchg mov stc shrb push in popf mov je xchg lods push loopne daa pop xor in cwtl mov xchg pusha sub aaa (bad) stos inc sub fs lds add stos add xor dec pop bound out popf ret cmp out xchg mov (bad) divb icebp inc mov (bad) rclb jae clc sub sub lods dec sub aas or push lret xor cmp inc mov fcoms inc cmp (bad) std mov xor pop addr16 cmpsl pushl xchg adc cmp jecxz adc sbb btc or (bad) pushf sub push push dec mov dec stos leave push and adc xchg lret out popf jg scas xchg (bad) mov inc push int3 xor cmp lret pop push (bad) out jmp push (bad) inc ss sbb jg ret loopne std or (bad) or adc cmp push out inc mov adc std je jae xchg mov adc or mov loop pop inc xchg push arpl das movsb jo xchg cld mov xchg pop inc or inc jne pop mov (bad) cmp cmpsl pop call inc int push xor push insb aam in dec in (bad) push xchg pusha fcmovnb iret out xor cwtl data16 sub mov jg cmpl mov mov test jg leave cmp icebp lds lds pushf mov mul ficomp imul pop das pop inc pop mov pop data16 fldt (bad) fidivrl jnp mov sub and or int3 fnstenv or les jp adc (bad) into cs add sub adc adc jge (bad) or inc push fcoml iret pop xlat into iret sub mov or stc push stos push pop mov aam push add xchg (bad) jg dec inc out test mov cli cli sbb dec cmp lods push aad aad xchg sub ret cmpsb or jbe in sbb movsl (bad) je push dec out fsubr cmp mov sti loopne push (bad) hlt pop mov daa dec aaa adc jg push cmc ja push xor mov pop in (bad) pop jns,pt xchg lret mov dec cmp stos sbb aam mov out out mov xchg rcrb mov push add mov fild mov add adc insl into mov aaa pop sbb int mov jp movsl sub and jg out add sbb push imul imul mov dec sub arpl jecxz fdivl sbb xor cmp int adc jg mov sub leave xor out pop int3 xchg iret dec mov and mov jno mov loopne cmp in mov and movntps fcmovne fiadd fucomp pop rcll inc push inc rcrb pop lcall cmp jp (bad) icebp fisubr inc movsl das fcmovnu insb movsb cmp iret icebp sub adc (bad) addr16 ja cwtl nop pusha fdivs sub push out vmovapd stos xor mov test popa sub push push fisub sub inc jmp jge adc adc inc cmp mov jge push into jbe cmp mov xor jl,pn in in das cli jae in fs inc lcall test xor loop push sarl or xor push xchg js cmp jne pop movb jle ffree nop icebp cltd leave mov rcl add ret daa repz xchg rorl mov rcll sbb jecxz std jne dec jg jge inc sbb out testl jmp lahf inc mov call cli jle cwtl andl adc mov cmpsb les cmpsl mov add arpl ja lods and mov rorb std mov (bad) dec xchg mov aad xchg sub psubusb into adc push cmp xchg cltd xchg mov mov pop cmp and xchg daa or cmc push jl es mov mov repz xchg scas pop pusha shl inc mov aam inc icebp jne pop sbb mov mov jae add fisub leave in js xor add inc jo lret aaa pop mov jmp push rcrl inc cld and mov loopne stc cmp and call dec pop inc hlt cmp lret out test xchg aaa inc fistpl sub add pop xor jp stos insb xor out scas xor sbb xor roll or lea xlat cld dec or jno and xchg mov mov cltd jecxz lock movsl fcmovb (bad) pop and pop adc xor adc repz jge xchg dec or or xor fldl mov aaa mov rorl out pop mov push les popf cli mov jl and adc push ljmp xchg cmp fbld iret sbb adc dec mov imul pop imul mov out repz (bad) pop daa sbb xlat popf or das add das sarl jp (bad) sbb xor je in xor adc sahf adc or mov enter std mov repnz fdivs repnz add aam out test int pop in xor jl mov leave xor add (bad) call pusha out das mov jno jmp jle sbb lret sub pop sub pop mov addr16 lcall mov push shrl cs mov pushf lods cmp bound jge and stos xchg (bad) int jmp xchg int lret jp test jae fisubrl cli lcall fwait stc aas (bad) dec mov mov jp lret negb inc cli push inc dec aas pop shlb scas cmp or loop fxch push adc push popf into inc sar add sbb or xor adc jne leave jp out hlt inc xor xchg arpl mov stos jmp repz inc xchg stos scas xchg add dec or jns add jo cli and sbb push rcrb add loope out pusha int and mov (bad) jg sbb fidivr sahf and out loopne add std (bad) ja push sbb fcmovnbe cwtl xchg xchg fcomi insl xchg jo jl sbb out xor call jp fs lock push ljmp and mov hlt xchg xchg pop mov dec inc mov cmp and subl adc mov jno enter cmpl lret and sahf idiv lods cmpsl rcll repnz outsl mov mov mov dec push xadd or adc dec mov std (bad) rorb sub int divb stc in or out push mov or adc int3 sub out pop jno negl imul xchg dec cmpsl shrl cwtl add xchg je cld mov cmp nop jo sbb cmp dec add test mov fsin pushf int3 inc (bad) int cmc mov outsb jns popa out cmc add lahf sub into mov mov cmp fcmovnu or xor push in lret (bad) mov fcomps cld pop jmp xor out jnp (bad) cmp sub push in sbb jmp imul in or xchg cld loopne pop mov dec mov fnstsw notl repz sub jmp icebp jae cmp push adc decl scas jmp dec (bad) sbb push add sbb test stc fisubl xchg fisttp mov pop rol mov (bad) cltd xor xlat shrl dec pop lea cld push lea inc data16 pusha in sub mov insb push dec pop lcall mov jmp or mov daa out mov jp ficomp sbb fistl add mov dec sub xchg dec jbe loop pop cwtl add mov cltd call ja or sbb lahf push xchg jecxz dec cmp dec aad lock sbb cmp fs (bad) fs mov xor cmc iret pop iret subb scas sahf push stc fldcw pop cmc repnz mov insl add mov movsb jmp ffree insl sub jmp xchg jo lock xchg call pop pop cmp xchg cmp xchg xor inc cmp test out add movsl cli lcall fiaddl aas and mov cmc sahf out cld xor lods xchg xor push ja repz pop add mov mov in xor loope jns repz jmp inc pop lods subl jo imul (bad) mov push lock roll push out xchg cmp adc loope es sbb insl pop ds xchg int3 inc jecxz std xchg cmp int adc mov ret fsubs leave and iret cmp mov adc pop (bad) adc adcl clc shrb (bad) pop icebp (bad) lds fild jmp xchg add pop sbb (bad) dec push je fstl aam test push push pop dec cmp xor push fnstcw rclb aad push dec sub mov lahf aad inc push hlt jnp lret mov int3 arpl xchg fs divb inc jmp xchg in add jmp xchg fs icebp mov xor es xchg int3 push mov lcall jmp sbb addr16 insb jns pop mov inc test adc addr16 mov dec pop in pusha fdivrp mov pusha iret ds xchg jno sub aam jl leave pop jle pushf mov mov add mov or cmp pop test movsl (bad) push das loop add xor push imull mov arpl mov aaa iret inc aad pop xor xor add loopne test aam arpl push pop adc inc xchg xchg push jle push sbb jo jnp leave xchg ja mov ljmp push icebp in and mov or aas sub ss inc or mov and inc cmpsb sbb pop mov dec mov movsb mov or (bad) cmp idivb insb lock loopne mov push adc ret mov shlb mov test or sub jb cmp mov mov fs push fs adc fmuls inc jo data16 jp add jge sbb lret repnz sarl sbb test adc aaa fild jmp loop fcoml imul or jge call jb insb inc daa push loop jecxz and aas scas icebp cmp imul add leave xchg lock xchg xor into cld sub popa xor mov bound push sbbl push fs lods mov push pop fwait daa pop add xor ficom aaa sbb jge fwait inc ret js mov es mov pop mov daa mov mov inc jo repnz adc xor mov pop xchg mov ret mov ror xchg mov mov push fild push dec in icebp jae xchg ljmp outsb sub or or cli ret (bad) mov mov lcall mov cld xor cmc or mov aam mov loopne call adc adc jns std ljmp hlt dec fistpl hlt ds xor mov dec packuswb repz or mov dec xor xlat cmpsl lods fs std bnd ja pop cmp out push adc mov imul xchg lds and ret repz mov mov and jae jnp imul inc xchg imul lahf in ret jo iret mov cld test inc adc pop sub and mov adc rorb fldt add nop les pop cwtl sarl or mov add mov int3 sti dec insb sub jp jb pop pop xor jp dec mov jb push (bad) pop scas out add cwtl cmp pop scas mov sbbl (bad) (bad) pop pop lret sub js mov pop cmp test mov push or xor mov push cmc dec xor xchg enter in push mov xchg mov or jno fsubrp gs add jne cli ljmp add aaa adc mov into xor dec outsb mov (bad) jle sub mov or es (bad) iret mov add pop mov cs scas aas pop ljmp aaa lcall push inc mov mov lret and sub jo jbe or mov push cmpsb push mov add jnp cli add daa pop cmp nop add xchg sub jnp lret xor iret lcall or arpl and ficompl pushl bound loop hlt mov push and aad je jp push jnp test aas lret sarl imul (bad) pop push (bad) fsubl pop cli out (bad) notl aaa (bad) dec scas mov outsl pop xchg test cltd lds inc cmp aam nop ficompl addr16 mov xlat dec sub adc mov (bad) rcl popa add test mov fisttpl aam into repnz aad mov mov es leave adc push or jg mov sbb sbb fildl xor sarb out xor xchg stos out (bad) sbb xchg inc aaa hlt xor in inc and jbe push jmp mov std mov ss and jge jae cs loop int3 adc mov sbb mov xor or cltd sub adc mov adc scas out jns in push xchg in jb push mov mov pop xchg outsl (bad) adc mov dec inc fsubp inc add rolb sti lret pop bt adc push pop and rcrl xchg pop cli pop pusha rcrb idivb in outsl mov daa test fadds in sbb sbb ss insl add adc aad bound shlb arpl insb loop push insb mov adc jge xchg mov out test jno mov push cmp cmp sbb (bad) sbb pop stc mov xor inc cmpsb dec xor gs lods hlt mov scas jo cmp dec movsb push mov js and pop mov jl xor mov cli ds cltd xchg sbbb inc dec mov or mov mov pop inc rclb js jle aas mov (bad) outsl out sub cmp add mov sbb push xor rcl ljmp imul repnz mov pusha mov jne bound icebp mov aad out mov lods test in add out imul xchg xor mov icebp sbb xchg jg out pop push mov ret pop (bad) (bad) out sbb enter xor rolb lea sub xor int inc fidivrl or enter lcall pop push jmp scas into aad push dec push push imul popl shlb xor scas sbb js push xchg mov enter fs fs int3 pop push js inc gs xchg xchg inc in call cltd dec and xor daa mov jge adc lds (bad) sbb int inc divl xor pop sbb scas cmpsl xchg pop jmp pushf cli aam inc jo push mov mov repz (bad) into and shr cltd adc fucomip (bad) sub cs inc pop sub and das fdivs fcmovbe or (bad) notb xchg xor mov hlt and shrb cmp out (bad) fldcw jo inc lds xchg push sub jmp xchg push movsl aaa js mov inc pop xor xchg insb fstpl imul aas dec gs xor sbb dec aam mov out movsl mov aam in addr16 push cmpsb cli outsb pop add lret repz inc mov mov mov xchg (bad) xor data16 sti add cs mov push pop mov lcall add xor incb jl sti mov popf lcall mov sbb jmp dec cmp and je das cmp xlat dec cmp adc sub popa pop push xlat out fcmovnbe sbb push lds mov jo add lret sub and sub sub notb and movsl sub xchg cmp xor (bad) imul jo insl xchg and pop push fmull jne cmp xchg addr16 insl cmp fs sahf or aam or pop scas add xorb mov jbe je mov (bad) leave push movsl push aad mov fwait lahf xor in and or enter mov dec out cltd cltd lret pop xor (bad) or lods xchg aas push (bad) adc in aad adc movsb push inc jbe sub cmpsb sub js sub out jo (bad) mov mov mov cs xor ret push sub cmc das sbb jne adc jp pop add jp test push jp and sti (bad) outsb lods mov mov dec dec popf ret cs lods jno repnz cmp aam add daa (bad) popl movsb and sub xorb push js mov adc mov push add push fcmovnbe jno inc call xor mov mov dec sub pusha popf clc pusha xchg clc and xor ret out loopne pop out leave out icebp cmp or push xchg xor push cli mov cmp cmp lcall in cld dec jne xchg pop mov fild lea cmp and das outsb icebp jnp xchg (bad) into (bad) pop xchg dec bound mov inc idivl and bound fsin mov in gs xchg cli sub xchg mov movsb push pushl fsub ficoml xor lods (bad) rolb insl inc add es push mov repnz mov pop roll mov rorl loopne repz movsl testl leave (bad) sub xor nop testl adc xor xor cmpl arpl daa pop ds dec lret pop xchg fdivrl imul cwtl clc jmp sub mov lret (bad) mov cli shl cli out ret cmpsb push pop (bad) hlt cmpsb inc stos stos pop shrl adc fstl mov pushf lods dec fcomps (bad) pop jp push mov into cmc inc inc mov mov mov movl mov jo rcll mov push and popf scas inc jno fbstp jb and jl sub mov sub push out movsl mov lods (bad) pop dec cltd test adc push movsl add dec int xchg xchg pop pop xchg mov inc fist or test cs iret jp dec push push xor cwtl push and lods shl cli repnz in lahf add push push in in xor adc xor lcall sub pushf in push data16 test push mov mov adc or xor imul xchg mov test or jne jne ljmp mov insb fcoms push into sub test jno mov add cwtl (bad) push mov pop push push xchg push pop outsl xchg into mov dec test clc sbb dec jle ljmp popf lods mov sub mov bound repz stos stos and xchg or push pop jmp fdivr sbb cwtl push fmul out cmpl lea rorl repnz jae (bad) ficoml lds fs and inc mov roll mov imul xchg jae jge adc cs out mov xchg fstps insb inc cmpsl mov fimul jns (bad) lret pop inc cmp mov in xor call les mov pop aaa jp pop dec dec ljmp (bad) mov xchg incl pop ds cmpsb es push leave fdivrl push mov adc push pop push fadd mov dec jl mov pop jg repz mov pop (bad) cs inc fcomip cli test outsb inc xchg scas sbb out iret scas add fistp mov aaa add adc adc push sub or xor push xor push stos inc cli lods adc fld1 into lea mulb xor jmp fist (bad) sub sti pop ljmp cmp out icebp pop sbb cli jae jl dec ds call or xor adc aaa es adc mov push and dec and mov jge and mov notl (bad) mov mov pop mov add icebp push push ljmp aam jnp mov pop xchg push or (bad) cmp pushf dec xlat fldl push loop cmc out arpl arpl (bad) xor leave fmuls inc rorb insb lods (bad) (bad) fsubrs dec test adc push jne (bad) popf cmp inc jb les insb or or dec xchg mov int3 loope push inc lds mov adc rcr lcall sub je sub jge iret stos int sahf repz movsb mov xor test sub test pushf (bad) std jp lea or xlat adc push movsl and ljmp push out (bad) leave arpl xor sub mov xchg (bad) push mov or or jge inc outsl jg lods push test cmp jmp mov xor fwait xchg mov daa iret dec (bad) (bad) mov pusha and (bad) and ljmp xchg rorl xor xorl cmp and push stc xor in outsl shlb sub mov sbb inc ret xchg gs inc cmpsl push add cld in and add and in ljmp mov stc (bad) jbe jecxz (bad) stc out daa mov nop (bad) je pusha or adc div sub mov cs fs repnz push aam pop xchg jl negb mov scas es lcall mov bound xchg pop mov mov sbb jmp push cli add (bad) addr16 pushf push ds xor pop cmp adc data16 pusha aaa jbe push push fstpt in ja fisub mov stos cltd lock dec lea insl cltd mov fldenv ljmp or sub lods inc and push jp xor loopne add cltd cmp xor (bad) insl imul pop mov cmpsb ljmp imul test das addl dec imul mov movl icebp xchg add jl and push aas sbb pop (bad) orl or pop int3 gs xchg fwait nop sbb cmp adc lcall sub sub cltd push add push das loop xchg push push andl lods mov xchg loop mov movsw js dec mov pop outsl jbe jp push mov in xchg and inc stos push test mov fmul mov popa adc int jp add repnz cmp sub sbb into jl repnz xchg imul sbb dec adc adc iret or jmp test xchg fidiv hlt xlat mov out xor sub jle addl outsl popa call dec dec sub pop adc lret nop pop cmpsl pushf (bad) call xor or lods sbb sti nop es mulb in mov dec inc prefetcht1 mov rclb xchg in adc mov inc lahf lret pushf cli cld mov dec mov sub lea and push fcmovne (bad) cmc inc (bad) std sub rorb jmp dec repz jl fyl2xp1 imul sbb jmp sbb sbb cltd and inc (bad) popl dec sbb sbb push out adc faddl roll or pop pop mov or test int3 sbbb ficoml fcomps add aaa sub xor jmp andl cmc movb cmp add aam adc xorb fwait aad mov ss mov out cmp cltd xor jnp jg mov mov fmull push stos es xchg pop cmpb insb push adc push xchg and ret ds xor lods sbb gs aad push mov into test mov jb xchg or mov xor scas jecxz loop stos fbld mov mov fs mov push xchg outsb lret add fisttpll push ret xchg or dec test xlat in popf cmp lret sub loop lret mov pslld (bad) cltd adc adc sbbb fist dec jnp in mov subl xchg push std fsubr pop sahf rclb shlb sbb mull pop ret mov cld insl mov and (bad) xchg dec mov out adc add sbb add inc sub (bad) mov mov aaa jne adc lds xor jle pushf ljmp insl mov es mov aaa inc cmp int adc je dec dec pusha and sub xor cmc es lea inc adc push push xor rep in mov in stc mov mov ja cmpsb jne out jae test js je add and mov sub (bad) in jo push sbb cltd les (bad) int3 out in mov sbb repnz loop sbb jg les adc push and xlat xchg sub inc push scas in leave stos mov xor mov mov xor loopne fdivrl mov popf les outsl push shl (bad) rorl flds xor xchg cmc xor sbb pushf outsb cmp mov add pop pop ficompl cmp xor push sub sub fsub pop cmp dec mov scas or dec iret jmp and incb add pushf shrl inc lea pop out in out stos je xor in pop icebp mov rep sbb into cmp or stos stos mov shrb fdivrl sbb push es pop test in das andb inc cmpsl insl jecxz testl and aaa fsubrl lret pop out loop sbb pushf leave test cmp mov add fsubrs mov sahf jns mull fsts lods cld push repnz subl cmp mov xchg dec xchg insb jecxz inc sub pop stc add lock pop sti loopne dec lods xor push pop xchg push cmp (bad) (bad) jnp mov mov jb pop add out pop imul stos ljmp cmpsb dec pop jle mov dec cwtl das scas jo push mov js lods and or mov mov sbb or scas sub mov jg cmp cli xor sbbb movsl add orb sub cmp movsl push leave stos inc dec loope sbb pop in mov or js jb xlat (bad) popf outsl jecxz leave mov jg loop fcomip push mov cmp js popa jl aas mov cltd cmc fcmovbe cmp add aad loopne inc loope ss gs mov pop ljmp (bad) push jnp xchg push nop dec fist push call test js loope pop in sahf insl xor pop jbe sbb int mov sub adcl pop fcoml inc mov cmp xchg test push or ja ret mov aad std inc movsb jmp aas (bad) xor xor dec aad dec pop sbb movsl sbb loopne aaa sahf pop xchg (bad) ss cmp enter or xor (bad) or inc or inc lcall mov shlb loope data16 jmp adc lods test mov sub or sub popa stos cmpsb push inc mov cmpsb fsin les gs mov icebp lds or mov in jne dec mov cmp gs jl mov push in arpl rorl in test rorl stc lret cmp loope mov bound scas bnd mov lods js mov xchg imul pop cmpsb cmp rol lret subb cmp mov mov push sti scas mov and imul xlat addr16 fnstenv cmc inc (bad) lds jb add inc stos popf and push cmp push mov push in and in jmp mov fsubrp adc or popa jns popf mov sbb cmp sbb aas push add arpl pop cmp sub je lret cmp cmp ljmp mov xchg mov ficompl stos je pop shr push jecxz adc mov nop mov std dec and cmp jl imul push out sbb mov and repnz stos (bad) ss and and push mov mov or (bad) rcrl in movsb inc pop fwait jbe mov jae inc sub or (bad) mov and fcmovnbe xchg mov outsl dec clc push push or aad sub cmpsb mov cmp mov and lods pop sub jle pop jb jnp xor test jecxz inc (bad) sub mov pop cmp or out jmp fcompl push inc cmpsb lea mov fstpt mov pop insl and xchg lock mov xor ss inc fadds xchg rolb not repz push cmpb pusha test daa push stos out into int (bad) js arpl es iret mov jo dec aas mov dec sbb icebp inc ficomp jmp mov sti xchg out xchg popa push cltd mov test inc ret repnz xor xlat or jnp xor int fnstenv add sub pop mov lret loop (bad) jle (bad) jmp and jle cmp xchg and in outsl testb in repz mov fdecstp add push lock xchg mov and mov lcall adc fsubs ret or adc lahf mov les out cmp xor outsb sbb enter xor popa fcomps inc lock orb scas sub int jae mov pushf stos mov cmp push and outsl popf push inc std sti nop xchg icebp sbb pop cltd mov pop adc scas or mov cmp cmp cmp cmpsb test repz clc icebp pop lock sbb pushf dec jmp popa pop xchg shrl shlb dec cmc test or adc mov or sub jnp aad out mov cmpsb cld xor ja in push call push cwtl clc push mov jo mov in mov idivb push jp pop nop or xchg test push hlt std sbb and in push xor aam stc xchg pop repnz mov (bad) loopne ret cld daa inc loop inc daa pop out cmp das lods or xor aad and mov (bad) pop lods (bad) les daa add and or pop ficoml je jmp std cmpsl loopne insb xchg rcll lret cltd push loop nop fist cmpl sahf lret xor ja or dec push cmpl mov sbb out dec pop lea std inc dec push xchg or cmpsb (bad) jb dec mov pushf ljmp cmpsb dec pop mov jle and shlb ljmp test push xor clc jle jle and dec cltd dec adcb dec pop movsb jno push xor negl rcl push test xlat call inc xchg cmpsl das sub jno nop clc shrl mov inc xor shll dec jl inc aam cltd fbld mov sbb (bad) push dec add fdivrs jnp add or fstpl jmp hlt movsb call pop into nop mov fsubrl jnp jmp dec mov and sbb aam sub jae cmp xor scas jae adc aad out repnz aad pop pop add mov outsl sub scas ret inc subl jae (bad) cmp mov lret test pop xor mov jge rorl mov push gs ret movsb inc notb (bad) or adc push dec loop inc xor aaa test mov push and or xchg pop push test push pop mov and aaa xchg in mov and ja jle outsb leave pop adc push (bad) mov adc pop sbb jb cltd jne push in faddp and push call mov cld cmp movsl xor jo imul (bad) sbb lea dec sti rcrb test xorl stos aaa ja rcl push mov dec cmp add jmp jmp pop cmp pop int3 das rorl outsl push icebp mov (bad) cmpsb in aad xchg cmp inc mov adc aad push sub sub add adc dec add dec sbb ss push or cmp std jae stos loop mov mov mov cld mov xlat test inc mov and scas push (bad) dec cmpsb sbb xor cmp pop imul es mov pop adc in mov or inc out push (bad) iret cmpsb loope je jbe or repz ljmp sbb push les mov mov (bad) mov sbb mov add in xor jp jno jge sbb sub aaa xchg mov push jecxz cmpsl sub push icebp add int pop out jnp adc pop adc inc fistl arpl xchg loopne scas pop sbb mov sahf lods jp pusha popf (bad) mov mov xchg cmp scas push cs mov dec or divb clc iret arpl add stc cmc pop adc jns and fwait fs mov je cwtl jmp xor xchg dec outsl stos shll add stos mov scas jmp cmc (bad) movsl xchg push cltd stc inc jae mov cmpsb (bad) fmull dec lods sub push jge cmp scas mov test push in sbb pop sbb fldl cmc imul dec loop hlt lret mov cmp ja inc testb sbb js stos sbb xor sahf sbb inc jb xchg fiaddl push imul scas or cmp addr16 mov xchg cmpsb inc mov cmpsl iret icebp and push lea cwtl cltd cmc loope xor dec mov (bad) pop add xor cmp push mov das out push push push jge mov mov les push faddl jbe mov mov jb jbe loope xor je sbb in push adc push pop sub lret jmp leave je js push ljmp dec push mov aad mov pop xchg adc inc jecxz and push out popf jl,pt jno test scas jae stos stc add mov or cltd imul inc and cld idiv xor xchg xchg loope inc or push push add jge test and mov inc cmp xor (bad) iret in mov cli popf xor loope dec dec repnz mov sahf xor sub cmp es dec nop (bad) gs es xlat lcall std ficompl in or xchg push test push (bad) hlt call (bad) jae sbb dec pop jns jbe push xchg sub add push sbb insb scas addr16 dec add jne add insl test xlat out mov ja cmp add xor lods xor xor (bad) mov lahf test dec dec sub mov movsl gs stos movsb out mov adc stos xchg jbe out mov (bad) xor dec pop out insb sahf dec in dec movsl and lret xchg std cmp mov sub xor test add cli sub dec std push cmp cmpsl and mov push jb,pt mov out mov jns out or scas mov sbb dec mov mov mov adc cmp mov arpl mov push jns sbb dec push into lods mov mov adc jb frstor es in int jne xchg dec (bad) inc pop aaa sub pop popf (bad) sbb ret cmp fidivr sbb popa fcomps mov lret loop aas stc rcll rol das (bad) jmp mov imul or repnz fxam sti push sbb add jno adc jbe xchg xchg cmpsl aam arpl push fidivl es adc ret jge mov cwtl aam cmpsl fcmovne ja into inc je sub and jge push lods sbb rcll mov pop rol insb cld xchg jmp jge mov mov (bad) and shlb mov je jmp mov mov loope or movsb add repz mov xor fistpl arpl insl jbe,pt mov xor fwait jns inc push mov pop scas (bad) jo (bad) mov (bad) jmp jge dec add (bad) sahf mov int pop (bad) dec or fmul jo lcall in cmp nop dec dec daa lock jp in sub sti in mov (bad) ljmp pop (bad) sbb push push cltd mov std add in sbb je and rcrl out add fs jno gs adc lret mov sahf ffree je sbb fistp lods push nop add xchg jae sbb push sub pop inc out mov rcrl adc adc pop dec cmpsb dec mov nop out in add je pop push les jp mov adc xor mov mov sub sbb adc lahf push shr inc lds sbb adc mov inc movsl ret sub and inc mov xor lods sub cmpsl ret and out or pop xchg fldcw in pop dec movsb sbb sahf or aam sub xchg out dec int xor pop adc push xor jp nop add ficom mov add jp decb fsts dec or pop cmc repnz ss pop cmp int3 cmp rcr (bad) pop mov add pop sbb inc cld mov push xlat popa fcompl mov (bad) stc insb jp sub jp pop cs aam mov arpl cmp aam adcb pop mov or sbb push inc xchg mov data16 loopne mov das add mov scas mov inc or ja rcll jg rolb inc fwait bound inc mov mov sahf xlat into push insb repnz pushf jo xchg (bad) mov icebp xor ror fwait test jge loopne xchg adcl inc insb enter jg add fdivs cltd mov push fwait movsl xchg rorl into adc push pop iret daa btc nop test rcrl sbb pop aam movsb pop adc test rol pop mov in stos adc orb mov aam popa xchg (bad) aad out add cltd push push or loopne (bad) daa mov mov dec cli test fnstenv jns dec add lret dec jle mov sarb sbb mov fild jl imulb stos push add jae dec jns (bad) and lahf ret addr16 imul mov add subl fisttpll fldcw sub push sub pop mov xor fnstsw shrl cli sub sbb (bad) ds lcall insb (bad) aam stos adc mov repz fcom mov rcrb in loop cmp mov jbe cmp sbb sub icebp fdivl insl lods dec lret push sti test pop adc hlt jo jo mov arpl add pop push lock popf sub adc icebp in int3 push add or mov jne ja int out lea mov ret enter into inc add pop mov add hlt or and xchg mov cmp pop lret xchg sub aaa in or add ret lods fildll pop jno xor mov xchg in call sti mov subl aas jnp fisttpll fistp imul mov cli and dec jb cmp sti shlb mov loope mov loopne adc adc mov fwait sbb das mov inc and nop mull dec inc dec dec andl scas and xor pop cmp push cmp lahf cmc sbb sbb fildll loop scas call pop sub dec cltd fiadd pop mov xchg ret cmpsl in in jns test inc rcrb mov test push mov out dec stos dec or jns std push (bad) add mov popa idiv mov push ficoml in adc leave js loop std xor addr16 iret nop xor xchg bnd or adc cmp mov (bad) outsl jecxz and pop clc dec mov outsb fcmovnb adc cli xor fdivl subl dec mov xor leave xchg mov sub stos jnp shll push imul cmp pop add adc xor clc mov inc sbb inc in and xchg adc dec pop sbb jle adc fdiv xor sub sub push sbb xor inc leave and xlat int scas daa adc cmpsb call mov addr16 ret stc das mov adc jb stos pop xor lretw mov dec icebp (bad) xor int3 push xor xor loope out bound adc cmp pop jmp xor sbb add adc jne aaa scas (bad) sbb sbb and js pop lock in cld mov in mov ss and gs mov jbe pushf and ja insl mov sbb negl jl mov (bad) cmp jns inc sub adc mov fnstsw out adc dec xor mov hlt xchg xor fildll adc sbb jle in adc sub out and into and push cltd sub jbe imul add mov cmp loop adc mov pop lock mov dec fsub sub push insl push fidivr psubusw push aad (bad) int jp int dec cmp xchg ja cs insl hlt inc jne xor pushf sbb sub mov sbb aaa aam in fisub add shrl mov jmp sarl or inc xor push out or insl popf xor inc das shr std stos iret insb inc stos test flds mov or in dec jne (bad) mov in sub (bad) xor add popa jle adc adc into pop (bad) xchg out push jo test jae pop nop cs je popl loopew and inc iret cwtl pop icebp dec iret out pop push das addr16 push add mov pop das (bad) repz mov (bad) push es cmp or jno iret daa mov addr16 out mov cmp cs jmp test fs adc jo and dec repz mov adc pop fs add cmp inc idivl or xchg adc (bad) push lret insl loope les in mov sub and mov mov xchg xchg pop xchg mov push mov mov (bad) jge scas data16 ret das test addr16 mov inc enter in xchg mov int3 inc lcall popf xor add xor cltd test mov xor sub insl pop scas jb imul mov fbstp sti dec repnz hlt sbb push dec (bad) call mov adc les inc xchg icebp xchg push lds out sub mov (bad) pop mov sbb jno data16 mov out clc sti repnz pop aad gs and push rorl (bad) xor xor sbb dec (bad) mov insb insl popa leave or lods add push dec lods push mov jge mov pop movsl outsb in or push leave movsl lds enter push pop fwait sbb xor jae les inc pushf icebp or pop pop dec push mov fistpll mov pop jmp in ss sbbb mov xlat mov sbb sbb fstps leave or mov mov adc mov xchg into mov jo pop (bad) (bad) xchg and in push push out lods lock mov sub dec call xor pop cmpsb rcll jle (bad) mov imul and iret in dec cli sahf mov into fidivl fucomip movsb cli shlb inc in pop loope jae mov fisubrl sarb idiv mov or lods or adc cmp fadds aad fiaddl xor lea stc sbb cmc push fnstcw sub mov pop loopne adc je sbb out push jno es pop mov add sub rolb jle sarb xchg inc cmpsb out test xchg scas pop fs jmp adc push mov inc (bad) pop sbb jns mov fwait loope adcl lock sub adc das cmc and adc dec xchg mov xchg jae and stos icebp jecxz insl jno aas pop gs (bad) out sub mov mov mov jb loop aas fnstcw iret or mov xchg cmc fstps mov ljmp pop test lea subl data16 jle out mov into add mov jb xor mov clc stos loopne int3 imul dec mov stos mov pop jne dec rcrb and cwtl stc sti gs icebp lret push fildl call mov mov insl bound xchg push lea fstps mov pop pushw xlat push dec enter jne (bad) (bad) int cmp dec int xchg push bnd add (bad) fadds (bad) or gs outsl dec or gs cmp out enter sub test gs dec xor cmp mov xor data16 and sub ljmp lods xlat in xchg repnz push stos bound xor and inc (bad) push sub rcl rcr adc cmp shll popa adc sub sarl cmp mov ret dec and fs sbb xchg add and sub js xor lahf jl or push (bad) sti xor push and cmpsl add loopne out orb (bad) cmp out data16 mov adc pop icebp ja imul xchg pop addr16 jae or fistpl scas jo imul into ljmp lea (bad) mov cmp aas and dec mov icebp cmp lds mov ret iret jns shl lahf (bad) xor aaa out std push sahf clc popa push inc ret fistpll add push inc fisubl loope rcrl push icebp mov or rolb fistpll mov rcrb xchg push or mov sub mov data16 cltd push in push mov sti pusha mov fmuls mov mov ret pop imul imul repnz je inc sti mov dec jmp lret jno push incb pop mov movsb out jno xlat cld vpavgw rcl or (bad) lock stos int3 orl and jle mov pusha mov jp cltd out cli jmp lods adc cmpsb push mov ja daa out mov pop aam xchg fwait into jg cmpsb divb mov in and lds add icebp mov add add in and fbld xor rep dec shlb xchg jb inc stos lret mov aad sub sub outsb out xchg mov arpl xchg pop mov cli add mov leave jmp mov mov fistl and inc (bad) or cmpsl jne rolb mov push in mov aaa adc (bad) iret mov fdivrs imul dec fldl2e outsb pushf jle jnp cmp push aad jbe mov cltd add ja pop (bad) (bad) xor add add mov jge adc ljmp cmpsb push mov cwtl psrld imul scas xchg fs (bad) and icebp andb add add adc and jae roll inc int jl jnp dec push out mov mov lds cmp inc (bad) pop aaa (bad) imulb sub sbb jle mov idivb mov dec and adc scas iret rcr push iret pop insb xchg jg dec sub bound jo shufps test fs bound shll cmp shrb imul jo inc lahf test jno inc cmpsl add cmp sbb xor cmp inc jge,pn mov push idivb shrb pushf mov lods sbb repz jbe and ds sbb cmp fstp jg xor push xchg sub and icebp push dec das mov icebp mov inc fdivs lcall jno push sbb mov mov icebp sbb push or leave inc mov pop sub (bad) insb xchg mov inc mov cmp mov xor pop scas insb mov cmp sti cmc lcall push cs jg cmp cs jnp movsl sub fwait bound push jg out loope xor jle xchg add imulb xchg dec ficom fxch cmp xor push ja and lret pop fstps movsl int3 adc jle loope inc and ror adc or (bad) in sub jle mov push test and movsb inc adc xor clc mov gs xchg and mov decb insb out adc std mov rorb data16 pusha pop jne cld add imul fld fs jmp mov mov int cltd inc jp lahf inc xor cmp inc idivb sbb dec push (bad) les test pop xchg jmp xor mov push xchg mov gs and adc scas xchg cmp (bad) xchg push inc bound mov out sarl hlt dec jmp jl pop sbb sub pop pop mov cmp xchg mulb dec inc adcl movsb js scas test or lahf test mov inc sbb lods outsl mov jl out xor rorl jle movsl cld movsb mov lret fdiv sbb xor andl mov xchg mov cmp mov das xor mov inc pushf (bad) mulb mov mov jle lds cltd flds bound movsl mov dec data16 mov cmpsl or jb lods xor xchg rorb push fcompl dec (bad) push icebp mov jmp dec mov xorl sub xor loop sub (bad) fld out push pusha ficomp dec jbe into ds xor push sub or test data16 movsl mov das mov jno mov or scas pop pop mov pop cli mov leave xor mov pop and cld mov aad pavgb into cmpsb js ret dec hlt mov mov jo daa cmp cmp mov aad and popa or ljmp aaa jo lock push mov and push pusha insl push mov out jae outsl xlat dec fcoml xchg call mov or fmull shrl and lcall add icebp ss and (bad) aaa bound mov fwait icebp stos out shrl repnz sti stos fimull (bad) pop mov push ljmp popa or data16 bound sub repz cli sub and add repnz int add sbb stos mov and jmp pop call mov outsl lods push test insb nop xor aam push push lods dec pop and inc ja adc xor mov sti sbb imul fstl sbb sarl jle scas jne jecxz dec loope xor ljmp pavgb add loopne xchg pop sbb (bad) pop gs insl cmpb mov shrl mov cld sub lcall adc in inc lcall inc dec push ficoml adc pop cmp lret lock add out inc mov adc mov jle jmp add lret fcomps sti adc mov adc stos mov xchg mov (bad) (bad) imul fildl jecxz mov call add sbb lods ja or sub xchg loop hlt push cmp mov and pop lret leave rclb jecxz out out mov std fldt ror test ret (bad) repnz mov jb rcrb ffreep lock out sub mov mov out push outsl call xor jo lret add stos push fstpl stos sbb sbb cli popf js mov xchg xchg in fild cmp scas sub push stos pop mov add insl push (bad) mov sbbl jmp mov test xor lds and pop jns inc lret out lcall jae xor out add arpl cmp sahf cmp xchg (bad) mov imul cmp pop or lods roll inc js inc pushf test inc movb mov push out cld xor test and (bad) xor clc push xchg adc jo mov cli idivl movsl fiadd ljmp cmp mov out (bad) cmp repnz lret jno push xchg fs dec cmp xor popa jae cmpb add aad jbe popf aas add outsb (bad) dec cmp (bad) jo arpl jp cs mov and sti jo cmp push mov (bad) dec int xor pop push dec inc (bad) fwait scas jecxz arpl je pop std out adc andl add mov mov punpckhwd dec pop outsb mov xor jb stc jnp mov add dec dec mov mov mov xchg push pushf mov mov (bad) and xor cmp push fs push jnp pusha dec inc sub test gs lea xor test push int call sbb jns add icebp pop (bad) xor xchg pop (bad) mov fstl pop jo mov or push xor pop bound frstor movsl in push add xor ret pusha add lahf mov cs dec (bad) lea adc or aad pop xor jns scas xlat cmp sbbl ss fcomi (bad) lods imul loope mov adc mov (bad) push int mov inc or shll daa stos sarl test dec lcall out xlat sub inc ret xor mov lcall sbb jmp jg fs add sub cltd xchg call inc and cli xor cmp xchg and daa sahf shufps cld xchg in adc sub inc call or fwait pop xchg xor push push adc dec adc jp cmp leave (bad) cld mov push jp mov stos ret inc mov mov stc xor lret push mov in out sbb and outsb mov rcr pop insb add out dec sbb ljmp int3 fcompl push std aaa push orb sarl xchg push add add test mov subb cwtl jecxz xchg bound pushf cmpsl pop jnp and pop push push stos icebp addb mov std lcall pop in lods into sete subl insb inc mov jnp xchg jbe insl xor pop dec aas (bad) lret shll aam add add mov outsb addb call cmp cli mov aad es mov xchg out xchg xor dec outsb cmp pushf jp dec scas fimul add mov sub imull out xor cld inc and sarl inc push out push pop push (bad) inc mov shrb sbb push lock test (bad) loop mov in in movsl inc mov aam mov pop cli mov gs mov mov add sub insl cld iret jecxz addr16 jo les cmp add jle or dec mov leave popf std mov inc rcll cmp cwtl jmp je xchg sub push scas jns and or mov jp mov xchg sbb sub sbbl faddp sbb pop fs aaa jg dec jbe cmpsb les and mov mov or mov cli mov stos xchg sbb or mov test jno (bad) lds (bad) orl dec test jg pushf mov adc int cli pop (bad) cmc add mov iret mov fadd rcr pusha fstpl mov cmp hlt jg std pop cltd pop ret out mov fisubl adc cmpb cmp cmp adc inc push fdivl test test (bad) sbb out push add (bad) sbb jge lret inc dec xor sub dec and mov hlt fwait shrb inc push add dec mov xor shlb xor out mov xor popf mov dec cwtl push jecxz psubb mov jnp jo ret cli stos push push pop insb xor cmpsl mov fcompl lods cltd jbe dec and and xor outsl imul sbb cmpsl insb out test jne stc stos cmp jnp mov sub shrb enter jg movsb mov and mov (bad) mov cmp lret add call pmulhw and sbb fisttpll (bad) jmp stos loope sub push stc adc pop (bad) push or cmc stc insb popa lods xchg mov adc cmpl aad cltd test sidtl bound aas push mov stos lret (bad) mov je inc rolb or pushf sbb out inc out lret dec sbb add je xchg cmp hlt cmpsb and arpl scas (bad) loope imul pop inc push push mov insl lret xchg mov ljmp movsl xlat dec pop outsl inc pop sub sub jnp dec adc mov xrelease sub xchg ficom dec into jne pop xor inc scas cmp pop rclb rcll insb ret fstpt inc fsubl ficomp fdivrl sbb test insl iret sarl fisubrl xchg jecxz ficoml push loope,pt inc or (bad) xchg mov adc xor cltd add inc mov leave inc addr16 mov fiaddl push mov xor and (bad) leave movsb bound jbe out cld (bad) and xor sub sahf loopne jae or push test adcb and push pop cmc sti into sarl add fstl nop imul enter jns sbb jns jge xchg xchg dec pop scas inc fdivl add mov pop test mov ds sub (bad) lret cmp add (bad) cmp ja cmpb js jmp or lods pop lea (bad) jp inc xor xchg sahf loope xchg dec ja mov mov enter sub add aaa cltd (bad) fs jmp sbb and push jl aas or iret outsb adc inc sahf cmc jle (bad) pop inc mov imulb pop les movsb outsl sarl icebp addr16 scas pop and fs dec fsts test jmp xchg jg xchg lret pop movsl lock popa mov cmp insl aad lahf pop imul add icebp shrb jle cmp push xchg dec neg out xchg adc aaa daa xor jg cs jbe aam arpl sub pop sbbb push loopne arpl add sar (bad) cli mov push xor jl dec fs (bad) push flds popa movsl (bad) jo sub adc rcrl pop daa mov push jl stos inc cmpsl imul repz sahf dec xchg cmpsb ljmp cmp shrb or mov cmp mov add mov out mov fwait inc out movsb sbb fistp pusha gs mov call xchg sub out mov out sbb popf mov mov push mov and daa clc (bad) arpl repnz push outsl adc outsb outsb stos aaa add sub hlt mov (bad) inc inc inc insb out xchg sub repz adc push xchg scas push pop pop sub outsl loopne dec pusha hlt xchg test stos and ret jle and cmp sahf loopne sbb xchg dec fldenv sahf cmp pop sbb insb mov adc mov (bad) lret (bad) xlat ja fldt popf enter pushf dec xor int loope inc std imul xor jns and (bad) cmp gs into mov sti lds ja enter pop leave xchg ja add bound (bad) and inc inc test cs lods daa loope cmp mov or testb imul pop cmp pop out fstpt fwait jb mov nop and mov scas fbld loopne xchg shrb (bad) repz in (bad) jo push sbb and lret xor js outsl fwait fwait push jne enter les or popa outsl movsb jle mov inc in xor adc sbb inc das fisttpll (bad) aam mov jns pop lahf mov mov ljmp test sti or mov mov inc push xor lods push lret sub mov mov mov aad popf leave (bad) xchg pop jne jmp or ljmp (bad) cld mov sbb jl push ss fwait xor (bad) inc and cmpl test inc popf mov pop or lods ret movsl jo sbb adc ds pop sub (bad) daa push inc pop (bad) sarl andps push mov ljmp mov sti les jae add fwait sbb xchg dec outsb adc cli inc jmp lret inc xchg (bad) pop out test insb or jmp adc lock inc cmp dec lods mov and inc hlt sarb ds imul (bad) andl push rcr mov inc std push into sub pushf push mov stos mov fldl fucomi push mov push out xchg ljmp mov lea inc fildll mov aas shld mov repnz mov mov and ret out fcmovb les jne push decb adc mov cs sub jp mov clc test insl cmp mov pop (bad) pop or into mov add je bound loope mov cmp lds mov out scas jo aas mov (bad) sub push mov (bad) mov into jmp scas sbb jbe mov lea and or fmuls rcrb cmp not cld imul jp gs into mov lcall push int cld lods xor or inc cmp pop push data16 and dec mov sbb hlt mov dec xor sbb xor test movsb out inc and aam jecxz sbb and xor xor dec jmp xchg jle je loope int xor addr16 mov (bad) std addr16 mov rcll pop enter (bad) int3 sub enter dec jl mov mov in xchg sub mov add lods adc lds jae cltd add ficomp inc xlat insl jmp rol mov or imul sub pusha stc data16 jecxz (bad) jne mov arpl sub andw repz sub mov and inc jnp btc inc and lahf adc jns decb inc out aaa jmp mov pop in (bad) ja inc add adc xchg pop jmp push lahf cmc inc xchg icebp insb movsl movsb enterw dec or pop jle xor jge and or lds fisttpl inc pushf pop mov push aaa int3 lods lods call daa sub nop or mov jp xchg add dec test jg mov clc inc mov test jg std popf xchg xchg mov aad mov repnz add mov adc sub daa xchg shr scas ret push lods cmp stos out ret or push pop js mov cmp add out ret sub push int fstpl subb xchg je adc push pop test sbb scas jmp mov inc popa sbbl adc aad ret jbe cmp cli enter hlt out jp inc outsb daa xor mov mov inc jge and push jbe (bad) or mov imul and mov mov jno dec jmp orb pushf movsl in sbb lock fiaddl xchg daa add cmp shlb test icebp pop sbbb push cmp clc int3 xorb adc and mov mov movsb and xchg add jg sub imul xchg outsl xchg dec jp and mov push jle cmpsb dec sub jnp aam test sbb push push (bad) into or and mov imulb push xchg mov inc aas scas pushf mov int dec (bad) mov movsl cmpsl mov cmp mov inc or mov sub insl lret pop ja pop dec mov aam imul sbb test cmpsb sbb mov mov test jne adc pop jb repz daa frstor and outsb lea jno int sbb aas out pop push add mov push mov xor js out out mov cmp sub cmp cs and mov scas mov adc stos arpl cmp (bad) ss adc dec cli std inc lods jae (bad) lret gs cmpsl (bad) xor adc adc sbb arpl incb pop gs xchg push fisubr ss fisubr fnstcw pop push js cmp das xchg xor std mov mov mov push popa incl inc mov lods xchg sbb sbb cmp mov or inc cmp leave aas fcompl je jp in xchg jle (bad) int3 xchg fcompl xchg enter adc sbb imul xchg ret or dec cli mov in loop mov pop aaa out (bad) sbb and aad movsb push lcall fdivrl cmc sbb inc lahf sub jne mov xchg push lods bound xor jo fwait cmp mov out pop and inc and mov sbb dec or rclb dec rorl cmp add (bad) movsb fxch dec jnp mov shrl fcompl sub test jne scas adc jb rorb scas pop loope in int3 aas dec aad adc add pop leave pop sti ret lea jl push lret je mov and adc ficomp push enter mov into js mov jmp js mov cmc mov mov test outsl or push dec pop lahf mov pusha lret imul mov jo mov stos aam push cmp rorb cwtl and fmull loopne fcomi testb test sub xchg and movsb mov ret js adc mov xchg cs push fadd mov fdivrl hlt mov aam push fiaddl into push pop dec cmp bound sub ret mov ror sahf testb add push insl das cmpsl push mov and cltd out outsb mov ret popf int3 or fs enter push movsl dec or movsl mov cmpsl mulw cmp lds fdivl mov bound inc add cmp loope mov sub adc icebp mul in fadd arpl jle mov inc gs (bad) (bad) sbb pop andb bound or mov push and mov insl xchg (bad) jg dec mov push in pop sar cmp stos leave sub es xor fcompl jb dec adc loop out mov test repz inc movsl dec sbbl scas (bad) pusha jmp sbb (bad) aad into fidivl adc mov mov mov lret out ret sbb adc clc push dec jle stos xchg push std xor inc (bad) flds popa mov dec push mov push addr16 push dec xlat xlat loop insb sbb lahf outsl out scas imul sti and sbb xchg lret (bad) or into imul push fildll (bad) dec xorb sahf call fsubrl xchg (bad) mov inc jns call iret xorl test mov xlat mov mov push pop (bad) int (bad) imul fwait push adc shll push cwtl divb mov dec test cmp jle in ret xchg out sbb fcoms push lret pushf pop sahf cmpsb mov leave mov mov dec and push adc mov rclb cmp test mov mov outsl or and cltd stos sarb ss cmp or xchg sub out add cltd xor addr16 je push and xor xor mov cwtl inc shl adc addr16 add sbb jl mov cmp imul add enter cmpsl andl das fs aam movsb jb test imul cld inc out push push jg sbb ds mov mov repz lods fadds and sbb sub dec lret fiadd aam clc pop add push loopne cmp mov scas ret adc int sbb fild pop dec (bad) jge (bad) mov sbb pushl inc enter ss adc fnsave js in lret shlb insb jecxz les and and pop lret adc mov int ret les das or jg stos test lock aad imulb jmp (bad) in mov dec xchg mov cmp xchg sub inc add mov imul aam imul out (bad) std mov adc xchg loopne loop stos std xor cmp int dec jge jge adc (bad) sahf stc cld mov (bad) lock rolb rcrl adc (bad) ficom gs mov sub pop ss leave cmp mov lea jle lds aaa out or jl mov gs mov jo or (bad) mov (bad) jl or xchg cltd jg imul sbb jnp inc ror add lret nop les imulb daa das inc xchg shl dec fwait push mov mov test decl sbb push (bad) cmovbe mov (bad) arpl mov push xor adc fildll lea mov and aaa (bad) push hlt cwtl in imul adc lods sub cmp lcall or fadd movswl in inc (bad) mov xchg xchg push and pop sbb and and data16 sar bound xor ret test idivb cmpsl xchg dec cmp pop mov test push leave jge dec fisubr in (bad) ret jns es movsb xchg and mov jmp mov cmp and xlat clc out in or test add mov jno adcl fstps xchg cwtl push shlb pusha ljmp je and add movsb pushf ljmp adc jg or xchg mov int js jmp cmpsb jo pushf push aaa and sbb dec lahf scas in aas and add xlat add add adc push jns mov shrl outsl jo sub outsb inc mov jmp das sbb ret cmp aas sub hlt push popf loopne mov sbb aas stos and sub lds jo test or lea jns divl test test mov adc pop fs (bad) iret sub and jne data16 sub js icebp add int mov mov dec insl mov movsb or cmp lahf inc mov push adc sbb pop jno cmc popa rclb xchg jge dec adc stos addr16 leave xor adc enter mov fimul and dec jecxz ja lock sbb (bad) sub (bad) xchg dec (bad) lods mov sbb jae xorb loop cmpsb lods popf (bad) or cmp jo pop repnz lods sbb pop inc es imul jle stc mov mov inc or push inc adc sub push jb inc cltd out and and jb repz push mov dec jg insl and inc lds loopne jno dec sub outsl fcoml sub test lret lods sbb fs iret lea and iret lds sub sbbl sub mov jb popa inc push adc xor add imul popf (bad) (bad) mov lock jge popa xor jle push sti into repz inc in push pop push adc (bad) ja je jae pop mov imul (bad) fsubrl js jnp sahf jmp testb mov loopne ret data16 add loope xchg or xor pop pop jb fsubl mov loop dec stos mov xor sub push fisubl inc arpl dec insl arpl lods push negb mov (bad) xor fsubrl and andb mov jge arpl fcmovnbe test mov pop into adc adc add stos xchg inc xor out scas xor loopne inc ss add in and jge push std fsubr pop lods bound lret cmpsl js,pn push xor or mov test xor fsubr je adc cwtl cmp sbb cmp sbb jnp hlt lret add rclb adc (bad) mov test cmpsb push (bad) scas scas lods mov insl iret gs sub fimull xor jmp cmc lahf dec jae nop cs pop sti in jae mov cmpsb mov pushf mov cmc cmp imul jnp mov xchg xor xor jmp lret xchg decl dec lods inc jne mov nop adc add pusha mov jb shrb mov jge cltd or dec inc push cmp add jbe mov lahf ret dec leave hlt mov sbb jmp movsl aaa push jns sbb (bad) inc jl add inc mov adcl adc (bad) pop sbb fs jno xchg mov (bad) or outsb iret test fdivrl mov or jle sbb repz ss mov nop les and addr16 sti out mov mov out loopne xor adc sub mov jmp jb call sti xchg mov mov dec dec pop mov push adc rcll fsubrp lret dec out dec aad insb lods test push loop cmp aas lods imul (bad) mov jmp adc mov popa sbb cmp lds neg fdivrl aad and fmulp adc bound fwait ljmp int3 enter push aad hlt jno pop imul lcall or or xchg (bad) adc inc movsb lahf std scas (bad) dec cltd inc xchg fsubr mov xlat mov mov stos fnsave mov xchg decl pop cmp pop xchg int and sub (bad) mov aaa lods imul in jb insl lret sti rolb or scas jb adc mul sbb mov mov iret lock add test sub sub daa cli dec mov mov lds mov js,pt xor mov lds pop mov aaa dec cmp sbb nop test push pop mov or push inc add mov dec mov pop movsb xor pushf sti xor cmp leave cmpsl (bad) sti jno psadbw and loope loope mov push sub daa aaa vhaddpd xchg clc rclb out cs loope mov faddl adc sub cmpsb (bad) mulb jnp push (bad) icebp (bad) add popf movsb aad mov fcompl aam scas xor mov pop rcll cmp jbe scas (bad) adc arpl ficompl nop aam adc xchg daa pop or int out aam cmpsb clc add ret sbb jb push aam xor adc jmp ffree stc mov add (bad) lret cwtl jbe and iret inc push push popl jno sub (bad) mov cmp or subl je arpl sub and hlt mov scas xchg cmp addr16 cmpsb pusha jns sbb pushf loopne mov adcl or pop pop inc push pushf xchg or fistl mov in sub and (bad) pushf inc test add sub cs add pop mov pop mov dec jae lods lea and movsb gs cli out faddl sub loope (bad) loop and cltd cwtl sbb dec pop xor aam int3 sbb mov ret jo das sbb jmp rol lock outsl inc xchg sbb push jmp mov adc out sub (bad) pop mov jle jmp scas pop lret daa stc adc adc sahf mov cltd scas add lret sub xor inc push jne and adc pop cmp lds adc ljmp negl mov ss pop (bad) jne (bad) pushf jbe test ja jecxz pop fsts mov or cli int outsl stos push push fwait pop (bad) idivl jae dec push loopne mov xchg jbe enter scas ja mov add add sti jbe out inc jno outsb movb add inc out cmpsb enter pusha inc cmp or sub frstor pusha ja pop push xchg scas outsl bound call dec scas lahf pushf add and pop repnz xor aaa pop not mov (bad) mov (bad) mov inc out mov xchg adc das roll imul xor sbb mov and add stc xchg mov cli cmp mov iret pop cs push imul (bad) mov sbb movsb add xchg (bad) cli in cltd push mov mov add xchg cmp mov inc xchg roll icebp cli in daa ljmp pop out xchg clc sbb in popf js bound jl cmpsb cwtl mov mov test xor xchg sub and add xchg jecxz jge jb dec push xchg and mov scas xor out sub mov xor xchg cmpsl sub mov or test ret rol shrl insl ja std mov sbb jno jecxz dec sbb add mov dec sti push mov fwait lret shr or and dec addl popf sub jle push xchg push mov insl clc jl cmp icebp or repz pop or lods iret xor dec push mov lahf loop pop and jae jae xchg mov sbb mov iret xchg loopne jb push pop jno xchg (bad) enter mov icebp jge adc in jmp dec test xchg xchg pop pop and jge jns les lahf mov loop (bad) repnz mov mov pop sbb in dec cltd leave xor aas lock dec outsb daa jno cmp scas mov pop adc xor mov mov je movsl mov (bad) mov mov fwait pop push xor gs (bad) cmc mov aad lret push (bad) cmpsb dec in rep cld into je jmp or ljmp lods sub pop clc loopne mov shl push xor (bad) jl sub out sbb sub mov lret or mov sbb out push pop push subb push jbe lds jl lcall xor clc in (bad) stc jb jns sahf in test clc ret jbe jmp dec fsubrl fwait outsl cmpsb inc cmp mov fbld lods aam test sbb cmp aam ja xor popl xor sub adcl lahf into inc out scas add lds int push (bad) jmp fldcw ja jno and mov jle jb rcll bound add aam popf iret nop jl jne out adc xor mov jns pop add push or (bad) loopne mov jecxz loopne sbb mov testl inc insl jp cmp sbb clc adc pop xchg jbe jge fdiv int3 repz rcrl add pop das sarl mov in pop mov hlt mov insb jb lcall inc pop jnp loope loope and mov sub stos jmp push cmp cli cmp fild (bad) cmp mov mov test cmp jmp mov fs aaa push cmp pushf mov insl inc or xor cltd outsb jg ss pusha js xchg subl or adc orl adc dec stos pop mov pop inc lret push mov pop in sbb mov xlat mov std test jl mov sub jae adc aam cmp repz mov cmp imul cmp fwait test not mov nop div lods ljmp adc cmp and dec pop push ss jge sarl and in in jl push mov insb pop movsl mov iret pop adc dec mov enter adc outsb lret push inc and push xor sbb ficom fimul scas pop dec jge mov andl cmp mov jne lcall and mov jl,pt mov jp sub cmp and fstpt adc jae jno loop xchg or in (bad) cltd lret pusha dec sbb movsb cmp mov in je int3 fiadd fisubr push iret nop test inc add int3 adc mov cld adc inc sbbl call dec (bad) push iret std arpl mov shlb xchg (bad) (bad) pop std insb pop lret idivb sbb ror dec add cmp cmpsb cmp rcr cmp jmp addr16 sbb ds lcall fimul cmp out sub sbb adc data16 add jbe jo outsb inc fs pop pusha outsb fdivrs and popl add in lret out lea enter fsubl mov dec fwait sub add mov seto insl xor dec dec jno and add xor scas jge gs arpl in mov mov stc sbb jge mov xor add loopne inc push fsts sbb ljmp out xchg xlat shlb xchg (bad) sbb imul sbb sub push xor (bad) mov test and xchg add mov fisubrl or cmpsb out into xor push imul mov enter popa lods mov inc scas cmp mov repnz fwait adc pop movsl mov (bad) cmp mov mov or and in dec mov (bad) (bad) push jmp enter pop leave push shr jno test dec and mov dec or jmp loope xchg (bad) and push inc pop loop or fistp outsb push dec popf mov mov add jbe cmpsb das (bad) stos mov mov fldenv outsl test xor leave in pop in xchg sti js sti sbb subl inc int3 out push rcrl or stc jle jb pop leave or inc adc test xor jge daa lahf push cmp sub and pop sub in inc fistpl xchg dec mov add mov dec mov outsl adc xchg xchg test pop mov adc lods sub pop aaa leave inc out sub fisttpll fadd mov pop cmp cmp and shrb mov je stos jne adc addr16 fisubl lock popf mov lock clc in jle (bad) out sbb inc mov cs jno mov pop mov mov mov mov pop inc aad mov mov icebp outsl jae sbb int3 movsl xor or sbb inc pop insb imul cmp sub cld neg sbb fildll ds cmp sbb mov cmp rol mov icebp cwtl mov aas rorb mov subl dec sub adc test jb push sbb mov addr16 push pop mov hlt cmc pop adc jnp mov call (bad) mov push out cmp icebp mov movsb dec fdivrl enter fucomip cmp pop xchg fiaddl (bad) scas gs adc iret adc sub mov repnz cmp xor roll rorb xchg push jns xchg (bad) xor and insb in xchg mov or dec ja dec (bad) das xchg fldt daa pop inc mov fimull stos mov sub fxch sbb out (bad) inc xchg call rcll mov jge sbb adc sbbl in pusha lock xchg pop and adc jb inc out (bad) jl cmp mul xchg test jns add push sbb sti mov aam mov xchg mov dec fnstsw int3 in cmp mov push insb in adc cmp jne or pushf mov jp inc es ret pop sub sub les adc cmp or daa (bad) mov lcall sbb mov daa gs cmp mov mov scas xchg pushf push ljmp jge cmp pop mov aam pop sahf xchg inc ror xchg jg xor lds (bad) movsl fst pop jmp push xchg les add adc incl ret clc pusha es pop push xchg loop frstor and push movsb adc sub cmc (bad) or inc jns mov pop adc fsubrs call push enter xchg (bad) lods out inc testl lods fdivrl js andl ja fcompl cmp pop out lret and test mov sbb lea xchg cld xchg notb inc lock vpsubd pop push in lret mov and int mov les leave scas enter or movsb cmp mov sbb rorb add testb jge xor push nop and cmpsl fldcw imul loop fstps cmp popa mulb xchg (bad) addr16 mov mov and pop aaa adc scas insb out fsubrl in xchg fs je loope push (bad) ja fimull lret and pop leave lahf popa (bad) add xlat std pop push (bad) out fwait xor hlt jle mov xchg int3 sbbl mov ja dec aas xor jo dec jae mov and insb ficompl jbe dec sub push sbbb lgs sbb mov das mov jmp xchg inc fist xor insl xchg mov jecxz outsb mov jmp es and mov loope in sahf repnz jmp arpl jno dec (bad) xchg mov mov add xchg sub insb (bad) cmp and data16 mov (bad) test xor adc jno and push jns imul (bad) aam inc into push loop loope cmp sub fnstenv in hlt outsb adc out jo stos xorb imul es pop ret and mov ljmp mov mov dec pusha jnp push outsw loopne cmp (bad) or scas mov (bad) (bad) adcb cmp dec adc (bad) mov dec and shrb rcr sbb ljmp and rorl movsb cmp mov int3 (bad) and shr xchg imul sub loope cmp notl xor jge push testl adc adc insl adc mov (bad) mov (bad) adc cmp jmp and data16 sub sub imull adc dec sub int adc inc cmpsb cmp inc push mov call jb or pushf movsl sbb jb out mov shr mov pop xchg cld (bad) xlat leave out ljmp fcomps jne pop or mov das jno (bad) movsl out adc pop shll adc push sbb pop push mov and inc dec jno push outsl fwait adc xchg aas pop scas mov cmp out xchg push aaa mov negb jo rorl or push rclb jb (bad) xlat jmp ljmp jno sub mov add ss dec xchg cmpsl nop lods or inc cs jmp push inc inc add push test pop jmp out fstps cmp sub rclb ret pop pop sbb push (bad) dec movb mov jg jns inc fidivl push lock xor mov or mov xchg adc add mov stc push sub jp mov js inc stos gs mov push test ret push dec insl lahf or mov jl test and jge cmp pop jne xchg ud1 cmpsb push cmp ret sub (bad) xchg (bad) fld (bad) mov pop dec cmpsl xor add jle rcl cmp aad mov add lock lret pop add fisubrl das or nop push adc push aas (bad) jb mov and dec int dec mov stos mov and das mov lret rcll in int3 xchg xor (bad) push dec sbb pop jns jae sbb push sub fdivrl push inc ret cmp ds sti movl xchg inc lcall movsl add dec jge repz icebp dec cmp mov sarb lods sbb data16 mov arpl and inc cwtl dec mov push ret cmp fisubr cmpsl sbb xlat jmp repnz mov insl jbe push (bad) jl or outsl test loopne jmp cmc dec shrb mov and cltd mov cmpl js (bad) aad cld push idivb pop and jo movsb lods loope push cmpsl les gs mov pop arpl push fldenv cmp xchg and push das repnz lods push sub ret (bad) sbb arpl outsb inc stc inc lcall or mov jno xchg andl sbb stos push push dec ror xor lock rcrl jmp push sbb addr16 mov xchg sbb cmp push cmpsl out shrb gs addr16 mov sub iret or lods push ljmp gs inc push push dec int3 jb push or cltd in pushf pop pusha movsl xchg popf js jle in out cmpsl adc pop lea mov mov fsub inc jmp xlat pop mov sub ds mul push cmp push cmp (bad) mov rcr xchg inc les ja ja mov jge cli fistp lcall mov fs ret mov lds out cli dec add dec xchg mov ja sbb jmp mov test mov iret mov mov add out inc cmpsb add mov lcall or (bad) mov sti or fadd out movsl jp dec dec push mull jbe into nop mov das loope test jno cmpsl or push loope push repnz xchg rclb jl int3 (bad) iret rcr add int lods outsl test sti or pop jle icebp jl or lds int lret xlat xor and pop repnz loopne push sar mov xchg mov bound ljmp pop ds add stos outsb pop sub jae dec lods aad mov cmc dec insl dec mov sub cmpsb cmp insb dec (bad) js and jae cmp mov jno cmp pop pop push add inc loope mov idivb or in (bad) xchg lock xor stc xchg out mov sub repnz test and out mov push icebp xchg pop lea aad outsb sub mov mov and rol ror out inc jno out cltd jp lahf aad call inc aam outsl and mov jg dec pop (bad) sub mov call jmp mov hlt mov xchg inc loope es jg jecxz and add add add ret mov ret mov in rolb sub iret pop cmpsl lds xchg adc ds sbb movsl or xor stc into fidiv cmp call mov das (bad) mov add mov fldl xor xor mov arpl fdivr push leave sahf jmp pusha push dec and dec mov push loop cli mov adc lea xchg pusha jns pushf jae jecxz cltd mov jns xchg (bad) cmp xchg dec je jbe outsl cli nop mov pushl jb cli repnz lock mov cmp nop pop push xchg icebp pop in addr16 inc cmpsl mov fisttpll stc movsb cmp mov sbb cmp mov lret xchg test and fcompl outsl test fst dec cmpsb popf mov icebp addr16 (bad) jp inc hlt inc rclb aaa aad loope orl adc insl mov fisubr ret add imul cmp jg push xchg sub lcall into sub inc outsb mov rorl sub lods test mov pusha jbe pop pop xchg (bad) sub mov in out inc inc push das mov repnz ffreep and and les adc and decl hlt add jge xor faddp push mov push repz mov addl inc enter loop pop pusha mov add rcrb xor xchg testl inc nop stos jno gs mov icebp jmp pop bound outsl add fiadd out inc dec rorb xchg rcrb cmp sbb jb pusha sbb push cltd (bad) jo (bad) mov cmpsl cs (bad) jl cmpsl sahf inc jns xor mov loopne test repz addb jne adc (bad) dec loope imul mov cmp aas mov ds lret dec scas or pop lea add mov frstor or and aas push sbb push leave addl scas enterw fidivrl outsl pusha xorb and sbb mov outsb xchg xor aad jecxz jmp int pusha xorb mov cwtl xchg jbe push adc and in inc mov daa mov dec call fld1 lods dec sub roll adc ror cmp or sahf push sar cmp or sbb (bad) or inc aam cmp cltd add into lahf add cli jns pop mov jmp push data16 enter jp mov xor xchg into std pushf pop and pop push and adc xorb mov jns aas popa sahf mov movsl jge xor mov mov mov in sub (bad) ljmp pop sahf es pop out int dec cltd aam mov add dec jo cld je je sarb out sbb adc fs or inc pop inc pop scas or cmp and test or in sbb xor jae mov ror outsl mov pushf (bad) (bad) sbb lea aaa pop out lds or cld test popf dec or xor and fdivr (bad) jo bound add mov adc push mov aam popa mov fs dec mov cli jb stos lret out pushf or ja mov sbb shufps test ftst or lea xchg js aad pop sti fnstsw pop add sbb push dec xchg in sarb add sub jb mov mov test shr mov daa ljmp dec insl mov fwait ljmp dec into add cmp aaa and mov loope pop mov rorb ljmp push push fldcw push xor mov icebp or rolb cmc and mov push shlw stos xchg inc aas pop push jne jb xlat mov adc subb aad das add fcoms or add movsb push xor sub xor inc idiv pop lahf jb int lahf sbb mov add push ret test pop sbb in adcb jg mov xchg xor jmp movsb add or aam lock jbe push cmp push xchg je aad pushf (bad) dec daa xchg test ret arpl mov mov push je adc aas push (bad) sub dec outsb jno lods push hlt les loopne pop (bad) or aaa xlat mov add loopne notb push mov dec pushf mov movsl popa mov cld jl ljmp inc mov push call sub push mov mov shrb adcb and mov sbb jo xchg mov fs inc and dec out xchg mov divb je or loop fstl sbb cmpsb sub push aas dec cli sar (bad) dec mov sub std jmp fildll fstpt shl push or mov add and add cmpsl fiadd scas cmc cmp lock (bad) (bad) cmc adc pop loopne lahf mov jae mov mov int sub pop cltd leave outsb popa lds push leave xchg in aaa and xor pop fild sub test dec aaa loop out cmpsl (bad) adc cmp test jl inc adc rcrl jne xor adc cmp inc fs push fsubrs adc aam pop dec cwtl call lcall ds mov mov stos cld and (bad) iret loopne dec xor adc fnstsw mov xchg ja and insb mov pushf (bad) and inc (bad) lock sahf mov rol mov cld std (bad) fildl in xor shlb out mov call lods xchg daa in icebp shll rclb or jns cmp cmp imul xchg mov dec movsb dec (bad) (bad) pusha (bad) daa ljmp or and jnp fsts loope xor xchg xchg fwait mov jbe jge out inc mov sbb pop pop and inc loope mov das or arpl jge mov xchg lock mov lock xchg imul mov sub xor into mov add mov xor sbb fstp shrl mov mov bound and push rolb sti cmc mov push cmp std mov xchg xor xor dec xchg jp cmpsb fisub push out insb (bad) sbb movnti fisubr xor cld es jg push jne or ret xlat dec sbb cmp mul mov fwait xor je dec lret jp movb rclb popf lret dec xchg mov imul stos add and lods mov imul pusha (bad) mov mov cmc mov and push addr16 int3 pop mov mov sub (bad) ror mov bound subl push cmp lea movsbl in pop mov xchg les jecxz iret leave adc cmp or lods push or cmc jp cmp pop fisttpll mov or or ja mov mov stos jo shll push jp punpckhdq test cld mov js lcall mov cmp lds mov mov pop xor pop push pop sbb dec push xor mov stc xchg mov inc insb xor ficompl push mov test repz mov icebp cmc popa xchg mul mov cmp addr16 adc xchg xchg xchg jne cld jecxz xor arpl aam inc stc bound xchg and sub aam cmp aaa cld mov out push add ret ret loop,pt pop sbb test dec or push inc das pop cmp jle push insl push push push xchg inc (bad) movsl cmpsb or sub test popf fwait mov mov and loop mov imull popf xchg sub dec out or xor push push and std lea cmp mov add xor mov (bad) mov jb orl pusha popf push push push push sbb or sbb or out ds xchg inc (bad) or outsb mov dec dec jne (bad) push jb jle fisttpl sub ss outsl ret add loopne inc pop push pusha fsts sub test xchg mov adc push movsl add int (bad) xor push lds ffreep mov or outsl lods out test jb sbb jle (bad) daa add jl adc add push mov test dec mov pushf mov ret mov and add fsubl xchg (bad) sbb and (bad) scas xchg fldcw loop arpl aad mov push adc push cmp mov imul pop jns jl addr16 repnz jb in push pop pop int jge (bad) cmp sub repnz leave xlat shrl jae or iret and loop pop cs dec jnp xchg popf xchg mov ret scas ret mov dec push out xor cmp hlt inc mov xchg inc fcom inc int fwait pop shll mov push push leave arpl jecxz imul dec dec icebp lret xchg push xchg rorl in es mov pop mov fidiv aaa movsl out daa xorl cltd mov or jl or orl shlb mov add push sub or andl leave loopne push stos test sarl or scas mov sub inc cmp sti sti (bad) cmp mov cld fsubl pop mov cmp mov and xchg adc (bad) or aad lcall enter jp push out cmpsl sbb jg mov or hlt movb lods stc pop aas push inc mov pop and mov sarb pushf dec xor test test jns (bad) mov push dec sbb fcomp inc jns mov cmp mov ds popl add or jge xor dec and mov add cmp jecxz push mov hlt xchg add xchg push ds cmpsb out das stc cwtl cmpsl or sbb xor pop loope jp icebp or popf cmp jg dec push mov xor and lret imul add pop mov fisubr inc arpl adc mov sub add xchg or fstpt mov ljmp scas jge mov test mov fwait std cmpsl repnz or std inc and jb or cmpsb imul sbb outsb mov lds daa adc imul movsl mov fisubl cld inc (bad) and adc int3 negl (bad) xor xor icebp mov pop popl add xlat xor xchg xchg sbb int mov push push sbb xor mov mov lcall cmc xchg iret repnz mov (bad) cmp xor jge jle lret push xchg fcomi adc xor mov xor jb rorb fcoms pusha mov mov sub inc xor in (bad) cmp aas popa pop loopne lods cs pushf inc stos daa or push mov push arpl lret jbe push xor icebp ret icebp and das call and mov pop addr16 mov sbbl sti or mov xchg xlat (bad) test test ret fdivrs subl xchg inc out sti int xor dec data16 push inc mov sub hlt push jl jns dec in mov fsts test in adc les mov xchg jmp cmp ficom mov mov mov ss leave xor mov push and movsl movsl push sbb and icebp mov repz dec lock jo pop push (bad) mov sub pop fadds dec cmpsl sbb imul clc mov sahf ret sbb inc addr16 xchg mov (bad) je add daa or mov (bad) jae das scas mov pop fdivs push jne pushf (bad) and stos bound ljmp frstor dec mov sub jae jp fistp pop pushf fisubl aaa jl push xchg std lcall push insb adc mov mov pop test scas aad je cli mov out xchg jns push sub xchg mov dec data16 leave pop stc dec (bad) xor push test push jno loope inc setle aam mov lock dec or scas dec incl cli fwait cmp jno lea jae cmp jb xchg fidivr lods sub lods push lea and mov out test pop fucomi loop in gs scas xor pop addr16 xchg (bad) leave fisubl or (bad) bnd xchg pop jnp fwait cmp lret inc cmp xchg ret xlat in mov pminsw sub sbb ret std rcll lds push xchg xor lret xchg jmp pop mov pop mov mov push sub xor and push call and lret repnz lea loope mov pop int ret jg mov jne fldt sbb stos lret les sahf mov popa ljmp mov pop call or lcall popa out out imul xchg adc and mov (bad) push xor aam ret cmp leave pop arpl std lret adc (bad) hlt les mov mov clc sbb adc idivb sub daa dec inc imul stos cmpsb outsb test call mov and fsincos int3 lea invd mov jp scas inc jle fidiv push gs hlt xchg xchg mov sub xchg jo stos int mov (bad) inc add aaa adc push divl or ret insb dec (bad) add jmp int mov xchg (bad) repnz push sbb ret lahf mov jo dec push lods adc out lret jecxz push ljmp jb int3 out pop lahf (bad) pop cli mov push das insb nop les in sub lock dec mov jns or and pop in pop or lret mov jno mov nop ficoml jne pop shll lods push mulb mov jae xchg jb pop and sub and fldenv fidiv imul dec loopne lods mov gs mull fist daa bound mov fnstcw ret pop cmp testl sbb and out add add jbe sahf xchg push push inc jo in inc add movsl fwait pop jg inc xchg sahf cltd lock dec mov movsb imul icebp add and push mov cli sbb mov out cs lods fwait or xchg das bound ret fildll orb xchg xlat and scas int fbld (bad) ret out (bad) and mov sub pop cld imul pusha xchg cld mov adc jns stos icebp addl mov mov cmp mov mov dec sahf xor add push xchg xor push sub dec sti sahf mov es sub pop stc lahf mov popl (bad) shrb dec or popa cltd insb loop scas imul (bad) fdivrl lock mov hlt mov mov out jg shlb hlt pusha pushf add mov mov mov test (bad) in cmpsl jp imul repnz jns into push mov mov aaa arpl inc mov or cmp mov enter adc cmp test jbe pop test or add mov sbb scas adc xchg leave sub and lock dec mov movsb loope test push fidivrl dec mov cmpsl test cmp jg pop jge lock cmp mov cmp sub pop enter xor loopne stos mov jg mov cld das gs adc lods inc adc enter fistpll (bad) mov stos pop xchg scas xchg inc inc dec dec mov hlt fnstenv out and sbb adcl aam stc jno jl out aad icebp sbb dec mov jmp add push jae rorl rcrb dec pop dec xchg sbb mov jo push push lcall subl sbb popf aam add fadds lock das lods adc scas ljmp jne xlat lahf add adc out mov jbe into inc jp xchg test test jno mov out test imul push fsubr mov imul cmp pop loopne int setno xchg daa xor lss addr16 outsb lcall xchg add les xor (bad) cli enter jle call mov pop popf or jl xor inc mov sub push roll mov lret jb inc mov jle and push sbb std les push leave xchg lds cli mov mov xor dec shll in das stc inc insl pop in gs jne lea dec or jno push pop jnp and cmp jae add dec js in push lock mov jecxz mov mov push inc xor or pop jno jne jns mov fstpl scas jne daa cltd mov add or movsl xor sub jo adc aaa in mov hlt gs and xchg orl cs out mov adc test neg cli jp popa stos push fildll push and lahf movsl pop cmp jno jg add mov ficompl mov push loop cld and push ss xchg out mov xlat fidivr test pop xchg and bound bound cmp inc gs or pusha fistp (bad) jo jp std loope xchg jbe mov dec nop in jle mov test cwtl enter in dec cmp jecxz xlat int jbe jecxz mov (bad) hlt lret mov mov jge lods mov out push add sub mov cs mov ds push lds mov or or sarb cmp jp and repnz aad pop ja pop dec fsubrs mov mov addr16 inc aad add cmp cmp inc sbb dec (bad) mov insb test pop mov sbb daa adc sbb test sahf and sbb dec cmp fbld idivl sub nop insl xor mov fildll mov mov dec in add inc sti pop loop mov (bad) mov outsl pusha fidiv or rclb mov gs sti pop iret xchg imul cmp (bad) mov pop in push mov cli out les jae cwtl cmpsb dec jo inc fs fucom sahf lods xchg inc into sbb inc push outsl movsl xchg loopne push clc pop mov js xchg faddl sbb pop jle enter xlat insl jg xchg and pop cmpsb xchg xor lea jle sbb popa jmp jle (bad) jmp mov pop xlat cmc sbb (bad) jl pop es or adc add ljmp sbb bnd nop cltd dec mov pop test xor dec jecxz mov jns insb jnp aas or jb scas test movsl mov dec mov push adcl jl or sbb faddl sub cmp mov push inc push ss dec loopne xor pusha adc js push and or push pop lret (bad) loop jno arpl sbb xorl lret les cmp mov into ss pop dec mov (bad) xor jecxz push sar push inc jns lret addl xor lea add cwtl xchg push aas fdivrl push mov sti sub adc and les shll cmp or jle fistpll jb mov movsb dec cltd jnp or jle scas out (bad) mov or dec inc mov inc lcall jg jp daa fildll inc (bad) div mov mov mov in fneni(8087 push dec cmp add (bad) xlat and cmp xor pushf jecxz addr16 (bad) or dec in mov popf es or sbb or jge es or pop adc out mov cld in jae xlat cmp pop rcll js fiaddl (bad) mov jecxz xchg cltd pop pop mov pushf mov cmpsl cld push test lcall jbe inc push mov mov fadds xor in sbb xor inc push cwtl sbb in rcr xchg mov shll mov push enter mov add mov rolb aam ds cwtl in mov adc out cmp push cmp pusha aaa jl (bad) cs jae rcrl add mov rorl rcrl pop push daa xor rcrl mov (bad) mov int jae dec mov pushf mov push add xchg mov push xor in lods or rcr lea daa roll pop add jae dec mov nop ljmp dec cmpsb sbbb mov push int or sbb or dec sbb mov insb cli icebp xchg rep negb cmp je adc test mov (bad) lock rolb pushf test jg add aas xor leave (bad) jb push aas lahf push cmp push cs (bad) daa cld loop adc fistp movsb add notb jnp xchg mov loop mov insl jl sarl subb int3 cmp fwait pop sahf dec dec (bad) cmc xchg jmp jnp fadds mov popl adc xor add arpl in imul int xchg addr16 inc adc sbb cmp xor jg lock jg insl inc push imul daa push enter flds adc in sub push mov cmp push dec scas idivl in cmp jae adc popf movsb enter push xor not mov dec xchg mov fidivrl mov adc or repz push clc add or cmpsl lret sub (bad) push fwait sub xchg add cld lea jmp xor mov fucom sbb sbb xor jnp es mov sub push mov (bad) mov mov lea fsts lock test (bad) sub leave push or or mov inc push xchg sub std out push mov or xchg jb dec js adc pop add dec cmp push jmp sahf xchg pop rolb arpl repz sbb mov xor mov jge sti sbb ficomp or jecxz mov mov sub stc cs adc inc retw insl mov cmpsl lock sub lods pop je cmpsb outsl xchg loopne addb cmp (bad) mov lea (bad) jge,pn gs inc add mov jae in insl pop rol mov inc sbb sbb xor retw (bad) js lds (bad) (bad) fcoml in pop adc fwait sub out lds jp lea int jle sub mov mov jnp adc aad movsb into mov stc fidivr movsb pop and xchg xchg push (bad) leave cmp vxorps xor shrl sbb mov out sbb nop pop mov (bad) repnz imul lea and add jbe xchg lods pushf and xchg and test outsb pop mov out test xchg (bad) test jo bound outsl and cld xchg mov pop add clc out fmul mov popa mov pop fstl enter mov test pusha cld mov dec (bad) cmp mov and stc fstpt scas imul fcoms sbb test sti mov dec cmpsb addl popf cmpsl lea ret in fistpl dec and sub (bad) call mov shrb popf clc inc push sbb shrl cmp inc mov in rol (bad) (bad) or push cmp pop or shrl xchg and cmp decl lcall nop add add sub adc (bad) cmp jle push and fistpl mov (bad) fisub repz mov mov mov int xor sub stos data16 lahf test mov leave mov cmp fstl jp inc imul movsb or push mov arpl (bad) in ror lret daa ljmp xor loopne mov sbb or repnz scas mov adc shll sbb fsubrs inc xor add push outsb imul lahf es cmp push fistp stc inc cmp inc or add rcl and add push inc and mov sub push lahf push pop out movsb add dec mov movsb enter je (bad) in test pop inc pop sbb jmp sbb out test inc mov jae lcall (bad) arpl mov iret mov push and xlat lea out mov cmp sbb jnp xor lods and (bad) push xchg inc push shrl outsl popf add adc jb inc mov xchg push mov pop loope or jns jns std add test stos (bad) fcoms ljmp jg lods mov sub iret inc sbb fisubrl push clc rclb ds xor fidivl inc jmp and pop mov shr loop jne jo lret andl mov inc daa xchg cmpsl test popf sbbb cmp adc sub imul mov dec sti jecxz sub pop inc lods adc or push sbb xchg sub sub jbe in lock xor sti icebp lods push jecxz cld shl loopne xchg add pop add sub imul das popf je sbb mov cltd pop cmp daa mov lret (bad) (bad) sub push fild (bad) mov xchg fwait ret mov orl and push jnp mov movb xchg ljmp popa push jo cwtl xchg fistpl sarb faddp push mov inc popf fstl mov jo dec xchg mov push adc aad stos mov sub ret inc mov out cmp fildl mov inc pop sti rcl (bad) mov xchg mov inc test movsb fnstenv fs mov and jb fistp and sarb adc nop pop aas or movsl fwait loopne mov popa cmc dec xchg mov pushf adc mov shll push stc mov xchg inc mov movsl mov (bad) cld jp sbb xchg test repz in insb jno cmpsl aaa test mov push dec sub mov call dec add fstl mov sbb mov sub xchg icebp cmpsb add out scas ret add je cwtl add je or pop gs and ror sbb pop mov jb mov add sbb out repnz xchg inc xor jl lea daa mov popf outsb lea mov stos push mov fdivr lods push sbb adc jns fcomp add scas cmp jmp mov aaa xor xorb aas bnd adc imul leave xchg dec sbb or pop push dec dec (bad) outsl sbb scas subl push nop ss inc dec or fwait repnz jecxz xor ret cltd xlat ljmp mov data16 js icebp cmpsl ds jo or leave jecxz dec ds sti popf bndldx inc xor push inc not push das or mov in jecxz adc xchg stc mov cli or fsts int3 (bad) sbb xchg push cmc adc mov aad inc push jne je lods and es scas xlat js cs sbb pop or and (bad) pop cmp xchg sahf add in push hlt data16 les jp lahf (bad) ss call xchg inc mov inc clc fsubrl cmp inc negl jmp or adc lahf daa int push in mov xor (bad) xor pop add enter lds push (bad) cs cltd mov fcmovnu add xor adc jecxz repnz cmp cmp push mov sbb test int ds call adc pop add pop les adc cmp push and les aad mov mov push (bad) aad push jl sarl (bad) mov out sbb pop adc xchg lods jmp pushf lods out mov xchg xchg int3 mov fstpt in sub jne or es int3 (bad) mov and lret mov out jp fistl sbb xor cmp sahf inc lret xor mov xchg nopl cltd fmuls mov ljmp int push cmpsl (bad) xchg call iret (bad) int loop in mov mov cmp rorl xchg mov mov enter jns arpl cmp lds mov or dec mov daa cmpsb xchg mov shrl out jne (bad) pop xor or dec mov je cmp in adc test test xor (bad) mov adc sbb mov iret mov xchg cltd call mov pop push gs xchg enter push mov (bad) ss pop pushf and xchg push inc addb data16 mov jle jl sub (bad) mov mov pop int3 xlat ja pushf mov pop sub fnstsw ret andb sub mov stos sbb cmp adcl sbb sub (bad) fsts pop mov arpl in popa or ret aas sahf jmp jle sbbl dec add and lea shll pop pop pop cmpsl xor in hlt push (bad) mov lcall in ret mov push lods mov out in pop adc das jbe ret lods cmpb cmp xchg dec aaa jno popf test sbb loopne pop pop imul shrb push fimull push setp add aaa xlat dec mov xchg mov (bad) mov bound adc scas and pop fdivrs loope loope sub add and push leave daa dec lock sbb mov mov fdivs scas fdiv (bad) mov enter pop or xchg jecxz push test mov jns idiv xor add in xlat fisubr xlat inc push inc fcoml pop clc movsb dec mov add lods clc jne shl mov jge icebp (bad) push popf lds push fstpt ja or pop ucomiss sbb enter inc xchg loop pushf push (bad) stc inc mov gs cmp (bad) pop xchg sub and pop lahf pop cmp pusha fstps mov jle fwait and mov mov (bad) or faddl (bad) hlt sub adc lret call mov xor mov int3 sub in mov sbb hlt xchg lahf ret xchg mov fistl sbb repz lret dec xchg test inc gs adc inc pop cli ja xchg jno mov or mov (bad) push fstps and mov sbb lock add lods out add xchg jbe cmpsl fwait push repz mov lahf inc (bad) xor stos cwtl cmpsb xchg sbb jne jl imul (bad) mov lahf mov inc movsl addb xchg jns mov pop and movsb fiadd mov push push ljmp sbb movsl cwtl mov jle inc push sbb idivl sub mov adc js push das ret pop sbb or aad dec sub (bad) aaa aad movsl outsb jle dec aam sbb ficompl sarb arpl in (bad) fdivrl movsb stc cvtdq2ps sub js hlt xor and stos into sbb aam test mov shll lods pop mov push ret (bad) cmp repz out (bad) (bad) iret jecxz ret and stos adc xchg bound ret pop repnz arpl xor mov or roll fnstsw faddl mov scas adc inc div dec imul movsb pushf adc je jb adc mov sbb mov push iret inc dec mov lods and mov push sub and cmp mov lcall push or xlat mov aam cmp jg adc cmp add push ja data16 push pop pop push inc dec cmc mov dec mov jmp pop iret push adc pop xchg (bad) scas mov (bad) clc pop adc out or adc rcr es fisttp idiv jbe mov push pushf mov push arpl lea divl jecxz or fwait lret stos cltd xchg cmp orb outsl mov or div pop hlt mov mov inc inc out dec and jbe mov inc cmpsl pop adc nop mov adc adc pop and pop jge fcom or es cmp arpl popa add sarb xchg insl cmp xchg into jnp test inc inc jl sub sbb push int3 sbb cwtl and outsb (bad) lcall dec dec out fcmovnb int3 pop ja sbb outsb lret jo ret outsb mov pop and out ds add and outsb push (bad) xor sub aaa imul jbe dec push je out xchg mov idivl jno (bad) hlt and sbb (bad) call in sbb cmp mov dec aas push cmp or cmc iret and and mov and lret mov jmp test mov sbb popa out or xchg mov sub shll jl mov push hlt and outsb popa insb add leave pop outsl pmulhuw stc xor pop adc cmp bound jg mov outsb in movb lods push inc xchg mov inc icebp outsb mov leavew sbb (bad) sarl jo cmc push and or data16 mov aas lret ss jge ret sub add lods inc dec or inc pop hlt inc push (bad) fidiv pop out sahf inc jle lods jmp daa mov jnp cs outsl imul jge cmp mov popf adcl xor mov or jge sub fcmovnu stos mov sbbl add push std xchg inc lcall jne jmp xor fisttp dec aaa cli or pop jecxz (bad) out subl adc cmp fiadd enter jne sbb sbb lea or mov ja inc test push imul je jbe dec sbb inc imul jge cmpsl bound mov sahf ljmp fmull adc mov mov cmp xchg out test mov into add mov push js dec add imul enter pop and aam push inc mov test aad mov call (bad) movsl insb xchg cmp cmp iret cmp and dec movsb and jl int nop (bad) sub pushf push cld les rorl xchg mov gs xor stos pop push or cwtl ljmp pslld mov xorl mov das mov aam enter rclb pushf xor out sarl outsb inc sbb movsl or inc add pushf loopne xchg rcrl dec rep and xor push es loop adc outsl sbb add push jo mov push jns fdivrs sub test push dec xchg outsl movsb or imul inc sbb repz pop mov inc or xor test dec movsl add mov data16 jge lods int3 leave push push and cmp fmuls std out or mov push pop test dec jge mov inc add cld fcomp fisubl mov mov in push out push xor gs test fwait and mov and gs insl shr or cmp xchg dec mov pop loop sub roll jno test (bad) inc or or out leave (bad) cmp int and pop sbb in push ja (bad) (bad) push push xchg pop and repnz sub insl sbb pop pop into lcall mov inc cmp xlat scas insb sbb mov rclb mov adc lods inc bound (bad) and fldcw cld call inc in int3 add jmp mov cmpsl cmpsb loop xchg scas cmpsl (bad) stos out dec add lret gs bound aas add (bad) cmp dec add outsl loope push mov lret add push jb out lods mov cmpsl xor jg loope lret sbb mov push (bad) xchg std dec jno add (bad) ljmp ret mov movsb int3 or mov aad jmp sbbb lahf repz sahf mov fisttp lahf sbb dec push (bad) repz mov push dec pop sbb test xchg push mov enter les pop ds mov xchg xor xor or (bad) or and sbb mov lea push pop stc leave dec cmpsb shrl aaa sub xchg fs out rcll stos in pop out addl sbb iret or sub adc sub mov push ror mov sbbb xor in sub dec xor clc push push xchg mov popf in or cli pop mov mov cli push lcall add mov pushf je addl mov fdivr test mov xor pop int3 jb ds and fistpll mov addr16 shrl cmp cmp adc or xor test addr16 jbe jl cmp inc popa sbb popf rcr push imul inc outsb or repz pop lds clc das pop (bad) pop dec loopne dec pushw loopne sahf sbb jmp cmp adcl (bad) scas mov xchg (bad) add jnp,pn cli lods int enter inc inc inc and mov std in mov jae jnp xchg (bad) aaa les andl movsb orb mov pop inc and xor or les jp out into mov lods ss xchg out add lds idivb adc stos push imul xchg push add pop daa test or in xchg cmp sarl arpl arpl call pop inc cmp jg cld mov dec mov adc push lock iret add int pop jle loope popa movsl and push sbb fcmovne (bad) and inc adc iret pop mov and into cmp push xlat lahf je mov lods jns stos loop adc js jbe pop lock inc lock push push xchg clc inc in inc xchg insb mov ficoml test xchg in push cmp sub xchg stos pop sbb push ja leave out jle sbb (bad) xor dec iret cmpsl into popl cwtl pusha xchg mov out inc xchg shll hlt movsl inc xlat aaa in enter es jbe (bad) int3 in ror sar sbb pop in adc scas mov cli outsb jecxz pop ds add es inc or decl cmp mov and (bad) (bad) (bad) mov incb cwtl add rolb lods push or mov adc movb mov xchg inc aad push sub pop sub std dec adc add push cmp arpl out mov push jne stc push push pushf cmp sbb xchg scas inc (bad) lret lods jp sbb xor aad loop xor add clc pop ret dec xchg push (bad) xlat cmp mov inc cld aaa mov mov xor in stc sub push imul in fisub mov popa xchg fwait pop jl mov notb mov ret addr16 push sti xor or xchg pop or or push ret mov imul sub rorl icebp fwait lcall xchg rcl xor adc jg cmc mov sub dec mov mov mov movsl inc pop ret mov std cwtl dec push pop les lcall mov jle pop dec sbbl ret push cmp sub mov jbe mov scas repz movsl test push pop mov inc (bad) sbb jnp (bad) imul cli push iret add and adc insl dec push mov cmpl movsb js push call fcomps idivl adc and jle,pn pusha xchg (bad) ja and lcall ja popf jne lea std rcr je movsl jne cwtl mov ss add bound xchg (bad) scas jmp or fisub jns out icebp inc and ja xchg daa out mov adc add xor ficoml jecxz or sub xchg dec xchg dec imull daa push dec mov mov and lahf pop mov mov pop outsb movsb (bad) lods into cmpsb push mov jns int3 and (bad) idiv inc adc pop inc xchg jae jno je movsb mov loopne stc cmpsb or pop xchg lret cld xchg mov cld lea ja in outsb pop add adc add add hlt lea mov mov pop xchg std dec lds cltd inc fidiv lods sub lcall cli arpl pop push jp bound xchg stc lahf dec xor loop imul and test cmp ret push jb jp gs ret xchg iret push push push and xchg fs outsl stos push mov pop push or add push cmp push jo out mov dec repnz mov fstpl dec and js scas iret cli pop lods idiv jmp pop xchg and dec out mov cmp mov cmpsl test call dec in mov fisttp addr16 ss xchg and cli test mov mov insl xlat in es cmpsl inc aaa and lea popf sarl ss mov lret sbb das fimull push mov and rcr rorl into cmp sub adc jmp xchg fcmovnu std cmp pusha lock call into sbb hlt jmp adc mov lahf sub lahf and cmp pop push into cmp packssdw mov iret dec call and push negb or push sub or (bad) xchg xor js xchg ret lods gs dec popa loope (bad) push adc std mov rcrl inc nop addr16 loopne jg test iret pop mov pop push out adc fs jo mov ficomp leave daa pushf fdivl add test or sub adc sub aad mov mov notb mov hlt repnz js add iret fnstenv mov xor dec mov sti nop lret cwtl leave (bad) cmp pop div dec adc and add mov divb cs imull dec pop adc jno adc mov insl shrl sub shl popf in push inc ret mov fdivl mov pop fsubr sbb sub sub dec mov fistpl or int3 push insb test pop rcll dec mov fstl inc push and xchg adc xor and stos sub js pop shrb test cmp ror mov stos std dec xor out rol inc mov adc dec bound rorb mov and aam scas push test and push repz fmull insb dec cli sbb push aam cmp sbb popf pop movsb enter daa fild jbe punpckhdq add imul xchg mov out ror xor adc mov mov into inc pop scas cmp dec sti push jo out roll repnz icebp inc push pushf pop add pop lods lcall lahf pop jae loopne (bad) cmp arpl (bad) stos test adc invd rcrl mov into nop or (bad) cmp pop mov sbb stos push rolb enter data16 pop cltd and pusha dec jnp dec int mov lret dec arpl hlt repz test sahf (bad) pop sub inc sbb imul mov push dec adc jns (bad) xor jb lds fdiv stos bound mov sub cmp mov xor pusha mov negb or ret das iret (bad) xlat inc pusha and mov jmp shrl test inc rep aam int mov test pop sub je push test mov sbb push xor sub imulb push cmp lret lds sahf imul scas lock add out cli xor push and repz popf lods fidivl cmp mov out aaa (bad) mov in cmp mov int3 lcall or and je push jae jns mov call mov dec jnp mov nop cs das addr16 pop jecxz adc dec or ret or or jns stos mov xlat bound insl mov movsb mov mov cli adc ljmp mov push outsl ret cmp cmp xchg adc stos repz icebp stos fcoml adc ret mov mov adc mov out rolb (bad) pusha mov (bad) rclb add xchg js sub es mov ds jae adc add mov subb loope xor or cs and or ja push rclb mov pop push push clc pop jp sub lods std mov out adc dec mov and cmp fbstp inc fadd xchg or shrb mov inc rcrb xchg pop leave hlt push sub jecxz imul xor ret testl cmpsl gs xor (bad) pop push xchg mov xchg sbb mov mov adc insb pop mov insl sub imul jo mov mov pop jne movsl add xchg add clc mov repz dec mov or mov xlat or sbb push add repnz in mov retw bound xchg bound lods sub inc rorb loopne mov loope inc jg push mov sub in push out mov shl stos sbb pop mov loopne xor xchg xchg push push dec daa int popa adc and sub addr16 ret into pop push pop mov ss mov repnz mov dec mov add mov add push es mov cmp push xchg mov dec out call jge repz cmp or or xchg mov push nop fs (bad) sbb sbb int mulb mov js shl aad push xor neg aas mov jge xor pop xor cmpsl (bad) push les loop jecxz daa pushf push test outsb aam adc sbb movsl ss fimull sub (bad) sbb cwtl fwait dec add daa lahf adc bound cmp (bad) jb movsl push loop lds sahf dec andl mov ja push sbb jg mov ret and xlat pop jle push cmc mov fnstcw hlt xchg rorl sbbl cmp loopne cmpb cwtl add loop in mov shll cmp das add inc andl clc mov (bad) sub dec push or mov and jecxz push and and push adc push mov mov inc cmp cltd xchg dec jno sbb mov jo xor dec insb fcmovne or sti insl (bad) xchg jecxz cmp sub push jb xchg loope jp xlat sbb adc call adc mov cltd pop and fdiv mov movsb paddq icebp add loop push pop adc push mov xor lods int jnp cli call mov andb dec or (bad) sbb pop insl (bad) mov je es leave dec adc lods jo jle xor rol jmp cltd push in and hlt vmovss dec push xchg xchg xchg outsl xor push mov aad jmp inc in xchg data16 ret in add addl lret aam push pushf add inc and push mov sbb addr16 sahf das outsb or xor call or pop stos scas pushf test lods bound mov sub dec (bad) mov fild push xor pop lcall dec bound jmp into sub les (bad) imul or sbb addr16 push xchg xchg lods cld jg xchg push adc arpl std aam popa dec inc xlat pop jmp push mov xor decl les nop fisubr aad fmul inc xchg sub mov or push push test mov sbb cwtl fs jae lods es dec addr16 dec stos not mov xchg push xchg nop push test pop or adc xor lahf inc dec ja sahf dec jbe xchg pop lret cld inc addr16 xlat in mov jmp inc shrb stos test lahf cld js dec pop dec test cltd fucompp jl and and jecxz pop lea outsb scas jmp das gs in jmp or push and pop es mov int3 mov lods jb movsb movsb sbb out notb fs cmp or inc mov xchg inc sbb lcall inc mov jl sbb mov aad dec xchg sub jbe popa dec fist pop jnp pop popa cli (bad) lock cld (bad) dec (bad) insb shrb cwtl xchg xor sbb out pop jns fcmovnbe testb dec daa aam fstps sbb jge rclb dec sti fsts ret dec outsl inc adc ss xchg inc cmpsl sbb dec (bad) and pop (bad) aad cli out (bad) mov mov dec iret ss jmp mov das mov ds enter cmp cwtl (bad) pop (bad) jnp xor mov addr16 fwait test jg iret sbb js mov sub mov ljmp imul into xchg insl cmp loope push push jge call rolb out mov lret es cmp repz ds dec mov fwait mov cmp insl lcall mov movsl jmp fisttpll insb std loop dec sbb mov arpl lock xadd (bad) dec adc and mov mov popa dec call testl lret loopne add inc push mov cmpsb adc in dec test xor shr outsl add sub jmp movb xchg mov inc gs out mov rolb outsb mov xor insb xchg notb flds movl mov dec fsubs (bad) jnp sbb out rolb faddl pusha or inc or sbb jbe cmp xchg push pop sub push push sub js adc push dec pop movb pushf mov jp xor push xchg lcall inc test gs add add xor lret divl icebp jne sub sbb sub cmp pushf or loopne mov lock das cld lods mov mov in repz (bad) mov frstor ror sbb mov mov mov lea ja mov das repnz in mov pop sub adcl mov sbb pop push cld xchg stc push ja,pn or (bad) push (bad) (bad) aam xchg inc xor call imul sbb inc xchg mov adc inc mov dec jge adc aad out or sahf in mov ljmp mov xor (bad) (bad) jno lgs dec dec dec xchg loop test xorl cwtl in push in push dec adc mov sbb ljmp sub loop inc jnp jns rcrl xchg push jge fistpll push jne insb xor push (bad) adc fidivrl push pop and xor std mov iret xchg mov ja out outsl in imul jge dec pop out jnp sub test scas insb or dec or jle jle push pop sahf xchg xchg int3 cld movsb jne cs push dec repz push test jmp lret mov jne add xor mov pop push (bad) fadd jle frstor mov cld inc push das icebp mov sahf insb jp mov ja (bad) pop into xchg adc cmp daa push loopne inc push stc pop jno scas loope mov mov lret mov dec jg jl jmp leave dec (bad) insl jecxz xchg jno cmc inc testl out add into in inc std insb cmp call icebp push or xchg dec iret ja imul sbb adc data16 fwait rcrb scas xchg mov xchg decl adc movsl jmp mov stos xchg aas sbb cltd outsb add scas jmp test mov dec lods dec lret fwait inc int3 ljmp int mov pop add scas movsl pop sub faddl (bad) iret outsl sbb mov stos inc in mov lods (bad) xchg dec xlat jbe mov outsl fisttpl gs push adc add sti pop xor inc or call mov pop sub outsb pop mov lods lahf andl std out stos add sub inc push push mov out sbbb data16 popf dec xor lea mov imul jmp outsl rcr jmp adc add jle jbe icebp ljmp test cli sbb pop or jmp leave test mov xlat pop add xchg mov push pop ret sahf cltd xor jns ja dec sti (bad) mov pop es repz mov jo xchg cmp fdivs and dec add cvtpi2ps push outsb dec jl xchg arpl lahf ret cs add iret xchg xchg fimul retw sbbl fadds imul xor dec jle sub xchg sub dec arpl jnp mov fcoml int3 in lret fist repnz orb imul int push add xlat mov push das mov shlb aam cmp or mov sbb outsb or ficoml outsb aaa pop or imul lods sub pop inc push push cmp mov aas test mov jl das or fwait (bad) pop out (bad) cmp daa icebp stos les scas mov sub ds cld rolb out lods (bad) cmp popa (bad) sub dec jecxz dec mov push push cmp pop imul fs out jne and fdivrs cmp add cli aaa dec mov insb or das (bad) xchg inc js lock das add rclb pop test idivl push sbb xchg les in dec and aas in flds push lea push xchg cs and or mov push jns movsl popa lahf popa adc mov or and sub inc ds inc (bad) or mov mov loope ss int3 mov iret pop xchg dec jmp mov jno pop mov push gs mov pop dec jns cwtl mov mov rcrb dec mov xor adc outsl les sahf sbb add sbb sub imul and add daa mov inc lea pop aaa adc adc test lret xor in xchg test pop out or aad mov loope fnstsw pop push fwait inc xchg scas dec inc sub mov fwait stos cmpsl push insl pop jl lahf xchg stos fcmovnb es cltd leave bound pop and push stos xor pushf imul insb dec dec mov mov insb test sub xor sbb sbb adc inc jle int3 fwait mov add cs mov adc cwtl adc je cli jp jp sub arpl jae aas pop insb dec inc pop (bad) in cmp rcr or push mov mov sarl mov lea hlt mov in push xchg insb push push inc pop pop pop lock fmuls imul dec mov mov pop lds inc incb mov ret and fdivrs pop mov jl inc sbb lahf xlat pop ljmp mov nop dec inc nop xor mov dec adc xor mov xchg mov std enter ja mov sbb push push std call push movsl mov hlt test cmp call pop testb inc in (bad) movsl rcrl out gs mov push jmp notb lret cmc int3 sub or adc inc pop lods adc mov pop loopne,pt test add ret xchg xor rcrb mov jne ret pop mov and add imul lods bound lods rorb mov mov pop inc dec inc xor fcom jecxz lret addl outsb test out movsb push mov cmp loopne aaa sub aad push adc lds (bad) mov cltd push xlat popf xlat out cli adc add inc mov push pop sahf push sbb push lcall fcmovb pop subl test pop jnp in iret add jmp ja (bad) adc jnp pop ret cmp stos pop xchg xchg (bad) sbb out mov in xor xchg fldz jmp imul or arpl scas (bad) mov cld (bad) sbb sbb push mov inc leave dec dec push inc xlat stc sbb mov cmpsb imul icebp mov fisttp xor sbb or mov xchg pop popa or in in fnstcw mov out pop pusha mov and add lcall lcall aaa mov xchg push push jmp sti dec mov pop sub hlt rcrl pop push pop mov jg inc jge mov sar sub and js test adc add adc aas sub cli sub mov shrb mov je aam hlt fildll xor adc sub mov das hlt les sbb fcoms mov leave add mov jnp mov push loopne stc xchg mov sub push enter xor jle icebp fwait mov fbstp pop mov sub mov dec or cli dec (bad) fadd mov xor and (bad) in ror outsl in ret in mov inc jmp and xchg outsl xchg popa cmpl jae enter lods xchg add xchg jns adc lcall ss push pop mov ret lcall icebp clc (bad) pop inc jmp xchg push mov popa push js mov jb insb in sbb sbb ret nop cmp inc dec dec inc lock xor cltd cmp call dec adc out jg xchg sub pop fcomps and and jl and cmovns push fidivrl shr pop scas in pop adc cmp daa fwait in sub lods out fcomip repz or cmp arpl pop mov inc inc addr16 adc nopl imul daa mov mull xor testl out xlat (bad) psllw loop scas push xor rcrb js notb hlt push xchg jmp and pop pop xchg setne jno push push push xor lret vmwrite mov pop inc ret cwtl xchg push add inc sti pusha out push and jg hlt xchg cmp sarl pop sub and mov lcall test dec adc lock sahf (bad) leave hlt and pop push fdivl decl xor repz push je push mov sbb lret pop bound push cwtl or and popa fst insb fnstsw sbb and xor repz adc xlat dec outsl and push es lea xchg xchg leave xor adc (bad) mov sub pop mov in (bad) fcoms jae dec ss pop xchg stc (bad) and roll cltd imul in loopne (bad) iret lock inc enter push push mov pop cmp mov add loopne loope xor dec lods pop xor xlat test push jne stc imul dec jp and pop mov lods aaa inc xor ja ret js mov movsb ret dec cli jmp pop lahf cld imul fcompl daa and mov dec jns pop mov xor mov cmp in cmp lock loope adc sahf push xchg inc in fdivl test adc (bad) xor xchg pop popf cmp aaa popf in push push fscale xchg sbb cmpl inc fiaddl dec cmp adc leave mov xor mov pop out scas pusha push sbb xchg adc call outsb cmpsl enter popf dec sbb sbbl fdivl xchg ja lahf cltd (bad) hlt xchg aad push loopne arpl mov adc jb cmp dec popa push push imul out xchg ljmp popa (bad) sub hlt fdivrp out fs and out jmp mov mov (bad) imul gs cmc cmpsb adc mov cmp (bad) decl mov gs aam je es out adc movsb fistpll mov dec xchg pop enter xchg sbbl sub and stos fimull adc out cmp hlt dec add jno into xorl jnp (bad) xchg pop lcall js add test pop add mov es xchg insb jnp add mov xor maxps mov xchg test lds andl dec adc aaa and push in pop lea dec (bad) or sbb out jg mov sbb les cld cmp leave xchg push out jae sbb inc hlt cs add add push in mov sub cmc jmp push imul in insl clc and pop sub adc push fmull or and mov outsl loop rcrl inc fwait cwtl mov push pop icebp or pop mov (bad) or ljmp popa mov and sub lcall or jb rol inc leave sub jecxz int add data16 leave jne jb ja pop cmp jbe and test daa ss loope mov pop inc bound jmp push lcall jno cmp jne fisttpl test push xrelease je and arpl sub das gs jmp repz xor popa sub imul popa add sbb (bad) (bad) and mov mov loopne push sti and add mov mov or je pop loope xchg mov sarb repnz imul push inc xchg xchg ja push push addr16 bnd cmpsb aam mov pop jb jno jmp add xor jbe,pn pop xchg lds adc adc enter fsubrp mov pop pop int out inc sub xor push or inc sbb nop push and fcompl stos int3 movsl jge xchg mov cmp adcl inc add sbb in cltd sbb mov std push sbb xchg push es aaa mov out fwait adc lret fdivrl jle sbb (bad) sti push inc sub xor and dec pop (bad) ret mov in mov mov xchg dec (bad) ds out decl xlat les das pop in lea sub ret mov jns adc leave push jle fsubrs fisubl fdivrl mov jbe inc cmp xchg loopne cmp jne inc jle outsb push popf cwtl lock jle stos inc and fdivrs dec dec or mov repnz push in xchg cmp pop cmp dec mov jae add mov daa jnp dec pusha dec out push imul sub inc fldln2 cmc mov scas push int ret int3 push pop jnp xor mov enter fxch inc in push mov int3 lret loope push insb lcall call ss out push cmp (bad) (bad) (bad) je mov and ds stc adc inc add loope sbb fcmovbe and cltd (bad) and mov push dec les (bad) ret or add rcrl jle addl loopne add or xchg dec mov leave int cwtl lock xchg leave or or lret out mov pop aam or jns pushl lods sbb jb xchg push (bad) hlt xchg sbb push jl int3 jo adc jnp cmp movd or fucomi jle stos push outsb lds ljmp cld sahf pop cld jecxz cs into xchg adc sbb push imul pop dec push stos test out hlt mov leave fldenv cmpsb pop fs mov popf shrb test cmp xor push adc stos adc mov push cmp int3 and sbb xchg xchg push popa shr adc imul push sarb adc bswap add loopne jmp rcrl jmp sub (bad) jb (bad) cmpsl cmp pop xchg inc ror push and and pushf mul xor mov jecxz jnp pop movsl lea popa jnp int and or pandn in (bad) dec and (bad) cmp std rclb jae xlat add jl inc icebp adc (bad) cmp int mov daa (bad) aam les sub xor cld xor int3 jp imul mov inc mov adc adc hlt pusha call lods divb ret inc fwait sbb push aad dec enter add test (bad) jecxz movsb push mov dec cmp push cmpsb sbb xchg (bad) cmpsl jle mov pop lock fbld ljmp call jno cmp sbb and outsl jbe out rorl fisubrl cs pop inc cmp (bad) xchg outsb pop sahf sti push test xor pop cmp loopne es mov clc data16 es hlt fsubp push lea adc dec das fucomip pop lock aad jp ljmp jno,pt mull ret fnsave push movsl fs repz test mov divb cmp push sbb push imul fmul add xor (bad) mov outsl rcl push mov mov imul ficompl inc push adc fsubl rcr lea in mov xchg xor out test lods jg adc repnz jnp mov sti pop pop push (bad) mov out cmc mov jbe xor ror negl ficompl stc sub jle xchg or es xor ret cmpsl movq pop dec lahf or fadds sbb cli dec cmp xchg mov aam inc (bad) fildll lahf push scas nop insl je pop xlat mov cmp jne aam sarb mov js icebp popf jge cmp stos cmp fdivrl dec push bound pop insl (bad) inc arpl dec daa jmp mov sub in jns orl cld jo inc sub sbb inc jp out xor test mov aad imul scas (bad) mov pusha outsb lret ja lock xor push mov addr16 leave call adc pushf shrb imul xchg cmpsl push in jmp jp cmovs out mov xor jecxz hlt xor (bad) xor pop xor sbb fsubrl mov or (bad) in mov inc dec inc call lods (bad) xor pusha flds jb pop int mov xchg mov sub lea out add imul loop adc push rep cwtl and shl das fist cmp sarl fisttp dec jb dec mov mov sahf xor xchg inc rclb sbb xor psraw mov ret jmp sbb xchg and inc cmp xchg mov gs insb xor cmpl push aaa adc sti fsub mov sbb pop hlt (bad) mov or std or mov test xchg ficom push sub pop ljmp xor mov mov pop dec pop ret outsl adc and ret adc (bad) in mov sub popf cmp in scas (bad) mul add pop and mov inc (bad) sbb stc inc sbb imul sbb jge push cmp adc or inc test jmp cmp mov cwtl sbb int3 mov sub xor sti ja out adc jae out cltd out and xor xchg inc cmp in pusha inc je fwait cmpsl jge lods pop add jno paddusb sub icebp test xor mov mov fisttp idivl or das and mov or and inc mov mov cmp addr16 into out fcmovnbe ja gs rclb rcr loop leave and add outsl repz test sub sarl adc jb or rcr cmp bound nop cld inc mov ss out or (bad) movsl adc rcrl pusha arpl nop leave aad outsl and cli mov pusha test mov jnp mov lea popf loop pop in add or insl je inc lods cli sbb jbe fnstcw inc imul cmp xchg dec push cmp loopne int sbb dec cmp sti subl sub test adc pop insl insl xorl cwtl adc nop pop data16 call scas repnz mov (bad) ret add push xchg cli push ret (bad) cmp dec daa orb stos dec imul out cmp aad stc and adc dec jne inc jmp inc roll je push out jno xchg cmp stos xor jbe inc jg aaa loopne and aas jmp pusha insb add mov pushf dec xor xor shll push push dec out fisttpl roll rep ds mov sahf stos das sbb pop mov jb mov (bad) loopne adc repz and adc mov and sbb ds out or jp iret jecxz xor sbb ja popf push lcall aad outsl jge inc push push and dec xor adc xchg aas orl outsl add daa addr16 mov cmp mov mov loope in cwtl icebp mov xchg adc cmp js test ljmp jecxz mov push add repz cmp mov outsl daa pop repz add fs cmp out sub cmp clc adc inc das inc xchg xor roll sbb dec (bad) bound int incb daa xlat jnp adc repnz fld call test adc or (bad) cmpsb xchg lods mov decl sbb test xchg sub in sub mov cmpsb sbb movsl aas aam dec sub push adc cmc aaa arpl (bad) pop xor iret dec jb push pushl jmp nop std inc fiadd cmp cmpsb xchg xor add xor aaa pop aam jno in pop xchg fistp ja add mov stos int3 xchg (bad) fild add mov mov push jmp pop mov out add pop lock idiv push jbe adc mov fnstcw insl lds jp in sbb push mov mov out pop sub dec inc inc sub sbb sub cltd popa pop xchg adc add nop mov std faddp or and mov (bad) movsl mov enter pop lcall mov lea dec cmp mul xlat insl and sub or dec or adc push jg shlb jp fwait pop insb mov imul cmp mov mov mov mov test sub mov adc lea add and or jne xor or in inc les fmuls sbb fs outsb outsl add lret xlat add jecxz xchg push (bad) out daa lret xor fwait cmc pop popa outsb das mov cwtl js and push and sub inc cwtl sub les test pusha sti jno xchg mov sbb fmuls fist (bad) push std inc push popf add sub cwtl stc jbe pop or cli ljmp pop inc or add iret add mov dec and pop push add sti mov lods fsubrs sti jg mov dec inc pop xor insl lods adc iret adc (bad) mov popa jl fisubr ja pop lcall dec xlat mov cmpb aaa pushf inc imul insl cmp movsb leave mov sub rorb dec popf pop lods (bad) jecxz sub in scas mov in xchg xchg (bad) les mov insl xchg pop xor pop push inc subb pop cmp (bad) cs jge shrb mov jne mov (bad) dec dec dec mov push cld sub pop out fs addr16 cmp push or add pop mov inc cld lret dec dec mov jae mov jle in cmp negb xor sub (bad) leave mov sbb leave xchg add call std (bad) cld xor fs push adc pushf jae mov mov pop (bad) adc add icebp ss outsl push ret cmp hlt popa or jbe paddusw sbb popa stc xor outsl push fnsave xchg scas test push adc lea sbb lahf jo xor xchg add add icebp repz mov cmpsl int sbb xchg add sbb xor (bad) popf test dec mov into fdivl push push call pop cwtl jno push pop gs hlt out mov cmpsl fstpl dec ds mov cmpsb std cmp cli loopne leave notl jle,pn jmp inc xchg mov daa and and pop sarl push aaa cmc daa (bad) out popf mull fistp mov cmp pop fs jno mov (bad) and jg cmp push scas mov icebp fwait sub outsb lods mov movsb std dec push jno pop cmpsl dec cmpsb adc aad fnsave adc push pop notl pop outsb les or sub call cmp push sbbl pop aam pop cmpsb mov mov cmpsl mov mov (bad) mov stos pop dec adc movsl test cmp jge sahf push and and ds cwtl mov ja int jae popf xor adc cmpsb dec mov pop sub cmpsl push popa cmp adc iret rorb test fs adc mov xlat adc rcll test inc ffree fisttp jae mov outsb nop popf (bad) cmp push stos out fiadd push insb add js rol mov sbb adc xor cs loope jg sbb dec enter xorl mov dec dec stos mov push in popa or jno mul test pusha sub adc lods inc sti fs stos push fs push dec mov add stos cmp dec dec cmpsb nop push jno xchg dec mov (bad) (bad) or adc mov sbb mov sub sahf cmp pop xchg mov (bad) iret mov in xchg xchg mov and cwtl test fs mov add aaa push xorb fcmovnb push xchg sbb (bad) andl or mov (bad) out xchg sub loop es cmp xchg jmp push clc and cmpsl mov sub sub pop add (bad) mov faddp sub lods iret frstor sbb pop out shll mov or adc and (bad) sub stos and cwtl into ret push enter cs hlt rcl dec mov int3 setae dec clc dec cmc dec test pop (bad) xchg (bad) stc jnp jmp shl push sbb cmpsb insb mov inc shr stc leave pop mov movsl add outsb mov ret outsl jle pop jae sahf iret sub push push test jae cmc xchg imul scas sbb xor add arpl repnz adc add adc and sbb and mov push adcl sub pop into cmpsl shrb push xchg cmp push push mov out adc imul and divl jae adc ret popl mov add std loopne push leave faddl popf mov push inc push or inc fcompl inc jnp in lahf push loope lock push or stc xor adc dec mov jo stos and xchg jmp mov mov fildl repz mov xchg xchg or jmp push jne push stos mov in in insb jne and fwait sahf xor pushf mov xchg les dec mov cmp add movsb mov mov push adc outsb cmp mov jmp (bad) mov sbb sub nop (bad) push mov jmp sahf pop xor add aad andl std dec out push xor inc sahf jns or (bad) and (bad) mov or out dec and int3 xlat into inc nop jp in (bad) sub int out or jl test pop pop dec or in pop movsl mov sti adc data16 lret push mov cltd lods lret xchg jecxz add mov xchg cmp add test sbb sub sbb sarl pop lcall mov or dec push cmpsb dec xor adc movsl movlps repnz (bad) popf rcll shlb adc lods pop dec mov into test lds fs dec fdivrp sbb into insb add movsb sbb aad inc jo cmp adc inc mov (bad) jo jnp and xor (bad) pop mov (bad) and (bad) or imul mov out stos dec adc push mov fmull cld or jg jbe push push addr16 lret add adc or loop loop push cs outsb pop or icebp push call mov xchg out (bad) (bad) or jnp icebp in dec mov je mov pop push fistpll fcompl call fs scas mov (bad) xor mov lcall push repz adc jnp fildl lret test mov xchg fistl xor dec pop sahf push adc bound pop mov xlat daa push pushf mov cmpsl aad sbb jnp pop arpl out insl pop fwait cmp test in mov ds mov dec jle fsubl ds (bad) (bad) in fistp push in mov mov xchg (bad) jo enter ja dec scas cltd popa and mov dec fmull sub fs and add cmp insb call dec mov cmovae mov push into jnp push pop ror push xchg mov call lods mov cmc (bad) and ficoml mov xor mov stos add adc in mov add inc push aaa nop adc movsb aad inc mov sbb or mov fs xor fisttp and xor push insb fwait push jb cmp rolb and mov lret rorb mov add cmp and daa add fcoms and dec (bad) cmp mov sbb aam cmp xor stc and adc add pushf popa adc in test aad jge mov and inc add ljmp iret and lahf popa add jne fnsave pop mov add jg (bad) mov int3 ss shrl cld xchg icebp jmp mov dec mov test jno insb arpl out rdmsr pop outsb decb imul mov push mov stos dec in pusha in movsl mov jmp pop gs xor (bad) das ljmp adc xchg dec fild sahf dec xor lds dec imul or lds imul adc pusha ja adc jle gs dec mov call xor jo push xchg cmp stc mov (bad) out inc movsl jmp in pop sub mov sbb dec xchg mov dec push test call cwtl dec dec stos push notb sub mov js sarl inc xchg mov adc loopne ss (bad) xor mov jge push int3 add lock jp pop loop icebp mov inc add popf clc or pop jecxz mov jle dec adc adc or in pusha cmp mov pushl inc or fstpt in movsb and push repz mov or mov mov xchg pop pop cmc popa xor loop test xor inc out sbb leave into les adc fcoms loope or jmp roll jle cmp decb cmp insl addl and mov push jmp test jo mov cld add cmpsl sbb shlb fnsave pop mov test inc mov pop lret cmp pop or sub ds sub cmpsb scas push pop scas adcl dec lea mov inc in movsb ss adc jbe mov cmc pop mov pop das sarb ficomp or mov arpl jnp stos pushf or mov and mov scas xchg push sbb out outsb mov loope int3 in mov xor mov (bad) mov push movsb stos (bad) sti inc pop movl xchg lcall mov shlb (bad) xchg fstp aaa ret cmp adc mov inc pop xchg fsts dec scas popf cmp pop xor xor lock jns pusha cmp (bad) test aas jmp cmp sub (bad) fisttpl frstor xor fist sete or test stc clc (bad) jne or xchg idiv cmc and loope test ret and sbb add mov jg je out mov scas daa pushf cmp jp je mov fwait inc int3 add int (bad) xor outsl loop (bad) pop shll sub ja mov in arpl fisttpll pop pop jmp divl sbb testb sbb dec cwtl and inc (bad) jbe test or xchg dec nop pop fmull aas and pop popf xor dec or jae pop dec cmp imul push push dec les nop int mov adc xor mov (bad) mov notb add insl pop push or pop pop sbb in addr16 repnz dec xchg rclb cmpsl jge fst mov arpl sbb pop loopne cmp jo mov sub leave xchg js sbb sub sti pop add adc mov fs popa pop aas cwtl loopne jecxz sbb mov jge add push pop or xor mov and fadds cmp clc dec aas fcoms js jle test scas add and add mov inc cs pop std fwait xchg and sub mov popf arpl (bad) xor mov mov sub stc jmp pop lea nop adc sub incl cmp adc outsb dec out inc push popf mov stc inc dec ret std ret adc mov mov ljmp mov push inc dec sbb dec lcall and fisub jnp jns or jmp ds and clc in (bad) lods mov sub push xchg jns out cwtl mov and xlat inc push ljmp adcb repnz inc in ror mov repnz push movsl adc mov shrl inc dec pusha leave push aam fsubrl pop sub (bad) cld jp jo sub mov fsts jmp add sub fsubrl addr16 out lods lret daa lock xor bound xlat sbb ret adc repnz dec inc in mov xchg push mov or ret es jg xchg push xchg sbb (bad) stos cmp test mov push les push cmpsl idivb jnp mov mov jecxz ljmp mov (bad) push cwtl mov cmpsl mov loope jecxz decl test jl add jae and sub (bad) mov and bound cmp or push dec clc mov fucomp sbb nop mov push cmp dec (bad) xchg loopne mov popa sub arpl aam out arpl aad push movsb lea hlt mov js cmp cmpsl ret jae mulb std push ret jne add adc push lock in lea push pop bound movsb fistp sub aaa and movsb pop dec add inc or sbb xchg (bad) add je xor push mov xor xchg push fwait cwtl push xor push jnp outsl adc pop inc frstor decl mov cmp mov dec shrb into aad repnz aas insb ret dec inc xchg jno dec inc lods outsb and push sub mov rcrb in outsb loopne xchg jns xor test lods data16 mov scas xor rol adcl adc mov and pop les cli movsb jecxz xor and sbb out mov pop fcomp aaa out add xor mov stc ret xor mov lcall sub cmpsb adc pop inc mov xchg adc stos clc ret or ret call add cmp sbb xchg mov scas xchg divl js or pop in sbb jns push in xchg mov cmc mov or fildl xor push xchg jae adc adc push push movsb xor sub ljmp push outsb das jl push lret cs pushf das cs loop adc pushf mov leave adc mov fwait imul push pop scas pop xlat ja xchg or adc jne ds pop cli rcrl push bound hlt roll adc mov js test imul mov fldl test jb xor and mov xchg xor push aam lea cmp pop leave shll or jno cmpb test mov leave push pop inc sbb jmp (bad) jb (bad) aad aas push gs ds ffreep add hlt or pop push xor loopne into stos scas in fisubr ficompl pop xor xlat cwtl cmp mov mov sub je out repnz sub sub xchg lret lea adc out xchg sub xor das (bad) xor cltd pop mov (bad) mov push mov sahf imul xor or xchg cmp push mov mov xchg or add mov daa xlat mov add movsl enter push (bad) loop cli in push mov ds sbb push pop test out adc stos mov cmp xchg jnp push xor sub scas lret sub rol mov aas loop lret outsl imul sahf into or decl sub xor icebp xchg fcompl fstpl mov (bad) in dec jmp sub fsub repz dec ret test clc mov cmp push cmp jns idivb xor fs mov (bad) jno xchg push jae int3 pop sub inc call cmc test cli jg lcall mov mov push mov xchg fdivrl lods cmpsb sbb stos lods (bad) xchg push and sbb or imul mov mov jb mov jne in mov mov xchg sub leave es mov add jne mov push push fcompl add sub scas xorb rol rcrb stos add inc fsubrs pop xadd mov xor (bad) cli mov pop sbb push mov ret sti xchg or (bad) mov xorl add stc dec mov adc cmp loope mov adc pop sub or stos (bad) cmpsl jb (bad) lahf fisttpl dec je scas into or dec cmp (bad) (bad) sub and fbstp movl cltd inc mov xchg cltd js cltd pop sbb les lods mov xchg pop jno stos rolb sub dec jle xchg mov je sti leave lods loope adc adc cltd aas mov push aam cli inc hlt repnz call mov mov cmpsl ficom lods xchg sub adc adc fcmovbe imul jp les cmc inc fist aas sbbl mov stos mov sub adc sbb mov shrb inc fiaddl out call push xchg dec pop rcll sbb and push cwtl xor cmp daa add lret insb std cmp out push push sbb xchg test mov jmp dec mov scas lds fs jbe aad cmp out xor popf pop imul mov repz and dec scas lahf mov in adcl inc mov and adc cmp leave decl mov inc dec cmp outsl add sub ljmp push cmp push notb jno xchg icebp xor cmc push mov shl pop (bad) stos pop xchg and sbb out not lcall sbb cltd stc test loopne clc lea xchg mov cmp cmp std push cmc xchg cmc sti cld and scas push lods push push (bad) mov lds sub out ret clc xlat dec sub xor rcll scas mov das mov sarb stc pop out or rcrb ret cmp lret addr16 adc movb (bad) fwait adc add inc adcl or loop xor dec movsb cs xchg movsb (bad) ds sub sbb cmp push movsb jecxz enter mov sub inc sbb (bad) out popf aam mov lods lock sbb std (bad) jb (bad) dec mov inc nop xor inc aaa ljmp push into test int ret adc outsb test or or xchg sbb mov daa dec fst ja and mov add arpl push push dec gs insb jge insb sahf push pusha mov sbbb sub test mov outsb nop dec push jg outsl popf dec mov jbe sbb and mov out jp fild lcall dec shrb cld aam mov in mov lods dec scas or xor mov mov out jmp adc gs (bad) mov int faddp ret outsb cmc mov cmpsl outsb dec fldt xchg inc fisubr mov and ss lock out mov mov into (bad) cmp sti push jno imul pop ds bound pop das out push add clc mov imul and test mov pop mov dec push ds sahf sbb pop test dec jo sbb imul cmp wrmsr mov icebp xchg inc cmpl dec sub out test movsl (bad) inc stos lahf orl nop push (bad) imul lods mov adc jae testb xchg sub ja mov out movsb lahf xchg sti loopne,pt sub mov xchg adc mov push dec and or arpl iret jb movsl dec xlat hlt aaa ljmp cmp (bad) mov xrelease mov adc fldenv adc pop inc dec lods pop dec mov xchg xor jns cs scas jae scas mov rolb les cmpsl ja cmp daa and scas pop stos hlt loope adc lods pop and je dec cmpsl mov xchg pop inc mov xchg adc (bad) jae inc pop mov cmpsl movsb jle (bad) (bad) lods sbb mov bound (bad) (bad) nop push xchg cmp cmpsl lods adc xchg or mov mov jmp fdivrs stc lret lcall mov sbbl aas lea (bad) cltd cli repz mov popf push push mov std jecxz stos lret mov shrl xchg push shr mov dec stc adc ret fmull arpl test pusha sbb push lret inc and sbb push dec fs and das arpl lret cli dec leave xor xchg aaa xchg fsts sub cmp jns cmp out cmc mov (bad) inc call (bad) hlt adc imull and fs ds mov dec lods mov (bad) mov icebp bound test cmp (bad) mov fnstenv or neg ja lods adc jmp cmpsb xchg ss add xorl dec data16 add and pushf mov jmp xor (bad) mov std std mov jno dec cmp inc arpl inc jbe arpl mov sbb jle push dec clc pop mov sub lods xchg lret bound sti and cmpsl call and lret ret add imul dec and or sti call scas fist dec rcrb jmp push and fisub in jae sub lods push fldlg2 insb fisttpll fs adc push pop mov fmull and hlt (bad) incb sbb jo dec fldl jmp sbb rol push mov pusha rcl and fwait adc adc push mov xlat shl popa mov push mov inc int3 push repz cltd arpl (bad) sub sbb fnstsw xor pop xchg aas push aas leave ja ds add mov cmc mov repnz sub adc pushf sahf and cmp gs inc sbb scas pushf cli cmp js sub sti or sbb ret sbb sub int enter xchg cltd pop mov cmpl call cmp xor aam mov jo jg insb xor pop or mov inc mov stos js sarl popf or mov push outsb inc (bad) in scas hlt ret leave lcall inc out scas dec sub and adc inc (bad) (bad) mov int iret (bad) adc mov dec aas fcmovb cmpsl pop mov in jno xchg insl mov ret cltd mov and mov jo repnz pop or pop pop lret in sub mov cmp js jne shrb adc lret jns jp mov pop out rorb jp mov xchg xchg lods xchg (bad) mov ljmp jbe inc add andl dec test insl sub jb xchg jecxz pusha call cmpsl das jae,pn (bad) icebp sahf loopne test cmpsb (bad) mov xlat je dec jb mov repz mov fldl jp dec adc sub inc add inc dec pop xchg xor lods mov mov lods stos iret push cmp daa jns jb pop jae out or daa (bad) je (bad) out sub mov movsl iret push psubsw pushf push fiadd loop or mov cmc xor or sarl fwait mov stc adc fisubr jecxz movsl rclb daa cmpsl inc fwait pop rcrl incl mov push pop movsl sbb loopne add dec mov fwait outsl add push and sbb rclb int mov add mov xor xchg inc lret adc or sub add int3 push (bad) sbb fnstsw incl fstp scas imul jle sbb popa pop imul decl ret pop ja jbe jno mov jo icebp dec movsl adc xchg sub sub cwtl jae dec jmp (bad) pop inc fcos mov (bad) pushf mov shlb into clc push xlat cltd dec test dec push lods cmp jo faddl insl repz lret or enter jg stos cwtl cmp repz setne jmp cmp inc imul movsl mov push push test xchg jle mov fs lea insl mov icebp jp int3 not add lahf les lds sti sub fildll fsubrl je fisubrl mov jecxz sub and xor xor pusha icebp movsb out in dec mov pusha ret gs enter popf sbb dec cmp jnp or clc (bad) adc sub add mov sbb xor das jns nop (bad) scas xlat ljmp mov and mov aaa mov jl inc out lea cwtl sbb pop push pop dec movsb push (bad) fdivrl test movsl std xor (bad) pop outsl or test jnp xor mov mov gs push out in jae dec (bad) xchg (bad) push push test mov lock mov fadds sub out rorl push sahf js ret lret (bad) sar int aam or shrb adcl jae scas aas cmc mov cmpsb loopne xchg pop pop mov jl sub out xchg adcb inc daa cwtl das sar push jb inc and inc sbb (bad) idivb xor stos ror mov mov bound cmp clc xchg mov jge pop mov aaa inc sbb out outsl dec and in repz mov pop ficoml xor ja pop fmuls jmp loop jg pop mov (bad) sarb cmpsl sub lea ss shll mov push addl jne dec or bswap mov push cmp pop pusha dec add dec mov xor ret ficomp sbb lock jp mov leave imul inc or (bad) loope cmp mov add call mov dec rorb lret push inc mov xor jecxz je les aaa pop dec imul es pop cwtl testb aam cwtl (bad) sbb sarb jb mov jae ret aam cmpl sahf test mov lods fs mov cmp rcrl and pop insb push fistp fwait push cmpsb pop cs push iret fsubr cmp lock jl pop insl call inc pop cmp add addl pop mov int sbb pop inc dec ret mov jo sub xchg sub ss orl sti outsl mov push xchg mov loopne bound jo xchg or push adc insl and lods (bad) lret jb imul xor lret cmpsb into mov pop adc mov cli sbb jno cld xchg jge rcl sub pushf pop sbb or cmpsl repnz lret pushf in xor cmpsl fwait shll clc repnz push int leave sub test rcrb sub mov repnz js out add in (bad) lock dec rclb mov ss pusha aaa lret and inc cltd fidivr add popa das and inc sbb ret movsl pop fwait out jmp jno scas mov (bad) push xchg lds adc stos test cltd jb xchg jg xor xor test mov add or bnd xchg mov mov (bad) into mov sahf shll mov mov mov mov movsl push cmp loop mov fidivrl sbb xor push dec mov ja (bad) fnstsw ss cmp xchg les add cld mov scas movsb scas sbb leave dec jmp jge cmp sbb sub out daa mov mov xchg popa mov mov push test (bad) cltd shlb jecxz stos icebp pop cli shr lret mov fldcw xchg rclb (bad) push clc out inc pop dec test jg fwait sub dec and mov sub outsl cmp and out insb nop subb xchg or cmpsb cmp inc pop or lret xchg pop mov pop test push mov lods mov jp imul lret fisttpl push aaa jbe sub adc jo ret add cwtl fstps faddl adc (bad) mov adc and cli pushf mov jns mov or push dec mov cwtl pop push push mov shrb xor sub sub xchg mov lcall or mov clc mov mov jns,pt stos sarl mov xchg mov add inc xor lret jae les (bad) pop aas inc orl push out push out test push and inc jnp ss sbb rcrb cmp js test lea mov xchg sbb xchg ret xchg adc mov lea mov inc pop sub pop negl pop rol sbb cmpsl mov mov mov sbb aaa pop mov pop inc and push mov dec out vmread xchg das (bad) rolb into rorl and pop movsl sub fcomps mov cwtl jecxz out inc sub cmp pop fdivrs into test out mov movsl call out test push std fwait scas dec jecxz pop fwait add out xchg stos adc sti mov outsb or jg int3 and jp or mov mov inc in fxam dec int jp cltd orl (bad) xchg inc sub push and push loope fxtract sub mov mov mov inc xchg mov dec adc add inc out inc stc addr16 xlat pxor cmp mov mov mov insl sbb pusha pushf imulb cwtl sub je fwait mov test lock (bad) pop mov fcmove lea push mov shr out push inc push mov pop jno jo ds ffree ret lahf inc adc xor test je xchg out std aaa or loop xchg test pop (bad) lods pop ret out cmpsl mov (bad) adc xchg inc add insb int3 aaa nop push les jbe jmp dec stos cwtl and mov push ljmp add sub lods mov adc jb sub push (bad) pop rcll xor sbb jl push in cmp dec inc fldl jmp je or (bad) stos aas xor imul inc stos and sbb imul xchg lods iret sbb (bad) lret cmp mov arpl test out inc outsb cmpsl ja and push mov sahf (bad) adc test in mov adc mov subl dec jmp adc loope xchg lods insb cmpsl std insl aaa pop mov insl (bad) cmpsl (bad) shlb je out arpl (bad) xchg cld pop jns int3 jmp lea pushf sub pop pushf cmp and fldenv mov push imul ss (bad) icebp fs push sub scas (bad) (bad) mov jne dec pushf je adc aaa cmp bound popa ljmp int inc xlat imul in add fwait mov pop pop add pop out xchg js pop sbb inc sarb sahf (bad) dec leave mov cmp xchg lds cld mov outsl push xchg sti negl mov int rcrb loope mov mov mov jg mov xor ret popf test addb jb mov sbb and pop aam lea clc je cmpxchg jne sub fdivrs xchg lahf in mov sub in xchg stos mov pop push push xchg movsb sti mov hlt aaa xchg imul outsb (bad) daa ljmp outsl sbb cld cltd xchg mov mov sbb cmp adc insl fnstsw dec xchg mov push fdiv clc (bad) xchg iret mov push mov enter cmp xor add push or outsl cmc sub jno xor fistpll and jl add add (bad) icebp xchg (bad) stos popa fs outsl icebp mov xchg lods inc xlat mov cwtl mov insl mov lret cmp mov das xchg pusha andl jle xchg xor loopne sti cwtl push call and xor inc cli icebp sub data16 dec cs shrb jns xor jnp cli mov pop sbb or xor ficompl mov jno int push int jb mov stos pop ret xor mov lahf out rclb xor dec mov cmp jmp jns clc cli jmp or cltd dec repz data16 popa leave pop outsl xchg aas enter ljmp sahf rorb shl or ss jmp push (bad) sbb adc mov mov pop (bad) mov in pop (bad) call scas xchg decb scas mov sub std (bad) aam sarl cmp std repz mov mov idivl mov push enter mov aam pusha push ljmp jne mov jle fldl in push adc mov insl mov dec scas enter icebp sbb fsts int3 pushf mov js in mov lock fstpl and xor (bad) sti enter cs xchg popf dec fdivs daa aam loopne aad repz push aas out or cltd lea mov stos jge and stos imulb adc and cli add mov repnz lock sub mov popf adc es fisttpl nop popa push xor and dec sub das mov inc popf int3 or cmpsb adc scas movsl aas and sbbb and mov iret outsl mov aam xchg push clc lret int3 in xchg push es push adc push pop aad test ret repnz outsb out inc cmpsb or mov push dec mov out push call mov cmp adc xchg hlt sbb bsf jge pop inc adc loopne lret stos movsl mov ljmp (bad) sub sub inc dec xchg shrb scas inc mov outsl fdivr dec clc push jg insb push imul jns daa and nop testb xchg loop or inc arpl clc pop ficompl mov fldcw adc icebp or dec stos jae (bad) fstl pop xchg lods inc nop push into stc cmp fiaddl leave rorl mov rorb in push xchg es add out push js paddusw dec push mov in out add subl shl jp add in sbb int3 mov leave xchg aad lods addr16 flds enter mov imull mov jnp leave in repz sub mov add in or add lcall sub loopne xchg fisttpl je int sahf and cwtl jne loop mov es aam lock mov cmpl rcrb pop jle dec dec arpl outsl addr16 lds xor movsl adc test cmp inc test xchg add stc imul loop push cld sub inc inc ja das mov lret dec push sub ds dec add dec xchg xchg sbb xor mov adc jl jno mov ficom inc lds jno sbb push sub cmp fisub loopne mov jecxz and je jb inc or into scas jnp repnz popa and mov adc adc int3 aas dec jne aad fidivrl lea (bad) inc not ljmp add outsl iret clc iret ficoml inc lds adc jmp mov pop xor jl mov mov sub add pop sbb jae sbb push aas stos sub cld pop pop ja xchg and push xor lret aaa je in addb push in mov (bad) push mov sti stc xchg subl (bad) push and cmp fcmovu push jne aam jle add rcrb (bad) dec les mov jmp xchg cmpsl loope (bad) sti sub pop scas mov int in add jno nop mov shrb sub inc mov lea std sub rorl jb loopne jno sub ds pop pop push and mov dec fistpl loop mov push push imul inc loopne je iret ret es add cmp lock lods mov ret or lret mov pusha leave or clc jg aam arpl push fsubl mov movsl xchg sub bound xchg sbb (bad) mov loop daa xchg stos jg cld push dec mov cmp out xor mov hlt cmp roll push mov movsl std pop sbb push (bad) divb inc inc or (bad) in aaa mov lea xchg mov adc (bad) (bad) rol loope sub movsl jmp xchg leave repz push pushf outsl push repz cmc or add loopne leave fldt jecxz das loop in (bad) lds loope js push dec int3 inc mov sub mov jne or in out mov sub repz cwtl xchg cmp fldt jbe stc mov sub push mov and adc dec testl addr16 mov or fucomi (bad) or inc aam daa sbb leave sbb (bad) or pop mov cmc mov push mov das mov add ljmp sub sbbl push fldcw dec imul lcall jns popa int3 jae div mov es mov mov jns sbb divb dec mov into std jmp sub int ret jo xor push lcall xor adc xchg mov sub nop pop xchg jge mov dec (bad) popa notb rcll outsl sti in jo xor outsb in out (bad) mov int movsb mov loope cmp jo test pop pop push or and mov outsb mov cli aaa cmpsb popa or push bound jp or out dec mov (bad) adc pop das xchg mov hlt insb or (bad) sub dec xor sbb xor iret xchg mov aam inc push jg (bad) popf xchg cmp push sub (bad) or mov ficom xor xor lods pop push mov int adc out (bad) dec int aad pop aad adc fdivrl adc sarb dec sarb ds clc shll sar rcll mov out rolb fbstp jne fdivrl scas lods cltd (bad) jnp mov test data16 (bad) std sub (bad) repz loop ss sbb ret or sbbb jns sub cmp (bad) in rcrl jb jne cld add cltd sar out push xchg mov or insb or leave aas inc in mov ds (bad) movsb or or dec xor insb push insb cmp mov cltd cmp int popf shrl rcl mov test jg xchg lods mov lea clc sbb jae add pop push pop adc out dec push mov jcxz add loopne cli insb xchg sub scas (bad) lods in push jns adc (bad) in insl xor repz decb cmp sbb add inc std aad mov sub dec mov push dec mov icebp xor xor loop shrb outsl lret xchg movsb or test add push mov ret (bad) in dec xor inc mov pop pop loopne xlat mov pop fimul test push popf adc jl stos inc mov out ficom mov inc aad mov pushf fild xlat mov ja clc inc push mov xchg mov mov inc xor dec lcall ret cmp or loop sbb add and mov xor push mov jns fwait (bad) pop adc dec mov mov fistp push sub mov div and jl ror dec inc mov xor push icebp out xlat lods or stos cld mov jnp jle test daa jle int push xor (bad) je hlt jnp stos pop push inc bound dec xchg (bad) mov xchg lahf xchg cvtdq2ps cld sub jns sub popf mov inc mov push stos int fldl dec pop mov pop xor xchg push mov lds mov fildl cmc cmp add clc lret inc xchg adcl or cmp jecxz in push mov js and call xor outsb jl (bad) jmp jmp xchg ret imul xor push ret int3 ss dec out fnstcw adc call push mov out lea and pop insb inc ds fistp cmp mov ret dec nopl loope push sahf mov cli cmp scas or stos pop mov add mov cltd inc cs shufps dec fistpl scas dec push adc dec sbb lock push outsb and icebp (bad) cmp add xchg mov push out sti jl pop ret cmp mov adc mov pop ret insb std sbb xchg divl aas cmp out mov aas dec aaa jecxz inc jmp repz pop xor add imul cli aas pop incb and mov lods mov mov aam test push andl pop add mov in push bound cmc xor jle sbb add pusha dec sar xchg xchg fcmovne adc (bad) mov xchg push gs ja in and push push mov jno inc negl fstl sbb fcompl lret stos or inc add stc mov mov clc sbb pop popa movsl sub rolb xchg push or je,pt sub cld push je cmp mov jnp jle mov scas push dec and fwait test rcll and das dec stos in rcl inc add or pop cld cmp ret shr rorb out push (bad) mov inc pop not ret lret xchg dec enter je ss mov mov jbe nop clc in sahf and lcall xor push lock mov dec xor push mov dec (bad) lret or aam jecxz push jecxz,pn mov cld jne (bad) scas push add into add enter dec cmp notb jge or sbb jle incb mov xor jge sub or ret add fisttpll iret mov test inc sub arpl mov and mov sahf daa roll icebp push cli push inc repnz js fidivrl hlt push cmp sub mov jg stos les push adc clc inc push fdivrl (bad) insl gs mov loop adc fldenv rorb ss mov cmpsl or imul push xchg push or cmp es push pop add orl jl imulb rorl xor pop bound std mov sub pop scas dec sbb call pop lods dec pop jns nop mov lea push stc adc ss and (bad) mov dec dec test rcrb repnz xor movsb (bad) add rcrl (bad) (bad) xor popa push fsub popa mov sbb call (bad) je and pushf xor nop popa repnz addb xchg mov sub shll mov xor mov mov lock pop push xchg dec xor and fildll sub aaa lods frstor les test (bad) mov movsb xchg jmp jp add repnz imul das fiaddl and jb xchg sbb imul (bad) dec (bad) push sbb mov xchg dec fmul in adc sarb cmc dec pop outsl movsb cmpsb xor test mov xor iret mov into mov sbb (bad) repz stos mov inc xchg ret popa imul sub es mov lret jno cld push jo pop je (bad) lea adc dec inc inc mov imul adc pop (bad) lcall ljmp frstor sti mov cmpsl inc cwtl add mov push inc adc sbb mov rol (bad) stos test push xlat inc xor lods xor mov push mov leave pushf lahf cmp push sub fcomps mov sbb faddl push mov ljmp jnp orl shlb fstl ss jg lahf add add inc push loopne sbb clc cmp arpl inc mov xor repnz ror movsl adc or add std call repnz sbb insb xor jno xchg ja xor paddb or cs xor test aas mov fiaddl inc outsl cmp idivl lahf in je in icebp mov cld sub push inc adc enter fisttp mov dec ljmp inc gs (bad) lds add (bad) pop xchg xchg adc pop aam push adc add out sarb fcmovnb push std pushf push xchg push ss dec outsb ljmp add mov arpl sub test or sti pop rcrb sbb mov mov mov jne adc out xor jb jb mov out ja imul adc sti jb mov clc push pushf jecxz pop ljmp ret icebp add push and adc xchg in lods jp jns ja out xchg pop dec jae or dec rcll inc adc jg cmp jmp je rclb in dec cmc cmp subb icebp fs and xchg adc pop mov push or loop arpl lods fwait cli testl loopne sbb mov add clc dec (bad) xorl repz or mov mov pop scas or stos pushf fisttpll fiaddl sub bnd push (bad) cld jp stos xchg icebp cld xchg xchg out loope fcoml push hlt inc xor ret mov out (bad) cltd dec insl push fmul and sti mov sub inc jmp sarl sub stc add icebp ja mov insb mov int js add mov aad and mov cmpsb sub pop adc das pop dec arpl fsubl xchg testb xor stos nop pushf out inc add jmp cmp int add in mov sub insb add pop movsl or jno bswap lds scas jge addl aad push and (bad) jle lock fsin int3 add hlt in mov adc and subb in bound xor mov loope pop cmpsb adc mov mov shrl icebp cmp aas out mov leave push fwait xchg pop imul push or adc out out jg jns push sub daa mov jae jne inc dec lahf jl,pn cmp idivb mov std fnstcw cltd sbb stos in les push out mov mov xor cmpsl repz cmpsb jo flds dec pushf push mov fisttp jmp enter aam or pop or daa pop movsb mov xchg add xchg pop aaa mov loop mov mov loopne fsubl test mov ds into iret ds jg mov addr16 xchg jns mov scas pop fst jno insb mov cmp xchg mov adc adc subl jl xchg jb test dec sub mov dec out and add and decb rorb daa aas cmp loopne xchg test pusha xchg insl ret mov dec pop mov outsl pusha cmp loopne push and sub ss inc jle mov cmp lea mov mov adc lea notb mov sbb imul pop mov jge pop add xor inc pop iret repnz out arpl sti das and jmp pop sbb sub and call icebp add pop push lds xor inc push and fmuls jno sub pop cld je mov inc and imul jnp rol jmp imul or push fisubr (bad) pushf jp adc fidivrl faddp aam lods jp xor mov jl,pn arpl jne dec mov sti sub dec add pop out inc (bad) lea (bad) sbb in dec mov (bad) push sub imul fild push (bad) jae push lea div jne jmp mov test fisubrl ss xchg test test (bad) sub loop mov outsb sbb es (bad) xlat sub dec imul leave mov mov (bad) fs xchg ljmp xor jo (bad) sub add adc pop or lret fwait add iret xchg mov mov and (bad) ret inc sahf cs push (bad) xchg xchg fs sub push inc mov cmpsb jle mov out inc push test pop jb cmpsl sub sub jo mov js inc mov push sbb (bad) faddp jbe sub (bad) xchg div out lds mov pop push pop fnstcw mov mov push sub inc or dec stc push cli out pushl test xor stos add mov inc adc dec push xor jb movlps mov sub test insb inc xor (bad) adc inc sbb push imul aaa out dec leave data16 cwtl jg out mov cmp cmp dec loopne and sub nop mov mov fistpll push pop scas imul jb dec xchg icebp (bad) jp dec fs and shll fisubl mov inc dec jno jns add enter out cmp push jnp and (bad) xor mov jle sub jl mov mov das cmpsl fstl pushf xorl incl mov xchg lods mull and (bad) lds cld sub lock rcrb xchg icebp mov mov lahf sbb sbb rolb or mov mov mov mov mov fs and inc push scas rcrb roll (bad) aas dec loop xor dec in sbb xchg andb pop jl inc or jns and orl aas mov test and test pop sbb outsl stc mov leavew mov icebp mov leave xchg mov push sub rcrl push outsl call xchg pop mov and adc cld cmpsl bound jbe pop xchg push aad push inc loop aad sbb jp dec sbb or pop fmull call xchg fldenv enter adc cmc cmpsl addr16 icebp sahf daa pop std arpl ss push adc lahf jbe push inc mov sub push lahf add mov stos push roll jnp push mov out ljmp das mov scas inc call (bad) push inc sar ret mov cmpsb sbb pushf enter popf pushf jns fcoml lahf jne sub scas loope adc fnsave or sti lds mov pop (bad) (bad) mov push mov add popf jge pusha mov jecxz add movsb push lds lds push jg adcl sub and adcb push mov fistl arpl xchg hlt insl clc js jecxz add jne and push adc daa mov xlat stos popa sub pusha inc sbb cwtl jmp push mov movsb xorl xchg mov es repz pop jnp dec aad xchg add lods rorb jo sbb pop clc sbb jno fadds lret shrl push loopne imul mov insb das mov loopne inc adc sar add mov or test js and mov mov ss mov lcall dec mov inc dec imul lea push jnp adc adc repnz jmp pop out jae inc cmp out icebp jmp jle xchg mov outsl xchg dec pusha les xor fdivr lret repz imul loopne fsubrl adc (bad) fst or mov arpl pop mov xchg sbb dec (bad) fmull pop jbe push mov sub pop mov rcrb dec cmp mov inc mov and or loope xor test out adc jecxz stos scas jge ss mov shl rcrl xchg push pop test insb or fiaddl divb or in sahf mov scas in cmp inc mov jge mov sti sub pop jecxz xor sbb outsb jle js pop clc mov out adc sbb iret pop cs fisubrl xchg mov jo rol xchg mov and mov (bad) std fnstenv lcall lret addr16 gs adc pop dec xor cli rorb push ss fimul stos cli movsb mov add aas and mov mov xchg cltd inc pop ljmp cli aaa push or push mov outsl popa out insl mov (bad) ss mov push cmpsl popa pop xchg mov repnz (bad) shll pushf mov insb xchg cmp lods shl jo adc and movsl or das mulb xchg xchg imul aas ficomp mov jg mov js or cmp stc pop dec and sar push mov sbb mov inc xor loope or cmpb lahf xchg les iret inc mov lcall jb cmp mov decl sbb int mov lods in dec cmp in mov sbb leave mov in divl insb pop adc push enter cmp (bad) inc push push cld in adc mov enter cmp test inc jo ds iret push cmp in xor mov fnop push inc fiaddl mov mov les xchg rclb popf xor fstpt inc or xchg call push cmc mov pop jne lods out das jmp dec mov arpl pop cmp nop mul mov jno imull pop mov xchg cmp cs add push ret push or and setno and adc adc lea cmp jo add test mov mov ret jecxz fwait or mov ljmp mov cmp sbb add inc cmp jge xchg inc cltd dec movsb ja int test ret xchg inc inc push cmp clc movsl mov xor mov push icebp test jmp sub push cld add cmpsb repz pop ror fldl icebp stc mov jno add iret cmpxchg sbb pop ret push adc dec add pop pop movsl lods andl in je xchg add fadds daa lahf add clc ret out mov movsl pinsrw sti xchg test mov lock and jmp push jnp addr16 mov push xor xchg jg (bad) repnz call add fstpt cmp js cwtl mull jbe xchg out bound or (bad) ficomp jns or cmp push leave pop daa sbb mov lret mov xlat stos mov (bad) xor xor imul sbb or lahf sahf jns mov arpl (bad) (bad) daa fild sbb clc movsl add fcom mov leave mov mov jno push ret stos cmpl inc (bad) int3 sub cs xor xchg mov jp xchg xor mov psrld pop jge lods xor sarl arpl cmc mov xlat pop xor jle xlat (bad) xchg repz aaa mov out cmp xor mov loope ret inc pop inc out xlat pop into incb addb fisubl adc bound lcall sarb scas xor stc add js mov lods dec rolb cmp imul pop fimull dec inc mov adc add outsl pop enter fxch (bad) xchg clc xor loop iret das sub stos adc aaa imul mov icebp mov cli ret adc push sti push push cmpsl cmc popf push cmpsl pop add lock mov iret les ret aas sbb std cwtl push mov cli mov mov mov les lcall loop int3 sbb push clc jg mov mov movsb inc push sbb (bad) in aas sbb inc scas mov scas fiadd int3 (bad) (bad) enter hlt frstor adcb enter movsb enter scas pop xchg jo xchg js cmp int3 mov arpl cmp and jecxz (bad) mov rcr cld fwait cmp dec sar sub cli fstps and scas sbb xor insl shrb mov rorb push (bad) xor sub stc pop mov outsl (bad) roll lahf fnsave ret mov adc push push cmc mov inc bound lcall repnz divl int fsts in bound jle jo sub lock inc and outsb add shrb ret inc and lret mov stos cld movsl in fldz mul std movl sub lea xchg cmc test push pop pushf cmp pop rcrl and addr16 push cwtl mov and xor in imul incb jge mov mov stos ret gs cmp adc icebp fistp stc xor mov jecxz into bound fdiv mov sub dec cli cli mov dec sub dec test sbbl pop ficompl push fdivl inc xchg lds xchg cmp aam test push scas das ret push inc mov pushw jbe jno mov in mov decl clc pop adc test in mov adc aad cwtl push lock push out and pop push cmpsl jne outsl xor pop (bad) sbb mov sbb xor sub aas xchg ljmp outsb shl pop ffreep repz es jecxz cmp cmc fstpt nop and fdivrs adc repnz pop cmpsb fnstcw test sbb in mov ret dec or shrl js (bad) cmp inc mov insl cmp mov cltd inc sbb jmp push (bad) jae rclb dec or mov push add jmp (bad) mov lods mov xlat cmpsb and xchg aaa push pop xlat sbb stos mov daa mov cmp repnz adc les cvtps2pd inc mov sahf sbb movsl ret jmp addr16 inc and adc adc cli add cmp push shl mov (bad) mov push xor in lods mov outsb sbb sub cmp (bad) sbb jb dec mov adc ffreep mov or inc movsl adc ja dec or push or lds cs loop bound pop push dec nop and loopne cld jns (bad) inc xchg mov jns repz cmp mov xor or sahf flds arpl lret repnz test call mov push cli adc push dec pop pop xlat jmp xchg movsl aad movsl xor mov ja in bound in jns and jbe movsb mov sarl mov sub int cs cli jl dec lods (bad) cld jecxz jne mov rclb pop mov icebp daa psrld sbb fdivrl dec imul lcall pushf mov pop mov out and insl push hlt nop in lea je in push jecxz cmp adc xchg sub incb inc test pop (bad) aas cwtl in inc jno sar rol inc add test push xchg lret test dec xchg and je xor in sti dec and hlt or pushw cmp pop mov out mov addr16 mov cmc mov aaa repnz sti xlat jecxz sub pop pop mov or (bad) lret iret stos inc stc or push mov aad jle adc mov (bad) xor subb lock imul rclb add mov mov push adc cmpsb popa ja mov add jae js or add add scas and cld in push icebp fisub cmp jno jg push push jb cli call rorb pop adc das and outsb (bad) lock mov sarl jne jns mov adc xor gs mov jp and dec and ficoml frstor fs inc xor into cmp cli ret scas iret jmp inc ss or pop lret out ss cmc es mov (bad) dec ja mov and mov inc ljmp (bad) and mov lds je or xor movsl orl (bad) xor jno sub pop jb pushf lock jmp sub or fwait scas fldt mov imul mov fdivl bound and loop and mov fistp shll pop shrl push and inc jnp push add stc jb rcr adc insl pop cs mov mov sbb sbb dec jmp rclb test rclb mov ljmp add dec rcrl adc pop adc ret cmp stos inc mov push sbb inc stos push xor dec in mov xor inc stc xchg pop xor mov imul push leave dec scas daa mov pop fldt push hlt mov fimull adc xor and inc push out scas jecxz fs (bad) or mov inc scas pop out push lock dec xchg sbb xor daa or pusha xchg test test (bad) push mov or cltd mov cmp mov (bad) (bad) mov mov inc mov cmp pusha es push xor or je sbb jmp cmc movsb sub sbb cmp sbb adc cmp mov jmp pusha inc sahf adcl sbbl xchg call mov jb,pt test jmp repnz mov inc lret sbb push sub add xor ds lea mov shll sbb es jae outsb adcb jo and mov fbstp xor cmc push fmull mov add sahf or cltd test cmp cmc sarl pop cmpsb inc or dec jle dec rol xlat sbb imull push mov bnd (bad) sbb jno div in adc in out scas or xor cld outsb sbb jle frstor pop int addr16 push jb fimul out leave leave pop (bad) repnz and and sub gs lods inc fs invd add add adc movsb or mov mov pop lcall cmp std shlb adc outsb pop push fldt movl out mov dec stos iret nop or ljmp adc neg xchg xor pop in jne jp,pt cmp js movsb ss ss jp or push or mov jbe jnp into add (bad) out push jb pushf mov and inc sti imul inc xor cmp icebp inc mov shrl std inc aad pop adc adc int3 add adc and and test mov xchg jne inc addr16 movhps sbb int or das sbb in push mov aas push out fwait mov adc mov adc mov loope fistpl out scas add and repnz enter sti (bad) xor inc imul dec mulb mov into ds bnd adc xchg sbb ficoml pushf loope loope loop addr16 push cs or adc xchg and pop pop push rolb lock cwtl pop test mov jle outsl jg mov (bad) popa and cmp js adc imul loopne mov daa cmp jge lret aad movsl xchg and xchg repz (bad) and mov cmp out mov push rol ja lcall (bad) adc xlat adc add rcll mov pop dec mov movsb sbbb sub out xor push cwtl push or xchg mov xor jg imul imul dec push sbbb ret test fsubrl push sub sub dec fcompl outsl leave into pusha jmp push jge sub sahf cmp cmpsl and inc int3 aas dec add lds sbb rcl or rcll ret enter out cmpl addr16 sub mov clc xlat and mov add out xchg mov das sti mov mov xchg cmp movsl out cmpsb mov dec insl cmp popa mov insb test leave inc mov loope (bad) (bad) icebp into dec in out leave (bad) jne leave arpl xor dec idivb sbb push cmp lock sbb inc and imull pop jle and sbb and outsb inc sub xchg jl push pop icebp jl ficompl xchg xchg adc mov mov cwtl pop jb pusha mov fwait cwtl jg insb leave pop daa adc adc xorl mov jl jg mov pop or push xor idivb push push dec fdivr and mov lock push mov mov inc das sbb femms lret inc jo xorl es sub xor fidiv push mov mov pop or or xchg pop bound clc adc mov mov sti stos mov inc mov lret jbe pop jae jo jl test pop mov jns outsb dec enter mov in or jmp mov (bad) lret dec out push push inc mov mov loopne push lahf (bad) test pop int popa push mov xor xchg push adc xor sbb jge out inc test fwait mov add pusha fidiv mov sbb stos sub add jle ret (bad) fcomps push push push push push push pop fcmovb int stos hlt cmpsl daa add sti bound jno out dec dec mov pop jnp pop dec in cs shrb jecxz mov lods push mov mov add incl xlat mov repz jecxz ret ljmp ljmp add test pop inc inc inc inc xchg popf or or jae lea pop pushl pop dec out pop fistl jbe ss sub sbb out lea fcoms jbe push pop adc adc ret aas test mov sbb push daa pop mov sbb cmc (bad) (bad) adc jns inc cwtl in ret in or xchg scas adc push xchg sahf sbb scas adc xchg repnz rorl jo xor adc sbb pop movsl mov fcoms sbb sbb mov (bad) or cmc jge cmp xchg and adc jbe lds jge sbb ds dec stos fiadd (bad) mov aam fisubrl popl pop or aaa xor cmc and testl sbb sub loop mov xor jns jp mov rcrl mov in into and dec arpl lcall sub dec pop in pop addr16 mov sahf insl mov int mov jl inc dec jl popa inc hlt (bad) popf and loopne fdivp addl push xchg sub aaa (bad) fstpl cmpsb or jg call dec xchg push mov jl ljmp mov mov and dec scas xchg (bad) xor mov orl leave pop jge loopne add cli and mov mov (bad) adc pop lret dec je inc and js push mov xchg (bad) aad cmp test aad xchg mov ljmp jge dec lcall add dec cmpsl push and adc sahf insb das lcall jbe mov subl dec stos sti mov inc push jge ss lea fwait bound fwait inc mov (bad) repnz aas (bad) add std xlat lods int push mov and inc pop (bad) jge and loop adc fwait cmp cmp lock xchg lea mov mov lods dec mov pop aad ss pusha mov cltd dec bound pop sbb ficoml pop inc push aad jecxz fcoml imul mov jecxz jmp mov add cmpsb out add push mov gs mov jo mov and inc int inc pop mov (bad) lahf out iret cmp jb jmp push iret cs in mov xorl mov pop insl pop ja xchg push popf call inc cmc (bad) mov gs jb and xor mov (bad) ds cli scas stos xchg in xchg js jl cmp inc jns adc inc cmpsb mov mov xorl or lret (bad) hlt (bad) mov cs aas repz pxor into sbb mov jg ret pop cmpsl in adc xor jmp iret mov test and jecxz std lret sbb fdivl fcoms (bad) fidivr push lret test (bad) mov shrb sub jl lods or hlt mov inc push add pop cmp cmp mov mov std dec push test pop daa xor mov repnz adc movsb or lock mov cmc aas push xchg es insb xor xor push sbb xor adc or (bad) leave arpl jmp subl dec mov xor test (bad) pop cli inc fwait cli aad ja (bad) pop ja add sahf mov pushf jl push (bad) add lret (bad) gs std add loopne int mov pusha movsl clc and jle sbb push xchg test (bad) fwait leave lret mov (bad) lret fisttp mov add sub jb or ljmp das add jno xchg pop aas push cli shll xor fstps cmpl or mov int3 pusha push inc pop sti fdivrp or (bad) jg add and inc mov xchg arpl cltd int fsubrp sbb mov pop dec aaa xorl dec mov (bad) repz jnp jbe out dec ficom jecxz xchg xorb sub push mov push and lret (bad) divl inc nop pop xchg outsb xchg push adcl aam mov or pop lahf or xor xor cld xchg push es enter ljmp cs or and cmpsb sbb sub fnstsw fldt sbb stos jb aam xor cmp aas dec nop outsl jl sbb pop cli aad inc push leave gs ss inc push adc fcmove dec and jp inc cltd sub mov (bad) (bad) pop add inc sarl nop mov sbb lea or imul jle cmpsw scas cmc fstps adc std gs js push iret rcll push out nopl push dec lahf int sahf nop add stc cli sahf fld mov push leave sub pop jg daa (bad) fwait add xchg dec (bad) pusha mov pop arpl jae rol neg push (bad) pop (bad) xchg mov in jne mov popa adc dec cs (bad) jae das loop xchg dec mov ljmp loop push mov in dec sbb fs in dec cmp aam add lea out add imul rcrb or (bad) icebp or out cmpsl inc mov push sub xchg pop xchg call or jg sbb fwait push pop testl (bad) adc pop pop aam inc inc or daa cwtl dec inc daa mov mov ja dec outsl in sub arpl out repnz jnp fs mov dec mov push mov mov stos aas mov aam dec pop adcl mov rclb loopne adc mov in or adc scas inc mov inc xchg test sub daa dec jnp repz mov xlat mov aam test nop inc movsb push loop repnz push incb lcall mov (bad) cmp xchg jmp jae mov dec cwtl lods popa sbb mov fs jp sub mov sub js fmul inc pop sbb scas movsb mov pop and push (bad) out adc out ret cli in push test xor push pop mov movsl adc sub xchg xlat sbb push mov or or movsb idivl fldcw sahf insb cmp mov mov rcl mov sub mov addl mov int3 insb into push push mov dec fs xchg xor or fldcw mov fldcw (bad) lret jmp xchg xchg mov cmpb cwtl adc imul adc jae dec and mov cmp sbb push fldt push inc addr16 in rcrw mov cwtl jb inc pop dec es lds imul pop inc xchg gs jb insl loop jb mov jae lock push jbe push fs stos xor push pop push sub (bad) fcmovnu or rolb xchg enter hlt mov xor fyl2x mov or iret aam sub push mov mov xchg stos mov stos jmp push xor dec dec add lret mov mov mov repz out pop or inc and pop pop outsl dec inc test lds mov ja hlt lods jns (bad) (bad) sub fldt jnp test cmpsl scas push mov and in in lds and sahf mull stc insb nop arpl in mov aam in movsl mov int cmp popf pop add jns aas bnd cmpsb or and pop fwait or out sub mov and push fcomps pop inc fwait adc lahf das fucomi mov adc pop jmp int imul test xchg dec and cmp pop popa popf (bad) enter jl test lahf sete pop imul xor je ficom movb aaa dec mov mov call enter in adc imul and les in xlat sub mov std in pop aad xor lods xor je pushf inc ljmp fisubl xchg daa stos gs dec daa aas inc xor fisubr dec mov nop mov dec aas loopne pop pop stos lcall mov imul push fldenv roll addr16 insb sbb pop enter sbbb push inc mov mov fs sbbb xchg push mov daa enter sub rol adc call pop inc clc cmp push repz loopne xor outsl jns mov add stos inc jbe add jl popa enter pop (bad) xor pop sti int3 mov xor jecxz aam jmp xor xor xor stc sti or sub shr and xchg push or in lret fcmovnb subl rcrl dec bound mov stos test sarb or add out jbe adc out popa dec rclb loope push das push ss mov sub fisttpl hlt cmpsl adc (bad) jae cmp jge pop ljmp das xchg lcall aaa xchg ficomp sti addl mov pop sub mov add movsl inc jbe (bad) addr16 xchg imul sahf jb ret jp adc lods push cwtl js out xchg jmp sarb lcall mov (bad) test (bad) mov flds int3 push aad popa enter clc jne inc pusha mov lcall add jp iret jno push jns in and mov (bad) into fsubr popf mov pop inc push jp test jp ljmp leave notb jl mov xchg lods dec std incl adcl cli push xor or mov sbb and dec inc int3 mov pushf dec fildl sti jbe fisttpl out jb xor adc add adc mov sub mov popa adc test test fxtract icebp xor mov sub in pop and or cmp mov ss (bad) push shr cmc leave testb jl pusha inc xchg pushf sbb or repz push (bad) (bad) lock jns jp inc scas cmp and mov sti pop arpl icebp sti mov or pop (bad) repz or in mov (bad) sbb push stos jno adcb js and ss rorb xor mov jl out sub mov (bad) cltd sbb pop mov mov mov loopne xor xchg sbb cmpsb inc aad fldl outsl in jg pop jmp add imul mov (bad) push (bad) push push dec jecxz mov sahf mov sub jno mov lret cmpsb outsl mov add popa shr jne dec fidivrl push mov jle shlb loopne out and pop (bad) push dec sbb adc aas and inc sbb lret out ret xchg inc mov in insl cltd jae jg dec call icebp mov and aas adc inc mov loop xor pop ja outsl daa sbb mov dec sbb (bad) jne mov lret mov jo outsb sub and mov push pop mov (bad) lds ja (bad) lret (bad) dec push xchg add fsts nop adc insb popf aaa inc mov pop cmp mov rcrb dec test cmpxchg mov stos pop push xchg in shrl gs push xchg xchg ret sbb jno mov ja cwtl pusha cmp pop into adc mov and pop or icebp xor pop (bad) add xchg mov cmp mov or nop std popa repnz mov rcrl xlat xor add mov mov lret jmp cmp insb sahf pop mov inc gs cmp mov shrl ret push mov (bad) pop lret in jo je cwtl fs (bad) out repz daa shrl (bad) bound xor mov xsave pusha jb dec (bad) aaa sbb arpl cs sub push inc push sub mov adc jle inc (bad) sarb imul sbb ficompl adc (bad) cld je cwtl sbb cmpsb loope lods rol les repnz mov test mov imul fildl xor cmp mov cmp pop cwtl insb mov cltd ret mov scas cwtl sbb mov (bad) jns outsl or mov lea cmp sahf xor adc fdivl xlat hlt cltd mov hlt fldt sub in adc pop movsl cmpsl aas gs push in call and dec fsubrl movsl dec mov sbb dec (bad) lahf dec mov mov sbb xchg outsl dec popa xor iret adc aad fstpl fcomps addr16 icebp dec pushf adc loope in shrb fs mov ljmp or push enter xchg (bad) inc popa cmp mov dec sbb mov jmp adc stos lock mov insb push or sub insb or inc (bad) sub cmp lret (bad) push push mov jae push mov fcom loope dec std test std popf push cmpsb cmc jmp jae add push ljmp movsb dec xlat call ss in xor mov (bad) idivl imul pop divl (bad) dec pop cmp pop xchg enter adc mov adc loope lock adc gs in or mov (bad) rol lds ret cmp inc inc insb jmp (bad) hlt xor push sbb mov lods fdivl out pop pop or mov mov fistpll mov cmp adc push adc mov xchg ljmp loop mov dec data16 inc fsubrs add gs loopne pop mov outsb pop mov dec and and (bad) aam loope mov xchg aam jno adcl roll add bound fdivrl insl push jg sub in xchg cmp adc in pop cbtw sub insb cmpsb sbb pop or push xchg and push bnd mov sbb jmp sub ds push jnp addr16 ds jle sub (bad) jno arpl xchg add ljmp push test add add and jb ss jno mov outsb sbb cmp cmp jge mov (bad) daa cltd cmp inc ds pop insb icebp dec push jo incl xchg and ds scas mov cld adc dec lods pop aas sbb rcrl xchg pop lods ja hlt in stc cmp dec add pop test or pop out scas dec mov call cmp scas sahf and in and push cli pop pop cs int xor pop and xchg in pop mov aad (bad) cld mov loope in sbb (bad) aam fwait rcrb int aam lods pop loop call sarl sbb in (bad) pop rolb sbb xchg cli jae adc or xchg scas add sbb ds data16 loope pop adc sbb nop js inc loopne xor add cmp (bad) push dec sub dec cmp inc push (bad) xlat cld or cmp (bad) jl hlt notl xlat xor and pop or dec xlat jae push xor fisubrl je or insb rcrl push inc pop test insl popl enter push neg das sbb jno data16 hlt (bad) cmc xor inc sbb dec lret (bad) jmp outsb and mov and fwait mov icebp ret insl cmp sub pop adc add and scas add imul dec call inc inc xor inc stos sub in pop jl or mov mov clc mov ljmp fmuls daa push xchg or push mov sub dec call es push mov lret test ret and cwtl sti aas inc test orl cli xor or mov movsl into pop addr16 mov (bad) fcoml pop jbe sar mov jno sbb pop inc mov mov faddl add sub mov push ret adc divb pusha mov pop dec aaa daa jo xchg cmpsb push insl jmp jae mov mov jb mov addr16 stos or dec or push (bad) int3 arpl pop js jbe lods push cltd enter lea test jbe mov mov fistp aaa add jge mov add adc xchg arpl adc lds lret loope inc jle pop das xor (bad) hlt stos lea bound pop xor jge mov inc shld test enter xchg push push inc pop inc jge mov loop clc popf pop or pop inc cmpsl clc pop lock mov in mov inc jecxz cmp and test cmc (bad) insb push int dec lea sub push arpl inc mov imul mov (bad) xchg cltd sub sub cmpsl ja sbb les sahf sub mov adc notl cmpsb in jnp xor popf xor jg lds cs xor adc aad in outsl lcall adc hlt dec mov or shrb ror insb add ja mov cmc imul aam xchg inc fbstp enter in pop inc dec xchg or cltd cs pop and fldt test dec movsb les adc xlat cltd jg push repz and ja data16 dec inc cmp fstl mov pop mov lret orl movsl sub inc sbb jge (bad) dec and xchg addr16 popa test movsl stos cmc sub popa dec xchg and and pop (bad) rorb sbb mov dec lods jmp sub jae xor sarl fadds push lret jmp in rclb call add insl push dec nop pop adc js push pop mov outsb pusha fbstp loop loopne xchg imul dec mov sub xchg (bad) xchg gs sub xor pop xor push fwait adc mov out call in ljmp pop sbbl mov dec rorl add (bad) stc sahf mov cmp fdiv adc ret ja push enter pop scas adc xchg pop pop sarb cmp (bad) mov mov nop mov push rclb mov out add pop inc sub cmpsl xchg pushl shll lahf or fwait cwtd or lds (bad) ss mov mov scas jnp enter pop push jl or lret cwtl in cs sbb xchg dec mov outsb xchg daa mov cmc inc or fiaddl lods lock sar or repz xchg cmp dec (bad) mov stc std pop pop xor pushf (bad) (bad) movsl cmp pop mov pop mov out das pushw loopne xchg scas aad pop and mov loop jl cmp lds jge adc (bad) push popf in popa mov cwtl xchg inc sub adc dec jne (bad) dec mov mov sub insb sbb test aam cmp dec icebp xor (bad) into ds addr16 xchg mov incl dec push movsl (bad) xor aaa sahf out int (bad) into cmp and ss fsts (bad) mov sub in or adc cmp push sbb (bad) inc adc sbb adc es jmp sbb jle xchg loopne mov iret ror cli ds out lahf in addr16 xchg pop bound inc and pop lea roll mov adc clc cmp les xor sub mov xchg push jnp lahf xor (bad) dec idivl bound jp xchg (bad) mov bound daa jmp aaa mov cmp cmp cld loopne inc fistpll daa push mov out dec or cmp pop add ficoml nop (bad) in xor push push test lods adcl das outsl lock or lock mov les cli enter pop ret dec add stc mov lea mov xor test aas xor sub mov cmpsl lret out notl leavew movsl push loop loopne pop cmp cwtl pusha pop sbb clc nop mov mov dec frstor cmpsl xor fistl (bad) scas out fs lahf mov xchg xchg cmp mov in sbb clc das dec sahf aam data16 rorl xlat xchg xor add dec or mov sub push adc cld add lods int3 clc mov enter jnp mov xor test mov outsb or fisubr mov in les sub or stos sbb lods int3 loop dec pop stos testb or jo pop sub push adc lock add lret pop xor xlat and mov cmpsb loope xor lea xor cmc or shrb fsubp cmpsl idivb lret xor fs lcall xchg cmp inc or mov xlat inc pop xlat push mov dec aaa adc xchg divl sbb aas mov arpl push rolb insb ja cmpsl mov xor int subl cmp repz pop std in mov dec aad jecxz add mov cmp jbe jmp aam mov jmp xchg sahf or xchg fdivrl xchg inc loopne repnz push out test movsb movsb jle adc or dec (bad) jo int outsl cwtl push jecxz jp das test jmp je pop pop jnp and or enter cwtl mov mov dec popf insl sbb push sbb cmp (bad) lahf ret pushf xor das xchg (bad) mov outsb adc ret pop cltd in add std popa es sbb adc out push shr outsb into sbb push loope sub loop cli in test pop cmpsb jmp lea pop sbb loope std dec ffreep nop sbb sub adc xlat clc ja inc fild xchg sti push dec icebp aas in outsb xor out sti pop enter push mov jns or cmpsl nop outsl aad lea enter shlb lock push push mov aad fs cmpsb pop pop test jp insb lock push int3 daa ja adc (bad) jecxz testl jne sbb lods pop test or fdivs xchg cmp dec mov fdivrs leave inc mov mov pop sub adc loopne aam cmpsl mov int ss cs xor jmp fildl cmp movsl jae fmuls fst inc cmp mov aad aad pop insl mov in dec das pop pop push pop sti in add pop adc sub daa mov sub dec rcrl lea add gs test sbb nop push insl popa jl fdivrl sbb push rcrb mov out or add xor loope iret (bad) or negl fidivr rcrb cltd push or jl cmc cmp lods out lods push test pop cld outsl pop fisubr leave aam mov jp pop sti imul iret dec (bad) scas xchg fdivrl (bad) pop inc shrb test insb (bad) inc mov test jg xlat mov (bad) mov das fimull mov (bad) iret mov push aad sbb roll push adc je insb push in loopne leave lret (bad) out push jnp rorb out xor stos icebp xchg pop push or sbb sbb bound scas cmpsb xchg add push cwtl (bad) xor inc test cmp xlat stc pop jp pop testb mov mov sbbl lods stos sbb ljmp push lods pop fsubrs (bad) or mov mov mov ss sbb in mov je rcr out add (bad) lods fldln2 fs jnp (bad) mov adc cmp subl or adc mov cld mov (bad) bound mov (bad) in fmuls pushf fisubrl fnstcw fdiv push inc out pop les jecxz or mov cmp aam pop nop into jb scas jl movl sub sub push jmp ljmp int lret fs call mov jecxz popa xor sbb ret lahf mov mov data16 test xchg pushf in enter mov out lret out fnsave js int3 nop or push mov iret cmpl inc (bad) mov aas mov xor pop sbb jb daa test pop dec (bad) fdivrl jbe sub mov dec jmp popa mov xchg bound leave stos lret jbe jbe leave jb imul shrl lret insl add jo es jl out xchg pop les jmp psllw jno pushf (bad) xchg add mov out outsl sar add adc scas dec pop test test xchg insb mov into cmpsb mov pop mov es push pop lds push test mov mov cltd lret mov inc movsb xchg mov fwait push test ret cmp rolb xchg out and mov sbb dec mov movsb xchg sahf mov shr das push and lcall std and fldt inc xchg add mov or xchg divl jmp pop mov in aas xlat push (bad) movsl dec jg sbb outsb jle (bad) dec push xchg outsb jecxz into stc popf adc inc dec cld mov fimul mov pop idiv call adc xor mov cmpsb shr or cmpl addr16 hlt cmp xchg cmp pop cmpsl (bad) xchg imul addl repnz push sub pusha mov movl dec or aaa push test repz in mov add mov dec in rcr sbb sub ret jnp sahf addr16 ss aas ljmp mov mov lods sub dec push fwait ret (bad) ret les stos cmp sub cmp lret push or cmp repz fisub out xchg mov pop outsl insl es js stos sub jecxz imul sub adc aad es push lods daa daa cld test cmp std pop mov push (bad) aad bound sysret nop int lret cli push stos scas xor add notb (bad) adc pop xor aaa and lds data16 movsl jmp movsb cmpsb (bad) ja clc adc testb mov dec fidivr mov test in test add adc mov push ret clc and adc add inc pop pop or inc inc add (bad) pop shll lods add mov xchg lods ljmp rcr repz icebp loope out in inc jnp fidivrl mov inc sbb int push cli hlt xchg push xor sbb (bad) adc stos xor xchg inc out data16 cmc push ja clc push jp fstl (bad) mov add cmpsb and js add mov jo int pop test push jecxz mov jnp and inc sub pop cmp inc ljmp sub push jae pop xchg xlat idivb std sti ret out jns popa push mov ja mov mov add daa das lods cmp ljmp mov enter adc das xchg mov (bad) outsb dec xchg loope cltd jnp sub leave (bad) mov cmpsl stos in mov ljmp pop pop fld pop lods adc push aaa setns mov mov in mov vucomiss rclb std loopne jnp mov aaa popa jnp insl int3 pushf (bad) sbb cmp ja bound cmpsl adc jle mov lods adc sub xor shlb popf pop ds inc icebp fcomip xlat nop pop mov mov pop mov push sbb pop or and lahf push divl insl inc fiadd (bad) mov sahf xchg xor mov jecxz adc jge sub aas and mov xor xchg jl sti daa pop xchg mulb movsl lds bound mov insb loop or dec or nop movsb ret repnz decb adc pop test pop movsb pop pushf mov int3 pop inc das in inc xchg dec dec mov jb xorl fdivrl adc push int dec jl nop shrl movsl inc xchg mov fisttpl inc or push pushf je pop mov push mov sub in rorl shlb cmp sub int fstp sub (bad) fnstenv dec mov lahf (bad) aas mov test lea fdivl mov int pop jbe push push add in inc loop or fs test leave outsl in lock xchg bound jecxz imul mov push rorb mov xorl out pop mov jne leave mov aad fs out scas xchg adc mov rcrb add cmp jnp push mov insl xlat gs xchg pop pusha add sub adc dec xchg sub mov jb sub pop cmp icebp pusha xchg js push insb jns pop xchg out jp cmp mov (bad) aam pop outsl sub fsubrl sbb imul push loope jae sub les lds jno icebp pop and pop cmp in inc fcoml call adc push hlt pmaxsw add mov in mov icebp mov es outsl mov in pop mov mov aam add imul mov hlt pop inc sbb stos jmp dec sbb xchg mov pop inc rclb std mov or gs inc loopne inc push cmp call xchg push pop adc cmpsl sbb repnz mov push fwait arpl add xchg hlt jmp movsb jb mov lahf jb xchg dec add fdivl sbb adc push sub mov fisub cmpsb push mov cwtl mov repz pop mov sbb jns mov jae push out cld mov jae mov (bad) mov push pop inc dec mov (bad) clc in andps int3 mov outsl mov mov in mov (bad) pushf mov dec adc lcall jle in mov cmp push mov push and sbb iret es out jp inc push test and aaa mov fcomp scas push imul imull push add fbstp sbb popa push cld rcrb dec sub das loope cmpsl cmp jno xchg popa lea rcll cwtl inc inc call xchg jmp fwait cmp ljmp push in xchg push int3 add push lds cmp ret inc push dec insb mov movsb in lret movsl fcoms mov mov cld dec mov adc movsl xchg (bad) cli inc add cmpsl add sahf ret lods cli xor mov outsb fcomi scas cmp mov mov and test es movsl dec sbb gs popa sub icebp aam mov enter push pop fdivp sbb xchg lcall mov xchg xor out mov mov sbb es imulb sbb mov sub push les sub jle out mov fld mov sub pop xorb scas test cmp popf sbb lds (bad) scas test fbld lahf pop mov (bad) and and ja loop xchg scas and sub push stos dec out cwtl mov add stos sbb cmp sbb (bad) cltd mov iret cmp pop push daa mov mov mov dec roll mov stc inc inc mov (bad) push rol test jg gs scas sub mov push pop add popa mov push cmp add sbb stos adc in daa pop mov pushf xchg lcall aas (bad) imulb mov out sub cmp mov iret lar dec mov sti add pop xor or out int movsb shr jno push dec lret ljmp jle mov orb movsl fs cmp lahf mov aas sbb mov pusha mov bnd jp mov aam or inc jae jnp mov jbe mul (bad) mov and xlat lock sbb jge and cltd cmpsb xor lock mov (bad) cmc iret test scas aam xchg pop push in nop or mov inc mov test mov cmp (bad) hlt push push sbb or rcll ja (bad) mov (bad) add pop subl inc outsl pop movd sbb ret scas dec jbe loop movsl xchg pop pop jne push in dec jne cmpsb ss jnp or sarl mov mulb xor gs clc fdivl (bad) (bad) add dec mov lahf lahf sbb ret or dec mov and (bad) fucomp adc cmp out les or fsts or add add fsubl mov add hlt mov (bad) into cmp sbb ficompl or jb sti pop push int imul or scas (bad) xor push xor es sub push fbld push jbe pop fildll int3 insb mov push push scas test jb add sbb xchg fbld lods mov lret xchg xor in push out push in xchg xor adc ficom mov dec dec cmpsb scas dec js mov mov aaa cltd adc adc loope sub and adc in sbb adc xchg pop cld ds faddl in lea es dec aas dec mov or mov (bad) push or xor lds mov and xor (bad) dec push push sbb sahf lock sub (bad) ret adc roll int in push ljmp leave pop (bad) testl test cmp cmp cmpsb imul jmp inc xorb test jmp (bad) push cltd test ret cmpl out mov fisubrl shl (bad) mov (bad) sarb jge jle mov ljmp stos lock mov or add and xor daa test and cmp in inc sbb sbb push (bad) scas push cmp cli pop pop insb into addr16 or imul jmp push (bad) daa fstl dec aad dec cmp mov andb hlt repnz mov outsl addr16 or mov fidivl jg je movhps xor pop out stos mov mov fnstsw pop fnop dec xchg insb aam pop clc aaa mov insb (bad) sbb jg imul ficompl inc fidiv adc and and inc push or inc lods mov data16 add in pop stc and push pop ret push ficom adc into push or icebp and cmp loop test stc popf push dec xor and into pop sti push cltd and push and push nop pop sbb dec cmpsb mov inc loopne repz pushf and sbb pop dec xor cltd lods adc shlb imul push insb addr16 push inc inc fist fdivl sahf mov (bad) mov cwtl jle inc fildl mov jnp bound pusha fbstp das lahf (bad) mov in pop xor mov dec in loope lcall mov dec aaa jmp (bad) fimul dec jb add push mov stos gs das ror cli xchg sahf loopne aad adc std inc mov mov loope fdivl jb xor imul pop pop mov aaa push mov jl in movsl jnp movsb pop cmp out pop push ret and pushl (bad) cs insl sub lret xlat dec (bad) mov cmpsb add ror movsb fidivrl mov lcall stos mov mov pop insb rorb mov test in dec and cmpsl test sbb inc pop jecxz push and or (bad) and stos adc (bad) mov mov sub mov dec jo jbe clc int3 movsl inc pop xchg xchg xor push mov xor je lret push and or or aad pop mov pop mov bound loope and stos cwtl jns jbe cmp bound lods pop add mov fisubl pop cld ret int mov xchg jns movsb dec jl (bad) fisttp adc inc inc icebp sbb xchg mov outsb mov in movsb (bad) mov adc scas enter add sub mov sahf mov and adc mov add pop xchg mov andl (bad) xor and pop pop imul or push (bad) jbe movsb mov cltd clc (bad) xchg xor jbe cmp aam mov pop and push fcoms sub pushf push sbb dec sbb movsb and cmpsb fsubrs call icebp fld lret mov ficomp (bad) scas mov push sbb mov imul xor mov test sub pop js and cmp jmp push sub and inc pop and movsb push sub out pop fistpll fistp push or ret pop or lods push lock xor cld ja out xor clc (bad) xor pop out pusha mov enter iret (bad) jnp and insb inc push sbb adc inc dec orl push (bad) rclb ret mov call pop add aas mov dec in rcl fdivr sbb or pop mov sub sbb add xchg das (bad) (bad) out add loope js push lds sbb (bad) ljmp sub sti scas scas push pop jle adcb push push pushf hlt sbb lds inc negb ja mov jno xor jb inc int3 loop movsl fwait xchg into dec xor mov add sbb arpl enter mov push mov (bad) push adc inc push (bad) (bad) sti dec and mov (bad) jb subb mov jns dec xor lock add or add add sbb push push sub insb sbb jmp outsl mov mov dec jp enter lds sub inc enter inc bt cmc pop add inc ss ds daa je mov fmull mov xchg pop std push cmpsb mov pop repnz sub cmpsl dec rorl je (bad) cmpsl mov xchg lahf js sbb hlt into push sbb fiaddl xlat fsubrs fistpll (bad) jbe mov cmp adcl and mov enter adc push incb stos pop dec daa dec inc sub xchg aas mov inc outsl arpl jmp cli lods aam fsubrl xchg aad xchg xor scas push ffree jle jo mov addr16 sbb xchg push cmp dec loop sub jge xor cmp rorb rcll insb jl mov mov movsb pop test (bad) mov lret cmp xchg mov sub inc sbb mov cmp push push rcll inc (bad) adc es cmp stos jg shl jne mov jle push int mov inc lret or loopne jecxz dec imul pop ja sub stc mov sub sbb pop mov icebp or dec inc jnp mov dec jg jecxz (bad) sub popf sub jo and clc lods dec lea adc and xor pop stos pop mov jle mov mov ss inc jle subb xor inc mov cmp test mov and add cltd cwtl movsl lahf dec jb or aam sub adc je sub mov (bad) notl mov ljmp fdivr lock sub fnstsw xchg test repnz (bad) stc stos or mov sub dec outsb mov shrl jb in test leave lahf sbb jae in jbe add aad jge adc sub rcrb mov fs iret das dec cmp and scas lret or ret mov mov inc jae cmpsl call push pop imul mov (bad) lods inc je movsl pusha mov adc jmp push jo jne (bad) mov pop sbb lcall sbb (bad) (bad) loopne dec cmpsb xchg mov stos dec add jl popf cmp dec movsl (bad) fwait and mov rol fstl jge xor bound js inc ljmp jle cld pop adc adc push sbb push dec ror push ljmp (bad) enter dec pop call jmp pop sbb dec insl addr16 sub fadds fcomps test (bad) mov jp test aam ja mov mov pop dec fldt mov adc mov lods dec fidivr cmp mov gs leave jno and sahf loopne or scas sbb sahf and mov add (bad) icebp les in pop xchg out cmp out ljmp gs repz aam test sbb cmc cmp icebp mov mov inc decb lret cmp ret or push and lcall pusha xorl sbb ffreep mov ja imul cmp fimul pop xchg mov int3 inc xchg jl orl pop jl add inc adc adc xor sbb and pop jns mov lahf mov cmp ror ret lcall jbe push xchg jl je sub adc imul test pop push pop (bad) push push mov outsb sub add js pop test movsl cmpsl cli ret icebp shrl cmp loopne add sub add pop (bad) mov dec sub lret mov (bad) xchg jae,pt flds jbe sbb inc or jnp cltd xchg add add pop sbb outsl loope mov inc dec icebp dec mov btc ficoml pop mov out cmp mov xor icebp sbb daa ljmp hlt aaa icebp xchg cltd or pop stc ljmp mov lea add mov push (bad) stc es push dec or xchg xchg cmp adc and std loopne cmp mov icebp negl movsb or inc (bad) cld push das decb mov mov stc fdivrs cmp add popf je pop or insl xor lea xchg inc sbb fwait (bad) rcll pop pop jno imul mov insb ret pop mov and inc ficompl (bad) or and pushf jbe (bad) insb xchg jnp jbe jbe call pop stos loope add or iret mov mov gs sub cmc jmp lcall mov and subl xlat in sbb adc push add pop xchg pop jns mov dec hlt insb push imul arpl xor test dec pop push fcompl lea xor xor mov aas jae test lods test jmp (bad) mov xchg push lret jecxz int3 and jg into sarl dec jmp (bad) sarb adc push (bad) lret int3 scas les adc mov adc sbb mov mov cmp out je mov push sub add mov fisubrl sub jnp cltd jg lahf pushf cmc imul mov cwtl int jns sbb lock push mov ljmp cmpl test lds or fnsave mov inc mov fs stos jns inc pop fcomp stos and (bad) or inc dec aam call arpl repz mov push inc mov xor mov dec test nop pop jnp stc aaa adc out adc mov lea push jo add dec jns pop xchg add cltd pusha cwtl cli push (bad) sbb cmc roll dec xor (bad) int fildl insl dec push ja leave mov mov jnp icebp mov pop push dec (bad) xor inc fwait mov cwtl sbb xor inc out aad int3 pmaxub repnz adc xchg (bad) jp not sbb or aad inc and imul je inc push mov mov jmp mov jnp aaa rolb mov jp push and dec xchg dec add mov inc sbb dec sub lahf nop mov fs add add cmp or and lret jge (bad) jns dec cmp cmp adc call jle es bound pop inc out and outsl sub xchg cmpsl fucom nop das or xchg jns decl pop rcrl adc movsb sahf lcall mov xor insb sbb push hlt cmpsb jb orl xchg mov jmp out stos xchg test sbbb jge cli mov mov jmp iret cli cltd js inc lods stos mov dec push test rolb cmpsb cld sub inc lods fildl pop in sub addr16 fwait cmp imul out jmp inc imul pop lret scas cs daa out fdivrs pop test fwait mov pusha or aaa push clc icebp push sbb jbe ret inc lods push push sbb push movsb xor dec jno adc adc stos mov or or xchg mov bound mov xor add fildl mov dec mov or (bad) mov aas xchg lcall mov sbb mov mov sbb enter (bad) test push push mov inc push and cmp adc and inc leave mov out xchg aaa je jae add hlt mov cmp (bad) mov push adc jo imul clc int in int enter lret bound push adc pusha xchg rcr js int (bad) loope mov jno cwtl mov lods iret rcrl and cmp push cmp dec sbbl pop mov dec insl add lds inc mov cmpsl divl int sbb inc push mov dec lret mulb xchg cmpsb fisubl mov adc pusha dec xchg adc add lock ja sbb jg mov addr16 leave test fs mov pop push xchg iret cmp ja pop pop and jne int3 xchg sub xor into std mov inc cmpsl shll cmp stc rcl jb mov mov sub fidivrl test dec lret jo int jle inc (bad) xor cmp mov or ds aas insl push sbb (bad) adc dec inc cwtl xlat push mov jle cmpsl pop idivb sub enter lahf popa mov dec popf (bad) fistp or insb inc lahf lcall and fsub or ret push cmp add sub int mov jno jl fisttp add pop push ret push (bad) mov adc jne push cmp pop adc jp pop xchg mov aaa shr cmp sbb jns loop shr inc aas pop pop dec xchg and or js add sbbl mov jb cs mov push sub and or in repnz rcrb (bad) mov lea cmp cmp dec push lods sbb push inc and pop adc adc lock aad imul sub movsb js int jl fisubl jge lds push das pushf rcrl mov rorl sub fldenv pop cmp into nop fistl out dec div push cmp and adc repnz ss out mov xchg push sarl and in lret pusha into mov jecxz xchg pop push fdiv add inc out mov aad test pushf aam dec jmp dec addb sti inc decl push mov xor pop test adc and mov jle insb xchg loope mov pop mov add scas aam jae add arpl cmp fyl2x push sub and fldcw je fstpt decb pop push imul icebp pop js fldcw xchg sahf xchg (bad) cmp gs xchg out lea mov adc fsubl dec mov iret fistl mov xchg mov jle inc xchg jno daa inc push fidiv repz icebp push push push sti pusha xchg pop icebp addr16 jns jb and fwait dec pop jmp popf jl jne das subl push test movsl lret pop mov repnz bound and scas inc faddl imul mov fiaddl fbld clc aaa outsl push das mov jmp dec bound push mov scas and in jge into mov sbb lods stc dec mov dec aas adc jecxz cmpsb adc xchg add shl and pop xlat pop xor sbb and mov sub mov rorl lds pavgb aas cmp out aam inc je inc cmp push bnd cmp test aas fs loope xchg mov addr16 cs lcall jae fucomp inc lahf ret jecxz (bad) dec insb andl push sub pop jae cli ret movq roll ficompl jmp adc test jge add mov rcl push sahf negl (bad) les push outsl and xchg inc test ftst xor icebp popf xchg lds inc add out and add xchg fmul xor in mull into cmp aaa out sti les jnp cltd mov out mov add mov gs mov inc cmp dec mov (bad) aaa roll rclb (bad) hlt fisubr push jg pop cmp push leave cltd lods (bad) xchg add test daa faddl mov pusha push mov sbb pop dec lret nop push imul mov repz adc inc and (bad) aas dec mov mov fs ret aam adc std mov xchg (bad) xchg iret dec lods mov imul xchg fnsetpm(287 cltd daa icebp and inc and aaa fldenv and fldcw adc insb adc add dec or sti je (bad) call lea ljmp cld out ret stos mov mov mov mov xchg or or imul mov cmp adc mov loope fildll shlb mov sti sub rorl mov int repnz push test aam xlat jge sti jnp sub sbb pop test and aaa jl insb subl add (bad) pop pop mov dec add sub les (bad) and scas mov dec enter mov push sarl fs ss je add movsl and mov das mov cmc out sub mov unpcklps push jmp fldl push dec clc mov outsb jns xchg mov js pop mov add xchg sub ja mov bound testl popa pop (bad) (bad) cmp jp andb jp mov jbe push cmp mov jg shll loope xchg xor fnop push add cmp mov push add or lea daa mov movb fmull sub out pop lea out out xchg adc jbe (bad) lahf out cmp call addr16 or xchg (bad) xor xor cld mov (bad) test jne xchg or test jns pop in iret dec fwait jmp (bad) out xor mov repz sub mov and mov test xor fwait dec roll sub add sbb ds nop or fdiv ret data16 loope in add cmp pop jne cmp xor das cs (bad) pop loope (bad) cli sbb imul mov cmpsb or (bad) jl dec lods stc dec sub pop and add in push ja jg dec mov outsb inc lret rorb vmptrld cmp sub or sub cmp lock data16 xor mov sbb int3 jecxz adc (bad) arpl mov ds cltd xor push gs aaa imul xor (bad) add pop test loop (bad) into (bad) xchg cwtl sub dec fisttp jns std (bad) in mov jbe sbb fdivs or jge mov loopne inc mov fiadd xchg mov dec popf negl cwtl aaa rcrb dec push push pop (bad) je mov lock jne jae mov push add push sbb std push bound adc popa xchg pop mov (bad) shrl xlat pop cmp (bad) mov fs fimull mov pop jmp out mov out adc mov cmp inc xchg loop pop sti xchg xlat sbb xor push in xchg adc mov cmp rol jg int3 scas cmp mov push scas jecxz or pop xchg push dec sbb push sub fmull insl lret mov mov push ret xchg add ds mov js test outsb test dec jnp,pn fcmovu push arpl adc jle mov sarb jns test in insl iret fmull push adc movsl test imul pop dec aaa or sub jecxz jl jmp sar mov lds icebp fidivrl or or je lods outsl jae sahf fisubrl or movsb (bad) (bad) cwtl ret push lcall ja jg adc (bad) cmc and jmp psllq inc add icebp (bad) adc mov cld pop mov or (bad) (bad) (bad) push in dec je pusha outsb sbb xor gs outsl movsw jae or pop jb fdivr jp rclb adc sar pop dec fcomi push dec gs scas dec jnp nop test mov adc cmc bound jmp or ret inc call adc jo inc roll lea xor xchg daa in push ja outsl jle lret jl ds mov cmpsb in xor popa push jno out rol or mov (bad) xor mov sub ja add in mov sbb dec (bad) lret ret mov or and xchg mov lcall cmpsb jmp scas pop mov pusha add add push outsl xor adc es nop add pop xor mov repnz xchg xor int imul nop jo popa add popf test pop insb pop jbe cld cs pop leave sub or ret rorl packuswb adc push mov in pusha js loope sub push push push cld (bad) imul and scas imul pop movsb loop or and popf (bad) jb mov loope cltd pop test cltd and cmpsl and shrb pop add pop ljmp movsl cli (bad) cmpsb xor push out bound or sub cmpsb push addb loope inc dec in sub push cmpsl mov and mov iret idivl sub repz cmp add addl mov xorl addr16 loope add inc or (bad) sti (bad) xchg nop stos cmpsl sti stos xchg repnz js arpl pop pusha bound add push sbb stos adc pop adc fldenv aas das cs and inc jge dec fisttpl xchg das adc push dec loop xchg xor movsb add xorl popf fdivl popf jge cmc lcall xchg add lret leave orb js pop loopne insl sbb das fnstsw dec xor pop in mov fdivrs mov sbbb call dec fdivrs jge adc ds jmp lcall sub jecxz repnz sbb push not insl push inc inc mov xor or lret push or imul sbb loop rcrb jle movsl int3 (bad) imull and ret (bad) out adc and pop into sti mov add leave jne adc sbb mov cwtl sub inc rclb dec shl dec test cltd lods inc push jae mov outsw cld imul das pop call js or outsl out mov xchg fdivl dec insl or pushl mov jg insl mov negl inc rcl loopw cld clc fucomi cmp int3 mov fmul jae mov cmpsl lret fldl xor dec and xor aaa (bad) mov and jnp push sub mov and or adc mov call cmp xor pushf adc lret ds mov into mov cmpsb movsb popa leave sbb clc xor mov mov mov jae add pop bound xchg std jo ljmp jp bound test adc jo daa cmp and js push out pop add xlat or test pop inc iret add or adc incb cwtl out mov jbe push fwait sahf fwait mov pop clc pop (bad) js insb into jb inc dec insl inc xchg push data16 loop or and jns cld in pop push in push mov and pop push cmp jnp sbb das push aas or add inc sbb push inc push mov xchg push (bad) je int3 and shrl (bad) testb mov hlt add lods dec daa xchg popa inc xor jecxz (bad) in mov sti dec or sub jmp (bad) sbb jns pop pop cmpsl mov (bad) lret pop nop sbb sar mov out lcall (bad) hlt jp and jmp fdivrp lods popa mov add repnz lahf in mov mov push outsb add sub adc adc icebp pop add mov push or andl mov jl in xchg inc or jp xchg jp mov pushf jmp xor lcall xchg sub lea (bad) or pop subb pusha lods clc sarb loop int3 sub or jb and cld pop stc es aad mov sub (bad) (bad) cld das fcmovnbe andl jmp icebp dec adc mov arpl (bad) rcl xor repnz jae das sub lea in dec add shll and aad pop (bad) mov sbb pop pop jno int3 jge cmp adc outsb cmp jmp or test fisttpll outsb mov mov cmpsl pop add push inc push adc cltd pop das (bad) outsl dec int3 lods or jmp je adc ror repnz xchg cmc adc mov mov in adc mov xchg lods cmpsl jge pop push loopne fidivr scas push xchg int arpl loopne jno popf inc decb mov out cmp pop sub fwait xor or shlb xchg xchg (bad) lret ds popa adc adc mov adc mov repnz loope sub mov xor jbe pop imul inc mov cmpsb aas pop mov je lea and dec pop (bad) add ret or push shrb cmpsl icebp nop jmp sbb pop inc jnp imul test push mov sub ja das dec adc cmpsl test mov xchg mov mov pop xchg addl lret push or (bad) mov mov outsb inc dec pop mov ss iret test dec lock add fs cmp inc adc cli mov mov pop jnp dec int cmp clc mov xchg jne mov scas fldl xor pop repz and push imulb stos and jo ja pop mov aad jecxz dec xchg movsl xchg pop mov jno mov cmp mov add mov movsb je jbe ficoml and xor inc add push push inc jo aam lcall (bad) mov sbb cmp cmp dec dec outsl movsb jmp les adcl mov inc clc aas loope jg add pop pop lret int3 adc dec insb out mov and aas mov xchg sub or cld fstpt cli pusha mov pusha cmc dec sub xor addr16 outsb ss fcomi push inc jnp inc cmp ljmp pop fisubr pop push cli mov sbb divb fwait sbb mov sub inc pop (bad) sub mov mov pop mov xor adc int add and add pushf shrb test add test lods (bad) outsb rorb xor mov movsl and lcall outsb mov dec and jne scas xor enter push popa mov in cmp jne mov repnz out test aas icebp dec add mov sbb stc pop fdivl cmp arpl mov lock mov add rep add loop sbb sbb xchg out lods pop lret inc jg xchg sbb (bad) aam push (bad) push pop xchg cmpsb mov sahf clc xchg inc xor jnp pop or stos test push mov xchg test mov mov cmp lds jmp dec repnz cwtl out fs int jnp test pop fwait or jns mov push into repz stos lcall out mov dec nop jbe mov dec pop test (bad) out popa cs das ss mov dec sub and js ficoml ds call adc dec add jb inc push scas pop push mov dec xchg ret push imul add xor add jae into sarl cmp dec adc in cmp mov and cmp push ret or jb inc xor push sub lret jo aad dec xchg or inc aam ret inc ret xchg (bad) loopne push ja neg dec xchg mov into jnp sahf (bad) jns arpl lds lods xor push cmc dec pop inc inc xor and and aam (bad) lret pop in pop cmp xor xchg inc js or pop sahf push icebp jno insb push inc dec iret or ja fsubl and and and mov inc lea ror xchg (bad) dec mov jnp roll mov data16 pop or pusha xor push lret jmp scas in jl sysret pop xlat inc mull ljmp loopne stos icebp hlt iret stos xchg cmp mov jg mov jl shlb mov inc sbb in lds pop lods or jae xchg ret inc shlb mov xor rcr push sbb ficom mov movsb push xor cwtl inc sub adc lahf vandnps jle jnp jmp divb dec dec aaa ret cmp and inc les stc adc add jb clc pushf fwait push out test xchg pop (bad) and fidivr lea mov xchg (bad) jmp cmp add sub inc fistpll push push xchg inc pop imulb sub mov mov jno push (bad) xchg cltd shrb gs clc movsb push pop xor sub mov test jl push xlat push mov (bad) ret jmp xor arpl ljmp in inc outsb arpl iret ret arpl jae out loopne push notb cmp lcall mov dec inc add mov mov jge mov push lcall push fstpl mov and mov xlat mov inc fldenv fld xlat insb xor mov cmc (bad) mov (bad) pop iret clc push sti or cld mov dec aaa lock dec cmpsb in popa pop rcll pop push imul aas push popa cmp stos fldl pop stc cmp xorl movsl adc or push orb imul loopne negl mov pop jnp jecxz popf inc sti jbe ljmp xchg jne dec lcall fist xor in lods rclb and add call (bad) pop xor xor xor adc repz push inc xchg icebp hlt fstpt testb in add mov mov movsl mov mov mov jle cli mov pop data16 adc je mov dec push sbb daa or adc add jno add xor lcall push outsl sbb cwtl test daa nop or addr16 mov movsb adc notl cmp lods lds jns (bad) dec pop dec dec inc (bad) inc xchg lret jno xor xchg aas sub inc enter int3 sub add jbe scas pop pop dec insb cli rol das pandn (bad) insb mov ret mov or mov push mov dec fs sar inc lahf lods dec jae hlt call sarl jb mov xor outsl sahf jg test jecxz jne cmpsl mov addr16 adc stc lret fwait add jb movsb js mov lahf pusha xchg pop dec stos add test jo repnz pop repz mov jae or xor fs sub sub (bad) iret lret add inc dec jnp mov xor in add jnp sbb mov (bad) insl inc into adc xchg add mov (bad) adc fisubl pop add dec scas mov outsb pop push xchg sub push inc cmpsl adc mov pop sbb xor push cmp mov xchg lret add pop nop es jmp pop jae popf jb out cmp sbb cmp je movsb lods bound sub xchg inc dec xchg notb jno xchg pop mov fldl push sbb push mov rol sahf xchg jb insl test dec push mov mov int3 mov mov lock call or aam imul push (bad) cmp ja sbbb pop push adc jb fwait (bad) pushf add dec mov and jae pop mov fsubr or push xchg pop into stos jl mov sbb mov pusha and xchg js adc dec shlb adc push cli dec lret iret pop xchg jle jp dec push cmp push sub pop popf in cmpsb push jnp mov leave out (bad) cmc mov call push in or scas bound arpl test jno lds mov mov mov imul pushf mov sti enter push std and (bad) mov xchg in pop cmp or mov in dec jle push pop jnp pop dec shrl xor xchg bound out scas push pop dec aaa icebp out dec jbe lret dec adc and inc xchg inc ficoml lret sarl lahf inc adcb aad pop in mov mov or pop sbb inc add lret iret daa js add cmp cmp nop sahf lock pop shlb pop ljmp enter pop cmp cli adc into mov lret in mov inc lea and xchg mov fimul jg push stc lods sbb (bad) jl pop out push cmpsl hlt rcrb adc lret push push incb das sbb xor mov dec das inc pop push leave addr16 cmp cmp sub addr16 pushf inc mov jae add cmpsl into sbb jo jmp notb jno and mov insb xchg sbb or push sub dec jmp mov cmp mov ror (bad) (bad) mov mov mov call je lods pop jns out add aaa (bad) pop shlb orl insb bound insl xchg lret lcall xchg dec mov into (bad) in sbb repnz inc mov inc add orl mov bound sub (bad) mov pop mov mov xchg xchg test imul pop push fwait es lret mov ret arpl ficoml dec imul sub repnz js clc push xchg lock fwait test mov mov in int3 mov cltd gs mov xchg or cmc repz in stc dec aaa xchg or rcl movsb mov aaa mov fdivrs ret or lcall test or dec and shl test test imul jbe sti setno sub (bad) adc sub sbb add or inc pop lahf insb mov xor or pop jb loopne vmovdqu adc jae or xor aas into adc mov movsl inc mov inc sbb inc add clc xchg shrl lods add pop xorl pop ret push addr16 icebp rcrl add je addr16 xchg mov insl popf inc push cmp add sahf push add repz sub or xchg (bad) icebp outsl pusha dec dec mov fldenv mov outsl jle enter lret jge mov in add push pop inc pop adc jno sub (bad) out decl or or add xor sub or add or or aam mov add insb pop jo pop sbbb data16 mov cmp add mov or pop xchg call call imul add push dec and into jle movsl xchg pop push xor xor dec push test movsw add pop push fxch ss push in xchg jecxz ret int lods in inc fiadd leave dec lods add pop jmp rcrb dec cmp or push cmp leave movsl test sub xchg cmp push sbb ret outsl and mov and inc xor xor pushf stos adc and aad or xor sbb pop push cmp xchg outsl mov jae les mov clc int3 into mov cmpsb xlat mov jle jnp mov xchg rol jp or imul inc xchg xchg jge cltd mov xor cmpl pop arpl daa in out loopne mov inc iret out dec das add mov jbe cmp sub pushf hlt sbb cld (bad) push lret mov push or jle lods lock ja lds and pop adc stos cltd int3 jmp inc dec mov fisubr sti push movsb imul add in jl push mov stos mov xchg clc dec movl lcall (bad) xor sarl pop popf pop lds push fcomip ret push cmp pop mov call pop stos scas sahf negb dec fistpll in pop sar push ss adc out push enter xor mov or lods (bad) insl pop cmp imul lods dec fnsave jge lret cmp aas xchg sub out mov es fwait and inc cmp inc repnz adc mov mov and mov call out adc push mov les cmc in cmp mov stc push in add and jne push sbb inc or pop pop jno push popf mov test scas sarb add dec insb xchg and jo sbb dec sti xchg cmp cmc lcall and add mov je mov (bad) call into out xchg in and pop sub pop sbb sahf shlb imul jecxz xchg push pop inc mov pop hlt lret inc (bad) xchg lret push cli jb imul movsb jo push fldenv sub bts push dec jns ret add insb test add inc in adc ret dec call test pop insl xchg inc lret hlt mov pop orl push push dec lret enter jbe fwait leave imul movsl mov loopne clc int inc or jl and sbb (bad) hlt aas xchg jb lods leave (bad) jo arpl mov inc mov xchg xorl mov adc cmp addr16 push mulb adc rcll mov (bad) xor ds popa xorl sub pop add push lock icebp xchg mov pop test (bad) not daa and xchg sarl or add addl adc in outsb popf xor mov sbb test ror push add fimull ret sbb dec rclb pop mov jg out mov int sub lds dec js in cltd (bad) mov push loope flds xchg in jmp popf xor (bad) (bad) hlt adc cli mov hlt fstps inc into lcall sub jge mov test jge pop sbbb inc stos add shr lods pop (bad) daa dec sti mov add sahf add (bad) xchg mov jno push mov popa into mov daa movsb js push lcall xor pop (bad) negb pop ja jle adc mov pop sbb (bad) lock sbb rorb cltd add ficoml cli ficom or mulb test mov sub testb mull or sbb jns mov cmc push and int3 inc cli imulb decl xor inc jb and mov xor test push mov and pop jmp ret fdivs mov mov ret cs mov cmc mov lahf call lds cwtl idivl or cwtl jg insb push mov mov sbb rorb push (bad) and cmpsb lods outsl (bad) dec jno or in dec sbb xchg stos push popf or xor adc add inc ret std jno fsubrl sahf sub das dec icebp pop insb push and add pop pusha xchg mov mov lds and mov cmpb cmpsl xor stc les jg gs addr16 add fidivr subl pop lock add rcr popa sbb inc cwtl pushf jb cld or sbb xchg xchg xlat cmp or adc (bad) nop clc xchg aaa fldl repz lods cs lods lods xor popf decl mov (bad) repz mov mov lock jp dec sub lods or push mov xchg test sub dec cmpsl ja jno mov stos std mov int3 stos popa sub and mov and adc lds dec into (bad) repz or mov ss mov int cmp add outsl xchg mov call mov fdiv sbb cmpsb ja lock dec out mov shll (bad) adc mov pop and pop repz mov jbe sbb jg dec fstl mov insb push sub ljmp mov lcall dec daa pop xchg cs and (bad) xlat push pop lea cmpsb test insb insb add ljmp (bad) push rcrl dec mov insb stc xchg jne in rcrl xchg jo cmp jnp test cmp cmp pop fsubl js dec leave mov bound dec pop mov add (bad) xor push in pop out pusha mov cld enter mov pop sub lahf scas (bad) xchg mov daa or jb out cmc jb mov mov pop stos xchg (bad) jl (bad) pop push or mov pop mov stc adc jge neg mov test pop mov aaa pop popa mov sbb cwtl orl arpl pop xchg popf dec retw imul aam je dec jle scas mov dec cwtl or lret aaa and push dec imul xor in (bad) push gs jbe mov pop push adc mov cmp and fisttpl test lods faddp jl jmp sti fidivrl cltd rcrl mov data16 gs mov out test into ret (bad) cmp push adc inc xchg inc xorl inc cld cmpsl adc mov test add jecxz stos push jg cld (bad) mov test push cmp repnz dec pop jp cltd mov pushf xchg cmpsl xchg cmp or cmpsl ficompl or aad jmp loop fisub les (bad) push es leave lret jge hlt aaa pop xor dec sbb mov cmp roll mov movsb test mov (bad) or adc cmp sub fild shll sbb push stos mov xchg or inc adc mov aas adc fwait loopne push jae pop sbb dec lret enter inc aaa out fstpl out pop les aam ds sahf insl ja mov cld dec sbb out mov das loop outsb xor xor jl jne test jle das mov cmp rcrb adc rsm mov xchg push pop dec cld rcr pop mov dec mov imul aam daa or push add push push pop aas js (bad) lea (bad) lret dec movsl mov dec jne subl out push fistpl xchg fdivp jnp (bad) in sarb push sbb adc or cltd cmp dec notl mov jbe xchg jne mov xchg jbe mov gs scas push or pop cmp xlat dec dec iret cmp or pusha adc addr16 and enter hlt fcomps adc in dec dec pop inc mov mov sub insl jbe xchg inc int (bad) es sub or out xor loopne imul sub or into hlt inc cmp cld das shl test lods sbb inc dec enter (bad) int3 scas xor jge addr16 insl data16 lea mov xor lret mov xchg ds push jo pop xor pushf lcall test jge mov mov pop rcrb or hlt aam testl mov insb std jno or cld mov aaa cli aad xor push add in lea adc dec scas and jbe,pt cmp roll fisubr ficomp lcall mov dec jl xchg cmpl or (bad) or cmp push iret push pop (bad) adc mulb repnz inc aad add mov lahf (bad) popa push repz inc mov (bad) jmp ret stc add dec mov es icebp sub jo ret dec add int std gs movsb adc dec push jge inc mov leave dec push (bad) outsl stc orb pandn pop data16 das icebp push push repnz rorb pand rorl xor xchg (bad) cmc popa push repnz xorb test xor test cli adc les (bad) repnz popf out ret mov sub bound aad aaa daa pop xchg jo sub jecxz arpl push xchg dec mov mov (bad) or lds add fcmovnu int3 int jp or cmp pop out ret xor add xor rcrb jmp xchg add mov or mov pop cmp aad lds stos pop jle nop push cmp ja add push sahf inc cmpsl scas scas cmp loope and in cmp cmc add fnsave sti pop stc test inc mov sbb cmpsb lea mov push inc mov insb repz or mov lds xor popf dec test jb cmp cmc and jo outsb sti sbb sbb mov mov pop mov stos and dec test lcall lret or out (bad) mov pop cltd cmp mov lcall mov test cwtl es sub pop lret test push jne cld sbb out and xchg add mov mov iret sbb mov mull lock arpl mov imul int3 or mov (bad) int3 add pop fisubr pop hlt arpl push mov jecxz ret push in (bad) rcrb jle test pop xlat xor aaa ret mov mov add sbb xchg movsl imul int test insb push ficom negl jecxz pop sarb mov scas pop mov mov cli pop cmp adc sahf into adc in xor jl (bad) sti inc into les fildll ret popl mov cmp stc lea sarb (bad) fist lcall aam enter shlb lock sbb sti int xor push int sbb cmp bound pop je mov ret stos xchg and int push fwait stos test gs clc adc inc gs xor ret sti test adc sahf fcoml add stos mov mov aad daa es pop sbb daa dec loop sub mov mov jg test stos shll adc ljmp push xchg and leave push xor cmp repnz dec xor or std ljmp imul lods arpl adc dec inc jmp sub dec jno ss stos js popa pop ficomp test push inc lock movsl and jg stc ficoml and repnz repz xor pushf add aas (bad) jl std fmull ss jg add stc stos mov mov sub sub mov cmp mov sub stc call mov sbb movsb in popf xorl or xchg pop pop cmp mov jecxz pop int3 or push (bad) jae in fcompl ds scas clc das loope cmp mov test sti pop int3 (bad) std cmpsl pop lods lea popf mov out lret mov aas or sbb adc iret add dec jle test fyl2xp1 push pop adc lcall rcll adc cmp data16 jo (bad) jo into inc mov push stc mov jl adc ret leave popa xor testb push pop aam cmpsb aas lret rolb push lret divb outsb mov jno jnp mov xchg mov jecxz push inc adc xor cld lods adc (bad) in data16 pop lods outsl mov and xchg scas stos cmpsb adc mov push mov insl out int cmpsb imul popf xchg pop push ret cltd fnstsw xlat aad cli sbb hlt fdivl adc shrb pusha paddusw lods fisttpll int lods in or mov js push dec pop bswap jno cmp mov dec fdivr ret mov cmpsb icebp xor fwait ljmp dec xor jl jns fdivl stos imul sbb cmp call ret push je mov lds lret jg inc cld cmp test test sbb fwait aad jle mov or fnstcw or ja cmp sbb daa cmp cmpb xchg mov rclb sbb xchg les cmpl fistp dec fstpt lahf js mov scas lods sub pop mov pusha jle lret dec jno fwait inc pop jg mov paddw test (bad) lret nop mov addr16 scas stos mov scas icebp arpl fwait lret dec fsubl mov jb pop lea jae cmpsl push icebp xchg lods dec aas ret in add pushf jp xor shl in aad hlt push pop xchg sahf enter int3 push mov jb ret push (bad) (bad) incl add gs xor lcall movsb ret dec mov mov mov mov imul sbbl pop scas rcrb xchg or stc adc jge push ds les inc mov xor xor adc sbb daa test out out xchg into sub xchg xor rclb adc je subb (bad) fucomip mov fs jo add mov test and std mov lahf lret add loope or fmuls pop dec pusha mov (bad) icebp inc (bad) les in nop insb adc std or insl cmp mov in push cmp sarb adcl outsl adc pop or dec add jg sub mov in insb jmp dec adc xor pushf inc pop das xchg cs fld pop add negb loopne jmp mov insl int inc mov jne inc popf xchg shrl rcr or hlt push xchg sub nop aas cmp popf push xchg push bound (bad) aas mov mov inc or jno (bad) mov xchg jno cmp sub lods add push imul push out lret movsl push ss daa sub mov js repnz push int3 push sbb mov int3 xchg sub sbb or adc push add dec outsb cmp int3 mov popf mov or push fs addr16 cwtl insl cwtl int fisubl jge or lock in inc sub or in add inc int3 cld jmp cli stos and (bad) imull daa jle mov pop pop and je cld hlt mov in adc nop mov dec ror dec sti iret adc lcall and mov jno inc into data16 xchg mov sbb jmp mov lods jns (bad) ds cld pop mov sub mov ret or pop pop lea mov jno cmp (bad) repnz add xor sbb pusha in dec ss inc mov lahf mov ret frstor (bad) jns repz push xchg pop outsl aas cmpsl mov bound jb lcall ret adc nop test ffreep push cmp push and in std and mov inc push jle (bad) imul les sti mov pusha jmp lds fistpl pusha and sbb mov add lea xor sbb or mov mov inc ret aaa jbe test sub mov loopne xchg mov mov rolb lcall add movsb add pop and call es pop and dec into push push jno das ljmp mov imul int3 stos mov daa clc cmp xchg arpl test and mov mov mov jo push jp cltd std std int3 lods shlb repz jmp ficom pop pop jns pop int pushl pusha xchg mov jne fmull lret and push and daa ja and addb pop loope lret aam ja mov in xlat jbe adc sub je int fistl xor or jae fsubs adc (bad) testl sub pop stc ja mov js mov lahf jecxz mov loop inc lret mov pusha decl out ficom cmp (bad) stos pop pushf jmp scas sub jg loope cmp jg sti xchg aas sub mov mov ja push scas das adc mov sti xor fiaddl lods sbb push xor mov shlb xor lock dec xchg xlat (bad) push jmp jbe stos sti mov nop xchg sub add into push outsl cs add jg loop jecxz es cld lods fs (bad) cmp cmpsb pop fidiv or testb outsb cmp or pop cltd lret mov movsl arpl or mov pop adc mov shrl pop xchg dec sbb mov sbb add cmp xlat dec (bad) cs leave in adc adc push std clc add inc or and arpl push fnstsw popf push mov iret push imul les mov jecxz (bad) and adc in je mov ja das (bad) movsl fidiv xlat mov or or pop test (bad) in jg in mov jmp es imul not stc lahf popf xchg cmp sub icebp es loope repz mov mul pop mov mov jo inc sahf push in sbb scas aam fdivl push mov lds jne pop ss ret (bad) mov pop roll clc icebp xchg mov test cmp ss mov xchg ss push mov std and adc push add insb mov (bad) xor (bad) push inc add mov mov aad test lods (bad) repz sub outsl nop sub mov cmc lods xchg push cmp mov add sub js scas add mov ds imul test push dec aas jb mov imul mov push sbb popf out inc pop xor fisub hlt shrl mov fisttp (bad) jecxz cmpl jl cli js repz xchg inc fs std and js data16 jmp insl popf mov jmp std mov mov inc mov mov mov rorl xchg inc inc stc rolb lahf mulb push addr16 arpl pop into stc adc cmp pop jmp pop sbb xchg mov mov lret pop fiaddl arpl cld xchg adc pop (bad) into inc sbb inc stc mov xchg mov fidiv xchg pop lds nop add and xchg fisubr or adc test push test in pop lds bound enter push sti loop push repz xor dec push xchg jp sub pop pop push or clc pop data16 aam divb xchg in xchg mov loope nop mov aas push cmpsb or xchg imul mov (bad) into push xorl movl jbe shl cmp push mov loop push icebp int3 stos daa xor in fs sar mov lcall (bad) mov mov push les lret in enter push cmp movsl inc jae push cmp mov addr16 or jl push inc pop sbb jl mov jnp dec pop movsl sub adc mov adc lcall in mov dec mov dec jmp mov mov clc cmc ljmp and mov out jno sbb clc mul pop jmp fs dec clc rolb xchg test repz xchg or ljmp jmp xchg pop jne int3 (bad) mov incb jns mov adc test es ds pop sbb lret les pop push in cmp cs mov lahf cs fstpt cs addl (bad) xchg push in stc std pop jmp add jecxz test rorb xor jecxz test pusha cmc and cmp int push cwtl (bad) xor dec pop adc mov lea adc gs inc mov and fcompl insl and (bad) ss popf lret in xor jns sarl adc pop fnsave adc mov push stos ret dec mov ljmp dec pop pop or stc es push mov jbe push push test test call repnz inc mov subl pop push lcall cmc (bad) pusha xchg into dec xlat loopne mov mov and jge out js jae outsb cmovg dec mov sub mov lods xchg (bad) add das leave int3 or xor and dec cmp stos icebp adc lahf cmp mov xchg mov aas lret ret decl in jo mov aad (bad) in enter jg pop (bad) jb add pop lods dec clc cwtl js sub xchg sbb xor cld je fdivrl jns inc psrad (bad) shrb cwtl stos push aaa xchg stos mov das mov cmp rolb rorb fcmove add sbb test mov adc ja,pt (bad) popf dec mov xchg lcall and shl hlt mov lcall loope mov fs jo stc mov add lret inc mov push repz ficom cmpsb dec inc ja inc adc stos push lock lcall adc fisttpll enter inc movsb cltd pop jmp in pop mov popf jnp lods bound mov inc add or dec sub shl in jae mov jge in mov add add fcoms mov jmp mov push es mov aas mov test mov mov push inc pushf scas mov movsl (bad) into cltd in xor out mov cmp in (bad) xor cli sbb inc jne hlt idivb add loop dec xor inc xchg mov stc pop jbe jp xchg adc iret ljmp aam iretw cmpsl mov mov jl jnp lods lcall outsl lea sarb test add push pop in scas outsl pop xor out push mov mov push add adc repz in jb xlat fcompl cmp rolb jg dec jae lods mov pop mov daa pop dec pop aas pop push dec or xor cmp xchg mov pop xchg or lret jge decb lea push cmp xor les in jecxz push movsb cmpsl inc das push nop xor pop adc ficoml outsb fistp pop test (bad) stos scas lcall sbb call cmp cmp mov jns int repnz inc test les push rcl enter push mov jecxz jge pop andb cs int aaa loopne pop inc fmul jle adc fwait imul aam sbb mov jl mov fdivl mov cmp push xlat ret mov sahf jmp loop push lods mov xchg ret jge push into dec jnp jns sub lahf pop nop mov and xchg mov sbb mov jp imul fcoms dec ss shrl mov jnp int ljmp jo xor inc daa repz rcll sub xchg stos jbe sti push aam xchg mov testl or cmp lahf sub ret repz ds call dec stos xchg mov xchg xchg mov push lods push dec (bad) xor jp pop mov mov aaa jl inc mov dec fs sbb fisubl xchg sahf scas push jo sub clc aad jns dec (bad) cmp mov add mov fadd lret pop jbe notb (bad) xor ret (bad) xor js sub (bad) mov mov leave and cmp adc push mov jns arpl add cmp sbb jne mov xchg jle ret push stos xor xchg ret mov inc outsl insb pop mov and out mov cltd rcrl arpl jge fwait mov cmp in (bad) adc mov or sti pop mov mov xor stos push push mov cmp inc xchg int3 lds andl dec (bad) push sbb cltd les jl cmp xchg mov call (bad) jb cmp pop cmpsb pop es pop sti sub in lods xchg fisubl mov ret dec or dec lds ret pushl jg cmp je in mov push insl push loope xchg mov or das stc jae fildl sbbl fwait mov pop lret inc cmc popa gs sbb repnz jmp call and aad xchg loopne mov lcall cmp cmpsb outsl cld jne sub cld cmp fisub jne aaa mov call mov adc mov shrb or pusha cs addr16 and scas dec mov adc sub addb test jnp inc and sub imul ret add push pop jge dec dec xchg pusha and iret push push jno pop pop xor in mull push push xor mov (bad) iret loope fldenv popa sbbl test add xor (bad) sbb jge mov (bad) mov and dec out pop inc cmp xlat gs int (bad) push in das sub sub int3 pop nop xchg xchg hlt in and adc sub push mov test ja xor rcrb arpl fs mov rcl mov mov push xchg testl mov shr push push iret (bad) lar mov xchg in mov imul dec mov adc aam out shrb jg inc mov pop cli outsb mov xchg pop ds jno loope xchg jg (bad) call movsb dec loope lret out fisttpl xchg xchg push fwait or (bad) std inc dec jnp jl out jnp push mov lahf add arpl out test sbb repz mov push add lahf icebp aad cmp fisttpll lret pushf sbb pop out pop test mov pusha pusha cwtd mov scas sarl pusha xchg mov ss xchg clc rcrl popf sub fdivp xchg imul andb (bad) xor mov arpl mov mov ljmp das push leave (bad) cmc inc arpl mov mov fcmovu push incl inc and xchg out loope or mov mov mov maskmovdqu idivl add or xchg xchg pop sahf adc sbb jb inc int3 pop jbe lods rcrl and jg pop pusha sub pop jge sbb cmpb cmp shrl mov gs imul movsbl (bad) es lcall idivl bound std iret or push sbb (bad) fcompl ficoml rcl hlt leave js pusha out push add xor repnz repz icebp xor outsb (bad) (bad) cmp cmp push mov ss leave add fisttpll mov mov xchg mov and and xor arpl xor (bad) gs jmp (bad) rcll jno dec test fcmovb pop cmp (bad) jnp cmpsl popa xor mov or insl push (bad) push push mov cmp adc mov and adc xchg idiv (bad) cmc mov call cmpsl (bad) in outsb and shl stos mov jge sahf scas pushf cmpsl out fistpl (bad) lahf cmp xchg dec xor mov data16 daa jne ret sbb push movsb mov cli sbb xor addr16 pop mov (bad) jmp pop lret and mov mov stos push sbb mov imul stos push add cltd dec mov jg fimul dec leave mov inc xchg mov inc mov (bad) es lahf dec mov arpl rcr sbb sub and pushf scas cmc (bad) adc fcmove imul loopne fdivrs sub orps xor stos xlat mov cmpb cli cwtl in mov jle daa xchg cli addr16 sbb mov icebp outsl xor sbb sbbl fs push movsb cmp ret cld jmp cmp mov lods push xchg jmp es sahf into insl ss xlat outsl pop lock adc xchg pop push sbb aas mov add xchg jg popf push mov or cmpsl mov lea stc and inc pop hlt jmp ret xchg sub sbb outsb fcmovnbe dec in xchg push push push xchg fdivrs std or rcrl imul add aas out jmp movsl incl icebp pop xchg jp mov int jne or fsub pop cmpsl push sub mov xchg jmp adc xor test popa (bad) cmpsb lock xchg leave pusha aaa imul cmp ret call pop mov cmpsb inc lret cltd inc lods sti dec int3 popa pop insb icebp pop in and mov jne in push test rcll cmp fisubr js and jb jp pop mov and push mov lcall cmpsl pop popa loope enter mov push addr16 cmpsl add cmp cmpsb cld rorl push pop jb sbb sub mov iret sbb cld test test adc pop aam mov icebp hlt cld (bad) adc imul fsubl jns xchg sub jb push mov jnp or xlat xor cltd sbb jo dec adc adc mov mov cmp push sbbl push push adc repz cmp or and sub popa lds fdivrl popl mov sub arpl es or clc roll arpl (bad) push xor pop sbb (bad) mov xor cmp or cli out add cltd and mov cwtl pop out push scas jmp pop inc andl xor out mov test or int mov pop (bad) jg mov xor test bound pop pop lcall sbb dec dec jmp out ffreep sti (bad) mul xor (bad) push mov push sbb (bad) out call (bad) lcall hlt jno repnz mov sbb fs push insl sub cli inc movsl sbb in mov lods bound mov sbb and into cmp sbb mov arpl mov sbb sbb clc xchg inc mov ja mov imul cmpsb test and mov popf xchg clc gs daa lods pop std xor jg adc add dec ret jne mov fnstenv mov cmp or lret rclb pop (bad) sub dec lods ljmp push sarb pop loopne fisub push in fiadd jnp push ret dec mov pop mov (bad) repnz arpl push test or or inc mov je outsb add mov xor jmp add lret xchg jl and add pusha sub sti addr16 movsl mov fisttpll loopne pop out scas inc stc (bad) mov das add stos icebp push out push xor cmp movsb imul xlat aaa push dec lods xor lods lret int sub mov sbb mov mov stc add imul jl cmp (bad) loop subl and mov dec mov mov nop roll jae fidivr xor sbb add pop push pop arpl stc lea cmp je movsb sti in sbbl mov pop cli je dec sub inc mov or loop rcrl xor loope mov cltd and cmp ret movsb push imul scas adc xchg cmpsl insb lret out loop mov mov sub clc lods pop or lcall mov jecxz (bad) sbb adc dec sbb mov aam gs loopne imul sbb sahf gs in pushw xchg (bad) iret out (bad) lock xchg adc ficom cmc (bad) cmpsl cs xor dec ds addr16 push xor mov sub push dec fmulp mov jns (bad) in cmp (bad) into out or std dec mov mov adc xor push inc test cs adc xor mov jecxz das shll add mov (bad) ljmp stos push inc pop dec in test add or rcr cs nop insb sbb mov imul dec (bad) mulb aas daa or add scas call cmp push jp or loopne (bad) movsl or incl mov repz pop cs scas rcr call xchg aas push add iret add jo lahf es mov cmpsb dec mov pop adc push (bad) xor daa push repz fwait js sarb lods cmc sub xor insb scas jge sbb ds in pop and dec fsubr lock inc ja lret call or xor mov aas mov inc popa out es jle (bad) repnz pop lcall xrelease sub adc sbb (bad) int3 jle cld movl pop movsb pop (bad) adc aas aas push push mov fcoms sub xchg lcall jne mov pop push std mov mov mov cltd lea out rcr lods into push sub pop mov mov gs nop lahf push cmp aad xor test aad sub es out enter dec xchg adc fcoml jnp add scas mov leave push (bad) mov xchg xchg add adc xor mov (bad) mov xchg inc mov fs (bad) imul test cmp (bad) jb push sarb add pop (bad) pop xchg gs scas xchg lods jle pop adc (bad) lcall fildl jmp or scas pusha inc mov push mov inc out mov xchg jnp add add shr push enter sub out arpl icebp add ja out xchg imul mov sub mov xor dec xchg test jb dec fstpt mov sbb scas cmp bound jns,pn idiv hlt sub aad movl and fild mov sbb out push cmp pop aad pop aam lret xchg mov dec jl and xor jmp aam mov cmp call stos cmp pop addb sub sub and icebp jle jne into cmp cli out and xchg insl nop (bad) in or add jns fmull pop inc nop jnp lret mov mov mov sti xchg and or ss xor xchg outsl mov arpl cmc cmp lret pop pushf (bad) call sbb imul sub (bad) idivl scas repz and inc imul mov xor imul je ss sbb (bad) (bad) in iret into fmull mov mov stos rcrb sub dec jge mov dec mov repz pop lret jg jmp and mov data16 inc rcll sbb push imulb inc pop orl inc leave call mov decl in aas xchg mov inc lds cmp push loop nop sub in adc inc pop add add bound imul pop ljmp iret pusha divb adc pop mov xchg pop addr16 mov sub jns stos (bad) stos scas sub and mov lock test bound scas mov cld mov flds mov mov mov sbb push jns xchg sti (bad) repnz in cltd add sbb shl in mov loopne push mov ficomp add data16 jle mov xchg js (bad) mov mov (bad) in lods jg out xchg inc and inc (bad) push mov dec cmpsl divl mov cmp cmp in nop jecxz dec loope xchg jecxz stos loopne,pn popa insb mov addr16 mov test xchg sbb mov mov jg inc fimull xchg inc lods jmp daa sbb cli hlt lods push adc sub xchg fwait and jbe adc dec mov add cltd sbb pusha sub cmpl dec sub fldl or dec xor test jecxz lea mov dec bound xor lret cld dec cwtl mov enter ss fldenv je dec add call daa mov sub lea je push test lret mov repnz add daa gs pop movsb push les loopne mov in lds stc jnp loop sub lea in pop jae in (bad) lcall mov gs in lds mov stos cli repz ljmp aam xchg fs xor shr ret sbb cmp fldcw adc test mov ds push imul inc stos lods mov sbb mov pop sbb arpl and mov cmpsl jns jmp aas pop jnp and in out jmp inc lcall pusha xor scas ficompl popa popf in mov stos sbb aad aaa dec mov cmp stc push mov out cmp jb adc and and loop xor lea pop mov sbb loopne aas inc test mov cmp popa pop movntq out sahf sbb repnz pushf notb mov lea ror jnp rcrb lcall std pop and dec inc sbb or mov ss in adc jno mov push lods loopne cmp loope cs mov pop or dec pop mov jns jmp and data16 jl mov pushf lahf inc andl pop mov cmp insb xchg (bad) mov outsb (bad) mov lds out sti xor cmpsl sbb das dec mov xchg out out jae sahf (bad) xor mov popa cmp mov lcall leave int jo and fistp or outsb in movsb dec xchg insb pusha xor mov xchg enter cmp dec mov mov xor ljmp shrb fstps mov iret leave out and imul jge sbb fwait cmp flds fnstcw imul gs or test pop divb loope test mov loope movsl sub ja int3 or stos sub ljmpw inc jle inc insl jmp insb dec xor cwtl inc aaa (bad) xchg enter pop jge mov pusha cmc sub rcrl jo xchg mov test cmpsl aad (bad) (bad) (bad) imul xchg insb jg insb xchg add repz push xor push (bad) rcl cld lret notb fs aas xor sti cmp sub push jne out xor cmc dec jo fdivrl push xchg xchg (bad) lea std mov mov or adc pop inc inc fcomi lahf faddl std dec xor in mov lds dec jle iret jae aas push fcoms loop in mov hlt mov xchg cmp pop push imul insl adc adc divl lods lea cwtl mov movsb scas push adc add imul test lods out or inc mov clc popa pop test mov pop push hlt mov imul cmp hlt add je repnz jp mov xchg (bad) sub push cmp mov add lock rcll (bad) out cmp je hlt xor (bad) das negb push sbb loopne xor pop inc lret (bad) rorl (bad) outsl ja fwait push xchg xor xor das push add (bad) int3 add mov cmpsl aas or push add mov xor mov or mov xchg (bad) pop repnz lahf push add push inc (bad) bswap in push inc jo jnp cmp popf lret inc cmp jl addl stos cwtl inc pop in adc push jb test and adc ret jl sbb push outsb mov jecxz dec cmp mov jge jecxz cmp push (bad) int in push imul jo pop addr16 pushf sbb add arpl push jne cmp imul xor xor pop ret pusha aaa (bad) jecxz xchg mov and xchg cmc mov add fimul lea push lcall inc lock pop shld sti aad mov jecxz or fwait cmpsl pop sub dec mov push mov lock dec lods mov aad and or imul loop inc out (bad) cltd add (bad) xor (bad) in push ret cmp pop popf pop fistpl movsl repnz inc pop pop xchg pop hlt mov pop add shrb xchg pop fidivrl sub xor inc add add jl icebp dec (bad) and jno ss mov push fcomi jge jns neg fisttpll mov aas push fcompl lock ljmp ds jge mov je into cmp xchg repz mov mov sahf mov mov test int3 xchg lea cs out or ret pop (bad) mov or xchg cltd addr16 push insl mov jp adc iret or insl (bad) mov push jmp popf push ret scas in rcrl cmp fdivrs cmp jae lcall sbb cmpb into cltd rcll mov jecxz lret jno int cmp gs dec stos jns mov xor sbb sub jmp or lea lahf or ret (bad) mov sub adc daa mov int (bad) mov out popa cmp aas lret jmp and xchg jo dec out subl add mov fcoml xor mov je fistpll repz imul adc dec (bad) mov lods int3 ss jbe jne vdivpd scas mov ss mov sti cmpsb xor add out loop scas mov imul pop js xchg mov test negl scas mov mov movsl ljmp cmp mov xchg mov pusha pop xor push or pop cmp mov adc jge (bad) enter call (bad) mov or enter inc adc jae adc in jg rorl cmp dec out ljmp xchg xchg aaa jns push adc popf (bad) pop in shrb sbb or les test push (bad) mov frstor cmp pop push in stos outsb jnp pop cs and movsl sbb (bad) mov cmp arpl cbtw jns,pt fisubr and xchg cmp or stc dec cmp dec lahf jge fbld loope xchg enter xor mov push xchg mov add push lcall inc pop (bad) lret clc inc (bad) sti cmc rcrl cs ds mov cmpsb loopne out adc lods push out cmp sub ss cmc (bad) jg dec sarb (bad) lock cmp sub add cwtl faddl add inc in add mov push dec or mov rorb pop fisttp mov out xchg xchg scas dec pop cmpsb in push sub lret push inc aas sub sbb fnstcw lods addr16 xor sbbb test loopne lret push mov sar jno jp insb fsubrl xchg loope loop sbb inc lret in in std clc jb rcr cmc int3 pop enter lcall and stos adc out xchg mov mov jae in in imul inc mov pop (bad) popa xchg push test dec lods ja mov out sbb jmp (bad) adc and jns jl loop inc pop pop ret jo sti sbb in sbb fs pop call adc adc addl jbe mov adc incb xchg ljmp pop rcrl inc je sub mov (bad) mov aaa xchg aad ss pushf aas and adc roll adc ljmp hlt (bad) in imul test mov mov adc gs call movsl jb cmp mov push add cld xchg add ror test (bad) inc xchg subl jmp outsl (bad) enter jbe cmp fucom movsb inc sub outsl cmp mov les imul dec push jae idivl mov icebp and mov outsb mov sbb rolb jne push jmp cmp loopne fstps movb jmp mov sbb adc rcrl in aas inc nop fld sbb vmovhpd cmp fsts sbb sub std pop fs or ds ret push aad fnop xor mov imul cmp je xchg pop pop mov inc loop ja push cmp or inc mov mov cmp sub adc cmp and fcoms and (bad) repz jp dec xor (bad) jp push jno stos mov cmp mov mov pop fadds sbb sti mov lret leave popf outsl adc sbb out test (bad) push cld xchg inc dec sbb push popa xchg and pop jg mov call imul jbe insb add ljmp addr16 sbb sub cmp add mov mov (bad) xlat dec mov and sub in pop insb mov pop stos lods mov in sbb inc jbe fsubrl aaa icebp push cs insb decb js mov xchg sub and lock out movsl and pop mov in jecxz mov dec jno xchg sbb add xchg sub xor imul insl std add cwtl divl data16 xchg loopne lret pop push aas in dec insb xchg fiaddl xchg lret xchg outsb dec (bad) xchg ss push lcall sub add in je lods jae or (bad) scas shl sub pop pusha inc stc xchg xchg xchg xchg mov jmp stos jbe imul or test fsubl les nop dec add jg push xlat fdivl movsl xchg mov xor mov sub pusha mov cwtl mov roll jle xlat idivl mov in jns push clc sbb xor mov xchg cltd add or popa daa xlat pop ror or (bad) jne gs fnstsw movsb bound or test adc gs push (bad) jl call push push mov pop pop mov fs movb loopne imul out js push push fsubrs stos jo sbb and (bad) jp stos dec cmp scas mov js jnp sbb jae mov sbb mov and mov nop sti dec not loope xlat inc sbb test into int3 cmp add sub mov dec repz adc and lahf repz in push cmp icebp scas mov mov aad sub cmp fnstcw ret adc cmpsl les lahf gs jecxz roll dec bound es pop movsb mov add jne aaa and or adc out jmp mov adc (bad) ja out (bad) sbb popa mov jmp in lahf bound xchg in dec arpl add int3 pushl hlt mov test daa mov pop insb cmp subl lret stos enter das mov pop sub sbb mov lahf inc cld jb (bad) pushl ret pushf lods movsl adc pop loope inc or aam mov pop xchg push fsubl mov nop gs and call and leave ja stos jae gs cltd jecxz sbb cld xchg sbb xchg push cli mov inc testl mov cmpsb and sub xchg ret in cmpsl aam pop mov in int push decb xor ds mov rcll (bad) pusha mov mov scas call xchg je pop in enter lahf das pushf ss xor fwait push sbbl loope test and nop fmul mov xchg (bad) cmp xchg inc adc cmp dec aaa xchg cmp lock shrb mov out test test jns pushf es enter cmp mov insb les dec or pop cmp pop popa cmpsl jae mov xor or mov sbb (bad) jmp pop inc insb xchg push jecxz dec push cmpsb dec ljmp add fcompl ja pop cltd je mov das gs sbb mov mov push mov adc adc out cli aad cmc rclb inc xchg stos (bad) mov mov sti cmp push jns xchg dec mov jecxz stc xchg mov jno movsl inc pop gs mov inc movsl scas xor stc sub out jbe iret imul sbb sub notl repnz test pop fisubl pop push mov lret lods jo cmp or push sarb and ret pop hlt or pop mov ljmp imul pop jg jo call pusha xor mov cwtl ljmp imul add in mov mov and bound in movsl repnz jae fs xor fmuls ss adc jae jbe sahf mov (bad) xadd icebp dec cmp sub mov lahf mov imul (bad) test push xchg ficoml mov pop jp testl jno das out cwtl sbb pushf insb ljmp insl pop dec (bad) dec loope mov and les pushf ror popa pop stos es adc pop dec lahf push pop je mov sbb cmp xor jns xor push (bad) in xlat mov repz jmp cld push dec mov cmp sbb add jbe push ljmp mov into movsl loop jge fadd fimull popa ficomp inc push xchg cmpsl (bad) jmp aad call mov aad mov mov dec int3 fildl fstps pop imull sbb mov mov jne or aaa pop out sub les fs adc shlb js fs mov int push (bad) rcll ret add aam pop popf repnz cwtl sub jb jl jecxz fsubrl jno nop ffreep mov jnp dec mov mov test lods mov out push sub sub (bad) pop pop mov add insb (bad) stc push addl popf sbbl mov jl jne mov mov jns bswap cmp fs sub pop sti xchg mov and sahf testl xchg inc enter mov mov (bad) into push mov add cmpsl adc movsl sub insb inc add adc jg inc xor jb jp fsubl jl lods fistpll add xchg lods scas mov sub mov jbe dec scas adc ds push jecxz sub scas mov lcall pop lret stc push mov sbb enter mov push fs leave adc and or push and popa push loope or cmp cmp shl ret inc sti pop lahf mov jle mov or add push hlt cltd dec out pop inc xchg out cmpsl cmp int dec mov fstps movsb inc jecxz push or jns sarb ret push push jb rcrl fadd inc out xchg pop or lret adc xchg xor jmp cmpsl out jge and push add pop adc cmp loopne aam hlt adc and pop (bad) mov pop fwait test ss out in xlat lods stos sahf pop sub gs jmp mov popf adc mov or sbb push inc push adc out jecxz (bad) adc mov lcall sarb hlt clc shrl (bad) (bad) jecxz inc mov mov lock repz nop dec xor pop mov or mov pop in sahf les adc insb add clc push sbb movsb and jmp pushf mov adc and xor push fisttpll xor add jbe add mov sbbl add or rcrb insb jecxz xor negl mov (bad) mov mov jnp ret push ss dec jnp add cwtl mov jp push jo (bad) sub mov int3 xchg in in add push loop sub and sub adc out cmp jg fnop xor and push adc fldt into lret jg sub popa pushf outsl mov insl mov into xor and or in in test xor and mov xchg dec mov out sbb mov test mov add mov stc mov mov dec nop in gs xor mov aas mov jecxz mov lcall jo lods stc aam sarb inc inc lahf ljmp mov mov lahf inc ret jp xor mov (bad) mov xchg adc or pushf out and and xor test adc pop cwtl cmpsb flds nop mov adc or (bad) out cld push lods sub pop xchg cmp and lret pop jl call add mov push xor inc jl call inc lret pop xor push movsb or sbb mov mov nop mov ret stos mov xchg sbb (bad) aas push cld fs adcl test ds (bad) and enter imul loope jns push mov xor loop jne add ss (bad) adc cmp sub dec xchg mov push insl (bad) into int3 mov pop aam out mov xor cld inc out movsb aas mov mov jmp push cmp pop addr16 xor dec jo jno addb mov xor inc mov dec xchg ret cmpsb or cmc pop (bad) insl add mov les mov les pop adc xchg jbe int3 sbb mov xor cmc xchg xchg out ficom and iret push mov ret cmp cltd push dec fadds fnstenv (bad) add outsb int3 outsl js test mov mov js sahf insb inc daa push xor loope out repnz cmp xchg (bad) loopne adc sbb mov sbb mov cmp jb push ja call xchg sbbl inc fisubl jp ret pop mov sahf inc xor and mov jle and dec jns sub fs lahf xor popf scas data16 leave sub mov dec loope jae dec sub sbb insb pop clc dec mov adc jge xchg push jmp and daa cwtl push pusha mov out xchg gs ss add sub daa fimul cmp xlat push cmp dec lods jle mov mov jns inc in add sbb das test sub push sarl stos into xor sub es shr jo jl,pn cmpsl or fild (bad) in (bad) xor mov inc mov and std xchg sti shl jae mov push lahf int3 lods cwtl fstpt clc pop jp int3 sbb icebp jns cwtl int add stos fcmovnu jns lret mov call jne (bad) mov int dec sarb lret pushf pop xor lahf shrl jae aas fadds dec xchg stc xor jmp mov push push sarb fidiv adc incl jle (bad) push and (bad) out push leave mov inc and and adc dec mov in aaa (bad) sahf cmp dec push sti or push push repnz mov (bad) and (bad) scas pop xor inc pop dec loop pop fsubrl xor sahf test fistpl adcb sahf push out loope and arpl clc fsubrs lret clc loope mov movsb shll xchg push lcall pop leave test (bad) jns mov fiadd repz sahf mov dec es lahf test popf mov add loope mov stc cmp ret pushf push sahf cltd xor xchg push in adc mov stos mov xchg add les daa mov inc jno and jno lret push lds fistp and dec sub mov add (bad) inc or xchg inc leave jmp inc xchg imull and out and or outsl or mov into pop test iret mov mov push pusha mov inc xchg sti test (bad) es ljmp jl out imul xchg and stos dec loop push aam inc jb les mov popa gs mov xchg sbb and das xlat (bad) jbe inc mov mov xchg sub and int3 imul (bad) mov sub adc mov icebp jno pop xor sbb fimul mov lret jae test lods shll ret adc pop xchg aaa jno andl add or subl xchg sbbl pop repnz pop lret sbb stos cmp insb sub mov mov mov lcall dec cltd mov jge pop test add jno sbb lcall mov push mov in pop popl cld add sbb add push icebp stc popf ret or (bad) inc out cmc stc imul sahf bound adc jno dec fimull mov xor push jl lret gs stos mov xchg add jne,pn sbb cwtl sub lods and cmpsl dec andb dec je lcall push std inc pop push pop dec idiv push dec mov test sub mov jns es shrb mov xor rcrl xchg xor mov fdivs js push add mov stos ret dec jbe push jp pop in ret cli pop sub test inc xchg (bad) rorl outsl rorl mov push les sahf add pop loop (bad) lcall stc mull xor jmp inc in sub out cmp lock out sbb aam pop imul clc or pop fcomi imul pop inc xor lea jle stos and sub mov xor enter or out xor fbld scas or mov mov sbb sbb rcll mov jmp push jbe,pn es mov std mov daa faddl das rolb lock xor xchg push xchg mov push loope cmp test ljmp repnz mov dec dec jb and sbb ljmp xchg xor outsb jno mov (bad) push flds test adc pop (bad) fstl jg inc out enter cmp repz xbegin pushf inc ret enter clc outsl popf fisttpll pop adc aaa ss into dec sbb pop decl pop mov enter lods cmp lds call jg and inc push cmpsl dec movsb test mov das ja packsswb lcall sub popa lret cmp scas fldcw out sbb test mov dec mov mov cld in pop push (bad) xchg iret stos mov (bad) sbbl adc and jle or lahf push xlat (bad) pop sub mov (bad) pop inc and (bad) mov loopne adc in mov mov and sub xchg sub mov addr16 fcmovnbe mov or repz ljmp insb lea in mov leave addr16 mov dec add sbbb or mov jle enter inc inc or xlat adcl adc jl mov jnp cmp je mov out je jmp dec push lcall add push iret rcll mov lock xchg lcall mov cli leave add inc imul sub and das sub aam fsubl in add stos push (bad) loop pop ret adc and popa jmp jne bound and sub popa sbb dec outsl mov xorl jnp and xchg cmp add fcompl mov xchg aas dec mov clc iret sub pop shr jle aaa (bad) jae out outsl cwtl (bad) xchg pusha mov cltd mov push repnz mov popa (bad) jge outsl bound xor pop mov jno jg adc jge adcl and sub out cs in hlt in sbb lcall pushf add fnop jo mov mov or inc arpl sub xchg dec mov dec test xchg pop dec jae ss mov push rcll mov insl nop jno sub pop inc or mov in cmp or out mov mov lock jo xchg mov add loopne mov or and jbe and adc push inc cltd dec sub fidivr aad and dec sbb cmc or add jge push ror pop and ret add jae aad add loop in jo cli mov in mov cmp inc jno dec or daa push shrb std adc xchg (bad) ret hlt popf mov and sbb cmpsl lret enter sub or jns dec js cmp add clc and jne pop adc mov cmp mov mov cmp cwtl mov sub aad mov mov jno sbb clc jmp push ljmp fsubrs inc (bad) (bad) loope push xor shl test (bad) mov sub int3 int3 jno scas ss jbe mov call popa push sbb ljmp adc mov cmc clc mov cmp or jns xchg (bad) mov jbe movsl jp gs sbb addl in push push hlt push cmp push cmpl jnp inc je repz ja dec pop fld or xchg xor dec fwait pop push testb pusha imul inc pop xor jno cwtl (bad) xor jl ss js push icebp inc insl fcompl imul out sbb xor lahf dec pusha into mov mov sbb popa cmp jg aam test mov cltd sub push paddq shl mov jbe aaa sbb (bad) xor ret lret inc ret add push push aam xchg bound ds push push mov jno or pusha push adc xchg leave push add xchg mov and mov lods xchg xlat ljmp add lcall mov andb cmp test sub adc (bad) sbb divl fidiv gs repz addr16 pop xchg or push inc or and loope sbb add xchg enter cli dec sbbl push fsubs das xlat cmpsb sahf mov fnstenv xchg and jg cmp aam ss (bad) jnp jns lock pop pop lea pop inc add std rcr mov cmpsl (bad) adc pop repnz sub jo sbb push ret or adc pop adc and inc insb dec xchg lret es lea mov js rorb lds xor loope jge fcomp and std not add stc int (bad) lods lods push outsl (bad) loope pop mov pop dec lret jecxz (bad) cltd lds fist xchg (bad) or or xor fmuls jl stos ficoml or dec stc add aam out ret repnz lock seto jno add sub or in sbb push mov mov dec mov ret add fstpt loope cmpsl imul icebp jns mov cmp mov pusha jae nop popa mov and icebp cmpsb add stos xchg pop out push stc sbb sti adc inc addr16 pop les js pop jmp sub pop jnp sbb cli dec mul push scas popf cmp or add or rcl mov repnz leave sar mov pop lcall ja (bad) es dec xlat mov cwtl xchg sahf out (bad) jmp adc jp stos (bad) xchg out movsb gs loopne push push mov and push stc fsubl out or sub mov cmpsl pop cmpsb adc mov cmpl mov cmp mov mov xchg or sbb fsubrs in xchg mov jo popf insl clc (bad) mov sbb mov jno adc popa fs lret repnz jbe adc les sub adc icebp dec fsubr add pop and enter sub mov jbe call aad lods sub fwait push inc and nop or iret fwait stos mov scas mov xchg sbb lods js jbe scas mov notb cltd inc arpl and or aas stos dec jp inc and jl or (bad) jle push mov sub xchg addr16 icebp cmp stos outsb sub xchg push mov mov pop jp aam jns (bad) jmp int mov sub les repnz xor lret dec push or sbb in add jmp jnp adc xchg mov xor (bad) cmp into xor ret addl imull stos adc mov pop lret insl (bad) mov mov insl dec arpl inc fild ret jle rcrb movsb push outsb dec xlat fimul or push sbb sbb data16 lret aad sahf and fadds pop or mov and lock jecxz mov xchg (bad) rolb mov (bad) icebp in dec or cmp pop sbb les outsb cmp push jg (bad) sahf jae cli rcll incb mov lret js (bad) mov add fbld sar or dec mov jbe cmpl jmp ss add cmpsb fwait lret dec pusha (bad) into jae xor out jmp out cld dec out aas (bad) adc sbb push and mov inc pop sub rcr outsb decb jnp adc dec leave and xchg add iret std and mov lods push (bad) push add sub jnp (bad) mov pushf adc push repnz movsb jo push or lret pop (bad) xor fmul push (bad) pop xor mov dec jge dec dec dec mov jns pop lock sbb lock sbb jo dec call fldl lock insl pop adc stc fwait or out fucomip sbb jns lahf ret fsubs sbbb in pop insb std sub (bad) push xchg loopne jne aaa into repz push or mov nop ljmp shr outsl sbb lcall movl sub mov test push dec adc push add cmp push lcall sahf mov push cmp in xor pop test pop mov sbb insl in adc int mov adc adc xchg and pop orl lret les lock inc sahf adc lea or xor lret jp cmp idivl test fwait hlt (bad) sbb push pusha lret dec xchg sar and stos je mov imul std mov js sub mov push lret jl jl in out mov incl dec imul loope in sbb sahf xor mov es cmp pop aaa jne dec in fsubrp es leave jno jnp cltd movsb dec les fidivl mov icebp adc mov (bad) js ja (bad) push mov and pushf scas das mov cmp mov ret mov mov in mov xchg in mov jae aad add es sbb cmp ljmp cltd or push pop test dec movsl ret sbb (bad) or or repz movsb insl fldl pushf push lahf cmp inc daa jno movsl andl xor (bad) mov call (bad) ja mov ret in jp mov (bad) ds push movsl stos fimull mov pop cld (bad) add sti sub gs xor or cltd lahf cli bnd sub or sti jno movsb inc repnz sar pop nop pop cmp add pop pop mov dec aas mov jbe push xchg fcom jne cmp enter pop add pushf sub mov mov addr16 addr16 gs xor ret and mov mov repnz mov scas js adc imul mov and xor stos inc dec adcl sub sbb pop outsb cltd dec scas scas fwait push add sti mov (bad) out scas imul sub leave sti jmp jp out cmp push inc stos aas bnd and iret lds xor das test jmp sarb xor push cmpsb (bad) (bad) xor sub imul xchg push addr16 inc push add divl mov xor inc mov inc inc or lret rcll cmp enter add js mov insb in daa iret mov lock test outsl (bad) std es pop sbb fwait inc sbb nop xchg cmp sub jmp loope adc aam push rcrl mov cmp mov add or or leave addr16 hlt mov into add sub out inc int3 stos popf mov cmp (bad) jns (bad) jp fnop sub sbb mov fcoml js dec test add add movsb mov ds pop adc loope ret (bad) popa pop rorb push das cmp add pop jb and jae cltd pop jl imul lds sub loope adcl add dec pop scas nop sbb cld mov shl vcvtss2sd cmp fildll jns xlat jns sub mov pop pop pushf pop sub jmp pop push sub sarb iret push out ds or out cmp mov in inc (bad) mov xor test stc sbb xor sbb popa inc and adcl jo and add push (bad) out mov fisttpl imul mov push test add cld jmp mov (bad) call jns cli daa push xor dec sbb sbb loop es jb lahf push lds cmpsl js inc clc lods inc add push adc fiadd jae loopne pmaddwd out adc movsb jo xchg in mov adc mov orl cmp adcl popa dec std out mov clc mov adc adc xchg or ds mov xor pop and setbe or push jne repnz rorb int3 lret add dec and out cmp cmp je lock cli dec push test add lret das mov adc mov sub cmc add ja add pop add aas daa mov cwtl dec divl call mov jle sahf inc push aas jne fstpl sub sub jmp jo or (bad) jle clc sahf in mov pushf adc xor mov loopne cmpsl and lods in cwtl stos pop push jmp sub mov lock adc cmp cmc jecxz push cli jp imul test into clc insl sub sti xchg hlt test lods test lods jl daa daa arpl mov pop int3 ds lods (bad) lock iret out (bad) cmp sub hlt mov fidivl test imul test ret test mov and out pop movsb xor jmp pop int pop jno jecxz lret (bad) rcrb jae (bad) push jmp mov fadds ficoml dec (bad) lds jge sbb push push inc lods stc stc xchg push jo pushf xchg inc scas pop out dec es pop push es add cmc jge xor roll cmp mov (bad) mov (bad) inc repz mov mov ret test mov push ja iret aad mov je subl int fist stos mov mov js pop jle sahf in dec inc test ficom and ljmp lret lods stos mov pop and or int3 dec roll mov sbb testl (bad) mov push inc adcb (bad) mov jg mov hlt xor fidivr xor data16 add mov (bad) jle adc pop cmp xor movsb movsb mov insl mov fdivr (bad) fldcw mov push (bad) add sahf dec adc push xchg and or sub mov cltd fs mov outsb cmc xchg lods push lea lret adc mov xchg aaa add mov mov arpl outsb dec xchg daa or cmp mov push adc add leave push lahf mov iret mov icebp lahf aas mov pop inc loope sub leave ds dec push lea mov fstl daa nop xchg js cmp icebp mov cmp mulb cmc jns sbb xor or push sbbl gs movsl je xor jecxz cmp add sub (bad) aad call jmp cli stos jbe ss lcall and cmp (bad) jns mov (bad) fsubs push cli in (bad) iret mov out call ret jne mov push (bad) xchg nopl mov aas mov sbb add jecxz push sarb jbe xorl fistp add sub repz loopne mov shrb add and add (bad) nop ljmp or add movsl and mov clc fidiv jno loope xchg pop add mov addr16 mov xchg insb popf inc bswap sahf scas cmp stos xor jp lret adc jge mov pop negb imul (bad) add push out pop xchg xor adc add mov mov xchg push nop idivb jmp push jmp jecxz add or ljmp bnd (bad) pop aad sub add xor cmp jno mov push clc cli jmp pop dec cmpsl push mov aas (bad) cmp add pusha jnp sbb mov lods mov dec fdivs add iret dec push dec jge sti adc aam mov lea adc or xchg inc out or (bad) cld cld movsl mov mov pop adc leave pop daa scas pop pop sbb mov addr16 (bad) adc pop and shrb dec push imul je ret fstp bound movsb scas movl push fwait mov fisttpl mov mov jmp aam xchg js mov adc clc adc mov jmp test movsb test inc add adc rcr addr16 (bad) mov outsb jl inc mov pop loopne scas jb xchg pop sti gs leave leave or call stos mov mov xchg xchg or mov jns xchg cmpsl cmp aaa sbb pusha jno xchg inc xchg xchg dec repz mov call mov movsl dec sub fadds jmp (bad) cmp jne pusha push xor pop cmc dec push popf loope mov repnz add aad (bad) jl idivb push or or sbb mov mov jo loopne xor ss xchg (bad) push adc mov mov divb inc inc xchg std sbb pop std das movsb lods enter int3 mov xor mov pusha mov es int iret jno mulb sbb popl (bad) divb es inc sbb stc inc sbb pusha mov ljmp jge mov sub adc rcl loop imul lods jae inc pushl popa imul js int ret jl pop into aaa lock inc and pushf jmp lds or les sbb loope inc addr16 inc fwait mov stos mov nop popa cmpsb fldcw mov mov xchg dec push es hlt jno jp sbb scas or mov cs mov xlat push fcompl mov daa je dec orb loopne inc repz xchg lods sub dec push or movsb movsl lcall and mov push jno mov pushf mov xor inc xchg jno popf mov mov xor stos out jmp fwait in imul xchg mov das mov xchg inc jl jge iret add prefetcht2 push jl mov fnstsw (bad) mov popf mov pop push adc outsl sbb hlt shl sbb cmp inc push push lcall bound inc xchg arpl cmp or insb sub shrb hlt adc pop xlat aam adcl sub fiaddl (bad) pop push mov adc imul jb in push inc ljmp aam in cmp sbb fisubl scas inc repz fwait lock pop out sbb repnz add push mov mov mov sbb andl mov in add fwait ljmp add popa jbe rol out xor fdivrs xchg pop xor test push call push xchg int3 into push inc insb adc insl clc or cld pop push jno adc movsl (bad) push inc dec or aam inc lret lahf aas das inc (bad) out scas xchg xchg xchg mov movlps sahf dec mov icebp cmp mov (bad) push fcomi lock or scas int mov xchg push call jno sub or or xor and dec xchg stos clc inc and fdiv xchg jle pop cmpsb lods ja jmp imul jo and pop nop shll xor dec or adc cli out jno sub xchg outsb xchg add sbb or sub (bad) or out lret bound sub push lcall jo testb xor push and movsb push cmp loopne and sub add mov xor lds insl lcall popa mov add add cmpsb push mov sbb push mov pop cmp insl scas hlt jae cmp jle cmp jg loope jo popf aas test dec shl ds jo cli icebp mov in (bad) gs mov lahf neg test pop shrl popl xchg mov lods pop (bad) pop div pop inc xor jecxz inc mov aas xor jne in cmp adcl sub pop mov mov test pop pop inc in jae push notb imul sahf inc into clc and inc (bad) call in cmpsb dec pushf dec (bad) mov sbb inc dec adc scas shlb ret mov inc sbb cmc (bad) lahf dec pushf daa mov jge pop cs add jmp ret add jp jne aad repz bound fmuls jns into pop sub test out mov sub arpl cmc add dec mov aad sub jbe mov pushf rolb pop pop (bad) (bad) xor mov cli mov push sbb cld out out sahf and outsb mov aas out push sbb shll imul daa hlt mov (bad) push mov mov out or je ljmp test sahf inc jge jbe jle jae adc and sbb bound or push fwait incb je adc xlat jge pop pop xchg cli cmp mov in xchg popf ret (bad) or pop frstor les push (bad) ds mov mov cmp movsb cmp ds roll aad or scas rorl xor popa jmp pop dec andb pusha sahf xor add or hlt and mov add pop ret loopne add push jp adc jbe sub push sahf lret sub jb xchg or mov jno adc lret jle push rcrl jge aad or outsb push xchg (bad) push mov popa lcall sbb mov addb inc pop mov add les or xor sub sbb and jg in xor xor ret add inc push leave popa and lds push mov in fs sbb and push xor xor xor pushf mov clc xor les mov aad sub scas xchg jecxz je data16 cmp or out jmp push adc sub mov push out fxch lea out push mov cmc sarl movsl outsl mov xchg cmpb fidiv jmp adc xchg lret and lds or sub sbb xor arpl hlt sub out aas movsb mov add xchg rol loope fcmovb aaa xlat lods jl push lcall push pop mov mov xchg inc cmp cmp lock (bad) sti sbb enter pushf xchg mov out fs movsb or arpl aas dec and rclb lods dec adc or rcll pusha les inc push ret and jecxz cmp (bad) iret mov xchg fldl or pushf popl mov xchg or cmp subl adc movsl flds mull inc ret push sbb cmp loop imul fisubr cmp adc cs mov les insl pop pop xlat rcrb dec (bad) jne mov fidivrl cltd (bad) inc mov insb sarl jge jne rolb les or xchg lret mov lret xor sahf outsl mov shlb in std sbb xor mov and andb push xor sbb mov cli clc daa mov mov xchg aas sti ss pop sbb sahf (bad) (bad) dec stc jmp rorb adc xor add inc jmp (bad) aas mov sbb push out rclb aad test pop leave call jecxz insb ret rclb add lea push cmpsb int3 inc dec add inc jmp xor and sti sarb out jns inc jns or outsb cmc mov mov bnd cwtl mov loope jmp cmc shlb daa loop pop inc mov fisttp (bad) lock jmp push xor pop ds (bad) mov and dec mov jo iret or mov popf or push loop push push sub imul sbb xor (bad) jmp mov aaa aas sahf lret pop loop addb aaa popf add test xchg adc push vcvtpd2psy stos xchg xor out sbb xor xchg dec pop add push aam cmp sti cwtl mov mov pop add cmc push sbb and aas mov xchg add loopne add and jnp aaa mov cmp lret mov repnz aas lahf inc jg push in movsb mov andl or mov inc and loope mov lret xlat enter inc dec cwtl or stos dec sbb mov addr16 lods sub dec pushf andl cmp cmp xor xor pop setno push and mov popa xchg dec xor popf dec jp push pop idiv mov jae lods das das mov nop pop xchg and mov fwait push sub es pusha or fwait outsl jno cmp mov shrb dec push cmp cmp xchg and call inc pop inc sti jmp daa aas jle push rclb nop sub jp xlat adc xlat and sbb xor inc adc push xchg cmpsb nopl push or int3 ja jg fwait cmpb fwait dec adc cmp or fldenv sub or lret (bad) ljmp iret add sub add jecxz cmp push lcall bound aam sbb (bad) iret fcmovnbe cld aad mov dec cmp xchg test sbb jo jae inc xchg addl mov dec daa mov or jae sbb jle movsb pop xchg (bad) (bad) xchg por scas xlat mov mov pop pop movsl mov sub test scas scas int3 fwait mov test sti pop (bad) fldl call cltd push pop rcr (bad) mov idivl aam jge dec mov scas or je loopne dec push cltd shll pop fwait idivl cmp push mov mov mov sub dec leave sbb mov cltd cmpsl aaa (bad) in outsb mov jbe jne mov dec sbb fdiv (bad) fmulp loop xor add loopne sub push adc pop cs imul in jle inc bound mov outsl inc inc out lds outsl jns ret arpl pushf repz push insb cld adcl scas das rcrb inc stos jmp sbb lret cld sbb jmp sbb cltd repnz (bad) mov push adc sub dec rolb ja pushf test out call in call pusha in mov in frstor nop rcrl popa aas jl sahf (bad) jp aad cld in cltd xor inc gs in outsb outsl and (bad) cltd lret jl xor sub pop int cmpsb int or or incl sbb imul es xchg xchg jp repz in in lcall pop or sub xor xchg inc add push mov stos adc push or scas leave mov mov adc out sbb jge incl sti (bad) decl pop fs (bad) arpl xlat and dec loopne leave adc movsb add sti enter add daa and push (bad) dec mov movsb pop push jo push ret js insb jb inc lock ds xchg inc repnz jmp xor xchg sbb out fistp fs aas mov sbb mov xchg inc xchg (bad) rol popa and or sti dec icebp pushf xlat xchg push ja mov das and mov jns shr mov jns aaa lahf js movsl add popf je,pt sub mov add in inc popa cmp clc lds cli stos jae bound sarl push (bad) lock ret push mov mov jmp call cmp cmpsl xchg insb adc dec xchg xchg sbb lods and xchg mov cmc cmpsl insl bound fcoml xchg add daa mov sub mov das rol int mov stos imul pop dec mov and inc jmp push mov mov scas jb inc push mov imul aam fidivl out rclb or ss dec leave fs jb lret mov lret mov xor push std scas mov (bad) imul (bad) lret outsl (bad) jge ficompl test es dec icebp clc in jno dec jo pop inc push cmp fnstsw xchg int3 fldlg2 pushf rol iret dec fdivrl mov xchg xchg leave sub gs rolb (bad) sub (bad) push cmpsb pop pop xchg xchg pop adc and jae jle int cwtl mov pop imul test mov inc jo add imul jbe mov sub jle push mov jo push movsb pushf imul in adc mov add in vshufps sub fnsave out sub push xchg cld pop (bad) push cmc jae in pop xor push aad adc mov js jae ret pop test testl into mov lss xchg outsl leave pop cmp mov decb sub sbb pop jb nop fstpt aaa pusha xor popa insl mov or repnz imul loopne mov add push aam ficomp scas pop dec or mov mov daa in pusha (bad) adc sbb add xor and addr16 mov cmp mov xor lcall mov xor ret jbe jp lret sub add and es (bad) les jmp push mov xor lgs mov lret ja addr16 in mov jnp xor mov repz or cltd push sbb in and mov xchg ja pop push mov and scas cmp pop jb mov push mov mov mov pop cmp fbstp mov popa ficomp and pop push and mov cwtl lods into enter cli or aas roll mov add aaa fiaddl movsl xchg sahf sahf pushf pop inc jb jnp test mov outsb sub cli and jo outsl test jg sub or aam push add push ret icebp adc pop jb adc movsl pushf icebp test aas imul testl (bad) les add cmp (bad) mov xor rorl cli subl int add stos sbb add jge mov test jg loope dec repz cmp js jecxz gs mov or cmc inc pop out call jo das push and push jno and lret adc push sbb das sbb inc xor aam sub push lods jg add call sub lcall jmp lret push (bad) ja mov mov loop dec pop addr16 push inc stos cmc enter dec jne or xchg jbe inc rcll cld daa mov loope je fadd mov movsb add xchg push cmp sbb cmpsl jge jle ret out (bad) mov cs rcll adc and inc add jge mov dec cwtl dec loop test add mov mov fldenv inc jl xor out test ret jae or call test rcrl mov sbb bound pop jb inc and jl loopne mov aad push out adc mov test sub enter (bad) (bad) sbb div dec data16 mov add test sbb jo mov jne sbb cltd push lods clc dec nop mov cmpb push pop xchg lods shlb imul bound mov xchg cltd mov mov pusha xor imul (bad) xchg lods cld pop xlat std or mov (bad) cmp shll lods daa outsb jp (bad) jl mov lret lret out hlt les inc xor imul call jecxz mov jecxz push cmp xchg ljmp (bad) mov jno loope mov sub stos in or addr16 (bad) or sub idivb sub mov fstl or cltd mov pop leave sbb and negb mov pop push outsb jg (bad) mov cmp xor test cwtl stos adc daa cs xor pop fs inc fstps xor or aam xor ss out test sbb sbb daa or push push fisub mov pop push adc aaa in and lret cmp add movsb fmuls pop ss int3 xchg add push pop xchg and dec push adc fistl icebp sbb scas lods nop (bad) inc jnp fucomi loope mov (bad) jb xchg mov xchg aaa (bad) mov fs add out lcall das loop and andl les pop aas (bad) pop jno fadd adc jbe jb and lods sbb add jb adc inc ret in xchg in in lods (bad) orl pusha push or rolb ja push adc sti push cwtl jle sbb enter push dec ljmp inc lea in mov sbb mov and adc in flds daa aad es and push dec mov cli out mov int mov pop (bad) xor cmp std mov pop xor pop sahf stc out daa divl xor clc call jo into sbb pusha leave fdivrs dec mov mov subl mov pop inc jp mov in mov xor or mov lret mov adc xchg or adc (bad) xor jle (bad) mov (bad) aas or sub and jp out (bad) xchg and fistpl jae xchg xor test mov add xchg (bad) (bad) push jae sbb ja mov sub mov pop dec dec cmpsl js lods pop mov pop aas int3 outsl insl jmp aam jle sbb test das mov jne dec mov loopne or outsl in and adc (bad) sbb arpl addl add xor and test jne cmpsb ficomp inc adc in cmp sahf cmp aaa xchg pop xor cmpsl sbb jno test mov and (bad) je cmpsl (bad) shlb or cmpsb mov sbb rcll gs scas enter mov lea fsubrs or test insl addr16 hlt cld (bad) jno cmpsb xlat leave insl cltd test loopne (bad) ss jmp leave arpl loope or outsl push mov dec xchg fidivr sbb lret jne mov pop sub pop mov addl sbb cltd add subl xchg xchg test mov sahf imul lahf mov ss pop pop mov out mov xchg adc scas nop outsl adc mov jbe enter pop sbb mov out and pop push xchg repz mov jl push jle add lret loopne rclb xchg pop sub lcall test bound pop cwtl icebp lods insb lods add mov cpuid dec pop xchg cli (bad) ss mov sbb loope push mov push addr16 mov aad sahf mov and push cmpsb inc (bad) insb rcll sbb mov je fcomps imul pusha jle adc addl sti fdivrs inc sbb lods xlat or imul pop push jno ss outsl shlb xor gs jp add xchg cmp add mov pop mov mov sbb sbb pop dec cld mov es or dec (bad) mov in add stos lock push adc aam xor fmulp xor iret and adc out les jb mov pushf or sahf xchg pop aaa or pop dec mov xor jmp xchg pop les cmp fldcw ret mov in or andb fimul subl gs (bad) push xchg lret pop hlt dec mov stc push das (bad) fisubrl stos addr16 add adc in cld sbbb (bad) cmc lods sub insb sub (bad) pop and rcrl call push loope daa cmp fisubrl mov pop adc inc xchg aam xor stos dec inc dec mov in or outsl inc pusha dec and pop ds cmc jge mov add adc xchg hlt fist inc arpl ret jno nop cmp iret or add in arpl sbb loop stos cmp das xor xchg test add sub lods inc mov cmp test push hlt in mov push and mov sbb cli aam fsts flds jbe insb cltd fs je (bad) xchg push movsl out test frstor imul ds xor int mov jp xchg inc mov (bad) repnz sti clc push (bad) aaa xchg gs stc scas mov inc sbb decl inc mov add mov (bad) hlt push int mov jge cltd add pop ss ds mov inc fisttpll sbb fmuls add jmp xchg repz push xchg jge bound lcall (bad) sub push lahf aam adc adc mov fs lret stos insb xor iret cli shl xorb int3 pop adc jno das push jmp add jne jns subl cmp inc imul lcall xor inc xchg ljmp dec mov ja ds adc xchg cmpl jg or adc inc aaa mov out mov test jo ficoml cs xchg pop dec or add or push mov mov add popf add jge sub jnp repz jno imul inc addr16 mov (bad) out add pop jnp (bad) mov mov (bad) xchg jnp fmulp roll fstpt sub mov adc add mov push mov and cmp xorl dec inc pop jo (bad) pop jg cltd (bad) lea enter cld test pusha pop pushf cmp xchg mov pop pop popa inc movb sbb enter and xor mov vmovaps push pop aaa adc adc stos lds add movsb icebp mov jno xor cltd adc mov (bad) cmp xchg scas lds les stc mov xchg popf inc sbb lea xor pop arpl pop xchg mov aaa dec int3 xor loopne les cmp xor jno outsl sbb stc adc jl rclb aad loopne and int scas and jl (bad) stos mov cmp lret jo mov data16 or lret roll (bad) jne xchg xchg add cmpb mov fwait jo xchg jo inc pop mov cmp ss sbb leave movsl out into dec sbb jb mov lods mov push inc in add cmp xchg jae test unpckhps dec add shlb sbb sbb xchg pop in pusha mov xchg je es call xor pop xor lods clc and hlt cli push sbb mov ss jbe (bad) push data16 fs push mov sub je jae cmpsb fldl loop and dec orl pop scas (bad) out lods cs push test out mov inc (bad) lock mov jmp add rclb (bad) push pop push in (bad) jnp divl loopne cmp fdivs aas daa leave mov jmp and scas gs pop pop lcall xor pop cmpsb and xchg sbb testl mov out out pop popf sub push mov call cs cmpsl sub das lret add fcomi fsubs stc scas cmp sub (bad) adc add enter inc cmpsb loope addl hlt cmp xchg in mov dec pop popl fcmove ja xor mov insl (bad) stos int3 repz mov (bad) mov inc stos out das das dec inc (bad) test cmp pop ljmp ret arpl inc pop shlb out test enter xchg mov cmpsb push inc push scas mov jns repz lds and pop out in dec fs mov fwait adc rcl and inc adc mov jns pop mov jge cld dec int clc and (bad) cmp cmp inc int3 pop inc aas sub (bad) sub test dec sbb xor xchg and int3 out ss jg movsl mov js aaa cmp mov hlt out test inc mov (bad) dec lahf mov push pop mov push repnz out lds jge test push jnp sub imul push mov jg fsubrl cmpsl fs sub inc paddq push add std ret or ret stos (bad) cld bnd cwtl rorb mov push add scas popa scas sub fwait jb adc pop jno scas sub and repnz mov fistl push mov mov sbb aam ret aas jbe xor add or cmpsl cmp mov mov lea andb dec inc and sti loopne or ret lods pop inc xchg hlt push test sbb enter outsl jns xor into loopne inc add dec jecxz pop bound dec pop mov cmpsl or mov lahf pop insl addr16 mov adc ss mov or test cmpl jg movsl addl xchg mov xor mov iret scas lds mov and mov push (bad) jle sub pop sbb mov jno test mov xor xor (bad) xor mov mov add leave pop push cmp cwtl and add clc mov cmp sub xor inc or mov jle and rcll imull (bad) subl aaa out lcall xchg adc pushf mov push mov psrld push adc xchg rcrl mov and sub in sahf fisttpll pop push stc push out cltd sbb add mov lods jns lods outsb mov jb fldenv pop test mov xchg mov jnp nop pushf add xchg cmp pop mov rorl repz xor push js sbb jne and (bad) pop and (bad) in lret mov pop sbb adc iret mov mov xchg push and add dec dec jge adc and mov pop stos rorb addr16 jg inc (bad) cs mov pop dec sub sub or inc int addr16 adc jge adc lods cmp shr out push sub inc paddd sbb je mov (bad) dec cmp adc outsl and xchg dec paddusb add (bad) push lea or cwtl movsb fildll inc mov pop loope icebp neg cmp ret std push stc loope jo sub lret xor outsl lahf add faddl (bad) mov aad enter mov pop loope add add push or cs cmp js neg xor into mov xor or pop cmp push sti dec or push or adc arpl xor fstpt sbb imul cmp ljmp jmp dec add add enter scas jno gs arpl mov rep push cltd sub pop ss stos call sub mov cmp pop sti mov jmp mov cmpl fstpl in mov loopne sar scas insl lahf aas xchg aaa out mov lock (bad) mov ljmp jb xchg push mov popf popa and jne pop scas mov loop jecxz xor jae cwtl xchg dec mov mov push fsubr and aaa pop push xor clc cmp jecxz sahf (bad) loope xchg push addl mov lahf faddp (bad) ret ret dec add sahf push mov xorl es add dec add xchg pop jb push negl inc loopne clc add jns or bound icebp daa int fbld mov adc sbb daa call sub out push (bad) pop mov fnstenv aad sub add rcrl (bad) pop sub jg rclb jge inc mov mov cwtl inc iret jns adc inc push pop fwait fs xchg cmp ret add in daa pusha pushf aam adc ret mov xchg cmpsl inc mov mov cmpsb in jne pop jae pop or loopne push shll cmp negb js sub (bad) jl or imulb cmp xorl stos dec (bad) add add insl lss (bad) inc hlt das je mov and xchg inc ja inc imul jecxz fstl push push daa mov sub fisubrl divb jmp xchg fs push std stos fwait cwtl enter mov adc xlat sbb pop mov xchg outsb shll rcrl lock outsl int3 rcrl (bad) (bad) loopne mov leave add fmull or ret cmpsb mov test sbb call mov loopne push push pop inc loop adc test popf mov scas inc addr16 stc adc cli or add lret sbbl push test push sbb negl pop jmp cld fld (bad) imul out sbb aad fcoml arpl mov fdivs notb xchg das cmp push cmp fildl addr16 jbe cmp shll cmpsl daa clc popa inc test les xor mov dec or sub cltd (bad) jne mov ss xor lahf xchg test hlt mov iret fsubrs adc cmp cmp xchg xchg pushf pop cwtl jge (bad) mov out and and cmp leave fdivr (bad) cmc pop or (bad) sub jnp adc xlat cltd scas and stc movsb adc push mov popf repz push sbb xor lods or inc lret push mov push mov outsl es dec jno xchg jp dec add test and outsl lret loop pop sbb cmc (bad) test loopne cld repz iret leave int3 xchg lret aaa fsts lret stos add mov in xlat out lea inc loopne int3 jns mov jb dec mov dec loopne sub mov push jl fldt mov mov xchg push and and mov lahf jl and dec and sub das ljmp mov push out pop xchg xchg adc or mov gs shlb mov test sub (bad) mov sub movsb dec and test daa insb xor pusha or test mov stos into fdivs scas xchg and jmp cmp cmp test mov jg mov sbb pop push inc lret pop mov sti ret push testl or mov fisubl mov enter and or adc outsb cli jl push nop pop cmp out add popa rcl subl xor mov mov pop inc pop xor arpl (bad) xor inc leave iret fxch jp iret and push and fsubrs gs sti inc cmp sbb jmp mov or cli push out jbe nop mulb lea push mov cmp popa add jecxz xchg mov arpl inc icebp lcall out fnstenv mov cli sbb scas mov pop or cmp shrb imul fnsave pop pusha pop fwait dec arpl add push mov lret xor jmp scas in mov aaa bound hlt outsl push xchg ja add cmp ret outsl mov pop mov or call or or int3 outsl push dec adc mov push push xor int3 mov xchg daa testb inc sub xor (bad) jnp lock ss jg scas leave xchg and lret push mov js mov (bad) hlt push push loop jbe ret pop enter int3 xchg call (bad) mov cmp xor test sub fs adc pushf bound scas ss or or sarl fsts push pop xrelease iret (bad) jae (bad) dec out dec sbb push ret ss mov cmp cmp mov fild data16 xorl and jnp push addr16 out arpl add mov test mov jb cwtl lcall adc adc pusha notl add hlt mov out cmp and mov fisubl and mov cmp lea lds mov jge adc cwtl adc xor mov cltd movsb or dec icebp aam leave int repnz dec aaa cmp jno push mov (bad) in ret and and mov lcall mov les xor push loope jp call mov imul arpl and mov popf fisub jb mov hlt mov jno xlat and jecxz jno adc repnz das mov mov xchg adc jno fsubl pop test pop ja mulb xor sbb scas pop mov orb cld mov and push aaa push and jae enter adc test repz adc int3 fidivr hlt sub adc mov shrl mov push out fdivrs push popa in sub movsl arpl pop inc fbstp js sbb repnz pop add xchg sbb out add mov xlat jp test cwtl xor dec sbb mov mov ds out aas call test mov and outsb test out mov sbb std jle (bad) outsl or and icebp adc stos push bound or and xchg dec jmp adc mov pop (bad) mov inc ret or cmc cmp jecxz or (bad) (bad) fcompl push xor pop sbb cmp and mov imul outsb sti repnz sub push dec cs xchg jge mov in mov lret stos push (bad) inc xor jmp fcompl mov jae popf out mov popf (bad) or push cmpsb (bad) shrl test les popf jne test rorb sub pop ret dec xchg xchg xchg mov fwait xorl mov outsb mov add add push sti shrb (bad) fidivr sub xchg popl scas add or arpl out lcall sbb cs cmp push mov sti mov cmp in (bad) mov xor loop jne mov adc cld adc add add outsl cmp lcall aam add pop mov xor xor (bad) mov mov sbb or or imul mov mov mov jle fisubrl add (bad) loop cmpsl (bad) xor mov dec jecxz loope gs dec push sub push or add dec pop xor mov push pop shrl or mov rorb sbb xor rcll pop mov outsl (bad) jmp fisubrl outsl adc push xor push aas mov mov pop sarl lods xchg add xchg arpl push pop movsl cmp call leave test dec push pop push mov pop push push bnd inc ljmp fwait in mov jg fsub dec cmp das inc and jae add push loopne xor xor pop nop xor adc xchg and data16 jb movsl aaa pop jns rorl stos cltd (bad) fsubrs pop sahf dec sti pop jl pop xchg lds push mov sub sti cmp test lods fwait mov inc movsl inc dec fs sbb adcl aas pop scas lods dec or pop mov push ja notb lahf and inc and push es xchg je inc ljmp roll gs sbb ret push jp mov aad nop clc test (bad) cmp lcall cmpsb test inc cld xchg mov movsb mov into insl mov orl push push leave test sbbl popf repz lahf gs adc mov in dec lds mov aaa loope (bad) lahf fsubrl (bad) or enter jne xor and sbb xchg hlt out and inc cmpsb ror ficoml ret test cmp fldt jns mov or adc in int push sarl mov xchg mov adc xchg mov pop mov dec cmp mov push loop mulb dec mov movsl xor inc lahf pop dec xor jmp mov mov jns sarl scas add jle jno imul movsb mov xor xor xor adc imul xchg xor jnp cltd or and scas mov sbb push jl insl mov aam push and stc mov mov (bad) aam mov cmp ret sub xchg js inc cli sub (bad) jae cmpl sbb mov iret in popf sbb xor lds test dec mov xchg es ljmp and or xchg push xchg fiaddl pop (bad) and xor in pusha arpl insl mov jmp cmpsl mov add and lock push callw xchg cmp imul imul adc sbb cmp cmp xor sbb fistpll addr16 cmpsl jne movsl mov (bad) insl sbb adc mov or and push mov dec and jne mov adc push mov fadd icebp pop scas jg jmp stos sub xlat jg dec pop sbb fs (bad) stc in into repz std out mov and fs cmp sbb rorl jl call adc pop in pop sbb sbb xchg mull mov fs and mov fildll jbe mov dec mov ret enter lahf fadds jp jecxz sbb cmc mov jo dec ret pop mov addr16 xchg cmp enter daa test push mov (bad) enter mov fmuls cmpsb fimull and inc pop or mov jecxz dec add iret dec aaa clc xor jbe movsb repnz add fwait (bad) (bad) out jge xchg shr fucomi sar (bad) cmp sbb pushf rol cwtl loope shrb out jl xor sahf popf lea jae mov mov scas mov cmp sbb int3 cmp xor int lret mov repz add or stc push imul cmp ss cmp arpl pop test repz (bad) divl pop mov fbld aam jae cwtl iret aas aaa and rcrb (bad) add jl stc and push int imul shrb cld push pop cld xchg dec jmp sub inc dec adc lea add xchg mov in cmp pop pop arpl mov pop ud2 fs hlt icebp test in lock or (bad) addr16 jecxz mov add mov jle ret and mov push ds push das xor jecxz mov or sbb cld cmp cs sbb push ja mov bound adc mov sbb out inc fs fisubr add mov xchg aaa cli das mov aaa les mov addb sub inc scas jle and andb mov mov lods aam mov lcall call xchg xchg lahf repnz addr16 aad lcall ret dec cmp mov dec insl leave push flds aas out into lret add or out xor add dec shr push mov test pop cmpsb jg mov sbb push add mov (bad) cmpsl fwait sbb les loop lods dec les xorb call sub leave mov pop jbe jbe jno (bad) or and sub jno and mov jg dec out add stc xor imul mov das jg mov or mov pop (bad) outsl lods xchg mov mov mov stc adc mov cmp dec push ja mov (bad) rorb push mov mov loope sub mov adc jno in out mov mov jae test movsl in call xchg adc andl push call les mov mov jo fsincos fsubl int lds (bad) inc sub add mov mov push mov sysexit out cmp pushf jmp nop cmp cmc mov out fmuls push sbb mov xchg enter sbb or push insl jle xchg lock pop mov push cmp mov cmc jg pop cmp repnz sti repnz (bad) mov rorl mov mov out mov pop xor sbb roll (bad) xor or add cltd xor lods (bad) mov scas xchg sub sub cmp pop inc inc mov andb fucom cltd mov mov sub sub cmp jns xchg sbb in insl xchg repz and push push mov dec jmp inc mov and add cmp jmp jp pushf shrl insb xor in add popf ficoml add cmp mov or pushl xor or mov push xchg jmp push xchg js (bad) mov xor add lea sarl cmp loopne cwtl pop mov inc sti pop jne in pop outsl lods inc cmc movsb ds rcrl xor popa push pop xor (bad) lret adc das jle aam dec sub dec dec push imul sub mov std or sub leave push adc pop adcl and cmc sub out iret push pop aaa daa out pop push and daa push sbb imul xchg xchg lods test iret dec outsl inc cwtl mov loope popf imul cmp scas int and insb pushw je arpl lds popf lcall pop inc nop xor inc add mov pop (bad) scas in lods xchg mov test adc inc loope cmpsl leave push test cli or adc jb mov mov xchg mov xchg stos cltd mov in add leave das outsl (bad) dec jnp shrl insb ja push mov rolb movsb aam or jecxz pop adc cld adc lods imul mov scas outsb into and and out pop jae inc aad sub arpl mov gs cltd mov frstor in leave out (bad) pop xor mov pushf mov jp push pop inc sub and hlt cltd jbe lds jp mov mov mov mov sub roll stos mov pop push jae cmc in repnz or add xorl lret iret jne scas adc dec push xor jb cmp fnstsw xor jns ja pop jbe lock xchg data16 ret ficom enter insb fbld out cld jnp sub add lret push mov and sbb push outsl (bad) sarl jmp lds xor jb cmp fcoml (bad) cmp mov js xchg in mov or xchg aas or ljmp sahf clc scas clc xor (bad) pop cmp loopne frstor pop add insl lock jnp loop insb mov adc pusha out cvtps2pd inc sub shlb and adc jl subl mov test test jg inc or frstor pushf in jo clc mov jns nop jp push inc cmp enter sbb nop and or sub jl or clc mov sbb sbb cmp mov sbb and ja dec ds push (bad) lret lret inc insb int3 nop mov jns imul into jg lods or iret (bad) int3 xchg xor fistpll je popf test out xchg (bad) jp mov cltd inc pop test lds movl (bad) xchg sbb jle loope adc cli imul or shll leave and inc sbb cld mov jae inc add lods stc jns mov fild mov xor push fwait ja rorl cmp inc cs dec loop imull ret and pop mov push je xchg jae pusha mov ficomp in cmp lahf dec fwait inc jns out xor sbb fidivl lods pushf movsl das mov pop dec mov or mov pop push dec test jbe inc mov xor daa icebp pop dec scas pop mov dec cmp dec push mov sbb gs mov xor fnsave sti ljmp mov sbb and xor dec shr mov jnp jl sbb sbb (bad) cmp (bad) jnp out inc out movsl addr16 push stos jo scas mov xor fisub mov jnp mov movsl les and xor stc stos push mov in stos bound mov xor pushf push test cmp dec inc xchg sub sti push add jno sahf xor mov and (bad) pop mov pop into in dec mov dec mov scas mov in sbb pop cmp int sbb cmpsl lods dec andl ja jnp jns xchg mov xor mov and pop lret fdivs div xor (bad) adc dec xchg imul jecxz mov sbb xchg rorl sahf adc (bad) enter lahf lea jo test mov outsl sub je sub sub (bad) out xlat stos rol lods icebp icebp cli sarb sbb jb sub pop push push mov pop insb jae push into cs add sub push xor and sbb cltd test xor repz test or jne mov test adc imul popf cwtl and and sbb bound sbb sti test jmp (bad) xchg loope jmp jne clc mov and jg jnp pop rcl rolb cmpsb (bad) or inc inc andl push scas scas lock mov test ljmpw lock inc inc pop pop mov (bad) cli mov cmpsb fidivr xchg sbb in mov pushf idivb das hlt iret (bad) stos popa mov icebp cmpsb mov push add mov dec adc in pop fwait loopne rcll or mov xorl int lret pop and inc fcmove push push (bad) xchg icebp js jne movl mov pop (bad) sbb mov es pusha push repz mov xor mov mov push mov lcall (bad) xor insl cmpl (bad) call je and sub cmp (bad) fidivrl js adc mov sbb or out add xor stos xor inc in push xchg fs mov jnp mov xor aad test push push xchg (bad) mov mov fwait cmp icebp mov jl (bad) das data16 sahf divb pop push and faddl xchg add popa cmpsb fwait mov pusha add mov and jne mov imul inc xorb test inc adc dec gs add rcll mov mov and lds xlat ret outsb sbb mov xor mov xor mov fwait add xor pop adc mov push jmp jle mov push stos lcall fwait sbb jge xor arpl mov (bad) imul push fcomip popf inc inc push push pop iret lock cmpsb cltd sbbl test adc ret scas pusha mov adc clc (bad) (bad) jno je xor push xor push arpl adc mov out out and and inc adc and mov cli iret mov cmp push aaa push jle cmp or aam adc icebp lcall inc aaa push test mov xor sub or mov shlb stos and jg cmp decb insl sbbb cli pop fsubp inc dec pop sbb movsl test (bad) movsl or add cmc arpl push pop xor enter fisubrl ss dec jle cmp pop movlps cs nop lahf mov sbb pop stos add jo adc xorl mov cmp add imulb insl fs sub push jno out push shrb nop loop or sti cli and pop or loop dec stos xchg xor sti ja pop or push in push scas lret stos mov popa dec sub mov lret push cmp push mov mov add sbb mov in add out icebp loopne mov xor shrl mov add movsb push (bad) dec xor out or cmp dec mov mov push xchg xorps mov inc mov add push mov xor xlat loope pop mov jge or in ds add mov pusha mov cmpsb out in mov xchg imul dec fmulp xor mov and int shll std dec mov adc cwtl loope push jns popf pop out cmp mov mov out cwtl imul xchg push lods inc pop sarb xchg mov ds leave and jp mov push pop jle into jb aas fiadd jg rcrl push fstps (bad) mov cmp cli add movsl dec leave push add cmp out popa xchg dec jne insb dec push out mov adc dec (bad) pushl xchg mov xchg imul dec les (bad) stc adc cs inc ja cs xor and loop xor in cmp arpl addl jno pop push cltd adc pusha inc xchg inc jle lock pop pop lret dec sub dec dec movsl into push popa mov sub add add repz jnp call mov jo test xchg dec hlt adc mov lods lea lea sbb es dec add push or out stc or push stos lock and pop mov xor aas (bad) and ds adc mov xchg lret out dec mov imulb in pusha push cmpsb pop mov lahf adc mov mov stos int test fdivs or jae mov inc and add imul cli mov push clc xor cmc into cmp outsl or sbb jo rcll out aam push aaa push movsl in sub mov lahf mov push add call nop addr16 push inc mov testb mov jmp inc fistpl aad adc xchg loopne daa add push out pop iret int into loope jb mov faddl jae xchg stos ljmp lahf (bad) ljmp lods mov fs popf mov push sbb sbb inc dec ss sbb push sahf xchg pop mov mov aaa repnz stos aam orl into sbb sbb jb std jae mov pop or leave cmpsl bnd sti dec or jg and (bad) and or roll lock pop xchg mov cwtl add sarb mov cmp and mov test fisubl les adc pop pop test insb stos sbb xchg mov xchg mov imul mov scas call in sti inc jge (bad) movsl in fcompl fstps (bad) and or mov push clc inc aad mov mov mov inc repnz push cwtl call mov scas fistpl jae insl cmp push je cmp push aaa pushaw mov mov icebp cmp js sbb adc in ret adc (bad) das sbb loopne jl xchg cmp sahf xor fwait daa out jge rol mov cmp cmp call or fdivl mov test ret hlt push pop out jo scas loop xor bound (bad) push lret aam or sub stos mov rclb xchg in adc (bad) push sub pop and pop iret test dec cltd cwtl mov lahf adc xchg jmp jne fcmovb xchg mov daa sub ret jns xchg mov sub cmc and adc sbb test push add xchg scas mov outsl jbe pop lea dec jg xor (bad) (bad) icebp push mov (bad) rcrb js pop div mov or loopne xor add jb cmc adc xchg mov add stos push or inc int3 jge gs xchg test rcl jae stc sbb adc movsl push ljmp enter mov (bad) mov rol imul add jbe pop testl cmp fiadd (bad) jne nop stc adc inc mov lea adc int3 sbb jae push push mov inc into test movsb ds out mov test sub sub inc push repz fidivl pop out inc aad push out lds inc lods fidivrl push jp mov xchg aaa dec xor lea pop pop inc mov jno icebp in loop loop adc xor xchg std jecxz cwtl cs aad mov sbb cwtl cwtl pushf mov pop xchg mov add sbb shlb cmp push loopne push bound mov mov ret imul outsb dec arpl sub addr16 jmp es jb push pusha insl js enter or lods addr16 xchg mov xor xchg sub cltd shrl (bad) dec xchg outsl stos aaa arpl push add rorl xlat loope shr addr16 push push or jl test adc or das into xchg fidiv repz mov movsl outsb xchg pop lea jmp sub jmp cld clc in xchg xchg lcall dec mov bound mov mov push push xchg xchg jl flds imul rcl (bad) movsb std and push dec mov push pusha rcrl sub inc xor cs test sar push lret xchg stos push inc mov shll mov push push mov pop push js push das rorl push or jb roll cmp push push in mov and fs mov inc cmpsb pop clc cmp xchg hlt insl scas xor xorb dec push dec bound out (bad) push bound pop or mov loope mov loope jmp stos clc outsl lods fs pushf or xchg mov arpl in (bad) (bad) leave jno ficompl inc add jb lret mov ret mov inc push or xor cmc int nop cld mov xchg aad cld dec inc jb cli ds fsubrs mov out lods into adc adcb dec sarb popa (bad) mov negl xchg cld mov or jge (bad) mov insb cmpsb cmpsl sub lret inc test leave mov and lahf insl rcll das jno out pop add mov jne cmp movsl add or stos outsl stc (bad) lahf je shrb arpl cmp movsb pop mov sbb popa cs sub into jmp mov fdivrl call add cld cwtl pushf cmp jns inc jge aam lret and mov repnz push mov daa xchg xchg bound jecxz cld movsb ret mov aam xlat jecxz cmp push mov jmp inc sub jbe sub sub mov xchg movsb inc cs jle or lds fwait jae daa add shr add inc test aas mov push icebp or fsubrl jl lods popa mov pop aas ds jbe clc pop cmp (bad) fcoml mov rcrl cmp in out bound mov sub or mov (bad) push (bad) pop sbb test movsl pop mov xor mov pop cmp mov mov outsl das adc rcll int3 add ret or aas pop dec arpl lcall repnz mov loopne iret jp lret aas insl pop push lahf adc outsb fildll cltd xor pushf adc push dec sbb xor cmpsb jno jecxz mov pop inc test xor lret int3 mov fiadd icebp xor call fucom push xchg mov or mov enter shlb xor jle stos sbb sbb int jle pop sub outsl cld or and mov cmpsb loop mov and aad lds push mov scas inc sbb and dec lock sbb cmp cmpl test cli popf flds subl lahf push daa mov (bad) jno enter and bound lds enter jbe mov mov lods test push clc daa mov cmp out pop pop lcall jle or stos cmp fdiv dec jge cmpsl aaa xlat xchg cmp jns mov xor in dec push mov cmp in (bad) xor or and nop sub sbb shlb and stos in pop jno gs pop jne xchg jmp sbb loope jnp (bad) in inc lcall and sbb lahf neg cmp sahf sbb push cmc lret sbb lds (bad) cmp mov lret xchg js loop push adc imul sbb and flds sub pushl stos lea ret push add in arpl inc imul sub mov or mov jbe stc mov and sub adc and insl lret sbb clc sub jb jl je icebp (bad) (bad) hlt mov outsl stc out xor inc sbb loop insb jne add inc icebp (bad) push leave mov clc adc pushf das rep sub cs fcoms leave or jg and xchg jbe dec xchg mov mov das imul shll adc inc pop cmp sub jmp and subb and jno bound shrl je xchg sbb roll stos jb call dec in nop lods fidivrl adc pop mov mov or push cmp mov mov jno (bad) xchg sbb das add cli inc imul push pop enter fidiv dec int jb xchg cmp mov jecxz add mov mov bound mov sar xchg out dec pop test push add or adc test rorl in adc jle cmp push out int3 inc fisubrl push (bad) pop sbb xor sarl ret nop std or fnop clc dec add mov pop es dec stc push sahf (bad) fcoml in adc bound or es sub mov mov push mov nop aad cmp gs adc mov or mov pop mull aaa fisttpl inc xchg int inc xorb (bad) mov into push sub and dec div in je jo mov shlb sub loope bnd lret gs sub pop push sbb add aas jp imul pop fistpll repz cmp (bad) jbe push xorl push test in jecxz sub into mov pusha jo incl jmp and mov test icebp xor pusha xchg cmp sub mov cltd add pop add gs lods and jbe lock lcall cmpsb lcall cmp lcall and jo mov pushf sar xchg or cmp (bad) jle mov xchg xor cmc fldt stc in flds repz sub outsb push lret add outsb dec adc xor popl and cmpsb out add push lods xchg out pop adc pop mov pop inc jns xchg mov int3 in stc push mov jno and scas stos cltd sub mov das jge das iret pop in push lods cli fstpt add and add clc pop pusha add daa and aad xor xor push jbe cwtl pop cli jne xlat jp xchg jae lock mov inc flds les test out cmpsb jle jle and rcl ret outsb sahf mov stos aaa stc pushl ljmp cmp cmp jle icebp in inc push lret std test fstpt je mov ds je xchg ds xor (bad) adc sub mov xchg adc jbe mov push aam xchg dec mov xchg lods push lret out cwtl cmp mov pop stos pop and xchg sub lea je pop inc xlat pop daa inc or into sbb es (bad) sub push enter ficom shrb mov cmp add pop jno xor xor stos fucomi fist movsl stos push jl (bad) add pop pop mov xchg sub xchg cmp bound (bad) lret xchg (bad) jno cmp dec rcll scas scas aaa mov insb inc int aad fiadd push in adc pushf pop bndstx lcall in lahf push dec push int je rcll jne cmpsl fcompl cmpsb or (bad) xor pop pushf ljmp cmc add fcompl enter repz sbb inc xor (bad) out sub outsb btc dec and sbb mov stos push and (bad) lock imul xchg hlt mov sub out adcb negb shrl or add mov insb mov cmp mov pop push or aas cmpsb xchg or loopne push outsl pop inc mov cli jnp imul adc std out call pop jg mov push out or mov popf dec dec repz (bad) push adcl jge daa sub mov std xchg ljmp dec cs loopne jp xchg push sbb xor out pop inc sub inc ret jb mov cmp lahf test jo jae out or mov mov add dec ror inc outsb cmpsl inc in add lcall icebp pop sbb xor adc push sbb sub add lahf adc push outsl sbb inc cmp lods in mov cwtl mov pushf icebp int sub lret mov xchg mov cwtl mov arpl dec (bad) cmp sti cld xor lds xor xchg sahf es xchg ret ret int pop cmp push cwtl sbb imul mov xchg arpl push sbb mov leave xchg (bad) fisttpl mov ja jns mov out jbe and test outsl or mov adc ja xchg push shr or fnop in stos dec je aam insb imul push rcrb mov in sub mov outsl (bad) dec sub dec jb pop mov xor fsubl jmp push jg dec lods outsl mov cmpsb es addr16 rol icebp or mov clc xlat out ja mov xchg and js ret pop sbb cmp daa sub insb (bad) addr16 inc iret das dec maskmovq negl loopne pop jae cmc push jns or aaa (bad) aaa push push add daa cld xorb add push push stos xor xchg push mov mov or gs outsb popa pop add hlt push imul inc sub mov std push mov push js sbb xchg cmp dec fistl loopne mov xor xchg cld sub xchg push test pusha pop loopne inc imul jecxz ja fcoml cmpsb call nop mov pop pusha cs cmp or pop push jnp xchg cmpl data16 test add loop pop xlat (bad) cwtl adc in js cli jg (bad) in and lods add jno fwait rcl dec add insb stos sub test gs cmc arpl sahf loope push pop cmpsl imul cld dec out sub inc cwtl jne sub loopne inc ficomp mov out ficomp mov in ljmp out mov jp and jl cmpsw jae pop outsb mul movsb pop sub scas (bad) in imul xor lods mov push rcrl sub or int3 insl sbb ss sub repnz ds aad dec inc push jle mov and aas mov les (bad) inc (bad) mov and pop push or xor out cmc or adc adc mov arpl mov sub mov stc inc lock or fsubrl cs in aaa inc sub pop xchg cmpsl movsl adc mov and xchg (bad) push test sbb fsts test dec xorl outsb les mov push pop mov notb push add icebp lret xchg mov cmpsb and js push (bad) xchg cmp push lock lcall std sub (bad) rclb dec imul inc incb iret pop inc aad mov jnp insb lods adc es scas or aaa pop loop out daa (bad) adcl inc pop incb sub outsl outsb ds xor xchg pop mov in xchg xchg in (bad) imul push fs dec (bad) rorl push fwait cmp fimull aas hlt aas bswap test push cmc push roll xor inc xor leave stos cli add loopne sub xlat fiaddl adc into pusha (bad) pop cltd cmp pop xchg das mov in and pusha xchg (bad) xor incb in jo dec xor loope out enter ljmp gs icebp xchg inc aad in ret push (bad) push lods or xlat cltd push jne mov jb mov sub mov aad inc mov sahf add (bad) pop push pop mov xor jae test cs ja into push lds shr and aad shr (bad) adc mov (bad) inc mov nop enter int3 lret push mov lock sub movsl push rcr fbstp imul jno adc xorl pop add xor sbb lds sbb arpl mov xchg imul hlt mov mov add pop pop fwait ss sbb fist scas jns or lea loop out mov mov lock jbe fnstcw dec sbb lea mov sti push movsl pop out (bad) jns cmp pop in xor out in scas subl lods mov mov nop jbe mov cmp cmp (bad) push cli push insl or sti jle mov int mov insb pop lahf and sub in pop call daa aad sub pop mov aaa fistpll shll int3 xor jg add fwait mov stc clc xor dec notb pop adc pop fistp lret gs shlb mov in nop xchg repnz cs mov mov inc xchg mov cmp and aas (bad) push lcall icebp jns ds mov ss or add inc add push cmp pop add jl adc or dec push xor fsubl push out ja,pt sub mov ds mov pushf sarl pop mov cmpsb popa scas mov push nop push rcrl push jne lods sub mov cltd fnstsw xchg push mov loopne lret (bad) pop pusha mov inc pop lds mov dec divb lret mov mov dec inc sti (bad) aad mov int3 aaa scas mov jno mov lret push mov push movsl fcoml inc mov push (bad) stos fimul inc andl push lods add sbb fwait xchg jge insb fwait mov in sub push test dec out jb mov or cli xor int sbb aad pop js inc loop pusha (bad) sub fwait and mov out pop imul loopne fldpi xchg push sub xchg xchg std jae mov (bad) xor cmp data16 outsl pop mov cli inc loop pop dec inc mul scas cmpl pop mov mov jns adc xlat sbb faddl mov jge,pt and xchg cmp test es adc out mov mov mov add ret stos (bad) xor pop nop add nop enter clc push or (bad) popa ret xchg jo pop and xchg dec push mov cmp mov jle sbb mov dec out test dec push xchg cmpsb push mov dec call (bad) mov mov loope xchg push jge cmpb add inc test fsub fidiv orl sbb mov dec jle sti sti test and dec cmp dec push xchg int xchg mov mov mov pop daa imul inc popa lret cmc lock inc jmp in jne xchg and arpl xor ds call cmp pop xchg jecxz push scas popa mov out nop push test pop test sub pusha jecxz pushf dec jmp in int (bad) jae ret test xlat jmp test and sahf aaa movsb (bad) adc sbb xorl int3 xchg sbb test pop inc inc add push sub dec cmpsl push pop cmp pop (bad) iret mov adc or addl fildll rcl sbb xchg adc call or push cmpsl sub jp call idivb (bad) jge jnp das lret cmp loope test and xlat add cmp adc jg stos scas push fcoms mov loopne ljmp out inc call cmp sbb adc out fldt ficom mov fsubl inc (bad) fbstp negl lods aas hlt sub cmpsb dec mov push push stc push lret jp or cmpsb mov adc dec mov mov loope ret dec js inc add mov add xchg push repz jg pop push inc cmpsl dec (bad) pop pop ljmp adc push subl mov xchg aad lret scas dec dec or mov clc lcall sbb test outsb popf inc xchg fcoms in repz xchg adc add fwait mov imul aaa jp dec rol mov sub sub arpl sub pop adc cltd push and or enter jne pop sbb mov stc call inc les xchg in mov outsl das pop mov push stos lods push ja push dec mov xlat iret and mov push stc loop jmp cltd rorb inc call cmp jecxz adc jbe js xor (bad) les int3 pop xor mov xchg or in fild aad rcr or xor or push in aad push clc sbb call cmp fnsave bound sbb inc sub xor popa mov repz dec sub adcl call fs clc xchg jns loopne stos into sub (bad) std adc mov loope sti adc xor dec jp xlat (bad) xor mov sbb imul into imul pushf fisttpl jb xchg stos lea insb lea adc mov mov xchg test call dec fucomip insl (bad) addr16 stos popf dec xor fsub dec mov es mov jmp les and stos jl ret in enter std inc add es adc sub (bad) mov (bad) icebp int xchg std (bad) lock clc xchg mov dec das repnz test xor sbb mov mov xchg aaa clc inc add dec mov push push jle jbe adcl dec inc into fdivl inc sahf mov jns and mov fisttp jg jl and es movsl loope std mov and test inc xor lods ret andps inc or and cld sbb lods cmpsw mov fwait sub sti pop cmpsb jbe outsl iret push aam call movsl sti pop mov decl popf pop dec std fucompp inc jae into es ret out std repnz cmpsb inc push gs js inc mov pop mov and mov movsl aad xchg sub push lock inc lods notl xor fucomip push sub into sbb lahf imul jge (bad) enter neg pop mov cltd inc loop add push jae or into jae jbe jae push cltd push scas xor negl pop adc jnp cmp sahf imul ret inc in aam fcomip stc xor repz pop add jmpw pop cmc push dec lods or sbb cwtl (bad) mov mov sbb (bad) push mov dec out xor inc aad sbb scas xchg leave mov push xor pop push jmp adc (bad) or stos dec cmp adc xchg popf (bad) scas jg jle in lret jg add scas sbb ret or adc sahf fs push xor xor call lret push inc inc mov or push cmpxchg enter push test adc dec (bad) outsb xchg sub (bad) addr16 (bad) mov or sti jae rolb shl test cmpsb dec rclb xor xor loop push mov xchg xchg fisttpl into mov hlt mov sub jb shlb cmp mov xchg sahf int aam adc in lahf outsb int3 out and or jmp fistpl jl call mov push stos popa dec fwait push fidivrl iret cltd int3 inc jmp rcrb fmul test dec add jle cwtl test add sti xor xchg fnstenv xor dec test mov sub or sbb mov mov testb add cmc clc add mov test out add push movsb lahf xchg popf pop sti jp xor pop push (bad) rolb leave iret push fwait in jecxz mov lods add and jae cmp sbb xchg jl xchg aaa (bad) loope ret aad pop push mov inc les xor rolb inc nop test mov int3 insl dec adc cwtl mov xor popa xor inc je sti popa xor cs outsb cwtl out gs push mov repnz iret lcall fwait and push cmpsl xchg lahf rorl cmp adc (bad) ja out adc test jle or add (bad) lds fsts lret jo push and xchg lods popa xor (bad) sahf add mov adc inc repnz enter add lcall jmp sbb popa pop inc imul stos or das xchg hlt mov pop test inc jl cmp ficoml ljmp jbe jnp add dec dec aad icebp (bad) mov nop pushf repz mov loope ds jne int3 cmpsb cmc add popa test aam mov popf lret pop je int jmp sub inc je fcomi pushf incl or mov push mov lcall jle pop arpl pop mov stos jo adc jne fildl push out jp sbb pushf test test cmp add les sub jo jbe push push mov cwtl call cmpsl insb subl mov ror inc pop mov cwtl sbb add test inc nop arpl ror repnz or fldcw cld fsubl imul dec into mov mov xchg xchg lods jno js cmpsb push or xor bound mov pop pop pop cmpsl rcrb fs out leave inc sub data16 dec pop mov jne push cmc cmpsb stos mov hlt jp jp mull aaa insb pusha out lahf ljmp sbb mov in cmpsb push stc jbe sbb sub pop sti int fsubrl call xchg or sti dec mov jge mov insb pop test movsb mov mov jmp gs or push dec push leave mov sub gs pop addl popf inc hlt xlat mov rorb add mov ret dec xchg push ret sahf iret mov adc shlb sub xchg mov imul add cmp push addr16 cltd push stos mov jne repnz sahf cmpsb cmp out imul cmp pop popf daa pusha dec rorl icebp leave cmpsl jecxz sahf scas ret sub dec pop dec mov insb stc sbb outsl xchg int xchg hlt mov jmp enter shrb xchg jne ds or ret arpl mov fidivrl mov push inc xchg pop loop pop mov push mov sbbb push xchg mov dec clc vmptrld test xchg xor lret mov sbb out mov mov dec and or mov out dec aam jb cmp cmp call mov fstpl mov enter pop imul (bad) mov pop push xor fisubl lcall inc fbld out addr16 sbb jno fdivs cmp icebp push stos popf jns roll lods jae pop and xchg fcmove cmc adc pop inc imul ret rcl pop jae (bad) push and test xor out mov js inc daa orb dec rcrb xor movsl jnp dec out movsl aam dec decl out adc inc mov stc jmp mov gs cmp sahf loopne stos iret cwtl sbb outsb xor mov inc mov xor jne cmp test add push push (bad) arpl scas inc mov lods pop push stos cmc test (bad) or jge sahf push cwtl cmp jbe jno addr16 add xchg jge aas daa mov inc or clc or into mov jl movb (bad) and mov xchg daa incb inc adc and cmpsb pop mov repnz bswap jae jb or sub adc out test xor cmpsb in (bad) test xchg (bad) xor fnstsw cmpl enter push inc jg hlt dec roll push aas xchg pop loop inc iret sub sbb push adc ret push xchg in adc mov ljmp pop es adc je adc imulb adc movsl jns jbe sar adc jl inc int3 jp xor lods adc subb jmp int3 inc sbb cmpsb or (bad) sahf add dec imul xchg push pop (bad) scas in ss out mov inc loop (bad) or testl pop scas cmp jecxz xor inc inc lods adc push cmp sbb inc and mov push rcrl (bad) aaa push xchg dec cmp jbe sub push lds out adc push hlt inc bound fmul int3 cmp jnp in sub push push adc push pusha out in dec scas inc call cmp outsl loope jecxz icebp adc shrb inc inc shlb in imul out outsb rcr aad lea in (bad) insl pop mov sub pop repnz in mov push mov enter stc test inc mov and push dec and mov jno test jg push stos movsb mov jmp cld nop mov pop shll xchg jne iret bound lret xchg mov loop imul adc popf sbb in mov insb fisub mov jmp push xchg and push subl mov add ljmp into xchg cmc sub jle into mov out sahf xchg dec jp iret imulb addl cmp (bad) inc hlt icebp int3 jae sar dec (bad) ficom ss loope mov aam lret test push mov fimul test shll cmp aaa in nop pop inc pop add xchg rcr mov push fstpl gs push mull sub sbb sub mov xor in jb mov iret int cld mov jle imul xchg ljmp jo cmp sub mov dec xor mov stos and repz cmp fidiv pop cmp mov iret int test shrb aam sub mov jnp pop out cmpsb lods movsl out fst fs add rcl shlb outsb insb jbe mov (bad) cmp repnz xchg ret arpl pop andb push jbe adc push (bad) push fsubl (bad) jmp and aaa or mov scas cmp adc cmp push xor push in dec je test inc cltd xor iret (bad) jl in xchg ret dec into lahf inc pop insb or cmp xchg lock dec in mov inc daa pop test pop cmc jbe xor and push nop xchg in sbb (bad) xor pop or sahf shlb pop xchg mov mov mov xor mov push pop out (bad) dec and lret into mov cmp mov into es std ret in movsb fwait ror cli dec (bad) movsl nop lods push xor mov sub rclb notb (bad) (bad) sahf cltd je sti mov mov dec in jne inc jge test inc test flds aaa add or pop xchg stos and pop fidiv std xchg jge push scas mov cmp pop faddl sub mov xchg or mov mov pop add xlat cld and mov xchg roll xchg xchg mov adc popa ret mov mov clc stos xchg shr xchg push les movsb lret mov into testl inc and fwait aas je lahf nop rcr mov ret xor shll pushf sub jns pushf xchg out cmp (bad) jae mov mov dec jl (bad) pop mov push scas sbb aaa (bad) aaa lret push pop jns dec (bad) rep (bad) aam mov repz sub fstpl mov test adc mov dec aam xor dec sti inc je push aaa inc mov jg jns lods cmp fnstenv xor out (bad) xchg push fdivrs imul es pop in mov and or xor xor add mov xchg fs sti lods aad push sbb and inc cmp aad mov push test mov faddl mov push loope out pop mov fs mov pop or sbb or pop adc xor cmc int3 jb loope daa movsl cmpsl js mov bound call mov mov sti loop mov aas dec repnz fs add pop leave fmull push out push jl pop or fidiv jp push pusha cmp sub not imul xchg pmaxsw in test roll mov ret pop pop xchg pop fucomp and adc or mov test sbb out lods ss sarb test imul cmpsl mov mov cmc xchg enter xor mov sbb lea sub xor jmp popa jo jb into (bad) (bad) fnop ficoml or lock mov call mov sbb mov pop test mov xor (bad) pusha loope sbb inc mov pop and lahf push jl les lret (bad) add movsl push in mov (bad) mov test sbbl pusha ljmp sarl dec inc push leave jae jle data16 out pop add pop add pop rolb jnp sahf insl das sbb movsb stos mov mov jne sub fsub iret push leave xor jae das ljmp daa sub pusha mov repnz mov (bad) loope (bad) mov mov mov or (bad) push pop es roll dec push mov jge mov and cmp movb mov inc jno,pn (bad) mov adc mov mov aaa pusha lock dec frstor (bad) mov adc sahf mov mov sub adc ja std out mov mul cltd insb (bad) out jno push (bad) mov jmp sti or xlat mov fsts and loop or mov test lret aam popa cmc push je mov mov js iret enter in sbb sbb fstl inc mov xchg aam cmp or aas insl pop push repnz hlt fs insb test int (bad) jne push lods jbe cmp in adc test movzwl data16 stos or test shll data16 lock out pop pop push adc (bad) or fstps pusha lret (bad) iret ror sarb daa push clc push aad mov stos hlt std enter inc sahf inc sub in fiaddl mov into sbb js clc jo gs sbb dec divl pop mov jne jno adc in mov in test jle roll aaa movsb jmp push adc hlt fisttpl dec test aam in ss (bad) in sbb out cmp lret mov cmp orl stos inc push mov gs add movsl push aam pop int3 cli popf push fstl add pop push cmpsl lcall loop outsl lds adc daa lock fmuls repz das lcall add ja pop pop jbe cwtl repnz scas jnp mov and mov xlat add add xchg cmp mov das div iret enter movsb xor in cmc not dec mov (bad) fadd movsb inc mov cmc adc lret dec push and lahf lea notl insb fildll (bad) cmpsb pop xchg stc xchg fnstsw xchg cs push and add sbb int3 mov mov mov scas fisttpll pop cmpsl dec mov adc sti inc imul adc adc stc dec cmp inc lret cmc test ret outsl push dec mov adc push mov inc xor jne int3 dec mov pop jl pop push push fbstp jnp push shrl movsb push jg popf sub fiaddl out cld (bad) call sbb subl adc scas clc (bad) sub inc cld jg sahf dec push ds lock xlat inc add nop cltd outsl inc out mov jecxz fsubrs add jmp push shlb inc cmc je decl mov outsb jne insl adc sub daa movsb sbb lea mov cwtl leave ss mov mov or xor push mov into push fisubl shrb sub jl (bad) cmpsl ljmp pop jae push je call std sbb sbb loop cld mov adc popf jae mov adc pop and push loopne jnp lods imul sbb and cmp mov outsl mov leave mov rorb sbb sarb loopne imul push les push mov xchg sbb scas add mov int3 icebp scas dec mov sub addr16 dec mov mov sub out ss push mov fcompl cltd in loope xchg jne push adc xor cmp jle fwait mov add pop add leave fdivs dec outsb sub adc addr16 mov dec sub sbb adc inc mov popa jbe aas sub adc mov and jmp les xchg mov jns inc xor test dec das bound sub and aad inc dec lcall or outsb jge (bad) fisttpl (bad) xchg push pop roll ret lds js ss mov sti sbb hlt adc pop cmp cwtl mov rclb je fprem1 sub sub mov (bad) sub sbb js out int mov sbb rolb enter ds mov test mov mov mov imul stc jns jno and fidivrl jge push pop sbb add xchg enter test ss jns decl mov push xor xchg call out cmp inc inc lcall rorb push adc inc int3 dec leave mov ret ret sub pushf push dec scas xor test addr16 inc mov add in mov cmp mov sbb test jge push int shrb push or jno mov cmp (bad) pop rcrl inc sbb lahf in (bad) and push in test lret stos push sub cli xchg in jl mov pop xchg pop sub push cmpsb (bad) sbb push mov and xor pop and dec mov bound sbb or jno mov xchg mov in pop ss shll out scas jbe (bad) pop and mov addl jmp push cmp sub inc pop jecxz rorb cwtl add xchg ret lcall push pop ja nop push flds pop call dec stos mov add pushf mov xchg fsub sub and and xchg cmp outsl andl xlat sbb lret int mov mov das insl int adcb sbb loop (bad) sti test lock stos sub cld xchg adc push out mov cld push fistl cmpsb mov call or nop jge repz in enter inc repnz pop (bad) mov fs push popa mov inc xor jge sbb hlt lds int mov shll subl mov xchg pop add js cmp inc add outsl or inc not popf mov push dec imul repz inc rcll and scas (bad) add je inc pop mov lods int3 (bad) fistp ficoml daa dec fildll outsl pop pop pushf pusha mov aaa pop nop jmp pop pop enter fnstenv out arpl movsl xor repnz (bad) xor mov fdivs lea insb add lret daa mov mov pop jmp scas rolb mov cmp (bad) push aad pop movsb enter jmp xchg pushf cli lods sub pop pop bnd cmp andb fs mov xor mov lock ffree into or call not jo mov or (bad) imul ss mov ret push mov dec repz xor mov js out neg gs push push mov mov cltd bound mov lret dec lret subb jno (bad) push in fildl xor (bad) lods inc scas gs pop mov mov or hlt jecxz gs cwtl push push mov out test inc mov or jp mov adc or pop mov mov mov (bad) xor lock ljmp in shrl arpl mov cwtl mov je iret icebp add pop popf enter fdivrs lret mov add sbb in negl sub test std sar addl xlat fs mov and or mov cmp and or and rclb inc scas xchg das iret jb push jl pushf push inc popw xchg and push push mov xor sbb xor xor aaa or mov cmp mov outsl cmp mov scas imull dec (bad) leave arpl xor cmp mov dec and test dec cmpsl ss inc xor mov hlt es jne or inc out xlat mov (bad) and aaa push mov (bad) int mov push dec repnz ds outsb dec das mov jl cld or insb out sbb or (bad) xor sbb (bad) xor pop movb cwtl cmp cltd inc in daa cwtl andl aaa adc stos mov xchg pop inc cld fnop mov jle sahf lret ljmp push push loop aam in jle imul xchg lcall cmp xor jno mov inc pop push mov (bad) je or sbb loop sbb lahf jmp push or inc ja fs or xchg inc and shl std add sbb mov or (bad) inc adc xor jp mov leave xchg sub std outsl ja lret mov cli into mov das push aam loope pop xchg xchg push fsubrl das inc andb xor jae and dec push xchg test and or lds mov jge call cmp daa mov mov or xchg lods adc xchg push adc adc in imul mov loop push xlat iret push xchg sbb lods cmc or insl add pop daa sub push imul jns push sub pusha fcompl pop incl sti mov push ljmp sub or out push add loope jp mov push lahf in cld sar div push aaa pusha jge insl xchg xor push dec insb out loopne sub sub adc aas and out aam push jecxz mov nop push or xchg push and lock out iret js rcrl adc cs jne imul (bad) push js cmc inc repz cmp add lahf pushf jp push sti les mov mov xor cmp push mov iret iret je mul sub xchg or sub inc scas push and mov jmp mov pop scas (bad) xchg sahf outsb cmp inc cmp and lahf jmp add cmp jbe sub adc jns adc (bad) jge pop xchg in (bad) fmuls lods jnp mov inc (bad) fadds push xadd sti push shr cmc icebp and mov xor daa jle dec pop or (bad) jne (bad) sbb ficomp pop vmovaps rcrb xchg cmp add fiadd lods mov mov mov js popf test enter jp (bad) rorb sbb inc pop inc inc mov mov movsl or fmulp scas cmpsl sub cltd mov push jecxz std mov jb push mov in mov addr16 repnz movl insb lret mov imul mov mov hlt add xchg test mov sbb inc xchg xchg jbe popf xor push ret jl mov je mov pusha mov insl ds cmp scas fistl push (bad) mov push push (bad) les imul loop cmp push lock push add sbb ss arpl jno test jmp addb add aad hlt arpl je xor jbe test stos push jnp or pop lds and pop cmpsl dec ror dec stos sub jnp jge ret push sbb cmc mov cmpl inc sbb mov add scas lods mul fwait push imul js xchg shr test sbb mov cmp sbb mov ficomp push out lcall sbbb cmpsl mov cs xchg adc cli test jno nop mov pop mov shrb out and movsb ret sub cld in pop jae sbb sbb mov addr16 sti sti push or jbe pop mov pop mov sbb mov mov jge cld out and mov js and and or and inc insl fucomi imul or cmp sti call mov jg insl jae mov inc cli sub or and or lret bound cli movsb adc inc mov test repnz ds lret and fistpl fisubl and or jmp and xchg cmp inc adc pop dec in (bad) xchg sbb push or pusha pop and ret or je fwait jmp lods jbe insb ds or fwait jmp xchg sub mov fmull nop mov lcall pusha jno lds cs (bad) mov xor xchg mov mov ret push aaa xchg into mov loope jl mov shl in add loope test stos xchg in mov dec xor push jp stos jbe cmc ret lret (bad) push aam scas into push int pop mov sbb (bad) xor push fmull fistpll push imul cli mov lods dec addr16 cld sahf inc popf adc or rclb push and in sbb sti pop mov popf mov mov (bad) dec dec cmp js xchg jmp jbe inc sbb in dec ficom in nop push lods adc popa xchg xchg or jmp and outsl adc dec push xchg or cmpsb sbb add xor (bad) jb mov pusha or out int scas pop pushf or cmp xchg jge push dec cmpsb and (bad) stc test jge jae jno and push xchg push ljmp (bad) sbb fildll or jg push (bad) aaa inc dec (bad) or adc pushf stos push push mov pop insb jmp scas sub sbb test mov mov gs and stos mov cmp cld jno movsb mov cmc cltd xor rorl (bad) cmp xchg loopne xor setle sbb sarb or and lds xchg mov xchg jg dec leave test sub dec stos cltd mov in mov add pop nop (bad) leave int test jp inc fstps jnp inc sbb sti mov mov dec testb cmpsl mull sbb push xchg mov sbb pop cmp dec adc inc push js out xor sti int3 sbb xchg in ret mov dec in out mov loope pop or xchg or inc mov jp pop les sbb mov mov fbld movsl cwtl sub inc in loope push cmp xlat fdivl add iret push daa fcom psubd pop xchg (bad) xor jbe sbb lahf sub inc imul push lahf sub repnz dec stos rcrb icebp cli outsl scas jg rcr outsb test das adc push daa and jae sbb jp out fdivrs pop ret bound psraw je or mov mov jp and jb cmpsb lret (bad) mov imul sarl and aaa cmpsb lret lea adc cli popa jmp decl insl mov inc pop scas mov jnp push aam adc outsl pushf add mov push daa (bad) int sti mov in (bad) mov lret bound and (bad) jo cli aas daa jnp pushf fistpl lcall bnd enter les xor jge ret scas sti cltd dec mov push (bad) dec les popa push add ror ret andb in sub shrl xor shrl jge in push in sarb pop xor push inc push mov pop and cmp pop das mov jl add ret or mov adc (bad) mov stos cmp adc cwtl fwait cmp test jae push and xor inc cltd dec lds jle inc mov (bad) mov dec sub movsb lock cmp movsb ljmp mov push es inc jle call xor in movsl test sarb data16 popa scas xchg insb xor mov mov mov inc jmp mov nop loopne out into cmc popa cmpsb aas cmp inc out icebp outsb cwtl iret out add mov inc jbe shrb xchg push lcall sub jo jne add test cmpsb sbb and imul sti mov cld jnp xor bound jge std jno inc enter into es ds xor mov scas loop bound sbb leave cmp mov pop in xchg fmull xchg imul mov aam sbb dec jns and mov push jl ss sub outsb mov jae test scas out mov outsb ret cld (bad) negb pop jge mov daa (bad) and adc push in stos sbbb dec and subb adc ss and ljmp mov scas outsb jb and jnp dec repnz jnp mov mov ret mov (bad) and inc adc fdivrl in and or jp mov les call (bad) (bad) scas push inc add fsubl js ret cmp mov lock es cmpsb call call pop test ja sub cli sub adc aas pusha mov leave push push xor movsb inc sub ret add adc scas out insl ljmp mov std push jo add jl mov and mov push xor aad mov aaa cmp pop inc ljmp adc ss xchg fcmovne pop inc mov lock mov lods pop fcmovbe sti adc aad (bad) mov jno or inc mov cmp rclb negl imul cmp (bad) inc push push push aam fs loopne xlat gs and pop xor mov mov xchg sub in inc pop aaa nop xor inc fwait push push sti jbe jae in mov mov dec frstor hlt mov mov mov loopne cmpsw add arpl and stos pop inc (bad) cmc jae mov cltd (bad) out jmp mov fs jge or sub add std xchg or or dec jnp,pn std xor xchg loopne or or sbb jle adc push out mov mov nop pop xor cmc jle call cli add fistl pop dec mov lcall add pop add dec push add (bad) jmp sub imul (bad) sahf cmp push test inc and xchg pop aam pop cmpl les mov inc mov inc mov cmpsb mov fsubr adc (bad) dec pusha leave adcl cmp lds clc sahf stos and mov xchg inc cmp jae jle xchg shll lret pop mov mov in cmp enter add xlat negl ret adc sarl arpl add ds or mov jg outsb lock push js xor jl sbb push in loope pop sahf sbb xor insl mov into shlb pop int3 mov lret xchg sbb insb scas (bad) in mov or and sahf sarb fdivrs push inc mov mov ds push jle fsubs cmpsl notb cwtl insb and rep (bad) sbb cmpsl mov cmc cmpsb and fldenv fisubl jae fucomip loope outsl and add rcrb jge jecxz das fsts dec repz pusha or loope daa movsb push jp inc adcl mov les js adc push dec inc dec pop mov adc ret fildll fisttp in lds lock lret fldenv mov int3 jbe fs add adc rcl lea (bad) push xchg dec js fisttp in imul nop mov dec inc add dec cmp addr16 xchg jp push test aam jae daa fnstenv js mov insb aad push inc mov lret mov jmp push inc inc repnz pusha cmpsb add sub lods dec js fsubrl loop lret pop sub rcrb mov outsb movsl iret jne inc inc push cmp sbb (bad) mov cld xor mulb or adc and fwait ret sbb push push mov cli (bad) popf jl popf inc lahf movsl dec dec push stc std clc pop lea insl cld or fbstp imul test adc adc dec pushf decl push int mov je rorb movl (bad) xor sbb outsb or scas mov gs in sbb sub iret scas adc sbb mov and fildll sub jnp dec mov mov jbe aas or inc mov aaa divl in push mov ret out jg or fnstenv dec add xchg stos inc scas xor rcrl ljmp inc push stos mov push cmpsb loope pop xor into jle adc mov and jl mov cmp (bad) mov lcall mov sbb fimul jmp push cmpsb test call xchg xor push jb cmc mov int3 fimull imul mov mov in shlb or shl lea xchg in adc fmull pop (bad) mov sub aas xchg test mov add ret cmp xchg enter sub pusha or ja xchg js outsb insb add add xchg fisttpl aam or in sbb and or dec jg xor sahf xor loop add adc pop sbb aad cld repz push lock sbb wbinvd jle pop mov fs sbb xchg notb js mov inc cmc insb lods or push dec je cmp ja mov data16 pushf insl jb mov test ds out inc sub test into ss gs jo stos movq add cmpsl cltd xlat dec xlat scas fdivrl movsl mov ljmp out cwtl mov lock sbb sbb inc into (bad) mov push jecxz add add insb ficomp aam addb shl xor rcl mov mov lds xor sbb js imull xchg das (bad) mov jno cmc or ja out mov or (bad) sti sub ss dec repnz aam add push xchg mov mov outsb jl in or fisttpll test push add or xlat mov mov jmp imul push push sub mov push jbe add insb and lea xor fisub cld inc or push popa xchg mov jnp (bad) popa or into pop sbb shl sbb xor aaa jo cmpl in or rol (bad) sub adc lods aas shl mov jle,pt scas and (bad) mov sbb and xchg inc jge das jb enter subl test (bad) daa out (bad) outsb mov pushf sub xchg xchg inc leave popa cltd adc add cltd xchg test ds inc pop sub inc ficoml fisubl mov pop jle jle push fsub scas cmp loope out xchg nop std pusha ror jle sbb adc rclb lcall pusha push jae adc aaa sbb loop push out adc ljmp (bad) xor and and (bad) mov inc fmull dec in leave mov aaa jno addr16 ret push in jne insl lods xchg aad or mov insb repz sub int lret out push mov and inc xor pop adc push jmp xchg out scas sbb jae pop fisub jae sbb int3 mov rolb popf xor sbb jecxz inc leave into jno test mov add pop add je js stc add adc aas out push cmp sbb push mov stos xchg repz jb pop shr mov pop lcall das test push sub push fadds shll jns jge jb sbb mov movsl sahf (bad) xor jl sub mov xchg adc stos stos and mov sub jmp xchg push cmp mov and or scas xor mov mov addr16 add gs mov add aaa in mov setge mov in dec fsub stc ret shll cltd cltd mov jle jo jp sbb sub mov pop adc cmp in dec xchg jae push mov or cmp inc ret sub test into push popl test xchg sub addl pop add sub bound add (bad) in pop or pop cmpsb repnz (bad) jmp xor cmp (bad) mov mov xchg push (bad) aad dec lcall aam pop mov push ret push (bad) mov fwait sub orl addr16 mov sub in repz or lds mov mov in data16 insb sbb dec rcl incl jnp std mov int3 (bad) iret pop cmc mov sub test ds lret pop (bad) dec adc js pop jns sbb out and mov xor xchg fs lds dec outsl dec xor push fisttpl jb push jg xor push fisub sub (bad) sahf sub push jg ja lods xchg movsl stos xor adc jg push andl and sub aam jnp rolb test sti mov gs loope ljmp adc mov add mov bound fstpl mov inc push mov lods fwait adc or cmp xchg fwait rcl xchg ficomp cmp popf xchg cmovno push inc jmp push mov dec sti (bad) jb jl xchg test sub lods cmp cli add sahf lcall xlat jl xor push ja jb inc jbe arpl jp lea addl (bad) dec pop repz repnz gs roll pop out mov xor jl idivl bound xchg push dec and lret add xchg clc call bound inc mov fnstenv test ljmp (bad) pop mov pop out jmp inc add jno sbb je jl lea test orl lea add cs stc or add mov adc movsb mov test and mov inc inc mov icebp cwtl in inc mov sbb mov mov stos push jbe push push enter outsb pop jno mov or sbb in aad mov sbbl xor adc (bad) mov mov sub js mov add and ficoml sahf imul jg xchg in adc aas pop stos xchg pop adc jo and mov or push inc jns cmpsb (bad) imul pop mov pushf sub dec repz xor cmp ret jo (bad) ljmp hlt jge xlat cmpsl jmp dec push inc bound jl ss dec push pop lods fwait int3 jbe inc mov inc mov mov jnp pop (bad) int and fwait inc mov stos lret jns jnp adc dec and or and decb prefetcht0 out jns jb or cwtl adc aaa int3 cs push or or (bad) movsl xchg repz repnz xchg mov mov or dec movaps inc aad push pop lds je and cmp daa dec push xlat subl cmpsl add jge fldenv and add and mov cmp fs lahf bound sarb nop mov out mov jo,pn outsb cltd cmp inc mov outsl loope push arpl lods and nop jo enter xor fistpll push fistp and sub and scas daa pop cli js (bad) (bad) sub stc ret ret inc bound push dec xor push popf xor sbb pushl test lods lea (bad) (bad) ss pop ss mov xor inc jne clc addr16 fsubrl repnz aaa insl jmp jge aam jecxz jae inc xor dec imul icebp mov imul and mov (bad) popf adc mov es sti cmp pop ljmp call mov sbb xchg fsub pop clc rorl mov sub out xor cli or mov loope jno mov cmp mov jg (bad) stos mov inc jne cmp pop cmp and sbb pop jo sarl and add or stos or add movsl out cwtl mov je mov or test cmp push sarl inc dec sub sub stos mov jmp pop inc push cmpsb pop test out xchg pop bound push cmp cmp es loopne call pushf or or mov cs mov add cmp push dec cmp and or insb das sbb jge mov inc jl push or inc adc aad dec adc adc cld and push lret sti call mov push repnz imul mov test (bad) xor lahf push fwait mov (bad) pop add adc push out daa inc inc cli fsubs scas lds repnz sbb test mov mov or ja jge fsubs add imul mov or inc sub mov lcall xlat (bad) lock lret enter int mov dec jmp xor rorl jae mov ss out jo jp pop inc dec cli inc cmp mov xchg pushf mov sub fmuls sbb les sub or and imul xchg dec imul mov add iretw xchg or sbb cmp pop push adc or jno xchg in pop mov cld out jns mul sub inc dec bound adc pop addl add sub mov jp pop std (bad) lods mov or mov popf incb jne mov sbb pop pop scas pop xchg fwait dec mov repz sahf pop (bad) (bad) aas jne mov pop or (bad) add lea addb xacquire aaa cmp mov stos lods add data16 fdivr fimull sarl outsl mov jg test inc or mov insb and pop add mov inc insl mov popf jae push push ret imul and mov test stos inc jae lds bound in out adc inc sub add dec dec fisubl add jno into nop mov int arpl sbb and sbb sub pushf out adc jecxz mov push loop adc into xor mov and aam aam mov dec mov push push jmp lret out and inc shl pop (bad) lret shl sbb sbb dec cs adc jns push ljmp dec fiaddl addr16 cs lods pop pop (bad) mov sub repz or jne nop insl std inc aas stos aad fs dec mov daa inc imul jne pop adcb jp shrb call fstpl in sti xlat sbb flds cmp stos push xchg mov jmp rdtsc cwtl fisubrl sarl nop lds out ds ret test pop mov sarl adc push loopne popa pop pop icebp arpl test pop cld jmp jle mov cmc pop in xor cmp insb and (bad) icebp daa pop arpl and push xchg negl shll neg mov fimul xchg push dec lret pushl add repnz sbb push dec movsb add push jecxz inc and in (bad) adc dec jmp loopne das ret pop imull fimul loopne gs push or scas into sbb mov xor outsb xchg mov stos mov jo add mov dec or sbb sbb fildll xchg cmpsb push add or scas fsubs mov leave repz in xlat das and lret cltd inc aas sub ds pop movsl xor pop and adc or push cwtl (bad) ss add mov les or pop notb stos push push push ljmp imul mov jp cltd imul pop jge setns sahf pop cmp lock popf and rcrl aam push mov inc push xor or (bad) leave inc push (bad) gs sbb xor mov push sbb js jl xchg push lock push dec daa sub xchg in fwait xchg and hlt repz cwtl inc in jns test (bad) push nop xchg daa les rcl cld cmc iret pop push mov fsub cmc aad and in push repz push add or cmp mov mov (bad) xor dec adc adc les mov stc imul data16 inc push xchg rcrl std mov inc sbb mov add cmp pop insb xchg repz das add cmp mov dec xor pop or jne add mov mov add (bad) test pop sub arpl js loopne push or ret ljmp sbbl insb mov scas (bad) dec ljmp movsb test mov arpl popa cmpl pusha xchg outsb addr16 stos negb pop cwtl mov call arpl (bad) push outsb or in cmp sti rclb dec jl,pn xor inc mov lcall xchg push xchg (bad) and push imul scas mov popa mov jmp jecxz push lea fistpl ja shll adc pop xor mov and fimul mov xchg lock test lcall pop mov jae adc xchg dec popa jb adc std lods jmp adc add mov mov dec in push push jo inc ss jmp fdivl repnz lcall mov jmp data16 adc popf fnop inc notb mov (bad) push mov mov (bad) (bad) pop and jne mov dec out xor or fs xor xchg orl (bad) (bad) jnp loope decl loop and ja int3 mov jns or or or lahf push orb jmp sbb in or scas out adc xchg or push (bad) and fstpt xor aas jb inc loope cmc fsubrl xchg pop mov adc sbb pop js in push dec ds (bad) lea clc gs rclb jecxz lret dec xor fwait out fiaddl xchg inc inc imul cwtl fmuls jge,pn shll lock xor enter pcmpeqw rolb pop mov jnp cmp sub fs lcall mov adc mov aam jb adc push hlt je pop mov or in aas push jg adc dec lahf xor rorb sub fnstenv pusha mov fldenv inc xor jae int (bad) cld orl pop xor cmp loop sahf leave add sub movsb inc adc sub xchg lock xchg (bad) stc mov or das (bad) stc test adc and leave jns sbb shll out and sarb add test loop adc mov push dec daa insb mov sub sub int3 out in and cmp lret js iret pop pop popa xchg cmp xchg jbe mov jns inc dec je out and sbb lret dec dec xor jmp stc dec mov push outsb xchg fisubr bound mov xor xchg push or test pop cli lcall jbe jg sub cli push or loop cmc jbe and add mov outsb fisubr inc push lea aaa dec sti shr mov add mov ret mov stc push (bad) (bad) and ja jmp outsb or arpl fsubs sbb sub inc cmp hlt sbb frstor cmp fucomi out clc lahf mov lods pop xchg (bad) mov rcrb ret scas int addl insb pop pop lea (bad) out hlt push daa jle aas push mov lret arpl inc outsl rorl push ret xor fisttpll out push sbb dec pushf jl mov xor nop mov jns loopne jae sub lcall adc add xorl jp pop fwait arpl dec sti es (bad) lret das imul js dec dec fdivrs in mov imul les or clc mov add mulb pushf sub ja sbb rorb mov cmp add or inc mov mov push xor popl sbb pop outsl dec das or adc jne ret in pop and ds push and jle dec pop add mov lret jns (bad) push fs jb in dec dec mov mov and xor push cmc lahf je iret jbe insl push mov icebp adc push fcoml rol fnstcw rcrl insb add push and jp (bad) in dec mov inc loopne mov cmp mov in out icebp adc es cmp sbb sbb push sub sub lcall bound mov lock add mov pop outsl and gs xor cmp (bad) sahf rcl inc sbb sti xlat or (bad) adc lret jne push mov (bad) cmp cli pop fadds mov mov cmp fdivr xchg or sahf insl jbe int3 repnz aas cwtl mov mov add jg xchg js mov inc cs cmp mov mov fs test enter fsubrl pop jl pop mov shl xchg add and add (bad) jle xchg aaa in push jo out shrl pop bound (bad) div xor add ret out adc pop out push loope bswap inc rorl dec inc (bad) pop push clc (bad) dec xor pop mov inc or movb inc icebp mov pusha sbb adc jns (bad) ja loop mov enter pop movsl stc sub sub push imul insl in ss mov je nop mov adc xchg int3 in fbld pop dec xlat out lret mov clc (bad) enter cs movsl cmpsl add and mov mov into sti mov adc movsb test lock xor sub sub mov js mov jmp mov add pop arpl jne popf inc sbb (bad) outsl pop fld sbb imul xor sub cltd and in pop jmp hlt lock in and dec inc out rorb mov mov aaa xchg mov xor pop inc (bad) hlt int push sub fstpl xchg push xchg stc xor les ret mov adc mov pop jge in scas popf test cmpl inc (bad) cli pop dec (bad) lods mov pop stos aaa aaa pop jne cmpsb (bad) fcompl mov je sbb xor frstor sub lea in push and pop addr16 jecxz nop sub xor jecxz jp (bad) cmc ljmp iret es and mov sahf (bad) dec mov jne pop std enter dec xchg sub adc inc inc xor gs je jbe cmp jmp sbb iret (bad) aam sub push out or jecxz pop outsb adc out jbe sub fildll ljmp movsb orl ret adc inc (bad) sti sbb ja pop push cld mov or data16 aas and mov xlat dec xchg mov or pop das mov test test mov jne mov sahf test lds icebp lods inc loopne ret jne xor mov imul aas aad bound adc mov sbb jae pop fdivp gs fstpt repz sbb inc faddl pop ficom int3 loope or xor daa (bad) fs fmul js lock or xor hlt dec pop mov repz jno sub and push or inc addr16 int3 mov out pusha rcrb xchg xchg rcll add aas cld jp stos insb enter notl xchg or cwtl es dec xchg adc loop mov xchg mov loopne lods clc (bad) call push (bad) jmp cmp not add or enter xchg pushl popf out in mov icebp or push pop push ss adc push sub fwait pop repnz jo stos cmp iret into xor push inc pop and or daa aas test lret cmpsl lar in add iret stc push mov push jae xor clc cmpsb pop popf mov xor xchg es dec lea xchg xor rorl jns jecxz scas mov mov lea into nop xor jae das lods popf outsl sbb xor fs in daa mov sub int stos mov ljmp aaa mov cmp loop hlt aas or cltd insl es out mov mov test push js cmp (bad) mov (bad) sbb or push (bad) pop shrb xor js dec dec sub mov es (bad) jno fmull ja and out push dec xchg jb inc enter mov cli xor insl insl int3 push jo cltd add pop movsb out (bad) or pusha mov in mov push jmp sbb cmp stc xchg test addr16 mov mov in cmc mov xchg setp fstpt sahf xchg mov inc lea dec lods push xor dec stos js pop sbb xchg xchg dec adc in ret mov xchg sub xchg test es cmc or xor push lods test clc repz (bad) repnz imul clc or pop adc pop sbb push add dec cmp je add out cmp push dec or cld int lret movsb inc mov out and js cmc xchg dec inc test push sub sub in push es sub test jbe mov rcl and xchg aad movsb lret fadds dec jg fnop pop and jge add or js sahf mov sub jnp adc dec in jmp cmp adc int shr rcr mov mov push pop xchg stos mov outsb xchg or jae das ficompl push dec js ret xlat test and imul (bad) xchg cmp ret jbe mov sub loop xchg ljmp xorb lock (bad) xchg and stos mov loope pushf and xchg push sub cltd fisubrl (bad) jmp lods push add cmp or fidiv lock jge cmp out inc or mov stc xor fisttpl xchg jnp,pt leave (bad) bound loop push jl and gs lock arpl pop out repnz fmuls mov xor repz das sar cmp addr16 ret xchg mov adc insb popf repz or ret int add inc pusha inc sbb mov mov xchg lcall pop clc sbb in addr16 (bad) lock data16 push pop push cmc xor pop insl sub test mov mov push cmp mov inc mov cmp sbb mov icebp (bad) xchg clc loop add in ljmp sub out in pop and push mov ret dec movsb mov lcall sbb fldenv add dec std ror adc sub mov out sub push sahf lock pop or xchg and mov jnp sbb sub pop (bad) jl push jmp lret nop mov mov cmp iret cmpsb js aam push xor js imul cmp pop inc cmc or stc adc (bad) ljmp sbb cmpxchg vpunpckldq xor xor adc jne sahf sbb ficompl sti out push pushf cmc stos es push sub cmp int3 sub pmaxub (bad) dec test mov imul ret push mov jno cmp dec es out mov rclb inc or pushf mov mov or outsl and jp xor xchg ret sub sbbl and mov fwait lds jl xor lret sbb inc xchg out mul into jne clc loop rcrl jle (bad) std xchg xchg insl sarl leave popa dec loope cmc fnop cmp sub inc mov mov or (bad) out jbe rcll cld imul ret dec (bad) jmp es adc mov mov sub or sub movsl dec lds fisttp sub arpl adc lahf inc cmp fcomps lods in and mov and imul jle test sti lahf cs fwait pop jns mov add mov jnp xor fisubr fidivrl ret sbb shll push fucomi hlt jne mov mov mov mov sbb ds int3 xchg sub out gs sbb and push cmp mov (bad) ja sub test push das jl cmc sbb jmp inc jle inc xor lods bound call or cs mov pop xlat rcrl rclb xchg xchg call add xorl mov add sbb cwtl push xchg mov imul jns insb (bad) xor xchg and inc sbb adc cmpsl jnp pushf jo (bad) lret scas dec lock xchg pop add das inc int3 cld pop xchg jo mov ss loop pop mov xlat test rorb leave lods inc sub adc jge mov inc fldenv popa mov sub aas push sbb lea pop sub add or mov stc sar dec dec inc (bad) add int3 adc sbb loopne xor adc icebp jp ret outsl pop and into or out xor dec and cs dec add arpl mov out cmp add jmp cld add dec mov gs call lock aad scas (bad) mov mov add xchg dec loopne xchg cmp stos bound call mov pop xchg test jbe fidiv out pop or mov sbb pusha aad sbb sbb pand scas add lock push fwait iret rorb (bad) and (bad) mov jge inc les pop mov out enter inc fucom ja ret lret js jg jb loop inc pop in cmp push push aad shl dec out jl inc ret stos (bad) into fiadd lcall fcoms mov push cmp lock lds inc mov sbb lret mov std lods jns cmpsb mov or sbb pop sub (bad) divl in jns lret test jecxz lahf lods sti cmp inc mov xchg mov mov and sub fisubl fs (bad) jns jp and in (bad) ja fdivl ss in in fcmovnb jle mov clc cmp sub js inc lods mov test sub aad or das mov push adc lea aas (bad) ljmp pop fbld arpl int and sbb sub insb and jbe jbe push xor fisub fdivl insl aaa loopne aaa mov daa xlat jne adcb cld outsl into jo sbb (bad) (bad) adc loop mov xchg je jb popl lea xchg pop sub hlt inc and mov adc fwait scas add push out sbb ret pop jo pop xor jnp jp imul pushf jg andb rcrb xchg mov in mov xchg and hlt (bad) fucom and push (bad) loop jbe pop pop loopew out mov jb out pop jle ret out push jge xchg sbb (bad) pop push std cmpxchg pop test clc xchg rol loopne adc xor fmull dec or out xchg aam imull fsubp lock stc out scas dec xchg jecxz arpl push xlat add push in push jl mov xlat popf lea adc pop adcb (bad) popf sbb stc xor jno pop jmp mov (bad) mov popf fild mov dec int test ds mov mov adc stc sub sbb mov out sbb in arpl insl fcomip aam dec mov cld and jp add cltd lahf xor pusha je sbb jg jg sarb jl xchg int3 test inc aaa mov cmpsb loope repnz push xor insl movsb int data16 xchg push inc push pop sbb cmc pop xor imul adc stos cmp movb stos inc pusha into stos mov add dec jno xchg mov xor leave movsl jno popf pop xchg xchg dec jge cmp xchg adc jns fstpt js sub push (bad) mov out dec sarl sbb test and push push push pop stc pop jns dec aaa stos insl fneni(8087 xchg or jg jle pop fistpl jne movsb addr16 xor (bad) mov movsb pop dec cltd push sbb pop pop movsl mov sub sub dec fcoml xchg icebp sbb popa mov push pushf addr16 fimul lahf push mov sbb mov out addr16 jmp clc lds outsl add test cmp ljmp (bad) push test test test jbe pop call stc into add out in mov cmp inc jno movsl leave add (bad) dec sarb xor jg mov outsb in sti insl out add jg cmp xor inc mov sbbl dec out jle pop cmp pop sub stos (bad) shrl push mov xchg xor inc cmp xor add imul je jae nop clc (bad) sbb fcomps lret fidivl clc mov and cmp rcll fisttpll and pop dec rcrb pop (bad) add mov fs dec das insl mov aas mov mov cmp ljmp cli sub and (bad) pop xor pusha call jns arpl mov stos iret mov dec jmp cmp push sbb xor xchg xor adc cmp push cwtl jno lcall or jno fsubrs jmp inc cmp pop xchg xor fcoms jge xor adc jae jbe pusha stos frstor cltd mov out or adc stos and arpl mov fsubr icebp lret lock push (bad) jo js or insb pusha stos cld jg mov mov lret fs aam fildll pop adc mov dec enter enter iret fs mov inc push pop popf mov clc roll mov imul and xor ja or popf test inc fmuls imul xchg inc ljmp insl xchg ljmp cmp push add dec inc fdivrs xchg pushf aaa push clc das inc adc push addr16 jmp push sub lcall int3 test sub sub cli imul inc int pop mov es xor daa and mov mov jmp cmc out mov popa pop xor xchg or icebp loopne inc loop cmp xchg mov mov cwtl test in in in imull push loope dec xchg pop test aad (bad) jne fcom mov ja lods dec or sbb mov ret roll cmp shl fwait jmp adc push in ss xor mov xchg ss in add xchg outsl mov bnd movb nop ret lea (bad) andb outsb jno les push push outsb mov mov pop scas ror add xchg sbb adc and cmp ja xor push imul int push popf mov fidivr inc cmp xor mov dec jle lret in jne sbb je fisubl push jnp lea andl fsub jmp mov and mov fidivr repnz add inc push mov xchg mov imul mov outsb mov jp or aam and hlt setl dec ret lods and xchg sbb call xor out cld rorb mov and (bad) ss in pop jp in int3 cmp lods adc jp repz ret lret test push call aad pop jb and xchg xchg nop test dec pop stos je jl add (bad) fimul ja adc fidivrl inc rolb mov mov fidivr in stc jg mov les cmp or mov leave rolb sarb xlat adc xchg sub mov sbb push pop mov clc adc push add push ja dec setl sub int ret lods inc into jo xchg sub test ret jae es mov xor sti lods inc inc insl dec dec xor jnp pop fnsave mov fistl push cmp push pop (bad) and (bad) jae (bad) xlat loope (bad) xchg push xchg jno push adc push sub js (bad) sub or lods mov mov xchg xchg push lock dec pop leave cmpsl ds stos pop jmp sbb or sbb push push adc hlt sbb and or push mov push push movsb fisubl pop and cli shld aad mov mov stos sub or xchg (bad) xor inc pushf cmpsl xchg inc ret insb pop sar in pop sub adc sub cmp lea push push gs lds push mov or repz leave hlt jns xor sbb mov daa sub imul pushf cs cmp loopne cmc loop add imul jae jne xor sub mov fidivl out dec xor xor int xlat pop xchg sub or xchg js jnp adc jbe sub arpl repz and loopne mov clc xchg mov lods (bad) repnz gs cmpsl mov (bad) xchg push lds mov pop mov cmpsb int out xchg mov xchg lret pop (bad) dec xor mov bound hlt jo,pn cltd test iret sbb loope adc pop inc push mov popa cmpsl ljmp dec add negb shrl std rcll mov sub xchg and and sbb mov adc lock fildl push lret shlb xor mov sub push or (bad) cs mov or in shrb out sbb mov negl or test adc cmpsl inc inc gs push pop push mov mov xor jb push xchg cli xor jl sub shr pop inc adc sub push data16 cmpsl aaa pusha inc and dec xchg push (bad) fdivrl dec xchg sub add jne repz std mov leave loopne sub pop mov jbe movsl shll ficomp xor dec (bad) rclb xor inc dec add dec cli es xor stos inc rcll pusha xor adc stos out nop aas std jnp js lods push push pop mov jecxz jg movsl in addr16 loopne mov jnp sub inc add fcoml dec in xchg pop add dec ret jo add pusha mov push loopne xchg push dec sbb iret mov popf outsl sahf xor sub dec stos mov cmp sub cmp cmp jo cmpsb aam jno jbe jge movsl hlt and ret (bad) sbb jecxz leave imul mov dec push pop pop jbe push push mov inc scas lods es sbb inc cld sbb push ja xor xchg add mov inc movsl xchg pop mov push pusha stos mov lret mov test adc enter mov sbbl cmp push xchg jb mov sti jbe sub lahf js pop sahf enter out jmp movsb xlat mov sar mov xchg jg lsl in add mov dec test push inc movsl aad mov mov movsb and or inc xchg jns test roll in inc jge out xor outsb inc dec hlt mov test bnd mov jle int3 test sbb inc decb dec fnstcw sub mov and or inc shlb add aad jle push test dec aas xor scas andl loop mov xor call pushf je jl test jns xchg vpcmpeqw fbstp popa dec pop test fwait inc pop fisub jns xchg pop jb std loope leave cmpsl lcall add stos ds sbb or or mov das sub mov jmp popf sbbl psubusb test xlat sbb ss int3 repnz aad insb out add xorl (bad) and mov repnz push push fistpl jnp push sbb and fdivr mov sbb scas (bad) mov pusha lret fs dec xchg adc and adc icebp lock loop jl pop pop das (bad) imul aaa or adc addr16 inc into sar stos and dec add pop fs lahf (bad) cmpb xchg jg aam pop xchg and pop js mov sarb ljmp dec fwait sahf ja lahf movsb jge,pt fbld sbb mov jl xor (bad) or in add cmp inc mov imul mov adc xchg pop lret mov jmp std orl ret add arpl loopne xchg rcr and mov sub inc pop gs pop xor mov push push cmp fiaddl pop mov mov incl mov xchg sarl pop xchg mov mov sbb mov or out int add dec sarb or push jl xchg sbb jno lock dec or mov mov pop add cmp insl or call rclb mov jne arpl fs jb cwtl inc sbbl jo dec fwait jae cmp cs (bad) lock xchg jmp inc sbb dec push dec stos cmpsl stc or mov cmp push mov (bad) cmp sbb mov aaa icebp fs sbb push test sahf lds sub pop xlat leave subl pop cmp pop ficomp push mov cmpsb add jno cmp pushf lahf hlt mov (bad) mov lds jae fcompp hlt push popa fstps stos jge je (bad) in mov inc mov movb push mov pop in (bad) cmpsb ret popa aas cmpsb cmp (bad) sbb jle adc into xor and pop arpl addr16 roll pop ljmp cld adc or dec pop ss jp loopne cmpsl sbb inc adc pop push cmc (bad) mov mov xchg jl sub cmp xor push push or ret lcall xchg push push lods movsb fstl ret cmpsl lods loop sbb push imul dec insb imul add insb or lretw inc lcall dec pop dec outsl add ss movq mov ljmp in dec xor mov sbb pop stos into repnz aam imul pop addr16 mov dec repnz xchg sub leave test in out push push jmp sbb es rolb adc add ja and push fdivrp xchg mov push fs jecxz push inc mov or or or sbb test stc sub pop js movsl cs push aaa fcomps lock lea xor popa jbe dec pop push aam sar pop jle dec outsb inc adc loop icebp rcll arpl test jge out clc xchg ret aas xchg out mov arpl test dec mov cld sbb sub sub mov ds into xor mov sub fistp repz jp add lock jo jne mov push pmovmskb dec outsb mov mov pop jle mov (bad) dec movsl sub lock fildl dec xor cmpsb in xchg xchg pop pop fistpll (bad) xchg inc pop cmpl idiv push cmpb push cmp aam fstps lods sbb mov jp xor push out in lahf in fistpll add imulb mov outsb mov insl push push or jne xor xor jns cmp pushf scas (bad) xor add subb adc jge dec cli push push cmp and movsb push fnstenv andl cwtl lret xorl ljmp cmp ljmp sbb loop inc insl pop (bad) aad mov stc pop pop or in inc push sbb or gs sbb subl xor in aaa aaa in mov jbe inc sbb lods mov xchg xchg iret cli add mov movsbl push clc pop clc ja cmpsl xchg jb (bad) lret jnp mov shrb mov cmp das fst clc (bad) push add adc push mov scas or push sti call nop lcall cmp mov dec les in addl lock aaa dec (bad) jge iret incl inc jecxz int xchg negl adc out mov ror cwtl ja scas lret jne cmp pop test xchg xchg inc mov mov cli sub sarb jg inc rolb cwtl jle shll imul into cmp push loopne push sbb test out push jle dec fwait stc or sub jmp sbb mov mov sarl hlt lea mul xor pop xchg test negl pop das xlat dec (bad) repnz jno inc pop lahf mov xchg add xor adc mov iret xlat cmc imul push test dec insb push pop mov test mov mov in rcll mov pop pop sub xlat stos ljmp pop add xchg pop jne adc insl xchg pusha (bad) out sbb mov add imul (bad) mov or cld inc ljmp dec add cli nop pushf xor daa daa hlt or pusha add cmp cmc cwtl cmp pushf add mov shll sar pop roll push data16 cltd jns pop out mov or push dec fisubl arpl pop mov sbb mov movb sub cltd mov jb xchg push push mov jle cli (bad) stc fwait jmp inc scas mov add or test dec push nop imul addr16 orb sbb or add fnsave sbb xchg rcrb popl mov xor mov in mov (bad) gs cmp jecxz sahf mov push or enter jne sub xlat push pop aad adc and adc fsubr and repnz mov pop loope or into cmp dec and mov mov jecxz (bad) or xchg icebp mov xchg push xor xor scas sub dec daa xorl mov or pushf jle dec in and mov cmc imulb xlat mov add push push mov push jne leave jb inc ret sbb cli imul (bad) mov hlt jle insl or pop rorb jmp aad aad lcall inc fwait mov adc xchg push push sahf dec jl std dec loope sub sbb jns mov dec stos ds sti nop arpl popa in outsb addr16 sbbl cmpsl subl xor or jae (bad) xor mov xlat sbbl fmuls xchg rolb jne sti cmpsl cmp sbb rcrl inc out js jle (bad) int adc (bad) sti lret mov jmp ja dec mov xchg jge adc push pop rclb xchg push sti jbe popa pop lret mov jl cmp (bad) sbb es inc mov or icebp lret mov nop nop xor sahf push insl bound cmp fs fwait or imulb inc xchg aas mov mov in lret or clc lahf mov sbb cmp pop or icebp ja adc mov rcrb lret icebp xor loop push call pop cli (bad) sti or lds sti jecxz (bad) shr outsb adc cli fldt hlt mov (bad) (bad) cli dec clc ret cmp les and cmp fistpll push aam jp jnp adc add dec xor push inc nop mov or dec stos (bad) iret mov xchg sbbl pop into or inc push shr test xchg (bad) incl movsl mov adc and pop push mov xchg jnp int fist xchg aad leave dec mov sub aad jmp xchg (bad) imull sub mov shr mov jno pusha xor sub lods imul pop mov lock jecxz xor mov sahf jp lahf sbb lcall addr16 push clc aad sbb jge cli cld jmp test or add test xlat mov imul (bad) sahf test fwait xchg fild icebp stc inc icebp adc xor pop push gs stos xchg sahf push lods (bad) mov xchg jno (bad) mov sbb cwtl mov (bad) pop fs cmovg push fiadd ja mov negl cwtl pop pop mov jae mov push add pusha int dec out mov push mov mov sbb cld sbb dec mov lcall setge dec mov icebp and sub jne inc lea and je andl mov stos mov xchg push hlt sub inc push mov scas push jmp jmp bound mov pop adc add or es or push pop test lods fld mov fcmovbe jno (bad) in clc fdivrl xor inc mov adc pop test push inc imul data16 xchg lcall out xlat loope pushf or lds das jmp jbe sub test inc sbb orl jns (bad) or jnp push addb out sahf frstor mov jmp lret push inc pop jle test fidivrl mov xchg push cmp or mov hlt cmpsl xor cs outsl push or lock inc lock fs mov pop stc je std out insb neg mov cld repnz sub loope jns mov sti test fcompl jecxz pushf (bad) pushf xchg inc mov sbb cmpsl xor int push jmp jo movsl popf in dec mov jae stos scas inc ffree jno stos push jp inc das jbe ficompl jmp shrl mov mov in aas mov cmc (bad) outsl cmc arpl mov pop xor pop outsb orl notb mov mov sti pop test iret mov in pop dec enter mov dec and shl inc jnp push popf in mov addl arpl xorb add push int fwait mov hlt cmp push mov fildll fdivrs js xor or xchg sbb add into adc popa mov xchg mov mov inc int3 mov cltd pop loop sbb and sub cld sbb mov xor add cmova dec jecxz jge cvtpi2ps in adc mov cwtl xor add nop mov dec cli sbb dec push inc push cmp test mov dec push mov (bad) idivl mov or test inc fsubrl lea sub add mov sbb jno mov mov notl jecxz (bad) mov adc fstpt push cmpsl mov push scas cmp dec les mov pop xor xchg (bad) jo mov pop push stos pop loop jg movsb jo pop cmc jecxz jmp xor mov jo rorl adc mov mov pop dec ret (bad) cwtl jns,pt xchg (bad) hlt dec (bad) movsl pop inc std int imul mov aad jge adc daa call icebp cmp pop xor add cmpsb aas xchg jbe sbb xchg insb movsb loop push mov cmc xchg notb jl cs scas lret idivl jbe cmp scas lock fs xor push jg sbb cmp jnp rcrb mov arpl les iret ja scas jno cs mov (bad) rorl mov lods sub cli data16 jp cwtl aas out cs adc nop jl cmp imul int jmp (bad) fstpt (bad) or popa rep or cmpb fwait jo in hlt arpl test adc sub or add adc sbb test data16 pop in xchg rclb repnz xor xchg aaa mov repz jl les add dec cli sbb mov jl mov loop and dec xor (bad) cwtl pushf ficoml jg sub popl or inc add iret ljmp stc xor fsub fisubr out (bad) pop out into std aas repnz inc pusha idivl pushf mov mov dec fsubrl out (bad) ficom addr16 (bad) dec mov cmp repnz aad sub orl cmp test je inc push xor test shrb pusha repnz fcoms sub test dec hlt scas (bad) jne clc dec loop mov arpl add cmp js daa add fsts out sbb clc xchg cmpb cmp xor jmp jae xor rclb adc out add jno adc stc xor push jge nop (bad) (bad) mov mov icebp sub mov or stos xchg cmpsb inc xchg jae aad mov notl imul ret ja cmc imul mov push xchg mov dec pop (bad) ffreep cmp fsts xor test add in cmpsb clc clc sbb or mov push pop mov pop sbb mov mov jecxz arpl push rorb xchg push cwtl mov pop cld mov add inc mov dec push jecxz call push adc fisubr das pop inc shrb dec add insb mov enter (bad) pusha jo xor mov lcall es jb es scas jns out loope lea mov mov inc leave mov loopne icebp push mov xlat ret dec lcall les lods stos mov cmp xchg xchg sub cmp mov jecxz fldl cli into add mov push dec in adc or sbb ret xor lret mov enter dec jecxz dec scas sub mov les jle and enter movsb sarb in cmp sbb shlb inc data16 sub (bad) sub cmpsl (bad) mov sbb cltd outsl stc lret into jnp (bad) in xor call aas insb inc inc xchg mov lods stos lret push (bad) or push pop xor fsubl leave adc add in dec in mov stos xor pop mov (bad) sti sbb lahf inc mov pop fdivp shl imul push inc add mov adc pop out sbbl lods dec or adc shl mov addr16 jge imul stos push and mov stc out xchg inc xlat test dec les sbb data16 in and inc out leave mov cmp movsb int cmp dec mov jge jmp mov mov test (bad) lret xchg mov cmp imul jno mov cmp iret decb xor addl mov mov dec (bad) pusha popf inc mov (bad) in add fild test xchg xchg jge pop xchg push add ss adc adc mov mov insb jne sub pop sbb bound (bad) jne pop mov call xor add mov or mov mov mov dec shrl push popa (bad) jo aad mov jnp xchg scas pushf xor movsb pop pop mov and inc xchg mov scas jecxz dec imul int sub call ret cs mov imul mov mov std rcr mov scas mov mov sarb adc pusha or xlat and sti (bad) or push jge sbb repz adc push sub push cmp lea mov fild xchg inc in cli or jne dec jb lcall lock xchg adc push loopne andl into (bad) sub dec fdivrs ja push jns pusha jnp push ljmp es imul mov xchg and pop dec push mov aam pop lock pop push out scas lds mov pop xchg fst mov fnstenv xchg rcl getsec mov push dec sti lahf push mov add jp (bad) mov negb rorl mulb movsl fbstp out dec (bad) pop sbb jbe cltd out push imul dec xor pop (bad) mov jb push (bad) ljmp pop jge cld or fmull xor pmulhw and inc fildl pop rcrl (bad) dec mov adcb call rcrb out and mov and mov or lahf xor stc and mov movsb mov jns repz insl sbb jnp out add pop fwait mov push mov fist (bad) xor mov sub pop pop ja cmp push dec ja xor sub mov ja push jbe lcall xchg es xchg xchg mov dec out inc adcb pop and pushf (bad) jmp xor imul jns fnsave sub scas pop mov jmp cltd sbb fstps outsb cltd test and inc xchg jmp call ret dec push jno add xor sub rcll aaa dec pushf mov pmaxsw movsb add (bad) roll pop loop in push dec outsl push loop jmp pop rcll ficomp dec cli lret enter cli loopne or fdivs push test stos ja mov cmpsl ret xor int xchg stc scas push ret mov sub rclb scas out movl xor test fs xor fsubp sbb jmp (bad) jmp je pop mov (bad) mov les cld rol loope jbe in loopne divb sbb stos lods jne pop test pop jne imul sbb test push dec sub pusha lcall jns add dec lahf add stos jge popf dec rcrb cmpsb jae movsb adc pop pusha jns push xchg mov mov bound mov sub xor ja cmp dec jle outsb scas bound sbb cmp test in jle push jae pop or jo imul fidiv cs push adc das pop insl je mov sub je nop (bad) mov jge sub into cmp lahf add xchg jnp (bad) jnp in inc icebp mov sub push pop shrl ret xor add pop dec mov out push loop mov xor and push (bad) ss sbb pop lods mov loope lea sub popf mov mov (bad) ja inc push loopne sbb sbb cwtl sbb out xchg (bad) sbb lods jb jge sub js stos popf jl mov mov idivl loopne xchg fild xor dec in notb rcr xor pop sti cltd insl mov jmp push jg (bad) xor rclb imul jecxz mov bound push or arpl dec cwtl cmp test mov sahf sub out in mov or aad xchg jae fmuls and aas jb jge into xor rorl sbbb loop mov jne jmp mov jno jnp xlat in lods sub pushf adc gs jp cwtl repz add test paddusb inc in rcl cwtl popa cmp add push or mov dec out push mov test mov push jne mov mov fistl outsl pop sbb adc mov adc push pop popa ds adc xchg and call pop and push mov pop pop fcompl divb mov cwtl jl xchg inc add mov dec or rorb aaa lcall jnp dec mov hlt lods out pop out cmpsl adc sti lret mov xchg data16 icebp xchg dec scas and (bad) mov add pop imul stos sub out lods (bad) mov ret int3 cmp inc test mov and sub test js adc fcomi (bad) fistp xchg nop xchg test lahf es out jae pop lcall mov dec sbb in mov (bad) cli mulb cmc or pushf push rorb nopl jbe mov je mov fsubrs mov add iret mov jb inc and xchg pop mov bound mov ss inc mov addr16 subl aam mov fwait repz inc add (bad) pavgb inc xlat aaa ret out xchg push mov sbb mov popa fnstsw test lret and mov rcrb fldenv pop pop or es ljmp add xlat nop inc push bound xorl dec push mov add and insb daa pop (bad) push jl mov push je les jp or nop leave push jge sbb push and xchg and push mov int3 inc or and adc cmp into jmp jmp add adc dec adc pop and and lret dec sbb es lea pop aaa ljmp pop ljmp jmp repz xor cld lret xchg mov in sbb dec pop push mov gs leave adc inc jno mov pop jbe push xlat sub fsub add fisttpl inc add push sub xor movsl scas (bad) (bad) mov cmp mov and inc push std jne jle cmp loopne xor xchg cwtl sub mov mov xor pcmpgtw rol imulb jl adc sbb (bad) imul adc jbe sub inc sub mov or cmp xchg scas push pusha lock fistpl or enter push mov sbb adc adc imul loop int3 xor xor mov lods xor sbb mov mov jecxz cmc jnp push pop test bound mov dec jl fwait cmp subl icebp stc pop fdivl lock sbb or movsl in sbb pop sarl xchg (bad) xchg or or out stos insl push adc cmpsb dec push out xor dec push ljmp sbb clc push cmp or int leave gs shlb mov jmp loopne enter jae mov pop cmpsl outsl repnz lods inc mov xchg aam jae sarl fdecstp push (bad) rorb stos push fistpl fisttp add out inc test push in fstps scas cmpl mov icebp mov scas inc enter and jecxz into dec aad pop sub ljmp sub fisttp stc xor jne orl pop aad pop sbbb addr16 mov scas or inc and in int3 jb in xchg lcall bound loope cmp sub (bad) int3 out in loopne mov inc push fstps call mov incl insl sub outsl lret imul mov (bad) cmpsb repz gs pop or push inc add ret scas sub sarb jb sub insb mov and and mov hlt mov js sub mov dec scas pop imul jle int3 fnstcw (bad) push cmpsl loopne jg stos or aaa push sahf cmc sub popa ss insl mov aaa and push sub ljmp je,pt rcrl aaa jb jge lcall pop jne les clc mov ds lahf adc into lcall (bad) cmp push lahf data16 imulb sub adc arpl aaa jns sbb adc dec xorl mov ja aaa cli dec adc xchg inc or repz jg int cmp into jnp stos sub (bad) lahf mov mov push cmpsl adc hlt jae ss jl cmpsb and cmp into out into mov in adc jb xor mov les and xor sbb insl clc sbb jle (bad) xchg xchg (bad) inc mov and push les mov mov in int3 or ja nop fstpt fmuls inc ss pop add pop ret mov and fdivl xor into mov popa and bnd sub adc daa jbe out and ja int popa iret cmp jne and movl aaa jg addr16 mov or scas sub cmp movsl pop (bad) add sbb add inc and xor push outsl jb lods call int3 mov fistpl movsb jne int mov mov jbe push jg xchg in cmp jne insl mov xchg js mov repz push ficom negb popa add jns and clc mov aad xchg nop stos lcall repz sbbl push jl mov pop xchg pop pop adc push int3 pop cmc push std dec stc dec xor movsb sub cs jnp mov dec push notl pop push and jo xchg fs ror push ds or pop call gs fs fisttp addl and fcoml jg dec pop cli test daa push sub cmp mov (bad) std mov es push ss adc and adc fstpl sub inc jmpw pop nop fstps out push test mull sbb push jg fabs (bad) cmpsb mov mov adc mov insl mov popf jg shrl out rol sub pop jge xchg inc rclb cmp mov jnp sbb ss divb mov int3 mov scas test adc loopew pushf xchg xor xchg mov mov xor insb mov daa idivl pushf lcall aad idivl movsl jae inc (bad) (bad) das lahf inc push std aam idivb fwait lods xchg loope inc jb fwait xchg arpl cwtl xchg or push dec push mov dec in xor imul ds out je leave icebp jbe dec jbe hlt jns mov icebp mov cmpsb aas dec lcall fcoml ljmp sbb xchg out lea mov or xchg cmp insb xchg shrb add mov ja loop pop popf cli mov jne push or xchg loope out xchg push adc sub dec lds dec fs xchg ficom or mov or push push rorb in pop cwtl push lea xor ss dec lahf add mov sbb fldl lret adc jno pushf sahf adc inc std rolb adc ds stos xchg out (bad) xor es lcall xor jmp test xor sbb and jo xlat ljmp rcl lahf mov and push (bad) xor or pop insl pop dec test jb or in fsubl xchg test adc jge mov test inc rolb cmpb dec lret lods adc mov or mov out lds iret ret push add push jnp shr lret adc and push sbb mov sub inc mov add pop lods mov mov mov lock xlat mov mov pop stos inc mov repz (bad) cwtl push sub jg outsl leave jge fsubrs es push dec mov mov std test xor insl aam inc add mov mov xlat outsb mov stos xor inc adc pop jns popf push jno push mov or adc cmp sbb or jnp cmp jmp push mov jge pop sub lds repz outsb repz insl pop mov mov rolb pop lods in and or pop in popf and dec inc or sbbl xor jmp imul cmp pop push sbb jae (bad) or in mov xchg xor mov mov setns sbb pop push fwait xor gs pushf mov fwait ss xchg sub cs xchg rcll dec mov out and jle int3 jbe cwtl pop adc js dec push push std flds inc inc idivb pop pushf mov fs repz jnp cmc out aad sbb (bad) jae or jg mov cmp bswap dec mov jbe je inc jbe push push arpl mov mov addr16 and mov and inc add and out and push or and mov mov jb pop pop mov and xchg push fdiv insb xchg repnz (bad) xchg xchg mov jmp notl mov cmp rolb mov aas or popf xchg xor ret les (bad) aam adc add and and sub fs cmp scas pop or sub cltd out outsb test cltd iret add movsb adc pop int cmp pop xor xchg push xlat mov lret mov jb cld (bad) sti add out cmpsl sti ror push (bad) pop mov add cmp cmp popa jo mov negb (bad) jno or dec shlb call hlt (bad) inc fistpll scas jne jbe cltd repz adc xor (bad) shlb mov mov pop mov fs fs pop dec sub sbb push out enter pop cmpsb lock lods inc push jb jno jg dec cwtl scas pop je push mov mov (bad) rcl popf rcl clc lret mov xchg adc push xchg adc sti adc xchg fnstenv mov test xchg lds lods loopne dec mov ja ficom xchg pushf fisttp fs fcompl les movsl cmp push in mov hlt daa jmp repnz xchg sbb mov jecxz (bad) in nop inc popf inc movsb popa push aaa xor mov movsb (bad) lret add dec xchg sti push leave lds dec and ficoml xor xchg sub sahf add lret repnz shll pusha jb test std fstps neg jmp jb out jo xchg test inc and movsb loop push mov movlps aas push in jb int out inc mov or fidivr sbb add pop xchg mov in pop pop and mov adc cmpsl sbb sub push jmp add jge fsubrl in adc jle hlt pop cmc sbb adc dec pushf dec and push pop je pop push je adc mov inc jecxz cmp (bad) push rolb adc add mov dec sbb stos cld xchg pop jecxz cmp mov ds dec popa push lea pop inc push ret mov rol andb pop mov into mov imul pop stos enter xor (bad) (bad) iret adc imul idivl and push int3 inc push sbb inc leave push mov std rcl pop mov push sbb and mov mov or ret sbb je (bad) ret fildl stos mov push push mov xchg pop fistl push dec xor jbe fidivr add lret xchg into leave mov xchg gs mov arpl (bad) mov lahf sarl jb es push icebp sub int loopne sahf idivb repz into ja cmc mov add adc xchg cltd test mov mov scas popa mov ja xchg ja mov cmp xchg sbb fmul insl lret and dec push sbb fidivr and addb aad dec arpl movsb or call into hlt inc hlt (bad) scas jp mov mov sub mov scas jmp (bad) repz cli inc out jb mov (bad) mov loop sbb roll xor jl pop jbe repnz mov xor dec mov cmp sub mov sbb dec into inc std ss mov cld pop xlat nop test repz pop mov ss mov in mov inc push xchg pop or sub sub jo pop repnz pop mov xchg das insl jno mov (bad) repz dec add push inc mov xor je fidiv test jp loope lret loope ret faddp dec inc add xchg jae shlb mov adc pushf mov dec ljmp push enter sub fdivrl jbe icebp jns not adcl push roll shll pop add xor clc mov jbe cltd mov shrl iret leave push daa insb cld push (bad) adc adc mov repz pop push jp loop fmulp lcall pop mov jmp jb sub outsl je lcall and call incb cld cld push xchg fildll ret rorl mov mov fucomp cmp push adc aad xor inc aam pop prefetch movl lahf sub (bad) repz jp pop mov xchg sbbb mov das cmp cmp scas or xchg cmp cld call lea nop xor xor push cmpsl and xor outsb out mov (bad) rorl stos jp mov sti aaa hlt in or or ret std pop mov and mov test int3 into sbb dec (bad) in (bad) sub in stc (bad) pop mov int3 cmc dec std mov lret int3 sti lds xor addr16 out sub jo sbb rorl sbb mov mov jne mov mov int3 (bad) mov std (bad) jb dec sbb dec xchg aaa sub insb std mov or dec aas dec mov dec or sub sbb lret in cmpsl sahf xchg mov les scas and xchg inc aam aam jmp in or scas and jmp or mov mov mov mov mov fnstenv adc push push das cltd in dec or cmc push movsb popf mov ds out daa ret stc xchg inc ja xchg mov push scas js fs jb daa imul fs bound loope out out sub xchg xor add stos testl cmp arpl xchg push pushf add sub (bad) sahf enter cltd add mov int3 sub scas inc lcall pop mov out out inc ss je pop mov push (bad) (bad) mov or push adc dec fildl les pop jne jp (bad) insl pop mov mov mov dec cmp fstpt (bad) adc sbb sbb push or mov in dec pop cmp mov fsubrl insl incl jae add inc stc mov inc les mov out sub (bad) sub push (bad) test mov add fwait std into imul jno jb or dec repnz xchg les push pop jb adc lods jbe movb add emms inc add je fwait (bad) jmp push lea and mov push mov push cwtl push out cmp addr16 sbb xchg (bad) jmp sbb jle or and dec sub push xchg aam fidivr cli dec shrb push mov mov (bad) xor cmp and mov push mov mov sbb pop mov add sbb push mov add (bad) aam pop jmp sub mov fidivr push aas (bad) cmp shl xlat jns sbb xor pusha iret aad loopne das or add shll push test dec das xor fwait adc outsb repz push in movsl (bad) jno adc call shrb clc out mov movsl ret push xor fistpll cmp pop xor dec pop lock (bad) hlt hlt lea out push inc aad stos pop add cmp mov shrl and xchg dec das (bad) out int je ja dec pop int3 jmp mov xchg idivl xchg inc inc and lock sub push and (bad) hlt mov mov push sbb push mov cli je or mov mov mov pop inc xchg sub jmp fsubl ror pop fdivs ljmp jno mov push jno mov mov mov or aas push outsl outsb lret int3 into stos (bad) pop mov idivb or and mov dec cmp pop push shlb xchg test jno sub and rorb cld js push and xor cmp aad cmp fwait xor jnp repnz mov int3 andb loope (bad) mov mov xchg movsb and jae cmp outsb cmp ret das ljmp in stos push je jle mov pop ljmp cmp std ret and mov js ljmp pushf and lea ficomp xchg (bad) mov hlt sbb jne fcomp dec mov stos test (bad) addr16 lock cmc and dec pop or test notb aas (bad) mov mov (bad) cli xor or mov imul lock test adc adc sbb push rol push cmp inc jns ret out inc push (bad) inc sbb mov dec movsb pop test out repnz pushf stos pop or mov push cltd cwtl xchg dec mov das shl sbb cmp lock cwtl ljmp cmp aaa xor pop cmp mov (bad) (bad) call fsubl jne add or loope xchg inc pop lods add cmp and gs mov cmp push arpl jb add dec je dec (bad) iret lcall mov in and into (bad) push ds cltd mov xor dec nop mov (bad) loop or fwait add mov fdivrs push pop aad or stos cmp adc pop sub inc mov adc pop scas sahf add test mov fidivl xchg lea loop (bad) testl movsb dec loop popf loope xor lahf push push sub dec popa pop or fcmovnu iret push and test xor add cmpsl cmpsl xor push decl xor mov sub adc xchg jp into mov imul dec xchg clc mull outsb cmpsl push inc shrb mov lock fstl aam icebp loop jecxz or cmp push pop and (bad) mov xchg add dec mov mov int3 xor and ret add in sarb and lock out sbb andl xchg stos pop pop lock lret in nop es insb sub inc mov inc adc ds sub les xor outsl sahf dec xor sub in cltd cli pop cmc inc push push stos loope mov shr mov or and out mov push jge sahf cli ss popf dec clc lret inc jecxz sub or stos jl sub iret sub add pop ljmp inc sub xchg int lds push sbb (bad) ljmp ffree jle rorb mov aas push cmp leave pop sbb imul xor imulb add pop fs fs in es enter add mov out scas enter jp cmpsl pop stc ljmp out mov sbb repz orl dec xchg jo cs sub mov add push (bad) psubq cmp sbb dec ja jo cmpsb jb aad inc xor adc cmp loope test xchg movsb stos les mov or (bad) out cmc sbb (bad) outsl push push pushl pop mov (bad) xor xchg add inc jecxz das push sub jg sub fstpt lods fadds sbbl fstpl mov sub popf es in loopne xor ss sbb and stc sti cmp imul clc imul (bad) jge rcr pop mov adc push divb mov stos or (bad) icebp (bad) lea cs mov inc sub pop outsb push dec jg (bad) out pop gs mov fimull mov out jl in dec jmp popf jmp mov (bad) xlat inc arpl fwait mov push repnz push xchg xchg mov in nop dec es out pop sbb js out sub sbb insl sbb xchg and jg aam nop imul lcall sahf and xor cmp (bad) lcall mov scas test xchg ss cmp mov inc dec xchg pop push add cmpl mov data16 ja mov push mov or xor and add montmul cmpsb push fcmovb jecxz lcall lods push xchg and push cmpsb inc adc int movsl in (bad) dec mov sbb imul sbb sbb mov mov mov jb (bad) xchg inc scas pop push int orb fwait cli mov sbb pop cmp cmp fnstenv loope ror jle or lds cs mov sub loopne jo enter pop inc or jmp scas pusha or mov sbb jbe loopne es nop jp stc icebp mov mov rcrb ss mov ds inc cmp aad or xchg and pusha cmpb cwtl out push mov movsb (bad) adc and cmp inc mov aad xchg xchg adc aas inc popa icebp and or sbb xchg sar cmp into (bad) sti inc push xchg out outsl jp call mov mov sub dec mov fst inc cmpsl aaa push fwait lret movsb pop push movsl sub (bad) das into or dec fisubr addl stos ss cmp fnstcw fdivl add lds jmp sbb mov es push outsb fwait push shrb jp xor testl dec inc pop adc add cmp dec sub jp and or sbb jns sub cmp les cmp and in pushf dec fdivrl mov ljmp mov or loope push fstpl ss jecxz ss fdivrl hlt push outsl pusha push adc test fdivp cmp sub aam cmp mov subl cmpl and test jp jae sarb xchg cld pushf (bad) or js xchg mov mov fidiv add or push adc or jp sub imul or inc add xchg add adc mov pop xchg fsubs mov testl sub (bad) notl xor enter jl and jbe cld lods push xchg pushf (bad) adc (bad) jmp mov sub bound movsl and pop jo outsb fstps add and rol stos mov sbb xchg and jne xor inc sub xchg mov movsl pand sti cmp nop ds je andl negb repnz ljmp ret xlat pop jo pop mov cltd fildll push ret push inc mov je sahf xchg scas cmp bound xlat and rolb xchg call rorb jae mov mov mov or icebp fstpt movsb test jb jp jle insb xor push stos scas cmp (bad) fisubr leave mov pop lahf and jne xchg adc fs out cmc adc add adc mov ss sub push and lods push push insb push cmp cli les cmp test rcrl add pop into and push (bad) adc icebp inc xor jns and imul lods cmp cltd inc mov lods mov mov and pop std es xchg ret cmp pop lds bound and pop sbb daa pop test sbb cmp inc adc sbb fidiv mov ret dec mov mov cmp stc sub das popf ljmp inc pop dec hlt lcall (bad) aaa add jo dec out xchg pop jns sbb mov in fwait jecxz add xchg xchg inc jl mov push imul fistpl pop jecxz or scas gs inc push js adc ret daa scas mov js xchg std dec adc push insb jle stos repnz cli aas rclb call rcrl lods or insl add call fisttpl movsl cmp xor rol rcrl fs pop xor outsl (bad) lock add andb push sub shrl sar pop sub (bad) xor mov sub jge ret mov sub inc mov adc iret into or xchg mov and in inc dec jg or sub mov xchg mov jne pop mov pusha pop in and lock jno aas or in repz lea sub imulb jnp loope add imul ss adc jle sbb push cmp std mov ficomp and call cld scas fcomp lods or or roll outsl test xchg or mov inc fwait mov sahf cwtl push popf inc or into lock or lcall push dec insb (bad) fcmovne (bad) sti mov and jle xchg sub dec stc cmp jno (bad) fwait add adc cmp xchg rcrb adc add jnp sub pop push lahf add adc jno inc dec xchg addr16 dec dec sub rcrl pop pushf (bad) popa pop mov cwtl icebp adc in les mov and nop into sub sbb loopne aas leave add out xlat fistl mov mov ljmp data16 iret sbb out das sub (bad) pop std push or and ljmp add das sbb inc mov push push bound add mov xchg notl mov or pusha mov ret decl lcall push add cmp enter sarl inc pushf scas ljmp mov adc push xchg shll add mov mov xlat sub addr16 iret lret stos xchg push jae insl js push adc and pushf pusha cmp pop out mov inc mov iret pop clc imull sub roll loop cld cmp pushf cmpsb sti movsb or std or in pushf lods rcll std push sub sarl sti mov adc add shlb inc mov jo inc push rcrb rorb mov jge fmull cmp div inc xchg mov and xlat cmp mov js adc stc sbb (bad) fmuls movl pop aam div test xor sub popf cmc push in mov pop pop sub js popa call push cld xchg sub dec xchg adc movsb test or jl xchg je xchg (bad) xor mov dec aad cmpsb ret es or jecxz xchg imulb aas test fldenv outsb pop outsb push push add sbb xor mov (bad) cmp jnp pop jmp out adc dec jl pusha rol mov mov mov push js dec xchg or cmpsl add jnp sub adc imul (bad) lahf jb mov int3 jno mov pop cmp scas jmp pop xor push sub into inc iret jns (bad) adc push inc rcll pop popa mov xchg pop inc mov push imul arpl in lcall cmpsl jp hlt push lods mov mov pop cld jmp pop adc xchg lret inc iret int3 movl jp inc and pop sti je fiadd loope shll add popa scas out sarl addr16 (bad) addr16 adc xchg out mov fiadd outsl cwtl cmpsb test insl push add inc idivb std leave jmp test stc xchg pop jo icebp rorl adc popa mov sub addl jno mov sub jne testl test hlt pusha frstor (bad) in sbb pop mov fcoms jp sbb sbb inc dec xchg and (bad) addr16 dec test or mov movsl clc rorb cld dec or inc xlat xchg jmp push xchg push aad scas inc xchg pop jmp movb rcll std add sbb jp in std sbb pop pop loope in dec out or loopne push mov mov cld lcall faddl lods arpl mov sahf mov jmp jae hlt pop mov std push lret mov popf fiadd loop ret arpl enter add (bad) bound push rcl cmp fstpl pushf dec fimul js xor pop outsl mov xchg call jno jp inc mov test mov cmp push and jmp (bad) mov xchg mov add dec and cwtl std loop pop clc push hlt (bad) cmc loope out cmp inc mov pop jecxz daa xor aam jbe mov out jns pushf icebp adc sti adc out xchg loop movsb pop pop mov into sub aaa push sbb leave sahf push sub int3 mov cmp mov test mov dec mov mov aaa mov repnz dec loope and mov popa add clc mov mov dec sti dec adc mov or jo pop dec xlat push dec xchg jle xchg outsb mov add addr16 test lcall out cmp js stc ss packssdw xor loope ret jbe mov lahf pop outsb pusha imul loopne xchg cmp fs test add aas jle iret mov test mov rol aad dec jl cmp movsb sarl imul or (bad) incb iret or inc pop (bad) cld test add daa test cwtl and cld add loop rol mov sbb push fadds adc (bad) cmpsb cmpsb movsb push jne push loopne inc les mov call scas xchg repnz mov xor scas adc lahf sbbb push enter faddl loope (bad) cmpsl sub stc push loope out test mov and jns js inc jg leave shrb cmpsl imul sar inc loope pop and dec scas or hlt js mov outsb lahf sarl adc lds push push xchg repnz or ljmp and inc (bad) add pushf imul or cmpsb nopl add imul int aas pop hlt pop repnz int adc fwait pop not shl or call iret pop adc cmp imul lahf and mov (bad) ljmp icebp test dec mov sbb jecxz je mov loope dec adc mov or jecxz inc int mov inc sub xor add inc push mov dec pushf lcall arpl (bad) movsl sbb jbe sbb push add xlat aas das lahf add pop ljmp lock xor (bad) rcrl pop iret xchg adc scas fsubr push and mov pushf and int pop cmp aas (bad) fcmovu loop sbb mov push adc jmp add jecxz sub jmp fmulp jp (bad) cwtl pop inc decb add lret fiadd mov lahf pop je (bad) lods lahf and clc sbb outsl mov gs paddw aam mov dec pop pop les jo pushf out sub hlt je bound (bad) mov andb rcrb xchg stos push jg mov fucomp xor inc lcall out adc js xor fimul xchg adc cld xchg and stc movl cmpsl pop les mov cmp add sub faddl imul cs sahf lahf repz lods push cmp sub shrd rorl push jmp cmp ljmp pop xchg frstor add pop lcall jne cmp test mov repnz popf imul out movl xchg push arpl bound call push divb call bswap (bad) cmp (bad) repnz jge lods nop fiaddl cltd mov hlt xor adcl lret pop pop mov stos (bad) mov push nop jl test xchg ficompl out jecxz fcoms (bad) js inc ret mov lcall lea and jne adc xor clc dec pop mov and sbb add push push push dec (bad) jmp mov mov add fistpll push xchg mov mov push fidivl xor rclw and mov stos pop add sarb mov imul lock jnp pop lods and popl aaa scas push jbe es dec fsubr xchg ds (bad) repnz out ret add push xchg jo sbb pop push cmpsb mov mov or gs sub aas ret in push xchg loope (bad) push or mov mov cs cmp lods xchg or push bound (bad) add pop jmp or pop mov add outsb push push test int sbb jae add pusha mov xchg mov (bad) jb in cld (bad) lea fbstp loop mov dec add (bad) adc lods loop lock cmpsl push (bad) fwait push add data16 or addr16 inc insl mov sarb jl ffreep xchg out mov push sbb hlt shll data16 into xchg add lcall jg sub xchg fpatan mov inc push jecxz inc (bad) loopne xlat loopne mov call lret sti mov mov adc push inc adc inc ret cmp adc lods outsb or pop sub daa xor shlb push mov inc sub cmp stos (bad) das mov je (bad) (bad) iret scas xchg push ja lret and mov das loop jne xchg stos xchg or jbe dec outsl mov or cmpsb loop stos roll lds nop mov inc in (bad) and add sub insl lds bound clc inc in leave pop mov dec jae in daa mov dec dec insl inc lahf sbb dec pop (bad) xor xor (bad) mov and sbb sti repnz push bnd mov adc mov les jb sbb mov fidivr stc ja scas sbb xor icebp mov out hlt rcrl pushf xlat clc pop sbb scas mov pop adc push out leave loope out clc fild insb add xor xchg js cmpsl aam shlb lock adc pushf push insl in push xchg decl adc push mov mov push inc push lahf and inc inc jmp xor push fwait add lds sub nop inc pushf sub add popf bnd sbb arpl mov outsb and lds daa sbb mov (bad) mov push divl dec dec pop or mov test sbb xchg sbb xchg push pop cmp (bad) pop imul movsb cmpsb sbb push xchg loopne stc fnstsw mov aam sarb mov rorb cmc lcall jecxz xor adc outsl xor pop dec lock fidivrl movsb xchg jg sub dec ficom xor les add movsl sti push xchg out jmp in jecxz xchg addr16 sbb push test push std popa add mov mov mov push not or aam (bad) mov xor insl pop jl and add or adc (bad) sti push sub adc loop pushf mov je lahf fisubrl stos stos mov sarb xchg fcomps shrd pusha out sub push dec xor push jl popa je dec fistp mov data16 push add mov jmp pop cmp loope push mov popf jnp lock (bad) mov mov call or in pop mov adc aam inc call xchg pop jae,pt mov add xchg pusha mov movsb in mov lcall pop cmp ds repnz leave sbb hlt icebp insb js jp xchg cmpl jecxz push cmp xor inc daa lcall sbb push mov minps insb or icebp add sbb adc pop and xchg xchg inc cmc call mov daa jns int3 cmp lods mov fdivrp sti sbb (bad) stos loope and decb add adc push js pop mov sbb lahf adc inc cmpsb inc cld scas xchg stos cmp test mov or rolb das (bad) pop out (bad) mov sbb movsb add inc mov popf pop (bad) lret rcrb sub roll push dec outsl mov fwait and sub rcrb in mov aaa push sbb sbb xor xor mov push dec jmp gs adc pop mov xchg cli adc inc ljmp aad popa xor xor popf out jg cmp cwtl mov adc out push subb adc inc (bad) cmp fs lret push mov adc scas push sub scas mov ja aaa leave (bad) push jb xor sbb jnp mov cmp out mov sub jo cmpl jmp xchg repz rcl xchg sahf das and xchg pop pop stos or in xor scas faddl cmp jb mov out rcrb lret add popa jb (bad) fwait mov add add cmpsl pop ss xchg mov popa mov xchg rcrl inc lahf insb out cmpsb data16 adc inc xlat fmuls inc dec sbb fs jae lods aas pop cld lea hlt pop add or jbe aam pop daa mov xchg lret cmpsb mov testl sbb push lods repz cmp sbb fs push lods inc cmc push insl mov push out stos faddp lcall mov repz pop aad cmpb jp daa sbb loopne and jp dec dec fcmove popa mov and adc iret push pusha push pushf and and pop add mov shll ds push cwtl js test xchg loop xor loopne jge pop push sub out cmp aas cs lods int jb fcoms insl imul aaa imul mov test sub cli repnz out fwait xor sub test movsl push das adc sahf mov push xlat loop (bad) sbb repz daa js,pn mov cmp mov jae cltd push iret inc leave inc into fucomip daa mov pop dec or loope fcmovbe fiadd sti jb (bad) fscale les loopne mov cmp test jo and push dec xchg mov cmpsl out (bad) jae (bad) pop jo stc pop xchg fcoms pusha loope push pop cli test (bad) cmpsb pop xor sbb sub mov in cli jno fwait xor sbb imul xchg add (bad) mov jge test mov pop sub jmp xchg call xchg xchg aad (bad) ficompl jb mov scas xchg imul sahf adc lcall cmpsl mov jg mov cmpsl xor (bad) (bad) rclb or in mov jo add popa out ret inc mov dec and in (bad) andw aad xchg adc pusha xor dec and pop pop mov mul mov (bad) mov aaa fsubrs cmp jmp into mov repnz (bad) sar adc out jecxz sub movsb pushf push dec loope call std cmp inc loopne dec gs dec lods adc xchg enter das inc repz push push into push xchg xlat rorb cmp ljmp mov cmpl cmp and push cmp stos cmp iret mov push dec dec push out fcoms and es dec ret dec stc int xor dec data16 test test lods arpl hlt loopne out (bad) cli pop rcrb mov xor pop enter into sbb aam jb mov cmp jmp fwait mov dec inc adc sub xchg fwait and jg popf xor das in dec sub push lcall ret sti mov adc lret xchg in les add xor mov les cmpsl scas jp lret cmp ds movsb (bad) mov mov push mov insb fyl2x cmp mov push xor movsb dec es mov pop cld dec das popa js and mov sahf sahf test jge inc addr16 das (bad) popf ja das popa inc mov repz add in lcall cli sub scas xor addl add aaa shlb clc arpl fisttpl daa push cmp sbb mov mov pusha stc les xchg dec dec enter loopne subb rcr mov mov inc inc nop loop cld fistp jne jecxz lods aas pop pop cli pop rorb adc loopne or pop sbb imul call sbb nop xchg xchg jg aaa xlat int3 or in ret aam out insb lahf insl adc loope or xor pop call arpl (bad) in inc sahf mov lock xor repz add jl cld push (bad) scas (bad) pop les movsb inc in and les mov mov lods sbb popa gs adc inc aas jl (bad) mov mov cwtl xor add stos pop xchg arpl mov or (bad) dec and rorl pop dec pop xor mov in jmp imul pop dec xor dec aaa sbb cltd mov and loope iret adc es mov lods imul (bad) xor mov pop aam (bad) dec inc pop dec mov cs mov test mov pop (bad) lods andl mov mov cld jb mov add cmpsb cmp sbb cmpsl insb mov out mov inc lock mov push dec call pop and lods lcall mov int push or mov gs lcall lahf (bad) lcall mov mov adc fwait out add aas mov aas sbb jae xor fwait xchg (bad) repnz xchg scas adc jnp mov ret sbb cld inc pop ljmp in ficomp mov loop aad pop lods mov pushf cmc adc push pop jo mov sub out ret mov xor imul add cltd add add mov inc add ja sti mov push mov pop xchg push fnop xor jle xor test lcall xchg push adc jno jg int jp in (bad) out mov cs (bad) fsubrl out mov jle lret (bad) je or xchg iret and lcall insl out pop iret mov and enter push mov xlat push orl or rcrb jae enter cmp call mov sub out adc push mov sti cmp icebp or fdivrl adc and sub cmp or sub popa jno mov and push mov fs xchg mov pop popf fwait xor fbstp mov pop test pop imul dec repz push jae mov add jo in fwait stc scas sub jae sub (bad) lds mov repnz xchg sub outsl and fistpl adc in mov jl lods int3 aad pop (bad) lret cmp push sti out repnz or lods xchg ja mov jnp in push push sub cli inc push enter loopne mov loopne or es ljmp in lret add ret int3 orl rorb add mov sbb das idiv stos xor push sbb rorl decl xor lcall jp (bad) mov push out mov ljmp call cltd push mov sbb dec dec push cltd mov ja push xor jnp movsl and mov call push aas test xor sub test aas sti (bad) cmpsb sbb sbb push mov push popa fwait pushf lea fiadd sti outsl aad add pop mov xchg push adc add (bad) sbb loop sbb imull ret add xchg stos mov mov adc or lods xlat sub mov in xchg test cmpsb call cmovae aad xchg push ss pop add lods push fmuls push repnz cmp test loope ret push push jmp out sub jecxz fwait sub (bad) bnd imul lods or insl inc mov pop lea icebp stos or mov xlat pop imul stos sub imul mov adc iret repnz js xlat or lock mov push sub and add scas adc pop lret icebp fisttpll cmp pusha sub push aaa pop mov mov cmpsl add cmp mov mov inc mov ljmp hlt mov mov jp in daa int imul (bad) ja or in cwtl cli movsl rcrl enter call aaa in daa fldenv fs aad lret xchg call push or and and popf fidiv inc jecxz daa inc bound popf sbb inc sbb aaa dec movb mov pop cmp loop xchg add and jno adc fldln2 xchg clc stos inc into xor adc mov ret fbstp ljmp adc addr16 mov aaa imul mov sbbl or xor out lods nop andl fisubr push popa push loope icebp jbe sbb pop xor icebp test inc jge cmp mov or mov jnp lret ficoml repnz shll pop mov faddl scas and xor stos je jg fwait sbb inc push fldcw dec test ljmp push pop rolb or mov movsl aaa sub xlat cwtl (bad) jmp (bad) cmpsb lods lahf xchg sbb xlat cwtl push or loope mov jl aaa lret in adcl cmp (bad) fidivl mov movsb nop movsb out fmul jl (bad) orps push xchg dec sbb pop inc movb inc mov or test sbb push out insb roll test fisub xor mov inc in xor pop and stos inc movl or jo dec mov adc inc mov cmc jne sub sub cmp jne push sahf push mov loopne (bad) or leave cmp je mov xchg xchg push mov in sbb xor sbb mov jle or sbb push jb cmp out push push das push test jns mov pusha sub aas sbb cmpsl notb jb mov mov jp subl lock arpl fbld mov (bad) imul xchg push sub mov or jne xchg inc lret inc mov daa pop int add sub mov pop push repz aad xor dec dec push incl dec test rcll enter les fnop cmp mov push es inc fsubrs xlat js jbe jmp cmpsl cs push fldcw adc cmp test aam mov mov jecxz movsl pop enter xor in jae sub xchg pop xchg mov xor mov pop mov adc loope test (bad) loopne and push dec jnp inc scas cmp mov jbe fyl2xp1 mov sub adc (bad) pop xor stos sub adc std xchg aaa dec repnz xchg shlb scas mov addr16 and enter enter pop (bad) icebp arpl adc js rolb js scas adc push xchg adc icebp adc inc sub (bad) hlt ja cmp jno int clc xlat outsb pushf sub stc and dec clc push xchg outsb dec dec fisttpl out push inc sbb pop (bad) mov sub ljmp enter jle sbb pusha mov call popa or adc sahf nop jge fdiv cmp and jmp mov in push push push dec out testb fistp ror inc jbe sub std cmpsb subl sbb mov fwait push nop outsl dec xor orb mov push div mov dec inc mov dec aas imul inc xor fnstcw xchg cli ficom mov jne test rcrl shlb add cmpl dec mov cmovne popf xchg xchg (bad) pop fiadd out loopne sub mov inc mov cmp sub popl adc xchg enter mulb (bad) fs ja lods (bad) js imul roll orl cld xchg add jg int jo iret aam dec sbb dec js mov sahf inc inc lods fiadd sahf (bad) sahf sub ljmp dec sub cld cwtl icebp lock mov pop xor xchg or jo out sub nop xor in jge (bad) lahf cwtl inc popa cli lea leave mov inc and pop test pop jno or cmp sarb sub or push (bad) out mov cmovae or es insb std (bad) mov xchg cmp inc push lret mov movsb out inc push xchg xor (bad) dec mov std gs gs xor or clc pop (bad) imul enter jb jmp cltd clc add repnz popf mov icebp lret in stos adc addr16 ss adc inc ret sub in push adc repz mov outsb in lock leave pop popf lahf stos xor (bad) push mov mov dec shrb pop or test test xchg push outsl (bad) jns mov adc test insl fimull popa aam test es mov mov push add stos add in or jbe xor (bad) jp dec pop push data16 (bad) fldcw test dec es cmp mov cmp or inc das ret ret cwtl loopne test mov sarl js roll call outsb int3 and mov or sarl adc js out div cmp push xor jns out fsubrl out dec (bad) cmpsl andl pop pop add std dec mov and and adc in sbb cmp mov push pop es push ja sub sbb mov or jb repnz adc es jecxz mov icebp mov insb and adc ljmp clc sub aam sub clc sbb cmp dec (bad) into lea data16 sahf divb (bad) lcall and scas push js nop xchg inc popa fbld and jns jbe lods jecxz fnstsw lds jne lods xor (bad) cmp test cmp push lcall jmp jp or dec add imul pushl cmp add pop test push outsb fwait popa popa jl jns aas inc xor movsl mov loopne cltd rorl jns daa icebp mov sti add scas dec and leave lds mov inc dec sbbl push in xchg bound sarb and inc aam scas cwtl jnp mov imul lahf inc jecxz dec aas fs stos cltd mov dec sbb mov test dec mov and ret xor sub push into xchg pop cmc sbb add loopne sbb popf push xchg jg pop aaa cmp and jno xor out mov inc lcall adc scas xor push frstor in js push lret aad cltd add cmpsb icebp imul je stc mov aas sbb xor (bad) jbe adc fstpl sahf in cmp jne mov int3 jnp add xor insb jns outsb ljmp out out dec gs cmpsl push lods mov sbb jb inc sub xchg (bad) les pop cmp dec (bad) mov mov sub sbb daa push dec gs fwait call nop icebp sub lret lods sbb pop or loope imul jmp insl mov mov leave test push fsubrp cmc and or popa clc xchg (bad) les pop insb push or loopne int nop jnp movsl (bad) jo bound and je adc jp test insl call fildll cmpsb hlt cmp out ss leave pop ja cmpsl imulb xchg adc xor cmpsb dec popa and orb pop sahf outsl sti daa mov js add xchg and mov pop test ret cmp add loope mov mov push pop in sbb popf dec aam cmp sti repz mov jmp mov mov mov jns test aaa (bad) movsl push mov pop daa iret fcmove and (bad) mov pop addr16 cli mov jle mov ret clc xor (bad) stos imul xor mov and lcall test dec mov push cmpsb cmpsl sahf mov and enter mov jmp mov xor jno jns push int3 stos es push dec inc popa pop cmp xchg pop cmpsb fs in push sub cwtl ficompl push in dec stos mov stc data16 cmpsl loope xor sub jb push cmp movq pop xchg inc mov pop inc daa push inc idivl jno mov (bad) push sahf testl xor (bad) fcmovnb adc (bad) dec sub dec aaa pushf icebp xlat mov lea jmp jns or jmp mov cmpsl add pop mov shlb (bad) lret lods fidiv cmc xchg and lcall xchg ficom inc shl sub pop push repnz push cmp and sbb dec popa shrl add addr16 push lods pop mov xor rcll bound jbe rolb or test inc push add int out cli in push movsl cmp (bad) adc sarb fs (bad) xor sub jns xor push adc mov xor or mov in ljmp sbb pushf xchg sbb xchg out (bad) adc inc mov dec imul out out loopne and mov inc pop pop jno jecxz mov fnstcw mov push inc bound imul fistpll sbb sti stc test cmp roll inc jmp sub addr16 inc mov mov leave inc outsl xor mov out movsb dec mov movsb (bad) dec push rclb jbe pushf fidivr or xor and insl or sub movsl and int add sbb sti jecxz lret popl out stc xor addl cmpsb jle adc mov or cmpsb cltd mov imul test and sub rclb push mov push mov addr16 popf (bad) out lea pop or ficomp mov aaa fbstp sub std arpl jb sbb pushf orl ja push xchg inc mov and lret and cmp mov daa outsb mov xor and (bad) cmp pop sarl xchg mov and push pushl push dec sub iret lret xchg jnp int cmpsl sbb pop lcall xchg aas and mov loopne fiaddl push cmp mov sub divl ds lcall and out xchg pop test hlt insb lods push dec inc into fucom shrl pop push call and lret push cwtl and lods sub clc bound clc cmp dec adc sahf xchg in fdiv cs mov xchg jp sub push adc andl cld fldenv xchg and mov mov (bad) push aam (bad) dec sub cmpsb and fildl mov lret pop icebp int3 sarb cmpl add inc jne clc jnp loopne in mov xor std dec cwtl xor (bad) mov push add xorl rcrb bound dec ja data16 jne add or pop xchg sbb cld push (bad) mov cwtl mov inc jl fildl sahf dec clc loop in xor fucom and aam int mov jns sbb and and (bad) ds inc stos jl sub loop daa sbb repz fdiv ret mov cld hlt sub fisttpl outsl jb,pn jo sbb pop xchg adc mov mov jl inc cmp xchg int3 cmp jp (bad) xchg in mov mov xor mov outsl push outsl pop mov mov mov repnz mov insb aam sub jbe fbld repz (bad) stc js testb xchg fisttp adc mov loopne (bad) movsl in aaa (bad) aas sbb out shrb stos or hlt adc lods out push es dec addr16 xor hlt jae xchg mov jb cwtl dec xchg mov lcall mov mov mov cs ss fsubrs mov sub in movb fildll jbe push popf adc addb mov call xchg lea adc dec push popa push stc cmp sub loopne dec mov push inc cmp lock xchg stos js inc xchg jae sbb repz imul sbb mov adc (bad) pusha xor lcall sub lret ror pop lahf leave imulb cli xlat (bad) pop cmpl sbb loop cld mov mov jne xlat dec jg mov pop push lea jns xchg popf insb fs mov jae mov jne mov inc cmpsl add sub pop fldenv jl cmp and aam and ljmp in ret pop cmp insl loope push fmuls std or test outsl mov push imul call jno pop and xor cmp jbe daa xchg add push mov inc mov mov mov push mov or pop gs jno out iret cmp (bad) lea xor outsb into cmp hlt sub repnz inc rol lock mov in add adc sbb loopne jne dec xchg bound and mov mov jno cmp or ret and jb dec ds je pop sbb sar or adc mov aad adc pop jne mov mov or mov sbb push xchg stos les ljmp lcall decb mov add xlat adc test test bound sahf rorl cmc fmull jecxz pop fild outsl xor es hlt pop (bad) fldl lahf enter popf call imul imulb test movsl popf scas or push (bad) lcall das gs cmc xchg jnp lea add sbb jmp sbb sbb mov jns jns push adc and cmp dec ficomp jp add arpl jo mov inc push mov sub mov movsb icebp inc lods adc mov rcll mov leave stos cmp xor mov adc dec (bad) loop add mov xchg fxch outsl je fsub movsb and dec xchg das ds mov push sbb call inc test add jno das mov xor or mov cs int3 add add repz jbe iret cld popa pusha inc xor sbb sbb repz into push outsl xchg mov daa negl int xor mov adc subl jo xchg and pop dec repnz or icebp and mov loope and adc mov mov psrld push jp cmp jo push mov mov cmc pop test (bad) pop inc imulb ljmp mov je adc data16 jb jge lret fcoms dec add bound sbb adc mov mov or inc push loope cmpsl dec pop and pop push fcoml adc xchg or mov jo hlt inc mov cmpsb mov sti adc or pop pop xchg vmovq out mov xchg mov and mov icebp aam insb mov mov in scas or add add loop and in xor cmpxchg stc cmp lea cmp loope or sub mov jbe mov test lret sti dec push adc in jb pop insl stos inc xchg out xor cmp mov adc ja sub mov pop movl mov enter push xchg adc mov rep popf mov push mov add movsb (bad) dec add leave adc insb daa arpl add test xchg add ljmp xor dec pop mov stc or int mov cmp and and bound (bad) push dec (bad) jae or mov mov sbb (bad) cmp jg ljmp xchg xchg pop jno fnstsw sbb gs test mul adc stc je inc xor or sbb call jo xchg push cmp jg adc outsb jns fsubs or repz test jne adc out xchg mov xchg test xor or shrl push jl adc gs mov cmp xor arpl dec pusha xchg pop scas fsubs (bad) or push mov cmp sub jge (bad) leave mov (bad) sti mov stos fistpl movsb xchg pop mov aas sbb lock mov inc ljmp pop pop gs lret fbstp lea in rcrl jg inc clc sbb mov mov lds or add push les pop cmp repnz push sub jns (bad) js test nop test lret push xor ret and cwtl xlat in or mov cmp nop and icebp loopne dec mov cmpsb dec dec sub xchg mov test xor cmp lcall or mov dec cmp mov (bad) mov pop sub jle call mov push mov sub aaa (bad) jle fimul mov mov or mov jle add mov mov aad lret les mov jmp adc out call cmp ds lea (bad) divb shll push inc lret adc mov pop mov mov adc jmp mov inc jge cmpsb clc sahf insb (bad) cmc mov ljmp repz lret xchg adcl (bad) jl dec dec bound mov outsb mov popa or mov mov clc push cmp cli xor aam sub insb add mov ja jo inc xor add mov sarl ret js xorl mov xchg xchg adc xchg push (bad) lret lcall pop push push push pop sub mov or lcall or sub pop jmp (bad) mov call push in mov push jnp out sarl movb ss notl and movsb xor push jno fsubr jecxz cmp cmpsl pop or xlat xchg cs dec dec imul movl outsb jns clc andb cltd fisubr push clc lock pop popf movsb or or mov into or out xchg mov cltd test add testb cmpsb arpl scas iret daa mov and test lret fsubs xchg scas push dec sbbl pop xchg sti ds stc mov popa dec loopne or std roll jl (bad) mov jo rolb pop cwtl pop dec mov (bad) fnsave ret in cmp sti dec cmp fisub out lock sarl mov lret xchg faddl sbb clc std cmovp mov decl out mov aas inc push mov in aas orl fwait mov fldlg2 jae cmpsb mov popa pop pop jbe add lcall lahf hlt and mov push adcl negb and sub or or cmp xchg inc in (bad) sbb mov je mov add call adc mov fs rcrl jmp push pop aam fimull sub pop push xor scas xchg loope jo lea in fnstenv popf sub movb mov mov mov cld sub test add mov jg sub jge insl inc (bad) stos pop (bad) or aad inc negl stc lcall mov jmp inc lock ret or dec push dec ss mov loope and mov push sbb fnstcw popf add data16 test push sbb jp push add test in add xor call test mov aam jle andl sarl mov dec push std pop call lock push clc mov sar loop les xchg cmpsb or mov (bad) xor pusha stos mov and adc sarb fisubrl aad pushf out imul test aas sub cld inc sub add push (bad) or push pop mov mov push jb xchg mov into add jo ljmp sub jge sti sub push leave xor mov xchg inc loopne popa xchg cmc imul xchg addr16 stos test push adc pop (bad) or jecxz paddw das test aaa ja push cli in stos and mov push jge sbb or push fwait mov pop movsl out in xchg fstpl sti push mov les cmp sub xchg sbb xchg mov in bound add out popf sbb ja jmp push xchg mov mov imul in push push push xchg sub mov fldcw add lcall xchg mov push (bad) fnop loopne xchg lret sti popf fwait xchg cmp push sbb push push mov (bad) dec out repz int call add cmp test outsl in mov les loope adc sbb lcall pop dec in dec ljmp cmpl cmp cltd mov (bad) sbb lret push inc and shr inc sti cmpsb mov mov outsb or adc dec mov es xchg (bad) mov push test or inc aas shrb mov mov and outsb push test rorb sbb dec mov stc data16 dec daa push sti out jmp jmp loopne inc out jle fnstenv adc dec insb das fbld pop push xchg insb sbb ja xchg test and (bad) sub push leave or xchg aaa les rcl stc cs xchg clc xchg daa inc mov xor or je aaa in fcomp jne mov ds and jno sbb mov push lock aaa jbe dec push mov lods sub inc lret into add scas (bad) stos outsl push leave adc jbe js (bad) fstpl repnz pop aad mov inc sub insb idivl and and nop xchg inc cmpsl in scas shll out out (bad) test jle aaa lock out insb sbb pop nop sub (bad) sti mov aas movsl rclb pop out (bad) mov out inc inc test pop scas sbb in out push xchg fiadd sti add pop mov cmp inc sub cmpsb outsb inc dec push std cmp mov push dec sub out cli icebp adc jmp stos or adc push out xlat iret bound inc mov mov stos xor push cmp pop pop test ss dec inc daa cmp inc outsb mov jmp pop jne jne inc xor sbb test add mov test mov addr16 jmp sub sbbl mov icebp jecxz adc push xlat jge mov or inc mov xor fsubrs or popa sub data16 dec dec mov jg in xor (bad) lock enter mov lock cmp pop in insb jp sahf push xchg push xor or dec cmp pusha xor add mov nop add adc push cmp ljmp inc add push rolb jg pop or push mov sub ret xor xchg aaa lret xor lret les test xor scas fisubr sbb int scas mov (bad) faddp loopne ret sub jb stos cmp pushf scas add sbb jno repz test dec cmpsl addb addl push xorl imul or fisub inc mov add xchg sbb std sub lock leave adc adc xchg rorl cwtl call xchg pop shl lods in pop mov cmp fstps adc pop add imul in cld jmp test out cld fidivr insb mov sub inc loopne and dec dec int3 cmp xor fild cmpsl stos jge test push mov pop cmpsl loopne movsl cmpsl and and outsl xor lgdtl in mov sub cs clc pop scas jecxz inc mov scas push push mov inc dec mov sub add sbb xor pop cmp and cmp arpl icebp inc mov and fistl jge cmpl or mov and mov pop push pop mov push sbb xor dec pushf push mov sbb (bad) mov or inc cmp pop test data16 sub mov mov out xchg adc sbb xchg lds push or add mov jg repnz mov mov push shrl dec insl (bad) scas push lock cmp orb fsubl rorl rcrb sub cmp in mov pop scas sti jo ds xchg ljmp xchg cmp pushf cs pushf ds mov xchg pop or cmp dec xchg shrb sub ja xchg popa test (bad) insb or cltd sbb cmp pop xor ds cli movb sub mov cld cmp in mov mov jg jbe fdiv in ss mov mov sub xor lcall and jle arpl push dec adcl and fcoml mov fisubl and in ffree in mov inc int3 cmp sub pop sti mov pop lcall pop mov mov les pop jne xor push (bad) push or out push or test arpl out pop mov jb mov daa sub and push adc push jl cmpsb loop push xor xchg xchg cmp xchg mov jb pop jne lahf shll dec pop cltd loope pop sub and jge sahf add stc out gs xchg (bad) js mov and mov pop ret xchg sub ret fcomp xor into das and in loopne pop push scas ja (bad) iret hlt mov sub jae sub lods or push scas divl jnp imul test movsb jmp cmpsb repnz push mov cmpsl sahf or test mov cli lret sbb (bad) push cmp scas (bad) adc sahf outsb adc stc sub inc test popa pop cld add dec insb (bad) jecxz out flds sbb mov rorl out xchg fistl cmpsb mov cmpsl push cmp mov popa ljmp (bad) out push xchg inc adc dec mov iret pop mov mov and and and adcl push inc mov cld aad stos btr add lock add adc jg sbb fs inc xchg insb or mov mov inc js divb mov mov pop cs xchg inc shll icebp out mov out dec rcrb sbb pusha test psrad test or push test cmp pop (bad) int jns sbb aaa mov and js and push mov xchg pop iret jmp rorb adc cld xor ds (bad) inc jp dec add test jmp outsb sbb loopne cmp and add repz (bad) dec popf dec jno fs ret cmc ljmp adc and subl jb shl ss inc ret mov aaa mov sub mov je cltd or cmpsb lods xor lret mov push ret add mov imul shrl jecxz pop xor sti test xor stc mov adc cmpl out loop xchg std int3 ror sub adc enter insb or fcomps cmp xchg sbb xchg lcall cmpsb push mov or lods rcrl mov jp jnp dec add mov cmp mov mov sarl out mov dec adc mov mov add movsl mov jg inc mov (bad) mov push sbb (bad) jo stc hlt stos cmpsb icebp insl pusha dec sub js pop xchg sahf outsb cli ret pop je and pushf xchg xor pop or sarb stos sti fs fistl cmp movsb test popf mov pop mov jae adc inc jl pop xchg pop mov ljmp mov cli lods jl xchg or pop push xchg cmpsb cmp sbb xchg leave sbb (bad) clc ljmp stc mov pop sbb ds pop shrl xor mov pop mov dec inc or out shl mov fcoms popa cwtl jmp mov fsubs js push sahf pop (bad) xchg xor decb cmp ds jge les mov pop out push mov pop test in ficomp mov test ja pushf lods push pop sti pop test cmp push mov xchg inc mulb lret icebp orl jge xchg mov stos inc sbb pop mov nop daa add adc jg xchg or or push mov pop sbb and test outsl xor or out sub inc xor push aaa add push adc in nop or sub loop xchg xor iret mov push push aaa push pop nop sub xor stos pop xchg in pusha andl add arpl loop lock rorb rorl sub call cmp fldt mov cmpsl test fs mov js icebp cmp sbb ret in mov test push xor push imul jmp in out and push dec test pop sahf daa (bad) fs add js ret xchg in push lcall fxch pushf inc push mov jae sbb mov gs mov lret xor inc nop push shrb push lds cltd adc and cwtl or add loop scas sarl fs xchg cld mov (bad) test and sub or insl sub xor push inc movsl cli loopne lcall xor sub fist std mov je (bad) pop (bad) cs out and fnstenv sbb subl or dec lods mov and or scas insl sbbl into scas popf mov lea test call (bad) imul xlat add adc js cmp sbb or sbb sbb pop cs jb (bad) xor mov movsl cmpsb xor dec clc ficom mov mov not sub ljmp adc jb jo fdivrl ss mov fistl push mov data16 push and push jp and fs sub inc xor loopne lods lods out push sbb stos add sbb mov cmp daa sbb in mov mov sub sbb lret cmpsl mov sub out fldt shlb jl cmpsb push push (bad) popa inc jb cmp lahf int js and mov icebp xchg (bad) (bad) sub adc movsl out aam jp xchg lds sbb jbe mov xchg mov ja and push lds pop lods dec fwait (bad) movl les sub lods movsl dec scas (bad) xor nop mov add (bad) inc arpl adc out mov movsl iret mov ret dec pop sbb aaa xchg push jae mov pop jb pop mov and fcmove fisttpl pusha sbb out mov outsb jbe sub cwtl rcll ret cmp fisub mov mov lret or loop xchg mov pop (bad) xor pop jne mov mov lret adc push and cmp clc push lods insl push inc idivl (bad) xor loop xchg jo ret daa into call gs jo or imul or rolb jl sahf and push imul push mov mov subl push add out fnstsw xchg sub push mov daa mov scas ret fisub push adc jle or add xor xchg push test lock loope or ljmp adc addb mov das je mov sbb gs (bad) dec push mov imul push sbb call xchg shlb sub roll sbb push push sub pop dec sti sub add insl xlat mov jb adc mov inc mov mov imul pop rolb movsl daa pop dec jmp xor push clc jns loope mov adc lds out out ret test and inc scas push push jge sti icebp adc imul xor mov jl jle mov gs xor inc pop pop addb gs dec dec loopne dec xor aas in popf xchg ret mov mov inc cmp xchg jb icebp mov cmp test and xchg xor loope fcmovbe sub int3 jecxz push jns mov loop (bad) xor and sub xor iret push lret push inc push repnz cmc outsb test pushf push sbb mov (bad) lahf xchg les into orl cli xor pop pop (bad) into int mov and push shl adcl pop xor push jne push inc bound insb out sub ds mov repnz dec jmp rcl (bad) jbe mov in ja mov fs mov and nop fidivr push lahf push jp mov and mov mov xchg movsb ror gs mov pop sar ljmp inc outsl fimul (bad) mov pop adc loopne sti repz ja scas jne insl fs adc jae adc sahf and out iret dec mov push in push mov adc call and jg jb pop xchg jl jg aad out push fcmovnbe fwait lods xchg ss rclb pop add adc and bound bnd mov movb or rep mov sbb rol xchg stc lret arpl in leave scas loop test outsl lcall and or int mov stos cmpsl inc sahf pop fidiv out fwait mov jmp int3 sti or push ljmp lock pop aaa dec pop pop ja pop movsl dec xchg daa nop mulb and push fld inc sub movsb jnp jge sub in lahf rcrb sub (bad) lock sub pop fadds mov ret test (bad) arpl inc nop or sbbl (bad) jge lahf pop loopne add enter cwtl pushf mov mov out loope iret mov push sub add pop and lods pop pushf in jp call cmpsb aas in mov (bad) sbb lock pop lret cmp and jge lea popa mov mov int3 mov xor (bad) cmp in inc and (bad) lock add adc test pop in fistpl mov sahf xchg jbe xor fiadd adc je pop push pop into xchg add cmc pop mov stos add lea jge xor push roll lahf cmp enter dec jmp sbb shrl mov ret and adc std add mov push ss add cmpb adc sub xchg mov int3 sti mov ret pop ret jno inc out xchg mov add sbb in mov incl mov mov mov jecxz sbb lret out adcb les (bad) addr16 stos jge nop dec in sbb lods (bad) xor dec dec sub scas call pusha push in push dec xchg outsl js mov daa or test stos lods ret sub scas cs pop scas test leave cmpsl mov dec or inc jbe or addr16 rorb dec push (bad) icebp iret (bad) insl jmp sahf cmp lock sbb std lods and (bad) bnd addr16 andl add jne mov mov jns int push and dec (bad) aaa xchg or (bad) jns push push mov mov sbb adc popa (bad) push test leave cmp out inc test stos lahf and js je cmp insb mov push cld mov add mov stos pop lret dec mov sbb test cmpsb mov insb leave push aas mov jp in mov pop nop mov mov inc mov out (bad) std outsb repnz sarb mov idivl sub push xor xchg xor push pop movsb cld iret arpl popf sbb sub dec movb and test inc sbb in xor int test popf pop mov sbb push and or xchg mov sub cmp stos jns fstcw push decl lret and and mov aas test rcll aad stos in xor cs mov int jae fist jp stc adc xor dec cli lds sbb mov fsubrs dec or xor xchg xor test scas adc cmp std pop push and cmpsb std ds (bad) pop addr16 sbb push push lea popa movl arpl aad loopne outsb out int3 mov movsl pop ror mov dec xchg fidivr rcr (bad) (bad) lcall cwtl sbb cwtl cmp test jns mov (bad) imull adc out cmp or add mov fbld out ljmp lahf rcrl adc out fwait mov push dec ja mov stos pop or rorl push icebp ljmp shl icebp (bad) push (bad) idiv rcr pushf in sysexit adc (bad) sub (bad) jmp sbb push push fnop fs repz in add xchg repz ret mov nop pop mov sahf jmp gs mov sbb arpl (bad) mov pcmpgtw ss pop inc fidivrl aad pop sbb mov pushf adc or add cld faddp mov pop mov fdiv rorl dec leave sub sti xor or mov shrl pop cmpsl mov jmp or push and jns xchg scas enter out and das mov adc jbe enter imul and jo stos test jns sbb jg cmp in loop cmp leave pop andl mov imul sbb mov mov push aaa add lahf imul lea call clc das cld cmp jb insb add xlat pushf out lahf stos sti xchg jae and test jns (bad) js int3 leave sbb xlat or pop xor lahf jbe and mov add les scas xchg dec fildll mov pop add xor neg sbb out mov into loop lods add mov out outsb mov xor mov and cltd addr16 xor inc lret nop sbb shll mov mov (bad) or mov fistp add pop in fwait dec mov inc rcrb addb or mov clc sbb push push pop adc push bound pop aad jmp cmp jl add sub jl dec cld cs test xchg mov and aam xchg repnz ja js pushf mov mov mov jg mov ffreep leave mov sbb ret shl fisubl or add mov cltd push cmp ljmp fsubrs or jnp addr16 out xchg scas nop jle adc js into inc outsb dec lcall into stos mov mov mov cmp and das push testb lret sti pop les lods addl rcrl push into xor cli dec push movsb and mov popf fisub lds leave imul or inc int3 pop add lods ja jp cmp inc sub inc aam xor ret ljmp mov xchg lods jle dec imul push mov in fadds and xchg jnp dec or inc sub mov std dec scas (bad) outsl push (bad) hlt ds jle xor lcall xchg fdivrl jnp lahf enter pop jp lods mov cmp mov shrl adc shrb and ljmp xchg loope dec (bad) sbb or frstor les lret push stos dec sbb and sub icebp rclb sub and in xchg out push xchg mov adc js xchg int3 sti mov cmpsl popa sub xchg mov dec mov or in mov imul sub out add sarb loopne cltd fs lea adc mov loop jbe ret sbb cli push jmp dec inc adc and (bad) mov push push enter test lret push push int mov movsl lods sub cmp jnp xor daa out mov mov sti sub lret ficomp mov sbb or jae (bad) sbb testb xor sub fxch int3 lret push jle xor jmp inc mov enter test ds mov es (bad) rcrb or je mov das mov adc hlt scas rol add sub dec popf mov adc dec lcall mov insl stos es mov (bad) mulb in fdivrl pop cmp fcoms (bad) fldcw sub mov js push inc pop insl jns repz in adc aad arpl push lahf ret mov sarl (bad) imul mov fsubr xchg inc addb and mov push mov xor push pop cli ret cmpsl repnz adc and aas mov inc add or jae dec inc push xor lea stos xor pop mov xchg dec push mov out and mov loop add jb imul xchg jmp pushf aaa pop mov psraw mov enter jns or mov ljmp push ljmp rorl xchg sbb (bad) mov and pop adc jge dec add pushf mov jb into (bad) decl aam mov stos inc jb fistl mov and aas inc fnstsw pusha and ss ljmp movsl add negl std or and push or jecxz dec mov aam testl in aad xchg ret pop push cmpsb cmc jl fisttpll dec and mov js push pop lcall (bad) jecxz (bad) cmc push mov fisubl or int3 push out or mov aas jno lods push pop popa push pop scas in into adc ljmp jo or jge pop push jmp xchg inc xchg test icebp sub bound outsb int3 je loop insb stc pushf cwtl aam imul cli or sub inc cld inc and dec sti add cmc mov in or dec push mov inc push ljmp xchg icebp gs xor mov push pop adc cmpsb jo dec (bad) xchg jl inc vpunpckhdq stos sub imul out jecxz add out (bad) into insb (bad) scas adc bound fbstp out out lcall aad mov jae out imul repz sub and scas (bad) push or in and movsb jecxz dec cwtl mov scas sbb daa sahf adc out lret int mov push mov jo popf (bad) lea cwtl dec (bad) jnp inc mov out imul sbb jle fstl rorl test xchg add dec adcl aaa mov cs or xchg pop jge sbb movb sbb test loopne pop sbb lret ja mov or sub cmp jo mov movsb in adc in add dec stos scas fs in jge mov cli into (bad) sbb bound pop xchg jge mov mov sub xchg jge xchg fs out ror int3 fistp daa adc mov or (bad) fiadd dec sub xchg jmp cmpl xchg cmpl (bad) push jne mov sub into scas jmp dec cmpl lds dec scas mov rorb dec (bad) dec f2xm1 xor pop out in popa fsts cmovno js add mov xor xchg fmulp inc lret push sub stc aaa adc cld ljmp xchg mov xchg push fldl jbe push push mov push jp lods andb push xlat mov rorl mov dec mov fs mov adc dec outsl push int3 sbb sub or sarb int leave ret sbbl jl test (bad) xor stos (bad) mov push mov jp imul std ss and divb sbb dec cmp ficomp push aam jecxz dec bound call rcll or sbb mov and fdivl nop inc sub les jle loop orl (bad) ja jecxz icebp fbstp mov ja shlb es (bad) mov sub inc add mov js,pt cmp and outsb divl push sub into sbb cmpsb xor mov xor mov add inc cs xor pop add hlt out push addr16 jne inc andl imul (bad) lock add fistpll jle mov pmullw fwait es jg mov inc or xor mov add sub cwtl jp fxtract les fisttp outsb xor pusha sub mov jecxz popf or inc daa aam cmc roll xor aad inc insb pop addr16 and fsts sub pop in inc mov mov fcomp fcoml push rcr movsb je mull or or call jne push jmp (bad) xor lret jnp xlat repz sub mov xor push and out adc in leave inc fs loope push push lahf dec push test (bad) ss stos lds mov pop sbb call mov inc fwait outsb (bad) xorb test out scas rcrl negl pop out gs hlt xor mov addr16 mov jmp js mov lret int iret (bad) mov jns xchg les scas std fdivrl movups sub cmpsb pop adc mov xor das add out push xlat movsb into xchg mov or scas inc jae,pt adc sti mov mov and bnd and add and rol sub inc mov dec cmp sti sub xchg shlb push scas aas fwait dec mov repz mov mov cmp dec fnsave pop nop cmpsb imul aaa insl dec jne dec iret arpl cmp adcl pop (bad) insb (bad) (bad) stos je jmp stc sub adc aam (bad) fistpl jl int cmp popa inc adc imul sub push sub pop enter mov sbb inc imul (bad) addr16 fsubrl push (bad) ss dec push aaa push xchg pop add pop loopne mov adc scas sahf pop mov inc icebp divb dec pusha cmpps dec sub icebp stc insl int dec cmpsl or mov out lret andps xor cmp push nop (bad) jnp fwait sub add cmc inc dec lahf shrb xor movsb ret add mov adc rorl add jo pusha inc and js cld imul sbb (bad) icebp sbb inc lods sub pop (bad) imulb mov cmp cmc xchg or (bad) mov les mov sbb dec out jecxz mov cltd out out mov and jl and sub ret aaa gs pop leave iret sbb pop push or cwtl clc std rcrl icebp jbe movups jl sub inc nop push xchg cmpsb nop imul sahf jno ret movsb iret (bad) sub adc dec dec ret fxch mov aam inc inc imul insl jge sbb test jg movsl mov mov icebp jne iret sahf inc (bad) lea mov inc mov pop rcll cltd mov repnz pop pop mov push fdivrl sbb mov leave jp jl sbb sbb xor loop and lea jle jnp xchg pop mov mov mov dec mov dec (bad) mov mov jb push jnp icebp xchg pop mov xchg jne dec or (bad) pop add jl lods and lds fisubl xor outsb mov popf aad dec (bad) pop add xchg (bad) pushf adc repz adc orb lds lret rolb sbb sub aam add ja icebp lea mov mov sbb jb xchg sbbb orl shl (bad) rorb or std or lahf aaa shrl adc in cmp or ficomp add add loope enter cmp inc pop xchg ret lea (bad) mov lods dec and (bad) repz negb lea lods or out rclb popl popf mov mov scas inc arpl jg dec into loope push push div xor int jg popa jo outsb mov mov sti add mov sbb sbb pusha mov jg cmp mov ja or adc and xor cmpsb dec dec inc fsubl icebp mov int3 adc mov jne adc mov cmp push repnz mov and lods icebp cwtl pop mov jl mov stc push and inc test push and and inc loopne insb add mov mov bound into jmp stos and (bad) push lret xchg incb into jae mov dec es pop jle jns jl hlt jbe imul mov insb repnz int3 jne or pop stos data16 push mov les fistpl sub popa sbb mov mov inc (bad) stc or mov xor data16 pop mov cmpl pop sub daa jg nop sbb inc mov dec mov ss loop rorl mov incb mov sub cs movsb mov mov aad scas mov inc (bad) repnz pop xchg pop hlt sahf pop hlt sub divl (bad) mov push les push insl add sbb dec jo lahf in mov test xchg icebp stos mov ds repnz xor movsb jno xlat loope lret ja std lea jle int3 and cmp dec jbe in es jbe outsl ss stos sub ret jnp xchg pop mov add rcrb lret xchg loopne lret out orb (bad) (bad) sti push jne cmpl imul push scas inc mov push dec aam add in mov inc ljmp push inc push js and pop arpl dec mov push imul je mov xchg fwait and jl cmp lahf (bad) out out mov loopne xchg popa dec clc xor mov int test pop sti cmc dec sub ss dec addr16 pop sahf xor sbb push push and xor adc xchg fsubrs sub addr16 sbb out cwtl add sub repz das jg adc ss or mov (bad) mov addl outsb add xor jmp xor adc xchg (bad) bound pop out dec add stc rclb cltd lret inc adcl jb mov add add mov pop es addr16 jp leave sub inc fmulp dec or das repnz and dec jns xchg inc cld pop sarb int3 and sbb lods xor jnp push stos rcl mov popf sbb pop cli and push pop push jle cmp sub pop (bad) pusha push or sbb aam int loop xchg ss inc hlt ds adc testl test lea and rcr outsb std stc cld sbb push push add lahf cmpsl fdivl sbb dec call imul popl loope jns pop mov dec leave cmovno xchg lcall mov mov mov mul int3 xor scas pusha push popa js rcl stos rcll or fisttpll (bad) cltd sub sti mov cltd fcmovb mov dec xchg lds leave jecxz cmp incl mov repz jb cmp mov jecxz inc sub mov cmpsb imul mov fcoml inc jno inc movsb in addr16 cmp fisub leave out in (bad) cmp rcll push ljmp dec lcall xor pop jae jmp hlt sahf in sarl sub jle insl xchg lods movsb xor mov jg push sub je jl mov nop xorl divb sub je pusha push lret pop push mov sub gs leave sub and lods fnstsw rcl and imul mov out push inc inc mov pop in push pop fwait pop or lret cli (bad) (bad) jmp push cmpsb cs pop pushf imul movsl insl fcmove daa stos push inc mov popa ljmp sbb mov mov sbb inc adc stos xchg inc decl test lcall loop mov cmp jno,pt push insb push dec xchg push xchg nop cmp test iret add fs out xchg jnp push es in ret stos sub decl test (bad) test sarl mov (bad) fbld ret gs push loopne sbb sti fwait int3 push inc xchg popf dec jmp arpl jmp mov dec mov sub int3 jmp fcomip fadd inc out mov (bad) jbe pop stos andb inc std scas and xchg jmp cld mov pop (bad) sbb loop clc es out push sub mov mov test mov xor ret cmp pop outsb enter push xor popa data16 cmp fnsave les push pop hlt jmp (bad) pop lods inc mov outsb mov loopne dec out (bad) push pop jo mov in fcompl (bad) mov out popf ljmp imul ss sub jne loopne xchg jle stos mov adc dec mov subb (bad) sti pop mov jbe fsubl (bad) lret int xchg leave cmp loopne pop lods call push push clc adc adc rclb sbb stos lahf xor push scas mov inc sbb hlt inc mov in inc xor stc adc call int3 adc incb fcmovnbe xchg arpl jbe adc out in dec or scas sub popa cli pop xor jp xlat add out bound push add xchg fwait cld out fstpt xchg inc mov (bad) gs (bad) sub cmpsl push mov mov mov addr16 jb push (bad) (bad) loope dec or xlat adc mov adc push pop js xchg loope lea leave xchg push stos inc daa cmpsb pop sub or dec and call sbb and (bad) sub cmp pushf rorl (bad) push rorl repnz popa sahf lea in inc loopne push addr16 sti adc and mov cmpsb and pop ss sbbl addr16 lock xlat arpl xor xchg mov int3 jnp andb stos fadds ja (bad) jp inc add subl jmp dec xchg test int xlat adc test fstl shl sahf push xchg pop in jmp ja dec and mov hlt add and push mov adc stos out (bad) movsl add daa inc aam scas clc push movsb jp push shrb jae mov popf ja mov xchg scas xchg inc xchg jno mov mov dec sarb dec xchg dec scas jle dec shr mov xchg in mov adc rolb stos divl ret add inc jle clc xor in aaa and (bad) lds sbb and inc push and incl push in pcmpeqd inc test xchg mov lret movsb ss mov push ss xorl scas inc outsl cmp icebp das dec movsl mov je mov mov mov add mov (bad) sti mov pop lret add cmp shll scas inc jb mov fldenv pop mov mov icebp imul push test adc xchg leave push cmpsb add aad lret push pop adc lods addl push rcrb rcr lods push icebp (bad) rcrb mov mov popf stos scas mov test xchg fstp cli xor addr16 sub cmp push mov fisub les push iret or mov clc js fisub pop mov lret sti and pop mov cltd mov mov xchg call dec sbb in xlat and loope adc adc mov push mov mov pushf lcall lds xchg rol mov push out and es int dec jmp and inc push cld out cmp jmp test outsb repz shrb and add dec aad cld lods mov dec mov cmp ficom (bad) test pop inc xor inc pop mov inc push pop je enter (bad) icebp adc cli sbb dec cmpsb imul ret movl adc inc cltd outsb call movsl in fs dec enter pop outsb mov mov sbb movsb pop popf xchg fild nop xor mov test call loop dec dec popf or js das and mov cld cli or mov dec jecxz adc xlat and dec stos adc adc and cld add jp pop pop mov faddl adc jnp sub insb xchg loope adc sub jecxz xor jg jecxz pop inc mov push xchg test xlat rcrb cwtl mov lods adc jae push fdivrl dec mov inc dec clc cmpsb adc incb leave jge leave adc lods jge push mov adc cwtl mov lds jb xor out in mov in mov mov pop pop mov ret or shlb fs aas pop ljmp je popa push (bad) mov jnp cli ret pop (bad) xor lock jecxz lahf rclb jmp adc inc xor mov sub pop jo add inc rol push cmp rolb aas shll cmp add pop ds cmp xchg lods xchg push or mov mov loopne repz shrl jp mov cltd pop mov mov sub or mov daa aad sub pop xor mov dec sub push mov cmp mul cs and insb ss mov pushf xchg xchg xchg in pop xchg pop das xlat xchg aad pop push imul jg adc mov inc lods mov jbe nop das loope jl push mov (bad) repz push cltd test hlt (bad) mov clc sub xchg push test ficom push adc dec sarl adc test sub mov dec cmovp push nop cwtl cmp xchg mov sub rclb ret push add inc pop scas jnp pop iret sub js cmp jnp js icebp test imulb dec hlt out mov mov subl mov subl mov notb add into cmpsl jge popa push int cmp jge push cwtl lea xchg mov inc test into pusha repnz adc jmp out aad jle mov lods ds enter or incb dec add sbb lods add setno rcll lret adc stos sti loop dec mov and jle (bad) and or push jae mov pop sahf (bad) mov scas out mov stc pop or jle pop adc xor loope shl aaa notb in pop and add xlat std push inc cmpsb je test das jmp sub lret lcall call in pop outsb arpl stc rcrb adc mov mov mov inc out cltd or xchg cld jle mov or pushf icebp push je jecxz xor dec or cmp ja mov mov cli xchg and pop iret xchg mov outsl push mov aam scas push aas das leave add incb mov jne xchg adc dec sbb leave lods and push aam inc (bad) inc movhps ret push adc adc dec pop mov jp push sbb and sub nop pop mov xor xchg movsl das insb jg fs fst bound sub add push lret jns repnz (bad) pop mov jl dec jmp fistp mov cld mov fldcw outsl sbb add pushf clc pop js mov call add fsubs jb push repz ret pop mov push sub mov (bad) int3 icebp in (bad) out rcl imul aaa leave or pusha xchg mov push sbb rorb mov out jns hlt (bad) ss test sbb in sbb and or mov jecxz lret mov bound add sti loope and pop adc push addr16 jnp aaa out pushf outsl xchg shll xorb inc and and cmp sahf dec (bad) mov cmp (bad) xchg mov negb sub dec aam push (bad) mov loopne push adc adc mov sbb and or test scas adc sbb or or cmp xor aas imul jbe pop pop sub mov out jl adc insl inc add dec or iret pop push aas xchg and mov xor xor or cmp lods int3 pushf mov jae sbb jg and cmp mov outsb fcom mov loop and dec pop mov scas push pop sbb mov jbe test jbe loopne or pop enter sti xor pop sub mov ljmp out jp (bad) bnd or push mov in cli out mov dec roll test jbe adc dec xchg mov mov mov test jo and (bad) mov add xor push aas xlat imul add sub lret aam (bad) xchg das ljmp shlb ret rcr test das cmc aaa movsb jbe fstl dec push xchg lea popf mov adc (bad) jp (bad) aam jno jae mov movsl xor xchg mov mov sub leave xchg enter scas inc out lods out jg sti push pop inc sub lahf dec (bad) aad pop rorb mov jmp mov into les cmp jmp mov out repnz daa push pop mov xchg mov mov cmp lea mov icebp xchg mov jne hlt lods outsb add dec add ds jns nop push (bad) (bad) mov add mov xor (bad) xor insb enter pushf les movsl push enter adc aas aas xor sbb jp dec dec mov inc loop jle dec dec stc sbb xchg adc mov call pop pop loope popf sub rcrb int3 inc dec or int aaa lret add (bad) call std aaa arpl mov fwait bound mov sbb mov cmp xchg mov mov or add sub push xchg adc mov imul mov iret pushl es (bad) adc sub test mov mov mov icebp push xchg and stos mov mov pop push sub jl in sti (bad) jl inc ret sbb or aas insl push push clc xor es les mov jp sub icebp xchg or shld adc push (bad) js mov inc test sbb aas fwait je stc dec and mov pop mov mov or and push mov aam add xchg push mov pop inc out movlps cmc mov mov cwtl add out jne fdivr add sbb and sahf adc cmp lret rclb sub cmp icebp into pop in fsubrp mov ds adcl or xchg mov sbb rorl push iret daa pop bound dec aas or jb int jecxz or push lods ffree rclb dec or sub popa jne popa xchg icebp lret loopne loopne rorl ljmp xchg rcll mov jb pop nop sbbb lahf mov jae stc jle cmpsb jge dec ja pop mov mov add repz stos mov jae xchg loope jno sbb clc mov test mov ss fs jge inc inc lods push mov xchg sub pop enter enter sub xchg dec fcoml mov mov iret adc sti sub jp (bad) jne int popf out movsl jp in sbb xchg xor cmp in sbb pop add out xchg xchg sti sbbl pop jno pop aam sub add sahf imulb xchg pusha adc add aad mov jae pusha daa sbb ror push cs xor daa enter jae imul cld adc push andb ss es jo clc scas mov sbb jne fs push dec adc sbb dec jl mov lods (bad) std xor fisttp aad fcomp xchg pop int aaa aaa dec rolb cmovno cmp lahf imull popf cs mov mov push push in in (bad) pop cli pop sahf (bad) je adc (bad) pop rcrl cmp jl push push (bad) adc sbb test inc mov arpl mov mov out jbe lret jmp cmp adc push xchg jp imul adc xchg lcall cmp sbb jmp push mov sub iret icebp cmp ss inc push stos lcall hlt (bad) daa orb pop mov out inc aas ds mov iret cmp je rol stc xchg cld scas jae mov leave js and pushl cltd mov bound sub push xor xchg xchg in dec cmp xchg or add addr16 inc test pop cmpb (bad) (bad) aas adc xorl bound movsl adc hlt xchg adc push mov dec fnsave stc jae inc jb into jge pop mov pop cmc jge pop (bad) dec cmp mov jmp add imull mov inc cmp mov hlt and mov push std pop push clc mov mov or test test jo cmp pop nop xlat xor fprem sub sub shlb fistpll stos or mov jno divl sub adc sbb and push adc les cmpsl shrl sar rcrl call daa jmp popa lret pop insl lods jns lahf adc xor loopne loope xchg sub cwtl sbb andl pusha push fisttpl push or dec mov (bad) jmp xor sbb add es inc out out out stos (bad) movl adc test mov (bad) dec sub xor mov pop lock in insl ja or xor dec cmp shrl (bad) out sbb int3 dec sub movsl push ficomp mov loope popf popf xchg adc pushf in or pop add jmp cli xlat outsl lods pop push adc cmc inc hlt or xchg ret jecxz mov mov nop xor mov jae jmp stos clc cmp add mov push cs cltd adc and mov iret mov les shrl addl rcrl js std cmc insb push in dec cwtl mov mov int3 hlt data16 rcll or shrl fwait inc mov or clc pop call adc popf jbe pop xlat sahf xor cmp clc jle adc mov sahf inc xchg pusha sub cmp pop pop or sub enter jno inc or lods push leave movsl xchg adc xor or test sarl in negl inc and pop popa lods xchg rcrl sub outsl push mov xchg lods mov and jbe aad lods push jo mov shlb fwait test xor fisttpll fnstsw pop and (bad) mov inc lea mov aaa mov int3 adc and shll iret mov lret std std jae and je jns push imul scas pop xchg mov xchg push rcll sahf jnp rorb jmp mov outsb mov testl imul jb xchg ret ja cmp pop xchg mov inc fisttpll lds xor inc mov and js and scas sbb movsl lahf loope incl (bad) fild xchg sub pop cmc in fstps push xchg xor mov push clc xchg aad xchg into outsb jo imul and and cli loopne xchg aas (bad) ret mov test cwtl and sub test mov adc call fldl (bad) decl test xor pop js pop jecxz add adc push xchg inc call jecxz lahf cmp sahf mov push mov hlt inc insb cld (bad) loop adc les cltd int dec scas insl shr mov lods or jns inc sbb jp je ret sbb xchg mov fcompl imul stos je movsl into (bad) inc adc push sub adc jo mov std scas sub xchg cld or in pop pop jle lcall fistpll add xor dec insb outsl popa ficompl jle insl inc mov cmpsl mov mov mov scas push inc rcll lcall add mov ljmp cmp xchg incb rolb sub adc cmp xchg dec mov ret jae mov pop inc add xchg mov inc ror add push sti and mov shrb cmp add repz in ret and pushf mov dec jb (bad) cmp xchg (bad) or dec ret inc movl and xchg addr16 ja dec add loope outsl add rol or arpl in insb call imul xchg xchg fsubp (bad) xlat aas or jo ret sub push cs jne add aad add xchg cli xor push add mov jmp pop lret pop cmp sarl or jl mov dec pop adc scas ds lcall xor popf dec cmpsl fdivrp mov std dec xlat call (bad) jle pop add or mov fmul insl or (bad) stc push mov sub flds cmp mov sub roll xchg xchg pop xor pop xchg cmp mov repz inc out std cmpsl (bad) aas push outsl xchg ss fisubrl cwtl lock sub adc out add add into cmpl out cmp ja call mov mov out dec fwait mov cmpsb cmpsl (bad) jg imul push aam std (bad) movsb pop icebp mov fist hlt nop inc jbe push and xchg xchg sub rcr pop pop add cmpsl mov bound jmp lahf popf or in jns pop push repz aad jae out cli add ds jb stc lret clc out into icebp dec or cmp cmp cmp adc mov (bad) dec testb movsb mov jg sub adc xchg inc lret out pushf xchg sub mov out lods mul (bad) sub push xor mov pop pop mov xor ss add jle out dec aaa inc xchg jle rorl js and psubsb and enter les iret pushf xchg pop adc in fsubrl lods xchg xchg test push adc jns mov push insl add ret aad les jecxz (bad) dec inc inc mov pop inc nop dec add dec jo movsl mov cs add (bad) cltd mov fdivrl pop repz cld fist iret outsb imul aam insb into or icebp cmp stos dec leave jo add pop lcall loopne aas inc sub icebp imul push mov cmp jmp add fistpl mov call (bad) mov xor testb pushf test xchg mov xchg sbb aad mov int3 aas jae dec inc sahf sub mov inc cli jne ficom pop mov inc push std scas mov pop imul xchg fimull mov bound fsubrl leave dec (bad) and mov cltd in mov mov lock xchg inc test push inc pop or fstpl add das jns or mov sbb (bad) aad jmp es mov or (bad) sbb neg jle mov hlt loopne cmp data16 (bad) fcomps xchg push adcl push test div push xchg push orps mov hlt je mov lds inc adc ret arpl jne push insb iret fs dec pop or and cmpsb repnz add mov xor stc jbe icebp into jbe ss imul test mov (bad) test ret and and mov repnz mov incl pop cld and pop add sahf xlat push scas fstps scas cltd addr16 clc adc pop xlat popf repnz or into xchg int jge cmp sbb (bad) pop daa adc roll addr16 add pop adc mov stc arpl cmp clc pop mov pop cmpsb ret cli scas in jnp dec adc and jge repnz cli xchg sbb stos xor sbb mov scas sbb xchg scas shll popa fmulp push aam imul fwait mov mov call jo jl cmpsl clc adc sarl jns outsb mov add adc iret mov scas stos aam adcb adc sahf fdivrl jmp or mov in dec in or mov sarb pop cwtd cmp int push add jne add xchg das xchg cmpsb repnz stos mov jle cmp mov imul repz data16 cmp mov mov cs and xchg in adc fucom jmp and cmpsb add ss (bad) push jb push int das cmp cld push xor mov add loopne or add xchg aas lahf ficompl fisttpll adc sub mov insl jecxz dec mov jb (bad) push and mov pop cmp jno add inc fistpl loope pop divl pusha ror pop pop stos (bad) pop mov xchg xlat ds test mov orl test leave std pop mov (bad) rolb aaa dec cmp mov loope stc daa add jae das stos (bad) lods jne repz lods dec and xor mov scas pop cs daa icebp lods xrelease data16 lcall pop inc sahf (bad) fcoml inc mov not pop mov jne shll sub push pop pop call aam in stc push iret scas xchg xchg xchg pop jmp adc fwait pop loop (bad) mov imul sbb lea xor pop cmc and popa int jecxz orl mov ror push xchg dec scas adc outsl or push lret mov leave fcompl mov fimul mov sbb hlt add cmpsl mov mov int3 adc cmp mov adcl insb inc xchg pop rorb outsl xchg clc jecxz dec mov fisubrl jo loope xor movsb pop ja inc in aad adc xchg and pop or sub dec adc mov outsl and adc xor pop adc xor roll lods pop dec out xchg fisubr dec shr xlat lret jo sub leave in push pop xchg fsub outsb and sub jbe mov pop and mov and cwtl out cmp imul aam shlb out push (bad) in fiadd sbb pusha pop ret jbe dec shll cmp and adc or arpl mov push aaa lods out and fmull or add and imul push nop clc add xchg daa xorl ljmp mov ljmp mov pop movsb (bad) jge fildll xchg loop and xchg lods ds ds sub xchg xlat jge push fwait adc push sub mov inc inc lds bound and subl aam or (bad) jb xchg inc nop push dec xor add rclb cwtl popa push nop fs fwait in and fdivr mov mov outsb les cmc adc cmp subl pop loopne push aas push push fiaddl jl popa fldln2 (bad) cmc into xor mov ficom mov inc int lret orl rcr dec stos je jl jl movsl xor and inc test shl rcpps dec inc lock hlt mov movsl jno cmp cltd outsl add pushf imul pop push adc jae mov mov rorb sub jb jne cs push negl jns (bad) xor and loopne insl scas push add mov lods xchg xor setns add mov arpl mov push jmp js mov es out mov (bad) sbb insb mov fdiv je or xlat push mov clc xchg in add test sub inc push or jbe (bad) shrl pop mov mov rorb cmpsb stos inc cmp dec cltd and loope in rol js mov fwait jl adcl ljmp push sub push push xchg rcl adc es aam xchg lods and ficomp sub popf mov iret xor cmc push sub xor repnz xor fdivl das rclb dec push sbb icebp mov testb fstps je stc outsb es insl pushf cltd clc fwait or xor push lea std dec xchg lahf jnp sub xchg shrb inc mov cmp mov cmp jo arpl loopne xchg jle xor es ljmp out lds dec sbb xlat cs loop sub popa ficompl rcr cmp mov stos inc and or sbb stos xlat fild sub xchg or and mov fildll decb push pop adc insl aas xlat sahf (bad) pop mov cld inc push adc jo cmpl pop dec dec (bad) in push loope imul cmc int leave (bad) loopne movsb bound jl pop jle jmp negb in push ret and out movsl iret sahf sub je fildll shrl sti rcrb mov ret cli dec test mov xchg xor mov sbb mov xor bound (bad) movsl push iret inc add movsb xchg inc xchg rcrb cld aam dec push pop (bad) pop jecxz imul sub das inc ffreep add mov or jbe xlat push mov call dec nop jp xchg les std clc jb pop cmpsb dec or addr16 ja gs adc faddl push or jne fs loope sub adc adc push (bad) add sub call lock mov push les cltd sub cmp jg and mov dec inc icebp push std inc icebp pop cmp cmp sbb and mov test ja push push fstl popl push jl stc popa hlt mov sbb inc ljmp jl in push lds (bad) ss mull repnz ljmp outsl fucomip ss dec adc xchg adcl mov jns out mov repnz daa add stos pop (bad) gs and ljmp scas adc ficoml hlt sbb fsub mov add fdivs jg sti jo insb (bad) jno xlat mov and xor cmp xor dec cmp fisubr shlb mov mov sbb dec mov mov pop mov cltd xchg sub (bad) adc (bad) cmp push test mov xor xor xchg sbb inc and aad dec test push imul and pop test sub int rolb xchg xchg sub test daa jo adc repnz and test outsb mov or out lods push divl and incl and stc fildll fildll rol mov mov lcall pop adc das inc stos out loopne insl out mov mov sbb (bad) xchg and movl in dec out add inc cmpsb jle pop lret xor lods aad es ja data16 fadd cmpb mov lret cmp jns lret pop stos repnz (bad) inc bound lods fnstcw insl aam jno int3 arpl sbb sbb aad daa pop mov aam insl outsb dec add loope (bad) inc mov out jo (bad) outsb cmp out into rorb popf es xor add mov (bad) std in and xorb mov xchg lahf or jo test mov jge xchg xor gs movsl pop lds xor sub rol test dec mov and scas ror fisubrl sub nop test sbb or ret rcrl push sar push stc sub push cmp ds rcr inc rorb shll rcrl cmp pop add cmp in cmp jnp (bad) fucomi mov adc add xchg adc dec int add cmp popa fnsave popf jnp cli movsl nop mov incl pop data16 fnstsw lcall sarb les leave xchg out outsl push push mov notb in dec jbe or std std in xor xor cmp into xchg xchg inc sbb add adc insl cmp or inc ja cmpl sahf test adc sarb add jns push add fs rcrb bound movsb das adc sub stc xchg sar sub test in stos in call cmp dec cld sbb into mov inc inc mov cs sbb repz jp in inc sahf popa outsb adc cmc (bad) add hlt hlt push pop push jle lret jg adc loop hlt mov inc pop dec int3 jae mov mov pop data16 jo (bad) sbb mov les gs dec loope jns lea outsl sub mov adc or fsubrs push lret jmp sub inc push dec popf scas jl mov xor mov adc test or xchg iret cmpsl or addr16 sub xchg pop add shrl mov mov and aas mov pop mov mov adc int mov dec push (bad) cli xchg xor mov dec mov imul xor fs enter push sub enter mov pop sahf sti call mov cmp je adc dec cmp mov mov mov push push mov lock jae fwait mov (bad) xor mov inc cmp or inc add jno pop cmp xchg push xor lods cli test mov add int3 loop js sarb repz inc sbb pop mov push push aaa add xchg or jle inc js (bad) iret outsl jle mov xor add xor sub mov arpl stos out jnp,pn nop nop dec push mov xor mov cli dec pop out or mov lret xor adc and mov nop (bad) jmp push lock pop pop push insb into lods aam inc push fadds sbb jecxz mov push enter stos ljmp pop xor stos sahf mov mov push jo sarb lods xor sbb popa pop dec scas aad das adc je mov orl mov xchg push movsb int mov fadd xchg leave mov cmp jns xchg out jns sub es (bad) loope ret lcall nop and clc mov inc in push inc mov push ds add jo test pop cmpsb fstpt movsb or push sti push push xchg lret and faddp repnz mov or cwtl add lret xor cltd mov xchg (bad) (bad) and aad dec inc or cmpsb insl pop (bad) add imul ljmp daa mov or stos popf and fisubrl mov push cmp out in fcmovne hlt fiaddl (bad) enter adc in jmp popf sahf add rcrl (bad) (bad) mov bound mov or cmpsl push mulb push xor mov aaa xor in xsavec mov call call int3 inc xor scas jae or push call xchg ljmp out mov mov dec xchg sbbb gs leave rcrl loop pop stos jns (bad) jl (bad) popa add sub int lcall inc fldcw lock push pop jmp test mov into mov xchg test xchg adc cltd add sub scas (bad) mulb push stos into jmp cmp stos jl cld stos xchg pop and push sbb xchg test mov jg int3 mov les dec incb and mov mov add clc pop inc fwait outsb mov push mov aaa sub jb mov push lea jl incl (bad) cld js mov xchg ret call cmp cmp scas dec xor push cwtl ds lahf lea aas mov cltd sub faddl outsb sub cltd and test jbe fistpll popf xor mov push mov cmc lret mov xor in pop xchg mov push jl xchg jmp fldt lds mov pop pop cltd jmp or fnstcw int ljmp sub inc je adc inc outsl push inc fs sub stos or ds mov mov push inc xchg js push les popl mov orl inc jo cmp es fbstp sahf hlt inc pop ds (bad) divl adc faddl fsubp cltd movsl leave mov popa xchg lea pushf sbb cmpsl adc push dec mov das fmulp sbb mov mov subb lods mov leave mov mov mov cmp fidivrl xchg add ret mov jle in push fisttp add mov mov ret push out and aad sub movl mov out sbb jle or pop fidivl pop icebp mov movsl mov lds imul sarl mov jmp xor jns xchg in mov cmpsb adc cmpsl push push pop (bad) in lret aad loope outsb sub stos sbb jnp sub jg push scas (bad) outsl adc mov sub cmpsb mov sbb pop jmp (bad) xchg cld mov (bad) mov or jno nop and aas push cmpsb aad (bad) dec fcmovnu rclb stos inc pop mov and or stos pop push popa sbb mov and aaa pushf stc rol fildl adc lcall shlb inc and push cmp pop xor dec dec jns xor jns call iret (bad) popa (bad) push jb aam mov dec dec and aam sbb data16 push push jp or adc push jle mov dec inc inc or movsb decl xor pusha add xlat lds mov add mov pop cmc mov test sub call popa sub cmc stos push or outsl sbb xor (bad) adc loop push (bad) (bad) movsb xchg pusha cwtl lcall shrb mov inc cmp sub xor call test sti out (bad) or xor sbb in mov lods sarb addr16 in scas icebp mov cmc jl pop sbb bound shrb je mov cwtl nop jno adc adc sub mov (bad) stc sbb movsb movb lea jb jmp fs jg jne pop or xchg pop add out popf inc push in inc cmpsb sub mov inc jo repz xor in nop popa rolb xor cmc xor inc test push cmpl pop (bad) rorb and mov or roll stos je fistpl xor adc xor lds or mov lea sbb mov jl and rcrb call cmp cmpsl (bad) sub dec add fcoms scas jne adc lret (bad) out inc pop pop xchg xchg sbb pop mov jb aam dec pop mov fs int3 clc cmp popf mov xor cmp cmp mov push adc and ja sub inc fucomp mov iret mov hlt mov cmpsl in xchg pop iret enter in or movsl fsubrl dec dec or sbb aam adc push add lcall insb imul sbb clc jge ret rorl xchg iret insl cmp or lret mov loope pop stos insl jecxz push xchg mov cmc bound outsl jno (bad) dec adc in sar and call inc stos mov jp repnz ss dec out cmpsb sahf ss fsubl je jle jle scas push aas repz arpl add pusha sahf xchg call sarb clc push sahf mov fistpll in mov aam mov test fadds movl mov faddl xor push (bad) push popa aas mov cmpsb stos xor mov lods xor xchg xchg test fidivr add testb sbb dec sarl pop js sahf mov mov aas mov call inc in cltd fld aas js xlat push pop inc pop stos lock cmp push std ds mov aam xor jns lods cli jecxz loop jns mov inc emms mov lret mov sub inc pop movsl cmp push sbb jle cs and push jae xchg es ret (bad) mov imul add pop xor jmp adc (bad) jno addr16 push pop jp adc jne mov sbbb and xor aas cmp mov pop dec pop in fwait test and mov sarl mov cmp mov out pop mov and fisttpll and mov or sub nop pop mov js rcll cmpsb test cld adc call xor push in inc inc adc (bad) mov sbb dec in mov icebp sbb inc cmpsl mov je cli (bad) jecxz dec nop clc inc (bad) jns jle dec lock and sti mov js mov jecxz js mov xchg lea lods cwtl sahf lahf insb loop sbb push test cltd mov jns sbb pop sbb ret rcrb push jnp test xor adc cmpsl mull sub xchg sub dec icebp cmp add mov and xchg or push sbb mov mov adc mov imul and test push in dec scas loopne (bad) faddp stos popa sub jnp sbb jl std int dec out ljmp push pop or adc repz push xor arpl mov js dec enter jl (bad) imull nop cmc cld dec mov pop or std pop lods aad cli lret push out iret ja xor push (bad) xor daa mov mov sbb cld mov push sbb fldcw fldt mov mov ds dec push xor testl icebp inc adc (bad) lret sub sbb int jecxz cmp mov rorl inc cmp lcall in clc js jmp jno mov push in incl std add test jb movsl inc xchg fs inc cmp or adc adc mov mov ja or sub cmc dec push ficoml or in dec outsb test aam sbb test mov clc test ljmp jp add (bad) fnsave scas lds pop stos js ret jo pop xorl pop sti std (bad) int mov fnstsw test push mov jge cmp stos (bad) arpl rcrl pop sbb pop fildll cwtl and sub test mov jge pop movsl les (bad) sub packssdw sub inc in push dec mov mov stos or add imull xchg push daa leave outsb and shll orb shlb mov in sti ss fwait adc xchg sarl mov fstpl fisttp sub mov add jae mov mov movsl inc jb jo divl mov sub call adc sbb xchg mov push loopne fildl movsl adc inc pop test cwtl das scas ja or aas test pop cmp or fistpll lcall jnp inc vorps mov or scas add push cltd int xchg neg pop (bad) mov push sahf imul lret ret xchg mov cmpsb pop call mov mov outsl push pop jnp or cmp pop dec sbb bound xor adc xorl and les imul (bad) or lods lods sub inc push pushf clc mov (bad) ljmp lcall arpl aam mov xor or xchg inc jecxz daa add or adc xchg inc push or stos sub (bad) mov add (bad) les pop ljmp and cmp add xchg mov movsb jle jne mov ret push pop xor lcall sub ja pushl fldl das or scas test clc gs pop loop cmpsl add mov xor out cmpsb aad or fldcw xchg test mov cmp dec jp xor je insb scas (bad) clc mulb mov subl cmpsl std adc sbb dec out mov mov lock sub sbb pusha mov int rcr dec and cmp fildl xchg call decb dec js inc pop and inc sarb js push xchg daa mov pop jae adc dec in sbb jl mov inc in call pop nop repnz or adc sub scas loop dec shll (bad) andl daa jl mov ret sbb ljmp (bad) fldcw mov inc inc lds xchg sbb cmp jecxz dec shll bound mov shlb fsubr and and mov cmp pop cmc jae sub repz dec popa push nop cmp xor cwtl pop fwait add fnsave dec mov xor and aaa or sbb and loopne lds mov xchg dec dec sub fs js xor mov scas cmp (bad) mov jmp es fwait or jp mov inc (bad) cli jmp mov inc hlt or dec mov push jmp mov inc jp fmul or test pop fsubl add andb popa fcomps in in dec movsb jb aam (bad) mov push dec fsubl gs push fwait pop repz loope nop mov xor dec aam ja cmp jl (bad) out sub sbb das fldcw cltd cmp lock or cmp cmp fistp (bad) gs xor push jno jecxz insl popf ja mov (bad) push xchg cld and das fistp and adcl (bad) jae push movsl insb fisubl xor clc jo pop mov cmc jo mov je dec (bad) stos movsb jg inc mov test inc mov or jno es mov inc sub lahf test lret cmp fildl lea test stos pop xchg test ret xchg sar mov (bad) data16 jb jmp mov mov xor sahf push fst (bad) fstps stos cmp lods ljmp and jb,pn and cmp jno push test sbb adc (bad) fcoml dec movsb add dec in xchg sti xchg ds (bad) pop mov jne dec add not out out je and jmp aad out js dec dec fdivs mov stos push push sub nop mov aaa mov adc lcall cli rclb call cmp dec push call push call inc mov ds push popa call push xchg lahf out aaa ja out jp or and arpl push insb mov into and pop push mov mov and imul xchg jge cs jae shrb jl rol xchg mov push popf test xor into cwtl aad push xchg inc imul mov ror js in add int cmc cmp cmp ja push dec in mov jle in lea (bad) imul pop aad pop add js dec cmp mov sbb (bad) (bad) dec aas adc (bad) int icebp xor call (bad) xchg fsubl (bad) xchg cmp push push int3 mov leave mov xor lods lcall jo mov scas ja sar int sub cld inc add js stc je daa scas sbb das arpl bound mov in mov dec xchg lahf js push in sub push xchg inc push mov es mov or jo cmp ja iret dec xchg pop stos ja xchg test std and mov rcrb arpl mov mov sub test mov out test push repnz fld and or lea hlt add xor mov pop test je cmp or out ljmp lahf jbe je push data16 addr16 pop ret cmpsl cld scas cltd or aam (bad) adc ror mov mov pop push pushf std and or inc insl fptan inc in jbe or in iret aad (bad) cmc jle dec sbb jge cmp sub mov pop cli mov das (bad) cwtl mov dec js push dec push aad in imul mov xchg inc adc jae iret mov inc mov sbb loop dec mov flds jecxz mov sub jns lret cs cmp and sub add les movsl les ds shrb cmc xor xchg loope sahf jmp or pop test mov dec aam ds lock xchg xor push shrl pop mov inc cmc mov stos mov fidiv jl sbb and xor aas push (bad) bound mov sbb outsl sti mov lret sti or enter fcomip or aad jl stos xchg pop repz xchg bound xchg mov movsb push fcmovnbe mov xchg loope test lahf mull push dec sbbb aam and (bad) inc test cmc ja and sbb or xchg add sti and cmpsb adc ja mov mov (bad) push outsl repnz lret aam xchg cmp mov sub hlt popa jecxz inc pop loope add lcall inc loope or popa pop sbbl mov gs fstps mov xchg pop push cld fucomip push outsb out pop mov xor insl jns xchg fnstenv sub mov mov lahf out mov mov sub mov cmc mov sbb inc jp and cmove pop cmpsl rolb stos xchg lea outsl cmp cmp mov jae,pn push and dec dec add cmp fistpl dec lock nop lahf out xor fsubl mov das in inc cwtl mov mov mov addr16 pushf pop cmpsl inc shr cwtl cld add xchg jl out xlat mov movsl pop lea inc xlat int3 jnp xlat xorb xchg icebp fcmovbe imul (bad) dec pop and arpl dec out add mov add loope sar pusha sub pop mov repz enter cmp and inc mov out jle sub and adc cmpsb imull outsb xor aaa sbb lret xor push fiaddl into lds lock sub adc sub cwtl icebp inc leave stos jnp call push aas sub outsl jbe pop mov cltd (bad) mov rorl stc mov ret fistp sbb jmp lock cltd pop daa mov cmp sbb clc jmp jle cmp daa xchg icebp xchg xchg dec arpl mov sbb stc xor es in cmpsl mov test test addb rcll adc xchg fdivl dec jg fwait out int ss into jmp jecxz mov testl cmpsl push rolb test and jae data16 mov (bad) repnz in mov inc add roll rcll sbb jno lret dec ja cmp enter mov mov sub xchg movsl sbb rcll and and stos sbb mov hlt and scas daa cmpsl mov cwtl mov sbb sbb mov push lret mov pop fmuls (bad) mov push cli xor gs sti and (bad) cmc dec xchg mov or dec pop fsub lea xchg mov push test mov push xor je daa (bad) mov jne ds cmpsb out adc adc jae test xchg sbb je out inc dec scas xor or sbb mov int3 add je jno push stc mov cmp fdivs and rcrl or ret arpl pop jmp bound sbbb inc push fsubs xor pushf loopne add jg addr16 test daa sbb gs shrb xor xlat xor sub pop scas jg (bad) lahf mov mov lods js add or les adc or adc in adc gs sbb (bad) sbb inc mov xchg sbb xchg out sbb cmp lahf std shrb pusha jle loop aam push push push rol mov xor (bad) cmp fsts xchg sbb int3 push fstpt fcomi push sbb test xchg fildl add and ror lea imul dec sti mov xor adc ss xor (bad) cmpsb fs dec stos in xor push xchg lahf lock imul icebp mov iret mov (bad) into lret icebp pop in insb iret lcall movsb mov daa add mov cmp mov adc (bad) jae mov mov stos jnp mov arpl loopne (bad) ror les add jg mov jecxz fdivp adc imul fbld ljmp int3 ss jae,pt mov jge sub sbb sub pop ss (bad) jnp sbb or cmp nop outsl push lret imul sti mov sarl adc cmpl and movsl cmpsb sub fcmovu pop ljmp fbstp testl lahf or sbb push loope lds std sahf pop jge (bad) mov push push cmp rcrb sbb push dec roll sti cmp lret cmp or xchg xchg inc push jp out imul mov lods or lret push in icebp insl scas push jns jge xchg mov add repz ss dec dec jl arpl inc test mov jne (bad) lock aad xor add fdivl mov jnp dec push aas mov inc std gs jnp popa pop or or lret add fsts pop cmp cmp iret adc dec pop scas sbbl sub repnz imul dec add imul (bad) pop dec sbb in lds mov pop mov sbb scas aas xor sub pop pop xor outsb ret call sti mov fisub hlt lods jmp add and fidivl jmp hlt xor lret cmp mov pop sub sub adc cmp jno fs out mov int das divl mov cmp popf mov and cli push add adc jno fsubrl (bad) adc fstpt mov lret jmp add iret xor ret inc xor mov adc divl push pusha cmp sbb stc rcrl andb xchg pop mov jbe in xchg or loope lds add ret add cwtl push roll add jle in pop fsubl push lods mov rcrb or repz push sbb movsl add or xchg movsb jb xor push pusha lcall aad add cs mov and lea pop ret sbb or out jp lahf pop out (bad) push ja mov cmp push mov push adc sub and jge mov ja jge adc push hlt mov cmp inc push test les dec or mov mov sti pop test in mov push loop insb cmc xor aad stos add adc jmp dec mov add shll ret std cmpsl pop das and int3 es xor fst es cltd testb cmp repnz pop mov or xchg ds push add shlb dec sarl daa pop xchg test pop es xchg push popf xchg negl js gs clc in fwait add (bad) pop aas jno or sbb int cmp pop mov in push and dec cli adcb fsubr pop cmp stc pop and dec mov ret es call jge sbb inc (bad) (bad) fimull pop cmp aaa call cmp cmp pop and mov jl cmp ss dec inc xchg push and cmpsb jecxz shlb cmp mov adc faddp in into jae cmp addr16 ss mov push call xor mov in mov stos sub test mov mov (bad) lds scas arpl adc push push pop add mov inc xchg pop iret ret jno xchg in push int cmp or or (bad) loop daa or xor stc and add cld mov addr16 setae insl cli mov lock jmp mov jne add lret xor fildl jl add adc jge xchg push jns loope add jge stos inc sub lods mov push add orl (bad) mov test call sub push insl adc xor cmpsl faddp lds cs into and add dec xor popf xchg lods cmpsb aad ds xlat and push out mov bound cli or mov xlat jno lcall push pop jge pop or (bad) aaa or mov inc push jle in aad push and or scas cmpb leave mov je movsl stos outsl cmp add loop (bad) fisttp out std jnp ljmp repz jge cmpl xor jnp,pn and adc cmp insl add sbb fimull inc ds std dec notl (bad) push mov dec pop push sub sbb negl push daa cmpl bound repnz cmc fnsave lret push push pusha push add jecxz jp in das es xor sbb cmc adc and clc mov dec mov jle shr outsb rclb stc cmp xchg aad sbb jo adcl pop stos (bad) scas aas lahf pop or inc mov xor adc divb push std in (bad) stos xor xor test test inc inc xor insl adc in lret pop pop outsl jno mov sbbl cs jne mov xor xchg push cli adc fistpll sbb xchg or stos mov fiaddl inc mov ret fwait sbb add mov test imul jecxz std jge sahf add pop das sub pusha dec pop inc cmp pop ljmp dec fst (bad) sbb and add (bad) testb repz lock in stos outsl enter out xchg adc inc leave jl xor push fnstenv out (bad) mov je (bad) fiadd ja sbb push aad xor xor lods and xchg in insl and inc clc mov jne into (bad) idivl flds pop jecxz push xchg push test jmp xor int3 jl xor mov adc dec inc pop ljmp pusha cmp jb adc dec dec scas push push lods xor data16 shlb push out and ret call mov xchg xchg adc imul stc jnp xchg or mov mov call pop cmp loope and das sbb sub lods (bad) pusha in stc je or (bad) jbe ja mov jbe sub inc mov aaa icebp and mov (bad) leave jns jmp mov xor cmp xchg xchg (bad) decb js push mov leave out cmp negl xchg stc out dec std inc scas jmp jecxz je dec std je lret test push (bad) or mov mov pop sub xchg int3 lods je in sub cmc scas push out lea xchg mov hlt rolb dec insb xor add xor test jne cmpsl add cmp arpl movsl pop pushf jecxz insb mov mov fist inc pop push orl loop inc scas movsl mov mov jp xor push scas call negb and xchg cmpsb lock push xor es movsb mov (bad) jo xor daa add subl mov test xchg ja (bad) (bad) jle xchg out sub inc sub or xchg xor xchg dec jns mov fwait xor mov xor fist sub sbb push loop sbb mov dec xor rorl gs int sub and stc mov push inc mov (bad) mov clc jb js push push adc mov mov lock popf in xor outsl shlb push push mov iret jae loopne rcl ss cld mov mov mov (bad) iret aas or mov (bad) repz hlt or or lds add mov ficom inc add rorl or wrmsr addr16 popf sbb scas test mov fldt push xor call inc lds pop orl jge pop mov test aaa ljmp mov push push fcoms cmp jbe ds cwtl cmp mov or enter or jbe adc push inc lds and stos mov jmp insl pop stc mov cli orb les add inc rcl mov lret xor or mov mov push sub cmp aas fdivr inc int add test and and push mov pop movsl inc mov ret sbb dec les lahf jge,pn rcr sub lret xchg jecxz adc insl mov xlat sbb hlt dec into cwtl xchg sub sbb out pushf dec lea dec les clc lret cmp xor push cmp mov (bad) sbb dec aaa mov outsb xor pop mov sbbl cmp stos sbb lahf adc jle addr16 incb add test pop cmp or lods stos fstpt jns leave or out (bad) push xchg hlt jbe push aam movsl and rol (bad) jecxz pop sbb mov adcl int3 rclb loope mov xor or cltd iret imul lcall std push mov lds jmp shr or pop fist or jmp xchg rclb (bad) adc movsl add pop movsb or sbb push fdivs ret jnp ljmp scas xor xlat inc fbld (bad) xor cs dec dec stos xchg push or pop cmp js add movsl mov sahf decl jecxz pop outsb icebp xor mov push jl clc fldenv in add add cmp push mov inc clc jbe pop mov jge dec cltd mov dec scas adc xchg int3 mov (bad) mov mov cmc push jmp pop add cmp inc fiaddl or pop mov pushf lcall mov lret jae sbbb mov (bad) sbb fwait mov jmp repz xor mov inc clc frstor daa cmp lea jnp imul loopne stc fsubl lock mov add sbb in mov cmp loope in icebp push jno xchg sbbb push cmpsb lgs or adc fstl mov dec sbb sbb nop bsf mov sbb xchg outsb mov and jnp movsb loope cmp sti and xchg xor into cli inc and loop jne lret jb or inc addr16 xor mov sahf push stos stos stc dec xchg sub or out xchg jg aas rol (bad) aam jo dec lea or jae or movsb sti popa pop lahf xor sbbb cmpsb flds dec push insb popl mov arpl (bad) mov dec lods sar ljmp xor pop lret or inc fimull repnz inc sbb popa or mov cmp or dec scas mov mov lahf mov in mov fildl aad rorl mov xor jnp jnp dec mov inc lds sarb mov push pop jns dec and jbe jns out test das dec push sbb insl popf subl loope xchg lret sahf mov int mov pop test insl xchg jmp mov daa arpl mov mov jae fisttp lahf mov sub jle mov inc dec or lods int test adc mov sub mov std leave rorb hlt pop sbb sbb sub gs xlat scas add add or out mov or mov lcall sub rcrb ljmp sbb arpl push test cli mov enter or aad call out mov add and mov insl repz cmp or (bad) adc pop into pop mov xor mov cld mov or or sbb and pop push mov cmc es add decb out ds cwtl mov test cwtl jge xchg jne outsl mov es mov xor mov addr16 xchg enter mov xchg ret add sub ret loopne dec sahf jecxz cli aad pusha fldenv cmp mov test inc daa ss push lock in fwait xor mov mov (bad) lock mov cld movsl sub push aas sarb adc cmpsl out pop add inc cmp or xchg adc sub loop imull ds jno push ficompl daa dec insb inc or sub addr16 xor aad jl cmpsb and (bad) push push outsl jp pushf xchg mov mov mov add sub jl loop sub sub loop xchg and cmpb cmpsb jae cmp loopne adc scas push std and and aam enter xchg xchg in outsb mov decb fadd dec (bad) jnp mov jecxz loopne sbb inc ret roll loope or or mov aaa adc add fisubr mov lods dec (bad) cmp sub mov in ss push mov sub jg daa (bad) xor faddp push gs outsl ss push sahf push nop int3 mov mov movsl das (bad) sub out subl leave nop sbb push test daa xor (bad) es dec cmp mov pop fnstsw sbb add sub or aam pop test loope lcall test in popa gs xor fmul jg pop inc cmpxchg mov in dec imul ret test xchg xchg mov or fisttpl or fwait add stc dec add movq adc cmpsl pushf je mov pshufw mov fnstcw divl out sbb push movsb dec cmp insb sbb sarl into lods test (bad) repnz mov sbb arpl ds push (bad) sbb adc bound lahf mov mov aas repnz (bad) ja dec inc jno xchg xor inc data16 shll inc fbld xor es (bad) mov mov sub fwait add fwait test jb (bad) daa std cltd and outsb lcall cld xor lods and pop adc mov cmp add fdivs sbb jge and mov std out cmp (bad) aas jmp cmp cmpsl pop mov xor inc je,pn pop std outsl mov sbb xchg arpl mov adcl cmp dec mov mov (bad) fwait stos pop ret xchg rcll mull or lock fidiv dec lds jg sti daa and xor lock leave mov xor ja push mov loopne icebp shlb mov iret add (bad) mov test (bad) mov mov notb fs pop out or or add pop push jle adc mov xor aaa out leave aad mov fist popf add push jge (bad) ds loopne (bad) mov xchg sbb enter add aaa iret lds adc inc sarl push cli pop add loop cmp int3 mov addr16 jle cmp cmp add arpl pop xor mov mov jo push and repnz or and aam jl nop mov pop sbb fisttp (bad) aaa pop xor adc adc (bad) sbb lret test sub into repz jg jbe mov jmp jg leave repnz inc sbb (bad) lret mov stos cltd push popa (bad) mov add inc fldcw lds sbb out push stc mov int3 add fstpt cld or daa pop mov dec inc in pusha icebp scas jbe inc xchg mov roll xchg hlt scas push xor push lahf push lret imul je pop fwait add sub or in aaa call jmp inc xor xchg insb fcoms (bad) sahf shll pop jmp cmpsl fdivl lret adc mov stos add scas jbe jae jmp (bad) or add fidiv out cmp sub in int movsl sbb xchg jo mov jp inc sub or test fwait add or leave aaa pop pusha (bad) jne rorb aam fstl insl rep add outsl and adc nop call popa inc adc and icebp cmpsl ss pop es pushf lcall sahf mov xor adc js adcb pop popf sbb call sub pop mov ror add mov lret (bad) jp hlt push xchg mov xchg out fsubrl ficompl jge nop fldt add pop rorb rorb sub mov test xchg les pop sbbl mov cli leave cmp mov imul lahf inc pop aam (bad) roll cltd xor cltd push in push or ret inc sub dec mov sub fdivr mov stos jl out and (bad) cmp in lahf repz movl das inc rclb (bad) ja das cmp push mov xchg xchg mov pusha pusha jo sbb jge inc rolb cmp push icebp sbb imul lret negb xchg je pusha mov push dec or mov cltd jmp es mov nop inc je loop int pop xlat (bad) mul xchg cwtl pop add loop sub popf cld in add fisubr cmp xor out mov mov and xchg and jae cmp mov adc push pop pop clc and dec imul sbb scas (bad) inc in xor mov cmp mov dec in mov mov icebp inc fidiv bound add sbb mov cmc mov das movsl test pop (bad) in sbb push push repnz subl cmpsb or adc repz xchg es push in int3 inc (bad) out push xor hlt neg and pop jns fstpl mov movsl nop pushl lods sub mov or jl frstor lods jae mov pop mov dec push jno sbb in xor mov mov fisttpl lahf pushf pop lcall sbb mov mov sbb es sub push pop call mov fsub addl cmp movsb shrb outsb cli (bad) xor gs mov pushf jne addr16 outsb xor sahf add or pop mov mov sbb xor addr16 adc xor test ficoml imul add inc (bad) lret and add push lret push cmc and jbe orl rcpps repnz adc inc stos mov fsubs pop aad jne into call incb cmc push inc stos jae xchg add add jno xchg cmp push mov mov outsb rclb lret ret shrl jge fdivrs sub push mov fsts popf cwtl mov popl sbb daa outsb movsb mov xor jp cwtl dec push adc (bad) cmp dec mov dec mov outsl push push pop xchg sbb jmp mov or mov leave cli lcall cmp enter imul sbb adc adc mov addr16 and xor cmpxchg mov (bad) int3 adc pop stos subl and in es ret jns jl push rolb adc push xchg mov and out out dec (bad) mov lret adc int3 mov push mov loope out push stc ss push ret and jns sub jno cmp test nop xchg insl fldt pop pop hlt cmp lock sub in stos addr16 jl outsl add daa mov sbb in sub movsb fwait xor cmpsb loop mov xor test and imul push gs sub popf in xor cmp inc loope pop fs adc and xor loope dec sbb mov sbb ljmp in and cli loope cmp or mov cmp imul enter cmpsl add stc fsubrl mov pop add cmp dec outsb inc xchg outsl mov loope lcall iret xor xchg hlt jmp cmc fisubrl and jno cltd fs in push das mov movsl xchg mov pusha or push pop mov push mov movsl push out lock aad xchg xor gs mov sarb int3 mov mov test sub int lods int3 push dec movsl push add jecxz,pt dec ja mov or popa test inc clc adc add shrw and xchg sub xor push ja test add data16 cmp pop cmpsl add leave out ret fcmovb in push js fwait test (bad) cld jnp push push cs nop inc test push (bad) dec ds gs cmp incl mov lds inc stc pop lret dec sub daa pop adc js jae adc outsl int3 test xor jo inc out sbb fcomi lcall push outsb rolb mov fstps test (bad) adc jge js loopne and ffree (bad) hlt xorl scas cmp aas movsb pop jl add cld repnz lods jbe (bad) sub pop jne in mov fnsave mov lmsw xor xchg in mov sarb call inc movsl call adc or xor mov mov push sub call ror xor push in add pop cmc (bad) sbb test clc add out mov aad lds xchg mov push jno adc mov test lret push cmpsl inc das stc mov inc out das fwait aaa cltd imul out lods test stc cmp lret add push and imulb in cmc sbb push les fild lea push lret mov in std outsb mov sub push aam outsl std add mov and push dec or aad pop (bad) out xchg xchg push push sbb (bad) dec popf imull dec mov inc mov xor pop jg fldl2t pop cltd mov aad add insl inc fidivrl repz xchg push push enter mov xchg out inc test mov into mov aaa fstpt popf in jg lods xchg jbe fstps in pop shl dec test adc shlb data16 or add rclb or movsl xlat inc in jb sub sbb out dec push outsl add lcall dec dec sub repnz lcall or cmc test jle or jo xor inc jb mov sub sbb das inc insb ja jmp adc cmp fldcw jae cmp xchg cmpsl ljmp je aaa insb loopne inc dec dec adc fdivs sbb dec repz add sti pop dec mov hlt and mov icebp sub adc mov lahf addr16 mov lds les cli cmp inc ret fsub mov in test test add out sub ss xor daa leave dec cmp sti iret out out sub sbb jl cmp adc hlt pop inc sahf clc les and mov lds imul pusha rorb jae xor out lea pop xor in imul add mov (bad) mov pop in adc icebp sub xchg mov pop hlt bound cmpsb addr16 scas insl mov mov push xchg pusha jmp into scas negl shrl pop pop jne mov adc out rcrl mov in test sahf ret scas jge or jecxz loop add cmp lret inc mov negb push cmp mov lret into pop hlt jb test inc roll cmp pop int inc nop xchg sahf out jp and gs mov in sub dec adc xchg mov int3 rcll (bad) mov mov (bad) popf xchg inc xchg les add jp lea cs pop push lock adc scas jb sarb insl out int not fiaddl inc rcr movsb in shrl fisub add aaa scas movsl popf arpl jecxz out xchg mov test pusha lcall enter loope mov addr16 sub dec cmp sub in test sti nop push xlat and outsb pop and stos int push sub and adc adc inc into loop push cli andl xchg scas mov cmp cli sub imul movb ljmp sbb push jp xor je fwait or mov cld mov sub dec mov dec mov jge into fadd bound (bad) mov (bad) xor fldenv (bad) (bad) mov jns test into in or lcall jmp or sbb out in xchg sbb xor in scas (bad) into fistpll popf cmp lea gs jmp or push in lahf hlt mov (bad) jae sbbl jl cltd lret xlat inc mov and iret add sub ja enter (bad) outsl std into hlt (bad) imul sahf in (bad) cmc (bad) jge mov sub and push sbb sbb mov pop mov sub in stos in icebp test and xchg out orl out and jb sbb adc lods push rcrl mov mov aam cmp or rclb or sbb mov insl icebp cwtl ret sbb repz xchg xchg xchg xchg andl push add inc inc (bad) mov ds in imul cltd mov inc pop movsl jle das pop push stos lcall lods add mov xchg rorl pop (bad) push xchg mov jle fsubr aam imul inc mov fs iret enter jecxz pop fnstsw ret dec sub mov mov inc push das iret jno lods fcmovb dec movsb mov je addr16 sbb sub push jo (bad) xchg mov pop jb,pn out and mov in js fild popa popl out out inc cmp shlb sti lret in pop push xlat daa adc (bad) xor rcrl push inc jecxz lds mov (bad) sub push push js and cld sbb fdivrp jb (bad) leave add mov add (bad) adc sbb push fwait loope dec je sarb daa fstps xchg call cmpsl sub lods lret add mov jmp call std or dec outsb cld push push push pop test mov jne add popl xor repnz push cmp mov push xor or cmpsb fs xor mov (bad) call and jmp adcb mov bnd in mov imul inc push push sub sbb sub mov andb or mov icebp out ret (bad) add adc and jns dec fiaddl mov stos push popa sti int3 clc mov cmp push ss aaa mov das sti and push and add rcll addr16 jle mov sub inc jmp xor mov jbe mov sarb and cmp lods mov lock loope cmp scas pop inc jle call dec fistpll daa addl jbe sti outsb lea mov inc movsb adc jg dec dec lret enter mov iret in pop lret rcr and inc mov cmp dec xor push cmp pop push and pop mov loopne ret pop inc pop ficomp sti scas xchg cli mov jmp pop loopne push sbb sub popa pop int dec and sub ret mov mov imul mov in scas push mov pop (bad) mov shr clc insb insb cs and push enterw sbb inc pop pop xchg adc add pushf nop loop sar std add lds jmp dec or inc jge add xchg (bad) rclb cld jbe mov pop mov data16 adc pushf mov lods mov push int movsl cld xor fidivrl add das dec fimull xchg cmp mov pop push fidivr gs jecxz ja stc xlat jge or in add cmpsb loope push sti xor jmp push loope jae and cmpsb adc push scas stos sub adc cmp nop cmp ret in popa jns fs push fcmovnbe in jb mov push jns xlat and inc dec or fidivl mov adcl mov es scas fldl fdivr push jb pop repz (bad) js dec dec mov fimul adc fadds fwait dec gs dec xchg daa and jbe scas stos popa sub fdivrp mov iret out add ja push popf call inc xlat sahf daa cmp and std into (bad) mov xchg sub pop sahf pop pop jle lret ja in sub and cmp xor in mov loope fmul jge cld lret or nop pop in arpl jp mov xchg jno cwtl lret pop dec sbb push (bad) xchg test add mov jp pop xor fcmovbe or add cwtl pushf mov das (bad) add jp and inc test and std jmp and jp fisttpll xlat call ds cld lock lock cwtl push popa mov mov out das bound (bad) ja or icebp sub jmp btc pop inc pop dec inc add lahf pop fstpl data16 idivb and repz jge cmpsl pop sti es lret mov ljmp mov pop shll inc mov mov push push cmp dec lcall scas xchg mov xor jg xchg or mov jmp dec aam cli xchg pop jecxz repnz (bad) vunpckhps sbb xchg inc adc addr16 adc add hlt in roll jp add cmp jg aaa nop das pop or or fstpl and in outsb jl enter jno (bad) je int or adc jae shr ss mov fnstcw mov mov sbb add push jg je into mov lds push mov cmp lea daa stos jns add ret ret pop inc out xchg cs pop adc aad popa pop leave inc dec push mov cmp (bad) xor outsl inc fbld push jle sbb inc sbb sahf ficomp and dec stos sub adc adc (bad) mov adc in xchg jecxz fisttpll test int3 cmp notl add cmp out jo push lods push inc dec ljmp loopne mov lret ficomp inc scas pop jmp int3 aas sbb inc out push sbb add movsb xlat xchg divb out mov addb stos add cmp mov inc mov mov int3 pop push (bad) (bad) fildll mov into std push sbb push xchg ja dec add in pop mov or xor cmc pop push mov push movsb mov or leave sub lret mov or sbb xchg je pop add jnp cltd pop (bad) jne pop das nop dec das (bad) insb das (bad) mov mov push or cmp add dec mov sbb cwtl repz mov imul mov nop mov mov cwtl push xchg test jp pop sub dec xchg sbb sub xlat into divl aaa jg and in cld mov enter push sbb push pop mov outsb fwait inc add (bad) in aam fdivl sbb jbe ret das and sbbl notl popf push inc mov pop dec test sbb dec xor xchg shrl testb sub sub adc loopne lret jae pop lret or sub sbb mov bound js xor les outsb out cmpsl (bad) cmp shrb (bad) mov jp cmp in and jmp push icebp cmc push icebp jbe pop sbb cld mov mov flds mov add (bad) out imul adc inc xor dec jp pop test and xchg and xor lea push popf mov inc test jp sub (bad) push outsb data16 mov fdivl mov scas mov das ljmp jecxz int loop (bad) mov jae daa and cmp pop fisubrl (bad) mov addr16 hlt adc and (bad) aaa sub aaa les je lcall and pop insb mov lret das in fwait cmpsb inc mov and add fiaddl dec addr16 popl fs (bad) (bad) xor orb addr16 andl (bad) mov cmp aam fldl pop data16 lods cli jecxz cld dec lcall fs sti and mov or cmp jg push add mov cmp sub adc out push sbb (bad) cmp xor loopne out push jns mov inc jns mov cmpsl adc and outsl outsb lods or (bad) cld int and xchg xor imul out (bad) or and push icebp popa mov cmp pop sub pop push mov stos outsb cmp cs (bad) rcl pop jae jne out pusha clc scas adc mov inc pop xchg xchg xchg cmp addr16 push push test rorb imul insl cltd push fdiv loopne bound rcrl add jg or inc fs sub ljmp inc stos mov out pop sbb leave fcomip repnz xchg or clc int scas push jno subl cwtl mov es fsubrl xor pop mov (bad) dec ss test mov jmp aaa xchg (bad) cmc out mov popa movsl pop mov cmp and push mov adc cmp pop jge push push lea (bad) jbe jns (bad) fildll mov lea and aas jbe mov ret inc push pop out add adc pop push sbb sub xor sbb out repz jno test (bad) repz jb cltd mov movsl sub gs push push std (bad) loopne ljmp das pop mov lcall or stos fs out inc (bad) roll mov lret cmp cmp mov push xchg sbb pop repz ds pop roll mov fbld fsub mov jp add movsb fbstp pop xor fldenv pop movsl push xchg mov push sbb aam cld (bad) popa das repz pop int (bad) lock sbb icebp push stos test pop pop lea add (bad) scas mov data16 lock pop push push jg xchg in int3 jle rcll stc dec jae or insb jb xlat mov ret cmp inc aad into iret inc add xchg add mov sub jmp pop pop pop push je and iret pop lock insl add jb pop jo imul movsl scas in loope call xor hlt xor jle push mov adc call out cmp test repz jmp xor imul jl mov movsb rcrb and mov leave inc loop test sbb jno mov ret inc add jbe fimull test test cmc sbb test pop pop or sub stos push sub cmp sarb lock cmpsl mov in push add add insb scas (bad) add sbb xor pop dec fwait xor and cmp int3 mov pop lcall (bad) push push pop lods ds pop lret adc outsl movsl fistl pop pop fldenv ret (bad) sub xlat loopne cmpsb jmp dec addl mov pusha loope jg jb mov imul call fstpt sub (bad) sbb cltd std (bad) push pop stos push js xchg mov lea push lods lods movsb or cmp repz cmp lea sub test dec (bad) xchg sar push cmpsb loopne scas iret push sub roll cmp or jmp add sbb inc repnz mov je inc in fs icebp aaa sbb int sub xchg xor push negb cmpsl daa inc adc adc sahf fbld mov div add cmpsb mov pop ds scas pop stc dec stos fdiv add push pusha push sahf les mov inc in sub sbb dec xchg lcall out pushf movsb fisubr jno mov xor pop jno or pop mov enter test ss in sub jl mov xchg in imul jo gs sub sub lcall pop ret push repnz (bad) iret pop (bad) clc xor not scas and xchg xor call push mov pop std cltd int3 sbb mov or shlb mov inc sub pop daa jl sub cli cmc cwtl add xor das gs push and stos out pop pop and adc mov cmpsl inc add adc add aam insb popa dec jnp test jno dec fnop aaa dec add ret popf fisub pop sahf and ret cmp push js nop dec (bad) ja xchg push ja cld (bad) es mov fmull sub xchg cmp fcoms cmp in jne and push pop mov mov stc inc sbb int add mov add xchg mov daa movsl mov cltd sub push iret (bad) xlat xchg data16 arpl rclb adc test addr16 xchg cmp out call bound imul stc clc lcall dec add mov in push movsl das adc xchg mov scas js mov test inc jl mov faddl sbb sub mov mov cli (bad) xchg das addr16 dec ss pop sbb mov gs shrb add jne repz xor mov addr16 jl fadds adc add dec enter (bad) mov je and test fdivl push and sbb arpl push cmp fildl xlat pop (bad) (bad) pop xchg mov insb cmpsb stos pavgw adc push fisubr adc cmpsb inc dec push lods add adc add cmp mov scas mov add inc mov or push repnz pop loop (bad) jmp into repz mov stos inc movsl pop dec jae jg popf out mov xor pop jbe std xor ljmp mov pop xor mov (bad) mov idivl pushf dec cmp fisubl nop out mov and iret (bad) insl xchg fsubl lds and adc push ljmp mov mov xchg sbb pop lock dec scas data16 cmp stos arpl mov pop push xchg add ret hlt pop dec aas push fildl jl enter ret imul popa inc mov mov mov xchg loope pop fs xlat sub xchg mov cld (bad) clc pop in pop pop mov (bad) jmp repz and scas test xchg cltd mov push or pop aas push clc push call pusha mov sub ljmp scas cwtl mov lret pop fs add lret int3 sbb (bad) stc dec cmp jnp cmp (bad) lods mov cmpsl in mov iret jno lods and xor fisttpl inc adc pop nop pop sub loopne adc sub clc clc or leave sbb sub adc ljmp or jb mov cmp cwtl jbe add scas js pop pushf shll (bad) icebp pusha dec outsb xor pusha idivb push inc add cltd lods sub xor call cmc dec sub jmp jecxz add inc inc cmp imul mov jbe mov fsubl int pusha sub mov xor gs fwait and daa inc movsb xorb scas sbb or aaa fstpt sahf movsb je add (bad) repz es mov xchg call loop das lods mov xchg xor fwait shll gs cld cwtl mov sahf fcmovnbe sub pop pusha notb inc pop fdivp mov push fs popf mov cmp cmp mov xchg hlt xchg fcomps and into aas mov aas pop movsl add mov cmp or inc jne and cmp mov xchg ret mov clc dec or sub imulb and push or dec hlt add out fcompl push sahf rcrl or jbe aas sbb in les test movsb scas add mov test movsl and inc das jbe adc sub dec outsl mov scas push jae (bad) stos ja outsb test mov sahf dec jl push leave push xchg jl lods and cmp (bad) jmp mov dec or inc dec insb jne or pop mov adc or in jmp lods jno scas mov dec les dec adc scas stos (bad) cmc cmp frstor push test mov movsb daa inc outsl mov adc push fwait popa pop jbe fwait aaa aad add cmp mov ja jge stos mov aad pop insl push int jle addr16 clc cwtl mov insl movsl jne or inc out lock pop hlt xchg xchg and cmpsb stos fidiv cld jecxz jnp add pop inc mov and movsl stc out adc lock pushf imul adc push imul hlt xor sub in cmp mov in xchg push (bad) and rolb jae out and pop mov faddl pop in push add (bad) arpl mov nop inc mov inc fcoml out into and mov dec dec pop sbb into fnstenv adc pop push push add push push loop push int sub inc lret xchg addr16 call cli movsl pusha cld cld (bad) iret dec (bad) imul insl fnstenv inc lret js pop aam cmp xlat cs outsb mov fldt add jp cmp mov pop je,pt mov push xor and xchg repnz push xchg fwait repnz sbb inc mov dec dec insb es sbb sbb popa and popf sbb push add dec in aas dec cli jb in push fmuls xchg and (bad) dec pop sbb xchg push xchg ret mov xor sub les mov adc xchg inc mov or orl jp rclb popf jmp xor inc imul dec cmc push adc jno jo mov adc rcrl mov aaa cmp jns sbb push push inc test sub sub in mov jg jmp xchg or scas and (bad) ljmp test jno pop mov test xor mov dec je pusha xor adc sbbb push test pop and (bad) adc lock insb pop inc ficoml out cmpsb ret and and rclb sarl (bad) test aad fs out mov mov or and dec insb pop clc xor sbb adc xchg jp push push adc jmp jae pop xor xchg aaa rcrl jbe out cmp push jnp repnz ds lds sbb negb and (bad) jp fildll xchg aam call les push mov out xor cmp inc jmp pop xchg pusha sub xchg xlat mov inc or jae mov faddl cmpsl mov inc shr lds cltd lret mov hlt jbe or in insb popl in rcr cli jnp mov xchg inc pop sti scas sbb stc mov aam test and push xchg in jb ljmp adc movsl xchg outsl je adc or out mov pusha mov or test fxch bound inc mov jnp repz inc xorb add es loopne loopne xchg jbe aaa or pop in insb cmp pop in inc push or lea xchg push xlat sti xchg jb xchg xlat mov push mov or mov lcall jp pop pop jp or ret fidivl mov push mov xor or inc add push jecxz adc jmp fsubl jns jl popf adc or (bad) ds arpl add faddl add cmp xor aad mov (bad) decl add popa xor int3 inc in push jb dec cli popl mov and or sbb adc pushf and and push je or jg mov stos movsb mov hlt mov mov mov push mov and push cld (bad) and dec xor sbb push test cmpl repz mov data16 lahf clc dec out lds sub lds movsl cmp movsl adc adc inc mov cmp lcall jge lcall add add int (bad) sti sub jae outsl test sbb xchg add inc repnz jne ss xchg add sbb cli loope (bad) fimul out outsb je test lock jno or and outsb dec (bad) out es dec dec mov ds cwtl push repz pop mov push pop mov scas stc sbb mov fnop imul push pushf mov xor inc jmp push push pushf mov xchg sbb jl in out popa mov dec inc cmpsb sbb mov sbb int (bad) jnp leave inc mov ror mov push sub add (bad) repz xchg dec mov movl sub push push mov push repnz call adc movsb xor in cmp jnp inc in mov sbb pop and outsl repz inc fsubrp daa sub gs sarl jmp cmp xchg push sub mov je jge imul pop pop sub sub push bound adc fldenv pop push jl mov scas outsl pop lret into mov pop xchg ds or flds daa xor and mov sub cs fnsave xchg aas les enter icebp and adc out dec repnz cld sbb out push or dec or fwait jmp pop pushf mov movsl mov (bad) xchg adc xchg movsl adc sarb add das lock xor jp fisubl lret fiadd jecxz,pn xchg push lcall adc dec fsubr lock mov je push add adc mov int3 enter sbb push ret jne mov call pop push jnp sbb or sub out mov mov sub jne mov or push (bad) xchg jge cmp lods jb mov stos jno cmp add inc xchg or and aad adc mov pop (bad) push in mov cs (bad) pop jo stc dec push andb mov shl or jg (bad) xor daa rcll pop loop movsl cltd cltd and fwait pop pop xchg lods push or hlt xor fidiv dec push cmp add sarb aas lret out je push inc (bad) xchg xchg aad jns inc push daa loope js sub cmp add (bad) je jne icebp jb insb xchg sarl and ss aad bound (bad) aam insl mov xor cmp imul les mov cmp sbbl jecxz shrl pop xchg cmpsb dec xlat shrb mov movsl fldt jno cmp sbb jl pop movsl lahf push xchg jo push push aad ret (bad) jns (bad) or mov js jno pop (bad) xor sahf sti popa outsb xor aas (bad) jne jbe jae cltd and ror in out jecxz,pn pop andl scas outsb pop cli clc ja addr16 imulb mov or push sti jb jnp xchg or mov cmp xlat sti iret push jbe sbb push aam outsl lea mov out stc dec imul mov add int out mov sub jns mov mov xchg gs and stc (bad) inc insl fmuls mov dec mov jns dec sbb dec popf imul adc xor cs sbb push lahf call or int3 imul repz sbb pushf pusha test pop insb aam push inc pop sub xor (bad) pop cmp cmp loop je or xchg int3 mov xchg dec push xor lahf movsb and fs cs shlb scas jp push in cmp imul adc test (bad) dec xchg add ret xor mov xchg xchg fsubr pop stos xchg push mov adc fadds or repz mov sub fbstp dec push stos adc iret fdivrs push jb inc mov add xchg mov fdivrs jge pop jge in ret (bad) in push es out cltd xchg and sti xor sbb lods (bad) (bad) xchg push mov fdivr fist arpl scas gs mov movb fildl push add (bad) data16 das jmp xchg push push notb xchg cwtl clc cmp inc xor push in ret ss ja cmp dec mov mov dec or and and push pop push cs add push push sahf inc ret daa (bad) std loop add xor imul in inc mov cmp scas je cmc jb cmp (bad) cmc fs sub js sbb pop sbb pop imul mov or cwtl (bad) notl pop lods or sbb fist gs out out rclb mov stc mov aas sub fcoml cmpl in sub nopl xor push and pop sub in cwtl (bad) pop sti fldcw pop int3 cmpsb jno jmp mov cmpsl mov inc pop std dec out push pusha and sarb dec aad into xchg pushw cli mov and mov mov pop dec xchg mov nop sahf imul pop or add test or xlat mov jbe push xor mov daa inc fmull inc fsubl dec cli jge jbe rcrb (bad) push cmp sub scas dec mov jno cmpsl nop std icebp (bad) fisttpl cmpsb mov pop js leave and xor or and mov stc push dec fstp scas scas mov pop push cld bound imul mov test push (bad) mov add add and int3 orl rcrl xor and mov pop (bad) popl push (bad) bound mov fldenv fs or pop daa clc or mov test popa pushf push push mov ret inc icebp push inc rclb cwtl nop push add sbb lcall std xorl inc ja inc and gs cmp pop mov xlat (bad) mov mov ret nop or mov jmp xchg or ss pop stos les lahf cmp sbb sahf mov (bad) xchg push cmpsb and xchg mov test and icebp enter sarl lods popf fwait lahf dec pushf mov add fldt xchg aam jmp loopne aas icebp and push xchg test rolb dec xor (bad) lcall pushl or xchg stos nop inc ja lret or in pop idivb cwtl xor add aam inc jl ja shlb cmp mov push movsl mov and sub cmc orl bound inc push rorb into add adc dec mov iret arpl js jno xor push mov xchg out bts sahf sbb xor xor pop in jo (bad) and push (bad) pushf pop xor (bad) loopne dec mov xlat out or pushf les pusha cmc jnp cli or lods lahf add mov pusha cmp movsl aam pop mov lahf push inc cltd test xchg popf je (bad) aad int3 aam nop pusha pop jae dec dec pop jge (bad) hlt lds xor sar fdiv mov jge add adc jmp addr16 mov mov xor int3 pop imul sub sub mov ds dec and push enter adc jae pusha cmp fadds into jae inc ja (bad) push sub xchg push push mov lret (bad) mov stc dec mov stos aaa repnz jne daa das aam sub mov xchg lcall test pop push int3 pop adcl mov es xorl cmp insl pop sbb mov aaa xchg movsl mov and cmpsl xlat (bad) pop out pop mov inc fwait jno mov mov aad lods arpl mov sbb xchg inc out iret and bnd cmp mov mov sti insl inc push (bad) test js and (bad) ljmp shr nop inc in push mov test (bad) adc repnz xchg mov fdivs jbe,pt cld out or add xchg sub jp (bad) or cld adc lret sbb out or aas dec insb mov adc sbb jo and pslld mov popf cmp and push cmp jnp cmp mov inc ds scas aaa xchg ss push test sub cmpsl (bad) pusha mov jle lds ret cli cmp rcrl aas sbb mov push movsb std xchg mov cs in inc fsubr xchg into jg arpl pop jle rcrb imul out sbb inc iret nop mov mov pusha in popf dec jne in dec add out (bad) int3 xor pop jl sahf mov out add stc and cli mov cmpsb and inc push into cmp xchg mov mov (bad) fs xchg arpl orb push dec js test arpl pop imul jl pushf cld push dec (bad) iret jns jae icebp repz decl push je xor xorl sbb pushf call pop mov rcll adc adc movsb push xor jae int3 sbb out aaa sbbl movsb lcall inc jae (bad) push in movsb fcoms lods sub (bad) in adc (bad) jne fbld pop aam aad cwtl jecxz jb (bad) shrb push and mov addl jp or adc (bad) std xor jne outsl jae dec dec inc mov cmp cmp pop sbb mov mov dec mov sub cmp mov push inc push jae cmp flds lds icebp xchg add and aam cmp imul rcl lods xchg jl push mov sbb pop jmp dec (bad) cmpl cld fisubrl sbb lds cs sub jnp inc icebp adc pop repnz mov xchg insl das push ds clc repnz dec insl xlat mov mov stc sub fisttpl (bad) out sbb sub add push mov adc jmp pop sub lods push push outsl fisttpll sahf xor push test rol (bad) rcrl mov dec sub rclb jl and sti add cmp subl pusha mov loop rclb idivl push cmp fisubrl clc add add leave push mov adc lods add in sub adc dec cld cmp dec ds cld outsl mov mov (bad) push stc push (bad) aad fisubl mov rcrb aas loope xor fimul idivl mov std outsb sbb imul insl es in insb and addl add or adc pop aas sub mov adc pop (bad) pop add rolb jecxz (bad) and mov subb push push xor adc stos mov adc xchg popf jno jmp xor shr fldl2t inc push adc repz pop cmc sbb scas arpl adc pop call xor scas and in push add mov xchg ret movsb mov mov mov lcall pop ljmp orl sub jbe push mov adc fimull adc or lea das inc dec in push pop repnz mov icebp mov (bad) mov and icebp fcmovne adc lret mov pop stos mov or cmp or addr16 mov push sti and enter lcall mov push jns cmp mov adc push lret (bad) mov (bad) daa or xchg xor je test sbb xchg (bad) pop pop sub push xchg inc imul push mov jo mov cmp push nop das jns jp arpl or push xchg sahf or lcall (bad) jl jo pop sub push or xor push std dec xchg test xchg hlt xor test jp cmp lods test cmp sbb cli push fldz mov or pusha lret add cli (bad) cmc test out stos jbe aad lock imul sahf aas and scas clc push mov rol pop test fcompl push in cmp push xlat dec cmpsb and jg dec jb mov add jle add out les cmp cwtl out repnz sarb movl aas mov cmpl xchg inc jl icebp sbb int3 fsubs jmp cmp push mov fistpll push xor xchg aaa into out dec xchg xchg fldt aaa jne xor (bad) test jg push cmp pop lea push test loope sti repz mov pop inc stos mov xor nop lcall mov out or push xor cmp jno pop sbb mov push sbb in sub sbb gs xchg outsb jg adc int3 add stos adc sub lahf cmp popf push or lahf aad inc pop jb sbb sub sar adc pop clc test in sbb push in sbb into cs or or mov cmpsl stos dec or mov jns into mov std push or pusha xchg pop mov cmpsb xchg cmp xchg jns fs out xchg push xchg sahf jne pop movsb or mov icebp xchg jb lds stos pop lret pop outsl insl sub out icebp cli scas jnp jl mov add test xchg jmp movsb (bad) out cmp pop push ret daa adc pop mov daa or pusha sbb imull dec test loopne sti loopne (bad) mov push dec mov pop movsb outsl mov insb add push and push push push int imul cmpsl mov mov mov lods add pop lahf mov aam cli or cmp add xchg pop ror push movnti push loope push es push xchg sub jmp add add pop jns inc inc adc mov jno dec js in add add add (bad) leave pop aaa insb inc add icebp imul aad loop loop mov jnp inc out add rorl aas (bad) out rclb add or aad (bad) mov cmp fadds and lret jo (bad) mov movsb in pop pop pop faddl jl test pop cmp insl negl cli aad stos out icebp mov adc hlt addr16 (bad) cmp lock pop repnz lcall fwait ret jo dec mov inc xlat push and lds out insl lock enter sbb mov test out mov scas dec jge lods lods aas mov (bad) arpl jecxz into fs pop clc loop inc or xchg mov inc xor icebp or jmp pop xchg roll in xor sbb or fcompl sub xchg mov aaa xchg lods dec ljmp xor dec test sbb mov push dec imul jp and movsb push push inc loopne pop (bad) sarb mov imul sti insl ljmp je inc adc fcomps sub dec cmp lret es xchg aaa sub icebp mov cmp testb int3 jmp aad adc fdivrp popa (bad) mov push nop popa cmp out or add cs ja mov (bad) cli adc addl negl mov in (bad) cltd jle ljmp ret (bad) repz cmp xchg sbb xchg imul sub cmc int inc or das inc out and popl clc jns test dec dec xchg add test fdivr (bad) mov lods test push sub adc jo arpl je stos pusha mov cmp cs mov cvtps2pi mov (bad) mov mov pop gs jns jne pushf push lea sub or out push shrb or inc in cmpsl icebp push adc inc cli lcall push imul sbb push ja ja xchg add mov and cs jg mov pop mov stc movl ljmp add mov fsubs int sbb sub sti sti mov dec and idivl leave xchg (bad) jne adc jno jle es or xor cmpsb sbb pop dec es sti and push mov jp or cwtl jecxz lock jbe sbb insb push nop les arpl stos pop test lret cmp movsl pop push enter icebp fmuls push mov sbb mov lods add pop jmp push xor addr16 pop ffreep ja test fstl aad mov (bad) aas test test pop xchg sub mov out rol inc push insb xchg jp jl (bad) iret lret push (bad) fmull adc rorl test pop push (bad) adc lahf mov loop fwait push nop dec shrb subl aaa js stos pop es cmp pop ud1 adc fsub rorl push cmp fs jne mov mov imul stc sbb sub cmp inc movsb xor (bad) rorb leave call cmp jecxz out icebp jmp aaa push arpl lods cmc lret call ds outsb insl or cmp clc ret mov aad imul sub cmpsl cltd push mov mov nop cmp or imul ret sbb enter push mov in adc int3 and insb xor cmpsb (bad) testl cmp sub adc sbb gs jne movl (bad) mov adc gs mov sub dec jne xchg push scas cs gs mov inc push lcall mov out add adc pop push icebp outsb mov push and cmp mov das loopne inc add loope dec lcall insl repz outsl in dec shlb xchg popa je add in aam cltd lea cmp test and lock sub xchg out cs outsb push (bad) lock sahf imul push xor cmp subl cmp (bad) dec out cmp xor (bad) and loope incl fstpl mov bound adc inc inc mov enter push sub mov xor xchg sbb movsl (bad) leave mov adc cmp (bad) adc adc stos cmp xchg jg insl dec lods sub sub xor cli les (bad) and pushf hlt mov sbb pop jnp inc aas out xorl pop (bad) lods in fistl jmp jecxz (bad) dec xchg mov mov xchg push imul adc xor jmp hlt fsubrs ja enter je adc stos jns daa mov or das push pop cmp test mov jae mov je inc pop outsl cwtl (bad) sub sub mov dec dec or pop mov subl jg hlt mov loopne stos popa hlt xchg repz imul and aad push xchg adc jo xor pop adc pusha inc adc dec lret inc xlat scas nop xchg pop fwait out push pop jbe cmp aaa adc jl int3 dec cld lret insb sub leave and mov cmp lea imul scas pop insb shrd jae adc das cld pushf aas outsb addr16 loope je xchg test test dec or rorl sub popl scas xor lret dec mov aas sbb fwait push pop rclb rcr jmp cmpsl and add mov or pushf lahf push xorb or push cli je mov imul add mov xor mov cltd test pop push jmp xchg xchg es inc jp rolb inc in jne les add faddl aaa ds js (bad) adc xchg xor addr16 cmpsb dec xor cltd mov std pushf adc xchg idivb ret emms jo imul (bad) int3 in mov out add fnstsw vucomiss mov lock mov dec jb or lods xor mov arpl fwait insb iret adc xchg lods movsl repnz xchg addr16 cmp ret aaa push lods fmull movsl insl add and shufps dec lret jmp xchg xchg inc pop out mov ret cmp (bad) ja xor cmc sub mov xor or mov mov loopne or es loop and int3 push mov xchg mov xchg mov mov and ret in mov inc mov pop ficoml scas int mov and iretw mov daa cmp int ret repz adc and cmp sbb test dec or jns jne imull insl loope inc repnz mov inc ljmp sub jp stos adc lods add movsb cs pop dec cmp les sti imul sti orl dec push push mov or or push stos enter aam add leave pop fmuls sub aaa add imul int3 and (bad) xchg sub daa jbe jne (bad) push fist add fcompl push push (bad) xchg lock out test cmp clc jne and aam rcrl popf test xchg xchg xchg call nop push lret xor cmpsb pop (bad) xchg jmp mov sub arpl mov dec cmp gs in (bad) aad xchg shlb xchg ret cmp push mov xchg xor pushf movsl cmp mov xor xor imul lret push xor insl inc and mov push xchg fst pop sub push dec mov jl inc jg jge jb lret sub adc (bad) dec daa inc and pushf (bad) sbb push int3 pop je jle or repz mov xor cmp fwait in repnz mov sub fs jno call jge imul pushl popf movsb (bad) dec inc gs dec dec mov dec ret mov jl sub cmp jae sbb mov (bad) pop cmp adc std push cmpsb les sbbl ljmp imul fisubl inc adc inc imul xchg loope mov inc les cmpsl fidivl cmp repz iret xor inc test sub lcall or stos repz (bad) mov pop mov and or repz push lods xor xchg repz jmp js sub js sub mov ret (bad) loopne xchg fidiv in adc aad jno (bad) (bad) jns mov lcall add mov and mov dec repz jns mov nop mov fisub loope in enter (bad) pop pop lret and in pop out mov lods call das jg daa adc test add pop mov adc xor insb adc lds bound jp or mov ret cmpsb movsl notb cltd jmp add pushf inc cwtl (bad) imul xchg push orb cmp cmp or in push xchg fwait outsb mov and pop data16 in dec jae xchg test addr16 cld sbb mov mov imul mov or shll scas add (bad) mov ss (bad) xor fldt loope repz jns jp jge xor test insl mov push inc lret lahf out xchg aas arpl (bad) xor repz fsubl lcall pop dec test mov enter push outsb pop xchg adc mov repnz lods jns sub or aam dec mov dec sub push in ds mov cmp scas xlat inc xchg and jl int3 aam xchg mull imul cmpsl xor cwtl (bad) out iret in or dec mov pop int3 adc fdivrp sub arpl jge add sub cld pop xchg dec (bad) mov lret in sahf or mov (bad) pop or mov pop js nop pop popf mov add sub mov sbb xor (bad) xor push js fs int3 mov jl xchg ljmp mov out and ret mov lea jne pop adc xor mov stc dec cmp bt arpl adc ds test mov call rorl inc out push ffreep xor fwait push je pop insb lcall fisub sub int repnz stos add xor cmpsl or cmp ja imul xchg xchg xor (bad) mov mov mov jecxz nop in test enter std fcoms enter lds jg mov jecxz cmpsl sbb jb cld sbb scas cld xchg mov mov pusha arpl cmp mov test ret xchg (bad) cld cmp imul stos jne sbb shlb rclb scas xchg add mov in sbb out mov and xchg dec in lret sbb dec xchg test scas and xor or outsl mov jbe fimul lcall and lret mov sarl jg dec mov (bad) sbb lods test daa lret fsubp outsb pop xor mov and push rol mov cmpsb cmpsl ss xchg subb cmpsl adc jl imul inc cmpsl push add fcoms enter add insb cmp xor ss decb daa sahf xor repnz add lahf inc je dec dec xchg mov fisttpll hlt pop sub jae insb xor xchg add sbb mov push add jle sub cmpsl xchg dec rolb js push in or call or mov scas jp mov ljmp mov loope (bad) int adc fcomps inc sub inc scas jp or popf mov pushf push aam aas popa push add and aas xlat fidivl mov lret insl dec cmp out je clc fcompl mov dec mov mov fsub (bad) ljmp xchg (bad) xchg jae dec sti loopne (bad) push xor sub xlat div shll cmp pop mov or inc add fs (bad) notl mov or test dec xchg pop sar inc (bad) ja sahf dec or sbb lret pop nop (bad) (bad) jge sbb pop sbb jae data16 xchg mov ja repnz jl mov lahf mov mov in or je dec aas mov mov mov mov mov sbb out imul mov pop adc sti fwait lods jo inc mov xchg mov inc out adc push inc sub movsl mov lahf cmp xor push (bad) fiaddl out (bad) xor mov aaa pop pop nop lock push push adc xor and mov inc xlat (bad) sub fmuls in das pop icebp jns (bad) lret push jbe pop lods divl cld or in pop out gs cltd push in das std (bad) pop cmpsl or xchg push lret (bad) cld (bad) mov sub lret rol test push lods mov or sbb add hlt or pop pop (bad) negb jg fs pop repz repnz das mov push lcall in jns fimull push cmp in lds mov adc push call dec pop xor xchg pop mov jb mov popa (bad) clc mov jne jmp pushf and and ficom sbb ljmp push sbb adc out (bad) xchg mov fildl inc push mov cld sub sbb out ljmp mov or mov sbb inc or sbb pop xchg push xor lret dec push and shlb and mov mov out ret pop movsb fcoml and push jb popf pop bnd outsb xor scas (bad) sbb cmp mov (bad) inc mov (bad) fldcw ds lret push xor jg xor sub stc dec jmp aad mov jecxz outsl inc inc dec fdivrl pop inc or xlat mov repz sbb mov test mov lcall aaa cltd pop jle cli adc dec xor in fimull jnp mov adc test (bad) stc xchg arpl out test adc test mov sub mov nop dec pop pop fdivrl push dec aad dec pop xchg jmp fidivrl and jb jp jle mov dec std lods sub clc sub bound (bad) xchg mov xchg in mov push test addr16 push xor (bad) xchg repz sub mov shrb test mov mov pop loopne or mov xchg lock loopne aad icebp lods bound push inc rclb add ljmp addr16 cwtl sbb mov sti pop (bad) (bad) dec jp jg pop jge xor dec mov test cli or shll ds ret dec (bad) pop sbb xchg insl mov in arpl (bad) jecxz js push cld clc or or jns repz ds aam dec pop mov mov add int rcrl bound add mov xor rcl test cmp sbb sbb sub int or push movsl push std ljmp push jo inc fcom push pop repnz loop rcll fsubl mov (bad) (bad) mov ja jno inc sbb jb pop pop iret sub sbb sahf jne inc mov popa jmp lock (bad) lcall cmp fwait or (bad) iret push les mov fmulp fsubr insb push lods (bad) ds lret or shrl xchg aaa cli loope repnz mov mov inc pop lods pop iret imul push mov jmp inc cmp popa cwtl mov in iret and in pop jb mov push mov cmp stc lock dec inc adc cmp mov nop mov push sub add and and sub loopne jle rorb adc add jb jmp jge in cltd fidivr xchg int mov (bad) jae loop mov clc sbb jecxz notl dec cmp inc jle,pn aam (bad) (bad) loopne sbb (bad) iret and push jne push sub mov add jns jl cwtl xor pop xor cmpsl and cmc call sbb pop push jo enter xor jo pop jp daa mov rclb andb stc enter and push or jbe sub push pop lds and xchg repnz mov enter jg int3 cld add jo add repz daa (bad) cli cltd push (bad) xor xchg inc les sub dec imul mov jno inc clc roll mov les insb lea ret mov pop (bad) mov (bad) cli lods mov rclb cmp divl std dec mov clc xor je and in jecxz test jo mull pop addr16 push cmc int dec stos or popa aas pop sbb inc cmpsb in mov mov int3 shrb in push icebp mov pop push loop cltd into sahf pop das jmp mov cltd jae rclb push scas insl rcrl cmp popa mov test icebp and (bad) mov xchg rol aas and fbstp xor ret lret xchg dec mov dec or test inc add sub outsl jge ds (bad) push fpatan lods (bad) sbb (bad) out inc outsb test add and call jae popf movsb push push stc repz inc out cs (bad) sti dec sbb sahf pop lods jbe aas test mov pop add das hlt lret sbb mov lods fcmovne jl faddl sub xchg sub or cmp test stc (bad) fsts movsl rorl mov mov xor and cwtl sub orl mov mov arpl jo aam je loopne cmp pop gs pop xchg aaa and xchg mov inc jnp lahf mov shl jae sub jb jmp inc lret dec ljmp push xchg das nop int rcl in sub sbb imul pushf and jge aaa mov sbb pop mov mov repnz cmp test pop push sbb in cwtl xor push call pop cwtl (bad) nop lahf or push fcoms lods lahf (bad) jae ss aam icebp dec (bad) imul mov cli pusha das sbb divl movsb mov add (bad) sub mov rol cmp or mov stos dec out or ds std dec adc inc xchg lret inc or mov fimul movsl inc cmpsb sub mov add mov sarl in xor in mov inc jo lahf (bad) pop adc add pop dec xchg or lods pop cwtl call in xor mov aaa (bad) mov and inc iret movsl xor or test cmp sbb out std mov pop sbb inc dec shrb and xchg std jns pop or jne test rcll nop mov mov sub jno ret pop pop addl out xor js mov add loop repz fnop mov mov sub or dec push sub insl mov add cmp jb or jb cmp sbb or jecxz sub daa (bad) adc dec movsl sbb test dec divb lcall or push jecxz lods and push jae nop shrl xor ja insl repz dec in into fsubs xchg adc pop or xchg call xlat sbb jmp mov loop in and push int3 cltd xchg mov cmpsl les mov or xor jnp out subb xchg xor ret and (bad) mov dec cmpsl cmpsl cli test loopne cmpsb cmp xor jbe mov out int3 mov daa xchg sbb mov outsb lds in adc aam adc and add push cmp add xor xor pop cltd in stos out jl sub dec ror loopne or inc push imul or psraw scas sahf ret jg (bad) push jnp cmp jns adc and (bad) mov or sub std dec popf mul (bad) mov iret movsb dec fimul xchg mov or (bad) mov sar mov adc sub enter stos jp jle js mov add pop (bad) push jnp das es ja sub mov stos fiadd subb lahf mov cld call adc mov or sub (bad) ds and pushf pop dec rclb push hlt cltd xchg dec sti pop jne in popf (bad) dec in add (bad) mov sbb in pop ljmp adc mov adc popw mov cmp jae fs or and stc arpl insl out data16 jae into and sub int lcall pop scas push cmpsl jb loope inc das daa jl pop arpl or pusha mov add inc ljmp (bad) jns mov mov cmp cltd loop xchg bound je and mov jb into lcall mov push callw ret xchg add scas lods fistpl cli into decb enter fsubr sbb dec mov lock mulb mull lahf mov and inc cmc sti sbb hlt and lods or cwtl cmp pop movsl mov cmc inc sbbb adc ret cltd pop adc stc cmp mov loopne push cmpsb (bad) xacquire add (bad) mov jae mov out adc test dec add mov cld (bad) sti mov out cmp adc (bad) addr16 adc pop mov fidivr call stos jge push pop push jnp mov fdiv inc sub mov pop adc xchg (bad) cmp mov jne inc popa or push outsb or xor pop add aas (bad) mov jns xchg push push ss jmp je add fdivrl adc push mov mov mov fldt jns xorl loop xchg rcrb rclb lods adc add imul or adc in sub sub mov sub mov aad xor dec daa jns adc mov cld js popf inc adc sbb into lods mov dec jmp or dec push int3 shll shll mov push xchg or pop mov or stc push xchg xchg (bad) int xor jo shrl cmc jecxz pop pop mov cmp cmp imul xchg lret lods sarb pop sub sub das lret push pop cmp rolb push movsb adc subl push lret mov push pushf rcrl dec aad adc dec (bad) iret jge mov adc aad fnstenv loope or in fisub and frstor jns and sub aad std ss imul mov xchg lret sub push (bad) out mov clc iret (bad) int (bad) gs adcl dec push test shrb mov mov xchg popa loop and daa data16 (bad) stc inc fidivr add mov adc pop fldenv out fmuls js sub mov xchg dec les insl outsw sub cld and fdivrl aas (bad) push fildl int3 cwtl movsb add pop aas insb insb bound insb (bad) mov or mov ds sbb add push das or mov sbb mov push xor inc mov sub push jnp lea dec jns and inc push je ljmp arpl jmp and pop fdiv loopne jns add cmc ret inc int sbb lock lret pop dec pop sahf mov push push and movsb inc cmp adc stc (bad) cltd push adc movsb jge cli push loopne sub lcall cmp push arpl adc int pop iret int pop arpl scas and and (bad) sub mov nop xchg jne fwait cltd hlt inc loope sub popa mov or and ret mov xchg clc addr16 ds sbb jae sbb inc subl outsb dec sub insb and les jne add or xchg xchg mov loope mov xor mov jl clc les lds xchg (bad) push fdivrl push or lahf mov leave fisttp in xlat mov leave pushf or fcom ja pop adc loope fcoml inc ja cli sahf dec lret pusha les xor fistl mov sbb xchg push js rcll add (bad) stos icebp xor inc mov enter orl imul cmp push dec sub int out movsl insb cmp lods fwait pop dec add fiaddl or xor (bad) rcrb xor fsubrs inc rolb mov (bad) lcall mov into add repnz loop add enter or adc mov fldcw jp in add out xor add fmull das nop call mov insb repz mov mov sti inc sub xchg mov pop xchg xlat xchg daa sub cli fwait add mov dec fs mov imull or cmp inc cmp mov jmp adc lcall push fdivrl jns insb xchg or (bad) int3 or mov inc mov cltd or mov dec sbb jnp jbe adc (bad) subb int aam mov xorb jmp pushf xchg mov aam leave fdivrs sub mov pop fisubrl rclb decl push fcomi mov cvtps2pi hlt xchg insl jl and gs mov push cmp adc hlt mov mull push sub push test mov cmp or gs (bad) dec rorb pop mov or sub and mov je imul push mov xchg push dec shrb pop das push dec sbbl and clc xchg and add mov push push add inc jmp mov cltd dec dec ret fnstenv dec imul hlt push movsl mov pusha or pop inc jne mov fnstsw gs ss inc call inc sbb add or out into fiaddl push ljmp or mov push imul (bad) outsb sbb lds iret add xor push sahf lock dec mov mov and cvtpi2ps nop insb orl fldcw mov pushf push add idiv and js dec push cltd push mov icebp clc xlat or mov in jp cwtl cmpsl mov xor push jnp xlat cmpsb decb mov sbb scas xlat mov mov mov insb stos incl int3 xor (bad) rclb inc iret pop pusha xor inc loope mov jp out loop movsl call dec int into jp imul or in adc sbb mov xchg adc out repnz cld push loop inc out enter pop cltd insl sbb in out aam cli nop mov dec add sub cmp push xchg (bad) loop fdivrs ss negl jmp and ret (bad) pop cli xchg mov nop push sbb xchg pop out je repnz fistpl lcall pop mov sahf stc cmc mov scas mov sarl sbb (bad) ffreep decb and ss jge add mov mov pop jne xchg mov dec dec cmp jmp (bad) mov ja and mov fldcw test fidivrl cmp ret mov leave fcoml in inc jg imul cld push sti xor ficoml int3 lock adc jle into mov stc cmp ret int sub (bad) clc cli mov xchg nop cwtl pop or gs lods add jmp scas cs jl cmp jg (bad) push clc pop cmp add fs mov cmp (bad) cmp ljmp out cld pop dec out jmp sub repnz or pop movsl cmp mov xor mov int push loope aad xor adc adc clc adc loope mov cs addr16 pop jb mov push sbb and cs jo cmp mov (bad) das or data16 aad xchg adc outsb lods popf pusha push xor mov and (bad) std dec jmp (bad) repnz (bad) stos cmp inc push sbb and push test pop fisubrl ja,pn lock xor pop gs out jg push mov (bad) imul pop mov mov xor rcrl pop sub sbb loopne xchg jbe jnp divb scas xchg pop xchg ja,pn mov xor in jne test cmp mov jns stc mov mov movsl outsl xor add xchg ss pop movsl bound dec ja mov or test clc jp out in dec outsl pusha lret and dec leave sahf push lahf xchg cwtl cmp test mov sbb add mov adc push shl adc and push orl mov xor imul mov inc sbb mov inc inc out or mov mov call inc test jle lods into inc jecxz xlat stos dec mov imul mov mov std sub xchg inc push cltd rclb pop inc je dec push add pop outsl in aam mov add adc cmpsb push pushf repz aad or sub mov loope sub inc out cmp push or cmp inc pusha jb mov (bad) jle push add fbstp popa sub icebp or cmp divb and notb (bad) dec mov (bad) xlat outsb cltd nop shl ret or ds mov jb mov jo out sub xor mov dec jae or repnz dec dec dec pop or fcmovnbe ja add cs push xchg or mov xor mov loop aam and negl xor cmp xlat sub adc sbb in in ja push sahf fs sub jle jp je pop push adc mov dec in jbe jno jmp cli in sbb aam iret dec adc gs cmp mov sub mov push sbb fidiv lret mov outsb inc lods cmp stc decb cmp insb int3 and xlat mov pop or mov jo mov movsl pop xchg or mov cmp xor loope icebp cmp call dec or mov sbb sbb lds jo xor rorl je adc or pop mov jnp insl push sub test xchg outsb cmp loope cmp cltd (bad) iret js jns inc dec mov mov sub data16 mov movsl (bad) and push pop cld mov jp mov loopnew adc sbb pop pop sbb pop xlat mov jecxz icebp lret rol or scas int xchg icebp xchg xchg je dec in mov insb push push lret dec cltd nop test ja cmp add es outsl enter pop pop and pop jb ja cmp mov dec pop popf in popa inc icebp mov ret lock clc cmp hlt fdiv ja dec push rcl add cmp lods data16 test adc adc sbb lock fwait add push push dec pop xor and jns lock pop xchg dec push pusha and mov (bad) mov arpl dec xor lods stos inc mov addr16 call adc imul mov mov mov pop mov adc and jge arpl mov sub mov mov iret test in xchg mov and cmp andps jno sbb pop dec cmpsb dec adc inc or fidivl jnp xor mov xchg movsl cld xor inc daa pusha test loopne std mov (bad) idiv mov call mov adc scas pop mov mov push cmpsl and cs mov jno inc dec cmpsl dec test add vsubsd xchg and jnp mov into test (bad) jecxz dec pop mov out and xchg sub pop fs push fcoml and mov rorl es or xchg inc ds idivl cli ds pop aad jle lcall insb repnz call addr16 pop pop pop in dec jae push mov int xor hlt insl cmp inc jle (bad) and xchg fwait xchg stc ret scas and js scas das jb popa addr16 jnp ds lret movsl jae sbb arpl mov pop cmp push xchg sarb in (bad) lahf xchg adc (bad) stc outsw ds or dec xor jge nop mov leave mov mov shlb cltd sbb jl dec pusha ret pushf les xchg stos xorb (bad) mov pusha leave or insl (bad) int test mov popa cmp push ljmp andb jbe stos sahf jp fs xchg mov ret hlt lea pop je cmp xor movsl and out popf (bad) (bad) cld aam push push addr16 ret int stos arpl mov daa pop and cwtl inc add fcmovnbe pop sub xchg xchg cmpl dec jmp pop fldl in and (bad) xorl lds ret lock mov sarb aam mov cmp mov dec hlt cwtl rclb stos cwtl adc dec fcompl (bad) scas adc push mov push adc xchg mov out (bad) mov sub pushf call js push (bad) out (bad) fsubrp sbb popa aad push std test clc cli es cltd sub fwait rcrb jae xchg dec wrmsr (bad) pop inc js lock push push cmc incb adc je xchg mov je mov (bad) fcomp mov orl outsl lcall ljmp cwtl mov mov mov cmp xchg lock fild and addr16 imul cmc or incb xor mov xchg and jp hlt lods mov es ljmp xchg sub jl (bad) mov in mov lock dec pop pop daa pop pop xchg pop test ss decb (bad) notl mov gs or inc lock nop mov adc and std mov rcrl scas sbb push cwtl mov and or test inc adc mov mov out add clc out add add mov sbb mov mov mov xchg cwtl mov fimull mov (bad) repz cmpsb mov es ret faddl jno push adc jp adc inc fnstsw push sbb ds stos arpl and idiv iret dec sub cmc adc rclb cmp in jmp fnstsw adc dec mov mov lahf pop push lret or aas popf (bad) and lea lea fildll mov jb push jmp lahf ret xchg pusha fisttpll pop insl (bad) test fs idivl fwait xorl je inc lea pop and daa push push mov loop sub jl fs jg push imul add mov cmp inc sub inc fidivl pusha push fwait aad jb pop in (bad) pop pop in popf (bad) out mul int lahf ja mov jl mov mov imul lret int xchg pop jne jno sbb inc (bad) ret test mov outsb bound lcall cmpsb insb repnz test mov jne mov xor imul mov (bad) xor sub inc int3 pop (bad) enter pop pop scas imul mov inc mov push jle out aas push mov into das push adc pop xchg movsb in pop int3 mov inc stos fcmovnbe sub (bad) mov gs fsubs dec jo mov mov pmaddwd jecxz (bad) jb xor mov call jge cli movsb test ret nop push loopne sbb movsb pop add adc ljmp rcll xor push icebp loop dec mov adc rclb jle pop pop mov sub or push into and icebp push sar out cld and sub cmp add mov inc lahf enter xchg adc lea pop jnp mov popl adc cmp pop es xchg xor xchg test push cmpsl enter mov (bad) sub pusha clc jecxz (bad) clc add add fidivr xor jge add leave cld push orl push lods movl int3 inc shlb dec dec inc inc aaa scas sbb dec jnp lods fnop fistpl test inc xor jo push sbb jnp cmp in cmp cmc cwtl sbb push or sbb inc cmp lret cmpsb in into mov sub xor mov jp subl mov add push and mov test nop inc sub cwtl test outsl test jmp sti icebp push jle ret gs cmp in test push add imulb out movsb push adc in jl leave test mov (bad) lock and addr16 lahf adcl jo mov lods jns out pop rcrl test notl xor rcl dec sub ds syscall cmp and popf mov call sahf shrl out hlt mov jnp les adc jle xor aas mulb pop xor aam lods aam adc neg (bad) aad fdivrs cmp je data16 adc cld jnp and daa push enter cli adc push mov paddd push jmp adc dec dec pop sarb pop cwtl cmc jecxz cmc push stc ret subl cli jge jb and in adc xchg pop ss sub inc cltd aad lds sub jge (bad) xor push aas pop jge dec ds data16 mov outsb push gs sub adc (bad) or sub mov cltd cli push and nop repz aaa pushf fiaddl and (bad) xor mov ret mov cmpsl sarl les imul push add inc in test loope popa mov inc lods adc (bad) xlat test mov adc outsl enter sub push aas popa inc inc mov loop dec mov sbb jl cli dec lds xor stos and arpl stos int sub nop inc adc (bad) mov sub xchg adc pusha mov idivb insl int mov adc xor cs pusha fmuls test cmp or enter pop lahf cmpsb aaa mov push std (bad) mov ret rcll int cmp push testl imul les mov cmp xlat adc ja lcall sub in add mov cmp pop data16 jb out mov sbbb xor sub lret in xchg or aaa mov xchg fs fdivs test sar mov cmp arpl std in sahf in xchg insb inc mov lods stc sahf add dec and sbb inc mov test ds notl jnp dec ret pusha bound sbb repz add into frstor and in pop inc xor (bad) lock xor adc xor inc out outsl shl iret lahf xchg stos mov mov sbb (bad) mov (bad) mov cmp add fstpl aas or add pop les push and into push xor sbb pop mov les adc cmp icebp (bad) movl call hlt jb into jmp ret rcll je sub sub pop daa pop xchg jbe inc push pushf and push inc ret cmp jns inc rcrl fisubl push mov push mov xor mov pop mov jae jne pop sbb push pop cmp pusha out lods popf clc enter adc cmp shrb les push daa fdiv cmpsb mov sub add sti xor sub jp add push push adc sub scas arpl loopne imul imul pop pop test out aas or (bad) or pop ja xor add and pop int3 stos adc arpl jne out fs xchg or push ret arpl jge ds mov sub lds arpl out mov push or pop pop and fnstsw addb loop pop and addr16 xchg out pop jns cmp sub and insl add cmp mov roll es mov bound mov mov mov mov loop cmp scas inc loopne cmp sub sbb lcall add test imul fs out movsb es mov (bad) movsb test and notb jp jle sarb jns addr16 lock mov pop insb dec cltd mov xchg cmp jmp orl faddl push lea std int3 sahf outsb mov and in pop imul test sub push mov in sbb scas jne sbb cmp test fwait imul jae push pop out or mov out mov hlt ds pop mov idiv add (bad) fsubl pushf mov leave stc aad sbb xor inc cmp xor ljmp arpl int3 iret push pop shl (bad) pusha pushf mov fsubrs and ja in mov rcll fildll pop mov mov mov xchg repnz pusha jle mov fdiv cmp or je test fcompl into icebp ja pushl jne (bad) pop jo mov fdivs jbe cld icebp adcl mov push fnop pop in push pop popa (bad) aaa jl mov sub mov sti fisttp pusha mov add cwtl rcrl addr16 nop lea movsl into test mov std and xor stc add or ss xchg mov push (bad) stc jno jecxz jnp add or repnz push dec sarl dec mov jge dec (bad) or out jae mov scas rcll mov pop dec and iret lcall push pusha addr16 cmc idivl clc jg mov push rcll add add test das jl cmp scas jns mov jae in (bad) mov pushf popa xor push dec sub mov mov lods (bad) xor stos shrl or mov jg (bad) outsb lahf adc inc insl and add out fs outsb into int cs enter stos in jl ret or das push or push sbb sahf pop mov mov inc inc and ret pop inc mov out aaa ss scas inc mov pop gs adc xor push jecxz push jg push fbstp jle iret add mov inc xchg movsb xor push js dec dec gs adc aas std cmpsl test jbe or mov mov push addr16 pop imul mov data16 les out jo mov xchg mov addb pop call loope daa pushf pop mov add push hlt loopne jae push push mov das push rcll push mov sbb inc and mov adc pushf imul (bad) lods jbe clc jecxz push out mov fdivs mov adc mov outsb mov pop xchg ds (bad) or lods int3 ds sbb mov sbb mov add or mov xorl scas mov es pop mov daa jecxz adc lret aam and outsl sub shrl push cmpsl pushf rorl loopne,pn out and into sub and das cmc lret cs jae lods and in lret push mov adc xor ret jnp sbb jl xor pop das fwait xchg push mov mov pop xor mov mov leave pusha int3 mov or movsb sub add jno rcrl repz cmp in jle mov pop sbb cmp mov add loope mov push ds xor test adc and fs stos or push dec outsb jnp mov pusha fistpll cmpb xor aas inc add pushf loop xlat outsb sbb jb adc or insl pop mov lds and pop cmpsb sub (bad) mov and (bad) mov enter into cmp xor push test pop out daa mov aam cmpl shr sub jp ja sbb repz in int3 push dec scas xlat (bad) lret mov add fwait add test (bad) mov sti mov es xlat aad into dec inc jle pusha test jo leave imul push dec dec xchg lods cmp jns push cmpl mov stos dec adc push movsb sahf lret and lcall xorl iret stos call sub outsb xchg jecxz sldt aad mov jae xchg jo shr xchg movsl adc das add inc cwtl jecxz mov dec mov inc mov mov mov mov mov mov imul mov jns cmp xchg jge mov jmp jno sbb lock xchg ret decl adcl scas jb jg orl cmp dec ja hlt jle pop push ljmp js bnd inc lret ret hlt and jns add call xchg (bad) imul cs cmp (bad) mov lea ja mov lods mov adc xchg stos cltd test pusha movsb pop and scas inc data16 int cwtl ficomp xlat jge sub hlt daa add add les lock pop lock xchg and call adc jle ja mov pop or nop mov xchg xchg jg push into jp or jmp inc add xchg sub hlt cmp push jecxz in mov loopne aam mov call subl rcrb adc enter ljmp gs stos (bad) or sbb aad sbb xor mov mov or and add iret popa andb mov je mov sub adc pop dec inc pop adc mov or insl das inc mov sbb and out pop in scas sbb loop int adc xchg or popa sbb aaa xor cwtl mov jl insl cmp push lds push in setae mov lret dec movsl pushf (bad) jbe lahf (bad) xor fild mov mov aam xchg mov je cmp or xchg cli or pop mov iret push adc cmp movsl icebp ja push in add (bad) jnp ds cld (bad) movsb arpl push dec xchg pop inc jge xor test pop xor sub jle jns add cmpb (bad) repnz pusha ror xchg movntps add cwtl fldcw mov in mov lar insl jl jbe xchg js lods jbe lds ds imul (bad) std dec jg dec mov or sbb sbb jnp outsb add aas push push lret test sub aas (bad) test stos iret movsl mov or fnstcw aad icebp in xchg js mov and pop or and pop add mov or xchg adc insb mov inc fwait xor sbb push (bad) out push mov (bad) cs xchg sub (bad) xchg add cli lret popf repz jle (bad) mov and xchg jl mov jge rcrb jg pop stos mov pusha loope (bad) fdivr mov xor lcall fs mov cmp test jl jg mov lret iret xor clc incb and push sub inc jns gs add adc adc rolb les imul mov out dec xchg xchg movsb pop jmp pushf xchg int3 popf mov into dec mov pop popa lock je in ja inc cmp sbbl mov dec in outsl sub mov mov iret jmp mov popf fldcw ret jae jbe icebp out js xchg mov mov jnp xor (bad) sub xor (bad) lods cwtl dec fstps inc mov lahf lods inc jo icebp lea outsl jle and mov sbbl mov push insl xchg rolb test aam mov xor mov (bad) push mov xor out (bad) and cmp aas mov sub and fbstp cmp inc cmp std lret pusha add dec mov add adc mov cmpl xchg loopne xor xchg dec sub es xchg test or jmp adc popa iret dec enter mov ss imul aas mov (bad) test and xchg lods sub xchg or leave in push outsl adc xorl jle cmp negb mov mov js lods lods or cwtl mov mov inc cmp dec ret and addr16 add mov cli fidiv push ljmp fist xchg aad popa mov shlb cmp mov notl pop sti sbb jmp je mov mov imul in xor jge pop icebp test imul sti popa bound push adc cmpl test inc add insb lcall adc into xchg xlat jle int mov bound in xchg jb xchg add addl xor push mov dec inc cltd ss andb cs and sub or push scas xchg push inc mov test ror popa ret cwtl stos js jp add push lret test pop leave and mov mov dec les mov out iret (bad) jbe popf cld int or sub push sbb inc in and std jae xchg mov (bad) xor icebp jecxz aam dec fnop push jae imul mov sar out add push rorb lcall adc daa mov (bad) sbb sbb xchg jb movb (bad) cmpsl xchg scas in dec imul (bad) jbe popa daa push pop mov sbb sub cmp (bad) push push add cmpl xchg mov fistpl inc inc les sbb loope push lds repz lret cmp and mov mov outsb jae adc gs push adc (bad) int in add add cmp pop cmp popa jae mov (bad) clc mov push bound xlat outsl jnp pop test inc inc insl mov xor inc ds lods in pop cmc ljmp xchg push or pop in pop js repnz sbb mov gs notb aad int3 les inc lock test mov imul jo ret gs jecxz pop lret scas or sti xchg inc pushf pop sbb insl jo and inc je les inc mov repz pop divb mov cmpsb adc gs fcompl cmp add into jae dec mov loop jmp in in idivb ja pusha test andb lods (bad) test dec jne mov add lahf sbb push jnp sub movsb or or out enter or and loope orb xlat in fs stos sub repnz jno dec (bad) scas popa in outsb ljmp pop es mov pop mov cmp dec or ljmp push xchg std fcoms imul es push lret popf nop (bad) mov (bad) hlt jns in pop je fs call adc add mov push adc mov inc add mov scas enter jle pop pop or in out mov in dec (bad) and icebp (bad) dec testb add lcall ja,pn dec xor inc loop mov or mov dec jae stc jne inc xchg jbe sub aam jmp out or (bad) push test fidivr cmc lods outsl or mov xor aaa pop xchg cmp push mov fiaddl pop clc aad rolb out xor xchg inc push orl (bad) and popa adc pop ss jno (bad) aad outsl repz repz push dec int nopl hlt test lock loop mov out in and decb int3 ror mov stos repz sub or (bad) (bad) push std jno or jg jne xchg in adc dec xchg cmp repnz dec xor inc sub pop fldl dec fisubr in rclb idivb jle mov jp punpckhbw sbb pushf add cmp dec negb std daa js and aaa cmp sbb scas (bad) xor sti inc dec and lods mov rclb adc shrb mov fmulp dec mov mul (bad) jae clc mov negl cld jge aam dec and xor jbe sbb mov mov cmpsl inc aam sub rcrb nop repnz shll clc pop dec cmc push mov insl sbb push push js mov ljmp sub push push icebp ret add sub or shlb pop mov sbb mov jp stc xchg daa mov xlat sbb imul mov in insb dec (bad) sbb iret jl add push mov mov arpl pusha xlat xlat out jge add adc xor arpl cli inc notl das cli call aad ljmp jecxz pop daa ffree int3 push mov push cmp inc in repz add test (bad) ja xchg (bad) cmpsl sub mov lcall mov call add cs (bad) std mov leave cltd int (bad) xor icebp lahf (bad) into inc inc lcall fwait ds jge mov fbstp mov lods inc int3 jle mov out cltd popa insl dec inc por xor add fwait sahf xchg fsubl outsl cmp fist inc sbb cmc imul pop or shl mov fsubl and hlt (bad) mov xor xor jns pop insb fsubp push mov sahf inc notb dec or stc cmp scas popa mov xchg mov add mov mov dec in or (bad) xor fistpll cld out shl mov int (bad) push sbb ret enter pushf and jecxz (bad) mov jns ret les fiaddl imul jmp imul push daa fsubrs notb mov and sub lret mov push movl mov shlb jbe jmp or pop das data16 mov cmp frstor les mov fidivr mov pop in fsubl imul sti imul jne test (bad) adc sahf jge imul dec dec adc adc pushl insb xor add test decb or inc cmc dec test lods scas iret out (bad) cmpsb cmpsb clc push cmp repnz lcall jo pop imul mov jb dec and dec inc sub jbe xchg stos add or in mov mov popf sub iret jp cmp rolb lods mov std xchg mov (bad) xchg sbb movsl (bad) int ja add xor adc stos push sub push mov fldenv hlt and jae lds in sub add clc ja leave xchg xchg lret jle (bad) sbb pop pop adc xor jb push bound bound ret mov sub cwtl je pop mov ficomp push ds std jae rolb mov imul adc sub ja sub xor push outsb push dec sub xlat dec jo mov int3 jno jle orl insb dec adc out in fildll or jmp add or pop dec mov dec arpl ret xor fcom pop lds pop xor (bad) mov adcl sbb pop gs daa (bad) adc (bad) xor or ja mov push jae fxch add fisttp sub mov gs adc push aad cs jo test ds enter adc popa inc mov (bad) lcall out mov flds add jg pushf adc sti pop cli lock inc jae insb sbb in mov jg sub inc clc and mov xchg push push scas cmp cmp and xchg jns mov rorb or xor stos nop lcall jp dec outsl testl cmp add (bad) add cmpsl mov pop cmp cmc xchg sub inc adc sbb mov and or mov jno pushf inc xchg pop jnp push dec outsb sbb cwtl imul mov call in sbb ret dec je inc lcall xchg ror pusha mov insl loopne out lret cmpsl les inc push push cwtl jmp jns fild aad enter ret dec (bad) or das or sbb lock scas inc cmp ror push stos push sbb inc lea sub pop xor xchg jmp mov mov push jb test jl cs shrl pop xor shll mov mov xacquire xchg shll mov scas mov ret cld inc mov pop mov clc fmul pop leave (bad) push imul aas icebp arpl jb lea (bad) jg es sub loop push icebp gs adc outsb pop mov repz mov sub sti dec and and in mov cli fsubrs pusha (bad) sbb xchg and or in ja int sbb jge cmp jae add jge sbb and or ds jnp push mov mov mov shl lock lods adc jg sbb sti add fldenv mov mov in popf mov xor jnp mul gs fwait mov data16 jp leave adc add std je test xchg sbb mov scas or scas mov fcmovu std pop sub or fidivr leave xor dec ret aad jge and and mov jb sub imul int daa adc repz popf dec fisubr daa push out mov insb dec sbb outsb notl popa jle dec ret push or or repnz faddl jecxz dec out stos fwait xlat pop lret mov fcomi lahf sbb dec sbb inc cmc cmp xchg ret aam popf sbb push sbb pop aam int3 cltd fidiv jl lcall sbb push pop pusha sbb data16 and inc pop add mov cmpsb call sub outsl les sub test out sbb lret das adc (bad) jnp xchg (bad) test add lods adc cmpsb cmpsl cmp aaa inc mov pop pushf mov mov mov ja push pop sub (bad) sbb shrl dec inc push or (bad) cmpsl int or dec add sarl cli clc mov (bad) push gs dec and cmpb popa rolb shll add pop sahf dec xchg add fimul inc es push jmp (bad) imul popf arpl dec inc test push mov out andl lods jnp cwtl je mov sbb jns mov mov and and ljmp fisubrl movsl imull (bad) cli in subb push cs push sti pop cmc inc jae stc xchg cmc loop xchg mov inc xchg sbb sahf xchg popa inc sbb sub xor daa rcl (bad) sub in sub (bad) cwtl js mov adc push xchg out and gs lcall adc shr hlt dec bound out lea adc aaa or sub data16 stc cwtl and fisubrl sub clc lds push ds or mov leave mov mov add add mov sbb dec adc (bad) cmp mov leave dec iret jmp fidiv icebp push push scas fmull in (bad) xchg push xchg lods pop jb dec nop add sub sub pop (bad) enter xor decl xchg roll insl or mov xchg sub push std stc xor adc lods pop and add int3 imul lret pop add jp iret lahf pop mov loopne push fwait enter mov mov movsb inc mov sub mov pop jmp sti adc add fistl pop movsl cmp lret mov mov repnz cmp add pop test das ss fcomip xor dec xchg fstpl daa inc pop les mov cmp mov int stc lcall and adc inc inc xor fwait adc lods out fstps and sbb pusha mov in or or (bad) int3 out inc sbb lods or pop lret push cmp inc iret cmp sbb xor mov mov lock call scas shll inc jns mov mov aaa mov sahf leave jns testl cmc data16 aad data16 das mov jecxz call pop mov push sub pushf adc sbb xorb clc mov inc cmc lds mov iret into (bad) adc cmpsb xchg mov adc pop loopne ret push in stos xchg mov loopne mov mov inc das nop pop les imul jno pop pop sub lea mov mov or pop aad push test ss push and jns jle mov mov scas into mov icebp pop stos jl xchg push out and (bad) adc and jb lret mov dec inc sbb xchg add mov loop cmp and sub aad jno jae insb ret xchg (bad) mov stc sub xor pop lock enter lret in mov mov adc dec cmpsl clc mov xchg loop insl or (bad) in (bad) loop push icebp jmp into add movb sti lea in sub ljmp mov mov xchg xchg stos in sbb (bad) push repz scas subl push das pop sbb stc pcmpeqw xor sarb sbb sbb and push ftst inc jmp cmp pop mov or sub lods mov insl test iret add pop lds mov jge int ret mov or mov sub cmc jl dec jae mov xchg jg or mov adc mov cmpsl shld mov shrb sbb sub (bad) add (bad) rcll xor cmpb lret cwtl mov xor mov daa addr16 out xchg pop je pop dec mov xlat test mov idivb and jmp mov in js (bad) sahf xchg sbb (bad) pop aad xchg pop inc pop shrb ljmp add insb adc adc fcmovbe sub into sbb nop movsb push jge lret push aaa pop cmpsb in into (bad) mov in ret jns (bad) lret test jp mov cmpsl push test push movsb (bad) icebp dec mov mov cld es xchg mov cmpl jge cmp jmp es fwait pop xchg xchg dec and and stos sarl pop sbb loopne jg jns dec rep mov imul rcll imul jbe pop xor scas mov imul (bad) ja jecxz ret inc bound mov push or inc fldl push test mov (bad) ret jmp call add nop inc outsb cwtl jmp shlb fimull repnz outsl rcrl ja fmulp test (bad) std mov call xor imul inc gs cmpsl sbb cwtl leave mov xor pop sbb lods sbb ret sbbl push xor jnp mov pop sub add push lcall js or mov clc stos jbe es jle cmc sbb cmp or leave lds rorl scas adc xor xchg add pusha imul das iret insb cmp mul and and cmp xor movsl fisttp std push inc ror mov lock sbb mov rolb lds jnp add int3 icebp mov aaa out jb mov ljmp invd imul or or in mov test pop inc xchg pop and push fldt mov mov lahf test jno mov jnp sub lea cmp je sbb cmp lret mov mov (bad) in mov jb ja xor and outsb mov rcrl dec (bad) push add cwtl loopne jmp (bad) mov aad lea iret xor pop jns gs fsubrl repz xchg js mov xchg lcall cli sub (bad) mov dec and aaa push jmp popa leave mov sbbb mov dec inc mov aad push int3 push ret in fstp in xchg push ss aam leave sti sbb ljmp cltd fs push fs mov jb mov xor lcall sub xchg pop cmpsb adc add mov negb outsb xchg pusha push sub push or (bad) sbb aas push into push or and mov dec mov sti dec sub pop sbb sarb stos pop daa add cmpsb jae stc xchg inc out sarb aas testb incl xchg jb lcall dec xchg mov xchg xor in add bswap mov (bad) xor jnp mov pop inc rolb test repz call mov mov sub pop outsl adc mov iret fs in (bad) sub js xchg and jmp xchg stc sbb in xlat jecxz cmpsb adc jge cs test cmp into adc cmp int3 cmp push (bad) addr16 xor movsb out cs inc pop adc xor pusha sub adc pop fisttpl fstps xchg (bad) les or jp lret out outsb dec in ficomp fisubrl fimul out lret and push jle pop insb adc mov xchg iret movsl mov fwait mov cmc pusha lahf fcoms int and dec dec popa popf ljmp jmp enter add notb pop xor or test mov movsb inc jns scas aam mov add hlt into cmc das mov int3 push rorb ficom mov call and xchg ds pop pusha xor aam sbb mov lock adc jns sarb mov std cwtl adc popf mov dec jmp cmp add add je pop push push in push mov inc jge mov subb pop fstps push inc in lcall rolb jns cmp xchg das popa outsl lea add jmp xor ljmp dec adcl xchg arpl mov mov pop sbb stos mov into pop dec popf orl cmp inc xchg push test pop loopne mov ret fs outsb pop jge jecxz sbb ljmp sbb aad add faddl mov or mov ret add les jno xchg dec push jbe rcr push jae mov imulb fwait pop pop popf mov xor insb jne (bad) fsts add (bad) aaa sbb arpl add adc xchg sbb stos (bad) mov std cmp xchg inc ss mov subl push xchg jmp cmpsb pop dec cmp mov enter dec or cmp mov pop aad loopne ja xor not lock jle jbe iret hlt pop jge cmpsl xor jecxz add inc sbb xchg outsb lret ja pop jbe jle jne sbb dec insl fnstenv dec sbb adc add mov inc sub dec xchg xor in sbb fcomi movsl adc pop push insb lret fsubrs call les xor sub shr test push (bad) popf in int3 repnz fwait orl mov nop ja (bad) in add or and pop cmp imul cmp and sarb push sbb cld jecxz add jp xor (bad) xor inc push fs sti push xchg cmp es jnp and movsl xchg std cmpsl pop hlt pop jle mov add data16 push jbe cld sbb insl push lods ret movsl xor mov test inc outsb data16 ret rorl sbb add xchg or (bad) in sahf mov inc jbe add fcoms inc and xchg pop adc je scas bound in add push jno jp push fisttpl stos adc mov add push imul mov stos adc in xchg mov test aaa inc add stos cmc xchg mov and jb int3 jp xchg xor daa mov int3 inc ja lahf push push xchg mov (bad) jmp and xor mov int3 jg repnz (bad) outsb and (bad) mov ror add outsl jle sbb sbb sub mov clc mov sub adc sub test xor jne push arpl mov xchg (bad) push mov es xchg xchg or xchg nop test mov mov add scas add add inc mov scas iret inc mov popa mov jle fisubrl dec mov clc sahf push sub jmp jae push ds mov and adc xchg add sbb out js add out inc pop dec lret insb pop into add mov or lret inc cltd pop fiaddl sbb in loopne xlat (bad) sbb aad jae mov cmp sbb loope mov xor popf loopne cmp nop dec pop or outsl fs adc push xor inc add lcall js out or cli mov mov xchg mull mov mov mov adc push and push xor jle popf popf arpl sub mov adc gs lods push mov pop mov mov pop stos lds fistpl pop rol test lods sbb mov xchg push mov dec hlt sub add mov or cltd pop out idiv ficomp leave xchg or xchg inc xor lods mov inc leave shlb xor lcall or cmc dec xchg call cwtl fwait mov sbb lock jl jmp push cmc dec rcr cmp jl pop push fwait insb dec inc imul add xorb lret nop (bad) lcall cmc lods aas fwait sbb cltd (bad) mov cltd lcall aaa stos cmp xor test orps ret lahf jecxz lret fmuls adc pop fimull aaa mov xchg cld ret mov jge rclb sbb sbb mov aad and lock sti inc jmp mull sub mov add scas mov push fimull mov stos fdivrs mov jecxz mov imul jg sbb mov or lds stos aam loope stos nop mov mov gs xor in roll add test mull push jnp cld dec mov dec mov lods in ds mov and xchg pop ss test movb out shll int mov ret xchg xchg push sub or mov lcall hlt sub cmp and cld nop pop mov add sbb insl inc pop popa push mov and imul aad andl ja sbb dec arpl scas pop leave mov mov aad stc and mov andl es mov iret xor mov add ja iret or icebp xor je das (bad) icebp add dec dec in or ja pop insb adc xchg mov (bad) enter cwtl xchg jb xchg cmp jnp inc cmp (bad) ficoml jle fs scas daa (bad) dec mov divl mov aad jbe and xchg call nop mov in xchg sub movsl dec jno (bad) sbb fmuls pusha mov adc xlat clc cmc into and int3 js std lods push and add subl and push mov add je xor pop mov push in cmp and imull inc lret xor adc leave data16 mov lahf jo (bad) push int3 pop push xor outsl pop or xchg out sbb iret push fdivl mov mov mov iret in sub cmp xor (bad) sbb xchg dec sbb jecxz push and add pop test sbb jne cmpsl sub xchg leave xchg and sub xor fs ja in cmc mov mov push sub fisubl outsl mov inc rcrb popf dec mov inc shlb mov dec fwait push aad pop sub cli es into xchg xchg fwait pop mov jns addr16 adc xchg int3 pop adc or sbb lea (bad) repz pop cld dec cmc xchg or push add fstpt pop (bad) xor fadds movsl leave dec sahf jle cmpsl inc xchg das js outsl addr16 adc sbb xor mov xor mov add and inc pop xchg jge mov mov and xlat mov fisttp mov sbb cli fisubr stos repnz inc inc mov cmpsl sbb push push and xchg aam mov lods sbb adc scas jge mov in hlt jae adcl out je push or in adc dec cmpsl (bad) jecxz sarl jno or enter sbbb (bad) test mov insb (bad) int inc hlt inc movsb jg popa and movsb sarl pop xchg sub add push and imul outsl sbb popa lea and mov in mov in jle inc jmp xchg iret pop or push jmp mov xlat js repz rorl jno inc mov out cmp aaa das push leave cmp enter sub lret popf sahf mov xor sub add jo add xchg jbe add xor popf daa add mov or add or inc ds out xchg ds xor adc inc test adc insl inc sbb mov imul insl icebp xchg inc sub mov lds or xlat dec push xor mov (bad) iret (bad) push cmp dec xor sbb jl cmp sbb add inc xlat aas sbb sbb andl adc cmpsb dec jbe adc rol inc arpl notl lahf adc xlat loope,pn xor xor sub lock in push jp sub stc movsb in icebp lea pop dec cmc outsl mov inc movups cli lcall (bad) inc sub mov dec call push movsl jle adc dec inc out and (bad) aad test adc fisubl data16 fld mov or xchg sub es imul or daa in xchg scas and lret arpl adcl lahf push mov int xor ss mov leave xor icebp dec cwtl outsb les xchg xor cli cli into add outsb fsubrp lods loopne (bad) cmp add scas xchg push jne out add jb xchg lret cvtps2pd or arpl popf aad push inc movsb jns dec fsubs inc rclb xchg mov (bad) jo and adc lcall add out (bad) pushf stc push push cmp fstps mov in sbb ret push loopne decb popf mov hlt push mov mov inc lahf loopne xor inc lods aaa mov lods sub dec pop mov cmp cmp out adcl pusha (bad) imul ds repnz mov ret sahf insb cmp jecxz add mov sub gs mov mov xor hlt das scas pop sub mov jo roll jae jp cmpb cs lcall xchg not test lock js adc inc test push ret addl mov xor scas push cs inc jbe push loop push xchg and mov shl push sub add inc outsl pop out lahf repnz mov mov mov mov cmc and (bad) aas test in ljmp loopne daa stos lahf repnz adc sub sub imul xchg push cmpsb xchg pop mov fidivr mov aad pop (bad) std or sub mov mov or push or shll xchg faddl (bad) fnstcw addr16 adc outsb fldenv ret lret mov rolb (bad) xchg xchg fwait outsb add xchg cld mov bound xor inc insb mov sub cmp shrl cwtl jle xchg cmp mov xor cmp xor pop movsb adc shlb cmp test orl jge sbb cmpsb dec fs sbb mov (bad) fnop scas xor test mov mov or out (bad) pop leave (bad) aaa test adc and cmc lahf popf and daa sbb fcompl mov push xchg cli hlt jge inc xchg (bad) (bad) xor mov pop push cmp sub je ffreep sub lcall scas insl negb movsb inc mov adcb stos xor popa xchg or aam mov cld insw sbb adc mov xor inc cmpsb cmp loope sub xlat mov sbb dec (bad) aaa fisttpl jmp pop hlt cmp mov flds push sbb mov inc mov adc ret inc enter xor fsub cltd test stos mov aas lret push inc mov mov scas in enter mov and push ds xchg jb xor fs mov loope call dec push xor xchg outsl aad lahf (bad) ret dec (bad) imul xchg movb loope enter xchg out mov rcrl fisubl inc ret xor inc mov ljmp ljmp push (bad) or sub push jle mov jo rcrl flds cmp xor in xchg lcall incb test and mov out push add mov jmp jmp sbb lahf mov sub or or dec cmpsb int3 mov dec shrl mov cmp mov daa sub leave add push adc adc (bad) pushf adc es movb stc pop xor jns ret fs or inc push mov jecxz testl dec push xchg pop jns sti ljmp lcall lock lcall or pusha xchg or mov and adc lret push pusha or (bad) xlat xchg jge xlat movsl repnz arpl and insb lock fbld bound incb cli cmp jnp out inc and gs add adc pop push or and inc shlb (bad) pop stos or push stc mov std push mov (bad) stos arpl test mov cmp or and mov add jnp pushf and mov in mov aad hlt arpl cmp add ror fsts scas and mov (bad) mov cmovb sti sub xchg or add loop xchg mov cmpl mov out iret inc js pop push leave popa mov mulb sub loope mov xor imul push push roll xchg cld ss aam and pusha fld lock aad inc pop inc cltd loopne ret cld or jns stc bnd shrl add push mov add xchg in outsl repnz dec pop jbe sti xor jo lret xor popf dec inc add push stos lret dec lret fildl sub out xor test push mov es out pmaxub hlt repnz push (bad) jg lahf sbb and sub int jne lahf dec scas push xchg sti call jae mov mov test cli and push lods xchg (bad) mov adc clc mov push jne movsl and repz aaa mov imul lds mov out insl mov jle aaa scas stos rorb inc das add cld stc pop inc cli inc shrb xchg jg mulb test dec ljmp js xchg rol jmp inc jnp xor popf xchg hlt repnz mov xor add lea call pushf movl pusha pushl pushf jmp into arpl in cmovb insl das mov cmp sub jecxz jp cmp sbb call ret insb ret pop test adc call (bad) je je xchg andb pop xchg enter add jne mov outsb push xlat pop adc into pop ss test lea dec add clc scas scas stos pop push mov jle sub sub aaa lea sti mov cmpsl or xor mov mov mov adcl inc or ljmp mov or mov inc mov aas out cld jg pop imul pop rcrb jno push in mov sbb sbb lret mov xchg (bad) cmc mov bound xchg ret xor push or mov dec fdivrl cld add ret test ficoml xor pop aam shrb daa daa adc lds loop cmp popf (bad) cli and sti dec out out jle mov fsubrp nop mov bound js int stos push sbb mov (bad) sub aas int les clc das pop rcll (bad) lret add js rcrb jno nop lahf sahf gs test jmp pop lods popf insl pop fidivrl cmovb xorl ja xchg (bad) aas (bad) jnp sub addr16 mov push jne les das mov arpl xchg inc sub pop add cmp sbb aad (bad) or jae add pop in mov jns (bad) cmp or sbb (bad) mov mov sbb dec call outsl (bad) inc cmp fiaddl or mov insb mov ud2 inc or enter adc loop and xchg push popf sbb jae fwait in mov test lret in adc cmp inc cmp cmpsl jnp outsl out ja sbbl shrl ror (bad) (bad) cmovg add popf jb and pushf adc and je xor lcall mov fldcw cli sub xchg mov mov or or sbb call mov pop out xchg cmp push dec cld popa cmp divl mov or add lcall call call cli mov or mov mov test cmp lods repz dec push pop movsl popa lock dec push jge add push std jae out xchg xor in push pushf cmp cmp call lea ja cmc clc cmc pusha imul jmp call add call call mov cmovb mov pop fisub cs push adc cmp sbb pop idivl lock test jg subb add inc mov sbb icebp test jnp pop jge arpl insl cmp aam sti add sub or enter aam (bad) dec mov jp pusha sbb jnp mov cli mov push popf stos jns rolb pop iret out pop shr push gs jge jle mov test mov bound (bad) cmovb movsl inc fnstenv push pop lea test mov or sub pushl lea jmp add movw push jmp pushf lea je cmc stc test sub stc cmp jmp aaa dec cs cmp inc icebp lcall loopne (bad) add (bad) fsubr and lods loop cli mov jne inc fsubrl xchg test cmp inc or sbbl shrl and rolb scas out push add push adc out sub mov out push add lds in add cmp adc pop loop inc hlt lcall roll insb jmp mov rorb jp mov or ja and iret dec dec cwtl cmp ja pop ffree rorl jecxz add sbb jne xor dec clc or and out sbb repnz and xchg dec push push push dec inc dec dec xor cs insb add jmp roll stos xor fisubl out xor shlb xorl add out pop pop mov into sub mov dec sbb cmp loope adc sub cmp mov adc adc add fbstp outsl push ja pop aad pop daa sbb push and data16 jb dec fisubl jge (bad) fcoms or (bad) jae inc jmp hlt aaa adc jne imull inc and jne gs xor fs insb add inc jne call bswap pushf not pushf mov jmp call jecxz cmp inc cmovb sub or ror jne mov loope std stc ret xchg fldcw mov mov dec mov lahf daa inc in dec or cmc adc xchg jg inc jnp out xchg push stc cmp (bad) and mov rolb mov fnsave dec or ss adc dec mov mov mov mov mov lea jb aam daa cmp movsbw mov jmp pop shlb sti inc cmovb push fldenv sarl rcr mov adc leave (bad) mov xor mov push stos data16 mov pop push and mov add jbe pop std jae cmpsb out pop fistpll into imul loop jle in push fcoml mov dec mov and outsl xchg xchg out fisubl outsl imul loop adc add es xor sti xchg mov sbb pop pop lea mov add ja fsubrs (bad) dec fldt push sbb leavew js xor aaa jle mov xor test lea nop test inc inc cmovb jae aas and int mov negl fidivr ret xchg rcr rcrl shrl xchg movsb sahf (bad) cltd dec mov mov mov push clc sti push mov enter adc fstpl pop loope mov std insb ja movsb cmp push push leave lea jbe bsr call shr sar not bt adc add setae call add cmp xchg sar shr xchg dec shr mov cmp add add pusha bswap mov lea pusha mov pushl push not lods clc push cmc movw not push stc add jmp sub inc cmovb or je fmull push mov mov pop inc xchg mov mov cmp rcll and pop mov adc iret xor cmp fnsave adc scas iret jl sti inc into lea mov outsb in add shl loope sbb lret movsb and lret inc inc mov leave xchg outsb imul sub pop inc mov mov or or dec xor sub daa sub (bad) in push test and add pusha lret gs movsl and das mov sub bswap adc mov and or jae popf repnz hlt outsl mov dec jge sbb jae adc rcrb jns mov std mov sbb push movb cmovb lods mull mull lret cmp jmp xchg add leave or fninit decl imul movsl out pop into adc outsl jo adc jg lcall cmp xchg fs add lretw repnz les mov int3 xor pop fsubrl mov push and or push test dec mov dec cmpl xchg mov (bad) stos xchg inc dec jbe lds or mov ret mov mov jp xor enter xor adc loopne push movb lods cmc movw pusha call shl jmp mov pushf pushf pushf lea jmp call call pushf pushf lea jb bswap rcl aaa mov pusha neg setle cmc not cmp movb push ror mov lea sar cmp das cmp add xchg setb bswap push lea jmp outsb mov inc cmovb in jmp pop mov inc ret xchg or dec in int3 pop or js mov daa out insb mov cmpl jns leave pop xchg pop pop add ficoml mov xor fdivl mov mov dec (bad) insb sti add das pop mov sub arpl lock mov leave pop rol jno cmp (bad) mov es or ljmp jno mov cwtl xchg out jnp outsb xor imul push movb stc push aas jecxz xor cmp icebp jno lods jno xchg ficomp push sub cld int (bad) lahf cmpl adc cmpsb aam pushf or push or mov sub (bad) fstps ficom or add movsb cmp lock xchg nop xor repz and sarl mov inc jg sbb cmpsb cmc or add inc insb inc clc movzwl dec int or xor pusha scas lahf int3 and xorl xor mov sub sub lcall xchg stos xor sbb rcr in sub fcmove fsubrs es dec enter outsl scas (bad) mov add xchg nop pusha jg xchg cmc ja lahf into pop popf xchg js aam (bad) rcrb sar jno xor jge loop or (bad) clc shll jbe icebp popf das testl cmp scas je int3 scas out icebp xchg movsb out cmpsl imul aam insl pushf fstpt or jmp xchg fnstcw outsb jle mov sahf mov xlat insl xchg and add (bad) jecxz lds es adc outsb xchg dec jbe (bad) les je ljmp aam insl leave or jb jmp jmp jbe jmp xchg pushf cltd js in inc dec mov inc aad jg (bad) fstl out sbb (bad) mov out gs std adc out fcompl fadds jb movsl into xor or inc mov out push xchg jne icebp jmp mov xor inc daa mov mov and cli les rorl (bad) push movsl aas scas (bad) jno push push sbbl ljmp jb subl nop xchg cmovb and xchg popa leave inc lea xchg dec stc addr16 dec cmp mov enter and shll cmp adc into or insb adc rorl add mov loop mov imulb in fcmovnb mov dec mov fwait orl inc cltd andl inc xlat push pop (bad) dec mov shrl outsb sahf imul (bad) fisubl leave add jns and lods xchg mov jnp mov cmp mov jmp outsl adc cmovl inc cltd add rolb popf add ds lret imul dec rep sub or mov nop or enter out in cs adc aas stc ljmp push pop cmp and call icebp cmp fldenv aam xchg xchg imul mov fbstp sbb repnz mov jle xor cld flds testb push addr16 add mov dec int mov and mov jb jb jle push je add or cs mov (bad) nopl jmp fdivp cmp test cmp sbb mov shlb mov cmp jnp rcl iret leave in and xchg outsl sub push lahf sbb idivl dec cmp insl sub sbb xor mov cmpsb mulb push daa ret pusha jg mov (bad) movsl xor inc push dec sbb mov faddl jno dec mov mov and stos pushf push call jmp cmpb jne shll shll push lods neg sub neg xor add mov pop ret xchg dec pushf dec cmovb test int3 push in mov pop push sub outsb data16 bound aad fadds adc jnp push jp cmp xchg push loop xchg cmp out cmp call das sub xor dec fdivrs push sbb dec cmpsb orl xlat ret jne sbb add stos fldenv arpl mov pop cmp jo loope mov jns cmp cmc jo out ljmp faddl mov stos pop xchg push or cld adc movsb pop fcoms adc adc lcall jbe rcrb lock stos cwtl (bad) xor add or and jle je adc and sbb fwait adc inc jne adc jb or fadds jmp pusha cmp mov test inc pop jp out dec loop cmp mov aaa in sbbb adc and sbb test mov mov fdivl sti mov cmp (bad) push data16 adc adc or clc outsb xchg xor jl mov adc sub lea mov mov mov into inc int xor mov stos jle and (bad) call push cld loopne lods jns call (bad) ja imul pop pusha pop (bad) or cmpsl xlat sub push inc pop mov and jp out call mov dec fisubrl clc push sbb insl push aas pop lods cld or lods clc pop lods xchg (bad) pop (bad) popf sub push lods mov mov inc sub rolb add sti push mov idiv mov jmp data16 mov push pop add inc popf or call call lea je jmp scas out fimull inc test je pusha cmp int3 int3 sub addl cmp imul retw xor add lret leave xor inc int cmc sahf push aad fisttp sbb push cmc loope inc push popf dec test sbb pop rcrb lea sarl push sahf fsubrs jno fimul pusha jo mov test mov sbb enter sahf repnz jle lds xchg fsubrs adc mov push mov gs or and ret xchg loope jg push lds cmpsb cs mov sub lods xor call inc ret mov cmovb outsb enter insb ljmp dec push test insb mov imul stos xchg (bad) aad (bad) xor (bad) (bad) mov jle cld mov (bad) insb sbb pusha mulb adc add pop xchg movups inc fnop dec rcr movsl xor cs daa fldt repz sbb je (bad) leave jle div xor in idiv in insb mov pop cmpsb jns,pt stc inc sbb and push jb lods outsb xchg or pushf xchg or push dec int3 dec cmovb scas sarb pushf jb clc nop out dec mov dec mov cs nop dec mov xlat inc add add jae mov (bad) adc sarl mov mov notl movq int3 push outsb xchg jns xchg jge fcomps sbb jb jns xchg push xchg test lods jle mov push and pop popf insl add mov and loopne scas push sub ds jp xor ds lea es and fdivrl cmpsl jnp mov aas mov adc fmull inc sub push mov dec mov cmpsb cli cwtl in inc fsub or shlb in mov jmp and aaa fcmovnb hlt sbb mov adc gs cmp imul cmp or mov sub movsb mov jmp cwtl fsts shl js into and push add loopne cmp dec loopne aaa cli xchg shl mov xor ret mov les ret imul fisttpl out jle std test inc inc mov mov mov pop pusha mov pushf pushf call sub jg dec cmovb push jb clc push (bad) lock inc fidivrl hlt cli xchg push loopne mov cwtl xchg and sbb or hlt pushf lods in xor stos push icebp and scas push daa xchg cmpsl stc and dec addr16 loop or mov add push (bad) lret jp or jo adc and leave push rorl mov ljmp mov movsb push or das out lret daa jecxz cmc leave inc (bad) xor pop mov sub mov mov inc sub cmp jae fnsave lods sbb daa stos loop mov xor popa nop imul mov push inc push xchg sub jg test push cmovb dec rorl xor pusha push cmp ret mov add ds sub mov das div mov mov mov inc shr (bad) mov xchg jg jnp and gs xor and mov lcall push fisubr lods mov mov rcr or pop and int cmp fdivs cmp lods icebp jb push inc or xlat push fsubs pop sub lahf inc inc pop scas and sbb ret outsl aad mov das leave pop xor dec add dec outsl popa fs imul add and lea jle mov push push lea jmp push lcall mov or leave imul push data16 or sbb mov pop dec ret sbb fwait jg and xchg insl aad rcl cmp bound fwait sbb fimull or (bad) jne mov xor enter addl or sbb fdivrs nop jle sarl popa add xlat inc lods pop mov mov jl sub sub std das xor cmp jnp add clc imul test movb clc jmp pusha dec pushf lea jne movsbw test mov cmp jmp lea pushf push push call cmpb push pusha lea jne cmp sub bswap neg mov rcl (bad) lock xchg shr and ljmp mov xor popf or (bad) call lcall push int xchg gs stos mov inc bound rorb lock pushf cli add sti mov adc pop fistp cmc (bad) mov rorl mov jo pop jno mov leave lock dec ljmp lret jbe sub fxch push call cmp loopne dec cmc cwtl xchg loop mov lahf or loop fidivl dec ss jns adc call and rcl rcrb fild aas (bad) ljmp xchg sub mov push gs int popa lcall mov call int adcl lds xchg scas das rclb repz sbb ljmp leave nop mov scas rcll das inc stos jmp xchg fwait pop push (bad) movsl push dec mov push xchg bound xchg and pop addr16 sub nop mov ljmp jg mov dec push lret xchg inc cs hlt push mov orl fist inc sub inc mov xor jge sub addr16 shlb pop rep fcmovu dec fisttpll jae push jl add (bad) ds jecxz or lock push out addr16 enter cwtl push imul xchg cwtl dec movsl aam pop inc nop (bad) incb mov std or push test mov jbe (bad) cmp out cmpsl rcrl push mov int3 (bad) push xchg fsubs fisttpl mov lret addl inc hlt cltd fisubr pop cmc mov jns sub push jecxz push xchg rcll adc jae dec mov outsl sub dec fsubs (bad) and int3 adc push xor pop push sbb fst jl insb or pop leave push sub dec cltd and ja pushf push imul pusha push bt add push push movw lea jmp std xor inc xchg jmp jecxz imul inc jns sub add (bad) mov fisttpll rcrl jg push scas loopne mov stos ss xchg push dec jb std xchg jle mov jg out rclb and (bad) mov ds inc mov fiadd std sub inc push mov inc dec push dec add call (bad) jns popa push xor push xchg popa push dec ljmp dec movsl (bad) dec inc aas inc shl jae jno stc ds jecxz popf lods in xchg xchg rcll jne (bad) cmpsl shlb pop jmp xor pop loop call leave mov pop mov aaa dec in movl jmp lea jb or neg rcr mov cmp shl pusha cmc add jmp in sub inc idivl cmp les (bad) ljmp cli push inc rclb jmp xchg xlat (bad) hlt addl xor stos mov sahf push sbb sub add push out dec ret xor mov fcom push in adc notb mov lret pop inc mov (bad) je push cs jmp fwait cmc ss or or xchg popw or (bad) mov inc into mov pushf (bad) insb cmp into rcrl lock inc int pop cmp xor mov sarl xchg stos (bad) mov out or enter adc adc lahf xchg test sub (bad) push push cmovb mov out (bad) jge ja sbb dec lds (bad) xor stc inc fldcw and lock mov adc sub pop cmpsb or andl aam je sbb xor daa fisub loopne loopne pop dec cmp ds xor dec dec ja aad cmpsl inc lcall add (bad) into pop lcall lods adc (bad) daa mov jb inc add jl in adc popa adc rcrb divb xchg out push mov sbb add mov lahf pushf mov and sbbl test push out out mov ret xor mov xor adc mov mov mov nop push imul dec xchg jo sbb (bad) mov xor fwait jbe aad mov fsts mov lcall lods lea insb mov adc insb ret push xchg cmpsb cmp jae lahf sti jb divl in divl aad jne xor gs testb inc test fisubrl (bad) and xchg add outsl xchg int insb notl jno cmp lcall sbb jae hlt sub or pushl lea je pusha pusha or lea ja push movb lea je movsbl pusha stc cwtl xor shr mov movzbw clc ror lea mov sbb clc shr sub xor mov jmp addr16 xchg (bad) sarb jle pushf jle pusha sahf je dec xchg pusha push push sbb rclb movsb stos push mov aam sahf push jecxz ret xchg and sub frstor inc sarb mov add add movsb fcompl pop push cmc je mov ss rcr test or roll std pop dec dec and cmp xlat pop pop xor aad lock dec xchg sbb push add lods sub push sub mov fimul mov jo xchg shrl cmp stos push adcl enter jmp or ljmp pop xor pop and les fiaddl in hlt xor pop xlat mov mov xor in adc push adc push mov in or out mov imul jp fcoms jl sub fdivs fidiv ffree clc jg arpl mov divb pop add loopne movsl pop test adc call lock addr16 orb mov jnp jmp mov xchg add cltd imul jp int3 sub mov daa adc mov jb loopne imul pop lock lea ja pusha sbb sub shr add add and mov add neg mov cmc clc pushf repnz lea js push lea jne call mov shl lea call pop ret jnp push aam cmovb fdivl adcb mov cmp jle jp (bad) std xchg push mov dec dec lds lods sub insb dec mov bound pusha add inc out sarb jge xchg jns dec push and outsb lods cmp add inc cmp jnp xchg call pop jne jbe,pt pop mov movzbw movzbw pushf movb lea mov mov movl pushl mov movb pushl ret test cmovb scas in je repnz pushf repnz cwtl ds dec inc xchg lds or mov and cmpsl push ds in popa xor adc xor cmpl out outsl mov mov inc ja lds int3 mov and sbb or es es mov jmp std inc push pop (bad) push inc data16 cwtl pop push pop push sbb xchg pushf cmpsb scas xchg shrl insb sbb xchg pop out xchg jmp inc sub mov jne adc pop insb notl cvttps2pi push push aas xor xchg test repz sub mov shr sub call stc pop ret and sub add popa push (bad) mov mov xor add in loopne nop xor scas sub add test cwtl bound inc add add arpl sub add clc pop cmp sub add cmc jecxz add push int3 sub add add ljmp add add jae inc push repnz in and cmc imul inc add cli mov negl cld cmp lret sbb inc add fimul mov sub add cmpsl mov bound inc add add scas mov es add (bad) pop inc ljmp add lock outsb cmp and (bad) sub add jae cs inc push hlt arpl repz add mov inc add cli loope out stos adc add add or out xor add sbb xchg ja mov add popf rclb pop dec pusha das es add add mov xor add cmp add cmp sub add sbb add add inc and inc add dec push and pop adc add push call xor add adc das mov cld adc sub inc add add mov sbb movsb xor inc add add xorb inc add add cs arpl sub add stc mov add add and sub add enter data16 xor add sti sub sub add call xchg lret xor add setg push dec aam sub add call mov add stc sub int pusha fbstp inc add add or pop add add push arpl inc add add ret and roll movsl mov pop das es mov xor ja addr16 mov xor or repz cmc test jmp pusha lea jb cmp pushf xor cmp test test pushf setbe setno push mov pushf pusha lea jns push lea je cwtl cwtl seta lea pushf movb jmp pushf adc pushf push mov pusha lea jae pushf xchg mov jmp in adc (bad) pop cmovb fmulp call push cld or fidivl (bad) cmp loopne pop pushf ljmp pop dec push (bad) and inc lea es inc fldl out lahf mov in jns adc mov insl out (bad) insl in jp (bad) test pusha lret aam into scas stos dec and push sub jns das (bad) jne popf and and push pop and in xchg jno leave sub or xorl icebp cltd and mov dec std cmp mov push mov stos xor cmp inc arpl ja sbb mov pop cmovb decl sti cmpl xchg aas mov sbb in push xor fs iret push dec enter mov into into pop lds and ss push lea mov pop sahf popa in and test push jle or xor in push sub add sub pusha pusha jl cmpsl cmc xor movsl pop mov scas sub outsl jl inc lcall test mov mov mov repz adc jecxz je cmp pop xchg (bad) jbe sbb sbb inc out shr cmpl nop aaa mov pushf jmp xchg pushf movl call dec aam pop pop cmovb fsubrl mov cs pop pop imul inc mov leave adc and fs and icebp es adc movsb hlt cmp xor icebp (bad) sub inc outsl pop add bound pop xor incb aaa sbb xchg jmp inc push mov int3 (bad) ss mov jo push mov and frstor cmpsb in les les and scas add and mov adc and das xchg jae jns popa or push insb rcrb push cmp clc pop adc inc out imul inc jp test push mov mov xor lea call lahf adc sahf rcr sub jne mov pop rol pop pop ret add inc (bad) sub cld mov ret rcll xchg daa loopne hlt push call clc sbb dec mov cmpsb out or mov int3 cmp rolb mov rclb imul mov mov popf mov lods mov (bad) in dec sub jmp outsb daa jecxz repz and mov dec stos lock or cmp dec mov rolb fsubl (bad) pop or cmp test cmp mov mov insl loop in mov je xchg jnp xchg outsl (bad) out sahf repz call (bad) pop pop jl mov mov inc aad (bad) icebp dec jl push dec movsb cmp inc icebp push jge test shlb xchg sbb adc push pop lods pusha mov and cmovb cld push mov push scas sbb cmp mov or sub call adc inc sub faddl popa add gs xchg sub pop inc mov in repnz jmp subl mov out pop cmpl repz push and xor or sub xor mov add cmp xlat mov enter and jo add jae adc cmp mov decb mov or jne jno loope push push into cmovl adc pop fsubl jno inc mov xchg loope mov imull fs or mov dec push pusha jl jae popa push in inc jmp leave push shl pushf adc imul xchg jne dec fldt not fcoml mov cmpsl or in pop lret mov adc stc cli add cmp jnp add push or leavew adc inc (bad) xorl aam and fistl cs test sub cs out les loope xchg xor push xchg ret stos add loopne dec mov gs adc popa pusha mov mov sub jg inc gs fildl jns nop add popa arpl cmpsl pop ljmp movsb jns mov pop into inc add hlt pop xlat jle sbb adc mov dec add pusha shlb (bad) adc inc jmp mov inc popa mov div pop jge push arpl push call in (bad) andb ret roll ret cmp cli or pushf leave lock lods mov add rcll mov mov popa add lret add pop or lods (bad) xor mov icebp push es movsb aam or out in clc push mov inc xchg and pop mov bound fwait sbb mov xor xor xor cmp jo cmp pusha jmp jmp lea pushl mov movzbw cwtl bswap pushf mov setle movsbw mov mov call fstps ljmp pop fildll xchg pop mov sti cmp jbe lock push repz aas or out scas es and push sbb repnz ja loop cmpsb dec dec mov mov mov mov in jge or je fcomi push push sub xchg fldcw add dec gs jo gs outsb outsw jb popa je outsl outsb add test int decl xchg (bad) pop bts mov xor shld ror cmp mov rol (bad) icebp inc sub adc mov shl bt mov bswap mov xor neg mov shld lea bt shl mov stc jmp pop setnp movsbw pop pushf lea jns pushf bswap mov call pushf push mov movb movb push call mov bt mov call pushf pushf lea jbe not bt bsf btc sub rcl bswap mov bsr cmp sar pusha mov xadd sub adc add data16 negl shr bt rol movsbw mov push shrd add not mov pushf jmp dec or push dec inc es loop ss aaa fidivrl movsb in add xchg xchg xlat fs rcrl (bad) xor loopne cld inc in nop sti fldenv mov loop divb xor hlt idivb dec fiadd insb std and (bad) jb scas adc and sub in add sti push test sub adc in push xor jle (bad) cmp push addr16 mov sub (bad) insb call mov scas ret jecxz and dec movsb jns bound xor dec ret sbb and or jecxz dec mov out push popf aaa cmp fimull ljmp lock and dec sarb leave shl pop fwait aad mov sub sbb and hlt repnz inc lret cmp leave inc adc jl pop gs ja pop pop push jle fldl push and or pop xchg aad sub (bad) xchg enter enter adc rorl test fcmovnbe je add jns,pt mov push add jge fcmovnbe cmpsb mov fisttpl (bad) push (bad) clc out pop push scas dec sbb adc aam in loopne xchg outsl mov insl sub xlat test sub popf inc in mov xor dec nop ljmp cmp sti xchg jecxz push xchg and dec xchg inc pop aam stos aas mov in btr xchg adc sbb (bad) or jmpw xchg mov imul sbb push mov push or movsb and pushl ret inc mov dec push jbe pop push mov out and xchg loop inc aaa ss add rclb sbb mov inc popa jno xor (bad) js xchg (bad) push mov insl sub (bad) jno mov insb call andl mov inc movsb into mov fwait inc push dec je,pn dec es mov mov cmp inc rol in lahf hlt mov js dec outsb mov push test push add test inc fildl xor mov jb insl das xor (bad) out faddp mov out jp mov and sbb or pop pushf adc cmp rep fsubs adc dec push cmp adc mov inc fnstsw fisttpl das sub std push jb pushf pop popa inc push and jmp add cmpsb jecxz dec jg,pt ljmp mov dec push or not mov jmp cmp mov lea jb call push sbb movsb insl cmovb nop jle outsb mov enter (bad) std popa int3 les ljmp inc mov adc and sub cs sub xor xchg dec lcall add int mov mov iret outsl push pop inc cltd cmp (bad) xchg cmpsl push lods cli out es cwtl aaa xor add sbb adc or xor dec pop fldt mov adc loop xchg add pushf shl cmc add call lods adc mov iret lahf xchg xor add mov cmp push out or jge lods xor cmpsl out pop mov add in lds inc aad sub lea data16 ss mov sbb dec cmc add cli fsubrl lret lahf mov cmp lods cmp popf mov in pop mov loopne mov jnp ds cmp fisttp xchg jae (bad) popf (bad) jbe out rolb pop std das xchg leave adc cmp mov push pop mov inc je or call cmpsb je movsl outsb cmovb sub jge pop pop outsl dec xor mov push xor jl test jecxz addr16 mov xor push and jl sbb rclb inc ja or pop xlat int or les push pop cmp ja test fiadd push push negb sub pop lock fistp mov lods in cli loope movsb iret aas cs es bound sub into add into shr adc inc mov lds lret mov cmp xor idiv cmp int3 dec outsl cmovb js call or lds (bad) fbld or mov (bad) ja push test lret call xchg (bad) je push jno ret dec cmp sbb and (bad) repz in xchg aad in je add or pusha and bound jge sub dec xchg (bad) add push test out aas mov add add xchg incb and bound movsl bswap inc lds mov das push rcrl sub in push sub stos fnstcw xchg xchg cmpsb sbb call repz or test mov stos loopne xor es ss sub ret cmpps xchg dec mov test sub js js aas ret jno stc cmc popf jge sub imul and stos das cmp or jo adc xlat sahf inc and cmp mov in sbb and mov call (bad) mul pop fiadd data16 xchg mov and sarb das xor push mov cmp mov movsl xchg (bad) mov and push dec mov and push into popf cmpsl cs shlb dec cwtl sbb arpl outsb push add mov pop pop scas nop adc inc dec inc inc int3 bound into out jbe pop xor inc push daa out fisttp adc sub jo lods dec dec xchg sti (bad) xchg fbstp js xchg pusha push ds push cmp jg daa cmp mov push mov aad out or int in test ja add lds and and test or push cwtl cltd jnp xor arpl testl test negb popa mov cmc or xchg mov mov (bad) dec mov sub mov stos je push and mov (bad) aas (bad) insl jl and fdivrl mov or cmpsb incb rcll sub jae push push dec gs popa addr16 add movsb iret add shrd push add pusha btc movsbw pushf mov bt jmp push inc push push dec dec dec cs insb add pop add add int idiv mov movsbw pop pusha movl pushl ret movl jmp push lock std std xchg xchg stos mov dec pop pop vmaxss sub pushf mov pop lods ss jae fsubr jge or rcr dec dec inc and aam pop ret add loopne cs test in dec lahf jno push in add movsb inc jbe xor xchg push jbe fs mov mov loop nop enter xlat dec mov mov mov movzbl movsbw movl movb lea call pusha pushf lea ja clc call call pushl neg pushf pushf pushf xor jmp sbb pushf jmp add bts add sbb stc or sar movl btc (bad) cmc bt cmp mov cmc call lea call cmp pushf cmc test add cmp cmp cmpl call notl fwait packssdw inc push cmp das jmp sti mov xor adc cmp jp inc sub movsl mov lret jb sahf push mov mov inc mov xchg repz pop jp ds pop imul sbb fstpt add leave mov jp decl cmp and daa sub xchg xchg sub xchg lcall jp sbb cmp dec loopne adc ja xor mov imul ja and jmp cmp mov inc stos rclb mov add mov lock sahf lods data16 xchg fs repnz mov adc mov jno (bad) add pusha dec mov lds (bad) jo sbb les jo jb add add int3 or adc or out cmp ret mov push test and call jmp pusha movb lea jae movsbl lea jmp push leave sbb pop adc add mov xchg int mov push jnp xor xchg dec das jns sub pop cmp mov data16 pop out xor mov ja loop cmpsb fsubrl jecxz leave dec mov pop dec cmpsl fistp pop cltd sahf daa mov mov mov lret movsb and fs sbb xchg pop cli add mov and push mulb aam jbe leave mov std insl add push mov (bad) lea adc call ss jne idivb fsubp pop pop dec das mov push sub pushf pushf jmp pop dec cli jp cmovb dec fs mov adc jl adc jb pop adc cs push jp pop push outsb adc mov es fmull int xlat pop or insl (bad) cmp or or int clc add fs mov mov ja jb xor call out jge inc fsubp js cmp sub lret sbb shll mov push or in sbb rcrl inc cmpsl push pop test pop fistpll pop xlat jge xchg sbb scas mov mov (bad) std (bad) xchg bound (bad) jge (bad) xor lods iret sub (bad) lea test out (bad) movsb aas movsb push pushf movl pushf movb mov mov mov push pushl ret call pushf lods clc not test add push cmc cmc push not clc sub cmc cmp clc cmp movzbw call mov cmovb inc testb adc test (bad) int3 les lock js insb sub add pop out fistpll or xor pop leave ds sub dec add cmpsl adc jg and test adc in or and sbb mov repnz jnp jns cmp test icebp inc mov maskmovq testl rcll shrb sahf xchg stc jg enter out ficom xchg out test (bad) push (bad) lcall ss sbb mulb or add inc repnz mov and inc xor inc fidivl loop adc pop into xor (bad) clc push cwtl out cmp sub ror xorl movsl sub inc cs pop (bad) mov sbb jnp inc jg mov and push lods adc rol in in mov jmp mov jle add addb data16 mov xor lcall adc mov loope jge push shl jnp xor leave addr16 mov xchg notb xchg test aam int add loop addb fsub daa iret enter dec xlat cmp mov (bad) sub orl xchg arpl add ljmp xor sub in cmp jnp repnz rcll jbe (bad) add aad inc xchg in sbb sub jae pop adc mov test xchg jo pop jae sub push cli push mov orb xor ja push or sti clc cmp movb mov add add pusha pusha lea jmp or adc call pushl popl mov pushl ret or cmovb imul mov in std dec test jne addr16 adc pop push cmp jp stos ret sub insb ret imul mov add (bad) and mov int3 add leave call cmp int mov cmp push scas sub (bad) imull and fsubs cmpsl js arpl fidivrl sti or xchg leave inc cwtl aaa iret shrl sahf ja (bad) negb xchg inc dec lret in pop lret pop adc adc (bad) jno stc mov push subl add dec adc sbb pop das inc mov push xlat daa fmull jno inc push in sti or push cmpsl pop adc (bad) pop (bad) leave pop cwtl data16 pop mov inc pop push lods data16 or adc cld aaa mov sbb (bad) jge rcr ds add xchg je xor mov and adc sahf scas mov dec and cmp arpl add shrb sbb mov es jo push xchg into inc mov mov mov outsl out sbb jbe or rcrb icebp loopne out xchg mov (bad) sub sub sub push or loopne in pushl rorl jo les pop rcr mov rcr jbe mov mov dec faddl js test and jmp pushf pushf lea je pushf sub bt mov cmc pushf cmp push jmp lea call cmp bt cmc cmp mov bt bt cmc cmp push lea jb shl bt shrd mov xor rcl cmc ror mov push stc clc shr jmp movb lea je push lea lea pusha jmp call bt bt sub jmp xor inc cmc sahf xchg mov les push popf mov cmp inc mov dec in sahf loop es movsl jne icebp pushf pop sub out in push mov dec and in xchg sti push jmp out les outsl faddl popa mov jns int mov push dec insl add andl data16 mov fdivs jmp or outsb test mov adc nop push fimul test inc and mov push lret sbb sub add add mov neg btr (bad) icebp rcl mov bsf bswap add pop shr pusha bsf pop mov shld add movw pop pop mov call sub lods sub lock xor pop mov add stc cmc popf imul ljmp and mov fs xchg inc mov sbb xchg dec sub inc rol mov roll mov enter ret std sbb (bad) rol addr16 and ret stos test mov mov ret sahf jle add sti mov sbb (bad) mov mov rcrl pop movsb les sbb cmc push mov fsts (bad) adc sub test mov lahf fstps jge mov lea jb pushf cmpb movw pushf movb lea jne bt bsf shr clc mov bt pushf clc add cmc pusha bt movzwl btr or add or mov stc add call cltd fistpl push aas ret push scas pop pandn stos cli pop and sbb pop push (bad) fildll imul push dec fs mov pusha xchg insb add sub pop popf movsl xlat (bad) mov mov xorl mov xor add movzbl das gs (bad) lods xchg hlt push fsubs mov xor bt call movb lea call not add shld pop ror pusha not shrd mov bt push cmp pushl movw sbb push push call movl mov lea jmp stc test pushf push mov call cmp sub cmc test add pushf pusha lea jmp call cmpsb cli push xchg inc adc jnp (bad) flds push fs fs jbe or xchg (bad) insb add loope addr16 aad pop mov addl loope fdivs jno mov pop mov icebp push xchg fistl arpl pop cmpl int3 mov mov adc mov (bad) lods jl sarb test adc inc dec xor dec mov xorb mov xor adc xchg cmp dec adc add cwtl testl and jmp sub push xchg jg inc add insl gs add jg repz arpl mov and cmpsb (bad) out cmp nop sti incl in sub xor pop outsl sub jp and lds mov mov (bad) lret dec (bad) shrb (bad) mov sub mov fimull cmc ret mov pop into pop mov pusha jnp aam xor mov (bad) jb cmp add (bad) pop data16 repnz pop out mov pop loop mov mov sub stos sub mov rcrb add xchg mov jp ret das mov inc push imul add sub aas (bad) sub adc dec and add sbb gs adc movb scas jnp outsl cs (bad) jg fwait push xchg aaa pop jmp loopne sahf subb xlat xchg (bad) xor sub push pop jne or or jmp and movl pop push repz into pop or je (bad) int3 test or cltd lret fmull mov jmp inc (bad) sub fisub mov loop and sub in js inc jnp mov loopne jns dec xor pop ja inc aad sbbl jmp repz aam inc cmp jo loopne push addr16 popa cltd loope imul mov push lcall push xor add jl push mov jp hlt pop (bad) (bad) in sarb test adc adc out pop xor xchg add jl and imul mov cmp add and mov out jo add or ds daa and idiv add push imul xchg sti es add jns pop clc pusha test setg pusha pushl mov call xchg add pop jns inc int3 push mov inc dec inc imul aas xchg and int and adc vphaddwd add stc out xchg push xchg imul mov mov xor cmpsl loop pop push icebp mov xor mov cwtl xchg xchg mov je dec dec and xchg ret repnz pop lret inc fwait add insb mov int3 inc fdivr xor xor and dec xor jl add adc or dec icebp out sub out fmuls in jmp sahf cmp jg repz test jg aaa and fcmovnb fdivs inc insb sti xor in clc ljmp lock jp inc jne,pt jnp test aaa insl or xchg add comiss inc cld in movl clc dec call das add sub lock rcl pop mov test fs repz pusha mov sbb mov sbbl int3 int3 add and sahf jo jae dec test movsl (bad) js sarb xor mov cld push dec mov inc inc cmp test xor push data16 inc out cmpsl cmp push fcmovbe dec mov cmpsl fcoms inc push enter add dec outsl arpl inc jb gs outsb sbb add loop add aam mov pushf seto sub mov clc cmp pusha cmp add push pushf mov call ror aad xadd ror mov adc bts jmp jmp call mov jmp pushf popl pusha mov pushl popl push push push pushf lea jmp pusha xchg call ror movb jmp pushf lea jnp push pusha pushl push pushl ret pusha mov movb mov mov pushf lea jmp jmp not pop cmc neg pusha or pushf add not cmp add sar lea not mov clc movw sub push call jmp call call pusha mov call bswap add lea push pusha cmp jmp call pushf mov jmp mov inc clc pushf neg call mov pushf lea jns push jmp mov jmp pushf mov pushl pushf popl pusha jmp mov pushf pushf push lea jmp daa mov dec mov pusha jmp movl jmp push mov pusha mov push jmp pusha mov jmp sub cmc add jmp call not pusha cmp not push cmc sub jmp mov push movb lea jmp jmp pushf push pushl popl pushf mov movb lea jmp pushf mov pusha pusha mov lea jmp stc bt sub jmp clc add push pushf clc neg call pusha mov push mov lea jmp jmp shl pusha mov push mov mov call mov pushf jmp inc dec movsbw lea xor movzbl stc bt pusha call adc push jmp bt xor movl jmp jmp inc neg mov cmp clc add push pushf pusha jmp mov movzbw setbe not mov bswap movsbw bswap mov seto pusha xchg lea xchg lea setae setge mov xchg lea lea push push repz popl xchg pushl mov bswap xchg push mov movsbl mov push inc rcl rol movsbw push call mov pushf lea jmp mov pushl mov mov pushf mov pushf lea jmp stc cmp mov sub jmp call pushl pushf mov pushf movb mov pushf mov movw lea jmp pushf pushl popl pusha pushf push lea jmp lea jge push mov mov jmp mov pusha call push pushl popl movb pushf movl push lea jmp mov call movb mov pusha pushl mov pushf call call add pushf mov mov pushl lea jmp push mov pushf pushl mov pushf pushf movb lea jmp push call cbtw or sar lahf mov neg not mov push clc stc stc sub stc shl movl mov pusha mov mov pusha pushf popl pushf pushl popl pushl push movb movl lea jmp mov pushf lea jmp mov pushf pusha pushf pushf popl movb jmp pushf popl call mov pusha push push pushf mov call not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp mov mov pushf mov pushl push pushl lea jmp bsr neg adc notl dec mov cmc call pusha mov pushl jmp push push movb pushf mov lea ja pushf mov pushf push jmp pushl popl push pushl lea jmp ror add pusha mov mov call shld aam call cmp mov cmp add stc clc stc movl mov movb sub call bt clc and push pushf popl pushf pushl pushl popl push pushf mov lea jmp mov pushl mov push pushf mov push pusha lea jmp pushf call mov pusha push lea jmp mov pushl pushl jmp sub jmp shld mov movzbl mov bt stc pushf call call bt add mov push pushl movl mov push pushf mov lea jmp add add call mov push pushl ret mov pushf jmp pushl popl pushf pusha push pushf lea jmp and btc shl mov rcr bswap inc sub shrd movsbw add inc mov inc bswap rol cmc rol inc inc adc call mov pushf pushl pusha pushl lea jmp pushf mov pusha jmp dec stc rcr ror btr lea jmp mov jmp call jmp lea jne push push mov pushl push pushf lea jmp cmc movb rol push call mov call jmp decl pusha movb lea jne pusha pusha lea jge mov pusha lea jmp pushf pusha mov movl push movw lea jmp movw jmp mov pushf jmp movl mov jp pushf mov pusha jmp sub stc sub jo push mov shr pusha call call mov pushf mov lea jmp test pushf cmc jmp pushf pushf mov pushf lea jmp jmp jmp cmc cmp add call add movw pushf pushf pushf popl pushf movw call mov mov pusha mov push mov mov pushf mov call jmp mov call cmp sub call pushf popl push jmp add cmp cmc std pushl popf push lea jmp lea jne call stc call call movb mov pusha push lea jmp mov jp (bad) mov jns pushl arpl jg mov and mov pop js decl jp pushl mov imul mov imul pusha mov addr16 ljmp lcall pop mov inc pop mov inc jle call bound dec insb mov cmp jmp mov push jno pushl insb mov dec insb mov jg mov scas pusha mov addr16 decl pop mov mov mov dec insb mov lea (bad) cmp decl mov cmp incl mov cwtl fs cmc xorb jp push push mov lea decl jg decl mov push mov dec insb mov fsubs (bad) cli addr16 stos push (bad) cmp jb pushl mov dec insb mov mov call mov cmp pushl insb mov push jno decl mov push mov inc jle (bad) jg mov cmpsl jb (bad) (bad) decl jno (bad) mov arpl push outsl mov mov pushl insb mov cmpsl jb lcall data16 cmpsl jb (bad) fidivr jmp mov inc jle (bad) cmp dec pop mov iret jnp dec pop mov and mov movsl fs insb jl jmp mov push mov jbe mov addr16 mov pop jp decl insb mov cmp insb mov imul movsl fs mov mov (bad) pushl mov jg mov pop jp lcall arpl addr16 lcall pop mov stos push jmp jg jmp addr16 jno mov out mov addr16 mov lahf pop mov scas pusha mov pop jp ljmp mov cmpsl jb lcall jp decl mov iret jnp pushl xorb pop mov jno mov xor call mov fidivr dec pop mov xor pushl jo (bad) cmp decl mov dec insb mov xor push mov movsl fs inc addr16 lea pushl pusha mov inc pop mov iret jnp pushl jae ljmp arpl cwtl fs jbe mov xor ljmp jb jmp xorb fs (bad) jmp mov stos push jmp xorb push mov or mov cmp lcall dec jnp decl pop mov inc jle push xorb push (bad) (bad) jmp mov jno mov into pop mov inc addr16 xor (bad) (bad) cmp push ljmp mov mov arpl cmpsl jb ljmp lcall jp incl mov scas pusha mov scas pusha mov fsubs decl mov mov pop mov mov jb (bad) jg mov imul jbe mov iret jnp decl pop mov fidivr pushl mov fidivr pushl mov addr16 (bad) cmp arpl cmp data16 addr16 mov jg mov pop jp jmp insb mov imul push jno (bad) mov pop mov cmp pop mov dec insb mov mov mov pop bound cmp call mov xor fs lahf pop mov cmp decl insb mov pop js call movb movb mov pushl mov push jmp pushf mov call shrd not mov stc bt stc add pushf mov jmp push mov call push mov push mov lea jmp bt sub mov mov mov mov mov push pushf lea jmp pushf jmp movw pusha pushl popl push movw lea jmp push movsbw pop lea push jmp mov call mov call pushf jmp call sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp pushf jmp cmp neg neg add sets xor rcr add rol dec add jmp jmp jmp pusha mov mov mov pushf movb lea jo push pushf mov pusha pushf pushf pushf lea jmp add clc clc pusha shrd pushl mov call stc sub cmp jmp pushf neg cmc call pushl popl push pusha push movw lea jmp pushl popl mov pushf pushf lea jmp push mov pushf call lea jne stc push stc sub pushf call push pushf mov pushf pushl ret movw pusha mov pushl movw movb lea jmp pusha pushl mov jmp mov pushf jmp btc btr cltd mov btc pop inc jmp pusha push movl call push jmp pushf xchg jmp push push pusha pusha call pushf push pushl jmp push push push pusha mov movb pusha lea jmp movw mov pushf pushf pushf popl jmp movzbl push inc setge ror rcr cmp or sub btc btr test xor lea jnp lea inc bswap inc rol add cmc lea movzbl push pushl mov bt pushf call call movw movw mov call cmc cmp shr jmp mov pusha movb mov pushf pushf mov call jmp bsr inc mov test add pusha pushf pusha lea jmp pushf mov movb pushl pushf lea jmp movl pushl popl pusha pushf push lea jmp mov cld call movsbw bswap mov lea mov js pusha lea jmp mov movb stc pushf test and stc stc mov stc cmp pushf push pushf lea jne (bad) repz jbe xchg movl lret setp mov pusha movw lea jmp movb mov jmp jmp add pusha movb pushf lea jmp jmp call add pusha pushf mov movl call shl bt shr pushf pushf bt call pushf pushl call xchg stc clc cmp mov bt movw pushf sub pushf mov jmp mov push push lea jmp mov mov push pushf lea jmp mov call mov push push jmp or call mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp pushf jmp neg bt bt test cmp add push lea jo pusha push mov push pusha pushf pushf pushl ret or mov push pusha lea je call call jmp pushl popl push pushf lea jmp push mov pushf push push mov call call bts sar rcl movzbl add btc pusha movsbw add bsr add movsbw add jmp mov call clc test btr rdtsc call jmp mov jmp call call call jmp movb call test xor test sub movb mov pushl movb lea jmp lea shr xor rcr shld movzbl cmc inc cmc sbb lea jmp jmp mov push call push xchg lea mov mov jmp push pushf mov pusha pushf mov jmp mov movb push lea jmp shrd inc mov jmp pushf jmp pushf lea jo popl pushf pusha movw lea jmp push mov pushf mov call mov movb push push pushf lea jmp mov call rcl rol or mov bt pusha add mov pushf sub cmc pusha call push mov ror btr sar bsf add add xor lea bswap cmp sub bt mov cmp pushf jmp push mov mov mov pushf mov pushf mov call pushl lea jge push mov call mov pushl lea jmp lea jo push pushf mov jmp not clc bt not test pusha cmp and pushf movl jmp push pusha mov pushl mov pusha mov jmp call push and pusha pushf pushf popl lea jns push pushf pushl popl pushf mov lea jmp daa push bts mov clc stc pusha xor pusha test pushf stc neg pushf pushf dec test jmp pushf movb mov movb pushl lea jmp push call call call mov bt or movb lea je stc push pusha pusha xor pushf jmp pusha clc mov bt clc clc push add movb call shld mov jmp jmp call pushf mov push lea jmp movl mov call mov movw pushf lea jmp pushf mov pusha lea jmp sub call pusha mov call jmp neg shrd movzbl shrd sub jmp mov pushl call test stc bt sub call cmp sub call call mov pushf lea jmp cmp sub call movw mov pushl mov pushl lea jmp movw movb movl pusha jmp cmc cmc add call stc add lea jno mov pushf lea jmp pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp pushf pushf mov pushf push push lea jmp cmc pushl popl test call add pushf stc shld pushl mov pushf mov mov pushf push movb pushf popl pushl call call pushf pushl pusha mov jmp movl jmp movsbw btr ror mov adc dec cmp mov bt sub cmc test shl pushf jmp mov pushf lea jmp neg sub movzbl and sbb xadd mov sbb not dec bt mov bsf bts add lea cmc movsbw mov setp clc xor not push setno rol dec shld not bswap or pop shld xor bswap jp sar bt xor pushf shl shrd rcr movzbl add cmc bts sbb lea add btc call movb jmp mov not mov pusha mov jmp bts shr pusha mov cmc bt sub mov test clc call pusha mov mov call sar add xor bswap rol movzbw mov call pushf pusha movw mov push mov jmp mov pusha jmp pusha pusha pushl popl push movw movw lea jmp bt clc test xchg cmp mov call jmp jmp jmp das mov cmp pushf lea stc cmc clc sub movl bt add pushf stc clc mov neg stc pusha jmp add call pushf pusha mov mov pushf pushf lea jmp stc mov pusha call push pushf pusha jmp pushl mov pushf mov mov jmp cwtl mov pushf mov mov pusha pusha mov push push lea jmp cmp sub pushl cmp push cmc sub call pushf pushl popl movl pushf movw pushl lea jmp bt shl sub mov add shr add mov cmc call mov shr setle xor mov lea jg pushf pushf sub stc shr mov mov pushf mov pushf pushf call pushf pushf inc pusha decl movw pushf pushl jmp push push mov push pushf lea jmp push rol mov cmp cmc mov pushl call clc pushf clc add jmp mov pushf popl lea jns pushf push pushl pushl popl pushf mov movl pushf lea jmp push movb call call bsf bts rol mov jmp mov mov lea jge pushf push movb pusha lea ja popl pusha lea jmp push push inc jmp bt xor push jmp cmp bt sub push push jmp push pushf popl pusha mov mov pushl popl push lea jmp jmp inc setno neg pushf pusha ror call call bswap call sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call pusha aam add mov pusha call lahf aaa xchg mov btr sub mov clc clc bt add pushf mov mov pusha lea jmp call call mov pusha jmp call pusha sub jmp push pushl mov pushl pushl pusha pushl ret mov call mov push mov pushf lea jmp rep ror cmc btc mov sar ror lea mov std stc std bt pushl popf mov mov lea jmp mov stc call or movl stc xor lea jae pushf inc call push pushf push pushf pushl popl pusha pushf pushf lea jmp clc pushf ror push mov lea mov call cmc jl daa not notl aas mov push stc test sub jmp mov pushf pushf mov pushf pushf mov lea jmp bswap mov neg adc sbb mov pusha shr dec call and lea jno push movb pushf mov call mov movb push pushl pusha lea jmp stc clc ror stc sub jae sub test pusha stc xor mov sub jmp pushl add pushf lea jo push pushf mov mov lea jmp pushf popl jmp add push push pushf call mov mov ror (bad) repnz call jmp call call lea pushf movb pushl push mov pushl mov lea jmp clc lea jno add pusha jmp push lea jp pushf pushf pushf pusha jmp btc mov call pushf pushf popl pushf jmp xor cmp xor call movb jmp pushl popl movw lea jmp bt bswap lea jae stc xor bt pushf sub jmp pushf mov jmp mov call cmp shr pushf movb mov push pushf popl call push shr lea jle mov jge push pushf popl push pushl popl movb push lea jmp mov pusha mov jmp lea jns pushf mov call pusha push pushf mov mov push call mov clc pushl cmc cmp add pushf pushf pusha lea jmp jmp lea jbe mov pushf lea jmp inc clc shr mov sbb call jmp inc push push mov pushf lea jmp btr dec shl bt mov stc test add call call inc pushf clc bt add jmp movb pusha jmp divl push mov push mov push jmp mov call mov mov pusha pushf pushl ret test movzbl call push mov jmp call pusha mov call mov pushf mov mov jmp lea jne or jmp mov mov pushf mov pusha mov pushf pushf jmp pushf mov mov mov pusha mov call dec btc or mov push add mov clc add jmp pushf jmp pushl push movw pushl popl mov movb lea jmp bt ror bt clc cmp sub cmp test cmc mov bt sub jmp xadd ror bsr rcr mov sar cmp add neg not xor xor jl lea neg not sub adc btc add cmc (bad) testb bts add pusha ror mov btc add shrd jmp pushf pushf lea ja clc mov clc bsr aad lea shl sub sub aad not lea rcl and rol bswap xor add sub mov bswap mov mov bswap pusha movsbw push pushf popl mov pusha call mov push pushl mov pusha mov push jmp mov mov push pushl movb lea jmp mov mov movb pushf jmp mov push push mov movb lea jmp jmp ror mov movsbw pushf mov movb pushf mov movb pushf call pushl popl pushf pushf lea jmp ror clc clc call pusha mov pusha mov pushl mov pushf mov movw push lea jmp call cmc xor stc stc mov bt test stc add pusha jmp push mov pushf pushl mov mov pusha pushf mov mov push jmp pusha pushf pusha pushf popl call call pushf popl jmp movzbw mov cmc (bad) icebp add loope dec add mov jmp (bad) call jmp test pushf sub pushf pushl mov pusha pushf mov mov pushf pushf lea jmp xchg jmp push pushf pushf push mov pushl ret jmp pop pushf rdtsc shl pushl popf pusha mov setl pop call movl push mov push mov mov pushf mov movb mov push pushf movb lea jmp rol movzbl push add pusha pushl inc call pushf popl pushf pushl popl pushl lea jmp mov jmp jmp mov pusha lea cpuid cmp sub push stc cmpl pushl pushf mov pushl pushf mov jmp bt xor mov push bt cmp bt sub jmp pushf lea jmp pushf stc sub call mov push push movb lea jmp movzbl lahf lahf mov call pusha mov call mov pushf pushl mov movb mov lea pop lea lahf mov pushf mov lea xchg movsbl not mov not mov movl pushl ret movb call mov call movsbw mov pusha pushf mov jmp jne push mov pushf lea jnp pusha movb mov mov jmp call mov jmp btr daa mov sub shr rcl mov call xchg cld pop mov pushf cld lea call pusha pusha lea movl jmp call cmp stc add pusha jmp mov push movb push lea jmp push jmp pushf mov jmp call mov push call mov pusha pushf movw pushf lea jmp xor neg movzbl cmc call jmp pushl popl pushf push lea jmp jmp mov push mov lea jmp mov pushf lea jmp add add inc add clc movsl dec add add add inc add rcrb add 