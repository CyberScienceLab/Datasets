xchg sbbl sub mov add (bad) or push enterq pop (bad) mov push (bad) jb (bad) mov insb xor xor pop and sti mov xor xchg popq ds rex.WRXB data16 mov rex.WX movslq jl test or (bad) and (bad) (bad) mov nop loopne rex.R out jnp mov (bad) enterq push jmpq mov and in xchg repnz out lods stos and mov rex.RXB in in cmp sbb adc (bad) jae (bad) outsb xor divb int imul pop mov sahf (bad) (bad) (bad) pushq mov mov int3 add js jge xor fidivl (bad) mov jle or rex.RXB and insb cmp (bad) sub test or jmpq xchg xor (bad) cmp pop insb rex.WR scas adc jle in icebp mov and fimull cmc mov lock mov add push out movslq popfq mov cmpsb cwtl negb (bad) mov (bad) cmp jp xor or sbb popfq push jnp xchg rcrb mov push cmc sub mov xchg (bad) clc xchg jp jne pop (bad) (bad) (bad) sti (bad) loopne (bad) rex.WRB (bad) (bad) decb loop xor add add jl pop (bad) mov fimul (bad) in ds in movsl mov rex.WX rex.RXB movabs (bad) add rex.W sub int3 cmpsl xchg rex.RX subl movabs pop adc and nop (bad) push loope mov jo rex.R (bad) jle std fsts xchg imul jnp and push xchg lahf cmp nop rex.R xchg popfq movsl (bad) rex.WRXB gs mov mov (bad) scas test cmp in (bad) pushfq mov outsl (bad) pushfq cli jb jo movabs (bad) (bad) (bad) std pushfq rcrl sub out sbbb jg cwtl or (bad) in (bad) pop add lahf popfw cmp jle (bad) retq xchg jl outsl or jne xchg (bad) incl mov and fist sbb test sbb repnz int push sbb xlat pop cmp in out mov jo movaps mov movabs add add rol mov stc cmp stc test jl je stc bt sub test cmp cmp jp ja clc imul jmpq clc add clc cmc cmc test jmpq movzbw mov mov lea mov movsbw lea jmpq stc test jmpq callq jmpq stos jmpq cmc stc sub clc clc stc cmp jmpq jmpq stc or and mov test cmc jmpq jmpq movb cmp bt test jmpq not jmpq jmpq fisttpl xor fisttpl push mov rex.X fs jne sbb movslq es cmp in mov movabs rorl stos jb mov push (bad) xchg cmp iret jle mov (bad) movabs movsl fist and (bad) lods loop xchg jb int add adc lea mov (bad) (bad) (bad) cld mov (bad) xor (bad) (bad) (bad) pushq mov movabs pushq mov movabs retq leaveq mov xchg adcl jb push jge jae add or (bad) xchg idivl and (bad) (bad) add add adc (bad) jo sti push push movabs jnp jg jae out fidivrl sbb mov scas orl or mov cmpsl mov xchg xchg xorb adc bt clc sub jmpq sub cmp jmpq bt repnz jmpq jmpq push and fiadd ss push add loopne callq rex.WX mov xor ss sarb jae mov (bad) in mov (bad) (bad) hlt (bad) popfq pop pushfq sbb (bad) cmp or (bad) cltd pop add mov nop mov js cmp add addr32 cmpb (bad) lahf not movsl gs mov sbb xchg lret and int3 cmp mov scas adcl (bad) (bad) (bad) std or (bad) (bad) (bad) (bad) std xchg rex.XB test (bad) out outsb cwtl pop (bad) movabs nop pushfq rex.RB rex.WXB rex.W jns in (bad) lods std pop in retq add lahf int int adc test adc (bad) mov mov fistl jle sbb sbb movabs add movabs adc (bad) mov (bad) mov lret rex.RX (bad) add add pop out xor callq (bad) pop (bad) (bad) sahf cmpsb sbb sahf xor jrcxz mov fs lahf sti (bad) (bad) retq push sbb mov add fcmovb scas fnstcw push imul mov lss pop test rex.WR rex.RX (bad) push movsl add rex.RXB mov rex.RXB rex.XB stos add cld sbb (bad) (bad) (bad) cld fidivl jno (bad) (bad) (bad) clc ja (bad) cwtl xchg and or mov (bad) push shrl mov jmp jrcxz rex.WB xor add mov push or or xchg add add js icebp or movsb adc (bad) stos (bad) lods xchg rex.RX movsl (bad) pop notl (bad) jb adc imul fwait mov gs mulb setbe (bad) sahf sub mov sub sub add adc cmp and jno jp mov pop rex.XB cmp cs mov push rex.WRX or mov sbb loopne cmc movsl std fwait repz xchg mov sbb fldt cmp cld xchg xor rex.WRXB xchg (bad) jns stc fimul jmpq mov add out xchg cmp rex.RXB (bad) (bad) std rex.X lahf movsb mov add fildll (bad) mov (bad) (bad) or xchg (bad) test rex.WR loopne sahf mov flds rex.W cmp push xchg bswap mov (bad) mov xlat (bad) mov fdivrl pushq (bad) cmpsl (bad) outsl or mov adc movsl sbb jbe movaps push iret popfq ss adc jmpq jmpq stc cmp test test cmp jmpq add xchg add rex.WRXB outsb data16 stc rex.XB jle (bad) and sti cmp mov in scas (bad) fnop and movsl (bad) test xor in int3 push mov insl add xchg rex.WR (bad) add ror mov rex.WXB fnstcw or (bad) clc lahf lret (bad) std fwait jae (bad) insl (bad) (bad) mov outsb (bad) (bad) adc rex.WXB jno je repz rex.RXB pushfq pop lods (bad) pop xchg rex.B xchg (bad) push cld popfq iret rex.X xor pop fwait mov cmp or (bad) (bad) (bad) lcall sub mov nop (bad) (bad) lock push icebp fnstsw (bad) cmp pop cltd cld retq push pop cmp sub (bad) (bad) jnp stos cwtl (bad) mov mov add rex.WXB gs cltd mov test push mov jmpq sbb outsb nop add lods (bad) out or jle popfq cld xchg push xchg sti rex.XB sbb roll adc out loopne mov jno xchg mov jno outsb xchg add (bad) mov scas (bad) lods rex.RX rex.WXB sub rex.W (bad) sti andl (bad) (bad) incb pushfq pop rex.WRB (bad) push test mov fisttpl lret retq rex.WRB movabs xchg rex.X mov mov incl (bad) lods pop psraw and mov por movabs (bad) cltd std and cmp (bad) rex.WRX int cwtl mov (bad) rex.R cmp test (bad) jmpq xchg vpsubsb fnsave sbb mov testb add xchg (bad) out (bad) in mov stos or lahf (bad) fstpt movslq adc callq loope callq movslq mull jp xchg fdivl (bad) pop add jne mov insb movabs sub out jbe xor rex.WB int3 fldcw mov lret (bad) pop push rex.X sub adc repnz xchg stos cmp push cmp (bad) fdivs (bad) (bad) (bad) sti mov (bad) (bad) (bad) (bad) jnp out mov movslq and xor mov (bad) (bad) (bad) sti push mov jb shlb pushq cmc sahf mov in movabs adc jbe lret insb addr32 je stos add add sub adc mov movsbl not movzbq sets mov mov mov lea mov movzbw lea jmpq jmpq jmpq mov lea pop retq jae jmpq jmpq (bad) mov pop lea xor sub fidivl mov imul pop movabs std mov rex.RX (bad) rex.R and xor cli (bad) in mov mov (bad) rex.X mov add mov push adc std cltd stos rex.XB lock rex.RXB test (bad) (bad) (bad) (bad) sti data16 sahf mov (bad) (bad) (bad) (bad) sub rex.XB fstl hlt pop out add sub push (bad) rex.X fs clc (bad) (bad) (bad) dec retq jns xchg add cmpsb mov jmpq stos and jbe imull popfq iret xchg cmc out movabs sarb insb shr xchg add push sub movabs leaveq jmpq jae jmpq jmpq jmpq jmpq out push xor test test js mov retq movsb pop cmp clc adc cli stos mov (bad) mov movsl jg,pn or (bad) push or rex.WRB imul and rorl push cmp mov push movslq sub xchg add (bad) (bad) lea xor adc cmpsb pushfq cmp (bad) (bad) cld stos data16 (bad) (bad) ljmp repnz cli mov (bad) jrcxz jmp cmc rex.WX in (bad) adcl insl pop (bad) cmp rex.WXB sti outsb add mov add add jb je or add (bad) xchg scas (bad) (bad) sbb cld (bad) stos sti push (bad) pop negb (bad) popfq add (bad) (bad) (bad) rex.WRB adcb jge rex.W scas (bad) ja adc imul cmc test test add jmpq rex.RB jrcxz rex rex.B cmpl sbb adc mov cmpl pop mov movsl rex.R (bad) sub lret clc mov pop out cs addb xor imul xchg stc lret sub int (bad) fs rex.WRX rex.XB rex.WRB mov pushq add in cmp jb lock (bad) (bad) (bad) sti test (bad) (bad) (bad) (bad) imul scas xchg out ja cmp movabs (bad) (bad) jmp retq gs nop cmc (bad) mov lret mov adc (bad) mov packuswb jb mov add mov jl lods add jbe sbb lods adc sarl sub rex.R rex.WRXB jne movabs or bt jmpq jmpq bt cmp cmc cmp jmpq repnz jmpq cmp not not movsbl not lea setbe movsbl lea pop jmpq add fidivrl or test add stos jmpq xchg pop or movabs fadds imul sbb (bad) sub movabs mov pushq cmc fisubr adc (bad) hlt fwait xchg jne retq lods (bad) (bad) (bad) cld pop mov xor (bad) (bad) (bad) jmpq pop lret out mov cld mov loop movabs in movabs in sbb (bad) (bad) enterq jnp mov and add add iret insb hlt xor xor xchg and test mov enterq outsb (bad) rex.B fs (bad) iret data16 and cltd mov fsubrs add push (bad) mov cmp xchg jmpq pushq rolb fisub fiadd mov shld sub mov shr add sbb btc sub data16 testl rol mov test add bswap lea mov jmpq stos jmpq callq jmpq leaveq sbb adc rex.RX or adc mov or cltd rex.WB fs es in xchg push mov cmpsb fwait lret mov add test jle mov callq (bad) (bad) lea cmc (bad) xchg adcb ror rex.WRXB xchg std pop cmp (bad) cltd fsubp fmull rex.RXB sbb sbb cmc callq xor lock (bad) (bad) (bad) sti lea (bad) (bad) decb andb (bad) fdivr (bad) (bad) dec rex.W (bad) and adc rolb sub rex.RXB adc sbb pop lock (bad) in loope retq (bad) jb stos xchg pop repz sub sti movabs adc rcrl xchg movabs in add (bad) fiaddl stos addl stos pushfq cli (bad) icebp xlat or rex.XB ja and (bad) cmp in jno (bad) (bad) jnp add xor in rex mov mov (bad) add mov movsb hlt (bad) add mov mov (bad) sti (bad) rcll (bad) (bad) (bad) sti notb (bad) (bad) (bad) mov jmpq mov or (bad) rex.XB sahf retq (bad) add loope fsubp push rolb (bad) (bad) adc mov pop movslq add add mov add cltd cmpsl ja jo (bad) cs (bad) mov mov sqrtps xor fnstenv cmp pcmpeqw movabs mov mov (bad) lea test fiadd add stc mov rcr or mov clc cmc cmp jmpq jmpq mov (bad) js (bad) adc jrcxz mov add (bad) data16 or add xchg lret scas rex.WRX adc pop sbbl out rex.XB movsb cld rcll imulb test pop stos xchg sbb movsl ficoml leaveq repnz mov adc rex.W int sti enterq xchg clc rcrb mov (bad) (bad) cld (bad) adc rex (bad) (bad) inc mov or lock scas xchg mov mov retq cmpsb jno add add rex.RXB out clc (bad) jl rolb rex.XB push mov and adc mov loope ja mov sbb adc movabs xchg jnp mov mov jge lock clc cli xchg rex.R (bad) testb cld xchg (bad) vpandn jrcxz callq rcr sbb and adc xchg sub cmp mov mov fidiv xor movslq nop pop sti jno std bnd and mov mov adc scas sub in add lahf (bad) adc nop or enterq push (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) stos rcrb or cmpsb negb (bad) jmpq xor js test cmp push mov push repz test insl jge jo out jrcxz stos adc repz jmp mov mov cld sbb pop cmp rex.R popfq cltd mov pop cmp adc test add shld rcr xor mov sub not neg bsr movsbw mov dec adc add jmpq xor rclb loopne gs rex.WX js jg jno (bad) adc fmull adc jmpq lret icebp icebp mov sahf add lock movl or movabs (bad) (bad) (bad) sti popfq or mov (bad) fnstsw and sahf movabs add rex.XB (bad) (bad) (bad) (bad) (bad) dec test scas movabs rex.WRXB jnp scas jl jnp jbe div stc cwtl mov adc shll rex.WRB rex.W imul cld sti rex.WRXB or (bad) mov add add push pop cld (bad) icebp repnz imul movabs and xchg or xchg cli add es jp mov pop (bad) pop xor sbb fidiv (bad) or add and out test push or cli jbe xor cmp es es cmp jno pop movslq xchg adc lret (bad) xchg (bad) jae je lods or nop cmp fisubr lret (bad) clc pop pop xor sbb clc movabs out lock std ficom nop roll cmp cltd xor test (bad) jno movsb rex.WRXB rex.W rex.X push rex.WR loope mov jmp cmp jge rex.X or sbb mov (bad) (bad) (bad) cld sub jb fdivrp (bad) (bad) (bad) out andl ss icebp movabs sahf add add outsb jp fldcw jrcxz leaveq stos (bad) jmpq adc movsb cmpl jae (bad) xor std fistl rex.WRXB cmp rex.WXB fwait mov mov xchg xchg adc pop (bad) mov shll lret sbb and sbb rcrl push scas movabs sti sahf lods push mov imul movabs and push sbb add xchg (bad) rex.WB push test mov cmc sahf movabs cld (bad) fsubs cmc insb (bad) (bad) (bad) (bad) fnstcw xorb test pop mov movabs incb out jo mov or jno scas mov test sub add add jnp jmp (bad) leaveq cld push lock stc sub sarl (bad) jb and sbb jns popq mov (bad) rex.WRXB in rex.X sub hlt (bad) jge stos (bad) movabs je jmpq cld or int xor push mov cli cmpsb sbb mov sub std out or and loopel mov mov fisubrl sti sub fs push loopne (bad) jo (bad) leaveq or or sti out jmpq add jmp mov jge movabs (bad) fs cmp xchg (bad) jns rex.R mov add add gs sar (bad) (bad) sti sbb retq (bad) (bad) (bad) std fisttpll sbb xor gs out (bad) adc out sbbl sar (bad) (bad) incl cli fstp jno mov cmp (bad) mov add mov rex.RXB sub rex.WRX test jo mov sti push (bad) pop mov sub cmp stos sub rex.WX xorl add jbe jmpq jne clc cmp sub rcr stc mov sbb add setne inc dec mov cmc bt test test test jmpq rex.WRX fs xacquire (bad) js (bad) (bad) jo add sbb mov movsl sbb ficompl int3 xchg (bad) (bad) or mov (bad) (bad) sub stos jo (bad) xchg add (bad) (bad) mov sbb sbb add cs rcl or mov adc xchg rex.R cmpsb adc pop in fadds pop rex.B adc outsb (bad) (bad) (bad) sti (bad) xchg cmp leaveq rex.RXB div in and and rex.RX out sbb jmp scas (bad) xor add add jl mov xlat iret out fstl add mov pushfq push idivl pop callq fistp je rex.RX rex jmp mov (bad) sub hlt pop iret pop push cmp mov mov jmpq jmpq je cmp stc add bt clc bt bt cmp jmpq jae cmc bt clc xor jmpq test sub bt rol test popfw jmpq callq jmpq je jmpq jb stc jmpq jmpq adc jmpq fldt jmpq jp sub rex.B outsl add (bad) jae (bad) cs (bad) xchg idivb int3 out mov imul rex rex gs mov xchg push xchg adc cmpsb jl sub jle xchg (bad) (bad) movabs (bad) or sbb hlt (bad) add outsl roll stos scas stc (bad) leaveq mov xchg fdivrp (bad) (bad) sti test (bad) (bad) (bad) (bad) pushq add enterq fcoms rex.X sbb cmp (bad) (bad) (bad) jmp add (bad) jge push rex.R rex.WX test pop repnz imul push mov or mov bnd add (bad) lods and (bad) in jp imul jp adc ja lock out (bad) mov sub xchg push ds jnp mov lea (bad) rex.WR mov stos or cmp xchg addr32 imul pop lods loop mov add enterq cmp fs nop ja ficom jb pop (bad) (bad) (bad) cli rex.RB and or leaveq rex.WB addr32 fwait nop callq pop mov xchg (bad) (bad) std mov movslq xor (bad) or lret movabs icebp adc mov add (bad) rex.WRX scas iret mov scas add faddl (bad) callq xchg fwait icebp sub test cmp movabs xor cltd (bad) adc rex.RX rex.RB jp repnz mov (bad) rex.WRXB cmp test (bad) rex.WX jmpq pushfw mov adc mov jmpq jmpq xchg fcmovnu mov loop (bad) and mov ficoml or mov and fild cs xchg push mov jp mov (bad) movsq test stc stos (bad) and mov mov push cld lods and pop scas sub (bad) (bad) in icebp outsb add (bad) sbb rex.X test shl nop mov cmp rex.WXB (bad) adc add jl mov push push or sub pop or jmp (bad) xor (bad) (bad) sti xchg jnp stos mov pop and rex.WXB rex.RX test jo xchg mov (bad) jno sub add (bad) (bad) (bad) (bad) clc rex.RB push add fdivl cmpsb and pushfq iret and or (bad) fdivrl sbb (bad) (bad) add mov retq rex.WRB hlt mov rex.RB scas fidiv (bad) rorb rex.RXB mov movzbl jmpq jmpq lods (bad) jae testb test jg movslq movsl rex.WX je retq movabs stos rex.WX jno mov sub retq mul jne or push je mov rcrb jae (bad) rex.WR (bad) (bad) (bad) sti (bad) mov int3 popfq lea xchg retq jae mov pop pop add sbb cmp imul pop loop or (bad) (bad) incb cmp movabs push or sar (bad) (bad) inc repz test rex.WB pushq mov mov pop sti fnstcw fstpt (bad) addr32 pop add sbb stos (bad) mov nop adc lahf or jge mov mov rex.WXB rex.RXB testl out jrcxz test xchg mov cmp sti leaveq out fimull pop (bad) mov out jb lahf sti push repz std movabs insb jns rex.WX rex.WRX rex.XB (bad) (bad) (bad) (bad) std rcrb rcrb add add (bad) stc pop pop ja stos xchg (bad) and xchg pushq rex.RB mov out mov rex.RXB rex.WRX push js mov push outsb rex.WRX outsb push xchg outsl fadd mov or xor jp mov and (bad) jne (bad) rex.B xchg insl cli lods clc mull ffree rcrb xor xchg and insl nop push js xchg or insb rex.RB insl mov movslq (bad) movslq (bad) sub orb or xchg mov movabs insl popfq rex.B cmp or jmp sub leaveq stc jrcxz mov xor jb jno cwtl or jp xchg movsb mov xchg xchg (bad) sbb jge cltd orb add push add clc lods (bad) js (bad) and movslq jp stos std xlat mov or retq pop and (bad) (bad) add push pop xchg xchg mov (bad) cltd movabs push (bad) jle pushfq xchg (bad) je (bad) js mov xchg fistl jle popfq rex.B mov jge fwait popfq xor loop movsb sbbb int3 jle xchg orl or cld repnz add pop push ja pushfq iret and xor pushq fldl or sbbl adc (bad) jb pop add (bad) out cmp rex.WB in mov jae adc mov imul xor jnp test add or outsl adc test jbe rex.RXB add sub mov (bad) push lea (bad) (bad) movabs xchg sbb rex.RX movabs sub movabs movabs movsb sub mov mov test nop rex.RB (bad) xchg push mov mov push rex.X jae (bad) mov jnp fcomps (bad) mov pushfq lea imul xchg jmpq (bad) es int idivb int3 fiaddl fmull test jnp xor sub test in in in insl adc outsl or xlat (bad) mov rorl shlb rex.B fwait (bad) scas (bad) pop subl xchg cmp or test push andb rorb sbb stos imul popfq out enterq xor rclb pop mov rcr std xchg movabs lods pushq (bad) (bad) std rcrb (bad) jno fisttpl add add (bad) stc push add add shl xchg push lods pushq jb mov movabs lea orl push (bad) shrb jmp data16 rex.RB ja xchg xlat notb insl out cmc cwtl add rex.WB insl add jno push mov (bad) (bad) xorl xor outsb jg icebp cmp mov imul insl test test sub (bad) ss pushq pushfq rex.WRXB jp adc add sub cwtl mov cwtl imull stos sbbl sbb add (bad) cmpsl fdivrl cmpsb jp mov pop xchg jno (bad) sub imul (bad) out or (bad) jp xchg push pushw jae cli xchg xlat outsl and push xchg or mov ja rex.WRX stos rex.WXB jl xchg cmp mov in (bad) (bad) pop or lods jge xchg icebp (bad) jl xchg (bad) rex.RXB cld iret and pop push (bad) notl repz loope push xor rex.WRB bnd push mov gs stos (bad) (bad) callq rclb punpckldq (bad) cli xchg xor xchg jg jl mov pushq scas rex.W xchg add pushq popq xchg sub (bad) xchg icebp fidivl adc in adc movabs mov xchg ja xchg mov xchg subl js xorl xchg (bad) js xchg xor rex.WB (bad) test sbb xchg loop xor in xor rex.WRXB xor mov sub and (bad) mov outsl and fcmovnu cmpb mov imul add test mov pop test sub mov fsubs jmp js hlt add stos lret xor xor cwtl jp (bad) and (bad) mov repz and cmp adc enterq (bad) mov (bad) out jg xlat sarl fldl in xor rex xor or movslq mov imul rex.WXB (bad) pop jmpq (bad) insl add mov rex.W (bad) jnp sub sti lock mov jae mov rex.WRXB stc cwtl sti (bad) callq mov enterq test xchg (bad) loope movabs icebp cltd leaveq sarb adc cmp (bad) (bad) cli roll (bad) (bad) std mov (bad) mov (bad) fild fsubl push (bad) leaveq rolb out outsb mov movsb mov sbb cmpsb sbb fadds clc movabs adc stc adc retq mov (bad) jns stos add rex.X pop lret push rol mov fwait (bad) rex.WRB fmull or cwtl sbb jnp mov test repnz mov jrcxz fiaddl mov cmp (bad) push (bad) mov js pop adc sarl (bad) (bad) (bad) loopne mov xor or pop fnstsw mov (bad) xchg movabs popfq fdivrs and repnz cld retq (bad) in (bad) out or js xchg jnp test cmp and (bad) and ja (bad) jb or cmp test pop (bad) rex.WR test adc outsl jrcxz fdivrl rolb outsl lret shr clc mov negl (bad) adc cwtl add (bad) outsl movabs insl (bad) xchg cmp or movabs mov imul pop (bad) mov retq out (bad) (bad) cmc jmp and stos sti shrb push orl cwtl cmc or pcmpgtd sub cli (bad) (bad) ss insl mov pop (bad) jmp fsubp mov out add add scas hlt scas mov out xor scas leaveq jrcxz cmp lret mov sti jns add (bad) (bad) cmp mov (bad) (bad) adc add (bad) (bad) (bad) mov push add mov lods or add mov test roll cwtl clc (bad) pop jnp popfq mov xchg mov xchg movabs mov add mov (bad) cs (bad) enterq (bad) or lock jmpq test rex fnstenv jge (bad) adc cld cltd mov test and (bad) nop rex.WR out xchg (bad) stc cmp adcb jb mov (bad) or adc jmp rex.WR iret adc mul hlt xadd (bad) (bad) movsl test sub fs movslq leaveq lahf rex.B (bad) xor cld or push icebp jb (bad) (bad) dec in loop es js pop push out lods add cmp jae in jns or rex.B clc subb sub jae (bad) retq loopne sub and xchg in outsb int3 (bad) in std (bad) jle mov ja xor sbb lods xchg mov xchg repnz sub add and rex.WRB outsl add decb mov in loope lahf rolb icebp in movsl cwtl (bad) (bad) mov jmpq mov insl xchg rex add add jmpq mov imul add (bad) cmp pop rex.W data16 leaveq repz mov mov (bad) xchg fld1 (bad) sbb mov adc sarl jns sub rorb shrb xchg xor (bad) (bad) (bad) sti mov ja or (bad) (bad) (bad) jne cmpsb cmc jbe adc cmp outsl rex rex.WRX cwtl and (bad) (bad) push cld out fs sub push xchg movabs in xlat scas (bad) (bad) add jno js jae rex.RXB imul mov rex.RX imul sbb (bad) or and (bad) neg mov xchg push stos int jns lret (bad) in sub fisttpl sbb xchg cli sahf mov cmp out sub pop cli sub rex.WRB fsubrl mov in mov jbe push sbb (bad) (bad) (bad) sti pushq jmp es lahf add (bad) (bad) (bad) (bad) and (bad) stos (bad) (bad) (bad) jmpq sub jno mov rex.WX pop xchg mov mov (bad) (bad) fnstsw cmp retq pop gs loope repnz in lods (bad) mov (bad) mov leaveq xchg and (bad) xchg retq fcmovne mov push (bad) scas enterq fs mov (bad) jo add cmpsb and cmp lea out xchg mov (bad) sbb addr32 rex.WX jo xlat lods adc sbb cld mov rex.WRX adc test pop cmpsl neg (bad) (bad) rex.WRB xor sub popfq mov rex.WX (bad) (bad) sti pop sbb jl (bad) (bad) (bad) (bad) (bad) mov cmpsb int3 movabs mov (bad) (bad) lcall (bad) rex.XB rex.X fcmovnb rclb (bad) lahf pop stos (bad) push std fidiv enterq mov rex.RX in std push cmp xchg mov add movabs test test pushq cmp es (bad) mov scas push mov sub mov pushq (bad) rcr lahf rex.W mov rex.X jb add add and cwtl mov mov (bad) xchg (bad) movsl (bad) mov cmpsl mov callq add (bad) (bad) mov addr32 scas rex.RXB lods pop jns mov sub lahf sub lods add lods add pop (bad) mov cltd icebp mov rcr je (bad) (bad) sti in push (bad) imul (bad) (bad) cmpsb repnz and (bad) cs cld (bad) xchg cmpb add add in int3 (bad) mov pop rex.WRXB and lods rex.RX movabs pop loopne (bad) adc mov pop sti xor mov cmpsb out rex.WRB lods mov lret push out rex.WXB cmc cmp bt bt or jmpq jb cmc test jmpq je test clc cmp jmpq push movsl rex.WRXB adcl movsl jge xor loopne xchg pushq (bad) (bad) callq pushq (bad) (bad) rex.B popfq mov or and (bad) jg repnz and insb imul imul (bad) cmp mov addr32 or scas add mov xchg rex.R cs (bad) (bad) sti loope push scas mov (bad) (bad) (bad) movabs ss or jae (bad) flds jge add add sub sti xor outsb jae je xorl lea adc pushq and sti pop rex.RXB push je rex.RX nop add mov (bad) rex.WXB movabs mov pop (bad) addr32 retq (bad) lock (bad) rex.X stc or loop fcomp rolb adc test pushq (bad) retq jl (bad) or mov (bad) jb shrb (bad) xor sbb incb add add lea in (bad) cs (bad) lods (bad) rex.RB mov mov rex.WXB shrb insb rex.X rex.WXB sub icebp sbb pushq jo lods mov test or mov sbb int add and (bad) bt movb cmp clc bt test jmpq sub pushfq fiaddl xor in (bad) jno and loopne in (bad) xlat rol or jb xchg fs cs mov ja popfq (bad) cmp mov and cwtl lods rex.RXB callq cld movabs sub pushfq pushq mov scas mov mov cmp push stos (bad) movabs fdivrs scas loopne mov jp sbb rex.WXB rex.WXB (bad) (bad) (bad) sti std sub loope (bad) (bad) (bad) (bad) mov cwtl rex.RXB hlt nop rex.XB sahf rex.WRB pop adc vpsadbw fimul add add pop push mov rcll rex.WXB notl add (bad) pushfq or mov add iret or mov mov push repnz sti out rcrl jge fcoms fstpt faddl mov (bad) cli adc add rex.WRB jo imul gs add add add mov out sbb add add sbb mov sbb and add sbb pop retq sbb xor add sbb jp (bad) add sbb rex.WR xchg mov sbb pop mov (bad) add sbb insb mov (bad) repz add sbb jl sbb sti out add mov out cli (bad) add mov or sbb movabs add add add add (bad) add mov (bad) or add sbb int3 mov sbb sbb rolb add mov (bad) pushq add sbb in mov (bad) int3 sbb lock cld mov out sbb add add add add add out sbb adc shrd mov (bad) xchg jne loopne mov retq loope rex.WXB repz (bad) adc out sti pop icebp jrcxz out (bad) jno cmp iret test mov movb (bad) (bad) or out add movsl fbstp jo imul (bad) (bad) mov sub rex.W fwait rex.RXB jne in clc int int3 hlt (bad) mov loopne cmpsb mov xchg (bad) jge nop jp mov out rex.WXB adc movabs (bad) (bad) sti jge xor sar (bad) (bad) (bad) (bad) rex.WRX lock (bad) add mov (bad) mov (bad) (bad) (bad) (bad) mov rcll pop mov push roll inc cwtl add cld jae rex.RX sahf clc (bad) mov push cld cmp (bad) add push pop pop icebp iret mov jp std test (bad) mov rcr cs xchg je mov xchg xchg mov movzbw jmpq jmpq ja out sbb retq mov (bad) enterq and rol adc jno sub cmp mov movabs jns sbb sti xchg sub movsb xlat push mov enterq pop andl repz int jmp es fwait nop stos (bad) fxch (bad) stos mov (bad) sub sbb or lea jmp (bad) (bad) sti jge push jo (bad) (bad) (bad) (bad) sbb clc ja and rcl (bad) test and push (bad) (bad) (bad) (bad) mov (bad) adc and rex.RB (bad) (bad) rex.WXB pop test repz popfq negl (bad) sbb xor lods in fisttpl or lahf add sbb mov cmc fistl lock cmc mov test stc cmp cmp jne jmpq callq (bad) repz bsf shrd add movsbw mov test cmc cmpb jmpq shl movsbw mov mov mov test shld lea push setns xadd mov shl movsbw bsr sbb sub add sar not push shr bsf shld push btr setle lea push mov bts shr bt push bts bswap mov test test test jmpq bt cmp cmp jmpq insb js lea adc cltd int rex.RB addr32 adc (bad) movsl jl rex.B push add mov rex.WRXB add sbb mov fidiv rex.WXB pop mov adc push repz rex.WRX cmpsl cmp adc fidivrl (bad) (bad) (bad) sti scas outsl (bad) pushq jo pop and xchg mov fstpt adcl (bad) rex.WRB out xchg lods mov insb fldt pop test cmpsb movsl sub xchg push in push rex.WRX (bad) (bad) (bad) push rex.R lret in fcmovb (bad) pushq xchg (bad) shrb or add mov jo (bad) in rex.XB sbb (bad) andb rex.WRXB jg repnz sbb sarb (bad) divl rex.XB jmpq test shr cmc jmpq jmpq jmpq rol mov clc cmc test jmpq not jmpq je bswap xchg movsbw jmpq stc cmp jmpq sbb add pop (bad) clc sub or sti in add retq sahf push push movabs cwtl rol mov rclb mov leaveq in out (bad) or loop mov push hlt mov mov xchg gs rex.RB adc rex.WB mov (bad) shl rex.WRX rex.W (bad) (bad) (bad) cmp xor sub or jp addl xchg xchg cs adc mov (bad) mov callq insl push retq xchg (bad) imul sbb scas push (bad) (bad) (bad) jge (bad) (bad) cmpsb push (bad) push pop lods mov sub (bad) (bad) sahf out fcomps (bad) (bad) cmp xor jge movabs sti nop movabs xor imul mov mov outsb pop sti nop jg adc adc and xchg imul rex.WXB rex.WR pop (bad) lods sub rex.WR xor or cmc movabs rex.RX pop (bad) xchg movslq mov rex.WB (bad) (bad) std rex.RX add add mov shr sahf rol add movabs jle lods (bad) roll cmp rex.WRX cwtl test mov (bad) adc cmp test add bt bt cmp cmp cmp jg je cmc stc cmp jbe je test cmp jmpq ja cmp je (bad) loope xor lahf sar (bad) jae movabs je movabs adc std jrcxz sub push mov or stc addr32 mov loope lret movsl xchg (bad) test xor push popfq rex.R mov cmpsb rex.B fwait mov (bad) shrb cmpsb clc sub lret or (bad) (bad) (bad) cld (bad) test sahf lret (bad) (bad) (bad) incl sub lods mov mov roll rex.WRXB rex.WRB add cmp adc mov cld out (bad) add mov fstpt push rolq stc movabs xchg add add (bad) push imul (bad) xchg clc insb (bad) add callq in jae rex.WRX sbb (bad) (bad) jo fdivr movabs push rex.R jp mov (bad) sub iret out test adc jmpq and jmpq je bt bt clc bt sub jmpq and adc sub mov and out jle pop es cwtl rex.B fwait cmp (bad) push cmpb fwait out (bad) cmc xchg cmc jo lahf int3 sub pop leaveq test and test mov jp sub imul outsb in imul pop out test cli push in (bad) or sbb pop sub pushfq pop lret cmc cmp fwait jmp (bad) (bad) xor or retq scas (bad) pop (bad) (bad) (bad) sti (bad) outsl sub jb (bad) (bad) decb (bad) movsb imul jnp add add or add movsl and imul cmp (bad) sub movabs mov int3 stc (bad) add xchg sti rex.R mov mov rex.WX rorb or pushq clc not lods stc not jmpq add rex.RXB gs imul outsl outsb rex.WB outsw push imul pop add fidiv and or (bad) or rex.WXB (bad) cmpsl adc clc add imul push push xchg (bad) imul je rex.WXB int3 cs (bad) loop rex.RX iret stos push cmc std (bad) push rex.R ds rex.WRXB mov std (bad) xor gs sbb add add xlat mov or repnz ja (bad) and (bad) sbb (bad) ja jle pop sti (bad) jnp cmp (bad) cmp rex.RXB xor iret popfq mov cmp movabs or add (bad) xchg (bad) push jl (bad) repnz (bad) ja fstpt rex.RX rex.WX rex.RXB cmpsl loopne push rcll stos (bad) mov (bad) cmc jp adc pop xchg xorl add scas addr32 mov insb xchg callq xchg mov jns scas mov jne mov in cs or andb mov repnz ss sub push test cld lea add mov mov sub mov pop sahf rolb pop cmp rex.WR jge fdivrs mov cmp mov loope imul rex.WXB cmp mov ficompl fistp clc add jmpq (bad) sub mov (bad) outsb rex.B stos int3 sbb pop test in rex.WB or add xor push subb push and (bad) lea (bad) cli and rex.RXB imul pop lea (bad) cmovge pop and mov ja xlat xlat (bad) in (bad) cwtl pushq xchg rex.WR hlt mul mov outsl movslq test cld jmpq imul xor mov in (bad) xchg shrl (bad) repz movabs fnstcw jle (bad) (bad) (bad) (bad) fwait adc imulb ds stos xchg xor add add sbb in maxps fildl or retq test adcl lock loopne jae subb (bad) fisttp (bad) add mov fisubrl gs add test add clc movabs movabs sbb movabs cmpsb (bad) xchg mov outsl int3 in (bad) sub rex.WRX mov sbb sbb sbb cmp rex.XB rex.WXB movabs adc (bad) cmp mov add jmpq adc pushfq lahf movabs (bad) (bad) (bad) (bad) cld (bad) (bad) adc (bad) dec scas pop (bad) (bad) repnz out xchg js pop lret rex.WX add add xchg test sbb rex.WR retq sub (bad) jrcxz jg sbb test cmp mov stc xor sub adc jg cmc adc adc (bad) lahf cmp notl add pushfq insb add (bad) add ja xor not sbb sub neg jmpq jne lea not setge mov jmpq mov setne add neg cmc bsr stc add adc cmc btc mov test jmpq pop ss fs js ds in mov out movabs adc (bad) mov pushfq cmp cltd rex movabs jle cwtl (bad) cmp push mov mov jp rex.X sbb rex.WX gs icebp xchg mov (bad) or sbb jge (bad) (bad) imul fsubr sub (bad) (bad) sti clc (bad) popfq jl (bad) (bad) (bad) (bad) mov mov callq sub in (bad) add add cmp xchg cs jo (bad) rex.WR and jrcxz cmpsl and popfq insb (bad) push cmp mov sub sbb mov (bad) add mov and callq and imul lock xchg add stc imul cmc clc add jmpq jne cmc cmc clc cmp movb jmpq sub jmpq add rex.RB je jb movslq jae push and repz leaveq fwait rex.RXB sub or movabs rex.WXB and fs mov cmp loopne sub fistp jne fstpt adc rex.XB jnp rex.RXB nop and (bad) (bad) (bad) cld jle cs xchg (bad) (bad) (bad) incl jge pop pop cmp xchg mov test rex.W sub fldcw rex.RX loop rex.W mov mov mov or xor sub pushq push (bad) pushfq sub mov js (bad) mov mov lret (bad) pop loope (bad) jb enterq adc add cmp retq fs pop cli (bad) mov fiadd xchg int3 (bad) cmp add add fwait xchg push sub movsb (bad) adc pop pop xor rex.B cmp mov (bad) fstpt rex.RXB and rex (bad) mov push je mov or popfq loop rex.X movabs sub stc mov cmp mov (bad) (bad) (bad) cld adc (bad) xor scas jp rorl jp imul add movabs scas jg fisttp add jge (bad) (bad) roll push outsb mov xchg xchg (bad) ja sbb push (bad) mov mov jrcxz pop jmp out xor sahf xchg mov (bad) out jrcxz (bad) scas (bad) fs (bad) fmuls mov fbld mov (bad) je jmpq test clc cmp stc cmp jmpq jmpq (bad) mov (bad) movslq stos cmp xlat (bad) rex.WRXB jl (bad) stos movabs rex.X (bad) add rex.W mov repnz (bad) out and pop cmp (bad) shll (bad) jmp out int3 out mov adc insl adc cmp negb pop cmp rex.R push and sub stc jb sbb rex.WRX enterq (bad) sti fistl movabs scas loop pushq mov mov rex.WX sub and fsubp (bad) sub out sbb pop push (bad) test icebp outsb outsb pushq pushfq xor push (bad) mov add add jl (bad) insl mov adc cmp jae mov movabs (bad) push cmp add fstps fstl (bad) mov loopne or mov add test add jmpq jmpq sub bt test cmp cmp jmpq jmpq jmpq je mov cmc push not mov cmc movsbw sub movzbw bswap lea jmpq lea jmpq jmpq cmc cmc sub jg test bt or jmpq je clc cmp bt cmp jmpq mov cmp (bad) push repnz jne movsb leaveq cmc or xor rex.WXB movabs sbb es jge sbb mov fwait add (bad) stos and mov movsb rex.WXB fildl (bad) xchg test lea rorb (bad) (bad) jbe mov movsb sbb enterq rex.WXB imul (bad) sub lahf lods sti mov (bad) movabs (bad) xchg movslq lock (bad) (bad) (bad) std outsb jne cmpsb mov xor jle mov retq mov or mov fild outsb pushq lods or jmp rex.RB mov (bad) mov rol jmp gs xchg mov add fsubs rex.WRX callq (bad) jo jmp jle adc mov loope (bad) xchg test stc jmpq jne jmpq jmpq je sub and and push sbb bsf mov cmp sar clc mov sub lea bswap js lea jmpq stos ja adc (bad) cld cmp or movsb nop push cmpsl rex movabs (bad) add xchg push mov fistpll xchg add adc cld push add movabs push (bad) lahf out (bad) or in (bad) or retq or cmp xlat rcrl sahf imul (bad) rex.W push (bad) (bad) (bad) sti push add xchg (bad) (bad) (bad) (bad) adc js mov jle (bad) int xchg rex.WX (bad) (bad) callq xor rex.WR (bad) stos pop jmpq cltd outsb test leaveq (bad) js push sar enterq rex.RXB mov rex.WRXB fnstcw (bad) sbb rex.R scas enterq jrcxz (bad) rex.XB test lea movabs bswap mov movzbl jmpq jne jmpq movsbw stc mov bsr mov cmc rcr mov cmp mov cmp bt add bt clc clc rol cmp bt cmp neg test test clc cmp not bt mov cmp jmpq sub outsl sub neg mov test and mov or fwait rex.RX xchg mov pushq (bad) movslq cmc (bad) cmp rex.WX mov add (bad) cmp (bad) pop callq repz rex.WXB scas ror mov jnp add (bad) (bad) jmpq test mov popfq gs retq push rex.X fwait int jnp mov ds movabs rex.R cmp mov sub and movabs jle add mov fisttpl rex.B cld mov in movsl xlat shrl test pop and fnstcw adc movabs and xchg push outsb push push xchg (bad) cmp jle sbb mov cmp hlt fist xchg mov mov hlt jp jp (bad) icebp mov jmp movsl int3 repz xchg rex.WRXB or repz lret es movabs sarb sub mov sti icebp rex.XB test (bad) (bad) (bad) (bad) mov cmpsl xchg add adc add add out lahf cld out test and jb repnz fistp jne (bad) adc fs xor movabs es (bad) pushq (bad) mov rex.WR xor stos rol mov adc pushq (bad) lahf je neg clc xadd add adc sub cmc rol shld shl shr jmpq sub lret jle insl sbb rex.X (bad) (bad) jge (bad) cmpsl stc nop (bad) sar adc push sbb adc rcll rex.XB insb cmp jmpq (bad) adc js push or cmp xorl rorb ficoml mov gs rex.WRB or xchg pushq (bad) sub fistp push test xchg movabs mov ss (bad) (bad) callq jmpq out mov mov mov rex.WX sbb xchg pushq je jl retq sahf rex.RB rex.RX (bad) cs mov loop cli xchg std or adc xchg (bad) lret (bad) mov (bad) shlb imul adc sbb xchg jp or (bad) (bad) (bad) nop rex lret pop (bad) or or pop xor mov sub mov xor stc insl (bad) cmpsl rorl cmp rex.XB mov or or add andb test retq (bad) xor mov push sbb (bad) mov out push (bad) adc add xchg ja cmp (bad) in xchg and out fildll lret (bad) int in rex cld (bad) mov test rex.R mov fnstcw jns (bad) jnp mov sub insl sti sbb outsb xor enterq lock mov (bad) stos sbb lea (bad) insl jnp jne (bad) ss lock (bad) data16 add mov adc rex.RB mov xor std rex.RX nop lock add add mov mov xchg movabs pop fnstsw (bad) mov loope add jmpq (bad) sbb xor sbb push add sub rcr clc data16 testb (bad) mov jmpq and add jge jle mov (bad) (bad) (bad) cmc add add rex.RX in (bad) sti xchg (bad) int3 stos (bad) jnp int sbb mov imul (bad) in jmp fadds (bad) (bad) leaveq jns xchg jmpq mov nop mov adc cli sbb (bad) (bad) (bad) cli leaveq shr pushfq (bad) (bad) (bad) (bad) std mov xchg add loopne adc retq callq adc sub popfq sbb (bad) (bad) (bad) callq imul add in xchg sbb xlat add pop loope sarl (bad) hlt adc pushq je fs data16 (bad) add movsb cmp adc mov out retq callq jmpq movabs adc movabs mov add lret sahf push push mov imulb scas fwait (bad) leaveq cmc and xorl sub movslq sbb add (bad) (bad) movsb mov vhsubpd test fs (bad) (bad) sti in (bad) rex.R cmpsb mov or pushq popfq pop ss icebp pop retq fwait lea add add scas xor (bad) (bad) add cld or mov in fidivl and lods mull jp shrl pop rex.X loop movabs xor push cmc stos add add jo js subb test mov mov test loopne callq test and rex.W subb stos mov mov stos callq stos or add add add and cmp push movabs js andb stos sbb rex.W pop stos pushq stos cwtl stos test mov stos callq stos sbb stos add add add int3 add add stos mov stos shrb callq stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs lods enterq fsubrs lods clc lods add sbb xor lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs add add jo andb shlb add xor (bad) movsl jo andb movsl shlb movsl add xor (bad) cmpsb jo andb cmpsb shlb cmpsb add xor (bad) cmpsl jo andb cmpsl shlb cmpsl add xor (bad) test test test test test test test test test test test xor (bad) test nop test shrb stos shrb stos loopne callq stos add sbb xor push stos pop stos (bad) stos pushq stos subb stos mov mov stos fsubrs lock clc stos add lods pushq lock or add rex rex.W push movsb pop movsb (bad) movsb pushq movsb andb movabs movsb enterq fsubs movsb clc movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb movsl movabs movsl enterq fsubs lock clc movsl add sbb xor rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb cmpsl movabs cmpsl enterq fsubs lock clc cmpsl add sbb jo js nop stos add add add test pop test jo js subb test mov mov test loopne callq test adc sub stos rex.W push stos pop stos (bad) stos pushq stos nop stos cwtl stos movabs stos enterq fsubrs lock clc stos add sbb xor stos push stos pop stos (bad) stos pushq stos subb stos movabs add add pop lods pushq lods cwtl lods test mov lods add add mov push scas add add add jo cwtl movabs shlb movabs or and push movabs mov mov cmpsl shlb callq cmpsl add sbb xor rex.W test test test test test test test test test test test test test test test test test test test test test test and cmp push test pushq test nop test test mov mov test loopne callq test adc sub stos rex.W push stos pop stos enterq or mov mov mov stos shrb add add movabs js andb movabs and movsb callq movsl xor movsq push movsl (bad) movsl add rex rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb stos sbb xor stos push stos pop stos (bad) stos pushq stos test add add add sbb (bad) add add xor rex.W push scas pop scas (bad) scas pushq (bad) add add shrb add add adc shlb movabs loopne or mov add add add mov (bad) (bad) add add ss add add add add stc stos add add add add movabs add movsb and stos add add or int3 add add stos callq stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs lods enterq fsubrs lods clc lods add sbb xor lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs scas enterq fsubrs add or pop add add movabs or and push movabs callq movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb cmpsb (bad) cmpsb add add add add movabs mov mov cmp cwtl cmpsb mov cmpsl sbb xor callq test cmp pushq test mov test or cmp (bad) stos pushq lods rex lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas shrb scas loopne callq scas add xor add add add lock sbb xor movabs callq movsl push movsl (bad) movsl mov fsubs (bad) cmpsb add xor setnp push mov add cmc push sar neg (bad) lock push jne clc mov push shl jg test mov rcl sbb neg bsf mov rol sub test mov and neg ror stc sub not mov lods adc sbb adc sub jae rcr not clc xor not sub cmc ror rol mov setns stos setbe mov jmpq push jnp xchg (bad) adc mov fwait push sbb mov stos rex.WR rex.X (bad) mov push pop cmp (bad) repz pop mov fistpl rex.WRXB (bad) mov xor sarl jp fsubs and shlb (bad) js jno loope stc movabs mov add add mov popfq movabs fcmovb sbb xchg mov int3 pop xor mov rex.RXB movslq in mov data16 repz (bad) lahf (bad) mov (bad) xor cmpsb outsl sub jnp (bad) lret cmpsl sbb sbb fnsave callq rex.R mov sbb sub fnsave retq adc je rex.X xor movabs lcall int xor xchg ja scas sbb sarb (bad) (bad) (bad) decb sbb lods imul jmpq jo sub adc mov (bad) mov (bad) stos mov rex.R fmuls cmpsb out cmp rex.WB rex.W jns lods add fist rex.WRXB in (bad) adc cmp mov xor rex.X add mov repz (bad) movsb lods (bad) sub pushq (bad) mov lahf int pushfq js outsb cmp mov add xchg adc xchg rex cmp pop pop sbb mov psubusb xchg movsl imull (bad) sub jae loopne (bad) cmpsb rcr (bad) cmc ds loopne popfq mov imul (bad) (bad) sti mov (bad) (bad) (bad) incb cmp movslq xchg mov cmp sahf sti rex.WRXB (bad) add movabs iret (bad) xchg retq (bad) shrb sbb mov rex.B cmp add fstl jbe gs stc push (bad) and push test (bad) test (bad) popfq cltd out ja (bad) adc push callq faddp push fisttp hlt es adc hlt movabs adc add mov jmpq jmpq jmpq (bad) mov mov mov test rolb adc add fsub mov movabs and clc callq rex.R addl cwtl mov and xor xor mov shrb outsb addb retq repnz (bad) mov (bad) (bad) (bad) inc (bad) ror sbb sbb out cmp push rex.R mov leaveq (bad) xor (bad) insb scas lret mov pop pop imul xor rex.RXB (bad) mov movsb add rex.XB cmp jns mov cmc jmpq cmp jmpq add jmp pop std xchg rex.WRX (bad) cmp xor cs rcll faddl push cmp icebp (bad) add (bad) adc addr32 push mov pop int3 rex.B subl test sub sub mov sarb out (bad) mov mov lea notb mov (bad) (bad) std or shll pop cltd xor jl mov test movabs mov fildll rex.RX (bad) popfq callq xor jl (bad) (bad) (bad) (bad) jmpq movabs (bad) (bad) (bad) mov rolb idivl or jg out (bad) (bad) sti (bad) xchg pushfq and pop (bad) jge popq push rex.WRXB rex.WXB xchg es fcoms insl pcmpeqw xchg loopne mov outsl int mov mov (bad) (bad) sarb es stos sub jmpq jmpq not setbe movsbq lea jmpq jmpq jmpq fsubrl test movsb push sub (bad) jnp add add pushq xchg sbb xchg std rex.B and lods jp (bad) pop jae ffree sbb mov outsl or movabs mov mov std outsl or and (bad) idivb comiss sbb cli mov xchg sbb fwait js stc (bad) (bad) (bad) (bad) mov jmpq (bad) inc and insb int in lods in mov sub movabs test or movabs cmpsl rex.WR out mov cmpsb cmp stos lea fwait outsb xchg add mov rex adc leaveq pop or pop mov mov xor pop lahf fldcw sbb (bad) (bad) push jns fistpll retq jbe rex.WRX lret mov jle (bad) pop xor jge mov push push rex.WB cs insb add jb rex.WRX (bad) and (bad) (bad) cmp jmpq retq scas push cmp sbbb and xchg push movsb rex.WB (bad) cltd push cmp jg xor push es test retq push add out or callq xchg loopne rcr mov int3 rex.R idivl repnz and (bad) (bad) sti jne adc (bad) (bad) ss rex.WRXB imul (bad) rex.WX sbb (bad) jg sub mov (bad) (bad) (bad) (bad) fsubrl movabs subl sti movsb sbb xchg cmpsb sbb test pop and mov mov mov adc ljmp (bad) jmp mov (bad) loope mov mov clc cli mov mov (bad) pop cli int and ss movsb sbb xchg (bad) lods stos rex.WXB push xchg lods pop pop and jg fxch (bad) cmp int3 stc and sbb fcmovnb rorl cmpsb jrcxz mov test movabs mov (bad) or sub fstl imul push xchg sbb xchg popfq cmc jmpq int imul mov rcrl or and loopne (bad) push sar (bad) (bad) sti rex xchg movabs xchg adc jbe in cmp roll mov cmp (bad) incl (bad) lret rex.WX pop mov rex.WRB je ss loope jle rex.W mov sarb jo pop adc or (bad) pop retq sahf lods mov stc push out adc xchg rex.WB xchg movabs outsb roll or out (bad) sub jae cwtl shlb xchg lods adc cmpsl rex.WRB imul jg mov (bad) mov xchg mov imul mov mov add loopne add sbb (bad) (bad) (bad) (bad) cld (bad) xor (bad) (bad) loopne lods push (bad) and mov xor out (bad) movabs (bad) fstl ds rex xor fs outsb loope adc xchg add test incl add add jmpq (bad) cmc rex.WRXB mov cmp jg (bad) mov jmp repz mov rorb adc (bad) enterq loopne (bad) ja and fnstcw adc adcl (bad) add pop (bad) and push jrcxz movabs imul pop xchg push rex.WRX sub jg or and ja retq mov (bad) lahf iret stos (bad) mov iret or (bad) insb pushq and (bad) mov and xor rorl rex.X rex.R cli out movsb (bad) (bad) (bad) callq cmp add (bad) (bad) (bad) inc (bad) mov push mov (bad) lret add add pop faddl jg cld add insb fimul rorb jae jae push rorb out lea (bad) sub test out (bad) adc int3 xchg adc adc mov xchg movabs test fidivl mov sub int mov sub mov push (bad) rex.WRXB rex.WX test adc adc sbb mov jmp mov cmp sbb lods out mov movabs out mov out and mov rex xchg addl (bad) jno adc jno icebp (bad) (bad) (bad) cld adc (bad) (bad) (bad) (bad) (bad) lret cmp xchg or lods add add push xlat lret idivb xchg (bad) adc pop rex.RB rex.WB rex.XB (bad) (bad) cli push insl or test subb or movsb adcl rex.W rex.WXB fcmovnu (bad) repz (bad) mov std rex.RXB imul mov div loope or rex rex.WRB psubsb xchg add rolb mov (bad) (bad) or xchg adc or pop gs mov test je sbb sub adc xor imul test (bad) (bad) (bad) cli loopne test jbe (bad) (bad) std movabs fmull shl jp lods rex.W xlat (bad) sbb retq repz cmpsb cmp jnp lret sti lods fdiv fidiv push sbb sbb mov movsb iret jno,pt pushq stos fidivr sbb cli pop or (bad) push (bad) (bad) (bad) inc sbb icebp pop (bad) pop push mov cmpsb rex.WXB (bad) fdivrs rex.RX xchg xor (bad) insb (bad) pop xor insl retq lret mov xchg sbb pop rex xorb adc fisubrl leaveq jmpq ja adc sub cmc cmp bsf add btr btr jl btr mov inc not cmp sub mov stc bt cmp bt repnz jmpq test clc repnz jmpq sub lods cltd lods mov movabs fdivs mov cs outsl cmp (bad) jmp fisubrl (bad) out icebp std pushfq rex.WB mov pop adc rex.X scas add stc pop mov sti or fs mov divl pushq (bad) (bad) (bad) cld scas cltd rex.WX mov jno in popfq stc hlt (bad) jmp sbb movsb (bad) xchg mov lea or cmpb movabs (bad) cmp mov (bad) jb add add mov rex.XB (bad) mov es push (bad) rex.WR (bad) jg mov out rex.X movabs test or sub std int3 (bad) rex.RB mov dec in cmpsb jmpq add popfq rex.RX clc clc xchg (bad) movb addl mov (bad) adc (bad) ds scas (bad) cmp add sbb jle sub rex jne mov push pushfq movabs pushq in rcl pop pushq rolb sub outsl mov jge (bad) (bad) (bad) cld jg shrb (bad) (bad) (bad) incl movabs ds test (bad) popfq test lret pushq push xrelease add jl jg (bad) fstpt pop or (bad) sub movsb rol and repnz sub outsb push test scas xchg je pop adc test (bad) fidivl cmc mov (bad) add jbe shld mov add data16 (bad) or out or rex.WRB or bsf mov rcr clc not add movsbq jmpq jne btr mov clc or jmpq jae bt xor jmpq jmpq bsr jmpq movsbq mov jmpq (bad) adc pop insl (bad) cltd (bad) (bad) cmp repnz fldcw add cmpsl sarb test jg movsl adc jl or std fcmovnbe cmp mov pop cwtl (bad) cs movslq jg (bad) mov add callq xlat cmp (bad) rex.WRB add adc rex.WRX cmpsb sbb push rex.WRXB (bad) and push (bad) jl ficompl jbe out mov fwait and sti pop iret cmp pop (bad) (bad) (bad) (bad) sbb cwtl pop cmp cld retq pop sub sub cmp (bad) lcall jae rex.RB mov adc or or adc (bad) xor test adc sub sbb nop out xor push add push gs fwait mov add mov add not lea lea lea mov xchg mov js movzwl bswap lea movsbw movabs movsbw jmpq callq mov sar shl add movzbw mov test test cmpb jmpq sub xchg js rex.RX xchg cmc (bad) mov mov (bad) mov (bad) jmp adc icebp jrcxz mov (bad) jne js int3 adc push pop imul push push insb stc stos (bad) nop cltd mov jmpq mov (bad) cld shrb sti ror mov jmp xchg xor or jle jp add imull movabs mov add add jne (bad) mov pushq enterq (bad) (bad) sub test fbstp cmp and cmp callq sub out negb sbb (bad) mov add mov mov test (bad) add add lret add xchg retq mov add rcl dec sbb cmp xchg inc adc bts jmpq pop jno jp cmp sahf cld out loopne jne (bad) jg (bad) test adc out and (bad) (bad) movabs and stos pop mov movabs fidivl add rex.B jb xchg mov rex.WB rex.RB shrb sbb jae (bad) sub andl sub cmp (bad) pop mov mov cmp (bad) (bad) (bad) std or movsl (bad) (bad) (bad) std xchg cmp jnp in (bad) (bad) hlt (bad) lret js (bad) scas pushfq (bad) movsb (bad) loopne (bad) movabs mov add add or lret callq pushq cmc cmpsb sub rex std mov xchg mov movabs xchg test jrcxz adc (bad) (bad) fcoml adc and mov data16 int3 pushq int (bad) sbb mov add pushq adc shld dec mov shld bts sub bt sub bsf mov bt jmpq lea neg rcr sub neg bsr not dec mov or neg and add stc inc not stc mov jmpq test pushq cmp cmp jmpq jmpq push push xor xor fs insb add xchg loope add neg sub bts sar rcl sar add xor dec bsr bt mov xor mov jmpq stos jmpq ja jmpq push sbb enterq sahf rcl sbb enterq (bad) xchg rex.WB push xorb xchg rex.B rex.WRX addb je xor cmc pushq callq (bad) iret cmp fcomip lea mov insl mov sahf cmp cli mov mov fcmovnbe mov nop xor push rex.W pushq clc push (bad) retq lock (bad) (bad) cld xor (bad) pushfq (bad) (bad) (bad) (bad) repz mov mov cld imul jmpq jae xchg jg mov rex jbe push sub and fsubrl loop movsl je sti pop fimull or je (bad) rex.WR mov imul pop vpsubsw cltd mov movabs mov or or xchg xchg or fadds add push pop cmp mov adc out lret movsl movabs xor (bad) pop notl jo shrl xchg iret sbbl imul nop (bad) movabs sti repz xchg (bad) (bad) std rex.XB nop and std loope outsl jmp mov cvttps2pi sub (bad) (bad) (bad) cld rex.WR rcll mov and (bad) rex (bad) fnstsw faddl negl js (bad) stos add add je push xor cld xchg mov mov (bad) (bad) jge or (bad) mov sahf sub push jns adc imul add in rex.WXB ja mov rex.X (bad) cmc movslq push sub jne jmpq jbe jne (bad) iret rex.WXB push pop sbb out adc cmpsl jne (bad) pop ss imul and lods sbb cmpb imul cli xor cmc test (bad) push mov int3 xchg sub jns scas sbb jbe stos rcr rex.WXB cmpsl (bad) rex (bad) faddl retq std fisttpl xchg fidivrl pmuludq iret test (bad) (bad) (bad) sti (bad) rclb mov (bad) (bad) (bad) cwtl addr32 xor add add sbb pushq xor retq scas movabs or cmc rex.X sub rex.WB ss cmpl test hlt rex.XB pushfq movsl lret (bad) lea and jnp mov mov (bad) (bad) ffree pushq rol scas fidivr out adc mov int test retq (bad) cmp movl es xor out or (bad) (bad) and or mov mov jp notb rex.WXB sub sti rex.WRB lods push cmp or adc pop (bad) repnz cmp jne jl jns cwtl rex.WX push frstor and adc cmp movsl popfq cmp (bad) (bad) (bad) cld cmp mov (bad) cli or rex.WRB (bad) test jb xchg pop xchg (bad) (bad) je (bad) idivb (bad) (bad) rex.WRXB clc push lock hlt int jmp push add add jge lods mov out cmc or in (bad) push xchg (bad) pushfq or ja sbb cmp mov stos mov imul sub and adc (bad) sub push sbb scas (bad) out (bad) cmp pop add or (bad) and cmpsl js add rcll test mov rex.RXB sti (bad) sbb js sub cld xchg adc jmpq rex.W (bad) sti cli callq movslq adc pushfq jo notl (bad) (bad) shrl in push mov or movsl gs (bad) (bad) cli ss (bad) (bad) cld repnz retq or ja retq test out rex.XB jae (bad) (bad) (bad) (bad) jb callq mov sub adc jl movsl lahf (bad) lods (bad) fisub mov pushq rex.RB pop jg push (bad) sub icebp mov adc add jle rclb fstpl loope mov (bad) movabs lock (bad) or sub shrb add sub je rex.RXB scas xchg (bad) rex.WRB nop or movsb cmpsl sti ja (bad) out xchg and cmpsl (bad) (bad) (bad) push adcb cmp xor and out rex.R mov rex.W (bad) xor (bad) sub jmpq pop jge jp sbb and mov or iret (bad) pop je clc bt bt sub test cmp jmpq gs add (bad) mov rolb mov int3 sub cmp in fldcw and (bad) (bad) adc fildl cmp sbb stos movsl jmpq cmp xor mov (bad) jbe xor or or xchg roll jo (bad) insl mov loop xor (bad) (bad) (bad) cld xchg pop movabs xor loop jp add test push insl (bad) (bad) pop or add add cmp sbb mov sub sub jge enterq xor int imul lea (bad) cmpsl movabs mov mov cmp mov or outsb or clc cmc clc cmp cmp jmpq rex bnd (bad) rex.RXB ss jno je sub sbb mov xchg adc cmp rex.WR adc hlt lahf adc hlt rorb mov fs fidiv in rex adc lock lret scas outsb cmp mov jo push retq movslq enterq push (bad) mov rex mov (bad) (bad) (bad) sti mov adc (bad) (bad) (bad) cld or sbb mov mov adc cs mov (bad) (bad) xorl scas ja pop jae callq (bad) (bad) (bad) decb mov add add or fdiv rex.WXB test jge int rex.WRB jmpq mov enterq stos test push mov popfq fdivs sarb ror insb (bad) and or fwait insl repz adc (bad) lahf jmpq (bad) fs and movslq cmpsl rcrl and or rex.XB mov or div xchg bt bt cmp shr test test cmp jmpq jmpq bt cmp jmpq rex.R rex.WRX push rex.WB cs insb add (bad) add std pushfq rex.X test add lret icebp or lret in rex.RXB push rex.W and (bad) movsb rex.WXB pop sub jnp mov and mov adc or mov orl xchg jns loopne fdivrs cmp movsl clc jrcxz fistp (bad) jb mov xor rex.WXB jae and sahf decl (bad) repnz or bswap movzbl mov mov not bswap mov retq mov neg clc dec or mov stc jmpq lods and mov mov xchg push scas decb adc sti cmp push xchg fsts cmp mov pop fbstp icebp and (bad) rex.WXB mov lods (bad) shr (bad) mov rex.WRX mul rex.WRX callq xor incb mov addr32 or jo ss sbb imul in loope scas test sub sbb (bad) (bad) sti movsb imull mov (bad) (bad) (bad) (bad) data16 fldenv icebp test jl xor cld (bad) (bad) (bad) jmpq cwtl mov test (bad) test jge xchg fcmovnb scas mov fidivl cmp and mov pop cmp leaveq movsb mov mov adcb insb fildl (bad) (bad) cmp stos mov pop jp cmc mov push xchg jb pop cmp in (bad) movabs jne fucomip (bad) adc push rex.X pop xor pop xchg adc mov rorl scas and testb (bad) mov jge mov rclb mulb mov (bad) xchg (bad) (bad) cli (bad) rex.WRXB rex.WXB ja (bad) (bad) std stos xrelease popq (bad) or mov (bad) (bad) fldenv (bad) jle outsl adc stc xor xchg (bad) mov mov (bad) mov (bad) jne mov (bad) push subl add (bad) callq xor and rclb sbb data16 pop lret in push icebp movabs xchg and jne imul mov (bad) lahf mov leaveq jmpq je bt cmp retq jmpq add mov jp push jbe (bad) (bad) hlt cmc out nop roll xor lahf rex.R (bad) ja cmpsb clc hlt jmp lahf test (bad) pop pop subl (bad) imul pop (bad) sbb stos mov pushfq out push rex.WXB sub fdivp in test xor (bad) cld (bad) retq add data16 (bad) (bad) dec addr32 xchg (bad) movslq adc neg lahf rex.WB fisttp insl rex.B rex.WRXB fdivl xor add add adc mov js test (bad) cli push pop std add sub fidivr adc out mov and mov adc out mov sets add test add rex.XB xchg flds add xor (bad) decl clc div neg je js rex.R js (bad) mov lahf rex.WX or jb jbe nop sbb ss in xchg (bad) adc mov fistpll repnz cmpsb add movslq movabs add adc mov sbb (bad) int3 jns fwait (bad) cmp mov mov imul jae xorl test cmpsl cs rex.B fwait (bad) (bad) (bad) cld es sub sar (bad) (bad) (bad) callq push adc rol add (bad) (bad) rex.WXB xor pushq mov int3 sahf xor and movabs adc movslq xlat xchg (bad) imul mov jne fs push add (bad) mov stos and mov adc subl icebp adc mov mov fisttpl (bad) rclb repnz sbb cli cmc out mov push outsl pop add out xchg movabs mov or mov (bad) (bad) out test mov sub movslq xchg (bad) jb insl rex.WRX push (bad) fsts (bad) mov nop std pop mov rex.WX rex.WB sbb iret (bad) add jge rex.WR jrcxz rex.WRX retq mov pop xor jg rex.XB cmc (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) xchg in (bad) mov nop rex.X rex.WRX and sbb (bad) fdivrl pop xchg mov add scas test cld stos data16 (bad) jb outsb jmpq pop jl divb push mov mov pop cmp or repz adc pushfq es xchg in (bad) (bad) jmpq mov mov pop or (bad) out fdivrp in in xor lret (bad) mov rex.WRX lods rex.WR addr32 adc hlt clc stos (bad) lret (bad) (bad) mov test negl (bad) rex pushq mov pop (bad) rex.WXB push movsb xor push rex.WXB sub (bad) sti xchg push add incb jmpq loop or pop sub jnp or cli nop rolb pushq mov cld imul push hlt mov add jl ftst mov (bad) cs pushq rex.B fst jo xor (bad) mov lock enterq korw xor loopne repz retq adc rex.RB add movslq mov adc ss fisttp movabs (bad) push xchg retq rex.RX rex.WRX es sbb jmpq rex.R ss jae cmp insb movslq xchg (bad) jl test cmp rcrb mov shrb jne retq mov sbb (bad) jbe int iret sarb (bad) loopne loop nop rex.RB (bad) sti callq jrcxz jbe (bad) (bad) inc jge iret std jo sbb or int3 in and mov rex.WRX movabs rex.WX insl jb test or or fwait mov rex.WRX or out jmp nop jb xor outsb rex.WRXB add (bad) and pop cmove or stc (bad) (bad) movsl mov int3 push imul cs (bad) add (bad) out test je (bad) jbe (bad) and cmpsb rcll xlat retq xchg pushq adc js add in mov mov pop retq jmpq jmpq jmpq jmpq jmpq jne cmp rcl dec sub jmpq adc jmpq sarb xchg movslq cmpb (bad) mov push xchg (bad) pop jge jrcxz and leaveq (bad) xchg faddl lods in and or add fwait (bad) outsl mov xor add jne mov mov mov xlat mov jmp movabs and callq pop stc in mov fidivrl rcl mov movabs mov adc (bad) insb pop or push nop mov rex.WRXB rcr adc pop jbe sub rex.RXB (bad) retq sub mov (bad) pop jb jne subl lret (bad) lods xchg mov cmp insl xor or (bad) and movabs jb xchg int3 loop mull mov (bad) insb or rex.WB pop jbe sub mov cmp negb jmp cmp idiv (bad) (bad) decb (bad) (bad) (bad) (bad) xchg (bad) scas jmpq movabs test lods mov cs lods addr32 push movabs movabs add loopne (bad) jbe xor sub xchg xchg out (bad) fbstp std mov in xorl sahf loop add xabort bt cmpb jmpq jmpq (bad) (bad) and movsl (bad) or cmp pop (bad) nop rex.WR push jno scas sbb std in pop test fstps sahf mov and and add sbb or lahf (bad) sbb int mov (bad) or (bad) rex.WX (bad) (bad) sti in fcmovne xchg (bad) (bad) (bad) (bad) (bad) scas jle add add out in pop adc (bad) mov jp mov repnz mov sub repz clc jg movabs xor xor shlb xor cmpsl (bad) (bad) xchg retq (bad) and movsb andb xor addr32 loope out sub mov cmpsl pop repnz xor mov rex.WR xchg ffreep sbb mov (bad) rcr push sbb rol (bad) (bad) mov jae clc jmpq callq dec add shl add sub mov cmp stc cmp cmpb jmpq jmpq je cmp test cmp jle je jmpq xlat add movabs xchg imul (bad) fisttpl add add xchg mov adc xchg cmp loop lock out (bad) icebp pushfq jl stos xor outsl xchg mov jo rex.WRX mov rex.X leaveq sbb (bad) (bad) jmp repz cmp push cs (bad) (bad) (bad) cld (bad) or in jl (bad) (bad) (bad) clc cmpsl or mov int (bad) sbb rclb pop jg (bad) add add jns xor push pushq sub and cmpsl (bad) in sub jo (bad) out pop adc sub stos (bad) (bad) (bad) (bad) jne lods outsb (bad) jno push stc (bad) (bad) jmp push (bad) jns adc mov (bad) retq icebp jmpq jmpq jmpq jae shld mov je shl mov btc sub mov test sub stc repnz jmpq mov jl jb (bad) and gs (bad) out (bad) jge je (bad) (bad) (bad) (bad) pop data16 sub ja test in in rex.WX jns flds adc scas adc enterq mov ss (bad) mov ss mov sti cli (bad) popfq rex.WR (bad) movabs rex.WXB pause rex.WRB sub (bad) or sbb mov pop mov and (bad) (bad) (bad) (bad) (bad) rex.WX (bad) or and fprem1 movsb rex.WX (bad) (bad) (bad) lcall add lcall mov rex.WX or cmp adc ss fnstsw (bad) jbe (bad) xor lea outsb in out cmp test pop out xchg movabs (bad) pop (bad) mov cld add jl xor rex.R data16 cli adc add jrcxz (bad) repnz push cwtl pop pop xchg cs sbb (bad) xchg movabs iret cmc cmc jrcxz repnz mov adc (bad) mov test add jnp imul sbb and test sti (bad) or or (bad) (bad) std lock retq (bad) xorl imul rex.WX scas xor cmp (bad) leaveq lea out test jbe in jo mov stc xchg jnp movabs rex.RB movsl (bad) (bad) fs (bad) pushq loopne repz insl jae movabs dec push xor (bad) and enterq popfq mov jb xor notb out rex.W push sub mov sbb sbb (bad) jno add imul rex add mov rex.RB lret mov fsub repnz cmp mov cmc lods (bad) cmp sbb ds rex.WXB sub icebp mov rex.XB and push nop add (bad) rolb jne jmp (bad) je mov or adc je popfq sbb lods insl (bad) sar (bad) (bad) cld cltd movsl rex.B (bad) (bad) (bad) (bad) lcall mov rex.B mov pop cmp cmp int movslq xchg pop adc add add je movsb stos mov sbb movabs sbb fldt mov and rex.RXB (bad) (bad) es mov (bad) jmp imul cmp rolb jg and push (bad) outsl mov sbb test rex.RB add repz and or mov or cmp stc rcr add jmpq add push push rex.B rex.R insb imul movslq je add addl add int add stos insb pop stos push ss mov lret retq rex.RX and or lods pop push rex.X outsb pushfq sbb and movabs rex.X (bad) (bad) (bad) (bad) push cmp cmp xchg mov xchg int3 ds mov lret mov lock test xchg pop lock scas sbb jp (bad) (bad) mov int rex.WX sti insb xor add (bad) (bad) (bad) sub repz std imul lods mov fs (bad) stc in mov (bad) and test add out sbb mov mov hlt add or (bad) (bad) jp rex.X std add fnstcw negb outsb adc rex.B add jmpq loop pop adc mov sbb (bad) sbb leaveq jg add (bad) sbb add adc jmpq xor leaveq scas sbb pop and insl (bad) pop ds rex.RB mov or or (bad) mulb cmp mov mov icebp xchg stc pop fs push xchg addr32 adc test int ficoml int push cmp xchg rex.WR rex.WX (bad) movabs mov ss rex.WXB mov nop fsubrs (bad) (bad) decb (bad) (bad) (bad) (bad) mull test test cltd rex.WRXB callq add in sbb sbb ss jo (bad) and jne (bad) jbe rex.WRX stc shrb shrb mov stos or xchg mov (bad) xor (bad) jae and xor jle xor callq or lahf mov mov (bad) cwtl mov ja jmpq jmpq bt stc test cmp jmpq add or sbbl sub rex.RB (bad) movslq imul pop xor adc adc scas vcvtss2si (bad) repnz xchg (bad) je out pushfq push or cld addl test lods mov sub and mov and mov shrb add int jo (bad) (bad) sti in sahf in outsb repz (bad) (bad) (bad) scas rex.X and xor (bad) fidivl (bad) test repz xor xor in xor retq (bad) pushq cmp adc (bad) push sbb or (bad) fldcw imull test cmp ja test jmp and and rex.WRB xchg popfq mov pop in xchg mov clc rex.RXB rex.WR stos fidivl xchg testl rex.WRB fs imul js add subl add callq cmc clc bt sub jmpq adc in (bad) sbb je and push pop and sub and leaveq std and (bad) ficoml rolb leaveq (bad) adc mull (bad) mov (bad) int popfq sub loope out (bad) imul sub lods (bad) push jb rex shl mov mov cmc cmpsl stc retq test cmpsb clc adc (bad) mov mov cmp mov and stc jl stos mov (bad) (bad) std rex.WRX mov add lea cmp (bad) mov retq mov icebp mov shrb insb rex.R mov mov rcl adc pop mov xchg nop (bad) pushq movabs fisttp movabs sbb cs rex.B lock xchg mov adc push sahf cvtps2pi sti out roll xchg jne nop (bad) push movabs rolb movsl (bad) cmc xchg callq mov (bad) (bad) and (bad) imul jp shlb xchg jb (bad) (bad) cmpsl cmp lret shlb mov xchg (bad) rex.WRB rex.X (bad) xor nop (bad) int cmp sbb mov mov adc test and je adc (bad) rorb add fcmovnbe movabs pop fnstsw out rcll js fisubr pop js loopne cmpsl mull xchg int3 retq cmpsb rex.RXB (bad) and mov xor mov push enterq cmp bnd xchg lret xlat mov int3 xchg xchg xchg mov js rcr mov cld add lret jne mov fiadd jae,pn lret lret cltd sub popfq lods jge rex.X push incb adc rex.XB rex.WRB mov and xchg ja jmp cmpsl stos adc test lret faddl or out mov mov xchg cmp cmp pushq xor pushq jp decb retq push xchg add jle rex.WRB int3 outsb xor lods outsb (bad) cli sbb in (bad) mov repnz movabs movabs cmp (bad) (bad) (bad) jmpq push sbb rex.B callq cmpsl cmovno lahf or (bad) mov (bad) enterq je loop fs loop add add add movsl mov cs (bad) movabs push or rex.X int3 pushq cld pop cmp loopne pop pop mov push rex.X retq xor xchg sbb adc xor xchg add out add (bad) mov or xchg sub or movabs fldenv sti lea fsubr fldl pop push mov loope jrcxz mov out mov cmp rorb pop jrcxz loop add and scas push (bad) sub adc shl xchg int3 jbe js fldenv push push mov (bad) decb rex.B outsl and ds xlat xchg (bad) in sub xchg mov cmovl cmpl leaveq mov add stc loope pop (bad) (bad) (bad) (bad) xchg (bad) movabs xor std pop adc fiadd (bad) xor mov data16 adc (bad) (bad) (bad) jo jmp cmp sahf data16 rex.R rex.B not jp (bad) mov xchg movsl mov and clc insl jb callq xor sbb inc shl mov stc clc jmpq jmpq (bad) (bad) in (bad) lahf (bad) test cld sarb jg adc rex.RX sbb out int3 repnz mov (bad) jne mov and mov (bad) pop (bad) or mov imul mov cmp mov mov jmpq outsb sbb jge clc pushfq loopne,pt icebp test out or data16 (bad) (bad) (bad) cli leaveq jrcxz loope (bad) (bad) (bad) std mov (bad) mov jne shlb jg sbb xchg mov jrcxz fcom (bad) lods lock movabs outsb pop rex.WB (bad) (bad) (bad) pushq mov rex.WX xchg ds jno icebp pushfq cli loope mov adc (bad) mov jmpq adc test movabs cmp sbb mov and push (bad) cmp add add sar mov sbb add jmpq clc test repnz jmpq cmp jmpq add rex.RXB gs gs imul movslq sbb shll mov push cmpl push push adc or rex.W fwait and adc cmp (bad) sbb rex.WRB push imul rex.B ss (bad) sbb enterq mov out fwait xlat in pop (bad) (bad) (bad) sti adc stos (bad) (bad) (bad) std (bad) js and (bad) cmpsl jg ss mov jo fildll out (bad) lar rcll (bad) (bad) (bad) (bad) std (bad) ficomp sbb or sarl mov icebp mov clc (bad) cltd sbb hlt pop (bad) (bad) rex.WRXB je rex.RB cmp rex.WRX lea adc xchg sub mov and js scas rex.B rex.R push xor cs insb add rex.WRXB icebp movabs mov push sbb add (bad) iret icebp movabs pop push xchg rolb lret add lcall rcrl mov sarb xor mov and mov mov lods rex.XB rolb xlat mov mov ja (bad) cld (bad) shrb popfq xor insl mov xchg rex.WRX add mov (bad) adc pop xor mov (bad) (bad) (bad) sti jns scas fmuls cmp mov jp (bad) repnz sub ds (bad) (bad) (bad) (bad) mov jnp cmp xorb movabs xchg cli push fisttp ds push jmp cmp (bad) jo mov iret lret pop cmp (bad) pop leaveq imul jmpq xchg and jne andb imul mov in pop movslq ds mov incl vmovups repz adc out and mov test test xchg (bad) mov cmp nop jns outsb xor sub (bad) rex.X (bad) mov cmp or (bad) (bad) (bad) cld xchg movslq (bad) callq and rex.WRB (bad) pop out xlat adc (bad) and add pop xchg rex.WRX es in sub fidiv xchg push rcll add add ss and fwait cmp outsl movb movabs xor int3 xchg cli loope (bad) (bad) and cmp xchg rorl fidivrl loope jg mov mov es orl jge decl test add jmpq jae lea rcl jmpq test add jmpq jmpq sbb fcomi fwait movabs mov (bad) cmp (bad) lret repnz or (bad) (bad) mov and retq int3 mov out add jge stos xlat hlt and cmpsl xlat bswap xor (bad) (bad) sub pop jg fisubr (bad) (bad) push sub xor (bad) cmc fwait in rex.WRB (bad) push jnp xchg cli rex.WR or and je sub cld and test jl (bad) (bad) (bad) in (bad) (bad) mov in mov cmp lret mov add add movslq pushfq mov retq xchg jo (bad) andl add sbb mov (bad) (bad) cmp mov jbe (bad) movsl scas pop repnz mov or mov add mov (bad) pop out cmp jbe add pushfq rex.WX rex.X jrcxz mov adc sarl jrcxz sub pushfq lods sbb mov repz mov cmp mov sbb jl test add retq callq xchg xor (bad) rex.WRXB mov jrcxz or xchg mov xor pushq fstpl mov ja (bad) xor movabs jb (bad) xchg jbe loopne cmp cs sbb adc adc (bad) jo shrb mov cmc in cli icebp mov roll cld iret (bad) mov add add jl fs pop sbb (bad) add jns sbb int or es rex.WRXB sub add movabs orl add callq mov sub jbe lods jae jae jne ja stos jmpq jmpq movabs es mov cmp movl out pop cmp cmp mov jle enterq xor jle xchg xor js es sbb jae (bad) mov cli push (bad) cmp sub add sub adc adc rex.WB rex.WRB (bad) jno sbb mov callq (bad) and rex.RB cmpsb nop movslq pushfq sbb sbb xchg cmp xor loop sqrtps cmp (bad) in rex.WRX rex.WRX xchg sti (bad) lahf cmp pop jo mov xor movsb mov xor in pop add out movabs rex.WB jmp rex.WXB rex.RXB pop pop jl pop cmp (bad) ss movabs pop jrcxz (bad) out (bad) int3 and repnz sub insb cld repz cmpsb mov sub or movabs rex.RB (bad) rcrb (bad) rex.WXB retq mov jmp clc je insb (bad) sub (bad) (bad) (bad) fildl push cmp pop push mov (bad) add stos sarb rex.WRB jge or jns jne (bad) (bad) sti (bad) in rex.X (bad) (bad) inc lea add (bad) xorb add add (bad) rex.WX xchg (bad) popfq std (bad) lods or in (bad) push cmp mov push (bad) jnp mov imul adc clc outsb add lea xor mov rex.WB cs rex.WR rex.WR test add movzbw clc shrd add or lea mov jmpq push (bad) pop gs xchg out push (bad) lock sarb xchg or and mov and rex.RB repnz (bad) loop mov jrcxz add movabs (bad) in mov cwtl sbb mov (bad) scas rex.RXB or (bad) mov pop jbe and loop push jg sbb andl xchg callq (bad) movsl adc (bad) mov xchg nop (bad) int3 in pop push xor (bad) (bad) (bad) sti imul (bad) (bad) (bad) sub cmpsb sbb jg sub js lock fdivs (bad) (bad) dec imull mov cwtl mov fmuls test (bad) stos mov sbb movb mov or push add clc pop cmp push sub sub ficomp (bad) pop xchg subl add pop gs push sbb mov add or enterq cmp leaveq std (bad) mov rex.WRXB jo sbb scas or cmp cmp or sub test popfq repz (bad) (bad) cli icebp jbe rex.RX (bad) (bad) std mov xchg cmpsb out data16 rex.W sub add adc rorl (bad) (bad) push rex.X adc xorb sti (bad) mov ja rex.WRX mov fsubr xchg fwait not pop rex.X repz and cmp adc scas xchg enterq rex.WR adc xchg jrcxz pop jmpq jmpq jmpq jae not ror mov inc rcr sbb add mov not mov sete mov jmpq fprem loope imul push fsubl jrcxz cwtl push outsl push rex.WB jmpq pop push (bad) (bad) (bad) lcall rex.WXB test out and jrcxz icebp cld xchg mov mov adc sbb (bad) rex.WRXB (bad) mov (bad) lret jne test push rcrl (bad) (bad) mov pushq lret es sahf sub mov jne movabs js (bad) (bad) (bad) gs cmpsb (bad) cmpsl (bad) hlt (bad) (bad) (bad) (bad) jmpq popq decb cmp pop xchg jb or data16 adc (bad) jo sbb out sub adc push (bad) jg (bad) orl pushfq (bad) (bad) mov jne movabs lret andl push adcl movsl lock push xor movsl cmc fucomip rcrl cltd movabs test movsb iret adc xchg decl sbb xchg rex.WRXB rolb rex.X cmp fwait or fcmove sbb rex.B loopne or sub sarb (bad) adc rex.B (bad) (bad) sti sub (bad) (bad) (bad) std out and push jmpq rolb rex.B rorl imul (bad) ljmp pop cs (bad) jp jp fidivrl sysexit (bad) (bad) movabs xor xchg sub mov xor retq ljmp or jbe rex.WRXB or xor lods mov cs mov adc (bad) decl sbbl mov cmp add jmpq add rex.R jae jb gs pushq add movslq xor lock mov callq test (bad) jmpq rcl rcrl cmpsl cmp jbe (bad) pop pushfq xchg (bad) push cmp ja andl test lret jmpq fsub xchg out movabs push and (bad) xor pushq (bad) (bad) cld push orl fwait mov cmp mov mov push loop lock sahf mov cmp imul lea (bad) (bad) jo pop pop pop adc mov incb jmpq cmp int3 pop (bad) cli fwait lret in xchg mov lods (bad) add add jrcxz cmpsl scas mov ja (bad) (bad) jae rex.WX pushfq in mov pop fisttp or test add sub jg push add loopne (bad) and mov (bad) in out je test stc or jmpq je rcr shld bsf sar push inc btr rol shr mov btr sub lea mov mov bswap lea jmpq jae jmpq lea movzbw mov pop bswap bswap jmpq sub sub sub or xchg movabs pop test adc cmp mov rex.WRX xchg fisubl xchg (bad) push cmp or sti hlt in xstore-rng cmpsl (bad) rex.XB mov cli sti jmpq cmp lret pop rex.WRX add fwait insl (bad) xor out sub adc out (bad) (bad) (bad) sti rex.WXB (bad) gs (bad) (bad) (bad) decb xor xor scas int nop leaveq mov (bad) (bad) (bad) decl (bad) jge rol stos fisubrl cltd outsb out stc ds cmp shlb movabs data16 (bad) (bad) or add cli pop rorb sbb mov gs jne bswap lea mov mov mov jmpq rcr add adc ror mov jmpq jbe shrd sub movzbl mov neg inc dec bsr mov bt add bsr rcr rcl lea shr xor add clc mov dec shld cmc add movzbw mov jmpq and jl jle,pn cs movabs mov sub push add push push or mov movabs (bad) lea out rex.B cli outsb rex.WX (bad) pop jge and xchg rcl and out div jmp (bad) movslq (bad) movb xlat sarl rex.WX (bad) es repnz out xchg rex.RB (bad) mov cld mov jnp (bad) (bad) sti rcll divl (bad) (bad) incb jns hlt movsl add add add pop rolb mov out fucomp rex.XB jae enterq imul sub rex.WRX and and mov movabs pushq or and jmp rex.X subb or insb jmpq sub add sub movabs sahf (bad) in (bad) mov lret cmp push ja sub or mov push rex.WXB xorl (bad) pop subl mov sbb icebp in cmpl nop rex.R add loope stc subb sti cmc adc xchg rex.WB out imul mov and (bad) and mov insl psllq stc test (bad) (bad) (bad) jmpq and and andb adc sahf movsb xchg (bad) loop imul repnz xlat jne rex.RX fistpll sbb sbb sbb rex.W imul adc cmc mov xor sahf mov sti movabs xor rex callq xor rex.RXB and rex.RXB push push rex.X jo lods sarb mov xchg mov imul mov mov (bad) xor push and subl (bad) rex.WRXB push adc add (bad) push and (bad) (bad) lret test xlat int3 jb (bad) push (bad) data16 (bad) (bad) sti mov (bad) (bad) (bad) (bad) jg cmp xor rex.X rex.RX rex.WXB (bad) (bad) (bad) ljmp lods mov int3 pop xor push (bad) (bad) (bad) mov pushq clc fmull callq mov pop push mul (bad) out in push cmp je pop out rex.WXB (bad) mov xor jmpq callq jmpq jmpq adc jmpq jmpq jmpq jb cmc cmpb jmpq jmpq jmpq test jmpq callq jmpq mov fisttpll ffreep nop sub (bad) and shrb adcl (bad) push xchg xchg jno pushq jge jrcxz rex.WXB fild mov sbb mov out movabs (bad) clc jrcxz enterq jno (bad) es (bad) icebp callq add jp movabs adc mov xchg js sbb decl rex.W movabs (bad) (bad) (bad) sti stos push insb sbb (bad) (bad) (bad) insb stc jl mov addr32 (bad) add push jp test (bad) (bad) (bad) (bad) in cmc (bad) fcmove push rex.WRXB addl jp mov pop (bad) outsl jbe fidivrl (bad) jae xor cmp movabs fbstp loopne rex (bad) leaveq pushq movsl jge movabs sub nop rex.R rex.RB jge and fcmovu xlat (bad) rex.R mov rex.WX sub xchg punpcklwd (bad) shr test pushq jge rex.WR cmp mov adc leaveq jmp mov mov sbb lock rex.RX adcl cmpsl adc rex.WX lret popfq push sbb push xchg pushq out sub add push xchg mov mov repz push ds (bad) (bad) sti test rex.WRX xchg (bad) push nop ds bnd xchg int3 movsl mov add xlat xorl add add add rex.WRXB orl sbb cmc jle mov (bad) push fwait mov rex.RXB out and xchg ja adc fistl mov loopne rex.XB sbb xchg ffree (bad) mov ss (bad) jbe mov clc cmp jmpq ja jmpq jmpq pushq jmpq pushq jmpq lea xchg mov xchg movzwl not lea movzbq not lea mov mov jmpq in pushfq mov pcmpgtw out and pushfq (bad) in mov lret cmc (bad) vmovaps repz rex.WX stc xchg rex.WR rex.B repz pop pushq mov pop xchg jmpq (bad) (bad) (bad) (bad) pushfq rolb in (bad) in sarb (bad) jns (bad) callq int3 push (bad) rep insb (bad) loope mov pushfq sahf (bad) and (bad) (bad) sti add popfq xchg (bad) (bad) (bad) (bad) std rcl ds push leaveq test pop insl (bad) callq xchg (bad) (bad) (bad) (bad) incl pop xchg cmc (bad) add in fcoms mov neg xchg movabs (bad) xchg mull and test lret stos mov rex.WRX pushq push mov cmp pushfq sub jmpq jb clc stc bt cmp jmpq jmpq jmpq movsb jl (bad) leaveq cwtl push stos rex.WXB xorl repnz movsb repz popfq rex.WRXB lahf jno or or scas jmpq enterq and or fimull pop fidiv adc rex.WRX (bad) movslq jno loop adc es rex.WXB mov adc movslq jno notb icebp push (bad) pushfq scas movabs push sbb loopne fidiv rex.WR nop mov cmp insb add clc jrcxz pop rex.WRXB pop sub and add jmpq xchg (bad) or rex.WX addr32 (bad) (bad) mov frndint mulb jle (bad) mov roll cmp (bad) xchg sbb (bad) rex.B xchg add es scas popfq shrb (bad) movabs jo lret es sahf mulb xlat (bad) (bad) (bad) cld cmp (bad) (bad) cld rex.X and js (bad) callq jno cld popfq adc movabs test pop (bad) add add cmp sbb mov sti insl rex addr32 pop sub sbb fdivp ds xchg mov mov ja jb movabs jp mov movsl add (bad) mov cmp xchg mov add js loopne jp not add btr mov rcl rcr or add shrd movl btr or movzbw inc mov jmpq shr test add dec add mov mov mov cmp cmpb jmpq jne adc sub or cmp mov jmpq bnd pop mov jns out pop rclb adc test cwtl mov sub sub shrb push mov cmp popfq and jbe (bad) cmpsb rex.RX clc popfq movabs scas rex.RXB sbb rorb mov test movabs mov (bad) iret pop loopne xor insl (bad) (bad) (bad) sti insb jmp mov (bad) mov adc mov mul (bad) mov jae rex.WRX loop es add rex.WRX (bad) (bad) push cmpsl fimul imul lock jle rex.WR imul xor jno out fucomip nop retq shll enterq adc mov sbb sub (bad) mov mov cmp ja lret pop mov iret stos mov push sbb je xor (bad) mov jbe movsq jnp rex.WR xor in rex retq idivl adc fwait (bad) movabs or fmull xchg nop xchg (bad) jge xchg cmpl rex.WB fwait sbb mull loopne sbbb cld mov (bad) jmp (bad) (bad) (bad) decl adc rex mov or mov xor andl cmp pushq add add adc (bad) cmpsl (bad) stos scas mov mov rex.WB xchg imul imul adc push std cli xchg jmpq mov jl movabs jle adc or and sub or mov push (bad) adc lods iret mov movabs in push out rex.WRB nop mov mov mov icebp and stos test test loopne or rex.WX adc (bad) sti in mov adc cmp cmp jl rex.WR rex.RX test repnz pop (bad) sbb or push or movabs leaveq lahf xor jnp adc fisttp enterq pop repz mov cmp rex.W pushfq rex.WRXB out sarb insl cltd out rex.WRB cmp jl int3 rex.W rex.WB movabs jo cmp and callq loope rorb (bad) xchg shl cmp and mov (bad) jo or movabs movsb out xchg sbb fnop sbb sbb cmpsl mov (bad) jns clc outsb std sbb cmp (bad) or or rex.XB (bad) retq pushq mov imul (bad) pop imul (bad) (bad) clc fwait test mov add xor xchg (bad) and cmpsl adc movabs cmc (bad) (bad) (bad) cli and nop sub mull lods sub sub and (bad) sti rorl sub mov push or mov xchg rex.WXB fisttpll (bad) mov jp cmpsb ja insb out cli repnz (bad) (bad) (bad) push pushq (bad) jmp push (bad) (bad) (bad) callq and fadd (bad) xchg (bad) rex.W mov fnstcw (bad) insl add add (bad) push repnz adc rex.WB ss jl frstor rex.RX adc rex.R xorl es stc test test test cmp jmpq out (bad) stos (bad) sub jb rex.B in fild int3 repnz mov sub in sub fcoml rex.WB repz clc pop push (bad) rex.RXB fiadd pop add sbb or mov rol icebp in mov rex fcoms (bad) xlat (bad) (bad) add stos mov xchg jno jns xor stos shl push (bad) xchg fstp cmp (bad) rex popfq out rex.RB movslq add (bad) (bad) (bad) (bad) sti jae rex.WB rex.WR (bad) (bad) (bad) xor mov rex.WXB (bad) hlt sbb jnp outsl (bad) (bad) (bad) pushq (bad) push sbb jge xor imul scas shrb jae scas jg or xchg int lret or ja sbb sbb xchg jno rex.X and and adc (bad) pop lods lret stc clc cmp test jmpq adc jmpq ja bt clc cmc stc imul cmp jmpq jmpq je not bsf and push clc mov rcl sub sets lea jae callq rcr movsbw xor not add bt shl data16 repz cmp clc cmpb jmpq cmc sub stc stc stc repnz jnp jne data16 mulb mov mov ror movzbw rol sub bswap mov cmc clc bt test sub clc cmp clc pushq bt cmp stc cmp jmpq ja setbe jmpq sub bsf shrd btc mov clc cmp stc cmc sub test stc cmc bt pushq test cmp jmpq jae jmpq jne jmpq je cmp cmp jmpq xchg rex.RX xlat (bad) cmp or rolb jae or sarb int3 movabs jge insb fcoms adc (bad) mov imul mov push mov jge (bad) and xchg xchg (bad) hlt scas adc rex.W (bad) xor add jmp or jnp (bad) (bad) (bad) cld sbb movabs insl push mov and add add mov cvtdq2ps rex.W add (bad) rex.RB fisttpl push xchg rex.XB ja cmp (bad) jmpq (bad) pushq and sarb jo shl (bad) (bad) (bad) ja xlat push retq (bad) and rex.X mov add sbb rex.RX movsl xchg sarb cmpsl mov enterq lods int mov (bad) (bad) nop rex.RB (bad) mov add movb adc jge outsb fimul rex.WR rex.WXB adc movsq adcl xor xchg mov sahf decl xor xor movabs (bad) sti mov repnz pop jns xchg (bad) (bad) (bad) (bad) sti scas (bad) fs (bad) (bad) (bad) (bad) jo fs rclb leaveq movsl xchg mov jno mov push lea mov in rex.WR insb mov (bad) faddl rex.WXB (bad) (bad) (bad) callq rex.RB mov add sbb rex.WX loopne sarl mov rex.XB (bad) fmull fucomip xchg rex.RX rex.WRB in mov (bad) xchg sti (bad) shrl (bad) insb push movabs add cmpsb out fcoms fcomi out or rex.RB (bad) rex.WR rex.RX retq cltd xchg mov (bad) decl movabs (bad) rex.R push pextrw mov stos xorb rex.WRX rex.XB (bad) (bad) cld (bad) adc rex.WXB (bad) (bad) decl retq rex.WX rcll adc cmp jbe xchg mov nop rex.WRB push (bad) and shrb rex.XB rex.RXB and rex.WRX adc xchg lods lcall mov retq cmp (bad) icebp adc cli clc test andl sti (bad) (bad) cld cmc movsb add ds stos and (bad) jae pop adcl jle mov jge addl in and rex.R add stos mov xor (bad) (bad) cld xchg lods rex.RB (bad) (bad) decl int3 lea lahf mov sub fldenv xchg rex.WRX rex fs mov (bad) imul fxtract lea mov (bad) jnp mov (bad) mov std push callq fdivrl popfq xor mov insb pop xor cs push or add add (bad) pop pop jb nop (bad) repnz (bad) test jle xor sti (bad) rex.WR cmp (bad) cmpsb cld push add insl (bad) xchg (bad) lods sarb jno mov fimul sbb mov rex.R (bad) add sub sub mov out rcll (bad) cli scas and (bad) in pop xchg nop add (bad) paddw mov add adc outsb (bad) cltd mov add or (bad) fadds ds sahf and rex.WRXB lods rex.RB (bad) pop cmp mov rcll xchg in sbb rcrl xchg jno out fdivr (bad) (bad) sti cmp (bad) (bad) std cld sub mov hlt movabs and movabs cld (bad) (bad) (bad) (bad) fnstsw (bad) xor jl mov gs mov loop add cltd mov rex.X and push jb push (bad) negl cmp (bad) rex.WRX rex.R in xchg rorl (bad) or or (bad) lock mov cli xor rorb rcr icebp repnz fnop adc test (bad) pop test pop sbb test (bad) data16 add lods loop pushq mov jns outsl adc mov (bad) (bad) (bad) sti (bad) out fldenv rex.B (bad) (bad) incb xchg (bad) jle add cmp sbb iret (bad) (bad) mov (bad) xrelease test jno xchg xlat lods adc jl push rex.RB ss frstor nop cmp mov in xchg mov cmp ja nop pop sbb pop scas and (bad) loop jae xor (bad) (bad) (bad) mov in loop add xchg (bad) loopne lods cmpsb adc rex.R adc movslq adc jno movslq pushq out loopne sahf (bad) (bad) cmp mov xchg (bad) mov rex.RB cltd jmpq mov add rcr shr clc mov test xor shr xor mov clc cmc stc repnz jmpq callq (bad) repz add rol bt bswap mov stc cmpb jmpq callq jmpq jmpq adc jmpq jmpq mov gs cmp out callq imul addr32 xlat rex.WR cmp sbb retq stos jne sti stos int int push pop mov push mov (bad) ss adc mov addr32 gs mov cmp imul pop rclb jb (bad) xor pop mov mov push (bad) ror mov retq ja addr32 fs movl mov cmp xchg mov cltd clc mov addr32 (bad) push (bad) mov pop mov push add (bad) (bad) cmp cld mov (bad) rex.W fdivr roll mov cmp addr32 xchg xchg cmpb jnp out test icebp or iret rex.WRB ror test (bad) (bad) movabs cmp rex.X (bad) jne xchg pop (bad) pop pop imul iret (bad) rex.X cltd leaveq xor out rex.XB rex.WRXB test push js retq mov movabs cwtl addr32 rex.R fwait sbb retq in push pop mov or (bad) mov scas (bad) push or cmpsl mov mov cli or mov lahf xor icebp and addr32 scas and fcomp push cmp mov rex.X cmp clc (bad) outsl pop (bad) mov xlat iret push xor fidivrl rex.R rex.WB mov data16 ffreep sbb sub callq rex.WX xor sbb xlat movslq and push out rex.WX test push sub add lods ficompl fimull push xchg retq sarb (bad) push (bad) mov mov cmc xchg (bad) mov lret cwtl cltd movsb fwait (bad) clc addr32 xor jp rex.WXB ficompl out xchg jle jp mov xchg movslq mov fiaddl or (bad) and rex.RX xchg rcr (bad) adc cli in (bad) je iretw mov (bad) (bad) jp mov xlat stc mov (bad) (bad) leaveq jnp rcll lods enterq movslq xchg sbb out rex.WXB cmp adc cmp mov mov callq xor mov lods adc cmp test data16 negl sahf test sbbl jbe jrcxz rex.WR pop (bad) mov nop (bad) stc push adc xchg rex.R pop test cmpsl mov rex.R pop enterq repz out int and addr32 jmp (bad) enterq mov movabs rex.WX lret (bad) (bad) push movabs rex.XB add cmp sub push rex.WR xlat mov jnp ja push fwait jmp retq cmp (bad) (bad) addr32 sti xor ja rex cld rex.WB clc jp cltd in mov xlat (bad) ficoml insl push (bad) fwait mov (bad) adc xchg push retq rol gs out mov repnz sbb insl adc sub (bad) xchg add fnstenv test rex.WX rol callq outsb lret fistp xchg (bad) cmp mov xchg add xor test cld shlb mov pop scas cltd (bad) stos clc cmp and and jrcxz sub pop mov rex.WR addr32 out scas xor jbe adc sub (bad) sub divb (bad) int3 xor hlt movb lret sahf mov mov (bad) movabs mov jnp (bad) push xchg rcl fwait in mov stos jbe push (bad) mov rcrb mov push or xchg ror xchg push (bad) mov mov rex.WXB pushfq enterq sahf leaveq fnstsw (bad) xlat xchg pop fwait stos mov stos (bad) cwtl rex.WXB (bad) mov movabs (bad) callq ja in (bad) fucomp mov callq movabs (bad) rex.XB retq pop cmp rex.WRB rex.B lret xchg rex.WXB xlat rcrl xor mov cmp pop (bad) rex.RXB (bad) je sub rex.XB xchg imul movabs mov stos test push imul and cwtl sbbl push mov pop cmp jmpq shr jns shrl adc pushq jp cli sub ja jge movslq sub push jmpq mov rex.WRX push sbb mov rex.RXB push push addr32 rex.WRXB test movsb mov addr32 sbb in (bad) insl retq jnp xchg jns imul movabs cmp (bad) (bad) mov pop (bad) sti sbb shrl push sbb rex.WX pushq rex.WRXB jae rex.WRX (bad) mov cwtl mov int movabs adc imul bswap and rex.WRXB mov test rex.WXB jmpq sarb (bad) (bad) (bad) rex.WX lahf imul leaveq jl addr32 pushq cmp data16 ja fidiv pop roll and jge out (bad) stc xchg rex.R cmp xor mov outsb lcall xchg (bad) push (bad) mov rex.X ror adcl sti jmpq sbb andl mov (bad) mov xlat or push xchg (bad) fld mov hlt (bad) jae lret fdivs shll movl and mov (bad) cmp lock push ds movabs sarl scas mov jge rex.WX push movsl (bad) xor lret mov jno sar mov add pushq rex.XB mov jl (bad) rex.WX cmp (bad) pushfq retq mov (bad) jp mov xchg mov fwait xor add sbb (bad) xchg (bad) fbstp push shrb cmpsl int sbbl cltd sub out xor and and sub or (bad) rex.WX ds (bad) and stc (bad) out test lea pop xlat sbb pushq je movslq clc jae rex.WRX adc imul ficoml sahf and scas mov je movslq (bad) xor xchg rex.WXB cmp (bad) rex.RB ds fistl jmp out movabs mov in mov movabs test loopne cmp xchg lea push cld rex.WXB movsl (bad) sar sub (bad) movsb and stos sar imul jbe cmp outsb rex.B mov mov int and (bad) add xor rcl movabs pop rex.WRB fisubr or xor rex.RB movsl out xchg xchg jno fwait ljmp ror jns mov rol mov imul (bad) mov rex.WXB jns fwait repz movabs (bad) cltd shl pop rex.X xor mov hlt pushfq scas ds (bad) movabs rclb rex.RX outsb rcll and cmp sbb sbb (bad) fimull push jmpq lahf pop or rex.RXB fwait (bad) scas mov gs push rex.XB rex.X rex.W leaveq mov js jns mov fnstenv xor xchg pop or adc xlat rex.RX pop pop imul lods in mov mov jns lret and ficom pop xchg rex.WXB fstps xchg (bad) mov mov je rex.WRXB subl mov (bad) test (bad) mov mov rex andb sbb nop push (bad) (bad) loop je adc (bad) mov mov xorl push movabs rex.W bnd js loopne out xor cltd fcoms push cmp jp (bad) adc jns (bad) imul movabs xchg lea push mov fnstcw (bad) rex.XB fwait jge sub lret jmpq pushfq roll xchg (bad) int fwait popfq pushfq rex.X sbb pop rolb cmp jmpq rex.B retq movabs xchg es ror mov adc (bad) adc (bad) mov mov cmp sbb mov leaveq push pop nop xor pop rorb cmpsl push movabs cmp jo (bad) cmc rex.XB xchg movl (bad) stos ds rex.XB sbb add jae cwtl xchg cmp in sbb xchg sub fimul rex mov cmp rex.WB (bad) sub cld gs jnp adc cli retq lret (bad) sti loope push retq xchg rex.WRB pop popfq outsl pop fcompl out lret int3 rex.RXB scas mov xchg jmpq rex.RX lods lret mov adc push (bad) push rex.WX (bad) (bad) movsl rex.XB stos rex.W mov stos xchg mov jae jae rorl pop sbb cli lea lock movabs in roll sahf xlat mov (bad) (bad) cwtl mov cmpsb rex.WRB rex.RXB rex.XB cmp addr32 jb push cwtl fdivrs (bad) push scas rorl (bad) lret pop jmp xor xor or pop or mov sub (bad) push cmp jo fcomps push callq cmp mov (bad) ss movl sub mov fmuls out or adc out cmpsl jle push cmp fcoml rex.WX mov shlb sub in fnstenv mov test lock jae jns pop rex rex.RXB movabs xchg lock mov lret pop rex.XB add scas pop mov (bad) (bad) test loopne mov push sbb fcmovb (bad) jmp fmuls pushq (bad) insb cltd rcrb rex.X rex.WRX repz pop (bad) pushq cltd adc ss (bad) movsl cwtl cmc xor retq sbb rex.RB mov stos adc es rol retq xor enterq cmp jns sbb enterq in jg jo fiaddl jbe int3 test xlat cli (bad) xchg cld (bad) push stos rex.RX stos jo cli rex.XB loopne adc outsl rcrb xchg (bad) jge sbb rex.WXB enterq add pop lret (bad) iret mov rex.RX cmp cmp out fwait xor adc jo iret or icebp xchg mov xorl movabs mov and cltd int cmp (bad) rcll push push mov (bad) mov ja mov js out lods and leaveq sti jmp push pop ja callq xchg (bad) jp lock or adc (bad) mov cmp lret or xchg or rex.RB jnp test (bad) mov rex.WB or lock ds iret (bad) jge stc btr pop loope loop cmp sbb rcll icebp cmc ja movabs sub xor (bad) stc repz mov xor mov cmp retq mov cmp lods jrcxz fildll xor (bad) movabs rex.RX add ds cli push xchg sti insl or (bad) iret jb mov ja sbbl xchg push insl icebp add movabs xchg rex.WB push jle add pop cmp mov push enterq xchg sbb out rcrl xor sti je (bad) push jmpq mov leaveq mov addr32 rorl out decb std mov cltd testl and (bad) sub xor roll pop cwtl rex.WXB xchg je mov pop mov jmp jp xlat fsubr (bad) (bad) out (bad) (bad) rcrb (bad) and adc cmp jno xor rex.RXB test (bad) xchg in jg sbb adc rcll lock neg ja fwait popfq rex.WXB lods mov mov mov push (bad) cmp mov push cmpsl xor sbb mov (bad) and outsb (bad) xor adc ja rex.WX rex.WXB sub jp xchg jae cltd rex.RB fwait sub enterq pop fs mov lahf mov xor (bad) ss rex.WX xchg rex.RXB or jg mov xchg add (bad) popfq sbb sbb rclb adc pop cmpsl sbb adc pushq (bad) xor lods rex.WX push stos cmp movabs cmp mov nop push lea pop adc (bad) movsl callq xchg add rclb sbb rcll or (bad) cli sub (bad) fidivl adc outsl (bad) rex.WRXB ss rex.RB rex.XB pushq (bad) roll out int3 push (bad) mov mov jp (bad) (bad) adc sar pushfq push jne pop std rex.XB xchg rex.WX ds movabs mov loop xchg xchg cmp shrb cmp push shll xor (bad) mov xchg int cmp lock rex.WXB jrcxz rcll popfq imul push jmpq (bad) test fsub in nop fxch jle xchg fisubl nop outsl rex.W lahf jae rex.RX repnz mov xchg (bad) (bad) mull mov rex.WR addr32 rex.WRX movsl rex.XB and rex.RB movabs jp xchg pushfq or movabs popfq sub pushq add rex.R fwait xchg pushfq jnp xor divl iret pushq js addr32 rex mov jns repz xor mov rex.RXB ds fdivrs popfq xchg mov push xlat pop (bad) mov mov jg int rex.RB movsb xor (bad) rorl movsl leaveq sbb leaveq or or ficompl xor in jrcxz callq push add fcoml xchg jbe,pt imul sarb clc lret mov add shlb rex.WX push (bad) jno xchg retq xchg test addr32 (bad) or mov pop rex.WX lret cmp xchg hlt push mov mov ds mov fucomp movabs pushfq jp (bad) ror fidivrl pushq lods js hlt movsl (bad) in jp jns rex.RB sarl xchg rcr sub callq mov jle (bad) iret adc mov cmc sarl mov cmp cmp gs jbe push cmp pushq lret and scas hlt (bad) mov loop pop mov adc jae rolb add adc or xor mov pushq je cwtl (bad) xchg addr32 rclb rex.X add int xchg insb movabs xlat mov test mov shll movabs (bad) add xchg sub push (bad) movabs jmp popfq sub outsl out rex.WXB rex.WRB rex.X mov movabs jge rcll and rex.X fimull nop (bad) or (bad) adc jo scas test ds xchg rex.WXB gs insb fnstsw lods mov and rex.WXB sbb push idiv addr32 (bad) xlat and imul loop mov mov adc rex.WRX mov cmpsb xchg (bad) mov sub sarl xchg cmp rex.WXB lret adc pop cwtl rex.WXB cmp push push jp mov (bad) ja fildll test pushq xchg loop cmp addr32 lret fld (bad) ror jne rex.WXB push xor mov jns,pt jae push in pop (bad) movabs stc loop cmp push adc test jge ss sub sarl movabs xchg or lahf add mov adc mov rex.B (bad) fisubl (bad) xor rex.WRXB (bad) out adc js int jns add int jbe xchg mov push adc rex.WXB addr32 rorb sub cmp adc lret fisubrl mov cmp mov mov outsb cmp rcrb mov out xor vaddsubps (bad) pop addr32 movabs jns mov movabs repnz mov sub (bad) mov ja rex.WRX scas pushq or popfq lret mov jbe cmp movsl lods hlt mov decb adcl popfq cmp jge add retq xlat repz xchg sub push xor mov out movslq adc rex.B rex.WRXB int3 jnp xor (bad) push lock jp leaveq orl or xchg movsb fsts mov adc pop mulb sarl mov fwait or and rex.X movabs jns mov jp popfq (bad) lock mov mov cmp rex.WXB fwait sahf nop jbe outsb mov popfq mov cltd (bad) xchg pop rex.RXB xchg mov cltd in rclb insl or xchg xlat stos lret xor callq rex.WR (bad) lahf mov sbbl out jnp pop lret (bad) xor xlat xchg push (bad) jnp (bad) lea shr lock clc mov mov xchg jbe enterq jnp fisubl rex.X cmp add pushq (bad) add xchg mov fistpll rex.WXB in lea mov (bad) (bad) xor fldcw pop push jmp jnp addr32 (bad) imul jae add mov int3 (bad) rex.WR insb retq mov (bad) (bad) or negb movabs sub (bad) sbb mov rex.B rex.WB sarb mov cld mov icebp mov mov sub icebp retq add xchg out rcr rex.WRX push jge adc cs scas callq jae (bad) mov (bad) xor jbe lock test fldenv rex.WRX xorl or addr32 (bad) mov adc jg push ficoml xchg rcll jnp adc pop ja fistpll movabs rorb addr32 popfq repz cmc stos push mov vpunpcklwd and cmp add pop mov lods xchg push cmp rcll pop rex.XB movslq jg nop fsubrs and mov pop (bad) xor iret adc mov addr32 rex.WX cmp xlat push mov sub or addr32 rex.W add pop movabs (bad) pop pop (bad) pop jp (bad) cmp (bad) data16 movabs xlat xchg push (bad) push rex.X (bad) cltd sti shrl adc xorl sar pushq push adc test int pop push stc and rex.RXB mov movslq mov rex.XB pop fsts stc (bad) push ds jns xor rex.WRXB (bad) pop adc (bad) rex.B rex.W js (bad) ja mov and fsts adc xchg (bad) rex.WRXB cmp test lea scas cwtl cli cmc fsubs insb ss rex.XB movabs (bad) mov int xor mov cwtl push jmpq shlb (bad) lret mov lods adc (bad) jb movsl xchg loop movsl xchg mov and pushfq xchg rex.W out adc jae in jrcxz sub andb fsubs iret movslq cli repnz jae and adc add pop rex.R jae jae in xchg (bad) xchg retq and mov es (bad) cli mov cmp (bad) mov sub hlt adc jae cmc (bad) fstpt iret std (bad) xchg (bad) outsb clc sbb jbe rex.WB mov retq rex.RXB pushfq (bad) rex.RX (bad) mov mov pop xor rex.X (bad) scas add and lods (bad) (bad) and shll addr32 cmpsl pop vrcpps addr32 movabs test addr32 out cs lret (bad) push iret mov xchg and out and adc pop retq negb mov xor (bad) xchg andl addl insb test pop sbb out xchg or movabs movl cmp cmp test (bad) movabs and rorb nop test cmp rex.RX sub (bad) lods (bad) (bad) xlat push ss lret stos (bad) retq bnd push outsl popfq cwtl push callq movabs (bad) rep ds cli mov mov add or and in adc pop mov and mov pop mov sub cmpsl cmp rex.RX cmp (bad) mov cmp mov addr32 (bad) mov cmpb stos jrcxz xor (bad) adc ror cwtl xchg scas ja rex.WRX fwait int3 rcr cmpsl (bad) cmc xlat mov (bad) (bad) insb or mov pop jnp sar (bad) (bad) jns mov add orl jns (bad) pop addr32 fiaddl (bad) retq and rex.RXB rex.WXB iret rex.RB sbb push sub rcl movabs leaveq mov jne (bad) (bad) xlat sbb fimul rex.R retq sbb int rex.W push retq addr32 xlat nop sbb mov mov rex.W add cltd push gs cld fnop retq add pop mov pushq adc (bad) (bad) xchg decl enterq xor pop cltd cmp retq xchg pop (bad) (bad) xor int lods int subb rex.WB jns xor notl rex.RX rex.X (bad) mov test scas stc mov mov xlat cmc mov (bad) adc sbb shrl out lret add xor out scas (bad) cmc (bad) cmp cmp add push in (bad) enterq xor sub xchg mov subb jmpq movslq (bad) xchg shr (bad) loop push mov sbb loop roll mulb sub rcl rcrb gs pop push fsubr enterq (bad) adc xchg jnp cmpsl or cmp stc ficompl xchg cmpps lret mov add (bad) lock cmpsb in rex.RX cli cmpb rex.WXB enterq fwait mov adc mov pushfq ja push push mov retq pop (bad) ds retq pop rcrb sarb (bad) (bad) in mov (bad) mov rex.W fisubl mov (bad) (bad) cmp mov rex.WRXB shl (bad) (bad) fdivl push in sbb (bad) scas (bad) (bad) sub jl lods nop cltd xchg rex.WXB and loopne out push push add iret (bad) push pushfq lahf and repz ss and enterq xchg mov sub fidivrl outsb gs mov addr32 or adc jrcxz adc jae ficompl stos fldcw rcll lock rex.W cmp lahf rex.R movabs callq mov jns,pt sbb mov sub leaveq jbe cmp push fsts sub mov jbe je mov cltd add lock push (bad) jle rex jle iret lret iret (bad) iret jmp xlat fbld sbb cmpsb rex.RX retq ds fistl xor (bad) movslq mov lret lods jge lret cmpsb fsubs mov push addr32 rex.WX cmp adc es test push mov rex.X cmp add pop sub pop xchg and sbb out std outsl rclb xchg cmp rex.WR rex.WRXB mov push xchg mov (bad) shll mov (bad) sbb cmc adc mov shrl (bad) cli (bad) mov or idivl insl loop xlat (bad) mov jno (bad) mov stos fdiv sbb jns pop or mov cmp pop pop pop adc mov sarl (bad) jl test (bad) pop cld (bad) mov sar hlt (bad) shll movsl adc movsl movsbl (bad) rolb adc xrelease mov lret xor jmp movslq jg roll xchg pushq pop xchg lret xchg push loop imul in (bad) (bad) ja (bad) shrl (bad) sub (bad) and cmp test sbb jbe pop sarl xchg (bad) mov stos xchg sub fistpll xchg and push xchg or or or (bad) rex fs (bad) rcrl in cltd push and sbb mov addr32 enterq iret mov rex.WRXB callq mov or jl mov pop popfq retq insb or xor (bad) movabs or lret adc rex.WR lret and xchg (bad) xchg scas sub xchg mov cmp rcll iret addr32 rorb (bad) lret xor mov rex.WX pop (bad) shrb sbb test sti mov mov addr32 sbb mov (bad) movabs jo cmp pop jg (bad) (bad) testb sbb test sarb mov rex.RXB pop adc pushfq (bad) setnp lret pop (bad) imul mov or test adc jl fs in push add mov retq mov ljmp gs movabs sbb push push pop xor imul sbb cmp or cmc sub rex.WXB mov movslq pop rex.RB test jge (bad) mov loop cmp repnz xor rol in outsl iret clc hlt jp (bad) out sbb fcoml iret sbb jnp out or lret test push xchg rcl rex.WRXB repz xor scas mov add adc xchg outsl addr32 push sti jmpq scas ds gs mov (bad) lret mov leaveq xlat xor in push jmpq mov adc pushfq rex.RXB adc xor sbb cld rcrb xchg movabs xchg xor (bad) and xchg jbe movabs mov push jno cmp pop sbb push sbb (bad) mov (bad) xlat mul and sub pop sub (bad) (bad) leaveq sarl sbb sbb mov cmp adc in outsl rex.R sbbl cltd movl stos orl pop imul (bad) cmpsb push callq (bad) xchg hlt fcoms push adc xchg (bad) cltd vcvttpd2dqx imul (bad) rex.W mov addr32 scas cltd (bad) cvtdq2ps test flds adc (bad) xchg sub or out sub rex.WRB xor jmp lods (bad) enterq cmp hlt xor xor xor (bad) (bad) shrl rex.WB (bad) leaveq lret mov mov decl pop movabs pop retq not insb (bad) (bad) xor out jnp out cs shrl sarb movslq jmp jns mov xchg cwtl rex.RB rex.XB pop (bad) (bad) lahf sahf (bad) (bad) rorl jns in cwtl or movsl stos or rcrl fwait mov cld insl rcll mov push (bad) fbstp mov mov push xor rclb test sbb outsl push pop or mov out test pop rex.R outsl or mov push mov sub gs ja mov adc add xchg mov add push xlat push scas subl mov rex.W rex.WRXB xchg mov (bad) rex.W (bad) rex.WXB fcoms add movabs out retq or xor or jle clc lods mov pop sbb decl and cmpb rex.W addb stos lock push mov lea jmpq mov rcl mov xlat mov mov mov jmp or mov jrcxz push (bad) xchg push lahf stc rex.B loope inc rol int pushfq push push rex.XB rex.WXB test lock (bad) in cmp and imul mov lods mov shrb rex.WB (bad) rex.WB subl addr32 adc push sub mov xor jmp push rcr push (bad) push (bad) icebp (bad) shl and (bad) (bad) pushq insl add retq jns (bad) sbb (bad) cld adc ss xor mov jb (bad) and rex.WX mov xchg push addr32 rex.WX gs sbb retq mov sarl (bad) fnstsw loopne callq or mov iret in (bad) push retq jg lret rex.R lods mov lods push fsubs fadd cmp push sarl pop (bad) jns scas jg loop and (bad) xor callq xlat push test and push lea cmp push adc adc fadd fwait ds mov addr32 sub xchg rex.WRX mov pop jbe rex.WR jo mov ja mov xchg shrb rorl sbb cwtl jmp sbb xchg (bad) (bad) cmp rex.WRB mov scas movabs sbb mov push addr32 xor mov mov mov pushq lret (bad) cli test (bad) clc add rex.XB fwait out (bad) add cmp fsts xchg push ja jae fwait mov (bad) fdivrl mov out push mov fisubrl or rcrb cli or scas (bad) cmc stc (bad) insl repz shrl xlat cmp rex.RX out stc jg stos xchg ss retq (bad) xchg or xor jb mov ficompl push fdivr or in shrl mov rcr int3 cmp rex.WXB (bad) jnp movabs rex.WB out fwait (bad) pushfq jp jmpq pop pop sbb jb shll leaveq mov adc rex.WR rex.RB addr32 movabs push jle xor mov jle jge int3 cltd in mov add xlat rex.WB rex.RX hlt pushfq rex.B rex.WRXB mov stos rex.RX sub sarb sub fidivr mov mov (bad) sub mov xor xchg push callq sub jnp lods add stc data16 test sarb pop pop loop fidiv rclb jo pushq nop sub rex.WB sbb jg push ss loopne rex.WXB jae rex.WB xchg (bad) mov sbb (bad) fisubl (bad) int sti int3 (bad) fistp movb test rex.RX ficom mov jg (bad) icebp (bad) rex.WRX or (bad) sti add xor cltd fidivrl sbb int rex.WRX rex.WXB callq mov jne fdivl sbb jne (bad) mov lret push lret ja jg rex.W test mov jnp pop (bad) addr32 (bad) loope or out and (bad) pushfq sti jmp mov and cltd rex.WXB or cmp rex.WRB push sahf fisttpll (bad) mov (bad) xchg rex.XB sbb xchg retq jl sbb mov popfq callq nop lods rex.WB out xor push (bad) push xchg adc push movabs data16 mov lret rex.WXB (bad) xchg lods xchg rex.WRB pop gs xor or or test rex.WX lret and sbb mov push loopne mov lods jo leaveq rol xor (bad) push sbb cmp lods xchg cmc mov (bad) rex.WXB rol rex.WR mov jmp sub mov mov sarl push stos mov pop cltd mov (bad) lret (bad) cmc or fwait mov or out stos xchg jnp adc mov mov xchg cmp (bad) ja sbb xlat push add iret cli jno rex.WR fdiv movabs rex.WRB fldpi out sbb shll leaveq xor (bad) ficomp callq sbb xor mov xchg lea int3 (bad) movabs cmpsb rex.R push imul lret callq lods sub movsb mov jrcxz adcb ss jp movabs mov (bad) push xor test cltd test mov scas fiaddl xor (bad) insb ds sub (bad) push cli xlat lods xchg cmp cmpsb sbb mov and fwait (bad) popfq stos rorl and enterq xchg or fnop xlat ds sbb hlt mov jle sub pop jmp roll push mov (bad) clc out idivb push fs xor rex.RXB stos fist data16 js loope rex.WRB jl in rex.R xchg sub jle insb out sbb fwait rclb (bad) xchg int ss movabs rex.RXB rex.WRB mov pushq pop retq jrcxz xchg rex.WXB pop xchg (bad) shll retq and and adc scas adc out int cmpsb (bad) ja lock jb xchg cmp cwtl or scas xlat cmp repz (bad) movabs mov and rex.R adc (bad) ja mov mov mov pop mov icebp pop addr32 imul jmp test pushq cltd cmp xor pushfq sub (bad) pop fwait cmp in mov xlat ds xchg retq adc (bad) rex.RX rex fwait lods imul movabs or pop pop cltd popfq in cmp sarl fcoms out sub stos fistp rex.RB add (bad) adc mov add fwait sbbb mov gs movsb (bad) pop mov xchg cmp fstpt movabs int xlat (bad) in and jbe (bad) lret lods rex.RX (bad) sti ficomp cmp and (bad) mov mov ss xchg fwait movsl (bad) (bad) gs nop push out (bad) lods rex.RB lea mov stc xchg (bad) iret lret rex.WX nop rex.B (bad) push jns (bad) outsl rex.WXB xchg cmp rex.WX rex.WRB (bad) cli add add fdivrl pop pop (bad) rex.WXB pushfq int3 mov mov out (bad) jno fadd lea out mov add in retq movabs mov (bad) lods stos clc addr32 mov int pop (bad) lods sarl add xchg push (bad) cmp xlat stos (bad) rcl (bad) iret push (bad) (bad) or mov iret sbb xor xchg mov (bad) (bad) mov lret jmpq sbb sarb movabs lret pop (bad) mov pushfq outsb nop sarl rex.RXB mov fmull data16 sub xor xchg (bad) fadds imul push add (bad) xor cmp (bad) fldt xlat clc sbb pop push mov outsb cmp fdivr sbb xor invd rex.XB pop iret adc gs rex.WB adc fldenv mull xor (bad) (bad) mov cmp rex.WX xor test ja mov pop es pop or (bad) js and repnz scas (bad) imul mov mov xlat jae (bad) cs lods mov push or rex.X movabs (bad) or and repz pop mov loope ror movabs xchg rorl or or ds cld rorl add lods (bad) rex lods ficom fsts xchg adc mov stos jrcxz rex.WR shr (bad) sbb xor push cmp sti push push jg out imul movslq fnstenv ljmp jae sub sbb xchg cli or rex.RXB int3 mov xor adc add and xor mov or or cmp nop jmp push jg mov jb jge push rcrb pushfq push enterq push (bad) test or jae (bad) iret mov xorl mov mov jnp mov stos repz pop (bad) cld mov (bad) fsubrl sbb sbb xlat out test shll mov es xchg mov mov insb mov pushfq (bad) push push ja xchg lock cmpsb (bad) cmp mov (bad) leaveq mov mov (bad) movsl fldl2e in std insl retq shlb pop pop addr32 push stos or pop movabs fnstenv notb cmpsl xor cs (bad) mov sbb mov lea pop mov adc xchg (bad) pop cmc xlat fwait xlat push out (bad) (bad) imull fcoms rex.WR jecxz in and sti sub repz or rex.X rex.RX mov (bad) rex.XB fcomps iret xor fcmovb ficomp scas pushfq mov sbb out test (bad) sub mov and rex.WRXB (bad) cmp repnz mov bnd (bad) jrcxz cmp xlat jno xchg mov retq mov sub jp lret (bad) add (bad) imulb (bad) (bad) sub jae cmc pop out fbld jbe ss cs addb mov sbb leaveq repz fwait movabs xlat mov push pushq (bad) mov shl cld rorl (bad) xor or cmpsl hlt rex.WRB sub push jne push push hlt ja lock addr32 movslq test or mov and addr32 adc (bad) fcom and rclb rex.WX fsubrs rcrl cwtl sub cwtl lret out rex.RB adc adc xchg sbb rex.WRXB mov rex.W fs mov or out sarb addr32 add js push jp rcrl xchg sbb xchg jo adc (bad) movabs repz (bad) testb movslq (bad) sub (bad) jnp mov pop out jle and mov mov insl rcl cmp xor or adc xchg jne movsb mov sub out cmp pop (bad) icebp (bad) xor xchg (bad) and movabs add mov jno (bad) (bad) imul stc jmp fsubl leaveq xor int3 (bad) cltd psubusw mov mov (bad) hlt (bad) xchg (bad) xor sub sahf sub push jno jp fcmovbe mov lods out push push (bad) ss loop adc rcr mov (bad) rex.WRB push mov gs sarb and movabs sti push popfq movslq fstps lret and shll (bad) and addr32 push sahf xchg mov lea stos mov sub (bad) fstl pop clc lret scas mov movsb sarl or xchg leaveq (bad) jne xor xchg fnstenv or btc mov loopne adc pushq movabs mov js xchg std callq (bad) repz scas (bad) xchg retq sub fcompl rex.WXB or cmp (bad) cmp cmp xchg or je rclb mov push addr32 imul sbb outsb pushq or outsb push movabs (bad) and ja xor movabs movsb (bad) (bad) cmp push mov lret je sbb lahf rex.XB pop push clc pop in rorl jae or push (bad) in rorl subl hlt xor xor sub sbbb (bad) ficoml nop mov loop ja push mov push cld (bad) adc adc xlat xor fs lahf leaveq jrcxz lahf retq cmp cmpl cltd mov rex.RXB add std pushq jbe rex.RB pop jg push (bad) mov sub push cmp rcl rcrl (bad) out rex.R pushq rex.WRB (bad) fmul rex.B fwait pop (bad) push (bad) in jno jl (bad) iret push iret loop fnsave pop sbb int3 or (bad) pop pop lods fstl out cli and rcrl js push lret rex.WRXB int ja cmp cli pop scas add push jle shrb sub and loope mov out pop fwait iret fwait outsb (bad) jnp pop movabs hlt lret mov or xchg xor fwait sbb (bad) (bad) iret (bad) cmp rclb cmp xlat imul mov mov jl xor sub mov movslq sti rex.WRX ffree (bad) rex.W addr32 jb loope outsb mov sarl std out shrb sbb retq (bad) int insl pop adc or (bad) outsl jae in and mov pop cld xchg fistl xlat (bad) pop pop jbe outsl test xchg loop fnstenv movabs lret rex.WRB data16 jae (bad) (bad) rex.WRB pop fldcw or scas fs jnp pushq (bad) cli mov fistl outsb loope movabs mov (bad) cmc mov test rex.WRXB cmp lahf mov sbb jmp jnp fidivl jmp mov (bad) fidivr fisubrl js nop fnclex push test mov negl fiaddl in xchg shll test data16 mov xchg fadd jbe (bad) data16 or repnz xchg sar icebp xchg jl nop mov and stos outsb lods cmp (bad) sub xchg adc jmp retq (bad) rex.WB rex.WXB (bad) or jp jbe fwait mov fbstp pushq pop rex.WR xchg (bad) (bad) fucomip cmp xor add rex.WXB pop sarl mov xchg lret lock push xor mov fdivs sbb or loope rex.XB (bad) leaveq fsubr push push out jrcxz jge leaveq jbe fcmovnu sub pop iret out pop or pushfq negb mov (bad) xor add jo pop loope outsl mov (bad) adc out sbb jnp pop (bad) mov pop xlat stc stos adc sbb iret jge xlat pushq loop mov sbb (bad) jp jb xchg repnz adc imul cmpsb (bad) xchg mov int3 ficoml leaveq rorb ffreep (bad) jmpq mov or out ficompl test xor ss (bad) sti xlat ja jns cwtl rcr jnp xchg cmpsb fimul xchg rex.WRX (bad) xor mov icebp (bad) mov pop fist outsb mov imul fs test (bad) fdiv jl cmp push adc lret (bad) (bad) insb xchg movabs sbb xlat leaveq xchg sti push out pushq cmpsl rex.XB rex.R or clc clc xor test push mov xchg or pop xchg fsts movslq jle rcll movabs repnz lods mov cwtl cmpsl out cmp pop stos adc adc push rex.XB (bad) movslq push and ja rex.WRXB pop jns pop repnz xor fldcw sbb and (bad) cmp push rex.WB jb push hlt fimull pop sarq imulb push mov xchg rex.RX cmp jrcxz rex.WB cmp fnstenv fcmovb rex.RXB xor (bad) mov addr32 mov retq and outsb movabs adc ss jne fsubrs cmp mov xlat shl (bad) and imul xlat xlat mull rex.WR (bad) lods jnp mov mov mov (bad) sti jne xor rcll or retq rex.XB cli cmp cmp fwait xchg sarl shr repz sti in retq and and mull gs movabs rex.RXB repz xlat (bad) movsl stos mov adc lret mov movabs fist jns (bad) mov (bad) sahf sti sbb pop cltd push sbb jmp rex.X cmp cmpsb sub push (bad) icebp rex.W lods push pop xor fidivr jnp retq adc lret xlat push rex.WR add (bad) out roll xor mov push xchg push jp sbb add addr32 push out rex.R sub (bad) jmp mov jp fcompl lret mov shr xchg in jo sbb jge (bad) cmp lods scas xchg rex.WX sub (bad) cli out cmp cld pop mov mov add mov mov mov pop (bad) insl jmpq rclb mov ja iret push lret lret (bad) mov movabs adc enterq nop (bad) pop movsl int rex.WXB add hlt scas (bad) xchg mov rex.WRX xlat pop push cli movsb adc in movsl mov adc xchg pop rex.X ss fimull test (bad) mov rorb ror rex.XB rex.WRXB leaveq xlat stos std rex.X (bad) negb sub rex.B jle stos pop test ds (bad) xchg movsl cltd leaveq pop cli mov rex.WRXB movabs addr32 push mov cmp pushfq mov pop fst ja (bad) push js pushfq mov adc fisub mov stc xor repnz stos xor leaveq adc mov cmp out sbb rex.WRX sub frstor (bad) ficompl (bad) gs pushfq cmp jno insb rex mov movabs xchg xchg rex.WB add jge jo test (bad) pop jbe pop adc shlb xor jb push jg xor callq mov out push jae cmpsb rex.WXB push (bad) movslq mov roll imul pop xor rex.WXB in (bad) (bad) xchg sbb test jl adc xchg adc rex.WRXB (bad) js mov and lret sahf cmpsl hlt (bad) sub jrcxz (bad) mov mov sbbl (bad) push push sbb nop push cmp (bad) (bad) push (bad) add cltd (bad) int3 mov scas scas lahf not mov xor (bad) jmpq cld scas add rex.R rex.WRX xlat pop rorl (bad) (bad) pop sub push adc enterq pop lea push (bad) mov sarl mov insl rcrb mov sub jo rcrb xlat mov sbb shll xlat scas xchg rex.WX pop cmp movabs (bad) and add jb adcl test shlb cmp test cli out adc jrcxz movabs mov (bad) mov imul out jmpq pushfq fwait lods xor je movabs mov hlt xchg (bad) (bad) fdivrs mov pop xorl pop adc in rex.RX jno xchg mov cli cmp movabs out (bad) fsubs fwait (bad) mov adc lahf mov imull push rex.W mov sar xchg add jrcxz cmpsl sbb (bad) pop pop jo and add xchg mov (bad) callq loopne and adc push adc movabs jg rex.RXB sarl (bad) sarb js stc rolb jbe stos sti or mov mov jbe pop or xchg adc push cmp and test pop mov fs mov and popfq mov (bad) xchg mov mov test rex.R cmc mov sbb callq add bnd movabs add sbb sbb subb rex.R sbb sub (bad) cmpb fcomip push fcomp cmp shrb adc (bad) and fsubl (bad) icebp out loope jmp pushq pop test ror shrl push adc sbb push (bad) nop pop out cmc insl xchg (bad) lods or mov repz out movslq ja and add pop push adc loop movslq add movslq lcall notl push pop (bad) adc cs (bad) adc sbb iret lea push (bad) rcrl mov nop rex.RB jne nop sub mov pop (bad) mov adc rorb bswap gs outsl cmp gs push rex.WX mov cltd fidivr (bad) pushq rolb lahf clc cmp iret push xchg movabs mov sbb lret adc cmp sub xor jns (bad) adc test push (bad) sub lea movabs xchg mov (bad) (bad) jl mov movsl fsts cmp int sub add (bad) mov in out sarl mov cmp (bad) cmp cld (bad) rex.WX jrcxz sub std stos xorl jnp xchg rex.WX clc cmp pop ficoml retq fdivrs rex.X rcll push retq push mov adc mov xchg and mov ds movswl imul (bad) xchg rcrl xor or loope push jmpq mov cwtl or and lret int3 lret mov jp fstl adc cmp iret pop movabs jbe repz (bad) sbb (bad) push rex.X retq or push rcll rex.WR rex.RB xchg (bad) (bad) xor scas movabs fprem cmp pop adc rcl je jb movslq pop lret cld pushq adc xchg je xchg adc lods ficoml push xor or rex.RXB rex.RXB rex.WR cmpl rex.WX pop mov adc fdivrs cmc push nop (bad) jp mov rex.RX ljmp mov out rex.X xor lret (bad) push (bad) rex xchg jns movsl add (bad) rex.WRXB jmp jne cli sub idiv ljmp (bad) (bad) pop (bad) out enterq outsb mov movl or fdivs rex.WB jo imul addr32 sbb rex.X ss (bad) jbe lea (bad) insb rex.XB shrl rex.RB jne mov rex.RX fdiv mov leaveq jns rolb and (bad) (bad) movsl stc adc adc repnz sbb test jae ja ja rex.RB add sbb xchg push pop mov rex.WB pop lods xor jne roll mov roll jp pop jge pop (bad) push and retq pop test pop (bad) (bad) pop cli mov movabs mov lret pop mov (bad) (bad) mov cmpsl int (bad) xor idiv retq add retq pop push clc cmp cmp (bad) lods imul (bad) mov clc pop mov fldenv (bad) sbb mov rorb gs push sub addr32 insl or lods (bad) (bad) callq or jmp cltd lea mov and push (bad) pop xor jbe jno mov enterq loope (bad) (bad) lret js rex.X mov adc (bad) cmp out imul (bad) jl callq sub stc mov jle (bad) xor movabs mov outsl stc sbb outsl (bad) sub xor (bad) callq pop sbb nop rex.WRX (bad) xlat pop out movabs movabs and push (bad) cmp ficoml insb jle fwait mov and (bad) cmp fdivl repz mov push mov and (bad) pop int3 cwtl imulb sub ds push (bad) (bad) pop xor rex.WB and lret adc iret cmp std xor adc xchg add pop rex.X cmp retq mov imul sbb retq xlat xlat cmpsl sub fwait icebp lret (bad) movabs mov mov sarb fstps xchg pushq (bad) enterq adc stc (bad) mov imul xor insl mov fcmovbe (bad) sbb (bad) cmp stos cltd mov addr32 rex.RB rex.WXB cmpsl leaveq mov imulb movabs movabs (bad) or cli rex.R rex.WB addl stos lods pushq pop rex.RX mov movabs repz jo in mov push (bad) sti (bad) idivb loop pop rex.RXB repz lock adc in sbb cwtl fs xchg ss mov in and scas rex.RXB (bad) movabs out jle movsb lret push pop push fsubl loop push lods cs lret (bad) lret lret jb test retq (bad) rex.B lods (bad) fs rex.WRB cs adcl (bad) mov mov fnop jns ficom rex.B pop mov jmpq xlat mov jo pop fdivrs shrl (bad) (bad) js,pt nop sti movl jno and scas cmp enterq cli (bad) jno xchg rex.WB xlat add vpor movsb push and jg xor pop rex.WRX outsl test clc adc mov xchg (bad) fdivr rex.RX push or or ficompl sub scas adc in add pop sti mov mov loop fstpt sub sarb pop fnsave xchg (bad) jl (bad) ja mov pop ja lea push xchg mov fxch pop cmp (bad) sarb (bad) (bad) fisubrl ja lods retq leaveq push pop xor rex.X popfq popfq mov imul (bad) pop jb int mov cwtl jp cmc jbe out rex.RXB callw out lods (bad) outsb xor out mov pop (bad) imul cmovae cmp rcl jg (bad) imul and push repnz cmp add out (bad) mov in adc cmc (bad) push (bad) (bad) (bad) xor (bad) rcrb out rex.WR rex.R lret cwtl mov in cmp repnz (bad) mov xor lret mov mov out stc mov sbb rcll movabs addr32 push xorb mov (bad) rorl (bad) xchg adc int adc mov xchg clc cltd jg rex.XB mov jns pop mov lahf cwtl fnstenv lret mov rex jmpq xchg cmp scas xchg cltd cwtl or in (bad) lea mov fsubr movabs push in xor (bad) sbb movabs (bad) test (bad) (bad) adc (bad) jno (bad) iret add mov js (bad) iret sbbl rex.R mov add rex.WXB roll rex.XB fdivp cld pop xchg xor ss rcr repnz push cmp rex.WRXB sub (bad) xor rex.WR fnstenv movabs pushfq fdivl retq iret jmpq mov lods cmp stos out addr32 loopne (bad) push mov jae (bad) sbb (bad) imul mov movabs xor rex.WX push xor (bad) (bad) mov scas lahf mov sbb ds xchg retq repnz xchg shrl xorl icebp (bad) pushq mov rol jnp (bad) jne callq mov sbb push xor adcl fnstcw mov test cmove cmp (bad) (bad) rex.WRXB xchg rcr pop pop clc cmp adc cld pop xchg (bad) and xlat iret and (bad) out rex.B cltd mov (bad) jb push out cmp jg or int3 mov rex.WRXB and callq loop push cwtl add pop in (bad) add cltd pop pushfq xchg jnp fadds pop mov sub sbb rex.WR rex.R xchg xor imulb lock testl rex.WXB rex.WXB clc (bad) xlat (bad) icebp mov movabs or xchg mov loope rcll sbb add sub lock xor xchg (bad) rex.WX lret xchg ss lret xchg jp movabs leaveq test int3 mov mov rex.RB ja sti xor push jp rex.WRXB (bad) jbe mov rex.WXB rex.WX add ja rex.WB or pop rcr or ficompl insl jmp pop xchg sbb or lret xlat pop repnz xchg push cli fcoms es (bad) sub sub push cmp rex.WRX xor rex.W xchg push in sbb (bad) push int3 xchg add fwait xlat cs iret or (bad) (bad) sarb cmp add pushq (bad) xchg xchg sub cltd loopne adc sbb gs (bad) (bad) mov movabs (bad) clc xchg leaveq repz leaveq (bad) nop ja retq sti clc loope loop (bad) adc fs (bad) (bad) stos push adc jns retq mov xlat jns fcompl movabs rex.WXB test movabs mov rex.WX push cmp cmp jnp xchg (bad) xor sub sti (bad) mov pop cld mov sub sarl rex.RB pop (bad) and stos (bad) mov sub rex.WXB pop mov insb rex.W rex.WX and fdivrl xlat fxam sub xor pop lods leaveq std sub sub sbb push (bad) lock sub ficoml sub sub sbb and pop inc hlt push (bad) add mov (bad) (bad) rex.W rex.B rex.WXB rex.WB sub xchg add std ja push out or fiadd (bad) ffreep jb mov mov movslq xchg jg cmp rcl xchg fstps xchg (bad) rex.RB fiaddl cmp and xchg rex.WRXB (bad) push pop (bad) data16 push popfq (bad) add pushq jg mov cmp test pop sahf mov jnp xor repz (bad) cld (bad) push callq mulb mov xchg or outsb ss movabs enterq addr32 pop jl mov fidivr ds mov sbb iret xlat movabs rex.WB (bad) (bad) in nop (bad) and mov int3 adc adc imul rolb (bad) mov and sahf mov stc (bad) cs xor xor push cwtl xchg rcll (bad) rep push push pop mov (bad) cli insb cmpsb (bad) cmp adc shrb ja (bad) mov or or orb rex.WRB mov callq sbb xlat mov xor pop pop rex.WX push es jrcxz icebp addr32 outsl xchg and (bad) ds adc xchg cmp or or push roll sbb loopnel fidivrl and stos sbb mov test pop int lods rex.RB decl sbb xchg jge xor in adc test rex.WXB out xchg ds rex.WRX (bad) test or push xchg jnp xor fsts cli or rex.X adc jg adc jne (bad) cmp pop callq addl retq cwtl lret jae (bad) push sbb jl movabs mov rcr gs push xchg (bad) pushq pop repnz (bad) jnp iret callq xor movslq ss mov loopne rex.WRX test lret push cmpl pop rex.WRB mov xor xchg add popfq cmc mov movabs rcll sarb pop add (bad) rex.XB clc (bad) shl cwtl lahf push and shlb out imul (bad) (bad) rex.WRB rex.WRXB (bad) ja (bad) mov fnstcw fldcw adc sbb cmp mov callq rex.WRXB xchg pop or out rol vandnps mov push mov callq jb movslq xor mov or callq and addr32 cmp pop movabs (bad) popfq divb lods jle (bad) mull push (bad) scas pop adc stos out xlat popfq fwait ja (bad) rex.B rex.WRB sub rex.X xchg (bad) xlat shll xchg push rex.RXB (bad) mov xlat add jns mov xor pop mov rex.XB or jo jne stos popq rorl push jb ja subl jb movabs mov jmpq sbb adc xchg (bad) fs hlt (bad) jae sbb jp jp lea sub sbb in xlat cld (bad) and fldenv fisttpll and rex.WXB test jle (bad) scas pop insl sbb or xor test xchg pop or (bad) pop cmpsl lock ficom add lahf xlat mov mov leaveq es (bad) and push xlat sbb iret cltd xchg mov callq rex.WB mov rorl retq andl xchg stos lret (bad) push fwait xor sbb (bad) stos xchg negl adc in (bad) test mov xor mov rex.RX movsl (bad) jbe movabs cmp fidivrl sub imul addl jbe mov sub (bad) lret (bad) (bad) (bad) mov rex.WX rex.WRXB hlt cmpsb orl test pop or (bad) sub imul rex.RX mov jb (bad) ja lret mov ja jnp adc retq out pop xorl jo xchg and sbb push (bad) sub jl xchg (bad) in jo fisttpl xchg cmp cmp (bad) mov in add cmp cs callq rex.RXB rex.WX rex.WRXB rex.W mov (bad) push rex.R rex.X (bad) retq (bad) push retq addr32 (bad) xlat rcrl jnp movsl cmp (bad) test sbb fstps nop rcll add decl xchg (bad) fadds push sub sarl cmp mov push (bad) push loope mov in or xor rex.WB rex.WB rex.WX push movabs and add push xchg (bad) repnz rex.B ss pop rex.WXB rex.WRB addr32 rex.WRB rex.RX pop pop (bad) xchg iret (bad) mov push mov je cmp (bad) (bad) add (bad) jbe mov or (bad) leaveq rex.WRB mov movabs scas (bad) fsts pop out movabs push mov sbb stos movsl or mov mov (bad) pop shll movabs fsts imul jnp sahf xor sar push ss xlat loop pop xchg cmc lods rex.R in bswap rex.WX pushfq jns lretw sti stos (bad) movsl jne pop jp rex.WRB rex.X rex.WB in rex.RX rex.WX add mov callq (bad) in jo adc int3 xchg cmp mov or addr32 rex.WR rex.XB (bad) (bad) jmpq rex.X (bad) in (bad) cmp lods lret and (bad) xor ficomp movsb or pop int3 (bad) test push mov pushfq push (bad) mov add es mov jle sub je movabs rex.WR rex.WRX (bad) std mov jg (bad) add retq test cmp or lahf test or (bad) scas icebp sub fstpt or rex.WRB and addl sarb rex.RXB rcr (bad) push fcoms (bad) int clc pop and sarb movsl mov (bad) movsl leaveq retq push mov jmpq cmp mov js xor cld xlat (bad) xorl icebp loopne neg callq cltd gs ds fnop (bad) cltd iret ror xlat pop push addr32 mov sub add js jp movslq out mov rex.WRB rex.W and lods pushfq test mov pop insb fistpll and mov out shl in rcrl sbb fadds in add mov (bad) lret sub mov adc stos jg xlat retq repz push pop (bad) outsl popfq mov mov movslq sbb popfq rex.WRXB mov push sub stc pushq sub jb lret ds nop sti push xchg mov lret (bad) xor (bad) (bad) mov test fildll enterq add retq negl xchg retq jg addr32 fcmovu push (bad) xlat popfq cltd jb push (bad) sbb setg imul in shrl xor ja add xor mov mov jle pop mov fisub and cmpsl in scas (bad) (bad) rex.WXB sbb push xor clc (bad) pop mov (bad) and pop stos fcomi cmp (bad) mov jg sbb (bad) rex.WB rex.RXB in mov jp,pt iret pop out lock insl pop xchg (bad) mov (bad) jo ss rex.W fs xchg (bad) mov fmuls rcrl std js in rex.WRXB rex.RX (bad) cmpsl jmpq (bad) xchg (bad) ss adc rex.WRB outsl retq fwait and xchg adc scas test xchg movabs xchg or (bad) rex.X pop pop pop (bad) mov xchg test imul jg test jbe jrcxz add push stos out mov nop jge (bad) int adc xlat repz jb clc mull out adc mov data16 mov sbb adc rex.B pop (bad) jae (bad) fsubs shlb adc sbb fnop pop ja lods pushq mov jg fbld outsl or (bad) (bad) cmpsl rex.WXB cmp and insl out xor sbb movsl xlat mov test sbb int cltd cmp addr32 in fcmovbe in (bad) int vpunpckhwd enterq (bad) jns pop mov movslq cld jg lret lods (bad) out mov and jnp rex.WXB psllq cmpsb jbe jno xchg rol ljmp mov push (bad) cmp (bad) movsb mov mov imull cmp retq mov xchg or rex.XB mov jae mov jl jle retq sbb rex.B xor adc ds (bad) je (bad) mov imul rex.RB push addr32 pop (bad) scas rex.RX xchg (bad) movabs mov fnstsw (bad) out (bad) jae sti fstpt movabs stos mov hlt xchg (bad) rex.W push movabs cmpsl js andb imul ja test or test xchg (bad) push imul sbb ficoml callq insb sbb mov pop out xor rex.W rex.WRXB ficompl rex.WR movabs pop sbb mov js xchg int sbb rclb movabs movabs lret sar movsl sbb jp cmp (bad) iret xlat mov mov mov (bad) in jle sbb rex.RX addr32 test sub push (bad) iret cltd mov pop movabs rex.RB mov jbe roll rex.RX rex.R xor repz jne push addr32 jo jns and movabs push adc mov retq popfq (bad) (bad) pop rex.RB in jrcxz (bad) leaveq es movsl adc cmp fdiv mov (bad) mov lret jns xchg (bad) outsb repnz mov push ffreep retq divl movabs pushq lahf push movabs jne cmp mul (bad) cli mov pop (bad) scas fdivs pop and push lret movabs retq cs add push or test repz xlat mov pushq fisub xor fidivrl js rex.RB movabs sub jp (bad) sbb rex.RX repz pop (bad) movb rclb adc rorb xchg stc lret (bad) push sub xor roll jp mull jmp cltd out (bad) rex.WRB enterq movabs mov lahf fisubl outsb jo (bad) mov add push lea push rex.XB pop ss fldcw repnz imul lret and movabs mov (bad) mov mov mov hlt and cmp fs (bad) (bad) cmpsl or js push ds stos sub rol out mov push rex.WX ss lret mov pop stos sbb movabs mov (bad) (bad) stos (bad) and mov (bad) (bad) (bad) rcl adc xchg repz add movabs pop rex.W out lret rex.R clc repz or cwtl mov pushq sub xchg cmc lods (bad) or mov test cmpsl rex.WB cwtl mov imul je fstps rex.WXB sbb out rex pop pushq rex.RB rex.W movabs sti fidivl add (bad) retq mov mov imulb xchg cmp rex.RXB (bad) xor cs movabs or rex.WB xchg ds movabs mov cltd adc imul rex.WB (bad) jae rex.WRX mov cmc xor retq pushq jnp lock jo xorl jb (bad) and lret xlat ror int mov mov mov jb and pop (bad) rex.WXB in and jbe cli clc (bad) fdivs (bad) rex.RXB add (bad) (bad) add cmp fnsave adc mov jnp jle rex.WR stos outsb movabs cmp or adc addr32 xor (bad) jp jle lods xchg xchg fsubl adc mov pop shlb lret test rex.WRX rex.WX repz or rex.WB rex.X and in mov or cmp lahf and xlat (bad) seto push pop (bad) jae sub and jnp cmp mov sti jb rorl movslq rex.WRXB movabs test jae mov (bad) xor jns (bad) mov mov rex xor lret sbb cmp rex.WR rorb (bad) ja xor repz lret rolb rex.RX adc scas jnp loop fidivr (bad) pop jb cmp test mov movslq lock outsl sbb fsts roll stos rex.XB std cmpsb sahf sbb sub cli and (bad) xlat xor (bad) jle jbe rex.RXB rcrl movabs or cltd repz (bad) shlb (bad) repz mov (bad) loope xchg and rex.WRB push adc lret jge mov movabs mov mov mov (bad) out (bad) cmp sahf (bad) or mov (bad) xor hlt rex.RX test adc repnz test mov iret xor (bad) jo stos mov add jne (bad) stc or stc cld jns movabs mov stos mov jo rex rex.RX jns mov movabs jne mov (bad) movabs pop dec stos push jb (bad) fwait mov insl mov xchg and or pop rex.WR fwait add lods sbb mov jb mov pop cld imul mov push push and test rex.WR rex.WB mov ss retq (bad) xor ja adc nop jnp,pt sahf cwtl push mov (bad) (bad) mov ds and fwait push shrb sti js add mov mov test jo addr32 mov xorl loope test shrb push outsl jne pop shll xchg stos rex.RX xor pop ja and (bad) cltd (bad) (bad) mov divl lock out and mov rcr xchg (bad) addr32 lods push hlt (bad) jns cvttps2pi xchg rex.WRX repz xlat test retq or rclb sub addr32 repz leaveq sbb add popfq out (bad) jo (bad) js mov mov add add loope or retq jle movabs (bad) stos add insl push sbb insb in js adcb xlat out js sbb rex.WRXB mov xchg rex.RB gs (bad) mov lret sbb ja push pop mull rclb xchg cwtl pushfq movabs imul xchg cmpsb movabs sbb subl adc mov imul cltd cmp fisttp out adc cmp ja repz sub and loopne lahf xchg push sbb mov jge rex.WR rex.XB jne or (bad) mov add (bad) retq sbb test push (bad) mov jg (bad) js cmpsb pop fcoml mov sbb outsl leaveq movabs (bad) cmp (bad) xor testb (bad) rex.WX ds xlat jbe sub rex.R (bad) rex.X pop and mov ss cwtl rex.W or (bad) rex.WX xlat push (bad) sbb leaveq sbb adc and xchg jmp not repz or repnz lea rex.WRX rex.RXB rex.WRB jmp jrcxz fdivrl jmpq mov cld sbb shl cltd test insb leaveq fdivrl pushfq xchg shl push rex.RX cmp (bad) ja mov add enterq jl gs adc push adc mov fidiv sahf fbstp mov loope,pt mov lods addr32 rex.WRXB js mov shrb jno or xor sub add xlat push shll or addr32 jbe jle (bad) xor push pushfq rex.WXB jmp fidivrl leaveq push rorb mov rex.WB cwtl out or pop jrcxz mov xor mov fisubl test mov cld outsb sbb adcb xor sbb cmp add adc repnz movabs pushq rex.RB mov stc movabs notl out cltd insl movabs xor sbb push xor lret ja (bad) pushfq sub cld adc add mov fwait je mov (bad) addr32 rex.WXB push outsl mov add cli movabs lea cmp rex.WX lea mov rex pop callq sub (bad) fbstp (bad) lods rex.WX cld and adcl out push addr32 sbb and mov add (bad) mov pushfq fdivrs je push ds movabs cmp rex.WB js (bad) sarb pop sarb out xchg sbb (bad) cmp test cwtl xchg (bad) (bad) stc out mov push icebp or mov jno mov js add sub xchg (bad) std sbb mov icebp pop fstps movabs (bad) push or sub cmp mov mov (bad) sbb (bad) jl jo rex.WX jbe jnp xchg cmp adc fdivl xchg movabs sbbl retq xor movabs shrl sbb jle cli rex.WXB add jge jmpq fildl and jnp movsb xchg or jne mov jle jrcxz adc push loope xchg jo xchg imul rex.W rex.RX mov xlat and fistp repnz (bad) sub movsl sbb (bad) (bad) cwtl rex.W mov or out rex.WB rex.WRXB (bad) jge test pop (bad) jae ficom scas mov out xchg int pop js jrcxz or test rex.RB addr32 (bad) push pop and jmpq (bad) mov xchg mov add gs add rex.WRXB js xor add subl adc add iret (bad) rex.WXB fist outsb mov hlt movslq fidivrl repz jmp shlb (bad) rcl add push rex.RXB stos xlat push jnp jmp and scas mov (bad) mov jae cs fsubrs lahf addr32 (bad) adc test loopne in and fimul mov shrb push or and (bad) xchg push lret pop (bad) mov pushq fadds repnz fdivrs (bad) xor cli rex.RB ja pop jg,pt mov (bad) notb push xor jae scas sub rex.WB insl mov lea rex.RB lea adc (bad) (bad) pop in rex.WRXB pop sahf sbb iret rex.XB or mov rex.R movabs movslq pop mov push push xchg lret lret ja push mov pop xchg mov (bad) lods jbe mov out push mulb (bad) popfq (bad) (bad) push (bad) retq xchg rex.RX movabs sarb jbe (bad) sbb (bad) and adc shrl in (bad) mov stos int3 rcll in xor (bad) (bad) in rex.WX rex.WRX pop out ja retq sub sbb ljmp retq jg enterq rex.WRXB jae or fisubl shr xchg ror jle retq (bad) add (bad) mov jrcxz rex.WXB rex.R int3 rex.W sub rex.XB fstl jl stc lock lea fstpt or add xor in imul (bad) leaveq adc lahf jbe sbb xchg rex.WRX mov (bad) sub xchg cmpsb fildl (bad) pop push ja xlat std add xchg (bad) rex.WX test shrl mov mov addr32 rcll callq mov addr32 add add hlt xchg mov imulb add js xchg and mov add movslq decb lods cli add jle xchg jrcxz sahf movabs scas xlat cmp mov rex.WRB sub rex.XB rex.WB clc movslq leaveq test (bad) pushq iret mov mov gs pop ds and (bad) addr32 rex.WR lods and (bad) jns fistl cmp (bad) push cmpsl mov push rex.WRXB mov test or rex.R decl (bad) jl js movabs mov (bad) jrcxz shrl and mov mov or jnp jmp pushfq rex.WXB (bad) (bad) lret add jno int lret rex.WR adc jae rex.WB rex.WRX int mov (bad) test rex.WRXB lret (bad) stos push fstps out cmp js imul rex.XB (bad) (bad) (bad) pop nop rex.W callq jg (bad) pop jno rex.WRXB xchg (bad) (bad) movabs rex.WRXB (bad) (bad) ficompl xor scas imul repz (bad) mov (bad) pushq iret fisubrl addr32 or (bad) or enterq rex.XB push (bad) repz popq push xchg std mov (bad) cltd pop rex.X push cmp xchg mov rex.XB repz push fprem1 rex.X jne push jb data16 shlb lock fucomp scas cmpsl loope jle lret lret adc (bad) mov (bad) mov scas leaveq mov (bad) popfq mov (bad) rex.WRXB rex.WXB (bad) sub jmpq pop in in jle rex.WRX or xchg cmpsb (bad) mov int3 and xchg movabs pop push jb mov xchg push mov sbb clc mov cli xor xlat mov test mov sarb in pushq popfq popfq (bad) add xchg (bad) (bad) scas rex.WRB (bad) mov jns and rex.RB adc shlb lcall hlt pop (bad) incl jbe cwtl fbld rex.XB and mov mov pop (bad) lock stos lret jmpw (bad) callq mov sub addr32 out imul jb xchg xor je mov rex.XB adc adc rex.WX fadd jbe sbb mov rcrb xchg out mov mov cmpsl mov mov xor (bad) loope push mov (bad) sbb mov rex.W rex.X ficoml pop (bad) rex.WR test sub or (bad) js (bad) xor (bad) pop (bad) rex.WRXB data16 pop lret jrcxz (bad) push sub jrcxz sti clc and and mov cltd loop pop (bad) movslq and fdivr xchg adc mov mov rclb push lret sbb fistpl xchg cmovle stos push xor rex.X jb test (bad) imull pop cmc js iret rex.WXB sbb jg cmp rex.W or xor subl rex.XB int3 sbb xor js (bad) mov sbbb movabs mov gs add movslq addr32 cli rex mov leaveq nop test mov pop (bad) imul xchg sbb rex.WB sbb push mov scas or sar mov rex.WRB cmp mov jg fwait roll fiadd xlat push rex.RB addl sbb xchg (bad) xlat mov mov adc adc cmp push jl mov push rex.WXB add pushq pop test (bad) ss cmpl jmpq rex.WRB fwait (bad) sbb cltd enterq adc jp mov xchg lret sub data16 loopne (bad) rex.WB adc in rex.WXB out (bad) out mov jrcxz (bad) push js test cmp retq xor rex.X out je mov (bad) repnz (bad) out rex.XB retq mov mov jae xor adc or mov push xchg (bad) sbb xlat (bad) add int xor add sub rex.X imul outsl fwait mov out cmp idivl insl rex.WRX jl movabs or (bad) (bad) movabs pop pop push cwtl repz sub jg ficomp add cli and and (bad) shl iret insl xchg int3 or movabs cmp jb lods cmpsb mov test movabs rex.RX retq rex.XB std outsl addl stos sti sarl js rex.X jno mov pop mov je iret shll rcll leaveq xor fimull pop push sbb rex.RX rex.X push and xchg imul mov (bad) or imul iret rex.WRX ss or mov or (bad) (bad) stc (bad) pop mov jrcxz cmp faddp (bad) jg (bad) cmp (bad) imul and stos out mov callq clc sarl je pop clc xchg sbb jmp lret out (bad) add cltd roll mov pop or (bad) mov or add xor movabs fimull sbb cmc jno pop mov xor mov xchg sbb fnstsw xchg jg and sar jg cltd push rex.X movabs (bad) xchg hlt or jno out push jne mov hlt addr32 add std imul fbld mov cmp (bad) fidiv jp cmpl push (bad) (bad) outsl (bad) mov mov sbb cltd cmp cwtl mov (bad) leaveq jns jle std sub cld xchg lea jno rex.WXB iret add rol in scas xlat ss (bad) ds in addr32 sub test leaveq scas callq and loope outsl (bad) push jg sbb repnz int adc and jns adc movabs fwait (bad) fwait (bad) jb outsl (bad) rex.W in rcrb in mov adc push push (bad) pop mov ja int3 xchg imul cmp (bad) movabs jge pop push cmp adc push rex.X (bad) shrl xchg push pushq roll movsl pop mov rolb jb in cmp js (bad) adc sub jmp sub (bad) jae es rex.WRB jge sbb jne add (bad) mov cld mov (bad) retq mov or (bad) jge (bad) add xchg stos (bad) cmp retq and test push (bad) (bad) xor mov xchg movsb push (bad) cmp jns sbb mov cltd imul push mov xor rcrl rex.WXB cld xchg mov lret sarl mov sub imul ja in shll xor jns movsb ja imull hlt cltd std push rex.X xlat cltd cmp sbb mov out retq (bad) ffreep (bad) lret rex.WX lahf (bad) rex.WXB lret add or jne and rex.R rex xchg sti or rex.WX (bad) xchg or xor loopne rcrb retq mov (bad) out (bad) (bad) fnstsw and jno,pn loopne cs mov cmp mov mov retq and cmp fstps fidivrl push xor hlt rex.WB rex.RXB push xor pop mov sbb and cmp lahf sbb (bad) jno (bad) fxch stos mov pushfq sub clc orl movabs cmp xlat mov outsl clc scas jbe clc cwtl cmp rex.R stos and push cmp imul (bad) (bad) (bad) sbb mov push test ficoml (bad) push xor or mov rex.RX (bad) movabs and xchg cmp (bad) retq je mov mov mov nop push data16 xchg out adc hlt (bad) pop rex.WRB cld xchg xor pop sub leaveq rex.WRXB (bad) xor loope std (bad) mov (bad) scas (bad) (bad) sub add or mov movsb xor (bad) rex.WB add lahf sbb loope fcmovnb rex.WRB jno sub sub fldenv add (bad) pop jns stos hlt jecxz (bad) insb mov rorl out andl lret xor (bad) jae sarb iret (bad) movsl mov rex.W cli in adc xor pop rex.XB imul lods pop leaveq xchg add (bad) (bad) addr32 pop rex.W fisubl rex.WXB clc test xor xchg (bad) add add xchg (bad) and xchg xchg push adc andl or data16 rex.XB xor jmpq outsl (bad) push mov xlat fst add rcll cli (bad) pushfq subl and movslq mov adc (bad) xor sub nop lods add iret mov movabs sbb in xchg mov cmp int push jp xlat rex.XB leaveq cltd cmp xchg xlat jp rex.XB and rex.RXB ss adc adc test bnd push repnz rex.WB cmp jp out rex.RXB (bad) lret jb (bad) rex.WXB es cmp sub mov mov retq out lret jo xor cmpsb pushq imul adc push retq (bad) jg movabs and nop add mov addr32 in mov mov idivl pop cmpsb rex.WXB retq (bad) push sarb mov cmp sub leaveq pop rex.XB xor gs cltd rex.WRX xchg std int mov cmp movabs cs pushfq iret rex.X ror sahf jmpq pop lret sarb leaveq rex.WR movslq mov es int fs jbe in jns push mov or imul mov (bad) fistpll (bad) mov or (bad) (bad) push fadds xchg pop add lret retq sarb mov jns (bad) xchg or pop rex.R rex.R mov stos mov adc andl pop mov jl sarb adc sub xchg cltd iret mov xor pop out push or mov idivb adc enterq or mull rex.WXB test nop (bad) enterq pop sahf shrb rclb mov fbstp jns rex.W xor adc stc or rex.RB sbb repnz nop jge xchg jge test rex.WR xor push jrcxz xchg and fidivr cmp or mov movabs roll (bad) (bad) vmovupd hlt add xchg clc (bad) sbb mov cmpsb xor in mov rcll jo xlat mov mov xor lret xor sti or mov lods jne icebp xor pop xchg (bad) cld mov cltd xor popfq movabs sbb pop out push rex mov (bad) rex.W clc (bad) retq fdiv xchg fisttpll jns or sarl cmp sahf (bad) enterq stos mov fcoml stos rex.W mov or lock jnp lret rex.WXB (bad) pop mov iretw mov adc cltd loop cmp idivb push mov (bad) movb push xor lods cmpsl (bad) or ficom mov adc xor notl movsb adc imul pop out (bad) pushfq (bad) sub rcl mov (bad) loop rex.WRB rex.RB rex.WRX xchg (bad) push rex.WX lods ja rex.B sbb clc sub movsl and pushfq xor (bad) mov rorl adc (bad) cmc retq sub xchg and movabs fildll imul adc je std prefetch rex.XB (bad) xchg rex.RX rex.WB gs push mov mov add jae jb (bad) (bad) xor (bad) xchg jbe pop adc int mov pop adc mov pop (bad) es test rep rex.WB movslq nop rcr rex.B fstl or cmp mov jge rex.WB stos addr32 std cmp orl push (bad) data16 js fdivrl loope push mov cld movsl push (bad) clc cwtl cmpxchg (bad) ss pop ds iret and (bad) (bad) ror pop lock rorl leaveq jg (bad) push xor sub cmpsl lahf mov adc out lret pop rex.WRXB out (bad) icebp es xchg mov adcl mov pop mov (bad) frndint pushq adc mov insl jne je mov rex.WRB pop mov mov xor rex.WRX rex.WXB icebp mov rcr (bad) ss rex.XB rex.WRXB enterq callq movsl fst vpsraw sti sub pop imul mov (bad) sub out mov (bad) mov sub out loope (bad) xchg jrcxz shlb xor out mov jno rex.RB (bad) mov pop subl mov cmp fisttpll (bad) rex.XB (bad) test and out sbb (bad) (bad) mov (bad) (bad) xor mov int3 adc mov rex.RXB (bad) or and repz jo movslq fs (bad) fmul scas rex.RXB xor icebp rex.WXB clc iret (bad) rex.WRX (bad) std mov mov hlt (bad) xor lock iret jp adc stos rex.WRB jg outsl sti in insb rex.WB mov fucomp (bad) clc in sahf and and (bad) jge jle loope movabs fbld clc (bad) mov add jp cli rex.XB rex nop fistp xlat insl adc or rex.WRB pop sbb scas (bad) enterq adc (bad) out pushq pop int rcll scas rex.WB rclb rex.WRB (bad) adc sbb (bad) xchg nop stos sub sti rex.WRB mov sbb out xchg jno or shll out lock loopne jnp adc icebp adc fistpll or imul mov iret addr32 rex.RB test mov pop (bad) std out in scas enterq (bad) fimull jne cmpsl (bad) mov cmc repz mov mov cmpsl rcll xchg mov jns and retq stos sarb jb fmulp sub movabs lret (bad) imul addr32 (bad) sbb mov pushfq lret adcb cmc subl jbe adc cmp mov (bad) xchg movabs (bad) push adc repnz add rex.WXB rex.RB jbe sbbb nop (bad) xor fist (bad) movsb rcll xchg lahf (bad) iret cmp xchg stos (bad) js pop (bad) (bad) (bad) movslq push rex.XB loope rcrl stos adc (bad) movsb mov mov cs loopne sbb rex.WR rex.WRX (bad) jmpq mov int3 xchg outsb rex.RXB rex.WRXB adc insb xlat xchg loopne rex.WRXB cmpsb push test (bad) push rex.XB (bad) rex.W test jle stos rex.RX xchg movabs jae lret add xlat adc out push int3 int3 (bad) cmp incb addr32 movabs mov lea jo add mov cs mov sub movabs stos add mov mov rex.WXB add (bad) std xchg iret adc (bad) mov cmp push (bad) (bad) rex.RX addr32 shr repnz cli jle hlt mov rex.X and addr32 movslq jbe lock rex.R pop rcll pop xchg scas scas mov mov callq cmp (bad) mov xor rex.RXB outsb movabs gs (bad) (bad) lea xchg rex.WRXB (bad) repnz pop adc (bad) push rex.WX rex.WXB addr32 mov (bad) rex.WXB rex.WRXB and leaveq scas sahf sbb stc int3 mov or jae xchg pop (bad) sbb callq (bad) (bad) jge rex.X (bad) (bad) rex.WB mov and mov (bad) add (bad) or stos sub push (bad) iret rex.WXB and (bad) cmp xchg lret (bad) cmp cmc mov lret jae sarl movabs rex.RB repnz add test (bad) adc push mov fsubl retq and push mov mov or xor jg ja scas sub sub lea mov movabs lret or push xchg jo (bad) adc add jno movabs fcom loop pop loopne pop pushfq pop vaddsubpd jmp (bad) ficoml movabs cwtl out sarl xchg push rex.W stc xlat push pop mov pushq sbb pop (bad) rex sarl xlat mov mov out sbb fstps mov fdivrp test jae cmp ficompl (bad) rex.WR adc (bad) cmc (bad) ja jge test (bad) rcrb (bad) cmp lret add iret lods xor push adc cs callq (bad) mov rol (bad) and push lret xchg retq insb cltd fstps pop fadd ficoml cltd sbb mov cmp out ja adc (bad) xor rex.XB repnz cmpb (bad) (bad) shrl fidivrl xor pop in cltd callq iret jns mov or sub lret movabs sub in insb (bad) ficom ror mov push cmpl cltd xchg add lock movabs xlat cmp cld mov jbe jmpq (bad) repz pop mov cmp lret out lret data16 rex.RXB scas insb outsl leaveq mov callq jl sbb fbstp gs ds xchg rex.WRX lods fidivr or fchs and mov gs cmc or sbb rex.WRXB movabs jb push out ja (bad) pop (bad) lods mov mov (bad) fnstenv cmc (bad) adc (bad) callq adc xchg (bad) (bad) icebp pushq sub enterq stc (bad) pop jnp out xor fild (bad) loop icebp adc fst fisub cmp scas fcoms cmp mov xor (bad) cmp gs mov mov xchg (bad) jl xchg fdivrs xor loopne ja mov rex pop and jae rex.WRX (bad) adc out rorb pop and (bad) (bad) jbe cmp jmp pop repz sar not sbb fmul outsl sarb scas outsl sbb (bad) out fdivrp nop sub retq fdiv (bad) (bad) enterq test retq int3 jmp push or push mov mov and pop push cmp rex.WXB pop xchg iret (bad) fdivs flds ficoml rex.RXB mov xor lret (bad) cmp (bad) (bad) mov sbb rex.W adc lahf (bad) jno push jno cmp idiv jbe jae (bad) mov mov fistp push xor jl mov retq out ss rex.WRB leaveq lret (bad) outsb xor (bad) (bad) jmpq sti mov loopne jbe adc rex or movabs (bad) cmp jp repz xor movabs addr32 jns xchg and jno rex.XB sbb mov ftst mov lret mov rex.WX (bad) stc push xor fs push data16 fdivl (bad) sub insb subl xor sti or (bad) rex.RX jmp rex.WB xor push push (bad) xor retq cmp mov push pop xlat (bad) outsl notl pushq cmp sahf pushq xchg sub imul mov cld or mov cmp (bad) outsl (bad) (bad) cmp test push movsb scas (bad) repnz ja (bad) mov int sub jl rex.WB addl shll and mov (bad) (bad) (bad) mov sub xor sub mov rorl xchg popfq xor rex.WR or out pushq imul test add and jrcxz fcoml adc retq (bad) xor or iret cmp xor cmp mov rex.X mov nop shrb test rex.WRX addr32 rcr and fldenv div pop (bad) rcr sar data16 sub jmpq (bad) mov xor xor imul (bad) (bad) mov movabs pop xchg callq lods loop pop lods (bad) rex.XB pop sbb cmp shl movslq rex.WR mov or movsb or rclb in rex.RXB mov push test jnp (bad) int mov mov (bad) pushq outsb popfq or (bad) mov (bad) push sti (bad) rorl (bad) (bad) adc mov jle rorl fnstcw (bad) sub rex.WB lret sbb jnp rorb jmpq xor js rex.WRB (bad) xor fistpll jl xor addr32 lock imul fiadd neg ja movsl (bad) pop jb in mov movabs addr32 mov addr32 adc callq mov in xchg (bad) adc pop (bad) (bad) hlt mov pop cmp fiaddl push (bad) mov notl (bad) push (bad) xor icebp clc (bad) ss sti cs xor mov stos cltd sbb push ds and cmp xor outsl pop mov (bad) addr32 movabs movabs mov rcll jle adc jb movsl mov adc xchg ss (bad) retq lret adc retq (bad) mull fnstcw xchg mov push out adc stos movabs xchg scas push imul jne lods or sbbb xchg addr32 jae mov mov mov jno fnstenv movabs (bad) sub (bad) cli leaveq int xor mov orb loop add add (bad) cmp cmp xchg cmpl jne mov rex.XB mov (bad) add rclb stos cmpsl hlt sbb ja movabs test add mov rex.W rex repz fcmovbe in rex.XB sbb or (bad) rex.RXB cwtl xor rex.RX insl mov mov jns nop (bad) mov sbb cmp movabs fcoml lahf sbbl xchg xor sbb xchg xor movabs ror and mov (bad) pop jp clc out movabs leaveq je or sub (bad) sub (bad) cmpsb out sbb cltd test lods in cmc movabs (bad) lret rex.R rex.WRXB addr32 adcl insb xchg (bad) jno or mov out lock or (bad) fild fnstsw roll pop xor lret sti stos pop lods ss push mov xor movsb fisub mov cmpsl adcl or rol mov pushq xor sub lock shl (bad) push loope push subl btc push push (bad) mov jbe sbb outsl push xchg pop pushfq cmp cmp stos sbb rcr movabs rex.X fs mov xchg push adc rex.RB jo xchg rex.RB rex mov fbstp pop fsubs mov sbb pop cmc fsubr in loope retq push mov rolb push rex.RX push rex.WRXB rcl add push insb cmp hlt stos sub jg jge data16 je mov jl (bad) lods (bad) or jl push sbb stos pop addr32 and loop xchg push fwait scas jl (bad) stos sub ss rcl or retq push movsb leaveq and xchg adc xor test pop push loope gs iret push imul jp out mov cmp pop imul js (bad) rolb jo sub mov movabs mov jg mov retq loope stos movsb pop lea add std fisubrl rex.WX fwait push mov rex.X sti lret cmpsb xchg rex.WRX addr32 rex.RXB ror xchg int fsubs fcompp jmp (bad) adc cmpsb movabs (bad) xchg test xor mov (bad) loop rex.WB jmpq sarb adc mov (bad) callq mov xor rex.RXB mov out nop retq (bad) out addr32 jo loope jne mov and insl mov cmp lret stos ror rex.R xchg sub int3 and movabs (bad) rex.WRX shl movabs rex.WRXB insl lret popfq push mov jge outsb lret mov lret mov int sub sarb (bad) xchg jg lock (bad) sbb loop cmp movsl sbb jns rcrb cli in fstl rex.WR (bad) xlat mov rex.RXB mov cmp rcll or mov pushq ja (bad) mov sbb cmp jo ror rex.W cmp xlat pop je fs mov xor rex.WXB (bad) adc and adc icebp rex.X rex fs add callq push (bad) fisubrl mov add (bad) (bad) gs jge mov mov and (bad) sub (bad) data16 xchg add jns movabs mov movslq retq jle scas (bad) mov rex.WRX push cmp rex.WXB pop shlb and loopne xor int movsb outsl add cmp ficoml out (bad) iret mov mov fidivr test movslq jp repz xsha1 cmpsb rex.WB movabs jnp (bad) js mov (bad) (bad) nop test pop addr32 push sti and mov xlat test (bad) sub fnstsw (bad) sbb mov cwtl stc (bad) (bad) push rorl jb pop lods rex.WRXB and pop cmp loope and sub mov fbld xchg stos rex.RB xor pop movabs (bad) mov mov rcl repz (bad) xor xlat xor (bad) shrl lret or sbb rex.W data16 int enterq cmpsl lea cmp retq sub loope fwait (bad) cmp xchg cmc mov in xchg insl cmp xor int and add int stos (bad) pushfq xchg xor xlat push cmpsl insb or retq lret adc cmp push movabs fsubr push sti repz in test cld (bad) je (bad) (bad) movabs jns int3 rex.XB popfq sub rex.WXB and rex.RB rex.RX add roll cs ja jge leaveq jg xor pushfq add adc rex.RB pushq sub adc lods cltd add (bad) in test mov push ficom jl cltd xchg rex.WRXB xchg notl testl push je rex.WX adc (bad) rex.WRXB movabs retq and (bad) mov sbb mov cmp fs jl test add cmp jno fbld test retq mov (bad) movabs in lret xchg pop (bad) mov cmp (bad) xchg fwait rex.WXB int (bad) sti add pop pop int3 fnstenv rex.R notl retq pop nop rex.WXB jl je rex.WXB test pop cltd out (bad) mov xchg out fwait int3 flds xchg rex.XB rex.WRX (bad) scas mov stos push rex rex.XB rex.WRX or mov sub rex.RX mov rex.X rex.WX rex.WB ss add nop hlt fidivrl leaveq sub rex.WRXB pop and xchg testl pushq mov xchg (bad) cmp jno jns mov add mov (bad) pushq (bad) lea (bad) sub add gs mov (bad) (bad) stos mov (bad) cmp rex.WRXB fcomp cmpsb (bad) xchg sarb enterq jp rex.W bnd lret jnp lret xor mov (bad) ffreep cltd and sbb push sti (bad) leaveq or and popfw cltd rex.W rex.B (bad) callq adc mov rex rex.RX enterq (bad) sbb imul loope mov jns adc addl ficomp mov addr32 cmp not ror mov push push (bad) (bad) cmpb pushq jmp test or scas sbb (bad) sub xchg mov cmp push ss addr32 rex.XB pushq xchg rex.WRXB ss sbb loop (bad) rex.WRB push mov jge clc sbb jmpq mov rorl jg std mov add pushfq rex.WXB push pop xchg int3 jns mov (bad) movabs fiaddl (bad) rex.X xchg or setno lret ror mov ds rclb xor (bad) push imul sub movabs mov (bad) push (bad) xor movabs sub sub mov mov add sub movsl mov jns cmp rex.W xchg mov rex push jmp push sahf iret roll mov xchg mov movabs rex.WX lods out rol jns (bad) jmp xchg cltd (bad) mov loop je sbb (bad) xor pop ja callq shrb (bad) rex.WX cmp rex fldcw movabs or repz xchg push push rex.RXB rex.XB movabs add push test lods cmp rex lret xchg mov push xor movsl xor scas lods out pushq nop rex.RXB iret mov in mov rcrl pushq (bad) xchg mov in movabs and (bad) mov (bad) sbb test (bad) fwait cltd (bad) push pop push xchg mov mov cmp push (bad) fwait movabs jo push mov mov ja test nop sub sti (bad) retq xchg fld int3 push cmp xchg pop jb jnp lods sub in (bad) (bad) rex.WXB sbb add movabs or (bad) rex.WB stos sub and int3 sub std js enterq scas cmp clc mov cmp mov sbb data16 mov jmpq stos or test (bad) mov movabs (bad) xor cmp (bad) jno mov mov mov mov mov rorb or movabs sub jrcxz push push lods mov (bad) retq sbb jmp or ficoml (bad) (bad) xchg or fnsave sub (bad) (bad) and jbe xchg test rex.WX rex.WRXB data16 (bad) loop cld (bad) movabs xchg ds sarl imul popfq outsb jp addr32 xor jns sub movabs xchg xor push je jnp stos xchg movslq out add loopne addr32 push jmp fsubl lahf mov jne,pt cmp (bad) xor jo mov retq xchg xor (bad) cwtl lahf adc int push push rex.WRXB hlt rex.XB std (bad) (bad) stc pop mov rcr loopne js cmpsl add repnz (bad) sub (bad) xor rex.WX ja mov rex jge pop jo mov andl (bad) mov movsb sbb (bad) leaveq sbb scas push push adc pop repz cs clc (bad) js lret mov leaveq sbb int push pop and adcl mov insl (bad) sub sbb popfq push rcrb xchg xchg cmp (bad) jmpq mov out (bad) ficompl adc xchg movabs out cltd mov mov jle (bad) pushq push mov pop (bad) rex.WRXB rex.WB movsl mov test sbb pop iret lret scas cltd sbb add (bad) mov (bad) xchg mov sub (bad) mov out (bad) xlat pop jmp rcll (bad) xlat mov push lret jrcxz or rcrl (bad) (bad) popfq lahf in xchg jns cwtl cmp mov xchg push shll or (bad) and xor test sub movsb mov pop loope rex.WRXB test adc lods xchg (bad) add out (bad) mov rclb pop jp xlat (bad) (bad) sbb repz xchg lock pop and pop shlb popfq nop mov nop cmp xchg lret lock addr32 adc (bad) callq mov rex.WRB test (bad) out mov rex.WX pop jno pop mov mov (bad) (bad) nop popfq pop (bad) cmpsl pushfq or mov lret xchg cmpsl mov out sarl lods pop in and jb adc and data16 movabs mov vmovupd sub fisubr movabs std mov lahf (bad) (bad) js out rex.WB push xlat addr32 (bad) retq cmp (bad) pop ds pushq rex.WX out xor movsb cmp cmp fs rex.XB jne rorl jp movslq iret test xlat loope outsl cmpsb ficomp xchg xchg hlt jrcxz jbe cld iret movsb sbb or test enterq (bad) sbb pop (bad) cwtl out cmp rex.B cwtl mov cmp rex.WXB rex.X rex.WXB mov mov mov popfq test clc test cltd add lea cmp clc rex.WXB shll retq imul and rex.RX rex.X mov adc fwait adc push or (bad) mov sbbb mov mov outsb cmp add mov jo addr32 cmp iret sub mov hlt fist popfq scas jbe sub xor scas jl (bad) stc pop std xchg notl addr32 mov or (bad) mov imul stc adc (bad) lea rex.WB (bad) cmp (bad) std movabs jmpq rex.WX movabs movsl lods (bad) (bad) mov adc movabs out push std adc stc add loop rex.WXB fwait imul mov jnp test xchg movabs nop test (bad) jae (bad) retq rorb repz cmp cltd (bad) shrb (bad) push rex.RXB adc pop iret lods sarb xchg jl lock cmpsl sahf cmpsb sub pushq in xlat (bad) fsts cmpsl xchg rex.WX xchg cmp mov (bad) xchg out or test retq fcoml pop xchg pop incb jrcxz sahf mov xor sti (bad) push rex.WXB push mov mov rex.RB mov out and movabs fnstenv and enterq sbb (bad) mov adc mov fldenv stos mov loope and rex.RB movsl (bad) (bad) movsb ss out movl loopl cmp es cli int3 (bad) and rex.WRB rex.WX push mov loop test (bad) rex.WXB pandn pushq mov jae mov scas rclb jg (bad) xor fs cli rex.R sub push shrl add jmpq lods add adcl out (bad) push loop jp push jno mov clc mov xor xchg and leaveq sub (bad) pop sub or adc adc (bad) jae cwtl addr32 rex.R xchg xor mov jrcxz in lahf push cltd push pop negb jnp push pop rex.RXB (bad) enterq push (bad) jmpq cli (bad) (bad) pushq xor and rex.R rex.WX xor xchg or mov retq lods mov mov (bad) push push (bad) fs callq xor sbb push (bad) (bad) movabs xchg mov or push xchg gs push (bad) pop rex.RXB rorl pop (bad) lea and adc pop jno xor fidivrl (bad) sbb mov in cmp add adc jo pushq xchg (bad) xlat icebp cmp pop retq mov sub mov push rex.X data16 sbb sbb cmp mov rex.RB out (bad) add jnp sub rex.W fiadd pop sbb rex.WB rex.WRB push (bad) mov pop jle push push out movabs stos mov and xchg mov (bad) xor or movabs in mov data16 cmp pop pop cmp mov jns cmp sub cwtl fstl push (bad) rex.WB rex.W nop xrelease movabs stos adc jae in adc insl and and pop push xor or mov mov mov stos (bad) adc cmp sub xor or (bad) mov mov push shll cltd (bad) mov xchg retq (bad) rex.WRXB sub lret movabs (bad) add or xchg push addr32 test (bad) jmp movslq add xor test scas push (bad) add xor rex.WRXB shrb sbb jge sbb int lret xchg xchg (bad) (bad) scas out (bad) stos rex.XB and jne rex.RB ds push addr32 (bad) outsl out lret repz (bad) jbe mov sbb jae or push rex.R push rex.RX (bad) (bad) lret (bad) and fs or xchg sti (bad) or out cmpsb cmp (bad) (bad) or addr32 in (bad) retq adc ficoml sub lods pop je in jae fisttpll fwait add mov std jb adc mov xlat mov add mov add sub mov insb jne pop addr32 jnp (bad) (bad) (bad) (bad) jnp (bad) cmp (bad) mov (bad) sub xchg (bad) idivb scas xor lret rex.W mov (bad) ss or sub mov loope sbb sbb iret cmp mov rex.RB (bad) out (bad) sbb sbb andl add (bad) out push (bad) xchg sarl (bad) mov cwtl movabs movabs rex.RXB rorl out (bad) outsb push mov rex.WX sub sarl adc pushq rcll rex.RXB in mov or in lret push lret xor ss add sbb out (bad) jns push cltd test (bad) frstor stc mov rex.WX mov push push or lahf rex.WX jp in mov pop pop int3 fsubl movabs jne pushq pushfq std gs test jne negl mov fmull in push jg shr (bad) gs xchg push rex.WXB cmp push add mov (bad) sub or sbb movslq movsl xor std mov xchg push (bad) rex.WR and cmpsb rex.WXB cs push out outsb mov xlat pop (bad) (bad) movabs faddl fwait jns fiaddl rex.WRB (bad) jae add or icebp mov jle test orl jnp add sbb addr32 sbb mov mov (bad) lods (bad) mov mov cs addr32 pushq sbb out nop adc sbb adc mov xlat fnstsw imul rex.XB gs int (bad) cs shrb rex.RB cmp test rex.B rex.WRB jo (bad) cmp pop (bad) je sub enterq movabs and (bad) or (bad) push shll push clc add mov (bad) sbb int3 movabs mov and scas xlat adc xor sub jae xchg rex.WXB rex.WXB mov imul cwtl (bad) and fs cli orl sbb jge lahf (bad) cmp xorl lahf pop iret movabs push rex.WRX pop mov (bad) xchg cmp xlat mov addr32 lret fld rex.WXB pop cmpsb rex.WXB fcom cmc push insl leaveq hlt cmpsl sub cmp sbb adc sbb scas add movabs jmpq leaveq and rex.RB (bad) jge push lret rcr insl lret (bad) adc sbb iret mov stc pop xchg xor rex.RXB scas mov mov fstp mov xchg decl push (bad) adc mov xchg movabs cld movslq or and imul cmp and movsl adc adc jne sbb cltd rex.WX lock movabs sub pop adc (bad) sbb cltd (bad) stos jnp jge push (bad) (bad) mov mov test jns and xor (bad) xor sub add lret add fisttpll add (bad) (bad) cltd xor xchg rex.RX jns test (bad) (bad) in retq repnz or jmpq add or cmp add mov rex.WB lret rex.WX stos test mov add jmpq enterq repz repnz (bad) or lret mov (bad) mov adc push fnstenv lahf jmpq (bad) cwtl stc pushq (bad) cmp or mov lret cmpsl jns imul addr32 lock iret sarb lret xlat xchg jge cmp rex.WRXB or (bad) sbb and cmp rex.R fwait cltd (bad) int3 (bad) hlt clc imul mov roll rex.WXB rex.X test or stos ficompl sbbl lods lahf sbb xchg retq add inc shrb (bad) pop ds push cwtl add outsb sbb getsec enterq fwait mov test jg jl fistpl out movabs (bad) fwait mov pop push sub mov imul pop cmc mov movabs rex.RB subl rex.XB push (bad) sub cmpsl out cmpsl add add repz rex.RXB cmp push popfq and and lret roll mov (bad) scas in addr32 movslq add insl and scas mov xchg push decl push jbe movsl jns out pop retq bswap adc rex.WXB movabs sbb insb sbb xlat or rex.WX fwait cmp mov mov mov fsts rex.WR lods pop push (bad) cltd mov rex.WXB (bad) in int cmpsb xchg mov adc int xchg mov or fsubrs cs (bad) and mov ds push scas mov jp fstl mov cmp xchg ja addr32 rcrl movslq push mov push sbb sbb ds mov mov retq sbbl rex sub scas (bad) mov cmp push push (bad) outsb jge (bad) addr32 mov mov movabs fwait mov jmp pop mov shll mov cmpsb movsl cmp movabs pop adc xlat cld rex.WRB push xlat cltd (bad) (bad) lods mov rex.R mov push in std adc outsl rcrl sbb push std pop xor jle imul cmpsl cltd adc push xchg lret (bad) cltd out mov (bad) jnp lret xlat (bad) scas jnp sbb sub push (bad) rorb cmp repnz ficompl outsl push (bad) retq add loop popfq shlb scas lret js gs setae jns mov push fcmovu pop push and popfq fstl cltd std leaveq setb push rex.WRXB sahf cmp enterq xchg sbb mov gs ud2 int (bad) xchg (bad) xchg cmp mov add cmp popfq xchg rex.RB pop pop mov clc rex.RXB mov lods cmp cwtl (bad) xlat imul xor retq and icebp cld rex.WRB push xchg cmp jnp or imul iret adc and xor jae (bad) int (bad) push cwtl mov lret icebp push fs sub xor (bad) cltd je jrcxz cmpl (bad) xchg (bad) jrcxz mov jns mov push andb movsb (bad) (bad) (bad) mov xchg rex.RX jo rex.RX lods jb (bad) rex.RX xchg mov or (bad) leaveq mov mov (bad) lea jb pushq mov xchg (bad) loop,pt vrsqrtps int scas lahf leaveq (bad) add scas fs loop test callq lods mov fucomp fistl cmpsl fimul sbb jnp ja movabs stc sbb movabs jge movabs mov stos (bad) lret pushq flds clc jb adc stos mov jae pop push xchg mov (bad) cli jg pop lods xchg (bad) insl data16 mov and xor (bad) pop pop (bad) jmpq mov (bad) data16 ja jg movabs mov cmp (bad) xchg (bad) (bad) jne mov and sub rex.W xor lret jmp mov loope xchg mov push iret lret lret (bad) stos (bad) mov push test adc rex.WXB (bad) clc sub movslq movabs test movabs rcr xchg sbb imul mov mov jg xor xchg rorb (bad) push cmp mov and rorl movabs int fcoms cmpsb mov movabs movsl xchg add cs iret rex.B movabs mov fstps jb movabs ds andl mov int (bad) push rex.WB add rex.WXB addr32 cmc mov repz negl adc xlat inc xlat push add (bad) adc outsb cmpsb (bad) iret mov int movabs lret push retq or jmpq es lret push jno pop cmp rex.WRB negl (bad) cs push (bad) push adc mov fnstenv andl out adc cs sub lret sbb jb fcoml jmpq cmpsb mov jb add jo (bad) sub lret add test stos sbb mov std mov (bad) div jmpq xor (bad) push fwait ja fild (bad) mov int3 add cmp jg addr32 cmp sbb (bad) adc ffree lret cmc sahf mov shl fsubl shrl push xchg cwtl addr32 and (bad) and (bad) mov vcmppd mov xchg stos (bad) sarb mov (bad) rex.RX and adc lret pop xchg push jns add fdivl rex.RXB leaveq xlat ds xlat out adc (bad) mov sti mov pop xchg mov rex.WX xchg in ficompl outsl and (bad) cmp adc add xlat adc adc cmpsl fiadd push rex.RXB iret lock adc mov lods rex.RB mov xlat fsubl xor loope addr32 xlat sbb in xor rex.XB cmp test shlb (bad) addr32 mov and mov movabs (bad) cmpl xchg (bad) pop cwtl xor (bad) push mov adc (bad) sarl jns orb or add iret or mov lods mov xchg (bad) cmp (bad) rex.WX xor pop ja and addr32 or imul (bad) cmp movslq fcomps mov jl rex.WRXB and (bad) out xor pop mov mov push jrcxz xlat jbe (bad) ja stc cmp movsl (bad) adc xchg mov sub (bad) stos cmpsb mov sbb repz sbb rcl sub rex.B xchg mov test pop cmp lods (bad) cmp sarb sbb adc mov sbb (bad) sbb fist push sarl ja cli retq xchg roll pop fcomp repz sub pushq xlat fdivrs movabs and bswap xor jge add xchg or sub fisubrl mov rcrb jae xor rex.RXB and adc mov rex.WXB rex.WRX mov (bad) cmp (bad) fmulp out iret rex.X adc js xchg xor mov jle ljmp (bad) and gs mov lret sbb adc sbb sbb pop sub pop sti cld (bad) jnp cmp cld jp jbe insl cmp movabs and push mull test pop pop mov (bad) add (bad) rex.RXB movabs pushfq movabs negl lret rex.X rex.RX jle popfq out jmp (bad) movsb rcr add cmp mov retq xor in pop cs rex.X adcl jno ss (bad) imul test (bad) fdivrp jp jb sub iret stos cmp rorl data16 out xor (bad) int3 and add movabs leaveq psraw addr32 mov rex.RB pop scas or std mov sub stos (bad) pop or (bad) xchg (bad) in out xor in incb mov add (bad) push mov fcmovb stos movabs xor jae retq in in movsl or push mov test stos xchg push int (bad) (bad) xchg clc es movabs leaveq mov sbb cmp xchg fwait xchg pushq stos fisttpll cmovne xor rex.X xor test xor sbb and xchg pushq (bad) xor scas movabs insl xchg xor sbb rol cmc xor pop (bad) jo movabs movabs imul push (bad) (bad) scas sub fldcw (bad) adc push mov xor cmc (bad) adc xchg lods je kmovw adc fwait (bad) cmp lock mov imul jmpq nop loope lahf divb (bad) sub repz adc and (bad) rex.WRB rex.WRXB lret mov fsts pop sbb rclb jno mov cmp xor (bad) ss rex.XB cli jo push int3 push add pop icebp pop ficoml (bad) and rex.WRX (bad) (bad) mov lahf in add rex.RXB imul jns ficompl cmp pop sbb fnstcw movabs push adc pop lock retq addr32 jo mov adc in sahf loopne jge imul or (bad) push shlb or push cmp gs or (bad) and (bad) or movb retq (bad) (bad) push cltd push test sub movabs mov add fwait or fsubrs adc mov rex.WRB ss leaveq and mov xchg lahf (bad) cmp add rex.WB sbb loope hlt lods cmp cmc (bad) idiv outsb cwtl jbe movsb pop mov mov xchg (bad) adc jp pop rex.WRX and (bad) rex.WB stc movabs callq movabs jle movabs or fincstp rex.RXB mov cmp mov test mov or (bad) pop xchg in rorl xchg lret notl xor loop mov sub (bad) mov sub rex.RXB (bad) xchg rcrb fistpll push fs rex.XB xor cmp addr32 rex.WRX xchg mov mov rex.WRB negb (bad) fistp rex.RB rex jge or pop lret lahf int3 pop cmpsl add add rol cmp out cli (bad) fsubrl addr32 rex.WRB sti sti rcl cmp (bad) pop popfq jbe adc jle mov cmpsb and fildll mov and adc pop int fsts ror scas mov mov sbb stos jle nop cmpsl (bad) rex.WRX (bad) mov pop jle rex.XB xchg lret sbb mov rex.RB ljmp cwtl fmuls sub cld test rex.WR movabs or jp (bad) xor roll pop pop rex.RX test xchg mov nop adc cli mov or mov stos xchg (bad) cs (bad) cmp movslq fdivr (bad) sar ds scas push push popfq imul xor sbb jg mov (bad) ds xchg fs sbb xlat rex.R rex.WX (bad) sbb or (bad) jb rex.RX scas insb xchg jge,pn imul sbb retq jne xor mov fwait out sub xchg or cli jl out std or (bad) (bad) jle mov adc xchg int rep xor lods jne jmp mov sub paddq (bad) mov sub or lahf mov (bad) retq xchg push lods lret stos jns test xor or fwait cld mov ss mov lods jne sbb sbb icebp (bad) mov in ds pop (bad) sbb sbb (bad) cltd rex.RX repz mov cwtl imul rex.R movabs xor mov cli ljmp (bad) fmull test rex.WB (bad) lock (bad) jns rorb rex.R lret rorl rex.WRX push clc sub callq mov notl test push scas (bad) mov shrb cmp xchg sbb push pop clc mov xlat and rcrl xor movabs shll and xchg shl testl pop adc sti jno sahf adc push mov (bad) (bad) out push adc sub adc (bad) cs insb rex.WRXB retq xor sti rcrl and push mov sub jo rex.RB lcall icebp xor shl (bad) sub (bad) sub rclb pushq xor leaveq out push clc rclb jae lahf sar addr32 retq and mov test cmpsl fwait movabs and and in jne fdivs addr32 adc xor xchg pop jne repz lretw ljmp push (bad) sub mov or cmp mov lret (bad) (bad) out jae sub (bad) rex.W jo mov mov mov pop (bad) insb (bad) in xchg (bad) push roll pop mov mov sbb push rex.WRXB mov (bad) xchg mov lret mov (bad) xor jne adc sbb sub jae popfq cmp mov jbe (bad) xor lahf rcrb jb add or imul rex.RB jae (bad) push stos mov cmp (bad) test cwtl test pop mov sub movabs xchg insl xchg jne flds test leaveq rex.XB cmp mov jnp xor pushq rcl outsl xchg or lods xor out add mov jg cmc int es mov and loope and rex.RX (bad) pushq fidiv mov or sbb out add cmp es rex.X ss cld lea scas pop scas pop popq rex.WRX sbb fst rex.B xlat cs movabs xlat ja rcll iret lret mov pop fidivl iret sbb movabs mov rex.WRX (bad) rex.R mov rcll lret movabs push jmp mov test mov (bad) pushq data16 sub jno,pt jrcxz add ja jrcxz ja jnp mov out movabs addr32 mov gs xchg retq ja cltd test movabs pop adc pop out test adc scas (bad) xor movabs int leaveq sbb rcll fs rex.X sbb push (bad) lret out add add jno mov out jno sub shl (bad) movsl frstor rcl rex.WRB loop (bad) mov cli ficom jo shrl jp rex.WX (bad) outsl jg leaveq pop (bad) rcl sbb iret or mov callq ja (bad) sti pop nop jg jp jae fistp add sbb outsl int3 jns mov sarb insl (bad) fdivrl push mov iret pop mov mov (bad) jns sbb std movabs test mov mov mov in push fs movslq lods xor (bad) rex sub fcomi ds sbb or jns loopne hlt sbb jg (bad) (bad) xchg leaveq pop sbb mov ss (bad) (bad) shll fdivrl push (bad) shrb jmp rex.RB push sbb rcll xchg or xor int3 adc cmp mov fcmove adcl lret or fidivl cmp decb adc jl cli (bad) idivl pop sti pop fnstenv jnp xor pop (bad) jg dec or fisubrl and (bad) cmp lret (bad) (bad) movsb shll mov jnp mov push add jle mov movabs andl jrcxz loop mov (bad) mov pop (bad) xchg sbb xlat cmp push and scas mov jrcxz (bad) and jg (bad) addr32 int ds outsb jne enterq xlat push sar xchg mov in xor mov adc mov mov lret add xchg xor jp mov stos imul in mov (bad) rex.WX mov and mov mov sbb int ds sub sub movabs addr32 add in ja pop cmp rex.WX cltd popfq (bad) pop leaveq mov mov xlat add mov push xor callq addr32 pop sbb adc fsubl xchg es out pop in sbb imul mov mov ffreep decl int mov (bad) xorb stos and mov mov roll mov rex.WRB lea mov mov rex.WXB xchg mov xlat insl sub insl pop cmp fdivrl mov cwtl cmp repz (bad) mov pop (bad) jp push jno outsl notl scas loope imul insl (bad) imul je movslq imul je pop int mov je rcll ficompl fistp mov and and cmpsl (bad) cmc repz xor mov subb movabs pop in jae fldenv callq and addl sbb pop mov leaveq pop mov ss or xor cs xchg scas fwait sub (bad) and test (bad) out in rex.XB cmpsl rol in mov sarl addr32 clc or cmp hlt xlat mov cmp mov rex.XB pushq pop pop jae mov pushq jo orl nop jmp data16 cli mov out add rex.WX rex.WB jrcxz out sub rex.R scas sub jnp pushq mov (bad) mov xchg adc xlat jp movabs shll rex.R mov pop pushfq (bad) movsl scas pop adc (bad) sbb mov fbstp lret (bad) sbbb add adc mov (bad) jge cli jle (bad) (bad) xor addr32 or movabs mov jl (bad) cmp pop lods xchg push push (bad) xchg (bad) cmpsb adc repz mov in out hlt lret (bad) (bad) ds movabs rex.X rex.RB adc or sub (bad) sahf mov (bad) stc mov enterq jae (bad) (bad) stos jrcxz or ss cmpsl pushfq ja cmp or jmpq sub jnp testl clc ror fnstcw xor test push loopne and sub idivl in (bad) pushq jl rex.WB (bad) scas sub movabs (bad) mov lret (bad) stc test mov addr32 ss xchg (bad) (bad) sbb or cmp pop mov jle add stos and (bad) iret and and push sbb pop mov rex.WB adc mov faddl insl lret jo stc stc push movabs outsb lock jg fimull mov addr32 (bad) xor xchg sahf rex.RX popfq mov lret retq cmp mov sub (bad) xor jnp in fsubl (bad) push (bad) pop leaveq and imulb rorb mov pop in adc (bad) and push lock (bad) mov clc (bad) fcoml (bad) or mov mov out or and addr32 mov rcrb mov std (bad) jo lret in (bad) pop xchg rex.WB mov fldenv rex.RX (bad) mov adcl rex.X (bad) xlat jmp in pop mov movabs sti mov out movsb rex.X mov out mov hlt rorl jae movslq push sub mov rex.WR mov callq fcomp xchg mov and outsl cmp or fimul or jae push rex.RX cmovnp clc rex.RXB fwait mov es (bad) xor mov cmp imul jmp sti jmp loope movsb ja xor sbb or ja (bad) (bad) and rex.WRXB (bad) cli rex.RXB add in outsb movsb ja push out adc adc add not fmul fldln2 (bad) xchg mov je out out sti jns js (bad) xlat cmp jns xor cmp push (bad) mov cmp xor adc cld stc push (bad) jmpq movabs rex.X (bad) clc or repz add push (bad) mov flds retq stos (bad) (bad) jb xlat clc roll sbb rex out and stos cmp add mov loop rex.WB test push jl (bad) add mov sub leaveq mov fldcw rex.WX shrl out push and mov (bad) out sti sbb mov pop push scas cld adc push shl sarl mov movslq cld cmp cmp int3 xchg or test add (bad) rex.WRXB xlat negb cwtl movabs retq push cmpsl push movabs mov mov rex.R cmp rex.RX rex.R rex.WR imul mov sbb lods mov rex.WR add rex.B mov jo sbb (bad) push pop cmp outsl adc test js mov and shrb cmpsl xchg sbb movabs fnstsw (bad) (bad) test (bad) mov sbb sub movabs jns add movslq test retq pop (bad) (bad) movabs sbb (bad) nop (bad) add xor lods add xchg pushfq addr32 (bad) xchg push sbb push scas movabs (bad) push iret rex.X jrcxz mov hlt icebp rclb outsl jg mov mov (bad) xor sahf mov sbb adc jns add flds fistpl (bad) fimul std fmull lock push (bad) cwtl and fimul push (bad) js loope pop out or or (bad) (bad) pop loopne (bad) pop jne xlat push rex.WB xchg and (bad) outsl (bad) stos dec sub (bad) cmp rex.RXB xor retq mov cli stc lahf test xchg rex.W rcll cmp cmpsl jg mulb xor (bad) push rex.XB xchg and push mov mov (bad) movabs add rex.XB or mov mov jmp jmp out and cmc (bad) lret xlat loop mov (bad) or stos stos outsl int adc int3 (bad) mov stos rorb xchg js sbb (bad) pushq xchg enterq rex.WR data16 and shrl movabs pop (bad) stc sub (bad) sbbl roll enterq jmp sarb xchg (bad) (bad) pop mov (bad) mov rex.X mov addr32 mov stos mov cmp fnsave push outsl mov cmp mov cmp retq rex.W sbb adc pop fldt adc test sarl (bad) jp cld fisub (bad) iret xor icebp xchg mov and lods cmp out (bad) hlt cld sub lods xchg retq negb rcll push mov mov rcrl rex.WRB mov rex.RX cli movabs rex.XB mov (bad) (bad) sub in imul xchg jnp mov jle and push sarl lea in add rcll push sub xlat push popfq mov (bad) xchg retq push scas pushq and xor sub pop xor pop (bad) jae and (bad) push test cmp sub cmp sub xor (bad) insl jmpq ja fwait mov xlat outsl jmp jl fs add and fdivl push sti and fs or mov sub leaveq add setg cmp insb mov lock test (bad) imull leaveq jp mov mov jmp mov insl push xlat push add lock pushq rex.RB xchg jne mov jb leaveq sbb adc lret push rex.R jo sub sub xchg insb rex.R or xor adc out xchg fwait jmp int in jbe movabs (bad) mov out rex.RXB xchg and movslq sbb (bad) sub test push movsl rex.WB frstor push rex.WXB push and imul mov pop jno jrcxz (bad) leaveq and jp mov cmp pop xchg xlat mov cmp cmc jo jo imul adc es (bad) movabs movabs fcmovnu mov (bad) shlb movabs mov xchg rex.R xor push xor xor (bad) (bad) jrcxz (bad) ja retq add ds pop xchg rex.WRXB xor (bad) push rex.WRB rex.XB fcmovnu and scas and rex.WB mov fldenv rex.WRXB faddl insl (bad) clc mov (bad) adc (bad) pop sbb rol xchg mov fadds insb lret adc rorb fmul pop jmp (bad) outsb fstps rex.RXB jrcxz or lea imul (bad) jae mov (bad) rex.WR cmp xchg cmp and rex.W rex.XB pmaxub enterq sbb callq pushq mov or ja rorl xchg push rex.WB sub adc int3 (bad) cmp insb jge sub cmp pop mov push xchg loope (bad) mov cld (bad) insb xchg xor enterq repnz rex.WXB adc rex.WB addr32 mov sarb iret or (bad) out rorl xchg jrcxz (bad) fs sarl or (bad) je jb ja add insl rex.XB mov lret add test or mov xchg and and scas addr32 rex.WR jnp jbe rex.WB out cmp jae sub mov mov jg cs (bad) cmp int mov (bad) and out xor int ds out cmp push test adc sub ja lahf cltd jnp or xchg movabs cwtl loope (bad) (bad) jmp push out mov mov pushq test xor lret (bad) and rex.RXB jl (bad) incb rolb loop (bad) rex.RXB cmpsl rorl (bad) enterq stc scas popfq in (bad) xchg mov cmp sahf int movabs sub out (bad) mov jle mov cmp mov test push mov mov adc or (bad) fsubs xchg popfq (bad) mov test rcl xor sub rex.X and or and rex.WRB (bad) adc fs movabs cli lods rcrl adc mov rorl (bad) addr32 int3 (bad) push push xor or fcom movabs and (bad) lock rex.B movsb out adc push stos sbb mov jg mov sbbb push pop pop mov (bad) fcoml rex.RXB jne jmp loope rex.RXB lock test mov cmp fidivr and rex.R cmc rex.WRXB addr32 cld stos push in movabs outsl fisttpll (bad) pop fdivrl xchg mov cld add xlat adc ds (bad) mov xor (bad) mov movabs jae lock sbb jae in xor lret jp sahf cmp jrcxz jmpq sbb sub imul shll cwtl adc xchg add imul jle sbb cmp test (bad) mov (bad) nop jo adc pop (bad) lahf movabs test (bad) orl sbb retq fstps xor or in addr32 scas out and gs cli xor iret sub pop push imul mov xor mov addr32 mov jns out test pop iret mov xor mov xor xchg sti out adc (bad) (bad) jl mov rex.WB rex.WRX xchg (bad) sub rex.B rex.R nop sbb ss leaveq (bad) sbb movsl mov jno (bad) mov push adcl fdivrl icebp push jmp test pop (bad) mov cmp loop ds cmc mov scas sbb movabs roll push mov jg (bad) sti addr32 mov sti mov cmpsb rex.WX cmp xchg jae jns mov xchg jle sbb mov enterq mov jp mov addr32 mov (bad) enterq addr32 stos enterq pop cmp xchg loopne (bad) and ds jno rex.XB jle test (bad) int jp and (bad) iret rex.WR data16 pop repnz xor stos jo (bad) rex.RX jmp jg add repz test push lods fadds mov rex.WX rclb in mov negl enterq out xor std movabs push mov enterq loop cltd test sti rol mov movl mov xchg (bad) rex.WRXB xchg cmp push (bad) adc movsb (bad) jl xor xchg imul mov adc pop cs cltd push rex.RXB movslq (bad) sbb jle movabs push outsl addr32 jmp lahf jb insb pop jle loop scas idivb je rex.B fstps outsb lret push jmpq sbb int3 (bad) test fstl rex.WRXB rex.XB faddl es jp (bad) lock or out add ss rex.WRXB mov leaveq std xor jg repz test adc cltd lret rex.XB rex.WRB sarl outsl jb mov mov push or add (bad) and icebp xor shrb mov mov test jbe scas jne cli movabs iret (bad) jnp test xchg scas xchg sbb xorps (bad) and loopne fistl cmp rex.WXB (bad) stos out rex retq push incb xchg js mov push xchg rcrb jb (bad) push or pushfq stos cld leaveq scas sub lret lahf test push pushfq jae rex.WRXB and mov (bad) nop add mov xor jae lahf mov (bad) fcompp outsl int3 push js add lret adc addr32 rex.WRXB cwtl rorl mov lret fcoml pop (bad) adc rex.WR cld mov pop mov sub fild cld and mov retq mov xor sub notl rol cmp and inc enterq icebp andl shlb push and lret push addr32 (bad) mov (bad) out out in sbb fistpl sub movabs popfq xchg mov (bad) pop xor mov andl rex.WB rex.R lret xchg mov test nop rex.WXB fdivl and addl test mov movabs mulb pop (bad) (bad) add (bad) hlt rex.WXB rcrl ficompl retq mov mov loopne insb shrb mov and popfq push mov mov jmp lret (bad) rex.WRX jns scas (bad) sbb (bad) popfq adc movabs (bad) nop flds pop rcr xchg cltd insb pop es imul rex.B mov stos mov rex.WRX lret fisttpll rol lret cmp pop sbb sarb rex.R addr32 in adc mov scas loop loope rclb xor rex.RB fwait sub testb pop divb movslq adc mov xor out movslq rcll mov loopne adc (bad) cmp (bad) mov adc xrelease add in fs fistpl xlat cmpsl loopne jne cmp addr32 mov xchg rex.RXB jne rcll pop idivl push movsb push test and xor vaddsd push push fdivl cli mov clc (bad) mov rcll sti sbb and scas repz pop pop xor mov xor cmp retq rex.WRX popfq cltd hlt push rex.WRX and rex.WX adc (bad) adc fisubr mov (bad) xor fpatan cltd int3 push xor jp (bad) (bad) or cmp or addr32 rex.WXB rex.RXB addr32 ror movabs fidivrl add cltd int3 (bad) mov (bad) adc rcr sub (bad) push cmp jp mov test int sub sarb rclb callq std mov jae push retq iret fxch xor mov adc and pushfq pushq xorw rex.WB rex and mov mov mov and movslq lret out and fwait sahf xchg in xchg addr32 mov xchg (bad) ficom fbld push jrcxz gs cltd push cmp rex.XB mov leaveq imul jae push iret push mov (bad) pop add mov test rex.X movabs retq pop lret pushq stos push (bad) out jp retq callq xchg negl fnsave cltd push sub or add xor (bad) xor xchg rex.WB and jrcxz cs mov or in mov xchg jbe clc pop cmpsb iret mov (bad) (bad) icebp gs int3 sub rex.RXB cmpsl lock loope mov (bad) lret cmpsb xor or xchg hlt js retq cmpsq (bad) insb rex.WXB add mov (bad) in xchg test mov mov (bad) lcall rex.RX (bad) (bad) mov mov cmp rex.RXB add (bad) out test jno leaveq fiaddl jp retq stos adc rex.B sti push xchg fwait popfq icebp enterq jrcxz fild mov stos enterq mull rex.W (bad) (bad) or jne test jnp sahf rex.X jg push fwait ds test icebp or cmp sbb (bad) xor rex.RXB mov ds sbb rex.WRXB lret push (bad) mov pop sbb pop mov cmpsl movslq rex.WX rex.RB lret pop (bad) jge (bad) test rcr mov mov mov fwait popfq pop xchg xor out js xchg js jnp rex.WRXB jns (bad) rorl cli (bad) xchg rex.X jrcxz fwait mov mov in loope jle push out jnp (bad) notl or pushfq popfq sbb (bad) add in stos in pop fwait pushfq stos cmpl lods or jg pop mov sbb sti mov stos mov push out scas mov (bad) jne cli mov pop cltd loopne xchg (bad) push test test xor scas fs fmuls and outsb lret sub (bad) callq test subb cmpsl rcrb mov ss (bad) fldcw out (bad) xor sti (bad) in xor sbb popfq movabs cs jno rcrb retq cmp imul fldcw or jae mov adc (bad) cmp int cmp movabs lods (bad) (bad) and (bad) iret out xchg rorb mov mov xchg outsl (bad) mov pop (bad) mov incl jmpq test imul mov add (bad) fucomp es (bad) mov stos movabs movabs scas fnstcw ffree (bad) sub rex.XB enterq nop cmp and mov (bad) in shrb lret (bad) movabs push iret or adc adcl xor xor lods xchg shr mov xchg cmp or jp iret sbb movabs rorb pop test sarb test nop mov xchg mov iret (bad) sub callq out xchg jo xchg subb out xchg nop mov jae jbe in mov retq scas jge,pt cltd (bad) xlat xchg push xchg jo cwtl cmp rex.XB addr32 (bad) movabs movabs (bad) xor decl movslq roll cmpl fldt mov rcl fs push adc rcl mov rex.RB addr32 imul sub cltd out or jp jno sbb out movabs rex.WXB test jp push sub (bad) hlt in jl pushfq and adc add cltd adc add push push pop cmp mov xchg rex.RB xchg sub xor pushfq mov test stos (bad) (bad) mov nop iret mov cmpsl cli push (bad) cmp lret insb rcll mov xchg pop rex.WRX push rex.RXB push (bad) mov adc mov ja hlt push mov adc test rex.R rol push mov xchg (bad) (bad) pop jo xlat and jp callq rex.WX (bad) rex.RX sub sub sub rex.WX (bad) cmp std xor stc rcr sti pop lret cltd (bad) rex.RX in jnp fwait shrl jg pop push jmpq jnp scas scas callq rcl rol (bad) sub icebp xor shrb xlat push mov push retq push (bad) lretq mov ds rex.WR jnp mov (bad) inc stos (bad) and addr32 push jo negl or lret hlt mov rex (bad) lods int3 test rex.WXB (bad) rex.X cs gs jns sub in rex.WRX rex.W rex.R loopne push fdivr (bad) not mov mov xlat mov (bad) (bad) xor jnp or rex.RB lret cmp xchg xor fildll pop mov xor (bad) js push out outsb add (bad) (bad) (bad) and push jae scas out in push clc jge xchg je add outsl mov add sbb lahf add in jns movabs mov out push lock adc (bad) sarl mov (bad) retq sub testb addr32 roll or cmp out mov fst adc int js movslq addr32 mov cmp sarb pop mov or movabs out xchg mov ficoml adc (bad) idivl nop jne sahf rex.WRB push jae stc mov cmp mov leaveq rex.R nop out outsl adc adcl movsb adc test mov std pushq jg add lods or xchg enterq (bad) add jno pop rex.RX out xchg lret or sarl rsqrtps out rex.RB pop sub (bad) int scas rclb mov mov int callq lea leaveq (bad) adc xchg cmpsb push rex.WXB callq xlat rex.XB vpsubd sbb popfq rolb push int (bad) xlat rex.RB adc (bad) jbe lret push rex.WR cld adc mov movabs (bad) mov mov xor push cmp test movslq (bad) rex.WRB mov sub test addr32 stos xchg (bad) mov and rcrb (bad) (bad) xchg rex.WX push sbb (bad) movabs lods cmp jge ja cld jb data16 sahf add pushq jo lret ja (bad) ja int3 (bad) mov jae iret push jge push sbb xchg enterq and rex.RB rex.RX int push or (bad) (bad) fimull or (bad) leaveq in lods js (bad) cmp (bad) retq rex.WRB stos pop out rex.B lret jns rex.WRB xchg or test add pushq mov fcmovbe movabs mov (bad) (bad) lock adc add push notb rex.WXB nop (bad) imull mov lea and ffree and movsl out movabs (bad) rex.RX out mov mov and mov xchg rex.RXB leaveq addr32 push (bad) mov jrcxz or or sbb hlt pop cld fild mov popfq (bad) scas pop (bad) rex.WB (bad) (bad) sbb mov (bad) cmp jne mov (bad) movslq jmpq scas rorl (bad) ficompl loopne jne mov outsl jp jmp stos es fwait sarl in jns xlat cmp cli xlat jae mov rex.WRB rex.WXB cs xchg rex.WR mov (bad) clc rex.WB xor sub mov pop int3 rcll (bad) xchg or sbb cld sbb and xchg (bad) (bad) (bad) (bad) cwtl nop and jg rex rex.WRB es sub mov int cs addr32 or mov (bad) adc (bad) or in or cmpsb fwait mov repz sub out mov jb mov lock or pop jmp (bad) cwtl or callq jbe pop (bad) pop mov mov retq add rex.XB rex.WRXB pushq mov sahf add outsb sub jecxz jp popfq (bad) scas nop fwait rex.W pop xlat addr32 and and in push push pop outsl jns mov fisub sub (bad) js movsl in shll and mov jns (bad) add sbb lret rex.R or jmpq push rex.RX cmpsb (bad) sti push xchg ror xlat jb cmp jp icebp fs int lfs fwait cs pop jmp fldcw (bad) mov stos outsb sbb (bad) cs xchg xchg out adc shlb pushfq mov adc addr32 movabs add out sahf or out add mov scas rex.X (bad) mov lret mov (bad) sbb jns fnstsw out jl rex.R retq cld (bad) pop (bad) mov movabs callq (bad) insl outsl cld out decb rex.W (bad) cmp rex.RX repz movslq xchg pushfq (bad) (bad) mov stos loop pop pop add xlat push rex.RXB retq push rex.WX push mov xchg movabs jbe (bad) imul clc in (bad) rex.WR (bad) outsl adc adc mov jmpq movl or rex.WRXB sbb pop xchg cmp mov iret (bad) sbb fiaddl push out xchg lret xlat (bad) enterq (bad) lods jg sub in cltd and mov jl xor in lret int or out (bad) (bad) push rex sub ficom rex.R fwait add xchg (bad) push rolb movabs clc xor pop mov add add jae (bad) (bad) iret (bad) cltd mov add int (bad) cmp rex.WRXB (bad) (bad) (bad) (bad) gs cltd adc (bad) js adc (bad) (bad) xchg (bad) rex.WB ss addr32 rex.X mov fisubr pop jmp push mov iret fcomi in and or cmp pop and (bad) (bad) adc movsl flds cli jne or rol jrcxz ficom sbb mov (bad) sub lret mov outsl jl gs jnp nop mov in stos xchg out push mov fimull and sti out jp and jp fwait sahf pop movslq mov (bad) (bad) out cmc or mov negl (bad) movabs cmp or mov xor pop sub mov (bad) rex.RX addr32 loope jl sub lods (bad) test (bad) test popfq out jae mov xchg add (bad) mov jle sub fwait mov ror xchg cmp or rex.X add xchg lods test sub fwait sbb mov out sbb pushq mov iret xor sbb adc rex.WRX rex.WXB rex.W cmc (bad) js,pt rex.WRB xchg sti fildll or (bad) mov add popfq xchg pop addr32 xchg fisubrl (bad) push sub xor sub (bad) mov int rex.R mov sti jbe,pt gs rex.RX movabs out jge push jmp and rex.WRX out jle mov rex.WB es sbb out fcmovu push in mov cmp (bad) sti mov clc cmp loop rex.WRX xor xor xchg stos (bad) xlat rex.X (bad) (bad) xchg pushfq rex.RB imul rcrl (bad) clc mov xor xchg (bad) addr32 xor jb roll outsl sbb add sbb stos mov cld jo lods mov xchg mov and test out xchg outsl fstps rclb rex.WXB mov (bad) xor cmp pop pushq setge movsb fildll mov scas adc xor cmpsb (bad) push stos (bad) mov mov leaveq movabs pushfq (bad) mov cmpsb shrl (bad) callq outsb leaveq cltd js mov and ss sbb or ja push insl xor xchg mov jne (bad) stos (bad) rex.WB scas add mov mov (bad) lods lret (bad) rex.WB rex.X (bad) rcrb xchg adc (bad) pop mov xlat outsl fldenv addr32 sub and mov in xchg pop jge (bad) outsb rex.X out mov adc lods mov xchg xor (bad) xchg jmpq ficom fidivrl fsts pop leaveq ficomp in (bad) ss adc loope mov push xor pop mov out cmp loop fcomps mov or xor jg rex.WB (bad) (bad) cmp mov mov xor (bad) mov (bad) je or push mov pop int xchg push in mov (bad) fldcw jg rex.WX int outsb (bad) fwait jo data16 jnp frstor ror sbb rclb (bad) pop jae or or outsl jns sub retq addl test lret mov push rex.XB test ss sarb xor xchg in scas lret xlat adc retq mov scas and out fbstp es sub lret (bad) adc rorl (bad) movabs insb (bad) mov add out lret fbstp add adc hlt lret mov (bad) xlat sti and pop (bad) cmp test sahf mov rex.X (bad) pop out pushfq imul (bad) sub enterq mov cmp shrb loop (bad) (bad) pop (bad) sarb rex.RXB rex.WXB rex.WR mov (bad) mov cmc (bad) mov push imul add adc js mov (bad) push cmc addr32 sbb push sbb xchg jl rex.WX cqto add out retq xlat stos push mov rex.WXB repnz lret retq cmpsl (bad) (bad) mov cld mov adc mov ja (bad) jns mov rcl sub sbb loopnel,pn (bad) push add ss addr32 jl cmp sub (bad) (bad) xlat xchg rex.WXB std out jno rex.WB (bad) out xor lret cmpsb and sbb cwtl loopne mov (bad) retq lock (bad) adc scas (bad) jae xor scas fwait pop (bad) movsb fldl2t ficompl lods js lret cmc pop (bad) (bad) (bad) (bad) fsub jle fwait mov xor jb or add callq xlat jg sbb add (bad) (bad) hlt lock jle add cmp out cmpsl mov stos and std je xchg hlt xlat jg add xchg test jno jmp adc rex.RX es frstor rex.WB pop outsl cmp fimul mov ds insb rex.RX (bad) (bad) fwait nop jne cmp fs add xchg jne test rex.WRX adc ds adc sbb (bad) pop cmp lods mov xor push (bad) (bad) ficompl stos pop mov sub mov xlat ds popfq (bad) rcr or (bad) nop fnstenv (bad) adc (bad) in pop rex.WB leaveq rex.RB lahf xor mov (bad) xchg mov lahf rex.WXB cs sbb xlat mov cmp movsb add repz rex.WRX lret lea iret pop xor shr fnstenv mov sahf rex.X xor push sbb sti xchg sbb add jb scas in cmp out (bad) (bad) mov mov fimul ja clc mov adc adc rex.RB mov mov mov mov int sub out fucom rex.RX rex sbb add lret addr32 add iret adc rex.RXB mov adc in int3 addr32 jno cs mov mov jo gs ja fldcw rcrb add xchg shrl addr32 fsubrs mov (bad) out jge decl rex.RB sti rex lret mov pop xchg mov cmp cmc test or and notl xor rex.W add vprotq xor xchg (bad) je retq xor push outsl sahf pop rex.RXB mov lahf (bad) lock adc mov add and sub (bad) mov rex.XB shl (bad) rex.RX (bad) fbld (bad) retq outsb (bad) mov mov loopl movabs scas sbb mov mov mov push xchg (bad) mov push retq cmpsl push (bad) rcll (bad) (bad) fiadd mov popfq rex.XB scas push bswap fimull (bad) xchg jrcxz loopne xchg pop sub (bad) xchg mov rex.RXB stos adc jmpq pop xor push outsb lret sbb jnp in jl cmc fwait jb sub stos rex.WRB sbb xchg adc out jge cmp push push (bad) (bad) mov lock (bad) js (bad) fnstcw xlat (bad) int jmp insl imul es (bad) rex.WRB cmp (bad) xchg test fdivr movsl (bad) pop pushq data16 sub (bad) pushq jl pop xlat shll jb sub jae repz pop (bad) xlat sub (bad) jge mulb and jl imul sbb mov pushfq mov rclb jbe movabs imul mov movabs loope sbb xor fidivrl adc (bad) test mov xor test sbb adc xchg sbb fldpi (bad) repz pop mov mov fyl2x push adc pop xchg xchg or ja mov push leaveq fadds push fcomps cmpsb fwait in adc (bad) imul cmp (bad) enterq rex.WB sti xor (bad) cmpl push or test rex.WX repnz notb push ja xchg data16 pop push mov and test rcrl js jns cmp mov jae test jb jae sub ss xor ss mov xchg rex.WXB movsb leaveq rcll sarl jrcxz mov pop push mov negb lods rex.RB movabs (bad) pop (bad) and (bad) jnp ficoml sti insb fldt fcmovnb jnp adcl pop divl (bad) jbe fstpl mov xchg movabs fnstenv adcl cmp lods mov fdivrs pop rex.WRXB fwait pushq adc cmp jno rex.WB mov rex.RX pop rex.W pop xor cmp scas add pop (bad) mov xchg jl jae jnp test ds (bad) divl cli js mov (bad) pop push pop (bad) fidivl jbe flds (bad) push mov rex.W std cmp xor (bad) lret stos cmpsl jmp add jrcxz rex.B xchg xor or mov jo mov (bad) icebp sarb xchg rex.R (bad) and jg insl pushq jns xor fs xor fwait rex.WX int3 sub cmp movabs rex.WXB and lock outsb (bad) divl sbb jge (bad) cmp xchg (bad) add push jrcxz retq push sbb pop in push movabs xchg push loopne sbb ja and (bad) xor std cmpsl retq (bad) mov cmp int3 jp push rex.RB cld (bad) out (bad) lahf int push push xchg sub (bad) and xor xchg sub rex.WR jmpq insl jg mov add pushfq pop rex callq rorb rcrb mov lahf cwtl mov ja jns stos pop push sbb lahf jl js mov push cwtl push xor xlat or shll (bad) iret sbbl cltd mov sbb xchg mov adc pop push lret (bad) nop rex.X retq cmp mov fmulp add xor and scas fcmovu push sbb rex.WXB retq xchg jl retq retq xchg mov sarb test push xlat mov sub sub xor pop (bad) jne rex.WRB rex.WRXB (bad) je scas sbb (bad) sbb mov sbb pushq imul xor int and push test rex.WB (bad) (bad) pop scas outsb pop pushq push (bad) (bad) xor clc fmul clc mov movabs retq fcmovb (bad) mov rex.WX mov scas mov mov repz adc leaveq cwtl xchg gs fsubs retq movabs mov (bad) clc in movslq subb lret movabs loope retq add (bad) mov (bad) (bad) mov mov or cmp hlt add loop xchg mov (bad) addr32 not add testb enterq jnp leaveq (bad) movabs xor rex.WX rex.RXB cli sti (bad) (bad) adc cmp cmp fdiv out jae mov xchg mov fcmove (bad) ja enterq fdivr mov cmp popfq repz jg xor rex.WX sub cs rex.WB js movabs cwtl fwait mov (bad) mov and pop sbb (bad) jo rex.RXB xchg fbstp retq jle enterq (bad) jns mov push sarb (bad) jns jle lret movsb jp push popfq test rex.WX cmpsl push clc pop mov sarb add xor mov adc (bad) jb xchg iret mov rcl adc ja imul mov insb rex.RB lods jp jae fst pop (bad) push fcmovbe rex.WB jrcxz sbb ds mov movabs fistl imul push mov icebp ss fdivl pop (bad) std retq or pushq and xchg lret outsl mov sahf rex.WX repz and mov (bad) (bad) addr32 mov ja imul mov ss fnop or mov add test xchg fwait repnz cmc cmp adc xchg insb rcrl imul retq jle cmp fimul rex.RXB lret movslq rex.RX (bad) adc movabs int cwtl jae pop sbbl mov mov stos mov rcl sub (bad) fldl (bad) sbb clc mov rex rex.RXB sub in mov test sbb xor (bad) xchg int xchg xor rcl lods push retq add lahf jns or sub imul jne cmovnp leaveq lahf adc sub jb rex.RX ror cltd cltd movabs (bad) mov pinsrw rex.WX sbb (bad) push nop pushq mov xchg cmpsl movabs rex.XB stos imul cmp leaveq ja sbb in sbb jae rex.RB rolb push cmp push mov pushq xchg jnp shr data16 pop mov mov rex.WB test xor (bad) rex.WB xchg stc xchg rex.WB cmp adc (bad) cs push test adc pushfq pushq icebp cltd sub add vcvtsd2si mov lock addr32 mov outsb rex.WRB outsb xor repz (bad) outsl push jg test retq rex.RB pushfq xchg cmp rcrl and xchg mov in jnp push movabs repnz iret (bad) cli sbb push jmp out add movabs repnz lret lock fcmovnb mov clc rex.WXB fcmovb repnz cltd (bad) sbb add cmc jb rex.X lock push fcomp sub cmp in sbb (bad) cld jg xor mov pushq mov ds rex.WX pop imul nop vpcmpgtw push push test pushq cli (bad) rex.W rex.XB leaveq lret scas clc rclb mov pop xor pop mov push movabs mov mov mov jp mov jns pushq mov enterq rex.WX rex.RXB add mov rex.RXB jp (bad) xor es insb add cli ds (bad) callq ja data16 adc lods (bad) out fsubl or je and cmpl sbb cmpsb fs push (bad) jo mov (bad) rolb lods sbb xchg (bad) sub cmp xchg jge mov test and push loopne mov fildl out popfq xor leaveq (bad) shrq rex.WXB xchg je cmpxchg lock sbb adc adc rorl mov jrcxz sarl (bad) int (bad) movabs loopne test (bad) sbb test insl cmc sbb icebp (bad) pop lret and test rex.RB lret push shll int3 ficom add (bad) roll xchg nop adc cltd xlat and (bad) mov nop or cmp lods lret outsl mov (bad) pop cmp pop ja push cmc sar shlb loopne repz xchg mov (bad) sbb out mov fsts ss mov addr32 in (bad) out mov and rex.X jg seto ss xchg movabs jbe stos add and (bad) jl sbb xor jecxz mov scas mov rex.WX fdiv outsb mov ss rclb ja (bad) retq scas adc sbb xor adc rex.WB sarb sbb jmpq mov adc jns mov sub and xor lret out leaveq cwtl xchg sub or out callq enterq (bad) jae cmova movsb rcll rcrl xchg push rolb (bad) cmovb cmp xor (bad) mov pop (bad) movabs xor mov (bad) movslq pop rol jb out (bad) jle loopne adc (bad) push rex.RX fcomi (bad) mov (bad) push rex.RX rex.WRB rex.XB ja,pt clc test retq mov push (bad) push enterq lods xor sub retq sbb jb rex.WRXB push mov int3 (bad) and rol pop imul rex.WX pop orl mov movabs (bad) xor test jo cwtl lods lock je sti adc push and test mov or adc sub lods outsb rex.XB jnp jo movabs stos (bad) adc jno out jae sbb (bad) sub leaveq pop test xor pop rex.WR fnop xor mov mov xchg lods ficompl mov outsb jno jne mov fwait (bad) adc jp jg mov xchg int3 rex.R divl ja cmc std (bad) callq xor insl loopne fnstenv cs push ss icebp loop (bad) push (bad) mov push (bad) rclb sbb fdivr (bad) push movsb js (bad) jns (bad) fnsave (bad) sub movsb cmc js jns (bad) mov mov xor mov rorl adc xchg xchg cmp rex.WRB ss test fistpl pop (bad) fdivrs lods movslq mov je mov pop rex.X ss out ds xchg int ja rex.WRX pop (bad) mov push cmp cmp out lahf sbb (bad) cmp pop je rex.R loopne in pop addl xchg (bad) adc cli mov jo ds push leaveq test jno xor mov mov (bad) lret jle xchg xor push cwtl fist cmp fdivrl rex.XB ficomp mov pop xchg sbb and pop mov leaveq orl insb (bad) movsb add adc in cmp imul test (bad) (bad) rex.WRXB ror test mov add stos movabs xchg (bad) movsl movabs (bad) rex.RX addr32 shlb pop addr32 repnz (bad) mov outsl rex.WB adc push rorb fstpt (bad) pop (bad) sbb xchg lock iret push sti movabs xor lret test pop rex.WXB cmp and addr32 (bad) rclb rex.WX push mov jb add mov imul push mov (bad) addr32 pop add clc fldenv (bad) mov (bad) mov fldl (bad) pop fldl jrcxz movsb (bad) rex.WRX rex.RB cmp outsb or addr32 mov (bad) fdivrl loopne callq loope mov pushfq mov cmp sar (bad) repnz (bad) roll (bad) (bad) (bad) ja orl xlat (bad) fisub mov mov out int in fimull movsb pop cmovns push sbb jl retq repz mov stos (bad) xor movsl retq mov rex.WXB cli rcr rex.RB (bad) pop in (bad) mov rex.WXB scas mov repnz or cmp xchg ss lret cwtl mov xorl addr32 rex.X fimul (bad) (bad) xor jge sub cmpsl sbb xchg (bad) fdivrs sub loopne (bad) jbe fistp out out ja xchg jge lss enterq mov push lods lock adc sub leaveq sub (bad) mov push (bad) clc repz lret divb fadd pushq jae data16 movsb cmp stc movabs rex.WB rex.WR adc rex.WX jns (bad) pop push mov sti adc (bad) mov sbb gs rex.WRXB fcmovbe pop movabs fdivrs roll clc adc loopne outsl movsb adc lods movl sbb out rex.RX fdivl cmp pop rcrl (bad) jbe jae test sub rex.WR xchg addr32 (bad) (bad) cs lea pop pop pop (bad) fsubl mov cmp rex.RX rex.W fmull (bad) loope rex.X rex.WRX lret enterq push cmp and mov push fwait pop jo ror (bad) sub es leaveq stc mov (bad) (bad) ror std movabs mov (bad) insb rex.WX movslq fidiv je rolb mov sar jge (bad) adc fimul sbb add xchg push fisttp (bad) rolb (bad) pop mov pop pop (bad) (bad) mov ds jno push lods sbb in roll push test mov pushfq iret xlat out add jle xchg je jno xchg sbb addr32 (bad) mov test fmuls mov jnp pop mov rex.RX scas hlt repnz sti mov fisttpll addr32 (bad) mov fcomp pop clc pop jrcxz pop popfq jbe rex.WRXB (bad) int insb js imul lret mov xchg xchg xchg xor xchg xlat xchg cwtl cld lahf (bad) jmp (bad) adc mov mov stos cmpb pop or jbe mov mov push movslq rex.W loope (bad) add psrlw ror loope fwait mov mov rex.XB rcll cmp enterq jmp or mov jns jle mov fisubr xchg mov repnz pop sbb sub xor rex.WXB data16 cmpsb lret sti rcll outsl pop adc jb (bad) cltd (bad) fisub rcll (bad) retq push xchg mov movabs (bad) lock xchg in or fsubl (bad) pushfq mov mov rex.R ja iret rex.RB (bad) mov fistl mov shr rex.WXB sbb (bad) adc lret fsub mov outsb rex.WXB pop cltd je movabs leaveq push cmp movabs insb mov push frstor pop emms retq cmp cmp retq jle fcmovbe (bad) mov jne lea (bad) rex.WRB (bad) outsl jae int (bad) (bad) xchg cld rex.WB addr32 (bad) loopne adc jns jnp (bad) jae pop rex.XB jge,pt int3 cmp sub cmp rex.RX xlat (bad) cmp rcrb push sahf (bad) push iret pop cmp push roll mov movsl push retq repz xor jns pop or adc rex.B lea icebp (bad) (bad) movslq pop pushq int3 xor jae sbb and push repnz jne clc adc sbb (bad) pop pop xchg or out (bad) or pop callq mov rex.WRXB popfq (bad) rex.WRB imul data16 xchg (bad) fcomip fistpll movabs (bad) push mov testb jne addr32 je iret xchg cmp jg fs es ja popfq cmovne rex.WB pop (bad) negb cli leaveq clc mov (bad) movabs sti sbb test nop (bad) loopne sub stos pop rex.XB loope rex.WR int sahf rcrb push xchg xchg or or sub (bad) ficompl (bad) pushfq (bad) cmp sti jnp js (bad) cmp in loopne jne nop xor out data16 (bad) outsl test cmp and push lahf negl sub push xchg add out (bad) (bad) (bad) xchg iret cmp out rex.WB xor cmp imul (bad) movslq rol (bad) subl xlat test mov rex.X mov xchg outsl retq (bad) fcomp sbb sbb (bad) adc and jp fldenv int (bad) rol jmpq mov in (bad) fimull rex.WXB and lea sub mov iret (bad) mov (bad) or mov shrl (bad) mov mov sti loope mov movabs lret (bad) jrcxz sbb sbb cmpsl shll mov stc mov xchg mov mov cmp adc pop cmp imul xchg mov cmp callq imul std fwait sbb out xchg frndint out fsubp mov lret nop movabs fwait fwait pushfq rex.WR fwait cli pop (bad) cmp adc cld (bad) lock sbb movslq icebp add stos addr32 lock js sbb (bad) xchg cmp scas int3 rex.WXB out mov sub retq (bad) pop jmpq sub pop lock pop in cmp sar subb lea xor std jl jrcxz mov jb test fisubl addr32 imul push divb (bad) mov sub sbb test add pop movabs xchg retq xor (bad) repz mov rex.RB sub pop xchg (bad) push flds js stos pop movabs rex.WB lret and adc xchg js pop rex.WRX jns jl rex.WB adc rex.XB cs mov hlt rex.X pop pop mov cltd rex.WRX rex.WXB pop xor insb push xlat mov rex.WRB rex.R stos mov pop cwtl mov repnz rex.XB xchg sbb xchg sar lods cltd sar xchg xlat xchg xchg mov movslq rex.RX adc lret test (bad) and jb rex.WXB fs int (bad) scas adc clc mov jb roll (bad) sbb sub xlat loope add loopne je add xchg (bad) adc mov rex.WXB mov (bad) xor (bad) or in mov rex.RXB out xlat xchg lret rex.WR sbb push rex.WRX mov and ror repnz rex.WXB pop adc pop push rcll (bad) mov fist xchg push add or xor stos xor sub sahf retq and jmpq jae xlat in push movb or out jns (bad) jmpq adc andl jmp sub push ss jbe in adc cltd clc cmp jle (bad) cli stc (bad) cmp and fsubs xor push (bad) iret loopne mov rex cli out lret push scas mov (bad) sarl jne cmp clc stos pop push (bad) lea test ja adc cmpsl sti leaveq and iret rex.WRX repz add add jno hlt cwtl add rorb (bad) clc sbb jae xchg adc xchg jge pop add rcll test mov or adc pop rex.RXB adc adc xchg jp jb pushq xchg jnp push jbe (bad) lea rex.WRB add mov pop jge (bad) (bad) iret sbb (bad) repz xchg or cwtl mov rex.WRB out rex.WR addr32 jp mov adc cmp (bad) rex.WR jle cltd adc adcl rex.RX imul rex.WRX mov push mov mov pop (bad) add addr32 rex.XB (bad) lret pop (bad) cs pop mov movabs ljmp (bad) jmp pop adc rex.X rex.RX outsl push movabs (bad) rex.RX add cmp rex.WXB imul (bad) sbb mov push fwait or jnp cltd mov loop (bad) sti (bad) callq xor scas or mov xchg add scas add xor mov xchg sub retq (bad) cltd (bad) mov movabs sbb out push (bad) mov js leaveq xchg fwait (bad) jbe pop cmp sbb pop mulb pop outsb enterq out leaveq int sbb mov addr32 rex.WX decl insl pop rex.R movabs push mov jg and xlat out (bad) in rex.WRXB repz (bad) pushfq mov mov cwtl (bad) lret (bad) pop push fldenv adc adc sti je movabs and (bad) ss jrcxz or cmp mov rex.RX in (bad) rex.RXB (bad) jo xor push or scas and sub rex.W rorl rex.X cmp clc and test xchg callq add scas cltd fiadd test rorl (bad) (bad) lea in or loope xor rex.RXB rex.WX (bad) add mov or rorl movabs out retq imul lahf mov pop out cld or cmp mov rex.XB (bad) xor imul lock and test shrb xor push popfq mov add or pop rex.WX rex.RB (bad) iret insb (bad) cmp add stos sbb loope (bad) sti (bad) cmp jrcxz popfq push (bad) (bad) rcrl push ss stos xlat fdivl test scas xchg je rex.RB fnstenv fs xchg cs mov adc cmp sahf sbb outsb (bad) lret (bad) test fcoml mov mov pop xchg jnp (bad) jle je (bad) or rex.RX notb shrl mov pop icebp movabs rex.R rex.R (bad) (bad) or scas sbb pop pop xchg test mov jg ss jae stos (bad) addl xor int3 retq (bad) xchg push jle (bad) stos movabs retq movsl rex.RX rcl xchg mov (bad) rex.WX rex.WRX xor (bad) rcl and rex.RB jae sbbl jne cltd mov leaveq mov jno adc (bad) clc in mov xchg in insl shrb or enterq out mov movabs rorl mov insb fisubrl and mov sbb jle ficompl (bad) outsb mov push mov (bad) sub jae mov mov sbb sbb mov mov sbb rex.XB (bad) lods xlat lahf cli or fxtract cs loopne sti in ja js jae add cmp xor rex.WRX mov mov rex.XB out retq (bad) pushq push mov fwait rex.RX xchg mov (bad) cmpsb (bad) fmuls test xchg xor pop out ja mov mov rex.XB (bad) (bad) imul xor add push out lret xor mov xchg push lret mov fs and jbe rolb shl (bad) mov sub callq (bad) or mov and jmp shll (bad) pop fist stos jle or cmpsl xchg adc test (bad) testb cmpsl sbb (bad) stos addr32 retq test mov in or addr32 movabs mov int3 fnstenv addr32 and (bad) mov cmpsb rex rex.WXB lret out lret rex.RXB rolb movabs cmpsb int rex.WRXB push je adc cmp rex.WRXB fs jle adc movabs add and mov mov ds (bad) jo (bad) fsubs adc insl in and (bad) pop pop (bad) xchg (bad) movabs ds mov pop xlat cltd pushfq retq cmp rex.WXB rex.WR xchg mov sbb jb (bad) pushq adc lahf cli mov cmp in insb sbb ffreep cmp sbb or rex.R mov rol outsb (bad) ficoml (bad) mulb push insl (bad) hlt jmpq fdivrs loopne lret mov (bad) loopne pop xchg mov jle cmpsb push sbb mov sbb (bad) cmc test (bad) adc scas (bad) test pop fstl jge adc rex.RX rex.WRX add push mov retq int3 push negb adc rex.XB xorl jno test mov repnz xor sbb pop insl imul rex.XB cmp sbb xchg mov rex.WXB sarl cmp (bad) xchg jle pop adc or mov cmp and cmpl rex.XB pop push push mov mov mov and scas rex.W test jmp mov or mov or (bad) sti pop mov retq insl and shlb (bad) rcl rcr shl faddp sub rex.WXB xchg stc xchg cmp rclb rex.WR jne or mov mulb pushfq xchg mov movabs jrcxz rex.WR push out (bad) pushq out retq subl lods cmp cmp stos int (bad) lret (bad) pop fcom push rex.WRXB adc xchg (bad) (bad) adc scas scas rex.X push enterq (bad) mov jg ficompl in push mov cmp fistpll movsl addr32 mov (bad) xor lret add subl sahf (bad) xlat rex.WXB push xor add jmpq sbb imul mov sub icebp fs lea lods and rorl mov sub cwtl xchg xchg xor cmp push rex.XB cs xchg sbb adc cmp int stos rcr jbe out and cmp (bad) (bad) rex.R addr32 pushfq fs outsl not inc push pushq (bad) negb push xchg xor adc cld lret sbb push fwait cld jbe leaveq xchg leaveq js mov out mov adc rex.W scas mov mov movabs fild mov rex.XB (bad) xchg xchg rex.WB (bad) add sbb sarl xchg (bad) icebp movslq in jmpq retq in (bad) addr32 sti test mov movabs (bad) rex.RB mov (bad) rex.RX (bad) movabs (bad) cwtl int sbbl adc rex.WRX clc leaveq sbb ss fistpll test ja ja (bad) sbb imul rol push mov cmp mov movsl pop rex.RX fdivrl test cld rex.WX push (bad) pop jg pop push push xchg cmp adc (bad) (bad) stos icebp sbb sbb xchg push addr32 ror mov (bad) add pop outsl mov add in (bad) push (bad) sbb pushfq sbb pop (bad) repz int scas stos jnp jle sbb sub xlat sub cs push mov xor (bad) (bad) (bad) mov xor and movsl enterq xor rex.WRX or push ficoml jle cmp stos (bad) push adc mov jg mov (bad) sbb stos or jmpq xchg retq rex.RX ds movslq pushq (bad) int3 scas add sarl mov xor movabs pop (bad) imul add and (bad) stos or repz cltd push push mov (bad) jrcxz pop push (bad) sbb (bad) jmpq xor sarl add (bad) pushfq and add mov lock ss xor (bad) shll and cmp rex.WXB xchg (bad) rex.WRXB (bad) xchg adc or movabs mov (bad) roll test sti (bad) (bad) add rex.X mov push cmp jb push ds shrl push mov rcr push or (bad) xor push push sti pushq mov (bad) mov movsl mov movabs add (bad) fildl addl mov sub jle hlt outsl (bad) (bad) mov (bad) (bad) or cmc push callq xchg movabs popfw pushq lods imul (bad) or test mov jge sbb lods push in mov mov xor xlat mov push and lock in js and pop shlb (bad) mov out xor jg outsb enterq iret imul rcll jnp sub addr32 (bad) ds out xor movsb movabs int3 mov jmp (bad) mov jle int3 addr32 clc push xchg (bad) xor xor adc nop (bad) negb in (bad) (bad) jb fstpt movsb shll lea mov movabs push movabs (bad) negl ja out (bad) jmp out sbb (bad) mov jl pop xchg mov fistl push jbe pop mov (bad) lahf retq pushfq xorb sti pop fimull (bad) and cmp push addr32 shll xchg (bad) cwtl fnsave add rex.RXB mov rex.WRX mov jnp pop mov mov lahf mov xor jmpq lret rex.W mov push cmp pop xchg xchg (bad) int3 mov imul jg xor xor (bad) imul mov jns sub adc fidiv rex.RXB push sbb xlat and testl xchg retq jns int push push addr32 int3 (bad) push mov mov pop std cmp cmpsl (bad) sbb mov pop hlt (bad) movabs (bad) addr32 mov int3 rex.WXB repz mov xchg mov fs push stos retq movabs (bad) mov xchg rex.WR xor xchg mov (bad) (bad) sub (bad) je lret addr32 push mov fadds jg movslq test retq prefetch pop addr32 jns pushq addr32 mov xchg cltd out jbe xchg (bad) mov rol cmp (bad) fldenv jns adc cltd cmc jns movabs push test sti cmp adc cmc rex.WB rex.RX gs cmp (bad) (bad) (bad) scas cmp (bad) hlt sbb rex.WRXB int xor cmp sbb repnz adc sahf fsubrl mov adc cmp movabs (bad) jb movslq pushq (bad) mov cmp mov xor xlat mov fistpll xchg xor xor cmp sbbb fimull adc cmpl add jo negl ds jbe (bad) cmp rex.WXB xchg xor push xor testb xchg rex.R adc (bad) rex.WXB addr32 ja movsb jns stos push in (bad) in adc jmp add xchg ficom callq push rex.WRB mov or sarb jb fidiv or outsb subb pop mov pop (bad) jmpq clc mov cwtl or in sub or outsl pop add (bad) xchg (bad) (bad) fcmovbe imul xchg adc and addb xchg out sub or (bad) pop rex.R add (bad) add push (bad) jae (bad) mov mov sub mov fldenv xchg rorl lret mov pop rex.B pop add icebp ffreep (bad) addr32 adc popfq test (bad) (bad) stos and (bad) stos mov flds popfq jmpq fidivrl fstpl (bad) stos mov push or fld xor push pop xchg loope test rex.XB rolb imul imul adc stc sub (bad) fsubrs cmpsl outsl jl mov (bad) jae and fcoml out adc cmpsl or cmp clc and pop in cmp mov jbe adc movabs sbb (bad) in (bad) fwait addl add (bad) lret (bad) lods fwait sarb leaveq sbb sub cmpsb mov lahf xchg add or movabs sahf adc rex.RX and and adc addr32 adc (bad) mov outsl rex.WB xchg (bad) fcoml out fisttpl adc mov or stos lret and cmp nop pop and and or out movslq push push lock xorl or fnstenv shrl addr32 movabs (bad) scas or test sbb cld lods add sbb rex.WR mov push add sbb (bad) incl and mov fwait lods jmp pop cmc mov pop xchg and pop mov pushq sarb jmp retq rorl rex.RXB pop in (bad) rex.WRXB (bad) movabs rex.R sbb xor mov mov lret (bad) (bad) (bad) fsubrl js stos mov lock out xchg and iret fwait in jns mov pushq add hlt (bad) pushfq (bad) retq (bad) es adc pop pop and movabs jnp adc add rex.WX sarb fwait xchg (bad) hlt cltd sti (bad) add rex.WRXB sar (bad) or add lock movslq cmpb adc rex.WRX cmp rex.RXB sbb pushfq push or je (bad) lret popfw add (bad) scas jo movabs mov out test sbb (bad) sbb and (bad) pop cld pop xchg jge fwait out (bad) addr32 push sahf xchg add xchg push xchg adc out push add jge sub iret adc iret stos xor addr32 lock adc cli fnstcw push mov add mov add rex.RB test out lea sahf rex.XB pop (bad) fwait in sub jnp movslq (bad) lock retq outsl cltd push loopne sub push or rcrl popfq in pushq rex.WB push andb pop (bad) (bad) add xchg jae adc movabs mov adc adc xchg sub pushfq cmp mov pop sbb (bad) rex.WRB (bad) sub movabs mov (bad) iret xchg sar mov movabs mov rex.B rex.W jmp pop (bad) (bad) rex.WXB fsubrs fnstcw hlt xchg pushq cli shll push mov out add xchg addr32 (bad) nop rcr cwtl ss (bad) cltd and rex.B (bad) sti fsts retq and and xchg push imul scas test movabs jle (bad) (bad) mov (bad) rex.RX cmp movabs add or mov mov add es rcrl (bad) leaveq mov add sti adc cmp in rclb loop xor mov iret sysexit sbb imul movabs (bad) xor xor movsb rcl jle or insl sbb jl xlat xchg xchg rex.W mov in push in mov es jb cmp shrl pop (bad) lods out loopne (bad) mov push rex.WXB adc rcll mov push adc fimul push jnp mov lea cmc rex.RXB addr32 movabs cld (bad) xchg xchg pop out jo jnp rex.B stos add or pushfq (bad) scas in repz sub outsl xor (bad) xorl mov (bad) mov pop pop xor sub (bad) add test sbb rex.X cli retq insl lret fs xor pop rex.R scas out fist mov add out ror popfq cld (bad) jle mov js out jbe fnstsw test mov jns leaveq jp pop adc (bad) fisub rex.WRB (bad) cmc addr32 sub js insl vmovshdup sbb adc lock repz xlat scas (bad) leaveq mov nop (bad) movabs mov add incb js xchg out (bad) mov mov sbb pushq or rex.RXB rex.RXB xchg lret rex.WX fld addr32 shll xchg sub (bad) adc cmp (bad) lret xchg (bad) or mov enterq cmpsb lea mov sub pushfq test rex.WX es xchg or mov (bad) shr popfq fdivs xlat addr32 out and (bad) (bad) movabs (bad) imul cmp and jmpq add rcrb push subb pop (bad) xor in sbb es shll imulb movsl pop retq cli fstps sarb imul xor cmp rex.R int3 cmp es mov xchg push (bad) fwait xor and add retq mov pushfq (bad) scas adc sub addb xchg retq jb jle adc pop jae out fs pop in xor cmp xor imul cmp cmp xchg rcr stc xchg or stos mov (bad) cmp sbb jmp repnz jl sbb loop add lret push mov es jns popfq fisubr fiaddl fistp movsb idivl out decb xor sarb imul pop sbb and outsl outsl lcall mov sub rex.WR sbb rex.RX sti sub jne lock fidivl iret insb jp or cmp pop adc (bad) adc clc movabs subb iret sbb (bad) lret pop rex.X stc cld lea out jg leaveq (bad) stc sub andl cld insb pop stos cmp rex.RXB stos rex.WRX rex.RXB rex.RX and mov adc movabs imul add in fwait push mov push repnz adc (bad) pushfq xlat and stos mov (bad) lcall add or sahf dec (bad) fwait (bad) jmpq test mov loope cmp outsb sbb mov lock retq mov xor (bad) sub rex.RXB lret adc ss pushq addr32 mov lret cmp (bad) ja retq fadd xor stc (bad) (bad) pop xchg (bad) not (bad) lea fnstcw rorl xor (bad) (bad) push in xchg rex.WRB add mov je xor rex.R rex.WRXB (bad) callq rcll adc decb rcl mov hlt pop rcr hlt mov pop mov (bad) cltd push jg pushq leaveq pop sbb (bad) sub cmp addr32 mov lods sub in push rex.WX rex.WB lock xlat rex.RXB or adc movabs cli int3 cmp stc jno push out rex.WB mov (bad) mov or push push loop pop out rex.WX rex test rex.RX repnz push and pop scas mov and mov cmp (bad) and lahf mov iret movabs adc fild push sub or callq jg push incb mov (bad) mov cmp (bad) push fs roll enterq lea push lret (bad) xor sbb mov (bad) jo test ror (bad) sbb mov icebp out xchg mov std push (bad) xchg xchg rorb push stos je jo xor mov lods push (bad) cmp not addl mov adc rex.WB mov mov pop jae xlat rex.W adc rclb jg adc mov callq add mov rcrb out inc or push push addr32 movabs lahf scas (bad) rcl jmp pop (bad) pushq and rex.WRX sub ss imul data16 jb fabs (bad) imul (bad) cmc sub fstpt cld pop mov jp,pt leaveq mov or addl imul imul jno xor sarq jrcxz sbb retq int loop (bad) and (bad) rex.WXB jns mov pushq int ficom rex.WXB jns movabs jae jb push mov jp (bad) movslq and jg fwait pop adc jmp xlat sti sbb or mov mov mov shll jae (bad) jmp cmp (bad) in mov rex.WB lock (bad) adc fxch lods cli cmc cmc sahf rex.WRB in (bad) sbb pop or pop cwtl xor add ss out sbb push ds pop movabs pop pop adc cmp mov adc std cmc mov in xor ss add fdivl retq loop xchg rex.WXB add pop cmpsl (bad) mov mov add adc iret movabs rex.WRX (bad) xor callq movsl (bad) scas int rex.WRX rex.WB jo (bad) (bad) (bad) stos push rex.RX xor outsb or (bad) sbb mov int3 mov and movabs cltd mov jb ss addr32 (bad) add fnstcw scas adc (bad) mov rex.RB sbb xor ss or imul mov test (bad) gs loope sub rex.WRXB movabs jmpq add or mov jl cmp push sbb retq cwtl shlb jrcxz clc cmp lret jle leaveq (bad) imull int (bad) (bad) in xchg push movslq (bad) (bad) enterq vpshuflw in pop (bad) (bad) add mov xchg test xlat (bad) ss jrcxz fdivs sarb rex.XB (bad) add test mov (bad) stos rex.R mov adc sbb jrcxz cltd fisubrl (bad) mov (bad) push push pop scas mov jnp mov sbb test (bad) addl fmuls popfq jbe xchg andl lret movabs pushq mov pushq stc mov jb xor push jrcxz sahf sti ds push cmp test lret shll jl cld cwtl in addr32 pushfq adc lods cwtl push mov lret int int icebp iret (bad) lods sub rex.WRXB push mov stc sbb and (bad) cmp (bad) or test jnp mull fildll mov rorl mov (bad) (bad) (bad) ja xlat xlat sbb lret rex.WRX sub callq iret mov clc enterq xor (bad) pushfq mov lcall push cmp stos sti imul jg mov push ds mov xchg insl (bad) (bad) movabs (bad) jg sarl and (bad) sbb mov scas sahf (bad) (bad) fmul xor jnp es jae push xlat xchg rex.WR gs rex (bad) pop fsts mov cmp adc clc cmp ja hlt jecxz jmp mov cmp rcl cmp rex.WXB sbb movabs pushq jne out rcrb rex xor cld (bad) push lahf jge mov pop fiaddl pop (bad) pop xor roll (bad) pop and and xchg shlb callq or xchg cld ja rex.RB (bad) ficompl xchg clc fistp or xchg cs iret fnstenv cmc data16 jne int (bad) (bad) mov movsb movabs lock mov sub mov (bad) movabs test popfq test std (bad) lret sbb pop adc xchg or mov callq sub mov fucomp and outsl (bad) in ffreep (bad) sub gs (bad) callq jp add mov sti jns (bad) ror retq add xor adc outsb pop fsts movabs pop (bad) rex.WB fwait imul sbbb loope push (bad) adc (bad) adc movabs sbb jrcxz,pt sbb mov out sub movabs ja ss mov cvtdq2ps add mov (bad) xor lock sahf repnz sti (bad) mov mov icebp retq fidivrl xor pop (bad) cmp fnstcw (bad) rcrb rex.RB (bad) rex.WXB push push xlat movabs movabs pop rex.W pop cmpsl mov cmp pushfq (bad) mov or movabs mov pop add xor fucomi push movabs push lods imul (bad) rcl repz rex.WX (bad) xchg lods jp (bad) mov out loope (bad) retq (bad) mov cmp xchg mov movabs cmpsl (bad) rclb ss (bad) ss adc cltd (bad) (bad) negl cmp stc mov movabs sarl addr32 lahf (bad) cmp adc rex.WXB xchg fcomps mov pop mov (bad) clc movabs test movslq test sbb lahf mov shl int3 or add in mov push adc mov xchg leaveq sbb (bad) mov addr32 mov mov cli (bad) enterq cmp in leaveq (bad) (bad) sti sub (bad) or rex.WXB lahf (bad) xchg data16 outsl mov fcompl xchg (bad) adc std rex.WX cli hlt ja addr32 adc pop int3 mov xlat or loopne (bad) pop movabs lahf js fldenv cmpsl cmp imul push rex.WX rex.WXB (bad) mov xlat add pop mov std and lret add stos stos mov xchg (bad) movabs enterq (bad) (bad) lods (bad) mov rex.X stos mov xchg xchg mov and imul in xchg pop xor gs mov push fdivrs add rex.WXB rex.RX (bad) xor mov (bad) repz (bad) icebp cltd jne or pop stos in cmp (bad) movl (bad) sub mov mov leaveq stos leaveq xlat ds mov (bad) mov shll movabs movabs stos mov cmp (bad) insl loop sti pop (bad) cmpsl iret mov mov mov xchg rex.RB fmuls std mov repz (bad) imul and sbb pop rex.WB data16 mov imull xchg sub pushq (bad) movabs sbb in adc pushfq ss push sbb jnp stc and mov push mov push lods (bad) lret mov cmp push es and jns sbb mov (bad) (bad) out jg (bad) je push push sti out rex.RX xor xchg divl lea or (bad) sub retq (bad) cmp mov mov iret jmpq jbe (bad) sub enterq lahf rcrl push push jmpq pop jp pop shrb cmp addr32 adc pop xchg leaveq cmpsl push outsb lahf pop ss ds rex.WX cmpsl lea retw sub and (bad) pop (bad) xor rcll rex.WRX lret rex.R adc sarl jnp rex.X ja (bad) sbb sbb (bad) (bad) jno mov fist rcr pop rol xor mov xchg hlt outsb rex.RX js mov sub (bad) xchg fnstenv xchg fwait data16 pop (bad) (bad) cli out sbb mov rex.X fdivr xchg jnp rex.WRXB push rex fidivrl (bad) push lock xchg pop mov mov pop mov push retq xchg rex.R mov ja xor flds xor lods cmp sahf rex.WR or and pop jle or stos cmp rex.R test rex.WXB (bad) push (bad) fcoml xchg rex.RX roll sub cmp (bad) leaveq out or (bad) mov or xchg or sub mov leaveq rorl rex.RXB test and (bad) push (bad) push adc callq sub addr32 cld pop (bad) movabs sub jl jrcxz pop mov cmpsl pushq xchg mov (bad) movsl push mov rex.WB movabs cmpsl mov mov jmp addr32 (bad) push cwtl push push movabs mov adc cmp adc fidivrl imul pcmpgtw loopne ja push mov in push vmaxps test popq sub jns (bad) (bad) cmc (bad) rex.WXB icebp rex.WXB loope xor pop and jne pop enterq jae test add cmp fmul sahf retq retq jp (bad) test movabs xor pop (bad) fstp repz sti movabs rex.WXB sahf imul test add sbb (bad) movabs scas (bad) mov mov sub hlt out mov jp sti pop mov rex.B gs leaveq (bad) jnp sti and sub and xchg shr xor sbb cltd (bad) sub jno (bad) fist rex rex.RB (bad) in sub (bad) fisttpll callq mov loope rex.RXB (bad) fdiv stc movabs jnp xchg (bad) cltd movabs sub xlat scas es push mov pop out jp rcl xchg (bad) mov jbe (bad) xchg pushq iret out popfq sarl push jns add push flds movabs mov jne icebp fdivrl lret jle rex.B rex.B mov jmp (bad) fstpt pop (bad) cli jg rex.WRXB repz lret movslq out xor mov xor movabs adc movabs xor (bad) xor rex.WRB rex.WXB (bad) movabs stos retq lods loope jmpq cmpsl adc ss testb (bad) xor mov rex.WRXB rex.WRXB retq and xchg rex.WB sahf mov mov or xchg xor mov rex.RXB repnz (bad) out xchg cmpl xor rex.XB retq stc jns and mov fisubrl push mov in sbb hlt rex.WXB cli pop testb (bad) xor cmpl rex.WRXB scas xlat lret xlat mov retq hlt fadd (bad) rex.WXB xor rcrl jle mov pop jbe pop cmp fsubrl fdiv (bad) mov sahf xchg xchg adc rclb sbb out xorps rex.RXB mov pop push push retq (bad) pop ja rex.B rex.WRB (bad) and mov mov leaveq (bad) je js imul pushq movslq cmp jmp out imul out rex.WRXB test (bad) movabs or (bad) or pop xchg clc cmp push jge push sti fs (bad) xorl and xchg and int3 xchg mov int (bad) mov rex.WRXB popfq mov push callq rex ja adc xlat ja mov movslq mov out xor rex.WRXB jp mov fs mov int3 pop pop lret and xchg rex.WXB insb pop rex.WRX lret (bad) mov loopne movslq (bad) pop sbb (bad) rex.R xor in fadds movabs sub ror mov clc add sbb mov retq xlat xor movabs rex.RX movabs mov (bad) pushq (bad) mov lock (bad) xor cmp (bad) leaveq insb popfq and enterq (bad) push adc (bad) out rex.X movsl rex.WRXB repnz outsb and (bad) jbe enterq mov and shlb jno (bad) lret pop fcoms in xlat sbb cmp (bad) pop and decl rex.X sub jno sbbl sub (bad) (bad) loope sub fsub cmp cwtl add mov (bad) xor pop jbe fstpl mov mov push enterq vpsubw adc pop test rorb leaveq mov negb movabs fcmove (bad) pop clc insb insl mov fdivrl cmp jae cmp rex.WR scas pop cmp rex.WXB stos pop imul (bad) (bad) (bad) adc (bad) rex.WRX xor rex.WB pop test (bad) rex.WRXB sbb lea test rex.RXB fs or and jns pop sbb stos xlat jo (bad) enterq ss rex.WRXB sarl xchg sbb cs sub mov icebp ficompl push and in shrl cmp rex.RX adc push cmp clc (bad) rex.RXB orl rex.WRX movabs rex.XB push shlb mov cmpl cltd adc or pushq cmp and xchg loop fsts insb mov sub (bad) rex.WX cld insl sbb lods jmpq and (bad) sti adc pop (bad) (bad) mov data16 (bad) (bad) jle out outsl fwait shlb mov (bad) cmp lahf (bad) (bad) (bad) mov push xor rex.RXB mov sub (bad) es es (bad) shl loop cltd mov or jno rex.WX push xlat jl xchg ja (bad) leaveq rex.RX repz rex.WRXB stos cmp leaveq std rex stc and cli cmp (bad) push (bad) int3 xchg (bad) adc cld out cmc (bad) hlt jp adc test fsubs fs in mov int3 pop and repz xor jg scas adc adc sbb xchg pop cmpsl sbb rex.WR xchg sub clc (bad) pop rex.RXB cltd sahf xchg rex.W mov fadds gs clc xlat lods adc enterq mov push stos rcr cltd adc cmp xor sub rex.X lahf (bad) scas ss xchg pop adc pop fidiv xor leaveq popfq jns xchg rex.WX pop out sub outsl retq rex.XB fs repnz jno (bad) (bad) mov outsb shrb scas fs xlat sub (bad) sbb rex.WB sti pop mov mov rex.RX rex.WR fwait (bad) rclb xchg cs retq xchg sub sbb (bad) and icebp jge mov sbb cwtl rclb stos pushq out cltd (bad) fstp mull xchg cld xchg retq fimul xlat (bad) fwait pop movabs js (bad) iret int push imul cld sahf or (bad) jge nop or in mov rex.WRB fxch pushq xor rolb cmp ds (bad) (bad) mov add fld xchg (bad) out leaveq jrcxz mov (bad) xchg xor (bad) mov retq fwait enterq jns test cmovns cmc rex.RX mov xchg jp rex.RB sbb xlat push rex.XB xor out rex.WRXB test xlat (bad) ja jb jne pop jle mov test (bad) (bad) rex.WB ss (bad) movabs xlat add xchg not lret mov cwtl rex.WB rex.RXB mov mov (bad) push (bad) add xor divb cs std xchg push out jne cmp (bad) mov cmp jae xchg (bad) sub lret repnz repz rex.RX mov sbb rex.WX mov mov mov and (bad) addr32 xor cs (bad) in cld push pop jb xchg leaveq (bad) pop mov mov jno mov movabs jnp xor out or mov xlat scas std ja out rex.W xchg adc gs (bad) xlat (bad) lret fimull (bad) mov push xlat movslq jae sub rex.B (bad) and cs fdivl jge jb xchg jl adc icebp stos lods sub cmpsb (bad) push pop jns jp out fdivl shrb xlat movabs (bad) pop cld insl lret outsb sbb rex.X xor movabs (bad) mov mov jns (bad) retq shr mov loope (bad) movabs mov pushq sbb cltd cmp pushfq or or pop (bad) ja (bad) or push (bad) lret scas movabs (bad) repz mov (bad) ds loope (bad) pop lret pop movabs (bad) popfq (bad) (bad) loopel pop (bad) add sti fcmovnb adc or out nop (bad) jae test mov push jg cmp push jne mov pop out pop test cmp pop (bad) (bad) fs push fwait mov xlat push xor ds and movsb xor mov ficoml hlt sbb movabs push addr32 stc or pop rex.WRX lahf clc jno stos mov pop not (bad) (bad) cmp sbb fsts hlt fcomps xlat out push (bad) xchg xchg shrl sarl xchg out (bad) mov rex mov jp iret xor (bad) (bad) lret mov (bad) rex.W out xchg xchg cltd in out jbe pop xlat rex.WX mov in fsts pop (bad) pop (bad) fcmovb sbb leaveq retq fldcw rex.RX xchg sbbl out lret mov rex.WRB mov sarl cmp ss xchg repz mov imul shlb shrb sti add (bad) pop ror movabs and xchg movsb loop and leaveq (bad) leaveq negl (bad) movabs (bad) sub xchg sub sub cld lret test push sub rex.XB sahf sub and mov jl adc sub push fsubrl pop out lods rex.W out scas xchg mov fsubs mov fldenv movslq (bad) mov xchg add mov jo shl sarl (bad) jb rex.WB jo adc push icebp (bad) (bad) je xchg fsubrp sbb rex.R rex.WB retq ja out mov addr32 mov rex.RB xchg out mov rex.RXB adc in mov rex.WRB bnd sub mov mov and lret (bad) cltd adc xchg out and xchg rex.WB movabs xlat int xor (bad) rex.WRB cltd int3 mov jnp rex.W sub mov retq lahf std cmp fdivrs scas xlat sub movsb and push rex.WR (bad) sub fwait in xor xchg imul js sub test sti pop (bad) xor hlt in (bad) repz cmpsl mov shll rex.WX stos sub xchg sbb (bad) jp pop (bad) (bad) (bad) outsl (bad) rex.WX (bad) sti mov (bad) adc out (bad) repz push ja repz rex.B fs ja loope and (bad) shll (bad) (bad) sub sbb jb rex.WRB xchg fmull stos movabs mov mov movabs sub xchg mov (bad) rex.WB pop push data16 push and rex.WX push rex.RX (bad) adc in (bad) and (bad) mov fimull rex.WR fiaddl cmp movsl cmc jbe xor ds popfq push push lock xchg sbb callq adc cli outsl sbb ja out adcl xchg mov rex.W push sbb mov jp jo rclb xchg jge (bad) rolb mov movabs and or mov lret (bad) (bad) mov out adc rex.B jge cmp xchg mov ja sbb adc mov sbb xor fucomip (bad) cmpsl out jbe pop sti (bad) cltd insl (bad) xchg ficompl cmp js,pt push mov imul mov test adc cli mov jns fisttp sbb (bad) pop cmp mov fwait mov mov shll jnp pop mov (bad) or mov sbbb sub jae out adc int fnstsw cmp jae retq rex.X mov int and (bad) push pop outsl imul int3 fnstcw (bad) stos rex.X and loopne mov in push mov out jnp movabs iret jae cltd (bad) addr32 xor out mov adc push lahf and stos ds (bad) push rex.X xchg (bad) nop test jns rex.WB rex.W jae adc (bad) enterq leaveq nop test movslq loop adc iret fcom sbb rcll (bad) sarl sbb push and cmpb rex.WXB push mov jg insb pushfq outsl addr32 xor pop sbb xchg rex.R mov pop or or clc mov xchg es in (bad) movabs xchg xchg cld cmpsb fsubrp out ficoml sbb jbe scas fstpl pop rex.WB stos int3 (bad) rex.RB rex.B cmp fcomps cmp je (bad) rex.WX (bad) test (bad) xchg adc imul or fwait mov movabs add rex.W or mov cwtl shll cltd adc pop sbb jbe push subb sti jmp mov (bad) and cmp shl or movabs pop (bad) ja,pt mov (bad) jnp out shll out (bad) fnstcw rex.WB and pushq frstor leaveq (bad) mov getsec mov xlat rex.RXB stos fisubrl add adc push ja (bad) addr32 vxorps (bad) xchg mov idivb sbb loopne xchg mov jb ficompl iret int add sub (bad) outsb rex.X cmp test xor (bad) push sarb imul adc xchg sub cs lret (bad) bswap (bad) (bad) (bad) pop out push (bad) (bad) pop mov xchg rorb icebp rex.XB out mov clc imul fdivr jrcxz (bad) xchg xorb xor pop mov jge xchg rcll sbb cmpsl (bad) pop push shll (bad) rex.WRX rex.WX lods fdiv retq xchg ds (bad) mov or fwait rcrl sub jle mov movabs loope pop out mov lods pushq (bad) lods insb retq adc pop bnd or rex.WRX mov fcoms test stos rex.WB data16 callq rex.W mov xchg rex.XB push or lret enterq cld (bad) (bad) adc (bad) lret retq (bad) xor and movabs rex.WRXB xchg movabs pushfq cmp mov outsl (bad) (bad) xchg mov rex.WRXB iret mov imul mov test pop mov lret mov mov adc iretq jrcxz rcrb mov mov (bad) callq push xor cmp shl sti pop scas lods xchg retq outsb or add cld sub (bad) cmpsb movabs push (bad) movabs and mov mov addr32 jp ds mov (bad) rex jb mov mov in and imul xchg out mov ficompl jnp (bad) (bad) mov mov movslq (bad) xchg (bad) nop lods mov leaveq jl in movabs sti jp lret js test cmpsl movabs stos (bad) ror and jno adc adc ja movslq push (bad) rcrl rex.WRX or jg pop repnz mov jne movslq pop sahf loopne (bad) adc sub sbb rex.X xor pushq push adc fiaddl adc sub rex.WXB push xrelease setle (bad) cmc out out cmp pop retq (bad) hlt adc hlt mov out xchg jmp test js outsl (bad) int retq (bad) rex.RXB cmc clc lret pop divl out pop cmc divb (bad) loop rex.RX pushq xlat jae cmp iret xchg leaveq clc pop fcompl and outsb sti sbb out imul pop jb push (bad) mov out sahf mov mov mov adc xor mov sbb std pcmpeqd xor rex.W stos sahf (bad) add xchg (bad) leaveq movslq fwait sti pushfq mov jrcxz pop je lods (bad) xchg fistp or pop adc xor cmp or mov out pop lods fdivrl (bad) lahf in push (bad) leaveq fisttpl adc mov loope imul retq jmp stc jae cli test mov xor es cltd fsubrs js jnp movabs xor xchg mov movslq rex.XB mov mov lret xchg loop mov rex.RXB mov adc loope icebp xor xchg mov repnz cs fwait iret jb rorl fmulp xor jb (bad) test xor sbb movabs rorl (bad) (bad) sbb rex.WX roll rex.WR cmp (bad) and (bad) in fnstenv lock push rex.WRXB data16 test push xchg (bad) lock loop add (bad) jl roll jbe push rcrb add xor rex.R lock jmp sub cmp int jne in (bad) sub movslq xlat (bad) mov out xchg scas imul push pushq mov rex.R repnz rcrb fstpl gs add pop (bad) rex.WXB pop je cmp (bad) in jbe xchg icebp pop cmp and movsb rcrb ficomp xchg ja cltd add sti add (bad) mov mov xor push lods jae orl cmpsb xchg imul hlt ffreep and shlb iret je test (bad) cmc or adc fwait mov rex.RX movsl (bad) mov cmp (bad) cmpsl notb int3 jo and (bad) (bad) mov addr32 ss sbb pop loop outsl out movslq mov (bad) cmp out out iret cmc sub mov push test iret sub (bad) xor jns cmp sub jbe xchg and add push sbb popq rex.X or sbb clc add push fcmovbe mov push xchg stos adc rex.RX loope insl xchg int iret adc (bad) ja jns stos lahf rex.WXB rex.X (bad) rcl add (bad) (bad) shl cli or mov pop jrcxz push xchg xchg xchg cmpl mov rcr adc lret (bad) xchg (bad) sbb (bad) mov rolb and mov cmp gs add movslq sbb sbb sub rcrb sub cmp sbb movb sbb ja sbb xchg loopne (bad) sbb rorl pop push push push and or cltd push lea jge (bad) xlat xlat vcvtps2pd sti mov jp and (bad) mov pop mov pop sbb cmp (bad) push (bad) rex.X ja mov mov mov cmpsl sti xor rex.RXB push xor mov (bad) rcll and (bad) xor stos shrl mov rex.X out lret or rex.RX xor (bad) mov jo sbb ds fnstcw std cmp leaveq (bad) test (bad) jb xor (bad) movsb leaveq test mov (bad) fidivrl (bad) push (bad) fcoml and pop (bad) ds push adc rex.RX addr32 rex.WR cmp leaveq fwait mov orl (bad) (bad) fstpl out adc mov jb in jbe pop in (bad) sbb mov loop sbb pop mov iret xor cltd mov orl mov rex.WXB rex.RX jno cld (bad) sbb push std (bad) push pop fwait leaveq (bad) pop pop jrcxz push cs iret lret (bad) rex.WRB fprem1 fstl (bad) mov and sub xchg push icebp int orl mov (bad) (bad) cmc movabs scas jle rclb sarb rex.WR rex.WR pop test (bad) ja cmp mov jns (bad) js out cmp movabs mov (bad) adc mov pop cmp in movslq (bad) js,pt (bad) or sub rex.WXB rex.RB popfq movabs jge imul cmp mov mov cli cmp rex.WB xchg mov jrcxz (bad) (bad) pop and sub pushq lret jl je fidivrl or repnz (bad) mov jnp (bad) adc sub test mov (bad) stos rex.WRX imul jb (bad) lahf mov rex.X sbb js mov xchg (bad) or fstl jno push push ja in or mov pop push (bad) (bad) (bad) leaveq add jb lret scas repz adc es lret (bad) imul stos mov (bad) stos rcrl xchg xlat sbb mov rclb rex.WB loope mov jbe shll movabs (bad) rcll xor rcrl cmp (bad) cltd callq jnp xchg (bad) add and lret stos imul (bad) mov xor imul pop push lret jmpq (bad) xchg xor lret (bad) xchg rcrl adc or rcr cmp sbb rex.RXB lea cs popfq test cmpsb xlat (bad) mov incb jl outsl ds popfq rex.RXB jg (bad) cli sub (bad) mov sbb jmpq imul xchg adc and (bad) adc sub mov (bad) (bad) adc rex.XB rex.WRX (bad) push (bad) fmuls lods cmp mov movabs xchg (bad) rcll sti sarl rex.R orl jno mov xchg or nop fidivrl fmuls rex.R push addr32 xchg pop out ss xor rolb mov mov or jmpq xor ror (bad) mul in stos mov loop cmpsl cli ficompl xchg cmp sbb in jg adc sub cmp adc mov (bad) xchg cmp (bad) (bad) mov jp cltd (bad) lock ds jae fldz out movabs pop xchg adc push sbb repnz shrb rex.WRXB sbb sbb imul push imul (bad) push rex.WXB iret (bad) test (bad) mov fdivrl rex.RX leaveq repz and xor mov movslq movabs movslq in outsl sbb and pop adc xchg sarl rex.RB fmull pop (bad) cmpsb sub movslq mov sbb xlat mov cqto imul mov subl (bad) decl sahf push lret pop rex.RX ja,pt sub push cltd decl in xchg xor imul push imul cwtl xchg (bad) je (bad) mov ja push mov push jle xchg xor rex.WB xchg movslq jbe repnz sub fldenv rex.WRXB push (bad) js or xor pop xor add add mov retq or sti pop xchg jl ja (bad) (bad) or (bad) cmp sub mov (bad) ja pop (bad) pushfq xor (bad) mov rex.RXB sub sbb ficoml adc jl mov pop repz pushq xchg lret ja icebp test icebp adc jrcxz pop push and adc xchg pushq cmp push pushfq stos xchg mov jp sarl ja pushq push adc or (bad) in mov sbb rclb jg cmp and cltd sbb mov (bad) jb lods lret leaveq sbb and out push (bad) lods cli repnz add cltd adc rex.WB fbstp sbb adc rex.WRXB push xchg push loopne cmp shlb jns fcmovbe icebp rex.R repnz xchg mov and jns (bad) idivb fistpl jmpq push clc mov pop (bad) xor cmc imul (bad) or out rex.XB cmp xor pop jnp sbb push pushfq pop sub out push sub lret (bad) xchg movabs movabs sbb rex.RX xor shlb jno adc js add (bad) xor retq ficompl idivl addr32 sub (bad) fmull and pushfq scas leaveq sbb (bad) push roll sbb rex.X rex.WRXB cltd push xor lea xor stos jmpq push sub cmp cltd ja xchg sbb fist mov (bad) pushq mov popfq jbe negl es lret push mov jge addr32 pop cmp std and in and (bad) mov jb lods add rolb sti retq push (bad) rex.WRB mov (bad) rex.WX xchg xchg mov lock cwtl sub leaveq idivb cs movabs (bad) xchg add (bad) stos jmpq adc rcr cmpsb sub or fwait (bad) fistpl and mov mov and xorl push test (bad) pop fsubrl sbb sbb negl sti (bad) rex pop gs out out data16 repz out pop rex.WR rorl xor std jmp rex.WRX cltd rex.X cmc mov out out enterq xchg int adc cmp xorl (bad) rorl iret mov sbb xlat data16 pop fidivrl cmp in push flds int3 iret or movabs jnp jp mov jge xor rcll or xlat std add jo cmp jle mov xlat pushfq int3 and xchg out or int3 cmpsl xor mov or enterq icebp out callq test rex.R test ficoml fst shrb pop pushfq or rex.W mov mov mov test cmp (bad) (bad) mov movsb movslq hlt cmc rex.WXB fidivrl pop movabs pop sti (bad) xchg (bad) negb sub (bad) cli mov push rex.RX sti sub fldenv (bad) sbb (bad) adc (bad) push (bad) adc rex.X mov out (bad) rex.XB lock fisttpl leaveq or jae mov sbb mov rex.RX xchg sub jae rex.WX sarb nop rex.XB cmp cltd or cmp test out push cmp (bad) or sub lea adc (bad) mov fiaddl rorb (bad) rex.WB pop jno xor nop jb add xchg (bad) and cmp fcoml sarl data16 pop mov mov (bad) mov jp out mov or push cmp loope push cmp mov or adc xchg or mov xchg sti sub rcll mov xchg jae xchg movabs mov test and insb mov mov retq addl mov (bad) mov test jge (bad) mov cmpsl rex.R push jl (bad) outsb rex.WRXB movslq rolb cmp rex.WRXB cmpsl mov hlt push decb ja push test pcmpeqw insb jne outsl rex.RX out (bad) lret jnp (bad) jae push jge (bad) jns lret rcll lret push mov sti jno lret int3 fwait js pop jae test rex.RX data16 adc add cmp pop (bad) mov cmp (bad) movsl mov insb pop mov pushfq (bad) repz pop outsb push nop jnp cmp es jae sbb and jp rex.WR sub xchg sbb cmp or (bad) (bad) pop shl (bad) sbb adc xchg jns xor mov clc lods sbb enterq (bad) (bad) icebp retq (bad) imul jae jb mov loopne jb in rex imul rcll sub pop xor rex.WR sub ja (bad) jge,pt (bad) leaveq pop jmp mov std ds mov int jl ss pushq rcl leaveq cmc repnz fisttpll sub xor rex.R mov add retq cmp jmpq mov test stc loopne (bad) or or retq jp (bad) push mov jno pop je fs xor test addr32 int iret fcmovu adc xor testb xlat sbb jo ficoml movabs in push sub mov imul mov fidiv fbld and (bad) xchg or mov pop jge (bad) rex.WRXB cwtl gs in pop pushfq fwait mov fiaddl xchg js (bad) (bad) fcomp outsl addr32 (bad) cmp mov movabs (bad) mov and fild mov (bad) push pcmpgtw stos xchg mov test insb scas (bad) test (bad) (bad) and or xchg addr32 jns cmp (bad) data16 fwait retq pushfq pop fsubl pop or fcoml lods fldpi ds rex.RXB push jae mov out fsts rex.WRX xchg lock sbb or and mov mov adc (bad) (bad) xchg ds mov fild xchg test sahf rex.RXB rex.WX fistl pop cmp pop sbb mov and cli mov xlat jg,pn addl movabs xchg scas xchg cmp outsl outsb rex.RXB fdivs (bad) xor xor cmp (bad) cs xchg push rex.R sub test lahf push pop rex.WRB data16 (bad) mov in insb rex.WRX pop insb jg test (bad) stos push loopne sbb loope mov cmp loopne sbb and (bad) rex.WX xchg rex.XB test push pop cmp movabs lods mov mov add xchg jrcxz popfq je xor movl retq int3 xor sub xchg or adc je lods (bad) lahf mov scas mov adc jp push rex.WXB rex.RB movsl shrb lods and scas mov mov retq adc movabs popfq cmpsb push (bad) push imulb popfq and sbb sarb rex.WB pop sub pop adc add stos xor sub (bad) mov (bad) (bad) (bad) mov fdivs int cltd add (bad) jo xchg cmpsb fiadd jl stos in stc cld cmp test popfq xchg sub xlat out adc test ja mov out add mov hlt cmp cli scas add sub movabs jnp rex.WRX (bad) fidivl adc in loop (bad) retq test mov lret xor rex.WB push lock pop imulb lock mov outsl rex.RB in adc cmp out jmp (bad) mov ja rex.WXB movabs sub fsts (bad) cmp (bad) mov jo (bad) in jne mov mov jle sbb jo sub (bad) pushq lods (bad) loope pushq out or or imul pop mov push mov jp (bad) pop or (bad) enterq (bad) lret div (bad) pop jno lock sub pop stos movslq lcall rex.RX lea (bad) mov jg (bad) (bad) push loopnel shrl jrcxz mov sbb rex.WXB (bad) and rex.WB rclb (bad) xchg (bad) fcoms stos cmc (bad) rex.RX lock xlat pop movabs fdivl test (bad) repnz (bad) lret mov rex.WB lret fnop mov repnz negl cmpsb xor rolb and jmp sbb je sahf stos cmp cltd es or movsb cmp mov xor mov xchg (bad) mov (bad) roll (bad) xchg outsb jle adc rex.RX add (bad) leaveq sbb cmpsl mov jp lea xchg mov sbb sub iret jp sub sbb divb (bad) lods nop rex.WX sbb (bad) rex.R outsb (bad) and xor je fiadd rcl (bad) mov mov pop (bad) push out adc mov lret mov add jb lret movsl push xor cmp nop loopne lahf (bad) (bad) (bad) or (bad) mov sbb add (bad) (bad) rex.WRXB adc push int test retq mov out cmp (bad) rolb (bad) mov (bad) mov movslq js repnz sarl rex.XB imul test insb pop mov shrb push iret (bad) add xchg xchg mov rex.RB (bad) testb pop (bad) sub xor mov mov hlt jl loopne leaveq xor xor or xor jnp pop and addr32 xchg (bad) movabs mov cmpsl rex.X cmp nop fs popfw (bad) out xor cmpsb jae adc retq cmp xor leaveq fwait cmpsb (bad) adc (bad) ja xor sub mov and rex.RB (bad) cltd repnz cmp jns addl pop outsl (bad) outsl xor mov add lret mov jrcxz xchg (bad) sbb test out (bad) jg pushq fs pop icebp rex.WB sbb shr movabs add push sub pop (bad) pushfq in rex.W addr32 test mov (bad) stos cmpsb std addl stos movsb add sbb test movslq mov xor repz xchg sarl cli mov outsl repnz rex.X jnp cmp mov and (bad) fwait mov int sbb out rex.WR add fdivrl sarb in push xchg and rex.WRX mov mov fwait notb mov xlat push (bad) movabs pop (bad) sub loopne scas out xor or test scas push fsubrl mov sarb rex.WB xchg rex.WRX test (bad) pushfq (bad) pushq jnp and popfq push fwait mov retq or decl pop lods and sbb rcrb (bad) (bad) xor pop jl sbb (bad) jmpq push (bad) jge sub pop push mov (bad) sbb fmul out movabs iret or (bad) cmp (bad) sbb and movabs pandn std test stos mov addr32 rex.R mov cwtl mov mov fidivl xlat (bad) fsts xor (bad) jb,pt movabs int mov rex.X and xlat (bad) pop (bad) adc out rex.WR xchg mov cwtl loop xchg fsub cmpsl rex.WRB (bad) sub jg,pt shl out enterq mov push rex.R mov mov push (bad) jno push xor rex.RXB cmc (bad) (bad) in cli adc mov mov movslq mov int xchg mov ds (bad) jbe push movabs retq fdiv fisttpll rex.RX rex.XB loopne (bad) adc mov rcrb adc push push pushq cs rex xor pop pop fnstenv mov and or iret mov lret adcb rorb clc js pop fst cmc ja (bad) mov sti cld mov cmc jg mov imulb leaveq test add jb rclb pop jo cmc cli (bad) sub popfq xor push push hlt rex.WXB mov leaveq cli ror jae (bad) push rcrl jbe xchg (bad) lret xor movabs out (bad) cld (bad) rex.WR jo cmp negl test xlat rex.WRB fwait mov adc (bad) add cmpsl xchg and sub sub rex.W mov insl (bad) xchg clc mov (bad) (bad) sub adcl ds mov xchg int retq pop rcrb cmp mov addr32 xor in (bad) (bad) sub (bad) stc or jb push adc xchg cli popfq push jp cwtl sub adc push sti jno mov lods mov sbb xlat (bad) in movabs mov xchg jb imul mov (bad) cld rex.RXB pop xchg cmp pop xchg test in clc jb jae addr32 loope mov movsl shll lock push movabs addr32 in fxch adc popfq movslq mov js loopne pop insl push lret rcll iret ror enterq xor rcll rex.WXB cmp rex.RXB mov (bad) enterq jg rex.RB rex.B pop movabs std rex.WXB xchg pop jo rex.X mov (bad) mov xlat mov mov mov cmp adc jb out fsubl mov callq sarb xor xchg loop add xor mov cmp (bad) sub shll (bad) xchg in js (bad) shl callq out fstl xor push test jmp rorl out sub rex jne mov imul (bad) jne cmp rcl xlat mov jge cltd in movabs and repnz rex.R test stc mov pop sbb mov xchg imull sti rclb jp fild mov (bad) mov out mov leaveq push mov sar loopne push rex.RX jnp out rex.WB push fmull add or cmp rex and (bad) (bad) sub (bad) rex.X and jne mov movabs fnstsw leaveq out mov cmp (bad) lods sar pop fisttp adc rex.X test in (bad) imul mov scas jae (bad) adc cmpsb movsb pushq xor pop mov xchg pop fdivrl fnstenv loopnel push in movabs (bad) sub push xor fs xchg pop sbb fldenv push in loop popfq loope movabs xor movabs cli jne lods mov (bad) repnz leaveq leaveq out pop outsl mov rex.WX (bad) fcomp jle mov push ja insb test fidiv ds cli movabs push rcl or mov mov or mov cltd bnd mov (bad) addr32 and cmp outsl imul scas cli jmpq sub and movabs mov (bad) pushq mov xor jle xchg (bad) rex.X callq (bad) mov adc nop ror ds shrl mov psadbw jmpq add mov mov (bad) int jns jge mov xchg jb mov movabs jbe cmp pop lret xchg rex.RX imul (bad) xor movabs xor out (bad) je in repz xchg lret fnstsw movabs xlat fistpll add movabs movabs rex.WB addr32 add cmpsb sbb (bad) or push xchg rex.WRX retq jrcxz frstor hlt adc xchg pop mov mov xor xor push mov repnz (bad) jae (bad) cmp cmp pop (bad) mov pop (bad) push (bad) (bad) loop scas in (bad) lret pop sahf mov fsubrp mov xor and lret adc adc (bad) (bad) xor mov imul fst jbe jge mov sub fcoml in divb add (bad) rex.RX and loope jle (bad) sbb pushq sub mov jle loop roll push (bad) addr32 and jae push jns pushq movabs ja callq sbb xor movabs cmp or xchg cmp data16 and cltd jo lret movabs adc fadds int divb addr32 ja rorb jae mov cmp push adc push in cmp jb test cmc je push (bad) xor rex.RX mov movsb jnp out rex.XB (bad) ss cmpsb insl rex.WR out sub mov rex.XB iret pop sub mov push adcl xchg adc xor out repz retq popfq jp rcrb negb add mov cltd jno jle or lods repz jne pushfq sbb xchg movabs mov add cmp (bad) std mov fcomps retq (bad) (bad) callq subl jl cwtl leaveq lret pop ja xchg mov sbb not xchg mov lahf jl mov and rex push fdivrl movslq sbb (bad) (bad) mov mov cmp fs cmpsl iret fidivrl clc pop retq ror cli xchg cmp leaveq push mov loope (bad) ficompl (bad) cmp pop fcomps cmp or movabs xor data16 (bad) add pop sub mov mov push (bad) (bad) (bad) lahf and add adc jne repz retq mov out pop rex.X jmp addr32 pop (bad) mov in mov imul (bad) mov in jae (bad) mov mov pop adc add pop (bad) jp movabs hlt movabs in stos rex.RB js mov mov lods cmp (bad) (bad) (bad) jmp cmpb cmp movabs cwtl mov rex.RB jle es movabs mov jb (bad) mov roll (bad) sti test mov icebp addr32 push push (bad) mov (bad) mov xor (bad) (bad) popfq xchg rex.W lret loopne xor sbb ja (bad) mov sti xor push clc (bad) sbb movabs fstps pushq pop lock jle push pop sarb cs (bad) loop out push iret ror (bad) pop es cmp jne fcom push (bad) (bad) cmp (bad) (bad) xchg pop rex.RXB add rex.W (bad) lods or pop xor iret lret movabs jmp and sbb addr32 mov (bad) repz imul addr32 movabs (bad) or (bad) (bad) mov rex.WB xchg loopne stos adc jns movabs rex.WRXB pop fidivl retq pop test mov pop testl ja xor int rex.XB fisttpll rex.WRB mov mov push ss test repnz in enterq retq mov xchg xor (bad) icebp push std (bad) push mov gs mov sub mov ss gs jp jl movsl scas loope rex.WB rcl jb callq cmp leaveq lods push or sbb sub cmpsl rcll xlat xor jle xchg rex.WRXB mov sbb clc js cld int (bad) popfq imul sti push rex.RXB imul (bad) fstps stos ds push out lock sbb shrl out (bad) jl jl adc (bad) or (bad) xor test jmpq jae repz (bad) divb addr32 xchg sahf push sub sar add jle sub shr pushq sub (bad) cmp clc (bad) outsl movabs rex.X xor rex.WB (bad) (bad) scas js movsl out sbb imul enterq sub sub xor insl mov adc sarb pop movabs xor sbb pushfq cmp (bad) xchg jge jne rcll fnstcw push cmp shll ja sbb (bad) insl lret addr32 mov (bad) outsb std lret lret xlat movabs xchg push movb mov rex.WRX (bad) mov (bad) leaveq jbe sbb pop out sub test adc shlb out mull leaveq je and mov (bad) rex.WRB sbb rex.W repz pop lret jae pop mov lret cs xor mov (bad) push pushfq sbb ficompl and xchg mov stos fcompl leaveq or mov or fcomi mov fldenv xchg out fisttpl pushq in retq jae (bad) (bad) jge rorl push cmp jrcxz,pt adc rolb mov mov mov rorl je or xorl mov xchg (bad) (bad) (bad) pop sbb (bad) repz ljmp outsb push ja fcomip sub xchg fdivs mov jmp sti rolb pop adc jmp enterq adc push pop jo cmpsb imul (bad) sbb retq sbb stos jo rex.RXB je rex.WRX js lahf int ja rex.WX callq cmp rorb (bad) xor rorb fnop (bad) push je shl jbe (bad) stos or (bad) sahf jnp pushfq neg addl rex.WB jrcxz std (bad) pushq (bad) (bad) cli movabs hlt xchg xchg (bad) push imul xchg in mov jmpq (bad) fwait ds movabs nop xor rex.R sub (bad) xchg (bad) cmp mov pop cmp rclb shlb mov movabs xchg decq xchg pop pop stc push jg mov mov int3 rex.WRX es (bad) rcrb (bad) xchg push rex.R movabs push cwtl or (bad) mov pushfq fstpl (bad) rex.RXB je rex.WRXB ja xchg movabs rolb gs lret push lea or lret (bad) mov out mov mov leaveq xor mov mov fcmovb (bad) test stc (bad) jno mov or (bad) mov push adc movabs movabs mov rex.X fwait (bad) sar rex.RX iret clc out adc (bad) shlb (bad) callq dec (bad) fcoml sub (bad) push lret xchg (bad) (bad) loopne pop jle rex.B sub (bad) mov and mov iret jmpq test fnop mov (bad) mov iret (bad) scas jnp insl movabs repnz pushfq (bad) rex.R add push rex.W mov jns push (bad) movabs cs (bad) pop xlat mov test adc fcmove add in (bad) push test rex.RB push hlt lret (bad) pop jmp mov xor pop ja and xchg (bad) mov mov rex.RX pop sub mov pushfq adc jne lret mov push (bad) and rex.WRXB jp movslq xor jns pop and or (bad) ja sub and imul (bad) jns push jmp frstor movabs mov ja lea (bad) jg rex.B rex.X repz push adc sbb mov jnp ja (bad) or cmp or leaveq push in and nop lret stos mov mov rex.WX ror xchg xor rex.WX adc (bad) imul mov jae jbe (bad) sbb rex.WRX movabs push xchg cmp jrcxz sbb movabs xlat rorl sbb lret pop rex.WRXB mov (bad) (bad) xlat movabs cli rex.W movabs jne scas (bad) lret push cmc adc pop xlat ds movabs fsubs rcll and jg or sub (bad) sbb (bad) cmp push mov outsl fwait sar (bad) pushq push addr32 cmp mov jns lret and (bad) not xor mov cmp ja xor push fild leaveq callq adc push hlt sarb adcl mov jb ds movabs xchg cmpsb rex.RB rolb inc (bad) lahf fcmovnbe rcrb jo adc fsubs xchg scas adc xchg (bad) sbb cmp enterq add sub fwait xor sub mov lock sar shl insb retq insb ds jns (bad) (bad) rex.WRXB movslq or and popfq fucom adc sbb (bad) int mov rex.W sub pushq icebp out add flds xchg (bad) (bad) jl sub movabs and fcompl int pushfq ffreep (bad) (bad) jb out cmp popfq idivb rex.WR es ja sub addr32 cwtl cli loope rex.RB jno or mov sub rex.WX fidivl cmp push out (bad) sti xorl rex.WXB cmp push mov add shrb insl xor push sbb xchg rex.WRXB jmp sub mov fdivs pushq retq rex.WR shl loope add (bad) fcomps out movabs sbb in retq (bad) xchg or sub invd rclb and (bad) ss ss mov xor cltd cmp sbb repnz push rolb int repnz xor jno test and xchg mov rex.W lahf rex.WB rex.WRX jae fwait (bad) xchg rex.WR rex.RXB addr32 push (bad) cli jmp or hlt mov (bad) xchg rex.RXB sub fldcw (bad) adc (bad) out mov addr32 (bad) (bad) repz ss add sbb lret icebp mov pop sub stos movsb sub mov rcl orps mov jo lret fcomp movabs movsb jl in (bad) jbe push push xor rcrb lahf (bad) fisubr pop rex.RXB push push pop movabs mov movslq imul repnz rex.X xchg push pop (bad) sbb mov (bad) and repz or ficompl cmp imul idivb and out rex.WR mov mov sti pop sbb add or iret out mov retq (bad) sti movabs sarb retq adc cmc push xor fsubrp jmpq mov xchg loope lret cltd mov adc addr32 xchg (bad) adc cltd sbb adc push sbb (bad) leaveq sub fldt pop ja or or or sahf (bad) or or mov sub rcrb or sbb ss (bad) mov (bad) mov mov xlat rorl (bad) push and mov mov (bad) and mov xchg (bad) fwait or stos mov int3 jmpq push icebp xlat shll imul mov outsl cmp (bad) mov sub jg push sahf mov sbb xor push ja fldcw rex.WRX or push add jle fcomip xchg rex.WXB pop callq retq callq imul fcoml xor fidiv test pop (bad) outsb lods repnz xlat add jnp mov xchg adcb rex.WRXB rex.WX rex.RXB pushq (bad) addr32 rex.WR in mov jae jae add mov (bad) cmpsb rex.RX jrcxz xor outsl (bad) push sub rex.WB mov movslq mov and mov sub (bad) mov adc push jb je rex.WRX (bad) cmpsl rol and add mov cmp and rex.WRXB lret (bad) pop adc pop push movabs mov sbb xchg mul rex.R mov add rcrl cmpsl mov rex.WX repz ja cli rex.RX (bad) addr32 (bad) lahf sahf mov (bad) pop rex.W jmp cmpsb lret (bad) addr32 (bad) (bad) cmp insl mov (bad) sbb cmp mov (bad) rex.WRX push cmpsl es mov mov jbe mull gs stc (bad) out jg or and fidivl (bad) mov mov movsb movslq pushfq rex.WX lea movabs lea addr32 mov cmpsl jns sub out movslq lods sbb pushfq (bad) mov xchg ss repnz out push pop divl mov pop repz pop sub pop xchg ja pushq xlat (bad) fstps (bad) cmp (bad) int3 lods (bad) xchg out leaveq leaveq rex.R movslq (bad) push (bad) mov sub ja retq movsl repnz test rex.WB gs (bad) mov imull rex.WB sti lods retq xlat mov mov xor in (bad) rclb rcrb ss (bad) jno jle cltd xchg or rex.WXB lock cmp jns rex.WB fwait sbb (bad) cmp cld mov stos repnz rcll or addr32 rol fnstenv mov (bad) (bad) adc or jmpq cmp adc (bad) enterq outsb rex.RX cli add or popfq stos xchg sub rex.WRX (bad) mov xchg add lock rex.WRX (bad) sbb imul popfq gs loope (bad) imul loop (bad) (bad) sarl rex.WB xchg pop test (bad) xor (bad) stos rcl and jle xor rex.XB cmp adc stc rex.B rex.WRXB (bad) rex.WR rex.WXB (bad) mov movabs out add ffreep mov sbb cwtl or jo (bad) xchg xorl (bad) scas test iret scas push shlb lods add in pop mov retq out add int3 cli xlat cmp rex.WRB pop outsl mov cli int rorl xor lea rcll (bad) mov fcmove iret jne mov stos imul (bad) out mov push (bad) ja push ja js sti (bad) or mulb (bad) mov jns (bad) popfq movabs (bad) out (bad) ss push icebp push (bad) xlat int3 vaddsubps or pop sahf and sbb ja mov in or movslq popfq (bad) test (bad) sbb movabs mov (bad) rex.WRXB addr32 cmova mov add cmp or out (bad) mov xor rex.W mov and sarb outsb fcmovnu rex.RX pop mov rex.WR xchg ds fisubl insb movabs out rex.W rcrb jb and loop sub stc adc data16 punpckhbw imul (bad) or mov rex.RX or movslq jne out jne (bad) cltd jmpq jp mov adc (bad) rex.WX repnz iret mov movabs rex.RXB outsb mov rex.RX rex.WRX loopne jne sbb and (bad) and (bad) ffreep rol mov (bad) je lods cmp xchg (bad) shrl (bad) push (bad) push out icebp or jrcxz push (bad) mov (bad) add mov sbb jp push xchg ja add in enterq or movabs cmp test insb (bad) jae jrcxz or xchg iret movsb sub sub iret cmp cmp pushq ds jno push or push pop add mov fdiv and loop mov xor jge (bad) enterq pop jl repz mov insl in in rex.RXB insl sub lods sti (bad) fildll popfq pushfq (bad) mov out out mov push jmp push (bad) (bad) and (bad) and rorl cmpsb jge (bad) push adc (bad) insb fidivl bnd vmulsd rex.WRX xchg and addr32 sub (bad) gs fs rcl xchg sbb in rex.B fwait (bad) ja cmpsb scas stos scas mov mov pushq icebp push rex.WRXB lret in and idiv xchg jb,pt (bad) icebp or jbe add rex.WRX and xor movslq sub (bad) (bad) mov mov shll jmp rex.RB xchg enterq and movsl push mov xor rcr rex.WB jne enterq xchg andps (bad) neg xor enterq and out pop jmp lods fmuls movsl rex.WB orl (bad) (bad) ds (bad) fnstcw jge cmp out pushfq xchg lods (bad) stos std jmpq out callq ljmp push push sbb xchg and stc add jns and push rol jmpq mov addr32 fwait and (bad) pushfq andl movabs (bad) (bad) and (bad) mov sbb lea cltd xor jrcxz shl xor test cmpsl mov out xchg rex.WXB add adc retq test (bad) out jl adc stos scas jg movabs (bad) mov sbb jno test rex.RXB rcl rcrl ss imul repz movslq rex.WB loope rex.WRXB test in adc ja jno adc rex.WRXB mov mov sbb lret pop popfq sbb scas and ja or pop js hlt rex.WXB stos add rex.WXB (bad) (bad) test or movabs push stos (bad) movabs push push sub dec cltd jbe jle mov mov negl sub jg or xor cmp and rex.XB icebp out sub sub pop xor (bad) sbb jae leaveq lret push clc and rex.RXB rex.W fcmove xchg mov lock repz rex.RX cmp leaveq popfq addr32 cmp and leaveq movabs rex.WX rex.WX mov sub add mov lock movsl cmp pop lods mov scas xor cmp and ss jp sub pop insl mov mov (bad) fisubr scas movabs ja add push addr32 movabs lret jmp xchg and sub pop add ss test mov movslq pop pushfq xor test rex.WXB out sbb (bad) ror scas repnz jo xchg leaveq nop out (bad) jp sbb stc mov rex.WXB jl (bad) nop rex.RX rex.W fwait ja mov movabs sbb rex.X push movabs loopne (bad) cmpsb sub (bad) (bad) mov (bad) stos jrcxz cmpsl or shll (bad) sbbb movabs enterq (bad) push and (bad) cmp (bad) rol cmpsb mov (bad) cmp clc (bad) mov push testl rex.WR (bad) cltd push movabs addr32 out or mov mov mov std es push lock xchg (bad) add (bad) push mov (bad) mov scas (bad) cmp lahf (bad) (bad) leaveq test push (bad) and data16 xor mov mov rex.RXB push cmp push (bad) cmp std cmpl pop mov xchg int mov (bad) rex.RX (bad) sarl pushfq rex.RB addr32 movsl sbb xor (bad) or (bad) mov iret (bad) (bad) (bad) pushq imul xchg jl enterq rex.RB ss js pop rex.RB push cmp and jg (bad) out xchg shrl xchg rex loopne pop mov scas push test or rol (bad) xor es jb fcoml (bad) and push out cmp hlt pop sub add scas adc (bad) jl imul mov mov fmull iret in mov in cs lods pop xor lret in (bad) adc cmp rex.X fstpl mov mov movabs cmp cwtl xchg sarb mov addr32 rex.WRB or pushq push rex.WR rex.XB add rcr cli jle cmp fdivs mov rex.WXB lock test rex.RB (bad) ja mov jmpq out paddsw mov notb jmpq (bad) out in rex.XB sbb leaveq movabs mov (bad) cmp add scas cwtl (bad) sbb xchg cmpsb pop cmp (bad) (bad) pop data16 sbb leaveq sti fbld push jno mov (bad) pop rex.RB ja adc outsl and push push push test repz mov mov mov ja sti pop neg (bad) jmp mov ds mov mov push mov mov jbe xchg xchg subl in leaveq js jne outsb scas adc cmpsl push test lock (bad) sub mov ja (bad) movabs (bad) shll xor lret push leaveq out imul lret rex.X cwtl (bad) sbb rex.XB pop adc push movsb (bad) ds xchg movabs xor out mov jns out and xchg (bad) mov pop leaveq (bad) xlat enterq fcomps sub movslq sub out push sbb fucom rex.WRXB enterq (bad) lods repnz in pop add test addr32 (bad) rex.WRX rex.WX addr32 cmp pop cmp (bad) xlat jge (bad) sti stc mov sti or loop (bad) rex.B (bad) mov fwait push addr32 (bad) mov xor mov rex.WRXB mov imul cmp je andl retq outsl lahf xor addr32 (bad) je mov mov rex.WXB rex.RX sub cltd rolb sub mov (bad) fnstsw xchg rex.R xchg add xchg out lods movslq (bad) (bad) lret (bad) cs (bad) (bad) mov (bad) xchg fist and mov xchg (bad) adc sbb mov loopne ror xchg xor (bad) mov loopne mov adc jne clc (bad) pop pop xor repz add mov xlat jle (bad) (bad) movabs (bad) rex.X lock sti (bad) jae movabs rex.WRB rorl rex.WRX xchg mov mov mov (bad) popfq mov outsl adc add stos subb rex.WX xor xchg rex.X imul adc pop jge popfq (bad) mov mov (bad) outsl lods test xchg (bad) xchg and sbb lahf rex.WR scas (bad) (bad) cmp mov push fcompl sub mov jne in sahf sub mov stos sbbl rex.WRXB fcompl adc xor jl retq rex.RXB int (bad) out (bad) (bad) in fwait push and cmp scas mov fwait cmp (bad) fisubl mov xchg rcrb (bad) and ds mov xchg rolb mov (bad) mov and mov push push xchg fdivrl (bad) lret movabs (bad) rcrb callq and sbbb je jo xor push mov (bad) cltd and sbb (bad) callq cmpsl xchg adc jae rex.W or push jge sbb xor sahf pop cmp xrelease sqrtps js cmpl adc and pop add int3 cld out adc rex.XB mov fldenv push fldcw (bad) (bad) rex.WRB push mov rex.X rex.WRXB (bad) (bad) fisubr mov lock rex.WX cltd jns mov out jo lret orl mov xor (bad) retq (bad) icebp adc xchg (bad) mov sahf idivb add out mov jl cmpsl ds stos std adc sbb xchg pop sti sbb xchg jae (bad) sub jns icebp imul pop push mov cmp rex.WRX ss in int xchg rex.RXB lret mov and stos or sub out lret sbb pop (bad) lods (bad) movabs cltd mov rex.WXB xchg mov sub rex.RX data16 add add sbb popfq rex.WRXB pushq sbb xchg int3 xor stos sub push push rex.WRX rex.WX (bad) outsb jne mov mov (bad) (bad) cwtl data16 push rex.XB and es sahf js pop or imul iret mov pop mulb jp pop mov rol movslq push (bad) sub mov (bad) or (bad) repz addr32 lret pushq in fisttpll xlat shrl in sahf cmp sbb pop cmp and (bad) retq cwtl fisubrl mov xchg jrcxz rex.R addr32 out cmp (bad) fucomip mov stos xchg jp jo rex.WR retq add cmp push (bad) rex.RX movsb xchg (bad) jbe push notb jns xchg std sbb pushfq mov sbb ja pop out xor (bad) lret (bad) (bad) out rex.R and mov rex.WX in int3 rex.X xchg es cmpsl lret sarb pop sub fcompl jg cwtl rex.WX addb mov mov xchg cmp xchg pop movabs xor pop xchg xor leaveq pushq add pushq fnstenv lret mov and fisttp xchg addr32 sbb cmp out (bad) rex.WX mov xor fdivrl pop (bad) sbb sti stc sbb ds push mov xlat add sar adc (bad) fwait pop mov popq movsl lods rex.WXB pop xchg jae rcrl ja lea movabs (bad) mov repz test scas cmc rex.RX push mov lods mov addr32 out and and rex.RXB vcvttsd2si jbe ror (bad) stos mov mov ja xchg xchg adc push hlt rex.XB lret rex.WRXB movabs imul or and scas rex.WX jnp xor or rex.WR (bad) (bad) xor pop cltd mul out fadds rex.RX lret xchg jae mov mov rex.WX jp pushq (bad) xchg xchg cmp xlat xchg sub jns fwait xchg out pop or jb mul (bad) cmp (bad) pop (bad) mov fstpl cmp fcoms cmp lods movabs (bad) rex.B mov push iret jl mov roll jae jo leaveq (bad) push cmpl mov xchg (bad) retq push sti pop repnz stos mov (bad) xchg fdiv rcrl xchg jmp jns movabs cmpsb cmp push rex.WR adc rex.R and ja cmp ror cmp movabs stos sub sub jbe (bad) cvtpi2ps test and rex.RX data16 adc mov push cld loop fldl2t push and jnp imul mov out movabs xchg fcoms sti rex.RXB stc retq mov jo fwait retq jle mov jno (bad) movslq sbb sbb lret (bad) sub push rex.WRB or addr32 add sub clc xchg fnsave cmpsl stc cmovg lods xlat out push add mov xchg sub cs mov cltd (bad) (bad) sbb cmc mov loop mov rex.WR push out rex.WX pop iret cmp pushfq jb (bad) (bad) jg data16 rex.WXB test fcmovu and sar push leaveq lahf (bad) iret cli adc mov jrcxz (bad) xchg sub push in and lret cwtl repz lret jge sub mov mov xor mov out xor jl out adc rcll pop pushfq rex.X (bad) rcr clc in lods flds js mov rex.XB in (bad) xor xor callq rex.X (bad) push (bad) ds xchg mov lods fs repnz stc lret rex.RX fwait enterq cmpsb fcmovbe mov repz rex.WXB (bad) or or push sbb pop xchg lret (bad) and push xor mov xchg push mov (bad) pushfq leaveq out (bad) (bad) push rorl rcr xor cmp (bad) (bad) rcll nop (bad) mov jmp push hlt pushq mov rex.XB cld mov jmpq fidivr test rorl mov sub fdivrl movabs loopne retq mov pop pushfq ficompl xchg xchg (bad) (bad) (bad) sbb movabs jnp cltd push pop std (bad) and (bad) ljmp stos js,pt retq out fidiv pop sub cmp sub fmull clc rex.W enterq fwait mov sub cmp movabs rex.B sbb push (bad) sbbb cmp test xor shll fwait add rex.RB lahf xchg (bad) push (bad) (bad) mov add push jg jae (bad) fstpl callq int3 rex.X js and add in push mov sub adc movb (bad) jae dec sbb mov clc rex.W xor fwait loop and adc jo cmp rex.RB rex.WB rex.RXB lret rex.WXB fisubrl pop mov rex.XB jmpq and rex.RB or pop movabs iret mov push rex.RB addr32 jae repnz int3 sahf add mov cmp and pop pushq jno add addr32 pushfq test xchg mov or mov jne xlat retq push flds in sbb push push mov sub sub nop loop gs adc retq sub push xchg adc cmp and mov imul xchg sbb xor test mov test (bad) pushq mov (bad) adc or mov mov (bad) sbb add rex.WRX mov fs sbb enterq (bad) ja pushq mov mov mov mov fnstsw push sbb fbld push xor pop cmp sbb jbe mov pop rex.XB int3 (bad) lret (bad) (bad) movabs or mov iret out (bad) mov fdivrl rcl out xchg (bad) ds (bad) push lret sub (bad) adc shlb (bad) mov pop shl xor scas sarl mov (bad) loope cmp test xlat (bad) fiaddl fimull and rex.WR lahf sub fcmovbe scas push xor adc xorb stos mov adc (bad) pop xor cmp (bad) movb pop fdivrl (bad) xor callq (bad) cltd sbb adc pop rex.R jo (bad) in mov xor movabs or xchg popfq mov rcll and rex.RXB nop retq add rex.WRX rex.WRX rex.WB scas (bad) and (bad) rex.WRXB fldenv jnp movabs rex.WR mov lret and rex.XB push lret lret mov pop mov fnsave xor loope cmp gs pop mov push cmp xchg out mov xchg lahf pop shrl cmp or lock addr32 mov pop or out pop xor loopne ds (bad) out insl scas sub xchg fidivr pop rex.XB (bad) shrl scas pop and add lret mov jns gs rex.RB sub pop and rol cmpl movabs or mov addr32 add pop jns and or rex.X cmp stos jno xor ja (bad) popfq xor jmpq sbb sbb out sub xchg adc scas mov clc xchg or lret movabs fs movslq ss jne push xor test (bad) (bad) imul jne mov rex.XB cmp cmp cld pushq imul and jne mov jle repnz push frstor lea xor jae (bad) lret (bad) js mov adc movabs or cmp pop jo pop fcmovb mov outsb mov (bad) cmp cmp lret fdivl mov cld or in rex.RX (bad) xor mov lret adc jle (bad) cmp rex.RXB lret (bad) sti cmp mov orl rex.RXB std pushfq retq add rex.R loopne fucomi pop movabs pop ja mov pop fidivrl pop rcrl push or push adc in (bad) ja (bad) xchg mov pushq movslq retq jns ss movabs push imul test pop and jae cmp push rex.X cltd rex.B addr32 shll movabs (bad) gs (bad) outsl jae mov pop out (bad) out in (bad) xchg push cmp out fistp addr32 jns cmc rex.RB and jb movabs fwait mov cmp jmp scas fs push xor and (bad) fcoml cmp icebp xlat pop (bad) push movslq jle adc cmp push iret out in cwtl sub testl ss (bad) sub lods enterq cli mov out repz nop (bad) adc cltd mov cmp jmpq mov rex.RB (bad) loopne mov (bad) scas movabs movabs xchg addr32 jne hlt adc add sbbl or sub mov adc rex.WB sarl mov adc and outsb fadd sbb fsub jbe sbb (bad) rex.WRB push frndint iret add cmp push rex.RX lahf gs add pop jmp push retq rol fnstsw repnz (bad) sub jae xor push lahf rex.RX cmp lret (bad) pushq (bad) fdivs mov mov test pop lret insl ds movabs movabs xor adc jp,pt rolb rex.RX imul ficom (bad) pop cmp xchg cs jnp repnz mov xchg clc movabs movsb cmpsl adc fiaddl repz (bad) xor mov (bad) pushq fs lea cmc addr32 roll or jb mov adc cmp xchg rex.XB mov in js movabs (bad) (bad) rex.XB add sub lret xlat (bad) xchg sbb rex.RB out js xlat (bad) sbb ficompl (bad) mulb ja cmp in cmp xlat or add lret adc xchg out cmp rex.WRX adc sub jp adc xchg jmp sti (bad) xchg ja jns mov push (bad) xchg imul (bad) sub mov and adc psrlw (bad) in push out callq push scas (bad) rex.WR test mov rex.WRB or pop rex.WRX push fdivrl jle int pop cmpsb or test pop scas rep nop rex.WRX xor cmpsb sbb jae cmpsb (bad) sar stos icebp scas movsb retq stos out or outsl sar popfq jle or (bad) xchg out sbb in jp ficomp pushq mov push (bad) (bad) ficomp xor mov and sbb addr32 test jno pop and mov (bad) decb lret adc pushq std pop mov fstl pop (bad) mov or (bad) out (bad) sti sub cld push cmp in pop pop out movsl imul rex.XB scas out leaveq out push stc xchg (bad) mov jrcxz cmc gs jo fistp out fmull fucom xor iret (bad) loopne sub push out lret (bad) (bad) or cmp sbb (bad) sub push (bad) out push stc rex.XB cmp cmp pushfq fld lods (bad) mov push cwtl xchg add rex.WRB movabs xchg insb mov fbld push rex.RX stc (bad) rex rex.WRB rex.RX and or fidivrl sarb fwait xlat movabs mov jbe sbb (bad) push (bad) push rex.WB fistl cli out jg or push in sarb pop (bad) lret or shl pop outsb test jmpq test jns callq (bad) rex.WRB fs xchg test rex.RXB out mov pop psraw and mov (bad) sti pushq fscale add fldln2 (bad) rcr xchg mov in (bad) pop pop pop jae rex.WRXB jmp (bad) in xchg pop sbb stos xlat pop sbb xor adc hlt cld ss popfq gs (bad) mov xchg xchg in push (bad) fwait in push (bad) hlt and (bad) out je or cmp scas ror jo mov popfq (bad) (bad) jle mov mov jp jno movslq jo es sbb (bad) fwait jp rex.RX sub sarl sbb (bad) fistpll leaveq rex.RB jae movslq cmp mov rex.WRB cmp and adc in (bad) fsubl mov nop xchg mov jbe retq repnz stos (bad) xlat fnstsw (bad) xchg xchg xchg mov rex.WB rex.WX sbb and push pushfq jmp stos fcmovne cmc xor sbb mov mov sbb xchg pop out rex.B jl mov (bad) repz rorl lods imul ja (bad) test lock scas xor sbb sbb pop mov cmp cltd flds out pushq lret push sbb rex.WRX mov xchg cltd jge mov jmp (bad) popfq cmp rcll cltd rex.WRXB (bad) insb cmc rcrl mov ror repnz test sub rex.WRB std mov add xchg push rex.RXB xor fldcw loopne mov leaveq rex.X stc out pushq adc out testb callq pop retq rex.W xor xchg cli pop loopne popfq sbb and push xchg pop (bad) mov lret scas push rex.WX jns cmpsl adc retq gs popq hlt jg mov adc loopne jle cmp jne pop and mov push or and scas (bad) es push lods retq push mul (bad) (bad) pop fsubl pop push mov xlat (bad) sahf rex.XB rex.WR rex.WX cmpsl mov adc test push xchg (bad) repz xchg stos rex.XB sti cli rex.RX sbb (bad) mov out and (bad) je or adc sbb cmp mov lret xorl sbb lret mulq rex.WRX rex.WR iret lret int3 rex.WXB rex.WB mov pop in (bad) iret xchg jmp xchg sbb cmp push sbb mov addr32 mov (bad) cld pushq rex.RXB rcll mov cmp adc scas roll vxorps sbb rcrb (bad) push popfq jbe rex.WXB mov rex.RB (bad) (bad) pop adc pop push lret sarb loope int3 (bad) negl addr32 mov (bad) ja stos clc lret outsb popfq lods jl ds mov xchg shrl xchg or pushq out outsb jbe scas fstpl rex.WRXB ds rex.WRX fstpl lea mov or (bad) addr32 rex.WRXB jne js mov (bad) (bad) rex.WXB (bad) push push addr32 addr32 rex.W cli sbb addr32 mov cmp rcll loop es sbb out test sbb push xchg addr32 push push jg loopne xchg add out sbb out rex.R mov (bad) (bad) sbb mov sbb push js cmp push or jl in data16 movabs adc pop lret shrb sbb (bad) icebp push cmc xchg (bad) iret stc fwait xchg mov xchg push (bad) mov outsl (bad) enterq xchg (bad) add (bad) xchg retq (bad) std hlt mov and test movabs fstp (bad) ja rex.RX rclb enterq mov sbb xchg leaveq (bad) rex.WXB adc lret in rex.WB ss rclb mov js rex.RB rex.WXB jrcxz lret push adc mov addr32 (bad) or xchg xlat (bad) paddq scas cltd jb jns jle stc xchg out fdivs (bad) mov js outsb (bad) mov jge cmpsl rex.XB movabs gs mov mov mov rex.RB pop insb rex.XB rex.W push iret sbb std lods retq (bad) (bad) retq (bad) (bad) callq fsubs stc sbb sarl jle mov adc (bad) xchg mov rex.WB in adc mov rcrb cmp (bad) mov jp xor stc adc (bad) or mov loope push mov loop ror out repnz add sub (bad) xchg mov xchg push not mov lret xor int cmp test pop sbb scas pop fidivl (bad) pop cmp mov ror pop int clc rex.W sbb in xor push (bad) pop sub leaveq jg mov cld and lock jo xor icebp repz mov mov sub es retq roll adc xchg sub sbb ficompl sbb cmp imul adc and fstps sti add cmp (bad) stos push fcmove out imul mov jne loop adc fnstcw (bad) or and pop sbb fdivrs int jrcxz xchg xor popq cmp adc retq xchg idiv outsb std mov lahf rex.WRXB (bad) scas cmp mov sarl iret (bad) rorb enterq (bad) nop sub sbb xchg mov push cmp loope fucom (bad) push cmp sbb jmpq jne out out imul movabs jb (bad) out or negl adc movabs int rex.WB in mov sub (bad) push cmp pop ds fstps lea pop jge test flds int3 push pop add fidivrl jne and in rex.RXB or movabs ficompl rex.WRX loopne in cmp iret out (bad) (bad) or jge test leaveq out pop mov mov jo icebp repz pop (bad) jge add in (bad) sub pop shrb sbb mov mov cwtl adc fidivrl fsts adc (bad) iret rex.RXB out leaveq pcmpgtd jg jmp cli (bad) sarb (bad) mov jle vmwrite sbbl (bad) mov pop popq xchg jp and (bad) (bad) mov test rex.RX callq cs push mov test mov lods jl iret or fwait pop adc (bad) jb rex.X imul xchg jge sarb (bad) xor rclb xchg and adc insl sub pop xchg adc (bad) loopne pop add xor mov fcmove rcl rex.R vphadduwq jno andb mov rex.WRX lea cmc rex.WRXB (bad) stc sbb (bad) movabs cltd or pop cwtl out jl rex.WX sbb sub rorl or mov lcall fwait jo adc movabs stc fdivs mov callq pop mov rex.RXB or cmp xor (bad) pushfq cmp cltd fs movabs adc mov addr32 cs pop out cmp rex.W (bad) (bad) push rex.RXB xchg mov rex.WX add insb rex.WB rorb loop iret jp pop mov movsb mov (bad) push out and (bad) push jge push rex.WRB (bad) test movabs push add push add test (bad) addr32 mov mov imull shrb hlt hlt stos sub rorb push sbb add (bad) (bad) (bad) pop xlat sti pop mov push xor pop icebp cmpsl stc mov callq jns andb cmp std movabs (bad) retq out xchg or cmp rex.X jrcxz rex.B rex.WB addr32 pop xor adc leaveq addr32 (bad) cli rclb mov rex.WXB pop jns rex.XB cmp lock sbb add rex.B fwait mov in mov repnz movabs (bad) sti es insl pop movabs sbb rex.XB fidiv jnp rex.WRX nop addr32 rex.RX cltd or outsl repz rex.R leaveq cwtl push stos je addr32 xchg rex.WXB push loop (bad) pushq out mov sbb sub outsl xchg or imul push xchg out (bad) addr32 sub mov rex.WXB hlt rex.W movsb int3 or add nop add mov rex.XB (bad) cli rex.RX xlat popfq out pop add mov push adc neg xor pop movsb jb fwait rex.WXB mov mov sbbl mov add data16 stos (bad) lahf sub mov gs retq mov nop (bad) frstpm(287 adc adc movabs xlat cmp xchg xlat xlat mov out rex.WRX or fimull cmp loop jae mov shlb push lock jmpq mov fbstp rcl cmp popfq add rex.XB adc addr32 (bad) out js xlat cmp pushfq fsts scas jge sbb pop xlat push push (bad) out addr32 pushfq cmp and lret (bad) jbe (bad) rex.W rex.WX mov (bad) insb incb fldenv push movabs adc mov int add test cltd (bad) mov sbb outsb jmp fisttp xlat addr32 mov out or (bad) loopne xchg clc pop sbb mov push adc rcll (bad) cltd rex.WB mov movslq or pop xor negb (bad) xor lock mov pop sti (bad) in lahf movabs movslq pop and out (bad) push sub push push addr32 movabs (bad) pop icebp repnz xchg test movsl lret xchg xchg xor jns negb in (bad) push movabs xlat retq sub (bad) mov scas movsl xor ds jns nop outsb (bad) enterq lret loopne add scas mov lret push (bad) mov cs pushfq es cli mov xlat push cmpsb sbb repz cmc mov rcrb movabs pop pop scas jb or sahf rex.WR (bad) pop rex.R lea vpunpckhqdq leaveq gs rex.B addr32 movl fisubl lret fidivl (bad) xor (bad) xlat xlat rex.XB rex.X sarl (bad) jmp mov mov and movsb ss xor jnp js rex sbb sbb pop nop jno lods clc (bad) (bad) cmp xor push (bad) xchg xchg iret pop cltd sbb jp xchg sbb ds (bad) push add out out (bad) cmp push xchg (bad) (bad) pushfq int sbb imul mov push mov sub addr32 rex.X rex.W loope jrcxz sti movsl (bad) jge (bad) fnstcw repz xor sbb sub stos (bad) pop lock xchg cmc retq jo addr32 add cmp rex.RXB jbe add out std xor push pop cmp in mov (bad) clc sahf xchg movabs adc mov movabs mov jnp push and out cmpsb (bad) iret push mov pop mov jno sbb out sarl add jne xor xchg cmp (bad) fincstp mov fxch (bad) mov and sbb add push mov (bad) fstpl jb pop lahf adc cmp movabs decb movabs cld lea xor xchg int3 in icebp and sub lret (bad) sub pushq js in iret adc push pop ja adc sub ja jbe and sbb (bad) xchg push rex.R test rex.WX pop lahf rex.W xchg insb or roll rex.WRXB test xchg sbb jae sbb sub (bad) loop jg jle in rorb jle add mov jbe movabs mov xor cmp gs mov mov jp pop mov retq pop (bad) ficomp or rex.WB mov lock mov sub adc lret (bad) fsts pop and jne rex.RXB (bad) fstpt mov (bad) es mul retq movsl scas repnz push data16 cs jrcxz mov js xor fisttp rclb lret rex.RX int callq movabs and rex.RX rex.WX repnz stc outsl sarl (bad) pop and mov fldl jo rex.WRXB int3 repz in and (bad) shl out or rex.WXB (bad) addr32 (bad) xor lods mov mov xchg std cmp mov mov movabs lods or negb cld sahf notb push sahf xchg sarl sahf retw push clc out std movsb push add sub and (bad) test test mov sub sub ja,pt xchg out hlt (bad) imul sahf rex.WRX sub jl rclb test cld test enterq jp stc add movabs jbe rex.WB addr32 fdivrs cmp sahf rex mov movsb rex.XB lret (bad) loop (bad) mov pop xchg stc lock ds cmp push and mov movabs loop push rex.WXB ds (bad) pop push rex.WRX rcrl sub add xchg xchg rex.R (bad) adc cmpsl movabs push idiv pushq push movsb mov rcrb repz pop ja sbb jg movslq in (bad) sahf mov xor (bad) xchg lods add mov (bad) retq jb cs xchg (bad) int pop add push ds (bad) jno sub mov rex.WXB push lret jns nop pop (bad) popfq pushq mov fisttp pop (bad) jle loop scas (bad) rex.R imul jrcxz ja rex.R fwait ds add (bad) pushq xor mov rex rex.X rex.RB insb push stos mov stos test adc out mov jns out xor xchg push sub xor jp pop jp pop mov mov mov (bad) lahf pop mov callq (bad) fnstsw cmp ja (bad) (bad) je loop (bad) pop add cmp xchg mov mov sub mov (bad) cmp xchg jrcxz outsl (bad) fcmove and rcl and pop mov fcoms (bad) or sub xchg and je lahf lret sar (bad) (bad) scas (bad) sbb push stc out cltd (bad) popfq test cwtl and pushfq rex.RXB add fbstp sub cmp pop pushfq push pop pushq adc xchg test sbb rex.WX rex.RXB lahf rex.WB out lock add leaveq sbbb add rex.WXB rep cmp rex.WRB xchg sahf fildl or xchg sbb cmp mov vorpd jo fs mov lret pop fwait outsl rex.RB out cmp and scas mov (bad) addr32 rex.R xchg adc xor (bad) jno cmpsb (bad) mov rex.WX cmp retq cmc jl (bad) sbb mov mov in sbb movsb xor rex.WRB (bad) (bad) adc xor jno (bad) push jnp movslq pop pop shll push rclb add stos rex.R xlat pop outsb iret stos cmp retq loop loop push mov and fcomp rex.XB pop rex.RXB adc (bad) cmpb fisubrl mov (bad) cmpsb rex.RXB sbb sub jge jge jmp icebp mov rex.XB out xor rex.WB addr32 rex.WXB rex.WXB jns imul jno addr32 rex.RB fcompl xchg psrld ficoml rex.RXB sub rclb mov cmp mov rol (bad) rex.WB pushq pop test xlat jo iret test sub or ror leaveq cmp insb test insb stos mov sbb sbb jrcxz sbb pop out movsb mov retq addr32 adc adc mulb pop mov out cmp outsl cmp movabs xchg fmull push add fnstcw movabs in cmp pop cmp xchg (bad) insb cwtl (bad) cmp sbb push jg push addr32 (bad) mov sbb pop rex.WB and (bad) addr32 xchg xor xchg mov (bad) stc mov sub stc out stos insb add repnz (bad) xor mov sbb jmp add xchg in gs (bad) xchg pop rex.XB xchg movabs cmp je,pt movabs xor clc rcrl jb push rex.WRXB lods fstl adc adc mov std mov int rex.WXB std xor mov movabs fldenv outsl (bad) pop xchg xchg int (bad) mov movsl lret (bad) pop lret mov or jl (bad) movabs cmpsl xchg (bad) scas mov test rex.WRB mov add fcomps cmp (bad) (bad) cmp mov pop sbb xor jge movsl mov js (bad) xor mov cmp pushfq mov scas rex.XB adc cmp cmp movabs or (bad) jl fwait xchg (bad) fimull cltd jo push (bad) add push (bad) mov jne pushq popfq icebp out cmp sub rex.RXB pop sbb cmp gs jb xchg xchg shr rex.WB jg lods sar (bad) cltd mov and movsb xor (bad) (bad) fsubl test rex.WXB scas (bad) mov cmp and rclb adc iret push movabs rex.WXB jo cwtl (bad) xchg fmull (bad) mov fchs or jmp xlat pushfq rex.WX fild and pop mov xlat xchg lahf retq fstps (bad) (bad) hlt (bad) jp test xchg xchg xchg rex.RB mov rex and push xor mov (bad) cmp jg (bad) nop mov (bad) ds (bad) sti pushq jo rex.WRX ds jl fcompl (bad) movsl push mov cld (bad) out jp jae mov fldl lock push (bad) fildll (bad) (bad) addr32 (bad) and (bad) jp test mov pop int3 rex.X adc test xor rex.WR (bad) movabs fiaddl push xchg fnstenv rex.WRB xchg push sub rex decl rex.RX lahf rclb mov jp jp mov rex.WB leaveq icebp ja repnz sub rex.WR ss jrcxz push lahf in push jge pop sbb sbb retq lods js enterq mov cltd in vorps (bad) data16 and pop sbb adc stc sub rex.WR (bad) sub (bad) pop jns cmp push addr32 fmulp in xchg rex.WRB pop in fwait ds (bad) std cmp lea adcl pop out lods (bad) mov (bad) push and push hlt rorb xorl in retq cmp in add and or rex.RB xor jp shll rex.WRX rex.W sbb pop outsl or stc xchg imul stc xor jns mov xor (bad) out repz xor je (bad) (bad) out xor and test cld int3 mov loopne rex.RB jmpq mov fisubrl sahf pop mov rcrl xchg (bad) jmpq out (bad) rex.WR fcmove or lret push push mov retq xchg jmpq pop mov loop lret xchg or sbb stos push out (bad) xor cmpsb out out pop enterq ss xor out data16 cmp rex.WX movslq mov movslq outsb jne and and adc xchg cltd pop and out or add sbb scas and jmp mov movabs jp rex.WRXB rex.WXB (bad) out pop sbb ja (bad) shrl adc lods rex.X jmp (bad) adc mov adc (bad) rcll rex.RX pop (bad) cmp xor gs (bad) jo sti ror ja add sub jae mov lret and cli int mov jne push stos mov out retq mov adc or mov xchg sub mov add xchg jge fmulp (bad) movabs or (bad) push pop mov lret mov (bad) lret cltd and lock push (bad) (bad) add (bad) sbb movabs rex.WRXB push ds mov lods mov movsb mov imul (bad) repz (bad) jno push xlat xor cmp pop jge insl leaveq ds or mov std mov mov rex.B rex.WRB cmp push int outsl adc imul rex.X rex.B xchg jg insb xor (bad) jns jo rex.X repz xor or insl mov cmp (bad) rex.WRB xor imul repnz es and jle js mov rex.WXB mov cs cmp (bad) (bad) repnz sar ljmp pushq lret pop imul pop xlat mov addr32 fldcw mov mov cmp fs jmpq shl push (bad) mov rcll or jl or shl cmp out (bad) add xchg fidivr (bad) loop pop addb mov test retq movabs push cmp (bad) iret xchg sub (bad) stos xlat (bad) jnp adc pop (bad) test jb out jns movabs push (bad) sub sbb movabs sub jrcxz jmpq mov ss cmp jbe mov jnp cmp add test ja jg scas pop vpminub mov lahf out loopne mov pop rex.WRXB int retq ss mov mov jb push (bad) ficom sbb push pop fdivrl cmp loop mov insb sub mov mov movb jb push mov (bad) pop pop fisubl rex.RB jmpq pop and xchg orl push jrcxz rex.RXB rex.WX outsb add xor xbeginq movsl sti pop (bad) movabs xor jmp mov sbb mov movsl std mov (bad) js lea jmp add cmp (bad) clc adc lock rex.R push pop int3 shrl movslq lret (bad) mov fcomps rex jg or (bad) (bad) rex.RB fxch sahf test mov xor rex.WR shl jle jmpq movabs (bad) (bad) ja,pt mov mov rex.XB insb (bad) int cltd mov (bad) ja clc mov fisttpl leaveq (bad) (bad) mov scas xchg xor cmp adc (bad) fstpl rex.WXB xchg or lret push (bad) retq addb lret push ror out notl (bad) cmp pushq xor jae (bad) mov mov adc (bad) stos (bad) enterq rex.X in xor lods or xor xor movabs xor icebp test jg (bad) (bad) in fs sbb push adc mov (bad) fs xor mov clc ss xor leaveq imul mul (bad) out movabs (bad) ss je push fwait movabs jg insl stc movsb mov pop (bad) (bad) and (bad) and sub addr32 rex.RXB imul ss push (bad) jo js lea xstore-rng cmpsl add gs gs lret (bad) push out negb cmpsl (bad) jp insb test pop clc xchg stos jg and and mov xlat lahf mov cmp scas sbb faddl scas fsubr popfq (bad) pop iret (bad) xlat jl sub lock xor jg outsb (bad) int3 xchg mov ja lahf divl nop clc cmp lods xor test ss jg (bad) mov addr32 and fldt stc (bad) push js ss (bad) sub and shr add insb pop and data16 iret xchg sub mul jb (bad) jp jne rex.WB or outsl mov rcll (bad) jno (bad) rex.WXB stos adc jnp rex.WB fs imul xchg fxch (bad) add xchg xchg test movabs es ja rex.WB rex.WXB fwait xchg clc mov (bad) rex.RX pop imul popfq mov xchg (bad) ror rex.WXB and rex.RXB pop and jmpq imul push sti cmpsl (bad) adc out sti add idivb jge out jno scas outsb rex mov sub mov mov xchg sbb mov mov push stos xchg mov sub fcoms fidiv cli rcr movsl pushfq xchg jae cmp loopne mov (bad) cmp nop jae cld push add in imul xor (bad) int cltd rex.WX adc ss mov or cmpsl data16 hlt shll pop rex.WRX out cmp test (bad) (bad) pop pop xchg fnstcw xchg out sub (bad) add movabs mov test mov fnstcw mov movsl mov out jg rex.R sub mov out mov stos (bad) mov add (bad) rex.WB ficompl jg (bad) out movabs (bad) xlat jg lahf push rex.WRB int3 out int3 and icebp rex.WR rex.WR repz push cmc rex.X push fisubl mov push xchg push fidivl js out rex.RXB mov enterq fldt rcrl xlat (bad) cmp xchg callq pushq mov jg sbb stos jnp pop movsb movabs sarl pinsrw (bad) push mov xchg retq push cltd rex.R adc (bad) mov stc (bad) out ja cmpsl xchg add sub test adc mov rex.X cmp mov cmp adc sub xlat rcll test rex.RXB xchg rex.XB shrl rex.B mov jge cwtl rex.WRX rex.WRX rex.RB (bad) rcll sbb out rex.WRX faddl rex.RXB (bad) or out test xchg jl mull (bad) rex.WX (bad) sbbl enterq mov add scas cmc xchg rex.RX mov push out leaveq cmp cmpsl xor in cmp cmp (bad) callq jns data16 sub nop mov mov stc ja lea rex.WB xor or adcl leaveq mov cltd adc xchg cmc movabs adc ss xchg popfq adc fnstcw loopne sbb popfq (bad) jmp movsl test jrcxz (bad) addr32 adc pop cltd mov xchg rcll rcll rcll add scas xchg pop or gs outsl pop and mov xchg (bad) fbstp sahf sbb je or adc (bad) cmp imul outsb cmc (bad) jae js pop sub mov pop cmp (bad) and popfq cmpl push xchg adc movabs mov adc mov xchg jne xor scas xchg pop rex.WB mov sbb jp mov rclb xchg ror rcrb push (bad) movl out xchg jmp pop imul push (bad) stc jae rex.RXB xchg movabs mov jmp loopne cmp (bad) fcmovbe (bad) movabs jg cmp jo icebp test lods mov sbb scas sahf ds (bad) je mov and pop pop xchg push flds jl shll push es sbb outsl imul (bad) xor (bad) or out icebp or (bad) pop scas loop or rex.RXB rex.WX (bad) pop lret xchg loop fucom and movabs mov mov lahf mov jbe cmp std or adc xchg fnop xchg rex.WRXB (bad) mov pop hlt xchg sbb mov imul sarb xchg lock rex.RX mov cltd xchg int3 sub (bad) popfq sbb (bad) fmulp out adc (bad) and and mov mov rex.RX pop sbb (bad) cmc sbb rex.W data16 (bad) (bad) jae and repnz (bad) pop mov and test pop movslq movabs repnz retq out mov in test jae lret (bad) mov pop sbb cli lret mov scas xchg sahf jb mov (bad) jrcxz xchg and xchg out mov adc xor mov rex.WR xchg xor adc and (bad) out (bad) cmp rex.X jns outsl xor stos movabs outsl cmp push sbb mov add sbb xchg (bad) (bad) rex.WR (bad) in je (bad) and pop xchg rcrl addr32 rex.WB add nop (bad) int3 mov (bad) sti pushq jbe stc mov xchg jp pushfq xchg roll cwtl push addr32 push rcl lret and (bad) push mov negb (bad) cmp lret rcll (bad) mov (bad) mov insb cmpsb lahf mov test lgs xor mov (bad) sub fcomps jno xchg movb (bad) lret rolb rex.W stos sub jmp (bad) rex.RX rolb xchg pop cmp sbbl sub int iretq (bad) movabs push popfq xchg (bad) rclb sbb (bad) rex.WRXB and (bad) lret mov sbbl (bad) pop (bad) pushq (bad) fidiv imul ja or cltd pushq (bad) (bad) mov std xor xor fiaddl addr32 (bad) (bad) mov insb mov rex.RXB xchg cmp jg mov stc (bad) (bad) xchg mov sub movabs xchg loope sbb iret jl jb (bad) mov out out (bad) (bad) push (bad) pushq (bad) pop cli repz rcll bswap out cmp rcll lods rex.XB (bad) push sub rex.RXB sahf pushfq rex.RXB lret push cmp js fisubl pop movabs (bad) (bad) push adc sbb cltd adc decl mov rex.RXB (bad) xchg rex.XB out movabs and jbe stos (bad) out (bad) rex.W sar enterq lahf out jno rex.W rex.WRB (bad) sub sbb sbb test fsubrs xchg fxch stc retq jp and pop fidivr callq pop lock or lret pop adc (bad) jmp mov adcl enterq rex.WRB rex.RX data16 xor rol (bad) (bad) loop xor sbb push repnz (bad) cmp pop cltd outsb lahf pop loopne insb mov cmpsb (bad) rex.WRXB (bad) movsl jb movabs adc and add cwtl rex.WR repz (bad) fildl mov mov movabs fsubs fidivl push pop cmp (bad) pop sub pop adc mov sbb or retq jrcxz sahf sbb sub (bad) fsub lret xor (bad) retq cli outsl cmc rex.XB loopne mov rex.WR rex.WB movabs xor push icebp sbb movsl in xchg cmpsl rex.RXB (bad) mov (bad) pop or movabs std jb leaveq xor (bad) or popfq jle out (bad) add pop sbb xlat mov pop imul stc sub adcl rex.RXB sbb in and es mov (bad) rex.WB ja and frstor (bad) fmuls jb imul or movsb add enterq shl lods jrcxz rex movslq fwait out or movslq shll mov sbb jo lock and es push test rex.WXB mov jb rex.WXB movabs push fwait loope sub in rex.R addr32 ss fcmovnb pop shlb (bad) fistp add xlat adc and or fsubr outsb fxch xor (bad) jp mov push jbe adc movabs cmp cld mov js icebp adc pop mov cs rex.RB xchg cmp rcll jne (bad) nop imul rex.WB rcrl roll rex.RXB rex.W and test icebp addr32 mov cmp (bad) sbb loop (bad) (bad) lahf movabs insl rex.W stos scas rex.XB rex.WXB ds lods (bad) mov sahf mov (bad) lret push cmp pop (bad) movsl sarb jge (bad) pop rex.RX lahf repz loopne fcomps andb mov sbb rex.RXB mov sbb xchg stos shrb adcl ror pushq rex.W pushfq or jp (bad) (bad) push jrcxz (bad) mov decl in xor lahf icebp out movabs sub xchg push cmp rex.X ficompl pop (bad) lret jmpq xchg mov outsl lods jb in sub (bad) rex.WB (bad) (bad) jnp cmpsl retq mov xor repz test (bad) data16 add xor test rex.RXB sti lret roll movsl or loop rex.B push fcoml xchg sbb rcrl rolb (bad) push mov shlb pushq sbb rex.RXB testb iret fucom cmp (bad) and adc (bad) rex.WRB rex.WRB fidiv imul rex.WB cmp out (bad) adc push pushfq (bad) rex pop retq add adc shrl rex.WXB (bad) movabs nop rex.RB sahf jne fnstenv fst xor jl rcrb pop (bad) cwtl push push pop in mov jb and clc fidivl cmpl and add movabs cmp add (bad) push mov mov (bad) lret (bad) sbb mov rex.RXB retq (bad) int3 ds movabs and mov xchg pop (bad) cmp mov loopne (bad) mov in mov in pop push shll or iret out (bad) adc pop addr32 out fsts test rcrl test pop xor (bad) pop push shlb xlat or mov adc cwtl rex.WRXB rex.RXB and jbe xchg push loopne adc stos not (bad) movsl addl (bad) and movabs (bad) mov loopne cmp (bad) (bad) xchg or loope jrcxz adc sbb xchg mov (bad) push addr32 mov rex.WB pop movabs sub xor cmpb fcom adc mov push (bad) (bad) fstps (bad) in fdivrs cmp jb mov (bad) ror fcom out rex.WRXB mov sar rex.WRXB rex.XB xlat push (bad) mov gs xor jle sub pop xor xchg repnz retq sbb mov mov (bad) jbe or iret sub sbb push not sbb addl negl (bad) (bad) rex.WRX jnp jle scas rex.WXB pop clc (bad) gs je movabs pop jae sub rex.WRX push mov xor xlat mov fmull clc mov (bad) movabs (bad) cmp cmp xchg scas scas mov loopne (bad) lret stc sub or mov fisubrl loopne cmpsl (bad) mov sub (bad) push xlat push jns,pt adcl ds fistp mov cmp es mov cmpsl jp pop (bad) movsb adc in xchg icebp (bad) push loope xchg add and cmp mov add add pop add add mov repnz xchg out (bad) rex.WRB rex.WXB pop pop cmp fcompl pop sbb sub (bad) sbb jmpq movabs or rex.X cld scas xchg jle mov decb rex.RB sub pushq enterq cmc adcl mov rex.X sub ja cmp (bad) scas clc cwtl data16 mov (bad) fidivr cmpsl insb xchg xchg cmp mov (bad) (bad) fwait mov xlat jae sbb cmpsb or rex.WRB int3 sbb outsl rex.XB (bad) rex.WRX cwtl mov (bad) sbb mov xchg mov mov push test (bad) shrl mov xor pop xchg pop xor sub je rex.RX push or cltd jp scas outsb (bad) out push rex.R clc fsts add sbb sub mov (bad) scas imul xor pushq test xchg (bad) es leaveq rex.WB lahf adc jl mov out xchg rcrb lret and mov cmpsl pop xor xor cmp jl lret pop movabs outsl mov push (bad) jg adc push rcrb rorb (bad) movabs mov jae pop jg rex.WRX sub test jne rex.WX sub pushq push rex.WXB sti rex.WRB (bad) xor out adc pop rex.WXB sti or fsubr jo (bad) out test sti pop fwait cmp callq addl lret and sbb stos mov movabs pop and jl int3 loopne xchg mov push mov push mov stos loopne push shlb (bad) xchg icebp mull test (bad) (bad) mov jle stos movabs or xor (bad) rcll jns cli (bad) addr32 xor nop push (bad) (bad) shll lahf leaveq fimull scas scas in sbb (bad) xor or xchg push rex.WRX (bad) xchg cmpb mov mov sbb mov rex.RX sub jrcxz std test stos sarb push pmulhw cmpsb movslq push addr32 (bad) (bad) (bad) cmpsb push (bad) js (bad) cli sbb stc add pop pxor addr32 icebp nop adcl pop int cld rex.XB xor or (bad) (bad) (bad) push retq lods or insl cwtl cmpsl rorb in and rex.RXB ss leaveq xchg (bad) imul mov stos add lret jmp leaveq (bad) scas ja movabs jg rcrl (bad) cmc lret pop cmp xor jp scas mov pop rex.RXB mov (bad) repz push adc lahf bswap or insl jne rex.WXB js mov scas pop mov mov sarl push add imul rex.RB cmp or or mov sarl and adcl ficoml mov loop (bad) test ja rex.WRX cs (bad) push testb stc fsubrl out cs xchg pop xor imul mov sbb push mov adc rcr rex.RXB mov enterq out ja int3 lods pop cli cmp jl jl repnz out jp in push (bad) xlat push cltd cmp jbe cpuid mov (bad) mov rcll mov leaveq idivl xchg rex.WX or fcmovnb mov sbb imul test push mov test and fwait sbb (bad) js rex.RX test push adc data16 cmp or adc add mov mov rcr outsl push rcll adc fs (bad) pop cli movslq rex.XB xchg fisubl mov or rex.X mov pop (bad) adc rex.RXB icebp mov rex.B lock retq sub scas lock (bad) cmp out xlat (bad) insl movb jrcxz mov enterq pushq pop rex.WX movabs xlat rex.WXB xor pop and sub (bad) in mov repz jb rex.R jb pop add jp fldcw stos xchg movabs jp push pop adc cltd stc (bad) sti jmpq xchg sbb jne pop (bad) jrcxz (bad) mov adc pop xchg (bad) pop repnz (bad) xchg fistpl js je (bad) xchg push (bad) (bad) repz clc rex.WXB movabs xlat xchg mov sbb jle xchg int pop movslq mov jg xlat xor fwait ljmp (bad) jmp jrcxz (bad) xlat callq pop (bad) test (bad) (bad) cmpsl push lods gs push and stc sar sbb (bad) iret out popfq rex.WRXB out lret mov cltd lret rcrl (bad) js icebp jp je push test lret add (bad) jp,pt mov out mov pushq fsincos (bad) mov imul movsb retq (bad) in and push sbb rex.XB rex.RX shrl mov (bad) out fadd sbb pushfq push cmpl pushq adc movslq jmp pop rex.RX xchg adc in stos adc sbb lahf and ds add jns (bad) test pop out pop rex.W scas ss fs callq jmp mov jnp movabs push lock icebp sub retq fsubrs movabs out (bad) pop adc in movabs imulb addb insb adc shll jg out mov xchg (bad) jno rorl sbb sti pop xor enterq mov sub rex.RX rex.W xchg scas movb enterq (bad) pushfq mov outsb cmp fcompl (bad) rex.RB iret imul jle sarb mov outsl lods xchg leaveq sub test adc sbb adc enterq out mov (bad) rex.RB mov pop (bad) or idiv xorl sahf fnstenv enterq loopne jno rex.WB mul sbb fnstsw (bad) fmuls out ja out cmp cmpsl loop in (bad) rex.WRB xchg lods cmp rex.RX rex.WRXB rex.WRX xchg (bad) sub cmp and cmp xchg jno loopne xor add mov sbb jl fsubs xchg pop (bad) (bad) loope in lret or ja pop xor pushq mov (bad) (bad) mov adc push xor subb adc ficoml mov cltd gs sbb (bad) lods movabs mov (bad) (bad) popfq mov movabs rex.WX jb push rex.WXB jnp scas callq or orps and xlat (bad) je andb cmp and rex.RXB (bad) or movl jl xchg test out cmp mov xchg in sub cli xchg lret (bad) movslq sub jae iret idivl (bad) ss pop je (bad) mov xor jnp sbb pop imul jb loope jg (bad) fimull xchg (bad) jns cli shll mov test iret loopne xor (bad) clc sti lret pop adc rex.WRXB leaveq jbe rex.RB stos xor movslq fistp (bad) or mov iret xchg push cltd lock mov fcmovb rex.RB lret (bad) shl cmp rcrb icebp iret cld pop imul insb fdiv repnz pop frstor sbb scas and cmp iret xor adc movabs mov sbb rex.XB rex.R rex.R push movabs sti ficomp lret pushq out xor insb push sbb iret (bad) mov cmp (bad) mov jle iret push sbb mov in xlat sub push nop loopne rorb push rex.R fdivr xchg imul pop movslq rcr test cmc push jge lea xlat (bad) rex.WRB shll pop jae mov xchg fnstsw adc cmp sub sti xlat test mov rex.WRXB cmp test rex.WRX jo rex.W pop pop lock rex.RX gs (bad) sti jnp sbb ss rex.R fbstp (bad) scas xchg mov adcl repz insb cmpsl subl mov xor (bad) mov mov mov movabs rex.WRX (bad) imul cmc mov cli in lods xlat jg rex.WB mov (bad) pop xchg shll stos sar (bad) repz outsl or jg orb xchg or (bad) mov push xlat xchg out jl rex.RB (bad) sub xor lret rex.WRB pop jbe outsl repnz retq mov mov mov rex.XB xchg mov push cmp ja jns cltd hlt std rex.WXB sarl movslq (bad) adc or loopne xchg movabs (bad) rex.WX outsb cmpsl loope shrl pop cltd idivl (bad) (bad) cltd mov rex.XB mov xor push (bad) rex.XB test adc lret xchg fsts mov rex.WRXB ss jae sbb push cmpsb rex.RB (bad) outsl rorl pop pushq jne lret fadds (bad) xchg fimull adcl mov mov test sub cmp xor js (bad) mov rex.WRXB cld sbb pushq mov mov add sub rex.R xchg subb and pop and mov sar fcmovu sti (bad) addr32 test jmp scas (bad) out rex.RX iret cmpsl xchg imul (bad) sbb adc test sbb outsl lret and adc (bad) fwait sbb clc rex.RX rex.WX lret mov push pop pop movabs and out rex.XB int3 xchg out lret rex.WRB rex.WRX gs xor rcll (bad) fwait stc and (bad) cmp rex.WR (bad) xchg fdivl cmp mov repz sbb rcl push mulb fwait in addr32 add ds xor xchg mov pop fstps mov fistp movabs sbb cltd pop (bad) xchg pop push rex.WB xor out add (bad) sub cmp (bad) sub lock outsl cmpl push leaveq xchg pop (bad) xor (bad) rex.RX mov xchg lret leaveq loopne lret jb fnstsw xchg cmp (bad) repz xchg mov and loope (bad) (bad) xchg push adc and pushfq iret mov xchg push add (bad) (bad) ds sub add xchg xor adc in mov out (bad) (bad) xchg jle or cmp sar adc data16 xchg movsl (bad) rex.RX fwait ds adc outsl and xchg sahf out (bad) (bad) adc pop retq (bad) mov xor shll push cmp shl (bad) xchg (bad) in sbb stos ficoml adc mov sbb (bad) (bad) rex.R sbb pushfq cmp lret (bad) sub cmp shrb jb mov (bad) movsl lret int3 out mov mov push enterq cmp movabs ss (bad) clc jp (bad) lods pop fstps mov (bad) mov mov add mov leaveq outsl xchg stos push stc pop rex.WXB enterq (bad) out adc mov fwait xor adc push mov sub rex.RB fwait push in push lea fisubr sub cmp fwait sub and (bad) in enterq (bad) push rex repnz popfq (bad) loop mov int3 test adc movsb int3 xor xchg cs addl loope fimull cwtl rex.WRXB addr32 or add and out adcl sarl adc callq rex.WXB ds sbb (bad) jb (bad) nop loopne adc (bad) mov rex.WRX push nop xor adc fldcw adc repz movabs push rex.WRXB rex.RX sub movabs (bad) lret rex.RXB movabs mov mov fist adc movabs icebp xor imul cltd jg rex.WRXB rex.WX ds rex.WRB fildll sub lods outsl xchg movabs mull xchg movslq movabs mov mov rex.W cmp rex.WB jns scas jbe mov js rex.WRXB adc sbb es xor (bad) out out ficomp pop jbe test hlt mov or sbb jbe ds mov loop pop xlat (bad) cmc adc rex.WXB fbld mov mov adc out hlt mov (bad) movb or iret (bad) (bad) test mov xchg xor pop shll lods cmp (bad) out movabs shll es or loopne lret xor sahf cmp rex.RX sub ss iret imul push push mov je mov fisttp sbb mov lock iret sahf push sbb mov adc clc addr32 sbb or cltd xchg mov add pop lods fst xor lret in or clc pop cmp fadd xor mov jns pop insb mov jno test lods rex.WRB cmp push fldt mov xor adc adcl or cltd mov mov (bad) jle test adc pop lods jmpq or (bad) jge cmc movabs (bad) test or lods test movabs mov (bad) (bad) out divl and sub lret in adc add mov fdivs rex.WB mov out (bad) int3 in rex.WRXB out fcmovne xchg xchg jo sbb adc (bad) rex.W (bad) iret pop movsl movabs pop or push enterq pushq out loopne add mov (bad) mov sbb and imul jmp (bad) (bad) addr32 rex.WRB out cmp imul mov (bad) je addr32 (bad) pushq rex.RX rex.WXB cmp push xchg and adc push jrcxz cmp and test pop pop push mov rex.W jns out (bad) mov add mov jrcxz notb stos xchg mov jne sbb imul fwait add cltd lods jbe sbb jp cmp es rex.W (bad) ds ja movslq out push fdiv fwait mov xchg rolb mov push out rex.WR cmp rex cld jp xchg cmp xchg or fldcw (bad) movabs rcr leaveq out adc cmpsl jg mov (bad) mov push xchg xor fcomp sahf mov lods xchg fimul out xlat es or testl lock mov rex.RX rex.WRB (bad) xchg (bad) cmp shrl in mov push (bad) jl push add cmp add pushq pop jrcxz lods nop (bad) mov negl cmp repz in stc mov movslq data16 xchg rex.WRX (bad) push xchg cmp loop mov iret xchg pop (bad) (bad) or adc retq mov cmpsb rcrl adc imul add mov std mov jp rex.WX sub xchg sbb sti scas repz push or mov retq (bad) adc cmp (bad) out test (bad) mov push fimul lahf mov xchg cmp rex repnz (bad) pop sbb movsl fldl (bad) mov (bad) or push push stos (bad) xchg out mov rcl js int3 sbb jmp xchg insb (bad) rolb outsl mov mov or jns out pop mov jae (bad) rex.R rex.XB (bad) mov jge (bad) mov pop xchg and cmp mov movabs sti rolb (bad) xchg gs jne and fnstcw movabs retq (bad) cmp xor (bad) leaveq mov mov (bad) adc rcll pushq (bad) mov pop ficompl (bad) (bad) push cli xchg push push jle pushfq push sbb cwtl adc pop and rex.W popfq callq retq insb (bad) stos orl clc sbb xlat add jno jne xchg xchg rex.X (bad) lret adc (bad) xchg mov (bad) adc adc mov adc cwtl push mov xchg lret (bad) rex.WXB jns lret xorl (bad) xchg (bad) adc loopne,pt mov (bad) jae jbe out (bad) rex.RXB add xchg mov stc retq xchg mov jg push and rex.WXB (bad) or fnsave rex.W sub (bad) push lret push loop jne,pn cld fcmovb mov cmovbe out loopne sti pop insl cmp out movabs test pushq movslq rex.X xor jge mov (bad) mov or mov and js int mov mov outsl rex.RXB rex.X jne xor rol xchg sub adc xor mov or rex.R rex.X mov cmp xchg mov jo nop cs (bad) mov jno xor cmp fistpll adcb ja shrb xlat test int rex.R xor adc rolb and mull adc pop test fwait test movabs xor xchg lret jp adc jp mov mov out cmpsb ja outsl cmp sub (bad) (bad) sahf push mov hlt (bad) sbb or and adc cmpsl mov fcompl scas mov sub icebp mov cmp ss adc push rex.W rex.WRX imul and add (bad) jb mov mov jns mov push lret cs popfq gs (bad) jo jrcxz jbe add sbb mov (bad) cli rex.XB mov xor cmp push xchg cld (bad) retq rcll push (bad) add (bad) xchg out push hlt and sub pop (bad) rex.W lahf pop int fisttpll push xor sbb rex.WXB jle repnz rex.WRB sbb mov xchg xchg movabs movabs rex.RX xor sub push callq retq mov out movabs rex.WX mov scas out insb outsb rex.WR xor xchg ds adc adc fsubs rex.RXB addr32 test adc or push cltd clc or scas and rex.R fadds pop rex.RX mov roll jmp mov out pushq mov mov jno and (bad) popfq es jno popfq sub lock (bad) rex.WRB mov or sbb or rcll out rex.WRX lahf xchg xchg (bad) xor ror rex.RX mov rex.RX xor xchg (bad) rex.RB rex.WR (bad) sbb iret (bad) pushq imul data16 xor rex.WB mov lahf push push xchg ficoml outsl sbb adc roll and mov or loopne add mov (bad) fist (bad) (bad) sbb loop (bad) cmc fcompl cmp jne cmp sbb (bad) jl mov mov pop lret xor lock shr ja mov pushq pop clc and in repz retq out add (bad) mov pop sbb js rex.RXB add sbb cmp mov xchg (bad) outsl jns clc mov xchg or mov add jge push xchg (bad) sub fldenv (bad) pushfq movslq (bad) (bad) jnp loope pop ja sti mov fnstcw jle sbb imul xlat jp fimul xchg xchg sub and mov rcll (bad) in fsubrs cvtps2pi pop rex.WX jno xchg sarb (bad) emms rex.WR pop or rex.WX and rex.WRX rex.WX (bad) jge mov rex.RX loope scas rex.WXB rex.B cmp clc ficoml cmp fisttp mov rex.WRB xor rex.WRXB int3 fist cmp out mov cmpsb bswap pop rex.WXB push clc mov ds jb scas pushfw setne rex.WB and pop cmp roll psubb jb jmp (bad) pop minps mov cld mov or out iret movabs add adc rex.WX in jns mov (bad) rclb rex.B sub (bad) pop movabs test xchg (bad) (bad) movslq (bad) fdivrl rcl out icebp jrcxz (bad) movsb adc jmpq rex.RX add xor jp mov (bad) loope (bad) lret jae pushfq (bad) test (bad) int xchg and jbe (bad) je testb insb xor xor (bad) out add xor (bad) sbb xchg add (bad) sbb out movabs pop (bad) (bad) sbb (bad) mov push (bad) fnsave xor rex.WXB test mov imull addr32 mov sbb out (bad) push sbb pop (bad) retq adc movabs mov cmp pop cmpsb push and pop pop movabs (bad) rex.WRX in pop sti mov xor rex.XB pop movabs pushfq sub mov imul scas (bad) cmp pop orl rex.WX retq movabs rex.WXB out rex.RX sbb pop imul mov (bad) jne (bad) xor (bad) xchg lods sbb xchg cmpl stos mov cmpsl mov xor rex.WRX (bad) pop sub or sahf xor xor sarl sbb xchg imul sbb lea loopne lods mov and imul imul outsl mov cltd mov and sub sub xor lahf jnp push add stos adc sbb (bad) notb push (bad) (bad) sub (bad) cmp rex.WRXB cmp (bad) fldcw cmc movabs (bad) xor mov je rex.WXB movslq push int3 lret retq (bad) jrcxz scas (bad) xor (bad) rex.RXB scas stc repnz sarb rex.B xchg rolb movb mov int3 (bad) sub iret rex.RX mov shrb scas (bad) (bad) pop xchg mov lret int3 xlat callq scas cmpsl (bad) mov int3 rex.WXB rex.R mov pop sub lahf (bad) rex.WX jp out jle rex.WXB rex.WX mov rex.RB rex.WXB ficom (bad) mov mov (bad) adc jbe cwtl mov movsl mov ss fist jg sub vunpcklps mov rex.WR rex.WX rolq jae mov adc (bad) rex.WRX (bad) sbb imul mov or rex.WRXB movslq fwait mov mov cmp mov xlat ja jns vunpcklps vunpcklps out xchg cmp lret rex.WR rex.WX mov cmovnp retq popfq lahf xchg mov xor ss rex.XB sbb or mov (bad) mov mov (bad) rex.WRXB push sbb sbb lret (bad) (bad) (bad) sti (bad) repz movabs jae mov cmp rex.RX fldl rex.XB imul fidiv rex.X xchg insl or roll out cmpsl adc cld or (bad) xchg test mov (bad) iret rex.RX jnp scas rex.XB ja (bad) stos rex.RB jae iret jns vunpcklps loopne jl out (bad) jo (bad) icebp scas push mov pop (bad) int3 mov rex.WX addr32 push xor je mov out pushq orb rex.WXB (bad) sarb xlat ja jns vunpcklps in xor push iret rex.WXB je ss rex.WX imul retq (bad) retq mov push jns or mov mov rex.RX imul (bad) add (bad) (bad) mov shr push mov rex.RX rex.WXB xchg ds stos rex.WR rex.WX mov cltd rex.WXB xchg mov mov fwait (bad) rex.WXB rex.XB xor lea out xchg xchg mov lods enterq rex.WXB mov or xchg cmp jo cmp jle jg (bad) mov ffreep (bad) scas lock in mov cli cld jne imul mov cmp cmp (bad) push jp (bad) lret retq cmp push rex.RXB push push mov mov mov (bad) int3 scas xor adc (bad) imul mov jmpq jnp loope out mov (bad) rex.WXB push xchg (bad) push xchg iret mov push lahf xchg cmpl iret jnp mov mov xchg outsl mov leaveq rex.WRXB iret iret movslq mov (bad) cmp rex.WXB mov insl xchg iret mov jns (bad) cltd mov test mov push xchg iret mov mov js lahf push test stos xchg push mov xchg cltd mov rcll push int sbbl fsts rex.WRXB gs mov mov ja imul xchg jrcxz adcl pop xchg (bad) je ficoml xchg xchg xlat mov movabs lods xchg (bad) mov mov iret mov cltd mov rcll stos rcrl cwtl mov movabs xlat jne mov xchg xchg cmpl xlat lea roll lret and cmpsl cmp (bad) (bad) loope enterq (bad) pop movabs sbb xchg stos and xor (bad) ja retq movslq (bad) jno (bad) jge sub sub sbb out clc sbb pop in sbb cmpsl (bad) sbb stc movabs enterq mul test mov push test xchg push je push xchg xlat nop (bad) pop cmpb or mov xchg jns mov sarb lret shrb or loope test rex.X fcoml out ja cmp (bad) int push or push test rex.RX loope mov mov (bad) jne test xchg xlat lret jns out ja nop mov pop ja cmpsl test stc mov (bad) (bad) and fisttpl scas push lret jae (bad) ja iret (bad) lods int (bad) cltd rol stc mov sbb es and rex.WRB callq movsb or mov addr32 rex.WX xor leaveq leaveq push cmp xor pushq adc xchg scas push outsl std xor xlat cmp scas mov rex.RXB (bad) test jmpq shrl jns sar movabs cld iret lret movslq fnstsw scas push xchg fidivrl push (bad) sbb (bad) (bad) (bad) pop jno (bad) mov mov or xchg push loope pushq (bad) xchg pop pop jbe popfq (bad) sar adc xlat (bad) in rcll scas rex.RXB sbb mov test shrl and cwtl xchg xchg (bad) xchg rcll adc iret (bad) push cmp push sbb rex.WRXB xor cmpsl int rex.WB rex.B pop cmp lods stos push pop cmpb pop pop cwtl rex.W cmp mov adc xchg (bad) jns mov jns stos mov rex.XB rex.WRXB (bad) stos and ror rex.XB movabs xchg loop (bad) rex.RX cwtl mov gs push jns stos in rex.XB movslq addr32 in and cmc mov sub rcll push sub cmpsb sbb fstpl out sbb lret and cmp cmp xchg sub rorl pushfq pushq ja es mov push cmp (bad) and mov out add mov and in gs (bad) mov mov pop rex cmp jge sub xchg movabs out push cmp xchg mov fldenv adc lret mov test rex.RX sub push xor mov cltd lock bswap add xor rex.WX addl (bad) enterq add stos lret rex.WRXB xor (bad) mov rex.WXB (bad) mov xchg xor xor mov retq mov xor stos rex.WXB lret mov rex.RX rex.WXB xchg out cmpsl shl rorb xlat rcl lret leaveq fs rex.WRXB lahf retq xlat adc xor retq sarb fwait rex.WX xchg stos (bad) sarb cs (bad) jno rex.WXB (bad) sarb cli movabs test xlat je lods cwtl push cmc out pop cmp xchg push rex.RXB popq xor ficoml cwtl test add (bad) loop rex.WR scas scas and sbb add jb xlat test pushfq jnp (bad) xlat sbb imul mov jnp xor in icebp adc decb cs out xorl (bad) movabs or mov xor movsb push sub pop nop pushq pushq sbb sub xor sbb lock and xor outsb jne,pn ficoml (bad) sub fisubrl and sbb jl add xchg icebp stos xlat sbb mov out xchg rex.WRB (bad) (bad) mov shll (bad) rex.R es outsl rex.WRB cs mov test mov rex.WX jrcxz movabs in jno mov xor xchg xchg addr32 repnz sbb (bad) stc rex.WX jb lret rex.XB rex.R rex.WRB xchg rex.XB data16 rcll mov (bad) fs stos leaveq (bad) je test mov xchg mov (bad) cltd and (bad) in push (bad) (bad) lret iret and and cld xchg sbb pop mov (bad) rex.RXB test imul movabs push ja or sbb test rex.X pushfq push movabs pop and lret fwait (bad) (bad) (bad) and sarb out fnstenv rex.R test fnstenv rolb (bad) fxch (bad) cmp jb jns (bad) xchg imul mov test cltd or pop movabs (bad) adc stos or (bad) (bad) rex.WRXB rex.RX cli int3 cmp (bad) jg test push mov insb sti mov addr32 (bad) mov lods mov (bad) pop out (bad) movabs ficompl (bad) test sbb sub jg out rex.W out push jns mov adc add js faddl (bad) (bad) lock ja (bad) loop jnp,pt xor (bad) mov movabs repnz (bad) (bad) (bad) jle xchg rorb rex.RX xchg (bad) pop add (bad) jmpq mov lahf xor pop (bad) clc fldcw out cmc mov (bad) (bad) xor lret addr32 mov std in (bad) jne rol fwait (bad) adc mov adc pop mov push xor adc rclb test movsl pushq mov add mov rex.X (bad) stos cli (bad) repnz mov movabs jae cmp mov mov push (bad) loop rex.B addr32 (bad) (bad) jl lods out mov jmp mov (bad) (bad) pop rex.RXB or popfq rex.WXB rex.WRXB movsl addr32 xchg sub jle loopne (bad) sub and (bad) sub (bad) cld rex.WX in pop jp or addr32 rex.W rex.X xlat xor out in mov mov addr32 xor (bad) rex push imul xacquire rex.RB retq sahf push jne enterq cli jno push iret xchg sbb sbb push (bad) push icebp (bad) fdivrs pop movabs (bad) (bad) xchg or sbb and (bad) cmpb stos clc cwtl rcr fcoms movslq rex.WRB sbb cmpsb mov iret pop cmovg pushfq lods sbb out rcrb (bad) in push jp rex.WXB out cltd mov push add fnstenv callq cld xlat cs in and push cmp icebp outsb loope add (bad) mov push xchg jnp iret fcoml retq (bad) adc (bad) mov out xchg jle adc xchg fildll addr32 rex.WX (bad) movabs stos imul mov leaveq xchg rex.X xchg ja cmp fistl (bad) icebp or cs push rex.X mov xor sub lods and sbb push mov test pop outsl ja rex.RX sub lods sbb pushfq movzwl (bad) sarl jns loope and in adc (bad) cmp mov cmp cmpsb adc addr32 pop cmp rolb (bad) jg (bad) fisttpl (bad) ds retq mov xchg adc stos mov out jbe and movabs or iret mov (bad) push or xchg out jrcxz fcmove and cmp rex.WRB cmp sahf cmc and xlat pop and xchg pop xchg pop out cmc movabs movslq scas fldcw sbb lret mov (bad) sbb mov (bad) jle fcmove push xor insb pushq loop (bad) (bad) cmp jb pop sti lods xor (bad) scas fdivs iret adc xor sbb jb (bad) push cmovg jae push imul (bad) cmp (bad) out (bad) jae mov movabs mov sti (bad) int3 jae mov push (bad) mov loopne std movslq data16 callq sub and pop jae sbb pushfq nop pop push jae add (bad) mov fsubl movabs sahf xchg lock retq int cltd rcl stc (bad) insb stc test test xlat (bad) jne fildll movslq test xor mov cmp jrcxz (bad) ja scas pop (bad) in scas popq lcall sbb adc retq jns xor nop cltd fadds (bad) pop and fdiv and mov rcl mov sti xchg loope (bad) lret mov fidivrl (bad) loop (bad) adc cmpl fnstcw pop and adc pop (bad) sub imull push lret cmp sti (bad) fnstcw push (bad) or rex.R lock mov fnstcw jge ds test pushq rex.RB xchg loope or pop add (bad) or repz (bad) loop orl adc and jle lods popfq mov xlat and (bad) xlat sub (bad) iret pushq (bad) or pcmpeqb (bad) fnsave movabs shrb rex.RX fldz mov pushfq rex.R movabs push flds jnp jp jo mov pop stos lea (bad) fsubl insl (bad) cmp test (bad) (bad) and in test leaveq sub xchg fldenv outsb xchg (bad) cltd ljmp shl mov xchg rex.WRB (bad) rex.R movabs pop xor negl (bad) adc ds adc add pop outsb cmp lods rex.WB scas pop mov mov out push rex.WXB rex.X and movsb (bad) push enterq rex.R sub push jmpq adc lahf fcoml rex.W rcrl (bad) push movabs mov retq adc mov xchg adc callq xchg mov orl (bad) (bad) mov rex.W rex.WRXB and push in fwait jp add mov (bad) cwtl xchg pop mov and out fcoml xor (bad) lock xlat mov fdivr ds pop insb adc rex.XB cli out and ss movsb (bad) lret jl lods clts rex.WRX fsubrs (bad) movabs movabs (bad) push xchg leaveq xchg movsl sbb adc fistpll sahf repz ficoml (bad) or outsl stos cmpsl add (bad) (bad) adc pop out xchg and mov add xchg sarb fdecstp outsl shll mov rex rex.WX pop cmp xor xchg idiv in pop fsts or mov mov (bad) icebp xor push lods out (bad) and sarb addr32 xor adcl cld (bad) fnsave adc mov fsts adc pop nop jns xor pop jns rex.WR rcr pop (bad) iret xor fidivrl ficoml jp (bad) (bad) ja mov mov repz xchg fxch (bad) adc rex.XB mov cmp hlt push insl fiadd and mov xchg lods mov pop mov xchg loopne lret cli mov jne repnz jb lock xchg xor (bad) jrcxz cmp cmp (bad) cmp adc sahf mov iret addr32 imul imul (bad) push (bad) in mov push out (bad) pop (bad) sbb and loopne sti jb test mov pop subb mov sti movslq push adc mov jp out (bad) int3 cld ja pop fcmovu push jl mov mull sbb icebp pop loope (bad) xchg rex.WXB fs push out movslq movabs adc xchg (bad) loopne data16 pushfq (bad) push lahf push rex.WRX or sbb repnz callq shrl or and add xor (bad) (bad) insl (bad) rex.WRX adc jns test retq movabs (bad) movabs out push (bad) stos rclb pushq (bad) cltd retq mov test add mov movslq sbb es out (bad) push movabs out jno (bad) jnp cmp fldpi xor rex rcrl (bad) sahf mov mov scas pushfq fadd sub sahf and rex.WRX addr32 movabs mov lock cltd mov jnp rex.WXB rex.X andl lods push push push pop pushq int3 mov ds or push pushq add (bad) icebp jne mov or xor sbb addr32 jne in lock js outsl fs jg fcmovbe pop xchg xor mov (bad) rex.WRXB cltd and jne stos xchg out adc fisubl sbb add jnp movabs add lock mov retq test rex.WB shll mov out retq xchg and mov cwtl push push (bad) sbb mov movabs add (bad) adc shlb movabs addr32 rcll out in out xchg addb (bad) mov and mov sub (bad) (bad) sbbl test rex.RX fisub or es mulb fnstsw xor stos lret lcall mov and scas xor xchg and rex.W xchg push mov lea outsl mov imul cli rex.WRXB xor cli mov stos jns and xchg es add cs fimul mov sbb push cmp (bad) test clc lea cmp enterq (bad) rex.WRX repz mov in test (bad) pop fwait out (bad) sbb rex.WRX xor mov rex.RXB pop xor pushq jbe xor rex.W rex.B addr32 push test rex.XB out es sub rex.X pop pop fsts (bad) xor stos rex.RX rex.X push sti outsb mov cmp ss movabs add cs mov (bad) out outsb loopne scas sarl xchg movabs pop sarb add xchg mov scas jge pop (bad) sbb in mov cld scas add popq ja xchg (bad) sub xlat pop divl fstps sub pop cld cltd or mov retq xor jrcxz sbb (bad) sbb (bad) or pop cmp sbb add out sahf rex.WXB es add imul test lret push jae xchg rex.WRXB pushfq mov mov mov sbb mov (bad) push (bad) cmp lret int3 and pop pushq push sbb (bad) (bad) (bad) and leaveq mov pcmpeqd rex.WXB sar (bad) rex.WB orl fwait stos (bad) mov adc pushq stc (bad) std (bad) mov mov and (bad) rex.WRXB rex.WR clc rex.RXB sbb cmp (bad) cwtl jmp fdivs leaveq xchg xlat cltd adc test std mov mov insl rex.WX rex.WR movabs add or cmp mov movabs out (bad) mov push cmpsl icebp xor callq ds sti sub and pop mov rex.RX rcll add lock add stos sbb xor addr32 sbb pop adc lods mov add xlat (bad) (bad) mov pop cmp xlat (bad) ss jg mov add sar in cmpsl shrl shll (bad) sbb (bad) (bad) iret xchg cmp mov nop (bad) mov (bad) pop cld sbb rex.RX rex.RXB rex.XB rorl jmpq in (bad) xor mov and (bad) push cmp mov mov mov rex.WRB cld js mov fs sbb lret cmp addr32 insb mov scas fisubl movabs frstor lret sti pop fldt (bad) and (bad) fs popfq fisub rex.WR rex.X cmpsb lret rex.X jrcxz imul in outsl (bad) sub test rex.WRXB cmp rex.R out mov push rorl iret and add jmp (bad) sub rex.WRX fs pop out push cmp push (bad) (bad) push cwtl push ja and mov pushfq adc (bad) cltd sbb out xlat jb int lods mov mul rex.WXB lock or lret jp fiaddl cltd out lea jmp pop mov repnz mov (bad) mov cmp hlt xor xor rex.WRXB xchg xchg fcoms out jne in mov mov mov or xor or rex.RX push mov int rcrl and test sbb movslq (bad) (bad) add jnp js sbb and mov jmpq imul sub and mov lret xchg pushq mov sbb in adc fnstsw (bad) sbb sbb mov data16 rex.XB int mov jo mov cmp sarb lret cmp cmpq fwait iret sti mov sbb xchg sbb cltd shll mov lret cmp rcl pushq or adc xchg cmp fnstenv (bad) int (bad) sub sbb and (bad) callq (bad) adc retq xchg or outsl xchg (bad) movabs fdivr adc adc and jg repnz (bad) cmp (bad) jns (bad) ja (bad) repnz (bad) hlt movabs rex.W cmp sub test movabs push lods jmp push ficompl insb (bad) (bad) push sub add mov mov push adc (bad) push cs push test cli mov mov xchg fidiv xlat sbb iret in ss xor add adc iret out je cmp jge jb hlt jle fistpll rex.WB mov jg cld or pop mov cli data16 shlb ss test (bad) sub and rex.WX mov loope sub insl (bad) int (bad) mov mov add ss add rcrl popfq rex.RX push mov cli mov push js jle jrcxz or retq ss xor mov sub movslq movabs and rex.RB fst sbb xchg push fiaddl (bad) (bad) or cmp xchg imul cld jnp in pop imul insb jmp out jne addr32 cltd fwait pop shl jnp incb ficompl addr32 (bad) ds nop vdivps jae rex.WRB xchg (bad) flds sbb loop shll and (bad) int loope add jne lea mov rex.X xchg sub pop pushfq mov sahf mov xor addr32 (bad) push lret jne jno sub (bad) xor repz xor decb (bad) sbb cmp mov rex.WXB fstl mov ficompl mov retq movsb shll rex.WRXB (bad) lcall cmp movabs in mov out mov mov mov mov cmp mov stos rex.R shrb out stc rclb ror movslq pop xor ja movabs (bad) (bad) cmp rex.X (bad) adc pop (bad) jo push and out adc rex.XB fxtract movabs rex.RXB rex.R (bad) rex.WRXB rex.WR int sbb jrcxz push retq leaveq stos mov push rex.RXB push (bad) push sarl jbe or ss lret (bad) jge movabs cmpsl rex.R popfq repz jl mov push push ds jrcxz fadds cmc (bad) ss lret add xor (bad) movabs push movsb (bad) xchg add jno cmp cltd jns incb int push addr32 or cmp cltd (bad) adc cmp adc jp rex.R addr32 out (bad) nop pushfq mov cmp or rcr sbb xor (bad) lods xor xchg xchg cwtl cmp repnz and movabs cmp cld rex.RX add movabs cmp fwait (bad) xor clc jno mov lahf mov add retq pushfq push (bad) pop and (bad) rex.RB sarl (bad) push push addr32 sub rex.WX loop jnp fcoml rex.X and jb jmp (bad) (bad) sbb mov mov movslq jle (bad) in mov shll add (bad) mov jns xchg rex.WRB jb (bad) mov xchg shrb scas rcll ss xchg jbe xchg sub loop sbb adc rex.XB jns movb lods in sbb pop and push pop movabs push (bad) lret and iret push out sbb mov repnz jg sbb (bad) or movabs pushfq pushq rex.WRB jno pop cmp lret rex.W adc sbb add adc (bad) or push in pushq sub (bad) icebp (bad) xchg push movabs out and mov pop clc lods ja sbb fnstenv fcoms test lods mov rex.B ds movabs (bad) sti pop mov movabs rex.X out fstps jp mov lret out stc fs fs lods test ficompl rex.WX fdivrl and mov xchg sub pushq push jbe sbb jmpq ss in mov cltd cmpsb movabs cmpsl scas out cld xchg movabs (bad) rex.WB sbb mov sub out rex.WB idivb jae jae (bad) rex.WB out out mov mov or cmpb insl stos xor (bad) js loop rex.WR pop or movabs xlat or es xor (bad) pushfw xor int3 cmp jae cmp pop (bad) pop (bad) rex.RX adc fisubl out addr32 (bad) (bad) fsubrs mov jo fnop (bad) addl mov pop mov xchg mov or sarl imul stos jb mov imul xor jb mov lods (bad) fnstcw sbb out ss xchg xchg (bad) rex.WXB rex.WB adc push xchg mov (bad) rex.R rex.R rex.WB rex.XB sub mov xchg test retq test movabs iret adc lock push jg lret addr32 gs ja imul in (bad) addr32 (bad) fcmovu fmul fsubs (bad) or push (bad) fisubr test add lret (bad) (bad) test pop hlt fcompl mov jp,pt fs rex.R cmp rex.RX adc sti sbb mov (bad) cmp rex.WRXB mov rex.RX sahf (bad) mov mov rcr xchg mov movabs rex.XB movsw test mov (bad) imul (bad) (bad) sbb and icebp pushq adc xchg or fdivrl rex.W (bad) imul repz rex xlat je rex.W push leaveq test (bad) out insb pop jne xlat pop add icebp outsb lods in out stc incb mov cmp xchg sub (bad) rex.WXB push (bad) shrb mov outsb and subl mov jbe,pt jb in mov jb fbld jns rex.W fnop jnp addl jae rex.WB pop decb jle in xchg out mov mov (bad) addl js (bad) jle leaveq fs xchg cli shlb (bad) jge jp xchg lahf rex.RB fs jne stos push in movabs lock pop sbb movabs cmp jnp out pop (bad) pop ss out pop cmpsl (bad) (bad) iretw test mov shrl fsubs pop (bad) rex.B and out (bad) rex.WX and xchg mov test out ds rex.WXB data16 jo lret in pop mov test adc (bad) mov int3 (bad) mov out imul or rorl icebp cltd cmp test (bad) rcrl (bad) loop loop test and pop outsb mov pop cltd (bad) pop fdivrl mov cmp (bad) addr32 lods (bad) nop orl (bad) jo (bad) movabs cmp add jne (bad) in sub pop add loopne sbbl pop shrl (bad) cwtl lret test iret lea lods add (bad) lea jns (bad) rex.WX rcrl std (bad) push addr32 fsubrl fs pop pop pop (bad) mov add test mov data16 in or rex.WRX push add retq or fcomps loope rex.RXB mov and pop adc cwtl repnz movslq mov ja cmpsl (bad) insl scas push mov pushq fwait (bad) jb hlt fsubs popfq adc sbb jbe scas xchg pop or rex.X clc scas clc jrcxz or retq rex.WRX add test movabs mov or test (bad) jp in mov xor pop fdivl (bad) jl sbb push jl or pop (bad) retq rolb push mov fmul rex.RXB movabs loopne cmpsl push int sub fildll es xor fcoml (bad) cmp lret push pop stos jge mov clc cmp movabs cmpl sbb pop repnz (bad) fucom cmp clc in test (bad) mov xor jmp stos mov movsl mov (bad) test lret (bad) cmp rex.WR mov or jg (bad) fist mov or adc (bad) movsl sbb mov lock (bad) fdivl rcl rex.WRX mov not xor div push rex.WX rex.WRXB scas push jl (bad) retq enterq retq test mov es fwait icebp cmpsl in xchg (bad) xlat rex.XB cmp (bad) xor mov pop fwait mov sbb xor rcll rex rcr pop xor fs addr32 (bad) jb xor (bad) mull cli adc adc fsubl pop mov shrb xchg shll addr32 rex.WRXB sti push ficompl retq cmp fdivl outsl add mov pop leaveq mov jmpq scas cmpsl in lock rex.R rex.WRXB mov rex.WXB cmp (bad) push fimul (bad) (bad) fcompl mov mov cmovp (bad) cwtl popfq cs mov repnz (bad) flds rex.B xchg movslq fwait cmp rex.X (bad) (bad) and lods rex.W std test xlat or (bad) (bad) or or adc fbstp and lods and stos xchg lret sub pop or fdiv rex.RXB xor rex.WRB pop mov mov and push fsts mov (bad) mov sbb rex.W fcomp jmp fsts (bad) push or (bad) xchg mov rex.RXB xor jno or flds mov adc sbb test outsb xor scas mov pop push sbb rex.X rex.WR rex.X fwait ds fimul pop (bad) pop lock gs push outsl sahf lods rex.R fcoms mov rex.X fcompl lods js shrl movsl leaveq outsb rex seta lods xchg rex.WRXB xchg pop out jnp (bad) mov outsb test or repnz imul test xor sub pop out fsub (bad) (bad) xchg test cmpsb fstl jp test jg xchg in mov fwait pop ficompl cmp pop mov adc (bad) stos loope push (bad) outsb and jae rex.WRB jo pop mov (bad) icebp and loope addr32 pop rex.X push rex.WRB (bad) xchg adc push hlt fs stos mov callq roll (bad) sbb adc cmpsl leaveq (bad) (bad) jl rex.WXB cmp rcll xor vmovupd mov pop adc cmp cmp sbb rex.RX push leaveq je cmp iret adc (bad) mov sbb mov shr sub js cli sub imul fcompl rex.RX lahf xlat sub cmp fldcw jle or clc push xchg out test (bad) rex.RB cli pop xchg gs movslq pop pushq (bad) (bad) por cld retq cmp cli rex.WXB and mov out xchg sbb adc rorl rex.RB rex.RXB pushfq (bad) adc rex.RX neg (bad) cmp clc pop cld jp xchg rex.RB (bad) cs addl (bad) movsl push (bad) test rex.R or sbb (bad) or clc (bad) sarb loop xor sbb mov rcrl cmp pop sti lret out cmc rex.WR cmc jnp xlat addr32 adcl jp icebp (bad) and jns movabs out jmp (bad) (bad) sbb fiaddl retq fisubl or rex.WB pushq fimull js rex.WXB idivl jo push js cltd (bad) addr32 pop adc sub mov data16 add cli icebp xor and fsubr xchg or lods sub fneni(8087 cld jp jp loopne jmpq pop pop cmp jnp mov ss popfq jmpq scas pop (bad) and pushq fmull test icebp rex.WX rex.RX fstps xor sbb rex.RXB lahf ss sbb out (bad) movslq push add loope psraw rex.WXB rolb movabs jns ffree cmp out (bad) lret pop cmpsb cld jl retq jmp adc out push jl rex.WX in sbb test movabs or sbb mov jnp (bad) pop rex.RXB or adc addr32 loopne (bad) lret xor mov or jae and sbb movabs repnz mov out out sbb lods jge (bad) pushq out cmp fsubrl (bad) fstpt push cmp movabs mov movabs test rolb jbe xor fdivrl loope rex.WXB jb sahf insl (bad) mov vorps pop stc outsl (bad) out movabs lods je lock (bad) jns fisubr rex.WR fwait mov (bad) pushq xchg shlb jle sbb rcll leaveq ss (bad) out (bad) retq add jb add rex.WXB xchg rex.B addr32 fistp cmp scas cmpsb push lea adc movabs (bad) scas clc pop cmp (bad) (bad) add loope cmp pop je (bad) xchg or mov cmp repz and rcr cmp fld mov movabs mov mov jb mov hlt push cmc jg movl (bad) out lahf cs pushq xorl rex.WRXB cld int cmpsb or (bad) mov (bad) (bad) fsubrs rcrb movabs jnp addr32 jb xchg cltd movabs pop test (bad) out push adc rex.XB addr32 jns fadds ficoml jnp fnstenv sti addr32 sarl jle mov xchg iret adc jrcxz sbb jle (bad) (bad) test (bad) in push sahf imul (bad) roll cld and (bad) mov jg rex.WRB pop sbb popfq iret in in divb add lahf (bad) cmp sbb cs mov rex hlt lret sub (bad) es pop rex.WRB incb sbb (bad) jg sbb xor pop cmc sbb retq or mov pop jae adc cmp fbld cltd addl rex.WRXB repnz lret pop push lea retq popfq add xchg mov xor in pop in jl idivb jno (bad) mov rex.W cs loopne rex.WXB rex.R rex.RX (bad) (bad) mov rex.WRX mov (bad) sub push sub push pavgb cli retq test add xchg rex.WRXB cli sbb retq jae int3 adc push lods adc (bad) push jae push cs shlb loopne add mov or mov jnp or adc rex.WRXB jne out (bad) rex.WRXB (bad) fidivrl push mov push jmpq push and in (bad) xor (bad) add sti (bad) pop outsl push pop and xlat jnp pop ss movslq ss pop lock sbb pop popfq xlat adc (bad) xchg pushfq rorb fdiv rcll ficomp sub es mov (bad) (bad) pop mov pop mov adc mov xchg add adc rex.WB fwait xor jmpq addr32 (bad) sbb adc iret movslq mov (bad) repnz add mov pushq (bad) imul enterq sti pop rex.X (bad) mov cmc rcll (bad) int rex.RB rex.RB in movsb xchg cmc push push mov xchg jle sbb jge jbe jmp test (bad) out insb lret and pop rex.RB xor (bad) adc (bad) cmp (bad) pop shlb cltd mov cmp lret cmpsl int mov sub mov rex.X (bad) mov jne rclb xchg add xchg rex.RX fwait shlq xchg (bad) roll (bad) (bad) movabs mov test sbb outsl icebp enterq jrcxz ja xor (bad) (bad) cmp cmpsb mov ss mov or (bad) shll mov scas (bad) jae fnstenv and stos cmpsl mov (bad) popfq pop cli (bad) (bad) pushfq rex.WB adc xor push mov (bad) retq (bad) rex.WRXB rex.XB (bad) ss mov repz loop jae stos test jo fcomp mov xlat (bad) xchg jmp mov jns,pt popfq jno xor (bad) adc rex.RXB rcl fstps sbb imull add mov pop jnp xchg fwait jge add pushq (bad) out (bad) sub pushq in or (bad) icebp cltd mov lahf rex.WRX es rex.XB out loop or sbb mov test add shll (bad) push je clc mov scas fisubl push movabs or pop sbbl and pop fs sbb fucomip jp test xchg (bad) xchg (bad) jg rcll xchg cmp cmp pop sub rcrl rex.RX and movabs stos ficoml clc sbb push std adc adc adc movslq test (bad) adc rex.R cmp pop xchg (bad) (bad) adc cltd iret enterq adc xchg rex.RX xchg in xchg xchg jrcxz (bad) sbb push pop mov (bad) enterq (bad) (bad) mov retq rex.WRB ficomp repz push (bad) rex.RB mov scas (bad) repz stos mov mov pop (bad) mov lahf out outsb rorl addr32 xor pop test (bad) stos shlb push test in jno pop xchg xchg jns stos xchg rex.XB xchg mov nop roll cmp mov cltd mov es jmp rex.XB xchg or mov fisub nop jp xchg sete jrcxz (bad) add addr32 ja imul (bad) movabs enterq (bad) mov (bad) sub (bad) hlt (bad) sub mov push sbb leaveq (bad) lock out test xor push (bad) sarl jno adc pushq push fwait lahf rex.WRXB xchg movsb fsub rex.RB mov out (bad) movabs mov lahf mov icebp adc mov jp divb shrb (bad) neg rex.WXB mov xor xor add cltd (bad) sbb pop adc sbb xor mov and orl (bad) or mov mov mov lret orb (bad) test test icebp push imul test xor cmp (bad) repz sub int3 cs sub xchg mov mov cmp bnd (bad) sahf xchg cmp sbb mov (bad) xchg mov movabs mov cmpsb movsb sbb (bad) iret fcmovu mov jb (bad) and int rex.RX (bad) cmpsl ds pop push cmp rex.W hlt push (bad) (bad) mov stos pop (bad) vcomiss fisubr (bad) cmpsb rex.RB (bad) cld (bad) push pop lods mov cmpsb add (bad) (bad) stos test mov rex.XB xlat push repz mov fcompl imul (bad) rex.WRXB (bad) int3 rex.R xchg mov popfq pop xor add lcall cli (bad) loope mov jl mov sbb fdivs sub test jmp (bad) ds movabs leaveq (bad) cmp ja rex.RX pop sbb fwait jns fdivrs sub mov (bad) fmul (bad) jbe rex.RXB mov (bad) stc shll cmp cmc cld rex.WX jrcxz fstpt mov rex.WRB xor (bad) mov mul lock push (bad) mov sub js movslq jb ror faddp popfq insl movabs sbb vunpckhps shl out pop (bad) test insl lret hlt (bad) jg (bad) (bad) nop (bad) out imul cmp clc sbb loope xor test (bad) xor int3 mov int rcl rex.WB adc xchg (bad) mov sub sbb jbe xor and (bad) pop pop fwait mov iret xchg rex.WXB sbb (bad) nop std lock jl lods repz shll nop add sub (bad) (bad) adc mov mov (bad) shrq (bad) xchg adc clc push xchg sahf test mov sub (bad) or sahf xor in (bad) and loope add outsb (bad) jg pop addr32 mov movabs hlt add jg add rorb fldcw fcmove addb push (bad) scas in rex.RB mov in out or adc (bad) sahf shrl add rex.RXB data16 fcom and or fcmovbe xor pop xor jmpq (bad) out pop (bad) xlat (bad) lret jg jbe cltd icebp (bad) rex.RX pop xchg scas push movabs mov rex.RX xchg cmpsl rep adc and fcmovb pushq cmp fcmovbe mov rex.RX loop pop cwtl and stos fnstcw fidivrl rcl mov xchg xchg fwait pop ss mov stos rex.X retq xor mov or (bad) movsl callq push cmpl xor fwait gs sub movabs pop push xchg (bad) xchg pop jb (bad) (bad) xchg rex.W movabs test rex.WRB imul or es jp adc jb (bad) xchg test (bad) xchg sbb xor ror xor orb in or iret xlat lret adc mov adc mov xchg adc cmp jg insl cmp fst out cltd shrl scas repz push cmp ja mov (bad) mov (bad) xor mov jp (bad) mov sti imul cmp xchg mov mov rex.RB icebp cltd cli mov (bad) lock gs js cs fstp movabs add jns pushfq fmull hlt and (bad) (bad) or adc jno jrcxz fistl pop adc rex.RB cmp jle loope and xor jns mov test (bad) xchg pop rex.WXB rex.WX mov lret (bad) and (bad) popfq movslq rex.WB rex.WXB rex.RX fcompl sti adc (bad) (bad) pop jne (bad) jo mov mov nop sarl movabs jg std mov xor ds push imul lahf out jge mov or andb lods mov lods fidiv pop xor mov xlat rex.WX jmpq int3 xchg (bad) sub mov (bad) (bad) (bad) nop push rcrb addl xchg insl rex.RX ja mov or sarl insl xchg fcomps sub xchg pop mov lret cli or or movabs (bad) cmp in rex.W es add sbb rex.RB rex.WB rex.XB rex.WRXB rex.X mov rex.RB push and test icebp jmp (bad) xor std movabs mov push push pavgb hlt fildl jnp push mov stc mov fwait cmp out movabs stc cltd cmp sbb adc movabs push shl lret mov mov cmp (bad) rex.WXB cli repz out es iret sbb pushfq imul imul insl rex.WB add cld loopne rex.WB xchg fwait push fwait sub ja movabs jns sbb adc add addr32 imul shlb scas jl (bad) in (bad) xchg or jmp (bad) pushfq sub rex.WR cli cmp adc lret rex.RX ds push sub (bad) test test sbb mov js (bad) scas (bad) cmc push fistpll (bad) movabs retq cmp iret cld xchg (bad) sub ds popfq or movabs stos (bad) std pushq std (bad) pushq xchg (bad) lock sub movabs cmp adc enterq rex.WRB nop fsubrs and add pop int out sbb popfq imul movabs mov jnp rorb sub (bad) hlt (bad) js sti (bad) ds rex.XB (bad) (bad) out fdivrp movabs cmp insb pop rex.WXB ffree jne rex.WRXB movabs cmpsl mov rorl icebp (bad) lods imul xchg jl or sub rex.RX movslq jns sbb ss rex.XB mov (bad) (bad) addr32 push sub in mov repz lret mov flds pop cmp and jns adc push sub adc stos scas sub sbb ds jge mov test stos lahf or adc xchg (bad) mov mov sub (bad) jrcxz jb sbb js lahf adc sbb pushq mov or mov (bad) xchg fadds fmull mov rex.X add xchg pushq sub andl (bad) mov (bad) popfq retq sbb jnp retq xlat mov cltd lods pop iret sbb mov add or loope icebp mov cltd jmpq (bad) ss popfq (bad) movsl adc sub xchg sbb cld rex.RXB rex.B lcall ss imul loopne (bad) mov lret xchg pop imul xor rex.X add insb (bad) int rex.RB (bad) jno jns xchg jo cmc stos out int3 and xor mov lods xor addr32 (bad) push (bad) pop testl rex.WRX mov (bad) hlt push icebp movsb jle push (bad) (bad) xchg pushq mov adc rex.WXB scas push (bad) pop xchg rex.WX loop lahf fidivrl sub retq mov (bad) (bad) (bad) lret (bad) fs (bad) xchg adc cwtl mov lret cmp xchg fucomp mov pop xchg mov jg (bad) pop outsb rex.WRXB leaveq movabs clc movabs mov test jb xchg retw fisttpll movsl jae or cld jns stos js retq lahf shll enterq mov xor out (bad) fsubs jnp lahf fwait cltd fcomps and imull xchg xor xchg pop xchg (bad) xor push fdivrs mov cmp addl rex.WXB addr32 mov jrcxz adc rex.RXB cmp pushq sbb mov addr32 shll xor mov ja jrcxz adc cwtl (bad) clc ror xchg rex.W rex.X test out xchg test mov (bad) cmp sbb popfq in std sub (bad) add jle (bad) jl and (bad) rex.RB movabs cmp rex.R addr32 sti pushq pop jo adcl pop xlat push scas pop (bad) xchg fisubrl (bad) imul fadds mov flds insb sti mov (bad) xor mov (bad) mov and push ds popfq jae lods or xchg js adc cmp movsl sarl outsb xor test jrcxz (bad) adc cmp jbe rex.WR rex.WXB sarb sub (bad) (bad) xor sbb xchg (bad) fdivr sbb xabort jbe or mov jmp pop imul jrcxz xchg mov fidivr (bad) hlt std cmp jp movsb jg push push fidiv cmpsb push jl (bad) or (bad) or mov lahf stos js pop rcrl leaveq int3 sti rex.WRXB push sbb rex.WX rex.XB (bad) fidivrl insb popfq out wbinvd sbb repnz loope movsl pop insl (bad) fistl in sbb (bad) je test data16 sarb cmp movslq lret mov addr32 mov xlat mov (bad) shrl sbb rol cltd (bad) xor rex.RXB rex.WRXB (bad) test sub jno mov outsb rcrl (bad) (bad) mov cmp rex.X (bad) and mov shlb push (bad) push enterq dec mov push (bad) addr32 push rex.RXB clc stos ds movsl popfq hlt cld (bad) shll bts add mov adc mov pushq rex.W jmpq in add push pushfq and (bad) cmpsl mov rex.WX in xor xor mov iret rex.WR rex.X sbb mov fiaddl mov and and push sub jbe sbb cmp movups (bad) (bad) test out pop jno movabs (bad) jbe push push mov cli pop mov imul add xchg mov pop adc lret adc movabs iret ja jns and (bad) pop test imul (bad) movabs test xchg mov jne sub cld mov xchg iret or shrl rex.WRXB sti pop movabs add mov subb push rex.WXB lods pop (bad) (bad) jmp jmp test jns (bad) and sbb adc mov sbb out in push callq jnp jle jmpq rcrb rex.WRB adc add enterq cmp (bad) push (bad) xchg movb negl stos movabs (bad) (bad) stos (bad) rex.WX lea stc fcomp xchg cmpl rex.RXB leaveq rex.WRXB lock mov movabs (bad) sub jnp setg sbb loop sahf pop pop mov stos mov rex.W rex.R cmp (bad) test rex.WX ss ds out cwtl sub movabs test (bad) jnp push adc pop jb movsl pop or movsl pushq lock adc jnp (bad) (bad) xchg fwait ljmp jne out push push sbb (bad) rex.R mov movsl ja mov gs (bad) rex.WR xchg pop leaveq (bad) xor movslq out xlat mov outsb cmp int jns xlat (bad) jne xor lods (bad) mov gs mov add adc lret sbb mov mov rol out and out xchg out cmpb scas out es in and (bad) (bad) mov (bad) push loopne (bad) cli push retq rex.B popfq pushq (bad) rex.XB or sub xor (bad) (bad) loopne sbb rex.W jrcxz mov cli xchg pushq rex.XB jge out out or xchg cmp mov push repz pop pop out movsb xlat rex.WX mov push pop jae (bad) xor mov pop push out rex.WX addr32 lret rorl ja adc cmpsl fwait not mov std jle mov mov (bad) sbb outsl (bad) pop mov (bad) (bad) cmp cmp (bad) mov outsl rex.WR out divb xchg pop ja rex.WRB mov rex.R adc test jb test rex.RX xlat rex.RXB jmp clc xchg rorb jnp rex.RX mov xchg rex.WRB (bad) fwait stos jnp rex.XB jno lahf rex.RX movsb pop jp cmp pop mov movsb (bad) mov jbe sti sarl rex.RX mov pushfq mov jno jge nop lcall mov test int3 adc mov test addr32 jne rex.XB (bad) jae imul pop pop (bad) iret ror mov sub add cmp jmp movsl push push out cmp adc scas (bad) pop adc xlat and cmp mov repnz xlat sbb mov xor rex.B test movsb rex.WRXB sub xchg icebp sbb adc xchg or and or (bad) lahf movsb xchg shr imul retq stos frstor and (bad) and movabs jl test rex.WB sbb and (bad) (bad) mov (bad) jo (bad) xchg out add pushq jp fnstenv imul pop rex.XB loop (bad) leaveq mov pop scas pop cmp (bad) mov cmp imul pushfq push and (bad) mov sub and rex.RB rex.WRXB mov (bad) cmpsl lret cmpsb mov fdivrs xor xlat ss (bad) out cmp jmp xlat imul in (bad) mov jb stc cmpsl cmp pop adc movsl (bad) (bad) jb pop cmp inc xchg mov adc push clc mov sti sar enterq ja xchg sub rex.WB rex.WX push clc mov adc mov (bad) rex.WXB rex.RXB mov and add (bad) (bad) scas and (bad) adc pop xchg mov fidiv imulb fcomp jbe sbb xchg (bad) sbb movntq mov fsubrl sahf mov mov sbb rex.X in rex.WXB (bad) xchg (bad) ja cmp adc push push xchg and (bad) mov (bad) sub stos and movabs xor leaveq stc stc stos add cmp mov es (bad) ss fnstsw (bad) jnp pop pop cmp in mov lods lret icebp xor (bad) retq cmpsl or punpckldq sub mov out cli pop add sbb test xor fwait mov jmpq enterq rex.R pushfq std jae xor pop cli mov fwait rex.RX xor hlt int3 test subl mov (bad) js rex.RX or (bad) repnz push loop mov enterq stos mov pushq cmpsb (bad) sub mov lods in fdivr mov loopne mov cltd xchg ficomp enterq enterq mov (bad) mov movabs adc (bad) in imul push mov jne sti xchg stos movabs (bad) (bad) mov lret xchg push (bad) (bad) (bad) rorl jnp (bad) lret mov sub mov xchg xor jnp insb loopne stos (bad) xor (bad) (bad) and fldpi pushq mov adc rex.RX nop or (bad) int3 lret (bad) (bad) data16 xchg ficom fstps icebp movabs movabs pop fstps leaveq (bad) fwait leaveq jl (bad) xor cmp test callq rex.X jp mov jo mov mov lahf (bad) mov ficompl leaveq jns (bad) push sbb rex.RB fdivrs mov ror insl (bad) jge cmp xlat xor push mov pop and cmp jnp or stc mov retq js (bad) mov cltd pop mov subl jmpq push mov push cmc (bad) sti movabs not cli (bad) fcomp jp fmuls fidivrl popfq callq fnop in adc mov cmpsl rex.RXB and rorb sbb xchg xchg xor rex.RXB (bad) (bad) lock movabs test (bad) sti push (bad) clc cmp rex.RXB je (bad) xor fidiv mov sub adc push (bad) retq mov rex.RX cmp (bad) pop sub mov lret and mov mov add xlat outsb sub xchg in xchg inc js mov rex.RXB hlt xchg jne mov (bad) xor pop mov fiaddl imul movabs (bad) (bad) es out scas (bad) shlb jnp pushq pop lods xor mov (bad) xor sti sub shlb (bad) jl gs stos (bad) (bad) mov out cmp xlat cmp loopne rex.WRB jbe pop (bad) push (bad) test and int mov (bad) lret scas jae out jno cmp (bad) ja pushq pushfq sbb loope sub xlat test xchg cmpsb rex.RX pushq in gs in (bad) adc adc mov mov jne xchg or or sti sbb pushfq ds stc movabs outsl mov pop mov iret (bad) push movabs pop ss js sarb ds push outsb jmpq jns clc stos or loop (bad) mov mov scas fcoms rex.WRX mov xor (bad) pop mov addr32 sub (bad) (bad) lahf test out (bad) sti pushq adc and add (bad) sub xor hlt xor jmp mov loop or add retq rcrl rcr lret outsl hlt test add addr32 (bad) pop and (bad) jle cmp movabs (bad) mov mov cmpsl pop pop mov xorl (bad) mov out jle cltd adc test lahf (bad) sbb pop pushq jle mov movslq loope adc sub vxorps adc (bad) ja jb xchg divl mov pop pop fidivl and loope rex.RX and (bad) mov adc (bad) (bad) (bad) movabs idivl or mov and mov movabs add rex.RB rex.WRXB cwtl imul pop js sbb jo (bad) mov nop jbe jp cltd out jmp mov jmp cmp (bad) and xchg rex.WB (bad) stos (bad) enterq push and (bad) mov rorl (bad) pushfq cmp lret xorl rex.WX cmp cltd or fdivl mov stc test jno add and mov sub or movabs pop rclb adc rex.XB ds mov (bad) pop push outsb retq xchg rex.WRB mov ja adc cwtl mov jl xor (bad) int3 adc movsl rex.WRB jb sbb and adc mov std (bad) push repz fnstsw fistp pop movabs and push scas (bad) mov cld push insb fwait scas (bad) je mov rex (bad) test retq mov sub test cmp or imul in (bad) enterq push stc cld (bad) addl (bad) lahf push std mov mov cwtl (bad) mov movabs cli mov mov mov pop in fsubrp clc adc sbb (bad) xchg ja loope insl mov push movsb jl (bad) rcr fisubl loope xor nop mov stc and pushq outsl mov rex.XB jge mov outsl mov rex.RXB (bad) rclb jrcxz mov data16 fsubp (bad) js (bad) out rex.RXB (bad) addr32 lea mov pop std jo (bad) jg cmpsl mov pop (bad) push (bad) pushfq sahf xchg xor sub icebp rex.WXB mov (bad) lods mov sarb in sbb mov cli (bad) mov mov mov nop fstps cmp pop mov (bad) xor and popfq mov (bad) cltd fnop sahf (bad) (bad) mov xchg pop (bad) and add (bad) pop pop (bad) mov nop push in or test outsl rex.X xchg gs or add scas loopne mov jrcxz fldenv cmp xchg int fcompl cwtl imul push and fndisi(8087 xlat popfq mov (bad) int3 js pop (bad) enterq seta xlat and nop mov rex.XB (bad) ficomp pushfq jbe or cli cltd movsl (bad) xchg pop (bad) sbb xlat sti pushq add orl test callq addr32 xchg addr32 xchg sbb ror rcl (bad) xchg jnp xchg jp cld mov pop pop fild mov jmp clc (bad) fchs outsl fsubrl hlt add out mov pop and jle pushfq adc adc addr32 mov outsb rex.WRXB jbe cltd retq loope sub cwtl addr32 pop nop mov (bad) movsb xor lods adc push sub sub movabs (bad) movabs mov fsubrl fdivrs xchg cmp out mov rex.W jbe cmp xchg repz jnp test (bad) push (bad) scas and sbb out (bad) out (bad) insb repnz ficom repnz add push fdivrl shrl (bad) pushfq sub in jnp addr32 lret orl (bad) (bad) mov imul mov mov jo imul rex.W ja pop imul addr32 rclb iret add sub lret mov adc mov scas mov mov and movabs pop cwtl stos outsl rex test mov jns (bad) jae xchg mov leaveq rex.W ss int sarl rex.WXB fnstcw xor popfq out jge roll lret movabs iret xchg packssdw mov lret (bad) rex.WRB out adc fs xor (bad) mov mov push lret and (bad) push mov fstl (bad) movabs xor push (bad) addr32 (bad) (bad) movabs mov rex.X mov adc xchg rex.R rex.RXB and test xor push mov xchg in rex xorl mov rcll scas mov mov fcmovne pop movsb jns (bad) stos (bad) js out mov (bad) rex.R or rex.WRXB repz xor repz xor rex.WRXB xchg (bad) cmp push mov loop int mov lret xchg mov (bad) mov (bad) leaveq mov (bad) sarb (bad) mov loope in enterq fsubl (bad) adc in push ss jne movabs xor mov or and mov sarb enterq lret rcl mov mov in xchg vpackuswb or ss mov (bad) and and cmp rcl sub mov outsb je rex.R pop insb pushq add (bad) xlat enterw (bad) lock fs callq mov stos data16 sub rex.WX adc push mov jns cmp sub icebp pop jae cs mov jge (bad) pop adc gs sbb imul mov addr32 repz rex.WXB negb test adc int (bad) (bad) xchg xchg rex.XB (bad) (bad) stos and negl in rex.WRXB (bad) (bad) jrcxz mov scas in jae rex.R (bad) mov movsb retq and or js (bad) pushfq rex.WRB repz mov (bad) or adc movslq (bad) sbb pop (bad) mov sbb adc adc mov int rclb std xor xchg in in pop ja lret add (bad) movabs mov lahf jne lret rex.WRXB mov sbb ss pop jbe sub add roll popfq (bad) jrcxz cmp mov fild mov mov xlat xchg cmp loope (bad) (bad) insl push (bad) sub out movabs adc jge push cmp fidiv sbb pop leaveq imul fistl (bad) in rex.WXB xchg (bad) jno (bad) adc push xor rex.WX adc pop mov xchg rex.WXB rorb jo jp je mulb mov movabs cs sbb (bad) scas or (bad) pop jnp fild not mov mov push scas ja (bad) lods cli (bad) and push pop adc mov (bad) rex.RB mov fsts fdivrl or pushq orl ja xchg fiaddl imul mov mov pushq sub (bad) rex.X cmp rex (bad) or (bad) mov fwait outsl sub movabs addr32 adc adc in fbld push sub mov out rex.W (bad) retq pop mov clc xchg adc (bad) jle roll mov fwait popfq ror movabs (bad) and orl pop and (bad) fisubl and jbe xchg in mov retq leaveq leaveq mov sub rex.WX hlt out retq clc (bad) rex.XB fdivrs fnstenv mov int3 cmp rclb retq fwait mov xlat mov mov fldcw cmp lea jns pop or jo data16 sub (bad) js popfq data16 icebp (bad) movabs imul and or (bad) sbb jns popfw or (bad) cmpsl (bad) rolb rolb sub sbb stos iret cmp mov rorb sub sbb movsb cltd push (bad) jg mov mov (bad) pop fdivrs movsb rex.WB mov (bad) mov sahf (bad) mov (bad) (bad) mov push adc (bad) jmpq (bad) mov (bad) js rex.RB pushq pushq pop (bad) lret fnstsw (bad) hlt pop push lods cs sub push movq cltd cmpl jrcxz pop insl adc or pop pop out xchg push (bad) loopne pushq pop pop rex.X jmp imul cs std sub push lret xchg mov rorb sti mov movabs and push rex.RB xchg fldenv mov fisttpll cmpsl xchg mov mov rex.WRXB loopne mov mov cmp lods loope mov ror mov jl out jno rex.WB (bad) rcr (bad) (bad) data16 sub scas rex.WB stc xor mov (bad) rex.WB rex.RX (bad) mov rex.WXB rcrl xchg rex.WR or loop mov mov imul xor (bad) mov stc xor (bad) (bad) mov rex.WXB rex.WR adc xchg scas push mov retq push stos enterq mov out xor cmpsl cld push test rcl xchg movabs (bad) (bad) popfq jnp sbb push retq cmp mov out rex.XB (bad) (bad) mov cmc (bad) or retq mov and xchg (bad) or cwtl fwait (bad) jno push sbb (bad) hlt cld (bad) cmc mov cmp rex.WX push int (bad) retq or xlat popfq test lahf gs in pop (bad) loopne cmp clc adc imul mov (bad) jle ss in mov (bad) fstps pop test rex.WXB mov fdivr callq and outsb mov (bad) lods loopne sbb xor fild repz or fwait (bad) iret movsl imul xchg movl mov movabs pop mov pushfq iret or imul cmp xlat sbb lock (bad) and mulb and adc jle fistp cwtl (bad) sti retq std cmp push shrl mov (bad) pushfq push sarb rex.WRXB scas mov rex.RXB addr32 lock rex.RB addr32 xor sbbl enterq rex.X gs (bad) lret int adc mov cmp fisttpll cmp rex.WXB rex.WRB stos mov adc and adc loopne int3 or int (bad) (bad) (bad) (bad) cmp add (bad) (bad) fwait rcrl lahf ss push adc xor sti rex.WB pushq (bad) xor (bad) xor or xlat or add movabs (bad) lret addr32 gs xchg push xchg xor (bad) (bad) cmp xchg mov fstps xchg pop or rex.WR (bad) (bad) or (bad) mov jge mov repnz pop jp mov xor mov (bad) sbb (bad) pop sub cmc fbstp (bad) add rcll idiv stc (bad) out or jns push pop and or enterq push xchg and test decl retq pop rex.WRB icebp mov xor fsubl mov movsb xchg mov xchg adc sbb push cmp movabs pop pop in cmc jo (bad) jbe out movabs sub xchg pop adc decl lea jmpq popfq xchg stos cmp cmp jb add and ds fs adc and xor mov push xchg stc out (bad) repnz sbb fildll out pop (bad) (bad) rex.WXB shll pop pushfq mov jnp adc adc rex.WRB imul rex.WB mov xor movslq gs (bad) cmp and xchg ds sbb popfq dec jne addr32 enterq jmpq js addr32 adc (bad) rex.XB pop jnp imul sub add lret adc mov retq pop (bad) sbb in (bad) (bad) sbb fstpl and xchg jbe leaveq fsubs rex.WB mov retq pop mov xchg rex.B rex.RB pop xchg add cltd (bad) out xchg jno or neg lahf xchg mov stos rex mov pushq sarb jle pop jne sub rcl test sub jb pop out adc mov or (bad) ss shrl imul push outsb fldenv xchg std pop loopne mov lret xlat in or sub (bad) push ficomp (bad) mov movslq pop pavgb stos (bad) fdivs mov cs movsb cmp repnz cmp cmp lret sti fistpl rex.RX sarl jge jb int3 rex.R (bad) test cmp (bad) (bad) (bad) fcoms pushfq jo jge rex.WX rex mov sbb loop sbb pop wrmsr adc (bad) jnp (bad) (bad) ds jp mov xor rex.RX jmp stos adcl mov rex.RXB std xlat int lret ja leaveq movsl lret fcmovbe mov pushfq and xchg mov or pop pushfq (bad) fwait imul cli rex.WR mul xor (bad) push jb cmp sub (bad) pop sub orl (bad) sarl push or (bad) and xchg mov ja cmpsl pop xchg mov jrcxz,pt xor rex.R (bad) rex.WRB in cli hlt cmp (bad) adc rcl (bad) pop rex.WB pop ds jbe cmp lahf sbb sbb callq mov and rex.X (bad) rex.WRX add (bad) jmpq cmc sub push lret pop adc mov fs xchg add out (bad) mov fisubr stc movsb (bad) sbb out (bad) sbb movabs xchg rolb or lods addl pop mov mov out scas (bad) rex.WR fisttp (bad) retq xorl (bad) sbb mov jnp cmp (bad) fdivr jno pop (bad) jne rorb retq (bad) rex.R push popfq xchg push mov pushfq outsl andl fwait (bad) movslq in rorb mov fildll push mov sbb js sarb rex.WRX push (bad) lret mov pop andl mov out rex.WRX rex.W jmp mov and (bad) and jno cld xchg cmp int pop xor or (bad) idivl add sub or xchg mov mov es mov clc cmp out mov mov sub movabs mov movabs xchg adc or cltd rex.WB cmp cmp iret loop adc pushq js jl mov int xchg cli movabs xchg or and or iret outsl xchg cmp and jnp clc (bad) (bad) (bad) retq rcrb clc rorb rex.WB jae or push pushq mov out jne lock mov int3 jge jbe rex.RX in retq and push mov clc shlb scas add stos out cmp or cmpsl jb movabs push xlat ds push rex.RXB lret movabs or imul sbb and test add or push mov shl pop xorl push pop pop sarb (bad) mov out fcmovu (bad) mov ficomp lahf and mov mov (bad) (bad) add pop jle pop (bad) lret jp scas push cmpsl sub sub iret pushq test push je lret lods sti retq scas jnp push mov rcrb push add retq xchg xchg jns rex.RX rex.WXB imul insl rex.RX rex.WXB xchg xor (bad) addr32 fcmove (bad) sbb xlat jae test rex.WXB cltd mov retq (bad) std push sti (bad) (bad) ds stos mov cmp test jbe ror (bad) in sub or add rex cmp lock adcl pop sti retq mov mov outsb jp jnp ja sti adc push mov push cmp push addr32 cmp shlb (bad) gs pop xor xor pop rex.RXB sti (bad) fdiv sbb (bad) and out mov loope movabs (bad) jmp (bad) mov jle fdivl (bad) pop mov rex jp sub ficoml pop (bad) test mov cmpsb xchg xor cld addl cmp mov or pushq jp mov sub mov pushq iret rex.RB lret out icebp leaveq mov fs (bad) mov mov jp movsl ja (bad) mov jrcxz je stc cmp imul fwait mov pop cmp fnstenv movabs fsts (bad) xlat (bad) pop (bad) (bad) (bad) (bad) rcll pop (bad) rcll fcom iret (bad) pop (bad) int add mov leaveq ja (bad) (bad) retq test xchg mov mov mov mov mov rex.WXB scas (bad) mov mov (bad) sbb adc imul imul test adc (bad) es pop pop sbb (bad) cltd jno leaveq mov sarb sbb ja jae int3 (bad) push rex.RX imul (bad) add out rex.X push rex sti (bad) xchg popfq fcoms push and mov mov stc faddp and out jbe movabs rex.X andl rclb or fs xchg (bad) mov jp cld int3 scas mov jns mov cltd sub and xor testb mov mov mov rcll pop xchg shr lret rolb rorl rex.WRB mov clc scas mov cmp mov mov rex.RX movsb fnop out shr mov out (bad) xchg (bad) xchg and jp (bad) fnstenv sbb outsl jrcxz rex.RX out jge cs sti rcr rex.RXB (bad) mov mov ror or cmp xchg rex.RXB (bad) (bad) mov mov ror hlt xchg sarl xlat mov rex.WRB mov adc push xchg mov mov imul jns rex.R rex.WXB movsl lods mov adc popfq or jmpq cltd mov add xchg mov stc cmp xchg mov ja movabs mov xchg test push push jg (bad) int3 mov mov (bad) jne jae jns (bad) rex.WX imul imul imul lods mov push pop (bad) mov xlat lods mov rcl jg sbb (bad) rex.WXB rex.WB cmp cmp rex.RXB (bad) mov gs jg lods pop add sub iret in int cmp outsl (bad) scas js xlat (bad) cmp rex.WB (bad) addr32 (bad) cmp mov ja xor mov sarl (bad) (bad) (bad) (bad) rex.WXB sarl mov (bad) lret (bad) rex.WXB shll rclb pop sub (bad) sbb ficoml nop and out rcr adc shrb or stos adc imul (bad) shll lea push movabs imul es jrcxz loop push sbb or or retq notl and out stc sub (bad) test sar out (bad) push mov xor iret rcl (bad) mov rex.XB rex.RXB mov rcrl adc lret cmp pop leaveq (bad) mov adc scas and outsb (bad) jae incl fs (bad) outsb mov mov pop idivb sub test (bad) int pop jnp movsl or sbb repnz rex.RB jns or outsl jns movabs in pop sahf xchg (bad) (bad) cld cs addr32 fdivrl je in popfq adc adc cld mov insl cmp push ss xor xor cmpl jnp (bad) xchg sbb push rex.WB lock mov sub pop (bad) outsl hlt iret outsl jp and (bad) pop mov rcrl ja retq movsb jne rex.X shrl (bad) (bad) xlat iret (bad) (bad) out rex.RX jbe sub (bad) callq sbb cmc add xlat add sub sbb rex.RXB and xor sbb mov stos rex.RX sub movl test pop test mov popfq in sbb rex.WX (bad) rex.XB rex.W fxch (bad) insl adc lahf ss jl xchg pushq xchg and imul mov jo movabs cmpl xor stos shrl (bad) or fidiv (bad) out fwait mov (bad) loopne adc pushq in adc je (bad) pop bnd clc sar stos stos movabs repnz fsubr in mov pop popfq test scas scas loop jo push rex.WR iret cld mov fidivl cmc xor rex.WRXB adc (bad) lret insb mov add insb out loopne imul rex.W fcomi sbb and adc cmc jrcxz mov pop icebp rex.RX (bad) jae and mov sub icebp sbb mov (bad) cmp cmp (bad) cmp movabs test popfq rolb je in test mov mov sbb stc pushfq push sti rex.X jno cmp retq mov pushfq mov out pop mov pushq (bad) cld cmp pushq pushq jae out mov cmp pushq (bad) sti pop xchg test out in mov (bad) mull cmp addr32 pop fisttpll cmp test adc insl mov xchg mov (bad) xlat mov jns clc sarb retq cmp callq jnp,pt xor or adc xchg push xchg mov mov lret out sub (bad) or rex.WXB (bad) (bad) loop rex.WB (bad) jmp cli and mov jnp jmp or pop or or jno leaveq fxch (bad) jne sarl outsl sbb pop addr32 jno (bad) adc or sub adc mov cli retq xchg movslq and xchg movabs popfq movabs pop pop add cmpsl xchg std sbb cmp sbb fidivr shl or cltd xchg jae cmp subl xchg fldt pop icebp jmp xor mov jae (bad) (bad) rex.B lret out divl loopne loopne mov shr sbb retq adc mov adc movabs insl pushq jmpq or (bad) pop fs xlat xchg fistpl outsb rex.WXB xchg cmp (bad) (bad) push and repz in (bad) out cltd sub (bad) (bad) xor rex.RB mov (bad) fist adcl jne fwait scas (bad) jge rex.WB movabs imul mov (bad) jae cltd ss xchg (bad) retq mov sbb sbb cmp mov jp pavgb mov retq sbb (bad) add cmp fcom jmp (bad) (bad) stos movabs in cmp (bad) mov out xchg sahf jo rex.WRXB movabs jno out add sub popfq (bad) (bad) xchg stos movabs shrl push (bad) jae movsb and mov rex mov jns mov push out jnp stos mov adc (bad) (bad) mov (bad) xchg out jo xchg mov rex.RB lahf mov movslq repz mov iret imul xchg jae and stos add (bad) sahf lret xor test jns sahf int xchg rcll (bad) mov (bad) test fsubs (bad) cmp sar callq xor je stos sub sbb (bad) jp xadd pop rcl cmp rex.XB sar (bad) test (bad) cmovbe jb repz jmp addr32 scas adc (bad) loop jge rcl xlat jge test cmp add movabs mov jl (bad) fstl pushfq add fsubs mov mov movabs mov cmp mov mov cmp jmpq rcr in (bad) and cmc sbb jae adc jb add mov cld or mov xchg callq loopne iret ficompl cmp hlt xchg out loopne test stos outsb mov icebp loope rcrl nop enterq mov pop (bad) cmpsl retq pop in xchg push rex.B xlat in sbb stos icebp nop mov test mov pop (bad) icebp fidivl sub mov mov ss xlat cmp stc push mov fcompl (bad) (bad) (bad) mov (bad) fisttpll sbb pushfq movsl pop movabs mov sbb fs sub iret btr (bad) int3 mov xchg (bad) (bad) retq mov popfq (bad) mov stos and jrcxz cmpsb lods fs ja leaveq jbe,pn sahf mov jmp jb (bad) xchg ds lea mov jnp or (bad) mov fistp cmp test out fiadd mov pushq mov test xlat jl (bad) pop icebp and or cld mov pop mov rex.B push pop mov loope xor fucomip (bad) pop adc rex.R jrcxz (bad) mov jne (bad) mov mov icebp leaveq (bad) sbb loopne pop and test (bad) (bad) mov xor jae rex.RXB pop jmp pop rex.WRXB out rex.WB xor cmc addr32 pop mov mov jno fwait insl cmp pop clc add out popfq (bad) sbb adc fimull add test fdivrl iret xor xlat or push ficoml push rex.WRX repnz imul pop retq and rex.WXB scas pop pop hlt mov xor (bad) es sub cmp rex.WB ror fildll (bad) jno test enterq repnz repz sub mov rorb and (bad) idivb js fcomp adc and xchg sub pop fsubrl (bad) nop mov lock jrcxz (bad) xlat sbb xor (bad) cmovbe js mov movabs (bad) mov lret rex.XB xor fcomps mov rex.RB jo loop push adc nop (bad) sub (bad) stos (bad) cmpsb xchg (bad) retq rex.WRXB xor or mov push sub rclb rex.RX rex.WRX mov rex.WRB mov addl sub (bad) or rex sbb push jrcxz ds pop retq push mov (bad) movabs mov and lret push mov rorl mov push rex.RX mov retq jnp adcl sub jae std popfq movhps xlat mov stos retq jmp stc retq pop cmpl mov pop (bad) sbb int3 pop xorps lods ds cmp push mov rex.XB movsl movsl cmp in clc je cmp cld (bad) testl rolb mov mov xchg xor (bad) in mov js movslq (bad) (bad) xchg lods rex.RX xrelease callq xrelease (bad) out idiv enterq mov out jns cmc add movl retq push sbb sbb push (bad) xchg pop and mov (bad) add fs adc scas mov loope movsl cmp push movslq (bad) sbb imul push cmp loopne js rcrl adc sub rex.WRXB mov and sahf leaveq xchg gs lock mov mov cmp sbb hlt (bad) (bad) push xchg fidivr rex.WRB pop fs pop xor jae sti and rex.W (bad) sahf fcomps rex.WRB rex.RXB fsts pmullw xor (bad) lahf cmp xchg mov repz (bad) rex.R xlat cmp scas rex.WXB push out rex.RB rex.WX addl push add push pop ja out and std (bad) pop in sbb test mulb (bad) insl push pop out lods stos xor (bad) mov (bad) xor popfq insl xchg adc lods rex.R xor mov xchg xchg adc shr (bad) rex.R lret push and xchg shrb fiadd movsl cmc xchg adc psllw fnsave je cld mov xor sbb pop (bad) xlat mov jbe jb outsb callq fisttp jns mov mov xchg and sub mov rex.WRXB test rcr sbb rex.R rex.WRB push cli (bad) mov jmpq rex.X out mov clc paddusw rex.R es data16 jno std cmp pushfq xchg ds rex.R (bad) cmc sbb jb (bad) (bad) rex.W fcompl movsb mov adc repz xchg (bad) mov icebp push (bad) adc sub mov pop or stos enterq add pop jge outsl movsl xchg xor (bad) popfq shrb (bad) insb (bad) rex.RX pushq stos repnz or or ss and jnp cltd sbb (bad) (bad) mov push mov sahf (bad) mov gs rex.WRB rex.WRX mov mov sub cmp int sarl rorb (bad) (bad) adc push in leaveq mov (bad) xor retq leaveq xlat jl iret jno gs (bad) divl lret int3 lock and xchg mov (bad) adc (bad) outsb adc cmpsb cmpsl notl rex.WX mov push lret (bad) push rex.W cmpsb imul ds in movslq pop pop push (bad) xchg adc loop pop xchg rex.RB fistp jg mov rex.XB iret test (bad) adc sub rex.WB (bad) insl test test test (bad) lods cmc jmpq mov fsubp mov rcll fcmovu mov adc (bad) pop push lock pop movabs mov add mov fsubr (bad) movabs iret mov jbe mov sbb std es xchg (bad) sbb (bad) fmul stos pop fdivrs xchg jle mov pop pushq mov jb loope int (bad) divl in leaveq fist mov shrl mov pop enterq push jne,pt adc (bad) rorl int3 mov int cmp mov or movabs stos sub mov cmp (bad) jnp sbb sub rex.WB ficomp in stos rcrb pop mov (bad) mov (bad) mov ja nop xchg push mov cmp (bad) pop mov fbstp push pop cmc or ja fadds or xchg mov pushq in out in scas xchg outsb mov adc mov mov movabs cltd adc sarb fptan (bad) push push mov pop xchg mov (bad) cmp adcl jb push cmp jnp jbe,pt clc mov clc stc jns add or xchg mov fcoml (bad) (bad) mov pop (bad) cmp lret pushfq rcl pop push cli (bad) pop sbb jae mov push pop add pop sbb xlat movabs and jbe testl cmp outsl xlat jns retq movabs mov mov rex.WRX xchg or or sbb gs push rex.WXB cmpsl cmpb and cld and push cmp mov sbb stos jrcxz or test (bad) adc test cwtl lahf (bad) sbb jle lods mov (bad) mov sub rclb jle movabs rol (bad) lods sbb and sbb jno (bad) (bad) rex.WRX fwait pop sub sub movabs xchg fcom mov jns rex.RXB (bad) insl sbb or sub movabs movslq adc (bad) jg clc sub out out rol rex.WRB int scas pop cwtl adcl jo (bad) cmp sahf mov ds push add js (bad) adc pushq (bad) push loopne mov mov or mov mov jnp xor (bad) and clc (bad) pop xlat (bad) mov cmp push add retq rex.RB rex.RB stos xchg xor or retq (bad) cltd cmp retq sbb stos rex.RB pop lret cli rex.RX (bad) pop adc stc pop jns rcll fldl rex.WB insb test cmpb xor fimull add (bad) repnz jae (bad) add mov in andl pop ss push cmpsl (bad) adc cmp and jle imul movslq rex.WR mov rcrb imul sbb mov sub (bad) cltd ds xor pushq xchg loop xor adc adc (bad) adc mov sbb mov (bad) xor sbb xchg jo (bad) sbb (bad) gs xchg rex mov jne add mov sbb rex.W pop addr32 xor rex.WX push mov or cmpb sarl leaveq movsb and (bad) pop push (bad) add test rex.WRX xchg int (bad) jmp rex.R (bad) xchg cltd pop cmp pop fistpll (bad) xor sbb pop (bad) jo sbb lahf fcoms lret cmpsl imul divl and mov xlat rex.R rex.RB or pop cmp rex.X (bad) movabs cmc mov (bad) xchg rex.WRXB iret sub sti imul cmpsb movabs rex.RXB (bad) sub sbb int3 stos (bad) fnstcw rcrl rex.W insl fstpt movslq push cmp imul leaveq (bad) jl sbb repz cltd (bad) jl hlt jae (bad) push sbb (bad) ja mov sub add mov rclb sarb stos mov xor rex.X cltd mov mov mov jle out (bad) rol rex.RB ss rex.R je cmp sarb (bad) jmpq mov adc leaveq lret imul imul outsl test jnp mov lods (bad) leaveq (bad) insb add movl in out loope xlat cli pushfq mov cld ror fwait rex.WXB sbb mov fstpt xor retq sub int enterq sub jb enterq xchg (bad) xor repz shl pushfq repnz rex.WRX lods loope rex.RX sub jp mov cli idivl xor pop sbb scas imul pop rex.XB movabs lret push iret ficoml (bad) lret fimull push jp int3 cmp imul (bad) retq rex.RXB xchg retq rol xchg push jnp outsb fs or or repnz imul (bad) mov mov (bad) xchg mov jno rex.RB repnz push mov (bad) cmpsl mov cmc movslq ja cmp lods xchg mov (bad) push loopne mov push rcrl mov push mov push push mov push (bad) mov js xor push movabs (bad) nop cmp or or xchg (bad) lret addr32 rex.R rex.X adc lods movabs xchg data16 jmpq jrcxz mov loopne xor cmp (bad) adc cmp (bad) (bad) shrl (bad) cmp fild (bad) (bad) mov sub movslq adc jae add out (bad) pop sti (bad) mov jg (bad) rex.RXB mov shrl mov push mov mov out (bad) mov jrcxz and adc in (bad) mov or mov adc ja mov sbb jle xchg pushq imul (bad) xor rex.RX ss sahf sub mov (bad) xchg (bad) xor mulb and stos (bad) fucom shll mov out imul rex.B fimull lea mov movabs fldcw jg pushq cli sbb xchg sarq cmp jbe rex.WRXB (bad) jb mov adc (bad) (bad) xchg rex.WB adc adc cmovle xor rex.WXB lods fsin sbb or movabs push sti push xchg jnp cmp pop leaveq fdivl (bad) rcll push cwtl fbld mov sbb xor xchg sbb in push mov rex.R sub jne rcl sbb (bad) mov xor jb cmp mov mov js cmp fmuls in (bad) lret xor sub (bad) push mov cld (bad) fmul ss fbstp pop in stc xchg (bad) in rex.WB rex.R (bad) hlt mov test sbb shl mov adc lock lret addr32 loop push (bad) mov (bad) (bad) setnp pop out movsl (bad) jo std movslq test add loopne or sbb outsl rex.WRX xor (bad) (bad) (bad) cmp icebp pop rex.R cltd andb add jl jnp (bad) std pop iret mov mov adc adc shl (bad) or pop (bad) int cmp mov rcl fadds int3 rex.WRX (bad) imull pop push gs rcr iret subl pop jne mov repz and mov mov imul rex.WR imul pushfq iret outsl jb (bad) rex.WXB sti pushq int xor (bad) jnp add (bad) or idivl movsl push rex.X pop push popfq shll and and cltd and or stos enterq (bad) ds fdivl leaveq movslq retq add (bad) push retq push jnp mov (bad) cmpsl (bad) jb rex.WB xchg cmp (bad) pop mov cltd push es stos (bad) jne cltd pop shrl rcrb mov fdivl insl push mov pop xchg fdivr std out (bad) (bad) out rclb jnp sbb test test fxch mov (bad) cmp mov fcmove (bad) rex.WXB fist pop jge mov cmp sbb push and leaveq pop fimull stos cmp (bad) xor mov jno fs cwtl push (bad) callq int cmp lret ja xchg pushfq push and cld mulb (bad) imul mov cmp rex.W rex.WXB jns mov push ja rex.WRXB movsl lods shrb xchg pop mov or sub cmp add sub movabs add xchg rex.RX xchg cmp outsl mov jno fcomps sahf es stos push pop jae cmp lret (bad) push cmpl (bad) mov sahf sbb fcmovbe pop xchg xchg mov iret add shrl lahf and (bad) rex.WX loop (bad) cltd je in rex.WRB lock xchg lods jbe lret out jns rex.R mov mov mov mov mov rex.X (bad) out cmp rex.WRX xchg mov adcb cmp mov (bad) jne in lods mov mov xchg test gs nop in cmp jge (bad) lret jns outsl (bad) fmuls leaveq mov imul retq mov cmp mov movslq add (bad) mov decb rclb hlt (bad) push (bad) sbb cltd mov (bad) xor test pop cmp xor jnp movabs and rex.WRB or fimull imul xchg stos outsb rcrl sbb (bad) and mov jo notl lahf adc (bad) xor js push stos add mov rex.RXB addr32 test mov cli xchg hlt mov rcll xor sub (bad) mov rex.WRB jb je rex.WRB rex.WR (bad) xor cmc xchg scas (bad) outsl (bad) fidivrl mov mov (bad) and mov (bad) rex.RXB jbe sub stos (bad) sub cmc add cltd decl (bad) sub rex.W rex.B rex.RXB lahf outsl mov out rex.XB rex.XB push mov xlat push pop (bad) sub and sub mov retq shr lods (bad) int shrb (bad) enterq (bad) push push stos xchg mov js push popfq mov (bad) rex.X (bad) (bad) je (bad) add xor (bad) push push movabs push push rex.RXB test push icebp and test jae jmpq test sbb xchg push loopne push xor jl (bad) xlat (bad) test (bad) xchg pop rex.RXB nop retq push sbb (bad) pop jns mov mov movslq push repz cmpsb xchg push (bad) iret jbe hlt mov (bad) leaveq sahf jbe sti push (bad) je cwtl outsb insl push lock (bad) cmp cmp xor mov pop movabs popfq (bad) rclb (bad) push xor cmp test test (bad) jbe (bad) pop (bad) icebp xor (bad) xchg (bad) cld cmp fisubrl (bad) lret cmp rex.WRX push mov movl imul (bad) cmp cmpsb shrb stos mov (bad) mov (bad) xchg mov or rex.W movabs (bad) cmp leaveq xor mov mov (bad) icebp push rex.XB (bad) lods mov ss mov mov retq rex.B mov pop (bad) (bad) mov movslq mov xlat (bad) pushq push (bad) fstl xlat xchg test imul (bad) cmpsl push scas push mov jo pop sbb sbb mov pop (bad) mov stos xor xchg lods jrcxz (bad) pop jo ficomp pushq pop mov xor push jmpq scas rcr (bad) rex.WX cmpsl loope rex.RB shlq ficom out lahf out insl xor movabs and notb cmp xor xchg imul rex.RXB adcl rex.WRX gs sub rex.WRXB rex.WRX sbb xlat push xchg and pop rex.RX or xchg push loop sub (bad) mov (bad) (bad) mov shrb cmp jmpq cmp rex.WXB rex.WB pop mov xchg jns (bad) lret (bad) xchg mov xor sub inc sub mov shrb fild xchg (bad) outsl xchg mov rex.WRXB xor (bad) xchg lret mov mov (bad) (bad) cmp movabs mov add subl je imul jnp (bad) data16 rex.WB xor xchg mov (bad) cltd xchg pop jno mov ja cmpsl stc roll (bad) xchg sub sarl lret (bad) xlat pop iret insb xor in cmpsl cmp ja (bad) jne testl mov xchg jge push mov rex.WXB xor mov enterq mov mov rex.WB rex mov add addl outsb imul mov loopne std (bad) js (bad) mov cmp adc test (bad) mov push (bad) outsl retq rex.WR imul jne rex.WXB xchg hlt mov pop push rex.WXB (bad) movabs push vpsadbw in (bad) mov cmp cmpsl loope out rex.XB rex.W sub rex.RB (bad) jo push sbb scas (bad) rex rex.RXB clc xchg sub jmp xchg mov (bad) cltd xlat (bad) (bad) sbb cmp outsb rex.WX sarl cmpl in outsb cltd xor (bad) cld (bad) test shll leaveq (bad) jg imull mov js pushq cld sub jae (bad) mov jne loope lods loopne (bad) (bad) rex.WRB rex.WX add mov clc rorb fadd clc iret repnz mov push cmp or pop push rex jnp (bad) out mov rex.XB rex.XB mov lret xchg push mov jp stos movabs rex.RB rex.WXB rex.RXB rex.WRB retq xchg jns pop mov jmp fistpll test rex.WXB and loop jge mov add jne (bad) adc xchg cli nop and clc lret stc jbe cltd sub in (bad) mov xchg xchg xchg xchg jns add mov mov jo sub es in and xchg test pushq mov ja mov mov callq rex.RX fwait adc rex.RX pushfq cmp rex.WXB out retq cmp lret sub (bad) cmc jns or mov sub lret repz rex outsl roll ja movsl nop movabs jae imul (bad) xchg rex.B out rex.X (bad) (bad) mov stos adc rex.W lock sub mov (bad) adc in rex.WX adc enterq (bad) stc cmp push leaveq ja jbe ss or mov rex.W repnz movabs insb (bad) mov or cmp xchg gs icebp outsb stc leaveq addl sub roll lock rex.WRX jae sub leaveq xor mov movabs xorl rex.RXB mov mov movslq rex.RXB (bad) roll mov sub movq test rex.RB mov rex.RX xor xor jno pop (bad) roll mov mov mov (bad) lahf (bad) movabs nop rex.RXB outsl or leaveq mov (bad) xor (bad) icebp rex.RX rex.X pushq (bad) lea (bad) jns idivb adc sahf fimul and (bad) movabs js and rex.RX rex.WXB xchg int mov rex.W rex.RX rex.WXB xor (bad) lea (bad) mov int adc mov or test or xor adc push repz (bad) outsl adc jb (bad) cs xor xor sub cmp mov rex.W addr32 ficomp jge sti mov scas jp stos leaveq add jnp (bad) cli mov addr32 (bad) rex.WRB add orb gs push (bad) leaveq (bad) sub (bad) pushfq idivl pop test cltd adc addl (bad) (bad) lret sub cmpsl push ja sub (bad) xchg enterq clc rex.RB sbb jbe rex.WRX mov hlt lea cmp (bad) sub (bad) jg jge fsub movsb adc adc (bad) push rex.WB xor jbe loope xchg cwtl (bad) sub xlat shrl jle insb sub lods stc out add movslq pushfq fistpll sbb cwtl (bad) cmp (bad) mov xor cwtl lret rcrl in andl (bad) adc fisubl jp,pt push in out jle xor pop (bad) or fs movabs stc jo xchg rex.WR mov out sub sbb cmpsl (bad) stc cmp (bad) cld callq jne (bad) lret (bad) xor test addr32 xchg retq sahf and lods cmp push rex.WRB rex.B lahf (bad) (bad) int retq negb (bad) rex.RB lret pushq (bad) mov int js rex.WRX shrb sbb addr32 (bad) xor adcl pushq repz leaveq movabs out and scas jb mov out fstpl mov test (bad) sti jnp mov out sub test (bad) or scas out jrcxz (bad) test addr32 xor notb addr32 mov rol push rcl xor in xchg gs jae jb cmpsb je icebp (bad) jmpq mov clc fist adc int3 (bad) or adc rex sub loop adc (bad) mov pop out xchg lea out xor xor shrb push test (bad) icebp addr32 test xchg (bad) stos adc xchg adc cmp rex.WB js or (bad) outsw lret stc fnstsw jns (bad) mov mov jl add scas movsl and cmp xchg hlt rcrb outsl sbb sub insl test jae jne movabs or loope (bad) jbe shrb movabs cltd fadds rorl xchg scas out callq fdiv jnp out or (bad) (bad) out repnz iret mov xor xor (bad) idivl xlat xchg pushfq cmp sbb or (bad) sbb jp mov sub adc es sub es jnp adc (bad) mov adc xchg ss push (bad) add lahf mov push (bad) cmp (bad) and sahf cmp sbb jmp rex.RXB iret (bad) sub rcl loopne (bad) jle sbb (bad) jne pop (bad) fimull pop repnz xchg cwtl (bad) lret fsts or lret jle enterq lock mov adc cmp (bad) or xchg (bad) (bad) rcll xchg sbb fidivl (bad) (bad) repnz test cmp vmovdqu cwtl (bad) push rex.RB (bad) sahf rol mov cmp (bad) xor and out (bad) out add mov jg movabs ss mov push cs adc push add callq cltd push (bad) (bad) test (bad) mov out or jp xor fcmovbe mov push push or retq push (bad) fiadd mov mov lods clc movsb or divb movb jae loopl sti out sbb pop cmp fcoms lock sbb add pop mov xchg mov adc xchg (bad) jae mov fucom jno adc cld outsl rex.RX (bad) (bad) pop and cmp fistpl rex.WRXB addr32 fisttp rex.WR rex.X jge in rex.R jo repz cli lret retq rex.W (bad) fnsave and outsb jnp testb mov rex.WXB lcall xchg sub outsl adc movabs addr32 hlt popfq pop (bad) (bad) loop adc jle mov fnstenv loopnel xchg (bad) lret jmp out (bad) jns movabs pop (bad) out cmp sbbl rclb (bad) pushq cmp test or xor adc data16 pushq pop int out (bad) (bad) mov jl leaveq rex.XB mov mov rex.R shll rex.WXB enterq retq divl sub cmp ss sub add loop,pt jne sub xchg loope,pn lods mov rcll adc push add addr32 rex.XB movabs jae (bad) pop xlat data16 rex.WRX rex.WR or push (bad) cltd movsb iret lods jl int3 (bad) pushq xor pushq movsl movsb (bad) push loope jne pop (bad) sbb movabs fstp andl cmp cmp mov mov rcl jg pushfq push pushq cltd std jno scas cltd lahf mov fnsave cmp (bad) stc push test pop cs pop pop mov insb xchg mov sbb cltd test mov icebp fisttpll imul sub popfq sbb out push cmp or movslq imul pop frstor mov sar sbb int sbb rol rolb and rex.RX lods fs mov adc je mov and mov ja mov rex.WX loope pop (bad) jo rolb or xchg iret rex.XB int3 idivb in jge (bad) xchg sub cltd out (bad) addr32 xor mov (bad) movabs iret adc je cmp cs leaveq (bad) mov mov xchg cmp mov scas rex.WR mov mov int3 (bad) pop jae (bad) pop (bad) fdivl fsubs xchg sti xchg movabs scas leaveq popfq shlb rex.WRX or push iret gs xor jnp clc cmp xchg test push adc adc rcll push jb (bad) flds out in push shrl adc mov loope mov int adc ficom push pop movabs xorl iret clc fisttpl mov cmp (bad) (bad) mov adc xor (bad) fimull adc (bad) lods cmc (bad) ds fwait sbb jnp cmp mov shrb jns cmc enterq sbb clc (bad) and mov lret mov test (bad) sbb pop mov imul test mov cmp jae and addr32 ja cmp pop cmpl movslq xlat lods sub (bad) stos addr32 mov xlat pop (bad) xchg (bad) pop cmp mov movsb imul movslq ss (bad) and retq jns xor je pushq lret (bad) adc std hlt shll rcll adc jns sbb xchg (bad) sbb jnp rex lret jge sub sub cmpsb xchg rex.WRX test ss fistl iret pop xorb push xlat push out fiaddl mov sbb fcmovbe mov rex.R fcoml mov adc add and (bad) xor (bad) and sbb ffreep fiadd movabs icebp leaveq (bad) mov xchg in (bad) push (bad) mov ja stos rcll adc or rex.WXB icebp sahf and lret movabs xor (bad) xorb pop jrcxz leaveq out mov frstor xchg xor (bad) mov shrb stos (bad) pop xlat lret push push push addr32 movsl cmp lahf stc cmp sub jp loopne enterq mov gs es cs imul sbb pop movabs sahf fcomps mov xor add (bad) xchg push pop out (bad) out hlt pop mov mov rex.WR movabs push mov (bad) (bad) iret fnstsw cmp cld fadds (bad) int mov add ds pop lods mov pushq sbb fcompl pushq cmpsl (bad) (bad) mov mov movabs jbe rorl sub xor jae sarl rex.XB out xor sahf mov mov rex.RXB xchg jrcxz (bad) ja (bad) pop ss xchg lret rcr leaveq flds (bad) pop loopne pop hlt (bad) or add (bad) push cmp out sub sbb lahf (bad) out mov cmp movabs pop mov xchg shl clc pop (bad) xlat and mov push addr32 lret jae cmp jne lahf xor cs (bad) mov rcl mov rex.X ja cmpsl ja sbb add scas pop (bad) leaveq sub jl pop nop fstpl test imul (bad) movabs lods add retq jb xchg movabs (bad) rorl sub mov stos mov xchg decl xchg js mov adc movsl (bad) popfq mov retq mov fiadd ficom lock add and insb (bad) cmp mov pushq (bad) pop rex.WB jno fsubrs pop lods and pop outsb lahf rorb (bad) add (bad) xor push lahf mov lahf rex.XB mov stos (bad) (bad) roll (bad) scas jmp and sub xor and sbb pop mov mov adc mov push jle test xchg rex.RX retq test jo lret test enterq adc ds mov push sbb mov (bad) cmp sub fmuls fimull mov adc pop xchg adc (bad) iret (bad) xor push adc (bad) popfq shr push movabs mov rcll addr32 mov lahf shll test pop rex.RX mov ss in outsl push mov pop mov push mul push es pushfq push mov (bad) mov fdivs stos rex.XB test mov (bad) add (bad) lods rex.RX out icebp adc jns cld pop retq (bad) adc mov loope mov add cmp (bad) mov xor xchg and ss in pushfq pop adc mov jns and pushq fdivrs movslq fldenv pushq rex.W (bad) rex.WX cwtl (bad) enterq jp popfq fcoml mov jrcxz fwait sbb imul sbb (bad) lret adc sbb rex.XB mov (bad) movslq cmp rex.RXB sub cltd movabs xor xor mov mov xor addr32 out xor jl jge sub jbe cwtl xor (bad) rex.WX xchg and (bad) movsl es (bad) xchg add outsb pop rex.WRXB repz pop push js rex.WRXB or loope std fistl or leaveq pushfq mov (bad) addr32 out mov mov push js nop or roll sbb stos xchg xor jrcxz (bad) ja imul scas sarl xchg pop scas jne push adc retq movsb rex.WRB add (bad) in push sub mov iret and or jae repnz xchg rorl rex.XB int3 rex.W xlat mov repz cmp ss lock pop adc mov out xor (bad) lret cmp clc (bad) xor jbe,pt loopne movsl ficoml adc stos pop (bad) xchg and hlt (bad) adc outsl push addr32 data16 (bad) jge sub sbb mov addr32 sbbl or xchg lock xchg push sub (bad) mov (bad) cmp addr32 cs lret rcll xor rex xor imul js xor jae callq xchg (bad) (bad) mov in xchg xchg fstps outsl (bad) sbb lahf nop mov xchg (bad) cmp or (bad) (bad) sub cmp hlt out out jge jb (bad) mov xor icebp jns adc adc scas (bad) pop mov xlat mov xchg loopne fstl out rcrb (bad) pop mov movabs cmp pop and subl rex.WB rex.WRX in (bad) sub jg cmpsb out (bad) and jb ficoml loop and mov jb test (bad) mov xchg out pushq sbb fcmovu in and or scas (bad) mov and test or sbb xchg (bad) cmp adc xlat fisubl sti retq push sbb xor xchg rorl lock xor jle mov pop rex.WRX psubsb and mov mov rex.R add out fstpl pushfq (bad) and (bad) sarb mov cld movsl lock jle mov jrcxz or enterq jo and pop movabs iret push (bad) (bad) xchg insl out pavgw (bad) push (bad) push rex.WX mov movslq and pop pop cmp xchg int3 sbb push (bad) es adc (bad) movslq movabs cs ja faddl xchg jae sbb rex.WX cmp notb imul icebp test mov (bad) enterq mov movsl or (bad) lods (bad) out sub addr32 rex.RXB adc fwait add (bad) pop rex.WX mov (bad) sub push xchg movabs enterq sub and xchg pop rex.WR movabs mov rex.WX lahf xlat movabs sub xlat movsl in (bad) icebp jae movabs xchg cmc mov movsl iret adc js jb pushq es out mov test jb rex.RB rex.RB rex.RX retq xchg mov mov js jbe (bad) mov imull xor lock push rcl or (bad) cwtl sub xchg shufps rex.WX cmp xchg mov int3 lret retq scas pop cwtl mov lret (bad) out pop popfq lods (bad) lea rex.XB (bad) rex.WRB and cwtl (bad) rex.WRB pop sub addr32 ja mov cmp (bad) sub cmp addr32 retq jp mov adc pushq lret ds movabs push rex.X jo cmp cli push xlat out fisttpll pop nop ficompl (bad) repnz fwait add in push fcmovb pop add jp lods lock or mov lcall push xchg sti (bad) sbb lcall rex.W std push xchg idivb sarb cmp and pop repz (bad) (bad) sbb shrl rex.WB jno mov in rex.WRB retq loopne imull xchg negb (bad) xchg (bad) xlat (bad) hlt rex.R mov (bad) fstps cmp (bad) mov out (bad) (bad) jae ss pop jl ds xchg push mov addr32 or mov leaveq mov gs out repnz outsl addr32 movslq (bad) jl rex.R rex.WXB ds movslq pushfq jmpq pushq movabs xchg pop mov push in shrl push (bad) jg in enterq sbb mov add sti addr32 rex.WB stc jae rex.WRX add (bad) cmp fcoml mov pop leaveq (bad) pop rcl loopne jl push seto out jl pop mov jl imul repnz sbb imul mov lret and mov rex.WRXB (bad) mov cli fs lret cmp or push (bad) es pop std push xorb sub subb fwait in mov push mov fwait cmp sbb fidivrl lods cmp stos movabs cmp (bad) sahf rex.WB in or push retq movabs and es (bad) jp sbb (bad) fs fiaddl scas jbe pop sbb rex.R imul rex.WX retq dec subb sti adc jae xchg sar jp push imul out sbb mov jp rex.RXB shlb scas sahf pop outsl roll std pop shrl or pushq mov sub es fnstsw mov decb lret pop cmp (bad) jnp adc (bad) cmp rex.XB movabs (bad) jl imul sahf push cli xor rolb fmull stos scas test xchg (bad) mov push movabs popq and gs sahf (bad) fwait jge imul rex.X sbb cmp (bad) fildll in cmp iret or push cmc addr32 popfq pop hlt (bad) ja adc leaveq xor rex.RB lock js rcll pushfq rex.WRX mov retq jo divl scas lahf pop rorb sbb outsb fmul sub fidiv sbb stos adc mov push addr32 pop and mov cmp pop js fwait sbb cmp mov fcompp movabs js pop rex.RB stos pop test (bad) xchg leaveq addr32 (bad) fisubl jb lea adc rex.WXB out (bad) (bad) popfq push cmp ficompl lods sti mov rex.X fwait rex.W retq pushfq xchg mov in xchg sub (bad) cmp out icebp int adc (bad) mov push xchg rex.WRXB nop (bad) pop out xchg movabs pop jrcxz rclb (bad) or jbe mov (bad) (bad) sub rex.W rex.WRB (bad) outsl add (bad) stc xor cld sub movslq outsb rex.WXB pushq (bad) repnz xor mov mov (bad) mov mov iret (bad) and cmc add (bad) lret cmp out rex.R imul js (bad) push pushq lock movabs xor rex.WR mov mov rorl scas add adc test xchg retq fcoml sbb mov fcomps fs fstps callq loopl (bad) cmp loop adc rolb cli out pop iret rex.WRXB rex.B addr32 scas cld loopne rex.RX push in (bad) (bad) es out cmp push sti xchg cmp sub mov addr32 or fdivr jrcxz mov rex.WR rex.WRB clc pushq cltd sbb mov sarl pop jp (bad) (bad) data16 jns je jp cli (bad) and or lret (bad) add cltd jge movsl push or out rex.WXB fwait sbb rex.RB fdivr (bad) sub fs clc (bad) negl sti lahf xchg xor movabs fs xor rex.WRX movabs or (bad) (bad) xor sbb movabs push insb in xchg push scas rex.WRXB sti movabs mov jb sbb pushq (bad) out adc rex.WR cld leaveq clc pop fimull movslq rex.WRX scas pop rex.WB rex.XB stc jl (bad) cmpsb pushq rex.WX out (bad) pop shrl mov or movabs xchg cmc gs sub scas addr32 ds (bad) orl xchg rclb xor retq pop (bad) lock mov jns xlat movabs rex.XB (bad) mov movsl fidivl fs ds jno cmp fistpll xchg or out push pop sti cmp lods pushfq rex.WR jns (bad) rex.WXB addr32 xor (bad) mov jno adc sub sbb imul movabs sbb jne rex.RX xor push pop xchg cwtl (bad) push push mov sbb xor ficompl loopne xor or jns and mov sub xchg fnstcw iret xor pop mov add and (bad) push or (bad) pop repz fsub xchg insl (bad) (bad) sub xchg xchg callq fidivrl (bad) (bad) cmp imulb or sbb or fild popfq mov (bad) flds lahf (bad) push rex.RB lods enterq retq addr32 mov rex.X rex.RXB rex.WB rex.WX shr xor mov rex.WXB stos out fsubrl (bad) mov loopne sub lret insb cmp (bad) movabs mov cmp mov shrb notb push (bad) in (bad) sbb push lret lahf xor push sbb xor fwait movabs outsb (bad) addr32 push mov xorl pop sbb enterq mov mov (bad) mov xor xor jbe mov cmp rex.W dec (bad) and jb in ds or mov add and adc adc jo mov leaveq jae sub cli jle movsl cmp (bad) mov jmpq and (bad) fwait rcrb movslq rex.WXB out pop lret (bad) xlat xchg sahf rorl rex.WXB mov scas movsb in rex.WXB mov jmpq pop js ss fldcw xor (bad) lods ja ss insl cltd rex.RXB cs lret fisubl (bad) xor mov rex.RB mov out retq rex.X loopne in mov sbb out (bad) sbb stos pop (bad) (bad) cmp (bad) mov sub movabs xchg rex.R outsl fs xor jp fstps fcoms fldenv jge hlt stc outsl or fcomps ja mov (bad) sti sbb sbb subl cmp stos pop lock sub lods mov shlb loope fcoms fwait rex.RX mov jrcxz cwtl sub mov adc cmpsl cmp int sub add cmpsl xor lahf pop sarb pop adc xchg (bad) jl jbe mov rex.X out in es fmull cli loopne movsl mov clc jrcxz jns test addr32 shrb mov jrcxz (bad) fcoml stc xor cmpsl xor and xchg sarl cmp jbe mov cltd int cmp adc add (bad) cwtl scas adc out movabs movabs or retq sub mov (bad) clc xchg sbb pop fs stos xchg rcl and rex.WRXB lret jbe lahf fist sub movabs ss cli cmpl cmc fmull push (bad) push adc xor subl fwait mov adc (bad) retq icebp fbstp icebp std (bad) or movabs xor sbb in rex.RB mov out sbb cmp mov rex.WX xchg in mov rex addr32 movabs push fwait (bad) push rex.R (bad) jnp jp,pt movabs mov jo push imul lock shrl jnp pushfq pop push hlt rcrl movsb sub xchg (bad) mov out stc xchg add std push cli (bad) xchg push xor xor pop cltd outsb and sahf and push jae adc out rcr mov mov fsts rex.WX rex.X cli movsb (bad) (bad) (bad) fisubl jrcxz jp mov (bad) xor push (bad) add (bad) mov rcrb (bad) rex.WRXB fldt data16 xchg push and or push rex.WR adc (bad) pop mov xor mov or jne jge scas cwtl ss jmpq ss cmp (bad) cmp mov xor (bad) mov retq xor pop xlat (bad) (bad) mov js pop (bad) cmpsl cmp cmp mov in (bad) (bad) (bad) adc xchg xlat mov or sbb cli iret mov mov pop movabs mov ds mov shl sub ss mull cmp rorl mov or mov sub scas fcomps test in sarb jle test jno rex.WX outsl (bad) (bad) cmp jp jmp jne jge mov add lahf iret stos ds push jle repnz sbb out and int rcll (bad) sbb rex.WXB leaveq cmp mov jae jmp cmpb (bad) sub fdiv jo (bad) movsl (bad) mov xchg rcr jbe out mov rex.B test lret jnp (bad) xor pop adc xlat rex.WRB (bad) xor (bad) adc push sub (bad) in mov mov (bad) adc jp icebp xchg add rex.WB cmp movabs (bad) xor push xor in clc cmpsb int xchg mov (bad) (bad) (bad) cld out mov fsts ja cmp push addr32 cmpsb gs rex.WR fwait and mov push xor push rex.RX xchg mov (bad) fsts mov and mov adc push stc push (bad) data16 fnstsw or and out xor sti sti (bad) xlat cmp addl rex.W loopne lods hlt push mov pop clc out or (bad) mov rex.RX jp pop movl pushfq rex.RXB js jno clc cmpsl movzbl xor (bad) cmp out and rcr sbb ficompl jrcxz loope ja jg cmp jne movabs jae ds and ja out xor push loopne xchg adc xchg rex.R rex.W fsubrl rcr mov mov mov (bad) add rex.RXB mov cmp movabs xchg xor pop or xchg imul rex.WXB rcll push (bad) leaveq lret push cwtl jbe (bad) rex.XB enterq add add fnstenv outsb mov (bad) sqrtps (bad) pushfq out stc pushfq test mov xchg xor sarl retq (bad) xor xchg in jl fcmovne fcmovu stos (bad) mov test js xor clc pushfq frndint movabs (bad) pop (bad) sub (bad) (bad) mov adc mov pop or loopne xor mov cmp mov je xorl in cli jmp fucomp mov cmp lret rex.RB rex.WB (bad) pop movabs pop lods jns cs fs mov sbb adc in enterq int3 (bad) xor jp mov lret mov (bad) repz rex.WRX sub inc push add jb ror or rex.X pop or mov in jne fs lret mov push ss jne jmp int mov and setl nop xchg push mov pop in lock (bad) jo rex.XB rex.WRX or rex lahf mov mov test (bad) cmp jge jbe and and test loopne push sbb out idivb rex.W nop in movabs or stos (bad) scas test data16 (bad) icebp rex.WRXB lea lret or and lret mov sti sub flds mov jp xchg sbb xchg loopne and mov xor rex.R insl mov (bad) (bad) (bad) and jb (bad) test stos (bad) push cmp rex.WX callq std addr32 flds test shr (bad) add idivb imul cld rex.RX (bad) mov rex.RXB rex.R andb mov (bad) or adc loopne rex.WB and out and cmpsl cmp decl adc retq xchg test movl rex.WRXB push lret ja xchg xor cmp fistpll lret xchg ss cmp pop cmp and rex.WX sub sti stc (bad) stos xor mov fldcw pop cmp pop (bad) cmp cli mov mov loopne rex.XB ja add mov sti fcompl in xchg outsb fwait adcl xor rex.WRXB (bad) loopne (bad) loope lret imul jae test movsl int3 fs sbb lret xchg or xchg or pushfq (bad) pop js rex.WRB xor cmp cmp mov mov xchg gs lods loop (bad) (bad) out xchg xchg rex.WRB cmp xor lods out rcrl (bad) (bad) fimull ds push xchg cwtl stos pop (bad) sub test (bad) fimul push mov (bad) outsb sub ja mov sub mov ja xlat movsl rex.B add sub rex xchg xchg mov jne cld insl rex.XB xchg scas cmp mov lret pushfq (bad) pmuludq rex.XB mov xchg hlt (bad) mov mov (bad) xchg cs jns cmp addr32 fsubrs and (bad) data16 sahf (bad) lock in sub xchg push rex.XB cmp sbb xchg scas push test movabs sub mov add (bad) mov enterq movslq cmp or out jbe outsb push js xor pushfq jns cmp sbb ss iret jae ficompl jno pop adc imul retq sub outsl sbb pop jnp outsb and jmp ja lods (bad) sbb lret fstpt jns,pt (bad) out mov xor stos jae outsl (bad) (bad) mov mov or (bad) (bad) jae jns (bad) rex.WRB lock rex.RB sbb xchg stos rex.WRXB addr32 push push rex.WX lock fnsave sar rex.RX rex.WR sub and sub (bad) sahf ja push or push notl test js fcmovnb repnz mov iret mov mov out xchg test (bad) cmp jrcxz rex.WX push jnp pop pop add ja pushq adc pop (bad) loop,pt (bad) jbe rex.RX adc mov (bad) rex.R rex.W mov or adc pop (bad) sbb js adc jo (bad) out adc xchg js jbe or movslq push jno jmp mov mov (bad) cmpsb (bad) jnp (bad) pop leaveq rex.W lahf cmp rcrl push in (bad) (bad) sti jp pop out push ds sbb sub fwait ds iret push adc rex.WRB rex.RX jno loop rex (bad) push mov fsubrl sbb jno out xchg cmp xlat jrcxz sbb (bad) addr32 lock push (bad) cmc test (bad) push repz sub rex.X jmp iret jo cwtl adc sbb clc rex.WR loopne pop jp,pt push clc in mov add (bad) cmp out (bad) retq (bad) andl mov jbe leaveq std rex.WR es (bad) in xchg pushfq icebp mov mov icebp xchg adc fwait std adc adc rex.WRXB xchg jnp (bad) out adc addr32 add stc cwtl rcl stc cmpsb rex.WR cmp lret (bad) insl (bad) mov and insl mov cmp mov xor fdivrl rex.B (bad) xchg in jmpq repnz loopne xchg adc xchg cmp xchg mov rex.R (bad) pushq jb pop xor mov in xor movslq (bad) sti ds xchg or xchg xchg movabs rex.WR or or (bad) xor rorl (bad) test hlt cs ja int3 jbe (bad) movabs xor add push lock cltd test xchg and sahf pop in shrq nop jb rex.RXB or shrl adc leaveq out cmc mov insl retq xchg add or push lea push (bad) leaveq xor ja shr rex.WX mov xor js mov pop (bad) add jnp cmp push xchg (bad) push rex.RX shlb and pop mov mov mov cli lret lret and (bad) andb pop jne add imul jmpq jne scas out rex.WR (bad) mov (bad) push mov mov pushfq pop jno shll data16 mov ds jne enterq rcll out jmpq or pop (bad) loop cmpsb cmpsb adc repnz and xor notl xlat xor (bad) push cltd in test std adc fsubrp rex.B and faddp (bad) sub jb fs shlb fldcw cltd out shr cmpsb negl lods or xchg jnp lret mov mov fsts and lret (bad) out retq sar push sbb out adc mov (bad) and pop xchg push rex.XB cltd movabs cmp or insb rolb insb add rex.RX jmp fwait pop retq movabs sbb rex.WRXB retq cmp seta mov rex.WRX movabs xchg mov (bad) sarb pushfq stos (bad) test iret push sbb rex.WX fdivrs out xchg push xor push push mov retq cltd push out movsl jp (bad) jae es repz adc cmp (bad) (bad) fistl mov lcall out mov out repnz lcall rex.WB add testl out rex.WB adc fcoms (bad) sbb xor fdivrl cmp adc xor rex.RB (bad) add callq sahf sub xchg jne movabs rcrl in push sub (bad) clc cmp cmp cmp push push xor xchg mov sahf push cmp rex.WXB pop fsts sarl sbb fcoms movabs mov (bad) fcmovu stos (bad) push (bad) sub xor push (bad) (bad) jmpq fdivrl rex.R jne repnz lret rex.WRXB out notb movabs jmp xchg push (bad) out rorb mov push leaveq stos movabs leaveq and mov sbb pop jno out jo (bad) mov xor cs pushfq rex.WRB rex.B jp movabs mov fistpl rolb xor push xor rex.WXB cmp getsec xor mov (bad) movabs iret movabs callq rcll pop (bad) push (bad) mov rcll neg cli rex.WXB mul (bad) hlt rex.XB add jnp mov cld std mov jnp addr32 mov sub stos insl (bad) cmp and loop sub sbb (bad) rex.RX cmpl test xchg and rex.WRXB rex.RB cmp nop shl stos adc push rex.RX pushq cltd push adc fnstenv (bad) (bad) std xchg fcmovu repz sarl nop imul fyl2xp1 mov pop pop movslq mov in and fcmovu mov cmp andb mov mov (bad) movabs (bad) xor and mov sbb rcrl push cmp (bad) retq jne rex retq add emms test cmp sarb retq push jbe sbb sbb pop notb addr32 popfq out repz jp movabs cli (bad) rex.WXB stos sbb icebp cmp (bad) sti and (bad) cli xchg out mov movabs scas clc adc icebp push (bad) callq cld (bad) push xchg (bad) fnsave jnp shlb push (bad) scas fnstcw ja movl add cmpsb lods pop jp leaveq fwait adc sbb jb mov imul vandnps pop ss xlat push ljmp add sbb add adcl mov movslq pop sbb out movabs add rex.WRX test int3 ds rex.WB icebp and clc ficom xlat push pop jg jnp rex.WXB (bad) jl retq and (bad) pushfq cmp xchg and jbe add rex.X data16 testl rex.WRX xchg or add sbb fcoms test pop loopne outsl (bad) jae sti stos cltd and sub mov jp repz xor rex.WR sub movsl mov shlb divl (bad) test jle (bad) lods and stos xchg xlat sub leaveq or add push stc packuswb sti out fxch rol out enterq hlt sbb and negb nop lahf rex.RB jl (bad) (bad) and or movabs jl push lret callq (bad) and js push rex.WRX mov cwtl out lret mul jo (bad) not add pushq mov add adc addl test push push adc (bad) outsb lret out add retq mov test sti rex.WRXB sti mov out (bad) jbe (bad) mov cli rcrl sbb std lods pushq xor pop addr32 rex.B xchg test sbb jno sbb pop rex cs cmp (bad) rex.XB test cwtl adc jo mov sarl mov xlat rex.W fcomps loop movslq (bad) mov pop movabs mov (bad) (bad) (bad) popfq movabs rex.RXB cmp jle (bad) and stos xchg sub imul xchg fnsave out loopne mov mov cmp rex.X js xlat (bad) vaddss (bad) pop add sbb cmp inc hlt rol (bad) test jb rex.WRB xor cmpsl es out push cmc push cmp jb xor adc cmp mov pop sbb jle int3 movabs and push jle gs sbb mov or leaveq lret cltd (bad) mov sub jle (bad) movsb cmp lret mov (bad) mov xchg movabs mov rex cwtl int cwtl cld cltd lret pop mov (bad) pop out cmp jge (bad) rex cltd rex.WRXB js fsubs xlat (bad) and clc pushq (bad) stos in jb ja jnp xor sub xlat lea leaveq insb pop enterq hlt (bad) xor retq movslq jnp out xchg adc sbb callq es movabs (bad) cmp fdivr (bad) (bad) jg repz leaveq sub sub push roll in cmpsl rex.RX movabs (bad) in jp (bad) sti mov (bad) mov xchg xchg sub retq mov scas (bad) movabs and orl (bad) (bad) movabs and (bad) adc sub push jb mov push (bad) cmp add and icebp pop (bad) lock pop movslq in rex.WR mov add js mov adc mov add hlt mov hlt lret decb pop std mulb push rex.WXB xchg out mov pop lret jg in rex.WRXB mov in psllw jrcxz rolq push push idivb imul gs (bad) movabs pop fnstenv rcl xchg mov insb pop push movsb shrb out (bad) jb or sub jb js rex.WRXB (bad) repz cli sti jmpq rex.WRXB fyl2x add xchg iret in mov sbb rex.WRXB rex.WX cmp imul loop rex.RX pushq cs xchg ja mov negl cli adc rex.WB jae push jnp hlt (bad) (bad) cmp sub movsl push outsb cltd fsubs jae rclb fadd and sar xor jbe adc (bad) push cltd sub divb clc add rex.WR pop push repnz pushfq out lods push and rex.WB mov jnp cli xchg lock (bad) shlb (bad) sti mov imul mov out pop fld jp,pt (bad) (bad) and test rex.WRXB test sbb adc jb (bad) (bad) push in rex.RXB (bad) xchg out test movabs divl (bad) push retq lret rex.WB shlb (bad) out fnsave lret cmpsl out rex.WRX rex.WX push in insb push psubw shrl movslq (bad) cli shrb xchg rex.RXB mov test mov rex.X xor cmp adc mov pop (bad) mov rolb rex.WXB push cmp fist lret rex.XB jbe xor xlat push cmp cmp enterq push and fnstenv xor (bad) (bad) (bad) (bad) out rex.WX mov mov fcoms loopne jge cltd cs pop xchg mov adc gs pushfq xor stos loopne and test sbb xlat (bad) (bad) scas cli xor ficoml pop rex.W ss in pop (bad) shl (bad) out or cmp test mov fisttp insb jns xchg xor rex.WRXB rex.X xor rex.R mov add mov jnp (bad) cs fdivs rex.WX (bad) (bad) sub (bad) add (bad) fistpl out (bad) xor jrcxz fstpt addr32 mov (bad) (bad) push rex.WRXB jp rex.WXB pushq pop cwtl mov lret imul (bad) pop cli ja iret push mov in mov mov sarb out cmp insb mov hlt xchg in fist rorl (bad) movsl push movslq (bad) mov xchg movabs jbe mov (bad) xor (bad) adc (bad) (bad) pop sbb in push mov cmpsl cli imul mov rex.WRXB sbb xor cmp mov jmp fsts pop (bad) sarl rex.WR xchg jrcxz sti xor imul xchg retq mov notl enterq mov xchg and scas jbe (bad) lret rex.WR rex.RX rex adc pop (bad) loope push lock ja jbe (bad) iret and outsl mov jb (bad) xor popfq out pop sbb sub rex.RB mov pop stc mov (bad) jae clc enterq pop and or pushfq rex.X cli sbb mov movsl (bad) (bad) add (bad) lret cmp imul (bad) jmpq retq je pushq mov jo jne push loop rcl sarl mov retq adc mov (bad) fidivl pushfq xlat lret shlb fidivrl mov mov movslq js fcmovb rex.W lock and pop and sbb add rex.WR fwait data16 add mov iret fnstenv rex.WX out xlat pop sbb jns add xor cs lea shrl je pop adc test loope pop xlat (bad) fsin cmp lret mov (bad) jae lahf loope pushfq (bad) adc movabs lret mov sub sub (bad) movabs xor rex.WB callq data16 xor in mov add cli fdivr mov rex.X fucomi jmp push ja lods fistp (bad) out sarb pop (bad) repz (bad) sar out test (bad) lock (bad) lods push (bad) imul pushq pop xor (bad) add outsb loop (bad) mov xchg sahf sbb jl xlat mov cmp ja mov xlat adc xchg cltd xchg rex.RXB rex.WRX mov ror jns cmc adc add rex.X rex.X je sahf adc xchg jb mov xlat data16 out vcmpps nop push leaveq rex.WX rex.RB idivl xchg (bad) mov int mov pop (bad) mov (bad) mov fs adc cwtl jne scas outsl fistl scas (bad) sbb hlt mov adc bswap cmp sbb cmp adc sub xchg jg (bad) jbe outsb xor jbe adc leaveq out int3 callq (bad) lret sahf leaveq and rcl (bad) ja cld push (bad) jbe pop add movabs adc xchg (bad) ja movslq mov outsl xchg sbb repnz stos mov xor cli xchg xchg (bad) mov sub xchg lods mov (bad) adc cs jmpq movabs (bad) sbb test sbb sbb pushq (bad) (bad) (bad) jrcxz rex.R push cmp and je pop addr32 ds fldcw insl (bad) mov mov push (bad) ficompl xchg data16 outsl jb shrl in jo jnp rorb movabs xchg setb sub adc push mov lods jp mov xchg lret rex.WRX add add jl (bad) jae repnz jp xor mov (bad) addr32 xchg lret sbb xchg xchg es jnp (bad) lcall (bad) addr32 rex.W outsl mov push sti fcoms lea mov (bad) (bad) jbe cmp scas mov imul addr32 mov (bad) retq mov jl movabs fcompl fsubs rex.RX rex.R jnp addr32 callq adc sbb sarb rorb out ds ficomp (bad) nop push (bad) xchg (bad) callq rex.WRX mov or lret fstl fdivrs stos mov xchg cmpsl (bad) shll jmp jne xchg mov stos push xor (bad) push (bad) xchg mov incl rex mov stos callq loop sub cmpsb mov movabs jae (bad) test leaveq add push movabs xchg scas xlat rex.RXB jrcxz mov push callq cltd sarl sti (bad) out push rex fsubrl ja rorl push (bad) movslq push sub add cmp data16 sbb rex.WRXB or adc lahf (bad) xor fcoml push test mov (bad) rex.WX fs rex.X cmp or (bad) xor rex.X int3 push xbeginq xor mov (bad) rex.WB rcrb (bad) push ja mov and pop xor in push in insl sarb sbb retq add mov rol push cmp ffreep cli outsl rex.WR addr32 rex.RXB fwait fwait sub rex.WRX rex.WXB retq rex.WRX hlt xlat add and insl (bad) es mov xchg movabs fs xchg pop lea jb and xor iret fsubrs sbb add push add or push sbb rex.WXB xchg movslq movsl push push outsl (bad) pop fild cltd (bad) sub pop push fsubl jnp out stos rex.RXB sarl lret out rex.WRX mov adc add and addr32 test sbb push fcoml rex.WR sahf mov pop test cmp rex.WXB fwait (bad) xlat (bad) (bad) rcl rex.WXB or jmp rex xchg and iret xchg sbb insb fs clc (bad) mov push stos sub stos xchg scas (bad) add mov rcr push addr32 rorb retq mov and (bad) rex.WRX data16 sub (bad) sarl pop mov mov sub jae cmp pop adc fwait shrl out or test mov rex.RX retq sub sub push pop retq out sarl rex.WRXB mov (bad) push push mov std xchg rex rex.RX xchg mov rol (bad) stos int xchg cmp mov xchg pop or jae xchg xchg ja pop sarl lret sarl (bad) lret adc sbb (bad) test mov lret (bad) jmpq es push movabs mov enterq rorl pop rex.WXB jno rex.RXB xchg xlat mov (bad) addr32 pushq push push adc retq stos sbb iret stc xchg jle imul lock xor push xor sbb mov xorl pop in xchg lret xchg shrl mov insb stos (bad) mov (bad) and push pop negl in (bad) mov retq xchg mov cmpl pop (bad) rcrl pop leaveq (bad) mov mov movabs cmpsl (bad) (bad) int ror (bad) (bad) stos xor rex.WR rex.WX imul cmpsl rex.X fwait (bad) mov test push fdivrl repz cs hlt adc mov sub movabs sahf rex.WB cmp callq js cltd cmc (bad) insb outsb push adc orl add (bad) xchg (bad) sbb mov movabs lret sbb shll xchg xchg ja cltd lret or mov sti addr32 ror lret (bad) (bad) lret rex.WX xlat (bad) out jns mov sahf retq movabs adc xchg rex (bad) (bad) sbb mov out (bad) mov sub (bad) movslq (bad) mov mov mov fidivrl xlat imul jns push and lret adcb cltd scas repnz scas (bad) (bad) lods mov sub ds movabs mov in and and xor xor cmpsb clc and pushq mov outsb push sub push jle lret not xlat jp iret cli scas rex.RX (bad) stos enterq test out rcrl adc (bad) mov lret adc addr32 (bad) rex.WRX (bad) test test xchg (bad) mov insb lret (bad) addr32 adc mov mov fisubr mov adc lahf lret shrl (bad) and mov mov cwtl xorb (bad) test lret sbb lods lret stos cltd cmp lods movslq cmp std sub data16 movslq stc rex.WXB jns in adc rorl jno and or rex.WR repz rcrb mov rex.X (bad) enterq (bad) push (bad) rex.WRXB out test rex.WB rex.WB (bad) jbe shrl rex.WRXB fdivp mov pushfq rex.WXB pop test jae jns rex.RX mov adc xchg movabs jp rex.RX in adc rex.RB fisubl rex.WB rclb (bad) rex.R sti mov rex.WRB jae (bad) retq cltd mov jnp (bad) orl or test movabs xchg push hlt jae (bad) cmp jmp ficoml jl (bad) xor jg push rcrl (bad) mov imul jno xchg mov stos jrcxz xlat mov std push rex.WXB (bad) mov sub jmp xor roll (bad) pop fisub test fisttpll rcll imul and jae or mov or mov xlat lret out outsb jae jo xchg jnp fnstcw jb pushq rex.RB movabs rex.WRX jne rex.W push adc lret (bad) mov iret rex.WRX mov fwait sbb (bad) vpsubd test insb leaveq imul mov fldenv mov (bad) push rex.RXB fisubrl pop lret rex.X ds sub lret cmpsl xchg iret push mov (bad) pop addr32 shrl adc mov mov xchg push (bad) rex.WXB mov mov xchg mov (bad) push or out pmovmskb (bad) rex.WXB rex.WRXB pop out test sti xlat imul mov mov int frstor roll mov (bad) mov mov jmpq jae ja sbb (bad) fstpt ja pop fbstp rex.X pushfq jge (bad) pop jg sbb jl lods fwait lahf scas xlat cld ja jnp insl subl cmp xchg push popfq imul movsl add out test mov movabs icebp or rex.WRB jmp rclb xchg (bad) fisub cmp sbb cld cli cmp nop push mov rorb out and pop repz push and xchg movabs out addr32 rorb shrl rex.WR nop xchg rex.WXB stc cmp (bad) cmp addl rex.WB (bad) push add movabs xor fdivs jae mov mov (bad) mov lret xchg mov retq (bad) rex.WB sub pop jmp js mov (bad) or xchg outsl jge int cmp add cli rorl imul xchg pop repz adc test sub push std out jns xchg out jns pop and fwait mov (bad) push movsl lret (bad) rex.WRB rex.R (bad) shrl xchg jle pushfq test mov (bad) (bad) rex.WRXB int3 or mov pop rex.WRXB es push mov mov jns push adc (bad) lods or fldl int and (bad) pop and callq jmpq jmpq jmpq je sbb shld sbb push movzbw lea mov test neg jae shld sub jmpq rex.WR rex.WRXB (bad) jo or movabs cmp pushq ja (bad) pushfq mov fwait rex.WX jae lret rex.RXB mov (bad) (bad) imul stc pushfq or xchg cmp clc rcrl rolb mov mov push test mov outsb push rex.R int3 (bad) (bad) push addb mov cmc jmp fstpl lahf mov sub rex.WXB jg rcrb (bad) add (bad) mov lods jbe outsb (bad) (bad) (bad) cld rex.WRX (bad) cmpsl fdivrp (bad) (bad) (bad) cmp and add xchg fdivl cmp add mov iret mull add add pop test popfq (bad) and lahf rcrb mov adc jp loopne insl cli jmpq lahf scas sub sbb mov mov in fimul movabs xchg xor cld cwtl cmp mov fidiv in test jmpq jmpq movb test clc jmpq push repz out xor test test add mov and fsub nop gs xchg rex.WXB fwait lret (bad) (bad) (bad) stos fcoms hlt out faddl cs (bad) cmp rex.WXB or (bad) mov loope sub addr32 movabs jnp jno flds mov rex.WX fwait adc sub (bad) sti add (bad) (bad) std (bad) xor sbb (bad) scas jns (bad) ja mov push lahf rex.WX sub rcrb jmp callq test rex.W (bad) imul (bad) dec rex.X push mov cld sti retq js xor and sbb sahf mov (bad) movabs out rex.RX cmpsl adc movabs retq nop mov rex.RXB mov out std xchg pushq jmpq xchg pop jl rex.B push cltd fsubr xchg xor (bad) mov retq mov add fisttpll test and jnp mov fsubrs (bad) lods movabs (bad) push jrcxz sahf (bad) and scas fwait shrl (bad) int pop (bad) pushq (bad) mov mov sub mov mov mov test (bad) xchg out lods push jbe sbb out xor mov push push rex.XB fstpt int rex.W rex.B mov pop out (bad) jne fwait fwait add sub addr32 (bad) icebp (bad) data16 xchg test enterq (bad) mov pop mov jnp imul addr32 mov scas scas rex jmpq jmpq clc or jmpq (bad) cmp out mov adc mov (bad) test lods out mov stos hlt jmpq cmpsb cmc jo outsb add or (bad) xchg pop pop (bad) movabs and sub xlat rex.WB notb jmpq jae clc jno movslq jle rex.R (bad) cqto movsb mov adc (bad) (bad) (bad) cld (bad) jp clc imul (bad) incl (bad) cmpsl rolb (bad) lea jne push or xor (bad) mov test mov or rex.X push xchg rex.RXB std shr sbb cs xchg rex.W xchg loop negb rex jae cltd mov movabs jle cmp retq (bad) mov nop jl jmpq jmpq pushq jmpq jne jmpq adc rex.RXB rex.RB xchg movsb (bad) jrcxz es adc addr32 jrcxz push add mov fcomi outsl in sub not imul cmp scas repz in int or in (bad) jg (bad) (bad) pop (bad) fs xor sbb pop push rex.WX loopne imul js movsb cld lods xor subl (bad) (bad) (bad) sti (bad) jb clc imul (bad) inc movups movabs xlat mov roll add add lret add jl pushq (bad) pop push push (bad) divl mov mov (bad) pop mov pop cmp lret jno (bad) lock test (bad) insb cmp adc mov gs lret cmpsl popfq rex.RXB pop adc fs adc jne sub enterq rex.R rclb rex.W data16 in add mov cmpsl js adc push and (bad) mov je mov push cmp fisubl (bad) loopne lock cmp lret out cmp repnz lock in sub fidiv movabs mov (bad) (bad) (bad) sti (bad) hlt cmp cs (bad) (bad) std leaveq xchg test mov leaveq mov pushfq loope (bad) xchg push mov (bad) (bad) (bad) (bad) jae or xchg roll pop movabs (bad) (bad) (bad) xchg xor bnd jo mov sbb jg mov lock push fstl mov pushq xlat mov (bad) mov movabs fdivrs push xchg insb (bad) fsubrl (bad) xor jrcxz (bad) sub stos xchg sti mov pushfq xchg rex.RX movabs add (bad) cli out rcrb push cmp mov sub mov and movabs (bad) mov insl in jne lods and mov or rex.X jnp mov mov pop adc cwtl int rex.WXB push loope rex.RX mov rex.X (bad) (bad) sti std fsubl enterq (bad) mov xor outsb icebp (bad) out or jg loopne add add (bad) test clc movabs add rex retq repz (bad) xor retq push lock out out jns jp (bad) data16 cs int3 lock fild movabs mov sahf scas mov fiaddl stos cwtl in xchg (bad) jbe pop (bad) fisttpll sti imul out (bad) cmp lret (bad) stos adc (bad) mov out adc leaveq callq (bad) insl mov push cmp and (bad) or fadd xchg sahf test add fmul scas stos int stos adc mov xchg sbb movabs (bad) std xor xchg rex.WX loop and pop xchg leaveq mov pop or mov (bad) pop jl retq (bad) xchg add cwtl stos shl fs jrcxz std movslq lods (bad) mov or out test jl and cmc jmpq movabs fcomi rex.WRB xor andq iret mov js outsb push add add pop (bad) fmuls xlat addr32 adc fwait mov (bad) lahf int3 rol cltd addr32 out subl cmp gs (bad) (bad) (bad) xchg in mov jnp (bad) cs icebp push sbb lret fwait xchg xor sub repnz rex.WXB add (bad) mov jae outsb (bad) rex.B push (bad) rex.WRXB cwtl add fwait mov negl (bad) punpcklbw pop mov mov (bad) sbb push pop xchg push fwait mov sarb movsl es callq mov mov xchg mov cld sarl in ds test sub xchg (bad) adc sub rcrl (bad) (bad) clc mov rex.RXB cmp sbb cmpsl (bad) (bad) (bad) decb scas adc add pushfq rex.WRXB add or test cmp in (bad) (bad) pop adc and xor cs (bad) cmp mov callq add out or sbb (bad) rex.WRX test (bad) jrcxz xor retq mov mov (bad) leaveq test callq add pop movl (bad) (bad) jnp mov (bad) (bad) jp push pushq cwtl (bad) adc push in iret cld loope xchg rex rex.WX sub movsl (bad) rex.WRB rex.WR mov fimull sub movabs xchg xchg mov xor (bad) (bad) (bad) int (bad) (bad) pushq add sub push cmp push out jns cld pushq andl mov or mov rex.WRB ss cmp hlt pop rorl pushq in rex.WXB loopne rex.R mov and or add jmpq callq jmpq ja inc rol rol add sub bswap shl add not sbb movzbw mov sar mov clc jmpq ja clc ss pushfq int3 add add mov mov and add mov nop xchg pushq cmp movabs mov hlt (bad) (bad) insl cmp rex.XB (bad) mov (bad) fnop out (bad) xor (bad) add rex mov negl xchg sbb and std ss std pop rex.WRB sbb (bad) (bad) sti xchg mov (bad) decb jp jmp add (bad) in or outsb mov jno incb pop (bad) (bad) (bad) dec jbe or cmp addr32 lret in xchg rex.WRX mov sub mov or xchg rex.WRX sub xorl (bad) mov mov nop rex.RXB xchg addl bt shr mov rol add lea test btc sar mov movzbl adc setbe add xor bsf rol ror movl dec bsf mov stc stc stc cmp jmpq jne stc jmpq ja cmc bt bt imul stc add jmpq callq shld rol rcl add btc rcl mov test bt cmpb jmpq test test push cmc sarl pop cmc loope movabs gs jp jg sahf (bad) xor imul jg add cwtl rorl sub or outsb test jg jns mov (bad) xor (bad) gs mov lret (bad) (bad) insb rex.X add push (bad) rex.R shrb xchg sbb cmp movabs jae ja adc or sar (bad) and nop jrcxz lret cmp (bad) in sub xchg mov mov cmp (bad) decb (bad) (bad) (bad) (bad) xchg adc fldcw repnz out rex.RB rol (bad) (bad) mov sahf scas mov ja pop outsl lret fsubrl xchg mov fsubrl jnp xchg movsb xchg add mov pop imul push sbb (bad) rex.WX movabs (bad) mov cmc sub jmpq jmpq je xchg mov mov xchg xchg mov lea jmpq test add jmpq callq jmpq rep bswap pop jmpq sbbb movabs pop jl or (bad) cmp (bad) scas js lock jbe xchg (bad) outsl add jge out sbb (bad) pop cmp int mov (bad) popfq lods nop iret mov xchg lea gs (bad) (bad) cwtl outsb roll add clc test jle mov in cmpsl (bad) mov jle mov or rex.WRB rex jmpq cmc (bad) in popq jp and (bad) stc sahf incb cmp idiv (bad) (bad) cld or (bad) (bad) dec rex.R addr32 sbb enterq add or add add rex.WRB rex jp sbb sbb pop xchg xorl jae mov pushq cwtl sahf (bad) adc and and sbb jrcxz (bad) pop rex.XB pop out rex.WRXB (bad) jmpq jmpq jmpq add jmpq setne and rol mov cmp and cmp add jmpq jmpq je lea bswap xchg lea jmpq or rex.RXB adc pop rex.W jb stos neg retq mov or or or movslq cli cli in retq jnp pop pop gs mov lret addr32 mov lock out xchg loop mov hlt rex.WXB cmpb movsb xchg rex.X pushq fidiv (bad) sbb mov fsubs ds mov xchg std (bad) imul (bad) and (bad) rolb mov mov push bsf scas and xchg cmpsb rex jl push jbe rex.X xchg mov mov fisttp fcomp adc cmp pop jle mov test callq cmp sarl mov in fisttpl adc sbb in xchg cwtl pop sarb push callq std outsl lret pushq jge mov (bad) (bad) xor jo adc rex.WRB (bad) (bad) sti xchg xchg (bad) (bad) push and fnop jae rolb rex.RXB (bad) pushfq movabs retq pop xor xchg (bad) (bad) (bad) pushq fbstp rex.RB mov xor (bad) sub in retq popfq mov lods mov adc rex.RX rex.RXB movsb mov (bad) pop cmc xchg idiv mov (bad) rorl (bad) (bad) (bad) mov mov mov fadd repnz xor rex.WXB xlat xorl or scas std push je jp jb mov fisttpll mov (bad) loopne xchg jae in pop test movzbl jl pop cmp xchg (bad) outsl jg jb scas test cwtl push xchg mov rex.XB or or rex.XB mov cmp (bad) (bad) cld rex.WXB (bad) decl xchg cld fadds data16 mov (bad) (bad) (bad) fcoms fucomi (bad) test (bad) movabs jo pop movl out mov cmp xor jge data16 add jmpq sti push mov icebp add (bad) pop rex pop rex.B rex.WXB lret xchg (bad) jle xchg rex.XB (bad) movsl rex.WXB es push rex.WRX mov mov lea setns not mov lea setno not mov jp mov not jmpq mov jmpq jmpq (bad) sahf cmp int3 sub frstor lods sbb mov xchg (bad) mov adc and mov mov nop (bad) fucomip loop or (bad) sbb in cmp cs mov outsl cmp rex.WB rex.R movabs sbb push sahf add jmpq rclb iret cld loope mov or mov jae jge retq hlt lret scas enterq jmpq repnz push xor (bad) (bad) xor cltd and pop adc xchg addr32 (bad) (bad) cld fmull (bad) lcall mov xchg leaveq xlat je adc (bad) pop pop lea push paddd (bad) mov lods shlb push (bad) ss jnp (bad) (bad) insb stc xor adc or gs cmc sbb out loopne (bad) mov callq cmp dec and add btc movzbl and rcl mov stc bt cmpb jmpq jmpq jmpq jmpq movzwl bswap movsbw movzbw mov lea jmpq callq mov bt add not mov clc cmpb jmpq jmpq je bt add jmpq jmp sub (bad) mov and pushq flds jnp adc pushq adc test (bad) out loope lret icebp fiadd retq fucomp iret xor xchg cltd mov rex.WB fwait adc (bad) movslq (bad) int3 rex.RX (bad) pop pop out fldt (bad) sti (bad) xchg mov (bad) (bad) (bad) incb int3 in xchg retq (bad) (bad) mov jp addl movsb pop pushfq lea cmp jae sbb lret xor loopel out xchg retq jg test movsb stos test (bad) int sbb (bad) or jrcxz add add push rex.WR js (bad) cld push sub xchg rex.XB xchg and orl int3 mov nop test adc and icebp stos test (bad) shrb jle add mov rcll movsl rorl pop cmp fwait rex.RX xchg adc icebp scas adc flds pushq (bad) xchg push jl pushq (bad) int lods movabs adc xor iret pop add (bad) imul fisttp add rex.B rcll xchg fwait rex.WRB mov faddp pushq iret notl (bad) mov (bad) std or hlt sar (bad) std xchg cmp push and add rorl add or mov xor add (bad) push xchg (bad) lret adc rex.RB cmpsb rcl mov (bad) jge sbb loop (bad) rex.RX jrcxz sbb (bad) movslq cmpl and adc scas lea orl mov rcrl retq not xor sub rcl stc rol mov jmpq outsl rex.W addr32 mov jne iret cmp movabs mov (bad) lods rolb mov orl outsb mov add cmpsl int (bad) and push (bad) in mov imul push (bad) bnd and push (bad) lods lret clc mov add test mov (bad) fidivl (bad) sbb or mov fs (bad) (bad) sti pop adc (bad) (bad) sbb add adc (bad) (bad) rex.WRX lret (bad) lcall loop (bad) mov out (bad) test rolb movabs (bad) jnp je (bad) gs lock mov fdiv stos sti push pop rex.XB (bad) (bad) test (bad) retq rex.RB adc jmpq cmp jmpq jmpq jb bt clc cmp jmpq jae jmpq jmpq jmpq jne jmpq jae jmpq cmp jmpq jmpq jne cmc mov shl add mov sub shl mov clc bt test bt sub jmpq js ja movabs xchg je jnp movsl cli test iret mov cmp rex.WRXB movsl shl jge or callq out fdivr mov (bad) rolb jne decl fisub xchg sub pop (bad) (bad) mov sbb cmp fs popfq (bad) pop push xor mov cmp cmp mov addl sbb lock sahf data16 cli jge (bad) (bad) cld sbb (bad) (bad) (bad) fdivrl rex.X out add add pop rex.WR push jns or (bad) jmp jl (bad) cli out jmpq and repz addr32 stc popfq sub in scas jg add pushq pop stc movsl test jle jle (bad) cmp std cld xchg jmpq je jmpq jmpq rex.RXB in rcl (bad) rclb add mov enterq mov retq in (bad) out or pop in (bad) loope (bad) (bad) cltd and rex.WRXB sbb lahf (bad) ja leaveq lods inc push push ficom push jrcxz (bad) xchg fdivl rex.RXB push fld mov xor (bad) rex.XB (bad) fistp xor or data16 cltd jmp xchg mov jge (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) xchg loop (bad) xchg fdivrs fs in adc (bad) je in retq pop jmpq adc repnz rex.WXB rex.RB rex.WB rex.WRXB sub insb cmp retq fwait in iret mov lret mov (bad) and out mov (bad) sahf (bad) rex.RX not rol neg add test dec bt mov jmpq jne mov bts rcr mov clc dec sub data16 (bad) or mov cmc sub jmpq add rex.WRX gs jo rex.X data16 jb gs out or (bad) jmpq push lock std std mov xchg outsb fdivs rex.WRX lret lahf std cs pushfq mov (bad) mov xor rex.W insb fnstsw mov xor rex.WRX rex.W cmp pop push (bad) add in shll adc test add (bad) add rex.X rex.RX sub in xchg (bad) imulb cmp mov sbb jmp (bad) fiadd test and (bad) (bad) jmpq push (bad) repnz pushq nop cmp mov cmpsl sbb mul rex.XB add sti pop movabs popfq cmpsb and xchg sbb mov and rex.WRB div xor xor cmpsb ffreep push lock data16 retq (bad) xchg and lods mov (bad) cld push (bad) outsl sub callq loop out (bad) retq insb out loop xor out in pop (bad) addr32 (bad) rex.R cltd fisubr mull in jg mov lea test add add rex.WX add xchg add mov clc fcompl or mov or movslq rex.B movabs rex.B xchg insb add rex.WXB js mov (bad) or pop rex.X clc mov (bad) leaveq mov adc movabs cmp stc fidivr mov (bad) rex.WRX sub xchg xor andl rorb (bad) imul adc fcmovne rex.X sbb adc movslq popq int or lret pop test or sub js mov fstpt (bad) and mov mov pushq cld fildll ja (bad) insl (bad) insl rcrl (bad) pop (bad) sarl mov mov pushq add pop movabs rex.WB mov cmp jge (bad) enterq lahf mov rex.WRXB mov lock test (bad) rex.WXB or sbb jne push mov repnz (bad) fwait sub push jmpq bt neg jmpq jmpq je cmp stc bt add jmpq mov stc bt cmp jmpq jmpq cmc clc add jmpq repnz jmpq enterq std scas lea stos test rex.WR cwtl fdivrp (bad) imul mov and push jae out mov sub sar sub (bad) cwtl sbb add rorb insb or (bad) push shl cmp movabs xor (bad) jl (bad) ss (bad) shlb (bad) (bad) (bad) cld sub repz (bad) (bad) (bad) (bad) (bad) lahf popfq pushfq adc cltd out negb jnp sub mov jl (bad) add add or sbb push jbe sub loopne rex.WXB sub mov adc fdivl retq scas int3 add jge sbb add lods lods roll pop loop out sbb add scas (bad) (bad) jne jmpq mov lea jmpq jmpq js flds movzbl push lret jg icebp (bad) add mov lret movabs fcmovne insb (bad) mov cmp jge mov sub hlt xchg test rex.XB rex.W lock (bad) adc or int or sub pop loopne,pt leaveq pop jbe imul add outsb add fsubrs (bad) (bad) sti sbb (bad) (bad) (bad) std fild loop xchg or movabs imull cmp lods sub mov pop in pop pushq sub clc (bad) movsl mov movabs rorb mov mov mov sahf mov stos sub rex.R ja pushq in popfq mov lods negl js rcll movabs (bad) jno mov cli mov lret and add pushq jmpq xor sti (bad) or xchg std push iret lods mov div mov (bad) sbb mov rex.WRXB jnp add clc lret in out (bad) rex.RXB sbb rex.X mov test stos adc loop lret sbb in sbb xor outsb rex.WB mov (bad) xchg test lods lahf (bad) or xchg (bad) (bad) repz and (bad) sbb pushq (bad) (bad) movabs jne scas stos andl sub sti mov movsb scas add movabs es rex.RXB sub mov es adc test add jno (bad) or mov movslq push mov popfq or adc fdivrs lret shlb add push (bad) out cmp cmp movabs stos incb rex xchg (bad) cwtl negl movabs test xlat mov movabs sub fcoms rex test cmc lods or (bad) xorl mov rex.RB adc adc movsl sbb mov adc lock lret scas add leaveq out rex.WR cmp adc (bad) (bad) (bad) cld (bad) rex retq (bad) (bad) (bad) (bad) clc ficom insb sbb js mov (bad) (bad) clc mov (bad) (bad) (bad) push jg (bad) imul movsl js in jns xor and lods mov xchg mov (bad) int sub outsb int3 fdivl cmp ficomp jle (bad) int3 xor add (bad) insb rex.B insb outsl movslq stos jmpq jne rol bt shl shrd sub rcr dec mov mov add add mov cmc cmp stc test jmpq imul bt add jmpq jle ss (bad) push (bad) (bad) (bad) xchg (bad) mov adc cmp test xchg adc (bad) adc xchg test adc scas rex.XB pop rex rex.RXB (bad) out rex.R jle fwait mov retq sbb ds (bad) adc mov or (bad) (bad) sti jb lock push xor mov test repz int3 rex.RX or sub nop mov fisubrl mov rex.X mov mov jnp (bad) (bad) (bad) (bad) (bad) insl rex.RXB jnp (bad) retq repz adc sbb (bad) (bad) (bad) (bad) mov pop adc ja mov (bad) cld movabs (bad) pop xor or rex.X rex.WX in repnz cwtl mov (bad) imul icebp movabs shlb out movsbl mov jmpq shl ja je jmpq adc (bad) in loopne lahf add retq popfq rex.RXB rex.WB push and (bad) rsm pop adc rorb rex.WX fstl mov (bad) sahf rex.WR (bad) hlt add xor mov mov mov rex.WX imul rex.RB pop pop and (bad) outsb test (bad) repnz jns cmp push sti jge or and (bad) (bad) sti lods mov or (bad) (bad) (bad) outsb push xor (bad) (bad) (bad) (bad) (bad) out pop js (bad) xchg push mov or ss jge icebp push retq pushq out callq pushq lret pop (bad) cmc lods or mov push (bad) ffreep mov (bad) sub and jmpq retq mov mov (bad) pop (bad) adc pop out (bad) sbb or lret (bad) rorl gs imull rex.W mov loopne xor scas rex rex fs (bad) lods pop or sub lods rex.X cmc popfq rex.WB mov add sub clc rex.WX lock and cmp test xchg sti (bad) (bad) sarb or jle adc (bad) (bad) (bad) sti ficoml loopne fs (bad) (bad) dec (bad) rcrb clc imul fs jl incl or xchg outsb (bad) (bad) mov sub push mov out cmp (bad) pop sbb add add jns jne (bad) push sbb and sbb cmpsb (bad) adc movabs xchg xchg lods mov jmpq rex.WX fs add stos lret rex.RX int push gs or add add jo cltd push pop sbbl mov nop rex.WR pop xor xor cmc mov push or mov (bad) stc fdivrl cmp adc mov xchg or (bad) jmp or sub pop fiadd out je (bad) rex.WRX (bad) adc movabs cs jae outsb imul lahf scas test (bad) rex.RXB (bad) (bad) sti fbld test (bad) (bad) (bad) movabs (bad) btc rex.WRXB rex.WX add add and (bad) xchg out lock mov in (bad) mov cmc rorb cmc out pop fs mulb sub sbb lahf lahf mov cmpsl stc push icebp pushfq cli loope (bad) xchg cmc ss (bad) iret movabs add test imul bswap jmpq (bad) sbb or sbb mul or test fstpt cmpsl push push xchg adc jae cmpsl adc mov lahf and pushfq movabs jmpq rex.WRX rex.WX mov leaveq xor movslq hlt loope cmp (bad) lock xor rex.RX in jmpq cmp (bad) imul (bad) mov scas rex.WB jo (bad) (bad) (bad) std js rcr pop (bad) (bad) (bad) (bad) push movsl (bad) xchg push callq jnp push ds jo callq outsl and frstor rex.WR rex.RX rex.R rex.WR adc mov add add or out test in cmp fidiv out in loop and xchg xor sbb and push icebp lock xchg rex.WB stos pushq retq leaveq (bad) sbb adc es (bad) scas xor jle jmpq lea sbb out mov rcrl or jmpq jae sbb stc adc not mov cmc add not not mov not mov jmpq mov ficoml mov adc jg flds es adc pop add fdivs rex.WRB rex.R mov jmpq mov rex.W lret jbe out outsb mov insb adc in retq clc (bad) cmp or cli nop ds mov loopne mov push scas cmpl (bad) xor ss xor mov (bad) (bad) sti movsb lods test (bad) pop adc fisttpl jmp gs (bad) scas mov (bad) (bad) lcall mov retq (bad) std jmp lret test add add ds xchg xchg mov (bad) jge (bad) mov (bad) jl mov mov (bad) out jnp out mull xchg sub lret push jmpq jmpq add rex.XB (bad) je rex.RB jbe jb outsb insl outsb je insb outsl movslq mov bswap jmpq jmpq test jb cmp jmpq movslq movslq and int xchg push mov fcmove out add add cmp loope sbb xor jo lods ds sub decl push jo (bad) sbb enterq (bad) lret sub xor and rex popfq rex.RX xor (bad) lret (bad) std xchg xchg cmp push repz js (bad) (bad) cld lods adc data16 (bad) (bad) (bad) ljmp insb cmpsl (bad) adc rcr mov jae push je (bad) or (bad) (bad) roll add adc std sahf pop push jo mov cmpsl jp sub mov ss cmpl lods xchg mov rex.WRXB rex.R mov rex rex.B xchg mov je (bad) repz mov (bad) jno lgs rol push lods test (bad) (bad) rclb jl mov rex.W push test add xchg xchg xchg sti lea or adc mov jmp (bad) xchg rcrl and jmpq jg mov sbb insb or rex.X sub int adc addr32 pop mov push loope cmp lret xchg (bad) cwtl lret (bad) (bad) (bad) std lea sbb (bad) mov imul add pop out add je (bad) fisttp test and cwtl (bad) xor in add rclb (bad) (bad) decl std jns rex.WX repnz and data16 (bad) andl sbb out fcoml nop cmpsl (bad) xor cmc fmull mov (bad) cmpsl cmp mov (bad) mov and sbb adc sahf and sahf test pop mov mov jae (bad) fisttpl xchg lods (bad) test je (bad) loopne xchg sbb sbb mov cmp jnp xchg mov std cmc cs xor mov and js fsubl in xor xchg fimul lock scas (bad) hlt lock and or adc pop movabs imul pop (bad) test insl or (bad) (bad) sti pushq scas (bad) popfq (bad) (bad) (bad) (bad) sub mov push add push or cmp stos loopne nop movabs rex.X lock out (bad) callq sub sub jl pop (bad) pop lret (bad) fisub int (bad) lods sarl and xlat jp test cwtl sub push mov (bad) and ss callq retq ss or or xchg push pop jle mov xchg (bad) pop movabs (bad) lret sbb decb (bad) jrcxz test cs in fldpi (bad) cmp sarb (bad) or xor pop movsl fildll mov xchg stos jns (bad) (bad) std or or scas or cmp (bad) sub xchg rex.RXB rex.B cmc movslq mov testl xchg push andl (bad) push (bad) rex.WR (bad) rex.RX sahf mov repz add xorl imul mov push idivb outsl imul movsb sbb mov xchg icebp jmp sub (bad) mov hlt callq hlt rex.XB mov xlat imul std push clc clc imul stc bt stc clc add jmpq jne jmpq mov jmpq je neg and shr ror push sbb inc mov adc sub movzbw bswap lea jmpq jmpq jmpq je clc cmc cmp cmp sub clc cmp jmpq callq jmpq jmpq adc rex fbstp movabs fs jnp add lods fscale cmp sub mov cs (bad) loop rex.RB es stc jle (bad) imul push or out sbb xchg lods and xchg nop jg mov in xchg sbb leaveq (bad) leaveq xor jrcxz (bad) mov iret test cmp mov data16 lods pop imul sbb xlat and push scas xchg xor (bad) sti movsb (bad) xchg rex.WRB (bad) (bad) (bad) data16 cmp rex.RXB (bad) (bad) jmpq pushq test fistpll addr32 cmp rex.WXB rex.XB (bad) rolb in (bad) mov add lahf or test mov sbb enterq mov loop test mov (bad) mov fsubrs shl notb fisttpll rex (bad) leaveq rex.WX repnz rex.XB rex.RB rex.RXB rex.WRXB adc ds loopne loop xchg mov (bad) lock lea mov pushfq xor jne rex.WRXB (bad) xchg mov adc nop sub or adc sbb and xchg and sub data16 sar (bad) xor mov xchg xor adc sbb adc pushq (bad) (bad) in rex.WRX mov (bad) (bad) (bad) (bad) jge clc xchg sub sti (bad) test lahf mov and (bad) (bad) (bad) (bad) std rex.XB xor (bad) cmp or icebp int3 stos out mov pop int3 pushq adc adc mov jo adc sub pop (bad) jne sbb fmuls sbb imul (bad) std jmpq mov lea setb jmpq jmpq mov cs retq repnz (bad) xchg jae lods xchg adc js (bad) (bad) (bad) outsb mov xchg xor sarl test xchg insb test imul xor jae stos lret cmc ss xchg add test enterq xchg cmpsl out cmovno insl mov incl nop (bad) mov (bad) (bad) sti xchg sbb (bad) (bad) decb pop ds rex.WRX mull rex.XB (bad) imul (bad) (bad) (bad) dec add rex.RXB adc jb movabs maxps stos mov adcl callq pushq adc popfq cmpsb test push or rex.WR xchg add mov fldcw add rex.RX gs gs jb rex.X data16 bt shr test bt cmp jmpq jne cmp cmp bt add bt clc cmp bt add jmpq mov test pop xchg fbld mov rcl retq push (bad) mov repz rex.WX out mov stc test or or (bad) (bad) jb mov bnd vmovd rex.W (bad) mov mov adc cltd movabs pop imul in cmpsl sarl push (bad) xchg adc sbb (bad) (bad) (bad) cld and faddl in scas or insl xor (bad) cltd jp movabs mov jb fiadd add add xor fist (bad) jne decb rex.B push rex.RX cmp fsubl fstpt fistpl leavew (bad) cmp push addr32 add cmp mov mov (bad) retq jmpq jmpq sub (bad) ds mov xchg sub and (bad) cmc mov and lret (bad) cmp movabs (bad) (bad) stc sub (bad) xor nop (bad) in cltd sahf fildl xchg mov rex.RB or movsl loop idivb jnp mov push jge cmp push mov (bad) iret icebp lahf add mov or add cmpsb xchg (bad) xor rex.WR (bad) movsb (bad) (bad) (bad) cld add and push (bad) (bad) (bad) inc movabs scas pushfq mov push test add add mov pushfq mov or mov loope (bad) je mov and xchg jne xlat mov mov int3 pop adc xchg push clc (bad) mov rex.WRXB pop (bad) rex enterq jg mov retq stc rol clc add inc mov cmc stc test cmpb jmpq jae jmpq test jmpq pop mov adc (bad) (bad) loope movabs test and ficomp mov rex (bad) lock sahf repz push (bad) addr32 add (bad) (bad) mov lods mov rex.WRB test mov and xchg rex.WB add rcll xor mov cmp repz pop push hlt xchg cmpsl adc sub pop lods (bad) adc jbe lret (bad) (bad) (bad) cld add (bad) (bad) inc xor movabs rex.RX add add gs (bad) xchg jge js mov pop or xchg fs sbb ja cwtl cmpsl stos mov lods mov jne adc xor fbstp es adc in mov (bad) jnp movabs sub cmp xor nop stos adc jmpq push rex.RB push rex.WB rex.WRXB rex.WRX cs insb add test add jmpq mov cld sub movb cmp jmpq jne bswap mov test jmpq jne shld xor rcl add bt mov or shr add clc mov cmp jmpq (bad) mov jmpq repz adc xor movslq and movsb jp jno cmp imul in mov adc jne jmpq fstps mov sbb test pop (bad) (bad) (bad) (bad) movabs xchg rex.WR rex.WB add mov (bad) (bad) std test add add fs (bad) xchg mov lahf imull adc mov and xor sbb mov (bad) or (bad) scas (bad) movabs bnd cmc push and je leaveq test jnp mov mov rcl std cwtl movsb (bad) stos movabs cmpsl (bad) and cmpsb mov movabs outsl mov jnp popfq push xor not sti pop (bad) cltd mov sbb mov rex mov sbb cli jo and fs in mov push (bad) jno lret ss div int3 rex.RX xor sbb jb or ds shrb cld sub int3 imul (bad) (bad) (bad) jmpq push outsb mov add rex.WRB rex.WRXB mov loopne fisttp mov scas add add test scas add xchg mov (bad) hlt je rex.WRXB adc popfq sub xchg sarb sub (bad) js outsb xchg bswap mov xchg bswap mov movzbw bswap movsbw bswap mov seto mov movsbw lea jmpq jne cmp mov jmpq stc cmp jmpq and stc clc clc add cmc test stc add clc stc sub jmpq test pop mov xor rex.WRXB outsb and mov xor sub movsb and jns retq or (bad) xor fisttpl pop sbb (bad) lods movabs mov in outsb (bad) imull rex.WR mov (bad) or popfq out or or push (bad) (bad) (bad) cld lahf repnz jmpq movabs pop stos mov mulb (bad) stos add xchg test (bad) xchg and pop scas (bad) (bad) xor hlt rex.W lcall mov int3 movsl iret lahf cmp and fnop rorl mov retq out nop (bad) lods or xchg (bad) (bad) pop iret in add add jns or adcl mov callq rex.W add in sub notb negb and mov mov loopne sti (bad) xchg (bad) decl (bad) and add jmpq sub (bad) es fs leaveq pushfq sub mov in testb jp lea cmpsb push sbb sbb retq rclb out add jae cmp add movabs lret mov adc or gs lods sub ds (bad) (bad) cld cwtl jb jg (bad) (bad) (bad) lcall std xchg push leaveq xchg xchg pop mov int loope mov movsb stc push (bad) adc pop (bad) (bad) jle adc xchg hlt xchg rex.WX rex.WXB incb add add std pop sbb fwait rex.WR cmp (bad) xchg xchg mov (bad) addr32 adc fwait rol retq pop rex.W enterq sub push popfq mov mov and or mov (bad) loope cli (bad) xchg es jmpq xchg mov lahf jg pushfq in xor movabs rex.RXB mov sbb fadds rex.WRXB xchg loope and mov movabs (bad) xor cmp xchg xor shrb xchg (bad) lret or rex.RX movslq and add rex.WRX rex.WRB and pushq pushq repz (bad) decb or jo retq mov (bad) repnz sub push test mov fcompl adc jno pop (bad) leaveq out cmp (bad) (bad) (bad) lods xor sbb imul pop add rex.R jp cmp mov pop stc negb movabs push lret rex.WXB fldt fwait test pop (bad) shl mov (bad) js fwait xor adc stos ficompl rex.X jle xchg in mov lret clc loopne in mov (bad) nop push lret push xor xchg fmull fwait xchg jge mull int jae scas add lea fcoml imul sub mov or cmp (bad) (bad) (bad) decb sbb xor shrb (bad) mov pop clc pop rex.RX (bad) ffree sbb (bad) (bad) fs or popfq fldcw (bad) repnz (bad) (bad) (bad) jo iret movabs and rex.WR pushq shr adc (bad) jrcxz (bad) and lock add jb add cmovbe xlat mov ror (bad) clc (bad) (bad) insb or (bad) mov push xor ficoml mov int xlat push repnz mov xlat mov pop (bad) or mov pop xor (bad) jrcxz adc sbb popfq imul (bad) movabs loopne push jge mull and xchg cmc or mov (bad) pop ds iret sti (bad) push jmpq fsubp (bad) adc (bad) adc imul rex.B ss cmpb (bad) or fisttpl callq cwtl (bad) sbb add add pushq add xchg mov add (bad) jl (bad) test xor pop (bad) out (bad) movabs (bad) test mov rex.WRXB int (bad) or fnstsw retq insb pushfq mov in rex.RB mov add btr movsbw mov bts mov neg mov cmc cmp sub stc clc clc jmpq bt stc movb clc bt test jmpq jb cmc cmc cmpb jmpq cmc bt test jmpq adc jmpq ja je clc clc cmc cmp jmpq test cmc cmp jmpq lock lahf and mov fs rex.WR (bad) mov adc or push (bad) mov (bad) mov rex.WRX rex.R adc pop jg xor fstpt (bad) ss mov (bad) jrcxz lret repz (bad) cmp jbe out loop rex.RX ror retq xor pushq leaveq movsl idivl mov in jo push cmp (bad) (bad) sti jno loop push (bad) (bad) (bad) (bad) xor sti pop xor (bad) (bad) pushq ficoml subb jrcxz xor rex.RXB xchg xchg (bad) xchg mov xchg (bad) and cmp mov xor rex.WRXB hlt pop jo mov std imul jmp add adc lods lahf mov in insl add jmpq jmpq jmpq int (bad) and cwtl xor rex.WRB or cli mov pop addr32 cmpb pop or enterq sub outsl lret adcl pop (bad) (bad) (bad) (bad) xor rex.X stos outsl push rex.WB jb (bad) sbb sar pop cli push push jns outsb retq cwtl in mov in movsl shrb xchg loope mov jae (bad) (bad) std cmp xchg out (bad) (bad) (bad) push mov mov mov jp iret (bad) rex.X pushq jns mov (bad) adc pop jo insb or addr32 mov adc fdivp xchg sbb movabs rex.WRXB rex.WRX xchg jmpq jmpq stc or movsbw mov clc jmpq jne bswap or mov shrd mov bt sub jmpq jmpq mov shld sub jmpq ja int3 (bad) out (bad) rex.RXB cld out xchg (bad) cli sbb rex.W jno je rex.XB adc movslq rex.WRXB and outsb or cmpsb fnstcw xchg (bad) (bad) mov or xchg fs cmp xor fs sahf add (bad) mov loope mov mov and cmpl movsb push imul jo push shlb insl mov movabs addb cld or (bad) (bad) dec lret int add cli pop add add rex.WXB (bad) rex.W ja cmp xchg mov cmp mov movabs xor callq jne lods lret (bad) sub xor movabs sub jp sbb xor (bad) sbb rex.WR mov callq mov movabs rex.WB xchg jbe sub and push movabs loopne xor lods cld repnz popfq push (bad) shr mov (bad) xchg push test cmp mov xor xor cmp mull imul cmpsb stc scas out rex.RX (bad) (bad) (bad) decb (bad) (bad) (bad) jmpq pushq rex.B cs (bad) outsl rex.B push or or push rex.X jo cmp enterq xlat in test rcl rorl in callq xchg jle (bad) or sbb mov mov callq add rex.RXB gs outsl fs imul add mov shl ror setg movsbw mov stc cmp test cmp jmpq callq jmpq jmpq mov test jmpq movzbq jmpq jmpq sbb je outsb sub adcb sbb (bad) retq (bad) cmpsl sbb sbb push mov ror out movabs fistl (bad) mov mov ds xchg jae int3 mov scas nop sub std xor (bad) (bad) (bad) pushq int (bad) (bad) cld mov rcll sbb repz movb loop int3 movslq insb or rex.RXB push cld or cmpsl enterq imul or sbb (bad) (bad) sbb pop movabs cmp outsb pop (bad) mov xor xchg lock scas lcall mov cld sti jb push cmp callq sub pop xor loope lock stos scas adc add punpcklbw (bad) jo (bad) mov ror scas sbb gs nop hlt in rex.B add lahf cmp mov ss stos lea mov out callq (bad) (bad) sti jl enterq (bad) (bad) (bad) cmp fcoml test xchg pushq (bad) (bad) (bad) (bad) mov mul std push adc (bad) push (bad) and mov sbb (bad) and imul (bad) or clc (bad) adc rex.WRX (bad) fild xor (bad) insl add pop mov jmp xchg and cmc cld decl movsl jmpq fcomi or jmpq xor movsl sub movsb (bad) pushq and add (bad) in cmp cmp fnsave xchg and sar add movabs cmp (bad) sbb mov (bad) push leaveq pop xor sub (bad) mul (bad) lea (bad) insl and fnop jno push test adc jmp (bad) rex.XB (bad) (bad) sti icebp add push or (bad) (bad) (bad) mov sti xor test fisttpl nop rolb add add xor dec pop rex.RX sbb sub push adc lock cltd (bad) outsl (bad) rex.RXB ds int3 lock loop (bad) movabs mov jmp (bad) and jp adc rorb jl movsb add addb lret fcmovbe cli loopne rex.W jne and in fdivl xchg sub cmc sarb lahf int3 movabs sbb insb push sbb int fdivp cmc nop fidivrl stos mov cmc std cltd rex.WRB (bad) (bad) cli lret lods mov (bad) std lea cmpsl adc jae jge cmpsb lods sbb scas (bad) movabs faddl xadd (bad) (bad) (bad) callq xchg xchg lret (bad) fstl out pop pushfq hlt (bad) movabs adc rex (bad) xchg cld rex.RB in jg sbb ficom jp xor scas xchg cmc xor (bad) in jnp rex.RXB sub nop (bad) test mov or scas rcrl jo,pt (bad) iret and rex.WX test (bad) jmpq test retq repnz (bad) movabs (bad) loop (bad) cmp xchg jg rex.X pushfq mov xchg movabs or orb sti frstor sbb std movabs pop (bad) stos lcall rex.RB retq pminsw adc and int imul nop cli int3 pop sub loope add mov (bad) std push rex.X mov (bad) in (bad) adc add push (bad) mov divl insb loop test (bad) ss mov xchg adc rex.B sbb pop push xchg lret stc adc movsl es cmp xchg sti push (bad) jno mov iret fcmovne scas add lret test sahf cmp retq cld xchg clc sbb pop cld movabs clc jnp mov xlat adc (bad) (bad) cld callq (bad) (bad) (bad) cld repnz jg rex.X (bad) sbb cmpsl test addr32 mov nop decl pop stc mov andl (bad) movsb retq xchg int3 (bad) in xchg mov outsb jmp (bad) cltd (bad) retq (bad) cltd std cmp or insb in (bad) negb mov mov (bad) mov iret (bad) cmp sbb enterq fisubrl push nop xchg or repz hlt mov or adc (bad) (bad) inc loop push mov (bad) lods (bad) sti loope mov loop and cmp or cltd dec (bad) cmp movabs push pop repz (bad) jl add hlt stos movb rex.WRX pop (bad) mov stos sub sub sbb (bad) jp (bad) pushfq pushfq int pop (bad) push rex.WX mov add (bad) icebp mov sar rcl setle mov cmc cmp sub cmc cmc bt cmp repnz jmpq cmp rex.W xchg (bad) jo xchg xor push adcl jg mov or test movabs add (bad) xor ss mov push (bad) lods adc rex.WRB cmc outsl insb rex.WXB mov rcl addl xchg leaveq (bad) je (bad) mov adc mov (bad) fst mov rol ja sub orb cltd ja xchg loopne in rex.WB rex.WRXB (bad) (bad) (bad) sti (bad) jno out (bad) (bad) (bad) decb sub add or repnz mov jrcxz add pop push (bad) addr32 test mov imul fistpl mov clc mov (bad) loopne add fbstp (bad) jle mov xor in mov icebp ds sbb sarl (bad) nop mov mov jmp adc int int mov je test xor (bad) addr32 lods in or jp sbb xchg out movsb cltd pop jge mov jo mov pop cmc xchg and repnz shrb mov leaveq jae outsb enterq cli loopne or (bad) (bad) decb cltd scas movabs sub sbb and fstpl stos mov std xor leaveq (bad) stos leaveq jg jb mov sbb (bad) cltd sbb rsqrtps mov test fdecstp cmpsl fdivl outsl fimul cmc ss rex.X movslq lods rex.XB negb cltd outsl mov callq (bad) fnstsw insl xchg add cmp fmuls lret sbb or insl and fnsave (bad) or negb add imul mov cld and sahf lock (bad) sbb xor rex.RXB rex.B (bad) sub sbb sub (bad) (bad) decb (bad) out (bad) test cmc pop out popfq rex.X mov in in mov hlt test mov callq rex.WRB xlat xchg rex.WB sarb cld cs xor femms and cmc sahf test jnp mov callq mov (bad) xchg sbb (bad) (bad) xchg add mov add xchg sti out cmpsb xorl jnp mov icebp retq fcmovbe retq bt test clc sub stc jmpq jmpq js int3 cld mov add push imul xchg cli int pop jle xor add (bad) int outsl (bad) rex.WRX adc bnd mov adc rex.RX jae (bad) js mov mov vorps out outsb (bad) push pop lock (bad) pushq mov insl mov xchg out lret test jae ds pop mov adc cmc mov (bad) (bad) cld (bad) movabs rex.WX rex (bad) or push push pop or add (bad) ja out je jp push push mov mov vcvttsd2si sub jle xchg rex.WRXB cmp sbb add jmpq lret cmp add jmpq sbb and clc cmp jmpq jae test test sub jmpq shr jmpq jmpq push push push push xor cs insb add fwait rex.WR cld (bad) stos (bad) mov push pop jge rex.WRXB lods in xlat mov (bad) lret or in (bad) (bad) rex.R lea or out (bad) mov cmp mov rolb (bad) ja rex.WRX rcrb (bad) (bad) (bad) std pushq add add add or add mov (bad) mov pushq cltd mov sbb (bad) push std sbb data16 outsb and cld add (bad) out mov (bad) mov and movabs and pop lods sbbl push xor (bad) mov (bad) mov addl outsl std out jae (bad) subb (bad) mov mov mov (bad) rex.W mov add lods bt cmp cmp not jmpq jmpq jmpq nop and sub sbb in es addb push (bad) push add (bad) ds and sbb rex.RB cmp (bad) repnz cmp stc sti rolb popq mov push mov sub and (bad) (bad) cld adc movabs pop cmp clc stc sub add cmp rex.WRXB cli mov test adc and rex.XB rex.RB adc in adc (bad) push and (bad) rex.WX repnz test (bad) jle jg jne rex cs (bad) add add jle mov (bad) push pop rex.XB (bad) xor lock xor xchg cli outsb (bad) (bad) add pop xchg (bad) jle movabs mov (bad) insb nop mov mov sub xor and cmc jnp js movabs sub xchg mov stos rex.WB outsl add add movsl scas (bad) jne sbb xchg mov add (bad) (bad) (bad) cmp jle jge mov cmp fstp add (bad) jb pop js (bad) fnstcw mov cwtl xchg insl pop movabs pop mov (bad) clc fdivrs callq lret add sbb rep or xor repnz andb add xlat movabs mov movslq or (bad) mov (bad) outsl (bad) lahf adc add (bad) cmc jg mov mov pushq rex.X (bad) lret movabs jge mov mov or loope (bad) in mov mov jp cs push movabs sub xor imul xchg stc or pop fstpt and mov rex.B xchg (bad) loopne xchg icebp rex.R test subl stos cmc jl lret (bad) (bad) mov cld cmp (bad) (bad) (bad) (bad) inc push test or jge movslq add add jle mov cmp cmp movabs rex.R add sarl rex.WX retq xor cmovp cmp (bad) repz cmp jp xor xorl movsl subl (bad) cmp retq sahf rex.RB sbb sbb ds xorb adcb leaveq icebp adc iret hlt (bad) in (bad) nop mov fwait lods add add btr rex.WRXB rex.WR rex.X rex.RX loopne xor stc jmp and mov (bad) sub stos add (bad) test pop (bad) (bad) (bad) sti pop jg sub (bad) (bad) (bad) sbb clc pop outsb (bad) xchg mov and icebp jae mov ljmp (bad) fstps cmp (bad) jp movabs sub (bad) and cmc (bad) (bad) (bad) (bad) jmpq rex.WRX or lret (bad) mov push ss popfq mov pop adc rex.W jnp ss lahf cmp rex.WRX rex.WRB callq (bad) rorb pop out xchg mov mov sbb scas lret mov movsbw pop mov movsbw pop jmpq btr clc mov bsf mov stc movsbw neg dec mov adc xchg sub shr mov cmp xor xchg lods inc (bad) repz sub test bt not clc sub rcr rol jmpq cmc sub cmc cmp not jmpq clc push jno mov and xchg imul out fsubrp (bad) xor mov rex.R gs (bad) rex.WXB stos fsts (bad) mov lods jbe cmpl jnp sub (bad) sub rex.RXB cvtpi2ps mov mov (bad) mov sahf and out mov mov (bad) (bad) std cmpsl rcrl (bad) adc xor out and pop fdivrs lret test (bad) fs (bad) nop imul pop in (bad) (bad) hlt cmpsb (bad) test (bad) (bad) (bad) (bad) out cmp movsb repnz (bad) or sub xchg or (bad) mov jmpq fcoml fsubrs rex.X xchg notl adc mov cltd test add pushfq rol mov (bad) stc imul sub push movabs test out inc loope rcr push movsbw not not shl mov shr not (bad) lock setns movzbw movsbw lea lea jmpq je jmpq callq movabs not jmpq jmpq adc movabs js pushfq in test ds cmc adc add (bad) rex.XB test sarb jp mov jne xchg or pushq (bad) jp (bad) mov and rex.WRXB rex.WRX sub out (bad) rex.WRB (bad) (bad) adc gs repnz (bad) (bad) (bad) sti in mul jg (bad) (bad) (bad) cmpsb test (bad) mov punpckldq mov mov cld movsb (bad) loop xor add pop cmp (bad) imul std lea repz repz (bad) stos rex.WRB scas xchg lock movabs int fdivrl test add add jg pop in sahf rex.WRXB data16 test (bad) rex.R test adc loopne jmp and or rex.WX mov push rex.WB and fstp rex.WRB cmpsb ja push or adc (bad) imul fldcw (bad) sti and sbb add jmpq jo mov (bad) mov mov push test adc (bad) insl pop adc add punpckhdq xchg (bad) mov lods sarb mov leaveq nop mov shrb mov fldl mov mov lock sbb retq push rex.W xchg sbb (bad) and push (bad) cmp ja (bad) (bad) (bad) cld (bad) data16 (bad) (bad) incl cmp rex.WB pop mov xor xlat rcrb (bad) imul (bad) (bad) stos (bad) sbb rex.WX (bad) (bad) jp jae push insl (bad) loope (bad) mov (bad) jne mov sti (bad) icebp or lea rcl rex.X jg or pop cmp insl xchg movslq rex.XB retq (bad) (bad) ja rex.WRX cmc jo jp (bad) pop (bad) lret (bad) xchg sti lods add mov je add jae sbb data16 mov test and in (bad) loope xchg jmpq add (bad) sbb rex.WRX jbe add mov (bad) (bad) decb fiadd sahf cltd es cli rex.W lahf sarl movabs (bad) (bad) (bad) (bad) in sbbl movslq push sbb rex.WX mov pop or and rex.WX rex out insb (bad) rex.XB scas mov push sub hlt jge lods (bad) (bad) rex.WB rex.W int3 jle jno pop mov cld jo popfq mov mov add jbe bsf cmc add not sub and rcl movsbq or mov stc xchg movzbq xadd mov or add xchg movzbw shr test movabs and mov bts rcl dec add mov lea movsbw mov jmpq jmpq (bad) cmpq lahf sbb sbb adc add icebp loope lret (bad) in movsb (bad) rcll mov mov sbb cmp xor scas mov repz repnz (bad) jp jrcxz rex.RX lret sbb and insb fnstsw mov pushfq push scas adc (bad) std insb (bad) rex.WB adc jp leaveq scas rex.RXB (bad) xchg idiv mov or insl jne add mov out popfq xchg outsl frstor xchg (bad) mov cmp cld or (bad) (bad) (bad) dec mov fnstcw test pop (bad) outsl and loop add add add cs jge adc hlt lock jae jmpq pop adc lea (bad) int xchg scas mov jbe sahf add int3 stos sbb loopne sub rex.RXB incl push mov stc add jmpq cmp stc bt cmp jmpq jmpq je bt jmpq jrcxz fs fsubl xor out rex.WRX stc and jp insb data16 mov std jmp movslq sub adc (bad) cld xchg rex jae out in scas mov mov movsb mov or nop rcl movabs adc or cmp insb (bad) fidiv cmp jle fwait cmpb (bad) pushfq (bad) pop lret (bad) sbb shl xor jrcxz shl movabs test loopne rolq leaveq in add cmc movslq and adc (bad) (bad) (bad) (bad) std rex.RX imul add add mov push add cld pop sub rorb iret cwtl mov shl mov jnp (bad) clc push rcrb mov jns add jae (bad) add leaveq pop (bad) sbb pushq add xchg stos adc xchg (bad) jp sub xchg push xchg (bad) je jrcxz cwtl callq push cmp (bad) mov mov jae subb retq out movsl pop push test cs xor stos xchg fs icebp je es push ds rex.R (bad) mov (bad) push fbstp sub popfq jle cltd jmp push sub je push out xor jg sub and mov sub (bad) (bad) push lods fcoms rex.W data16 pop movsl (bad) out stos (bad) push jnp es (bad) (bad) decb (bad) (bad) (bad) incl lods xchg int3 mov in sub cmp sbb jl out in jne add jns mov (bad) and mov fmull (bad) mov mov retq movabs (bad) jrcxz test shrb lahf mov (bad) add fwait cmc add int callq jmpq je bswap movsbw mov movsbw not jmpq push jmpq ss xchg popfq movsl clc sub insl pop sbbl (bad) int nop rex movabs cmpsl adc out test movabs (bad) int3 (bad) jp jae rex.WB jno,pt mov rex.WX sbb cmp mov cmp adc (bad) mov clc fnsave mov xor rex.RXB rex.RB rex.W scas and xchg rep (bad) pop (bad) add adc rex.RX movabs in adc fld add ds int and mov negb movabs fadds mov xchg or (bad) (bad) (bad) nop andl pop lods mov xor lods lea movl mov xchg stos mov pop cmp or and pop push cmpsb cmp mov enterq sbb pushq xchg add jae mov add and add popfq jae and jle nop rex.WR rex.WX ja (bad) negb pop cmp cmp and and fnstsw movsb (bad) add jl xor sbb shll jge sbb (bad) (bad) (bad) decb rex.WRXB movabs fild leaveq test out (bad) retq in movsl sub rex.WXB outsb lret push es (bad) rex.WRX lock pop cmp sub and xor (bad) shl lret adc xor jge enterq jmpq jne cmc test movb bt cmp stc test jmpq mov jrcxz out rex.WRB (bad) loop sti mov lods xchg adc in div (bad) lahf xchg adc mov (bad) int divl mov rex.W mov push and int3 test (bad) xchg sub jg jbe mov cltd rex.RXB jmpq stos out fidivrl cmp movabs and jno xor xchg lahf std (bad) (bad) (bad) sti pushq cmp (bad) (bad) (bad) (bad) sub xlat cmc sub adc outsb xchg (bad) loope sbb (bad) (bad) ljmp stos sbb addl lret stos mov je push sub pop (bad) stos std sbb mov in out (bad) stos (bad) rex.WB in mov in rex.WRB fcmovnu (bad) mov (bad) add lret test (bad) (bad) jmpq (bad) mov pop (bad) mov jp lret rex.RX nop (bad) rex.RB lret sbb rex.WRX popfq mov rex.RX add mov movsb loope (bad) xor and out test (bad) xchg scas pop sub push (bad) scas mov outsl sbb jb (bad) jae loope (bad) fldl pop adc push rex.WR test and ja movsb lret push pushq xchg cs repz frstor xchg mov (bad) (bad) sti (bad) outsb and movsb (bad) (bad) (bad) decb outsl fadd (bad) (bad) nop add add or xchg (bad) (bad) xchg insb imull stos mov out (bad) (bad) and mov out cmp sbb sarl sub stos cltd add stc movabs pop jmpq out xchg jle cltd nop vcvtss2si jle rorl sub movabs enterq lods fnsave out and sarl adc add sub pushq pop jle shlb retq gs sbb add jbe xchg andb loopne push adcl (bad) imul (bad) (bad) (bad) sti mov (bad) (bad) (bad) (bad) jl mov std jl and cltd rex.WX pop and movabs shlb xorl (bad) lock xor sahf rex.WR rex.WRXB jge lock pop imul rep mov out mov rex.WRXB cmpsb rex.W lods test test fisttp and jp stos scas add jnp cld or icebp push mov pushfq pushq stc pop out rex.WRB movabs xor rex.WRXB outsl mov fild sti fdivs (bad) je sub add jae add (bad) sahf cmp outsl (bad) sbb stos sbb out cli mov jnp pop jne rex.WRB movabs rex.WX lret mov pop icebp out sub xchg jle (bad) (bad) (bad) cld cwtl fsubrp (bad) and (bad) (bad) lcall mov insl sub callq jo xchg xor cmp nop and cltd sub mov and rex.RX fwait stos imul and adc lret rex.RX adc in add sbb rolb adc movslq rex.WXB mov movabs callq mov ffreep out rex.WR mov (bad) loope div popfq rex.WB (bad) cmp mov jmpq fist in hlt out in xchg std clc in (bad) (bad) (bad) decb data16 mov lahf sti jmpq pop (bad) push gs out rcrl mov (bad) in (bad) xorq push roll rorl loope test mov sub (bad) lret nop rex.X cltd (bad) rex.WB (bad) mulb movslq cmpsl movabs (bad) std rex.RX add add xchg shr rex.WRB rex (bad) push push icebp jbe hlt rex.WRXB idiv xchg (bad) in add ja pop out movabs in shrb push or leaveq repz jo pop mov sub lods xchg push scas push cmpsb cmc (bad) cli (bad) std xchg rcl lock push rex lret xchg cmc test shrd ja fmul sbb (bad) (bad) std sti loopne stos xor jae jrcxz rex.B xor addr32 (bad) (bad) decl mov or jp movsl xor (bad) (bad) loopne (bad) movslq (bad) xchg jrcxz push out cltd test xlat cmp rex.X jbe rex.WR add rex.WRXB mov mov jb (bad) je (bad) add xor iret jne clc stc jmpq data16 mov test mov jbe cs or lahf hlt movsb (bad) adc movabs mov (bad) (bad) sar rex.WRXB repnz xchg mov movabs cmp xchg or jmpq mov cmp rex.X pop push (bad) movslq jmp fidiv push sti scas (bad) je push push jb pop or ja or rex.R int pushq in (bad) xchg pop hlt rex.WR xor fwait rex.WRXB cld iret cmp (bad) (bad) (bad) cld icebp push sarl or rex.RB sbb in hlt sbb xchg iret repz pop cs jmp fs mov push cmp jae mov js xor sti out imul (bad) mov lods insb (bad) jo leaveq imul xor rex.RX idivb mov packssdw add add and cmp ficompl xor (bad) fldl movsl and repz cmp mov xor (bad) rex.RB ss scas mov mov or push (bad) (bad) not setbe not mov jmpq and cmc (bad) ffreep imul movabs pushfq je pop cmp movabs movsl out lea jg push xchg mov (bad) test rex.R ss retq int stc cmp sahf (bad) adc outsl mov cmpsl add pop fdivrl sbb add inc in push mov mov adc rex.WRXB and jb (bad) xor repnz xchg rex.R callq (bad) sub (bad) push rex.WRB jnp pushq xchg push (bad) (bad) (bad) cld jnp cmpsb mov ljmp ficoml xchg lret xor cs je stos xchg (bad) push or fadds add add jns pop or (bad) rex.WR data16 cmp jp xchg and es mov add rex.X es rex.RX add and jmpq (bad) (bad) icebp movabs (bad) out xchg rex adc icebp pushfq repnz sub fwait rex.WR test stc cmc mov jmp cmp int3 rex.W rex.R (bad) or mov jg or fucom (bad) mov andl xorl adc stos cld xor mov mov or imul push rex.WXB test (bad) (bad) cld push pop rex.WX jae (bad) (bad) callq (bad) (bad) outsb scas test movabs cltd sbb jmpq rex.WXB push mov sub add add mov retq mov mov (bad) (bad) push rcrl mov rclb je sub jrcxz sti andl xor shrl xchg xor out ds (bad) or add sub sbb andb movabs sub fstl mov xor add push cmp mov jl (bad) sub insl sti pushq movsl test (bad) cmp movabs out movabs test xor xchg lods sub mov (bad) pop (bad) gs xchg adcl pushfq pop (bad) (bad) mov adc lahf xchg (bad) int3 (bad) rex.R imul jb xor (bad) callq stos cmc xchg sub insl gs je xor mov shl rex (bad) (bad) decb push insl adc test xchg (bad) sbb sub cmp jg adc rcll andb or xchg cld xor movabs jb insl adc sub cli or cld fcoms add test hlt mov in movabs xchg mov fisubrl (bad) rex.R sub (bad) rex.WR ds or xchg insb addr32 out mov stos adc (bad) rex.WX xor (bad) mov xchg or (bad) lock push mov pop (bad) out bnd retq (bad) add lock mov stos mov cmp add mov xchg (bad) cmp sar imul mov (bad) (bad) (bad) (bad) (bad) frstpm(287 xchg (bad) outsb adc push (bad) rex cmp data16 pop cli push int3 movabs (bad) (bad) xor rex or (bad) fnstenv test test mov cmpsl outsb (bad) out rex.XB cs fidiv (bad) or je clc bt cmp jmpq clc jle cmc mov ror mov jmpq callq jmpq jmpq rex.RXB jno mov hlt or test (bad) and push xchg (bad) jmpq sub (bad) lret and (bad) (bad) adc rol test rex.RB movaps (bad) (bad) std xlat sub add (bad) fldl sti nop rex.WB xchg sub (bad) insl fsubrp mov incl adc lahf fdivrl cmp cld loopne and cmp (bad) (bad) lcall (bad) rex.WX lret leaveq lock rex.WR add (bad) mov in push mov out movsl rcrb or push jbe test mov or jne jmpq jne movzbl movzbw setg mov jmpq jmpq sub jmpq mov mov mov adc jge sub insl (bad) lods int3 (bad) pop and jbe cmp rclb (bad) or and rcrb push pop jne push ss insb jrcxz enterq rex.WR gs sti in movabs pop cmp or test loop leaveq sub sub mov or callq insl subl jbe test xlat mov (bad) push (bad) xor pop movabs (bad) movabs mov rex.W iret jle comiss push rex.XB movsl popfq nop callq out cmp (bad) jmp (bad) callq lahf jbe (bad) adc (bad) xlat retq mov push cmp stos lret shr xchg pop psubd rcl mov cltd xchg mov psraw out lea mov movzbw movzbq movsbw bswap lea jmpq pushq jmpq xlat stos adc (bad) (bad) cs rex.RXB cmp rex.WX (bad) (bad) mov (bad) mov in rex.RX xor jo imul sbb enterq cmc lock pop push jbe callq (bad) mov in mov adc movabs pop cmp rex.WRX rex.RXB mov (bad) (bad) (bad) (bad) std or pop rex.WB (bad) (bad) std xchg cmp imul imul jbe push sbb mov retq xor add add or test pushq stos stos rex.WRXB frstor or int (bad) rex.WRB insb addr32 (bad) cs add (bad) sbb rex.RXB movsl std pop fbld mov sbb (bad) rex.WR icebp data16 pop loope xchg mov adc adc jmpq fcmovb jmpq adc xor clc (bad) std or rex.WRXB movabs (bad) (bad) push sub sbb xchg rex.W movabs sbb pushfq mov test (bad) mulb (bad) movabs iret lods jmpq lret test (bad) (bad) (bad) cli (bad) sub (bad) std xchg (bad) xor rex.RXB cld pop or adc (bad) out lock sbb pushfq jno jns (bad) add sti out rcrl or lods mov or mov (bad) fmuls addr32 je insb add adc retq (bad) xor test sub adc xchg rex.WX rex.WR (bad) fs push stc popfq lcall in sbb (bad) add adc xchg cwtl stos push nop mov (bad) jnp xchg sub xlat mov mov std adc sbb (bad) rex.RB sub roll in insl xor rex sub in test scas shlb stc xor (bad) xchg cvtss2si add add or xor in add int cwtl sbb jmp andb (bad) adc adc (bad) xchg imul sbb sbb jmp add int or mov (bad) mov (bad) mov nop (bad) lods or rex.WXB fimull mov xchg adc sbbl jb adc add cld cs jno lods test rex.WRX mov mov mov jle cmpsb (bad) cltd imul jne (bad) mov repnz js lock insb adc retq (bad) (bad) (bad) iret fs xchg cmp (bad) pop mov movslq insl gs js test adc fnsave out retq xor xchg mov push adc mov iret adc (bad) cmpb enterq (bad) rex.RX (bad) cmp movsl (bad) adc es (bad) rex.WRXB rex.WB jmp cmp mov rolb (bad) sbbl in rex.RB jg pop movabs xor ds add decb (bad) (bad) (bad) (bad) ds std movslq xor out xchg mov and cli push loopne or add callq xor (bad) repz imull movabs int3 rex.WRXB mov cmp jnp xor (bad) xchg rex.RX adc in add adc xor movabs jmpq in mov fs and (bad) std loop mov (bad) mov cmp (bad) repnz mov pop imul (bad) movabs (bad) rol mov push (bad) sbb xchg jmpq mov rex.B fisubl repnz add sub (bad) (bad) decb fisttpl data16 sub and lea outsb add stos rolb sbb (bad) std (bad) insl out mov add icebp rol pushq pop mov (bad) (bad) (bad) (bad) xchg out add fs movabs pop int callq popfq mov incl or cs test fwait jp mov rex.WXB rex.W movsb xchg (bad) adc pop cmpsl shrl mov adc vmwrite jmpq jmpq add add add adcb add add sub add xor add addb addb add fdivr (bad) addb je jmpq rex.XB pop movabs (bad) (bad) int3 mov loopne jnp jns popq or out ror stc or cmc jmp std pop pushq outsl and cmp movabs push jle hlt js xchg lret push repnz push insl push mov sub adc cld rex.WXB mov jbe insl mov (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) lods xor repz adc in movsl sub sub and rex.WR rex.WXB (bad) imul retq in (bad) incb add push clc (bad) int3 add divb or rex.WXB (bad) repz sbb out cmp xor rex.RX jl in lret or test leaveq mov adcl out int (bad) out cmpsl (bad) insb mov cwtl icebp sub sub mov pop (bad) and cmpsl jrcxz,pt mov lea and xor push sti sbb mov pushfq (bad) test (bad) fs (bad) sbb fist (bad) clc (bad) js mov push rex.RXB jp rex.W cmpsb mov xchg out rex.WRXB rex.R loopne je lock enterq rex.WRB (bad) sub mov cmp xor cli outsb (bad) rex.B rex.RXB (bad) pop sub sbb (bad) rex.WB (bad) (bad) mov xchg movabs xor (bad) sub lea out mov rorb mov push cmp sbb xor nop rex.W gs sbb (bad) (bad) (bad) decb movabs mov lahf mov (bad) cmp sti ja shrl fcompl rex.X rex.WXB rex.W pop icebp cwtl mov rex.R rex.RB mov outsb int pushq cmp mov xchg movabs xor jae rex.WXB jo fs mov andl xchg leaveq mov (bad) loope in mov movabs add movabs cmp mov addr32 xchg push push movabs jp mov mov fsubrl and imul (bad) add in fnstcw sub (bad) std in (bad) test rex.RX rex.XB vmovddup jg mov sbb scas jrcxz and (bad) mov testb and xor popfq mov (bad) (bad) sti mov add (bad) jne roll and rex.WXB repz sub adc rex.WXB mov rex lahf mov movb stos shrl clc loop xorb int cwtl (bad) xor cwtl leaveq sub xor popfq xchg (bad) and rcl jae (bad) pop fcomp imul js stos jnp mov and popfq add jo mov lahf fbstp (bad) je rex.X je jnp loopne adc rex.R (bad) pop (bad) rex.WRB xchg (bad) xlat xor jge xchg pop add jmp fwait (bad) (bad) mov (bad) sbb lods imul stos mov mov pop cmpl shll mov and in rorl (bad) xlat pushq lret adc (bad) (bad) (bad) cli retq pop or (bad) (bad) std test sbb cltd sbb jge (bad) or callq int andl (bad) cmp jg imulq xor (bad) (bad) (bad) dec rex.WRXB (bad) (bad) callq pop adc sub retq rcrl (bad) mov (bad) (bad) mov icebp stos (bad) rcr adc loope mov gs cs jge mov movabs (bad) sbb push mov jne gs xor fs insb add jae pop jl (bad) jnp repnz hlt xchg xor cmp (bad) test add (bad) movabs nop enterq nop cwtl push jne imul popfq jle and (bad) cli jbe xorl or cmp xor (bad) pop lock adc cmp iret xchg adc callq addr32 (bad) (bad) sti mov xor pop (bad) (bad) (bad) decb (bad) cmpsl add rex.X jmp outsb rex.WB test test cltd adc (bad) (bad) in rex in rorb lods or sbb mov lahf xchg std fdivp pushq (bad) (bad) (bad) decl rex.B and fs and xor jbe sbb or xchg int3 insl jge sbb (bad) cmc push cmp rex.RX (bad) xchg xchg xchg mov test mov not not mov jns movsbw movzbw lea jmpq callq jbe jae cmc sub jmpq jmpq lea movzbw movsbw lea jmpq jne jmpq mov jmpq pop movabs lods pushq xlat xchg (bad) out loope or xchg rex.W xchg rex.WR adc test nop gs sbb xor sub imul test in scas movsb hlt fwait rex.WRXB xor mov rex.R cmp sub fwait cmpsl lods out rex.WB (bad) (bad) stos rex.WX adc hlt xor cmp (bad) (bad) sti (bad) cmp mov and mov fiadd leaveq pop (bad) cmp (bad) (bad) jmpq cwtl add pop (bad) outsl xchg int3 xor mov out (bad) jns sahf (bad) cmc xchg stc rex.X or adc cmp cs movabs cmp retq subl pushq (bad) sbb lret push (bad) fwait mov rex.WX jbe pushq xlat movsl (bad) (bad) repnz mov mov loop and or movb xchg rex.WR xchg rex.W data16 rex.WRX pushq mov or or out rcrl jg xor out or lret (bad) mov sbb addr32 rex.X add pop fwait scas retq mov rex.XB stos (bad) (bad) (bad) incb xor adc ja and jae sahf rex.X fcoml (bad) (bad) rex.WXB mov sub (bad) (bad) (bad) ljmp adc mov xchg pop fbstp (bad) pop jne loope repnz and js xor movabs ja sbb jmpq mov sbb jmpq xor cld fidivrl imul rex rex.RXB orl xchg stos or popfq sbb mov std nop insb push test mov jge mov cs push mov mov rex.B out std mov cmp (bad) (bad) cli not jae add test jne cmp movabs (bad) (bad) sub (bad) (bad) std enterq and jb cmpsl sub fdecstp mov xchg xor mov mov (bad) lahf jb iret add (bad) dec cmp mov rex.W cmpsb jl movabs stos add js jae rex.WR mov jg sti pop jg outsl rex.B rex.WRB mov cmpsb (bad) (bad) adc (bad) (bad) (bad) incl (bad) jne cwtl mov rex.WR (bad) (bad) (bad) lods mov sub dec repnz in rex.RX add (bad) add sqrtps pop sbb mov imul adc xchg adc xchg mov xchg jl movsb shr cmpsb rex.WRX popfq (bad) fsubp (bad) (bad) nop stc rex.X and add add cmp pushq (bad) push fs (bad) lock rex.WX test (bad) (bad) sti adcl or (bad) (bad) incb pop retq xor rex.WRB jp lods xlat fiaddl cmpsb int nop lahf xchg rex.X rex.WRXB jp jae callq mov jne jnp stos enterq xor callq (bad) xchg and jae push std (bad) out (bad) (bad) push (bad) (bad) test (bad) (bad) (bad) jmpq fisubr xchg sbb (bad) pop push addr32 cmp cmc movabs ja rex.RXB test test pop clc sub loope sti push rex.WB stos (bad) jnp jmp (bad) xchg adcl imul test (bad) jnp xchg (bad) fdivrs sbb pushfq mov fisubl callq cs sub xor fldenv sarb fisubrl xchg cmp movsl mov rex.RB cmp movabs pushq jb and lret xchg imul mov mov out rex.RXB add add popfq retq mov fcomi test rex.WX jns sub cld mov sub (bad) pushq enterq rex.WX (bad) sub callq lods mov imul iret sahf out (bad) clc imul add cmp lret jrcxz or and pop push leaveq scas (bad) fs sarb sub xor loope add adc adc fiadd cli cld fwait sbb or in and jg cmp cld decl test rorb rex.X mov cld ljmp movsl test and out hlt out xor outsl (bad) sub add nop ja nop sbb fidivrl pop cmp and pop cli test mov jbe adc rex.RXB rex.B nop addl (bad) (bad) (bad) (bad) pushq xchg fsubs movabs movabs lret insl adc pushfq sarb rex.RXB push (bad) (bad) movabs xchg add jl cmp or (bad) jae leaveq jmpq jne btc mov jmpq jmpq pushq jmpq cmc mov (bad) lock test repnz jmpq stos cmc jmp in fidivl sub iret or cs leaveq cmc clc in repnz cmpsb ds (bad) shl mov jbe (bad) mov (bad) add mov xor scas xor movabs fcomps cwtl scas rex.R callq test (bad) sbb shrl rex in sbb jb rex.WB add adc rol mov (bad) pushfq sbb xchg mov retq mov (bad) sbb (bad) (bad) sti movabs (bad) test sub (bad) push sub fsts test (bad) (bad) jmpq scas fsubr adc in rex.B rex.WRB hlt faddl out fmull mov data16 movabs push loop ds lahf imulb pushq or imul mov and jns cmpsl mov test cmpb jmpq rex.W xchg test lret scas imul xor int sti sti rex.R (bad) rex.WXB (bad) jb test fwait jae jno cmpsb (bad) (bad) lret mov rex.WRX repz (bad) pop (bad) (bad) ror (bad) clc popfq rex.WX stc retq lock insb addr32 insl lods icebp (bad) (bad) mov (bad) cmp mov movabs jmp (bad) (bad) (bad) cld sbb sub popfq (bad) (bad) (bad) (bad) fucomp xchg std clc or cwtl je rex.WRXB fdivs sbb je shlb pop xchg or movabs jp cs fwait add cmp nop cs cmc or fldcw pushq cmp rex rcr cmp jge sub stos xor sarl sub or (bad) mov stos mov (bad) (bad) and bswap jmpq and xchg rex.WXB rex.WRX sahf test jge retq sti sub stos (bad) or jrcxz scas sbb mov mov or adc js cmp pushfq js es je pop insb (bad) mov or pop fsts xchg callq adc xor mov and mov xor xor mov jne rex.X xor and (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) xchg callq data16 rcll (bad) mov (bad) scas ffree ja xchg repz cmp lahf iret jne jrcxz ja (bad) stos push outsl mov movsb callq rcrb xlat int3 lock fstpt sbb (bad) pop cli ss mov xlat ja stos (bad) xchg sbb lret rclb imul push hlt xchg (bad) sbb adc or mov rex.WRXB insl mov jae (bad) adc sub rex.W or nop sub not mov jmpq jmpq (bad) out or (bad) repz fwait lock pop outsl adc sub (bad) outsl (bad) mov mov mov (bad) xchg (bad) retq mov xor pop scas mov mov (bad) (bad) jne or push push cmp cs mov cmp jrcxz callq (bad) cmc sahf pushfq movsl addr32 fild scas fsts jnp iret mov idivl rex.RXB pop add rex.WRB in cmp je rex.W mov (bad) (bad) cld test movabs retq adc ficomp cmpsl mov add add add pop push pushfq jnp mov loope push movabs (bad) mov rcrl (bad) jp jnp add iret loopne cmc push cmp retq fnstsw mov mov and movabs gs imul stc or not add neg mov bt test jmpq jae cmp test cmp jmpq mov push (bad) mov (bad) mov and in xlat out int fdivs test push subb sbb mov insb test movabs (bad) xchg (bad) pop push clc jp hlt mov repnz std cmp cmp por or (bad) rex.RXB xor lods mov rex.R (bad) push in sub mov (bad) mov fsubl popfq mov fcoms mov mov cmp pop lea (bad) mov out (bad) (bad) (bad) decb (bad) (bad) (bad) jmpq rex.RB outsl add fcoms sub (bad) nop mov lods add (bad) (bad) cmc out mov fidiv fstpt adc adc xor xor xor movabs mov mov and movabs push push mov ds scas in fadds repz (bad) pop cld es and mov (bad) popfq (bad) (bad) jae int rex.RB sti incl imul jns pop out add mov idivl mov cmp cmp add dec adc rex.RX fs fnsave pop fldl cmc loope mov add imul push stos std push sbb mov cmp loope out pop sbb loop movntq cli stc cmp xlat (bad) out int repnz (bad) cld mov cltd sti mov (bad) (bad) mov cmp (bad) fldt cmpsb mov es (bad) sahf jo in (bad) movabs rex.R movsl rex.W jmpq jae jmpq cmp jmpq jmpq add rex.WR movslq rex.RX add lea int enterq or or int push push xchg sub int rcll (bad) lret stc mov mov jne (bad) cs mov jne rolb ds callq (bad) jnp movabs or js leaveq rex.W (bad) fdivrs fstl mov rex.R mov pop jne (bad) mov adc testl sti es movabs (bad) (bad) sti test add (bad) (bad) incb cs or jle repnz (bad) (bad) inc sbb es mov rorl (bad) in add rex.WB pop and mov pop movabs movabs int xor mov loopne or adc data16 push (bad) mov (bad) mov test je movzbl movsbl not mov movzbw movzbw movzbw mov lea movsbw not lea jmpq mov add rcl mov rcl mov cmc push movsbw mov neg rol test sub bswap rex.WB icebp xadd sub lea xchg movsbq movsbw lea seta mov seto movzbl mov bswap lea bswap xchg lea jmpq pop or xor (bad) (bad) (bad) test sbb push (bad) sbb or (bad) fldcw test jbe jb jmp push callq push xor xor rex.RB movslq test stc fistpll adc add repnz mov (bad) cmp (bad) xchg int3 leaveq jp rex.WXB movslq in rex.RB mov mov (bad) (bad) sti pop test incb sti imul mov and or (bad) xchg (bad) jne test (bad) (bad) incl xchg (bad) fmull mov sbb mov jrcxz in cmp je test test and (bad) (bad) mov pop enterq (bad) divl xchg mov (bad) cmpsb sbb adc push mov icebp mov xor (bad) idiv div sbb lret mov in pushq jrcxz rex.WRX cmc rex.R pushq sbb jno (bad) rex.R (bad) push xchg movsb and scas sbb jle and (bad) rex.WRXB rex.R mov cmpsl sbb xchg rex.WB movabs mov retq (bad) (bad) cli hlt imul (bad) (bad) std mov (bad) fldt adc sbb push mov adc (bad) fild mov sbb retq std pop pop (bad) outsl pushq sbb enterq (bad) (bad) fisttpl ds xor push push (bad) out sub int out rex.R rex.RX push or ftst mov rex.WRXB imul rex.WB loopne enterq (bad) fnstenv in cmp (bad) sub sub test sub test cmp jmpq test jmpq je bt add clc cmp jmpq ss test and jo xor sbb popfq xchg std xchg (bad) cmp rex.WB gs pop test (bad) fdivp fstl xchg sub jl pop cmp mov fnstcw pop rex.RX movabs or rex.R (bad) (bad) (bad) std int sub (bad) out rex.R add add fild xchg xchg rex.WRB add js (bad) std jrcxz cs push xlat jl ds jge icebp movabs jrcxz mulb adc rex.B mov addr32 and lea and es cmp add nop stc imul test push std scas xchg fsubs test stos rex.WR in rex.WRXB rex.R sub jns jl es movabs leaveq out mov jae xor mov xor jl sbb lods (bad) roll push std clc cmp jl and je and cmc punpcklbw add add mov (bad) xlat (bad) (bad) negb add mov push sbb mov sbb rex.RXB ds rex.WXB (bad) insl mov lret rex.XB and adc sbb and jg (bad) (bad) and test andl addl es xor xorb insb addr32 sub rex.RX rex ja pop rex.RX ja sub vprotb (bad) rex.WXB mov (bad) rex.WRXB push loope outsb rex.WR (bad) rex.RX rex.WRXB mov (bad) shlb stos pop mov sub loop gs mov sub push jae sub mov out rex.WRX xlat jle push es jnp out adcl mov push and (bad) test (bad) push fldl test xor mov rex.RXB cmp rex.RX sti xchg (bad) fnstsw fs rex.WRX mov add jrcxz (bad) xchg (bad) icebp out cmp sbb movabs pop hlt jmpq mov and ds cltd mov jne rex.WRX fadd add rex.WX movslq in mov sub lret out add lea mov decb es popq mov ss rex.R adc sub or rex.RXB in scas shrb orl outsb and sti in iret (bad) rex.RXB imul and xchg clc std out negl (bad) push es cmpsl stc rex.X (bad) (bad) pop test nop andl rex.WRB sbb cmp (bad) sti lret pop add mov mov jge insb push out retq (bad) rex.R stc add add or sahf cmp (bad) jo,pt out (bad) (bad) lods imul add mov mov xor (bad) xor fistpll pop rex.XB stc data16 fild rex fidiv and mov (bad) sbb (bad) test (bad) and pop gs insb (bad) ss in (bad) sbb mov sbb (bad) movsb movsl int3 nop adc mov pop fs xchg cs pop (bad) (bad) sbb sbb lahf imul movabs mov sbb int imul add leaveq jae insl sti push data16 out or out (bad) (bad) std or sub jae iret in adc rex.WRB and (bad) add test jl (bad) xor loopne rex.RXB stos mov rex.RX adcl (bad) (bad) (bad) jg sbb xchg mov callq lahf xor (bad) cwtl subl add and out mov (bad) repnz rorb mov push hlt (bad) retq jmp xchg (bad) fmull (bad) data16 jmpq test jmpq jmpq jmpq jmpq adc sbb rex.WRB mull repnz rex.R insl (bad) (bad) jae xchg adc imul rex.WRXB movslq pop (bad) or fwait sti xchg movabs (bad) std (bad) sbb lea mov cltd div (bad) sarl sbb movsb test (bad) rol cmp (bad) push repnz clc cmp repnz outsl (bad) mov pop adc (bad) (bad) cld frstor mov (bad) (bad) (bad) lcall fnsave fucom push movabs movabs cmp mov lods scas mov (bad) cmc pop rorb lret scas mov xor std scas (bad) jmpq fdivrl rex.WXB xor cwtl lods rex.RXB (bad) xor (bad) icebp data16 mov cmp cmp jb (bad) scas lods sti xchg add js adc jl jle fiaddl (bad) scas nop je (bad) lret movabs pushq xchg (bad) push (bad) jno (bad) push jmpq (bad) add movabs pop clc (bad) push rex.WB jno sbb jnp leaveq (bad) adc mov push movabs mov xor jbe je clc movzbl push xor mov xor btr sub movsbw not movzbw lea jmpq jmpq cmc xchg push xchg sbb pushq jb imul or imul (bad) pop jne and jl (bad) (bad) sar callq ror cmpsl (bad) movsl add xor jp out mov faddl pop mov addr32 xchg rex.WB mov fs test in (bad) rex.WRXB cmp jns sbb push loope cmpsl in mov jns int3 mov (bad) cld fwait rex.WX roll sub sub (bad) add cmc xchg rex.XB (bad) adc mov addr32 fisubr stos rex.WRB xchg insl (bad) pop out mov (bad) orb (bad) (bad) sti test add (bad) rex.RB pushfq xor rex.WRXB mov xchg (bad) je insl std movabs negb jrcxz test iret cmpsl lret cmpl push jrcxz adc data16 movabs repnz pop rex.XB retq rex.WRX mov xor (bad) sahf cmp ds cli (bad) (bad) (bad) jmpq rex.X movabs shlb add (bad) hlt cli repnz sarb mov (bad) xor sbb and insl cs xchg scas jle jno mov rex.WRX rcll pop mov xor sbb cmp sub and vpmacsdqh ljmp jnp xlat decb mov out mov jne jno pop xchg cmp sub loope rex.RXB enterq repz mov cs movabs push sahf rex.WXB cmp mov rex.RXB xor test rex.WR rex.WX rep rorb rex.XB lods cmpsl out mov movsb (bad) (bad) (bad) (bad) cld add (bad) (bad) (bad) inc jb jbe (bad) (bad) std rolb std xchg shrl rex.WR add add sub int3 pushfq (bad) xlat lods faddl push lret (bad) rex.WRB rex.R scas (bad) jg or ja add mov pushq cld movabs rex.XB jle mov push lock pop enterq mov rex.XB xor jge movslq add add cmpl add add xor sbb add add or add or add pop and add and add add lock add movabs add lock add loopne add add add add add add add add add add and add and add and add and add and add sbb (bad) and add jae (bad) insb insb add fs gs rex.XB jne je jb gs push je imul gs movslq jb add outsl js rex.R insb add jb imul add insb outsl (bad) fs gs rex.XB jne je jb gs push je imul js jb js pop insb insb add movslq push fmull repnz or lods (bad) push add (bad) imul jp fwait push cmp pop xor data16 in or (bad) sub (bad) lods ss sbb fmul jae adc pushq je pushq (bad) shlb fadd nop mov outsb test rorb iret mov callq rex.B sbb or dec jg xor fiaddl flds cld add xchg loopne lret jae sbb js and lret pop jmp fs mov outsb jmpq (bad) mov sahf jrcxz ss cmp sbb jmpq js sbb push (bad) (bad) stos xchg sbb push stos insb movabs xchg mov push jmpq test jno add push scas mov (bad) stos (bad) (bad) mov test shr lods (bad) xor cmc xor push (bad) in rex.WRX js jrcxz rclb xchg repz lahf (bad) retq jrcxz jl imul rex.WRXB adc and retq pop orl xor sahf or icebp xchg dec and pop pop movabs add lret rex.X out and (bad) xor sbb lahf (bad) sub push (bad) and (bad) cmp cld leaveq mov scas pop (bad) in fiadd pop int3 mov lods (bad) rex.WX movslq insb adc or jb in jns fild or sbb outsb jmpq cmp mov (bad) jbe pop (bad) xor adc gs rex.R push mov fsts pop mov jns test xchg mov out (bad) pushq (bad) out test faddl pushfq loopne mov rex.WX push or andl rex.WB mov fadds xor sbb pushq or rex.WRX lahf movsb shl ss rex.WXB sbb pop stos add pop cmpsw (bad) mov xchg (bad) (bad) je jb adcb xchg mov sbb movabs lock movabs rex.XB mov icebp pop fdiv (bad) imul mov movsb and loope jle rex.X and callq xchg (bad) cmpsb add (bad) movsb (bad) (bad) rex.WXB cmp rex.W ss mov sub sbb popfq fsub ss jg rex cmpsb rex.B cmp pop sbb in je xchg int3 sub sbb mov and and jge sub imul rex.WX rex.XB stos fildll add lret (bad) pushfq sbb jmp sub rex.WB pushfq retq sbb jrcxz (bad) int cwtl mov pop addr32 jb sbb test cmc (bad) (bad) mov xor sbb jl (bad) fdivp stos fwait pushq sar (bad) leaveq rex.WXB push mov cmp pop pushfq xchg sbbl insl sahf xor adc (bad) (bad) rex.RXB cmc gs in test pop cmp or xor test fisubr rorb in push imul rex.WRXB insb out cmp (bad) pop movabs adc (bad) rcrl cmp movabs push (bad) leaveq and lods test jl fiaddl loop pop mov insb rex.RX and push in mov xchg mov ss sahf hlt jg and xchg (bad) sub add fcomip push mov and lock int add in add fldcw ss sahf scas mov cs cmp pushfq leaveq in add (bad) adc loop sbb ds rex.B frstor rex.RX sub (bad) callq add loope jl (bad) or xchg cmpsl rex.WXB push std movl cmp and repz (bad) ja callq repnz out and fnstenv outsl (bad) pop jg rex.RB imul rex.WR or rex.WX cli pop test pop push and pop (bad) cmp cmp (bad) cmp xchg imul and (bad) jmpq cmp insb push in sbb outsb or xchg (bad) fs mov jo (bad) popfq cmp xor xor (bad) repnz in mov loope (bad) (bad) imul repnz stos repz (bad) (bad) shlb or (bad) pushq jg movabs (bad) or cmpl rcr xchg (bad) std cmp pushfq jge (bad) (bad) lods (bad) cmp sbb rex.X push jne out sub pop addr32 iret xchg xor and push sbb pop mov insb retq xchg (bad) adc pushq (bad) xor sbb xchg in int dec scas mov lret leaveq cs rcrl retq movslq rex.X pop jge rex xor outsb jg lahf cmp and orl adc mov ror sbb (bad) fs (bad) or jmp dec mov cmp push movabs sbb xchg enterq (bad) jl xchg addr32 xchg retq mov mov (bad) rcll addr32 xchg fnstsw pop (bad) or testl movabs (bad) mov rex.WRX gs mov insb (bad) pop jge shl push neg sub cld sbb fistp and jnp (bad) rex cmc adc shrl retq idiv stos pop fistp mov sbb repnz stc mov iret mov loopne pop out add cwtl ja popq xlat xchg ja xchg (bad) xchg jbe pushq (bad) xor (bad) lret sub xor (bad) fidivr pushq xchg andl fbstp std mov sbb lods movslq and jle jmpq rex.XB rex.XB test push (bad) xchg add or icebp adc or mov fmuls rex.B mul retq nop xchg mov scas jmpq insl (bad) and rex.RXB or jl rex.RXB mov cltd lea fcoml xchg jns rex.RB push in int3 lahf xchg rex.WR cmpsb popfq sub ds pushq or adc cmc movsl pop repnz fisttp cltd (bad) loopne in (bad) gs imul jnp mov loop loope addr32 pushq (bad) sbbl shr (bad) cmc movsb sti movsb sbb movslq (bad) xor iret sub rex.R sbb pop femms (bad) cmp leaveq jo xor or rex.X push addr32 shlb push rex.WRB or pop xor je sbb or test (bad) jns mov xchg mov vorps xor mov (bad) rex.RXB out icebp sub movslq jo xchg nop insl and or stc test and pop lods insl test shll xlat (bad) jrcxz cld rex.XB mov push lret loopne mov callq and (bad) jp (bad) fs rex.B repnz lea and cld ja jle and (bad) fild fs cmp mov cmp outsl adc mov pop sbb test out jp fildl (bad) sbb lods imul cmpsb movabs jge pushfq sbb mov rex.RX pushfq and insb mov in ja int3 jrcxz or jmp jmpq and repnz ds (bad) pop mov cmpxchg fldl hlt (bad) (bad) cmp outsb sbb pushq sub (bad) xchg mov jo sbb sub (bad) rex.RXB adc (bad) pop or test (bad) movabs outsb (bad) ds std je movabs (bad) sbb jnp jmp or xchg mov (bad) or cmp jrcxz cmc jmp or adc stc mov fwait cwtl adc pop (bad) (bad) or lock andl jno iret jg cmp pop push (bad) clc or adc rex.XB sub callq push xor loop cld outsb scas (bad) rex.WB data16 add jno (bad) pop popfq cld pop cltd (bad) pushfq (bad) mov sbb xchg loop (bad) (bad) fistl sbb mov adc (bad) addr32 (bad) (bad) repnz jge lods loop cmpsl and (bad) (bad) jo mov add (bad) imul xchg pushfq adc push (bad) push (bad) mov movabs or jrcxz (bad) xchg xor xchg (bad) push out xor es mov rex.B pop xor cs rex.X cltd incl out adc or outsb scas rex.B gs rex.B rex.WRX rex.RB js jrcxz pushq fsubrs jp (bad) callq jbe (bad) fisttpl xchg adc push cmp (bad) ror out (bad) lock and cwtl sub pop loope hlt loope enterq cmp push repz (bad) (bad) ss pmullw mov lea and shrw push (bad) jbe xchg xor (bad) mov jmpq mov sub xchg xor sbb scas mov lret repz mov sub lahf (bad) pop pop add jo (bad) rex.RX std add sbb lret cmp xchg int3 or or outsl mov sar test lret push jo fadds (bad) and repnz rex.XB jb lahf cmp mov movsl (bad) and xchg (bad) (bad) scas nop rex.WX sbb cmpsl gs out rex.WRB mov (bad) pop imul jb mov out stos outsl movabs subb lods nop (bad) xlat and mov lcall mov jns fstpl imul xor cmovae in rex.WRXB jno sbb fcmovu rorl adc xchg push hlt rex.RB (bad) lods and or pop push jmpq int3 neg mov (bad) cmp xchg and xchg test clc shlb sbb in and jne rex.WRXB rex.WR nop es jae jb retq callq push sbb adc rep fsubrs cmp movabs rex.WX push outsb imul cs insb add rex.XB (bad) je rex.WB jae (bad) outsb movslq add rex.RXB imul je stc bt stc clc add clc jmpq scas (bad) in (bad) rex.XB (bad) or fidivr mov sbb (bad) ja subb shlb sbb jno xor add (bad) (bad) mov rex.WX int jg xchg lods adc mov lret mov imul xor cmc and adc jl push mov jbe xchg (bad) lods (bad) jb push fidivr mov gs (bad) (bad) (bad) sti loope jp xor (bad) (bad) (bad) fwait rex.XB (bad) (bad) sub jne rex.WRB adc rex.X add add sbb fldcw and out rex.RXB push cmp movabs rex.WX es pop xor mov adc xchg imul movsb (bad) mov rex.B jge fwait sbb fwait add (bad) push rex.WRB in push mov cs rex.XB cmp rex.WRXB push xchg outsb mov rcrb xchg pop pop test fisub jbe cmc shrb and ja mov (bad) xor pop mov cmp rex.WXB mov fidiv xor sahf fdivrl popfq sbb cld mov or movsb lahf (bad) cltd (bad) push rex.R or (bad) (bad) sti fcompl fiadd sahf (bad) mov je in mov pop cli int pushq rex.W cmp sbb pop jl sarb out movabs insb clc fwait add sub pop (bad) rex.WX push sti out add pop (bad) callq stc jmpq sub scas rolb mov rex.XB mov callq mov pushq pop test xchg adc test in xor mov add cli mov hlt mov pop jle out fs jp (bad) (bad) sub cli jnp mov add (bad) (bad) push mov test loop or int3 xchg mov sub adc (bad) pushfq mov cmpsl jbe jrcxz mov rex.XB cmc push popfq fnstsw or sti stos rorl sub xlat pushq adc rex.WB fisttp xor xorl movsl (bad) (bad) (bad) (bad) ljmp and or xor (bad) pushq rex.WX pushfq fs rex.WX in retq jae xor rolb in mov sbb mov (bad) (bad) jae mov rex.R (bad) or lret and (bad) xchg cmp and sbb rex.WXB (bad) rex subl jae xchg pushq jmp (bad) icebp adc (bad) fistl (bad) xor (bad) sarl out sbb imul xchg pop (bad) mov (bad) fistpl in pop add sub hlt sar (bad) (bad) sti and xchg movabs cmp sub (bad) negl sbb jnp xchg (bad) ss movsb ds adc (bad) xor rex.R (bad) (bad) inc rcrl cmp mov (bad) pushq pop (bad) adc pushfq or test leaveq negl (bad) mov and mov icebp loop jo (bad) jb movabs cwtl mov rex.R (bad) outsl in (bad) cmc in fnstenv and (bad) fiadd jnp test outsb pop lahf es rex.WR data16 cltd rex.WRX mov cmp retq repnz fdivs fbstp jmpq pop jnp mov sahf add cmp jbe push rex.B rex.WR mov pop lahf je rex.WRX (bad) (bad) cld sub (bad) (bad) (bad) (bad) (bad) (bad) jmpq pop jae rex.WB xor push frstor mov mov mov outsb loope adc xchg repnz (bad) (bad) cltd movabs (bad) clc mov rex.WX xchg rex.WRXB (bad) sti pushq in mov mov fidivr and xor ficom loope bswap lea mov retq jmpq test (bad) jb mov cltd rex.WXB jl jle cmpsb int3 mov (bad) (bad) fsub fsubl fsub mov rex.WXB cmpxchg (bad) cmc mov fist rex.WB sub (bad) push sti nop jbe movabs in (bad) movabs int3 in sbb repnz cmp and (bad) es mov test rcll imul (bad) mov jle sti (bad) mov (bad) (bad) (bad) std rex.RX movsl mov or insb sbb in iret pop rex.WB sub sub stos rol sbb mov mov cld fmuls adc lock in mov rex.RX xlat mov add shld bsf movl not (bad) icebp adc rol or mov jmpq jmpq jmpq jmpq mov jno (bad) mov lock sbb in loope andl outsl insb outsl add adc outsb push mov add (bad) out (bad) mov bts in jmp or fdivl xor movabs cltd jmp orl popq xor sahf rex scas retq mov xor jmp and rex.RX pushfq rex.RX lock rex.WR xchg adcl (bad) (bad) (bad) (bad) decl mov cltd cmpsl mov rex.RX rex.RB or mov mov loopne jge pop mov icebp jo mov retq xchg fidivrl add add rex.WRXB rolb and outsl rorb mov pop in (bad) mov mov gs fbstp pop (bad) cmc sbb mov (bad) (bad) ja addb fiadd mov rex.W jle jne movsbq mov jmpq fwait cmp (bad) lret lods jns xchg adc out roll push (bad) cmp in hlt (bad) jmp and test sbb mov and mov movabs push pop add sahf mov stos push mov xor rex.XB lret cmpsl (bad) repz sbb cld out add add or sarb (bad) imull rex.X rex.RX xchg (bad) stos gs (bad) rcll xlat jns xor fidivr add mov movslq jne (bad) jne adc jns cltd xchg test mov rex.W std push je setns movsbw seta lea lea not movzbw bswap movzwl lea not lea not mov jmpq (bad) (bad) mov pushfq movsb (bad) sarb xchg mov (bad) cwtl pop pop xchg pop (bad) rex.RB cmp insl jnp rex.RXB mov scas (bad) push nop in fildl (bad) callq (bad) clc stc (bad) (bad) xor retq jns rex.WRB (bad) addr32 and jrcxz and rex.WRXB pop movabs pushq mov pop rex.X and pop jl (bad) (bad) (bad) sti imul jp (bad) (bad) (bad) (bad) sub jnp jb pop adc cs jmpq (bad) jle insl add cs push push rex.R push adc push (bad) (bad) (bad) callq and sub jae outsb mov mov (bad) outsl stos (bad) movabs outsl lock imull lods pushfq rex.WB lock jle test sub clc shl jmpq rex.XB (bad) ss push add int mov sub ja rex.RB es popfq int (bad) shrl sbb in rex.RX lods jnp cmp pop sar xor callq addr32 jbe jge xorl rex.R push xchg (bad) loop (bad) (bad) xlat cmp push jb lods jae cwtl rex.WXB fwait xchg pushq cltd xor std (bad) mov lock xor rex.X (bad) (bad) cli xlat cmp rex.B (bad) (bad) std nop fisub fs rcr mov cmp push out rol (bad) (bad) (bad) dec xchg add fs pop out subl (bad) xor data16 mov fs lahf mov xchg xchg jg js (bad) je test data16 jge mov add mov rex.WX jg (bad) movabs nop cmp add imul sbb and xchg rex.RB fsub sbb movabs push (bad) sub (bad) jl or (bad) cmp (bad) sarb (bad) cmp pop retq roll jmp (bad) add divl (bad) mov add mov push (bad) (bad) (bad) sti rex.R sbb mov (bad) (bad) incb rex.WB repz mov fs (bad) (bad) (bad) (bad) incl rex.R xor fwait mov adc imul mov (bad) sub pop or sbb rex.WRXB and mov push ss sahf xor leaveq pop callq shld jmpq callq jmpq callq jmpq setnp lea not lea mov pop jmpq mov jmpq nop rorb es rex.WR imul movb retq out xchg mov mov fnsave jmp repz sub (bad) ss test cs movl sbb and cmpl mov test fnstsw rex.R sub add mov sbbb (bad) cwtl adc mov cld (bad) rex.RXB lods hlt (bad) (bad) (bad) inc mov xor movabs sarb mov rex.WX out shrl or cmpsl jp lods mov (bad) test jle rex.R test cmp mov scas std sub (bad) pop ja imul (bad) jae mov push mov rex.WR movabs xor leaveq push (bad) es push mov out rorb (bad) test popfq lock sbb (bad) xchg cli popfq cmp (bad) lods rex.B lock (bad) retq outsl sbb sbb insb sub (bad) and push cmpsl xchg adc mov pushfq repz adc cmp push pop and xchg fwait (bad) push (bad) mov loop and and rex.WX or mov (bad) cmp mov (bad) and xor (bad) (bad) (bad) std rex.RX jae add add or pushq mov mov rex.WRXB jb movabs int lret movabs rex.WRX mov jb (bad) rex.WRB add test (bad) lcall movsl adc callq push and jae fsubrs xchg push xchg sub (bad) pop lea fstps pushfq int3 (bad) rex.X lock lret in (bad) leaveq or rex.RX rex.W rex.B push js push rolb gs mov test popq nop add xchg (bad) jp jno xor je (bad) xlat lods push frstpm(287 cmp mov or cmp sti pushq (bad) (bad) (bad) (bad) and repnz vcmpss (bad) (bad) jb ds movabs int3 mov fs mov pop or mov ja push and mov lods rex.WX es in and decl cmp mov outsl or mov rex.WRX rolb add add mov (bad) add add add add add (bad) add sbb sbb sbb shrb add sbb add (bad) add add add add add add and add add add jb add add add (bad) (bad) add sub mov add add add add mov add hlt adc add in sbb add add or (bad) add stos add mov push rolb in in pop xchg (bad) fidivr rolb (bad) pop rex.R rex.W lret cli ds loop out xlat sbb lock mov movabs addr32 lret xchg mov scas pop xchg xor in or cmp (bad) xor (bad) mov or sbb (bad) add sbb mov (bad) stos pushq (bad) mov (bad) jno fwait lret mov and mov stos mov sbb mov cmpsq add lods js pop and js,pn (bad) xchg (bad) fstpt cmp (bad) fiadd movsl rex.WXB lea repnz sbb push rex.WRB add rex.X imul out jno addr32 sbb pop xchg pushq int3 rex.RXB jo in xor pop in movsl out leaveq (bad) pop cld adc shrl lret fbstp gs iret movsl outsb (bad) retq xchg rex.WB fstpl add push xchg fcmovnbe rex.WRXB (bad) pop xor in add push xor and retq sbb and xorl mov cs pushfq callq frstor add retq and rex.RXB mov mov xor adc es fidivr add int3 addb add rex.WRB or or add xor xor (bad) (bad) push shll jne cmp sub lea loopne jb sub fs jno jae retq movsl jle divl adc enterq adc or in or and rex.RB ds xchg (bad) mov (bad) (bad) and mov pop xor push scas rex.WXB mov (bad) cmp rex.WXB sbb mov cmp ror pop jmp add jle out push rex.XB mov out add xchg xchg ds js stc pop imul mov rex.WRX add in adc je adc jrcxz imul jrcxz sbb cmp (bad) jle fldt push (bad) movsl and jmp push jrcxz sbb retq mov repz adc rex.RXB cmp add push cmpsl push mov or int3 adc hlt jns (bad) sub mov repnz fmul cmp lret cmp (bad) mov sbb mov ss xchg jno xor mov outsl add (bad) rex.X jmpq and xor (bad) test mov jle or pop push adc mov push adc stos pushq push sub lret (bad) in sub mov test lock jg (bad) or xchg movabs sub jne add rcll (bad) rex add sbb nop stos addr32 or js cmp and retq jl,pn cmc rex.W hlt icebp (bad) std pop fwait cwtl jmpq in mov roll pop xchg ds cmc mov cmpsl cmp testl (bad) jmp sbb sarl outsb adc loop lods cmp outsl in cld or pushq mov rex.XB (bad) mov xlat movsb fwait leaveq outsl rex.XB xor sbb (bad) (bad) bswap mov loopne lods xor add xchg rex.WB xchg sub repz mov je (bad) mov jo movabs in cmp pop test leaveq sub rcll adc imul sarb pop xchg popfq imul in (bad) pop sub cmp mov in jl repnz fmul pushfq shlb sbb push xchg pushq lret jns sbb fs (bad) iret xor data16 (bad) out pop out (bad) pop add mul (bad) (bad) sbb pop pop (bad) rex.WR mov icebp adc push pushq cli or add (bad) rorb cmp out je rex.XB xor out (bad) cmpsl pop and and out and test xchg mov (bad) btr test (bad) ss int3 mov xchg loope mov sub add xor sbb je,pt decl std (bad) rex in sbb movb callq adc jno sbb rex.XB rex.X rex.WRB rex.WXB mov and fs fs fimull xor and (bad) rex.RXB mov (bad) int3 xor movabs mov cltd mov test xchg add es in (bad) cmp mov jne and mov cmp adc rex.W cmpsb cmpsb mov pop rex.X movabs rex.WX jmpq sub (bad) insl test (bad) and out (bad) lods adc xchg rex.WRXB leaveq retq rex.WX sub rex.WRB (bad) sbb or sub mov hlt outsb outsl movslq (bad) pop fiadd (bad) (bad) (bad) jae (bad) outsb adc mov in fidivl int out in js sub xchg sub test adc lret (bad) sub fcomp sub fsts jb insb (bad) popq jne retq add test xchg pushq and andl mov mov callq xlat sbb movabs add (bad) outsl retq rex.WX adc pop lret scas push xchg (bad) mov rcl nop movsl lea mov push pop rex.R negb hlt and xchg adc xlat fistpl rex.XB push (bad) fnsave enterq fiaddl movabs push (bad) outsb in xchg cli mov jl fisttp push movl pop test iret mov lock push or mov rex movsl (bad) movabs xchg scas rex.WRX movabs sbb xchg (bad) sub sub mov cmp push outsl movabs mov pop cmpsl xor jo notl rex.RXB ss rorl pop sbb adc mov loop (bad) cwtl (bad) or mov lods std ja mov outsb (bad) cltd outsl jno outsl sarb pop push loopne jmp imul (bad) rex.WRXB mov (bad) rex.W (bad) fcompl mov jrcxz int3 jmp cli rex.WRXB nop cmp xchg mov push jmpq mov (bad) rorb push jp xchg rex.RB data16 xor je pop divl mov in clc cwtl mov nop sbb imul mov fsts push or outsl push scas adc mov rol mov adc xor (bad) cmc and (bad) xchg rex in (bad) rex.WX cld out iret jp jne rex.WXB gs rex.R out sti popfq outsb (bad) rol rex.XB pop (bad) rex.W and jnp adc cltd pop (bad) xchg in cmpsb lock jne pop add xchg sub enterq rex.R movabs mov xor js cmp rex.RXB ja and enterq testb pop movsb cli (bad) pushq jne jge popfq lcall adc xor mov out (bad) retq out orl or fwait std pushfq mov mov icebp sub outsb adc mov (bad) fistpll fs (bad) pop jne add xchg (bad) xor push hlt mov in sbb shrb rex.RB ss xchg cltd sub sub out rex.WX adc subb xchg xchg scas xchg adc sub callq sub movsl push rcr movabs cmpsb (bad) xchg (bad) fimull movsl adc (bad) std pushfq (bad) lods rex.WRXB pop rex fs loopne pop (bad) cmp (bad) adc add xchg and negb mov loopne addr32 jmpq adc xchg (bad) es fisub mov (bad) pushfq rex.R jo add clc test add addr32 (bad) (bad) and clc es xchg mov (bad) (bad) (bad) in add test nop scas add (bad) scas movsl cmp xor leaveq leaveq cwtl psubw jo rex.WRX (bad) out rex.RB scas cmp (bad) imul fdivr (bad) mov fxch mov add (bad) (bad) mov (bad) jrcxz sti pushq xor lock pop in or icebp gs sub (bad) (bad) add or mov (bad) adc mov enterq mov stos lock shrl rex.B repz in (bad) addb enterq add retq jbe mov jmpq jns outsl shl mov gs (bad) (bad) test rex.WB (bad) (bad) or pslld rex.WRX stos pushq pushq cmp (bad) loop pushq adc rex.W sbb mov jrcxz (bad) in push or pop rex.WRXB pushfq xchg xchg in (bad) rex.X (bad) insb and or rex.WB (bad) (bad) (bad) outsl loop adc adc sbb (bad) sub or cmp sbb pushq mov (bad) rex.WB and jmp jp outsl scas movsl mov or and rex.WR or mov cmp push (bad) (bad) movabs xchg outsl (bad) xor addr32 (bad) jo clc rex.WRXB stos sub fsub insb (bad) rex rex.WR jb cmp mov rex.WRB mov add cmc and (bad) push ficoml cmc rex.WXB test fs stos sub pop cwtl insl (bad) movslq rex.WB xchg mov jp cltd lret out add in cli test (bad) fwait ds sub stc jo rex.B rex.X mov adcl loopne jrcxz (bad) rex.WB mov ss sbb cwtl rex.R orb pop fidivrl xchg (bad) mov loop jp mov fnstsw xchg orl sbbb jmpq notb jns mov pop insl loope loop pop add cs (bad) fisttp cmpl xchg adc jbe (bad) xchg sbb (bad) (bad) test pushfq (bad) je or and jnp lret jae or jp scas sbb mull pushq in (bad) mov (bad) cltd pushq mov enterq adc rex.WXB sbb (bad) es add (bad) pushq rex.RB (bad) mov fwait adc (bad) rex.XB enterq xchg (bad) outsb mov sub sbb (bad) adc rex.RXB mov (bad) rex.WRX xor leaveq (bad) sub (bad) jmp fcmovnbe (bad) (bad) xchg cmp mov test enterq sbb in sbb and test cmp subl cli rex.RB in fucomi jmpq (bad) rex push popfq xchg repz mov xlat negl (bad) rex.RB cwtl and mov test cmpl rcl ja mov pop out lock sbb cltd mov cltd adc (bad) adcb (bad) jmpq rex.RXB jp mov and adc cmp (bad) cld shl xchg neg add (bad) add stos sub (bad) cmp xchg (bad) and jge (bad) push rex.WRXB pop mov (bad) rex.WX jg scas mov (bad) (bad) sbb mov retq (bad) rex.WRX mov leaveq jmp fwait (bad) (bad) (bad) mov (bad) lea insl lock xor add (bad) mov and adc fisubrl sub movabs jp es xor ss rex.WRXB cld ss sub out add in ja (bad) push movabs and gs cli push xchg (bad) add mov repz mov std hlt stos rex.R test xchg callq adc xchg lret rex.WR rex.WR xor cld movslq pop sbb xor xor (bad) cmp adc (bad) and mov rex xor jb jno (bad) xor mov pop fistpll adc push xchg mov (bad) xchg rex.WX (bad) inc test retq xchg pop jb jrcxz pushfq repnz (bad) sarb scas (bad) add fcmovnb add rex.RX (bad) jbe rcll popfq out sbb rex.RB cli xchg adc mov adc rex.WX rex.WRXB movabs mov rex.WXB sub (bad) sub pop or or (bad) pop cmp mov scas push test movabs adc movsl and test shlb push rex.WRB es mov insl rex.B repnz shlb callw lret (bad) rex.WRB (bad) (bad) cld sbb pop and (bad) (bad) incl jle movabs xchg vshufpd faddl mov js repz insb adc (bad) mov rol insb cs rex.RB hlt (bad) mov rex.RX add or and stos adc mov pushq repz rex.R (bad) negl frstor pop (bad) or lret add fs shrb cs xchg mov push rex.R outsl sti adc cmp callq push mov fidivr jle movabs mov cs movslq xchg add icebp (bad) iret mov pop sbb stc mov (bad) popfq (bad) mov rex.WX pop pop cmp xchg lret in ja in mov (bad) movsb cltd movabs sti (bad) mov rex.RB push rex.WRX loope jbe push rex.XB rex.RXB nop iret (bad) popfq push mov jae mov in (bad) (bad) rex.WRX pushfq jl pop or cli mov push jmp xchg ja scas xor jle sbb (bad) fcmovnb jae jbe xor (bad) mov mov add add pop retq (bad) or sbb sarl xchg xchg (bad) jp rex.W incb xor movabs pushq test movsl mov cmp test xchg rex.WX stc jmpq not mov neg bswap jo mov inc mov jmpq add jmpq cmc add jmpq pushq jmpq jne sets adc shr and sub sub mov jmpq jne shl sub lea inc mov sbb lea sub rcl mov test cmc cmp clc sub jmpq (bad) adc leaveq retq test or (bad) cmpsb lret sub (bad) mov rex.X rex.WX push pop mov cmp movslq push add sbb rex.WRB push rex.XB jg and jb (bad) out xor lods rex.WRX add out ja insb rex.WRXB xchg mov rex.RB rcrl cld fist bnd mov fnstcw (bad) add cs test or lock cmp (bad) sti mov (bad) (bad) decb pop adc sub and leaveq mov js (bad) (bad) dec (bad) mov ja jb fnsave (bad) or rex.WX std jo stos add mov movabs mov (bad) mov test push divb and jl movntps (bad) adc fnstenv rex xorl or in ror mov push or in mov repnz enterq jp cltd rorb mov xlat rcl or lock or add sub cmp movabs fsubl (bad) (bad) scas adcl jmpq fnstcw stc movsb leaveq (bad) or push outsl sub rex.RB cmp sbb add mov (bad) cld cmp sub std sbb adc mov jrcxz or (bad) loope add rex.WB insb pushfq ja ss int hlt movsb push test repnz ja movabs jb in clc adc outsl out (bad) add es movsb mov jg push cli in xor movabs rex.WRX add jb in (bad) mov push sbbl jmpq adc jle outsl xchg rex.WR int enterq mov ja and pop pop cld add test adc fs xchg add cmp rex.RXB clc lret mov jb cli or cmp xchg test negb out sbb fidivrl enterq mov sub add (bad) add cmp out sub mov lock mov push lret xchg int3 hlt ds mov rex.WRB cmp sbb sbb rex.WRX (bad) (bad) xor jno (bad) or in rex.WXB pop adc adc (bad) callq mov in sub lods jb ficom push xchg (bad) jge mov je or (bad) (bad) movsb mov cmc stos rex.W (bad) adc callq sahf cli mov out cmpsl scas rex.R push or mov (bad) mov add mov adc (bad) (bad) decb (bad) (bad) (bad) (bad) xchg out outsl mov mov adc add add fldl jae cltd mov jl movsl int imul and cmp sbb test (bad) or cmp sbb mov leaveq pop (bad) or mov (bad) pop (bad) (bad) mov je rex.XB jmpq xlat pop sbb pop rex.WRXB insb scas adc (bad) icebp test adc stos and xchg xor and mov pop sbb rex.XB sub xlat insb rex.W cs (bad) (bad) std rex.WXB sbb push xchg sahf pop movabs (bad) ss movslq push repnz testl cmp (bad) (bad) (bad) lcall xchg stc cmp shrb or jns (bad) cmp pushq adc and rex.WRB jge jle pop (bad) outsb (bad) rex.WRB jbe in mov (bad) data16 add add pushq sbb mov gs or (bad) rex.RX clc jae rex.RX loopne loopne add loopne (bad) (bad) jbe mov (bad) xor pop mov movslq sarb rol std push (bad) mov ja (bad) jbe mov retq adc xchg mov pushq lret xchg rex.W gs xchg lret jp jnp sub pushq (bad) sets movslq xchg rex sbb xchg insb xchg xchg iret movabs pop sbb rcrb xchg leaveq imul out clc fwait in or rex.WR (bad) mov xchg test fistp cmc sub xchg or mov (bad) mov (bad) (bad) decb (bad) (bad) (bad) (bad) lods xor sub fstpt (bad) push (bad) xchg jnp rex.WB (bad) repz or xlat movl inc cli (bad) xor (bad) jo rex.R and scas loope (bad) adc movslq (bad) lret fmull stos cmp (bad) rex.WRB fidivr pop outsb cmp rex.W pop sub cmp repz xchg xchg hlt rex.WB sbb cmpsb push stc leaveq stos xchg clc or (bad) xor pop sbb add mov jbe jno pop push mov adc sbb and fdivs push test lea rex.R out mov callq jne pop jnp (bad) repz xchg test and xchg sub cwtl xor and loopne loop xchg rex.WXB mov imul decb movhps (bad) and adc rex.WXB (bad) xchg xlat sub (bad) xlat jo cltd repz and mov adcb lret scas sub (bad) fimul fwait mov pushq or out rex.X cld mov fs (bad) mov xchg (bad) icebp movsb enterq clc push fimul mov jbe ss sub rolb (bad) mov add ja movabs rex.WX pushfq test xchg insb fcoms jne in xchg fs push sbb sti mov loope (bad) stos (bad) mov (bad) pushq or (bad) and xlat sub sti add rcll jle sbb mov jge or loop cltd add or adc in out xchg pushq in sbb xor rex.RX xor (bad) (bad) sti cli cmp (bad) (bad) mov sub mov enterq push fdivrp add add cmp mov (bad) (bad) pop fs xor mov jb hlt and out add (bad) (bad) (bad) adc (bad) push cmp nop in jnp jmp xchg adc mov mov lods (bad) add std fisttpl mov ja (bad) or cmp (bad) ss rcl push lahf data16 sbb xchg movabs lret mov imul sbb xchg lret xchg (bad) loopne add jo movabs mov movabs rex.WRX cmp cmp and mov xor xchg add (bad) (bad) movabs sbb or cs jge mov or (bad) roll jae fdivrp rex.WRXB cwtl cmp stos enterq (bad) rex.X in movabs decb (bad) (bad) (bad) (bad) xchg in int3 mov outsl (bad) addr32 jp xor cmp lods out mov imul adc in rex stos imul (bad) sbb mov (bad) push fwait (bad) xor stos rol mov movabs sub (bad) js in sbb mov imul (bad) adc data16 rex.X hlt push push jns push xchg je lods mov jmp mov push test lods (bad) (bad) loop cmp in fsin idiv (bad) loopne test mov fstps rcrl (bad) mov icebp xchg mov jnp insb (bad) test xlat std lods xchg mov pushfq (bad) (bad) mov xor mov pop cmpsl (bad) (bad) (bad) cld adc cwtl (bad) (bad) (bad) (bad) rclb cmc rex.WRX cmp (bad) lods iret cmpsl jg jle (bad) roll add push and movslq rex.X xor sbb lret sub or (bad) jl divl and xor or pop in retq addl mov (bad) mov jp mov stos jmpq jmpq ja jmpq rol std std stc popfw jmpq out loop ds stc popfq mov mul test rex.B (bad) (bad) and fdivrp (bad) outsb push jge pop cwtl and (bad) cmpsb push retq pushq std or loope rex.WRB fdivrl add sbb mov ja adc rex.WRX mov rex.WRB (bad) hlt repnz rex.R adc insb test or hlt clc xor xchg xchg mov jl push insl mov sbb test fiadd cs pop rex.X cmp xchg and (bad) (bad) push (bad) fild movabs rol add mov add mov (bad) lea (bad) leaveq pushfq (bad) add retq add xor shr adc mov mov cmpsl (bad) cmpsl push cli scas lea rex.X (bad) jp jbe and leaveq shld mov test jb or jmpq stc or jmpq mov mulb or adc ds (bad) loopne repnz js lods rex.WXB jmp lods jg mov sbb stc sbb mov or mov loopne (bad) faddl jne jbe jns jae jle mov movabs add xchg jg (bad) (bad) sti (bad) (bad) and sub (bad) (bad) incb add cmpsb rex.X insl popfq (bad) stos rex.WXB movabs xor and sub (bad) adc in cli cltd leaveq cmc stos add add enterq sbb jmp outsl and outsb and sbb sub cld pop fsubrs (bad) or mov movabs (bad) and pop (bad) cwtl add movsl mov jnp jae cs jmpq test repnz jmpq mov or stc scas xchg in cld jnp adc pushq xor jp rex.XB sbb fidivrl (bad) iret cmp (bad) fwait (bad) repz or sub ds (bad) pop clc lret (bad) (bad) test and out (bad) and movb div sub sbb (bad) pop lods xor lret imull push in sbb jmp lea sub movslq fsub (bad) cmp lods (bad) adc movabs (bad) sti sarb (bad) (bad) (bad) xchg (bad) (bad) in mov movabs sbb cwtl add add adc mov loop push subb addr32 jge (bad) mov (bad) movabs rex rex.W mov cmp ficom (bad) push rex.WX in push rex.R jge mov add callq test cmc test cmc or jmpq xchg not mov movzbw xchg jmpq clc clc add jmpq callq bt bt or jmpq jae jmpq jmpq movsb push test or or in lahf rex.WB and rex.WRX callq mov sub jge and movabs roll push pop mov (bad) ja (bad) add rex mov rcrb jo rex.WX sbb test in sub push sub jg test rex.RB (bad) shrl rex.R rex.WRXB xor es ficoml adc (bad) push mov xlat rex.RB push (bad) jae jb cmp pop xchg (bad) jmp repz movslq or rex.XB (bad) cmp xchg (bad) (bad) (bad) std rex.RX fldl mov (bad) (bad) (bad) xchg push rex.WX or mov rex.WRXB (bad) rex.WXB rex.RXB (bad) adc fwait shrl mov mov jg mov sarb (bad) movabs adc sub repnz add push movl rex.WX fsts cmp jnp jne mov (bad) (bad) sti mov sbb add mov (bad) sar (bad) (bad) std or and mov mov (bad) cltq mov and js iret mov (bad) enterq add add outsl sarl xchg xlat rex.RB sub push out (bad) clc (bad) sahf xchg mov (bad) movsl je pop adc mov (bad) fdivrl mov jg (bad) (bad) rex.XB bt test mov clc stc bt test mov inc mov shl neg test mov neg clc push not rcl btr cmp mov bts movsbl not sub push movsbl push btc push bts push rol sar bswap inc push sar mov not mov btc mov bt stc clc or jmpq movsbl movzbw not pop movzbq movzbw pop retq jmpq cmp not bt sub cmc bt cmc bt rol cmp jmpq (bad) test rex.WRX jg (bad) adc mov add mov hlt add imul mov push (bad) iret flds (bad) vmovhps mov rex.WX jg mov callq mov bnd mov fdivrp (bad) jne scas (bad) rex.W xlat int3 cs mov xor rcll or add shll jmpq jae (bad) (bad) (bad) sti outsb cwtl in adc (bad) (bad) (bad) xor xchg int and popfq pushq mov (bad) cmp movabs xchg adc add stc (bad) (bad) cltd and (bad) (bad) callq pushfq rex.WRXB sub shll mov xchg rex.WRX rex.XB xor out rex.R ja rex.W ss xchg adc es movabs cmp (bad) lahf mov or xor add rol sub btc sbb xor mov mov (bad) lock clc rcr rcr add neg sub inc rcl mov jmpq jmpq (bad) or jae mov imul or (bad) push stc loope test (bad) rex.WX lods rex.WR bnd pop or orl sbb sbb (bad) (bad) fsubrl jle stos mov (bad) jp or xchg mulb vpmuludq stc repz (bad) lods cwtl xor and rex.X rex.WX and jle mov rex.W (bad) (bad) sti (bad) mov jrcxz (bad) (bad) (bad) (bad) and rex.WRB and and insl or (bad) (bad) jmpq rex.R or jo pop fwait jg sub and jne (bad) rex.WB fsubp xchg outsl iret movabs ja (bad) adcl jns xor (bad) mov rex.XB sub mov jmpq cld pop push rex.R out cmp movsl jge cmp enterq in (bad) popfq cmpsb mov movsl (bad) (bad) rex.WX jb sbb repnz mov pushq (bad) rex.X adc mov push orl xor (bad) pushfq sahf notb (bad) fildll outsl (bad) jmp mov xchg xor rex.RX (bad) mov sti testl (bad) (bad) mov or int gs (bad) add add xor add icebp in out rex.X fimull in rex.W rex.RX xor (bad) rex.W out rex.WRX rex.RB adc cmp mov (bad) test movslq jl mov rolb int andb movabs (bad) rex.WXB (bad) mov icebp in (bad) lea movsl (bad) xchg (bad) rex.WR rex.B fcmovne pop xchg xor rex.WR jp sub movb rex.WRB mov sbb mov rex.RX movabs (bad) xor sbb mov notb test mov (bad) xor mov push shlb subl sti idiv out out (bad) (bad) (bad) (bad) mov js add (bad) rorl add add cmpsl in or sti movsb cmp xchg xchg xor in add decb insb pop adc retq insl sbb mov xchg mov imulb fidiv jle loop rex.WR (bad) adcl mov (bad) in jo xor cmp xchg rorb mov mov insb fs rex.WB jo (bad) imul xchg push xor sarb adc (bad) xor cld or jae (bad) (bad) (bad) out (bad) cmp fwait fs out mov es (bad) (bad) std mov add add js es (bad) xor movsl lret (bad) mov jp lods (bad) es (bad) hlt pop cld cmp jmpq rcll cmp xor sub (bad) cmp xchg mov test fs decl (bad) ja add cmc clc cmpb jmpq lret xor test mov je callq rolb rcrl rex.WXB add cmpb pop (bad) rex.WRX rex.R stos push (bad) insb or mov mov rex.R cli or push lods xor int3 or lahf (bad) (bad) (bad) incb test lea pminub retq popfq mov (bad) std rex.WRX gs (bad) mov roll int3 insl sti (bad) ss mov xor ljmp or mov int3 pop pop ds fistp pop cmc mov (bad) xchg (bad) (bad) negb out out or push test (bad) (bad) enterq mov jmp fwait adc cmpsl adc (bad) mov pop rex.WRXB mov hlt pop xor outsl hlt movabs addr32 or pop mov pushfq xchg stos rex.WX and (bad) jns mov rclb out sub int movsl xor xor (bad) sti jge xchg pop (bad) (bad) (bad) (bad) (bad) add (bad) jb rex.WX rex.WB sub cmp (bad) (bad) mov (bad) test rex.WRB loopne rex.RXB rex.XB iret loop cltd mov (bad) xor mov rolb and fld1 rex.WR ja cmp ficom mov (bad) xchg (bad) pushq sbb xor sarb and jp push xchg cmpsb lret subl out jl and rex.RXB notb mov rex.WX repz (bad) addr32 test and mov iret xchg jl jns xchg xor mov repz add (bad) jge lea adc test (bad) xor xor (bad) (bad) add jo jmpq sub (bad) fst add and retq fmuls in xchg (bad) jae xchg mov rolb (bad) roll (bad) scas imull mov std andb rex.RB movsb callq je es mov (bad) out push xchg mov jp sbb stos (bad) test (bad) mov sbb (bad) fwait mull fiaddl cwtl (bad) jbe scas xchg hlt pop rex.WXB mov rex.B lods xchg cli callq jo movabs xchg (bad) (bad) retq stc cwtl mov (bad) lock (bad) loopne out (bad) lock rex.X rex.WXB retq (bad) jne (bad) test lret mov mov jo cmpsb fstpl sub xor stc stos push rex fbld xor sub lahf and mov mov mov in (bad) or retq lret mov adc (bad) popfq (bad) add rex.R rol outsl (bad) (bad) (bad) cld sbb (bad) (bad) (bad) (bad) loop cld callq ds sub pop loop adc (bad) mov subl rex.WRXB sar (bad) outsb sbb iret (bad) scas rcll (bad) xchg mov or lea scas mov std pop rex.WRXB mov sub jne imul mov int add jmpq jae not xchg mov not jmpq cmc test pushq stc clc cmp jmpq jne lea setnp jno mov mov jmpq and icebp and mov cmp stos adc (bad) repnz movabs add xlat xchg neg (bad) leaveq hlt (bad) jg (bad) rex.WRB fcomp sbb (bad) jno mov xor int in (bad) pop push int3 push clc icebp cmp jae sahf and fcomip rex.WXB (bad) (bad) cli ficom xlat (bad) (bad) (bad) std lahf cli add rorl mov (bad) mov mov test outsl pop and xor add icebp in and addl mov test pop rex lret pushq cs (bad) (bad) jmpq cltd (bad) popfq xchg jmpq cmpsl pop fcmovbe push out jle rex.X push or mov fistp (bad) rol lods (bad) int rorl test mov ja je pop int loopne mov mov pop pop lret mov push xor xchg mov xor push clc lret sbb rex.WB cmpsb cs (bad) adc jnp lods xchg adc add fdivl loop lods int mov (bad) ds (bad) popfq cld xchg rex.WXB (bad) lret cmc (bad) cmp test (bad) rex.B push xchg rex.WRB (bad) repnz test test ds lods or add (bad) sti xchg and rex.W ficompl and ja cmp rex.WRB shl nop (bad) cmp (bad) (bad) (bad) decl pop pop mov loopne sub rex nop push or rex.WX test sub xor sbb jg cmp outsb addr32 and (bad) (bad) repnz js pop jb pop (bad) callq mov movabs xor decl and mov mov xor add and rex.XB jnp xchg (bad) mov retq mov rex.WX push mov in or jle push pop ss (bad) (bad) and test push movsb mov mov xlat mov (bad) (bad) inc jg pop test sbb add sub jmp test push or push jg xor loope (bad) ss and cli retq je imul mov rex.RXB sub rex.WRXB rex.RXB out rcll int3 mov pushq sbb rex.WRXB mov mov int3 in jp mov jns sahf mov prefetch rex.WRXB orl push mov loop ss scas lods sti xlat (bad) jmp movslq (bad) rex.RX es (bad) rex.WRB mov (bad) (bad) (bad) sub (bad) lret rex.B es clc fwait pop cmp int sbb fisttp nop pop add (bad) xchg push (bad) test rex jge rex.XB (bad) (bad) (bad) std xor mov mov (bad) (bad) (bad) out jae mov and imul cltd mov js jo pop sbb popfq or cmp cmp (bad) stos mov jnp jo xchg incl (bad) cli mov lea movabs rex.RB mov xchg cmc cmc mov jae rex.RB rex.WRXB adc or adc rex.WB scas sbb jmpq adc outsb or insl (bad) rcrb lea mov xor lods jg rex.XB rcr rex.RXB loop rex.RX (bad) push mov es pop cwtl and lahf movabs test (bad) (bad) (bad) (bad) xchg out (bad) sahf imul faddp rex.XB rex.WRXB mov mov addr32 mov fdivp rex.RX stc sarb push cmp xchg sbbl xchg in and mov addr32 repz rcr nop loop stos (bad) adc leaveq mov movslq rcrl or jrcxz xorl mov test jmpq rol mov test bt bt jmpq and out (bad) shrl movabs (bad) (bad) jno rex.RB loope adcb xchg stc scas sbb pop test lfs rex.W stos fs mov xchg (bad) or adc shrl xor test sti xchg test mov mov out nop push cs and int3 roll mov sarl xchg (bad) (bad) sti mov xor (bad) (bad) (bad) (bad) incb fnclex (bad) rex.W rex.RXB rex.RXB out (bad) (bad) (bad) inc jnp ror out mov xchg imul (bad) movslq pop int3 mov cmc push rcrb or out in sbb rex.WRB xchg mov adc adc fwait scas or fsubp mov clc movabs adc push add jmpq pop xchg lea stos int gs rcll rex.RXB rex.XB ds jae push rex (bad) (bad) loopne fcos movsl xor outsb mov adc jrcxz xor imul movslq pop jg rex.RB rex.RB mov (bad) (bad) testl fst rex.WRX sub and scas fisttp mull jne and or (bad) ja lahf scas rex.WR fistl mov outsl rex.B push test stc mov jnp js mov add add rex.WRB stos pop or outsl pop in push (bad) mulb add jb mov pop (bad) cmp fs xchg std in add (bad) sub lret cli scas mov jge lods add mov mov add cmc imul bt jmpq jnp mov jmpq stc xchg jae mov bswap cmc mov cmc mov cmc jmpq sub xchg mov insb lret add mov rorl jne lods rex.WXB test (bad) mov out jrcxz (bad) outsl fmull cmp (bad) pop mov in movsb cmp mov and xchg imul adc data16 pop fistl (bad) mov out faddl sahf cmc loopne (bad) xor pop pop insl rex.WRX rex.WRB cmp add rex.RXB and pushfq in sub insl mov sub xchg xor (bad) fstp jg (bad) (bad) (bad) decb rex.W sub add add js mov rex.RXB pop hlt test repz cmc loopne xchg clc or mov push rex out icebp lods cwtl add fdivrs jns retq movsl out mov rex.XB fwait mov jb retq movslq mov jb (bad) fild and fisttp pushq cmp (bad) sti in jbe sub rex.WX xor and (bad) pop outsb int test pop adc popq leaveq adc movabs push mov (bad) stos (bad) ror adc jbe fsubrs test push lods movsl sub rex.R mov pushq (bad) cli std add (bad) std mov mul lea jne fsubl jns push rex.WXB sub (bad) cld loop (bad) (bad) incl lret and rex.B cmp js es jl xchg lods (bad) outsl rolb pop lret jl iret jle cltd mov and and or jnp sahf or mov nop mov cmpsb (bad) callq cmc test stc or jmpq push movslq xor cs insb add test rex.WRXB jmpq stos (bad) cmc clc or mov cmp bt or jmpq and clc stc add jmpq jo je movsbw add movzbl add btc sub rol shr xor bsr mov neg (bad) repz btc ror adc add bts and shl mov clc bt shr jmpq xor xchg jo cs shlb enterq jne (bad) add insb rex.B mov push cmp fwait movabs leaveq (bad) ja and (bad) push stos mov rex.X data16 jne sbb push mov sbb cld xchg (bad) rex.WRX (bad) (bad) (bad) callq cmpl imul mov (bad) out xchg rorl xor rex.WRB clc jo cwtl imul cmpsl es mov mov or rex.RXB add add sbb pushq pop mov push scas (bad) mov cmp pop (bad) jno and rex.RB sti push cmp rex.RXB subl xchg add pop rex.RX jns jb repnz jmp mov xchg movabs xchg enterq push (bad) push lock leaveq movabs jb cmp data16 xorl mov enterq data16 movabs int (bad) (bad) movsl cmc xchg imul (bad) mov or rex.RB rol out mov adc repnz sti movsl pop movabs lss stos (bad) (bad) (bad) (bad) jmpq (bad) rcr lods stc push jmp in add mov scas xchg adc mov mov xor scas movabs sub rex.RXB rex.WX pop out in popq (bad) test (bad) lahf add mov xchg mov (bad) cmc or add neg jmpq jmpq jg mov rex.XB xor scas in adc or sbb out cmp icebp iret test push cwtl jae xlat jne mov push out rex.RXB out cmc leaveq jo or cli rex.RX (bad) (bad) lods rex.B xorl cmp icebp cmpsl and and shl mov and data16 fsubrl (bad) sahf rex.WX mov (bad) and test (bad) (bad) sti pop xchg decb fsubl xlat mov adc (bad) outsl and rex.W xor imul lret cwtl (bad) mov in retq jmp jmp out sbb or (bad) mov rex icebp ffree (bad) or lods or loop es mov or scas mov xchg cmp rex.XB cmp or jmpq push cli in pop outsl int (bad) fcomip cmp jp xor lea mov mov pop cmp (bad) insb (bad) (bad) lods rex.WXB xchg scas (bad) (bad) shrb (bad) fdivr xchg rex.WRXB rex.WXB lock and movabs scas xor popfq movslq push (bad) pushfq push mov fs push sbb push lods push cmc (bad) mov or insl adc faddp xchg rex.R data16 mov jmp movsl (bad) lods pushfq xchg fldl add lock loopne jns mov lock (bad) xchg (bad) (bad) (bad) cld xor cli loopne (bad) (bad) (bad) (bad) repnz out jp jp xchg add out cmp sub add jno (bad) (bad) rex.WB sbb rex.XB bnd stos add (bad) test loopne std outsb sub pop (bad) (bad) mov fcmove insl (bad) xchg xchg adc add fmull fs add not cmc inc mov sub cmc sub btr bts add bswap shrd lea mov sar inc add not mov clc repnz jmpq sub js cmp sub iret cmp (bad) rolb (bad) or mov cltd rex.WX in rcl (bad) or sbb mov sbbl jmpq pop rex.WRXB mov (bad) or int roll mov push jg (bad) fwait xor xchg (bad) jmpq fcom (bad) cwtl ds xor (bad) (bad) std rex.RX lods mov add add mov pop mov sbb xchg or out loope jge mov test mov mov xchg adc fs add add cmp cmp jmpq repz xor (bad) jbe stos adc cmp insb push scas (bad) fwait repz fisttpll rex.XB jno (bad) andl push mov sbb leaveq fs lods rex.WRB fistp (bad) pop (bad) and stc mov rex.WRX cld or not rex.X loop and xchg mov or int3 jle push (bad) sub mov repz (bad) sbb and cmpsl adc rex.WX xchg rex.WB in sub shl (bad) (bad) cld adc sub sbb (bad) fcmovb cld (bad) rcrb or pop rex.X loope mov jns jo sub rex.RX test rex.RB adc mov (bad) (bad) std rcrl idivb (bad) adc sti push sbb and fcmovbe mov cwtl jl (bad) cmp in xchg (bad) (bad) idivb movabs sarl mov test (bad) (bad) (bad) stc decb movabs cmp sub outsl xchg push mov loope mov fsts mov push rex.RB sub lahf (bad) or pop jl js mov xor mov xchg mov sar xor jmpq pushfq (bad) leaveq jmpq mov (bad) (bad) (bad) pushq movabs cs fcomp imul std xchg jp addr32 mov (bad) lahf push jno adc fadd mov xchg insb add leaveq or pop push xor cmpsl mov mov imul push rorb movabs push lods (bad) (bad) (bad) sti push (bad) cmpsb jle (bad) (bad) (bad) (bad) adc hlt push (bad) pop mov push lock ljmp (bad) mull jno pop mov rolb xchg jrcxz or cmpsb lret and add cltd sub cmp (bad) (bad) callq push (bad) and sub lods int3 (bad) insb (bad) sbb lret and fidiv rex.WR rex.WRX (bad) pushq lock movabs xchg add jmpq (bad) sarl fstpt (bad) mov jae cmpsl shr sub (bad) add shll sbb test rex.WRXB outsb xchg pop push cmpsl rex.WXB int3 (bad) mulb rex.WXB (bad) jmpq fcoml cwtl mov rex cmp mov push and int cmp xlat push cmp or add mov (bad) jge (bad) cmp loop insl roll psllq popfq pop jnp cmp adc test jmpq (bad) (bad) cld (bad) adc pushq (bad) (bad) (bad) jmpq mov rex.WX jmp fldcw (bad) add add add mov adc inc pushq mov and or mov xchg mov popfq ja xor iret pop lret jb test xchg add push or rex.WXB sub adc mov icebp rex scas mov cltd (bad) fnstsw sub lss insb (bad) (bad) and out sbb rex.WRX in fisttp sbb push or stc (bad) jns fmull and and jns outsl (bad) lret xor ficoml fwait lret sbb (bad) add mov and lahf or rclb (bad) pop mov mov xor cmpsb mov test fcom callq fidivr je xchg (bad) scas idiv (bad) (bad) sti add (bad) (bad) incb stos fdivrs cmp jne fucomi (bad) icebp or (bad) (bad) (bad) inc jb (bad) jl push lods fdivrs andl push adc (bad) xor or cmp shll or jge shr rex.XB push (bad) xchg repz fimul or (bad) mov (bad) push loop and in js add (bad) bswap pop retq push js rex.WRX pushfq nop xchg mov lock mov cmp in (bad) jmp jmpq fmuls and in rorl sahf rex.RB movabs test stc out adc push imul flds pop xchg hlt xchg scas rex.RX add add nop xor and std or (bad) add leaveq (bad) mov add (bad) (bad) (bad) sti (bad) movabs rex.RB insl push ss imul xor pushq add xor mov add add pop and (bad) lret mov repz std loopne sti (bad) sub test pop and scas jmp xchg mov or out rex.RX pop push ss lar (bad) rex.RX fwait pop out (bad) mov jmpq jg jne setbe jge bswap mov jmpq stc clc bt sub jno rep movzbw pop jmpq je shr bsr movsbw push bsr mov adc sub jmpq stc cmp jmpq jmpq adc ficoml stos iret repz fnstsw test mov mov sbb out cwtl mov rex.WRXB mov rol mov (bad) je mov add add push ds push and retq sub xor hlt push rex.RX std test jne lods mov add adc pushfq add (bad) (bad) sti pop stc add mov (bad) (bad) (bad) (bad) movabs and sub lret rex.WRB loope (bad) pop and movslq (bad) mov xor cmp stos jg cmp push or (bad) (bad) (bad) mov movabs ror add rex.WRXB adc xchg (bad) pushfq cmp (bad) xchg lret sbb xor jns adcl and (bad) repnz xor push xor (bad) jmpq mov fsubrs rorb mov loopne ror btc mov cmp stc adc add test not sbb rcl mov test stc test jmpq (bad) push xchg mov rorb out (bad) mov adc out notl pop or imul pop (bad) rex.X ds shrb or repz in mov (bad) adc (bad) cmp jnp (bad) movsl rex.WX pop pop rex.B scas pop (bad) or xor and callq rex.WR rex.R test rex.RXB (bad) (bad) (bad) sti pop adc (bad) (bad) (bad) (bad) mov pop (bad) (bad) cmp add add retq xchg cmp (bad) lcall (bad) cmc xor sti leaveq fbstp jbe add rex.R add mov mov adc and and insb sbb test (bad) int3 (bad) fnsave (bad) sahf cld adc push pushfq repz adc lock callq or jns out or movsl mov leaveq icebp popfq imul rex (bad) mov sbb loope test adc (bad) xor jle pop pushq (bad) (bad) (bad) xor (bad) sub mov cmp rex.XB outsl and mov outsb xchg pop (bad) and (bad) (bad) cld data16 stos (bad) (bad) (bad) ljmp adcl (bad) rex.WXB mov insl sub mov testb add or xchg mov addr32 mov jp or cmp xchg adc xor rex.WRX ja or add (bad) pop xor out (bad) adc add mov pop mov movabs jmpq mov lret fmull cld sbb mov js scas add cmc cmpsl (bad) insb pop xchg imul movsl enterq retq (bad) mov es xor scas iret and jge imul out mov rex.RX xlat je test (bad) lahf mov (bad) rex.WRB mov jnp cmp mov lret sti rex.WRB add sbb sar (bad) (bad) std or jns (bad) (bad) (bad) std mov cmp jbe shrl or imul mov std scas (bad) (bad) mov mov pushq movabs out lret clc mov adc xchg sbb (bad) lea xor sbb out pop rex.R jne xor pop cmp cmp (bad) (bad) jmpq bsr shl movzbl mov lea inc mov jmpq pop jmp fcmovbe push fcmove pop mov mov rclb fdivs (bad) cmp rex.WX xchg (bad) int push (bad) (bad) xor imul mov push (bad) (bad) xor (bad) mov cmp xchg mov jbe xlat sub retq setge lret shlb test fadd retq fwait incl mov cmp rex.RXB mov adc xor mov movabs push mov shll fxch fwait pop xchg pop fcmovnb cmp mov (bad) movabs xchg lret repz (bad) mov fadd xchg xchg xlat jns adc sbb pop xchg xor xlat jae jnp mov bts cmc sub jno mov (bad) imul xchg addr32 rex.WRB repz insl rex.WXB add sub sub movsl and and and fstpt mov cmp mov mov mov mov (bad) xor scas rex.WX leaveq push lock xlat fcmovu xlat cmp (bad) xchg rex.WXB stc mov rex.WXB or iret sbb or pop (bad) mov sbb sti or rex.B xlat sbb retq adc test hlt mov (bad) sti jmpq (bad) jae (bad) or rex.XB outsb lods idivb jnp mov repnz shrl roll mov cmp movabs cmp rex.WX adc ja imul int mov insl ja imul jnp cmp jg xorl (bad) mov mov popfq jbe stos out movsl int xchg cmp ja imul int xchg rex.WX add push pushq xor outsl (bad) jae ja cmp jg xorl xchg and cmpsl movabs rex.WX adc ja fs jns test imul ja imul (bad) stos int xchg cmp jns (bad) stos gs imul rex.WX jl mov mov jl (bad) (bad) sbb movabs mov xlat ja js pop jmp movabs in rex.RXB jns xchg movabs pop sub cmp int (bad) rex.WXB pop shl push retq fist cmp imul pop adc ficompl movslq rex.RXB fwait pop xlat and mov mov (bad) fucompp pop in iret mov and (bad) sub and movabs movsb sub cmpsl rex.RXB lods (bad) and movabs sub imul movabs rex.WR fwait xchg sub sbb cmpsl xor (bad) add and (bad) movabs xor pop sub fisub ja jmpq xchg fildll (bad) and (bad) sub sub lock and mov push fldt cmpsl movabs (bad) retq retq cld rorl mov mov (bad) movsl leaveq sub cwtl push movabs mov (bad) mov shlb retq mov jge cmp sbb mov cmp cmp (bad) mov stos sub movabs (bad) sahf mov (bad) xchg xlat push addr32 xchg outsl imul cmpsl (bad) mov mov pop fstl jg xchg (bad) xchg cmp ja imul rex.WX scas push jnp xchg xlat ja in ja imul shll ja xlat or xchg xchg retq lods rex.RX (bad) (bad) xchg iret mov adc (bad) jnp mov iret mov adc rex.RXB sti mov mov pop cltd pop xlat imul rex.WXB sarb sbb lret jge rex.WRXB frndint xlat (bad) rex.WRX sarl jp repnz lret movslq add jae fisttpll pop (bad) xchg xor out imul lock cmp pop adc fistp mov jne (bad) fbld icebp pop mov fdivl rex.WR popfq sahf (bad) imul jle xchg jge es rex.W adc mov insb fisttp (bad) cmp pushq fildl cltd sbb mov xchg or stc jns movslq or loop mov hlt cmp sub adc mov mov and and xor fistl (bad) rex.B in fisub sub pop (bad) mov movslq lret fstpt or (bad) (bad) scas fldt sub fildl cld mov in fistpl adc xchg fcmovu mov jns and fstps fidivr cmp movabs xor adc sbb fwait cli repnz pop pushq push add jrcxz jae rex.WX cmp test or mov pop std rex out rex.X icebp xchg cld mov fnstsw and (bad) imul xor adc adc (bad) and mov insb sub (bad) cmp pop pop leaveq rex.WX jge sub (bad) sti pushfq add popfq sarb rex.R sbb mov and pop rex.W data16 (bad) jnp test imul jae xor rex.WX sbb fcoml sbb sahf sub rex.WB test mov fnop fldt scas xlat rex.WRX rex.WR mov js cmp and (bad) mov jb fcmovnb fs xchg scas (bad) fisttpl outsb or retq (bad) push or add (bad) fldt rol xor (bad) (bad) fcmovnu addr32 mov xchg scas (bad) adc iret pop mov sub fcoms insb or pop jb fldln2 mov movabs hlt add retq rex.XB rcrb (bad) rex.RX rex.R and xchg lea pop sub iret psrlq mov pop mov jae jg mov lret cmp pushq push stos and adc orl pop test pop retq mov rex.RB jge xor mov and lret pop inc mov (bad) imul (bad) pop mov stos pop xor xlat xchg rcll mov and mov rex.WR pmovmskb push movhps mov cmp ja imul sbb xlat fwait (bad) mov mov adc ja rdmsr cmp int xchg cmp push xchg cmp shrl xlat adc movslq int (bad) xor push (bad) fwait ja imul test rep xchg cltd jmpq lcall xor lret lret mov xchg cmp movabs jg rex.RXB xlat adc pop movabs adc ja imul stos rex.WX ja imul int xchg cmp ja imul (bad) xchg cmp ja imul rclb jnp jg xor rex.X movabs push imul cwtl rex.WX imul insl rex.WX adc (bad) (bad) xchg int xchg sub (bad) push rex sbb fbld int xchg cmp sub movabs rex.WX (bad) movabs ja fbld int xchg cmp rex.WX adc xor push (bad) mov ficompl cmp rex.WX adc sub rex.WB xchg cmp sbb cmp fildll mov imul jle push imul push fucomi cli in fisttpl adc js sub rex.WX cmp xchg cmp imulb fstpt cs rex.WRX int adc es imul (bad) ja imul ja fildll int xchg cmp cmp popfq sub cmp imul rex.WX rex.R imul mov fcoml pop or jmp rex.WX repz pop cmp pop notl (bad) sbb out cmovl pop cmp (bad) fistpll stc sbb or jmpq cmp (bad) fmull fild cmp std pop fstl cli rex.WR pop cmp (bad) pop add loop ja pop cmp (bad) out adc pop out adc (bad) sbb ficomp (bad) or callq lock add loopne (bad) hlt cmp add in imul rex.WR (bad) mov rex.XB pushq test xor rex.XB mov lods pushq (bad) lret fnstcw xlat mov scas cltd mov shrb leaveq push mov mov mov movabs ficompl xor iret pop sbb xchg sub fwait rex.WX roll retq rex.XB (bad) rex.WX sar loop cltd outsl iret fwait mov xchg movabs sub movabs popfq push (bad) push test xor cmpsl or rcr fwait cmp sub (bad) xor test mov mov leaveq stos (bad) shll rex.RXB mov rex.WXB (bad) sbb (bad) int3 (bad) (bad) enterq ror mov (bad) test rex.WXB mov movsb in and mov lret movabs mov rex.WXB repz (bad) xor (bad) sbb imul je fistpll pop rol ss (bad) lahf pop mov (bad) lods or (bad) ds movsl mov mov mov fstps mov fistp (bad) cmp movsl xor jo (bad) leaveq (bad) cmpsl sbb sub (bad) add xchg pop outsb cld push mov sub mov cmp jae mov sub ficompl cmp cmc xor (bad) movabs mov sahf shrb sub (bad) mov rex.WB (bad) cmp lock xlat or (bad) and (bad) leaveq or and jp (bad) sub leaveq int3 mov lahf jge stos and push sub ror mov imul pop sub or jge (bad) cmp mov sub popfq cwtl test sbb xchg push xlat leaveq mov ss rex.RX xchg push (bad) leaveq scas rex.WRXB sub out (bad) push ror (bad) cmp mov push rorl leaveq sbb xchg movabs imull (bad) lret ror int mov jrcxz (bad) (bad) cmp jae lret or (bad) mov push mov rex.WR leaveq andl (bad) nop leaveq xor rex.RXB (bad) mov pushfq test rex.WXB (bad) leaveq xchg xor rex.WR and sbb xlat nop leaveq (bad) xor mov leaveq cltd and clc rex.W movabs jrcxz rex.RX pop pushq rcll insl fs adc (bad) iret leaveq (bad) mov jno xchg (bad) mov (bad) int test (bad) (bad) push movabs (bad) leaveq (bad) mov pop fwait sahf and test xchg mov (bad) mov (bad) xchg mov and xchg (bad) vcomisd sub lods movsl rex.WXB pushq sub rex out movsl lret mov mov sub mov rex.WB (bad) mov pop shlb mov in movabs scas test movsl jns mov xchg add xchg mov notl fldcw jns fsts push scas std (bad) rcl leaveq mov (bad) movsb sti (bad) scas jo (bad) rex.WRXB shrl rex.X insl mov (bad) rex.WR cs mov int mov rorl leaveq (bad) popfq pushfq mov xorl (bad) (bad) mov movsb lea lods sub je (bad) leaveq rcrl out (bad) sbb xlat (bad) leaveq push out adc movabs ss rex.RB callq (bad) (bad) push cltd adc movzwl push mov or rcll sub outsb lret (bad) es adc leaveq (bad) out (bad) test rex.RX movabs (bad) ror xchg js or (bad) sahf (bad) rex.RB rcl scas leaveq cmp or (bad) adc loopne mov leaveq and and (bad) cmp movabs (bad) (bad) sahf stos pop test xor mov leaveq cmp movsl mov rex.WRX xor rex.RXB jp cmp rex.WRB shrb test xlat leaveq jae (bad) rex.WRB ss int3 adc and (bad) rex.WR (bad) mov rex.X (bad) jl mov xor (bad) xor movabs sbb cmpsb mov leaveq mov lret cmp movabs (bad) int rex.W mov movabs mov cmp (bad) (bad) mov sub xchg rex.RB (bad) sub and (bad) xor sub and movabs add out mov (bad) (bad) pop retq xlat xlat int mov outsl ja imul scas retq divl outsl loop push rex.WRB jmpq lahf fistl in or movabs cmpsb movsl sub je xchg mov stos (bad) fildl insl out mov addr32 fisttpl cmp mov lods fistl sbb pop stos push jmpq and pushfq (bad) mov cmpsl movabs mov mov pop cmp or jno adc add (bad) neg sbb (bad) (bad) insb mov fcmovne or mov xchg or cmp cmp lock mov fdivrs shlb and stos or lock (bad) cli es cmp push cmp push pop jnp (bad) int mov or mov loopne stos mov pop iret cmpsl (bad) xchg (bad) (bad) xchg test ficompl push rex.XB rex.WXB and insl cmp mov push and ss test sub in movabs (bad) fcoml ss sbb fistl (bad) fwait (bad) int jne mov cmp or xchg cmp cltd neg add xorl out retq out sbb rex.W (bad) pop cmp xor outsb jns fstpt ss xor (bad) rex.WR add or cmp fistl mov vcvtps2dq (bad) add (bad) outsl pop (bad) sti sbb (bad) stos adc lods in lret xchg lahf mov fildl lock push rex.RX je cmp lods cmp (bad) (bad) pushq fcomi mov outsl cmp lahf sbb (bad) stc adc fcomi notb mov (bad) lret rex.B jnp add add movslq fcomp or xchg xchg xchg xor jmpq retq (bad) fs fnclex sub cmc pop mov stc outsb movabs (bad) data16 sub sbb movabs shr xchg repnz fcoms and or pop movabs imul addr32 sbbl rex.R adc and retq jae sbb movabs xchg sub add frstpm(287 push out jnp (bad) (bad) pop movslq add and fwait jl (bad) (bad) lea mov sbb (bad) pop fwait in pop (bad) popfq adc stos xchg or add mov (bad) xor int jns jnp ror in add and adc (bad) sub mov rex.WRX movslq (bad) fistpl movabs (bad) fucomi (bad) add (bad) fldt rex.WR lahf (bad) (bad) imul lret rex.WRX fistl in rex.XB pop hlt movsb movslq rex.R cltd (bad) (bad) fisttpl cmp jnp mov xchg or fldt jae xorl movsb jle jl (bad) (bad) (bad) (bad) jp lahf js fisttpl rcrb pushq sub rex.WXB rex.WRB pop (bad) pop adc jmp or mov sub (bad) lods (bad) fcmovnb xchg (bad) push std es int3 popfq add movslq pop pop xor lea adc and outsl (bad) push repz rorb rex xchg sbb (bad) subl (bad) in loope sbb and insb movabs fcompl push rcrl ja loop push test sub sbb out sbb jb add fwait cmc fimull rex scas (bad) mov sbb mov nopl lret stos out jns sarb or cmp sub add retq mov repz jrcxz fldt pop xchg mov add cwtl (bad) push jb,pt sbb icebp lret sub imul orl sbb (bad) xor adc (bad) xlat (bad) fistl rex.RXB sbb jl and (bad) jmp rcll mov (bad) xor (bad) pop add and and adc in jp loope (bad) mov push fdivr lahf test movabs xchg pop sub (bad) mov rex fucomi jge xor sahf push rorb xor test adc rex.WRX fistl in lods and clc cld (bad) adc fistl xchg sbb mov retq (bad) mov add pop enterq adc mov imul or (bad) mov test jmp stos mov (bad) pop lods xchg (bad) gs xor or (bad) pop add xor test (bad) fxtract (bad) xorl rcrl adc pushq stc test mov (bad) (bad) ficom rol fistpl and xchg leaveq xor add mov outsl jrcxz fistpl iret cs xchg jo jp push (bad) push mov shrl lods clc xchg lock and jb xorl mov and push mov cmp pop push mov pop or fs or sti ds adc (bad) popfq xchg adc add mov cmpsb mov rex.WRB add out rex repnz push sbb mov jg fcmovnb jle (bad) jp and pop iret enterq mov cmpl sbb sbb int3 sbb in cli shr outsl and cmp (bad) mov fcmovu and rex.WRXB fwait xchg sahf callq sub xor sbb (bad) jnp xlat (bad) add imul push and fadds ja rex.XB xor rex.B (bad) (bad) loop sub sub movabs movsb xor (bad) (bad) or movsl frstor test adc movabs fcoms ds jmp (bad) (bad) cmp adc (bad) (bad) mov pop jb mov add out fisttpl adc rex.WR retq fcmovnu or xchg mov cmpsb add and add xchg xor pop ss movabs adc mov (bad) out push cmpsb rex.WX or push cmc repnz xchg sti cmp sbb fcomps mov (bad) addl lock (bad) rcll stos retq (bad) pushq adc rex.WX ja loopne rex.RXB jae pop sub jrcxz pop mov nop icebp mov in outsb (bad) xchg cli push sbb jrcxz mov rex.RXB pop out cmp (bad) sahf jno push (bad) jge imul jbe (bad) out cmc nop pop (bad) rex.WB xchg pop mov mov sbb fldt pop and iret and lods retq add mov mov mov rclb xchg fstpt cmpsl (bad) fistl retq fs (bad) neg pop test movabs jrcxz fcomi mov rorb int data16 jb mov (bad) rex.WR cs enterq pop int3 mov pushq es fcomip push stos lock jnp mov and fistl ficom sbb fistl (bad) xchg xlat jrcxz sbb rex.X lret lods (bad) in fsqrt in (bad) repnz jrcxz or (bad) fcmovnbe rcr xor mov subl add (bad) adc movabs mov cmp rex.RX xchg (bad) push icebp xchg imul rex.XB sahf jl (bad) jmpq enterq (bad) popfq (bad) mov (bad) fldt xchg in push fstpt (bad) sub repnz movabs je cld push sahf add (bad) test adc rcr jns int cmp jnp (bad) in cs je xor or sahf fstps data16 pop jnp jg js add xchg fstpt in push mov cld rex.WXB fldt retq or cmp repnz mov jp rex.WRB sbb notl mov cmp jo fmuls mov and sub cmpsb or (bad) cmpsl mov callq push sti in lea (bad) adc (bad) repz (bad) rcrb mov jl adc stos mov adc imul mov cmp jae loopne stc (bad) fistpl xor je pushfq push popfq fstpt (bad) fisttpl data16 (bad) jnp xor fyl2xp1 es mov (bad) (bad) (bad) mov mov fimul repnz (bad) xor rex.WR retq mov (bad) adc (bad) mov pop lods sbb push in pop jne (bad) (bad) lret jb pop lods xor adc or es mov pushq cmp (bad) cs lret scas pushfq mov (bad) (bad) jnp jnp loopne imul (bad) (bad) xchg jg lods cmp (bad) leaveq (bad) movsl test pop lods fstpt outsb push repnz jnp push adc mov js int popfq cmp jmpq lret jmp scas rex.B jne (bad) leaveq (bad) fldt sbb in pushq and movabs sbb adc add (bad) fildl lods (bad) mov (bad) movabs lods std jnp and cmp (bad) sub pushq fmulp (bad) and (bad) jmpq (bad) rex.W jb mov (bad) mov push rol jno xchg cmpsl cmp lcall (bad) jae outsb jnp cs jle xor xchg ror retq mov cld rcrl in rex.RX cmp (bad) orl rex.R jmp mov fwait or std test icebp or (bad) (bad) stc test fstpt in movabs fstl push imul (bad) test fistl out mov or pop adc pop (bad) outsl xchg std jae rex.WRXB movslq push rex jbe cmc jno cmp xchg (bad) cmpsl pop fistl or cld cmp in mov test (bad) or movabs push clc pop push (bad) (bad) jmp (bad) jg cld push pop mov xchg sbb cmp pop jge sub mov (bad) pop mov out mov jbe test (bad) cmpsb lods (bad) mov pop (bad) sbb sub add (bad) loop cmp xchg fildl add and fisttpl sbb pop repz mov push fucomi insl mov int3 js (bad) xor sbb (bad) xor fcmovnbe fsubrp cli (bad) cmc pop push rex.RXB adc notb mov (bad) leaveq out fisubrl fstl or jle,pt fstpt retq cmc lods loope (bad) (bad) cmp pop pop data16 movsb sbb popfq repnz int jno stc mov imul pop and pop lahf xor (bad) stc sbb pushfq in lods fistl mov push (bad) rex.WB frstpm(287 (bad) or fdiv fistpl movslq fs pop std pop add movabs and pop fstpt (bad) rex.WR sti (bad) sub jmp rex.WXB (bad) cmp sarb pop sbb sub fs (bad) (bad) cld xlat fstpt cwtl pop mov and cltd clc xchg mov mov rex.B or xor add or (bad) jnp retq rex.WB adc pop out (bad) orb scas pop (bad) out jb sbb rex.WR lret pop enterq pop rolb pushq sbb (bad) (bad) xor xchg in lret fildl xchg clc pushq lahf mov shrb jns cmp xlat (bad) nop mov (bad) cli xchg fbld (bad) mov cmp mov int3 fildl (bad) push pop (bad) or add sub ja ss pop mov rex.RX mov pop adc loope jp sub mov rex.XB rorb int3 sbb cmp push xor in rex.RB cmc fildl insl cbtw ja xchg rex.XB push push rcr in (bad) jmp mov xchg sahf jnp xchg and mov (bad) fldt pop out lods fcoms pop xchg (bad) and icebp sti movabs pop js jp ja shrb rex.W in pop nop fwait xor and rex.WXB (bad) xchg (bad) callq (bad) add pop add xchg movabs rex.WR mov xchg pop (bad) (bad) movabs sarb out stos xor fldt loopne jbe cld mov add rex.WRB gs scas rex.RX and jmp and int3 out add or xchg (bad) mov fnstenv sub cmp cli xchg sti mov and icebp mov rorl gs push (bad) cs pop fnstsw jle icebp leaveq std mulb fcomp adc jrcxz fistl or jno callq mov jl adc jns shrl push movsl cmp mov fnsetpm(287 enterq xor fistl push push retq add fildl rex.RB rclb jnp leaveq (bad) sub rex.WR xor jns cmp fcmovb sbb in push (bad) rcr (bad) mov pop mov lods jno (bad) (bad) pop leaveq enterq rex.RX and iret add cli insl jg int fcomi xor jle rex.B fildl pop clc mov (bad) fwait or mul outsl mov sub mov pop push cwtl push test mov push fimull shrb push stos out cmp push rol jg jbe push pop mov mov fistpl mov (bad) mov (bad) mov clc jg jbe xor stos iret add iret scas or adc out xchg xor pop (bad) jo sbb rex.XB repnz in mov movabs fnstcw rcrl incb (bad) (bad) and add (bad) pop push lea adc sub sbb in sub push fcmovne push jo add in fisttpl js adc jp or jnp push fisttpl xchg mov xor movabs shll (bad) mov cltd xchg pop cld gs int sbbl jnp sbb (bad) xchg (bad) mov nop pop cmpsb sbb and add rex.WX or mov rex fdivrp (bad) add sub fistl fs popfq int fstpt and cli or push (bad) pop or sbb xor int cmp insl outsb adc (bad) movsl jrcxz fisttpl int3 fidiv or fcmovnu xchg clc mov int cmp pushq (bad) (bad) mov lock fist outsb add cli jnp mov in fcomi (bad) insb leaveq pop mov lock xor or fs adc loope fwait loopne leaveq add cltd test mov and fldt xchg cmp push fsubrs (bad) mov rex.X (bad) cli mov jns cs (bad) (bad) or mov sahf adcl cmovl jle (bad) (bad) icebp (bad) mov (bad) xchg jno jo rex.WRX mov movabs movabs or fildl pop in cltd adc fstpt rex.B test loopne xlat xlat pop cmp jle mov (bad) (bad) pop (bad) test movsb rex.W retq and rol addr32 ds cmp movabs jmpq jae lods sub retq xchg (bad) pushq movsb mov mov data16 movabs sub rex.W rex.B rex.WRX fcompl adc pushfq sbb ja xor or fs xor fdivrs (bad) (bad) pop (bad) rex adc enterq and add mov sub pushq or xlat add pop shll out adc sub in rex.WRX repnz mov xchg cmpsl or mov out jle adc jbe scas rex.WRB mov callq cmp stos mov sti rex.W jae addr32 and xchg mov and and add (bad) and mov xchg sub pop sub movabs and test movabs test sbb callq jmpq fdivr test or jmpq jne test bts movzbw xor xor bt bt mov adc add add xor rcl stc not mov cmp test test jmpq lret xchg or mov jge xor loopne mov pop cmp mov leaveq fwait fs adc or std jmp adc xor xchg mov (bad) in rex.WRXB ds loopne jae shrb rex.RB and jp,pn pushfq rex.X rex.WR stos jg pop icebp cwtl andb (bad) sbb add es sar (bad) (bad) xchg jnp adc (bad) jg scas xchg in cmp (bad) (bad) mov sbb rex.RX xlat mov hlt rex.WRB jg xchg pop cmp xor iret mov callq push xchg rex.WRX jl lret or jb and sbb mov mov mov shll jg insb sub pop xchg mov or outsb pop adc (bad) (bad) mov cmp and add movabs adc (bad) data16 vpmullw movabs and stos rex (bad) gs pop and icebp jae sbb add push mov rex.B rex.WB mov sub leaveq fdivrs retq sub movabs push imul mov rex.WX in mov movsb mov vpcmpgtb je gs int in sub (bad) andl fnstcw pushfq rex.WXB je out movabs (bad) or lods and leaveq mov iret jg add stos add push or mov xor xchg sbb add pop fsts cmpsb cmp mov mov (bad) rex.WRXB (bad) (bad) (bad) (bad) decb test imul out sbb lahf rex sbb and jno (bad) (bad) (bad) and fidivr (bad) mov ss lahf (bad) (bad) (bad) (bad) shl rcr sti cmp jnp ss (bad) mov popfq cmc mov outsl int or pop rex.X xchg sub mov cltd cli hlt pop (bad) jb out test cmp (bad) rex.WRXB int retq test mov mov (bad) movabs fcomps ficomp cld push clc stc bt imul stc jmpq callq jmpq xor push xchg jne mov push lret in (bad) rex.R repz leaveq or push add jnp cmp xorl xor jne enterq (bad) (bad) add and jge cli (bad) loopne cmp xlat jge lahf std ss sti out in adc sar (bad) (bad) sti shll mov pop sub rcll sti (bad) (bad) (bad) (bad) xchg pop jp or (bad) pushfq cmpsb adc outsl add mov (bad) stc mov or imul rex.WRX add add adc (bad) cltd movabs shrb out pop adc popfq (bad) (bad) outsl or fstpt add mov push cmc (bad) scas (bad) mov (bad) mov (bad) (bad) pop mov pop setp jmpq ja shr dec (bad) lock sub shrd rcr add inc sbb btc mov and cmc xor shl mov clc cmc repnz jmpq jmpq callq jmpq mov lea jmpq jmpq callq not dec dec jmpq jmpq outsb out (bad) (bad) mov sbb (bad) add (bad) ss adc and adc lahf mov and or (bad) movabs xor rex.W lahf clc mov (bad) scas add movabs sarl sub testb (bad) rex.WXB rex.WXB rex (bad) (bad) sti not callq (bad) (bad) in (bad) rex.B or pop fistl movslq xchg mov in rex.RXB pop add cmp add add or sbb sbb (bad) lahf cmp sbb rex.RXB (bad) mov retq (bad) add sar movabs sti push (bad) push (bad) rex.B (bad) xchg mov (bad) leaveq rex mulb (bad) jmpq rex.W ds sarb hlt sbb test scas enterq rex.WX rex.WXB push rex.R jb sbb xor ds test xchg (bad) jl in pop mov jb imul leaveq cmpsl xchg add jns fdivs movsl sbb fnstenv lahf callq lret jo and cmpsb fidivl lods cmp sti imul (bad) (bad) (bad) sub fistpll pop and rex.WRB gs (bad) (bad) (bad) ljmp sub rex.WRX rex.RB add mov out or (bad) stos mov xor out push or xchg retw sub xchg adcb mov push std xchg mov leaveq rex.WB rex.X jb mov push repnz out (bad) frstor cwtl imul outsl xchg addl rep pushq jp xchg (bad) imul movslq jl sub or jne adc push mov (bad) repnz xor pop (bad) mov mov adc cld rex roll jg or addr32 (bad) (bad) std or pop jns (bad) (bad) std push (bad) mov test add add or pop lods pop sub fstpt adc loope mov ss scas pop repnz sahf mov (bad) ja callq jns movsb mov lret or cld callq rex.RB rex.WR xor cs insb add fild sbb add mov (bad) push rex.R pushfq outsl mov adc callq (bad) lret xchg cmp (bad) (bad) jge es rex.WXB mov (bad) pop (bad) loopne mov push sti cmp pop xchg sub rcrb mov (bad) push jle (bad) sbb sbb andl adc shrb pop lret rcrb cmp xlat pop cltd fstpt cld (bad) lods jmpq (bad) (bad) rorb stos xlat pop (bad) rex.RXB sbb add add push pop (bad) (bad) and jns leaveq pop and push xorb insb cmp rex.RX pushq imul mov (bad) mov xchg rex.WX jmp xchg mov (bad) adc cwtl cmpsl xchg enterq imul lret pop mov pushq jmpq mul rcrb cmpsb fidivr and adc lods sar loop jmpq or jrcxz sub push cwtl (bad) callq pop rex.RXB xor (bad) sbb mov mov (bad) loope jns fwait cmp push (bad) (bad) sbb cld out cmp retq scas rcrl cvtdq2ps clc sbb (bad) repz (bad) ror mov xor (bad) ficom test and or (bad) (bad) (bad) decb (bad) (bad) (bad) inc cmp mov xchg cmp rex.B test movabs sahf hlt pop (bad) add mov ds outsl (bad) addr32 cmp pop adc sub cmp ja out add (bad) std loope fbstp (bad) mov clc lock cld mov out xchg push (bad) stos lahf fwait jge insb std out add (bad) int3 mov rex.WXB out mov (bad) int3 rex.X pushq in pushq (bad) jbe (bad) ss mov out xchg (bad) es out cli jne and fdivrs add add jmp popfq mov fmuls idiv loopne mov rex adc (bad) (bad) decb rcr hlt xchg cmp movabs fwait (bad) (bad) jne (bad) subl out mov mov fcompl xor outsl rex.WB je loopne leaveq imul mov or ficom pop out mov clc insb mov movabs rex.XB int adc je sarl or lock jrcxz lret (bad) (bad) sbb scas sbb jl mov (bad) mov or movsb psubq leaveq rcrb mov mov (bad) push rex.R retq movabs push push lods in (bad) iret cld loope jns callq je test (bad) stos sbbl sbb test (bad) shrb (bad) (bad) sti test jg out (bad) (bad) (bad) (bad) sub nop (bad) rex.WRB (bad) lahf sar cltd mov ds (bad) (bad) jmpq xor add push push hlt (bad) vmptrld xchg mov std rex.WRXB fnsave jle mov rorb (bad) jns or sub pop notb mov nop retq lret test sar cmc jmpq xchg cmp int3 fnsave imul cwtl push rex.WR and and adc cmpsb out fadds loopne fmuls insl xchg adc loopne pushq jne pop pushfq sbb lock lahf jne lret iret or xchg mov vpsrld test mov retq pop jbe fldt adc xchg mov cld sub (bad) sar (bad) (bad) (bad) jo add rex.WB xchg retq gs fcoml cli in data16 add add repz xchg leaveq cwtl add jnp (bad) ror mov sbb movabs lret xchg adc xchg cmc ja pop cmp xchg (bad) sub shrb jrcxz xorl jnp xor (bad) (bad) movsl sahf mov retq out stc out mov outsl pushq sbb ss pop (bad) sbb jns cld rex.WXB (bad) imulb fdivrs mov (bad) mov sub mov (bad) loopne movabs add xchg rex.R out js rex.W sub ja mov fiaddl cmp (bad) cld (bad) mov (bad) (bad) dec sbb sub fnsave loop out addl add sub shlb je insb (bad) rex.RB loopne mov test repnz and sbb movsb cmp sub xchg in (bad) mov xchg (bad) jae jle (bad) or sub rex.X (bad) xor mov iret callq cmp sti decl (bad) incl stc clc cmp jmpq adc mov (bad) mov movabs xchg stc cld callq js (bad) mov (bad) sub add outsb rex.WRXB add sub push rex.X ja (bad) (bad) add rolb (bad) (bad) (bad) sti mov (bad) (bad) (bad) (bad) jge xchg xor rex.W lret jle rex.WXB and sub and (bad) adc loopne or fcomi xchg pop imul repz cmp mov push cmp xchg movabs sbb (bad) jmpq rex.X rex.R cmp jp jle xor mov add (bad) lahf add jmp clc pop rcrl (bad) mov retq addr32 pop sbb lret and pushq rex.WRB adc leaveq jmpq jmpq callq cmc sub jmpq jne cmp xor shr sub cmc mov jmpq bt bt bt xor jmpq setns sets lea xchg xchg not bswap movzwl lea not lea bswap movsbw mov mov mov jmpq clc stc not cmp mov test jmpq pushq jmpq add std pop xchg mov js out (bad) (bad) in xchg rex.WRB (bad) movsb (bad) (bad) sbb sbb adc xchg xor addr32 add jo pop std rex.X xchg callq rex.RXB in js fiaddl rex jne fdivl (bad) sti cmc rex or add (bad) shll lods popfq cmp (bad) (bad) sti mov (bad) (bad) (bad) push rex.RX mov in stos iret (bad) mov adc callq ds test mov (bad) (bad) and jns rex.RXB jne cmp (bad) jo cwtl mov imull jge notl and movsl xor mov sbb mov roll cwtl mov add test add (bad) icebp lea add movsbw mov cmp bt add test jmpq bt mov cmc jmpq jmpq cmp jmpq lea jmpq jmpq jmpq sbb add cld jb (bad) loope rclb push (bad) stos imul fadd je or lods push pop sbb popfq lret mul in (bad) mov in jp (bad) jb (bad) cmp sub pop por movabs jg pop icebp out (bad) fld mov xchg std (bad) (bad) (bad) sti cmp (bad) loopne (bad) (bad) (bad) std cld movabs xchg nop sub add lret xor (bad) (bad) (bad) fcmovnbe jg mov repz pushq imul nop sarl mov adc jbe in loope pop out negb rex.RX (bad) mov movabs (bad) rol push hlt cltd pop add fild rex.WRX (bad) btr adc add mov (bad) movsb pushq callq out cld stos cli stc add js vmovapd add add or rex es (bad) enterq or mov (bad) rex.X cmc mov cmp repnz adc adc jl cmp mov lods (bad) mov test sub adc (bad) fnstcw (bad) (bad) (bad) in mov xor cs insb add test mov rcr movsbw not xor not and mov sub jmpq movzbw lea bswap lea mov jmpq jmpq add insb jae jb insl jo add push (bad) push cwtl mov int cmc mov (bad) scas scas (bad) xchg rex.WR movabs jp jns imul pushfq sub rex.WR fs (bad) subl callq in popfq cmp out xor add rex.WRXB (bad) rex.WRXB notl mov (bad) and (bad) (bad) sti push mov (bad) (bad) adc (bad) int3 xor push push rex.W rex.X callq mov stos adc (bad) (bad) (bad) mov test pop (bad) (bad) xadd mov loopne lahf iret cmp (bad) and rex.RX (bad) xchg lods (bad) cmpsb jg mov rex.WB lods out rorl sbb iret pop cmp (bad) out mov movabs outsl mov jmpq std pop push pop adc enterq (bad) rex.W jl (bad) movabs iret hlt jmp rex.XB mov lock xorl mov fwait in (bad) test (bad) pop rorl xchg retq pushq and mov mov rex.WRX std xchg imulb (bad) cld clc mov xlat (bad) sti (bad) add fsubp loop xchg test or (bad) rex.WXB lret adc cmp (bad) mov (bad) adc fistl mov cmp scas lcall pop iret sahf out loop (bad) (bad) xor pop sub cld push rex.X rex.R xor (bad) sbb (bad) outsl xchg es mov rolb ds xchg or mov cs mov push cltd (bad) add loop sbb (bad) or push jno xlat adc retq (bad) and outsb and movabs and imul xor clc pop notb (bad) repz stc xchg insb cmc (bad) (bad) (bad) std lods sahf mov movabs cli imul sbb cmp add lret jbe mov hlt in in jl (bad) mov cs sbb (bad) repz pushfq movabs movabs adc (bad) (bad) callq (bad) rolb sbb jle repnz jl or rcr jo rex.XB outsb (bad) xchg xchg cmc (bad) mov imul and (bad) xor sahf mov xor (bad) adc outsl add push jmpq movsbl lea jmpq callq jmpq fs sbb (bad) (bad) cmpsb cwtl loopne stc outsb (bad) jb test imul mov jmp repz icebp std (bad) stc mov mov sub adc es jae movsl rex.XB (bad) clc je adc lret es ja (bad) rex repnz (bad) jmp (bad) (bad) loope fcmovnbe (bad) insb sub sti cmpb pop push fsubr scas cli jmpq xor fwait sub scas xor (bad) jl pushq sub jle cmp mov movabs lods lss outsb push stos (bad) (bad) (bad) sti xchg and (bad) (bad) (bad) push enterq jge clc test mov rex.RB (bad) (bad) callq leaveq rex adc rcll push sub and fild mov fwait rorl sbb cld pushfq xor (bad) leaveq pop rex.WRXB fnstcw or mov (bad) sub jmpq mov shr pop cld pushq out (bad) push (bad) jae ja mov test jbe pop adc (bad) or mov adc mov popfq rex.WX xchg int3 mov pop xchg rcrb jp sub rex.WXB test leaveq lods (bad) fsub cmpsl (bad) cmp and adc (bad) cwtl mov sub and (bad) and mov (bad) and rex pop (bad) mov or pop xor gs shrb xchg xchg cs pop js (bad) mov std je (bad) (bad) decb (bad) (bad) (bad) (bad) xchg out test rex.WX cld movabs mov rex.B loop in sub rex.WRX pop testb jge or iret (bad) std (bad) sbb cmc sub rex.B ss je stos int3 mov (bad) cmp cltd xchg (bad) fnstenv js mov cmp shl jmpq movzwl shrd mov cmc clc add stc mov cmc cmp test jmpq sub adc stos add mov push cmpsb rep jbe cmp lods cmc (bad) mov mov jrcxz xor push cmp jrcxz movabs cmp (bad) in scas add push outsl xchg mov loope sub (bad) adc mov rex.WRXB lret sbb sub cmovno jb fstpl (bad) (bad) (bad) std or add (bad) test push fnsave pop cmp jno rex.X (bad) (bad) std xchg movslq out mov adc icebp icebp add add or mov sti (bad) sub (bad) scas mov sbb stc (bad) mov enterq pop notl test imul sub cmp mov mov cmpsl faddl jb stos cmp hlt cmpsl (bad) movsl xchg mov fimull jrcxz je bt stc test sub clc je cmc cmp jmpq movsbw lea mov xchg pop xchg mov xchg jmpq xor jmpq (bad) cs out fsts sbb (bad) loope mov add loopne out cmp xchg or pushq adc and out popq repnz addb and ficom jns test es data16 mov add mov sbb xor jno (bad) (bad) push leaveq or cld push push popfq mov (bad) (bad) (bad) callq repz (bad) jnp mulb sub (bad) sbb data16 test lahf rol clc popfq rex.XB data16 add (bad) mov cld mov rex.B lret mov or mov sub add and xchg mov ja xor pop mov clc (bad) xchg sbb cs mov jo,pt fsubrs (bad) frstor ss xor pop sub loope retq cmp movslq rex.RX rol cmp jb jo (bad) (bad) movslq (bad) notl sbb movsl fadd sti xor (bad) (bad) cmp (bad) out in (bad) (bad) xchg (bad) mov rex.RB leaveq pop fnstsw negb lock cltd (bad) (bad) (bad) sti (bad) fcompl (bad) (bad) (bad) decb or and sbb add add or xchg push mov shlb push (bad) fnsave cld sahf std (bad) stos cltd add (bad) out retq lret or xchg cmp loopne test or mov (bad) pushq (bad) rorl (bad) mov loope (bad) test fcompl cmp rcrl xchg adc sub and (bad) outsb retq rex.X out xchg insl hlt lods mov cmp (bad) sbb ds or rex.WR shll xor fldenv stc (bad) adc jno pop mov and mov xlat movabs pop xchg fs cs (bad) test mov notl add (bad) in adc add ja or gs xor (bad) lock imul cmp (bad) (bad) (bad) (bad) mov lret sti add add cmp jge mov (bad) (bad) fwait add mov (bad) (bad) mov je cmc jb rex.XB jp movabs cmp mov mov xchg xchg (bad) push sub test add adc xor (bad) fildll (bad) ss stos jmpq sub jmpq jmpq jmpq jmpq callq sar sub bt add sbb sar mov clc clc jmpq cmp xlat add (bad) xor cmpsl (bad) loopne std nop or mov (bad) int mov sub cmp mov sarl push (bad) (bad) mov stc xor (bad) gs adc pop retq and jp (bad) mov mov adc (bad) loopne jbe push stos pop mov (bad) sti mov cmp cmp movabs xchg fdivp movabs mov jne add imul retq cmpsb repnz iret loopne add add or outsl xchg ja (bad) mov rex.WB (bad) gs (bad) rex.WR and cmp (bad) mov es adc mov repz cld fwait sbb rex.WRB mov loopne xchg retq imul (bad) (bad) decl test scas (bad) (bad) clc jmpq callq jmpq jnp ja jmpq jne bt clc cmc add clc jmpq movsbl not movsbw mov jmpq cmc jmpq (bad) gs jge sbb (bad) clc or hlt or scas or int jle rex.WXB mov rex.XB (bad) fcoml push rex.XB sbb rolb (bad) cs rex.WRX jne (bad) pushq (bad) mov add jmpq sbb fidiv rex.WRXB rex.R rex.WRB lea pushq rex.B (bad) sub (bad) rolb sarb xor (bad) (bad) (bad) incb (bad) ss jp (bad) and xchg sti sub movsb cmpsl mov add add loope rex.RX cmpsl movsl mov jno insb or (bad) mov rex.WXB add (bad) jmpq (bad) (bad) callq clc outsb or xchg (bad) sbb pop in jle movabs sub jmpq lea seto bswap jno mov movzbw jmpq jmpq cmp jmpq jmpq sub rex.WRXB (bad) sbb sti push mov adc (bad) fild (bad) movsl rex.WR jge lahf rex.RX xor (bad) xchg cmp out sub sub and sub (bad) mov xor jle and cli out jge pop in lods mov std or mov xor push pop mov lahf andnps sbb jbe xchg add (bad) (bad) in rorl rex.WRX cmp mov or shl imul (bad) (bad) std rex.RX xchg iret add add or lret (bad) sub mov fdivl (bad) xor test add movsl rol sbb testl mov or xor sar add mov xchg mov out (bad) imul rex.WX addr32 cmpsb pop test popfq (bad) (bad) (bad) cmp (bad) mov push rex.WR addr32 mov and mov fcoms rex.RX ds jmpq mov fadd adc add clc xor (bad) in in lods sbb iret stc mov cmp (bad) (bad) (bad) std jne iret rex.X add add cs (bad) pop (bad) xchg loope or pop retq hlt std jb jle push test (bad) (bad) (bad) nop icebp push xchg cmp (bad) scas enterq sbb and pop scas lret stos mov lods add fdivs xor adcb js mov loop hlt push cmp rorl mull mulb imul (bad) iret jl mov movabs rex.WX sub jb xchg adc sub test shr rex.RB cmpsb cmp xor popfq xchg cmp movabs test rex.XB scas roll sbb std (bad) mov callq mov outsb or movabs fist xor cmpl mov mov (bad) (bad) (bad) sti cld out fdivrs (bad) mov rex.RX adc loop pop mov xlat in stc movabs add add xchg stc cmpsl add fsubr fmuls mov push out cmp pop jo sub (bad) add (bad) int sarl jl in in cmp mov rex.RXB or out sub xchg mov jrcxz jle fwait jl pushq jmpq movabs out mov mov rcll mulb scas test icebp movabs es popfq movabs fucomp mov imul jge rex.RX sbb (bad) (bad) xor fcmovu or loope (bad) xlat fsubl pop sarb or in imul mov (bad) cmp outsb adc movabs mov (bad) (bad) (bad) (bad) (bad) (bad) iret pop (bad) rex.WRX sbb (bad) xor jge imul add jle insl (bad) js adc (bad) in sahf cmpb ja sti or out pop std mov cmp movsl sub (bad) retq push cmc sahf mov jae subl pop mov lods mov test mov test test cmp jmpq mov movzbw lea jmpq pushq jmpq mov not bswap movsbw mov lea lea jmpq jne data16 (bad) or movabs sti mov cmp clc add clc stc cmp test movzwl rol bsf (bad) (bad) mov stc cmp clc add cmc bt test bt mov cmc cmc bt test jmpq jae not mov bsr mov bsr sub rol test mov cmc cmp cmc sub bt stc stc jmpq cld pop movslq (bad) leaveq icebp cmp xor push xchg pushq fs movsb retq cld lods (bad) push cwtl int cmp add add or sahf mov (bad) sarb (bad) mov sub (bad) hlt lahf or lods jl adc movslq push jg pop pop insl rorb push pop adc xor leaveq rex.WR mov push cmp jp mov out cmp or (bad) stc cmp jmpq jmpq mov cmp jmpq lea xchg mov bswap movsbw mov movzbw pop movsbl mov mov lea xchg jns mov jo mov retq fbld retq mov rex.WRB (bad) fstpl (bad) out and mov sbb xchg rex.X xor sub xor (bad) icebp and sbb push (bad) callq add cli gs (bad) callq mov fnstsw cmpsb popfq cmp out lea sub int (bad) out sar popfq sub mov (bad) sti in out jrcxz rcrb movabs sbb test (bad) (bad) scas int add in cmp xchg cmp sti fcomps (bad) std mov test scas (bad) lahf (bad) mov cld cmc (bad) pushq movabs lahf sub rorb add fildll jnp push adc pop lret cmpsl mov jno mov pop sbb fistpll jae (bad) repnz or in adc jrcxz (bad) out rclb (bad) loopne leaveq or adc mov scas xchg imul insb (bad) mov in callq (bad) pushfq lahf (bad) and (bad) imul (bad) push rex.WX lea mov popfq sub or push (bad) scas push (bad) xor (bad) loope jne jl xchg cwtl lea jnp sub or (bad) jb gs (bad) (bad) std rorb cmpsl pop lret rex.WB adc (bad) int (bad) fimul push pop je rex.B jo xor (bad) (bad) (bad) fildll lods mov pushq test je mov mov test outsl or fwait stc (bad) rex.WRXB cmp ss and sub (bad) (bad) movabs callq jmpq popfq (bad) mov vpsubd lcall (bad) mov in in sahf sbb or push in sbb add mov sub push xchg rex.WRB mov iret add movabs mov rex.RXB mov and scas sbb (bad) cmc icebp test (bad) cltd (bad) movsl mov clc loopne mov push test jge rex.XB ss push rex.WXB jmpq (bad) (bad) (bad) cld sub (bad) (bad) (bad) (bad) out and add pop pushq push cs (bad) add add add outsl (bad) (bad) rex.B (bad) or outsb rex.RXB rex.B shlb or scas addl jp cmpsb clc (bad) rex mov repnz pop enterq jno cmp (bad) (bad) mov (bad) add movabs and ja mov (bad) popfq push and scas rex.RX sbb jbe mov sbb (bad) test (bad) enterq (bad) lods mov lea cmpsl in test (bad) sbb mov test leaveq in (bad) js enterq cld (bad) push sti xchg cld rex.WRX wrmsr mov (bad) (bad) rex.X pushq mov shlb add jge pushq (bad) (bad) (bad) sti (bad) icebp js pop (bad) (bad) (bad) inc xchg mull xchg sbb mov fisubrl add add rex jmp movsb or (bad) and (bad) fdivs rex.WRB mov rex.X (bad) sub sub jmp adc cmpsl movabs or mov rex.X enterq (bad) (bad) push in cmp xchg in (bad) lcall mov adc cmpsb push (bad) mov rex.RB bsf adc cmp mov stc callq lock in (bad) (bad) loop xchg rex xor xchg (bad) (bad) (bad) enterq insl cmp movabs rex.X rex.WRB callq add (bad) jno,pt mulb imul addr32 rex.WR sbb callq movabs scas adc icebp shrl (bad) mov cmp mov sbb in (bad) or add add insb pmullw in iret sarl (bad) movabs (bad) (bad) mov mov and sti cmp (bad) movabs test adc (bad) je (bad) jmp mov shrb decl sbbl (bad) jmpq ja clc clc imul cmp jmpq pushfq subl xchg callq movabs xor jrcxz mov rex.XB (bad) (bad) mov mov rex.W rex.WR fimul loope xor ja rex.RXB lods rex enterq (bad) rex.WRB and pushfq mov fmull test loopne (bad) push rex.RX (bad) rolb (bad) sub jno pushq enterq mov (bad) sahf jp rex.XB movabs test (bad) sti (bad) imul (bad) (bad) (bad) decb pop (bad) jl add add or in clc mov jo pcmpeqb rex.R (bad) lods sar push push repz lods faddl push cmpsb adc outsb shll scas test or jg (bad) test or sub lret mov in jrcxz mov sub fidivl (bad) (bad) retq (bad) stos sbb (bad) fidivr testl rex.WXB stos (bad) outsl pop popfq sbb add jae add (bad) add push test rcrb mov jg scas xchg xor sbb es pop cmp (bad) (bad) (bad) (bad) pushq lret sbb sub outsb sub jl xor add fdivrs mov jae xlat mov cmpsb (bad) adc test adc loopne (bad) in mov and (bad) pop (bad) xchg (bad) mov or push (bad) xchg and stos movsb and add add or pop test xchg rex.RB pandn movsl adc jae adc jnp fimull mov retq lcall cmp mov shl or rex.RXB cmp jp push retq pushfq gs fwait (bad) mov lahf and sbb cltd push jo sbbl xor sti (bad) (bad) (bad) cld or pop loop (bad) (bad) (bad) dec lods loope repnz mov loop mov (bad) rex.WRXB xchg xchg cwtl add add rex.WX std jge mov ja (bad) stos pushfq jge loopne out rolb rex.B rex.RX imul iret insb xor out (bad) rex.RB fidivl sbb push cmp int (bad) in in xchg mov outsl ljmp movabs mov rex.B sub mov jl xor loope loopne xor push in outsb cmp (bad) shll scas lret jns (bad) (bad) (bad) loope jrcxz mov (bad) push (bad) or (bad) addr32 mov (bad) mov pop sub sbb push hlt push rex.WRXB sbb sti cmpl pop gs rol rex.WRB jb ljmp movslq rex.WRB and (bad) jmpq push (bad) cld jmp lahf add shrl (bad) movsb lret mov cmp lods cmp xchg stos adcb movabs mov add xchg add mov (bad) out (bad) lahf mov jne (bad) sub loopne rex.WB sub sbb fwait add jge mov (bad) add mov jrcxz cmp adc pop add jns jns rex.WXB add adc mov (bad) xor adcb rex.X (bad) adc outsl retq movsb fsts mov iret imul (bad) rex.W jns rorl fs (bad) (bad) (bad) std or rex.X cmp (bad) lods lret sbb jg mov std xchg (bad) xchg mov addr32 fucomi retq add add jbe (bad) (bad) xor jp add cmpsb rex.WRX es (bad) cmpsb jg and mov shr rex.WRB rex.X stos imul mov sbb mov (bad) rex.RXB mov fisttpll ds scas xchg xor lods orl (bad) mov lock rex.XB movabs loopne jp pop rex.R mov sbbl cmp adc jge movabs repz sbb cltd test cmpsb cmp lahf mov (bad) xchg xor push mov cmp mov stos movsb (bad) xor (bad) (bad) cli cmc rex.WX and (bad) (bad) std mov hlt pop iret lret (bad) or adc xor (bad) test stc js test jae xchg jno push or data16 sahf (bad) (bad) (bad) (bad) (bad) callq push rex.WX fmul rorl sti movabs mov insb (bad) (bad) insb pushq (bad) loopne stc pop rex.WX imul sarb or lock (bad) decl xchg sub rolb sub test inc rcl or add mov mov or mov bt jmpq jae cmp stc bt cmp xor jmpq je inc or or shrd push bsf sar bswap rcr mov stc inc shrd sub bswap movsbq lea jmpq push sahf cmp sub fsubrl fsts rex.RX mov pop mov (bad) push subb rex.X cli movabs fwait jl jb (bad) rex.WRXB push add test xor lret (bad) stc rex.W leaveq imull (bad) rex.X push (bad) pop push cli xor (bad) xchg xchg push in and cwtl xchg movabs sbb xor out test fdivp in (bad) (bad) sti jne pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) rcl movabs lret sti (bad) cmp (bad) (bad) (bad) pushq mov xchg mov (bad) jae fxtract movabs retq movabs rex adc (bad) leaveq lods mov (bad) (bad) repnz add add mov icebp movabs inc roll shl or xor not sbb lea movzbl mov rcr movzbl mov adc jmpq cmp (bad) scas adcl sbb mov (bad) (bad) and in rex.WR ds js stc xchg cmp jno lret (bad) cmc leaveq out (bad) test push movsb rcll pminsw iret sbb fisub sbb lock (bad) (bad) sti cmp xor imul (bad) std (bad) xor pushq pop and rex.RB stc mov sub jnp jae and movabs imul mov (bad) (bad) cmpb sub sub mov test test rex.RX (bad) (bad) (bad) clc (bad) jae in loopne mov adc stos xchg ficompl rex.RXB bndldx sub loop cmp sti scas (bad) adc pop mov scas add cmp mov rex (bad) repnz sub data16 retq sti jo es mov adc scas movsb sbb loope rorb outsb subb sti sub push in sbb (bad) jrcxz loop iret movabs xor (bad) or loopne sub mov mov mov xor std mov fstps icebp loope jo mov ja sub cmp (bad) xchg mov adc mov rex.WRXB jnp fidiv enterq fldt mov (bad) subl add or (bad) cld rex.RB and (bad) (bad) incl int3 mov or loope xchg mov shlb (bad) icebp jrcxz mov add rex.RX add add pushq rex.RXB scas rcrb adc insl jo retq (bad) (bad) retq (bad) jbe andl mov xor rex.RB sub mov lods lahf mov hlt push sbb add add jmpq jmpq xchg jmp (bad) xor out addr32 xchg in scas and (bad) mov push cs cld mov or out adc mov mov movl nop mov imul pop push xchg sub (bad) (bad) cmp (bad) mov (bad) xchg test out loopne xor cmp loop (bad) sbb hlt jle (bad) (bad) (bad) cld outsb js out (bad) (bad) (bad) pushq and lods rorl (bad) fxam pushq xor cmp ficompl jle mov rex.RX fldcw add add movabs (bad) mov rex.WB fnstenv jp movabs jrcxz jno push add (bad) mov and (bad) mov testb cmp (bad) paddb test add jmpq stos jmpq je shr btr add cmc lea rcr sub shld btc shl xor shr shld mov and bsr inc add setns add adc sub not inc mov jmpq mov rex.WR (bad) or add cmc loope stc out fsubs retq out (bad) sub leaveq test fstpl sbb sbb fcoms cmpsb cmc out fstpt jmpq mov push mov mov addr32 ja xchg mov cmpl stos mov int jge (bad) movsl mov movabs pop rex.WR imul mov (bad) adc in (bad) or cmp (bad) ss fisubr (bad) (bad) (bad) cli mov (bad) (bad) (bad) std addb adc cmp xor insl jnp mov mov rex.B cs (bad) jmpq jmp in mov retq (bad) and clc out rex.W jge faddp sbb mov test rex.WRB rex.WR xchg repnz mov mov adc hlt cwtl mov cwtl mov neg mov cmp out mov sbb (bad) sub repz mov (bad) pop insl push rex.RXB movsl or add (bad) mov test imul jl fcmovu xchg (bad) xchg adc cwtl mov sahf in xchg repz mov test (bad) imul rex.W adc (bad) jno in (bad) push sahf sub and in (bad) (bad) (bad) (bad) sti (bad) sbb incb rex.X rex.WRX fist add (bad) push sub lahf int (bad) rex.WR (bad) rex.WRX or sbb js cwtl cltd sarl push (bad) or rcr adc repnz clc or (bad) (bad) jmpq jmpq cmp cmp jg jb clc cmp jmpq jmpq clc stc mov bt add bt stc clc rol bt bt bt neg cmc jmpq jmpq jbe xor rcr rcl mov cmc add rcr movsbw btc bswap mov add stc add stc (bad) icebp add bt sete movl mov shld movsbw mov jmpq rex.WRB rex.WB insb pop (bad) ja mov jno outsl gs cwtl std (bad) or lcall push or retq (bad) adc cmpsb add push jge (bad) test jnp rex.WR sbb sub cmp cli pushfq mov cltd mov jmpq xchg jae jg (bad) (bad) (bad) xchg gs rex.W fmul or cltd (bad) (bad) xchg scas fwait rex.WB xor (bad) std mov rex.WRB (bad) (bad) (bad) sti pushfq cmp (bad) (bad) (bad) pop in icebp fwait (bad) shrl xor pushq js adc or mulb rex.WXB and (bad) (bad) (bad) (bad) mov and cmp outsl cmp xchg repz jrcxz punpckhwd (bad) fldl cmp (bad) push cmp (bad) jbe subl (bad) data16 rex.RB stc out and ds adc xchg rex.R pushfq imul int3 loop mov cmp jmp (bad) jno mov xchg (bad) xchg push adc xchg rex.WXB mov adc outsl repz sub stc (bad) sub push lods mov ja mov adc adc xlat in decl (bad) movabs mov cmp jrcxz insb pop mov addr32 xor (bad) (bad) cld sbb (bad) (bad) (bad) (bad) fbld rex.WR cmc add add pop (bad) xor (bad) scas leaveq enterq (bad) fisttpll sub rex.RX fs (bad) jnp mov xchg pop (bad) sub (bad) sub xchg mov lock or (bad) mov mov sbb (bad) sbb in sbb rex.WR sub test bt bt cmp cmp jmpq jmpq add rex.WR outsl imul jb jbe insb gs (bad) insb jne add xchg jmpq pushq jmpq push imul nop leaveq stc (bad) sub jle sub rex.WRB (bad) lahf cmpsb rex.WX rex.WR ds jp movabs sti fimul data16 data16 ss insb cli addr32 out xchg cmp (bad) mov mov mov cmpsl (bad) popfq jle cmp lock sbb xor (bad) mov shlb lods and (bad) (bad) (bad) cld out add (bad) movabs push cmp repnz mov pushq mov sub jl rex.RXB cld mov pop (bad) jb,pt in int mov xor (bad) (bad) decb (bad) fcomip hlt stos std std and (bad) (bad) (bad) sti mov cmc push sub (bad) (bad) (bad) js mov jno rex.XB cmp pop rex.B mov and popfq fild rex or sti retq add rex.WR lret fs fisubl fnstsw (bad) (bad) (bad) clc out cmp js pushfq add rex.XB jo mov rep sarb mov rex.WXB stos mov movabs mov sarl sti nop rex.WRB rex.X (bad) (bad) pop (bad) push test (bad) sti loopne in mov push rex.RB (bad) jmpq jnp mov cld cld scas (bad) (bad) movsb and cli out sbb add repz rex.X pop push cmp (bad) mov xchg xor cltd cmp sbb clc in rex.RXB loope adc gs rcll pop mov add xchg jg movl decb (bad) (bad) (bad) pushq decl mov movsb or adc pop cmp mov mov in pop (bad) and xlat sti (bad) mov jrcxz mov or (bad) test add sbb mov xchg movabs and repnz (bad) add xchg (bad) xchg out rex.WRX xor rex.WRX and or xor retq outsl mov (bad) (bad) sbb sub push jns lods xchg ja mov xlat data16 lods shr mov and add adc mov fiaddl pop unpcklps pushq add pop adc leaveq mov sahf and rolb mov jno (bad) cld mov adc sbb xchg rex.X cwtl test mov xor (bad) int3 retq pop es fiaddl or adc (bad) nop shrb and int3 scas or mov movabs jnp (bad) add loope or cmpsb (bad) (bad) (bad) decb xchg mov icebp stc movabs movabs or or (bad) push sbb cmpb rex.WR mov lea and adc shr mov rex.RB std add or mov std retq push jne xchg rex.WXB jb stos cltd test mov test rex.WX mov push imul jns push adc sahf cmp movabs cmc adc pop test pop andl movabs push lea imul test (bad) mov add jb mov (bad) (bad) jle data16 (bad) ja sbb ja mov in pushq mov lret xor fbstp loop jmp fisttpl add mov clc mov (bad) scas rex rex.RB test cld (bad) jmpq test rex.WB jmpq rex.WRX rex.B rex.WXB mov rex.RXB sahf icebp outsl mov xor mov roll popfq pop push jge (bad) (bad) rcll fimull pushq (bad) mov sti mov cmp mov (bad) (bad) (bad) insb push (bad) movabs jnp roll outsl (bad) (bad) lret bnd (bad) (bad) std cmp mov (bad) push movabs cmp rex.WRXB xor mov mov rex.RB rex.R add (bad) test mov xchg jge or mov movsl pushq push mov push jl and jbe sub iret (bad) nop out sub (bad) mov rex.WRB addr32 sbb push jns test iret cmc jmpq xor repz movabs cld xor rex.RB jne scas test mov stc pop push movsl jg (bad) (bad) icebp rex.RB add add mov xlat icebp insb adc out stos movabs cltd and sub cmp xor sti rex.XB fs (bad) (bad) (bad) incb rcrl (bad) xchg pop ja int push adc jnp movabs in jne (bad) (bad) (bad) decl or mov subl leaveq fs cmp (bad) movsb cmc (bad) adc ja mov (bad) (bad) rex.RX ja outsl (bad) mov rex.W in (bad) (bad) repnz xchg add addl xchg shrb test test add jrcxz (bad) decl mov (bad) rex.W (bad) cltd mov cmp mov in lods and lods jg sbb xbeginq adc (bad) outsb rex.RXB (bad) icebp movabs lea imul add and and sub stos rex.WRXB mov lret add (bad) (bad) cld xor fs (bad) (bad) jmpq cmp push fistpll cltd callq (bad) test (bad) adc icebp jne mov (bad) pop xor (bad) (bad) rex.X xor repnz add js lret pushfq lea and cltd lea xchg xchg mov callq cld movabs sahf mov and sub pop xchg orl movslq scas sbb jb and fwait mov and nop cld (bad) rex.WXB adc add rex.XB sti cs nop retq (bad) and xchg adc and pushfq clc out fdivs cltd lret pop mov (bad) clc in (bad) fsubp sub cmp cmpl mov or or or mov ja rex.WRXB (bad) in fsubr xlat rcl cmpsl rex.WB (bad) out xor (bad) and push (bad) (bad) (bad) dec (bad) movsl shrl sbb xchg fnstsw (bad) xchg fcoms test lret sti cmp repnz roll add or (bad) xor cltd fwait sti imul stc pop (bad) xchg test rex.XB cmp lret push cmc xchg mov cmp pop int3 (bad) (bad) (bad) jne fsubs repnz (bad) mov add cmp bt add jmpq add clc movzwl movsbw shrd and mov test test test add stc clc mov cmc cmp test jbe je clc add je bt cmp jmpq jne test stc movb test clc test jmpq jmpq movslq (bad) fcoms idivl int3 orl (bad) mov (bad) cwtl sub jp or jmpq stos sarb test sub (bad) or cmp xchg mov xor mul xchg scas add lods (bad) jne imul xchg mov test xchg in (bad) xchg mov adc callq (bad) (bad) (bad) std stos movabs mov es jmpq enterq imul mov (bad) cwtl cmc fstl and stc xchg sub cmp loopne iret cwtl mov decl mov fisttpl mov outsl (bad) mov jrcxz outsl or ss (bad) pushfq (bad) (bad) mov ds or cli push rex.XB fwait rol lret (bad) add pop (bad) sbb mov add xchg sub add (bad) cld sti decl test (bad) push sub bt stc cmp jmpq stc push push mov movsl mov sbb jnp cmpl jp jle and shrb pushq repz (bad) in fisttp (bad) cmovp mov rex.WRB icebp (bad) jl or loop xchg rex.RXB rclb shll jbe fiaddl cs and out sbb mov rex.WR or xchg sahf xor rex int3 fldcw iret movabs (bad) (bad) sti (bad) rex.W (bad) (bad) (bad) (bad) lahf imul rex.RB or es (bad) (bad) jae add add ja xor addr32 lahf (bad) seto adc mov fdivrs xor (bad) mov adc loop pop adc push (bad) mov pop in (bad) (bad) (bad) jbe icebp (bad) stos movabs mov add (bad) imul fsubl push pop mov (bad) sub or mov adc pop adc push xor sbb mov fcoml jns popfq rex.RX xor movsb cmc mov pop int3 pop rex.WRX mov mov pushfq xchg rex.W sbb jb pop (bad) (bad) (bad) (bad) fnstsw (bad) repnz adc jp test jp (bad) sub fistp rex.WRX fs mov mov rcrl mov out mov lods fbld jbe or gs xrelease jns ja add add retq (bad) movsb (bad) testl sub sbb iret hlt popfq scas lea movabs xor imul (bad) test loope lret jmpq cmp pushq test cmc cmp jmpq jmpq jae hlt scas (bad) rex.R cmc test es movsl test insl xchg mov (bad) xchg jle xchg adc mov (bad) rex.B xor cmp test push (bad) adc cmpsb mov out fmull pop cmp repnz cltd adc rex.WR mov leaveq mov lea (bad) hlt xchg jbe or pop cmpsl sub (bad) (bad) sti (bad) xchg in outsl sub (bad) (bad) (bad) movsb add subl mov popfq cld stc pop xor mov add add push push (bad) jge push clc (bad) pop addr32 shlb out adc adc pop cmp ja out fsubrs mov std lods lods rcl jnp (bad) cli lahf cmp lods or mov cmpsl retq stos jmpq lahf xor lea cld jmpq loopne fmull test in scas and nop rex.W (bad) rex.RB pop rorb data16 rcrl lahf cmc lods adc pop add add ficoml xchg mov pushq retq cltd (bad) cld je or rex.WRB sbb test loop adc mov rex.WXB movsl jb (bad) (bad) (bad) decl and xlat je xor fdivs movabs movabs mov add or jnp xchg int3 insl (bad) sbb mov jbe xor mov stos std (bad) or add (bad) cmp (bad) (bad) movabs repz callq lcall mov (bad) test setl lods cmp not test neg stc stc ror stc cmp cmc sub cmc cmp not bswap mov lea lea lea movzbq movsbl pop jmpq jmpq jne clc jmpq rex.RB adc fs rex.XB rex.XB sub icebp lea sbb jae mov test sub enterq mov in sti in (bad) int mov (bad) xchg test lcall xor mov movsb (bad) add movabs jle xor stc (bad) test xchg imul jg xchg mov pop (bad) mov sarb xchg fsubl retq mov and (bad) pop (bad) in and push jle (bad) (bad) (bad) std xchg movabs pop in rex.WX (bad) mov (bad) and or (bad) movabs std jge bsf cs fsubrs rex.WB and xchg rex.WR fsubl sub adc pushq jae test (bad) (bad) (bad) cld test (bad) rex.R (bad) (bad) incl lahf orb and mov (bad) movabs imul adc jb ja pop je cs adc pop cmp mov push pop adc xchg leaveq or lret or (bad) insl lahf stc adc xor add add sub lret cwtl sti jle cmpsl jp shll iret mov add xchg mov xchg ja jle lods add pop imul lret loop gs pushq cmc rex.R fidivrl sbb sbb or sbb (bad) push or add movabs sbb add je outsb cmp mov std or test or cmpsb out cmpsl adc add movsb sbb clc fucom xlat mov and (bad) rcr cwtl push cmp cld push rex.WR and (bad) mov movabs push out in mov out rex.WRXB retq mov pop (bad) adc cmp (bad) (bad) sti loope out cmp (bad) (bad) (bad) (bad) movabs push mov jne push sbb data16 mov push cmp and xorq add cmp js fsubrs lock rex.RB and (bad) sarb mov sarb sub test (bad) push mov mov (bad) rcll or mov sti (bad) jmpq jmpq push lock std std addb imul (bad) lret (bad) mov pushfq mov (bad) out ss (bad) lahf mov in clc rex.WRX rex.X and (bad) push pop lret add in fldt adc test and (bad) scas add repz xchg (bad) mov in fwait insb cmp (bad) callq enterq rolb test xchg or callq xchg jns,pt es mov rex.WR adc (bad) sub fsubs retq enterq or rolb repz or or cs rex.X cmp pop movslq addr32 (bad) (bad) cmp mov std add stc imul out (bad) (bad) (bad) (bad) (bad) (bad) imul lods rolb sahf cs (bad) jg xor pop (bad) mov stc mov (bad) icebp xchg add (bad) shlb ss popfq jrcxz insb mov rex.WR xchg xlat mov (bad) outsb leaveq pop adc sub mov or (bad) cmp test jmpq jb cmc test bt cmc cmpb jmpq jne cmp xor stc shld bswap mov sbb (bad) lock shl add rcl and jmpq mov or mov stos sub fbld xor nop rex.B sbb (bad) hlt movabs (bad) pushfq (bad) or rex.WRX jo jne enterq (bad) and testl mul (bad) sbb xchg (bad) pop xchg xchg push addr32 jbe nop rex.WR mov cli mov rorl xchg out mov fld out and sbb pop jge cmp outsl mov int3 rex.WX jg (bad) (bad) sti rex.B rex.W pop add (bad) (bad) incb jmp adc mov rex.WXB rex.WRX cmp mov (bad) (bad) incl imul cmp mov retq jb push cld fildll or mov test adc cmp fstpt orl mov or cmp cmp jmpq rex.RX cmp and je push ss mov mov lret in scas (bad) retq rex.R ds sbb xchg and xchg ja in sub std (bad) imul sti in push mov jp jb andb pop xchg test in cs sub fisub (bad) negb xchg (bad) xor addr32 mov retq adc rex.WRB xchg test movabs outsb mov (bad) (bad) pushq add gs rex.W (bad) (bad) (bad) callq (bad) xor add pop mov repnz cmpsb cwtl ljmp insl (bad) mov sub add mov scas sub rex.RXB cmp fisttpll adc mulb loop or sbb xchg (bad) jrcxz mov test add shl add ror shl mov stc test cmp jmpq cmp pushq jne cmp cmp jmpq imul bt cmp stc add jmpq or xor mov in (bad) stc sti rex.WRB lret (bad) or lahf es xchg jmpq movabs xchg sbb outsl (bad) mov sbb sub (bad) xor mov pop mov lods imul leaveq (bad) (bad) (bad) std (bad) (bad) adc fs pop gs rex.XB mov pop xor stos cltd shr fbld or cltd repz sub out shll mov sbb (bad) (bad) (bad) ljmp stos (bad) data16 (bad) test out (bad) (bad) test mov sub (bad) mov pop in (bad) repz (bad) rex.WRXB jne or sbbl rol fs mov cmpxchg jg not not lea jmpq sub lea stc mov mov cld (bad) pop js jge xor and xorb sbb xor jle add xchg movsb stc pop (bad) pop push pop mov rex.XB (bad) movsb (bad) (bad) nop mov movabs push rex rex.WRB mov jp rex.W xchg rex.R (bad) (bad) cld pushq cmp cmpsl (bad) (bad) (bad) ljmp cli notb (bad) cmc sti cli sub jle xor in xchg adc imul xor fs clc pop pop cld loop pop (bad) callq fnstcw scas (bad) lods push (bad) leaveq pop sysexit movslq rex.RX add rex.WX ja fiaddl test push rex.WRX jmpq rex.R mov ja repnz mov sbb (bad) jno xchg mov maxps test rex.W lret addr32 xchg (bad) mov xchg loop sti nop rol mov leaveq repnz jnp lret (bad) pushq xor mov movabs mov adc div (bad) sub xchg (bad) add xchg cmc rex.RXB adc movabs (bad) push push in sub xchg (bad) (bad) outsb (bad) (bad) (bad) sti mov cmp rex.WRX lret (bad) out (bad) push or mov xor cmc lret or (bad) mov (bad) stc jmpq pop nop add (bad) (bad) je rex.R orl std shrl cmp sbb pop jge iret adc mov pushq mov fidivr movabs mov (bad) fbstp mov adc xor fildll xlat negl adc cld cld pushq imul mov jle or sbb xchg mov xchg repnz jg or mov fildl xchg (bad) hlt or add rex.WR adc pop (bad) mov mull adc add (bad) (bad) callq cqto movsb (bad) sbb movsb fldenv sub pop and test rex jrcxz popfq std pop subl mov (bad) (bad) (bad) sti (bad) fcoml jno (bad) (bad) (bad) decb (bad) (bad) jmp repz fs jle or add add js rex.WRB rex.R pushfq mov cs pushq jae add (bad) cmp popfq push clc mov (bad) sub adc cmp ds adc or addr32 jmpq notb imul jg xchg xor add fistl enterq push jle mov (bad) xchg cmp (bad) std stc loope (bad) rex.X (bad) stos (bad) or (bad) fidivr sbb jl rex.WRB jmpq jmp shl rex.WXB (bad) (bad) decb mov xor pop (bad) (bad) repnz (bad) (bad) (bad) (bad) std push out sbb add mov xchg jge cli sbb pop mov lods shlb (bad) jns xor jne movabs pop cmp add push cmpsl mov lock add sub adc cmp movslq mov adc pushfq (bad) add push (bad) je rex.WRB je pushq add and add jmpq jmpq out add mov adc roll in scas (bad) or mov (bad) push cmp and sub (bad) xor push (bad) (bad) mov xor fdivr (bad) (bad) std stc sub sbb fs jb add (bad) add ja (bad) jmpq lods repnz loop pushq std add jns pushq mov xchg movabs je (bad) jrcxz (bad) pushq fwait cmc xor rex.RX or and mulb je (bad) mov mov adc (bad) jmpq test jmpq lea jmpq (bad) rex.WRXB mov rorl popfq add push movabs xlat scas and add std (bad) xchg js (bad) mov int3 stc sahf add xchg mov (bad) mov test insl (bad) rex.B and sti mov fcmovbe xchg rex ja push rol sar (bad) (bad) cli lret add (bad) (bad) std mov (bad) and in fimull rex.WRXB mov (bad) jge movabs pushq pop mov pop shlb (bad) xor ror scas pop or (bad) (bad) dec xlat (bad) adc xlat mov xchg lret pop fimul (bad) and movsl (bad) (bad) add sbb test (bad) or cld push sub xchg rex.WB rex.RB mov xor jg pushq sbb clc cmc lods jae jmpq jmpq jmpq jmpq adc lea sub xchg setb mov pop not bswap movsbw mov pop jmpq jmpq jmpq in loopne pushq rex.WXB push push mov pushq mov jle jno movzbl adc push jg or imul and or mov mov scas sbb loopne or data16 (bad) pop imul rex.W xor (bad) repnz (bad) xor or js in jbe (bad) (bad) cld and (bad) (bad) (bad) callq mov mov or lret sub xchg je (bad) (bad) rex.WB roll pop xchg mov add movabs adc rex.WX es mov movsb jmp pushfq mov (bad) rex.WRX pop (bad) and sub jmp add and je and mov add (bad) (bad) add push mov sbb icebp (bad) cmp mov (bad) repz in in jmp orl xorb movabs xor stc rex.WB sub cmpsl outsb mov (bad) mov sbb out (bad) xor in (bad) jmpq and (bad) (bad) adc push mov mov xlat (bad) push cmpsl rex.WRXB rex.X cmp (bad) (bad) cld pop in adc (bad) (bad) (bad) lcall cli clc pop push push cmp cmp push ja push (bad) cmc fisttp cli (bad) lret loop imul sti (bad) or in scas xchg in sbb or add add rex.X fildl out add jge lods (bad) movsl add cmp (bad) jbe (bad) mov xorl (bad) repz (bad) cmp sarb in rex.WRB test rex.W (bad) rex.WXB jmp add add jmpq or icebp repz (bad) movsb sub mov (bad) xlat frstor loop in mov jmp xor outsl sarb lods rex.B lock pop leaveq mov cmpxchg shlb cmp out sub cmpsl outsb (bad) ss rex.WXB pushq ss fild and push rcr loope xor pushfq in enterq xor rorl rclb (bad) xchg sub adc adc mov (bad) (bad) (bad) sti mov (bad) (bad) decb mov (bad) adc cmp mov add add or setl mov lret lahf iret adc int3 in gs addb pop rex sbb push fs mov lret popfq add cltd cli sbb movabs shl sbb (bad) sub fadds cmpsb (bad) (bad) jmpq pushq jmpq bt bt cmp jmpq movabs sbb mov cmc push add movabs and cmpsl sbb stos (bad) (bad) rex.RXB imul (bad) mov mov cmp rex.RB rex.B ss imul (bad) pop mov movabs fstp mov cmp add pushfq movslq xchg mov cli sub xor mov push sahf add shr pop sti in xor mov push jle loop xor rolb and test jg (bad) fsts rex.WR adc fnstcw es (bad) (bad) cld add push (bad) or push xchg or jle incl adc or (bad) mov jo or rex.WRXB movsb stos sub push (bad) and fs adc retq and insl jp adc sbb rex.RX cmp or mov pop mov rex.R lods jg rex and movabs fwait xchg sbb stc (bad) js (bad) (bad) (bad) lahf mov gs xchg rex.WR ss mov add add iret xor sub popfq rol (bad) cmc adc mov cmp mov sub (bad) fistpll es scas jle sub (bad) jmpq rex.RXB xor push (bad) mov sbb add clc rex.WRX rex.RB push xor cs insb add test sti (bad) (bad) jmpq rex.RB rex.B (bad) sbb (bad) rex.WRB mov (bad) cmp sarl mov idivl mov rex.R rex.B sub repz jmpq xchg (bad) (bad) (bad) jge imul adc (bad) retq mov rex.B (bad) add shrl jns push adc pushfq rex.WRB (bad) (bad) (bad) std xchg add add xor movabs adc sbb (bad) xchg mov (bad) fidivrl cwtl cmc (bad) retq movabs mov movabs imul insl push (bad) cmp xchg testl movsb mov and (bad) xchg push es out repz (bad) test fidivl movsl rex.WRB shll mov add test xchg fdivrs movd (bad) fs or sbb outsl nop andl repz cmc and xor (bad) (bad) (bad) cld sub xor movabs (bad) (bad) (bad) stos jle cmp movl int jbe (bad) sub (bad) pop jns loope loope push test (bad) fs lahf mov and adc or lods leaveq (bad) adc rex.W clc jno jno jle rex.X fwait push add mov sbb shrb adc add (bad) cwtl or xlat jnp fstpt mov (bad) sbb mov sbb xchg xor je jmpq cmc jmpq adc or mov out (bad) add (bad) (bad) (bad) cmp (bad) lret add (bad) and xchg (bad) movabs in fisubrl andl xchg rex.WXB outsl out add imul rex.WXB push sub mov imul (bad) std xchg add cmp lods (bad) (bad) (bad) cld rex.B scas or (bad) (bad) incl or js (bad) mov or loop (bad) imul fildl (bad) xor xlat xchg xchg (bad) push cltd repnz (bad) mov cmp xchg cwtd rex.WRXB add add sub push xchg lahf clc (bad) xchg mov cld rex.WRXB imul cmpsb stc rex.X (bad) sub add mov lret shll push add rex.WR js (bad) mov sbb test sti mov (bad) sahf (bad) rex.RXB pop (bad) leaveq out fist and adcl loop pushfq stos rex js (bad) push mov gs in pushq icebp cli jrcxz mov jle rex.WX mov (bad) out test xor pop jmpq sub (bad) xchg std sbb (bad) cld mov (bad) push (bad) (bad) (bad) decl (bad) jae (bad) and gs jmpq enterq (bad) jb sbb std cmp (bad) (bad) jge (bad) cmp scas xlat xor mov stc insb movslq insl fadd rex.X ds sbb rolb (bad) (bad) xorl add add jnp xchg mov jne (bad) (bad) add in mov xchg clc rex.B outsb or (bad) (bad) jb jne (bad) sbb callq movabs sti pop or rex.RXB rex.R not not not xchg movzwl jmpq mov retq stos (bad) mov mov shrl fsubrs leaveq hlt jmp in push mov pop xchg rex.WRXB rex.X callq xchg mov in nop or or fistpll movslq adc cld lods insb insl and cs lods rolb lret out xchg fcoml rex.WR (bad) sub rex.WRX (bad) xor or sub in (bad) (bad) (bad) popfq (bad) (bad) (bad) sti leaveq push mov mov (bad) (bad) decb cmp (bad) mov fsts mov ror push rex.WXB add add and jg jb mov jl mov rex.WRB rex.W rex.WRX (bad) mov sub sbb cmp int3 gs (bad) clc ja insb and push (bad) sub retq cmpsb fisttpl mov (bad) and idiv push bt cmp jmpq xchg leaveq imul mov sbb sub leaveq (bad) cmc rolb push cmp clc idivl jrcxz (bad) ss push (bad) pop mov rex.WR (bad) fnop lret out xor rex.XB out vphaddubw retq (bad) cli sbb rex.W je pushq (bad) sbb (bad) add cmp jo,pt push out test and loopne rex.WXB out sbb cs (bad) (bad) (bad) sti mov fistpl sbb out xor hlt lret fwait lea rex.RB rex.WRXB push mov in movabs xor callq cmp outsl movabs (bad) (bad) lea cmpsb mov add pop or or (bad) lret callq mov jp cmp shrb (bad) (bad) (bad) cmp and out (bad) (bad) (bad) mov (bad) (bad) (bad) (bad) (bad) test (bad) sub movabs jl jle pop hlt (bad) jge sbb sbb cwtl mov add mov rcl mov (bad) (bad) mov mov pop repz sub mov lahf and mov xor push (bad) stos mov mov and movabs jo rex.RB jp mov insb push or stos retq pushq jno sub (bad) (bad) mov rex.WX mov adc (bad) mov (bad) mov (bad) mov cmpsl pop cmpsl hlt mov push movsl adc fild pop push subl (bad) cltd push xchg (bad) (bad) (bad) (bad) incb push push and (bad) std mov icebp out add add xor outsl lret mov xor mov enterq rex.RB rex.XB xor stc pop ss sarb (bad) (bad) sub jg adc or xorl (bad) sbb xor stc cmc clc add jmpq iret std jmp sbb mov or xor cltd mov std (bad) stc sbb adc xlat (bad) and rex.RB and add jne lret sbb gs ds insb cmp stos mov mov mov sub xchg (bad) nop stos stos (bad) out nop mov sti es and (bad) fdivrl (bad) int ffree (bad) cmc xchg rex.WB rex.WX push movslq cmp sub (bad) jnp (bad) (bad) (bad) std rex.RX add add xchg pop ficoml cmp (bad) lock (bad) adc (bad) scas adc test cmpsb popfq mov cmp cmc sahf (bad) roll roll sbb nop cmpsl out nop cmp test cmp jmpq pop sub jg xor outsl push (bad) xchg in sub clc jmpq ja (bad) lods adc ds pop (bad) insb rex.WRB xchg jmpq mov scas repnz iret popfq out pop rex.XB adc stos jg adc lock movabs xorb (bad) (bad) (bad) inc jle icebp cmc push shr rex.WRXB rex.WR mov and out rex.WRX fs adcl (bad) and rex.W rex.RXB cmp repz lahf rex.B adc cmp in out lea or rex.WXB hlt push jmpq loope jno xor stos adc (bad) (bad) hlt hlt imul or pop addr32 sub adc jbe xor repnz cld xor xchg jg mov (bad) gs shl jno sbb int movsb sbb rex.X rex.WRX retq repz jle scas outsl mov xchg pop stos sbb icebp or xchg jl lods (bad) (bad) (bad) cli (bad) shl or (bad) (bad) std cwtl ja retq cmc lock xor lret sub jge (bad) (bad) (bad) fisttpll insb lods add (bad) push and cs (bad) imul pushfq sub jne in std pop sub out pushq cwtl repnz cmp insl adc cmpsl leaveq in xchg rex.RXB orb mov in fidiv (bad) rorl cmpsb (bad) mull push or mov rex.WXB and xchg rex.RXB adc decl stos jb (bad) xor cmpsl test xchg (bad) in test (bad) jnp (bad) (bad) (bad) std rol mov iret mov iret cmc xor mov jg (bad) push leaveq mov cmpsl test push xchg (bad) out or cmp (bad) mov pop (bad) (bad) (bad) incl retq jg sbbb hlt (bad) push std lods mov rex.B mov std pushq and (bad) sti push add jrcxz icebp data16 mov (bad) test xchg test rex.XB mov pushfw stc mov cmc stc test cmc sub clc clc clc cmc not jmpq jae lea mov not not setb mov mov lea mov jmpq mov cmp xor rex outsb adc pushfq out jge cld and in (bad) xor out in mov loopne outsw or sbb retq cltd cmpsb shrb and (bad) cmc (bad) push lahf rex.WR jns,pt outsb push rex.X cmp test imul mov (bad) (bad) (bad) sarb cmpsl cmpsl test mov push rex.RXB sub xchg xchg stc rex.WXB mov (bad) (bad) (bad) sti data16 shll sbb rex.WX push mov popfq (bad) pop cmp pushq push push add (bad) (bad) dec cmp xor pushq xchg sbb pop mov adcb sti rex.R add sub cmpsl push rex ss movslq rex.WR test gs es push callq mov and enterq movabs mov mov xorb roll (bad) repnz rex.R jmpq (bad) sti mov cmp sahf (bad) out xchg rex.RB (bad) cltd iret and rex.RXB mov sti mov out cmp sahf adc (bad) test int3 jns insl xor (bad) cltd ss rex.RXB mov (bad) cld add (bad) (bad) (bad) inc adc rex.WR and rex.RXB cli mov stc xchg scas (bad) mov sub mov or sbb add add sbb (bad) jo or in lea add je hlt mov or (bad) mov pop (bad) add sahf mov sub xchg fcoms mov es fcom loopne out rol push rex.W idivl mov stc shr mov xchg xadd mov cmp stc neg xor not xchg not not lods sub shl cmp rcl sub (bad) repz inc neg not mov add rol clc sub rcl rol mov mov stos jmpq clc test add test test stc stc movzwl xor rol shrd xor mov stc cmp add cmp jmpq mov cli nop rex.WX cmp xorl and rex.WXB int3 stc bnd adc rex.X leaveq fnstcw xlat or rcll popfq cmp xchg (bad) adc (bad) mov fildll repnz cs rex.WX rex.WX mov gs cld rex.W and test jae mov fs jb js or mov mov jns cs (bad) (bad) decb mov fs movabs rcr (bad) mov in sub push and xchg push cltd cmpsb mov sbb sbb or xchg (bad) (bad) (bad) (bad) xchg stos divb (bad) (bad) mov xor (bad) (bad) negl test imul cmp (bad) push rex.XB rex.R frstor jg mov pop and mov outsb enterq cmpsl mov test mov negl jmpq jne movsbl mov jmpq pop mov (bad) mulb cmp pushq fdivr (bad) (bad) icebp push push push rex push rex.RB xchg rex (bad) adc nop out (bad) notb rclb mov lods nop xchg lods push retq rex.XB mov rex.WRX rex.WRXB punpcklbw (bad) rex movsb mov add leaveq cmpsb clc rex.X rex.WRX mov shrl cmp adc pushfq (bad) and (bad) (bad) sti shrb (bad) (bad) (bad) xchg rex.WR rex.RXB rex.WRXB sbbb out mov adc add add es insb rcl cmp xor mov pushq fidivr (bad) jns lahf adc (bad) jp popfq add mov int3 pop (bad) repz jle mov sbb enterq xchg imul xor (bad) (bad) scas pop pop cmp callq cs flds fisttp enterq cmp ss test out cwtl mov sub movslq xchg and imul icebp movq cmc rex.WRXB int (bad) (bad) (bad) sti lods (bad) xor xchg mov jo mov mov (bad) (bad) (bad) fdivrl lods cmpsl rex.WX sbb cmp fimull in lea adc adc (bad) orl pop hlt out jnp jl retq repz add (bad) cmc add lret adc rex.RB cli sti je jb (bad) and xchg rex.WRXB insl shr or jns (bad) movsb or rex.XB stos xor (bad) insl in jno cltd mov push push cld fildll nop rex.WRB test icebp and jmpq sti (bad) clc jmpq bt sub cmp bt test pushq jmpq pushq jae pushq jmpq mov btc not sub sub movzbw seta movzbw movzbw lea jmpq jmpq jae movsbl xchg mov lea movsbw bswap seto mov lea bswap mov jmpq add roll in or in lret sbb hlt retq lods cmpsb and pushfq int loop stc test adc rolb repnz loop (bad) loopne mov jae sub mov (bad) pop push xchg mov scas (bad) movb jle cmp sub insb xor cmp xchg cmp xlat jae ja (bad) rex.WB pop cmp callq shrl imulb (bad) (bad) (bad) xchg adc movabs (bad) jrcxz std mov fildl adc mov mov add xchg rex.WXB out sub xchg rex.WR or push (bad) movabs xor pushfq cmp mov adc mov sub ss psubsb jge add callq bt cmp or jmpq int mov mov fcmovnbe std fisttpl in rcrl cmp mov xor stos iret cld cld lods or mov mov and test mov rorb mov div in cmc fist mov xor sub rex.B (bad) int adc test xlat cmp rcrb test cs push out cmpsb (bad) cmp fldenv movabs (bad) sti mov (bad) (bad) (bad) (bad) jge lods je (bad) pop hlt (bad) mov sbb (bad) movabs std jl and push mov popfq cltd add lock rex.WXB nop pushq out mov lret popfq mov repnz in lahf add push in pop (bad) ja jo lock pop adc movabs sub mov iret (bad) cmp mov jns jmpq rex.WX rex.WX scas jg mov xor jae (bad) push cmp jrcxz icebp mov add mov mov rolb (bad) mov outsb retq or or test jg mov rex.RB sub rex.RX in sti in rex.RXB sarl sub jmpq or leaveq jrcxz and (bad) (bad) cld and clc or (bad) (bad) (bad) loop movsb xor jrcxz xor out adc cltd add add (bad) mov loopne loopne ds pmaxub cmc fidiv js mov cwtl test je insl (bad) mov mov (bad) jbe (bad) cwtl imul mov stos xchg pop jne mov xchg jmp push xchg adcl adc xchg sar shl sub shrd stc bswap movzbw add neg rcr mov shr add mov test cmc repnz jmpq sahf xor push jrcxz out rex.WX jmpq cmp pop test mov repnz rex.R sbb test rex.RXB jle mov (bad) (bad) (bad) std callq cltd push adc xor mov mov xchg addl clc mov (bad) push cmp (bad) (bad) (bad) cld icebp (bad) xorb lods (bad) mov stos mov sahf (bad) loope mov hlt ficom test sbb xchg (bad) or fstl rex.XB sub push pop leaveq movabs sbb fisub mov (bad) add iret pop ja cmc bt imul clc add jmpq jne dec mov cmp stc stc bt or jmpq rex.WX jo xchg xchg mov (bad) cltd in int nop repz outsb addl rex.X rex.WRB cmp sub fisttpl movsb jp popfq clc (bad) js (bad) cmp pop pop loopne push gs sub jge or cmpsb fdivr mov (bad) (bad) (bad) sti sub (bad) (bad) (bad) std out std add test enterq movabs (bad) rcrb mov or jne jrcxz mov (bad) js (bad) outsb ds nop enterq in xchg push sub shrb xchg push movabs (bad) imul cltd out ja xchg (bad) jmp mov mov rex.WXB sahf (bad) addl adc jle movabs push movabs cmp push rolb adc (bad) lcall in movabs mov jmpq (bad) repnz outsb push mov enterq sub mov xor out pop xchg rex.WB add rex.RXB mov and fnstenv mov rex.B or mov rex.W jge and cli callq sub cmpsb cmp sub and rex.WRX sub rorb leaveq adc (bad) negl cld (bad) cld in (bad) (bad) sti mov (bad) (bad) (bad) (bad) jnp xor adc sbb (bad) (bad) pop sbb jrcxz (bad) (bad) (bad) (bad) sti imull jae stc cmp and loope lret rex.WRB mov or lods iret cmpsl vminps cmp jnp int3 fnsave sbb (bad) or xchg imull ss mov mov xor and and xor mov (bad) cli jo jb cmp insb cmp lret clc and add mov cwtl rex.B repz jne je movabs sarb push add sbb xor insl imul fnstcw loope callq loop jb out (bad) sub loop (bad) and rex.RB mov (bad) nop xor (bad) sti mov cltd in (bad) (bad) (bad) cld rex.WRX mov jrcxz idiv (bad) (bad) decb rex.WRB pop sub sub add add or pop or fcmovb mov ss jg mov push mov rex.XB cwtl mov mov (bad) lret out rex.W mov outsl loop (bad) mov xor stc pop pop movslq push rex.WRX adc (bad) rex.XB push rex.WRXB es mov retq (bad) cmc fisttpll pop pop cmp jbe popfq hlt xchg pop cwtl jno mov (bad) lret fdivl xchg mov imul (bad) callq lock rex.WX test mov (bad) pushq pop fs mov jbe mov loope rex.WRB mov insl in rex.RB (bad) faddl movabs mov xor add js sbb mov movabs rex.RXB pushq fdivrs (bad) pop adc sti xchg and je adc pop lea jnp cmp (bad) (bad) sbb mov xor iret popfq iret test cmp jmpq jae cmp mov neg sbb not add setle mov jmpq jmpq jmpq jmp stos push rex.WRB addl data16 fdivl push mov rex.RB add add mov xchg cli sti lahf mov movabs (bad) fcmovu movsb or in xchg xlat lret fildll and leaveq and mov push adc (bad) (bad) cli loope and std movabs (bad) jmpq (bad) mov or push rex.WRX or mov divb (bad) cmp movsb movabs mov adc jno mov fbstp icebp insb fldt (bad) (bad) (bad) jmpq adc push pop rex scas sbb iret cli callq cmp sub cltd xchg movsb xor movabs mov push or and add (bad) test mov ja or loope cld (bad) jmpq jmpq add in mov sub push pushq (bad) rex.WXB imul (bad) ss push and clc icebp mov sarl rex.WRX in mov (bad) loop mov out std or fdivr (bad) (bad) mov xor sbb add jrcxz (bad) (bad) cld adc (bad) (bad) (bad) sarb mov jl cs xor loopne cmp sarb add rex.WRXB xchg cmpb adc (bad) add add add in mov insb jne rcr (bad) rclb movabs rcrb rcrl in std sahf mov sbb (bad) push jg movabs fldt mov cmp xor jbe movsl mov xor rex.WRX je sets movzbw lea lea movzwl movzbw mov not lea movzbw lea mov jmpq leaveq mov ror or in nop nop push test (bad) (bad) push (bad) roll je pop (bad) jp pop pop nop cmp jg (bad) movabs jrcxz int3 movsb negl (bad) or adc xor xor xor xchg cmpl push pushq mov jg pop retq je mov or data16 pop fsubrs cmpsb add pushq pushq (bad) cli out sub and movabs (bad) (bad) (bad) (bad) sti movslq lods pop rex.WR (bad) (bad) (bad) (bad) std out lods jmpq xchg cltd rex.X mulb sub pop mov mov cmp sbb or nop repz stos (bad) jbe sbb sub rex.RB rex.WB stos mov jmp add rex.RXB mov jo xchg cmpsb pushfq sbb movsb mov push or (bad) (bad) xor xor (bad) jae (bad) (bad) rol push pop mov sbb (bad) cwtl jl pushq stc movsb xchg cmp (bad) cmp out add (bad) cmp testl add rex.R mov retq xor fistpll pop mov sahf xor mull xchg mov mov jl jl movabs out and xor retq int3 gs add rorl sbb shlb mov mov (bad) iret loopne jp mov mov (bad) add add (bad) rex cwtl add cmc stos shll pop add jrcxz decl rex.XB xchg cmp icebp (bad) xlat retq rex.RB mov and fiadd test (bad) lret sarb or int3 sar lahf iret adc rex.WXB in sbbl hlt (bad) rex.R xor sub lea pushfq stos add or mov callq (bad) mov rex.B in push xor sub es (bad) jns mov ss push repz pop jmpq jmpq callq jmpq callq cmp cmc cmp or jmpq sahf (bad) jle push mov push or cmp rex.RB movabs xchg pushq adc cmp xor push and movsl movb jge pop popfq add add rex.X retq popfq mov rol xchg outsl xor movsl (bad) rex.X cmp xchg (bad) mov lahf adc cmpsb cmp rex.B lock movabs in mov lret (bad) decb (bad) (bad) (bad) (bad) in xchg (bad) repnz (bad) lods sahf subl mov (bad) push andl add xchg sub mov callq push insb adc pop adc pop jrcxz cmc push loope and jmpq negb cld or jns fdivs adc data16 pop xor and (bad) add or iret int imul (bad) mov (bad) loopne cmpsl int movabs add push (bad) scas cmp xchg cmp mov outsl push mov insb rex stos sar jns (bad) (bad) xor (bad) mov stos rolb sub (bad) cmp cltd ficomp pop imul (bad) jns idivl jb xchg xchg jle outsl lret jmp mov icebp movslq pop cwtl scas sbb cmp adcl sub (bad) (bad) decb (bad) (bad) (bad) (bad) in mov xor insl push ss (bad) imul (bad) pop testb cld or xchg (bad) movabs add es frndint test and mov xor sbb pop jne mov es mov cmp movabs stos (bad) xor out fildl ja sub or pop and (bad) sti (bad) cld or int stc push xchg xlat adc xor (bad) push movsl pop pop jl mov cmp rolb sbb jg push (bad) (bad) mov sar (bad) (bad) decb or (bad) (bad) rex.RXB add es mov adc jno movabs (bad) cmp roll (bad) mov fyl2x (bad) js iret out iret or jno ja idivb sub fidivr sbb lahf xor (bad) decl test (bad) movsl (bad) jmpq add (bad) decl xchg bt imul test cmc test add jmpq jl push and mov xor test sub in hlt (bad) lret fistl adcl enterq mov not adc (bad) (bad) jl bnd fistpl jg (bad) mov mov xlat push std pop fcomps stc jmpq push (bad) mov in mov gs pop incb (bad) xor fninit cmpsb adcq mov (bad) movabs fwait out cmp rex push jp outsb ljmp sub lea iret (bad) cmpsb add fildl gs push rex.W sbb stos (bad) jmpq out movabs stc adc pushq mov add jae sahf clc fisttpl or fnsetpm(287 rex.WRX out pop lods pop clc fs (bad) incb push jle std xchg (bad) (bad) sub xchg cltd rex.B push jbe xchg (bad) movabs (bad) rex.WRB xchg pand ss xor stos sub out and cwtl mov lock in movb mov jg gs lret nop fisttpl (bad) add test fcmovnb cmpsl clc stos lret xor pop adc mov rcr xor mov lea rex.XB xchg hlt jl fstpt mov ja sub xor (bad) mov pop rex.WR cmp (bad) loop lret rex.WXB pop (bad) fldt adc movabs add add scas fcmovnb mov imul push movabs cwtl lock cmc (bad) fisttpl and subl inc (bad) cltd clc movslq xchg fistl (bad) lea (bad) sbb and fsubr (bad) xor pop sub jg or scas mov rolb mov and popfq rolb or xor push cmpsl pop addr32 sbb mov sub adc scas jae jrcxz out or rex.RB es xchg jns rex.WRXB sub xchg rex.WRB xchg cmp push pushq adc enterq rex.RB add in push mov fistl loop push push (bad) cmp sbb sbb adc neg popfq rex.WXB (bad) pop retq mov scas imul (bad) or movslq (bad) adc sub cmp mov rcrl in clc sub sub rex.X xlat rcll and pop fcmovnu xor push fistpl (bad) mov fldt cmpsl pop ds mov (bad) stos mov (bad) adc mov ds and (bad) jge push loope imul fldt (bad) adc xchg mov fistpl lock ja sbb (bad) movslq sub movsb rex.X fwait in sbb pop add callq fcmovnb or sub sbb push in fildl mov jmpq mov rex.W (bad) fildl movabs (bad) add nop pop movl cld xchg callq mov lods stos imul sti pop sub sbb rex.W mov push or pop fwait outsl mov out test pop loope imulb pop pand sub cmp mov fisubl mov shlb mov lods or movabs mov and scas je jne sti mov push fadd movabs lahf test fisubl xchg jbe mov (bad) mov adc mov jle sar loop fucomi sbb hlt pop push fisttpl xchg (bad) mov pushfq (bad) rcr jle (bad) xor or stos jne repnz cltd fstpt (bad) jno mov push fild xchg fstpt lahf push (bad) fisttpl movabs (bad) ja,pn fstpt data16 add jnp mov xchg stos pop callq movabs push iret push stos movabs mov pushq pop mov mov movabs mov fisttpl movsl xchg js rex.RX (bad) (bad) xor fidivl fstpl push adcl rorb rex.X pop icebp retq (bad) jg and imul in mov and fimull movslq pop rex.WX (bad) rex.WRX repz mov rex.B pop fcoml (bad) pop rex fcmovnbe sbb sbb movabs (bad) ss and lods mov sub xor rsqrtps jrcxz jge insl and addr32 loope mov push xor int3 (bad) fisttpl add fildl mov adc pop and cmp (bad) loop xor cmp mov fistl cmpsl stos (bad) rex.WRB mov fist pop je sbb push gs (bad) or (bad) ja imul rex.RXB leaveq or (bad) (bad) (bad) fildl or cmp cmp rex.WXB je xchg (bad) mov rex.WRB (bad) std fisttpl int xchg outsb adc test movslq fisttpl sbb in (bad) (bad) pop cmp popfq xor pop fcmovnb lods minps jle stos fistpl mov xchg (bad) xchg stos (bad) adc movslq rex.WR repz fwait int3 (bad) movabs jnp (bad) (bad) stos fstpt (bad) fdivl jmp mov xor or test clc mov fiaddl test mov fucomi decl adc repz out mov jg add adc rcl mov rex.B mov jge fcmovnu (bad) es int3 mov iret js stc (bad) push out rex.WR cmp mov (bad) mov ficoml and iret fisttpl (bad) jmp jo mov rex int callq (bad) (bad) cmpsl out retq (bad) sbb adc cwtl rex.WRB rex.RX jnp rex.WRB int3 repz int retq cli es rorb fcmovnu rolq movabs stos (bad) fcmovnbe rex.WXB (bad) pop (bad) xor (bad) xchg rex.X jnp rex.WRXB ficompl pop push (bad) (bad) rex.WRB mov test fldt ja cmp xor rex.WRXB xchg (bad) rcr (bad) sub imul mov pinsrw rex.WRX and or rex.RB leaveq mov fldt lea rex.WRB cmp rex.RX adc (bad) fldt jle test rex.WR push (bad) cwtl out jle,pt mov stos movabs out jae fcmovnb rex.WRXB rex.RXB (bad) mov fistpl xor pop xchg int (bad) outsb es and (bad) xchg decb addr32 cwtl outsl xor and jmpq (bad) jbe sub (bad) pop int adc stos and in rex.B fwait (bad) or std push cmc cmpsl fsubl fistl or loope jrcxz (bad) (bad) scas fldcw or (bad) (bad) pushq cmp (bad) fildl or pop sbb rex.WRXB push sbb out pop pop (bad) in mov in rex.RXB addr32 rex.WRB (bad) and stos iret (bad) mov mov scas and (bad) xor fsubrs rex.WB iret fimull nop mov rcrl jnp in mov mov rex.WXB (bad) (bad) (bad) rex.WRX sub mov clc mov or rcl (bad) cli pushq rex.WX mov sbb iret imull (bad) adc add rex.X clc mov sbb roll (bad) mov (bad) (bad) rex.WRX push and movabs fwait retq stos xchg mov addr32 rex.X cmp mov cld js cli add lahf negl (bad) (bad) pop enterq adc jmpq fisttpl sub scas fstpt mov callq lcall xor jo fsubs mov stc in jg scas (bad) jne push roll adcl mov sbb hlt movabs cmp divb xor insl add addr32 out push mov or pop test mov fisub (bad) add (bad) rorb lret pop loopne and cltd movsb xchg mov lods mov mov movslq in fistl sbb push push sahf lock push and and out leaveq fstps movabs insb adc mov ja scas imul xlat xlat psrlq mov cmpl insl push mov outsl imul andl test mov popfq mov retq loop adc mov sbb and jae (bad) xchg fildl adc push xchg (bad) (bad) xlat rex.RXB sub and imul test (bad) xor lret sub lahf sub movabs mov sbbl jae xlat (bad) cwtl xchg movabs loope xchg push fdivrs and roll mov push mov int3 lret mov pop rex (bad) xor xchg cmp fbld rex.RB xor movabs rex cmc pop or xchg movzwl sti and (bad) (bad) (bad) xor xchg (bad) fisubrl iret cmp (bad) jae pop xor pop mov out push jae adc iret je (bad) and movabs xor push movabs push fnstcw retq mov shll adc rcl mov rex.WXB outsl cmpsl rex.RXB (bad) stos and lret movsb rolb (bad) cmpl xchg (bad) xchg mov cmpsl fwait mov lahf retq mov or lea test mov mov jle enterq xor (bad) mov fwait mov (bad) movslq adc xchg mov stos retq mov mov and xor cmp ficompl (bad) jb enterq cmp rex.X and and xor pop xor movabs cmp sub and (bad) movsb mov movabs addr32 stos add mov jae movsl cmp mov mov sbb mov mov mov retq and test je (bad) (bad) iret cmpsl adc and icebp retq mov push (bad) mov (bad) (bad) xor xor xlat and mov leaveq cmp cmpsb fisubrl and fldenv rex.WRXB fstpt and cmp jg mov mov and jge sbb pop (bad) push test mov sub (bad) xor xor mov stc enterq xor mov mov mov shr loopne mov mov lret imul cmp (bad) cmp fwait cltd gs xlat jns ja iret rex.RXB xchg cmp adc (bad) mov ja pop stos cmp gs stos xchg fcmovu fstps pop xlat push (bad) fistl push (bad) push rcll fistl push rclb rex.WRXB fisttpl rex.WRB rex.WR rex.WXB leaveq rex.WB (bad) fildl rex.RB rex.R rex.XB roll mov mov cmp mov (bad) mov mov mov mov xor (bad) scas fldt lods sub stos fldt test (bad) cmpsb pop movsl and rex.XB rex.XB pushfq movabs ds mov outsl shlb movabs xchg leaveq mov lea jle movabs (bad) (bad) or ja popfq xor (bad) leaveq mov retq roll rolb xchg scas movabs jb (bad) sub xchg loope mov test and (bad) add shrl cltd add lret pushq (bad) rex.WRB sub pop movabs sub jbe sahf (bad) rcrb es js (bad) sub xor movabs ja xchg fldenv (bad) (bad) pushq jrcxz rcll orl outsl retq (bad) cmpsb xchg (bad) leaveq subl test (bad) imul (bad) jo mov rex.RB or and sub sub movb mov imul mov (bad) pushfq cmp mov mov sub add movabs pushq fs xchg (bad) add jns in stos jno jg adc mov jbe (bad) data16 cmc in xchg bswap in (bad) mov xchg mov xchg jp test pushfq mov pushq enterq (bad) xor push xchg (bad) mov rex jae and movabs movabs movabs in lea sarl (bad) mov leaveq lahf jle rex.R lods xchg pop (bad) (bad) movslq adc imul pushq (bad) addr32 push mov stos jns and (bad) (bad) movabs rex.WX rex rex.WRXB movabs fisttpll enterq cmpsb movabs rex.WXB movsl mov movabs and fnstenv cmp and movsl fnstcw scas jl rex.WX xchg and stos rex.WXB adc (bad) mov (bad) cmpsl lods mov xor cmp leaveq xchg fcmovbe jns (bad) std stos xchg add cmp rex.WX xchg jae ja hlt adc movabs movabs or xchg cmp add movabs push outsl adcl xchg cmp addl lahf imul mov pop adc movabs test movabs rex.WRX rex.RX rex.RB mov mov mov mov adc addr32 jg (bad) test fidivrl sub (bad) and movabs in mov test cmp rex.WXB mov mov mov fildl mov shrb (bad) test jnp hlt jnp rex.WRB rex.WXB cmp (bad) xchg mov fist rex.WR rex.WX imul xchg add pop rex lret (bad) push fcomps test cmp rcrl sbb mov fnsave (bad) mov mov movabs movabs and int lahf movabs fcoml fisubl rcr (bad) loop (bad) sarl lret fisubrl pushq nop fidivrl lret pminub pop or rex.WXB popfq adc and fimull ficoml (bad) xchg ficompl (bad) (bad) popfq sbb retq xchg fcmovu sbb pop popfq rex.R sbb (bad) sbb (bad) fistl adc adc xchg adc pand or or mov mov mov xchg fildl add add (bad) add (bad) fstpt jge jl jnp fstpt jns js ja (bad) jne je jae (bad) jno jo outsl out fldt insl in insb in imul pushq imul (bad) gs in jrcxz (bad) (bad) loope loopne (bad) pop ficomp pop fsubl xor (bad) mov icebp scas movabs lret cmp and adc xor cmpsb in sub jle (bad) loop shlb sbb and gs (bad) sub mov jbe rex.WX lret mov xchg cmp iret imul (bad) lret xlat mov movabs (bad) lret xchg mov cmpsl movabs mov cmp movaps (bad) movabs push movsb jl (bad) and (bad) mulb sti xor xchg rex.WR outsb sub jp (bad) sbb sub (bad) and (bad) and (bad) mov outsb addr32 sub lret in cmpsl out (bad) (bad) retq push or or rex.WRB rex.WB movsb leaveq out retq cmpsb sub and xchg push lret xchg int3 (bad) cmp (bad) cli xor (bad) sub rex.RXB adc jns test pop stos mov (bad) (bad) (bad) sbb stos mov push (bad) pop iret cmp mov stos fs adc scas mov push movabs adc (bad) jp jmp rex.WX ds pop xor rex.RXB mov and sbb (bad) push (bad) mov sub movsl pop mov xchg fwait imul (bad) jae cmpsb lret (bad) or stos pop addr32 and adc push scas pop repz xchg test pushq cmp enterq (bad) mov rex.WRXB rex.R rex.RB rex.RX lea fadd push mov vrcpss mov cmp adc (bad) rex.RB xchg (bad) loopne push push (bad) xor xchg xchg push test xchg (bad) mov adc jg jne adc pop cmpsl ror sub and jp shll jmp shll push mov callq sbb lret adc and (bad) cmpsl xchg scas shll rex.RXB rex.WRX rex.WXB rex.RB (bad) and scas iret xchg divb xchg mov cmp ja imul xlat mov xor int3 pop jbe xchg int jns movabs imul jae ja jns jnp jge lea pop cwtl xor rex.RXB imul (bad) xchg ja imul int xchg cmp ja imul mov mov imul imul rex.WX adc ja jae adcl ja imul clc xchg cmp ja xchg sub scas ja fs jns js jg xchg int xchg cmp rex.WX xchg xor rex.WX mov sub and imul lret and add mov and rex.WRB mov cwtl (bad) mov mov shrb adc lret (bad) lret int3 rex.WR and adc ss and rex.R adc in cmp stc xchg lret lret shlb jo (bad) xor xchg cmpsl xor rcrb (bad) cwtl retq jbe movsl int sub movabs fisttpll sahf lods int xor hlt sbb and (bad) lret and (bad) mov bswap sub jb pushq repz mov cmpsl movabs jns rex.WRXB (bad) iret and (bad) (bad) repz lret scas ds rex.RXB in (bad) sub rex.WX push pop or xor sub rex.WX sub mov in (bad) lahf xor and mov test stos adc pop jp ja sub (bad) cmp scas iret push sub sarl loop cmpsb jmp pop gs movsl or mov loopne sub iret rex.X movabs sub rorl stos mov movabs leaveq rex.RXB movabs imull retq jle jno retq rex.WRXB lock iret adc iret rex.WXB rex.RB or movabs shll shll movabs rex.WRXB movabs imul repz mov shll xchg sbb test std movabs mov sub (bad) imul (bad) mov (bad) xor jl stos or repz rcl xchg lret (bad) jg cmp pop jb adc movabs iret je out rex.XB mov cmp push fs test add iret ja rex outsl rex.RXB (bad) jmp pop (bad) mov push iret rex.WXB pop retq (bad) mov xchg jnp cmp cmp ja (bad) cmp xlat xchg pop mov mov xchg cmp (bad) rex.XB push rex.WXB adc cmp retq rex.RX sub xchg mov lahf addr32 xor mov pushq callq mov retq add adc (bad) jae xchg xlat scas retq fwait pop jb sarl mov addr32 xchg jnp adc addl xchg cmp scas rex.X shll imul or jae mov (bad) movabs mov xchg mov mov fcmovnbe ja in xchg mov xchg jg mov mov mov (bad) test scas jae test mov or sarl callq xor xlat sbb jae addr32 jns retq cmp ja scas jle (bad) (bad) mov (bad) sarb xor stc scas movabs retq (bad) scas rex.WRXB push rex.WXB xlat (bad) xor pop hlt sbb (bad) ja (bad) mov jae repz jae jns mov stos jge hlt xchg jg out orl addl jae hlt shll rcl scas cmp retq out in rcrl xchg xor mov imul movsl (bad) mov fwait adc mov cmp leaveq lret lret (bad) ss rcll rex.WX and push imul mov xor stos jae or scas rorl xchg int lods (bad) cli pop rol fsincos xlat rex.RB repz std (bad) (bad) movslq xor cmp lret mov stos cmp xor add test test (bad) rex.XB pushq sti mov mov xor push cmp mov and and movabs or lahf leaveq mov push pushq jo mov mov test xlat mov test iret test lahf and mov (bad) iret outsl lret add jp add movabs jp movsl adc addr32 out pushq cmpl xor mov jge push and mov xchg sbb and rex.XB mov lret mov icebp loope mov fcompl movabs imul vcmpsd or sub xchg xor and stos ja adc mov jae cmp rcll (bad) (bad) mov iret (bad) (bad) rolb cmp (bad) adc (bad) mov mov push add cmp mov rorb scas mov rcl bswap rex.WB mov rex.WB movsl mov mov adc mov jae lret lahf sub mov (bad) sub stos shlb decl mov sbb lret int push pop rex.RXB int sbb xchg mov mov xor fcoms pop (bad) jbe add lock sbb cmpsl (bad) pop ficompl pop fldenv (bad) repnz retq (bad) xchg jbe and mov rorb cmp push xor fistpl and retq or xlat rex.WX rex.X movabs out adc js or fbstp cld lods xchg jg xchg add lods (bad) or iret pushq xchg jrcxz fcmovnu sarb xor shll push lret sarl push rex.WX rex.X push pop repz mov cwtl (bad) sbb jrcxz cs addl movabs mov jle xor and insl jo jge add mov rex.RX pushq (bad) xchg (bad) jne add ds and testb cmp retq mov (bad) movabs (bad) in (bad) leaveq (bad) movabs retq jp jb mov sbb sbb jge movabs mov (bad) divl lods sub rex.WXB mov (bad) adc movabs stos std (bad) xchg (bad) cld add jmp and enterq orl (bad) mov push lret and js and xchg sub insl (bad) cld out push (bad) test mov fldl add movabs jbe mov (bad) adc movabs push out adc push and test movsl movsl test shlb xor popfq push xchg leaveq scas xor mulb mov scas sub popfq sub (bad) sahf cmp jno push pop (bad) (bad) rex.B rex.RB addr32 or add rex.WRXB or cmpsl leaveq or (bad) shrb pushfq insl out movabs cmpsl movabs rex.RB rex.WB leaveq sub jbe xchg xor lret icebp (bad) movabs pop std xlat xor insl loopne (bad) jrcxz lret mov pop cmp lret neg cmp jo or sub rex outsb xchg rex.WXB sub fwait xchg (bad) mov sbb and (bad) xchg jnp mov xlat cmpsl lahf pop movabs jge (bad) divb mov and cmp xchg cmpsb fadd stos stc xor imul loop cmpsb syscall pop (bad) mov enterq out js je subl push test int cmp movabs (bad) xor adc std adc pop mov rol je and xor and mov rex.RB iret xchg (bad) rex.WX movsb fnstenv movabs std cmp rex (bad) jb sub xchg sbb add ja jbe push xor iret scas (bad) mov mov (bad) (bad) pushq sub (bad) rex.WX (bad) (bad) mov insb pushq xchg push sbb scas xor (bad) sarb push cmp cmp test xchg cmp mov rex.B cltd mov (bad) imul add lret jl mov adc enterq rorb (bad) lods rex.WRB rex.RXB jae xchg repnz rex.XB cmp popfq xor rex.WX rex.RX lahf mov rex.XB mov xchg rex.RXB retq rex.R (bad) rex.RXB movabs outsb xchg sub mov test (bad) leaveq sub sarl mov jno pushfq jle je fistpll rcr (bad) loope rex.RB and shrb movsb xor sarb in test mov rex.X fs js movsb pop cmp movsb addl xor (bad) mov (bad) adc rex.WRXB jae jo (bad) (bad) xchg (bad) rex.WRXB add lods movabs std shlb (bad) xchg (bad) lods sbb (bad) xor jle (bad) movabs xlat movsl shlb sbbl jl xchg pop fild fcmovb and cmove xor xchg pushfq movabs rex nop rcll rex.WRX ss sub loopne sahf fnstsw sahf adc (bad) clc sarb (bad) mov and xor (bad) imul sbb sub stos xchg add sub outsl movsb jbe cmp cmpsb sub lret movabs (bad) (bad) (bad) xor (bad) rorl xchg xchg xchg popfq jno adc push sub lret movabs js out fnstenv pop scas rex.XB mov enterq cli es mov sub rcrl (bad) jg (bad) rex.RX ss adc jns jp es ss push adc xor cmp pushfq rex.WR rex.WB (bad) jno int3 jno xchg sti lahf out (bad) (bad) in iret icebp xor (bad) lock and or rex.W rex.R jg jb js (bad) out callq fnsave rex.W shll push in movsl add adc test fsubrl xchg pop cmp rex.R push sub sub or xchg cmc and cld (bad) jne loop pop rorb movsl rex.XB clc sbb xchg xchg scas jae addl xor rex.RX adc (bad) adc jo rex movsl cmpsl sahf add push movabs jns mov mov out idivl xor rcll xor ja xchg pop mov (bad) stos rex.WX cmp (bad) mov rex.WXB rex.RXB mov mov or lahf (bad) retq rex.WR cmp adc iret mov retq test adc in lea in test and test mov mov xor cmp (bad) mov retq rex.XB cvtps2pd mov (bad) lret xchg imul jbe (bad) mov (bad) and jns jb testl pop mov outsb sub lods jns add sub xchg (bad) mov (bad) and rex.W adc and (bad) adc jno mov sbb jl int lret jrcxz sub mov ja mov pushq sarl jo (bad) (bad) cmp mov cmc sbbl mov stos xchg orps test xchg jbe jg sti repz outsl fdivr sub push adc mov sub xchg movabs enterq and (bad) sub xchg pop (bad) xchg pop mov rex.WRXB rex.WXB rex.WB xchg (bad) (bad) (bad) mov imull rolb rex.RXB sti add (bad) iret (bad) jg or sbb (bad) loopne xor movabs xor movabs lret rex.WR and es rex.WRX mov cmp rex.WX rex.W outsl (bad) nop leaveq movabs (bad) movabs lret icebp pushq (bad) lahf add pushq (bad) and mov mov mov (bad) jns movabs rex.WX xchg pop jrcxz jnp xchg (bad) movabs xchg xchg movabs in ja subl outsl imul fs cmp xchg adc and iret outsl xchg cmp ja fs jns gs jg xchg int xchg cmp rex.WX movabs jae data16 lahf ja imul xchg xchg cmp ja pushq addr32 movabs push ja (bad) stos (bad) mov mov outsl pushq movabs jae xchg imul rex.WX (bad) ja imul addr32 push mov imul outsl xchg cmp (bad) adc jmp orl stos int xchg rex.WX imul pop (bad) rex.WB or mov mov push mov movsl and xor cmp ffreep xchg push adc pushq xchg mov (bad) stos fwait push pop (bad) stc pop fist rex.WXB mov rorb rcr xchg xchg fcoms pop pushq int mov cld rex.XB retq ss loop push ror push mov (bad) (bad) jge leaveq ds adc enterq (bad) (bad) rolb int cmp push rex xor or mov retq xchg int (bad) pop and cmp pushfq movsl iret mov mov roll in jnp rclb mov iret int scas rorl (bad) jle cli sarl mov mov rex.WRX rex.WRX xchg movabs push mov shr mov (bad) (bad) in mov mov rex.XB (bad) xor movslq stos jae stc stos lret ds or leaveq out dec clc (bad) sahf mov (bad) movabs pop fistpl cmp jno (bad) fistl cli mov int ja xchg mov or pop sbb (bad) mov and and rex.RX push xlat mov mov and push (bad) mov fnstsw or leaveq sub lret sub test addr32 jge jmpq movsl mov and mov movabs movabs xchg jae mov lret data16 mov movabs (bad) mov (bad) rex.W rolb xlat psubsw sub fucomi movabs xchg mulb movabs mov (bad) int add jbe fistpll out xchg (bad) cld jo mov cltd cmpsl movabs loope pop (bad) movabs jmp (bad) (bad) sbb (bad) rex.R xor (bad) xchg xchg rex rex.R popfq xchg and fbld in sub adc leaveq (bad) scas mov (bad) sbb jnp and add pushq jno adc (bad) jbe fwait mov or mov pushfq adc pop mov retq jrcxz add rex.WX (bad) stos mov lahf (bad) xchg sbb lahf (bad) pop (bad) adc (bad) push fwait sub lret lahf cltd jrcxz cld rcl pop test mov insb mov (bad) lods iret popfq pop movabs (bad) xor rex.WB rex.XB xchg idivl pop nop gs imul add pop sub cmp and sub iret push rex.XB rex.WX mov or (bad) int rex.WX hlt shrb jns pop jb callq rex.RB (bad) mov (bad) rex rex.WXB (bad) mov mov xchg xlat jmpq sbb push push and in xor rex.RB iret scas xchg xlat pop gs movabs in movabs xor xor sbb (bad) gs in mov rex.WR mov enterq pushq jbe leaveq rolb lahf xchg (bad) rex.RB cmpsl sub repnz xor and jmpq mov mov push stos mov xor and jnp jo cmpsl lock mov or (bad) xor rcrl data16 (bad) lret xchg retq jno rex.WXB or mov and scas xchg sub outsl jbe mov xor or add rcr mov int3 xor cmpsb xlat or jg fcmovbe xor mov js pop scas or jmp mov retq gs mov lret movabs mov xor pop cmp mov pop xor sbb ficompl mov jrcxz rex.WX add or rex.RB es mov jae data16 rex.WXB mov xor fldcw fs jle mov lea add jmp outsb js subl mov cmpsl in rol lahf lret cmp and (bad) adc xchg (bad) rex.WB and movabs mov in imul lahf cmpsl adc insb and fimull mov mov scas mov addr32 xor mov ja mov outsl roll out sarl rex.WRXB popfq movq adc jae std xchg fisubrl fadds mov fadds sub imul (bad) out (bad) mov mov adc cmp or roll fdivrs cmc rex.WRXB (bad) (bad) addl jnp mov cmp (bad) sub rex.WB enterq jnp pushq (bad) xchg mov (bad) sub xlat rex.RXB data16 and xor (bad) iret xchg cmp rol sub decb adc popfq adc mov xor rex.WRB rex.RXB xchg jno jae cmp xchg mov outsl add or incb leaveq lret and xchg pop or or or or movabs adc lods movabs pop xchg rex.RXB nop movslq scas xor (bad) cmp (bad) (bad) mov cmpsl sub mov sub xor icebp rclb mov (bad) and pushfq push or mov movslq sub test (bad) jg push and cmpl xor ja cmpsl or or gs mov xorl scas clc jrcxz rex loopne test xor mov imul rex.R rex.WRX mov movabs or fiaddl jno retq sbbb sbb mov mov scas xor cs sub sub test sub adcl and add mov jb add rex.WRXB movslq mov xor xor (bad) mov movabs xchg insb or movabs add hlt xor (bad) adc outsb cmp and sub ffree rex.WXB rex.X xor xchg cmp sub fldenv loop xor mov or mov fidivl punpckldq xchg leaveq std xor mov addl loop insl rex.WRXB out ficom push movabs fwait (bad) xchg mov lods add sahf sub addr32 or movabs mov (bad) iret mov xchg (bad) xor test shlb sub xor (bad) jrcxz rolb (bad) mov xchg mov (bad) jo fwait cs push mov mov xor jrcxz pushq callq rex.WB (bad) sbb pop xchg add (bad) sarl stc adc fildll jne stc movslq jle jae jae jnp,pn xchg callq rex.RXB xchg rcrl cmp xor rex.RXB xlat adc lret or rex.WX fwait cltd movslq sub shrl jnp xchg push retq or cmp orl rex.X xchg (bad) rclb add movabs iret imul retq imul xchg fmulp xlat scas add pop add pop add movsl movslq (bad) xlat rex.WX jnp imul imul mov lret repnz jb lret mov cmp sbb xor retq pop mov or cld in mov mov mov rcl cmp (bad) push cmp xor cmp (bad) (bad) mov push rex.B ss sbb outsb rex.WX rcrl (bad) or jb clc and push rex.WR rex.WR rex.RXB rorl mov rex rex.WRXB leaveq xor mov (bad) mov jp cltd scas rex.WRXB mov vmovdqu xchg xchg mov outsb fiaddl cmp and lea xor mov (bad) fxch (bad) rorl rcll iret push xlat (bad) adc rex.WRXB iret push (bad) je mov retq int3 iret mov (bad) or (bad) or mov iret jrcxz rex.X mov mov (bad) test sbb (bad) xchg (bad) xchg rcll shll cmp (bad) movabs push cs clc mov sbbl mov add rex.RXB sahf cmpsl lods mov xor mov movsb rol mov lods rex.X rex.WRXB jle mov cmc (bad) (bad) jnp rex.WXB rex.WXB rcrl fimull (bad) repnz xchg add jmpq cmpsl mov xchg roll (bad) mov and lahf (bad) mov ffreep cwtl xchg movabs mov xchg (bad) rex.RXB mov cmpsl (bad) mov repz mov rclb mov jno (bad) (bad) int loopne (bad) mov xlat movsb cmp xchg movabs pop or rex.RXB (bad) leaveq xor test (bad) int movabs mov pop (bad) enterq int movabs movabs mov fs mov jle (bad) mov in pop mov and rex.WRX jmpq (bad) xlat add mov (bad) jae leaveq jae movabs cltd int (bad) int xor in (bad) cltd mov jmp stos andl iret lea xchg (bad) lret mov xchg rcll je xlat add (bad) jae shrl fnstcw rex.XB shll lods mov iret popfq (bad) cmp mov fwait lods popfq mov dec cmp popfq cmp out cmpsl jp cltd jmpq sub xor rex.RB xor movabs push mov leaveq (bad) xlat rex.RX jae mov push mov movabs ja mov cmpsl xchg movabs cwtl mov adcl or rcrl mov sbb roll pop int3 leaveq retq mov (bad) out test pop jle pushq xlat jo jae push (bad) (bad) (bad) mov (bad) mov (bad) mov push movsb mov lahf (bad) mov vpaddsw pop scas push push or jae and cmovnp mov cmp cmp movabs stc or test and rex.WXB cmc iret add ja cmp adc loop fbld mov movsb xor and out cmp (bad) jb push popfq (bad) imul mov push (bad) xor lods std mov jrcxz fucomip rex.WXB fnop push movsb pop and push cmp movabs (bad) jb push popfq (bad) imul lret or (bad) push (bad) (bad) pushq push xor jle cmp push rex.RXB js (bad) push and rex.WXB gs rex.WX in sbb fist jl mov sub rorl (bad) (bad) pminub rcl cmp lahf (bad) imul sbb (bad) adc fist jl (bad) adc fist adc mov (bad) mov hlt shrb push mov adc cmp push ja cs rex.RX mov rex mov (bad) push lahf cmp imul cmp cmc (bad) (bad) add flds popfq in push lret sbb jrcxz push mov jrcxz jl push adc jle cmp movabs jb (bad) push mov jrcxz jl push adc enterq mov (bad) in lret fstps scas lret xor movabs rex.XB and popfq xor push rex and adc rex.X pushfq jge cmpsl fwait jl jle out and repz add or jbe jl pop rex.R (bad) (bad) sub fcoml cld cmp popfq (bad) imul cmp pushq add clc ss clc xlat (bad) pop push mov (bad) scas push add adc in push loopne adc insb push rex adc in push (bad) (bad) mov xchg mov fnstcw pop (bad) or xchg push fwait ja cmp add ficom jl (bad) adc fist jl (bad) add jge (bad) iret mull adc rex.WRXB adc insb push rorb cmpb rex.W cmp jl cmp adc fist movabs movsl and (bad) push rex.WRX rex.WRXB (bad) rex.X jrcxz rex.WRXB mov jrcxz and adc fist jl (bad) rex.RXB sbb (bad) xchg (bad) rex.WXB fdivrl (bad) (bad) movsb rex.RXB rex.WXB mov mov adc in add rex.RXB cmp adc cmp rex.WX push mov xchg jl pop cli movabs jns lret rex.X popfq jmp lret cmp adc (bad) enterq push xchg jl cmp and loop sbb jo push movabs and fmull xchg rex.WB es jb pushq xor rex.WXB xor lods jne jae lods movsb sub gs lret cmpsl pop test loope mov mov adc mov out repz cmp lret mov add test rolb cmp xor pop (bad) xor fisubr int3 scas hlt sbb and sbb out xchg (bad) lret cmp mov test xor (bad) ficoml movabs pop movabs mov (bad) (bad) pop (bad) fistp add in sub rex.RXB rex.WB jrcxz mov push fisttp test mov sbb cs cld or sub xchg sbb (bad) jle rex.RXB cs xor rex.RB rex.XB (bad) pop add jl cmpb out cmp cwtl loope cmp lret or es mov gs (bad) mov cmp rex.XB insl or js (bad) rex.WXB fs shrl or jno (bad) sahf pushfq sub movabs rex.RB xchg rcrl push and cmp imul stos xor mov xor imul push jb xchg xlat repnz ss mov and or push rex.WX faddl xchg adc (bad) (bad) push test mov imul leaveq adc jno or rex.WRX int3 fwait sahf shll outsl mov rorl cmp fiadd mov jnp lret pushfq rcll xchg imul insl mov pop pop out cmc imul cmp mov rcl retq add and rex.XB add callq lods add (bad) xchg rex.WRB cmp mov rex.RXB rex.WRX adc mov out xchg push sub or scas add rex.WXB jmpq mov pop callq int adc (bad) xchg cld jne loopne mov rex.WRXB gs enterq scas mov mov rex.WR rex.X xchg retq jb ss sub add mov rorl jle (bad) mov movabs rex.RX rex.WRXB rex.WRX (bad) out stos fisubl sub (bad) int3 es (bad) adc movslq retq fnstcw (bad) out outsb sbb mov xor cmp lock cmp std push iret cmp jo imul sub callq mov xor mov and jae mov mov jae ja pop test lods cmp mov pop sar (bad) mov loop leaveq (bad) (bad) sbb and push rex.XB (bad) (bad) sbb fwait and push jge rex.XB cs add stos jge rex.X cmc (bad) (bad) sahf rol and movsb stos cltd ja mov or es movabs xchg (bad) (bad) push mov mov mov movsb (bad) int3 rex.WX xchg jmp or xchg retq mov (bad) adcl loop retq xlat and (bad) movabs cltd or mov cmp xor (bad) mov loopne rex.WXB addr32 cs stc popfq add (bad) adc rex.WR jmp shlb loope pop or (bad) adc es mov rex.B scas lahf cmp retq test add test sbb xchg (bad) cmp movabs movabs add cmp mov popfq jl lock mov pushq fmull rex.WX fild rex.WX cltd or lret movabs (bad) xor lret test (bad) mov out mov ds mov cmp out and or mov (bad) (bad) push nop cmpsb test adc ds sub lock sahf (bad) jmpq imul movabs mov rex loop movsb rex.WXB (bad) sarl retq rex.B or mov lahf cmp int3 adc mov (bad) mov sub insl (bad) (bad) xlat (bad) mov rex.RXB (bad) mov cmp jmpq xor rex.WB fisttp (bad) mov gs in test cmpsl xor cmp (bad) (bad) orl (bad) leaveq xor xor rclb roll xchg mov fwait sub (bad) mov mov xor outsb sti retq rex.WB xchg mov movslq adc cmpsl jbe rex.WXB je je lods mov cs out callq movsb xchg adc es cmovae lock punpcklwd push retq ja repz rex.RX rex repnz push jnp rex.XB mov rex.B (bad) mov cmc sbb stc (bad) cmp rex.RXB rex gs ds adc sti pop rex.XB cmp je and rex.RXB (bad) mov rex.WRXB rex.RXB rcrl push sbb jle jmpq out xlat lret in mov push punpcklbw iret or xchg adc mov shrb and iret addb lea fistpll rex.RXB movabs mov rex.WB (bad) cmp addr32 mov push cmp movabs xor repz stos lahf andl mov add nop jo lods mov out (bad) fcmovu (bad) leaveq rex.WB (bad) cmp (bad) imul push lret movabs mov enterq leaveq ja mov xchg fldenv xor (bad) mov mov jb xchg (bad) cmp jbe (bad) mov (bad) and fildl or mov fist rex.W fstps icebp rex.W push es movabs jae (bad) idivb fcomip int3 std pop (bad) jne xchg and rex.WRX bnd fcomi jo addb cli fiadd std rex.RB rex.RXB lock test (bad) mov leaveq es pop outsl add jb jg mov mov cmp cmp sarl sub je jg adc movabs ja mov movsb cmp movl scas scas push (bad) (bad) movabs xchg push in (bad) jbe movsb cmc push push retq sub fsubrl adc sbb imul mov gs mov sub xchg fisttp loop movabs stc (bad) in (bad) sub xchg jl (bad) sbb (bad) ficomp pop imul (bad) in cmp stc mov cmpsl xor ja insl mov out movsl or mov pop jno xchg imul mov adc movabs or pop mov or mov (bad) jo (bad) (bad) stos lahf xchg rex.RXB rex.XB movb and test cmp or or mov insl or push rex.RX adc (bad) pop or xor insl xchg mov (bad) mov nop leaveq mov xchg rex.B (bad) add cmp lods out (bad) jo test rorb mov (bad) or (bad) lock pop rex.WX push iret sub movsb rex.WRX rex.RB (bad) retq jb and lahf or cmpsb pop jno cmc and stc adc jp enterq rex.R and movabs adc xlat test mov mov js mov mov notl xor jne imul loope mov jbe mov (bad) movsb movswl or mov imul jbe rol sbb xor fiaddl test mov flds scas mov int lods test movsb sbb out (bad) or rex.WB (bad) loop (bad) test mov rex.WX rex.WXB xor notl rex.RB movabs mov je or je pop (bad) and sarl rex.X flds sbb hlt shrb stos xchg cltd xchg cld adc mov insl cltd ds pop jbe lods shrb (bad) rex.RB sarl mov mov stos lea (bad) or xchg (bad) mov sbb adc pop mov rex not xchg mov loope add retq roll mov cmp sub test cwtl (bad) or (bad) pop movabs jnp (bad) or cmpsb iret imulb (bad) mov or rex.RXB and test or and (bad) lcall rolb enterq mov movsl and rex.RXB mov (bad) mov (bad) loop rex.B mov cmp es retq fiadd mov sub (bad) xor callq adc (bad) (bad) xchg test movabs adc mov callq jnp cmp mov scas stos sub mov cwtl jno mov int test (bad) mov outsb lock incb cmp mov rex.RXB rex mov mov jg frstor mov loop sub push rex.RXB mov mov and outsl jns xor add jne mov push iret (bad) retq fcmove cltd scas mov rex.X cs loope xchg iret adc sarl retq push mov loop cmp cld jmp (bad) (bad) (bad) cmp out sahf and push sub xor xchg sahf rcrl enterq (bad) js out jmpq rorb rex.WXB (bad) (bad) popfq xchg (bad) adc flds xchg or pop sbb mov out jge jo (bad) cs rex.R lock mov mov push add leaveq push in cmp rex.WXB (bad) in jb ror outsb lret int3 mov push add xchg addr32 movabs sti testl rex.WB rex.RB rex.W cmp and rex.XB xor mov sbb movabs (bad) mov jrcxz mov (bad) lret (bad) es (bad) fild sarl jo fsts mov xlat mov sahf adc rex.WRB xchg mov cmp ss movl mov iret mov add (bad) lret cmc adc sbb leaveq (bad) (bad) mov nop xchg adc push add retq in mov cmp (bad) iret cmp xor push rolb and jg lods movslq (bad) add xor sbb lock (bad) loope xor ja mov test outsb xchg rex.RXB (bad) jno pop jmpq adc pop (bad) fnstcw faddl int fcmovnbe pop push fcom pop fistl (bad) pop push fcmovbe pop xor (bad) movabs mov (bad) int xchg cmp rex.WX or rex.WXB insl (bad) jmpq push mov jne (bad) mov adc int lea leaveq jge popfq adc xor rex.WRXB push mov mov adc xchg (bad) mov jb retq adc xchg (bad) mov jbe (bad) mov adc mov scas shrb mov lret fcomps leaveq enterq test pushq mov jo (bad) mov adc xchg (bad) mov je (bad) mov adc (bad) lods shrb mov adc (bad) cmp sti leaveq rex.WXB adc lret push adc xor repz rex.XB adc lret push (bad) (bad) (bad) (bad) (bad) leaveq rex.RXB adc lret rex.WRXB shr leaveq (bad) mov adc lret pop sbb cmp stc leaveq rex.WB adc lret push adc xor icebp leaveq mov adc lret push adc leaveq rex.RB adc or leaveq cmp lret push jp pop (bad) xlat adc ja xor repnz mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov push lret mov rol leaveq movabs iret (bad) scas sarb adc rcll mov ror mov sbb ja cmp cli lret or (bad) (bad) rcr rex mov mov rcll leaveq int ficoml ror (bad) mov rcl leaveq int3 mov adc push cmp ficoml push push mov rclb rex.WRX xchg push xchg xchg fcomps rcl (bad) push int adc push (bad) (bad) cmp push pop (bad) adc push rex.WR fdivl rcrl (bad) ror push xchg cmp ja (bad) rex.WR pop cmp pop rex.WRB in stc mov ja xchg push retq mov rex.RXB push ja imul ja fist rex.WX fisttp icebp fdivrl pop mov pushq (bad) xchg rcl frstor (bad) scas sahf mov jne test movabs cmpl lahf jbe movabs xchg fwait mov cmp jb movsl adc roll (bad) rex.B rex.RB rex.RX in push movabs test xor jnp push leaveq push mov adc push mov rolb rex.X adc lret sub (bad) sbb or cli ss movabs movabs xor lret rex.WXB rex.XB movsl sub sub js cs mov lret (bad) fcoms xlat (bad) std js pop iret add stos or out fwait sub shrl rcl addr32 add fcmovnu mov adc fidivrl nop stos enterq xor sub mov xchg cmp (bad) (bad) jge xlat mov xor vpsubusw hlt push xchg loope xchg jb xlat nop shll cmp fsubrs xlat sbb shrl hlt push movabs xchg mov rex.WXB rex.WXB mov fistl sub (bad) fs push cmovg and movabs mov xchg out (bad) pop mov (bad) int3 (bad) icebp imul adc rex.RX push std popfq add adc xchg rex.WRB lret andl insb cmp jno outsb (bad) out in and fnop sbb sbb jnp es (bad) sub (bad) out movsl fsubrs lret cmp fcmovnbe adc lods rcr (bad) mov cmp sub cmp ss sbb es or movsl popq (bad) out mov (bad) outsl retq lods in cmp push jo fldt cmp out enterq insb xor sub fildl (bad) orl movups push or jg mov fcmovb xlat xchg pop sub out fcmovnbe js out add popfq (bad) push mov scas (bad) rex.WRB sti cmp cmp insl movabs pop (bad) icebp in sbb fmuls imul jg mov pop lahf enterq fistl fcmovnbe jmp push cmpsb sbb cmp movsl test sub xor push stos sub outsl retq int sbb fdivs or (bad) (bad) xlat (bad) xor loope js subl out rcr data16 (bad) popfq xchg lcall in rex.WRB stos (bad) rex.RB push sbb sub rolb mov pushq (bad) jno or mov adc mov (bad) repnz out cmp out movsb sarl jg outsb and mov rex.X (bad) xchg pop popfq push in mov cmp mov jl lret (bad) (bad) rex.WB add jae jno (bad) or sub insb pop lods (bad) imul rex.RXB addl cmp push fcmovnb lods std add lret sbb addb rex.WRB pushq pop mov cmp int3 data16 mov fstps fcmovnbe insl and push sub cltd fstpt test push xchg scas sbb fcomi (bad) imul add movslq or sbb fstpt (bad) sub fldt sub callq movabs scas sahf outsb (bad) jne in pop sub (bad) (bad) in xchg cmp ds icebp pop subl adc fisttpl jns outsl mov xor sub jge xor in fadds fstpt rolb outsl mov (bad) add mov pop stos pop sahf fnstcw cli in in xor sub rex.XB jl mov (bad) (bad) sbb fisttpl pushq mov and (bad) cmp callq fcmovu lret pop xor cmp (bad) fwait std (bad) xchg scas addl or lock fcomi jae (bad) mov vandpd (bad) enterq lea cmpsb and adc push stos cmp (bad) out pop sub push xor fistl rcrl add (bad) mov xchg jb xchg push jl jmpq popfq rex.WXB out push jno repnz mov pop add cmpsl movsb sbb rex.WR sarb enterq jmp andl add pushq movabs lods push pop push xchg mov adc push test sub movsl rcrb fs lock sbb mov add sub enterq shrb (bad) (bad) out and test jo test push in mov xor fildl stc mov insb sbb (bad) fstpt out add int std pushq int3 jp jbe adc xor pop (bad) jae jnp lock xor cld sub rex.WX sahf test add sub rex.WRX fldt rex pop orl in pop scas adc lret mov rex.WRX push jnp xor fistl add (bad) pop adcl sub rex.RX imul pop scas push mov (bad) push sbb xlat movslq rex.WX imul pop mov mov cmp movsb sbb (bad) (bad) jl xchg (bad) add mov sub (bad) pop sub mov fldt pop pushfq cld fistpl (bad) sbb (bad) (bad) sbb stc pop xor sbb outsl shll lret xchg (bad) push xchg (bad) pop (bad) pushfq mov rex.WRXB jle push loopne fstps lock and callq cmpsb pop and fwait xchg leaveq addl enterq out xor add (bad) rex.W sbb cmpsb rex.WRB xchg (bad) and xchg pand hlt adc divb mov outsl (bad) jae ja fwait and xchg (bad) jnp mov fisttpl in xchg cmp pop xor mov (bad) rex.WRXB rcr rex.RXB mov rex.WXB stos pushfq lahf (bad) movabs mov jnp mov movabs add add rorl adc ja movslq or push iret cmp add and and ds rex.WR clc mov (bad) in mov enterq imul sub movslq rex.X outsl push jae xchg rex.WRX cmpl stos movslq movslq push push xlat pop jnp ja jae outsl pop and pop (bad) movslq adc addr32 jae rex.WRX sbb sub (bad) jrcxz fistpl mov add mov or (bad) xchg lret fldenv xchg fstpt jge retq in (bad) sbb fldt sub sti rex.RX ds lahf mov adc pushq fcmovne cmp fistpl scas adc xchg lahf rcr fldt (bad) loopne out (bad) sbb iret fwait adc fwait or (bad) imul roll scas nop mov mov mov (bad) fistpl lahf push fwait (bad) rex.WXB sahf lret lret mov shrb rex.R lret rex.RXB xchg leaveq fisttpl add fisttpl fldt fistpl mov (bad) notb fildl xchg iret xlat add loopne (bad) rex.WRB xor cmc fsubl rex.WX pop pop ja and mov mov pushq fimull or out pop jg rex.XB addr32 push mov (bad) jnp sbb out sbb pop fcmovnbe (bad) (bad) movsb xlat fnstcw push xor fmulp lea sbbl movabs cmp lret push sbb lahf fnop cmc mov pushfq fnstcw fildl fmuls cmp cmpsl stos sarl adc stos in mov fcmovnbe stos mov sub rex.WXB test jmp movabs (bad) and (bad) mov rcrl (bad) cmp (bad) xor loop fstpl cmc mov mov mov and jmp test add jnp rex.RB leaveq fistpl jnp rex.WRX movslq (bad) xchg (bad) fsubl rex.XB (bad) mov (bad) mov xor test cmp xorl (bad) mov (bad) and jo fnsetpm(287 (bad) hlt cmp fcmovnb out pop push cli (bad) (bad) (bad) (bad) adc adc sbb movabs sbb adc fwait mov mov (bad) out xchg vaddsubpd repz mov mov xor mov popfq (bad) pushfq xchg pop callq (bad) jge movabs sub (bad) leaveq (bad) (bad) cmc jb push je jnp mov mov out cltd cli pop icebp lret cmp imul add xchg (bad) rex shl (bad) and and fisttpl (bad) push and (bad) push mov mov fcmovnu xlat enterq shlb cmc add push xchg rex gs or sbb pushq lret mov pop rex.WR and xchg rex.WRXB (bad) in fwait pop (bad) out movsl rex jnp sub cmp pop insl loope adc (bad) mov mov fwait cli (bad) movsl repnz int leaveq in pop lret xor add push out mov add sbb mov int3 stc fneni(8087 sarb mov (bad) stos sbb addr32 xchg lahf nop lret or lods rex.WXB fwait mov rolb jo in push or rol sbb (bad) imul loop vmulss jo (bad) xchg (bad) imul rex.WRX (bad) movslq in movabs and or pop fistpl imul lods fstps (bad) cmp cmp cmp fucomi pop rex.WRB stos add mov mov (bad) sbb repz cmp fcmovnbe (bad) cli mov jae cli (bad) enterq fcmovnb in and and movabs xor rcl pop add or pop or rcr mov lods sub int es ficom (bad) enterq jb callq mov (bad) (bad) push xchg xchg clc negb and sbb addr32 (bad) rorl mov rex.RX cmp fistl lahf jp sub (bad) enterq xlat or nop in and (bad) sbbb mov xchg out icebp push (bad) pop clc loop outsl sbb sub xchg pop or mulb add sub jp fistl in push (bad) stos add add insl shrb jrcxz sub es xor clc cmp mov and add jns pop xchg pop adc fwait rcll xchg out push mov fcmovnu imul pop scas (bad) (bad) idivb fcmovnu stos mov rcr xor imul hlt xchg (bad) mov fisttpl stc xor scas es rex.WB pop fildl test mov pop jge sbbl test outsl loop out (bad) (bad) fwait callq cli rex.WRXB pop fldt nop addr32 mov cs xchg and add loope push stos ja fstps rol rex.RX add (bad) rex.WR mov rex.R fcmovnb adc ja lods jmp rex.WB idivb pop pop popq (bad) xchg xchg push addl addr32 (bad) cmp push pop xchg cli rex.WRB retq movabs xchg jae lock pop clc xorl jne rex.X xchg xchg (bad) fistpl and sub fistpl mov push mov mull movslq (bad) pop mov mov sub es lahf jg push and stos lahf out pop rcrl push retq jnp dec insb (bad) (bad) sbb xchg bnd mov xchg fcmovnb ja xlat sub push std mov (bad) cmp pop fldt cmp fistl xchg fldcw retq jnp dec (bad) scas xlat fcmovnu stos pushfq jae mov mov or mov xor test imulb fstpt push cs sbb pop callq (bad) xchg mov fildl mov cmp cmp xor pop mov in jle sbb ja cmpsb ficomp jg fdivs xchg mov (bad) sbb jae mov (bad) xor rex.XB rex.WRB pushq lock repz pop ss fcmovnu imul or add callq cmp (bad) shrb (bad) out and movslq add (bad) rex.R jl mov pop (bad) insl fsubrl sbb fildl cltd js pop (bad) push mov movabs sarl (bad) or rex.WRB mov push in push (bad) pushq xor pop adc or lret fldt fs js lahf mov mov sub jae fndisi(8087 lods loopne cmpsl movsl fs fiaddl cmpsb mov fcmovbe (bad) ds xor pop lret std loope fwait xchg rex.W (bad) (bad) (bad) rex.WXB pop stos sbb jp jne lret mov mov repnz sbb imul lods movabs sub (bad) jnp mov jrcxz add ficom mov xchg or push rcrb mov lock fcmovnu outsl fnop xor imul mov rex.X fistl rex.WX mov sbb pop xor sbb mov xchg lods (bad) fcmovnu push mov shll sbb pop movq (bad) (bad) ds xor movl (bad) movabs or xlat (bad) and or xchg outsb leaveq rex.WR int (bad) fidivr mov fildl xchg cmp sub fldt movabs push (bad) movabs cli pop (bad) pop out mov jne sub jnp and movabs repnz mov sbb rex.W ss es gs cs and mov fildl shrb lods outsl rcrl mov xor insb jle pop lret (bad) mov (bad) imul sub mov fstpt ja,pn jnp outsl pushq or (bad) mov xchg mov mov pop fildl int xchg jmp jmpq rex.WRX (bad) fcmovnu mov sbb mov (bad) mulb movsl mov cmp sbb rex.WX pop push xchg (bad) in sub mov (bad) jg fucomi fucomip lods (bad) xor cmp jl adc outsl imul mov push addr32 (bad) stos ds rex.WRB adc idivb add lods push sbb fwait mulb mov (bad) mov sbb rex.WX fistl repnz mov fwait mov (bad) push pop mov shlb jae lock (bad) pop scas iret xor loop jnp (bad) push es and sub xchg (bad) out pop mov cmc in loop mov data16 sub fnsave fstpt addr32 xor xor movslq (bad) xchg jns fcmovbe std stc adc adcl addr32 repnz mov sahf pop xchg push rex.R fildl rex.RX (bad) (bad) and out fstpt mov xchg test retq and rcr iret movslq add shrb pop fcmovne rex.WR fsubrs mov rcl jnp pushq adc cmc sbb callq retq and cltd xor xor sub jno add and (bad) (bad) jg cmp (bad) cli fstpl (bad) rex.W repnz fistpl cmp adc (bad) (bad) callq mov (bad) outsl outsl fcmovnbe sbb pushq (bad) jb frstpm(287 (bad) fistp enterq in mov add xorl push rex.WRB sbb fwait and int test fwait jrcxz lret mov sbb callq (bad) cmp je mov cmp xor jb out neg cmp shlb rex.W data16 fcomi xchg cwtl (bad) ss insb mov out int3 or xchg sahf push imul fsubs adc adc rex.W fcmovnu mov rex.RXB fldt fidiv pop (bad) or fcmovne pop movsl test lret push jge (bad) (bad) fwait sarl and pushfq push jp lods mov imul or xchg imull cmp sub scas movabs outsb push imul cmp rex.XB movabs xor xchg jp cvtdq2ps xlat clc fwait stos retq pushq fcomi rolb pop nop in xchg rex.WB insb fwait cmc stos mull (bad) (bad) fcmovne enterq fstpt mov outsb mov xor fstpt (bad) pushq adcl add fistl in adcl cmp sub pushfq sbbl mov int popfq fisttpl sub callq (bad) fwait and (bad) fs fistl out (bad) lret sbb pop mov sbb lea jl (bad) pop adc (bad) orl cs (bad) jp and jnp add mov mov out jbe movabs icebp pushq (bad) mov flds ds (bad) sub rcrb pushq leaveq pop jnp callq popfq rex.RXB jae add fcomi pop adc fstpt and xlat iret or rex.WRXB rex.RXB flds cmp fwait xchg (bad) imul add out in rorl ss leaveq lock mov movabs insb fldt retq (bad) iret sti (bad) or cmpsb (bad) (bad) (bad) (bad) xor fcmovne mov and insb xor add and and (bad) mov (bad) xchg and mov fldt cmpsb sbb jg (bad) fdivs mov and ficom ss or (bad) mov jnp pop sar sete (bad) mov cmp in jnp (bad) jmpq cmc fwait push stos jno sbb fdivp imul jo fcmovnbe movzbl (bad) cmp rex.WXB push xlat xchg and xor jnp lock mov insl sbb lea rex.X pop and xlat add int neg xchg lret cmpsb rcrl push int3 data16 xorl rex.WXB (bad) mov data16 add (bad) lods or pop jns rex ss jne (bad) xchg sub addl sarb pop mov jmp int jrcxz mov (bad) add xor mov clc (bad) repnz scas xchg fucomi mov pop (bad) (bad) iret sub sbb xor fildl fwait sbb jne rex.WB mov repz xor cmp fistpl movabs out movsb callq fisttpl repnz mov enterq add loope cmpsl pushq js cmpsb fsubs rex.XB or movslq and out int fcmovu rex.WXB fwait adc adc (bad) sbb (bad) jno add lret jnp mov fstpt (bad) fs lahf movslq jrcxz jns ja fldt xor rex.WRB bsr movsl rex.RXB xchg mov out incl (bad) fucomi (bad) pop xlat ficom movabs (bad) pop lock bnd fistpl (bad) push test ds out addr32 ss retq cs cmpsl callq cld imul stos in mov sub fnop out (bad) fistpl pushfq rex.WRX jnp mov push gs (bad) rex.WXB fistpl callq rex.WRB xchg ds mov mov js (bad) ss fstpt jne fist (bad) xlat cli fisttpl insl pop iret xchg or mov fistpl add mov fistpl (bad) xchg rex.WX rex.WRX (bad) movsl mov mov imul rex.WB (bad) and jnp gs (bad) clc pop iret stos add setno (bad) jns int3 movabs hlt (bad) repnz int rex.X rex xchg movslq ja (bad) fisttpl addr32 jae outsl mov sub pop leaveq imul adc mov fdivrl fsubrs cli mov cmc jae pushq xchg loopne (bad) (bad) pop push jg andl adc sbb sbb callq mov jrcxz scas (bad) mov (bad) mov cltd callq cmpl sub fistl scas and sbb adc fistpl cmc iret pushq out (bad) jnp in ja and jae pop js divb jrcxz jb (bad) fildl cmp or push add cltd cmc fildll add iret add (bad) push lock cltd icebp out sub push iret adc cltd (bad) mov fnstsw cltd rex.WR sub mov (bad) insb int flds sahf (bad) mov fcmovne (bad) jnp fnstenv fisttpl mov jg sarl int jnp movabs adc sbb jo (bad) rex.WXB push xchg fldt (bad) add mov pop (bad) retq sbb (bad) jae adc cld mov fistpl pop push xchg fs cmp xchg (bad) movabs sub pushq rex.X sub (bad) fstpt sbb cmp xchg fcmovnbe adc rex.WR lret out gs (bad) or lret movabs sbb lret sbb (bad) (bad) fisttpl pop fld xlat callq lret je lret and push repz mov lret cld mov (bad) ror sub lret (bad) enterq sbb fwait (bad) mov rex.RB sbb (bad) fucomi es xor push fldcw xchg (bad) rex.W rex.WXB stos fstpt fildl sub in int push (bad) xor subl jg push sbb insl rex.WR imul jno xchg or int3 cs fcmovnbe xor test xor or es retq (bad) fisubl (bad) xchg jge lea mov leaveq pop pop xor cmp mov jns jmp repz callq cmpsl mov iret adc xor xchg addr32 xchg rex.WX rex.WRB cmp jp inc sub xchg rex.WX xlat and jp mov and enterq jp jbe rex.RB xchg rex.WX data16 adc jp xchg (bad) rex.WRB rex.WRXB (bad) (bad) xchg mov cmp and rex.WXB rex.WRXB rex.RB (bad) insl and and xlat jmp sti add jnp data16 out fcomi fiadd sub sub ja pop sbb xor xchg lods mov mov xchg (bad) rex.RXB xor scas mov fldt sub test sub cmp fildl (bad) lods lods fldt sahf mov rex.WRXB xchg lret fcomi fcomi outsb adc mov or adc fldt xchg in jbe (bad) pop in (bad) insl (bad) fwait clc rex.WXB mov rex.XB imul mov lret hlt (bad) fnclex rex.WRX notl movsb scas jp (bad) pop add loopne jmp in out lret mov stos icebp sahf jo shrl movabs mov sbb fwait retq mov lret fstpt in push in rex.RB (bad) (bad) (bad) ds cmp (bad) push rex.WXB int rol push je insl lahf and fisubl jp insb xchg loopne jbe (bad) ja pop jno jns (bad) jnp (bad) repz and (bad) shlb mov jb fstpt mov (bad) (bad) sub mov xor (bad) mov scas ss or jnp (bad) xchg lods rex.X pop cmpsb mov movsl add sbb lods sbb out fistpl xchg hlt mov (bad) mov mov push movabs fadd fwait add sbb loop sbb in (bad) jne fstpt ja xor movslq mov (bad) mov mov imul jmpq iret mov lret pop insb mov mov movabs sbb xchg rex.RB rex.WR jbe movsb outsl lret imul push movslq fstp xchg addr32 jae fldt jnp pop movabs rex push jl (bad) xchg mov mov (bad) retq fnstcw cli ja fwait mov fisttpl rex.WR andl lahf pop or js fstpt adc push mov scas and fwait movsl xlat mov movslq pop xor (bad) (bad) xchg movsb ds and pop lret ds sbb fistpl scas sub movabs sub outsb fnstenv jmpq pop fstpt jp adc fcmovnbe jns (bad) iret rex.WRB push xchg fistpl (bad) std roll jbe in (bad) imul addr32 adc fwait movb push movabs rorl rex.B ja push jae mov movslq adc jp xor cmp movslq push imul jb movabs retq jrcxz fnop lret sbb jae retq movslq fisttpl mov mov adc fwait in mov cmpl push cs stos addr32 cmpsb imul pop imul (bad) rex.WRX xchg sbb (bad) mov iret lret (bad) stos int fbld fwait lods cmpsl rex.WRB (bad) scas fcmovne movsl lahf mov cmp and sbb iret jle (bad) mov push ja orl mov xchg mov mov stos iret (bad) lret push mov int3 xor cwtl (bad) adc jle movabs retq push sub outsl pushfq pop jae xchg fwait pop xchg lret scas test lahf pand int3 ja (bad) jae outsl int rex.WRX rex.WR movslq callq jae outsl scas mov (bad) imul fwait fwait jae in out leaveq (bad) mov cld mov outsl icebp jae ja fwait mov xor fildl lret pop rex.WXB pop xchg xchg in sbb imul lret movabs (bad) sub addr32 fldt sahf pop mov fisttpl (bad) int rex.WRX lahf pop movabs add mov (bad) or mov jnp ja addl jg mov mov fst (bad) fcmove pop lret (bad) mov imul iret jne fcmovne movabs jnp outsl lahf jae pop xchg movabs (bad) fldt jle (bad) push stos out or rclb int3 mov test cld callq cmc andb addr32 cmp ss xor sarl jnp,pt pop rex.RXB cmp adc and test xor lret (bad) (bad) push xor (bad) (bad) stos pop cs fldt cmp mov add sbb cltd adc movslq lahf icebp int3 cwtl or cmp fistpl fadds fcmovne es or add shl (bad) stos popfq (bad) (bad) sti (bad) imul add cmpsl lahf jno int3 fildl jae sub jl (bad) stc xor sub push (bad) (bad) rex.R rex.RB cmp xchg jrcxz cmc adc fldt jbe in rex.WB sahf pop pop cmp jae outsl jg (bad) test insl loope (bad) int retq pop xor sub jbe repnz jne adc fcmovnu rex.WRB jno icebp (bad) pop sbb out test clc fucomi jne (bad) shrd rex.RX mov retq cmpsb movabs nop adc pop mov rex.WRXB ss mulb (bad) pop fcmovnu pop cmpsl clc push (bad) push xchg fcmovne jl xor rex.WR rex.WRX scas sub (bad) or adc (bad) mov cmc mov xchg adc mov xchg (bad) icebp lahf in rex.XB mov xor lods sub fistl ds test icebp push push add jo test movabs mov mov enterq fstpt and (bad) sub rex.WRXB movabs push adc adc cld (bad) (bad) xchg bndstx stos fistl add xlat mov jb ja (bad) adc jbe cmp xlat rex.WXB or pop repz ja (bad) fsubr pop fistpl movabs in mov orl and sbb imul movsl fcmovnbe xchg mov pop sub jne in adc rex.WR jno jp imul mov fistl push fisub pop jg movabs retq not add (bad) (bad) pushq pop std mov xor jae (bad) fucomi mov sub and cmp rex.RX pop (bad) test (bad) cltd xchg jmpq mov fildl cwtl add (bad) lods or pop and movabs cs rcrb es test jp fistl std xor and leaveq jo (bad) insl (bad) rex.R jnp push jp movabs movslq fstpt data16 mov cmpsb jg xor int cmc loope loopne stos fcmovnb fnsave int3 or sbb stos cmp fcmovnbe or (bad) fildl fidivl and popfq mov in adcl lods sub cmpsb push scas rol mov jrcxz insb push jnp jle pop (bad) cmp xor xor movabs movslq mov xor rex.WRX rex.WRB cmp (bad) and and xchg fistl xchg jnp loopne fiaddl jbe jge adc add lahf rex.WRX pop (bad) mov push cmpsl mov pop sub (bad) jrcxz jne fwait movsl repnz mov cmp xorl cwtl movabs rex.XB (bad) push cli imul fcmovnb lock jae fs fisubr xchg rex.WR pop jb mov rex.WR in fldt jnp xor out (bad) es mov fimul (bad) jp in loope (bad) imul test add fildl enterq (bad) fmul adc fistl jo (bad) clc pushq fwait jmpq ss xchg loopne mov (bad) xor roll push fildll nop jo jns cmp cmc mov rex.WR (bad) and sahf (bad) push (bad) scas xchg (bad) addr32 fisttpl and xor xchg icebp sub push sbb xchg jmpq and jb sbb jo jle fistl jno (bad) sbb adc (bad) (bad) and (bad) mov pop loope int retq rex.RB jne,pt mov (bad) mov xchg or fidivr fstpt (bad) rex.B push sbb pushq (bad) in jnp pop and fldt add jbe add jns out (bad) or sbb lret adc mov fwait imul fistl rorb int (bad) pushq in pop out jns fsub rcrb scas and fdivr hlt fimul insl (bad) pop andl mov or (bad) pop and rex.X fcmovnb fldl (bad) jb or push or lahf (bad) sub rex.RB xchg mov rex.X and out cs mov fcmovnb pop lret push ja (bad) sti movabs jrcxz pop (bad) sbb in or cmp pushq ja pop es (bad) mov (bad) sub cmp (bad) mov repnz jnp insl iret addr32 (bad) mov pop push and lods sti sbb lods fmuls (bad) sbb and int3 (bad) enterq mov sbb push jbe repz movsb outsl mov movabs mov loope pushfq (bad) mov cmpsl xchg cmp in rex.RB push rex.RXB rex.WR adcl out insb stos pop xchg pop cmp mov std cmp cmp jae mov rex.WB lock xor cmpsb popfq outsl fildl pushq lock rex.RXB pop push insb (bad) sbb cs mov sbb icebp fdivs mov imul sbb rex.WB or int jp pop fs jge fcmovnbe out and (bad) cmp mov stos (bad) fldt (bad) add cmp hlt fs pop mov rex out test mov sbbl ficoml mov fldt sbb stc cmpsb pop jb ds or (bad) lea fsubrp insl test xchg xor fildl or mov add pop outsl pop mov cmp and pushfq pop xchg xor jns jae out imul lret rclb retq xchg rex.WB std fildl xchg adc std rex.XB mov add or (bad) mov es and xchg fistpl or fistpl insb lea jbe fs sbb or (bad) mov (bad) cmpsb retq pop int and jnp sbb mov fistpl mov rex.WB popfq test cmp cmpsl mov mov xor jae (bad) sbb xor stos push (bad) stos (bad) rex.WR lods insl fldt movsl and fistl pop add (bad) enterq (bad) add fistl push movabs retq xchg test out ss (bad) cmp fsubrs sub fildl movabs pushfq xor fistpl mov mov movsl mov sti cwtl pop cltd pushq bnd and mov sbb cmc and jbe movslq (bad) insb fistl (bad) (bad) sbb out add fcmovnbe in (bad) xchg cld sti jl push or nop in adc xchg rex.WX (bad) (bad) (bad) fcompl sub test cltd fstpt pop xor (bad) test (bad) push mov or fwait (bad) cmp (bad) fisttpl mov sub and cli fimul xor rex.R (bad) or (bad) (bad) callq mov test (bad) clc pushfq (bad) adcb jns or (bad) fwait cmp ja mov rex.RX and sti (bad) mov cmc cmp (bad) cwtl mov mov je fildl lock cli sbb jno (bad) pop out (bad) xor jnp (bad) and xor cmp sub lret (bad) adc rex.WRB (bad) rcr ds clc stos int mov in stos fisttpl (bad) (bad) add cltd repz movabs and scas fistpl movsl repz cmp sbb (bad) rex.RX xor fcmovnb ficoml cs out fcoms rex.WB mov (bad) pop fcmovnbe pop js movsl cmpsl (bad) int3 xchg gs fucomi popfq rex.WRXB lock push push mov rex.WX jp fidivrl es jo push mov mov push rcl (bad) pop rex.X jnp xor and fucom rex.RXB int rex.W icebp sbb (bad) stc (bad) out pop or and cmp rex.WXB outsl mov or jle loop xor cmp (bad) jo adc mov and sub int fstpt sbb lret jp int3 mov (bad) rex.X gs cmp add rex.RX (bad) (bad) cmp rex.R sub int pop cmp movabs (bad) outsl cwtd xchg mov xchg or (bad) sti fsubl mov pop push xchg lods (bad) enterq rex.XB fisttpl lock movslq rex.WRB (bad) fisubl sbb fucom add or pop pop pushq (bad) xchg sub rex.RX movabs jns or and ficoml sbb (bad) fisubl pop cmpsl ds scas scas (bad) fcmovnbe jns not lock (bad) (bad) mov fcmovnu (bad) cs and (bad) mov int mov insl fistl mov pushfq and enterq (bad) movsb (bad) (bad) sbb fistpl pushq mov xchg insl cmp std test sub and and sbb sbb gs movabs or jg ss push rex.WRX (bad) cs rex.RX and stos loop decb sub mov mov (bad) fistpl sub (bad) pop xchg jnp psubsb fiadd jae fistpl pop movslq pop mov loopne pop or lret jmpq pop pop jmp rcr icebp sub rex.RB out packssdw jnp sub sahf jg retq push fistl sub sar stc retq (bad) or hlt mov cli loop adc ja or jnp rex.WB rex.WRX cwtl (bad) xlat mov xchg (bad) mov mov mov mov or jmpq fcmovnbe mov add jp rex.WXB movslq cmp rex.WB (bad) in (bad) lret xor (bad) mov or in push adc xor fcoml fistl and pop (bad) pop loope sub faddl in and cmpsl xor (bad) fldt cld (bad) jae cmp cmp add notb pop cmpsb (bad) xchg xor insl lock (bad) mov scas iret (bad) leaveq rex.WB es and retq sub pop hlt cmp fldt je or cmp xchg adc mull mov adc (bad) jle mov sti or pop (bad) fildl scas xchg mov (bad) cmp rex.WX loop (bad) jmpq cmp (bad) xchg (bad) jnp xlat xor mov mov insb fs fstpt scas pop fwait movsb mov (bad) (bad) sub fildl fistp sbb (bad) test fisub fisttpl lahf add (bad) mov rex.WRX adc mov insb mov cmp (bad) and (bad) lret pop rol (bad) clc (bad) out rex.WRB and movslq cmpsl push mov (bad) sbb sub std jnp pop sbb adc subb jrcxz jo pop rex.WB (bad) fnstsw pushq jrcxz fwait sbbl mov add or jge mov or int addr32 cli movabs imul (bad) cmp movabs fildl sub (bad) rex.WX rex.XB rex.WR setl sbb cmpsl pushq rex.WB rex.WRX pop shr and xor (bad) outsb testl imul addr32 shlb pop xchg test rclb add sub and (bad) mov mov lret rex.X in mov (bad) jle hlt sbb cmp test fildl mov or rex.W pop (bad) and movslq or shl (bad) push mov rex.WR (bad) ss (bad) pop or cli cmpsl push mov mov (bad) xor (bad) sbb fildl (bad) sub fwait pop test icebp xchg stos popfq insb rex.XB fcomps cs adc cli outsl jrcxz (bad) (bad) add outsl add je (bad) lret cmp fs (bad) fst push sbb fildl mov outsl rex.X shll (bad) out pop (bad) mov loope mov add pushq xor fldt (bad) jrcxz add rex.RX in sbb (bad) and mov rex.WRB rex.WXB and (bad) pushq (bad) stc (bad) mov mov and add pop hlt (bad) retq jbe (bad) mov fnstsw mov lcall vunpcklps add stos cmp rex.WR mov pop pushq rex.WRX push fdivrl or cs xchg fldt (bad) (bad) nop pushq xchg and insb in enterq (bad) ficomp gs add enterq pop mov jbe ja test mov (bad) pop mov (bad) (bad) insl test and lret sbb addr32 loope repnz fldt loop jbe rex.R push mov cmp pop lret sti xchg icebp mov sbb (bad) mov sarb imul xchg mov fldt mov sub and mov rex.XB (bad) lea add pop xchg (bad) fildl cmpsl mov add fcmovnbe (bad) and push (bad) (bad) rcr out addr32 (bad) fistpl insl lods sub (bad) mov fmul rex.R movabs pop movabs and scas es cmp and jmp addr32 fcmovnu ficom ja (bad) imul pop pushq enterq sbb (bad) adc outsl mov fistpl (bad) jnp jb fistpl sbb insl std (bad) cld cmp outsb jg nop movsl cmc mov sub neg xchg js repnz jae fistl (bad) imul xchg (bad) jp (bad) gs mov and (bad) scas cltd movabs stos pop cmpsb rcr cmpsl fsubs (bad) pushfq scas (bad) sbb or adc (bad) (bad) mov stos (bad) (bad) (bad) add rcrl fstpt jmpq stos lods fcmovnu mov insl push test sub cmp (bad) push int3 or jnp (bad) jae push pop mov lret imul pop fisttpl (bad) es mov pop and rex.R pop and imul (bad) test callq rex.WB imul xor rex.WRB sbb jnp sub test adc sub movabs iret (bad) (bad) cmp fistpl xchg jle fcmovnbe mov (bad) je sbb rex.XB (bad) cmp push test push (bad) out pop mov rex.WRX rex.X movabs rolb mov test push jo cld (bad) sbb add clc and test (bad) ja scas loope (bad) lret or jmpq (bad) push fcmovnbe popfq loop mov adc rex.XB (bad) xor callq rex.WX pop (bad) push mov cli jnp paddd (bad) std adc add fmuls sub popfq enterq rorb push gs iretw fistpl insb callq (bad) (bad) sub rex.WRXB adc jo js jge movsl xor cli pop repnz out rex.RXB outsb pop fimul (bad) out imul pop adc jnp mov (bad) shrl fistl mov xor fs fisttpl movabs icebp mov adc add leaveq or fisttpl rex.WRXB divb fmull pop jmpq fcomi rex.WRXB mov jae sti jno add in lock stc (bad) retq adc sti mov mov ss movabs push sbb pop sbb xor movsb (bad) movabs (bad) mov fistpl cmp mov pop in push data16 pop cmp mov jp xchg fistl mov outsl callq stos (bad) lods or (bad) jle and fnclex jmpq fildl (bad) jns rclb jae stc cld fidiv pushq cli mov or pop adc rex.WX xchg lea mov scas (bad) sbb std (bad) jmp lods clc movabs or (bad) nop xchg xor adc or loopne stos (bad) xor fucomi lret sub and (bad) (bad) fildl mov fldt cmp cmp (bad) jnp (bad) jle add in sub jns loop or pushq add fmulp mov fistpl retq gs lahf movsb stos and lret pop data16 callq neg add sbb jo jl jns and movsl (bad) pop lret adc out jp (bad) jrcxz mov fisubrl or (bad) sub cmp test or (bad) sub retq cmpsl jae (bad) xchg mov push push mov shrb nop movabs (bad) rex.B fiadd mov (bad) mov lahf clc insl pop out lock jg outsl adc sub imul outsl in popfq jnp stc fstpt sbb rex.XB ds sub sbb pop cmp cmpsl jle jae out fisttpl xor add fisttpl adc fucomi mov cmp (bad) push add (bad) xchg es (bad) cltd (bad) mov imul lret (bad) jnp hlt and mov push mov sti mov insl xchg (bad) sub adc or sub (bad) rcrb sbb (bad) sahf and lret movabs pushfq fwait lock mov jmp sbb (bad) or stos neg jb xchg cmp (bad) rex.WRB add pop lods nop movabs mov pop xchg (bad) test pop sub (bad) mov rex.WX fildl sub xor (bad) sbb cmp (bad) (bad) lret sbb jnp (bad) frstpm(287 (bad) rex.WRXB mov sub sahf jge cld rex.WRB sti (bad) rep (bad) mov fsubl push movslq and rcll mov nop pushq (bad) jo (bad) add outsb mov out cmp negb or gs loop mov sub and jge xlat fisttpl movabs imul ja fistpl jns repnz push cmp (bad) (bad) jae es cs setge rex.WRX repz rex.WXB (bad) xor mov sub (bad) or fcmovu push movabs and sub cmp (bad) (bad) fisttpl (bad) mulb clts or pop (bad) test stos mov fcmovne (bad) sbb movsl fldt fdivs push in or mov pushfq enterq mov sub movslq cmc pop loopne pop mov leaveq mov fldt int xor or jl adc or ficom movslq loopne add retq rcrb (bad) rex.WRXB (bad) hlt fcmovnu (bad) jg cmp (bad) int ds leaveq test jle repnz in add shlb pop (bad) mov data16 mov pop adc (bad) sbb jnp and (bad) fistl push insb cmp jo rex.WB push ds or (bad) mov mov rex.XB jno cld mov mov mov fwait js in addr32 pop fildl (bad) pop xor (bad) out (bad) push (bad) (bad) jne xchg lret adc movsb (bad) movsl lret js int mov xor scas jl push pop insl je imul (bad) ja fistpl cltd (bad) ds fstpt movabs stos mov (bad) pop (bad) mov (bad) lret jmpq sub callq mov or cmc (bad) rex.WR cld out mov popfq xor insl mov rex.RB fstps getsec sbb pushq cmp gs movslq cmp in ja fisttpl adc sbbl (bad) fwait sbb rex.WRX addr32 mov add (bad) sub jbe andl add je and fwait movabs mov mov (bad) cwtl rex.WR (bad) xchg imul push push xchg pushfq pop insb or nop sub rex.B and jnp pushfq cwtl (bad) (bad) (bad) or xor rex.RX cmpsl (bad) jmp fcmovnu rex.WRB pushq ficompl (bad) js xchg mov test cld int3 int (bad) pand movabs (bad) rcl jno xchg (bad) out sub pop mov ss add push outsl roll lods rex.R rex.X popfq cmp (bad) cld pop lods pop rex.WRXB pop (bad) adc fcmovnu pop adc in jo fucomi shl mov cmp data16 lods pop add mov mov (bad) rex.RXB fwait mov sbb (bad) or jbe fcmovnbe add (bad) rex.WRXB (bad) fwait imul push data16 adc (bad) or xchg fnstenv fldt cmp pop rcrb fwait movsl rex.WB rex.WB lock xchg mov xchg and movsl rex.WXB cmp int rex.WRB pop mov xchg pop fisttpl push retq cmp sbb and fdivl push xor out movabs test jl insb rex movabs ds and push xlat fstpl data16 insb int jnp xlat or pop cmp rex.WXB rex.RB jl rex.RX test retw sbb popfq (bad) lods pop push fcomps mov sub movsb movslq je sbb xor adc jmpq jb jae js fstpl loopne out ja jae in jl xchg orl xchg movabs retq (bad) idiv fldt imul xchg (bad) test sub mov mov (bad) push sti xchg fcmovnu xchg jns fisttpll movabs gs (bad) fldt rex.RX gs jg add push es (bad) add pushq outsb sub mov or (bad) callq and mov sarl pop fistpl stc sub pop repz movsl sbb adc cs callq mov leaveq (bad) mov repnz xchg (bad) pop movabs jle ss jmpq stc sub (bad) jno,pn (bad) fmull addr32 fist adc out not in mov sub cmp cmp pop (bad) xchg or or jg loop adc push movsb and cld fildl (bad) loopne imul fstpt xor cmp (bad) sub or pop xor pop outsb pop gs cmpsl (bad) pop mov mov movb adc jmp xor cmpl movabs sub mov and adc loop lods mov push pop popfq callq stos movabs jnp movabs retq xchg pop pushfq data16 and add cmp (bad) pop mov rex.RX (bad) movslq (bad) jl mov fistl pop jbe movabs stos xor leaveq fildl sbb icebp rex.WXB fstpt and fistl cmp push xchg xor pushq callq push (bad) movabs sahf jle or fistl (bad) (bad) fs jge add jmpq scas adc cwtl (bad) mov adc imul (bad) jne fwait add addw pop jle or adc add xchg out add jmp pop insb pop rex.WR (bad) testb jae jns xchg xchg xchg jg jbe pop ja (bad) fwait pushfq mov int out jnp je addr32 fs add rex.RX rcrb rex.WXB (bad) xchg fcmovnbe xchg or rex.R rex.RB pop mov pop jge mov stos fucomi cmpsl divb out xor pop sub mov mov or (bad) (bad) add rex.R push (bad) outsl adc or mov rex.WXB sbb jae es int fstpt stos (bad) callq (bad) repz insb rex.XB (bad) outsl jl and push test (bad) fildl es fcmovnbe push pop jns testl (bad) rclb (bad) leaveq cmp (bad) scas cmp cwtl sbb xchg (bad) fistl and (bad) pop imul mov (bad) int outsb sbb mov mov pop adc mov (bad) nop mov (bad) or movsl mov rex.XB imul cmp rex.R rex.WB fwait popfq mov mov (bad) (bad) fucomi xchg (bad) data16 mov shr mov sbb or mov int rex.WRXB in mov or movabs (bad) fildl (bad) push sbb lahf lret rex.RX sbbb add sub cmp xchg (bad) sub adc test adc xchg xchg (bad) int3 rex.RX push sbb xchg push (bad) scas or pop pop mov jg lahf pop (bad) mov fldt and jl leaveq cmp int xor sahf frstpm(287 outsb lahf jae pop xchg adc sarb stos jne jmp lods outsl out jnp idivl lods adcb pop rex.WRX rex.RB or jnp add and pop in pop pushq retq hlt pop push ja jp pop sahf imul (bad) (bad) mov mov adc int (bad) sti rex.XB mov (bad) push gs (bad) fistpl sub pop cmp or fnstsw rex.WX pop sbb jge cmp hlt xchg fistl jg movslq adc (bad) (bad) mov xor in (bad) pop (bad) and cwtl loopne popfq rex.WRB jmp jrcxz mov rex.WRXB fisttpl mov push fildl xchg (bad) nop (bad) push movabs stos shr rex.WRXB (bad) adc or (bad) (bad) mov insl cmp jrcxz jnp xchg (bad) in (bad) iret mov mov (bad) mov adc xchg (bad) je pop out loope push movabs jnp scas in out pop in (bad) jbe (bad) rex.WRXB jmp jae,pt stos movabs movslq jmp cmpsb fisttpl mov sbbl mov add fildl sbb mov rex.WB fistl push shr loopne fcmovne adc andl mov push mov (bad) in lcall mov ja movsb fistpl je cmp mov (bad) and int pop jnp mov movabs add loop paddd clc mov cmp mov mov xchg adc push out stos xchg pop mov cmp or movslq rex sub pop fbstp xchg fldt lea or int3 jecxz (bad) addr32 (bad) and rex.WB rex.WRX rex.R or push scas adc xchg cmp xchg iret add sbb std (bad) test out rex.B xchg callq lods test movabs rex.XB (bad) (bad) std jnp (bad) (bad) cmp and out xlat retq (bad) xor enterq shrl lahf jp repz sahf sub fcmovu lahf jbe sub adc ror mov mov (bad) and dec cmp mov sbb cmp std xor mov xor (bad) cld mov mov jp sub xor movabs (bad) faddl pop cs sub mov sbb shll shrl (bad) je (bad) sub sbb pop mov and neg cmp jge sbb retq mov (bad) hlt (bad) sub pop mov retq or (bad) push rex.WXB mov int cmp rex.B mov (bad) (bad) push (bad) (bad) cmp mov sub movabs xchg xor (bad) add movabs icebp (bad) je rex.WXB xchg repnz (bad) and sub cmpsl jno sub sub rex.WRXB sub mov pushq icebp sti test mov (bad) je test out adc pop mov or cwtl rex.WRXB add adc sub jbe jl in sti test repnz mov (bad) jae add sbb lock mov push subl and sbb mov sarl data16 mov lret je add xchg jbe push int3 imull cld xchg jrcxz mov movabs pop mov out (bad) scas incl mov cmp fmuls out xchg (bad) mov andl loopne movslq test mov es lahf test push int3 xor mov (bad) sub cmpsl divb xor mov xor stc and in and test mov jbe mov shll xor icebp jmpq xchg xor movabs mov mov rex.WXB push mov popfq adc cmp (bad) mov jl xchg rcrl sbb rorb and divb mov lods fwait notl push jae xchg (bad) sbb retq (bad) and lret mov addr32 repnz xchg xchg mov sub mov lahf retq mov mov sbb cmp mov (bad) xchg enterq in mov mov fcompl pop and (bad) stos and cmp in adcb leaveq xor rex.RXB jle ror xor leaveq (bad) out rex.R (bad) rcr push scas or push faddp fsubl jne sub sbb (bad) jb xchg int3 mov rex.WRXB (bad) cmpsb and lret mov leaveq (bad) jno xor jno (bad) mov movsb (bad) (bad) loope xlat (bad) sub movabs (bad) mov movl fbld enterq xor sub loope cmpsb jrcxz rex.WRXB jmp or xchg rex.WB (bad) lock outsb (bad) icebp movsl xlat (bad) (bad) ds (bad) jmpq rex.RB xchg rex.XB fs pop mov xor xchg lea xor lret add pushq mov or sub xor repnz mov stc cli push test (bad) movabs and imul stos js std loop or and and (bad) (bad) fdivl out (bad) and and mov stos mov mov fs cmpsl mov cld mov (bad) mov or mov lret ja addr32 (bad) fdivl testb pop xchg jno scas and jae and movabs sub (bad) ror outsb retq sub (bad) sub sbb fisubl icebp (bad) and sub fisubr in clc and xor or mov pop addr32 addr32 push leaveq or mov ja rex.W test or mov stos rex.RXB lock mov test or fimul mov enterq (bad) in rolb adc pop mov xchg (bad) jae jp test loope lahf out jmp pop (bad) push ja loopne (bad) fwait (bad) imul movabs fs retq (bad) mov rex.WX lahf fwait (bad) adc xchg (bad) push cmpsl jge adc insl rex.WXB (bad) push (bad) (bad) fnop iret mov sarl mov insl pushq lods jmpq cltd jmpq rex.WX subw stos (bad) adc push mov or push (bad) (bad) jae rex.RX stos scas cmpsl in xchg rex.WRXB imul in sarl mov stos xchg jns mov lahf (bad) in movslq mov fadd xchg push xor cmp sbb imul mov cmpsl (bad) es (bad) or insb shll jae pushfq int3 iret loopne stos lret loopne mov pop jge enterq sbb lods pop or jp pop or mov jrcxz lods retq clc imul mov lret xchg pop lret fistp xchg xchg fcoms mov push int mov gs mov cmpsl fcoms fidivl ja std stos xlat cltd fsubl fcoml (bad) shll fcmovu orl cmova imul stos fnop cmp shl rcll adc push stos or xor lock fwait push sahf pop add adc fwait in mov movabs jae cmp mov (bad) mov lods fwait jbe retq out test ja (bad) movabs pushq lret push xor mov es rcl push pushq lret rex pop shrl mov xor sarl shll mov retq mov rorl push fmuls fwait rex.WX push adc jp push cld jnp mov (bad) and mov sahf retq xlat mov fsubr scas rex.WRX xchg imul movslq rcr sti push lretq cltd xlat push push mov xor sahf rcl jne lahf retq gs pushq (bad) xor (bad) mov stos (bad) rex.WX sarb lret lea enterq js push mov movslq movslq (bad) enterq mov iret int iret movsl jrcxz xchg xlat (bad) movslq lret retq sub fwait jp (bad) xor push adc push retq xor shlb (bad) jns,pt push movsb and fwait push lret xchg add jge lret (bad) imul shll iret adc lret gs imul outsb and xlat jge sarb xchg (bad) rex.WRX rex.WXB fidivrl sahf int leaveq xchg scas movsl xchg add pop test mov stos adc mov rex.WRB rex.WXB roll retq (bad) or lods (bad) fcompl mov shll movabs imul movslq rex.RX rex.WX jae fwait mov cld pop shrl mov fcomip test pop (bad) jnp cmp outsl sbb pop mov ficoml xchg adc lret mov (bad) mov jbe pop rex.WXB mov mov adc adc push rex.RX (bad) rex.WX pushq add cmpl sbb or (bad) rex xorl imul push ja pushfq mov mov pop lret (bad) cld fistl fnstenv test xor add rex.W pushq (bad) lret stos (bad) iret jnp jmpq rex.RX (bad) (bad) mov mov movabs fildll fldenv or xlat mov insl lret jnp mov addr32 xchg scas sub imul mov mov insb mov lahf adc jg lret or leaveq jae xor jrcxz add rcll pop pop rex.WXB movslq adcl jg (bad) jg lret cmpsl add mov mov jb xchg adc or xchg mov scas push xchg xor retq add movabs jae movslq mov cmp movabs lods jrcxz rex.WX jrcxz orb (bad) (bad) je movabs popfq repnz mov scas imul rex.WRX xchg movl (bad) mov jg xchg cmp mov imul outsl xchg rex.WRXB callq mov jg movsb pop mov imul scas jb iret stc mov rex.WRXB inc retq cmpsb (bad) iret popfq rex.WXB jg xlat int jne xchg fwait out xlat pushq nop lret or xor movsl xor xchg push imul mov (bad) cmp (bad) (bad) jno fwait push xchg cli (bad) incl iret jrcxz ss mov (bad) xchg clc iret cmc add jge mov xlat jg retq or fstpt pushq (bad) mov stos (bad) cld stos rorl mov adc jg pop int xlat or (bad) pushfq mov pop jrcxz adc mov pop (bad) xchg adcb retq decl (bad) pop cmp lahf jns jge lret (bad) rex.WXB pop and cmpsl out int jnp shlb mov push leaveq and jnp test pop movabs (bad) pop push stos (bad) retq fbstp shll fistl push imul jnp movabs sub (bad) xlat fldt jae jnp (bad) jp movabs sbb cltd rex.W xlat rcll cmc outsl (bad) mov (bad) insl xchg cmc movabs xchg sti push (bad) movslq pop imul (bad) movabs xlat test fistl push (bad) jae jnp in xlat xchg repz rex.WRXB out (bad) ficoml xor (bad) cwtl mov rorl (bad) movslq imul pop jnp (bad) iret outsl fimull in rorl (bad) mov lret pop (bad) mov or push xchg fdivs push (bad) fcomps (bad) lret rex.WRXB leaveq (bad) xchg mov push mov test rex.WRXB repnz mov mov fwait mov push stos or enterq or mov retq leaveq fmull push adc xchg (bad) mov test leaveq repz test stos push push cmp lea sbbl test adc jb sbb push pop (bad) xlat callq movsb sub mov push cltd movslq push movabs xlat sar pop jl test xchg mov (bad) movsb rex.WRX addr32 rcl lret test (bad) xchg xchg int3 movabs pop subl mov movabs mov (bad) sbb adc jno rex.WRXB rex.WR roll mov mov jns rex xlat cltd add push enterq jns add pop (bad) fsts test jmpq jnp enterq cmovg mov or push shrl pop (bad) mov (bad) or (bad) rex.XB push rcl leaveq (bad) xlat movabs sbb jmp push imul (bad) push jne mov pop test pop jge mov jnp (bad) mov rcrl (bad) pushfq or ja repz push sub pop lret int pushq push jg fwait movabs jnp movabs js movsl push sbb lahf xchg rcrb or fadds retq retq leaveq mov ja scas jb sub rex.WRXB int3 leaveq mov rex.WXB stos push mov retq and test or rex.WRXB xor movslq push imul jnp movabs movsl adc xchg movabs rex.WRXB cli mov pop (bad) sbb mov xlat adc imul pop jmp pop or push mov pop lock and jnp test (bad) test rex.XB push fsts flds rex.RB lods cmp rex.WRX push cmp xchg (bad) movslq push imul (bad) mov jne push rcrl jb (bad) rcrl gs gs movabs mov (bad) xor pop mov out rcl leaveq mov mov retq push push lods xchg push pop retq cltd lea movabs mov ja rcrb and pop test adc push rex.WXB push pop retq push jae push jnp enterq xor mov stc push retq scas clc movabs lock mov (bad) movabs (bad) mov shrl in lahf rex.RB js pop retq callq scas (bad) int shll mov rcr retq (bad) mov rex.WX addr32 fcmovb push movslq pop push stos mov mov or hlt (bad) sbb jb xchg jae (bad) mov (bad) rex.WRXB rex.WRB movabs rex.WRXB imul mov (bad) xor xor jae xlat (bad) popfq out rex.WRXB (bad) mov cmp xor rex.WB sbb test sbb retq imul rex.WR iret mov mov outsl xchg sbb (bad) sbb (bad) push rcl fldenv lea (bad) pushfq sbb mov rcll shlb mov (bad) push pop pop movabs sbb (bad) pop sub jae mov rex.RB movabs xlat (bad) (bad) xlat rex.WX jns mov xlat push push push pushq movabs adc mov (bad) push ss cmp jle movabs test xchg test pop sbb imul retq push jge pop addl iret test sbb fcoms xlat (bad) mov mov mov add addr32 lret (bad) rol add rclb (bad) lahf push xchg jne mov adc (bad) mov mov cwtl push xchg xchg cmpsl jg jns pop movabs retq (bad) (bad) pop rex.R xor (bad) movabs flds jns (bad) lock pop mov add (bad) fldenv callq fsqrt pop stos roll mov ja xchg mov lods pushq outsb sub rex.XB mov (bad) mov lret sarl rex.RX (bad) imul lahf (bad) popfq int3 push rex.RXB push adc (bad) (bad) (bad) mov lret std rex.XB rex.X push xchg ja xlat (bad) (bad) pop or adc movsl xchg mov rex.WRXB sahf xchg cmpsl adc (bad) lahf mov rex.R (bad) retq rex.WXB push enterq int loopne stos movabs mov xlat rcl xchg iret or (bad) mov rex.RXB shl push add je (bad) cli jnp mov cmp jae xchg fnstcw push jnp mov test jne xchg mov mov mov pop cmc rex.RX pop mov adc mov push mov cmp (bad) mov int3 xchg movabs mov mov (bad) mov xchg (bad) jns int adc mov (bad) (bad) mov (bad) rcr rex.WXB (bad) push rol (bad) (bad) lahf rex.RXB jno (bad) sub int mov (bad) and xor mov lret (bad) mov mov movabs int pop (bad) callq (bad) mov jbe lea rex.WX xchg movswl leaveq cmpsl rex.WXB sbb xchg push jno ss push mov pop mov xorl jne xchg sbb or (bad) mov cmp xlat mov scas xchg lea pop jae mov stos test (bad) mov rex push xchg (bad) cli fstpt jb divl pop cli push push popfq jns xchg (bad) retq xchg mov xchg mov mov push pop movslq jae jnp movabs xor test mov xchg (bad) pushfq mov sbb rex.WX outsl sarl leaveq cmc (bad) add mov imul iret test cmpsl leaveq lahf pop shrb pop mov cltd shlb movsl retq jne lret imul rex.WX jnp (bad) stos retq cmc cmp rcl mov pop jbe mov mov cli movabs mov fwait shll shrb jae lods (bad) imul xchg nop jno movabs callq jns movslq pop jl lods je jrcxz jnp,pn adc imul rex.X lret ja setae ficoml sti stos cltd push mov push sbb fnstcw iret (bad) jnp mov rex.W (bad) movabs int3 or rex.W jb mov ss (bad) shrb jmpq (bad) pop push and lahf mov jae or js lahf (bad) push outsl mov mov test lret out test cmp movabs not mov test test jge pop cwtl btc xchg pop fadds xchg xor sti push mov rcl (bad) int jne roll (bad) (bad) xchg jns pop int rex.RXB imul (bad) sub callq mov xchg mov retq cmc iret cmp jae test push insl jae xchg adc mov mov xor test (bad) or popfq mov lods leaveq rex.W movsb (bad) mov (bad) repnz mov (bad) jg push test int pop (bad) xlat sarl (bad) retq xlat xchg cltd mov mov (bad) int mov retq pop imul movabs rex stos rex.B pop adc mov movabs stos pop xchg (bad) ds shrl pushq (bad) xchg (bad) int cwtl add callq xchg mov add stos sbb cmpsl sti lret mov imul movabs or adc (bad) (bad) (bad) fsubrs pop shr rex.XB jno xlat rcrl jmpq push cmpsl sarl rex.WRXB outsl mov push int pushq scas (bad) ffree imul cmp jb jae rorb stos mov (bad) jb xchg adc (bad) pushfq cmp fcomps xchg mov test mov sub push mov mov (bad) rcl imul pop shrb mov ficoml movabs popq pop mov rex.XB imul sub jne mov iret lret (bad) callq cmp cltd test (bad) (bad) push retq sub sub mov cmp cltd pop rcr jno (bad) cmp xchg ja leaveq lret in mov (bad) jbe rcrl jnp rex.WRXB push mov in (bad) pop mov movslq xchg mov test sahf cmp rex.RX xor jrcxz xlat out xlat (bad) pop shrl iret cwtl pop rol pushq notb xchg mov pop mov shrl shll (bad) push retq clc mov rex.XB test (bad) mov loope mov je mov addr32 int rcl cmpsb jns test xlat insl (bad) lock shlb loopne jbe mov (bad) push rex.XB iret rol pop lret (bad) jne (bad) (bad) or jnp fsub push and mov rex.B add xchg rcr jae ja fistp (bad) xchg push int and sbb repz pop pop test popfq sbb xchg (bad) imul rclb (bad) pop sub mov xlat jno xlat jns xlat movabs jl test icebp test retq adc cmpsl sub xchg push sarl and rorl cmp retq neg (bad) mov imull xor repnz jns test fmuls lret mov xchg (bad) iret leaveq pop xlat movslq add mov mov imul fs fild test clc jnp and addr32 movsl rex.RX movsl test mov mov (bad) stos rex.WXB xchg movabs sbb imulb cmp leaveq push xlat retq fnstcw iret mov adc and movabs shrl (bad) roll cmp (bad) xlat xchg mov rex.WXB rex.WRXB rex.RB int add out retq or enterq mov int3 movslq imul (bad) (bad) out rcll stos rex.X mov adc stos adc lret pop push push or ja (bad) out push (bad) (bad) (bad) xlat (bad) (bad) push mov jrcxz rex.WXB mov xchg jnp (bad) mov sahf scas rex.RB cltd rex.WRXB adc xchg xlat add xlat mov rcrl shrl rex mov mov push push cmpsb (bad) mov (bad) mov rex.WRXB out push mov lret (bad) xor rex.RB retq flds movabs mov mov mov lea adc (bad) shll (bad) sub (bad) mov mov retq pop xchg ja adc lret (bad) xchg rex.WXB rex.WRXB lret rex.WRX rex.RXB mov imul (bad) mov push mov iret (bad) pop push pushq stos out insl cmp jb (bad) stos (bad) cltd xchg mov insl (bad) subb cmp rex.WRXB rex.WX push movabs jne lahf or xchg xchg loopne iret leaveq (bad) push rolb jp test (bad) js pop (bad) pop mov lods xchg outsl rex.WRXB rex.WB (bad) rclb pushq or xchg int3 pop pop shll leaveq adc iret out adcl push leaveq xlat mov xchg fmuls rex.W mov (bad) mov push imul stc (bad) shrl mov lock nop (bad) imul (bad) mov (bad) scas xor sarl mov xchg mov sbb jae push xchg pushq add push rex.WB out push int xchg nop stos rclb imul repz rcr leaveq rex.WRXB ss push jne cs (bad) mov (bad) push mov mov insl shr movabs int3 pop repz (bad) lahf fwait (bad) fchs retq xchg mov je mov xlat outsl out xchg jno (bad) rex.WRXB push jnp scas rex.XB (bad) (bad) mov iret xlat xlat orl xchg xlat imul mov mov push (bad) insl jne adc (bad) repz push (bad) cli rex.RX lret (bad) mov imul js mov (bad) test (bad) (bad) push lahf insl xor pop mov int cltd jnp push rcl ja rex.WRXB adc fs mov imul imul popfq xlat scas int3 roll push mov (bad) mov lret (bad) cmpsl xchg xchg (bad) test sti (bad) pop (bad) (bad) rcl jno rex.XB test mov stos sti push popfq in (bad) cltd mov (bad) jle sbb sarl addr32 iret or cltd mov or xchg cmpsl pop retq imul mov or stos mov pop es (bad) mov (bad) push rcl (bad) xlat sarl mov mov pop fidivl fs lea mov xlat popfq jge int3 rorl out push rex.W insb sub add xchg lods xlat insl mov jp fwait (bad) mov mov mov cmp nop add mov mov mov js rex.WX mov xchg roll jae jmp rex.WRX imul (bad) or rolb insl rcr xchg insl (bad) mov iret jb (bad) test insl xchg lods add rclb cmpsl and (bad) mov test (bad) jno icebp lahf xchg xchg mov gs xlat and sbbl test rex.WRX popq fdivrs flds cltd add pop cwtl movslq xchg lahf movabs mov (bad) repnz adc xchg rol rex.RXB cld rex.RXB movabs lret stos (bad) rex.WRXB cs pushq xor mov iret jae test lea imul mov movabs mov mov cld jg mov lea mov loop lahf stc pushq leaveq rex.WR int3 test lret movabs add cmp addr32 sarl mov lret xchg push sbb pop outsb (bad) lret mov lret jp (bad) (bad) jmpq (bad) xchg test xchg rex.WRXB push test retq rex.XB rex.WB shll jns mov xchg (bad) cmpb rcrb jb jne jge xchg (bad) (bad) xor mov mov (bad) pop xchg cmp clc jge push (bad) pushq insl rex.WR movabs xchg jno push stos (bad) lea xchg sti rex.XB mov cmpsb xor test rex.WRXB mov iret push (bad) rex.WXB mov xor (bad) (bad) mov roll rorl mov enterq pushq retq (bad) xchg add jge mov fwait adc push (bad) (bad) (bad) rcll add movabs (bad) sbb jno mov test rex rex.B (bad) je test retq (bad) pop xlat test adc mov (bad) rex.XB in rcrl push push movabs jg lret add push pop (bad) out xchg mov movslq push mov (bad) adc push xchg not test rex.WRXB retq (bad) mov xchg loope rex.WXB pushfq rex.WXB or jg int jp lret (bad) mov callq (bad) or xchg pop movl mov mov callq fsubrs movslq xchg xchg jne pop rol movabs mov sarl subl xor jmpq add imul loope (bad) (bad) rorl (bad) xlat cmpsb pop rex.WRX mull fisubrl xchg xchg mov jp xchg rex.XB adc movabs scas pop ss jne xor ror shrl xor and sub (bad) mov lcall lods fwait (bad) jne (bad) clc xchg push iret (bad) jae retq fsts jge fwait mov iret adc (bad) cli cmpl rex.W ja sbb mov jg mov add jae (bad) jns roll pop xchg and mov fldenv xchg lods jl cmp ror xlat movabs (bad) jno fwait and rcll (bad) stos je test fld1 test cmp rex.W gs or jb iret cmp jno fwait test (bad) rex.WRXB repnz pop pop jnp jno (bad) mov (bad) mov xor scas cltd sub push pop pushfq jp js or imul xor pop test (bad) scas sti test push enterq rcl push (bad) movabs hlt mov outsl outsl sub stc push insl or pop fcmovnbe movabs rex.WRXB rex.RXB fnstenv xchg leaveq mov rorb pop jge rcll xor divb mov (bad) mov (bad) int rex.WRXB xchg int jne rcrl imul mov (bad) (bad) fwait cmp jnp movabs (bad) enterq or (bad) lods xchg cmpsl or movabs retq retq leaveq push jg testl enterq adc pop scas xchg movabs callq adc loopne mov lods and (bad) jb lret mov stos jp and (bad) push movabs or sar fldenv push imul rcll iret adc ja movabs (bad) xchg rcll fwait xchg rex.WX adc mov stos stos push ja popfq mov (bad) rex.WX mov (bad) movabs mov adc std clc xor mov sbb or xchg cmp rex.WRXB pushq mov mov scas test push shl rcl fwait imul (bad) (bad) lahf mov movabs rcrl rex.WR rex.R xor mov rex.XB stos (bad) int cmc mov rcrl push rclb out movabs mov jno (bad) rex.WB rex.RB (bad) lods (bad) cltd xlat push icebp (bad) pop fwait cmp stc rex.WRXB lahf fnstcw test rcrl jge cmp push (bad) jge mov mov movabs andl pop cmpsb cltd (bad) (bad) sarl sti pop and (bad) movslq jle fstps fldcw movslq ror (bad) jne mov (bad) mov or xor fdivrs sar rex.WR outsl xchg outsb rex.B jae lahf imul xchg rex.RX (bad) ja vpunpckhqdq xor xchg (bad) xor ja add pushfq retq xchg lahf sbb add xchg adc adc xchg mov rorl movslq xchg stc or sar mov rex.WRXB (bad) rex mov mov fwait rex.WB (bad) mov mov mov push sub lods xchg es movq (bad) imul mov mov lahf stos xchg xor rorl xchg rex.WRXB xchg push push xchg movabs mov cmp xor push mov cmc jrcxz stos (bad) mov rex.WX int3 scas rex.WX lods jns shrl neg (bad) xchg pop stos psubusw xor sub jns (bad) psrlq rex.WRB mov push or jns push imul pushq sbb (bad) jp rex.WRB mov jae (bad) lods rex.RXB lret rex.RX rex.WB in fwait xor (bad) jae xchg mov cltd rex.R test rex.WXB movabs (bad) (bad) (bad) outsl push addr32 (bad) rex.WX cmp fmul jge jmp pushfq roll mov mov rex.WRXB movslq xlat mov (bad) push mov add xchg cld rex.RX (bad) pop xor sub movsl movabs lods pop rex.WXB ja out (bad) mull pushfq fnstenv mov mov imul movsb lock push jrcxz mov jno shrl lods iret (bad) jns int rex.WRB mov xchg pop push movslq movslq (bad) xchg lahf adc cmp adc (bad) stos lea stos imul (bad) push xchg (bad) cmp rcll xchg sbb ja iret mov imul (bad) jno movsl fdivs mov imul add pop push std adc imul jrcxz jle test pop add (bad) sbb jno adc fldenv cmpsl (bad) mov (bad) ljmp mov adc mov mov rcll popfq xlat cmp test xlat xchg rex.RXB callq cmp mov add mov lret sub stos push shl jo jne (bad) mov imul pushq mull movabs rorl movabs clc movabs rex.WX rex.WRX movsb mov lahf sub cld jrcxz rex.WRXB rol lahf cmc jmp jno rex.RX mov stc rex.WRXB shlw xor and jne addb mov xchg loop adcl jg imul (bad) gs (bad) pop test std (bad) rex.WRXB rex.XB mov retq retq mov (bad) xchg leaveq fwait mov addr32 jae imul mov (bad) sub cmp rex.XB mov pop roll popfq out int (bad) adcl lret (bad) (bad) fcoml (bad) (bad) fsts movslq jns xchg lret mov mov xlat push cmpsl adc rex.RB mov mov sarb (bad) movabs jnp and (bad) rcll rex.RXB add mov mov mov rcll (bad) jb cmpl mov (bad) addr32 fwait push rex.WB movsl imul jno iret mov mov sbb mov iret ja xchg mov fwait or sahf (bad) pop lea lahf (bad) mov outsl lea cmp (bad) scas rex.X (bad) lea fldl movabs rex.WRXB mov lea sahf push pop retq flds stos lret movslq xlat lods rex.R and stc cwtl retq mov leaveq shrl (bad) fwait insl (bad) pop js imul xchg stc cmc retq (bad) xorl rcrb enterq leaveq xchg loopne xor rex.RX loop insl rcl jns cmpsl xchg shrl int mov test jb mov mov rex.XB pop rex.WB (bad) xchg ja jmp idiv (bad) clc fldcw (bad) and rex.WRXB xchg shrl rex.W js mov leaveq xchg (bad) jbe cmpsl imul rex.WRXB (bad) jns sar pushq (bad) rex.WXB xchg cmpsb test push xlat rcl (bad) rex.WRB imul jnp std push xlat xchg cltd icebp xchg sar mov rex.X push adc test and test lret stos (bad) push movsl fbld xchg push scas roll xchg rex.X out jns mov sub (bad) fstps xchg jbe sahf scas xchg mov cltd rex.WRXB jl jnp int3 movabs push shll int rorl fcmovnu popfq jmpq sahf pop mov pushq xlat rcrl lahf (bad) mov movslq (bad) and jmp cmpsb xchg iret rex.RB xor pop (bad) popfq rclb pop (bad) xor jrcxz pop xor xor fwait sbb sub (bad) iret rex.WR roll add (bad) mov test rex.XB push (bad) adc xchg xlat lret and gs movsl (bad) fadds fcmovb xlat rex.XB divb rex.WB rex.WX sub jne shl shrl pop adc push mov (bad) rex.WR (bad) rorl (bad) ja imul rex.WRXB push (bad) xchg xchg rex.WXB retq pushfq lret cmp mov rex.WR jge sahf outsl stc adc rorl loop lret fisubl lods pop lods ja iret movabs pushq (bad) mov (bad) pop jae cltd js int callq sbb out pushq cmpsl retq jns adc stos jns xchg xor (bad) mov xlat mov lret push pop sarb fdivs imul rex.X jns (bad) mov pop (bad) rcrl pushq retq loop push (bad) lret push (bad) fdivs cmp shll sub rol jno push adc jbe jge cmc rex.WX roll fxch pushq retq pushq jno xchg push mov mov mov shll popfq int3 loop (bad) pop jmpq jno (bad) cmp push imul movabs enterq sarl lret sub jo xlat imul cltd jnp mov popq iret test mov (bad) rex.WB lahf sahf sarl pop xor jl mov cmp cltd sarl push sbb xchg je rex.WXB (bad) in (bad) rorl fwait ja jmpq mov adc lock fcompl mov (bad) int addr32 stos movabs adc push (bad) fdivr mov adc movslq lret stos cld int3 adc (bad) jnp pop mov cli mov adc mov (bad) fldenv jns movabs fadds push or rcl pop xor callq and xlat sub mov (bad) mov cmpsl int in rex.WRXB retq mov or jge cmp int mov lea insb push movabs jns jge mov roll jb mov adcl (bad) test mov test push leaveq lret nop lods stos jno adc (bad) test leaveq imull insl orl lahf jp imul test (bad) xlat pop lahf rcll and or pushq (bad) rex.WRB (bad) mov mov jp jge jae pop movabs cli mov sahf jne adcb sti insl (bad) xor rcll (bad) rex.WRXB rcl pop sarl lods mov (bad) jae rex.W and shll pushq jns push rol (bad) pop pushq ror test (bad) (bad) jle retq sbb flds mov or xchg pop shl imul push insl xchg fldl int lret and push adc jno adc push lods (bad) pop pop xchg (bad) retq mov roll xlat (bad) (bad) imul cmpsl mov (bad) test jns test (bad) imul int jo pushq sbb (bad) scas rol mov (bad) (bad) mov rex.RB pop rex.WB jmp jns jns movabs pop lret scas xor movabs rorb push push retq fldenv (bad) rex.X int lret mov (bad) xchg rcll sarb jp jp subl rex.RX movslq rclb lret mov loop sub jns jnp mov rex.WX cmp shrb imul (bad) (bad) pop xchg mov shrl movslq jnp int movsb btr movabs pop cmpsl mov gs xchg jle movslq adc (bad) je adc rclb mov repz leaveq rex.WRXB rex cmpsl sar cmp or pop rex.XB stos xchg fdivrs jp (bad) test xchg clc outsl xchg clc fist js rex.WX rorb xlat andb iret rex.WB rex.WX rorl or iret xchg in mov mov sub sarl jg mov je negl jge movslq gs mov mul iret fwait add adc cltd cmp pop cmp (bad) movsl xchg xchg add xchg rol rol jl fs add int3 lock jbe mov mov fldenv or test fcom (bad) mov mov rcll mov mov andl (bad) cmp cmp cltd pop push in mov mov mov mov mov rorl (bad) sarl test jns sbb scas lret mov int3 cltd rex.WXB and (bad) push leaveq mov (bad) xor mov insl adc mov iret push lret push sub fisubl cmc jns movsl (bad) xchg lahf stos (bad) leaveq int3 movabs cltd clc add rex.XB jrcxz mov int3 ds xor int3 sub and jb shrb mov push data16 adcl fwait lahf lods mov js push rex.WRX adc push xchg rex xchg lret cmove jmpq sub outsl fwait cmpl cmp add stos jno shr int mov scas (bad) mov rex.W fwait repz movb imul rol enterq adc mov xchg outsb iret mov out xlat mov add rex.RX rex.WR mov xor shl int xor pop jns push lret test xlat mov rclb sbb ds rex.RX fxch cltd mov jb (bad) or jae (bad) pop cwtl lahf (bad) jrcxz jne pushq rex.WRB jrcxz lret rcrl (bad) adc cmp (bad) int xchg push rex.WRXB fldl2e mov stos xor (bad) leaveq adc stos iret (bad) mov jae rex.RXB add adc in movabs xor movabs sarl and (bad) rcrl mov xchg push ja lods rex.WX mov xor rex.XB mov popq adc xor jg sbb push outsl jne mov movsl mov push lea adc movslq movslq adc imul sub mov and iret imul scas lret xchg lret push fwait mov mov jbe sarl mov rex.XB sbb xor sarq xor jb stos jmpq (bad) movabs cmpsl (bad) mov stos adc rcl xchg sbb fimull adc out lods jbe jne rcll hlt push xchg (bad) shrl pushq (bad) scas adc iret leaveq xlat movabs jp out (bad) (bad) mov out fstps cmpl insb mov jrcxz in xchg cmp stc test mov xchg cmp jo (bad) (bad) lock rex.WR (bad) cmc movabs jns mov fbld pop retq leaveq cmpl xchg push (bad) test jno movabs xchg adc sti push adc push sbb rex.WX (bad) stc lret (bad) pop (bad) xor es (bad) (bad) int xchg cmp push push notb (bad) mov retq push xchg cmp stos xlat jne shrb rex.WRX leaveq int xchg test xor sub retq and iret fwait mov cmp mov movabs movabs movsl mov rex.X jb xchg sar xchg jns movabs mov (bad) notl imul push movslq xchg mov (bad) pop cmp leaveq jae out ja addr32 movabs rex.WRXB lret push imul stos mov test jb lea scas add pop jbe shrl cmpl mov lret mov rex.RB shlb xchg lods jg mov addr32 xchg xchg mov xchg xchg jp add rex.XB xlat stc test pushq jnp xor stos xchg or (bad) fwait test rcll jge retq pop xchg test ss lahf rcll jl (bad) mov imul test rex.WXB mov (bad) cmpsl adc push adc (bad) jne adc rex xor lret xchg xor rex.WX (bad) lahf xchg xchg push imul push push imul xchg lret xchg insl mov insl movslq lret (bad) rex.XB adcl adc push cltd int3 cvtpi2ps rorl and lahf movabs jrcxz test shrl xor jrcxz rex.WB adc (bad) xchg (bad) mov roll test push scas adc shll lret cmp mov imul xchg popfq lret retq adc in int3 or repz out xlat iret jmp lods xchg clc movabs pop sarb rorl or rex.R rex.WRB movslq mov mov xlat adc fsubrs fwait xchg popfq test mov mov cmpl xchg mov sahf retq psrlq xor mov xor mov lret lret (bad) rex.WX ficoml (bad) gs push mov popfq push movsl icebp jl sahf rcl xchg xchg std mov lret scas xlat jb shrl or fwait out xchg jp fwait add pushq xchg lods rcll jb retq cmpsl mov (bad) (bad) out xchg mov jrcxz xchg imul cltd jrcxz rol rex.WRXB rex rex.W rex.RXB push adc or pop stos movabs jns jrcxz xchg rex.XB rex.RB xchg xchg clc xor add lahf jne rex.RXB adc int3 mov rex.RXB int3 sbb int3 or adc sahf imul cltd imul jnp iret jae push xchg jo mov outsl int3 push rex.WX cmp xchg push rex.WX jmp rex.XB rex.RX (bad) scas outsl rcl test pop adc retq ss scas xor movabs rex.W loop mov xchg (bad) movslq rcll lret xlat test rex.WX out (bad) roll xchg leaveq adc shrb in rcl mov shrl and mov test lret jp fdivrs mov lret xor ficompl mov ja stos xlat adc leavew xchg mov xlat lods out mov jns xchg (bad) cltd mov mov mov cmpsb lret test (bad) mov fwait ja adc mov movabs movabs rcrb adc int or mov cld jbe xchg mov insl test movabs push lods imul mov push jno lret pushq xchg shll sub mov stos (bad) mov rex.WX jo sub (bad) cmp rex.WRX mov rcl rex.WRXB or (bad) (bad) out or vldmxcsr (bad) (bad) mov and pop (bad) enterq enterq jrcxz or lea pop xchg jnp (bad) mov mov stos stos sbb retq rex.R rex.R repz mov jno mov int fs xor sarl rclb push (bad) jg rorl cld cmp push stos int jne mov mov add rex.WRXB xchg mov shrl int3 mov pushq jno (bad) iret rorb jrcxz mov xlat rex.RX rex.WRB addr32 rex.WRXB movsl mov cmpsl adc insb adc jmp and mov (bad) push ja adc test fsts xchg scas movl jp movsb adc mov cmpsl rcrl and stos mov xchg xchg ja xlat cmp xchg (bad) xchg mov mov fsincos rex.WR (bad) cmp imul push xchg stos (bad) shlb fwait push pop xchg (bad) rex.WR xor scas mov cli cmc or cmp (bad) pop lcall jrcxz adc fcomi (bad) in mov (bad) jae mov lea cmpl fldt mov pop or int3 pushq jns lods and mov rex.WRXB jl sub jns es sbb add adc sarb hlt test add mov fs mov or (bad) mov (bad) fisttpl mov adc rex.R (bad) mov mov jo mov mov repnz icebp sbb fldt jl (bad) fcmovnb (bad) out movabs cmc in jrcxz (bad) add xchg (bad) fs cmpsl popq (bad) mov add rex.WRB test lret (bad) and and pop retq imul int3 mov rex.XB fwait stc (bad) stos in push and mov cli and decl mov out mov cmp (bad) lods fcmovne (bad) xchg pushq icebp push rex.RX mov mov xchg int3 jrcxz lock cli shll enterq fcomps movabs int xchg cmp adcl ja imul (bad) rex.RX fwait xchg imul movabs rex.WX (bad) ja pushq roll jne cmp mov xchg ja imul pushfq xchg rex.WX push jno jp test add loopne,pn adc mov (bad) rex ja imul (bad) pop shlb retq lret ror (bad) xchg rex.WX retq ja imul xchg xchg cmp ja imul mov jb int add or sahf mov adc movabs mov imul xchg cmp jp xorl sub xlat mov mov sar cmp mov movabs movabs and (bad) mov cmp rex.WX xchg pop stos jbe xlat test test mov nop cmp mov xlat mov (bad) push pop rex.RB imul or xchg cmp ja imul push (bad) (bad) imul xor adc movabs rex.WX adc jns rex.RX gs jo jbe cmp ja imul (bad) push iret mov ds insl xchg cmp jl xorl (bad) pushfq int xchg cmp int pop mov xchg cmp xchg lea imul rex.RX outsl xchg stos mov (bad) fcmove (bad) rex.WRB nop (bad) rex.XB mov cmpsl xchg cmp jnp xchg adc xlat jns mov int fldt (bad) pop (bad) outsl icebp or xchg (bad) stc leaveq retq xlat movabs xorl or fwait pushq nop pop and mov (bad) movabs push movabs imul stos xchg psrlq xor lret rex.WX cmp iret xchg mov ja imul rex.WX adc mov jns movabs cmp rex.WX jmpq and (bad) ja (bad) mov xor lods (bad) jne add movabs (bad) (bad) pop leaveq mov mov adc movabs pop xchg cmp xlat adc ja imul ficoml (bad) ja imul rex jbe xlat test (bad) mov adc and or adc xor mov scas (bad) sub (bad) add int leaveq int3 pop pop fistpl mov rex.WX fwait adc int xchg rex.WRX (bad) xorl cmpsl fistl mov mov (bad) push sbb movabs sbb shrl rex.WRB fisttpl or (bad) cmp outsb or std (bad) jbe rol test int or mov repnz (bad) xchg push jnp sub out push leaveq xchg in icebp jmpq sbb pop sub in (bad) std rex.WRXB rex.WRX test out jp sbb jae fisttpll mov std rex.RXB (bad) xchg xor (bad) (bad) int3 sbb mov and movsb imul jp sbb fsubl iret loop scas in rorl xchg jl rex.B and (bad) add jmpq hlt cmp (bad) (bad) mov (bad) mov sub jnp adc cld jb (bad) mov movabs jge (bad) pushq (bad) js jnp fmul rex.W fs mov mov gs fisttpl (bad) pushfq test xchg sub rex.X (bad) rex.WRX je clc (bad) push rex (bad) sbb pushq mov loopne insl shlb (bad) (bad) push xor xor fs mov (bad) (bad) es and fistpl mov cltd (bad) lock sub mov fsubrs fcmovne mov jb (bad) (bad) (bad) fcmovnb retq or (bad) push movabs hlt fldenv fwait xchg xor retq jmp xchg or int xorl retq (bad) in sbb and fildl sti sarl rex.WR test fwait imul clc adc fcmovnu out xchg sbb (bad) fdivs iret (bad) or test and mov (bad) movsl pop iret retq sbb stos cli (bad) jrcxz sub imul pop fistpl pushfq test fstps fwait jp (bad) push movl fimull fbstp add stos callq xor add xchg fstpt add rex.W add adc adc jae int3 rex.WR rex.WRX sbb mov imul (bad) pop fisub (bad) push sbb fisttpl xchg push pop rex.RXB nop pushfq fstpt lods or (bad) fistpl loop shr lret and fistpl add (bad) movsb mov push movabs (bad) (bad) fldt (bad) out (bad) sahf rcrl jmpq or (bad) (bad) xor addr32 sbb push je rex.RXB fcmovnbe cmp rcr adc hlt cmp data16 ds cli out cwtl jne fistl (bad) and or decl enterq or adc rex.RX or test orl sbb rex.WRXB sbb (bad) sub mov fldt cli sub xor movabs test imulb pop mov fwait movabs cmp pop (bad) jp notb fadds xor rex.R or (bad) xchg adc jp (bad) rcrb sbb fcomp (bad) sub outsl leaveq pop jb cmp movsb and retq (bad) mov xor hlt push mov mov fiadd fwait fwait adc rex.WRB imul pushfq (bad) (bad) rex.W cmpsl add test jb rex sub out lret stos fildl rex.RX mov pop jae iret pop rol mov adc add orl jp cmpsb lods cmp xchg (bad) clc fldt imulb (bad) rex.WRX fwait icebp movabs rex.XB rex.WR pop add cwtl (bad) pop push repz pop and cmp test xor imul sarl mov lods sbb (bad) pop push (bad) mov push fcmovnu in xor (bad) cmp ficom fucomi sub movslq jg jge mov cmp std jrcxz imul xchg mov stos fdivs or xchg rex.R or pop test fcmovu mov and mov lret rex.WX movabs sub fistpl movslq cli mov rex.WRB stos mov rex.WRB in mov xchg (bad) and rex.RXB cs fstpt jp (bad) rex.WR (bad) pushfq cli loopne,pn push fdivrl fildl int3 and jge movabs rex.WR fldt xchg rex.W scas rex.WX int3 enterq cmp movsl test (bad) lahf xor movabs gs xchg (bad) hlt add fildl fistpl lods imul (bad) imul fwait cmp popfq (bad) addr32 or pushq pop add xor or sub add pop mov jp loope nop ja int out roll mov (bad) out or (bad) cmp movsl movabs clc (bad) loop (bad) stos rex.XB pop fstpt xchg mov std sbb and mov (bad) adc mov cmpsl cwtl xchg mov fcmovnbe sub jp cmp jns (bad) jbe adc cltd sahf movabs (bad) loop lods xor mov mov je jnp jge sbb movups mov (bad) mov push jae (bad) (bad) jrcxz (bad) lret iret adc lods int push rex.RXB cmpsl jp sub lock enterq movslq mov imul data16 rex.RXB (bad) scas adc (bad) pushq cmpsb data16 insb pushq (bad) cmp es jg pop sub retq imul retq je mov and pop imul sbb insl jne imul (bad) rcrl loopne sbb fsubl outsb lret or mov rex.RX movabs cmp fxtract mov rex.RX jmp (bad) (bad) scas jl mov fwait sub and pop rex.WXB jg outsl fwait scas loop (bad) push cmp or cld repz outsb addr32 or pop (bad) xlat sub cmp xchg fwait out (bad) test sub enterq jno (bad) fcmovnbe xchg (bad) sbb icebp jmpq imul je pop xchg push cmp stos sarb pop (bad) jns out je fldt (bad) rex.WRXB push mov xor or pop jle rorb movsb and xchg jbe mov lods cmp fisttpl imull and xor fistpl callq (bad) xlat cmpl sub lock (bad) lea rex.WXB testb clc add mov gs mov mov stos rex cmp sbb (bad) fistpl add xor movsl rex.WR cli mov data16 fcmovnb add callq lret icebp mov movabs cld (bad) jae int (bad) xchg fistpl mov xor insl jnp mov ficompl mov stos (bad) test movabs movabs mov enterq jle sarl movslq mov stos rex.RXB add sahf pop insl scas mov mov cmpsb jbe xor mov xchg in int3 mov mov je pop lock jno xorl fild or rex.WR (bad) jp insb repnz (bad) mov jl pop (bad) xchg fistl (bad) sub pop fmuls (bad) mov adc jnp (bad) jg fistl loope (bad) push push imul xchg gs xor lret pushq (bad) fisubl shl jmp jp xor jmpq movabs pushq (bad) sub and sub cmp pop fisubl cmpb (bad) sub mov jno cmp (bad) nop cmc or sbb ja pop adc pop (bad) rex.XB sub xchg sbb pushq or out movslq push ficompl add mov mov or insl jbe and rex.WX rex.RXB clc int repz mov mov test rex.RXB pop adc (bad) add not jbe,pn jp (bad) callq cmp lahf jae (bad) add mov movslq nop imul fstpt outsb add adc test (bad) xchg fistl mov fisttpl pop jno pop jns push pop je rex.RB lret sbb or mov jb pop leaveq add or xchg xchg outsl jp repz sub jbe addr32 insb (bad) jnp rex.WRB or fildl ja loope shll int mov adc jno cli mov rex.B (bad) pop shrl xchg lret sahf rcll sbb cmp cs leaveq (bad) mov add popfq (bad) (bad) rex.WXB pushq or rex.R rex.WR (bad) fistl or pop cli (bad) mov xchg imul pop and pop movsb movsl movabs (bad) mov idivb callq (bad) imul mov cltd in fstpt (bad) jmp movabs (bad) movslq cwtl hlt rex.WRB repz jo add (bad) sub jg xchg out sahf jrcxz ds push jle push fucomi xchg push movabs out and ds rex.WRXB mov (bad) adc pop add cmc (bad) jae add (bad) xchg out int pop imul retq pop or xchg leaveq (bad) (bad) rex.X adc fisttpl xchg insl xchg (bad) sub fldcw test (bad) stos push cld jp pand cmpsl (bad) and xchg mov out pop pop mov fistpl imul fistpl rex.RX rex rex.R add (bad) fildl and fidivr loopne mov jp (bad) pop cmpsl mov leaveq popfq (bad) mov (bad) idivb movslq pop addl movabs sub mov xchg push (bad) notl xor (bad) add outsl gs mov (bad) (bad) jge adc out mov sbb sub rex.WXB push mov (bad) out movabs add cwtl leaveq (bad) outsl rex.WR lahf mov js rol mov pushfq ja pop mov add nop fcmovnu (bad) jne stc or pop fcmovnb shlb sbb rex cmp outsb xchg sahf out add sub imul push (bad) pop retq adc xorl add pop push test lods adc cmpsl add mov push stos push rex.XB rcl (bad) or xchg (bad) test push add xchg (bad) test js callq retq orb mov cmc or mov mov jmp outsb cmp pushq rex.RXB cmpsb push (bad) hlt test js movabs sub cmpsl mov pop mov add vpcmpeqw lahf pop xchg xchg xorb sbb (bad) jnp retq (bad) xor stc cltd shll and mov hlt adc std stos test mov rcr cmp and fistl pop (bad) sub xor addr32 xchg cltd fstpt repnz mov xor imul ficompl pop sbb jnp movabs mov int out lret movabs roll roll fsubrp popfq mov cli push mov xchg pushfq scas fildl jmpq or xchg movabs rex.WRB cltd adc notl (bad) jns test mov lock pop rex.WB jl rex.RB mov movabs fstp loope fwait (bad) int xor (bad) (bad) jge lcall (bad) pop push test rex.WR ss cmp (bad) mov jg in scas rex.WR sub (bad) mov cmp sub push loopne or ja mov movabs repnz (bad) lret stos mov pop add push sub addr32 es jnp,pt xchg test rex.RB rex.WXB pop cmp neg stos jae pop push lea mov mov (bad) es pop (bad) adc pop sub movabs loope (bad) cmp jne loopne fwait add mov cmp (bad) std cwtl rcrl push cli lods or pop jle test pop std cmc push rex.RXB cmp (bad) ja fistl pop loope fildl incl sbb (bad) insl xlat jg (bad) mov jae xchg (bad) (bad) fistpl push xor push fsubs fnstcw (bad) movabs mov fldt jbe fs retq rex.WX cmp mov rcr jo jnp xchg sti (bad) xchg mov (bad) xchg jae xor rex.WRXB sahf ss repnz lock pop fistpl mov or mov sub pop mov (bad) ja addr32 pop fwait pop fdivl (bad) fisttpll cmp (bad) (bad) in add rorb (bad) jae sahf mov test sub in (bad) pop cwtl (bad) (bad) lret fwait sbb shrb fwait int3 (bad) xor js add push rex.WB (bad) rex.R xchg mov cmp test andl jp mov sub clc adc xor pushq xor lahf and (bad) push adc push fstpt sub or (bad) fdivrs mov xor mov mov rex.RB (bad) sub movabs rex.XB pop cltd rex.RXB rex.WXB imul (bad) movabs mov rcr test scas out xor (bad) loop in sbb xchg fildl scas adc pop cmpsl lea cmp sub ds in xchg test rex.WR (bad) and mov fsubl jp pop fcomps jns xor (bad) outsl jbe rex.WXB push movsb jmpq (bad) out (bad) fcmovne jbe (bad) sbb fld imul je gs cwtl (bad) rcll add rex.WRX fcoml mov je ds jle mov or (bad) in fisttpl pop jns pop push jne ja (bad) imul adc popfq pop xorb add (bad) rex.WX mov rex.R and jle shll rolb rex.R mov pushfq (bad) mov pop addr32 mov (bad) (bad) lret pop jg fwait cmp fcmovnb popfq addl or rex.B xor (bad) sub adc sub cmp (bad) rex.WR jno sbb and or pop rex.RX ss (bad) jnp xor ja movabs enterq (bad) pop js movslq retq jno mov fisttpl push (bad) fildl rolb xrelease (bad) mov mov (bad) xor push cmp fldt loopne push loop,pn retq xorb add jge push (bad) scas mov push movabs cltd mov cmp rex.RX enterq cmp fildl loop cwtl rex.XB cmp (bad) sbb scas lock addr32 mov rex.WRXB (bad) rex.RXB xchg xor cmpsl (bad) and push fldt loop ror lea mov es adc xor rex.X rex.WR (bad) movslq (bad) xor movsb or hlt (bad) (bad) (bad) mov mov adc sub test addr32 hlt movabs pop cwtl (bad) ficompl adcl gs xor xchg mov cltd fcmovnbe push sbb fwait mov insb sti lods scas jne jae ss fstpt scas jae mov mov imul and xor pop adc (bad) stc jmp (bad) out push sub jl sbb (bad) xchg rex.WX rex or xchg mov imul (bad) (bad) out xor jnp pop adc movabs fidivrl cmp xor lret (bad) pop rex.WB fldt adc sbb (bad) (bad) js mov test mov mov fisttpl jecxz and jmp sbb hlt mov std xor rex.RXB sarl cmp mov or pop movabs sbb pushq (bad) iret fcmovne shll (bad) callq leaveq sub fistl (bad) gs rex rex.WX ss insl jle fisttpll lret jmpq fnstenv adc movabs mov (bad) xchg pop ficomp (bad) mov mov mov leaveq (bad) xor (bad) (bad) pop sub push xor fwait movslq lods pop addb and outsl ds (bad) pop rex.WRX stc fwait mov lock test pushq rcr jge movsb (bad) sbb jp lret mov movslq sub loop rex.WR es mov pop jo xchg jle int push rex.WRX xor rex.WR mov cmpsl jne add sbb jl mov fucom (bad) fldt test mov sbb (bad) pop sub (bad) or sbb push setnp stos pop addr32 add or loop imul xchg rex.WB pop jo (bad) add jmpq lock fildl (bad) sub fadds and mov jnp scas fcmovne (bad) insb push fsubp jp int3 adc cmp in sbb sti pop fstpl or fcmovne mull imul mov add fstpt jo test and enterq int3 rex.X rex.WR fldt rcrb loop xchg (bad) fwait and or rex.WRX cmp fwait cmpsl cs (bad) (bad) (bad) add stos xor pop cmc rclb sbb fstpt and out imul fisubrl std fistl test xchg mov jae mov outsl fistl add (bad) sti pushq (bad) and and and xchg cmp (bad) fwait cmp int3 std mov add cmpsl mov xchg jg (bad) jmp insl cmp mov adc mov add lret push fistpl and sbb lods subl outsb ficom (bad) (bad) (bad) xor leaveq mov xor adc xchg xchg (bad) (bad) test and fcmovnb xchg mov push orl fsubr (bad) jl cli fcmovnu ljmp or xchg fstpt fldenv fs xchg xor cmp (bad) (bad) mov (bad) sbb cwtl fs (bad) jo sbb outsb fstpt add xchg sbb sbb (bad) sbb (bad) orl push fildl lods jp (bad) int3 (bad) mov ficomp sti pop fsubs fcmovnu (bad) jns insl cmp adc retq imul (bad) fist movslq (bad) leaveq cld (bad) mov xchg pushq mov (bad) (bad) mov out shll shrl fistp and repz adc sbb xlat pop (bad) sbb adc (bad) (bad) std int std test add add adc in out (bad) jb (bad) je icebp movabs jno pop xchg rex.RB or and js cmp sub cmp rex.WRX jno cmp (bad) pushfq rex.WR rex.WB rex.X mov sub or cmpsl mov push mov mov jne and (bad) sbb js cltd rex.WX sub mov mov lods xlat sub adc cmp add cmp jnp cmp fucom pop (bad) jl cmp xor lea cmp (bad) lock xor adc adcb xor mov xor stos sbb (bad) pop jge sbb (bad) push rex.R out (bad) lock leaveq sbb jmpq cmp callq js or idivl jle (bad) (bad) mov xchg jle cmp rcr ds cmp sbb mov adc push (bad) jle ss jge (bad) mov and in rex.WR scas jg sub lcall jnp jmpq out (bad) orb out retq or (bad) rex.X rex.XB rex.XB xchg adc pushq int push (bad) jno and mov and int or mov cmp jbe lret loopne outsb rex.B cli in movslq sub (bad) (bad) lock (bad) adcl ja and rex.X rex.R adc mov xchg insb or lret iret add stos rex.RX xor sub mov jo sbb je rex.WRB sarl (bad) jb rex.WRB adc rex.WX rex mov push cmp out (bad) icebp movabs jp jne lods rex.X sub (bad) movsb (bad) (bad) add sbb mov movabs andl in sub or stos adc sub loope sbb sub jg mov xchg (bad) jrcxz lock cmp xchg push mov push stc mov popfq ds cli cli mov cld xchg rex.WXB xor xor mov jrcxz adc (bad) cltd pushfq lahf (bad) mull lcall (bad) clc push movsb repnz repnz (bad) (bad) (bad) cld stos mov test (bad) (bad) ljmp iret adc test sub fwait push (bad) pop cmp xchg mov jns (bad) mov imul (bad) jge add add imul (bad) push (bad) xchg movsl lea jge addr32 pushq adc mov insb and mov pop cmp pop jno mov (bad) cmp rex.WRXB (bad) mov (bad) in add adc (bad) movabs cmp out and rex.WRX (bad) sbb fistl push and and jnp rex.WX mov int3 (bad) and jne mov imul (bad) repz ss jnp retq jnp (bad) stc xchg test movabs pop (bad) ja fcoms rex.XB movabs jmp xor (bad) lahf clc sbb rex.WRX scas xchg scas mov jg adc out sbb nop cmpsl retq test (bad) popfq add hlt fiadd mov adc cmp js xchg pop add jge pop sbb mov lret pushq fwait (bad) in xchg rclb fcoms rex.WXB mov jne or sub xlat (bad) ja js rex.RX (bad) (bad) (bad) decb movabs jl xor xor repz js lock stc cwtl in out rclb (bad) lret pushq out out jrcxz xchg rex.R rex.RB lret (bad) xor (bad) or or lahf test fmuls or mov (bad) (bad) and outsl push (bad) jrcxz and cmp (bad) out icebp out sbb cmp mov push subl xchg sbb lea cmp xlat imul xchg rex.RB adc int3 jmp (bad) jl (bad) ficomp js (bad) repnz in (bad) rex.RB xor fmul hlt cld fnop or and push push xchg cmp mov rex (bad) (bad) adc fbstp (bad) (bad) (bad) cld or cmp (bad) (bad) (bad) dec repnz stc out retq repz in jrcxz xor roll add rex.WB xchg add (bad) cmp out xor adc xor add or movabs movsl rol scas negb (bad) pop xor rex cmp mov xor mov insb stos (bad) sbb jne sbb add loope pop jge (bad) cld fsts push and xchg add (bad) mov addr32 xor rex.R jle icebp mov scas mov cli xchg rex.XB lods (bad) and out (bad) mov xor mov sub sbb xchg lea jnp scas cwtl pop jno movabs xor (bad) (bad) lcall lahf gs stc mov pushq xor out jmp gs lock rex.RX pushq xchg clc out stc insb add stc mov pop rex.B rex.RXB xchg add rex.R xor (bad) or icebp pop or pop jl (bad) or adc lods in rclb sbb (bad) mov push add lea xor data16 (bad) or stc (bad) cmc cmp add test jmpq push orb movabs adc (bad) movabs jl movabs jnp rex.WRXB mov jmpq lret (bad) je pop cmp rex.B mov loop sub lods rex.B ss int3 and imul rex.WRX faddl mov pushq cmpb (bad) (bad) (bad) cld jne shrb (bad) (bad) jmpq adc adc add jle movabs jno mov cmp push ja cwtl xor insb cmp or fbld add add or jrcxz out sub iret pop xor imul rex.RX (bad) rolb fwait mov xchg jbe icebp xchg xor mov sbb (bad) bt stc clc bt cmp jmpq callq jmpq insl repz sub pushq sbb xchg imul and fs sti (bad) rex.WRB adc repnz cmp (bad) pop xchg push fs (bad) jb imul iret and movsl nop cltd ss add cltd (bad) jne retq (bad) (bad) sti jmpq out jp test jne rex.WX sbb ss je jmp (bad) iret sbb xor add cmpsl imul (bad) (bad) incl add (bad) (bad) popfq rex.RXB rex.W movslq movsb mov sbb adc jl mov (bad) jne jbe (bad) mov cmp xor callq xchg pushq mov sbb mov mov (bad) clc mov push rex.WRX not std and pop subb mov cld mov cmpl mov jo sbb movsl and mov cld xchg (bad) pop push mov sbb pop mov mov or xchg std (bad) and (bad) adc mov pop minps push (bad) add adc (bad) (bad) cld rex.W rex.W rex.RX (bad) (bad) lcall (bad) out pushq rex.B add hlt outsb test cmp or or (bad) adc addb repnz insl pop cmp add cmp pop xchg test loope xchg addr32 mov rex.X rex.WX std push cmp test fwait sbb pop and or xor mov rex.B pop mov sbb (bad) and cld push (bad) (bad) add pushq mov rex.X rex.RXB add in jge or rex.B and movabs jmpq mov incb add outsb push cmp js or mov hlt int3 or rex.WRX pushq rolb xor cld rex.X je stos (bad) (bad) (bad) incl mov xchg add xchg pmaxub repz int mov shll or add add pop sub mov mov es (bad) psadbw mov push push icebp fnstsw xor (bad) mov jae (bad) jg mov (bad) outsl rex.XB jge mov (bad) clc and jmpq imul cmp clc bt cmp add jmpq jmpq jmpq xor jge mov rex.R pushfq rorb mov adc jns js sub je movabs loopne (bad) sahf pushq xchg insl xchg pushq jne fldcw (bad) notb fnstenv adc add xchg movabs adc mov test stc repz pushq orb (bad) sti test (bad) incb in mov and jle pop sub popfq (bad) (bad) (bad) inc pop cld (bad) cmp cmp rex.RXB insb sub push outsb lret and insl (bad) pushfq int gs push sti push add xor cwtl (bad) in jle (bad) gs mov and (bad) js push cmp decl orl mov or lea rcr not not mov movzbw mov bt bt xor cmc stc cmp bt repnz jmpq orb (bad) repz jb sbb retq pop (bad) mov xchg mov (bad) (bad) xchg cli in js sbb push fnstsw pop scas mov movsl (bad) test pop or (bad) rorl and rex.WXB add pop movabs mov lock sahf xor divl fs sbb jo fistpll rex.RXB fnstcw rex.WRB mov sarb cli pop negb movslq (bad) (bad) (bad) cld sbb (bad) lahf (bad) (bad) (bad) (bad) (bad) ds mov mov pop (bad) push add add sbb and xor movsl xchg enterq mov addr32 mov mov shll jne mov mov or retq stos (bad) rex.WB rex.W movslq mov sbb lret pop jmpq add jmpq jmpq jmpq rcrl jae sbb mov scas pop xor cltd js jge movsl and push in xchg (bad) pop insb icebp xchg iret scas pushfq (bad) cld (bad) int (bad) (bad) jle addl mov (bad) fdivrp enterq fadd or or xor je xchg cli rex.WR fs pop sub mov sti flds (bad) (bad) (bad) (bad) scas adc int3 rex.W loopne add sbb retq inc rex.X xchg push hlt movsl pop adc mov add add cmp lret (bad) or notl out je xchg cmpsl (bad) lock xchg enterq rex.WXB adc pushq movabs icebp movabs sbb sub lret pop jmpq movabs sub (bad) mov rex.WXB mov scas (bad) ja sub (bad) fldcw mov fadds jnp pop xor movslq mov fcmove (bad) add movabs stos and and movsb xlat sub repnz xor fcomps sti mov add rex.W (bad) (bad) decb lods push in stc imul xchg rex.R and add cs (bad) (bad) (bad) decl lret (bad) pop (bad) mov and adc pushq (bad) jnp sbb movsb decl sbb insl pop clc enterq or lods outsb rcl sarl lret cs pop leaveq jp sbb and jno xor jle push jge sub jl loope xor insb jg or xor xchg rex.RXB adc (bad) lock fs cmpsl and or fdivrp (bad) rex.WRXB sahf cmpsb mov pop cmp pop addr32 sub cld push push fstps cmp rex.WX enterq adcb in (bad) sti movabs insl lods push xlat popfq std mov in lods int cmpsl fdivr (bad) (bad) decb loope or pop push cmp mov (bad) (bad) decl jo (bad) cmp pop (bad) jg rex.RB rex mov neg rex.RXB xor movsb mov pushfq pushq retq (bad) (bad) jno shll rex.WRX rex.W (bad) sub (bad) add push (bad) mov pop (bad) fidivr mov and mov test ror rcl push cmc xchg mov xor sub lea lea jmpq clc out rex.RX adc and ja callq jl jrcxz std push xor add callq add jae (bad) rex.RX pop xor mov (bad) push (bad) pop rex.RXB mov sub mov (bad) (bad) lea clc test rex.RXB sbb (bad) decb mov xor rex.WRXB jae jg mov clc fs mov sub or pushq cmpsl scas push popfq mov sbb xchg (bad) jae mulb rex.WX pop (bad) (bad) (bad) callq movabs out (bad) outsb or (bad) div jne mov jns pushfq rex in rex.WRX scas pushfq mov callq nop cmpl add cmpsb ja (bad) jne int mov and rex.WR jmpq fldt gs push (bad) rex.RB int mov popfq sbb popfq sar rex.WB icebp pushfq jl mov or rex.RX xlat and testl or fstpl pop idivl nop callq pop xchg movabs and push (bad) (bad) sahf scas rex.WRXB rex.B rex.WXB pushq pop rex.X cmp adc (bad) xchg fs imul loopne movsb xor jmp or jnp rex.WXB icebp pop push callq sti (bad) (bad) (bad) cld sub (bad) (bad) (bad) (bad) out (bad) (bad) sub in xchg movabs decb add mov lea (bad) (bad) stos ficompl mov add (bad) fnstsw enterq xchg sbb adc rex.R pushq sub mov and jle faddl pop xor pushfq jl sbb jno adc or pop fninit mov jne pop addl loopne (bad) or pop mov hlt movsl (bad) sbb mov cmc push iret mov cmp mul rex.B fs clc cld out pop (bad) sbb movabs (bad) cmpsl (bad) (bad) mov or mov mov es add popfq (bad) out (bad) (bad) inc jl sarb mov push cmp sub (bad) int3 mov or je push hlt xchg mov jl retq notb movslq sbb add rex.WB jl (bad) int pop ficom icebp fbstp (bad) xchg divb fnstcw (bad) (bad) movsl hlt pop fldcw jrcxz sub (bad) push ss mov loop out xor rex.WXB jl pop lea rex.WR rex rex.WRB and std sti sub sahf enterq and adc sbb (bad) push callq and (bad) (bad) movsl rex.X rex.WXB imul push (bad) jae cmp sbb mov jo pop jge iret sub imul push (bad) retq and pop or or adc std (bad) out rcl (bad) (bad) (bad) sti mov (bad) (bad) (bad) (bad) stos xor je (bad) rex.RX xchg push clc lret in rcl sub add add sub in callq mov push sub movabs movsb cmp jnp rex.XB (bad) and lock cmpsb mov adc mov (bad) or mov es xchg mov dec cmpsl (bad) loop test pop pop cli je sub fs rex.WXB jge sar lods adc leaveq adc mov mulb fadd icebp rex.R cmp cmp insb je or jo sarl pop icebp rex.W jmp jae or rex.WX pop xchg (bad) js ds (bad) rex.WRX rex.XB sbbb lods int sbb pop or add (bad) pop jge (bad) (bad) (bad) sti (bad) (bad) movslq (bad) (bad) decb or fist in fistpll stos cwtl and or fwait xor or stc (bad) fcmovbe rex.RB xor mov (bad) push in (bad) sahf (bad) jg sbb rex.XB (bad) sbb pushq or fistpll mov (bad) sbb ror movslq (bad) int3 (bad) imul or out (bad) mov (bad) f2xm1 add (bad) decl test (bad) jmpq decb mov bsf sub ror rol rcr mov clc jmpq rex.WRXB (bad) sub cs out fildl rcrb (bad) (bad) fs or sbb rcrb add jns es adc xlat lea (bad) mov sbb pop cmp retq fldenv cld and rex.X mov andl mov movabs or pop mov rex.XB (bad) (bad) (bad) decb add (bad) and pop out leaveq cmp lahf (bad) (bad) (bad) decl movsb retq sub sbb movsl sbb nop stc sbb xchg (bad) enterq data16 mov lar mov fisubr xor cli cmc pop pop clc bndstx sub test std incl int3 push xchg shlb fcmovu movabs xchg jle adc je mov jbe (bad) outsb add hlt (bad) jmp in and pop adc lahf cld pop adc pushq (bad) int out xor mov or loope mov push rex.RB xor jo nopl jmp and sbb js movaps ds test or cmp imul cmp cmp (bad) mov fildl mov mov (bad) outsb rex.WX imul outsl (bad) or (bad) (bad) callq (bad) push add (bad) (bad) (bad) jmp movabs (bad) (bad) sbb in (bad) (bad) rex.RX (bad) (bad) in xchg sbb sar std outsb stos std and cmp rex.WRB (bad) (bad) out (bad) iret pop mov cmp (bad) out and pop (bad) (bad) (bad) (bad) out xchg rex.WRXB pop (bad) ja jp data16 adc (bad) (bad) push (bad) (bad) jrcxz xor (bad) (bad) (bad) push xchg (bad) add and cs adc loope xor rcrb pop adc rex.WRB (bad) push (bad) (bad) and (bad) push mov movabs (bad) nop (bad) (bad) loope addr32 add mov sti fwait lret rorb (bad) (bad) push or (bad) repz (bad) (bad) clc mov leaveq jg adc and or sub fisttpl (bad) (bad) (bad) cli or jns xlat pop lret (bad) (bad) jb (bad) (bad) sti mov fs jns push (bad) mov sbb jns sbbb (bad) (bad) std or jnp (bad) rex.RX decb pop mov add jg loopne xchg mov add add or rex.WX (bad) mov stc xor movabs retq imul out movsb icebp push rex.RXB sbb xchg fildll add clc ficomp scas cwtl lods mov insl rex rex.B cs mov mov sub int3 sub push jno add callq (bad) pop mov xor mov cwtl outsb adc fwait rex.WXB fdivrs push mov (bad) cmc (bad) mov std out mov int3 rex.XB std in or cmp rex.B in sbb sahf sub js (bad) (bad) sarb rorl pop (bad) leaveq xor out (bad) loopne xchg rex.WRB addr32 sbb rex.WX std pop push cmpsl jae jns jns test jl,pt adc mov scas (bad) xlat mov (bad) (bad) cld sub (bad) (bad) (bad) (bad) out rex.WR fidiv leaveq jp cmp add add add outsl rex.RB rex.WR icebp (bad) mov mov xor addr32 (bad) test adc xchg (bad) in iret pop sub cmp jnp loop in xor (bad) xchg jbe mov xchg movabs callq jmpq xlat ja sub (bad) rex.RB gs push jne rex.WRB rex.RXB xor loopne pop xchg int3 clc icebp divb mov xor test rex.WB sahf add pop movabs pushfq sbb cmp sahf xchg in mov sub xor out js xor lret rex.RB (bad) rex.WRXB cmpsl jns (bad) (bad) (bad) decb jbe movsl mov jne pop adc insl lock cmpb (bad) loopne (bad) rex.XB mov callq out or xor (bad) lcall (bad) push leaveq test rex.WXB lock mov fldcw lahf mov pop fcmovnbe pop cltd mov mov add and mov adc andl add lret test pushq sbb test cli mov and (bad) pushfq stos (bad) (bad) (bad) jb xor (bad) mov rex.WB xchg fldl mov add sub and (bad) sbb (bad) (bad) add insb push xchg (bad) (bad) movabs outsb rclb nop fildl xor rcrb es jl push add rex.W (bad) (bad) sti jns and xchg (bad) (bad) (bad) cmp jle pop int3 (bad) rex.WRXB in rex.WR rex.B adcl iret scas fistpll mov (bad) fsubr out sub mov (bad) (bad) (bad) movabs in rex.X pop ss (bad) cwtl callq (bad) sti rex.WX cmc test (bad) (bad) fidiv mov rex.WB pop lret movabs je add lods rex.X lret andl sub retq sbb and test cmp or int3 movabs (bad) lahf (bad) ja cmp (bad) (bad) scas mov lret adc (bad) cmc rex cs sbb es std pop notl cmp jge mov (bad) add (bad) and mov (bad) add (bad) jmpq je stc bt jmpq ror xlat or movsl (bad) jrcxz rex.WRB pop out adc fidiv adc adc fwait rex.WR cmp push adc scas push movabs mov mov adc (bad) sub push (bad) and in retq rex.X jnp movabs mov retq or mov jmp (bad) (bad) (bad) cld sbb or cmpsb (bad) (bad) (bad) (bad) fcompl btr movabs add xsha256 cmpsb xchg int3 iret fs insb push pop or or cli rex.WRXB insb (bad) fmull fs xchg movslq je movabs ljmp stos mov sahf mov xchg test and push xchg rex.WRX mov or addr32 lods (bad) repz (bad) (bad) sbb pop pop xchg adc test jno jnp popfq rex.RXB or int (bad) repz (bad) stc push mov rex.RX rex.WX outsl cld xorl jae sub (bad) sbb lret lret out xor rex.WXB (bad) fs mov callq fidivrl insb data16 repnz (bad) pushq cmp (bad) (bad) sti (bad) imul or (bad) (bad) decb enterq adc add add ja sbb rex.WRXB leaveq int3 xchg jp iret mov xor jl repnz int test mov sbb rex.X int imulb (bad) (bad) and xchg sti rorb sbb int3 pop lret xchg or add (bad) xor out adc pop or add cld lods xchg adc rex.WR subl (bad) rex.WRXB xchg imul sbb rol lahf test (bad) push push mov sbb test movsl pop outsl pop mov xor out xchg rex (bad) (bad) mov sbb sub movsb in pop mov mov sahf repz pop clc in or (bad) (bad) (bad) (bad) sti (bad) insb (bad) mov (bad) (bad) (bad) decb cmpsb (bad) pop add add or (bad) cmpl pop ja jns push (bad) add mov mov add fsubrl rex.WRX icebp (bad) mov push rex.XB mov sbb fbstp sarb mov xor or pop es pop xchg (bad) scas movabs (bad) out sub mov test cmpsb fwait and fstp callq mov lret jmp loope rex.RB push test (bad) ds in or ds pop fstl lods jmpq adc xchg jg,pn imul cld xchg xor adc sbb addr32 rex movabs (bad) sbb (bad) (bad) (bad) xchg jmp (bad) lret mov mov jnp sahf retq retq adc scas (bad) xor rex.XB mov adc retq pop ss pop int3 movabs (bad) cwtl mov add fdivl leaveq addr32 add add add jno movabs sbb mov xor out out stos jl (bad) jmpq movb cmp cmp cmp test jmpq ja bt jl bt imul test jmpq fxam mov mul rex.WXB movsb (bad) out pop ss callq and cltd stos or loope movabs mov rex.RX jne or jl sub (bad) mov rex.WRXB jae jo add sub mov ds or cmp (bad) (bad) (bad) (bad) (bad) pushfq movabs xchg jle jne pop xor (bad) imul (bad) mov stos or adc mov je mov (bad) rex.R stos sub jmp xchg sarl jmp in cli mov mov add ja lods fwait mov sbb (bad) fmuls and rex.X iret push jbe loop shlb rex.WX sub ja or mov out cld sahf cwtl mov jno jnp (bad) rex.R test xlat (bad) jne test mov push push xor and lret (bad) stc cmpsl retq (bad) (bad) (bad) cli jbe movabs or and out rex.WR mov rex.WR jb add lods pop retq outsb rolb sti (bad) insb pushfq (bad) (bad) (bad) (bad) jg rex.WR (bad) xchg adc jne jo mov (bad) adc (bad) retq test add add or (bad) xchg movabs (bad) lea sub add (bad) or insb (bad) cmp rex.W stos fnstsw int sbb sbb movabs rex.RX cmpsl (bad) ja sbb stc rex.X push mov xor xchg rex.WB xor pushq mov js icebp repnz push xchg rex.XB (bad) (bad) cmpsb jnp (bad) rex.RX imul fdivl movabs and xor adc sahf xchg push cmp out out pop push xchg rex.WRB sbb jbe retq adc mov jmpq in movabs gs or enterq callq jp andl ja (bad) jae sub cs callq jge pop cmp (bad) (bad) sti (bad) insb sub (bad) (bad) (bad) decb mov add add jbe jp xchg mov sti rolb je mov mov jp (bad) cmp mov cltd (bad) or outsl loop jae pop (bad) (bad) (bad) jmpq (bad) fidivl roll cld out (bad) (bad) jmpq test jmpq jmpq icebp jle movslq cmp mov fs mov sub xchg rex.RXB push cmp cld cmp pop mov sub shlb add data16 (bad) lods in sub (bad) movabs pop (bad) and xor mov or xchg rex.R repz rex.WXB jl add adc xchg iret lret push (bad) (bad) leaveq (bad) sbb fwait sahf mov adc (bad) (bad) (bad) cld ds scas insl hlt (bad) (bad) (bad) (bad) (bad) cli mov (bad) xchg add fisubl lahf (bad) push xchg add add xchg push loop sub sbb (bad) lock (bad) cs outsb (bad) stos mov mov pop (bad) jae push or and push negb rex.WRXB sbb callq add sbb sbb sti push mov or xor retq mov cmp rorl xor sti retq lea mov adc xchg icebp roll outsb (bad) mov callq adc outsb fisttpll iret sub jne sbb ds pop jmpq test outsb push jge (bad) pop rex.RB mov xor enterq enterq and sbb (bad) imul jne frstor (bad) (bad) pushq fildll movslq push stos pop sbb jg insl (bad) (bad) (bad) std rex.RX add add test jne leaveq pop sbb rex.W out lea movabs rex.WX movsl cmc (bad) fwait mov cld cs callq and xor jne or mov xchg callq rex.RX negb cmp scas stos adc adc xchg stc rex.RB int3 in mov jns rex.WXB sarl xor test sub (bad) or adc sar insl (bad) (bad) (bad) (bad) incb adc fdivl fidivr (bad) (bad) std mov add add retq sahf (bad) sub fsts rcll std xchg mov jmp rex.RX cmp movabs lea sbb xor mov int rex.RX mov (bad) jrcxz js jmpq test cmp cmp jmpq je stc bt sub bt stc cmp jmpq retq adc or je hlt (bad) or adc push xor jns movslq xchg sbb cltd rex.WR hlt mov pop sub sbb (bad) (bad) imul cmp cs mov cmc rex.RXB subb fdivrp enterq mov xor mov imul pushq mov sti addr32 (bad) (bad) sub mov stos xor shrl std (bad) and pop movslq (bad) pop pop (bad) cmc adcb clc lahf iret sti (bad) adc xchg mov pushfq (bad) (bad) (bad) callq ror (bad) add cld sub movslq mov xchg mov addl test sbb je and fidiv fstpt add sub jmpq or (bad) fs add cltd rex.XB hlt ss pop push mov rclb roll xchg mov callq add add nop rex.RB pop sub sti lods movslq adc xchg adcb (bad) sti scas stc push hlt outsl pushq movslq callq rex.WB (bad) (bad) (bad) jo loopne div cmp faddl xor push xor cmc push int3 add cmp std rcr (bad) movabs (bad) cmp (bad) hlt fist (bad) (bad) (bad) callq push (bad) (bad) rol (bad) xor cmp and or (bad) or cmp std jo insb retq jnp es (bad) ffreep xor jp (bad) cmp xor pushq mov cmp push hlt jmpq outsl insb xor cs insb add test cltd cli jmpq mov sti or stos or add xor push (bad) rex.WRB (bad) xchg in in fist add stos (bad) adc add (bad) retq (bad) rex.XB push lea and mov sub test add movl push push (bad) rex.XB jg,pt repz sbb sbb stos or cmpl rex.WRB (bad) sti mov fild and pop jl cmp sahf cwtl roll sub insl cmp rex.RXB rex.WRXB lahf retq xchg rex.R push jge (bad) (bad) dec outsl xlat jbe jne or cmp (bad) sub movsl ds mov loopne adc ja (bad) jrcxz adc or rcl jns sbb mov cmp (bad) cmpsb stc stc sub stc jmpq mov jmpq add rex.RXB gs outsl fs imul add out fsin jmpq movabs mov cmc jmpq notl mov and nop mov xchg retq cmpsb rex.X pop xchg cs in lret pop sbb jge and (bad) mov rex.WRX xor rolb (bad) xor rex.RX rex.RXB (bad) int cmc int loop rorl pop cmp shlb add stos mov or or (bad) rex.R icebp jbe (bad) clc jmpq pop pause lods and lret cmp (bad) mov cmp std adcl (bad) popfq (bad) (bad) (bad) (bad) movabs sarl rex.RB rex.WRX add movabs add or imul sahf rol test and xor loopne loop (bad) jge fwait xor jmpq int pushq rex.RXB mov cmp mov test sub dec xor add rol bsf xor mov xor mov jmpq jne cmp cmc movb clc clc test jmpq jl pushq jmpq (bad) rex.X sarl jae mov subb mov cmc movabs fdivr bsf xor (bad) (bad) in mov (bad) outsb movslq mov movabs lret (bad) outsl xchg stc (bad) add (bad) iret xchg (bad) mov or jp mul rcrb scas (bad) mov fsubr stos jae or mov xlat xchg (bad) or pushq mov retq (bad) movabs add fs xor es (bad) (bad) cld xchg fistpl ffree test test pushq rex.WR jmp (bad) cmp rex.RB and jle movabs mov mov sub (bad) (bad) sti xchg (bad) and movslq (bad) (bad) (bad) push (bad) mov pop fwait lods enterq push or sbb rex.WRX in rex.RB rex.X or push rex.RB and and mov mov in adc cwtl rorl outsb (bad) outsb mov or sbb fstps js rex.XB cmp retq fwait (bad) (bad) (bad) callq xchg flds push add lods (bad) int movabs outsl or xor (bad) rorl data16 jbe out movslq pop sti and fisttpl or mov data16 cmp rorl (bad) bswap not mov lea lea jmpq mov in sbb push jb insb (bad) adc rex.WR movabs adc nop minps xor jnp mov or out callq popfq imull mov callq adc cmp (bad) cs lods or outsb cmpsl fbstp sbb cmpsl push movabs mov (bad) (bad) sti xchg stos (bad) mov (bad) push rex.RXB mov int (bad) mov sub mov sarb adc mov xchg sahf outsb repnz in sub (bad) (bad) out (bad) (bad) cltd or xchg rex.WR rex.RB (bad) (bad) pushq (bad) lods cltd mov movabs xchg ja mov lods mov cs pushfq iret cmp movsl (bad) (bad) add push or rex.WR jne shl rex.XB rex.X (bad) pop mov (bad) ja mov (bad) add rex.WR pop pop enterq (bad) rcr mov xchg rex.RB mov lods rolb rex.RX sbbq rex.WRXB cmp scas mov pop cld movabs andb addr32 push (bad) rex.RXB push xor icebp hlt rex.XB add pushfq adc int3 out (bad) and or lret sti movl outsb cmp add adc and movslq addr32 push mov and std rex.RX pop adc add add mov sub stc cmp jge jrcxz movabs add xchg es jne fwait xchg sbb jb adc (bad) adc adc lods int3 cld loopne rex.WRXB add push jle stos adc rex.RX rex.XB fs movabs outsl mov adc movabs movslq sub rolb cs jrcxz pushfq rex.RB rex.RX or testl lock outsb adc mov (bad) (bad) cld imul (bad) ljmp or lock xlat fimull retq jp mov or out mov (bad) shrl lret add xor movabs sbb rex.WRXB add xchg cmp (bad) cwtl add jnp flds rex.WRX rex.WX and add (bad) xor movsl push cmp (bad) rex.WRXB cmc stos fdivs sub loop push mov xchg pop xor rex.WXB rex.X or fs scas loop outsl push fwait mov cmc in add gs cwtl rex.WR scas mul (bad) retq ud1 rex.XB jo xchg retq jae rex.RXB rex.XB outsb in je pop jns (bad) cmp mov movslq xchg js stc fwait (bad) cmp sub rolb (bad) (bad) sub sub roll popfq scas (bad) callq je movabs testb dec fwait test frndint pushq mov add add rex.WRX in bsr xchg mov (bad) sub imul rcr jnp jl movabs (bad) (bad) xor pushfq mov je sbb xor mov (bad) (bad) mov clc (bad) or xchg in rex.RXB es mov stc lods stos add jg (bad) pop rex.B sbb push mov and pushq xor cmpsb mov gs mov xor rex.WB rex.WRXB test lods es xchg mov cmp sub imul fcompl out ja adc rol cmpsb add (bad) (bad) sti (bad) cltd fisubrl ss (bad) (bad) (bad) xchg ds pop (bad) jno outsb add add (bad) rex.WR (bad) jo sarl (bad) mov sub mov loope (bad) adc add test rex.X push addr32 out movabs rex.RX outsl (bad) movabs mov add popfq mov outsb adc (bad) mov rex.X sti jmpq add stos xchg adc es mov (bad) mov (bad) xlat mov iret (bad) or jo lods (bad) mov jo cmp and outsb pop jp imul pushfq cld push (bad) adc sbb fimull mov mov int3 mov (bad) xchg pushq (bad) jmpq push movabs insl std cltd rex.WRXB (bad) (bad) std (bad) stos xchg movabs ss (bad) jne (bad) ss pop imul in mov rex.XB add out cltd scas and test out in shrb movabs pop mov jmpq jmpq jmpq cmc js cli out sbb jl jg add je xor adc sbb xchg and mov sbb mov icebp pop or sub (bad) mov (bad) movsb cmp test push add outsl and rex.WRX lret jbe test jne repnz lea xor rclb cmc xor cltd (bad) cmp shrd rex.RX mov sub movabs add add mov cs pushq movabs fs jnp sarl xchg add jl mov clc (bad) pop xor mov stos pop xchg rex.RB mov xchg loop sbb movabs mov (bad) addr32 rex.X (bad) outsl (bad) (bad) or or (bad) cltd rex.RB jne insb push (bad) lret movabs pop (bad) (bad) xor sub push cmp xor jno (bad) vaddps cmp (bad) movabs movabs mov decb test (bad) xor clc rex.WB rex.W mov cli outsb (bad) xchg (bad) jmp mov ds (bad) (bad) ljmp sbb insl push (bad) xorb (bad) enterq fsts repnz and adc mov movsb nop mov pushq rex.RXB shrl mov rex.RB addr32 push cmp lods mov decl test std (bad) jmpq insl vpsrlq out (bad) rcll and out and xchg rex.WB (bad) ss in cltd xchg jae lock rex.R (bad) insl rex.WRX rex.XB test rex.WX push test jge popfq rex.X stos outsb push sbb rex.WR jmpq (bad) mov gs xchg rex.W xlat jl leaveq (bad) (bad) xchg push (bad) (bad) (bad) sti and xchg in xchg nop mov (bad) (bad) (bad) outsl hlt add sahf iret out (bad) test data16 mov or lods push xchg (bad) (bad) (bad) ljmp imul sbb test retq out rex.R (bad) (bad) fs sub out rex.XB icebp xchg add (bad) mov (bad) rex.WRB movsb or in sbb cmp outsl xchg adc lret sbb stos mov not je mov jmpq mov pop (bad) cmpsb repz lret es and (bad) or mov mov pop (bad) push pop sbbl neg (bad) xchg (bad) jne adc xor rep push rex.X rex.RB (bad) rex.WX pop mov stos (bad) test or sub pop clc jo xlat and (bad) sub sbb push in cmp sarl rorl test (bad) (bad) incb outsl (bad) adc (bad) test (bad) rex.RB add stc lods std pop jmp lods xchg sbb imulb nop push movabs (bad) xchg mov callq leaveq (bad) push jge negl jmp mov push cmc add pop rex.WRX add sub pop hlt int jns and pushfq mov add rex.XB cmp movabs insb jne cmp pop movsb push jrcxz rex.X jl (bad) (bad) iret addr32 jae jae mov (bad) xchg add adc xor mov or xchg jle outsb sbb (bad) (bad) cld jp sti shll xor sti ja (bad) sub subb fisttp (bad) outsl mov jo push fisttp movabs add add rex.W (bad) push (bad) imul lret jg rex.WR and xor in movslq xchg lods cmpl mov cs sahf add pushq (bad) (bad) xor sbb mov (bad) ja not inc clc add mov or cmp mov bt clc bt cmc cmp jmpq ja jmpq callq jmpq jmpq pushq jmpq jmpq xchg (bad) rex.WXB rex.RXB cmp (bad) jns retq movabs test in add (bad) lret push mov cmpsl (bad) rex.B rex.WB outsl add (bad) int3 (bad) jrcxz (bad) insl sub push (bad) jge cmp out (bad) sar rex.WRXB (bad) negl cmpsb adc cwtl cmp (bad) cmp rex.X (bad) (bad) cli stc pop movabs sahf lods or cwtl rex.WB in es test mov leaveq out lock sbb push (bad) fstps lret (bad) or xchg (bad) (bad) (bad) lcall pop (bad) (bad) out sub stos mov xchg adc ja pushq callq (bad) push cmp xor sbb cmc push loopne (bad) (bad) push or (bad) or sbb rex.WX rex.RX mov sub jmpq jmpq retq ds mov repz cmovno movabs jbe pop movslq add ja (bad) fdivr out sbb mov jae push xor jmpq sbb rex.B int pop lahf xchg or vpunpckhdq jb (bad) movsb cld lods insl rex.WX (bad) sti (bad) or test (bad) (bad) (bad) std (bad) cmpsb mov mov insl rex.X outsl mov rex.XB (bad) adc sbb mov xchg adc or cld lret lahf rex.WR (bad) ss (bad) (bad) (bad) (bad) jmp enterq cmp mov and lods xorb xor pop out retq adc pop in xchg shrb mov sbb or push (bad) push xlat jg pop sti mov push lret lea retq test iret (bad) fsubrs stc push (bad) rorl xchg rex pushq adc push mov popfq iret (bad) xlat jne xlat test fwait sub xchg jmpq xlat rex.X ja jne xchg push pop sub mov retq push push enterq rex.XB js sbb lahf xlat xchg cmp movabs rex.WRXB (bad) (bad) mov mov push rex.WB rex.RB (bad) adc push out js pop (bad) retq sub jo rex.X orl xlat mov (bad) retq mov push iret rex.WRXB scas rex.X jae rex.WX jle rcl iret lods xlat rex.WRXB fsubrs mov mov mov adc push cltd adc cmovg lods jp add mov xlat test push jae xchg xlat rex.R (bad) xlat movabs (bad) lret or push outsb push (bad) cmp xlat gs mov xlat out push jns push xlat enterq (bad) rex.WRXB push sarb xchg (bad) mov add adcl mov fcomip push xchg rex.XB cmp retq rex.WRXB movabs xor notl xlat sar (bad) xor rex.R xlat mov test xlat leaveq iret (bad) xlat xor push rorl rolb lret xlat xlat push fnstenv xlat (bad) (bad) xor xlat (bad) push cmpsl jnp xlat xsha256 cmpsb push adcl movabs addr32 xlat mov (bad) xor push xchg (bad) xlat mov imul sub cs (bad) adcl lods (bad) js push movb rex.X push iret mov push fxch push xlat (bad) sub (bad) cmp xlat rex.X ss jne iret xlat cmpsl jne jge movabs movabs push leaveq repz xlat sarb test xlat mov sarl movslq jnp (bad) movsl pop fwait rex.WRX mov (bad) fnop mov push mov sbb leaveq jno jo push popfq and retq add and (bad) rex.XB retq push mov lea leaveq movsb movslq movabs xchg xlat test push lret rex.WRXB push mov add jmpq xor mov push stc (bad) adc loope leaveq jmpq in sub sbb rex.RX test adc mov imul adc lret jno (bad) push sub rcll xlat shlb xlat test push addr32 movabs iret push xlat adc push (bad) rex.WRXB leaveq insb mov (bad) push rex.RXB and rex.WRXB xchg push mov xlat rex.WB xlat cmovbe adc lahf (bad) imul fnstcw (bad) mov mov jbe cmc (bad) test sub mov xchg mov xor (bad) stos (bad) lock sub rex.X push movabs iret (bad) xlat test push cmpsl iret xlat mov mov and iret (bad) xlat xchg xchg push shrl push mov push lea push jle mov jnp rclb fwait mov ror cmpl cltd jb jrcxz lret push rex.B mov mov imul iret stos sub js push (bad) fildl sub push repnz push push movabs adc adc int mov xlat retq movabs rex.WRXB push jno mov repnz jnp iret xlat rex.X addr32 cmpl mov push xlat ficom mov (bad) rex.WRXB jrcxz rex.XB movabs mov (bad) push stos fwait push sti (bad) (bad) xlat shlb jno push rorb movabs push jns mov jae xor xlat rex.X push mov push xchg rex.WRXB mov movsl stos jne sbb imul xlat (bad) mov rex.WR xlat test push mov mov rorl (bad) or mov push iret rex.WRXB (bad) adc cmc movslq mov mov sub mov movabs adc or shrl retq jne (bad) push xlat repz iret sub xchg or xchg (bad) repz xlat rex.X rex.XB mov xchg push cmpsl ja xlat psllw mov xlat xor (bad) lret or push sbb rex.XB push cmp sbb adc rex.WX retq (bad) rex.WRB rex.WB rex.WRXB (bad) push rex.RX xlat test push jae (bad) xlat (bad) xorps fwait shlb (bad) hlt pop xor rex mov test enterq cmpsl (bad) iret xlat nopl mov xlat test push fwait iret (bad) xlat stc xorps test out sub (bad) push pop test adc roll int3 push lods mov push mov push xlat test push ror xlat and repz xlat rex.X ror rex.WRXB mov imul rex.WRXB cmpl rolb rcll adc lret sub incl imul push clc (bad) (bad) outsl push and rex.WRXB std mov sub (bad) xlat mov retq push mov push mov rex.XB push (bad) jnp pop rex.XB fwait movslq cli rex.X mov movslq pop xlat jle xor (bad) retq rex.WRXB cli mov xchg push pop cmc cs pop xrelease (bad) movslq mov xlat jb (bad) retq mov scas push xor (bad) lret rex.WRB repnz push (bad) (bad) movsb sar jl jo (bad) sub in test fwait xlat movsb icebp jbe scas jne xlat test push mov mov imul movslq xchg lock mov push add (bad) mov (bad) movabs push xlat rex.WRXB lret fadds mov cmpsl push push sub and (bad) push sub stos push adc cltd push pop (bad) or fnop scas je insb push mov (bad) (bad) jrcxz push mov xchg mov push pop pushq (bad) sub xor (bad) imul jne movabs xchg push (bad) addr32 xchg jrcxz sub mov xchg push popfq out lea fwait push mov insl push lock push rol xlat xor movslq mov cmpsb push xor push ja iret xlat add mov iret lret jrcxz gs lea xorps xchg loop mov push fisubl xchg pop rcl rex.X andl leaveq mov xlat test push rorl mov jne lret push jo push (bad) (bad) (bad) loopne jrcxz stos movslq pop cmpsb jae xchg (bad) push rcrb jno iret xlat rex.X push leaveq mov fiadd iret push xlat mov mov in xlat and (bad) xchg mov jns push xlat add rex.WX fmul rex.XB imul adc mov cmpsb fiaddl popfq rex.XB xlat outsb push cmpsl repz xlat rex.X scas cmp psrlq mov mov mov push mov pop lea push (bad) xlat roll push mov xlat xorl push jg (bad) xlat gs xlat mov lret push ds (bad) (bad) (bad) (bad) push rolb push xor (bad) rex.WRXB push shlb push rclb rex.WRXB lret push jl (bad) cltd sti jnp push rex.B xlat int mov push jl (bad) mov rex.WRX pop pushq mov or ja adcl fwait push movabs jne mov js push rex.WXB shrb push retq xlat leaveq mov push xchg (bad) sub (bad) leaveq rex.WRX imul rex.WB movabs retq push xlat pushfq rex.RXB rex.WB fwait push out (bad) repz xchg gs rex.XB add pushq sub stos push sub push retq push movslq rex.X int iret xlat and xlat sahf iret enterq mov adc imul mov (bad) fcmovbe (bad) ds mov push leaveq rex.WRXB fwait cmp xlat and xlat test (bad) movabs push jmpq ljmp shrl jmpq push push cmp test rex.WRXB movabs retq rex.WRXB push and push int fcom rex.WRXB cs xlat mov xlat test push pop lahf (bad) xlat pushfq (bad) retq fcom xchg push cmpsl (bad) xchg xlat xchg stc leaveq mov cmc push addr32 push xlat out retq rex.WRXB mov push imul retq xlat shrl push mov cmpsl mov xlat shll movsb xor cltd add mov pushq adc push xlat jae scas xlat push cmp push movsb push scas mov xlat popfq xchg push (bad) xlat rex.X mov push xlat iret push xlat insb push push pop fist adc mov movabs mov outsl (bad) xlat xlat rex.WRXB shlb (bad) mov or rex.WRX rclb xor imul push (bad) rex.RXB add mov stos push (bad) jnp push add mov jmp jnp (bad) scas (bad) retq jne xchg push rex.XB rcll add rclb cs je fwait push jg not test jrcxz vmovntpd adc sub push shrl leaveq mov outsb push test push sub mov push sub push pop imul ds iret (bad) xlat sbb push outsl rex.WRXB push jmpq movslq mov mov sti orl movabs mov rex.WRXB push fisubrl jne es imul ja (bad) xlat test push mov stos lea xlat callq movabs push xlat leaveq rcll mov mov mov (bad) (bad) rex.WRX push add push pop (bad) jbe jnp std (bad) push sets out mov mov adcl xlat vmovhpd push pushq setbe rex.R rex.WX rex.X fstl movabs (bad) jnp push jb (bad) jne xlat movabs rex.RXB xchg xchg rex.XB push adc push popfq jno addr32 imul mov test push out xlat adc rex.WR push adc movabs (bad) cmpsl mov xlat test push scas iret (bad) xlat xor push mov stos rolb push adc (bad) push pop data16 (bad) clc push movsl fbstp unpcklps mov xlat rex lret xlat test push leaveq iret (bad) xlat mov push rorl shl rex.RXB (bad) stos movslq or rorl xchg jnp roll mov stos push rex.RXB (bad) xchg xchg push (bad) mov mov push addr32 sub push xor test rex.WRXB push in mov lret mov rex.RXB (bad) rex.WRXB push insl xchg push sub test rex.WXB rcll rex.X mov push push lods add push fist test or lret lret rex.XB adc pavgw lods push (bad) rex.X mov sub xlat (bad) push incb iret push xlat push rcll mov rex.R pop popfq fiaddl xlat cmp push addr32 xchg jge test push push std xchg pavgw push adc jnp movslq jl popq push cld xlat adc (bad) sti xor ds movabs xchg movslq test push jmp (bad) mov stc push stos ja shll push jrcxz enterq push sub sbb (bad) je out xchg push insb hlt test rex.XB (bad) xchg loop push (bad) jb mov (bad) repnz jle (bad) xchg xlat (bad) push test iret jo fwait rcl lret push retq fbstp mov xlat cwtl cs mov xchg push mov iret imul adc movabs xchg iret mov lahf push movsl repz xlat rorb rex.W (bad) jbe mov jmp mov rex.WRXB push icebp pushq xlat fmul push (bad) mov mov addr32 xlat (bad) jne push outsl adc (bad) push rex.B cmpsl rex.WRXB iret movslq (bad) gs fildll add xlat push push in cmpsl iret xlat pop push insb fbstp xlat cmp push outsl rex.WRXB lret fs data16 xlat rex.WRXB sub in xlat jns mov scas push test iret xlat rex.X push (bad) lret in imul fcom (bad) jne xlat nopl adc rol jrcxz retq retq jns popfq (bad) jo (bad) sub sbb jnp cmpsl movabs xlat (bad) loop xchg sbb (bad) mov mov sbb push cmpl mov iret xlat lods cmc push fwait iret push xlat and push movsl rex.WRXB fwait leaveq jl out rex.WX or sti out xlat test push mov adc lret xlat xlat push push fild mov (bad) rex.WRXB xchg (bad) ficom movabs xlat rex.XB in (bad) mov cld push test movsb pop xlat ja movabs lret hlt push sbb xlat cmpsl xor ds xchg jmpq push (bad) push fistpll rex.RXB (bad) movsl movsb retq push hlt push nop rex.X iret xlat mov retq push cli jbe mov rex.WRXB iret mov xlat test sti xchg sti cmc xlat xchg iret push xlat enterq jae rex.X push fnstcw push (bad) mov leaveq xor xlat rex.W sbb stc xchg push mov in push (bad) rex.WRXB rex.WB xchg movabs xlat clc clc push movslq jbe (bad) push imul iret rex.WRXB xchg push popfq lea xlat stos iret xchg xlat cmpsb rex.RB xlat mov push xlat (bad) rcll mov mov repz xlat rex.X lret lret (bad) (bad) mov jnp js (bad) rex.R stos jnp add (bad) rex.XB fmuls imul cmc xlat ja push xlat repnz mov out mov iret xlat sar rex.X retq sub roll rex.WRXB mov xor push (bad) rcll mov cmpsl lods iret xlat bswap push mov rex.WRXB lret adc (bad) jno adcl cmp push rex.W mov cmc push (bad) iret push xlat je mov xlat iret enterq mov xchg test xlat rex.WRXB (bad) imul sub mov cmc xlat outsl stos push xlat stos rcll mov (bad) ja xlat test push (bad) iret (bad) xlat (bad) xorps push pushq mov popfq rex.XB push (bad) push cmpsl cmpsl iret xlat lea iret xlat sub mov rol (bad) xlat push sbb bswap push pop mov xor xlat xchg rclb mov addl push rex.W add mov xchg fwait push cli test mov rclb mov (bad) (bad) adcl (bad) xor ja rex.XB lods mov xlat test or gs rex.WRB scas jge lret push imul mov scas subl push shl fdivrs lahf pop jmpq imul xchg rex.B retq sub adc lret sub mov jmpq insl repz xlat push ja jne (bad) fcom pop push movsb orl xlat fldcw (bad) push mov add adcl test cmc xchg mov jnp movabs sub xlat xchg movslq xlat xor xlat sub movsl rex.WRXB pop (bad) outsl mov adc xlat sarl cmpsb lahf xchg stos push sbb push cmpsl jge cmpsl push rex adc xlat test push lahf iret (bad) xlat jmpq xchg push stc movsl xlat fwait in rex.XB rex.XB (bad) mov rex.WRXB xlat mov xor jl imul sti push pushq outsl rex.WRXB (bad) mov (bad) movslq movsl rcl xlat (bad) xchg movsl xchg adcl fbld pop jge (bad) fsts jmpq mov rex.XB retq jae xor (bad) movabs push pushfq rex.RXB pop movslq push decl iret pop mov or push push and mov adc adc cmc fild rcpps xchg movslq mov popfq (bad) js push popfq je leaveq stos (bad) push (bad) (bad) sar jae js fstps out insl xchg push lret mov sbb push rex.WB jne mov mov gs rex.WXB sbb outsb sub (bad) mov xchg xchg mov and mov mov retq test sub retq sub and rex.X popq rcll (bad) stos xchg mov stc fbstp rcll rclb adc fdivs lret iret jg int3 adc xlat leaveq (bad) cmpsl hlt push sub xor push adc (bad) (bad) (bad) push sahf xchg mov jne popfq push adc (bad) push popfq icebp mov stos outsl push lret xchg jns add adcl jrcxz push pop or mov mov mov sbb fwait push in push leaveq (bad) movslq mov sar push (bad) or push (bad) push test stos mov movslq imul mov leaveq pop cld sbb retq xlat or mov (bad) test rex.WRXB push fsubl xchg insl add xor test scas push fadd ja push rex.WB xlat xchg sub rcll retq mov add rex.XB push (bad) test jbe mov (bad) in mov (bad) movslq push (bad) retq push add mov lret hlt push mov test jle insl rex.XB push addr32 lret xlat (bad) sub xlat js push popfq mov in jbe mov jge add movabs rex.WX rex.WRXB push fnsave rcll rex.WR rex.RX jne cld shl sub (bad) ja adc lahf jne xchg fnop xlat rex.XB stc push rex.WX xorl rex.RXB xchg xlat addl iret movslq jae retq xlat mov push (bad) js (bad) test push popfq push test (bad) xchg push enterq or (bad) jne iret push jl push xlat sti scas jne rex.RXB (bad) popfq (bad) pop xlat movabs popfq cmc adc mov push xchg hlt xlat stos repz push (bad) jnp rex.WRXB cld jno add rclb icebp sub lock jns retq xlat rex.RX outsl jne iret push rex.B cmpl xchg (bad) insl fldt (bad) in addl (bad) mov xchg mov (bad) mov mov lods out push (bad) (bad) movsb xchg stc push jae nop xchg pop (bad) jrcxz xchg imul leaveq xchg ja rex.WR iret iret adcl (bad) mov push cmp (bad) adcl xchg jne cld push jns rex.WRXB xchg loopne jne xchg push pop pop scas xchg xlat hlt push (bad) adc mov add and pop sbb jo push rex.X mov jne push stos iret cmp xor (bad) rex.WRXB or mov xlat movabs jne push jno push mov (bad) pop push xchg jne test (bad) push rolb movslq (bad) (bad) (bad) addl fisttp (bad) mov jne pop rex.XB cmc push sub sbb xchg push popfq pop mov sub (bad) cmc sbbl (bad) mov rex.WRXB (bad) rex.X mov (bad) rex.WRX roll mov push mov (bad) fwait xlat (bad) push test mov popfq sub rex.RXB push and xlat xchg rex.XB rex.W (bad) adc (bad) retq stos xchg push leaveq int xchg jns xlat mov push xlat pushfq xchg mov jne jns jno or out mov cmovg push (bad) xchg push leaveq stc iret cltd xchg loop sbb test xlat lahf rex.WRXB sbb rex.WRXB fwait rcll add leaveq movabs stos xchg push sarl xlat mov mov mov retq lret cmp ja rex.WRXB enterq push cs ja lods retq push adc mov jno fdivs adc xlat sbb rex.WR out (bad) fwait ss jne mov rex.WXB rex.WRXB or xchg (bad) repz mov stc push rex.X roll (bad) mov popfq adc mov iret xchg xor ror popfq push sub test (bad) iret mov mov xchg push enterq mov stc push xchg (bad) leaveq mov xlat loopne test (bad) imul sub jg xor push jl push rol movslq popfq sub (bad) push cli mov jns mov push xor movsl shrl push stc stos rex.X iret (bad) jae push outsl test xlat vmovapd gs rex.R (bad) retq add (bad) jg pop (bad) rorl roll rex.WRXB mov sub mov push jns leaveq mov outsl cmovg mov push mov jns andl xchg iret xchg xlat shlb iret push xor mov jg push (bad) and jge push movsb adc (bad) or fnop (bad) notb test nop sub (bad) rcll movabs (bad) cmc push and sbb scas loop xchg jmpq push std mov retq (bad) bswap pop push rex.WRXB mov iret xchg mov and xchg adc movabs stos rex.WRXB push rex.WX and rex.X pop xchg push (bad) movabs adc scas xlat outsl push rex.RXB rex.R rex.WX vrcpps sub stc mov ja (bad) fstps xchg leaveq xchg mov rorl mov imul fdivl rex.XB push jmp lahf iret imul sub mov rex.WRXB push adc rex.WRXB push jae xchg retq xlat xlat add lret xlat popfq rex.WB iret mov movsb pmullw rcrl push movsl (bad) (bad) mov (bad) jg (bad) jae xlat mov mov rex.X sbb pop sbb push jge or and push mov (bad) notl xlat rex.RXB repnz adc rcrl mov mov xchg outsl (bad) push pop xchg movabs movslq sbb sbb pop imul repz iret or push pop (bad) mov movabs test mov jne (bad) xchg rex.WR nop retq jne pop fild lret adc test push test movabs sbb sub or adc sub fs rcll cltd lahf mov cmpsl movabs fwait push xor out cmc push jnp push xlat rex.RX andl lea rex.WRXB cmc cmp xlat mov iret enterq xor xchg push pop adc add lret lods nop lret mov adc xlat leaveq iret push xlat (bad) retq rex.WRXB lods (bad) fnstenv mov (bad) rex push fmuls xlat (bad) push lahf mov xlat test push cmpsl rex.WRXB cmc push or xlat insl retq rex.WRXB mov mov (bad) movslq xlat enterq rex.WRXB push popfq testl mov lret or adc (bad) leaveq movabs mov mov mov iret (bad) xlat add push iret rex.WRXB int3 or (bad) (bad) xlat rex.WRXB rex.WX xchg mov xlat test push movabs enterq mov cltd lret mov push or push cmpsl jno xlat (bad) push jge iret xlat leaveq push mov rex.WRXB push or mov sub mov mov gs (bad) xor xchg adc vmovupd rex.X mov xchg popfq (bad) fcom push push cmpsl movslq imul stos rcll mov lret push (bad) fbstp xchg (bad) rex.WX mov stos mov test mov (bad) xlat rex.WRX lret xlat xlat rex.WRXB push xchg add xlat rex.WRX push cltd iret push xlat enterq rex.WRXB fwait lret fnstcw rcll (bad) (bad) mov sub push leaveq cmc jmpq sub lret fwait xlat pop add icebp fisttp sub add fwait mov xlat retq repz xlat rex.X push mov iret xlat jl push mov add push or rex.X xchg rex.WRXB jle jb rex.XB (bad) movsl repnz jge ja jae push movabs lret je xlat sar cmc xlat imul leaveq pushq or sti pop jnp rclb cltd push mov mov iret lret jp imul push push stc and mov iret lret js pop xchg mov movabs mov cmpsl jg xlat pxor adc push cmpsl ja ja popfq std test jnp rex.RX mov adc pop mov push rex.WRXB rcr mov adc jg push fwait push pop scas mov retq xchg push xlat fadd push lret rex.WRXB jns (bad) ss sti push mov jne iret push xlat outsb rcll mov ja lret xlat test push mov xchg fnstenv fcom clc push cmpsl insl retq xlat (bad) xorl jrcxz pop ja xlat sub push xchg mov shll push xchg jb movslq xchg push in sub repnz (bad) xlat stc push mov repz (bad) lret lret adc xchg pop xlat sahf icebp rex.B (bad) xlat xlat rex.WRXB adc rorb movabs xlat out xchg (bad) repz xlat rex.X push mov rex.WRXB imul rcl shrb xlat cmpsb push test add stos repz xlat leaveq out cmpsl or lret outsb rex.WRXB adcl rex.WRXB mov xlat rex.X xlat adc push movsl rex.WRXB (bad) (bad) shrb xlat push mov rex.RB push xlat xor push mov leaveq add xlat push sub mov repz xlat test push addr32 in data16 jne leaveq rex.WRXB mov push movabs imul mov mov rex.X jne iret xlat cmp push or push mov mov scas push xchg ja stos adc rcl repnz pop retq push xlat fs mov mov rclb fs lret sbb or push (bad) rex.WRXB mov stc fbld shlb jnp xlat xlat rex.WRXB movabs mov jnp fcmovbe (bad) imul (bad) mov xlat add movslq push jno jae jmp test mov xlat mov iret xlat rex.X (bad) xlat (bad) xlat xchg cmc push int push xlat (bad) retq rex.WRXB (bad) loopne flds jp push mov cmp sbbl sub push movabs xlat xchg sub pop xlat and push orl (bad) mov push fstpl lret jno xlat pop fimul push (bad) repnz decl pop mov mov in movabs push jl test pop xlat xchg cmp xlat rex.XB rex.X movabs xlat or loop mov iret xlat xor (bad) iret rcl (bad) (bad) iret sbb rex.RB imul rex.X pop xlat movslq push outsl iret push xlat test xlat cmpsl ja xlat bswap push jg rex.WRXB rcrl mov leaveq (bad) mov rex.X iret jae or out iret rex.XB sbb add rex.XB rcll push (bad) outsl push jge jne (bad) clc push mov pop xlat (bad) movb rex.WRXB push cmp mov (bad) test lahf sub (bad) pop xchg rex.WRXB (bad) xorps (bad) test push sti rex.X jg jns push in rex.R (bad) movslq mov (bad) lret js outsl ja push jg adc ja xlat mov lret rex.X leaveq mov rex.XB rex.W stos jns push retq iret xchg push or lock mov rex.WRXB rorl leaveq rex.WRXB push fimul push movsl rex.XB push (bad) rex xchg rex.XB rex.WRXB (bad) (bad) jae rorl add xlat rcrb mov xchg push jnp xlat mov adc rex.WRXB push add jne (bad) push out cmp mov xchg rcll jne xchg rex.XB jns fdivrs push rex fildll (bad) xchg mov jae rex.WRXB orl leaveq push or push not mov mov (bad) outsb sbb jnp gs (bad) xlat test rex.WRXB iret cmp sub iret stos push rex.XB xlat (bad) out nop (bad) push enterq or rex.RX movsl rex.WRX mov jns mov mov stos retq push lret imul xchg lods int3 (bad) lret stos push (bad) (bad) (bad) outsl fcom jb cld mov scas xlat cltd rex.XB xchg push jae mov (bad) iret rex.WX (bad) lods mov nop retq push and ja rex.XB push pop and xlat clc cmpsl (bad) addr32 push adc loope sti outsb fcomps (bad) fildl mov (bad) rex.R cld cltd testb sbb mov mov imul cwtl andl (bad) cmpsl xlat (bad) xor ja adc (bad) mov xor mov sbb movslq sbb (bad) fcmovbe enterq xlat cmp (bad) mov xlat sbb cmpsl xlat rorl (bad) (bad) adc out adc fimul (bad) lret xlat xor (bad) mov sbb (bad) mov movabs pop xlat ja (bad) (bad) (bad) pop mov push xorl popfq cmpsl mov mov sbb add xchg xor (bad) mov sub push xchg xchg sub mov stos test push xchg push mov loope xchg push (bad) leaveq lret imul mov lret lret xchg sub (bad) push jae enterq xchg adc rex.WR rex.X push mov rex.RXB xchg iret jl sbb test mov rex.WX rex.RXB rex.WRXB fwait push (bad) nop push movslq rex.B push rex.WRXB mov imul rex.RXB sbb cs push test retq stos push popfq popfq mov mov (bad) out (bad) push imul (bad) add mov push (bad) xlat int incb adc rex.WX adc out mov pop movabs gs rex.XB or xchg push retq adc sbb retq rex.WRXB (bad) retq mov cmpl rcl mov retq cmp lret or jnp jmp mov mov mov xlat jnp push xchg fdivs repz xlat pushfq sub xlat xorps adc lret mov (bad) mov xchg push xor iret lret outsb (bad) lret rorl (bad) mov stos xchg and push mov mov cltd push mov (bad) push (bad) pop lret mov xor jo push loopne xchg mov pop popfq jnp je cmc test stc sub bt cmp jmpq shr adc btr sub btr mov cmc adc add bswap mov jmpq jmpq jne stc stc movb clc jmpq jne jmpq callq jmpq mov js callq jmpq jne not jmpq (bad) cmp (bad) lret icebp popfq (bad) jrcxz rex.RXB xchg lret and jge xor mov mov mov pushq mov loopne rex.WR and pushq xchg (bad) (bad) (bad) std callq out roll test jp (bad) mov loop xor (bad) pop cld sahf cmpsb push pushfq test (bad) (bad) cld icebp sbb xchg (bad) (bad) (bad) ljmp pushq mov movabs mov rex.XB addl jno sbbl jo (bad) push cmp int3 (bad) in mov sbb (bad) mov pushq jmpq jp lret movl (bad) xchg (bad) out movabs movsl or add add lahf push movsb xlat ficom (bad) idiv in cmpsb sbb rex.WRX pop pop rex rex.WR push or decl pushq cld pop push rex.W ss adc xchg sub xchg jg (bad) jl scas std (bad) (bad) (bad) cld mov (bad) (bad) (bad) (bad) jns cmp xor push rex.B (bad) subl pop mov sbb ds xchg adc lret imul add jns mov scas lret (bad) imul in sbb sub pop xlat mov jl mov cmp es sbb mov rex.WXB (bad) cmpsb popfq mov mov (bad) cltd mov jo enterq movabs jne push adc sub lahf jnp loop pushfq scas (bad) jle lret in scas enterq rex vmovaps imul jne rex.WRB fwait or (bad) callq adc mov rex.WXB stos decb or or data16 cwtl (bad) mov or pushfq in (bad) movabs mov mov mov rex.WR push (bad) pop ss rex.RX and int pop jbe out (bad) (bad) (bad) sti je ffree movabs leaveq jge fimul (bad) (bad) (bad) pushq (bad) stos (bad) icebp mov sti pushq cmc gs adc leaveq subl (bad) and rol repnz rex.WRX xor rex.RXB (bad) js push (bad) imul movabs push cmp mov mov jno sub mov (bad) push rorb enterq adc (bad) outsb cli ljmp (bad) movabs movabs rex.W pandn (bad) retq xchg adc xorl fs stc jrcxz in (bad) mov (bad) imul fnclex js adc add (bad) fs loopne decb pop lret sbb pop notl out in xlat outsl cmp (bad) (bad) decb movabs cmp mov (bad) (bad) (bad) (bad) xchg in lock xchg callq pop adc rex.WRX mov mov (bad) push adc pop fadd fwait mov or es rex.WB addr32 enterq (bad) mov rex.WRB insl imul or pop (bad) outsb add (bad) scas bswap not mov movsbw mov setns mov jmpq (bad) cmpsl (bad) jne jge rex.RXB rex.B add jp nop jg mov rex.X sbb (bad) movabs pop adc scas adc rex.WX jg xchg nop (bad) pop cmp roll movslq push (bad) or adc cs (bad) push fldcw int3 movsl js (bad) pop fist sarl jb sub sbb pop xchg hlt lods (bad) pop movslq xchg jg jae enterq sarl fsqrt (bad) sub jp hlt movsb adc pop (bad) leaveq sub (bad) (bad) (bad) sti sub (bad) (bad) std jmp mov ficoml (bad) or pushfq mov or mov cmp (bad) (bad) (bad) in and jbe sub fcmovnb lock pop lret mov rex.WRXB fidivl insl repnz (bad) rex.WR cmp neg mov (bad) jmpq mov (bad) callq or mov je sub ja,pt jmpq cmp cmp jmpq ja cmc add clc cmp cmp cmp or jmpq cli outsb pop stos add xchg and rex add cli repz add mov mov cwtl sbb loop movabs out fnstenv xlat std lods (bad) ds lods stos or jmp or xor (bad) rex.RXB jg rex.R fucomp iret jnp mov mov mov cmp (bad) (bad) sti lock adc (bad) (bad) mov addr32 add (bad) xchg mov mov pop add add xor sbb xor rorl jnp push (bad) and mov (bad) xor cli add imul cmp cmpsl mov (bad) (bad) rex.WR pushq (bad) or insb push xor (bad) mov jbe rex.RB repnz jmpq pop mov movslq loope jl xchg mov fcomp lods sbb pushfq pop adcl and sar jrcxz mov in cmp mov icebp cld enterq callq add sub rex.XB add lods (bad) ds lahf scas int3 (bad) fcomi test rex.X jle addl pushq (bad) stos xchg xchg pop js pop (bad) je out (bad) (bad) (bad) std or fcmovu (bad) (bad) (bad) std gs int3 stos test jb in lock bnd add add or in cmp cli push loop jmpq xchg ds imul mov (bad) add int rcll jge (bad) jrcxz mov (bad) sarl int3 lret movsl (bad) push xor xor retq lret popq test retq (bad) jnp mov mov jbe xor sahf (bad) (bad) cmp cmp jmpq ja jmpq jne dec mov cmp jmpq stos jmpq callq rcr btc add shl mov add mov cmp cmpb jmpq cltd or (bad) scas (bad) stos pushfq mov (bad) mov adc add int3 stos mov fstps cmp (bad) insl adc out pop jg pushfq icebp pop cmp (bad) (bad) push icebp movabs jno (bad) (bad) rex.RXB rex.RX ds (bad) mov int (bad) (bad) (bad) xchg add test out out adcl jl movabs (bad) push fisubr (bad) pushq cld cmp (bad) decb sbb add add or addr32 (bad) mov mov jno xchg (bad) lock fs sub rol adc (bad) rex.WR test repnz cmp mov andl sub mov adc sbb rex.WRX rex.WRXB and pushq push callq pop sahf rclb xor leaveq movabs mov adc mov js cmp or jno retq adc (bad) out pop pop mov in rex.R jge rex.WB fwait jge rex.R ds push rex.WR mov or sar movabs cwtl adc movabs or jl (bad) (bad) (bad) std cmp fnstcw sbb pushq sarl (bad) mov and movabs rex.WRX jp sub push cmp test jmpq movabs mov pushq add add or insb cmp es add lock movabs sbb pop rex.X test pushq mov not lea lea xchg movzwl jmpq jmpq stos jmpq callq jns jb retq setns seta mov mov jmpq not lea jmpq loope out stc out js test fbld mov in adc pushfq cld jg xor or pushfq movsb (bad) jmp test rex.R lret js (bad) fnstcw (bad) mov gs add (bad) divl int3 out xchg mov jbe push cmp mov outsb jbe rex.WB movabs cld loopne push test jl mov mul hlt jl (bad) jno mov xor rex.RX es fidivrl fnsave (bad) movslq (bad) mov rex.RX or (bad) std rex.RX fsts or jp std (bad) out pop rex.R (bad) js fsubs xchg movl and rex.RB imul out (bad) xor int3 (bad) xor add add test cmp cmp movzwl btr not adc mov clc add test mov cmp test jmpq sbb jb scas lcall jne icebp int3 repz pop mov retq cltd sbb (bad) sub cmp xor sahf rex.RXB mov test out (bad) cmpsb sub shrl sub shrl scas mov sub push in mov callq pop rcrb (bad) (bad) (bad) sti mov xchg mov (bad) (bad) (bad) (bad) jae mov movabs adc (bad) sbb cmc repnz je mov je sbb cs movslq fs (bad) in (bad) pop jg js movsb jbe xor xor jmp mov mov cmp cmp (bad) nop (bad) (bad) (bad) callq cld popfq rex.WR mov imul movabs (bad) iret (bad) fwait mov and callq sbb insl pop ds mov pop cmp movsb rol imul (bad) std (bad) decl iret not lea bswap mov jmpq callq lret repnz (bad) in cmp mov (bad) repz rex.B popfq mov loope imul jae (bad) cli adc xor mov fldl push push sub or mov mov mov clc icebp (bad) mov (bad) imul mov mov cmp adc rex.XB (bad) (bad) (bad) sti (bad) lock (bad) (bad) incb int3 out ja fmul (bad) pop addr32 stc (bad) lret add (bad) int (bad) (bad) cmpsl shlb or mov pop (bad) xchg stc pop jb negb xor xor pushq jb xchg mov (bad) mov out cld mov jnp fdivr fwait push push rex.RB rex.RB rex.WRX cs insb add add insl insl (bad) outsb imul addr32 add and stc stc imul test clc bt cmc add jmpq ds (bad) rcl and rex.WRXB loop in lods and in fnstcw mov xchg rex.WRXB (bad) mov lfs ja movabs jbe jns xorl fsubrl and fs cld sub cmpsl stc sbb pop mov jle jae (bad) mov jl mov push hlt (bad) (bad) mov jnp pop clc (bad) (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) nop xor callq (bad) jg sub (bad) bnd stos add add rex.RB fbstp mov (bad) insb (bad) lods lret mov ja ficom faddl xorb cld or jae jae sub add movabs adc (bad) fwait in mov shlb lods cs rex.WR rex.RXB iret cs movabs add insl mov jle cmpsl sub pushq jb pop mov fisub test (bad) (bad) cmp xchg mov pop adc pushfq (bad) in rcr gs data16 testl mov stos movups fidivr mov (bad) (bad) (bad) decb rex.WB bswap movabs push cmp pop mov xor jne xor movabs pushfq mov fnop out mov cld mov (bad) test fmull scas (bad) adcb mov jns add cmp mov jle mov mov std mov (bad) jmpq pushq jmpq stos jmpq xchg mov std repnz xchg or sahf rex.B rex.XB retq (bad) scas clc jmp sub out sarl pushfq movslq callq (bad) mov (bad) mov rex.W adc rex.RXB jbe adc jbe movsb enterq rex.B rex.RXB cmpsb xchg (bad) pop ss callq retq (bad) add clc fnstenv or add xchg cmc rex.WRB add mov add (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) xchg loopne movslq pushfq in rex.R rex.WB mov int3 insb es (bad) jp jrcxz xor mov xor (bad) pop rex.R repnz xchg addr32 jrcxz cmc pop out mov adc mov repz sub sbb mov jle adc mov add imul add xchg mov btc test mov neg sbb setb add xadd shrd cmc dec mov jmpq jmpq jmpq int movabs xchg sub jg loope in mov loop movabs jmpq cmpsb outsb mov adc cli test sbb mov push andb outsl adc out mov (bad) sbb (bad) (bad) adc cmpsl and mov push cs xchg lret sub loopne insb cltd add mov jb (bad) xor fidiv pushfq (bad) mov fdivrs ss push jns jo addr32 cld jnp and (bad) push jne movabs mov lock (bad) (bad) (bad) xchg fcomip add stos lret xchg mov rorb fsubp xchg mov icebp movabs xchg xor (bad) (bad) test xorl (bad) (bad) cmp or es je scas (bad) mov jg sub xor pushq jns movabs in ror test clc repnz cmp push xchg outsb mov fnsave mov sti movabs jne fsubrs xchg jge push xchg stos rex.RX rex imul push rex.R rex.WR lret (bad) mov xchg mov sub push cmpsb jb movsb xchg scas ss in (bad) loop and pushq sub (bad) (bad) (bad) (bad) cli (bad) add shll fmuls jge add add lret sbb mov movb stos xchg (bad) lret mov xlat mov movabs push xor rep xchg cli pop rex rex.B add mov or test sbb je jbe adc jmpq cmpb jmpq rex (bad) pop in (bad) and rex.WRX movabs (bad) mov addr32 rex.RB (bad) jno cs lods mov jle (bad) movabs cmp clc rex.X (bad) sbb mov jne in loopne sbb mov decb (bad) (bad) (bad) (bad) cld sub add cmp (bad) (bad) (bad) (bad) xchg jo rex.RX movslq push stc stos add retq jle adc ja out (bad) mov jne push rex rex.WRX or scas andl rex.W rex.W xor movabs lahf add nop adc test fimul std mov or jns leaveq retq add leaveq (bad) pop rex.XB (bad) ja (bad) sbb setl not lods stc stc clc sub cmp stc test clc not test cmc bt cmp sub cmc cmc stc rol stc shr jmpq (bad) lret xchg cld pop lock xor (bad) sbbb cmpxchg xchg or out sbb (bad) hlt cltd mov lock and adc cmp add (bad) xchg cli (bad) iret (bad) mov (bad) rex.WRXB pushq cli fisttp or mov (bad) rex.WX lock data16 fidiv mov and fildll repz xchg add enterq scas xor or mov (bad) (bad) (bad) sti loop (bad) (bad) sub (bad) (bad) (bad) movabs adc subb sbb add add rorl rex.WRXB cs lods test mov adc xor mov movabs mov pushq clc (bad) xchg in fs insl cmp sub (bad) (bad) mov orl xlat add push push push push jne jb push gs imul jb (bad) je outsl outsb add enterq loopne cmp sub bt cmp movsbq setp not bswap lea bswap bswap pop jmpq adc jmpq (bad) pop mov sub sahf scas xor xchg sub xlat flds repnz (bad) sti out mov sub rex.RB pop mov ds and out (bad) add rex.RB rex.WB (bad) movslq (bad) hlt xchg ljmp or callq rex.WRXB and sub xor (bad) jl adc andb ficomp cltd cmp mov rex.WB pushq cld jne jns xchg lock test repnz out rex sbb pop push test xchg jbe movslq cli sub rex.WX lea (bad) (bad) (bad) sti js mov (bad) cmp jp (bad) or fs mov and lahf pushq mov (bad) (bad) lcall clc out movabs xchg push jo mov enterq hlt push cmp push fwait shlb mov int rex.RB lret rex.R ss test jle cmp scas jg jne shr rcl stc mov shl sub adc lea jmpq repz sub fdivs es emms push cli clc add xor hlt in mov add pop sub movabs cmpb loope (bad) xor (bad) movsl rex.WR pop fadds adc push nop adc jl add ja rex.WR imul push xchg decb jmpq loope (bad) sub xchg lock stos lock (bad) (bad) cld and (bad) (bad) (bad) (bad) (bad) out (bad) je or fist lods mov outsl add add data16 loopne,pt (bad) mov movabs and (bad) js movslq mov jb sbb or andl fbstp shr rex.XB xchg or xchg mov btc sar shld mov shr neg sub clc sbb sub shrd mov clc sub test test clc cmp pushq bt clc jmpq add rex.RXB gs outsl fs gs outsb fs gs lock decl loopne (bad) (bad) rcrl mov leaveq cmc faddl jmpq rex.WB imul stos sub (bad) rex.RXB test (bad) (bad) cwtl rex.WX mov xchg adc mov andb loop and jg xlat movabs hlt (bad) fcoml jmp adc and rex.X mov (bad) movabs (bad) add stc mov and (bad) (bad) (bad) (bad) mov xor add add pop push adc callq (bad) insb cmp movabs xor sub rex.WB loopne test rex.XB hlt jmpq pop (bad) sbb (bad) cmpsl (bad) (bad) rex.RB (bad) add imul out rex.WRB jmpq gs (bad) divps jne roll movabs retq jns and ficoml fimull callq out xchg jg popfq cmp push (bad) stc adc (bad) out pop cld rex.R sub adc es leaveq stos cs sbb rex.WRX jae sbb pushq sub cltd push mov in movabs pushq (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) xchg (bad) loopne pop enterq retq in repnz pushq pushq loope pop lret xor fidiv xchg jbe sub mov fisttpll imul jo (bad) xor stos imul enterq sbb xchg leaveq (bad) lahf icebp sarl rex.WRXB retq (bad) imul xchg insb mov sbb jmpq jmpq push push rex.RB xor cs insb add rol icebp out and xor std (bad) xlat imul cmc callq push add rex.XB add jge mov divl cld loop (bad) callq movabs fs loopne fidiv sti loope mov pop movabs stos cld (bad) out (bad) xor je scas push rex.WB cli (bad) mov (bad) (bad) std xchg (bad) adc out sbb rcrb fldt rex.WR mov sub (bad) (bad) (bad) (bad) stc xchg pop (bad) rcll int test icebp subl or xor in jge sub cmp add mov lret stc insl pop xor jmpq xchg and add outsb (bad) (bad) mov fistl adc jge data16 add retq stos mov data16 push scas std jle mov fld xchg adc jnp (bad) adc (bad) addr32 pop xor push cmp jbe sbb rex.WRX xchg gs push add add (bad) jns (bad) pop (bad) (bad) (bad) sti jbe jp xchg (bad) (bad) (bad) (bad) (bad) lret add cmpl sbb mov mov in rex.RX (bad) rex.WB (bad) cmp pop in (bad) xor jl sub (bad) (bad) (bad) (bad) lcall mov fmuls pushq rex callq xor (bad) xor callq rex.WRXB and notl rex.WXB retq lea jmpq pop lods mov jmpq cmovnp mov cmp gs fistpll (bad) in xchg xchg fisttpll movabs movsb rorl pop cmp rolb (bad) xor movabs xor scas movsb pop lret xor mov mov popq sbb (bad) (bad) cli lret pop or (bad) (bad) std mov (bad) xor mull and rex (bad) rex.RB fcompl sbb (bad) lret sti mov xchg cwtl fisubrl or xchg lock sti (bad) jmpq cmp psadbw push pushq ja nop stc rex.WX stos jbe adc mov in xchg sbb mov (bad) (bad) (bad) out (bad) and add (bad) pop insl (bad) repz and pop js rex.WX or mov xchg sub xor mov movsl and lret fwait mov cmpsl (bad) pop loopne out jmp sbb stc cmp add cmp bt stc test jmpq mov sub ss shr nop notl xor xor jno rex.XB or rex.WB and (bad) (bad) mov xchg rex.WX push cmp sbbl fisubr pushfq adc adc lret rex.RX rex.B (bad) (bad) (bad) (bad) sti mov (bad) (bad) (bad) (bad) cmpsb jp sar jmp rex.W enterq pushq xor fist xchg mov (bad) (bad) roll pop add add or (bad) addl xchg mov xlat scas (bad) sbb rorb repnz sbb (bad) cmp xor (bad) push (bad) pop (bad) (bad) movabs stos mov sbb pushq clc cmc cmp jmpq callq bts add shld clc bswap stc mov clc cmp bt cmpb jmpq (bad) and mov scas push and loop in add (bad) popfq rex.RX rex.WRX loopne adc clc int repz add roll (bad) mov mov mov rex.WRXB (bad) (bad) (bad) sbb and adc add int3 loop (bad) sbb movslq imul mov js rex.WRB sti sub mov jp loope (bad) out push jp (bad) (bad) (bad) std and (bad) (bad) (bad) jmpq (bad) imul mov (bad) mov loope jmp jnp movabs xor rcrl je int3 imul (bad) (bad) ja mov mov push movslq jmpq jae clc cmp stc clc sub jmpq mov rex.WRXB add retq sub ja add neg add push rex.WRB cmp adc pop out int (bad) mov pushq (bad) mov xchg jnp mov (bad) add mov xor or callq movabs (bad) mov cmp leaveq imul (bad) pop (bad) (bad) (bad) (bad) (bad) (bad) mov push or int lock imul insl (bad) addr32 sbb sbb out xchg sbb mov sbb add add std jae callq outsl (bad) rex.RXB cltd callq rex.WRXB mov xor out (bad) repz push rex mov (bad) mov cld xchg mov lea (bad) insl je bsf mov cmp add clc btc mov cmp test stc test jmpq jmpq xchg in (bad) mov outsl pop add mov mov xchg rex.RXB adc sbb pop (bad) scas stc jmpq (bad) (bad) popfq sbb iret cwtl add or push fnop scas iret icebp xor scas lret mov push retq (bad) (bad) (bad) std mov add add jle imul rex.WR xlat lretw rcr mov adc xchg pushfq sbb and xchg (bad) rex.WXB rex.WX cmpsl cs fs in enterq and sbb (bad) xchg add rol pushfq rex.RX icebp xlat cli test test sbb add roll (bad) imul sbb mov fisttpll rex.WXB sbb jmp in sbb mov cmc rex.WRXB stc bt cmc not cmc cmp cmc cmc neg stc ror jmpq cmp mov hlt nop mov test repz and pushfq rex.RXB data16 and sub sbb nop (bad) jge repz push mov add cmp rex.XB sbb rex.WB retq jb mov loop push and jnp cmp xchg lods (bad) pop (bad) add jg sbb mov fisubrl stos ja (bad) add cld cs test out push cmp rex.RB (bad) (bad) (bad) sti (bad) outsb mov decb pushfq jrcxz fwait (bad) rex.WRXB add or xlat fsubrs jb scas mov repnz cs (bad) (bad) sti pop rex.WB (bad) (bad) (bad) cmp rex.WB rex.X repz (bad) xchg stc movabs adc rex.RXB enterq enterq rex.RX movabs fidiv cmpsl movabs sub mov (bad) push push insb push lods rex.RB (bad) mov movsl adc popfq shll xchg or (bad) movabs pop mov xlat lret fnop mov outsl (bad) (bad) (bad) cld imul (bad) push rex.W jne adc mov cltd and rex sub pushq and (bad) and callq adc jp std push xorb rex.RXB rcrb add add je and pop (bad) cs jnp sbb jno and rex mov rex.RXB push inc scas movabs jno movabs rex.WR mov xchg rclb stos sbb movabs cmp (bad) lods adc fimul and push (bad) cltd rex.R rex.WR rex.R rorl pushfq rex.X cs in (bad) (bad) enterq cli sbb test mov fildll lea fisttpl fidivl movabs incb (bad) movabs (bad) (bad) std rex.WRXB add mov pop xchg adc sub jae (bad) test or rex.B rex.WXB xor sbb clc shrl xlat jl (bad) and insl clc in callq fsubrs (bad) movsl outsb test insb data16 (bad) rex.WB mov movslq (bad) mov xchg callq xchg (bad) (bad) jmpq (bad) iret add test xchg pop sets in xchg fstp fadds jne rex.RXB leaveq and movabs xor mov and mov or or mov (bad) retq scas xchg movsl (bad) mov xlat add sub imul rex.RB (bad) (bad) sti ja (bad) cltd rol ss mov repz xorl cwtl mov push adc mov and add jge rex.RB rex.X jne (bad) (bad) (bad) (bad) mov jrcxz sbb mov addr32 push addl add cmp (bad) rex.WR xchg out jo rex.RB rex.WRX ss or stos ror movslq cs popfq rex.W sarl sub imul mov pop mov xchg jg outsl (bad) (bad) mov or movabs (bad) sub push sbb (bad) adc insb xchg adc retq imul add leaveq rorb xlat mov fs mov mov xor adc pop loop clc (bad) jnp mov lods leaveq jg sbb insl sbb mov pushfq xchg (bad) (bad) (bad) out frstor sbb jns jne (bad) ss pushq scas (bad) fnstcw cli sbb jnp mov repnz sbb mov (bad) (bad) or xchg mov push (bad) addr32 rex.W pushq decb (bad) (bad) (bad) (bad) xchg in fsubl mov pop cmp ss fdivrs rex xchg xchg test mov (bad) pushq jle xlat rex.XB in (bad) mov rex.WRXB jnp fiadd out rex.WB movslq push sti cmpsl xchg adc add or (bad) pushq rex.X (bad) repz adc mov sahf (bad) (bad) mov pop jnp fisubr rex.RXB cmc out iret sub andl jg jmpq gs sbb (bad) lock retq test pop xchg popfq hlt (bad) repz (bad) stc (bad) (bad) (bad) decb jg movsl rex.WRX lock cli pop sub clc jle rex.X enterq cwtl mov xor sbb fmul sahf add loopne push xchg and mov xchg mov jnp fistpll sub and iret (bad) jmpq rex.WX rex.WR jmpq incl popfq test cli (bad) movabs in retq adc rex.WRX jle jnp cli lea je or mov insb xchg push rex.WRX rex.WRB mov jmpq sub xchg mov loop fmul sahf lock xchg cmp scas (bad) cmp rex.WXB jbe cmp je pushfq or (bad) mulb retq stc rex.WRXB addr32 push jbe or stc adc shl mov and (bad) (bad) sti rex.WRB xchg sar (bad) (bad) decb adc clc push pop xchg (bad) adc cmpsl adc and (bad) (bad) (bad) decl int loope sub enterw (bad) (bad) (bad) push notl adc jge rex.WRX rcrb add or and test lods mov sub adc or sarb xor pushq (bad) (bad) hlt add jmpq cmc rolb jae addr32 std (bad) xor sub cmpsl int3 add repnz (bad) lahf repnz out pop movabs out cmovno fsubl jns in mov gs rex.WX movabs cld (bad) lahf xchg rex.RB (bad) (bad) cld rex.RX (bad) (bad) decl adc jno data16 pushq and xlat retq shrl or and xchg loope jge jmpq xchg rex.WRX ss jp icebp out (bad) xchg test in lods pop lahf movabs (bad) add add rex.WB (bad) mov cld cmp adc (bad) push insl stos sbb (bad) xchg cmc xor jp (bad) ffreep add and and sbb fwait add jnp in sbb shll mov xchg mov test stc cmc cmp bt sub cmp cmc cmc test not cmc cmp test sub bt bt rol jmpq jae xor rol inc neg mov shl bsf sbb shr mov dec mov jmpq mov xchg or in imul jne pushq ds (bad) in rex.R sti lock (bad) lret stc scas sbb mov mov pushq jne gs int3 xor pushq and cmp (bad) std xchg cmc adc jns movsl fcoml cli xchg adc xchg mov cmpl pop (bad) mov mov (bad) (bad) (bad) sti (bad) mov (bad) add (bad) (bad) incb movabs adc insb rex.B out adc out jmp test out jg and or hlt (bad) (bad) (bad) incl (bad) (bad) cmc xchg sti pop xor (bad) ja lret jrcxz insb (bad) pop leaveq mov and fidivl (bad) test and (bad) in rex.W mov in ja (bad) mov ss stos (bad) divl adc (bad) sub add cmp (bad) cwtl lahf shr push xor rex.XB fdivrs mov test (bad) jrcxz lods (bad) rex.RX iret test (bad) pushq sub rex.W lret out data16 in adc test in data16 pop cli mov in div (bad) adc scas xchg fistpl jae mov (bad) (bad) pushq (bad) cwtl (bad) lods (bad) push or (bad) (bad) xor and imul push movabs imul (bad) sbb (bad) cmp mov cltd stos adc scas pop cmp jle sahf xor pushq mov cwtl push insb cwtl cmpsl xchg stos lret or test insl (bad) repz es leaveq (bad) sub in mov mov in or mov sub icebp xlat shrl gs rex.X adc rex.R test adc (bad) jl sti in rex.WXB repz movsb rol lret push cmp push lock std (bad) (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) cmp mov mov sbb ds test mov sbb mov cmp jb or sbb xor movsb retq xorb movabs push (bad) outsl ja sbb adc rex.WB xor leaveq pop lahf gs jne push add adcb movabs and push retq pop mov (bad) pushq adc callq bswap mov jmpq jmpq rex.WRB jp sahf jno jp fstps mov and gs outsl (bad) push pop xor (bad) test push pop or rex.WR enterq mov and fnstsw cmp fdivrl add insl mov movd pop fistpll fdivrl sub (bad) rex.RXB rex.WRX (bad) ss (bad) pop cmp (bad) (bad) sti mov (bad) (bad) (bad) incb pop roll (bad) mov imul mulb outsl or (bad) out popfq sub movsb (bad) cwtl fadds jae rex.XB (bad) xchg pop out jle (bad) jns outsl cli (bad) cmpsb fsts (bad) inc (bad) ss (bad) xchg test push xchg cld pop test (bad) and mov cmp cli popfq lret sahf retq movabs test sub test mov test xor insb pop fwait (bad) imul (bad) frstor leaveq and rorb mov pushq fdivrp sub (bad) jmp (bad) add sub out in xor pop clc cmp push ja xchg xchg ror std rex.RXB lea mov rex.WR mov cmp (bad) movabs add sub pushq pop mov (bad) leaveq data16 or xchg je adc (bad) (bad) (bad) sti mov mov (bad) decb sti (bad) jne,pt scas in mov sbb cwtl out rex.WR test (bad) (bad) dec subl rex.RX ja (bad) test rex.XB sub mov adc push (bad) push rex.W cs shl mov loopne pop ficoml pushfq or mov ja xor sub inc bt (bad) lock lods jns pop adc inc bsf mov sar mov test bt clc cmp repnz jmpq callq jmpq rcr mov bt test bt bt test jmpq jmpq cmc add jbe jne jmpq rex.WXB rex.RB rex.WRX rex.RB xor cs insb add xor fsubs xor mov test mov pop jne insl pop mov cli (bad) (bad) stc out sub push push pop jle cld movsb (bad) mov adc test shlb retq fimul and sbb in rex.X push and outsb callq jp fistl cmc sbb or sbb sub pop sub mov mov rex.RX cmp add adc idivl movsl outsb and pop (bad) stc xchg mov push lods and insb (bad) sub mov (bad) cld adc rex.W jne (bad) (bad) (bad) (bad) xor test (bad) jo rclb push rex.XB sbb add cmp add add (bad) (bad) out rex.B lock pop and or sub jle push je mov enterw mov pushfq push loop xor add mov (bad) add add add add add (bad) add sbb sbb sbb shrb add sbb add (bad) add add add add add add and add add add jb add add add (bad) (bad) add sub mov add add add add mov add hlt adc add in sbb add add or (bad) add gs mov movabs (bad) jp movabs jns movabs rorl xor sbb jrcxz adc cmp jg sub test sbb sbb faddl xchg (bad) popfq sub jnp mov xabort (bad) sbb jmp repz mov addr32 (bad) mov rex.RX (bad) cs js rex.XB and sbb (bad) sub movabs sbb push out fcoms (bad) stos pop mov push subb rex.WR insl xor fcmovne outsl cmp xor pop mov sub push rex.XB xchg stos xor mov sub push mov (bad) (bad) (bad) push push sub cltd int movabs jae je lret hlt iret sbb out mov push lock add ja cld repz test js rcrl xchg sbb mov out xchg add mov fdivrl int and cmp movabs (bad) mov xchg jae fwait pop rex.RX rex.R int3 (bad) cmp xchg fnstcw js rex.WB rex.WR (bad) pop rex.X fisubl mov rorl fnstcw xchg imul and adc push (bad) xchg fwait (bad) addr32 xchg rex.WR jle cli fwait mov loopne jge mov movabs (bad) mov rcl xchg jbe mov rex.WRB xchg sarl sbb ja rex.XB rcll shll adc (bad) jnp mov sbb mov fstp (bad) retq imul pop shrl fucomi cmp mov leaveq xor mov xchg sbb mov (bad) mov pop mov movslq outsb (bad) jns jg fdiv rcr (bad) (bad) xchg lret movsb addr32 or mov out mov (bad) addr32 cmp rex.WX mov int loopne mov int3 rex.X pop rex.WX sub negl (bad) lods sbb addr32 negb mov rex.WR push int3 sbb cmp mov (bad) mov (bad) movsl repz rex.WB rex.WR pop shrb (bad) int cld rex.X rex.WXB cmp cmp out jnp lahf jmpq mov movslq jmp cli rex.RB decl lret (bad) jne fpatan (bad) fwait cmp pop mov idivb and pop (bad) js (bad) (bad) retq mov mov fld (bad) loop out xchg retq movsl xlat cltd mov lret pop loopne cmpsl or stc xchg std (bad) sbb and jne leaveq rex.R lret retq jne js and or in in pop adc test (bad) movabs jmp pop push out lret cld jnp and mov cmp jle jno rex.RXB push bnd out rex.X movabs (bad) push rex.WR addr32 fdivs push rex.RXB cltd push (bad) shll fistpll lret mov (bad) test rcll mov push xor test jne ja mov in jmpq (bad) pop vaddsubpd clc (bad) cmp rcll sti test add shr fidivrl fwait outsb (bad) movabs (bad) jbe lret (bad) mul rex.RX or int3 stc lret rcrl repnz rex.RB mov movabs jne scas mov rorl scas fsubrl ja (bad) mov rex.WR es adc shrb (bad) retq mov out rcll rol mov cmovno jno lret adcl mov (bad) scas fmul orl stc cli sbb mov cmp cld adc xlat jbe pop jae xchg lea movabs cmove xchg xchg adc movsl (bad) sbb mov sbb fiaddl xlat retq jae xchg mov jl and retq rex.XB repnz xlat mov stos pushq ffreep (bad) sbb rex.X pop rex.RX (bad) vmovhps mov mov pop pop out cwtl pushq test clc (bad) cmp jl rex.RXB jne mov push int mov out mov rolb xor xchg retq (bad) movsl test ja imul cmovbe (bad) xor movabs xor xorl vmovsd jle mov repz push pop fiadd (bad) rex.X retq fdivr jbe push adc cmpsl (bad) rex.WR stc mov loop movabs lret (bad) mov xor push (bad) mov retq push push rex.RXB addr32 cmpsl (bad) movabs lret rex.X movabs (bad) sbb callq lea push mov push fiadd (bad) jp add imul (bad) cld (bad) xchg pop cmp rclb rex.WRB insb push fsts cmp xchg rex.WRXB (bad) (bad) fsubs xchg push shrb sub not ljmp mov cmp mov ja ds movabs (bad) xlat addr32 push sbbl or pop fnstcw shrl leaveq (bad) xlat (bad) xchg pushq xlat out mov (bad) ja mov sbb xor jge cmpsb leaveq int3 push mov add cs mov lahf lahf mov xor sbb pop (bad) (bad) nop rex.B movsl std mov movsl fisttpll mov or iret cmc fdivs sbbl (bad) mov enterq cmpsl retq rex.RX rex.WXB (bad) retq hlt callq (bad) xor mov add push (bad) mov cltd (bad) cmpsl int lret sbb int sub xchg imul mov lret rex.RX movl outsb stos scas rex.WXB (bad) addr32 out mov (bad) mov sahf pop sti mov cmp (bad) sub fstpt xor pop mov out stos or mov sbb scas mov lahf in mov mov mov flds mov (bad) mov rex.WRB push cltd pop fcmovb jrcxz in in imul mov (bad) hlt push test jle (bad) jg jnp add out mov imul mov fsubrs add (bad) leaveq and (bad) fcoml rex.R fwait scas (bad) cmpsl rex.RB mov addr32 rex.WB mov imul stos (bad) imul xor insl sub cld xlat push xchg imul lods rcrb mov mov (bad) scas cmp int3 orl mov fwait insl (bad) xlat fcom mov sbb cs (bad) rex.WX int3 sbb fild jbe xchg cmp jbe mov add push mov (bad) rex xchg (bad) pop (bad) adc mov stos rex.X loop (bad) pop sarb mov xchg sbbl rex.XB lahf (bad) adc mov (bad) xlat push cmp mov mov rcr sbb int3 xor nop cmp (bad) jp fnstcw xchg std mov xchg (bad) mov (bad) scas push jle sbb cmp rex.WRB sbb cs cmp movabs jno or xchg rol adc cmp lret imul sbb sahf xor decl pop push sbb pushfq xchg gs push (bad) repnz mov icebp sbb pop and adc movabs movabs mov retq jae adc pop cmp pop out pop in xchg fcoms push mov push mov add (bad) rcrb frstor xor setge xchg clc test movabs sti fucomp cmp pop (bad) mov nop (bad) (bad) jb adc popfq lret sarl movslq es and cmp rex.RXB clc ja lods mov pop (bad) rex.WXB stos jle mov (bad) pop (bad) rex.W rex.WX sbb (bad) and rex.B lahf pop ss nop fildl ss mov mov lods xchg je xor sbb mov (bad) mov jl (bad) jnp (bad) cmp (bad) (bad) sub cs xlat fpatan xlat fistp xlat xchg jrcxz ja rex.XB rcll (bad) rex.WRX in (bad) mov or test xor (bad) insl or adc mov std xor cmp (bad) xor fcoms (bad) (bad) (bad) mov rcrb rex.WXB (bad) jae or add loopne jns neg cmp rex.X adc (bad) and add cmp outsl xchg sbb jae jg out in (bad) jrcxz (bad) push cmp bnd fdivrs shrl clc rex.XB rex.RXB or fnstenv out (bad) rex.WRX cltd sbb retq jle imul pop rex.WRX rex.RX adc jb (bad) jp xor xor (bad) in pop and push loopne out out shrl rex.W stos vdivsd enterq js repnz sub xor rex.B rex.XB rex.WRXB cmpsl (bad) jge retq cli repnz loop (bad) (bad) out rex.WRB addr32 cs movsl adc sbb fbld fcmovbe xchg rex.WR roll sbb data16 jmp sar cmp stc retq sbb xchg pop jbe fistpl insl mov imul fdivrs imul cli (bad) or fadds fistp mov negl push jrcxz xor jl fidivl mov out or mov rex.B rex.WR pop adc retq push or fisttp cmp loope fwait pop mov xchg movsl js rcrl out xor xchg mov gs leaveq js (bad) mov test rex.XB sbb (bad) rex.WXB mov adc (bad) out test andl xchg mov rex.WR stos fsincos sti test push iret enterq rex.XB pop fidivr rex.WX mov pop pop (bad) stos cmp stos mov xor xchg rex.WX rex.RX mov xor fidivl mov pop sbb mov push rcll (bad) sar rex (bad) pop out (bad) push int3 jnp (bad) callq rex.WB (bad) push adc mov (bad) sbb mov add rex.WRXB int lret mov xchg sahf adc push (bad) movsl mov out pop fild leaveq test adc cmp adc cli es shl movsb jb add pop movslq (bad) push cmp gs (bad) shll xchg or loopne xchg rex.R lods hlt cld (bad) int mov scas pop (bad) cmpsl pop je cmpsb lods add test sti (bad) sti pushq or and pop or jne and (bad) sub hlt rex.WB int3 rex.WX rex.RX gs pop rex.X lea push (bad) stos cwtl adc mov loop cmp cmp sti xchg fisttpll jnp rolb repnz leaveq (bad) (bad) mov (bad) frstor mov push xor pushq (bad) (bad) retq mov rex.WB cltd test xchg rex.WRB xchg pop test mov jbe loope mov data16 outsb jmp adc (bad) rclb sbb mov cltd stos jle xlat (bad) mov (bad) loope sbb out add cld (bad) mov rex.WRX std retq lods jrcxz orl xlat jl (bad) xor sbb and nop (bad) sbb mov jnp xchg pop cmpl or lret pop fcoms rex.WR (bad) ja (bad) rex.WX int mov (bad) jae cwtl sub push rex.RXB rex.WRB pop pop or mov mov rorl loope rex.RXB dec (bad) (bad) sbb repnz in sbb rex.WRB rex.WRX xchg mov pop out mov pop fistl testb (bad) jle mov jbe lret retq jrcxz xor cmpsb repz popfq fdivl push cmp enterq mov pop xchg pop jns loope adc xchg fxch callq sbb rex.WRXB pop fldenv nop cli movabs fistl pushq out push movabs (bad) xorl rex.RXB repz adc movslq clc pop sti callq repnz (bad) ja leaveq (bad) jge jl (bad) adc (bad) jns xchg fist movabs push ktestw sbb or outsl imul movabs rolb jns fmuls pop roll lahf lret loopne shlb nop mov sbb movabs (bad) mov (bad) push adc adc (bad) scas js (bad) pop (bad) popfq rex.RB retq rex lret or or shrl mov fwait adc lret idivb subb add xchg mov fildl pop cltd jno jnp fadd (bad) (bad) addr32 mov rex gs movq (bad) jmp iret faddp pop movsl jae ficom retq cmpsb rcll (bad) outsl mov mov sbbl (bad) fxch out pushq mov (bad) insb sti adc (bad) jge fimull fidivrl jo ja pop jns (bad) rex.WRB fsub pop rclb (bad) pop xchg pop (bad) sub rex.RX lahf retq rex.WRXB (bad) push clc rex.RX sbb lret xor mov popfq pushq movabs jae sbb rex.R cmc rex.WXB movabs stc enterq mov rex.W mov or (bad) ss (bad) loopne rex.RXB fistl lea mov (bad) jo out (bad) (bad) xor jnp or (bad) mov rex.R out loop (bad) push adc fsts and scas mov sub outsb lret sub push pop add out mov mov rex.B rex.RB rex.RXB mov xchg in fwait add (bad) leaveq cltd fdivrl movabs push movabs (bad) or add push push jmpq ja mov loopne and pop xchg adc fs jle repnz loope movsl rex.WR gs movabs (bad) iret jo outsl cmp mov fnop jb jnp pop scas repnz adc pop rcrl jge jb add lret (bad) cmp leaveq cmp retq mov sti rex xchg (bad) rol xchg repz (bad) enterq lods div cmp pop pop out xchg mov sbb rex.WXB loope imul sub out fbld cmp mov mov jp push fnop fcomp mov lahf lods fwait rclb or or push cmc fiaddl add sub mov mov and add jne scas adc push add lret pop rex.WRXB adc pop cltd pushq jnp pop lret pop fwait sti xor mov ficom rex.R addr32 jns stos push mov (bad) pushq push mov (bad) and rex.WX xchg mov pop mov sbb fcompl mov ficoml (bad) mov loope lock ficompl int add rex.R outsl (bad) movabs mov push (bad) jno scas (bad) push rex.XB pop stos stos push (bad) rex.W lret lret mov fsts adc rcll out callq test pushq mov xor add iret fs cli pop cmpsl cmpsl (bad) jrcxz pop lods (bad) andl shrl (bad) cltd leaveq int outsb test xor repnz mov pop sbb or ds jge test rcrb rex.RX sub pop cmp sub rex.WXB fwait cwtl pushq movslq pop icebp add test jnp movabs nop (bad) rex.WRX fmul or (bad) push xchg rex.WRB rex.WR data16 loop out adc ss shlb mov mov jno movsl rex.W mov rex.WXB ja rex.R stc jrcxz push cli fsubl sub loope and movsb pop retq mov jp xlat ja (bad) xchg push (bad) insl rex.WX adc mov fcoms (bad) in or std xchg sub fwait stos lods std xor nop clc mov xchg mov jl jns sub rcll rex.RXB xlat (bad) loop lret rcrb (bad) push cmp sub (bad) mov (bad) sbb imul adc cmp xor mov jp jmp loope retq movabs int3 (bad) (bad) cltd adc (bad) cli push mov cld rolb std jbe testl addr32 (bad) fwait std fxch xchg lods in mov stos rclb sub sbbl js leaveq test notl retq pop fwait lret rcll (bad) pushq jp ds imul (bad) stos push adc imul rex.W rex.WRB fwait js (bad) sbb push rex.B lret lret int mov movabs pop sbb xor je pop mov jrcxz jns mov or cs cmp outsl (bad) sub rex.WB mov rex.WXB lret push (bad) pop movabs pop (bad) jmp (bad) mov or (bad) (bad) shll jne (bad) pop sub or in sbbl int ds outsl adc movsb xor fs andl mov sbb ja (bad) push mov and shrb xchg hlt jb push cmpsl retq jrcxz (bad) fwait cs add rcl rex.RXB rex.XB rex.RB rex.WX clc imul rolb mov (bad) pop test rex.WRB rcrl loope imul nop (bad) lods xchg sub pop mov sbb (bad) jnp cmp cwtl push test push vcmpsd ja sbb (bad) (bad) addr32 fildll rex.WB lret (bad) lret lsl mov pop sbb lods movslq mov jl xchg adc enterq (bad) xchg (bad) and popfq (bad) mov jns rex.X pop xchg sti jp enterq jo outsl cs pushq (bad) movslq jae movsb (bad) rex.R cltd (bad) lods lods and xchg in jae jnp ds jbe out movabs rex.WXB fs js retq xorl xchg mov fnstenv loope jle xchg enterq pushq sbb (bad) xor jp rex.W jne pushq fwait cmc jb mov mov jl pop or js pop and int3 rcrb mov iret popfq cmp jp jl mov scas std test (bad) callq mov (bad) pop xchg (bad) rex.WR lret cmpsb popfq sbb movabs mov cmp test (bad) jae pop mov fldcw retw rex.XB rex.XB loopne addr32 ficom mov xor loop cmp mov movslq (bad) sbbl (bad) or scas repz and lret lods jne mov xchg cli mov rex.WRX fist rex.WRXB mov sbb (bad) adc adc jp fmul mov test lcall (bad) cltd mov mov fwait lea rex.WRXB out push cmp cmp scas xor or pop mov outsb loope mov retq (bad) mov mov por movsl fsubl jp fimull (bad) out stos mov imul (bad) (bad) sbb xchg test sarq repnz (bad) pop rcr xor push xchg adc cli mov shrq jp cltd scas loopne loope cs out sub xor fwait hlt pop cmp leaveq lret sub add mov retq test cld rex.WRX pop cli fwait in (bad) (bad) jns outsl (bad) fs pop rex.WRXB push lret (bad) mov xchg cmp stos pop adc xchg jnp mov xchg rex.RXB loope pop rex.WB movabs (bad) cmp push ja xchg scas in xchg sti rex.R mov (bad) mov pop mov jmpq loopne imul rex.X callq push shr stc xchg xchg idivb push sbb and mov jmp orl (bad) rex.X movslq mov xchg push mov rex.W rorl leaveq rex.WRXB loope sbb rex.XB jb movabs push repz jp outsl leaveq ds js jo (bad) push jnp (bad) sti mov cmp sub sbb pop pop mov xchg insb rex.WR mov fwait (bad) pushfq (bad) jae pushfq xor (bad) jnp (bad) movsb sub cmp (bad) sti jo xchg (bad) (bad) (bad) xchg xchg push mov test repnz js lods cmp add rex.WRXB imul cmp xchg scas movabs sahf or test mov rex.WRB test (bad) fmuls test push and (bad) fwait (bad) fidivr repz (bad) outsb sbb repnz mov (bad) movslq (bad) rex.R shrl movabs pop push xchg popfq (bad) ja jle jmpq loope out rex.WXB imul add movslq rex.WRX sub ja cmp js test adc movslq (bad) rex.RB mov mov jns enterq pop (bad) stos loopne mov rex.WRX addr32 psllw std testl mov (bad) add mov movslq pop clc pushq pop je mul in pop (bad) stos mov out (bad) in hlt iret push (bad) outsl xlat jge xchg (bad) mov add pop scas sahf retq fdiv pushq jmpq scas rex.RX fst cmp jbe xchg scas imul jns sub retq test sbb mov lods cs out ficompl int js pushq push pop insl mov hlt shlb fdivr add cmc rex.XB enterq mov (bad) cmp adc cmp clc (bad) pop movslq fxch push sbb (bad) jns rex.R sar icebp push (bad) jp mov jmpq mov sbb jle andl mov pop and mov je fcomip cmc pop pop in mov sbb (bad) rex.WX cmp in in pop jnp mov outsl sub mov jge cmpsl mov pop sti in mov jmpq loopne fs jns movabs and rex.WXB out jg movsl imul loop mov or out jl (bad) sbb pop and rorb cmpsl outsb sbb outsl fwait insb (bad) rex.WXB outsl pop fldcw mov (bad) cmpsb lock jb (bad) and fldcw and icebp (bad) lahf rex.B adc or subb loopne (bad) retq jp mov repz jne (bad) (bad) cli mov sbb movslq je imul sbb xchg fistl mov frstpm(287 jb add rex.WRXB fwait loop xchg outsl and retq stos (bad) push mov jp (bad) (bad) mov outsl pop (bad) pushq iret or sbb es fwait pop ss loop jns xchg sbb repnz adc fcmovu cli cs sub int push test or adc popfq rex.WXB movslq std (bad) mov or (bad) icebp and or pop xchg push xlat pop push or loopne test cltd imul mov stos jae hlt adc pop mov add jb (bad) mov cmpsl rex.WX cli retq pop cmp rex.WB rex.RB mov xchg push movslq pop rex.RXB repnz add fstpt cltd out cwtl stos imul js test jns mov retq jns lret (bad) push (bad) xor xor xchg (bad) je adc mov (bad) imul lock int callq fistp movabs (bad) (bad) jns rex.W ror test movabs adc (bad) incl neg test (bad) xchg cmp (bad) imul jl mov or movabs in rex.WX xor mov xor adc int3 cmp es mov cs rex.WRX rex.R sbb fbstp rex.W cli mov test movabs (bad) retq repnz xchg loope (bad) xchg out cs mov imul xchg fwait mov pop mov and rex.RXB xor adc gs mov rex.WXB and jmpq (bad) iret or roll pop (bad) push jns ja (bad) icebp adc rex.WRXB (bad) add es sbb xlat cld rex.XB push cmp sub rex.WR js push out outsb sahf (bad) loopne sbb (bad) xor (bad) ja sarb pop (bad) lahf (bad) in xlat fstp fistpll out (bad) mov cmc loop xor rex.X cs xor rorb sub cmp gs sarl push mov rex.WB repnz jo (bad) mov adc jne push fcompl sti rex.WRXB rex.WXB (bad) fmul fs adc icebp xor xor mov lret in xorl jb rex.B pushq sbb adc rex.W clc ja fs callq test sub outsl retq in rclb cmp mov in (bad) iret repz pop cmpsb cwtl enterq xchg sti lock es jmp (bad) mov (bad) and rex.WRXB fsubrl xchg clc ss (bad) sub xchg xchg retq jnp movabs outsb sub retq outsl fildll xchg mov pop je ja xor repnz push rex.B imul jb stc mov lret data16 pop rclb or sub xchg add sti mov cmp rex.WXB lahf push push lret lods movsb mov cmp rex.WRXB xor fstl roll cmc push jl cmp add lret (bad) xchg mov hlt loope rex.WB mov or xchg mov cmpl movsb es or std out mov sub fdivl adc scas jns ficoml jp mov mov pop fbstp std subl xor outsl push (bad) pop retq mov mov (bad) cli xchg movslq add stos pop rex.RXB (bad) jno mov (bad) jmp jmp (bad) jp enterq (bad) in pushq push xor xchg pushq fldenv iret adc rex.WXB hlt rex.WXB xor rex.X jns cmp andl xlat int3 cltd rcll push mov add jne rex.XB (bad) push xchg mov rex.RB (bad) mov add rex.XB (bad) cmp lea movabs adc (bad) mov xchg pop mov xor shl out mov rex.XB (bad) movabs push mov xchg xchg pop jo fsubrl jrcxz retq mov or fwait (bad) fwait repz fs mov lock adc fisttpll or pop nop sub add fwait pop (bad) clc rex.WRX push (bad) push imull xlat mov or sbb (bad) fnstsw (bad) adc loopne cmp mov (bad) mov pushq scas lret and rclb sbb retq rex.XB fsts xchg cwtl (bad) (bad) cmp loop push sbb (bad) push retq (bad) js (bad) mov adc int3 xchg fldl pop sbb and sub sub shrl push jb imul stc (bad) jl cmp rclb outsl xchg movabs pushq lret subb jg rorb lea rex.WB sub addr32 (bad) add lcall jle fcmove out push notb lret stos pop insl and out jg outsl add lret test cmp stc jl,pn pop push xchg (bad) movslq jnp roll mov mov push xchg rorb rex.WB es add jl rex.WX (bad) add rex.WRXB jns fbld mov test jmp cmp (bad) js adc push adc movsb callq addr32 movslq jb retq ja loope (bad) mov (bad) enterq mul fimull fwait out mov (bad) mov sti mov mov jb (bad) pushq jp or mov or cli repz testb pop cld cmc xchg and rex.WR (bad) rex.XB retq ja jb imul gs shl rex.W rex.WRX jo rex.XB scas or jae (bad) out fwait pop adc pop popfq gs test cmpsb add sub (bad) push mov jmpq xchg (bad) and sar rex.WX mov addr32 xchg lret pop mov push mov sti pop push retq test mov mov jp stc rex.RB rex.WXB fiaddl shrl push sbb loop (bad) xchg loopne pavgb lret mov lock ss int3 and xchg (bad) rex.WXB xchg fdivrs pop fdivs xchg (bad) sbb jns es stc pushq test xchg pop mov jae or rolb in push (bad) fstps rex.WRXB cltd jo imul pop jb rex.RXB cmp and push push shl (bad) xchg std xchg adc ja push cwtl (bad) push xor test add add rex.WXB iret out adc xchg push in (bad) outsl cwtl jb cmpsb or jmp gs (bad) iret and or xor (bad) outsl mov cwtl jmpq mov pop push fidiv mov (bad) iret jbe mov cmp bnd rcr add pop pop xchg rcl mov js rex.RB cmp mov fstpt test cmp jae rcrl movsl (bad) push (bad) fdivrl push pop adc mov sub stc pop rcrl test sti sbb jrcxz lock sbb lret jmp enterq vaddsubpd js (bad) (bad) out xor cmc mov (bad) push pop jns nop sub sbb rex.RB push retq push outsl or jnp (bad) xchg lret (bad) jae jno pop insb mov ficompl adc in mov rex.WRX je (bad) movabs pop lahf (bad) xchg add (bad) (bad) mov pushq addl cmp loope pop cli loop adc shl sti cmpsl rcrb lret popfq add pushq (bad) xlat rex.WXB jnp jo decl push sbb lods fisttpll icebp fnstenv pop imul pop rolb in push (bad) push mov mov or data16 pop loopne jl sbb fnstenv repz out mov nop push xor lods or cltd loope xor in adc iret shrl sti jb fnstenv jmpq out rex.RX in (bad) popq cli pop mov (bad) movsb lret jbe sbb clc mov sahf push add jo fistpll mov cmpsl adc mov sahf mov rex.WRB fwait imul add jns adc fwait pop (bad) xor pop loopne cmpsb cltd sbb pushq push rex.W faddp mov sub std sbb rclb in jns lret mov rcll add (bad) leaveq div (bad) movslq pop fistpl jrcxz add mov stos loop cltd mov fdivs js insl loope scas (bad) pavgw clc (bad) and (bad) loop rex.RXB movabs imul fisub jo,pn outsl (bad) int3 mov xchg nop mov ja movsb push std (bad) push stc push (bad) sbb xchg test mov rol mov rex.WX ss rex.RX fcoml outsb roll shrl and rclb lretw test (bad) out push cmpsl xchg imul rex.RX repnz fidivrl adc rex.RXB cld fcmove (bad) xchg sub cli (bad) cs repnz mov lods jl xchg sbb mov test rex.RB jle repnz cwtl vmaxss add push ss (bad) xchg fidivrl xlat pop sarl xlat rex.WX pop cs rex.WX pop rex.WRX pop xlat push (bad) cmp (bad) stc outsb mov jmp rex.RXB mov pop pop outsl cmp mov fwait (bad) je push (bad) (bad) cmc push mov xor int mov push mov int iret (bad) mov rex.WRXB cs (bad) rex.RB cmp adc lea xchg (bad) jrcxz shlb xchg lret lea pop (bad) movabs fist outsb push (bad) stos clc (bad) cli loope cmp push movabs callq xchg push fdivr add retq gs (bad) lahf xchg lock shr movabs xchg xchg mov fcompl rex.RXB jnp fimull fstps shrb jno mov cltd jae jbe push (bad) xor callq mov pop jp ja mov js (bad) pop test push in cmpl movabs loopne cmc scas xchg movabs sub js sarb (bad) orl jl cwtl rcr rex.RB (bad) jl jno movslq xlat loop sbb divl movabs out mov (bad) fs add xor (bad) pop (bad) psubsw cmpl or rex.WRX jrcxz sbb jle callq rex.W imul add (bad) sti mov pop fisttp rex.WRXB je ja ds sarb retq lea or push (bad) mov cmp lahf (bad) jnp adcb enterq adc (bad) sahf sub clc pop jnp leaveq ss and pop or add rcll jo adc imul xchg sbb lock sar pop fldenv xchg mov (bad) int rcll adc test cwtl mov mov cmpsl (bad) mov pop rex.WB lock pop stos (bad) xor add fidivl (bad) xor (bad) (bad) (bad) sbbl int3 push (bad) add jo out rclb loope imul xchg mov (bad) (bad) mov pushq pop (bad) pop push and (bad) jrcxz,pt adc mov test push jbe cmpsl xchg adc nop sub test sub out jnp movabs pop out callq cmpsb (bad) adc pop (bad) js sbb iret push sub out and mov push (bad) cmp jrcxz (bad) sbb sbb (bad) out add imul mov xlat outsb rcl icebp (bad) add sub sub rex.WXB xchg stos push rex.WRB negl pushq and adc mov or mov test rex.RB rex.WRXB fstpl jmpq imull mov ds xchg rex.WXB rcll jb cltd outsb (bad) rex.R push lret imul sub rex.XB out mov leaveq lret push imul push or fwait orl or sbb andl insb movsl mov movabs mov clc mov (bad) scas scas cmp fistp mov insl rex.WRXB rex.WRX rex.WR jmp lock out idivl push mov loope lods testl xor lea pop jmp or cmp cmp xchg mov add or cs jnp cmpsl mov in (bad) mov sahf jae movslq (bad) loope xor xor rex.RXB push pop push icebp pop jns pop loopne lahf sti jae fild test enterq fs push leaveq or mov (bad) (bad) jno xchg (bad) mov pop mov xlat mov xchg (bad) jrcxz sub jns scas (bad) movabs (bad) gs xchg rex.WR fstpl mov mov jne add leaveq (bad) (bad) or (bad) push (bad) push rex.RXB xor mov mov mov (bad) pushq out xor xlat pushfq (bad) and cli mov movsl imul jae mov (bad) push cmpsb pushq ss movsl add rex.W (bad) stos jrcxz cmpsb xchg lods jb cmp pop movsb rex.WRB push rex.WX in scas jg loope lods adc insb (bad) rol movabs fstl add adc shrb stos outsb push or icebp rex.W cmc repnz imul enterq fldt mull pop xchg in sbb mov mov rex.RX or clc jmp gs mov cmp out pushq jne mov loop fnsave icebp int3 fs hlt mov xor xor hlt in out sti (bad) pop xchg jns ja pushfq cmp cmc mov cli sbb data16 pushq rex.W xchg pushfq testb cmp leaveq movslq loop or xor sbb lea add test jmp rcrb mov jb sarb (bad) jp xlat lret out callq scas jrcxz adc fmuls add mov fidiv outsb ss rcll rex.RXB callq (bad) mov push jge fisttpll rex icebp xchg mov rcll icebp mov xor pop sbb sbb (bad) jae (bad) sti (bad) or and mov mov js cmp (bad) sbb pushq xchg jbe xchg js movsl fimul fsts sti (bad) repz int sbb mov loope rex.RB or (bad) mov gs (bad) jb callq outsb mov rex.RXB callq xor imul mov adc lods sar or rex.X jb rex.WXB retq rex.RB ds jns mov sub ja jb repz cmp callq js or test fsts (bad) icebp push rex.WR rex.X rex.WXB fs cli (bad) outsb movabs in std imul pop xchg jg out insb fstsw xchg sbbl and xor push jp xchg mov (bad) repnz ficomp fcmovnu xor in xor jnp mov movsl popfq cmc rclb clc (bad) rex.WRX (bad) (bad) adc (bad) push jne adc mov adc shrl lret pop data16 xlat jb rorb imul out add je rex.WRB rex.WX adc cld rex.WR out outsl (bad) push adc sub je mov sub (bad) sarb jno fcmovne jge adc rex.WR adc callq rex.WX cmp fistp mov push hlt push sbb mov movabs test lret push push (bad) je in jb sub pop out insb pop jl leaveq imul jrcxz out movsb loop fisubrl repz lods (bad) pop cmp out rex.WXB gs gs sti jne mov insl jmpq fs js (bad) (bad) fcmovnu (bad) leaveq mov (bad) pushfq fwait xor mov (bad) movabs fwait lods shrb sub xor shrl outsl rex.WRX repnz fldenv negl pop mov callq repnz adc cli and pop ficom push mov hlt pop stc xlat imul jp fadd cli (bad) xchg (bad) rex.WXB rex.R (bad) (bad) sahf jae jo js jle jp rex.WRX shl rex.WRXB push movabs lahf xchg add movsl fstps subl (bad) fist (bad) jge add out (bad) scas (bad) (bad) and mov rex.XB stos hlt lret in scas mov xchg out roll (bad) out add (bad) push (bad) fdivs cltd jp mov mov movabs (bad) scas subb outsl (bad) mov stos push rex.WXB jbe popfq rex.B (bad) mov movslq xor movabs jns pushfq stos push pop test lock mov ss mov jno sahf rex.WRXB loopne adc shl shll mov pop movsb fwait cmpsb sub cmp push in rex.WR cmc int push (bad) cmp sub rex.XB pop rex.WX (bad) std xchg and (bad) out ss xor (bad) mov pop test rex.RB fsts sub lret lret mov push mov rex.WRXB mov xlat cmpsl push movl movabs pushq ds xchg sub loop callq lahf in mov in push jno adc (bad) (bad) pop jae or pushq iret cmp jae (bad) or push rex.WRX mov test jne sbb hlt lret pop add jb jmpq ss sbb sbb jbe push repnz pop xchg fisttp xor pop lock add mov (bad) data16 hlt test std jae stos push jle iret xor (bad) (bad) std scas pop adc test rex.RX xchg fstpl fsub rex (bad) subl out xchg mov cld mov cmp rex.XB in or or fbld test test cmc jp adc pop ja jp out mov mov shl rex.WR mov jp push jmpq push (bad) lea mov ror jmpq jmp mov rex.R rex.WXB mov lret xchg loopne jg (bad) mov movabs fs xlat mov cmp cltd movl callq hlt popfq mov enterq cmp jp ja push cs jle and (bad) popfq fadds rex.W ja adc add adc (bad) repz (bad) lret mov nop sub (bad) in or xchg xor push xorl sbb or rex.WB (bad) fnsave in mov xlat jnp cmpsb sub (bad) add insl enterq (bad) and loopne roll icebp retq (bad) rorb outsb mov std jp imul (bad) sbb sbb mov xchg xor (bad) xchg jns movslq fcmovnb jns sub adcl xchg (bad) rex.WRX jbe std lea push fwait xchg xchg es xchg gs mov push (bad) mov (bad) lea mov in jrcxz iret test callq loope enterq (bad) fs test pop pop sbb repz shrl rex.B rdpmc scas add jmp and lret jno mov lret mov iret lret cmc test xchg enterq xor (bad) xor jp pop int3 pop fmuls mov hlt (bad) ja cmp jns insb pop cmp sub xchg mov loop mov mul data16 lret adc movabs sbb retq sbb ja cmp cmp stos xor (bad) jb fwait jbe jae rex.WX rex.WR jge or leaveq mov jne (bad) push cmpl mov faddp stc jno xor iret mov rex.RB xchg rex.XB iret decl adc pop movabs fistp or lods mov scas lods psubw fild cs lret lahf (bad) movslq ja (bad) or lea jle pop (bad) rex.RXB (bad) xchg int3 int3 push stc jrcxz jmp (bad) cmp jne rex.W ss (bad) (bad) (bad) mov rex.RX lock clc (bad) jae fcomps mov loope add cmp mov push (bad) cltd sti loop adc loopne rolb loop rorb pop (bad) rex.RB (bad) jns sti jnp xchg movslq (bad) retq rcll cmpsl sub out movslq (bad) stos fst cli js jns jrcxz jb xchg jbe adc mov mov cmp sbb add sbb push cmc xlat sti movslq sub (bad) lahf stc sbb xorb add rex.RX int3 clc mov (bad) sub push xchg (bad) insb lods fistpll pop or movabs adc and or jbe xchg ror repz push scas fs loop icebp (bad) mov divb and add jb leaveq sti js stos mov mov mov ja,pn sub mov cmp cmp add sbb rex.RB (bad) rex.RX scas imul loope jp (bad) jp (bad) xor lea fdivr sbb out icebp jne icebp cmc fnstcw roll sub rcl mov fistl sbb es (bad) mov adc push fucomip rex.X sbb rex.R clc mov push (bad) mov jmpq rex.WXB push add fnsave fwait sub fcomps jae lret fxch (bad) fwait in adc (bad) mov scas (bad) add movabs fcomi (bad) outsl fwait pushq subl adc out mov jp add (bad) xchg pop (bad) mov je jmpq pushq mov jp callq data16 sub fbstp in out outsb or ficomp (bad) cli rex.WR imul sti pop int3 in push cmp rex.RB rcl (bad) xor out or mov xor cmp and movabs mov stos and (bad) rex.RB jno out push cmp fsts (bad) stc fdivrl fwait (bad) push (bad) out jmp (bad) sar fist loopne and pop rex.W lods jle (bad) cmp decb push mov mov retq xor sti jnp mov (bad) push fistp imul sbb out out jns out mov xchg adc scas insl lret (bad) xor (bad) (bad) nop xchg sub pop adc pushq rcrl je xchg ja int jmp stc xchg push jge mov (bad) loopne stos movabs mov pop movsb retq pushq insl pop fild in pop (bad) out mov sti in mov mov push add leaveq movslq cwtl callq jrcxz leaveq fsubl subb enterq jb mov (bad) xchg (bad) push lock shrb fnstcw scas add rcrb hlt sarb not push (bad) rcr mov fxch cli push cmpsl xchg mov pop cwtl cmp xlat rex.RXB xor retq movabs adc scas jnp,pn lods push lret sub (bad) in xlat fildl mov pop jb (bad) fdivs lret (bad) imulb sbbl push fdivs loope (bad) xor leaveq (bad) enterq enterq rcr ja stos jge add fsubs sub fmull cld (bad) fs (bad) mov pushq xchg jrcxz in (bad) sub push or cmpsb sub mov outsb pop jns (bad) adc or rorl sub jbe mov vdivpd jmp and pop adc and test and push insl add xchg xchg cmc popfq adc (bad) mov xchg test pop je (bad) jae (bad) mov pop jnp fs (bad) std clc int3 stos jnp jae hlt shrl sub cmc mov xchg push jge cwtl push icebp retq adc rex.B repnz (bad) fwait and vorpd push add cmpb popfq xor sbb test sbb hlt or xor or movabs rex.WB cld (bad) jrcxz (bad) jmpq sbb push in iret rex.RX (bad) (bad) mov push shl rcl rex.WRXB xor push movabs jp je pop loopne (bad) (bad) leaveq xchg scas mov std (bad) (bad) (bad) sbb xchg jbe and js test retq jmpq imul (bad) jmp or (bad) hlt (bad) movsb jge xchg (bad) (bad) adc push jae subb popfq xlat mov fwait es xchg (bad) (bad) test xchg stos popfq enterq out jmpq push jns cmc pop outsl rex.WX int3 push mov or mov (bad) add mov mov rex.WB int3 adc (bad) cmp xchg or mov (bad) fldenv sbb adc je retq divq (bad) adcl jrcxz xchg pop sub and mov push (bad) lret add lahf or xor push push rex.WXB rcll (bad) cmp gs sub or mov fldt fs adc jno fcmovbe fstpl mov rex.WXB scas loopel or fwait in mov push xor movb push repz stos mov (bad) ja insl mov mov xchg push (bad) push mov shl (bad) pop sub (bad) adc stos jnp rcrb push or push sbb retq pop ss add (bad) repz mov fist mov or jg sub movabs in fwait loop mov fiaddl rex.XB test or in cmp or cmpsl loopne or movabs sbb outsb xchg pop mov gs rex.WRB cmp xchg loop cmp loop movabs icebp je sub xor (bad) nop fdecstp xor iret (bad) push mov iret xor (bad) rex.WRB nop rex.WB retq pop roll xor shrb push push pop jo outsb (bad) mov adc movsb rex.WRB loop (bad) gs cld mov int3 mov pop add mov xor fwait rex.WXB mov xchg repnz adc xchg push adc (bad) callq testl rex.W (bad) cmp jmp jns pop rcr or loopne xchg or sbb (bad) mov rex.WB and mov ss je sub mov adc (bad) pop push retq sti rex.RX add and jrcxz jrcxz lret (bad) push rex.RXB adcl pop lret loopne cmp or (bad) mov fwait scas fdivr (bad) loopne xchg (bad) pop sbb (bad) rcll jrcxz xchg xchg fyl2xp1 sbb (bad) fistl out lret pushq sarl xchg pop sar lods mov jnp jg mov xor (bad) add addr32 rex.RXB jle (bad) add (bad) stos (bad) fwait movsb ja fsubl fwait jo xchg fistpll sbb loop test fistpl jne loope rex.WRXB stc adc (bad) vcmpps add xchg movslq insl lret pop xlat rex.WXB rcll sub cld push mov jns add (bad) fistpll iret adc lods push cmpsb lea rex (bad) stos rex.WRX rcll xor rcr mov enterq mov mov adcb insb mov xlat shlb lock fcmovu (bad) mov xor mov (bad) std retq sbb (bad) cmp jo mov rex.W mov roll (bad) jno add and add cmp mov ja rex.WRX pop xchg jne xchg insb rex.RB adc sbb sub sub jne pop js out cmpsb (bad) jne lock stos (bad) mov adc mov pop jl rcll mov (bad) js xchg xchg (bad) mov add pop fwait sbb (bad) xor test out mov or lahf pop xchg lea xchg rex.RB imul jno and or repnz imulb pop push xchg pop insl cmp outsl (bad) xchg clc jg add jmp adc jp cmpsb mov jns seta mov lret jl push or imul add and push xchg mov mov pop in mov addr32 pop (bad) xor cmp lret lock pushq retq fsubr pop stc xchg pop xchg or jno (bad) xor jae pushq and (bad) xor add (bad) cmp sbb cmp sbb xor test push adc jne jnp add mov test movslq movslq gs (bad) jl lods (bad) push jno jmp pop fs and ficoml push movabs rex.WRXB leaveq xor xchg je fistp mov cmp or or adc xchg rex.WB or (bad) and jmpq rex.RXB and std imul xchg and andl jmp roll hlt mov xor enterq sub test (bad) imul test jnp movabs sbb rex.RXB mov stos in mulb rex.RB out addl or and jp out andl (bad) retq sub and insl mov jno add sbb jns lret pop jb (bad) (bad) cli add pop push xchg mov movslq cmp jne mov xor fucom sbb (bad) ja andl mov push xchg (bad) rex.WXB loop pushq (bad) sub (bad) sub jnp jle or fcmovnbe or push or movabs jg xchg pop (bad) addr32 (bad) xchg outsb mov insb jge rcr pop (bad) movabs (bad) lret repz sti (bad) lret adc mov sbb andl ja (bad) scas mov mov fildl xchg push push hlt sub fcmovu push clc rcrl rex.RXB rex.B mov test loop lret out adc retq sar pop pop rex.B push xchg xor test lahf (bad) gs rcrl pushq mov shrb mov out test mov cld loopne leaveq lret xchg (bad) pop adc sbb ds mov lret mov xchg xor and mov jl test xchg outsl or pushq out mov (bad) adc (bad) subl sub movabs (bad) loopne (bad) (bad) stc fcoms leaveq xchg test movabs loop add mov push push (bad) hlt mov (bad) (bad) (bad) xlat movl rex.WRB mov mov xor mov nop jge mov pavgw insl rex.B cmpsl (bad) mov repz adc xor subl (bad) lret and (bad) jp add push sub adc iret jg scas cmpsb in jl adc imul (bad) js (bad) rex.X (bad) pop (bad) mov sahf fsubl rex.RB sti je xchg cmp jp (bad) int (bad) and xchg mov fwait testb rex.WXB rex.W rcll xlat jp movabs cs fistpl fnstcw xchg jb (bad) adc ficomp xor push in mov sbb rex.WX mov shll mov adc fs ja or rex mov pop or nop jns pop insl data16 rex.RX sbb movabs sub movl movabs rex.RXB mov xchg leaveq push icebp rex.WB mov movsb sbb xchg jno gs addr32 mov and push int3 jb cmp loop pop xchg push lret mov add repz mov push lret (bad) (bad) jge mov rex.WXB repz xor mov push iret (bad) cmp rex.WR adc cld (bad) xorl clc out popfq hlt (bad) iret mov (bad) sub xor (bad) cmp int jo rex.WX add (bad) cltd (bad) rorb or js loopne cmp int3 sbb sar rcl outsl xor test add and kmovw scas (bad) pop rcrb sub rcl add jle pop fnstsw cmp jb es movabs lods callq cmp mov jns mov or fsubrs (bad) sbb (bad) pop mov add movabs sarl xchg (bad) pushfq pop (bad) sub xchg jno popfq rex.R orb (bad) loope add xlat rex.WRX mov rorb (bad) cli mov sti mov popfq hlt jg out (bad) cmp fs fwait test pop neg out outsb add pushq rex.WRXB xchg movsl callq (bad) xchg stos shlb test fcmovnbe jnp in jl xor mov cmp xor lret xchg adc pop (bad) out sbb pop (bad) mov rex retq pop xchg iret mov fldt or jno flds (bad) rcrl jns sub mov (bad) js pop rcrb jnp jge int push out (bad) rex.WXB fmul rex fidivrl pop fsts mov jno fistpl xchg jne xchg iret pop sbb mov (bad) movslq cmpsb (bad) sar sub push mov (bad) retq fmul sub ss rex.WB test rex.WB movsl in nop fimull adc mov fsubrs (bad) sarb sub fidivr pop mov jb (bad) add fdivrl jg in push jmpq cltd pop ror mov xchg outsl pop pop push pushfq popfq jnp (bad) jl fildll and sub gs xchg nop pop rcrl movabs stc rex.WB add fcom insl fisubr push int3 mov mov and fwait sbb je stos repnz rex.R imul cltd ja (bad) lods cmpsb fsubrl retq (bad) fstpt lret push stc movsb (bad) (bad) xchg jge lret rex.X push pushq mov add mov and (bad) push (bad) (bad) (bad) fwait nop rex.WRXB jmp (bad) leaveq movabs or pop loopne cmp imul js xchg loopne out (bad) divb fstps add loopne enterq loope rcrl movslq test pushfq (bad) (bad) (bad) mov not rcrb icebp rorb ficom mov pop push add jae fwait test or jmpq cmpsl xchg (bad) jmp fdivrl mov or and mov xchg fisubr mov (bad) mov cli rex.XB mov xor sub pop xchg lock sbb adc push rex mov mov push (bad) pop outsl and mov cwtl cmp rex.WXB rorl fnstcw and rex.XB jrcxz (bad) push loopne sbb sti pushq sbb sbb push (bad) cld push cmp rex.XB sbb (bad) (bad) rex.WXB enterq mov rex outsl shlb int fistl push pop (bad) rcr push icebp cmp repz mov cmp movabs std or rex.WB rex.WXB movabs insb ds movslq push xor outsb and imul mov push or jmp add fs scas rex.WR xor fcomp roll (bad) xchg xlat sbb mov pop or pop fnstcw cmp int3 (bad) (bad) pop cmpl in add rcll or cmp stc pop xchg pop jns xchg and pop stos add mov xlat movsl xchg sbb xor sahf pop push xchg (bad) sbbb sbb rex.WB fldenv movabs jmpq add jnp (bad) nop lret xor loopne cmp jbe xlat (bad) fimull push iret adc fwait xor mov callq subl jmp (bad) rex.RX (bad) lock pushq movsl adc out mov rex.W rorl sarb mov or xor push gs or xor adc jae and pop cmpsl pushfq enterq push retq (bad) stos mov mov icebp (bad) or mov adc pop fwait xchg or std (bad) fstps jno (bad) fsubs (bad) pushq (bad) push imull leaveq add cltd out rex.RX std rcrb movabs je movslq retq xor xchg hlt rex.RB test mov stos push cmpsb sub cltd retq jnp out and cmc jnp rex.WB pushfq or jl jbe add (bad) sub fdivrs push mov (bad) xor xchg pushfq xchg and mov adc rex.R (bad) jmpq cmp mov mov pushq jg es jp jne mov in xlat std pop push fxch xchg in (bad) push scas repz movabs mov pushq loop rex.XB fwait movabs (bad) mov sub xor or fwait movsb test mov mov mov (bad) push ds xor rex.WRXB mov in decl js imul cltd sub xchg jge (bad) (bad) psrlw xlat insl (bad) movsl retq rcr movabs pop cwtl (bad) (bad) jrcxz fs push stos xchg fidivrl (bad) insl xchg push (bad) add mov (bad) loope pop lods fcmovnbe stc in xor jb insl mov rex.B callq clc pop loope mov jb mull mov or mov jbe mov rex.RX fnstenv (bad) jae out (bad) fimull lahf ss movabs mov cs movabs pop movabs mov lret fs (bad) mov jae mov mov popq clc imulb imul loopne rex.RXB es mov popfq adcl (bad) addl jrcxz leaveq repz add stos or rorb pushq rex.RB pop fisubrl xchg add sub mov cwtl or jle (bad) xchg mov (bad) (bad) (bad) cld rex.WX jno sbb sti ja cli add movb pop or stos cli in (bad) or sti ficoml leaveq cli movsb scas mov mov xchg (bad) mov jne (bad) int3 rex.RB (bad) adc xchg adc mov ja es fdivs lods rex.B ds (bad) adc sbb repnz cmpsl xchg out lods movsl cld rex.WB scas callq (bad) pop test (bad) pop push mov repnz (bad) scas int3 shrb adc lret (bad) jnp ljmp (bad) icebp fnstenv fimul lods repnz mov (bad) mov in loope retq xor (bad) (bad) sbb icebp xlat pop repnz add rex mov cmp outsl mov subl movslq (bad) mov lods (bad) mov push lods pop (bad) jmpq idivb jnp rex.RB rex.W retq (bad) push fwait cs cltd imul fidivl out rex.WRX (bad) sub mov rex.WX lods xlat jns data16 fsts pop stos pushq mov or jb xchg push mov mov jnp cmp fwait clc in and in (bad) xchg rex.RXB (bad) xchg imul xlat jp sub mov xchg mov leaveq out outsl jnp xor stos (bad) mov orb movabs lret xor roll shll cltd gs mov mov stos sbbb hlt and mov mov stc stos stc rex.X nop stc lahf jae (bad) outsl add (bad) jnp gs imul adc mov or imul rex.WRX movabs movabs movslq xchg (bad) push mov out mov mov jb iret popq mov rex.XB roll addr32 (bad) and lods jnp (bad) cmpsl adcl clc in std sarl rex.RX gs cmpsb outsl mov lahf (bad) movabs cmp xlat movabs adc and rcl mov sarl push jae (bad) jbe mov xchg pop (bad) (bad) mov (bad) mov and pop outsb mov and (bad) xchg gs sahf cmpsb retq xor mov sub iret (bad) xchg jbe rex.RX (bad) fwait movabs mov and pop ja mov lahf movl or xchg out mov xor outsb lahf (bad) mov mov mov (bad) (bad) (bad) or rol (bad) iret sub rol xchg popq mov mov movabs xorl mov (bad) (bad) movabs int3 scas repnz (bad) lret rex.B mov xor (bad) pop lret xor movslq xchg fwait xchg mov lahf mov loop mov ja rex.RX fwait addw push cmpl (bad) mov mov retq (bad) popq cmpsl scas fwait xchg pushq jge (bad) (bad) (bad) std xchg mov sbb movsl pushq xor (bad) fisttpl in adc fnsetpm(287 movslq push sub ds mov (bad) or fildl sbb test pop adc jb subl or add rex.WB fucomip rex.WB mov (bad) jae cltd loop pop or es (bad) mov mov xor rex.X enterq imul push (bad) cld fldt punpcklwd (bad) fcmovnu je (bad) rex.RXB int3 jle in cli adc rex.RB xor cmp add fcmovne rex.B rex.WRXB fdiv andl retq or (bad) jge xchg jns or (bad) pop xlat rex.RXB rex.RX (bad) mov (bad) fstpt movabs shrl loop xor (bad) stc (bad) rex.XB push out jmpq mov push fsubrl fwait (bad) and (bad) mov rex.RX rex.WRB mov movabs cmpsb fstpt (bad) push mov and push sub fcmovnu retq rcrl (bad) (bad) mov adcb pop (bad) (bad) (bad) or xchg adc imulb fnsetpm(287 add sbb xchg cltd (bad) jne push push rcrb or xor mov fucomi (bad) (bad) (bad) imul cmp neg mov sub fisttpl sbb pop and (bad) fildl mov cmpsl fistpl pushq movb cmp pushfq mov push movslq es cmp mov sbb jno clc mov idivb stc insb jnp lret fldt fwait jnp rex.WRB fbld fsub ss movsl xchg cmp es sbb push xor and and (bad) ss push sti stos mov sub mov retq fldt movabs add rex.R xchg loop mov pop pushq fnsave gs (bad) cmp movabs std mov (bad) fldt mov xlat pop fwait callq fcomi jno (bad) out movsb mov (bad) sub (bad) jge fucomi rex.RXB pushq loop add mov pop pop fwait xchg cld jge ss out fistpl sahf outsl sbb retq rex.B test jge stos xchg jno adc ficoml (bad) (bad) es fistl (bad) cmp (bad) add xor push fistpl push mov mov out jne cmp rex.WB sub fsubl mov fisttp jbe enterq mov sbb push sahf xchg xor (bad) cwtl cmp cmp ss loope pushq fstpt outsb out (bad) fwait mov fstpt mov push cmp mov incl lret cmp (bad) fisttpl cmp rex.WRX rex.RXB out fistp or jle ja movabs sahf pushq jo movabs (bad) fisttpl sbb pop stos sbb rex.WX jnp lret pop mov (bad) int3 pop setnp (bad) xlat sub jne iret or mov sub rolb jae movabs (bad) rex.B repz leaveq jo movabs lods pop pop stos adc (bad) (bad) es or xor and rcll cmp push (bad) xor fildl int sbb movslq cwtl cmp jmp mov sub lock (bad) xlat and pavgw orl (bad) lock fwait pushq (bad) lret fistpl sub mov outsb outsl imul sbb jae mov shrl xchg jno (bad) xchg (bad) jmpq imul int3 (bad) je ss outsb pop mov push je incb outsb popfq jnp mov flds nop pop cmp rex.WXB mov fcmovnb and test adcl fisttp mov imul (bad) repz mov iret (bad) or scas ds loopne fwait lret mov loop cmpsl xchg (bad) stc fistl sti pop imul add (bad) pop cltd or cwtl imul cmp out rex.WX (bad) imul (bad) pushfq jae retq (bad) ficompl vucomisd in jp (bad) jnp (bad) fstpt movslq mov ss repz jnp fs outsb in jnp push add loopne rex.X xchg jrcxz sub cmp (bad) xchg mov xor xchg pushq movsb rcll or adc retq test jrcxz (bad) pop icebp pop rex.WRX adcl test enterq loop outsl mov xor (bad) cmp jg stos sahf rex.RB movsl cltd fcmovnbe xor vsqrtps fcmovne in jl jnp test mov jnp loopne cmp leaveq fcmovnu jp ss int movabs pop neg std pop movabs movslq fcmovb rex.R fucomi cmpsl cmp pop jge in add clc in movsb int3 push rex.RB and pop add pop rex.W adc (bad) xor sbb jns test fildl stc std cmpsb (bad) pushq out xorps (bad) leaveq (bad) ss rex.WRX nop rex.X rex.WRB pop or movslq pop cld jne (bad) in (bad) movabs leaveq rcr rex rex.WR pop movabs sbb cmp pop mov sbb add jg jnp out and jge fistl loopne shl cmp test lods in (bad) cli pop in out popfq enterq cs and (bad) or stos xor fist xchg cli fwait jrcxz mov pushq and nopq cs (bad) (bad) repz (bad) js (bad) movslq mov jp pop xlat xchg sbb cmc (bad) mov pop or (bad) stc jle adc callq (bad) mov push (bad) pop cmp sbb jnp out nop (bad) mov rex.XB lods adc pop imul fisubl adc add cltd rex.WXB xor fwait (bad) (bad) pop cmp pushfq sbb jg outsl jrcxz cltd mov pop iret push xor gs xor push retq sub xchg out sub pop pop push (bad) cmp pop (bad) std rex.B rex.W jmp mov test jns (bad) mov rex.XB jae (bad) (bad) fsts rex.WRXB shrb movsl cltd sahf mov push cwtl add cld push ss push jns icebp cmp xchg xchg jae pop mov sbb rex.WRXB addr32 insb mov sub cmc sti pop js rex.WXB sbb stos or pop lret jnp pushfq pushq gs fmul lock add movabs sub fwait int cli sub xlat retq rex.WR xor rex.X mov cld pop push jno xor ds shlb pop sbb (bad) xor pop (bad) rex.RB sbb cld test xlat in in test icebp mov test fisttp lods (bad) andl push add sar mov (bad) push xchg rex jae cs (bad) push decl fidivl cltd (bad) stc test rol mov mov movsb mov loope push cmp retq fdiv rex.WRB rex.WXB mov sbbl rex.WXB movabs fbld cmp outsb adc sarl sub cli jae pop pop pop sub cwtl jrcxz lret in out retq rex.RXB sahf xor rex.WXB in mov incb mov addr32 shlb xchg jb cli (bad) test clc fdiv lods movabs js add addr32 sub jbe sti or data16 mov frstor xchg movsl (bad) nop mov sbb test fadds leaveq jb test scas cmp push adc adcb cmp xlat (bad) rex.WRXB fwait test (bad) cmp shl and (bad) pop (bad) (bad) adc sub stc rex.W rex.WRXB ss insl test xchg fwait repnz adc mov rcll pushq (bad) mov mov sarb push push cmp sahf leaveq sub (bad) xchg mov fstps pop xlat push rex.R mov push sbb pop loope (bad) xchg mov sbb lret pop sub pop test int add retq jae pop cmp ficompl mov (bad) stc or (bad) mov pushq xchg rex.RXB push (bad) mov mov (bad) lret (bad) out jnp cmp fnop and add (bad) jl outsl (bad) insb xor (bad) jmpq mov in (bad) push (bad) pop fcmovne jl mov sarl pop adc sbb pop cmp insl adc fwait xor movabs adc cmp jbe,pt rex.WR rex.WB testb movslq xlat fndisi(8087 pushfq xor (bad) pop rcr jno mov xor mov jb test (bad) mov stos rex.R (bad) out fbstp jno xlat fcmovnu mov sbb enterq xchg fstpt xchg in push adc rcr cmpsl pop loop adc icebp or nop sar jmpq fmuls cmp and (bad) (bad) movabs movabs (bad) pop sbb fwait pop rex.XB cmp rclb sub (bad) mov pushq fistpl (bad) insb add cmp sbb (bad) fcomi push jne lahf (bad) cltd mov js or mov add hlt mov jl cmp (bad) fcmovu repz (bad) (bad) rex.W push sbb shlb rex.RX mov sub and push pop xchg jbe (bad) std movabs sub mov stos pop cltd fistpl mov fildl (bad) adc test fstpt add insb (bad) test je and mov mov mov cmp rex.WR mov rex.R rex.WXB (bad) cmpl and xchg cmp add and mov jae (bad) test (bad) fldt and jns orb sub mov cwtl rex.RXB movabs data16 sub scas sub imul (bad) and sarl lret (bad) xchg mov stos mov jrcxz xor jb pop (bad) and (bad) fucomi xor fcomps push outsl (bad) and out je (bad) sbb mov sar add jrcxz pop loop nop cmp (bad) fwait fs fildll sahf pushq pop mov rex.XB rex.WX or jae andl push ja rex.R fwait (bad) movslq fisttpl callq test push adc cmp xor pop and sahf rcr sbbl pop movsl (bad) (bad) cmpsb rex.WRB mov sbb jns rex.WRX test mov (bad) out callq in cmpsb xchg insb xchg std xor int3 js sub (bad) xchg cmp lret push mov xlat shlb int (bad) mov (bad) (bad) (bad) mov pop mov jbe rex.RXB sar xchg jl fcmovnbe cmp jno or ds fwait leaveq xor cmp (bad) fisttpl mov (bad) (bad) or and scas mov xor (bad) rex.WRXB xchg sub (bad) mov ror sete mov pop ds test decl adc sti sbb movsb int3 mov mov cmp hlt test pop cmpsb fldl (bad) (bad) std nop pop out fildl out sti (bad) fisttpl mov sub (bad) cmp sahf retq lret pop add jp idivl and (bad) (bad) and rorb sub (bad) sbb and ss mov mov pop pop addr32 xchg (bad) jae loopne out or je stc movslq mov in mov (bad) (bad) out and sbb in mov repnz mov sbb fnop (bad) (bad) jae push push push movabs rex.RXB mov hlt stos pop orb ss xchg xchg mov fmulp sub adc mov scas fnop or mov and or xlat hlt mov push jnp (bad) out popfq stos pop outsb scas movabs retq and shr movabs popq pop (bad) cld rcrl mov rex.WR mov xchg retq mov cli pop or imul and ficompl pop rex.RXB mov fnstsw pushq shrb (bad) jae push out rex.X movabs mov (bad) scas sub rex.RXB movsb jo movabs js mov rex.R xchg outsb pop es shll (bad) (bad) sahf mov (bad) push mov divl fstl hlt pop sub mov pop (bad) fwait lahf movl addr32 scas mov xchg xor (bad) mov (bad) fnstenv (bad) notb add cltd jne movsl push (bad) (bad) add mov cmc (bad) (bad) out fisubl xchg (bad) loopne out jmpq addr32 mov shr (bad) pushq icebp (bad) pop loope (bad) in decb sarb fwait sti out ja jns rcrl jle push (bad) add push (bad) xchg jbe sar (bad) (bad) std sahf adc ds push outsb cmp sbb iret (bad) push (bad) lock lahf movslq shlb (bad) test or sub jrcxz (bad) sbb (bad) or (bad) addr32 add (bad) imul sbb iret xchg and stc jmp sbb xchg fmul jmpq retq adc mov fwait sub adc add cmp adc rex.RB fildl pushq push cld xchg xchg movslq mov add sbb (bad) fld pop (bad) adc (bad) cmp xor loop add jnp xchg (bad) rex.RB mov (bad) jnp rex.WR jmpq push cwtl retq mov pushfq xchg (bad) js (bad) roll rex.WB cmp mov punpckhdq push push and mov pop mov pushq roll (bad) loopne jl fisub movabs and fwait cmpsl push adc mov cwtl pop cmp and fwait mov mov (bad) iret xor je movabs jge pop cmpsl and sti pop test test shlb xchg in notl jne xchg mov jmp out mov jno loope cmp test je rex.WXB cmp pop test xchg lret sar (bad) pop rcrb cmp in xor rex.RXB retq mov lret fwait jnp sbb repnz negl (bad) (bad) push xor loope data16 rex.X xchg lock ds mov sbb retq (bad) rex.X jmpq (bad) mov leaveq (bad) test or ss mov mov stos rex.WRB (bad) data16 (bad) add or lret rex.W (bad) fldcw loope jbe jb (bad) mov (bad) icebp cmp sbb xor lock fistl mov pushq add sbb enterq stos in rcll push add push movabs jl fsts cmp movabs pop imul in fnstenv jp pop fwait mov test adc mov rex.RXB rex.WXB stc maxps leaveq mov (bad) adc rex.WB jno imul push jo addr32 xorl loope insb mov mov addr32 jnp ja jmpq fldenv mov push rcrb rex.XB jge lret pop repnz cltd insl fistpl jo retq push jnp hlt ss mov cmpsl xlat rex.RB ficompl jo sbb xchg imul lret (bad) outsl or fidivrl cli fs in mov (bad) mov cmpsb fiaddl out andb rorl jae sub push (bad) iret (bad) or (bad) (bad) (bad) in rex.WR pop lock rex.WRXB repz movslq movabs rex.B (bad) sbb (bad) scas mov cmc loopne sbb xor rex.WRXB int3 xchg rex.WRX in or and (bad) es mov ja jmpq fisttpl and mov rex.WRXB int3 mov jl rex.X loope jbe in (bad) fucomi mov (bad) push pop rex.WRX xchg push cld mov jne jle rol popfq jns jno hlt flds or mov cmpsb sti pop xchg ss mov add xor not sbb stos cmpsb mov rcr (bad) clc pop and lods lret stos mov jrcxz stos mov sub rex.WRX fisttpl xchg outsb pushfq xor fisttpl in loopne mov or xchg pop lock imul cmp nop (bad) mov loop mov pop adc (bad) fcmovnu mov add cmp out sarb mov fildl hlt adc movabs mov cmp xchg cmc rex.B (bad) sub cmp cmp jne rex.R xchg pop rcr callq out pop js cmp rex.XB jno (bad) cmpsl fistl cmp sbb outsl ficompl rex.B movslq data16 fildl movslq pop rex.R movabs (bad) loopne fisub add adc fstl rex.B data16 mov fistpl adc shrl rex.RX rex.WRB int3 add fstp rorb movabs jo mov out pop insb rex.WRX (bad) pop outsb fwait mov (bad) fucomi adc cmc test rclb push (bad) adc xlat rex pop sub fwait mov rex.WR test fidivrl mov fistpl addr32 jnp,pt add mov cmc fucomi insl (bad) cmp pushfq jl (bad) rcr (bad) xchg (bad) loopne pop outsb add (bad) cmpsl pop sbb mov movabs rex.WB fwait in fldt cltd testb jno rex.WR nop lods fwait sub fcoms cld sbb rex.RB callq cmpsl push fcmovnu rex.WXB or fstpt subl pop rex.WRXB test add cmp cmp test add idiv out jno (bad) rex.WXB retq stc leaveq sahf pop scas (bad) (bad) jle rex.X jge mov ja xchg data16 (bad) mov mov in (bad) push cmp sbb rex mov pop mov cmp xor cmp (bad) mov movabs lret test jnp cmp movslq xorb fcmovnb cmp movsb pop gs push fisttpl sub (bad) sub jp lret mov push xlat sbb cmpsl fs (bad) stc rex.WB in jnp cmpsb iret fildl rex.XB push add (bad) insb push rex.RX add in cs xchg cmc cmp jnp adc and push add mov mov (bad) stos rex.RX lods push insb fldt rex.RB mov pop rex.XB shr (bad) int3 rex.RXB movabs jnp jnp ds (bad) lods xchg pop add and fwait cmp hlt adc sbb cmp fldt (bad) movslq loopne pop rex.WX mov imul (bad) sbb cmp fisttpl cmp fmull xchg and test pushq or mov (bad) in xor pop mov adc add hlt rex.WRX xchg movslq rex.RXB addr32 add sbb pop (bad) outsb pop xchg fstl push mov sub rex pop or lret shr push push rclb data16 add mov push cmp (bad) fsubl jbe rex.WRXB mov movabs (bad) (bad) mov cmp (bad) push out xchg mov out imul sub (bad) pushfq insl scas stos jmp test sbb divl (bad) xor callq (bad) or gs rex.WRXB cld js ja,pt jmp jns pushq pop (bad) stos rex.RXB jns (bad) or rex.WXB adc push (bad) pop or sbb ja pushq push pop sbb jae sti adc stos adc xchg in mov cmp hlt stos cmp movabs in mov cltd rex.X pop fadds push cmp fisubr test lods (bad) je js xlat jp push out lcall mov movabs leaveq mov movsb rex.WR lock paddb cmc mov (bad) jns sbb pop (bad) and mov pop cmp rex.RB fwait sbb (bad) es sub (bad) cwtl mov xchg lret fsts test (bad) cmp xchg (bad) pop and std sbb callq mov cmpsl sbb lahf jg xchg rex.R int3 pop push pop sbb mov push push push stc (bad) rex.W mov cmpsl mov popfq (bad) or cltd cli sub ss sub (bad) cmp sbb repz (bad) add (bad) fstpl push xchg mov stos pop (bad) mov movslq push (bad) (bad) leaveq add mov (bad) pop xchg (bad) adc rex.WRX rex.XB repz mov movsb sub (bad) rex.XB scas xchg rex.WXB adc (bad) (bad) loop jnp (bad) (bad) (bad) sbb jp cltd cld movabs out (bad) out loop sub (bad) data16 data16 callq std jb xchg (bad) or pop sbb (bad) mov sub xchg cli cltd fdivr xchg in cltd (bad) pop mov ror rcrb lretq insl or adc xchg in (bad) stos (bad) insb mov (bad) pop sbb (bad) outsl mov cli mov out jge sbb repnz jns cmp (bad) (bad) in (bad) cltd jge pop ficoml scas mov push test push rcl mov subl (bad) rex.WRB lods fidivl sub sbbl mov ss lods rex.WXB in imul lahf rex.W pop lahf (bad) jge mov mov or cmp cmc jnp pop mov (bad) scas movsb (bad) out xor push retq test jg jne jge (bad) out loope lret or jnp mov cli (bad) jle (bad) jrcxz out outsb out (bad) rex.WB fnsave sahf lea ds mov nop jle fstpl mov push xchg jmpq sbb lret outsl pop rclb add pop adc fistl xchg std lea add pop rex.WXB push (bad) pop (bad) (bad) pop mov jbe mov pop popfq jle sti movabs mov push lea fwait xchg pop insb mov push adc test fnstcw ficom sub cld notl imulb sar fwait dec cmc outsl iret adc adc sbb callq (bad) imul repnz icebp jae xchg adc fisttpl push imul ds fwait (bad) rex.WRB rex.WX mov imul ja (bad) (bad) (bad) (bad) fucomi mov decb add add sbb jmpq pop push lea iret pop fdivrl test (bad) jnp js (bad) mov mov cmp fstpt xchg callq pop rex.RX (bad) rex.RB ja (bad) (bad) sti repnz in (bad) fistpl xlat sbb (bad) rex.WRX mov movslq rcr faddl (bad) icebp jg sub mov mov (bad) mov je pop rcr (bad) sahf xlat mov callq scas sbb fnstcw adcl movslq or or adc (bad) pushq clc stos fildl cmpsl vdivss callq cmp iret hlt fwait (bad) mov mov or sbb (bad) xchg jne rex.WXB fcmovnbe xchg and jle add retq or pushq (bad) (bad) xchg cs (bad) mov mov movabs (bad) (bad) jo fadds outsb jne fstpt sub pop addl mov movabs add mov test mov (bad) (bad) fldt jo mov cmp fildll adc test fcomps (bad) sbb imul or pop (bad) pushfq sub fldt jno lret (bad) popq repz (bad) icebp (bad) in sbb cmp fisttpl or mov fildl loop xchg (bad) int fcmovnb and cmc es fs rex.WR rex.RXB js (bad) sbb (bad) lock rex.RXB rex.XB mov shl lret int out test clc movslq cmp mov ja cmp mov add out xchg loopne fistpl jge cmp adc pop mov ficompl (bad) sub ja out cmp (bad) lret add xor mov cmp iret (bad) rex.RXB rex.WR sbb js fstps or (bad) rex.R jl rex.XB mov push (bad) fucomi pop fcompl xor cs pop out push cltd (bad) push sbb pop (bad) sbb rex mov scas mov mov rex.RX (bad) cmp adc addr32 and cmp xor sub fisttpl (bad) divl pop add jle pop sub xor fildll mov lods or mov adc std (bad) sahf fwait (bad) cmc ss cmp pop (bad) and jg (bad) (bad) je fcmovnb pop or push pop and cmp (bad) sub adc (bad) (bad) rex.WRXB and or cmpsl lea movsl push rex.WRX cmpsb rex.WRXB mov or (bad) fisttpl (bad) pop cmp cmp pushq (bad) cld and movsb jae add int3 ss rex.R scas cmpsl cmp cmp out adc clc loope jl rcr nop pop movslq rex.R callq xor sub (bad) stos and lods fistpl es nop cltd and or or rcrb push stos mov add outsl push je jp sub adc orl mov lahf cld xchg std repz sub push push lret rex.WR push cmp jl push cmp (bad) (bad) xlat rex.WX (bad) loope push xor (bad) jns movabs adc xlat (bad) sub sbb movslq add cmpsl pushfq jg in (bad) mov es movabs or (bad) ficoml movabs test (bad) movsl lods (bad) addr32 xor mov cld movabs fnstcw popfq push rorl pop rex xor jae cli (bad) xchg fcmovb push xchg (bad) (bad) push (bad) sarb out in mov cltd loopne pop mov cwtl in test rex.RXB lock (bad) jo or xlat xchg (bad) (bad) (bad) xor fsts rex.RXB shll rex.WRB pushfq addr32 mov pop mov in (bad) rex.RXB rex.X sti fisubl cmp in cs (bad) sub (bad) std (bad) xor and insb xor std imul mov test xchg lea xor jge mov fisttpl loopne cwtl mov mov lret movabs add rex.WX pop es sbb sub adc fwait and lods mov rex.XB pushq lret fcmovnbe (bad) push leaveq lcall cmp xchg (bad) (bad) mov xor xchg pop int jnp lret rex cmpsl fildl stos (bad) xchg fucomi lock xchg adcb enterq pop pop and mov lret test (bad) jmp cmp cld insl rex.WRB fildl sub pop in push rex.WRX push add movsb fs js jp fwait adcl push addr32 cs out int3 rorl imul or fwait mov rcrl (bad) pushq pop outsl idiv lea cmp or push pop jnp fcompl jns pop xchg imull rex.R push fucomi clc insb jge xchg mov (bad) mov loop (bad) add outsb mov fcomps mov add pop neg jge decl push movslq cli (bad) rex.X fwait mov je jae rex.X int3 mov rex.WB ss and (bad) test cmp (bad) add rex.RX repz leaveq fimull cmp data16 (bad) pop movabs loopne in fcomi and rex.WRX xorb rex.WR (bad) mov mov jmp fwait or (bad) sbb scas fcmovne nop jg iret (bad) out pop idivl movabs loope mov xchg (bad) mov cmc fisttpl or pop pushfq fisubrl xchg mov movslq jae push sbb mov jle mov push jmpq add pop pop xchg rex.XB (bad) movsl in enterq sbb pop orb movabs add sbb push mov sub sbb retq negl stc mov jge retq roll or cmp stc popfq rex.WRX rex.RX repnz fnstsw (bad) rex.XB mov push cwtl sti out sbb jrcxz (bad) outsb push loop rcrl (bad) or loopne adc mov rclb (bad) (bad) rex.WR mov jns rcl rex.RX cmp sub mov push sub cs (bad) cmp fwait mov je fcompl mov cmp mov outsb (bad) pop (bad) cltd mov cli xlat cmp sbb pop jno (bad) (bad) es or pop (bad) enterq fsubrl jne movslq (bad) push movabs (bad) (bad) pop xchg scas out sub cmp sbb push sub jg (bad) add cwtl adc push loope rex.WR sbb mov icebp test rolb mov rex.W rcrb (bad) outsb adc fsubrl pop push ss cld adc xchg pop push (bad) sub sbb jae mov push mov pushfq xchg cmp insb mov mov clc add stos imul and cmp pop fidivl je (bad) lods (bad) ror pop test stos js adcl sti push shr push out cmp mov adc mov jg pushfq fidiv in loope lahf insl rorb (bad) andl (bad) jno (bad) loop (bad) rex.WXB (bad) repnz (bad) jne stos ficompl cmp pop movsw mov stos iret adc (bad) mov adc jle retq xchg (bad) insl push xchg stc sub mov adc lods jg retq leaveq mov cmp jge mov adc jmpq rex.RXB pop je leaveq add mov out (bad) xlat rep imul stc cwtl add mov push js icebp rcll cmp lret (bad) mov cltd cs jmp sub (bad) mov push jle cltd pushq ds stos out (bad) adc mov popfq xchg orl xor xchg data16 mov cmp lods imul push rex.WX (bad) mov xchg jb xchg retq pop nop loopne cmc (bad) lret out fldl2t in sbb cmp add jp (bad) cs data16 mov add jl rex.X mull imul movslq mov insl std leaveq and cltd push xchg jmpq rex.WXB rex.WB lea mov out push (bad) rex.WRB push sahf rex.RX fcomp loopne cmp mov outsl movabs outsl mov cmc je adc scas test pop jl movslq (bad) mov (bad) fnstsw enterq or (bad) mov push mov jb in ds jbe cmp xchg test jne notl callq sbb xor pushq popfq imul fsave xor adc cld in sti (bad) push or mov pop rclb es (bad) lret mov ss test pushq push (bad) test mov mov xchg (bad) je xchg cmp jbe pop rex.X jp xchg xlat pop stc push push (bad) sarb (bad) sti xchg cli nop scas pop (bad) (bad) rex.RX xchg xor int3 xchg mov mov shll es movslq cmp (bad) push xor rex.W xlat retq adc orl (bad) xchg movsb lret es (bad) sbbb mov es leaveq outsb (bad) and push fisttpl sub xlat rex.XB (bad) mov jae mov and std jmpq rex.WRB cmp lea pop (bad) lods add jp lods rex.W mov stos xor or pop pop and mov cmp mov mov std pop mov testb mov sub rex.W pop (bad) xor ds (bad) add add xchg loopne ja pushfq sub scas (bad) nop in stos pop xchg sub imul push mov sub test mov xchg std loope mov mov cmpsl add mov addb stos mov pop mov pop out loopne (bad) fwait add (bad) fs leaveq mov (bad) stos mov imul adc hlt sub (bad) sub cs rex.WRX fs sbb shlb retq stos rex.B rex.RX (bad) out hlt push pop addr32 mov pop test pop repz stc rex.X sahf iret sti fcompl test lods pop imull loopne add push (bad) pop adc adc xor cmp stc (bad) xchg (bad) sar movsb (bad) rcrl push enterq xchg cmp (bad) fldpi sub rex.W xchg (bad) adc pop loopne movabs push std addl stos fiadd push push psrad rex.WX mov mov (bad) add movabs loopne and movabs fsts rorb knotb movsl rex.WX rex pushq rex.WR outsl push jp push insl pop xchg sub adc or out mov cmp push pop or callq shrb push outsl mov adc (bad) (bad) sub cltd fldt mov movabs jns (bad) (bad) int shrb mov data16 (bad) mov (bad) cmp (bad) mov in jg (bad) in (bad) movabs pushfq ds fistpl (bad) mov xchg mov mov fldt adc (bad) xchg add (bad) callq lea mov popfq sub (bad) jp lret loope int je cmp (bad) addps (bad) pop push (bad) stos mov vpand rex.W rex.RX and cmc lret add stc cld popfq or js add rex.WX movslq lahf rex.WR or adc mov stos movslq jo jns rex.W gs jnp xchg pop in pop xor cmp pushfq pop pushfq fsts fisttpl (bad) sbb pop rex.W push fnop add jmp rex.WRX push mov stc and mov jbe xchg adc and scas (bad) xor or push fucomi add cld add pop sbb out movabs sbb push mov jno fildl cmpsb xchg data16 add or scas push movslq rolb cwtl xchg in sub jnp or and and xchg (bad) xlat add (bad) rex.WB (bad) sub orl pushq lods mov mov jmpq hlt xchg (bad) fistl rex.WR lock frstor rex.B subl movabs shll in sarl sti movabs hlt push movabs push jle (bad) rex.X or jp sub pop data16 xchg stos xlat mov sti int3 (bad) jge in (bad) fwait (bad) cwtl or icebp test (bad) negl rex.XB rex.W rex.RXB out mov jbe rex.RB fstpt add retq cmp movabs xchg sbb (bad) stos je addr32 jle fiaddl pushq fs or rex.W mov imul (bad) push pushq mov adc sbb loop int3 (bad) xchg test stos ja rex.WRX movabs (bad) mov fcmovb rex.WX negl and addr32 stos mov rex.RB xor (bad) repz jmp sub (bad) (bad) cltd push out or mov pushfq jle repnz xchg push (bad) scas rex.WRB jnp (bad) pop jp outsl sub xchg pop movsl (bad) or sub decb push sbb pop imul sub mov (bad) out testl jne fldenv rex.WXB rcll rex.WRB fcompl jns xchg out adc sub rcll movslq xor icebp sub (bad) ficomp iret icebp out (bad) in push xlat xchg (bad) (bad) rex.WX add shr iret push lods callq xor out fcompl sbb rex.RX sahf movsb push xchg xchg test ss pushfq js sti mov fwait xchg loope insb mov adc jnp fsts test rex.RX out outsb (bad) fcomi xchg in out enterq (bad) movabs mov xchg roll push (bad) movabs icebp mov sbb lret ds rex.RB pop (bad) (bad) retq (bad) mov or (bad) ds and pop fdivr incb xchg adc mov leaveq jns add pop mov xor stos sbb pop fwait ds (bad) imul and (bad) pop jns sar fbld (bad) mov jae sub pop or pop (bad) movabs (bad) lods (bad) xchg scas negl jg xor cmp mov (bad) icebp sub adc rclb mov retq xchg add int (bad) xchg and push sbb rex.WRXB pop jo ja lret insb sarl pop nop push mov (bad) stos movb test nop adc sti (bad) int rorl and js push jnp lretw (bad) pop (bad) mov movabs (bad) js loop (bad) (bad) or jg push mov xchg scas rorl loop cmp hlt rex.WRB (bad) xlat fwait push jb sub mov cmp negl mov movabs push sbb (bad) sti jno cli pop movslq fsubp cli loope (bad) jns add jae pop retq push (bad) sub rex.WB fs (bad) mov insb mov fwait out mov xor imul (bad) (bad) jnp repnz movslq xchg fisttpll xchg sahf xchg fwait rex.XB test scas popfq (bad) int (bad) fcom (bad) xor add in popfq imul push jae (bad) push and jl sub add cmp retq jae mov jb retq enterq imul or ds rex.RX pop or vmovapd (bad) rcr xchg loop sbb jl fmul out lahf fstpt clc pop (bad) push (bad) add cmpsl movslq cmp fisubrl pop jrcxz sti mov cmpsl cmp and in push sbb pop (bad) pop cltd or int push fadds pop fcompl pop (bad) xchg cmpsb add fcomps adc or movsb cmp xchg mov enterq iret pushfq (bad) mov jnp (bad) push push pop mov or rex.WRB rex.R push (bad) jmp lods retq iret adc lods addr32 rex.WRXB sbb rorl jb push fxch sbb imul rex.WX cmp sub in js nop xchg (bad) pop addr32 mov cwtl enterq mov popfq mov lret (bad) fwait mov shrb in test out rex.WX and push fidivrl rex.WRX mov ja push rcrl rex.X ss rex.WB shrd add int sahf rex.R ja rex.WB lods fmull add pop test add pop and push xchg (bad) mov mov scas sub lock xor sbb movabs rex.R lods mov (bad) (bad) rex.RXB fwait hlt rcrl out and xchg fdivr je jmpq push rex.X mov adc sub xchg pop cmc shlb (bad) jae or mov mov fcompl (bad) shrl lret xor mov movslq jnp mov ja stc xchg outsb fwait test sub (bad) (bad) mov rex or push pop jae sbb (bad) dec and sbb jae jns popfq scas xlat xlat lret cmpsl (bad) xor in add push fsubrs sbb testl (bad) push (bad) sbb cmp (bad) (bad) movslq (bad) rex.WB (bad) pop retq rex.W lahf cwtl (bad) cmp and out push adc mov mov xchg mov outsl popfq mov pushq rcrb stos xchg loope rex.WX test (bad) cmc insb xlat sbb rex.WRB rcll negl xchg std cmp psubsb cmp pop xor shr rex.WB (bad) cli pop jge lahf and movslq (bad) std iret idiv add adc cmp (bad) mov add mov (bad) scas scas jo retq adc idivb (bad) cmpsl mov xlat cmp xlat pop clc cld fldenv sbb adc stc movabs adc pop (bad) pop cld cmp sbb rclb pop mov lods out repnz pushq jnp (bad) movslq push (bad) pop lea push out mov pop (bad) lret scas stos sub rex.WRXB (bad) mov rex.R mov test xchg rex.X popfq jrcxz xchg jne jbe (bad) movslq pushfq jns adc (bad) stos idivl clc cmp cmova push jp shlb cmp jge jnp (bad) notl pushq ficompl (bad) imul (bad) pushq js fwait (bad) rex.R std imul sbb rolb pushq fidivr fwait (bad) flds (bad) push xchg mov notb iret bnd pop rex.WRX jmpq jae movsb xor adc xor fiadd shr movabs movabs (bad) pushq movsl out cli js sbb pop and push sub (bad) (bad) push jge sbb iret (bad) int mov xor mov xchg rex.WRX mov xchg (bad) and (bad) in xor (bad) clc pushfq leaveq ror mov pushq adc fidivrl sub (bad) (bad) pop lea (bad) (bad) rex.RXB stos scas and or data16 and add movabs mov scas ficom or (bad) mov add pop int3 (bad) push (bad) retq retq lea movabs movabs fsts jg add test enterq xor jnp,pn xchg in (bad) (bad) rex.WRXB jl sub test or xor (bad) jno leaveq xchg (bad) insl scas adc xlat rex.B rex.W cmp rex.RX scas jae lret jb test (bad) (bad) rex.WX data16 pop rex.WXB fisubrl push hlt push add std mov loopne leaveq add jae sbb imul fcomp or xchg jns pop (bad) ds pop (bad) outsb pushq pop ficomp lods in callq pop sub (bad) lahf test popfq sub rex.XB fldt push add jg pop pushq (bad) jmpq (bad) jnp jmp mov test xchg (bad) jnp rcrl int insl and (bad) jne (bad) (bad) xor hlt mov xor adc mov imul pop (bad) fildl jo in xor or sub lret (bad) loope (bad) jle or mov mov retq fs out adc loop mov adcl fucomi pop pop (bad) mov movabs (bad) xor push movabs rex.XB xor or test jp (bad) ja dec fucomi mov loop fistl mov (bad) retq movabs sbb sbb sahf add (bad) (bad) (bad) es and test scas stos (bad) cmp rex.XB (bad) fbld rex.WX cmpsl xchg mov xor ficomp lock fldt push add mov outsl fisubl ja and jmpq (bad) enterq rex.WB sub (bad) sti pop (bad) int xchg sub mov js insb adc add fstpt jb outsb fwait rcr sahf lret shll pop rex.R fistpl push xor jmp add fisubl gs retq movabs js pushq neg (bad) jbe int in jl (bad) data16 rex.X pop mov rex enterq in (bad) xchg mov sub es fstpt test rex.XB fildl pop outsb pop push mov movabs stos xor mov movabs insb fwait (bad) sbb rex.W and rorb fistl test rex.R cmpsl push lods cmp mov rex.X fcmove (bad) jmpq stos jbe imul cmpsl ds (bad) sub (bad) rex.WX retq mov (bad) fstpt jae lods fcomi sahf (bad) int3 push (bad) cmp test adc (bad) cmp (bad) shll fstpt icebp (bad) out std (bad) rex.WR xchg stc cmp adc mov hlt add (bad) test (bad) (bad) rex.R (bad) jbe adc (bad) subl mov data16 stos sub cmp test movslq add add test insl jle clc iret push leaveq rex.WR stos repnz out pushfq (bad) cmp retq (bad) jmp cmp mov mov mov loope fwait out fistpl loopne mov iret mov sub jg stos mov jmpq fisttp push (bad) sub ss jnp je xchg ror pop xchg retq pushq mov rex.X movabs movslq (bad) (bad) int (bad) adc mov xchg jle in mov leaveq cmp pop add pushq fwait adc (bad) rex.WB rex.X enterq movabs out lahf pop mov pop fwait fwait adc stc mov (bad) fldt adc cmp xlat fisttpl (bad) fs jg (bad) loopne testb cs sub add or int3 rex.RB movabs in leaveq xor xlat scas mov fnstsw jne (bad) (bad) lods rcrl and rcrb movsl mov pop out enterq movsb clc scas xor cli push out int3 cmp mov cli jne addr32 pop (bad) callq (bad) imul adc (bad) mov ja sbbb xor sub pop jae lods xchg mov (bad) pop push add lret test and sub (bad) push (bad) mov push shl out xchg fmuls lahf (bad) js sbb (bad) and jge movabs mov (bad) cmp imul xor insl and (bad) (bad) adc add lods (bad) jns and mov retq rex.WXB mov nop sub jl cmp test rex.RXB pop (bad) or cli std pop movsb sub cmp mov jb pop rex.RX pushq sbb mov pop fwait (bad) xchg mov push popfq lret push (bad) (bad) mov lock rex.RB rex.WXB test rex.WRX rex.RB fisubrl movabs rex.RX xchg jmp retq add stc pop retq mov push push rex.WB movabs sub in shlb (bad) jl mov sbb mov (bad) (bad) jg stos xchg cmc (bad) nop sbb pop rex.WX push pop loop mov rcrl (bad) enterq fcmovnu in incb or fsubrs adc sub pop rclb js (bad) mulb imul popfq (bad) (bad) fwait pushq and retq fscale fildl (bad) test movabs rex.WXB pop (bad) mov mov shr xchg xchg push mov sub and push pop (bad) pop lock jbe rex.XB cmp cmp (bad) rex.WRXB rex.R (bad) ss sub cli adc mov (bad) sbb jg push cld add (bad) fisttpl fistl je lret fcmovne lock ds sbb jmpq jrcxz out test mov (bad) lock xchg callq xor pushq sbb scas add popfq (bad) mov out (bad) rex.WR sub sbb in test mov add cwtl cs mov lock shlb in push jmpq jnp stos (bad) mov pop xor loop sub sub (bad) jo cld push out rex.WR rex.XB mov jp mov mov rex.RX rex.WRX rol out (bad) (bad) (bad) fiaddl add (bad) fld jrcxz xlat pushq rex.WB loopel mov xchg movsl cld mov rex.WRXB rex.RB jl and cmpsl fisttpl adc (bad) rex.WRB loope int pushq scas fstpt (bad) std jno negl or jp (bad) (bad) fldt fwait jb (bad) mov jae je (bad) (bad) xchg rex.WB sbb lods (bad) rex.WX (bad) xchg pop fcomi mov mov movsl mov jb leaveq test cwtl mov lret sub fildl (bad) rex.W mov rex xchg (bad) loope ss stos xor rex.WRXB sbb ss out lods add movsb pushfq lret or pop cmpsb and rcrb cld roll mov addr32 cmp add out sbb popfq jge in jnp push ficompl lret mov xchg shlb (bad) fstpt fisub pop lar fildl out and add retq mov push cs and (bad) fsubl sbb xchg mov rex.WRXB add cmpsl pop rex.WR sbb (bad) (bad) cli sub movsb (bad) pop fistl xlat popfq outsl and or fildl fistpl pop rex.RX test lret scas (bad) repz pop icebp (bad) fnop jnp rex.WB cmp fisttpl xor movabs rex.WRX add movabs xchg xor mov cltd xchg (bad) push fmull stc pop fisttpl hlt or rex.WX cmp and adcb fisubl loope pop mov scas rol movabs lods gs callq adc sub (bad) mov fcmovu gs rex.WB (bad) pop rex.WB pushq shlb clc data16 xchg cltd xchg xorl sub (bad) fldt push sub rex.WR lahf lea sbb sbbl fstpt (bad) xchg mov or rex.WRB fnstenv (bad) stc (bad) imul rex.R lods push rex.RXB jnp xchg rex fsubr (bad) (bad) sub push and rex.WXB in mov icebp jg rcr (bad) lret (bad) (bad) repz ds mov (bad) sbb sbb sub (bad) add ja xchg (bad) (bad) sub cli (bad) fwait sahf xor loope mov fistl fisttp pop cmp cmpsb addr32 fwait rex.RB iret (bad) int xor popfq mov in lock (bad) rex.B sub lret xchg rex.WRB (bad) (bad) xchg sbb mov pushfq fs cmp pop (bad) repz xor pop negb fisttpl retq add rex.WRX jnp jg pop and (bad) mov ror movslq movslq imul (bad) data16 imul popfq (bad) rex.WRXB (bad) jg xchg fidivl movabs (bad) (bad) test mov (bad) movabs mov ja jmp nop mov xor rorb test xchg push scas mov pop rcll test jnp push jnp fnop in mov test jne mov push and fildl pop mov (bad) and test sub mov rex.WRXB lahf test xchg jnp ficomp in and mov enterq fstpt leaveq add jle icebp xchg adc sbb mov pop sti jo mov lret lods sub hlt out jno rex.RX sub stos out rex.WB mov test cmp fwait retq mov jae pop (bad) (bad) ja es push shll outsb hlt rex.RX jne sub mov (bad) loope rex.WB rex.XB ficompl jb add stos mov xor imul cli fimull scas popfq mov sti nop add sti cmpsl sub adc loop outsb (bad) or mov xchg fistpl xchg rex.RXB rex.RX fstp (bad) or sti pop fcmovne hlt xchg cmp enterq mov fldt rex.WRX sub adc sbb mov adc (bad) ss push pop xchg andl (bad) push mov mov cwtl jg cmp rex mov pop cltd (bad) push fldenv or pop repnz (bad) push jbe rol cmp pushq gs fisttpl lret (bad) sub pop sub cmp fsubrs jle addr32 out cmp mov lret stos mov sahf mov mov out xchg rex.X negb (bad) sub adc mov int mov test outsl lret jp cmp rcrb pop gs imul (bad) cmp push (bad) xchg rex.RX mov push fldt cmpsl insb xor xchg mov fdiv jns int or fwait notl cmpsl rex.WRXB cmp lret test (bad) out xchg fwait ss rex.WXB fisttpl rex.RB stos cltd add fldt repnz int sti fstpt push (bad) xor stos or ror xor rex.XB ds rclb adc (bad) xor pushq repz mov enterq rcr movabs sbb mov (bad) ss adc xchg icebp sahf adc int3 pop (bad) xchg add rex.WRB sahf xor cltd imul cmpsb ds outsb cs lods cmp (bad) xor adc adc rex.WR xchg fisub (bad) fstpt retq fcmovnbe pop rex.X cmc rex.WRXB (bad) xchg sbb pop and adc or (bad) xchg xchg pushfq insb cmp rcr mov cmp data16 and scas out mov mov lods test vmovsldup ja imul (bad) rex.R jmpq xor push test sbb add rex.WR jnp (bad) rex.XB and in (bad) pop sar xchg pop rex push in (bad) cld jmpq ss (bad) (bad) push and push imul cmp jg retq stos jbe loop fldt fisub scas (bad) je fistl nop pop mov mov xchg orl cmp (bad) push int3 sahf movsl cli (bad) mov mov rcl xor out (bad) mov adc in cmp add (bad) mov lahf rex.R jl jno xor (bad) cs cmpsl add fisttpl pop lcall cld adc cs cmp and fistl pop jo loopnel flds or (bad) out (bad) add (bad) movsb shl xor pushq sar add rex.WRB jbe add (bad) push or callq jrcxz (bad) enterq idivl pop fiaddl xor (bad) mov (bad) xchg test jl push (bad) fldenv pop mov lret fcoms mov xchg (bad) and (bad) fldt (bad) addr32 add fcmovnu (bad) loop faddl push (bad) pop xchg sbb jge subl (bad) mov (bad) mov fwait repnz push movabs sbb pop (bad) (bad) (bad) cmpsl pop jg in imul pop adc outsl and mov fcmovnbe rex.X xchg mov cmp stos (bad) jrcxz add sub fisttpl (bad) mov bnd test lret mov push test and rcrl fcompl scas movsl movabs rex.WXB fadds (bad) mov loopne pop popq mov jmp outsl jno push (bad) movslq insl pop fsubp mov (bad) lods mov push cltd lahf push fcoml rex.WR movsl leaveq pop test push pop xlat lods ds rorb int or push rex.WB mov xchg jl rex.X and (bad) pop xlat fistl rex.WXB enterq push adc test cli pop mov jg lret xchg out sub fcmovnbe mov iret stc add cmp sub jnp pop (bad) shrb vpshuflw fs pushq ds retq popfq cmp (bad) lea (bad) in (bad) jg push and sti sub (bad) fiaddl mov adc cmpsl push jl (bad) jae pop ss xorl js sbb rex.XB jg jp pop mov mov loopne pop outsl (bad) imul jae jae xchg notb imul (bad) mov orl test jl fnstenv pop add movabs fcoml xchg cmp cmp (bad) retq sub sub and in cld addr32 and imul sahf rex.WRX fwait xsha256 cmpsb push test push push out fdivl pop movsl or sub cltd pushq loopne pop or lods mul jb ss out and rex.RX xorl xor sahf test (bad) je xor jmp lods push out or sti callq jne,pn int in rex.WB jg push addr32 rex.WB rex.WR (bad) adc out mov xchg loopne mov xchg clc retq (bad) sbb (bad) add rex.W jne scas cltd fwait mov add fimull mov cmp movslq ja stos mov movslq push nop sub (bad) jge rex.XB push (bad) loopne je pop cmpsb sbb gs pop adc xchg imul rex.RXB add or fstps mov or fstps jg ss push (bad) lods scas cs (bad) cli xor outsb outsb (bad) pop adc cmpl cmpb rex.WXB lahf out push cmp insl (bad) mov (bad) xchg ja xchg (bad) mov repnz in sbb lahf mov stc push (bad) jo retq js addr32 retq (bad) clc loopne iret jl,pn pop out js enterq jns and js (bad) sbb mov mov lea or xor out pop loopne xor js fldt xchg cld push rclb fcomip add xchg cltd rex rex.WXB push mov rex.WRB fdivrs (bad) hlt sti xor jrcxz sub cs pop jrcxz jae icebp rex.WB outsl (bad) jmpq pop (bad) sbb popfq (bad) jae sbb popfq in (bad) mov xchg mov xlat cmp jno adc imul sub enterq jnp sbb add mov cmpsl loope (bad) rex.WRXB mov mov (bad) (bad) rex.W rex stc fidivr in cli cwtl xchg insl pop (bad) add (bad) lret enterq fcmovnu std movabs stos (bad) (bad) rex.RXB shrb insb imul clc and mov icebp (bad) xchg lret and rex.WXB fcmovbe mov jrcxz mov cmc adc xchg cmp test (bad) scas rolb adc mov and (bad) cmp in add and vaddsd adc pop (bad) (bad) xchg jle movsb mov ss xchg stos (bad) (bad) jns mov (bad) mov mov mov adc add and rex.RX test pushfq adc mov xor sahf js fucomip stc ja pop fpatan xchg flds (bad) in fldenv pushq cmp (bad) pushfq roll ds out mov add fiadd rolb fwait scas xor jmp rex.WRXB cmp (bad) xor movsl (bad) pop fcomi (bad) push jp (bad) jmp fisttpl sub adc or jp mov pushq and sub fucomi sub pop insl xlat (bad) cmp xor pushq rex.WX cmpsb lret rex.WRB jrcxz (bad) add jbe divps jmpq (bad) mov xor lods stos mov pop or (bad) jno mov repz mov cli insb rex.WR addr32 push xchg and pushq enterq push fstpt add add (bad) (bad) cli (bad) and xlat sub imul iret cmp rex.WRB jbe test rex.RXB test xor rex.X (bad) lret (bad) (bad) shrl sub or movsb rex.W data16 (bad) shl sahf lret pop push addr32 mov (bad) fcmovnu push cmp lods andb fildl rcrl divb push retq out data16 mov mov jle jg movslq sbb iret (bad) add (bad) fcmovnu push mov (bad) out scas rorb (bad) lret (bad) cmp int xlat and push popfq rex.WXB push (bad) pop (bad) (bad) xchg add mov sahf sbbb iret add rex.XB ss (bad) rex.WXB loope repnz xor cmp sbb (bad) fcom fwait sarb cmp loop repnz xchg sub repnz pushq movabs adc lods cltd stos xor lret movabs sbb fsubl (bad) (bad) sbb pop mov lods shrl retq fnstcw (bad) callq pop xorl rex.WRXB imul push loope fisttpl mov test (bad) pop ficompl movabs hlt mov rex.R jmp (bad) adc jg outsl (bad) mov pop callq jmpq cmpl mov rex.RX loop (bad) fisttpl movabs adc mov adc rex.W es mov icebp adc mov stos (bad) fidivl mov (bad) rex.R cmpsl outsl addr32 rex.WB rorl ficoml xchg fldt (bad) mov jmp sbb or repnz (bad) xor rex.W xlat fs out xchg (bad) ror pop cmp loope rex.R rex.W fstps mull adc (bad) fwait mov cmp mov retq rolb lret (bad) mov (bad) (bad) rex.WXB lods xchg (bad) sub rex.WRXB mov ja xchg loopne push insl xor notl add (bad) mov push rex.WRXB push mov out sbbq shll jns mov or (bad) sbb (bad) mov movabs nop out outsb ja (bad) addr32 (bad) mov cmp or (bad) sbb lea ficomp xchg xchg sbb in add (bad) adc fidiv fildl imul mov out cli fsubs (bad) stos fstpt (bad) shrb mov (bad) cmpsb (bad) rcrl pop mov ror mov rcr xchg cltd mov in xor cmp fistl (bad) and cmpsl lret push cmp callq cmpsl movsb cmp mov jl mov jnp xchg push cmc pushq rex.XB out pop in fisttpl (bad) fisttp (bad) jg pop in repz ja cmp jge cmp jp in jne gs movsl pop rex.RB pushq orl adc rex rex.B jmp add (bad) xchg xchg push fldt rex.WX mov sbbl cmp sti fistl pop int3 callq pop ja out stos jrcxz mull mov leaveq (bad) sub test movsl fnop (bad) adc pop fsubrs ror rex.RXB sbb xor and mov rolb xchg popq fldt sbb cmp and (bad) ss (bad) (bad) rex.RX (bad) mov sti fistpl data16 fs pop jmp rex.RXB sahf or out sahf push sbb jge in jmpq cmpsl (bad) lea (bad) ffreep rex.WR addr32 movabs (bad) pop adc stos loop scas xchg movabs mov jns movslq loopne in mov pop push int3 (bad) (bad) fistl (bad) add jmp (bad) xor sbb xchg cmp gs fistpl mov mov sbb fcmovnu cmp cmpsl push in jg sbb (bad) jge mov sbb mov (bad) rol outsb movsb negl (bad) or lods (bad) insb outsb ficomp mov rex.B sub sbb movabs (bad) sub retq insl callq pop (bad) (bad) cmp outsl (bad) fisttpl test ja mov mov lods rex.XB rex.X jl fs lock movabs pushfq sahf callq xchg cmpsb jnp repz movsb rclb and and cmc sbb push rex.WR or int rex.W and fildl add mov xchg (bad) pop (bad) pop push pop add iret pop mov xor lea mov pop cld rcl mov (bad) test cmpsb fwait pop vmovlps xchg fldt sbb (bad) or pop lret or (bad) rex sub data16 xchg sub retq or out xor mov fld1 sub stos cmp cmpsl mov pop lret xor push rex.WRXB out add mov cmpl loope or imul jge pop std (bad) push (bad) in mov retq push (bad) flds mov add fisubl movslq out (bad) jmp and rex.WRX and insl mov fimull pop (bad) in add add rex.R rex.WRB sbb jnp retq mov (bad) (bad) fisttpl (bad) fwait clc cmp stos cmc imul cmpl rex.XB adc fstl (bad) cmp or xor stos rex.WXB rex.RB lret xchg xchg lahf pop mov pop rex.RX pop fidivrl jb nop stc jnp cmp fiaddl insb mov pop cmc jnp rcrl mov insl xchg fwait sub mov pop test mov xchg push adc fcmovnb xchg mov test cmp ror mov cmp cwtl xchg sbb xor pop jnp sub rex.WXB movslq loope mov out jrcxz movsb mov mov fwait push fimull cmpsq jo test hlt pop sahf rcr mov idivb add outsb push sub movabs (bad) push mov push int3 outsl (bad) rex.WR jge rex.XB cmpsb scas (bad) or retq pop fdivs lahf xor cmp (bad) pop stos in xchg outsl fldt and mov mov ss mov xor adc cmp (bad) cmp mov cs add (bad) mov or rorl int cmp pop cmpsl cli xchg xor (bad) lahf lret movsb fstpt jnp xor rep (bad) fiadd lahf repnz movslq fldt pop cmp rex.RXB xchg repz and xchg test adc pop push mov outsb sub (bad) cmp pop in sahf lods push (bad) callq retq (bad) or scas sub mov popfq fldenv stos xorl int3 (bad) pop movzwl pop scas xchg imul and xor rex fistpl mov sahf lods fwait outsb ficoml callq (bad) pop xchg (bad) xchg (bad) iret lret cmp (bad) in sub (bad) iret sub xchg and clc rex.RXB mov cli add stos push add (bad) mov fistl fisubr sbb cwtl fmul xchg stos movslq xor callq jne out mov gs mov pop in shrb jnp (bad) out mov fs cmp fisttpl or (bad) (bad) rex.B fwait insb or jns jrcxz pop (bad) (bad) fldenv jne lret (bad) jns and mov (bad) mov in mov divl cwtl (bad) xchg (bad) (bad) mov rex.RXB (bad) fldt jl outsl iret jbe (bad) cmp jg retq (bad) cmp je (bad) pop add push fmull imul fmuls scas (bad) lahf in imul imull mov gs mov rex.WXB sti es (bad) xchg and add cmp pop mov (bad) fwait rex.RXB iret jg jne cmovp (bad) outsb add fxch (bad) and cmp rex loopne test in fs jp sbb (bad) je mov push lahf (bad) xchg (bad) pushq (bad) out (bad) and (bad) rex.WR or ja lods (bad) fcmovnu orb mov outsl and jmpq lea movabs or jmpq (bad) fistpl (bad) (bad) push jrcxz (bad) jg fsub scas out stos and ficom jne or je movabs stos jae mov (bad) fstpl adc lods fmuls xor (bad) loope rex.WXB (bad) or fldt sbb rorb and cmc (bad) pop shl pop (bad) push mov fcomi fisttp push clc sub retq xor mov jmp sti stos outsb adc xor (bad) shrl cwtl in (bad) (bad) jmp push shl xor (bad) addr32 lidt mov gs rcr cmp scas leaveq lret int3 fwait cli imul add cli sbb pop jb loope push push xchg jle mov movabs sahf or push fidiv (bad) mov (bad) jmpq test fs flds repnz fwait nop sub jne xchg or jg (bad) rex.XB (bad) sub iret mov shl lods (bad) adc cmpl sub fbld (bad) mov add fcoms pop pop lock mov out movsl mov adc xchg push rex.WB (bad) shr (bad) sbb test movsl out mov push and (bad) sub ds mov xchg outsb rex.WX data16 in sbb and rex.WR fchs sbb push sbb rcr cmp and xchg (bad) mov fdivs (bad) (bad) xor (bad) pushq stos jg pop rex.WX movabs jge xlat movslq ficom xchg idivb outsl fistl sbb leaveq xor rol es pop int fwait push imul add add fisttp mov (bad) pop test es pushq (bad) (bad) test mov pop xor or (bad) pushq mov adc (bad) xor pop (bad) or rorl sbb fs jbe rex.WXB lock and int3 movabs (bad) ficompl in and stc sbb sub jge (bad) push xchg std adc pop (bad) cmpsl mov xchg push xchg mov adc (bad) js test xlat pop cs movsl jnp stc (bad) pop stos sarl fistpl lods mov (bad) push rex.R jnp rol callq adc sub movslq sti fistpl add jmpq rex.WR pop add fisttpl fwait lods fistpl nop (bad) lock insb (bad) mov and retq mov imul pushq rcr mov rex.RX rex.WB mov jg fstpt int3 lret cld rex (bad) fwait retq lret push rex.WB fstpt cmp cmpl cmp (bad) sbb rex.RX movslq loope movslq cmp rex.WRX lods fstpt leaveq mov fildl subl jns subl icebp mov stos jo,pn fstpt xchg cld sub adc repnz mov add fisttpl sbbl pop retq add cmp xlat push (bad) (bad) xor hlt xchg fcomi sub pop (bad) xchg rex.RB (bad) add movabs sub mov and sarl xchg fwait out rex.WB pushq cmpsb fsubp mov fildl loop stos xchg cmp and mov jae lock adc (bad) data16 fstpt rcll in fstpt imulb scas (bad) cltd fistl push test and cltd (bad) (bad) clc (bad) mov jrcxz (bad) or push popfq rex.WX adc insl xchg xchg (bad) pop pop test (bad) pushq (bad) sbb or adc push xor int sbb lods pop insb jrcxz out outsl ss cmp test mov ja (bad) and insb xor mov mov pop rex.XB rex.WR (bad) (bad) (bad) sbb and rex.WB outsb es neg fistl cmpsb insb and leaveq (bad) movabs push mov jae (bad) test cmp orl cmp and out or jl push scas fidiv ja (bad) (bad) test out std imul mov jl fisttpl scas rcrb (bad) imul movslq or out xchg and pop adc test fildl cmc cmp fcmovnb xchg sbb int3 mov sub js jg,pt imul (bad) cwtl scas jno jns int (bad) or mov out rex.X rex.RX (bad) stos sbb xor adcl (bad) loopne mov decb test push mov out mov cmp sarl or data16 or in fcmovne (bad) cmp (bad) xlat out movabs xor jrcxz fstpt push rex.WB mov insb fisttpl (bad) ljmp retq je fldt hlt rex.WRB (bad) jg or pop loope mov vaddsubps mov xchg (bad) nop mov jnp sub jbe int pushq (bad) jp jge stos sub rex.XB ja,pt mov xor adc rex.RX gs out mov mov ss xor jl (bad) rex.B fs imul pop insl mov and (bad) es cmc (bad) or adc (bad) data16 lret (bad) sub jne or leaveq rex.RXB scas jnp fcompl movsl xlat (bad) (bad) jge sbb or rex.X mov rex.WRXB cmp pop negb jae (bad) movsl mov movslq push or (bad) and (bad) cli cmp push pop icebp jl rex (bad) movslq in (bad) fstpt push cmp ror pop jbe int (bad) (bad) mov (bad) mov push out (bad) xchg pop imul fwait mov pop mov loopne (bad) jg mov sub or sub mov xchg lret fcomi add in test mov (bad) and es cmp lea mov (bad) mov jnp cmpsl in (bad) imul sbb push fistpl add mov retq mov out in rex.WR movabs mov enterq imul addr32 mov adc cmp and jnp out xchg gs fcmovnb mov retq (bad) fstpt sub repz push sub adc mov pop push mov (bad) insl jl pop xchg and adc cmp mov jl xchg test icebp (bad) cld xor stos imul fcmovnu jge pop out and cmp mov pop outsb insb cmp fs (bad) mov sbb and xchg jae ror mov sbb (bad) addr32 cmp in loopne mov (bad) or mov (bad) xor pop jae (bad) imul cmp ja (bad) mov adcl (bad) loope cmpb pop movslq sti cltd cmpl (bad) (bad) sbb (bad) rex.WXB or fldl test pop loop ja fimul pop rex.WXB (bad) (bad) mov rex.RXB and (bad) rex.WB rex.X (bad) rex.X shrb sub xlat int (bad) xchg (bad) (bad) cmp (bad) (bad) fnstenv jrcxz pop pop fildll es add jg shlb cs (bad) push (bad) push clc loopne movsl imul jrcxz (bad) (bad) in adc pushq jne enterq and repz repnz xchg mov es rex.X mov sub (bad) pop and pop sbb loop imul fstl (bad) xor xchg cmp sub (bad) mov mov sarl jne in sbb fildl jne shrl or fcomi xchg cmpsl movabs cmp mov mov pop (bad) in cmp jg movsl jne fldenv fwait orl lret cmpsb fstpt imul (bad) sub and fisttpl xor lods add movabs jl mov fildll shr jg sbb pop mov lods pushq fucomi hlt callq fdivrs loop (bad) fldt (bad) in xchg (bad) stos jnp mov ja (bad) pushq pop insb xchg lods (bad) (bad) rcr (bad) pop mov callq mov (bad) movsb pop stos jmpq jrcxz in (bad) gs (bad) lea out fildl (bad) mov xor movslq (bad) (bad) or (bad) cmp fcmovnu lock repnz stos cmc fistpl and jo popfq shrb cwtl (bad) out sbb (bad) (bad) (bad) popfq movabs stos stos (bad) jno lods pop fs or cmp add pop jmpq xchg imul push sub xchg popfq in jnp cmp insl and cli fs pop rex.WX pop ficom adc rex.XB (bad) popfq (bad) hlt fildl loop js rex.X rex.WX jge cltd fcmovbe xor add adc in in addr32 and mov rex.R xor test fwait int data16 pop (bad) jnp jmp cs (bad) pop stos jno rex.XB fstpt mov cmp cmp sahf (bad) sbb fs popfq jns rex.B xchg (bad) imul cmp cmpsb stc fistpl (bad) mov (bad) (bad) out addb sbb rex.R movslq jne js rcrl (bad) repnz rex and pop xchg mov pop pop pop rex.WR in fnstsw adc pxor rex.RXB int3 loop sbb js movabs mov xchg mov (bad) pop mov rex.WRB cmp lods in jbe out (bad) cmpsl sub test cltd cld stos adc xor (bad) (bad) int3 (bad) sarl (bad) fildl push enterq movabs pop fwait pop es shrl (bad) fstpt jbe sbb cmp push mov (bad) cltd orl mov out cld pushq retq (bad) cwtl mov fistpl xchg (bad) icebp cmp push movslq push int cmpsb insb mov mov cmp xchg fs fisttpl mov cli fcomi retq sub lods sub (bad) jnp sbb outsl mov rex.RXB mov fcomi fs cwtl imul cmp fcmovnb (bad) xchg xor sub mov adc xor enterq lock movabs xchg movsl (bad) mov jnp xor in ficoml popq loope imul sub xor (bad) mov xlat repz imul pushq sarl retq fcmovnb sbb mov rex.WRB rcr cwtl test cmp ja pop cmp pop in adc push fstpt xchg push (bad) faddp or push xor adc js mov fistl (bad) pop pop fisub push xor lahf outsb add rex.XB cli xor enterq push ds leaveq sbb adc mulb negb rex.WRXB clc fidivl xchg xchg in cs rorb cmp loopne movsl adc repnz rex.WX fistl or adc sar imul mov and (bad) sub iret sbb int and cmp callq jg mov cmp sbb (bad) adc jrcxz pushq (bad) mov rex.WRX jne in fsubs mov fildl roll in xchg pushq sub rex.WX fldt cwtl movsl js addr32 xor int3 (bad) mov jle push fisttpl sti unpcklps fldt xor mov ljmp and sub lahf jle pop sub (bad) test (bad) (bad) cmp loop sbb lea fildl je jge popfq mov add push and fistpl fdivrl rex.RB lret pop (bad) cmp retq (bad) outsl shrl (bad) xchg mov (bad) pop push and cmp fmull lret in pushq add leaveq callq cli invd rex.RB ss scas xchg rex.WX rorb fstpt push jl fistl jnp fistl stos or fisttpl sbb xchg jbe pop pop ror rex.RB lret fwait retq movabs movabs data16 jns test fldt mov (bad) pop movabs mov jrcxz sbb mov cmp rex.WX gs mov mov insb mov adc (bad) movabs rcrl xchg (bad) (bad) cltd mov add (bad) outsl pop add adc (bad) movabs rex.WX rex.WR sbb pop stc outsb frstor andl or xor rex.B jl in rex.X movabs fwait push sti movslq addr32 hlt (bad) fs pushfq addr32 cmpsl mov jae rcl xchg (bad) fildll xlat ljmp fwait pop imul nop int jns scas pop in xchg (bad) (bad) xchg fildl cmp sbb icebp clc or in fistpl out jp pop out pop addr32 or icebp jo jbe cmp test jnp push insb imul xchg clc jmp sbb fldt gs cwtl (bad) mov fistl push jnp (bad) jge (bad) xchg fldenv fldt sub xor sub fcmovne incb outsl (bad) mulb iret scas mov jge (bad) rcrb jp insl (bad) cmpsb jle pop xchg movabs in sahf xchg mov shlb int cmpsb xchg sub (bad) pop roll out and pushfq imul leaveq pushq pop push or hlt imul popq mov insb fisttpl adc out mov fistpl xchg fildl sar sbb adc sub xchg insb rex.WB rex.WR iret fwait xor clc push xlat lret fwait xor adc cmpsl mov loope movabs sarb in or sub or mov jg (bad) push mov fistpl fistpl cmp xchg mov mov rex.WXB stc adcb xchg imul mov pop callq (bad) push fldenv push lret imul pop xchg mov rex.X gs mov xchg iretq xchg lahf add leaveq leaveq cltd xchg retq and fldt sbb rex.WRB rex.RB mov mov jge shrb test pop test pop jl mov (bad) fisubrl (bad) lods and fiaddl movabs (bad) outsl pop (bad) fucomi (bad) retq xchg (bad) jb (bad) (bad) mov (bad) pop (bad) cmpsb stos mov mov outsl xor rex.R int3 add icebp cmp adc callq (bad) rex.WXB fsubl (bad) (bad) (bad) imul cmp jns shll cmp rex.WRX sbb data16 adc stos stos and cmp mov rex.RXB retq sbb mov rex.R xchg fdivl fildl cmp (bad) mov xchg xor mov (bad) cltd rex.WXB rex.RB pop fildl (bad) xchg cmp rex.WR adc (bad) rex.B fidivl or rorl rex.WRXB test push and mov pop mov jne rex.WRB fcmovnu fldl cltd rex.WR rex.RX mov fistl add icebp std rex.WRB (bad) fucomi jo (bad) jle (bad) pop push mov in pop (bad) fcomi stos jno (bad) imul cmp fcompl (bad) rcrl cmp pushq (bad) cmpsb jnp jbe (bad) pop out sbb in fsubs hlt gs fucomi (bad) rex.WRX xor iret and cmpsl fwait jns rex.WRXB imul add fcmovnu mov ss mov rex.WXB sub mov sbb mov cmp stos mov sub rclb (bad) sub idivl stos xor pop cwtl (bad) jle shlb std out (bad) rex.WRB imull pop (bad) movsb (bad) xchg mov (bad) imul fisttpl mov jmp jno rcrb insl mov fcmovnb jo pushq sahf (bad) es rex addr32 add rex.RB div es enterq cmp jns rex.WXB rex.WRXB dec pop cld xor rcr lret (bad) es nop fldt adc movabs (bad) sub cmp (bad) fs (bad) mov (bad) (bad) or rex.XB fidivr orb (bad) loop out (bad) fistpl pushfq popfq scas sub xchg (bad) xor push out sbb adc lock ficoml jl mov in xchg fnsetpm(287 lea lahf movslq out pop std or fisttp xlat fstpt callq movslq mov (bad) pushq cli lods xchg (bad) fldt cwtl or (bad) or fwait rex.XB rex.WXB ror add push (bad) (bad) int3 cmpsl (bad) fstpt jrcxz mov mov (bad) xor xchg jmp out gs in fisttpl cmp pushq mov rex.RXB rex.WRX clc loopne fadds (bad) xor pop jg sub jnp cmp cmp (bad) xchg imul pop xor rex cmp (bad) (bad) mov sub and test cmp xchg in rcr pop mov mov gs (bad) xchg fldt (bad) int mov subb xlat and pop rex.B js fldt sahf sbb add ds movsl pop loop fmul clc pop add jp rex.WRB rex.XB jge jne rex.WRX rex.W xchg sbb scas sbb ficoml rex.WR pop mov (bad) movslq pop iret fisttpl mov fcompl fidivr sahf jns adc jo rex.WRX mov (bad) mov cmp je pushfq fsqrt rex.WR rex.WB push (bad) mov pop movslq (bad) sub ja (bad) adc pop test rex.WX xchg cli scas hlt fildl rcll pop mov mov movabs bnd xor push cmp addl lret lret pop iret (bad) (bad) fcmovbe push rex.RXB xchg (bad) ja fimul scas jrcxz rex.WXB out imul lods (bad) mov lods cmpsl pop xor and adc addr32 imul (bad) (bad) insl outsl push pop (bad) mov addr32 stos sbb or (bad) (bad) xchg clc adc mov xchg push (bad) (bad) xchg xor imulb callq rex.B imul (bad) movabs in and adc setns pop fimull int xor (bad) jle add jp out sbbb test retq (bad) mov jge mov (bad) movslq adc retq xor fsubp mov mov push (bad) (bad) rex.R mov stc push in lods rep push push cs push (bad) addb cmp jnp (bad) pop (bad) in fildl push stos outsl xchg loopne mov or jne scas jp iret fstp (bad) mov rex.R mov push jnp (bad) jae xor mov outsl fidiv (bad) mov and fwait mov (bad) lret or iret push enterq (bad) lret mov retq jno cwtl xor sarl (bad) cmpsl fcoml (bad) (bad) push xchg (bad) iret rex.WRB cmp rex.XB xchg (bad) pop xchg loopne mov pop fwait cmc in mov mov cwtl clc (bad) push or mov in sbb (bad) or (bad) jge sbb stos sahf cmp jp out lock jge jne jp lock (bad) stos pop xlat sbb add scas (bad) popfq jp rex.RXB mov (bad) movabs (bad) adc out mov mov cmp lahf rex.RXB mov sub rex.W adc pop adc xor movabs ja xchg push fdivl and push rex.RX mov xchg (bad) (bad) jl callq xchg jnp (bad) push std in xor push xlat (bad) xor (bad) push push cld mov xor hlt imul sub xchg sbb cltd pop sbb flds pop jnp jno sbb sbb xor jo in (bad) xor ss cltd (bad) lret (bad) sbb cltd jl,pt mov out hlt jrcxz (bad) fs cs xchg xor movabs pop callq mov pop xorl pushq sbb lods fistpll sub in test add repz rolb jge cs mov jg cmpsb push jmp out xlat cmc in (bad) test mov pop rcll mov (bad) (bad) mov rex.WR fisttpll jle xor mov sub xchg cli pop xchg pop cwtl notb pop jg fild cmpsl out fdivs and fadd cld in (bad) je sbb xchg imull (bad) in xlat out (bad) int3 and fwait cltd cmp fucomip pop jle pop (bad) rex.RXB rex.B jns push (bad) mov fistp (bad) out rex.W mov push add sbb pop cmpsl (bad) cmp out sub mov jrcxz std mov pop adc xor mov rex.WXB and push jrcxz jns jbe lret rcrl pop scas mov (bad) mov js and sub pushfq rex.RB outsb in rex.RB rex.WXB je (bad) xor fldt xchg jbe pop rex.WRXB pop (bad) sarb cmpsb fistpl mov sbbb rex.WB rex.WRX out push pushq mov sub fwait cwtl retq pop (bad) (bad) jae rex.WXB sub loopne (bad) mov insb (bad) push push or (bad) mov rex.X fisttpl movabs popfq jns adc (bad) sarl fdivrl pushq push retq rex.WRXB fwait xor push xor in lods mov fistpl jns in push out rex.RX in jae mov cmp mov rex.W stc iret fistpl and fldt or fwait cmp rex jns xlat and (bad) sbb pushq int3 xlat rex.WRB fwait idiv (bad) (bad) clc (bad) fstpt insl shrb cmc sub rex.R push movabs sbb add mov (bad) lahf (bad) insl ds or push mov cltd rcl push add mov insb add jmpq (bad) (bad) callq sub mov repz pop rcrb sahf mov xabort rex.RB jl fistpll retq mov fstpl (bad) pop subl pandn in rex.RXB (bad) rex.WRXB add mov retq pushq push xchg jl popfq lea jnp cmpsl pushfq ror in int3 sub xlat or (bad) (bad) push sti and sub (bad) pop or gs (bad) pop incb fsubp lret and stc mov rex.X out sbb test mov or stos pop mov pop pop (bad) push out jle push (bad) mov jo pop insl jmpq stos lahf push test (bad) ja pop sti sub movabs jp cmp xor jle test jnp mov rex.XB es push (bad) mov cmp test or (bad) imul or in data16 mov rex.X pushq sbb dec imul pop mov xor cmp add (bad) scas pop sbb sarl jae iret xchg xor rex.RX pop cmp jb pop loopne pop add pop jns or movabs (bad) fildl sbb loopne xor out jp add in fwait sahf sub sbb fstpt je xlat sbb movslq pushfq jo lea (bad) pop or lock mov (bad) cmp movabs and scas je fcmovb lods movsl retq in push cmpsb imul fisubl or sub xor jle fisttpl or xchg (bad) pop (bad) jrcxz (bad) fiadd fwait retq test mov mov add xor adc adc fmul sbb sbb push xchg mov ds jno xchg lret mov (bad) scas add adcl fildl jns rex.X cli sub fildl rex.WX int mov fwait fs dec jl in retq lahf (bad) int3 mov imul std rex push outsb movabs rex.WRXB rex.WB jmpq (bad) (bad) leaveq pop mov rex.WR mov xchg decb fcmovnb mov in shrb (bad) fisttpl and rex.XB xchg ficomp (bad) mov movabs cmp and addr32 add clc pushq jg hlt or es rex.WX adc test xor orb cmp retq pushq mov imul (bad) pop rex.WX fwait sbb fstpt out (bad) jp mov movsl sbb (bad) fstp (bad) lock in rex.X scas pushq pop (bad) (bad) push sbb mov fistpl jno sbb pop gs out (bad) (bad) je imul fstpt cmp rex.R sahf fwait in adc pop add fstpt test jo (bad) out (bad) pop adc rex.RXB fcomi xor (bad) xchg rex.WR cmp gs out or cmp cld fldt rex.W cmpsl (bad) not or push sub iret pop or movabs fidiv (bad) insl and (bad) jmpq (bad) (bad) mov (bad) rex.W fldt xchg rex.W es in (bad) mov invd mov or jb insl mov fwait int rcrl rex.RXB loopne mov sub sbb or rex.WR scas mov retq mov pushq popfq (bad) mov iret adc (bad) xor fistpl jo or add data16 movabs pop out (bad) sbb movslq xchg (bad) fcmovu out mov xor sub rex.WRXB rex.X out leaveq hlt ss (bad) pop push mov xchg cmc pop (bad) int3 fdivrs cmpsl mov gs pop lret fildl rex.WRX (bad) idivl adcb shlb mov rcll xor jge adc ss rex.W or (bad) push int3 outsb movslq push ja jo pop add movabs in insl adc lods je mov leaveq insb sbb sub jg mov cmpsl jp pop ficompl sbb stos mov addl (bad) mov in fdivr cmpsl jle jrcxz pop sbb pcmpeqb lock loope out or add sub (bad) rex.WXB mov incb (bad) push out out outsl jl scas (bad) (bad) or push js fistl stos outsb fmul movabs rex.WXB fisubl cmp xlat cli icebp imul sub fiaddl xor pop rclb xchg (bad) adc leaveq fisttp (bad) iret mov rex.RX fisttpl cwtl (bad) rorl jl rorb xchg (bad) and jnp xor mov jg fwait xchg rclb fildl adc mov or (bad) (bad) pop jne hlt xchg xor fistpl adc movabs add pop rex.WXB push cmp test fs enterq rex.WRXB lret pop test jp pushq in int in in movl (bad) xor sbb adc movslq stc (bad) rex.WRXB add (bad) push (bad) int xchg int mov fwait jo cli adc lret fcmovnbe movsb pop cmp fistl mov adc out rex or rex.WB xchg pop rex.WXB fldt xor (bad) (bad) mov adc movabs in jrcxz rex.XB int (bad) stos pop fild fcmovnbe movsl (bad) pop adc insl (bad) xor movabs xlat jl mov mov movabs test sti sub pop jle jge push (bad) sbb jns in fbld add sbb cmp (bad) int3 (bad) jb fisubl out jnp xchg pop lret adc rex.WXB out xchg adc add jle rorl pop jo lahf out ss (bad) lret (bad) pop jrcxz cwtl xchg jno movabs sti scas addr32 jge or popfq xor scas mov xchg add xor xchg sub (bad) rex.WRB in xlat outsl xchg rex.RXB add push icebp cltd xchg shl push xchg xchg xchg push repnz mov or sbb rex.R adc xor cmp enterq (bad) fcoml (bad) jp (bad) (bad) fimull (bad) xchg or xor insb jne nop test rex.WRB rex.WR rex.WR cltd sbb ficoml loope fdivr mov sbb jnp pop (bad) mov fwait cmp je sti clc (bad) mov pop xchg in in lret add insb cmpsb jns (bad) (bad) (bad) ror fwait jp mov pop jmp js (bad) je (bad) rex.RX rex.W mov xchg ja cmp (bad) outsl jge push (bad) jne pop sbb mov rex.WB adc or jne sti rex.WRX out mov xchg xlat lea pop cmp scas cmpl mov xchg out jge rex.R cmp mov jmp (bad) (bad) icebp movsb mov int3 (bad) (bad) mov mov int retq iret cmp retq imul sbb xor test add (bad) mov (bad) cmpsb adc sbb cmp popfq sub mov data16 jb (bad) push fnstcw add (bad) (bad) jmpq jae cmp cmp jno insb (bad) cld rex.WRXB cmpsb rorb (bad) out sub (bad) mov rex.X jp sub rex.WXB cmp jnp xor push (bad) adc push mov hlt (bad) adc xchg js or push insl xor or movsb cmpsl xor push mov jge cmp (bad) mov add jns retq sti imul test lret rex.XB in (bad) pushq rex.R xchg sbb pop push push add cwtl xlat mov push xlat or mov or std mov pushq mov mov xor jmpq fisubrl xor or or xor xor pop add add lahf or repz cmp shrb (bad) rex.RXB rex.WR or (bad) rex.WB imul and pop jmpq (bad) rex.WRXB mov sti or xchg cmpsl add push fsubrs jl sbbb sub add push jns mov rex.WRB fdivrs lret sbb rex.WRXB rclb (bad) jge fwait (bad) or jbe notb movabs rex.WRB sub mov (bad) jl in adc xchg rex.WB rex.RB imul mov data16 cmpsl or (bad) (bad) pop pop xchg fidivrl gs mov (bad) roll test mov stc and or fwait icebp xchg (bad) (bad) xchg (bad) mov rex.RB js scas push fst and fxch sub sarb shrl pop nop leaveq pop int mov in rex.W clc ja adc xorl mov addr32 jae fdivrs jrcxz xchg (bad) shl rcrb je rex.WX (bad) lock (bad) negb xor rex.WRX (bad) cmp or mov nop xchg mov rex.WRX jne rex.WX pop adc leaveq add sbb movabs xchg or (bad) (bad) xchg cltd pop (bad) add (bad) sub (bad) stos repz (bad) jno mov (bad) lods rex.RXB rex.WR cli (bad) pop push jp icebp xor cmp movabs (bad) mov pop shlb popfq push lret rex.WB imul adc mov (bad) pushq jo rclb xchg loope push int sbb (bad) (bad) xchg rex.RXB fsub flds mov ficompl xchg or nop xchg and popfq retq push (bad) cli xor fs rcrl stos outsl fistp rcrb out jmp ficom dec xchg enterq movsl pop sub jns cmp pop mov rex.RXB sub jnp or nop sub push mov std pop sti std xchg push xchg rex.RB movabs jmp xchg ss out (bad) fcoms (bad) out xor movslq (bad) out (bad) rex.X mov push popfq mov rex.X (bad) testl cwtl rex.XB stos xchg movb imul (bad) (bad) pop cmp rex.B (bad) nop (bad) loop push ss out fucomp out (bad) (bad) rex.RX push scas cmp (bad) jnp (bad) js (bad) or fnop mov test sub cmpsl push pushfq xor in rex.WXB rex.RXB cmpsb cmp rex.X rex.RB ror (bad) cmpsl sub or js push rex.WRXB jmpq fisubl push jg pushq cwtl fild or and hlt (bad) sub lahf invd sub rcl gs mov out and cltd add fisubr fwait lret fnsave or flds (bad) (bad) pop (bad) lret (bad) cwtl add jno int mov sbb push jo or data16 in fwait stos movabs mov in sahf (bad) loopne (bad) (bad) mov mov cmp push cwtl mov fist xlat lret xor (bad) xlat fwait mov sbb (bad) jno (bad) xchg (bad) (bad) jo (bad) fistl rex.RX fistl xor (bad) pop cltd fildl push stc jg push pop rex.WX sbb ja jo fistl pop add xor jae jae xor sub and repnz imul hlt mov (bad) cmp (bad) and retq sub (bad) jbe loop sarb adc repnz jmpq sub mov xchg (bad) gs fistpl fwait rex.WRB xchg (bad) pop cld xor xor push add pop (bad) rex.W movabs (bad) (bad) loop rex.WRB imul xlat (bad) jnp fldenv (bad) (bad) decb xchg (bad) fcoml xor in rex.RX pop adc mov adc cmp (bad) jg movabs decb mov mov clc sub mov adc ss pop fcoml movabs fwait mov movsb in mov movabs callq cmp movabs and cld test pop retq pop sub adc push mov cmpsl mov push push (bad) pop nop and shrl fstpt push mov lret retq fdivrs (bad) (bad) mov push pop rex.RX iret mov sbb pop (bad) push stos xchg stc xor pop gs fcmovne mov mov jo js fwait lods (bad) cmp sti add (bad) (bad) cmp incl in rex.RX push fldt test jnp (bad) push xor (bad) mov (bad) sub rex.WR cmp repz fstpl pushq loop rex.WR push mov int3 mov adc mov pop pushq rex.RX movabs bnd cmp fcmovbe xor push (bad) xor rex.RXB fwait movsl out mov xchg in pop add insb jne fistpl mov jle mov test rcr (bad) test cmp rex.R lods callq xchg rex.XB sbbb (bad) fwait sahf rclb adc out xchg stc sub jns ss mov push (bad) std loopne rcr adc cmp (bad) repnz fstpt clc rex.R fwait rex.XB sbb sub jne rex.RX fisub cltd xchg fistl movslq out test xchg movabs (bad) cmc adc and (bad) icebp cmp mov rex.W rex.X gs and fwait popfq sbb in or repnz fnstsw rolb fildl adc fistl sub (bad) lock xor fistpl movhps fisttpl adc test mov int3 sub jp adc xchg shll mov movabs rex.RX lock rex.RX std fidiv adc xlat mov fildll lret xor shll mov add pop imul sbb (bad) fidivrl stos out out lods fidivr fwait mov cmpsl push rex.WX rex.XB outsl (bad) rex.WXB sbb rolb pushfq int rex.WR rex.RXB and fisttpl push add pushq cmpsl mov fistl movsb mov hlt pop sub add lods push retq sbb adc cmp (bad) fildl pop mov es push (bad) xor cli xor lea pop cmp test (bad) (bad) not jns mov ja xchg roll pop xor sbb rex.WRB (bad) lret add es pop movabs cmp sbb mov xor (bad) or mov (bad) push mov and lahf movslq mov pop sbb adc rex.XB cli xchg fwait mov movsb negl mov addr32 pop pop andl jle retq fbstp sub and out cmc xchg jl jrcxz (bad) mov jbe xlat sub sub xor jge es (bad) loopne pop imul adc mov sub retq (bad) mov xor rex.RB popfq rex.WRXB xchg jmpq push sbb or (bad) rex.R sbb cli push in mov cmpsb mov (bad) lods xor int3 (bad) pop add mov (bad) xchg insl adc (bad) negl fldl adc xchg cmpsb push stc rclb (bad) rex.WRB mov rex.WR retq mov jmp mov or in push pop scas xor or (bad) mov fistpll mov js (bad) and rex.WR adc movabs (bad) rex.XB cmpsl xor rex.W fcompl stc mov jne push push sbb xchg cmpsb mov push std jmpq idivb xor mov rex.RX push (bad) sbbb in (bad) cmp cmp mov enterq add ja jmpq mov rex.WRB fsts mov mov fsts sbb push or pop imul cmp jle xchg lahf sbb fstps in cmp (bad) mov rex.WX add cmc cmpsb mov jl and fadd xchg mov (bad) mov (bad) cmp addr32 out add lret movslq loopnel fsubrs repz xlat (bad) rex.WB jl mov fisttpll push hlt scas adc adc push xchg icebp iret adc pushfq adc push push jae sbb rex.WRB ja rex.X mov fwait idiv iret xchg rex.WR add jns pop xorb and or fldl int3 jnp imul sbb out lods out je (bad) jb rex.WRX test out movabs or xlat or rex.WRXB xlat rex.WB (bad) sbb pop retq pop mov (bad) add add outsl jg adc xchg push xchg add mov mov xchg and add sbb out mov rex.XB (bad) fcmovbe stos (bad) (bad) push rex.RX pop (bad) mov (bad) pushfq hlt xchg mov jae add push gs mov (bad) mov es (bad) addr32 add xchg adc insb xchg jne add sub out mov xchg xchg push fldlg2 (bad) mov fcoms add ficoml xchg imul ja mov adc pop pop rex.RXB sti fistp hlt scas cmc push and fwait (bad) fbstp sub or test adc (bad) int adc retq (bad) adc (bad) sub imul pushq pop (bad) cmp ja (bad) divl movslq lea adc (bad) out (bad) jo rex.X ds movl pop (bad) rex.WXB std (bad) rex.WRB (bad) xchg out cmp mov xchg lret mov push mov sbb in mov rex.W pushfq mov rorl push push retq test jne (bad) pop sub mov faddl fistpll lea mov pop pop enterq (bad) cmp iret retq jl fisttpl sbb sbbl rex.RB pushq jmp pop adc rex.RX fildl and sbb mov cld (bad) stos xlat out std pop movabs sbb (bad) lods xchg test fistl rex mov sub (bad) cmp cmp (bad) fcmovnu jae sbb rex.WRX rex.RB adc rex.WB mov (bad) (bad) jo stc xchg cld setge imul int3 xor movabs (bad) adc fstpt sub pop popfq jae (bad) mov (bad) lods vroundps sub js retq shr fisub mov (bad) adc (bad) sbb sbb rex mov or psubsw notb movslq (bad) jge addr32 jrcxz (bad) jl jmp lods fcmovnu mov pop jg cmp (bad) (bad) (bad) addb rex.WRX fistl and gs rolb (bad) rcr repz rex.WX add (bad) add (bad) cmp fidiv loop repz (bad) rex.WRXB mov or (bad) js (bad) push shll cltd negl (bad) fistpl (bad) shrb fcompl nop cmp mov imul addr32 mov xor ja imul sbb pushfq pop mov test mov or rcll pop add mov ja cmp rex.WX rex.RB mov mov imul mov mov add std enterq adc xchg cmp lret (bad) fcmovnbe ja imul in fsubl fistp push pop add xchg stc add cwtl pop xchg jno jbe jne data16 rex.WRB jnp sbb (bad) std fwait popfq xchg (bad) movabs sub jl (bad) xor rex.WRX rcll pop cmp retq cmp rex.WXB fistpl jno rolb sahf and cmp mov and test or pop pushfq (bad) stos (bad) (bad) pop or push jnp and movabs add pop (bad) icebp gs outsl pop pushq fstpt xlat pop pand in callq je jno jae popfq cmpsl or and jmpq data16 xchg mov (bad) imul sbb xchg mov fadds push fcompl add pop rex.WRB cli mov adc scas mov fstps (bad) mov mov (bad) rclb (bad) and in vcvtsi2ssl xchg jb imul sub mov pop (bad) std or out (bad) add lods cmp mov fcomps push push (bad) (bad) sbb adc rex.R fildll (bad) out xchg (bad) (bad) jae push adc rex.XB sahf fdivs mov mov sbb (bad) push std mov (bad) pop mov or rex.WXB (bad) test insl (bad) clc rex.WR (bad) rex.WRX jno cld in or test jae fidivr in and and and test loope pop std outsl retq jnp loopne repz icebp jne mov rex.X mov callq jle in pushq (bad) (bad) jae int3 jae push jbe mov (bad) in (bad) mov xor (bad) idivb push lea rex.WB scas sbb lret outsl out (bad) repz rex.WXB fnstcw or fstpl cwtl movabs adc ficompl cmp nop mov rex.W fstpl add out (bad) cmp jne xchg xchg stc jl add outsl (bad) insl movabs pop jno out xchg repz cmp or cmp mov xchg scas push out out or lods lods sub rex.WRXB sti rolb push outsl add push nop es addb (bad) rclb int mov lret rex.WX in cltd fs lea lock in (bad) sti rolb mov pop fwait push js idivl mov out cmpsb (bad) (bad) stos leaveq (bad) roll fistpll out sti sbb (bad) pushq (bad) stc xchg add gs hlt loopne push loope (bad) divl (bad) push rorb mov (bad) pop adc fnstenvs xor repnz xor lahf clc mov pop in add cwtl jle adc cmp mov rex.XB and xchg xchg cmp repz out in adc mov popq mov sbb or add lods rex.B fwait sarl (bad) (bad) fmuls jne and (bad) (bad) loop enterq imul in mov rex.WR (bad) jmp (bad) fwait std cmpsl mov movabs jp rex.WRB (bad) (bad) negl xor js lock cmp xchg adc scas cmc mov ja addr32 outsl cmp mov (bad) icebp pop cmp cmc (bad) pop cmpsl (bad) (bad) and out pushfq cld (bad) lods fs rex.RB in imul retq rex.WRXB xlat sbb mov loop rex.B mov cltd (bad) jne jp rclb xlat rex.WRX rex.WRXB test mov jle lahf mov loop pop push xchg ja jge xor push rex.WR mov xor mov (bad) (bad) es hlt adc orl fstl in cmp mov jge (bad) sbb xchg stc movabs push gs (bad) (bad) stos es push xchg cld movabs cld movabs rex.WRXB (bad) sub vunpckhps push in cmp out cltd xorb xchg xor mov (bad) je lea lods (bad) xchg xchg (bad) rex.RXB pop jge xchg mov xor pop sub insb xchg xchg je retq test and test xchg add cmp or sbbl (bad) (bad) fcomp mov sub mov shll sub mov and jb pushq mov adcl adc fistpll vfmaddsubps movslq sti cmp addr32 push fwait jg jp and or fwait mov stc jrcxz incl stos notb xor (bad) rex.WXB cmp add push iret mov lret data16 push xchg roll xchg (bad) in ficoml push fsub loop test mov out lret movabs rex.WXB rex.WRX and or iret divl movabs mov add movabs fild (bad) (bad) rcll pop and push (bad) test (bad) stc mov add cmp mov nop rcrl subb in xchg add sbb stos xchg lahf rolb sub (bad) jbe mov repnz ficompl xchg sub (bad) pop and (bad) cmp std sbb sti cmp push or (bad) jb sbb fistpll ja (bad) pop jnp (bad) sbb int push cltd mov pop mov cld fisttpl xchg pop cltd jnp movsb loop xchg fsts outsb pop (bad) and sub js iret push mov push movsl (bad) adc (bad) sbb rorl push push jns xchg jg xlat (bad) rclb fcomps repz fnstcw and addr32 or xchg mov (bad) cmp movabs adc push push addr32 push sub xlat rex.WRX mov sbb (bad) fstpt iret pop out loop sahf and xlat sbb out sbb or mov or nop and sbb (bad) rex.WRX sub pop rex.WRXB hlt lods rex.RX rex.WR rex.XB (bad) (bad) mov fstps or push imul pop sub movabs int3 (bad) clc int (bad) cmp (bad) sbb stos shlb out mov fst mov cmpsb movb xchg pop lock sarl sbb js and sbb lret sbb rorl test mov jae xchg add jo rex.WRB cmp imul mov (bad) retq sub fwait lret (bad) leaveq xor sar and (bad) fnstcw retq sbb mov rorl xlat push jb addr32 loopne xchg mov movabs rex.RXB fsubs push adc rex.WRXB sti jae jnp rex.X lods and (bad) sbb pop rex.X scas pop lret fucom mov retq cs fidivl mov (bad) xlat xor mov xor in rex.WRX rex.WR (bad) (bad) iret loopnel or (bad) (bad) enterq (bad) fdivrl cmpsb enterq (bad) movabs (bad) (bad) xchg push addr32 out (bad) addr32 movabs loopne (bad) (bad) push push jbe leaveq movsl (bad) lret sbb cld (bad) xchg xchg xchg mov (bad) out push or addr32 xchg mov jno leaveq (bad) xor push addr32 int3 in push fcmovbe fdivl rex.WRXB ss xor fsub pop jrcxz (bad) mov (bad) cwtl mov adc pop adc movd nop (bad) fwait (bad) cli movslq rex.W rex.WB (bad) jbe (bad) fisub pushq sub sub out retq or enterq out fiadd andl setns cmp stos (bad) rex.WRX out push (bad) mulb retq xchg push (bad) push adc xchg callq push mov cmp mov sbb jg push (bad) mov rclb sub (bad) pop and rclb adc mov rorl cwtl push mov subl push sub xlat push fs (bad) xchg xor lahf retq rex.X fdivl hlt rex.XB pop adc out leaveq or movabs sub clc mov lods (bad) rex.WRXB rex.RXB rex.X mov icebp (bad) lret retq lret and clc fdivrs jnp fsubl rex.WRB cmp fiaddl add sarl rex.WRXB rex.RB and push rex.WXB (bad) out in mov fnstenv mov xor xchg ficompl pushfq (bad) out (bad) or (bad) out cmp ds mov mov hlt jns rex.WB es sbb jrcxz (bad) jns (bad) jns sti fidivl jrcxz adc fcoms jnp xlat jnp mov outsl push pushq addr32 (bad) xor vpsrld repz shlb (bad) add mov mulb popfq rex.W rex.RX or roll add shl rex.WRX rex.WRXB movabs mov mov (bad) mov (bad) mov rex xlat cmp jne xchg xor mov xor mov mov movabs scas pop lahf rclb iret xor fs scas (bad) rolb sbb add mov movabs push test rex.WR enterq (bad) fs (bad) or rex.WRXB stos xchg movslq rcl es fimul adc scas mov stc xchg mov lods imul ja movsb (bad) mov in addr32 sbb out movslq cltd mov xchg rex.WX scas mov push fidivr xchg enterq pop mov xor fmull subl cmp (bad) divl je,pt pushq push (bad) (bad) pop xlat mov mov mov retq movsb add push enterq (bad) jb movsb cmp rex.WRB xchg push push movsb (bad) or (bad) rex.WB cmpsb push iret cmp js fcmovbe mov push xchg vmovaps mov iret repnz stos imul sub rcrb sbb push in sub mov (bad) (bad) js (bad) rex.WRB cmp out jrcxz pop pop ja addr32 decb (bad) int (bad) neg cmp sbb cli mov sbb (bad) (bad) jmp and and pop xor rex push callq mov cmp (bad) (bad) (bad) jno xrelease in xor and or push adc add cmc mov mov mov gs rex.XB ds pop ficompl sbb idivl out mov lods std cmp pop test rex.X (bad) cmp icebp mov cmp jmpq test sbb (bad) cmp (bad) fdivrs (bad) (bad) xlat sub and xchg movabs callq xor lret (bad) cwtl jmpq rex.WXB rex.W add (bad) pushq (bad) mov (bad) rex.R push xor jg rex.W and push adc xchg (bad) (bad) push test out jmp negl jl and jg lahf push fsubl rex.B mov cmp fidivrl and rex.R (bad) push cmp out mov pop pop callq enterq fldenv rex.WRB mov sbb imul rex.XB sbb rex.W ficompl addr32 and movl out leaveq ficompl rex.WRX loopne in pop pop negb outsl (bad) (bad) sub or cltd lahf mov mov (bad) xchg mov sub or and cmp jbe scas jmpq (bad) test fnstenv add orl (bad) icebp fdivl (bad) mov fsubrp cltd mov xor int3 movabs xlat lahf lret add enterq ja pop lret movabs (bad) sbb movabs cmp mov cltd cmp imul fcom (bad) mov or (bad) pushfq pop jge imul sarl mov mov fwait xchg and int iret mov xlat sub fs out xchg rex fstl push shll push xchg xor addr32 (bad) cmp lea retq rex.RXB add mov iret rex.WRB xchg ror lret xor mov xchg mov add cmp jnp movabs (bad) cld mov (bad) cmp lods mov int3 sti mov jp int3 fistp and pop jbe (bad) int cmovge mov js rorl shrl neg mov push sarl or out int cmp jmp fnstsw int3 sub mov mov adc lret retq (bad) sub cli jge mov rex.R pop test push xchg loopne xor pop (bad) sub rex.X sbb lret (bad) cwtl pushq stos rex.X jno leaveq pop pop (bad) pushfq push (bad) (bad) (bad) sub rex.WX rex.WB lret cs fwait out mov repz (bad) mov xlat movabs fstpt push xchg (bad) (bad) rex.R lahf xor mov push addr32 cltd xchg (bad) mov push (bad) (bad) rcrb lret loopne out and movabs nop mull movslq (bad) int callq (bad) testl push test mov xor push xchg pop (bad) sbb jmp pop out and mov xlat or xor movslq pop idivb and out rex.WR cmpsb rex push xchg mov rolb jg or push iret mov jne mov data16 gs cmp jg rex.WX rex.RXB movabs shl (bad) mov xchg cmp (bad) adc mov rex.WX mov stos popfq (bad) cltd rex.RXB sbb fisubl (bad) leaveq and pushq adc push fstps ja or stc push rex.RXB or or or jne xlat out lret lret cmp mov (bad) mov movslq or xlat rcl sub mov rex.WX and pushq mov xchg leaveq fwait or mov push movabs shll imul xchg (bad) lret (bad) mov or push cmp adc (bad) pop cmp insl jbe mov rorl sarb (bad) (bad) enterq out sub cmp or pop mov popfq mov (bad) sarb (bad) (bad) fwait fwait (bad) (bad) imulb mov sbb jrcxz rex out fisubrl xchg loope sub sub (bad) (bad) pop stc stos rex.RB jne ja add rex.WXB push cli fsubs movsl movslq loope out sbb xor xor std hlt rex.WRXB cmp sub (bad) rex.WRXB rex.WX xchg lcall push icebp shrl mov gs loopne (bad) jae mov add push sub shll push (bad) xor repnz xlat fcoml pop out loop rcrb out rex.WB add xchg lret movabs cmp movslq mov ljmp (bad) (bad) loopne rex.WX xor sub rex.R sub adc lret movabs sub js repnz (bad) jne sub rclb jge sti jmp rex.WRXB push jrcxz cmp fmulp add mov rex.XB stc lret int pop rclb rex.WRB xchg push test xlat test jae cwtl (bad) fdivp xor shll pop loopne rex.WRX rex.WX loope sbb movslq fwait roll sahf rex.WB xor pop (bad) adc cmp stos sub jrcxz stos pop sti adc lret (bad) leaveq je out leaveq retq movabs (bad) imul mov pop fildl pop (bad) int3 push (bad) cli push rex.WRX (bad) sub (bad) es (bad) jrcxz mull (bad) scas scas adc jl pop or (bad) rex.WX push addr32 cmp incl cmp fdivrs (bad) sub (bad) test sub sarb fstpl mov fcompl mov jle push clc sarl imul out and push (bad) repnz or xor jmp lods fidivr jb movabs cmp rex.WRB sub xchg cmp (bad) movabs cli movabs movabs xorb fdivrl jp sarb rex.RX (bad) pop mov mov movabs jrcxz clc sbb ficoml repnz mov mov movabs (bad) mov xor xchg cs fidivl scas jge sub xor (bad) mov lret movabs insl (bad) fsubrl cmp ds adc fcoms rex.RXB add lods (bad) (bad) xchg cltd mov movabs lret mov xchg movabs (bad) adc rex.WX cmp pop ss push or mov xor int3 out (bad) rex.RX rex.WRB (bad) bswap imul repnz push mov rex.XB (bad) enterq (bad) jns retq fwait (bad) loop addr32 mov pop scas insl (bad) data16 gs outsl repz pop sbb out callq push addr32 mov (bad) xchg (bad) or jge rex.WRX ds rex.WRB xor movslq pop fsubl jae rcrb callq ja cld addr32 rex.W (bad) sbb sbb sbb cmp jae (bad) jns adc xchg (bad) test or retq rex.WB xor cltd cs jg repnz callq fnsave pop rex.W and clc pop mov iret push (bad) xor adc rcrl movabs mov and xor jno (bad) pop and andl out lret movabs sub fs pop cmc movslq mov adc out mov xor retq push and pop mov mov data16 notb stc cmp and mov jmp jne cmc gs fistp movabs ror (bad) pop jo push push hlt pop sbb lret (bad) (bad) mov rex.B pop mov js mov mov adc pushq (bad) mov lret enterq or js orl (bad) mov fbld iret push rex.RX (bad) rex xchg fwait (bad) mov xchg jno rex.RX mov pminub mov mov sbb jns (bad) mov sbb mov push or push (bad) sarl stos leaveq cli out (bad) jg mov pop (bad) ja xlat or adc (bad) out hlt push test jbe (bad) mov addr32 mov (bad) (bad) rex.WRB lret outsb xchg mov push movsl scas and push push pop in jle sti xor sbb addr32 or ficoml movslq and out retq xchg pop (bad) jmp stc xlat pop (bad) (bad) xor gs and mov (bad) rex.X enterq jno dec (bad) sbb push movabs imul cmp je or cmp xor sbb in push pop rex.WXB jp lret in mov xorl sub fwait (bad) mov movsl adc stos lret test int3 retq (bad) fistpll enterq xlat pop (bad) int3 movslq roll mov sarl pop fldcw cmp sti iret adc pop dec rcrl sub xchg (bad) outsl adc popfq nop int sub int3 retq ss sbb repnz (bad) xlat rclb leaveq test negb (bad) push fidivl lahf or (bad) jp pop push (bad) test xchg pop test sub (bad) fstl xchg push sbb (bad) cmc (bad) pop rex.RXB rcll test (bad) pop xchg fisttp xlat pop jg (bad) xlat cltd cmp (bad) and mov jp lahf pop fs jbe scas mov cltd fldenv fimull (bad) pop rex.WX mov sbb push xor xchg mov cltd pop mov test jmp push pop (bad) jbe ja sub xchg cltd rex.WRXB mov rex.WX out mov (bad) mov sti sub and (bad) push test gs (bad) rex.WRB stc hlt cmp rex.RX ds jno lret pushq rex.RB out push mulb sub add movb in stos xor lahf add fsubrl cmp rex.WRXB sar (bad) addl ss jb cmp insl (bad) xchg sbb rex.WRXB out (bad) enterq outsl pop movabs shrl repnz ror retq mull rcll push out mov push mov cmp iret lret (bad) (bad) rex.WX lret xor or adc (bad) rcrl retq and sub cmp pop (bad) cld mov sbb cmp push cmp mov and (bad) rcrb ljmp adc xor pop jl fadds rex.R pushq movabs sbb rex.WB (bad) negl ja (bad) xor xlat (bad) ja stos clc lret rep sar mov or shll adc cmp sbb ffreep rex.WRX adc xchg push cs fcmovbe pop jb rex.WX push mov mov push (bad) notl or (bad) out movsl xor in (bad) (bad) mov pop or pop push or lret xlat and and rex.WXB imul or (bad) xchg stos (bad) adc loop jbe retq lret sti pop push cmc ds rex.R jb and fxch xor rex.WRX xchg mov (bad) icebp mov jae push pop pop mov and faddl addr32 rex.W jg (bad) (bad) (bad) iret push scas add cmc lret xor sub push addr32 cmp jnp cli push ds stos rex.RXB rex.WXB out callq loope cmp xchg (bad) mov mov loope or push push rorl xchg and (bad) jnp (bad) test (bad) jg xor cwtl mov jp shlb (bad) negb (bad) out std sub stos idivb lock sbb int pop pop loope pushfq (bad) callq cmp jno cwtl mov (bad) sub mov movabs xor (bad) (bad) mov sbb sub imul push stos addr32 out xchg mov jmp mov sbb push (bad) mov gs (bad) (bad) xchg stos movabs rex.WB push popfq rex.WB xchg movabs xor rex.WRXB jg imul (bad) rcl and cmp movabs sbb test (bad) xor test and retq mov out rex.WRB stos mov (bad) mov shll ss (bad) push ficoml rex.WRXB iret pushq outsl push lahf xchg jbe loopne outsb lret rex.XB test retq cmp scas xchg adc mov movabs movabs (bad) and adc cmp movabs ds (bad) push adc sarb pop pop fistpl cmp and lret cmp xchg (bad) cmp cld je mov mov pushq stc leaveq xchg push push (bad) xor add movabs (bad) rex mov rex.WRB cmp jns xchg ds xor cmp mov pop cmp pop in (bad) xchg stos mov int rex.WXB movabs (bad) jno imul rex.W insl pop cmpsl jne sbb (bad) fnstcw mov (bad) pop sarb nop outsl sub xchg add mov lret and loope rex.WXB rex.X sbb cmp mov fidivrl sar es out mov mov mov and adc enterq mov pushfq jo xchg cmc pushq mov mov shll xor out lock rex.WB push jne icebp sahf rex.RB pushq (bad) mov addr32 sub cmpsl repnz int3 lahf or rex.WRX (bad) stc rex.WXB sub movabs (bad) rolb mov pop stc (bad) and xchg bnd sti rex.RX movslq movslq sbbb ja or rex.RX add (bad) xor cmp icebp imul or shr pop jp pop lret pop or repz jne rex.WRX stos sbb cmp pop icebp jnp rex.WRXB movabs mov xor push cmp cmpsl (bad) std rcr rcrb imul test movabs cmc rex.XB (bad) cmp (bad) scas pop sbb movslq movsb hlt adc mov jmpq jne pushq (bad) addr32 push shl add shll push clc rorl xchg xchg rex.WRXB rex.WXB lods xlat mov xchg mov sub leaveq out out jae ss (bad) xor mov int rex.WRXB xlat lret sbb rex.RXB cmp movslq rex.WXB mov pop jle (bad) and mov scas shlb pop (bad) cmp fdivl sbb sbb (bad) jb leaveq sbb out repnz mov out rex.B movslq (bad) cwtl sbb (bad) sbb fdivrs clc pop retq fcoml rex.XB push mov (bad) retq fidivrl out xor push xchg scas movsb repz mov jl cltd (bad) (bad) xchg fisubl adc fdivrl cli pushq lret out rex.RXB cmc and push xchg je jge mov rex.XB (bad) xor (bad) loope fwait (bad) js out rex xchg push ds mov cmp xlat jb test fadds lahf fsts cmp lahf std jmpq xchg (bad) (bad) movabs rex.X out cmp out rex.XB lock (bad) out je xor sub loopne pop test jnp rex.WX cs insb (bad) enterq fsts fsubp cmp mov sti pushfq stos (bad) sub stos xchg and mov test rorl adc out xor (bad) jne mov addr32 es rex.RX (bad) movabs (bad) notb xor and out gs (bad) adc mov add jno (bad) mov mov sti ficom xchg outsl xchg and out (bad) add or callq addr32 cmp sti sarb jo rex.W lret (bad) addr32 pop rex.B rex.WXB mov rex.WX icebp push adc mov loop,pt sbb rex.WRX sub scas pop leaveq pushfq sub or iret jmp cmc pop in mov jg out xchg cltd adc add fbstp jne mov (bad) in addl sti movslq xchg icebp or cltd jno xchg hlt lea popfq xchg jns xchg pop mov xrelease rex.WRXB rcll movabs xor xchg imul rex.WXB js cld leaveq rex.WRXB cltd (bad) push sti out (bad) shrb lret repz (bad) (bad) movabs rex.RB fdivrs (bad) cli sbb sti mov xchg (bad) (bad) (bad) jnp mov (bad) std mov mov adc (bad) repnz xchg rorl movsl mov add or leaveq mov cltd jo rex.X (bad) insl rex.X sarl outsb (bad) fimull jmp (bad) jno (bad) ss xchg lret mov rex.WRX ss shll addr32 andl lahf mov repnz callq data16 cmpsb adc and pop cmp fiadd shll push stos rex.RXB out nop movabs mov (bad) (bad) (bad) jrcxz js mov mov cmp (bad) (bad) xchg mov pop out or lea mov sbb jmpq (bad) cmp jo mov fsts es jle cmpsb rex.XB sub mov (bad) (bad) scas jrcxz adc (bad) or xor mov scas imul fsts or sbb pop add xor (bad) or jp rol push (bad) xchg xchg roll (bad) mov popfq mov fidivl pop sub adc mov push addr32 test int add (bad) rex.WRX stos adcb scas add ja movl sbb jle and stos sbb xlat xchg lret adc faddp push enterq movslq cltd lret add scas pop jrcxz movsb pop repnz cmpsl (bad) out movabs (bad) (bad) mov mov (bad) cmp jle mov ja js or movsb cmp xor push insb callq or retq rex.X (bad) (bad) (bad) (bad) push mov fdivl rex.RB decq addr32 ds lods add shrl movabs fyl2x test xchg (bad) pop movabs or (bad) rorb fstp rex.W outsl fcmovu movabs js rex.W xor callq (bad) xchg ja retq test hlt adc add xlat push cmp xchg movabs (bad) insl (bad) pop cmpsl cmpsb in pop jp jbe int3 fnstsw cmp fcoms pop xor jle (bad) lock mov xor retq cli sub ds (bad) fild fstpt js xlat movabs push movabs cltd sub cmp movsl movabs fsts cmp rex.WRB sub sbb (bad) bswap iret mov add (bad) mov jb (bad) adc (bad) outsl icebp addr32 repz jl clc addr32 adc (bad) rex.RXB mov fidivrl int3 callq retq fldenv retq iret push callq xchg xor fdivp adc xchg (bad) push outsl adc mov movabs (bad) loop mov cmp cmp cmp rex sub (bad) adc mov cli sbb cmp xlat stos rex.R in mov fdivrs lahf lret and scas pop out jmpq fnsave and retq loopne pop sub pop pop xchg testl mov mov shrl jae sbb pop (bad) callq movsl shrb cltd mov xor in rex.WRB imul push mov int3 jno jne outsb push and callq out callq mov adc subl add mov (bad) mov sub js jg push mov sbb pushq xchg (bad) stc (bad) or cmc test cmpsb sub sbb scas adc mov pop imul sbb pop mov jp mov (bad) (bad) sti scas loopne (bad) cmp pushq sub adc sbb rex.XB push (bad) pop pop icebp and enterq movsb cld (bad) jle pop mov pushfq mov sub movslq rex.X sbb movabs fdivrl std cwtl pop cltd jb rex.W rex.WX test rex.WRX imul and sub and fcmove sbb rcll push es cmp mov stos rex.WRX pop (bad) sbb addr32 clc jrcxz push (bad) rex.X cmp iret cmp adc lods je and (bad) callq (bad) movslq add push stos (bad) mov (bad) rex.RXB and lret or or js test ds lea (bad) and rex.WB es movabs nop fwait adc cs mull add ficoml (bad) xchg adc fsubs (bad) lods outsl mov jne mov push push rex.XB push rex.R adcb lret imul gs adc rex.RX fnstenv (bad) lret adc lock stc and xchg rex.WX adc fadds or loope sbb cli and out xchg sub (bad) jo mov rex.B pop adc stos adc mov pop in (bad) push xor rex.WRX scas roll sti lretq (bad) loop mov enterq rex xchg ja cmpsl xchg movabs pop gs jae cmp notl rex.RB movslq mov int3 mov add (bad) push xlat ss xor cltd test jae (bad) pop loop callq xor out in movabs push fidivl cqto push xchg je mov rex.WXB jmpq retq rorl clc data16 (bad) in bnd push pop mov pushq out adc gs add movabs or ja pop addr32 sub (bad) stos rex.WXB popfq rex.RX (bad) pop xlat (bad) jnp (bad) stos xor (bad) sti out and mov loopne rex.WR mov rclb pop mov lahf mov rcrl lret loopne jno imul rex.R shrl movabs mov push (bad) sbb (bad) sarl xchg mov movabs jo sbb (bad) xlat (bad) rcl movsb mov mov xor movabs cwtl (bad) iret (bad) (bad) scas adc (bad) xor jnp retq scas outsl jp sub (bad) stos push and xchg jmpq roll sbb movabs (bad) rex.WRB mov jbe jrcxz (bad) idivb stos es and pushfq rex.WRXB iret stc sbb cmp pop out sbb mov (bad) out cmp xchg lret (bad) movabs (bad) js xchg xchg pop xlat or rex.WR push pop pop pushq idivl jp mov push leaveq repz (bad) sbb lret movabs addr32 mov (bad) (bad) imul test sar out out in sub pop or push popfq sbb xor mov loop sub iret popfq (bad) rex.R push insl or cmp retq test mov mov sub (bad) sbb clc sub jb ss andl push push add test jns cmc fcompl cmp fldcw clc and mov jg mov xor lods out icebp xchg lahf or pop push out xor mov test stc fidivl rex.WR xchg xor in mov rex.WR cltd shlq mov ja adc jns imul fldenv popfq fbstp push out xchg (bad) movabs xor cmpsl add mov xor mov pop addr32 stc sahf in jb outsb and out movslq jge imul mov mov and movabs (bad) (bad) ds pop movabs cmp (bad) fdivrs jb imul cmp ds push mov cmpl mov xor lods rex.WXB jp xor and ds (bad) jge cmpsl (bad) push xchg (bad) xor clc lea mov cli mov mov leaveq xchg (bad) xchg sbb (bad) pop cmp addr32 repnz fadds (bad) jnp fistp ja rcrl adc sti and mov stos sub or pop xchg xor ja xchg jp sub pop sbb lahf cmp scas push push ja xor scas rex.WRX test cs xor sbb test push adc stos mov retq fdivrl retq jns cmp inc xor xlat mov lret scas movabs sub int adc xor xchg mov fsubrs pop jmpq sbb push test rex.RX (bad) mov mov or clc xlat ficoml scas mov (bad) sub mov shl js (bad) adc (bad) testl movslq pushfq (bad) jo gs retq mov jne movabs retq (bad) rex.RX mov fild leaveq shlb sbb rex.WR sbb loope and cltd out rcrb xchg push sub adc fucom pop xchg stos rex.WX std scas mov (bad) push mov xchg roll addr32 xor cmpb outsl push jl popfq (bad) repz rex.WXB or or or test (bad) (bad) mul movabs mov jae xor pop pop stc add or (bad) mov (bad) mov sbb out mov rex.WRXB jns (bad) out cmp cmp cmc pop (bad) mov xchg test pushq rex.R rex.RB (bad) mov cltd pop out movsb (bad) (bad) pushq and rex.WXB sub int xlat mov (bad) push lahf (bad) sbb pop pop adc mov sub rex.WXB jno rex.B fnsave test lret shrl (bad) mov (bad) push rex.X retq repz fldl sbb in jg rex.R loop icebp cmp lret mov test movabs sbb fmul mov rclb mov and mov rolb sahf cmp rex.X sahf pop add (bad) xlat clc sub pushfq loop (bad) je mov rex.WXB or nop mov cwtl rex.XB rorb out rex.WR movabs enterq test cmp cs scas adc (bad) fdivs xchg jae rex.RXB xor loopne (bad) xchg xlat lods push movabs sbb (bad) adc ds sbb jo xlat mov shll mov cltd (bad) rex.WX mov jno leaveq sbb sbb adc movabs jrcxz (bad) adc (bad) pushfq adc (bad) clc mov jae mov lahf jge mov rex.RXB int data16 push xchg mov rex.WB rex.XB adc mov rex.WRB in fstl rex.WRB xor (bad) xchg mov (bad) mov sbb mov (bad) lret (bad) movabs xchg sbb or jns (bad) sbb std sub push addr32 add lret xchg (bad) xor es push or (bad) push pushq (bad) push jl movabs and nop lods mov sub xchg rex.WRB lret (bad) mov (bad) mov rol ds add sub cmp rex.WRB nop rex.B mov callq addr32 rex.B std pop lock adc mov mov rex.RX out lret push fisubl cmp push out (bad) push rclb sbb (bad) xchg pop movabs and xchg mov xchg lahf xor (bad) loopne (bad) jb movsb lods rex.RX addr32 mov (bad) js push push fldenv push lret enterq rex.B imul (bad) movslq (bad) decl ss or rex.X ds mov gs imul xor jb movabs stc (bad) (bad) stc stos pop pop stos stos (bad) sbb cmpl jno sbb faddl (bad) xchg cmpsl sbb xor rex.X adc mov movabs (bad) sub test cmp es pop (bad) imul rex.WXB jb pop add sub lret cmp lods xchg mov mov (bad) mov (bad) movabs (bad) jb fisubrl pop xchg scas sbb push out adc test and push and rex.RB rex.R (bad) out mov mov or jmp (bad) retq je repz std insl sbb mov (bad) fsts movntq rex.WXB xlat xchg adc cmc ja sub mov and stos cltd mov (bad) push cmp (bad) mov mov sarb ss mov xchg gs iret shlw mov sbb out (bad) xor xchg sbb rex.R and rex.B rex.X push push adc sub rex.WRXB mov xchg movsl mov rex.WB out test adc jp mov (bad) xchg pop mov rex.RX ss lret std pushq jp pop push out scas rex.WRB adc push xchg mov movabs rex.XB rex.RB push mov (bad) and scas mov out jle add (bad) pop jb (bad) (bad) pop in pushfq jb adc movsl mov push movabs jbe (bad) (bad) sub subb test lret rex adc rcr fwait jbe and jbe rex.WX rorl in xchg jp sarb xchg and sbb mov mov movabs retq pop test jbe (bad) sbb (bad) mov sti rex.RX cli jle fmul mov stos fadd (bad) push (bad) pop cld stos iret ja jo mov rorb cli jnp (bad) push (bad) rex.R mov rorl jns (bad) pop sbb iret scas cmpsb push lods iret xchg out (bad) mov insl cmp rex.RXB (bad) sub xchg lret iret (bad) adc mov (bad) mov movabs sub shrl cltd mov jle sarl jle push mov mov xchg enterq movslq sbb jns jns mov cwtl stos jg cmp adc cmp (bad) (bad) in (bad) (bad) sti out pushq (bad) pop (bad) mov movslq pop (bad) sar rex.WX (bad) fscale fimull out pop enterq sbb sub shll mull and mov mov jbe (bad) jle iret cld cmp (bad) repz outsb (bad) rcrl mov push (bad) jbe (bad) jnp fdiv rex.WX lods adc cs (bad) movabs push je jns and rex.RXB (bad) (bad) pop mov leaveq movabs adcl addr32 rex.WRB cwtl rex.XB ficom callq xor push rorl and fsub fisubr out jnp retq andl adc and (bad) rex.WX lret rex.RXB xor hlt rex.RB pop mov xor adc mov rex.WRX xchg jp pop jle sbb lahf (bad) rex.W rex.R pop lret jae je movabs sbb loop (bad) pushq lcall and (bad) mov rex.WB xchg cltd lock and rex.WRB cs (bad) imul mov rex.XB xor leaveq push adc (bad) push pop in sbb rex.WRB callq test (bad) mov rex.XB iret mov push (bad) mov in and sub rex.WB jo jne cli sub mov cmp jnp rex.XB adc (bad) push scas or out add or stc popfq movabs (bad) ss xlat repnz push pushfq push rex.R mov pop lret rex.WB addr32 out rex.XB rex.WXB push (bad) data16 clc (bad) rex.WRB rex.WX cmp sti movabs (bad) mov push xchg mov idivl (bad) fisubr jmpq fbstp rex.RX sti mov outsb stos mov adc (bad) xchg jbe adc lods pop xchg jp pop xchg push xor rex.WB mov ja push rex.XB out in retq movslq add in pop or rex.WRB xlat jb mov (bad) xchg cltd sub rex.XB in rex.WB (bad) addr32 fwait rex.RX pop and (bad) out push sub xor jp sbb (bad) pop out rex.WXB sahf jne rex.WR loop,pt pop (bad) jrcxz std repnz mov retq and (bad) (bad) out lret mov cmc insb lret (bad) out cmp lret push (bad) rclb enterq roll mov xchg sub pop rex.X pushq rcrb fldcw (bad) jne pushfq movabs xor xor mov push outsl out mov sub scas lret adc rex.WRB sub ficompl mov mov (bad) mov xlat rex.RXB iret xchg xchg rex.WRB mov mov scas adc sub rex.R jge xor cmp pop sbb fnstsw sub repz pop rex.RXB (bad) outsl jns pop jno or icebp (bad) sahf rex.WX (bad) rex.WX pop mov mov sarb xchg (bad) jrcxz pop cmp gs (bad) pop (bad) pop (bad) jne mov push mov mov cli scas scas xor movabs (bad) rex.WB movabs mov mov fstenv pop loope leaveq mov (bad) iret push mov imul (bad) or rex.B pushq roll jnp sbb pop imul jns sti mov push (bad) adc and mov insb cmp popfq outsb adcb xor rolb jrcxz fisttpll mov (bad) repnz jne retq mov push pop outsl sub rex.WB cmp xlat or (bad) (bad) addr32 jg (bad) movsb cmp callq movabs addr32 mov jp fadds sti and test mov rcll mov lods rex.B out cwtl movslq leaveq (bad) out sub xlat lret xchg (bad) (bad) stos stc imul faddp popfq (bad) loopne add es es stc add mov sbb fsubrl fmul fwait xlat jbe sbb ds sbb sbb pop lret sbbl (bad) cs ja int mov (bad) jbe (bad) addr32 mov mov addr32 out sbb rex (bad) stc mov mov pop mov std xchg outsl add pop fdivrl or pop (bad) pop pop mov sti (bad) jns and sbb sub mov ror pop imul xchg xor sbb xor xor rcrb sub mov mov lock adcl (bad) jbe,pt push or sbb and int sbb vcmpss and push rex.WB push or icebp xor scas movabs add sbb pushq popfq add movsl mull and lret xchg push lret xor rex.X mov mov cmp stos jge sahf rcrl lods pop pop xchg jne jnp scas (bad) cmp sbb cmpsb sbb ficom loopne xor pop jmpq lret (bad) fwait jnp,pt sub adc test fs (bad) imul pop mov movabs add gs jrcxz xor cwtl xchg es outsl std and fisub cli int3 (bad) rex.WB orq jmpq movabs rex.WX enterq pop xchg repnz lahf mov hlt jrcxz (bad) mov (bad) movabs pop pop test sub mov movl push pop sbb andb xchg cwtl fdivrl addl ja mov xchg mov (bad) je addr32 (bad) loop cmp rex.WRX and adc push push xchg or adc or mov adc (bad) cltd (bad) add pop (bad) and mov notb nop (bad) mov jne pop addr32 out xchg sti (bad) lods movabs sbb pushq in cmp fwait mov out push cwtl mov rex.RXB stos repz push fdiv mov lods or add out rex.WR rex.WRX mov movslq push rex jl jo mov rex.WRXB rex.WRX cmpsl mov insl rex.WXB or cmpl rcr movsl shl (bad) (bad) xchg cmp roll negb clc leaveq int fcoms in mov (bad) mov or sarl (bad) xchg sbb std adc mov iret pop lods clc cmp addr32 imul adc mov sahf lods pop or popfq or popfq mov std idiv sub pop (bad) fsub and rex.B in xchg movabs imulb fdivrl scas mov or out (bad) es sbb leaveq loop popfq mov adc out movslq xchg (bad) pop xor cmc fiaddl cmp adc jne retq xchg cltd test movabs rex.WXB jl fnop mov mov mov cmp rex.XB ds xor push push addr32 rex.WRB lea mov push (bad) int3 fidivr rcr add and or (bad) xlat mov rex.RX fwait mov rex.WRXB rex.RB mov xor xchg or movabs lret xchg cmp shll jrcxz sbb mov push mov xchg or (bad) mov movabs je mov mov sbb rex.W gs ja cmp and movslq cmp xchg insb sbb rex.RXB leaveq jnp rex.WR sbbl and cs repz in cmp xor adc out jne adc push (bad) xor xlat rex.X cmp rex.WXB mull xchg (bad) jno jl push mov (bad) rcrb jns jae adc loope cmp flds shl jb rex.WR (bad) test and xor subb rex.RB rex.WB rex.WR int3 mov mov shll (bad) xlat xlat rex.WXB mov (bad) mov cmp test int cmpsb cmp out mov pushfq mov imul (bad) mov fwait pushq cmp add (bad) lret pop xlat sbb jle (bad) fnstenv movabs sahf (bad) mov (bad) fs retq xchg cltd (bad) pushfq and mov pop and jne mov lretw rex.WRXB movl push pop movslq rex.RX loopne xor push rex.WRB xor cltd sub pop lock (bad) pushfq cmc adcl (bad) sub idivb rex.WRB sub (bad) lret (bad) in rex.RX (bad) movabs push jmp mov sbb out sbb xchg push (bad) sbb stos push (bad) jo enterq push jb lahf or pop xchg fdivrs iret pop leaveq jae stc mov lsl rex.X cs xlat es and mov rex.RXB sbb pop cwtl rcrl lret rclb mov mov (bad) repz (bad) mov retq sbb sti imul in adc mov rex.WRX je cmp lret mov rol leaveq pop leaveq and push scas xlat fwait mov push in insb jbe and xor pop (bad) mov jg mov iret push (bad) orl jp cmp cmp fcomps pop pop sbb rex.WX (bad) xor mov (bad) lock gs pop ja xor cli iret jnp (bad) movabs (bad) push out lret xchg rcr xlat stos sbb push rex.WXB (bad) mov adc lret adc enterq cwtl xchg rcl xchg xchg (bad) jns cmp adc callq rex.XB (bad) mov out pop rex.WRB repnz out mov xchg jnp cmp xor (bad) outsl mov push adc int (bad) test add sub icebp xadd fwait (bad) cld retq rex.RB rex.RX rex.WXB scas cld add in pop insb cmp (bad) test push addr32 movabs jno sbb data16 sahf sbb add pop sti (bad) mov (bad) mov cld (bad) mov rex.W lret or rex.WX rex.RXB rex.X in ss in outsl (bad) rorb test cmp addr32 mov rclb sti fmulp test and (bad) lcall and xchg add rex.R loopne fucomi pop movabs xor mov sbb out and push mov push and adc ss jns xor push cld (bad) fs adc fisttpl mov xchg retq test xlat push test and imul push addr32 movslq out add mov adcb cwtl rex.X push cmpsl mov xlat pop movslq js mov rex.WB mov cmp iret loope outsb lods (bad) jl (bad) pop int rex.WRXB rep (bad) and mov rcr pop movslq out (bad) (bad) (bad) ja adc scas (bad) rex.WB push in mov jp mov mov jbe mov ja out rex.XB xor repz fcoml loope xor mov (bad) jbe out (bad) retq jge (bad) leaveq mov fadds sarl lret out test jmpq pop sub cmp or xchg icebp (bad) movabs outsl std (bad) fwait rcrb leaveq (bad) push push negl outsb je pushq test ror pop mov rorb hlt jg add adc outsb jmp xchg shlb addr32 rex.WRX mov (bad) xchg and push pop lock rex lahf (bad) sahf jne cmp std (bad) out cmpsl mov jne sbb adc (bad) (bad) (bad) fwait leaveq in xchg (bad) lods add rex.RX enterq xchg push (bad) (bad) negb mov jp int xor stc (bad) out (bad) jmp (bad) stc lods (bad) jmpq (bad) faddp and jb xchg push addr32 push pop add fadd (bad) pop test (bad) icebp sti pop xlat xchg adc mov stos jo mov fwait cmc lods nop sbb loope stos rex.RXB adc std xchg mov movabs lret leaveq stos rol (bad) lret xlat and faddp xchg js,pt lods or incl (bad) out sub notl lret cmp (bad) jne fdivrs mov cmpsl or xchg fcoms cs rex.WRB (bad) mov adc mov movsl cltd stos std cmp sarb movabs xchg ds pop xchg cmp std jle lock jo mov rex.WB movsb (bad) mov cmpb xchg (bad) fwait addr32 push rex.WRXB xor mov and insb mov loop (bad) sbb movabs rex.WB (bad) (bad) push rex.W stos notl insl ficompl (bad) xlat pop and data16 adc xlat pop pushq adc out ja movabs rex.R roll adc sub pop subl and popfq (bad) pushfq jno (bad) rex.WB pop rcrl mov (bad) xchg and rex.WRX nop sub pop mov packssdw lods mov (bad) cltd fstpl (bad) retq jnp jno (bad) push lea in popfq (bad) insl retq popfq (bad) sub stc lret sub (bad) mov xlat fsubr lret xor scas out jl sbb push and (bad) jae and fnstcw out lahf push cltd jg pop sbb vpmullw (bad) inc (bad) rex.WX adc push (bad) cmpsb (bad) or mov subl sbb lods in cmp (bad) mov movsl or shlb cmc (bad) add and int3 (bad) or sub jmp lock cli pushq cmp cmp cs jg or pop out jns mov loope add paddsb push iret push mov adcb (bad) jp cli jg rclb xchg movabs xchg test (bad) (bad) xchg xchg callq (bad) or jb (bad) and mov mov rex.RXB push int3 scas xor adc cmp int3 cmpsl xor mov movabs test (bad) mov xchg lea (bad) cltd (bad) add xchg stc popfq fidiv insl rex.WXB jg jns jnp jg ja mov mov imul pushq popfq iret movslq push test scas rcl xchg mov ror mov xchg mov jp int retq xchg sarl lret mov xchg or mull roll pop imul pushq repnz cmp push mov test callq xlat rex.WB mov and mov adc sub xor lret adc (bad) mov jns stos retq leaveq shrb rex.XB rex.WB mov xchg callq sarl andl (bad) pop mov pop jp xchg xchg jmpq sub pop or add mov out stos shll xlat mov stos jbe jb rex.X repz addr32 mov mull xor cmp rex.R lret push push lret (bad) and mov cli fcomps fisttpll xchg fidiv test jl mov lret in rex.WB mov (bad) and (bad) rex.RXB fs or lret rex.X jrcxz (bad) (bad) out movabs push (bad) pop (bad) mov (bad) (bad) mov rex.WXB sarl cltd out (bad) mov rex.W pushfq xchg sub rex.WRX fs out xchg push (bad) push sub pushfq mov cs xor pushfq cmp testl jp mov (bad) mov rex.WXB repz addr32 cmp mov cmp sti out rex.WX int add mov (bad) addr32 xchg fstps mov stos rex.WB out lret fcmovu lret movabs (bad) fs cltd cs jb (bad) (bad) (bad) stos or sub sbb xor (bad) fisttp xchg cltd mov enterq fxch stc sub jp add loop rex.WXB in fwait rex.B sbb andl add mov (bad) fcoms pop pop push ds pop jbe sbb adc movabs rex.WR fwait mov cld (bad) shlb fsubl jle in xchg (bad) pop rex.X (bad) jns cmpsb pop ja sbb or rex.RB xchg ja movsl or rex.RX rex.WRB repz pop pop nop or jne rclb sub addr32 mov add xor jnp and loope out (bad) rex.W (bad) movabs movabs mov (bad) iret cmpb repz sub lods shl loop push sti jno cmp xlat lret movabs mov mov jmpq rex.RX mov push rex.RB adc jns mov mov push rex mov xor add (bad) (bad) jo sbb lock insb cmp mov mov cmp or mov mov lods jne fild shrl jo outsb lret rclb mov std adc (bad) cmpl xchg and xchg loope adc rex.WXB (bad) sbb jbe or push out (bad) mov pop xchg out jns mov scas insb outsl notl cmpl popfq jg fucomip pushq out mov sub repz data16 rex.XB mov mov mov fwait xor (bad) flds xor sbb scas pop cltd adc pop shl callq jne repz jp rex.R mov vmptrld out sbb movsl xchg xchg rex.WXB or and xchg (bad) and rex.XB mov cld mov pop (bad) (bad) push add add addr32 shll pop rex.W retq sub rex.WR rex.WX push and jg pushfq sbb pop add (bad) movl adc sub jne imul sbb loopne rorb test mov rex.XB iret jl rex.RXB or and mov cwtl or xchg xchg push out rex.X (bad) xchg repz fisubr movslq push mov cwtl mov push sbb jge mov mov por sbb icebp or or (bad) pop cld xlat (bad) cs (bad) adcl (bad) movsl pop jno fdiv mov rclb (bad) jg mov flds jbe mov callq and in cmp and sbb adc js rex.WRB sbb fmull test insl inc imul iret icebp xchg rcrb mov and rex.WB xchg cmp rex.WXB pop rex.R movabs mov xor pop mov imul jne rex.WR mov add mov retq mov shll pop cltd ja mov sbb out int3 adc and fwait rex.WRB lods cltd retq pop cmpl pop (bad) cmpsl imul pop jo rex.RX xor (bad) retq movabs mov xchg pop test or mov jle out addr32 (bad) jne (bad) fs mov cmp icebp xlat shlb out lock mov mov clc scas cmc cli pop (bad) (bad) jo lret rex.X and pop sbb lahf lret jg ficompl sarb fdivrl fstps stos mov rex.B incb push cld rex.B movsb mov outsl cwtl outsl xor sbb imul mov push xor xor pop clc sti lret pop (bad) adc xlat leaveq sub mov and addr32 cs sbb jl rex.WRX mov mov (bad) lea push jl mov xchg (bad) ficomp mov lods shr pushq (bad) in repz mov (bad) (bad) cmp mov (bad) testb mov fnstenv push std rex.RXB pop jp (bad) jb mulb rex.RXB rex.RXB js movabs xlat xchg jge (bad) sbb shll add or add imul mov (bad) out repz leaveq jbe push xchg or rex.WRB jp sbb cmp loop (bad) (bad) (bad) sti pop pop clc (bad) cmp pushq scas ss pop loopne jl retq xlat mov addr32 and rex.WB cmpl rex.R xchg sarb rex.XB mov adc (bad) mov rex.W or je hlt fistpll lea (bad) (bad) movabs rex.RB es inc pushq scas jo pushq lods (bad) (bad) sbb rex.WRX xchg lret lret imul lret rex.WRX in rex.WX pushq mov (bad) sbb push callq movslq cs (bad) rex.B rex.WXB xchg add xchg and xchg sbb (bad) sbb mov fstpt sbb rex.WR (bad) xor mov fsubrl push mov jae rex.RX xor lods sub pop (bad) stc loopne xchg ficom fstpl stos scas fstpl or or fldl sti sbb or pop rex.WRXB fwait (bad) outsb shll add add adc insb sti pop (bad) (bad) (bad) mov (bad) je push lret xchg cli addr32 sbb sbb loope rex.RX (bad) mov cmpsl sub callq sahf icebp rex.RX shl shll mov pop std cmpsl push (bad) rex.RB sbb pop outsl mov (bad) fistpll rex.RB js pop popfq push mov (bad) icebp movslq sarl rex push (bad) xchg or enterq (bad) jo rex.RX sbb addr32 and (bad) fidivr jae pop push xchg movabs xor sbb adc movabs repnz lods scas rex.WXB imul jo (bad) mov (bad) pop jp ss out xchg push rex.WRB sahf push adc rcl sti mov lock mov cmpl jbe push rex.WRXB or outsl outsb push rex.RX pop andl sbb mov jno lret (bad) movabs ja mov cmp test mov pop xchg or mov pop cltd (bad) fcoml movabs and test (bad) mov pop (bad) addr32 mov (bad) sbb ja fimull rcl mov ds clc adc mov cmc movabs js or jmpq pop jne sahf lea setg rex.W out rclb sahf push stos adc lret sbb (bad) in lea rex.R (bad) add rex.WXB loope repnz out ficoml pop mov (bad) lods pop out addr32 (bad) jns (bad) (bad) fcoms clc push cld ja (bad) cltd mov mov xor setne pop xchg adc imul pop divl xlat mov and xchg (bad) lock (bad) repz xchg fcoms sbb cmpsb ffree movabs cmp js rex.RX sbb add mov mov mov push leaveq xchg lods push addr32 cld push xlat sub mov mov sub jns js,pt push stc mov push rex.RXB add imul (bad) add outsb jno cmp rol cmpsb insl leaveq rex.XB lret pushq mov sbb out data16 fsincos ror fcoms pop push stc push cltd add (bad) mov adc out outsb fldl rex.XB mov data16 (bad) rex.B movabs lahf divl fnstenv test pop sbb fdivs jbe shll fisubl pop adc sbb (bad) sti incl jp ja jrcxz ja (bad) lock (bad) out or pop pop rex.RXB fwait or or je fcmovnbe cltd mov std fistl xchg jge pop fmul sarl push xor xchg pop imul rex.RX ds sbb out xlat mov lock retq pop outsl rex.WR adc mov (bad) fldl jmpq push add rex.X cmp mov xor cmpsb adc gs jo int3 cmpsb xor (bad) cmp jrcxz (bad) (bad) sbb ss mov ficompl repz cmp lret push push xchg sub lock rex.XB rex.RX mov rex.WR leaveq repz ss (bad) add jge (bad) xchg rorl jns in push (bad) clc (bad) scas int rex.WX mov jno adc cltd mov push sbb mov (bad) rex.W cltd sub and (bad) nop xchg push scas jno (bad) movabs jg js lret xlat (bad) lea (bad) rex.RXB adc (bad) xor push mov xchg mov rcrl xchg or out (bad) sti rcll out rex out cmp mov pop (bad) rex.WR clc ror rex.WRXB out rex.WRX movslq lret mov repnz xlat sub xchg pushfq cmpsl or push addr32 nop mov fldt ds insl insl jns imul cmp or sbb pop imul jrcxz (bad) push xlat iret xor add rex.WXB adc jno (bad) test xor sbb pop adc xor hlt rex.W fs test cmp addr32 jne movabs adc rex.WRB or iret fsts lahf rex.X rcll callq rex.WB jns rex.WRXB jo (bad) jmpq xchg out pushq outsb enterq (bad) stos (bad) lods rex.X add xchg pop sbb pop (bad) rex.X pop add cmpsl jo fdivr fidivl jnp (bad) (bad) and movabs cmp retq mov mov ffree sti (bad) popfq ficom mov adc cmp adc (bad) outsl and sahf nop push jg xchg (bad) cmp data16 rex.WR pop test (bad) jbe (bad) pop push shll jmpq es mov lods (bad) push add push cmp cmp push stos outsb sbb addr32 imul or cmpsl jg push xor rex jmp cmp rex.RX movsl and xchg loopne adc cmpsl add push rex.WXB rex.R jmpq out mov xchg cwtl (bad) sbb stc leaveq rex.RXB sbb stos cld (bad) fidiv ss xlat rex.WB addr32 add mov (bad) cmp adc cltd ss jb lret (bad) lock rex.WXB out (bad) pop push add sbb adc fdivr adc pushfq mov test out cmpsb rex out (bad) push lret push jbe outsl callq scas rex.WR jns add jg mov out push int out xchg in cmp sbb fidivl mov (bad) xor rex.WX je pop pop sbb xchg mov rex.WXB rex.WR sub sbb xchg fcmovnu in (bad) pop vpminub xlat fwait movabs fwait cmp cmp jle addr32 or (bad) fstps (bad) jbe cmp mov jmpq rex.R fsubrl push sti loopne pop mov pop ss adc mul (bad) movabs and rex.W fist cld sbb stc ds sbb js mov iret (bad) sbb lahf cmp (bad) rex.XB (bad) (bad) (bad) insb (bad) repnz xchg xchg fimull push sbb sbb clc xchg cmp movsl imul sbb movabs cld (bad) iret rex.WRXB rex.WB (bad) cmp insb rex.XB in xchg cltd outsb stos (bad) (bad) xchg add (bad) xchg idiv (bad) pop mov (bad) rex.X iret sar jg jg or std mov rex.R movabs cwtl mov int3 sbb mov incb rex.WRXB rex.WRX push movabs repz rex bnd (bad) rorl movabs movsl out (bad) (bad) jne test mov (bad) (bad) sahf imul (bad) sbb add rex.RX (bad) sar iret push adc clc jle push or jne xchg cs jne retq jns and jp sbb movabs push rex.WRX enterq add sbb out stc rex.WX addr32 test mov rorl xorl (bad) and or mov rcrb xor xchg (bad) (bad) (bad) fisubl sbb test out jb out (bad) mov scas pushfq rex.WRB rcrb jg adc je push addr32 (bad) rex.WRB rex.W jmpq ja,pn pop adc xchg retq xchg xor jae pop and addr32 (bad) je xchg (bad) mov sub add fbstp sbb cld shlb rex.W imul (bad) xor (bad) adc addr32 mov sbb movabs lods notb mov out or rex.WRXB or mov xor push push (bad) xchg add lret cmpsb lods mov pop (bad) (bad) xchg rex.WRXB jbe pop sbb lret mov (bad) rcl fidivrl test pop mov (bad) movabs xchg rex.RX (bad) imul (bad) ss popq and stos outsl or icebp out jbe adc imul push cmp add xor fistpl sti pushq (bad) xlat push mov mov jmp (bad) rcrl (bad) mov sbb fidivrl int3 xor test push mov cmp jns pop sti insl rex.WR rex.WR sti iret data16 int3 (bad) (bad) (bad) fnstenv (bad) xchg xor jp sahf jae push std mov pushq divb pushq or scas rex.W mov jmp mov outsb (bad) fmul xor jae rclb pop mov fchs jae imul movabs jae (bad) cld cmp (bad) repz mov mov adc or jbe jmpq scas mov in sahf lods pushq push (bad) cmp push jge js stc (bad) xor imul add enterq or mov fnop movslq jae (bad) in fild mov out cmp jle (bad) or in insl rex.WX in mov enterq jno xor rex.RXB (bad) jg ja rex.R insl sbb mov adc sub sub or lods (bad) addr32 mov adc adc sbb sub out (bad) fsubs (bad) pop rex.WB lgs cmpsb jbe scas add fs lret loopne movslq adc xor cmp callq mov rex.WXB roll fwait movabs mov in stc cltd rex.WX movabs jnp sub jle lods notl loope add jbe xor (bad) (bad) movslq popq xlat (bad) enterq and jbe jle rex.W addr32 in xor popfq movabs adc test es (bad) rex.WR xor rex.W ficom rex.RXB lock pop fs push fst (bad) (bad) iret jmp cmp mov pop and xchg mov (bad) sub sub out loope pop pop fbld sbb int3 (bad) vsqrtsd cmp in shlb mov jb lret out or xor imul jle jrcxz (bad) push addr32 or jge jo (bad) mov (bad) rex.XB xchg add rex.WR rex.WR rex.WXB pushq jb icebp xlat jle (bad) fcoms out xor xor (bad) mov scas jno fwait enterq mov jnp rex.RB add (bad) movabs pushq push addr32 sub cltd cli lret divb cs (bad) pushq push jb pop push mov pop sub (bad) ja mov (bad) rex.WRXB rex.WRX movabs jl jo clc jne retq ficoml rorl rex.RX (bad) stc (bad) adc jle mov (bad) xchg mov push iret and push pop (bad) rex.W add jp sbb and mov rex.WB rex.X cmpsb pop lods jbe (bad) fstpl fxch xchg mov cmp sbb and jbe pop outsb pop rex.RB imul ss imul (bad) xchg xchg rex.RX push jl (bad) insl rex.X scas push and notl or in sbb mov jo mov ja loop fildl adc (bad) outsl sbbl lret rex.WRB int adc (bad) cmp mov push imul (bad) cmp pop adcl fdivrs in js adc (bad) (bad) popfq rex.XB negb jnp push mov cli mov push push jmp rex.WRB adc test rex.WXB ss (bad) rex.WR cli and out sub loopne cmp pop lods or adc rex.W out movslq fisubl rex.X int fistpl movabs push pushfq rex.RB xlat jo cmp out mov test insb fs (bad) cs and (bad) (bad) sbb (bad) shl mov pop push adc js fs push jle jns xchg rcrl adc (bad) ja int3 pop push jle iret (bad) and jrcxz loope xchg callq addr32 lea cltd cld adc xor (bad) (bad) iretq cmp add scas sbb cmp (bad) sub loop cmp push adc in movsb pmullw cmpsb pop sar (bad) mov shrb mov adc mov insl js mov (bad) add pop jg mov jo (bad) and ficoml sbb jl pushq push xlat xchg adc or out mov or mov pop xor mov mov cli (bad) out pop cs xchg and rex.RX mov cltd fucomip in test pop test imul invd mov mov mov ja jno cli fsubrl clc add in (bad) cmp fmul mov in (bad) sarb xchg ja neg (bad) or roll and jbe xor mov cltd and faddl cmpsl jmp pushq stos rex.B mov std (bad) (bad) (bad) es (bad) lret (bad) sbb popfq add jl std (bad) sub int out imul test rex.RB rex.WR es rex.WB mov stos int sbb adc cmp leaveq lret (bad) xor fldcw movsb (bad) cmp mov shlb and sub cmc cmp cmpsb adc ds sub mov fstl push (bad) movabs lea (bad) xor fs outsb rex.WB sub (bad) and dec ds xor leaveq (bad) xor stos rex rex.WX fdivs or cmova rex.WB out rex.WX pushq test pop cmp push je xchg clc mov adc pop fidivl cltd test xlat rolb mov sbb fwait push xchg addr32 movabs pop push mov jns jne or es imul adc addr32 out adc mov and (bad) push (bad) insb rex.WXB push xchg jle mov mov xlat jp and (bad) jns mov ja mov push pop fdivs rex.RB rex.RX rex.WRXB xor rex.RXB sbb movabs (bad) rex.WX addr32 clc rex.WXB mov jmp or mov pop outsl (bad) divb mov stos out xor push lahf insl fcomps jnp pop add jae (bad) movabs jmp xlat iret scas movsl adc mov xchg cmpsl xor sbb sbbl addr32 mov btc enterq fcomps and jl mov mov (bad) jg nop push jns pop (bad) mov (bad) rex.RXB lahf test adc fnop fcompl orb clc (bad) out sarl push ds cmp add (bad) rex.WB repz (bad) pop xchg cs (bad) stc iret iret rex.WB xor xor lea rex.WXB scas push lret outsb loope xchg movsl rex.WX rex.W lahf (bad) (bad) mov push std rolb (bad) outsl and jp sub (bad) cmp jle lea shlb cmp in xor ja jbe or sub push adc (bad) rex.XB movabs cmpsb enterq sub jg ffreep push fisttp rex.WRB jmpq adc cmc xchg sbbl lahf push fdecstp fwait js sbb mov mov (bad) sahf cmp rex.WRXB cmp cmp iret fldcw adc (bad) push (bad) jbe es (bad) lret mov mov xchg xor (bad) jo mov pushq adc mov (bad) or (bad) and mov or adc mov xchg xor rex.RXB ss rex.WX (bad) jbe lea rex.WB and (bad) mov ja imul movslq xor rcll out mov movabs (bad) shll fwait cmpsb scas sbb fstl pop or lods addr32 (bad) add fnstenv movsl sbb gs cmpb mov cmp andl cltd (bad) push subb subl mov ror adc scas xor push fimul rex.RX push mov rex.WRX (bad) ss imul test cmp pushq out adc sub pop sbb and mov xchg (bad) testl (bad) sub fwait xlat addr32 stc add rex.RX xor rcl lea test ja (bad) xchg add (bad) cltd mov rex.WRXB addl mov stos adc rex.X movabs test movabs rex.RB jnp cmp push or sbb push xchg sbb (bad) pop movabs movabs jbe add rex.WRXB xor push (bad) xchg (bad) xor jbe addr32 pushq (bad) and pushq rclb xlat pushq (bad) (bad) jrcxz sahf jnp cwtl adc (bad) push push pop xorb add out bnd rex.XB es rex.X mov sub cmp retq xor rex.X jae rex.WB rex.WXB mov leaveq mov mov jmp sti jnp (bad) pop (bad) roll add jp retq add rex.RX out xchg movsl mov fucomi cli movsl lods hlt xchg fcomi sub pushq (bad) fistpl mov cmpsl rex.WR rcll push pop (bad) fwait add lahf (bad) rcr (bad) xor sbb fnsetpm(287 rex.WXB push rex.RXB push mov sbb (bad) (bad) push mov cmp (bad) pushfq leaveq mov fldl mov jnp enterq movabs mov fisttpl std sub rex.RXB mov xchg adc xchg cmp in pop adc movabs loop jl std mov (bad) sub faddp (bad) mov rex.WXB rex.R outsl add mov in lods bswap movsb mov pushfq xchg cmp push cmpsb (bad) pop testb outsl imul xor rex.WX fs push push (bad) ja imul mov mov insb sbb out fnclex lret cmpsl leaveq (bad) cmp int3 pop xchg (bad) jg (bad) movslq adc (bad) data16 fs sub (bad) ror enterq mov mov (bad) retq (bad) out add (bad) iret (bad) pop (bad) cli or xchg sub adc rex.B (bad) movsl pop and add cmp cld sub (bad) int3 hlt mov pop out cltd jle (bad) xchg imul in pop (bad) cltd jne mov (bad) divb sahf (bad) push rex.RX rex.WX rex adc mov cmpsb loopne (bad) mov xor sub push sub sbb jnp test jns hlt rex loopne and and sbbq (bad) int3 sbb (bad) jp pop movabs rex.WRXB jrcxz adc (bad) mov loope fs (bad) icebp cld xchg xchg rex.XB (bad) hlt fisttpl xchg rex.W and pop cltd mov xor rex.WRXB cmp fldt rex.RB repz xor incb rex.X and fildl pop loop popfq cmp movslq (bad) xchg pop (bad) frstor test mov and int fisttpl sbb xlat test pand rex.RXB sbb and flds jrcxz cmp adc adc (bad) sahf rex.WR xor (bad) retq mov mov (bad) cmp xor jns and mov sbb mov mov fdiv stos (bad) movabs fwait mov cld pop in jnp stos callq sub cmp fistl push pop fs rex.WX jle rex.XB shrl jnp (bad) sbb adc iret jnp cmp mov and xor lock pop (bad) jge (bad) outsl push adc mov (bad) (bad) mov std jo and (bad) mov (bad) cltd (bad) xor rex.WX xchg movslq and (bad) push (bad) fistl push rcll push rcr push rclb rex.WRXB rex.WRX rex.WRB rex.WR rex.WXB fisttpl movq (bad) rex.R rex.XB fildl rex cmpl mov cmp mov mov mov xor xor fldt sub sub test cmpsl (bad) cmpsb movsl and and movabs pushfq sbb cmp movsb movabs fucomip ror push (bad) iret sbb xchg rolb (bad) mov nop push popq enterq mov retq or sub movabs iret cmpsl jle cmp movb adc movabs shll fwait mov lahf (bad) (bad) sub mov pop (bad) (bad) mov ds and cmp retq rex rex.W and out lods mov sti in xlat in push or (bad) rex.RXB mov rex.RB cmp cwtl out mov (bad) or clc (bad) test retq sbb sub mov rex.RXB sbb retq xchg (bad) test movslq enterq adc (bad) pushq fnstsw cwtl hlt (bad) test leaveq and out jge cmc rex.WRB sbb mov cmp rex.RXB mov xchg sub adc xor jae rex.WRB mov pop xchg popq pop leaveq flds sub (bad) mov mov adc icebp in add pop test (bad) mov mov add rcll or rex.RX mov leaveq repnz (bad) adc mov mov rex add or cs cltd movabs xor mov mov mov lahf mov (bad) xlat pop in rex.WXB rex.WX xchg rex.XB pop (bad) sub xor rex.WRX addr32 mov cmc nop mov int3 mov rex.WR pop cmpsl sbb notl shlb mov cmp cs xchg rex.B xchg test repnz out push stos push mov data16 fdivl mov sbb mov adc xor xor fbld stc (bad) (bad) outsb lret mov adc jae retq mov mov and stos callq out movabs jae cmpsb rex.B (bad) mov (bad) xor rex.X mov rex.XB cmp cmp xchg mov push pop (bad) (bad) rex movabs cmp cmpl mov movabs fldenv int3 rex.RXB repnz push movslq f2xm1 out cs (bad) cmp sbb and in movabs fstps retq or mov rex.WRB ja fist xchg ja fist xchg popfq adc pop fdivr lret popfq fcmovb sbb mov adc cltd rex.R (bad) pop push (bad) mov xchg (bad) mov xor pop fidivl out ffree fcmovu sbb fimull pop xchg cmp adc cmp or jmpq retq pushq or and nop push jae sbb (bad) sbb (bad) fistl adc adc xchg adc pand or or mov mov mov xchg fildl add add (bad) add (bad) fstpt jge jl jnp fstpt jns js ja (bad) jne je jae (bad) jno jo outsl out fldt insl in insb in imul pushq imul (bad) gs in jrcxz (bad) (bad) loope loopne fnop pop ficomp pushfq sub cmp (bad) rex.WXB out fildl or (bad) cmpsb lret mov test mov rol test xor (bad) pop (bad) iret lret rex.R mov xlat cmp sub test mov movabs xor and (bad) mov movsl mov shll movabs retq mov and mov movsb push cmpsl jrcxz lret stos (bad) lods xlat mov lret mov sbb mov mov mov sub test je (bad) xchg fidivl (bad) clc fidivl sub rex.WXB stos mov xchg (bad) xor xor and cmpsl mov xlat (bad) leaveq cmp sahf cmp out movabs in std fcmove xor mov cmpsb push xorl mov sub mov add and iret or rex.WXB outsl add sub (bad) xor mov retq mov cmp push lahf movsl cmpsb div rex.W movabs lret adc mov cmp mov movabs js movabs loopne addb fnstenv sbbb xchg or mov pop mov mov (bad) sub movabs jae pushq (bad) fnstenv ficomp std push mov mov rex.WXB jmpq stos xor scas popfq rex.R or (bad) pop rex.RXB repz addl xor mov retq or (bad) or xor ss mov rex.WXB rex.WB idivb movsb xchg out retq rex.B cs lahf (bad) jae lret callq cmp sub jns and cmpsl sub in (bad) sti mov mov fldt test xchg int adc xor (bad) mov stos mov iret rex.RXB xchg shrl (bad) stos rex.RX cmp push outsb xor xor cmp ss movabs ds imul mov (bad) mov mov ss ffreep adc (bad) (bad) scas push mov jmp scas ds fwait imul (bad) jae cmpsb lret (bad) or stos pop addr32 and adc push scas pop repz xchg test pushq cmp enterq (bad) mov rex.WRXB rex.R rex.RB rex.RX lea fadd push mov vrcpss test lret push cmp (bad) cwtl sub (bad) cmp jl sub scas int mov mov jno and insb push (bad) mov adc fistl xchg fildll test mov psrlq push cmp int3 pop lea shrb or data16 jbe test rex.WXB xor loopne mov xchg mov iret push jae or rex.RXB adc xchg movabs rex.WX (bad) imul pop mov ja mov xchg mov sub xlat retq int xchg cmp rex.WX adc ja imul movabs xchg cmp movslq gs imul outsl xchg cmp jae jne ja jns jnp jge jg cmp ja imul int xchg cmp ja in jns fildll xchg xchg cmp je rex.XB jae andl xchg fmulp scas xchg cmp ja pushq loopne ja mov (bad) insl rex.WX outsl (bad) jns movabs push movsb push and adc jl repz fcomps xor sbb shll fcmovb fnstcw ficompl rex.B imul scas mov retq lods xor push mov pop loop movabs push fild fwait (bad) cwtl (bad) sbb (bad) cmc roll jns (bad) rex.WR fs xchg sub xor repnz rex.WRX mov hlt movsl fiaddl fdivrs test xchg cmpsl adc or jle mov rex.WRX cs js (bad) lods (bad) rex.WRXB rex mov xor scas and in sbb mov push jmpq es mov outsb xchg and push (bad) (bad) movabs and fnsave xlat sub in sarb ror mov in xor sub movabs sbb pushq xchg gs je out leaveq jge or movsb pop mov jg adc fwait pop sbb sbb mov push mov cmp pop shrl movabs retq fildl mov xchg (bad) sbb stc jae rex.RXB iret mov movabs adc push (bad) add xor (bad) pop fisubr add jnp jmp pop fcompl rex.WX imul sbb fldt push stos add jmpq mov test outsb rex.WXB (bad) movabs stos adc adc fcmovnbe mov mov fnstcw mov rex.WXB push pop (bad) sbb mov (bad) cmp mov mov mov in (bad) or leaveq xor xlat or xor fnstenv out iret xchg rcrb lret mov and mov jnp xchg rex.WX enterq pushq xor in sub cltd (bad) stos sarl lahf xor (bad) scas and cli loop adc (bad) out (bad) retq stos xchg movabs retq and rex.X xchg rex.WR mov xor stos mov mov movabs xchg mov push movabs (bad) (bad) (bad) test push js sub shll rex.XB push test stos out loope sub mov mov and xchg sarl mov movabs xchg xor jo fstp (bad) mov rex.WRX int loopne fwait pushq push int (bad) popfq jnp mov mov lock pop retq pop and adc fisttpl retq repnz icebp push scas mov lods imul hlt fmuls loop sub cmp or mov add iret sub pushfq jne (bad) rex.WRX push jle pop movabs or pop and jne fldt mov iret fcomi xchg or mov jo fwait cmp push stos mov lea mov test and movl fldenv adc (bad) mov (bad) push lret xor stos mov (bad) test (bad) xchg and cltd rex.X sub mov mov scas leaveq adc movslq xchg and movslq xlat lahf xor pop (bad) retq imul (bad) xlat jo,pt rex.WX xlat movabs int fisttpl pushfq rcrl jge mov retq cltd pop test and mov imul jbe xchg adc (bad) and idiv mov pushq int3 rex.XB js movabs jae (bad) mov cmp lret mov (bad) sub leaveq and rcll popfq movsb or pop add cmp mov mov jbe lock fistl outsl movl movslq adc fwait cmp cmp fistl mov pop fcomi (bad) add scas (bad) (bad) push jge clc cmpsl mov rcll mov movabs mov sub xor rex.XB rex es cld movabs and and (bad) retq pop xchg push xor cmp sub fisttpl std (bad) imul (bad) mull push or es es ss scas rex.R sub fcomp callq cmc movabs outsb (bad) mov xchg vxorps mov retq (bad) imul jg adc shll iret mov mov adc or mov lahf int pop adc mov xchg movabs mov movslq iret fwait or retq cmpsl (bad) pop popfq mov xchg jnp (bad) scas movnti lret scas mov fisttp sbbl xchg mov or rex.WRXB iretw mov adc shll fldl jnp and sbb mov jg jne mov lahf out jae jg (bad) jae rex.WRXB add lret out pop pop rex.WXB cmp out outsl (bad) mov mov mov jg scas mov pop mov xlat iret gs movslq cmp movabs push retq lret cmpsl adc rex.XB shl movabs lea cmpsl mov stos xor cmc addr32 pop imul jmp mov cli xlat jb movabs rex.WRXB rex.X xlat xchg push movslq push jae push jnp movabs pushq mov sarl push jae jnp mov xlat rex.WR movabs mov jnp rex.RXB xchg icebp rcl rex.B jnp add pop fwait shrb add push push movabs (bad) xlat rcrl mov sarl (bad) lret pop rex.WRXB rex.WR jnp rorl movabs stos fdivs xlat jns cmp xchg jg stc movslq sub (bad) mov test lret lret callq loope lret retq sarb idiv push (bad) orb rorl cmp rcll test retq shrl or xchg rorl rex.WR (bad) fstpt (bad) (bad) (bad) movslq imul jae jnp mov lret movsb scas xor xchg (bad) mov test movabs rex.XB jge pop retq (bad) pop insl mov add rex.WXB enterq (bad) imul jno or xor rex.RX cmp xor imul jae movabs movabs and push add pushq iret cmc test (bad) stos pop retq movabs mov movslq imul test pop fsts mov mov xchg test rex.RXB fcoms rex.WRXB xchg (bad) jge push int cmc test jge movabs jnp imulb int rex.RX rex.WRXB lret movabs pop int movslq imul pop lret or jge xchg push rcll data16 cmp xor adc lret xlat retq jg push sarl push rcl leaveq push (bad) rex.WXB lret (bad) (bad) xchg push pop mov fldcw (bad) imul jae jnp mov movabs rex.X (bad) (bad) jae jnp mov add (bad) (bad) jge mov xchg fmul retq rcll vmovhpd nop shlb fcmove xchg xchg rex sarl popfq iret rex.WRXB retq fldcw rex.WRXB rex.WRB rex.W cmp addl jnp fldenv jbe sbb rcr push push (bad) (bad) (bad) adc rex.XB push leaveq jnp xchg (bad) adc (bad) popfq rex jne pop movabs push xor push movabs cmp push push xlat mov movslq jl lods scas mov xchg sbb xchg (bad) rex.R and in test xchg movabs xlat push (bad) (bad) rex.WXB mov (bad) test xchg mov retq cmp mov (bad) sbb mov movsl jmp mov rcll adc lret pushq leaveq fnsave cmp cmp mov xlat (bad) popfq (bad) movabs (bad) (bad) mov mov mov push lret movsl (bad) rcl lret cli xchg jle mov mov push shrl sarl in xchg rex.RXB mov or (bad) rex.WRXB xchg (bad) mov (bad) push sub cltd test or stos (bad) vcmpsd jl fmuls pop (bad) (bad) loop jrcxz mov cmpsl (bad) (bad) mov xlat fidivl pop mov mov loope push test rex.WB jmp retq (bad) stos (bad) cltd or (bad) (bad) push js movl (bad) (bad) mov ror sbb rex.RB test push add rex.WXB cmp test mov movabs xchg mov (bad) rcrl mov adc (bad) mov xchg imul loopne rex.X fs pop xlat stos fldenv jnp push test cmp stc outsl jbe addr32 cmp push jns jno pop mov and sub jne jne mov rcll xlat mov pop rex.WRXB movabs ror mov lods (bad) pop xlat lahf (bad) repz iret (bad) mov mov jns movabs (bad) je cltd xor rex.XB pop sub iret add (bad) iret or jg mov push (bad) cmpsl mov iret (bad) mov adc push mov addr32 (bad) (bad) retq lods sbb (bad) test xor xlat (bad) lods sbb add imul fidivl movabs leaveq scas xlat adcl mov mov cmp cmp xchg pop int in mov psubusw adc mov mov outsl loopne xchg int3 shrl (bad) sub (bad) mov (bad) mov test add leaveq pop adc cmp push jbe pop sbb imul fiaddl shrl xchg pop rex roll lret rex.WRB lret push int jns rorl fs je movabs iret sub fisttpl (bad) jbe mov out xchg rcrl (bad) pop out rcrl cwtl or lahf cmc retq sarl and xchg jnp xchg (bad) test movabs (bad) rex.XB mov sub rol int jns rex.RB mov cmpsl (bad) mov fstpt (bad) adc mov cltd mov fwait lret mov mov movabs retq movabs jge or test movabs int3 push jge jmp scas movabs (bad) sub cmp jns sti scas movabs lods mov vdivss cltd push rex.X xchg mov iret lret imul rex.WRB retq cmp in fstps (bad) rex.RXB movslq jno adc (bad) push rclb pop sbb fsubs rorb decb (bad) push int lahf outsb int (bad) iret insl jnp movabs (bad) (bad) mov mov rex.RX xchg add ficompl sbb gs jns rcr (bad) stos scas xlat fwait stos outsb xlat sub pop jns movabs imul (bad) mov mov cltd push cmp mov jp rex.WX fdivrp jg xchg shl rex.R lea xlat sbb vcvtpd2ps movabs (bad) ss stos xor fwait rex.WXB xor hlt rex.WRXB jbe xchg movsl jp flds pop lahf (bad) push xor mov pop sbb push and je rex.WB xlat mov stos mov gs scas int3 shll (bad) (bad) mov movabs imul ljmp pop lret mov mov fs pop (bad) repnz cs in xlat (bad) popfq push shrl and sub (bad) (bad) lret mov ja cmp iret jae (bad) push jbe sub cmp test mov xchg test xchg rex fwait shrb sbbl imul lret (bad) push mov gs xlat rcl mov (bad) mov pmullw (bad) bswap movabs push lea shl test cs and lret retq xor push insl mov mov pop and callq not and insl adc rorl movabs rorl int test xchg (bad) push mov (bad) (bad) jae jnp movabs jg push je mov fcmovbe mov stos jle test rcrl sarb xchg retq (bad) (bad) rex.WX (bad) lret (bad) (bad) shrb push rex.WB cmpsl lret pop lea (bad) ja movsl (bad) lret stos jmp outsl fdivl ja shrl lret (bad) movsl test (bad) (bad) mov push movabs xchg (bad) mov mov xlat retq mov and and pop (bad) (bad) retq pushq xor (bad) push lea pop (bad) sub rex.RX xchg movabs out cmp movslq or fnstcw pop test push jno adc fisttp iret mov xlat xor (bad) imul mov test pop mov ficoml shll test mov (bad) xchg mov pop movslq imul shl loop scas fwait adc mov adc loop xchg jae lods stc push (bad) rcll (bad) (bad) xor pop test lea jno cltd mov xchg xchg mov xchg push movslq pushq add mov pop cmp cmp (bad) fwait ja xlat and rex.RX movabs fwait movabs lods ja (bad) js jns pop mov (bad) lahf pop mov roll leaveq retq push stos movsb data16 int cmp scas cmpsl mov mov movslq enterq mov movabs iret scas lea (bad) jae sub (bad) sti imul out fldenv sti xor mov xchg or and (bad) pop push lea and rex.RX (bad) rcrl (bad) lret cmp negl jae movb and adc pop cmp mov mov (bad) mov jne rex sti xchg adc (bad) lret mov xchg repz lret lock mov scas xor rex.WR rex.WXB je mov rcll test movabs pop js rex.RX mov (bad) test push (bad) outsl incl jae lahf pop push mov mov rex.RX (bad) mov mov repz push cmp sti push lods rex.RB iret int stos or test xchg lods jmpq mov fxch rcl leaveq push mov shll retq jns test mov lea iret or fwait lahf imul xor fmuls push (bad) pop fldenv sahf adc out in retq rex.WRX lret sbb movslq stos (bad) movabs pop enterq (bad) cmc push scas lret mov xlat sbb rcl mov mov movabs or mov xchg mov (bad) mov addr32 (bad) push imul (bad) adc mov fsubrs xchg (bad) stos cs (bad) lea cmovg fnstcw rorl int3 adc sarl xlat push leaveq movabs mov mov lahf push jae add xchg jns adc add push jge mov stc rclb fmuls rol iret or jns sbb jge (bad) mov and fisubl xor xlat jnp iret movslq pop add rex.WRXB pop imul adc lea (bad) mov mov mov adc mov pop cmpsl pop stos rex.RXB cltd lods mov sub (bad) jno mov notl int lahf test pop mov ja pop mov stos sarl imul mov fwait retq leaveq jno int int3 (bad) xchg (bad) lret (bad) outsl iret or mov adc jmpq mov mov es rex.R adcl or mov mov (bad) (bad) cmp mov repnz (bad) repz fcmovnb rex.X cmp xchg stos imul fmuls (bad) mov jmpq mov fidivrl (bad) jrcxz adc lea leaveq mov and push mov rex.WR jns pop out mov imul imul or pop mov jns (bad) cmovp (bad) mov rcl leaveq xlat sbb and shlb imul jae (bad) loope pop (bad) or orl adc movabs (bad) rex.WX lret xlat fsts pop lock (bad) push sbb push add mov (bad) or jmpq xor ja mov jo divl mov xchg xlat shlb xchg fcom xor mov (bad) xor mov xchg jne mov add stos js mov mov mov fld fs mov push and push in lret rex.WX leaveq sarl repnz iret push and cltd (bad) sarl push push ror movslq lret sbb scas int rcll pop push rex.XB hlt (bad) enterq adc mov sub (bad) fsubrs or sub jno sbb test mov ja (bad) pop jnp cmpl adcl rex.RXB shl repz jns (bad) push (bad) not mov lods rex.RB xchg pop push lahf leaveq pop xlat rcrl mov xchg mov jb mov mov pushq adc xchg mov movabs pop (bad) jno pop in jl roll mov pop adc xchg cmp (bad) sbb pop mov mov stc mov (bad) scas int xchg adc sub retq (bad) jb pushq ffreep xor jbe xlat test sub sub retq mov lret adc cmp xchg mov ja out rex.WRB mov js cmp imul sbbl rex.WX (bad) xchg int xchg cmp ja imul xchg cmp rex.WX (bad) (bad) int xchg cmp outsl adc xor or adc ja imul xchg adc in push jns movabs rex.WX adc movabs (bad) (bad) mov rex.WX ss subl mov loopne push (bad) lret retq (bad) xlat data16 (bad) push je push (bad) rex.WX pop mov (bad) add sbb pop (bad) retq addr32 xor jb mov cld (bad) xchg lret jg pop pushfq mov pop or xor fstpt (bad) jrcxz mov and xchg add (bad) (bad) sub mov xor (bad) adc movsl jne popfq push (bad) mov fcmovnu lret (bad) jl lret pop rex.RX je jp test (bad) (bad) sub lret (bad) mov lods movabs nop pop sub mov (bad) rex.WRXB fcom pop retq cmp mov mov rex.WRB sarb cmp and (bad) callq outsb jge movabs (bad) xchg test incb mov fisttpl add jrcxz retq pop pushfq movabs hlt retq rex.RX or imul fs mov iret adc push or js mov scas fcmovnbe xchg mov pushfq and rorb mov andb sbb jnp jns jbe int3 cmovo jmpq fldt ss xchg movabs fwait cmp add mov xchg push adc ffreep (bad) rex.WRB rex.WRB mov popfq xchg (bad) xor pop (bad) fmul adcl or (bad) hlt fwait mov sbb cli sub (bad) callq scas in lret decl mov or adc xchg pop rex.X fwait popfq add mov mov sbb add loopne fldt out jb imul movsb fisttpl xor xlat xorl movsl es (bad) (bad) mov cld rorl jmpq (bad) movslq xlat idiv xchg xor outsl fcmovne icebp rex.W xor cld (bad) jrcxz scas or fwait xchg xchg rex.B fisubl jmpq movabs xchg fstpl int test fcmovnb jnp and adc push (bad) icebp pop xchg xor add and fildl mov (bad) jrcxz (bad) outsl (bad) or fdivrp xchg and sbb push popfq cs test shlb or loop out xchg sti (bad) retq and (bad) mov out xor push add lahf (bad) fwait stc cltd (bad) adc fistl loope test jle cmp retq or retq add xchg mov pop pop insb out addb jno pop fisubl idivb adc in push pop add jmpq mov or mov pop add (bad) mov jg push data16 rcll rex.W mov or (bad) mov insl retq cmc (bad) adc leaveq cmp ja jmp jrcxz int3 sub fistl imul int clc (bad) fildl xchg push jg (bad) nop jl rorb imull adc iret (bad) repnz enterq cli test cwtl out pop jnp jrcxz popfq pop (bad) rclb xchg pushfq fdiv (bad) (bad) movslq or data16 movslq out (bad) leaveq fcomi out sub jbe pop sub mov lods mov xchg leaveq fneni(8087 mov mov fstpl adc movsl test (bad) leaveq xor pop pop pop mov pop rex.WXB rex.RXB add xor out cltd movabs rex.RXB rex.WRB mov cmpb rcrl (bad) ror cmp push (bad) jnp rex.WXB seta insb mov test sbbl jne test jp pop lods push stc int lret gs scas mov mov sub cmc sbb leaveq (bad) pop fstl mov fisttpl notl xchg jl (bad) fldt pop repz rex.WR (bad) mov movabs retq lock and fistpl movabs mov lods jrcxz fistl xchg ja and shll jp push fnop pop mov fwait rcr rex test pop movabs lret (bad) cmp xchg jg imul mov pushfq jno movslq mov scas fistpl add (bad) repz out (bad) jp fnstsw movabs (bad) test add icebp adc and stos jae mov es or sahf rcr rex.X jl movabs xchg (bad) movabs jmpq bsf mov loope cld repnz (bad) sbb push and (bad) (bad) out es adc mov (bad) rcrl rex.WB outsl (bad) rex.WR in jnp lret fstps rex.WR (bad) and movabs cld int outsl iret fldt test fcmovnu addr32 jb (bad) rex.WXB rex.R fnsetpm(287 sahf test mov (bad) lret fwait js rex.WX pop leaveq and mov rex.X rex repnz sub mov cmpsl sbb and mov adc pop repnz cwtl pop (bad) (bad) adc jno fsubl cmp adc sbb jae (bad) mov xchg leaveq pop pop (bad) test in (bad) cld jrcxz sbb retq pop sbb xchg cmc (bad) cmpsb pop xor (bad) and xor out sub xor mov sahf push orb push jbe (bad) (bad) rex.W (bad) pushfq int3 (bad) or push repnz mov add fldt cmpsl xor jns retq retq (bad) pop xchg lahf pop xor rex.XB xchg and cmp mov and (bad) movslq push rex.WRX fstps jp ja js imul or rex.RXB pop leaveq cli add clc ja add cmp std div addl mov rex.X cwtl fldt test jmp adc imul jnp push sub push lret rex.WX mov rex.WRB in mov (bad) jno scas loopne jnp mov (bad) iret xor (bad) sub lret pavgb rol scas (bad) retq sbb adc outsl pop jl jle scas (bad) stos jnp jb negl cmp or pop rolb xor jne gs rclb sub cmp mov imul sbb push adc (bad) fisubl setns loop in int3 xchg subl addr32 retq adc int3 xor fwait xor insb pop lock rex.RX xchg mov sbb leaveq mov rex.WXB push and rex.WB lock nop (bad) (bad) fstpt sub mov loope cmp js ds fistpl movsb mov cmp insl pop jp out (bad) outsb dec lods je out rex.RX rex.WX add imull (bad) mov mov rex.WX sub pop fdivrs std (bad) sub data16 rex.WRXB rex.WRX jmpq (bad) (bad) ficoml mov rex.WB mov sahf mov add pop (bad) mov stc fstpt lret sbb jae pushq imul mov sbb or movsb mov sub lret jno mov jl popfq lea stos fisttpl nop mov sbb insl outsb stos rex.W andl movsb mov movabs rex.RB push mov and imul lahf rex.W jae (bad) lret mov jb imul pop scas cmp pushq mov incl jmpq cld retq stos rex.R in jle adc scas movsl fistl cs test mov sbb (bad) fstpt retq fwait xchg lods stos fcomi data16 cmp pushfq fwait (bad) repnz movsb push fsubrl test sub pop rex.R rorl cmp cmc int3 add (bad) loop imulb fwait (bad) (bad) xor add (bad) (bad) fwait cs (bad) fcompl and adc lock mov mov mov insb mov mov je (bad) fsubs adc cli add movabs movslq pop jrcxz push (bad) mov ja iret cs pop jbe fcomps push negl rex.RXB rex.WX rex.WXB sub mov sub (bad) fstpt test sbbb and fcmovne cmp jo sahf movabs mov (bad) mov jo cmp (bad) clc and rex.RX adc movabs and xor sbbb and xlat std rex.WRX or xor stos fimull pushq std and (bad) fistpl out enterq test rex.RX add cs rex fildl or adc neg rex.RB (bad) pushq push mov movsb push ja (bad) xchg adc jmp fldt in adc pop sbb mov fistl enterq (bad) or mov fndisi(8087 hlt enterq (bad) xor xor push add push sub (bad) cmpsb jne test (bad) hlt fcmovnbe mov jrcxz jmp add xlat (bad) pop jg adc lods xor iret mov fistl (bad) pop test rex movsb mov adc rex.B xchg fistpl ja mov (bad) movabs subl fsub pop (bad) fnsave sarl jl rex.WR in fcomi xchg mov jmp out roll sti retq fstpt js test mov cmpsl jle roll jae fbld rex.RXB push movslq imul hlt callq jnp sbb mov pop adc lods mov sbb (bad) sub cmp rex.WRX fwait add or add xchg (bad) mov xor adc sub (bad) pop mov pop int adc insb fildl or cwtl (bad) lock (bad) cmc nop shlb pushq (bad) rex.X in (bad) stos add push lret rcrl retq push int3 (bad) jrcxz pop rex.WRB xchg imul scas xchg jg cmpsb (bad) scas cmp int3 and mov lret pop or push mov jnp scas jmpq cwtl push sub test insl test movabs iret push fldt popfq movslq rex.WRXB imul (bad) (bad) andb rex.WR pop xchg clc pop push scas or (bad) mov mov rex.WRX fcmovne (bad) sbb or movabs repz adcl movabs out fnop mov shll in push ja and sbb pop in iret fstps fbld (bad) cmp mov decl lea fld sub mov (bad) or (bad) in xchg test (bad) or push roll insl rex.WX (bad) jns cltd lret cld xor insl adc xor fwait mov (bad) mov loopne hlt int (bad) (bad) xchg rex.WXB stc mov rex.WXB or iret sbb or pop (bad) mov sbb sti or rex.B xlat sbb retq adc test hlt mov (bad) sti jmpq (bad) jae (bad) or rex.XB outsb lods idivb jnp mov repnz shrl roll mov scas sbb cs leaveq pop xchg lock cmp push lret popfq (bad) pop (bad) pop jnp mov or enterq jrcxz cltd movslq mov jae lods imul lret fcmovu rex.RXB xlat adc lret pop push (bad) fcom push leaveq pop mov adc ja jmpq int3 xor mov scas xor ror push xor fnstcw rorl adc jbe shrl retq (bad) xor xor lret movabs retq fwait test (bad) lret adc jbe mov adc jbe xchg jmpq (bad) add cmp leaveq iret push xchg (bad) mov out insb (bad) xlat data16 ja cmpsl pop push outsl out rex.WRB jp xchg rcl (bad) rorl mov push rex.WX shr sub push ja imul and iret (bad) xchg cmp rex.WRX rex.WX scas ja imul rex.WX adc mov stos lret movabs imul ja imul jg add movabs push out rorl lret mov pop xorb cmc sub test pushfq cmp rex.R imul pop and popfq sbb movabs mov shll xchg cmp rex.WX adc insl rex.WX movslq imul rex.WX jns jnp jge jg or rex.WX mov imul adc movabs rex.WX jg push movslq cltd push fldcw movabs retq mov xlat jle sbb (bad) jnp stc addr32 (bad) mov imul mov sbb fimull js adc sahf jmpq movslq test (bad) movsl sbb stc mov pushfq mov mov (bad) rorl adc lret scas stos lret adc add jno (bad) push movhlps push mov and mov and nop rolb adc lret xor test mov or data16 movabs movsl mov test (bad) movabs or data16 mov leaveq (bad) pushq or (bad) push leaveq ds or xchg mov (bad) push cmc in cwtl shrl sub imul mov mov and cmp adc jb rex.RXB sahf rex.B mov and int sbb es sarb and mov rex.WRXB rex.XB rex.WR cmp pop test cmc fmul push cmp cmpsl retq jne adcl pop xchg (bad) push hlt cmp adc pop xlat sbb xlat test rex.WX in rolb lea iret push cld push xlat outsl fbstp jnp cmp rex.WRXB leaveq xlat rex.X mov adc mov push mov xlat mov jnp (bad) mov push rol xlat rorb int xlat xchg mov pmullw mov int pop xlat mov sub lret sbb (bad) xorps rex.WX mov rex.X xlat cltd insb iret lret retq rex.WB (bad) jne xchg push rex.WR cmpq iret sub stc movl push sub xchg movabs jp push sbbl mov addr32 lods rex.WRXB mov xlat (bad) shlq add pop fbld xlat push retq rex.B gs test xor mov xlat test push test lret mov retq xlat insl mov mov jnp fwait push cmp (bad) cltd cmp lea rolb iret iret enterq test or lret out xchg xlat (bad) (bad) (bad) imul movabs mov (bad) flds xchg sahf fcom in cmpsl jnp xlat (bad) push cmp pop shll xlat bsf stos mov mov in in lret xlat test push xchg iret xchg xlat pop cmp xlat popfq xchg movsb (bad) stos nop in xchg pop xlat xchg push mov push retq repz xlat rex.X mov mov repnz mov iret in pop pop fbstp xlat pop push addr32 (bad) mov ror xlat fstl fnstcw push push (bad) cmp pop xlat imul jge mov loope test iret xlat rex.WRXB mov (bad) cmovg push lods add (bad) (bad) jb xlat movslq lahf iret xlat (bad) movabs xor lret xlat test push retq iret add jne xlat (bad) pop mov or imul xor xlat sub push xchg iret mov movsl push test iret xlat rex.RXB iret add xlat jnp rcl iret mov clc push mov fbstp pop fldl xorl (bad) lret xlat test push imul xlat add xlat jg movsb jnp adc xor mov (bad) adc mov cmpsl (bad) iret xlat movzbl adc rol mov mov retq retq push adc popq xor test scas cmp in sub push or xlat xlat scas add xchg scas jge (bad) (bad) xlat mov xchg rep xlat rex.X fwait cs add in push xchg repz xlat rex.X push popfq lods iret (bad) xchg mov adc xchg jnp (bad) notb (bad) fbld rex.RXB xlat cmpsl or lret rex.WB ds orl pop (bad) push (bad) rex.WRXB lods pop rex.R retq sub push outsl movslq xlat jne lret push movslq enterq (bad) (bad) stos mov push mov (bad) cmp pop repnz rcll mov mov repz xlat push xor mov enterq xchg sub or scas (bad) sub pushfq push mov push xchg lahf add cltd xor jle repz xlat rex.X mov cmc push ror pushq fstps (bad) rcll mov (bad) push (bad) repz xlat rex.X or adc mov mov loopne push addr32 push xlat pop movsb rex.WB add xlat (bad) and outsl xchg mov movabs mov jns mov iret xlat rex.X mov or jne xlat and movabs (bad) sysret push rorl push (bad) or and add mov movabs stos push mov adc stos (bad) push rex.RXB xchg in and test lahf nop imul fildll xlat cmp pushfq int (bad) mov jno push xlat rclb enterq cmpsl jge xlat xchg (bad) xchg iret ss (bad) fwait xlat fs xchg leaveq repz xlat rex.X push jnp iret xlat rex.RX xlat xchg iret add (bad) mov rex.WRXB add fcmovbe test (bad) mov fwait push cmpsl jae xlat xchg add jnp repnz psrlw (bad) mov test rcl (bad) fcmovbe (bad) mov mov rcl rex.X jge iret xlat outsl mov add shll leaveq mov xchg repz xlat rex.X repnz stos mov push mov cmpsb pushq sub xlat test push fxch (bad) xlat unpcklps xlat nop jle stos pop xlat pushq mov iret xchg xlat pop xchg rex.X rex.RX xchg lret mov add js mov jae or adc sbb (bad) xor jo push fwait (bad) imul sbb stos sub mov mov callq mov jnp rex.RXB (bad) mov push retq add leaveq fcmovbe jae (bad) fcmovbe sahf adcl movb movsl push je enterq push movsb andb adc pop xlat rex.RXB xlat xor mov retq jnp clc outsl mov test push fwait iret xchg xlat enterq jne retq push jmp push iret ss rex.XB rex.X rcll rex.X lods (bad) imul add orl test add test fwait xlat mov (bad) xlat xor repz xlat rex.X leaveq scas iret in mov xlat sbb out popfq xlat (bad) xlat adc xlat hlt push test scas jnp (bad) sub sti rex.XB rex.RXB adc xlat (bad) fdivr retq cmp push iret iret (bad) xlat (bad) mov iret enterq es xchg roll rex.WRXB mov xlat test push xchg (bad) xlat jmp push xchg iret enterq es iret sbb xor (bad) movslq xlat rex.X push shrl iret in mov xlat (bad) jbe jae lret xlat test push jno mov adcl test jae rex.X iret xlat stc cmc push ja push xlat imul iret out outsl lods jge (bad) (bad) xlat loopne lahf repz xlat rex.WRXB xlat cmpsl mov xlat test push scas iret (bad) xlat test xchg std (bad) movabs rcl rex.X cs fildll repnz ja xlat test push stos iret (bad) xlat (bad) xorps jno test mov xor xchg loope in addr32 xlat add rex.B addr32 xlat xlat (bad) mov xlat (bad) jle mov shll rex.WRX out fsubrp outsb xchg mov leaveq cmpsl iret xlat cpuid push jae iret movabs iret push xlat mov mov mov out popfq pop std xor xlat push rex.WB sarl addr32 mov mov xlat loopne rcl rex.WRXB push (bad) test jrcxz push popfq outsb (bad) test xchg pop (bad) popq jns loope imul sub xlat test retq rex.WRXB fwait lret push stos xlat loope stos lret xlat test push retq iret (bad) xlat (bad) push add jg xlat sar xor xlat iret or xlat imul mov lret cmpsl push popfq jns std and (bad) popfq xchg xchg sub push popfq ja lods sbbl lret not popfq mov lret pop push popfq mov retq jbe mov rex.WRXB ds rorb push lret sub add push adc pop xlat (bad) rol xlat addr32 mov (bad) push outsl ja mov xor (bad) enterq push retq (bad) mov es mov push (bad) rex.WRX push fdivl pop rcrl rex.RXB gs xlat xlat push rex.WRB rex.WR lret cld xor out int3 mov xlat rex.WRX in (bad) rex.RXB rex.WRXB jne adc cmpsl xorps rex.WR outsl fist xchg jae xlat xor rex.X push cltd lret rex.RX rex.WXB lods push jne sbb rex.RXB and rex rex.XB push jmpq mov mov mov xchg push sti retq leaveq jmpq push sbb lret in fist enterq stos movabs rex.R negq or jg iret lret xlat (bad) je scas (bad) stos pop push cmc rex.RXB (bad) cltd js push rex.XB xlat movsl in xlat sbb mov cltd stc push pop rex.RB rex.WX rex.WRX xchg rex.R rex.RXB rex.X xchg push jge leaveq leaveq (bad) xlat in stos test (bad) sbb xchg loope add shrb jbe (bad) movabs cmpl (bad) push movslq adc adc xlat shll mov movabs test xlat (bad) mov cmp xchg mov mov mov cmp rex.XB push mov fwait xchg xlat mov xlat fistpll pop push mov mov jnp fnsave mov roll mov movsl pop xlat lret rcl xlat test mov fildll loopne test lret (bad) push rex.XB mov callq fisttpl sbb or mov (bad) push sub pop add mov rex.RXB lret xchg xlat mov xor rex.RX rex.WRXB add mov xchg (bad) fwait or adc iret (bad) push mov mov jbe mov scas test sub push lret add sub idiv jae push (bad) scas rex.X rex.XB fsts test jns (bad) sub test adcl mov sbb or push iret rex.XB mov mov retq leaveq xchg retq sub rex.XB test push (bad) (bad) test xlat mov xchg push loop adc movabs retq mov push sbb rex.XB fwait adc fmul push lret mov mov lret pop movabs lahf jbe movsl (bad) cmpsl xlat iret jg xlat jrcxz xlat popfq jo cmpsl rex.WRXB push (bad) js xlat rex.XB rex.XB fwait push mov enterq push and rex.WR rex.WX imul adc cmpl push (bad) fwait test adc push test push mov mov test in stos xlat xlat (bad) iret movslq jrcxz xlat rex.RX add sbb rex.X rex.XB push cmpsl jmpq fisttpll iret pushq fdivr push test cmp xlat jns cltd push loope out or xchg push gs (bad) mov (bad) mov push test push mov pop retq adc cltd js push (bad) notb push (bad) mov lahf rex.WRXB vcvtsd2si fmuls add rex.XB adcl (bad) or rex lret xchg mov mov mov sub mov pushfq rcl mov push sub in push pop mov rex.XB rex.RXB rex.X rex.XB push lods loop rclb or rex.WRX jmp pop jne imul sub push leaveq fbstp (bad) push mov callq push mov mov (bad) hlt push movabs xlat int3 (bad) out sbb rcll xchg mov mov rex.X push hlt imul (bad) jns sub (bad) (bad) stos push movabs movsl xchg rcpps push mov rex.XB pop add movsl or adc iret xchg push (bad) (bad) sbb rex.WR xchg cmovg push insl (bad) mov fwait xlat (bad) sbbl add jl rex.WB jecxz push mov xchg push fwait in cmp rcl xlat (bad) or (bad) xlat rex.W test xlat shrl movabs (bad) mov sbb je push mov retq lret xchg leaveq pop xlat rex.X xlat mov cmpsl xlat shrl (bad) jae rex.RXB (bad) adc rex.WX mov xlat in xor jg xlat sbb fcompl cmpsl lock movabs cld ja adc jmp lret fstp jrcxz pop outsb (bad) stos nop pop adc pop mov push pop in fimull sbb loopne mov (bad) xor jg adc jmp cli test rex.RXB ror jge mov xchg pop xlat in xor sbb sub loop movsl lret (bad) (bad) (bad) xchg lahf fwait cmpsl clc movslq addr32 jrcxz add (bad) (bad) ds (bad) fmuls addr32 rex.WB adc lret push rcr stc xlat add fistpl rex.WRX pushq fimull jmpq (bad) jbe callq push add rcrl jp xor lret sbb xchg mov fisttpl fcmovb out add fstpt test add sbb mov jrcxz mov xchg cltd fstpt lahf jbe or (bad) jno xchg or (bad) mov or or js cmpsl cs repz mov (bad) add (bad) (bad) shlb rex.RXB (bad) ss jnp test xor mov (bad) xchg scas sub outsb mov jge in ss (bad) sti and jle pushfq rex.WR sarb (bad) callq (bad) mov mov fcomi fsubrs mov mov lahf cmc mov push fistpl pushq std iret add add xor jno repz push (bad) mov (bad) leaveq (bad) (bad) mov mov xor addl jae sub (bad) mov idivb rex.R sahf sbb int test mov imul (bad) (bad) mov xor mov nop lods pop (bad) or and ja cld notl adc mov ja xchg pop clc add shr and xlat xchg push and pop pushq mov out push mov mov adc ss retq jmp rex rcrb ffreep rorb pushq pop rcr (bad) shl sub (bad) xor jg adc mov (bad) mov lret sbb je (bad) add test jno data16 (bad) rex.X (bad) xor fisttpl popfq xchg rex.WRX int3 imul pop rex.RB rex.WR rex.X in add pop cmpsl ficom sahf jge pop or iret jne imul mov sub mov fcomi in or push jg (bad) fwait rex.WRB sbb lret xchg int pop adc std xchg fcmovne cmp xchg mov jbe fildl (bad) add sbb mov push loop mov out in (bad) xor and pop (bad) push repnz xchg jno mov fstpt (bad) add add jg (bad) jl (bad) (bad) (bad) rex.WX test fistl pop leaveq jne (bad) addr32 scas add xchg (bad) test mov (bad) data16 fcmovne mov (bad) rolb not jrcxz rcr (bad) xchg (bad) jb mov rcl and (bad) repz fldt push cmp mov scas retq outsb (bad) mov or insl sbb loope ror mov data16 jbe rol leaveq callq cmp nop (bad) fcomi fbstp pushfq out rex.WRX fistl jl rcr mov rex.WXB rex pop mov xor fwait rex rex.RB loope fildll outsl callq movslq lock rex.WRX (bad) lahf movabs sbb test fistpl or divb rex.WB rex.X rex.RB pop enterq (bad) stc and leaveq int3 mov (bad) (bad) rex.WRXB es fstpt jg enterq pand jp ja ss retq repz sub add imul xchg rex.WXB icebp pop fisub jg fnsave shr enterq push fmul mov loop mov lret or sub adc xchg fwait test (bad) rex.WRB imul pop xchg pop jno adcb loope (bad) xchg ds pop lock mov cmp cmpl (bad) hlt sub sbb fs xchg xchg insb pop fcompl movslq and lahf rex.RB add jno callq pushq mov pop jg int xchg stos add or mov repz ja xchg adc callq lcall rex.X sub sub xor xchg cmp clc mov cmp fs repnz and (bad) jb pop data16 rex.WRB addr32 pushq out push or (bad) lods fsts jne sbb icebp jmpq repz retq xchg jbe mov or mov (bad) cmpsl mov (bad) jge jnp fs rex.RX rex pop (bad) int3 (bad) lret int push jmpq jne fldl data16 sbb jns (bad) fistl in cmp (bad) rex.WR xor sbb jae xchg jl jrcxz (bad) (bad) cmp and jo rcr cmpsb mov sbb mov (bad) mov mov iret (bad) mov add cmp xor push in fisttp (bad) outsl lret std (bad) test loop (bad) cmp (bad) cmp (bad) mov fistpl xchg lea sub (bad) rex.XB jp (bad) pushq pop xchg gs jbe jmpq movsb out add and xlat lret cmp push movabs pop xor movslq cmp fstpt outsb xchg (bad) jl (bad) push scas (bad) out fcomip (bad) rex.XB (bad) mov mov sub rex.B lea fisubr (bad) (bad) fisttpl rex.RXB push or mov (bad) je vpaddsw rex (bad) rcr int3 loope jge add mov popfq movsb sbb mov (bad) rex.RX callq xor mov in adc adc rex.WB rex.X (bad) pop (bad) movabs pop or imul fs lods xchg jge icebp adc fcmovne rex.X mov fisttpl adc mov sbbl loope orl icebp add insl cmpsb add lret pop pop rex.RB rex.XB xor (bad) lock push movsl (bad) test loope repnz mov fstpt shrb pop movabs xchg xchg adc or scas shrl sbb test lods xor retq pop hlt mov gs (bad) fildl (bad) (bad) mov jrcxz fldt xor adc scas fistl notl movabs rex.WRB test cmp retq (bad) jae cmp cmp sti pushq lea (bad) rex.WX movabs adc jmpq shll in push sahf add jrcxz mov jle ljmp lahf and jge add cmp iret pop sbb push (bad) pop jg pushq rorb cmp (bad) lock or jnp (bad) sbb outsb leaveq pop mov rex.W rex.B (bad) rex.R test outsl fldt add and sbb rex.WRB test rex.B rex.XB rex.RX fwait sbb or push cld add fxch and rex.B (bad) or scas test rex.XB (bad) adcb (bad) cmpsl (bad) scas cmp int int3 cwtl cmp mov repz addb outsl fisttpl (bad) (bad) adc cmp (bad) (bad) (bad) cli fstpt sahf (bad) rex.WR xchg cmpsl (bad) rex.WXB mov retq sbb (bad) (bad) (bad) xchg roll imul clc stc xor jge rex.WX rex.WRXB enterq gs pop fcomi movabs gs cli es cmp sub loopne movslq (bad) xchg (bad) insl fnop mov rex.R xchg jnp mov fildl stos sti jmpq add imul mov mov fwait cmp sbb cld xor jnp in sub outsb (bad) or push (bad) (bad) data16 insb stos add callq cmp and leaveq (bad) subl mov imul xchg (bad) mov cmp cld retq jbe sub (bad) push adc mov cmp nop cltd lret fstpt popfq (bad) pop sbb (bad) retq insb rex.WXB jmp cmp not xchg rex.WB popfq pop gs or sub jno,pt xchg leaveq sub mov jae mov pop xchg jbe rex.RXB lock fildl rorb test (bad) (bad) fcmovne rolb pop lret mov rex.WRXB int ss cmp adc mov and stos rex.RB std xchg push rex.WRB fwait sbb jmpq fsts cmp sar test cmpb insb fistl sub cli (bad) lods (bad) (bad) mov add (bad) or sar mov sti lods lret test fistl (bad) out and rol shr pop jg (bad) rex.WX mov sahf sub rex.W cwtl or fwait rex.B or push mov or scas pop movabs xchg sahf jb cmp popq xchg jl fildl rex.WR rcrl jae int3 push mov fistpl push xchg (bad) pop pop adc mov leaveq sub mov js mov mov pop mov (bad) cmp es jb clc fdivrp pop (bad) jg jno cmp jae and movsb fcmovnbe stc jle xchg pop (bad) (bad) (bad) mov cs mov incb rolb (bad) mov notl jrcxz push rorl mov and addr32 push xor jae cmpsb pop (bad) pop xlat adc cmc push xlat not shll jg insl fcmovnbe test (bad) pop fildl (bad) mov outsl jle cmp (bad) movsl xchg jns fxch ja scas jnp jo xor subb rex.WR mov fcmove clc rex adc or sahf in rex.WR (bad) mov add xor jge mov jbe mov xchg incl lahf mov data16 (bad) cmp xchg stc sub (bad) push test (bad) (bad) rex rex.WRB data16 fwait rex.RXB (bad) out xlat pop rex.RX pop sub fildl sbb adc sub mov (bad) loopne enterq rorb iret scas cmp fmull sbb sub movsl cmp (bad) mov testb jo in sbb retq sub addr32 jo jrcxz jle mov fcmovnu push pop mov fistl mov rex.RXB mov rex.W sti sahf test sbb jg sbb (bad) pushq fmuls js lods fisttpl jle jbe jge sbb mov add or jns cmc mov fwait adc (bad) xor adc retq (bad) xchg fwait cmp pop je pop movabs xorb (bad) mov cltd fstpt test sbb cmp int3 shrl repnz xor fucomi (bad) ja stc mov mov sbb xchg (bad) fistpl mov sub out jbe mov (bad) fadd mov pop rex.WB (bad) jb pop mov jg fistl rcl movabs sub shrl pop out sti rex.WB rex.X pushfq xor rcr jg (bad) cwtl (bad) cmp or pop lret and sbb icebp fstpt rex.WXB xor mov (bad) stos (bad) (bad) and out retq fs cwtl (bad) xchg push rex.WR adc mov cmp rex.RB movslq outsl decb movslq rex.WRXB (bad) scas rex.RB cmpsl pop fisttpl mov jo rex.WX clc outsb cli (bad) movabs out cmc ds lret (bad) scas jb jmpq test es in pop adc sbb (bad) mov iret (bad) (bad) xlat fmull loopne mov sub clc movsb or frstor cmp mov and pop xor xchg movabs rex.XB rex.B divb pop (bad) push mov sub cltd (bad) imul lret adc mov (bad) rex.WX cmp test sarb mov cmpsl mov (bad) or push imul repnz sarl addr32 pop xchg jl (bad) in fcmovnu sbb cmp xchg xchg mov ds (bad) pop (bad) jo int3 outsl (bad) rex.WX rex.X mov and mov stos (bad) fwait xchg (bad) shl adc fcmovnu and out mov fistpl xor adc (bad) mov test adcl sti fstpt or mov test lahf ss imull test mov xchg (bad) or jns sub loopne jno fldl adc es sti stos addr32 fucomi (bad) test and pop movsl cmp mov es loope pushq jne lods rex.X xchg pop mov pop (bad) xchg orl sub movabs out repnz (bad) rep fcmovnb xchg mov test add jb rex.WB addr32 ja movslq lahf rex.WRX fwait scas test add and rex.WR rex.WB xlat sub rex.RXB xor mov movslq sti fmul xchg rex.B (bad) rex sbb jg xchg sub xchg pop jo push out clc xlat push jae rex.WRXB roll sbb mov mov (bad) mov (bad) mov push incb jp xor push pushfq rex.WR rex.XB or push (bad) (bad) cmp pop pushq movabs and (bad) adc pop (bad) pop xor (bad) ds movslq std mov rex.WXB mov leaveq fildl adc rex.X (bad) lock icebp jp movabs int3 mov adc adc fninit jno sub (bad) sub rex.WX fistl test nop sbb xchg fwait pushq in jnp movslq adc xchg push (bad) pop popfq jo (bad) sub pop (bad) mov sub jp adc insl push cs adc or sub loop fisttpl cmp js sbb mov xor rcrb cltd cmp std rex.RX loop in pop rex.X (bad) and repnz sbb fldt (bad) mov mov fwait enterq pop insb pop (bad) xchg imul jbe loopne cld jo pop js mov movabs cmc fistl xor movsl xchg or jnp xchg movabs mov pop movabs jl shrb fmuls popfq repz mov cmpsl pop and je adc stos sub mov jmpq adc out jl push movslq movsb imul (bad) movslq and in fcoms mov fcomi movabs xchg push jb (bad) btc mov jnp rex.XB int3 sarb cmp lret push mov pushq jp add ja clc icebp int3 (bad) push mov pop cmpsl outsb iret testb out mov (bad) lahf sub rex.R int3 clc rex.WB xor ss vhsubpd sbb cmp adc pop xlat movabs insl std movabs movabs mov rex.R insb leaveq cld in (bad) cltd rex.RX gs (bad) outsb frstor jb jge sub mov mov jo pop (bad) fiaddl pop (bad) scas xchg mov (bad) pushq jb rcl cltd and popfq xchg pop imul rex.RX (bad) outsl fldl fmuls (bad) mov jbe (bad) (bad) xor push stos movabs fucomi rex.WRB rex.WX rex.WRXB (bad) rex.W sahf rex.RX movsl je iret (bad) cmp rex.RXB rex.WRX (bad) fcom and scas movabs mov jno (bad) (bad) fistpl clc (bad) loope je sbb push pop (bad) xor jnp sub lea push fwait jnp (bad) cmp sti scas rcr pop sub stos pop (bad) leaveq and cmc pop (bad) jns lods fcmovnbe jnp mov rex rex.WX add out push test rex cli (bad) pop jmpq jmp (bad) (bad) cmp sar (bad) xlat fnstenv (bad) imul rex.RX repz (bad) jge in (bad) pushq sbb and xchg push lret movabs data16 cmp push jmpq (bad) jns js push push jbe add addr32 mov stc (bad) cld or fcmovnu mov leaveq pop mov out test fwait movabs out xchg pushq (bad) pop (bad) ficompl imul rex.WRB lock in ficom fidivl pop (bad) lahf add xchg pop nop pop enterq mov (bad) pop xor jp lahf pushq int idiv jne add movslq xchg pop popfq (bad) cmp fcmovnbe lret pop or retq mov movntq cmp add fildl clc sub loopne mov and sbb cmp fwait rcrl (bad) xchg jle outsb xlat pop mov jne (bad) fisttpl and mov fisubrl rcll jnp jbe fwait jmpq jne fistl int mov xor retq cmp movslq pushq (bad) mov cmc mov cmp mov rex.R pop mov adc movslq xlat int3 mov lea mov (bad) lret fistpl sub (bad) js fstp xor (bad) xchg sub rex.X fildl pop or fistpl (bad) or add std fildl rex cmpsl fstpt fadds mov add sub (bad) rex.WXB rex.RXB loopne lea jne test add sub pop xchg ss cs fistpl hlt mov mov rcl sub movsl mov cmpsl (bad) add sbb (bad) imul and fcoml rex.RX pop xor pop (bad) mov (bad) cmc pop mov push mov (bad) enterq retq fiaddl cmp xor repz shrl mov ror fstp jp test and shr xor icebp (bad) or (bad) cmc stos sbb cmp enterq mov cmp hlt cmp roll adc movslq pop rex.B cwtl cmp add push stc add jp repz movabs fwait or mov fcmovnb sahf jae cbtw mov subl scas fstpt cmp mov sbb rex.WR movsb pop hlt test cmp stos fldt insl xor callq retq rex.WRXB lea mov fwait pop sub movslq mov mov cmp push out cmp sbb pop pop add out ss rex.X lret xor (bad) roll add out (bad) fcmovb jg rex.WXB imul in push and mov fcmovnu mov pop mov mov stos pushfq lods xchg test pop retq push mov add cmp rex.RX loop jmp loope xchg rex.XB (bad) fcomi mov cmp imul add shlb jge int3 xlat pop jb and jnp rcll mov loope rex.WX or out fldt sub ja clc (bad) add fbld jmp (bad) mov test loopne and (bad) cli mov sub rex.WRX rex.W and sar fcmovnu mov lahf sub or mov cmp xchg mov cmp rex.WB rex.R movabs add rex.WR rex.WX jge (bad) enterq adc lahf (bad) push movslq mov push cwtl ficom pop xchg mov fwait cmpsl fmuls jmpq pop out adc movsb (bad) jmpq and jno (bad) mov lock (bad) retq mov push jmpq cmp adc rex.X movsl (bad) scas cmp cmp sbb cmp push mov cwtl in sti lret mov test fisttpl xchg sbb (bad) mov mov lahf (bad) rcrl (bad) fstpt repnz jmpq jnp rex.XB dec cwtl in adc mov and lcall cwtl mov jnp (bad) popfq test push rex.WRB fs fwait adcl sub gs jl (bad) fstpt rex.W push sbb mov pop nop mov vpxorq pushfq adc pop cmpxchg lock push sub pop lret (bad) lret rex.B fwait push (bad) enterq imul ds lahf xchg jp cmpsb cmp movslq adc sbb pop jo mov add cmp pop fwait in sahf push push (bad) mov pop rex.WB rcl (bad) adcb pop add rex.WRXB rex.WX rex.RXB or sub pop (bad) rex.WRB loope jne mov (bad) pop (bad) scas (bad) mov rex.X fadds cmp rex.WB sarb jb rex.X or sub adc mov pop fisttpl int movabs jge loopne fcomi (bad) scas (bad) pop insb or movabs pushq push fstpt (bad) add fstps jnp xchg pop (bad) sahf cli sub mov or movslq rex.RX movabs rex.WRX fisttpl loope (bad) rex.R imul add mov sub pop pushq cmc pop iret mov mov rex.XB or (bad) fistl push out and sub outsl (bad) push push (bad) mov pop pop mov sbb fcmovu cmp int3 movabs rex.XB in in (bad) insl mov mov pop cs sub fwait (bad) mov adc sar fildl lret fs outsl (bad) in repz adc add fldt rex.WRXB lea repz lods callq sub rex fwait (bad) hlt (bad) mov adc sub sbb cwtl add cmpsl scas pop add ja stc stos rex.X xchg fldt adc sub mov adc (bad) mov outsb (bad) (bad) xor jge and xchg imul test mov cmp cmp data16 or mov int3 movabs rex.WB (bad) (bad) (bad) int and mov popfq sbb (bad) jnp rex.WR fucomi (bad) rex.RXB jg push add (bad) jmp imul addr32 pop fcomi pop rex.WX push retq rex.WRB movslq mov xchg movabs shrl in sbb push lods ss rex.WXB fwait add scas (bad) int mov fwait imul (bad) js in or (bad) mov in pop jbe callq stos jg fstpt sbb fisubrl push mov mov repz jmp rcrb (bad) push (bad) jne pop ja (bad) (bad) cmp fidivrl mov xor pop (bad) jae lret retq rex.WB fcmovnb scas mov xchg sub push adc cmpsb test rex.WRB adc push lods je (bad) sbbb fwait cld adc shrb test mov loope fdivrs or neg (bad) ficompl out cmp int3 fsubl mov add sub push (bad) imul cltd pop and pop (bad) (bad) callq or int3 fldt sub lods (bad) xchg push (bad) sarb shrl pop movabs push je insl (bad) push addl cs fistpl test retq fildl rex.WR fneni(8087 or and jnp cmp rex.RXB ss xchg xchg sub mov fisttpl (bad) cmp fldcw mov (bad) std retq (bad) rex.XB jge mov sti add fs (bad) adc mov test jo retq retq jnp add fistpl in xchg (bad) pushq movabs test (bad) xchg fwait mov (bad) fwait movabs (bad) push (bad) rex.W testb mov js or pop lret or jrcxz rex.XB rex.X jp imul (bad) (bad) (bad) or pmuludq add xchg fisttpl or fcomps or loope sbb test cmpsl xchg stc (bad) (bad) rex.RB (bad) lods push (bad) pop pop adc lret int movabs fisttpl int3 or stc (bad) and fcmovnbe ja (bad) rex.RX in fcmovnbe test jbe (bad) add add jle cmc addr32 enterq pop mov (bad) jnp jmp pop cld lock imull enterq ror (bad) (bad) fistl scas movsl js (bad) cwtl rex.RB outsb (bad) xor add (bad) fneni(8087 sub mov mov ds (bad) mov fcomi (bad) jae pop movabs gs (bad) mov insb pop rex.WRXB lret out mull imul mov or movslq test fistl sbb sub cmp iret or xchg xchg movabs cmp fbld xor movslq and cltd xchg outsl movabs jnp fucomi retq pop int3 add rex.B lods rcrb adc fildl mov push rex movabs jns xchg mov rex.RB imul pop (bad) xlat (bad) rex.RXB (bad) (bad) pop add push outsl jno pop movslq jnp loopne jnp (bad) and fisttpl cmp lock cmp cltd (bad) sbb xchg sbb push lea cmp pop or pop jo pop ds movabs scas (bad) (bad) (bad) lcall shr sti (bad) fwait jg xchg out mov shrb fildl rex.WRXB pop cmc sub xchg jmpq jnp addr32 fcomi fcom add push ds mov roll movslq (bad) pop jns iret cmp cmpl cmp mov mov (bad) xchg (bad) jne xor (bad) mov (bad) pushfq and fildl sub shrb mov clc lods retq lea jne pop test loop fcmovnbe mov mov sub imul fcomi test push mov adc mov fcmovu scas hlt jns insl clc jmp fsubr mov fucomi mov and (bad) pop mov rex.WR (bad) fstp rex.RB (bad) in and mov repz mov sbb (bad) (bad) (bad) test sahf xchg rex.B pushw rex.RB icebp jmpq sub scas faddl cli (bad) jns (bad) jge (bad) mov ja std rex.RXB insl and mov mov jmp fisttpl fwait and sbb xor (bad) int add or sub (bad) cmp (bad) int3 mov cmp fildl loope pop pop addb (bad) neg pop ja fadd iret out mov pop add imul pop fcomi sbb (bad) sub push jbe pop or sbb cmp jnp outsl fnstcw imul sar out rclb mov out mov fwait and jns mov callq jo mov out xlat and jrcxz rex.R in cmp (bad) pop sbb shlb (bad) fisttpl (bad) rex.R mov icebp fstpt xchg movslq mov mov pop adc (bad) xchg (bad) (bad) fwait (bad) jmpq (bad) imul pop (bad) mov mov push cmpl add and iret pop movslq (bad) fistl add pop jae rex.WR ja jnp xchg mov in fistl out lods clc fldenv sub sub or jnp (bad) sahf mov mov fwait in cmp (bad) (bad) ja pop ficom (bad) adc fldl mov loop or (bad) push mov rex.RXB int mov push or scas iret sbb pushq cmp mov movsl cmpsl fldt rex.WRB mov movabs sbb lret pop int jnp outsb cltd shr in jno mov rex.WRXB stos cmp fcomp cwtl sbb leaveq sti jbe rex.RXB cmp (bad) lods lea scas mov cmp jae test rex.RX and pop mov sub rex.X pop fistl rex.W xchg (bad) adc xor in rex.XB jne retq jbe adc (bad) repnz (bad) jg or push pop jge (bad) fwait xchg jl sbb jne (bad) or (bad) movabs movabs mov adc rex.X icebp mov xor repz gs (bad) (bad) cs retq sti adc sbb mov pop or test in movsl fisttpl rex.WX test loopne rex cwtl jnp cmp jle mov (bad) and mov mov jb imul cmp repnz rex.W movabs mov fs rex.R push xchg (bad) mov pop retq or out xchg (bad) pandn int3 in and xor jrcxz rex.R pop pop rex.WX negb ds pop jge pop xor fldl xlat pop jnp fimul cltd or mov movsb lret test xor enterq (bad) mov mov add ss fildl sbb jge in sbb (bad) fstpl pop decb addr32 (bad) iret rex rcrl outsl fnsetpm(287 pushq pushfq mov test or mov (bad) xchg fisttpl (bad) sbb out mov mov jae (bad) fistpl rex.RX fwait outsb (bad) stc jle rex.WXB mov xchg fstpt rex.RXB test sbbl sub xor pop outsl jge jns fwait sbb fdiv rex.RXB (bad) push xchg add in fstpt rex.X lock xor jo fildl (bad) sub sahf pop cld rex.WR pop add lret lret pop pslld sbb mov cmp cltd jrcxz lods addr32 push rex.WB rex.R jo lods or hlt (bad) outsl in mov jmpq movabs xor pop (bad) (bad) fnstenv jae rex.WXB fistpl xchg jmpq (bad) (bad) cmp and mov jne jg mov (bad) xor (bad) (bad) jo lock mov fmuls fnstenv mov cltd cli or cmova push (bad) mov or push and scas stc in mov push (bad) mov (bad) pop rex.W jnp std jmpq rcrb outsl push movabs and pop movsb xchg add out test xchg stos scas mov fistpl (bad) test loopne ja fcmovnbe and mov (bad) pushq (bad) fldt mov vzeroall leaveq fldt or or rex.RXB rex.RXB fs pop xchg fistl negl jno int3 rex.WRB and fldenv (bad) insl pop lods push push cmp (bad) ja sub test fwait shl cmp push (bad) (bad) mov cmp (bad) (bad) fistpl out (bad) in ja xchg iret (bad) pop test rex.WR jnp lret rex.WRX rcrl pushfq enterq rep rex (bad) jno ss xor (bad) leaveq (bad) pop fldt push insl (bad) rex.W cld sbb repnz xchg test fistl scas xlat ja xchg in rcr fdivrs popfq faddl cmp data16 jnp sub pushq and or and push (bad) rex.WR cmp push sbb (bad) rex.WRB pop cmpsl pop jmpq gs cs rex.XB xchg mov fistpl jnp jmp fiaddl adc jae sbb outsl push cmc fstpt (bad) mov popfq (bad) fimull out adc adc pushq or addl sub hlt lock fwait rorb mov xchg push shlb lret or lock jae sbb int3 jo out mov stos movabs xchg push and add sbb (bad) fidivr leaveq jns mov pushq int mov repnz cmp cld rex stos jp mov leaveq mov iret fldt cmp fnclex jp sti xor (bad) je insb enterq movsl rex.XB fs cmc rol addr32 int3 fidivrl lods sub and (bad) push fcomi jnp loope rex.RXB outsl xchg imul xor fcmovnb shrb mov fistpl lock sbbl or outsl (bad) xor (bad) sub movsl pop sbb test cmpsl sbb jle in push cmpsb push (bad) and (bad) hlt sub cmp scas int3 pop out mov jrcxz pop rex rex.XB (bad) or lahf mov stos fistpl sbb cli cmpsb pop fistl xchg sbb (bad) push (bad) jo fstpt lret cmpsl xchg jle icebp fwait add clc rep sbb adc clc cmp orl pop sbb leaveq ja (bad) (bad) in push mov push (bad) test jl repnz callq outsl xorb mov out movsb and fmull xor (bad) nop (bad) mov (bad) pop (bad) xchg xchg add (bad) iret js push mov cli cwtl int3 xor int3 iret pop rcrl xor sbb lea nop rex.RB rex.WRX adc movabs (bad) sti mov or (bad) cmpsl lods or fbstp adc cld mov mov leaveq flds adc rex.W rex.WRX (bad) movslq shlb pushq mov mov adc sti mov loope loopne mov pop fbstp or adc lret rex.RB cltd clc pop cmpps int (bad) push add push pushq sub pop ds (bad) (bad) retq jrcxz cmp outsl mov clc xor mov scas rex.RXB (bad) xchg sbb cs (bad) jge adc in retq pop faddl and rex.RB jbe mov (bad) mov fs out xor mov fnsave jle push outsb cmp sti es imulb cmpsb mov fdiv repnz pop (bad) stos lret rex.WR sbb sub sbb movsb fstpt movabs lret data16 cmc out repz lret and fcomp movabs mov fist rex.WX jnp movabs lods or fistl pop jb rex.WR sbb (bad) cmpsb lahf loop rex.X mov (bad) mov imul push xor push outsb mov popfq frstpm(287 (bad) sub test sbb fucomi mov mov fistl loop xchg fstl pop sub pop test (bad) mov (bad) movsb and cmpsb lahf (bad) fucomi (bad) rorl xorl callq add and cmp jno rex.RXB pop pop jmp push cmp mov mov jmpq jrcxz ss mov cmp jns push jnp ror pushq fisttpl rex.WRX xor (bad) jns push (bad) or jl fmul add pop mov pushfq xchg add fstpt out or rex.W (bad) loop (bad) jnp mov fistl test (bad) fcomp add xchg in cmp out outsl rex.WRX mov jnp nop stos push cmp sbb retq pop add fwait (bad) mov (bad) movabs cmp pushq rex.B fs rex.WRB jge fidiv and mov add mov (bad) retq stos popfq stos and in and lods (bad) rcr imul (bad) leaveq (bad) imull (bad) ss rex.WRB sub popfq mov mov xor jb or movabs movsl lret push fisttpl popq fcmovbe shr rex.WX rex.WRB outsl add pop push mov cltd mov movslq fcmovnb popfq fs xchg mov fldt lret movsl fildll rex.X (bad) sub rex.RX rex.WB movabs movabs push adc (bad) cmp cmp div fildl sbb adc mov or pop mov fcmovnbe cmpsl xchg stos xchg push clc jg sbb adc (bad) and push xchg add cmp fstpt (bad) cmpsq (bad) leaveq (bad) xchg mov sti adc pop mov jg popfq and xchg pop xor rex.RX mov mov xchg (bad) jnp fidivrl cmp in pushq or (bad) fistpl add repz fistpl js jp cwtl rex sub jrcxz (bad) cmp adc (bad) fistl shl push lock mov (bad) sti cmpsb std fcmovnbe rex.RX rex.WRX cltd ja addr32 sbb jno test scas (bad) fildl cli fsubrp (bad) (bad) and rex.WRXB mov adcb lods (bad) adc (bad) jbe jl sbb movabs mov mulb movslq insl mov (bad) fldl es pop mov and fisttpl add (bad) fldt fisubr (bad) or in pushfq mov cmpsl (bad) rex.WRX mov lods pop xor rex.WRB rex.XB cmp int out push jrcxz xchg pop pop rex.WX lods imul rex.WRX lock rex.WB loopne int3 cld add test movabs (bad) and pop movsl sub adc (bad) xchg jmpq fs (bad) fiadd cli (bad) or lcall scas sub pop jo rex rolb jb roll test mov scas cwtl sub (bad) in mov jno testl (bad) jne fstps jp out movabs xchg xor push pop sbb (bad) pushfq push lahf (bad) stos ja push (bad) sbb adc movabs (bad) repnz push sti xchg lret mov (bad) jns (bad) rex.WR fwait outsb loopne cmp pushq fistpl (bad) add in rex.WRXB jns out (bad) mov mov imul rex.WRX xchg repz data16 scas in xchg movslq movabs (bad) jp lods pop jrcxz or pop rex.WB sahf rex.WRXB or jo callq data16 mov and pop sub testb fistpl jb (bad) mov or pop leaveq fwait rex.R cmpsl sbb (bad) (bad) stos jrcxz pop mov xor hlt cltd in pushq rex movslq movabs rex.RX mov out fwait push enterq pop sub lock fcmovnu insl sub cltd out enterq ss fstps push (bad) pop mov divb rcrl push xlat xor (bad) (bad) mov shrb adc ss lods mov pop addb cs fcomi mov pop iret (bad) rex.WRX (bad) lret fimull xchg (bad) rolb mov or fcmovnb xchg cltd fs orl in fistl insb (bad) (bad) (bad) out mov iret adc orl lahf (bad) clc sub or pop cmp rcrl push pop insb push fisttpll nop std add (bad) (bad) js mov (bad) (bad) jns cli imul hlt out add rex.WB (bad) rex.WRB fstpt adc enterq (bad) pushq lret xchg jnp push xlat mov xor and (bad) fcmovnu cmp (bad) rex.WX out fildl adc fisttpl (bad) mov imul cmp fildl leaveq test pop xor (bad) or ds jmpq or jnp sbb xor xchg adcl push data16 in cltd in (bad) rex.R push fsubs fisttpl jno pop (bad) rex.WRXB (bad) lock jrcxz callq iret mov leaveq movsl lods cwtl fucomi push mov outsb and or rex.RB rex fwait shr adc mov insl fcomi jo cmp mov iret (bad) sbb add push fst add fistpl rex.R in mov add (bad) mov (bad) subb movabs stos out rex.WB fs cltd sbb fucomi jo insb lahf ficompl (bad) rex.WXB fisttpl sub (bad) mov and jg (bad) jb pop insb pop push sub imul push rcll jrcxz fxch xchg sub (bad) sti (bad) (bad) xorl cmpsw sub cld (bad) mov mov lret push fnstcw js rex.RXB addr32 push pushfq xchg push ja cli jnp adc mov push and xchg xchg jb retq sti jns xchg (bad) std je xchg enterq xchg fistp push es (bad) xchg movabs addb in mov xchg jns sbb ja add xchg adc mov xlat mov (bad) lea je stos popfq repz vpunpcklqdq scas xor cmp lea jge fs cmp fucomi negb pop pushq jnp cli (bad) stc fildl rex.WR adc fisub xor sub movabs std fstpt insl push xor (bad) mov sbb imul imull mov outsl cmp adc mov pop mov add fcmovb test sbb jns movslq xor rex.WX rex rex.RXB fcomp pop fnstenv std pop add and int3 (bad) rex.WRXB pop sti loopne retq rex.RB (bad) stc movabs pop sub stos pop rex add push cmpsl mov jmpq rol cmp in lahf (bad) xchg or in imul rex movabs cltd (bad) imul lods (bad) movabs sbb pushq divb in rex.R jnp cmp movsl rex.WX mov (bad) (bad) xchg subl jge (bad) jno mov (bad) popfq rex.WRXB rex.RX je mov (bad) mov (bad) cmpsb cli cmp cltd rex.X rcll (bad) sbb (bad) jge fistl (bad) push and rex.WRXB movabs rex.RB enterq push orl pop mov pop faddl fildl sbb loop (bad) cltd mov pop popfq je rex.X repz (bad) jae fcmovbe rex.B cmp rex.W jno push jnp imul rex.WR rex.X rex.WX jnp xchg movabs mov sub adc or lret insl rex.WXB adc xchg sbb (bad) xchg in sub pop mov xor push movsb (bad) xlat (bad) fucomi icebp rex.W pop in (bad) fldt roll pop adc scas sti fmull test adc add pop test xor rex.WB rex.RXB outsl mov je rex.RXB rex.RXB and fldt je mov mov fildl sub outsl shrb fisubrl stos pop cli psubb sti mov (bad) or and cmp imul xor fcmovu and test pop repnz pushfq and addr32 ds fimull addr32 push rex.WR in lret and js decb (bad) mov sbb add lea push mov pop test repnz rex add fisubl xchg js cli sbb cs xor rex.R fisubl fldcw pop xchg sub rcrl mov sub (bad) lods leaveq movabs push xchg jae (bad) mov rorb jo rcll sbb adc rcrl neg pop std xchg stos (bad) addr32 nop sti jnp adc popfq xlat rcrl ja (bad) (bad) (bad) in stos mov int3 or test mov xor rex.X (bad) in stos (bad) sbb and addr32 int fnop loope (bad) movsl or xor outsl adc (bad) cmp xlat ss push fstps pop pop int3 mov test push retq cli pop xchg data16 pop (bad) mov (bad) jno rex.WXB rex.X cmpsl in icebp mov in or cmpsb jmp or (bad) popfq adc (bad) sbb (bad) adc rex.WB adc add xchg rex.WXB rex.WR test vmovsd jg mov jge xlat cmp (bad) mov rex.RXB enterq (bad) xor test movsb jrcxz jl xor xchg rex.W loop and (bad) js jns leaveq mov callq fmul mov xchg jns sub adc xorb cvtps2pd andl rex.RXB and xchg (bad) fcmovu pop test mov (bad) adc mov pop test sbb fwait pop jo callq fisub cli fistl loop ss lods callq push add lock iret pop xchg cmc (bad) sti (bad) fdivl (bad) movsb xlat (bad) idivl out or (bad) (bad) jo xchg jb mov loope fs fisubrl data16 cli fwait rex.RB mov sbbl cwtl fs (bad) xor (bad) fs icebp (bad) fldt or sarb (bad) mov fcomi and gs add sbb jle lock shrb mov xchg movabs retq pop mov stc movabs fildl mov outsl fildl enterq (bad) lret fnsave xchg jmp add fcomp push jnp jge lea rorb je iret (bad) (bad) fldt adcl jp rex.WRX sbb sbb mov mov stos fstpt ds adc pop sahf cmp rex.W test cmp sbb adc (bad) addr32 mov cmp cmp (bad) xchg int add rex.XB imul jae ficomp fisubrl test mov jnp or add loopne fwait (bad) lret nop rex.RB jrcxz pop rex.WX loopne iret (bad) (bad) fmuls cmp lret (bad) (bad) pop add cmp xor push f2xm1 push jne cmp pminsw sti int mov adc shrb xchg iret cmc scas rex.RB rex.XB rex.WB rex.RX fs and jmpq fldt ror rex.WRX xlat or xor rex.W int3 (bad) fs pop cmp mov lea repnz out jne xor mov sbb scas or movabs push orl sbb (bad) sbb fldt (bad) (bad) (bad) mov repnz fdivrs lahf int3 rex.WXB xchg rex.WX mov or xchg mov (bad) shr rex.X (bad) (bad) add sahf xchg (bad) pop rex.XB enterq sub cmp mov jnp scas imul mov pushq push enterq pop rex.XB jmpq cltd add retq xor fistpl rex.WX xchg in xchg cmpsb mov movabs (bad) sub cmp enterq fcmovu int3 xchg adc rex.WRXB jmpq jp stos or adc adc mov fldt stos pushq jb (bad) sarl xchg cs and fstpt sbb movabs (bad) (bad) (bad) and jns jnp cmp enterq retq (bad) (bad) mov movabs (bad) retq fildl xchg xlat fldt loop lods fist pop test (bad) loopne mov xchg lock fimull (bad) xlat jg mov test (bad) cmc loope std mov (bad) pop rorl (bad) sub xchg in rex.B retq rcr jle (bad) add andb (bad) adc jrcxz sbb xor pop rclb jmpq push mov int (bad) (bad) or fwait sbb cmpsb pop mov imul imull stos sbb fcmovnb sbb (bad) fldcw (bad) add in sti leaveq jnp cmp (bad) xchg mov fcmovu lret rex.RX rex.WR neg test rex.RXB fmull (bad) sahf (bad) xchg fcomi out (bad) add callq repz int and mov cld rclb cld fcom cld rex.RB xor movabs lods (bad) add jns pop (bad) rex.WRX (bad) stc fs (bad) or sub (bad) mov pop push sbb int3 pop or pop cli xchg sub lret xor xchg out (bad) icebp rex.WX xchg fld rcr adc (bad) (bad) jmp mov (bad) rol rclb rcll test addr32 stc popq out xlat sbb xchg push push jbe jnp push jle pushq sub sbb xor fiaddl pop mov jmp cmpsl mov xchg (bad) mov pop jae jle sarl sub retq add pop mov repz (bad) ss xor mov movabs xchg jae loope fcoms sub cld xor rex.RX add (bad) movabs or rex.WRXB pop rex.X rorb retq fist vmovlhps popfq cmp adc mov mov xchg jns sbb xchg push or (bad) scas xor repz fstpt add push (bad) (bad) shrl xchg jp (bad) mov iret jnp out outsb data16 (bad) clc pushq pop mov mov mov push rex.WRX fs xchg (bad) (bad) callq (bad) gs loop add (bad) iret sbb stos pop mov rex.WRXB (bad) pop mov pop mov fs or loope imul (bad) sbb movabs (bad) imul fcmovnbe cmpl scas (bad) (bad) jne popfq fcmovne jle jno (bad) scas out jge lahf rex.W xchg fisttpl jae rex.WRX xchg hlt sub push retq (bad) lea adc movabs push cltd jnp and fildl or jle jmp jnp (bad) ja rex.X pop (bad) (bad) xchg retq and xchg in (bad) movslq xchg mov (bad) orl sbb popfq lret fwait (bad) leaveq (bad) imul fwait cmp js pop and mov (bad) je jg fdivrs mov sti loope (bad) movsb sbb mov or rex.RB (bad) fucomi and jge rex.RX movsb (bad) fisttpl push pop (bad) xchg lret mov mov rex.XB test sti fstpt or cmpsl (bad) jg movslq rex in add xor adc neg rex.R (bad) cld adc fisttpl movabs (bad) jbe rex.WRX fsubrs loopne es fistl adc pop (bad) out jo pop (bad) (bad) (bad) rex.WRXB mov jg mov rex.WRB or jnp test clc mov cmp (bad) push sbb jb pop xor int pop stos insb cltd fistl mov xorl popfq and xchg mov adc sub lret scas jae (bad) shr mov rcrl (bad) andl adc jb or addr32 movabs es loope (bad) shr fwait test nop insl rex.WX cmp (bad) cmp jnp insb cmp and ss lods or xchg mov sub cmp stos mov sub or cmp loop (bad) addr32 in scas stos sbb xor data16 (bad) jrcxz jns cmp (bad) clc loopne mov pop cli (bad) jns add fdivrs sub negl and jno push imul movabs mov fcmovnu icebp xchg mov rcr cmp pushfq pop movsl mov add fmulp xlat nop rex.WXB xchg jb (bad) lods cmp cwtl fsubs lea jle push rex.WX add sub ds cmp fmull movabs ss roll test out rclb pop stos sbb mov push ja xchg adc and lret out orl fildll (bad) pushq push mov rex.RX rex.WRB mov jrcxz cmpsb jnp in add jp cs add icebp movslq rex.WRX movl fdivl sub stc fistpl loope rex.B (bad) (bad) (bad) adc pop movabs fisttpl xor push rex.X test rcrb movslq data16 cs rex.RB cmp movslq jne out gs (bad) cmpsl pushfq jnp movslq lods mov xor (bad) xchg clc push movabs fwait (bad) loope xor pop scas rex.WRX (bad) mov jns or mov jmpq sbb push test push and int3 push xchg cltd mov ror movabs or (bad) divb ffree cwtl iret leaveq xor cmp rex.RXB jle iret cmp enterq int add sarl xor cmpsb test std jle (bad) idivl pop pop cwtl push (bad) (bad) pop jne std test jl cmp jrcxz (bad) fs addl xchg insb shlb and or movsl mov xor movsl mov and rex.WRX xor jbe lods mov xchg pushq sbb iret jg rex.X rex.WR vpunpcklqdq mov push (bad) ucomiss adc add rex.WRXB adc (bad) cmp (bad) and lret outsb and rex.WXB cltd rex.WX movabs mov xchg sub sbb jno push rex.XB jle jle xor (bad) out cmp pop sahf test mov out cmc pop lahf sub mov lret jb jbe xchg mov lret push fsubs (bad) rcll push (bad) stc jge lea xchg insb xchg sbb xchg xlat loope (bad) rorl mov rex.WXB push xchg jb lret jnp (bad) repz lret test fsubrl cld add mov int3 (bad) sbb lods (bad) sarl (bad) test rcl mov fadds or (bad) scas jne leaveq loope ss xor add cmp sub js lret (bad) (bad) rcrb mov or lret clc fiaddl mov cwtl xor stos icebp adc sub xchg jp testl pop sbb (bad) pop cmp loope rex.X rex.XB rex.RX push jo loop adc mov mov xor mov stos (bad) icebp xor push sub popfq or xlat pushq out lret (bad) mov ja push pop popfq sub (bad) jb lock (bad) scas fstpl rex.B outsb (bad) fmulp retq pop cmp xchg or hlt cmpsb (bad) push out retq fldz xchg xlat mov fstps lods jg rolb stos rex.WB outsl xchg (bad) (bad) lock xchg ficompl sub sarb jbe push sbb stc loope cmp fldcw mov rex.WB mov adc out xor jno repnz cmp rex.RB xor sahf notb adc fwait xchg pop retq rex.R loope out jae sahf (bad) and repz xchg xor cmpsb jne jg lret fisttpl rorl rex.B xor out push jno add ficompl rex.WRB fwait or (bad) pop (bad) push mov std negl loop lahf imul (bad) and stos es (bad) fsubr (bad) lret add pop pop nop rex.R jno cmp iret (bad) shrl (bad) (bad) rex.WB fildl rex.X in movabs and adc push outsb iret (bad) loopne mov add (bad) xchg pop pop jl jmp fildl scas (bad) mov (bad) fisttpl ds int insl (bad) add sub neg out add (bad) cmp (bad) in pop pop sub mov test (bad) jne (bad) stos ss fcmovnu cbtw add retq stos hlt (bad) jg mov je (bad) rex.B fistpll and callq jo fisttpll mov and cld (bad) (bad) stos cmpsl fcmovnu mov mov jl jo rex.WRB xchg stc cmp mov fldenv (bad) mov fistpl xor stc mov fcomps mov stos (bad) cmp mov cmp pushq loop ror (bad) stos leaveq rex.XB add test pop xorl sub xchg int3 mov insb stos (bad) rex fist (bad) test iret pop xor cs sbb pop rex.X rex.WRX xchg mov rex.WX adc retq (bad) adc add cltd rex.RB rorq adc mov sbb (bad) adcl sbb or mov enterq mov cmovb and shrb push fadds cmp (bad) (bad) ja (bad) (bad) mov (bad) scas push retq rex.RB mov mov xlat jrcxz (bad) mov pushfq fldt sbb or movabs in lret cmp and (bad) cltd fildl add test pop jmp imul sahf fwait pushfq and insl (bad) rcl je rex.B retq xor pop (bad) rex.WRB xchg lods push fisubl xor rex.XB push mov mov icebp lret jrcxz (bad) fcmovnu hlt imul mov cmp push fwait add pushw (bad) pavgb pop sbb scas (bad) sahf jnp (bad) add cmp cld pop fldt mov (bad) fstpt fidivrl outsl jnp shrb mov rex.WX mov out rorb sbb ss push rex.RXB es ja mov mov (bad) (bad) jp and add pop retq jae mov scas (bad) ss fldt mov movslq adc pop data16 hlt fsubrl insl xchg std rorb xor fsubl pushq rex.RB fnclex jrcxz xor or jmpq (bad) (bad) loop rex.B bnd test sbb loope gs rcr push jnp sahf cmpsl mov pop mov pop adc mov (bad) testl push movsl stos mov fstpt and fistl mov jge sbb fildl (bad) repz push pop pop jmp outsl xchg lret xchg (bad) es repz jmpq (bad) jp neg cld cmp mov and cs xchg (bad) jne xchg sub push movslq mov fidivrl pop rex.WXB cld (bad) xchg orl scas mov fldcw scas rcl or jne (bad) xchg rcr xchg (bad) out mov fldt jmp callq sarb or fcomi retq (bad) push popfq imul andb retq jmpq sub mov mov shlb jmpq and imul loop xor xor adc sbb (bad) fistpl (bad) sbb in rex.W xchg loop rex.WB (bad) rex.WR (bad) pushq lret sbb icebp jg push jne (bad) cmp sar xchg pop cmpsb (bad) sbb sbb iret rex.RX jge cmp in mov xor (bad) pop test repz sti jns (bad) (bad) xor mov sub jle js (bad) jbe icebp pop in push pop movsl pop repz mov mov xor cltd cmpsb lods out (bad) mov cmp movabs mov fucomi mov add and push int3 push repnz fistpl (bad) sbb mov cld icebp and (bad) mov xchg sub (bad) mov stos std hlt rex.WR xchg cmp cwtl or add mov jo push mov lahf retq push mov and jns insl pop sub rex.RX rex.X jbe imul adc rorl cmp cwtl rex.WRX xchg js jrcxz adc in or fildl pushq cli nop lret fldt movabs sbb xchg jns rex.RX cltd cmc retq mov imul mov fistl (bad) loope and lods cmpsb xor (bad) pop sub pop cs (bad) cmp outsl or jmpq pop stos sub add in cli xchg mov cwtl mov enterq in add jbe insl je (bad) xor and sahf retq fstpt push rex.WR fildl test nop rorl jge rex.RB fildl jnp push sbb mov sub rcrl sbb imul out icebp in clc rex.WX pop push fisttpl sub fadd fcmovnbe test repz (bad) outsb xor clc add loop adc (bad) test adc fadds jo cmp fldt xlat or clc mov (bad) and (bad) addr32 and movabs rex.B pop decl fstpt jp rex.X test or fisttpl retq rcrl or movsb rex fwait sbb xchg (bad) test imulb (bad) xchg rex.W rex.XB es cmpsl rorl push xlat shl rex.RB vpand xchg jnp cmp mov mov callq fisttpl shrb jle sarl cmpsl cmp cmp sub xor test sub pop (bad) fwait outsb pop jl sub fisttpl cmp sarb rex.WR pop rorl pushfq sub adc fildll xor (bad) (bad) mov int hlt mov lahf xchg in pop sbb pushq mov mov int3 (bad) lret rex.WR pop not js rex.WX rex.WRX ds data16 (bad) testb add mov pop sub movsb rex.WR movabs mov push (bad) add (bad) lahf (bad) add mov in jnp fs pop jo fimul and nop sbb mov jbe fistpl push mov cmc sub lock push xor add movsb insb popfq xor imul pushq fistpl jnp push fmuls (bad) mov or out (bad) jns sahf loop pop f2xm1 fmull test fistpl mov xor jmp (bad) pop faddl cmp fistpl (bad) (bad) push loope (bad) int sar (bad) sbb mov fs enterq or jae movabs mov fs (bad) pop mov and jrcxz jno push and jne lods shll mov rex.WRXB rex.X fistpl mov popfq (bad) sbb cld ds sbb pop or ss xchg (bad) insl jo rex cmp xchg mov or movsb (bad) rex.WRX adc cmp xlat (bad) sti fmulp xchg cli jrcxz push fldenv sbb jo sahf lret fiaddl and mov (bad) (bad) xlat int3 cmpsb ja leaveq adc jnp cld jmp sub (bad) stc pushq adc stos lret sub (bad) adc xlat jnp imul rex.XB rex.WRX (bad) cmp adc (bad) xor test out mov and cs jnp movsb jbe (bad) sbb scas cmp rorl fldl mov retq and push adc mov xlat movabs lret rorl int pushfq push imul sbb rex.WRB xchg (bad) cmp bsf pop (bad) (bad) in xchg in and pop movsl pushq (bad) mov fsts negb jne jle rex.XB rex.RX and (bad) movabs rex.RX ficoml stos mov (bad) cmp fwait pop cmp sbb mov fstps xchg jle shrl mov add xchg imul mov cmpsl pop adc pop xlat fcmovnb mov (bad) xor fneni(8087 ja mov shlb hlt fnsave xrelease xchg pop sub rex.X nop movsb pop sbb cmpl push rex.WRX outsl stos mov (bad) (bad) fwait sub (bad) push lods jge in in (bad) lret fcmove sub imul fstpt xor lret rex.WRX pop push mov (bad) roll repz rex.WB mov and scas sub decl clc outsl fistpl (bad) repnz (bad) push (bad) movabs push (bad) lods (bad) pushq jns fwait (bad) (bad) (bad) (bad) (bad) ss fildl sahf pop loopne (bad) and rex.X (bad) or out lods pushq fsubrs rcrb (bad) imul rex.WRXB add (bad) callq fildl leaveq and jo mov add pop notl adc push ja pop fstpt ss cwtl in fldt push rex.WRX fs out rex.RB jbe iret or movabs stc rex.WR jge cmc out or mov iret (bad) mov pushq jbe push add (bad) jmpq pop in (bad) (bad) pushq (bad) push sbb xor cmp popfq in pop and lahf and xchg fnstenv adc (bad) mov icebp pop data16 rex.WR repnz nop js pop jmp (bad) jns jnp ja mov sbb orl sub mov xor rex.RB fwait cli sbb (bad) xor fwait and or sbb rex xchg imull jg (bad) jns addb pop push pushq clc pop (bad) (bad) jl adc jns jne mov mov addr32 jrcxz xor ds nop fwait shrl movabs in mov rcll callq (bad) movabs and movsb lret mov push sub or (bad) std fs movsl outsl popfq fsts fwait je (bad) xchg pop cmp xor movsl cmp stos mov fildl mov pop gs jle,pt (bad) cmpsl (bad) jge xchg cmp adc add fisubl xor fsubrl mov cmp add fstpt lods pop fsubrs mov and jge movabs gs push sarl stos xchg sub es cmpsl adc cmp xor std fimull mov pop and (bad) ja pop (bad) xchg sub sahf jb movsb fs mov and pushq psrad fwait sahf stc mov sti sbb sub lret pop (bad) xchg rex.RXB stc mov mov sbb imul mov xlat push insb add push push add push mov xlat mov push test (bad) xorl push lahf mov jbe adc loopne (bad) jg fimull movabs pushq or loop scas push mov movslq imul ds ror xor pushq sbb fs push xor sbb mov mov add out pop mov jp and jmp movsb pop rex.WX (bad) rex.WX mov add push hlt iret and (bad) (bad) rcrl xchg ror mov mov insb xchg adc or (bad) fwait (bad) sbb or sbb or pop ds xchg rex.WX andl fcmovnbe sbb rex.WB rex.RXB cwtl rcr mov (bad) cmpsb adc rex.RX and ds rex.WRXB fucomi outsb leaveq jbe (bad) test mov xchg ja cmpsb mov sub xchg insb outsl mov cmp jae adc (bad) (bad) (bad) fndisi(8087 rex.RB data16 mov (bad) insl mov imul (bad) testb out sub xchg subl movabs jne adc scas (bad) sbb (bad) mov or add (bad) jmp xor andl rcr mov outsb (bad) jge fistpl mulb movabs sbb pop shrb adc or addr32 insl add hlt (bad) (bad) or jle xor sub jg mov (bad) (bad) or mov mov jnp hlt in jle add std mov jmpq enterq gs imul sbb add rex.RX pop jle add and jns lock sub fldt mov sbb rex.RXB sti mov xchg fistpl xchg cmp lock (bad) fwait je and mov lret (bad) cs rex.WRB int3 sbb mov test xchg (bad) in (bad) cmp rex.RX imul mov (bad) rcrl rex.RXB pop cli and ss lods pop loop in (bad) cmpps mov dec stos cmp (bad) jrcxz xchg and mov stc pushfq movabs add movsb push fdivl rex.XB rcrb (bad) and rex.R sub (bad) sbb (bad) mov (bad) mov adc pop pop jae jnp sti cmp cltd imul frstor (bad) out cmp mov jge fadds cmpb ss cmp adc sbb mov callq (bad) pop (bad) (bad) pop adc jg mov (bad) je jbe mov sub (bad) xor je (bad) es cltd pushq sbb (bad) test scas (bad) cmp rex.B or pop (bad) (bad) (bad) xchg (bad) cmp push xor pushq rcrb (bad) adc xor int3 int jnp (bad) roll test (bad) idivb cmp negl sub out or iret xor outsl movabs (bad) int cltd push (bad) or fcoml icebp (bad) mull (bad) cmp stos sub lods xor fisubl (bad) (bad) (bad) sbb and pop cmp cmp fstpl and mov xchg cwtl or xchg mov cmp xchg insl mov xlat sub (bad) push push xchg jg (bad) and rex.RB mov xchg rex.XB rex.WB es (bad) icebp in leaveq out cmp imul add xchg (bad) popfq jnp out xor cmp adc xchg xchg loope adc rex.WRX (bad) mov fisubl pop vpunpcklwd (bad) js (bad) insb fiaddl hlt add (bad) rex.XB jo cmp jae loop mov fyl2x rex.WRXB xchg mov jge push adc sarl adc fidivl hlt mov cmp (bad) lods in push xor mov imul test xchg (bad) pop add leaveq enterq sbb retq rex.WXB jp jae lret or (bad) (bad) mov and sahf retq pop mov fucomip mov retq rex.WRX test cli mov fistl (bad) pop rex.XB push iret rex.WRXB jp rex.XB and movslq jo mov (bad) xchg xor fldenv (bad) sbb mov fildl adc (bad) pop (bad) sti flds pop fstpt (bad) movabs adc addr32 fldt lods addb sub pop or andl pop iret adc jle enterq pop mov cmp rex.WRB rex.WR sbb xor popfq add int push pop pop test fwait movsb pandn insl sbb (bad) ja js lods fstp test (bad) sub adc add add pop adc rex.WRXB mov fldcw test rcr jmpq xor loopne stc push xchg xchg (bad) sbb (bad) jnp (bad) fcompl adcl rex.WXB rex.RX mov adc mov ss sbb xchg mov xor adc and shrb (bad) stc pop add js imulb pop push add (bad) (bad) retq sahf pop cmp (bad) (bad) mov xor fsubs scas jle out fildl sbb rclb rex.WXB scas adc fcmovne jno out adc pop pushq cmp lret push movabs hlt mov mov retq fstpt pushq mov enterq sarb (bad) rex.RB (bad) jnp (bad) mov xchg pushfq pop add and (bad) jae lods jrcxz lret stc clc cmp mov mov mov fldt mov outsl push (bad) mov leaveq mov pushq rex.RXB int stc adc mov adc clc adc outsl jns rcll rex.W pop lahf rex.R jne rex.WXB rex.X (bad) fcmovnbe (bad) (bad) add cld sub mov imul icebp pop outsb test jp mov rex.W pop cmp imul fiaddl sti xor movslq push fs rex.RX (bad) leaveq jge popfq lea test (bad) (bad) (bad) (bad) push xor mov push decb pop ficomp rex.WB rorb mov add rex.WB in lret pop (bad) (bad) (bad) xor hlt rex.WXB sbb stos sti xlat ja and out movabs jmp sbb pop sub ss retq callq jbe jmp rex and shld fnclex fbstp (bad) jle pop pop mov movslq pop test insb sbb out adc (bad) jne (bad) cld sbb push imul (bad) stos imulb xor sbb ja (bad) jg xor fcomi adc jge and int movabs in pop pop fs and retq int and or cmp xchg cltd xchg int cmc add mov movabs push jmp fstpt fistl lods gs and cs and retq cmp loope mov push outsb sahf fcomi movsb (bad) xchg xchg int3 rex.WB cltd shlb sbb (bad) lret cmpsl push and fstpt rorb and movb fcmovne rex.WRB sbb jl (bad) (bad) lret cmp (bad) pop nop pop stos (bad) (bad) xchg fwait (bad) (bad) in mov fcmovnbe mov xorl push (bad) or cmp pop out rorb ds xor push icebp test mov jns jmp adc jmpq hlt movsb sbb rex add (bad) jo add or lods pop test ds notb sbb fist and (bad) xchg fistl or rex.XB (bad) movabs and es imul outsl hlt add xor (bad) xchg (bad) jrcxz int3 pop es mov mov rex.WRB rex.RXB pushfq rex.WB and (bad) mov (bad) mov adc fildl rex jp mov jo lock addr32 cmp test xor retq jo push cmp jae andl mov push pushq pushq pop sbb push or jae push mov xchg rex.RB stos rex fcmovnu adc mov outsb (bad) rex.WXB add fcoms cmp fstpt ss xchg adc fistpl (bad) mov loope mov xchg rex.B movsl fcmovnbe iret jmp jnp pop rex.WRB icebp xchg (bad) pop fldt fiadd cmp cld stos ds gs pop sub stos lret xchg lret ss (bad) imul push movsl lret (bad) pop (bad) rex.XB adc jmpq mov xor (bad) push mov gs rcll jge je (bad) or imul pop and cmp sbb (bad) jns cmp movsl mov fcmovnbe (bad) pop out clc and fcmovne stos adc xor mov movabs add rex.R sbb push std (bad) (bad) pop fldt mov orb pop add fs rex.WXB push popfq int3 sarl rep (bad) push fcmovnb push push mov and pop (bad) (bad) stos loop sti jrcxz imul rex.RX subl fldl push adc xor int clc lahf xor fstpt jb pushfq mov adc andl leaveq js (bad) movabs jge and xor mov enterq cmc (bad) iret pop xor sbb add movabs (bad) icebp fistl sub xchg fildl (bad) mov (bad) (bad) cld fucom (bad) scas fisubl (bad) (bad) (bad) rex.RB adc pop sub xchg jae cmp xlat enterq out push (bad) add mov fistpll jb (bad) jrcxz or movabs push xor pop jle cmpsl sub insb mov (bad) (bad) mov sbb sbb (bad) (bad) adcl jmp ja mov sbb pop jnp pop cs fistl cmpsb pop sub repnz pop and xchg and lahf (bad) rex.WRB repz (bad) and fldt icebp pop std fstpt jrcxz pop and ja cmp enterq lret rex.R gs (bad) (bad) (bad) mov mov fstps or fidiv data16 fistpl sbb or xchg or sti add jmpq (bad) rex.RB mov rex.W mov cmp pop push outsb movabs stc cmp (bad) xchg jrcxz (bad) repnz (bad) stos (bad) cmp mov rex.WB gs cmpsl cmp nop loop fisubrl jmpq pop imul fwait stc jmpq movsl rex.WX mov push mov (bad) test ja jne insb rex.RB rex.WRX lret push lret retq rex.WRX xor pop orb lea ja (bad) pop stc ficoml sarb lret xchg (bad) stos xchg sbb rex.WXB retq mov (bad) mov pop (bad) sti push lock sub rex.WXB lcall pop (bad) mov cmpsl mov imull xor pop rex.WRXB xchg (bad) fnstcw sub mov push icebp out cs rex.WX mov movabs or adc jbe rex.RB rex.WRX xchg jae mov sub (bad) and addr32 adc pop loop insl fucomip jp pop push jle pop cmpsb xchg mov fwait (bad) pop xchg insb jae rex.WB sbb cltd (bad) clc cmp cmp mov pop fcoml add fmuls lods xor (bad) out rex (bad) rex.RB pop xchg out xchg loope (bad) (bad) mov repz push (bad) mov pop js add (bad) jns xlat xchg jns (bad) and jo xor jrcxz rcl (bad) cmc pop jbe mov in repz fnstenv sbb jo (bad) (bad) add pop jmp ja and xchg rex.XB fwait rex.R je or mov ja push out (bad) (bad) cltd imul (bad) rex.RXB rorb cmpsl pop hlt (bad) jae (bad) cmp divb push or scas mov rex.R xchg pushfq test pop sbb adc fmul push push out cmp fiaddl cmpsl rol (bad) cld stos adc pop ficompl fisub rex icebp (bad) push sti sub (bad) incl (bad) sbb loope stc pop sbb movslq (bad) (bad) icebp or rex.R mov imul (bad) fs std and jge jo cmc leaveq sti sahf pop pushq cwtl pushq retq jl sarb sub pop (bad) (bad) jb mov rex.WB loope (bad) fidivl mov sbb (bad) xchg stos mov or ds out mov (bad) stos mov (bad) pushq lods mov xlat rex.WR lock jb and mov nop sahf (bad) adc out jmpq fistpl (bad) insb (bad) mov cmp data16 rex.WRX out cmp (bad) icebp hlt push jle cmc (bad) pop xchg insb fwait (bad) test (bad) divb pop rex.WRX xchg imull loop in movabs sub retq nop xchg fldt std subl (bad) pushfq sarl sarb repnz (bad) stc cmp cmp rex.WR add (bad) xchg rex.WXB test scas idiv insl rcrb pop outsb (bad) jg mov movabs rex.WR xor je retq hlt fwait sahf jnp jl in (bad) test shrl and (bad) callq stos push push xlat sub pop (bad) roll test imul fsts movabs rex.WB (bad) sub sub add pop int repnz rex.WB loope pushq fcoms popfq cs mov out movabs rex.X jge rcrl mov lret push jb pop in ja cmp add (bad) or (bad) rex.WRXB (bad) add out add cmp (bad) (bad) or mov pop sbb jrcxz insb icebp mov sbb (bad) jno mov jge cs cmp rex.WR cltd sbb hlt js sub (bad) add loopne push (bad) test fmuls add cmp rex.WB lods add jb cmp mov adc sbb xchg sub jl xor cmpsl (bad) movsb sbb (bad) insb xlat cmp add iret (bad) adc pop std iret sub xor rex.WX imul (bad) repz fld xchg (bad) rex.RB adc xchg jne test scas lret mov (bad) in xchg int3 std sahf dec mov or out and jne fcomps mov adc xor pushfq mov test movabs iret jae in in xchg cs jae stc (bad) pop mov push (bad) push fbstp rex.RB cltd repz cmp xchg pushq and xchg fcmovnbe push sbb int3 mov push scas loop retq insb movabs (bad) push (bad) sti cld xchg pushq cmp insb jp sbb lret adc (bad) push mov (bad) mov (bad) mov add addr32 in mov shlb test mov (bad) (bad) pop xlat rex.WRXB movabs (bad) pushq (bad) or pop jb xor adc movsb sub push lret enterq cltd adc push pop and or or mov jns push (bad) rex or cs ffree jo movsl jo xor in mov test std xor cmc movsb mov scas cmpl sub or rex.XB addr32 xor (bad) pushfq fwait (bad) hlt rex (bad) (bad) shll mov nop sbb stos push (bad) or fstps sub rex.WXB addr32 (bad) psubusb stc rcrl pop (bad) stos sbb (bad) jp mov xor pushq (bad) (bad) rex.RB push mov retq jge scas cmpsl jg enterq shrl push mov clc fimull push loopne rex.W out mov (bad) lods movslq sub (bad) in sub iret push xchg push (bad) jne jl je idivl push rex.W push movb scas (bad) jp (bad) xor fdecstp sbb sub mov rcrb lret (bad) cld (bad) sub jle sahf fwait pop rex.W xor xor xor mov mov sub (bad) or rcll jrcxz pushq (bad) test push fcmovbe in addr32 (bad) stc xorl pop xchg rex.WR adc insl jle sti (bad) fcmovne retq stc sub mov sub jmpq push test adc ja jp gs sbb (bad) fildl xchg fcmove vfnmsubpd movslq jge fwait (bad) lods sub (bad) lods (bad) idiv (bad) push test (bad) out outsl adc (bad) mov rex.WXB fwait out xchg sarl movabs loopne enterq lahf (bad) fldenv (bad) (bad) pop sub scas data16 push jne rex.WRXB hlt xchg mov out sub fwait movsb shll cmp mov sbb adc fildll jp (bad) mov mov (bad) push jmpq ds mov pop xchg in sahf gs enterq int3 xorb cmp xchg mov sti push (bad) jae stos pop cmc rex.WRB hlt mov sti addl (bad) fldt (bad) and (bad) add cmp insb cld out pop movabs cmp add out sbb negl (bad) xchg movabs add cmp sub mov ds rex.RB rex.WRB jmp rex.WB and cmp sbb (bad) test movabs cmp rex.XB hlt imul xchg js (bad) xor ds mov jne rcll jae fcmovnb xchg enterq rcrl sbb int3 mov cli xchg retq add rex.X sub icebp fnstcw movabs rex.WRB sarl fucomi pop ja sbb gs outsl movabs fistl (bad) mov fcomi lret rex.WR rex.WRXB mov rex.WB jrcxz fidiv pushq (bad) mov rex.WR sub push mov rcrl movsb mov (bad) push (bad) mov fldt cwtl mov lahf pop mov sub retq out (bad) movsl rex.WR lret and fnstsw mov cltd movabs rorl pop sbb cmpsl push or jrcxz (bad) lret or xor (bad) rex.RXB out movabs (bad) icebp xchg fistl push stc loope iret fisttpl xchg xchg subl out ss adc xchg pop mov jns (bad) jle pushq (bad) (bad) push in (bad) xchg fildl ficomp ss pushq mov sarb jl jrcxz cmp (bad) jmpq pop pushfq scas outsl mov rex.WB pop test fisttpl out cmp rex.WRB popfq mov out pushq mov imul sbb (bad) movabs or (bad) cmp lods xor mov repz (bad) jne mov mov mov mov fisttpl mov (bad) rex.RX mov test sarl gs adc (bad) outsb (bad) jns test pushq push je repnz enterq sub imul fsubrs add cmpb movabs jae (bad) xlat (bad) rcr adc loopne sbb xor pop nop rex.WRXB sbb mov pop loopne pop (bad) mov movsb fldenv loopne or sar jg (bad) cmp adc xchg mov rex.W fs jno jbe movsl (bad) jae push insb cmc or fldt iret out pop push fistpl mov and retq rorb lods (bad) push rex.WRXB jbe (bad) out movsb (bad) loopne mov negb xchg sub pop mov cli sbb fldcw adc push and int rex.RX (bad) sbb xchg push rex.W decb adc pop sub rex.RXB push out iret fwait subb stos rex.X fildl (bad) rex.WRX mov push xchg mov fcomp cmc jb (bad) cmp mov or fisttpl rex.WB pop sub lods roll mov pop pop fistpl sbb loope pushq lret mov in pop incb (bad) or fimull mov pop lret add pop cmp cmp imul pushfq rcrb pop jnp scas cmp ja fsubs repz imul jb in (bad) (bad) pop popq mov mov imul (bad) push test pop cmp outsl rcr jae,pt fistp ficompl data16 sbb xor sbb (bad) cld lret insl pushq pop outsb pop loop mov rex.RX xor test sbb push push sub hlt data16 and js movslq jle (bad) (bad) maskmovq negl test lock int xor mov outsb cmpsl mov scas add (bad) fistpl xor js (bad) (bad) retq xor fildl mov cwtl sbb in pop xor (bad) (bad) enterq sti (bad) fs or (bad) loope sbb sbb cli mov push fucomp popfq mov add mov pop add divb test fstpt jne cmc enterq cwtl (bad) rex.RB jb out add (bad) push sar popfq (bad) js pop (bad) (bad) (bad) jnp xchg int add rex.RXB push (bad) clc pop sbb loope and pushq rex.R sarb vmovntpd fildl rorb movslq pop xor cmp add (bad) test hlt (bad) jg movabs pushfq pop pushq (bad) cmp pop pop sbb xchg push in clc rex.RB shrl adc or fildl pushfq push fdivs mov mov mov fisub sbb or in xchg out sti mov (bad) and sbb mov mov (bad) cmp mov jrcxz pop (bad) sub xor fwait xor rex.WB xchg push pop int3 int3 xor push fstpt sbb add ja imul pushfq movabs cmp and retq jl fldt fcomps pushq lods or jae and pop rex.WRX fbstp sbbl rex.WRXB test pop jbe jle (bad) jae jge fwait pop mov mov gs movabs or sbb pop rex.XB (bad) mov mov loope iret orb (bad) mov sub movabs mov jo mov faddl sbb fidivrl xor test mov cltd hlt frstor add xchg (bad) (bad) cld and fistpl out (bad) (bad) (bad) lods add retq xor cmp rex.XB hlt pop or (bad) setns callq xor (bad) jge sub (bad) fistpll rorb retq sub add (bad) push cltd pop fwait (bad) or fcmovnbe (bad) lret (bad) rex.RB (bad) lods icebp rex.W mov pop mov movsl out cmp mov movslq rex.WB fistpl mov (bad) (bad) push (bad) mov cwtl (bad) cmp gs mov (bad) je rex.WB sbb pop sub jg xor movabs stos fidivl push and (bad) xchg mov ficoml (bad) insl (bad) sbb in xchg cmp (bad) cmp loopne out pop (bad) data16 pushfq push fidivl imul fisttpl xchg mov or mov jb incl outsl (bad) rex.WRXB ficompl jmp sub maxps cmpsl pop add push ss data16 jne rex.WB cli es sbb hlt fimull test mov push mov decl rex.RB loope ds repnz rex callq ja sub rex.WR rex.RXB rolb mov pop fnstcw add xchg gs fldt cmp mov lahf mov rex.WR xchg stos incb cmpsb std adc (bad) (bad) and mov sbb cmc fisttpl jle fisttpl sbb mov movabs lret outsb xchg mov mov cli fistl (bad) mov push rcrl mov or (bad) out adc rex.W pop outsl (bad) (bad) enterq jno push pushq sbb sub jne mov jbe and pop stos fwait movsb (bad) (bad) hlt fildl outsb (bad) insl jb scas lahf movslq jmp leaveq rex.WXB fnsave xor xor xor test movabs faddp repnz push xchg pop notb cmp push enterq rex.RB sbb and lret divb add retq std out and mov cmpsl jns adc cmp loopne fistl fcoml xor fistl xor sub (bad) iret pop (bad) or (bad) xor mov imul xchg mov test cli js push (bad) (bad) jl sub sahf pand mov int3 (bad) (bad) lods or mov (bad) repnz jle ja adc jp adc mov mov (bad) fistpl in mov fildl jb ja outsb (bad) fcmovnu (bad) or scas movsl (bad) (bad) scas mov (bad) sub mov cmp adc jo rex.WX (bad) jmp pushq jrcxz imull cmp pop sbb in mov xchg mov fcompl (bad) adc (bad) jnp add mov pop test push rex.WX or (bad) (bad) mov jno cmp and jp jnp pinsrw pop pop fistpl (bad) adc jae or xchg ja rex.WR pop (bad) pushq rex.WRX xchg int pop fildl cmp sub (bad) sti scas jbe rex.WRB popfq fistl mov rex.WRXB mov (bad) insl je testb or pop lods test push jp mov pop hlt push insl int clc imul mov fistp ss (bad) add pop jno imul movabs xchg jmpq lahf callq fistpl push pop push mov mov rex.R adc mov (bad) xchg mov and add sbb (bad) fcomi adc stc sbb cs lods clc lods rex.R mov push sub pop in add (bad) data16 int mov and cmpsb fistpl mov xor fmuls add int3 lret and jl jo mov (bad) pop or adc rex in pushq add add in jrcxz clc mov (bad) idivl movsb xlat mov xchg add xchg outsb xchg sub (bad) cmp (bad) (bad) (bad) je (bad) pop fisub sbb movabs cmp fwait (bad) pop cmp xor mov in pop and (bad) mov jmp sub pushq pushq mov rex.RX (bad) xchg fnstenv iret rex.WR fwait adc pop pop loope fucomi xchg sbb cmp push fcmovnu jns movsl (bad) mov fidivrl sarl roll jns int push mov movsl lock push mov mov rex.R xchg (bad) xchg (bad) mov movabs ds out cmp retq (bad) gs sbb fstpt push rex.WX cmp rex.WR mov lahf rex.WX or mov or out xchg xor (bad) clc lock or out jae in fadds rex.WXB sbb rex.WR cmc push lock pop (bad) loop (bad) mov addr32 rex.WRX fcmovne rex.WX loopne (bad) clc movabs (bad) pop leaveq mov callq in pop ja icebp pop iret jle cmp sbb xchg or (bad) sbb adc sbb sbb (bad) jno push int cmp push or xor imull sti fiaddl out out rex.WXB lahf push test mov sbb (bad) repnz mov out rcl loop movslq fwait push in and scas movslq test jge rex.WB (bad) flds push cmp test outsb rex.WX jg fisttpl movabs sti (bad) int mov (bad) ja (bad) (bad) int cmp xchg jnp xor rcr in loope fadds jns movabs rex.WRB rex.X pop jl repz add pop push adc mov insl jnp and iret xor xchg movsb sbb pop lret xor cli and pop xchg pop fsubrl sub lods loope movabs nop out (bad) jnp ja fs mov loope adc and pop fldl insl or movabs xorl shrb rex pushq (bad) xor sub (bad) movsl cmpsl (bad) mov xchg jae in js jns lock (bad) push std in sub movsl jbe xchg xchg push (bad) (bad) lods push rex.WR xchg pop sub (bad) lret cmp pop mov sahf rex.X rex.WX fisub or adc (bad) pop leaveq push jb fidivrl ja fstpl in rex repnz cmp rorl jne sti jp (bad) (bad) cmp jge pop loopne jb pop (bad) jle (bad) ror push mov sahf movabs fbstp fmul adc (bad) fwait out pushq jge mov (bad) ss fcmovne movabs xchg rorb movabs insb push mov xchg (bad) (bad) (bad) fwait cli (bad) adc rex repz fiaddl (bad) (bad) popfq repz rcrl repnz xchg mov rex.W push andq rcll jmpq mov push lret rex.R jnp addl pop shrl popfq push mov adc sub sub iret ss mov iret adc (bad) mov xchg push cwtl fsubs retq ss (bad) icebp std mov pop fsubs or and (bad) movsw mov enterq retq icebp sbb mov add in push xchg rex.X add (bad) sbb mov xlat mov rex.WX pop xor js fstp lea jle sbb adc (bad) pop sbb xor stc cmp push (bad) test (bad) (bad) (bad) cltd push rex.WR (bad) mov movsl flds (bad) rcr xchg pop add jno cmp or insb loope (bad) lret or jle ja (bad) or lods loopne outsl (bad) cwtl mov or mov mov xor xchg movabs jnp inc fldt mov gs sbb fstps jno addr32 cmp rex.RX rex.X add movslq jo rex.WR xchg fcmovnb (bad) push mov cwtl outsb jne outsl fs fcmovnbe cmpsl movabs jrcxz icebp decl rex.XB in mov jnp pop cmpsb or jle fildl scas stos xchg fildl push iret loope pop (bad) insl fistl fildll int imul jp loope push jnp xor gs movabs rcrl cmp pushq rex retq xchg loope mov movl (bad) (bad) (bad) mov and repz out (bad) insb (bad) mov scas pop pop in (bad) (bad) jl imul jns fistpl rex.W (bad) ja mov (bad) callq or and xchg mov push rex.WRB fdivl loopne lret (bad) (bad) sub (bad) jmp pop ficoml bnd (bad) mov add enterq (bad) push and mov jg pop jns cmp and jp fidivrl cmp (bad) and retq rclb or sub jge xchg sub pop jnp gs movsl fcmovnbe cmp xchg mov rex.WRB mov movabs insl fldt push (bad) mov or lock in (bad) rex.RB and mov pop and (bad) gs add xchg movabs add cmp jb std rex.X xor xor xchg fisttpll mov (bad) int3 fstpt fsin sbb xchg cwtl (bad) rex pushq loope fistl mov pushq and sbb xor cltd add addr32 and cmp rex.W out loope push mov scas push ffreep nop rex.XB loopne cltd rex.RXB gs or mov sub rex.WRB (bad) (bad) jnp xchg rex.W cmp xchg iret sar addr32 fldt pop pop (bad) mov ja mov rex.RB sbb rex.WR (bad) pop subl out fcmovnbe pushq adc rex.WX push ror in cmp insl cwtl (bad) fcmovnb add lods rex.B movsl fistl mov (bad) gs int3 xor xchg rex.RXB pushq sbb sbb jo jmpq stc fldt mov int3 in outsl cli movsl rex.WRB scas adc pop sti mov lods clc xchg (bad) xor movabs xchg add rex.RX stos cmp jg callq rex.WR rex out rex.RXB popfq jmpq sub jl pop out rex.RB jle mov push fisubr mov rex.WRXB xor xor cmpsb in pop xor sbb lods jnp (bad) xchg xchg cld fwait enterq mov jrcxz retq pop rcrb mov insl movabs xchg mov in xchg sub or fnclex fld (bad) add xor stos jge cmp and stos cmc mov mov fistpl cs fisttpl cmp gs fldt (bad) (bad) (bad) (bad) xchg fistpl lret (bad) or pop vcvttss2si fstpt rex sbb push xchg fistpl (bad) xchg cld outsb in fwait pop adc lea (bad) in rex.WRXB jae movslq (bad) fildl sbb (bad) xchg mov cmp repnz int3 jbe mov data16 hlt std add test (bad) xchg retq scas mov cmp out xor (bad) (bad) cltd roll fcmovnb test test insl jle pop scas fwait ja repnz rex.RB push cmp mov movabs rex.W xorb test mov xchg xchg (bad) (bad) rcl adc (bad) lock sbb rex.WXB rex.RXB fcomip pop pop mov jmp jge pop lret rex.W push pop rex.B sbb out mov lea mov xor jne (bad) cmp out (bad) mov mov addr32 jle cmc movabs rex.WRX (bad) push push xchg jle add out pop or fisub scas je test xor sbb sbb xchg movabs leaveq sub (bad) loopne (bad) adc movslq js flds loope mul mov sbb and movabs enterq and imul (bad) push sbb jle in enterq jbe xor (bad) (bad) mov pop jmpq test push pop (bad) xor in mov adc fs (bad) mov loope sbb mov (bad) fwait movsb ja (bad) sub add mov retq jmpq shl rex.WX mov lods sbb mov push fldenv and int pushq mov cmpsb xlat or test cmp xor (bad) repz pop mov data16 rex.WR movabs pop cwtl xchg loop cmp (bad) (bad) pop (bad) rex.R stos test fistp push and outsl push jnp out in rcrl rex.RX retq push xchg repnz (bad) sub roll scas (bad) add pop cmpsl clc rex.RB rex.RXB pop lods movabs sar rex.WB repz out xlat or int ja cmpsb rex.WRB sti icebp cmp sti jns jbe nop rex.RX rex.WRXB icebp rex.WRX lret fstps je ds xor insl in jb adc (bad) (bad) mov nop ja (bad) cmp add fsubrs pushq or sbb in add jge lret (bad) (bad) bndldx test add xor lods sbb adc pop (bad) and ja stos fnsave jmpq xor mov sub mov sub imul add push sbb movabs adc (bad) mov jp sub mov xor mov retq xchg mov (bad) xlat pop xchg fdivp (bad) clc fwait cld xchg addr32 adc mov test mov leaveq retq lahf adc mov fisubrl fchs movslq (bad) je (bad) push (bad) fist cmp and shrl rex.WX (bad) pushq rcl (bad) mov movslq sub scas (bad) rex.WR jbe jle (bad) sub fcoms ss lods add leaveq pop ds pop sbb rex.XB and pop movabs pop (bad) icebp je cmpsl xchg mov push iret test lret jb (bad) (bad) pushq jo shrb cli pop sbbl (bad) clc jl (bad) out mov jnp fisubrl adc test cmp and or push rex.WRXB jp int3 mov loopne mov enterq push (bad) pop jg test mov jg or xchg insb pushq xor jnp (bad) sub out jne sub jae add adc shr out mov insb imul pop ja loop andb mov lods out xlat scas mov pop jne fisttp fimul fwait out and add cmpl scas stos repz push xchg lret cmp xchg fnstcw loop or and xor lret movabs or push mov cmp (bad) push shr and ror lret mov pop cltd adc pop xor cld push xor (bad) sahf adc or outsl adc xchg imul jg es jb (bad) cmp nop stc (bad) in mov js (bad) adc enterq xchg lret leaveq adc fcoms lret stos add mov mov cltd mov (bad) pop adc rex.B fwait adc mov cmp enterq (bad) fucomi jp add callq or (bad) lahf cld (bad) repz push ficoml retq fcmovnbe jg test popfq (bad) fwait mov in fstpt lahf popfq jmpq and cmp xchg and fild lahf fwait push cmpsb loop std push sub mov adc cmp rex rex.WX fcomp and mov movsb pop scas leaveq movabs sahf sub repnz fcmovnu iret rcrl or (bad) popfq add (bad) stos or sbb pop loope adc adc pop (bad) or adc sti mov push stos decl sbb repz fidivl mov lea jo mov sbb movabs stos xor (bad) (bad) (bad) pop xchg rex.WB leaveq pop loopne retq push pushq lea jnp movsl std jne lret mov movabs push test jo fildl xor rex.WX pop rex.WR (bad) lock xchg jp (bad) or rex.RXB xchg test fneni(8087 and rcr pushw push (bad) sub loop (bad) clc movslq xchg (bad) adc cmpl (bad) int3 lods rex.WXB imul sbb xchg xchg xchg pop fcmovnb movslq out push xlat repz (bad) fistpl out pop mov mov iret add fldt jbe out movslq cmp (bad) push xchg insb ss cmc cwtl xlat (bad) movabs jrcxz stos (bad) in cmp sub sti (bad) rex.R in fildl mov (bad) fldl pushq mov fcmovnu rex.RXB rex.WXB rex.X xchg (bad) and jns and fildl sahf data16 (bad) or mov fcompl clc jmp mov adc xor test mov rex.WX pop pop lea icebp fwait add mov pushq fcmovnu push loop xor (bad) (bad) movslq jnp data16 push rex.RX rex.X rex.WRXB pop cmpsb shlb fistpl mov and hlt (bad) gs in jmp sbb (bad) insb push mov sub xor mov (bad) jbe andl mov cld stc or leaveq mov movsb (bad) jl fnop pop int3 sub sahf callq rcr lahf rex.WRXB cmp movslq (bad) adc cmp xor push pop sub adc jl xlat int3 jae (bad) (bad) fcmovne rex.B pop xchg add and es imul push movabs sbb cmpsb int3 loopne fistpl pavgw rol stos or mov ror in mov push jnp test movabs int negb negl push (bad) lock fistl out mov (bad) mov xchg add test add rex.W in (bad) fisubr insl es (bad) adc pushfq divl fwait jns rex.WRX xchg add addr32 insb (bad) outsb and jb or (bad) icebp mov xchg es fistpll jae (bad) jb movsl jbe jle push sbb rex.RXB movabs in (bad) pushq sahf push (bad) and lret sbb out fcmovbe (bad) and out pop rex.XB loop movabs fstl out vpsrld jge jnp xchg lret rex.WRB cli sub push rex lahf or (bad) pop movabs mov out cs xor and lret pop fnstcw or or xchg popfq cwtl sbb push test rex.WX mov add adc (bad) xchg and (bad) lock fsubl data16 sub movsl sti adc mov push lods xchg retq out retq fisttpll (bad) rcrl cmc repnz mov in mov test iret jrcxz push iret xor xchg add pop adc push add cmc cwtl mov (bad) xor outsb push stos push or testl cmpsb xchg cwtl fnstenv mov (bad) shrl sbb jp and (bad) jne ja xchg movabs sbb (bad) jge xchg mov add imul xor or cmpsl stc or add ja (bad) mov sbb mov jb lods push mov lret sub movabs gs sbb cmpsb decb iret and xchg clc jg rex.RXB fisubr xchg je sbb (bad) mov loope stos (bad) sub (bad) fnstenv rex.WRB rex.RXB add pop and icebp nop jnp add rex.XB fldt adc (bad) rex.RB rex.X jmp mov xchg jmpq xchg mov sub cmp stos shll lret adc sub mov mov data16 movsb push pushfq outsb (bad) insl test retq jnp leaveq mov adc ja ss xlat pop je add push add rex.WRXB push rolb outsb push movsl hlt (bad) pop fsubrl lea es jbe sbb mov mov sbb rex rex.WXB mov int retq (bad) mov add (bad) xchg push xchg mov (bad) (bad) repz jne or lods and cwtl setg jl pop jne pop rex.WR pop pop cwtl and enterq (bad) (bad) sub (bad) sti xchg or negb mov sti rex.RX jp push xchg (bad) movsb (bad) sbb xor rclb (bad) push mov rex.W cs rex.WR and leaveq mov jmpq stos jo jmpq lods sub jb sub xor outsb adcb fisttpl (bad) outsl imul (bad) scas (bad) movsb (bad) pushq cmpsl pop (bad) divl cmp fildl fadd add sub (bad) rex.WB mov mov sub test (bad) or mov rolb (bad) and sbb xor data16 callq pop or cmp pushfq imul sbb movsb rex.WRX nop in (bad) (bad) xlat int sti rex.X fistl movabs rex.WXB sbb sub retq pop loopne add movabs pop fistpl sbb rex.R jnp add rex.WRB mov lock mov in (bad) jnp fwait xor in fcom es gs add add or (bad) iret outsl in fsub js rex.W mov fistl fbld insl int3 sahf roll xor and fildl (bad) push movsb cmovae (bad) jns imul fisubl and jnp jle jnp std mov mov lods scas shrb push adc int xchg add imul fcmove xchg out fistl rex.WRB jp stos loopne ja jnp adc std pushq xchg xchg rex.WR mov jmpq sbb movabs jo,pn fisttpl mov jno fldenv adc pop rcr jae std xchg pop and jb xchg movabs movslq pop fldt imul fistl cli (bad) jmp leaveq cmpxchg xchg ror (bad) stos mov cmp mov pop insl (bad) cmc sub pop (bad) (bad) jno subb fsub lahf rex.RXB mov cmp xchg xor push nop cmc mov and cmpsb and stos jno xor (bad) loop gs rex.WB rex.WB data16 sbb int3 pop xchg and mov mul fdivrs (bad) (bad) or cmp add rex.WXB repz xchg movabs (bad) xlat iretq outsl icebp pop rex.XB repz xchg (bad) pop loop (bad) callq int shrb loop stos fistpl cmp or (bad) pop or insl rex.XB (bad) fcomi femms or (bad) out pop lret fcomps push adc sbb sub cmp (bad) add push rorb int3 push fisttpl xchg ss fcmovne sbb rex.B (bad) cmp rex.X (bad) cwtl mov mov fdivrl or adc push (bad) pop (bad) xchg add xor xchg fstpl out leaveq pop movabs pushfq add fldt (bad) push sbb cvtdq2ps cmp lods jnp rorl pushq out fcompl add pop test mov outsl fimull stos mov (bad) mov mov pop fwait pop cmp icebp rex.R in repz jb pop jle pop rex.RXB movabs (bad) sub sub (bad) xor (bad) mov in subb test rex.WX (bad) jb movabs mov push (bad) fs imul (bad) or sub jp cmp movabs pop ds adc rex.WRX xor scas add sti xor or movslq xchg rex.W negb mov and sbb loopne sbb pop mov lret movabs retq push (bad) test pop shrl cmpsl (bad) movsl clc mov pop rcr lret int xchg pop rex.WRXB out xchg cs fstps sbb sti insl rcrb and xor iret scas outsl push push or orl movabs and xchg in movsl pushfq outsl shl (bad) movsb fcoms in sub loopne test sbb jo lods iret gs (bad) bnd push xor imul pop (bad) mov pop int3 push mov insl push movslq cmp sbb pushfq (bad) rex.RXB loope orl lea pop ds mov (bad) jle (bad) mov cwtl (bad) or sti mov xor (bad) (bad) add and (bad) mov hlt imul out jp movslq rex.WXB cmpsl push (bad) sbb fcmovnbe cmpsl pushq out mov pop pushfq mov ficompl fsubrs sub add cld jg push push cmp cmp movsb lea (bad) push addr32 push rex.XB xor sub adc pop fwait jle je sub pop sbb xchg cmpsl or roll (bad) shrl repnz data16 fbstp xor movabs xor std rex.X (bad) sub jmpq mov add (bad) rex.WB scas sbb push mov fwait xchg lret (bad) leaveq (bad) stos jrcxz (bad) enterq (bad) movslq pop mov or mov adc shrl xor cli xchg push in addr32 xor std addr32 pop out push (bad) repnz (bad) cwtl mov fcomp sti mov popfq movsl xchg pop (bad) (bad) pop adc outsl test sub (bad) pop movslq in (bad) mov (bad) in rex.RB (bad) jg fs adc push fs fsubs rex.XB xor adc pop test jb out xchg adc fdivrl test mov push push movslq in adc enterq mov (bad) mov out sbb fdivl adc xchg (bad) push lods (bad) jnp (bad) sarb jmpq mov (bad) cli xchg addr32 xor pop push fnstcw cmp fsts test movabs lods jb rex.WX ds js (bad) fs mov jnp pop (bad) iret lods mov (bad) cmp adc mov lret leaveq mov and jb sub (bad) outsl rorb sub rex.RB push scas jnp (bad) (bad) adc nop (bad) pop movabs (bad) or mov fwait rex.RXB pop mov push push xchg and pop leaveq mov pop shll and sub loop rex.WB push adc jmp xchg imul mov (bad) push (bad) or (bad) rex.WRXB fsubs callq ja lock xchg or fstps (bad) adcl xchg outsl movsl rex.WB rex.X fistp push nop (bad) (bad) (bad) lahf pop xor xchg int3 addr32 lods retq jrcxz fadds stc cs cmp sub mov movsl (bad) and or jrcxz test pushq lods out rex.R and fidivrl adc orl mov test push xchg fwait or enterq push sahf (bad) xchg mov push sbb push jg mov addr32 adc (bad) mov pop xorl sbb sub cld (bad) jp movabs rex.B rex.R adc nop incl rcr fcomps jrcxz add cli (bad) (bad) fcmovnu jle mov data16 jmpq fadds cld rex.RXB and (bad) or fistl cmc jmp push cmp (bad) (bad) lret pop pop rcr mov xchg sbb hlt jns pop lock imul sbb lahf (bad) cs rex.WR in movabs int3 fistpl xchg std xchg (bad) leaveq subb outsl and adc int pop mov add fdiv test (bad) jmp adc cltd pop (bad) out sbb mov sbb or (bad) sbb rex.WR (bad) or jns es pop (bad) add cli pop (bad) pop jnp pushq leaveq xchg loope adc (bad) (bad) rex.RXB (bad) pop (bad) lret pop fldt sub rolb pop cmp (bad) callq or push nop jo mov pop (bad) (bad) je leaveq sbb lret push or orl callq (bad) jns fwait test xchg xchg je stos or pushq xchg subl js adc push add rex.XB or ja test ffree xchg cs and jg (bad) stos (bad) sahf xchg fs pop sub clc and movabs jge (bad) cmp rolb movabs jge (bad) mov (bad) (bad) and sarb cmp loope rex.W cld mov lret ja rex.WX rex.RX movslq add (bad) fcmovne rex.RB addr32 xchg xchg push pop pushq imul and sbbl mov imul js movhps jg in (bad) sub lea repnz fdivl in loop pop mov cld iret pop mov in xchg cmp and jnp scas jmpq (bad) (bad) cmp mov cltd std mov push lock (bad) data16 je rcll and xchg sbb stos push pop enterq cmp rex.WXB jge adc sbbl push fildl insb jmp rex.W fnstsw test jp (bad) mov cmp cmpsl xchg (bad) ss xchg cwtl (bad) adc mov leaveq outsl sti (bad) cltd vaddsd fisttp jg loopne xchg fbld xchg (bad) rex hlt stos mov adc mov fwait jnp (bad) xchg pop in fdivs cld mov mov (bad) iret lret jp mov (bad) movabs fucomi addr32 (bad) cmp (bad) or jbe mov mov pop fldt rex.B cs mov pop fildl pushq insb (bad) imul (bad) add mov push cmpsb (bad) rex.WRB jnp int push rex.RX in or push stos (bad) jmpq jne fs rex.X or mov push push es (bad) jrcxz mov mov rex.B pop fidiv mov pop mov scas pop mov mov pop sub sbb add xchg retq push sub outsb fildl lea test xchg push scas movsl cmp outsb jp cmp fs cwtl lods fisttpl popfq sbbl sub sub int (bad) and std xchg push mov fwait (bad) xor xchg (bad) vcvtps2pd (bad) push int (bad) (bad) pop or (bad) adc mov pop adc loopne out mov fwait cmp xorl clc icebp mov fucomi fdivl mov movabs sbb and and (bad) and fisttpl xchg test (bad) sti adc (bad) fwait push jbe mov scas outsl subl fstpt (bad) rex.WRX (bad) rex.WX rex.XB rex.X mov leaveq mov iret (bad) fldt ja or je (bad) mov mov outsb insl fwait cmp scas mov (bad) imul cmp and pop xchg (bad) sub sbbl add add in (bad) cmp (bad) sub sbb pop add jle adc xchg out fistpl cmp xchg retq or (bad) (bad) add (bad) insb movabs add fidivrl or jg stos (bad) xor jnp jo xchg or sub orl rex.XB sub xchg leaveq or and (bad) (bad) lret xor decb out in add pop mov sahf (bad) fidivl (bad) push lret fstpt sbb mov mov sub mov (bad) jrcxz or roll sahf out mov movsb or cmp clc sub mov mov mov (bad) lretq movslq cmp sbb insb sub xor mov cmp (bad) sub push xchg (bad) jrcxz outsb push fnop rex.WR sti out (bad) imul (bad) pop in (bad) (bad) (bad) push pop sub add fsubl fistpl mulb iret (bad) cmp fistl jne callq in xchg or mov (bad) xchg loope imul push jg (bad) pushq (bad) lret (bad) insl xor rex.RXB rex.RX pop (bad) fcmovnu (bad) jae mov (bad) faddl (bad) invd (bad) movabs js retq (bad) adc mov addr32 sbb xchg sub pop mov xchg movabs adc mov (bad) rex.WB rex.RX jmpq fistl jae mov mov pop movsb cld outsb out faddp rex.XB rex.R push movabs fs decl xchg add movabs rex.RX push bnd (bad) sub (bad) jrcxz and retq (bad) movabs (bad) (bad) push push sub mov and (bad) mov push (bad) pop frstor ds mov sbb (bad) data16 pop mov je fsubrp movabs orb (bad) lods pushfq or xor push xor rcl sbb cld addr32 jp push push (bad) or jnp fwait xor cmp pop pop test (bad) out int movsb sub (bad) jmp mov mov sti (bad) (bad) fsubs cmp adc push xchg (bad) add push mov out push jp push (bad) insb sub mov (bad) rex.WR enterq sbb pop es sahf repz lahf xor mov sbb fbld retq rex.B jmp movabs jle (bad) and sbb add icebp fisttpl test fistl xchg mov xor sbb sub retq sub jge imul rex.R (bad) or insl (bad) sbb shlb push push rex.RB pop pop fldt movslq or testl add fsubrs (bad) or lods retq mov (bad) pop rex.WRB mov pushfq (bad) jl jp out sub push fsubl (bad) int (bad) rex.RX (bad) xlat fcmovne repz scas in xor int3 rex.WRX rex.W adc (bad) lahf cmova retq scas jns rex.XB fcomi fucomp jle xchg ds fmul pop fldt movsl mov scas sarl iret or sbb mov movabs repnz pop stos sbb (bad) ds mov jne sbb mov movabs push stos fnstcw ds (bad) push rex.WR (bad) int3 mov xchg mov (bad) push rex.RX jbe mov push (bad) (bad) js rex.X movsl iret out mov (bad) movabs jno cmp jl test (bad) andb fcmovnbe lret push push data16 mov xchg (bad) jle ficompl (bad) insb pop pop mov addl fcompl leaveq push fdivrl loope and (bad) pop lods scas loopne movabs jns jg rcll fisttpl mov push and mov (bad) xchg fcmovu cmpsl mov and std xchg xchg test notl movabs shr pop sbb fs rcr rex.W or rex.RB cld jns rex.R jb push sarl jae repz add (bad) xor imul lahf mov add or push mov mov mov cmc mov fistpll and xchg in (bad) sti rex.R xlat add jmpq insl popfq notl in fmul xchg loope mov (bad) loopne iret lahf testl and shr sbb or movsb sti (bad) sbb xor rex.WRX jle (bad) out (bad) pop jle fnstenv rex.RB pushfq (bad) fcompl clc (bad) loop cli cmp cltd cli cmp iret jbe out or sahf rcrb enterq repz je (bad) mov sub xlat cli rex.WRX push loope scas mov xchg fsubrl push movabs callq jo cmp lret fistp (bad) hlt vmovhpd sub (bad) fst mov jle sar and push cltd repz (bad) stos pop sbb lock push xchg mov mov (bad) or imul mov push enterq iret hlt (bad) mov pushq in and fidivl fnstenv cli xor adc pop mov rex.WX cmpsl jnp imul push mov (bad) xor (bad) outsl mov pushfq loop callq rex.RB pop js pop mov pop cltd (bad) adc sub xchg pop enterq retq xlat mov mov (bad) jle jo imul rex.RX or movabs popfq xchg jmpq stos movsb cs (bad) xchg fmul stc cmpsl movsb pop test test loopne movabs (bad) rex.WRB iret ficoml xor imul mov lret fsubl int3 mov (bad) (bad) (bad) or (bad) rex.R lock add fidivrl or mov ja pop sti out xchg pop cmp jle data16 leaveq rex.WR sbb rorl xor mov push add pop lret rex.B rex.XB (bad) and pushq gs or (bad) scas (bad) (bad) xchg roll xlat lods mov cmpsl and push ja movabs in (bad) (bad) insl stc ja sub sahf cmc xor (bad) (bad) fstps fs rex.RB mov jp pop xor push or out xchg mov stos push (bad) rex.WB push mov and (bad) xchg addr32 movslq mov mov (bad) imul (bad) callq xlat in mov out jb sti retq insb xlat sbb cld stos ds pop mov jmpq repnz pop pop (bad) lods leaveq lahf (bad) nop in rex.WRB jo (bad) push lock in in adc leaveq incb sub adc (bad) add sub xchg (bad) xor pop pushq sbb (bad) std cmpsb lret rex.RX push and (bad) rex.B cs or rcrb (bad) cmp (bad) push rex.R pop pop sbb fcmovbe fwait pop jrcxz pushq xor in jp loope (bad) cmp adc and pushq mov xchg adc add jae lret movabs (bad) rcrb stos mov sbb cld ja mov xchg cmpsb jge (bad) jne loopne sub out rex.WRX adc mov gs cltd sbb adc sbb rex.XB (bad) (bad) push iret xor in sahf push lock std pop js loope rex.R xor lret not rex.XB mov (bad) jnp repz es stos jns cmpsl iret (bad) repz retq (bad) xor rex.W push and add pop test mov fcmovb cmpsb mov pop xchg outsl notb cli push lret cmpsl sub xchg lock addr32 adc ficoml sub mov jnp (bad) push enterq retq (bad) rex.WXB jg mov cwtl jns imul jmp pop (bad) mov rex.WR rex.WB stos pushq insb fcoml push push (bad) outsb test loope idivb pushq or jno fwait cltd pop test callq mov cmp rex.WB rex.W xchg sti jp frndint nop lods and add pop shrl (bad) nop sub in ficompl push push test test loopne retq cwtl int3 xchg rex.WRB cmp push sbb (bad) fisttpll xor or jnp out (bad) insb imul xor rcll fsubs adc add push (bad) (bad) leaveq push and cs adc vminss fidivrl xor xchg (bad) mov mov scas decb cmpsb retq faddl pop add jl xchg mov add pop fimull jnp fwait cmp jrcxz or mov mov mov add push in and rex.WRX rorl stos xor rclb jb fucom lock (bad) cltd out add add mov insb andl sti pushq test repnz (bad) outsb mov idivb pop mov sub repnz (bad) push mov jrcxz pop xchg (bad) ja loop fimull xor or push sub pop (bad) add mov enterq cltd retq (bad) sbb leaveq rex.W or cmp scas fimull ja push pop rex.WB (bad) cli xchg (bad) pop movsb shrb repz jb ds mov rex.W iret fidivrl jnp in div notb (bad) or mov xchg pop mov mov cs lret retq mov mov jl jmp mov rex.X out adc rcl hlt pop rex.WXB mov mov pop lret xor fwait (bad) xor or jo pop xlat cmc movabs leaveq (bad) jmpq mov fdivrs xchg xor loopne (bad) cs sbb sub cwtl mov xchg rex.W insl mov rcrb sub je (bad) sbb shlb or jge jns nop pop pop (bad) cmp and movabs push push cmp test push sbb fnstsw popfq or (bad) jg (bad) mov loope shrl mov sbb cltd adc sbb scas outsb insl (bad) rex.RB (bad) mov sub jno ds cwtl jae stc cs cmp xchg mov retq ja stos ss xchg rex.WB rex.RB sub cmpsl jbe nop lret xlat cld rex.WRXB pop (bad) and (bad) leaveq lret imul or leaveq (bad) (bad) fdivrl (bad) mov xlat fcmove and sbb xchg popfq jp sub add (bad) sbb outsb jg jns push cmp pop mov mov repz xchg xchg lahf xchg rex.WXB (bad) out movsb cmp pop mov jle xchg ds stos adc jns data16 rex.WR push cmp nop rex.WB out mov test lret push cmpsl sbb idivl out xchg fwait mov mov or jrcxz jle rex.B (bad) add sti je pushfq movslq pop jge mov add mov (bad) push (bad) stc js fcmovnb adc push mov mov (bad) out fstpt cmp (bad) cmpsb pop jne (bad) push sbbl or retq rex.XB pop gs mov (bad) (bad) (bad) (bad) (bad) loopne rex.XB xrelease fnop andl imul ja notb loop xchg (bad) sbb (bad) cmp or xchg movabs mov sbb xchg movabs xchg jge pushq out lea adc pop sbb adc sub imul mov (bad) jne push retq pop lods mov xchg add movabs jns sbb lret mov stc movabs rcrb (bad) fcomi movsb jne sti out std xor sbb (bad) in fldt (bad) xchg sub (bad) fstp outsb cmp sub test pop pop adc loope test rex.RX leaveq pop (bad) cmc or or sub sub fs sbb popfq test fistpl test mov fwait or pop sub movabs (bad) stos sub pop xor sahf push mov lods sarl retq imul pop rex.W rex.W fistpl (bad) in xchg add (bad) test cwtl cmp ficompl and jae lods jns scas fisub cld sarl pop movabs jp nop sbb movabs rex.R (bad) fstl stc js test jno fwait iret cld xchg pop callq mov adcb rex.WRX or (bad) scas sarb push (bad) push (bad) (bad) mov (bad) push loope,pt enterq mov xchg out mov mov sub (bad) or xchg and enterq sub lret push xchg andl add pop fadds shlb cld xchg cmp mov (bad) (bad) out movabs (bad) push shrb incl cltd negl es jae sbb sbb jns movabs js pop rcrb int3 cs sub cmp callq or retq or (bad) sbb in pop (bad) (bad) rex.WRXB cmc loop rex.RB (bad) sarl adc xchg rex.WX push pop iret cli neg (bad) (bad) mov mov stos pop sub jmp ss lahf retq (bad) xor jo add jae fs fwait adc rex.WXB (bad) add fcomps (bad) cmp (bad) and movsb mov stos repz loopne mov cmp sbb push int3 popfq cmpsl add or push jnp rex.WR cltd rex.RB pop (bad) fsubl pop xchg mov (bad) retw (bad) fninit add (bad) cwtl fistpl fdivl pushq retq jl jnp sbb int sarl (bad) nop std fstpt (bad) stos repnz fstpt mov xor pop (bad) push pushq jns (bad) xchg (bad) retq fildl js clc pop adcl jno test (bad) ss sbb (bad) (bad) adc fisttpl cli (bad) mov fldl xchg cmp scas push fcoms mov (bad) sub scas (bad) (bad) xchg (bad) test retq cmpl neg xlat rex.WX data16 jbe adc insb (bad) imul and or cmp pop xchg (bad) mov rex.W repnz pop cld (bad) lock mov (bad) test (bad) iret fstps or fdivrs popfq outsb ds insb mov test stc (bad) iret mov sbb xchg (bad) insl sti sbb jbe rex.R mov std (bad) rex.WRXB lock or jnp xchg xlat stos cld rcl rex.WRB rex.X movslq sbb fnsave loope stos (bad) fisubrl leaveq lods push xchg (bad) stc repz out mov mov jae (bad) fildl sbb iret pop add fnsave xchg xchg ds lret iret push shlb and in jb adc cld roll jno (bad) test xor ja mov xchg sub (bad) push (bad) mov push push rex.W xlat mov sarl nop movslq (bad) jle cld pop lret and (bad) (bad) xchg stos popfq adc mov xor push or mov push or and cmp push gs loop push pop pushq (bad) movslq fwait jrcxz pop rex.WB cmpsl pushfq cwtl jmpq imul xlat lods mov sahf xchg or rep or add jbe mov cmp xor (bad) cmp pop testb xchg xchg loop insb fisub xchg retq sbb mov repnz (bad) ja (bad) rex.WB or sub movabs mov (bad) xor data16 (bad) jne rolb mov xchg sub shrl push (bad) adc fs sti rex.WB scas movabs or and (bad) (bad) jmpq ficoml rex.WXB pop fscale div jrcxz lods add imul rex.WXB cmp (bad) adc mov fidivl out (bad) cmp ss ds (bad) pop sarb mov int push jl ss rorl std imul mov repz jae add repnz push (bad) sti lods out xchg stc mov movabs mov lret xchg insb rex.WR pop push testb std out fs (bad) rex.RXB test sbb xchg push mov add jae adc out in (bad) scas rex.RXB adc or cmp jl jnp mov cwtl (bad) fistp mov rex.WX rex.WB jno and rex.R (bad) cmc (bad) mov sbbl push pop xor pushq mov jnp mov retq mov cmp rex.RB clc pop xor xchg clc xchg (bad) xchg clc fsubr ror ja adc adc pop fwait movsl xchg fildl jmp data16 add pop fcmovne cld gs rex.RB (bad) (bad) es movl addr32 leaveq fstp gs or xor sti fstps hlt loop jle mov iret sbb rep imul cld cmp out sti push hlt cmp xchg pop jg adc rex.WR pushq ss test or cli movsl fstpt cmp cmp sbb nop mov mov stos shrd push pand ss fstpt test xor jb cmpsl pop cmpsb lahf mov rex.RXB (bad) mov fisttpl mov xchg ficompl rex.WRXB int3 rex.R cmp pop movabs jno jge rcl sub fistpl (bad) sbb pop mov loop data16 out fisttpl faddl mov pop lods (bad) idivb xor rex.RX scas stos stc movsl mov movabs (bad) hlt movabs mov stos mov clc rex.WRXB rex.X rex.RX mull je and or (bad) movabs adc fistpl sub movabs insl loop or mov jnp and mov mov mov outsb pop (bad) xor (bad) test out mov fcom retq loop fwait (bad) jle xchg rex.WR (bad) rex.B rcrl xor or adc pushq cwtl cmp (bad) rex.XB in or (bad) or retq stc cltd std sti (bad) cmp xor add mov fmuls mov jmp stos (bad) adc outsb pop (bad) (bad) mov push testl pushq cld xor cmpl outsb mov xchg (bad) imul outsb cmp mov xchg ja xor mov fwait jge in lods sub pushq (bad) xor insw pop jle retq jle rcrl bnd rex jbe (bad) imul jp (bad) jl lahf gs ficoml (bad) (bad) mov fistpl (bad) or add fneni(8087 lahf (bad) fucomp xchg pop cmp rex.RB negl fistl sbb add movabs sbb loop stos sarl fsubrl (bad) cld stos mov scas mov xorb mov add jge cld not outsb int movabs (bad) sahf fistpl jae mov loopne scas stos hlt (bad) rex.R rex.WRB rex.XB jrcxz stos pop sbb xchg fwait add and int3 pushfq test xor rex.RB rex.WRB jp fldt nop rcr (bad) jrcxz (bad) out xchg mulb imul cmc (bad) or (bad) fisttpl add sub pushq (bad) out fnclex xor rex.RXB rex.WRX int3 jrcxz fwait (bad) xchg cmp mov xlat sub outsb xchg shrl fcomi pushq mov enterq fstpt pushq cwtl movabs jnp lea repnz mov adc add cmp add pop and fildl clc stos rex.X iret int rex.R jno fcmovnb and xchg fstpt (bad) jg (bad) (bad) loop icebp scas sti fisttpl jl lahf mov rex.XB fcmovnu (bad) push ss pop sbb xor rex movslq repz fwait pop xchg movabs stos (bad) lahf or (bad) cld xor out xor stos movabs mov fcmovne pop mov (bad) mov in rex.R sbb retq ror sbb jnp imul mov sub popfq adc xchg (bad) adc jb mov pop bswap (bad) (bad) mov (bad) lock (bad) fisttpl (bad) jge or mov icebp rclb test pop lret rcrl mov (bad) loope sub (bad) or outsl (bad) rex.WRB movabs jrcxz rolb rcll pop (bad) jns fs sbb pop in rex.X retq jp sbb rex.R rex.WXB xchg fbld xchg sbb xlat or (bad) xlat xorb pop out pop or (bad) push test mov stc lret cmp adc (bad) movsl mov lret sbb sub stos xor (bad) cld (bad) outsl je out movabs leaveq movabs xchg jns (bad) cld (bad) int pop retq movabs shlb fneni(8087 incb sbb sti (bad) mov mov jrcxz out fistl rex.R pop pushq mov cs (bad) insl movabs (bad) lock pushfq rex.WRB cltd (bad) pop sub (bad) scas add fldt insb adc cmp xchg fcomip cs shrb std xchg fisttpl int3 mov (bad) int out rcll jmpq (bad) mov pushq adc (bad) imul (bad) imul pop mov pop adc mov lret test (bad) rex fwait or push sub (bad) lods push (bad) stos rex.X adc cltd fistl loopne ds (bad) fistl (bad) divps int3 fstpt repz cwtl mov rcl stos jg out and or sbb mov (bad) or sbb xor mov sub (bad) (bad) jmp (bad) lahf rcl lret outsl mov (bad) and rex.WR rex.WR mov sbb jle pushq (bad) xchg mov mov sbb pop or (bad) fdivl (bad) rex.RB mov xor je stos insb iret push pushq int3 nop rcll (bad) fwait iret lods ja rex.XB sahf lea sbb hlt in jrcxz addr32 pop fs (bad) (bad) adc jge sti outsb pop mov stos stos lods sbb ficom mov and test or and (bad) jl mov in rex.RB sarb sub adcl andl rex.WX sbb sub and or (bad) and add (bad) out cmp or in rex.WXB rex.B mov add pop repnz mov lahf imul sbb (bad) outsl insb mov fildl loop rex.R push xchg mov pop fimul retq (bad) (bad) (bad) pop fildl mov rex.R jo jb fistpl (bad) rex (bad) (bad) pop mov gs jnp (bad) jnp sbb lahf rex.RXB sbb push xchg xchg xor lods cmp rex.RX mov rex.B (bad) mov push and mov shrb scas sbbl fidivl rex movabs jo adc pop lods test rex.XB cmpsb stos mov sbb push xchg loop mov mov movsb mov jge (bad) rcrl fwait insl (bad) movabs add retq stos ds mov cmp (bad) enterq mov jg fnstsw mov insl jmp fisttpl or pop fdiv std enterq (bad) cmp ds gs shrl loopne and (bad) gs rex.RX fisttpl movsb and mov jrcxz pop (bad) lahf lret rex.XB pop mov xor and retq sbb int sbb cmp adc fcmovne hlt adc (bad) jg lret (bad) (bad) fisubr jnp nop rex.XB testl (bad) (bad) fistpl jmp sbb xchg pop orl jge (bad) lods xor movabs ss lods (bad) mov sarl (bad) and pop stos out (bad) pop lea scas adc cmp negl push movslq pop jge in xchg in pop rcrl out adc mov lods cmp fnsetpm(287 pop movabs mov xor movabs rex.RXB sub mov (bad) jge fistl (bad) out rex rex.WRX movabs testb stc (bad) (bad) mov xchg rcrb lahf movabs fisubrl mulb rex.WRB and lods int3 xor rex.RB outsb movabs and and movslq idivb (bad) add pop pop push pop mov xchg mov sub pop sbb test rex.WR jl retq ja jnp rex.WRB (bad) adc jmpq fcmovne and popfq mov (bad) fldt jrcxz in frstpm(287 repnz xchg rex.WR out fwait jg jnp in pop hlt pop lea fwait cmp movabs xorl pushq callq lahf fcmovnb jbe fwait or (bad) lods insl imul (bad) movsb movsb sbb mov pop lods adc cmpsl (bad) rex.R pop (bad) and jmp (bad) xchg fistpl icebp in (bad) fildl repz sub insb in sti push rex.W movabs gs and mov adc xchg sub (bad) je loope cmpsb shrb imull xchg rolb test sti fdiv out in cmp hlt (bad) (bad) (bad) sbb mov clc cld retq test (bad) xor mov in pop fsts (bad) stos sbb or mov (bad) fist push fwait idivl rex.WB scas scas (bad) out mov movsl (bad) in rex.WB rex.W add repz xchg (bad) jle sbb movsb pop cs int sbb cli stos rex.WRXB repnz (bad) (bad) clc xchg add sti rex.R test fsts jnp,pn ss out sbb mov cmpsl (bad) pushfq cmp vphaddwq jg cmp jp push mov push (bad) jo popfw fldenv xlat rex.WRX stc (bad) divl jae shll jle scas orb adc out xor or iret push andb loope mov jno enterq imul out cltd nop (bad) test out std adc mov lret add pop rex.RXB rex.RXB push (bad) mov sbb mov (bad) mov mov js rex.RX sbb pop pop push and (bad) int rex.WB rex.RB fsts rex.XB (bad) enterq cltd fwait mov sub mov lret shlb (bad) pop test (bad) cmp enterq xchg leaveq sahf sti insb std push push rex.XB rex.RB addr32 mov test shrl (bad) cwtl xchg sub cmp xorl (bad) (bad) or repz rex.WXB sbb cmpsb rex imul fs jne add (bad) jns add out repz jp (bad) add adc xchg cwtl and outsl movabs gs loope mov imul leaveq fwait fwait rex.RXB (bad) mov repz insb mov (bad) xchg fimul test sahf data16 test leaveq jns imul popfq or pop iret (bad) fwait and add (bad) mov jae rex.B rex.WX rex.RX outsl out xlat pop stos je or imul fildl jle rex.WRXB (bad) fldt mov scas pop push cld jmp add shr es fildl cmpsb in rolb fsubl pop cltd mov sti fs push mov push cmpsb cld movabs int mov fstpt sbb mov xchg std pop jnp sub sbb or fildl stos sub (bad) lahf cltd mov jp cmp adc xor scas (bad) retq jle callq (bad) fdivrl xchg xorb (bad) pop ror fscale rex.W lock pushfq subl pop xor and outsl add jle fwait sahf sub push ja (bad) xchg mov xor cwtl sub adc jg imul in adc xchg fistpl or (bad) (bad) pop (bad) (bad) rex.B cmp mov js xchg and mov jge sub popfq add sub lret (bad) clc out push callq retq (bad) adc xor movsb cs jp push pop pop pop sbb xchg xchg jmp or iret rex.W rex.R cld mov movsl sub add cmp callq loope rex.X add push cmp pop out pop callq iret pop push ja rcr xor imul xchg cli pop mov test (bad) fmuls cwtl jrcxz rex.WB (bad) jbe gs pop lret mov int (bad) (bad) jnp sar add (bad) mov jbe cmp pushq jge add clc clc loope stos sub jb callq mov xchg sbb gs sub rex.RXB movsl add push pop rex (bad) rcll xchg shlb (bad) pushw stos hlt cmp (bad) rex.RB fldt adc xchg (bad) out movabs jne rex.X jge pop (bad) repnz outsb mov (bad) sti xor fisttpl fs insb jae je (bad) ds (bad) mov pushq sbb mov insb and sahf rex.B mov sub cltd lahf jle outsb mov jno int3 shr enterq fs stos mov repz (bad) int sub mov pop rex.RX data16 jo in iret rex.B rex.WR (bad) rex.RB addr32 jnp (bad) scas stos jge jb sub pop mov in imul adc mov mov mov fstpt (bad) push std jb mov rex.RB ss or sbb sti sub rex.R rex.RXB fstl in adc (bad) (bad) and or movabs jns sti or ror (bad) std retq or retq fwait repnz cmpsl cmp shlb add fstpt nop (bad) movabs in xor (bad) movabs leaveq stos xor adc rex.WRB mov insl out push cmc mov pop jo mov or (bad) sub xchg sbbl (bad) jrcxz mov fcmovnu add stos retq rex.WRB pop cmpl jno cld adc in lahf movsl cli (bad) push pop rex.WR scas add push push mov mov in mov in push loopne rex.WXB gs (bad) je js pop movsb (bad) out fstps jecxz mov mov add sub loopne cmp pushq mov mov retq pop stc test sbb in test pushfq (bad) scas ds fnop rex.WR scas jbe int (bad) popfq mov cli xchg jg cwtl stos enterq and xchg mov adc test (bad) stc sub mov add adc es jg fidivl jle xor movslq (bad) and jg insl loope mov out lods jrcxz (bad) adc (bad) mov (bad) (bad) adc rex.W (bad) rex.WRXB and xchg in mov lea or fcoml callq (bad) ja and movsb out xor mov movabs cld jae (bad) xchg rex.RB out push pop mov and xor cmp mov lret (bad) add mov push nop push pop mov mov or add xor mov (bad) (bad) (bad) (bad) mov rex.WRXB (bad) pop pop cli (bad) xorb (bad) hlt fnstcw xchg mov rolb cmc rex.W rex.RX cmp push sbb jmpq sbb int (bad) rex.WXB lods pop jg push fcomip movslq mov addr32 pop pop cmc icebp adc jnp pop cli xor mov pop add mov ds (bad) mov imul mov nop repz jge xlat (bad) repnz fidivrl fwait rex.XB scas fsubrl (bad) mov mov js cmpsb (bad) cmp (bad) jns (bad) lock fcmovne jmpq and fistpl mov sbb mov jnp jg rcll test in sbb fcmovnbe cmp (bad) (bad) (bad) cmp sbb enterq cmp push jne out fcompl (bad) (bad) (bad) (bad) push cmpsl (bad) jbe jp mov xor fistpl int3 rcll mov xchg loop nop rex.WXB mov ja movabs shl sub xchg pop fidiv fild (bad) or jnp and or xor jns push cmp fcompl fisubl and rex.WR cmp sub mov fistpl (bad) cmpsb out xlat sub (bad) jb cmp jbe repnz imul (bad) test cmp mov jg (bad) mul mov pop lods cmp lahf xlat icebp sbb addr32 (bad) (bad) (bad) pop mov outsb loop lods (bad) in (bad) rorb movslq sbb rcrb cli or mov ss movabs fisttpl (bad) clc fildl pushfq (bad) ss and (bad) pop fisttpl mov scas fwait loope sub pop cmp (bad) mov sbb test mov mov rex.WB rex.XB movabs imul pop sti callq jae xor jnp sub jg rex.RXB and (bad) mov cmpsl fldt xlat iret out loope (bad) adc fwait cmp pop jb rcrb fistl sahf fs stc push mov cmp adc out mov mov (bad) push mov rex.W xchg fistpl icebp rex.X cwtl mov sub fwait rex.RXB cmc cmp xchg rex.WRX cmpl cwtl ja lahf rex.WRXB es fcmovnbe rcrb (bad) sahf (bad) movabs (bad) adc enterq outsb fstpt pop rex.RXB lret pop (bad) xlat pop rex.WR cwtl or mov fndisi(8087 sub (bad) iret enterq jne (bad) outsl xlat sbb fsubr cmpsl mov jbe xor (bad) mull add or sub cmp cwtl jmpq sub (bad) out pop (bad) (bad) (bad) rex.RB fstpt pushfq shrl xchg iret xor pop fcmovnbe scas nop movabs sub (bad) outsb (bad) (bad) jp sti sub mov (bad) sbb (bad) fninit in rex.RX or loope fistpl and sub loopne adc fwait cmp lods (bad) (bad) out rex.RX mov jge (bad) (bad) lods stc xchg add stos rex.B lea sbb (bad) mov fidiv (bad) pop xor pop rex.RB insb and insl movabs fwait rex.WRXB (bad) popfq data16 fcomi sti addr32 adc loopne (bad) shlb callq rcrl f2xm1 rex.WRXB (bad) add fildl (bad) fistpll fnop mov xchg fwait insb rex.R cmp stc fadds jne sbb pop rclb in sub gs or (bad) pop push int sbb xchg lods (bad) jbe pop xchg mov imul mov jle fwait cli repz and pop xchg in pushq jns sbb cmp or fcmove push mov fwait sbb rcr or ffreep rex.B cwtl jnp in (bad) (bad) shrb (bad) add int3 mov repnz je mov test sbb lret (bad) addr32 pop push mov nop imul in mov fwait (bad) hlt and push notl pop cmp sbb sti pushq cmpsl xor mov cmp in cmp pop mov cmp retq mov lret (bad) mov cmp mov mov mov xacquire and fildl pop and jbe rex.B pop pushfq jle loope jrcxz lahf (bad) rclb jl fst lods fsin insl mov fidivrl push out fimul or rex.WRX lahf sahf (bad) (bad) mov pop rex.W jp (bad) cmp push sbb jg movslq shrl and or sbb (bad) rcrl sub (bad) fsts in fsubp push mov loopne xlat callq jle add or push pop add (bad) sub xchg cmp (bad) jl insl xchg sahf mov sbb mov cli push fwait and xchg fcomps push add (bad) loope sarl rex.WX addr32 cmp jns mov js popfq scas out xchg xor sarl out pop (bad) xor jae jmp (bad) xor cli outsl mov push cltd pop es add jbe rex.R (bad) (bad) testl insb pop movabs pmuludq mov (bad) rex.WRB jg shl (bad) ja mov enterq or (bad) xchg rex.RX xchg mov jrcxz in in xchg mov (bad) xchg retq (bad) and faddl clc movsl cmp (bad) push cmp sub fwait (bad) (bad) jmpq fstpl and enterq (bad) sti pop int3 xor fildl lock or (bad) adc jno xlat rex.R mov jp lods sub fcmovnb jmpq retq repz cmp push pop adc repnz pushq xor and fistl sbb fcoms push test cmp icebp rex.R repnz mov (bad) shll pop es mov cld lock callq xchg mull push push sbb add sbb jge sub fcmovnu lods mov rex.WXB ds rol push jbe mov mov adc sbb pushq jae rcr gs or mov xor movsb (bad) sub mov xchg (bad) add fistpl cmp fwait sahf fisttpl (bad) or rex.WRXB pop pop (bad) ficom mov rex.WX rex.WRX (bad) and (bad) jle sub pop jno jnp pop rex.RXB (bad) push rex.WRB lods xchg pop sbb (bad) sub mov loop pop shll add jne sbb scas cmp (bad) fistpl add out xor mov outsl xor jge mov xchg mov sbb (bad) pop (bad) sub xchg pop mov ja shrb rorb xor in mov mov cmpsl mov test jne (bad) rolb (bad) (bad) xchg (bad) jmp push clc (bad) or retq popfq data16 add jmpq scas movsl (bad) pop fwait cmp sub pushq repz (bad) enterq fldt movsb test mov shlb or rcl push lret mov (bad) (bad) rcr mov xor shl fisttpl add xchg jmpq mov lret (bad) sbb pop sti and rcrb cltd lahf fsts orb pushq movabs xchg cmp xor and iret fstps jle (bad) sbb pop pop and and (bad) jns (bad) xor ficompl mov stc cmp sbb jbe mov pushq pop cmp mov vpminub lods retq (bad) repz pushq ja (bad) rex.RX hlt fdivr and add rex xchg lahf jb ds xor outsl cwtl cwtl mov jle or sbb pop mov push mov (bad) (bad) movabs pop jrcxz std xchg push push cmpl jae (bad) (bad) addr32 loope mov out xor mov (bad) or rclb pop lret fisttpl pop bswap sbb mov or pop fmull or jle pop (bad) scas pushfq in rex.WB clc (bad) lods sbb fisttpl (bad) jmpq pop push rex.WR sbb jmp bnd mov xchg mov (bad) (bad) mov clc (bad) leaveq add mov xor mov movabs mov mov push (bad) mov jnp (bad) lea pop rex.WR rex.WX (bad) mov mov movabs xor movslq cmpsb (bad) (bad) je jno jne push (bad) lock (bad) mov pop hlt sub xchg pushq fwait movsl fucompp int3 fs rex.R or jb xchg xor rex.WXB cmp (bad) pop in pushq mov jl and int3 rex.RX fucomi mulb pop cs fisttpl mov lods adc imul or addl nop jrcxz xlat (bad) sbb rex.B out cld and cmp (bad) rex.R mov mov (bad) rex.WR movabs mov pop enterq pop jne mov rex.WX jo nop pop rex.RXB out cmp icebp xchg jp stc mov and (bad) (bad) lea cmp (bad) hlt ds fistpl (bad) pop add or js fistpl pop std mov rex.WX pop fidivrl loop icebp xchg movabs xor mov push mov in (bad) push sbb adc add scas pop and lret jb rex.B loopne mov scas adc (bad) push outsl xchg and out jns (bad) pop fmull push (bad) out pmuludq lret nop (bad) rex.WR jns jl sub sub jmp pushfq (bad) mov lock addr32 fs movb and movsb (bad) jns,pn sub movsb cs push (bad) mov pop lock fisubl sbb jae (bad) pushq (bad) rex.W jb rex.RXB jge push add xor cmp xor fs iret pop rex.R movabs add (bad) (bad) and xor cmp (bad) int3 (bad) insl xchg sub rex.WRB jns pop movabs push xlat lea sbb rex.RB nop in iret int xchg iret fxam (bad) pop pushfq rex.RB outsl (bad) sarb add mov fcmovu jns ja imul or rex.WRXB sub addr32 icebp jmp rex.RXB lock hlt test std scas (bad) rex.RB loope imul icebp mov in jne fcmovne sub cs add rex.WX pop (bad) mov add fdivl vxorps pop push (bad) insb or xchg (bad) movabs mov adc test out vminpd es rex.R scas sub push fbstp stos sar sub sub pop cmp jbe fwait sub sti (bad) adc adc rcll movabs cmc add (bad) hlt jp sbbb decl cmp mov addr32 cmp imul adcl fisub frstor cld and mov or push (bad) div fwait add cwtl and callq movslq mov nopl fidivl nop fsub stc lret (bad) cmpsl push ficomp (bad) pop jb (bad) sub sti adc pop insb mov add stos mov push fwait out mov fwait (bad) jb std sbb out (bad) (bad) and hlt mov xlat rex.W mov mov rex.WB pop (bad) cmp jns rex.XB retq cmc addl std push fwait pop (bad) ss out pop rex.RX adc jp pop pop add cltd out (bad) xor cltd adc mov sahf leaveq and cld jnp mov add pushq lret fincstp fwait retq xor test outsb xchg rex.RB xlat fist dec xlat or and (bad) cmpsl pushq (bad) xor pop sub rex.RXB or shl add divl jno cmp (bad) ja adc rex.XB (bad) outsl mov gs (bad) popfq add mov fwait jge leaveq adc cmp adc mov std jno rex.WB jle fnop add test push jp (bad) pop cmpsl hlt rex.RB jae adc movabs clc push add xor pop lods or push leaveq rex.WRX (bad) out rex.RX mov mov xchg lahf sbb push push sbb cmpsl movsl sub mov sub vmaxps xchg adc pop pushq stos pushq (bad) mov fist outsb cs xor movb jno testl insb push out icebp imul rex.XB sti xor pop sahf insb fldt popq (bad) jnp (bad) fcmovne movsl (bad) adc addl callq xchg mov (bad) fdivl fistpll sbb fwait shlb sbb mov fnsave fisttpl (bad) out (bad) (bad) sub mov movabs fstp int3 push sub cli mov xchg add sub fstpt sub fildl fcomps (bad) (bad) (bad) rex.W rex.B (bad) imul lock fldt add loopne (bad) nop rcll addb imul test pushq mov rex.R fmul out fstpt movabs int3 fisttpl rclb fldt lahf rex.XB fnsave rex.B and fisttpl jge (bad) (bad) (bad) cli lods cmp ss subl mov fldl (bad) iret rcl adc (bad) (bad) or js mov jmp fdivrl sbb and sbbl (bad) imul xchg mov int3 mov std (bad) stc sub jno fldcw jge (bad) (bad) cld rex jrcxz and mov lahf iret fs rex mov (bad) es pop outsl or sbb stos (bad) je fstpt push hlt lahf push cmp xchg mov fcompl movsl cmp rex.RB xor cli jae movabs stos movsb cmp fisubr stos lret cmp xchg (bad) push and in sbb push (bad) sbb jle rex.WR xchg xchg fsubrl mov rex.WX (bad) movslq retq mov stos leaveq shlq movslq adc or xor rex.WRXB adc mov (bad) jnp loopne (bad) sarl push jo sub jmp fisttpl push loope mov sub fildll pop adc (bad) rcrl and scas mov and clc in fstpt iret jo mov mov jnp movsb rcrl rex.RX iret iret pushq rex.B mov mov add leaveq pop pop int jmp movsb push jns fstpt xor mov jo (bad) rcr xchg rex.RXB rex.WX insl fcmovnbe es (bad) (bad) (bad) xchg (bad) outsb lea jns outsl push stc nop xchg (bad) nop rex.WRB cld movsb (bad) enterq neg pop std fsts (bad) inc data16 mov retq out in fildl mov repnz fildl int3 (bad) and movsl rex.RX rex.WR pop jae fwait cmp (bad) callq rex.WRX cltd sub out stos jl sub insl adc out sti fabs cmp mov cltd scas rex.WRB enterq movabs pushq fstpt scas cmc add lock test retq and adc movabs ds imul lahf (bad) (bad) mov sub addb cmp pop retq mov pop fwait test rex.RX (bad) mov mov add rex.WRB test sbb xor xchg pop jo push (bad) sbb movabs sbb sbb es (bad) sahf ja adc xor mov xor callq pop fistl pop xor fcmovnb cmpsb fdivrs mov push rex.WRB fwait in fistpl lods idivl fistpl mov xor push sub out fcomi rex.WX (bad) fistpl cs pop fcmovnb lock or (bad) in fstpt loope rex.WXB mov fildl pop sbb enterq std leaveq sbb adc fnstcw in (bad) movabs fwait movabs (bad) cli orb pop xchg mov jnp fwait (bad) lock push pushq rex.WX (bad) fiadd fistpl mov push fistl xchg fstpt pop mov fistl and push movabs (bad) or (bad) fistp rex (bad) shr mov jo pop sub push xchg lret pop (bad) fistl xor (bad) fnclex mov not ds xlat fmuls sbb cmpsl (bad) fildl xorb test in rex.W rex.RXB fistpl rex.RXB popfq push fistpl outsb pop push sti icebp popfq pop pop (bad) mov xchg std test (bad) adc fcmovnbe (bad) movabs (bad) cwtl fnstenv cmpsb fildl hlt jae pop mov inc rex.WRX lcall enterq add push pop (bad) cwtl fcomps fcompl mov rex.WR fwait orl mov neg test jne shlb or add sub mov addr32 sbb xor add push add jnp xor (bad) (bad) testb clc rex jno repnz fistl add scas mov (bad) pushq jbe pop mov sub and outsb adcl movabs rex.RXB int leaveq (bad) movabs je nop rex.RX xor pushfq xor movabs fisttpl (bad) and fs jg mov push test (bad) push fcmovnb mov sub hlt fstpl jle or stos imul not rex.RXB adc (bad) jnp rex.XB (bad) mov xchg in loop fistpl xchg rex.B (bad) cmp addr32 xor pand (bad) jle (bad) (bad) add xchg sbb lods xchg fbstp (bad) cli rex.WRX cmc (bad) jp (bad) or retq mov jnp,pt (bad) cmp fs xchg fs mov in pop movabs xchg xchg repz adc pop fsubl pushfq add xchg (bad) pop pop xor pop (bad) cli (bad) mov (bad) iret rex.X scas rex.RX jne xchg pop xor mov sbb and and movabs xchg mov gs fwait cmpl pop rex.RX mov (bad) rex.WR rex.X callq (bad) mov pop xor in xor (bad) fstpt sub movslq popq adc cmp pop fdivrl fwait sub jns push cmc adc (bad) rex.WRXB pop jg (bad) out add (bad) cmp (bad) and adc (bad) xchg (bad) (bad) rex.RX xchg or cs cmp mov jp or mov iret xor xchg (bad) cli je pop mov fldcw jl test (bad) pop sub movabs or rex.RXB rex.WX outsl pushq or (bad) (bad) mov fnstenv and (bad) rol sbb push (bad) mov movslq fildl (bad) enterq rex.WRX (bad) fstpt gs stos pop xor movabs es rex.WR out pop add fsubs scas sbb vpacksswb (bad) retq (bad) test jrcxz popfq sub lret rex.X pop rex.WRXB rex.RXB jne (bad) add push xchg in fldt movsb rex.WX (bad) rex.WRX fndisi(8087 mov pop movabs scas pop xor jrcxz sti jae (bad) lods js scas (bad) add mov jno movsl and adc sbbl js imul (bad) sbb mov xor xor or (bad) sbb mov or repz movabs lahf fistpl push andl (bad) callq jo rex.WXB jl (bad) fldt xor sbb test mov addr32 in lret xlat out (bad) rex.B int3 fisttpl adcl or or or add fsts jge sub fwait jo lahf jo out in lret xchg fsts out loop add pop push (bad) imul out rex.WRB xchg idivl pop xchg fwait jp (bad) pop rex.R sbb mov jl (bad) jae (bad) stos sbb out jp (bad) mov fldt lods rex add (bad) (bad) jrcxz retq rol (bad) pop stos xchg roll rex.B mov cltd or fs fisttpl rcll mov fstpt cmp fldt fwait loopne lea (bad) pslld in mov mov data16 (bad) nop rex fisttpl cmp lods insb fldt jl xchg cmc fbld fistpl loop lahf pop (bad) jbe fcmovnb (bad) test (bad) outsl sub mov test sti fistl fmull rex.WB mov popfq fs movabs sub in cmp (bad) mov outsl fisttpl sahf ds cmp mov (bad) repz leaveq (bad) retq or rex.RXB cltd cmpsl imul cwtl jmpq sbb sahf popfq cmp int in cmp movslq rex.W or pop (bad) (bad) pop add rorl add icebp fisttpl sbb movslq rex.XB or rex.W pop subl add stc hlt lods (bad) jo jno cli rex.B rex push push fistpl in sbb pop sub push movabs jno rex.XB mov rex.X loop pushq (bad) or jae lods decl ja (bad) push ds lea adc push cmp retq jnp mov rex.WR (bad) enterq jns push pop sub mov jbe and insb mov jrcxz mov sub gs enterq fstpt out xchg faddl mov mov add sub add enterq repz and mov mov jnp sub adc shll sbb xor mov es stos (bad) sbb int3 fdivrs adc movabs rex.X rex.RB fsubp xor jmpq test (bad) push insb ficomp movabs jb scas pop (bad) clc test shl pushfq sti adc or jg lahf cwtl fildl mov cmp cld shlb rex.WR addl rex.WRX ds lret jnp ja test cmp push (bad) rex.WX cmp pushq test sbb push (bad) cmp cltd or jnp movabs int3 or add (bad) fisttpl lahf cmp (bad) fwait out sub rex.WRXB cmp in mov or pop in mov leaveq jg (bad) adc xor roll imul add cmpsl ds xor rex.WB ss fistl out xor fldt ds insb mov outsl add fildl loopne push mov (bad) cmp xor addps jg clc subl fstpt rex.WXB fisttpl sub rex.RX sarb icebp scas fcomps test cvtdq2ps fldenv rex.W fldt xchg pop or sbb jrcxz adc movabs ss lods xchg out lods mov pop push (bad) cmp push ja ja out sti sbb stos cld in jnp fwait mov insb (bad) movabs stos stc stos (bad) jg (bad) loop push add rex.RX cld jnp xchg (bad) rex.WRX fistl xchg adc (bad) rex es (bad) (bad) (bad) mov pushfq rex.XB rex.WXB mov mov stos int push insb and stc mov test push push addr32 add pushq pop cltd push sbb pop or push (bad) pop scas fldenv stc in div (bad) jno pushq leaveq (bad) retq movabs (bad) (bad) (bad) cld movabs enterq jns jrcxz add cwtl add jno xchg mov test (bad) jp lea (bad) leaveq xor cmp jl or test cli xchg sbb jmpq addr32 adc rex.XB push xor icebp xchg movabs push rcrl cs lahf cmp pop rex.WRXB pop sahf mov rex.W adc add rex.XB rex.W xorl fst clc nop sbb notb pop mov (bad) shr js pushq (bad) mov xchg ror (bad) pop pop adc cs pop jns xchg adc jge mov fs cld stc lods xlat movabs sti callq lret push movabs js and cmp imul or rex.X cld outsl (bad) (bad) sub jno sub xor push (bad) xchg mov cltd faddl push and xchg mov (bad) (bad) (bad) jne stos nop iret push xchg (bad) mov (bad) sub mov push callq jp jae xlat rex.X rex.X mov push (bad) movabs fisttpll xor (bad) mov iret push cltd mov jle test (bad) pop adc in cmp add (bad) fadd out cmp mov sub rcrb (bad) in movabs cmpl (bad) xchg (bad) xor iret in ja xchg push pushq (bad) shrb loopne scas (bad) mov test xor or rex.WR sarb xchg or and xchg or cmpsb (bad) sub push sub rorb sub mov out rex.B retq xchg int3 xchg es cmp imul and sahf or fidiv xor (bad) mov loop push pop test xchg (bad) mov pop xor jb (bad) mov outsb sbb (bad) fldt cmpsb cmp cmp cs xchg mov add rex.RB stc jbe xchg (bad) xlat scas pop pop rolb cmp cli stos cmp rex.WXB xor pop xor and xor je jp sbb jno mov push nop (bad) cmp (bad) in lret jo xlat xchg jns pop or or xlat xchg rex.R (bad) mov retq sbb jmpq pop pop addr32 sub pop cmpsl mov rex.WR movabs pop sbb retq (bad) in je out push mov in iret jl rex.WR ds add (bad) adc (bad) add mov cmp iret rex.WRXB jo lods adc scas js lahf sub rol mov xor loope cmpsl je push or mov (bad) sbb (bad) jbe jns (bad) xor rex.R rex.WRXB push and jmp jae push repz test js icebp rex.RB mov mov push push sub (bad) mov sbb sbb test movslq (bad) jo shll jb jnp (bad) jno (bad) mov add je in std jp repnz jnp jns fnstenv adc (bad) (bad) addr32 xchg mov jb je loopne (bad) push (bad) sub mov sub (bad) pop mov stc xchg mov (bad) (bad) adc xchg cmp cmc mov xchg fs pop cmp mov mov mov rex.RXB popfq xor (bad) mov add xlat jle sub repz jnp mov (bad) jle stc (bad) (bad) rcrb mov sub (bad) test insl lods cli nop (bad) push rex.WRB imul (bad) or fs cmp mov add fbld rex.RB cltd push xchg sti (bad) lret xor pop (bad) xor (bad) stos fsts xlat pop or andl rex.WRX push fcomps xchg and xor pop add xchg pop rex.WXB sarq rorb sbb sbb neg sub notl fsubs sbb (bad) xchg jns outsb and cmpsb adc jmpq cmp lret (bad) mov pop push jns outsl std (bad) movabs fsubrp rex.WR icebp adc or sub fnstsw ror cs (bad) leaveq jo sub jb (bad) jmpq rex.WR rex.WX (bad) lods test cld (bad) (bad) out flds rex.R fildl pop addr32 (bad) fldt jne pop push jno or fmull mov sbb icebp fldt (bad) lret rex.W (bad) xor (bad) pop (bad) sub fistl (bad) (bad) gs sub (bad) jno sbb jnp cmpsb mov sbb rex.WRX push rex.WRXB pop rex.R rex.WX rex.WRB rex.XB mov push xchg cld in jnp add mov mov ja js rcr icebp int adc in add xor fldl pop jmp outsb push pop pop fidivr rex.WX fs fcmovnb sub cmp jae sbb fcmovnbe and pop lahf rex.WRB movabs sbb fcmovnbe icebp xchg add pop movslq ja mull jge orl loope mov js mov scas movslq movsl nop rolb ja xor cli fldt sbb (bad) (bad) mov pop int3 mov mov in or test pop shr jg cmp vpsrlw mov cmp mov in and fnstenv stos xchg (bad) movabs cmp (bad) imul (bad) xor cmp (bad) or mov (bad) xlat test (bad) outsb scas in lret sbb iret xchg mov xchg adc outsl sahf imul mov push (bad) stc rex.RX stos (bad) fcomi movabs test xor jp xchg xchg (bad) fcmovnb ja sti and loope sbb (bad) rex.RX fwait xor imul stos in rex.X in loop movsb sub pop movabs (bad) pushq xchg mov mov add rex.WXB (bad) fistpl (bad) (bad) ss push mov jle mov cmp xchg icebp add lahf mov int imul sub fldt movabs (bad) mov lods mov ja or retq add push ss xor std imul jl in fwait xor fcmovb push sub leaveq or mov fistpl push fisub mov (bad) rcrl (bad) (bad) xor sbb leaveq je jle adc push (bad) imul fs sub in (bad) movabs and jns xchg adc fistpl (bad) popq mov xchg (bad) scas movabs rep (bad) pop cmpsb mov push add rex.RB cltd mov xchg jmpq rex.WXB lret stc movsl rex.WRXB rex.R (bad) xchg in jnp rex.WRX rex.WR (bad) rex.WRB sub (bad) pushq lahf and ftst xchg (bad) fcmovnu xchg or test cmp xchg sbb fstpt pop ficoml sub pop lods (bad) popfq in fstpt (bad) jbe jnp popfq xchg jmp out test xchg shrb in adc jle (bad) cld (bad) lret or iret and cmp mov pop sahf sub sub push rorl in xlat (bad) push add mov or mov mov lods sbbb movabs rex.W movslq jb insb cmp scas sub xor rex.RB cltd retq loopne (bad) adc scas mov je shrl push mulb jae mov std mov fidivrl pop (bad) movsl fsubr jl adc fldcw hlt mov cmp rex rex.WR stc add cmp adc rex.WB out cs movabs cs (bad) icebp pop or mov sub pop loope add jnp (bad) movabs icebp rclb jnp out jmpq (bad) rol lods mov or (bad) jnp (bad) (bad) fimul (bad) sub push int psraw (bad) cmp sbb idivl or jnp fcmovnu xchg insl movabs stos sub pop scas xchg xchg mov loope jmpq mov lahf test iret xor xchg clc jmp shlb rex.WR mov pop jnp je cmp rex.WB data16 fwait imul mov mov fistl and lret fndisi(8087 adc jns add outsl (bad) (bad) repnz lret (bad) pop cmc mov mov jg cltd xchg pop clc push fistp sub rex.R lret fstpl addr32 add jle rex.RX fistpll pop out fsubl insb cmp (bad) jne stos fcmovne outsl imul pushfq rex.WX jae pop loop and sbb or outsb ror push add mov (bad) (bad) rex.R mov movsl rex.WXB movsb fdivs mov cmp push fcmovnb mov or xchg (bad) out (bad) rex.XB cs stos (bad) sbb out (bad) mov mov mov and push vcmppd (bad) nop (bad) sub pop (bad) jbe xor adc sbb (bad) (bad) mov jmp lahf data16 push pop mov and xor (bad) fldt sahf xchg sub clc mov loope imul lret mov jo (bad) lods shrb rex.WRX fwait xchg mov (bad) or jp jae add clc sub iret cmp pop (bad) fistl sarb adc (bad) (bad) fsts jne pushq fwait retq or rex.XB xlat repnz mov sbb out cld test mov stos adc rcl movabs add (bad) lret sub jle orb add and adc sti mov mov hlt mov fadd cmc loop mov mov movsb pushq rex.WRX mov push mov push fwait xlat sub mov push push out pop jnp sub sub retq (bad) xor int3 mov movsb (bad) fstps in cs sub sbb in mov mov xorl (bad) cwtl cmp mov xor pop jrcxz andl (bad) jg adc and cmp jmpq pop jp (bad) mov or (bad) pop pushfq jns stc fadds (bad) stos and addr32 fwait (bad) shl repz lods xchg jne (bad) sub or ss push adc push mov xor xchg cwtl add lea mov sub movslq (bad) (bad) fiaddl and sahf loope (bad) mov in fistpl (bad) jo pop xchg sbb ss xchg shl (bad) mov push iret xorl xchg sahf xor (bad) jbe (bad) cmp retq ds movabs imul lahf cmc iret jnp push mov (bad) outsl int cmp pop insl js add (bad) int ja cwtl fdivrl and retq push xor fprem es xchg and or (bad) cltd enterq jle (bad) mov outsb retq xchg roll shrb (bad) (bad) pop pop xchg adc rex.RB pop pop xchg jmp notb jg cmpb mov mov and sbb clc rex.RX andb sub xor sbb (bad) add (bad) and mov xchg add enterq xchg rex.RXB xchg mov lret imul pop push (bad) rex.WX xor repz cmp or pushq mov push jge mov loopne test in icebp or cmc push ss in movsl rex.RB out mov pushfq repnz rclb rex.RB ja lret (bad) (bad) addr32 add (bad) cmpsl cmp (bad) rex.WB scas (bad) mov rcrb sbbl (bad) (bad) pushq sbb rex.XB pop sub icebp sbb jrcxz pop (bad) (bad) callq sti imul stos cmp jl mov insl pop iret cmpsl cmp add rcll (bad) (bad) rex.XB (bad) mov pop fisttpl sbb mov repz xor cmc jne add mov mov mov lea mov retq adc repz add std and pop mov nop mov mov jne adc cmp scas cmc sub nop jne push push hlt leaveq lods (bad) repz test ror (bad) fisttpl (bad) xchg rex.WRB rorb repnz (bad) out jae sbb (bad) adc rex.X mov (bad) data16 (bad) sub in pushfq mov rcrl outsl and mov xor test loope or (bad) or cmp pop popfq (bad) fisubl fisttpl stos in pushfq sbb (bad) (bad) loop mov push mov cmp in pop retq jle (bad) xor or mov (bad) rex.WRXB movabs retq incb imul pushq pop je sbb popfq rolb pop insb lahf imul sbb cld out push cmpsb pop fincstp cwtl lods xor out jmpq in sbb jnp fmuls retq mov (bad) xchg clc fildl cmp (bad) in and mov insb jnp (bad) (bad) es (bad) jmpq (bad) (bad) (bad) mov or fisttpl (bad) and sbb pushq movabs (bad) jl flds xchg loope sbb sbb (bad) pop mov (bad) or mov loope movabs out xchg imul adc sbb (bad) enterq mov push push rex.WRX js jae rex (bad) xor cs xchg (bad) xchg mov gs rex.R imul fisttp jl (bad) jae sti xorl (bad) xchg sbb sahf rex.WXB mull xor push cmp jl mov (bad) mov sahf xor sbbl (bad) fbstp mov xchg stos fwait cmp movslq rex mov js ds rex.WRX rex.W stos test rcr (bad) or (bad) jae (bad) sbb stc leaveq (bad) fwait (bad) (bad) jl ds rex.RX ja lret xchg sbb cmp lods push jae lahf pop (bad) loope push loopne fstpt pop (bad) fiadd fstp js pop mov add (bad) es add ds rex.WRXB addr32 and cmp rex.RX orl rex.WRX rex.RXB fs or pop adc stc (bad) (bad) push and jb fsubs sbb lahf cmp faddl sub jge insl sbb pop lock adc jo cmp insl in negb push pop xchg add in rex.X movslq fstpl loopne test rex.WRB fstpt push retq rex.WB cmc add cltd stos mov repz cmp xchg push pop and jno adc fildl xchg adc test scas add and callq (bad) mov fcmovne add lods xchg fistpl movabs pushfq pop lret (bad) rex.RXB sti loope add test rex.WXB fcmovbe fwait jmpq fwait rex.WX popfq retq loop scas out (bad) rcr (bad) and mov fistl cmpsl in (bad) (bad) (bad) shrb sbb ds sub push cwtl sbb movabs mov fisubrl (bad) add pushq popfq cmp sub scas out rex.WX rex.WR xchg imul ficomp rex.WB push xchg add and sbb push testl jno (bad) js or rex.RB pop insb movsb push cltd icebp fstpl rex.X jmp (bad) je rex.WR sbb outsb mov pushq rex.WRB rep orl adc add lods out jg stos push outsl cs (bad) xor and xchg std shl sti repz fcoms push retq mov cmc (bad) out adc (bad) mov sbb pop (bad) mov pop (bad) adcl out pop out out sub (bad) rolb hlt loop sbb push int3 repz in retq (bad) outsb rex.W (bad) fcmovu out mov pop sbb std and sbb xchg es mov (bad) addr32 push pop adc sub rex.R add (bad) push lahf sub shr fisub jae rex.WX rex.WB es (bad) xor pop sub (bad) mov xchg mov mov rex.WRX pop sub testl test rex.WB ss lods retq addl adc mov cmp fadd leaveq cmp (bad) xchg (bad) jmpq pop decb (bad) lock cld shr stos mov fstps pushq loope jns out lods mov (bad) and movabs xchg and (bad) fbstp fs sbb outsb callq retq add data16 fwait adc (bad) mov rex.WR xchg rolb out sbb push std add movabs iretw mov fnsetpm(287 outsl cmpb loop fndisi(8087 (bad) mov (bad) xchg add pushq sarb (bad) fcmovnb mov (bad) (bad) add rex.RXB pushq and rex.WB rex.W or test movabs fwait mov pop jmp fstps mov mov movsl (bad) (bad) rex.RXB pop xor mov movsl gs xor movabs movsb pop rex.R data16 adc hlt out pop stos sbb mov outsl movabs rex.R lods fistl cltd mov mov (bad) cld retq movabs loope push pop mov sub loopne rex.RX imul fistl fmull negb jno cmp lea pushq jmp jnp sbb xchg fmull imul imul push adc pop adc and jle jp movabs jl push data16 mov mov adc popfq (bad) pop stos (bad) test xchg jmpq xor nop movabs jbe jmp cwtl outsl cli (bad) cmpsb mov imul repnz mov stos xor lods movb pop jne pop jnp mov push movslq fwait mov pop rex.B (bad) rex.WRB popfq pop in imul gs fstpt add loope iret xchg (bad) fdivs popfq fildl mov lods cwtl fildl rex.B (bad) (bad) sbb push cmp sub mov test fldt pop sahf (bad) push mov sub fmul lret rex.WB (bad) sbb fisttpl fidivrl addr32 push popfq xor sarb out push (bad) ror xchg in in (bad) addr32 mov fdivrl pop mov (bad) sti rex.R or (bad) movsl (bad) (bad) lea adc (bad) retq lods movslq add enterq in (bad) shl rorb vandps sarl fist repnz imulb or (bad) (bad) cld test xchg pop mov sbb adc (bad) push cmp fwait (bad) stos xor mov mov mov test psubsw cmp (bad) roll callw jmpq (bad) push (bad) add sarl jae fwait (bad) je maskmovq mull (bad) fcmovnbe jle test loope,pt fistl insb rex.RX mov (bad) jno (bad) nop mov xor push movsb popfq mov sbb rex.WRX test rex.XB int3 leaveq in jg xchg sbb scas sbb imul pop cwtl fildl rex.WXB (bad) add rex.W xchg retq fwait movsb (bad) jo retq es sbb mov movslq pushq lods fidivr mov ffree mov cmp sub pop and imul xchg js (bad) xchg cltd add mov cmpsb adc movhps push or (bad) adc pushq jl mov iret (bad) (bad) push stos pop (bad) sub js rcrb xchg fisttpl (bad) pop scas fstpt adc push or (bad) icebp rex.W ds xchg push mov mov pop in cmpsl std nop fistp cmp mov lret addr32 xchg fist rex and mov jnp xorl xor cmp (bad) iret imul loop and fwait add cld xor and fstps xchg je pop fcmovnb mov in xor fildl sbb shlb fcmovu and lret cmp mov rex.WRB fs and loop hlt xchg jp xlat sub adc (bad) je addr32 fdivrs xchg stc movslq (bad) fcomi jmpq xchg push (bad) mov push rex sub jnp jns (bad) lcall jg movabs fidiv (bad) (bad) jnp stos xchg push retq xchg (bad) mov out cmp (bad) adc rex.WRXB sbb jge fwait and (bad) jno mov jmpq sub fs stos jnp jl xchg adc imul cmp mov (bad) pop pop movsb int3 out jge fstpt cld sbb gs movsb repnz lods mov pushfq add rex.B pop jnp jb (bad) imul in cmc outsb cmp scas loope and mov iret adc cmp fisttpl (bad) sub cmc sbb xor (bad) js rex.WXB sbb in ja shrb pop sti rex.XB sub xchg or loope fistl mov sub shlb add xchg fistl or rex.WR sbb rex.WRB rex.XB jb mov and hlt fcomi jle mov (bad) mov stc jrcxz imul lock (bad) cmp retq and cs pop sub rex.XB or subb xor rex.WR jl cmp rex.RB (bad) scas in (bad) repnz adc adc cmp (bad) outsl std (bad) jnp push adc mov fucomi fcoml lods (bad) sahf fucomi mov jle fcmovne imull pop (bad) cmpsl jg (bad) pop xchg outsl jno (bad) (bad) mov sbb push (bad) push xchg rex.W adc cs pushq (bad) mov mov fildll es jo and sbb fwait rex (bad) xchg orl cmp jge leaveq cmp (bad) mov in ja (bad) cld callq rex.R (bad) (bad) iret fistpl cltd jrcxz pop rex.WR and fbstp or fcompl icebp (bad) js (bad) cmp mov rex.XB out rex.WB out xor ffreep in fiaddl ss clc mov test xor lods (bad) xor sbb (bad) xchg or scas mov cltd jl cwtl data16 test mov ja fwait mov fiaddl add shr movsb pushq nop gs test cmc mov adc xchg mov test fisub or cli xchg (bad) fdivs mov cmp (bad) adc insb xlat sar add cmovne lea imul rcrb cmp cld xchg jg movabs cld mov mov mov add cmp mov movabs push mov xor and rex.WX test xchg rolb test enterq rex.WRXB jrcxz jb jp sahf out cmp icebp stc lea pop callq negl (bad) (bad) movabs jp push fs pop test (bad) push rex.R mov fwait mov pop cmp xor mov push xchg jnp rex.WXB (bad) sub fucomi mov xor mov xor cs pop imul rorl icebp fisttpll add rex.X push movslq fldt (bad) mov xchg insl cmp jae cmp jl cmp test fildl xor sbb retq pop fldt cmp xor enterq rex.WXB rex.B in stc fistl xchg rex.R rcrb lret lods push iret rex.WRX fs (bad) insb fsubs cmp sbb push ds fcmovnbe loope lods movabs adc mov in and sbb (bad) imul lret rex.WR jne test cli adc divl and fcoms sbb cmp repz outsb jnp insb pop fcmovb mov retq sbb imul retq sbbl or add callq pushq stos stos mov rex.WRXB in mov (bad) (bad) repz sub xchg icebp pop callq cmc jge insb sbb stos rclb fucomi out pop cs enterq jp (bad) add push jl int pushq movabs mov mov nop sbb fcmovnbe jp (bad) xor mov sbb in movslq std outsl (bad) cmpsl xchg xchg xor sub xchg (bad) data16 jnp cmc xlat (bad) xchg mov mov xor pop jmp in jrcxz jg (bad) fs callq jnp xchg (bad) lret fistl fwait xor (bad) (bad) loop jge (bad) xor movabs (bad) fs pop and retq xchg stos retq clc rex.X rex.RB ror jge imull pop sbb adc (bad) cmp mov lret xor repnz mov rex.W and jg fistl xchg cmp adc jnp stc rex.WX fcoml (bad) ss (bad) (bad) addr32 jl int rex.WRB cmpsl mov mov cltd icebp pop push ss in stos rex xchg pop jge sti mov mov lahf scas xorl jl mov cmpsb (bad) lret insl pop enterq cltd jp xlat fdivr pushq and or mov cltd pop or (bad) lock outsb mov popfq (bad) sub pop add xchg xchg jmp cmp xchg nop mov rex.RB fs rcl cld (bad) mov outsb push cli addr32 test (bad) rex.RXB repz xor fcomps rex.XB (bad) xor repnz in pop frstor mov test movslq lea rol cwtl rex loope jmpq add pop stos rex.WR cmp and mov fcmovnu jnp mov (bad) stos scas (bad) mov rex.WRX jb (bad) sub int3 (bad) (bad) sub test (bad) rex.RXB rex repz mov xor fistl rex.B (bad) rex.WR (bad) fwait push push rex.WRB mov ds xchg lods imul sbb repnz (bad) pop ss rex.W in lret xchg sti loopne xlat cmp adc fistpl mov fadds cs rex.XB repnz fistl mov retq xchg repz pop mov (bad) ja and add cmp adc (bad) mov xchg addl fstpt mov (bad) adc outsb fldt jl add movabs fsubrs fcmovne mov out add fwait movslq movslq (bad) mov lahf jp insl (bad) cmpsb fnstenv cli cmp (bad) callq fcmovbe add sub rex.WB jo fsub sbb cmp (bad) jl int icebp push jbe sbb (bad) movsl (bad) (bad) pop out push lret retq rex.WX and cmp sub or adc leaveq jne negb (bad) imul rex.B repnz sub cmp gs (bad) (bad) rex.WX (bad) cmpsl and sbb fucomi or mov (bad) (bad) fld and xor (bad) mov (bad) mov sti add pop rex.WR (bad) push jno sbb mov pushfq es mov movsl movabs or movsb (bad) sub pop hlt leaveq add cmpsb test push add cli pop fisub jnp mov pushq (bad) fldt mov (bad) ja retq sbb lret rex.RXB jnp subl and nop fildl rex.X sahf mov pushq movabs cld lock (bad) lret stos add retq add rex.RB (bad) mov adc sbb addr32 cmc or fisttp (bad) fnstenv movslq mov (bad) cmp movabs (bad) cmp repnz (bad) stc add rex.B (bad) cmp jb add (bad) psubsb rex.WRB xchg rex.WRB cmp xor rex.RX (bad) cmp (bad) movabs fcomi stc sub mov mov and pop lret cmp push (bad) sub mov xor test (bad) movabs rex.R movabs (bad) out push cmp (bad) fistl in pushfq sbb je xchg sub (bad) enterq movslq (bad) fcoms mov add imul mov xchg or rex.WRXB xor mov jbe movslq movabs test cmpsl (bad) or (bad) jmpq jnp pop xor mov pop fldt rex.RXB (bad) jge add lret out fist push enterq mov cld (bad) and es sbb pushq cmpsl sub int3 cwtl push test enterq shlb mov (bad) out rex.B out xchg (bad) add xchg xchg mov xor (bad) pop sbb movabs repz cs out or add js push mov movabs add (bad) cmp in or sbb sbb je fmulp xor in jae int3 imul outsb (bad) (bad) (bad) fistl fistpl sbb fldt adc (bad) mov (bad) (bad) or or jle sub in cld mov popfq sbb movsb xlat rex.WRB stos (bad) fildll mov add (bad) outsb (bad) pop hlt or int (bad) push je callq movslq scas cmp sub mov sub pop mov lahf (bad) mov or fcmovnu divl rex.WX out lahf add outsl and lret cmp mov shl outsl movslq rorl fmuls (bad) fldt sub jnp cli sub sti int3 mov retq sti cltd outsb jne xchg push mov mov (bad) (bad) (bad) ficom rex addr32 fildl xchg stos pop test fldt sbb add lea cmp fcoms xchg cmp es pop lahf fcoms or mov int mov callq cmp sub shrb and sub icebp mov rex.XB (bad) jae rex.W xor mov jmp nop retq add and rex jae (bad) imul cmpsb sbb cmp out lret cmp pop insl add sahf shr fbld retq retq (bad) (bad) mov sbb mov (bad) fild fstpt clc xor fstps sub add fwait stos fimull pop (bad) imul jo andl rex.X xchg mov or out fildl movsb (bad) je repz (bad) sarb fwait movl (bad) pop mov imul rex.RXB fbld jmp insb or xchg (bad) rol jle fisub (bad) xchg and pop pop cmp cmp xlat mov insb and in cmp sub fdivp insl rex.XB jns stos fildl (bad) pop fidivrl fistpl fisttpll push sahf outsb jrcxz mov and push mov hlt stos sbb fildl js (bad) icebp mov rex.B jns fistpl push mov fwait mov movabs mov iret add fistpl add fldt push sbb and (bad) add push mov and (bad) push jns (bad) (bad) rorb (bad) imul (bad) pushq (bad) addl (bad) mov sbb (bad) sub in lahf rclb js and (bad) fstp pop and rolb jle movabs mov leaveq dec mov and cmp push rex.WR (bad) es xchg fcompl push (bad) lock test (bad) outsl jbe rex.RXB xchg mov push add movsb (bad) (bad) add retq lret push ds fildl mov retq fisttpl push cmp rex.RX mulb or rep sahf rex.WXB sti fldt rex.RXB ds rorl addr32 int popfq pop lret sub xchg rex.RXB imul scas data16 (bad) xchg fsubl push (bad) (bad) scas mov jl movabs cltd (bad) push adc pop (bad) pushq jno xchg jnp push sbb or jno push pop sahf jns out sbbl je cmp (bad) and xchg pop sar (bad) (bad) or scas xchg xchg repnz out add (bad) movabs flds addr32 jb fisubl jb jrcxz,pn sbb scas es pop xchg jns in xlat (bad) sti add sbb (bad) pop jl mov lods rcrb movabs (bad) mov and iret jrcxz adc mov jb mov mov (bad) (bad) mov rclb sbb stos mov movabs sbb cmp scas test cmp std jb xchg out sub sbb or fdivrl rex.B out ja pop sbb (bad) lret retq cli data16 jge push pushfq (bad) or (bad) jns lea sahf je xchg sbb (bad) mov repz or add xlat (bad) cs rolb fimull fsts fnop (bad) add mov cwtl (bad) movabs rcr rcrl or mov rex.RB push fcmovu insl (bad) (bad) movabs sti imul pop sub test ss add xchg or insl mov and outsb movsb xchg rex.WRX fwait push hlt fdivrl cmpsl test cmpsb (bad) test (bad) fwait imulb lret callq mov jb xchg adc (bad) adc imulb pop (bad) gs and cltd mov sarb stc (bad) and test add fs insl xchg ficoml jrcxz negl cmp movslq cmc (bad) pop ficoml mov cmp and imul rex.WX loope movabs xchg outsl pop test cmp hlt fucomi imul shrb jne jb cli mov and movabs shll pop (bad) hlt mov mov (bad) imul push mov xchg (bad) push mov fcmovnb pushq cmc (bad) jge mov mov jl pop rex rex.WRXB popq fildl rex.XB push retq ds (bad) hlt mov fistpl popfq cmpsl or fstpt mov rex.WB (bad) fadds (bad) (bad) rex.WX enterq jb gs stos mov cli or sub fadds sbb repz mov mov sub fistpl lea jb mov (bad) pop or (bad) fisubl jnp mov fistpl lret pop js sti rex.B sahf and callq fmul cmp (bad) pop pop int3 retq and insl es mov loopne (bad) outsl shrb jrcxz fildl adc fxch adc pop outsb push push lahf cmpsb cmp and fldt int mov test rex.XB in mov mov push adc pop adc mov (bad) in fstpt movabs cmpsb clc ficompl xlat sbb jnp xchg cs rex.W rex mov hlt sub stc (bad) fildl sub rex.XB pushq rex.WRB add and mov fidiv addr32 add pop mov jnp xchg lock pop pushq fistl rex.RX outsb or (bad) sbb jae or repz movabs mov ja cmp data16 pop mov movabs clc cmp rex.XB (bad) lret sub cltd movslq rex.XB es sub pushq add ss incl fstpt jbe and orl addr32 xchg adc lret jbe pop idiv sahf rcll stos sar andl (bad) test cld sbb (bad) pop mov in jp cmc fstpt sbb sbb mov xor popfq sub in subl adc add int adc sti or test sbb (bad) jg mov sub rex.B int3 hlt or jrcxz jne fldt lahf popfq mov cmp pop test (bad) (bad) sahf push add (bad) jnp sub bnd scas push cmpsl adc lret sbb xchg pop add pop pop enterq fisttp outsb rex.XB cli sarl fwait cmp addr32 (bad) jnp shr iret xchg adc xchg fistpl movsl mov mov mov movabs (bad) mov fldt lahf retq push cli stos outsl or sbb retq mov (bad) mul sbb data16 (bad) rex.WB cltd add adc jrcxz rex.WRX rex.RXB rcrb test (bad) xchg mov rex adc and xchg testl loopne mov jle pushfq mov mov jrcxz cmp cmc flds ja mov mov clc jbe fildll rex.WR add sub (bad) xchg clc rex.RX lock (bad) jmpq sbb or fwait pop mov jbe cli fwait sti add (bad) fcmovne (bad) callq and stc jbe adc mov or and and jb xor fisttpl (bad) (bad) int loopne (bad) pop insl and rex.WRB xchg fcmovbe add pushq xlat fildl or push fstpt pop adc or lods fcmovnbe and in popfq xchg out mov lahf rex.B loop fcmovu xchg rex.R test sbb or add (bad) jns xchg sbb je loopne rex.RXB mov fstpt rex xor addr32 xchg lea in jg (bad) repz stos push rex.WR gs (bad) jnp mov clc outsl test sub (bad) cmp adc int movabs cmpsb jmp jmpq sub sbb or cld (bad) in mov sub idivl jae scas pop mov xchg xchg loop adc in stc jo and retq lods fisttpl cmp xchg and fistpl mov repnz xchg sti and cmc fistpl (bad) sub (bad) (bad) push rex.WRXB fcmovnu in ds outsb rex.WX ss fcomps push (bad) hlt jns fstpt outsl jle fcmovnbe xchg mov rex.R (bad) (bad) or fistpl mov push movabs (bad) cmp (bad) fildl (bad) or and cmpsb nop retq (bad) fistl mov (bad) sub cmp fistl rex.WRX push (bad) std js (bad) lret pushq (bad) and jnp adc sbb mov cs xor (bad) (bad) repnz jae or push jg sbb jge add popfq lahf (bad) cmp mov mov (bad) scas rex.WXB (bad) iret retq imul fwait lock leaveq sbb (bad) or mov mov xor fldt hlt rex.WXB sbb xchg pop rex.R ja push cmp and push xor add ds in fcmovnbe xor jge (bad) es push movsl jbe addr32 subl rex.W std in xchg (bad) (bad) fs (bad) insl mov rex.R (bad) sbb jp sub (bad) push out (bad) (bad) mov mov push sub rcrb scas xchg pop repz xchg outsl cltd jnp pop fidivl fcmove andb sbbl iret cmp push retq xchg lahf (bad) rex.XB push iret movabs insl jns movabs retq cmp pushq push fwait sub push cmp jrcxz fadds rex.XB (bad) jnp,pt pushfq pushq in (bad) loope (bad) xchg out xchg or pushfq mov xlat in sbb mov mov cld fsts pop cmp cmp lea sub add lahf repnz cli popq vpcmpeqb pop jne adc (bad) insl outsl lret mov jnp (bad) push add sub nop xchg (bad) pop hlt (bad) sbb pop and (bad) testb sbb repz and sub add movslq mov fldt outsb mov sub fidivr mov push rex.WRXB out (bad) iret (bad) out mov xor jl and retq (bad) lods rex.WX stc (bad) repnz fcmovnu (bad) (bad) es pop jp data16 jnp add mov jle (bad) mov rorb cli sub rex.RB xchg jb negl (bad) pop cmp rex.W rex.WRB rex.WXB cmp fistl (bad) jmpq xchg xchg loop or insb sbb (bad) insl jp rex.X ss adc sbbl movabs lret sbb xchg lahf retq pop mov rex jmp outsl fndisi(8087 mul (bad) in xor (bad) fisubr xchg and or sub (bad) rex.WXB (bad) imulb sbb pop rex.WRXB jrcxz loop ja rex.WXB fistpl rsm lods mov sbb rex.RX (bad) sbb fwait mov pop lea (bad) es outsl loope (bad) fs (bad) rex.WXB js fistl fs (bad) mov jrcxz cmp and add jb rex.R mov (bad) pop sub mov mov xchg ffree jp repz je fidivl push xchg and sbb data16 pushfq push clc sub jns in movsl jle (bad) out xchg in (bad) pop loopne and or push sub fiadd jne or repz (bad) in jl push xor push cld mov and adc xchg ja fwait gs ror (bad) outsl push out xchg stos lods mov mov sti jle mov ss jns addr32 push scas out pop or (bad) pop pushfq (bad) rex.WRXB cmp js insl fwait cld mov cld mov xchg adc shrb cmp (bad) xchg sbb movslq add (bad) (bad) (bad) (bad) retq scas push cltd add (bad) mov add addr32 jae mov jmp rcl cmc pop rex.RB (bad) xor pop push cmp pop stc std push mov lret and (bad) push xor rol rex.RXB sub rex.WRX cmp mov (bad) jp mov cmc mov ja in rex.WR push movsl (bad) fcmovnb xor lods mov mov fldt fs rex.RX cmp int mov jae or (bad) xchg (bad) neg xchg pushq mov fidivl clc icebp fistpl rclb adc fldt (bad) loope push xchg (bad) imul mov cwtl incl xorl (bad) or retq rcll stos pop test imul mov jl loope int3 cld fstpt faddl pop fldt in scas xchg pop pop xchg pop movabs jo repnz mov je lret (bad) add rex fildl adc xor sbb fldt lods hlt andl (bad) pop rex.W mov (bad) cmp fwait test xchg (bad) fnstenv in sbb pop (bad) jnp xor fistpl rex.WB (bad) (bad) and int rex.WRX imul insl je pop push or xor lret (bad) mov or mov leaveq (bad) (bad) push rex.RB cmpsb jb mov cmp sub pushq outsb rex.WX cmp xor mov rex.WRB hlt add cmp fistl icebp (bad) in fldt sub adc sbb (bad) callq xchg or fwait test sub push and push mov adc leaveq or test jge jns add rorb or imul (bad) stos xchg insb pushq movslq retq fcmovne and mov ds mov stos (bad) pushq insb cmc stc jg adc stos pop push xchg or (bad) push jg iret movd rex.B rex.WR stc pop pop movabs out xchg fldenv push je sbbl or sub (bad) cld add (bad) mov fwait jo loopne xchg jnp stos sbb mov mov xlat test ja sub push sahf (bad) sbb cmp lods (bad) (bad) fwait add mov js or pop (bad) lret es xchg fsubr mov xchg cmp fildl xchg adc adc jmp add xchg iret rex.WX rex.R mov mov (bad) not sub je lods enterq adc testb stos out xchg cmpsb mov sbb leaveq scas je rex.W ds rex.WR in mov (bad) bswap mov push fistl jle xor loopne rex.WRB outsb fwait sub insb jg nop mov rex.WXB data16 mov xor cmp push push lock fisttpl stc int3 loopne pop pop scas rex.WX xchg cli imul add sbb xchg movabs (bad) repz mov outsl rex.WR jnp addl jrcxz fcmovne stos retq lods jrcxz pop xchg sbb shrl cltd jns fstl fistpl or xor rex.W (bad) in lea loop movsb jp fstpt mov push lret test (bad) divb mov cli hlt fisttpl pop (bad) pushq and movabs jmp (bad) sahf push (bad) cld rex.RX callq pand rex.RB stos fistl (bad) mov jmpq jbe rex.WRB or jg movabs imul or jbe sub jo xchg cmp mov shll push mov (bad) (bad) enterq mov (bad) xor out ss (bad) mov in fsub stc fstl shrl xor in rex.WXB fcoms mov mov sti pushfq jl jne stc or adc jne sbbb push fsubp adc mov std scas (bad) (bad) rex.WR add and xor movslq sbb pushq stos std movabs (bad) (bad) sbb mov mov imul (bad) push mov (bad) fstp rex.WXB pop jno push push (bad) iret test adc mov adc xchg (bad) popfq and mov rex.RB sub rex.W popfq sub (bad) (bad) (bad) cmp imul in rex.X rex.WRX (bad) pop loope fsubrl mov lret sahf pushq pop out (bad) out (bad) imul stos (bad) nop add pop (bad) sub mov rex.WRXB push clc push (bad) lret and push (bad) (bad) (bad) xchg (bad) push lret in (bad) int3 rex.RX loop outsb lock cmpsl (bad) xchg or fistpl rex.WR lods outsb rcrb (bad) jb push pushq adc sti fwait or mov mov push sub and and cmpsl adc pop cld retq mov mov mov rex.RX (bad) scas out je fcomps pushq rex.WB rex.W cmp stos in sub (bad) jnp gs mov mov scas rex.WR sti subb in pop rex.R ds je or fwait xchg adc fisubrl mov fstpt rex.R loope or in sbb add std mov ja scas (bad) (bad) adc rex.WRXB leaveq xchg imul rex.X shrb fldt mov xchg add (bad) pop in pop scas andl pop rex.B fistl jrcxz and sbb mov (bad) pushq subl (bad) (bad) cli (bad) xchg loop gs and sti jrcxz fildl rex.WRX jle mov in pop (bad) sahf outsb sbb rex.RX rex.WX sub sbb jle test and fildl movabs sbb rex.WRXB movsb mov pop or mov cmp jrcxz mov (bad) sarl rex.RX mov (bad) add sub add es fucomi xchg mov gs cld (bad) xchg mov jns data16 mov jmp (bad) jo test jle fistpl mov jne push movslq xor (bad) (bad) rex.RX lock (bad) and ss (bad) mov push fcompl shrl orps sub stos movslq xor mov (bad) xchg ja adc jno mov iret fstpt data16 (bad) movslq adc rex.RX fstpt fwait (bad) imul sub jo add fistl rex.WRX xor and or push jnp jno pop out divl in insl pop cmp es rex.WRX rex.W pop lret or rex.RX js (bad) movabs add movsl pop xor lods xor and (bad) pushfq out out fcmovne gs jbe (bad) retq fistl stos or (bad) fstpt push cmp (bad) pop xchg (bad) jb sub cmp ss pop jns mov jmpq rorl pop rex.WRXB test ds fsubrs mov iret (bad) jb out int3 mov (bad) fmull push sbb adc (bad) mov rex.RXB rex.RB sbb mov and insl retq (bad) fldcw mov lcall lods scas xchg rex.WXB rex.WX fistpl callq push imul mov cmp (bad) rex.WX xor nop xor pop je push fucomi mov mov jrcxz fisttp imul xchg jl sbb stos mov test mov or push jge (bad) (bad) mov pop cli in js (bad) imul insl sbb shlb cmp rex.WR jmp (bad) out rex.R rcr (bad) xor and xchg or (bad) (bad) imul sub fcmovnb movabs rex.XB fisttpl rex (bad) mov (bad) sbb jmpq jae or fistpl xor and in test movabs or (bad) cmp fndisi(8087 mov (bad) pop xchg (bad) cld in rex.R pushq cmp pushfw (bad) fstpt jle movabs sarb (bad) mov fxtract mov (bad) nop (bad) xchg push and (bad) out cs mov mov cld add (bad) rex.WRB mov (bad) ficompl mov xlat (bad) mulb (bad) cld sarl push mov mov pop shrb sbb or in negl or mov in mov es cld movsb popfq rex.W pop lods js fstpl or and popfq sbb rex.RB out cli cmp pop rex.WXB ficompl and xchg lods fistp jp or (bad) sub imul mov push pop adc rex.X iret out cmpsb fwait loope (bad) loopne clc xchg (bad) jns pushq sbb pop (bad) xlat push xor fisttpll sub (bad) mov pushq sarb push sub mov sbb xchg sub (bad) or or (bad) movslq jae fsts mov retq test pop callq xor fistl (bad) rcrb cmc or retq sbb (bad) (bad) adc xor rex.WR rex.WR sub pop sarl lret sti mov pop popfq movb repnz movabs add fistl pop jbe jg rex.B (bad) jo movabs and fwait outsb callq (bad) mov test sbb callq mov mov (bad) div int3 rex.X addr32 pop fistl xchg pop rcr and sbb fistpl (bad) stc es outsb rex.WRB jnp movabs es sbb rex.WRXB test and mov lret (bad) pop push xchg insb repnz mov (bad) mov mov sbb leaveq mov fstps mov cmp lock add jrcxz sub rex.WX pop add (bad) (bad) sbb mov movabs pop rex.X movabs adc or push (bad) pushfq or sub add insl sahf leaveq adc (bad) out imul rex.B and jns jrcxz cmp fwait (bad) or rex.WXB mov (bad) enterq out sti mov sbb adc (bad) js stc cwtl out adc sbbb jb jmpq rex.WR fcomps push cwtl (bad) cs cmpsl (bad) pushfq push pop in jo rolb cld (bad) fs adc fs int3 out xor mov fsts pushfq (bad) jbe push push mov test and mov cwtl es stos pop retq inc popfq sahf xchg orl leaveq adc cli xchg jo cmp scas add (bad) cld rex.RB rex hlt rex.RB (bad) jmpq cltd std leaveq movsb mov fscale and (bad) rcrb cmp movsl or pop addr32 cmp (bad) push ficompl or callq jno pop lret fwait movsl hlt rcrl add (bad) xchg (bad) pop repz int jns jnp rorl clc movntps xchg add icebp addr32 (bad) or rex.WXB rex.RX cmp (bad) push sbb rex.W add (bad) cmp (bad) sub mov lods enterq xchg std adc repz cwtl (bad) or imul mov xlat xchg addr32 (bad) add pop (bad) (bad) and mov pop in jnp pop sub scas cmpsl pop (bad) push jbe xor xchg out pushfq (bad) cltd xchg jge xchg cmpsb lods jne and (bad) xchg frndint and rex.X (bad) mov ds fiaddl (bad) (bad) or (bad) test loopne fstps xchg lret rex.R enterq cltd stc (bad) fcomp (bad) adc (bad) pop cltd rex.WRX fwait sbb xchg movabs cmpsl lods (bad) mov mov test and pop (bad) (bad) popq xchg mov fstpl lods (bad) fisubrl or xlat or movabs and cmpsb mov cmpsl fbld ljmp jns xor (bad) xchg int3 xor xchg es (bad) cmpl pushq test imul mov and jne cmc cs adc test xchg (bad) push rex.WRB xchg pushq iret and adc enterq mov fninit in jnp add in xchg leaveq mov jg (bad) (bad) rex.XB (bad) rex.WR mul pop jne (bad) (bad) hlt (bad) sbb sarb adc (bad) mov rcll cmpsl int3 rex.XB repnz fcomi stc rex.WRB jae test adc fcom hlt fisttpl add lock jnp rol adc fisttpl (bad) pop adc insl lret jg int (bad) pushq scas (bad) cwtl or pop rex.RX pop imul rex.WR jl fistl xchg scas xor push (bad) jns lret enterq rex.WXB lock loope xchg pop std mov test rcrl repnz xchg imul movabs rex.W (bad) mov push fldt loop and stos mov rex.WRB (bad) xor add xchg (bad) cmpsl pop rex.RX gs jnp (bad) (bad) fisubrl xchg clc xchg loope adc out mov rex rex.WRX (bad) rex.WR jo (bad) cmp mov mov (bad) adc rcl out out pop pop lock rex.WX fdivr pop jrcxz pop jp repz fisubr fwait jle in xchg pop mov shrl repnz mov rex.WXB rcll (bad) rex.WRB shrl flds jno imul (bad) sbb xchg adc rex.WRB mov movabs iret (bad) test sbb sti js or fnsave ja jne rex.W push stos or imul rclb fwait out mov lret test cmpsl adc pop rex.B in add xchg jle xlat push cltd outsl pop pop (bad) data16 in rex.WXB (bad) (bad) xchg (bad) movhps cmp lods (bad) (bad) icebp cwtl notb mov lret cmp add pop repz jl (bad) scas (bad) rex.RXB cmpsb (bad) loope rcl int3 lcall rex.RB (bad) fs fnstsw pop (bad) mov sbb or sub pop xchg leaveq xchg incl pop sub rclb imul in mull int3 jae jp repnz xchg jns es rex.W scas mov rex.WX (bad) rex.WRX rex.B cmp subb iret (bad) ja rex.WXB fs xlat ficompl mov xor (bad) (bad) (bad) (bad) mov fnstenv push in jno sahf xor addr32 icebp rex.WB jbe and mov xlat adc push rex.WRB xor sub callq and rex.RX outsb fxch fsts pop leaveq enterq (bad) lea mov pop (bad) ds je add sub loopne mov addr32 rex.RXB pop jl (bad) jmpq fstps stc fs test ficoml sarb mov out cs jb pop rex.RB icebp mov in test stc test out add pop sti ficom pop sti xor jno jns xchg (bad) sar jne cld cwtl sti vpavgb adc rclb fdivrs rex.WXB rex.WX xchg ja lods mov jnp js adc mov mov add (bad) lahf ficompl jnp pop jmpq (bad) pop test rex.XB stc xlat sub in popfq leaveq pushq xlat jmpq (bad) dec cltd callq lret mov sbb leaveq mov fdivl shrl cmp xor sahf lahf repz mov (bad) mov fs mov mov push rex rex.RX and cld xlat adc rex.RB (bad) mov out leaveq jno (bad) jns cli cwtl out sbb shlb fimull out mov pop loop movabs xlat out test (bad) xchg movabs pop iret enterq pop or int3 gs mov mov rex.RXB mov xor (bad) cwtl sbb movabs (bad) movabs rex.R jmp in cmp xlat adc cltd push std insb fucom sbb (bad) es loope jo fsub sub sbb cmpsb xchg adc in jb xlat repz xchg or test mov adc xchg cmp in (bad) (bad) retq (bad) sbb push cltd push xor jle mov (bad) jrcxz xchg xchg sub mov jle iret push sub (bad) cld rex.WRX rex.WR (bad) xchg jge xor push scas loop cld ja rex cmp cs iret sub (bad) (bad) xlat stos push adc xor stc (bad) in jb sti mov pop (bad) add ss fwait repnz stos fld loop push xchg clc adc push xor fdivs add mov cmc sar sahf (bad) rorl callq out (bad) push sbb push jle shr push test (bad) ds or repz sub (bad) sbb jb sub and mov repz pop pushq fnstenv push mov rex.RXB rex.WXB mov sti test insl loopne es adc enterq retq cs (bad) push rex.WXB pop (bad) xchg mov cmp repnz (bad) cmpsl fisttpl push lea loop adc enterq test pop xchg sub mov shr montmul cmpsb test (bad) addr32 lret (bad) fsts (bad) adc (bad) (bad) adc fistl xor jmp loopne pop or jns fldt scas jmpq jl sbb popfq pop movabs push (bad) imul (bad) cwtl in push leaveq data16 lahf ja rorb out jrcxz (bad) or icebp pop push jmp (bad) and (bad) mov and cmp leaveq sahf (bad) rex.WXB push cmp add (bad) std outsl rex.WR fistl mov jae lret mov xor (bad) mov movabs adc (bad) rex.X rex.XB mov sbb sub (bad) pushq lret rclb fildl add adc rex.X sbb (bad) pushq fcmovne sub (bad) (bad) (bad) push sub fisttpl (bad) es in movabs cmp push xchg scas mov (bad) and and (bad) cmp mov pop xchg test retq rex.WXB (bad) or insb (bad) bnd jg jnp push jmpq fistpl push rcr test lock hlt (bad) ds jae rex.WR cmp fistl pop retq stos (bad) mov sarl scas nop outsl (bad) pop mov insl and pushfq cmpsl rex.RX fldt add sbb lea out xchg ljmp rex.XB (bad) sbb sbb cmp and sub xor mov cmpsb push lret mov xchg movabs (bad) ja,pn lret fstpt cmpsb (bad) cmp fcmovne je sub sub (bad) out jns ja rex.RX stos icebp or (bad) xchg out mov fildl and cmp pop sbb fistpl clc or push mov add jno mov stos adcl fldt push sahf repnz xchg enterq lea push rex.R rex.WB fs ds jmpq pushfq fcmovnbe movabs cld loopne (bad) jno jae mov (bad) lods fdiv cmp add mov add pop jbe sub mov (bad) ss pop or mov fcmovnu in pop test jns rex.X fidiv sbb pushfq lret xlat add (bad) (bad) jp out pop xchg lret movsb push xchg stc (bad) repz ja mov cmpsb pop jle xor or stc xchg insl (bad) clc (bad) (bad) fistpl sub mov scas sbb add (bad) cs adc lahf rex.X repnz fistpl lock rex.WR mov fld clc fistl rex.W fistp push cmp sbb shrb (bad) push fwait cs mov fwait (bad) rex.RXB and xor out (bad) movsb mov or je rex.WRX rex.B mov out in jl mov mov stc test fadd fistpl (bad) jge fisub loopne (bad) xor or jbe cs cmpsl out xchg pop rex.WRB pop jno (bad) or in jnp rex.B jmpq fmul add icebp out jne outsb mov pop fisttpl scas hlt mov xchg pop jbe sahf in mov and sub sub sub stos outsb xlat lods fistpl lock or (bad) xchg hlt test jb lods (bad) (bad) fsubrs (bad) shrb sbb cmp push (bad) (bad) pop adc and idivb (bad) (bad) ja fwait jbe add jo (bad) scas or mov mov (bad) (bad) fbstp mov sbb jb mov mov out lea cmpsl cmp lret loop rcl jnp rclb out cld xchg scas loop jbe mov movsb flds cltd jbe pop je push (bad) jo lahf jmpq pop lock popfq add push fstps rex.RX jbe retq xchg push adc jo or rex.RXB in jmpq (bad) cmp pop adc sub test (bad) mov cwtl movabs pop shrl movabs sub and (bad) jb jo pushq je or sbb loopne and adc pushq rex.WB (bad) cmp mov mov iret cmp fldl push lret punpckldq or sub jno cmp dec or rex.RXB rcr (bad) adc pop add movsb cmpsl scas push mov repnz jne or mov xlat add push sub movsb sbb mov rcrl fstpt cwtl test fildll sub mov (bad) mov retq rex.WRXB fildl (bad) iret push fisttpl jns add xchg mov fsubrp (bad) in mov in fisttpl (bad) mov outsl int fldt xchg std sarl mov sti lret icebp sahf sbb push (bad) jle lods fstpt int3 (bad) fs (bad) popq jg negl rex.WRXB sub test pushq xor negb jns rex.WRB fdivr outsl (bad) retq (bad) jp jo push lods cld cmc loopne movabs movabs mov (bad) mov mov stos mov out (bad) (bad) rex.WX stos int (bad) (bad) (bad) pop xchg out add rorb divb jrcxz stc enterq fildl rex.RXB and pop loopne rcll (bad) jnp mov (bad) lock std fidivl fisttpl pop mov cmp subl (bad) insb mov jrcxz out popfq fistl adc rex.WXB mov fstpt jmp repz int (bad) rex.RX xchg std fcmovnu mov pop callq addr32 mov pop cmp and cmpsb pop fsubs rex.XB fwait loope (bad) (bad) (bad) push xchg pop lahf jnp jmpq or push jo cmp xlat add mov loope push test rex.RB (bad) mov (bad) (bad) jle (bad) popfq es sub or sub jge nop xor pushq sbb cmp xchg add pop (bad) sub stc xchg and outsb mov xor mov movslq mov fistpl (bad) adc rcrl (bad) mov mov imul sub push cmc loope push xor (bad) push out popfq and outsl jl jnp mov addr32 fildl (bad) xchg in int sarb rex sbb push and imull cli movabs (bad) mov fisubrl add xchg lea fildl xor mov rex.WRXB fidivrl je lahf test pop (bad) retq push and fistpl push enterq in movabs pop push and jo jb,pn loop xchg (bad) fcmovnbe push xchg push out movslq (bad) rorl sti (bad) stos pop pop add rex.RX and xor in in iret (bad) sarb pop hlt cli rex.WXB sub push cmp pop jmpq lock (bad) jle push nop int sbb fabs xor sti xlat jp jae fistpll jne (bad) out out cs (bad) fs xlat pop xor jmpq cli jrcxz nop cmp (bad) callq cmpq leaveq xchg int pop jo shrl (bad) iret push mov pop cmp pushq rex.WRX fs mov scas rex.WRB lret xchg imul (bad) (bad) movabs test rex.B jns int (bad) rex.WRXB jle fistpl and sti fisttpl cmc fcoml je imul out fstpt rex.RB scas cmp mov loopne addr32 and imul (bad) mov (bad) stos xor js (bad) sbb xchg cld (bad) or out imul loope mov pop (bad) lea mov mov fisubrl jle gs stos repnz std fdivs mov mov and mov sbb adc rex.X or test (bad) loope mov test cltd (bad) mov retq in sbb pushfq (bad) movsl cltd retq mov data16 mov xor rex.WX lock (bad) cmp (bad) push movslq fstpt int3 (bad) (bad) out test sarb mov mov adc rex.WRB sub ds mov (bad) rex.R pop clc and loopne fwait (bad) mov rex.RX cli in fucomi jg scas push rex.WRB movabs (bad) retq leaveq xor or pushq cmpl jmpq (bad) fstpt je xor mov pop pop pushq rex (bad) or mov mov fisttpl loop (bad) or fildl movsl test clc sbb (bad) imul mov scas pop (bad) pop xchg rex.WRXB pop movabs and (bad) or push xchg scas (bad) fildl lcall xor out lret fildl iret lahf (bad) sub or add leaveq and movslq lret fstpt add adc sub (bad) enterq movsl lods rex.WR rex.B xor rex.WRB sub (bad) mov imul movabs cmp mov (bad) (bad) (bad) xchg popfq fsubr mov fldt jmpq repz sub pushq sbb and mov (bad) int jb jb cmp mov movslq lret sbb push popfq rex.WRB rex.RX pushq xor mov fldt xlat mov cmp sub pop adc rex.RXB xchg rex.RB sbb xchg (bad) (bad) mull mov rex.RX pushq jo (bad) hlt rex.WX sti xor int (bad) icebp fwait (bad) sub xchg xor rex.WRXB mov rcr mov sarl adc movslq sbb fisttpl sub sarl enterq rex.WRB and (bad) jne movabs stos movsb fisttpl shlb jl rex.WB stos fistl cmp and (bad) pushq in out xor rex.WRB adc testb fcomi fnstsw imul enterq decl cwtl jrcxz (bad) out jnp xor and (bad) int3 std mov fldt cltd fisttpl movabs hlt cmpsl mov movabs in pushfq test cmp fwait rex.X xor push (bad) es xlat (bad) ss pop (bad) mov (bad) or sti xchg outsl rex.W fistpl (bad) (bad) ja add rex.WXB rclb or movsl jmp and stos jle cltd gs jg rex.WB mov lods mov xchg (bad) and xchg addr32 sub imulb mov and or fnstenv rorl (bad) xor test fdivrs (bad) cmpb movabs (bad) je retq xor callq push stos cld (bad) insb push fidivrl cmp shrb ror mov pushq (bad) rex.RB fs or pop cltd (bad) xchg pop pop fsubs cld out sarb (bad) rex.W (bad) mov (bad) rcll (bad) sub mov fwait jns jb jg rcll xlat push insb rex.XB adc fwait push (bad) jno mov pop mov adc movsb cmp movabs je pop std movsb gs push cs lahf sbb (bad) cltd sahf push rex.X (bad) (bad) xor mov sbb pop out stos fimul testl fcmovb out (bad) mov jnp xchg cmp or gs jns rex.WRX rex.R test xlat mov xor jmp fcmovnu (bad) rex.WXB out mov movsl fcoms js addr32 and movsb mov sbb movabs loopne adc (bad) rex.WRX mov mov fldt test pop insl mov xchg or stos adc sti stos jnp imul (bad) je add retq (bad) add lea hlt movsl movsb push mov fstpt mov mov orb adc (bad) test cmp pop jb mov or scas push loopne pop mov jp sub add enterq in rex.W (bad) fimull loop retq sar xor ficompl ss pop mov (bad) fldenv pop pop fbld (bad) cmp popfq lock or fidivrl leaveq stos (bad) mov pop and movabs rex.R mov (bad) mov mov loope,pn lods iret test loope fsubrl jg retq add (bad) xchg jmpq rex.W data16 fnstsw sbb fisubr xchg pop fwait xor adc cmp rol mov add jg adc (bad) jne lret xor add rex.WRX (bad) movsl jnp (bad) push loopne rex.WRB add (bad) jns xchg lock stos lock adc movsl jle mov sub jp adc add pushq or mov ss rex.WR rex.XB add (bad) mov xchg pop gs outsl rex.WRXB je ja jle adc sub test fisubrl xor (bad) fnclex iret add insb xchg xchg imul mov es xor (bad) jne (bad) pop mov sar adc mov (bad) add mov callq push in (bad) (bad) cld int add mov (bad) int3 hlt (bad) (bad) rex.RXB jne scas insb negb rex.XB ds rex.WR rex.WRX jnp mov fwait rex.XB cmp adc fs test adc ds (bad) push mov rex.WR rex.WRXB cmp jrcxz loope cmp fmull rex.WRX (bad) fcoms lock fisttpl (bad) jne pop clc jnp jle add (bad) lods lods and cli (bad) push int3 cs sbb rex.XB fxch mov fildl (bad) jp push lock jle sbb rex.XB and fldt (bad) push xlat rex.RB or or sbb movslq cmp or add adc mov mov fisttpl (bad) (bad) stos stos xchg (bad) sti rex.X imul scas adc fdivrs mov xchg push add iret iret sbb rex.B pop or insb push lock and rex.WXB rex.WR fwait adc (bad) je,pn pop xchg fstpt jns leaveq pop pop addr32 fstps clc iret cmpsl add jne add (bad) add (bad) (bad) mov fdiv lods push fsubrp rex.RB clc or lret xor (bad) pop fmuls jg push test scas (bad) ja fildl xchg jg push rex scas jmp lea fcmovnb leaveq repz testb fldt rex.WRX and (bad) icebp (bad) outsl pushq fldt pop movabs sub jle (bad) pop nop js in pop cmp fcmovnu xchg (bad) (bad) push (bad) cmp or xor rex.RB pushq rex.WRX and push in and xor or (bad) xchg jle pop jle sbb sbb pop (bad) jle test cld fistpl xor (bad) jrcxz fisttpl xchg or pop test xchg rex.WB mov mov cmp sbbl push sbb outsb (bad) jae imul cmp cmp sub sbb pop fstpt jo fsubl cltd and movsl add (bad) (bad) or pop (bad) jno fcmove mov fstpt ror mov xor sbb rex.WX or pop pop es fs in fwait nop repz pop (bad) mov xchg fiadd fldt adc imul add scas mov cmp jo imul mov jae loopne fistl xor loope test sbb sbb fcmovne ss repz movabs cmpsl lods xlat lar fs push (bad) xchg rex.X fidiv push in (bad) scas xchg lret (bad) lret in (bad) loope (bad) xor popfq (bad) cmc movsb (bad) (bad) cltd mov jle shl and pop sub push pop rex.W (bad) (bad) pushq (bad) iret push (bad) and fwait sbb sbb imul adc ss xor movabs (bad) (bad) add movslq rex.WB insl cs pop std movabs mov leaveq (bad) sbb sbb mov out in sbbl (bad) mov ds (bad) (bad) jne xorl push push rol pop (bad) test push (bad) iret sbb (bad) (bad) cld xchg xor cmp movslq mov xor rex.WRX fsts rex.R insl cmpsl add jne sub (bad) cmp fsubrp fsubrl rcr loopne insb push out (bad) vpsrlw jmpq jrcxz addr32 sub rcll jge pop or fisubl pop add cli imul imul (bad) pop cmp insl add jae out test and jo out int3 ficoml orl (bad) mov mov xor out (bad) and and push addr32 scas sbbl addr32 or callq imul (bad) je xchg mov pop pop sub and fstp (bad) jmpq lret (bad) rcl rex.WRXB adc mov jns,pt fs jg ss cwtl jnp negl sbb fwait jae js fnstsw fwait jrcxz and pop sti data16 movswl push sar shr rex.WX nop (bad) rex.R xor icebp sahf jmpq xlat std callq push rcr repnz add je xlat and fistpl mov xor rex.WRB clc insl out fwait lock mov rex.WRXB (bad) js xchg pop negb retq push jmp lret rex.XB xor mov adc (bad) (bad) (bad) (bad) retq pop add or out fidivr rex.WXB (bad) je int rex.WB fcmovnu sbb mov fistpl sub retq test orl fsts fadd jrcxz fstpt xchg popfq mov push mov fistp (bad) es mov pop jo retq push jno,pt mov fildl movslq fcmovne (bad) repnz subl mov sub (bad) sub xchg test cmpsl cmp out loop (bad) lret lea rex mov rex.WR fidivl test cmp ds push sub xor sub pop fldt cmp movsl out fcomi xchg gs decl cmp loope add sbb int3 sbb outsl push mov stos insb (bad) pushfq fistpl fcmove test fistpl mov callq fildl pop mov ss movsb fldcw xlat pop rex.RXB fwait xor ror fldt (bad) cmpsb rcr lock sbb pushq fildll cld push loopne add mov clc int sbbl cltd rex.R rex.XB pop mov jnp rex adc pop (bad) push jge test adc test jnp (bad) frstor pushq cmp rex.WR or (bad) and add add push push sahf xchg and rex.W cli (bad) iret movabs push mov cmp xchg fcmovnb scas xchg std pushq in and retq rex.WRXB pushfq adc rclb in cmpsl mov (bad) out test pop (bad) fisttpl and pop int xchg outsl lahf rex.WRB cmpsb (bad) jp jno flds lret jne rex.RB rex.WRB hlt imul rcl rex.WR retq mul clc add mov fcmovb sub pushq lods xor xlat rex.WX fisttpl andl cmpsb mov fimull (bad) imul fcmovnbe (bad) mov int lret es js (bad) test cmpl mov (bad) fcmovnu (bad) (bad) imul cld and pop (bad) xchg xor movabs scas rex.RX rcll rex.X rex.W mov loop push xor cs outsl retq mov and sahf scas add fadds loope add add stos cmc movslq pop sarl sbb jne rex.XB mov add addr32 addb int3 xchg or mov (bad) or pushfq nop sbbb cmpsb fist rcrl scas (bad) (bad) rex.W lods out (bad) jle rex rex.RXB and jle imul mov negl add xchg xchg jg pop push enterq insb rex.WB fisubl xchg add loope repnz cltd rex.WRB (bad) mov mov pop jle rex.WX mov mov pop repz rex.R repnz rex.WRX rex.RXB sub or mov int xor out rclb lea (bad) scas fstpt retq pop xor mov fstpt int cwtl mov (bad) stc cmp lods fistpl repz nop rcr fild (bad) jg insb sub (bad) rex.WRB push jnp std add mov (bad) cli (bad) rex.WRB cmp rex.WR lret fistpl fcmovne (bad) rex.WRB loope mov movsl jbe int fadds in test cs cmp repz (bad) addb sbb (bad) insb add fistl cli xor xor out jg adc pop rex.WX rex.WX rex.R ds fistpl fisttpll (bad) pop cmp pop (bad) loope pop sub test rex.WXB scas adc and js sub fwait mov out icebp mov scas mov xorb fnsetpm(287 (bad) rex.RX cmc jns fistpl (bad) fdivs xchg (bad) imul hlt pop (bad) xchg or (bad) loopne int3 mov cltd out xchg cwtl fwait xchg cmp neg sbb xchg mov mov jnp ja jae xchg (bad) mov fisttpl jl add or addr32 xchg fldt lret (bad) jo fcmovnbe push leaveq sbb push xor pop cmpsl jnp callq and mov rex.R (bad) lods push iret pop stc adc or test jl xchg mov sub (bad) incb rex.X lods insb test movabs mov sub push mov loope or jle rex.X ss sub (bad) pop shlb jo addr32 jb int jns rex.WRX sbb lods mov data16 xor (bad) (bad) fdivp or xchg mov or jl lods sbb cwtl fldt fisttp (bad) rex or js cli and rex.WRB pop fidivrl mov mov hlt movabs fisubrl callq imul jge pushq (bad) out rex.RB rex.RB repz movsb sarb rex.WB sahf stos rex.WR and idiv retq loope stos loopne mov mov mov pop sbb xlat (bad) and pop clc fldt add (bad) subb stc fisttpl xor insl fbstp adc outsl add or adc fistl lret retq movabs fstl rex rex.WRB cltd (bad) (bad) rex.R rex.WB pop lret cli pushq mov mov mov jae enterq lahf std out push roll or loopne callq push cmc mov (bad) pop mov cld iret adc addr32 (bad) rex.WB mov fsub (bad) loopne (bad) xchg cmp out push mov pop mov xor jge or (bad) rorb test fistpl mov movslq out cmp pop xor cli push sub imul xor (bad) rex.XB sbb cs xor fistl repz retq mov pop sub lahf rex.RB sub push fsubrs stos (bad) (bad) jae leaveq pop (bad) notl movabs sub xchg imul loop jg pop callq sarl popfq sub cmpsb fstpt fistp (bad) ror rex.X mov adc (bad) lahf (bad) mov pop repz mov iret fistl jl mov cmpsb pop sbb neg rcr nop iret xor enterq fldt fcmovnbe adc popfq (bad) (bad) js (bad) cmp (bad) push lods fs rex.WRB scas jnp adc cmp mov callq xchg icebp test int3 sbb lret rorb (bad) mov popfq fistpl std test stc push xchg sbb push out mov rex.RXB sbbl int3 pop cmpsb xor (bad) lret movabs cli (bad) pop add mov cmp (bad) add (bad) sbb rex.WRXB ja stos cmp mov (bad) nop rex.RX test idivq insl jmpq rex rex.W fistpl imul (bad) (bad) xor div pop jo cmp orb jl or lret out sbb adc rex.WRX jae out sbb (bad) (bad) rex.WB or rclb sbb rex.WXB leaveq movsl and adc fstpt in mov data16 fistl retq lods rex.W (bad) mov clc jnp (bad) adc sti xchg mov jmpq adc or movabs je mov sbb or jbe (bad) (bad) fs stos pushq insb jle xchg add xchg mov rcrl callq sahf hlt mov cmp jrcxz imul sub mov movsl jl popfq jo jae loop (bad) nop or jge cmp jno,pt fwait scas push leaveq (bad) xchg negb mov rex.WX retq jae data16 jnp imul mov cmp ds fisttpl and cmpb (bad) xor sub (bad) cmp (bad) xor outsl fisttpl rcl fcomi (bad) out iret fwait (bad) mov retq xchg pushq fcmovnu rcr (bad) and mov mov adc (bad) add iret push repz cmp (bad) in pushq (bad) rex.WRX fldt and outsl icebp pushfq and (bad) (bad) jmp (bad) (bad) sahf out cmp xor fildl push or loope fildl cmpsl cmp sub rex fs gs jnp mov mov xor cmp adc js cmp (bad) xchg scas cmp (bad) flds pop retq rex.WX rex.R (bad) and addr32 sub (bad) or gs sbb negl and rex.RXB adc (bad) mov mov add lahf jae cmp rcr pop xchg (bad) mov clc xor test xor sbb mov lret jo,pt sbb orl mov (bad) push js pop rex xor mov stos add pop int sahf lock push cli rex.WRB rex.WRB rex.X ds (bad) ficom fwait movslq pop retq jnp mov std rex.RX adc enterq rcrb or push imul rex.X xor adc pop lret icebp rex.RX (bad) mov and sahf fistpl test rex retq sub xchg pushfq rex (bad) mov leaveq jp scas push xor fistl mov rex.WB stos (bad) xchg movsb xor (bad) fistl (bad) loopne,pt mov cmpsl stc and cmp mov in (bad) cli push adc callq add fwait pop or xchg jns (bad) rex.WXB sarb push add jg (bad) movabs insl pop mov jae rex.WXB mov cmpsb retq mov jge rex.WRX (bad) icebp jmp lret add or jns fdivs xchg jrcxz cmp ficom sbb insl (bad) fcmovnb rex.RXB repz fstpt negl and pop pop fisttpl sbb jmp jbe lock (bad) je test xor xchg push xchg mov imul sbb mov jae fisttpl rex.XB rex.WRXB movabs stos cmp fildl mov sub ss (bad) or mov scas jne pushfq callq pop movsb sbb pop enterq push mov mov push in and lret xchg cmp rex.RX rex.W and mov repnz rex.WR rex (bad) (bad) nop sub fwait jns (bad) (bad) rex.XB push push popfq push jmpq cld rcr xchg cmp rex.RX rex.WRXB xchg stos xor mov (bad) (bad) rex.WRB jnp retq shr test lods movabs (bad) pop jrcxz sbb mov xlat xchg mov and divb push movslq lahf jo xor push js shlb mov clc pand push lods (bad) fsubrl or outsl cltd mov pop (bad) out (bad) sub xchg mov fistl jmpq and (bad) jle lock imul rex pop retq mov or mov popfq (bad) mov and loopne nop xchg mov sbb fldt test negl insl (bad) (bad) push cmpsl jp fldt test jno pushq jbe (bad) sbb test cmp fwait (bad) decl (bad) (bad) shl jge mov (bad) (bad) fldenv rex.WRB pop loopne mov psubusw add add fnstsw stos jnp adc jp (bad) (bad) rex.WRXB rex.WXB cmpl rex test loopne mov lods cli sarl mov add or (bad) sbb adc loopne xor rex.WXB or rex.RX cmp loop and cmp shl xchg push fwait loop adc (bad) (bad) pop pop xor je (bad) (bad) (bad) cmpsb mov pop add jge push (bad) loope test mov movabs jnp pushfq popfq movsb pop or (bad) iret mov xchg (bad) fisttpl pop pop clc pop (bad) int adc xor fldenv cwtl ficom out cwtl adc (bad) stos rex.B jno mov fwait cmp mov rex.WB xchg (bad) (bad) rex.WX stos adc sti xor imul xor loopne rex.W cs push data16 movsl pop (bad) mov test mov lret cmp adc stos jmp cwtl (bad) repz (bad) (bad) xchg (bad) fisttp jne (bad) fs xchg (bad) or jns rex.RX and fsubp or cmp sub mov cmp rex fstpt rex.WXB cmp sbbl fstpt sub mov fstpl jmpq xor xchg shlb fisub std es and (bad) adc rex.R (bad) (bad) pop (bad) cmpsl stos rcll pop ja pop rex.X pop stc rex.RB sbb test nop int fsubl out mov (bad) out jns fidivl mov int3 fstl rex.RX mov rex.WB cmp jns xchg hlt rex sbb cmp and (bad) rex.WB lock (bad) scas fdivrl pop (bad) (bad) xchg rex.RX (bad) mov fistpll mov mov sbb rex.RXB gs stos imul (bad) (bad) fistl add fwait pop cmpsl push (bad) push (bad) sbb (bad) ror popfq cmp mov fwait loopne stos push ffree (bad) fistpl cmp mov and (bad) movsl sahf icebp jae xchg push mov (bad) add lret sar and enterq cmp mov sbb (bad) jl lret (bad) add rex.R fs in sbb jae rcll mov faddl in xchg fneni(8087 xchg in lret movabs mov rex.WRB fisttpl or mov jno (bad) jle (bad) mov jne std cltq fadds data16 mov (bad) (bad) pop outsb (bad) (bad) ds fcmovnb or or mov movabs (bad) int adc rex.B fildl or (bad) mov fistpl pushq mov cmp pop mov subl fcmovne rex.B mov cmpsl xchg imul test pop pop adc stos mov xor rex.WXB (bad) scas retq xchg rex.B out push rol adc xor movsb xchg imul jb rex.WR jbe fstpt xchg rcr fcmovne cmp mov fistpl leaveq insl add jg pop loopne push cmpsb mov cmp retq retq data16 (bad) mov xlat xchg (bad) callq (bad) fildl rex.RB sahf cmp rex.WRX and movslq fisttpl rex.XB movabs lods jae outsb jnp bnd test xor icebp fistl (bad) movabs stos lret jbe imul xor sti or je (bad) jae add (bad) addl sbb sbb push rex.WRB imul fildl imull fs (bad) (bad) jnp test iret out lret fiaddl lea or mov mov pushfq rex.WRX rex.WB sbb (bad) jp (bad) jnp rex.W mov ja (bad) xlat (bad) lret add pop nop movabs adc cmp mov xchg mov jnp cmp popfq (bad) (bad) (bad) insl fistpl ficoml (bad) cwtl or sub movabs or add mov (bad) clc sbb adc pushq test push xchg jg or sub (bad) push mov pushfq jp cmp jl shrl cmpb fld mov fstp jl sbb or andl adc jge loop xor (bad) jb xchg xlat (bad) mov loopne outsl jo sub ficomp or push sbb push out rex.W movsl sbb (bad) (bad) cs mov rex xchg (bad) or add fs add ss stos nop (bad) je mov fwait sub sub fidiv adc adc retq push push cltd rex.W mov (bad) movabs stc add cld testb and fstps pop add out fildl cmp mov push fnstcw jnp test gs jp in pop mov rex.RX jbe scas (bad) int or mov mull (bad) (bad) jne jg (bad) fistpl and rex.WRB adc hlt pop pop xlat movabs sub xor xor sbb test (bad) sub adc adc mov (bad) (bad) (bad) (bad) rex.RX movabs lret outsb decl cmp sub rex.RXB xchg xor pop rex.RX xchg out out or xor sub imul movsb callq test pop xor fbstp fwait jrcxz add loop xchg lods cli idivl (bad) (bad) rex xor xor fidivrl sub push movabs rex.R fildl sub (bad) pop mov (bad) mov mov push (bad) jo (bad) lahf (bad) (bad) (bad) (bad) sarb add (bad) jl pop std jle shll mov (bad) clc unpckhps pop add fbstp sub pop pushfq adc mov (bad) cmp sub rex.WRB cmp enterq (bad) (bad) rex.WRX xchg out pop test pop fwait rex.RXB cli (bad) cmp pop leaveq nop enterq adc (bad) repnz addr32 xor (bad) jbe rex.XB movsl int push mov stos je jnp ror (bad) rex.WR (bad) sti add repz fldcw movabs add adcl or (bad) lahf pop (bad) add cwtl negb fs out (bad) lods sub pop ds ja ficomp (bad) push outsl cmp in movabs push or (bad) cmp mov xchg hlt jmpq lea add cmp loopne hlt pop sub stos es jp ss (bad) mov gs pop in (bad) push adc hlt and insl stos clc jnp (bad) ss movsb jmp add or (bad) (bad) fldt (bad) sti pop lret movabs scas rex.R sub (bad) sarl sub pop or and mov (bad) (bad) or rex.WRXB mov fildl mov movabs in cli loop xlat fildl jmp cmp mov fwait rex.RB pop sub pop (bad) mov (bad) clc mov pop movabs mov mov pop fcmovb stos and mov (bad) movabs fildl out (bad) fildl outsl test rex.WRB repz sub pop jp fcmovnb pop pushq mov adc sbb sub int3 retq jnp sbb fldenv xchg rex.RXB cmp divb (bad) clc leaveq pushq (bad) fstpl fisttpl (bad) mov jo insl (bad) or out fcmovnbe and cmovb xor retq (bad) cmp (bad) pop icebp pop out test int3 mov mov data16 test rex.WRB (bad) mov rex.XB fldt (bad) jmp iret data16 xor (bad) test (bad) (bad) push int jmpq fwait xchg sub mov test and (bad) mov int (bad) ja sti (bad) pop mov push retq fcmovnbe push rex.WXB in and (bad) cwtl lock fadd adc in fcoml rex.WRX xchg and cmpsl sub mov (bad) push or adc data16 lea repnz lahf (bad) push cltd jne fldenv imul rex.XB iret push imul fwait sbb js pop adc push rex.XB adc movsl cmpsl (bad) jg pop adc (bad) mov or adc jnp insb fadds mov pushq lret sub and loope ror sbb rex.WXB sub test out pushfq jp push pop vpshlw jbe mov push (bad) fcoml fwait pop mov jp push push xor (bad) jle sub rex sbb jno jnp sarl loope mov pop (bad) (bad) (bad) callq (bad) jnp fidivrl rex.XB xchg outsl in sti rex.WR shl cld and mov je mov callq jns rex.R push (bad) iret scas push out rex.RXB cmpsl mov (bad) jmp jo mov rex.WRX or movslq out add push scas mov cltd mov rex.WR jg jo scas push sbb paddusb jno adc rex.XB idiv (bad) sbb rex.RB (bad) pop or pushq nop rex.WR (bad) in jl adc rorl xchg jrcxz rex (bad) xor jmp vpacksswb out cmp data16 sar loop jb cld xchg xor jbe out flds (bad) cs mov sub add iret std mov cld adc (bad) pop cmp xor repnz out mov or mov jae or (bad) push or rex.WX ja and rex.WB out fdivrl retq imul add rcll retq mov mov cltd adc (bad) lock push cmp sbb mov movabs sub callq mov (bad) mov movsb (bad) and rex.XB rolb push or stc add iret ficom rex.W mov adcb loopne xor (bad) adc add fstpl xchg push xchg pop lea adc xlat and lret mov mov fcmovnbe popfq (bad) (bad) out rex.WB fistpl (bad) gs mov and adc fndisi(8087 sub jg fisttpl test lea or shrb (bad) rex.XB cmp fistpl retq sbb (bad) (bad) jge out xchg fisttpl retq movsl lods fistpl adc adcl rex.R mov mov rex.WXB (bad) iret pop pop imul stc (bad) rex.X xor (bad) pushfq (bad) (bad) (bad) in (bad) (bad) movabs jl fstpt cmp sub xor fisttpll fistpl sahf lret (bad) push movabs and cmp sub mov lret pop add (bad) in cltd xchg adc ja sbb pop scas jne jg js or sbb adc pop pop outsl push or rex.WRXB gs int ja fwait cmp movsl push mov rex.X adc rex.RX or lret (bad) rex.WRX lock fcoms (bad) (bad) or jb xchg xchg (bad) xchg mov sub (bad) or jmpq pop std mov mov jg scas pop adc jne je pop sbb (bad) stos movabs push fimull or cmc hlt jo stos sbb cmpsl (bad) fistpl (bad) adc je and stos (bad) ds sub pop enterq (bad) sti jmp xchg cwtl rex.B pop stc add sbb jno imul outsb sbb (bad) (bad) and fs adc (bad) and movabs movsb push rex.WRB mov mov jne test jl (bad) mov stos idivl in lret fcmovnu sbb push xor fisttpl movabs (bad) cmp push mov fstpt fmull or (bad) retq stos rcr pop rex.RXB jp (bad) pop cltd stos lahf sbb in sub (bad) add pop sahf pop rcll fstpt out xor fistl out rex.RX adc rex.WB and repz push cmp movsb stos lods fistpl push imul (bad) (bad) pop (bad) nop loopne ds (bad) insl (bad) lock xchg pop adc rex.W or mov pop lods out xchg pushq fwait rex.XB repz jp fistl jns sbb test popfq or mov mov lahf jnp cmp or sub add pop mov (bad) mov jb (bad) outsl add xchg sub (bad) pushq jp mov fisttpl and (bad) mov ja xchg gs fcmovnb lods and (bad) mov pop fidivr pushq cli in outsb notb pop mov (bad) (bad) scas es movabs jbe in jnp and jne xchg xchg (bad) cli add mov cwtl xorl mov jmpq (bad) xchg (bad) outsl data16 sti test imul jmp movabs cmp mov int3 cmp mov push sbb rex.WR pop mov rcr (bad) sbb jge (bad) loope mov pop adc xchg mov push cmp mov push insl out pop subl fwait (bad) je push pushfq in (bad) fs movabs rex pop (bad) pop pushfq sbb (bad) sbbl cmp pop fldt (bad) cmp je stc mov fcomi (bad) rex.R fstpt and popfq icebp cld adc adc hlt subl fwait insb pop loop xchg and (bad) (bad) fisubl mov gs rex.XB es sbb movsl adc int push (bad) jb (bad) ja or xchg flds scas pop mov loop and (bad) sbb icebp in adc movabs rex.R ds pop movsb rex.WRX rex.X adc fwait sbb fistpl (bad) stos mov xchg mov xor xlat rcrb (bad) rex.WRB sub jg push push imull xor sbb in xchg jge insl lret (bad) push rex.WRXB pop rex.XB push xchg cvtps2pd movsbl hlt in mov movabs leaveq (bad) icebp xor xchg xchg add xchg mov pop jae movabs sahf ds jl (bad) fcoms xor fsubr lock stc (bad) sbbb (bad) (bad) loope xlat jl cs cwtl and adc lea (bad) fnstenv fwait add scas push sbb imul mov lea mov adc rex.XB mov repnz decb (bad) (bad) sbb mov scas in push popfq jle xchg jmpq orl and sbb test sbb rex.X (bad) xor jp (bad) sbb stc fcoml not out test fs testb or rclb (bad) out xchg or and fld mov pop rex.R (bad) pop andl mov rcrb rex.W pop retq rex.WB adc add add fimul movsl sbb jo fistl out jns (bad) cmp xor cmp (bad) (bad) jp cmp addl sub ss sub jno (bad) clc sub mov add outsl push fdivrl bnd rex.WRX vxorps sub test loop divb outsl (bad) fchs jae mov fidivr fcoms adc sti jnp (bad) xlat push cli add jne mov (bad) callq adc in jae add mov sub pushq (bad) rclb (bad) int sbb stc push jnp jle (bad) fxch iret push rex.WB test movslq sbb sbb enterq jle jae sbb sti out mov movsl cmpsl lock mov shll (bad) rolb rex.RB (bad) loope push pop test fdivrs retq (bad) lahf pop xchg xchg jbe push (bad) test lods sti addr32 stc (bad) sub or ja add mov cmp mov rex.WR push ss insb cmp rex.RX mov add push lret cmp mov (bad) pop fsubrl push rex.WRB rex.WRB rex.WRXB clc gs roll xor rex (bad) or loopne (bad) mov loopne (bad) imul jmpq xchg cmpsl fistl callq mov sahf rol ss leaveq movabs rcll iret enterq pop js jae,pt rex.XB icebp repnz (bad) sub xchg lods mov jmpq xor (bad) add xchg sbb rex.WR push sbb rex.RX pop add jnp,pt lods mov fldcw and cmp lahf xor jmpq fcoms pop repz iret callq clc fnstenv mov shl jb (bad) xor int3 or imul xor adc pop pop add adc rex.RB es cltd or jns rex.WX es pop ficompl repz loop scas mov movabs sbb scas insl jl loope outsl sarl fstpt rex.W cmp outsb (bad) pop jp fdivp pop xchg mov lock adc retq decl in rex.WX jb or imul popfq or xor fisttpl (bad) xor push (bad) rorb (bad) sub xor push jbe cmpsb xor or iret std rclb mov and rclb fdivr insl lods loop mov (bad) xchg sub scas hlt rex.X rex.WR fcmovnbe sub (bad) popfq stos fcmovnbe movabs mov sub (bad) jmp retq jb rex.WXB (bad) push rex.WR rex rex.XB ds or int3 sbb xchg rex.WRB adc scas movabs push fadd int rex.X push lods fs rex.WRXB data16 jge,pt or fstpl js imul gs lret xor adc leaveq (bad) lock adc jnp mov cmp sub or fisttpl push xchg xchg (bad) mov lock rex.WRXB int3 (bad) (bad) jrcxz adc pop adc or (bad) fstpt mov adc jne mov fs ficom gs mov callq sub rex.WRXB loopne (bad) movsb sbb negb sbb (bad) lret pop cmc rorl fcoms sub or adc pop jp xchg mov mov ficoml (bad) adc stc repz xchg (bad) repz (bad) mov ss or lret (bad) fild ss stos xchg rex push imulb sub rex.XB ss (bad) fstpt (bad) icebp js rex.WB fwait test cmp (bad) (bad) jnp mov test addr32 cmp (bad) lods mov notl xlat fdivs int3 and pop (bad) (bad) sarl (bad) in pushq test pop rex.W rex.RB fwait mov pushq or jg std ja callq movntq out (bad) xchg shrb sbb sbb hlt test xor (bad) mov rex.WRB pop xchg jmp fs cld stos insl enterq push or rex.WRB pop add xchg xor add sub stos rex.RXB fidivr pop cmp mov (bad) cmp xor pop jl and mov stos cmp lret mov jb stos out je cltd test mov addr32 out push (bad) testl sbb ds mov lret mov addr32 (bad) ja sti pop rorl mull fdivrs sar scas rorl (bad) fnstenv push xchg in mov ja insb subb rcll push and (bad) lods int (bad) leaveq add je jnp cs test movabs movabs in xchg (bad) xchg mov jb add pop push add pop (bad) xchg xor out int ja scas rex.WRXB xorl popfq jrcxz adc int movsb or xlat nop cmp fisttpl (bad) stc (bad) (bad) mov xchg add test sub xchg mov enterq adc (bad) or sti pushfq leaveq int3 or mov jbe mov movabs mov fstpt xchg mov outsb mov mov sub addl int3 in xchg mov pushfq or push (bad) movsl pop add test (bad) int3 cli (bad) mov xor stos mov push outsb jge cltd cmpsb sar jg fisttpl xor scas and (bad) (bad) testb lods xchg rex.WB out xor movabs adcl out sub leaveq mov lods in pop rcr sti pop add lock insl pop rcl out sbb (bad) add (bad) shr push jb cmp lea cmp cmp (bad) mov es xlat lret stos (bad) xchg lretw sbb clc cs xchg js (bad) fmull pop jg jp jo fisubl roll rex.X orb and xchg rex.XB cmc lret cli sbb cltd xlat fst cwtl loopne pushfq (bad) mov xchg rex.WXB js mov mov jno movabs gs jrcxz sahf js (bad) stos outsl rex.WXB jl adc jns fucomip movabs (bad) hlt jp rex.X pop (bad) test imul push jae sbbb jnp cmp (bad) xor sti mov orl sub fildl xor or cmpsl sub xchg in rolb ja xchg jle movsb stos xchg pushq mov rex (bad) rex.WXB add fistpl (bad) pushq movsl fisttpl (bad) sub jne sbb (bad) add insb adc ficoml stos and lock (bad) psllw push lret scas pop in pop mov mov int rex.WRX adc push std xlat mov cltd mov jbe movsl mov jnp pushq push loop loopne sbbl imul rex.RX rex.WB out xchg (bad) pop retq adc mov loope pop sbb int3 jg (bad) jnp int cmp fnsetpm(287 loope outsl imul mov int rex.XB sbb pop jo pushq jle sbb or xchg (bad) pop add nop xchg sbb rcr fild cmp callq scas (bad) sub outsb mov mov fistl cmp popfq mov jmp xor (bad) push sub iret in sbb jp mov insl xchg mov mov sahf movabs (bad) xor or fwait adc loopne mov rex.WRXB fldt mov cmpsb xchg fistpl rex.W movslq pop or and (bad) lret push outsl sbb xor rex.R in fucomi leaveq rex.B rex.WB mov cmp mov pop shrl loope (bad) movslq jnp and lock or cld adc pop sub and fistpl xchg push cmpsl sub sub (bad) movslq pop fildl cmpsb xchg out jmpq movsb fistl mov push shrb add fisttpl sub jrcxz pop pop data16 mov pop jnp sbb int3 sub (bad) sbb jmpq push xchg xor callq (bad) fldl sahf insb pop pop or adc stos movsb mov pop lock cs movabs mov lock lret (bad) push movabs frstor push or jae or cmpsl (bad) inc (bad) adc addr32 nop jns stos sub lret (bad) push or mov korb sbb adc movabs lret int3 jno push nop popfq (bad) push or sbb push imul or repz movl pushfq mov cltd (bad) cmpsl loope outsl lret rex push sub push xor (bad) iret rex.WR cltd imull shlb movabs sbb stos jrcxz test movabs (bad) mov jl and rex.W lahf pop stos lods fisubrl pop xchg in movsl clc (bad) test xlat sub adc (bad) cwtl fistl rex.X mov ss or fs and outsl out nop add test leaveq xor and adc rex.WXB xlat mov out add mov mov fistl jp fcmove movabs rex.X nop push sub mov lahf sar loop pop lods adc adc (bad) jno insb xchg mov movabs mov int3 xchg je fnclex mov mov clc (bad) fstpt rex.XB rex.WX cmpsb nop sbb fucomi sarb (bad) rex.WB cmp jge and (bad) pushq cwtl cmp xlat add rex addr32 pop fstpt push retq (bad) mov stos stos rex.WX rex.R jge (bad) outsb fwait movabs in cmp sbb push leaveq (bad) or (bad) out jnp or (bad) (bad) lret loope push mov out pop and jrcxz jge (bad) jno or scas mov (bad) push push pop shl (bad) jmp sarb popfq (bad) fwait and (bad) xchg fisttpl (bad) and xchg scas add loopne out rex.WXB test negl jl xchg pop rorb (bad) mov cmp (bad) sti subl sbb xlat rex.W mov (bad) (bad) adc gs insb mov repz sbb pop (bad) psubb cmp adc sarb int cmp push (bad) rex.WRB out pop (bad) sbb loope rex.RXB loope (bad) fstps (bad) rex.WR movslq data16 sbb retq (bad) (bad) or loopne jl fist xlat jbe cmp sahf (bad) push cmp subl sbb adc scas xchg sub sbb popfq sbb in fwait outsl cmp rex.RXB jmp rex.WRB (bad) sti (bad) lea (bad) rex.RB jae out fisubrl stos xchg data16 sbb fisttpl mov jp mov retq scas sub pushq lods cld fldt push retq loopne pop sbb sbb imul cmpsl repz shrw mov (bad) (bad) jle sub sub sub fs stos (bad) cmp fwait push scas mov js iret movsb rex.XB es rex.R mov mov int jo in xchg sahf cmpsb push cltd add (bad) lret jg jrcxz (bad) push mov jp jnp jl (bad) pop or divb mov mov pop loop fs jg pop fwait xor insb popfq add xchg rcll cmp or rcr bnd cmc mov rex.WRXB callq fistl xor rorb add xor jno data16 movslq rex rex.WR test fwait cltd (bad) sti xor pop outsl fistpl and xchg leaveq xchg (bad) jg sub rex rex.RX lods pop iret fbld and xchg fstpt xchg rex and rorl pop sub cmc (bad) rex.B xchg (bad) (bad) xor cwtl jbe pop mov jne adc (bad) fcmovne push imulb xchg pand cli (bad) push pushq (bad) mov or fildl add (bad) fildl (bad) (bad) lock mov (bad) rex.WRB xor (bad) fcompl push mov cmpps cltd xor jbe and add push out sub jmp gs adc xlat (bad) movabs sarb pop in in mov sbb jnp mov add mov in mov pop mov jns (bad) fs jnp xchg jae sbb fcmovb and out fsub and xlat push and cwtl sbb or gs (bad) ss cmpsb jmpq js push js fmulp icebp negl mov test loopne shrb in imul push pop adc push jge rex.R lods xchg movabs pop in imul (bad) nop shrl mov pop nop (bad) out sbb in xchg push fcomps jno (bad) fsts push cld (bad) in cmpsb cli ss cmpsb jle (bad) rex.WRXB scas and cs rex.W data16 (bad) in xchg (bad) stos cmp addr32 push sub (bad) add jno repz (bad) mov rex.WB add sbb std rex.X jmpq (bad) (bad) pushq (bad) pop insl jnp sbb jmp out stc cmp mov or cmpsl and rcll fmull push repz test addr32 cmp pop setbe xchg stc fsubl xor (bad) (bad) movsb pop pop xchg fdivp or out movabs out rex.RB rex.W rex.X callq insb jnp jl sbbb mov outsl push xchg rcl fwait (bad) push adc rex.W orl lahf movabs (bad) in adc (bad) (bad) ja mov add jp cmp pop jl fisubl or pop vmovss (bad) out jg scas xor jns cwtl mov jge rex.WRXB rex.WRX push jo out repnz sbb (bad) cmp rex.WR (bad) lea mov sub or jmpq (bad) mov pop stos rex.W mov rex.WRX adc insb pop or mov (bad) pushq xchg clc rolb lods (bad) or and (bad) rex fdivr nop andl jae fildl and in fwait xchg mov loop push rex.WX pop sub rex.WRB add cmpsb out fcmovb int3 (bad) jne,pt pop insl jnp data16 mov test pushq scas xchg fstpt push fldenv (bad) mov lahf fcmovne or hlt pop nop fstpt jae outsl repnz mov jge rex.X rex.WB (bad) imul (bad) mov xchg cltd fildl icebp or mov (bad) mov mov movabs (bad) in (bad) movsb rex.WR sarl jrcxz out fildl std (bad) jg mov (bad) fistpl rex.WXB lret (bad) (bad) lcall (bad) add mov (bad) sub fcomi cli (bad) cs (bad) or imul pop imul add rex.WXB xor xlat mov outsb out jp add (bad) scas or gs xor mov mov sti (bad) jo rex.R adc pop imul scas fstps stc pop push lods jge ss in and pushq mov rex.WRX loope enterq push sub movsl (bad) xor gs jp in add movslq stc (bad) push rex.W rex.WRX fist addr32 lret cmp (bad) sub int stc iret xchg jo rorl lods push sbb push jo mov rex.WB jmpq adc cwtl (bad) sbb or addl je enterq or int mov mov addr32 rcrl (bad) jge xlat fidivl enterq rol jno stc (bad) imul (bad) mov out hlt (bad) rex.XB out adc pop mov push (bad) pop adc pop sub and pushfq mov xchg fstpt es (bad) rex rex.RXB or (bad) testb mov mov and cmc xchg (bad) pop fcomp and add mov lahf rcr push sub pushfq mov (bad) xorl (bad) jnp imul enterq xor xor movslq or stos pop or push jle movabs push pop mov movslq fildl lahf sub outsb xchg fndisi(8087 leaveq out addl jno movabs fadd and jle leaveq (bad) cli (bad) jmpq jrcxz fucomi (bad) movsl int sbb cmp imul pop and add jns movsl fsubs cmc mov pop scas pushq int sbb (bad) pop rex.WR int3 test lret rcrb xor (bad) adc rex.R rol sarb retq and jmpq xchg or popfq js mov mov mov adc (bad) movabs data16 rex.WRB mov mov (bad) out rex.B fwait (bad) jo cltd rex.WB fs fiaddl mov test xor fcoml fildl pop pushq fistl jnp and (bad) mov fadds insl lock mov outsb movabs movabs add rex.WR rex.W mov mov jmp lods fisubr mov adc rcl jb fstpt adc rex.RXB cmp jg es jnp fs jge push (bad) divb fisttpll cmp stos pand add push fisub pop or adc mov jb int3 jno (bad) jmp (bad) (bad) rex.R iret adc mov sbb push outsl (bad) cwtl insl jge fldt xchg or xchg add callq fstpt jnp (bad) loopne negl (bad) mov out (bad) pop pop xchg hlt insb jge rolb mov fisubl movslq push sbb orl popfq test mov pop xchg mov mov xor imul addr32 movabs (bad) ror fsubs sub mov fisttpl lahf roll rex.RXB rex.WXB (bad) loop mov pop mov data16 cwtl imul scas mov (bad) cmp rcrl fistpl in lret fcmovne rex.X push xor repnz outsl sub int iret (bad) lock ja lods jrcxz rex.RB rex.WXB (bad) cmpsl movabs fistl mov xchg xchg fstpt lods xchg fildl sbb (bad) add imul add and and (bad) mov fistpl popfq pop (bad) (bad) out adc cld mov mov adc fldenv sub (bad) mov (bad) sbb rex.WR (bad) je sbb and cmp or or rex sub hlt rex.WRX fs (bad) (bad) and mov pop xor insl and xorl sbb (bad) movabs (bad) (bad) (bad) addr32 lods (bad) mov rex.RXB repnz adc jbe sti insb rcr pop icebp ljmp rex.WRB xor clc mov adc push xchg (bad) stos rex.XB gs test jne pop or rex.RX imul sbb sub xchg sbb iret pop rex.R orl add mov (bad) test pop pushq rex.RXB fildl movabs xor sbb cli imul cld in iret (bad) int3 mov cs outsl mov sbb cmpsb out adc sarb outsb (bad) push add retq shrl mov test fiaddl adc int3 xchg mov push (bad) (bad) (bad) divb jp scas jmp and (bad) cmpsl pushfq lock gs push adc rex.R sub sbb stos jp jns xchg jmp mov or adc push lea add out or (bad) jnp jl sub callq jbe push fistl xchg rex.RXB (bad) (bad) (bad) sub repz jmp imul cmpb mov (bad) xlat sbb out in js imul or push jle (bad) jmp (bad) mov add sbb lock out jnp (bad) sub lcall callq popfq mov jle scas xchg pop sub add fist movsb ja rex.RX out (bad) rcl negl and sahf mov cmp shlb repnz (bad) (bad) fisttpll outsl int3 adc sub push jle callq fmulp lock fsts pushq xchg (bad) cmpsl popfq scas int loope push push mov imul mov sarl pop movabs push pushfq cld sbb cmp push jrcxz pop pop mov rex.RX mov std mov cli adc mov sahf push xor cwtl mov ror adc pop fwait jnp movabs pop add add mov rex.WR rex.W rex.WRB movabs in mov leaveq or mov sub lock test (bad) pop xchg (bad) fnstcw adc sti outsb rex.RX push cmp rex.WX pop push nop push clc out rex.WXB outsb fistl (bad) xchg jae fnstcw push lea sbb adc lret movabs rol test mov add fimull test out mov (bad) movabs int stc jns mov js imul jle rex.X mov fldt rex.RB (bad) add lret (bad) int mov fildl pop sub insb fisttpl add loop mov sub fildl (bad) fmuls js mov push jae pop lahf or stos pop cli leaveq shrl rex.WR pop mov add ss pushq jmpq retq cmpsb rolb adc fildl mov (bad) movslq orl cmc cmp push push test insl mov sub scas clc fildl jo lods jnp test sub xor rorb mov jbe adc rex.WRB insb (bad) iret sub imul lret stos negl pop test and xchg pushq xor jrcxz cmp mov fisttpl push rex.WXB mov cmpb rex.X es je sub jae jge mov sbb out rex.B add shlb rcrb fisubr insb ja lock rorl mov push mov sub rex.RXB callq rex.XB pop fcmovnbe stos gs andl xor psubw outsb movsb insb add mov stos rex.RB movsl fistl sub insl cmp jg fldt stc rex.WRB sahf xchg in outsb xchg (bad) cmp addr32 sub sub mov (bad) fadds movslq push movabs cmp movabs add jp sbb loopne mov add xchg sar retq or lea (bad) mov (bad) mov ja pop rex.WX and cmpsb punpcklwd in jmpq rex.RXB (bad) sbb out pushq xchg jg mov sbb popfq cli rex.R bnd xor cmp and pop sub insl fistpl sbb rex.WXB rex.WR rex.WB sub xchg pop out insb mov add pop cmp cmp xchg sbb xchg sbbl adc mov sub rex.B ss fwait and iret insl int and cmp sbb ss jrcxz imul loopne add movabs (bad) fdivrs in rex.WB fildl fldt sub retq pop loop mov cmp (bad) lock pushfq (bad) pop rolb sbb mov (bad) mov (bad) leaveq stos jle rex.XB or cmp pushq insb (bad) xlat outsb out cmp pushfq push fxch mov imul icebp (bad) fisub movabs (bad) int3 int3 and (bad) jno test (bad) jmp adc sub add (bad) jmpq addl cmpsb out xor push xlat and rex.WR (bad) sahf rex.WXB (bad) sub add cmp sbb sub fcos in (bad) pop (bad) xlat (bad) pop out rex.WRXB mov (bad) popq sbbl retq icebp push rex.WB lock mov movabs jae movabs (bad) icebp movabs rex hlt fisubrl xchg repz icebp (bad) stos pop test mov fisttpl (bad) pop loop xor push (bad) add imul gs (bad) lock pop sbb sahf mov fisttpl movabs jae mov xor popfq rex.WRXB rex.W add (bad) sbb test sub mov cmp scas rex.RB cmp mov incb adc paddb pop test or add callq (bad) movsb rex.RXB cmp jns lods lods rex.W data16 pop mov hlt (bad) out pop frstpm(287 adc rcr and int jge sub (bad) add lock movslq sub enterq pop and imul fwait in (bad) movabs andl rcr jg mov or lods ja push sbb popq addl adc mov jnp insl and mov jbe mov xor rex.XB fimull cmpsl fildl (bad) iret xlat pop lock sub mov mov cmp xchg mov (bad) cmp outsl rolb rex.WRB (bad) or cmp xor ja movsl cmp jb or sbb add xor rorb loop mov lret mov fcmovnbe retq ds fstpl jmp icebp sbb pop rex cmpsb test pop test mov out sub subl negl jne lret fbld cli xchg pushq imul rex.RXB rex.WX fwait xorl (bad) hlt fstpt xchg jmpq (bad) push (bad) enterq sbb rex.WB imul hlt mulb fstpt sbb xor cli (bad) lock idiv xchg xor jg or xor jnp callq insb insl movabs add mov rorb jno out leaveq icebp rex.X xor (bad) fwait in stos fstpt xlat adc cmp sbb xchg int3 retq in (bad) rex.XB (bad) (bad) (bad) leaveq and add ja jns mov fidiv xchg mov rex.WX fcmovnu (bad) xchg xchg fstpt jns mov (bad) cld insl (bad) (bad) xchg sbb in (bad) (bad) sbb hlt push xchg rex.WRXB (bad) rex.WXB sub sti pop (bad) or sbb leaveq sbb fwait fwait cmp fldt sti fmull pop sbb cmpsl pop cmp rex.RXB cmp jl cmp mov mov (bad) minps cmp cmp movabs std mov fisubl mov cmovnp rex.WX es pop icebp lahf cs mov (bad) xchg xchg jnp pop loop sbb fistl (bad) notl or mov lret cwtl or ds cmp (bad) mov rex.WR jne xor mov (bad) (bad) cmp pop lahf cs xor mov rex.R outsl mov adc rex.WR (bad) in movsl mov movabs add (bad) (bad) scas repnz in sahf (bad) js push cs mov mov sbb cmp cmp cmp iret (bad) jle rex.X scas xchg cld rex.WRB mov sti cmpsl (bad) jp push es mov jo add xchg test in push push cmp cmp (bad) icebp pop fmull cmp pop xchg fisubl movabs ds rex.RX rex.WX loopne pop je leaveq jp lret pop movabs jae (bad) lods pop mov rclb out pop negb lret cmp mov add pop loopne rex.XB ss jbe (bad) lret lahf (bad) retq fstpt lea rex.WX rex.WRXB mov fisubrl sarl (bad) sahf mov scas mov (bad) stc (bad) iret fistpl cmp add icebp (bad) outsl fldt jno movabs xchg movzbl rex.WRB ds pop mov outsl xchg (bad) mov and mov sti and fildl movabs lea (bad) jne rex.RB pushq pop movsb pop rex.RX fmuls mov (bad) imulb mov int pop cmpsl sbb mov fisubl jbe jnp rex.R pop mov gs out adcb fsubrs in (bad) sbb sub mov and add data16 (bad) fwait movsl lock pushfq push rex.WRB push fwait iret shlb pop fwait push sbb jno data16 mov stos int3 xor out fcmovnbe (bad) es sbb adc nop mov (bad) jbe xchg js andl sbb negl fildl imul cmp leaveq mov mov pop (bad) pushq retq rex.WB movslq lock xchg mov jne fwait sarl lret rex.WR stc movabs sub cmp fs pop push lods rol sbb movabs movabs mov jle pushq or (bad) push jrcxz cltd movsl fwait pop iret (bad) and in fcmovnu pushfq and scas movabs push jle (bad) sbb jmp xor outsl xor fcomi rex.X retq popfq out (bad) es (bad) pushfq mov pushq push xchg (bad) loope leaveq pop (bad) rex.WRB mov pop nop retq (bad) (bad) xlat out rex.WR cmpsl fsts or adc test fisttpl sub jg push addr32 sbb in fwait rex.R add movabs xchg cmp sbb idivb test fmul xchg fcmovnb outsb scas es rex.RXB xor push add rex jno cmc retq (bad) mov retq pushfq and movslq xchg mov shlb jns repnz pushfq in sti jnp adc xor ss push out test jmp rex.XB fwait sbb pop data16 xchg repz fcmovne in sahf pop push mov (bad) or or (bad) xor shrl data16 retq out sbb push push cmp (bad) out imul repnz cmp xchg add (bad) push mov mov fstp add add cmp gs movabs or enterq retq stos (bad) xchg rex.R ficompl jrcxz add jg cld (bad) stc cmp or (bad) lock in shrl rex (bad) mov adc jge and loopne out jg pop popfq out retq (bad) loopne out or rex.WX (bad) rex.WRB jbe jno mov cmc jnp mov jmp pushfq (bad) push sbb gs rex.X nop rcl pop in lahf insb rcl rex xchg in std jne xchg mov ficoml add (bad) movsb xor loopne popfq push rex.X rex.W testb out push (bad) movsl fsubl xor outsb int iret rex.RX mov xchg xlat rex.RB (bad) movslq jno rex jb xlat cmpb rex.WRB movabs xchg (bad) ja adc cli scas (bad) popfq (bad) shlb rex.B rex.R pop (bad) push mov (bad) push test pop mov sahf fwait sbb stos add pushq sarb (bad) or callq (bad) addb cmp scas adc sub (bad) outsl xchg retq fildl fcmovnb jbe (bad) outsb (bad) stc out xor fwait data16 leaveq add adc push sub rex.W rolb xchg pushq fldcw stc and pop rex.R fiaddl sbb pushq movslq rcr or mov cmp leaveq push ja pop std fdivrl mov clc pop rclb lods (bad) loop (bad) mov (bad) fisttpl rex.W (bad) jrcxz sbb pop push mov stos rex.RB rex.RB rex.WRX imul (bad) test jbe outsb xor gs cmp (bad) fstpt xchg push (bad) fsubl rex.WR sub lods (bad) jnp (bad) mov scas rex js retq fstpt ja fistpl shlb in addr32 mov pop xor (bad) add test adc rex.RX pop rex.R rex.RB sahf or imull (bad) jns movabs sub pushq (bad) int (bad) movabs bswap in lods test (bad) cmpsl fwait scas lret rex.WX push sub rex.RX enterq fldt clc (bad) pop mov fcomps adc movabs or nop addr32 enterq add add adc sbb lret push (bad) leaveq fisttpl test rcll (bad) psllw pop fistl rex.WRX xchg retq vcomiss fstpt rorl mov movabs xlat in (bad) jrcxz (bad) or stos pop out scas std push (bad) fnstenv lret jp rex.W and mov cmpsb jae cmpsl mov mov adc and (bad) repnz outsl stos jmpq movb xchg mov test (bad) rex.RXB push rex.W rex.RB enterq stos hlt out or push add lods add and pop jae frstpm(287 adc scas mov repnz iret jrcxz int fistpl (bad) popfq and sub fsubrs data16 or int rex.WRX jg outsb hlt rex.RX iret pushq pushfq xchg mov xlat cmc sub and jmp sahf push scas rex.WB rex.WRX xor pop lods stos (bad) ja jb sub (bad) fwait adc jne fstpt sbb or lock iret int mov mov (bad) stos in fildl incl mov add rex.R fistl mov (bad) jnp (bad) sarb push test stos xchg imul icebp fistl jmpq add loop pop add push lahf xchg mov roll (bad) cwtl (bad) cmp jl (bad) mov jae cs mov lods mov add repz popfq test fistpl es (bad) sbb rex.WRXB cmpsl (bad) movsb ds (bad) add (bad) repz jne test rex.WX fsubp test (bad) cmp xlat push je fildl loope push js rex.RB popfq lock es cmp fildl int3 push (bad) (bad) jmpq sub (bad) jno mov mov and xor sub rex.R add (bad) fildl ja adc pushq fwait (bad) xchg xchg movabs or lods sbb xor test jbe outsl (bad) cmp fcmovne imul rex.WXB repz or sub (bad) insl xchg lret rex.WB pop lret mov fildl cmp repz fstpt jbe mov pand sub fcomps fildl lret pop jne sub or pop popfq jge sti jrcxz outsl and ds sahf scas add fcmovnbe cmp adc pop jbe or retq sbb cwtl mov gs and sahf or and (bad) int (bad) jmpq sub xor fisubl mov xchg (bad) in (bad) out rex.WXB xchg sbb mov rex.B mov jns xchg jo addr32 jnp or pushfq adc rex.RB xchg mov fildl (bad) jg fcoms mov rex.WRXB fwait loopne mov repz retq rex.WXB test mov cmp popfq jrcxz lods (bad) cmpsb imul mov mov mov jg pop insb and shl pushfq pop fsubr rolb mov cmc sbb rex fs push sub xchg push jb rex.XB repz (bad) sbb pop (bad) rex.WXB imul push add sbb mov in retq imul cmp adc or and pushq xchg mov mov (bad) test je (bad) (bad) popfq retq add mov addr32 mov pop rcrl sbb (bad) sbb (bad) retq rex.WRX fstpt pop mov (bad) lahf (bad) loop rex.WXB insl fstp add cmpsl push rex.WRXB gs adc jp iret rex.R (bad) stos movabs repz (bad) out imul xchg add movsl pop sbb rex.WXB faddl retq fstpt rex.B sarb leaveq fstps mov sub (bad) or jle fstpt iret sahf fucomi out pop xchg lret pop (bad) pop (bad) jle (bad) cmpsb movslq stos (bad) add cld rex.WX movabs movsb or fldt fsts ds jrcxz fstps sbb js jb fdivrs adcb mov fstps jnp imul (bad) fstpt mov rex.WX clc pand insl mov or (bad) movabs pop cld movslq imul (bad) ror leaveq xchg gs (bad) fs cmp fistpl (bad) mov test xchg (bad) lock (bad) std adc jno mov cmp xlat in (bad) rclb rex.WRB insb enterq iret test mov cmp xchg add (bad) rex.WX and xor pushfq sub and (bad) (bad) push (bad) jae (bad) jb xchg sahf cmp (bad) rex.WR callq lea in or xchg (bad) ficoml icebp and fldenv in cmp out retq fildl add mov add mov push and retq adc cmp insb mov out sti fldt rex.X and pop rex.RX add mov js (bad) mov cmpl sbb gs or jae push rex.WB xchg out rolb or fwait rex.X push int nop addr32 icebp (bad) and adc (bad) leaveq sub addr32 push cld adc lret pop retq adc (bad) movabs cmp fildl mov mov (bad) stos sarb fadds in out xor push jrcxz ja pop push sbb imul stos (bad) out jae loop hlt mov (bad) jne (bad) xchg sbb ss jno xchg (bad) adc rex.WRXB or pop cmp fistl loope out outsb (bad) xchg or rex.WRX (bad) jno sub (bad) add es xchg rex.WRXB repz (bad) fstps movsl movsb addr32 icebp imul stos mov (bad) fistpl outsl (bad) sbb fcmovu (bad) sbb jne sbb js rex mov (bad) fcmovnu fwait pop (bad) lods (bad) jle pop ds and rex.R rex.WXB outsb pushq cs xchg iret cwtl test jnp fisub jg stos fisttpl push xchg xor lock shll rex mov (bad) loop and cmp jle jrcxz sbb or fldt (bad) scas mov rorb (bad) sbb adc and rex.WX movabs and iret (bad) outsb outsl vcmpsd pop jbe lods mov mov pop movl cs mov lock or leaveq pop cmc xchg js (bad) add cmp (bad) mov xchg or or mov (bad) jae rex.WB rex.WRXB rex.WXB hlt or retq xor insl or mov pop fdivl adc jae int std fsubrl mov rex.R lret xor or movabs rex.WR pushq rex.B rex.WRX adc ss fisttpl mov xchg adc movsb xchg insb (bad) push mov fsincos (bad) add out sarb (bad) (bad) push sbb xlat repz iret jne pop jp push fdivr fcmovnb shrl or jl enterq pop fldt xor pop push mov jnp sub (bad) (bad) mov pand pop stos imul orl xor fildl jl jnp movslq pop (bad) movsl mov cltd insl xor mov (bad) xchg imul fldl rcll sbb add (bad) (bad) jbe push or xchg fildl or rex adc add cld fstp jrcxz (bad) mov addl movsb xlat (bad) neg mov add push rex.WRXB popfq adc notl jnp xor callw sarb jl (bad) movsb pop (bad) mov rex.WB mov xor cmpsb (bad) cmp and imul jg xchg lret repz in xor test int fisttpl or pop (bad) nop mov (bad) adc pushq jp callq (bad) and (bad) mov pop fldl test sbb pop fisubrl fwait xor pop xlat ficoml adc (bad) adc pop rex.WR rex.R rex.R es sub mov mov fldt xor pushq mov (bad) cmp xor xor stc (bad) and rex stos (bad) sub rcl rex.WX or sub in movslq jg icebp xchg add mov rex.WRX mulb pushq movabs es add or (bad) (bad) imul movslq rex.XB (bad) mov (bad) test (bad) stos or xchg icebp rex.WR and push fmuls scas xchg add add cmpsl (bad) imull cs jnp rex.WRB js (bad) or jge rex.WX sub (bad) fistl jmpq movabs (bad) (bad) add or mov insb add fisttpl faddl clc pop leaveq outsl mov mov es stos fildl jae repnz fstpt rex.WRXB pop (bad) cs in xor (bad) rex.WX sahf fldenv cwtl hlt movabs xchg movabs insl sub movq (bad) add (bad) mov jmpq cmp jnp add leaveq cmp cmp in movabs fwait ja add insl rex.RB stc fwait popfq loope and sarl adc retq gs in jns cmp add rex.WRB sub (bad) repz jb pop mov movabs subb int (bad) xlat sti lock push in imul imul push lret fistpl in add pop or rex.WX (bad) jge fldt (bad) rex.WRB add scas lahf rex.B fwait callq test outsb jmpq pop in retq (bad) rex insw (bad) iret (bad) leaveq rex.WRXB pop rex.W rol (bad) fistl lahf xchg in and mov sub movsl (bad) adc adc rex.X jne pop add mov pop stc mov adc rex.WRXB in rex.WR fistp add stos outsl sub mov (bad) (bad) cli lock faddl rex.WR cmp rex.WB rex.X cmp fildl rex.WRB rex.WR xor (bad) rcrb pop test rcr cld imul jae test stos jne (bad) out pushfq out pop cmp clc (bad) sti xor (bad) add syscall add fiadd repz or pop (bad) xchg or out imul cmp fwait mov rex.WRB sti fcomp and jo enterq mov ss sbb fnstcw adc mov movslq loop sbbb int3 push xchg rcrl (bad) cmc stc test and pushfq lahf sub jne in rex.R shll out mov (bad) rex.WRXB cmc rclb xor nop retq rex.WXB loope mov clc sbb sbbb (bad) add iret sarb add push fidivr push or xlat movabs pushfq loope xchg (bad) jp int3 addr32 push loopne jno cltd cltd rolb popfq pop stc mov pushfq stos mov (bad) sub mov (bad) fnstcw test push loope mov (bad) or adc popfq pushq imull movslq adc xor xchg sti (bad) pop pushq push outsb fdivrs movabs fucomp je rcl and pop rex.WX rcr cmp mov pop (bad) push xchg callq mov (bad) movabs imul iret adc jb jrcxz pop jp test pop (bad) xlat jae fdivrl xlat (bad) rcrb fwait (bad) jae mov bnd fcompl (bad) rex.RXB pop fcmovb lods mov pushfq stos jb (bad) add xchg xchg or sbb rex.RX addr32 (bad) fisubl (bad) xchg mov loope mov (bad) insl cltd adc add stos xor rex.W fs jmp cltd addr32 mov (bad) jrcxz xchg popfq sbb iret (bad) iret cmp hlt push movsb scas retq push movabs rcrl movabs imul cmp jb (bad) cmp fidivl rorb fcmovne in fnsave pop addr32 (bad) mov jns repnz lods xchg shrl pop and xlat jne jrcxz (bad) (bad) (bad) cmpsl mov mov rex.WRB rex.WR mov add pop pushq jb neg (bad) stos (bad) cli xor sti xchg fstpt ffreep rex.WX (bad) fucomi cmpl (bad) rex.W rex.WXB (bad) int3 rex.WRXB (bad) rex or (bad) mov mov fistl fs loope cmp popfq cmp mov push xor pop nop pop out cmpsl push loop and addr32 mov sahf std outsl lret xlat fistl xchg test pushq mov movabs (bad) lods fstpt es sbb (bad) pop adc shrl retq mov pushq sub and sbb (bad) rex.WB (bad) shl mov (bad) push sub mov fisubrl lods jg fisubr (bad) test repz imull rex.WRXB test cmp sahf test or adc int3 scas (bad) int3 loope divb clc stos std (bad) rex.WB push cmp popfq sbb xor add push fcom sbb rex.W pop movslq mov rcrl mov sbb mov rex.WXB cmp ror sbb (bad) jno adc jno js or fcmovb add pop je jnp (bad) push loope cmp ds rex.WR xor xor rex.WX xorl pop sub jae (bad) (bad) pop in push rex.RX jnp pop stc cmp stos jge push je pushq jae rex.WB jns rex.RB sbbl cmp pop cmp ja xchg outsl cld in int3 hlt jns fldt popfq sbb sbb and ja push pop pop mov (bad) or fwait addr32 iret cli xor mov movabs addr32 scas pushfq jnp outsb cmpsb jbe in pop (bad) mov (bad) jl (bad) sub (bad) stos push pop sub stos (bad) rex.WRB mov imul rorl mov movabs cmp push out in (bad) cmp (bad) movb xor fdivrs and js (bad) xor out push lods lock pop push rex.B (bad) rcrb sar (bad) rex.WB and xchg in jb (bad) retq (bad) cmp xor loope enterq std movabs (bad) sub movsb or jae (bad) lods callq rex.WR (bad) repz cmp movsb andl pop sbb mov out jnp sti pop pushq ja fcmove movsb or jmpq mov sahf jg clc mov loope rex.WRXB (bad) outsl mov sti out cltd xchg mov fisub sbb pop push rex repnz xor (bad) fsubl jp (bad) pop (bad) xor pop fsubrp jo jbe (bad) movsl cli pop pop adc jle lret pop push push xor pop (bad) not movabs stos push rex.WRXB push test popfq add jge std ss or insl add push test cmp (bad) pop mov xlat outsb push fsts fdivrs rex.WRB sub (bad) xchg xor add mov mov mov mov fidivr sbb (bad) jae mov lea lock addl rex.XB out std vaddss enterq push sbb lret (bad) loopne (bad) rex.WRXB cs or lods mov pushfq (bad) or lods (bad) rex.XB rex.WB jmp cmp (bad) (bad) imul jno cmp adc push push sbb movabs fwait (bad) push pop (bad) pop fstpt outsl add scas rex.WXB fwait (bad) lock cs xchg cltd movabs rex.W scas in mov xchg retq rex.WRXB fwait jmp or (bad) xchg repz test push (bad) xchg fsubrs insb push xchg sbb xor add push and repz mov xchg lahf cmpsb pop xlat movabs (bad) iret (bad) (bad) xchg or insl mov subl xlat cmpsl (bad) lahf or pushfq sbb (bad) xchg insl xor rex.WRXB callq out hlt faddl rcrb (bad) movabs cmp or pop pop (bad) xor mov fnstcw xlat data16 pop mov (bad) pop hlt test mov clc gs sbb xor (bad) sub rex.RX mulb fildl ss rex.R hlt rex.WXB fistpl cmp cmp mov rex.WRB test rep fistl mov mov and shrb gs sub fcomi sub xor imul movsl mov and (bad) mov jbe mov fcoms rex.XB retq xchg fdivs cltd pop (bad) add lretq jae (bad) sbbl rex.X ficom pop mov clc xor popfq mov retq (bad) rex.WR cmp pushfq test int retq rclb rorl push xchg rcrb cmp add rex.RXB cmp mov rex.WX pushq mov pop int3 push mov mov (bad) (bad) cld or enterq fistl sti jp push rex.X out repz xchg mov or (bad) jbe sahf xor pop leaveq rex.XB sub and faddp push (bad) (bad) pushq (bad) mov xchg jnp rorb out popfq add rex jmpq mov fld mov mov in and cmp fildl test adc mov sbb sbb outsl fcmovnb fsubr test or callq loope mov xor insl and fstpt mov cmpsb clc fildl nop out ss and repnz lahf sbb rex.XB xlat jne outsb adc xchg pop lea mov adc iret mulb fldt push (bad) rcr ja cmc pushfq adc xchg pop rex.X fstpt in lahf fisttpl mov lret cs nop (bad) (bad) jnp lods cmp enterq cmp movabs mov (bad) or fildl cmp (bad) cmp (bad) jl es callq rex.XB mov rex.RB (bad) cmp leaveq sub mov and sbb pushfq (bad) (bad) out push fsubrl fxch rex.WR test add mov pop and rex.WRX fstpt sub rex cmp and (bad) (bad) mov iret out rex.WRXB rex.RX push and nop retq sbb sub adc mov pop (bad) mov (bad) flds fwait es fidiv pop and scas loop cmp adc scas notb rex.WXB and mov mov (bad) or sub and add fcmovnbe iret pop sets (bad) cmp (bad) leaveq push rex.W xchg jrcxz (bad) in stos (bad) mov pop pop lret js pop in fistl movabs lock xor (bad) repnz push fst push jb cmp (bad) (bad) pop callq movslq xchg cli (bad) icebp nop push stos jp xchg xchg pop scas test fsubs ds (bad) mov jno rex.WX (bad) (bad) cmpsb rex.R (bad) movabs xchg sbbl lods fsubl add sbb out out and fldcw stc insl mull (bad) fs add cld in ficoml xchg pop (bad) add xor xor rcrb fdivrs push rex.R jp (bad) test jno jae xor decl addr32 cwtl cltd (bad) jg adc pushq ss lods xor xor lret rex.W (bad) and sub imul stos ds rex.WRXB xlat mov rex.WR pop jo rex.RXB jp rex mov (bad) stos out retq (bad) lods rex.B retq cltd xchg icebp cltd cltd scas cmp mov jae retq push mov (bad) mov (bad) fistl in scas movabs outsl (bad) lods mov or xchg jg push add fstpl push pop mov mov and fisttpl (bad) sub fldt add movabs test or push loopne pop cwtl rex.WR add leaveq jnp push insb (bad) mov popfq callq (bad) sub (bad) loopne rex.WX repz fildl (bad) cltd xlat xchg and rex.X sbbl push testl xor cltd jns xchg cwtl icebp jne xchg push (bad) xor xor push pop add cs (bad) jge rdtsc mov iret fidivrl imul movabs sub clc outsl lahf leaveq lret loopne xchg mov cmp int rex.WB add cmp jne mov fsubp rol rex.RX popfq mov add lret ds and hlt adcl mov pop lret mov fsts enterq movb mov (bad) push fcompp in fiadd cmc mov (bad) cmp push fmuls (bad) jmp jo push pop in movabs mov push cmp rex.WRXB xchg sarb movslq pop pop fcmovu jge test mov rex.WRB icebp jle push movabs pushq outsl loope xchg push or in loop xchg adc jle int mov push xchg hlt sub mov loope test add jl (bad) cmc cltd std repz and fnstenv cmpsl xor int xchg sub mov sub rolb xor add stos iret add mov fldl sbb lcall pop mov sbb pop lods cmp sub cli (bad) jae or test ds xor gs cltd cmpsl pop push fcoml imul movabs fadd fwait imul (bad) (bad) cld cwtl rex.X mov movabs je rolb (bad) fisubl nop pop notb (bad) xor rex.X jo jle adc (bad) sbb adc fcmovnbe rex.WR xchg rex.RB or or mov cmc xchg jmp sar fwait cmp or fistpl (bad) test push sub rcr (bad) or scas loopne xchg mov vpor mov pop (bad) enterq (bad) iret stc fisttpl xchg rex.WX callq insb xchg jns xchg mov rex.WR mov jle mov pop jns add test pcmpgtd fstpt jle movslq fstpt push stc add or jrcxz retq push ds iret pop (bad) pop and int mov fwait add xlat jne mov iret rex.WRXB rcrb (bad) lcall int movabs (bad) cs movabs push xchg add lods clc xchg or (bad) adc xchg push add lods (bad) pop lods rex.R (bad) fildl rex.B or (bad) ja mov fisub mov fistl and or rex.RXB adc fnsave mov fwait (bad) rex.W rex.B lahf jns movsl lock jge pop hlt rex.B add rex.R fsubr rclb test and pop addr32 mov (bad) ror stos cmp fistl gs decl push jp rex.XB (bad) in mov fcomi faddl iret out rex.WRB adc fcmovne (bad) or (bad) iret (bad) (bad) callq out fildl (bad) rex.WX mov xchg cld or outsb fldt loop sbb rex.WRB rex.RX jmp sti fisttpl sbb outsb pop fidivl orb cli and push rex.RXB cmp or rcrb imul (bad) pop fdivl xchg rex.X addr32 xor xchg out jne push add ds iret addr32 sub mov and sbb jno xchg (bad) rex.RXB cmpsb fimul rex.WRXB repz ja out cmp mov (bad) and mov fadd decl (bad) rex.X rex.RB scas rex.WXB js jge divl rex.R fldenv nop pop (bad) movabs fstpt or clc xor fldt adc mov fcmovb rex.XB (bad) int adc and callq out (bad) jne lods add mov jl rex.WRB pop (bad) (bad) and in jrcxz fcomps movabs xor stos rex.WXB lods lea dec rex.RB mov or fildl jb pop cli adc movabs xor mov jae xor (bad) fistpl lea (bad) outsl adcb cmp clc outsl (bad) retq leaveq retq pop movsb pop sub cs (bad) or xor jg rex.XB (bad) (bad) xorl pop mov jns data16 pop (bad) scas cmp or push rex.RB rex.XB ja fistl cmp (bad) fldt cmp mov (bad) movsl pop fstpt rex.XB mov movslq rex.R jle cmp js test rex.WRXB mov cmpsl fistpl sub pop jrcxz mov callq jle (bad) (bad) stos (bad) rex.WB cmpsb hlt pop js (bad) or xchg test rex.RX rorb (bad) xchg pushq jg movsl rcrb hlt or fs leaveq std and fucomi icebp scas outsl (bad) mov rex.RB cmp fwait sub xchg rex.WB rex.WR out adc popfq lahf rcrb fistl scas cltd outsb push cmp std pop or pop mov pushq cmp std (bad) imul (bad) mov pop subl fbstp (bad) push (bad) (bad) xchg jl sub pop repz pop orb (bad) cmp mov enterq pop mov int and mov push sarl addl jp jrcxz rex.W rex.RXB push xchg in sbb xor fisttpl mov shlb cmpsb scas movabs fcmovnbe stos mov (bad) lods in rcrl pop sbb push sbb fcoml push sub pop add fwait out lea js jrcxz adc xchg (bad) mov hlt mov fnstsw add scas fsubrs xor sub clc (bad) push pop mov xor fisttpl repnz in xchg mov add gs (bad) popfq fstpt (bad) (bad) xchg mov and (bad) xchg test (bad) rex.WXB adc ror pushfq push fistpl xchg mov fistpll xchg pop cmp pop and xchg or rcrb (bad) pop test sbb rex.WRX ja cltd fildl out jg fldt push je pop sub int3 jp (bad) fldt mov fisttpl or pop mov (bad) push (bad) fwait add mov test sbb sahf ss add rolb xor lock lea mov mov repnz rex.WRXB (bad) pop movsl callq es test lods fisttpll or (bad) pop fwait push jg fldt cli sub leaveq xlat sarb sbb jo sbb (bad) jbe fdivs icebp sbb pop imul repnz (bad) std pushq cli callq push pop cmp sub add add cmp (bad) fsubrl xchg negl sbb rex.WX jrcxz,pt rex.XB loope (bad) (bad) push stos out (bad) (bad) fs jrcxz fldenv (bad) (bad) pop out mov lods and (bad) (bad) pop add iret js stc mov in sub (bad) mov pop nop rex.XB jns pop (bad) jmpq fmuls imul pop push xchg mov fmul cmp sbbl (bad) sub push (bad) in jns std movabs mov sahf push fwait rex.XB adc (bad) mov and repz or clc adc jrcxz outsb mov ja jne or lret sub rex.WRX rex.WRB rex.WR jno and stos scas out lods xchg sbb mov mov mov jle pop (bad) cmpsb (bad) loop jl sahf insb sbb or popfq jrcxz sub popq (bad) cmc (bad) add rclb fsubp pop xlat fsubs or adc lret jg xlat sbb add jnp sbb sti (bad) iret cltd mov out mov mov insb mov shrb or xchg movabs outsl cmpsb rcrb fstpt (bad) jmp (bad) lods xchg xchg mov (bad) (bad) shrb mov sbb lret pop fs fwait es xchg jnp (bad) shrb out sub pop mov sahf (bad) gs jp (bad) rex.WX jmpq movslq rex.XB fdivs movabs (bad) and rex.WRB mov sbb xchg pop and jb (bad) xorl retq fsubrl stc xor mov or sbb jns leaveq movsb cmpsl iret int3 cmpsb xor imul (bad) gs lock imul rex ss push stos fcmovnu callq pop lahf fistl mov rex fistpl push (bad) adc (bad) and xor movabs (bad) mov push push (bad) data16 xchg (bad) or xor lods rex.WR push (bad) lret xor mov out jb fs pop (bad) rex.W xor mov (bad) mov (bad) push shrb jne (bad) mov rex.RX cmc sbb add sub fcmovnbe (bad) mov pop adc rex.RX sub xchg xchg (bad) sbb out mov imul cli xchg out movabs add rex.RXB push jnp jns pop sub insl (bad) fldt rex.RX push cmp retq (bad) mov (bad) js add push movabs rol out (bad) jo jno cmp stos icebp push fistl fs pop fcmovnb push rex.WRX out loopne imul sbb stc mov mov jnp (bad) icebp (bad) rex.WRXB rcl jg sub rex.WR in xchg mov sbb cld fistl sub cmp xor fisttpl (bad) xlat fstpt out rex.X out adc push (bad) rex.XB lods and movabs pushq rex.RB leaveq or jl (bad) rex.B rex.WX (bad) vpavgw rex.WRB gs push insl (bad) push loop test add push mov add jnp (bad) add movabs (bad) mov pop xor repnz cwtl rorb fistl (bad) add cmp (bad) pop test and fistl lret fildll mov (bad) mov (bad) push andl jns and fistpl and retq (bad) std fisttpl int3 xchg add push (bad) (bad) xor movabs int3 fistpl (bad) test mov fldt int mov (bad) rex.X rex.WRXB and (bad) sbb jb rorb cltd insl (bad) cmp retq and rex.XB (bad) pop xor mov pushfq sbb xlat (bad) rex fldt rcrb and ss cwtl (bad) (bad) adc decl xor add mov imul jle xor (bad) roll outsb jnp mov (bad) mov xchg mov jge adc pop add (bad) (bad) movabs lock rex.B rex.W xor add cli (bad) jns sub popfq stos cmp rex.WXB rex.WRB sbb pushq test rex.WR lahf neg pop xchg ss adc fcmovnu sti test lock rex.WXB jae rex.WRX jb pop mov add vorpd fild adc jbe fwait rclb and push xchg add mov sub ja fildl cmpsl cld movabs push hlt push test (bad) mov data16 fcmovne int ficoml std jge (bad) pop sbb fistl in mov repz (bad) jae cmp or cld (bad) int3 pop mov adc (bad) push cmp movsl xor (bad) cmc pushq mov loop mov push mov push adc push rex.W movabs mov mov rex.RB push enterq rex jae,pt lahf and (bad) icebp (bad) adc sti pop test (bad) mov mov (bad) lret andb insl (bad) mull fisttpl clc (bad) cli (bad) mov xchg callq cmp retq rex.XB xchg sbb icebp xchg rcr xchg and and xor test fidivr scas (bad) stc int3 cmc fisttpl mov (bad) test fisttpl leaveq sub pushfq lretw lahf cld cmp fstpt es (bad) out (bad) jrcxz xchg loop push mov pop (bad) cmpsl (bad) mov rex.RX lret jmp fistpl lahf stos jg jge pop push stc rex.RXB fwait subl test pushq mov rep pop sbb jle sbb (bad) outsl cld vsubss vpand mov (bad) (bad) or mov rex jrcxz ljmp orl cli (bad) movsb pushq fnop push rex.RXB gs (bad) (bad) cmp fcmovnb fsts (bad) jbe rex.XB rex.WR fistl stos xchg push (bad) sub mov sarl fwait (bad) pushfq cmpsl orl (bad) mov test add sbb imul cmp or mov fistpl cs sub xchg jb movsb lods push jbe pop sbb (bad) rex.WRB fbld mov icebp std lock repnz adc (bad) imul popfq lea rex.B cmc in sbb fcmovnb mov mov (bad) testb jg add (bad) or pop repnz rex.WRB pop (bad) or or and fwait js (bad) pushq in (bad) (bad) add fcmovne je ror jb sub rex.WR lods cmpsb xlat imul xchg orl test mov outsb mov or out push movslq jmp js sarl pop rolb sub sbb out jl nop rex.RB pop rcll fsts sbb sbbl mov rex.B rex.RXB repnz hlt rex.W repnz or cmp (bad) xchg imul rex.WX sub (bad) (bad) or cltd sbb (bad) test decl fnsave push push rex.XB pop cmpsl fsub sbb fnop (bad) pop (bad) movsb scas lret (bad) (bad) mov pop scas rex.X loop imul lret rex repz push jge (bad) fsubr (bad) imul adcl pop clc xor pop cmp pop cmp (bad) (bad) std (bad) in and pop or (bad) (bad) movsb fldt cmp and xor rex.X xchg rex.W rex.XB fcmovne outsb jb mov sbb xchg (bad) enterq and (bad) (bad) xchg rex.WR (bad) adc clc test and mov fildl sbb or fistpl adc out popfq xor (bad) mov fcmovnu push push lret cmp rex.WRXB (bad) (bad) mov int3 and rex.WXB add (bad) mov lock fstpt mov (bad) (bad) hlt mov push fldt enterq test pop (bad) ss mov cmp mov pushq (bad) imull cltd mov xor addl (bad) (bad) mov imul push (bad) rcr subb mov adc mov pop (bad) sub (bad) popq vcvtsd2si sti jnp pop lods outsl movabs mov fs subl (bad) sub callq movsb in push pop scas (bad) fcomp jns lret ja out mov sbb mov (bad) push mov add (bad) pop rcrl cmp (bad) int3 mov jno mov (bad) in add cmp mov outsb (bad) pop jb mov (bad) xor xchg (bad) xor fistl jp pop rex.R mov stc xchg (bad) sub mov mov (bad) (bad) pop (bad) scas pop pop and rex.WRXB (bad) xchg imul push fcomi mov sbb (bad) xchg mov (bad) mov int3 sahf (bad) cld fildl add ror and (bad) mov imul pushq ffreep add (bad) ss fdivrs push enterq iret (bad) rex.WXB test (bad) add movsb rcr (bad) (bad) (bad) or sub test push je movsl xor (bad) sub scas and mov mov pushq repz cs nop adc mov rcr or jb (bad) in rex.RX (bad) gs pop jmpq mov (bad) or repnz in add test mov adc in mov (bad) xchg insb int adc sub loopne movslq fwait callq and mov cmp (bad) pop rex.WXB sahf push mov xor rex.WRXB rex.W pop add pop fldcw sub pop fistpl sub pop push std pop jge popfq mul icebp mov jb cld lods ss (bad) cmpsl xchg sar (bad) pop rex.XB xlat loop cmpsb pushfq push jnp test shlb mov pop or jae rol add pop js jrcxz adc mov cmp xchg std sbb xchg adc mov fldenv test add pop rex.W mov fistpl pop pop out push ss jnp xchg rex sub adc (bad) (bad) fistl rorb callq add rex.RX rex.R lock jb sbb add shl pop cmp fistl (bad) test pop (bad) mov cmpsl fldt cmp mov rex.RB fstpt push cld fidivl (bad) add xchg fistpl out xchg mov fistpll sub push imul pop stc mov outsl jno stos push cld lods mov sub ds fldt rex.XB jp (bad) mov mov cmpsl (bad) movabs lret xchg outsb imul in (bad) or and pop sbb insl mov fisttpl rex.WB (bad) cmp adc (bad) (bad) sub pop ja jbe jg (bad) orb out jo jl xor frstpm(287 xchg mov pop sub (bad) xor fstpt add or (bad) xchg (bad) cmp mov (bad) cld cmp or addr32 rex.WRX rcrl movabs fisttpl outsl in and outsb rcrl rex (bad) mov lods movslq adcl cmpb and out cmp jle mov pop fsub add cmp jno xchg ds fwait push sbbl xor rex.WRB imul push (bad) sbb pop add add retq (bad) sub (bad) mov (bad) int3 (bad) cmpsb fcmovnb jae fs mov sbb pushq lret (bad) mov (bad) int callq fistl (bad) mov addr32 (bad) pop jge stc in enterq repnz rex.X movsb sub sub rex.WR sbb in iret mov fcomi stos ss fldt scas jne fndisi(8087 callq xlat ds lea (bad) or push stos in outsl jge cmp push test (bad) (bad) sub pop pop (bad) jo (bad) or sub data16 jnp push or xor fcmovbe sbb and rorl xchg cmp adc test and fsubs (bad) or out (bad) mov cmp rex.WB in (bad) jae fistpl mov xchg (bad) adc incl push mov stos push sbb pop (bad) cli out (bad) pop jno insb test (bad) idivb push loope mov push pop test mov js movsl pop cli add rex.RX sub ficoml sbb sub sbb mov rex.WRXB (bad) cwtl gs fwait pop retq xchg adc fpatan pop xlat jl out jle or add adc movsb add xchg sbb add (bad) je rcll (bad) mov (bad) cmp xchg stos rex.WXB jo (bad) push push mov jp callq lahf out xor jle test cwtl (bad) lock pop fcompl lret jnp rex.WRXB xlat in stos int3 pop push fistp mov scas rcrl rcll scas rex.WRXB or cmp xchg (bad) retq scas add cmpsl fiaddl movsl (bad) (bad) add (bad) sahf rex.XB mov movabs rex.W movsl pop (bad) pop push mov add cmp cmp mov (bad) stc (bad) fisttpl adc add jle rex.W fsubrs (bad) and addr32 mov jbe fstpt movzbl (bad) and add outsb push (bad) fstpl cmpl jnp sub cld pop fs pop repnz icebp mov fistl rex.X rex.WB (bad) jmpq (bad) pop lahf in sub mov (bad) sub jae outsl gs fildl mov jge hlt pop rex.XB (bad) lahf lret cld movsl fwait sbb (bad) pushq (bad) (bad) push insb (bad) jrcxz in jnp lock fidivrl out icebp sbb jle movslq cltd movabs mov icebp (bad) cs fisttp pushfq je lea cmc (bad) stos mov loope je xor (bad) retq or and mov rdtsc test push pop je rolb rex.WR jo adc lret loope (bad) outsb fnstsw pop shlb lret or add sahf jnp mov (bad) jb scas sbb cmp iret (bad) out adc (bad) (bad) addr32 add (bad) (bad) movabs rex.RB imul lods mov fdivl (bad) (bad) cmp push imul rex.WB movsb fldt sti mov (bad) repnz outsl push test in jmp movsl mov rex.B nop pop cmp mov cmp icebp jrcxz test jnp mov push fstpt rex.X (bad) rex.WX cmp (bad) loope movslq (bad) enterq imul add pop mov data16 enterq cmp scas fcomi insl and fldt xchg jl pop (bad) callq xor (bad) mov rex.RX lret rex.WRXB rex.WRB pop pushq movabs lods lret (bad) and outsl or mov rex.WRX jrcxz xchg movslq (bad) cmp pushfq pop fsin int3 scas outsb cmp or and repz mov movsb mov cmp mov push hlt push (bad) out loopne pop gs (bad) fistpl xor rcr cmp push fdivrs sti sbb test mov rex.B fildl pop push (bad) (bad) mov loop jnp loopne mov (bad) (bad) jmpq xchg (bad) (bad) mov mov js rex.W cmp xchg sub imul cmp rex.WXB rex.WX (bad) (bad) or pop (bad) push cmp hlt sub iret cmpsb popfq test out lods fildl ss int3 (bad) push rex.WRB out sbb stc adc ror insl cmp insb clc jns mov rex.WXB hlt movabs scas adc addr32 test xor addl add xchg outsl mov xchg in data16 lea sbb jbe or rcrb mov pop lret rex.RB add int push mov in fidivrl (bad) push cmc push (bad) (bad) mov rex.RB (bad) xor mov std pop movabs insl rcr and movsb sub loop xor iret rex.WRB pop mov or jnp (bad) cmp (bad) fwait xchg imul icebp fistpl jl and fucomi repz (bad) sbb fildl setnp jns fstpt sbb adc (bad) (bad) sbb mov fwait mov ss mov sarb rex.R (bad) ja (bad) int movabs fildl retq xor fistl (bad) fimull mov xor sbb rex.RXB xchg outsl mov imul callq (bad) (bad) fsubrl iret fwait pop retq jns cmp insb adc out sub lahf cltd jmpq rex.RX push stc cmpsb int stos cli fcmovnb lods xchg jp or rex.WX jle imul pushfq clc fisubrl push in movsb lahf (bad) sub rex.WRB (bad) mov outsl jbe pop cmpsl xchg mov loopne imul (bad) sub lea rcr fsubr mov (bad) rclb (bad) and fildl (bad) lahf pop ror or rex.R sbb movslq pop addr32 jmp pop mov shll loop rex.X fnstcw jl out (bad) add fildl sbb and lret or mov (bad) fisttpl push cmp (bad) mov cmpsb fldt rex.WB ds rcr jno mov rex.RX rex.X callq (bad) fcomi or cmp sbb add rex.R mov pushfq fisubr cmp insl fcmovnu jp mov mov cmp and loope jrcxz pushq mov jnp mov push mov test loope sbb test and rex.XB (bad) (bad) (bad) sub test movabs insl imul add out (bad) lods jnp or jp jl lret xchg (bad) stos (bad) cmp ss mov rex.RXB gs (bad) sbb scas rex.RB jge cmpsl jnp je sub mov cmp pop in cmp jmp rex.WRXB adc fcmovnb movsl mov rex.RX fs movabs jg out mov xor ja mov mov adc bswap and mov gs iret rex.RB rex.WRX xchg (bad) and pushq movabs clc (bad) stos je (bad) jno mov jl leaveq fs cmp decl not (bad) xor rcrl scas xchg stos movslq fistpl add data16 movabs and retq neg test in fistl sub fldcw jl adc (bad) or paddb mov sbb test int3 roll adc fistpl pushfq callq fisttpl push pop add and outsb rex.WRXB jns adc cmpsb test pushq (bad) (bad) hlt sub (bad) (bad) and and mov (bad) pop (bad) jmpq xchg fldt int hlt mov iret rex.W outsl xchg mov adc fisubrl (bad) mov fwait jmpq jnp jmpq fistl mov xchg (bad) in jnp add sti mov adc outsl cmp in vpand (bad) pop mov retq adc add cmc loope mov leaveq jl enterq xchg fstpt out in (bad) push movsb pop cmc pop pop mov pop fisttpl loopne xor (bad) (bad) fcmovne xor sbb (bad) test mov scas sbb cmp fwait sub fwait (bad) fldt ss in (bad) cmp int adc xor fs and mov pop es rex.RX (bad) mov movsb fldt mov cmp cmp (bad) iret xor cmp mov or gs pop sub rex.WXB cmp in mov adc ja or (bad) sbb rolb leaveq pop test cmpsb iret movslq adc xor sbb push (bad) or (bad) push in mov scas cmp jno fcomi adc mov fld jne stos push pop pop lods or adc (bad) loope (bad) fdivrs jo (bad) adc pushfq push sub jne and retq rex.WRXB rex.W cmp out (bad) jge pop push andl lea sbb sahf pop rex.RB (bad) scas (bad) in fistl rex.RB pop xor cmp rex.X outsl (bad) fimul rex.W adc xchg (bad) xor in mov xchg adc repnz fwait fwait mov mov int (bad) or in mov (bad) js iret lahf rex.WR shll (bad) sahf or or pop rex.RX frstor add sarl jbe jle push sbb add cli test jae and inc in je fldt ss (bad) fnstcw pop fisttpl and outsb cmp gs pushq pop or mov mov sub rex.XB push cmc cmp (bad) cltd movsb pop fimul sbb test stc (bad) icebp hlt mov in adc mov push (bad) cmp and (bad) fisubl fcomps nop pop retq mov in (bad) (bad) jbe lret rex.XB mov xor pop mov fdivrs pop or incb cmp in or sbb (bad) fnsave rolb leaveq add push movsb adc (bad) pushq xchg mov outsb and loope insb ja imul xlat pop jge xchg sub (bad) xchg mov push (bad) xor out nop iret test test fistl cmp or fstl sbb retq ja ss mov pop push adc movsl mov and in push jmp (bad) jg fcmovnbe sbb mov (bad) retq ds movsl (bad) mov push mov rex.WRB lret pop mov (bad) jae movabs or jne mov (bad) fcoms test mov sbb int3 repnz pop test sub lret test mov jp iret fimull add jrcxz in jnp mov xor int3 and push scas (bad) je (bad) (bad) adc (bad) mov or mov popfq fcmovne insl push sub movabs sar pop (bad) fmuls add (bad) (bad) rex.WR rex.WXB rex.WRX scas ja xor fwait enterq (bad) ds push (bad) xor fstl or movsb (bad) rex.X mov stos pop rex.WRX mov (bad) outsl test push fstpt lea fsubrs rex.WRX adc ficom test adc jno xor lret (bad) (bad) (bad) sbb or push insb pop rorb retq mov (bad) mov sub imul pop mov (bad) movslq rex.RB lods add je mov rex.R xchg ss cwtl std cmp fimul (bad) jno xchg stos (bad) (bad) cli xchg stos (bad) push xchg rex.RB fs (bad) stc add imul lret jno rex cmp rorb jle movsb cmp mov mov push nop cld jo mov gs mov add repnz popfq mov jl jo (bad) movabs and pop (bad) sarl repz adc nop jno and cli cmp js fwait mov (bad) retq rex.B rex.W rex.B mov movsb pop repz rcll pop roll push scas adc jl fwait (bad) (bad) fnstsw fsubrs scas cmp (bad) rorl add addr32 and push pushq iret cli fldt (bad) or rex.W pop jle xor jl and es jae rorl rex.X mov pop retq jo add icebp or sbb pushq (bad) (bad) test fnstcw loope rex.WRB imulb (bad) (bad) fstpt sub jrcxz fistl xor movslq cmc rex.WRX xchg std pushq fisttpl xor pop out movslq mov movabs cltd (bad) jno mov mov cld push loope scas (bad) mov fildl stos add mov jp fildl iret or stos movslq and test je (bad) cmpsl fcmovnbe outsb cmp rcr sub jle xor iret sub cmp rex.WB jg sbbb (bad) mov rex.B addr32 add sbb jbe (bad) insl jl sbb (bad) xor imul sbb xlat (bad) or xchg gs sub icebp or adc iret jrcxz (bad) ds rex.WR gs insb pop mov fs mov shlb ds rex.WRXB rex.WB xor (bad) xchg jae addb sbb loope rex.XB test fstpt lods mov je (bad) pop retq and xchg sbb scas imul shrb and pop gs movabs adc or sub mov rex fwait rex.RXB cmc iret xor jnp jl sub fcomps jno add push xchg fs loopne icebp jnp in xor fisttpl pop fs (bad) mov xor movsl sahf add (bad) insl retq sub mov (bad) xchg and (bad) fisttpl cmpsl rex.XB (bad) imul rex.RB pop rex.WB sti clc fstpt mov repnz jmpq (bad) (bad) lods adc cmp retq int3 fisttpl sbb iret retq fcoms rex.XB rex.B mov scas lahf jnp mov cmp sub fisttpl jae in mov (bad) cmp rex.RB xchg fcmovnbe gs clc add rex.XB movslq stos or add and or leaveq stos and (bad) add rex.X cmp cmp xchg push pop rex (bad) cmpsb out ficomp (bad) rex.XB clc cli add movabs adc fistl sub (bad) xchg fistl rex.WRXB xor cmc adc jmp (bad) loopne sub cmp push movslq push rex.RXB mov fnstenv popfq push icebp jnp xchg rcrb pop rex.WX in jg outsb fistpl mov pop fsts pop cmpsl push stc mov (bad) mov popfq rcrb add in sbb enterq mov push xor pop fnstsw repnz pop push es or jno rex.WRB imul rcrb xor ss sbb push pushq pop jmpq mov cli ss adc out ja or fstpt push add mov nop fidivrl lret fldt jo movabs jbe push fildl loope leaveq mov adc cmp jae flds jbe rex.RXB (bad) test clc movslq fneni(8087 shrl sbb out fildl jae rex.RB cmpsb repz (bad) sub (bad) push gs movabs loope cmc movslq outsb fwait mov fldt insl and fcmovnbe cltd (bad) in (bad) adc fcmovnbe leaveq (bad) mov sar (bad) (bad) push clc mov xchg ja sub (bad) and (bad) mov fsubrl mov lods ja pop test js jns retq icebp movabs sub fisttpl fwait (bad) leaveq pop pop (bad) (bad) (bad) and (bad) or ja or loope cmp (bad) repz jb fimull rex.X add mov std mov rcr rex.WRX adc clc sub test xchg (bad) insl hlt or fcmovnbe push rex.WRXB adc (bad) lea xchg popq push imul sub adc xchg jo jmp lret movabs cli and sbb movabs cld sub and out cmp addr32 retq pop stos and mov and (bad) pop lods (bad) (bad) pop (bad) (bad) (bad) mulb movslq sbb std andl pop in or xor mov xchg imull rex.WX and adc fisttpll cmp cmpsb push rcll mov jbe (bad) sub or mov sub push test sbb and in (bad) pop out rcrb mov adcb cmpsb fldlg2 rex.RX leaveq stc (bad) jge mov cmp movslq sub pop rcl ror test (bad) iret (bad) xchg rex.WXB test shr adc rex.WXB test pop popfq mov jnp rcl repnz mov jrcxz pushfq (bad) orps loope and cmp (bad) fildl leaveq (bad) sbb movabs callq pop out sbb jl cmp pushq push (bad) imul (bad) adc loop pop push fild (bad) and or out iret (bad) cwtl pop pop cmp sbb xor cmp jns cmp enterq and jbe (bad) test insb out xchg rclb cmp rex.WRB sub push xor (bad) xchg xchg cld (bad) leaveq loopne adc outsl mov cmp rolb mov rex.WRX (bad) testl rex.RX fwait adc rex.WXB (bad) rex.RB fisttpl rex.X fistl cmp push movabs (bad) jmp data16 rex rex.RXB cld (bad) mov (bad) (bad) xchg imul rex.WRXB jrcxz xor retq cmp pop push callq xor rorb pop xlat jo rex pushq (bad) pop test iret xor imul (bad) cld sbb xchg (bad) rex.WXB (bad) mov (bad) std fbld sub pop pushfq out movsb gs (bad) rex.WX jp cmpsl ja mov es xor fildl pop or rcr mov cmp leaveq sbb js fs mov fcomi (bad) insl lods ror cmp and outsl movabs or rex.RB fstpt std movabs (bad) sarb (bad) jae mov (bad) xchg or shlb cld movabs (bad) jg or es (bad) pop rex.RB pop iret gs cmp adc pushq cmp jle jae mov sbb retq (bad) stos xor leaveq jmp push pop loope jp pop imul lods (bad) xchg fwait rex.B movsb or pop (bad) (bad) sub loopne test lods pop cmp xchg adc (bad) mov (bad) xlat fisttpl (bad) rex.X fldt pop mov pop in jns add xchg mov fstps int add (bad) mov jbe rex.RXB or ja movabs lods rex.R xor sarb cmp pop int rex.WB movsb movabs mov jrcxz cli fstl fistpl sbb pop stos rex.XB rex.RXB fucom imul jge fldt int3 sbb (bad) getsec jle js or outsl std fldt repnz rex.XB (bad) xor rex.RX (bad) (bad) or insl rex.B ds rex.W fwait enterq mov frstpm(287 lock mov sbb (bad) callq cmp or or fildl sbb (bad) cmpsb insb fisttpl mov test rex.W repz (bad) or rex.WRXB (bad) jbe push imul cmp rex.RB mov mov cmp outsl sub fstpt push sbb scas xchg mov cs push insb adc xlat rex.WRB fneni(8087 jbe rex.WRXB xchg fildl subb rex.RB popfq sbb (bad) movslq (bad) pop imul rex.WR jg sbb ficompl mov ja xchg (bad) (bad) cmpsb xor push stos test in (bad) adc add pushfq lock or (bad) pop fldcw cmp adc mov movabs (bad) ds fwait (bad) sub mov nop (bad) mov and (bad) push lea hlt sub (bad) push movsb xor rcrl clc rex.B adc add rex.X rex.XB jno enterq mov lock int pop fistpl mov (bad) jnp imul mov (bad) rex.WRX fistl loope pop (bad) adc (bad) (bad) rclb pop mov cmp stc cld xor sub mov pushq mov jrcxz mov movabs (bad) rex.X int3 adc (bad) es rex.X outsl imul mov mov mov (bad) (bad) (bad) adc jnp stc fs (bad) sub mov jg test xor xor jae cs cmp mov push push pop adc mov adcq pop imul rex.WR popq mov (bad) mov pop add or pushfq packuswb mov cmpsb adc movabs mov add or lret test adc cld retq push fucomip mov imulb (bad) adc repnz adc adc fwait ds (bad) (bad) push or fsubl xchg xchg jl addl rcll pop xchg fisttpl pop pop shlb rex jnp ja icebp (bad) fcoms mov xor test pop xlat pushq (bad) (bad) mov jae sti insb push cltd mov add in (bad) jns ja lods pop (bad) jbe out nop sub loope jl (bad) (bad) mov shr push js xchg iret data16 rex.W push xor cmp out sbb mov (bad) (bad) int cmp mov and fldenv (bad) in movslq outsl loope vpsubusb lret xchg hlt (bad) (bad) and shrl idivb (bad) jbe insl gs movsb lahf outsl or gs mov in xchg scas or iret jp lea push pop adc mov xchg add xor or out lahf mov xor mov insb rex.WRXB cmp xor jne cmpsl fimul stos sub sbb sbbl (bad) jle (bad) jp and xor xlat fwait (bad) add jmp push rex.B mov (bad) pop rex.X jle jg push xchg (bad) sti rcr sub (bad) repz vpminub lods rex.XB movabs fimul popfq in addr32 jae rex.WB repz sub lods iret (bad) (bad) jnp sbb lret xchg loopne rex.RXB es movslq (bad) adc pop rex.WR mov (bad) retq fwait imul rcr sti pop cmp icebp sbb movsb xlat jg data16 (bad) push sbb cmp and (bad) jmp lahf adc pop test (bad) jae adc in and xor out and (bad) jnp popfq iret fildl adc xor (bad) rorb movabs mov push adc (bad) pushfq fcmovnb cld cmp push pop sbb sbb movslq insl out (bad) in lea sbbb (bad) push in mov callq scas lock and loopne xchg lods (bad) mov fcomi push pushq cmpsl or fnsetpm(287 jmpq rex.RXB test push mov mov repz lock int adc fwait loopne and pop (bad) cmp pop lret sti (bad) add (bad) sbb shufps mov mov pushq xchg out movabs push sbb (bad) push (bad) (bad) xor scas ficoml loope (bad) push pop and jae push icebp jb rex.WR insb fxch (bad) loope xor int3 (bad) push (bad) cmpsb nop or mov addr32 pop push leaveq ficom pop in iret pop repz mov cltd rex (bad) add (bad) xchg cmp push xlat mov (bad) scas sbb jmp mov movslq iret push xchg sbb xchg std jno cwtl mov fwait loop mov and (bad) add xor add mov xchg retq push (bad) mov incb stos mov mov mov shlb fucomp xchg movslq cwtl xchg rex.WB pop (bad) jne (bad) xor add mov adc stos out pop push mov out mov retq movl (bad) scas jg mov sub rex.X mov push movsl fcmovne jb addl cmp xor jo (bad) mov movslq or or out pushfq test int pop cs mov mov ja andl sbb jnp mov sub xchg outsb (bad) jo or sar fistl (bad) ljmp movabs repz push ja nop fcomp (bad) movabs rex.WRXB fsts xchg popfq (bad) pop jnp mov fisttpl rol cwtl sub lods pop cmp je fwait rex.RXB fstpt adc (bad) cmp jrcxz lcall mov insb (bad) (bad) jae in jno lret lahf movabs (bad) cmpsl jbe fsts fistl mov stos (bad) outsl (bad) out xor in mov add cmp outsl cmp pop adc callq (bad) stos sub and xchg xor (bad) xchg (bad) insb in lahf mov mov imul insb mov xor (bad) fadd sub (bad) or int pushq (bad) xchg and stc xchg mov retq (bad) xchg fucomi jnp (bad) or in fimull movabs cli pop (bad) pop lods mov mov test fcoml mov out jg test rol mov push fcomps pop xchg jg rex.RB rex.WX push mov fucomi rex.WR outsb fistpl or sub xchg pop fidivl jp out push callq (bad) mov (bad) lods sub jno bnd sub jnp pop mov and iret mov xchg fstpt out or or rcrl (bad) movabs jo (bad) stc shlb fisttpl getsec rex.WRXB pop push fisttp xor mov pop fistpl sar imul (bad) iret scas mov cmc sbb pop pop (bad) rex.WRX insb fisub fisubl je (bad) cmp fildl (bad) gs (bad) jg out rex.WX movabs jmp (bad) or jle and (bad) rex.WB pop rex.WR lret and sti or (bad) jp test imul or rex.WR xor rex.XB in popfq add mov mov cmp loop jrcxz fnsetpm(287 loopne sti xchg push stc fisttpl (bad) in fcmovnbe mov mul jnp imul (bad) (bad) out or loopne js insb jge test rolb adc xchg lea mov (bad) stos lahf loop xor es adc adc mov stos rex.X insl mov xchg jrcxz int hlt rex.WRX cmp shrb (bad) imul jo retq push xchg rex.RX (bad) and pop pushfq xor imul cmpsl fcomi fmulp gs rex.W rex.WXB rex.RB imul retq lret rex.XB popfq and push sbb (bad) and pop pop rex.X adc pushfq adc cmp sub mov mov fcmovne jo cmp movabs (bad) in (bad) movslq pop outsl push callq pop xor fwait (bad) rex.R sbb jrcxz mov movsl pop push rex outsb out (bad) adc xor push rcll jo mov adc rex.WB add mov test mov rcl mov addb or or (bad) roll fucomip and out (bad) cmpsl (bad) rol add push loop mov scas fadds ja test (bad) or jne test xor es adc adc lock push retq pushq out (bad) add fisubrl cmc cmp pop je (bad) movabs rex.R rex.X out sbb mov mov jnp mov (bad) jge mov movsl push sbb pop (bad) imul stc mov push mov jno cmp mov push js pushq adc lret clc sub jae outsb (bad) addr32 ja stc movabs xor in push stos iret insb or (bad) sarl fisubr pop push icebp outsl and cli (bad) push or pushq jmp jrcxz rex.R mov jl int3 out pushq fwait je lea repnz jb fwait mov sbbb stos pushfq or movslq (bad) mov test in jp (bad) in stc rcll adc roll fldcw pushq rex.WR sub push andb xchg enterq mov mov cmp (bad) sub (bad) movabs jrcxz std xchg rclb fmulp iret rex.RB scas (bad) cmp cltd mov out sub sbb mov (bad) mov imul (bad) lods cmp in movsb xchg xchg jl push mov mov cmpsb adc mov rex.WRB mov outsb scas movabs sub jle lods je or sub scas fisttpl mov (bad) movabs adcl (bad) mov (bad) fildl outsl test lods pushq push pushq rex.B rex.WRB subb jrcxz mov xor cs rex.WR cwtd (bad) (bad) insb movsb xchg xor (bad) lahf pop or loope (bad) mov cwtl rex.WRXB jrcxz fidivl mov (bad) mov jmp (bad) loope scas xchg (bad) pushq nop jle fistpll xor imul jle push sbb fstpt out (bad) fstpt movsb xlat incl rex.WRXB rex.W jnp,pt xchg rex.WX ds mov pop adc sahf pushq sarl cmp ss mov push add rcrl outsl jl jnp test xchg (bad) xchg jb int3 adc mov sti hlt insl in sub (bad) cwtl cmp xchg jnp scas int fistl (bad) push jrcxz (bad) fistpl movabs rex.WRXB and push cmp imul jmpq je rex.WB (bad) rex.B test (bad) nop fsubrp enterq js cli xchg imul (bad) adc jg stc jle (bad) sbb retq fildl rex.W outsb add (bad) (bad) or adc jnp js je ds cmc sbb (bad) mov scas test sbbl xchg push add in rex.RXB fldt in (bad) adc pushq pop rex.RB and pop jmp iret pop jge xchg mov movabs retq xor fadds (bad) lods xor ss (bad) retq ss fldt js rex.WX rex.RXB jb fistl pop adc callq movabs fildl push std rex.B stos (bad) fisttpl orl push adc xor sbb mov cltd xchg sub (bad) (bad) or lahf pushfq int movsl (bad) test rex.B fsts sub (bad) adc in xchg mov sub in (bad) leaveq push je,pt mov imul sub xchg cmp hlt rex.RXB out rex.B mov fstpt enterq fildl mov movsb insb or pop push cmpsb add repz add pop jge push vpsrlw ja cmpsb add fistl (bad) push cmp cmp sbb repnz stos imul pop cmpsb jnp lea xor repnz ds cbtw adc (bad) fildl jp pop mov mov mov add and retq rex.X rol cmp (bad) loopne mov jnp lock or je rex.B rex.WX scas (bad) sbb rex.WR fisttpl (bad) pop jmpq rex.WR es rex.WRX fidivrl icebp xchg outsl cli and cli shll lahf sbb (bad) test fs mov xchg pop scas icebp pop jbe sub rex.R test sbb mov (bad) (bad) adc pop lret push imul rex.WB and jne pop mov rcll (bad) and or mov (bad) (bad) movsl subl (bad) incb out ss pop (bad) (bad) rex.WX ficompl sbb negl and test lret jrcxz movabs push cltd sbb pop cltd sub je (bad) pop cmp jp,pt sbb (bad) xor and popfq jbe imulb gs xor jbe movabs (bad) sbb and jle (bad) cmp shrl repz movb cs sub cmp jo in mov xchg sbb mov movl (bad) test (bad) lret insb push iret xchg out cmp adc (bad) cltd notl fadds and rcrl sub adc (bad) mov push push loope push adc mov jns pop pop adc rex jg mov (bad) in (bad) in push stos (bad) rex.WRXB add mov lods xor scas idivb (bad) and test pmullw and fidivr jle (bad) pop (bad) sub jg xchg hlt xchg adcb jl push (bad) clc stc mov (bad) es mov stc rex.RXB and sub sbb sbb mov nop (bad) cmp (bad) ss lea (bad) loope cmp (bad) (bad) pop (bad) or clc (bad) lea xorb push (bad) mov mov pop callq mov xor (bad) lods test (bad) repz lret jns rex.XB cs (bad) jle xchg (bad) (bad) repz xchg (bad) rex.WB lock pop outsl mov and lea stos lods mov es mov fdivr rex.W loope mov xor and push fnstenv mov mov and or rex.W lret pushq pop test lret (bad) (bad) fisttpl (bad) (bad) sti xchg jns iret stos jp,pn jnp fxam clc icebp (bad) push enterq mov orl sbb stc psubusw sbb xor jb (bad) xchg (bad) push mov fwait movabs rex.WXB lret fnstenv xchg mov xchg ja push fisttpll cld fsubp rex.WXB pop pop insl xchg leaveq cmp xchg rex.RXB mov (bad) xchg movabs mov pop xchg rcrb mov out out js in insl sub movsl jbe cmp rex.R loope cmpsl lods loop rex scas (bad) cwtl je rorl loopne roll sub js data16 (bad) (bad) sub pop (bad) xlat or (bad) (bad) rex.WB fdivl add (bad) sub out jo insb push sbb xchg rex.XB retq rex.WRXB or test pop cld or insl pushfq add lock pop (bad) pop outsb xchg shrb out add xchg test mov fdivl add mov push movabs adc outsb test xor pop in mov (bad) rex.WRXB jg cmp sbb rex.WRXB adc retq rex.WRX mov (bad) mov jbe xrelease sub cltd (bad) loope and (bad) (bad) enterq mov retq iret xchg and outsl cmp (bad) movslq test sbbb push mov fwait push add mov mov or mov jg lods adc rex.WR xor test mov hlt enterq adc movabs (bad) cmp (bad) lods (bad) jl jg xor notb (bad) imul jl (bad) (bad) (bad) shrl jb xlat cld rex.WXB mov lods (bad) mov pushfq adc (bad) sub insl imul adc or imul and (bad) jb or test xor xchg or (bad) scas xchg adc fs cmp jg rcrl ror fbld fnstenv push movabs xchg push sti pop cmp ja icebp push imulb sti clc adc or (bad) jb lret test add mov retq es mov fsubrs mov rex.WB cmp retq sub mov add loop push or adc fwait (bad) or movabs movl cmpl pop sbb rex.B lret shrb xchg or xchg cmp iret mov (bad) rex.WR mov ss (bad) in push rorb sbb jno lret fistl imul enterq imul sbb sti add fldt lret (bad) fwait (bad) xchg movsb incb (bad) outsb rex.XB fcmovnb or mov fldt mov xor stos in cmp lea mull pop (bad) fcmovnu insb (bad) fimul movslq mov mov and jp (bad) xchg rex.WX pop jnp push jo rex.W loopne adc je adcb rex.WR pushq mov and sub mov cmp sub (bad) (bad) je xchg or jle mov and ds jb in (bad) leaveq mov add mov (bad) enterq sahf std rex.WRB rex.B rcr jp retq xorl (bad) pop push pop or rex.WX (bad) imul fdivrs leaveq mov (bad) rex.WR (bad) (bad) imul adc movsl xor (bad) push mov (bad) fldt (bad) mov fistl rex.WRB (bad) movsb cs jmpq cli movabs sbb xchg and xchg movsb mov add mov jl nop (bad) fcmovne jne jb fldl pushq push fadds cmp rclb and adc (bad) cltd or (bad) rex.WR fcmovnbe mov orb (bad) test (bad) fldt sbb test xor or add stos (bad) or je jb roll (bad) int rex.WRXB or lret loopne rex.XB cmpsl (bad) mov (bad) in iret cmp fildl fistp mov lock sbb in incl adcl jl mov (bad) lods loope es ds js repz fidivr cmp xchg fisttpl (bad) sti push push iret sbb movabs lea fxch (bad) mov rex.WRB adc mov cwtl adc mov fwait (bad) scas callq sbb (bad) mov sbb jo mov mov movabs pushq pushfq xchg sub fistl sbb pop rex.RB mov cmp data16 and (bad) stc (bad) cld jp sar mov and imul add mov ja push fstpt retq adc pop mov cmp mov rex.R in (bad) insl cld movsb rex.WX pop sbb movabs cmc mov jnp sar movabs clc (bad) popfq mov mov xor xchg mov (bad) insb fildl add movabs rex.WRB lret push rex.WRX adc (bad) jnp xchg sbb fisttpl xchg in rex.X and rex.WRXB push leaveq hlt rex.R mov xor subl sbb (bad) (bad) sbb xlat mov xchg pushfq (bad) callq jge (bad) out sbb rex.WRXB sub push rolb fsincos leaveq (bad) ja pushq push rex.WXB (bad) vsubpd (bad) xchg repz jb or adc movsl xor sbb rex.RB out (bad) fwait adc stc xor push sbb test jle (bad) and mov ss imul pop shrl or je (bad) cmpsl and adc movslq pop cmc (bad) test jo andb movabs movabs lahf xchg (bad) test sti icebp outsb cmp sbb (bad) out push pop rex.RXB fs mov test rolb sub rex.RB lock pop xchg loopne cld repz sub in ficompl push (bad) ds or adc rclb outsl imul xlat fstpl mov iret push xor iret mov insb push jp mov or mov sbb fyl2x in test sbb xchg int sbb (bad) mov xchg (bad) loope rex.B (bad) and stc and xor xor pop fldcw addl and mov (bad) xchg xlat loope cltd mov negb pop xchg or movabs sbb rex.WXB cs pop sti and xchg mov and scas adc (bad) or (bad) mov (bad) rex.WX xchg sub rex.WX movabs clc addr32 mov outsl movabs jp pop rcr xor mov movabs jbe rex.WB and lret sarb (bad) in and cltd pop lods (bad) ja cwtl fstpt push adc fldt xchg callq xlat fildl jnp mov rex.WR mov scas ja pop and fsubp xchg fildl jle retq or (bad) (bad) (bad) xor mov mov (bad) mov movabs cmpsl mov (bad) sbb fcomi rol test (bad) and xor jae fstpt outsb pop je mov jp test and jne add rclb gs push fcom rex.WRXB mov pop push jl mov addr32 jno lock rclb (bad) (bad) (bad) (bad) or xor ja out sbb out lahf adc and xor pop movabs gs sbb nop (bad) add fcom retq (bad) xchg movabs push mov (bad) jb jns mov shlb pop fcomi xchg mov ss vmaxps pop cmp cltd push int3 cs (bad) cmp retq sbb es cmp mov push (bad) fcmovnb (bad) fcomps pop adc cmp nop lods mov mov xchg rex.WRX rex.WRB pop push mov mov or pop push mov cmc pop xchg pop fisubl (bad) (bad) callq (bad) jnp rolb cmp (bad) outsb pop in shll adc cltd pushfq (bad) adc fisttpl fsubl fstpt adc or fxch rex.XB mov test movabs rex.RXB xchg sahf sbb loopne lret push incl add pop jae outsl out insl fcomi movabs fsubp int xchg mov and movabs (bad) out ja (bad) in mov mov rex.B rex.WRX rex.XB (bad) fwait sub jne sbb cmpsb add (bad) stos movslq in (bad) adc icebp out repz pop mov sahf pushq rcrb push movsb jp jne,pn or xchg rex.RX push data16 jb mov add jle push or rex.X lahf (bad) retq xchg rex.W rex.WXB movslq pop cmp sti (bad) pushfq mov pop leaveq and fnsave (bad) adc movabs rex.WX fwait pushq xor xor (bad) int or int3 (bad) stc mov pop fdivp (bad) rex.WR cmp sub sbb callq imul lock rex.RXB hlt movabs ss mov rex.XB sub mov xorb xor (bad) callq push rex.WB frstor (bad) add jb rex.WXB mulb (bad) jl xchg in or xchg pushfq rex.WRX pop std imul xchg orb (bad) or mov jmpq xchg sbb pop (bad) shrl mov lret add add mov scas cmp andb (bad) mov jae es stos imul sbb imul rex.X rex.R stos sub pop cld sarl sti rol sarb xchg mov fcmovne or jrcxz fstpt retq mov out (bad) (bad) rcll pushq fnstsw jmp mov (bad) add push loope mov jbe clc pop add in idivb mov (bad) lods frstor fildl xchg out jnp test and vpavgb fildl (bad) ss add rex fstpt pop jrcxz scas or sti lret stc sub (bad) (bad) mov rex.W lods mov testb int es sub adc pop mov fcmovnu or and (bad) or add jns lock jne (bad) (bad) mov fmull xchg es shrb (bad) or fiaddl sub pop mov jae jl cmc (bad) rex.R mov adc jns retq (bad) xchg mov (bad) push jne,pt (bad) jge leaveq sbb es cmpsb rex.X (bad) (bad) cmp test (bad) jle rcrb movslq mov (bad) adc sbb fcmovnbe jne xlat pushq cmp shlb lods (bad) movsb pop retq add movabs out jnp movsb jne jle fistl mov hlt pop (bad) test jmp pop vunpckhps xchg or (bad) rex.WXB fcmovu adc (bad) leaveq lock outsl (bad) cltd rex.R mov jp jge pushfq xor je xchg fstpt rex.WB fs mov shrb xor sbb xchg cwtl (bad) mulps pop outsl (bad) lret imul idiv movsb loopne pop rcr adc lret fcmovnb (bad) mov jmp sub (bad) cmpl fimull xchg and ljmp movslq or mov rex.WB or scas and xor pop sbb (bad) adc test jp pushq xor rex.WXB lock stos fisubrl movabs xchg push (bad) jnp pop pushq cmpsl xor adc xor rex.RX gs sbb icebp rex.WX rex.R mov fnstcw out fldcw mov sbb xchg fildll in xor out mov sbb (bad) imul sbb sub (bad) or (bad) std (bad) mov retq rex.WRXB cwtl rex.WRX rol and adc sub xchg test je int (bad) xchg shl ss or rcl in loope (bad) xor cmp faddl iret cwtl (bad) mov xchg rex.WB shll sub mov mov cld mov mov mov ss xlat mov rex.XB sub adc rex.WRB jno mov push adc xor loopne lret sti movabs rclb jne add or rorb (bad) js sub scas out mov (bad) fimull (bad) cmpsl xor std movabs out (bad) enterq sub (bad) stos sahf repz xchg adc lea sub lea or sub fwait pop adc jno pop std cwtl pop (bad) add out (bad) mov (bad) test in mov (bad) pop sti lods (bad) (bad) addb push fisubrl iret std push rex.WXB je rex.W sub push in rorl adc icebp (bad) push xor scas fld enterq data16 (bad) lods adc js and or push enterq mov add (bad) movslq (bad) out (bad) je cli (bad) sbb and or movslq movabs xchg loopne or repz ljmp and sbb movabs xlat (bad) (bad) pop push jp shll xchg mov stc test stos addr32 and mov sub rex.W pop loope (bad) or xor fldcw (bad) gs (bad) (bad) push (bad) xchg out ror je jl lods movabs (bad) push or stos sbb jle (bad) pop fiaddl movsw pushfq (bad) rex.WB push xor repz rex.RX fist push hlt mov cli stc imul outsl addr32 mov push cmc (bad) sbb pop and fwait xor push sbb hlt mov cltd (bad) lcall (bad) je fwait jb (bad) (bad) (bad) jae xlat popfq rex.WXB push fcoml xchg sub push outsl sti roll cwtl xchg mov cmp sti add or push adc (bad) retq jp int ds and pushq and pop push mov adc sbb (bad) clc stos lret pop xor pop (bad) ss jnp pop (bad) jne mov sahf sub and (bad) rex.WR movabs sub out fwait adc pop (bad) rex.WXB clc std rex.RX retq cmpsb in cmp insb push push sbb (bad) or pop pushq xchg andl ficoml rex.WX fcom lock cs callq adc xor lock stos push enterq cltd gs or test mov cwtl adc pop (bad) cmp cwtl (bad) (bad) mov fildl sub rcrb cli in jo hlt sub jmp cmp cmpsl fcmovnbe int mov fildl mov rex.WXB cmpsb xor fistl mov push mov push rex.RXB in fldt fs movsl scas cmp nop xchg test pop or jmp rcrl and sbb cli rex.W xchg stos out push push mov adc (bad) (bad) sub fwait mov (bad) (bad) xor mov xor int sbb retq sbb or push jae sbb cmp fdivp pop or xchg jnp pop addr32 pop cs push (bad) stc insl or and cs flds ficompl jnp rex.XB jge push (bad) pop (bad) fmuls jle jge pop sub add xadd test adc jp sbb jns in rex.XB cmpsl pushfq fs cmpsb lods (bad) pop rex.XB sbb mov jmp (bad) insb rex.WXB (bad) (bad) adc int3 mov push fidivrl sbb jmp out mov push xchg decb scas int3 rex.XB xor push sahf xlat mov add xlat push pushq loope (bad) xor mov jp sbb jns iret cld test (bad) in push sbb movsb or mov sbb (bad) je mov (bad) pop (bad) xor jae add and mov movsl ffreep fildll jno in and rcll outsl vmwrite out callq (bad) (bad) popfq mov cmc flds rex.RX (bad) (bad) sub and sarb retq mov mov fistl push adc or jmp movabs fbstp lret rex.WXB rex.WRB scas (bad) rex.R or and (bad) test imul in xchg sub clc movslq add xor sbb (bad) add (bad) sbb add jnp stos push adc pop pop adc (bad) cmp (bad) xlat mov movabs xchg or fwait sbb cmpsb cli push js lret repz push cmp xchg (bad) (bad) rex.XB cwtl push jb (bad) mov cli cmp push mov roll xor or lret mov xlat sbb xor xchg (bad) push roll (bad) mov (bad) jle rex.RXB repnz pop or nop sar movabs mov xor ja outsl pushq (bad) xor (bad) pushq adcl cmpl lods push xchg cmp (bad) neg out cmp jns rex.W imul rol sub jns (bad) stc lods jae movabs enterq (bad) loope imul cmp cmp addr32 add sub fistl and shlb (bad) (bad) push push mov add rex.X (bad) pop and ds sub rex rex.XB xor xchg jno movabs mov (bad) (bad) in (bad) lock fs es xchg retq (bad) rex.WR loopne scas (bad) out pop or and cmp or in (bad) push (bad) rex.WXB (bad) loopne (bad) fildl rex.WB sub mov fstpt ss fcmovnu jl fisttp stos scas fildl icebp (bad) ja,pt and sbb pop outsb mov xor mov rex.WXB sbb mov pushfq jp pop jae loope add xor fwait loope mov insb jnp loopne hlt test jno pop enterq (bad) (bad) jb jnp (bad) (bad) (bad) push hlt outsl add fidiv mov xlat rex.RX sub rcrb jne sbb pop int and and adc xchg mov add push cs (bad) xor and mov psubq mov cmpsb (bad) addr32 add (bad) pop fnclex or xchg mov ror sub rex.WRXB xchg in in xor lods shrl xor push in clc mov rex.XB rcrb insl (bad) mov fs mov stc pop in mov pop nop add addr32 stos mov xchg push push cmc test loop out imul mov hlt cmp fnop (bad) (bad) ficoml ftst jns (bad) (bad) sub jbe xchg mov add out jae push xchg scas movslq and mov (bad) rcrl mov sub xor cmp or rex.B adc (bad) fwait rex.WRXB cmp scas (bad) pop pop (bad) add callq mov cltd mov (bad) adc ds rex.WRXB stos (bad) push mov add subl subb pop mov ds jnp cmpsb jp mov outsb adc rex.B gs (bad) fisubl in (bad) (bad) fisttpl sbb xor mov insb jne mov xlat movsb jnp mov (bad) jg cmp rex.WXB rex.R add push mov xchg (bad) mov shrl pop cs mov xlat out cmpsb shrl (bad) fdivrl and data16 cltd add (bad) jb and fistpl icebp movabs mov fmuls adc mov (bad) (bad) add lock sbb (bad) frstor orb cmpsl rex.WR in mov in pop mov addr32 sbb cmc insl hlt lret or or mov in gs scas je rex.WXB (bad) rex.WB ss xchg adcb (bad) fisttpl movsb (bad) (bad) jo pop out add mov mov cmp push adc out mov jb xchg fist mov pop sbbl movsb fninit insl or mov sbb in rex.WB movabs fisub (bad) fisttpll pop (bad) cmp jnp xchg rex.RX nop cwtl pushfq jnp or and mov adc fcomi xor jnp scas jb (bad) outsl (bad) and pop rex.WXB rex.RB cmp or iret clc mov lods fcmove cltd (bad) stos (bad) rex.XB rex.WX retq imul lcall insl add cli lret sbb adc fsubrs fisttp cmp xchg cltd callq (bad) movabs xor sti push stos fld fldt rclb and fninit nop pop rex.X adc in adc test imul fcmovnu movsl cmp (bad) fnstcw xor test add in rex.WRB mov mov (bad) lea sti fstpt cmc loop adc sub insl pop je fisttpl and sbb add (bad) xor ds out movabs sub jrcxz retq lea (bad) sti fisttpl outsb pop imul mov rex.WRB mov rex.XB jrcxz xchg fwait (bad) push ds in fcmovnu cmp sarb cli scas (bad) scas adc cmp and mov fldt retq (bad) sti jp rorl pop (bad) xor test pushfq scas mov xchg rex fwait cmp jnp (bad) xor (bad) cmpsl scas (bad) cli mov (bad) nop add xchg loope fldt mov fxch push addr32 mov (bad) imul fsubs sub (bad) push movabs fistpll add rex.WB jae loop dec (bad) in add icebp sbb jnp and fninit jns add cmp fs xrelease jmp push (bad) cmpsl fldt movsl out xchg rex.WR (bad) out mov rex xor gs rex.WRB push jnp cmc nop mov test push push rcrb rex.WB (bad) retq add cli xchg or cmp rex.WRB mov pop mov mov adc rex.WRB fcomi (bad) ss fcompl sub and (bad) jbe rex.X and test jl jnp rex scas rex.WR cmp sbb icebp xchg enterq mov push cmpsb lahf stc xchg cmp (bad) push sub (bad) retq in es stos outsb (bad) pop addr32 xchg movsb addr32 cmp mull pop and sbb bnd rex.WR pop pop xchg imul fstp mov (bad) rex.WR mov lahf add add stos sub fwait lret add rex.W sbb test mov pop addr32 stos js addl push xchg fisttpl add rex.R sbb data16 movabs enterq jnp cmp jno fistl (bad) rex.WRB rex.WB outsl fisubl adc rex.B cmp sbb xchg jb pop pop xor (bad) nop rex.RXB fwait xchg lret rcrb push retq rex scas sbb mov imul shrl movabs and ficompl pop (bad) rex.WXB xchg std movabs cmc in outsl (bad) rorl outsb add movabs es cmp cld and fs lods iret (bad) jnp pop push adc movsb retq mov rex.WRXB jmp fildl and xor out xchg fcmovnu push movabs rex.RB loope pop jp fidivl fwait pop pop xor rex.WRX (bad) fistl push mov (bad) (bad) out cmpb ds fwait mov jle fcmovnb xchg (bad) jno cmc sub js ficomp rex.X sbb (bad) fcmovu rex.WRXB iret insl adc jae rex.B sahf clc nop cmp ja fiaddl lods fistl je pushq leaveq push lret in jae mov rex.XB (bad) xchg cmpsl stc push jno lret mov add loop adc (bad) (bad) jge (bad) cmp neg movabs rcrl xor fcmovnbe in mov sub or popfq or jle outsb clc xor ss pop out push leaveq loop pop ja rcrb mov (bad) pop addr32 (bad) pop (bad) mov xor or movzbl cmp int je rex.XB (bad) flds cli (bad) jno lahf cmp cmc add jle or push pop fucomi rol sub gs rex.X add pushq test fldt sbb cmp pop mov imul adc adc xor icebp or cmp (bad) (bad) out rex.WR pop (bad) fstpt (bad) and jge mov fistl sub pop push add jb xchg (bad) pop cld jmp xchg or lahf cmpsb addr32 out sub pop xlat mov je sub cmp (bad) jmpq insb pop rex.WR cmp f2xm1 fisttpl movsl adc (bad) (bad) rex.WX (bad) (bad) adc rex.XB push (bad) ja lret and rcl fwait jge orl rex.RB in xchg jnp retq fs sbb push lock out movslq js xor add (bad) or cs mov pop sbb and cmpsl pushq (bad) rex.W xor lea movsb repz js jno callq fwait add fwait xchg sahf clc and enterq rex sbb int rex.WRB xchg xor cld xchg push (bad) adc (bad) push jns mov jg mov mov xchg nop mov adc lret mov in rex.WX jl or movsl xchg sbb fmuls xchg or pop scas mov mov adc jns mov pop stos data16 callq jg or out rex.XB movabs je (bad) test clc stos push jl rex.X jo pop lods xor sbb imul (bad) fstpt (bad) pop (bad) adc stc (bad) hlt out sbb add js adcl (bad) (bad) sbb (bad) (bad) mov rex.WRXB fwait adc sub rex.B in jl (bad) fisttpl and xchg imul mov mov xchg int (bad) rex.WRXB fwait retq (bad) xchg ss sti (bad) test sub sbb mov jl rex.RXB sbb loopne imulb mov mov jae (bad) mov int out fwait in (bad) (bad) xchg fistpl xchg rex xor pop pop cmp popfq addr32 je rex.WB rex.B jle negb clc cmpsl cld imul push lret sbb scas rex.R sub mov jg sbb movl sbb (bad) lock fwait loope insl (bad) (bad) and xor xchg jmp (bad) sub mov fwait rex.WX sub adc xchg lret (bad) add fstpt push movsb fisttpll repz mov mov fnclex xchg (bad) adc rex.WRB fs adc rcrb (bad) pop add cmpsl xlat xor jno and pop mov loope icebp lret mov (bad) add lods mov jns sub adc fimul hlt or sti mov fidivrl push mov iret (bad) repnz jbe pop fild pop movsb lret fimul pop nop jp or (bad) sub pop (bad) pop xor lock or int3 pop xchg sbb xor js movslq sub (bad) rex.WX jl mov mov (bad) sbb roll push (bad) mov fsubl push in jb sti pop sbb pop or xchg push mov fisub sbb add fidivr jno jg (bad) cltd nop rcrb mov push (bad) gs (bad) imul mov jb insl in scas sbb jns retq xchg in mov jmp mov mov lret and (bad) pushq lret out in scas pop shr xor cli (bad) add adc jp pop movabs cmc pop sbbb (bad) jmp stos mov outsl push and cmp clc and lods sbb icebp adc sahf adc in sbb lret retq xlat rex.XB rex.WB lret xchg cmp jmpq (bad) test addr32 add (bad) pop add sub iret or movabs sbb push sbb and fstpt add movabs xchg push add or jae out add jnp push cmp xchg mov fldenv movsb pop add (bad) xor push sub mov (bad) push lahf (bad) xchg rex.X mov test fildl scas or adc jne or (bad) adc cmp add mov (bad) pop out (bad) jns out js (bad) je (bad) nop mov fldt ss rex.XB out sarl or adcl mov (bad) push fldt sbb (bad) cmpsb jbe (bad) (bad) jae popfq ficompl push rex.WRXB and (bad) xchg jge push fldt jnp or sbb retq stos xor pop mov movabs mov jae (bad) adc repz cwtl sbb (bad) sar outsb ja lods cmp mov xchg xchg xor stc (bad) fldt or sub rex.B jb mov (bad) movabs sti mov and jrcxz retq fstps (bad) and movabs gs xchg rex.WRB jl pop push fcmovnbe hlt decb (bad) (bad) lahf fsubrp cmp (bad) fildl in xchg add push pop test cmp mov (bad) jb (bad) jns rex.WR mov pop cmp and retq (bad) push out orl (bad) push ja (bad) xchg xchg sbb fildl rex.X (bad) push imul sbb push idivb (bad) movabs (bad) gs pop lret cwtl rex.XB add sub imul jae clc fldt cmc adc and xor mov add int3 fistp mov cmp imul (bad) pop movsl xchg sub in fwait imul ljmp (bad) cmp or pop cmp xchg rex.WRX fs and xor orb lea leaveq repz sub fbstp xor ss add push imul leaveq sub fistl add rorl and mov fldcw lods scas (bad) fcmovne cld fidivr insl sub mov xchg lea mov adc pop cltd out ja (bad) shlb fildl es rex.B out xor jle sub movabs ss (bad) push pop add mov push push movslq pushq cmp cld jle rex.R in mov pushq sbb insb jnp jno push mov mov fwait cld fs and push (bad) outsl out movsl mov (bad) fisttpl gs nop jo jnp repnz rex.R (bad) push and fwait (bad) stc mov mov (bad) loope mov jb and push icebp rex.RXB imul (bad) and adc scas rex.RXB cmc mov hlt test movsl pop fidiv (bad) (bad) xor pop cmpsb adc rex.WRXB pop (bad) (bad) callq (bad) jp iret rex.WX int xchg mov lea sti xchg pop add cmp jo mov out mov sub jp std xlat or std jnp fnstsw loop faddl pop or jrcxz retq es push (bad) shlb mov pushq fidivl stos (bad) rex.X rex.WR mov incl nop (bad) fldt sbb leaveq scas jo fisttpl xor and (bad) mov sti ficoml in (bad) cmp rorl es xor (bad) sub hlt mov movabs sbb pop out rex.WB (bad) (bad) push std ss push in (bad) jbe xor retq rex.WRX pop cmpsb xchg jrcxz pop jnp or movslq mov fcomi and scas pop mov rex.XB (bad) fs (bad) cmp adc xor (bad) jno (bad) fstpt nop sub xchg or out test mov add addr32 lods outsb loop,pt fwait leaveq rex.RX rex.WRXB adc movsl mov and insb add callq push (bad) jae (bad) int3 adc mov insb test pushq fnsave movabs pushq fwait ljmp sbb (bad) pop sub xchg mov mov out add adc push int and jnp rex rex.WR (bad) (bad) (bad) sbb rex.WX jl push ds notl sti or xor fcmovnbe (bad) mov jae std push push hlt lods jne fisttpl or pop sub adc cmp fldt and (bad) fadds (bad) cmp out cld push out mov ds fs rex.WRB cmp sbb add xor mov hlt pushfq xor mov (bad) outsl stos jbe pushq or mov add pushq andb mov mov sarl adc out (bad) rex.W je shrl addr32 gs jae cmp mov push adc jmpq pop fwait sub mov pushq fisttpl jl imul xchg (bad) adc out lock push leaveq orl cmp sbb sub adc int3 test adc xor sbb lods jbe (bad) ss rex.RXB popfq jb lret jmpq hlt xor jnp fucomi mov std imul (bad) dec and cmp sbb rcr xchg insb sbbl and cmp (bad) and rex.WX and scas (bad) mov mov (bad) (bad) (bad) push cmp rcll xor insl mov test rex.WX outsb mov movslq lahf vpcmpgtb cmp mov pop lods rex.XB movsl rex.X adc std and popq xor movabs push (bad) imulb test insl movabs mov adc retq roll addr32 sti movsb in mov (bad) lahf rex.WX xchg xchg xchg push loopne loope cmp rex.WRX jrcxz cmp ss (bad) sbb lea punpckhwd retq gs rex.WX or mov cmp sbb xchg pop int3 xchg xor cmp std movabs pop jl fistl cmpsl cwtl xchg sub cmpl xchg stos rex.X sub fldt mov mov rex.X repz fnsave stos rex.R fstpl cwtl (bad) fstpt (bad) fistl retq push mov mov (bad) pop jle jge mov cmpsl and in mov subl cli in or iret jns loope lock sbb cmpsb (bad) or loope stos mov fnsave xorb jge fldt pop enterq test stos retq pop pop test or sbb add not ficom xor (bad) and fmuls pop sbb sbb or jle mov (bad) out mov (bad) rorl or rex.WXB adc es cmp in (bad) repz sti pop lahf mov jmp roll pop sbb lea mov (bad) xlat adc repz out gs (bad) adc (bad) (bad) mov insl push (bad) retq addr32 push movsl lret scas rex.WRB (bad) (bad) rex.WRX pushq push retq or movabs xchg mov pop (bad) ds (bad) xchg jnp adc rex.WRXB xchg fistpl pop sub (bad) mov (bad) fucomp (bad) cmpsl (bad) outsl rex.WRB pop mov int3 add (bad) (bad) shld push lods pop (bad) or rex.WRB rex.RX fdiv xchg rcrl mov fucomi (bad) cmpsb (bad) (bad) (bad) shlb (bad) pop xor mov adc (bad) jmp mov in jnp js mov jnp (bad) pop (bad) scas fnstsw push and rex incl cwtl push (bad) push movslq icebp fldt shrb pop (bad) insl movabs jp mov movabs pop and imul cmp fiaddl lock pop xor mov gs jno rex.XB rex.XB xchg xchg push pushfq icebp xor repnz cltd adc (bad) pop retq sbb (bad) lahf sub cmp (bad) sub fucomi or nop retq loope adc loopne std in mov (bad) fucomi cmpsl jb (bad) mov mov insb pop test out (bad) int (bad) xor stos pushfq cmp ds jae lcall sbb rcrl sbb rex.XB pop add fisttpl (bad) adc mov out popfq stos push rex and mov and mov sahf jne jnp xor (bad) cmpsl lods int3 int fistpl pop (bad) lods rex.B (bad) mov jnp mov jmp add jns adc sbb cmp mov xor add popfq add sbb rex.WRXB sbb clc sub loope mov (bad) (bad) xchg sbb jmpq test jrcxz rex.WRX (bad) stos rex.WB rex.RB fwait in gs cld xor jae fisttpl sub rex.WR lock imul (bad) mov jnp (bad) iret mov mov out xor mov sbb rex.WX imul jp cmp mov cmp pop add pop rex cmp mov xchg clc (bad) sbb mov rex.R and cwtl jno stos sti fstpt rex.W iret mov movslq (bad) mov int3 rorl jl iret mov xchg mov in and lods cmpsl (bad) jnp test lret mov fildl mov cmp or (bad) jno pop fisttpl (bad) sarb iret fwait (bad) sbb cmpsl adc add pop mov lods rex.WX push or rex.RXB fwait in popfq lret neg scas es (bad) mov mov loope mov fcomi insb fcompl (bad) add fcmovne adc xchg loop rex.RX pop push addr32 shrb and (bad) (bad) cmc pop addb (bad) add (bad) (bad) xchg callq pop scas mov (bad) and xor push pop data16 repz cmp add pushq lods rex.RB jne retq (bad) push incb movsb cmp rex.WRB lea (bad) rex.WB lret leaveq pop jo neg xor fcoms movsb fstpt xor jge (bad) jbe (bad) cltd jnp je adc fistpl data16 xor fisttpl cli (bad) xchg mov sub loop cwtl cmp (bad) movabs mov sub sbb (bad) adc lods or jmp movsl (bad) pop pop retq imull (bad) (bad) rcrb rcrl sbb int mov mov fcompl test jb cmp (bad) xchg jne xchg jrcxz outsb pushq add ss xlat rex.WB fninit movabs push pushq mov (bad) jrcxz jle in rcr fildl (bad) sbb fisttpl rex.WXB mov hlt cmc shll (bad) roll (bad) imul pop fistpl insl repz fild push movsb mov (bad) pushq fdivl (bad) push pop cmp rex.WRB rex.WRXB xor imul pushq ficoml fistpl mov movabs add fcomi iret or leaveq jl push fstpt (bad) (bad) idivl pop movslq movslq xchg pushq clc xlat fidivl xchg mov jnp,pn mov mov cmp mov adc (bad) int outsl mov sbb mov movabs sbb cmp push movabs xchg outsb lret mov sbb in (bad) add sbb out (bad) ror xor (bad) movabs sahf xor insl cmp ds mov push sbb enterq mov (bad) or enterq sub sub pop xchg addr32 xor pop jmp test gs and mov jnp fistl sub (bad) lret int lret mov xchg or loopne xor out (bad) je xchg shrl adc sarb fild sbb xorl lods pop cs test jnp cmp cld movslq movsb mov (bad) (bad) mov enterq push (bad) (bad) incb rex.R nop push rex.WRB fwait cmpsl add jrcxz mov sbb or sti mov sub pop loop (bad) rex.RX pop jnp mov sbb (bad) movabs movsl rex.RB addr32 adc sub mov out imul rex.RX (bad) pop or pop rol (bad) and jl (bad) (bad) lock mov (bad) js pop mov add sahf cltd or xor (bad) xchg cld outsb retq fadds (bad) (bad) push rex.RB and test mov cli mov rex.R pop mov mov divb xchg rclb fisttp (bad) xchg loope mov xchg adcb jno xchg (bad) ficom mov push (bad) fldpi data16 (bad) push sbb std mov xor add fucom jae outsb (bad) (bad) sub rex.B fisubl retq xor mov (bad) jne xchg in cmp and sbb push mov jle (bad) pushq test test sbb (bad) adc fs jae shll movsl sub cmp rex.WRX fbstp rex.RB jne push pop rclb xchg movl mov adc roll loope pop jl xlat (bad) mov push pop rex.RXB jbe in mov adcb xor cmp scas (bad) (bad) push movabs sbb jge iret fimul repz rcrb adc push pushfq xchg rex.W push mov push rex.WRXB xchg stc movsl push in xor xlat add scas mov jle jmpq (bad) fsubr xchg xor cltd popfq jnp jns pop add fldt (bad) ss sbb (bad) repnz out sub cmp adc xor mov cmp xorl add pop fstl jae movslq fcmovnb stc pop movabs jbe (bad) fsubl fistpl mov outsb push cmp or (bad) rex.X xchg ficomp jb jl (bad) jnp std movsb sub (bad) fldt je pop (bad) cmp or (bad) cmp mov lea push fildl icebp cld jrcxz cmp and test sub (bad) in (bad) fisttpll fldt (bad) or push fistpl rex.WRX (bad) rex.W shrl or pushq (bad) mov movl push cmp push cwtl ficompl adc outsl lret and fstpt xchg xchg xor cmp fcoms int3 rex.W rex.RB (bad) (bad) in push pop rex loopne xchg rex.RX cmp rex.R (bad) cmp rex.RXB xchg jbe sub add xchg imull outsb add roll (bad) test retq jnp cltd push or (bad) rex.WRXB lret vmaskmovdqu fincstp (bad) (bad) (bad) adc fndisi(8087 sbb xor fldenv or rex.WRX pushq pop int (bad) adc cli sub add fcomps fdivrl (bad) cmp (bad) mov test mov data16 divb movb addr32 push addl and je mov mov rex.X rex.WR pand (bad) lods fstpt (bad) std in mov push (bad) callq retq cmp sub mov rex.WRX mov movabs pushfq mov fcmovnbe rex.W add out fcmovnu xchg or pop hlt fmul (bad) (bad) (bad) in cmp rex.X fstl neg and (bad) xchg (bad) mov test sti (bad) fcmovbe (bad) pop (bad) stos adc rex.R rex.X xchg gs pop fs rex.WRXB rex.RXB fildl int3 jnp adc mov (bad) fistl mov fiaddl xchg add movabs mov lock pop sbb pop add pop xchg mov mov retq fcmovne (bad) jae movabs rex.RB fcmovnbe pop in pop add push leaveq rex.WRXB rex.XB fsubr jmpq gs pop (bad) xchg (bad) mov rex.X repnz mov (bad) iret retq xor and cs lahf retq jne cmp (bad) (bad) (bad) xchg sbb fildl pushq cmp int (bad) fistpl (bad) jge or xchg (bad) lret add rex.WXB rex.XB outsl gs xlat and cmc pop movabs xchg jg cmp sub cmc rex.WRX rex.WRXB movsb mov (bad) test pushq rex.XB fildl mov add xchg xor sub int andl (bad) or add insb addr32 fistl movabs fisttpl rex.WX ds add cwtl test xor addr32 lahf and cmp movabs xchg mov cwtl rex.WR int fwait (bad) mov and paddusb scas jne cmp (bad) (bad) fstpt stos cwtl xor mov xlat (bad) sub and retq cmpsl jnp js fs pushfq pop push (bad) and sbb (bad) (bad) fstpt mov movabs xchg jge sub pushfq lret movabs (bad) sbb rex.WRXB repnz (bad) and mov pop out sub fild add enterq (bad) push rex.WRB idivl cmp or movabs sub cld callq sti (bad) sub jns mov mov fwait or (bad) sbb (bad) pop out (bad) (bad) pop (bad) xchg or rex.X mov ss insl xchg fisubrl test mov xchg add xchg loopne push jp pop (bad) cmpsl pushfq movabs jno xchg lods mov (bad) jp xchg fwait lods out rex.WXB rcr (bad) xchg or fwait and or jl scas xchg insl sbb xor (bad) sahf pop xor subl sub mov vpsrld xchg fcoml je or (bad) cmpsl mov jp jae stos loopne icebp (bad) fwait iret (bad) test sub mov shrb pop nop test xor mov (bad) push jmpq clc xchg movabs fadds pushq movslq pop jp repnz (bad) (bad) callq pop movups rex.WRB imul adc xor out retq jnp lea leaveq pop mov mov repz mov rorl fdivs movabs (bad) (bad) cmp mov or fdivrp xor cmp and pop scas xchg jle xchg mov xchg scas (bad) fldt fwait pop insl pop jae rex.RXB fcom fs retq (bad) (bad) push xor pop sbb pushfq mov mov pop sub or scas cmc out mov cld pop xor or xchg (bad) mov fcomi sbb sahf jae test adc fsubrp jno rex.R or popfq pop gs mov imul sub add push hlt rex.X pop retq iret clc stos retq int je or sub jnp ja (bad) mov mov insl pushq cmp jge movsb or pop xlat shrl (bad) push cld cwtl fildl es fidivl jb faddl fisttpl insb and retq out push (bad) sbb or rex.XB push movabs fldt in movabs fwait outsb mov icebp push pop fcmovne rex.W rex.RB fstpt movsb movabs ja rex.R fistpl and sub out sub and int3 xor (bad) mov xchg or ja lock and sub (bad) xchg mov jnp xchg (bad) and pop push mov fdivrl loopne insb test fisttpl ds fldt mov rex.RX mov pop sbb mov out sbb cmp (bad) lods or mov push imul (bad) or std xor lret sbb (bad) adc xchg in sti mov rex.WRB mov rcl sbb (bad) pop push push ficompl rex.XB shrb out mov pushfq jae lods repnz add rex.WX rex.RB pop outsl sub sbb push stc (bad) rex.WX retq mov (bad) mov repnz rclb fiaddl ja (bad) pop mov xchg add scas mov pop (bad) sarl xchg movabs (bad) (bad) out test pop (bad) rorb jg mov mov jns cmp mov xchg mov pop (bad) or jnp rex.X adc in fnsave movabs adc mov pop stos mov movabs fisub retq movabs xchg (bad) movsb fwait cmp rex.RXB mov xor xor mov fstpt pop (bad) pop popfq outsl cmp psubd pop xchg cmc (bad) cmp pop xchg pop (bad) cmpsl pop ljmp rex.RX jl fcomp movsb adc fsubl jns rex.XB jne (bad) popfq out fcomps pop xlat mov pop mov orb fstpt adc jno (bad) js adc cmc xchg hlt jno pop (bad) mov cs (bad) jrcxz (bad) lret sbb cli cmp (bad) fstpt (bad) rcl imul std jnp sub jle rex.XB mov rex.WR mov data16 insl jne mov js xlat sbb (bad) (bad) cmovae ja lret pop rex.WRX push cmpsl ficoml add sti ds sahf mov fcmovnbe adc out scas or fwait (bad) loopne jnp ja cmpsl adc mov xchg stos cld mov iret lods (bad) clc rex.B (bad) in jo (bad) or (bad) pop scas cmpsl (bad) jnp mulb cwtl sbb jb pop mov (bad) push (bad) int3 mov adc jae pushq or fs jp and fildl sub fcoms movslq lock xor jl jle fcoms hlt iret mov fsub cld (bad) stos xchg cmp xchg (bad) je iret jnp xor (bad) jge add imul pushq icebp mov mov frstor (bad) (bad) loop retq test cmp fbld movabs (bad) rex.WRXB loope mov cmpsb sbb fcmovnbe mov ss pop repz (bad) or mov mov (bad) sub (bad) pushfq (bad) sub ds (bad) (bad) mov outsl rex.X rex.WRXB xchg cmc rex.WRX sahf (bad) (bad) adc mov sbb fistpl cwtl rex.WR js fisttpl xor (bad) fildl push push sbb repnz rex.WRX lock jns stc pop repnz in pop and jge (bad) ss pushq mov fild (bad) jbe outsl int stos je xor (bad) jg (bad) jge cmp imul rex.WRB xchg add retq (bad) lret and (bad) movabs xchg mov add and pop pop or hlt scas (bad) addr32 xchg (bad) cmp (bad) mulb fistl lret rex.WRB mov rex adc (bad) fistpl mov and movslq (bad) push sub mov cmp (bad) fldt xor gs (bad) xor mov (bad) outsl lcall out fistl imul (bad) mov imul sub leaveq lods cmp mov repnz movsl (bad) mov jno loop (bad) adc cli jrcxz fwait es xor push mov (bad) sub fildl fistl ljmp pop push mov or movabs lea (bad) out fistl mov rex.RB (bad) in fs (bad) adc mov sub jge mov movabs mov sub add stos mov (bad) fisubr (bad) sub jmp mov decb rex.WRXB mov adc addr32 hlt xchg jno movslq adc sub push mov or data16 xor test loop in fneni(8087 adc cmpsl (bad) icebp mov mov (bad) scas movabs (bad) ficom xchg jb test out lods fstenv rcrl xchg mov push test xchg rex.W or cmp pushq addr32 rex.WX and fcomps mov pushq fcoml stos add rex.RXB je lahf sub movsb rex.WRB push adc jp sbb mov divl (bad) iret mov cmpsl jne mov movabs mov sbb stc movsb stos loop xor rex.WX and stc cmpsl lea mov outsb mov in pop mov ror retq rex.WRX add std decb movslq fldcw jg mov out in xchg cmp jno and (bad) fldenv (bad) rex.WRX and std jp push sub rex.WR mov fldcw rex.RX jbe cwtl (bad) sti cmp movsb ds (bad) rex data16 add cld add idivb ss cmp mov rex.RX cs rex.WRXB jb hlt (bad) lret pushq sub neg push xchg pop (bad) rex.WXB (bad) mov sbb shl jp or retq jb sub je cs adc fdivp shlb fs in gs rex.WRB and cmp (bad) mov sub adc adc jno insb cmpsl stc sbb xor (bad) or loopne jne and jno and scas (bad) out stos jge jle pop in repz cli (bad) cmp mov (bad) lods rex.WR pop sbb rex.R stos test outsl (bad) data16 (bad) mov lahf xlat or lock mov cltd jmpq jae mov pushq fdivrs data16 pushq and sub clc out sti pop ds (bad) cmp mov (bad) (bad) cmp out popfq jge (bad) jp fwait (bad) ja jns out stos mov mov rex.WRX jne mov sbbb cwtl sub rex.B rex.WRXB (bad) cmp add fcoml mov jae iret stos lret rex.RB in loope push movsl xchg push xor or lods leaveq fcomps and push mov fs scas (bad) rex.WRXB enterq cwtl jnp pop sub mov and pushq rex.RB repz insb (bad) xchg fmull pushfq incl mov xlat rex.XB (bad) adc mov mov cmpl nop rcl orb mov cli in xchg and fprem1 rorb fsub retq cli cs test jae (bad) hlt (bad) loope (bad) negl or (bad) rcrb test and fsts ja xlat cmp sbb cmp imul adc xchg rex.RX add xchg sbb mov cltd outsb scas cmpsl or rex.WXB lret (bad) sub test jo xor rex.X rex.R lock push jbe pop lods xchg fnstenv rex.WXB stos clc pushq sbb xor sahf cmp xchg negl and rex.XB fstl decl or in and lods rex.B pop jnp (bad) test fldt jae int jo lcall xor pop (bad) retq movabs sbb add xor movsl and rex.WRX push or fcmovnb cli insb and leaveq cmp test sub fstpt rex.RB xor rex.WB fildl sbb fisttpl xchg (bad) xor mov jnp bnd sub (bad) es and mov rex.R fcmovne xor hlt jbe rex.RB mov movabs jrcxz loope frstpm(287 pushq add fstpt jg fidiv sbb (bad) addr32 mov callq fisubrl xor xchg jnp jmpq repz (bad) sub int3 mull jmpq ds (bad) rolb mov push (bad) sahf (bad) (bad) movabs mov fwait xor or repz pop add push pop (bad) insl adc flds xchg xor (bad) pop push or (bad) xchg je add add rex xor (bad) (bad) pop mov leaveq xchg mov mov or (bad) icebp pop mov mov add movsl xchg jmp stos cmpsb (bad) enterq stos (bad) (bad) sub cmp movabs mov rcrb fidiv rcrl (bad) sbb xor stos (bad) jl and fcmovnbe pushq (bad) xor xchg retq fildl mov data16 mov xchg fwait movabs (bad) sbb mov fistl rex.RX enterq loope cmp (bad) (bad) rex.R fnclex jns rex.WXB rex.WRXB mov pop rex.RX pop mov push xor enterq test jg push cmpsb jle (bad) mov or cwtl fstp rex.WRB orb fistl adc es sub out and rex.RX adc mov pop jno mov push mov data16 xor stos xchg sub movabs mov mov shll jns fucomi gs fcoms lret fisttpl stos retq test xchg mov (bad) sbb (bad) mov insb pop jno fcmovne mov xor pop fist cltd pushq test push rex.RB (bad) (bad) and xchg fistpl rex.RB (bad) jmpq pop mov fwait icebp mov mov jo rex.WX jmp shll jb xchg xor int3 sahf rex.B incb out mov stos fcmovnu stos js callq sub imul (bad) je (bad) fxch sub sbbl sbb loop adc mov stos jle scas pop (bad) fistpl or movabs add clc out or jnp (bad) ficompl cmpsb loope mov sbb decl rex.RXB lret mov gs in jrcxz pop sub (bad) enterq (bad) in jmp icebp and int3 outsl movabs test in fisttpl (bad) mov fisubrl loope xchg mov fs stos jne mov icebp xchg mov (bad) sbb and mov cmp (bad) rex.XB rex.WRX fldl rex.W push pop cld pushq jbe pop fcomi jae rex.RB xor addr32 rclb fnsave xchg mov cwtl outsb push out fcmovbe pop retq and add rcrb mov adc or fistpl cltd jrcxz xor lock (bad) sub rex.W or ds fisttpl push fwait add fldt pop outsl pop add cmpsl rex.RB pop xor jno pop pop fstl movsl rex.WRXB ds movabs lods (bad) and mov jb fsubl xchg and hlt (bad) pop xchg std adc xchg or mov (bad) sub (bad) push fwait (bad) insl out addr32 push cmp fmul jl,pn jbe sub xchg cmp add pushq mov insw fildll jbe jb in scas jnp adc rex.B adc and jo add cltd sbb (bad) pop jp (bad) mov sbb push lea (bad) loope rex.R (bad) rcll loope movabs loop xchg mov pop movsb rex.R jae (bad) xchg cmpsl (bad) xor loope jmp movabs adc mov jns loop xchg pop lods out (bad) xor (bad) fnsave fwait cmpsl (bad) in movabs xchg repz lods mov sub mov gs or adc jp pushq jl sub in loop fdivrs sub movslq in insb pop sbb (bad) (bad) stc or mov test movabs movabs mov stc fistl xchg mov movabs rex.WR jne (bad) fucomi (bad) test pand jge (bad) pop add cli pop adc add fbstp pop fldcw (bad) push movslq jno cld fistl xor rex.RX pop pop pop jne mov mov (bad) cmpsl out or xlat pop or movabs sbb movabs stos sarb rex.X ss roll callq rolb callq test in lock pushq (bad) insl (bad) cli pop (bad) out fildl push cmp pop roll xor cli cmp movslq (bad) (bad) (bad) lods subb mov movslq movslq (bad) fisubrl sub jle sbb fcmovnb decb (bad) nop movabs (bad) xlat xchg add imul (bad) (bad) vpmovdw add fbld stos adc pop int jp sbbl jns ds xchg (bad) fstpt test fisub and (bad) rex.WRXB fcmovnb cmp sub pop or pushfq cmpsl mov adc or xor or rex.W add pop xor (bad) rex.WRXB movabs mov xchg mov fcomi push xchg in stos (bad) in test mov clc xor xchg int3 mov pop int and addr32 add loop in and (bad) lods cli fistpl pop lahf pop in push (bad) (bad) sub push fiaddl mov in adc scas sbb (bad) callq mov fsts loope add adc add incb (bad) (bad) xor cmp std xchg movslq mov jnp (bad) adc (bad) jbe hlt xchg loope,pn cmp sbb jle mov xor ja xchg sti push fsts mov cli rex.X int xchg loopne sub (bad) pop std pop (bad) (bad) cmp mov fdivrs out jae or xor fisubr rex.W imul fnop int3 cmp mov cmp sbb mov mov xchg repnz jg pop adc or sub retq (bad) outsb sub loope jge cltd mov pop pop loopne mov movabs adc (bad) movabs push imul (bad) fldt imul and cltd cmp rcll push (bad) (bad) cmpsl jbe rex.RX leaveq fildl mov out add addr32 shrb cltd xchg fcmovnb rex add push movsb mov or lock (bad) rex.WX mov scas sti sbb movabs or pop sub ja adc jns fwait xor fistpl icebp jl push cmp ss mov pop xchg pop xlat jne in jl fisubl (bad) mov jo int mov callq cwtl (bad) xchg and cld pop cwtl lahf outsl or mov mov cmpl loop pushq jnp rex.WRX rex.WR jns fisttpl jae jge (bad) fisubrl clc fidivl in ljmp and ja (bad) retq stos pop out in adc fmull leaveq rex.WB rex cmc jb jmp add pop fldenv xchg in adc (bad) fwait pushq and rorb (bad) rex.WB add push (bad) rex.W test stos stos cmpsl (bad) fnop adc jno out lea mov (bad) mov adc rex.WB imul pop mov rex.RB rex.RXB adc (bad) lods (bad) push leaveq push pop pop and lods (bad) lods movslq xchg sbbl mov jae pushfq rex.WRX adcb nop xchg (bad) cltd cld iret in mov sbb push movslq rex.XB mov jmp push push sbb fs push (bad) sub xchg fstpl in shr retq pop sbb jmpq add cmp xor callq (bad) adc push xchg vcvttsd2si (bad) pop insl rex.WX and mov (bad) rcrb (bad) pop in (bad) (bad) stc jrcxz xchg push enterq xchg imul (bad) (bad) jae lahf xor pop (bad) xorl adc mov out (bad) loopne loopne gs rex.WX adc jno mov sub lret imul (bad) (bad) mov rex.X (bad) rex.W or (bad) mov fwait (bad) shrl mov rex.WRX add out clc jp repnz callq (bad) jae jmp loopne nop adcl (bad) sbb jnp movabs (bad) pushq mov xchg xlat rex.WB cmpsb sarb (bad) xchg stos fistpl push lahf mov sbb jmpq loop (bad) negl rex.RB fildl sub out sahf add sbb insb jg xor fildl test (bad) adc fwait test movabs addr32 push xor xchg decb mov jo add rol and pop mov movsb cli cltd fwait (bad) in (bad) (bad) add scas cmp xchg fisttpl outsl cmpsl clc mov cmc add sub (bad) jo (bad) fistpl push sbb iret (bad) rex.WR rex.RB cli (bad) callq push test fistpl repz cmp movsb jrcxz sbb (bad) stos (bad) cmp cmpsl hlt movsb in mov mov sub mov jmp push (bad) jno fisttpl int3 retq mov rex.B fistpl rex.WRXB sbb test rex.WB add stos rex.B rex.X rex.B add ds retq sub imull loop xor pop cmp ss jb jbe movsl int3 rex.WRB adc (bad) gs cmpsl rex.W pop push imul (bad) sahf xchg (bad) pop cs callq insl (bad) repnz cwtl (bad) xorl shrb in (bad) rex.XB shl je (bad) pop mov jl fwait rex nop and movslq fidivr leaveq shrb scas (bad) fistpl push andl add add jnp mov cmpsl fldt xchg xchg data16 xor imul rex.RB fistl movsl cmpsl rex.WRB (bad) sarl js (bad) xchg clc loopne in (bad) mov stos mov retq cmp rcrb mov addr32 stos fldt jmpq push (bad) or rex.WRX rex.WX addr32 gs fwait sbb repz rex.WR xor jg (bad) xchg (bad) rex.X mov mov push rex.RX sub sub or fwait cmp (bad) cwtl movabs ror sub scas sbb insb fwait rex.XB stos movslq in fcmovne push test cli sub rex.RX mov cmp rex.WRX callq ficoml imul insl fistl outsl (bad) retq rex.WX jl movabs sub push xor jns mov mov cmp jle fstpt and subl retq mov (bad) mov pop mov xlat cmpsb imul mov (bad) (bad) nop rex.RXB (bad) mov cmp outsl sbb pop jbe push pushfq cli and (bad) imul mov (bad) or data16 mov mov movabs test testl jno cmp (bad) sub imul neg in (bad) or fistpl (bad) or jnp (bad) fbld add movsl mov imul fcmovne pop mov cltd lods (bad) sbb out cmc or test sub movabs cmpsl repz xchg repnz xlat jne mov fcmovnu rex.WXB lock in outsb out pop sbb movabs imul insb rex.R pop rclb pop lods cmp loopne rex.WB out and test add loope sbb xor test movabs (bad) xchg push jmp mov cltd imul retq jns (bad) addr32 cmpl hlt add mov mov mov int pushq (bad) fstps and push jp imul add rex.W rex.WRX (bad) js mov (bad) fsubrl jns or sbb push pop xor (bad) lretw mov cmp jp push sti test fldl scas popfq cmpb jno cmpsb stos and (bad) lahf jnp (bad) pop xlat (bad) jne add stc nop std cmp out push popfq rex.XB rex.RX add rex.X or imul or nop (bad) je out fcomi fsubp out jmp leaveq cs xor mov rcr cmp (bad) insl mov mov (bad) idivb or mov ror (bad) add xor mov in jae pushq sub test pop (bad) leaveq repnz (bad) fildl (bad) rex.WR rex.B add mov es jo (bad) jmp test (bad) jne (bad) lahf jg outsb (bad) movabs test pop lock pop (bad) (bad) sahf mov or push xchg pushq fistl xchg fwait or movabs (bad) (bad) rex.WR (bad) rex.RXB mov fmuls and rex.XB and in sarl sahf sbb enterq mov retq mov fnsetpm(287 rex.WRXB decl push mov movslq xchg lock jg mov mov in mov movabs adc callq data16 rex.X pop je pop in movslq rex.R icebp rex.RX push fimull sbb mov (bad) iret lea pop xchg test (bad) enterq scas add in hlt or mov clc rex add mov fisttpl fadds (bad) sbb pop (bad) lahf (bad) (bad) mov jmp fucomi std movsl test adc mov cmova fs shrl rex.WB rex.W rex.WRB (bad) (bad) (bad) mov add (bad) hlt movsb cmp test (bad) pop jnp mov rex.WRXB and test outsl push push rcrb cmp callq cmp (bad) fcomps (bad) sub rex.RXB sbb sub pop mov callq fcmovnbe (bad) rex.R in movabs fistl mov mov pushq xchg sbb jp rex.RB fistpl lret js xor (bad) cmp outsb rex rex.WRX gs pop loopne (bad) sbb jp cmp fcmovne fld lret jns xor (bad) (bad) lahf jb (bad) push jp mov rex.R rex.WRX cltd addl mov rex.B jo fistl xchg jge xlat sub pop mov sbb cmp rcr (bad) (bad) and jae mov adc xchg cmpsb (bad) lret iret (bad) lods mov rorb adcl rex.WRXB xor jmp popfq shrb and or adc cmp or jae loope (bad) neg (bad) fcmovne in out leaveq lods cmp retq mov cmp std mov loopne pop int3 mov sub rex.WX (bad) std rex.WRXB rex.B jae add sub imul add fidivl push imul in pop adc addr32 packuswb pushq movabs pop mov leaveq gs mov rex.WRXB xchg fnsetpm(287 repnz retq (bad) pop xor sar std jae pandn test cmp cmp ja sarl mov jg (bad) and (bad) (bad) (bad) jno insl jle stos and (bad) lods cmp (bad) cmc out jmpq repz pop es pop jbe sub (bad) rcrl rorb (bad) enterq gs rex.WB (bad) mov mov mov loope enterq scas (bad) (bad) pop mov xlat cs or push clc in cmc xlat (bad) mov jmpq adc insb xor xchg cmp mov lock xchg fnop sbb (bad) rex.RB rex.XB cmp fnstcw xchg or movslq mull and fimull nop cmpsl (bad) sub test fiaddl stc movsb out sub fxch push pop fisubl (bad) addr32 ds nop negl (bad) stc rex.WR rex.XB xor rex.WRX pop or addl cs sti or adc repz (bad) push mov cltd adc fcomp fistl or push jns movsb sbb adc imulb xor adcb lea push rcll xchg out sarb push sbb js mov cmp (bad) fwait xor rcrb fbstp rorb push mov jne and pop shlb jnp,pn mov lahf xor je cs (bad) sub repz sahf (bad) ss fdiv (bad) mov sub lret mov iret mov (bad) loopne repnz or jae (bad) sub rcll sub sahf (bad) mov rex.WB (bad) fsubs cmpsl or jne mov test mov rex.RXB jo sbb mov iret (bad) jb iret jge or cbtw adc adc ss xchg and push movb flds data16 xchg jle or loopne (bad) cld and adc ss (bad) loopne jmp pop mov mov mov sti xlat jns push out add (bad) stc loope sbb mov or add repnz cld ja rcrl addl fnstenv out insb repz cmp in cmp (bad) imul mov fidiv cmpsl xchg mov rol (bad) adc jne (bad) test push test mov push mov sbbl (bad) loope xchg imul adc or adc movabs or jl xchg movabs sbb sub leaveq xor xor sub out sahf movabs rex.R (bad) push pop rex.WX rex.XB rex.RB xchg insl rcll xchg rex.WXB frstor or cmc cmp (bad) xchg retq popq mov and mov adc and jl or or lret xor (bad) movabs mov rex.WX and cmp loopne mov jo (bad) insl xchg movabs test (bad) rex mov lret (bad) scas jns lret mov enterq mov movabs leaveq (bad) pop jae shll push (bad) jbe scas xor cltd (bad) sub pop rex.W fimul in hlt (bad) lret (bad) add xor rex.WRB rex.WB cs or pop jmpq fistp (bad) xchg cmp pop add adc test cltd push xor fs push in out fmull int cmc (bad) movslq xchg movsb pop mov stos int3 fdivrs cmp add pop (bad) iret sbb add adc lahf movabs enterq fildl mov (bad) loope rex.WX pushq (bad) add out fistpl scas rex.RB fistpl ja jo (bad) cmp jle jmp fistpl pop mov callq mov rex.RX test icebp iret mov cmp xchg mov ja es cmp add fistl data16 (bad) fcomps (bad) int sbb pushfq fwait adc jrcxz (bad) ja fmull lods fstpt add (bad) cltd (bad) pop (bad) popfq adc xchg jae (bad) (bad) js cli fstpt sub fstpt xor fistl rolb (bad) rcl int3 pop pushfq test rorl es push mov sbb push fwait mov lret and rex.X mov fsubp rex.XB pop out xor (bad) ss (bad) cmp (bad) adc hlt sub (bad) frstpm(287 push jl sahf sub rex.WX xchg je fcmovnu pushq (bad) or cmpsl xchg rex.WRXB iret xchg stos scas ror cld fistl cmp jo sbb fnsave push lret jns (bad) lahf insl add rex.W adc sbb insl sbb push fs loop loopne in enterq jp jle mov add push xor jnp retq loope (bad) (bad) fildl jl out out imul test out sahf movslq sub mov movabs cmp loopne fisttpl stos jo fcomi pop (bad) jl push sbbb insb outsl sahf push fistl stos pop xor sbb mov shrl in add mov jnp je (bad) add cmc push jp (bad) (bad) xor (bad) push pmaddwd movabs cwtl or fbstp sbb shrl rex.WX mov repz add mulb jo fisttpl add sub int3 adc adc push pop adc lahf repz jnp fs ss rex.WRXB or movabs fisttpl push imul stos rcrl movabs fistpll repz pop (bad) fstpt pop je jae (bad) rex.WRB mov or pop xchg data16 push (bad) jg (bad) xchg fildl addr32 pop pop sub and mov cli mov adc sahf mov push (bad) jae xchg movsb xchg (bad) mov (bad) mov add or sahf sarb (bad) fcompl add xchg outsl mov (bad) fcmovnbe jge sbb mov pop add mov movsb fwait test push stos movslq pop jne mov (bad) fstpt xlat addl jno or subl adc sub incb jp pop mov mov (bad) clc mov fldcw rex.RB push jno rex.WRB scas rex.WXB mov rorl gs movabs xor loop xchg mov movabs (bad) stos jmpq or rex.WB int movslq es (bad) push and jo xchg sub (bad) sub mov movabs outsl (bad) add (bad) out lret rorl (bad) xchg cmp jnp retq fisttpl push lock cmc outsb (bad) add ja (bad) push (bad) movabs push jo mov fldt cmpsl xlat push movsb mov sbb repnz and (bad) int (bad) sub int3 fisttpl sbb xchg (bad) rex.WB movabs fwait add popfq iret rex.WX lcall (bad) rex.RXB xchg nop add adc ja cmp (bad) jnp fcmovnb sub mov movabs (bad) pop add fnstsw loope (bad) out imul frstpm(287 out test retq and cmp icebp fildl out (bad) out rex.WX callq fldt cmp ds fldt sub fistl cmp rex.WR addr32 ficompl mov insl cmc (bad) add xchg fiaddl cmp rex.WX pushfq adc cmp pop ja popfq add mov leaveq or jl (bad) mov fwait (bad) int pop lods js loopne (bad) stos or mov sub jae jmpq sbb adc rex.W xor cmp push sahf (bad) mov jnp callq xor mov (bad) (bad) cs stos (bad) cmp jp jo jl retq xor lret stos xchg rex.WB push scas fisttpl cmp mov imul mov xor xchg mov (bad) fcmovne pop cmpsb jb xor cmp rex.X idivb cwtl adc fcoms jrcxz and push outsb xchg jge enterq sbb imull scas pushq mov (bad) jl jb (bad) pop cmp mov insb test push sub sbb fldt jne callq retq bnd loope mov push lret outsb lret imul out adc mov add jne cs rex.WRX ss xchg (bad) test out or rex.WXB sub test nop rolb (bad) (bad) and mov add (bad) rex.WX lret cmp mov sarb fildll movsb scas jle stc fcmovnbe (bad) mov cmp cmp adc xchg fisttpl and cmp pop (bad) (bad) es movslq pop sub div fwait (bad) movsb jp fcmovb test scas fistpll fucomp xchg adc fcmovnbe jne cmc and (bad) out loope xchg jl pushfq mov jnp (bad) pop (bad) decb (bad) shll adc jnp clc rex.WXB sub cmpl mov mov cwtl es jns jl mov movslq pop stc mov iret and and fldt or scas (bad) sub jnp mov push push (bad) xchg mov fwait pushfq adc xlat sub cmp add sub fcmovb lods movslq movsb mov fcmovnb rex.XB sahf outsb and pop or lret imul push and icebp je (bad) rolb adc test sti pop fwait retq lahf cmpsb rex.WRB fistl mov test int3 retq fcoml fst sbb pop sub mov rex.W out sbb sub in ja loopne cs loopne jbe or mov cmp rex.WB cmp (bad) jp hlt jmpq (bad) sub movabs xor jbe and lods mov leaveq xor fildl (bad) dec fisttpl mov (bad) mov fnop pop pop test (bad) imul mov jp sbb stos jno fistl mov lods (bad) and (bad) xor lret adc xchg jge jle imul pop popfq movsb stos or sbb mov mov retw fisub add sti rex.WRX fistpl ror gs adc rex.WB xchg mov (bad) out in movabs (bad) pop cmpsl lods and xchg mov cmp jp rex.X and int3 js cld fwait push rex.XB push jge (bad) and rex.WX sbb add mov adcl (bad) shll xchg sti (bad) sub (bad) xlat (bad) out rex.R cld scas movabs jns (bad) fcmovnu lods and mov int3 (bad) adc mov mov in sub mov imul pop (bad) rex.WX cmp fs xchg jbe xlat sarb mov out pop pushfq in (bad) sbb leaveq (bad) sarl loopne mov (bad) mov (bad) (bad) out cmp scas fimull pop movabs xor add movabs stos and cmp cmp sbb mov stos sub ss rex.RB rex.WRX mov leaveq rolb rcl fidivrl sbb in pop cmp fldcw js movabs xor sbb xlat out xchg int add lret adc push ss pop cld hlt (bad) fcomps jle std (bad) (bad) (bad) rorl push jl fistp iret adc out jnp sbb add (bad) xlat data16 or push push xchg push cmpsl sub (bad) icebp mov xchg mov (bad) repnz push pushfq or fs rex.WR mov sbb rolb sub rclb in adc sti insb stos sub ja adc push loop lahf gs jae sub or iret sub js mov rex.WRB jns cmp mov fistl (bad) jmpq or mov scas hlt pop scas or mov mov stc (bad) rex.WRB lods adc adc rex.WRB rex.W shrb fsubp not mov data16 je rol lret add fwait (bad) rex.X retq jle (bad) (bad) (bad) cmp jb add jne in fcmovnu imul test mov mov stc lret (bad) fldt sbb adc jp xchg popfq add fwait xchg sahf fsubrs xchg repnz and jbe cmp rex.X in cli test mov and imul sahf pmuludq sub jmp insb fildl stos rex.WRB sub rex.WB and enterq addr32 rex.WR cmpsl jno movabs mov sub mov stos rex.RB xor fcmovne enterq jns movabs (bad) or clc andl mov fninit lods rex.R rex.WB movabs nop add int cltd in rex.WR clc pand lret (bad) mov lock push outsb add jnp movsb xor scas xchg jnp movsl cmp adc cmp mov pop mov cmp mov out (bad) fistp mulb rex.WRB fistl jb add pop pushfq and std cli (bad) enterq adc fldt (bad) out mov pop sub incb adc jle xor movabs mov movsl movslq (bad) add adc stos pmullw xor sub mov xchg and lahf sbb stc fcmovb or xchg mov and cmpsl gs sub cwtl and sbb out shl jae pop push cli mov xchg callq rex.WRXB rex.WB repz xchg pop add cltd repz repnz and bswap repz cmpsl add (bad) stos in lret test imul rex.XB adc push insl mov mov mov jmpq lret cltd shrb es cmp mov pushq cwtl push test xor mov rex.WB add xor push out mov or (bad) cld imul es mov out (bad) push fstps cmp in test out cmp add clc sti fist test loopne adcl cld and adc jrcxz out xchg xchg fbld rcrl rex.RXB push (bad) xor jo cmpsb add (bad) adc xor movabs fmuls and cld out cmpsl pushq movabs adc xorb sbb sbb rcr rex.X ss cmp cmp mov xchg cmpsl (bad) out rex.RX fmuls rex.WR jo (bad) out pop xchg push rcrl repnz shr (bad) kmovd adc pushq pop (bad) gs rex.WXB cmpl jb scas scas or mov mov out imul or ds int3 cld lods iret mov sub (bad) icebp lret cmpsb in hlt pushq (bad) or xlat sbb hlt rex.RXB sub cld (bad) out jg cli xlat mov jae out sbb (bad) movabs xchg sbb rex.R or imull scas mov add (bad) test repnz cmp (bad) mov pop imul gs pop xor (bad) pop (bad) mov pushq mov mov pop ja sahf cld stos fwait add mov adc (bad) rex.X rex.X xchg fsts (bad) pop out jbe push mov sbb fidivrl gs stos mov fs jrcxz lret push fdivl sbb lods (bad) shrb (bad) or leaveq cmp xchg xchg (bad) push rcl adc sbb mov test cmp imul jbe sbb out jo xor mov mov cmp in pop sahf retq rolb pop (bad) or callq jmpq xor enterq (bad) (bad) fwait cmp push and jmp pop mov xchg addr32 xchg (bad) cs test stos adc out sti jrcxz add jmpq sbb imul scas (bad) jg je xor fistl icebp movabs fistl adc and (bad) jrcxz iret or adc mov mov lea xchg imul and and scas and xor incb rcr int bnd and jmpq pop movabs push loope ss pop callq or pushfq fildl add rex.WRX pushq int3 mov or movslq lods and ja negl adc cmc lret mov cmpsb and (bad) (bad) leaveq cmp outsb imul xor test clc loopne out (bad) jne (bad) fldt cs (bad) in pushq rex.R ds jae rex.W fcomi stc adc fucomi (bad) mov rex.XB (bad) jo retq pop jae mov lock (bad) mov pushfq outsb (bad) fildl cltd xchg (bad) (bad) int pop (bad) fist callq or push adc enterq out scas mov xor mov cmp fldt push push rex.WRXB outsl adc cli (bad) fidivrl mov (bad) cwtl ficoml fdivl and (bad) (bad) xchg pop pushq enterq sbb mov out sub xchg mov mov (bad) sbbb retq xlat jb rex.X mov ss (bad) pop pop (bad) movabs (bad) fistp int3 imul repnz fistpl xchg add rex.WRX adc mov xor fldt (bad) sahf popfq adc rex.R xchg rex orl fisttpl loope gs xchg rex.X (bad) mov subl (bad) (bad) pop rex.WX mov imul mov xchg nop pop testl jrcxz fildll rex.WXB rex.R in je fsts push pushq sti (bad) xlat or pushq fldt jb cmp xchg fstpt cld out movsl sbb repnz (bad) rex xor pop scas (bad) out lret sti jnp ja pop fnstenv rex.XB rex.R rex.WR xlat rex.B rex.WRB gs rex.W cltd pushq xchg stos pop sti xor cltd sbb addb fistpl int3 xor (bad) jnp cltd pop cli adc fistl sbb cltd push mov lret rol (bad) (bad) rex.XB rex.WX xor int3 clc pop sub add sub (bad) out mov stos (bad) lock jrcxz retq iret rex.RXB test or leaveq test sbb mov jno (bad) push fsubrs pop sub and rex mov pop lea retq xchg fcomi test repnz jge and (bad) lods test mov (bad) rex.W jnp xchg pop imul out xchg (bad) pop enterq shlb movabs rex.WRX rex.WRB mov cmp rex.WX std rcll add lea lret jbe (bad) adc push pop add pop jp mov xchg push outsl jae push rex.X (bad) add fldt (bad) xchg mov jbe fildl jle icebp out fucomip rex.RXB add push (bad) or (bad) insb orl fildl mov (bad) addr32 scas jnp jne test xchg fstpt fnop mov movabs in test ss repnz enterq (bad) je pop out callq jp (bad) fcmovb test mov rex.WRX test xchg xchg add pop fsubrl and rex.WRB addl (bad) fldt jrcxz movabs jmp outsb rex.WRB scas xor int3 pop (bad) rex.WRX test cld sbb push fist jle in mov rex.RB rex.WRXB mov cmp in jne (bad) retq (bad) mov pop rex.WRXB test (bad) ss (bad) fstpt jp pop faddl test (bad) pop push push sbb adcl rex.B rex.RB lahf idiv rorb pop (bad) (bad) iret cs jge loope sbb cmp icebp (bad) (bad) cltd imul (bad) push lods pop lcall cmpsl (bad) sbb fidivrl ficompl mov mov loope xchg sub (bad) test add push cmp lods imul mov rex.R (bad) mov xorb jne lret out pop cmpsl movabs add xlat pop sub callq rex.WX jb xor in sub mov rex.B js adc mov sbb out addr32 xor push rex.WB cwtl rex.W mov add (bad) lahf add pop cmp add sahf sbb xor xchg (bad) fninit roll sbb or fwait (bad) sub add and xchg mov mov or lahf xchg (bad) adc rex.W jno pop imul (bad) cmp frstor pop stos sub mov and sbb test cli mov jmp and (bad) mov in cmp lahf cmp adc (bad) mov movabs leaveq rex.RXB rex.WXB push stos cmp test mov pop fwait (bad) mov and mov sub adc mov mov (bad) divb imulb repnz sbb jne jae (bad) xlat pop xor mov add in push popfq xchg push jmpq rex.WXB insl mov pop cmp jnp add xchg leaveq rex.XB sbb and push (bad) xor movabs (bad) xor sub mov mov outsb cli (bad) fnstcw sbb (bad) (bad) loop maskmovq idivl xor retq in loopne cli gs mov jnp (bad) (bad) retw xor or jnp mov add subl fistl xchg movabs cmpl rex.W int3 jae pop int or pop repnz adc xor cs fcmovnu xchg lods and retq in in incb push cld cmp jle push jge mov mov insb pop sbb lods pushq cmp jbe sti or cs adc callq adc fucomi (bad) loopne rex.X sti stos add cld (bad) movabs xchg fildl loope (bad) rex.WB push fistpl fidivl jns loope rex.RX pop sbb je cmp loopne rex.WB movsb fucomi movsb xor or push push (bad) jae xchg sbb (bad) sbb cmp loope imul pop rcrl cmp rex.WRB adc rex.XB scas mov fstpt add push mov sbb or hlt sahf xchg add (bad) stos enterq and insb (bad) pop rex.WXB pop mulb lock jne mov sahf cmpsl movabs lret popfq (bad) test (bad) std imul adc movabs movsl shrb jns cs frstor pop scas (bad) and scas sbb cmp or or mov sub pushq pop jnp rex xor cmpsl out (bad) callq shrl stos (bad) xchg mov xor (bad) clc lods xchg repz (bad) insb (bad) or lret (bad) sahf movabs or rorl test sub (bad) int3 cs movabs cli cmp jge rex.WXB out jp fisubrl pop and test pop rex and (bad) lret mov movsl mov js jl orb int repz cltd cmp xor ss mov pop movslq xor rex.WRXB (bad) mov sbb fisttpl (bad) mov cmpl int jl sub pushq (bad) std sub gs add js adc or mov sub (bad) lret rex.WRB mov (bad) add stos cmpl sub mov rex.B rex.WB imul mov (bad) add pop rex.XB rex.W fldt rex.WR movabs jb adc es and sbb movabs movabs push outsl rcrb lock movl add out sbb jrcxz (bad) rex.RXB rex.WRXB jmp and sahf jne adc push adc jnp or sub loop rex.X movslq adc jle mov mov leaveq (bad) lahf sub (bad) (bad) out jp jp sbb xor mov cltd push sbb and and rclb outsl xchg push push cltd (bad) in pop vpavgw (bad) pop movabs sbb std add sbb cltd clc std fmull rex.WRX in std pop (bad) (bad) rex.WR (bad) cmpsb fwait sub sbb xor mov rex.WB mov lahf (bad) mov (bad) add (bad) xchg xor sub (bad) push pop ds nop pop fsubs (bad) pop out pop (bad) jbe mov (bad) in jbe (bad) ss (bad) fcmovne push (bad) clc rex.X mov in pop adc rcrl out or rex.R pop xchg push jge fnsave mov out jle (bad) shr cltd (bad) in loope pop (bad) sbb lods insb rex sub (bad) cld or int (bad) in icebp stos mov mov rex.WXB rcll or test mov (bad) repz (bad) lret push sub and repnz cmp (bad) mov mov (bad) fistp int3 movabs movabs addl fdivrs fldcw hlt pop fnstcw xchg (bad) sti xchg repz sahf imul js and sub insb int3 lock pushfq xchg jg rex es pop sub movslq (bad) sbb adc repnz addl (bad) (bad) xchg or fcomps xchg add rex.RXB sarb xlat stos sub (bad) mov jge notl adc or push fwait rex.WRB sti mov pop cli jp test sub sti mov mov sub outsl sarb pushq (bad) cli cld (bad) mov stos mov xor add xchg retq (bad) rex.R cld sbb (bad) xor mov movb insb nop xchg xchg and (bad) mov vmread add jb or ficoml ja out movabs (bad) mov adc push fwait mov cld add lahf jb jg in imul pop callq (bad) in jno pop jbe pop xchg (bad) and int sahf xorl push mov out jne frstor (bad) sub push push push xchg sti stos push xchg add (bad) sti repz pop pop rex.XB mov mov testl (bad) xchg fstl (bad) sbb mov (bad) rex.W sbb shrl insl mov fwait movsb pop in cmpsl out sub (bad) in popfq xlat cmp (bad) (bad) and leaveq mov in retq sub fwait repz pushfq (bad) idivb (bad) mov jnp cld sub rex.WRX push push xchg mov (bad) lahf (bad) jb jle mov pop outsl int push xchg (bad) jo cmp out sahf mov loope (bad) (bad) (bad) movabs xlat loope push (bad) xor mov jno retq add xlat cld stc jg mov (bad) sbb sub movsl stc mov (bad) in pop mov fidivl cmp popfq (bad) push jo sbb sub rex.WRB and pop mov std scas cld loope retq hlt xor rex.X data16 movsb (bad) sti outsl (bad) (bad) stos gs imul adc mov int3 fsubrs push or rex.X bnd insl imul xchg jne imul jge push (bad) jns mov mov xor mov fmull xor push xchg jae and cli jne adc rex.RX or std retq add enterq xchg and jne sub and or sub or sub mov movabs lret sbb je sub (bad) (bad) sbb lods cli sarb lret test add (bad) rorb movabs in mov xor push loope (bad) mov stos (bad) loop out (bad) sbb data16 leaveq or rex.WX lock movabs mov pop in scas pushq pop pop mov pop ds push sbb scas fsubs (bad) mov mov ds (bad) cmp or or (bad) jne pop rol jo addr32 mov cld retq mov xchg (bad) mov push pop leaveq (bad) cld movabs mov fistpl jrcxz mov pop add mul lods (bad) mov (bad) sub (bad) test rex.R (bad) pop sti (bad) movabs add rorl cmp rex.WRB stc jle roll movabs movabs sbb test iret insb (bad) cmp in loop rolb (bad) xlat rex.RXB fistpl xchg movsl rex.WRXB addr32 (bad) add retq pop mov data16 xchg and scas (bad) cltd fstpt mov (bad) idivb pop or or (bad) ja xor cmpsb (bad) mov addr32 fistl xlat rex.WB movabs fldt ss jle (bad) cmp repz mov sahf ja stos fnop lahf mov push push out mov movslq rex.WRXB gs lods fstps jge clc pop adc stc orl cmp es out movabs pop adc (bad) (bad) ss jne (bad) retq push rex.WXB push rex.WRB adc out retq sbb insl clc cmp jmpq mov pop out jb mov hlt cmp push xchg scas cmpsb mov sbb xchg (bad) lcall sub shrl (bad) test insl out jl negb fs lahf cmovb mov rex.WX sti ja (bad) and rcr (bad) jp clc pop rex.WB sub sti (bad) pop addr32 es adc std push ror mov sbb adc cmp rex.R xchg (bad) insb sub rex.XB rex.WRXB cmp mov ss in sub pop jle xor lahf adc xorb stos xchg add cli cwtl pop ss sbb xor (bad) js adc popfq test adc cmpsb (bad) and cmp rex.RB out loopne mov rcrl subl mov mov in jno fistpl je (bad) retq and loop cld addr32 xor pop adc mov movabs add pop jnp jns (bad) jae movsl jl mov adc (bad) fstpt insb fwait pushfq fisttpl cld sbbl xor cmp and int3 int (bad) jns fnstcw imul loopne mov js out lahf fstpt incl incb int3 shll neg imul out fistpl or out (bad) movabs movabs jg push imul add scas iret or pop mov jl lahf mov lods pop movabs cs rclb adc stc vpcmpgtb retq sub adc stos lods fidiv or xchg pop jg fisubrl fcmovnb sub imull sbb or jnp cmpsl (bad) push rex.WRX pop fcmovnb or rex.W rex.WXB repz andb fnstcw mov mov cmp cmpsl xchg ss jo rex.WXB mov (bad) testb cld movsl (bad) fcmovne jle cmp test xchg (bad) addr32 and cmpsl push push (bad) and imul movabs mov and stos adc (bad) xor (bad) (bad) mov sbb gs pop rex.WXB rex.W fstl adc (bad) fsubs xchg fcom leaveq adc fisttpl mov (bad) mov int3 mov pop rex.X rex.R rex.RXB es sbb js mov or rex.WB push jp fistpl rex.WRB addl fldt push out fmuls (bad) (bad) pop xlat movabs pop movabs scas pop mov mov addr32 fistl xor ja movslq jns cmp pop popfq xchg mov repnz stos push lock rex rex.RXB xchg sub sbb or rex.WXB fistl fdivrl (bad) movabs mov cmp lods xchg cli jno pushfq push sbb decl (bad) test std (bad) adc (bad) fwait cmp fildl push rex.RX pop jo pop rorb out retq in out jnp je fcmovne outsb add fcmovnb rex.WB rex.X lock jl in mov cltd pushq xchg xchg xchg ficompl cmpsb adc cmp fbld push jae pop sub push sahf fadds (bad) (bad) mov icebp sbb rex.W jl retq (bad) jae (bad) sub push sub xchg sbb mov adc jne jnp (bad) rex.X lock leaveq mov rex.WR lods xchg jns in lret jnp jmp pop jg (bad) test (bad) mov repz imul add or (bad) rex.WX fwait rclb (bad) xor sbb and fstpl xchg adc stos movabs cmp addr32 and mov jrcxz rex.R or (bad) fnop out lods fimul rex.RX movabs (bad) and fwait negl add (bad) movsl xchg jge push mov cmp xchg (bad) lret je out (bad) mov pop loope mov ss rex.XB stos mov movabs mov jle mov sti loop adc pop rcrb clc nop test stos rex.R push sbb test cs push sbb pop push cmp in jo cmp cmp (bad) sahf (bad) loope ficomp pop sbb push pop callq fcoml xlat sub rex.R (bad) jno xchg jmp rex.R sub pop imul clc push (bad) mov mov (bad) fwait clc sub (bad) cld adc jbe pop cld push sbb jno lret (bad) iret (bad) fwait (bad) repnz fisttp sarb mov jbe mov push (bad) rex.WRXB lahf add jp jrcxz,pn xchg sahf add iret cmp pushq js xchg jg push and pop xchg mov sub stc pop fist (bad) scas rcrl out (bad) adc mov push fstpl lods and sbb cmp (bad) sub scas sbb adc and cli mov mov fsubl sbb (bad) pop xlat addr32 jns xchg cwtl lock (bad) addr32 retq xchg push loopne ss test or (bad) (bad) pop jae jmp and movslq (bad) or (bad) (bad) sub cmp (bad) cmp sbb push (bad) pop xor rol rex.RXB rex.RB (bad) es (bad) push mov rex.RX gs nop sti (bad) mov stos (bad) mov (bad) jbe pop pop ja jp pushfq mov mov push (bad) cmpsl rex.WRX fwait cld lods repz addr32 cmp decl movabs mov sbb fsts adcl leaveq rex.WX cld ficom sbb xor insb (bad) and jno hlt pop scas (bad) xor sub ss test mov push push lret sbb retq xchg push cltd (bad) ja,pn and jbe lret xor sub mov (bad) xchg (bad) jnp and lret pop iret add xchg sub sub test push (bad) (bad) push movslq loop (bad) jmpq (bad) xchg rex.X stc xor push mov and movabs cmp xor (bad) lahf rex.WB pushq insb adc mov jb adc jne (bad) test incl insl (bad) push lret movabs stos (bad) (bad) xor or (bad) pop lock cli test andb rex.WR pop fisttp pop and sahf rex (bad) mov pop sbb or xor leaveq jle cs repz jne push rex.WRXB vlddqu mov out fistpl rex.WRXB adc mulb (bad) popfq mov xchg ss push lret or mov mov (bad) mov rex.RX fsubrs pop (bad) mov rcll jg cmc rex.WR mov jo sbb data16 (bad) or rex.W rex.WRB rex adc in movslq lods fcmovne fwait xchg mov fcoml fildl xchg sbb jp fistpl mov (bad) and (bad) fucomi and rex.XB iret xchg (bad) pushq decb insb nop fisttp ss (bad) repnz sbb rex.WB rex.WRX loope adc out sti and shll sbbl mov movsl xchg xchg sub (bad) mov test insb and sub retq mov jae fisttpl push rex.R pop jb xchg fstpt rex.XB rex.WXB outsb jle (bad) (bad) (bad) in rex.B fisttpl lea rex.X pushq cmp xor (bad) sub sub and faddp (bad) rex.RB mov fisubrl (bad) (bad) (bad) pop (bad) cmp adc xchg jmpq push (bad) imul callq push xor mov fsubl pop rex.XB mov cmp rex.WX (bad) (bad) icebp jbe test cmc pop fsts int3 and or and (bad) lock shrb mov negl pop push flds adc rex fwait addr32 retq lret jle rex.WX jge xlat rex.RB jmp int cwtl ss fdivr loopne lret (bad) sbb js lods leaveq (bad) rorb fbld mov push sub (bad) movabs (bad) cld (bad) cmp pop pushfq jle mov mov push mov sub sub rex.WX pop fsubrl add cltd addr32 pop xchg (bad) or repnz (bad) rex.RX xor int3 jno adc (bad) pop insb mov mov push push jno pop xor (bad) mov addr32 or mov jns sub std add loop mov in mov cltd (bad) outsl fs es fadds stos mov inc jle rex.WB fwait jrcxz nop callq sub sti lret (bad) (bad) pop mov pop rex.WRB jg movslq rex.WRX pop push sbb outsl pop adc cmp push incb leaveq xchg xchg adc rex.B adc mov (bad) int3 stc push cmp pop pop repnz and (bad) rex.WXB add rex.WR rex.WRX rex.WB jnp gs (bad) out mov test cmp loop xchg (bad) xchg rex.WXB rex.WRX sbb movabs (bad) testl jae mov in cli repz mov scas (bad) lret decl mov in in addb fcmovnu mov imul es (bad) mov (bad) addl test es flds movabs sub mov sbb cmp hlt cmp add xchg (bad) cmp (bad) rex.WXB add fistl out add (bad) sub pop je clc in std outsl movabs mov pop sub jno sbb (bad) int sahf jae sub nop pop mov xchg jnp loop loope push fcmovnbe rex.WB jge popfq (bad) jnp mov rex.WB movabs jo mul pushq lret xor pop iret sbb cmp cli (bad) jbe jg gs (bad) xor (bad) xchg or imul lret jo fnstenv or mov xchg fmull (bad) rex.WRXB test cmp out (bad) adc movabs (bad) adc cmp pushq mov insl pop stos mov push shlb out sub scas cs rcrl popfq (bad) rex.XB rex.WRX fsubl shll fistl cmpsl (bad) xchg cmp lods rex.WXB rex.WRXB cli cmp clc rcll adc (bad) jo jge pop movabs int3 sbb sbb push cmp movabs pop nop xchg add (bad) jae rorb movabs lret cmp retq shrl mov (bad) mov stos cli rex.RB (bad) stc (bad) fcmovnb and (bad) rex.R sbb divb insl and cmp pop fcmovb jmpq sbb je out fcmovnb jne jmp fcomi test outsl retq test fstpt (bad) mov pushq add (bad) jb cmp enterq mov (bad) in rex.WRXB and xchg jmpq mov rex.WX pop retq movabs (bad) (bad) sbb xor (bad) cli add cmp cmp (bad) (bad) mov pop jb rex.WX adc repz pop (bad) xor (bad) (bad) idivl or mov sbb ficom addl push pushq push (bad) sub jle fadds cmp rex.WR (bad) (bad) rex.RXB jg xorl xchg (bad) not cli lea (bad) clc retq fldenv fiaddl cmp pop fistl cmc popfq (bad) movabs int frstor (bad) push gs fiadd cmpsl and pop (bad) fwait xor gs (bad) (bad) mov rdmsr mov push push jge sub rex.RXB sbb pop and enterq xor (bad) jge jl callq (bad) or (bad) jne movabs callq scas xchg loope adc sbb push insl (bad) (bad) xor push js rex.WRX in fs fistl mov in fstpt popfq jle push rex.X fildl jge (bad) fcmovne sbb jbe loop push stos xor (bad) add jo gs push rex rex.RX fcmovnbe jbe (bad) (bad) (bad) fistpl out jae xorb mov mov nop std scas sub test out lea pushfq stos (bad) test xchg repnz xchg mov mov lods adc retq insl sub out stos pop jmp gs sti push sbb mov imul rex.R rex.WB mov loop fnsave sbb pop mov jl sub (bad) pop xor pcmpeqb (bad) loopne rex.R pop rex.R int3 push (bad) rex.WB in pop cli sub push mov xchg (bad) jl movabs (bad) hlt push adc xor and sahf (bad) hlt or fwait mov adc lea adc fstpt sub xchg mov mov mov pop in xchg fcmovnb jg (bad) in popfq insb add addr32 mov out xchg sar imulb push xchg or out push or adc movabs addr32 lret pop mov in out imul fstl ficoml clc push out adc pop enterq sbb jnp callq jns retq jle cmp (bad) jp jp sbb sahf sbb hlt (bad) push sbb lea sbb add cmp sub jg cs test ds icebp int (bad) (bad) (bad) nop (bad) movabs test add (bad) mov cmp leavew mov insl xchg imul jno rex.WRXB rcrl (bad) pushfq add add (bad) pushq fcmovb (bad) push (bad) push (bad) fs mov rex.W leaveq retq (bad) movabs repnz ds imul popq popfq fstpt xchg cmp jns out xchg jp cmp movabs cmp (bad) jp ds xor mov cld fistp jo or loop fistl cmp sbb jnp divl outsb icebp mov add mov or fiaddl iret fistl xor test (bad) or fcmovne xchg add rex sti iret fcoms rex.WB rex.RB fildl fs mov rex.WX and pop outsl cmp xchg add cmp mov pop ror (bad) rex.WB rex.WR cld (bad) (bad) mov xchg jge in or cmp rex.WB rex.RX (bad) or imul jno and gs fistpl adc rex.XB or (bad) pop adc mov (bad) rcll sbb rex.RB (bad) leaveq pushfq test push add (bad) mov pushq (bad) movslq push xchg push lods mov rex.XB out ds pop (bad) mov fildl std shrl sub xchg sub retq fwait push adcl imul addr32 jne int or outsl (bad) std test mov pop lret and fst xchg push rex.WRXB gs rex.B mov mov retq push fadds lods (bad) pop imul rex insb sub stos (bad) fistpl mov xor enterq test test (bad) cmp insl xor mov and adc (bad) out sub cmp test or jle xchg addr32 mov pop jmp (bad) (bad) mov ss fstpt out mov fstpt cli stos incb in (bad) rex.XB cmp mov stc movslq pop mov shlb int mov lret fstpt rex.WB sahf (bad) jo cmpsb (bad) rcr push mov pop fldt ds xor jl rex.B rex.W outsl sbb movb jne pop fucomi add or push push fildl mov iret mov fildl jrcxz test (bad) out (bad) adc (bad) (bad) pop and rex.WRXB jnp fildll push xchg (bad) pop mov (bad) pushfq lret (bad) stc in test fneni(8087 or cmp fcmovnb leaveq outsl and jp loop enterq pushq pop (bad) mov xchg xchg fcmovnu movslq fnstcw pop ja pushq (bad) shl pop rcll pop cmp retq insl push jae rex.WXB (bad) out fstpl sub gs adc mov xchg and adc cltd (bad) sub add push cli jae pushfq imul sahf data16 cs addr32 rex.WRB mov pop add mov mov adc xchg rex or sub mov (bad) cmpsb cld cmpsl addr32 imul loopne iret push xor lock and mov rex.WXB sub mov xor xor (bad) mov pop sub data16 cmpl add pop mov or mov push adc mov sbb pop out jo mov stc iret xchg pop adc movabs sub pop sahf and (bad) adc sub (bad) mov int3 add int fcomps loop xchg pop jrcxz jns pop (bad) sahf cmp (bad) sub in (bad) hlt rex.RXB out mov (bad) callq adc jb (bad) xchg and sub test xchg iret (bad) repnz test xchg and xor out mov fsubr and leaveq cmpsl sub in or xchg outsb (bad) movabs rex.XB mov fimul (bad) mov push (bad) pop rex.RB rex.WRXB (bad) xor sahf lods (bad) fcmovb rex.WB xlat lret cld scas repz fwait add mov mov movabs cli or retq mov or xchg xchg fstps rex.WRXB cmpsl push xchg push sub jne movsb pop pop xchg cmpl (bad) in loop repnz pop test pop adc insl popq cmpsl rex.WR jp xor (bad) jle fdivr xchg xlat mov mov and mov or sbb jmp lret jmpq jns cmc jp popfq (bad) retq loope and and and rex.X rex.WRXB mov fdivr sbb (bad) test sub pop rex.R xor sub xor movsb stos js sub mov mov movsl push rex.W rex.WRX pop sub or adc loopne stos cmpsl (bad) iret (bad) mov and sti cwtl rex.WRX insl mov push test mov sbb idiv (bad) fmull (bad) (bad) mov xchg (bad) addl iret (bad) jbe shll rex.WRXB sub sbb popq fs pop or mov xchg fdivp sub pop cld pushq (bad) or retq (bad) mov out sub shlb rcrb outsl notb sti mov pop enterq (bad) mov cmpsb rex.WRX shlb or xor fistpl sbb (bad) fstpl sbb xlat mov jnp pushq mov mov lret rex.RXB mov adc stos (bad) pop rex.WXB leaveq mov add imul retq test xchg int adc cmpsb nop jle xorl sahf (bad) push fs mov cmpsl fadd (bad) fcoml std pop out int3 or cs pop rex.RB jne (bad) (bad) sbb cvtdq2ps (bad) retq stos mov push rex.R and es movsb nop (bad) xchg loop ja or mov stos (bad) cmp jns (bad) clc push sbb fstl pop add mov ja xchg (bad) ds (bad) int3 mov and xor pop shrb (bad) jne mov mov adc fstpl adc xor orl movsl fldt jl pop fistpl fstps cli fucomip lock and iret not rex.B cs mov jbe sub fcomi movsl test cmpl pop xor popfq (bad) gs xchg fstpt pop rex.WR data16 cs sub (bad) data16 movabs movabs jle fucomi ror hlt (bad) and and cmp push mov add callq adc (bad) (bad) mov incl (bad) out movabs rex.B rex.R jno sub movslq sbb add xor imul rex.WRXB ds addr32 rex.WX mov sbb xor pop push mov loopne mov jnp iret xor push rex.X rex.WXB fidivrl xchg jnp out xor rcrl pop and enterq rex.WR rex.RB (bad) sbbl fcmovb jg (bad) (bad) repz hlt jrcxz adc hlt mov mov jbe rex (bad) jnp test in mov xor jmp (bad) cbtw mov je add shrb cmp sbb mov in push int3 push mov movabs imul push getsec adc lret loop fstpt cld mov push pop xor add mov or sub ffreep sbb movslq rex.WR retq sbb (bad) fistpl (bad) hlt (bad) (bad) mov (bad) ja mov jmp mov sahf push xchg (bad) sub rol (bad) fildl addl push (bad) adc xchg pushq rex.RX sbb jnp leaveq stc (bad) icebp push xchg sahf int3 jb retq push mov jl ficom mov ds fs fcmovnb xor clc insb mov (bad) mov fwait ss jp lret fmuls (bad) fistl adc fistpl loopne add push xchg fldt (bad) xchg xchg (bad) jle retq jo ds insl mov pushfq fistl int3 pop data16 movabs push rcrb rex.XB cmp adc test mov pop mov xchg xchg rex.B rex.WB rclb jne fwait jmp loope cmp outsb test rex.R rex.X xchg repnz out fstpt (bad) cwtl cmp mov nop fldt or rex.WXB movabs rex.WRXB rex.WRB lods (bad) rex.RX retq push data16 xorb xchg cwtl (bad) sbb cmpsb (bad) movslq cmc fistl cmp (bad) or cmp xchg in (bad) or mov fcmovbe int3 cltd fcomi in adc jmpq (bad) rcll (bad) fdivrl retq cwtl addb stos sar subl (bad) pop xchg jle adc cmp cmp mov cmp jl andl popfq pop fildl nop sbb rol sbb mov outsl fstpt (bad) mov mov mov fldt sub movslq fcomps cmp (bad) adc cs pop shrl cltd rex.R fistl rorb out push (bad) or (bad) sub pushq int rex.WB rex.XB cmp push (bad) loopne xor xor mov (bad) in lea cli xor mov (bad) sub pushq rcrq pop mov ficomp (bad) mov sub mov imul mov lret fcmovnbe movabs (bad) loop (bad) (bad) mov retq (bad) lret sub sbb pop rex.WRB cmpsb ficoml add outsl add sbb out retq fildll jo cmp (bad) push (bad) (bad) (bad) scas subl add loop mov push pop (bad) test fwait add out push retq push and ss or sub test (bad) push sub pop or cmp sbb and pop add rex.RXB jge (bad) rex.B (bad) (bad) movsl jno add fildl cmp cmp mov and sahf cwtl pop push xlat adc or or mov (bad) pop fwait popfq insb jp mov std fstp xor ficompl icebp movabs stc rex.WB sbb mov rclb mov cld push (bad) jne mov sub and and lret and rex.WR stos js (bad) cwtl cmp xlat jl xchg cmp push xor pop ficoml jns lea and (bad) iret callq and lahf add retq in loop cltd sbb pop pop push push fsts rex.WRB loopne ja pushq jb mov jns test jns incb sbbl and jo fmuls adc sahf roll pushq out rex.WR rcr popfq rex.WX mov or pushq push xchg invd stc ss (bad) imul push mov xor loope and repz xchg (bad) cwtl mov rcrb sub xchg mov mov repz xchg mov pop mul rex.R cli adc fwait add lock xchg psubd addr32 (bad) shlb xchg push (bad) lods mov or adc cmpsl xlat rex.WB fcoms xor rex.RB push (bad) or faddl rex.RB rex.WRB addr32 (bad) rex.WX pushq xor fistp sbb push (bad) addr32 sub test mov jg (bad) mov (bad) or cmpsb or stos jmpq (bad) fsubrl pop cmpsl (bad) mov pop addr32 push xchg (bad) sbb cmp jne (bad) rex.B (bad) xchg fs fnstenv pop std movsb repnz xchg or mov (bad) or xchg icebp push push (bad) lahf pushfq add loope (bad) jo jnp clc lret adc test mov (bad) lods (bad) fistpl (bad) push test je (bad) cmpl (bad) int pop fildl mulb pop hlt int3 sbb jnp rex.WRB jb or nop rex.X mov lahf retq xchg jmpq in int3 test fistl pop movb repnz pop pop vcmpps fwait jbe,pt cmpsl pop mov clc (bad) jl add or imul fstps fwait lods pop rex.R (bad) adc (bad) rcrl pushq push add movabs scas movslq loope or rex.XB gs mov clc fucomi retq cltd push pop mov sahf pop and jno jl repz (bad) xor (bad) pop sbb hlt (bad) adc fistl xchg cli adc (bad) jne in cmp (bad) loopne fistpl push rex.W and add adc gs cmpsl (bad) mov rex.WXB insl push push (bad) stos jmp sbb enterq or hlt neg in rex.RB rolb push (bad) outsl (bad) test callq pop pop outsb cli repz pop cmp (bad) or scas pop or or push rex.WRB cmp test sbb cmp sbb or loopne rex.XB xor test sarb popfq push cmpsb mov jnp stos mov sbb or push mov (bad) add push jnp rex.X mov fdivrl adc pushq (bad) (bad) mov lret cmp or xchg in lahf lahf pop cmp (bad) icebp adc add jmpq adc outsb addr32 cmp (bad) (bad) xchg (bad) (bad) outsl fcom mov sbbl (bad) maskmovq mov cmp add popfq fistpl out mov (bad) adc xchg cltd enterq (bad) (bad) jl cmp add scas (bad) and int3 sub stos sbb cmp (bad) fildl jge xor push (bad) fildl mov movslq adc pop fistl rclb (bad) movslq insb (bad) push rex.X lods add rex.XB sbb in (bad) sub pop fildl fisubrl adc sbbb jae mov mov pop cmp pop mov rex.RX repz loope iret xchg fcoml jg fildl pop jnp cmpsl mov rcrl pop rcrl fucomi repnz jrcxz pop rex.WXB movabs jp sbb or xor int3 movsb cmp jae xor and out fstpt rcrb rex.WX rcr and scas jrcxz std fistpl lea in or out push sarl or in push pop fimul add (bad) sarb sti (bad) (bad) pop (bad) repnz or xchg and pushq out cs push fldt leaveq retq movsb (bad) mov (bad) mov mov mov pop lret ficoml int3 std cmp sub or movabs test add rex.WRB cmp pop (bad) test addr32 xchg andl jnp je and mov movabs adc pop adc push mov xchg (bad) or add adc push out mov cmp add and push pop lea sub out push popfq pop fistl movabs (bad) xor fist mov xor movabs cmc out loopne pop rex.XB movabs xchg mov (bad) pop jmp and mov add cmc fstpt mov movabs sbb mov mov pop xchg fistpl or xor sub (bad) xchg fistpl es (bad) addr32 fistl (bad) lock retq subl push jle (bad) in pop fistpl test pop lret enterq repz gs or adc test (bad) fucomi cmp add sti es je (bad) xchg (bad) (bad) movslq outsb fisttpl (bad) (bad) ja xlat mov jne rolb fistl nop or mov push fldt loop fisub fldt push or rex.B rex xchg (bad) (bad) cmp repnz cmp stos outsl movabs vmovdqa cmp insb fsub cltd (bad) je fcomi gs (bad) xchg cmp (bad) sbb adc jnp push test enterq lock pop test mov jnp (bad) iret jg stos sbb roll jmp (bad) fwait outsl rex.W (bad) fcmovnu cmp mov cmp add pop xchg mov sbb push test out sbb add sub and jno or xchg (bad) cmpsl cmp movsl cmp mov mov (bad) pop and outsb fwait and xchg jnp rex.XB adc xor out movsb sbb mov xor mov rex cmp adc out fcmovnbe jmpq (bad) cmc fldt (bad) add neg je rex.WRX repnz fcmovnu rex.RB gs cli sub add xor movabs cli retq loope add pushq cmp xchg jp fidivrl nop cmp jnp or rclb movsb mov jl movabs pop mov and scas lret pop or stc movsb pop mov fldt popfq xchg jae xchg nop sbb pop jne push test cld (bad) enterq pop jnp cs lock pop mov (bad) pop (bad) sbb jae pop xchg fcomps fistpl and mov lea shl mov rex.WX (bad) lock fistpl (bad) movabs movslq mov add rex.B xor rex.RX sub imul sti push jnp shll (bad) (bad) (bad) sti cmp (bad) sbb mov in mov jp callq fsubs cmp pushfq xor (bad) jne iret rcrb sub movabs xor int3 (bad) fwait (bad) and pop cmp imul mov out (bad) pop push mov or pop sarl (bad) xchg pop rex.RX lea sti lret loope (bad) rclb add rex.WRX loop ds (bad) xlat and xchg jb pop sar (bad) fisttpl retq cmp (bad) adc push rex.RX gs (bad) stos jrcxz (bad) pop sarb pushfq rex.WRB (bad) mov icebp mov movabs and scas jno rex.R mov ja fcmovnu push cmc or fidivl int3 pop (bad) mov cmc sbbl ja out popq cmc jae (bad) pop mov fcoml rex.WR (bad) xchg fisubl fistp rex.XB fsubr adc repz (bad) ja rex.RB jp leaveq xchg fisttp sub imul pop rex.RXB push push test outsl ss cmc shr fistpl (bad) int ds in fcmovne add neg (bad) movsw (bad) jbe sbb fs mov enterq rex.WRB test fwait jno rex.B fsubr fcomi rex.R int3 lock (bad) (bad) sub loope fstpt insl xchg mov rex.RB mov xchg push test sbb nop cmp lahf rex.WRXB (bad) (bad) popfq (bad) movabs in sbbb lahf (bad) insl push cmpsb mov (bad) xchg sbb (bad) and mov push sub stos push imull (bad) sub callq add fistpl outsb xchg mov xchg sub cwtl jo jmpq fdivl fidivrl (bad) loope icebp add fildl imul rex.X (bad) mov push xor lahf int rex.RXB fstpt cli add lock sub pushq (bad) leaveq xor jg ja or jae fs cmp fcomi (bad) (bad) gs xor fistl rex.RX pop fstpt xlat scas mov (bad) cltd retq xor sbb mov (bad) cmp (bad) push pop pop std or pushfq jae (bad) sub retq sub rex.X movabs addr32 xor fcmovnbe xchg pop adc andl rex.B sub lods mov in movabs orl push ss or push sbb rex.X push rex.RB test mov xor imul xor mov mov fnstcw (bad) adc xlat xchg (bad) rex.RXB popfq mov (bad) (bad) imul mov int adc jnp sub out fistpl push pop retq rex.RXB rex.W or mov (bad) xor callq sbb jp movslq (bad) (bad) pop (bad) xchg push imul scas mov jrcxz je mov jp callq jge movabs rex.RX test out popfq gs jmp cld hlt push fistpl fdivs or jne jp es lods sbb add adc and (bad) push or stos stos lahf movsl push movslq fcomi mov mov popq (bad) jle push fcoml push add mov nop mov lret jmp out lods lods mov cltd mov fstpl sbb ds out imul scas push out or movabs sub jo stc jmp sbb rex.RB ds and rex.XB in jnp (bad) out scas faddl xlat or (bad) xchg addr32 cs addb xor stos or in movabs scas fiadd (bad) (bad) imul fnstsw mov mov rex.WX adc test mov (bad) fdivl pop mov sarb sbb fdiv lret rex.WR xor (bad) xchg sub bnd jp imul sti movslq and (bad) cmp pop push rex.B or fnstsw (bad) fcomp lods outsl sbb test jge mov paddw cmp sub clc je (bad) sbb enterq lcall xchg (bad) rex.WRXB or mov (bad) fadds (bad) mov hlt fadd jg cld pop sahf jrcxz out rex.RX mov add push rorl jrcxz rex.WXB pushq fstpt sbb pop sbb imul fcomi push (bad) (bad) (bad) in repz fldt lahf outsb and rex.WRXB adc pop xchg mov sbbl (bad) rex.WRB xor rex.WRXB je movslq pop cmp cmp movabs pop (bad) or in orl ss mov test (bad) sbb lods (bad) or in and rex.X jno add sahf xor gs xchg lods sbb in rex.RX (bad) sbb lods rcrl out fldenv pushq je (bad) rex.WRX and cmp cltd xorl or mov stos xchg mov scas (bad) ds fstpt sti (bad) in stos (bad) mov lret movslq test imulb pop push pop fwait outsw mov insl sub mov add addr32 (bad) xor and push (bad) cld pop jle movslq data16 sbb jbe jl addr32 movabs sub pop lods mov add mov push jbe mov xor mov ss outsl (bad) scas mov flds (bad) rex.WRX (bad) (bad) xor (bad) neg out out (bad) (bad) inc push stos mov mov xchg rex.WRB gs xchg (bad) mov scas cmc stos mov retq sbb (bad) push mov cmp icebp (bad) or sbb cmp jbe imul pushq je (bad) and fiaddl mov int jnp scas xlat popfq fistpl rex.WRX (bad) pop or cmp jb sbb fsincos out (bad) (bad) movslq (bad) fcmovu pop (bad) jo push movabs pushfq (bad) fildl mov or pushq xchg jae rcrb jrcxz (bad) neg cmp rex.WXB mov and scas push (bad) shrl in movabs cmp add or cmp rex.B loope,pn sbb iret in push rex.XB clc ss (bad) insb (bad) in pushq mov (bad) int fwait rex.XB lret and pop xchg mov ds jnp jle pop cmc push cmp rcrl push int3 (bad) sub retq cmp xlat rex.WX imul repnz movabs pop rex.WRB insb cltq (bad) mov fcmovnbe (bad) push (bad) lods xchg data16 fcmovne pop fmull add sub ror (bad) pop push stos retq pop sbb add jl int3 (bad) pmullw outsb loopne push pop (bad) rex.WR mov pop insl sbb (bad) repz xchg pushq pand push int fs fistl push outsb jl addr32 (bad) mov fisttpl test cli (bad) mov pushq and fdivrs cmp ror xchg insl data16 push lea pop push sbb mul mov (bad) hlt cmpsb cmp rex.WRXB cmp adc xorb rex.WX iret sti (bad) rex.RB (bad) fcomi cld adc movabs mov push fildl adc and mov push icebp scas pop pop rex.WRB xchg sbb add pushq push stos (bad) rex.XB adc fildl jo callq nop repz fcmovne push retq (bad) data16 outsl rex.X cmp fmuls and mov xchg push (bad) sub (bad) stc rex.B adc rex.WRX ja imul (bad) movabs rex fistl xor or shrl jp or int lods (bad) mov (bad) (bad) rex.WX cmp lods ds rex fwait and (bad) fidivrl (bad) sub rex.WRX mov ficoml js jle flds mov xor fwait (bad) xor (bad) (bad) (bad) rex.X mulb fwait add rcrb lret cmp clc push movslq sar (bad) rex.WXB scas rex.WRX movsl xchg xchg movabs ja fldt retq fldl insl xchg btc rex.W pushfq insb (bad) callq movl adcl js fwait xlat stos (bad) fcmovnu xor (bad) pop xchg push (bad) push mov fidivr fisubr in pop adc (bad) ja (bad) mov rex.XB rex.WRXB in cwtl mov pop xchg adc mov xor outsl rcrb jns xchg add (bad) and mov stos out clc scas std pushq scas cmp adc xor fldcw pop adc movabs cld xlat (bad) jrcxz rclb (bad) (bad) fimul cmp cmp xchg jp (bad) int lock flds jo pushfq rol rex.WR (bad) (bad) gs rex.WRB es fisubr outsb gs (bad) xor sbb fucomi pushq jns in shrb rclb pop imul int3 jp int3 imul pop xchg outsb out test popfq sbb add fistpl negl rex.X (bad) jmpq mov fidivrl sub fwait pop ss fucompp rex.WXB cmp sub test fsubrl mov push in loope (bad) add mov xchg push fwait xchg (bad) (bad) mov lahf outsb rex.X lock push subl popfq pop ja (bad) xor (bad) adc scas lods or add xchg fistl cwtl gs (bad) rex.XB adc (bad) (bad) and adcl sahf movsl fwait pop fistp (bad) fisttpl loope cs ss addr32 pop outsl (bad) in xor cmp jne jne mov or sbb fsubrl (bad) hlt leaveq or loop movl push xor mov ja jmp fildl lock (bad) fsubl (bad) (bad) adc fistpl (bad) shlb or adcl cmpsl xchg int3 pop pushfq jle repz xor retq pop rex.X (bad) stos movslq (bad) mov and xchg jne mov (bad) test (bad) (bad) cmpl cmp jge lret xchg cmp mov rex.RXB ds in sahf jmpq out enterq xchg pop xchg mov mov xor (bad) jbe pushfq scas loop scas pop outsb movabs cmp adc adc rex.WRX stos decl xchg jnp std out retq (bad) xchg add (bad) cmc jae repz fucomi setbe mov (bad) pop fildl mov (bad) jg fcomi test rex.WX xor cmp (bad) movslq lock xchg xor insl sub retq cmp cmp cmpsb pop mov jnp sub icebp cmp ss callq enterq movsl xor movabs (bad) sub pop push (bad) and mov cmovp sbb mov stos jmpq idiv push lret lahf out fldcw adc (bad) rex.X out sub cltd push gs (bad) jmp xchg scas push rex.WB lock mov push gs loope rex.X (bad) hlt fadd repnz lfs loop pushq jp pop jrcxz rex.WX fwait outsl add pop jge cmp push pop packssdw cwtl (bad) mov and xor cmp pushq (bad) add adc loopne jmpq xchg mov and and shlb (bad) scas imul sub xor fistl add rex.WRX adc (bad) movsl sbb shrl xor outsl (bad) in ja mov mov or test data16 in (bad) mov rol shll pop fsubrp jmpq insb fisttpl scas movslq (bad) rorb (bad) data16 rex.WR mov callq xor sbb (bad) fidivrl fisttpl out mov cltd sbb (bad) cmp lret (bad) repz cs mov sahf xor fs jne xchg je (bad) fcomi mov rex.B sub addr32 imul rex.WXB xor js cmp (bad) fildl mov xor enterq test rolb mov (bad) pushq rex.W mov sub out outsl push movabs mov fistpl rex.WRXB bnd rex.W int mov (bad) adc and push mov jmpq enterq sti sarb rex.WRX jae (bad) mov mov testl push and movsl jle lahf adc fdivr jg (bad) mov sarl cmp sub retq xor xor int outsl fdivrl loop lret fwait outsb jne xor push sarl rex.WB rex.WB addr32 in push xor out fildl or mov (bad) jae (bad) in movsl cmp rex.WR rex.WR sbb sbb test outsl adc fistpl rex.RX retq add xchg or jp xor sahf push push mov imul repz cld pop mov (bad) rex.RX in imul stos push movabs push pop stos outsb shr (bad) mov out fidivr mov xchg pop testl (bad) (bad) xchg xchg fldt jno ja,pt in rex.WRXB movabs pop rex.W movabs xchg pand or outsl rcr xor test (bad) mov fistpl movsl (bad) out sahf (bad) mov leaveq (bad) jmpq fwait (bad) cmp in mov int3 fistpl mov xchg mov mov cld imul pop std and jns rex.WB (bad) out or add cmc push movabs xor imul fildl sbb test outsl movabs sti (bad) ja (bad) sbb jmp jrcxz or test mov xchg outsb icebp rcrl (bad) out jge pushq mov in test xor rex.R adc (bad) push xchg in out (bad) pop rex.XB mov (bad) (bad) pop adc xchg clc test rex.R (bad) add sub gs cmp movabs fbstp stos lahf lret push pop outsb push shrb (bad) fisttpl xchg lret sbb push stc cmpsb pop out fldt imull sbb xor (bad) xchg rex.WRB lods fildl jne out imul mov jns push retq cmp in icebp pushq pop fcmovnb cld (bad) movsb pop fstpt add pushfq xchg adc movabs clc fiadd mov mov sahf iret icebp xchg mov lock sbb loopne (bad) (bad) mov rex.WRB jge nop xchg jge pop xchg push (bad) mov (bad) lods cmp fs or out imul out xchg adc sbb rex.X jrcxz jnp imul jp rcrb addr32 fwait (bad) (bad) jg lret out fisttpl (bad) lods (bad) xor xor fldt int3 pop movslq pushq mov in in cmpl push xchg rex.R fstpt (bad) cwtl rex or adc mov sahf fildl movsb jnp (bad) rex.WXB cs (bad) pop scas fistp and movslq (bad) lods pmullw (bad) (bad) rex.R (bad) pushq xlat out mov pop cmpl cli stos xor outsl rex mov js (bad) (bad) xor xchg cwtl cli rex.RX fsubrp sbb sub pop mov mov jnp idivb out jrcxz mov jrcxz xlat pop fdivs lret mov rex.R (bad) (bad) insb sbb rex.W cmp icebp movsl sti xchg fdivrl in retq pop (bad) cmpb cmpsb and rorb (bad) mov out xor repz andl lock imul push jo mov add (bad) (bad) js (bad) rex.WRXB add adc lods push out iret fsqrt sbbl sahf std mov adc xor fnstcw insb (bad) (bad) (bad) adc andb insb (bad) (bad) xchg scas sub sbb xlat jnp (bad) mov fcoms rcl jrcxz add jno loopne loope adc loop and movabs add (bad) mov xchg cmp sbb fistpll sti pop add mov stos push imul or mov add sbb int3 mov movabs shll or push sub shrb ss add jl rcll shll sbb xlat (bad) jp (bad) jne lods cmp mov sub xchg cmpsl mov outsb insl jg fistl lock clc lods mov sbb sub jmp fcmovnu add add (bad) (bad) (bad) rex.WRB fldt jo xor jbe mov fildl mov rex.WX stos (bad) add mov clc (bad) sbb mov mov fisttpl lret movsb notb fucomi xchg scas test (bad) adc ss mov push out mov pop movabs stc or cmpsb int3 cmp retq fs and repnz (bad) cmp cltd xor fwait mov adc (bad) pushq ds shlb fistpl xchg nop jl cwtl (bad) fwait insl mov jne lret movabs (bad) fstpt loopne rex.WRX push xchg cwtl xlat jle js adc (bad) rex.WRB (bad) fidivrl push clc cmpsl xor push sbb test cmp and out mov retq xor fldl lahf push xchg pop xlat adc (bad) rex.R lods mov jb sarl mov jge fxch (bad) stc xchg rex.WX mov (bad) loop (bad) fidivrl test xchg jo (bad) fldcw or (bad) jo pop pop adc fwait movabs mov (bad) sahf cmpsb adc movabs (bad) xor xchg xlat (bad) jge ficoml (bad) xchg pop mov ficomp (bad) xlat rex.B push lahf and retq outsl rex.RX insl xor rex.RXB divb (bad) pop xchg xor int3 icebp fcomp mov rex.WRB jns (bad) fstps (bad) (bad) cs rex.WRXB push scas adc rex.RXB sbb callq jrcxz pop insb fist xor lock rcrb (bad) sti jb sub incb fwait rex.XB rex.X add (bad) xor in js mov insl (bad) pop mov (bad) (bad) sbbb lods out and fwait callq cmpb gs sarl jg rex.RB test out shl pushq cwtl fstl pop cmpsl pushfq mov rclb movsl dec fsubs (bad) mov jg add mov in pop xchg cli xor movabs in push sub push sbb sbb cltd adc out mov in xchg cmc cmpsl adc in xor (bad) sub jbe fcomi iret rex.X fwait xor (bad) insb cli push je test lods out xchg xchg fistpll mov rex.XB rcr pop movsl or pushq xor (bad) pop (bad) lods leaveq lahf mov sbb loop,pt (bad) outsl xchg movabs lret sbb cs (bad) sbb int3 insl sub mov retq xchg mov shrl jg or xor mov and out sahf jno push mov sub out rex.XB and mov test push push cltd or (bad) or jne gs (bad) (bad) icebp cwtl adc repnz pop in xchg lahf mov mov pushfq mov lods imulb imul xchg mov shlb loope xchg rex.WRXB mov insb push pop loop cmp addr32 xchg loope or pop (bad) (bad) mov or (bad) mov rcr mov (bad) pushq jp sbb xor clc cmc fs xchg xchg lahf mov jmpq (bad) mov xor fsubrs add enterq cmp vmovsd adc push addr32 jnp shr shrl jrcxz leaveq insb pop xchg or stos or xchg (bad) rex or outsl jo and in movabs (bad) lods jns cmc int3 pop outsl sub repnz push ficoml sub mov lods mov mov cltd push xchg clc jle imul movabs add sbb mov push xchg xchg sub fnstcw adc (bad) mov (bad) in rcr or sub retq cwtl (bad) jnp pop sbb out cld lret xor sbb add enterq push rclb orl in or xchg pushq or push jb rcr ds rex.B bnd mov (bad) sbb jp pcmpgtw and sbb callq mov insl mov mov rex.WX xchg sub cmp jo imul hlt (bad) jmpq fistpll imul sahf callq test xor hlt mov fdivp pop jg rex.R rex.XB adc mov xchg or ffree sub in rcll sub or pop addr32 nop or add xchg fucomi test rex.WX fisttpl movsl mov lahf sub pop xchg (bad) loope rex.X add cmp fmul fadd out fistl addb callq adc rex.X insl mov roll notl adc mov repnz jmpq rex.WR or adc fildl cmp (bad) movb pop sub xchg fiaddl (bad) repnz rex.WB rex.WRX (bad) cmpb fisttpl lods cmc add mov or (bad) (bad) add sbb ja gs shl cwtl mov fcomps (bad) push mov or divb rex.WR or loop in pop mov mov jne fcmovnbe icebp push je adc pop mov or lods mov mov mov rex.RX sub and sbb retq addr32 jns pop or (bad) adc leaveq cmp repz fldcw cmpsb pushfq push cmp xor adc fadds decl fistpl fcompl or add xchg fisttpl rex.B ss (bad) push lret (bad) pop sbb lahf rex.R addr32 or xchg movslq push push rex.WR rex.RXB fstpt out and movslq sar add xor pushq mov jne xchg mov cmp frstor adc data16 rex.RX rex.RB adc cmp fistpl fisttpll xchg push xlat fcomi stos jmpq or testb fcomi (bad) sub rex.RX or scas sub adc rex.WX ja callq lea jb fcmovb cmp test (bad) add (bad) rex jns jmp (bad) mov fcmovnb adc mov (bad) shrl and fisubl stos rex.WRXB mov pop pop out sbb push jno fldt jb (bad) xchg pop (bad) mov movabs and out (bad) clc es fcomi xchg mov cmp xchg addr32 (bad) jns fs ja fstpt xchg (bad) (bad) sub loopne (bad) repnz popfq rex.RB rex.WRX cmp and jrcxz push adc and mov (bad) hlt fildl in xlat or mov loop,pt rex.XB test and mov xor cmp insl fldt out mov fistl movabs (bad) pop cli insl add int3 iret (bad) (bad) lods or pop rex.RB xor mov xchg movabs rcrb adc ficompl pop cmp (bad) outsl movabs xor push (bad) test pushq fildl imul mov (bad) or push insb movabs outsb sub movabs rcl mov rex.R rcr mov sub lods add enterq movabs adc (bad) and pop test jae shlb (bad) retq or fildl mov (bad) orb jle orb jbe jg xchg or mov fs xor movabs cld repnz fwait jge rcrb push icebp jp sbb fisttpll in ror jno cmp add stc or pushq pop xchg or cli mov push sbb (bad) or (bad) fcmovbe mov imul retq out fyl2x jle push lods fildll xor pop push sbb test movabs test repnz andl test adc rex.W imul sarl adc (bad) sti sub (bad) (bad) jns (bad) iret iret fwait (bad) lret lret xlat rex retq mov hlt mov retq sub jp (bad) movabs movabs sarl rex.RXB lret pop rex.WRB movabs jmpq (bad) cli pop hlt retq push (bad) push rex.WB stos (bad) (bad) sbb sbb xchg cld movsl xchg jnp jg sub pop jle roll loope rex.WRX (bad) (bad) mov sub cmpsb sbbl fdivrp xchg adcl sub jmpq fcmovnbe andl fistl sbb pop sbb enterq cmp repz push jb jge cmp push (bad) movabs (bad) movsl jl pop and xchg in je popfq pop rex.WR rex.WRB jb (bad) add mov (bad) xchg pop mov fld1 lret movsb mov (bad) jno (bad) xchg enterq popfq adcl out cmp fcmovnbe rclb ja retq add enterq mov fadds and rex.WB loop subl stos xchg retq stos push cmp cltd (bad) hlt callq push (bad) (bad) mov and or lods mov (bad) (bad) (bad) mov fcomi sub adc addr32 icebp jp pushq and rex.WB xor (bad) imull or mov jl sub or xor mov mov (bad) xor iret sub repz cld movslq orb sarb jbe or lret jp mov add cmp (bad) jae (bad) (bad) jmpq jno sub mov outsl callq (bad) out pop jmp cwtl (bad) int3 outsl xor fistpl xchg imul (bad) jb sub clc in (bad) jg xchg (bad) (bad) (bad) (bad) xchg adc test pop or or fwait pop mov scas pop xor or mov cmc jne and xchg (bad) cld std movabs outsl rex.W rclb and xchg push add test (bad) (bad) stc loopne movabs std fist mov fsub iret add data16 xor fcmovu push xor cltd cmpsl sbb stc movslq outsl imul push scas movabs retq (bad) and ja (bad) (bad) js adc pop (bad) adc xor xor mov testl adc iret mov sbb (bad) sarl out in cld mov and mov loopne fwait clc (bad) callq (bad) adc rex movsl jp xchg ja (bad) pop js mov mov jle scas rex.WRB jrcxz loopne pop jns pop stos movsl (bad) (bad) movslq (bad) (bad) rex.RB add (bad) fnstcw pop ja jl pop xchg rex.RXB ficoml jae cmpl sbb adc ds sub cmovo fucomip (bad) sub rex.R rex.R jnp cmp cltd shl rex.WR mov cmp out mulb rex.WB fisubrl cmp mov push push (bad) retq stos (bad) lods imul ss pop (bad) test vxorpd pop xor mov fnstenv push test rex.WX and push adc icebp add jmp add mov fisttp xchg adc movabs pop (bad) sahf (bad) xchg push leaveq add (bad) mov pushq push out rex.WRX push mov mov lret add loope stc (bad) (bad) (bad) mov sahf repnz movsl mov (bad) jrcxz and cmpb add pushq and push add and jo lahf outsb cmp repz sbb hlt fstpt (bad) or rex.WRX shlb add push sti in fcmovnu xor sbb xor repnz cmp out cld (bad) flds pop div jnp xchg push (bad) jg insb fistpl xor cwtl xor xor xor rcr fnstenv ss (bad) ds (bad) jmp movabs (bad) pop int3 (bad) xchg ja jrcxz jp jrcxz push sub push loopne,pn enterq mov scas ds int3 and (bad) pushq in rex.B mov rex.RXB rex.WXB sub test pop cmp popfq fstpt lods xchg and jp sbb repz push fidiv int3 sub nop repz rex.WX lods ffreep jl movabs imul sbb insl add rorb pop and pop rex.B xor enterq or hlt or jno (bad) fcmovne jge (bad) rex.X mov sub mov (bad) add add out imul int3 xchg lret stos movsb cmp sahf mov xlat jmpq push stos push pop mov pushq rex.B mov or mov cmp in fwait adc loop (bad) (bad) leaveq retq add cmpsl xor mov loopne jl addr32 pop cmpsb xor rex.RXB addr32 mov xchg rolb (bad) repz pop scas push xor lods imul mov pop rex.RXB xor (bad) fs (bad) cmp jno leaveq mov retq cld insb jae xchg clc imul cmp jbe movabs (bad) mov outsl mov rex.WX and out pushfq jg fndisi(8087 int3 rex.WRB enterq jb retq jl movabs rorl (bad) pop sbb pop mov cli (bad) xchg sbb retq lahf mov test sub data16 test rex.RB pop jb movslq (bad) fldt sbb popfq fisttpl (bad) (bad) sub fwait sbb dec push mov jnp sub cmp xchg in cs (bad) fistpl movsb stos lods fildl cld mov jo (bad) xchg movabs (bad) mov mov cmp rcrb adc (bad) or (bad) adc add add js add in (bad) sbb fcoml outsl (bad) js nop ficoml addl (bad) (bad) sbb mov (bad) mov mov jo rex.WRB push push (bad) pushfq cmpsb lret stos mov and push retq movabs fistl pop mov mov testb jno cmp fwait xor (bad) (bad) loop cmp jmpq cmp pop test sbb fstpt outsb negb mov push lods rex fildl xchg fisubr (bad) fstpt setne xor movabs adc repnz pop mov (bad) jl faddp sbb outsl jnp jmp add repnz sub or movabs pop (bad) gs addr32 add push and imul icebp adcl jge cs rex.WRB gs rcll push leaveq loope jl lods in sbb (bad) insl or xlat sub vdivss (bad) test in (bad) rex.R rex.WXB (bad) and (bad) out push int3 ja jnp add and sbb (bad) in (bad) mov push mov rorb (bad) xlat push orl out push mov (bad) mov rcrl es std mov pop leaveq rex.WB (bad) mov jp (bad) pop mov jle mov rex.WX sti js sbb movabs iret rex.W iret mov or lock movsb add in jp add cmp mov sbb je sbb sarb adc andl push imul (bad) adcb rorl jl rex.XB repnz (bad) adc data16 or sub and rorb pop loopne mov cmpsb out (bad) mov jge mov jp rex.B or retq retq xor test jp stos sub leaveq popfq je shrl (bad) sti mov lret pushq leaveq jb mov mov lods movslq add cld xchg sub lret mov lret pop test (bad) (bad) cmpsb retq vandps (bad) fisubrl out mull (bad) out xlat pushq push sbb or add fsubrl mov test xorb jb cmpsb notl and cmp jp adc scas stos rex.W (bad) (bad) (bad) rex.WRB (bad) push adc movsb fistpll mov or fstps xchg rex.RXB adc rex.R mov cmp pushfq (bad) jnp rex.RXB je movabs mov repnz sub rex.WX xchg cmp fwait test sahf int mov insb (bad) jns jl cli add (bad) out add shlb sbb in mov pop fnsave in (bad) pop ficoml xchg jae mov pop mov in insl pushfq out movsl rex.R jmp adc or cs outsl xchg xchg in or mov movsl adc mov push shrl (bad) ds iret in (bad) cmpsl js retq int3 jle pop out (bad) addr32 mov sbb adc or adc ja (bad) pop fcmovne ds xchg (bad) (bad) mov lods outsb rex.WR rex.W rex.X adc mov or (bad) pop pop push mov cmp repz rex.RX (bad) (bad) iret rex.RB es (bad) pushq adc lret cs add mov jo fldl or cmpsl (bad) pop lret sahf adc add pop xorl lock mov sbb repnz xor mov or mov movabs sub movsb adc int3 testb loope out xchg (bad) mov jg rclb loopne cwtl movslq (bad) pop ds rex.RB lret mov popfq out js mov add (bad) rex.WXB movabs js (bad) fwait jns loope mov push xchg or incb xchg sbb or xchg sbb jb fldenv xchg xchg cmpsb lods rcr in sub (bad) jmpq test scas and cmp (bad) (bad) stos lock or rex.WRX rex.RX icebp xor mov (bad) mov jge push sar lock sbb cltd lahf test js jo roll pop iret js mov movabs movabs loopne pop lret push mov mov xlat rex.WRXB test xchg mov jb pushq sbbb mov pop movabs (bad) fwait repnz addr32 jbe stos jrcxz push in xchg add std jno loope jnp jle push cltd (bad) cli (bad) or sbb jnp sti sbbl lret jl (bad) mov (bad) xor (bad) (bad) iret xor pop cmp mov or out pop (bad) sub push pop movabs (bad) mov (bad) cltd jno retq adc jb xor mov (bad) fmul cltd xchg fdivl test stos (bad) push fidivrl push insl fldl or and mov rex.W outsb std (bad) push xor sub jmp and add sbb cld (bad) movabs (bad) (bad) stos cld popfq (bad) cltd (bad) add rclb cmpl scas cmpsl pop xor add rex.R insl out add and mov scas (bad) adcb data16 mov int cmp add sahf ja push mov movsl mov int fisttpl rex.XB sub lret sbb fistpl repnz mov (bad) adc (bad) in fdivrs pop push rex.XB cld sub int jne push sbb fwait mov mov fistpl sbb movslq pop (bad) mov lret enterq fcomi movabs xchg (bad) mov (bad) (bad) incl fcmovnb (bad) test pop fstpt mov scas cmc (bad) xchg rex.WRX sbb fisttpl test (bad) mov sahf int3 fstpt pushfq and cli add pop mov rex.RXB cmp ss sar (bad) jo xor (bad) icebp fcomp xchg mov sarl pop jrcxz sub pop fistpl roll fs movabs mov xchg or int add (bad) rolb mov fcompl or cmpsl jns lea add ficom je push out int mov mov mov (bad) push jg mul mov adc jnp es mov add pop ds rex.WRX lahf (bad) mov jae xchg (bad) imul callq sub jb (bad) notl test sti xchg ja fidivl xor out jb fisttp mov rex.WB xchg cmpsl pushfq cld (bad) fs outsl pop fwait insl mov stos (bad) (bad) (bad) push mov pop int fwait test sti (bad) mov fstpl (bad) jns rol rex.R push mov sbb fdivr add repz xlat mov (bad) pushfq movlps movsl movslq movl test psubb sahf test sbb push rex.WX retq add lods cmpsb test sub xor stc addr32 notl mov (bad) fwait add stc rex.R loop jmp jp (bad) (bad) jns pushq cmp push cltd gs rex.XB cmp cmp cwtl rex.RX pop sbb jmp out add (bad) push rex.WX (bad) int incb fisubrl jb (bad) xlat (bad) (bad) (bad) push and xor (bad) xlat cld add push mov pop xor cld xor mov jno push (bad) leaveq rex.B push out add pop (bad) mov sbb iret andl or mov cmp and callq test sub sbb fneni(8087 (bad) mov (bad) rcrl in mov mov fistpl scas rex.WRXB mov jb add (bad) xlat and imul pushfq pop sub xchg (bad) lods popfq jle jae test sbb mov lret push out iret (bad) mov leaveq std fildl (bad) or (bad) push (bad) jrcxz lret lods sbb rex.B rex.WRX iret (bad) (bad) mov hlt imulb movabs (bad) sbb fistl fistl (bad) outsb jnp (bad) lret mov scas jrcxz mov jae and cli rex pop jae add jno test cmp cmp rcr rcl jg imul fisttpl (bad) in pop add fidivr push mov (bad) rex.WRX test adc push testb push (bad) movabs iret icebp lret addr32 ficomp xor hlt pushq xor negl or repnz or sarb fwait lret add (bad) jbe mov xchg movslq test fnsave jne (bad) mov and mov fucomi xchg mov lret mov sub loope sbb (bad) xor hlt repz rex je and jns fstpt lods (bad) idivl sub imul (bad) movslq jp fwait cli (bad) clc loopne stos xchg rex.RB stos jo pop nop push cmp mov cmp and xchg setge rex.WXB (bad) mov fildl rex.WRX out jo (bad) out imul fcomi (bad) mov fisttpl add mov or test jmpq fildl jl push jrcxz insb pop repz xchg rex.R mov loopne rex pop es callq sti insb (bad) xchg iret and rorl push push adc (bad) xchg mov jg xchg leaveq or rex.XB rex.XB rex.WXB rex.WRXB mov fcmovne xchg pop loopne,pn and fstpt add pop (bad) rcrb (bad) pushq cltd and fstpt mov cmp mov mov imul (bad) push js fs (bad) in (bad) loopne add rex.W movabs fistpl js fucomi adc (bad) fisttpl (bad) rex.WB cmpsb addr32 cmp push add fcomi xorl pop out mov scas xor (bad) mov out lahf clc fldcw (bad) (bad) (bad) fwait jmp adc add (bad) xchg mov out icebp pop rex.WX fdivrs sub imul sarb fisubrl (bad) cmp jmp flds add mov push cwtl jrcxz imul mov or loope int3 adc add pcmpeqb lea (bad) leaveq cmp xchg xor or imul mov outsl pop mov fisttpll rex.WRXB sub jns and outsb int sbb rcr movabs pushfq cmpsb cmp sahf push xor adc cmpl adcb movslq test xchg out xchg (bad) int rex.R in mov cmp nop lock movsb (bad) sub lret jg movabs cld jp pop fwait imul mov (bad) outsb sub (bad) (bad) mov fcomip push loopne leavew int3 sub mov test sub (bad) stos or jg add pop lea push push (bad) (bad) add stos pushq jbe rcrb rex.WB sbb int3 push sti lods mov cwtl xor pop imul rex.RB gs jp mov rex.WRB xor pop fisubl pop jp xor rex.WB (bad) outsl scas (bad) jmpq mov mov fidivr ror mov lret (bad) (bad) icebp fldt js push or jrcxz (bad) in (bad) (bad) loope test movslq xchg (bad) jo mov add cmc fistp cmp in shlb rex.WR (bad) jl mov jp jae mov (bad) (bad) (bad) ss rex.WRXB rex.WRB adc push (bad) add and fistl adc pop jno (bad) xchg mov mov js out je test movabs jmpq fistl fnstenv sbb (bad) (bad) and mov or pushq test incl pop in scas movslq lods (bad) movl pushq gs nop xchg mov gs movabs leaveq sahf xchg rex.X in sahf pop fstpt fwait sub cmc cmp imul in rex.RXB cmp jge lods mov imul xlat cli mov jne rex.WRB pop mov add cmpsb mov shl mov stos pop stos jmpq fistpl cmc jb (bad) xchg xor test stc scas insl loope fcmovnu lods rex.WRX add sbb in (bad) or (bad) fldt cmp push jge jne mov rcll leaveq fistpl xor xchg add sbb fcmovnbe sub cmc fcomps add fneni(8087 or mov (bad) test callq enterq pop add jbe imul fxtract xchg (bad) in push callq (bad) cmp mov outsl pop repnz sbb (bad) xor retq mov push (bad) (bad) insl fld in xchg add pop mov hlt adc and addr32 popfq loop add add rex.RXB sub bnd push stos xor outsl sub nop add (bad) adc sarb and xlat sbb cli xchg or insb pop (bad) loope gs pop mov (bad) jle fldcw xor jbe rclb sbb mov sub jle or pop sbb insb cmpsl xchg or (bad) rex.W repnz (bad) mov in xchg add stc pop or sbb rep jnp push mov test mov rex.WX rclb cmp xchg cmp fistl sub (bad) fisttpl pop fsincos fldt jge adc movabs xchg (bad) lods mov scas lock xor (bad) (bad) (bad) pop xchg (bad) adc mov out movabs mov lret pop mov (bad) (bad) (bad) rex.WRB fisubl or cmpsl fstp jrcxz adc (bad) lods jbe fldt xor scas push xchg pop enterq (bad) (bad) xchg stos (bad) repz rclb roll rex.WRB rex.WX mov rex.X rex jb (bad) mov movabs test cmp jne rex.B rex.WRXB and mov movabs mov fdivrs outsl rex.W sub jmpq jg adc sbb (bad) (bad) rex.WRB (bad) xchg rex.WB mov enterq orl fistpl in (bad) mov fldt mov out jl (bad) sub rex.WRXB (bad) pushq jae (bad) sahf cs andb cltd test add and repnz (bad) pushq fiadd popq sub rex.R imul sbb fistpl in (bad) ficoml movsb fildl rex.R pop pushfq rcll lret xchg mov (bad) fisubrl jg fistpl (bad) (bad) (bad) fistpl mov jge cmc xchg mov jp subb (bad) add sbb push jg sub jg mov movslq fwait xor jo sbb (bad) xchg sbb (bad) (bad) enterq jge rex.WRXB iret xchg enterq (bad) jbe enterq sbb (bad) enterq repz xchg mov pop add add sub mov rex.RB jns (bad) idiv push rex.RB loopne xor fwait movabs sbb fsubp out divl out xor shr xchg rex.WB (bad) adc sub fidivr sub clc sbb hlt or push jae push mov scas lret sub out movabs cld cmp rcrl mov (bad) jb test xchg cmp sbb leaveq jns pop ficom (bad) xor xchg loopne lret add test imul and (bad) mov xchg cld imul cmc fdivrl mov mov sarl insl adc (bad) (bad) mov int3 cld jb adc jbe insl stc jmp push ficompl cmc adc pop (bad) (bad) pop sub cmpsb xchg movabs movsl fsts or mul popfq (bad) std jne cltd mov pop adc lock push add nop xlat in mov fcmovu mov mov rcrl insl notl mov pop nop (bad) pop sbb rex.RX ss subl fidivl lret mov shrl and fcomi mov mov (bad) movabs push jo xchg callq mov xchg (bad) (bad) xchg movabs cli cmp cmp pop int3 fistpl movabs cmc add sub and fcmovnbe rex.RB sub pop rex.X lods mov insl (bad) sub stc jnp jae pop xor out (bad) mov shl nop jo jns rex.RXB fwait (bad) sub sub ja jg fwait (bad) fcmovnb mov push (bad) in loope (bad) enterq (bad) (bad) ja fisub ss pop test fucomip nop fwait test es pop mov (bad) adc sti notl sub in mov es mov retq test mov rex.RX cmpsl xlat callq xchg mov (bad) xchg (bad) fadd stos negl popfq pop push mov rex.XB rex.RX shrl nop movabs rex.WRX movsl clc mov out push pop lods sbb int3 rex.WX mov jmp rorb and (bad) xor lods imul pop (bad) callq cmpsb pop loopne fisttpl mov std (bad) sbb out (bad) xchg stc js cmp adc jo (bad) stos (bad) mov adc sub negl movabs gs (bad) jl push insb rex.X and rex.XB hlt es repnz cmp movabs pushq and fs sbbb (bad) cltd rex.WRB cmp fcomi repnz es (bad) mov pop lock sahf rex.WXB push popq xrelease in fildl (bad) sbb (bad) jge int3 jl cmp jmpq fcmovnbe jnp add fistpl nop pop sbb fidivr mov xchg addr32 loope clc add adc pop cmc or or mov imul rex.W adc lret (bad) shr rex.WX (bad) xchg sbb xchg add es rex.RX jge mov hlt jle outsl cmp adc jg mov (bad) pushq or rex.WRB pop jle add outsl lods mov xchg rex.B lock push imul roll (bad) cmp rex.WR cwtl test rcrb rex.WR and rex.WRXB xchg mov test cmp fisttp (bad) (bad) hlt xor sub mov (bad) faddl mov (bad) lss int3 fstpt lahf xlat lock pushfq jae movsl push xor sub and rcrl push sub iret idiv rex sub nop sub movabs xchg jle mov pop cmp rex.B xchg and fisttpl nop out rolb (bad) pop (bad) adc clc fistpl jge scas rex.B rex.RB mov and jmpq fdivrl movabs adc cmp (bad) fldt lock outsb jnp std rex.RB roll (bad) mov js mov sub mov lret xchg pop mov out xchg cmpsb (bad) insb out mov xchg (bad) pop rex.WX push movabs (bad) out push (bad) jae (bad) (bad) jnp (bad) sub jnp xlat adc xchg movsb icebp rex.XB or xchg fs jb pop ja fcomps sub imul jnp lock stc mov out (bad) or sti test xor cmc sbb icebp (bad) out cwtl retq and sbb jne push rclb xchg sub xchg lock ss and shr repz rclb (bad) jl imul add rcl mov jmpq mov adc (bad) cmp mov test adc (bad) (bad) rex.WRX fs rcr jo loop int jl rclb and rex.R shl loopne cli retq neg insb rolb push add adc mov xor lods mov mov add (bad) fisub jle jrcxz sbb fs cld mov mov mov add icebp lock sbb jb pop nop je cmp (bad) scas out test rex.RX loopne mov out mov (bad) test test cmp fmuls rex.R loope fabs stos cmp movslq cwtl ja xchg (bad) add out addr32 pop xlat xchg (bad) movl (bad) (bad) (bad) (bad) outsb xor sub pop (bad) (bad) pop mov push mov xor xor cli fucomi rex.WXB rex.RXB mov xchg fiadd sarb rex.WRB fwait cmp xchg sarb xchg movslq sub fldt or pop loop lods sub (bad) (bad) insl pop loopne jge cld test mov jno or pop rex.B jbe rex.WRX mov (bad) cmp ficompl (bad) data16 push (bad) mov fistl push ss fildl lret in cmp push iret and jb add movslq fcmovb jge mov mov mov ja (bad) rex.W rex.RX pushq mov and sbb fwait xchg cs adc retq out adc (bad) (bad) jp rorl (bad) push scas add xor in imul pop retq cmpsl jae js jae ja lods fcoml push mov fwait xchg (bad) jnp cmp mov lret or mov rex.R xchg adc add mov rcrl movabs xor and mov outsb pop (bad) hlt loopne rcll xor push cmp (bad) mov sub cmp clc scas pop mov mov mov adc rex.WRXB xchg (bad) in (bad) push (bad) pushq jmp (bad) sti pop (bad) in cli cwtl vpcmpgtw ss fist mov sbb pop out or mov sbb out add addl jbe movabs outsb fisttpl std stos out ror loope mov adc jl loop je add or cmp pop jge leaveq rex.RB gs in fcom rex.XB rex.RX loopne in jmpq int mov sub (bad) shrl cwtl push icebp xor data16 sbb pop cld and (bad) (bad) pop out sbb int mov adc jnp adc and add add rcrb roll or cld retq cmp mov sbb add pop (bad) test insb (bad) roll mov (bad) movslq push xchg sarb jb fadds fstpl sbb lret mov adc popfq sbb int3 jg rex.WR (bad) push addr32 jne fs jnp (bad) nop cmpsl fisttpl (bad) pop fadds pop (bad) (bad) (bad) mov or pop (bad) rex mov fstpt enterq rex.WX and in and xor movabs movabs test pop cmp mov xor insl (bad) (bad) pop jo (bad) mov mov iret je test mov callq jae (bad) mov scas fistpl nop cmp add mov mov enterq fistpl nop (bad) mov (bad) xchg outsb andps out bnd (bad) (bad) rex.XB xchg outsl outsl add test jl int3 cmp movslq imul jrcxz jb pop xchg (bad) fsqrt movabs mov cld rex.WX push (bad) loope test jne or imul ja (bad) push rex.RB push int3 (bad) jno lea (bad) out fwait pushq jb out rex.WX data16 insb pop fbld fmull pop (bad) in lret cmpsl push lret mov movslq stos loopne pop fsubs lods or popq add mov jb repnz movabs (bad) int fcomps clc sbb xchg jbe xor out mov sahf andb xchg lret rcll lods je rolb rcll cmc iret pushq shrl (bad) push and mov retq (bad) cli (bad) push fadds insl cmp rex.R in loope rex.RXB rex.WR cwtl (bad) jl jg pushq jnp cmpsl sbb movsb lods fisubrl loop stc xor xorl je mov rex.WXB jge repnz mov rex.XB push xchg lret icebp jle mov (bad) sbb jle pop push (bad) sbbb sub outsl mov lods (bad) push (bad) fwait (bad) jbe rex.RB (bad) and flds test je mov xor xchg scas (bad) (bad) (bad) jno ja jl movslq (bad) movabs (bad) imul callq cmpsb test movabs loop (bad) (bad) mov lods jp shr xchg xor (bad) negl (bad) jmp (bad) jle rex.WRXB icebp jp cmp repz mov imul mov movsl cmc (bad) stos lock sbb mov jle (bad) out mov fnop repnz divl push sub fwait stos retq movsb flds repnz (bad) mov sbb lods fnsave sbb adc or (bad) xchg xor sub rol cltd push sbb cmp push retq enterq cwtl outsb fnop fst xorb pop sbb add jns sbb add fmull (bad) (bad) movabs sbb imul sub sub and rex.X std fsubs xchg xchg shr outsl jl xchg adc mov imul cmp test xor je push jl push lock xchg xchg or xchg (bad) mov xor xor sub pop movsb (bad) cli jns jbe sbb (bad) xor ss xchg lods iret in stos jg adc and lret (bad) fiaddl xor pop (bad) fisubr test sub cmpsl movabs pop xchg rex.X push rex.WX ja cmpsb lret xor mulb xchg popfq pop mov rolb (bad) loop xor lods pop jbe rex.WRXB xchg xchg adc insb jmp sbb movabs jg jne fstpt rex.WRB cmp hlt (bad) fisttpl iret (bad) (bad) rcr je enterq mov fwait (bad) mov rex.WRB add rex.RX icebp jo clc movabs shrb push fldt (bad) or int rex.W fwait jns (bad) fildll rex.WXB leaveq mov (bad) or xchg sbb (bad) test mov pop pop jo or rex.WX rex.WRB adc rex.WB rex.RX hlt cmp (bad) (bad) imul pushq sbb pop test xor sbbl movsb mov rex.RB pop sbb (bad) in movslq pop mov movabs push mov pop rex.WB push cld and cmp insb fcomi jl (bad) sbb mov cmc (bad) cmp fstpt rex.WX push (bad) fxch shr jo (bad) addr32 mov xor test mov in push pushq xchg sbb (bad) rex.RX xchg pushq or cmp ds (bad) xchg push jge jo jnp (bad) cli movabs in (bad) fildl push nop jbe rex.RXB pushq insl mov xlat sub jl fistpl mov pop mov movabs mov xor push xor (bad) (bad) add rex.WRXB rex.WRB repnz jae add cli pushq fistl movsl push adc retq lods cmp js mov adc ds pop and cmp or pushq (bad) cwtl (bad) (bad) rcr or clc (bad) cmpsb jae and rex.WRXB xor xchg (bad) xchg xlat (bad) scas loopne push in fistl iret popfq push (bad) lahf push loope pop add imul (bad) adc xlat decb mov jge and (bad) push or jmp scas cmpsb lock je outsb hlt mov cmp or or xchg mov xchg jns out ja jg iret ffree out sarl xor outsl (bad) pop jne cmc (bad) loopne fcomps movsb rclb (bad) xchg pop cmp outsl (bad) push xlat (bad) rex.B vxorps mov lods jp (bad) mov (bad) (bad) fsubrs push fsub out insb (bad) sbb insb xlat (bad) xchg movabs (bad) rex.RX xchg pop stc xor sti loope (bad) clc cmp rcr (bad) scas cld stos in mov pop (bad) cmp cs sub xchg movabs jne pop (bad) (bad) int3 int mov fdivl (bad) sub (bad) and xor adc sbb push int3 sarb mov pop xchg xchg (bad) rex.WXB rex.WRXB fadds xor add rcl movl rex.RB movabs sub pushq test cmp (bad) rex.WR sbb sti test add xchg rcrl jbe lods push xlat (bad) (bad) (bad) mov int3 repz fldt cwtl pushq retq (bad) fiadd (bad) and jne (bad) fstpt movabs jno movsb test jl xchg retq (bad) sbb lahf shrb (bad) adcl fcmovnbe (bad) (bad) ja (bad) and or jrcxz fidivrl mov movabs xchg pop imul add popfq sbb (bad) fidiv mov stc adc xchg movabs sub jge mov lods (bad) nop enterq rex.X rex xchg movabs movsl fcmovnu (bad) push retq int iret shrb adc (bad) (bad) fwait mov lods sub or xor out sub push mov fildl rex.RXB rcll (bad) push shr ds fdivs (bad) rex.W rex popfq std xlat pop outsb idivb jge mov jae add (bad) icebp (bad) mov xchg pop sub jge cmpsb (bad) cmp pop fisubrl mov and push rex.X sub iret and cmc pop sti shrb fisttpl jrcxz repz xchg rex.RB in lods popq mov popfq sub mov movsb cwtl shrl lods xor (bad) testl test (bad) mov lret shll (bad) xlat fildl movabs out pop lock movslq leaveq test int3 mov adc pop and loopne jne rex.RB leaveq repnz (bad) rex.WRB stos xchg movabs lock fcmovnu cmc (bad) (bad) or std xor cmp jle movabs rex.X adc ficomp (bad) fmuls (bad) stos sahf in mov (bad) sub (bad) (bad) fildl imul (bad) (bad) icebp pop mov rex.RXB stos mov rex.WX (bad) (bad) rorb test ficoml add xchg (bad) mov pop rex.RXB jl push rex.RB cmc leaveq in mov pop outsb jg rex.WX mov pushfq rex.R repz (bad) cld (bad) jl sarl sbb or loopne,pt je sahf mov or (bad) pop fldt fcmove ffreep vandpd rex.W fisttpl retq fildl jmpq mov cmpsl pop push cli test rex.X repz pushq push fwait xchg mov sbb (bad) es jb (bad) (bad) lret (bad) nop sub cmp add cmc adc rex.WB retq cmpsb pop subb (bad) add (bad) test jge (bad) mov xchg movabs pop movabs xor sub fistpl addb adc xchg (bad) (bad) adc mov rex.W (bad) fldt rex.WX pop jg rex.RB cmp sub lret mov mov cwtl outsl iret fcomi gs sbbl pushq mov movslq fildl xor mov jnp divl out pop rex.XB mov movabs sti fwait pushfq outsb add xor (bad) (bad) mov and mov ss fldt sti add and jo (bad) jno clc pop sub std adc int (bad) xor test cmp in bnd mov add adc rex.WB scas cmp fisttpl (bad) jmpq (bad) jo (bad) push rex.WXB rex.WR loop mov movsl mov rex.WRB retq (bad) stos jb adc fcmovne rex.WRB and loop nop mov cmc divb sbb int3 or or or xor pushq mov mov fildl mov rex.RX (bad) rex.WX stos cld adc (bad) pop mov out sbb (bad) adcl out and fistl jne in mov (bad) xor xor (bad) push fistl std add movsb es or sbb fdivs pop imul ja jo mov (bad) rcl push (bad) and imul sbb int mov adc callq cmp mov (bad) in xchg xchg sahf stos pushfq xor sbb imul jle rex.XB sub add (bad) mov test fistpl mov rcll shlb add lret out lods xchg mov cmp (bad) xlat adc stos push rex.WXB adc clc pop imul fisttpl addr32 stos fs stc out fst (bad) sbb mov jbe (bad) rex.R fldt add push mov rex.W sbb sbb fistl je rex.WRB test movabs xor rex.WR repz rex.WX fcoms pop subb push cmp or jrcxz pop jb xchg rex.WB repz (bad) clc cmp stos jbe and xchg lods rex.WRX sbb (bad) xor (bad) mov callq cmp fcomi push (bad) sbb je sub push retq sub xchg ja (bad) pushq fwait rex.WXB test retq adc cli fdivl mov (bad) loope fwait adc push rex.WR adc loope test adc mov sahf jnp xor jns cmp (bad) js rcrb pop sbb (bad) add lea (bad) xor movsl fcmove shll fcomi test sahf retq (bad) cmp rex.WB rex.WB (bad) rex.WRXB (bad) out jge addr32 sbb outsl mov mov adc jns adc rex.RB repz rex.RXB stos sbb sahf fcmovnb test adcb jge (bad) std or xchg lock movabs lret jge push jae mov mov (bad) stos xor (bad) cmp or ss xor sbb outsb (bad) xchg repnz pop cmp (bad) pushq rex.WB mov cld sti mov mov xor fistpl mov (bad) rex.WRB ss jnp pop (bad) pop mov (bad) xchg xor mov scas pop sub (bad) clc adc (bad) pop rex.WR push or fwait imul movslq movabs iret stos std out and cmp (bad) (bad) fisttpl (bad) movabs rex.RX jnp jae (bad) or rex.X xchg retq hlt pop xchg pop jle or int3 movabs insb lahf imul xor mov (bad) add jl fisttpl test xor rex.WRXB fstpt lea ss rex.RXB jae jnp jp lods (bad) (bad) xor and or jrcxz callq (bad) (bad) rdtsc ds pop push mov not pushfq push loope pop or add xor (bad) and fisubl movslq lret enterq loop repnz in cmp ss pop stc int3 cmp cltd mov fildl divl mov (bad) (bad) lret (bad) rex.WRB (bad) fidivr xchg push pop ja xchg fwait xchg (bad) mov iret and sub cmp movsb push mov loop jbe cltd popfq xchg mov add rex.W jmpq (bad) (bad) mov mov jae movsl movabs pop add hlt imull xchg sti rex.WXB movslq jae xor cmp xchg adc jmp mov push fistpl xchg rex.WR sub cmp or and lahf sbb push rex.X (bad) movslq (bad) fsubs (bad) jrcxz hlt rex.W lods fcmovnb stos clc jbe movsb (bad) (bad) (bad) cmp movabs fwait xchg jg rex.W fisttpl mov and fstpt xor adc add clc (bad) mov out mov or or mov lods cmp std push test (bad) test (bad) xchg (bad) adc lsl loope pushfq mov pop (bad) mov cmp insb stos (bad) mov retq fisttpl jl lret mov rex.W pop ljmp cmc mov fildll (bad) scas test leaveq add (bad) imul rex.RX (bad) rolb pop rex.R xor xchg (bad) out retq es jne adc pop jle mov fcoms xchg xchg pop cmp addr32 jnp xchg jmpq movabs and callq xor movabs pop adc pop sub push or sahf xor setnp fdivp (bad) add (bad) xchg jge out fldt test xchg (bad) sub jno movabs xlat pop xchg insb jge fcmovne mov and (bad) adc (bad) out insb insl sbb rex.XB mov and adc cs sub jo add (bad) sub pop ja push mov (bad) sbb (bad) adc rcr jg (bad) pushq adc es mov ss xor mov fisttpl fstpt int3 rcrl sbb sarl iret jo mov xchg mov xchg jle ja fcmovnbe mov outsb mov mov fucomi rex.WRX or sub jno stos std mov sbb out (bad) adc stc (bad) pop decb repz sbb movsl cmpsb mov stos mov xor and adc xchg mov (bad) and (bad) in insb insl (bad) mov cmp rex.RX (bad) and rex.WXB xor cld in cmp (bad) jle test imul mov pop add (bad) shll xchg xlat (bad) cmp jg (bad) (bad) mov add cmp sub xchg mov rex.XB cs mov fs fcmovnbe xchg rex.X rex.WB xchg cmc lock xor mov fdivrs iret mov jnp sbb imul loope adc frstor (bad) iret (bad) cmp js gs lahf pushq xor (bad) (bad) movabs rex.R (bad) pushq jne or pop rex.RX movsl mov sub (bad) scas cs pop mov int3 or push jnp push adc jne xchg mov out incb callq push (bad) cmp cltd xchg cmp or vaddsubpd test (bad) out pop test fstpt stc loope rex.WRB ss jno rex.XB mov fildl repz mov (bad) push and (bad) fistpl (bad) int3 fdivs clc sbb jg push mov pop jo rex.W rex.WR in (bad) mov pop (bad) (bad) movsb fcompl mov adc xchg (bad) push push rex.RB rex pop cmp imul ds fwait pop push (bad) cwtl sbb (bad) fstpt (bad) xor js fcmovnb movd ds jo pop xchg (bad) lock pop (bad) push je (bad) mov add pop jnp out and imull push repz (bad) fnstenv enterq insb mov pop movslq mull (bad) sbb out outsb or pop (bad) divb cmc jnp adc enterq cwtl (bad) xor adc (bad) fstpt mov jb and retq cmp xor pop (bad) (bad) mov in fildl pop mov test movsl in jne stos (bad) rex.WXB and mov orl ss fsetpm(287 data16 add rex test std clc sub in sbb adc fs ja add mov ja rex.WRB or sub callw in (bad) sbb iret repz lahf cmp cmp push or xor lcall and sbb sbb sub retq xor jle (bad) xor cmp negl sahf sbbb cmp movabs hlt and rex.WX (bad) pop rcrl (bad) pop pop jle imul and mov (bad) mov sbb sbb push xchg add mov lret xor xchg fildl out push (bad) adc pop data16 or (bad) add (bad) out fwait (bad) xchg pushfq decb scas movabs stos xchg add gs xor (bad) cwtl pop cltd or movsl (bad) rex rex.X rex.RB cmp retq pop jbe (bad) pop lock fcomi (bad) or or out pop mov (bad) and stos cmp ficom push (bad) sbb pop jmpq scas pushq mov outsl add movabs rex.WRX fcoms pushq jnp (bad) rex.R push rex.X xchg rcrl fsubs (bad) cs movabs jae movabs fidiv rex.WRXB (bad) jnp rex.B movabs popfq mov (bad) lret adcl mov hlt pushq callq (bad) (bad) xor add xchg pop imul retq (bad) mov pop cmc sbb or shrl jp (bad) and mov (bad) pushq ds rex.WB rex.WB rex.WXB repz sub pop movslq lahf lcall pop leaveq sub in pop add fwait rorb (bad) movabs pop and xlat lods (bad) clc cmp fstpt (bad) scas pop jmpq rex.RB (bad) lahf (bad) (bad) movabs fs outsb pop rorl jne xchg (bad) jmpq fcmovnb mov cmpsb data16 iret fmull cmp cmpsl fistpl retq lods in in mov retq rex.WB rex.RX pop repz imulb xchg gs (bad) cs (bad) fidivl insl (bad) (bad) pop (bad) retq push imul xchg fstpt jp sahf (bad) jbe mov sub movsb add jo pand sbb jge (bad) rex.RXB push rex.RB sub push xchg (bad) (bad) in and (bad) or sahf mov pop and pop out repnz sbb xchg and mov or jb pop fldt fldl (bad) mov stos (bad) loope pop sbb cmp push notl in mov jl (bad) shlb mov ja test mov (bad) jrcxz fucomi and lret pop shlb jmpq sub fisttpl rex.RX and mov je xor iret adc or fisubr mov fnclex movabs mov (bad) adc xchg divb fisttpl rex.B cltd leaveq adc movsl lea in fild pop lret xor retq rex.RX mov jp pop push leaveq sub fdivl add pop xor repz mov test int pushq cmp (bad) fisttp imul (bad) (bad) (bad) insb imul pushq lret adc (bad) retq (bad) mov rex.RXB jbe mov jo xchg jmpq outsb or xchg cld xchg lods mov out mov es mov pop sti movslq mov fnstcw out fdivrl data16 and rex.WRX rcrl jle ror cmpsb sub lea leaveq or adc out jnp cmc (bad) in retq movslq push int mov rex.WB jmpq rcll callq in rex.RX mov retq mov clc mov jno (bad) in retq (bad) (bad) js loope stos adc fidivr pop xor sbb pushfq lock test in xchg jg (bad) pop jbe flds (bad) xor and jmpq stos pop add movslq add (bad) xor jmpq jrcxz (bad) fcmovbe xor sbb xor iret pop cltd and (bad) adc cld mov js xchg lret xor rex.XB addr32 repnz std enterq mov fdivrs jb push mov js cmp jnp jg ficoml rex.W cmp addl mov sbb movabs stos (bad) push out rex.X fcmovu mov mov (bad) sbb xlat sbb (bad) xchg cmp rcl fisub push in (bad) rex.W rex.WB frstor callq pop (bad) jmp mov xchg xor movsb (bad) (bad) add sub rex.WRX jnp cmp pop push rex.WRXB rex.WR add or cld rclb jl lock cmpsl rex.W xor mov add fcompl jne pop mov sub pop fisttpll rex.RXB xchg (bad) clc xchg or insl std rorl jmpq and add lods adc cmp outsl jl sbb rex.RB fs rex.WB cmpl (bad) sbb pop scas (bad) addb pop shrl ffree loopne xor rex.WXB sarb xor sbb cmpsl callq (bad) scas pop (bad) xchg and loopne mov cmp lret icebp test adc adc in push xchg sbb in fdivrs mov fisttp fiaddl mov cs (bad) rex.R movsl sub sbb jns (bad) and push loopne in enterq (bad) scas cmpsl push sbb xchg mov std callq (bad) shl scas je jns (bad) sub mov xchg loope pop nop cwtl insb cld jbe rex.B movslq sub jae jo pop clc js and out jg rex.R sub (bad) (bad) sbb push (bad) mov fbstp (bad) cld (bad) sahf ficoml adc and cld sbbl outsl rex.WR (bad) pop jnp pushq mov push push mov push jae xlat mov rex.RXB hlt fcmovu negl xchg (bad) int movsl mov and imul icebp jp xor stos fcmovb jmpq fildl and movslq je (bad) jno (bad) cld add add in out (bad) ds lcall cmp adc stos scas ficomp (bad) movabs rex.X leaveq sbb repnz movabs add (bad) mull or movabs xchg adc sbb fwait (bad) (bad) jo scas out sub test fmul rex jmp and xchg sbb push rex.WRB divl (bad) adc in movabs jnp (bad) rex.RX xchg xchg (bad) mov rcl jmpq push hlt sbbl int sbb std mov sub pop push pop fwait stc imul mov test mov mov mov fwait mov mov outsb xchg imul popfq pop fstpt sysenter and (bad) sarl sbbb xchg pushq fstpt (bad) sub cmpb loopne (bad) (bad) imul test jae fstpt (bad) (bad) pop cmp (bad) add sub jle data16 movabs jmp out jl mov (bad) pop movslq cmp hlt fwait rex.RB nop std leaveq xchg callq (bad) sbb (bad) int ffreep je addl ficom mov (bad) mov sbb rex.WR sbb mov mov rex.WX mov retq pushq movslq loopne fldt insb lock sbbb and pop (bad) negl movsb mov pop mov (bad) (bad) movslq mov rex.RXB jno and add pop lods add rex.WRX rex.RXB fimull xor or mov push rex.WRB and in (bad) jnp fistl scas addr32 nop hlt je movabs pop in fildl (bad) jmp fistpl xor rex.RXB mov (bad) test xor cmp rex.WRX fistpl pop adc add nop pop push in add mov subb push jns and pop and out push mov (bad) push pop add rex.R imul (bad) lret orl rcll mov adcl pushq xchg jp rex.WXB and je (bad) (bad) int3 jrcxz fs and sahf rex.WR sbb xchg addr32 mov rex.WRX jno add movabs mov and (bad) (bad) (bad) xchg leaveq fistl adc je (bad) fistpl or mov sub (bad) sbb push lret scas xchg callq (bad) repz mov retq mov rcr idivb fs (bad) sbb jnp and jns popfq lock jae fldt adc (bad) (bad) mov es (bad) cmc mov fcmovnbe add std mov jns (bad) jne sbb jmpq (bad) out imul jge pushfq pop movsb in and pop retq lea sbb sbb and (bad) insl or stc (bad) (bad) add pushq jmpq rol (bad) add icebp (bad) adc sbb scas jl or rex.RXB fisub addl iret rex.WXB pop sbb shrl (bad) pop outsb or loopne mov sahf lods xchg movabs push or in mov xchg and cmp sub lahf push int (bad) fldt mov (bad) leaveq fidivrl push mov (bad) xchg mov movsb xchg jno (bad) insl sub (bad) rex.B cs adc (bad) xchg (bad) stc adc xlat and rex.X movabs fcmovne add enterq xor cmpsl mov add (bad) out mov sub or retq add mov scas cld pop xor cwtl lods out or fcompl and stc (bad) adc rex.WB add lods rex.WX cmp lods sbb rex.W rex.WB lea (bad) and fistl loopl push sbb mov (bad) (bad) (bad) mov and pop sbb test in mov pop retq cmp rex.WB cmp jmpq rex.RX xchg (bad) (bad) fucomi jae sub sbb jl (bad) je mov rex.RB fistl add rclb sub in xor (bad) jg mov push ja rcr imul fcmovnu sub jne push pop (bad) push lock fcmovne mov clc loop (bad) out jg out callq xor xchg (bad) push (bad) pop xor push rex.RB pop imul cltd icebp flds and rcrb cs stos push (bad) lea lock or fstpt xchg cmp outsl and movslq or pop (bad) rex rex.WRXB pop test sbb subl pop rorl fwait adc rex.WR enterq sbb jnp (bad) add fcmovnbe xor fucomp pop rex.X rex.WRB and imul xchg add lods rcl mov (bad) jmpq cmpsb and out rex lret stc subl pop (bad) pop cmp callq insb cld rex.WR icebp shrb in and push movsl xchg (bad) fisttpl cmp fcmovnb (bad) retq lret mov loop fisttpl (bad) out add add mov fidivr xor (bad) rex.W pop scas int mov and fwait hlt (bad) and stc xchg mov and jmpq cwtl fstpl (bad) imul mov (bad) xchg jg fistpl push cld (bad) sub sbb fildl jl (bad) out movsb mov loope ficomp pop (bad) fwait mov xchg movsb stos jmp sub pop imulb xlat fidivrl jl (bad) std fs mov leaveq movabs repnz lods lock and push rex.WX rex.RXB (bad) fldt iret rex.X xchg xor xchg fprem1 rex.R pop adc xor (bad) adc push mov (bad) (bad) mov out (bad) (bad) (bad) rex.WX fdivr movabs push push mov or mov scas mov pop mov cmp popq pop int jge loop idiv (bad) mov push cltd (bad) adc mov out jae stos xor (bad) add cmp (bad) sti xlat sti or nop sbb cmp rex.W cmpsb lret jle push sbb jno adc (bad) jns test pop rex.B rex.WXB pop jno rclb mov imul xchg push (bad) loope test pop cwtl mov rex.X lods sub pop xchg (bad) cwtl cmp and js rcr (bad) std push rcrb rex.RB fstl out scas movslq or and repz rex (bad) iret push outsb fdivr rex.RB (bad) pop sub adc test (bad) sub mov jmpq mov xchg mov ja (bad) movabs mov (bad) out cltd xchg (bad) push fdivs pop adc ffreep lods and je callq fcomps in rex.WB in je cmp pop cld (bad) in jge (bad) in sub (bad) xchg cli iret insl lret (bad) fcmovnb iret or cmp or movabs fstp in clc add fisttpl test cli adc popfq rex.WRB xchg (bad) mov pop in rclb movabs jge decl jo lea cmp push mov mov push in loop and mov push cmp int xor fstpt sti (bad) movabs sub jo fwait insl (bad) fsubrs test shrl adc scas sar or (bad) push roll (bad) rex.B rex.B rex.B adc rex.RX (bad) fisttpl ja pop jmpq rex.WX fildl adc xchg enterq push in fwait pop xor push push (bad) rex.WRXB cld fcmovne xchg (bad) mov mov fnstenv fildl fist fmulp lods cmp loope mov xchg pop int mov jg in (bad) mov pop loope mov lret mov sub pop (bad) in push jns mov xor stc rex.WX retq sbb hlt fwait movabs scas cmpsl rex.XB movabs push lods pop enterq (bad) (bad) mov xor xorl or mov rcr loopne lret jnp push fcomps test and jb cmp adcl pushq stos rex.WR lock pop test mov cli out insl mov (bad) push xor (bad) jae mov jmp push rex.WB rex.WB jb pushfq outsb imul sbb (bad) scas mov in iret imul cld pop (bad) (bad) xor addr32 fstpt in mov (bad) mov (bad) sbb sub cmp (bad) cs pop pushfq orb mov (bad) xchg movabs (bad) xchg fdivrl movsb (bad) fs clc leaveq jnp pop (bad) movabs fdivrl pop add pop (bad) add rex.WRX rex.WR sub add mov scas push insb (bad) and fcmovnb jmp out (bad) or lcall mov add fstpt adcb rex.WR retq popfq rex.WX rex.XB and pop cwtl mov xchg in (bad) rex.B clc imul xorl (bad) movsb pop mov imul fmuls (bad) scas cmp cmp callq xor cmpl fldt test iret pop adc sbb pop retq (bad) (bad) xlat imul leaveq or jmp (bad) jle imulb stc mov scas mov jb mov rex.R jae xchg cmp sbb push cli push pop pop mov test sbb sahf (bad) cmp movabs and fildl movslq pop iret sub add xchg push cmp (bad) xchg pop sub pop movslq addr32 sub (bad) hlt stos lods jrcxz xor mov shll insl icebp cmp fisttpl cmpsb jp and xor (bad) xor sbb (bad) mov jle xchg rex.W (bad) (bad) data16 mov adc adc (bad) in sub xchg fwait mov push rex sbb (bad) imul mov add or fucomi nop mov (bad) pop pop (bad) (bad) imul (bad) xchg xchg xchg (bad) imul (bad) (bad) testb mov or (bad) (bad) leaveq (bad) hlt out repnz pop addl jae movabs lret std xchg addr32 (bad) adc cmpsb lods loopne mov pop in pushq push xchg outsb and (bad) adc cmp je xchg data16 imul mov pop (bad) mov push mov (bad) scas jg fistl outsl (bad) (bad) mov rex.RXB rex.R int3 (bad) (bad) incw outsb fldt (bad) xor jg (bad) jbe xlat scas (bad) or lahf pop rorb int loope (bad) fisttpl pushfq test sub and pop adcl mov pop sub callq push and rex.RB cmp fstpl fwait or pop sub push rex.RX mov out sahf mov mov (bad) fldcw frstor xchg xchg in (bad) callq mov clc or movabs add mov mov xor icebp push ja mov retq roll rex.X lock loope jns sbb fstpt mov jno xchg xlat (bad) fucomp jae (bad) sub jns lea (bad) rex.WB and fsts fild xor in mov lahf lock in pop or nop fstpt jg (bad) insl imul jl xchg cmpsl mov lods fisubr mov fildl je,pn adc pop pop rex.WR fistp jnp (bad) add and rex.R fisttpl mov and loopne jp and orl addl pop shll jle insb fistl push sub (bad) pop sbb mov std in in pop je mov xor (bad) stc jmp xorl fnop outsl retq fmul sub mov pop add retq js (bad) xor cld mov push and (bad) scas lret adc jrcxz negb ss (bad) pop imul movsl sahf adc (bad) xchg push sti in or mov loopne jne leaveq (bad) repnz (bad) out movabs jg (bad) fcmovnbe mov sub or xchg mov cmp jmp pop sahf xor (bad) test pop sub mov adc add pop mov cmpsl mov js shl outsb jge shll mov (bad) stc sar sub and addr32 insl sub dec push sub icebp jno adc es hlt loope fstp je jmp (bad) jle mov test (bad) idivl gs mov fwait (bad) jo retq rex.WRB fstpt xchg (bad) out mov cmp (bad) adcl jg pushfq and rex.WRB cld fwait (bad) movabs xlat rcrl add mov xchg rex.W jno popfq push (bad) adc (bad) lret jbe clc sub movabs or pushfq xor out sub fcomps mov (bad) retq icebp pop rex.B test add cmc ss adc retq cmp and lret test in mov (bad) (bad) mov cmc cld retq jp cmp ja (bad) and outsl fisubl (bad) pop nop pop movsb xlat movabs movabs rolb (bad) push or rex.XB push jp xor mov xchg lock lea js std popfq repnz xchg pop rex.XB (bad) (bad) repnz mov loopne mov push mov imul or jno add cmp vsqrtsd rex.X rex.R in iret (bad) (bad) or jmp mov pushfq or sti rex.RB xor (bad) ss sbb stos jnp rex.WXB rex.WXB rex.RX rcll clc mov mov (bad) scas movabs (bad) retq pop adc jg sbb test movabs ja mov je pop loop xchg push sahf add jge rex.WX or sub sbb xor fwait pop (bad) push rex mov iretq imul mov fild (bad) pop (bad) ss movabs sbb cwtl cmpsl rex.RX push (bad) xor shrl outsb add (bad) movabs (bad) int rex.R je shr adc cmp roll lods jns mov lea scas hlt (bad) fistpl data16 fistl (bad) pop sbb cld xor and sbb jg jmp pop out int out test shrl push fcos popq and mov sbb shl xchg movabs ss xorl sbb add sbb loopne pop jle mov cwtl mov lods mov xor popfq jne rex.B fs in cmp lea fucomi mov jrcxz mov pop sbb rolb push xchg (bad) (bad) cs fildl cmc (bad) mov (bad) adc fadd sti xlat rex.WB cmp and mov jne pushq rex.RXB mov pop rex.R sub fs cmp (bad) rorl rex.WXB fincstp sbb sbb addr32 callq in jg neg cmp (bad) jge mov (bad) cld xchg hlt rex rex.WXB jnp mov rex.RB (bad) lea jae rex.RXB sbb mov lahf clc rex.R rex.WRB and jae sbb and ja add movabs xchg (bad) out sbb or (bad) adc xor rex.WRB (bad) add fstpt mov test test or adc (bad) sbb (bad) xchg insb sub jnp push (bad) rex.RB rex.R (bad) push sbb pop loopne (bad) jp cmp scas lea scas sub ficom rex.W (bad) add mov fstps rcrl and xchg (bad) out lahf nop in cmp pop int xchg in ja (bad) rol sbb mov imul push addr32 mov rex.WRX ja fist pushq rex.WX rex.WRX fdivs imul sahf (bad) fdivr jo sbb rex.WRB jb add loop (bad) pop retq sti jnp jae retq shrb test (bad) data16 ffreep retq stos (bad) jge fistp lahf callq loopne loop lock add sbb loopne shrl pushq jb outsl movsbl mov mov decb (bad) pushq pushq or ficompl rex.WR rex.WB je cld xchg mov mov push add cmp (bad) adcb pushq (bad) mov push and cwtl sti jns fcmovbe repnz (bad) (bad) sti push sbb fstl pop cltd in and (bad) rex.WXB insl movsb imul pop cltd leaveq fs sub rcrl push (bad) pop or addr32 (bad) add rex.RB (bad) rol in (bad) mov and (bad) push (bad) movsl rex.RX lahf jns cmp mov int adc (bad) sub rcrl fwait test iret xchg push mov jns sbbb sbb movsb popq add pop rex.RB scas roll mov lret mov cmpb pop in mov ss rex.RB cld jne fldt ror cmpsb shrb fcomi fsub push cmc or movabs stc push (bad) icebp pop (bad) jbe (bad) mov fisttp (bad) (bad) out sub xlat leaveq jbe mov pop in mov (bad) xchg je and (bad) out fnstsw fistpl jl pop rex.RXB adc mov adc lret cmpsl push leaveq mov fistl xor pop fisttpl iret push int3 cmp movslq pop fdivrs (bad) fsubrl int adc adc (bad) jmpq mov (bad) cmpl push mov pushfq pop cmpsl gs jp rex.RB rex.XB pushq fldt mov (bad) and xlat fs pop pop in jge rex.WX movabs mov or and sysret cmp mov (bad) scas xchg fisttpl fcomp (bad) xor pop shll repnz mov pop pop data16 push rex.RX rex.B loope rex.WB adc cli popq (bad) movabs xchg add push (bad) stos (bad) je lret lods lods push and xchg rex.WXB test rex.X or scas repnz stos adc cmp in mov mov stos shrl rex.XB int3 (bad) mov lods hlt push (bad) sub insl in mov es (bad) mov ffreep pop ss fstps mov sub mov pop fwait lret clc out hlt adc movabs andb adc shlb mov loop (bad) fwait (bad) int cltd push or popfq (bad) cld imul cs out rex.WRX fsubs pop mov and mov lret add pop sahf adc xchg (bad) leaveq sbb or mov repnz test rex.RX jge in int (bad) rex.WRXB xchg xchg cli rex.RXB pop neg roll mov divl mov rex.R addr32 rex.R xchg push clc xchg (bad) jge movslq jp xchg pop and fwait callq mov jp outsl clc (bad) jbe js mov add scas jno jp (bad) lods jg rex.R psllw imul movabs and jno sbbl int3 (bad) xchg mov (bad) (bad) xchg cs pop rcrl retq out jne add (bad) scas (bad) jb rex.RB jmpq jnp scas push (bad) (bad) in mov push out mov test (bad) cmp adc fisttpll pop cmp fbstp xlat rex.X xorb rex.XB xor adc sub (bad) sub xor (bad) cmc iret sti and in mov xchg test (bad) fld or rorb fbstp jmp push (bad) push (bad) std (bad) mov cmp scas push cld ss fnstsw push push movabs push and push cmp jle (bad) movsl (bad) iret mov jl fcomp mov (bad) and outsl jmp (bad) xor sbb inc popq mov test (bad) popfq movabs (bad) ss cmp repz imul cwtl outsl pop mov push or fcomi sbb std (bad) fistl push rex.WRXB fistpl mov insl rex.WRB cmp (bad) loopne out xor (bad) xor jl xor rex.WR (bad) hlt fstpt outsb addr32 rex.R push xchg mov cmc pop hlt jnp and (bad) pushq fcoml xchg rex.WR mov movslq pushfq pop rex.RB and jns fs int mov mov (bad) mov testl gs rex.WB out (bad) int3 mov pop stos out callq mov sub add cld loopne es lock cltd cmp fs rex.WX imul rolb pop outsb rorl outsl (bad) imul (bad) pop and out fistpl std add repz jle rex.WRX rex.RXB mov adc lock fstpt cli mov mov sub add (bad) fistpl xor (bad) gs push fistl in je add rex.WX outsb callq mov rex.WRB push fndisi(8087 or rex.WXB jo data16 (bad) jae fistpl push xchg fmuls rex.RX mov pop mov (bad) retq xlat xchg repz jg in sbbl stos xchg ja jrcxz mov outsl sub sub in vpunpckhdq or (bad) loope xchg xchg rex.RX mov shll retq lea xor xchg xor xchg imul out ds rex.RB fwait clc out push (bad) jo xor fisubrl sub insb sub mov push xchg cmp jle push lret rex.R pop fs fwait (bad) xchg jnp sbb callq sub add sar (bad) loopne push mov pop int3 (bad) fisubrl and in sbb in lea stc jle subl (bad) sbb stc nop adc sbbb mov pop mov (bad) es push cmc pop adc rex.RB rex.RXB gs outsl mov push int3 xchg fcomps pushq (bad) test fildl scas pop pop std mov (bad) pop add cld and fwait addr32 outsl (bad) pop sbb stos lods cltd mov fistpl pop mov sti nop js cmp (bad) mov rcrb jns fs jnp mov (bad) jno jae xchg rcr mov (bad) jle (bad) loop xchg mov pop (bad) mov fcmovnbe rex.XB lret xor callq movabs fistl jae (bad) fistpl (bad) jno fsubrl (bad) insl (bad) rex.WB rex.WRXB rex.RX stc (bad) cmp fdivrp (bad) jrcxz or adc jne (bad) push int3 xor jnp retq push mov sbb test fildl (bad) outsl pop mov xchg add (bad) addr32 int mov movslq int3 andl jns rex.WR fildl mov jnp cmp addr32 (bad) lret mov (bad) (bad) ja movabs out rcr test rex.WR pushq add imul sub rex.WRXB adc lea add int sub movsl out adc movabs int3 fwait jnp sbb xchg jl lods jrcxz mov jae (bad) jbe fistl jne sbb push (bad) cmp add (bad) jb and test (bad) fisttpl and movabs cmp clc add rex or or movabs (bad) (bad) cmp pushq cmp and (bad) rex.RXB (bad) decq movabs (bad) push mov repz jg fstpt rex.WRB sbb fistl sbb xor adc fistpl rex.W retq pop add xchg callq mov fnstcw sub retq fldt (bad) popfq add (bad) jge test and (bad) jns (bad) sahf mov outsl fistl in pop (bad) (bad) (bad) (bad) and lods cmp pop (bad) inc es mov pushfq (bad) cwtl rex rex.WR or (bad) lock adc pop (bad) fistpl fadd rex.WB jle fistpl xlat test fwait or js mov movabs cli fcmovnbe sti hlt push int rex.X (bad) (bad) (bad) (bad) xor fistpl rex.RX rex.WRB sbb rex.WRXB rex.X pop cmp rex.WR int cmp fistpl jmpq (bad) movslq retq mov mov jge (bad) fstps gs ds cwtl lock retq jnp cmp (bad) imul adc pop (bad) cmp out jmpq movabs callq (bad) nop repz jl fldt jrcxz sahf jge sbb rcrb adc stos mov sbb gs mov pop cmpsl and (bad) test lods fcmovne jrcxz adc mov or cmpb and sti xor jne stc iret jg add insl (bad) lock mov rex.WRB loop jns rex.W xchg imul idiv fistl out fistl pop xchg and fisttpl (bad) lcall ror mov fdivrl frstor mov popfq stos (bad) mov mov sbb test in movabs sub rex.RX lods (bad) je fwait gs mov xchg clc push sub fildll add cs add jmp add pop lock jle je rex.WRXB jae (bad) fcmovnbe jne insl cmpsb mov mov fisubrl mov (bad) mov and fcmovnb mov or fmul add (bad) jnp lods sub mov adc js jb pop mov (bad) adc xchg xor pop and movabs rolb sbb mov adc jp popfq adc (bad) add add fadds and icebp fldcw fwait adc push fldt repnz out mov fiaddl imul (bad) mov test and (bad) adc cmp pop mov rex.R fdivs ficoml rex.WR (bad) (bad) jbe xchg xchg cmp movsl push (bad) loopne mov popfq rex movabs or jb or loope (bad) and push outsl fistl lret movabs fs (bad) fnop push pushfq (bad) and xchg fldt imulb fldt movabs mov rex.XB outsl (bad) jnp fmull jnp popfq jl testb outsb cmp or jmpq cmp outsl movabs scas xchg fisubl loopne lods sub rex.X rex.X addr32 lock callq (bad) sub int3 sub sub rex.WXB mov rex.X cwtl rcr cmp pop adc pushq orl (bad) cmp (bad) pop rcrl (bad) jns insl (bad) push lea (bad) movslq (bad) fstpt movabs (bad) (bad) or add (bad) jns int rex.W movslq (bad) mov xchg jle mov or nop lock fwait pushq adc and cmpsb or sbb testb lret (bad) (bad) push out shrb sti push fistpl mov (bad) fisttpl xchg ja ficoml test jnp sbb cltd sbb mov pop mov jnp rex.WRB pushq sbb lret ss pop or push test loop (bad) imul rcll xor fnstsw fs and pop rex.RXB push sub adc (bad) scas cmp and (bad) mov shrl mov xchg adc jnp imul sub cmpsb push lods enterq pop push cmp fbld movslq push fistpl xor loope jp push (bad) jmp jg push or sti ds rex.XB or and jp out and lahf mov push (bad) roll int mov (bad) mov mov xchg (bad) or rex mov sbb add ss cmp adcl retq cli mov fadds je cmp pushq (bad) (bad) push add sbb fcmovnb push pop mov push or xchg pop xchg pop lods jle (bad) movabs push (bad) cmp lret neg stos rex.RX jbe iret fcomi adc movabs insb jle rex.R push xor loope fadd jge cmpb mov int3 sub and movabs jmpq add (bad) imul lahf adc pop (bad) or insl fildl sete cmp mov scas fistpl icebp stos push cmp insl fistpl stos cmpsl jge jo xor out push fldt fsubrl xor xchg or push retq test sarl (bad) fwait in data16 push movabs push sbb (bad) (bad) push xlat retq out out leaveq (bad) or rex.XB movslq (bad) rex.R xlat rol fildl insl (bad) (bad) jl lods nop sahf fstpt (bad) jnp (bad) jg pop jp imul cmpsb mov (bad) stos fcomps iret (bad) movsl popfq rex.WR and fildl (bad) icebp sub and fisubr sbb pop xchg rex retq jae jmp not cmp movslq or stos add and (bad) mov mov cld (bad) loop movsb (bad) jnp fildll leaveq test ficompl (bad) in popfq xchg (bad) (bad) push fmul movabs fldt rex.RB rex.WB cmpsb js pop es fcmovnu adc jno fisttpl in pushq fidivrl adc push (bad) rex.WRB xor pop and lahf fisttpl jae cli fistpl (bad) jns rex.X mov (bad) js (bad) addr32 movabs test jnp sub fstpt mov ss insl fistl ja push (bad) out loop rex.RX push fstpt xor outsl fwait or adc push (bad) pop rex.WRXB or (bad) out lods jrcxz cmpsl loopne (bad) ds push roll or push mov loope (bad) push pop fcoml or (bad) sub jle adc push (bad) fwait ds or test incl sbb or rex.WX mov fdivl pop xchg jne nop fistl sbb rex flds add mov pop rcr (bad) (bad) scas ds (bad) test movsl mov fldt sbb xor xchg (bad) adc movslq fstpt test movabs in (bad) mov pop adc adc pop xchg (bad) mov sbb (bad) rex.X rex.WB leaveq outsl mov out shll adc callq jae mov adc and imul scas jnp clc xchg fidivrl hlt fwait cmc adc movslq fisttpl movabs repnz notb subl (bad) gs fisttpl or lods (bad) rex.WRXB fistl mov pop push sbb cmp xchg or scas mov fwait (bad) jmpq mov ror lahf shlb jnp add lock sbb movslq pushq xlat stos (bad) rex.WR jmp jbe or and repz retq mov rex.RB push (bad) or (bad) mov (bad) outsl rex.W rex.WRXB lock (bad) ss add xchg test xchg gs lock mov adc andl sub rex.WXB rex.WR clc (bad) out adc mov add xor fistl cmpsl push test rcr movsl rex.WRB or (bad) insb imul cmp cmp pushq rex.RB mov sbb (bad) fistpl sbb pop scas fistl or or loopne pop sbb movsb movabs imul lock xor xlat or mov es jo fsubrl mov sbb fildl (bad) (bad) mov ss add sbb (bad) (bad) xchg lret fistl mov xchg clc sub fcom sbb rex.WRXB xchg jo imul test rcrl mov fsubrs rex.RB ds push (bad) xor fwait scas mov cmp (bad) rex.W (bad) fwait stos fwait adc test jne mov sub pop rex.WRXB rex.XB mov jle (bad) rex.WRB lock (bad) (bad) lahf rex.R rex.RXB fs cs sub (bad) lret sbbl pushfq insb mov addr32 iret rex.WRX (bad) setnp mov (bad) add hlt std pushq test testb or push add (bad) fistpl mov add fcomps fs je hlt jo fwait ds fcmovnb push lahf or iretq rex.WR ss loope and fist jnp xor xchg jo loopne add movabs xchg jns lret in rolb rex.RX rex.WR cmp pushq addr32 stos retq cmp xlat and lods sub int3 and mov pushq fstpt or movabs (bad) fistp ljmp rex.WX out push rcrl mov scas cmp push jmpq (bad) imul lock rex.RX loope jl fcmovnb enterq loopne add insb jae (bad) (bad) rex.RXB add mov xor cwtl sbb sub jg sub movabs pushq cmp and clc pop mov cmp or rex.RXB data16 fstpt pop mov enterq lret fistl rcrl jnp jl jrcxz jle add jge mov fcmovne adc cltd mov loope cmp gs cmp jnp pop (bad) mov movabs adc out mov jns (bad) (bad) mov mov and pop jnp mov push mov and movabs insb fistl ficomp jmp adc decb and and (bad) and sarb sbb or rex.XB cs lret fldl mov (bad) es clc mov subl mov push rex.X push ss jnp pop nop es rex.R bnd (bad) mov sub outsl mov mov pushfq out popfq and hlt pop mov xor fldt mov loopne or add fldt loope retq and mov (bad) xor sub fdivs ja rex.WR adc in cmp addr32 lods test add rex.XB retq (bad) fcmovnu clc or cmp pop xchg xchg (bad) mov or xlat sub loop rcr or pushfq test pushq gs xstore-rng cmpsl rex.RB mov (bad) fwait sbb rex.WXB rex.WRXB add rex.WR adc xor sbb fstpt popfq shrl adc mov fwait pop std mov (bad) loope pop test rex.WRXB and (bad) imul fisubrl sahf stos int int3 mov jg jp cmc xchg fucomp repz adc in mov fisubrl movabs rclb cwtl cli mov (bad) lahf outsb (bad) mov sub fisubl rex.RB cmpsl (bad) mov movabs loope sub sbb xchg (bad) (bad) cmp cld rex.R subb rex.X (bad) jne fdivrs rex.WRXB rex.WX mov lods xor mov xlat pop enterq js xchg (bad) rex (bad) stos xor fstpt scas push jle test rex.RB (bad) (bad) mov stos pop fcom xchg adc push imulb (bad) cmp gs add sub iret cmp (bad) fnop insl movabs ficomp xchg rex.WRX sbb (bad) adc cmp jmpq or (bad) xchg fcmovnu leaveq xchg xchg fldt pop in push clc sbbl sub mov fcompl popq scas xchg xchg stos out retq fldt cwtl (bad) test sahf (bad) xchg sbb (bad) jg int ds ja jnp mov mov (bad) rex.W (bad) fcmovnb or movsl push loop xor and sub loopne adc jo mov sbb popfq push rex.WXB scas jnp jne addb cmpsb add jge ror xchg rex.XB mov pop jp test add es popfq add sub jge test (bad) sbb sub add (bad) push lock mov sub cmp xchg add loope insb mov cltd mov jnp loopne rex.WRXB repnz repz cmc (bad) mov mov cmp (bad) pop cltd add lea repnz cmpsl mov pop stc jmp adc imul retq imul rcr je xor fistpl adc clc (bad) mov and rex.RXB add xor movsl (bad) (bad) sub adc (bad) xchg jno repz test int3 data16 fwait xor (bad) lret es jb (bad) xor jno (bad) xchg stos scas clc lods retq fisubl icebp sbbl movabs rex.WXB push jae rex.X fs rex.WRXB cmpb rex.RX int ficomp xchg (bad) mov iret sbb scas rex.RB (bad) mov (bad) fistl test jge lret jle movslq mov imul test stos rex.B rex.RX rex.WR xchg (bad) fisttpll out int mov xchg rex.WRXB (bad) out jno movabs fildl loopne fcomi callq and iret adc cmp rex.RX insl vpshufhw movabs (bad) jae loop (bad) and (bad) mov pushfq rex.WRXB rolq fcompl pushq (bad) fstpt rex.W (bad) js,pt fldt imul mov iret test xlat xor mov cmp frstor ja mov (bad) mov rex.WRX pop addr32 adc jo (bad) decb xchg add xor test pushq and adc jmpq incb (bad) push xor jp push out callq rex.WR mov addb jo adc rcr retq xlat stos lret xor test repz subl outsl addr32 scas insb mov jl jp fstpt out stos (bad) in out fistl jns pushfq jne (bad) fninit cltd rex.R sbb xchg retq mov fstpt lret fistl pushq loop jnp cld cmp rorb mov cli sub rex.WR rex.B fistpl out es (bad) rex.WRXB sbb fcmovnbe ss jo push (bad) orb repnz (bad) js (bad) rex.RXB mov gs adc rex.R lret mov rex.WRB fidivrl lods frstor (bad) mov (bad) push pop movabs rex sbb rex.RB cmp (bad) mov mov pop pop pop push mov iret (bad) (bad) (bad) jmp movabs cmp and iret push cwtl (bad) mov js sub xchg fs (bad) mov (bad) pop addr32 jp (bad) mov pop and jb sahf fistl mov push mov cld fistpll push fwait mov mov cwtl rex.WB push (bad) mov rorl sbb pop adc (bad) out pop js ja mov sar flds jle xchg sbb (bad) jl cli in (bad) data16 fwait or iret adc push or jge (bad) pop rex.RXB out push add pop add (bad) and add pop or cmp negl rex.WRB lahf (bad) rex.WRX fwait xchg sahf mov cmp xlat movabs scas and rex.R jno (bad) xchg stos pop mov cmc (bad) out stos mov mov adc stos or cmp fwait cmc xor movabs sti setg jl (bad) push je sub push (bad) (bad) cmpsb out mov stc pop xchg (bad) xchg ss rex.X and xchg pop scas loopne sbb sbb cmp rex.B mov pop movsb and test and mov (bad) add adc mov rex.X cmpsl out data16 fs xchg fist (bad) cmp rex.WR fcomp xchg sbbl movabs xor xor sub sub xor add cmpsb mov pushfq mov mov cld (bad) sarl and or xor pop cmp retq adc leaveq fwait mov ljmp rex.XB rex.RB es push rex.WB mov sbb adc xor (bad) mov mov (bad) xchg cmc pop xchg (bad) out (bad) (bad) cli cli add fs and sti xchg in pop jl out in push rex ja jl (bad) test and lock mov roll xor rex.XB xor cmpsb sbb movslq jg in or out jb loope rex.R mov iret sub ror enterq lods or (bad) add cltd out pop xchg out cmpsb ficom xchg adc stos imul or in scas cli pop gs rcr (bad) xchg cmc add jnp mov xchg jns cmc xchg pop repz and hlt insb xlat retq push je sbb and mov (bad) in rex.WRXB mov (bad) mov gs insl (bad) xor es adc pop (bad) icebp pop and (bad) in and cmpsl xor or mov ja rex.WR (bad) fiaddl rex jo cmp fldt (bad) mov jo repz out lret mov adc int and xchg add leaveq (bad) pop (bad) push mov fsubrs ss shrb adc pop xchg xchg push adc xchg cmp movsb sbb (bad) iret xor rex.X rex.WRXB (bad) mov sbb iret rolb lahf mov fldenv push xchg (bad) or movsl or jmp (bad) sbb repnz or callq js add (bad) jge popfq sub or (bad) scas movsb pop xor movabs mov (bad) out or fisub in rcl mov sub mov test pushfq (bad) loope (bad) pop (bad) cwtl sti xchg adc xchg mov mov fstps fcompl xchg cmp jb cmp (bad) repnz sbb iret (bad) sti jnp (bad) jg ror sahf (bad) mov xchg popfq leaveq out outsl pop enterq jp and sti push add mov in ja cmp jns push (bad) rex.W clc movabs iret gs orb jae pop sbbl fistpl out gs jrcxz fwait in (bad) fmull shr push xchg push lcall andb jo movsb scas and lods fnstenv sarb test (bad) movabs pop callq xchg lods xchg retq cmp (bad) lea jne out retq rex.WR xor xchg sub fstpt rex.X and shll fldt movsl mov and repz push pop xchg orl rex.X mov pop (bad) cltd rex.R pop (bad) jae test fnsetpm(287 cmp mov pop and rex.X rex.WRX (bad) xor add push jl rol (bad) fisttpl xchg adcl pop push fwait push cmpsl popq push pushq sbb movabs test in rex.XB xor rex.WRXB decl gs push and fldenv callq push mov cmp stos and retq fwait xor (bad) rex.WX add pop (bad) mov push pushfq lea imul lahf test in stc insb nop add or xchg mov (bad) stos push ss subl (bad) in lret push test jmpq (bad) and sar mov rex.WR movabs mov pop sub (bad) lret fidivr mov rcr xchg jno mov sub jmp rex.RX fwait mov sbb out or fisubrl rex.WX push sbb or (bad) out cld jno (bad) fidivl sub push pop xor mov ds fstl sbb clc std sti mov and (bad) (bad) popfq push or xor xlat movsl lea mov rex.R shlb rex.WX jrcxz pop insb mov popw xor fidivl stc mov xlat add (bad) (bad) add rclb jno fsubl lods addr32 and cmp es pop sub popfq or (bad) and xor fnstsw pop (bad) mov scas out sub jmpq xchg cmp xchg sub nop rex.WRXB xchg xchg sbbl xlat sub cli pop fldcw mov (bad) xchg mul xor loop add (bad) add jbe lret xor mov jnp mov (bad) cmp pop rex.WRXB mov pushq lret xchg add sti push xchg jae movslq xchg rex.WRXB mov xor in je mov iret pushfq clc test pop jb xchg mov jp fisttpl sti (bad) add jns lods and xchg retq (bad) rex.WRXB in jle data16 add mov (bad) rex.B and sahf fcmovbe push and adc jno fistl (bad) (bad) rcrb pop retq cmpsb xor movslq xchg fistl rex.WB fcomi sub out movabs fimull mov fidivr out push cwtl sub enterq test (bad) (bad) push stc xlat fwait xor push xor and xchg (bad) roll adc insb (bad) fcomps ss (bad) rcr pop (bad) loopne iret test lods lods pop jmp push xchg xchg sahf add adc and cmpsl scas shl cmpsb out mov push (bad) sub push jbe xchg in test hlt push xor push or (bad) or xchg cmp es mov mov rex.X jne pop xchg out mov mov out sub and jnp test (bad) (bad) mulb (bad) test mov rex.RB or cld insl rcrb lods mov pushq xchg out add rex.RB rex.WRX rex.B jno retq and push sbb (bad) mov rex.W rex.W cs lret (bad) fadd std enterq jp leaveq cmpsl mov pop cld (bad) add push rcl (bad) jle hlt mov ficompl fwait iret and pop push xchg enterq movabs fcmovnu int ljmp (bad) xor fs rorb ficoml jo repnz sarl add push loope fld test repz jmpq and (bad) fnsave stos cwtl leaveq mov (bad) push movabs fldt xlat cmp rex.RB rex.RB rex.W data16 rex.WRB jl,pn (bad) push (bad) pop adc (bad) sub jge or sbb (bad) loope push out sahf int3 (bad) xor fistpl adc and retq imul (bad) lret cs fistpl push (bad) xchg js push fistl xchg mov fstpt mov movabs fldl cmpsb fcmovne pushfq lret out jnp jnp xchg mov xor (bad) bnd pop jmp movsl (bad) lret push stos and (bad) xor int3 xlat fcompl (bad) xor jb mov lods sbb outsl (bad) mov fistl (bad) (bad) jb hlt scas cmp in pushq lret cmp push stos mov clc lods jae (bad) xor ja mov sbb cs imul fistpl enterq rex.WB xor stc loop mov fwait repz jle rex.R rex.WRB std mov pop movslq (bad) mov cltd addl (bad) (bad) ja fcomip addl loop,pn fstpt bsf movabs shr fstpt es mov sbb adcb jge js sbbl (bad) sbb stos (bad) lods cmc callq add iret fcmovnbe (bad) rex.RX lret push addr32 rex.WR stos sub movabs or fcoml push jne addr32 int rex.WXB lret (bad) fnop fcmovnbe (bad) rol rex.WRX fs (bad) jnp outsb (bad) (bad) and pop scas or pushq sbb or xchg rex.WRX rex.R xor fistpl jrcxz in (bad) sub mov fistpl out movabs push (bad) movabs sub sbb xor (bad) sbb push rex.WR lahf (bad) pop push (bad) push cmp xchg or (bad) or mov sub rex.WR (bad) rcll outsl outsl in pop test (bad) icebp or push pop jae and callq outsb movabs (bad) jns fistl pop scas xchg fucomi jns and xchg (bad) push retq fwait cmpsl je mov ds mov int (bad) sub mov sub retq xchg stos testb loop fldt (bad) rex.WB movabs iret mov ja sarl (bad) movabs (bad) out sub frstpm(287 push rex.WRB shrl pushfq pop loop movabs sbb (bad) sbb rex.WR or outsl fldlg2 hlt (bad) in rex.X sbb lret fcmovne (bad) stc in mov lods fistl add adc in sub imul mov (bad) stos fbld insl add (bad) out (bad) rex.W cwtl fldt rex.WRXB rex.X mov in push clc (bad) add sub stc or movsb xchg pop ss (bad) int pop sarb pop rex.WR push sbb (bad) pushq mov pop mov flds add rex.RB pop fucom rex.WRX nop imul push (bad) mov pushfq sub imul add mov (bad) pop (bad) xchg testb mov (bad) and fistl ss mov push lret sahf mov jno (bad) out and pushq or cmpsl mov push lret (bad) jl (bad) (bad) movslq insl mov insl cmp pop popfq adc movslq mov cmpsb enterq sbbl mov repz fistpl cmp (bad) rex.XB xlat retq and rex.X mov data16 out fistl and rex.WRX rex.RX fs ficoml mov jo repnz pop mov movslq stos (bad) stos jbe (bad) fcoms lret jnp pushfq add jnp fnstenvs pop movsb mov rex.WRXB frstor fmuls ds rex.R jl pushq xor (bad) std fincstp (bad) (bad) mov fistpl and lock lret (bad) in test imul add jmpq sub (bad) cs xchg mov (bad) popfq lods push cmp movsl push mov cmp cmp rex.WR fadds (bad) adc cmp (bad) and mov cmp pop iret mov fisttpl mov sbb fstpt (bad) movabs lahf imul stc cmp mov push mov imul (bad) mov mov and lock addr32 cmp outsb fldt jns (bad) gs fcmovne and movabs mov xchg fstpt loopne and adc lods movslq (bad) jg jno pop sub xor rex scas mov fstpt add pop rex.WRX cmpsb rex.RB fiadd xchg push jae in mov sbb fstpt add fwait pop int rex.W adc addr32 leaveq adc lahf mov push mov decb fucompp sbb loopne icebp sbb decb xor rcrl fucomi (bad) sbb mov jb mov (bad) rex.WB fwait sarl pop jo sahf movsb stc mov je mov mov mov (bad) fwait movsb push test (bad) rex.WRX mov (bad) fnop mull pop rcrb loop (bad) in imul or rex.WB mov movsl xchg (bad) ds cmp jmpq (bad) lods mov jnp icebp pop callq retq (bad) jbe (bad) mov rex.XB (bad) imul lret push je push (bad) or push (bad) or movsl lret sub and add sbb sub fldt nop rcrb xchg in adc adc (bad) jb fldl loope outsl pushfq int3 sarl shrb rex.W fwait movabs (bad) or fistpl (bad) js mov sub mov lret xor mov lret test lock sti pushq mov (bad) pop sahf fisttpl rex.RXB hlt es bswap (bad) cmp sar add sbb pop jrcxz fidivrl lahf rex.WB cs (bad) out frstor cld jrcxz and (bad) cmpsl andl add addr32 rex loope rex.RXB add rex.RB cmpsb leaveq flds movslq in cltd rcrb adc xorb test int3 or rex.WR lret test (bad) fldcw cmpsl fstps cli pop (bad) mov cmpl xor lods imul add rex loope or xchg adc js pop pop adc xchg sbb adc out rex.WXB orps (bad) pushq (bad) stc cld rex.XB repnz sbb pop mov jg (bad) cmp out rex.RB shrl and cmp lahf std jl stos sbb stos jl mov cmp mov (bad) fist jg jg rorl (bad) pushq push pop (bad) (bad) mov fcomps add clc jle popq push (bad) jmp mov in xchg (bad) jmpq add pop lea jnp or lea cmc test adc std test roll in iret lret add sbb jae sub and xchg out cmpsl imulb cmpsl clc push (bad) (bad) out cs pop loop sub jp movabs jns push fdivs mov push fwait lods rex.R mov add insb in test cmpsl insb (bad) sbb cmpsb pop (bad) cmp hlt mov jae lahf je adc sbb in and xlat cmpb addl fiadd xor jg mov mov out or orl in sbb rex.WB imul cmpsl rex.RXB (bad) (bad) cmpb jo xchg pop push sub fwait jno imul fwait mov jle adc test imul cmp (bad) or cltd cwtl jp jmp jge mov lock sub mov or out nop push or (bad) (bad) lahf (bad) add sbb (bad) push (bad) movslq (bad) imul rex.WB retq loop xchg jns imul in push gs (bad) xchg jrcxz (bad) rex.RX fs (bad) icebp cli add mov (bad) add (bad) jmp (bad) sub sbb mov sbb (bad) out xor cmpsl (bad) imul add and rex.XB rex.WXB sub xchg cltd loopne sbb xchg xchg mov lods (bad) jp mov lahf (bad) test pop pop loopne (bad) add jo ja movsl ss and mov int3 adc (bad) sub retq sub sbb cmp (bad) or cmp rex.WRB sbb sbb jns (bad) mov pop ja (bad) jae sub and (bad) imul jp xchg jo cmp push (bad) jg cmp shrl pop sub (bad) push fs test leaveq in dec (bad) mov jmpq int ja mov retq fwait mov mov (bad) pop pushq enterq (bad) xor (bad) fisttpl sbb (bad) outsl push int negl out std (bad) movabs loop (bad) cmc sbb cmp in fimull nop imul mov rex.RXB addr32 (bad) fistpl in rex.XB rol pop scas rcr cmpsl retq push mov rex.RXB (bad) push fcmovu jae or int lock rorl (bad) kmovd lret fistl rex.WR fbstp sbb sub or fstpt and jae and outsb jmp (bad) sub movabs lods mov or adc and mov (bad) mov mov movabs out (bad) fnstsw xor (bad) stos (bad) imul rex.RB flds js pop push callq (bad) int cli fbstp packuswb mov mov pop and xlat (bad) (bad) xor sahf push (bad) mov lods jl test pop (bad) mov outsl sub adc jno push out (bad) jo rex.WRB outsl fisttpl sbb pand int3 jno test mov sbb in std imul jno or rex.WB jb (bad) (bad) outsl jle xor xchg rex.WB xor mov mov mov and push cmp sahf test sbb jge push lods movsl rex.X push insb icebp rex.WX lahf cmp xchg pop fimull movabs jge loopne xchg cld movabs rex.WRXB xor rex.RX loope (bad) cld out fisttpl rex.W rex.B rex.WRB cmp rex mov lret loopne sbb jl sub fildl xlat cltd pop or in cmp lea int3 je or and (bad) sti cmp enterq mov rex.WRXB (bad) and rex.B rex.XB ror sahf mov pushq ljmp jns sbb fisubl sbb test (bad) sub xchg (bad) xchg jnp fcmovnb enterq test xor clc mov jrcxz xchg add mov adc adc subl mov jae fildl sbb (bad) add int3 mov (bad) fstpt imul pop in cmpsl (bad) popfq bnd pushfq jne fistpl mov mov movabs pop xor (bad) add (bad) jne popfq pop rex.X xchg insl jnp bnd (bad) (bad) rex.XB in in repz sub jnp xor xchg (bad) mov lea fildl cld cli add pop add xor cmpsb (bad) mov (bad) movabs jge xor js mov mov mov fcmovnbe jg test rorl mov ror movslq or lock fmull (bad) mov fmulp xor fistpl lods scas mov rex.R jno pushq cli sub callq (bad) rex.RXB jb sub add xchg adc rex.WB push pop fldl jmpq (bad) and (bad) pop xor fstpt cbtw hlt fildl or ficom pop xlat rex.WR callq push xchg pushq iret lret test out sub imul data16 mov and movabs (bad) pop push add nop pop fwait movabs xchg fcoml cmp xor repz rex push in (bad) out (bad) movsb rex.WXB and push rolb push add in push (bad) (bad) fcoms xor xorb and sub (bad) add mov push insl adc (bad) test (bad) rex.WXB cltd add repnz jmp cmp push cmp jge shrb test fisttpl out and lret mov icebp out add and (bad) push fwait add outsb (bad) xor cmpsb xchg lahf add and adc int3 fidivl std imul iret sti mov loopne in (bad) add cld (bad) jmp leaveq repnz xor fldt adc (bad) sbb pop fcmovnbe popfq insb loop shld cmp push fcomi cmp test std pop mov movabs rex.R sub fistl jge jbe callq mov rcr sbb (bad) (bad) sbb out pushq mov scas (bad) xchg push rex.WRX fistl add xchg lock out fucom adc repz test jae (bad) int (bad) add loop mov or scas in and fldt (bad) nop jns jp fistl lret retq mov int3 xchg gs setbe (bad) pushq loop mov mov jnp jrcxz cld and (bad) cmc movslq fstl movabs repnz movabs test adc out cmp rep lods fisubrl mov repnz sub jge rex.W pop cmovns (bad) movsb (bad) cmc movabs add (bad) mov adc or movsl (bad) lods shll outsb pop cmpsl pushfq decb fist rex.RX movabs mov xchg push cltd cmp (bad) xor imul mov (bad) fistpl and pushq (bad) insb icebp (bad) sbb xchg int imul jp pop adc fnstcw pop sbb pop fsubs lods mov (bad) fcompl cmp (bad) movabs (bad) add (bad) ss (bad) (bad) xlat fisttpl jb rex.WX scas lret xor (bad) sub mov outsb subb ds hlt fildl adc add mov ror (bad) rex.WRB sbb and (bad) xor (bad) out pop lret mov add movabs retq movabs (bad) fistl outsl sti or pop jl mov adc lret xorl cltd retq imul repz js out movslq scas (bad) movabs movabs cmp rex sahf fistpl stos (bad) mov test jl pushq leaveq shlb adc mov out retq std add loop xchg fistl rorb pop enterq rorl (bad) push rex.RX cmp idivl hlt mov fldt (bad) outsl or mov out fimull stc movabs (bad) fldl outsl fistpl rex.RX mov push (bad) xchg (bad) popfq fs jrcxz mov xchg test ja (bad) pushq or ss sub sub in stos pop lods rex.XB cmpsb movsb xor adc sub adc mov jmpq movsb pop sub stc adc (bad) sbbl cs fcomi iret negb push rex.W nop fcmovnbe rcrl (bad) xchg jg int3 mov cmc push outsb (bad) (bad) pop mov movslq mov (bad) test hlt faddl (bad) negb mov mov or add (bad) push xchg add xchg jns imul rex.WRXB mov adc stos incl enterq mov hlt (bad) loope fwait pop mov cli pop sub ds movabs stos jns (bad) out xchg pop mov cli fistpl (bad) out movabs (bad) (bad) xchg (bad) jl and sarl rex.RX (bad) movsl ja rex.X mov xchg push std fistl data16 in jge fcmovnu jmpq jbe fnstenv (bad) test mov movabs mov pop mov fucomi test cmp (bad) mov add loop (bad) fcoms or fdivs fistpl cmp ss jbe (bad) ds jrcxz movsl rex.RX rex.RX fwait pop mov sahf adc xchg jmp add sbb lret outsb mov cmp and cltd (bad) pop imul jg mov cmp movabs rex.XB jns scas cmp jnp sbb pop roll gs outsl mov mov cmp mov leaveq fidivrl fwait mov shr add out nop pop fcmovnu sub cmpsb rex.R xchg rex.XB cmp (bad) mov sbb jnp (bad) xor (bad) mov outsl cld int3 (bad) (bad) je iret fisubl (bad) cmp rcrl and lods testl insb push ficompl push (bad) cmp jnp add (bad) or xchg scas fildl je or adc fldt rex.WRX (bad) lock in lret xor test fcoms (bad) imul movabs insl jbe retq sbb leaveq ja imul add out fmuls fistpl retq push (bad) (bad) retq fwait add in lea jl (bad) adc add jmpq jmp sub cmp rex.WR mov rex.WXB jp push sahf imul pop xorb adc mov ja pop mov xlat (bad) (bad) cmp xor mov scas and (bad) xchg hlt mov add cwtl rolb or fucomi jns popfq add fistpl fiadd (bad) outsl fldenv iret add (bad) and jmp fisttpl add sub leaveq (bad) ficoml test (bad) fisubl (bad) xchg rex.WB xchg test adc jbe sub sbb adc mov insl ds adc pop rex.WB rex.R jb ds retq repnz in xor movabs adc adc sub mov lret (bad) cltd (bad) rex.RB fdivs jae movabs jno xchg mov mov cld adc jnp pop and or mov pop mov sti pushfq adc rex.RB repnz push mov add pushfq sahf leaveq sbb sbb pop mov (bad) cwtl (bad) fisubrl pop lret xor xchg cs (bad) mov std or cld push ss pushq adc andb flds (bad) jbe xchg and sahf sbb movabs sti pop add out outsl rex.X xor rex.RXB add movabs jns movabs jge,pn stos fist imul data16 std sub mov lods (bad) mov jae fnstcw mov sub cmp iret sub rex.WRB clc in sub lret adc (bad) jo test movabs or xchg fwait popfq rex cli jo pop cmp rex.WXB fcompl je pop fldt cwtl rex.WRB clc (bad) or pop cmp jbe sub pop (bad) jb rex.WRX add adc jae movsb pop out add push fmuls sbb lock insb or (bad) jb mov pop mov xchg (bad) out pop imul insb cmp callq test xor out test push addr32 je xchg (bad) lods fnclex test popfq rex.X cmpsl fcomi (bad) pop movsl rex.R rex.WRB mov add movsb (bad) sahf insb orl (bad) mov je and jns sub jnp pop cld jo (bad) (bad) out cmpsl (bad) jno mov xor adc jo jno stos (bad) cmp hlt rex.WRB mov (bad) imul rcrb xchg push jne cmpsl mov rex.RXB (bad) mov pop jbe rex.WR (bad) mov jge fwait sbb push xchg (bad) mov jp jnp jg ds (bad) fs mov jbe sbb (bad) cmp cmpsl xor outsl repz pop mov mov xor mov mov fucomi (bad) sbb jmpq icebp fistl rcll and (bad) movabs cs push pop addl pop (bad) decl fiadd (bad) (bad) sub jrcxz xor push movabs lock rex.WRXB imul (bad) or (bad) xchg mov test xor mov (bad) cwtl test rex.WRB rex.XB fwait jae sub imul and sbb iret and (bad) je pop add fimul rex.WX jnp callq lock movabs retq (bad) addl pop stos jb xlat mov and fwait mov xor (bad) pop in (bad) js sub cmp sbb add fldt rex.R fisttpl shr (bad) lahf scas fisttpl pop xchg jo pop sbb (bad) jl xchg lret xchg fisttpl popfq lods (bad) mov xlat rex.W (bad) repnz sub fsubs lret mov outsb push mov sbb xor sarl (bad) xchg (bad) fnop movabs mov xchg (bad) pushq (bad) (bad) xor rex.XB decl fistpl (bad) rex.WR (bad) out mov imul test (bad) lock pushfq test stos fadds jmpq and rex.WX add fildl scas mov (bad) (bad) or mov (bad) adc out mov lods mov movabs repnz mov cld rex.WRXB xchg (bad) fcmovne idivl stc movabs out jnp xchg mov stc int je jnp adc rex.R or hlt add jle ds fidivl callq stc bnd nop (bad) push rex.WRB mov mov sub std loop cli (bad) pop (bad) jns js xchg (bad) xchg push lea (bad) cmp fisttpl outsb jne mov pop in addr32 or in stc mov stos fcmovnbe sub addr32 flds ja sti fucomi and ds (bad) jmp (bad) rex.RB or fadd xlat push add movabs xchg jnp and jp sti fimull pop sbb out sbb popfq mov rcrb ss es loopne (bad) gs mov fcmovbe pop push jno pushq (bad) pop fwait jbe rex sub jp lea fstps clc (bad) sbb jns jae cmpl (bad) nop (bad) and adc rex.X push in (bad) (bad) lods clc adc pop mov outsb retq (bad) fldt gs xchg fcmovnu mov test rcrb test jp sbb jno (bad) imul cli in xchg push (bad) fmuls insb callq mov push fisttpl stc jg jno stos fstpt rex.WRB or xchg fcomp js pop outsb fistl xchg (bad) xchg (bad) xchg insb fldt imulb cli pop (bad) out stc (bad) fiadd jle adc div fcoml fisttpll sbb push rex.WB rex ja pushq mov pop cmp push cmp (bad) sbb retq fwait in ja hlt fldt pop xchg fs (bad) (bad) cltd rex.WXB sbb (bad) (bad) pop (bad) xchg or jl int fisttpl (bad) rolb sbb sti cmp pop mov rex.X jge out xchg cmp or xchg rol adc adc jo fucomi xor add enterq lods cmc (bad) stc movsl pop loopne fldt lods push out adc pop push shlb es add retq adc and movsb or (bad) loop sbb repz push movb xor push fsubs data16 or ss clc sbb frstor xchg movabs ficompl pop stos push pop (bad) and push pop cmp enterq loope rex.R xor rol add loopne (bad) (bad) pop jo cwtl push insl rcll mov rex.WRB mov pop fs adc add mov imul in frstor add lret xchg fstpl rex.RXB fwait lock jns xor (bad) xchg rex.WX popfq cmp pop mov lods adc mov rorb push hlt or xor lods fistpl (bad) stos (bad) mov cmp rex.R jne (bad) enterq retq popfq (bad) (bad) mov xchg (bad) pop and test test jne mov push jo pushfq scas fstpt in rex.WRB adc ss jbe push jmp lret mov (bad) (bad) lret sbb (bad) mov fldt xchg adc imul insb rex.WRX sbb jrcxz rex.XB fisttpl rex.WRXB in rex.WB rex.WR fcomi and xchg sub xchg rolb (bad) retq add (bad) add outsl cmp sub cmp xlat stc out push fistpl (bad) js retq and ljmp insl fwait xor lahf mov push fcomi xlat mov jp je iret insl pushq xchg jo mov (bad) imul rex.WX cs addr32 push retq lods (bad) (bad) (bad) pop cmpsl jg sub rcrb pop test addr32 nop (bad) div in (bad) jb pop jo (bad) clc cmp movsb mov lret insb (bad) mov test (bad) callq push cmp fs (bad) pop (bad) outsl out lods mov lods adc movabs (bad) xchg rex.X out cmp rex.WXB jmpq mov (bad) outsb xor callq movabs add mov pop sarl rex.WR icebp pop pushq mov (bad) add fdiv pop cmpb (bad) (bad) jbe add xchg test pop fildll popfq rex.WRX sub jno pop jp rex.WX or (bad) repnz sti jns movsb out sbb rex.WRXB rex.B rex.WRX pop cmp fistpl xchg imul pop (bad) jae jp (bad) sub rex.RB rex.X shlb cmp sub xor pop pop movsb rex.WR push (bad) mov callq push xchg insl in adc or rex.X repz fstpt adc sbb loop rex.XB pop (bad) pop outsb test callq fisttpl je mov (bad) loope (bad) enterq in fisttpl cwtl retq (bad) insb mov push add xchg test icebp cmp rex.R sbb cmp sub pop (bad) test xchg mov xor movabs or (bad) pushfq je jb adc rex.WRXB cmp loop cmp cwtl lahf fwait (bad) xor cmp (bad) imul mov xor lret mov (bad) push (bad) fldt adc rcrl mov retq fsubrs (bad) (bad) movsb jle rex.WR xchg push xchg sbb jns xor rol enterq out mov std ds js xchg jg rex.XB or mov sub adc loop and rex.W retq sub push sub out push (bad) cltd sbb movabs pop retq roll callq jg sub (bad) lahf and in fistpl mov xchg (bad) fisttpl (bad) adc (bad) (bad) pop jle fstp rex.WRXB pushq pop cs xchg mov or sub rcr xchg loopne sub rolb fucomi pop rex.RX cmp adc decl movabs mov stos retq sub (bad) push or je shll and fstpt xchg sar clc mov rex.RB rex.WRB add push jrcxz pushq movabs adc (bad) sti loope out pop jae jb mov jne loope in xlat sbb add sbb cli sub rex rex.WX stc out popfq stos add and fsubl jmp hlt pop fistl add (bad) pop rex.W xor shrl int3 and rex.WR rex.RB sti fnstcw rcrb (bad) pop (bad) xchg loope push pop mov outsb (bad) outsl mov rex.RX iret cmp (bad) (bad) and fmul pushq retq xchg (bad) (bad) sub clc mov adc scas sbb (bad) clc pop pop addr32 add lods mov (bad) (bad) jge in xchg (bad) rex.WRB rex.XB adc jle,pt lsl xor test frstor movabs add adc andl cli lret add mov repz rex.R rex.WB sub cmp js rex.X mov retq fistpll sbb (bad) add imul cmp (bad) push mov xchg fisubrl sub sbb stos push sbb (bad) (bad) enterq out (bad) mov insl xor push mov (bad) (bad) jb callq pop or fistpl xchg or rclb int adc cmp xchg xchg fstps (bad) mov leaveq fidiv lret (bad) ja jb lea (bad) add jbe add (bad) iret loopne xor pmullw sbb add imul jnp stc scas (bad) xchg pop imul (bad) ss fimull pop callq xor jbe xchg cmpsl pushfq sbb data16 (bad) movabs adc pop mov cs rex.WXB mov data16 jmp out or pop sub or cmpsl scas mov (bad) sub (bad) pop js xor add ds rol (bad) ds pop sti cmpsb (bad) rex.RXB and flds mov lret add mov cmp ss (bad) outsw (bad) cmp in rex.RB lret xor rex.RX mov cli addb fwait mov sbbb ss push pop xlat jae rex xchg mov or mov jp and jnp jle (bad) jo (bad) scas (bad) (bad) movsl xchg fildl cmp sub lock (bad) jne leaveq fs pop nop mov in xchg je (bad) pop testl sbb fwait sahf fsubrl pop push movsb fnstenv push mov pop sahf rcr cmpsl or xchg and movslq adc cli subl pop in (bad) jne (bad) enterq (bad) rep fwait push test imul push fldt outsb retq cmpsl lea pop push fldt xor xchg out in sbb movslq sub xor pop (bad) or ja test or rex.WRXB sbb sbbb ficom (bad) loop lock fmull push mov fldt test sti jno rex.WRXB rex.WRB jl mov pushfq iret (bad) hlt push cmp lret rex.W rex.XB cmp pop int3 jbe leaveq rex out scas loop js (bad) sahf lret xchg sub add fistpl sbb movabs rolb jb sub jbe jge popq cwtl rex.RXB (bad) out stos fs sbb callq and jnp (bad) push pop fcomi (bad) mov (bad) xchg add push int3 sub fsubp and xor rcl cmpsb fldt mov (bad) mov sarb or ss insb pop sbb gs jnp rex xchg fcmovnbe mov xchg cmp js adc mov sbb in cmc in jl mov cmp mov gs fcmovnbe push rex.R movabs mov rex.WR fwait cmp pop sub movslq cltd mov (bad) fistpl nop fnstenv xor fwait test xor (bad) fiadd movslq mov xor outsl pushq int fistl mov xlat push mov adc fisttpl leaveq (bad) fisttpl mov pushq repnz fildl pop loope xor or stos hlt lea rcr cmp jp jg in rex.RB sbb sub rex.RB movabs fisttpl adc je callq push in fstenv cmp lahf jp cs fstpt xlat rex.WB fildl (bad) push (bad) movslq and sub push rex.WR push es mov jns out xor xchg mov and je out mov cs popfq test popfq adc rol jl rex.RX rex.X mov (bad) mov xchg test (bad) xor cmp lret shrb push add cli cmpsb (bad) repz and fwait (bad) out shufps mov mov pushfq mov (bad) icebp pop mov mov jl std clc nop lock rcl sbb jns (bad) cmp std clc sbb sub rex.WR lods pop vhaddpd pushq lret and notb push andb and lahf (bad) add popfq adc cmpsl and imul test pop jrcxz sub stos mov cld push xor in push and adcb vpmulhw pop cmc xchg cld in add jg vminss (bad) mov jle rex.WXB stos adc (bad) pop cmp (bad) (bad) cltd and xor (bad) (bad) fld mov (bad) cmpl adc cmc (bad) jrcxz sbb (bad) (bad) es cmp mov pop js loop pop (bad) stos js mov fwait push bnd sti lret mov fwait push out rex.RXB callq jns addr32 adc mov fs fcoml int3 jo mov mov fist rex.W xchg lahf (bad) (bad) (bad) (bad) or fcmovb and sti mov pop cld jns jge cmp cmp fidiv imul mov mov pop mov rex.W (bad) sub test mov sbb rcrl add xor or mov adc mov icebp and ja scas fnsetpm(287 mov or rex.W pop sbb cmp icebp sbb int3 (bad) retq rex.WB neg mov (bad) sbb movabs pushq callq retq pushq out jo bnd fbld fisubrl sar xchg pop ss sti (bad) cmpsl stc add movsb jle cld (bad) int3 shll rex.WRXB in cmp add lock mov rex.WR adc rex.WRX leaveq push jl adc and xchg (bad) es jrcxz push sub (bad) lahf in lret sti scas or and fistl and (bad) fstpt imul adc jns out sbb rorl (bad) xlat cmpsb (bad) ja pushfq xor imul (bad) mov rex.WRXB out jne pop rex.RB rcrl xchg (bad) and int3 xchg (bad) jp lahf out fisubrl rex.W xor (bad) pop je (bad) pop ficom ss mov cmp fsts (bad) nop and jl lret ja movslq or fdivrs (bad) jns (bad) push rex.RXB cmp or sub adc push out cmp in stos incb xlat fcmove movabs sub push xchg push repnz loop rex.XB rex.XB xor (bad) jmp pop (bad) je mov (bad) cmp mov push fdivrs xor jg fnstenv push mov (bad) enterq xchg enterq loopne and adc xlat rex pop adc add (bad) mov (bad) (bad) rex.RB stc jne repz push lahf stos xchg xchg xchg (bad) popfq xor sub imul stos or test sub mov (bad) cli sbb mov adc scas in (bad) mov adc push (bad) retq iret cmp movabs testl rolb leaveq cmp scas (bad) popfq outsl je test outsb fstpt xchg jmpq (bad) add and xor movabs jnp jg out (bad) stos (bad) ja sub insl sub (bad) (bad) or sbb rex.B rex.WXB xchg jmpq js retq push or sbb sub push cmpb (bad) pop (bad) repnz imul (bad) movslq xor je mov xor test cmp rclb (bad) outsb sub out sub iret sub lahf (bad) pushq sbb roll xor int3 pop test stos mov cltd jae ss rex.B popfq jo lock cmp add (bad) fwait push sahf test loop scas (bad) movsl sbb sub and cwtl rex.WRX lods fcomps sub xchg xlat add scas fdiv fwait gs mulb push add sbb (bad) (bad) sub rex.R callq (bad) (bad) je fwait retq push xchg xchg add fstpt jnp pop sbb in mov repz cmpl fcmovne pop xor clc (bad) mul (bad) movabs (bad) rex.WRXB and (bad) (bad) (bad) mov sbb fucomp stos rol and sub test xor fwait cmp mov (bad) xor cmpsl pushq (bad) stos outsl fucom cli es rex.WB cmp xchg (bad) pop and fisubl pop sub pop jo outsl (bad) (bad) mov leaveq repnz decl loope orl lahf rorb cmpsl fstpt fsubr mov outsb (bad) cli push sbb cmp cmpsb repnz test jmp movabs outsb test bnd stos jne jns movabs xor (bad) fimull cltd (bad) notl mov rex.WRB rex.WRX stos pushfq (bad) pop fstpt adc fistl (bad) xor xchg nop sti (bad) stos loope sub fmuls rorb mov lret xor (bad) push or leaveq rclb sub jae push callq jrcxz enterq (bad) xchg pop adc and (bad) (bad) add xlat pop or cmp outsl out mov ja mov pushq pop je jrcxz fsts retq test and cmpsl mull fistl (bad) (bad) (bad) (bad) hlt outsl pop jns sbb movslq jnp rex jmpq fistpl sub xor fstpt test (bad) adc in xchg cmpsl xchg sbb lret (bad) rex.R fmuls (bad) lods stos (bad) rex.XB and mov rex.WR mov fwait and adc (bad) (bad) rcrb add mov cmc fstpt push imul rex.WR pop (bad) mov lahf pop and rex.XB mov repnz xchg cltd sbb rex.X rex.WX fwait stos xor in jnp out rex.WRB movsl mov fcmovnbe mov mov (bad) sbb fidivrl icebp add out cmpb (bad) mov (bad) adcl sbb cmp (bad) rcll cmpsb addr32 jle fneni(8087 (bad) xchg mov lods push mov rex.R fwait pop icebp adc jge pop retq xor xchg (bad) stos movsb jl fistpl pop jns mov (bad) fisttpl rex.WX fcmovnu (bad) add (bad) test movabs std (bad) jnp rol fnstsw cmp jo rex.W sbb pop sbb push cmc scas fimull mov sbb loop fistpl rex.W out mov rex.RB push mov or jae cmp scas pop lahf pop mov movslq push movabs leaveq (bad) rex.R (bad) fldt push cltd add pop (bad) cmp or mov out jns pushfq in rex.WRB xchg std cmp and mov rex.X fcmovnu or jnp pop add fcmovne add psraw movsb xlat (bad) and outsb xchg (bad) pop lret pop (bad) rex.WB push xor pop addr32 add mov (bad) imul and scas sbb mov int (bad) cmpsl fwait sahf rex.RX jae jnp add sub and sarb sarl (bad) (bad) int (bad) add (bad) gs cmp callq insb incl cmp mov add mov rex.R rex.WR out fwait adc or pop lahf jl rex.B (bad) sbb jbe (bad) imul xchg adc xlat imul jb rex.WR hlt mov fstpt movsl sarb sbb (bad) fimull test imul mov je int sbb cmp lock pop mov cmp xchg mov ss mov mov and rex.W loope pop out rex data16 sub or pop fwait retq stc adc movslq sbb or iret mull push add pop (bad) mov mov mov xchg (bad) or pop adcw shlb xlat (bad) js pop mov pop (bad) cwtl sti (bad) jrcxz push pop cs (bad) rep cwtl and push rex.R rex.R xchg sbbb adc pop (bad) cs (bad) fcoms (bad) rex xchg or (bad) insb pop mov fnstenv pushq push sub sbb xor or (bad) rex.WXB adc pop movslq mov int3 retq (bad) mov pushfq js mov and xchg retq sub push or repnz popfq cmp incb sub lods loopne je lods mov xchg mov mov pminub sahf callq sbb repnz test pop addr32 loope sbb add pushfq shrl lea sub (bad) sub lret jmp fildl lea sbb loope pop test rex.WB (bad) movabs (bad) fwait jbe test adc mov mov mov pushfq retq (bad) sbb lods sbb test retq fcoms mov (bad) rex.WB ficoml ficomp (bad) rcl mov fnsave loop (bad) test and fist xor (bad) mov loope and push and hlt sti mov sbb (bad) lea fldt (bad) xchg (bad) xor (bad) movabs and jl xchg fstpt sub sub scas rex.RB stos sbb insl xchg test (bad) pushq loope (bad) int fisttpl rex.R (bad) jp lods fcmovnbe in stc or (bad) data16 rex.WXB and cmc ffree outsl outsb (bad) mov imul vpor fildl push movabs movabs jmp fwait rex.RB sbb (bad) mov sarb and addr32 (bad) or push push mov test jb mov insb lahf packssdw testb push fcmovnbe (bad) cltd rex.XB (bad) sbb fisubr sub xchg xchg or in and fistpl jg fistl vpunpckhbw adc xchg xchg sahf ror rorb xchg or mov in xlat rclb cmc fcmovb cli and cmp fcomps sbb sbb div (bad) and rex.XB xchg (bad) rcl lahf cmp xor rex.WRB rex.X or sub test gs in (bad) pushq (bad) sub xlat (bad) fidiv (bad) mov fwait mov pushfq subb fistpl rex.RB ss jnp mov cwtl (bad) pop callq cmp movabs push (bad) or fcoms out cmp ss lock fiaddl jmpq out fwait pop rex.WB stos push pop jl (bad) (bad) icebp jmpq fistl (bad) (bad) fistl (bad) mov push std xchg pop cmc and orl rex.RB fistpl test mov (bad) jle fstpt jo movabs cmpsl and ficompl out icebp test fndisi(8087 (bad) imul jg rcl mov (bad) rex.XB rex.WXB stos rex.WRXB fcmovnbe mov add adc (bad) retq pop jo cmp rex.WX push movabs push jle jnp std xlat xor out xchg fwait rex.B sbb mov imul sahf jmpq push fstps fisttpl cmpl xchg mov es add push std pushq (bad) movabs movabs int3 xchg mov sbb pop and hlt insl movslq (bad) sub add fistpl jne (bad) ficoml mov lock add or callq sub rex.RB cmp jbe adc and (bad) jg xchg jle xor jns subl adc push fstp xchg movabs int loop lret mov loopne movabs mov stc cmp int3 rex.B mov fistl mov test xchg callq cmc pushq pop add js rex.WXB pushfq fildl and adc enterw in nop xor lock push add int3 retq cmpsl and (bad) enterq fiadd rex.WRXB sub mov rol gs int stos outsb ja mov cld fistl cmp in mov sbb or fildl mov shl scas imul push data16 fdivrl cmpsb push (bad) mov (bad) jp out mov imul (bad) movabs or imul out lock rex.WB sub (bad) rex.RB and sti xor imul sub int sarb jne shrl adc (bad) ss jnp push sbb (bad) adc fldenv insb pop jmpq fcmovnb loopne js mov add push fcmovnu loopne out (bad) fidivrl (bad) push xor sub pop addr32 and cwtl (bad) fucomi and pushfq jae mov fcmovnu notb add std int mov fwait mov js sbb fistpl rex.R fwait rex.X loopne xchg (bad) add pop fidiv xor mov (bad) jl mov (bad) jle jno jge rex loop xchg mov or adc pop pop cs mov fstpt and fstp push cmp or fisttpl pushq sub xchg mov rcr and (bad) sbb cld (bad) insb rolb pop out imulq rex.WB or jle push fwait pop lret (bad) fidivl (bad) fistpl ds jmpq cmp mov outsb xchg jne pop sub stos push adc mov movslq mov pop xor sub stc adc scas mov (bad) push pop rex.WR fwait icebp outsb shr push or rex.WR pushq stos mov mov (bad) mov jb je cld fildl add and rex.XB scas xchg and cmp (bad) (bad) cmpsl rex.X rex.WR mov fnstsw jg and ss insl sahf fistl add fbld sti movsb in lret (bad) and (bad) cmp and insb shr and xchg cld mov (bad) sar rol xchg (bad) adc mov cmp adc gs imul (bad) cmp roll (bad) mov and jmp in out nop push stos (bad) jl push fstpt test jp sub (bad) push xor jbe and xor clc mov or jl test and (bad) pushq add lods mov and (bad) (bad) andl fcmovnbe rex.X rex.RB (bad) repnz ud2 sub rolb test mov movabs ror push outsl loope lret movabs subl cmp shlb notb sbb rex.B lock (bad) ds pop push insb cmp imul push push rex.W stos dec jbe jp (bad) fldt push pop gs test mov sub in rolb pop push cmpsl (bad) (bad) jnp mov pop lea in cwtl movabs setle ds push cltd cmc (bad) (bad) std stos clc loope fildl sbb mov (bad) and (bad) ficom jle enterq jrcxz pop mov or pop jp rex (bad) movslq jle movabs imul mov pop (bad) fcmovne adc pop rex (bad) xchg ja callq test stos mov leaveq jl mov push clc movsl sbb cld fs in in mov jle test movsb cli fisttpl (bad) mov clc shr (bad) jnp scas imul (bad) (bad) lea add mov adc xchg nop adc scas lods fldt notl hlt (bad) (bad) sub jmp in pushq stos fldt mov fistl lgdt outsb push xor fldt rolb pop xchg sbb push rex.X adc push (bad) callq mov clc mov movabs mov lea jb movsb sbb push sti mov ja sub (bad) cltd (bad) movabs lods pop pop pop xor imul sub jo mov (bad) xor cmpsl (bad) (bad) jnp mov xchg lahf popfq fisttpll lret rex.XB outsl jo movslq adc sub fstl rex.RB rex.WB (bad) sbb fldt loope and cwtl out rex.WRXB scas rex.RX xor fildl sub test es or pop cmpsb xchg mov or stos clc insb fcmovnb andl cmp mov (bad) rclb add (bad) rex.RX rex.B or imul rex.WX fcmovne and popfq xor je (bad) or rex.R in int sub (bad) or mov jnp cld xchg scas in mov adc cmp (bad) jle xlat cmp in mov (bad) fistpl rex.B push fucompp rex.XB fcomp jrcxz retq loopne and fwait loope jmp lods int and jns cltd fisttpl in jmp loope sbb shll cs stos rex.RXB (bad) or scas fstpt imul lcall (bad) fdivrs pushfq test cltd (bad) mov pop out int3 jge test lock fcomi jae (bad) rex.WXB out (bad) or sbb mov mov fwait scas je lahf test mov sbb cmp pop xor (bad) fistl fistp cwtl pop or fildl (bad) movabs sbb (bad) pop nop jg rex.B rex.RB xchg cmp and (bad) leaveq (bad) cmpsb out pop hlt fisttpl pushq cmpsl add rex.RB pop lock jno xchg ss push mov xor movabs (bad) cmp rex.WRB jmp jns divb xchg rex.RB (bad) sahf fstpt rex.WRB iret (bad) cli mov push jne add mov sbb int3 and ds sbb (bad) fildl push adc shrb (bad) fisttpll cltd mov fucomi hlt pop repnz rex.WX (bad) mov (bad) data16 rcrl xchg movsb mov mov rex.RXB xchg fildl (bad) repz (bad) xchg mov add movabs fldt mov fisubl rex.B xchg outsb (bad) cld nop adc or push imul mov sbb movabs xchg jg fstpt (bad) out fistpl movslq movabs fwait sbb pop sbb mov rex.WR (bad) and fsubl mov retq add data16 and iret fisttpl mov adc cld jo jb add data16 jmp gs je rex.XB (bad) cmp (bad) fistpl (bad) lahf clc out push scas pop retq sti cli movabs rex.W lods (bad) (bad) jrcxz fwait loop ficoml lahf jg leaveq insl sti cs jae fldt sub (bad) in imul (bad) stc xor fcomi (bad) mov sbb rex.WB mov pushfq push retq mov xchg lret pushq add rex.RXB (bad) xor fs fcomip (bad) add outsl out (bad) insb and (bad) stc rex.X push push fisttpl int add pop lret es fisttpl hlt fnstcw push (bad) stos mov sbb es jbe add jne pushfq lret cli and loopne sahf in xor (bad) cmp out (bad) mov sub push (bad) es xor (bad) fucomi cmp data16 sub sub cmovs sub in push or leaveq fninit or rex.RXB cmp jno loop (bad) pop mov lods (bad) loopne sub rex.RXB data16 movabs fildl js (bad) jmp movsb test (bad) or fsubs fsubrl test pop lret imul jns insl (bad) imul jl (bad) jbe cmpsb xchg mov cmpsl cmp xor sbb (bad) movsl xchg mov mov (bad) and pop fistpl (bad) xchg (bad) in (bad) (bad) stos retq pop shlb and push mov fucomi (bad) lea fildl sahf push rex.WRX enterq adc pop mov addr32 jg (bad) (bad) sub rex.WRX lock fcoms cmp adc ficompl xlat clc (bad) lret cltd imul test (bad) repnz fldt mov movabs (bad) mov in es imul andb callq fucom (bad) insl and (bad) xor mov imul mov fisttpl or rcl loop,pn mov jle mov mov hlt push ds xchg push stos or sub fisttpl iret outsl in (bad) (bad) sub adc cmp js rex.XB (bad) callq in sahf shll pop hlt rex cmc cld stos sbb xchg lret fs cmpsl gs (bad) data16 jnp cs and rex pop fstpt (bad) sbb ds cmp (bad) (bad) fwait jge pop or add add cmp rex.WRX int rex.RB pop movsb fwait lods or mov in imul push jle rorb pop jnp jmpq pop push sub ja nop fistpl jnp ror fistp cmp pushq sar (bad) data16 mov movabs pop imul pop xlat mov gs mov stos (bad) flds in (bad) cmp movabs rex.WRB movabs cmp push std sti pop xor int movslq and pop fwait icebp rex.RB mov addr32 (bad) jnp xchg loopne pop add shrb (bad) pop sahf or fwait out cmp rex.WRXB ja fcmovnb push and or mov mov imul push sbb fsubrs push scas iret movabs rex.RX int xchg (bad) xchg xchg sbb jrcxz ds js rorb movabs lods fisttpl jae adc (bad) cltd rex.WR rex.WB or (bad) test mov in sub in pop rex.X jbe sbb xchg xor xchg (bad) (bad) rex.WR xor iret int3 sbb rex.R sahf and test sub out pop cli xor fimul fildl (bad) cmpl pushq adc sbbb or push iret movabs sub fs cmpsb jnp cmp sub cli pop in mov push incl xchg add push jno (bad) pop mov jge rex or push rex.WRB stos lods fisub and and movabs fcmovnbe lea pushfq sbb fucomi ljmp leaveq callq xchg add jnp jb stos out add jl (bad) movsb adc jp jnp (bad) shrl jl (bad) in test jne rex.RB or adc sti movsl push sbb test test clc loopne std rorb movabs in mov xlat iret scas (bad) cmp pop pop (bad) cld (bad) or rex.WRX rex.WB scas xchg push xchg fdivl jmp pushq xchg out sub (bad) (bad) rex.WRXB ficoml rorb rex.W fmull mull xor addl in popfq (bad) rex.WX es mov pop (bad) repnz sbb rex.WB add xchg stc rex.WX xchg rorl or rex.WB fistpll mov adc iret in jae adc (bad) mov loop out xchg lret (bad) fcoms cli (bad) sub (bad) adc push push retq push adc pop (bad) adc sbb cs (bad) adc cli sbb jg sti sbb mov or insb repz xchg sahf sbb xor pop in stc pushq ds fnstenv jmpq xchg fisubl pop pop xchg adc xor sbb movabs (bad) fwait push adc rex.WRX rex.X push (bad) xor mov xchg lcall mov and (bad) retq pushfq iret push xchg xchg cwtl outsl imul fdivl rcll cmpsl adc sarl or js sub test push cli or cmp mov js add mov ja outsl rex.WB int cld add neg in (bad) mov jb loope test or out stc loope (bad) cwtl sbb sbb psrlq (bad) jne fsubrs cltd (bad) sbb sbb cmp rclb cld divl or sbb xor movabs rorq adc shrb sub jae xor insl ss retq (bad) fwait sbb mov xor and std (bad) (bad) (bad) fdivl xchg adc fsts (bad) pop (bad) xor retq out movabs fcoms xor cmp mov xchg or outsl in hlt add rex.RXB jmpq cltd (bad) negb (bad) jae push push xchg mov push xor es xchg (bad) and sarb int pop xchg rcl pop (bad) (bad) mov mov (bad) movsb fsubs mov adc stc (bad) mov or setb test roll mov xchg xchg bnd fucomi push (bad) jae cld fldt push pushq cmc fildl hlt outsl pop mov xchg add and sub mov fisttpl adc sbb scas rex.RX (bad) jae mov (bad) (bad) cmp or cmp fsubs sbb pop in sbb jns adc in jl (bad) xor push sub mov iret (bad) (bad) cmc or addr32 adc lret test rex.WR enterq fisubl and outsl mov add sub jns sarl repz xchg (bad) rex.WXB in js fneni(8087 shl rorb cmp jge sbb mov loop rex.WRXB rex.RXB mov or (bad) sarb (bad) (bad) (bad) cmpsb (bad) movabs (bad) fwait std xor sar fldt repz clc push sbb ds xchg xor (bad) adc mov scas rex.B fisttpl xchg out rex.RB or xor sub (bad) pop lock nop repnz (bad) xchg rex.WXB mov sbb (bad) sub pop fucomi cli adc ja sub scas xchg out retq (bad) pushq in or rex.WB xor fsts mov fldt in outsl and mov pop pop adc sbb fistpl rex.RB retq jne ds test shlb imul sub mov jp add std rex push (bad) fwait or mov sub (bad) (bad) (bad) rex.WB (bad) rex.W rex.WR cmp mov lret xchg (bad) add out push mov cmp or lret iret fsubrl xchg rex.RX rolb mov push and add rex.W loop rex.WRX ss std push mov and cmp cs nop rex.WB add add fstpt cmpl and ror cmc and retq stos addr32 pushq push gs rex.RX (bad) fistl rex push fcoms rex.RB sub enterq movsb test xor fndisi(8087 mov movsb retq stc (bad) cmp in pop jg fistl mov rex.WR retq bnd loop (bad) lods lods pop jmp cmp (bad) fstpt movabs mov rex.RX icebp or leaveq xlat fildll xchg and imul or movsb jnp (bad) js pop jnp (bad) cmp rex.WRB (bad) fistl lret pop subb cmc or outsl push xor fcmovne rex.WRXB stos rex.XB adc sbb rex.WR fs fcompl insl rex.W scas sub fwait cmp fs in fsubs cmc rex.WRB pushfq (bad) ja mov adc fcmovnbe xchg rex.X fadd (bad) mov (bad) (bad) (bad) lea js jrcxz jae cmp (bad) ja mov fistpl mov sbb (bad) cmpsb (bad) or push (bad) (bad) lret (bad) pushq fistl (bad) insl cld (bad) icebp add js,pt fcoml (bad) xor out and test in ja (bad) insb fistl (bad) (bad) enterq mov add (bad) mov lahf rex.R xor jbe mov rex.RB adc add fistp nop (bad) push xor (bad) rex.R rex mov rex.WX mov shll lret mov rolb jmpq adc imul rex.XB add rex.RB movabs jno (bad) stc iret pop out and (bad) adc (bad) add xchg notl stos (bad) pushq js and (bad) mov lods pop cmpl push (bad) ss es cltd xchg popq add jmp sbb (bad) mov (bad) addr32 push (bad) lret loopne cmp xchg jge hlt in or (bad) pushq imul rex.RX jo sbb gs jo mov adc outsb or jrcxz stos cmpl xlat cmp jnp xor cmpsl rex.R rex.WX neg loopne mov subb lock push nop xlat and add iret add fisubrl stos and insl push (bad) fwait pop insb add rex.R repz rcrl je xchg test xchg mov mov (bad) stos sub xchg andl in test (bad) jle sahf (bad) (bad) mov pop js mov lock (bad) mov sbb jle mov cwtl callq mov pop (bad) jo adc add jle (bad) mov and movabs sbb xor pop xchg xchg cmc retq leaveq in add sbb or scas movabs lret in (bad) mov rex.XB adc pushq mov xchg xor int3 fbld pop xchg (bad) push or jnp out and adc ss not or xchg iret addr32 jg mov jmpq out test (bad) not (bad) repnz rex.WRB jp mov rclb rex.WRX mov cmp in mov loopne callq scas add in movabs cmpsb cmp cmc popfq jp,pn mov pop pop jno sbb lods cmp ds fsubrp stc rex.WXB (bad) lret mov push fdivrl pop adc xor add adc add sbb (bad) int mov push pop push sbb mov clc and xchg rex.WB stc mov stc push movsb leaveq push rex.XB lods mov xor int fidivrl fwait rex.WXB lret rex.WX (bad) (bad) (bad) sbb jge jne (bad) (bad) repnz pop fldt pop fwait movabs or cwtl and jb push xchg push (bad) xor xchg pop sbb shll hlt rex.RXB roll lock sti decl mov imul mov jns orl add fcoms mov sbb mov (bad) push insb setbe js xchg (bad) rex.X jae mov fnsave std mov fcoms (bad) or mov popfq mov rex.XB pushfq int3 mov rex.WXB in (bad) sbb jrcxz mov mov (bad) mov mov es sbb (bad) cli mov retq jle jo insl jmp fs pushfq xor mov jae pop pop fwait popq fs and pushq mov fistl sarl js xchg pop push sub fimull cltd xchg movabs rcrb clc rex.X rex.R ja and int rex.WB rex.RXB sti fcmovu cltd cmpsl in (bad) adc fistl mov ss fldt (bad) fisubr pop fistpl sub push rex.WRB (bad) mov adc adc sub sar mov cwtl popfq fistpl push rex.XB add push rex.WXB (bad) rcr (bad) pushfq es in (bad) fistpl (bad) in cmpsl mov xor popfq adc idiv fistl mov jl mov cld mov lea cmc fisttpl push rex.R loopne jge mov mov out (bad) mov (bad) fcmovnb sub lret fcomps jnp jne fdivrl xchg (bad) imul (bad) fwait out and hlt (bad) nop pop add cwtl (bad) mov stos xor (bad) push xor sub (bad) jo ficoml sbb js repz (bad) loope or pop es cmp leaveq fistl and (bad) xchg (bad) mov mov test cmpsl movabs jbe adcb (bad) std xchg add mov fistpl es pop retq fwait gs test movabs cld stos (bad) rex.WR movabs jrcxz cmp out test xchg pop rex.X sahf rex.WRXB rex loop scas callq repnz (bad) iret pop xlat push xchg retq movslq fildl addr32 stos fldcw rex.B rex.WB jnp rex.RXB cmp push (bad) (bad) adc sub movslq jmp insl and rex.WB mov pop fcmove es fcomi movabs xchg jae fdivrs add mov sahf ja xor cmp (bad) mov sbb (bad) pushq or fldt push (bad) movsl fisubr (bad) sbb movabs lea pushq mov adc cmpsb (bad) sub clc mov flds xorl or fistl mov pop rex.W lahf adc mov cmp out leaveq adc sbb sbb scas sbb fs in (bad) loope push fistpl cmp rex.XB mov jno mov pop std mov je pushq xchg pop add int rex.WXB rex.R jnp out fstpt movabs rex.WX out and (bad) rex.WRB rex.R fwait addr32 ror mov and imul (bad) retq push stos add (bad) sbb lock cmp stc imul ds iret mov (bad) add imul push mov cld (bad) mulps (bad) mov sti in cmp (bad) rex.XB (bad) loope fstps in mov data16 cli fucomi jge es fwait hlt fcmovne adc and int3 (bad) xor (bad) push (bad) add rex.WRXB rex.WR in (bad) (bad) and xchg fwait rex.X lret int3 and loop fwait rex.WX add (bad) mov (bad) sbb xchg sahf xor add int fstpt rex.RX mov jg and popq fildl popfq adc or sub repz push jns jp mov fwait (bad) and out rex.R or fistpl mov orb mov movabs (bad) or imul in shrl fldt (bad) add movsb xor loope mov hlt cli fldl sub rex.WRXB adc add adc push sub in in stos jmp rcr fwait xlat movabs jne fnstcw in sub pop mov jns pushq movabs fisttpl (bad) xchg int3 cltd mov (bad) xchg (bad) rolb pop sbb sbb pop adc xchg (bad) or fcmovne pushq or mov xchg movsb lret jnp cmp sub ja cmp fcmovne jb rcrl cmp sbb rex.W roll orl mov lods mov (bad) fisttpl cmpl movabs (bad) int3 lret (bad) mov cmp sub (bad) xchg mov cmp (bad) mov callq add xchg push pushq mov pop out pop in jle jno jb rex.X data16 (bad) adc rex.WR adc (bad) clc jge jo (bad) divb out popfq push int3 cmp sbb pop ds (bad) scas clc jrcxz (bad) adc (bad) fistl mov pop rex.X or fistp pop (bad) pushq pop (bad) in rex.WRXB (bad) mov jl fistpl push (bad) rex.WRB and enterq fcmovnbe mov adc fs add mov mulb pop xor mov stos fisttpl add js pop jne or in jg fisttpl xchg xchg sub jrcxz stos jbe mov cld out push add rex.WRXB and rex.RX fisttpll (bad) push imul jmp (bad) movabs outsl jg imul jb out jnp cmp pop mov and pop andps (bad) negb rex.RX outsb js adc fcmovu cmp sub rex.B lods lods (bad) (bad) fcmovbe push nop xor pmullw leaveq mov push xor imulb pop insl std push stos stc rex.WB fistl in mov icebp pop mov xchg jne sti lock (bad) test lods loop in rex.R and add jae (bad) pop hlt popfq ss lock popfq fwait rex.R loopne sbb sarb movabs loopne fildl rex.WRX mov (bad) jb pop out (bad) xchg (bad) mov (bad) and xchg movslq adc (bad) (bad) in (bad) xor (bad) ss std cmpsw hlt rex.WRXB jmpq mov outsb fisttpl adc pushq fwait enterq popfq jb pop or jrcxz (bad) sbb mov sub mov push (bad) nop add jae fistl (bad) flds pop xor mov pop or pop popfq lret add rex.WRB jp mov cmpsl mov out nop fsubrp es xor fucom mov lret fstps mov xor add add push cli std pop xor fidivrl xor sbb loopne cli mov xchg outsl (bad) jns pop in negl andl (bad) pop retq leaveq cwtl subps icebp add sub vcvtudq2ps sbbl (bad) sub movabs mov (bad) fisubr (bad) repz movsb mov xchg data16 out movsb (bad) cltd in jp adc fiaddl jno and fcoml (bad) cwtl pop (bad) add and ficompl popfq (bad) faddl rex.RXB rex.X mov or (bad) cs std rcrb xor out repz out cmp in adc rex.WX movl sub pushq fwait cmpsb (bad) mov (bad) movabs push push sbb movsb rex.WRXB mov fwait outsb (bad) or xor xchg movabs cmp pop (bad) add mov (bad) mov loopne outsl fsts test lea in lods pop xchg push nop (bad) frstor xor or rex.RB (bad) lods (bad) cmp pop (bad) pop jmpq sbb data16 mov xchg andb push outsb (bad) (bad) hlt rex.RB mov jo rcr pop and mov (bad) jle clc push test cmp fdivrs sub fbld sub mov movabs in outsl rex.WXB stos sub xor movabs ror rcr add mov ja addb negl adc xchg sti mov mov (bad) fwait int mov (bad) (bad) mov jl js insl rclb mov pop push push loop pop test mov movabs pop cmp sub loopne sbb mov add iret sahf (bad) xchg test fcmovu jne push (bad) addr32 lret fistpl adc and cmp test pop ficoml fcompl sbb adc (bad) callq jnp xor loopne (bad) rex.WRX int3 mov cmp push jbe mov hlt popfq push rex.B cmp out pushq lret cld sub repz mov rcrl icebp imul pop add (bad) imul mov shrl sbb add mov add scas pop pushq nop ja mov (bad) (bad) shll mov adc mov fucom (bad) movslq push sti in adc or iret enterq xchg rcrl push notb in mov loopne test or mov stc repnz xchg add pop jge or adc add add jge in or (bad) (bad) rex.XB loope pop (bad) cwtl xchg rcll lret mov insb iret rex.RXB orb ffreep (bad) pop lahf mov jmpq jo mov (bad) cmpsl pop nop (bad) rex.RB callq fs sbb xchg and sti cmp in rex.WB test cmp fisub and jrcxz fldenv (bad) sar ficomp mov movabs out in push ja add rex.WX or sub outsb xchg insl mov add xor cli xor sub in jbe adc or mov out mov nop cltd movabs push (bad) pop lret push mov jne xlat mov test xor (bad) adc lahf cwtl pop adc rorb (bad) rolb sub andl adc sbb xchg shll rex.WR pop test adc pop (bad) push adc (bad) rex.RXB jne pop fistp idivl fwait out outsl jb (bad) jno rex.RX rex.R pop orb xor push add pop out sbb jrcxz ja cmp repnz imul cs mov or out jns pop xchg xlat pushq cmpsb (bad) (bad) pop mov xor pushq cmp lret adc (bad) ds rex.X mov cmp mov (bad) retq (bad) (bad) xchg cltd stc pop fldenv adc push adc movabs mov jnp pop and adc cld test rex.XB rex.XB jp (bad) (bad) rex.WRXB cli shrl leaveq xor push fmuls leaveq fildll movsl int jno callq cld mov int rex.WB and xchg sti sarl pop push (bad) jbe rex.WRXB lret (bad) roll (bad) (bad) outsb jnp stc jns mov (bad) jno pop xchg (bad) rcrb mov pushq pop rex.X rex.XB popfq push in mov jb sbb sub pop xchg retq in (bad) callq adc push adcb jrcxz cmpsb xchg jns movsb cmp mov add negl cmp mov mov pop fwait sub push sbbb cmp sbb shlb sbb movslq hlt cli jno movsb callq pushq lret cmpsl sti jl xchg cltd mov rcrw cltd in adc fdivrs ss push mov (bad) cltd sti and (bad) movslq jle leaveq rcrb fisttpll jb and sti jb (bad) add iret adcl xor repz cmc xchg int3 shl icebp fnstenv outsl fisubr lret scas (bad) retq sub rex.WXB rex.XB and out clc test xor pushq xor or retq jne rex.XB rex.WR add xor (bad) ss pop (bad) idivb scas fwait push decb insb xchg loope rex.WRXB cmp sti scas adc hlt (bad) rex.RB jnp xor (bad) rex.WX sub pop (bad) or rex.RX fsubrp es imul cltd repnz insl (bad) mov cmpb xlat and push adc jnp cld (bad) pop and sbb pop (bad) (bad) jbe jmpq pop ja jne (bad) callq add gs fwait cmp jmp jne incb xchg clc test addr32 (bad) cmpsl or (bad) sub pop lret (bad) movabs loopne decb (bad) add mov mov (bad) mov (bad) movl insb adc data16 mov pop (bad) out out outsb fadd adc std pop ja xchg rcll sbb sub (bad) fs push lods scas mov push lods (bad) add (bad) (bad) xchg mov in xchg push add (bad) and push out or shr scas rex.B mov scas rex.WXB sub in (bad) xor mov in and sahf sbb mov cmp push insl pop rcrb out insb pop je (bad) mov cmp in push fwait or (bad) data16 mov fsubrl fsts lock cmp or fnop (bad) (bad) nop pop fstpl push rex.B (bad) mov outsl std lahf jp sub repnz div and xor rcrb cltd int3 pop insb or add movabs (bad) mov mov mov pop mov mov (bad) mov (bad) (bad) in out pop loope xor (bad) (bad) pop and rex.B lods rex.WRB or sarb fnstcw outsl push push push stos pop (bad) imul (bad) (bad) (bad) fldcw (bad) ss mov fistp rex.XB (bad) (bad) mov adc decl jle xor cmp (bad) retq (bad) mull fistp sbb repnz jb xchg pop nop push push push scas out jo test mov (bad) cmp rex.RB mov rex.XB rex.R (bad) nop cmp jmp add test (bad) xor xor or cmp rex.WXB decb pop jmp jb (bad) xchg adc jo lea mov push jrcxz pop nop clc int mov (bad) test pop fcmovu xchg (bad) pushq (bad) sahf cmp out cmp (bad) lret (bad) jge pop pop rex.WX mov jmp (bad) mull pop mov pushq faddl mov (bad) (bad) jl mov xchg sahf rex.W fcoml and repz retq pop repz (bad) mov shrl cmp xchg pushq rex.WR rex rex.WX push cwtl movabs test jae in out pushfq movabs cmpsb fistl and fistpl cmp (bad) jrcxz loope jnp (bad) rep pop fistl (bad) (bad) insb mov pop (bad) adc fs (bad) movslq push sbb (bad) (bad) test repz mov cmp (bad) (bad) pop or pushq (bad) (bad) subl loope rex.WXB rex.X test xchg (bad) pop jb sbb pushq ss out (bad) xor and fcmovnb xlat sahf insl xchg fstpl lock fistpl mov and rex.XB stos (bad) cmp (bad) adc scas rex.R jg jb int3 and cmp test (bad) rex.WRX rex.WR subb (bad) jmp stos in rex.B or pop int3 adc add pop rorl xchg adc ds mov testb pushq sbb push sub adc jb stos imul pushfq or lahf test lret pushfq sbb pop movsl fsubrs fild jmp fstpt movabs add add (bad) sarb clc rex.X pop decb js (bad) cwtl mov fmuls and rex mov fucomip (bad) jno mov fistpl cs movsb fcomi pushfq lods xchg and cmp fnstenv or adc in out rex.RXB fadds add insb retq out (bad) push movsb mov rex.WRX sbb fstpt jrcxz fsubp cmp stos (bad) rclb lret leaveq data16 (bad) out push clc push rex.WX retq cmp fildl add rex.RX jae sti test rex xchg add movslq mov leaveq hlt addl out mov orl xlat je fucomi (bad) frstor movabs pop rex.RB xchg (bad) jo add xchg int fmull rcrb (bad) in jp (bad) pop mov cltd (bad) neg int insb xlat sbb sbb cmp (bad) fiaddl mov or or in pop xchg jmpq jnp or fucomi loopne rex.WB sti adc fcmovnbe movabs cmp xlat add xor fistl xchg js mov outsb ss or (bad) (bad) (bad) and data16 std jno cmp adc push mov fwait test fmul pand (bad) (bad) movsb pop cmc (bad) (bad) sbb pop int3 xor rex.WR rex.RB jne iret xlat sub (bad) fdiv movabs or pop fldt out rorb imul add (bad) push sbb outsb sarl in (bad) loop and in pushq test mov popfq add (bad) pushq (bad) sbb xor fildl jns jnp mov sub jp stos add movabs cltd (bad) movsb xor (bad) out mov fstpt mov rex.XB add sub pop leaveq (bad) xchg adc in mov fstpt rex.WX fs vpmaddwd cli es (bad) jnp jo sbb pop fistl sahf or cmp or addr32 mov movabs insb (bad) fisttpl in leaveq mov ds cli pop pop and and es push fstpt push in jns (bad) retq mov sub lods leaveq (bad) rex.WRX pushq jbe pushfq data16 movslq fstp cmp sbb lret (bad) xchg fcmovnbe lock pop or rex.W jo fucomi rex.R sahf cmpsl fildl lahf sub add sbb leaveq loop (bad) rex.WX xor rex.WRXB pop add fiadd int3 xor (bad) loopne (bad) lods sub jo shl fisttpl stc out jg mov leaveq and (bad) vpunpckhdq std pop sbb (bad) icebp xor add pop fs pushq imul jg fnstsw (bad) pop loop mov ds mov jno pop (bad) or and addl jg cld pop movl imul add cwtl stos (bad) lret cld gs lock mov sub or cwtl add out pop xor fs adc (bad) lret rex.WRX imul mov jns (bad) xor or jmp (bad) jle xchg imull jmpq (bad) rcll hlt in retq (bad) mov fidivrl xor (bad) jns sarl push (bad) (bad) enterq add andl rcr sub mov cli cltd cld jg add decb lea (bad) adc jp fcomps addr32 fsts fs or sub rex.W rex.XB lods pop xor loope pushfq pop in (bad) out pop cltd jp (bad) sub (bad) lods pop and cmp or cwtl leaveq (bad) pop loopne cmpsl mov lods movslq cmc adc jrcxz mov outsb xchg mov sbb jrcxz rex.WB mov fisttpll (bad) xchg test sub loop and rex.WX pop mov orl fsubl sub push (bad) sbb sbb push pop gs (bad) push jmpq sbb pop enterq or xchg clc cmp (bad) (bad) lea adc ja push loop rex.XB jae sbb jb (bad) pop sbb (bad) cmp fwait insb jrcxz rex.WRXB pop (bad) (bad) mov mov (bad) push rorb lods int3 cmp out fstps add (bad) in (bad) pop imul imul push mov and sbb nop pushfq lods sti jno rex.RB pop mov pushq mov mov lret (bad) and push xchg rex.R rex.WXB fadds fistp or mov loop rex.RX fidivl or fcoml sub jg enterq (bad) (bad) ficompl rex.RXB scas fidivrl jnp xchg cmpl (bad) sbb incb or int3 lret repz fwait rex.WX fstpt xlat out adc fimull push xor sbb pushfq xor jnp int3 clc (bad) (bad) and (bad) data16 pop movsb popfq (bad) scas (bad) lods sbb test nop rex.RX rex.WRXB fisttpl jg push hlt cs rol sti (bad) jnp fcmovne rex.B mov (bad) std adc callq rex.RX fisttpl add pushq or cmp retq movabs rex.R add mov jno pop iret lea fistpll cltd pop int3 test lret (bad) push xchg fwait mov (bad) xor lods lahf add out (bad) sbb iret in movabs rex.WX jns mov repz (bad) out adc stos out movsb cli movabs fisttpl pop rclb fwait out jg pushq je sbb fmul rex.R xchg mov (bad) out rex.WRX pop imulb pop push pop shrb (bad) jnp mov xor ss jns pushfq repz movsb pop sbb jrcxz jae xor adc xlat xchg in and movabs clc fcmovnbe ds iret mov (bad) fcmovne icebp rex.WRXB add in (bad) push (bad) and fnop cmp push xchg mov mov pop adc and cmp fmuls push fwait addl rex.WRX or jg lret rex.B mov xor imul pop xlat (bad) hlt loopne xchg icebp pushfq (bad) ss in rex.RXB rex.RXB lock adc sbb rex.WXB fstpt ja xlat sub fldt rex.W add iret fcomip cltd cmp fldt cmpsl subl (bad) fildl xchg xor ljmp jae iret (bad) stc fistpl fwait rex.W sahf int mov (bad) gs movsl jb fldt xchg rex.WX rex.WR (bad) (bad) rex.WXB retq fcmovne push (bad) xor jg rex.XB rex.WRB mov jrcxz push ficompl sbb mov sbb xor fs movabs (bad) (bad) (bad) jnp rcll xchg (bad) out xchg ror xchg pop fistl sbb jnp rcr mov add mull out (bad) (bad) rex.W imul xor shl cmp cmp mov adc lret out sti rcl rolb fidivl movabs pop mov fldt jno jns incl sbb (bad) je iret cmp mov shr jae fistl lret insl movslq loope jmp xor lods callq movabs seta retq mov fbld xchg fucomi and (bad) jo rex.WRB jnp or mov (bad) push xchg jo (bad) (bad) std in push pop mov movabs fwait (bad) mov pop push movsq adc mov (bad) pushq (bad) cltd or pushq (bad) neg (bad) push sub (bad) jo (bad) mov int (bad) in (bad) cld mov jle adc (bad) mov std add movabs out (bad) cs (bad) (bad) mov pop fbld mov outsl and sub pop (bad) mov adc int3 movabs rex.WRB imul movabs loopne lret (bad) insb pop xlat fdivl movabs pushq sbb pop adc adc loopne gs rex.RX lods out and xor cmp adc mov jno push (bad) cmp (bad) in xor sbb (bad) in jle or xor movabs subl insl (bad) data16 (bad) lods cli adc mov mov movabs scas int pushq fwait iret (bad) stc lahf mov (bad) cmp fistpl adc cmp (bad) insb retq jae lahf mov movabs (bad) (bad) (bad) in and sub fistl fstl mov cmpsb and pop mov bt nop rcr add retq cli lods (bad) rex.W mov lock jl jns sub jle (bad) (bad) (bad) (bad) rex.WR (bad) lahf orb cmp push xchg adc mov mov pop push cmpsb pushq (bad) rex.RXB test mov lret cmpsl popfq jae xchg (bad) lahf iret scas xchg add cmp and (bad) lret or (bad) (bad) (bad) movabs (bad) rex.RXB push jg hlt pop (bad) out mov or fistpl gs add repz push gs (bad) mov jl fldt in xor pop mov sti fs xor add test add leaveq push lock (bad) (bad) mov xor (bad) sub (bad) (bad) or xor xor jb stc movslq (bad) scas (bad) outsl pushfq fildl mov callq pop outsl adc rex ss mov cli (bad) rex.R xchg jnp cmpsl mov (bad) stc and pop (bad) jl je rex.WXB jno push sub test pop test imull jge jrcxz rcll push mov or movslq xor scas pushq loopne cmpsl outsl (bad) jbe retq iret pop rex.WRB (bad) (bad) stos jl in push movabs fisttpl ss xchg mov pushfq rcr push in ds retq sbb xor pop stos xor fistl add cmp mov pushfq adc pop adc rex.XB mov insl stos push cmp movsl lret pop sub xchg jg gs pop test lahf sub rex.X sbb orl hlt (bad) mov clc js in adc adc push (bad) (bad) fcmovnu orl push (bad) or pop xor addr32 mov jns in (bad) idiv rcr (bad) leaveq rex.R and (bad) retq or (bad) xchg (bad) rex.WRB popq fwait (bad) pushq stc push adc insb movabs fstpt sbb jmpq stc cli jp sbb add cwtl rex.WR rex add jbe jnp adc fistl movabs jp mov cmp int3 iret cmp callq rolb mov rex.WR in movabs (bad) es xchg cltd cmp rex.WRXB jb cmc xchg xchg sub nop adc rex.R cs rex.WRXB cli (bad) cmpsl lods rex.WRB sbb jne xor xlat movabs add xchg cmp scas fcmovne insl es fwait rex.RXB (bad) fcmovnu gs rex.WR je pop testl (bad) test leaveq lods and (bad) movsb push outsl (bad) loopne sbb fs pop push rex.WRB jg int3 int stos rex.B mov cmp adc jge ds pushq (bad) js fstps (bad) pop jmp jns mov or (bad) fcmovnb ja outsb loope add fistl out lock stos and pop (bad) jmp insl add xchg xchg lods sbb (bad) and in ljmp xchg jge add pop movabs sub movsl pop jmp (bad) rex.RX (bad) xchg (bad) (bad) (bad) (bad) fildl shl xchg sbb movabs jl fldt (bad) adc push (bad) and mov cmpsb cs mov xor (bad) inc rex.WRB sub testl es fwait jp mov jge fisub adcl fistpl ja rex.WB pushq mov mov cmp and std mov pop rex.RB fwait outsb incb fldt insb mov add xor pushq (bad) cmp cmp imul es or push sub (bad) rex.X or and pop nop mov repnz hlt sbb cwtl push mov rorb pop mov outsb xor (bad) cmpb pop xor rex.WB rex.WX frstpm(287 psllq jns adc rcr (bad) pop bnd xchg cmp sub mov (bad) add scas jl (bad) (bad) and pushq add sub fwait nop fstpt mov negl (bad) pop (bad) adc shrb cli mov rex.RB mov or push bnd jae rex.RXB sub stos (bad) jrcxz imul jg jl xchg (bad) lret fbstp mov xor sbb sbb rex.RX (bad) mov rex.W mov mov pushq mov rex.WR (bad) sbb lret (bad) ds (bad) adc rcll sbb and sarl add (bad) rex.WR pop xor out (bad) movabs fadds cmp insb scas (bad) movsl cs push outsb popfq jg imul ficomp (bad) push imul cmp (bad) pop xchg pop jle scas rex.WR lods in mov cmp (bad) cli fldcw rcrb and or pop nopl pushfq adc fisttpl mov addr32 add (bad) jl mov movabs push fisttpl xor insl adc fidivrl rex.WRXB callq rex.WRX mov mov mov in (bad) or ficoml (bad) ss fistpl retq (bad) xchg xchg rex.R fwait (bad) stos imul repz push outsl fmull jle fs pop push pop hlt cs rex.WR mov rex.RX add fildl rex.B out mov test fcmovnu in pushq mov or (bad) (bad) rex (bad) jrcxz sbb cwtl retq rex.WRX insl cmp jmp scas cs (bad) (bad) js pushfq xor mov (bad) or adc ss in fucomi xor (bad) jbe movslq jle gs or leaveq in sahf jae sub adc jb jne fcmovu stos ds cli (bad) rex.RX push cmp fbld xor fildl pop adc jne movabs ficom rex.WR imul rex.WRXB jle,pt and iret scas ficom movslq loopne mov rex.RX out rex.XB fistl pop (bad) icebp sub pop ds pop (bad) xchg movslq jnp fildl ds cmp sti pop adc push xabort (bad) movsb xchg jo xor mov hlt mov nop cmp push (bad) or sbbl cmpsl jle rex.WR xchg add sub and mov in (bad) push jl stos addl push cs xor and (bad) fsts (bad) jg jnp scas and (bad) cmp cs mov adc jns jnp movabs rex.X jge loope lock pop mov cmpsl scas jne (bad) cltd gs lods push stos fucomi push (bad) (bad) (bad) and xor int3 insb cwtl fistpl rex ja rex.WXB enterq pop mov rex.WB incb sbb repz sahf mov pop lea ffreep fisttpl lods (bad) pop fs (bad) mov addr32 test pop (bad) int3 outsl movsb jmpq jb pop cltd test movabs mov lahf push lods cmpsb sub mov stos imul pop fildl addl sbb fwait std rex.WB pop rex.R mov xor ds fwait xchg mov retq (bad) jnp jns rex.X rex.WRB (bad) in mov notb iret insb popfq mov ds rex.WB rex.WXB fnstsw mov movslq jae scas rex.RB mov addr32 pop xorb cltd fisttpl xchg jno and movslq mov enterq adc cmp idivb and int3 lock adc ja pushq (bad) fildl sub or xchg stc rex add int3 adc fisttpl imulb addr32 or jmp lret add (bad) (bad) popq rex xor (bad) pop fimul cmp imul rex.WB mov mov sbb icebp and std and pop pushq and sbb movsb loope adcl (bad) sub xchg cltd (bad) cli (bad) jnp addr32 movabs jrcxz xor stos sbb adc fistpll pop sbb mov mov repz movsb push xchg popfq outsb rex.R rex sbb and mov jg fistpl (bad) sbb and fcmovb stos xchg mull sti rex.WX mov shll repnz mov jge popfq test sub scas (bad) or rex.X and popfq lret and mov push fmuls decb mov and fistpl xor pop xor fneni(8087 outsb xor push out fisubl int jmp movabs mov movabs fmull sbb cmpsl (bad) jne iret sbbb out pop (bad) and shlb and (bad) rcrb (bad) sbb rex.XB (bad) jrcxz adcl xor jne sub xor sbb rex.WRXB pop test movabs sbb movsb enterq (bad) sbb adc fimul (bad) lods je cmc movabs xor incl movabs imul fwait pushq xchg pop leaveq xchg jg cmp fwait (bad) add pop cli mov adc sbb adc test pop and stc rex.X jge and rorb pop rex.WRB negl lods mov jae lock and mov mov test adc cmp rex.WRB (bad) sbb testl (bad) xor loope jae retq retq adc iret xchg xchg xchg fldt test (bad) std rex.X rex.XB (bad) fildl ja scas iret (bad) sub std in test movslq mov mov mov jmp and sub (bad) mov mov (bad) xor jb (bad) in jae adc fwait cmp insl xor and out out test (bad) sbb cwtl rex.B push fcoml (bad) movsl adc fistpl mov pop sbb sub out data16 repz insl pop (bad) shrl mov xchg in pop (bad) mov (bad) cwtd jrcxz add outsb cmp and rex.WXB cmp (bad) (bad) test lock or in stos movabs xor fwait jg cmp mov fwait jb outsb jge sbb or sbb in fstps clc lea (bad) cmpsb fstpt mov data16 pop fs (bad) pop (bad) sub add sub (bad) jrcxz or xlat jle fistpl xchg mov push out (bad) cmpsl or (bad) cmp icebp test push push mov hlt loope rex.X pop rex.WB test rcrb add data16 adc xchg mov negb cmp test fildl loop (bad) fstpt fidivl and (bad) jge (bad) rex.WRXB or movslq mov cmpsb sub imul in retq cld fistl pop mov sahf push jns (bad) lods insl mov (bad) sarl (bad) push push (bad) sub xchg cmpl sub movabs insb and fcmovne nop movabs sub sahf sarb lock jp stos jo sbbl iret lret lahf jbe jg mov or (bad) pop popfq sbb (bad) in lock lods pop sub insl push mov xchg rex.WB outsl (bad) xor add fwait or sbb and ja insb bnd rex.X sub lahf fidivrl out frstpm(287 cmp mov xchg (bad) xchg icebp rex.X xor jns mov xchg jle rex.WXB (bad) xor fisttpl add leaveq rex.RXB sahf and sbb jrcxz fisubrl mov roll in imul (bad) pop mov (bad) repz imul (bad) int3 (bad) xor and rex.WXB jnp int3 int pop insl mov (bad) int3 (bad) or jnp in xchg movabs cmp rex.WRB out (bad) addl adcl (bad) or sbb jmpq fldcw cli (bad) (bad) mov (bad) jge je jge pop adc stos rcrb imul xor fidivrl sbb xor int cmp (bad) retq mov adc xchg sbb mov or mov sbb push mov xor fs add (bad) mov pushfq pop mov mov (bad) (bad) push pop fdivl (bad) xchg mov stos jrcxz out test jnp cld pushq and (bad) ja adc lock rex.X retq xchg fcmovb cwtl jo in in fwait sub out (bad) or sub mov loope add cmc outsb xchg loopne cltd (bad) jle push push (bad) fcoms cmpsl mov mov cs mov xchg sub test xchg jrcxz add movabs mov jbe fsubs cwtl adcl mov lods leaveq loopne jo movabs rex.W pop rex.WRXB movabs lret (bad) lahf fimul (bad) rex.R mov xchg sbb adc mov pop test (bad) rex.XB pop mov xchg fsubrs out lods hlt xchg mov sub push callq rex.X mov jno sub rolb (bad) sub (bad) mov (bad) pop (bad) jl xor fwait mov (bad) iret xor (bad) mov sbb lret add add sub mov add xor jge pushq pop jmp (bad) in jrcxz sub (bad) iret and mov fnstcw scas adcl leaveq pop ffreep stos mov jp rex.B lock rex.WXB jp rex.X pop fdivl sbb jnp mov mov xchg xchg mov mov pop or sub fbld lret jo shrl cmp and cs fildl mov sub lock sbb pop lods fstpt add ss and notl cmp rex.RB sub repnz mov fwait movabs loopne lret sub orb fistl xlat iret and mov pop sbb outsl repnz lods adc incb and rex.WR stos stc fwait jl fldln2 (bad) jmp xchg mov push mov (bad) sarl fldt pop fnstenv sub jl movabs test add adc cmpsb scas rcl ss or sbb mov cmpl sarb ficoml mov retq mov hlt fldt loopne push (bad) pop (bad) lahf mov add imul in mov add leaveq xchg (bad) pop pop loop (bad) cld jnp int xchg jne xor sti fimull stos cwtl retq rex.WX sub mov (bad) or fisttpll (bad) fcmovnu outsl add (bad) push sub mov jmp mov cmp jne ss rex.WRB rex.WRX addr32 or (bad) insl and lods minps and push outsl adc loop cmp pop addr32 pop xor lret pop leaveq insl mov pushfq sbb fs fistl adc int std movsl test push (bad) pop (bad) cltd rex.WRB pop cmpsl int jae fcompl and push notl xchg in imul xchg insb addr32 icebp mov push pop data16 (bad) movabs xchg movslq insb (bad) (bad) push jne pop push push test cmp mov (bad) fisttpl hlt stos (bad) int ja mov or fcmovnbe mov imul jnp (bad) mov cmp (bad) roll (bad) cmp sbb lods xor adc callq (bad) mov fstpt cmp callq (bad) cmpsl loop data16 add cmp xchg sub xor pop (bad) jl (bad) or stos (bad) mov nop adc cmp insl (bad) mov rcrb cmpsl sbb data16 btl mov sub movslq fcmovnbe rex.RX shlb sub loope fwait add push push (bad) xor sub (bad) push (bad) xor sbb (bad) pop imul lahf (bad) mov mov add sub fsubl rcr (bad) adc (bad) sbb rex.XB (bad) add rex.WB (bad) rcrl add (bad) movabs push cmc out add (bad) fwait jmpq in and lret mov fldt ja lahf and rex.WXB movabs in (bad) mov push rex.RB push rcl (bad) cs ja or add repnz shlb xchg (bad) sub and (bad) fldt rex.XB rex.R pop mov (bad) (bad) in enterq jns ds push pop je xlat rex.WRX jb (bad) cvtdq2ps jmpq cld jo addr32 movabs jnp and (bad) mov movsb stos (bad) (bad) sub mov cltd (bad) pushq popfq mov (bad) mov (bad) fidivl stos (bad) jbe outsl xlat cmp fucomi jb leaveq xor cmc push (bad) js movabs sar xchg mov rex.XB ficom cli loopne fcmovnbe sbb mov out imul mov std stos movsb cmp xlat and cli fildll adc add xchg jnp outsb jmpq rex.RXB jg push or pop sbb in cli iret pop xlat sbb (bad) pushq movslq pop bswap rex.XB (bad) sbb (bad) adcl pop jbe mov adc pop cmp lahf fcmovnbe jns rex.WB cmp pushfq or in (bad) retq rex.WRX add (bad) fsubs cs (bad) int3 jge (bad) mov movabs sbbl in jne (bad) mov pop test sbb (bad) stc jne rcr (bad) imul rex.RB pop push xor xor test fwait imul sbb lock adc callq sti xchg (bad) (bad) pushq sbb fistpl lods sbb fwait mov and fidivrl movsb ror xor xor outsb (bad) cmc push (bad) or (bad) mov (bad) sub lret mov callq jp mov rex.RX lods ja pop adc rex.WXB clc cwtl jne (bad) (bad) or (bad) add mov xor xchg fcomi movabs and mov rex.WX (bad) (bad) loopne cmp loop pop out mov ja sub pop mov xlat sarb and or rex.XB cmpsl sub fildl sub and cmp fildl icebp rex.W pop rcl push pop loopne pushq mov cli fisttpl (bad) xchg mov fiadd pop and jno mov fdivrl mov cwtl mov lock sbb sbb add fsincos (bad) sbb adc movabs pop loopne mov push movabs rex.RXB mov pop in xlat or fldenv sub int adc movsb cwtl adc (bad) (bad) rex.W rex.R in mov jmpq push movsb (bad) fcomps cmc (bad) sahf mov (bad) rex.WRB mov fyl2x jl mov (bad) cltd pop rex.WXB push cltd rex.RXB xor rex.XB (bad) sbb xchg cs jmp add sbb xchg movsl int mov cmp jg rep xor or push and pop je (bad) or cmp jge cmp mov adc sarl add rcrl mov sbb imul jo addr32 ror add js rex.WX ss data16 fimul fwait xchg lock in (bad) addr32 jns push (bad) jae cwtl (bad) ja sahf (bad) out jp lock mov rex.X insb std push or (bad) movsl cmp cmc mov std orl fs js jne (bad) (bad) rex.RXB outsl rex.WR idivb xor fistpl sahf sub adc push retq pop out cld xor adc xor pop jae mov mov rex.RXB out push fisttpl jle mov gs rex.WRXB lret imul pop mov (bad) movsl je jl push (bad) sbb sbb xchg (bad) cmpsb pop sbb js sub cmp pop jo nop push ja loopne (bad) (bad) cmp jrcxz movabs (bad) and ss (bad) sbb or (bad) (bad) jp pop imul add xlat and test push rex cmp ss (bad) sbb xchg iret cmp (bad) fcmovnu imul pop iret ja cmp (bad) decl (bad) jnp stc movabs adc sub jl cld cmp (bad) sarb push cmc add rex.WRB ss pushfq (bad) fsubs jae (bad) fisubl cld (bad) xchg push stos xchg jp lret stc rex.WRB pop (bad) xor int3 (bad) or outsl fnclex and jns and je jmpq lret and hlt sbb mov neg fwait or rex.WXB xlat and movsl push sbb and sub adc pop jge insb xchg and (bad) xor fistpl andl lcall rex.WX or (bad) int and cmp fsubs lock fdivl leaveq (bad) (bad) xchg (bad) mov ds popq jo (bad) push pop fcmovnu scas and stos (bad) rex.WR mov gs std xchg (bad) rex.WRX xor push imul adc fisttpl sahf lock (bad) fstpt lret out scas mov imul mov (bad) xchg sub lods (bad) push sbb (bad) xor push nop (bad) push addr32 insl rex.W outsl movabs rex.X sub addr32 or enterq mov sub (bad) repz movsb (bad) xchg or popfq lods mov movabs adc or iret jge (bad) xor jge jp jne xchg lock leaveq decb mov xor lock pop movabs jno (bad) mov (bad) mov gs movslq mov (bad) (bad) (bad) rex.WRB mov xor add push ja and push imul pop xchg popfq adc cmp jb sti rclb sbb push lret sub sub adc pop mov (bad) insb cli or adc lret mov imul rex.WB xchg fistl and loopne pop sbb and fwait cltd rex.WRB mov jle xchg (bad) insb leaveq movsb cmp push sub (bad) out out pop (bad) pop xchg mov (bad) popfq xchg xor in rex.WB in xchg xor (bad) adc xchg sbb pop fld movabs mov nop (bad) rex.W xchg stos adc or insl mov cmp (bad) fs mov (bad) add cmp (bad) (bad) mov adc jle and push xchg pop std pop cld mov neg (bad) loope movsb jg jrcxz jnp andb in imul ja add fstpt out fcomi (bad) in xchg scas push jns (bad) and rex.WRB sub gs fs popfq addl fcmovne je repz (bad) fiaddl (bad) rcrb nop popfq (bad) mov fstpt sbb mov (bad) fcomi (bad) add jns ds movabs (bad) lock xlat rex.WXB movslq addr32 shrb mov cli mov add mov rex.W addr32 jnp stc jae (bad) cmpsl fcmovnbe stos sub (bad) pop or lock add mov and clc sub add (bad) lods test mov adc rolb xor and jnp ja negl (bad) mov movsl fidivrl xor cmp jnp jbe repz add push rex.RXB xor xor mov jne (bad) cld pop (bad) idiv rex.WRX pop or fsubrl cmp add insb rex.R imul ds cmp lea mov mov (bad) clc push jnp movsl loopne mov je insl sub rcll lods pop sarb jne push (bad) and in rex.B lods sub mov fisttpl movabs (bad) xchg pop rep sbb sub imul (bad) (bad) and fsubs rex.WX and and push jmpq fistpl or rex.WRXB fsub cmc sub (bad) pop mov and fcmovnbe and loope (bad) lods fsub (bad) or (bad) mov jmp push rex.WRB (bad) shl rex.WX imul push fldcw adc cli xchg fcmovne jrcxz cwtl movslq shl mov rex.WRB or xlat in pop or rex.RB neg (bad) test movabs rex.R rex.B cmp pushfq mov callq sbb rex.RX rex.B movslq gs (bad) scas (bad) fimul rex.RB decl pop movslq mov movabs (bad) cmpsb (bad) mov fistpl gs adc (bad) (bad) movslq or xlat jns adc ss insb jae test pop sti enterq pushq cmp movabs sbb rex.WRXB gs adc rex.B mov scas rex.R and pop sbb fstpt mov adc sub test mul fidivl loop addr32 in rex.RXB (bad) add callq push icebp lret out pop rex.WR pop xor (bad) lcall movabs (bad) or xchg (bad) out jnp cmpl xchg adc mulb adc add fildl in cmp fs (bad) xchg rex.WX sbb sbb jae,pt lret (bad) (bad) jp or jrcxz (bad) push pop js rex.W sahf orl sub packssdw movslq in (bad) outsl mov divl push add fisttpl jp push fucomi ss rex.WRXB lret cmp fistl movsl fs pop sub mov (bad) push jae callq ja pop rex.R fstpl push pushfq adc jae push add mov push jo pop popfq adc xor retq repnz sbb scas in rex.RX mov clc push (bad) xlat jl neg push sbb pop jo pop add fdivr adc jrcxz or or rex.WB insl (bad) rex.B rex.W mov rcrl (bad) (bad) or (bad) out ds sub int jrcxz scas push pop retq (bad) jnp in rex.WB or out xchg pop rclb (bad) rex.WRB movsl js lret imul add sub mov (bad) int3 fwait mov jo (bad) xchg sub loopne xchg push rclb (bad) ficom add rex.WRB scas in mov shrl movabs and movabs (bad) jno mov jbe fistl or clc retq adc sbbb push rex.XB jae rex.WB pop jno stos xor fdivl pop mov mov rex.WXB rex.WXB sbb sahf rex.R clc fwait shl pop rex.WR xchg out mov cmpsl (bad) fwait notb xchg ja int lods push stos push mov pop add jns push mov rcr xchg jp pushq cmp mov cmpsb lock mov xchg vorps popfq (bad) mov cmp sub xchg retq pop stos lret lahf movsb push (bad) push xchg out xor xchg pushfq cmc movabs (bad) movsb xchg bnd mov or rex pop rex.WB lock xchg in jne leaveq mov xlat rcr jle mov cmp rorb clc mov stc imul std pushq (bad) (bad) pop xor rclb and xlat xlat or scas cld push rex.WRXB add and cmc mov cs pop pop lahf mov sbb jge mov cmpsb mov icebp push fsubrs xor (bad) (bad) retq push out (bad) jb jle cmc mov rex.WB mov in pop mov (bad) fwait loope shll sbb test xorl lret js xchg or mov imul add sbb stc pop jbe rex.WRB movsb addr32 cld (bad) xor insb sahf mov pop sbb rcrb lahf push xchg fisttpll shr sarb (bad) out (bad) retq scas subb rcrl push pop add mov int pop fbld pop (bad) out (bad) push xor retq sbb cmp xlat rex.WR lret rex.XB jmpq xlat mov push fwait and lret jb rcrl fsts out jg (bad) mov jne iret mov pop clc jbe enterq mov data16 int je (bad) xchg test mov jrcxz ja rex.RXB xchg movabs xor (bad) push pop ud2 xchg insb cltd (bad) push mov xchg out lret loope push (bad) sbb jle add rex.WXB or adc add fisttpl mov (bad) sub xor loop (bad) movsb add test out rex.RXB jns push cli push add callq or cld (bad) fwait jb in pop test xchg shrl adcl jne rex.WRX addr32 (bad) sti (bad) in (bad) mov (bad) fisttp sbb fst movslq ficompl sub rex.X or pop rex.B ficoml cld mov je std cs out (bad) ss cmovp xchg xor rex.XB fldl sub push mov cmp (bad) test sbb mov and and xchg adc cmc (bad) iret movsb lret (bad) pop mov sbb mov adc (bad) divb decb mov rex.RB movsl pushfq and out xor loop cltd cmpsl (bad) xlat (bad) pop (bad) (bad) or fildl (bad) fistl mov and out cltd push mov cld and adc fwait mov xor lock jns mov jnp xchg addr32 pop adc mov fldt pop and fdivp clc mov movslq (bad) mov push xchg fstpt (bad) mov movsl pop std or fistl add lods sahf rex.XB notl (bad) in sbb (bad) fcmovnb imul adc (bad) fisttpl testl mov fisttpl pop (bad) xchg rex.RXB int3 pop rex.B (bad) pop rex.X loopne rex.WR (bad) jge (bad) punpckhdq pop retq push lahf mov adc fisttp xor rex.WRXB rex.W fstpt stos rex.WXB jg ja outsb mov andb callq cmpsl movabs jrcxz std pop pop orl jp fwait movslq mov fcmovne je lret fld fildl xor addr32 cmp sbb (bad) out rex.X sti insl clc rex.WRXB pop and sub test scas cmp pop movabs rex.WRXB push (bad) rorl test pop fistpl test sub adc sub retq rorl mov callq jl sahf imull (bad) jns loope jnp rex.X rex.RX pushq add jno imul sahf mov pop sub js (bad) (bad) lods add (bad) pop rex.RXB add xchg shr (bad) and push jrcxz jle adcb jbe xlat add push sub cmp (bad) (bad) rex.B push jg adc (bad) fwait test add pushq (bad) xor xchg movl scas fimull test or adc mov add sbb cwtl sbb pushfq xchg gs or and insl icebp pop leaveq fisubrl lods test xabort xchg shll cmp add or rcrl (bad) fs add push sbb pop mov adc (bad) in cltd push ficom lock mov out push sub nop or rex.RXB pop cld mov fildl (bad) (bad) fwait xchg (bad) add scas cmpsb je and or push rex.X xlat mov sub movslq (bad) test push mov fdivrs adc ss adc and negl sahf xor movabs (bad) out repnz divb (bad) xor xlat fwait pushq rex.RXB jl iret jno imul rex.XB int xchg add (bad) (bad) xchg rex.WB pushq sub sarb jnp rex.WXB (bad) test sub in adc xchg pop mov enterq ficom jbe (bad) je adcl out icebp mov rex.X cmp pop iret fcoml or push rex.WRXB jrcxz jmpq jns outsb jg xchg std neg sti (bad) fstpl mov int cli shll jbe mov cmp in fldl cld rex.WXB lea cmc jne mov mov cwtl add popfq jno in iret push sbb rex.RB pop out (bad) (bad) sub movabs jp sahf stos jp push in xchg cs xchg cmpsb push insl fmulp mov adc sbb adc hlt pushfq rex.R rex rex.RB lock pop (bad) movabs (bad) mov scas pop (bad) loopne or pop jrcxz movsl leaveq mov pop add jl add mov sti rex (bad) cmpsb ss xchg sub (bad) rex.B rex.WRXB xchg rex.RXB lods jns or cltd mov mov or icebp rex.WR adc jle pop cmc mov sub lods pop pop imul (bad) rex.B mov rex.WXB in fwait mov (bad) fldcw adc bnd (bad) cmpsl fldt loopne adc xchg rex.X jp cmp callq test lods cld xorl movabs xchg (bad) (bad) cmp xor pop fldt leaveq hlt xor scas movsl fstpt (bad) sub rex sarl callq (bad) xchg mov retq (bad) and mov insb and (bad) jae mov std lock fcmovnb jge (bad) jnp cs xchg xor add or movslq scas (bad) mov jbe mov jns (bad) fcmovnb adc lahf (bad) rex.WR es insb jge enterq cmp xchg jp add ss (bad) sub xor pop sub push mov rex.RXB cmp (bad) xor pop mov lret movabs sbb (bad) fiaddl in std xor and xchg push fucomi lods pop (bad) sar nop mov (bad) insl jge fstpt (bad) je sti test mov sub popfq rex.WB (bad) mov ja pop pushq mov rex.R nop or gs rex.WXB mov ficomp or sub lahf (bad) cwtd iret (bad) xor push jns movabs insl (bad) out (bad) (bad) mov lahf rex.WRB imul sti retq (bad) mov (bad) test out stos (bad) (bad) ss imul mov mov (bad) jnp rcll xor push adc cmp (bad) xchg insl js stos sub mov or movslq adc fldt test (bad) clc or stos insb (bad) lea out fmull fs mov ror sbb subb jmp sub add (bad) xor fldl sub rex.B movabs (bad) in fisttpl jge (bad) sub fwait xchg mov (bad) adc sti (bad) outsl movabs rex.WR rex.R scas loopne jg rex.B cli lahf shrb enterq push pop jno movabs (bad) pop jle fistpl xchg mov fistpl (bad) cli (bad) xchg rex.B pop je data16 add movabs ror movslq ss enterq iret or (bad) clc movslq (bad) scas cmc test pop pop movsl jne (bad) mov (bad) sub (bad) stos lods ficom movabs rex.XB (bad) data16 nop ss (bad) mov (bad) adc jnp enterq sbb jne xchg fcmovnu mov (bad) sbb in and xor (bad) rex.WRB or cs sbb cmp movsl jle xchg cmp movslq mov in xor cld sub sub rex.W jb sarb cli and jrcxz (bad) scas cmpsl pop sbb imul in cld (bad) mov popfq xchg mov (bad) mov or clc cmp mov (bad) xchg in jge fisubrl stos pop fdivl cs stos mov xchg movabs negb (bad) rex.WRX rex.RXB rex.WB ss callq (bad) (bad) fnstsw sbb bnd lea (bad) movl cmc insb rex.WX data16 (bad) cmp rex.RX pop adc in rex.WRB xchg (bad) lret lret jrcxz jns sub pushq (bad) lret (bad) (bad) in xchg add push (bad) testl push test fisubrl test mov adc (bad) (bad) rclb (bad) out rex.WRXB (bad) adc ss cmp xchg in rex.RX sar adc push lret jmp adc movabs or pop (bad) add cmpsl in int xchg retq rcr jo (bad) lock xor cmp sbb outsl jg stos (bad) (bad) shlb fisttpl in sub and pop (bad) jo (bad) rcll insl xchg outsb movabs scas test vunpcklpd orl repnz or pop movabs jno jo pop repz fiaddl fs lods cmpsl pushq fcmovne js or movabs fcmovne rex.WR fstpl xor xor mov fsubs cmp cmc rex.WXB or in gs mov xor repnz jno sub (bad) cmp addr32 data16 push adc data16 jle (bad) rex.WRB movslq fldt xor pop rex.WB ds fisubrl fcompl adc iret stos popfq rex.B repz mov pop out imul fcmovnu pushq and (bad) (bad) cmc pushfq jb,pt mov rex.WXB rex.WR repz jl adc fistl std pushfq lret out cmp jnp test adc int3 mov jle sub and fildl (bad) movabs (bad) icebp push mov (bad) sbb xor fistl and jle roll cmp ss mov rex.RB sbb adc (bad) cs outsl rex.WRX data16 iret (bad) (bad) fadds rex.RXB (bad) imull cld movsb rcrb (bad) (bad) jrcxz (bad) mov (bad) imul jo adc in push fstpt out rex.WRX xchg (bad) (bad) data16 (bad) scas (bad) jne jns adc pop rex rex.RXB mov rex.WRX xchg jbe pop lea js mov and (bad) (bad) pop mov popfq lahf pop fildl mov loop movslq pop (bad) pop sti (bad) (bad) mov fisttpll fcmovnbe movabs enterq adc pop fildl (bad) sti (bad) pop push jo or fiaddl fstpt test jnp imul cltd retq retq rex.B and mov retq jmpq in (bad) rex mov sbb lahf jnp mov mov int3 fwait cmp push (bad) out mov adc jae pop fldt jl rex.R pushq rex.WXB jmpq stos mov lods fistl int3 mov cmp xchg fisttpl (bad) mov sbb fstpt or (bad) add (bad) mov or (bad) loope (bad) sub adc rex.WRB rex.WRB sub mov push rol (bad) mov loope stos cmp cmc pop rex.WR jnp (bad) cmp rcr pushfq adc xchg xchg fildl fisttpl out retq mov pop mov push test pushfq fldt rex.WRXB stos (bad) out stos data16 (bad) fcoml sar add enterq adc scas pushq out test add (bad) or xchg (bad) fsts mov test movabs jg jns or (bad) out (bad) mov sbb and packssdw sbb (bad) out orl test sub sbb xchg (bad) jg (bad) (bad) xchg mov retq test push (bad) xchg mov (bad) xchg sub (bad) movabs sub pushq or je xchg pop imul mov rex.X rex cmc (bad) (bad) jmp pop mov xchg rex.RB ss xchg (bad) add and (bad) (bad) out cltd add imul xor fldt sar lahf mov (bad) fcomi stc mov xchg test fisttpl cli jmp (bad) imul lret scas loop (bad) int (bad) int mov (bad) ds imul rcrl and (bad) sarb lods fisubrl xchg xchg addr32 ss sbb pop (bad) xchg fisttpl neg cltd xchg fcmovnu cmpsl cmpl rex.W sub cmp sahf rex.WRX mov pop jnp pop fstpt rex.WB rolb xchg pop fisttpl fldt (bad) xor clc sub (bad) fcomps mov push (bad) pushq xchg rolb sbb pop adcb jge (bad) pop test loopne (bad) or and adc (bad) rex.R mov lods push movabs popfq icebp imul mov jne rcr mov rex addr32 fcomi sahf pop pop add pushq shrl push push mov in jmp jbe mov fildl (bad) cmp fcmovbe lret fsubs add mov fisttp push push outsb andl cmc adc iret hlt (bad) movabs fs pop sbb xor je rcrb rex.WRB fsubrp fildl fsts jno add adc hlt push jle jne adc mov fldt rex.WXB mov or mov in pop pop mov addr32 movsb and (bad) adc imul movabs addl out shld enterq nop mov and cmp cmp pop stc xor rorb sbb mov pop pop (bad) sub fstpt cmp xchg jge hlt (bad) lret rex.RXB loope (bad) outsb std (bad) ss sub int fildll clc stc fistl (bad) movsl mov mov push rex.R rex.WX (bad) imul lods mov in movabs nop (bad) mov scas imul mov (bad) retq cmpsl rex.WXB (bad) fcomi loope (bad) enterq retq test or sbb lea imul movabs add rex.WR lods or xor and push rex.WXB insl adc mov cld push and or jno (bad) cmpxchg cmp (bad) mov jae cmp popfq int3 mov imul mov jp fistl sbb lret mov mov ja (bad) iret (bad) mov imul es imul (bad) jl fsts fsts lock rorl pop xchg cld or mov pop xchg shr in pop rex.RB loopne adc out mov jle pop fadd sarl (bad) lret enterq (bad) scas pop (bad) fnstenv in ficoml cld iret mov shr movabs sti rex.W mov gs sbb jno pushq lods sbb push adc pop fsub jrcxz sub (bad) test sbb (bad) or add mul (bad) addr32 (bad) out mov cld jbe pop cmp adc lock shll mov adc pop add rex.RB fisubl or callq cld (bad) mov mov cmpsb xor pop rex.RX lock hlt (bad) (bad) callq in movabs mov (bad) rex.RB loopne jne addr32 lods sub mov mov stos int or lock shrb data16 loopne pop pop rcl add insb sarb (bad) xchg movslq (bad) repnz js mov push jge jl push push cmp (bad) and ss clc mov adc pop adc es mov rex.XB add and pop xchg push (bad) sti rex.XB xchg pushq outsl cld (bad) test ja retq push push jmp xor jne (bad) (bad) jae jnp neg fcmovnb (bad) (bad) retq scas iret jg mov sub mov push pop (bad) (bad) movslq or or lock pop jbe mov ficompl rex.WRXB cmp sbb (bad) pop fwait and xchg popfq test add fldt rex.RB jb test ds sub retq sbbl mov fmulp cmp rex.X adc or jnp cmpsb std rex.WRB mov mov in jnp xor adc rex cs scas in loope repz (bad) fnstenv std mov jo ds sbb (bad) mov xchg pop lea adc and sub adc jmp rex.B lods (bad) pop mov mov std push jl xor xor rex.B orb or movabs jnp mov xchg mov add fisttpl xor int3 fistpl xor fistl xor int3 iret lret shlb stos mov addr32 out outsl or pop fwait push retq jl movsl cmp and cmp xchg (bad) (bad) (bad) fistpl (bad) int3 sahf jne pop pop es xchg mov mov int3 movsb bswap jno popfq fistl mov pop adc xchg mov movabs loop add and xor fs (bad) not add mov cmp mov add (bad) sub pop jno sub cmp dec rex.WRX rex.WB imul adc (bad) add int mov sarb xchg (bad) fildl shll fstpt xchg cmp pushq push cmp adc popfq leaveq push int cmpsb fucomi rex.WR xchg enterq repnz fisttpl mov sbb shlb or xor pop hlt xchg (bad) fbstp imul and je cmp leaveq sbb scas mov outsl (bad) rex.R mov rcrl enterq mov push fdivrl rex.B push int3 push popfq test mov jns mov (bad) movslq cwtl (bad) ss pop rclb (bad) movslq (bad) (bad) add (bad) sbb add in cmpsl xor cmc rex.XB rcr int rex.WR (bad) js int3 pushq mov test iret out jmpq imul test (bad) sbb rex.WX xchg mov outsl (bad) test (bad) pushq rex.WX (bad) cmc pop push (bad) rex.R movl sbb callq std cmp cmp movsl test test rex.RB rep fldt pushq pop enterq adcl adc scas test (bad) rex.W scas sarb js mov cmpsl lods sahf movabs push imul cmp or add xchg (bad) movzbl mov icebp (bad) rex.WB add cwtl (bad) (bad) sub jae jo fistl and and pop jnp (bad) pop adc fcomps xor imul out fwait rex.RB fstpl icebp push add add push addl jle int3 sbb and push jbe fsubr (bad) iret movsb (bad) cltd jns jmpq jnp fnop insl push jnp jne stos (bad) mov push pop and xlat push pushq xor fnstsw rex.WXB lods xchg mov jp (bad) lea rex fstpl js fcmovnb (bad) pushq fldt sub mov fldt add mov addr32 in jae scas addr32 fldt pop in jnp adc fldt jae rex.WRXB push (bad) in stos fldt retq (bad) sub imul rex.WXB or xchg mov or add rclb (bad) maxps int3 pop rcr adc fldt push lock scas rex.WR rcrl fcomi or sbb jle and rex.W addr32 (bad) jno sbb jne rex.WB retq and mov pop fstl adcb rex.W test decb addr32 cltd sub jp fs mov mov bnd mov out insb jnp xchg mov stos insl pop scas xlat pop jp loope movabs pop in fcmovnbe sub adc or repz (bad) mov rex.XB push jmp fcmovnbe add out jg fwait mov (bad) cltd jrcxz and sub push cmpl fildl mov pop adc push and jae test or push and vaddsd rex.RXB (bad) test (bad) iret je mov sbb test jnp mov scas xchg std movsb jnp (bad) (bad) in sub fstpt xor xlat stos pop (bad) jge cmp lret mov sbb mov (bad) mov imul jge cmpsb mov (bad) (bad) mov rcrl jo (bad) jp jno shlb addr32 fistl sahf rex.WR or fnsetpm(287 sti test imul mov (bad) push mov (bad) jp add push add xchg es xor xchg jrcxz in pop push cwtl push (bad) mov sub (bad) jno insl xchg out rex.WRXB and flds xchg data16 and push pop (bad) (bad) sti enterq scas imul mov jp out jo loope add (bad) adc mov xchg and (bad) lock movabs mov rex.WR cmp push lods sbb fcomi test (bad) fcmovnu movabs jmp addr32 shrb int and repz xor and cmp rex (bad) loop add and mov sbb imul retq lahf insl and adc fstpt lods shlb jrcxz xor fucomi callq lods rcr sbb rex.R rex.RXB jno cmp out sahf roll adc jne stos rex.X add rex.XB add cs push loopne fcmovnb out hlt sub js xchg mov push sti pop mov (bad) (bad) fcmovnbe cltd or fild movabs xchg mov (bad) (bad) xor jne (bad) lahf jge test (bad) loopne jno (bad) outsl in (bad) mov xchg or xchg jrcxz lret jmp sbb add or adc adc adcb mov in mov (bad) rex.X (bad) jl rex.W out pop (bad) scas outsb retq rex.RX sarb fwait add jmpq rex.WRX (bad) faddl fcomi sub int3 xor test jmpq movsb scas movabs fstl repnz rex.RX add (bad) xchg subl jg fwait rex.WB adc imul jae xor sub test (bad) shll sbb mov rex.RXB xor push callq retq rex.WRB (bad) xor cmp sbb add and xor shrl (bad) cmp (bad) (bad) or cltd stos rex imul neg sub rorb imul sub je jg rex.RX (bad) sbb sub scas loop fstpt jp cmc mov fistl xchg jle es test movabs (bad) add fucomi adc jg hlt lock (bad) (bad) jp rex.R js cmp mov pop rolb cmp xchg orl xor pop fucompp jmpq mov adcl fcmovnu rex.RXB in std nop add push movabs fisttpl rex.X lock cltd retq jnp je in (bad) jl mov pop mov mov sub pushq xor cmc (bad) pushfq pushq repnz sub mov cmpsl mov jge xchg (bad) in nop ss mov (bad) push cmp shr (bad) lahf rex.RX fstpt sbb fistpl pop xchg xchg in jb mov stc and pop movabs callq jns or and (bad) rex.X sub adc adc fldt pushq pop fistpl add jle fstpt or adc (bad) jb push push rex.RX jnp jmpq fldt and pop fmul retq cmp in fdivl in fisttpl addr32 fcomi mov (bad) sub (bad) jmpq fnsave rex.RXB xlat jns pop xchg enterq jbe rex.WXB fwait pop mov fildl lods rex.XB push xor jrcxz cmpb (bad) jne or (bad) cli rex.RXB shrb movabs (bad) pop pop rex.RB xchg sahf fwait sub and stos int xor jns pop sub andl fcmovnbe clc or jmp jo test psllq mov adc sbb sbbl sahf or (bad) iret mov mull mov adc fistpl in xor roll adc rex.WRB cmc rex.WRX or adc and (bad) jns and xor sbb sbb push (bad) mov movabs (bad) je mov rex.WRX rex.WRB test fildl rex.WRXB in in (bad) mov xor xchg and fistl pop rex.RB jge loopne lea fcmovnbe or rex.R jmp movabs sub (bad) retq mov jmpq fmull rex.RXB (bad) mov fucomi out add fcmovnb fdivrl rex.WXB ja add jmp and rex.RX rex mov cmpsl fisttpl ds gs rex.XB mov jo push fdivl (bad) cli pop cmp rex.R fldt repz push (bad) mov (bad) xor (bad) sub rex.RXB push (bad) incl xor jo movabs jrcxz add rorl jo test (bad) fistpl (bad) xchg pushq retq cltd pop or (bad) mov test out (bad) cli repnz jnp jle movmskps stc pop retq cmpsl and (bad) jl xlat pop mov imul in rex.WRB stc out subl sbb sbb lods add (bad) (bad) sub adc popfq (bad) rex.X or flds xchg push sbb xchg pop (bad) jbe rex.W sahf repz sbbl mov fldpi pop iret jns rex.XB fsubrs rex.RX mov (bad) loope clc cwtl rcl push sub mov rex jbe rex.WRXB xor xchg notl mov lret vmovups xchg mov xor pop ds out cmp (bad) push cmc cmp (bad) and sub rex.WR int3 fnstcw test shll out mov flds (bad) xor (bad) mov fmulp shr and movsl add outsl loopne jo mov mov pop stc mov test add pop xor mov xchg (bad) fcmovbe imul outsb mov mov xor mov or (bad) (bad) jl (bad) addl mov (bad) add xchg (bad) and xchg movslq xchg add xchg jns retq xchg mov xchg fistl imul rex.XB cwtl pop cmpsl out cmp (bad) outsl callq sbb rex.XB fistl movslq test mov enterq std (bad) or jae (bad) outsb pop mov shrl cmpsb shrq mov lock test (bad) add push add (bad) neg movsl xor jl imul (bad) fistpl xchg icebp movabs (bad) (bad) xor add shrl rex.WRB xor (bad) adc pop (bad) (bad) (bad) fildl clc xor fcmovnu sub push rex.WR jp fistl cmp rex.RX rex.RXB fwait cld sti jmpq mov pop push and xor mov shr movsl lock repnz sub rex.WRX (bad) lods (bad) mov rex.B fldt gs test test loopne out (bad) fild or cmc or cmp (bad) and (bad) lret fcmovne movabs (bad) ja cmp pop or fistpl pushq adc test adc out (bad) (bad) fisttpl std rex.XB (bad) in mov fwait adc mov push mov fimull mov pushfq cmp pop rex.WR in (bad) lret (bad) pop nop (bad) je jg sti sub and xchg fcoml cmp xor lahf adc fwait xor jbe mov cwtl pop rex.WB mov (bad) push movabs push loope pushq nop (bad) jne popfq (bad) insb std add js (bad) in pop fildl rex.W sub and jrcxz fucomi cwtl out add jb movsb in (bad) gs (bad) xchg lea (bad) cmp sub cli ror out fnstenv (bad) push in jo out rex.WR movabs rex.RX and push mov pop in add and (bad) movsl and (bad) loope mov loopl xlat xchg jns mov pop (bad) (bad) mov (bad) push (bad) xchg sub movabs (bad) add adc add gs shr push pop fildll jno (bad) adc pop ljmp cld rex.R in (bad) mov data16 mov imul or cmc (bad) xor sbb (bad) callq decb rex.WRB shrb (bad) movabs pop fimull xor mov out mov xchg xlat cld push mov (bad) in xor fiaddl stos push (bad) pushq cmp mov xor nop (bad) jge out ja jl rex.WXB mov pop (bad) xor sahf pop pop xchg jrcxz fidivrl movsb lods cmp in imul in rcll xor (bad) pop out mov fwait jo iret callq cmpsb push (bad) push push jo mov stos js sub jmp lret add pop test pop xchg clc (bad) and fldenv test (bad) jae xor mov movsb int mov jae leaveq movabs cli push jle pop pop leaveq lods leaveq movabs add jns lods int3 xchg xchg imull icebp sub movsl jg leaveq xor pop in fcoml in (bad) push mov pushq rex int3 xor xchg (bad) in rex.RB sub rex.WRB outsb jae push (bad) xor adc push jmpq fbld (bad) (bad) loopne jae cmp nop jns callq cs mov push sti fldenv jmp (bad) movabs xchg mov leaveq cmp pop lods xchg shrl or (bad) retq fnstcw cli or xchg xchg in fwait xchg movsl and rex.WRB xchg jnp stc add (bad) pushq cld rex.WXB mul jmpq fs out and sub pushq fild callq mov sbb fistl xor insb int3 (bad) sti and jae push (bad) fldcw fisubr sbb movabs sbb jnp cmp rex.X add push imul std (bad) (bad) movslq and scas fistl or cmp (bad) scas adc test (bad) (bad) sub cmp cmp (bad) std (bad) hlt jp movabs adc xor rex.X rex.WRXB rorb sbb in and (bad) ds stos and nop jl fcmovnu (bad) insl rex.WR (bad) pushq cld mov mov pop push rex.WX xchg fist rex.RX cltd add rex.W sub fildl rex.WRX ja xchg add (bad) fisub (bad) pop jae ficompl retq cmpl xlat ds rex.W je pushq test fcomi pop push rex.RXB sahf std stos or nop fidivl rex.WB mov sti (bad) retq rorb leaveq (bad) cmp (bad) pushfq pop (bad) mov pop mov push xchg or (bad) rex.X cs fistpl movabs sub cmp push hlt mov mov fldt inc mov mov fwait xchg movslq pushq jno clc fidivl testb or rex.WR mov jl fdivrl or enterq (bad) jbe stc (bad) out shrl pop jnp fistl outsb ss fisubrl and jne adc and mov int3 in xchg jl (bad) ds xchg (bad) ficompl sbb fdivl jrcxz (bad) sbb retq cmp (bad) jp pop mov insl mov int pop movabs callq xchg sarl adc mov ss clc pop mov mov sbb bswap rex.W fwait add movabs push pop (bad) or adc (bad) retq (bad) mov xor add imul fcomi xchg (bad) (bad) loopne lcall pop (bad) out jge enterq ja fldt lahf decb (bad) stos out rex.WRB pop cltd rex.RXB mov xor adc out xchg jns or mov (bad) test xchg jb xchg fistl (bad) insl xchg xor add test push sub jns sahf mov jb cmp cmp jp enterq fcmovne push mov sbb fwait (bad) add pushq xchg mov imul retq xchg (bad) rex.R adc in xchg sbb xchg jge fwait adc sub adc movabs ds rex fwait push xor add (bad) mov (bad) and cld (bad) mov push pushq mov movabs cmp retq xor (bad) int3 in adc jb pop outsb jno pop cmp sbb sub (bad) push mov (bad) test and callq (bad) sti or (bad) add and andb (bad) rex.WXB pushfq or gs cmp mov rcrb fistl cmp mov pop callq mov sub add rcr pop imul fistpl cmpsl (bad) or push pop retq cmpsb movsb pop add fistl jle pop rex.R rex.WR jb (bad) fcmovnb or pop mov enterq and rex.WRXB cmp ja jns jb jo fildl mov cmc (bad) jg push mov pop out ficompl mov mov xor (bad) cmp int int sarb xor jg clc test xor paddsw lods mov rex.WB mov add clc xchg (bad) rex.WRX or xor pop and (bad) (bad) mov lret cli sbb int fdivp imul or clc sbb rex.WRX mov fistpl jrcxz movabs fcmove leaveq nop jle sub (bad) pop or hlt pop jmp push pushq (bad) in adc (bad) xchg jae jno rex.WRXB cmpsb pop pop cmp add imul or lret movsb lea out push cltd cmp mov imul gs clc pop sarb cmpsl and movslq jrcxz rcrl jl sti gs loope (bad) movabs mov (bad) fucomi out cltd rex.XB mov sahf (bad) lret (bad) jmpq (bad) rex.RB (bad) clc fs mov cmp add in push mov (bad) add mov lea cwtl scas add sub jmp pop (bad) test mov or (bad) jmp fbld xor pop (bad) lods adc fs xor fisubrl out es fistl leaveq rex.WRX test jno hlt (bad) xchg enterq mov (bad) fldt add push push loope adcb movsl js fwait pop sub stos addr32 or callq (bad) imul (bad) xchg mov mov fucomi lock test jbe rex.RXB xchg sub jl in and mov (bad) loop adc pushfq pop popq jae (bad) pop mov mov imul jns pop push fldt and jle (bad) fnstenv es rex.R addr32 jrcxz rex.WR and movabs rex.RXB fildl cmpsl xchg or lock cli add test imul mov (bad) rex.WRX movslq pushfq cmp pop (bad) xchg xchg jl lods fisttpl xor fcmovnu rorb mov jmp (bad) and mov out cli pop sqrtps out jno and mov pushq jle rex.RX (bad) cwtl or mov xchg imul scas jmpq ficoml rex.W rex.R add cmp push (bad) outsb imul (bad) push pushq fisubrl and and rex.WXB (bad) xor (bad) movabs mov (bad) pop xchg in push fwait pop (bad) (bad) jns mov pop pop (bad) mov outsl or f2xm1 or roll adc jnp cmp movabs fucomi adc fcoml shl rex.WRX pop leaveq (bad) xchg (bad) (bad) mov int3 movsl push (bad) add fldenv rex.WXB fwait icebp (bad) pop repz negb fisttpl mov push rex.WR push add repnz xchg (bad) rex.X jnp push outsl movslq xchg jge push cmpsl stos sbb data16 stos ds cmp stos (bad) fxtract (bad) jne jg fcmovnu rex.WB sub (bad) (bad) fdivl cmp mov (bad) push scas outsl imul xchg sub fist (bad) scas adc sub rex.B rex.WRX xchg (bad) pop cmp xlat and adc (bad) rex.WRX sbb adc rex.WRB (bad) repz imul lea out imul push iret pushq xlat fisttpl sub faddl (bad) movsb xor lods (bad) jg sbb mov rex.WR mov (bad) xchg fcmovu cmc je movabs rex.RX rex.WX hlt sti (bad) (bad) rex.X sub pushq test (bad) or sbb (bad) (bad) rex.WRB int sbb ffreep (bad) rex.RXB cmp lea rex.WX mov (bad) pop mov xor test pop cmp loop rex.RX jae rex.WXB fcmovnbe jno (bad) cmp (bad) mov and negb jb rex.RX rex.WRXB je rex.XB mov rex.WRB gs shlb sbb por mov ss cmpsl test mov rex.WR cmp mov fildl sbb jns rex.XB rex.R mov mov jrcxz int (bad) rcll (bad) (bad) fwait (bad) jae xchg pop rex.WRB rex.RXB sub (bad) xchg add sbb rex.W sub xchg fiaddl fildl test stos mov sub and fcomi lret lock cmp rex.RXB mov (bad) addr32 rex.RX cmp es rol imul (bad) rex.B (bad) pop adc mov and rcr movabs jmp movslq (bad) (bad) xchg xor mov adc (bad) and mov add rex.W rex.RXB cmp mov movabs (bad) test pushq rex.B jns in callq andb jne cld imul cli mov out shrb scas push pop pop push rex.WR xor (bad) (bad) loopne pop sarl mov jns jle cmpsb rex.WRX decb mov and sti xchg add fcmovbe fldcw (bad) imul fildl push loopne and rex.WB jmpq pushfq push movabs out xchg sbb rex.WRB or pop sub pop fadds (bad) cmp push stos mov lret cs jo pop rex.RXB xor cltd (bad) mov imul push rex.WRB push cmp jle or cmpsl sub add fistl test (bad) movabs movabs (bad) fist pop imul push rorl sbb movabs std push (bad) fnstenv (bad) (bad) rex.WRX rex.WRB rex.WRXB cwtl mov callq cmc enterq fcmovu add cmp jo mov lods rex.WRXB mov sbb and mov rex.XB fwait cmp test push retq add (bad) ss sbb pop fcoms (bad) jbe fbld clc and (bad) cs (bad) insb sub stc movabs xchg rex.W pop (bad) in sbb or retq lods mov mov (bad) pop rex.WRX in jmp push rex.WXB mov fnsave inc lods (bad) mov fbstp adc adcb rex.W retq rcrb xchg pop cld pop test jle and sub xlat mov pop pcmpeqw adc sbb or (bad) add pushq repnz pop lret lret and test jns pushq lods cmp or gs std cmp retq rcll mov fwait sub stos (bad) add xor xchg or (bad) push insb mov mov and rex.W mov jae (bad) push sub sbb mov jb mov add adc sbb int sbb lret jle cmp add pushq fild movabs movslq ss popfq test movslq out or pop sbb out sub jrcxz mov cli and (bad) movsb lret cmp rex.WRB out pop (bad) rex.W jbe loope rex.RX xchg add shlb outsl xchg test repz jbe jp sub loop xlat loopne (bad) nop js (bad) jnp loopne pop xchg jp jmp in xchg insb test (bad) test rex.WR sbb jno xchg loope cltd rex.WX mov sub mov mov push movabs and cld movsl xlat jle repnz xor fidivrl test jae mov vmovddup jl outsl fwait sahf sar push and cmpsl mov repz push add cmp (bad) jb lret js out (bad) add cmp jge lock pushq data16 ja xor xchg jp in adc mov stos push jp cmpsl ficomp (bad) mov stos (bad) lret and lock push sbb lret sbb jrcxz loop in cwtl or jb mov rex.RB rex.WX cwtl rex.R insl lahf push je push xor cltd jl xchg adc xchg rex.WR loopne xor loope cld rex.WXB (bad) divl sbb loopne cmpsb mov out rex.W lret (bad) jmp pop sub or mov data16 xor sbb mov mov (bad) jmp (bad) mov push pop (bad) or movabs lahf add test fldcw (bad) add (bad) outsb adc cmpsl pop cmp test ja xlat or pushfq rex.XB (bad) stos rex.WX fwait mov repnz fsts cmpsb (bad) repnz roll mov (bad) lock (bad) xor jae add add roll (bad) pop int3 xchg push rex.WRX rex.WXB xchg (bad) jae je jns jle xchg mov (bad) sbb mov ss jbe mov lahf mov xchg fsubrl in jns sbb (bad) rex.WB (bad) or jbe (bad) movabs xor rex.W ds idivl int3 mov fisttp fadd cltd ficomp (bad) adc (bad) std xchg fnsave xchg push (bad) lret sub pop test rcrb lods sbb (bad) fcmovb nop and xor push sbb (bad) (bad) rcrb and adc jbe cmp mov out in and xor lock sti iret int3 mov rex data16 fwait adc sub cmp (bad) (bad) pop cld rex.X (bad) jb in test mov or pop rsqrtps pushq sbb insl (bad) rex.WRX stos outsb xchg or iret (bad) int (bad) (bad) loope pop out callq sarl stos ficompl sbb repz (bad) xor adc shrb loop mov addr32 retq xchg xchg (bad) rex.WB xchg sub jne int cmp rex.RXB adc rex.WX adc iret and popq (bad) (bad) xchg pop (bad) pushq mov mov or xchg rex.XB enterq cmp popfq pop mov lahf jle rex.W mov (bad) jne fistl push or mov rex.WRB rex.RB ds (bad) sub jrcxz (bad) xor mov lahf mov or push loopne mov out (bad) out cwtl rex.B rex.WRB fwait cmp push (bad) adc rex.WB (bad) fcmovnb mov insb jbe hlt sub sbb out push sbb repz push (bad) cmp xor and xlat sub fisubl rex.WB pop add add iret out (bad) jl pop pop xlat rex.WB ftst (bad) (bad) int3 in mov loopne xchg jrcxz imul out fs (bad) (bad) lret rex.W rex.XB (bad) ss xchg in movsl negl push in clc mov add (bad) pop iret xchg lea ficoml xlat movslq movabs insl imul out xchg jbe adc (bad) rex.RB rex.W jo andb fildl insw or (bad) lret fisttpl and fcmovnb iret gs cli sbb (bad) fnstenv mov mov stos (bad) mov leaveq shrb mov xor out lahf repz push icebp or pop pop and retq (bad) movsb push pop pop frstor xor int or rol sub fild or jp pop lea sysenter fcomi mov (bad) sub cli rex.WR jge mov fucomi cld in xor or jge pop loope mov or mov mov psubusw (bad) test lods add (bad) fstpt sbb shlb loop (bad) je fcmovnbe ja rol mov adc (bad) and retq movabs mov and jns push lods xchg pop fwait rorb cmp (bad) cli cld mov cmp xchg add xchg lea xor rex.WRB sti mov fcmovnu xor insb repz push inc stos cmpsl jl out adc movabs nop (bad) movslq rex.WRB (bad) rex.WRXB stos rex.WB fcomi stos jae jno pop or sbb iret adc js lock jae out push cmp out sarl sti jl in rex.RX gs jmp sub or cmp add (bad) negl cltd insl jnp leaveq ds mov mov jae std add fildl xchg xchg mov (bad) (bad) ss xor pop (bad) popfq mov jle ficom sub pushq movabs stos xor sub xchg mov fwait mov mov (bad) leaveq rex.WX fcom movsl fldt jno loope sbb fildl ficomp fldt rex.XB fstpt sbb cmp movabs add push and sti movabs movslq push sbb xchg ficoml jnp xchg ficompl pop jrcxz pop adc lret xlat (bad) sarl mov adc xchg sbb (bad) fcomps xor repnz (bad) mov fmul (bad) (bad) movl xchg (bad) sub movsb fistl movsl cltd (bad) int mov pop callq rol and adcl (bad) pop (bad) gs pop lret (bad) outsb rcll rex.WRXB (bad) std jg fistpl in out mov cmp cmp add movslq cs mov fildl jnp mov addr32 xchg mov rex.WX xor insb and and add and data16 jo sbb fstp sbb xor rex.XB (bad) (bad) sub (bad) cwtl ss (bad) fldt mov retq rex.RXB fisttpl push gs rex.WR mov xchg fwait (bad) out rcrb int3 jle jae sti and push neg hlt scas (bad) xor rol fistl (bad) add lock xchg xlat and cmovne rcrb sti jns push leaveq and test out pop (bad) jae sub (bad) (bad) push movslq sub rex.WRXB mov cmp (bad) sbb sbb ror cmp (bad) nop pop icebp movabs (bad) fisttpll shlb iret mov sbb ss (bad) jae lods hlt pop pushq cld ficompl mov sub xchg cmc adc mov xchg imul push data16 rex.RX pop callq push loope jg pop jae xchg mov fcmovbe (bad) add and push xchg cmp add lret pop xor push nop imul and jmpq (bad) (bad) pushfq int3 (bad) cmpsl push (bad) rex.WRXB gs sub in mov je rex rorl (bad) xchg leaveq (bad) xor icebp or cltd rex.RXB xchg mov xor sub mov mov jnp imul retq mov jns addr32 mov lock sti cld icebp movabs out (bad) fisubl (bad) mov xor fwait cmpsl mov cmp leaveq (bad) add pop loope rcr add mov jp (bad) out (bad) rex.WXB adc (bad) cltd imul (bad) rcrl retq jno sbb (bad) repz cmpsl pop push pop cltd cli push iret pushfq xor rex.WB sbb xor (bad) push fwait mov and push adc add fldcw outsl mov and cld add movsl pushq sub (bad) addr32 rex.WX lods push cli rex.XB adcl push negl test xlat out psubusw stos xlat mov jge cs minps or nop sub stc rex.WRB addr32 sub retq jnp ficom (bad) xor pop outsl mov or loope and clc insl pop loopne sbb movabs cli mov jbe ror xor rex.R rex.R test pop push jg (bad) syscall mov (bad) cld cld test fwait mov sahf stos in outsl push loope or rex.WX movabs or add push or sub jl xchg sbb imul jrcxz out lea (bad) xchg loopne mov fisubl sub jp pop mov int3 jo mov xor mov (bad) sbb rclb jg jb jb cwtl (bad) jle imul add cli rex.WR push scas data16 rex.WRXB sub loop clc xchg fild leaveq pop pushq (bad) ja push imul fcompl push rex.WRX out data16 leaveq fistl adc (bad) push lret mov jns cld jrcxz (bad) (bad) sub ss (bad) adc push hlt sub popq xchg loope push lahf movl pop xchg xor xchg lahf xchg jrcxz adc leaveq rex.WRB sub jp loope iret add pop (bad) sub (bad) (bad) xchg adc adc notl outsb adc add mov (bad) rex.X pop push xchg jo pop rex.X rex.R add sahf cmp sbb popfq fstpt pop xchg push test and movabs (bad) sub lret gs (bad) repz fbstp movsl rcll loopne cmpsl xor (bad) and sub sbb and pop jnp cmp jae rex.RB push (bad) pushq std iret add (bad) xchg test xor movabs cld and lret orl iret adc test rex.RB sbb cmpsl and mov mov mov setbe or mov xchg (bad) (bad) stos xor jrcxz movabs cltd rex.W lcall jl std movabs (bad) pop mov fbstp cmc pushq stc add (bad) popfq adc sbb fld pushq cs (bad) fistp adc rex.WR sbb (bad) sub jp pushw mov (bad) add vaddps repnz divb callq push or rex.WB mov stc (bad) test retq mov push push loopne mov (bad) rex.WRXB (bad) test and (bad) push cmpsb orl loope test fidivl mov bnd jmp iret pop xor cmpsl int3 lahf or (bad) movb xchg lods leaveq ds fwait sbb imul test mov gs rex.XB hlt xor mov (bad) jno adcl fsts int retq mov lock fwait pop test (bad) popfq fimul mov out (bad) pop adc test push int3 pushq rclb xchg loope gs mov (bad) xor cltd stos scas rex.WRX jp pushq jne (bad) lret (bad) push rex.R sub jge jg (bad) mov or adc cli mov rex.WR push sbb sub xlat mov pop push (bad) push iret (bad) fbstp (bad) int3 mov sub fadd cwtl or sbb (bad) mov lods cld sbbl cli (bad) (bad) (bad) loopne (bad) fnstcw pop rex.RB and popfq fisubr in cmpsl movabs sbb (bad) (bad) fbld rcrl hlt and and xor rex.XB cwtl jl fucomi (bad) ss mov stos mov push jp cmpl fisub jmpq (bad) rex.RB rex.WR scas in jbe iret data16 notl pop fiadd jb or (bad) ud2 push rex.XB rex.XB repnz gs enterq (bad) mov push mov mov fisubrl test mov fmuls (bad) pushq xchg pop add cmpsl cwtl repz fwait jb iret fcmovnbe (bad) lahf rex.WRXB xchg mov pop (bad) rex.RX fisttpl (bad) and (bad) loopne mov rex.RB je jnp push int lahf (bad) xlat stc xchg jns mov enterq stos (bad) fldt loope xlat and iret mov adc cmpsl or in cmp mov jbe lock stc subl int3 cmp cltd mov js pop fdivs (bad) lods ficom (bad) scas (bad) fsubr fnstsw leaveq add and add std icebp pop (bad) mull test add (bad) fildl out and or imul loop div lock ja (bad) xchg jne scas (bad) iret sarl jae mulb loope in xchg in adc adc or retq out cmc pushfq int jp (bad) loop cmp mov (bad) xor mov jmp (bad) pop leaveq rex.XB fisttpl pop sbb sbb jnp rex.WX stos jmp jae sahf rex.WB pushfq rorl (bad) (bad) fstpt rex and (bad) add out fcmovnb ljmp lea pop mov gs in sbb out retq mov jl loop ss ficom sbb fndisi(8087 lods rex.R pop sub (bad) nop mov shrl cs cli fcomip (bad) xchg mov pushq fadd in or (bad) adc (bad) mov rex.WXB mov rcrl sti rex.RXB push test (bad) add or fistpl or (bad) mov test jb (bad) mov xchg js repz out mov test retq fsubrs sbb fwait iret mov fildl rex rex.WRX (bad) and rorb or clc cmp lret pop cmp (bad) (bad) js and movslq iret adc xchg rex.XB (bad) mov (bad) pop pop in and xor fistl fcoml cmp (bad) fisttpl lret nop pushq fistl jae loope,pn xchg cmp fsubrl (bad) rex.WX mov xor xchg cmpsb (bad) xchg rex.WR mov mov rex.R fdivrl jle pop cli xor (bad) repnz jne sub add rex.RX or pop shll fdivr shrb (bad) imul rex.R fwait popfq jo (bad) rex.WRX lahf xchg cmpsl (bad) pop jae sbb fistl je sti pop fidivrl jae rex.WR imul (bad) out adc or pop movslq mov mov xlat (bad) adc mov mov jo in mov rex.WB xor fcmovne (bad) mov or pop jrcxz (bad) and pop and (bad) fildl push cmpsb fsts adc mov sbb pushfq mov test jmp mov rex.W retq orl (bad) cmp (bad) mov (bad) fs mov or rex rex.WB rex.WXB fstpt and xchg (bad) add fstpt add xchg pop (bad) (bad) out jle js jle cmp ficomp xchg fnop (bad) sti cmp sub push in fisttpl (bad) int3 retq callq fcmovnb fs rex.WXB (bad) pop stos lea push (bad) icebp (bad) enterq xchg jge push ljmp sbb int3 sub xchg xchg cmp adc cmpxchg8b jmp jo addr32 iret mov (bad) (bad) or and and add push rex.WXB xor rex rcl lcall pop in pushq sbb pop sar and cmp fildl imul fcomi (bad) adcl movsb (bad) mov mov sarl (bad) sti movsl (bad) movsb mov pop sbb jbe test (bad) in rex.WX in clc rex.WB imul (bad) push jle pop sub mov out push add lahf (bad) shr pushq xor cli push jmp (bad) cltd shlb xlat jbe fcoml (bad) mov (bad) add movslq insl mov ror push jns popfq (bad) leaveq movsb scas sub test (bad) lods mov fistl mov pop fldt push jo jae xor int3 rex hlt fldcw addr32 pop mov pop (bad) rex.WR addr32 (bad) in insb xor fistpl (bad) pop es loopne rex.WR mov jle or (bad) outsb jl subl imul cmp add (bad) adc sbb stos pop jo rex.WR jno sbb mov ficom sbb xchg sbb mov rex.WB (bad) sti sub cmp scas test loopne cmp stos xchg popfq jns in pop lret mov lods loop mov (bad) xchg mov scas cmpl jne sub cmpsb or fcmovnbe xorb andl mov mov je fisubl mov mov std rex.WB mov fldt pop cli sbb xor enterq stos xor xor fisttpl popfq push jg adc test (bad) pop stos stos push xchg rex.XB insb adc fisttp (bad) ja cmp addl xor (bad) sarb sahf scas push mov rclb fwait mov (bad) movsb jnp mov and push popfq push (bad) push (bad) ds pop lods rex pop fwait cmp (bad) rex.R cltd xchg jae xchg xor jne pop movsb fcmovnb jnp adc je fxch add cmp mov fsubrp sub rex.WRX and rcll cmp fcomi fcmovbe jmp js pop fistl cli xchg xlat fild test mov in imul rex.WB mov sbb rex.W cmp hlt fstpt movslq sub icebp pushq mov jb pop adc adc push sub push (bad) jnp cmp pushfq (bad) jmpq repz or es (bad) pop mov jnp (bad) and push in or std adc icebp sbb rex.X xor (bad) jge rex.WR mov mov mov fs jns addr32 sub jnp jae enterq pop (bad) sti (bad) rex.RXB and xor fucomi pushfq (bad) mov xchg sbb xchg fisttpl jne flds cwtl rex.WR fldcw movslq jo mov sbb mov jbe test (bad) rex.WRX mov rex.RX cli mov mov (bad) rex.WB jae test xor cmp jmp mov je (bad) callq (bad) nop sahf add decb mov xor mov fistpl roll (bad) adcb pushfq shrb mov movsl jo fistpl nop sarb stos jno sti xchg (bad) push mov fwait cmp pop (bad) adc (bad) mov enterq iret or movsl imulb scas pushfq lret imul loop pop (bad) outsb (bad) fcmovnbe rex.RXB sbb sbb subb and cmp pop rex.RXB lock sbb test retq jns (bad) (bad) push movabs nop fsub add sub (bad) mov xchg rex.XB jae mov rex rex.WR (bad) (bad) pop jbe jg pushq (bad) clc adc movabs jb popfq in jnp ds insl mov rex.W (bad) jmpq cli fildl xchg or pop icebp fildl ja insl sub rex.X sbbl pop movslq cmpsl fistpl (bad) or movslq add rex.RB fcmovnu add (bad) or push xchg je rex.WRB insl (bad) mov pop (bad) push mov (bad) mov fildl mov jg fistl orl rex.WRB cmp xor (bad) fldt jns rex.WRB jo and sbb (bad) (bad) test pushfq (bad) add (bad) xor pop jno pop int cmpsl adc (bad) fbstp (bad) xlat (bad) push push loop lahf addr32 rorb xorl pop push insl (bad) push mov incb retq in (bad) iret push mov sbb rex.RB rex.WRXB cwtl mov sub lret rex.WB pop add sub and (bad) jrcxz rorl cmp xchg mov cmpsb mov fnstenv rex fwait pop enterq pop rex.WX jp pushfq jnp fs in fwait retq mov pop xlat sub (bad) mov in xor adcq lock cli add pushq push ja fmull fistl pop mov pop xor xchg or and jmp mov sbb adc pop xor and callq rcr icebp pushfq push add mov sub out stos pop (bad) (bad) jno xor pop fisub iret mov mov fcmovnbe stc mov rex.WR push int cmp insl push addr32 sub out clc mull sub fidivl (bad) sub stos mov adcl cmc fbld push adc rcrl std test xchg sub rex.WB repz rex.WRB fisub mov sub loope adc add pop gs pop and fnclex rorl adc mov sbb ja jmp cwtl push vshufps sahf (bad) (bad) insb xor fsubrs pop add ds (bad) fs or rex.XB fwait movsb clc pushfq (bad) (bad) mov sbb int enterq (bad) mov cmp (bad) mov popfq cmp xchg fstpt jb add data16 jl sub (bad) (bad) imul movabs (bad) sbb sbb xlat lods adc (bad) test xchg and sbb es push (bad) push lods pop (bad) cmpsl jns push jg imul sahf mov test jl ds repz add rex.WB sbb scas stos pop rcll rex.R ja rex.RX xchg movabs imull rex.XB test sbb loope insb xor mov xor movabs sbb adc int rex.X rex.WR js std enterq fistl xchg sub pop insb jae and outsb cmp or cli rex.RXB rex.W pushq (bad) xchg fistpl cmp (bad) mov pop pushq cmc fnstcw mov mov pop rex.WRXB repz cmp movabs push fldenv pop mov (bad) (bad) cs adc sbb (bad) (bad) pop xchg (bad) sbb push or mov rex.WRB xchg (bad) pop scas (bad) pop jp lret (bad) retq repz cld (bad) pop (bad) cmp mov fwait cmp jmpq enterq (bad) sub xor roll (bad) sti rex.WB adc pop or sub rcrb jle loop cmp jmpq movabs adc mov (bad) int3 (bad) push sub rex.B rex.WX in (bad) (bad) (bad) mov (bad) lods (bad) adc in adc cmp fisubrl shrb test fstpt sub fildl rex.WRX add fisttpl cltd movabs and lahf test (bad) (bad) fstpt and jge je mov adc test rex.WRX (bad) out (bad) pushq or or mov fistpl fnstcw (bad) iret movsb jnp rex.X pushq pop (bad) push test in rex.WRB fldt pushq sbb xor (bad) pop (bad) sub xchg stos (bad) scas jrcxz,pt cmp lock popfq fcmovnbe (bad) test mov scas (bad) fcmovnu push xchg pop mov or and pushq ror cmp or (bad) scas jmp pop xchg repz and cmpsl test rcr sbb (bad) lea je nop scas jrcxz xchg int3 adc adc pop rcr cli adc sarl mov in mov xor cmp (bad) push push js fnsave jo xor mov shl imull stc (bad) rex xlat xchg xor push mov cld movabs (bad) jae lret xchg (bad) rex.RB enterq rex.WB pop and mov (bad) jg sti cmp clc sbbl or movabs (bad) nop ss push rex.RB rolb pop rex.RX cmpsb or out and lea mov add push es fstp adc xchg jb sub xor jg iret mov (bad) scas jns cmpsb mov fcom (bad) incl pop (bad) sub lods rex.WB xor xor sub sbb sub (bad) movl push sbb ffree sbb scas add (bad) pushfq gs rcr mov sub test leaveq cmp sarl fisubl mov pop sbb xlat mov lret (bad) mov (bad) mov jl mov push popfq rex.W rex.WXB push (bad) (bad) mulb or rex.WRXB movslq cs xchg or (bad) xor movslq pop in xchg loope xchg rorb xchg mov pop (bad) (bad) cltd (bad) out xor repz xor (bad) add stos testl mov cltd pushfq (bad) rol cwtl (bad) (bad) push (bad) (bad) (bad) lock and or leaveq jns mov mov mov cmp cmp add (bad) scas pop rolb mov ficompl cmp sti xchg insl jno jnp add out or cli adc faddl rex.XB in callq rex.WB xor push jno push xchg loopne push sub imul outsb pop cmp (bad) stc (bad) mov fnsave and mov stos out in and mov sub pop rex.WRXB int3 (bad) cmp rex pop cld int mov mov (bad) in fildl sbb mov lret loop adc lea (bad) mov (bad) xchg xor and pop out sti fstl and stos jg int3 (bad) imulb pop rex.W movsl jnp popfq test addr32 sub push pop jae movslq sbb pop rex.WRX fsubrl (bad) fcmovnb and data16 push idiv push jns add stos (bad) int3 mov lods js andl hlt or pushq jb rcr pop lods mov (bad) sbb cmp xchg mov fcmovne add xor movabs repnz adc (bad) hlt push in (bad) (bad) fstpt or pop vaddsd rex.RB pop mov fist push adc loope jle add cli scas xchg jne (bad) pop rex.WB mov mov sbb lea (bad) icebp jbe mov rex.RXB add mov adc fdiv or movabs and rcr mov sbb xor (bad) movabs icebp (bad) add imul jno (bad) movabs pushq (bad) jae cli (bad) sbb add jno (bad) mov jmpq outsl mov pop orl es cmc (bad) (bad) mov movsl lods cli test mov add xor cmc add adcl jle (bad) clc (bad) sbb (bad) sub jmpq rex icebp pop cmp rex.WX fistpl push iret xor leaveq (bad) jp outsl (bad) fildl add es rcr pop repnz in or jmpq xchg fwait mov popfq rex.RXB lods pushq nop stc lret (bad) mov xchg push sbb (bad) fstpt mov pop mov mov addr32 jg fidivr mov and xchg fst es (bad) add mov pop movabs notl fndisi(8087 or adc fcmovne adc sbb scas fisttpl rex or (bad) cmp mov fisttpl mov pop rex.X and adc fcmovnb rex.WRXB lock (bad) add (bad) cmp loop adc fildl xor xlat (bad) rex.XB rex.WR fwait adc addr32 pop test insl stos add sbbl (bad) or rex.XB neg sub xchg mull or scas retq cmp cmp mov push or cmp out (bad) (bad) loop mov and pop insb adc rex.RB cltd mov adc rex.WXB loopne rex.WRB rex.RX rex.R jb cmc sub loopne fistp add leaveq and js mov pop rex.WRX repz (bad) adc rex.WB retq scas popfq mov fisttpl mov jns or sub fildl insb xor sub mov (bad) and cs fistl and push and push in push test mov push imul push cmp (bad) in (bad) fsubrp stos adc fcmovbe sub xor push (bad) fsubrl (bad) fldt (bad) in pop (bad) rex.WB sub (bad) xchg pop (bad) cmp push cltd cmc sub pop mov pop cli (bad) outsb jae (bad) or in sub out mov es int3 adc (bad) xor fist fimull out pushq lret lods (bad) pop xchg stc ja repz pop (bad) mov loopne mov rex.WXB sahf push ja in pushfq je stos outsl jno,pt jmp insl push movsl fisubrl (bad) xor mov push sbb and xor mov out sub addr32 jle (bad) mov xchg (bad) std mov rorb (bad) pop jbe (bad) push fldl and mov stos (bad) (bad) pop cmp out int cmpsb (bad) mov and enterq mov out push not fmul clc jnp (bad) and fs out xchg pushq outsb rex.W out in adc adc sub jg mov (bad) (bad) push in retq rcrb and ficompl pop cmpsl xchg (bad) adc push std xor mov jp fwait nop je cld push (bad) insl scas std rcrl sub loopne jp pop cli xchg scas and cld (bad) jb push (bad) xchg sbb pop jl std xlat sbb fstps fwait out lahf sbb repz jg xchg loop pop mov xchg pop mov mov sbb iret stc retq rex.WB jle fcompl rex.XB mov adc callq (bad) ja stos mov (bad) movabs jnp jl mov test movabs (bad) lods sub lret (bad) shrq outsb test in cmpsb xchg sub (bad) and adc es (bad) push or iret push and rex.WR (bad) rex.WR (bad) mov outsl xchg enterq rex.WRXB xchg (bad) out rex.RX sbb adc mov xchg xor lea addr32 hlt mov pop rex.R pop mov stos xchg push or push or sbb mov movabs sub xchg jnp rex.WRX test pop jne imul jnp mov pop sarl (bad) cmp out test add cmp in mov (bad) xor rex.WXB cltd fwait loop hlt pop fsts rcrb cmc add (bad) mov notl movsb lret xor mov or (bad) or fnstcw push xchg mov out cltd jle pop jrcxz out sub rex.RB rex.WB xlat mov fwait add in push cmpsl outsb movsl jp xor (bad) retq (bad) and loopne pop in fildll push mov mov jns (bad) pop (bad) mov push push (bad) lahf or clc fs sbbl xchg jp and jae xchg (bad) mov scas idivl in andl rex.XB push xor fldcw add (bad) rex.WX cmp (bad) rex.R gs je (bad) xchg scas (bad) gs mov (bad) jg adc lret cs push mov loop mov (bad) sub (bad) fistl (bad) mov xor cmp jrcxz cwtl mov sbb (bad) jo leaveq (bad) (bad) sbb rclb stos (bad) jge fildl add fcmovne fild (bad) divl and rex.WXB addl cmpsl fs cmpl fidivrl lods and rex.WR stos pushq jb or jl rorl pop int push add test push sbb test insl fnstenv and cmpsl ficompl imul or cmp shlb mov nop fsubp icebp adc fistl cmp clc ds mov int movabs (bad) adc stos stc mov sbb mov cmp xchg (bad) hlt push cmpsb rex.W insl outsl pop or sbb or adc (bad) adcb jp retq cmc stos cmp push cmp adc fwait (bad) std fstpt pop (bad) mov jle icebp mov fwait cmp jmp sbb sbb (bad) jo (bad) or fldl (bad) cmp rex.WXB cmpsl or fstpt loope mov insl sbb fwait addr32 mov jmpq mov (bad) mov fucomi or nop jmpq movabs rex rex.RX rex.WB xchg test pushq out (bad) imul in in and sti xlat mov rex.RB jno int add out cs pop (bad) insl loopne add fisttpl mov fcmovnb stos cld xchg outsb (bad) (bad) fcmovnu imul (bad) mov rex.WRXB icebp ds rex.RXB lods js mov pop movabs fnstsw pop cmp cmp (bad) jnp fcomi mov xchg (bad) movabs push in (bad) cmp (bad) xchg es sub lods ds sarb (bad) mov cmp loop vpacksswb (bad) rorl mov adc loop push rex.XB fistl retq (bad) pop adc sub movabs orl mov rex.WRXB in movsl push fucomi xchg movabs rex.XB and push jno pop sbb lods movabs fsubr (bad) enterq push (bad) loop test or xor cmp mov pop jns shll adc or lods (bad) cs mov sbb fistl idivl rcrb emms fldt callq outsl pop je (bad) sahf insl fdiv jnp xchg fldt xchg (bad) fwait out fidivl out add (bad) ds cmp scas out (bad) rex.WRB data16 (bad) (bad) sbb sbb rex.WXB (bad) sub or sbb jne push (bad) lea fistl and nop cmc (bad) mov pop mov cmp fisttpl leaveq xchg mov fldcw sbb out movabs adc mov rex.R push movsl lods scas fs vaddpd rex mov rorl (bad) jnp std lock fcmovnu cli roll (bad) (bad) cmp lret lret or push cmp leaveq test lar loopne (bad) movsb mov rex.RB (bad) (bad) adc rcrl xor fistpl xchg rex.W (bad) iret xchg xchg test (bad) rex movabs jno pop cmp (bad) imul int3 (bad) pushq movsl loop movabs rcrl pop test pop cld scas stos fldt ror add out pop jbe leaveq push xchg add jnp cmpsl mov out or cmp mov (bad) cmc and (bad) fmull (bad) pop jbe cwtl (bad) lock xchg mov and push ficoml callq insl mov (bad) sub es icebp clc fs lret pop rex.XB sub and rex.RX (bad) sub cmp adcl int fnstsw xor (bad) gs adc jno add cld mov push in pop adc rex.WRX cmp (bad) std rex.RB addb mov (bad) mov mov or fimull cmp fcmovnu fdivl es rex.WRX shr jo clc adc stos cmp mov fstpt (bad) adc pop lods mov fcoms pop rex.RX push rex.WRX rex.R ficomp fisttpl cmp mov jno lret pop mov and f2xm1 cmp (bad) pop mov jno cwtl xchg stc cmp stos repnz sub sysenter sbb and sar insl retq adcl sub or rex.XB (bad) push rex.W jb fcomi (bad) movabs jne out (bad) gs (bad) fidivl fwait out sub cmp leaveq (bad) test jno adc add xorl push jns (bad) in rex.WRB pop loop rex.RXB xor and add mov movsb pop sub mov fildl sub rex.W int3 pop xor stos mov jnp imul push xchg (bad) lods cmp rex.WX out rex.XB rex.WR stos xchg fninit xchg sbb sahf in decb cmp sub stos lahf lock (bad) cmpsl mov ds add fldt (bad) mov or adc rcrb sub callq xor rex.R push movabs sub mov mov flds pop mov (bad) cwtl push mov pop rex.R xchg test insl mov test and xlat rex.R adc and (bad) adc jmp jne mov (bad) fdivrs push rex.B (bad) pop push xchg (bad) (bad) fwait cltd mov mov movabs sub (bad) mov xchg in lahf (bad) int3 cltd adc adc clc test fcmovne movslq add movabs jb (bad) and xorl jl fucomi test rex.WRXB xlat cmpsl test cmp imul rclb fisttpl (bad) sub lret movabs movsb sbb xor add fcomi adc and pop pop subb pop sub mov (bad) rcr sub in jmpq push or loope cmp mov and cmp (bad) push adc jae pushq sub je repnz jmp movabs gs mov pop xor (bad) adc sbb pop mov sbb mov lret xchg (bad) sbb sbb movslq pop xchg sbb add rex.WRX imul pushq xlat pop sahf rorb enterq sub pop push push cltd or push xchg (bad) sub pop out in repz or lret sbb xchg (bad) fistpl (bad) add or adc lret or mov cmp rex.WR pop pop cs rex.XB loopne movabs insb (bad) fldt (bad) adc pushfq mov sub ja sahf (bad) shrl sti jnp sbb icebp gs rex.RXB js mov (bad) iret (bad) (bad) or jle sbb (bad) pushq mov adc adc mov pop mov or int or add ja cmp (bad) cmp sbb in nop shlb jbe and repnz jp,pn adc mov cmc pop mov mov jno jrcxz xor add fnop movsl icebp fwait xchg cs jl pushq lcall int jne fstl cmpsb cmc push stos adc std out repnz rep (bad) xlat cld xorl mov mov and rex.RB mov movabs fist pushq pushq fwait jns test jle rex.WRB rex.RXB repnz movabs push jnp pop movslq jrcxz (bad) xchg enterq outsb (bad) or push rex.WB jp mov jns cmp (bad) xchg jbe (bad) ficoml jge (bad) cld adc addr32 mov and fildll and push lret rex.XB ds fisub in iret (bad) or adc fild jl rcr or scas xor fmull addr32 (bad) push sbb sbbl lock (bad) rex.RB jb rex.RXB dec (bad) (bad) xchg (bad) iret icebp ss and cltd mov jle (bad) sbb loop push shl fs (bad) or xchg jbe sar mov in sub mov (bad) (bad) xor and cmp rex.WRXB andl fwait movsl add sub add cmp lods (bad) imul in (bad) jb add movabs (bad) movsl (bad) push add xchg mov xchg fsts xchg add dec icebp xchg scas callq pop iret cld jg mov movsl jnp (bad) mov (bad) xor pop fild movl adc pop push mov (bad) enterq cmpl cmpsb sub je push cwtl add jb int and (bad) int xor (bad) (bad) cmp rorl insb repz (bad) popfq lea pop jp cld (bad) fstpl rex.R or negl or or rex.XB int stos mov rorl lret mov movsl push fwait out fisubrl repnz or or jae mov in adc (bad) rex.WRX add or repz out jae addr32 callq sub (bad) xchg pushfq (bad) scas jb (bad) jrcxz (bad) int3 ds cmp stos pop rolb jrcxz pop rex.WB add rex.RXB out rex.WRX iret mov and fadds jrcxz sub sarl mov (bad) enterq sub cld fadds cmp callq divb jb and shll mov rex.R cs addr32 incl lret scas jnp fcmovu (bad) or fwait lock rex.WB outsb rex.WXB mov jne loope movsl (bad) mov ss push lret int repnz sbb fsub (bad) out lahf fs cmp rex.WR jmp int andb cmp xor mov pushq (bad) in mov (bad) ds (bad) rex.WRB rex.RB rex.B jmpq rcl rex.B scas fisttp mov (bad) repnz jnp mov je mov jle movsb and shlb sub adc addl mov rcrb (bad) jae in adc mov stos mov (bad) sbb cmp add movslq sbb jno push (bad) rcr mov mov movabs rex.WRXB mov fisttpl cwtl gs (bad) (bad) jb mov lcall and add xchg int3 adc mov sbb fstp rex.WRX rex.RXB push neg callq mov fstpt pushfq sbb (bad) jbe outsl adc fistpl sub or or (bad) in rolb add mov (bad) retq fist pushq (bad) cld pop movabs mov (bad) mov outsl (bad) ja adc jbe push cwtl ficomp rex.RXB fildl stos addr32 jo (bad) xor cli sub lret es imul add cmpsb adc xchg (bad) rex.XB fs mov mov mov jo and idivb mov adc adc push out fbstp stc xchg jg (bad) jnp rex.B idiv retq lods addr32 cs pop xor xor rex.WXB int3 enterq callq xor movslq pop movabs cmp jnp or pop int and sub add mov jnp mov fcmovnu (bad) rex.WX (bad) and sbb (bad) (bad) mov push mov movabs fcoms cmp and rex fcmovnb loop xchg rex.W imul add test wrmsr mov jnp in sbb fucomi out rex rex.R push push sahf fisttpl sarl mov imulb rcrb fildl (bad) sbb xchg fldt movabs (bad) pushfq negb pop iret push xchg rex.RXB cltd fcmovnbe pop cmp nop test pop test mov leaveq movabs (bad) mov xchg (bad) rex.WB retq mov adc insl push cmp fcoms fistl xorl retq jae loope mov sbbb (bad) sub rex.XB rex.X xor sti pop push int xor xor lret sub (bad) stc insb fidivrl rex.B xchg hlt rex.WR test out sub fs stos rex mov mov jnp shl insb mov mov fcomp (bad) and imul (bad) mov fmul mov cmp mov in cmp rex.WRX ja popfq rex.WXB mov (bad) (bad) lods adc cltd push leaveq jl (bad) (bad) out ja sbb (bad) jge in cmp xor sub out test out (bad) outsl cmp (bad) mov xchg (bad) cmpsb pop mov pop rcrb jnp jrcxz mov (bad) cmp rex.XB pop mov sbb mov callq (bad) adc cmp rex.RX lock (bad) lcall push adc mov and jb nop (bad) (bad) incl lret fistp rex.WRB xchg jmpq adc js jnp loope rex.WRXB ficomp push rex.RB add imul jmp sbb sahf fwait sub sbb rex.WRB add sbb (bad) fcmovnb rex.WRXB (bad) mov fimul fildl add (bad) cli outsb jmpq addr32 cmp or (bad) jrcxz (bad) cmpsl pushfq shll (bad) mov ss mov jae rex.WB rex.X sbb fnstsw jnp xchg callq or jmp ficoml cld mov gs lods pop icebp sbb jle and adc rex.WRXB rex.WRXB mov mov fdivl and xchg pop mov adc adc push repnz mov movabs mov js mov push cmp frstpm(287 mov (bad) jle int sub mov cmp jo lea cmp fldt add adc rex mov fisttpl int3 sbb cs popq pop jnp (bad) fcmovu pushfq mov loope ss or rex.W xor xchg loop lahf and hlt fstpt orb imul pop shlb or cmp sub incl cmp mov ds sbb stc adc rex.WR enterq lods (bad) xchg ds jg sub or pop (bad) (bad) pop sbb mov jp push insl js in mov movabs jne loop adc jle sbb (bad) movabs push lret add insl movsl pushq push (bad) xorl fcmovne (bad) mov lahf rex.WXB or (bad) mov hlt fdivrs cmp mov pushq sub clc (bad) fstpt mov jg (bad) and xor (bad) add cwtl cmp int cmp (bad) mov outsb xchg cs pop orl mov (bad) lock cwtl test js movabs sbb pop rex.X insb jl jae enterq mov mov in mov (bad) push and xor fwait loop (bad) adc cmc mov or (bad) mov mov sub push adc sbb adc sub cmp movslq (bad) (bad) and cmp push pop sub stc out lods push outsl stos (bad) xor adc jrcxz rex.XB xchg fildl bnd xor insb fistpl pushfq xor clc (bad) rex.R out scas fistl (bad) rex.W mov hlt (bad) fiaddl fnstsw cli xor clc retq nop mov scas (bad) xchg pop jns (bad) sub pop gs cmp sbb fdivrl rex.B xchg (bad) (bad) mov imul pop jl (bad) cs fstpt sub mov pop xchg fistpl pushq repnz jge callq rex.B xchg (bad) (bad) cwtl (bad) push fstpt cs fistpl and bnd scas (bad) push cmp stos (bad) add cmpsb enterq jrcxz shrb jnp cmp jp add in ja push data16 jb cmp xchg cli fcmovnu add (bad) fcoms (bad) sbb xor cs add sbb adc pushq xchg jl (bad) mov fildl or fisttpl xchg rex.WR rex (bad) cmp (bad) pop pushq (bad) (bad) sbb jge scas (bad) mov movabs sahf (bad) mov (bad) and fildl (bad) mov movslq pop (bad) jmp add movsl mov jo (bad) sbb jno fstpt leaveq add (bad) adc and or test fstpt cwtl jmpq (bad) retq fnop fwait adc pop mov or mov insl fildl mov adc fucomi sbb xchg rcr mov mov jae mov adc and imul mov fwait cmp (bad) lods rex.RXB jnp sub pop rex.WRXB popfq insb fcomi and outsb push movsl (bad) fs xchg or push rex.RXB repnz cmc mov push adc mov fimull fmuls and xchg (bad) (bad) stos xchg and sbb jnp (bad) je lret lods (bad) insb out mov (bad) jg,pt lods mov rex.RX iret pop sub lret jns sbb callq lods (bad) retq fistl rex.WRB outsb (bad) pop lock mov cmp insl and (bad) push mov movabs adcl and out lods lods jge mov push xchg jmpq shl sub pop jbe sub mov enterq movslq fidivr retq cld cli incl sub js movabs sub stos add cmp sub xchg jg (bad) (bad) movsb jp lock or sbb push popfq pop rex.XB jge pop rolb rex.RB fwait cmp rex.W js fistl iret mov leaveq xchg add sub mov addl and sbb pop rex.WRXB jmp movslq callq mov xlat pop mov loopne jnp (bad) mov push (bad) rex.WRXB xchg xchg pop fnop movabs (bad) fistpl add and retq jl jns lret sub (bad) stc movabs movslq jno fstpt ss nop pop stos jnp repz rex.WX mov (bad) add in rex.WR rex.XB (bad) hlt jnp test pop mov fwait pop pushfq stos (bad) fldt add (bad) (bad) inc or addps xor push rex.XB ja repz int3 jrcxz (bad) movslq (bad) (bad) sbb push cmpsb (bad) fwait pop (bad) leaveq enterq mov pop rex.XB rex.WRXB xchg xorb rex.B retq int3 mov mov out add xor xchg (bad) popfq mov rcr adc retq push fldcw rolb (bad) sti mov (bad) xchg cmp (bad) outsl push cmp hlt icebp (bad) cmpsb sahf (bad) (bad) jbe and cmp xchg test hlt incb push adc in addr32 xchg popfq retq pop addl int fisubl out pop leaveq push pop fstpt sbb scas (bad) rex fisttpl mov (bad) cmp add or (bad) mov rex.X xchg movabs pushq pop pushfq (bad) mulb (bad) (bad) mov (bad) iret rolb jnp (bad) cmc pop (bad) (bad) sbb mov sbb pop cmpl or rex.WRX (bad) mov cli rex.WR js sahf (bad) rolb (bad) lock leaveq mov adc rex.WB (bad) jae iret (bad) movabs mov fwait adc hlt and lea jnp leaveq (bad) sub addr32 mov or out idivb (bad) in lods (bad) mov jo out xchg mov fcmovne jns movabs jmpq (bad) or insl sti pop and outsl and movsl mov cltd mov fildl out cmp xor lret nopl repnz add rex.RX jne fistl adc notb pop lods jrcxz cmp mov fs retq ss lock (bad) xor imul pop rcrb fwait cmp jnp loope movl (bad) xor cld adc fucomi sbb mov fnsetpm(287 push insl (bad) mov rex.RXB sbb xor test mov or in lahf or std repz (bad) cmp fildl xchg mov mov add (bad) adc std insl (bad) cmp push xchg (bad) (bad) mov (bad) fistl rex.WB sbb pop cltd rorl pop fsts push in fild lock pop fstl rex.WB (bad) fndisi(8087 jns jge add lret cs sti stos fildl div jno push pop rex.RXB lret jbe (bad) (bad) or and in test rex.WRX mov (bad) fldt (bad) insl enterq fcomps mov push lret rol sbb rex sbb cmp jle jge xchg jbe imul push rex.RX rex.WR (bad) rex.W adc pop icebp xchg xor sbb pop faddl xchg xchg clc pop test xchg (bad) mov stos sbb sub xchg (bad) jnp jnp faddl movabs mov retq xchg fmul (bad) mov rex.WRB rex.WB lahf cmp mov pop jae rex.WRXB pop cld jrcxz cmp fdiv rex.WX sub cmp (bad) fnstenv rex.X rcrl scas loopne jb jbe (bad) jp jrcxz cs (bad) (bad) pop adc cmpsb push (bad) add jno push sbb (bad) pop and outsl mov or and mov fmull sub (bad) cld insl cmpsb addr32 rol xchg jo jae movabs repnz (bad) (bad) pushfq fdivrl fdivrs pop (bad) imul test sub test gs (bad) fdivs (bad) push cwtl (bad) mov loop int rex.WB push pushq movabs stos (bad) and pop xor (bad) sti push push fsts fwait rex.X test cmp icebp xor out flds sub test or mov rex.WB lock rex.WB ja (bad) (bad) imull fwait jmp lock fistl jl sbb (bad) push add movsl lods xchg (bad) movabs shrl rex.RX fs mov mov and cltd sub leaveq rorb push (bad) pop mov rex.RX data16 xor sbb or sbb fwait rol (bad) rex.W pop mov pushq lret mov retq insb sbb rex.RXB loope ja loopne (bad) out pop fld fwait (bad) (bad) mov add (bad) jb cmp or (bad) insb fistpl mov jmp es (bad) fstp mov in movabs fistpl rcrl retq rex.WRXB xchg rex.RXB pushq out out divb movabs (bad) and mov rex.B ss loop insb xor fisttpl (bad) adc icebp cmp enterq in out sub add xchg cmpsl movslq mov rex.B mov fsubrs add and lahf mov retq adc pop jo fiadd push pop (bad) jle cmc lods sbb jmp (bad) mov rorl test (bad) sbb rex.WR mov ja leaveq icebp pushfq push shr cmp fistpl or out fucomip (bad) (bad) mov imul out imul pop rex.WB adc cmp out pop sbbl rex.WRB lods cmp stos fistpl rex.RXB sbb es sub enterq adc mov iret and or or rex.WRXB cmp jnp fucom and stos fidivl xorl add mov cmp add and mov lret (bad) iret xchg rex.WB pop stc rex.WRB test imul cmp pop int3 jnp (bad) fsubrp enterq nop cld int int mov jge divb (bad) (bad) lods callq xor rex.XB fisttpl jg pop jne cwtl gs push sti callq xchg xchg pop sub add cmpsl mov addr32 callq out sbb add pop (bad) fldt mov in or and or fldt add retq or rex.R or mov rex.WRB lock fsubr xchg shrb sbb (bad) fidiv (bad) jg out (bad) movsl rex.WR jle or jnp (bad) pop (bad) xor loope ss sub imul (bad) mov repnz add pop push (bad) movslq sbb fwait mov pop pop push (bad) mov clc (bad) cmp fwait mov (bad) sub xor mov push pushfq test xorb iret vhaddps jbe mov jrcxz cwtl (bad) (bad) sub jl push bnd fisubr and xor int3 rcr (bad) (bad) xor jbe jb cmp or mov xor stos pop or repnz fisttpl mov test push es fisttpl push and sub movslq xor xchg fcmovu (bad) xchg stos outsl movsl je pop or adc imulb fistl loopne icebp and movabs push fsts and cmpsb lret (bad) ss imul jle stos rcr mov rex.WB rex.B lret int in jge (bad) add adc mov bnd rex.WRXB clc iret push and mov (bad) std icebp cld in jno enterq mov jnp (bad) callq rol xchg addr32 sti fldenv (bad) xchg jnp repnz rcr xchg (bad) sbb pop and cmp jl xchg cmp pop fwait cwtl mov mov and (bad) mov adc leaveq add movabs xchg out sahf push rclb rex.WRXB push xor ljmp sub insb cmpsl xchg orl stc stos add push push stos jo loope mov ja shrb add jge cmp pop mov lock rex.XB stos adc (bad) jge cmpb mov sbb xchg iret cltd adcl int sub test mov mov lahf mov and fsts fldt cmpsb jns movabs enterq (bad) rex.WR lods mov pop mov mov or rcr or adc cmpsb cli lods (bad) test mov push and (bad) (bad) sahf add (bad) rex.X adc sar rcrb and mov pop mov fwait jle imul stos fcmovnbe shll jp pop movl jrcxz adc (bad) fwait cmp loop xor addl cltd jmpq sti lods retq fldt scas adc mov xchg push fisttpl mov data16 adc jg (bad) mov adc cs mov rex.WX (bad) int fstpt cwtl and jg pop (bad) jb fistl xchg xchg mov enterq xor lret sbb and add fs divl mov mov mov pop rex.WX lahf test jmp mov repnz lods lret rex.R retq push adc stos fwait test retq mov es gs jae (bad) xor mov (bad) sub fldt mov fucomi test addr32 lock fsubs jb jg pop (bad) pushq out adc push mulps push icebp and lahf fxam fstpt rex.B adc xor add jns rex.WXB (bad) mov (bad) (bad) pop fiadd cmpsb pushq fcmovnbe sbb push push or (bad) pop sub rex jae cmpsb out (bad) insl int fstps sarl fistpl hlt loop stc mov mov nop pop loop outsb scas stos sahf (bad) mov sbb clc jg ffree mov sbb test ja rex.WRX lods xchg imul (bad) rex.B frstor test jp fwait push adc fstpt jmp out stos mov (bad) cmc popfq out mov negl fstpt out out fistpl rex (bad) mov (bad) pop or movabs stos push loop outsb jo stos fcmovne pop (bad) xor rex.WX rex.WXB out imul negb rex.WRB rex.B rex.WX pop lret ud2 (bad) data16 (bad) fidiv cld clc (bad) xchg fcmovnu fmuls add adc clc xor addl out sbb mov pushq jb fwait jae (bad) cmpsb xchg fldt (bad) adc movabs and test (bad) ds lret in push xchg (bad) jns mov cmp (bad) lret mov (bad) (bad) stos cli nop mov je imul jnp rex.W rex.B xchg xlat movslq adc sub (bad) sbb xor sub (bad) pop pop jb mov cltd stos pop push fidivr retq fwait or addr32 lods callq out sbb adc cli mov in rex.R jge (bad) clc mov (bad) mov adc cli sbb jle in jbe sub xor test or mov rex.RX cmpsl sti add bndldx sub jmpq rex.WR ss mov mov iret sbb loop fistl rex.RXB (bad) mov sbb sub (bad) cmp push int3 jb jrcxz pop or sub imul (bad) push mov movsl fstpt (bad) or add (bad) in ficompl in movabs addr32 nop lea jmpq pop (bad) sbbb and test fld sub js (bad) jnp pushq or fildl mov push fiaddl in jnp icebp cli iret repz cmp pop rex.WRB (bad) mov (bad) jrcxz rex.WR imul mov (bad) in rex.WX mov jrcxz push pushq fcmovnu xor fldt add sub sub sub (bad) (bad) gs xchg (bad) mov mov int3 mov enterq pop sti push out add add cli mov or mov or pop fistpl movabs notl (bad) (bad) cmp (bad) jge jb mov movsl jnp cli cmp idivl clc cs fistl sub out popfq cmpsb fcmovne xchg mov es pushq sti (bad) mov add (bad) mov cmp cmp lods push (bad) pop mov or loope (bad) sahf (bad) xor cmp adc out cmp mov mov js jns pop adc lret cmp loop mov mov (bad) mov (bad) test xchg (bad) outsl lret fiaddl imul (bad) leaveq (bad) (bad) (bad) (bad) repz cmp pop test loop mov fcoms rex.RB rcr shrb loop xor retq cltd out (bad) pop push xor jmp lock cmp (bad) or and (bad) xor loope cltd insb or fbstp fcoms (bad) rcrb mov mov in movsb adc add mov push movabs insl jmpq sti fistpl or or jg pop ds sub pcmpeqd (bad) pop xchg mov sub leaveq gs rex.RXB movabs (bad) sbb (bad) and es pop cmp ja rex.X rex.R (bad) adc cmp fstl (bad) and enterq rex.X pop rex.R (bad) jrcxz (bad) xor mov pop jp cwtl or stos mov pushfq push pop retq rex.WRX movabs movabs cmp cs add (bad) data16 and lea mov mov xor jrcxz pop fsubrs xor mov add fstl cmpsl int3 mov insb (bad) push mov insb nop rex.X mov sarb (bad) jl rex.WR mov fld add test in fwait sbb int3 lahf js in mov jg or add (bad) lret pushfq (bad) mov frstor sbb pop and test loop cmp test out cwtl mov repz hlt (bad) mov mov movabs shrb jl sub (bad) sub cld popfq jae (bad) (bad) xorb stc loope jmpq xchg push (bad) rex.WX pop pop add sub mov and (bad) cltd fmull (bad) pop stos mov add addr32 jrcxz (bad) mov lock adc test movabs rclb cltd insl mov jno mov fistpl lret jp sti sbbl cmp in retq adc (bad) jnp add insb cmp rex.RXB in loop divl mov fldt xlat (bad) (bad) fidiv nop stos lock jge fidivl rex.X xor xchg pushfq mul int3 popfq push (bad) and (bad) cmp std pop xor push stos in jnp js xchg pop mov movabs (bad) xor jge fildl insl cmpsb (bad) leaveq push rex.RB fucomi (bad) sbb jg movabs ss mov adc rex.XB ss jae callq sub repz rex.WB sub fsubrl sbb es adc in mov mov mov pop lahf mov and rex.X and mov shrl mov or push xchg mov and loopne (bad) jp sarl sbb mov std enterq sti (bad) (bad) out adc push sti (bad) in jg mov or lods (bad) mov divps insb mov test xor stos (bad) (bad) fnstcw rcr ja iret data16 rex.RXB jrcxz scas cmpsl stc (bad) (bad) (bad) lods mov (bad) jo rex.WR jl mov fcom sbb fldt pushfq cmp (bad) mov fucom (bad) out out sbb cwtl (bad) fsubs movsl rorb (bad) imul test pop je lock adc (bad) (bad) cmp icebp retq cmp jno test stos adcq sub adc (bad) sti hlt in mov or jnp fcoms clc lods add js (bad) cmp fs mov (bad) xor jp rex.XB mov (bad) cwtl (bad) (bad) (bad) (bad) sti lock sbb insl mov sub jo lods fs xor insb loope sub out (bad) mov jg hlt cmp retq push fldt subb push jns lahf cwtd mov test (bad) sahf rex.WRXB fs scas cmpsb out gs rcll jmp xchg (bad) rcrb es movslq stc mov rex.WXB fsts adc mov sbb sti pushq leaveq lea pop push repz (bad) jae lock xor fcmovnb (bad) pop out out push jp sbb adc mov rex.WR stos out cmp adc (bad) cmp push pop xchg movabs jp rex.RB stos pop adc addr32 cmpsb rex.WRB std xchg jge xchg sbb sub cmpsb jp (bad) mov jns fildl adc cmp and cmp retq push test xor ljmp cwtl rex.R int3 pop cmpsl notb (bad) lods callq movabs sub (bad) sub negl rex.R rol js leaveq cmc in fwait cmpsl xor (bad) (bad) out lods sahf sub pop or fucom movslq shrl gs iretw pop cmp fs jle cwtl leaveq xchg retq rex.WRB pop mov xchg imul rex.X imul pop mov mov movslq add mov xchg popfq out int (bad) (bad) test mov (bad) jnp mov and xlat pop or imul out xchg (bad) pop out xchg flds pop rex.WX addr32 xchg int3 (bad) addr32 pop mov (bad) jne ficompl jno (bad) lods stos scas jbe xchg add loop pop in cmpsl sub gs out rclb mov adc xchg mov retq sub rex.W rex fstps rex.WR or movslq stc rex cmp (bad) (bad) xchg stc xchg cmc mov negb js cmp (bad) lret add push adc fadds data16 fcmovb out add jrcxz orb xlat mov sub stos mov retq mov mov leaveq add js xor fbstp push js iret retq jb mov mov sahf rex.R and rex.WR (bad) (bad) notb lea (bad) pop (bad) xlat mov gs jae iret cmp movabs xchg mov xor cmc xor mov (bad) mov retq mov sub in or push int mov rex.WRB and pop (bad) mov jnp or lock loop mov mov (bad) stos (bad) div pop fwait pushq mov or fstp push rex.B in add fstpl imul in shlb xor (bad) (bad) sbb jmp test push std jmpq sbb mov cs movslq push rcrl xchg insl testb (bad) imul data16 ss outsl ss (bad) pop fimull fwait mov xchg fist popfq sbb retq sti cmp xchg (bad) leaveq pushfq jrcxz,pt cld (bad) jle pop (bad) (bad) sbb jle enterq sub rex.WXB mov scas pop xchg lret add mov add and (bad) cwtl movabs fist pop mov lret (bad) fsubr test pop mov cmp lods jp xchg loope pop push rex.WRX rex.XB loopne jmpq icebp fs pushq (bad) (bad) incb push mov pop fldt rex.WRB fsubrs mov fisubl (bad) jge xlat rex test fldt rex.WXB rex.XB fmuls pop retq push sub mov test (bad) movsl pop pop leaveq push mov out cwtl (bad) rex.W cmp mov std mov test lods adc mov push xor adc scas in fldt repnz jmp jrcxz (bad) out pop es out (bad) in mov imul fdiv (bad) testb movsb cmp fisttp jns sbb pop mov movl mov mov fstpt clc cmpsl jl andl lahf push rex.XB stos fistpl jmp (bad) xor (bad) fstpl imul loope xor rex.WRX cli add and or int3 and pop (bad) (bad) mov sahf cmpsl ds fildl cmc add jo xchg fcomi mov sub lods fildl callq (bad) cwtl insb (bad) mov jnp fistl or (bad) rex.WX (bad) pop sbb adc cmp pop rex.B fcmovnbe test push movabs push sahf insl in stc pop rcrb shrb rorl (bad) xchg (bad) jp (bad) fcomi movabs movabs andl in add pop mov xor ror lock rex.WX in fistl rex.B push jmpq push push (bad) rex.WB cmpsl add xor pop rex.WRB add push cmpsl (bad) fdivl sub sbb mov jmpq add pushq popq xor (bad) pushq push out rcrl stos (bad) add (bad) lret (bad) sub add callq test (bad) push cmp fwait mov pop cs xchg mov sahf pushq in and sub push push lods out (bad) lret enterq jg mov sarl frstor retq cmpsl pushfq push sahf out leaveq push movabs xchg rex.W repnz hlt in cmpsb sbb jo sbb rex.R or in fstpt mov add cmp (bad) js out loope rex.RB (bad) test lods cmp in sub rex.RX mov loop or fiaddl (bad) mov pop rex.XB and xor xor add movabs or in rex.XB movslq sub sti sbb js rex.R imul rcll jne nop mov adc fisttp clc nop add xchg cli and rex.WRB fistpl (bad) cwtl xchg retq and iret cmp pop (bad) mov stos adc sub pop (bad) enterq retq loopne movsl push rex.WRB xor jle xchg (bad) pushfq iret pop xlat xchg xchg xchg (bad) jbe sbb or movabs add scas (bad) mov or add rex.XB mov sub xchg loopne nop jnp rex.WRXB mov pushq mov test leaveq lahf (bad) rclb sbb mov repnz or movabs push in push (bad) jne repnz (bad) (bad) jnp mov shlb (bad) out add mov addr32 pop rex.WB mov stos mov sbb adc (bad) mov (bad) clc rex.XB retq rex.WR (bad) movb insb test mov add stos (bad) rex.WRXB imul (bad) xchg add lahf hlt jns jmp callq fistp imul pushfq (bad) add sub clc (bad) jge jno fisttpl xor jmp mov insb pushq mov jp test rex.R stos (bad) imul cmpsb fcmovbe in fidivr (bad) jmp sbbl addr32 fbstp push (bad) fiaddl (bad) mov cmp fucomi int3 xchg movabs rex.RX (bad) sbb test xchg (bad) movabs adc rcr fnstsw mov sti cmpsl fisttpl lock (bad) sub addb fistl retq pop (bad) push repnz xor cs fsubrs push adc iret push jmp imul mov cmp and mov in xchg scas int jae movslq sahf sub push pop or scas fstpt pushq mov pop jle pop rex jg fistpl out add mov mov movsb sub mov (bad) repz sbb jge jmpq push jmp mov ja pushfq pop mov std adc rcll mov mov movslq rex.WRX lods loopne sarb ja rex.XB rorb sub sarl rex.WXB lock incl js cmp xlat je mov movabs repnz pop rolb sbb sbbl mov (bad) adc mov cmc (bad) mov pushq in andb std push push jno (bad) popfq shrl rex.RB sub (bad) mov incl int3 jge push or stos retq negl sub sub rex.WX sbb mov (bad) adc sub loope push xchg lret add mov jb loopne pop gs or push out pushq cmp mov xor or iret shlb rex.WB mov pop rex.WB mov mov mov fdivr jnp pop jrcxz jns cmp pop mov loopne jg mov fdivrs out xchg sbb mov xchg (bad) insb xchg jnp push push in (bad) loop lea andl pop jmp in jo pop sbb fwait (bad) loope push xchg fcompl jge out mov (bad) or (bad) jno pop ja (bad) (bad) mov add jbe int3 divl movabs mov sbb out xchg rex.WB lock cltd fcmovnb sbb (bad) outsl hlt pop imul (bad) lods rex.WX mov pop sub gs (bad) sbb mov test rex.WXB mov pop and jge mov (bad) (bad) jno (bad) (bad) movslq (bad) lods xchg rex.XB gs adc (bad) pop mov sbb sbb (bad) push (bad) pop xor jmp xchg pop adc fisttpl mov (bad) xchg jno mov rex fninit push pushfq jg enterq pop outsb rex.WX fildll test fistl fisubl xor imulb callq mov pop rex.X sbb lock xor and int (bad) (bad) mov (bad) (bad) push or icebp mov add mulb fcmovnb and int3 loopne cmp (bad) jmp push fsubl jp lret in (bad) (bad) rcr and movslq lret rex.WB rex.B pop add rex.RX xchg movabs js jns clc (bad) xor rcl lods adc mov (bad) or fiadd mov faddl push cmp cli test out and ficompl scas mov pop loope pop xor add mov jae (bad) push rex.WXB (bad) pop movabs sub lea sub xor rex.RB jnp loopne jo fcmovnbe idivb jmpq hlt pushq (bad) xchg popq insb xchg fwait lea (bad) push xlat sbbb fwait movsl push adc in xchg out and ds mov jnp add jo sbb mov fistp mov sub or add ss jp stos imul (bad) rex.WXB in mov push mov fdivl fisubrl pop and jle push push loopne cltd add (bad) and hlt pop (bad) (bad) or icebp js rex.W sub jo (bad) and (bad) rex.WB (bad) adc fidivrl (bad) sbb out jno adc or or sub (bad) pop stos jo test mov pop jno rex.W push pop pop scas xchg (bad) (bad) iret shrb rex.WRB jae add sbb (bad) iret and xor cld mov clc sbb push cltd subb pop test pushq rclb jae sbb rex.WXB fsubrl or (bad) (bad) loop push cmp rex.RB (bad) data16 xchg xchg push pop (bad) jp mov rex.WRX in (bad) cmp (bad) jle adc ds sti mov mov fsub sub jno (bad) mov xchg jnp out stos (bad) and stos loopne push sbb cmp mov enterq loopne movabs ja push push or fisubl jmp sub (bad) (bad) push hlt notb fidivrl stc rcr (bad) cmc (bad) xchg data16 xchg add cld outsb movsl rcr xchg and iret sub push xchg neg stos retq out sub rex.RB outsb in mov jnp sub in je sub movslq jle add inc push push rex.WRX in push push rex.WR imul movabs (bad) pop xchg out xchg loope jmp (bad) mov sub js stos rex.XB lahf (bad) outsb xlat adc movabs (bad) iret pop insb shrb (bad) test lahf jge movabs repz adc sbb (bad) sarb fs mov xchg rex.WRXB rex.RXB roll rex.RXB or repnz jg or imul mov pmulhuw subb or nop sbb push cld fs ja (bad) rex.WX pushq xchg insl pop mov lock lret fstpl icebp lods xchg (bad) push int std std mov jns sbb callq rol pop imul rex.RB std or add in retq fsubr mov xor jno jns jns jl mov rex.RXB mov movsb sub sbb jnp sbb scas ss out cmc js (bad) scas pop xchg rex.W mov mov mov xchg fcmovbe xor shlb xchg sbb sarl test (bad) push (bad) xchg mov std mov leaveq enterw js rolb gs mov rex.WRB fwait (bad) movabs cltd mov add xchg pop (bad) movabs (bad) mov lock int3 cmp fmull mov adc and xor movabs cmp adc (bad) xchg roll cmp (bad) fcompl movslq out or je or pop scas fnstsw ds movslq rex.WX rcr (bad) pop and (bad) mov mov mov sbbl insb or and rex.R mov scas (bad) cmpsb push (bad) (bad) mov fsubrp fwait and cmpsb xor rex.WXB es pushq fs pop in je mov jge (bad) pop int rex.WRX movslq lret (bad) jnp icebp fcmovnbe push test rex.WXB add (bad) test (bad) mov cwtl pop retq xchg rex.WRXB ja xlat fstpt fadds lea jg out test movslq pop and jle fild mov lods loope (bad) lret pushq (bad) rex.WRB (bad) mov cmp pop mov sub (bad) sbb rcrb rex.WRXB insl push (bad) sbb fcomi push pop jmpq fisttpl sbb cmp std out jb popfq lock (bad) jno repnz test rex.WRX (bad) rex.W rcl (bad) pop mov imul and mov insl movabs fldt mov xorl pop ss mov pushfq jae mov fildl jne fldt (bad) jg and (bad) movabs adc mov pop scas xor jl fadds enterq loopne adc in lahf stos push cmp rcrb pushq (bad) jbe pop sbb and (bad) rep clc (bad) xor loope jo jnp or fildl adc cmp pop (bad) and add scas fnop mov rcr repnz (bad) sub adc mov in mov addr32 push (bad) std xchg callq (bad) movabs fisubrl or adc xor fwait adc gs push out rex.WRXB or clc sbb lret sub lret pop add movsb cmp fistl mov mov push sub imul js,pt (bad) data16 push sbb (bad) push callq xor adc or cmp (bad) and movsb jns jrcxz xor (bad) andl mov mov fildl movsb (bad) pop mov add xor fildl push sbb pop jg rex or (bad) mov xchg xchg fcomi dec and insl xchg jl push enterq xchg out sub xchg fimull sbb or rex.WR rex.WRX jo mov rex.RX mov (bad) (bad) jl pop stc pop or (bad) sub out xorb adc fldcw in xlat hlt (bad) adc stos (bad) movsb mov jne js (bad) push jno fcmovnu push fnsave (bad) adc mov adc loopne sbb mov push or addr32 cmpsl movabs xchg test (bad) mov enterq (bad) jnp jno (bad) fisttpl xchg fcmovnb add movabs cltd movabs rex loop ds lret xchg rex.WRX mov rex.X fisttp sbb (bad) jmpq in sahf add mov push (bad) mov xor pop leaveq rcrl xchg lea xchg pop lods push test (bad) jrcxz jnp lret outsl (bad) mov pop (bad) (bad) out stc sbb fcmovnb fisubrl movabs (bad) (bad) mov rcrl sub pop lods cmpsb (bad) cmp xchg imul sbb rex.WR mov jo jbe repnz mov xchg je sub (bad) (bad) jbe out sbb mov movabs jmpq imul in sbbb sbb (bad) loopne pushfq sub (bad) rex stos fisubr (bad) (bad) in xchg pop es jae xchg mov (bad) (bad) pop add mov xchg pop (bad) (bad) outsb cmp xchg pop xchg mov and mov fcmovne mov rcl xchg mov rex.WRXB je andl jg lods adc fcmovnbe cmp lret stos imul movslq addr32 xchg loop scas loopne movabs movsl xor gs cli pop cmpsl mov lret jnp retq movabs jmp and (bad) ss lahf fistl pop out sub sbb push int xorl fstpt (bad) popfq rex.WXB add (bad) jnp rex.XB xchg cmp adc or jae insl pop sbb out pushfq xor movabs rex.WRB (bad) sub lahf (bad) push std cld jnp pushfq data16 stc mov test movabs popfq repz int mov repnz rex.XB clc fstpt stos fdivl mov and (bad) or adc lock rex.W rex.RX test mov xlat adcl rcl cli (bad) mov es xchg mov fistpll jb pop fwait clc cmp fucomi cmp rclb or jle xchg push jne pop mov testl jp adc xchg (bad) rex.WXB sbb sbb adcb fnstenv (bad) or cmpsl ss fwait lret (bad) cmp mov subl faddl outsl vmovaps (bad) mov jmp and cmpsl mov xor push adc rex.WB sarb loopne rolb adc rex.WRX addr32 mov test lods adc fwait add imul (bad) xlat out rex.RX xchg (bad) repnz adc push xchg fcmovnb int3 mov movabs notb fisttpl vmovaps (bad) xchg in jno retq clc xchg int3 add pop jg push fisttpl loopne (bad) movsl cs sbb push pop push rex.XB jae mov imul repnz fistl outsl sti stos mov out (bad) pcmpgtb xor in mov in cmp callq fildl (bad) incl push sbb fsubs push pop jno cmp (bad) cli or xchg push xchg (bad) movabs or outsl or jmpq rex.WRB fwait (bad) xchg xchg mov push mov fistpl jl fwait add sbb fstpt jmp (bad) cmpsb pop mov fwait cmp rex.R jo fcomi xchg or jp movsb in fldt jae fidivr sbb cmp cli rex.R rex.RX sbb cmp push movslq pushq fdivrs rex.B (bad) rex.WX mov or icebp (bad) dec rorb mov mov add or sub mov subl es pop test movslq loope fcmovnb xchg mov mov add test sub rex.WB fsubrs xchg (bad) movslq leaveq sbb or mov scas rex.RX pushq jnp cmp adc (bad) rex.RX and or cmpsb add fprem (bad) sarl fwait pop in xor rex.W and rex.RXB pop xchg xchg cmp fildl cmpl (bad) movabs in fisttpl and data16 pop mov jae mov jg rex.WX rex.B jne (bad) in fistl ss xor sbb add pop ds pop jno lret lret and lods push mov in push notb sahf out frstor fistpl push sub lahf mov gs je pop (bad) scas cmp pushq (bad) enterq pop (bad) (bad) xor loopne cwtl rex.WX std mov adcb xchg pop adcl xchg cmp pop (bad) mov pop or cmp (bad) ja xchg mov (bad) adc mov jge add cmpsl rex.WRXB (bad) jae rex.B nop fisubr xor fcmovnb sbb adc std fdivs cmp (bad) out xor cmpsb mov fldt push shl std fimul mov sub sub sub sub adc int es (bad) rex.R jmpq cmpsl pop lret fcmovne rex.RXB sbb int sarb fwait sbb faddl popfq ja add out or xchg rex.XB (bad) cwtl mov cmp (bad) (bad) add rex.WB sub rex.RB stos mov rex xchg push (bad) mulb rex.WRXB (bad) pop mov mov movslq xorl test loop clc (bad) push sti rex.X rex.XB add rex.WRB adc jl fs movslq out jg fldt int3 test rex.WR rex.B rex.WXB push mov lea rex.WRB xchg sub mov fs loopne icebp xchg mov repz jns (bad) sub (bad) push rex.WRB add sbb cli test ja (bad) jns ss rex.WRX rex.B sbb and in mov out rcr pop mov mov imul add pushq (bad) mov (bad) and fstpt jbe xchg push (bad) addr32 (bad) repnz repz pop mov cmp add jne xor movabs jb mov sbb or lea rex.WRX mov xchg in stos pop add sti (bad) cmc pop jne mov mov pushq ja pop (bad) icebp cmp xchg insb xchg fistpl xor (bad) js mov add or in fstp mov retq (bad) push enterq xor pop and in jl fucomi rcl cmp fstpt and xor push rex.RB or or (bad) negb xchg (bad) mov push movsb subb xchg out pop (bad) (bad) je es add stos scas rex.X or sbb out (bad) retq icebp (bad) lods idiv outsb cmpsb jbe out sbb jrcxz xchg xchg fisttpl xor (bad) fisttp rex.WRB (bad) pop push sbb (bad) mov pop loop push cmpsb ss mov rex.WB rex.X in cmpsl mov ja int fwait mov push cmp imul fs fistl loope and fsubrl pop add pop xlat mov nop ds push (bad) sbb jbe (bad) cmpsl or movabs sub rolb and (bad) test xor test and data16 (bad) pushq xor sbb or pop mov push enterq imul adc (bad) push iret neg out cld (bad) rcrb mov jmp clc fbld sub rex.X mov push enterq pop pushq test mov xor sub ja insb callq nop pop xchg pop (bad) mov popfq xor fisttpl (bad) fwait push out xchg push fcmovnu loopne out rolb lods xchg gs cmp jg or mov rex.WR (bad) mov mov push cmpsl retq fadd cmp push ja xchg cmp (bad) imul lods (bad) int vaddps sti fstpt scas lods (bad) or clc mov movsl movabs xchg jge xchg xor mov outsb mov popfq ror lock cmp and fxch test (bad) adc loop add xor rcrl pushq jp imul rex.WX rex.R mov je fisttpl xchg (bad) nop sub fsts rex.B (bad) leaveq fistl mull fcomi xchg in hlt lock jno sub sahf retq movabs pop movslq int3 xchg fcmovnb sub lods (bad) sbb (bad) test (bad) rcl mov mov sarl and adc and xor add xchg and rex.WB movsb cmp movabs push (bad) (bad) mov fwait in push jle mov sub es in rex.W scas jno cmp fiaddl fwait rex.RXB pop pop rex.R ss rex.WR scas hlt rex.WRB and cmp movabs add imul sbb lods fucomi mov pushq cmp xor lahf cwtl jo fistpl sub retq shr jnp es data16 fildl cwtl (bad) jne orb mov incl insb add rex.B pop rclb rex.WX out cmp sbb pushq movabs cmp lahf xor in (bad) mov jnp xchg lods mov push sub cltd es pushq adc movabs add in jg nop imul pushfq fstpl rcr pop jb pop movsb test (bad) mov pop fildl jno jge fisttpl mov rex.R outsb sahf add jl fdivrl movabs xchg push enterq sub mov (bad) sub sub popfq movsb rex.WRB jmp int sbb jp sahf scas fistpl stc test mov fstpt xchg cmpb pop (bad) fneni(8087 rex.WRX (bad) (bad) (bad) lret movslq mov adc outsl (bad) insb mov rex.WX popfq cmpsl (bad) scas jnp outsl cmpsb fildl (bad) imul (bad) jmpq jg fcmovnb stos mov cltd xor rex.RX fwait lods shll test repnz push fcompl mov mov fucomi or mov fadd enterq add rex.XB gs pop xorl imul (bad) (bad) sbb sub pop std ja sub retq stos stc sub (bad) push pop add rex.WRB ds fs icebp (bad) (bad) sbb loope nop scas rex.WRX mov lea sbbl fcmovnb add jmpq mov movslq (bad) fcompl pop shlb or pop outsb imul (bad) (bad) ja out (bad) rex.WRX rex.RB rex.WRB roll fistpl jrcxz and mov (bad) jg incb cmpsl cwtl xchg (bad) xchg fisttpl jnp fstpt sub cltd rorb adc sbb xor cmpl cmp js pop fistpl (bad) (bad) sbb pop retq push shl xchg cmp cmpb stos (bad) pop sbbl fidivrl rex.WXB pop scas rcr rex.XB pushq push add fwait iret std jrcxz or (bad) sbb add fisub (bad) push out out fistl pop jns leaveq and fisttpl std imul or cs addr32 mov in adc (bad) rex.X (bad) add jmpq leaveq mov fdivrp push outsb jnp sub or (bad) movabs (bad) jbe fwait scas ja jne mov mov sbb and sub stc pop push test mov xchg rex.WR fistpl (bad) cmp fndisi(8087 or pop xorl int3 imul adc (bad) pop push fldt (bad) xor cmp push cltd repnz jae xorb pop mov out xchg scas (bad) fstpt cmp xor push jnp retq adc jnp rex (bad) and rcrl mov rex.RX (bad) mov sub (bad) lods jbe or in fstpt jp (bad) fxam push fistl xchg (bad) rex.WRX pop (bad) pop shr out jmp jle or retq in xor sub stos rex.WRB lret imul jbe movabs cmp pop mov pop mov or (bad) ficom sub (bad) rex.WB pop jnp rex.W (bad) fdiv jrcxz int push sub pop fidivrl jne mov xchg lea rex.R test sub fwait xchg mov sbb rex.X jle repnz fldt int (bad) lods loop (bad) (bad) int3 xor flds fisubl mov push rex.WXB hlt std fstpt mov lods (bad) imul mov (bad) (bad) movabs scas jae rex.WR push push (bad) cmpsb cmp test (bad) or or mov fcoms cmp stos lock and jnp callq xchg sahf in popfq fwait rex.W xor mov mov (bad) add cli insl test push xor (bad) fisubr nop (bad) mov movabs cmp (bad) pushq xor mov jg or adc repnz (bad) sbb (bad) xchg adc (bad) (bad) jnp xor in rex.WRXB rex.X test retq stos push cmp fldt add (bad) cs movabs jmp (bad) movabs (bad) (bad) (bad) cmpl rex.WRB pushq sub add (bad) push mov add mov shrl rex.WRXB xlat jne popfq adc (bad) (bad) test mov mov jnp test adc jge (bad) (bad) xor rex.WXB and mov fcmovbe rex.R fwait movabs sti pop mov push (bad) retq xchg xchg scas (bad) (bad) scas adc cmp repz movabs movsb fistpl xchg loop xor retq (bad) pop data16 (bad) out sbb rex and mov add (bad) or and fcomi xchg (bad) popfq rcr cmp (bad) jmp stos std or rex.W or lods mov cmc (bad) add sbb cmp cmp (bad) cmp addr32 (bad) jbe push (bad) pushfq mov jg sbb mov rex.RXB fldcw (bad) cmpsl pop xor push mov sub movabs push xor leaveq sub idivb pop fistl and xchg adc fstl outsl pop rex.RXB (bad) pop pop retq mov in xchg jle test jg sbbl (bad) fistpl test (bad) icebp imul mov (bad) jb xchg jns out and cmpsb push sbbl test pop pop lret (bad) jmpq repnz rcrb movslq movabs pop jmp push rex.WR mov sub or adc (bad) sbb fistpl out fcmovbe paddusb rorl and ja jl movabs rex.WRB mov out xchg pop fcmovu movabs pop jo sbb (bad) xor fstpt (bad) (bad) xchg fisttpl (bad) pop add pop or pop cwtl xor es pushq mov stos xchg mov cs gs jp stc adcl (bad) jrcxz rex.WR nop xchg pop jbe fs mov pop add sbb lret (bad) sbb mov in fmuls lods (bad) retq push fsubr mov sbb lahf cmp xlat adc js add sub sbbl iret add fsub jns pushq fwait push fimull (bad) sub roll fimull fsts jns rex.WR mov fnstenv mov addr32 lret insb test sub or in mov sahf loopne mov cmp lret jg mov je sarb rex.RB xor sub jle loope je,pn add stos jge cltd jg movabs jnp rex.XB test mov push jl jge in mov pop xchg in movabs shrb or xor xor (bad) (bad) es sarl adc sbb (bad) mov shrl jge cmpsb sub jmp sti out xchg and xor pop test movslq cmpsq push or in jl (bad) push add leaveq lret shll mov lods rex.WX jge add (bad) or fcomi xlat int jb addr32 pop andb cli repz ss nop jbe xchg pop jmpq ficoml (bad) fildll sarb and xchg mov and sub fisttpl sub in xor add jb cli xor outsl and (bad) pop pop (bad) fcmovnu pop clc (bad) xchg mov std fildl pushq test test push cmp xor pop mov (bad) fidivl out xchg rcr in jae fcomi adc mov jnp push (bad) out scas fcmovne fs jae push xor jl pop retq fcom lahf stos movslq rex.B (bad) int3 loop sarb stc jb scas cmpsl fldcw mov pop jnp mov (bad) or xchg fldt or (bad) or rex jmpq (bad) jg (bad) mov cmp rcrl mov (bad) ja movsl test (bad) rex.XB cmp rex.X (bad) mov (bad) movabs lret rex.RXB rex.WRX sub push movabs adc retq cmpsl mov mov jg movslq rcr adc and (bad) (bad) stc adc sbb leaveq (bad) push add add rex.WXB imull pop nop pop in push in add rex.RB (bad) outsb sbb and sahf pushq nop mov pinsrw xor test gs cmc shrb rcr imul or rex.WX sbb xchg mov movslq stos mov jno (bad) movabs in sub rex.R rex.W adc fmuls cmpsb mov fildl xor iret int push fildl in adc or and fwait test push lods (bad) orl fcmovnb add xor (bad) stos jno rex.WXB lods and xor (bad) outsb rex.RXB adc ss imul (bad) pop fsubs sub fcomi rex.WXB (bad) scas mov xchg pushq (bad) add cmp ss jrcxz and xor add lret xor mov jb and pop or rex.WRX test addr32 xchg mov idivl or (bad) xor jle callw (bad) fstpt xor or mov lods mov fldl stos mov jb cmp xchg out jo add and mov sbb xor fcmovne pushq cmp and iret adc fnsetpm(287 out subl pushq sarb cmpsb fstpt push cmpsl shrb pop callq fdivl sbb test (bad) (bad) addr32 fistpl loop rex.WRXB xor add adc fs fiaddl rex.XB enterq push movabs and movabs or retq rcr scas or jb (bad) fistpl adc cmpsl stc (bad) cwtl fisttpl jno (bad) (bad) and out and jnp mov and fldenv (bad) fmull pop pop ficoml fisubr fwait retq (bad) sub outsl lret jle push rex.WR sti xchg mov (bad) (bad) cld rex.R push push (bad) fcompl fstps fsubrs jae lock js pop rex.R xchg movabs fstps mov mov pushfq lret shl lods jp scas mov movsl cmp pushq rex loope jp stos pop clc rcrl pushq jrcxz add xchg imul rclb push icebp (bad) fstps fiaddl pop icebp fcomip pushq jnp sbb rex.WX mov js lahf rex.WR pop jae popfq xor rclb cmp stos jb jnp cmp pushfq (bad) (bad) pop pop xor pop js rcl push lock fnstenv (bad) movabs loope (bad) rex.XB jle jb fwait sub nop lahf imul mov sahf pushq lods jno and (bad) loope cwtl jb imul fidiv rex.WXB xchg int3 fnstenv fistpl and and fcoml sub rex.WRX fwait (bad) (bad) sub test xchg imul xchg sub cmp rclb ja (bad) pushq fwait repz add or mov rex.XB std rsqrtps (bad) icebp mov mov nopl movabs pop push sbb lret sbb push loopne rex.RX fs leaveq pop std (bad) movslq pop (bad) add add jmp out loope jrcxz sti jne movslq (bad) pop xchg (bad) or cltd xor stos (bad) notl movabs data16 sahf rex.X cmp rex.R rex.RX insb fistpll pop and jb add adc ds mov out jp fstpl jae cld jle insb (bad) mov pushfq orl negb push in mov xchg push fidiv sub cwtl xchg je pushq mov cli fsubr xchg fs lods movabs xlat xorb ljmpw loopne lods fldt fwait and rex.WRB insl (bad) mov adc and sub mov rclb pushq pop imul push rcl popfq cmc fwait mov cmp rex.WRB mov pop negb pop (bad) repnz fcmovnbe (bad) jnp cli sbb jne (bad) mov pop adc sub movabs and ja fadd rex.B (bad) (bad) rex.WRXB (bad) sbb (bad) or jne xchg push xor stc and cmp insb push in cmp jns sbb sbb xchg pop jle cltd cmp es rex.RXB sbb xchg jrcxz loop (bad) lahf retq push jne cltd xchg adc and lods fcmovnu mov push sahf movabs cmp outsb mov movabs sbb iret mov (bad) xchg rex.WRXB (bad) (bad) add sbb ds sbb rorl (bad) lahf mov fisubrl repz cwtl in addr32 outsl and cmpl cli test cmp cmp jg rex out insb xchg mov pop xor push push retq jle cmp adc sarl (bad) subl rex.RX rex.WRX rex.B mov mov sahf fstpt std iret add sbb adc (bad) sbb test jnp cmp and fcmovne fdivrl (bad) jg (bad) mov addr32 test jns mov (bad) mov mov xor and pushq pop add (bad) ficoml movabs mov and and repz lods lods mov sbb lret (bad) (bad) (bad) test or fistl push cmc sarb rex.WX add es and adc fldt scas cld fldt rex.WXB sub pop fildl rex.WX imul addps ds insb mov cmp cld xchg je rorl xor fcmovnbe rcrl test mov lret cmp rol je rex.WRX mov jmpq cltd xchg or mov popq mov sbb rex.WR cs mov cwtl jl stos sub (bad) xor cmp callq repnz fs add fldt fidivr cmp fldt lahf (bad) out xchg or sbb add insb fstp xlat pop mov (bad) add rex.WRXB (bad) rcrl push jp mov or jrcxz (bad) je imul rex.WX pushfq push (bad) jbe fdivrl rex.X fldt rex.WX (bad) fstpt and push (bad) movsb mov out add rex.RX rex.RB ss fcmovnb add push jl cltd mov cmpl (bad) add adc imul movsl fldt mov ds (bad) js mov fild bnd scas (bad) hlt sub xchg rex.WRXB mov pop stc movabs clc mov push xor (bad) jno mov fcmovb jle orl popfq outsb mov loop rex.RB data16 leaveq lahf xchg jge int3 adc pop rex.R rex.W xorl sbb pop out or movabs (bad) pop cli mov and movsb push xchg sub shlb jrcxz rcr (bad) adc icebp lret in (bad) out (bad) fisttpl nop fisubl fcmovnu fucomp mov fildl rex.WR in cli fldt mov adc mov (bad) jg and enterq (bad) mov fldt add mov (bad) xchg in push xchg (bad) adc mov adc mov rex.W cmp movq sbb xlat jg cmpsl movabs (bad) addr32 (bad) xchg sub retq sbb clc xor test fcomp pushq add ja int or adc xchg lahf adc in iret (bad) (bad) (bad) sub push pop sub js sub retq cmp push jl pushfq push rex.XB push enterq push fadds push retq xchg imul icebp cs (bad) and fisubr in nop gs retq and jge mov mov jnp jae (bad) rex.WR gs rex.RXB (bad) mov sbb int3 idivl mov fsubrl mov mov movabs mov mov (bad) mov add fs inc mov int andb (bad) add movabs sub mov and in add pop data16 fisttpll fninit cld movabs imul xchg (bad) rex.XB sub lods rex.B bnd xchg jmpq push jge sti lea pop imul enterq gs rex.X rex.WRB sbb xor jo movabs add addr32 and rcrb (bad) pop rex.WRX pop (bad) imul (bad) movsb (bad) jnp cmp lods sbb rex.WRXB ror stos xor cmpsb fstpt sahf push cmp cltd cmc cmpsl loop mov jb (bad) (bad) pushq (bad) (bad) xor pop cmp rex.WX lock in (bad) pop repz in rex.WR jrcxz jge mov sbb cmpsb add cmp (bad) fcmovnb add rex.WR (bad) int3 (bad) leaveq xor cmpsl pushfq test retq adc movslq (bad) (bad) fildl es add repz js mov mov stc rex.WR cmp and pop pop sub (bad) pop hlt mov xchg push rex.WR jb mov jp cmpsl (bad) (bad) (bad) pop es rex.X (bad) fisttpl push stos (bad) fdivs and pop sub repnz adcl mov or rex.B xchg rex.RB fwait and mov fistpl insl jbe mov out fistl (bad) lods ds or fistl sub cli sbb (bad) rex.R (bad) or pushq pop lret or rex.W mov outsb xchg push mov mov leaveq pop imul sub repz fistl and cmp nop imul pop adc rex.WRXB (bad) loopne sub push out movhps jg adc pop insb mov mov rex.WRX int xor leaveq mov mov xchg jmpq push loopne and xchg jnp out xchg out jae repz cmp pop scas xor scas movabs fildll iret imul add leaveq sub sbb movabs sub negl sub cltd mov movsb clc (bad) fwait cmp (bad) fistl (bad) jbe xor mov and pop (bad) rex.RXB rex.R cmc (bad) pop mov nop out test sub (bad) fldt jle add xlat iret and ja retq add fidiv adc mov out xchg jae lret scas jl jae sbb rex.WRX cmp fisubrl pop mov loope xor mov cmp adcl jrcxz (bad) or pop cli cmp (bad) movslq addl mov (bad) in (bad) adc xor (bad) es or (bad) lret (bad) cmp cmc rex fwait (bad) je div retq hlt pop rex.R cltd sbb mov mov fistl adc rex.RXB mov and or sub cmp loopne lock (bad) (bad) xchg jae (bad) lea popfq (bad) shll pushq (bad) ds stos (bad) rex.RX pop leaveq ljmp fistpl xchg mov sub push pop retq adc pop int3 xchg mov js stos xchg mov stos push loop (bad) (bad) or hlt pop or int (bad) in bndldx jns and retq mov sbb fistpl add (bad) pop fisub jo out add rex.RXB repnz lret cmpsb push movabs jnp nop rex.R stos int adcb pop push mov rex.WRX push test ds sbb (bad) js pop insb xchg fisubl pop or movsb push imul movslq mov sub movslq rex.W iret sub in addr32 jno fmuls mov es xchg lea push adc sub (bad) iret fistpl mov mov sahf mov xchg pop fcmovnb shll es mov pop pop sub leaveq in mov rex.X jns movabs (bad) movsb fs push adc mov xchg rex.W push rorl mov cmc xchg in imul add nop in pushfq rex.R rex.XB (bad) rex.WRXB leaveq (bad) ss rcrl mov jrcxz hlt mov stos add adc clc cli imul movsl push cmp sub rolb jno fucomi xchg mov lods jmp imul insb lahf xchg pop sub (bad) cmp lea shlb out cs lock cmp xor pop sub (bad) or imul rex.WB lods movabs sbb jl fldt jge retq push (bad) mov cmc pop ss sub and or rex.XB (bad) mov sarb adc (bad) fstpt jno pop sbb xchg (bad) fwait sub (bad) retq (bad) maskmovq negl fiadd jg or movabs lahf movabs (bad) subb jns mov push jle (bad) xchg mov fwait and (bad) movabs (bad) pushfq pushq (bad) repnz movabs adc (bad) mov in adc orl push fistl callq out test push pop or hlt pushfq out cltd cmpsl loope iret add imul mov repz adc testl fist sub rex.R xor adc rex.WXB int (bad) sti repnz xchg pop cltd xor out sbb sbb vpunpckhbw mov lret pushfq shr fwait clc (bad) jns mov (bad) xchg or (bad) icebp pop xor fsts shrl gs in out jp mov sub sub and hlt (bad) and iret xchg sbb lret out (bad) rex.WB sbb sbb mov fsubl lods jg jl fstl lods and lods movsl in cmp xlat sbb jnp cmpsl pushfq rex.W out stos loope std fcomip mov and clc (bad) fnstcw fistp push pop negb jrcxz movabs (bad) js (bad) fsubs and rex.RB rex.WXB (bad) (bad) mov pop jbe push sbb rex.WRX sbb (bad) xchg rex.WB xor (bad) addr32 mov push test (bad) (bad) pop jle std xlat cli out sti push pop mov mov pushfq mov push fwait stos and (bad) or hlt xlat lea sbb insb cld xor sub bnd and cmpsl add pop (bad) (bad) (bad) clc mov cmp in icebp (bad) (bad) add fstpl push (bad) mov (bad) insb xchg mov cli sub jg mov leaveq (bad) out sub loop je and addl data16 mov mov fistl jge push rex.RB rex.WR jnp cmp fisttpl outsb stos cld mov rex.WRB (bad) iret (bad) rolb mov mov movabs pop xor mov sarb mov rex.WXB in push (bad) (bad) int3 movabs xchg push push out pop (bad) jne cmp fcomi fnstenv rorb (bad) (bad) push fild sub sbb movsl jg or xchg pushfq mov push repnz xchg and jnp cmp test fbld rex.RB add cmpl int mov sub pop fs adc and rex.R pop lods in xor xchg movslq cmpsl pop stos (bad) mov cmp insl movabs mov or loope fstpt mov pop rex.WR sub jnp fwait rex.RX sbb push movsl mov lods pushq xchg pop pop mov sub outsb mov jno fwait and movsb xor ficompl and sbb jmpq xor fldt insb cmp fcmovnu ds mov icebp sahf mov cmpsl mov (bad) rex.WRX sti stos retq cmp retq xchg pop mov sbb pop mov (bad) fldt rcr pop nop rcll cli movabs jmp rorl fcmove and (bad) jne pop movsb xor xchg cmc ds pushq fcom pop (bad) mov stos adc pushfq outsl pop mov sub lcall idivl xchg rex.WB loop (bad) pushq fstpt pushq xor outsb sarb andl loop repnz pop and imul lock or xchg add emms mov add pop stos xchg and stc mov fldt adc in sbbl jle lock cmp sub push (bad) adc fstp rcrl movsb xorb loopne mov insl movabs pushq add (bad) push sbb add iret mov js fmuls movabs add loope test pop lea sti and test mov pop pop xchg lret cmp jbe lods xor (bad) (bad) sub and in scas cmp jo jge insl xchg jno fstpt rex.RXB jbe fsubrs sbb hlt out enterq int sbb xor rex.WRB in sub jp jnp mov (bad) xchg movabs in outsl fwait sub insl and add sbb mov (bad) mov xor rcll movabs xor iret pushq (bad) out iret (bad) xlat push jmp lock jge sbb std lods scas (bad) push push movabs js enterq sub shrb out fs xlat (bad) fstps push add (bad) mov fisubl pop lahf scas push cltd mov addr32 xchg out xchg scas pop (bad) popfq cltd push mov (bad) xor pop (bad) lods jmp sbb adc movsb cmp and mov xor fist push fdivr cmp push lret out movabs int3 std cwtl je,pt mov imul mov jnp jo repz rcr add pop (bad) fucomp xor shlb (bad) out rex.RX shll push sub pop (bad) (bad) lock mov (bad) mov mov int push jrcxz (bad) jge (bad) and ja adc and mov mov xlat xchg addr32 sub fwait mov scas push jnp stos insl pop add clc (bad) in imul fnsave rex.X es add pop add movsl (bad) xlat cmc adc rex.RXB rex.WR pop je (bad) imul xchg rcr (bad) add (bad) jo rex rex.RB cld sbb pop fistpl test rex.R or mov test pop rex.WRXB rex.WRB add cmp (bad) (bad) rcrb xchg pop push mov retq in fcoml sub rex.XB xchg adc xchg adc fcoml xor (bad) jge (bad) and add sub (bad) pop (bad) jle fsubs add add int3 stos pushq fldenv jae sti cmp loop cmp jrcxz cmpsb (bad) imul sbb pop rex.RX and mov xchg rex.WB lock outsl pop fld or loopne jnp out xchg cmp sahf sub xor push imul (bad) and xor jnp jb push cmp rex.WRX sub fcom push leaveq (bad) faddp (bad) lret push test (bad) sub jp movslq jmpq pop xor in fcmovnb out mov mov or loopne movabs (bad) pushq fidivl sarb frstor jnp insb js (bad) push (bad) hlt mov addr32 pop jbe loope xchg cmp jg lea (bad) push adc (bad) mov fwait sbbl fnsetpm(287 in rex.RXB in adc retq mov jno cltd pop xchg adc cmp enterq mov (bad) pop jrcxz fistl mov (bad) movabs xchg sahf cmp adc cmp xor (bad) int add xor pop enterq (bad) sub sbb pop rex.WR jge rex.WRX jmp cmp mov cli rclb adc xchg (bad) insb jl mov mov xchg xchg mov (bad) testl lods rex.W mov jae fistpl or rex.RX push (bad) in pop (bad) adc (bad) (bad) mov pop and (bad) fildl lahf adc xchg loope mov fstpl and jns loop (bad) jnp std add jae mov xchg (bad) add mov and popfq (bad) fcmovnbe (bad) loope insb test fstps mov ds jbe rex.XB ss jge jnp sbb (bad) rcr movsb jp add xchg subl int3 movabs (bad) insb mov in int (bad) or fisttpl rex.WRXB (bad) sbb vandps fcmovne hlt sub cwtl xchg mov xor rolb jo cmp xor xchg pop cs push pushfq (bad) sub pop lods gs xor push adc movabs rcll incb test fiaddl ficompl imul mov nop rex.WRXB sbb (bad) cs es (bad) or jb jne rex.RB mov jb mov or xchg scas xor xchg mov or movabs mull mov cld test or add stc (bad) rcll (bad) rex.R movslq (bad) xor (bad) (bad) (bad) fmul movsl movabs sti lods fucom jge,pn jp mov ficoml jae push (bad) int jmpq sbbl sub (bad) jg xchg add rex.WX cmc mov test rex.R sub std leaveq insb testb sub or (bad) ss jge cwtl cltd pushq (bad) in rex.WR xchg insl sub jo or mov mov leaveq pop loope rex.B retq jmp xor rex.W xchg (bad) xor adc loopne ffree cmpsl rex.WXB xchg rex.XB xchg (bad) add fisttpl sub lea lret jnp jbe fimull cmp (bad) rex.XB mov pop movabs lods in mov fistl fimull (bad) fisttpl xchg jbe in push add rex.WXB jo xchg stc and rcr divb (bad) fcoms int3 sbb jge fstpt ss push rex.WR (bad) callq xchg (bad) push vpand out jrcxz bnd pop rex.WXB fwait in out cli mov rex.WX lahf clc rex.B mov rorl rex.XB callq fildl cmc fs roll push enterq xchg (bad) lods movsb rcr cmp std movb lret pop (bad) andl fistl fadds jbe retq movzbl int xor loop and (bad) or rex.W int rex.WX cld pop add cs fnstenv fistpl leaveq (bad) loop push or mov incl rcr rex.XB cmp (bad) jne sub flds outsl fist lret xchg sbbb std pushq (bad) mov (bad) pop orb xor xor xor (bad) movslq pop add (bad) rex.X fild ja mov imul push fs xor jnp rex.RX (bad) (bad) mov stos and rex.WB mulb adc retq rex.WR nop fstpt mov xchg sub pop cltd repnz (bad) lret add (bad) rex.RB out push fnstsw mov andl rex.WXB insb cmp fstpt xrelease push jl (bad) ja test lcall mov mov pop cli mov xlat mov fistl addr32 mov rex.B (bad) push and popfq cmp enterq (bad) push cmpsl fcmovbe xchg imull xor (bad) pop and movsl sbb pop fistl jrcxz adc bnd lods adc jnp mov sti xchg and and sar sahf jns sub std xchg ja syscall fcmovnu xchg cmpl (bad) cmpsl xchg (bad) xor mov cli (bad) push pushfq mov pop mov fwait cmp rex.W fildl rex.R or cmp lret pop pop sbb rex.X fwait mov lock hlt rolb lods rcr es jle push fistpl clc add fild cmp add movabs retq pushq ss (bad) cmp mov (bad) cmp adc adc fisub loope,pn (bad) outsl (bad) jrcxz in xchg adc mov xor fisubl (bad) pop sbb fwait xchg and (bad) fildl out enterq (bad) hlt rex.WR sub xor je rorb stos (bad) test rex.RX sub (bad) test outsl rex.RXB fcomi (bad) cld popfq subb scas pop fisubr retq fwait (bad) ja xchg int3 xchg sti rex.WR mov fisub and (bad) sbb fstpt pop jg rex.W fldt outsl mov (bad) fs (bad) enterq cltd lahf push fistpl mov and negl rex.R jae mov (bad) jmpq xchg adc fsubs (bad) jmpq add movsl (bad) push fildl sbb leaveq (bad) movsl fistpl add xor test add mov (bad) mov and xor cmp cmc jbe and and iret (bad) xor push jg icebp shrb adc in cwtl sbb sbb (bad) sub and mov pop and std (bad) jnp pop xor (bad) (bad) (bad) cs (bad) adc fistpll jnp out int3 jle rex.W fsubr mov xor icebp gs cmpsl push rex.RX or test int3 rex.WX rex.R mov out test pop cmpsl jg mov or fisttp mov cmpl adc mov sahf adc in flds lret sbb ficompl push fcmove shrb xchg test xchg addr32 gs add testl push insb add out fisttp add (bad) xchg xchg xchg (bad) mov sbb mov fwait (bad) imul xchg jle divl rex.WX cmpsl sbbl out rex.WX xchg rex.B loop (bad) mov js in insl insb (bad) mov fildl xchg mov mov (bad) add pop cmp (bad) out adc fisttpl xor (bad) push (bad) mov popfq js mov xchg pop (bad) out xor in pop push mov (bad) in jne mov mov test pop and or (bad) sub repz sub gs (bad) es fcompl xor (bad) pushq fisttpl mov notb rex.R xor rex.XB (bad) fdivrp jae mov (bad) shrl push xor mov sub pop movabs xchg (bad) pop pop callq outsl lahf jae add rex.W fwait rex.WRB imul mov fisttpl sbb cmp sbb rcrl sub jmpq add movsl jnp mov sbb stos sti mov xchg sub pop pop mov rex.W xor testl xchg sbb push in adc sbb xchg (bad) jp sbb ja cmp loope adc jge imul insl cli rex loopne (bad) mov xchg mov jmp add std gs sbbb sbb rex.X push jo fiaddl (bad) jmpq mov xchg add push mov or push or pop or cmp mov pop loop rex.WB and add mov rex.WXB in xchg mov xlat (bad) pop ficomp mov cmp jp stos (bad) pop (bad) (bad) cmp rex.R movsl lods rex.WXB xchg pop push es jnp mov cmp pop cmp out lods rol (bad) lods lahf lock lret data16 push sarb xchg sbb jae stos je sar add leaveq or pop outsb (bad) repnz (bad) out rex.WXB mov pop cmc scas fmull xchg fsubs (bad) mov fsts roll nop rex.WRXB ss fild incl in clc out push loopne jbe lods out stos rex.RXB jnp,pn (bad) iret cltd fcoms cwtl retq mov (bad) jb mov rex movabs or movsb sbb mov xchg pushfq nop sbb or push in jle gs mov (bad) xor jle mov (bad) fstpl xchg shrb adc rorl rex.WRX and sub pop rex out out cs cli (bad) sarl xchg mov fimul pop fwait loopne mov sub rex.RB jl retq (bad) push data16 sbb or cwtl in sub or sbb sbb rex.W repnz add scas lret fidivrl mov insl mov iret mov jge cmc push in retq icebp xor rex.RXB subl sub adc icebp xchg mov push mov fisubl cmp mov fdivl fisttp xor cli in sub pop pushfq (bad) (bad) or (bad) adc stc out lret add adc jnp jne push push add sar mov fldt rex.WRX pop adc (bad) or (bad) cld rex.W rex.RXB adc xor rex.XB sbb push lret repz fstpt loope cmpsl fisttpl stos in enterq push push add int fildl scas cs and popfq rex.WR scas callq movsb jrcxz testl (bad) jnp nop xchg retq mov xchg mov imul xchg adc fucomi or sub mov sarl fldt notl test push cwtl outsb (bad) xchg cmp (bad) sub jb out pop adc jno cmp fildl lret fcmovne ss sti adc (bad) push rex.XB in cmpl popfq stos fnop rex.WRXB ss (bad) mov pop lret rex.WX sub cmpsb cmp fcmovnbe fcoml add and int3 int jo or rex.R xchg lods test shrl (bad) jae addb sti (bad) rex.RXB fstpt jb icebp retq (bad) cmpsl fldt insb sub jo mov (bad) rex.WX pop hlt (bad) jne test sbb (bad) or rex.WX out fs sub jne stc rex.WB hlt loopne test rex.WX iret jge push sub sbb (bad) pushq (bad) mov stos fistl gs adc pop cmc vpshuflw loop callq jp (bad) lock js xchg jge movabs (bad) xchg (bad) movabs stos pushfq icebp jg jle imul push mov adc sbb fistpl (bad) mov adc sarl (bad) movsb callq push lods out push sbb rex.WXB fwait add rex.R rex.RXB fldt mov xlat push in adc imul cmc (bad) mov and lods rex.RX cmpsb fcmovnb xlat rolb rex.WX shrb in and sub ficom (bad) mov jb rex.WRX repz xchg push adc (bad) fistl test loop orl sub rex.B sahf (bad) cmpsl xor jl xor rex.WRXB fwait mov (bad) vunpckhps cmp imul test js (bad) sub jns or popfq add mov jnp (bad) stos cld mov fisttpl stc mov jmp rcr movsb je sahf (bad) lret rex.RB xor (bad) out outsl jo outsb cld movabs pop rex.WRXB cmc pop mov mov divb pop pop (bad) adc mov scas mov sub sti mov addr32 add sbb retq test xchg loopne mov rex.WR and lods adc sub imul pop gs jb mov (bad) outsl movsl jmpq mov callq jbe fisttpl rex.WB mov (bad) (bad) repnz jle scas mov xor lret and mov adc fsubs movabs test adc fcmovnbe jbe xchg out pop add negl rcr fiadd movabs pop repnz or (bad) push add test mov loope out loope cmpsb mov sub mull xlat add fwait mov and or in scas cmp adc test test imul scas roll pop sub mov or add and in subb and jle xchg test sti rcrb imul (bad) push sbb movabs (bad) movslq xchg out sub roll addr32 pop lret mov addb jmpq outsb and scas (bad) xor test shl xor imul hlt (bad) mov mov (bad) cmp (bad) mov pop (bad) ss sub or fs adcl rex xchg or mov rex.RXB and xchg push cmp push xor outsb cld loop xchg (bad) (bad) sub in fimul xchg push and mov push or sub lret xchg rex.WRXB rclb mov in in (bad) pushq movabs add ficomp lret pop pop subb sub cltd test (bad) rex.WB int (bad) jp mov mov (bad) nop push push adc out cmpb xchg pop cld repz sub mov imul rex.WRXB je rcr cmpb rex.R add imul pushq callq (bad) jrcxz movslq rolb (bad) rex.WXB mov rex.W adc (bad) xchg (bad) adc xlat fst (bad) incb rex.WX fwait xchg fisttpl (bad) loopne fildl retq (bad) cwtl lret cmp pop sub int xchg stos jbe push or (bad) (bad) cmp (bad) pop (bad) jne cmp pop (bad) cld fwait int adc rex.B movl stos shr push xchg sbb or imul push xchg test (bad) adc rex.RXB pop mov test (bad) mov mov mov lods jl pushq movsl lods mov mov rex.W sub stos outsl push rex.WX out callq fcoml mov mov test rex.WRB cs jp fimull xchg scas (bad) callq jge or iret adc pushq jge out push pop xor or pop push or lods nop mov (bad) (bad) rex.R in callq sbb push push mov (bad) mov or movabs loope outsl fnstenv push (bad) sbb add imul cmc (bad) cmpsl mov cltd mov loop jrcxz loopne push push rex.RX je pop or iret mov adc fisttpl out fsubs jbe rex.XB (bad) fisttpl int movsb movabs pop (bad) retq or retq cltd mov (bad) sbb cmp pop jrcxz fildl mov loopne xchg fldt shlb je jno (bad) movabs sbb mov xchg mov outsb add adc retq pushq movslq fistpl mov in pop or sti stc fdivl jnp or rex.WRB repz shlb cmp add sub (bad) mov push adc outsl cmp cmp pop repnz imul pushq xor std icebp and outsb xchg sub movslq mov (bad) in cld pop (bad) push fisubrl rex rex.WRXB mov sub cmp or fcmovnbe cmpsb test sub pavgb add in cmc xor push fdivr sub push (bad) mov fistpll cltd (bad) xchg (bad) fiaddl ja mov sahf in (bad) jge xor mov cmp rcrl (bad) rcrb sbb and mov mov pop leaveq fcoml cwtl movslq pushq xchg mov mov mov pop rex.WR (bad) (bad) (bad) (bad) rex.WX test repz out scas movabs stos icebp enterq (bad) mov push sbb and loopne rex.R (bad) repnz mov adc jp and retq (bad) cli xchg retq xchg addr32 (bad) pop scas pop sbb rex.WRXB out adc callq xor test (bad) rex.WX rex.WRXB (bad) (bad) push (bad) push cwtl es mov (bad) or sti (bad) (bad) (bad) rex.WB jae in int imull clts push fnsetpm(287 push pushq cmp iret or rex.WB fildl pushq fstp (bad) sbb adc rex.WX in push sub in rcr fidivrl (bad) loope div stc fstpt (bad) stos sub shr fldt cs push sbb (bad) or repnz (bad) int imul sbb or mov cmp cwtl xchg cmp retq rex.XB out sarl sbbl rex.WB xlat fildl pushq fwait (bad) fcmovne pushq mov in pand mov xor nop clc loopne cld in out out rex.XB xorl rex.WR or rex.R scas lret int3 fsubrl cmp rclb and pop data16 subl (bad) fs jb jge hlt fsubs mov fistl (bad) pushq fistl out and (bad) xchg fildl fsub sti (bad) xchg movsl sarl pop or or push nop movabs (bad) jnp fnstenv and out jbe je pop fistpl (bad) out (bad) pushq fstpt and sbb jl rex.WR nop (bad) in scas fldt jno and retq mov or rex.W xor mov ds jo fldenv callq and rex.RXB std fwait shrl add popfq out (bad) jbe pop pop nop mov cmp loope (bad) scas xor fwait add and jno insb es jb in andw push stos xchg jbe cmpsb sub push rex.R test and out cli (bad) sarb and mov stos mov jg (bad) sahf icebp rolb rex.RX (bad) outsl cmp loope roll fnop (bad) push movabs callq xchg leaveq rorl test push sub mov in fimull (bad) mov jmp push movsb roll rex.RB pop (bad) cld mov adc xchg mov rex.R (bad) icebp mov rex.WRX pop add sub add sub movb imull rex.WR rex.WXB pop sbb mov cld cmp push fwait shlb (bad) pop (bad) jnp movsb (bad) (bad) ficom iret rex.WRX xchg xchg pushq imul sbb pop adc rex.XB pop and movabs fildl addr32 push push in rex.WRXB jp jo mov lret movabs incb mov nop (bad) rex.RX mov xchg fisttpl repz fildl xchg mov lahf stos lods cmp std and xchg movabs (bad) fiadd cs movslq rex.X xchg jmp callq (bad) (bad) stos adc or rcrb pop loopne xchg (bad) xchg retq stos in pushq outsb (bad) mov rcrb insb pop xorl retq sahf xchg out jg movabs rex.RX rex.R (bad) (bad) add pushfq jge fcoml cmp int3 jae fisttpll pop mov movslq outsb sub stos (bad) cmp lea (bad) std (bad) jb je fnop cmp stos jp cmp fwait and and shlb (bad) movsl js mov xchg rex.WRB (bad) jrcxz rex.B bswap (bad) loop lock test xor ja clc cmp cmc rcrl push lea (bad) (bad) sbb push or push jp (bad) (bad) lea scas fcompl push and pop mov movsb ds (bad) fisttp lret (bad) int mov (bad) fs cli loope add rex.WRX adcl adc sub rex.WRB xor (bad) movabs in push cmp rex.WX in cmp (bad) fstpl (bad) xchg (bad) mov mov lcall hlt push push and cmp test in (bad) rorl (bad) movslq push idivl (bad) pop xor test mov jg ds mov (bad) jb ja push mov scas retq xchg stos out mov cmc sub xor fmull rex.RXB rex.WR xor sub xor movabs imul fcomps adc fs lods pop xor rex.WRXB es pop (bad) rex.WX xchg rex.RXB fwait rex.XB test repnz callq fistpl xor adc jrcxz,pt es ds (bad) mov jle andb rex.R hlt repz cmp loop and mov fistpl clc ds fstpt rex.XB in adc add (bad) cmp mov clc in (bad) fdiv fildl mov add mov cmp adc (bad) fistl (bad) xlat rcrl out pop orb movabs jrcxz imul mov std jl test stc (bad) rex.WR sbb lahf sub adc push mov sub fidivrl insb pushq cmpsl movabs xor xchg fildl test mov (bad) iret (bad) (bad) insl mov mov jne rclb imul rex.XB rex.WRB push fstpt ds movsb adc xchg imul in and movsl (bad) jnp mov pushfq je sub (bad) cli mov pop (bad) rex.RXB mov kandb sub (bad) cmc and rclb xor clc or (bad) test pushq fiaddl retq (bad) mov fcoml pop sub fs add subl cwtl loopl pop sub pop mov xor pop mov (bad) rorl sbb test sbb out push pop jbe imul rex.R cmp cwtl negl push sbbq movsl mov (bad) push push bnd mul jp (bad) std mov xchg insl push xor ja add mov sbb es cld cld sbbl cltd xchg mov jo callq fldt rex.W rex.B or fmuls cmp stos (bad) jle cwtl fisttp out xchg cmp push (bad) pop adc add xchg xor sub jbe sub lea int fwait jl shrb fs push out xor shlb nop fldt (bad) (bad) mov notl in lretw outsl add jg or fmul stc subl (bad) mov xchg sub je (bad) mov mov sbb pop rex.RXB sahf fildl xchg jg (bad) pop pop cmpsb (bad) jns fmul fcmovnu pop cld push cmp repnz repnz ficompl mov sbb (bad) enterq and mov sbbl mov lock fwait (bad) xchg movsl xor stos jo add cmp pop pushq mov jns ss xchg (bad) pop and cltd pop push (bad) pop insl jmpq rex.WX jno mov jb pop adc sar ja icebp cmpsb idiv jmp pop push mov fisttp fstps rex.WB fprem1 out repz test std movabs imul out out sub iret rclb imul je movslq mov cmp mov xor push sbb (bad) adc clc mov jo cmp pop jne or rex.WRXB rex.XB rex.RXB cmpb pop jrcxz xlat imul fldcw rex.XB (bad) push pop cmpsl mov adc fwait (bad) fldl rcrl int push out mov stos or int3 sub fsub clc ds jne cld mov mov xchg divl jle (bad) adc or int3 rex.R jnp and (bad) mov test clc insl adc lods fldt cmp movabs fwait xlat push xchg cmpsl nop pop subl sub (bad) adc cmp (bad) popfq push push adcl cltd cmp mov cmpsl (bad) (bad) cmpsb push sub jmp pop popfq xchg pop (bad) or lods (bad) or movabs insl pop sub or jae es jp cmpsb loopne rcrl rex.X retq rcrb mov sbb lret fistl (bad) sbb js xor xlat and push mov lods (bad) add gs xchg fnsave pushfq pop mov xor (bad) xchg test mov push and mov sub test outsb fimull fsubs cmpsb mov pushq out (bad) pop fadds adc fisttpll stc ficomp add cltd je int jp rex.WB rex.WXB pop rex.WRX rex.WRB (bad) and popfq cmp andl rex.WX fld in mov (bad) mov pop lahf mov xor add insb rex.W rex.WR retq (bad) (bad) xor repnz stos sub rex.WRXB movsl mov jmp adc (bad) (bad) mov stc cmp rex.W (bad) (bad) (bad) xchg mov scas fs sti movabs xchg sbb insl jo std xlat jp (bad) fcomps xor pop sub adcl push addr32 fildll jge pop jle jge movsl sar int mov mov sbb (bad) out mov rex rex.RXB imul adc int iret outsb add mov pop sub ja add (bad) push mov lods mov (bad) imul pushq pop mov imul cmp mov (bad) rex.WXB add loope pushq rex.XB jns,pn movabs (bad) and and movabs fstpt sub jg mov (bad) je pop add movsb or cmpsb push lahf cltd mov (bad) pop movabs (bad) (bad) jns loope in (bad) lret mov pushfq pop and push sub pop lahf xchg and movabs (bad) sub rex.WR fwait movabs (bad) cld pushq (bad) (bad) (bad) imul hlt out jle push cmp sbb xchg and (bad) sub (bad) sub push movabs or sbb test out jp fisttpl jo sbb rex.X mov adc fucomip (bad) sar movabs sbb pop lods (bad) jg pop rcrb out callq iret rex.WRX xor fisttpl addr32 out (bad) shrl xchg rex.XB fsubp mov mov rcl leaveq pushq (bad) ds push mov pop fcmovnbe orb outsl adc rex.WRB fisttpl sub push mov jae and jl rex.B lock cwtl (bad) pop test xchg mov movb je mov add iret (bad) mov scas vaddsubpd cmpb sbb pop (bad) jbe int outsl imul jmp push add jae popfq mov enterq lea fwait and jle mov and (bad) mov movabs fs rcrl ss fstl xor loopne (bad) xchg or fisubl mov add and mov and (bad) push (bad) and mov scas (bad) pop stos test and imul mov add push (bad) (bad) scas (bad) mov rex.WRXB (bad) jae stos and fistl test add sbb or (bad) lods ja cwtl scas sbb pop jbe int3 pushfq fwait xor iret and (bad) cmp (bad) xchg (bad) ds adc (bad) rex.WB fistl (bad) push cmp stc test rcrb cli getsec insl add cmp sahf rex.RX rex.RXB movabs fwait cmpb sub (bad) (bad) minps mov (bad) mov (bad) (bad) mov push or sub fistl or pop pushq push and fidivr rex.WRX fildl (bad) cli rex.RB sbb mov fcmovne cmp add xor xchg cwtl lea out mov gs pushq jle rex.RB sbb out mov and (bad) testb cmp movabs jl icebp lea mov int3 push jp mov neg stos scas (bad) cmp and jg bswap cmp adc nop (bad) jg rex.WRXB movabs mov lods movslq (bad) mov jno fwait cmp or rex.WRX retq in jns mov add insb and test lret scas sub (bad) pop adc (bad) push movabs sbb pop incl movabs rex.WR rex.R jno sbb sbb (bad) test (bad) out incl (bad) clc es (bad) outsb sbb (bad) add lret lcall jg (bad) and ss lret shlb xchg out jrcxz rex.RB in mov (bad) movabs stc jl pop imul push mov fisubl (bad) xchg cmp or insl je out movabs rex.W jl xchg movabs movslq jp adc nop addr32 outsb mov rex.WB (bad) stos sbb xchg pushq xchg xor (bad) mov xor ds xchg rcl cli add xchg (bad) sahf push (bad) (bad) rex.WB pop scas xor movabs popfq out movsb repz pop push iret or jo fldt rcrl pop scas cmp mov (bad) mov pop movabs pop test (bad) or sbb retq adc push data16 cmp adc notb out sub mov (bad) retq lods jge push (bad) or mov and lret sbb (bad) and test fs nop rex.RX push (bad) lahf fmul fwait xchg pop rex.XB sbb pop pop pop rex.WR jns mov (bad) sahf (bad) shlb pop mov je mov jrcxz rex.RB fwait ds ficompl sub not xchg int3 imul movslq jl mov sbb rex.WRX cmp movslq adc xor fistpl loopne fcmovne outsb retq jb mov mov outsl mov in sub fwait retq (bad) cmp (bad) fcmovnbe rex.XB addr32 jmpq cltd gs mov js jnp sbb loopne adc in mov mov pop addr32 out movsl (bad) ja pop rex.RB xchg xor cmp (bad) (bad) fistl jmpq dec int int jne fadds fstpt push xchg rex.WRXB (bad) cli rex.R lret outsl sbb (bad) iret sub mov cwtl mov fsubrs sbb out xor repz (bad) sub fdivrs cmp hlt fnclex mov sbb lock stos xor sbb jb test jg (bad) outsl in fwait mov rex.WB jae (bad) pop (bad) scas int3 cmp fs cmp xor jle fildl or sahf movslq jle pop adc sbb leaveq (bad) rex.WRB sub test notb rcrl rex.RXB xchg fldt rex.X mov in loopne (bad) stos ficompl sbb outsb jp mov stos mov (bad) mov outsl fwait fs cmp xchg rex.WRX (bad) mov rex.XB rex.WXB (bad) retq mov rex outsl mov sbb (bad) nop sbb jae rex.WRXB jbe lods cmp fistl in add lock pushq stos cmp xchg mov fldt icebp cmpsb adc cli mov mov jmpq rorb cmp xlat or xchg and out in fistpl mov shlb push add (bad) push cmp xchg andl (bad) movsb rcl in jp pop ss test adc fisubl fwait rex.RXB fsubrl in rorb mov addr32 add rex.WRX mov mov (bad) data16 push jl mov xchg fistp pop mov je jns push subl test gs lods rex.R test mull fxch enterq fldt js rclb and mov push fcmovnbe rex.X fisttpl retq imul (bad) (bad) mov fisttpl in sbb adc xor and or lock movabs mov fbld rex.WR fldt clc add (bad) xor loope mov mov sarl movaps in (bad) jb rex.R rex.WB sub fbstp shll (bad) test sbbl out adc test repz cmpsl xorl jne (bad) sub mov fcmovnu sub retq neg adc jbe (bad) sbb pushq rex.WR jg fisttpl andl popfq (bad) fisubl fnop cmp int adc sti retq xor cld mov (bad) pop in loop adc insb fnclex xor rex.WR (bad) test adc or mov retq and push (bad) loopne add cmp jne cmc xlat int (bad) jge (bad) fwait mov retq cmp rex.WR callq jmpq mov icebp xlat cmp rex.XB sarb push fwait (bad) mov xorq jp shrl rex.B jno add cli pop pop xlat xchg movabs test in mov adc cmp xor imul int3 mov cmp jnp js ss jge rcrb sbb enterq mov mov sub (bad) jle rex.WB rex.WX lock stos mov mov (bad) movabs mov and retq cmp push popfq frstor mov jg xchg (bad) or jnp jle (bad) mov jge pop hlt sahf xchg rex.RB rex.WXB movabs (bad) add iret jrcxz je rex.RB and adcl out icebp fwait scas mov out pop rex.XB cmp (bad) xchg leaveq mov cmc (bad) rex.WR fistl (bad) rex.WXB in xlat jno pop rex.X add mov rex.WXB mov jne cmc out pop cmp rcr sbb (bad) fistpl push sub fcmovnu iret jg out push adc pop adc (bad) scas mov mov cld ja push sbb movabs cs fildl shl outsl fstpt icebp xchg push or add (bad) callq (bad) callq shrl in and imul (bad) mov rex.WXB fldt (bad) jo fadd xchg (bad) sub mov xchg movslq sbb pop fcomi cmpl fistpl add pop push int (bad) retq add (bad) scas add rex.RB rex.WRB movabs pop cmp xor xchg pop outsb xor and in test insl repz mov push cld rex.WR (bad) mov stos mov xchg or and outsl and stos jbe fisttpl lods ds (bad) test push (bad) adc mov push (bad) pop shlb xor in or callq (bad) cmc popfq fistpl icebp pop sbb push rcrb cwtl test adc scas push imulb jmpq sub pop sub sbb (bad) mov rex.WR pop (bad) pop push add sti xor cli sub xchg movabs (bad) (bad) rex.WRB xlat pop mov add movslq bnd data16 sbb shlb mov rcll adc (bad) sub rex.WRB and sti push stos imul stos push adc xchg movabs push cmp rex.RX pop add (bad) pop pop or fwait sarl (bad) and shlb or sub std sbb add xchg cltd jne xchg and lret (bad) rex.X push adc cmpb (bad) or out imul pop in fdivs pop xor loop cmovo rcrb jns js pop mov xchg xor cmpsb jnp lods and rex.XB mov add lahf (bad) jae (bad) mov add icebp rex.W loope cmpb cmp rex.WRB and push rex.WR xchg jae sbb (bad) sub rex.RX cmp test sti sub mov sbb (bad) int sub in xchg xchg (bad) mov fistl or mov (bad) xor push or cli stos cld or out leaveq repz enterq ja sbb add sbb shll lret retq lea sbb (bad) pop jp (bad) out jb packuswb rex.X jne xchg movb rex.R (bad) movabs sbb cmpsl adc sti sub (bad) rex.RX sub (bad) out sbb sub rex.RB mov pop rorb ficoml rex.WX xor lahf add ss rex.WRX (bad) and adc rex.W int mov iret addr32 test (bad) cmpsb (bad) push (bad) out mov vunpcklps test push xchg or (bad) pop addr32 rex.WRB js (bad) fistl sbb or rex.XB cwtl sahf (bad) hlt (bad) rorl cmp insb jno cltd ss mov adc jae fucomi jo mov fstpt mov xchg test xor mov jb fistpl jns cmp outsb fildl xor bswap neg xchg mov push or xchg mov imul or cmc (bad) sar push stos push js sbb and or sub shlb rex.WR jmpq test fisubrl jl mov (bad) icebp sub fistpl sti lret (bad) js cmp fildl xchg cli rex.W push mov (bad) cld stos movabs (bad) jmp fildl xor adc jnp (bad) out loop,pn fs (bad) scas ds pop cmpsl leaveq (bad) retq movsl adc pand (bad) ffree imul (bad) jbe sarl int adc jmp lret int3 cwtl fs (bad) iret mov cs mov mov pop popfq iret jb or adc stos and rex.W add iret pop or add js fistpl movsb (bad) rol scas imul pop sbb lret sbb imul ds movabs scas in cmp jb movsb jle adc mov rcrl mov (bad) push enterq (bad) jno pop and rex.X pop xor xchg fwait jp movsl cmp mov and or pop hlt pop cwtl mov mov mov mov rex.WR outsb addr32 stc rex.RX sbb mov pop jae int3 lret pop add fiadd rex.WB shlb es repz loope int3 and push rex.XB lahf pop out movsb mov pushq iret xchg outsl fistpl imul (bad) sbb fcmovne add retq (bad) mov (bad) test (bad) rex.W cltd (bad) xor sbb sub adc jp xchg (bad) mov (bad) fisttpl or rex.R adc sub add fnsetpm(287 add (bad) xchg rex.XB jb sarb sub (bad) xor jno fildl movabs xchg loope clc (bad) jnp fidivrl adc imul xchg push retq pminsw mov addr32 rex.RX mov fildl jno mov mov cmp jae jmpq mov or rex.B cmp mov push rex.RX jo cmp fstpt repz (bad) js (bad) pop add or xor enterq loope rex.B push (bad) (bad) (bad) cmp leaveq push sbb jl sub (bad) scas lret (bad) int3 (bad) sub jns sub push retq push pop (bad) mov cmp sahf add insb (bad) cmp (bad) jns not es mov pop cmpsb mov scas rex sub test out in cmp push stos mov cmp movsb cli (bad) jmp nop fistpl add pop mov stos rex.WRXB rex.W mov pushfq jns add add fcmovnbe (bad) movsl sti imul jp add rex.X adc pushq or stos mov sub or repz in jl mov cld fistpl jbe adc (bad) sub rex.WRXB pop xchg loope (bad) (bad) or sbb add mov mov std icebp push pop mov imul or push jnp pop mov retq fwait sahf jnp rex.RXB fsubs stc pop jge xchg xchg (bad) sbb mov gs fcmovne stc gs pop add fstpt xchg ficom rcrl xchg fcoms lods lret mov sbb (bad) movsb pop fstpt mov push adc cmp mov jg retq xchg jns adc rol retq rex.WB fildll xor push leaveq (bad) lods (bad) mov stc xchg out jo cmp rolb movsl mov (bad) pop data16 cld adc lods mov mov jmp mov cwtl and insb mov mov cmp movabs jae stos enterq fwait or push loopne in repz mov pushfq xchg jmp sub mov lret orb movslq lods push pop jbe rclb xchg cmpl (bad) out in movabs cs gs cli sbb bnd sbb jp pushq pop and pop stc push cmp or hlt pop fnstenv faddl xchg cmpsl movabs movabs repnz mov xor xor jb or out int ja (bad) (bad) repz xor mov mov xchg clc pop (bad) pop scas xchg (bad) mov and fwait adc mov jmp rex.WRXB rex.WRB add shrl pop pushq rex.RX lock fimul adc fnstcw xor (bad) rex.WRB cmp out sub mov rex.RXB retq fstps jbe xchg out jp rorb addr32 or and adc cmp rcr pop es pushw xlat lock (bad) push test rex sub pop (bad) or jne cmp notl jp cmc rex.WB repnz fxch shl (bad) stos adc jmpq xor stc add lret loope loop lock test push iret fidivl lods push cltd rex.RB lret movabs (bad) sub data16 int3 rex.B fs rex.RX fldenv fcomip fcmovbe cwtl adc adc xchg movslq mov callq (bad) mov add (bad) jb jo fdivs enterq popfq jl mull jb pop xor and sub and retq mov vxorpd mov jle mov scas and rex rex.RB loop or rex.XB pop (bad) sahf sub out jge jae xor adc xchg (bad) sti adc mov lcall test or xor pop jns push cmc cld pop jb push ds push out je outsl loope and jno lret sbb push push (bad) cmp add int3 adc in mov mov mov push lods cmpsl xchg cltd pushq sub xchg rex.W mov clc leaveq icebp mov fcomi sub stc movabs cltd xor cld mov adc xchg loope rex.WXB add out lea adc push mov icebp iret fistl movsl and rex.RXB sub repnz test rex.WR sbb fucom sbb xor adc sub fildl (bad) push rex.XB movsl fisttpl scas push ficoml (bad) movabs (bad) (bad) mov test fwait rex.W pushq stos (bad) movabs rdpmc push xchg pushq mov fndisi(8087 insl mov fisttpl cld iret (bad) fcmovne and movabs pop jnp cmpsl push sub test adc fwait leaveq lods rex.RX movabs stc adc jmp out sti mov (bad) (bad) fisttpl mov shll (bad) ficomp pop in addr32 mov pop jg sub pop adc mov (bad) sbb int js cmp pushfq rex.WX rex.WRB out (bad) lods mov enterq mov rex.WRB cmc out mov pop lods stos and popfq sbb lock mov xchg test pop int3 rcll sub (bad) mov fistpl loop stc jrcxz rex.R or add mov add jle pop stos xor ja xchg (bad) (bad) (bad) cmp add in fildl retq (bad) movsb fsub int3 popfq push rex.W fstpt test (bad) jl jo and pop cmp or (bad) fnop adc stos (bad) stos cmpsl sub fdivr mov (bad) pop pop pop imul (bad) adc rex.X movabs loop sub jns xchg add mov fildll stos cmp lret movabs cmc cmp nop xor shr mov cmp adc fneni(8087 add sbb push fwait mov popfq sbb rex.RB fmuls mov cmpsl (bad) leaveq xchg (bad) clc cltd pop xchg js pop enterq push xchg rex.W push adc data16 outsb loope lret cmp loopne int jg or movabs movabs out mov cmp mov fcomi (bad) mov jrcxz sbb fnstcw sub loope sub (bad) jge jl push rex popfq push pop xor div (bad) jae (bad) (bad) (bad) out cmpsb jrcxz jb sti cwtl adc (bad) add xchg or jp mov callq out pop cli adc jl or add fcmovnbe stos fcoms fistpl rex.RB fildl sub (bad) push or (bad) scas xorl and adc sbb test shrb add xorl mov (bad) rex.RXB gs imul or fistl fist sub mov pop adc fisttpl cmp mov pop in cltd sti fdiv mov cld (bad) neg in pop mov iret rex.B cwtl fistpl xor (bad) cmp xor jbe pop rex.W add xorl stc (bad) mov fistl jnp cli nop (bad) (bad) push (bad) add mov sub test not pushfq movslq iret lret rex.XB stos (bad) mov fcmovnb or mov xchg adc xchg fwait rex.B jae xor outsl popfq rep (bad) (bad) je shrb jo (bad) pushq ja xchg mov xchg scas push movabs retq xchg push jnp add cmp (bad) pushq mov (bad) mov cltd xchg rex.WB adc ja jne in in (bad) retq sub cld add sbb cmp push outsl (bad) js rex.XB xchg fnstenv lret insb pop jle mov lods rcr mov add rex.XB rex.X cmp add cwtl xor fistl mov pop mov pop (bad) rex.RX fucomi adc pop add (bad) jrcxz add sbb stos xlat cmp add shr add stos rex or bnd xchg hlt movabs (bad) idivb (bad) mov loopne out rex.RXB ss or lahf icebp movabs mov sbb pop jo cmp push and stos jne and addr32 jp or (bad) cmp rex.RB cmpsb rex.WXB rcll and mov (bad) mov (bad) cmc add and lea and add mov imul mov stos cmp scas cwtl mov (bad) iret sbb cli movabs je (bad) stos mov pop retq subl negb int andb and int3 or (bad) fwait sti int or mov fisttpl push adc (bad) xchg cs pushq xchg xlat (bad) fisubr ja add (bad) jno int sbb sbb jp fisttpll push pushq add cmp (bad) pop (bad) rex.WR cmp retq rex.WX (bad) mov fildl jmp and (bad) lret (bad) iret shrb enterq rex.XB out cmpsl addr32 int pop jmpq push imul stos (bad) loop xchg movsl mov mov mov rcl cmp mov (bad) fistl xchg cltd imul (bad) jmp int3 adc (bad) (bad) mov fstpt xchg rcr (bad) sbb and mulb sti (bad) rex.WX (bad) cmpsb fwait push sub add rcrl ja fldenv push popq std fs jnp cld add (bad) pop or sahf adc leaveq sarl rex.WXB adc mov push (bad) xchg loopne,pn rcl lock in callq mov rex.WXB fs rex.WRX jae scas idivb (bad) push cltd retq data16 insb xorl (bad) pop test repnz xor sub out jnp (bad) ja int push out and mov mov rex.WRX fnstenv mov mov cmp pop (bad) mov pushq lods cmpsl sbbl adc (bad) push xor mov rex.W pop insl fwait jae (bad) ffreep pushq stc add or (bad) sbb mov sub cmpsb outsl xor enterq out jnp jmpq adc mov test xchg pop (bad) pop pushq jns (bad) divb push (bad) insb mov nop sub sbb and (bad) std mov mov mov pop cltd fs and xor fsub jrcxz mov sub push ficomp and pop (bad) cmp rex.WRXB nop rex.WX jl movabs pop add std xor mov push sub cmp std rolb xchg shr jb sbb jae rex.R mov mov stc mov (bad) cmp pop fdivl mov (bad) lock mov pop rex.WR mov sub mov cmp rex.WRXB and rex.B iret add or add pushfq (bad) loop repz sub (bad) loop iret rex.WRX sbb or add callq add (bad) (bad) sbb xchg pop mull lahf mov enterq (bad) rex.WXB out sbb fadd jge fcmovnb add (bad) xchg adc rex.X cmp repnz cmpsb (bad) add rex.WR (bad) mov rex.RX repz cmc push rex.WRB movabs and jle pop (bad) orb test rex.B fisttpl adc (bad) rex.WRXB (bad) movsb push loopne (bad) movsl fisttpl rex.WR mov adc rex.WXB lock or repnz insb (bad) jnp loope mov in fstpt scas xchg push xchg jno fldt jmpq cli pop in es or icebp pop movabs repnz xchg sti repz rex.RX loopne sub jnp retq jo fldt or or push movabs pop push sub rex.WRB test adc mov pop cvtpd2ps pushq mov cmp int3 cltd (bad) jmpq ficomp pop movabs neg ss lahf xor fwait jl iret pop out (bad) xchg fcmovne clc imul and out leaveq (bad) outsl scas int3 (bad) cmpsb sub hlt and fcomps rex.R scas mov pop push (bad) shlb fiaddl int3 neg rex.RX (bad) loope (bad) and (bad) jae xchg fwait rex.WX (bad) (bad) pushq jb insl (bad) pop xor movslq imull (bad) shrl fisttpl jne sub (bad) in or pop rex.RX pop push fcmovne xlat leaveq push (bad) jl loopne (bad) and nop test pop sahf push lret cmp rex.WXB xchg jg nop mov fmul insb adc push lods rolb pushq sbb movsl fs (bad) repnz sar push rex.WR imul jge rex.R repnz sbb jmpq fcmovne jmp or test cmp cmc lock rex.X xor mov rex.WRXB and hlt fcmovnb xchg pushq jg lcall je lret jno jle jo cmpsl xor jne adc adc (bad) cmc fnclex out add or sub rex.RXB mov sub xor incl invd cmc rex.WR mov cmp fcmove mov jb mov rex.RX repz or gs and xchg pop and xlat cmpl xor jge push movabs mov fistpl addr32 jbe jp rex.WR (bad) add fwait movslq push push jge (bad) mov lock out in (bad) cs rex.WRX scas negl adc imul rex.WB je pop lret push mov cld movabs sub pop or lock movsb ds movabs pop ja std rex rex.WRX popfq cltd lahf cmp movl adc push fwait (bad) xchg lret push enterq fistl rex sub pop xchg pop (bad) pop (bad) jo jb mov (bad) (bad) fs add lea loope cli cmc (bad) pop fsts or cmp imul jle push adc (bad) (bad) adc xor mov cld or mov jbe mov lahf xchg xchg jnp add (bad) xor mov (bad) in jo xchg imul nop push mov (bad) in rex.RB rex.WX movsb (bad) (bad) push clc in or sbb jle xchg mov fwait rolb fs mov fistl leaveq rex.RB rex.X rex.XB sbb (bad) fidivr or pushq ja cli jge stos fidivrl rex.WB add xchg cwtl scas jl pop adc jge mov (bad) xchg out jno mov lods xor repnz xchg push mov retq jae jb (bad) cmp cwtl fistl repz sbb gs push icebp pop retq mov loopne pop sbb and sbb (bad) movslq (bad) and and movabs lods cmp rolb (bad) fcmovnbe sti (bad) and adc (bad) fldt mov repz fadds data16 jbe add sbb mov xor int3 ja (bad) mov sub mov mov in xchg cltd mov lret addr32 cmpxchg or (bad) rex.X sbb rex.XB rex.WX cld fucomi sbb xor push pop rex.RB lock lret sbb outsl ficompl mov rex.WRB movsb mov cmp xchg (bad) cmp rex.R rex.RX xor rex out js mov pop jge rex.X rex.X ja shrl pop mov xor imul (bad) or sub add adcl fistpl cmp rex.WR add stc cmp iret loopne mov adc cmpl jle mov jo stos pop pop sub je movabs and add fildll fisttpl add shrl jo pop mov fildl rex.WRXB fstpt xor jnp rcrl pop add and jmpq fistl (bad) (bad) push mov in cmpsl rolb test fisttp loop outsl xor (bad) mov jnp jns rex.RX pop jne icebp (bad) sub (bad) pop lea (bad) adc cmp fisub mov stos fisttpl push adc rex.WR imul rex.X fsubrl mov pop (bad) mov sbb (bad) lea mov cmp mov movabs scas mov pop jnp or (bad) mov (bad) lock or idivb rex.WRB mov jle adc rex lret xor pop sti (bad) (bad) jbe sahf retq add pop in xchg jnp repz jbe clc sar sbb (bad) in mov sarb pop (bad) or jns fistp mov or (bad) pop fisttpll xchg hlt cltd cmp iret mov fist mov (bad) add sub movabs jrcxz fcmove (bad) mov pop movsl (bad) cltd (bad) imul jb (bad) pop scas (bad) xor mov and mov out mov xchg sbb mov cmp int mov and in ds mov test (bad) pop (bad) xchg lods sub adc rex.R fistl and fistl or fnclex cmp jmpq repnz test sub fiaddl push lods movslq pop (bad) add fnclex xchg cmp movsl js mov fucomi (bad) xor fistl (bad) dec xor mov and jns jae movsb pop enterq rcr push lret loop subl test xchg and out and (bad) jrcxz lret push jle pushfq insb jnp (bad) mul push or movslq fneni(8087 jbe repnz test fildl jae movabs rex.WXB adc sbb ss and push out leaveq cmp (bad) jnp sub (bad) adc out (bad) fildl lods xchg outsl xchg cs fstp lock rex.RXB rex.RXB rex.B rex.R push rex.RX cmp xor leaveq or test jnp fmull in sbb xchg xorb data16 and movabs (bad) push (bad) (bad) pop cmp pushfq add rex.WRB fisttpl stos xchg (bad) and pop fs fildl push stos xor push mov adc (bad) mov fildl mov (bad) std scas mov pop loopne int3 (bad) (bad) adc push xchg pop (bad) in jae,pt or (bad) mov pop rex.RXB mov (bad) rcr pushq jmp rex.X enterq sub xor xchg (bad) cltd cmp (bad) xchg rex.XB mov in movabs cmc jrcxz rex.WX rex.WRB data16 adc cltd jle sarl fdivrs fstpl xchg int3 jg lahf rex.X ljmp xchg pop (bad) ja mov imul mov xchg outsl xchg xchg mov lea cmpsl std sub out imul rex.WRXB movabs pop jl xchg (bad) push pushq (bad) cmp xchg xor pop in cmp mov frstor jl (bad) rclb or hlt fisubr (bad) lods mov (bad) cmpsl ds or xchg jg pushfq xor add and hlt movabs xchg sub movabs push insl add (bad) rex.WRX movabs test cmp and gs rex.WRXB jmp rex.RX (bad) jbe pushq mov retq sbb (bad) pop pop test iret and mov mov adc lret xor pop xor (bad) mov rex jne pop rorl xchg mov (bad) xchg insb addr32 fistl retq (bad) (bad) test xchg cs pop mov xchg (bad) pop cld (bad) push lret push imul rcrb (bad) add loopne sub rex.XB cmp jo in xor frstpm(287 test jg movabs mov (bad) loopne mov movabs mov add fstpt add pop rex.W jae movslq fildl fild cmp fisubr fcmove fwait addr32 and mov sbbl je (bad) (bad) mov insl imul mulb leaveq rex.WRX in test (bad) movsb (bad) fisubrl cwtl cld imul and xor lods or (bad) xor (bad) (bad) loope orl lock popfq rorb lret xchg jrcxz orl je xchg fstp (bad) xor xor and mov and fcmovne mov enterq mov nop (bad) mov mov rcrl xor movabs mov pop stos sub mov pushfq or rex.WXB cld out jno imul lret loope lahf push or (bad) (bad) fs mov lods rex.WXB int3 mov fwait mov stos loopne pop lock (bad) adc (bad) test rex.WR (bad) sbb orl cli push mov scas stos (bad) rex.WRX int rex.WRB rex.X jmpq and pushq movabs adc mov pushq rex.WRXB sbb pop lahf ja repz repnz xor gs cwtl rol and xorl lock repnz (bad) push cltd ja sub jg mov rex.RB pop lea (bad) ror scas sub (bad) push movsl jo fcmovnbe sbb fcmovnbe ficoml stc sub cmp (bad) lock mov imul xchg rex.WR stos cmp sarb repnz pop cvtps2pd and (bad) sbb js sbb push pushq scas addr32 fistp ss and movabs fwait sbb sub (bad) pushq (bad) (bad) lock enterq fucom loop xor (bad) xchg fwait (bad) fcoml mov stos loope mov (bad) lods lea movabs data16 enterq (bad) and push xor sarl out sbb jne int movabs (bad) jrcxz cmp jb test add (bad) retq jns cmpsb (bad) data16 fistl xchg std movsb retq adc loopne idivl rex.XB jge adc cmp mov mov xor sahf jrcxz in and movslq adc mov (bad) jae add and fldt lods (bad) jmp xor pop mov pushq or and mov fisttpl (bad) rex.RXB rex.RB rex.WXB sbb sbb gs add jne xor xlat sbb add xlat and pushq fcomi rex.WXB or repz movabs (bad) int3 mov scas cmc or (bad) jg rex.W int3 movslq (bad) sarb rex.WRB pop fwait rex.B mov jno sub (bad) and (bad) (bad) cmp push add xorb add (bad) rex.WRX cmc out rex.B outsl push add (bad) fcmovne lock scas mov loopne cmp ds cld xchg mov push cmp mov in sbb js mov lods out sub cmp jmp sub or fstpt fs lret xor mov subl insb lahf fisubl adc (bad) (bad) (bad) mov xor rcll (bad) xorl (bad) sbb std pop (bad) in (bad) rex.RX in cmp mov push stos imul (bad) or andl and mov (bad) lahf repnz pushq mov fs rex.WRX mov xchg rex.WR sbb popfq (bad) rex.XB rex.RB pop (bad) pushq mov loope pop rex.WRB add (bad) cli pop imul (bad) rex.X adc leaveq fcmovbe pop shll movsb mov cmp iret xorl add sbb mov fwait xchg rex.WB mov test insl movslq movsl rex.WXB and fistp outsl lahf (bad) (bad) rex.WB cmp xor out cmp jnp pop loop std pop fisttpl retq mov (bad) jb mov fisubr and loope rex.X (bad) sti pop test (bad) jbe mov rex.XB repz stos rex.RB pop mov subl and movslq (bad) mov and push sbb testl sub adc rex.WRXB movabs push mov (bad) add push (bad) stos push or lahf xchg jg out push retq sub cmp out sti or cmp pop jne icebp and mov push fwait jp imul xchg push rex.WRX jno rex.WRB (bad) or pop jp jae pop push push cmp in stc cmp sbb iret sub xor movabs jmp (bad) or or test jno jae pushfq push cwtl and cmc (bad) out push fwait cmpsb add fmuls rol clc nopl fs rcrb rex.WR insl sub fwait mov fistp mov rex.RXB sbb testb pop and mov (bad) addr32 rex.R (bad) (bad) fcmovne push (bad) cltd and (bad) mov retq jrcxz jle (bad) xchg repz rex.WRXB lret or xchg (bad) or (bad) pop xlat fs rex.WB push adc adc (bad) (bad) lods adc (bad) in loopne and (bad) mov add jb cmp and fistpl lret or mov xor (bad) and sub mov sti (bad) (bad) mov imul add cltd shrb fistpl mov pushfq loopne rcrb push outsb jnp data16 mov fistpl movsl cmp rex.X sbb gs fistpl (bad) cmp iret rex.WRXB rex addr32 (bad) pop callq imul fistl (bad) add imul (bad) idivb mov data16 or mov or or fistpl rex.WRXB (bad) add pop xchg mov fistpl jl and fwait cmp (bad) in pop (bad) fiaddl cmp adc cmp test jmp repnz cmpsb mov (bad) fidivl xor out cmpsb je push fildl (bad) enterq fldcw mov mov fld pop (bad) mov movsl jnp sahf movsb sti cmp pushq (bad) jnp mov push in adc or push out and sub fstps jnp (bad) jbe pop fs lret jp loope fwait rex.RXB pop sarl shrl xor or roll cmp (bad) xchg (bad) jns mov iret rcrl push sbb rex.WRXB movslq or fistl or adc ror lods mov out ds sahf pushq mov jmp push stos movsb mov (bad) xor (bad) js mov (bad) int (bad) rex.W enterq lods (bad) (bad) int (bad) fwait repnz out cmp cmp (bad) loope fwait cmp incl (bad) movabs movabs int3 sti pop enterq adc subb rex.WR rex.WR (bad) fcompl jo loopne icebp rex push and js rex.B rex.WB mov xchg rex (bad) (bad) jmpq std adc jg push rex.RX push int3 (bad) (bad) movsb (bad) repnz xchg (bad) rcr mov test mov fcmovnb (bad) adc (bad) sub testl clc rex.W rex rex.WRB (bad) cli mov pop cmc fildl (bad) (bad) ficompl hlt out push sub push (bad) sub sbb test loopne (bad) stos movslq mov sub and (bad) stc popq fcmovnbe test jnp pushq insl jmpq (bad) out or cltd ds or xor movsb xor (bad) fs leaveq gs js movabs rex.WXB rex.WB rcrb enterq sbb mov es cltd fwait test gs cs jle sbb jae test xor gs push jrcxz sbb negl (bad) out sti in in jnp loop mov repnz mov imul pop in (bad) sub rex.RB pop push xchg cmpb mov or and jrcxz clc out addl vunpcklpd rex.W sbb mov xor add xchg and pop js rex.X (bad) (bad) mov (bad) loope movabs iret lods rex.WX (bad) pop xchg xchg mov pop (bad) ja,pt (bad) jmpq outsl rex.R lret stc rex.R mov fdivl sti jb xor mov jge (bad) pop fdivr xchg pop stos pop lods cmp (bad) movsb xorl jne nop test or jmp (bad) (bad) movslq fisttpl mov adc fistl and push add rex.XB jb (bad) ss (bad) mov (bad) stos pop xor xchg xchg mov movabs (bad) rcr lock pop fisubrl rcll and (bad) rol enterq jle (bad) ds adc movabs jmp fnsetpm(287 cmp (bad) and adc jle loopne pop fldt mov (bad) mov pushq (bad) fistl adc test (bad) jns fldl rex.W adc fldt push (bad) fucomi cmp fwait or or fcmovne (bad) pushq jle adc xchg movsl jbe fcomi jnp adc and fistpl stc and (bad) (bad) movsb fstpt cmp mov jae cmpsl push mov sbb (bad) xor scas idivb test lock xchg retq sahf sbb xor fwait repz test retq (bad) cmc fldl pop in jbe vmread cltd and (bad) loop sbb not mov shl cld ja cmp push loopne imul rex.RB es ficomp xorb stos rex.WR (bad) sarl jae and (bad) or fistpl rex.X (bad) jl push repnz in fwait xlat adc push xchg out sbb fcmovu sti adc adc sar (bad) add ja movslq imul and sbb push rcl (bad) jg push sub xor xchg mov sti or rol or nop (bad) fucom mov (bad) (bad) push mov outsb jne clc adc xchg push sbb add xchg nop jne and movsb adc std mov cmp iret rex.WX push (bad) fdivrp iret (bad) push cltd rol mov (bad) sub gs push and xchg data16 xchg rex.WB adc or cmc mov rex.WRX imul cld (bad) cs sbb loope mov fdivr lahf leaveq data16 cmp push (bad) scas (bad) repnz rex.WR ss (bad) sbb (bad) or mov (bad) push (bad) sti rex.RXB adc movabs mov pop mov cwtl (bad) jo jb (bad) in (bad) add sub (bad) and outsb stc sub cmp xchg cmp movsb loope rex.WB ss sbb loop (bad) fcmovnb add mov pop jbe mov pop rex.WX outsb (bad) xchg std imul out fistl cs cld scas (bad) cs test fwait jmpq fnop popq (bad) mov pop cli and stc jmp int3 outsb push mov int xchg sbb orl push in mov rex.W push iret jmp jrcxz and (bad) fcmovnu fadds adc jae sbb ja cmp fcmovne retq push enterq ds pop adc mov fimul divb fildl std stos (bad) sub jo sub mov rex.RB movl js fistpl test rex.WR int3 pop ss or mov adc enterq (bad) mov push rex (bad) fimull rex.WRXB mov scas fisubrl and imul movabs in (bad) mov (bad) lods (bad) pop (bad) add mov loopne js rex.X insl (bad) insb sbb addl cld jo or mov (bad) outsl cld lret imul sbb pushfq sub (bad) rcr (bad) cmpsl pop pushfq or loope mov scas rorl scas mov out (bad) rolb lret cmp rolb fstpl iret add xchg or sbb sbb and pop rex.XB fidivrl xlat repnz mov pop pop or leaveq (bad) out mov in mov lock fistpl int3 cmp fmul mov xlat in rex.WXB repnz lods scas andl fcmovnb sub rorl and out mov jns out insl test pushfq fistpl rex.RXB and xlat xchg fistpl scas (bad) movslq xor pop gs jae outsl fldt sub xchg pop loop (bad) xchg (bad) sahf rex.WRB xchg pop fcmovnu movabs (bad) adc data16 mov pop xchg (bad) cmp rex.R jg and xor outsl add fisttpl and rex.X push gs xchg jp rex.X outsb jrcxz rex.WB loopne (bad) (bad) rex.WB mov jge cmp and (bad) sbb push pmaddwd lahf ss test sub stos fidivrl push movabs callw push mov xor pop cmpsb jo add rex.RXB ja je (bad) xlat test orb (bad) fmulp or imul (bad) fildl (bad) rcll pop (bad) or cmp lea push int (bad) out adcl mov mov adc pop movsb mov pop pop pop xchg xor int cmp cmp int3 neg xchg scas pushq (bad) jle fistpl (bad) cmc pop cmp jrcxz pop mov jp sub imul (bad) popfq and ss outsb sub sbb fucomi lret rex.WRXB ja mov mov rex.WR retq push pop rex.XB jae (bad) cld fld in or sub fistl movabs (bad) (bad) jnp in mov rex.WX fildl sbbb mov adc mov mov retq jle cmp xchg or (bad) push loope or jb (bad) mov retq (bad) out rex.XB (bad) int mov sub add insb and sbb mov es repnz shr in push mov lret icebp pop and cmpsl mov (bad) retq lea mov movabs test mov or ss cvtdq2ps mov rex.RXB xor mov imul fcomi mov and pop in fisubr fwait rex.B icebp fldt jae (bad) out incl retq xor cli rex movsl movslq out fnstcw movslq cmp repnz jae (bad) pop xchg movabs ss cltd or (bad) test fsubrl fcomi lea or (bad) xor adc leaveq mov (bad) cmp (bad) imul (bad) fwait pushq (bad) xlat xor rex.WRX mov adc in fcmovnbe (bad) rex.WRB add sub sbbl es mov xor fdivrs rex.WRXB rex.WRB cwtl push movabs fwait jge std lret pushq lea jrcxz stos in rex.B jmpq (bad) sub mov fcomi popfq mov adc pushq stos push jno (bad) cmp movabs rex cli ror sbb mov lret sbb mov rex.XB (bad) (bad) movabs out mov mov mov rex.B cmp (bad) loope leaveq loopne and fstpt jae adc sbb mov pop rclb sbb (bad) (bad) xor sbb rorb fidivl movabs and decl push pop pop cmpsl cmp movabs pushq pop xorl push rex.X (bad) jnp (bad) cld (bad) and fistpll and iret adc rex.RX es js mov clc adc fldt rex.WB fcoml jne jg mov xchg fstpt cltd sub and mov shrb pushfq mov sbb int3 retq hlt sub mov xlat push push lret (bad) sbb mov or pop fldt xor pushfq outsb cld iret (bad) test jg rorl popfq int3 jns mov test xchg fcmovnbe sub (bad) sti pushq mov xchg sbb sbb pop (bad) xor stos rex.B fwait pop xorb movsb jrcxz mov test std mov xchg jrcxz adc scas jg fwait out mov xor (bad) pop mov pushq xlat mov push xlat add push xor rex.W cs fnop fiaddl ja cmp retq pop and test pushq je (bad) hlt mov jbe xchg xchg jle scas test sub add mov cs cmp cli movabs adc enterq (bad) sbb addr32 pushq pop mov jae jge jnp pop fbstp jne cmp (bad) push in push (bad) xor jle cwtl or rcll fcmovne add movabs xor jge (bad) movabs and mov (bad) pop fistp xchg (bad) andl in negb and rex.X rex.WB rex.WX vpmulhw cmp adc addl push test push xlat sbb xlat pop movabs sahf fisubrl rol mov xor sbb rex.RB rex.RXB (bad) std mov iret pop fisttpll insb fcomps add adc (bad) mov cld mov scas iret (bad) cmc add fsubs es iret out sub mov or jno idivb rex.WR out cld xchg mov imul xchg and rorb cmpl mov sub mov mov rex.WRXB and fsubrl insb add imull rex.B movabs mov push fcoms out lret out add sahf test xor xchg or mov (bad) mov loop mov fsubl and lock xchg sub fnsave (bad) xchg (bad) jl lock mov mov pop pop test sbb sub sbb out and popfq or rcrb (bad) xor rex.RXB xchg icebp xchg push (bad) test jle push push out rex.WRB (bad) xor outsb and cld jo cmp rex.WX rex.X sbb fisubr roll (bad) xor shl sub and andl pop mov push cld movslq sub ja sbb sub push cmp (bad) xchg cli mov add scas pop imul cmp pop rex cs outsl (bad) add mov lret mov push xchg fwait mov pop pushfq (bad) rex.WXB push cs jrcxz cli push imul nop fidiv lock mov push (bad) (bad) (bad) mov imul sbb mov ss (bad) (bad) adc sbb xor push mov (bad) rex.W jnp xchg movsl (bad) mov pop nop js push (bad) (bad) pop xchg pushq shr fldcw adc outsl cs out sub (bad) mov mov add (bad) test (bad) jle scas pop enterq mov (bad) insb sti cmpsl jg push roll jp stos push fisttpl sbb sub jge fistl sbb adc jmp rex.WR or mov (bad) fcmovne pop shrb movabs gs jno push sub int3 int push scas mov (bad) addr32 cli es sbb fistl add popfq retq rex.RXB cmc loope (bad) (bad) mov stc int3 lahf out fwait sbb jae (bad) jnp mov push push (bad) pop imul rcll rex.RX push or out (bad) pushq (bad) mov pop cmpsl mov jl jnp mov xchg (bad) lahf stc and push shrb mov (bad) fldt mov (bad) jne int popfq fildl cmp popfq rex.R movabs xchg sti mov and (bad) clc nop pop xchg xlat adc mov adc pop scas cmp rex.WB data16 sub cmp push mov enterq retq jge cmpsb xchg mov (bad) out mov repz (bad) cmpl (bad) (bad) out mov pop (bad) (bad) xchg jnp cld pushfq retq adc (bad) xor mov sarb cmp stc cltd push jle or mov (bad) in movsl adc pop jno out xor dec repnz mov imul mov out cs cltd sbb sub xchg (bad) cmp mov (bad) (bad) (bad) hlt shlb jno enterq (bad) adc addr32 (bad) mov stos imul decb xchg movabs (bad) popq mov loop and data16 fwait rex.W sbb orl (bad) sub loope sbb es int sarb sbb push rcrl and (bad) push (bad) cmp loope out (bad) (bad) in imul jle mov jp xorl fwait movabs rclb mov sbb rex.R sti mov jae retq (bad) imul scas pop mov cmp rex.WXB pop (bad) jb fnstcw movslq sub fwait int or fcmove (bad) lock hlt sub push jns mov (bad) fadds (bad) cld imul retq rex.WXB pushq rex.WB mov sbb jl cmp cmp add push xor (bad) push roll sahf and sahf rex.W rolb (bad) in scas xchg add sti mov cmc push and adc sbb movabs cmpsl test (bad) lret lret (bad) pop (bad) mov mov jp or mov (bad) adc loope gs sbb (bad) mov rex.RXB fcomps loopne (bad) lret (bad) jnp jmpq cmc (bad) jg cmp cmp xchg cmp icebp mov jb jrcxz cld mov scas movslq movabs ss fmull cmc (bad) loope cmp cmpsl sbb loopne rex.WR xlat in cmpsl push push sbb sarl pop push rex.R push (bad) jns (bad) (bad) jle sub push fwait rorb mov push fistp pop out pushq xor xchg outsl mov clc (bad) jmpq xchg in (bad) movsl cmpsl (bad) or enterq (bad) cmp rex.WXB jno fistpll rex.W pop or xchg lret mov pop adc fdivrs rcl pop retq sbb and adc (bad) push sbb sub fwait xorl popfq test rex.XB mov and movslq xor addr32 out imul movabs xor (bad) (bad) (bad) xor sub rex.R adc pop (bad) pop test cmp pushq idivb and fistpl (bad) ss test and gs in add fucomi jmpq stc xor cld pushq jns (bad) popfq movsb pop mov lods (bad) rex.W xchg xchg xlat pop cmp jns fisttpl cmp cwtl mov (bad) rex.WRB pop sub push add gs clc fiadd or or (bad) rex.WXB ss test rex.RXB and xchg rex.B pushfq sbb rex.WRX repz cmp adc rex.WR (bad) or sbb scas rex.WB and jne loopne lods (bad) mov retq movabs in in fistpl rex.WRB icebp outsb jg (bad) lret cmpsb xchg rcll outsl cmp cmp sbb xchg pop rex.WR movslq xchg xchg shrb clc (bad) fwait xchg cmp sbb adc rex.WX rex.XB lods addr32 insb sub xor (bad) adc pop rcl (bad) (bad) fs test cmp jo cmc jnp retq xchg cltd (bad) sbb fistpl ss lock fiaddl sbb push xor mov xchg nop repnz movsl cmpsl rcrb in (bad) or pop test sbb jno rex fnsave rclb fsub (bad) xlat leaveq and cwtl pandn rex.WR movslq lahf (bad) (bad) (bad) and xchg nop rex.W mov xor mulb out pop (bad) out (bad) bts adc repnz imul (bad) pop push stos jnp jne nop (bad) fiaddl mov mov stos jne (bad) fldt (bad) movabs mov pop test pushfq or jno mov rex.RXB pushfq add rex.X mov mov mov repz (bad) testb out test pushq fisttpl jbe jrcxz adc rclb rex.X fistl (bad) shr pop rex.B xchg cltd sub in popfq rex.WRB (bad) notl retq jge cwtl add mov incb movsb pop or (bad) js icebp fcomi lock jne insl mov fmuls rex.WXB push jmp faddl xchg fldt mov mov jno (bad) sahf cmp adc pop add outsb fstpt and out and imul rex.RX in test pop jrcxz mov hlt fwait pushq cmp repnz in xor (bad) loope (bad) and fldcw jae movsb push cli loope add lea iret or retq xlat add rex.RX in and cmp push (bad) mov mov cmp (bad) (bad) cmc or movabs ss testl xlat fistpl mov cmp cmp mov pop xlat sbb stos adc notb mov pop (bad) pop (bad) pop rcll retq fstps adc xor rcrb (bad) fcomi (bad) mov pop (bad) pop (bad) adc xlat pop mov movabs imul (bad) cli scas andl add scas out rex xor jnp fiadd (bad) jl test incl nop jg (bad) and iret popfq movabs testb mov (bad) jno rex.WXB (bad) rex.WB pop pop (bad) push scas pop xchg retq jno mov jmpq mov sbb mov fcoml add push jge jnp (bad) stc mov rex.XB mov rcr xlat mov add rex.RB rex.WX ja std pushfq mov test lahf movsb push mov out js fstp mull mov loope sbb pushfq insl divb clc enterq test xor xchg fiaddl lret loop mov sub rex.R fadds mov callq push ficomp pushq mov ffreep (bad) (bad) and je sbb pop adc cmpsl loopne test mov add fstps fisubl movsl cwtl add std (bad) pop xor jnp (bad) ja and jrcxz adc lcall leaveq rex rex.RXB jnp (bad) xchg xchg add stc imul pop xchg addr32 fild jg mov rex.RB jno (bad) (bad) sti rorb addr32 (bad) (bad) outsl popfq (bad) retq add jle pop cli lret adc loop movslq repnz loope in mov clc pop loope movslq (bad) shll jmp sub (bad) or mov xchg (bad) je (bad) xchg pushfq movabs mov cmp fstpt in roll rex.W (bad) (bad) fcmovnbe and clc adc js add adc add push movsl fldt pop outsb fisttpl movabs (bad) ja rolb (bad) ffreep add rex.WX int3 mov xor scas xor jo fldt (bad) sbb fcmovnu rex.WX add (bad) movsl out mov decl ds rex.WRB ficom fs fildl cmp sti pop retq adc idivb stos repnz pushfq (bad) pop push pop pop sub push rex.R fwait adc jnp jne stos fucompp fisttpl rex.WRX lret loope mov loopne (bad) sbb ds cmp imul lods roll leaveq imul (bad) cmp retq insl add je sbb jno retq imul pop cmpsl ficompl mov and jae sub imul lret fisttpl jno (bad) push incb fcoms jb test sbb (bad) mov ljmp (bad) or or js callq jno cs pop cmp jmp (bad) cmp lea icebp out (bad) test push data16 sti xor rex.WB (bad) fcomi (bad) sbb clc fistl rex.WRXB fstps cmp outsl pushfq test (bad) out repz mov mov mov clc (bad) mov fsub xchg (bad) pushfq xchg (bad) rcrl addr32 pushq fildl je and callq ficompl (bad) (bad) lods or repnz fcmovb xchg jl fmull gs (bad) test sbbb mov (bad) mov gs sahf and lods in lret cmc leaveq pop mov jae sub pop (bad) and (bad) add adc xchg jbe cmp cmp mov mov mov mov cli mov adcb xchg adc popfq rcr rex.RX mov pop sub (bad) js jle fwait cmp xchg fcomi (bad) push popfq addr32 leaveq xor rex.B cli sub (bad) (bad) push shl pop (bad) xor pop or retq mov cmp cmp pop rex.WXB rex.W sti jne insb (bad) cmp rex.WX pop outsl (bad) pop lahf xchg push popfq out test jbe cli push jg (bad) outsb fwait shr es cmp mov movslq sub mov (bad) mov imul xor movabs rex.WB cmpsb sbb in loope mov rex.WXB shrl (bad) orl mov (bad) leaveq fiaddl pop je in mov mov pop and mov fwait (bad) retq cmp (bad) sbb rolb xchg (bad) (bad) fcmovnu jl out fcomps (bad) and push (bad) or rolb mov mov adc nop jl movslq sar mov (bad) sbb icebp fcomi rex.XB sub pop xchg add clc (bad) rcll test mov (bad) fstpt pop lods push fstpt iret cmpsl cld mov test (bad) in (bad) mov je (bad) push pop repnz (bad) fsubp xor add fistl mov cwtl add fistl scas (bad) pop xor pop (bad) popfq (bad) in orb push mov fucomi imul in fildl iret sbb fcmovu addb pop fnop rcr lock jg rex.R negl mov rex.RXB fildl mov jge sbb (bad) or (bad) jg popfq sbb adc rex.RXB rex rex.WRXB push cmp (bad) (bad) (bad) sub xor and cmc cmp push mov insb adc and mov adc pop cmp stc in add pop pop fs (bad) int mov (bad) lret pushq mov pop fildll xchg stos movabs mov mov jg fwait cmpsb or sub fwait mov cwtl movabs rex.RXB (bad) cmc stos pop (bad) or rex stos gs sbb pop mov scas mov (bad) (bad) fistl popfq adc xor in adc (bad) lea push imul push adc repz lahf rcl orb and pop imul (bad) jmpq fcomip mov in movabs pushfq int out (bad) loope pop mov fwait insb fsts mov retq je (bad) rex.WB pushfq jo fs jle or mov (bad) in sub fcmovnbe sub mov (bad) sbb repz inc mov icebp add mov in sarb ljmp fcmovnbe cmpl xchg callq add cmp fninit pushfq je mov rex.RXB roll (bad) lods mov mov jge (bad) (bad) xlat movsb mov rex.WX je lods pop lock mov mov movabs push rex.R fcmovne int (bad) lock enterq jno pop fstpt mov mov cmpsl jg fildl xor (bad) fxch leaveq sbb test lahf fisttpl (bad) pop and out jns rex.WRB rex.WXB stos xor sub (bad) popq (bad) sbb mov pushq (bad) jnp retq fcomi pushq mov xchg xor mov fcomi (bad) push cwtl mov (bad) (bad) jns xchg outsl movsb out jl xor cmpsb jmp std cwtl xchg rex.WX rex.R mov mov cmc (bad) lods xrelease push shrb scas fistl fstpt adc (bad) mov imul xor mov repz lea (bad) in out fsubrl (bad) fisttpl (bad) sahf movabs xor (bad) je (bad) xchg pushq (bad) rex.WR xchg push (bad) movsl (bad) std (bad) mov test pop cmpsl (bad) negb xchg rcrb imul rex.WB mov pushq int3 jae sub gs fwait mov cld repnz out pushq mov (bad) fucomi mov fstl fisttpl mov push leaveq fldt insb retq rex.WRB jns rex.WR (bad) sbb outsl sti jrcxz xor rex.WRXB (bad) rorl fsincos (bad) callq movsl test (bad) pop in (bad) pop mov sbb int3 add (bad) and test fildl sbb orb sbb (bad) rex.WXB rex.XB (bad) test ficoml adc cmp sub push sub adc fistl xchg and jl cmp repnz xchg repnz pop (bad) jge add fsts (bad) sbb fistl mov jnp movl rex.RB rex.WX mov xchg (bad) rex.WR movabs movabs xor rex.WB repnz xor sub push cmp (bad) (bad) je rex.W cltd sub (bad) ficoml sub mov ficompl or xchg in in mov ss sbb ja pop pushfq in xchg jne add sarb mov (bad) out fcmovnbe test cmovno imul fild lret mov stc (bad) and (bad) test mov stos (bad) mov jnp (bad) jrcxz lods fiaddl out out lret xchg addr32 jae ror push (bad) cmp in pop clc push fcmovnu jnp rex rex.WB movabs jge (bad) fstpt add out rex.WX jl loopne (bad) pop mov xchg (bad) jrcxz popfq pop cmp outsb jne sub rex.WRXB rex.WX xchg movb stos pop lret mov push mov rex.XB mov test (bad) jne sub pop leaveq fistl mov (bad) fildl rex.XB push fdiv mov xor (bad) ds fcmovne jp jl fwait or nop (bad) mov jo sahf push and gs pop movabs adc iret repnz pop (bad) push pop mov mov roll fisub sub mov pop (bad) mov rex.X ja adc jb scas (bad) or divl int3 (bad) (bad) (bad) rex.WRXB (bad) fistpl ja jne (bad) fistpl mov pushq pop push repnz subb fwait (bad) ljmp retq imul jrcxz sub (bad) mov and xchg pop and test fs (bad) pop fildl test pop repnz repz in nop jl lea cmp imul fldt adc test sub jle ficom icebp outsl add repz jno movsb (bad) in sbb out test jbe pop or (bad) loope fwait roll rcrl clc fisttpl je (bad) rex.WRB lods xchg fcmovu out mov and jne sti xchg add cmp cs (bad) insb scas movabs push iret test (bad) add int3 rcl lret adc ja lods mov push sbb stos je int3 fwait push (bad) stos jns adc xor cs movslq gs pop pop xchg jne lret ja sbb mov push out jb xchg xchg (bad) movslq (bad) mov fsubs (bad) (bad) pop cmpsl jmpq subl ja pop mov retq rcll mov fucom pop cmp pop out (bad) xchg fistpll or adc pop or nop mov pushfq cli mov cmp stc jmp (bad) cwtl sbbl xor add push push adc xor jle test rex.RXB mov loop jg mov xchg rex.WXB sti int3 imul sbb mov out (bad) mov lock cmp fnop add lea (bad) out callq test rex.RXB (bad) or push push xchg sbb in push sahf out xlat loopne push shll push cmp sahf pop push push in insb mov pop or rex jge ja jle (bad) cmc and xlat mov stos (bad) movsb mov rex.WRX cwtl (bad) iret rex.WXB (bad) movsl test ja push pop mov fcmovbe lea iret xchg sbb sbb adc sbb cmp mov pop movsb push rex.RXB subl adc seta test mov stc jle jmpq (bad) repnz jbe sub xchg jae cmp push cmp imul mov xor lea sbb add xchg (bad) out mov sub int3 insb imul jns xchg (bad) and mov loopne fmuls imulb fsubrl (bad) adc fldcw adc sbbl sti retq addr32 (bad) fwait sbb je sub (bad) (bad) mov push fimul jl (bad) mov (bad) (bad) jmpq fdivrs jrcxz add clc sub or loopne mov jne push (bad) cmpsl iret fwait (bad) icebp sti ds in mov cmp cld std cltd insl test or sahf adc fs notl or rex.WX and or push movsl cmpsb outsl fidivl jnp imul pushq (bad) cli xchg mov mov pop es cltd rex.RX pop xorl (bad) stos jp in pop mov frstor jbe data16 or mov sub rex.RX mov pop (bad) sbb outsl (bad) sbb adc xchg jmp data16 rex.RX pop in scas rex.XB divl std (bad) jb (bad) test out mov negb add (bad) hlt push adc mov add je es nop xor shrl fisttp ja (bad) ds es not (bad) mov fs movabs flds and pushfq or (bad) rex.RB rclb cmp fs ja and in or jo (bad) pop ljmp sbb jo (bad) loope adc adc (bad) lret fwait jrcxz repnz mov xor jl add cltd push shll jp fcomps xchg rex.RB or in adc jge xor cmp vpmacssdqh mov jno addr32 adc callq test sub sbb sbb push nop sbb add fisttpl outsb fcompl xchg (bad) pop sub add mov stos (bad) rex.WX fsub push mov sub (bad) cwtl jmp out imul (bad) jb insl xlat mov jle rex.RXB mov cmpsl xchg xor and std negb pop cmp fisub mov pop (bad) mov mov push xchg insb fisubl push adc (bad) (bad) sbb add mov int test fcomi xchg jns imul (bad) jnp mov movslq (bad) pop jbe retq or xor mov (bad) loop sbb rex.RX mov movabs (bad) out rex fwait (bad) repz in jo mov es rex.WRX rex.R add sbb mov mov fldt cmp subl sub in loopne (bad) and pushfq xchg movslq (bad) test test jbe xor mov rex.WB idiv mov rex.XB lret mov or leaveq jns and test (bad) xor mov stos fwait jnp loop add sbb cmpsl mov fs pop (bad) rex.W gs mov mov insl (bad) outsl mov test push pop mov rex.WB imul test (bad) cmp pushq in (bad) xor xchg pop imul neg mov sbb fwait jnp movsl sub (bad) (bad) and fist fildl (bad) fmuls adc xchg fs xchg (bad) cmp insl cmp out movslq jmp pushq insb pushfq jb sub xor (bad) int3 movabs (bad) pop icebp std in imul (bad) sbb pop sahf pop cmpsl fcmovnu (bad) iret sub cmp pop sbb xchg cwtl sbb movabs sub imul in (bad) xchg sbb cltd cmp mov mov sbb popfq lock cmpsl cmp (bad) xchg push cmpsb ss pop fneni(8087 test sub (bad) (bad) sbb movsl pop add mov jae nop push rex.RXB (bad) fmuls pop addl mov gs (bad) sbb fwait xchg fstpt out mov xor fistpl mov lahf jb xchg loopne stc (bad) pop jo rex.X rex.RXB (bad) sub (bad) xor xor (bad) retq xchg fisttpl std (bad) out or ds xchg cmp (bad) push (bad) pop mov mov lret jo fdivs (bad) rex.W fildl sbb rex.RXB data16 sub test mov pushq (bad) (bad) jg cmp cmp push cmpsl rex.WXB enterq stc test fwait mov mov pop scas pop xor (bad) jno cmpsl xor out xor pop xchg and pop adc scas (bad) addr32 rclb fistl sub mov push shl pop rex.WX fstpt jns repnz pop test rex.RXB pop subl shll or icebp mov retq movsl scas and fistl xchg cmp mov div cs ds jp adc sbb fwait lret push hlt (bad) jge fwait cmpsl mov mov rex.WB out movabs mov cmp es adc (bad) fisttpl test (bad) (bad) jmpq sbb mov add xor loope mov cmpsb cmp push mov jo (bad) cmp (bad) (bad) xchg (bad) fadd cmpsl movsl mov sbb adc scas pop retq (bad) movabs out (bad) adc pop and add (bad) cld cmp movslq xchg outsb shufps lods mov pop (bad) int jnp mov mov sbbl out pop mov iret mov popfq pop adc ss in pop sbb loopne or repnz rex.WRX ss (bad) jmp fbstp push scas sbb add (bad) mov lret and rex.WB push test rex.B callq pop in (bad) or rex.WXB rex.R imul xchg (bad) popfq sub rex.RB (bad) rex.RX mov (bad) (bad) ficomp (bad) adc jp mov (bad) (bad) mov pop pushq gs mov fildl add sahf sbb (bad) fcompl test insb shr pavgw xor lret (bad) jns (bad) cltq outsb (bad) push sbb and pop adc scas fildl enterq repz and (bad) jns jl jne rex.WRXB fstpt cld pop xor repnz rex.WRB outsl int xchg test mov cmp pop test sub fildl rex.X sahf fcmovnbe int jnp xchg stc rcr xor notb mov push fs jo push fwait movabs (bad) (bad) sarb pop or repnz xor and push pop popfq (bad) cltd sub (bad) cmp ja rcr (bad) (bad) jae mov or rcr mov add or (bad) (bad) callq addr32 adc retq (bad) retq sbb leaveq loopne test insl pushq adc (bad) mov sub (bad) push (bad) mov fs pop (bad) sub iret push sbb xor mov popfq add pop cmpsl andl push in pop (bad) xchg pop or adc stc test ftst pop push mov jnp pop fwait rex.WB movslq outsl (bad) xchg je pop in sbb or repnz xchg loopne sub loope jae rex pushfq jge ja cmp pop push mov data16 int3 callq (bad) add mov (bad) (bad) ss movslq dec (bad) rex cwtl movsl or test fimul rex.RXB xor movsl fisttpll adc or icebp fldl mov cmp repz cmp lahf movabs ss cmpsl sbb cltd pop imul rex.WRXB mov mov fisttp xor xor rorl xchg xchg lods vmaxsd jrcxz sbb (bad) stos leaveq rcrl push or imul fsubr rcrb jp rex.WRB (bad) movabs xor outsb mov fwait mov push cmp fcompp (bad) adc xchg (bad) rex.WRB and (bad) rex.RX sar rcl (bad) jns (bad) mov push fsubs fldenv pop test popfq add test (bad) mov jno clc add pop (bad) int xchg stos jl fisttp jle test mov (bad) and (bad) mov mov fisubl imul fisubl movslq or out ja (bad) (bad) lret or rex.RB push sub cmp jp (bad) popfq pop pop and lret or mov stos xchg pushq cltd data16 cmp rex.WX cli or loopne add adc xchg xor stos pop or add or jl adc and mov sub (bad) (bad) (bad) rex.WB and rex.WX xchg and out and xor jnp (bad) jo jp movabs push (bad) andb mov jle push jbe and subps cltd nop cld cmovo mov out (bad) xor repz rex.R callq adc pop rex.RX sub iret lret rex.RB xor mov xchg rcll mov insl mov lock subb xorl pop mov xchg jrcxz loopne neg (bad) popfq shlb addr32 movslq (bad) rex.WXB cltd mov or mov adc sti loopne test sub gs push stos or mov mov (bad) (bad) or insl push and jo fisttpl and int sub fadd or loopne movsb insl fwait movslq sub push (bad) jb push leaveq adc rorl out xchg js sbb fcmovnb rex or pop jns mov flds sbb xor push cmp cmp push cwtl in lret mov rex.WX xchg push std outsb movabs cmp (bad) lock jb retq xchg sub movabs (bad) cmp adc (bad) rex.WX mov or jnp cwtl mov es fisubl cmp sbb (bad) jrcxz mov pop rex.WR rex.X rex.WXB imul int jno rex.WB add xchg xchg and sti jge xchg popfq (bad) fcmovne mov mov imul sahf rex.WRXB retq mov sub jge (bad) scas xchg orl pop cld pop test rex.XB lea mov loopne out fsubrs and or xor mov shrl mov add je rol enterq fistpl (bad) lea sbb cmp fs push adc pop (bad) sub popfq xchg (bad) jb add and mov xchg pop (bad) orl jne (bad) (bad) xor repnz mov imul mov (bad) ds movabs mov fiaddl mov rcll and fildl pop adc clc rex.RXB push cmp rex.RX movabs push cs rex.RXB pop jno cmp jg (bad) and stos mov sub stc (bad) lret jge jnp mov rex.RXB rex.RB (bad) xor (bad) out test rex.RX std or sub cmp loopne insl cltd stos sbb fildl popfq (bad) cmp pop push xchg xchg fstl incl std and pop subl pop or add out mov add xor and in retq add cmp loopne (bad) xor mov xchg cmp fistpl jle rcrb mov pop in popfq xor mov retq jno and adc (bad) pop cmp rex.WRX pop xor mov jns mov jne mov push movsb popq (bad) movsl jp sti retq movabs xchg cli and rex.RXB rex.WRX pop rex.X (bad) (bad) test retq js (bad) xchg rex.WX mov (bad) xchg mov fistl or mov icebp xchg sbb fs fildl adc mov cmp retq retq mov xlat push xor pushq ficoml (bad) rex.X pop iret xchg pop xchg jne repz lods gs sub rex.WX (bad) sbb mov xor movsl fldt rex.WRX in movslq mov rcr paddusb push (bad) cmpb (bad) in jnp test mov mov mov addr32 sbb add movabs mov adc fwait and incl sub callq int3 cmpsl xor mov jge (bad) (bad) (bad) cmp mull (bad) xlat js mov or adc rex.WR (bad) fwait jb sti test adc icebp data16 pop add leaveq mov lods jmp jl (bad) jb xchg cmp sub lods sarl (bad) (bad) movsl ficompl lods or leaveq cmp popfq scas mov adc cmpsl (bad) and addr32 cmp xchg pop repnz (bad) xor (bad) xor sahf mov (bad) loop cmp in sbb pop mov je sub mov pop xchg rex.WB lods mov imul push in jg xlat cmp imul test sub test lret lock rex.RX adc mov mov out and fistpl mov or neg mov mull hlt xchg outsb imul sbb rex.WB lods xor cli or rex.RX (bad) fistl rex.R mov and sub add (bad) cmp cmpl jl movslq or and movslq lahf sub imulb (bad) clc movabs or lods fistpl push or jne rex.XB sbb rcr lods or movsb (bad) (bad) and xor and pop (bad) test pop pop movslq (bad) rex.RX sub rex.X pushq callq jnp lahf stos jp jle (bad) sbbb insl loope cld jnp and leaveq fisttpl jrcxz xchg xchg sub lods jle pop add hlt enterq and pand in mov mov (bad) rex.RB iret mov (bad) push (bad) mov mov mov fcomi pop in rol int fisttpl je pop sub fcmovne sbb mov rex.WRXB fstl rex.W rex.WX cmp rex lret cmp test jmpq mov adc rex.RXB rex.RXB rex.WXB cmpsl adcl (bad) (bad) xor cmp sub and movslq movsl cli xchg imul (bad) nop lret add mov iret cmpsb jae pushfq rex.XB push and xchg test cmp fwait pushq push pop pop subb mov lret jl mov neg pushq or fstpt (bad) xchg mov cli add and and in adc add pop (bad) cmp pop xchg stos fwait or fstpt and rex.XB repnz rex.WB mov out (bad) lea push scas (bad) enterq or push pop jb mov (bad) int3 or jbe es sub movslq pop leaveq xchg xchg (bad) mov cmpsb roll adc (bad) (bad) (bad) (bad) or xor sub cmp add mov repnz stos mov mov in lret pop mov cmp and rcrl or movabs rex.R mov shrb xor clc jp (bad) fidiv insl (bad) sbb (bad) fadd (bad) push push xchg shll and push insb and rex.WRX and callq pop push mov imul hlt mov pushfq out xchg pushfq scas (bad) imul or popfq mov and xchg fstl (bad) and jnp cmp jns xor jbe (bad) mov outsl xchg sub or push movabs xchg jge int add sbb pop cwtl push cmp or (bad) pop mov jl loopne pop in jns je cmp pop cs movsb rex.R pushfq (bad) std sub rex.R (bad) (bad) movabs jo (bad) cmp out mov sbb (bad) frstor jmpq pop gs pop sahf imul in in lret movabs jl in fistl test (bad) mov pushq pop test jge pop pop xlat (bad) jo outsb (bad) hlt pop xor (bad) rcl js pop fisttpl test fistl mov data16 fstpt sahf lret xorb mov cmp sbb fldt mov xchg rcr callq (bad) stos (bad) (bad) add mov mov sub mov cmc cwtl lock fcmovne rcrl int3 mov mov (bad) xchg outsl rcl jmpq xchg jb addl (bad) rex.WRB test rex.XB fcmovnbe (bad) (bad) jno lret sub xor pop pop (bad) stc pushq fmuls (bad) add int adc (bad) fcmove push push jmpq popfq leaveq jp xchg (bad) xchg gs push (bad) lea nop fstpt test sbb fwait stos jge add addr32 iret pmaddwd retq xor (bad) push insb lock icebp sub or mov adc (bad) (bad) mov rcr (bad) mov (bad) jbe adc (bad) mov fs hlt jo pop (bad) enterq fildl xor je (bad) mov enterq sbbl and nop xchg fldt ja fisttpl jbe (bad) jns es (bad) gs push sub rcr add push and leaveq add pop (bad) lods in ds cwtl neg (bad) sub adc rex.XB mov mov pop (bad) xor sbb mov sbbb push jge movw (bad) (bad) fstl fnstenv sbb or test iret (bad) movsb sub (bad) pop pop mov test push cmc cmpsb cmp imul (bad) (bad) (bad) xchg jmpq add mov pop cld (bad) shrl jns (bad) xchg mov adcl pop xchg sbb fcmovnu movsl push xchg jnp add (bad) jl int3 (bad) jae or (bad) xor test cli pop adc out sub rex.WRB js mov rex.R repz popfq rcrb xchg push sbb jge mov pop sbb xchg fisttpl (bad) pop rex.W add (bad) rcl jb int3 mov pop cmpsb mov cmpsl sbb cwtl or (bad) and fstpt rex.WRX cmp (bad) and rex.WR nop stos jb cmp cmp xor push sub repz xchg orl (bad) in add stos jbe fildl ja rorb (bad) adc fldenv xchg or lock stos add pushq leaveq (bad) sbb (bad) out fistpl in mov fnsave fldt lea mulb and addr32 or addr32 (bad) in cmpl pushfq pop pop xchg pushq xchg jne mov loop and stos insl (bad) cmp xor xor and pushq sbb es mov jge jbe add rex.WB mov (bad) (bad) fwait test retq cmpsb xor out pop cli mov fwait jb and rex.WRXB pop and rex.RXB ds adc cmpsl jne vpcomub rex.XB adc test xorb mov adc mov andb rex.RB cli sbb mov push (bad) rex.X loopne (bad) sub test xchg cltd xlat (bad) cmp pop pop xor stc sub xor push rex.RX xor (bad) push shl sub repz cwtl rex.R subl sbb shl adc mov roll and js ja adc stos movsb in cmpsl out cmp sbb mov mov pop mov in mov jb,pn imull jo (bad) add sbb (bad) (bad) jrcxz cmovg pop fwait jns jp rorl push in mov pop (bad) fwait rex.WRB pop mov jg add jne mov push sub jno cli loop fcmovbe cmpsl ss cmpsb enterq (bad) sub ja pop xchg rex.WRB (bad) jmp jge iret xor xor mov jb pop pop lods mov (bad) (bad) movabs push gs fnstsw movabs (bad) xor callq test rcl push out mov rex.RB sub movslq cld jo fwait rorl fst xor int neg in jb push sbb pop mov scas rex.WB pop and pop (bad) cmpsb jle movabs mov rex.WXB cmp or and (bad) mov in stos mov pushfq std (bad) adc (bad) jp in xchg sti sahf iret rex mov lea rcrb iret mov (bad) xlat scas add out mov pushfq rex.X test (bad) cmp sbb lods (bad) scas cmp pushq xchg (bad) xor sbb push push pushq shrl sahf push pop callq add ficompl (bad) leaveq xchg mov jg adc rcll (bad) (bad) js gs jae ja rorb sbb (bad) int xchg retq rex.WX lods mov mov stos jp sub mov enterq mov movb xor addr32 jmp push cmp (bad) clc sub sti adc leaveq cltd out mov movslq outsb out callq jno (bad) (bad) (bad) and iret test imul mov addr32 sti test sahf mov fwait fwait sbb and jnp mov (bad) rex.RX push push and jnp mov mov fwait loop push fwait adcb in cmp std loope repnz (bad) loop sbb (bad) add xlat leaveq out or pop jge add mov loope rex.WRXB mov (bad) sbb sahf and jrcxz fistp cs pop out repnz pop sbb fwait addr32 scas mov cltd (bad) jnp jg jmp and int notb stc add pop movabs pop push stc or movabs (bad) adc mov adc mov fwait cmc xchg xor jmp xor mov pop stos mov mov mov mov mov in movabs mov xchg rex.WR callq adc add (bad) mov sbb (bad) icebp push push clc cmp xchg add jno out (bad) (bad) cmc out jnp rex.W cmpsl outsb (bad) pop mov pop sbb jle fidivrl sbb sar jp (bad) cwtl outsl pop hlt jb jb or sti sbb (bad) lahf pop sbb pop lods push nop loope leaveq xlat retq enterq (bad) movntq rol (bad) fsubrl add (bad) imul mov ja push pop nop (bad) (bad) cmp pushq mov jl and rex.RX (bad) jbe mov rex.RB cltd stos mov jnp push adc (bad) fmuls cmp rex.WX or mov mov (bad) js addl stc pushq xchg mov ffree in mov rex.W xchg mov mov sbb imul sub or and movabs mov pop lret rex.XB rex.RX iret rex.RXB imul sub cmpsl (bad) fwait xchg mov nop and (bad) fisttpl (bad) mov movsl fistpl (bad) js clc or rex.WRX (bad) rex.WX or (bad) fldt je xor adc pop retq test sub rex.RX fwait or cli cmpsb popfq (bad) (bad) jae unpcklps fsubs pushq rex.WRB add mov test add push insb cltd xor rcr test cmpsl mov leaveq test loope leaveq jnp scas cltd cmc jnp (bad) (bad) (bad) (bad) rex.W or in gs (bad) push (bad) jnp iret rex.WRXB ja outsl rex.WR (bad) fldln2 je rcl mov leaveq xchg (bad) xchg xor mov test pop (bad) insl adc xchg pop out cmp ficom mov jns popfq add cmp jle in (bad) push pop sbb fimul pushfq movsb pop ds xor scas (bad) (bad) sbb addr32 xchg add add xchg incb mov jbe or xor out xchg fmull sarb (bad) cli or test push sbb lock push (bad) rex test xchg push pop pop fidivrl pop and jmpq clc (bad) xchg rex.X pop (bad) (bad) loop enterq fdivs (bad) roll cltd fcoms lods or rsqrtps (bad) xchg and jge cmp leaveq (bad) rex.WX rex cmp int3 stos add (bad) mov cmp (bad) repnz push jo xchg xor mov (bad) cmp jp (bad) sub sub shrb (bad) movslq (bad) pushfq cmpsl mov in scas xchg cs jrcxz in add pushfq movsl in (bad) sbb adc sti loopne pop jnp mov fmull cmp jg fadds outsb movsl test je mov (bad) jg movsl rex.RB xor rex.W sarb fistp lea sub (bad) test push movslq jrcxz cmp add enterq lret jbe imul pushfq data16 jns pop fwait xchg adc lret or mov (bad) sub mov rex.WB xchg loopne xor test rex.WRX rex.WX (bad) (bad) andl pop xor adc insb fstps rex.WRB out fwait loopne bnd rex.RXB rex.WRX clc mov jbe ror and fistpl jg xor outsl jl rex.WR pushq rex.WXB (bad) mov pop stos jb adc jle jno sub pushfq scas outsb xor movabs jo fsubs (bad) mov outsb sub xchg fwait sahf sbb xchg movabs hlt rex.WRB (bad) xor fistpl cwtl add (bad) divb mov add jbe ja mov rex.X psubd rex.WRXB rclb paddw mov sub (bad) lahf ja retq orl subl push sahf cmpsl fs fnsetpm(287 (bad) mov mov mov sbb (bad) xor (bad) fildl outsb rex.WRXB mov callq rex.WR mov fcmovnb pop cmp and (bad) jae fistl mov xchg testb rex.WRX fs fcmovnbe popfq xchg std mov sbbl int3 cltd pop scas (bad) xchg and jle subl (bad) out (bad) retq (bad) sbb rcr pop rex.R sbb xor fildl mov (bad) xor paddusw mov jnp movslq pop cmp mov jl retq stos cld movabs rex rex movabs fwait mov and mov fwait xchg (bad) fldt test cmpsl (bad) mov retq test nop scas rex.RXB xchg ja neg stos (bad) mov add loop fldt fdivrl add xor addr32 adc adc pop shll adc test fwait (bad) iret fisttpl sbb cmp and popfq imul lods rex.RB divb (bad) adc sbb (bad) fldl (bad) sbb shrb (bad) fwait (bad) vmovd add (bad) outsb jrcxz data16 jp xor and jle (bad) outsb mov sub loopne (bad) mov push and (bad) mov push fcmovnbe mov hlt jrcxz pop ficoml mov or (bad) leaveq (bad) scas (bad) rex.XB rex.B (bad) cmp (bad) in xchg xchg pop cmp cmpsl mov (bad) leaveq cmp pop loope scas mov mov rcrb mov movabs iret (bad) pop (bad) push movsl es outsl sub stos mov (bad) lahf js cwtl fildl push jge xchg xchg (bad) stos (bad) rex.RX repnz and fistpl pushfq imul loope rex.R and and insl jmp (bad) cld adcl add movslq addr32 pop cmc addr32 cmp push loop stos andl fstpt or loope (bad) adc jo rex rex fs push lods movzbl (bad) rex.WX fisttpl cmp (bad) xor sbb mov cmp movabs imul or fistpl mov in (bad) neg (bad) and ss test mov clc mov jbe push es jne mov (bad) rorb (bad) sub (bad) movabs sarb (bad) jrcxz out add rcr popfq cltd (bad) std fistpl rex.RXB adc rcll fsin add shl jnp sub fisubl pop fisubrl push lahf and mul pop xor sub test je movsb in shl sarb sub loope (bad) int rex.X movabs leaveq (bad) pop stc mov cld divb adc rex.XB clc and rex.R rex.W mov sti pushq pop pushfq enterq xchg sti jrcxz or (bad) pop mov (bad) outsb sbb xlat sahf rcrl rex.WRB or iret lahf (bad) movabs sti jb or (bad) in rex.WRX jl cmp rex.WRXB add (bad) movabs fwait (bad) jno pop out cltd jl (bad) jbe push cmpsl adc jo insl mov jnp sub cmpsb movsb pop (bad) or jb jne xlat std (bad) and loop (bad) fwait mov (bad) addr32 sbb (bad) pushfq ds insl (bad) xor outsb (bad) mov iret sbb push rex.WXB (bad) push pop push jb add jnp movabs cltd imul or sbb xchg sarl (bad) rex.WRXB (bad) sub jl leaveq xchg cwtl (bad) add fsubs xchg enterq (bad) stos mov rex.X (bad) movabs scas jno rex.WR test xchg fsubrl cmp rex.W (bad) (bad) loop mov cmp mov rex.R rex.WR push push rex.WRXB fimul movsb movslq or adc stos movslq rex.W pop add and (bad) rex.WB jo,pn jae ljmp (bad) pushq adc add lock (bad) fcmovne icebp (bad) cld (bad) adc xchg out xchg (bad) sbb jmpq pop fdivr out sub (bad) ror xor xchg push and fcomi mov rcrb push mov or xchg mov int (bad) jmp rex.WRXB rex.R std (bad) mov (bad) add cmp (bad) enterq fistpl (bad) fldt jbe rex.RX in lods movabs addr32 xor fldt fisttpll pop fsubs jne sbb xchg in push fstpt jno movsl enterq rex.WRB lods (bad) fisttpl jle mov std test adc jns pop xor rex.WX mov add cwtl (bad) fstpt pop stos out gs sub mov pop jle rex.RXB andl imull (bad) sahf (bad) or sub sub imul ja in jnp rcr pmuludq add stos movabs test (bad) fstpt out rex.WRXB rex.W rex.XB nop sub test rex (bad) mov (bad) iret icebp cmpb sbb xchg mov int3 (bad) jns (bad) mov pop (bad) je cld imul movsl pop (bad) add pop fcmovnu scas rex sub in mov (bad) xchg (bad) sub fsubp jae sbb and (bad) out and push mov rol negb callq rex.RXB or (bad) fisttpl (bad) mov pushq mov sub retq test pushq xchg xor fwait mov insb jns rex.WX (bad) mov enterq xor rex.B fldt add icebp rex.X sbb leaveq fisubrl push rex.W gs pop mov and add ja cmp movabs icebp (bad) out subl mov xchg retq xor and mov xchg or jle int jrcxz out jp imul jl cmp (bad) and pop mov rex.WB out jnp sbb fldl (bad) jge and rex.WR sti test test (bad) stos jbe (bad) cs mov jge (bad) jns mov fisttpl and push fstps rex.B fcmovnu jne xorb sbb (bad) (bad) loop insb (bad) xor jno sub sub rex.WRB mov or pushq mov (bad) gs test out mov mov rex.W jns (bad) iret shlb or jnp int3 in add bnd ss pop (bad) sahf (bad) ds cmp (bad) pop (bad) cs (bad) fldt xchg jae hlt fsubrs or rex.B fwait (bad) jo je xchg jg fcmovnu rex.X (bad) mov cmp cmp sbbb push push (bad) lods mov sub flds mov (bad) fucomi push jmp rex.X add pop jo stos js (bad) adc fcmovnb mov cmpsb mov push frstpm(287 lock jp jb sti sub movslq push (bad) popq fcomi pushfq sub fisubrl cwtl mov cmp clc nop xor xor loope jmp loopne movsb xchg xor sbb sbb cmp sbb cmpsb jmpq jne jp loopne (bad) pushfq mov repnz flds sti pop repnz sbb add int test cmp sti adc or lea out fs rex.WXB mov subl out movslq pop jrcxz cmp fnstcw and imul (bad) rex.R push int movsb addr32 adc pop jmpq (bad) (bad) fistl (bad) xchg jl sbb in repnz pop (bad) (bad) (bad) mov pushfq (bad) (bad) push cmp (bad) repz jo loope or fnsave (bad) rex.XB fwait rclb fmull xchg pushfq jae stc jb movslq cmp jnp cmp push xor pop adc nop stc fsubr pop (bad) mov movsl xchg stos cmpb rex.WR fistp rex.WB sti (bad) rex.WXB cmp insl (bad) xchg (bad) sbb fwait cld out stos (bad) in (bad) (bad) (bad) mov pushfq vpsrlw xlat sub pop fidivrl or icebp xchg sbb add push sarb mov jge js (bad) mov outsb mov leaveq pop push mov in xchg jae popfw (bad) push retq pop (bad) roll xchg (bad) sti push sbb popq ljmp imull sub sub sub rex.R mov cltd adc ficomp sub push rex.WX xor (bad) jbe fmul adc pop (bad) in in xor stos pop sbb xor mov or pop ffreep cli (bad) iret pop (bad) rex.WX rex.RXB mov test (bad) (bad) pop mov addr32 fildl cmp iret (bad) movabs shrl clc fs orl rex.X fwait push adc or imul movl fs enterq rex.WXB sub cmpps icebp jbe sarl pop (bad) (bad) (bad) (bad) rclb (bad) pop movabs (bad) add movabs (bad) (bad) mov mov fwait push js xchg pop fisubl (bad) mov (bad) jg fldt jl (bad) or (bad) xor or sbb out pop pop mov ja (bad) fisttpl xchg sarb jge rcrb sub pushq gs (bad) jrcxz movsb or hlt (bad) loop jmp adc movabs and (bad) (bad) pop pop callq stos (bad) rex.WR fnstcw outsb ss fistpl mov sbb (bad) subl rex.WXB or fiaddl pop (bad) (bad) sbb xchg imul pop xlat mov sti (bad) mov mov (bad) in scas add pop sarl lods (bad) or pushq (bad) jb enterq and rex.X fisttpl sahf sub fldt jo cmp (bad) movabs cld mov xchg (bad) lahf rex.WXB out mov xor (bad) fcmovnu ja rex.R rex.WRB mov fistl insb add sbb pushq fwait rex.RX (bad) rex (bad) push (bad) fwait pop cli stos cmpsl scas fistpl rex.RB popfq and jno sbb jg sbb fstpt sub xchg mov sbb jns rex.WRXB fs fdiv cmp rex.W (bad) jl rex.WR cmp rex.B xor jns pop (bad) mov (bad) (bad) xchg xor or movabs fldt mov jge fcmovnbe retq loopne xor sbb fcmovne lods (bad) in cmp xchg push insl rorl addr32 fisttpl push push outsb ds pushq test mov insb imul mov sbb or (bad) cmpsl cld xchg cmp fisttpl (bad) imul xchg in retq fildll cmpsl jl (bad) data16 mov mov clc movsb rex.WR fist fistpl in pop movabs rex.WRX (bad) cli mov xchg push cwtl out imull xchg and outsl movabs pop (bad) jnp sub psllq fstpt lret movabs rex.RXB (bad) fimul add jnp pushq addr32 (bad) add jno add (bad) fmul add mov fcmovne mov (bad) in fldt cmpsb mov mov movabs or (bad) (bad) mov (bad) decb outsb hlt rex.RX es movabs jae (bad) (bad) (bad) sbb loopne (bad) mov push fisttpl rex.WRXB fcoml popfq add retq scas pop in test (bad) pop repnz fcompl (bad) jp cmp popq (bad) cmpb imull jb sbb xchg cmp mov fwait jo fisttpl imul (bad) loop or or fidiv mov out jns movsb sub or outsl push int movslq fwait sbb std cmp (bad) xor and rcr (bad) test xor in out (bad) out idivl xchg lods cltd jae movsb es movabs pop scas cmp mov sbb rex.WX rex.WX push fnstenv cld pop out fldl mov xchg add stc sub (bad) lock xchg js fwait push loopne rex.XB mov jle xlat lods and rex.XB loopne sbb movl cmp rex.R repz sbb mov hlt enterq jnp out in stc in rex.WRX sbb xchg jbe es xlat adc movslq pushq (bad) hlt mov sub imul (bad) mov enterq xchg xchg stos pop icebp bnd ja add callq and rex.WR cli or nop adc mov outsl outsl iret cltd test jnp jge pop rex.XB xor xchg outsb and sub js xchg mov rex.W decb jl js cmpsl rex.WXB pushq loope add clc mov sub xchg out (bad) movabs rex.WRXB enterq rex.B jo movsb sbb fcmovnbe or pop retq jge xlat popq mov mov fldt hlt or fistl fiaddl ror xor sub sbb xchg popfq test and or mov hlt mov pop pop stos mov jno rex.WRXB loope cmp sub fildl scas out push stc fcomi jb pop xlat (bad) shll fcmovnb push pop pop add in jnp xor and push rex.XB mov sarl pop (bad) cs pop add xor add sub (bad) (bad) lods mov fcomi sub (bad) pop and fcmovne xchg test (bad) jne fildl es mov fs fsubrl jle test pop xlat xor mov pop int3 rex.RB xchg pop gs push xchg jae loope (bad) jnp outsl rex.RX cmc sub jae rex.WX push test int3 (bad) cmpsb clc fsubp or add std js rex.WRB adc (bad) jmp (bad) mov flds xchg add (bad) cmp nop add sub pop fistpl xchg push cmp test jno mov out (bad) pop lret adcb shrl (bad) callq jmp (bad) mov pop (bad) pop loop (bad) jmp add (bad) cmpsb push or push ds iret mov movabs cmp je mov cwtl and stos (bad) sar insl pop (bad) movabs mov stc (bad) enterq rorb rex.RX xchg movabs sub (bad) loope pop pop cltd and lret xor stos jnp pop (bad) sub adc cli jle push mov push (bad) mov mov stc (bad) rex.X rex.WX mov in (bad) hlt or movsb add mov mov or stc adc fs fwait jg (bad) rex.WX push (bad) (bad) fiaddl rex.WRX pop and js pop mov sub imul (bad) rex.WRX fistpll and mov cmp scas push rex.X adc cs mov and add pop and pop cmp xchg xchg out in (bad) mov imul (bad) iret mov loope xchg rex.RXB or pushq (bad) mov movabs cmp rex.WX (bad) mov jle mov orl add adc (bad) fsubl test jb xlat sbb rex.RXB (bad) pop rcr stos sti movabs or movabs and jnp push sbb add rex.WRB addr32 or jo xchg xchg sbb mov jns fisubrl out test xor in push test add pop (bad) pop ja ffreep sub clc jrcxz scas movsb sub mov (bad) mov scas jno fnstenv jbe or lods jrcxz,pt rex.WX jmpq cltd adc xchg pop test mov adc pop imul nopl (bad) mov rex.W jp retq push rex.R xchg fistpl (bad) sub rex.X fndisi(8087 or rex.XB adc (bad) or test push sub fwait and (bad) (bad) pop rex.WRXB sarl flds lahf fstpt out sub mov add xlat mov fucomi mov jnp movabs scas imul or rex.X (bad) fildl rex.W mov (bad) lods push sub cmpsl cmp cli testb jnp cmp (bad) rex ds in mov push (bad) cltd add iret mov fmuls roll cmpsb fsubrl pop fildl xchg rex.WX fstpt mov rex.R loopne xor add pop push xor jnp pop cwtl sarl rol ja mov movsb mov mov fistpl imul clc rex.RXB rex.X pop fildl lret outsb jae stos sahf push xchg fisub movsl (bad) movsb push mov xorl (bad) (bad) fs (bad) sarl (bad) popfq in fldt pop int rex.WB cmp push fldt and mov pop repz cli test cmp fildl cs jge mov retq xchg (bad) mov mov movsb jnp fsubp add fucomi mov mov pop notb sbb push (bad) movslq fildl and adcb (bad) rex.WRX fistl add movabs pop adc adc mov (bad) sub sub (bad) (bad) pop push es imul sbb adcl iret scas ficoml stc pop cmpsl scas sarb push retq mov rex.WRXB outsl (bad) cwtl (bad) outsb rex.R (bad) mov sbb rex.B sbb (bad) rex.WR movabs rex.RB in (bad) jne or andl enterq mov fldt rorb sbb mov (bad) rex.WRXB mov int3 or add (bad) insb fimul (bad) rex.W jno jnp jg iret cmp sbb js repnz jmp and (bad) (bad) (bad) mov rex.X outsb jle fldt (bad) rorb (bad) cmp divl mov (bad) fistpl (bad) jp test loope sub scas (bad) jae cwtl (bad) pop mov clc fistl sub lock push jrcxz adc pop (bad) jmp mov subl cld sbb adc and addr32 rex.WB js pop fsubs push rex.RB (bad) cmp and jg pop mov pop (bad) xchg or fistl mov fisubr jo (bad) gs (bad) cld rex.WRB ds and jl push cmpsb addr32 fldt mov (bad) fildl pop sub rex.RXB mov insl mov es addr32 mov fnstcw movabs pop adc xor (bad) fldcw xor xchg cmp pushfq (bad) xchg jnp ficompl cli movsl pop pushfq (bad) mov rex.RB rex.XB jb ss pop mov add rclb and xlat pop jge (bad) push (bad) sbb and mov xor cwtl fnstenv pop out push jle (bad) std sub (bad) test test mov outsb (bad) pop sbb push test jecxz outsl sub rex.WRB fist sub (bad) xchg cld xchg (bad) xchg sbb push adc int ja cmpsl test pushfq jno xor rex int shll pop sub mov pop jnp retq addl cltd nop jns xchg sub (bad) insl sbb sti cmp fstps rex.RX (bad) fistpl stos push (bad) (bad) cwtl or std jae pop out add sbb adc (bad) and (bad) adc fisttpl mov clc cmp fisttpl mov cmp leaveq loop fildl pushq pop rex.WRXB test mov cmp rex.WB jno movslq push cmpsl (bad) (bad) xor fcmovnu cmp lea adc mov popq movabs rex.RX rex.WXB repnz push jmp pop (bad) sub rex.WRB rex.WB pop add adc in jp sub rex.RB sar rex.WX xchg pop jae (bad) xor add jge xor scas rex.R jmpq (bad) mov push fisub push loopne pop int add in mov test jnp mov push jmp rcrl rex.RX push lock or movl fs sbb push fiaddl adc loope addl mov rex.XB pop mov mov lret rex.RXB rex.WR adc (bad) lret pop push mov jl out mov or in pushq or fisttpl (bad) sub (bad) imul movhps (bad) loope test adc (bad) fdivr mov jo ror mov pop rex.WRX outsb iret leaveq pop imul mov (bad) outsl add fildl and outsl and cli adc (bad) movabs and add stc cmc sahf push pop rex jbe or movslq xchg pop (bad) cwtl insb mov mov or push in scas pop hlt pushfq fistl callq leaveq int3 adc mov sahf bndldx jrcxz and movsl (bad) stc pop push sbb xchg nop xchg push fildl jo rex.WXB jne mov jmpq push mov fistpl movabs lcall xchg movabs and add std (bad) pop adc sbb rex.WB push retq cmp add sbb stos rorb pop (bad) xor jnp push neg pop xchg jrcxz in jnp mov in (bad) dec ja (bad) mov addr32 jge out fcmovnb pushfq int3 cmc or imulb mov rcr jbe jno push lahf jmp xor mov push xchg add pushfq fildl insb (bad) test movslq fcmovne xor int3 push insl push xor mov std loop jl mov mov mov push retq sub (bad) lret outsl xor mov sub (bad) popfq rex.W setg in cmp xchg (bad) fs stos or or (bad) pop (bad) in fistpl or mov push lret jrcxz lea (bad) int3 test (bad) fs pop movslq sti xorl (bad) sbb cmp xchg rex.WB xchg xchg pop (bad) cmpb push (bad) and insb fisttpll fwait and (bad) cmp add ficomp sub sbb cmp (bad) in and fs out jbe pop (bad) mov sarl mov rcrb rex.W fcompl stos mov fdivrs push mov push pop neg lods pop jo (bad) mov and fildl movslq rex.WXB adc sub (bad) fcomps (bad) gs (bad) xchg lea (bad) pop xor test cmpsl ja (bad) pop sbb jge hlt pushq fildl mov clc test fwait rol movsl cmpsb leaveq insb jnp rex.W lahf lret imul and sbb mov cmp jo fild test (bad) and pop (bad) fldt fxam fwait sarl fisttpl rex.WB fcmovne hlt fbld adc fisubrl pushfq push jae icebp fidivr xor rex.RB sti pop fdivp jne pop mov rex.RXB (bad) sbbl jb sti movabs sbb xor rex.RXB in and or fstpt jne and (bad) cmpsl fildl (bad) add pop or mov gs jp movslq cmp pop je sub fstp sbb mov callw adc xor and (bad) std gs mov movabs push fwait scas rex.WRX std imul sub pop pop (bad) repnz clc push js (bad) (bad) adc fldenv jnp cli xchg fstpt cmc xchg sbb mov add movabs mov fcomi out loope addl fisttpl movslq data16 fs movabs stos insl push xor jo fstpt rex.WRX (bad) fildl (bad) cwtl adc pop fstps nop fisubrl fmull adc (bad) fistpl lods (bad) scas rex.RX sub cmp xor pop fistl sub pop cmp xor xchg (bad) loop rex.WB jg cmp jle movabs or cltd sbb (bad) mov or add hlt push test rex.R mov sbb lcall xor rex.WRXB xor hlt xchg mov push fistl (bad) mov (bad) jmpq fistl data16 pop cmpl retq xor (bad) jge or pop pop add data16 lret out cld leaveq mov xor mov sub sub fbld pop jg push (bad) jae int mov loopne (bad) iret rorl jns shlb and data16 cltd adc xchg (bad) rex.W cmpsl fistl lods sarb stos rex.RXB sub rolb fnstcw add icebp sub xlat mov and (bad) pop fcoml mov mov and xlat int3 or pop lods push (bad) stc xchg cmp sti cmp pop ficompl icebp (bad) stos repnz (bad) fist es (bad) nop (bad) (bad) imul (bad) push and mov jge (bad) mov sahf sub cmp retq add mov fistl jbe rcrl sahf loop add and fcmovnb jno add push (bad) jbe rex.WX sbb jmpq outsl clc enterq pop test test (bad) (bad) ja mov jrcxz insb push ficomp cmp rex.RXB or pop (bad) in fistpl sbb cmp rex.XB repz fldt or fs jmpq (bad) fisttp (bad) (bad) (bad) (bad) mov mov lea push fwait (bad) pop (bad) rex.WR add and clc fwait cli rex.XB mov mov out and insl mov jno (bad) sbb movslq push iret outsb and mov fadds rex.XB pop rex.WX lock fstpt fnstcw pop mov jns fwait rex.B es test sub cmp mov push movslq jb imulb out (bad) cmp sbb (bad) (bad) sub xchg rex.WRB mov xchg adc mov (bad) in ds pushq sub fistl adc sbb test pushq mov (bad) (bad) and mov cld (bad) xchg gs repz mov decb cld mov lahf rclb (bad) rex.WX fldt pop pop xchg je xor fs scas movabs mov sbb jo lods fcmovnu pop movsb js hlt in or adc pop fs add fwait cmp in in (bad) pushfq push repz or rex.WXB (bad) out outsb fldt jo pop adc jae mov imul add and mov lahf (bad) xchg jnp int3 insb push cmpsb out push fstpt in nop mov push clc data16 cmpl cmp cmp sub outsl cmp pop rex.WRXB or and rex.WXB fwait out hlt sti push scas fistl add pop retq jns pop fstpt rex.WX sub push mov fwait rex.W jnp fcomi in jae jo push retq (bad) leaveq callq or shll fistl retq (bad) sub add cmp or jmp xchg fcoml add rex.R andw gs add sub adc (bad) or cmp push (bad) rex.WR lock scas fucomi xor lahf rex.RX adc xchg add test jnp mov imul jo,pt pop rolb adcl sbbl sarl cli lret fs insl fstpt jb (bad) sbb je mov (bad) fmul xlat out fstpt (bad) fucom mov sbbl stc movsl rex.W outsl callq in rex.WRXB mov push (bad) pushq mov xor sub out (bad) cld addr32 es jl scas rex.B cmp xor rex.WX (bad) (bad) jrcxz stos cmp sahf jne retq (bad) cmp and pushq push loope push mov outsb xchg pop mov pop jmpq xlat pushq jnp mov cs out jmpq add out ds add test imul (bad) push (bad) mov jbe rex.RX rcr jl js (bad) outsl xchg rorl pop (bad) rex.WRB in mov cld add data16 stc sbb mov insl jp mov pop (bad) ja pop rex.R jge push clc (bad) repnz xchg cs rex.X enterq out or pop jne xchg pop jge sarl and (bad) jmp xchg fs pushfq callq (bad) add out (bad) (bad) js fucomi jo (bad) sbb (bad) xchg cmc jl (bad) (bad) out (bad) mov lahf retq sbb ficoml pop (bad) (bad) sub (bad) mov popfq mov pop ja (bad) mov lods clc stos cmp (bad) mov cmp add mov jne and mov rcll sbb sub push (bad) mov retq mov (bad) rex.WB mov mov fcomi sub adc cmp hlt fwait rorl sub xchg adc rex.XB sub jp pushq or xchg js rex.X fwait xor nop push or (bad) loop mov fildl pop push (bad) rex.RX fisttpl mov cmp and fldpi (bad) out cmpsl jg push mov stos add (bad) mov fldt pushq pushq movsl (bad) fs mov test fisttpl sub mov mov clc imul mov (bad) pop mov out fwait rolb int popfq cmpsb cmp sub (bad) adc mov xchg fwait mov sub and sub pop xor roll or roll rex.W and (bad) (bad) movslq stos stc lret sbb xchg xchg sbb movabs rex.X int3 jp ja push rex.WR and int (bad) mov (bad) lret mov stos mov and (bad) mov or pushq (bad) insl sub mov mov rex.RXB nop pop lods sub (bad) and rex pop ficomp loope ds (bad) jb stos (bad) pop imul or add callq fcmovnb add fldcw fnop rex.RX mov or xchg or movabs in push mov leaveq mov push fildl jnp rolb (bad) ss mov (bad) fucomi xchg jnp fildll jns add sbb mov xchg fldt jbe add push adc fildl (bad) (bad) and jo loopne cmp rclb rex.WRX pop jmp pop mov retq cmp adc jmpq xor (bad) mov push cmp insl pop pop (bad) (bad) in data16 int je fmull je loop rex.RB pop stos jle shr mov jge and pushq loope rex.RB js fist sti iret imul adc fnstenv mov icebp (bad) adc mov jae xlat retq rclb or add (bad) in test loopne movsl xor scas out imul (bad) pop (bad) fsubs pushfq int in pop je in sub (bad) xor cli stos xchg mov jae add mov orb (bad) ja xchg seta icebp popfq (bad) jns iret roll cmp callq lock jb xchg (bad) push sbb jmpq insl xlat sub rex.WRB fwait mov lret pop cmp adc add or cli bswap fcmovnb xchg in fdivrs callq fstps hlt jo jnp cmp fildl rex.RB (bad) (bad) xor mov jns xor cwtl (bad) scas movabs (bad) mov addr32 rex.WRXB pushq (bad) (bad) rex.WRB rcll (bad) rex.RXB imul rex.WB mov loope mov jg jge pop in adc outsl pushq jbe cmp lock rex.B rorb fstpt jns fistl (bad) cmp (bad) lods mov loope fidivrl add adc (bad) sub fildl xchg fildl (bad) cltd gs add adc cmc addr32 (bad) cmpl callq xlat or repz adcl (bad) (bad) rex.XB sub scas fildl xchg (bad) mov jge outsl push (bad) lock fwait (bad) mov enterq xor mov cs jrcxz cmp je int adc mov data16 mov push mov pop cmp adc jg xor gs xchg stc (bad) lret pushq jle (bad) (bad) rex.WRX or xor out rex.WXB mov rex.WRXB xchg mov imul mov insl xchg jmpq mov (bad) cmp push or leaveq stos jbe mov (bad) data16 out (bad) rex.RB imul movsl fcmovnu (bad) rex.WX gs mov jg fstpt xor xchg cltd sub push and cld imul movabs pop sahf in out (bad) cmp rcrl cld pop adc mov fldenv fwait mov mov mov sbb (bad) int3 fadds mov jnp fs mov fisttpl (bad) clc repz mov xchg retq (bad) (bad) movslq lods test fistl and rex.WRB lods (bad) (bad) jne cld int3 xor fcomps movabs data16 (bad) pop xor fcoms imul rex.XB rex.WRXB repz fistl repnz pushq roll loopne mov push pop jne out out xor cmp out sbb and rex.RB ds (bad) sbbl xor lods clc jno jb cmp fildll adc and fstpt sbb stc cltd lahf test leaveq pop lods scas (bad) (bad) (bad) add (bad) sub stc rex.R repz (bad) fimull jnp mov loope or out and lock add rex.W fnstenv rex.B fcmovne cmc (bad) adc or int3 pop outsb fsubrl pop xor mov js rex.WRB lods xchg shr (bad) mov lret pop outsl (bad) (bad) enterq iret sbb sub fs rex.B (bad) jmp (bad) movslq rex.WB jmpq fdivr stc (bad) xor sbb mov callq fcmovnu and (bad) mov mov add (bad) callq int3 (bad) stc movsb mov jmpq fsubs (bad) sbb rex.WRX rex.WRB (bad) or mov fnop add loopne (bad) push mov mov enterq notb add rex.X adc jns imul movsb xor add (bad) xchg cmp (bad) xchg (bad) imul lret pop cmp mov sti imul (bad) sarl pop xlat xor mov push addr32 stc pushq jno iret (bad) sahf cmp pop clc fidiv in rcl mov add rex.WX iret fs add (bad) xchg mov lret loopne rex.R outsb sbb and cmp sti (bad) lods movabs and sbb rol xlat pop loop sbb jae imul test sbb jp callq int vmovsd or ror mov and movsb pushq lock mov cmp rex.RX cmp (bad) push lea insb mov rex.WR iret outsb pop cld pop sbb fcompl or (bad) sub (bad) mov jge fidivr xlat hlt rex.WB jge pop adc rcrl xchg mov pop xor add lods js rorb popfq lret sub add insl xchg rcl xor xchg xor rex.W (bad) xor mov add jl add repz sbb (bad) xchg and jnp je imul and (bad) outsl add lret ja (bad) adc in cmpl or mov stos out ss lods callq movslq hlt mov es cmp icebp fstpt fnsave rex.B jo add loop sbbb out hlt js loope sarb mov (bad) (bad) or push ss xchg cltd mov cltd sub mov (bad) mov movabs lods insl mov (bad) mov rex.XB fwait xchg rex.R rex.X push (bad) (bad) mov imul (bad) push sahf fist sbb lahf lahf jge jo xchg subb and or sbb out lods mov (bad) mov xchg sub insl add pushq fildl imul nop mov or mov lods pop (bad) fnclex jrcxz sub fadds sbb rex.RXB outsl mov fcmovnb and push mov mov fistpl pop and jae cmp and sbb retq add mov int3 (bad) mov rcrb sbb lahf ss fistl data16 rex.RX lods jb pop jno scas movsl rex.WRB popfq (bad) mov add (bad) xchg and and stc insl lahf push loope add fcmovnu jb test adc outsb pop ss mov rex.WB fstp push fcoms add mov fimul in leaveq mov mov adc jno pop out add sbb fistl lods loope sbb stc xchg lods pop scas (bad) (bad) orl popfq push push test pop pushq fistpl mov out divl pop (bad) movabs mov imul nop mov cmp rex.WXB gs jmp pop pop xor out xor mov xchg int3 (bad) rorl fwait movslq pop mov ss (bad) lret in xlat rex.R nop roll (bad) mov mov or cltd jne add loopne retq xchg retq add lods fiaddl insb repz mov sbb jb push xchg sbb (bad) cli pushq addr32 pop retq loop rex.WB mov movslq fwait xchg cmpsq repz lret pop sub sbb callq sbb mov xchg rex.RB mov repz cmpsl or incl xchg cmp mov adc xchg jl retq iret rex.WRX jmp es hlt iret jnp rex.WRX xor sbb rex.RXB ss (bad) fidivl mov jnp out int hlt add rorl shll sbb pop lret fistl and imul mov in fdivl jnp sub ss in sub (bad) (bad) movsl (bad) fisub mov mov movabs idivb in (bad) (bad) rcrl lock test sub pop fwait xor mov xlat stos jg ficoml (bad) jne lret jo and addr32 fcomi imul xchg pop push mov (bad) sub (bad) xor std or rex.WXB fwait push fldcw rex.RX mov pop xor loop pop stos sbb js fidivrl add cmp jnp (bad) or outsl rex.WRB fistpl rex.WRXB pushq push addr32 rex.W (bad) jmpq xchg pushfq rex.RB mov fucomi cmp nop mov adc mov xchg rex.WX add mov sbb (bad) fldt mov pop frstor xor jrcxz adc pop rex.WX rex.X cmpl lahf rcrb (bad) cmp pop gs or sbb roll mov mov (bad) cld jrcxz add sahf rex.WB pop rex.WXB fwait stos push (bad) cli pop (bad) rex.X mov (bad) jle xchg fadd sub rex.WRX (bad) (bad) (bad) int push or fcmovnbe mov adc (bad) pushq insl repnz (bad) sbb pushfq pop xchg adc sbb je divq mov rex.RB cmp cli add cld xchg outsl rex.WRX jbe stos stos test test enterq mov fild sub push iret rex.X jns in sub cmp fldt cwtl rex.WRB sub (bad) sbb rex.XB add imul cmpsl rex.WR xchg (bad) add stc fmulp fildl pushq insb retq (bad) mov movabs sbb push or shrb xchg mov and (bad) mov loop cmp stos roll mov (bad) mov rex.WRX xchg sbbb fwait in cwtl mov js enterq cmp push or adcl es cmp pop (bad) (bad) (bad) xor or rex.WXB out (bad) xor xor and mov mov shll (bad) xchg fwait jo out jmp rex.RB out fisttpl rex.WR fldcw fmul retq mov or push jp (bad) mov int3 js out fwait (bad) add cwtl xchg add add cli push or sbb jmp callq (bad) fcmovnu mov push (bad) fildl rex.XB fsts cld rex orl pushq jle outsb mov movabs sti adc sti scas pop movsb cmp xorb js mov (bad) add fnstsw test fcmovnb iret ja repnz jne (bad) lods (bad) pop movsb mov out jns mov (bad) fcomi jmpq movabs rex.RB (bad) sub out insb push fcomi movabs fildl push cmp fildl mov and cmc add fisubl jl addl push (bad) mov out stc (bad) repnz or (bad) jo push push and sbb (bad) hlt jb jne enterq rex.X bnd sti sub js and pop cld repnz imul mov (bad) add jns xchg push add sub enterq idivb push iret movabs xchg mov rex.WX scas and rex.WRX rex.RX rex.WRXB mov cld jns push pop sbb xchg pop lods in (bad) sub mov xchg js cmovo int sub (bad) pushq bndldx cmp sti mov rex.R rex.WXB movslq data16 mov loopne icebp push mov and sub lret pop xlat repnz mov xchg push push mov mov xor repnz push rex.WB vandps add (bad) test push cmp scas lock sub xchg callq xlat pop (bad) (bad) jmp pop cmpsl fmuls mov out cmp mov rex.B callq xor (bad) jnp or rex.RB (bad) (bad) jmp add lret pushfq rex.WRXB (bad) fcmovnb jae clc movsl pop adc int3 xchg js rex.X lret jbe shr or (bad) fldt js add rcr fdivrs (bad) xor fidivrl stos fwait in (bad) mov jo xchg sahf roll movabs rex.R rex.WR mov rex.WR es cli add rex.WB fucom mov xor out out pop or and (bad) (bad) loopne and push gs and adc fist int (bad) in cwtl cmp pop sarb rex.WRB rex.X jle mov imul rex.XB iret addr32 cmp test sahf and pop and mov (bad) mov retq xor pop outsb xchg in adc cwtl pop sarb cmp es cmp or fstpt enterq sbb out (bad) stos adc imul sub hlt sub xchg fcmovu int3 fldenv sub adc iret pushfq fbstp pop (bad) std rex.WR jmp outsb cmp xchg xor outsl push fldt je lods sarb iret rex.WRXB pop fstpt mov imulb pop (bad) retq ja rex.X lods (bad) add add cs (bad) leaveq jnp mov rex.RB (bad) insb and in int sahf scas jnp mov fidivrl outsl movabs js push add jnp mov mov (bad) (bad) out test fisttpl rex.WRX pop pop shlb cmp mov rcr in (bad) sti adc cwtl add insb and repz leaveq loope sub jnp xchg adc int3 jg int movabs jmpq jrcxz rex.W xchg fistpl push std adc lret xor je cmp jne imul jns fcmovnbe xor test jo jl lahf mov rex.XB js ja imul ss (bad) lret hlt pop fwait (bad) mov lods mov and cmp mov pop (bad) mov pop icebp cli repz push mov and loopne ds fs mov (bad) jge rex.RXB int3 (bad) pop mov cmp (bad) fistpl mov push data16 jnp and mov mov sbb int (bad) (bad) fwait xchg sbb (bad) leaveq idivl xor (bad) sub inc test jae xor movabs (bad) (bad) (bad) mov xchg icebp and lahf rex.X sbb pop je,pn mov lock cmp sbb rex.WB or fldt ja hlt (bad) fld fstpt or jrcxz add add sub in (bad) sahf mov rcl iret or (bad) or insb jb add enterq mov orl rex.XB rex.WRXB sbb rex.WR movabs rex.X mov push sbb mov sbb iret sub sbb cmpsl sub jge and adc rorl (bad) pop cld subl addr32 add or data16 imul jns push xchg (bad) (bad) add test retq (bad) adc rex.XB mov repnz (bad) jnp pop sbb cli (bad) repnz fistpll outsl or negl loope xchg jns pop (bad) fnop (bad) ja pushfq mov xorl and or pop mov jg (bad) mov (bad) test js xor out jbe adc pop retq repz mov push rex.XB sub out mov test jrcxz jo insl (bad) sub ja jrcxz insl bnd rex.RXB cmpsb (bad) fidiv jp add jbe (bad) xchg adc add incl movabs xor jns fdiv out mov (bad) rex.WB movabs rex.RB out xor mov add mov ja (bad) or (bad) sbb (bad) sub xchg fwait stc pop test fst lods cmp xor ss rex.WR pop cmp iret pop xchg (bad) out lret mov rex.RB out mov mov cmp pop jb push stc test (bad) pop rcrb leaveq (bad) xor repnz test pushq jo scas stos adc xchg imul or or jne in int3 fwait (bad) adc or add sub stos pop adc jp (bad) (bad) stos fbld lahf sub lock (bad) cld jrcxz rex.WRXB ficoml push pop retq cmp or pop cmp fwait sarl jle (bad) es (bad) jge js adc rex.B addr32 (bad) fs xchg pop cld je movabs mov js (bad) test pop fsubrl fwait mov loopne lods test roll add rex.WB jnp push xchg ror movabs push pop insb mov ja movl lods cmpb mulb mov push int mov mov scas fwait int3 rex.R (bad) mov mov lock pushq gs mov pop sbb (bad) xor lcall or lahf (bad) pushq roll fldt sbb or (bad) (bad) imul (bad) sbb (bad) pop (bad) rex.W pop or popfq rex.WX jg jg (bad) int3 fnop fldt callq xchg adc pushq (bad) orl loope movsb fidiv (bad) fs rex.WR rorb jno jae callq (bad) stos loope loop pop (bad) mov push jge ja and fisubrl mov (bad) fsubl sbbl xchg (bad) xor movslq cmpsb (bad) xchg fldcw orl fistl cmpsl mov fldt idivb (bad) mov lea fildl cmc rex.X pop stos mov outsl (bad) imul rex.RXB movabs cmc adc lret rex.RX cmp in xor (bad) repz jne cmp (bad) pop (bad) (bad) ss mov loop and rex.WRB rolb xchg xchg iret rex.WRXB mov xor or lret (bad) pop (bad) xchg push (bad) xor addl leaveq fistl movsl cmpsl pop or jg flds cmpsb imul fnop (bad) or xchg in (bad) test sub cltd in fnstsw push pop ds scas adc xchg mov stos sbb sti fiadd out imul mov sub jrcxz lock sti and pop add cltd add pop (bad) cmp sub pop imul rex.R repnz mov ficoml pop xor cmp test (bad) push or movabs mov pop iret add (bad) fist rex.RX iret adc push fwait xchg add jg repnz mov addr32 xor xchg (bad) (bad) cmp (bad) (bad) popfq cmp (bad) movsb xchg neg mov (bad) lret jle fwait addr32 movabs fbld mov rorq pop and fidivrl sbb stos sub adcl pop pop outsb jle sbb jnp std mov fistpl xchg fxch shrl fcmovne jle mov (bad) (bad) jbe jnp lahf dec adc sbb lods sahf (bad) mov lea scas adc cmpsb retq fiadd clc sub callq fisttpl addb mov rorl rex.WRXB and imull mov pop jle adc movslq jle pop repz jl lods imul out mov mov test (bad) mov movabs loope or push cmpsb jae jae (bad) out pop jp sub mov (bad) (bad) rex.WXB rex.R fwait cmpl push movabs rex out (bad) xor rolb outsl (bad) (bad) (bad) fisttpl (bad) push std (bad) (bad) pop (bad) xor movabs in adc (bad) pushfq pop xchg fcmovnb sbb (bad) cmc push imul pop mov js sbb (bad) sub movslq callq (bad) jbe xchg (bad) fildl rex.WXB iret jmp rex.WB fistpl movabs (bad) repnz adc test (bad) rclb enterq mov pop rclb (bad) mov mov outsb jb fcomp pop xor dec fisttpl sub mov xchg fldt sbb jge je xchg pop adc stos sub iret (bad) scas mov jnp pop (bad) jrcxz adc mov outsb stos sbb fstpt cltd icebp clc jbe (bad) fmulp imul lret fstpt sti imul jne fistl hlt sub (bad) cwtl sub (bad) sahf add rex.R and push rex.X fwait xor jge retq cmp push rex.W rex.RX cltd (bad) movabs rex.WR callq movabs jrcxz push fsub stos and and jnp fildl loope sbb test xor fildl callq cmp and divb es (bad) jns rex.WR rex.RB (bad) ror sbb fndisi(8087 (bad) mov or jae neg mov xor movabs mov cmp hlt adc cmpsl cmova pop popfq xchg xchg (bad) (bad) insb fwait mov lret subl jge rex.WRXB cmp (bad) mov lods callq push pop (bad) ficoml jno,pt sbb movslq imul (bad) xchg xor (bad) sti hlt (bad) in and pop mov cmp cmp sub pop xchg cs rex.RB lret cli mul sub (bad) jrcxz fistpl cmpl (bad) (bad) (bad) jle stos shrl lret mov pop jmpq cmpsl movnti (bad) imul cs fcmovnbe sahf push push scas rex.X fistl jo ss rex.WRB mov xchg xchg mov cmp (bad) rex.WB repnz lahf rex.X in repz test xor adc mov movslq push clc cmp sub or pop jg or (bad) jmp adc test cmp mov fnsave in mov mov lock adc xor sbb lods (bad) lret rex.RX fisttpl in rex.RXB enterq jle jns scas (bad) je sub rex.XB cmp (bad) fcmovnb (bad) jo push mov add imul and ds adc pop fcoml and out mov ficomp xor data16 movslq fistpl out jg decb (bad) (bad) xor cmpb sbb pop rex.WRXB sub jno cmc pop push push (bad) je movabs loope xor pop insl jo imul stc mov jmpq int jnp mov movsb cld mov movabs pop scas out adc add adc (bad) ds mov push test mov push xor mov jo fmul out repnz add xchg js stc (bad) cs repz mov gs lret push push js sbb jb and not insl iret fiaddl rex.W je (bad) (bad) insb movabs (bad) addr32 imul mov (bad) mov notl or ficoml sub loopne cs (bad) mov rex.RXB sbb test (bad) sti fucomp xor pop fisubl push or (bad) (bad) wbinvd mov xor cmpsb (bad) jp out sub cmp pop sub (bad) (bad) cwtl dec pushfq movabs mov and jrcxz fs or rex.XB loopne mov (bad) xor loope lods retq pop lahf mov int3 loope jns callq (bad) (bad) jg jbe sti (bad) push cwtl loopne or sti mov xchg xchg lret rex.X rex.RB rolb (bad) jp fcoml pop sub rex.RB jmpq js push sub lock sbb out cmpsl (bad) movslq movsb mov retq rex.XB mov cltd pop (bad) fistpl fwait lahf fistpl je or cs adc cmp jne fwait xchg notl sbb jb xor lahf (bad) incb clc test mov fyl2x xchg test sbb cmp sbb rex.B movabs pushq adc (bad) push ffree mov jnp push xchg rex.WB jmpq sub jne pop mov cmp (bad) movabs xchg loope cmovle push (bad) cld sbb pop and and (bad) stc fcmovne xor and cwtl movslq enterq movabs in rcrl and stos (bad) or int in lahf cmp sbb imulb repnz or popfq lret mov (bad) callq fistpl mov popfq pop lods xor rex.WXB adc rex.X fiaddl es xchg lret movabs (bad) or xor xchg jle fwait rolb sti add or lahf orl std (bad) ss xor (bad) add xchg int3 mov push mov fsubrp fistp seta adc add mov (bad) lods pop mov and fucomi and sub and outsl int3 xorl int cmc rex.RB callq popfq in hlt movsb test mov stc fisttpl pushq rex.WRX fstpt adc (bad) pop xchg incb mov adc mov faddp or rex.RB fstl add (bad) cmovne movabs push cld rex.RX rcr pushq (bad) pop or xchg test push sub and test negl sub movslq in popfq pushq data16 (bad) (bad) xchg fs sub fwait (bad) shlb (bad) sub (bad) mov rex.WRB or sbb loope fwait icebp gs (bad) xor and sub pushq jl mov out sub sti xor push sub imul mov sbb mov push in in movabs fs imul rex.XB (bad) (bad) int pop add jnp mov sub pop jrcxz (bad) jmp push cmp mov addl mov (bad) mov jge sbb imul push and xchg mov fcmovnb test jo mov lods rex.RXB mov movabs movabs test rcrl es mov mov (bad) adc jnp and sub cmp fucomi adc rex.WRB add fisttpl sbb movsb pop (bad) loope xor xchg pop jle rex.WR jrcxz pop rex.WXB rex.WR rcr sahf adc (bad) clc rex.W fistl fisubr rex.WRB pop or outsl pop lods andl jmpq (bad) pand in loop rex.WRB mov mov (bad) pop js rex.WRX rex adc (bad) movsb mov fldt (bad) pop leaveq xchg xchg lret fstpt and push sub lahf or test scas mov (bad) xchg fwait (bad) lea movabs pop (bad) fistl std sbb cmp sti fcmovnu rex.RXB xchg (bad) fildl bndstx mov xchg cmp test divl cmp es popfq push leaveq loopne iret mov rex.WB and fldt out mov sub sbb rorb push mov mov loopne jne fstpt sub (bad) push (bad) xlat vpshuflw and cmp (bad) mov pushq push jg movsb (bad) lret shlb stos in fildl jbe and clc (bad) xor int rex.WX jnp insl sbb rex.W movabs rex cmp loopne hlt retq pop sbb (bad) fwait jns jl (bad) (bad) (bad) fistpl (bad) or data16 or out iret andb xchg rex ja pushq pop mov xchg and and or xor mov stos pop (bad) loop cmpsl (bad) jl (bad) jle pushq cmp fcmovne rex.WX pop cli imul addr32 (bad) xor gs sbb (bad) callq cwtl mov popfq rcl stos lret (bad) fiaddl (bad) in and and int3 gs cmp movabs jbe cmpsl sub es fisttpl add fldt mov (bad) mov outsl stos fistl or enterq leaveq int3 movabs pop sar xor jns rex.WRXB fwait jo imul push loop push movabs adc jmp negb (bad) loop loope movabs std (bad) insl mov leaveq in out insl push cmc (bad) ja xchg stc sarl shrb (bad) add loopne movabs mov iret sub (bad) enterq outsb test mov pop rorb scas movabs (bad) push nop sub push mov mov mov data16 mov (bad) xchg stos mov test sbb js hlt push (bad) (bad) fmull rex.WRX (bad) (bad) and (bad) sub mov (bad) mov mov xlat jp jne int cmp or (bad) add sub fbstp pop lcall jle jmp repz or (bad) (bad) rcrl pop cltd jne push sahf ja push mov sbb pushq in push (bad) fldt mov fwait in jnp adc (bad) sti scas pop sbb clc (bad) sbb pop (bad) scas (bad) js lock out lret or fst fisttpll mov adc imul or rex.WRX xchg adc xor add fs xchg lret push push (bad) rex.WR loop,pn or cmpsl (bad) pop sub (bad) cmp outsl or adc jrcxz sub mov and mov rex.WX cs int3 xchg xchg xor lods pop ss mov rex.WB rex.WB (bad) jno loopne in or sub (bad) (bad) roll jnp add (bad) fisubrl jo (bad) xchg jp loop addr32 in cli rex.WR cld cli cmpb test fcom (bad) or fcom in cli mov imul retq ss loopne jo out xchg push (bad) sbb (bad) pushfq int3 push pushw jge and rex.WRB fwait sbb (bad) loopne mov lods mov fdivrs pushq sti sub jle (bad) jne ficoml mov cmc retq retq sbb adc pop fiaddl sub xchg cld push stc push sbb adc movabs (bad) jnp jmpq (bad) mov out jrcxz in lods loope loop xchg (bad) jne (bad) mov (bad) push roll xor sub pop (bad) xchg (bad) adc int3 pop push (bad) add out push fcmovnbe jmpq or rcrb pop movslq and cltd sub adc andl fiaddl sbb cs xor mov mov imul rex.WRB clc mov (bad) pop xchg or hlt clc (bad) (bad) (bad) rex.RB popfq jg movsb (bad) xor add movabs lock add iret (bad) xor xchg (bad) mov stc mov (bad) adc cmp xchg lock clc sbbb mov cmp xchg rex.RXB adc mov lock (bad) cmp mov rex.W in xchg jle jnp sub stos add push (bad) jns adc mov lods lods and sub pop add lock mov movabs ja pop xchg pushfq rex.WR (bad) fwait or (bad) insb adc and jrcxz xor xchg loope jrcxz push sbb ja (bad) (bad) mov fsts mov xchg add (bad) xchg loopne fxch loop setbe rex.WXB pop testb pushq sbbl scas (bad) fsubrs sbb (bad) js (bad) (bad) outsb xchg imul loop sbb out scas out push loopne mov popfq movabs sub (bad) (bad) (bad) int3 cmpsl xchg scas (bad) rex.WRXB jae (bad) gs fndisi(8087 cmp addr32 fisubrl (bad) adc sub xchg and data16 xor pop shrl xchg lea fs adc sbb movsl adc (bad) rex.RXB rex.WB (bad) rex.WB ss xchg fist jle adc outsb mov mov mov lret rcr sbb xchg stc (bad) mov xor adc stc or rcr jrcxz pop cmpsb mov rex.B mov mov (bad) (bad) mov fsubs push fbstp (bad) cmp popfq leaveq retq out mov (bad) jns movabs pop mov ja jge mov mov nop fdivr mov out adc in minps mov mov mov (bad) rex.RX jbe pop mov add mov and movabs mov int imul mov retq (bad) (bad) (bad) mov jne rex.WRX or mov mov movsl cmpsb movabs (bad) jle adc sbb movabs rex.X std push prefetcht0 xchg sbb (bad) fildl mov out push jmpq (bad) xchg pand add iret fs push pop push rex.R repnz mov jrcxz pop loope rex.WRB fwait in shrl ror mov mov xchg sahf mov sub jge (bad) (bad) sbb popfq (bad) fcmovnb sbb lret add jle pop vmaxsd push hlt imul rex in loope (bad) cmp rex.XB mov rex.WRX add cli pop pop sbb push mov mov popfq hlt stos mov mov mov (bad) cwtl (bad) add (bad) lea stc fildl (bad) (bad) jno cmp sub push and (bad) imul std cs add cmp mov jmpq sbb ja xor and push jne jb mov es mov cwtl rex.B retq cmp fwait or push xchg mov sti in lea outsl (bad) mov (bad) rex (bad) rex.RX mov rex.RXB ds scas mov or fildl xlat (bad) ror (bad) (bad) icebp jnp mov bnd pop pushq cmp xchg int lock sti fildl mov mov movabs pop (bad) mov mov iret rex.WRB (bad) mov rex.WXB lret sti jns movabs add ja (bad) mull js jae (bad) scas fiaddl loope (bad) rex.WR rex.WB pop subb rex.XB rex.WB movsl movabs (bad) popfq insl cmp fucomi icebp (bad) mov xchg mov (bad) movslq rex.XB mov js xchg callq pop xor outsl adc and shr (bad) movslq jne fwait rorl fidivr pop jge hlt add xor loop movsb mov cmc add movslq fldt (bad) push (bad) sub and adc movabs cmp mov (bad) lods fcmovnb in (bad) fnop xchg jg (bad) lret xchg (bad) jmpq (bad) insb movabs (bad) jae push fistpl cld (bad) fisttpl leaveq mov js sbb jge scas and (bad) mulb xchg mov rex.WRB out jnp jne (bad) rclb cmp pop cmpsl lret iret mov shrl sbb rolb fistl adc pop mov stos imul and (bad) (bad) rex.WRX rex.RB push mov fistl (bad) in mov xor pop xor xlat (bad) (bad) pop mov or xchg or movabs mov callq fninit sbb mov lods loope pop retq xchg (bad) mov std cwtl or rorb loopne cltd mov out mov (bad) cld scas rex.WRB xlat lret sti mov stos sbb (bad) (bad) cmpsb jne add fcmove rex.R out scas fcmove (bad) scas rex.WRXB negb pushfq movsb rex.RXB or rex.WB (bad) (bad) (bad) add movabs lret mov add rex.B repnz lahf shll clc fs push jge xchg push stc test jae in leaveq (bad) insb jg pop in rex.RXB repnz fistl mov movsl js pushq fistl push adc push callq pop cmp jnp out retq xchg rclb mov mov (bad) lea pop mov add mov push test cmpsl (bad) shll adc (bad) cs lock (bad) fcomi or xchg ror mov sbb movabs sbb (bad) and in mov stos stc fldt mov push (bad) (bad) or and fldt (bad) (bad) xor cmp movabs add xchg incb add (bad) or cmpsb sbb lods (bad) (bad) mov sbb movsl std cmp imul or sub retq jle mov loopne pushfq rex.WRB jmpq fldcw fwait (bad) pop sbb in adc out in lret push insl popfq push (bad) pushq test mov movhlps cld enterq fistp push pop (bad) mov repz cli sub fcmovnbe rex.WX rex rex.RB cs nop enterq sub pop mov jnp pushq (bad) and test (bad) (bad) iret push pop pop pop xchg sbb shr xchg jp jne outsb fisubl lsl push je rex.X insb stc jp clc (bad) (bad) xor std out fstl je xchg out cltd imul (bad) pop pushq jge pop imul mov out int3 pop mov cmp and imul jnp xchg shrl jg movabs cmpsb adc jae xchg xchg jae (bad) iret or mov xor (bad) (bad) push (bad) fwait (bad) jrcxz out xor (bad) cmp sbb popfq mov (bad) xor fidivrl movslq mov lret cmp xchg pop (bad) repz rex.W icebp jne lret rex.X rex.RB int3 lods out rex.RX icebp popfq sub sub pop jbe mov cltd pushfq (bad) sbb fmul rex.RB push loope rex.R xchg int cmpsl sub loope or rex (bad) in xchg (bad) (bad) out push adc rcrb add (bad) pop out stos add movsb or subl clc (bad) push mov data16 push rex.R imul es lret (bad) cld insl (bad) mul movsb fbstp sub test in sbb rex.RXB int fucomip rcll cli shrb lods xchg (bad) jb xchg jbe sbb fiaddl ss cmp push mov xlat add mov test sub pop (bad) test sub rex.X fnop sub (bad) mov adc stos data16 repnz scas xchg fcom add fbstp fdivrl rex.WB (bad) mov sbb or test icebp mov (bad) rcrl gs clc outsl jmpq adc mov mov stc loope je nop ja icebp rex.RB (bad) adc xchg jle (bad) push xchg xchg pushfq loopne (bad) fstl (bad) (bad) xor xlat sti jae movslq faddl sbb sub mov add push (bad) xlat fidivl repnz rex.B rex.XB stos sbb lock bnd rcrl pushq push movabs mov idiv adc movabs adc rex mov cmp imul movabs jns adc test enterq push ja jle and adc fdivl (bad) (bad) mov fcomp cmp pop gs stos adc std rex.R fwait push int pop (bad) ja fnsetpm(287 pop repnz icebp imul lods and jno mov pushq push retq repnz xchg pop pop fcmovnu (bad) movsb enterq adc pushq xor lahf jae rcr rex.XB movsl push push movabs and (bad) push int3 add (bad) fildl fstps jge fisttpl cmp cs je (bad) cmp sub pushq mov in add jnp xor (bad) fnop mov mov or pop int out rclb add loop mov movabs sub int3 or (bad) fwait sub fisttp pop jae and lret sub pushq cmp pop and decl xor xchg mov retq scas add push lret rex.WR fdivrl jrcxz pop fucomi adc gs rex.WR rex.RX xchg out loop fistl setle (bad) add cmpl cmpsb add loope (bad) rex.WRX add jnp jno cmp jae lods fcomi test and pop jb (bad) mov (bad) movsl mov ficompl fcmovne mov push iret (bad) push rex.WRB fwait xchg rex.RXB fcmovnb sar mov mov (bad) cs divl in cmp adc jle jge adc jbe mov rcr xor (bad) pop mov push pushq addr32 cmp cmp (bad) rex.WX (bad) lods cmp (bad) push rex data16 rex.WRXB gs jg push rorl sbb (bad) pop movsb movsl outsb rex.R xor and (bad) (bad) and cmp push fisttpl test cmp jrcxz pop or lret sbbl xchg mov rex.RX fisubrl rcll or rex.WB push mov (bad) outsb mov rex.RX (bad) outsl xchg rex.WXB loop xchg fnstsw fstpt pop sub data16 pushq xchg (bad) jbe mov sub jl rex.WB jp stc (bad) fldt lock rex.WX (bad) movabs mov (bad) hlt (bad) mov movslq jo movsb mov jnp fistl cli loope pop imul jne rex.B mov mov mov mov mov mov movslq mov jno and (bad) (bad) push xchg insb add sti adc mov and fildl enterq pushq (bad) and unpcklps mov push (bad) (bad) push mov rcrl jb fildl pop jrcxz scas fist fcompl retq int3 mov xchg rex.RB scas cmpl and lods add es jo or lock in fs fistl out and data16 sbb testb jo and xor orl fldt in adc cmp rex.WRXB imull mov adc std (bad) cwtl mov or xchg mov jo push rex.WRX cmpl jp mov sbb fldt data16 imul lea test adcl mov and (bad) add rex.WRX jnp mov fwait cmp enterq fisttpl mov jne scas fisttpl xor pop pop stos jg mov mov gs (bad) scas nop insl imul mov mov pushq jp lret add (bad) fwait ss (bad) pop int3 pop xor (bad) callq add mov or push fs fisttpl enterq pop jne int3 (bad) pushfq cmp push mov lock pop jg cmpsb test fildll std frstpm(287 sbb repz movslq jae (bad) (bad) imull orl push negb fcomi outsl jp mov pop jnp adc icebp cmpsb jnp out mov sub sbb and loop or out jns add ja stos sarb in (bad) and cltd fisubrl jo mov (bad) sbb std loopne imul pop out in gs outsb (bad) rex.WX jae (bad) xlat movsl xchg rex.RXB pushfq ficoml icebp out jnp sbb loope jmpq fstpt sub jp and push cmp movabs pushq jnp (bad) (bad) rex.WB xchg mov fisttpl push push mov jl fstpt rex.RB ss jle (bad) adc repnz pop ds (bad) std rex.RXB (bad) sbb iret cli xor rex.RXB cmp jrcxz popfq sub andb movabs push and jb iret rex.WXB or xor pop movsl fcmovnb sub add and or fcmovnu pop (bad) rex.WRXB or fildll mul add push out fidivrl (bad) rex cmp add test xor or icebp mov jnp rex.WRB jmp int3 test fisttpl (bad) xor cmp in push addr32 fcmovnb (bad) sbb pop pop jmp (bad) (bad) (bad) mov (bad) mov fcompl add retq int3 push rex.W cmp lea fistl (bad) sbb scas adc icebp mov add lret orb cwtl pushq out pop fimull lods (bad) test mov (bad) lods fwait pop adcl insb (bad) mov (bad) sbb mov nop mov imul jnp xchg movsl imul or (bad) mov jno mov jnp mov (bad) sub jp movabs ds hlt test mov cmpsl std mov std fistl scas test pop rol rex.RB fcmovnbe clc adc fistl rex.B fisttpl (bad) (bad) (bad) rex.WRB rex.X rex.WXB jnp sbb sahf (bad) push fidivrl clc or jg callq (bad) rex.WRB movslq int3 jno insl (bad) imul sub pop (bad) mov adc sahf (bad) fistpl jl sub fucomi punpckhwd (bad) jnp fistl rcr jmpq sub pop rcr es jbe (bad) mov cli (bad) add sbb sub mov (bad) mov retq (bad) or add mov xchg imul or movslq fucomp fcmovnbe sub (bad) rex.WB adc out iret movabs movsb cli mov pop (bad) (bad) mov es (bad) pop iret rex.WRB nop (bad) rex.WRB jmpq out jg mov sbb mov (bad) rex.WB (bad) (bad) fstpt ja cltd shrb (bad) (bad) (bad) mov and mov rex.WRX lock pop fdivr add jmp jle cmp mov sbb (bad) or popfq mov mov clc out jns outsb sbb add mov mov xchg mov test mov mov cli (bad) jge add int3 xchg rex.WRX cs pop push fstpt rex.RB jge pop stos (bad) mov rex.WB cwtl fisttpl cmpb (bad) and imul push sarl add mov xchg or jbe mov je movsb add pushfq sbb or jge mov imul int3 push jne mov rex.WXB movsb pop and xor jo sub rex.WX mov mov add addr32 es fisttpl movabs (bad) sti xorl orl jge push stos jmpq mov add ds decl cmp fistl test sbb cli fwait callq out fsubs movslq fstpl xchg jne push fildl rex.RX push add sbb test insl cli push jno outsl add jmpq xor or fnstsw stos loope sbb imul repz mov add movabs mov cmpsl cs rorl sbbl mov push adc in (bad) fadds movslq mov (bad) sbb pop fistl add addr32 lahf sbb jno vandps imul xor pop and jle jnp insb movabs mov addr32 push cmp cmpsl mov pop (bad) push and loop stos loop sbb outsb ss fcmovnb pushfq out test push pop int3 movabs (bad) mov fildl xor rex push mov (bad) pop mov rex.X addl adc fldt gs jnp push mov sti fildl (bad) rex.X pop imul mulb push pop sti adc and (bad) fstpt movsl insl imulb mov mov mov fisttpl popfq xchg mov ficom rorl sbb insl xor cmp mov pand test cwtl xlat jmpq add (bad) rex.RX data16 imul rcl (bad) push jl fisttpl xchg add (bad) cwtl cld outsb pop movabs test fcmovnb jns loopne xchg pop and (bad) jrcxz rex.WRXB (bad) rex.WRX (bad) in sub jnp cmp cmp or outsl nop lret jrcxz cld jns cmpl mov sub fiaddl fisttpl f2xm1 pop cmp and stos lods pop jl adc (bad) icebp mov rex.XB (bad) xor iret mov loopne (bad) clc cmc movslq cli nop add mov pop lods (bad) es lret addr32 (bad) (bad) stos in fistpll xchg (bad) (bad) (bad) xor (bad) (bad) movabs sub mov (bad) xchg (bad) sub cmpsb mov xchg mov (bad) js ds fstps (bad) mov data16 xor rclb int xchg adc mov popfq sub pop mov mov or mov cmp push repnz rex.RXB mov sbb out fsubs mov (bad) mov jg mov cmp xchg or fcomp fdivrs adc cmp (bad) xor nop (bad) (bad) mov (bad) lods fldt xor mov push push push int mov xchg push jnp jmpq sbb std popfq sbb mov push jle adc lock mov jl (bad) or sub mov jae (bad) or rex xchg (bad) jbe rex.RXB callq mov rex.RB fstps rex.RB cmp xor fcmovnb (bad) xchg icebp sub outsb pushfq (bad) (bad) and jae (bad) sub rex js mov mov jb cmp (bad) (bad) enterq jnp jne sbb (bad) mov xchg push rex.B sbb and ljmp out or (bad) sbb adc addr32 xchg pop scas mov mov or pop sub mov pop mov sarb (bad) mov (bad) mov sti pop sahf mov pop pop sub lret outsl fldt mov cmp (bad) jg callq shlb xchg jno scas fldt rex.W ficompl nop lret lods leaveq movabs retq pop jg push xchg pushq movabs xchg sbb xor in or retq fildl and int3 xor cmp (bad) pop and ds sub out fcmovnbe push mov popfq rorl icebp scas jo mov rex.RXB (bad) and (bad) mov (bad) pushfq rex.WX adc and decl fistpl pop rex.X scas jae pop push mov jrcxz iret fwait xor scas pop add xchg (bad) out clc pop mov (bad) outsb rex.WR hlt adc pushq movabs repz addl and pop pushq test adc fidivrl jmp cmp (bad) lock test mov rex.WX jle cmp or pop mov rcl imul sar ror xchg mov add (bad) jae pop sahf xchg (bad) mov (bad) add (bad) jrcxz jmpq mov pop ffreep cmp icebp pop imul (bad) (bad) test pop fistpl push cmp adc lock lods (bad) rex.RX rex.RB adc (bad) fldt (bad) ja lods pop or fstpt add xchg scas rol pop mov (bad) pop (bad) cli fwait cmp retq movabs scas popfq movsb rex.WR ds imul testl xchg (bad) popq mov lea int retq pop movabs movsb adc imul mov movabs pushq fidiv rex.WRXB pop adc imul and mov (bad) (bad) xor push int fistl cwtl (bad) in pop add push pushq push sarl mov and push or jl jae adcl fidivrl lods xor rex.R rex repnz xchg test rcll mov out cmp pop fimull js cmp mov rex.RB rex.WX lea mov lods (bad) sti (bad) adc rex.R callq enterq mov adc (bad) add push (bad) mov loopne push (bad) (bad) adc out xchg rex.WRXB push rex.WRXB (bad) push fldl xor mov movabs rcr fcoml jle and std (bad) push sbb sub lock popfq sar je test sar out xchg xchg scas mov clc int3 gs rex.R loope outsb (bad) (bad) adc or or (bad) mov rex.WRB loopne push push rex.WRB clc xchg rex.WRB scas stos or (bad) mov adc adc (bad) fstp rex.W push sbb or movsb xchg lock mov shr push or out push retq pop imul cmp (bad) pop jmpq subl (bad) (bad) adc mov fistpl in mov xchg retq add sub fwait movb push push hlt icebp (bad) fidivr xlat rex.R pop xor fs movslq (bad) pop xor add cmpsb rex.WRX iret fdiv js xor shl fistp push add or cld test sub or sbb push rex.RB push (bad) sbb cmp rex.XB push jrcxz cmp cmp outsl pop mov adc xchg test test sub mov sub rex.B rex.X rex.RXB cmpsb nop pop and clc jnp out or and (bad) jo movabs cmp mov loop mov xchg cltd (bad) pop add rex.B fstpt rex.X xchg out cmpsb fistl out (bad) push adc xor insl rex.WRXB cltd out push jrcxz stos rex.B pushq cmp adc scas (bad) fildl movabs sbbl out fildl rex.WXB pushq (bad) push mov fdivl rex.X mov ja jne rorl and pop in xor or mov lret mov (bad) sbb insl rex.B retq fldt pushq (bad) or movslq movsl iret rex.WRB movabs lea fistl in cmp pop (bad) xor cmp clc lahf imul fwait std xor rex.XB (bad) pop jb cltd mov xchg in pop and mov sub outsb fwait (bad) (bad) (bad) jbe push rcr sub lock jnp ds mov movslq ds jne (bad) imul int lahf sub loope push xor mov (bad) (bad) leaveq (bad) or stos jl cltd callq rex.WR sbb cmp mov pop movabs je and (bad) jae (bad) push (bad) (bad) idivb shlb xor mov cmpsb cmc xchg mov mov xor stos icebp pop jae mov adc stos cmp mov loopne pop sbb pop test int sub sub mov imul xor fnclex cli movslq mov movabs rex addr32 minps fisttpl iret out pop rex.WRB mov xchg (bad) rex.RX fs (bad) loope add (bad) rex.WRXB jno jge fucomi (bad) xchg lock jnp (bad) movabs mov cmp lret iret orl adc pop divl movabs movsb sti outsb mov movabs movslq (bad) mov pop (bad) mov in sub rex.WRX and std (bad) fwait cmp adc movslq and out mov rex.WRXB (bad) xchg in stos pop rex.B xor stos cmpsl stos xchg fstl xlat fldt adc test (bad) mov in cmp xor cmp rex.W rex.WRXB in mov rex.B cmpsl xor (bad) cmp fistl sub (bad) adc rex.XB rex.WRB or gs insl (bad) fildl rex.WR cmpsb rex.X (bad) pushfq int3 fadds out leaveq mov pop out fistl int fcmovnu mov mov jnp rcrl mov pop out lods rex.WXB (bad) insb movabs rex fisubl pop (bad) movslq movabs or mov mov (bad) jle xor lods or xchg jnp mov jo rex.WRB mov rol jl xchg xor mov (bad) pop add push add jle sub repz xchg push int push fistl add pushq sbb loop out (bad) retq movslq mov adc ds lea rex.RX pop add fs jmpq rex.X fcomi (bad) mov pop rcrb negl (bad) pop or ficoml push pop movslq or xchg cmp cwtl in add int3 jle rcll fisubr nop jp rex.WRB jbe fiadd std test mov mov pcmpgtd rex.WX xor insb jne rol sbb sbb sti jrcxz mov rex.WRB or rex.WRXB jmpq jae (bad) jne jmp je movsl stos sar push hlt addr32 rex.XB rex.X (bad) rorb out (bad) setnp mov rex.WR push retq out movsb push adc mov cmp jl cmpsb (bad) adc cmp add fistp xor scas pushq cmp nopl sub (bad) out xchg rex.WXB cs stos mov mov jle fs rex.RX fiadd sbb pop (bad) int3 addr32 sub mov push ja rex.WXB rcrl addr32 addl pushq fistp (bad) ss fwait loopne callq leaveq fdivl (bad) int3 (bad) js sbb fidivrl leaveq adc cmc (bad) xor loope mov (bad) xchg shlb leaveq cmp rdpmc (bad) (bad) insl jns rex.R (bad) add xchg movslq jp rolb fimull jl rex.B (bad) fisttpl xchg rex xchg or (bad) pushq sub movslq sbb stos (bad) (bad) loopne cwtl mov adc xor movabs (bad) scas xchg (bad) pop push (bad) js movabs xor pop rex.RB test xlat add xchg push (bad) pop pushq (bad) fildl mov (bad) in sbb cwtl cld xchg imulb mov cli mov rex.B rex.WRX pop (bad) loope push mov (bad) lahf pop (bad) or rex.XB jmpq mov push enterq sti fwait hlt jo pushq iret loop cmp sub test pushfq pop popfq mov jge movabs mov push iret idivb lods and rex.R in cs push push cltd int3 jrcxz (bad) movabs iret jmp mov fcmovne mov (bad) stc data16 jg cmc mov mov mov mov es (bad) add or movsb and fdiv xchg jge jnp rex.WX (bad) xor rex.XB mov pushfq jmpq pushq pop shlb xchg xchg enterq (bad) (bad) cmpsb xor movsl adc and jl sbb mov iret cli fcmovnbe sub (bad) (bad) or fnsave add sbbl (bad) adc jb (bad) mov add add (bad) adc pop or (bad) jo je mov xor xor add not movabs pop (bad) mov mov imul fwait (bad) xor js sub fcomi adc cmp (bad) pushq fstpt scas rex.WRXB mov sbb rex.RX loope adc (bad) fldt jne,pn cmpxchg mov rex.WB fdivr (bad) cmpl out movabs and add cmp hlt mov push outsl fistpl (bad) and xor push movabs (bad) sahf cli cmp sub retq loopne rex push lahf clc insb cltd (bad) (bad) fistl loop xchg mov insb rex.RX popfq ds (bad) cmc movsl (bad) xor sarq rex.XB jmpq pop or mov out cmpsl sbb test and cmc cmp fnstsw int cmpsb pushq rex.WRXB js xchg cld cmc fcmovnbe rex.WRB int jae pop out imul (bad) or (bad) leaveq mov cmp (bad) sbb rcrb and xor (bad) (bad) fnstenv pop outsl rolb mov mov jp mov pop or xor movabs fnstcw movslq cli (bad) add movq int push ss (bad) ffree and cmpl sbb mov imul ror fwait xchg pop mov mov fldt std (bad) (bad) pop int movabs jbe xchg (bad) adc sbb sub mov (bad) and popfq mov adc mov movslq iret pop rcl shr pop imul and sbb mov sbb pop and divb mov fcomps pushq mov sbb adc xchg jne scas cmp adc js fisub out jge add movsb rorb rex.R rex.RB fnstcw out pushq ja sub cli push rex.RB jge and retq stos lock cli movabs in push (bad) mov jns mov xchg (bad) (bad) pop cmpsl push rex.WX fidiv retq fbld fiadd sbb (bad) (bad) sub (bad) jb scas fsubs cmpsb js rcr adc sbb xchg movabs (bad) sub (bad) cmp xchg loope rex.WRXB cmp jns movabs out (bad) scas mov (bad) test (bad) mov cld repz fwait cmp pushq (bad) or and xchg mov (bad) test mov and loope mov (bad) sbb leaveq lods push pop push (bad) xchg mov and (bad) loope mov retq pop movabs loope (bad) push mov xchg dec jne push imul cwtl adc sbb or in ss (bad) mov out js add (bad) (bad) repnz rex.WX pop pushq (bad) enterq jns xor and mov incb out adc cli pop int add rorl hlt std movabs test (bad) imul cwtl (bad) (bad) movsb bnd (bad) lcall fcmovnb es movabs loope (bad) out in jnp xchg sub or fist mov test adc movabs loop jmp out out callq fwait or (bad) pop xchg fistpl rex.XB jg or ficoml rex.WRXB mov stos rex.WR lods xor or add movabs subb hlt mov mov fwait mov pushfq cwtl fcmovnu imull scas and fstpt sub or xor clc (bad) jne ja (bad) (bad) (bad) fcmovnbe clc push mov fsubrs pop pop pop out fild stc (bad) stos retq add movsl cmp repnz shrb mov clc movabs xor push xchg push test pop in adc sbbl mov int3 outsl xor push js repnz adc retq push push ss test clc (bad) sahf scas mov (bad) cmc sbb xchg pop xor mov outsl pushfq movabs cs scas (bad) and mov (bad) add push mov lods push jb (bad) jbe xchg and adc add rex.WRB rex.R xchg sub movabs test jne lret addb insl xchg int3 jno (bad) movabs mov fildl xor (bad) rex.WXB data16 in (bad) mov repnz test jnp imul fistl rex.RXB outsb add and jle cmp sbb adc mov (bad) rex.RXB rex.RB xlat fcompl xor xchg pop mov mov test and mov rex.WXB fbstp xchg add pop pushq shrl enterq pop in outsl pop mov adc imul cmpsb ror movabs pushfq fucomi in mov insl cmp add out sti jge jl fsubs nop rex.W push fnstenv (bad) repnz cli mull orl push push in jge mull imul cltd in sbb shll jae xchg (bad) (bad) callq addr32 xchg pushfq sub jns mov mov jrcxz pop (bad) je rex.XB mov in (bad) lock jle jo mull je fs mov pop in scas mov sub roll or stos data16 adc andb mov movabs sub rex.RB insb cmp lock fcmovnb fimul movsb (bad) cld rex.XB push add pushq hlt xlat shrl jnp (bad) addb rex.WRX stos mov fistl rex.WRB insb in xor cmpsl scas icebp je out (bad) pop mov test add rolb (bad) push sub pop jp sub je push pop sbb (bad) pop push mov (bad) mov (bad) movabs rex.X fistl jo (bad) stc (bad) cmp xor (bad) sti (bad) imul fcmovnbe sbb (bad) or jl addr32 mov retq push xchg rex.RB movabs and (bad) stos mov outsb movabs xor and rex.RX adc jp movabs fsubrp and cmp (bad) push cmp lret cmp fildl shr pop xchg movabs movabs sub jbe mov rex.W pushfq (bad) mov xlat mov retq cs pop mov retq jl int mov pop rex.WRB mov mov jnp xor (bad) cwtl pop (bad) icebp push rex.WX push add mov retq out (bad) scas cmpl rex.WR xchg cmp leaveq in (bad) sbb imul sub retq xor fs test (bad) in mov (bad) cld sbb out xorl adc out int3 lahf sub sbb cs testb and jge rex.RXB ds or cwtl movsb rcr test shrb pushq (bad) orl lea fwait push (bad) (bad) (bad) (bad) in sbb data16 push rex.WRX sti cmp (bad) shlb fwait pop (bad) jle adc stos divb movabs and loope in jbe fwait jb rex.RX rex.B rex.WR (bad) rex.WB fwait loope xor mov in add int3 cmp (bad) sub mov (bad) xor (bad) pop jmpq lret mov pop (bad) (bad) enterq mov in movabs and shrl fisttpl cwtl mov retq pop cmp and jle fwait (bad) mov cmp callq ja (bad) (bad) cmp pop loope (bad) popfq fildl retq fstpt movabs xchg sbb movabs pushfq gs jbe out xlat mov leaveq (bad) lahf rex.WRX repz jl and in pop push xor fldt mov mov adc pop retq rex.RX push (bad) or mov loop stc leaveq jno callq (bad) jmp addr32 mov adc sbb jge test cmp data16 mov outsl rex.WR xchg adc rex.WB fstpt or fadd repnz ljmp (bad) fisttpl fwait add repz add mov outsb in rex.RXB imul in js (bad) xor pop sub fisubr sbb fcomi sbbb add fistpl mov (bad) lods (bad) cmp test (bad) leaveq fcmovnu jb rex.X (bad) (bad) rcl adc sbb es rex.WXB push enterq sbb push cld xor add (bad) jp rex.R xor xor iret rex.W or (bad) (bad) mov movabs jno popfq insb sti int fldt rex.WB lahf fildl (bad) test jo imul pop out imul movsl rex pushfq (bad) retq test callq fcoml and fildl xchg cmp js fcomp (bad) mov mov add mov retq add xor xchg xchg fcomi lea jl pop mov xchg cmp xor mov rex.XB fisubr fld push jne pop fcmovne movabs stc fbstp (bad) orb outsl and adc sahf mov xor movsb rex.WX rex.WR movabs push rcr sub movslq pop mov jg test stos (bad) rex.WRX add movabs mov vmaxps pop sbb pop pop imul sbb fldl movslq (bad) xlat and outsl jle,pt jo mov fwait in (bad) fdivrs add rex.WRXB xchg mov (bad) jmpq jg jge retq nop (bad) sub xchg pushq rcrb rcrb pop and push rex.WRB mov sti pushq outsl (bad) cli sub loope callq and fs mov lock rex.X sub (bad) cmp shlb imul jge cmp addr32 pop xor jp cmp (bad) fldt push (bad) int cmp retq pop xlat xchg pushfq fstpt movabs add in lret cmpsl fsub jns cltd data16 and mov or (bad) outsl (bad) jg rex.WR mov jp fstpt rcl ja cmp fnop cld push (bad) (bad) xor cmp (bad) push int jmp pop pop push pop lret rolb rex.WRX rex.WXB (bad) nop push xchg mov rolb jge sub retq ss (bad) andb es jge retq and (bad) cmpsb pushq xchg and leaveq out insl xchg add fsub scas sub lahf mov jl xor scas out cmp xor rex.RB out and xchg sub mov rex.WR cmp (bad) fisubrl sbb pushq xor (bad) mov fyl2xp1 rex.WX and fcomp cmp push imul pop (bad) cli xor sbb sbb ror outsb pop movabs sub cwtl push cltd cmp pop mov cld rex.WXB lock pushfq sub pushfq rcrl and (bad) xlat (bad) (bad) scas (bad) pop xchg jno (bad) fwait jne jae xchg sub (bad) cwtl push mov (bad) (bad) pop (bad) and ss adc cmp (bad) fadd (bad) rex.RXB sub pushq shll xchg (bad) push xor lock jo xchg fistl and jo (bad) imul test pop (bad) sbb fcomp (bad) fwait jrcxz sbb movabs mov cmpsb int3 lods fs cs (bad) rex.W fwait push xchg ds jg add mov loopne movabs mov (bad) pop add (bad) fcmovnb imul popfq fldt push cld (bad) incl xchg fs pop andl mov fwait xor (bad) cmp lret push cmpsl (bad) mov (bad) push lret imul nop pop fldt sub sahf std or enterq in xchg jns retq pcmpgtb ja mov xlat (bad) xor mov stos je (bad) outsl in sub push cmp xchg mov movabs rex.XB cs (bad) mov (bad) jg jmp fwait rex.XB jrcxz sbb push push and cmp pop rex.RB ds loop mov cwtl nop repnz test cmp xchg (bad) fistpl sbb cmp or sbb (bad) mov leaveq sub push sub pop lods push push sbb push pop mov cwtl in (bad) lea mov or adc out rex.WX cmp pop cs or fldl add (bad) lea in pop lods pop cmova fwait cmp test mov fstpt (bad) or xor pushfq push mov (bad) idivl xlat lea cmp adc (bad) iret (bad) (bad) (bad) rex.XB mov pushq ficoml cmp rex (bad) nop cmp rex.X rex.WRXB fstcw jl rex.WRB sbb mov and callq loope (bad) mov jnp and mov mov jg int retq loope ss rex.R jp sbb in cmp mov pop adc jae mov scas sbb test cld in in (bad) cli adc push movabs fadds rex.RXB adc sarl push mov lea int rex.WRB fldt cwtl imul movslq xchg fldt ds pop retq test pop adc adc rex.R rex.XB (bad) fwait or cld jl fistl rex.RB (bad) or jmp rex rex.WR mov cli (bad) xchg cmp fcmovnu fadd jo test push xlat and movsl lret (bad) stos xchg fwait rex adc adc int3 mov (bad) addr32 mov rex.WRX imul sbb pop xor cmp (bad) jnp sbb push rex.WX andl mov movslq stos movsb xor sub lea outsb xchg cmp xor in jmp pop out fisttpl lods jge lods xor fildl push (bad) push (bad) loop fldt xchg shl shll int3 stos push cld scas jo stos cmp fcomi mov fwait xor fisubr pushfq gs jns pop mov rorl sbb pop insb cmp pushq fistl jmp and int mov jb f2xm1 stc pop fisttpl (bad) pushq fcmovne imul mov xor adc mov xchg rclb jb xchg in fcomi jnp movsb movsl mov push fisubl (bad) fld movslq rex.WRB faddl sbb movslq cmp in and movabs adc (bad) rex.WR push out loopne fldl retq fisttpl std pop jmp rex.WXB (bad) sbb jnp fwait in mov xlat stc fadds fistl icebp (bad) or pushfq pop addr32 sbb add out rcrl (bad) retq mov cwtl scas pop jo pushfq mov callq (bad) fldt cld adc (bad) lods cmp js lret xor xlat jae pop and fstpt adc sub ds mov mov pushq fcmovnbe sub jmpq jae enterq retq (bad) in imul rex.WB fistpl and (bad) (bad) mov jbe xchg fistpl or (bad) movsl cmp xchg jle fldt rex.XB (bad) fstpt in (bad) mov movabs fcmovne cli adc enterq movabs sub fstpt fimul sbb je push (bad) sub fnstsw push jmpq fwait xchg outsl adc test fldl rex.R fwait shl or rex.XB or xchg jnp fcomi ror fimull pushq (bad) cmp or pop add pop adcb mov jnp rex.WX cmp (bad) mov retq sub rex.RXB movslq (bad) sub outsl xchg out pop pushfq rex.RB orl xchg movabs leaveq (bad) pop jnp or or js (bad) ds or lea (bad) (bad) insb (bad) sub outsb test lahf fildl ss (bad) adc push pushq mov and jae cmpsb lret mov jrcxz jno fstpt xchg loop and (bad) rex.WRX mov pushq (bad) pushq fldenv fstps pop mov fs pop rex.WB mov (bad) flds jge or and pop in ja rex.X mov mov xchg jnp pop sub add push test jne push jg fistpl cwtl imul pop push pushq rex.WRXB mov adc ficompl movslq rex.W pop jae mov mov fwait cmp (bad) movabs sub push (bad) fistl (bad) mov sahf fistl pushq sbb out lret mov jge scas cmp (bad) cmp repnz sub in mov rex.RX je mov (bad) movabs sarb push jbe or xlat (bad) mov cmp mov or roll sub jmp movabs rex.WR rex.WB push lret (bad) rex (bad) or (bad) int3 jnp or pushq repz xchg rex.WRB repnz rex.XB rex.WB movabs xchg es movabs cli (bad) sub sbb mov rex.WRX std iret in test xchg fstpt loope stos fcmovnu orl fstpt and sub fildl loope xor jge fistpl lock pop orl (bad) (bad) cmp or sub push cli pushfq sub sarl cltd and (bad) fistpl insl test pop and sub mov xchg repnz push mov leaveq sbb mov (bad) mov in int3 adcl out lret movslq xchg (bad) (bad) retq rex.RB clc cmp rex.WX fwait add jne pop (bad) std mov lret (bad) (bad) jrcxz jrcxz sbb add ja cmp xlat movslq outsb mov fwait idivb (bad) or movabs (bad) outsl and pushq and rex.RXB jrcxz jno (bad) mov xchg mov fsubs fldt loope pushq mov cmp pop rex.WX jmp cmp jns pop jrcxz rex.WXB enterq push mov imul hlt xchg lock rex.W and mov fstpt movsl (bad) sti jnp,pt (bad) cmpsl movslq pop xor rex.X negl ficoml scas rex.RB movsb (bad) jp push pop and push sub imul (bad) adc scas and movslq pop fstpt cmp fs xchg fildl ss pop ds stc fcmovnu (bad) mov mov jle cld fucomi movabs rex.B cs sbb xchg ror rex.R and mov adc xor out xor movsl fnsetpm(287 jg jle (bad) (bad) cmpsl fcmovbe int3 iret cmp fstpt cmpsl rex.WRXB fmul (bad) xchg lret (bad) decl iret (bad) sbb rcr in fistl mov fcmovu imul imul lret push leaveq std in push xor (bad) xor icebp and pop fcmovnbe pop jrcxz in mov (bad) fistl mov in clc and fistpl lods mov cltd in cmp mov (bad) movabs mov out fs (bad) (bad) (bad) ja iret pop lret loop add mov mov lahf test movabs (bad) push and cmp out (bad) xchg stos mov pop fistpl sub in gs icebp jnp stc iret scas (bad) add pop cwtl stos je mov mov cvtps2pd icebp sub (bad) jae rex.W jbe (bad) ficom leaveq retq xor push jl fwait mov fstpt rex.WB rex.WRX pop push addr32 adc scas mov (bad) fildl sub mov jae fldt in add fildl sahf and fldt xchg jmpq cmpsl pop rcrl lret and rex.X sbb hlt (bad) (bad) imul sahf repz pop rcll repnz sbb xor xor push cmp pushq jnp xchg movslq add test (bad) (bad) push lahf cltd pushfq retq mov inc mov adc mov rex.WRXB mov jle cmp mov push rex.RXB loop push push jne int3 movsb sbb or retq fisttpl mov shlb jg cmpsb fldt movabs fcomps adc rcll pop movsl sahf pop test sbbl (bad) mov push mov (bad) mov pop (bad) rex.WRXB cmp (bad) fnstenv add fistpl ss pop pop (bad) cmc popfq xor cmpsb cmp rorb repz outsb and insb ja loop lock paddq jo mov lret movabs add repz (bad) callq fidivrl rex.X (bad) add adc cmp (bad) retq pop adc adc mov fldenv xchg retq repnz out or fsubl and movb (bad) movabs fnop leaveq sbb gs movabs test mov pop repnz incb or movabs mov cmp (bad) cld pop icebp xchg repnz xchg movabs je leaveq lods pushq sbb xchg out fwait sti and push loop push mov stos (bad) xchg pop inc sub pop adc cs xchg addr32 xchg jmpq rex.X hlt movsl mov pop (bad) cwtl xor (bad) int rex.X mov (bad) int3 in rex.RB cs ja mov cltd rcr or rex.RB ja jo jns rex.WRX stc sbb (bad) (bad) test xchg (bad) rex.WXB es rex.WRXB jge mov loop cs sub fidiv cmp fsubrs orl xchg icebp lods (bad) cwtl scas lods fmuls lret add out idivb xchg jbe movslq movabs ss (bad) movsb push jl xor int3 mov test xchg jge cwtl jno repz push mov fwait outsb rex.W in sub icebp (bad) sbb lret orl ficomp sub stos push sub mov or in addr32 subl mov insl (bad) (bad) stos adc sub push (bad) (bad) fisttpl push icebp mov iret (bad) (bad) test mov adc fstpt js gs pop pop jnp xor (bad) rex lret push (bad) mov retq clc mov (bad) ja mov (bad) movabs pop pop test pop imul (bad) shr fwait test stc sub mov std add je xchg rex.RXB lea (bad) (bad) (bad) or retq cli cmp push jmpq fidivl fwait movsl enterq fistl adc rex.RX add push (bad) or movabs movabs rex.WRB pop pop sbb pop cmpsb nop fsubs test pushq pmaxub add callq xor pop push (bad) xchg (bad) mov movsl insl mov rex.WR mov clc pop (bad) fwait or pushfq test std cmpsl (bad) leaveq mov mov rex.WX (bad) mov xlat fcmovne cs mov pop and outsb fidivrl (bad) or fistpl sub xor cs mov xor (bad) mov and rex.X es rex.WX data16 xor stc (bad) imul (bad) (bad) mov mov mov pop clc xor xor xor sbb movabs cmp add movslq sbb je lock push fisubrl scas cli or xor mov sbb (bad) rex.RXB add in callq test mov scas mov jl pop mov mov loopne jo lods mov iret scas gs cltd rex.W fs cmp (bad) push fwait (bad) xor ja fidivr out fstp lods nop or cmpsl pop cmp rex.WB loope or sub xor fdivs (bad) stc or cmp mov sub (bad) enterq mov std mov xor icebp fdivs adc fsubrl fwait mov insb push pop mov mov cmc jmpq std rcr (bad) push and (bad) jns sub (bad) ss sbbl js cmc (bad) fisubr fcmovnb adc adc fiaddl rex.XB mov xchg out lret mov rcr (bad) xchg and jrcxz test pop cs rex.WRXB fistpl (bad) (bad) sub rex rex.RX pop mov data16 (bad) (bad) outsb (bad) callq sbb cmp lahf mov sub xchg pushfq fistpl (bad) mov (bad) in lret repz xchg jae push fistpl fidiv frstpm(287 cmp adc (bad) movabs xor pop (bad) (bad) xchg (bad) mov xor out rolb sub repnz cltd fmuls jb,pn movabs (bad) mov jrcxz rex.WRB lretw xor xchg push fwait xchg adc lea push insl jb mov pop or sbb (bad) out fistpl pushq jmp loop (bad) push repz loope fisttpl xchg pop fnstenv rex.RB and rex.WRB stc sar mov push imul (bad) rex.RB rex.R rex.WXB add and (bad) xchg xchg xchg sub mov add fidivl (bad) test scas push push adc xor (bad) (bad) adc rex.WRB lret jmpq xor out sub (bad) cmpsl fwait (bad) sbb enterq sbb test pop (bad) sub sub (bad) sqrtps hlt sbbl leaveq loop sbb repz xchg lods (bad) mov and rex.WRXB (bad) (bad) mov fistpl xchg cmpsb mov fnstenv mov (bad) add in lret pushfq xchg fcomi fnstcw clc movl pop (bad) movabs mov mov je in jnp test mov rex.WR fmul sub cmp movabs push enterq stos mov mov mov retq rex.W xchg (bad) rex.RX adc rex.WB lret fstpt out jp sarl (bad) es rex.X clc add jnp scas (bad) mov xor lret mov adc sbb (bad) (bad) or mov and push xor mov lods in (bad) fldt std add jmpq int data16 or rex.RXB (bad) cmp stc enterq cmc rex.W imul xor movabs mov sbb cmp mov scas out and cltd mov fcmovne movsb push (bad) std imul mov adc adc sti repnz rex.RB fcmovnu scas xchg hlt in adc (bad) fstpt cmp or rex.R xchg sub (bad) lret mov add decb rcl mov adc rex.R fcmovnbe rex.X rex.WX sahf xchg (bad) pop scas (bad) rorb (bad) int mov (bad) jne mov iret xor adcl in imul mov rcrb movabs add sbb (bad) lret sbb stos retq out cmp add rex.X pop add icebp jmp cwtl rex.WRX movsb sti xor mov fwait (bad) jnp fadd pop cmpsl (bad) negb stc (bad) or push (bad) mov (bad) (bad) fwait hlt lahf add nopl mov (bad) lock (bad) jae cmp fstpt cmp push pop mov fwait cmp (bad) test movsb jno pushq cmp push lods push sbb mov rex repnz imul movabs nop scas cs (bad) mov int3 fldt (bad) loope jl imul fistl or fstpt pop jp fistl fisub neg xchg cmpsb mov add je (bad) movabs sbb (bad) push nop push fstpt xchg adc test rex add adc rex.RB pushq add mov push and rex.XB fildll (bad) shrl outsb rex.WR (bad) mov imul gs int (bad) in ficompl imul fisttpl rorb (bad) cs and imul test jns sub sub fistl xchg mov (bad) or retq push stos clc push push sti fcomps pushq scas movabs loop sbb movslq xchg outsl mov sbb xacquire callq mov out push jmpq fs cltd (bad) fisubrl xor sub mov (bad) (bad) sbb fldt push pop mov (bad) and fisttpl adc xchg rex.WRXB rcr pop mov adcl pop fildl fwait and or sub mov imul movslq cld int fwait retq (bad) xor (bad) xchg and adc rcrl xor out in loopne (bad) callq fwait xchg and movabs outsb mov fmull xor rex.WXB pop rex.XB ss stc enterq insl rex.WR pop ss rex.WB sti mov (bad) (bad) iret xchg or rorl test test icebp rex.WB xchg fldcw pop stc rex.W mov push add rex.WB js mov rex.WRB gs mov pop addr32 sub pushq sub mov sbb cmp rex.WR addr32 rex.WRB mov cli jl loopne mov mov push in and fwait rex.WRXB sub and iret sub test orl push js (bad) jnp fwait cmp xchg pop rex.WRB jrcxz fstpt fldenv jbe stc (bad) cvtpi2ps and callq cmp or fistl push adc cltd fldt mov jb rex.WRXB (bad) scas rex.XB sub movabs fnstsw and (bad) cmp (bad) stc scas insl mov in (bad) and mov (bad) sti adc mov xchg sti (bad) add popfq fldt jne lods sbb scas (bad) in sahf (bad) (bad) scas fildl ja add push lock lahf sub out fisttpl fisubl mov fildl cmp outsl movabs loop pop rcrl data16 pushq mov mov cmp movslq pop mov movabs push (bad) js test push pop push cmp movabs rex.WXB (bad) fwait jge (bad) repz pop test and push xchg stc divb int fistpl cmp push movsb clc loop (bad) mov or xchg (bad) and pop fisttpl adc cmp je rex.WX addr32 imul add (bad) (bad) fistpl test rex.RX or std adc stc push clts (bad) lods fwait mov push jne lret adc movabs sub fnsave mov mov callq (bad) fsubr or xor push sbb cmp out es jmpq sbb xchg xor callq je repz pop jo movsl out test movabs push jg add cmpsq (bad) xlat clc pop in fistpl ss lret or pop and mov sub xchg (bad) (bad) mov jl (bad) test cmc test push cmp push int3 mov pushfq rex.WXB rex.WRX rex.X xchg mov and pop in (bad) jmpq sub adc scas (bad) rex.RX jno cmp imul jns sub test loopne xor cwtl movsb fisttpl adc mov and retq jge pop cmp mov rex.RXB loop enterq or insb rex.WRXB cmp (bad) test lret xor cltd xchg cmp pop cmpsb pop sub sbb popfq jae fcom cltd imul out pop leaveq push xor jrcxz (bad) rcr fucomi sahf int fstl mov fidivl (bad) es xchg and jb rcr rex.XB adc cmp stos (bad) sub xchg rex.WR scas jne movslq (bad) pop retq enterq jb cli (bad) mov insb movabs fstpt mov or push mov jle ds pop mov andl out pop std xchg movabs and fildl mov stos fstpt pop movabs ss fwait test pushfq ds sbb sub mov fucomi cmpsl movabs loope pushq (bad) out shlb fstpt mov pop (bad) (bad) lahf pop int3 push xchg (bad) (bad) pop rex.X rex.XB cld xor cmc (bad) jnp rex.W enterq mov pop adc jl pop sub loop (bad) cli xor xchg enterq mov (bad) (bad) cvtps2pd fwait iret cmp and rex.WRB rorb std insb mov pop rex.WR scas movsl rex.WRXB or rex.RX fwait cmp enterq fstpl xor sub fstpt pushq ds iret enterq xor mov jb (bad) (bad) rex.WRXB pop (bad) fwait clc xchg xor sbb test std adc cmpsl stos (bad) add and (bad) fcmovnu adc stos (bad) icebp hlt xchg movsl xlat loop push or gs (bad) (bad) xchg (bad) repz cmpb enterq movabs pop test cmp xchg xchg fldt xchg movsl (bad) retq pop fldenv lea (bad) pop rex.RXB (bad) insb leaveq out sbb (bad) fnstsw or pop (bad) out imul rex.WRB jo sti mov jle jge (bad) leaveq je addr32 xchg enterq pop jp stc fs mov fisub repz (bad) rex.WR (bad) fldt mov movabs push stos in movabs sbb pop hlt imul (bad) popfq nop jg jl fistpl mov add xchg (bad) mov (bad) pop clc mov mov scas (bad) ja rex.RX pop mov js (bad) (bad) stos jo sbb (bad) (bad) fninit xor out movslq popfq movabs and (bad) movsl cmc stos mov fildl adc xchg es mov (bad) add scas jne loop (bad) retq pushq movabs or pop fisubr nop xchg jnp add xor pop sub xor pushq (bad) sbbl movabs fldcw rex.WXB adc cmp xchg mov retq iret out (bad) insb adc sbb jne cmp je (bad) es imul lock pop push or xor push cld fmuls movslq mov cli lea fninit add (bad) insb (bad) iret rex.WRB pop callq pushq push rex.B hlt pop mov out push enterq (bad) movslq rex.R rex.WR movsl rex.WRB in jmp mov (bad) mov and pop retq mov rex.WR and icebp xchg lea (bad) add movabs out cli xchg mov in mov movabs push in xlat movsb cwtl add mov xor retq xchg jne xor jmp fildl or cs mov (bad) add insb rex cli (bad) (bad) rex.RX sub push divl rex.WRXB xchg xor xchg test stos fs jb movsb push xchg shrl enterq fisubrl scas mov movabs imul push mov adc sbb xchg (bad) and movabs fsubrs lea int (bad) xchg mov and movabs mov fldt pop scas loop addr32 and sti mov mov adc (bad) pop addr32 cmp scas fucomip cld xor (bad) insl adc add jnp add sbb (bad) sbb hlt in fwait cmp adc idivl fildl xchg pushq xor cmp jne lahf (bad) xlat (bad) jbe cmp (bad) add xchg movabs jl pop fstpt push vmovntpd es cs fcmovnu sub in push jnp in mov scas fisttpl rex.W clc fldenv rex.R sbb fcmovne repnz lods stos pop lea in rex.WXB sub int movslq fstpt xchg or and pop mov push and pop add repnz es (bad) cmp cmpsb out mov push rex.WB subl fwait fs cs xchg jl rex.R jl gs (bad) jnp xor push fcmovne (bad) repz cld fwait jg es push mov sarb fstpt (bad) rorl mov (bad) (bad) retq mov mov xlat or sub rcr fs pop jb pop lods stos sub add or jle stos (bad) ss lods mov iret (bad) (bad) lods in stos rex.W clc mov fldt popfq je out fdivrs (bad) imulb mov sbb data16 in fildl (bad) outsl mov adc xor rex.R xor pop rex.WXB mov pop subb std push adc nop fisubl cmp xchg pop sbb sbb jg fisubl mov rex.X rex.WR jne adc (bad) fwait (bad) or add adc sbb push jp mov or (bad) sti out outsb jnp cmp xchg negb fwait in sub rex.WX rex.XB push cmp idivl rolb cmp stc sbb out rex.XB (bad) iret mov add fwait (bad) sbb sbb jmp pushq or adc jle (bad) fdivrs sbb outsb cmc (bad) xor lret cmp mov mov adc (bad) pop mov rex.RXB mul sbb jle movl add jmpq addr32 mov fadd sti test (bad) cs pop xchg mov int3 xchg (bad) (bad) jno lock mov fsts add and sbb stos add cld push test mov adc and leaveq sub lock pop and addr32 rex.RB adc sub mov add rex.WRX or out xor pop mov jrcxz xchg sbb jbe push (bad) cmpsb lods mov cwtl andb retq (bad) repz test cwtl (bad) pushfq pop (bad) mov outsl or test fisubrl in lods leaveq xchg icebp (bad) sub sbb xchg rex.RB rex xchg xor (bad) or mov iret scas and (bad) xor scas mov jnp jl or sbb mov fildll sbb and loopne test xchg cmp cmp hlt adc popfq sub xor mov ss rcrb jmp loop mov out mov adc (bad) sti rex.WXB out pop repnz fwait jmp fld addr32 cmpsl cwtl fldenv (bad) or pop sti add xchg (bad) lods sbb adc fisttpl (bad) (bad) (bad) pushfq (bad) jo addr32 mov xchg mov pand rex.WRB jno (bad) movslq fwait fwait cmpsl mov mov (bad) pop or leaveq xor int3 add sarb (bad) or lahf fistpl lret rex.WRX gs jb fnsetpm(287 and fsubrl (bad) sub andb (bad) mov mov std insb mov sbb int3 cli jmpq rolb xor es std lock (bad) pop loopne out cmc test xchg cs (bad) fcmovnbe js fidivl pop pop rex.WRXB mov mov cmp sbbb mov adc loop fwait rcr xchg fcompp popfq (bad) (bad) lahf fistl rex.WB out fcomi cmc sub rex.W fildl or clc fucomi jne nop popfq stos xor cmp mov insl cmpsb xchg push mov mov fisttpl jnp int3 sar xchg (bad) data16 (bad) (bad) and xchg adc lret outsb cmp xor push sbb fdivrl jae fildl jbe outsb xor (bad) xorl mov xchg imul lret and rex.RX (bad) pop pop (bad) (bad) jrcxz and cld mov cmp movslq cltd sbb rex.RX js movsl rex.WRXB jnp (bad) std pop mov xchg xchg mov xchg sub mov mov pushq cmp cmpsb fistl cmp cmp or (bad) adc fildl (bad) stos xchg (bad) jb (bad) or mov xor fbld insb movabs stos adcl (bad) pushq jnp (bad) xchg (bad) (bad) or pop fidivrl and mov addr32 or rex.WRXB adc fwait adc jmp jge pop xor iret (bad) (bad) insl jmpq or jns push cmpsl movabs fistl iret (bad) rex.X pop xor std (bad) xor xchg (bad) movslq and movb (bad) decl xchg pop cmp sbb jmp or xor push xlat (bad) add retq jno jp insl (bad) pop (bad) push fidivrl rex.WRB test and rex.WRB mov rex.R fidivrl or jrcxz (bad) mov out add mov mov push push mov mov adc (bad) fs stc cmpsl (bad) int mov rex.WRB jns add (bad) add mov (bad) mov add cmpsb xchg stc fwait (bad) (bad) pop movabs imul mov movabs or xchg sub or lret out or xchg fcmovne addr32 ficoml fistpl test lret (bad) repz add add rex.RXB pushfq cmp add sub retq subl (bad) fcomi fmull pop adc jo rcll movslq mov (bad) mov rex.WR push cmc lods (bad) xor add test jmpq mov rex fs (bad) xor lock pop rex.WXB (bad) std pand (bad) fsubl xchg (bad) (bad) fstps (bad) fisttpl push movabs cmp fsubrs fs pop lods cmp mov sbb (bad) xchg outsb mov xchg jno sub out (bad) and outsl rex.XB add xchg jle test jne icebp mov jmpq rex.WR lret pop adc sbb xchg and (bad) movabs int3 insl mov in rcr sub (bad) lock adc stos rclb or jl mov xchg int3 adc sbb lret jo xchg adc loop fcmovnb (bad) sbb (bad) in incb push add js imul rex.X lcall pushfq mov pop (bad) lret popfq in retq or outsl or test sbb (bad) sub nop lret rex.XB mov outsl sbb mov jnp fnsave cmc or rex.XB cld test clc cmc (bad) jae cmpsb out (bad) xor (bad) pop cld rex.R cmc fbstp fldl (bad) std rex.WRB add pop rex.W xor (bad) movabs jle gs mov sub rex.WB stos lahf cmpsl and add jb incl ds stos (bad) test rex.WRXB lods loopne cli scas rex.WR sbb rex.X push pop sbb push jns pop (bad) in or push jo adc mov fldt mov loop fisttpl jmpq (bad) (bad) (bad) fidiv movb fistpl add mov shr xchg mov and sar test cmpsl fwait mov sahf lock movabs je or (bad) (bad) rex.WXB jbe sub push rex.RB es xchg popfq movabs mov pop push cld cmp mov sbb adc mov fcmovnu add jno jp mov cltd lock mov jg stos rex.X lods cmp pop mov rex.W (bad) out adc sbb retq rex addr32 fnop test sub lea (bad) cmpb rcrb (bad) push pop (bad) sbb cmp cwtl rex.WRB adc sti test sbb imul (bad) sub out (bad) pop fcmovnb mov cmp cli or mov in and mov fistpl mov fldl cmp fsubs imul jo sub cmp cmp cmp imul in rex.WRB data16 jno shlq fistl test mov adc (bad) or (bad) jnp rex.WRXB pushfq lret jmpq pop fwait (bad) (bad) jrcxz xor hlt lea lea push movabs mov rex.R xchg (bad) out fildl cmp clc xor pop adcl scas in es sbb mov pop mov fildll mov je xor movsb retq rex sub lods push in rcrl adc (bad) fwait rex.B stos xchg rex.WB mov jne rcr cmp lock xchg pushfq cmpsb fidiv rclb repnz rex.WRXB rcrb stc lock std pop add in rex.XB stos mov pop psubw and retq or lret scas sbb movsl je xchg add sbb fstpt cmp (bad) xchg add sarl orl (bad) fcmovne retq (bad) outsl repz pop (bad) jg xchg or sahf jno and rex.WXB nop cmc cmp (bad) rex.WRXB jnp addb (bad) sub outsb fisttpl mov fnstsw (bad) fildl sbb adc pavgw and add clc fldt iret scas add add cmp je imul idivb ficom iret push mov cwtl add add pop mov adc mov xchg cmp mov lea sub (bad) test pushq (bad) fucomi sti out insb pop adc mov stc xchg lods addr32 ja sub (bad) in cli rep std fldt (bad) xchg sub xor sarb nop movabs pop pop pushfq (bad) fisttpl adc xor adc leaveq adcl pop mov fistpl clc js lret nop sbb popfq rex.RB fadd pop mov out (bad) je jae fwait int3 stc push mov sub lahf movslq cmp rex.RXB add mov jo cmpsb rex.W xchg ss jle movsl fucomi rex.WX mov rex.B rex.W rex.X lock sti push xor mov pop sbb cmp lret retq mov mov (bad) (bad) scas cmp out test cs xor (bad) rex.WR rex.WRB fistl (bad) (bad) stc test fistl or test sbb stos in ds jb fcmovnu (bad) mov mov leaveq push mov mov mov (bad) leaveq xor (bad) callq xchg add sbb rex.WRB mov mov fdivs pushq or scas (bad) fidivr fcmovnb in mov push rex.WX jne fwait jbe xchg rex fstpt adc rex.R pop (bad) mov xor (bad) pushfq addr32 jp sti pop pushfq cmp out xlat add int fmull mov popfq and mov sub sarl rex.RB mov xor cmp (bad) fwait sbbl and jb test pop lock out out cmp iret cmpsl roll (bad) gs mov ss insl pop or cmp (bad) jrcxz jnp js cmp movabs xorl jne (bad) adc mov adc cli (bad) cltd jb mov or sub push (bad) (bad) (bad) loope jle rex.XB adc adc pop pushq or adc jne imul adc mov push gs mov movsb rclb push test in pushq rex.WRB data16 mov sbb jg rex.WRX jno loopne (bad) movslq mov fcmovb or (bad) rex.R jmp ds sub fcoms mov lret stc insl fbstp movslq xchg out cmp jo xchg pop adc mov (bad) push add lock adc jbe pop mul xor cld test test xchg (bad) or icebp or (bad) (bad) adcb fwait rex.WR or loope adc xchg in cmc sbb adc lahf cli rex.WX fs sbb mov xor sbb cmp (bad) sub xor mov jrcxz push pop imul cmpsb test xchg push lods pop push (bad) sbbl loop cwtl gs (bad) insl adc test fist (bad) sti jns xchg rex.RXB sbb mov push out (bad) fisub mul gs test (bad) leaveq cmp push cld (bad) adc addl sbb rex.WRXB mov sub mov xchg fsubrl jge rex.WR lods cli xchg in cs out enterq or (bad) test xchg (bad) push xchg clc idivl nop rex.RX rex.RXB or xchg fs pop (bad) pushq (bad) sbb xchg leaveq jae xor in pop retq push xor movslq sbb xchg rex.WB push stos div data16 sub (bad) (bad) (bad) (bad) add adc int movabs (bad) andl lret pop test and cltd (bad) out add iret (bad) loopne iret sbb or adcb jnp (bad) (bad) lret pop fwait and pop xchg xchg lods cmp rex.R ud2 add fisubr cld (bad) test (bad) mov jl sub rex.WX xor out cmpsb mov (bad) fldt subl cltd and sahf push rex.XB scas (bad) mov mov ss (bad) pushq or retq rex.WB cltd pop sbbl cvtps2pd ror insl subl adc mov fildl sti (bad) xchg (bad) jo (bad) jb loope mov fcmovne add push mov cmp sti rex.WX fimul xlat movabs (bad) rclb in and shrb jge xchg pushq mov es or xor callq (bad) push fcoms (bad) and jp (bad) mull (bad) rex.WRX rex.B rex out (bad) fistpl rex.WR cmpsl repnz fistpl movabs or and jl rex.R std adc xor shrb rcl pop xlat rex.B gs addb jg mov clc (bad) (bad) mov (bad) rex.B fs idivl xchg lods pop je (bad) repnz mov sti add sub lea jnp movslq mov fidivl lahf clc sub cmpsb (bad) push push out rex.WRX mulb sub decb (bad) (bad) (bad) imul stos xor and xchg and jge movslq lret rex.WRXB (bad) (bad) rex jrcxz pop xor (bad) and fdivrl mov xchg (bad) jns ja xchg movslq cmc popfq rex.WRXB xchg or adc mov sub jp sarb add fiaddl jrcxz movabs ja loope (bad) fstpt retq stos adc leaveq mov retq cmp cmpsb or (bad) in add sbb jl rex.XB mov xor pop addr32 (bad) jo test xor jrcxz (bad) mov in rex.RXB push cmpsl cli scas gs stos lods imul rex.R mov sbb sbb in cmp (bad) (bad) sub ss xchg xchg xor je test (bad) retq pop rex.RB rex.XB pop pop fs fsub or and cmp (bad) rex.X add push cmp sbb jb and in fistl loop add or movabs xchg (bad) mov repz push in cmp sub xor cmp (bad) fildl mov and cmp mov xor xlat lcall or mov ss xor fcmovnu cltd mov movabs std fstpt adc movsb js or mov insl cmp xchg push sbb in fistpl (bad) (bad) gs or fdivs xlat lods mov pop (bad) lods xor mov xchg (bad) (bad) pop callq fildl pop push jnp xor mov and jle lock stc test je scas imul jnp jns pop movabs fisttpl rex.RX pop lods movabs pop xlat rex.WRXB xchg std std sbb (bad) fidivrl add mov pop rcrl addr32 or sub fcmovne add test scas xchg jl out pop jle cmpsl sbb mov insl add jle in fildll mov repz jae (bad) data16 (bad) loopne fcoms fsubr loope jo sub cld insb rex.WRXB int3 jrcxz frstor or (bad) cmpsl mov fcom outsl lea cmp jl pop and cmp (bad) int outsl loope add movabs hlt add loop adc rex.X outsb (bad) fcmovnbe je rcr fcompl ss lods fldt and xorl mov adc mov mov mov cltd imul addl (bad) fdivs (bad) cmp jl repnz push pushq rex.WRXB f2xm1 (bad) or int cmpsb push mov out out (bad) lods fistpl mov loope (bad) rex.WR scas sbb push (bad) (bad) (bad) jmp pop fidiv or cmp adcb fwait and fwait movsl (bad) adc push stos repz (bad) pop (bad) fistpl or ja mov xchg int3 fwait sbb push xor jl pop addr32 test movabs and pop (bad) pop imul cwtl and or retq or xor adc (bad) pop jne pushfq cmp stos jae jmpq push xchg (bad) data16 fstpt rex pop xchg fstpt lret jnp rex.WB fistp cmp mov push mov rex.XB cmp repnz sbb out jrcxz push (bad) fwait mov add jnp rex.W out mov (bad) xchg (bad) (bad) jae mov fdivs rex.RX ja (bad) (bad) (bad) int3 cld (bad) cli xor jmpq (bad) movabs (bad) cs (bad) cmp or rcr pop test adc fdivl rex.RX jb clc pop (bad) jno test outsl cltd movabs (bad) (bad) movsb pop fmuls outsl pop sbb xchg iret mull cmc jo mov jb data16 fdivs jne (bad) mov rex.R (bad) cmp or pop sar (bad) mov xchg fimull jmpq adc xchg mov pop rex.X imul mov sub (bad) mov inc (bad) pop jp hlt loopne loope fldt mov (bad) (bad) sbb (bad) push or leaveq jmpq iret mov mov fildl add and mov pop and test movabs sub mov ja (bad) rex.X rex.WRX fcomp lret cmpsb cld add or mov (bad) and rex.RB rolb or outsb addr32 (bad) add sub add loope push mov xor rex.R sub clc (bad) sbb cmc std xchg pop jnp pop mov mov push sbb movabs ds (bad) icebp (bad) fistl push mov sbb ss sahf (bad) sbb orl jp sarb rex.X mov stos test mov ss in (bad) pop mov jl jnp lock jg movsl fldt jo adc jne fstl pushq jns jb (bad) ja out out mov test lock xchg jns lods flds clc rolb cmp cmp shrl jns rex.X push xchg fcmovnb shl fcomps outsb and jrcxz movsb cmp mov sub mov clc adc sbb cmc lock rex test (bad) insl (bad) fistpl std callq movsb mov fcmovne jns repnz mov (bad) out mov pushfq mull (bad) xchg jnp adc movabs jo fisttpl xchg fcomi lea test push lret xor mov xor movabs xchg sbb (bad) add movsb movabs (bad) lret rex.R (bad) xchg pop mov or mov lods pop fnsave (bad) movabs mov outsl fildl mov paddw out pushfq (bad) (bad) lea fldt xor retq fcmovb rex.RX (bad) fistl nop rex.R jmp int pop lret scas rolb or fstps pushq iret jnp mov xchg pop test repnz jae ror sbb retq (bad) js (bad) push fcmovnb jne jge (bad) jmpq pop mov repz xchg fildl (bad) popfq rex.WRB loope jnp mov mov mov fmuls fs xchg lods rex.R xor imul rex.WX rex.XB pop (bad) cmpl movslq mov fs and (bad) jg sub cmp (bad) adc xchg mov mov fisttpl and add cmp (bad) int3 add pop (bad) and pop cmc lret sahf pushq sbb adc sub sub int3 and rex.RX lock rex.WRX rex.XB in jmp rcrl (bad) test pop pushq fdivp adc xchg insl clc sub (bad) and (bad) mov sti add sbb (bad) retq mov or clc pop rex.R cmp xchg rex.RXB lret fs mov jb jne pop (bad) xlat bnd or shl jnp jno callq xchg loop (bad) adc jno imul stc xor lret push mov jnp sbb iret out movabs (bad) cmpsl or lock std rex.W mov testb fcmovne mov jge je test jb mov push fstpt sahf jnp add mov mov adc movsb rex.WX imul jmpq (bad) sbb (bad) and stc fwait nop xchg or shr (bad) xchg (bad) (bad) cmc outsb (bad) rex.R out push push and jp cli xlat fcmovnu rex.WRB push sbb (bad) cmp pop retq (bad) shll mov xchg fisttpl sti xchg sbb pop (bad) cmpsb mov xchg (bad) adc (bad) cmp jg xchg pop mov int3 (bad) lods outsl (bad) (bad) in (bad) adc sbb (bad) mov sub mov xchg pop jns movabs sub iret rex.WB add sbb mov imull pop rex.WB rex.WR adc sbb rex.WB hlt sahf fcmovnu (bad) xor mov movabs sub (bad) pop sbb (bad) mov repz xor nop mov rex.WRB pop fwait sbb mov insl loopne test sub (bad) push sahf (bad) addr32 int3 mov xchg mov sbbl push cwtl xchg xor push xchg rex.WR fs xchg adc adc imul sub in stos (bad) cmp xchg xlat pop iret or (bad) xchg stos (bad) sub xchg (bad) ss sbb mov cld movabs pushq pop insl add xchg mov subw test cmp sbb pop cmp mov stos (bad) movsb cld xchg or push icebp xchg sbb (bad) je out pop rex.WX rex.WX movabs jle xchg scas negb out scas insl in movabs xor sub fcomps (bad) insb push (bad) repnz test cltd jmp cld mov pop xchg (bad) sub (bad) jo movabs jle adc je or mov add scas and push mov movabs mov push xchg cld andl (bad) enterq sub shll pop push sbb fisubr jae cmp rex.XB (bad) stos xor sahf mov mov push (bad) fwait cmp (bad) (bad) movabs scas lea js incl sbb (bad) repz or retq sub addr32 rex.B rex.W mov push sbb cld adc jge xor jle rex.WRXB fistl ja leaveq mov pop ja movslq mov imul retq fisub insb cmc rex.R add fnop movabs (bad) sti and xchg (bad) xchg mov fiaddl rex.RB ja or pop (bad) (bad) imul mov fiaddl divl sti cmovo rex.X scas rex.WB cmc jge sub movsb sbb jge sti push (bad) outsb push es push iret out lea lahf scas (bad) xor rex.X (bad) movabs nop pop test imul cmp imul push jb mov fistl sti mov ds loope jns mov jne testl out or insl in js and mov fcmovnbe xchg jnp rex.RB in mov (bad) jl retq fdivl jb in outsb negl fwait out cmpsl rex.WRB (bad) (bad) addr32 jae shlb mov jb cmp pushq cltd jns pop and (bad) sbb callq jae mov movsb mov push rex.RB add enterq scas lods outsl fwait addr32 mov fbld lea sbb movabs in mov hlt (bad) push push xchg iret stos pop ds cmpsb (bad) cmp add sbb rex.R jl adc mov (bad) addr32 mov lret cwtl movabs bnd push push out and mov pop add adc mov jl test test loopne repz cld or (bad) rorl pop push (bad) clc xor cmp mov add cmp lea jp mov movabs callq (bad) nop (bad) xchg mov xor or adc (bad) pop stc xchg push insb (bad) cmpsb jnp rclb pop pop jmpq sti mov adc rex.X lret xor loopne icebp push sub jl imul mov movslq rex.XB or pushq (bad) loop fistpll (bad) sbb adc mov push (bad) xchg (bad) jnp (bad) (bad) push in lret (bad) fstpt xor mov fwait es (bad) cbtw movabs (bad) adc pop pop cmp xchg (bad) (bad) (bad) retq insb rex.RX jp (bad) jno lock (bad) (bad) mov (bad) rex.RXB stos cmpsb xor in push loopne and xchg (bad) movslq (bad) mov stos out (bad) movsb cli scas jae,pt (bad) movslq fistpl push cmp rex.X shrl mov cmp cmpsl fstpl xchg jnp imul (bad) mov fistpl (bad) pushq mov (bad) rex.WR mov push test sub movabs xor mov loope mov jmpq (bad) (bad) (bad) xor mov lret pop imul jns (bad) fildl mov lret sub in (bad) insb rex and enterq sub mov rorl (bad) popfq addr32 mov fldt cmp hlt jae pop (bad) iret mov (bad) jle pushq push icebp imul rex.X (bad) rex.WXB fsubrs (bad) sub sub outsl xor (bad) xchg fbstp popfq (bad) cmp rex.WXB movslq addr32 leaveq (bad) jbe pushq int mov callq cmp pop insl jg add fstpl ds rcrb or out (bad) and rex.XB fstpt pop shlb pop lea (bad) callq movsb xor pop sbb sub mov lock fistl and jge lret movslq roll ja jno (bad) adc push rex.R (bad) movabs or mov sbb rex.WRXB stos test loope xchg rex.XB fs std fistl xor xchg xor or rex.RXB (bad) (bad) fcomi and cld ficomp nop movsl (bad) fistl sub (bad) add push iret int3 mov fucomi pop ficoml mov fcmovnu shlb rex.B sub (bad) data16 shrb jmp mov movabs (bad) lahf jns add enterq faddl lock cmpl pop rex.WRX sub cmpl mov rex.RB movhps adc pop fcmovne mov add scas fildll jns fildl mov movups mov pushfq out xchg iret mov lea (bad) fcomi out add rcrl jge (bad) (bad) cmp orl rex fcmovnu out rex rex.XB push int rex.RX cld fistl mov sbb orb jle xchg fistl adc pop mov mov iret mov sbb cmp (bad) fisttpl rex.WX stc insb and add and sbb movsl fwait cmp cli movabs (bad) adc cmp rex.WX xor cmpsl fcmovnu imull xor negb rex.RB rex.WX fsub (bad) adc jae mov rex.WRB pushq xor cmpsl loop push rex.X rex.WRX (bad) cmp (bad) (bad) (bad) fstpl add fcomps (bad) (bad) or and fisub add cmp cwtl xor (bad) stos popfq in mov je movsb fcmovnu pushq sub fisttpl sub add jge or rex.B (bad) mov (bad) cltd pop rex.W (bad) (bad) sub push int3 mov and fndisi(8087 fimull sbb adc pushfq rex.RB mov rex jrcxz (bad) sti jp mov and sahf pop sub test (bad) (bad) (bad) insb scas (bad) movabs rex.WRB jno rex.WR mov out push jmpq (bad) test fwait or mov (bad) lods adc callq iret mov sub mov (bad) push adc xlat insl or js pop cld push (bad) (bad) sub mov mov add pop lahf lods ja fildl cmp loope pop fwait and ja adc pop sbb fsubs fwait xor out rex.R lods mov sti jrcxz mov and xlat adc and rex.WR add (bad) add mov pop lods sbb mov lret (bad) and xor sub cmp (bad) pop or (bad) rex.WRB (bad) jp shll rex.WRX mov (bad) pushfq test fmuls xor xlat rex.WXB rex.R jle cmpsl (bad) jl pop mov xchg jge xchg adc (bad) cmp (bad) pop rex.XB mov imul jb fstps (bad) (bad) ja (bad) (bad) adcb retq xlat pop fcmove (bad) (bad) frstor ja fistl push sbb (bad) rex.X sub xchg fldt orl mov fwait (bad) jno mov rex.WRXB xchg mov mov js in (bad) (bad) fdiv test fisttpl or mov fisttpl scas testl nop jg push push loop and (bad) gs fwait movabs mov rex.R or sub rex.XB rex.RXB imul jmp mov mov cli jo (bad) mov insl mov lock outsl and mov cmp pushq fcmovne pushfq int shrl jae xor cmp test push outsl sbbl or syscall pop sti in fcmovne cld (bad) and leaveq rex.WXB fistl add (bad) movabs rex.XB adc jno movabs xor lret or pushq rex.RXB jge push pop rex.WXB mov shll ds cld rex.WX (bad) out sbb push pop rex.WXB sub fistpl jmp rcr lock xchg sbb pop mov xchg fnstenv or rcll iret icebp xchg xor popfq pop sub out fs iret rex.RB nop rex.WB pop (bad) rorb insb rex.RXB lret adc xor or xchg sub xchg jmp imul (bad) gs fimull xor fldt fcomip xor (bad) fildl rex.R rex.RXB fildl pushq or sub mov (bad) in adc scas callq (bad) movslq retq (bad) lret (bad) jae jg push repz mov (bad) cwtl jo movabs or mov mov cli rex.WR mov jrcxz movslq stos test sub mov cmc mov and jne (bad) sarl stos (bad) scas cmp and jp imul xchg add loopne sti fisttp pop pop notl adc jnp xor cmp mov fistpl callq and movabs sub add xor or leaveq sahf xor fimull add sbb adc popfq loop hlt xchg movabs in fisubl pop in movslq fwait mov (bad) mov pop sti (bad) (bad) je xor rex.RX sbb clc mov mov add fstps mov jmpq jmp rex.RB lret iret mov jle popq sbb add push cmp (bad) movsb (bad) in repnz jnp mov or (bad) es mov sbb (bad) and sbb (bad) jmpq sahf fs sti sub or add sti lcall fs (bad) mov (bad) insb cmp (bad) mov sub movabs push cld pop repz adc (bad) xor pop fdivrl movsb in mov jae shlb (bad) (bad) mov pushq xlat imul and jle sub outsl push push mov add adc cmp in mov xor and (bad) stc and jae insl jae (bad) iret loope cli push (bad) cwtl mov rcrl pop (bad) lahf push mov ljmp iret rex.B jrcxz (bad) (bad) jbe cmp xchg jnp add push or rex (bad) pop pop rex.XB test iret cmp frstor cwtl shll jo rcl loop adc ja (bad) rex.WB fnstenv callq (bad) out outsb sbb in (bad) xor xorl or imul retq adc (bad) add xor sbb flds or mov pop and rex.RX mov sbb cld cltd imul icebp fiadd addr32 jne sbb mov pushq fmull xchg rclb (bad) movsb mov sbb fstpl js xlat mov enterq or add push rex.RXB je adcl (bad) pop (bad) adc or rolb (bad) xchg adc rex.WRXB pushq stc cmp mov xor out sub rorb fnstenv xor xchg push or mov movabs lcall xchg jbe jp,pt addr32 fst cmp in add movabs data16 int cmc jmpq outsb mov xlat xor imul mov (bad) stos int3 jbe outsl jg scas ja rex.WRX jb out (bad) sbb fdivp (bad) ss xchg test in fwait xor (bad) push lea incl orl lods movabs rex.WR leaveq retq pop sub test xor rex.WXB imul rex.WB sub jns xor incl push xchg (bad) pop sub pushq cwtl clc mov rex.XB rex.WXB mov xor jrcxz mov enterq xor mov pop mov and xor shlb xchg mov (bad) rex.RXB imulb push fildl mov (bad) xor rex.W rex.WXB add jnp test stos lods fistpl mov xchg (bad) mov mov repz (bad) or xor cmp mov xchg add or xchg scas fnclex and lods pushq shlb adc cmp testb sub loopne,pt (bad) stos sub icebp (bad) fisttpl cmp sub pop (bad) fwait add shrb insb (bad) xor rex.WB rex.R jmpq rex.WRB sbb jne (bad) lods or scas mov js mov out (bad) orb test jo pushq mov insb rcll movsl fstl add jp cmc (bad) pop (bad) rcl iret (bad) xchg pop add loope cmc rcll adc cld sti pop jl xchg (bad) pop push rex.B fstpt xchg lret xor (bad) pushq sbb mov and icebp rcrl push cltd in in test (bad) movabs xchg mov pop mov fcoms jl push cld mov pop lods test sar rclb shr icebp xchg rcr mov jrcxz je adc push push pop lret movabs rex.WXB sbb mov xor in callq (bad) cld jns movabs movslq (bad) push mov lret add enterq rex.R mov mov (bad) (bad) lret sub callq xchg mov sub jo fiadd rex.RXB outsl cltd rex.WB push cwtl push pushq xchg movsl scas mov mov xchg test mov fwait pop icebp xor clc rex.B jo xlat sub std push pushfq cmp adc int3 notb rex.X rex.WX addr32 xchg pop mov (bad) mov fadd ja (bad) rex.W icebp jns (bad) mov pop mov (bad) (bad) xor (bad) xchg fdivs movabs stos cltd out fnop pop xchg xchg (bad) lret rex.X push or ficompl cmp (bad) sub or cmp mov (bad) or xor (bad) mov fistl and jg lock adc cli movabs (bad) movabs lret out mov addr32 out and adc ja xor sub jge mov loope or mov rex.WB jae push fucomp and jne mov (bad) cwtl add je (bad) fstpl rol adc mov mov pop jmp xor fsubrl (bad) rex.WX jmpq int sub jbe pop mov mov fistl int3 rex.R (bad) imul cmp mov sub jge fcomi paddq lods shrl lods push outsl and imul rex.WX jb add fstl xchg lret adc in mov rex.RXB xchg mov outsl and movabs push xchg pushq and mov in movslq push add jle rex.RXB sub jg fldt loopne adc add fdivs cmp rex.RXB rex.WXB mov mov adc pop mov sahf mov retq rex.WRXB cmp insl sbb cs xor push sub and mov push rex.W (bad) pop std sub imul (bad) rex.XB push addr32 fbstp (bad) fisttpl or rex.X rex.R adc cmp fstpt adc push mov jge cmp jbe repz rol jle in jg cltd add fstpt adc or rcrb sub cmpsb movabs movabs mov jb pop test rex.RB out (bad) fadd cmp (bad) imul adc xchg mov cltd mov rex.WRXB lea leaveq (bad) rex.RB (bad) lret sti push mov add (bad) (bad) (bad) (bad) jg pushq cmpsb mov cwtl mov pop (bad) pop lock (bad) cld push std rex.RB adc jl rex.WX rex.WRXB rex.RB cmpsl mov (bad) rex.WX cltd pop mov scas loope (bad) and fldt rex.R out mov jmpq retq or xchg (bad) push pop (bad) (bad) add out orb movabs cli rex.WRB not lret loopne (bad) icebp (bad) sahf xor (bad) xchg callq fistl fild imul cmp (bad) ds pop lea jne data16 mov xchg (bad) ffreep pop retq adc outsw (bad) add vsqrtsd jl adc sbbl rex.WRXB add (bad) pop pushq rorb mov fstpt cmp stos mov (bad) (bad) push popfq iret minps movabs fstpt lret pop jg adc lret jrcxz fildl stos movabs mov movl lods fstpt fadds loop hlt cmp rex.RX clc jmpq rex.WXB hlt xlat test lock callq fwait xchg (bad) pop stc test in clc movslq es pop and (bad) imul imul movabs sbb lods iret mov (bad) push sub xor xor add js fadd movabs shrb and jbe sub fnstcw pop (bad) in jnp sbb rex.RX fwait fwait (bad) in push stos fstpt mov lods cmp or fistpl lock xchg mov mov xlat jne (bad) and sbb adc xchg or jne push cltd int3 cwtl decb pop cmp (bad) (bad) adc (bad) cmpsb fcmovnb push decl mov hlt rex.W insb rolb mov fs stos or js jnp pop or outsl testl rex.WRB (bad) pop (bad) lret movabs scas (bad) in mov push hlt xlat lret lahf rcr (bad) (bad) insb and scas clc test jb loope adc repz push rex.RX loop xchg rex.B or pop rex.WXB js mov fildl add out mov movabs (bad) adc (bad) out xor cmp test xchg adc sbb (bad) rex.R rorl xchg add (bad) fildl test in (bad) xor and mov jg fcmovnu data16 mov mov (bad) or fistl mov (bad) movabs fldt stos cmc mov ja cmpb fcomi mov rex.X adc add fldt mov mov rex.WRB sub nop shrl repnz or pop mov fucomi xor in jl (bad) fisttpl jmpq pop (bad) adc (bad) fdivp (bad) (bad) (bad) mov mov rex loopne jno fisttpl ds fistl scas lock imul (bad) xchg int mov fldt rex.WRX sub (bad) stos incb jge sbb rex.WRB add hlt mov mov rex.RB (bad) jb jrcxz add xor cmp cmpsb pushq pop rcrb rex pushfq out cltd rex.WR rex mov pushfq xchg hlt cmp imul loope fnop xor repz push in callq add (bad) fidivl xchg push sub pop rex.WXB pop and out test rex (bad) cmp xor loope test push std (bad) scas rex.WX sub mov pushq mov sbb push adc mov xchg rex.WXB insb rex.WXB stos xor cmp test sti imul pushfq iret fildl (bad) out fbstp pop jmpq xor ror xlat sahf movslq and pushq xor or sub cli mov and cmpsb rex.WR rex.W fwait jl fildl pop cld lea and fistpl jle stc out rex.WRB xchg jns out divb xor sbb mov rex.WRX iret (bad) lock (bad) rex.WXB (bad) mov pop test ja xor icebp (bad) (bad) pop (bad) xlat out callq movabs mov out mov pop push fcomp mov (bad) sbb movslq sar xchg jmp adc sti add or add cmpsl imul mov sub mov enterq mov xchg sbb (bad) (bad) fstpt lods pop test movabs xor insb (bad) fstpt (bad) mov (bad) lods jrcxz movslq (bad) fldt (bad) add mov test sub in fcmovnu push mov rex.WRX sub int (bad) repnz adc fstpt movabs adcl out int insb retq push push es fcmovnb or sahf rex.WRXB lret mov rolb and pop int adc mov flds sahf add out icebp js cmp imul xchg movabs fisubrl (bad) or mov sub stc mov mov mov xor sbb (bad) add mov rex.WRXB cs xor (bad) ss (bad) xlat shlb xchg rex.WX xchg fildl cmp psrlq std pop ja testb adc cwtl jnp callq movabs in (bad) nop fildl add movabs fldt (bad) imul lret insb xchg gs mov pop out rex.B cmp pop jmpq pop mov (bad) xor (bad) movslq movslq mov (bad) ds (bad) lahf cs mov xor lret rex (bad) jae pop (bad) (bad) out adcl adc loop lock xor pop and js sbb (bad) pop or pop mov jge and adc xorl lods rcl (bad) pushq adc shlb test sbb jle insl mov fisttpl lods jl pop push jbe fistpl pop (bad) adc cmp (bad) mov push jg lahf rex.RXB push fcmovne js fcmovb xor pop pop push (bad) sub fwait cli mov (bad) gs (bad) (bad) (bad) cmp (bad) repnz outsl fldl mov xlat (bad) sbb (bad) (bad) scas rcrb nop ja bnd rex.WB movsb jmpq push iret pop test ds xchg fstpt (bad) rex.RB cld rcr or or xor xlat cmp and frndint fs data16 push or (bad) (bad) xchg movabs fmulp xchg cmp mov jrcxz imul in rex.WB lret pop xchg (bad) testl mov scas xor pop or mov push orl sbb push fcmove xor pushfq (bad) mov fldt cs iret movabs int3 (bad) mov mov (bad) sbb (bad) jle in pushq test movslq imul test test jnp mov insb pop lahf sub cmpsl (bad) rex.WX jae jb (bad) mov test mov fildl lock lahf xor rex.WB jne sbbl iret (bad) jb data16 fisttpl adc mov rex.RB test sub or cwtl lret xor jnp sub add test movabs (bad) fstpt mov push pop (bad) lock adc fldt test mov sub fiaddl jo enterq outsl mov callq (bad) insl mov xor mov (bad) loop pop jb jmpq jrcxz stos xor pop xchg jo xchg outsl int data16 sar js jbe push fs mov ja mov retq stos (bad) (bad) jle rex.WX add xchg mov xor xchg jnp (bad) loopne and adc mov loope (bad) mov scas (bad) (bad) mov mov (bad) xchg and mov insl and xchg frstpm(287 mov ds sbb rorb jo fs out out ss (bad) cmp movslq (bad) std pop lahf fisubr mov (bad) imul stos inc scas fadds sbb movabs pop pop mov in (bad) (bad) jle mov mov pop rorb (bad) push xchg xchg lea pushfq sbb in mov loopne shl pop mov (bad) sti cmp sbb pop add pushq or pop hlt push lea cmp mov pop cld push rex fcmovnb mov pushq out sub movabs stos jo mov callq (bad) mov mov mov or movabs enterq push fcomip gs jbe rex.RXB (bad) cmpsb rex.WR sub cs ds sbb rex.WXB (bad) lock sbb (bad) fistl mov out (bad) lret cmp imul int3 fwait ja fcoml (bad) imul push rex.XB push in sub xchg push retq movabs mov (bad) push mov fisttpl js movabs jbe loopne pop xlat sarl lret sti mov fwait cmp pushq rex.X (bad) (bad) jnp jo rex.RB orl (bad) imulb sarb pushq callq rex.WXB rex.B (bad) fdivrl lods stos ror mov fisttpl pop (bad) sub leaveq cmp xchg jmpq pop stos sbb ds or xor jae test adc rex.WRB jno rex lret sub add cwtl rex.WRB loopne xchg pop leaveq jo rex.RXB rex.RB fildl push movabs sbb test std lods mov cmp dec rex.WR rex.WR mov pop pop leaveq (bad) xor scas adc (bad) pop fcmovnu pop push loop (bad) ds pop in mov xchg fmull pop rex.WB cmp hlt retq fisttpl psrlw adcb sbb cmp stos repnz pop (bad) in xor (bad) pop sarl fwait rex.XB adc mov xor fistl cmp (bad) fadds mov (bad) outsl scas outsl fstpt cli xchg jmp sbb fiaddl repz mov icebp ds and add loopne stos sub movabs add or rex.WR test mov (bad) leaveq (bad) or (bad) movslq cmp movsl (bad) (bad) (bad) outsl fcmovnb cli (bad) sbb adc (bad) xor or in rex.W pop jno addr32 in lods rex.XB movabs rex.RX push fistl jo pop and fstpt jg rex.WRX cmpl fstpt jle movsb repz fisttpl gs testl pop adc pop fwait cmp xlat cmp push fistpl rex.WXB fistp retq mov cmpsb fisttpl in test fcmovnbe or callq cmp js rex.RB cmp rex.X rex.WR lods pop repz loope repnz (bad) addr32 mov subl xorl and (bad) jbe (bad) gs cmp iret fwait mov push retq loop rex.RXB (bad) int sub add outsl jae mov pushq fcompl lods out push add push push or fstps rcr rex.WRB repnz fcomip mov adc ficoml retq (bad) movabs cs pop mov pop (bad) fsubl pop lret cmp and (bad) cli mov rex.WRXB (bad) rex.RB xchg gs and xor lret mov (bad) cltd repz cltd (bad) js mov rex.RB ss sti ja rex.RX mov in movabs cmp (bad) fstps add pushq cmpsl mov mov (bad) rex.WX std (bad) sub adc rex.WRB rex.X rex.R xchg rex.X mov cwtl jae repnz jmpq jle mov or rex.WRXB mov (bad) popfq out stos rex.R lods or rex.W (bad) movabs or lods es ja out and xchg ficoml jrcxz movabs in push imul jb xchg es outsb rex.B out adc and jbe xchg rex.RXB rex.WB (bad) mov (bad) (bad) add xor (bad) jmp xlat cmpl (bad) fstpt jno insb pushq insl fsubrl jns imul in rcrl xlat fild clc fldt sysenter sbb mov mov neg movsl in cwtl pop (bad) iret sarb jmpq adc fmul and (bad) xchg fildl movabs movabs jbe sbb in je iret stos add add adc stos fdiv lock callq std and xor pop cld stos rex.B xor (bad) fistl mov cli psadbw adc xchg icebp pop test rex.WXB (bad) es and or or xchg jae js pop repz cmpsb rol pop (bad) xor movslq loop xchg mov rex.W xor sarl test bnd loope jae or rex.WRX rex.WXB test lret and xor or fwait stos fucom sub push addr32 sub ss (bad) and lods lods rex.WR fbld jmpq jg and test (bad) (bad) adc icebp jle movsb xchg jrcxz js (bad) popfq ds xchg fcmovbe (bad) jnp callq jg mov rex.RX and mov or mov callq mov lret xor xchg mov jb pop fildl add cmp es mov rex.WRB sbb testl xchg add (bad) retq add frstor mov scas fs es fisttpl imul fcmovnbe rex.W xorl xchg fistl mov fs pushq cmp andl jrcxz (bad) jg leaveq scas jbe fucomi rex lret cmp pop mov cmpsb jbe or ja test mov sbb fsubrs test addr32 mov rcrb cmp pop or rex.WXB lret (bad) jb fcmovu mov imul fwait pop (bad) sbb add callq add movsb mov loopne in (bad) cmc loop pop pop in (bad) (bad) cld mov jg fcmovnb mov xor mov (bad) movabs (bad) movsl rex.W (bad) xchg xchg adc mov (bad) je fstpl (bad) add push jno insl mov lahf movsb pop rex.WX sub pop (bad) sbb (bad) fisttpl (bad) es (bad) rcr add fs or pop mull lods pop sbb lock imul pushq push out (bad) shrb retq jbe jo orl int3 imul jle mov (bad) callq pop lods jrcxz jne jmpq pop (bad) jno (bad) xchg fcomi insb (bad) jbe rorb jle and loopne cld jl movsb (bad) retq (bad) in xor shrl cmp mov xchg push and addr32 adcl rex.R insb (bad) mov stos outsl (bad) cmp push sbb jnp (bad) cld or mov xchg stos pop rex.WR out push fisttpl je sub (bad) movsl movslq (bad) fmul lods out jmpq jl outsb xchg shl sbb rex.WB jle (bad) retq movsb pop and ja out movabs or cli lock push (bad) sbb scas mov in push fstpl pavgw xor lock ficom xchg or in sarb sbb sti test retq (bad) sbb mov rex.WRB rex.WRB rex.XB lret pop (bad) lret add scas or (bad) adc movabs in sbb and ja rcl mov rcr xor pop pop (bad) or push dec or jl sub xchg pop push clc add sub (bad) fwait outsb (bad) push ss retq push (bad) fisttpl rex.W out cmp imul rex.WR (bad) xchg mov pop (bad) sbb movabs jmpq jb fistl sarb stos rcll scas xchg insb (bad) pop and je jae fistl neg cmp mov (bad) lret fildl xchg outsb hlt imul pop int3 and insb fucomi (bad) int stos adc (bad) or (bad) scas imul out fistpl cmc stos sub rex.WRX pushfq mov adc mov rorl fisttpl movsl sahf adc cmp out movabs xor lods mov sahf stos jge stc adc xor rcll mov xor and shl jae add sti xlat rex.R test pushq fistl lock mov int3 out cmp fcmovne xor add pop sbbl insb lret and lea (bad) (bad) insb movabs jg pushfq rolb in rolb shlb pop xchg lea sbb jmpq ficompl push xor fisttpl incb jo adcl mov mov imul fcmovb (bad) sbb movsb (bad) and (bad) fildl pop xor adc jle movslq int3 sbb mov mov lea xor lods test sub in adc sub xchg pop lret in adc imul xor pop movabs rex.W pop rex.WRXB sbb (bad) cmp js icebp sahf int3 lahf lock pushq mov (bad) (bad) sub jge mov icebp setae jae ss xor push (bad) adc (bad) rex.WX out addr32 (bad) mov rex.WRB jne iret (bad) lret push mov sti add cs repz neg fcmovu movabs leaveq cmpsl mov rex.WXB sahf jrcxz fwait rclb mov imul emms movsb pop (bad) in stc add fldl je rex.WRX int rex (bad) lret xchg sbb push outsl (bad) pop (bad) (bad) fistpl jnp addr32 sbb sub stc fldt push adc or cwtl pushfq out rex.XB sub mov pushq cmpsb (bad) lods fisttpl repnz adc jnp pop cmp subl mov adc jae retq fdivl data16 rcrb nop cli cmp fildl or (bad) (bad) rorl lret mov and jl lock rex.WR rex.XB fwait (bad) icebp sub mov fwait jmp (bad) out adc idivb jb fsub sarb mov pop ja cmpl rolb sbb jns xchg fildl (bad) cmp fmull adc out and retq or loopne cmp test jns movsb test rex.RB icebp std xor add fnstsw and ss pushfq (bad) pop cmp rex.B pop mov and (bad) shrl xchg (bad) jnp movsl fcomi xor mov cwtl jno std lahf (bad) (bad) (bad) pop scas pop (bad) adc jae (bad) (bad) lea cltd int3 test retq xchg (bad) mov rex.W out cli rex.XB lock addr32 push rex.B rex.WRX xor iret jrcxz (bad) cmp (bad) jo cwtl mov rex.WRX (bad) rex.WB mov pop mov mov movabs (bad) sbb gs fcmovnbe (bad) imulb cmc or scas je mov insl fcmovnu nop fisttpll movsl out push push cltd sarb mov push mov iret cmp fcmovnb in mov xchg outsl frstpm(287 stc xor rex.WXB fisttpl cmp mov cmp mov cmpsb fwait add movabs sbbl stc rex.WR fs mov push retq (bad) loop add rex.W rol mov sar mov xchg or rex.X mov pop fst leaveq loopne xchg cmp fnop mov push adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) fistl notl mov (bad) je or stos push mov inc sbb jae push pushq fildl xor cmp xchg cmp (bad) in lods jne loope loopne fmuls and cmp mov xor stos jns cmp and cmpsl lods xor push pushfq fldl jnp mov adc andl in fucomi (bad) mov (bad) mov push push add jae test rex.WB insb out retq mov out cwtl and imul (bad) lea (bad) add jo pop mov je sub jrcxz xchg (bad) rex.RX (bad) and fildl jmpq lock pop int fadds (bad) cmp jb jno push cmp (bad) rex.X xor push sbb rex.WRXB hlt pushq (bad) in movabs adc push mov jge (bad) int push rex.RB pop loop fstpt andl and sbb sti (bad) sbb or je fistl sti fs movsb movabs add mov fisttpl push jrcxz and jnp (bad) xchg xchg (bad) mov insl rex.WR movabs (bad) jmp rex.XB flds or (bad) add (bad) fstpt in (bad) mov mov movslq movabs loope (bad) xchg jrcxz stos iret movsq mov jbe,pn adc test ss mov cltd rcl xor pop add or lods push (bad) (bad) cmp (bad) pop jmpq fildl xor shll imul jrcxz mov orb push out push movsl fnstsw loop imul addr32 jle add sbb icebp rex.RXB fnstsw lea xlat (bad) mov js jns (bad) pop mov loopne pop lahf test ja sub jrcxz lods add loope jmp (bad) mov (bad) push fs adc rex.WB mov adc pushq jne repz (bad) out rex.B movabs push rex.XB push rex.WRX popfq cmc push pop (bad) push adc fwait clc mov mov xlat jp (bad) (bad) mov fisttpl ds jrcxz movabs jbe je fs rex.WB adc pop jmpq pop jnp (bad) fldt sar jrcxz callq rex.WRXB xor data16 rex.WXB addr32 pop mov adc xor (bad) outsb fwait mov fdivs jmp mov (bad) test rex.X movabs sti stc jp out subb (bad) sub pop jne hlt mov fildl not mov jmpq movsl fdiv sti fstl fisttpl (bad) jmpq push pop movabs sub (bad) loopne jrcxz cmp rorb (bad) mov cmp (bad) (bad) fcmovnbe (bad) icebp xchg jge or (bad) jmp imul sar mov lret sbb lods xchg pop cli cld (bad) es fwait (bad) movabs cli jg sbb or (bad) out jl outsb sti add ss add (bad) or data16 std (bad) fnop (bad) nop (bad) mov xor fstpt mov rcll movsb outsb push pushfq movabs fistpl outsl xchg fisttp (bad) incb nop mov sub rcrb stos mov (bad) cwtl mov loop jns xchg or pop repnz xchg jge cmp enterq fucomi loope hlt or out lods mov loopne lods movabs rex.WR or cmpsl push jnp xchg mov (bad) stos rolb xlat pushq je fcmovnu andb pop mov lods sbb insb outsl xchg pop pop stos (bad) addl xchg cld fistpl cmp (bad) (bad) push lods xchg lret scas mov jl sub stos in imul mov pop lret (bad) popq cmc lock cwtl loop sbb bnd rex.XB rcrl ja add sbb push ficompl xchg pop rex.WXB insl rex.WRX jl adc out push jg lods sbb jp fidivl cmp xor cmpsl push add icebp outsl mov adc xor or and fmul in rex.B pop mov jg mov push sbb pushfq outsl mov sti (bad) cmp (bad) repz jrcxz rex.RXB gs pop shr stos in push cwtl mov fnstcw out data16 incb xor (bad) fidiv (bad) xchg (bad) and sti or rex.WRX stc cmp mov sbb pop rex.R (bad) idivb mov jge movslq out jb cmpsl jrcxz in (bad) (bad) in movsb stos (bad) (bad) out stc and add rcl (bad) fsubrs cltd rex.RXB cs mov (bad) sbb loope cs or sbb mov xor fisubl lret movsl (bad) stos int3 and pop addr32 sbb test mov movsb clc or out cs je nop sbb sti test adc xor ja rex.RXB fs fild mov (bad) cltd ficoml shl jmpq add fnop int3 cmpsl pushq mov sub push jne rorb outsl data16 fisttpl test pop (bad) mov cltd and cld adc cld repz (bad) rex.RXB (bad) add pop mov (bad) lock jnp fsubrl (bad) pop out xor (bad) clc outsl pop fs or sbb fistp fisttpl insl je pop pop andl push mov movsb (bad) loopne mov sub movabs rex.WRB int3 cmp (bad) (bad) mov and movabs and sbb cltd (bad) cmp pop fwait xchg retq (bad) fnstenv fildl or mov push xchg (bad) pop or out fisub jae mov or cmp sbb loope mov movsb pop jno int outsl fisttpl gs fstpt and jno,pt mov (bad) jbe jmp add add rex.WB stos rex.RXB jne push cwtl lret rex.W (bad) fwait xchg (bad) fisttpl or repz fs push clc mov mov movsb stos pop rcl rex.RXB gs stos jns (bad) pop jge retq sbb and stos insl sbb sbbl (bad) pop mov xor incl pop loopne (bad) jl pop add in out fs sub fmuls lret loopne xor mov int icebp addb jne sahf ficoml (bad) mov push rex.RB retq jns (bad) sahf jp sarl (bad) stos rcr jle outsb jno xor cmp movsb xlat mov jmp cmp push fnop stos mov xchg jnp or mov negl push movl sub pop fiaddl (bad) or rex rex.R sub sbb (bad) movsl cmp stos (bad) repz jmp cmp xchg rex.WB (bad) mov loop mov pop retq fimul fmuls or fistpl lea pushq jbe (bad) (bad) mov repnz and or movabs movabs or imul js (bad) fstl mov fistl xor pop mov mov xor std data16 pushq cli adc mov cmp (bad) (bad) push imul xor or sahf push rcrb pop sbb (bad) imul mov cld movabs ja out mov pop adc rex.WB mov mov pop cmp movsb shrd iret jne (bad) pop divl push xor adc fwait xor insl adc (bad) pop (bad) xor notl jrcxz movabs xor jg xchg pop fsubs mov sbb movsl rex.W subl loope cmpsb pop mov pop cmp xchg cwtl xchg (bad) rex.WB int3 cmc add stc (bad) (bad) mov fmul cpuid out ficomp nop (bad) test retq or sub jnp fsubp callq (bad) jnp adc pop in jns (bad) rex.RX xor or sub mov fistl retq rex.W (bad) fdivrl adc (bad) or fsincos iret int3 test (bad) mov lods fidivr mov sti retq push imul rex.WRXB out adc (bad) pop add xchg mov add out mov js jo cmp rex.WRXB (bad) (bad) cwtl pop push test jnp popfq rex.WRB and (bad) pop (bad) test rorl imul fnclex lea mov sub scas divl cmp rex.WB pop jmpq shrb in repnz rex lret rex.WRX jns xchg icebp (bad) idivl rex.X cmp mov jnp rex.W mov mov int adcl outsb rex.WRB lahf pop outsl mov lods (bad) xchg cmp (bad) fildl out movabs jnp sbb pop lock jle cmp fldcw fnop xor sub cmp mov push out jge mov add adc sbb in ja or shlq mov jns pop retq mov (bad) jnp xor fnclex rex.WRXB insb mov gs sub push (bad) sbb cmpb add loope xchg xor out movsl jp sub in movsbl jle pop fcoml jnp adcb lods rex.WRB rex.WRB mov jno cmp insl fadds push lods and stos cmp fucomp rex.WB fidivrl je pushfq in sub fnop fsubrs (bad) rex.WB (bad) mov (bad) rex pop pop sti roll cmc rex.WX std rex.XB xlat fiaddl mov movabs retq or loope stc sub in cwtl fcmovnbe jle imul (bad) cmpsb rex.WRB out xor in stos jnp in pop sub adc fist int3 jno cwtl push and enterq mov movabs jns mov loopne jrcxz and clc lret mov (bad) jnp jnp add repz outsb jnp rex.RXB in fistpl (bad) mov or lea cwtl xchg retq (bad) (bad) jb stos pop xor callq jbe fldt push ss mov xchg cmc jne push jle (bad) cmp in adc mov mov outsl push movsb ja cmp push push imul out fisttpl sbb fistl mov jne fdivl fildl xchg imul xchg dec (bad) cmpsl rex.R pop repnz xlat movslq (bad) int3 lret jmpq (bad) pop outsb sub pop xchg leaveq outsl test push (bad) xor xchg enterq int3 iret hlt in rex.WXB mov (bad) cmp insb (bad) fucomi (bad) pop insb addr32 iret sub ja mov imul test sbb int3 imul lret int mov xchg iret sub in jae jg (bad) (bad) lret lods sbb mov rorb push in xchg sahf jbe scas (bad) jle push mov pushq cltd adc rex pop mov or movsb adcl cld mull je movsb nop and cli stos mov movabs addr32 mov std (bad) xor (bad) loope pop mov cmp adc sbb fs pushfq cmpsb jb fwait (bad) test pop add test (bad) (bad) imul push (bad) fimull push xor (bad) fwait imul mov cmp rex.XB xchg add (bad) data16 mov js (bad) sub fcmovnbe rorb insl int nop mov add (bad) lods xor sub pop test xlat (bad) mov popfq mov xorl push sahf cmpsl retq insb jbe pop lahf fcomi jne (bad) sub int3 jge mov movabs insl std rex.WX leaveq or rex.W fsubl cmp stos mov (bad) jnp lock retq rex.WRXB test int3 jnp push fildl out (bad) mov push rex.WR cwtl jnp xchg int3 icebp xor pop sti pop popfq out movabs imul std flds adc (bad) xchg rex.WRXB clc sbb fwait mov fistpl rclb rorb (bad) rex.WRB cmc jp sub jno xor jg xchg (bad) sti in pop mov (bad) rex.X mov lret xor sbbb (bad) out rex add and rex.X jl xchg js jno xchg jbe sarl (bad) ficom xor fmull cmpsl pop pushfq scas and and sbb in mov jl out pushfq mov push xchg ss jge fldl leaveq fisub rex.WRB (bad) push jrcxz imul fwait (bad) adc sbb jo push sbb or outsl jle jno (bad) pop xchg adc cld cmp (bad) jne scas lock mov xchg push jo jle imul lea rol fistpll lock (bad) (bad) fsubs or int xchg (bad) shll (bad) push shlb push mov test neg mov (bad) fsubs cltd xor xchg mov push (bad) (bad) (bad) xor jb out pop xchg rex.WRB adc fwait movabs add xchg push xchg adc mov je retq mov cmp add roll test in cmp cwtl rex.XB rex.WR sub push lea jmp adc je (bad) cld push mov jp out fs and movsb in leaveq jno setbe stos add mov fbstp jp pop popfq and sarb cmp movabs out ficomp push nop stc xchg jle jno cmp mulb pop (bad) loopne rex.B adc lods imul sub movabs cmpsl push repz fildll rex.WXB iret rex js addr32 or mov iret loopne sti xchg sahf push pop int3 cmc sub fldl xchg jp (bad) and scas imul rclb (bad) mov rex.RXB xchg mov pop or gs rolb loopne mov or mov repz (bad) or mov add movabs mov repz jnp (bad) rex.R mov cld movabs jns fcmovnu and adc push movabs scas repz rex.WX rex.X rcr pushq add xor push fnstenv cmpsb pop jl cmp pop fsubr movslq push fsubs imul mov push (bad) test (bad) lock (bad) mov (bad) xchg adc mov xchg adc mov rex.WRX rex.RXB or movslq cmp lret (bad) lea push (bad) test stos add push (bad) pushfq out mull mov sbb mov jnp and fdivs (bad) xor jp mov pop (bad) (bad) fstl out (bad) xchg or test (bad) cmp jno imull int shlb fdivp add or push (bad) push iret xchg fs pop add cmc (bad) (bad) jne popfq push pop add push jge repz adc (bad) hlt rex.WXB rcrb rex.RX xchg mov fs retq jns adc xchg jg rex.RB adcl xor xchg sbb rex.RXB sub sahf (bad) rex.WX sbb movabs sub pushq imul jp add and roll pop (bad) jl test (bad) rex.WR add lods jle mov ds sbb scas test sub addl push jp insb add (bad) imul repnz cmc sbbl xor fsubs stos pop rex.RXB ss or pushfq push rex.XB lods sbb rex.WRX cli cs cs (bad) mulb xor or rex.XB cld mov imul and enterq or adc xor or and jb fdiv jle cmp loopne cmp pop mov xchg pushfq xor div xor cltd nop loopnel sub push test (bad) adc leaveq or mov in rolb pop jne and sarl xlat push push retw sbb add (bad) pop pop (bad) mov std jp pop or fistp jmp pop jbe jle sub (bad) mov mov repnz pop push pop fwait pop or cwtl mov rex.R push test mov test (bad) jp push lods imul out (bad) mov sub and sub std test xor jno sti or fadd insl jo adcb mov rcrb rclb retq enterq jle int3 cmc in cmp adc (bad) mov lahf scas or lahf (bad) int push fimull sbbl insl cmpsl jge mov enterq cld and jno mov adc (bad) (bad) cmp rex.WRXB cs mov icebp fadd pop test rex.WR out fnsave stos (bad) sub loopne (bad) lock jb stos icebp xlat stos (bad) (bad) jno adc sub cwtl mov xor jae scas fildl (bad) rex.WRB pushfq stc jnp out push lret repz hlt movabs shlb jo (bad) xorb outsb mov fistpl test adc pushfq loope (bad) cwtl stos (bad) xchg enterq in cmp fisttpl or mull push (bad) test (bad) fcmovnu (bad) sti cs adc push loop cmp fistpl nop xchg jns rex.WRX rex.W ss sub sahf movslq (bad) xchg stc jnp xchg jbe fldt vpcmpgtw jmp leaveq sbbl test sbb movabs mov (bad) rex.WXB add jns (bad) push lahf pop movabs (bad) jg pop in jrcxz xchg fstpt subl int3 icebp rex.R pop xor mov jnp xor rex.WX push push mov jl sub pop (bad) xor test fstp rex.B xor (bad) sub fstpt rorl in (bad) rex.WRX rex.XB rex.WRB je add adc pop adc mov mov xor pop loop mov (bad) cs pop sub fwait scas mov iret or movslq lret cmp (bad) xor jns in es cmp cmp movsl and sbb movabs movsl adc int3 rex mov sbb fstpt (bad) ja cmc and or add cmp (bad) fidivl pop mov (bad) (bad) cwtl xchg ds (bad) fdivr xchg int3 cwtl ds test fnstenv xchg mov lcall imul sub outsl mov ss pop push mov (bad) sub test pop jge scas rex.WB (bad) movslq cmp or (bad) mov (bad) int mov mov mov lret loop adc ds jle jrcxz lea loope jae xchg pushq mov mov rex.W es (bad) adc retq sub retq jnp movsw (bad) fisttpll (bad) rex.RXB fsubrs enterq (bad) cli rex jb fistpl test hlt jns int lret or (bad) push ja pop (bad) mov push mov pop rclb sub push (bad) fcomi jle jmpq mov cmp cmp add (bad) add fisttpl (bad) jnp (bad) mov (bad) (bad) rcll ds push add lret xor data16 sbb (bad) jno (bad) jp (bad) data16 rex.WRB sbb pop pop push out addr32 mov (bad) fmull (bad) add push (bad) sub mov popfq fwait mov shrb fmuls (bad) mov rex.B (bad) cmp out add pushq and icebp xor rcl jbe out jle pop (bad) xor out pop xor lret rex.RX rex.WXB add pop (bad) cmp (bad) out mov stos test (bad) push sbb adc shrl loop cmp rex.WR sub (bad) fwait mov jg pop mov xor js fsts imul adc shll cmp stc lret (bad) rex sub jnp rorl and imul in jrcxz pushfq loope sbb out pop mov popfq (bad) or ss sbb pop (bad) movabs loope pop notl (bad) sbb ss cmpsl pop in pop (bad) xlat add scas (bad) test ss (bad) in insb jb loop add xchg in enterq and insl sbb mov (bad) cmpsl pop movabs xchg rex.WXB fistl jle xor (bad) (bad) test (bad) sub cmpsb cmp orl movslq callq out push sub sbb sub adc lahf sahf and leaveq shrb fistl (bad) fnop pmulhuw mov fsubs (bad) mov jmp or and or jo and lock or cmpsl sbb movslq fldt movabs sbb nop fisttpl fdivrl rex.WX rex.XB xchg jmpq movabs xchg xor mov jnp jne mov mov sbb movsl (bad) rex.WX (bad) (bad) idivl loope mov xor (bad) sbb rolb sub push jp loop test mov (bad) fcmovne clc mov jbe push xor xor (bad) mov (bad) pop shlb pop std imul rex.RB lret push test pop (bad) mov mul lods lock (bad) sub add jg xchg (bad) popfw sub pop out fcmovnb mov xchg jle and not leaveq fimull (bad) insl jne decl (bad) sbb mov mov neg push and cmp (bad) shlb push fcomp (bad) lret cwtl xchg clc fistpl cmp idivl rex.RXB (bad) add (bad) mov cli or icebp sbb imul rex.RX adc (bad) (bad) sbb sub (bad) fcmovb mov xlat pop xor popfq (bad) cld hlt cmpsb movabs add movslq (bad) mov imul rex.RB movabs (bad) (bad) cmc faddl out movabs add lret fucomi scas xchg movslq xchg rex.RB mov sbb (bad) fldt adcl ds sbb xchg jno pop rex.WRB movsl xchg jns (bad) adc xchg (bad) popfq movabs xor andl movslq jnp fndisi(8087 sbb (bad) rex.X shrb add fildl (bad) movslq movabs mov sbb jl rex.WR mov and fcmovne xor cmp (bad) sub loopne rclb rcr add rex.RX cs add (bad) fcmovne mov or cmpsb jbe jnp movsb (bad) outsl mov imul jmpq loop (bad) cmp xchg (bad) leaveq data16 rcr pop icebp test mov rex.W fwait sbb pop adc mov cmpsb push (bad) rex.W xlat push mov fist movabs lret push sti sub or (bad) jl fsubs std or jns (bad) (bad) mov popfq sub (bad) (bad) rcr sbb add xor jl push (bad) shrb loope add sbb cmp mov (bad) insb mov fsubs push lahf xchg hlt cmp jns lret jne (bad) in imul rex.RB and (bad) xchg (bad) sub cld ja adc sub fs push adc fistl fs push and imul adc jmp pop sub cmp cmp out push push std cmp and pop mov lret lock rex.RB (bad) and (bad) push pop rex.WRX shrb cmc (bad) jne loope cs imul push (bad) and sar mull test sub cmp push push and and cwtl xchg out mov lods sbb xchg push xchg mov sbb mov std fiadd mov int3 sar (bad) adc pushq jno imul gs fnstsw ficom addr32 (bad) pushfq push sbb fsubp jo mov xchg and mov scas and adc or add pop adc sbb (bad) fwait imul jmpq (bad) sbb leaveq (bad) retq or (bad) ficompl cmp sbb rex.XB push jmpq addr32 (bad) rex.RB addr32 in pushfq lret mov repnz loope sub (bad) cmpsl (bad) scas mov scas pop outsl shrb fldcw enterq incl fwait cmp pop nop (bad) sub sahf or (bad) xchg in popfq mov xchg mov pop push cmp cmp jb mov sub nop mov mov fwait and push pushq xlat int3 sub ds neg movabs mov scas rorb mov (bad) insl (bad) loopne and (bad) xchg fcoms xchg rex.W pop cmpsb nop xor scas (bad) (bad) rex.WRB xchg adc repz lret or mov adc and cmp test stc fistpl and (bad) xor fildl imul clc fiadd (bad) movsl xchg insl mov xor rex.WX int3 addl cmp push and and sbb ds fwait movabs jbe fld xor insb scas add sub pop pop movsb cli repz mov cli fistpl cwtl mov fistpl (bad) cmp push movabs (bad) mov jge fcmovnbe add or mov and stos sarb add push addr32 movslq sahf adc pop mov test enterq stos cld sahf (bad) in and repz fnop rex.RX mov push (bad) xchg mov mov std lret push mov (bad) mov mov add icebp add (bad) jnp movabs sahf movslq (bad) rex.R xor xchg (bad) rex.XB icebp cmp (bad) jmp add sti movabs lods mov repz outsl (bad) adc mov clc (bad) jle pop loope pause cmpsb movabs mov jne lea or je (bad) and rex.WX sbb mov int3 mov (bad) xor lret mov fcoms pushq push fwait pushq xchg xchg rex.WB rex.WX rex.WB rex.WRB es enterq (bad) pop jrcxz pop imull or sub sti rex.R cmp loop shrl mov sbb gs rcrb movsl jae or and (bad) cmp ss out (bad) rcrl (bad) push (bad) push xor data16 adc std fcmovnb or rex.WB mov sub jae subl xchg (bad) sub lock mov fstpt mov fucomp icebp push pop rex.WX fmuls mov ja (bad) cmp test (bad) jg add sti (bad) stc xor (bad) in rex.X xchg (bad) cmpsb in (bad) lret xor movslq scas std and pushfq imul fistl (bad) fcom movabs test fistl or lahf pop scas (bad) insl data16 lods fstpt jge jnp add rorb jns add fucomi or (bad) mov fcomi (bad) lret (bad) (bad) mov outsb rol stos mov jg pop scas shrb (bad) fistpl sbb ja cmp rex.WRXB (bad) lods rex.RXB push or cmp imul mov fisttpl pop (bad) ficompl rex.RB movabs rex.WRXB and jne (bad) pand rex.RXB jae jo pop (bad) sub fwait (bad) subb push jnp lods or and rex.B vshufps sbb lahf xchg mov jns pushq cmp (bad) xchg (bad) pushq pop adc outsl out addr32 mov push mov cmp mov jae sub or (bad) lret mov loop (bad) bnd in sbb (bad) pop fisttpl xchg (bad) fistpl adc retq sbb mov js fcmovne and add out mov lret (bad) (bad) in fdivrs sti cmp cmp sub mov (bad) lods ficomp cmp pop sbb sbb xlat rcrb rex.WX roll (bad) (bad) (bad) sub (bad) sub (bad) mov jrcxz push lock mov test out js,pt repnz pop lea jp mov test ss push sarl lret (bad) out movabs xchg xchg fnop adc push or leaveq rex.B enterq (bad) cmp hlt test jmpq fcoms push (bad) jl int3 jns pop jnp lret push cmpsb xchg push pushfq add fildl repz sbb fldt (bad) mov loop fcmovnu movabs test cmpsl jnp jnp (bad) fidivr std xchg and adc rex.WXB (bad) divps fstpt (bad) add pop loopne xlat std scas testb test mov pop lret mov adc (bad) fistl xlat xorl add pop je pop xorb mov fucom (bad) xor (bad) xor int3 xchg fnclex pushfq sahf pop jg or retq sub and mov jne sub cmp mov movabs sbb jno mov jrcxz rex.WX xchg rex.RB jns (bad) pop sub xchg outsb mov fistpl pushq cmp or sub jnp pop fstpt sub lret push leaveq (bad) std sbb (bad) mov and mov jnp roll jne fistpl (bad) subb popfq cvtps2pi fistpl clc or pushq rex.WX shl sub (bad) shrb stc rex.WRXB (bad) (bad) (bad) xchg clc loopne stos mov (bad) (bad) jmpq (bad) jae (bad) mov movabs fcoml jle (bad) or jl mov outsl xlat jge movslq test fcomi rex.RXB push iretw fldt cmc (bad) fldt (bad) push (bad) rex.W pand (bad) popq (bad) sbb repnz xchg fwait (bad) out pop fidivrl (bad) xchg (bad) movsl (bad) fisttpl or std jb cmp pop xor mov adc icebp jae loope mov (bad) lahf repz (bad) lods rex.X imul fsubr imul fldcw stc clc sub (bad) movabs rex.WB in (bad) push sbb int (bad) mov pop xor test (bad) in jns cli fldt cs rex.RX (bad) (bad) or rex.WB cmpsl jg cltd gs fdivl jnp lock mov movsl jrcxz fldt je mov xchg mov outsb (bad) (bad) out pop rex.WRXB jne lock (bad) pushq xor jle adc pop jl adcl in (bad) cmp pop mov and sub or (bad) movabs cld imul fstpt lea fnstcw or and mov xchg fisttpl mov cmp (bad) insb rorl cmp andl int stos std xor jb jmp fwait rorl or fldt add push setg enterq sub sarb (bad) push loope push pop rolb retq rex.X sbb cmp or fist idivl pop adc or sub sub sbb adc xchg je mov sbb mov cmpsl fwait (bad) out (bad) pop rex.W (bad) sub add jb mov cmp push (bad) sti mov imul add lea movabs (bad) insl (bad) cmp test pop add (bad) mov fidivr sbb adc rex.WR (bad) jnp adc fs jrcxz int3 mov sub cmp cmc xchg lahf rex.WRXB retq rex.WRX rex.R fs jno fwait pushq xchg clc fistpl (bad) test xor pop sar adc movsl push adc mov popfq iret add (bad) or (bad) loopne jae fs fisttpl ja jl pop leaveq push (bad) mov (bad) sbb add adc rex.XB sub (bad) jne rex.WR fistpl rex.RB sbb mov fistl xor or imull pushq fninit imul xchg push fistpl push (bad) sub xor js movslq sub faddl mov (bad) rol jnp rex.W mov sub cmp fucomi push (bad) xor stc push xchg fildl pop lods xor (bad) int3 rex.RB pop outsb pushfq push retq pop (bad) cmp (bad) fistl jbe fstpt scas xchg pop ud2 insb ss iret idivl out pop fcmovnbe pushq and movabs xor fstpt pop pop fildl jmp adc clc cmp or rolb pop fneni(8087 xchg add rex.R insb adc cmp movabs (bad) pop jmp ds sub pushq xchg insl gs (bad) rex.WR add cmp fildl add (bad) fldt add jno rcrb fnsave cmp mov (bad) sub lret imul imul sub fwait cmp cld add jne pop fwait rex.RX jae xchg sarl movslq in jrcxz sbb (bad) pushfq clc cld lods hlt sbb jmp rex.X addr32 and callq pop adc cmp test (bad) add fnstcw rex.WRX retq mov pop mov pop xchg out test (bad) retq xchg sbb (bad) mov rex.WRB rcr loope fidivr cmp in repz (bad) jbe idivl movsl fsubrs lret (bad) fist jne mov in cmp jae or pushq mov loop xchg mov mov or loope outsl jb lock pop stc adc outsl and lret js pop adc adc out pop rex.X out mov push fwait lret leaveq lods fs shlb mov ja adc xchg movabs add loope xchg push jrcxz pop ffreep mov mov rex.X fadds orl lods mov sub rex.X rex jae sub cmp adc fldt sbbl fistl sahf cli stos rex.WRB rex.B rex.R movabs outsb stos rolb mov fcmovnbe gs (bad) fistpl adc push push mov xchg test or std pop out mov (bad) scas movsl rex.WB fdivl sbb jge push adc jle imul cld xor popfq retq mov in (bad) adc and push jne in (bad) test mov jl cld jne (bad) jg or fwait rex.B sub loopne lret cmp rex.RB sbb adc (bad) (bad) fwait jp movabs iret cmpsl push repz cs lods add insl adc fildll mov cltd cmpl xchg or popfq cmpsb rex.RB push (bad) imul movsl movsb (bad) xor shr outsb (bad) int3 iret cli sti pop xlat xchg (bad) stos jbe outsl (bad) mov movabs sub mov pushq (bad) xor xchg and (bad) xor and gs cmp rcrb pop movsl stos jne sarl pop rcr or jnp (bad) icebp out (bad) adcl enterq fwait sbbb ja movabs retq es pop sub fistpl mov adc pop pop clc decb cmp and enterq rex.WR mov (bad) lret adc shl insb and lret jno add (bad) sti pop and movl test es sub (bad) (bad) (bad) mov out mov pop sbb or fistpl lock sub or (bad) rex.WRB xor (bad) jle (bad) fistl xchg pop xchg sub pop pop push push sbb orl add movabs rcrl or (bad) pop jrcxz rex.RX sbb push xchg (bad) imul (bad) mov insl rex.XB rex jae fcomi hlt pushfq insb pop mov (bad) xor (bad) (bad) mul in add mov cli sub (bad) jae jbe movnti imulb or lcall fbld insl (bad) movabs outsb push scas cmp (bad) cs pop inc popfq divl movslq movabs mov js (bad) sub mov rex.W subb sbb or pop (bad) loope cmp or (bad) int3 fistpl data16 int je mov jnp or (bad) outsl hlt (bad) and (bad) fistpl sub rex.WXB clc or ffreep mov xor fisttpl rcll rex.WRB stos pop movabs sbb pop add xchg (bad) (bad) mov fwait imul jp je jmp pop (bad) fucomi (bad) sub add std or push rex.WX enterq (bad) stc pop mov and jae sbb jb pop (bad) stc loop add xchg (bad) xchg jo rex.WXB mov (bad) fsubrl and sbb ja pop push iret out or pop mov cltd testl adc pushq (bad) xchg mov loopne insb add outsl xchg mov gs (bad) sahf (bad) movl in mov pop xor mov andl nop (bad) (bad) push lods (bad) (bad) fldt push stc loope (bad) rex.WR add (bad) fisttpl mov rex.RB rex.W mov (bad) movabs or (bad) and and repz cmc pushq sbb lea out jns fisttpl fmuls mov adc rcl ja fs push decb in fwait test xchg (bad) js xor mov in movslq sub cmp rex.WR fsubrp int3 jg adc jrcxz rex.R add stos sti (bad) mov sub test cmp xor sub sbb sbb orb ss sbbl mov mov cmp rex.WX push add add xchg fs fcmovnb (bad) loope jnp sub leaveq or or cmp loop pop stc std cs retq push lock jmpq (bad) sahf lahf fwait in (bad) sbb adc fstpt mov cmc push fmulp test jae fsubrs pop rex jbe int3 callq mov fistpl jne movnti out mov cmpsb gs jnp jmpq pop add sbb data16 fistl and scas mov pop or (bad) mov pop xor outsb insb cmpsl cli push jns and sahf jae jmp retq sbb lahf pop retq rex.X loop repnz (bad) (bad) (bad) rex.RX mov fldt mov fucomi add fldt jns adc loop jae (bad) in pop (bad) mov (bad) push xor cmp cmovb cmp adc jrcxz rex.XB xchg gs adc (bad) (bad) fcmovnu sbb int3 movabs out iret fstpt push es pop movabs or jmpq fwait xor shl testl rex.RB clc retq fildl movabs jg pop (bad) xchg mov cld push rex.XB std fwait ds cmpsl (bad) leaveq push fisttpl xchg testl (bad) cmc enterq imul or pop (bad) fstpt loopne sub adc pushq push movabs (bad) imul popfq roll pop (bad) mov cwtl lret stos pop add rex.WR xor icebp rex.WRB clc fidivl add int jb int and clc rex.WB movabs mov in movsb fwait mov xorl mov mov pop xor xchg nop rcrb pop add in jrcxz (bad) or je rex.WRX pushq pop pop stos xchg cs push mov sbb (bad) rex.R and and mov xor sbb fwait loop (bad) jno mov add (bad) rex.WX movabs loop add sarb movsb adc fwait xor fld pop pushfq out xchg pop gs xor fldl mov (bad) sub retq (bad) xchg retq jge rex.X xchg enterq mov testb scas xchg iret cmpsb loop int3 jnp mov data16 int3 nop xchg (bad) sti rex.XB rex.W pop add decl cmpsl rex.WRXB lea add lock (bad) xor sbb mov test adc hlt cmpsb in jp pop data16 fdivs xchg add adc movslq out fldcw (bad) xor sbb or mov adc pushq sbbb sub lock int3 fstpt push in adc mov rex.WB fs fildl nop (bad) xchg rex.RX rex.XB in push jnp int3 and fistp xor rex.XB lret and fistl (bad) sub pop rex.B repz in and fildll add stos (bad) cwtl mov and fs sahf jb nop sarb sbb rcrl pop pop rex.RX subl rcr (bad) lods (bad) mov xor rex.X rex.WRX cmp xchg mov in int movabs rex.RB rex.XB mov add sbb retq mov push imul maskmovq insl sti fldt cld push (bad) push push jg mov xchg fldt xor fistl (bad) (bad) (bad) cld imul push and retq shll rex.RXB rex.WRB nop (bad) fwait (bad) mov hlt rex.R insl xor xchg loope jmpq pop (bad) cli mov rex.WRXB adc fbld (bad) and pushq mov rol int3 add jle jmp xchg jg shl pop (bad) xchg imul push fldt rex.RXB cmp xchg ds outsl jle shrl mov test imul lock jg (bad) fistpl mov subl ds lock cmp leaveq mov rex.WRB (bad) mov cld (bad) shrl jmp rex.RX sub pop push fist and add fisubr xchg lret fcmovnbe sbb pcmpgtd fs mov adc mov mov loopne lods out ds rex.WB lock add cltd cmc pop andb cltd pop pop cmp roll (bad) stos mov xchg outsl cmp sbb rex.RX retq outsl add (bad) fnstcw (bad) xchg (bad) rex.XB iret movsb xor test lods (bad) (bad) mov (bad) cmp (bad) imul mov stos mov sbb movslq pop rex.WRB je roll cmpsb imul (bad) lock adc (bad) sti (bad) popfq pop or mov sbbl push pop pop (bad) out fldenv movabs (bad) xor test xchg lret stos sahf mov cmp rex.WXB loop sbb fucomi repnz hlt mov cld movslq in mov (bad) mov mov rex.WXB fwait mov jle pop leaveq sub rex.WX rex.XB ds outsb imul mov adc pushfq cmp pop leaveq pop outsb (bad) cmp leaveq or sub test mov mov ja fstpt (bad) pushfq rorl pushq rex.X lods pop in xchg out movabs xor (bad) fcmovnb repnz (bad) retq fcomps (bad) mov xor (bad) out subl shll cs jl (bad) jno add stos idivl (bad) retq (bad) js jae mov int3 stos add (bad) mov movabs sbb mov test outsl fwait (bad) (bad) sub sbb adc rex.R rex (bad) rex.RX ds mov jns (bad) stc loope fucomi jp shll loopne int3 retq insl and (bad) jp cmp mov pushq mov sub mov je push rcll cmpsb fcmovnu and test int enterq outsb and cli fnstcw (bad) mov movslq mov insb movsl (bad) cs rex.XB sti sbb mov mov and pop mov pop stos sbb loopne test movsl (bad) pushq mov addr32 jns jle in pop and mov iret sbb pushfq in xor stos fadds fninit mov nop sbb (bad) add fwait sub mov cmp pop popfq fs or xchg imul test mov pop xor movups jns xchg or fldt repnz cmp (bad) cmp rcrl mov gs cli mov fisttpl fadd push (bad) test fs jp mov movslq (bad) in mov pushq mov imul cmp mov rcr scas insl add shrb jmp rex.WR imul rex.B xor pop cmpsb xchg sbb mov and sbb push in xchg or rex.WRX repz cmp imul pop outsl push (bad) rex.X mov jno test (bad) or pop mov callq pop nop jge ror pop sbb ss (bad) in pand (bad) std (bad) callq lock xchg xchg fildl sub repnz adc leaveq jl retq jg lahf rex.WR or repnz xchg (bad) (bad) (bad) (bad) fildl jge push (bad) rex.WX int3 rex.XB fisttpl hlt (bad) or fistl enterq pushq movslq rex.WRB push jns jnp push int3 pop mov xor (bad) rep imul movabs fwait xchg jb rex.WX retq (bad) movabs (bad) ja sbb pop (bad) in jns callq mov sub sbb adc cwtl pop adc (bad) loopne adc cmp or fistpl out testl fisttpl test pop sarb sbb outsl adc stos int3 or movabs lods (bad) fs fistpl (bad) mov xor mov cmp mov fistpl pushfq push jmpq xchg fwait std xor sarl rcrb fcmovnu push mov sbb or rex.WXB jmp (bad) xchg icebp pop rex.RX (bad) (bad) and (bad) or imul fiaddl adc push movabs add sbb sti clc rex.WRXB add (bad) adc mov jge pop jrcxz lods (bad) pop fchs jmp rex.RX rex.RX rex.XB mov sbb (bad) push stos test xor push fstpt fistp loope nop (bad) mov push rex.WRXB (bad) mov mov pop (bad) (bad) push xchg fidiv (bad) (bad) data16 lods ja fisttpl pushq enterq imul out mov cmp (bad) test (bad) and jno and fwait push xchg (bad) leaveq fistl sub fisubrl adc (bad) repnz add xchg fisubl rex.R sti (bad) callq pop mov (bad) (bad) adc (bad) rex.RX rcr (bad) lock or jae ja mov (bad) xchg (bad) and sti rex.WR pop (bad) and retq jne popfq fucomi or sarb cwtl (bad) addl insl mov movabs cmp fistl jae,pt mov mov test shll (bad) and add pop jmp stc push lret adc sub rex.RX cwtl vmovsd stos (bad) movslq loop lret adc out pop (bad) je rex.WRX xor xor mov movabs push insb mov mov pop jo xchg movabs (bad) jp (bad) sub or mov (bad) xor fwait xchg sbb add movabs (bad) adc sub fisttpl xchg insb rex.WRXB pushq add pop lods jmp int sahf mov cmp rex.WB mov mov cmp fsubrs imul jmpq fwait add rolb fwait adc sub cmpsl rcll sbb pop pushq int3 sarb rex.R (bad) cmp rex.WR (bad) jae rex.X (bad) cmp mov adc sbb rex.RB rex.R rex.RX loope fsubs (bad) (bad) xor rex.X cmp setl cmpl sahf fstpt or (bad) lods hlt rex.WXB mov ficom mov cmp xchg mov (bad) (bad) lret je retq sub pop fwait sub mov rex.RXB pushq rex.WR rex.WRX add cltd sahf (bad) mov movslq rex.B and cwtl retq out pop sti (bad) in mov (bad) test rex.WRXB rex.RXB push xor mov rex.RX rex.WB hlt movabs (bad) test adc (bad) out adc addr32 mov lret rex.WR (bad) sub cmp adc add and movslq or push cli jge (bad) (bad) fwait lock repnz rex.RB fisubl hlt fstps sub pop fcomi lret movslq and fistl rex.WRB cmc mov callq mov (bad) fstpt sbb jne mov xor rex.XB fwait cmpsb nop (bad) retq in mov (bad) and pop sbb lock es jrcxz mov insl cmpsl shl fildl lahf outsl (bad) add sbb scas int3 sti fstpt cmp fistpl pop (bad) (bad) jae gs rex.XB rex.WX jg in (bad) pop cmp es xor xchg pushq sar fcomps cs cmp cltd in pop xor ss js imul jg adc (bad) mov push rex.RB xor (bad) (bad) and rex.WRB enterq (bad) cld or movabs movslq retq pop (bad) mov in xchg sub and fsubr loope cmpsl and sbb fwait or lods ja stos push jb shl mov mov lods stos mov xchg int3 adc addr32 retq rex pop adc in jnp cld sbb ficom fisttpl (bad) cmp sub mov retq insl cmp pop push rex.RXB or rex.WRX jno (bad) ficoml in rex.X loope xlat sti xor pop (bad) rex.WX jno mov pop push add psllw cwtl (bad) rex.RX rex.WXB cmp out rorl rex.RX and mov in sub sub push popfq or pop rcll sub push rex.WXB (bad) jb cmpb pushq and sbb (bad) add (bad) idivb xchg rex.RXB lret and jne iret mov jns xchg or sbb out pop vandpd (bad) cmp xchg cwtl or (bad) scas jge (bad) (bad) mov test (bad) (bad) jg jnp xchg (bad) scas addr32 movabs rex.RXB (bad) or repnz xchg pop jmp jbe iret sti scas push pop (bad) or sti rclb (bad) out mov fwait iret fistpll sarb cmpsl ror sbb outsl sbb movsb scas pop adcl mov jrcxz je fisttpll (bad) cld fisubrl mov push mov (bad) pop icebp movsb and in (bad) xchg ss xor clc jle push jl sub rex.X add fcomi rex.W rex.WX (bad) rex.WRXB (bad) rex.WR mov cmp test movabs outsb and fisttpl (bad) pushfq out insb (bad) fsubp cmp mov pop movabs retq leaveq (bad) rex.WR pop or fnsave jo and (bad) sub fcmove leaveq retq pop enterq xchg test fadds (bad) push fidivrl pop ds roll xchg iret clc mov setb imul xchg lods pop and add fwait or insl jb fldt mov lcall movabs es fcmovnbe movabs push add imul (bad) sbb ja leaveq adc cmc (bad) rex.WR retq rex.WB fcomi cmpsl push mov sti mov sbb test jno mov jmp rex.WXB movabs lods push xor jne sub in movabs xor (bad) lea (bad) pop je mov (bad) and add fldt (bad) insl cld retq movsl lea pop rex.W sbb pop (bad) iret push or testb data16 rex.WR rex.XB rcrb es ss mov addr32 idiv fwait jg mov xor movslq cld xchg cmp rex.W mov rex.RX jnp,pt jle xor lea (bad) adc push (bad) (bad) js rex.R decl (bad) int rex.WXB push out or mov (bad) xlat mov (bad) push xchg adc and rex.RB (bad) mov sub mov mov stc add (bad) pop je fcomip or pushq cs in jrcxz adc out fistpl rcrl lock rex.RB ss cmpsb mov jb scas mov cmp fdivrp (bad) (bad) mov fcmovne sahf movsl rex.WR rex.WXB and and imul clc iret pop lods pop jp js icebp jg sub int or mov cmp lods push in (bad) addr32 (bad) test (bad) mov cmp fstpl xchg fistpll pop scas insl sahf or repnz rex.WRX and xchg mov incb (bad) (bad) es rex.WRX (bad) jae cmpsb fildl (bad) clc es cmp out adc scas (bad) fs retq scas movabs mov sarl xchg (bad) (bad) (bad) nop je pop movabs retq mov fdivl rex.X (bad) xor addr32 (bad) fcmovne negl rex.RB cs mov xor es mov (bad) mov jle cmp pop mov xlat lret imul insl push fild cs (bad) retq es (bad) and outsl and rex.RB fistl or stc xchg addr32 int3 sbb cmp sub decb callq mov scas (bad) cmp loopne mov (bad) imul fildl adc ss push rclb pushq rex.X fldt ja cmpsb fstpt sbb pop test rex.RXB (bad) adc mov mov out leaveq rex.RX (bad) or cmpsb loop rex.RXB rex.WXB jmpq (bad) (bad) outsl rcll xchg movslq jle (bad) (bad) sbb addr32 clc cs pop mov out movb movabs jae movslq data16 cmp vpsubsw retq or movslq and (bad) fcoms popfq sbb cmp nop mov and lret mov sbb mov or mulps ds movabs fldt add (bad) retq cmp fcmovnb rex.WXB xor jge mov xchg add scas (bad) fstpt out mov shrl mov jmp pushq data16 or jmpq mov sub jnp xchg jg pop out fwait test movabs enterq adc int cmp adc clc (bad) fcomi mov sbb fstpt jb xor fldcw xchg xchg cwtl add mov scas outsl (bad) movsb xor (bad) mov add movabs icebp or mov push mov ficoml sbb xor mov jge jns add or (bad) pushq jnp (bad) lock jle imul iret push or jns mov adc cltd xchg sbb jns lret pop (bad) adcl (bad) (bad) pop (bad) xor push jmp jo shrb add sub je jnp mov rex.XB or sbb mov and (bad) push jp loopne pop push add cld (bad) rex.RX sbb push cmp push (bad) psubq rex.WB clc mov or xor sarl pop gs xchg repnz sbb push std out jb adc fnstsw mov out xor rex.W (bad) adc in lods fstpt cmc fidivr rolb and fstpt jnp adcl cmp adc xor jg fucomi push rex.RB (bad) adc jmp pop (bad) iret sti (bad) in sbb popq cmp adc (bad) xor pop nop rex.WRXB pop or (bad) jae movabs rex.W xchg pop test lea mov mov lods adc movsl (bad) sbb rex.XB testl jns pop mov movslq push rex.X addr32 fcomi cwtl data16 lahf sub icebp (bad) lods push mov imul jne add jrcxz pop mov in cmp lea repnz mov out (bad) mov (bad) mov rex.WX jle (bad) (bad) (bad) test cs jnp stos retq stos sbb mov int3 pop rcr and orl rex.WRB pop cmpb xor lods or push pop push ss (bad) int3 sbb jnp shr test sti leaveq pop popfq scas fstps iret push (bad) outsb es rex.RB mov mov (bad) enterq adc and jne jb jns mov add scas pop js (bad) fldt gs out pop jrcxz (bad) mov pop lods and callq rex lock sbb mov mov or popfq rex.WRXB (bad) (bad) pop sbb xor std (bad) (bad) fldenv jnp mov fstp sbbl mov jg sub xchg jp fs (bad) mov add mov (bad) callq movabs fisttpl xor fldt cmp (bad) (bad) addr32 xchg rex.WXB adc or pushfq xor mov mov out fcomi subl fldt (bad) jno (bad) and (bad) and retq fistl jp fcmovnbe rex.WXB incl jge movabs push lahf push scas rex.WX (bad) lods mov mov jnp jno fstpt js movabs imul jne (bad) nop pop cmp movsl (bad) insl sarb (bad) mov (bad) frstor lock rex.WR (bad) cmp rex.RB pushq (bad) and leaveq (bad) (bad) xlat frstor stos xchg jg adc push add mov pushq or push repnz outsl (bad) mov sub stos cmp outsl rex.RB sbb ficomp xor (bad) std xor cltd cmp int3 push mov or xchg out (bad) xchg mov lea (bad) mov (bad) (bad) lret pop leaveq rex.WXB cmp sti jp xchg movsb pushq fucom rcl xor fimul out push pop retq adc sub roll out fsubs push sbb or (bad) jnp pop in rex.W (bad) or sub xor rcl out (bad) retq jl (bad) std es (bad) ficom stc adc (bad) pop nop cwtl rex.WXB (bad) or cli push lcall stc out jp adc pushfq lock std loopne mov push jp rol ficom (bad) xchg adc cmp jp sub sub (bad) shrb pop xor mov cmpsl jns (bad) sbb lock jo lods jge pop xchg (bad) mov xchg out jnp fistl (bad) adc sbb pop sbb pop lcall adc or adc fild mov mov fs jo pop rex.WX fistl sbb subl je mov retq cwtl (bad) jbe push pop rex.R jl fwait rcl (bad) repnz pop es jrcxz cmp outsl fstpt lahf insb rex.WRX rex.X fiaddl push jl mov addr32 (bad) (bad) cmp (bad) out sub cli (bad) jg mov mov rex.WR pop rex.B fwait rex.WRB and adc fstpt movabs movabs rex.RX fwait cmp xchg ja repz cmp sbb retq jmp rcrl xchg mov adc out (bad) fs sti movabs (bad) pop iret add fcoml lea sub push out (bad) (bad) (bad) fsubrp jmp rex.B sub imul push add mov fcmovnbe mov imull (bad) movsl mov (bad) lock xchg cmp (bad) out sbb rex.WXB mov rex.WX cmp iret or (bad) ss outsb (bad) jge movabs fildl loop movabs lahf mov push (bad) rex.WRXB rex.X and out movabs mov push mov loop cmpsl mov rex.WR rex sub (bad) js rex.XB (bad) (bad) sub (bad) sub sbb and stc and (bad) (bad) (bad) (bad) or flds es sarb cmp loop push cmp pop sbb jp pop test mov fcmovnu sbb ds mov xor xor iret out insl fwait rex.RXB lahf lods (bad) hlt cmc fnop or test fistpl (bad) jbe cmp in jnp (bad) (bad) cmp push pop (bad) push je fwait (bad) pop int lret stos jne pop clc mov pushfq movsl xchg push lahf fildl (bad) fs pop mov sbb sub (bad) orl (bad) adc pop jle cwtl rcr ja jno mov rex.WB ss cmp mov pop test insb jae pop jno fistpl int3 nop movsb push add cmp sub cmp ja outsl jle enterq add mov (bad) rex jp roll push movsb or jmpq xchg (bad) push lahf outsb fcmovnb stos sub sbb (bad) cmp and pushq and imul or (bad) jne pushq or rex.RX cld movups (bad) sbb cwtl out xchg gs cmp (bad) mov xchg sub (bad) movsl in cld cmc (bad) fcomi cmp adc rorl xchg sbb pop (bad) imul leaveq cmp sbb movsb mov stos add xchg sahf or outsb fiaddl loopne in and push pop mov rex.RXB movabs adc xchg mov sub retq (bad) or imul mov lret sti movabs mov loope loopne xchg in popfq jg cmc pop xor rex.RX xlat rex.WR repz xchg push rex.R mov sub jnp mov push retq clc mov rex.RB pushq ficoml jae movslq js jns scas (bad) jp orl out and pop loopne and sbb (bad) rex.RX xor adc jrcxz enterq xor add cmp (bad) (bad) mov (bad) rex.WB stc push (bad) rex.RB push test stc mov rol (bad) pop add mov test (bad) in repz (bad) mov xchg pop jmpq jae fmul jnp neg (bad) jne xchg xlat (bad) fcmovnu or (bad) mov test movsb fwait cld lock sbb popfq test (bad) mov fnclex mov xchg cs (bad) rex.RX (bad) test fistpl add rex.WX jbe loope adc and imul stc rcrb xchg add cmp decl xor (bad) cmp in jae pushq rex.R mov ja movabs and stos adc mov movabs (bad) push and (bad) mov adc pop cwtl xor int ficom jb jrcxz test jg add (bad) jmpq jnp (bad) out push (bad) pop imul pop rex.WR adc adc xor mov mov mov mov (bad) scas sub pop jmp pop lret mov stos cli xor mov shrl xchg mov pop (bad) lret add loop fs fldt (bad) mov mov lods shrb movsb xlat imull rex.RX movabs jne or rex.XB xchg retq sbb fstpt sbb (bad) (bad) lods ds std rex.WRX sbb stos cmp pop int3 rex.WB lea (bad) (bad) (bad) sarl cmp sbb xchg sub mov xor jl sub sti jo jno pop int (bad) ficom (bad) jno cmp lods pop cmp jrcxz (bad) rex.XB (bad) xlat (bad) push pop jae xchg fucomi out rex.RXB add push cmp test and jns rex.WR jnp (bad) (bad) fildl scas adc adcl xchg je in adc (bad) or (bad) imul pop cmp add (bad) adc out (bad) mov lret (bad) sbb cltd gs (bad) retq add adc mov jl mov pop rex.WXB sti int3 lahf rolb xorl sbb push push fwait (bad) insl fwait test jg movsl (bad) imul sub rorb iret and (bad) rex.WB (bad) fildl and fisub repz pop scas adc mov sub (bad) add sbb ds fildl vcmppd adcb jg fild (bad) cmp cs fistl pop push lods (bad) (bad) jbe mov movslq (bad) lahf sbb sub fnop push rex.WX stos rex out (bad) flds or push (bad) push jl rex.WX xor jnp in fisubl mov and addr32 faddl fisttp jl ss (bad) pop mov rex.WB push jne sub rex.R pop rex.WXB fisttpl lret pop fnstsw mov loope fstpt (bad) frstor jge (bad) outsb rex.B out fbstp and pop (bad) int3 mov pushfq and pop in sbb add lock lods fcmovne adc sbb sbb js jmpq fistl or faddl push push gs imul xor (bad) fisttpl lahf (bad) jns fist add cmp retq rex.WRXB (bad) adc mov (bad) pop fistl fld jnp not cmpl rex.RXB orl cli test mov (bad) (bad) icebp mov cmp xchg incb cmpl cmpsl push rex.WRXB pop je cli iret (bad) imul mov ficomp push mov jb enterq xchg pop loope cmp imul cmpl mov mov notb fisttpl add movabs frstor cmp and and (bad) (bad) and (bad) cmp scas mov rex.WB fldt rex.RX sbb fsubrs sub (bad) outsb xor lret jg rex.WRB mov adc cmp fistpl xchg imul gs adc xor xchg pushfq pop xchg (bad) jb out add jbe movsl pop sbb insl (bad) pushq out pop leaveq sbb cli cmpsb sbb sub in push outsl xchg sbb rex.WXB popfq push rex.WRB (bad) (bad) mov (bad) jmpq cmpsb push fistpl jne pop fldenv nop fisttpl cwtl test or cmp (bad) (bad) movabs fimull int sub iret enterq (bad) sarb rex.RXB fisttp pop add pop lret fidivrl fisttpl xchg imul (bad) mov lahf (bad) cmp sbb popfq and xchg add pop mov mov iret mov xchg and sub cmpsl mov pop loopne mov xchg (bad) stos rol (bad) mov adc data16 add or fsubs xchg ja (bad) iret jmp cli fildl jnp cmp subb nop jae push lahf addr32 cmp test ror or fstpt stos (bad) cmp imul mov push fstps (bad) cltd (bad) cmp pop out (bad) or movsl loope sub iret mov leaveq pop fcoml pushfq rex.WR sbb test insl rcr adc sahf mov fnstenv or out notb movslq sbb xchg leaveq gs xchg stos or adc (bad) push fsubs cltd mov or push (bad) adc sbb cmp push pop cld jno rex.W jp scas add fldcw pushfq sarb insb sub pop pop jo rex.XB rex.R sbb cwtl pop xor pushfq pop punpckhbw adc mov jnp xchg or movabs pop jg movabs sbb movsb and (bad) (bad) (bad) hlt rorl jl rex.RXB in sar negb xchg movslq rex cmp adc cmpsb jle iret std (bad) lret mov pushq rcr xor (bad) (bad) ss mov pop fdivl mov (bad) cmp nop hlt mov test jrcxz (bad) xchg lret fcmovu pop (bad) rex jl cli (bad) in add mov mov pop jle sbb fnstenv mov jnp mov cmc mov mov mov out push pop cs add (bad) mov test lret (bad) in cmc jnp pop cmpsl (bad) sub jne lock rex.R push sub jae xchg xlat out xor xchg imul je out cmp mov insb movabs pop out callq fs lock cld rex.WX (bad) push push fnstcw xchg js roll fwait cmp (bad) mov fildl cltd out addr32 sbb lods xchg mov cmp popfq nop mov xor leaveq movslq (bad) rex.WRXB cmpsl (bad) jle jl rex.WRX pop in shll int (bad) bnd adc jg movabs movabs pop sbb (bad) jno imul pop jl rex.WX add mov lods cmp mov stc add pop jp (bad) retq jae data16 pop not (bad) jns jnp rex.RB shrb scas in jae out (bad) mov pop xor jno adc cwtl pop fisubl jns jae (bad) push pop iret mov pushfq rex.RB or mov cmp xchg cld pop fcmovnbe stc sbb sbbb lods ja jle or push (bad) adc gs scas pop iret (bad) mov and fs cltd and rex.WRX mov xor xchg fwait cmp (bad) movsb loop lahf xchg (bad) in sbb or push rex.WX rex.XB fistp cmp sbbl sahf js and (bad) jmpw imul in fstl sbb int3 movabs jne or push pop xor (bad) jo scas jns,pn cmp std (bad) rex.R cmp sub jae xchg lods sbb sahf outsl (bad) (bad) fstpt mov (bad) xchg xor mov (bad) (bad) sbb orb add icebp fwait jmp add pop movsl pop push in ss pop mov (bad) retq loop or (bad) pop mov fs imul movabs rex.WXB or cltd nop (bad) pop out (bad) cmp sub clc xlat movabs fldt pushfq jb stc (bad) jne xor (bad) loope pop out rex.RX ss movntps lock mov mov stc xor jbe push iret data16 adc outsb fstp (bad) xchg (bad) xchg scas test xor mov push sub icebp (bad) pop ja mov xchg (bad) fldt repz push js imul es xor adc test cmp (bad) cmp sub mov (bad) shr xor repnz fnclex iret in mov xor rex.WRB rex.W int3 repz pop sub rcr int3 mov cmpsb mov cmp xchg loope (bad) insb add pop rex.WB fistpl sar mov stc sub (bad) pop push rcr movslq xchg (bad) jmpq out jle pop (bad) mov ror fldl (bad) rex xor leaveq movsl rex.WRB push mov fidivl data16 retq cmp es es jmp push push test retq xchg cmp in popfq xchg (bad) (bad) repnz xchg xchg fildl mov mov cmp (bad) rex.WRXB js mov (bad) jne lods loope xor fistl ficoml loopne jg mov jnp mov add cmp push imul rex.RB fstpt jle mov icebp (bad) pop pop jrcxz sbbl or stc rex ficoml ds adc retq xchg ds andb jne (bad) addr32 nop sbbl fstpt test pushfq mov (bad) mov pop sti adc leaveq xchg (bad) mov jnp sbb test push (bad) out test (bad) imul cli sub rex.X mov clc pop retq int3 fninit leaveq sub in int rex.WXB imul testl loope cs (bad) stos adc fldt ss pushfq pop pand outsl (bad) loop retq stos push fisttpl popq fildl cs xchg movsb mov iret cmpsl rex.WR fwait sub fldt mov movslq cmp push out in (bad) fldt xor out adc rex.WX and leaveq fdivrl adc insb rcr roll jmp sub push lahf int pop sub cmpsb jb add pop xchg pop or mov xor rorl es popfq outsb fisttpl (bad) pop rex.B and rorl rex.B fwait imul rorb clc stos fisttpl pushfq insl (bad) rex.RX (bad) (bad) sub sbb jno pop lods (bad) lods mov mov pushq cmp sbb addr32 fldt out rex.WRX rex.X ja mov mov seto testl (bad) hlt pop sti pushfq orl fsubrs shr pushq fldt popfq imul je pop add mov rex.WX flds pushq rex.RX (bad) jp data16 repz movabs cli stos test out sbb test loopne jbe jmpq xor jle ja lret mov pop data16 cmp mov ja pop mov (bad) stos and rex.WR fwait (bad) jno cmp clc xor adc repnz xor rex.RX movabs pop xchg in (bad) pop or fs cmpl and or add or insl mov rex.WXB (bad) add fstpt movslq jb jbe in adc or mov pop sarb pop xchg lea jnp bnd addb testb and js sahf (bad) mov sti pop adc sub retq rex.WXB (bad) or (bad) mov sbb fcmovnbe test rex.WRB adc xor in stos cmp fucomi xchg sbb (bad) push nop enterq retq mov (bad) lock rex.RB (bad) add cmpsl mov (bad) rex.X xchg (bad) adc (bad) mov jg mov push sbb (bad) shrb pop adc pop pop cmc iret sub scas jnp (bad) (bad) roll add fucom pushq fldt (bad) in fidiv jnp (bad) cmp rclb sub mov lods jbe pop xchg retq (bad) rex.R movabs pop mov sub iret (bad) (bad) data16 movabs mov adc fisttpl rex.RXB pushfq push repz add cmp or rex.WRXB out adcl clc jmp test mov (bad) push xlat mov cltd mov lock xor pop adc xor rolb xchg ds fwait cmc mov out mov xor mov mov jg mov int loope hlt fstl mov xor cmp mov xchg push imul (bad) mov cltd out mov and cmp jae flds add in rex.RB rex fbld add movslq pop in or sub ja sbb pop cmp outsb (bad) sbb mov cmc lret sbb mov pushfq and add xchg cwtl rclb fldt (bad) jbe retq (bad) pop mov scas rex.RX rex.X scas fildl mov test pop or mov rex.RX mov (bad) adc xchg fs pop cmc (bad) fcomps mov xchg mov (bad) int3 mov xor mov (bad) fwait rex.X sbb adc rex.WX rex.WR push cltd mov je (bad) xor mov stos xlat stos ror xor ss add lock stos rex.WR fstpt movslq (bad) xlat stos xor je xor movsb pop fwait cmp cwtl (bad) int3 adc fiaddl pushq jmp mov ja adc xchg dec jnp sub sub fstpl sub mov sub adc sub (bad) fildl lret lea pop and outsl (bad) jne pop mov pop rex.XB pand insl rex.RX and (bad) add ds jle imulb fstpt jne iret fldt or or lods rex.WR in cmp pop xor js outsb mov push in pop test rex.WRX fs rex.XB hlt mov fwait rcr mov stos out push fadds mov sahf iret and movabs pop (bad) adc fisttpl jl xchg fildl in pushfq push jns repnz mov pop in xor adc mov mov rex.RXB sbb insl add (bad) mov clc sti xor (bad) xchg adc fwait rex.XB callq fmul ds (bad) (bad) cmp sbb pop xor fisubrl movabs rex.W (bad) push (bad) xor push stos fs mov cvtdq2ps (bad) (bad) cmc mov (bad) imul rcr mov pushq ds xor enterq stos ror xor cmp (bad) mov cmp sub push (bad) loop rex xor lods imul sbb (bad) je (bad) js pop sbb cmpsl cs pop xlat andl sbb pop pop shlb (bad) jns mov stc repnz movsl push ffreep fimull adc (bad) xchg (bad) lea (bad) rex.WR fcom leaveq fimull jne xor mov in (bad) jle pushq enterq movabs movabs movabs fisubl cmp mov mov mov movabs push mov xchg popfq jno fldt push (bad) jrcxz pop jbe jg sbb and jmpq or or outsb push (bad) adcb rclb (bad) fcmovu add rex.W rex.X out sbb iret push shr mov mov int3 push data16 push sub fisttpl lods and out sbb xchg jb fistpl mov outsl and xor test rex.WB int3 jns sbb mov rex.XB rex.RXB rex.WR (bad) rex.WRB push and add xchg in rex.XB mov movabs mov std jns (bad) (bad) jo xchg fwait movslq fs (bad) cvtdq2ps (bad) imul xchg popq rex.WB add (bad) mov xchg fistp (bad) mov cmp sub sarb mov mov cmp push pop (bad) mov fisubrl mov (bad) xchg in push rex.WXB mov outsl stos xor fwait xor xchg repnz data16 mov xor or cltd fisub mov adc addr32 xchg notl pop jle (bad) mov icebp rex.XB mov loopne sahf mov enterq mov mov in push fs idivl std hlt jg pushq insb pop loope cmc ja jrcxz adcb lods cli fs (bad) ja or (bad) adcl rex.R pop hlt cmp mov loop fwait mov mov fs xor or sbb jrcxz insb xor idivb fs rex.WB js cli adc hlt jp (bad) addr32 cmp rex.X rex.RXB orl (bad) (bad) xor and push testl cltd (bad) rex.RB (bad) fcmovnb test rex.WRX and cmp (bad) lock push pushq hlt (bad) (bad) retq out jb pop stos rex.W es jo (bad) adc or cmc xor or fwait cmpsl negb in (bad) rex jnp (bad) xor fistpl fwait shrl movabs rex.B fldt fbstp mov in movabs rclb cmpsb xchg add cmp (bad) (bad) and repnz xor (bad) mov pop sub movabs (bad) ss (bad) (bad) fwait xchg adc outsl mov (bad) addr32 (bad) (bad) and movsl clc stos xor sahf pop pop sbb (bad) (bad) mov callq outsl rex.WX fninit cmp repz pushq push movsl pop in fs enterq stos rex.WX and imull mov repz jb in fwait (bad) (bad) jne jmp and enterq (bad) and loopne in fstps push sbb fcompl mov in and icebp jmpq xchg movabs negl (bad) add mov jnp rex.X fstpl movsb iret jno rex.RB mov (bad) fcomps rex.WRX mov data16 out lret (bad) rex.X rex.RX xor rcl jb cmp adc push enterq nop repnz add mov mov (bad) jmp movabs rex.W movabs rex.WX xlat (bad) and rex.WR stc and mov (bad) test or (bad) out cwtl test mov sbb mov adc cld jo enterq es cmpsb fisub sbb mov addb (bad) sub sub jp pushq xor (bad) lods push xchg push outsl xor mov leaveq mov xchg lret and fimull push (bad) (bad) sbb imul in jle jl (bad) mov xlat and pop cmp rorb cmp cltd fwait rex.B test fdivrs insl imul fwait add sahf rex.RXB (bad) movabs shrl test push (bad) sub (bad) movabs lcall push adc xlat stc mov loope (bad) xor test (bad) push (bad) push sbb imul lods int stos retq mov cmpsb insb fisttpll movslq jg jno sbb xor test (bad) mov adc ja fwait sar callq test cmc jno sub jbe rex.RB divb mov jrcxz adc iret rorl mov int stc (bad) addr32 (bad) mov test (bad) push jns jno pushq jae sbb xchg add decb (bad) pop cltd je lods fs mov stos (bad) sub movslq and (bad) mov addb movslq sbb jnp faddl mov mov rex.R rcrb in (bad) or lock jp jns (bad) fldenv xchg mov xchg (bad) imul rex.WRX or jmp sub pop sub fs (bad) mov xor (bad) push subb xlat fs (bad) push (bad) push mov jo push in rex.WRXB (bad) rex.XB push rclb outsl lret and jae sbb sbb sete (bad) mov jnp xchg pop lock fcmovnbe nop push jb sbb movabs imull xchg mov (bad) negb jmpq iret cmp add pop push xchg pop mov (bad) cmpsb loope scas push jbe pop push xor icebp cmp sub add jae lret jrcxz lret (bad) (bad) or rex rex.WRXB test std lret enterq outsb or (bad) jp ja adc rcrb or mov jno sbb shl (bad) insb fistp in test (bad) and rex fimull pushfq cmp rex.WR cmp adc jmp (bad) shr pop cmp xor ljmp (bad) lret jne out (bad) fcmovu in stos adc int xor jp xor mov shrl (bad) mov (bad) mov or in rex.RXB pop xchg (bad) sarl hlt jo sub cmp pop cltd (bad) rex.WRXB mov (bad) jmpq and xchg data16 cmp fstps xor nop sti sahf (bad) mov pushq es push ds push rex.R and mov jmp out jrcxz pop mov mov out movsl sahf pop (bad) push pop fimul (bad) push (bad) cmp jg test neg and movsb (bad) iret and loopne adc mov xchg sub retq pop pop movabs mov sub sbb push cmp (bad) fisttpl adc (bad) divb push and jp pop out and rex.WX cs sbb adc mov add xchg sub pop xlat xchg rex.RB bswap mov fildl xor (bad) adc cmp mov (bad) in loope or rorl sbb std add movabs (bad) (bad) (bad) fnstcw mov (bad) xchg (bad) pop je or (bad) or pop movb mov repnz (bad) imul xlat gs clc mov jns mov repnz repnz (bad) rex.W mov mov (bad) rex.RB rex.WB jmp insl sub cmpsl addr32 (bad) imul or (bad) pavgb loopne leaveq repz pushq shll (bad) sub cmp cwtl cli mov or rolb cmp mov jae fsubr jl sub cmpsb (bad) sbb mov mov adcb pop xchg (bad) sub (bad) sbb xchg out push jmpq pop xor add or sub add xchg out retq (bad) (bad) hlt out add xchg pop and movsb loope xchg cmp mov sbb test push repz rex.X cltd rex.WRB or movsl xor lea (bad) stos xor retq and cmc and jo push stc retq mov pop sbb jb (bad) adc or (bad) rorb nop xlat sar gs cs cmpl sbb (bad) sbb movabs and add fnstenv fnstsw jbe jb je out cmc (bad) mov xchg (bad) and pushq sar pop xchg outsb (bad) lods icebp (bad) mov in shrl sbb xchg xchg pop cli shll fldl jb (bad) rex.WR addl and mov addl jmpq xor (bad) (bad) and xchg (bad) (bad) repnz or cs insb rex.X (bad) stc cmp leaveq loopne pop cmpsb add mov mov cmpb movabs rcrb mov callq cltd nop jbe sti fwait push rex.WRX movabs xor jrcxz push sbb je lahf test mov imul cmp pop rex.R pop test sub leaveq imul rex.WB cmp negb rorl (bad) xchg cmp (bad) xor or xchg mov gs xchg out (bad) jle rex.W and fsubrp (bad) (bad) sub mov add (bad) mov faddl cltd rex.WB js adcb gs xchg mov cltd xlat (bad) (bad) mov (bad) jnp (bad) (bad) mov xchg or cwtl idivb jae,pn (bad) jnp cmp (bad) (bad) jmp movabs movsb rex.WXB enterq mov push (bad) sbb push jg mov lahf add push repnz fwait sub (bad) repz out cs popfq xchg mov xchg or sub movabs push adc rex.WB cs test movabs clc fucomi rcrl pop addps data16 mov lahf mov cmpsl jns sub (bad) cwtl cmp add pushq retq scas pop xchg jg (bad) mov cmp js lahf (bad) xlat push or out sbb xchg addr32 mov loopne mov pop subl xchg rex.XB int cwtl mov mov push fistl jbe pushq sbb rex.WRX mov add (bad) push (bad) pop sbb movabs sbb jb (bad) clc orps sbb xchg jne xchg (bad) rex.WRX fdivrs stc (bad) fwait (bad) push xor mov insb jno mov add (bad) mov sbb rex.XB pop rex.WB mov fisubrl lods or (bad) (bad) cmp sub lret (bad) jp mov js pushfq stos rex.XB pop movabs (bad) fldt (bad) lods cmpsl adc jno fstpt adc xchg mov leaveq push or (bad) (bad) rex.RX ss mov mov rex.XB (bad) mov in push (bad) cmp push pop ja or sbb int3 fwait (bad) mov insb add and xchg jl loop pop movabs and push imul jl and (bad) mov cld (bad) fcoms fcmovu icebp mov rex mulb fimull pushq sbb add movsl and nop jrcxz (bad) jo mov mov cmp add (bad) adc data16 test (bad) test lret or rex.W pop imul pop fsubl mov rex.R add clc (bad) iret xchg mov lret fldlg2 jg xor mov out or jmp rex.R mov sub fldenv punpckhwd sbb push cmp xchg (bad) fcomps xchg shr push loop xor add add rex.RXB push (bad) (bad) (bad) pop fsts cld iret in push (bad) (bad) repz push retq or (bad) mov xchg gs push (bad) xor rorl ror iret or xchg int adc mov pop and popfq jrcxz lret mov rex.XB or retq (bad) or add addr32 insl mov loopne fwait adcl out jmp pop rex.R rcl fisttp mov fmuls lea (bad) mov in adc jne fldcw jge imul sti (bad) out pushfq pop jmp mov mov or jge (bad) in push pop ficompl sub ljmp sub (bad) (bad) cmp cmp lea mov jmp fs mov es (bad) (bad) jnp scas fdivr sbb rcrb out lock (bad) pop xchg loopne and fisttp pop in adc xlat rex.WB pop movabs (bad) popfq (bad) sub (bad) jrcxz rex.WRXB sbb in mov jno scas lahf xchg stc push jmpq loope pop mov (bad) lods leaveq movabs jge sub in addr32 jns cmp repnz out xlat push sti and pop rex.WR rex.WX sub gs xlat push push jns popfq in movabs cmp mov and lods loope add pop (bad) movabs imul cmp xchg mov fnop sbb mov (bad) jmp (bad) flds add int3 xlat (bad) (bad) loop (bad) xlat adc mov scas es and push or adc pop add add cli mov or jnp rex.WRB jge (bad) loope jnp insl rex.WRX sarl xchg lods rex.X (bad) sbb and lret cmp out fnsave (bad) rex.WXB xchg movsl pop ss sbb rex.WX repz xchg sbbl cmpsb fistl sub int3 in fwait retq jmpq fstpt sbb mov imul test xor mov movsl rex.WRXB rex.WRX pop add rex.WR imul (bad) sbb movsb popq fldt sbb pop xlat (bad) loope cmp movabs sti (bad) insb (bad) cs (bad) adc in (bad) push jns lret and test or fildl insb xchg rex.R out rcr (bad) ss rcr push (bad) fwait cli adc stos (bad) jg and xor cltd jle fisubl shrb push mov sub jno fistl add mov insl jle mov fbstp loope push stc popfq pushq pop xor out jg pushq jnp (bad) adc loope fisttpl (bad) add ja or repnz jnp,pn or fmuls pop (bad) xchg cltd lahf iret je jle jns out add adc push jo (bad) stc insl loope lret rol sub pop out or (bad) xor rcll pop leaveq fs (bad) insb rex.WB mov movl mov shll icebp xor add pop sub leaveq enterq xor insl push xor xchg jne fs rolb (bad) xor sahf fistpl cmp mov sbb mov and out rex.RX (bad) cs and test fcomp sti cmp insl jae mov rex.WRB mov xlat and popq lods cmp mov adc (bad) pop pop lods cmpsb insb imul rex.WB repz rcrb pushq mov imul mov pop adc loop (bad) rex.WRX icebp movabs and jge sub cmpsb stc scas add push lods push mov xlat push (bad) mov push pushfq pop out es xor (bad) fs push jmp push fwait insb sub mov js pop pause mov rclb and enterq mov jo mov pop sub mov xchg rex.WB clc cmp jae in mov fldenv rex.RX add movabs outsl (bad) jno movabs xor fs test mov add xor xchg fcmovnu or std pcmpgtb cmp out push and xor test jno jnp popfq insl mov out fldt (bad) callq mov fistl pop subl pop rex.WB lock fwait cmp je repnz (bad) movsl lods pop cli rex.RXB int3 (bad) rex.WRB mov xchg out popfq mov pop gs in imul adc stos xchg mov xor and and sub mov test rex.X (bad) xchg pop roll cs icebp rorb cmp fistl adc rex.X test testl adc xchg cltd lea outsl rex.WRXB mov sub (bad) rex.W (bad) add push cmp pop movabs pop rex.WRXB int rex.RB out jg test lret sarl adc data16 add sahf sub retq pop test cmpsl loop (bad) in jrcxz (bad) sbb mov xchg ds rex xor pop xchg (bad) fldt xor mov jo movabs leaveq and retq pop xchg xchg push pop callq cmpsb fcmovnbe mov stc (bad) mov (bad) mov sti movabs sub lret (bad) cmpsl sub (bad) pushq data16 (bad) icebp mov shlb out pop js (bad) rex.WRX rex (bad) repz fcmovnu lock in imul push rex.B (bad) insb xchg fildl fnstcw (bad) mov rex.R xor fs mov cld out mov (bad) lea data16 push loopne adc jge jp frstor outsb test stos mov (bad) rex.XB gs lahf and pop jno mov push (bad) rex.WRB xchg jg movslq add movsl mov mov stos mov test adc leaveq add mov sub rex.WR int out pop (bad) hlt lods rex.R mov mov cmpsl add rex.WXB adc or sbb mov int3 enterq fwait rex (bad) insl push rex.RXB rex.WXB lods iret fistpl stos repnz push mov (bad) fcomi mov jns rex movsb (bad) cmp sbb out test pop fldenv mov add fiaddl ficoml mov jg cltd xor fstpt xor leaveq fucomi callq std in (bad) or rex.XB jae pop lods test pop add stos shlb mov (bad) fstpt (bad) (bad) js or mov jp (bad) out fwait js pop pop sub rex.WX adc rex.XB sbb (bad) add mov jns rex.RX lahf pop rcrb ficompl (bad) (bad) mov cmp sub xchg movabs jle adc retq cmpl ja in jl xor clc (bad) iret cli fldt (bad) shrl (bad) insl fcompl rex.WRX (bad) retq movabs (bad) xor sbb icebp xchg imulb loope add or cwtl add fcmovu add rex.WR adc je icebp lret adc or xchg cmp push push ja add xchg loop fwait (bad) lret rex.RXB (bad) in xor jrcxz cmpsl (bad) mov imul (bad) decl lahf leaveq int3 (bad) and mov movsb or add mov jmpq rex.WXB (bad) xchg in cli jmpq loope movabs (bad) repnz cmp push lret sub (bad) xorl (bad) (bad) mov push rex.R popfq (bad) rex.WR cmp push or fisttp jmpq pop mov movslq add fwait (bad) outsb xlat mov ficompl movabs outsb int3 (bad) xchg enterq rex.WRX rex.WR fwait (bad) mov push fistpl mov xchg add pushq sub sub (bad) mov sub jno or je pop push mov sub fcmovnb retq scas xlat fs (bad) ss lods rex.WRXB fwait xor fldt stos ss in (bad) hlt mov stc cltd pop addr32 pop pushfw rex.WRX fwait jbe movabs xor pop cmp gs and sbbl shll neg cmpl jns add leaveq (bad) movabs rex.X rex.RB jge sbb xorl mov fistl jmpq jge sahf (bad) imul cwtl repnz rcr ja imul (bad) xlat cmp rex.X fdivs rex.WRXB and lea pop cli fs (bad) orl (bad) mov (bad) ss rex.R push jnp jbe int fdivrl cmpsb sbb pop rex.WRXB or movabs adc pushq jnp repnz fldt rorb jg notl (bad) xchg or leaveq jns pop cmpl lods xchg cmp cwtl (bad) mov subl fstp (bad) jae lret pop out icebp xchg (bad) fldt (bad) lods jmpq neg xchg js fs rex.X pop gs xchg (bad) loop retq sub and mov movsb cwtl std fstpt loop insb add stos mov or test cmp fwait cmp sbb pushfq rex.X mov jrcxz fcomi add pop (bad) and rex.WXB rex.X xchg cmp xlat rex addr32 jno xor icebp mov sub (bad) rcrb fstps rcll cmc push xor mov (bad) (bad) add je (bad) cld (bad) fwait xchg xchg clc fnstsw out jle jne cmp mov pop cli push rcl push ds mov (bad) rex.RX lock cltd clc (bad) pop adc js pop xor jp fdivs sub jnp rex.RB fwait callq movabs mov or mov adc push ja int and sbb xchg rcll movslq pop xchg pop pop movabs cmp sub data16 (bad) hlt movslq jno sbbl pop loop jae cltd xchg and subl leaveq (bad) or pop (bad) cmc fwait addr32 fisttpl cmp (bad) xor mov add lods scas mov imul negb jrcxz rex.WXB push add fistpl (bad) js (bad) nop (bad) std xchg orl xor mov loop repnz jl fnsetpm(287 sbb (bad) fisubr (bad) mov xchg and clc sub stos rex.WXB int fcmovnbe (bad) pop mov ficoml (bad) jnp (bad) out test scas xchg rex.RB rex.WX pop (bad) sub cmpsb pop (bad) shll or jnp rex.W and mov std push cmpsl movabs fstpl pop nop rex.W popfq lret xchg pop xor cmp pushq xchg cld and fistpll rex.WR sti cmp mov rorl pushq xor jle rex.W insl jmpq out mov movabs (bad) cmp fucomi push jp or rex.WRXB lock out fdecstp scas in cld push jo outsl fwait cmp sbbl and movabs rex.X xchg sti mov addb fldt rex.RX push push xchg cltd rex.WX subl sbb shlb (bad) fistl scas adc iret and retq sti subl xchg jno stos mov jp fsub (bad) rex.R std fistl xor or mov rex.WR sarb clc xor pop (bad) movsl loopne xor xchg cmp leaveq addr32 fadds and (bad) jmp (bad) callq repz add (bad) rex.R fwait test int mov mov test ss sub repz in stos cmpl fldt pop ds and push pop adc add (bad) fsubs cmp fildl mov rex.RXB (bad) pop lahf cmp lret push jae xchg jns mov (bad) rex.WR fwait sub xchg mov ror add sub push pop movabs int3 stos fisttpl ds push jo fildl rex.WXB xchg stos outsl add mov fcmovne lret rex.XB lahf mov xchg nop adcl sub mov (bad) scas sub jo pop rorb jae movsb sub fcmovnbe pop (bad) mov xchg jb loopne out (bad) stos (bad) rex.WXB rex.B repz fwait sub jl xlat (bad) mov push pushfq rex.XB pop fwait rex.RXB jrcxz rex.RXB lods cld rex.WB fwait repnz mull in hlt add xchg iret sahf push rex.WB mov loope in out (bad) fcmovnu jp (bad) cmpsl or sbb pop (bad) loopne sbb jns orl mov icebp fistpl pushq movsl cmp popfq rol (bad) ds (bad) cmp xchg callq rex.RB cs sbb movsb nop fisubrl rex.RX icebp cmp and clc sbb test int3 and fstpt sub js push adc (bad) cmc mov add retq sub pop int loop iret xchg push cli push cltd jnp int3 sbbl fdivs (bad) push mov fadds cld fisttpl lret jle fstps movsb lret test sbb sub mov mov xchg insb (bad) mov pop adc popfq xor push sbb loopne (bad) frstpm(287 and test ja mov js sti cld movabs int3 xor fwait cltd xor leaveq pushq out out (bad) fistpl lea fistl add or adc cmp rex.RXB nop in (bad) fstpt leaveq cmp (bad) fadds sub retq sub cli scas fcmovnb es push sti stos fcmovnu rcl mov leaveq add (bad) xchg sub loope rex.WR adc add leaveq push and and mov test fistpl pop (bad) gs pop (bad) adc jl fwait pushq addr32 (bad) outsb (bad) popfq int3 (bad) movb mov pop fsubrs fiadd jnp rex.WRX rex.R retq lret push sub mov rcrb or jbe jge ds rex.B sbb lret (bad) cmpl fnstcw mov mov ss fdivs pushq pushq fwait jle xchg (bad) neg test in cmc add (bad) jns outsb sbbb or (bad) and js pop es out negb sub xchg movslq mov fldt xor or pop pop add cmp lods in mov lcall sub movslq sbb stos and lahf mov jrcxz mov mov (bad) fsubrs scas repnz cmp divl jle gs lods xchg imul cld xchg cmp repz add jle rex or mov xlat (bad) out stos (bad) (bad) fnsave cmc rex.X xor jmp rex.RX jbe and add mov (bad) and lahf out pop gs fucomi incl sbb sarl (bad) (bad) pushq xor callq ficom fmuls test (bad) movabs pop popfq mov mov mov callq (bad) cmc test and cmp add in jle (bad) add fcmovne rex.XB pop mov pop fucomi cmpsl rex.WB rex.WXB lret xchg mov (bad) push xchg mov xor push lea jo js fisub (bad) callq rex.WRX ss mov rex.X insb or rex.W rex.WXB add xor int lret rex.XB addr32 (bad) test mov pop out sbb and movabs pop (bad) fcmovnu mov sbb enterq xlat (bad) out (bad) cmpsl icebp mov sahf leaveq (bad) rcl lret mov pushfq push (bad) gs lret (bad) push hlt jae pop mov mov adc sbb mov xchg cmp cwtl rcl (bad) fstpt hlt (bad) imul (bad) (bad) sbb (bad) (bad) insb (bad) fldl or pop and fwait rex.RXB rex.RX push pop test in xchg (bad) loopne mov xchg pop pop fistl in retq jrcxz pop mov (bad) fildl jb movabs movsl mov ss data16 fcomps clc fdivl fcmovnbe sub (bad) pop test (bad) mov pushq (bad) sub or rex.X (bad) jl movsb cmp adc jge rex.RB pop (bad) and (bad) or lret push fadds add loopne clc mov cmp stc xchg cmp rex.WB lods movabs test xchg out xor jnp mov lret stos lret in jg vcvtpd2psy push (bad) movabs rex.B pop (bad) fwait adc jg jg adc cli in fild neg xor fildl lea cmp outsl pop movsw push adc movslq int3 push pop fisttpl or adc add out jnp or (bad) xchg xor rex.RB pop loope cmp jb out icebp pushq cld retq int (bad) jae mov fildl fidiv cmpsb movl xchg rex.RXB mov repz sarl rex.WX out in jns enterq sbb out or mov shrb xchg fild adc mov (bad) cmpsl addr32 mov cmp adc es int rcrl int fcomp cmpsl pushfq std je push cwtl lods and mov mul rex.RB push mov push (bad) ficomp or pushq movabs (bad) out adc sub pop mov adc fidiv rorb out movsb stos fs testl (bad) mov cmc jno push (bad) outsb and (bad) jp (bad) pop sbb pushfq rex.XB push jo out mov sarl jns test gs rex.WRXB rex.X ss cltd (bad) pop cltd jle fcmovu gs xchg jo jle sarl movsl mov imul (bad) (bad) adc out jle cmp (bad) es push adc retq pop jae rorb out nop (bad) pop rex.WRX faddl jns adc leaveq leaveq adc xchg pop out fmull jbe jb (bad) xor mov jle rex.XB pop (bad) loopne xchg sub rex.XB rex.RXB sarb jo xchg (bad) sbb data16 stc and (bad) mov sub cltd fidivrl rcll sti scas (bad) and push add cwtl rex.WR mov sbb rcll xor stos adc fidivr xchg icebp fild cli xor lret sub repnz (bad) add add loope jrcxz xor fcompp (bad) and push (bad) rex.WR pop popfq xchg fistpll pushq rorl stos (bad) jns adc (bad) xchg lret xchg (bad) and (bad) mov mov pop adc shll loop and lods vpmullw xchg xor xor outsl mov pop scas mov (bad) sbb sti loop in cli (bad) mov mov (bad) jno and int3 rex.WRXB pop sub icebp pop fucomi frstor sarb pushq cmp fisttpl sub cmp xor (bad) cmp xchg pop mov and out sbb mov sub push pop retq js movabs mov fisttpl mov insb retq (bad) cmp cmp jge shlb push (bad) (bad) (bad) cmp mov push and cltd cmp (bad) (bad) in mov mov fistpl adc (bad) rex rex.RXB stos pop scas mov cld in imul loopne (bad) lahf push rex.WX pop fs push mov rex.WRX cmp addr32 nop pop sbb (bad) jbe fsubp and jl outsl mov mov sbb fsubs jne jae push movsl fistpl cmp pop rex.WRB rex.XB (bad) (bad) xor fimul imul mov sbb insl add scas xchg in rex.RXB mov and sbb sbb add pop jno cmc adc lea or fiaddl sbb scas out rex.X xchg cmp sub jle repz ja movsb xlat movabs jl (bad) in (bad) cltd mov imul lcall fnop (bad) pop adc mov enterq xchg add loop (bad) (bad) ds rex.W ss rex.WRB lea (bad) stos pushq pop fistpl sub movsl mov sbb xor or and popfq xor lret cmp sub cmc (bad) jp movabs mov pop adc scas movsl jp loopne rex.WRB movabs (bad) xor imul sub jo pop pop scas fisubr (bad) pop mov cli jrcxz mov fldt insb and pop (bad) fidivr xchg pop and pushq leaveq subb fcmovnbe ds sbb sarl stc and lea xchg rex addr32 xchg add mov pushfq callq mov jnp jmpq jne push rex.RX xchg jle sbb retq outsb test in push fistpl fidivl (bad) rex.WR lods or xchg mov in mov (bad) in movabs rex.RXB fidivrl mov push cltd stos rex.RXB sbb (bad) or mov push insl in fisttpl (bad) (bad) stos pop (bad) push insb push idiv pop push mov ds rex.WX fldt cwtl mul (bad) and fistl lret stos mov rex.WXB adc xchg cmp xor repnz movabs cmp mov mov orl push pop pushq sbb rex.X jnp (bad) or insl mov sbb add outsb cli fistl (bad) jo push imulb (bad) iret (bad) rex.W rex.XB mov mov mov xor popfq mov add sahf cmp cwtl pop lods stc mov out jg mov rex.XB hlt (bad) xchg cltd sbb nop (bad) out (bad) out and xchg rcll jnp mov (bad) jrcxz mov fs (bad) cmp pop pop mov (bad) cmp (bad) add out (bad) mov jbe mov fstpl lret loope (bad) hlt (bad) lods or cmp rex.X push rex.RB lock rex.W icebp retq test lcall ficompl mov add rclb xchg sbb (bad) out and pop and sbb rcrb fwait shrl mov (bad) out add jbe push addr32 (bad) cwtl stc out (bad) cld ja (bad) imul icebp push and cs (bad) rcrb adc lods jg xor adc in fidivr nop and rex.WRX out (bad) out or mov mov fwait (bad) mov cmp sbb mov and (bad) pushfq (bad) jp pop pop xlat fbld scas lods mov or pop lea fwait push mov movslq mov loop cmc mov int3 sub add int3 add addl loope lock xchg mov and loopne lods push (bad) fwait cli out (bad) jnp xchg add retq (bad) mov stos shll xchg (bad) cmp and add or or movabs cld and cmp jne imulb fistpll sbb adc cltd iret ljmp fistl push mov xchg fst (bad) or (bad) mov xchg push adc js jae (bad) out adc pushq add push rex.WRX lock xchg pushfq fild pushq mov cmp xchg and pop cmpsl popfq mov (bad) stos (bad) mov adc sbb mov jl rex.WRX (bad) mov adc mov mov test (bad) sarb or or iret nop adcb jnp adc xor or jne ror sub sub sbb repz and dec rex.R rex.RX int and xor rex.WR sbb movsb insl xlat test adc ja (bad) (bad) (bad) scas in (bad) mov movb leaveq fstl mov nop test repz fnop jb mov iret rex.WB pop or out mov pushfq int retq fimul mov adc jae lods xorl and (bad) pop sbb (bad) mov xor cmp imul adc (bad) rex.WRB mov cltd or rex.WR (bad) jno movabs andl clc cmp nop mov xor movabs shrb cmp pop push sub pop out cltd pushq adc ss mov fadds clc (bad) rex.RX ds and cmovs out pop movsl retq rex.WRXB popfq movsb pop cmpsl callq jg loopne scas adc ficom push in rex.WB fbstp jg hlt fimul rex sahf (bad) js xor idivb (bad) fistpl clc mov xor xchg cmp mov jo and xchg (bad) fnstcw retw lret jno outsl fldt sbb pop fildl out jbe mov push push rex.RB retq jmpq fildl jo (bad) adc out mov pop push imul test xchg jb xor pop jg sti faddl xchg lret xlat and sub rex.WRB cmp movabs test cmp mov (bad) psubq lret sub mov (bad) mov mov imul int3 pushfq mov outsl hlt loop jb test sub cmp fisttp gs iret cltd fsubs retq xor cmc loope subl xchg fstpt cmpsl in js gs cmp or rex.WR rex.X jle,pt fcmove rex.WRX xchg (bad) movabs (bad) jbe outsl fldcw sub or mov in (bad) jl and xor imul jo cli and movslq ja fcmovnbe mov in (bad) repnz rex.WXB test add jb movabs jnp stos mov xchg outsl jl lret (bad) iret popfq lea jb mov xchg (bad) std cltd rex.WRB stos sbb imul mov out sti rex sbb jae jb sbb int3 fldt rex.WR fildl pop (bad) fdivl gs jmp repnz adc fistpl imul lods cmp cmp loope jbe fimull (bad) lret sbb push cmp xchg notl and (bad) or jmp clc shl push jae rcr adcl adcl movslq xchg add flds stos jo mov jg fildll notb cmpsl js and rclb xchg mov rex.R (bad) fcmovne push rex.XB (bad) loopne ror xor or sbb test iret mov test mov jge xchg (bad) fildl je push (bad) sbb fildl sbb and push sub fsubrs (bad) imul jno rex.WX and push jrcxz (bad) pushq cld jle and jg or (bad) adc out rex.RX fistpl sbb iret and rcr jl pop cmp rorl ja jb push push js mov (bad) fisttpl jl out cmp pop rex.WXB in rex.WX outsl iret rex.B es mov in jp sub xor (bad) fisttpl sbb data16 lret rex.WB lods pushfq cmpsb mov imul jg insb loop jno sbb and rex.RXB fnsave pushq pop cmpsl fcomi (bad) pop sahf insl lock ja (bad) pop add retq pushq fidiv add push or pop (bad) out jl mov fcmove mov xchg mov sbb (bad) (bad) fildll xlat (bad) fsubs pop cmp add sbb scas jb movabs pop jrcxz pop mov fidiv movabs cld pop loope pop rex.RXB jnp add mov sub mov scas push std insb xchg sbbb xor ljmp cmp jle fstp cld and push pop mov loope cld mov out xor add rex.XB sub xchg (bad) sub jnp push push cmp sub (bad) out sbb (bad) fidiv out (bad) stos xor fistpl mov pop rex.B mov (bad) int3 loopne popfq xor rex.WB adc gs out icebp and mov retq mov xor int3 or mov mov mov or popfq jge rex.X mov out cs jae cmp fwait add movabs rex.XB outsb sbb fwait scas clc fwait push lret (bad) rex.WB add pushfq (bad) out movabs sub in rex.WXB outsl pop pop pop rex.W (bad) fsub fwait js fwait or rcr out cmp movslq fcmovne mov out in je cltd mov mov repnz pop retq movsl rcl mov bts out xchg pop (bad) mov cmpb fisttpl push pushq stos enterq xchg int3 xor movsl sub mov fcoms sbb int cmpsb jnp movsl sbb lahf fnclex (bad) out adc imul push lret cmpl or adc rex.WRXB xor (bad) fcomi or in mov lret (bad) push (bad) add fist addr32 popq sbb out (bad) jle shr cmp lret js push push sbb rex.WRX mov (bad) outsb mov int3 jns (bad) rcll js xor or rex.RX pushq xor xchg and add imul pop sub cltd add sub jo (bad) adc out fsts jb fldcw push lret (bad) push rex.RB test addr32 lret rex.WB shrl sti sti jmpq or add or adc and fstpl cs std push cmp insb sub outsl (bad) nop je rex.R adc (bad) xchg pop jnp retq movabs es (bad) xchg sub fs or push mov fadd cltd mov adc (bad) int3 lods sarl rex.WX mov outsl in push hlt rex.RB popfq je pop add fistpll sub fidivl fsts mov (bad) (bad) je jl rex.WR or xchg je mov sbb cmc mov mov xchg adcl push jbe out ficoml mov xor cmpsb xchg je lret rcl cwtl or clc pop mov stos shlb rex.XB ss negl jrcxz fwait add add or (bad) rex.X stos (bad) (bad) rex.WX addr32 jb fdivrl addl mov pop (bad) cltd push or movabs fsubrs fildll jns lock sbb fisubr mov cltd rex.R mov fstl (bad) cwtl mov in xchg fs retq (bad) add (bad) movsl icebp pop push (bad) xchg adc add xchg scas and adc cs add xor sub (bad) jmpq iret jl rex.RXB cmc sarb add mov sbb ja fistpll adc pushfq std mov cmp leaveq test pop rex.W fsubrp scas adc imul add jmp adc retq xor fild cmp (bad) add xchg (bad) rex.WRXB (bad) (bad) popfq (bad) mov mov rex.WRB fdivr fist jne sub insb xchg jmp negl mov scas fwait pop xchg (bad) (bad) mull (bad) imul loopne rorb rol stos retq xor lods adc sti sub rex.RXB mov mov rol adc test jns stos jp sti (bad) jnp bnd cmpsl (bad) icebp (bad) mov loopel (bad) or (bad) (bad) orl rex.WR adc shll mov loop (bad) cmpsb push push jl cmpsb xchg mov mov lahf push cmpsb rex.WRB callq movabs test cmp fimull xor sub sti or rex.XB xor xchg push xchg mov sbb xor stos pop adc neg xchg es sub movabs pushfq or rex.WX cmpsl rex.RB (bad) jp and shl pop cld retq mov (bad) jmpq movslq hlt leaveq retq cmpsl test and out jne rex.RB rex.R and fstl (bad) repz rol jnp std jrcxz (bad) cmpsl (bad) int jnp test or jns imul mov add jb repz gs mov imul (bad) movslq rcll (bad) fistl callq int test mov rcr add and pop push sti push (bad) (bad) mov jo push mov addl loopne rex.RXB xchg imul pop mov repnz ja hlt addr32 (bad) popfq fcmovne movl (bad) fildl cmc adc or pop cs sub pop sti mov fcomi movsb jmpq (bad) push loope jb sbb pop sub sbb rex.B jnp (bad) cmp in test push fucomi mov cs add fistpl xchg or xbeginq mov (bad) pushfq cwtl fstpt or mov cmp (bad) leaveq push push rex.WXB stos adc ds insl pushq mov (bad) jl fildl push (bad) (bad) jnp out adc imul jge pop xchg jmp ror jmp fisub rex.WR push (bad) js cmp lock nop rorl fwait pop push jne fisttpl pushq (bad) fmuls (bad) stos outsb fisttp lahf cmc xchg (bad) movabs mov cmp xchg fistpl movsb in movabs push adc jnp scas mov mov and popfq pop rcrb or imul cli rex.WRXB rex.WX or pushq stc fnsetpm(287 (bad) out jrcxz mov xor push mov push ficoml (bad) pushq callq jnp jge (bad) roll (bad) fmuls rex.WX fcmovnbe (bad) rex.WRXB fs fdivr (bad) jbe (bad) cmp cmpsl (bad) in jrcxz fcoms fwait popfq jb rex.WX mov mov neg test icebp outsb push or orl mov (bad) iret cmpsb movabs ss loope (bad) rex.WB es pushq xchg popfq fstps xchg mov in sarb mov test fwait cmp ja adc xchg int3 pop pop (bad) mov xchg rex.WB mov rex.WRXB adc lret xchg movabs negb and rex.WR rex.WRX xor loopl pushfq out cmp cmp pop mov rex.WRXB subl pop movabs rex.RXB nop pop cmpsl xchg fistpl mov pop jmp sub cmp jl pop pop rex.RB push scas mov rex rex.W lock mov add fist rex.WR rex.RX cmp lret rex.B rcl cmpsb (bad) rex.RXB (bad) cmc (bad) lods (bad) fcomps sarl shrl xchg lret sti or (bad) vpunpckhbw and in pop lret sti sar add sub popfq (bad) (bad) fsubrs fildl rex.WRB iret xchg jns fisttpl xor jp adc (bad) or popfq insb iret retq jle pop sub xor cmpsb movabs js adc fxch mov jns fsubrs sub fstpt insb scas insl mov sti iret pop mov sbb pop (bad) adc fildl xchg icebp (bad) fistl (bad) insb and (bad) fistpl sbb fs sbb lret and or sti add jmpq ds (bad) (bad) fildl mov es or outsl pushfq (bad) push (bad) cmp in rex.WX xchg sub mull out mov rcr sbb gs pop sbb (bad) jno cmpsl cmpsb pop (bad) ss repnz jle scas iret lret or adc lock cli cwtl shrb jns imul and add jg push lods out sub cwtl cld or rex.W rex.WR rex.WRB (bad) mov pop out jle push addr32 (bad) jp lods fcoml loope sub jrcxz xor cltd jne push cli jp xor movsl sbb pop test pushq rex.RX and in rex.WR gs pushq stos repz (bad) jnp (bad) roll (bad) sbb jrcxz xchg jae xchg xor jnp add push cltd mov stc sbb fcoms or (bad) addr32 test or xchg jno push adc js (bad) iret out xor (bad) xchg retq add and push (bad) xor (bad) clc (bad) adc out cmpsl and rex.WB xor pop cmp (bad) outsb pop (bad) out rorb pop loope lret sbb sbbl mov sbbl popfq pop scas xchg adcl ja and fwait rolb out xor ja lret vxorps stos mov movabs pushq xchg (bad) cmp push rclb rex.WXB lods mov push data16 (bad) fwait xor xchg jnp pushq xchg lods xchg xor xchg or sbb rex.R icebp data16 jae cmp jp mov movabs orl movabs lret adc and cmpsl int sub divl movslq (bad) (bad) sti popfq cmpl (bad) and fucom out (bad) push pop stc test pop iret rex.RB pop retq xor addr32 pop cld cmp add mov scas in adc cld cltd jmp sbb jp outsl lods (bad) (bad) push rex.RX repnz rex.B shll (bad) lret (bad) jno mov (bad) cmp xor mov push sbbb repz or clc pushfq xchg cmpl mov lret outsb rex.R rex.W rex.WRB mov rex.R movabs insl xor fldl (bad) stos (bad) (bad) (bad) or fwait sbb leaveq out test mov (bad) iret cld lahf jl pop sub out lods std rex.RB rex.WRXB fcomps rex.XB add rolb in loop add cltd lahf xchg (bad) pushq test mov push cmp pop pop (bad) stc loop push cmpsb and data16 fsubr xchg pop clc movslq jp xchg scas xchg sbb and xchg sbb pop push sub jmpq js (bad) ss fwait cmp lahf pop jb xor rcr jle or stos add rex.WR (bad) leaveq out fsubrs fwait sub outsl adc stos (bad) lret and fs push mov stos es stos or push push and add jg mov xchg shll stos jmp push or adc imul lret xor pop fldcw xchg rex.WRXB iret movhps jrcxz mov xor vmovss adc jl ja in jmpq push jge pushq sbb jbe sbb fisttpl jae fsts movabs and cmp rex.RXB or loope add jmp adc jrcxz mov rex.RB push in cmp pop cli movabs (bad) movsb (bad) cmpsl enterq sbb cmp lcall fwait data16 out imulb (bad) and rex.WRXB jmp (bad) sub push fistpl imul (bad) pushfq and jo callq pushq pop add or orl shl int (bad) (bad) fwait rex.RXB (bad) xlat stc cwtl ds repnz imul movabs pushfq (bad) or cmpsl cltd mov pop lret jl mov rcrb or sti xchg hlt outsl jb rcr cld mov (bad) mov cli (bad) rex.WXB jnp xchg jno pushq (bad) (bad) testl movslq fcmovnbe jge push push pushq or loop add shrl xchg fucomi cli (bad) adcl mov mov push pop rol xchg in fistl (bad) ds cmp or mov jnp cmovne or fsubl mov mov orl mov rex.B rex.RXB sbb hlt mov mov callq enterq (bad) (bad) sahf fs cmp fisttpl mov or mov mov push (bad) xlat std (bad) outsl insl pushfq imul xchg test and sbb movslq jmpq xchg movsb jrcxz sbb cmc (bad) pop pop std sub stos cltd mov pop add ds jg sub or scas adc add rex.R fbld out rex.RB ds cld add mov movabs sub lret lret fildl lock test mov (bad) loop and fdivr mov pop and cmp js xchg push fnop retq or loop jnp (bad) (bad) jg loopne hlt mov movsb std rex.RB out adc cwtl cld add mov adc js mov fistp xchg (bad) pop cmp (bad) in popfq rex.WRXB scas (bad) (bad) push pop rex.RXB fistpll and add mov or iret in rex.RXB rex.WR mov (bad) fisttp lret jmpq or shll sti (bad) lahf rex.R mov jne mov scas jb fcmovu (bad) or jge lret testl (bad) mov and imul (bad) mov (bad) xor cmp mov adc shrl (bad) (bad) mov insb mov rex.XB push negl (bad) mov rex.WXB push andl callq xchg xor fwait shrl xchg jns movabs jno (bad) sub adc cmp pushq xor mov mov in jg xor jp and movabs adc scas sub lods xchg adc (bad) mov std in retq cmp (bad) add mov movsl rex.WRXB ds (bad) mov cld push cmp pop mov sub loop js movsl and jns cs fisttp (bad) mov in sub lret imul mov pop push rex.W cmp push sti mov vmovsd mov jle cmp rcll cmp fstp jae xchg jnp (bad) mov sub (bad) outsl mov fwait (bad) callq (bad) lea rex.WB (bad) test outsl adc imul sub out rex.WXB shl cs (bad) xchg xchg jne xchg rex.WB fs gs mov and sub jbe push xchg clc roll xor adc enterq callq sub hlt cli (bad) mov push inc setns (bad) (bad) pop rcrl (bad) rex.WRB rex.W loopne rex.WRXB jmp ficomp xchg xor repz pushfq (bad) scas cmp imul retq (bad) int3 mov sbb movslq test (bad) cmp cmp (bad) sbb (bad) mov (bad) movabs sub jbe flds cmpb cmpsb xchg mov ds jbe leaveq lret std (bad) mov push or sbb (bad) not mov cmp add or pop mov jmpq xor repnz mov stos shll jb and jl (bad) pop lret rclb add adc insl xchg enterq decl xchg popfq rex.RX fldl rorb fbld or sbb (bad) and (bad) sub mov lods (bad) push fist cmc jbe lret (bad) cltd rex.RXB jl scas xchg rex.X xor mov (bad) loope sbb lods (bad) nop flds leaveq rex.WXB xchg mov xor mov fldt (bad) add fucomi pushq lods mov lcall xchg (bad) fstps rex.WRB insl push imul pushfq (bad) and enterq mov xchg loope fisttpl push and imul mov pushfq jge xchg push test movabs lret (bad) fistl imul fistpl out rex.B ss test push (bad) clc lock in movsb push jg or fisttpl xor lods rex push sbb sarb js pop adc pop mov cmp sub cld fnstsw pop stos fnstenv xchg scas imul movslq retq fstpt roll xchg mov in and xor sub and loopne mov mov jl mov insb cltd or (bad) pop nop xchg jl std jo (bad) pop sar int3 fbld xchg sbb sbb movabs cld adc pop movabs pushq (bad) imul mov sub mov rolb cwtl add and cltd rex.R (bad) sbb (bad) stos loope jle pop sbb rex.R or int rcrb mov and rex.WR out xchg rclb out adc je and pop push vpackssdw (bad) sub rex.RB fistp rex.WRX add pop mov (bad) xchg push outsb lret (bad) pop roll mov rex.XB hlt push enterq push xor jns and and sbb ds repz insb jo cltd movabs stos stc xchg fwait cmp (bad) xchg push mov andq xchg fmuls fbld scas out sub (bad) or data16 fcoms and leaveq xor rex.RB rorl es loope insb sbb add sahf rex.W (bad) xor pop (bad) rcr in sbb movslq ficomp add adc mov cld sub mov cmp in gs adc pop pop rex.B rex.RX rex.WX mov and rorb frstor imul rex.X (bad) xchg pushq int3 fdivp push rol sbb rex.WR cs cmp ficompl sbbb mov rex.XB xchg rex.XB stos mov xor (bad) pop fldt mov fistl rex.XB mov leaveq std fistl xor fimull push jnp xchg fldt rex.RB out inc pop pushq rex.WX outsl imul stos mov sbb xchg (bad) movabs cmp pop fldt mov ds movslq rex ss out scas fcmovnbe (bad) (bad) clc loop push and (bad) fsubrl cmp fisttpl (bad) hlt fisubrl fwait and pop lahf pop retq fdivrl (bad) mov sub cmpsl cmpsb (bad) jne or loop pop mov mov fisttpl in (bad) fildl pushq fcmovbe pop imul fistl out mov pop rex.RB stos adc pop rex.WR jge pop cwtl sbb cld rex.RXB or mov and rclb (bad) imul rex.WXB pop repz (bad) lock loop,pn cmpsl cs cld xor sti mov pop or rex.B mov add (bad) mov mov (bad) stos fldt orb cli pop in addr32 movabs mov ud1 subl mov xchg fwait scas enterq test (bad) jae add nop fldt mov add stos rex.WB cmp in shufps mov fwait and rcll pop hlt sub jb mov sbb fldt test (bad) mov mov js jne scas (bad) (bad) movabs xorb mov roll mov (bad) lretq xchg mov (bad) rex.WRXB and popfq gs add mov cmp (bad) lods and push test pop rcr sbb pop mov adc pop repnz sti callq fs fs push (bad) fcomps (bad) sbb push movabs stc incb nop movslq ficompl fist (bad) fnstsw (bad) adc sub mov fwait pop jbe test jp out stos sbb icebp test (bad) xchg cmp mov (bad) imul fyl2x pop addl add rex.WR rex.WB (bad) testb push xchg imul fwait cld adc (bad) mov shlb or movabs outsb adc cwtd retq fcoml imul add loop rex.R roll movabs insb es lret (bad) (bad) and (bad) sbb (bad) and fsubrl fistp (bad) (bad) sbb iret pop and pop jae jno mov insb push xchg mov xchg jbe (bad) mov xchg insl jmp push push push stos pop cmp xchg ss mov (bad) adc mov and scas addr32 test jle (bad) out jp (bad) in (bad) lret push pop (bad) mov pop (bad) mov rex.WRB mov mov jle dec movsl pop idiv pushfq (bad) sbb sti out (bad) fwait scas xorl adc push push in xchg std (bad) movslq cmp lock cmpl out ja movslq adc repnz cld retq sub and push rex rex.WRB movabs rex.WXB pushq mov add outsb negl (bad) (bad) rex.WB out (bad) cmc imul orb js lahf cmpsl fldt incl jp (bad) cs fsubs mov push jns jno adc fucomi rex.WXB rex.XB popfq and int3 push add sbb decl std pop adc sti ss movabs and rex.WXB scas cmp or add fldt sbb lods stc jg mov cmpsb xchg rex.X movsl xchg push cmpsl adc pop (bad) fbstp jae cmp and rclb fistpl (bad) test cmp add mov sub pushq fistpl (bad) js xchg outsb and xlat or (bad) push sub movabs mov sahf out (bad) and jbe repnz xor iret sub fcmovne push mov sbb add fistpl je jrcxz adc or add sti fcompl xchg lods (bad) push fnsave cwtl (bad) xor pop push or imul movsl push jrcxz addl or mov or sbb (bad) pop loop rex.WRB (bad) mov (bad) (bad) adc loop (bad) cmp push xor and or int3 nop enterq jmpq xor out jnp stos callq mov (bad) rex.RXB xchg cmc loope push adc (bad) xor pop add (bad) cs gs push mov cmp push or add lock mov nop subl (bad) hlt (bad) or pop fcmovnb insl callq and mov xchg mov pop xlat mov and cmp jo rex.WXB or (bad) retq mov insb (bad) sti jrcxz fisttpl xlat rex.WR mov and push enterq fs retq adc mov rex.WRB mov (bad) pop mov mov lret rex.X mov cmp jl ja mov gs (bad) addr32 outsl cld pop fucomp cmc adc jno rex.WX sar adc jl (bad) pop rex.X in (bad) cwtl xchg mov movabs fldt pop mov fisttpl push cld adc insl xchg data16 xlat scas pushq jne sbb gs pop push rex.RXB fistl pop scas lock sub imul in (bad) (bad) insb and cmp lock pop jmpq or (bad) mov jae cltd or (bad) (bad) mov adc lret (bad) icebp iret push adcl mov xchg rex.W vmovlps stos cmp mov push cwtl popfq mov xlat outsl (bad) mov in fldl2t xchg xchg (bad) cmp rex.WRB gs xchg test (bad) rex.WB xchg mov (bad) xor jge jb mov and (bad) mov cltd mov jbe xor test or sbb mov mov push (bad) xor push cmp retq adc insb xchg push mov sub int sub test (bad) pop adc or (bad) add pop (bad) rex.WRXB (bad) hlt in and sarl (bad) out push (bad) xor movabs jmp lods test cmp (bad) (bad) xchg rcr xchg push push rex.WXB jae jo fidivl or test sbb test xor jmpq lods push movabs push xchg sbb test xchg mov (bad) fisubr rex.WB pop push (bad) (bad) (bad) stc gs sbb fist mov add jg (bad) shr rex.RX sub fistl push cmc xchg pop ja push sub jge iret or test std sarl lods xchg rex.WXB (bad) (bad) mov or xchg in test jp mov xlat lahf (bad) (bad) push (bad) jl xor mov jbe or rex.WB rex.RX repnz rex.XB mov ss xchg push adc lods mov stos cmpsl (bad) loopne movabs movslq (bad) jl pop loopne insb movsl jp jrcxz out andnps (bad) mov sbb movabs jge jrcxz lods adc (bad) cmp mov (bad) (bad) or sub (bad) (bad) adc pop (bad) cmp and (bad) fistl or cmp pop insb adc ja jns (bad) (bad) (bad) lods (bad) mov or rex rex.WB repz xor stos xor rex.B rex.RX sub mov and mov sub rex.WR xor adc std xor rex.W rex.W jbe,pn (bad) (bad) cli jg movsb jmpq mov fnstsw fwait (bad) scas rol mov ror push insl movabs fwait xor rex.RX mov jno mov or ds sub movabs outsb rex.RX (bad) cmp pop stos xor mov pop push push xchg xlat ss push test sbb cwtl rcrb imul (bad) (bad) add cmp or mov or adc rex.W scas and push (bad) out push jle cmp stos mov fisttpl cmp (bad) fstpt ja mov jno and sub sub sbb or cmovp lea adc rex.WRB sbb (bad) adc add mov sbb (bad) mov rex.X xchg rex.WX (bad) rex.RXB mov out out in push rex.WRX rex.XB sub fwait push (bad) (bad) (bad) rex.WB mov out fldl push lahf rorb rex rex.WB mov fcmovne mov ds lea movabs xlat shlb fildl sub xchg xchg jge movslq xchg sahf or (bad) jb pop out (bad) scas cmpsb (bad) (bad) jno callq mov sahf cltd pop sar xchg rex.WB (bad) (bad) cmp repz lahf pushq sar add rex.WXB rex.WX popfq fldt (bad) (bad) pop rex.RXB imul cmpxchg lret rex.X cmp adcl jnp pop xor movabs popfq int3 sub stos shl (bad) pop xor imul cmp xor insb pushq fs rex xor fldt and movabs rex.RB retq xchg test (bad) mov mov mov mov mov (bad) (bad) test (bad) fisttpl mov and or sub loope ds jno movabs (bad) callw push xor rex.RX (bad) rclb je sub xor scas xchg xor fisubr test add push (bad) fistpl mov adc add rex.WB iret pop stos (bad) imul fwait int icebp adc add jb lret and xor int3 int (bad) rex.RX sti or rex.WB (bad) (bad) fwait (bad) movabs (bad) jrcxz mov sbb rex.WB adc cmp fldt lret jne or callq loop je sahf rex.W es or repz out movabs mov out fnstenv hlt cmp mov rcrb loopne movabs cmp movabs out xchg fistpl mov rex.X or adc sub push sub iret movabs lods lret movsl stos (bad) or jl (bad) in push cs rex.WXB loopne movsb mov cmp push (bad) mov adc push adc sub pop jo stos push pop and movabs xchg fcomi cld in jns sub mov rex subb adc mov rex.WR sub xchg rex.RXB cs xchg xorb add (bad) and mov jbe cltd iret clc xor rex.RXB fstpt and lods cltd loope mov movsb (bad) rcrb lods sbb (bad) jns ds cmp mov adc rorb pop rex.WRX loop adc and addr32 pop movslq xchg callq in (bad) rex.B movabs mov rcr mov or out mov incb or (bad) sbb fwait out data16 mov movabs (bad) rex.R jg rex.RB (bad) adc (bad) mov jle fcmovne rex.WRX rex.RXB and push sub in mov fnop sub (bad) rcr mov test (bad) mov (bad) sbb cmp jns fcmovnbe js lock xor pushfq jrcxz in fdivs cmp cmc (bad) rex.WRXB iret jl imull popfq and adc je rex.B fild sbb pushfq sbb jnp (bad) xor loope (bad) and movslq fistl (bad) and sbb rex.WXB pop sarb rex.XB fwait mov add fninit or sbb jmp xchg or (bad) lret cmp decb adc rex.WB cmpsb cmp rex.RX rex.R jmpq lods mov out (bad) shrb rex.RX (bad) mov stos enterq cmp rex.RB jnp hlt jge xchg mov fwait stos imul add lods jrcxz (bad) or pushfq rex.WR cmp adc (bad) std sbb fstl sub jo push ja fisubrl (bad) push shrl lret rclb push (bad) std pop mov cmpl jp out jg loope fldt cmp cmp fwait mov movsl test shll movsb or mov cmp out jns test cmp movsb adc js sbb (bad) stos lret (bad) pushq rorl xchg nop cmpsb mov jb fcmovnbe jo mov neg sub lods mov lods xchg insl sub int (bad) (bad) cmp loope xchg movl rex.R cmp mov jmpq cmp xor movslq xor (bad) pop outsl mov ficompl cmp sub stos test rex.WR push out in outsl fisttpl xor jne rex.RX fidiv (bad) cmc mov mov jmp adc pop (bad) lods jl pop nop and jae,pt jns cli cmp cld repnz and and (bad) movabs xchg and (bad) push lods nop mov fcmovne retq mov pushfq enterq mov mov jnp movslq lcall movabs (bad) in (bad) mov and push jrcxz cwtl xor retq fstpt add mov lret movslq and popfq adc lods imul xor (bad) pop sahf (bad) iret out (bad) rex.X ficomp sbb (bad) pop sub scas sbb (bad) mov fcoms (bad) cli cmp sub jl cmpsb sub int3 xchg jnp sbb decb pop pushfq stos ss test (bad) int (bad) sarl repnz jmp icebp fcmovnu fadds rex.X fild mov imul or pushfq int popfq jbe mov mov out adc sbb stc lock (bad) int sub test (bad) pop movabs movsb outsb adc std and xor adc fcmovne cld xchg cmp xor movabs (bad) callq movslq fstpt movabs sub push rex.R or (bad) (bad) or retq rex.WX rex.W shrb adc popfq sbb rex.WB jrcxz test pop jo cwtl rex.WRXB lods movabs lcall push cli ss jecxz pop fwait pop rex.RXB mov cwtl mov callq add out in shll iret mov pop popfq jg or in movabs (bad) mov mov push mov test lock fistp add xorb fimull (bad) jg jge mov out pop rex.R rex.WR adc fbstp sub cmp fstp lahf repz out out movslq out orl gs sub out or in xchg jl push retq add shrl (bad) xor pop (bad) ja rex.RB (bad) (bad) pop fdivl icebp pop ss lods callq or add stc fisttp jg and push mov rex.WRXB (bad) movsb xlat sbb movsl mov sti push add xchg rcl popfq jrcxz (bad) icebp stos mov pushq movb (bad) icebp fistp mov sub jmpq fsubs cmp out cwtl fistp adc (bad) pop cmc mov rex.WXB add lock xchg mov repz hlt lret insl leaveq or ss cmpsl fcoml subl mov rex.R cld outsb movsl rcr cmp cmpl outsb xor xchg movabs mov and sub mov flds rcr out xchg (bad) popfq pop cmpb movabs stc xor (bad) fstl sub push (bad) mov xchg (bad) (bad) (bad) (bad) iret mov ficoml jbe addr32 mov (bad) and fistp adc out mov and rol ja nop fs sbb rex.WR rex.WXB jnp jnp out (bad) in jbe scas out in xchg adc cmp pop cmpsl xor pop mov stos insb jnp movabs and sbb or (bad) xchg in mov push imul out jno jo out and pop (bad) sbb rex.WX rcr lea (bad) mov jl cmpsl ja pop push test lods xor out movabs fisub pop movabs sub adc (bad) lods pushq cwtl xor cmp pop (bad) sarb (bad) pop pop imul nop rex.WRXB xor sbb (bad) in lret or sbb movsb pop (bad) repz pop jmp xchg test lock add out mov insb push rex.R jge add mov pop jbe and xchg test push (bad) callq sbb mov idivl rex.WB clc rcrl add sbb scas leaveq (bad) pop repnz push (bad) (bad) jmpq repz mov movabs sub test xor xchg rex.B int in mov pop mov fwait out sub frstor rex.R pop push mov andb push mov and imul (bad) pushq outsb (bad) movabs sub (bad) mov jae jp cli xchg pop scas sub rex.WR rex.RX pop test mov neg out rex.WRB test jrcxz rex.WX orb add adc fadd and out sub pop cmp jnp (bad) push fdivrs pop (bad) adc pop idivl mov rex.WR mov rex.XB repz rorw lret xchg loopne mov stc stc pop lretw push jg fisttp push rex.WRXB mov (bad) (bad) divb rex.WRXB (bad) cmpsl xor sbb push movabs sti xchg sbbl scas xlat stos sti out stos fnsave (bad) fcmovnu add jle and out or mov jbe iret enterq out test andl (bad) jmpq je lret pop fbld scas and fidivl (bad) pushfq ja or movabs (bad) xchg push lods bnd test iret stos (bad) xchg (bad) mulb in xlat (bad) cmc movslq in pushfq or push cwtl loop (bad) lods mov pop (bad) (bad) pop jne mov ds stc jb loopne cwtl mov pushq jne add rex.XB and and jnp (bad) (bad) es sub scas xchg mov sarb jle insl ja mov (bad) int xchg cmp adc fimul cmp rolb test stc std adc iret out cmpsl in ja test mov sub (bad) outsb cmpl test (bad) jmpq mov fadd shl fcompl xor (bad) xchg icebp (bad) pop (bad) andl add push mov fwait (bad) and xchg loope (bad) fimull mov out rex.XB movsb xchg push pop rex.R sbb (bad) mov fisubl cli xchg mov mov (bad) rex.RB lret adc negb pushfq out scas push push adc (bad) (bad) movabs jo movslq int add out fnstcw sti nop cld sub stc (bad) fwait hlt subl (bad) fwait movslq rcrl andb rorb (bad) pushfq mov subl pop lahf add pop adc sbb clc sbb pop outsl movabs fstpt pushfq rex.XB (bad) mov mov rex.R rex.WRX (bad) rex.XB pop scas rex.WR int3 sarl hlt xor or rex.X insl scas and jg xor popfq (bad) mov movabs (bad) fldt xchg xchg cltd xor mov jno fninit (bad) lea data16 xor test mull js retq (bad) jmp repnz jbe sub clc (bad) shlb popfq mov imul (bad) fldenv pop xchg adc retq sub mov lock pop movabs jne mov cmpsb (bad) stos clc pushfq pop xchg rorl callq (bad) cmp fistpl bswap pop rex.WR adc mov xchg outsl push jmpq (bad) jmp std enterq leaveq (bad) es scas callq push hlt cld enterq fucomi pushfq pop (bad) fdivl movabs mov cli int jnp cwtl callq loop fisttpl retq cmp fistl cwtl fldcw jno push ss (bad) repz rex.XB int fmul cmp sbb (bad) (bad) fstpt cmp (bad) fnstsw pop std in jno sub (bad) cs int3 ds retq stos outsl xchg pop movsl rex.WXB mov pop push jmp out sub std push fs in shl icebp jg or mov gs (bad) (bad) lahf cs jle fadd int mov mov retq insl mov push lret push (bad) repz out int3 ss mov jns mov pop outsb lret fbld gs lock and mov out out lock loope lock (bad) rex.W and in repnz xchg (bad) cld cltd fild xor cmp ja (bad) xchg (bad) (bad) adc cltd callq (bad) pop in retq fisubrl mov or jl adc push xor cmp repnz xlat cmp loopne fnop hlt fwait mov movslq or xor xor sbb cmp rex.W ss jge pushfq xchg insb sbb (bad) mov jno fnstsw or xor jns retq fdivs jbe xchg popfq mov jge int rcrb mov adc xor push cltd mov sbb jno andl mov jnp sarb sbb mov xchg ds mov (bad) fbld sar pushq mov rex.R pop push jbe jb outsl mov sub fdivl mov fwait (bad) data16 (bad) add sbb jp lret rex.R push jg xor fsubrl jo retq rcll xchg sarb (bad) fwait (bad) cltd lahf enterq (bad) add mov mull pop pop fwait jbe or push xor cmp repz xlat rcrl sahf (bad) mov (bad) hlt imul xchg rex.RX insb add xor pop (bad) clc sti (bad) rex.WXB jmpq push rex.RB cmp (bad) rex.RXB roll (bad) stos fsubrs sahf in rex.RB test jae mov push jmpq (bad) xlat xchg or in jge push loope (bad) pop sbb (bad) imul popfq push cwtl bnd retq push fstpl stc sub or loopne mov rex.WRXB pop pushq fcmovnu sti fwait imul jmp cli repz jnp stos cmp jae (bad) enterq pop loopne loope push fxch add movabs xor loopne lret jmpq push sub movsl xor pop mov xchg pushfq adc ffree sbb or rex.WB cs scas mov (bad) cmc mov ficompl jl cmp (bad) xor xchg sub (bad) pop jnp fldt lea push and movsl cmpsl (bad) cli sahf out je (bad) fistp mov (bad) push test or pop cmc out jbe (bad) je mov mov mov mov add rex.WXB movsb subl in add int3 test cmp pop callq cs outsl pop jp enterq stos mov movabs mov jns (bad) stc fldt mov icebp mov lahf (bad) outsb sub sarw jle cmp fistl std in jo fcmovnu sbb retq adc sbb (bad) cmc mov cmp jmpq push fcmovnbe cmpsb lahf popfq int3 shrl (bad) xor fs mov or enterq mov movabs add loop icebp (bad) cli cmpb xchg fldt rex.WXB pop rorb xchg xchg icebp and fldt rex.RB sub mov (bad) mov int3 xchg fmull rclb jrcxz fwait retq out rex.RXB fistl add pop pop movabs rcr cld (bad) mov add fnstcw xchg rorl pop fcmovnb xor xor data16 or push push int scas xor fistl fsubrl loope xlat mov (bad) xchg (bad) (bad) pop (bad) ds or adc shr xchg (bad) mov movsb shrb stos or push jno mov in imul mov iret test faddl jb nop scas negb mov lock rex.RXB fcmovne push test pop (bad) fstp scas push adc fs xlat cmp vpacksswb cltd pushq rex.RXB jl (bad) retq push rex.WB jae cmp fstpt pop stc rex.RXB (bad) (bad) or cmp pushq jp mov add (bad) (bad) fistpl push lods loopne enterq (bad) jne (bad) rex.XB (bad) clc (bad) enterq fild iret sbb fildl xlat out outsl rex.WB insb mov xchg sub lock jns (bad) fstpt jle (bad) in stos rex.X clc pop jrcxz xchg out fwait pop xor hlt fdivr adc mov cwtl in adc pop jnp lods pop cld adc xchg nop add mov push and cmp and loop js fldt sub retq (bad) mov pop callq scas ljmp mov rex.X rex.WB adc es outsl jbe stos (bad) (bad) fistpl rex.WR (bad) stos mov pushq cmp movabs (bad) sub in shlb out mov push repnz mov push xlat rex.WR pop fildl vucomisd adc iret jle pushfq fistl sub mov rex.RXB cld loop xchg rex.WRXB rex.R adc lahf jrcxz mov stos addr32 scas in rex.XB and fstpt lods outsb or (bad) mov push fucom sbb xchg xchg xor adc fildl imul push retq pop pushfq (bad) mov lahf jmpq shlb sahf movabs movabs xor mov xchg fwait bnd (bad) cmp rex.WRB adc (bad) in mov sub clc loopne jmp imul loop lods idivb rex.W jl cmpsb jb xchg fstpt cmp push (bad) and add mov xor jb mov movabs int3 jrcxz (bad) xor sbbl xor or vpsllw fldt adc or (bad) fstpt jnp subb and cmp jbe (bad) movslq push stos pushq jg add repz adc pop stos sub cli in rcrl rex jp add (bad) out popfq rex.WXB pop cmpsl jo std (bad) (bad) pop rex.WRB or ja,pt mov or in pop (bad) lods fisttpl fdivrs fwait xchg (bad) (bad) mov imul or repnz rex.WB enterq adc jae fwait add pop pop insb xchg out lahf cmp (bad) shll sbb sbb add jle xor xchg (bad) (bad) (bad) (bad) xor rex.WRB rex.WRXB jae scas (bad) movslq sbb addr32 (bad) (bad) stos loope push jne jnp lods mov pop (bad) fwait adc lret pop pop mov data16 rex.RX ja int3 or out fstpt mov movsb nop js outsb fistl imul and lahf fisttpl fldt push rex.X insb movabs fmuls movabs sub (bad) or fidivrl insb stos mov sub (bad) (bad) and imul test cmp out sti and or stos rex.WRX ds fistl or sbb push xor adc lahf stos movabs cmp pop out pop jge xchg jae add cmp jb mov lret shr in sbb push and push (bad) fwait sub sti mov movabs rex.WRXB fistpl repz push cld lods rcrl and mov rex.WR or bnd (bad) (bad) fiaddl jmpq (bad) stos sarl lret addl fistpl test mov and fcmovnbe add (bad) mov xchg es int pop loopne cwtl mov mov fistl sbb imul popfq (bad) push (bad) rex.RB cmp or clc sub rex.XB out pop or loopne xchg push pop mov add leaveq int jp test sbb clc mov (bad) ja movabs sub rex.RXB jmp movslq stos loop mov sub mov adc add leaveq fstps fwait nop jrcxz rex ds jge outsb (bad) clc (bad) int sarl sub fildl mov fs (bad) (bad) (bad) add or (bad) test push in pushq mov stc adc jae test rex.WRX gs jo adc xchg or (bad) jge cmpsl (bad) std adc fdivl loopne (bad) movslq (bad) xchg negb outsl (bad) in or push push or (bad) (bad) sbb (bad) adc (bad) jae iret std pop xor mov sbb adc pop lret xchg jle lea rex.WB movsb cmp cmp cmp (bad) pop mov scas and adc sub mov add jae pop or lea (bad) cmp add pop xchg cmp push sbb (bad) test sbb jmpq pop xchg mov sub and xchg (bad) (bad) insl fimull mov rex.WR cmpsb jnp loopel mov sbb cmc xor jbe xor mov rex movsl mov add rex.WR fwait mov leaveq jno or (bad) mov movslq mov jg repz or mov jbe fisttpll (bad) or pop int3 scas cltd cmp jp adc stos ficompl enterq stc push testb (bad) lock rex.WR (bad) sub cmp adc cmp jle ds addr32 pushq mov jmpq rex.RXB mov movsl mov testb adc pop push fiaddl jp push movabs pushfq stc movsl xorl xchg adc retq (bad) test test jns cmp mov in cmp jrcxz xchg jmpq push cmp mov jbe mov fadds jmp int mov jnp int3 fld1 jnp push ja jns addr32 cmp or sbb rex.XB push fistl xor dec fcmovnbe push (bad) xor ds pop rex.WR mov mov xlat jns (bad) (bad) movabs mov (bad) push lods data16 loop rex.WX sub sti (bad) jle sub sbb clc je clc (bad) jl adc fs jnp jne psraw (bad) jae (bad) (bad) (bad) pop (bad) (bad) sbb lods fistpl (bad) icebp rex.WRXB cmp (bad) fwait xor pushq rex.R fildl rex or callq (bad) fs repnz xor add (bad) or cli (bad) movb fildl rclb iret (bad) cltd addl pushfq movabs fucomi lahf sbb and sbb jnp (bad) in fwait ja (bad) imul fwait mov xor nop rex.WRB fcomi rolb rex.WRXB pop and (bad) and mov jno shlb mov frstpm(287 mull (bad) cmp (bad) fwait movabs (bad) in fsub sti jrcxz fdivs mov rex.RB xor (bad) xchg mov and add movabs loope (bad) in rex.RXB rex.XB (bad) jge adc mov lods stc xor cmp mov push iret orb push idivl rex.X jge jno pop sbb (bad) mov shll stc repnz fstpt rex.WXB push (bad) xor (bad) fcomp sub movabs jnp js jle je push int (bad) cwtl or int std xchg (bad) rex.WRB rex pop (bad) rex.WR int lahf (bad) mov add in (bad) mov out (bad) cmp (bad) movabs xlat and mov sbb outsl adc pushfq xchg xlat mov fstpt mov out leaveq pop mov xor ja cmpsl mov rex.WRX fldl js pop loopne cmp cli jge pop ja (bad) or js rcr clc shlb xchg iret mov xchg cmp (bad) fistl or (bad) mov push jnp jg pop rex.WRX (bad) loope decl rex.X movabs sub pushq fistl (bad) lret rcr addr32 add adc fwait outsb fistl fs movabs (bad) fisttpl (bad) shlb (bad) ds add fwait in mov xor in stc test fucomi rorb jle lahf fcmovne rol (bad) xor lock (bad) add rex.RXB rex.WXB sub sbb push or rex.WRB loope loop cmp fstpt out cmpsb neg sub mov lods push (bad) out popfq mov rex.R mov mov cli (bad) add jnp pushq and std and fwait cmp and int3 rex.X shll or loopne stos sub scas mov sub cmpsl cmc movabs (bad) orl shrb add ja and ss adc cmp xchg jg (bad) jnp movabs add jl mov mov fwait jl clc mov imul popfq iret rex.W imul sbb shl adc (bad) in jl outsb xchg push out loopne (bad) (bad) out cs rex.RX (bad) and out or cmp xchg add or insl (bad) imul xor jp loope rex.WX rex.WRXB jae js fstl rex.WRXB js movabs out or fwait jl jns mov cmp stos mov and clc neg xor mov std loop xchg mov and xchg mov lret sub pop std (bad) lret cwtl sub stc movabs mov xchg or mov (bad) adc callq pop jp js sub outsl rex.XB cmc push stc movabs (bad) push cmp and sbb and cmp jrcxz cmp ds imul lret add mov sbb lock mov add mov pop fistl (bad) jo mov movsb (bad) outsl jg stc in pop sar xchg (bad) pop jnp hlt test push xor nop mov fistl push loopne jno shll scas xor fcomi (bad) fcomps sub jle int ror mov pop xor fwait repnz jne (bad) inc xchg push in rex.W data16 movabs (bad) int push jne mov xlat xchg mov pushfq sub cmp rex.WRXB mov jl imul mov (bad) rex.X data16 (bad) loopne cmp pop (bad) scas pop push (bad) ds fdivl xor jae jle lock xchg cmp fucomi mov in (bad) cmp lods int3 (bad) mov cmp fldcw ds clc pushfq cmp imul sbb (bad) fldl xor outsl pushq rex.WXB ficomp push (bad) sub xchg fwait rex.XB add insl rol cmpl pop in andl (bad) jnp xor pop repnz (bad) rex.R sub rex.WRX sub rex.WX jle jmp jg cmp mov test movabs pushfq pop rex.XB xchg fildl (bad) jnp pop leaveq loop data16 sub jns pushq pop fnstenv rex.WRX rolb lahf lods (bad) movabs mov xchg cmp fcom (bad) enterq int3 movsl pop mov sbb callq int3 pop scas roll lahf (bad) jno adc (bad) or retq mov lods repz lods (bad) clc pop jno cmp leaveq adc and mov adc sti cwtl in mov push iret movabs (bad) jno retq xchg adc (bad) pop fcomp mov or rex.XB paddsb rclb pop fcmovnu rex.B or (bad) imul pop sbb sbb fwait cmp pushq stos in int cmp xchg rcrl (bad) rex.WRB rex.RX outsb testb in leaveq fistpl pushq fldt cmp (bad) sub rex.RXB mov add cmpsl pushq xchg insb (bad) negb fisttpl cmp pop xor rex.B stos cmp rex.WX fisttpl testl movabs callq mov es (bad) pop jnp sub cmc fldl rex.RX push leaveq pop fnstenv (bad) cmpsb mov out or sub xor imul (bad) mov cmp (bad) add (bad) or xor mov lock movabs mov fildl jns rex.WRB and (bad) xchg xor mov lret ss mov push or xchg jrcxz jg (bad) mov js xor adc scas xchg fildl fs movabs xchg fistl cmp add repnz pop mov (bad) shr mov sbb mov mov fistpl xor movabs (bad) cmpsb mov push andb sub imul mov (bad) mov fildl adc jrcxz (bad) addr32 (bad) rex.WRB pop mov icebp push mov mov rex.WX rex movsb xchg xor insb and hlt stos cmp fistl (bad) cwtl pop in lret movabs add mov stos int3 or ds (bad) fs push enterq fninit clc jbe loopne pop imul orb in (bad) fcomi sbb rex.RX sub enterq loope jrcxz movsb jns fcmovu stos iret sbb jmpq cld (bad) and mov sahf pop and (bad) pop loopne sub xor cld (bad) (bad) cmp sbbl movabs (bad) mov add jno mov imul jmpq (bad) mov pop popfq (bad) sysexit imul mov sbb (bad) sub push movb scas in xchg and fwait add addr32 cmp or jle rex.WR sub movabs cld (bad) push hlt xor sbb mov loopne rcrb push pop fsubs mov or adc sub imul movsb xchg fmull jp cmp mov stc hlt mov cmpsb push jmpq rex.WB rex.XB stc push fs (bad) mov fst enterq clc mov mov adc rcrb repz jg sarb mov (bad) (bad) jns or (bad) lret jo rex.WRXB (bad) xchg pushfq lret xchg (bad) xchg popfq sbb incb loope cmp pop mov fstpt movabs adc push add jmpq movsl cs (bad) mov test sub pushq add (bad) push enterq (bad) mov test push mov (bad) movabs mov fildl sbb fistl out data16 roll lret (bad) int mov fadds (bad) xor loop and fcmovnbe loope or rex.WB data16 hlt rex.X xchg fistl sbbl pop sbb sub jne movsb fcmovnbe (bad) jle sub xor cs (bad) stos fcmovnu mov rex.RX fisttpl push (bad) stc (bad) jle out lock xchg fisttpl cmp pop mov xchg jnp (bad) rex.RB sub mov mov fcmovnb jg jne cmp (bad) sub (bad) or rex.XB cmp rex.WRB rex.RXB cmp stos lahf (bad) adc js test xorb fildl add and jl pop retq fwait xor (bad) gs pop icebp adc rcll scas cmp cmpl (bad) (bad) mov (bad) lahf push leaveq loopne test psrlq mov cmp movsl push (bad) mov int3 (bad) fwait ds jne rex.WRB js sarl pop fwait rex.RXB imul pop fildl sub mov cli jmp rex.WXB jge push sub rex.R imul rex.WRB rex.W fs fwait test rex.XB cmpl cmp cmp sub fcmovnbe mov (bad) fisttpl xor cmp (bad) (bad) in (bad) mov fcomi retq in cli scas xchg mov mov (bad) mov (bad) xor iret popfq pop cmovg mov jae (bad) sti fldt push loop pop (bad) (bad) stos lods cmp jmp jno pushfq scas jo js int ror sbb fcom mov movabs (bad) and add outsl and cmp mov mov fistpl sub fstpt stos imul pop (bad) outsl sub pop xor add lock out out jmp pushq mov sbb fistp (bad) lock and rex.WR add (bad) fildl jno push mov xor mulb jb je xor (bad) pop mov mov out cmc nop cmp (bad) adc scas jrcxz (bad) xchg xor sub mov fdivrl ror addr32 rex.R mov (bad) pop cmc pushq or pop jnp xchg mov addr32 shlq jne adc jns movabs or cmp jp (bad) addr32 add (bad) cmp int3 ss pop popfq lret cmp and adc (bad) (bad) adc mov (bad) int3 cmp mul in andl mov movslq cmp rex.WRB (bad) mov (bad) cmp jp pop and adc subb and fcmovbe cmp out (bad) cwtl pop (bad) xor xorb fsts mov test cs push (bad) loopne mov push lahf in rex.XB pop xchg and sub adc sub pop insb insl (bad) or xchg sbb fistpll sbb (bad) pop sbb jle xor sub scas cmpsl int stc pop push fiaddl ja (bad) sub fstps cld rex.RB sbb test mov (bad) movslq pushq (bad) stc (bad) pop pop (bad) (bad) fcompl sbb pop cltd pop add mov sbb loop jge xchg out iret mov pop loopne (bad) lea (bad) cmp pop fadd xor nop rex.X fwait in out fist (bad) adc mov pop xchg fbld pop movabs clc cmp pop (bad) stos mov insl adc mov (bad) stos andps mov rex.R pop rcll xorl rex.R pushfq popq xchg mov faddl out lods rorl stos imul fwait cld rex.WX pushfq rex.WR and flds adc ffree fldl movsl addr32 (bad) nop cmp jmp sbb cmp fs rex.WB (bad) cwtl xchg pushq movabs xchg nop mov shl (bad) mov std je (bad) out adc (bad) push mov fcom sub cmp (bad) fstpt in (bad) adc movabs and fcmovne mov (bad) xor rex.WRX xor hlt (bad) xlat iret add fstpt (bad) and fisubr xor xlat (bad) fistl jbe add rex.WRB fwait add fidivl (bad) pop adc pop jo mov rex.X rex.WR xchg (bad) test push fwait xor (bad) ss (bad) sahf insl fldenv rex.WR clc mov (bad) rex.X fisubrl mov push cmp fistl sbb or insl jle adc (bad) lret sbb cld cs loopne mov mov pop (bad) cmp add scas roll jmpq rex.WR (bad) test sub rex.XB push stc mov out mul rcr or xor (bad) adc (bad) xchg xchg (bad) fistpl in stc add xor fninit mov add in rex.WRX and pop imul test pop xchg and out addr32 push insl rex.WB jns insb pop xchg scas movslq xor cld pop (bad) mov jge pushq xor rex.WRB mov xchg jae std rex.XB movabs pand and mov jl (bad) addr32 (bad) outsl mov in fsubs pop rex.WXB cmp rex.WX adc pop or cmp (bad) movabs mov fcmovnb adc add fisttpl mov nop cmp xchg adc mov movsb imul scas (bad) pop (bad) in jns mov sub (bad) sbb sub pop xchg fldt xlat jl mov cmp cs (bad) fstpt test jns add xor adc cmp rex.RB mov outsb scas (bad) jl jnp pushq out rex.WX mov decb shrl or pop je clc lret mov (bad) (bad) sub (bad) cmp xor rex.WR pushq rex.R adc sub mov scas pushq rex.WXB adc (bad) jnp movsb fwait rex.XB fildl subl callq insb sti hlt (bad) rex.RXB pop es mov ja sbb push stos xchg iret (bad) sub fstl leaveq negb mov imul jle xchg push callq insb xchg loop sbb cmp lods addr32 mov sbb mov adc movabs add (bad) xorb movslq stos rex.WB movsl add cmp rex fwait jl sbb or pop orb retq sub rex.WB cwtl (bad) and movabs (bad) (bad) push icebp sbb (bad) (bad) adc mov mov sar sub ficoml out xchg test out jp add fwait cli and fisttpl pop pushq sub lods (bad) (bad) sub out (bad) enterq cmc jb cmpsb in movabs pushfq pop test pop add (bad) sbb pop fcoms (bad) xchg je jne out and rex.WRXB mov cld (bad) vpxor xchg add cltd rex.WB rex.WX ss fs (bad) xor mov xchg push js fisubl sbb adc test (bad) (bad) icebp xchg (bad) fstpt addl outsb mov (bad) (bad) ds fistpl mov sub imul fcmovbe cltd adc (bad) pop loope sub jge cmp jns test push pop imul and (bad) push and xchg (bad) addr32 (bad) je std mov mov fisttpl sbb js fcomip xchg push xchg xor mov sub test js lret xchg mov mov fsub jns stos rex.WRB pop fstpl xor jl (bad) (bad) cs (bad) add jrcxz sahf jg rex.RXB mov push and (bad) repnz nop mov pop (bad) sub cli adc rol (bad) cld movslq lea retq rorl add xchg xor (bad) and sub outsb adc rorl xor (bad) lret or push (bad) or std rex.WRX jrcxz icebp (bad) rex.W outsb fwait rex.RXB movabs out (bad) imul sbb cmp (bad) sbb jae pop fisttp cli xchg fwait xchg (bad) retq xchg pop adc sbb (bad) or xchg cld leaveq mov negl int push fs outsb int3 test iret rex.R (bad) sub ja and cwtl adc adc test movabs faddl xchg jrcxz and cmpb rex.WR fwait mov lahf cmp jp outsb mov rex.RXB es stos shrb cmp jbe xchg cmp icebp or movabs (bad) stos lret xchg lods mov out out add fwait outsb (bad) hlt movabs (bad) jp cmpsl pop insb fild add jb test add xchg jne fbld leaveq fcmovne scas loope (bad) xor ficoml test (bad) mov leaveq jl rex push int xchg (bad) or imul mov (bad) push mov fstpt mov pop xchg stos rcr xchg push lahf int (bad) jle (bad) jrcxz add cmpsb cmp sbb outsl fldt pop stos (bad) fucomi (bad) jge rex.WB fisttpl rex.WX or imul incb xlat rex.WRB int je push jp in xchg out or (bad) pop xchg xor pushq pushfq xor mov xor (bad) push jge jae (bad) test pop mov xor xor sub lret jnp lahf xchg (bad) movabs rex.WXB jae rex.X out fistl (bad) in (bad) out loopne (bad) fsts cmp cmp sub imul stos add int3 repnz idivl jmp in (bad) pop (bad) enterq fnop rex.R or pushq (bad) (bad) enterq iret (bad) and fstp imul cld xchg (bad) andb push clc int3 sbb jge pop (bad) (bad) stos movabs test rcll pop (bad) pop loope fisttpl adc rex.WR rex.RX js ror cmp pushq (bad) fwait loop jmp mov stos jge (bad) pushq int3 fildll cmp fwait cmp leaveq sub outsb and xor pop jbe jnp addr32 (bad) mov mov insl (bad) cmp adc pop scas adc or sub sbb rex.RX xchg out (bad) (bad) (bad) outsb pop (bad) cmpsb push mov mov callq (bad) sub adc divb gs movabs (bad) int push mov fcmovnu xor fidivl ss movabs cmp fninit (bad) or xchg imul fildl (bad) movabs out rex.WB (bad) push fldt pop rex.WR mov fcompl pop mov fwait cmp and mov movabs idivl jrcxz adc lret lahf jns rex.R (bad) adc cmp sbb mov rex mov sti fildl sub jmp sub (bad) mov bnd jne int3 insl mov fistpl sbb clc cmp icebp shll stc and movsl rcrb xchg sbb fistpl jl,pt adcl xor fndisi(8087 and retq add pushfq rex.WRB vmovdqa (bad) pop fildl pop out pop jno pop fildl negb rex fs rex.XB (bad) sbb rex.WXB adc rex.WXB movl cmpl (bad) xchg fisttpl pushq (bad) jmpq iret enterq fisub cld stc fldt (bad) cmp or mov pop mov adc xor rex.W fwait add adc (bad) fcomi pop cmp (bad) (bad) movabs fisubr out xchg jg cli (bad) fistl (bad) fisubr (bad) or test not (bad) mov fucomi add (bad) lea pop mov lods orl xor cli pop (bad) fistl data16 (bad) (bad) and add jrcxz rex.X xchg shl movsb xchg stc cltd jle (bad) (bad) hlt rclb pop loope insl mov clc pop outsl lods sbb sbb rcrb (bad) (bad) push icebp insl scas xchg and sahf fcmovnu sbb (bad) pop xor sti out outsl add ja stos int mov mov (bad) pop mov shrl push bnd iret (bad) (bad) add and fwait (bad) rex.RB (bad) icebp std fildl out fwait (bad) rorl push cmp cmp xchg rex.RX in (bad) cs adc (bad) mov xchg (bad) fcomi ja or pop lahf xchg xlat jl jge gs insb fs mov pop push loope lods cmp sub (bad) jo movabs and (bad) mov mov stos mov jg rex.RXB fucomi movabs mov pop adc pop (bad) scas (bad) out and fistl jrcxz iret sahf fildl (bad) outsb imul enterq pushq mov outsl jnp rex.XB loop push idiv pop xor cwtl and scas cmpsl fcmovnb xor sbb or sub xor fildl fisubr (bad) mov lock pop cmp or sbb in movabs cmc rex.WRXB mov push int3 xchg xor jmpq repz fwait sbb retq pop sub pop in loop and je mov fisttpl stos (bad) cmp pop jg fiaddl callq loope jno rex.RXB fistpl data16 pop fs cltd in rex.WRB jmp out jmp test (bad) xor xchg mov sbb int jo mov (bad) xchg cltd (bad) lret cmpsl shrb (bad) fucomi icebp (bad) sub rex.X cs out mov callq (bad) sub jnp and mov fstpt lock out lods or xor rex.WRXB movabs add sbb imul fistpl mov fnsetpm(287 (bad) mov mov scas retq (bad) jnp push rex.RB iret fisub fldt (bad) or (bad) or hlt sbb pushfq jae or lahf lret and test fcmovne mov (bad) cmpsb (bad) fldcw xchg retq sub lock rex pop outsl jle xchg jbe lea add (bad) xor and jne xchg outsl xor pop rex.RX cmp sub and mov incb xchg add mov std lea rex.XB (bad) xor fcmovnb xor (bad) pop movabs rex.RX ds push (bad) mov or (bad) cmc sub mov (bad) mov xor cmpsb (bad) movsb pop push (bad) lret jnp push xchg (bad) fldt frstor sbb cmp rex.WB xchg icebp rex.RX pop adc (bad) lods roll (bad) xchg lret push rex.WRX ja (bad) mov (bad) jbe int3 xchg (bad) add jg fistl sbb (bad) lea rcr xor (bad) movsb (bad) out outsl rex.WX leaveq pop pop movsb test rex.RXB scas lret fidivr pop or (bad) movabs fcmovnb (bad) add lods fistl push adc pop mov orb sub rex.XB rex.WRB xchg int3 add jle in xchg sbb rcr lock adc jg pop js test xor xchg lret jp fsubs callq jns and mov mov sbb jmpq fstpt (bad) pop (bad) sbb stc fisttpl cmc in rex.B fcmovnb jp ja adcb mov and (bad) rex.RXB (bad) jae outsl neg xchg insb cmpsb cmp (bad) repnz add jp cld orl or stc pop push rex.WRX mov retq xchg pushq (bad) mov cmp cmp pop scas fisubl or (bad) and movabs mov (bad) (bad) rex.WX pop hlt (bad) mov cmc retq xor cmpsl fildl rex.RX pushq xchg (bad) ja cmp adc pop addr32 mov cli pop fwait rex.WR or cmp imul xchg mov add pop and lret mov (bad) (bad) or sub cmpsb (bad) (bad) fcmovnbe sub out pushq (bad) pop jo ja stos (bad) retq fcmovnbe sti sbb outsl push stc fildl xchg sub sbb ja (bad) mov hlt cmp fistl mov mov cwtl lahf mov fwait loope scas (bad) insb repz shll in movsl (bad) fistl scas (bad) out in (bad) (bad) rex.WB (bad) (bad) xchg fidiv fsubrs sub fwait shlb hlt (bad) cmp data16 push rex.RB pop add rcrl int xor xor fldenv fildl adc (bad) or loopne rex.WXB rex.X icebp insl (bad) (bad) xor sbb sub xchg xchg sbb (bad) push cmp or xor (bad) mov fistl cmp (bad) imul mov and push lods fnstsw pop sahf cmpsl pop (bad) or js mov rex.WRXB add (bad) movabs fistl lock (bad) xor movabs rex.WB subb fucomi pop clc sbb mov cmp pop loop (bad) push out add icebp adc sbb jl (bad) (bad) cli xchg movslq js (bad) fisubrl out loop rex.RX fwait lret fucomip hlt jrcxz rex.R (bad) rcrb fistpll pop sbb xchg cmp (bad) rex.WRXB rex.WB shll pop (bad) fwait addr32 rex pop movabs fs pop std lret lods mov (bad) xchg pop pop gs (bad) sbb mov fistl test push scas xor push cmpsb movsb imul movsl pop push (bad) mov in out lods sbb stc imul outsb sahf repnz pop mov push jne stos and (bad) fldt rex.R rex.WRB mov rex.WXB cmp xor cmp js and int3 test pop rex.WX fildl out sti loope fwait xchg mov xor sbb sti stos lret rcr in rex.W add mov loope cmp push jp retq mov (bad) int3 adc (bad) callq adc fcmovnbe in out mov in jb cld add add adc (bad) rex.WB stc xchg mov pop insb jnp mov (bad) mov rex.WB lock jrcxz pop rex.WB mov pop adc lea sub lret jge (bad) xor movsb repz rex.WXB rex.XB rex.R rex.XB cli addr32 mov std movslq sub rex.W popfq rex.WRB (bad) sub fisub callq or mov jnp jle nop fistl out mov mov out fcmovnu cmpb (bad) (bad) fldenv rex.WRB cs pop rex.RX (bad) iret ja jnp rex.WRX sbb pushq imul int3 hlt adc fistl xor lock pop in and adc (bad) mov mov rex.X xchg enterq cmp (bad) (bad) jne pop (bad) jmpq push ja or movabs nop fs out andb (bad) (bad) rex.RXB or jg (bad) jle lret jrcxz sarb popw (bad) jno movabs movsb je and addr32 cmp frstpm(287 jle clc or pop and mov sub (bad) frstor mov loop sbb jns add stos push js xor mov int3 (bad) (bad) cld rex.B rex.RB jnp (bad) iret lahf fcmovnu sbb sbb outsb sti cs cli (bad) (bad) (bad) rex.XB (bad) je loopne lret hlt pop lea rex.WRB ds or fisttpl int3 test (bad) cmp sub jne fistpl mul (bad) and xor (bad) xor rex.X lea or (bad) nop scas jns mov or adc clc mov xchg jns mov fcmovnbe loop sub movsb mov addl (bad) (bad) (bad) fisttpl loopne add sbb hlt sahf outsb (bad) push callq xchg pop lret cmp movabs cmc mov rex.WB mov (bad) test movabs lods pop rex.XB rex.RB mov sub xor rcrb int3 test xchg (bad) jnp nop mov (bad) xor pushfq stos adc or mov rcrl rex.WB imul rex.RXB or (bad) jge scas mov jle test rex.XB rex.RX cmp pushfq frstor ja sahf (bad) lahf hlt sbb retq roll (bad) mov fwait rex.XB pop xor fstpt imul gs or es repnz cmp (bad) sbb shr mov adc xor rex.WB mov rex lock pop lods stos (bad) movabs rcrl movabs pop xchg fs (bad) pushfq test push (bad) pop (bad) (bad) xchg mov int3 xchg mov mov std and stos xchg loope fwait (bad) lea lods adc ss mov leaveq mov xchg pop jg rex.R lock retq fsubrl sbb mov fildl (bad) and lods xor adc loope mov clc pop and (bad) scas cmp jmpq movslq (bad) in sarb addr32 popfq or sub mov (bad) pushq ficoml out add (bad) outsl push int jns stos or xchg (bad) (bad) roll fnstsw popq test fnstsw pop lret and test pushq add pop mov popfq mov (bad) mov mov nop (bad) cs movabs lret jmpq int3 add (bad) xchg cmp movabs pop and adcb rex.X or mov fwait imul push sbb rex.RX (bad) divps pop fisub mov rex.WRX rex.RX pop xchg xchg (bad) xorl pushq adc movslq int (bad) (bad) jl mov faddp movsb and stos xor rcll cld rex.WRXB jg ficoml stos pop sub lahf movabs (bad) (bad) icebp and mov (bad) test cwtl imul push cmp insb jne rex.B (bad) jrcxz add mov or (bad) lock lret movabs jo xor stos adc rclb cmc movabs std cs adc sub rex.X cs setae mov sub retq cmp fisttpl movslq (bad) callq outsl adc cs sub fcmovnbe decl or jae rex.WRB cli push jnp in mov mov cld lret adc testl xor pop jo lret and js (bad) cmp lock repz push and lret cltd rex.RX pop push (bad) jge rex.R fwait xchg outsl pop test mov int jle (bad) mov lret sbb pushq int in and je fdivr cmovl jbe (bad) fldt sbb mov mov pop pushq rex.WB (bad) out and in xor in (bad) icebp xchg insb pop stc pushq popq mov mov jae lret in sbb mov mov fisttpl loope pushq fistpll pop jae fwait pop rex.RB jmp in fnstenv jae (bad) jge push (bad) mov pop in cmpsb out test stc movsb sahf retq rex.WRB or pop std nop mov xchg (bad) sbb adc push sub retq (bad) retq (bad) push add and rex.RXB cmpsl icebp (bad) (bad) fstps pop rorb cmp (bad) jns repz pushfq stos lret (bad) and shll rex.WR lock mov xchg fsubs int subl xchg test in fstpt lock decb and cmpsb sbb mov (bad) cld (bad) test mov jge sbb in add lahf rex.RX imul not repnz cmp fstl mov pop hlt rex.WXB rex.R (bad) fistl retq jno (bad) jle mov fistpl add pop lods leaveq movabs mov jp cmp fistpll (bad) jo lods fucomi rex.WX int mov add pop (bad) xchg fucomi mov leaveq pop (bad) lods jle movsl in iret adc mov test or loope xor jbe xor leaveq je cltd xchg xchg lods rex.WRX rex.X (bad) jg (bad) callq jnp pushq (bad) pushfq rex.RX cvtps2pd fwait cmp rcll lods out rex.WR rex.WRX (bad) (bad) push mov pop (bad) mov loopne xchg mov mov es cmp fistp sub mov clc jl jbe jp in cmpsl rex.WRB or rex.B gs (bad) cmpsl add or (bad) fldt and or fwait clc jne jb rex.WXB pop pop (bad) jge imul or mov jbe fistpl sbb int3 xchg (bad) adc mov rex.R mov mov or int3 (bad) jmp jle (bad) fwait xchg gs andl add (bad) sub stc movabs fstp xor mov sub jns fstpt stos scas cs jge lods fldt mov xor mov insb popfq adc lea ja mov xchg cltd retq xor rcrl (bad) adc rex.WRXB push loope or sub in test adc stc loop (bad) rex.WRX loopne sbb fldenv data16 test cmc lods jae mov xor pushq stos (bad) in jp shl scas mov sub (bad) adc xor push and rex leaveq (bad) sub or mov mov (bad) jo std cmpsl fwait cmpsl mov jl push fidivrl jrcxz and push push (bad) jno jns rex.WRXB pop sbb lret jp or loopne cmpsl jg add sub (bad) (bad) retq jo xor or (bad) fmull (bad) adc hlt movslq lods out rex.X (bad) (bad) xor jmp rex.WRXB mov xchg movslq jp retq frstor mov jl cmp sbb ficompl cmp in xor scas and sub (bad) stos jl cmp (bad) mov in (bad) sbb je rex.R rex.B rex.RB jnp pop lods in lea push (bad) xlat stc rex.WX fwait mov mov insb imul rex.WXB insb xor push rex.R sbb and fwait jge jrcxz jae rex.RX rex.W out pop (bad) xchg (bad) je cld rex.WX movslq and mov je rex.WRXB jmp (bad) sti sar movsl (bad) cli jnp pop out lods ja (bad) outsl cmpsb loopne (bad) (bad) imul add stos (bad) sub mov push (bad) cld jno stc sub push adc add rex.WRXB cltd out test pop add jp sbb mov pop int (bad) outsl cmp stos test push mov mov jo jne in (bad) xchg in movabs sub adc rcrb push xorb xchg int ds pop leaveq sub rex.RX push rol cwtl outsb sub out jge stos push test pushfq rex.WR data16 (bad) cmp rolb lahf callq in jp rex.XB sub insb iret out (bad) mov imul ror mov in pop rex.W rex.WRB xchg (bad) test jae and sbb xchg nop push scas jl stos mov (bad) mov lret cmp rex.R mov cs jmp fstpl or (bad) movabs out (bad) fstpl rex.WR (bad) xchg jnp sub rex.X movabs pop add pop repz add movabs adc (bad) fildl xchg fnsave sbb xor mov pop sbb adc mov or (bad) xor (bad) (bad) and cmp std push leaveq or jae pop pushq loope in pop sub mov mov or fistl (bad) (bad) ds and rorl mov (bad) cmpsl cld xchg (bad) add (bad) std rex.WX insl pop jrcxz pushq retq data16 imul (bad) pop outsl jle lods pop sbb sarl xor popfq jg loope pop mov xchg or pop fnstenv rex.WR rex.RB addl cmpsl sbb cmp lods fwait imul stos adc xor or rorl sbb mov sbb pushq (bad) clc xor scas rcrb test ds (bad) lea mov (bad) or es out jge gs mov adcl incb movabs mov mov pop movl mov fiadd addl mov scas fldt insl mov gs or fwait popfq jge jne push jmpq mov (bad) fcmovu rex.W rex.XB movabs (bad) lods add pushfq or xchg pop cmp pop ja fisttp rex.RXB jno fisub cmp adc jnp or test sarl fmul push cmpsb (bad) stc jle sbb (bad) lods pcmpeqb xchg pop mov rex rex.WRXB gs sti or rex.XB jnp insl jg (bad) stc push cwtl retq pushfq fwait jp push movsb lahf sub (bad) rex.RXB pushq mov test jnp sarb mov sub sub xchg cli rex.X (bad) movsl push mov (bad) sbb movabs movabs rex.RB rex.RXB jnp adc fistl or movslq cmp lods sbb (bad) sahf and mov fcmovnb sub xchg jb jns fnclex push adc mov push int3 fstpl adcb mov (bad) fs cwtl pushq pop sbbl xor xchg (bad) fisttpl sbb mov pop test mov mov fwait jb push sub outsb (bad) (bad) fs imul xchg adc cltd (bad) jb sbb scas xchg pushq sbb mov jae or pop es mov ss pop stos (bad) push sbb xchg jbe fdivs mov mov out callq jg (bad) push pop (bad) repz int3 or xor movabs stos insb sahf out imul xor mov fisttpl icebp hlt cld fldt (bad) lock out insb and cmp fwait pop pushq sbb sbb rorl (bad) (bad) xor fwait mov movabs movabs pop push ljmp lahf mov retq jrcxz mov cmp sbb (bad) (bad) int addr32 nop fcompl push int3 pushfq and xor (bad) xor fcmovnbe mov out jnp movabs (bad) scas mov fstpl loopne pop push lods adc loop stos rex.WRB xchg int3 (bad) lods fstpt mov movabs push (bad) rcr rex.WB add fildl roll movabs and outsl loopne sbb retq xchg cltd (bad) fldt sub xor adcb sbb rex.WRB out (bad) test clc (bad) adc subl jae sub scas insb jl test fnstenv fs xchg sbb lret xchg popfq xchg jns (bad) xchg (bad) sti mov pushq rex.RX movabs push mov (bad) sbb mov movb jb rex.WRXB mov mov rex.RX sti (bad) mov mov rex.RB xor fildll or ja add rcr out lret (bad) vmovlps pop shll adc jge push cli popq movabs (bad) push int3 jmp pushq jp fild hlt pushq mov jns,pt icebp mov stc ja sbb (bad) iret (bad) (bad) stos (bad) (bad) imul mov lret cmp sbb xchg mov and mov fidivr pop iret add iret addr32 mov and mov xlat adc lea push cmpsb (bad) sahf (bad) push mov (bad) push adc xor rex.W (bad) mov stos (bad) mov push (bad) rex.WXB pushq xor and xchg xor pop xadd jns rex.XB and push pop jo rex.WRB mov fildl rex.RB pop std add sub (bad) mov jl in sbb mov (bad) mov mov roll out (bad) push fs fstpt addr32 int3 test outsb js mov lods push (bad) std rex.RB fldt jrcxz icebp (bad) xchg push out mov (bad) mov fneni(8087 push xchg cmp jo scas outsl xor jp or ja (bad) sub movsl stc xor or cmp sub rclb mov sarb mov xchg out cmp es mov jae (bad) xchg or flds sbb rex.WRX xchg xlat and mov add pushq mov (bad) fistpl xchg mov pop cmc or xor cmp enterq sarl add sbb pop rcl out jge push (bad) cmp andl xchg or pop (bad) (bad) addr32 jns stc mov sbb pop imul and rex.WXB pushq jrcxz (bad) jmpq in mov addr32 notb out adc in (bad) outsb fcmovnbe mulb xchg xchg out cs out pop sbb add imul (bad) int3 xor xchg cli jno xchg add (bad) pushq insb fisttpll movabs ficomp mov push scas sub xchg sub pushfq add retq xor fcmovnbe or (bad) bnd adc xor fldt cmp mov (bad) pop outsb (bad) (bad) stos fildl sbb (bad) fistpl idivl fstpt sub (bad) fcmovnb sub mov fnop fistpl jp xor (bad) mov sub fcmovne xor push (bad) (bad) fildl out incb jno icebp push outsb and add mov fildl mov (bad) pop ss mov (bad) jmp fs sbb (bad) xor fimul std retq sbb in outsl andl (bad) jge (bad) rex.R fildl add rclb pop outsb movabs lods (bad) (bad) mov (bad) push (bad) and cmp decb xor xchg push xor mov sub repz fistl add jp pop pop lret in stos jno rex.WRX and jb fldt fsubs adc cmc rcll (bad) push cli mov push lahf (bad) (bad) test insl and hlt jns shl clc (bad) or cmp jg (bad) scas lods adc mov (bad) (bad) (bad) jno or (bad) cmp movslq xchg cmp in push xor cmp pushq addr32 (bad) rex.WR mov nop mov mov mov (bad) and fildl fsubrs xor xchg and rex.XB pushq lret xchg sbb shr fdivs mov ja fsubrl loope imul jo and fild lods sbb cmp subl rcrb loope mov mov pop mov shll (bad) gs or pushq (bad) mov fldt movabs cld xchg popfq xlat mov rcr mov outsl out push and stos push out shll add (bad) fisttpl fcmovnb testb mov pop retq fwait (bad) rex.WR insl fistl lods push (bad) fprem1 mov (bad) fcmovnu fs lods rcl adc sbb push lods negb pop or jle cmp rex.B icebp cmpsl (bad) imul sbb fistpl xchg rex.WRB mov jae in sbb pop mov xorl pushq mov pop (bad) jle fwait rex push fildl xchg rex.WX xchg (bad) scas fiadd or repnz add pushq jnp (bad) and fwait (bad) lahf mov ds rex.W (bad) xchg pop outsl retq push loope movslq jne xor and mov cmp (bad) jnp (bad) in fcompl or mov mov fisttp xor insb adc rex.WB (bad) neg mov pushq xlat cs (bad) push xchg mov and push jnp mov sub xchg (bad) out icebp je xchg (bad) sbb outsl pop cld ss push sbb sbb ficompl add jge sbb (bad) jno iret movslq pop fimull rex.WRX rex.W repz rex.R lock hlt (bad) sub and rcrb (bad) out mov push (bad) jno rex.WRX and xor xchg mov scas xchg sbb cmp movabs push rex.RX setl (bad) imul gs jne lock push xorl stos rex.R cmp add rex.XB fldt movabs movabs fisttp fwait nop fildl cld in jnp iret push pop sets fistl push cmp in mov xchg fcomi callq (bad) mov hlt ss sub (bad) fistpl outsb mov fcmovne (bad) push rex.RXB stos sbb push and rex.X lahf xor sub jl push (bad) and (bad) (bad) (bad) jns popfq jb or lret xor push callq (bad) (bad) in jg pop fiaddl push fneni(8087 mov rex.B negl movsl (bad) jae xchg or xor ja cmp fildl and adc popfq addr32 movsl adc addr32 or enterq icebp pop cmp callq pop sbb push and mov cmp (bad) xchg (bad) (bad) xchg fldt xchg (bad) jl mov (bad) sub rcl icebp scas insb fldt pushq lahf pop retq jp,pt rex.WX js push sbb (bad) cmp jnp mov leaveq sub (bad) xchg mov retq jmpq pop cmp rex.RX mov repz retq psllw xchg (bad) sbb int push enterq repz fwait add mov rex.W cs (bad) mov sti in mov (bad) mov js jns fldt shll fcmovu imul rcr lods mov xchg sbbl sub insl sub jne leaveq or rcrb cmc jae rex.WR addr32 jl fstpl cmp icebp jnp sbb lods mov or jno cs xchg sbb pushfq (bad) pop lret lock (bad) (bad) xor cld test rex.XB fwait addr32 fimull mov jne sbb or out jne mov movabs (bad) mov out cmc mov jp mov roll pop flds loope (bad) in and fldcw std pop push jne std mov jne (bad) mov ja cmp rex.WR add test or (bad) out cmpsl rex.WXB cwtl sbb jg sti dec stc sbb cli lods outsl stc mov movabs add push data16 imul rex.WRXB and cmp jg push outsb (bad) xor pop mov addr32 movabs fisubl (bad) fs in scas cmp (bad) jae mov pushq mov xchg std (bad) lcall std lret cli pop retq (bad) out mov sub jrcxz ds std (bad) xchg hlt push movabs loopne (bad) add in adc push out loope rex.XB cld (bad) rex.WRXB sub (bad) sub jl loope rex.RXB xchg push nop stc pushfq (bad) or and (bad) nop or mov mov mov vcvtdq2ps sbb rex.RB or jp mov stos jo js jnp xchg mov cmpsb callq movabs loop (bad) lods jns jrcxz out icebp jnp add (bad) and stos xor rex.W insb pop mov xchg out (bad) pop imul mov mov ss rex.WXB push stc sbb loopne or lods xchg mov jbe in repz scas movslq test je callq (bad) xor pop sbb add mov rex.WR (bad) pop mov es mov fldt (bad) (bad) (bad) shrb (bad) pop jge and jno cmpsl (bad) (bad) rex.RXB rorl mov popfq out cwtl test add rex.RB jb mov (bad) and rex.WB (bad) sub pop or std cmpsl mov test pop int jo jnp (bad) movsb xchg retq xor testl repz mov lea es rex.WRXB lahf rex.WRX es pushq stos (bad) fstpt sub js rex.WR fs push lock or (bad) xchg fs jp rex.WRXB (bad) (bad) repz (bad) mov imul rex.B rex.WX xchg icebp jle fldt rex.R fidivrl fisttpll negl insl rex.WR out lods in jns insl xor out add (bad) jmpq fwait adc adc mov lret cmp and (bad) push cld jbe (bad) mov out push sbb (bad) clc out mov mov pop int sarl mov mov and mov mov jl rex.WB cmp sub cmpsl mov (bad) sbb and fistpl scas push lods sbbl mov xchg mov (bad) (bad) fistpl out hlt lods roll pop (bad) xor leaveq sahf (bad) (bad) movabs jge push mov sbb (bad) sbb rcr in (bad) (bad) lods jnp rex.W rcrl sbb cmp (bad) shrb cmp sbb jge imul xchg (bad) pop fildl jp pop mov movsl mov clc rex.WX pop stc mov movabs movabs jmpq sahf xor pushfq sub int sub pop sbb (bad) movabs addl fistpl out sub and div cld jnp push mov lret callq mov fistpl (bad) sbb jne mov rex.WR movabs (bad) out pop movslq xor sbb push pop (bad) fist mov out sub pop jge (bad) (bad) outsw or negb in rex.WB cmp mov fdivrl (bad) test fnstcw (bad) mov (bad) lock rex.W sbb cmpsl sub xor xor pop or movabs jo lahf xor retq xchg imul negb cmp in cmc push or lea mov mov scas mov (bad) xor sub rcr sub (bad) stos movsb test addr32 mov lret test vpavgb insb cli mov push movabs and jmpq push shr addr32 lret fild jb (bad) sbb pushfq (bad) es pop sarb jg cmp adc (bad) fwait cld pop rex.RX or (bad) scas mov cmp rex.WB and xor jg iret and xor lock (bad) jrcxz push (bad) push sbb cmove (bad) lods iret xor add rolb test pushq rex.RX mov fisubrl xchg rex movsl cmpl adc out lahf sbb and rex.WRB (bad) push retq add jge mov jb (bad) (bad) and jns sbb sbb jbe outsb sbb jp cs imul retq in push rex.WRB (bad) and (bad) ds rex.WRB in rex.RXB (bad) cmp mov (bad) je or mov jnp jb xor pop leaveq rex.R xchg (bad) (bad) callq outsl andl jg add (bad) (bad) (bad) push xchg nop or jae mov fcom (bad) fldcw push fcoms xorl or scas cld pushq push (bad) mov lods decb mov pop jp faddp in jo rex shrb jg mov sbb mov and add (bad) scas push lahf (bad) jl (bad) mov mov jns lods jae ficomp leaveq and cmp movabs sbb ja cmpsl sbb adc nop jge (bad) sub fs or rex.XB rex.RB sub xor and nop je sub rex.RXB pop fcmovnbe mov or cmp pushq xlat retq (bad) movabs pop pop rex.RB ja and cmp movabs fisub mov mov rex.XB sbb xchg xlat imul jg (bad) fcomps cltd and sub mov jae ror minps cmp pop xorb addr32 nop jg jl xor test mov cmp sub fsts (bad) mov or mov xor or fldcw gs sbb xchg movl mov or xorb mov xor and mov pushq or (bad) mov imul mov xchg cs rex.RX test jmp mov fnstsw mov xor sbb (bad) mov stos out nop xor loopne lea sbb fstp mov (bad) pop es jmp (bad) (bad) add (bad) rex.RX ficoml xchg jrcxz (bad) mov rex.R jmp xchg rex.WRXB (bad) xchg or out cmpsl (bad) jle rcl pop (bad) push rex.WXB sbb repz mov mov (bad) stos mov and (bad) pop loop pop mov sar (bad) xchg cmp fincstp popfq fild (bad) roll out (bad) insb jp cmp mov xlat rex.WRX sub iret (bad) test test cmp sub mov (bad) (bad) add int add xchg fcmovu (bad) addl fstpt (bad) (bad) fstp (bad) js (bad) int fcomps (bad) pop insb in cwtl jnp loope xor rcr (bad) (bad) jae sbb out rex.WXB movslq rex.RX fcmovbe fildl ds js int insb fcmovnb adc fs data16 (bad) or insl std sbb rex.RXB pop data16 mov adc loope xchg mov sbb pushfq leaveq or cmpsl in (bad) pop mov (bad) ss rex.RXB fstpt or retq push mov (bad) fcomp cltd data16 add rex.XB add movabs pushq and xor (bad) jbe xchg pop pop push rex.WR andl sub or (bad) loope (bad) out and mov outsl jnp push mov add mov fs test fisubr fcomi repz xor fucomi pop rex.RXB push fist fcomp cmp mov (bad) xchg fstpt mov scas and mov notb (bad) lock rex.RX or (bad) xchg and fstpl xchg adc movabs sbb jp fcmovnb mov and ficomp xchg and pop nop stc vcmppd (bad) (bad) jmp je std pop in cmp jmpq (bad) in sbb imul repz or and cmp sarl test pop (bad) mov add lret xchg or pop out add test retq out xor fstl pop jmp imul sub pop out add (bad) int3 fidivl rex.WB cmc mov sbb iret retq and adc imul fnstcw or cmp xchg sbb fsubrl gs pop xlat push (bad) add movsb jp callq pop out add iret mov std fidivrl (bad) rex.RB enterq (bad) jmp jg sbb js (bad) fwait cli mov gs out lods or mov mov icebp shll outsl (bad) pop movabs lret pushfq negb mov rex.X rex.XB lods cltd jno pop (bad) (bad) (bad) jp lock scas fiaddl test fsubrl cltd jge xor lods fsts lods jmpq cmpsb test (bad) cmp mov rex.RB faddp pop in lock and (bad) loop in jmp movsl mov add mov sbb xchg xchg lock callq push (bad) test rex.XB (bad) jo sub pop movsl push sbb and movabs xor cmc rex.XB js push lea leaveq pop test out nop jle rex.WR mov stc (bad) repnz and cmc (bad) je pop jnp rorl cld (bad) fst sar sbb addl mov sbb or mov cmp (bad) rex fbld jp rcr loopne pushq pop (bad) cmpsb out push pop movabs cmp (bad) xchg xchg and push xchg popfq (bad) (bad) fmuls ja lret and rcr push rex.WX rex.RXB rex.WRX (bad) mov mov (bad) jl rex.W (bad) mov cmc movsl (bad) or or jnp mov sub rex.RB jbe lret int3 jrcxz lods adc (bad) ja mov sub or lods outsl fnsave jns pushfq fdivl jnp push xlat rex.XB pop mov fwait pop sub test (bad) outsb sbb (bad) je or push or enterq push lret rcl (bad) jg pop sahf xor or fild jae cwtl or mov (bad) pushq sub (bad) (bad) mov cmp leaveq and rorb mov (bad) insl rorb mov sbb (bad) (bad) fidivrl jle (bad) push repz (bad) fsubs jns fcomps outsl sbb (bad) movl (bad) jb (bad) add cmpsl rex.WR xor sbb rcrb mov pop loope (bad) cmp and mov lret pop int ss sti jmp fist and mov mov mov repnz imul movsb rcrl or int shrb rex.WB out add and rolb pushq (bad) test cmp imul add rex.RXB add cmpsb jmpq decl pop rex.RXB (bad) gs scas pop or movabs callq jno mov addr32 movabs xchg jnp xchg sbb mov idivl ficomp (bad) mov frstpm(287 jl (bad) push xchg (bad) test test sub hlt cmpsb (bad) (bad) xchg scas rex.WXB pop pop clc insb (bad) mov pop (bad) jbe lret xchg stos pop ds cltd pop ljmp jge test lahf shlb pop push movsl cmp mov xor mov stos (bad) or sub cmp retq clc jl cmp movsb lods xchg cmp jle xor jnp or (bad) (bad) sub push mov add (bad) fisttp mov (bad) sbb cld outsb rcrl imull insb rex.R icebp ds jne jl cli jge cltd shl rex.WR adc pop (bad) clc push or mov rex.WRXB rex.RXB jo cwtl je jns lods negl jp pop cmp rex.WXB add cs mov push (bad) mov lods add adc movsb (bad) jno test push test mov add add sub and test fs (bad) (bad) pop xchg rex.RB int sub add mov clc push jl pushq jns mov mov std testb (bad) push sbb enterq (bad) (bad) decb or add movabs mov or cmp out scas jae (bad) (bad) and rex.WX imul fisttp std (bad) cmp jle push xor loopne rex.WRB pop and add scas movabs mov insl fdivp imul push sti add xor rex.RXB idivl xor mov mov (bad) out outsl (bad) cs mov lea rcl sbb mov rex.XB jmpq or rex.W push adcl (bad) movslq pop sti retq xlat push jbe gs shrb pushq pop pushfq xchg jno imul retq cmpsl ja fwait test rcr popfq add hlt adc rex.WR push jno fcmovnb fwait movabs imul (bad) rex.WRB (bad) scas mov jne pop nop jp jnp lods subl fcompl movsb rcl mov jrcxz fwait rex.XB cs sub xor lahf fs mov out popfq mov gs or movabs xchg je mov fucomi jl xor xchg movabs or rex.WR pop jmpq rex.WX push rex.XB out jne fldt xchg sbb push mov pop mov cmp rex.RXB fstp movslq mov callq pop mov retq insb cmp (bad) jnp cltd cld mov fldt movabs sbb jb sti add out cmp pop outsl (bad) cld fistpl loope (bad) andb test rex mov or lahf push pop callq rcrb rex.WX jnp loop (bad) cli rex.X pop xchg loopne or pop (bad) fldt scas ds fldt xor cmpsb fldt movabs jp (bad) push rex.WRX rex.WB pop jle fcmovne rex.WRXB rex imulb jnp pop rex.RXB ja out rex.WB jnp sbbl cmp adc mov outsb (bad) mov cmp jp clc (bad) sub mov insl fwait leaveq sub xchg mov (bad) mov sub cwtl lret (bad) cmp sub (bad) push rex.RXB callq jge pop (bad) sti and jl stos jbe out imul icebp pushq hlt cmp stos or mov mov negl (bad) and int3 cli rex.XB and fistl mov (bad) pop adc movsl xlat rclb (bad) xchg fsubs xchg fistpl fld fildl rex.RX mov rex.WXB cmpsb ss xor rcl (bad) fistpl (bad) mov xor ficompl xchg pop add sahf sub cmp roll out (bad) mov and out xor movslq in movsl (bad) (bad) add push fcmovnbe (bad) stc mov (bad) rex.W push popfq ss test xchg sbb (bad) xor loope add and icebp pop (bad) (bad) (bad) cmc imul and movsb rex.WX pop pushfq leaveq rex.XB enterq push (bad) cli lahf lret or jns retq pop mov xchg callq (bad) out or pop adc jmpq jmp neg push pop lods and pop xchg xorl movsl lods fistl pop repz fistpl jae and rex.R (bad) xchg fwait lea fldt cld adc pop imul imul out pmuludq (bad) test (bad) rex.WR rex.WXB sahf (bad) jl sbb mov sbb rex.RX fimull decb insl mov rex.WX test fisttpl add rex.XB xchg enterq fistpl xlat enterq adc scas sub jno cmp in (bad) xor cli add or lret mov push mov pushfq out pop (bad) xor mov and jne push mov add (bad) mov jae mov xor fisttpl jbe sbb mov mov mov fwait cmp mov cwtd add (bad) rex.X cmp enterq rcl pushfq loop mov fist imul retq cmpb jrcxz add gs sahf cmp sub lahf es pop rex.RX retq mov mov mov adc cmp (bad) int3 movabs (bad) xchg scas lret icebp (bad) (bad) (bad) adc fucomip mov xor fildl rex.WRXB js jrcxz test jnp xchg rex.X add cmp clc (bad) cmp fwait (bad) push sub fldt add fildll and pop mov add xor jo mov pop movd (bad) mov movabs loope jo fcomi cmc xchg cld cli sbb pushq (bad) xchg rcrl (bad) adcl (bad) (bad) push add stos rex.RB adc int movabs fdivrp rex in pushq jmp (bad) imul fisttpl mov insb (bad) mov rorb add rex.R (bad) data16 movabs pop (bad) mov and rex.R cld jge jl (bad) js cmp xor or rex.RX xchg stos jnp movsl rex.WRB fistl (bad) mov mov mov xor (bad) sbb repnz ds retq push rorb (bad) xor rex.B cs (bad) push rclb (bad) push rex.WXB out andb movabs cmpsb mov pop out sub fidivrl std fisttpl pop jp lret pop cmp (bad) fwait pop movslq fldt enterq (bad) (bad) adc sbb pop pop fucomi jp xchg cmp (bad) (bad) jae mov and push (bad) adc cmp jle stos xor fisubrl pop iret (bad) jrcxz fistpl test pop popfq (bad) es imulb rex.WRB adc sbb pop (bad) movabs jnp or jo (bad) lret in xor jge sub fldt sub push sbb fwait (bad) jae rex.RB jge,pn notb fildl iret cli (bad) mov xchg movslq rex.RXB mov pop jns mov lods div cwtl (bad) pushq sbb (bad) pop enterq mov (bad) push fildl jb push rex.WR rex.WX xchg sbb cmp or (bad) xor (bad) (bad) fcmovnbe movabs callq gs cmp rex.WRX rex.WB rex.RB (bad) mov ja push gs (bad) fcompl cld jp in mov movabs cltd repz pushq pop and cmp (bad) sbb in mov (bad) scas cmp mov xchg push sbb fldcw xrelease sub pushfq orl pushq movsb sub (bad) in jne push push jl gs fwait rcr mov xchg rclb xor retq or push rex.WB stc (bad) pop cmp add popfq cmc stos rex.RX push leaveq mov jmpq es mov adc rex.WRX pop test icebp add xchg xlat fs orl jp jbe sub xor rex.WR je mov adc sbb or and repz (bad) pop lock ja push sbb cmp data16 lret rex.WX outsb xchg xor rex.WR (bad) push pop movabs pop sahf cld repz sbb sbb scas notb pushq rex.WX adc addr32 adc (bad) outsl push mov jge sbb add pop pop (bad) rex.W icebp imul cltd push or xchg std rex.X xor jge lea ja push cmp int push rex.RX mov pushq adc and mov jo mov (bad) loope (bad) add jnp rex clc ss movabs pop retq fsts jne pop loopne xchg jns and jl add cltd rex.RXB pop fisub imul (bad) rex pop mov and je rol test sbb jmp push cmpsb movslq (bad) movsl scas andl loopne callq rex.WB loope sarl xchg insb fwait outsl imul test js fisttpl mov rex.XB push pop rex.RX int3 test sarl (bad) jl rex.XB adc cmp ficoml jle (bad) adc pop push orb sbb jnp (bad) xor (bad) cmpb std rcr (bad) data16 (bad) movsl xor or add int jmp jae mov cmpsl (bad) jae (bad) mov sbb lods stos (bad) movabs fcmovb cmpsl cmp nop hlt jo lret (bad) jns jne cmp rex.RB xchg or rex jns cmpsb sbb movsb loopne xlat (bad) outsb fnop stos cmpsb fsts mov mov rex.RX fidivrl xlat enterq mov (bad) (bad) rex.XB wrmsr cwtl shlb lahf pop scas test data16 iret xchg or (bad) pop mov rex.WR or rex.RB repnz cwtl fwait add (bad) mulb mov xchg mov out add cmpsl push pushfq jb (bad) cmp sarb push (bad) add rolb add mov jno mov (bad) mov jge xchg mov rcr cld fdivrp sub scas (bad) (bad) fstpt (bad) adc (bad) je (bad) pop insb insb in test xor jge pop sti (bad) cltd cmp jnp xchg fildl cmp fiaddl rex push sarb fwait mov fisttpl (bad) mov pushfq mov cltd nop fneni(8087 notl sbb jne pop fisttpl andl sbb add fwait and movabs pop mov mov jge (bad) ficompl xor sub jnp rex.WX rex.RX scas fisttpl jg rex.W scas jb (bad) movsl cli popq repz callq scas pop (bad) shrl addr32 repz or rex callq push xlat repnz (bad) ja rex.WRB xchg shrb (bad) jnp (bad) or loopne retq and pop rex.RX retq push test fisub jns push xchg es cli sub loope or push (bad) sbb fisttpl sbbl es lods cmp loop fidivrl add sbb and out retq mov rex.RXB (bad) sbb iretw xor cld cwtl sub sub push ficoml sub callq mov and pop add clc sbb sbb movabs jnp pop lea sbb xorl pop movabs cmp lock jrcxz pop fisttpl cmpsl (bad) (bad) sbb pop in in hlt fiadd fcmovne or xor xor sti pop mov stc shlb pop imul rex.WX jnp xchg fstpt (bad) in movabs and pop fisttpl lret jge jbe xchg lahf pop xlat stos mov imul (bad) mov jnp std movslq test or cmp outsl mov (bad) (bad) insb xchg mov (bad) int3 nop cmp pop fistpl mov or pop jnp fldt xor cs movabs (bad) add orb (bad) (bad) (bad) out (bad) loop xor in and stos lret rolb imul repz rex.WRXB pushq rex.XB xchg cmp add rclb mov adc clc (bad) cmp push add rex.WXB rex.X sbb addr32 or push mov and fsts movslq mov mov jnp clc rex.WXB pop fistpl add cmc rex.WRB add jnp push or (bad) ds in (bad) ja (bad) fldt addr32 push scas jle cmp faddp cmp stos mov (bad) (bad) lcall movslq fcmovnu pop xchg hlt or rex.WRB insl fnstsw mov cmpsb push (bad) es rex.RB in (bad) (bad) data16 retq lea and negl out pop and nop (bad) enterq rex.R cmpsb in stos xchg cmp or iret clc cmp in imulb or and (bad) (bad) or mov stos leaveq rex.RXB cmpsl movabs push add loopne mov rex.WRB stc sub sbb add movabs out (bad) or cltd in jae rex (bad) in (bad) lcall pop popfq pop mov lods fldl2t fmull mov retq sar mov pop std pushq enterq fistp fisttpl mov leaveq or es lea jge xchg (bad) jns and ffreep (bad) sti cmc int shll xor insw mov int3 cmp fist (bad) fcmovnbe lret gs rex.WR imul mov test roll insb (bad) jnp nop rex.RX lea jl lret push and (bad) vunpckhps loopne fcmovnu popfq imul pop push adc pop enterq cmp (bad) xchg fldt mov push (bad) andb jnp movabs pop insl cmp jle sbb rex.R movabs jnp es nop mov (bad) (bad) (bad) cld fsub jns xchg mov adc pop rex.R push div jnp sahf pop jae sbb jmpq lods lret (bad) mov test movabs fiaddl movslq (bad) pop (bad) (bad) cld outsb sub retq mov cltd adc clc adc adc rex.WB pop fs rex.R jae insl xchg xchg pop jnp lods mov rex.WXB es lret shll add mov fimull loope loope in js xor pop stos mov xor jg push push sbb jo push mov sub (bad) jne mov push lea rclb int sarb lahf jmp loope (bad) (bad) (bad) jno pop movsb sbb pop (bad) or cmovo fstps pushq divb and mov pop or (bad) (bad) mull gs fstpt mov xchg adc cld stos mov mov push movabs (bad) (bad) (bad) jp rex.RX in fldt (bad) ds jnp cwtl fistpl cmp ja mov (bad) xchg pop push push jrcxz fwait rex.XB xchg mov adc xchg rex.WRXB es (bad) (bad) xchg sbb sbb lret pushfq movabs andb hlt xorl (bad) and fistpl add push movabs nop js ffreep mov scas mov movabs iret pushq (bad) fisttpl scas loop repz (bad) xchg rex.XB rex.WRX pop imul lods pop cmp out jnp fucomp or rex.WXB jge,pt mov fistpl mov cmp (bad) mov (bad) xchg cmp sub push fisttpl or movabs jmp or mov mov rex.RB rex outsl mov fneni(8087 out (bad) and pushq adc pop pop sub cmp ror loop je xchg mov (bad) cmp rex.WX movabs mov add out push (bad) rex.RB rex.RXB rex.WB rex.WXB xor jmp push iret mov (bad) pop fwait sbb sub rex.WB nop callq outsl mov mov loop pop pop int fistl cmp xchg sbb (bad) xor jne cmp (bad) fidiv icebp and sahf (bad) nop test (bad) sub jl rex.WXB movabs cmp (bad) (bad) or pushq sbb push test sub xor iret mov sbb (bad) and jbe fistl (bad) (bad) fildl sbbl jne ss lret (bad) js xor pop sub push (bad) (bad) rex.RB (bad) (bad) mov subl (bad) rex.WRXB movslq (bad) mov cli in add repz movsl loop popfq cvtps2pi ficomp and scas movabs (bad) retq mov cli fcmovne callq out (bad) (bad) int or mov jnp in addr32 outsl push fistl adc enterq jle imul fidivrl pushq fwait (bad) imul fsub xor (bad) (bad) lods fstpt sti int out xchg std outsl mov add ds mov jmpq pop test (bad) sbb pop jrcxz mov cmp mov pop (bad) mov lods adc xchg pop rex.RX sahf sbb lods (bad) rex.R lret mov cmp sbb callq stc es (bad) rex.R add (bad) mov rex.WRB rex.WXB insb in (bad) jns movabs (bad) hlt push rex.RB jno mov jns pop loope pop leaveq retq (bad) (bad) xchg cmpsb push movabs out rex.WB pop jns mov xchg push mov (bad) lret test movabs cmpsl loopne movabs (bad) or cmc xadd rex movsl mov (bad) enterq fwait loope loop sbb pop push stos jbe or sbb mov xchg rcrb sarb mov and test clc jnp pop (bad) cli and sbb lods push (bad) cmc in (bad) push insb test rex.WR xor pushfq popfq std out addl cmp std (bad) (bad) push (bad) (bad) sub sarl negb scas jle sbb xor (bad) xchg rorb cli (bad) lock in outsb mov mov mov (bad) xchg rorb scas jrcxz fldenv adc imul in (bad) stos ja sbb sub int3 jnp mov rex sbb xor cld and push out enterq scas and icebp xchg (bad) bnd cwtl fwait js xor adc sbb fldt pushfq and (bad) pop and (bad) idiv movabs (bad) (bad) enterq cmp mov retq mov (bad) addr32 jp sub rex.XB fldt rex.X cs fs imul (bad) (bad) mov (bad) gs (bad) rex.WRX xor (bad) jl (bad) hlt es in roll cs cmp (bad) cmpsl xor lods rclb (bad) pushfq adc mov fnsave nop pop (bad) ss pop (bad) adc add iret xor jns (bad) cltd add fs rex.RX fwait (bad) adc pop and (bad) cmpsb in in pushq mov jmp pop sbb (bad) pop fwait ds mov cmp repnz rol jae (bad) or movabs or or push mov loopne retq (bad) insb add test (bad) (bad) jle lods and lret (bad) (bad) xchg rex.RXB (bad) mov fcoml (bad) mov mov lods mov (bad) rex.WRB repz (bad) movabs cmp incb rex.X mov jmpq fdivs or cmp pushq rex data16 cmp sub adc and pop or stos (bad) (bad) lret (bad) (bad) shl add jp push (bad) clc mov in jle retq or mov sub fcmovnb enterq in lcall (bad) leaveq (bad) mov add insb xor or imul std insl je (bad) fisttpl jo rcrl fsubl mov push mov imul data16 retq cmp jnp imul clc mov in push int3 push cmp pop mov loopne jae leaveq jle xchg mov (bad) movslq xchg leaveq (bad) pushfq stos xchg rex.RXB rex.WRXB cs or fildll fcmovnb loopne lods mov pushfq pop fisubl cmp xchg loope jge out (bad) lods neg cmp sub (bad) fsubs movslq sti fistl (bad) pop out (bad) lahf je mov xchg rex.WRX mov ja pop mov cmc fstpt xchg adc rcll (bad) sub jne xor and fildll nop push (bad) fidivl (bad) fnop xlat sbb sbb jo movslq pop sub xchg rex.WR leaveq mov jnp adc xor (bad) movabs rex.WRX in fiaddl movabs sbb pop xchg ja iret xchg mov (bad) fcmovnbe jns sub rorl out (bad) in cmp fldt push cmp ja sbb sbb fild stos sbb ds out (bad) mov jg push jnp repnz (bad) mov fistpl or cmp adcl sbb jnp cs ja push int rex.WR mov pop (bad) repnz pop enterq jmpq movabs movabs lret xlat cld add add outsb fsts out mov imul fistl lods int rclb in idiv jae jrcxz roll xchg (bad) (bad) outsb push pop mov rex.WX test adc push mov (bad) rex.R adc jrcxz (bad) pop (bad) push add retq jno (bad) sub std icebp rex.WRB je jbe pop std int3 rcr (bad) lret (bad) (bad) sbb outsb rcrl movabs movabs fdivr fwait (bad) lahf jmpq pop cmp in (bad) (bad) icebp rcl (bad) cwtl in (bad) and fistpl (bad) cmp sub rex.WRB fldt cli (bad) movsb push rex.WR out jnp push jmpq fstpt (bad) (bad) adc std pushfq lret add (bad) fwait shll and cld int sbb or jp ror xor (bad) (bad) cmpsb rex.B fistl mov fcmovnb (bad) outsb rex.W mov pop sub retq adc fisttpl (bad) shrb or (bad) xor movsl add jno cld cmp (bad) (bad) roll fistl popfq rex.RX in test xlat (bad) (bad) scas mov fistpl repnz adc cmp (bad) test ds pop mov (bad) mov xchg adc adc (bad) push loopne lret stos out out enterq mov pop (bad) and enterq (bad) addr32 std jo shrl (bad) push ffree adc fdivr outsl push pop lret rex.RB add (bad) stos (bad) addr32 mov sub rex.XB sbb repnz movabs sbb rex fidivr popfq in ds fstpt jno pushq out mov (bad) lods pop fwait outsb mov (bad) out std in fwait cmp mov (bad) (bad) int3 cs pop xor rex.XB in jnp rex.X pop (bad) mov (bad) mov rex.WXB mov pop rclb and and cmp rex pop data16 (bad) or (bad) and rex.WRXB orl leaveq retq pop mov rcll sub (bad) jnp iret repz rex.W movl push lock pop pop mov mov and mov popfq push (bad) nop pop cmp syscall in mov xchg (bad) rex.WRB fdivrs (bad) rex.RB fildl loop ds or mov cmpl push adc jnp lea pop rclb sahf (bad) pushq jge fwait mov and (bad) rex.WXB (bad) fcmovnb pop pop pop adc fildl xchg pop shlb push cmc or jrcxz (bad) cmp test movabs test (bad) shrb pop mov mov lret sarb rex.WR (bad) or (bad) mov (bad) insb add xor rcr mov loop gs (bad) mov xchg sbb sbb fistl rex.R cmp push and fisttpl (bad) (bad) and test insl cmp (bad) pushq add jb jmpq fwait mov or fwait (bad) cmp (bad) fcmovnu lret hlt mov int3 in cmp mov adc xor jg fcmovnu or test mov fcmovnbe xor jmpq mov enterq rex.WR push jg fcmovne (bad) rex.WRX rex.RXB sarl add iret in (bad) mov adc add adc mov lods fildl mov sahf xor sub test repnz xor jl sub cmp (bad) movsb lods rex.WR xchg jne mov fdivrs cmp rex.WXB sarb xchg add fwait mov jbe retq xor rolb fistpl fstpt add (bad) fbld fildl xchg cmpsl cmp lea retq fildl lret rex.WRX adc adc sbb (bad) mov (bad) sub fildl pop pushq cmp fcomi clc (bad) scas pop adc (bad) (bad) retq sub popq fldl2e pop in sahf (bad) sbb mov adc sub xchg imul push clc (bad) or mov (bad) cmpsl jae sub in mov and out (bad) rex.X pushq lock movsl out movsb fistl (bad) (bad) movabs int (bad) clc (bad) pushq scas fistpl sub mov fisttpl rex.WXB cmp push sahf out test decb xchg sub (bad) fstpt pop out jmpq fistpl jo mov mov ds sbb cmc adc jae pushq (bad) fs sbb repnz (bad) jb (bad) lret rex out fildl fisubl xchg (bad) scas fldt icebp rex.WX adc mov and movslq rex.B fcmovnb mov in sti pushfq mov mov rex.RB (bad) sub fistl (bad) (bad) loope test adcl adc fs (bad) pushq and rex.B sub xorl fldt lret (bad) xchg mov fldenv test xor adcb mov rex.WRB mov or push adc fwait sbb (bad) rex.RB movabs and pop sahf fsts push xchg (bad) insl or jbe,pt (bad) push sbb fsubl in (bad) (bad) loop and mov (bad) mov je stos sti lods mul mov decl xchg cld fstpl rex.RXB mov jbe sub fdiv adc jno mov mov xchg (bad) test movabs outsb pop (bad) (bad) add cli cmp rex.WX lret sbb bnd cli movsb (bad) push sbb imul mov (bad) cmp pop repnz (bad) sbb xchg mov mov fdivl jnp (bad) (bad) (bad) adc mov (bad) or test mov movabs stc retq xchg (bad) callq mov insl (bad) (bad) lock mulb rex.WR cmc rex.RB mov jno jnp jle mov (bad) mov data16 jno neg xchg rol xor out std push adc push mov fstpt mov fistl repz rex.WR rex.WRX xchg fldt (bad) add imul (bad) fwait stc hlt mov (bad) imulb rex.WRB (bad) sahf jnp sub fisttpl adc (bad) (bad) mov push add or test fisttpl icebp mov lock insl pushq int rep jnp jne loop sbb test retq movabs cmpsb pop rex.RXB xor callq iret jl (bad) jno stc (bad) adc (bad) adc pushfq and in fisttpl imul rex.RX frndint enterq cmp xchg add (bad) add scas mov xchg cs xchg rex.RXB stos and mov mov xchg rex.WRB jl fildl rclb jo mov enterq fstpt jp retq fildl retq jnp rex.RXB pop lahf stc push pushq lods pop cmpsb rex.WRX insl xchg fstpt and add or rex.WR (bad) (bad) xchg fcmovne mov fcmovbe cmp jbe mov fcmovne rex.B jp xor and imul pop rex.WRX retq sbb sbb pop in ss out callq xor (bad) int mov (bad) cwtl out jmpq outsl in fsub push xchg fstpt movsb mov rex.RXB rex.X (bad) pushq lahf fldt mov addr32 sub sbb adc (bad) insb adc xchg in (bad) nop fistl rclb (bad) mulb lea or mov push mov movsl push (bad) fildl mov fldt sbb cli sub (bad) lods pushfq sbb popfq movsb fildl rclb sub xchg mov jmp (bad) mov xchg frstpm(287 in add pop int fldt sub adc mov mov mov sbb (bad) rex.R mov (bad) fs xor jge and pushq cld (bad) add xchg (bad) bnd retq rex.XB (bad) in sbb (bad) add pop mov loopne (bad) and jmpq scas xchg xchg (bad) pop jrcxz stos rex.WRB (bad) (bad) retq lods (bad) pop or je pop fcmovne fild pop pop sub fistl mov sbbl (bad) jnp add (bad) sbb cmp retq orb jmp (bad) lock mov (bad) xor frstpm(287 sbb cmp (bad) (bad) jb xchg enterq fstpt push movsb (bad) in rex.WRB stos adc fistpl stos (bad) enterq fldt js pop cmpsl jno jne mov retq rex.W jmp retq iret mov fcompl fsub (bad) fist jns pop jno int sbb iret jnp data16 jmp pop add jge insb and jmpq jne mov (bad) lret xor jnp cmpsl pop rex.RXB in push lods and imul rex.WRXB rex adc enterq sbb jmp sbb out sbb xchg (bad) rex.RX fwait (bad) sbb fstpt scas mov sbb cmp cwtl (bad) mov jge out rex.WRX gs int3 (bad) fwait pop (bad) adc in fstpt jmpq movabs lret mov fistl (bad) push out fildl js jno add imul push jnp add pushfq push lock shrb fldl fildl cmp loop sub push and movslq sbb movabs fsubs add adc fildl or jl data16 cmp (bad) sbb mov ficompl int adc out rex.WX fisttpl in xchg (bad) int3 xor in sbb push (bad) cltd or mov jae retq fmuls (bad) add lahf (bad) fstpt fisttpl jns push fisubrl pop data16 jnp test enterq int sbb (bad) lahf xchg movabs jnp sub stos mov pop mov fstpt leaveq xor test (bad) lods fucomip movslq data16 cmpsb addr32 (bad) fcmovnbe cld pushfq or jg loope xchg pop jnp pop push cmpsb pop lahf enterq sub and loopne jg adc fcmovnu xchg insb callq pop adc (bad) push xchg movabs (bad) jnp (bad) sub movsb jae pop push sahf push add mov (bad) (bad) in (bad) and pop lods rex.W es out rex.WRX pop mov lods (bad) push (bad) sub fstpt movabs fist movabs xor jl (bad) xchg loope fbstp xor mov xchg sbb mov pop roll mov adc mov fstpt pop and mov repz cltd mov and fisubl adc enterq ror (bad) mov mov (bad) sbb mov icebp (bad) and imul (bad) mov push fisttpl iret (bad) jb out scas fistpl jno jns insl cld mov es mov jae js push cmpsb jp (bad) (bad) xor (bad) (bad) es pop cli sub insl cmp retq ja rex.WX and mov sbb imul mov pushq adc xor movsl push xchg fiaddl cmpl xchg insb mov mov (bad) int xchg (bad) or fistl push movsl stos ja mov rcrl (bad) and pop sub sbb fwait sub sub xor movsb fwait out cmp sbb xchg fisttp xchg adc pushq fcomps push sbb fs clc test clc movabs (bad) mov (bad) jrcxz sub in rex.XB mov jo jp cmp rex.B (bad) movslq in sbb cmp fwait sub (bad) xchg es fisttpll (bad) movb adc imul fidivl (bad) xchg add iret out (bad) xor (bad) jp in (bad) (bad) fildll test mov xor or push cmp pop xchg cs mov (bad) fcmovnbe (bad) adc xchg (bad) gs xchg mov sub jp rex.R pop rex.RB cmp callq adc xchg scas (bad) fmul mov (bad) int mov fldcw jrcxz idiv test mov jo push pop (bad) data16 fildl rex.WX loopne jno test jg jne mov mov out shl cwtl cmpsb pushq jle test js pop rex.RB je fstpt sahf (bad) adc in ds fildl shlb (bad) (bad) sbb pushfq pushq (bad) shll movabs fimul imul mov mov fistpl fs (bad) push add testl cmpl fistl fimul jp movabs repz pop rex.WXB jg jbe (bad) jnp (bad) jmpq enterq test rex.WX test rdtsc xor lock cmpl std imul fstl push (bad) loope,pt cmp xchg (bad) or xchg movsl pop sbb sbb shrl sub (bad) jno repz stos rex.R shlb (bad) icebp repnz jae rex.WXB jbe pop push adc xlat addr32 push stos mov (bad) or cmp icebp in or (bad) in lods mov fidiv fndisi(8087 shrl and retq in (bad) fstpt mov test loopne rex.WR fstps insl cli sub and xchg pop loope jns (bad) adc (bad) xor ficomp leaveq movslq outsb js mov outsb fwait (bad) rex.RX ds sbb push (bad) mov or scas fwait xor push rex.RX cltd out lret fwait mov cmp repnz (bad) sarb xlat add iret fisttp rex.WX adcb sar xchg pushq push sbb push cli (bad) outsl jno lret push ficomp cmpsb scas (bad) pop movabs shlb (bad) (bad) lret cmp rex.RX push (bad) mov (bad) (bad) (bad) movabs and insb fs fcmovne data16 movsl (bad) (bad) jle rex.WRB test push (bad) sbb xor sbb fcos fwait rex.WRB out sub or cmp sahf xchg mov mov rex.RXB rex.WB rex.WX mov (bad) fisttpl (bad) (bad) adc push hlt fucomi (bad) xor lahf sub stos popfq (bad) cmp xor (bad) jrcxz (bad) insb (bad) rex.WRB rcrl mov std jnp push (bad) (bad) and imul (bad) fwait sbb std in push cmpsb xchg mov pushq add and and xchg out pop push adc es fisttpl (bad) sti xchg jge vpminub adc jmpq cli mov mov sub rex.RB (bad) rex.X ja push imul cmp sbb mov out fistl pop cmp sbb rex.B repz sbb xor lods loopne leaveq xchg or mov mov fcompl xchg callq or mov leaveq int3 pop jl clc fstps pop pop nop enterq fstpt nopl (bad) sub (bad) (bad) jnp jb js pop or rorb add sbb cmp (bad) mov (bad) sub (bad) rex.XB or (bad) clc fbld pop xchg mov adc jne ficomp (bad) or fsubrl cmp lea (bad) std jmp test cmp retq outsb cld xor fwait xor in movabs pop sbb rex.WB sbb lret fildl jns movsl and mov int3 mov lock xor xchg cs jno leaveq loope mov mov lods mov gs loopne lret jb sub cmp movabs mov sbb shrl rex.RXB add fcmovnb movsl mov xchg mov fldt sbb (bad) test cs add push fcmovnb pop hlt mov pop cmc (bad) (bad) mov mov pushq jne shll test (bad) or sbb rcrl (bad) rex.WX fidivrl rcr rcl jp movsb mov mov sub lods (bad) xchg (bad) lods xchg lea (bad) out fisttpl mov mov push fildl out adc and cmpsb cwtl (bad) (bad) cmp push ror add xor or pop lods jbe loopne fbstp (bad) jno mov jnp fiaddl (bad) shrb popfq sbb push push insb mov cmpsl fimull sbb out or pushq enterq (bad) (bad) pop jbe rex pop data16 mov (bad) (bad) ffreep loopne (bad) (bad) (bad) negl (bad) fcmovnbe or rex.X fistl xchg insb jl and mov mov cmp mov cmp in mov rex.B mov mov shlb iret sti (bad) xchg mov enterq pop (bad) rex.X adc in cltd fwait xchg sub rex.WR mov fisttpl and (bad) fstpt mov jle pushfq or repnz jmpq (bad) push sbb push xor rex.WRXB cmp fstpt movabs (bad) pushfq cmpsb int pop sbb push adc mov fidivl fildl xchg fbstp in movsl pushq push xrelease mov mov xor cmpsl xor pop xchg xchg sbb add ds mov xlat scas mov fisttpl lock leaveq testl jo jnp jne cwtl scas out lret or xchg (bad) mov popfq mov adc (bad) fwait (bad) icebp loope adc (bad) (bad) mov push in callq fbld push or jmp (bad) xor lods (bad) ja mov andl repnz rex.X jp movabs (bad) vmovntps cmp movsb flds (bad) push lret cmpsb rex.WRXB fldt (bad) rex cmp add pop add movabs mov (bad) or (bad) loop sbb pop jmp jno xor es mov jns add insl jnp test fstps lret fstpt ss in adc fisub cmp callq (bad) sbb mov jae mov push cld (bad) rol sbb (bad) mov out mov cmpsb mov fisttpll rex.R leaveq pop iret pop int and mov test (bad) mov cmpsl push rex.WR rex.WX cmp xchg imul adc add sub jbe fidivrl jmpq jp ja fildll out mov (bad) sbb push adc jbe and lock lret test movsb fcomps xchg fcmovbe cmp and loopne movabs xor in pushq sbb or jle and (bad) sbb (bad) loopne insb push hlt shr jle popfq rex.RXB loope push in fucomip sbb in sub push jle pop pop lret xchg (bad) lods leaveq sub jmpq sbb push mov jns lret mov hlt cmp pop subb adc xlat jmp rcr test pop pop mov rex.X addr32 iret sbb notb jmpq (bad) or (bad) int (bad) lret mov mov repz (bad) jo cmpsl pushfq pop rex.XB fstps shrb adc jge cmp loopne jle (bad) (bad) or repz stos int3 add cltd int3 rex.WX cs xchg add (bad) or lret (bad) fnclex adc cld retq fldt rex.RB fsubs movabs push cmp subl rcll mov movabs movsl (bad) movabs rex.WRB jmp out pop rex repz lock mov pop mov or xchg rex.W xchg (bad) fild mov mov fisttpl mov push jrcxz pop and movsl rolb jno fistl add pop incb stos xchg mov sti shrb jnp jg fldt jp sub pop rex.B jl sbb (bad) or (bad) sub test adc ss (bad) leaveq movslq ds fstpt (bad) xor imull ja mov mov jg icebp std test cmp test subb mov retq fmul mov mov (bad) rex.B retq fmuls fstpt sub mov out jnp jp jle es (bad) cli (bad) add xchg cmp fs (bad) leaveq push xchg mov jnp sub out fstpt stc movabs (bad) push cmc and mov (bad) loopne or addl cmp adc stc add xor pop or fwait sub rex.B jnp xor mov xor (bad) push (bad) mov std (bad) xchg rex and ror (bad) sbb movabs insb loope fwait xchg mov pop jmp (bad) rex.B (bad) fdivrs icebp rex.WRX (bad) rex.WB (bad) cmpl ss push pop xchg sahf movabs jnp imul xor xchg push jo (bad) fisttpl jrcxz add xchg negl loope sub insl scas mov (bad) cwtl mov sbb fldt mov popfq ja (bad) fs fwait sub fisttpl rex.WR sub cmp mov (bad) and (bad) loop (bad) fcom (bad) (bad) xchg fldt fwait movslq (bad) xlat (bad) fstpt sub mov sbb add scas sub es fwait mov and cmp mov sbb stos fs xchg test ss jb mov addb fldt sahf pop ror add test pop (bad) xor push (bad) mov fcmovne jns loop gs test or (bad) mov cmc movsb rex.WR sub rex.RX fcomi in (bad) rcll ss loopne jo (bad) insb pop sahf lock or pop jbe sbb xchg xor (bad) rex.WR sub test sahf rex.R (bad) mov and movhps cmp outsl jb (bad) mov xchg pushfw add mov and rex.X mov icebp pop jg add mov ds fisttpl mov and or xchg jo imul movabs out cwtl jmp fisubl (bad) (bad) stc scas icebp fldt pop add push pop jno xorl rex.RXB sbb jrcxz push movslq xchg imul loopne stc rex.WR jno fldt loope mov (bad) xlat (bad) hlt sbb pushfq es jbe push mov mov movabs lock mov mov stos out or (bad) fs out push push mov (bad) in dec rolb cmp mov (bad) mov cmp clc rcr jns jp outsl (bad) pop pop imul mov ds rex.WRX sbb rex.R (bad) xchg enterq add cmp (bad) jnp cmpsl mov (bad) shrd push cltd mov ficomp (bad) xchg sbb loope (bad) and cmpsb push loopne (bad) pop rex.WX cmp rex.W rex.RX and stc mov adc xchg sbb (bad) rorb rex.WRXB add pop xor jl enterq pop rex.W fildll jmp data16 mov add lods movabs out cld xchg lock imul (bad) enterq xlat movslq jle (bad) rorw (bad) jmpq push (bad) scas cltd pop rex.XB notl sub leaveq mov out lock hlt stos or push clc callq pushq adc rex.RB rex fcmovnb add repz orl pop rex.XB outsb (bad) jo loopne addr32 push icebp (bad) (bad) (bad) jnp imul sbb movsl (bad) xor mov lahf cmp sbb xor add sbb (bad) fistl adc rex.X jb test rex.WX adc sbb popfq rex.RB fcmovnb rex.WB rex.RX imul xor pop rex.R imul cmp pop jno mov (bad) leaveq cmp test and fcomip pop movabs jmp rex.W adc push rcrl mov jnp (bad) in fistpl (bad) lods icebp fistpl stc mov sbb (bad) xchg (bad) sbb push movabs xchg fdiv cs add sbb pop mov mov xor (bad) enterq sarb rex.RXB imul (bad) jb xchg jno (bad) rex.RX fistl movsl mov iret lea ss or and mov or rex.R movsb cmp jae add (bad) (bad) jbe retq idiv sub outsl insb rex.WRXB pushq (bad) std lret cli rex.RB cld or pushw (bad) jge lret in (bad) mov addr32 rex.X mov mov (bad) rex.WB movabs mov cmp or in push mov rex.RX rex.X mov push rex.WR fwait (bad) adc cmp pop mov (bad) ds movabs insb cmpsb xchg push sub out sub sti xor movsl mov add jle (bad) (bad) rex.RXB repnz rex.WR fisttpl (bad) lock cltd xchg (bad) add pushq cmp int3 rex.WRB movabs pop fildl in cwtl imul rex.WRXB movsl outsb lret mov stc ja and (bad) fisttpl rex.WRXB cmp (bad) ds addr32 cmp cmp (bad) add (bad) add xor lret int test sarb lods mov cmp (bad) rex.WRX pop fcomi test imul fstps in sub mov (bad) lret (bad) (bad) loope test divb and mov add mov and test pop movabs add push or cmc or fistl mov mov push jo pop (bad) stos sarb sbbl fcomi in iret rex.WXB lods stc (bad) cmpsl (bad) lea mov rex.W mov sub cmp mov fmuls retq push mov jb fldenv or jl scas fmul rex.XB retq add jmpq rcr clc imul push (bad) retq (bad) pop scas fild emms movabs cmp mov test scas fistpl rex.WXB mov in (bad) (bad) repz insl fcmovnu mov add lods rex ds (bad) idivb push fwait xchg pop rex.R cmp mov mov cmc and repnz jnp cmpsb mov rex.WRX (bad) (bad) pushfq (bad) fistl fs rex.R (bad) fistl es repnz mov cmp rex.WX fxch or lods pushq fildl jge cltd cmp in std sbb adc (bad) fisubrl jnp adc scas loopne retq (bad) and rex.XB imul rex.RX repz (bad) in je mov sub callq mov iret rex.B enterq pop mov cmp or (bad) push retq add imul (bad) sbb icebp adc nop push mov and sub fcmovne add mov leaveq cmpl lods insl jle xchg xor cmc (bad) (bad) (bad) or xlat add cmp mov mov jne sbb ffree xchg fnstenv or (bad) pop ds loope sbb jl or push (bad) jle xor sbb or (bad) cld xchg popfq ror cmp jmp je orb movslq jmpq pushq (bad) icebp fbld push (bad) xor cmp fwait (bad) mov push (bad) sub push fsts pushw (bad) (bad) jnp cmpsl pushfq int3 (bad) (bad) (bad) xchg (bad) xor pop xchg adcl jg in scas out or rex.RB mov add mov fnstcw outsb cltd iret jno (bad) mov jg mov icebp stos lods retq jge mov push mov and rolb add pushq (bad) push push (bad) fsubrp loopne jnp xlat (bad) loop pop cmpsb sbb loop sub sub stos pop cwtl mov movabs mov (bad) pop (bad) sti jae (bad) rex.WRXB push sahf sbb mov orl leaveq push jrcxz xor (bad) fsubrp rex adc cmp (bad) in and rex.XB in (bad) shrb pop sarl pop adc pop std fldenv jne rex.RB mov and xchg insb stc push stos push cmp imul (bad) jnp jl adc push mov pop push add scas jns lods pop mov jns (bad) mov xchg stos sub xchg mov rex.WR jg xchg push and mov (bad) (bad) or and cmpsl (bad) rex.WRXB fstpt xchg cmc pop and or (bad) lret pop or xor callq mov gs jo cmp xchg (bad) rex.WRX (bad) and ja out fcmovnb or push rcll insl (bad) mov retq pushq mov (bad) jmp (bad) jb mov (bad) jp xlat movsb (bad) xchg insb pop rcrl jb cmpsl sahf fldt data16 icebp hlt rex.WR shld sbb fnstsw rclb cwtl mov movabs jge (bad) test (bad) (bad) xchg mov fstpt add clc pop push jns add sbb rex sbb push fwait rclb pushq (bad) int3 cmp cwtl rex.RXB and rex.RX movabs sub (bad) rex rex.WRX mov cmpsb (bad) rex.RB mov sbb mov jae imul xchg (bad) (bad) adc xor jge push imul movabs pop xor movabs adc rex.W pop rex.WXB cltd pop push cwtl icebp mov xor sahf cmp out or xchg rex.WX lock (bad) (bad) jno or fnstenv xchg loope movslq ja xchg stc cmp cmpsl and adc xchg rex.WB (bad) mov pop sbb or sbb fidivr add repnz fcoms outsb sub movabs jne (bad) fstps xchg push pop or sbb jle sub rorl mov rcr mov scas xchg pop cmp lahf icebp and movabs movsb pop adc and mov add mov cmp sbb (bad) stc jae out lods pop adc and push rex.WB repz (bad) fadds mov rcll loope mov jb rex.RXB rex.WB mov xor mov (bad) mov xlat rex.R gs scas enterq pop xchg loopne or adc sub ja jno mov mov testq (bad) (bad) or movsb sti jrcxz in adc cltd bnd (bad) or (bad) outsl cmp int addr32 sbb jp mov jb pop or add rex.R (bad) insl or and push outsl cmpsl adc add or (bad) ss sub and cmp or shrb sbb sbb jl mov (bad) push xor (bad) cmc add std push jns (bad) xchg int add sbb mov sub stc pop sub cld out sbb (bad) in and (bad) cmc xor adc sub (bad) int3 mov rcrb subl pop stos push xor sbb sub cli cmpsb lret pop mov movabs pushq mov cmp lea (bad) (bad) je insb or cmpsb movslq fildl and in pop sti adc imul push sbbl test and cmpsl (bad) lea (bad) jmp sarl jnp jae popfq pop mov mov mov add loop fs subl mov push stos fcmovne cwtl insw test (bad) mov je sbb sbb rex.RXB or xchg lahf (bad) add iret (bad) sub and std add sti mov outsb shrl jmp int and callq (bad) rex ss movabs fstpt xchg mov mov (bad) (bad) xor xchg test push fsubrl cwtl sub loop in xor and (bad) rclb je rex.XB fs fisttpl mov pushq push adc sbb and fcmovnbe and std or pop icebp xchg pop xlat fidiv movabs mov (bad) cmp pushfq icebp (bad) pushq (bad) sbb push (bad) sub sub and mov fisttpl lods retq sar rex.X (bad) mull (bad) pushfq cmp xchg mov (bad) push movsb xor scas fcmovnu cmp or and (bad) fldt sbb (bad) (bad) (bad) test mov jle mov fistp mov push jne cmpsb adc sti lock xor int mov es lea (bad) (bad) and int lahf fisubl jle test cmp cs fidiv addr32 jrcxz repz divl rex.RX scas hlt fistl xchg rex.R pop or xor loop pop jg out fcomi jg cmpsl (bad) xlat (bad) adc in cld rex.RX or push pop push push pop int3 or stos xchg sub cmp movsl pop mov add cwtl (bad) mov (bad) ss outsb fldt mov (bad) (bad) pushfq rex.RB cltd movabs rcl mov outsb (bad) mov mov rex.R sub cmpsb movsb pop add sbb rex.XB mov (bad) movabs insl and sbb sahf xchg cmp pop jrcxz nop mov fildl cmpsb xlat push insb xchg mov movslq fistpl and int3 cwtl mov iret rolb cmp (bad) in outsb sbb mov movb xchg fwait pop cvtdq2ps sahf xor movsb cmp icebp stos rex.RX pushq stc lret xor int jae sbb and int push cwtl imul push fwait (bad) lret loopne add sbb movsb add and movslq (bad) cwtl and (bad) adc loop cli stos or pop ja in and rex.WX (bad) stc add fcomi lods movabs rex.WB lock xchg jns iret or movabs (bad) imul imull loop adc retq rex.WRXB pop pop fisubr fisubl mov mov pop iret or rex.X push (bad) imul jnp shrb adc or (bad) mulb cmp fldt cmp in (bad) rcrb decb movsl fisttpl pop (bad) pop fidivr and sbb (bad) rex.WX add jno outsl jmpq fcoms push mov sub fwait (bad) (bad) gs or in jg (bad) nop shrb in (bad) jp fisubl lahf rolb loope rex.W jae test (bad) (bad) mov (bad) addb rcll pop mov rex.B repnz pushq rex.RB mov add stos jrcxz cli cmp in xor fistl sahf pop cmp jnp xchg imul mov in repz rex.WX sub lret (bad) jnp and sub xchg repnz or add sbb mov rex rep (bad) fsubs fsubr (bad) (bad) mov cld mov push lods pop pop mov fild cmp push jno (bad) xor (bad) jg (bad) je sub xorl movabs imul jns addr32 iret fdivl (bad) cld (bad) test xor jge scas rex.R stos xchg and cmp pop cmp rcrb imul xchg jb or sub iret (bad) xlat out loopne cmp pop (bad) (bad) push jle callq jne (bad) pushfq (bad) pop (bad) rex.X (bad) mov pop jg retq movslq rex.WRX jnp,pn add xchg sti cmp rex.WR fildl sub fildl sub pushq ds mov add cmp or (bad) or rorl (bad) add out movabs mov (bad) imul fcmovne sub faddl (bad) jle rex.XB (bad) (bad) rorl fiaddl rex.WRXB or xchg mov enterq cmpl rex.WB movsl (bad) push pop in (bad) pop int3 (bad) jo rex.WXB movabs xchg (bad) pop xor (bad) pop test rex.W lods (bad) rex.WR xor adc flds (bad) jmpq adc rex.XB movslq sub rex.RB adc and fadd rex.RB (bad) mov callq imul mov mov and cmp rex.RX sbb sahf jrcxz (bad) (bad) xchg push xchg add (bad) out sub es xor test enterq add (bad) ficoml pop loope mov jno pop xchg pushq sub jg pop (bad) and jnp outsl xchg push (bad) popfq xchg (bad) mov jno imul mov xchg adc or jmpq jb rex.R pop xchg (bad) rcll pop rex.WR fsubr andb xchg xchg pop mov mov push pushfq push (bad) in movabs mov xchg jl pushq fwait sub (bad) cmp mov (bad) jrcxz addr32 cld rex.RB stc push (bad) insl fmuls rex.W jbe add mov (bad) (bad) (bad) movabs stc mov (bad) sub add test imul movslq sti outsl fcomps xchg imul test sbb (bad) imul insl (bad) pop movslq (bad) or int jne jg (bad) jmp pop or (bad) jns (bad) jae leaveq or sub rex.WXB movslq test push int3 push in mov (bad) jb cmp jnp test lods and sbb int3 in iret movsl sub cmp ss cmc stos movsb cltd (bad) adc fnstsw jge (bad) xor clc jnp nop (bad) mov fiaddl (bad) loop (bad) push xor stos mov pushq outsl xchg push pushq movabs lret rex.W mov jb pop stos fcoms xor xor push rcr (bad) mov rex.XB (bad) pushq (bad) fildl jp imul movabs fisttpl (bad) rex pop pop jmpq mov cwtl adc (bad) push sub sti mov xor enterq sbb rex.WRXB orl (bad) (bad) (bad) xor hlt test outsl jns int3 imul mov cmp mov rcr jle xor retq fstpt out mov cld (bad) popfq (bad) mov xchg insb jne adc (bad) add hlt or ss lret rorl fnsave rex.WX (bad) out fcmovnbe (bad) jrcxz jo stc fistpl loopne movabs cmp jl (bad) lret or cmp (bad) test lahf (bad) fstpt (bad) mov (bad) (bad) std nop (bad) jg sub (bad) push fucompp sub adc jnp (bad) ja pop lahf or pop sub mov test sbb rex.WX sbb pop add or clc pop sbb sti sbb push movabs jns sub pop fildl cmp cmp repz out nop fimul xor sub (bad) jg sub xchg sti clc (bad) adc in movl mov imul add xchg test data16 (bad) (bad) mov (bad) mov scas rcll or mov xor sarl (bad) fistpl sub mov fucomi movabs cltd and scas adc xchg jo out movsb push add sarl mov fldt pop mov pop movabs xor scas fcmovnb jp cmpsb rex.X rex.WRB pushq out fisttpl sub (bad) pop push mov out fldt sub (bad) jge sahf xor lret ds fstps rex.B (bad) jmp pop and mov es cli or fcomi add scas fwait adc fwait subl (bad) push cld movabs movabs movsl fidivr (bad) hlt fwait clc (bad) jo (bad) ja fisttpl fstp mov pop fwait (bad) jmpq (bad) xor fwait adc (bad) mov push mov mov icebp je (bad) retq rex.WB mov rex.WB pop stos mov (bad) lret (bad) movsb fildl imul orl insl pop fcomi sti mov out push or movabs outsb cli xchg push (bad) (bad) xchg pop and movabs clc (bad) or retq pop lahf shlb lret int3 push pushfq cmp repz (bad) rex.WRXB jnp jbe std iret xlat imul lahf (bad) ja outsl pop cmc loope jnp mov shl fcmovnb fs jbe imulb push (bad) mov adc xchg cmpsl ficoml adc enterq clc sbb mov pmaddwd movabs mov jbe mov stc loope sub rcr mov repz popfq xor fldt fisub jae xchg cmpsl xor (bad) ds adc addr32 fcomi (bad) xchg push (bad) or outsb rex.XB rex.WRXB adc addr32 out (bad) add jnp (bad) sarl imul or rex sub xchg outsb add cltd stos fwait addb fstpt mov jle movsb jne (bad) test fildl hlt xor adc mov fcmovnbe (bad) push (bad) icebp and fsts rex.WX rex.WX cs out addr32 fnop lret pop push pop rex.WR cld fldt lock in jnp mov icebp add fldcw mov (bad) jnp pop loop mov (bad) sub sub cmp movabs jge je sbb testb fcmovnb pop int pop sub cmp (bad) (bad) rex.B (bad) xchg push leaveq sub sbb iret push mov mov fs (bad) push rex.WRXB jo sub ja (bad) jae jg rex.XB pop mov mov rcll mov rex.WRXB rex.WB ss sub adc jne jnp fmull xchg lock out lea movslq retq pop and jrcxz rcrl js fildl sub lods sbb sub fildl mov cmp stc fcmovnu cmc movabs pushfq insl add sub insl ds push imul mov and movsl (bad) mov retq scas (bad) push mov and rex.WRB (bad) jnp out and mov rex.WB rex.WR in fisttpl cmp sarl jmp pop (bad) and rex.WRX xor fbld (bad) mov hlt in sub cmp mov sbb cmp jne pop (bad) fcoms pop cmpsl lods xor and rex.WRXB sub and outsl cmp movabs jp fistl cmp mov ror add stos cmp lods rex.WRX js mov stos imulb cmp incl lahf int rex.RX (bad) divps test insb cld cmc imul sti cmpsl jbe xor fwait cmp and fidivl mov test hlt fwait pop xchg pushq push or test movabs (bad) repnz xor mov and stos adc pushq cmp div cmc icebp xchg sbb (bad) movabs rex.WXB mov cmp adc rolb jrcxz in int fldt (bad) leaveq (bad) xor (bad) jo jb and neg ja callq push cld rex mov and fistl fistl (bad) (bad) outsl sti add add cmpsb out std pop stos cmp clc cmp cmp rex.WXB pop sub (bad) add jrcxz cmp retq fstpt xor out movabs pop (bad) xchg or add (bad) movabs fildl rex.WXB icebp cwtl fisttpl mov (bad) gs pop jmpq or es movsb rex.R push jge pushq lret ds xchg xor (bad) sbb add rex.WRXB (bad) (bad) pop rex.WR data16 jp (bad) icebp loop and push roll movabs cmp jo movsb jrcxz xchg add (bad) jle jmpq subb lea mov movsl (bad) (bad) (bad) pop outsl sub pop test cmc mov clc pand jmpq rex.X pop (bad) xor pop adc pop mov add mov pop movabs mov xchg pop sbbl gs (bad) ljmp imul xchg add jae es js mov pop je cmp sub xlat xor mov (bad) jns (bad) lret rex.RX movslq push and (bad) (bad) xchg cmp xor movsl lahf bswap imulb (bad) imul sub rex.RB (bad) in jnp xchg adc (bad) scas push in sahf imul rex jl mov (bad) (bad) adc es jb movslq cmp dec pop and mov push (bad) popq je jg jb scas push push sbb xchg sbb cli cmp pop cwtl mov mov cltd push add in (bad) rex.R ds lahf and and rex.RX (bad) in iret addr32 xchg fistpl mov add or (bad) jns adc push fcomi sbb insl rex.WRB jl sub fistl xor rex.X rex.WB cld mov xchg fninit rex.XB push insl push mov xchg in jnp add fisubl rex.WR (bad) jg (bad) cld in loopne pop pop fdivs (bad) icebp (bad) fwait sub stc insb (bad) mov pop rex.RXB fwait mov xlat stc jrcxz scas (bad) push cli mov fcomi cld push ss mov lods ja jmpq fwait mov (bad) mov push cmp hlt negl fstpt (bad) xchg (bad) xchg push in inc and sub cmp imul gs fcmovbe cmpsl (bad) (bad) sbbl sahf je imul (bad) pop pop loop cmpsl fcoms pop and xchg cwtl movabs fnsave push mov fldt jne pop fistpl stos jo mov movabs retq cmp (bad) (bad) adc cs rex pop imulb ja iret jne cmpsb cmp xor fisttpl movabs lods pop (bad) rex add push test rex.WB outsb lods push pop mov fisubl fistpl out rex.WRX cmpsb mov mov cld imul imul ficom jl rex.WR mov sbb callq xor insb fwait push pop fstpl (bad) jns pop cmp addr32 andl leaveq outsl mov rex.WRXB hlt shrl jl mov ja icebp mov (bad) sbb add cli (bad) jge pop add in cmp rex.RX (bad) (bad) xchg (bad) pop fwait rex.WRB sub (bad) movabs pop lret scas movslq fidivr (bad) sbb xchg xor sub cmp pop cmpsl lret stos xchg fdivrl incl adc jg fist in pop lahf movabs xchg rex.R rex.R andb movabs stos (bad) ds xchg pushq rcll pop jo jle xor sarl rex.RXB mov or fstl test jnp imul xor cltd mov data16 test mov fldcw xorl (bad) mov popfq (bad) retq mov sbb mov mov sbb xor (bad) lock jnp cmp sub fucomi movabs push pushfq out xorl loop pushq scas fstpt mov adc (bad) pop and enterq fcmovnu data16 push movabs (bad) (bad) insb xchg imul in and in mov rcr push xor shll push fstpt scas xchg pushq sbb mov jl jp movabs in retq add frstor rex.WB pop rex.X pushfq hlt addr32 mov insl or sarb mov adc loope negb rex (bad) xor stos test rex.WX fstpt rex.W rcrl add push popfq jnp ss xor fnop cli jne test pushfq (bad) fildl jb rex.WR scas (bad) retq (bad) sbb (bad) mov out mov xchg int iret (bad) sub pop cmpsl push sub pop (bad) fadds (bad) pushfq insl rex.WRB in fwait sbb (bad) (bad) bnd xchg xor (bad) jbe sub rex.WXB fstpt loope in je (bad) xor (bad) adc pushq movabs mov movsl fldt or and stc adc lret fstpt cwtl hlt xor (bad) sub loope xchg (bad) fistpl jns xchg int mov cltd repnz pop fs or fcmovnbe movabs mov fisubl push ds sub and cs (bad) xor jnp rex.WRX rex.W iret xor push (bad) cs sbb test movabs mov lods sahf rex.RB mov cld pop xor idivl test (bad) rex.WXB (bad) movsb (bad) fucomp mov loop loop fnsave or imul (bad) fisttpl sbb fldt test jbe cwtl xchg mov adc stos push xor mov (bad) xchg rex.XB (bad) xchg fldt (bad) push add in mov retq mov jg push cmc (bad) out adc sub lret fistpl pop cmpsl int3 fisttpl out (bad) push in mov faddl scas adc iret xchg jmp mov (bad) out (bad) xchg callq xor sub rex.WXB lock cmp mov mov rex.RX in and rex.B adc repnz (bad) or movabs pop pushq icebp ja callq rex fcmovne sub rex.WRB sub (bad) shlb in movsl fstp pushfq loopne (bad) shrb pushq (bad) xchg (bad) pop movabs jb push icebp add sub cmp out push ss add loop cmp pushq cli (bad) mov jno sbb gs cmp push adc (bad) jae test je (bad) push rex.X (bad) rex.WRXB pop xchg push js jns jle nop jno (bad) mov (bad) rex.WRB lret mov jle mov loop repz pop pop (bad) (bad) rex.WX jbe (bad) stc sbb repz int sbb sbb mov (bad) insb mov (bad) popfq fidivrl (bad) out xlat lea pop sti adc loopne rex.W and cmc cmp sbb xorb out mov in sub je (bad) sbb xchg cmpsb xchg movabs cmp iret cmp pop rex.RB jb rex.WRB mov cmpsb adc mov ja (bad) out sahf sub xchg cmpsl pushfq rex.WR shl in rex.B mov (bad) out push (bad) sub (bad) mov callq sbb xor pop rolb mov xchg cltd int3 mov fisttp xor mov or hlt (bad) rex.WRB fs rex.W pop xor cmp cmp push stc mov js shll or jo mov pop mov stc fimull or sub loop mov fs xor loope adc in fs rex.R xchg push imul jl (bad) pop mov (bad) mov push testb scas lods (bad) js movabs ja retq mov lahf fldt test mov mov mov sub pushq ffree add vxorps orb or jmp loopne or sub sbb (bad) ds adc jnp (bad) outsb (bad) mov out (bad) pushq iret je mov movl fbld add fcomps and sbbl xchg clc push sarb ds fcomi (bad) (bad) rex.WRB fmull fisttpl and cld (bad) adc sbb mov jnp rex.R (bad) xor in (bad) neg rorb jbe scas fldt subl fistl (bad) adc test sti fwait sub or sub xor sub mov (bad) lea mov xor movabs scas mov fcoml sbb adc mov mov rex.B rex.WRXB jno xorl mov rex.RB add nop pop mov rex.X and cwtl ficoml (bad) fdivl mov cmp loope xor push loop fsts sbb (bad) clc mov mulb loopne rex.RX (bad) (bad) (bad) push pop adcl (bad) or sbb push cmp pop and imul rcrb outsb or mov pop rex.W ss mov (bad) fcompl jne pop hlt push sbb movabs xor cmpsb push mov andb jl mov add add test sbb cmpsb (bad) icebp movsb out sbb (bad) rex.RXB rex.XB mov xchg lea (bad) pop jl and fidivrl xor add loop test loope push test (bad) jrcxz mov push fidiv pop rex.RX or js sbbl add cltq mov xor jmpq mov mov and pop in push ficoml rclb or push push jmpq and push adc pop cli in lret loopne jmpq (bad) fwait pushq or rex.WRB fstpt sbb addr32 xor lea fcmovnu movsb jb (bad) mov cmp callq lahf (bad) andb sub or mov add pushfq movabs (bad) jae xor ss fs std xchg (bad) pop fwait xchg or adc rex.WR (bad) mov ja test xor out loop (bad) rex.WRXB (bad) fistp pop fwait out and movabs fldl jrcxz (bad) mull mov sub mov fisub (bad) test in fisubrl sbb rex.WXB or subl test cld cmp (bad) lret sbb retq jnp clc fisttpl cmp rex.WX movsl push fistl mov outsb movabs jbe retq fwait (bad) and rex.WRXB hlt push rcl jmpq pop sbb jnp cmpsl pop fdivrs or rex.WXB and sub rex.RXB xor sbb jmp jg xchg xlat (bad) (bad) movabs rex.WR cli cmp out jge lahf lods sbb outsb in and rex.XB rcll jp (bad) cmpsb icebp outsb popfq pop cmp (bad) sarl xor mov fildl rex.X add sub (bad) fstpt jb fnstcw gs fwait adc push mov jge lods xor roll mov mov cwtl (bad) rex.RXB imul loop rorl (bad) lea retq imull rex.WB fstpt bswap ffree mov cld fistl jo movabs (bad) fldt rex.WRX in fistpl out (bad) pop rex.XB callq or (bad) jo retq sarb movabs push adc push cmp mov mov add or and pop (bad) stos xchg mov rex or std pop xchg mov (bad) imul jns (bad) insl data16 push test and (bad) faddl (bad) or mov andl pop fnsave cmpsb rcrq cmp (bad) insb jmpq mov imul rex mov adc rex.WR mov insl (bad) loope mov cmpsb sub mov fwait cmp pop pop je es and repz movabs loope js shlb and cmp imul jne jns fistpl out retq (bad) rcll fcmovb add loope insb (bad) shrl pop sbb stos mulb jrcxz jns rex.WRXB imul lods add sti add xorb cmp add scas xor xor mov mov (bad) (bad) xchg mov cmpsb xor push adc rex cli (bad) lret rolb xor subl enterq xor pop cwtl mov adc rex.RB rex or (bad) pushq (bad) xchg (bad) loopne push pop sbb (bad) xchg rex.WXB repz shrl insb imul (bad) (bad) not xor xchg and (bad) rex.R fstp add popfq movabs add movslq cs sti insl (bad) (bad) adc cmp retq enterq add rex.RXB add (bad) sbb stos jbe rex.RB mov (bad) hlt mov ror lahf cmpsb movabs (bad) cs fucomi push (bad) rex.RXB (bad) pop movabs and (bad) xchg (bad) cmp jmp jo xor out movabs lea sbb repz adc cli sub leaveq (bad) loopne jl lods cmp xchg adc (bad) mov fs adc test orl adc (bad) push (bad) fist mov rex.R rex.WX jl loop or (bad) (bad) pushq jnp (bad) xlat fildl test sbb xchg out cmp fwait xchg (bad) jge (bad) (bad) rex.B xchg stos (bad) cmpb mov incl fistl sbb movsl out pop xchg stos fisttpl rcr fildl ljmp mov movabs fwait mov ja push rex.WXB loope or jge sbb mov nop cmpsl jbe or fmuls addr32 mov out lret test (bad) mov add rex.RXB mov pop or in push sbb movabs loope insl in cmp sub jrcxz jne stos sub mov sbb out sub popfq xor fucomi add int3 rex.W (bad) xor rep fisub adc or jne (bad) imul mov out (bad) mov sti mov fstp and or (bad) out (bad) ficompl sti cmp fiaddl icebp mov (bad) xlat scas sub ds rcll lret jns rolb rex.B adc or pop xor sbb out shlb in rolb mov test nop sarl (bad) and outsl pop iret hlt (bad) xor (bad) xor sbb sbb scas fstpt sarb xorl mov insb adc pop or sahf fcompl jl mov xchg sbb fwait sarb (bad) sub movabs shrl rex.WRB rex.RX rex.WRB cmc test mov enterq fldt int sti stc mov scas fildl adc add mov rex.WRXB (bad) mov stos addr32 lret int3 (bad) ja js je fildl cwtl pushq rex.WRX add rcr and stos (bad) rex.WRX ss rex.R (bad) in xchg rex.XB pand (bad) (bad) stc xchg or fsubp cmp sarl cmp cmpsb pop (bad) loope rex push out loop pushq mov mov mov (bad) jnp andl fstps jne xchg fistpl and cmpl (bad) rex.WXB mov repnz adc cmc rex.RB pop pop insl stc rex.WB ss or (bad) (bad) push (bad) loopne jg (bad) jno andl fstpt callq (bad) sbb add push insb (bad) adc cmp js rex.XB (bad) mov pop fmuls fildl callq mov and (bad) (bad) rex.RB xchg mov (bad) push imul mov cs sub jmp lea sbb sbb (bad) (bad) (bad) icebp xchg jg in adc fwait pop insb and fwait rex.WB test lea xchg and push sbb out movabs es movabs (bad) gs fndisi(8087 push clc push pop popfq ror add fwait (bad) mov notl fildl loopne and rex.WRB (bad) shrb sti (bad) (bad) fildl rex.X jp or fdivr (bad) (bad) shr (bad) addr32 adc retq rex.XB fdivr sub (bad) outsl cmp mov mov repz add cwtl stos jrcxz data16 lahf rex.WX (bad) (bad) fstpt ss lods fstpt pop mov adc out sbb movslq pop adc rex.WX xor std out sti pop rex.WRXB lock jae (bad) in cwtl insb mov out out and mov rex.WX sar movabs xchg fs adc rex.WXB pop lahf ss cmp and sub jl mov sti cmp (bad) adc fwait stos sti nop cmpsb sbb enterq retq pushq (bad) jno callq mov (bad) retq xor pop jle or xchg retq scas rex.XB repnz add jno sbb movabs (bad) mov and (bad) imul fildl cltd pop in cs (bad) (bad) (bad) or shll fildl sbb adc adcl pop rex.R pop (bad) fstpt (bad) stos rcr sbb jg movslq movabs and cmc nop fbstp pop jmp pop sbb sub (bad) add sbb fisubl pop jle cmp (bad) rex.WRX push imul movabs lret (bad) btcl mov sub push fwait (bad) sub iret sub rol sti repz (bad) sar pop stos mov rex.RX scas xor sbb insl (bad) movslq (bad) jle jle mull mov jp (bad) scas sub mov and hlt cltd insb jnp mov xchg (bad) (bad) (bad) retq sub mov xchg js repnz push xchg (bad) push lods out pop scas cmp clc jno push fbstp mov rcrb adc insl (bad) cmp sbb clc push (bad) or adc sbb cmpsl xchg jl sbb int3 int3 (bad) flds adc pop xchg xor outsl jae sub or pop (bad) and (bad) rex sbb push in fsts gs imul movsl push mov divl cmp xchg or loope (bad) or (bad) cmp loopne xchg in mov adc movabs add lret xor xchg pop mov rex.X or movabs movabs jle ss fldenv gs and iret imul push je push fistpl std mov mov mov scas ficoml loopne ror clc push mov add sub (bad) cmp (bad) rex.RX stos cmp (bad) push rex.WRXB xor push jnp cs xor jne jbe xlat (bad) mov fisubrl movslq lret imul rex.WRX rex.WRB stc cmp lods push pop mov lahf fldt (bad) (bad) loop mov out insl xchg movabs movslq (bad) stc pop xchg push jo fldt movabs mov rex.WXB lret vpmulhw movabs jp lods (bad) push iret popfq sub stos (bad) fistpl (bad) movabs sbb (bad) pop cmp rex.WX fldt mov add test cmpsl push sti mov add pop rcll retq cmp pushfq sub outsl imul mov rex.W rex.WR lods pop (bad) enterq nop or pop pop mov lods mov stc (bad) stos (bad) sub (bad) movabs cltd roll cmp fnsave imul sbb mov add out pop lods push rex.WRX (bad) retq cmp push and jge jbe cmc pop pushfq lods pop adc sbb mov and mov (bad) loopne lahf stc rorb popfq mov mov (bad) iret movabs mov add repnz add jmp pop rex.X rex.WR xor int3 mov (bad) sbb fldt insl mov pop or out fwait cmp adc fildl (bad) js lods mov sti push push ja mov xor add sti pop pop nop scas rex.RXB movsl mov ror mov cmpl shl fisttpl cmpsl pop fisttp movabs cmp sbbb jnp scas xchg fsubrl rex.R sbb jg cmp and (bad) popfq pop pop stc jle pop cmp push fsubrs jne mov (bad) (bad) int3 out sbb in stos pop cmpsl imul sub movabs mov mov push mov sub andps in jb xlat rex fdivrs (bad) sbbb sub (bad) push mov movsl pop sbb js xchg je mov and pop mov xor (bad) shrb ds jbe (bad) add jp mov mov scas rex.RX movabs mov jg mov fwait jae roll leaveq (bad) loopne fildl rcrb rex.WRX xchg fwait test fcomps in push fisttpl mov sahf pop repnz fisubl popfq movabs mov shll push pop sub data16 fisttpl ja rex.WRB fldt js mov (bad) (bad) sbb fcmovne loope sahf sub fldt in jge fistl pop nop rex.WR adc movabs mov leaveq mov cmp sti xchg test cmpl (bad) fldcw (bad) fst jle add cmp (bad) iret repz adc xchg mov rorl (bad) sahf out xchg pop and rex.RX fwait (bad) mov jbe push cld (bad) fxch loope sub (bad) fwait movabs clc (bad) xchg fildl jne sarb rex.WRXB addr32 fistl int mov (bad) adc fcmovne mov mov (bad) mul movslq fstpt pop mov and jnp pop (bad) pop fcomi add test rex.RX (bad) or popfq sub or rcr fistpl rex.W (bad) retq adc flds push lods fwait (bad) movslq or cmp xor fisttpl fs rorl (bad) jnp cmpsb jae imul mov (bad) push cmp push mov (bad) (bad) fs cmpsb sbb scas (bad) fsub mov jb lahf mov cmpsl in in pop leaveq rex.WXB rex.WRB xchg (bad) fisttpl pop sub jg or sub (bad) fcmovnu sub and mov fistpl cwtl rex.WRX retq mov fistpl movsb adc mov push (bad) outsl (bad) cmpsl fistl or jae retq or repnz and jnp jne pop rex mov pop ja std (bad) fwait push adc or fistl rex.WRB ds jae retq lods (bad) mov push (bad) cmpsb jne xor jmp fistpl orb rex.WRB lahf jnp adc (bad) xor (bad) int3 adc fstpt test mov (bad) mov (bad) add int3 mov ja (bad) sahf imul xor out outsl fs mov jg (bad) cmp (bad) fnop mov rex.X cmc sbbl xor retq stc push sbb imul mov push push cld jg fstpt and mov xor or adcl or mov clc pop lea addl pop fwait repz sub mov fisttpl mov fwait retq rex.B cmp xor jl and rex.X (bad) fistp ftst sub int out xor (bad) adc std (bad) retq int3 push (bad) sbb jne mov jmpq movsl cmp rex.WR mov and iret push (bad) rex.WRX (bad) rex.WXB mov in (bad) add jmpq cmpb cmpsb sbb retq xorl mov jmp xchg fstps sub jp retq mov mov repnz push (bad) shr stc lret mov fisttpl pop movsl sahf retq push fildl test pushq movabs or cltd stos pop add sub jge cmp (bad) and sbb lock (bad) xchg repz out data16 fs out jp pop (bad) sub rex.WR fnsave ror movslq rex.XB popfq pop cli nop pop (bad) (bad) cs jo mov pop jne xor mov pop pop sar jl sbb pop pushq sbb (bad) mov push insl push je and (bad) out jmp divb sti jp push or rex.WX fstpt sbb xor lea ja jne in movabs mov sar rex.WR fstpt leaveq pushq out loope movabs cmp stos (bad) sbb push jnp sbb scas jrcxz rex.W or add add pop rex.WRXB jl (bad) (bad) pop stos jp (bad) and rex.X fcmovbe and outsb (bad) idivl or fildl enterq rcr in sub and (bad) xchg rex.WRB mov jg rex.XB pushq (bad) cmp rex.WRB and movsb adc jbe rex.RXB lock (bad) outsl jl movabs (bad) cmp or movabs xchg (bad) xor (bad) or pop mov insl (bad) cmp sbb retq push in stos and pushq sub jbe add cld xchg es fcmovnu xor add jbe (bad) mov xchg hlt test movabs rex.WXB cwtl icebp clc punpckhbw push fcmovnu je imul mov test loopne fisttpl cltd xor scas in adc add adc out mov rex.B xchg js fwait loope and rex.WX lea out cli and or pop fidivrl and jb pop jo jbe jae imul (bad) pop movabs out rex.WRXB scas (bad) fcmovnu mov fwait sub jae xchg jno in sti add fisubr (bad) (bad) cmc jae and mov movslq test adc clc jge (bad) or cmp mov xor fistpl subb clc jrcxz mov adc push cmpsl rex.XB sbb (bad) and rex.X insb sahf sub sbb or (bad) lods movabs (bad) data16 pop cmc push (bad) push (bad) std jp gs lods rex.XB adcl pop add in (bad) fstpt lahf test xor lods or pop jnp jns xchg mov ds in mov (bad) xchg (bad) and or pop (bad) sub lahf rex.RXB (bad) mov sbb fistpl xor fcmovnbe sbb jns fidivrl sbb mov (bad) cli rex.RB sbb xor in sub insl pop mov std fstpt rcll pop ja rex.WXB mov iret adc scas rex.R movabs jmp in mov sbbl pop and rex.R loop or (bad) cmp adc (bad) pop sub ficomp movabs (bad) leaveq hlt pop scas (bad) ror sbb mov cmp adc rex.WRB ss fndisi(8087 sub mov fucomi icebp movabs mov imul lock rcl out fwait (bad) push lret es jnp xchg xor (bad) fldt pop and adc (bad) xor sub movabs outsb jb (bad) (bad) mov xor sahf insb and (bad) xchg fistpl out adc sbb lret loope mov fcmovnu ss mov jae (bad) (bad) popfq pop fildl xchg sub fcomi add (bad) or out (bad) xchg and movabs (bad) int3 xor or (bad) not insb (bad) mov pop cmp fidivrl ds sbb out test (bad) xchg mov and fcomi es sarl cmpl add jae scas pop rol sub xchg js jnp xchg xor adc int sub adc sub pop and hlt cltd outsl jb (bad) cmp lahf (bad) add out (bad) decb xor (bad) rex.X cmpsb mov fistpl add int in fwait sahf sub (bad) loopne scas mov (bad) (bad) (bad) pop in iret xchg lods (bad) xor (bad) cmp cwtl and shll pop and adc pop hlt pushq cli cmpsl (bad) fs fdivr sbb adc pop jns fcmovnu mov sub or lea mov xchg (bad) je xor sbb sti outsb ss leaveq out pop xor fdivr pop loopne rex.WRB (bad) mov mov xor xchg js (bad) push mov test fcmovnb or and and adc push and push stos and imul or fisubl pop stos idiv movslq (bad) fcmovnb rex.WB mov imul test pushfq stos jb (bad) iret rex.WR test movsl sarb retq stc loope jmpq icebp out push (bad) jae fstpt test push in (bad) (bad) test je retq rex.XB callq rex fs repz fistpl pushq scas sbb and mov test addr32 pushq jrcxz lock add jno (bad) fcmovne (bad) movabs (bad) add rex.R sbb (bad) fstp sbb rol jno sahf data16 shlb movslq pop (bad) (bad) cmp pop fs cmp push mov (bad) (bad) fcomi movabs cli icebp rex.RB adc stos push mov rex.RX pop in mov ja shrb movabs imul (bad) or sub cmp and int cmp pop cmp sub lock hlt mov test mov push fstpl add (bad) lods movabs (bad) sub stc jp cmp sub sub (bad) in (bad) rex.RXB fisttpll pop xchg icebp fistp mov adc (bad) pop ds mov imul retq js je out callq sbb mov (bad) in jae stos sub sbb and fdivr rex.WB movslq xchg sub mov lea (bad) mov (bad) fildl (bad) add fsubrs pop (bad) mov cmp fstpt (bad) sbb cld rex.WXB jrcxz pushfq fcmovnbe xor mov (bad) movabs sbb rol jle mov gs mov (bad) rex.R jae xchg pop out lcall scas movabs fwait mov rex.WB fisttpl push (bad) std (bad) addr32 scas (bad) iret jae xor cmp jge int3 insl movabs (bad) (bad) push popfq adc retq gs (bad) callq cltd ja mov mov xor (bad) sub pop xchg loop out mov pushfq jno xchg fcmovnb scas (bad) push cmp xor (bad) enterq cltd mov ss (bad) loopne rex.WB movl rclb xchg xchg insb xor (bad) lret and imul jp insb mov fnstenv (bad) (bad) mov flds push (bad) (bad) jne mov push adc jle pop (bad) loope or lret lods pop movslq mov (bad) push stc cmp fwait xchg pop out push cmpsb adc movslq xchg outsl mov or adc test cli rex.B fstps xchg (bad) or (bad) test push sub lock (bad) fstpt iret push pushq sbb pop in jnp (bad) nop cmp out mul jae (bad) rex.WX sbb pop rex.W testl adc fisttpl xor (bad) cmp pushq jbe mov rorb add rex.WRX cmc add stos outsl mov and rclb je pop fildl add mov rcrb (bad) stc mov fildl rex.WR xchg fisub mov (bad) (bad) sbb movabs pushfq lret mov and sub (bad) lods test (bad) mov repnz (bad) jrcxz jne fcmovnbe int sbb (bad) (bad) add xchg cmp negb movabs xchg lods xchg rex.XB lock je stos fwait ja movsl insb adc pop mov gs es addl jmpq xor mov jo pushfq int3 sub fwait rolb pop lods fisttpl rex.RXB rex.B out repnz (bad) mov push cmc jl pop push cmp imul out clc cld sbb sbb pop add xor in mov (bad) sbb movsl sbb movsb (bad) mov (bad) fistpl mov (bad) (bad) rex.WXB jbe (bad) iret fwait jne xchg (bad) (bad) (bad) xchg xchg mov and cmc sti imul cltd xor xchg push callq push cld (bad) movabs sahf std out (bad) (bad) rex.B int3 data16 xchg add (bad) rex.WR fistpl (bad) (bad) ja rex.X adc movabs mov sti add jrcxz pop cs push insb mov fidivl jmpq sub jnp rex.WB fadds xchg xchg rex.RB fnstenv or or cmc jne push popfq rex.R js idiv mov fisttpl xchg mov cmp gs (bad) retq rorb sub cmp sub xchg mov rex.WX fstps ss ja mov cmp sub movabs lea (bad) stos (bad) cmp rex.X rex.WRXB and sahf xor mov lods (bad) (bad) mov js (bad) pushfq shll imul out pop mov outsl jg or pushq mov pop fstpt movsl mov (bad) mov fucomi (bad) movslq pop cmpsb fiadd cmp pop sti js,pt jbe imul fstpt loopne or pop rex push jg sbb push and andl addr32 (bad) xor rex.WR fistl (bad) jnp ja (bad) (bad) or jmpq push (bad) add sar cld fstps fwait mov (bad) jbe retq fucomi xlat xchg mov movabs (bad) xchg (bad) and (bad) icebp rex.RX rex.WRB (bad) cmp rex.XB (bad) leaveq pop stc pop out stos es (bad) or rex.RB add outsb mov clc lret (bad) push negl fistpl nop xchg xchg or hlt cli sub (bad) rex.R xorl cmp outsb (bad) retq fidivl mov test adc (bad) int movslq movslq (bad) fistl fnstsw push (bad) (bad) jne fstp fimull sbb lret add imul jb shll and jne mov int3 out add pop outsl rex.WRXB pop hlt (bad) mov (bad) enterq (bad) cmp and sbb repnz pop addb pop xchg out pop cmp mov push lea (bad) (bad) pop xlat fistpl sti push (bad) pushfq and mov jae movsb pop rex.WRX jg sub es or adc fistl pop rex.R popfq in jb rex.WXB or xchg sbb mov fildl push rex.WRB rex cmp in fsubrl sub movabs cmpsb rex.WRB add repz (bad) sbb sahf iret clc loopne cmp jns mov pushq stos adc rex.RXB (bad) fdivrl mov jmp add push push xor add (bad) (bad) (bad) and fsubrp push sub shlb rex.WB (bad) nop (bad) fnop mov data16 movslq sub nop pop rex.WR rex.X jo pop mov mov int jae rex.WR and pop jle,pt in and pop jb and mov (bad) cli cmc neg or test pop mov mov rcrl mov rex.WXB int adc movabs ficompl (bad) test and mov je xchg jmp add (bad) adc (bad) mov (bad) std stos xlat addr32 (bad) push xchg pushfq xchg ficom fwait (bad) (bad) mov sub xchg lret xchg cmp jp scas add add out negl stc adc fwait sbb (bad) loope (bad) mov iret (bad) mov lods mov mov jl jo pop mov movsb jbe add out fwait (bad) jle (bad) cwtl gs out cld rex.W icebp movslq fwait hlt mov loope bnd rex.W (bad) sub mov test add imul push xchg icebp stos scas sub std outsl rex.WRB movabs (bad) mov mov fcoml test sbb decl and push lret rex.R cwtl rex.B iret movabs push xchg hlt mov (bad) xlat rex.XB rex.WRX xchg jae iret mov icebp fisub leaveq mov lret hlt pop rex.RB pushfq xchg (bad) (bad) lock jnp popfq (bad) jo clc sub (bad) pushq jne in fwait sbb mov pushq rex.WX mov callq addb push pop ffree (bad) push (bad) jno jl fldt xchg out scas js mov jae loopne rex.R or fist int3 push xchg loope xchg sbb mov (bad) push movabs icebp (bad) mov (bad) out adc fist or mov movsl sbb stos movabs iret lret or mov (bad) shll pop fisttpl loope sbb (bad) hlt ds rex.WRB jp adc mov sbb loopne ss mov (bad) cli sub (bad) (bad) xchg push stos (bad) xor lret push mov not add jl (bad) pushfq popfq test add iret mov cmp or cs mov leaveq xor or add mov repz mov push (bad) mov rex.RXB xchg fsubp movabs xor lock cltd js xor cmpsl mov (bad) ss jmpq xchg jno or rcrl in movabs sub jmpq jb mov retq add pop (bad) (bad) adc pop (bad) xor rex.RX xchg jmp iret insb push addr32 stos outsb push fldenv lret mov repz (bad) sbb rex.WRXB gs and mov jno stos fnop (bad) add fwait test fwait push cwtl (bad) adc test (bad) (bad) leaveq (bad) movsl adcb pop pop and movabs pop (bad) rex.WRX mov and jae hlt fist or rcll and lret test xchg iret push rcll push cltd sti mov push in fnstcw (bad) out mov xchg rcrb stc insb fadd test flds (bad) pop xchg and mov out xchg jl rex.RXB mov pop sbb stos int3 mov fcmovne adc out retq sbb add sti rex.WRXB (bad) loop cmp jp mov cmp push jbe adc xor rcll xor mov sbb mov popfq pop xor xor (bad) in pop out shl rex.WRB (bad) and test and and xchg js sub (bad) and and iret mov sub (bad) stc cs adc mov jns insb sbb (bad) (bad) push (bad) (bad) sub push ror or ss push subl shrb add xor hlt and jo in outsb not es ficom fldenv cmp pushq rex.W rex.WRB xor int sbb repnz outsl rcr mov cmc jo ror (bad) jae popq (bad) fwait iret xchg js cmp outsb pop xchg js enterq cmp (bad) fisub clc movabs xchg rex.R rex.WB (bad) std test stos movabs (bad) (bad) jge mov callq xlat (bad) mov mov shll scas rex.RB rex sub xchg (bad) (bad) mov callq sti fwait xchg test push (bad) mov (bad) outsl (bad) sub cmc rex.WR sub movslq iret lock xchg mov or sbb (bad) pop (bad) fnstcw ficom imul mull (bad) (bad) jp mov cmpsb hlt fistpll loopne jne xlat stc ss push (bad) cmpsl jnp fcoml cli lock fxch or jae clc nop cmp sbb xchg xchg in sbb test pop xor mov mov rex.RXB jrcxz fwait sbb out xor (bad) lret addr32 mov insb rex.WX movslq (bad) (bad) pop subl sbb (bad) es mov jp test jg in sub push rcrl fscale movabs ja (bad) jle mov rex.WXB and (bad) test sub jge scas fcompl pushq xor ss shlb mov (bad) adc cmpsb (bad) sti (bad) loop push sbb (bad) pop mov pop (bad) (bad) push shrl movabs cmp (bad) xor (bad) sbb js pop sbb outsb fsubrp shrl test (bad) insl jle adc in lret (bad) sub push pop mov leaveq gs sub imul (bad) xchg fidivr iret mov stc adc sub cwtl mov xor rex.X movabs push rex.WRX movslq test stos fildll mov (bad) lret sarb mov or add nop cs jp rex.R push sbb jmp sbb jns xchg (bad) repnz fist jg rex.WRX (bad) xchg mov and xlat jl (bad) (bad) imul lock xor pop (bad) mov fisubr cltd fcomps sahf or jno mov xlat test pop jl adc (bad) cltd iret rex.WRB ficoml fwait out ja pop xor (bad) xchg rex.X clc rex.WX push fisttpl pop test outsb loopne (bad) retq (bad) cmp subl sbb fildll (bad) xchg pop cmpsb jrcxz adc jmpq mov rex.B (bad) scas (bad) loope pop js (bad) iret out mov mov and fisubl stos xchg rex.RX rex.WR subb adc pop retq (bad) movabs jp xchg jne jne leaveq fs cwtl xlat sbb adc pop fdivrs or es insb mov fadd fistl push (bad) push (bad) fs sbb jb (bad) out (bad) and push rex.WXB cmp fldt outsl mov pop fwait jae fistpl mov mov (bad) int sub cmpsl (bad) js adc fcoms std (bad) idiv adc (bad) sbb pushq cwtl outsl jbe rex.B fistpl adc rex.RX fistpl fidivrl (bad) (bad) sti push sub mov mov fwait outsl sbbl xchg or addr32 (bad) (bad) movabs jo test jbe cmpsl and mov and xchg enterq pop (bad) xchg cld or jns (bad) jne imul adc test xchg movabs out outsb sbb shlb jmpq movslq mov fwait (bad) leaveq imul adc (bad) mov movabs mov or mov cmpsb mov hlt xlat mov push mov shrb xchg pop cmpsl imul push mov (bad) pushq lods jp and rex.R addr32 fildl jmpq retq rex.WB cmp mov pop movslq mov jae ds sbb jg and cmpsl pop cmc lret mov rex.WRB or sub iret in roll (bad) jrcxz jge repz rex.WRB (bad) cs pushfq jnp and add pop lret insl sub mov repnz cltd pop sub sub (bad) test and adc jae out rex.WR hlt sahf rex.B pushq push in sarb (bad) and (bad) lahf lea mov pop jl push rex.WB fsubrs jg (bad) mov mov fcmovnbe testb enterq ficoml xchg (bad) hlt fcoms cmp cmp push rex push ja iret hlt xor popq xor xchg fs jns mov (bad) (bad) (bad) pop rex.X rex.WRX in fildl sub jg jbe rcr mov fwait mov pushq fildl mov and or or imul sbb add rex.WXB xchg fildl sbb sti fistpl pushfq xchg mov or fadds (bad) push mov mov in xorl cmpl lea (bad) rex.XB movabs jo std mov addr32 cmpl (bad) (bad) cmpsb add mov pop repz ss pop mov loop pop mov and mov loopne jnp (bad) sbb pop int3 pop faddp xchg retq xor sarb cmpl push mov rex.W in imul out push cmpsb (bad) (bad) push sbb lea adc fcmovnbe jne xor (bad) pushq jmpq mov (bad) or mov ja push push data16 add cmp insl callq push jb xchg (bad) fcmovne loope rex.W jbe adc push cmpsl mov jnp adc rex.W pushq icebp (bad) leaveq outsb rex.B addr32 mov (bad) fnstenv loopne loopne out rex.WR rex.RB fs imul push (bad) popq mov (bad) cmp mov pop in adc mov je add (bad) push stos andl jae mov imul xor add (bad) pushq mov (bad) rex.R rex.XB insl movabs movabs jbe cmpsb sub rex.W rex.WXB icebp mov (bad) hlt or jns pop pop (bad) jno pop (bad) xchg sbb (bad) push (bad) decb icebp nop repnz (bad) jrcxz (bad) add jnp and add fwait rex.WRX pop add insl push (bad) adc (bad) stos fistpl (bad) icebp cwtl mov (bad) sub jp imulb scas fisttpl (bad) ds movabs rex.WB fldt (bad) cmpsb (bad) pop loope in fwait pushq pop jne stc fdivl rcll mov add sbb sbb (bad) mov sahf pop (bad) mov scas or rex.WR xchg fildl outsl rex (bad) or fcmovne loopne cltd rex.X push sub pushq stc xchg mov (bad) and lret (bad) lret pop movabs jp cmp fldt clc or test in or hlt and addr32 lods (bad) pop ficompl xor iret (bad) rex.R rex.W enterq fwait cmc or lock fldt (bad) std or pop jmpq pop cmp jae sub pop jbe cmp jne out fwait sbb push (bad) mov fwait (bad) mov pushfq mov lret mov jnp mov (bad) sahf fwait (bad) jae imul (bad) mov pushq (bad) fldl jp rex.RXB repnz add movabs (bad) xor sbb rolb xlat (bad) ds pop js add movabs push jo xchg fucomi outsl (bad) loopne enterq rex.R movsb push pop add (bad) rex.WR (bad) mov stos (bad) cmc ja,pn (bad) adc (bad) (bad) sbb mov add movsl mov pop (bad) (bad) (bad) rex.WRX rex.WXB rex addl mov fsubl lock (bad) or (bad) or add movabs jmp add in shrd gs (bad) pop xchg vpunpcklbw test add lret push xchg add (bad) or xor mov jne (bad) pushq and jp jb pop pop rex.RX leaveq rex.RXB outsl cltd fist jno fs pop push push (bad) mov lods fcmovnb test mov jnp es and or imul fwait shlb ds sub rex.RB (bad) cmp test fstpt imul (bad) sbb fisttpl or test imul (bad) and (bad) or shlb insb adc fildl adc fisttpl mov (bad) xor jge rorb add pushq (bad) cli pop sub push scas jbe movabs cmp and movabs mov sub xor sub je cmp jmp adc ds sbb (bad) mov xchg xor rorb mov fistpl test mov addl (bad) loope pop imul cs orl rex.XB rex.WRXB jmpq and jrcxz or jmp and imul mov rex.WX adc xor stc fldt paddd jbe subl cltd rex.WRB xchg jg and cmpl fcmovnb cmp notb (bad) push sub and lods loop xor (bad) cmp sbbl sub xchg mov lret std int pushq sahf sub sub mov lea or fwait rcrl lods fs fwait mov push out pop adc xchg xor jnp add pop imul mov rex.R push sahf cmp (bad) outsb and (bad) xor cmpsl mov retq cmp imul cmp xchg gs rclb shrb fbld iret adc std cmp fist (bad) sub pushq (bad) (bad) js shr add add movsl mov jns in mov test pop cmp out pop insl movabs iret cmpsl lret jnp mov xchg cmpsb or push movabs cmc imul xor retq mov insb test fldenv jmpq mov rcrb (bad) push out jae (bad) rcl stos (bad) jb sbb stc in sub or rex.R sbb movsb or xor pushq pop jne mov jrcxz fwait and jo or mov lret sbb cmp fsubp mov fs (bad) push fucom mov lock mov pop pop fwait sti addr32 xlat loope fidivl xchg out jle xor test sub sbb popfq insb jge nop rex.X cli (bad) (bad) (bad) cmp xchg cmp andl js mov rex.RX mul sub or rex.WRXB (bad) jle jmpq loop pand push test sbb pop (bad) sub rex.WRXB movsb loopne sub (bad) lret push mov mov mov and mov rcr mov gs fdivrs pop rex.WRXB in and add (bad) imul stos scas (bad) (bad) sbb pop (bad) pop test imul clc loopne rex.R xchg pop rex.RB adc jo divb jp (bad) jmp mov fucomi mov retq (bad) (bad) jo clc (bad) xor mov rcl fwait jne and push mov add pop (bad) sub jg iret (bad) adc lock loop xchg mov rex.RB fildl out callq mov fucomi adc sub rex.WR and fidivr rex.R fcmovnu mov and rorb lahf (bad) mov or sbb ja pushq addl xor mov (bad) mov sbb mull xor xchg orl movslq rex.RXB rclb (bad) (bad) mov or or std scas sbb mov push push je callq fisttpl rex.WX movabs lods (bad) fistpl jae sahf fcmovnb mov mov rex.WRX sbb andl xor jge pop rolb fmull sub (bad) (bad) jg mov (bad) xchg in test outsl mov xchg add out (bad) sar movsl cmp rex.R fcomps xor add in sub mov fisttpl sti or pop xchg fs stos rex.WB int3 push int3 (bad) mov fistp pop jmp stc mov sub ficom xchg mov or rex.WRX cmp xchg and jl (bad) popfq sbbl lahf rex.X mov sbb (bad) lock mov mov push adc jnp and rex.X jbe (bad) pop mov xchg xchg jo enterq (bad) add cltd mov lods pushfq callq mov cmc outsl jne imul adc rex.WR fcmovnu in icebp hlt push (bad) pushq shrb cmp jnp imul pop loopne (bad) (bad) jg jl retq xor mov icebp cmpsb jrcxz imul mov (bad) gs (bad) sub xchg push rex.WX rex.XB push mov (bad) adc int3 notl rex.R sub loopne stos rex.RX jbe rcr ds mov adc sub or fwait int3 (bad) std mov sub pop mulb stos out (bad) mov movabs (bad) (bad) adc mov mov icebp popfq jns fstp adc outsb (bad) rex.WR fwait mov fstpt test stc (bad) sub pop decb and mov and sahf mov movabs ds fistpll cmp push (bad) pop imul outsl out or mov data16 (bad) fcomi pop int3 sahf xchg jmpq repz lret cmp (bad) pop push rorl jbe pushq lods (bad) mov sti scas (bad) imul or mov jne rex.XB jo mov retq cmp xchg jg cmp fdivrs fcomi xchg movabs iret push rex.WB popfq in rex fwait or fnop retq int3 (bad) cmpb (bad) mov jbe fisttpl gs sbb (bad) mov mov popfq fld sub mov xchg rex xchg (bad) xchg cmp mov insb (bad) fcmovnbe frstor lret push cmpsl sub cli (bad) add and jno pop rex.X mov cmp (bad) cltd bnd (bad) (bad) adc jo,pn cmc jp stos sub or xchg (bad) sbb mov push (bad) sub fsubs push fsts fwait jns pop jnp jo lahf (bad) mov rex.XB orb loopne pop sbb sbb fsubl (bad) fldt movsl rex.WXB mov jo push or jno mov pop and rcrl out fistp xchg fldl gs pop or xchg hlt xchg rex.XB fcomi imul mov jne mov mov (bad) mov rorb imul fdivl push (bad) negb (bad) (bad) es in out pop mov sub xor pop in ja mov rorl xor pushq pop fs rex.WRB cmp xchg rex.R pop fisubrl imul outsl (bad) cmpsl clc mov xor (bad) lahf mov sti frstor rex.WB gs sub imul out xchg fistpl jl lock (bad) jno (bad) add sub lahf fld popfq rex.RB mov int (bad) rex.XB fwait sub rex.WR xor adc mov sub cmp pushfq movabs stos cmp fucomi push mov pop (bad) adc in (bad) adc outsb (bad) mov rex.WB rorl fildl mov movsl pop rex.WRXB lods cmp pop fsts and fisttpll jno xlat (bad) mov (bad) (bad) cwtl mov movslq (bad) out add scas (bad) je pop (bad) test rex.WRB insb clc fistl jb and retq cmpl out push or push (bad) rex.WRXB imul mov lret testl sub rex.WRXB fcmovnb fdivrl jmpq movabs fs jge sub xchg adcb ror rex.X cli jnp mov mov pop jns adc cmp (bad) or sahf bnd xor mov sub (bad) je fistl xor (bad) fldt (bad) push rorl lea loopne lea adc pop neg enterq (bad) cmp pop lahf scas xlat cmc (bad) xchg icebp jno insb rex.WRB cld adc test rex.R movabs ds xchg rex.RX and (bad) or rex.X imul pop adc rex.B rex xor cld lahf (bad) (bad) rex.RX (bad) rex.X sub or mov (bad) lahf std (bad) cmp cmpsl pop iret mov and frstor adc in lea (bad) adc pop (bad) callq jle (bad) cld pop jno jl sbb fistpll sub (bad) mov pop test or stos retq out loope sbb sahf repz mov sarb mov xor fidivl in cmp pop int movabs add pop mov pop push sbb pop lock add repnz push jmpq (bad) mov pushq xlat rex.W repnz xorl (bad) sub xor jg adc push (bad) fstps rex rex.WR rex.W cmp outsb addr32 pop fiaddl rex.WRXB or sbb sbb rcl jrcxz sti movabs jb xor pop (bad) sub add iret xor jo mov stc cmp (bad) imul push jnp xchg (bad) repz mov jmpq (bad) mov fwait or pop pushq je mov (bad) sti pop add mov mov outsb in push (bad) pop clc imul adc rex xor adcl adc cmpsl ds cmp xchg fnop or movabs add (bad) xor negl fwait rcrb mov cmpsb fldt cmp gs xlat sbb shrb (bad) lods pop jrcxz fildl je fstp mov scas test fwait pop int3 outsl movabs stos divb fstpt lock cltd cmpl or (bad) and (bad) xchg add fucomi xor in mov fnop (bad) pushq xchg enterq fucomi sub add lret xor vucomiss (bad) jnp pop out xchg sub rex.RX mov mov rex.W rex.WRB mov and fistl mov fildl push mov pop pop jno (bad) fisttpl push mov (bad) jrcxz xor adc rex imul pushfq pop push mov loop sbb xchg scas and (bad) (bad) cmp lods mov int movabs clc fwait nop and (bad) leaveq (bad) add movabs rex.WB test fisttpl orb icebp lret movsl int jne scas fldt sbb rex.W rex add push sub (bad) cmpsl rex.WR sub fisttpl sub popfq cmp add xchg (bad) stos (bad) movabs addr32 in (bad) mov cmp stos imul test outsb pushq fstps mov stos mov pop fistl lods adc pop imul jae add rcr mov iret jge negb es stc cmpsl fcmovne rex.X mov jg ss cltd xchg fwait lret cmc mov pop sub rex.WB imul pushq (bad) jae sbb pop rex.RB push rex.R fwait repnz (bad) (bad) sbb sbb lock (bad) fwait rsm fistpl imull rex.WR (bad) mov movslq movabs gs fistl (bad) rcrl adc outsl mov stc fcmovnu rex.RB sub outsb (bad) js xor pop jne mov nop xchg int xchg lret or sub adc movabs shr pop jnp sub (bad) (bad) jnp cltd pop lret (bad) jbe imul jl int3 mov push jnp sbb push sub or fisttpl cmpl shlb add xor pop (bad) (bad) jmp in jp cs rex mov push sub pop fwait subl (bad) callq xor fisttpl adc add fsts sub lock adc imul loopne clc rex.RX (bad) or ror xchg pmulhuw mov insl je mov (bad) in rex.WRB fwait jo rcrl and jnp int xchg (bad) fwait orl or (bad) (bad) lea sti sbb movntq mov or fistpl in int xchg and jno cmp test fistl sahf (bad) shrl mov mov add mov (bad) jno (bad) cmp shrl (bad) sahf callq pop imul mov jo push imulb jmp fistl cmp add sti nop cmpsl pop enterq mov icebp sub (bad) je jne (bad) pushq (bad) stos xchg sub jmp (bad) cs fimull rex.WRB sbb jnp push stos orl mov out jnp pushq adcl (bad) ror mov (bad) (bad) shrb jle cmp xchg add and cld in rex.RB fs or imul cmpsl fisttp mov sarb lret jle pop (bad) (bad) lods andnps add xlat movsb mov jmpq ja mov fistl (bad) pop mov (bad) movabs stos nop cmp sub fistpl add xlat cmp or js fwait rex.WRB int3 cwtl mov addr32 lahf push out xchg in sbb adc sbb rex.B mov add in lods fistpl rex.WRB lahf push (bad) rorl (bad) test cmp pushq rex.R jno sahf xchg push jg lahf add cmp rcr or jl xor xchg mov insl sbb mov rex.WB cmpb (bad) rex.WRX scas fistpl retq int3 movslq xchg sahf rex.X xchg or gs jg rex.RX repz push fcmovnu imul addr32 imul (bad) (bad) fwait loop (bad) sub mov mov rex.RXB stc pushq cmp pop (bad) pop iret (bad) popfq movsb sub cmp jne adc jl mov pop or mov pop ficomp fwait cmp pop cmp (bad) rcll (bad) movabs incb xchg icebp int3 xchg cli adc jl jae enterq rex.B jrcxz pop fwait adc mov xor mov out clc mov or rex.X push jb fnstsw nop xor jg cs add (bad) pop xchg adc fs cmp sti ss movsb rex.WX adc rex.WRX cs and pop (bad) mov fisttpll loop ds sti fiaddl pop (bad) test imull ss (bad) (bad) (bad) xor pop fbstp mov ja fisttpl imulb (bad) mov popfq lret fcmovnb sbb movabs jnp insb and enterq int3 xor leaveq cmp (bad) lahf adc (bad) fbld sbbb pop out (bad) insl cld xchg rex.WB test (bad) loop pop or mov lock repnz push add je jle mov sbb clc mov (bad) (bad) hlt leaveq (bad) or test and (bad) rolb loope movsl clc rex.R rex.WRX pop xchg cmc mov fidivr and (bad) rex.WB pop push push push addr32 rex.XB test cltd cwtl iret (bad) flds lods insw (bad) sti ss jle movslq xchg fnop sub (bad) (bad) negb jl xchg fwait xchg cli cs pop js (bad) stc mov cmpsl pushfq in (bad) lods rex.XB fxch movabs pop xchg rcrl or iret xor pop mov sub mov out push jle (bad) loope mov (bad) je mov insb iret xchg mov push sbb jp (bad) or (bad) out test or mov mov popq jno fs (bad) mov clc jle mov xor stos jp rex.RB shll mov mov xchg (bad) rolb (bad) fstpt rex.RX rex.WRB stos xor movabs std (bad) jbe (bad) (bad) out rcrb movabs rex.WR in fcoms fildl sahf push pop sub xlat (bad) and jae pop (bad) sub repz popfq (bad) (bad) fistl mov mov mov rex.WXB sub pop mov (bad) adc rex.RXB cmpsl mov adc xor (bad) jge cwtl jnp jp jmpq pop pop xor imul and rex.WRB (bad) int pop in rcr jne rex.WX frstor rex.WRXB and pop scas (bad) out add rex.XB fwait xor lods pop scas push movabs rex.WXB jg cmp (bad) ficompl mov (bad) and out pushfq orl (bad) rorb xlat cltd pop push adc pop sbbl movabs jne fistpl (bad) jo mov mov add lods cmpsb retq in add mov fninit (bad) test sbb addr32 popfq (bad) cmp lods xchg scas fildl js in repz fisttpl movsl fdivs xchg adc sbb rex.WRB or fwait test jl movabs or cwtl movabs (bad) icebp (bad) je enterq test lcall idiv adc (bad) or cwtl (bad) fldt stos rcll rex.XB rex.W popfq stc xchg cmp fildl mov imul pop sbb adc mov lea jns stos cmp and out (bad) jle (bad) or lret (bad) sbb repz (bad) test out repz adc cmpb (bad) jg or xor sbb mov xor test stc mov jae xchg xor jl xchg stos (bad) sub mov mov hlt mov cmp or (bad) sub pop rex.RX test retq xor adc xchg mulps xor jbe (bad) xor jmpq xchg push rex.X popfq jle jb jg (bad) rex.WX sbb and jmpq lret outsl push sub (bad) rclb sbb jmp lret sti jno in or push cli std test (bad) scas push in clc mov and cmp negb subl repz sti push sbb lods sbb jns sbb pop (bad) lock mov nop (bad) or (bad) push sub rex.WRXB adc (bad) add xlat fiaddl pop rex.WRB rex.W lock cld and (bad) enterq rcrb (bad) (bad) enterq loope or and pop rex.RB (bad) pop movabs sub (bad) xchg cmp shlb test or lods hlt cmp xchg xlat cmp pop pop cwtl add fstp movsb jmp jge js (bad) int repz or movabs repz (bad) (bad) (bad) cmp rex.WB xchg jrcxz (bad) callq push scas out jle loop (bad) sub fdivrl pop xor pop int sbb clc mov fidiv jns (bad) cmp mov (bad) sub xchg hlt rex.X iret es xchg (bad) or and mov mov stos fbstp divl lret andl fs mov in (bad) es lret sbb stos fsts sbb (bad) (bad) mov rcll pop lea idivb sub rex.WRB mov loopl cwtl and mov mov std leaveq pushq (bad) pushq (bad) in rex.WR cs jnp pop (bad) movsb (bad) pop insb pushq pop xchg pushq outsb icebp fadd mov mov sub sub jno mov or rcr sub rex.RB insb fucomi movabs jmpq imul out xchg xchg add mov jl test pop pushq cwtl cs test (bad) mov push (bad) imul test jg ja fldt add (bad) rex.W cmp hlt (bad) jp (bad) pop iret (bad) sub mov out lods movabs xor fcomps (bad) pop movslq callq (bad) fcoml mov xor fcmovnbe pop test cmpsl xor jmp or lret pop pushfq (bad) xor lods movabs fisubl adc rex.RXB sub (bad) or cwtl mov xor push jb je adc fwait retq rex.X iret insb (bad) mov xchg (bad) xor (bad) lret pop in push cli pop mov jae rex.RB rex.WRX movabs ja cmp hlt fwait lea mov outsl pushq pop (bad) in ds (bad) add jno mov fisttpl sbb (bad) rex.WB sub (bad) mov push rex.WRB incl jae fisttpl mov pushfq movabs rex.WB or out mov cmp fucomi jne sbb (bad) or push mov fldt scas in mov insb out xor movabs mov jae sahf fldt (bad) stos lret ss loop and sti test and cmp (bad) (bad) pop imul int movabs (bad) (bad) push (bad) (bad) pushq movabs xchg ja pop sbb mov pop rex.WRX (bad) push mov jg js rol callq (bad) je cld (bad) fldt xchg mov (bad) pop rex.RXB mov rex.X gs (bad) push jg mov xchg mov fistl clc in xchg (bad) mov rol adc cmc mov (bad) add addr32 imul (bad) sbb hlt jns imul pop jne rex.X xor sub movabs popfq test xchg xchg add rex.WRXB mov pop movabs hlt fisttpl (bad) rex.X sbb jno (bad) test js mov fistpl callq jne rex.WRB xor lods insl jns and jnp retq push rex.RX (bad) cltd mov fwait mov fsubrs fildl fisubl ficompl mov fistpl (bad) (bad) (bad) xor (bad) rex.XB lahf test jbe jnp fildl pushfq sahf cs jo in pop sahf pop rex.XB mov mov ror rcr fistl cltd out mov enterq fwait adc mov fisttpl sbb sbb lret adc rex.WR jnp repnz fldt mov lock adc fistl rcr pop jns pushq stos cmp sub movabs mov xchg fisttpl mov pushfq fstpt rex.WX mov xor lods movslq rep fildl rcrb cmp fwait xchg mov in pop repz fist jmpq movslq insb xor mov mov or sbb mov fistpl adc (bad) addr32 hlt and loop,pt mov scas insb (bad) mov push mov out jmp fcomp pushq shll and add (bad) sbb mov fucomip mov adc ja pop pushq movabs (bad) mov sbb rcl add jne shrb jp jmp (bad) lods (bad) test cmpsl rex.RX (bad) jl sahf fistl clc loope push rex.WRXB fildl mov (bad) (bad) xchg insb int3 or rex.WX push (bad) mov xchg jnp sbbl jnp mov ds sub push lahf xor mov rex.WB sub mov xchg pop loope xchg lods xchg js xchg cmc fstpt pushfq fcomps xchg stos lret out and (bad) (bad) test xor fistl fstpt cs rex.RB xlat sub adc mov loope imul lahf frstpm(287 stos movslq (bad) rex.WRX rex.XB pop mull add fmul xchg mov rex.W or xchg rex.WX outsl jbe imul ss (bad) cmp push fwait lea fildl add js cmc push rcrl lock mov movslq clc loopne fwait rex.B sub pop or jmp pop rex mov mov push movslq fadds jl or cmp jnp sar (bad) (bad) mov xor pop je js scas mov sbb out scas sbb and jnp loopne fildl callq std mov rex.WRB xor pop mov (bad) mov add adc jmpq pop rolb (bad) mov in fsubs and lret push test ja fiaddl cmp add and rex.WX add std xchg pushfq cmp push sbb int3 mov mov loope mov sbb mov scas pushq movsl or fisubr cwtl rex decl callq insb test mov gs mov (bad) test rex.RX mov rex.W mov xor stos lods mov movsl rcr rex.RX xchg repnz xor and pop mov sbb pop (bad) or ja add mov adc xor cmp push mov pop push xor push add lods scas mov xchg imul in rex.RB insl (bad) stos xchg retq (bad) (bad) mov (bad) xor pop rex.WB (bad) adc adc imul rclb xchg imul push ss pop addr32 fldt retq adc sbb je std (bad) adc cmpsl or decb (bad) cmp outsl movabs ficompl rex adc mov rex.WX and rex.WRB push movslq out cwtl pop rex.WRB xorl repnz (bad) (bad) xchg mov pop sub jl nop fildl sub (bad) pop push mov je loop (bad) repnz adc fmul ds cltd (bad) or (bad) jae adc je callq pop cmp (bad) rex.WRXB gs movslq js rex.WR (bad) pushq jrcxz lock cmp push cmc out sbb test push jg adc imul xchg cmp repz push (bad) (bad) in sbb (bad) (bad) jo xor fisttpl sub fistpl adc lret fistl add mov fstpt cltd shll stc xor push pop hlt rcll mov in loop sbb mov jnp ds cltd test mov sub jns int and (bad) (bad) nop adc mov sbb loop clc (bad) xor mov retq loope ss rex.X (bad) mov test xchg rex.WRX rcl movabs sub adc rex.WRB test jnp sub (bad) rex.R mov in stos incb imul (bad) (bad) mov enterq jmpq clts imul cli fimull sub pushq cmp (bad) imul rex.RB jno rex.W pop adc imul orl mov fnstsw and or retq add fisubrl mov lret rex.RXB int or pop int3 loop fstpt insb pushq fisttpl jp (bad) (bad) nop fldt (bad) (bad) (bad) xchg mov insl adcb fwait mov jnp rex.WRXB sub sub fwait adc rex.RX rex.B mov (bad) (bad) test test sarl (bad) jbe adcb sbbb in stos sub mov (bad) rex.XB add iret retq add andb push rcrb int mov jp cmpsl addr32 in mov movabs (bad) stos cmc scas (bad) cmp int lock fnstcw rex.RX or sbb movabs jge insb mov (bad) jl int jne movl sbbb scas rex.WXB rcrl (bad) scas sbb cmp xor jp jge fidivrl xchg push mov jae xor or add lock shll or pop pop rex.RXB mov and mov jno push shll pop test jmpq shrb mov fisub or rex.RX adc jge ficoml add addr32 xchg outsl jb fwait hlt xchg mov sub rex.WR xchg pushq je or sub fbld scas cmpsb sarl pop lods xchg scas iret data16 (bad) repz jbe and mov (bad) adc (bad) xchg mov outsl xchg out jne jle mov xchg add int3 (bad) rex.R lret lret retq (bad) fisttpl jg pop outsb fsts jb mov rex.WRX adc and sbb vcvttps2dq push jae,pt (bad) roll ss (bad) pop (bad) mov cmpsl pushq xchg std xlat lods pop (bad) (bad) (bad) iret out jnp sahf xchg (bad) test rex.WR (bad) sub out xor ja jg rex.WX js mov adc rex.RX xor xchg subl movslq push jnp and movabs mov pop pushq mov pop sub adc cmp rex.WRXB rex.X pop and test (bad) mov cmpsb je movsb add cmp adc push cld popfq jbe jno fcmovnbe cmpsb jns adc retq push addr32 mov (bad) (bad) idivb leaveq (bad) xor rex.B lret fidivrl xor insl ficomp test fcompl out xchg (bad) mov fwait cmp hlt pop out or (bad) push jbe cwtl (bad) icebp outsb movslq pop mov pop movsb cmp sub neg cld or mov cmp xor pop xor mov shrl fistl insl jl cmp pop xchg or mov xor cltd add push cld add jmp fistl jrcxz mov (bad) cs mov mov or (bad) mov rex.WB fistpl adc pop (bad) xchg cmp jb sti xor cmp (bad) jmp ror imul faddp std and jb mov or jnp (bad) insb xchg enterq mov std push xchg adc out mov (bad) rex.RB retq data16 lods push jmp (bad) and rex.RXB jg lahf lret jb xor stos (bad) pop icebp and callq pop jg rex.WXB lahf insl mov and mov (bad) mov lret repnz and (bad) pop data16 jno lock pop cli jg (bad) (bad) movslq (bad) cmp pop in xchg (bad) pop mov fistpl nop js fistl sti rex.RB or pop loope fadds cmp pop (bad) fldt add rex.R js movsl cld fcmovnu rex.WB je fcmove (bad) add nop mov add pushq fldenv fcmovne (bad) shlb mov repnz fstpt sub addl int out jp (bad) out fstpt rcll pop sbb mov adc imull pop idiv (bad) xorl fidivrl sbb sub fisttpll fildll fldt mov rex rex.WXB add fstps scas adc movslq adc sbb fistl (bad) out popfq push (bad) mov imul fildl xchg out sub icebp repnz mov movsb sbb adc ds addr32 cmp or clc callq (bad) mov repz cmp and loopne xlat pop xchg int3 enterq test mov retq loop (bad) out xchg sub (bad) (bad) retq push or sub std frstpm(287 addr32 jmp rex.WRB pop add (bad) retq in mov int sub cli rcrl shlb rex.R (bad) rex.WRX (bad) rex.XB rex.WX and int3 rex.W fwait jg (bad) jns (bad) scas fidiv cmp (bad) int3 xchg std movsb mov xchg xchg (bad) callq fcmovu add jbe push test mov mov sub js mov test fildl or outsl in scas jnp rex (bad) (bad) push decl mov mov add es mov (bad) (bad) mov mov (bad) add cmp callq pop rex.WRX add sahf cmp adc pop push imul rex.WRX xor jrcxz gs mov cmc add adcl xchg mov rex.X iret push push pop out loope movabs rex.X fisttpl and xchg cmpsl or xchg (bad) fsub lahf (bad) mov ficoml lods mov pop cmp addr32 cltd (bad) jno mov loopne lock lea xchg (bad) pop lea cmc xorb push shl data16 cltd or paddb ds rex.WB and loopne xchg cld fildl sbb add pop mov pushfq push mov fwait (bad) gs pop loope pop xor pop in fnstcw fildl retq fcmovne mov out rex.WR ja sub xor or test enterq pop out cwtl cmp pop sbb int3 cmpsl sbb fbld push fldt (bad) rex xlat sub (bad) rex.RX es sub (bad) fstpt (bad) rex.XB imul (bad) mov pop clc sub ss movslq gs (bad) add or cli push (bad) push cmpsl adc mov in cmp mov (bad) fwait rex.B pop and lods fnop jg sbb rex (bad) fs cmp and (bad) push cmp fldt xchg fisttpl repz mov mov pop es sarl callq (bad) or (bad) and add test pop and or fmul (bad) (bad) outsl fildl xor (bad) push or sub and bnd push fstpt retq int3 xlat mov adc movslq neg or stc rex.RB loop cmp mov mov (bad) rex.R rex.RX sbb cli add jmp (bad) adc and retq clc (bad) cmp cmp sub ficomp fldt mov add sbb jnp add stos lea mov rex.XB data16 (bad) cmc (bad) out jnp (bad) icebp xchg or fildll imul xchg fwait push (bad) stos imul shrb repz rex.WB icebp mov sub rex rex.WR rex.WB fistl pushq roll sub add flds mov sbb xchg ss and mov jne cld or cmp mov rolb fisttpl mov cmp add sbb rex.WB fildl lea jne adc movslq (bad) jo pushq jge cmpsb cmp (bad) pushq lea ss rex.XB es fstpt gs rorb jae cmp stos in cmp jo push fisttpl (bad) negb adc cmp (bad) (bad) jg outsb rex.WX fs cld lock xchg push jnp jb mov pop mov push pop cmp jnp cmp rex.B in xchg ja (bad) ss push (bad) jno lret out and outsb (bad) (bad) sub or (bad) adc mov enterq rex.W (bad) cmpsl xor mov shrl rolb pop pushfq mov ja or movslq add rex.WR rex.RXB rex.WRXB (bad) add outsl cmp fstpt pop add leaveq pop cmc pop nop cmp lret rclb or jmpq or stos pop mov add out adc add mov mov and out (bad) out jne (bad) xchg jp sbb and add movslq test (bad) fs fistpl mov (bad) pop enterq rex.X adcl pop jp (bad) (bad) sub xchg out pushfq test cmc push int stos retq xchg pop fcmovnbe lret faddp xchg (bad) scas fcomi add lods xor push (bad) push mov (bad) push mull cmp fstpt (bad) cmp (bad) cli xchg cmp xlat pushfq movabs xor (bad) and retq sbb fistl (bad) pop (bad) mov (bad) (bad) data16 enterq (bad) rorb (bad) jmp pop es rex.B rex.W mov movabs mov push (bad) lahf sar mov std push out xchg sbb scas pushfq xchg fcmovnbe (bad) in (bad) xlat jb pop lret mov mov fildl (bad) add shr clc sahf mov seta nop push fstpt sbb (bad) hlt fidivl imul lret cmp lods mov gs retq and xchg sub stc fstpt rex.RX cmp and mov pop and mov xchg movsl (bad) push jl (bad) and push mov pop out sub cmp fcoms addr32 (bad) jmpq or mov stos lods adc (bad) cltd movabs retq push or (bad) sub in ds mov out add and push lahf mov pop movabs neg out movabs push hlt js flds (bad) sub (bad) jge rex.WXB roll fistl fsubrp jmp out jg fstpt out add fldl mov sub retq out and movabs fcoml mov fistpl std fildl sub (bad) (bad) push test cltd rex.WXB xlat (bad) pop leaveq or jmpq fistpl div adc sbb (bad) mul gs mov lock pop ficoml sahf retq mov in mov rcr gs jnp xchg test ss xchg push add cltd xlat mov pop mov cmpsb lret rclb fistl clc (bad) mov jno lock cwtl fstpt je fsubp cmc jrcxz (bad) iret fwait adcl imul loop pop push (bad) pop or mov or imul rex.RXB std mov jno pop rcll (bad) rex.RX rex.W sbb lea rex.X pop fistpl mov mov out add xchg (bad) jrcxz cmp pushq rex.WR lods fcmove movhps add mov mov push and mov push mov shl or jmpq (bad) shrb add adc (bad) add sbb (bad) rolb xchg mov xchg imul movabs mov sbb movabs fsubl cmp xor fstp pop jl sub or mov fsubl cld rcr jrcxz adc rex.WRX lock jae lods cmpsb in enterq int3 xor xchg cmp xchg lahf push sub lock xchg lods push sub pushq xchg pop setnp sub (bad) lret hlt mov sbb mov test (bad) (bad) mov xchg shlb (bad) fistl xlat (bad) div and xchg mov iret pop cmc xor mov rex.R pop jl nop rex.W movabs enterq (bad) imul lahf rcrb je add (bad) test insl mov (bad) rex.WXB xchg fistpl enterq cmc lea and cld mov jp rex.RXB out cmpsl ja (bad) jae rex fwait (bad) stos pop rex.R std jrcxz cmc (bad) jb add jg sbb mov push (bad) fwait pop mov (bad) pop sub xor sbb jnp pop (bad) fstpt fimull xchg fcmovnu rex.RX loop sub mov fcmovnbe push (bad) cmp jnp xchg pop (bad) (bad) out jge (bad) cmpsl cs add push jnp insb pop lret (bad) (bad) (bad) jg mov imul imul notl fildl gs rol sbb cmc frstor or stos and (bad) xor pop mov jno sub clc add test (bad) (bad) add xor jge fildl add rcrb int (bad) sarl fisubl xlat fldt mov xor pop (bad) mov scas rex.RX (bad) sub stc lret fcomp movabs pop (bad) imul and retq test push pop test movsb sbb in jb fildl (bad) loope cmp jmpq cmp adc rex.RX jp fildl enterq mov outsb insl popfq in mov (bad) mov pop adc (bad) int3 jnp fdivrs jns sbbl push sbb shr mov movabs xor retq xor fcomp (bad) fidivrl test lods rcrl and mov ss out (bad) jb push fistl mov cmp cld repnz sarb cmc sub mov leaveq sti (bad) adc xorl cmpsb (bad) fucomi (bad) cmp add movsl or movabs sbb sub mov (bad) test enterq repnz mov lods pop sbb sub out retq cmp iret push pop fisubr xor or loope pop sbb cmpsl mov sbb movabs mov repz jnp jo (bad) pop push jp mov mov xor adc fistpl loop pop and rex.X fucomi (bad) xchg rex.R pop mov xchg decb xor rex.WRX fwait mov lods (bad) jg fstpt cmp xchg pop (bad) sub std nop cmp cmp xor cli adc xorl rex.WRB add jb jnp gs pushq rcr mov adc mov mov rex.R mov add rex (bad) movslq std (bad) (bad) rex.WR ss or (bad) hlt (bad) fucomi mov add lahf pop rcrb leaveq (bad) rex.WRXB rex.RB pop (bad) mov (bad) (bad) test and roll adc rex.XB (bad) loopne (bad) (bad) rex.WRB adc (bad) pushfq jns jg enterq (bad) mov fistp lret and xchg fcoms mov mov (bad) pand (bad) movsl jne (bad) (bad) push rex.WRXB mov adc and retq sub rex.X (bad) pop lret roll movslq lahf pop in movabs push mov xor (bad) shl and fildl pop mov (bad) (bad) ja fninit popfq (bad) xchg or (bad) (bad) out (bad) (bad) cmpsl rex.WRB (bad) iret fcompl (bad) pop cwtl jnp (bad) cmpsb push (bad) mov xlat retq cmp out add or cmp jae clc scas pop es rex.RXB jb (bad) movabs scas rex.WX add popfq (bad) sub sbb stos fsubs push xor fwait xor lahf insb cli adc sbb pop (bad) in rex.WRB gs rex.R mov cs shrb mov xchg mov pushq push (bad) sub notb xor jmpq in js scas out xor rex.WB rex.R xchg pushfq rex.WX rex.WRB rex.XB mov (bad) sbbl add (bad) xor outsl pushq fcmovne in out jmp lock fstpt mov jno iret fsubrs idivb or callq mov ss xchg (bad) or sub fstpt push adc pop (bad) cmp cmpsl mov addr32 leaveq (bad) (bad) (bad) fildl xor cmp and data16 movabs outsl or fucomi mov (bad) lret nop fmull rex.RXB add mov pop mov fstpt and stos xor pmaxub insb movabs jl sub gs pop pop insl pop xor or lock mov (bad) or (bad) fldt jbe mov lods loop clc test ss (bad) add mov jne loope rex.RX fwait cmp rex.WB pop sbb sarb or mov mov in (bad) int mov movsb xchg ror cmc (bad) (bad) xchg sbb callq rex.X jnp jrcxz and scas mov mov xor stos push pop popfq je (bad) xchg data16 iret rex.RXB cmp and xchg pop (bad) movabs (bad) mov mov (bad) rex.RXB lock loopne scas cmp out mov cmpsl (bad) cmovb (bad) (bad) or cmp (bad) loope jle imul pop fwait rex xor jmp pop (bad) jp gs ja (bad) movabs xor (bad) mov push mov sbb popfq fistl mov movabs imul rex.WRX mov in (bad) adc test or add insl sbb (bad) (bad) (bad) hlt callq leaveq xchg testl sub pushq (bad) pop sbb movabs int3 rex.WX jbe in sbb mov movabs xor cmp adc push mov mov jle pop cmc fild or mov rex.R gs test shrl push jge (bad) int3 add jnp callq rex.W fistpl adc fs mov (bad) jae outsb lret out fstp movsl in (bad) icebp loop jl (bad) and test rex.W jle fsubl pop jp pop mov in movabs test addr32 sub stos scas mov jns fsts movabs (bad) (bad) iret test shlb rex.WRB (bad) (bad) jns pop lock icebp xchg push xchg jae rcrl mov rex.XB rex.WB add mov rex.X jne mov stos leaveq fdivrp rcrb (bad) xor mov push (bad) movsq cmp in xchg out movsb insl imul (bad) cmc pop scas push movsb in cmpsl (bad) jb (bad) xor mov js pop rorl add or in pop jp sub rex.WRX pop outsb rex.RB rex.W lahf or outsl sbbl in add pop adc sarl (bad) test jmp (bad) push (bad) (bad) fcmovb or sbb and (bad) fistl rex.XB test mov lret pushq jle fisttpl in pop fcmovne and orl push cmp scas rorb movslq scas negl movabs xchg jnp cmpsb push add fisub repz jnp cwtl mov data16 cmc test (bad) loop js pushq (bad) int3 mov and xchg fcomi (bad) cmp cmpsb movabs flds pushfq jp pop add clc andl fmuls js out mov movsb sbb add cmp (bad) pop lock jne rcrl lahf gs (bad) xor push push push test hlt loop fistl cmp pop lret xchg mov (bad) imul lods push xor fmul out (bad) sbb test std sbbl movabs sti pushq rex.R mov scas mov rex.WR fmull fs jnp mov cli ficomp adc push (bad) jnp pop std add (bad) int cmp out add cmp (bad) out pop jns sbb (bad) sub rol pop (bad) fildl (bad) sbb add pop mov push (bad) sbb cmp pop xor mov (bad) jne (bad) cmp mov jle iret and xchg stos fsubrs sub rex.WX fldt movabs rex.R rex jp and mov hlt (bad) fildl pop rex.B addr32 leaveq stos jmp (bad) jns cmpsl and fcmovnbe or mov and xchg out sbb rex.WB jo (bad) sub fcomp and cmp int3 cld popfq mov push in add xor and (bad) jle in mov (bad) js xchg movabs and adc lea pushq pop lret add pmaxub xchg jg sbb sbb jbe pop push or test sbb je subl cmp movabs cmc (bad) mov retq std in data16 gs sahf adc xchg addr32 mov (bad) pop adc push rex.WR adcl or xchg in (bad) (bad) add int (bad) cmp xchg add rex.WR rex.WR rex.WXB fcmovnb mov stos cli cmp lods adc (bad) fcomi jne rex.XB loopne adc xchg ja rcll jae scas pop cmp pop in int3 popfq out mov sti mov rex.RXB (bad) (bad) imul mov jb cmpsl movl jl (bad) (bad) sbb xchg repnz rcr (bad) rcl jl rex.XB xorb mov retq lret lods xchg imul (bad) cltd push fs mov (bad) push push iret (bad) icebp (bad) add notb (bad) (bad) out add sub jo loop fstps rolb mov in in loopne xchg pop adc xchg int3 pop mov mov in out shll subl sub cmpsl pushfq xor idivl cmp cmp xlat pop pop cltd sahf pushq cmpsl repz mulb psrad out loope cltd jle rex.X adc xchg int scas int imull xchg callq jnp frndint jge sbb xor jle out xchg rex.R lock cltd fstps repnz hlt mov (bad) cmp mov iret pop rex.R add sbb add fnstenv cltd (bad) leaveq xchg cltd (bad) rex.RB (bad) cmp mov mov retq icebp lods movabs es ss fidivr rorl xor pop cmpsl popfq (bad) or add mov rex.WRX sbb out (bad) mov pop sar fstpl push pop testb pushfq adc movslq (bad) or xchg pop notb (bad) nop stos loopne (bad) (bad) (bad) sbb test or mov gs nop or out sub mov fs lea out in jns (bad) enterq shlb jrcxz rex.W out rex.XB rex.WRB pop (bad) rex.XB and clc sbb insl (bad) pop mov jnp cmp pop mov pushq ss js mov push fdivr rolb movabs jno xor push xlat add (bad) cmpsl pushq add or int3 fwait mov pop fistpl mov lods and (bad) xchg xchg (bad) (bad) fs scas sbb (bad) fldt int3 iret shlb adc pop callq stc pop push insl cmpsl mov iret mov mov movabs xchg movslq lods push pop rcrl fcmovnb (bad) movslq mov sub stc fst rcrb ja jg cmp fcmovnbe xchg fcmovb sbb test je xor leaveq push sbb pop lods (bad) push sub outsl mov fildll jns mov movabs or lods adc pop rex.RXB pop fisubr push jle gs retq cmp or imul fucom (bad) fildl mov mov mov fwait (bad) (bad) sub adc sti mov add adc or movabs callq rex.WRB lock stos mov mov pop fldl leaveq (bad) xchg rex.XB push mov scas insb pop (bad) jo out fisttpl push icebp jae (bad) adc sbb cmp cltd mov (bad) mov mov jmp sub outsl adc xchg add xlat iret adc movabs fistl sti fstpt rex.WR rex.R fwait sbb ss imul lret rex.B jns jae cmp rcr mov pop stos or enterq adc sbb fildl stos lahf test callq fcomi ffree add pop jrcxz and pop push mov adc imul (bad) mov xor jo cmc pop icebp pushq mov clc fisubr outsl fistpl adc movsb add (bad) push fisttpl (bad) retq rcrl (bad) movslq fildl cwtl mov and and (bad) ja fisubr cli rex.RXB data16 cmpsb rex.W cmpsl fstpt stos std lock cmp rex.WRB add rex.WRX or mov mov and push push (bad) mov mov sbb retq insb retq (bad) sarl cmp ss fistpl sahf (bad) in sbb fldcw je out fwait je loop fistpl jl (bad) sub mov (bad) jno (bad) add mov (bad) adc mov test sub jl retq in or jg int3 add js mov fxtract fisttpl decb pop pop and imul in ficompl rex.X mov outsl sub and fnstcw gs sbb addl (bad) xchg icebp mov fcomi (bad) fsubl mov xor pop cwtl (bad) iret sahf jg mov mov lods (bad) rep mov push mov out cmp movabs (bad) pop mov pop stos xor (bad) push pop push test or fdivrs xchg mov and pop sub (bad) pop (bad) cmp jrcxz (bad) xchg xchg fadds movslq loopne jae out retq stc adc push push (bad) sbb or int xlat rex.W and jrcxz (bad) scas stos int div je (bad) and sbb mov push sub data16 ja mov repz fistpl rex.WRB add (bad) add pop fisttp shrl addl jbe in pop ficomp lods out jo movabs add rex.RX fwait cmp int3 movl (bad) fcmovu int adc cli fwait or and fcmovnbe retq rex.WB out (bad) jl or pushfq scas jbe in fcompl fsubr (bad) (bad) movslq repnz outsl add rex.X lahf jl (bad) test in push rex.RX fistl jge cmpsl jne movsl (bad) (bad) sbb repz mov mov xchg fcomi (bad) (bad) xchg fld jp fistl (bad) (bad) icebp popfq ja (bad) jrcxz lea pop subl and (bad) cmpsl maskmovq negl fcmovne and sub movslq mov insb cld retq ss add add shl pop sbb loopne gs (bad) (bad) cltd pop adc and jnp xchg jnp jl (bad) cli jb mov xorl jrcxz cmpsb repz out rex.RB push or fwait sahf rex.WXB pop xor jmpq imul cld enterq fcomi pop (bad) sbb fistl rex.WRB (bad) fldt movslq push fimull mov fstps gs (bad) cltd xchg push cmpsl pushq in jno (bad) (bad) fldcw sbb (bad) pop add (bad) rex.WRXB mov add sbb movabs xor sahf test (bad) lock iret fwait movabs adc pop cmp fstpl or std popfq enterq mov rex.X sub cmpsl mov (bad) pushq cli mov stos xor fstps ss rex jnp rex.WR sbb xor pop push fistpl movsl and fcmovnu pop add movabs popfq jmpq cltd fildl (bad) and lods mov push xorl jmpq mov xor (bad) mov (bad) int3 xchg xchg jnp sub lret repz (bad) (bad) ja adc pop lock push adc outsl je fcmovnbe mov (bad) jns or jno mov std loope shrb cmp outsb mov jge fldt jp mov movabs adc push (bad) jns test xchg mov (bad) loope mov (bad) nop adc pop (bad) (bad) or cmp fldt rex.RX fisttpl xor sub xor retq jg cmp (bad) mov (bad) cmp xchg (bad) or fsub sub cltd fwait jae xor jmpq push mov mov jnp sbb (bad) test (bad) and mov (bad) xchg stc pop add stos fnstsw loop in push (bad) jnp cltd adc test mov sub lock cmp pop stc (bad) mov out add callq cli adc fisttpl stos movabs (bad) cmp push jnp xor sahf adc (bad) and pop rcrb rex push ror sbb or xor sbb rex.WXB ds xor mov scas fstpt sub pop icebp cmp int3 fwait rex.RB (bad) lret and pop lods fcmove mov jno push pop pop iret pop and cmp (bad) pop adc xchg nop cwtl retq (bad) rorb mov pop ja rcrl cs xor or fistpl or (bad) data16 cmpsl rex.RXB add cmp pop (bad) push rcr mov int3 mov imul rex.R cmp (bad) lods callq retq movabs out rex.X movabs rex.RB mov jns sbb (bad) cmp (bad) (bad) and fcomi xchg ficom negb cmpsb iret mov neg jnp jp subl out cmp mov jae (bad) (bad) fistl (bad) mov push rex.WXB out jmpq pop test lret (bad) (bad) pop pushfq push icebp xchg fildl pop lahf lret mov (bad) stc sub xchg out push fisub leaveq mov mov add std stos xor js movabs lods mov loop xchg xor rex.WX and (bad) mov adc push (bad) ja adc test movabs add fs fadds retq (bad) incb (bad) jae jge xchg mov pop pushfq fildl rol pop rorb mov cwtl cmp int (bad) fnstsw mov push and fiaddl cs out imul retq and rex.B rex.WXB pop xor (bad) (bad) movslq xchg push rcrl jnp sbb movabs in mov fistl jnp jle push (bad) pop sub mov and rcrb and (bad) mov cmc add clc and (bad) jo adc sub roll insb mov ss jmpq lea je int pop in sub (bad) (bad) jmpq mov jmp xchg xlat iret rex.R jp fsubp sub pop pop and pop test (bad) js jrcxz retq pop cmpsl push jmp sub xlat cld mov fcoms mull rex.R test xchg xchg fisttpll sti (bad) (bad) cmpsb mov (bad) fwait js jae callq imul mov imul mov orl lret iret cld (bad) (bad) sahf stos cld popq and pop mov popfq jmp gs int3 rex.R pop cs mov int jrcxz cmp sahf mov out sub mov icebp xchg sbb pop jmpq lods cmp (bad) (bad) mul mov fistl callq xchg lods popfq stos ja fstpt pop rex.RXB rcr xor movabs rex.WXB sub adc jg pushq (bad) sbb rex.XB (bad) (bad) out add pop sub shrb add cmp add imul cmp in adc test (bad) xor data16 (bad) pop out fstl pop add push jnp lret (bad) sbb test stc fldt jns jnp lret ds pop sbb pop rex.WXB or mov jnp leaveq mov mov fiadd rex.WX adc (bad) sub scas mov cwtl frstpm(287 callq adc adc insl cmp fistl pop in cs imul movabs icebp pop rex.WXB mov enterq push stc std push cmpsl fwait rex.B out mov jg (bad) orl lret out pop push (bad) and mov push pop pop push fmuls (bad) adc rex.RXB rex.R movabs mov cli (bad) sub and (bad) (bad) push pop repnz cmp shll retq pop (bad) rex.WB pop sbb jno insb (bad) or sahf mov adc or fistpl (bad) sahf (bad) pop pushfq xchg sub rex.XB fstps je iret outsb jle leaveq jmp fistl or movabs fbstp rex.RXB rex.X cmp mov fcmovne lahf jmpq ds push sbb xor ja mov rex.WB lahf pop mov mov jo rex.XB lods xchg cmpsb (bad) jno fisttp fistl pop rex.R cmp or mov xchg adc mov rex.WRB data16 ds jnp imul adc pop and xorl (bad) sub (bad) movsl add pushq rex.WR int or adc stos fistl loope rex.WB movsb data16 popfq fcmovu movabs xchg outsb iret add lods pop mov stc out test movabs mov fildl (bad) movsb mov fist jg or mov repnz add pop test loope icebp rex sbb je or xchg jl repnz pop xor jg (bad) (bad) fildll (bad) pop enterq (bad) movslq sub (bad) addr32 fwait (bad) notb lahf mov cld movabs jp xor test popfq cmp callq fstpt rex.WB ss jrcxz fxch (bad) out lods (bad) jnp sub ja cmp push pushq cmpl (bad) and cmp mov mov rex.X pop cmc in add and xchg ficomp cli cltd rex.RX imul rex.XB xor (bad) fisttpl cmc push jns sub pop ficoml (bad) (bad) (bad) sbb adc (bad) movabs and mov pop rex.WRB rex.WX rex.WR (bad) fwait (bad) sub xchg cld pop jo (bad) fs cltd mov (bad) fwait (bad) add loopne movabs (bad) fisttpl data16 mov xor neg out or mov sbb lret inc (bad) scas (bad) stc ds jmpq mov fistpl jo cmp mov rclb out mov fcmovnb and xor je (bad) sub (bad) movabs sti mov rex.RXB mov fildl cmpsl pop (bad) push and pushq in sub es mov repnz in push loopne insb sbbl or jb push xchg jp sbb js sbb scas out pushq movsb push push vpsllw fmull pop cmp in idivb sub or adc jmp pop (bad) push mov out (bad) (bad) (bad) rex.WRXB fildl imul cltd rex.WRB int pop adc sub (bad) (bad) rex.XB (bad) (bad) mov rex.WR mov jbe adc stc mov or in out push leaveq fistpl callq adc testb (bad) adc mov (bad) iret pop xlat (bad) fcmovnbe cmc xchg jne decl stos rex.WR cmp fisubl jmpq insl cld (bad) xor je jbe int jp fstpt int3 mov mov sahf neg add in (bad) rex.RX pop shlb imull je sub xor loope lret (bad) mov jp jne xchg (bad) jge mov lret lea (bad) jnp enterq push movabs rex.W movsl mov and mov add shrl (bad) (bad) rex.WRX or pop cli pop pop fistp rex.RXB rex.WXB fs rcr (bad) rex.WRX movb mov add (bad) (bad) (bad) add push xchg rex.W sub movabs cli add sub scas (bad) xchg (bad) add in cld (bad) jo sti jne retq vorps fidiv (bad) xor (bad) fwait and out (bad) adc leaveq cmpsb es sub adcb (bad) cmp or (bad) push rex.RB test imul fsts outsb je (bad) cmp pop jl xchg (bad) pop sub std mov push (bad) pop push insb (bad) xchg jnp,pt pushfq cld cmp ja mov std jo mov and mov mov (bad) fldcw pushq movabs cmpsl rex or (bad) rex.RB rex.XB (bad) mov callq unpcklps scas pop rex.R outsb jno (bad) add pop mov (bad) jl sbbb enterq ss adc xchg sbb lret movabs or nop rex.XB jns adc sub mov (bad) xor jo cs nop rorb loopne push adc xchg data16 push lea xor fs jp xchg (bad) add (bad) jmpq (bad) iret xlat insl xchg xchg pop rex.X pop ja add xor jmpq (bad) fcomip and cld push add in hlt sub jge (bad) mov push rex.RX (bad) ffree push add cmpsb cwtl mov (bad) insl and rex.W (bad) sub xchg (bad) or pop or rex.W mov cmp rex.W rex.WRB loopne sub stc cmp mov push sbb outsl gs sub add push loop push and fidivl insl cmpsl lods push mov shrb jbe fcoms faddp (bad) (bad) jp rex.XB xor rex.RB mov jle sub or fistp jp orb xor gs xchg rex.W pop jp adc cmc (bad) (bad) mov cld cmp xchg mov mov lahf sbb cmp cwtl stos adc rex.WR push and or adc fistp cmp rcr cltd movabs fnstcw mov (bad) test loope in xchg xchg iret jle xor orb xor repnz and out xchg (bad) (bad) and pushq data16 xchg adc notl (bad) sub sti int3 push fwait rex.WRB or shrb mov (bad) (bad) xchg cmpsb (bad) (bad) add in rex.RX in (bad) (bad) (bad) pop std or outsl in addr32 fistpl sarl fnsave sbb int vhaddps (bad) clc sbbl mov icebp mov mov int mov leaveq callq jmpq mov sahf pop movslq cmp popfq sarl imul fmuls data16 enterq callq loope (bad) fisttpl fsubrl clc (bad) (bad) adc jg xor fdivrs (bad) es sbb fisttpl lock (bad) xchg fisttpl movslq fldt jle pop sub cli (bad) ds movsl (bad) (bad) stos fstpt cmp fndisi(8087 rorb (bad) in sbb xor test cltd (bad) jnp fnop cmpsl push movsb iret (bad) and sbb sarl and pop (bad) int (bad) fldenv xor jmpq int push cs xor test (bad) in (bad) mov lret lock (bad) (bad) stos out cmp rex.WR test (bad) jb sbb sub xchg sbb imul jg imul xchg and sub lods push adc (bad) jb mov rex.WXB (bad) lock (bad) pop mov adc rex.B mov in pop xchg and (bad) (bad) mov pop test fstpt sub movabs pop js mov retq mov rex.RXB fnop rex.X jae test fsts jns fisttpl jp cli movslq outsb sub sbbb cld fildll imul push xor xchg test jae (bad) jns (bad) es (bad) mov rex.WRXB adc pushq sbb pop (bad) (bad) movabs pop and std sarl (bad) pop mov (bad) (bad) add (bad) or rex.WRB lret mov loop popfq mov cld mov fiadd pop movabs jns jle jns movsb pushfq jle test fisttpll jp fcmovu (bad) js stc xor pop adc sub ffree (bad) sbb int xchg (bad) (bad) pop xor mov add rex jp xor divl lret adc rex.WR pop (bad) cmp mov push test cwtl ss loope clc rex.WB or add or movb popq (bad) jrcxz adc sbb orl pop sub iret push fwait popfq adc mov leaveq pop rex.R je out jge sub scas leaveq mov scas sbb and rex.R in mov adc add fcompl in movabs mov fdivs rex.WX in (bad) cli cmp ds cmp rex.WRX rex.WB js pop or fimul and mov out xchg jns pop adc mov adc loopne in sbb pop fcmovnbe std jo rex.WRXB (bad) add pop fsubrs mov rex.WRX je and mov jge fldt adc mov or cltd sub out lret xor mov mov xchg fnstsw cld stos sub mov (bad) mov pop sti cmpsb fidivr mov adc jae rex.XB mov movslq pop (bad) push xor (bad) mov add movabs loope (bad) (bad) or mov fldt mov sbb faddl lea push sbb fisttpl sbb imul jo (bad) cmp pushfq push jnp je (bad) imul xor mov (bad) sub sbb out push rex.XB lods fcmovb xor jle jrcxz loop xor jl (bad) rcl xchg fcmovnbe (bad) mov adc sahf fwait mov mov fistpl or fistl (bad) rex.X rex.WX sbb (bad) (bad) fwait cmp adc xchg (bad) add xor (bad) shlb mov push or (bad) (bad) mov jnp cmp adc mov stos lret add fisttpl push test cmp (bad) in fmull sbb shr (bad) mov mov iret movabs mov xor retq xorl sub (bad) pop mov movabs in sbb sahf (bad) retq (bad) mov fistl mov add and (bad) addr32 cmpsl ficompl (bad) leaveq mov (bad) pop (bad) cmp (bad) ja sub push sbb mull lret rex.WR push rex.X sbb rex.RX ss fstpt fild (bad) rex.WRXB popfq fsts rex.WB xlat lock roll vpcmpeqb (bad) add fs int3 jb stc xchg fmuls (bad) insl sti jrcxz mov addr32 fcmovne test push movsb (bad) ficompl sub jge imul pushfq scas jp (bad) and sub cwtl cli rex.RX mov fcomi add pop fcmovb movups jb movsl push rex.WR data16 xchg (bad) outsl and jle (bad) adc rex.WR fwait jl mov sbb mov (bad) jnp,pn jge (bad) sub jne imul int3 xor repz adc cmp (bad) xchg fnclex sbb data16 (bad) fsubp jno xor (bad) xchg cld retq add test loopne pop adc gs pop stos mov push es outsl lret jg push cmp mov jbe sbb mov (bad) cld fidivrl cli mov jge mov lret cmp cli xchg imul pop lea (bad) int3 pop clc insb pop mov stos cld mov xchg add xchg fldt and (bad) ficoml jp incl xor sub cmp mov add push out xor movabs fisttpl sbb fmul (bad) jmp jo fildl adc or sbb stos repnz fidivrl fisubr (bad) retq sub mov mov rcll adc (bad) (bad) outsl fld sbb pop out (bad) lret sub addr32 pushq push sti stos add loop insb in jg rex.W sbb in add rex.B out sbb scas sbb mov jp xlat test sbb sbb sbb stos mov or test fidivl sbb push jmp lret xchg (bad) jrcxz mov jge mov adc pop mov or xchg (bad) jbe (bad) mov (bad) xor frstor in test xchg fsubrl xor rex.RB in xchg add fdivs mov jle fdivrs xor mov cwtl stos and leaveq lret jae rcll (bad) jrcxz xchg adc mov jp or push add or cmp stos xchg and adc (bad) hlt fild push (bad) lret (bad) xor (bad) mov jno cmp fistpl int cmp pop (bad) out mov movabs negb cmp fisttpl mov xlat (bad) pushfq mov movabs (bad) fldt add mov sub fildl rex.WRB rex.RXB (bad) fildl vpunpckhqdq sbb jae sti je andl xor rex imul int3 (bad) fildl negb data16 jne mov fistl outsl mov (bad) sub sub shlb adc (bad) imul push cmp cmp retq rorb cmpsl sub int imul adc lahf imul add jae clc imul add test cmpsb fistpl mov mov outsl in and push xorl mov sub pop mov mov fcmovnb rolb (bad) rex.R rex.WR je outsl (bad) or cmc (bad) pop push xchg int cs mov outsl repz rex in addr32 and jrcxz pushq fisttpl xor mov adc xchg cmp fnsetpm(287 (bad) or movabs jns sub fisttpl rex.WRX es jae rex.XB fldt fs lock sbb cmpsb fdivrs xchg cmp mov mov test add jnp movabs mov rdtsc and rex.WXB (bad) imul lahf (bad) or clc and iret imul imul jle sbb rex.WRX test icebp rex.WR faddp (bad) mov (bad) cwtl fstpt jmp mov lret cmp pop scas fstl jg adc jns xlat fcmovnb mov movslq fisttpl adc popfq rex.RX sti lods and add out and mov sub cli or jns rcrl sub test mov lods ja je adcl fild mov rex.WRB mov (bad) loop lahf jg add repnz lods stos icebp jnp add mov fcmovnu (bad) mov jns retq (bad) hlt (bad) mov js fildl std sbb loope pop icebp (bad) xchg rex.RXB (bad) (bad) insl fstpt int (bad) (bad) vcvtss2sd xchg mov pop and jmp out nop ja movabs andl cmp (bad) rex.WRXB fdiv and leaveq adcb or pop (bad) (bad) jmpq add mov pop pop fistl push push test addr32 test sub mov and xor in mov rex.WB test clc fwait orl add fistpll leaveq push (bad) rcrb (bad) rcr xor in xchg mov mov cmp fwait lods imul popfq push enterq mov cmp (bad) pop mov (bad) out or push add rex.X cmpsb adc ja shr and mov pop jle mov fsubs lods fildl std adc out sbb xor js rex.WRB stos outsl adc xor add lahf adc cwtl cmp movslq jb pop js sub loopne adc jnp push and or cmp adcl mov mov (bad) push (bad) int3 and push rex.WX fwait adc (bad) in rex.R mov sahf and stos repnz (bad) mov out (bad) (bad) int lods rex.W xor pop rex.WX clc cld (bad) cwtl lret mov test (bad) xchg (bad) mov mov rex.WRB xlat cmp (bad) cmc pushfq (bad) outsl xchg mov mov (bad) fildl test (bad) mov or (bad) mov push add (bad) sbb repnz (bad) fstpt mov jae lea lods lods test jrcxz (bad) xchg jne and nop test cwtl push repz (bad) jnp out pushq (bad) outsl fdivrs rex.RB and movsl clc xchg mov pushfq rex.WRXB js stos mov and jae insl add (bad) stos cltd xor (bad) pushfq scas fcoms fimull sbb add mov adc add pop fidivrl retq test ss and sub out xor fwait xchg or cmp ja sub loopne fildl (bad) mov add rex.WX adc cmp cmp sbb rex.XB (bad) movabs adc cmp jl and stos ja loope loop push (bad) es adc fisub fstpt je adc (bad) cwtl fcomps cmp pop test rex.WX rorb in pop (bad) pop xor xor mov mov rex.R jle pushq xchg add fisttpl retq push xlat pushq adc mov cmp cltd or mov (bad) push mov test icebp popfq cmp (bad) adc movabs mov or (bad) js jnp shrl fmuls add out rex.RX outsl imul sub and movabs (bad) jnp rex.WR jnp pushfq cmpsl mov rex.WXB (bad) and imul movntq out cs out adc in push jnp (bad) jb out fistl (bad) pop mov sarb cmp fisubl in adc jrcxz lret xchg ja (bad) lock rcrb mov clc fistl int cmp fistl icebp test rex.R addr32 iret stos mov rex fcomi or (bad) lret and ficom push lret unpckhps (bad) fildll (bad) ds add (bad) add pop (bad) xchg jno and gs sub fwait pop push imul test mov test or imul adc rex imul rcl pop pushq std (bad) fs addl movabs (bad) mov (bad) movabs or xchg jne and jae push or mov and xlat pop jbe rex.RXB sahf sub mov cli adc rex.WRB int3 pop xor and and movslq stos (bad) outsl xchg out or push stos ror jnp sti xchg scas in fcmovnu shr and imul incb (bad) fstl imulb pop in mov xchg jle js fwait insl xor adc rex.WX (bad) mov and outsb rex.WRB out gs pop cltd push add data16 outsl rex fcomps add pop fwait (bad) ficoml cltd pop (bad) add mov push pop adc lret xlat push fistpl push fucomi subl bswap rcrl sbb fsts mov es (bad) pop (bad) movabs xchg push repz mov pop pop (bad) icebp pop fcmove xor lea pop test (bad) xchg sbb movslq mov xchg movabs movslq jrcxz (bad) (bad) and xchg xor mov rex.W rclb (bad) (bad) (bad) (bad) sbb lods xchg (bad) (bad) imulb mov sahf mov (bad) int3 jp jl xor fwait rex.RXB lea rex.WRX sbb icebp fs jne rcr stos mov cltd fisttpl mov (bad) sub push xor pop and sbb ja cmc sarb jns rex.WRXB stos and mov int lods (bad) fwait cs xchg pop rex.R fcomps xlat push imul sbb in push (bad) mov pop sub addl jo jno clc xchg adc (bad) (bad) add sub rex.RXB repz fwait (bad) mov loope xchg fstpt (bad) (bad) out or lahf cmpsl fmuls pop pushq fldt and pop jp movabs out (bad) fsubs add jle adc pop add (bad) stc mov or leaveq adc or sbb (bad) out movabs sub rclb mov xor rex.X mov lods cltd rex.R and push setge (bad) jns mov enterq fdivs (bad) test in mov fbstp cmp xchg sbb sbb and (bad) mov cmp cmpsb test rex.WR jg adc (bad) test jle in imul push cmpsb sub pop rcr and imul (bad) jrcxz mov pop add rex.WXB rex.RB in pushq fstpt mov adc cmp jne callq (bad) jnp add mov frstpm(287 adc pop imul movslq (bad) ja retq mov jmp fwait cmp jrcxz (bad) (bad) pop pop popfq push push rex.WXB movabs rex.X xor jae mov jmpq test jrcxz and xchg sbb push or fwait jg add xor ss imul push retq rex.R int3 mov movslq addr32 test mov (bad) cmp jp mov pop push adc xchg pop cmp push rex.R xor xchg sub icebp (bad) negb (bad) sti pushq cmp loop rex.WRB (bad) cmp xchg lret push sahf mov repz lret (bad) rex.X mov (bad) jnp pop callq jo (bad) jnp sti mov jrcxz cmp leaveq test (bad) jge fwait add rex.RX (bad) out sbb pop imul jnp jo or lods fisttpl decb retq rcrl add je mov cmp rex.WRX fildl mov (bad) fcmovnu movb out es mov hlt test fwait cmp cmpsl (bad) enterq or push bsr out lods cmp mov movabs xlat orl rex.RX add hlt pop lahf pop out vxorps jg sti mov sbb (bad) jb test and sub int sbb cmp xchg jnp (bad) mov ja fstpt fs pop gs outsl orl retq (bad) test jae (bad) fldt stos and int jno std (bad) lods mov (bad) jge (bad) xor sbb (bad) gs jno (bad) stos rex.X (bad) pop jne jae rex.WRXB out push rex.RB rex.W stos adc pop pop loope cmp cmpsl fist adc sbb vfmsub132ss push cmp pop lock stos fisttpl fistl incl repz sbb pop imul hlt fldt mov sub movabs fldt rex.WXB cmp fnstcw in add js cmp in out mov in jns sub int imul getsec fildl (bad) jp loop (bad) fscale shll sti (bad) (bad) cmp mov rex.WXB cs lods push (bad) sub mov test rex.WRB add out stos mov cmp adc outsb jl jnp sbb decl jno retq rex.XB cmc fdivs in cmpsb (bad) mov lea imul fildl ds imul test cmp xor and pop mov jno fld insb sub push mov (bad) push sti fistl fldenv adc iretq mov push fsub out cmp fwait jne ja fldt jle mov jp mov scas fsubs jno jrcxz fucomi mov (bad) (bad) pop or in insl fisttpl (bad) mov (bad) and jno fildl cs gs leaveq imul (bad) out and fistpl (bad) test fsubl (bad) (bad) pop lods push add jne or (bad) (bad) repz clc xor fmuls xchg fucomi popfq pushq iret mov pushfq fisubl fs test ja mov cmp repnz outsl gs fisttpl push test mov std pop jl adc fs (bad) ficompl sub fistl (bad) test sti rex.WX push add lret rex.WRB and fisubl sbb sub (bad) test loop test rex.RB stos addr32 retq and cli or rex.RXB pushq (bad) rex.WRXB sub mov mov add mov rex.W adc (bad) movabs lods jp ja (bad) xor mov scas (bad) xchg (bad) movabs sub nop fcmovnbe in mov adc rex.WR sub clc cmp in movabs mov push (bad) mov xchg fldt mov rex.WXB mov imul cmp (bad) (bad) lahf cs lods mov pushq lret xchg mov jrcxz sarb enterq add fidiv mov ds test add scas movslq ficoml (bad) (bad) gs (bad) jo push mov in neg or out rcrb pop roll negl fdivs mov pop loope outsl xchg fldt and int mov cmpsb out xor rex.WRXB (bad) cmpsl rex.WRB adc cs jne mov (bad) (bad) iret jmp int3 add sar sub mov mov xchg out pop movabs sub es and sbb outsl adc movabs pushq sbb test addl cmp adc pop pop and es jo rol test push xor push adc jbe int and pushfq add lods (bad) push jne frstor iret push loopne mov cmp fidivr rex.B and cmc outsb sub mov (bad) sti rex.W pop sbb mov mov push mov mov xor lock adcl mov (bad) rex.RB test rex.XB rex (bad) clc or retq (bad) push adc sub gs sub clc sub cmp pop sub repz mov lock mov (bad) rex.B xchg sar loop mov pop callq cmpsl xor sahf push mov sub (bad) lods out fisttpl add out mov movabs sub jno add mov outsl mov fucom stos (bad) jne outsb iret rex.WRB (bad) mov sbb (bad) lret cs rex rex.WR xor (bad) test add (bad) sub mov xchg incb repz (bad) out (bad) scas add cmpsl sbb fwait jge cltd jb xchg movsb adc out push rclb sub sub scas rcl out iret mov (bad) cmpsl imul outsl (bad) sub pop pushq fmull scas jp (bad) iret cmpsl push pop xor mov mov stos sahf sbb imul gs mov mov sbb test (bad) ss (bad) push sbb sub insl xchg (bad) adc icebp push (bad) rex.RXB add sub outsb repnz retq mov (bad) sti movabs xor sub enterq (bad) (bad) lock xchg js imul jns (bad) (bad) sbb (bad) cmp or fadd jle (bad) pushfq fistpl add sub or (bad) jmpq fucomi rcrb out cwtl xchg rex.WRXB sbb fild mov add fucom out push nop xchg pop ds (bad) sbb (bad) xlat adc insb mov push rex.WRX push pop (bad) jbe movabs iret popfq mov fcmovnb rcr (bad) rex.WXB loop (bad) mov xchg stos (bad) adc add adc retq (bad) imul (bad) xchg push push (bad) out adc sbb ds iret pop add pop sbb ja (bad) gs add js (bad) (bad) push adc fcmovne lret (bad) mov retq popfq rex.RB (bad) fistpl (bad) imul and mov (bad) or addr32 push lods cmp and data16 (bad) in test test xchg rex.B rcr cltd sub (bad) xchg fimull xchg cld stos loop or fldt (bad) or (bad) xchg icebp mov sbb xlat mov (bad) jne mov xor movabs cmp loope xchg js (bad) rex.RB mov (bad) cmp cmpsl mov retq fs or (bad) test (bad) xchg xchg (bad) mov cmp add fnop (bad) pop jmpq loope mov push out out (bad) int pop cmp (bad) je rclb (bad) pop mov (bad) rex.WX jmp rex.XB rex.B rex.WRXB ss sub imul sub pushq xor xor movsb out sub or loopne jp and repz mov repz cmp lret (bad) int3 mov movabs (bad) out mov ss insl sbb cld jae movabs or xchg push insb sbb orb lea outsb push cwtl es fiadd cld lret clc jl,pt (bad) xor push retq mov ja rex.B add or pop rcrb and sub pop mov push nop cld callq (bad) sub pop mov pop jg jne fisttpl xor sub cmpsl (bad) (bad) pushq mov cltd in xchg jnp fmul (bad) cli or callq pandn rex.XB push outsl push (bad) (bad) (bad) jns mov mul fwait addl pop or push fstl rex.RX rex.WX addr32 fcomi pop mov (bad) cmp lea retq (bad) mov fwait (bad) addl jmp xchg loopne fs fyl2xp1 fcmovb int3 jrcxz movslq rcr sbb jb rex.R lods fistl mov (bad) xchg lea (bad) (bad) mov (bad) int rex.WRB fcomi xor test fwait xchg fisttpl lods imul (bad) mov fistl mov ja jge,pn sub sub (bad) xchg (bad) adc add outsl imul mov in xlat rex.WR sbb stos (bad) xlat (bad) cmp (bad) (bad) (bad) jg lret push (bad) fisttpl (bad) loope rex.XB (bad) fdivs sub cld callq fisttpl out outsb fcmovnu sub cld iret movabs pop pushfq rex.WB cmp adc out out iret xchg and rex.X mov mov popfq adc and (bad) cmpb mov gs mov imul xchg sbb sub icebp (bad) jnp adc cltd (bad) sub and push ds xor push jbe pop mov jnp xchg (bad) rex.XB mov jrcxz fistl xchg mov outsl sbb mov adc pushq callq mov mov fwait cmc or jb retq jmp ds xor xchg imul mov out fnstcw (bad) jae jnp jne (bad) pop iret imul or adc (bad) (bad) push enterq jne xchg (bad) addr32 rex.WR rex.W rex.WRB or rex.B movabs ds add test (bad) iret (bad) pop cmp add retq jle ds push cmp xchg nop fdivr (bad) fwait (bad) cmpb (bad) sub adc (bad) lret add fcmovnb testl add repnz movsl mov xchg icebp (bad) (bad) lahf and (bad) mov jp mov hlt je lods hlt out retq stos fwait push sbb (bad) movsl loop pushq mov rex.XB rex.WR add stos (bad) mov ss pop addl shll (bad) rex.W add xchg (bad) cmp (bad) out lock mov cli (bad) push addr32 stos icebp sub (bad) rex.WB cmpsb sbb (bad) sbbl or pop pop shrb pop (bad) xor (bad) in callq pop push lret adc jne cmp sbb fisttpl fist jae xor loop sub pop mov rex.WX lret (bad) or fildl xor lods (bad) rex.RB movabs pop int3 (bad) mov mov (bad) adc fisttpl in push hlt rex.RX test (bad) hlt jmpq mov out loope fstpt (bad) int3 rex.WRX pop (bad) in fisttpl std data16 fidivr sbb rex.WRXB mov lods mov insl xchg fildl loopne xor (bad) push cmp and movsb fstpt jmpq pushfq push (bad) stos jbe cmp mov fwait add fs fisttpl (bad) push sub jb jmpq fild pushq rex.WRB (bad) js in sarb mov add loope (bad) (bad) or rex.WB (bad) pop mov mov jns fsubr sub rcrb callq in xchg sbb xchg out sahf sahf sub fprem1 cwtl (bad) movabs std cwtl stc and lock jb fnop movsb (bad) xlat cld movslq pop push push lret sbb sahf shlb icebp sarb out xor xchg (bad) cli adc pop mov xchg jae gs push lea sub adc (bad) rex.B sub jb decb cs jno insb ficompl cmp fnsave mov sbb push test (bad) adc push or jp loopne adc ja xor cs jbe or rolb (bad) sti (bad) scas jb (bad) adc (bad) push pop (bad) xchg rex.XB imul jnp shrl js xor out mov (bad) push adcb jg fstps cmp xchg pop cmp (bad) rex.RXB pop (bad) fs adc mov (bad) rex.WRXB repnz xchg not negl idivl add (bad) test xor (bad) (bad) out and mov addl shrl fistl mov (bad) insb ficoml stos rcr loop sub out sbb (bad) add fwait sarb or xchg movabs stos (bad) sub mov rex.WRXB mov cmp mov jbe add rex.WRB rex rex rex.RXB fisub (bad) pop scas rex.RB sub mov push scas and insl mov (bad) (bad) rcll mov (bad) cmc stos jno sbb lahf (bad) (bad) sbb xor fwait jae pop mov shlb fcomps (bad) pop cmp xchg data16 xchg ja push rex.WRB test (bad) and pop es loopne imul add cmp pop movabs push mov pop insb leaveq test outsl (bad) in retq add (bad) and adc and movabs repz movslq push xchg idivl pop xchg pop adc fstpt xchg (bad) (bad) cli pop cmp lahf loope rorb in out adc imul or fstpt xchg rex.RB add push movsb cmp xchg rex.RB or adc fcoms movabs fwait sbb push sub xchg cmp sub rex.WRX out xchg xor pop sbb push imul cmp (bad) and fidivrl movabs jne (bad) retq (bad) mov mov jge fisubrl rex.WB movabs retq stc iret cmp imul mov pop fisttpl add fs retq rex.RXB rex.WB (bad) sar repnz in sub rorb mov mov insl notl sysenter lret jmp jae nop pop or xor pop int sahf imul sbb js sub sarb mov out and rex.WR sub mov clc (bad) sub (bad) xchg sub fistpl cwtl adc iret and (bad) or je mull fistl lret rex cmp (bad) xor (bad) movabs lret ja cwtl pop ss jge adc or add lock insl cltd movsb push ss add in imul or pushq std icebp out cmp and movsb cli nop fmuls sub (bad) int (bad) (bad) mov ss mov mov pop pop andl cmpsb (bad) movslq rex.WRXB jge fldenv rex.WRB (bad) jnp sbb sbb data16 mov iret nop mov out pop rex.WRB or sub ds mov movslq push cmp mov fucomi sti sub rcrb (bad) (bad) in mov jns cmp rex.WRXB std xor (bad) push push fwait xchg imul loop add or (bad) rcrl fistpl xlat mov pushfq push xor insl fldt add cmpsl (bad) icebp xor test sti (bad) hlt adc shrl jge (bad) loop jle insb cmpsl adcl sub cmp xor xor sahf mov fcmovnu xchg and adc jb movsl (bad) (bad) xchg in fisttpl movabs (bad) test adc sub loop rex.RB cmc mov loope (bad) sbb retq lods cmpsb movabs (bad) (bad) jle and jrcxz (bad) mov int3 rex.WXB fistl scas pop es add (bad) test or sub sar sbb test xchg sbb popfq in jo lret or clc rex.W sahf xor imul (bad) (bad) xchg sub xor mov (bad) push iret adc enterq xchg xchg scas pop mov (bad) (bad) (bad) push sti pushq (bad) mov sub cmc xchg insl cld adc xor cwtl sub rex.WX fwait add (bad) jnp xor xor retq mov sbb hlt loop in adc (bad) jp (bad) cmpsb and fistl js jb jnp loope xchg scas mov (bad) jp sub fsubrs add pop callq data16 imul int mov fcmovnbe sahf mov jne fcmovnb jb pop jns jmpq ss xchg jne push rex.WRXB (bad) mov push enterq fisttpl xchg (bad) jno lods jns outsb movslq lret in ds fisttpl mov fwait and fistpl sub outsl mov test fs movsl xor gs fwait jge sbb stc cmp and pop ja enterq cmp rex.RX imul out xchg jne (bad) (bad) imul (bad) std rex.B (bad) (bad) incl or fmull pushfq cmpsl imul push (bad) (bad) mov imul adc out in movabs nop add movabs (bad) add jae (bad) subb jrcxz xchg pushq pop es xor fwait cmp xchg mov jrcxz and cmp (bad) push movabs xor pop cwtl out rex.R retq xchg in jmp (bad) pop sub mov movabs jp fisttpl rex.RXB sahf lret jg fisubr loope mov lock pop mov mov retq mul rex.RXB rex.RXB lret jle (bad) jrcxz cmpsl fcomps pop sub mov sbb and sahf rcr (bad) xor or jrcxz int lea fildl (bad) mov sbb idivl xor rex rex.X cs adc sbb fwait rex.RB and lock add outsb (bad) int3 out imul pop lahf or rex.R rclb pushq cmp sahf or int3 jp push fistpl (bad) pop mov jb mov sbb rex.WX (bad) out movabs xor push sahf outsb sub test fldl movabs jge jae cmpsl divl scas add (bad) (bad) sbb (bad) popfq jge rcr rex.WRX jns or loopne sub movsl pop rex.RB cmp fnstsw movabs or cs mov sub (bad) cmpsl or cmp clc jo,pn xor cmp jl mov (bad) stos (bad) (bad) or add mov adc push pop mov sti jae (bad) mov adc rex.RXB iret stos sahf cmpsl rex.WRB (bad) push and jp xchg sub pop stos xchg cmp mov nop mov or xchg mov xchg rex.W lcall jns fnstcw and mov push addr32 (bad) (bad) add ja jae xchg mov rolb (bad) ss mov (bad) fnstenv repz fs (bad) jno cmpl push rex.WRX mov (bad) lock test pop rex.R imul loope pop rex.X gs or movsl jns (bad) lods pop (bad) int3 (bad) icebp addb rorl xchg or rcll sbb lock jae sarb mov mov imul mov stos test and (bad) pop (bad) negl xchg pop repz (bad) mov (bad) mov cmpsl adc jbe xor rclb adc jg rcrb bswap (bad) push (bad) pop jrcxz lahf test and imul add out pop xchg (bad) sub lahf movabs adc movabs movabs (bad) sbb insl std scas out out (bad) inc mov rex.R (bad) xor movabs loopne negb (bad) (bad) mov sbb cmp outsb fwait xchg cltd int3 stc gs iret rex.W enterq add lock (bad) (bad) push rex.RX fistpl stc hlt scas fstpt test (bad) fistl fnstcw int3 mov rex.RX jl retq adc jle shlb and rex.X rex.WRB mov mov (bad) (bad) xor or sbb pushq popfq and fucomi shrb rex.WRXB jg fisttpl (bad) mov ja or mov (bad) int movslq fldt fwait or adc mov xchg (bad) stos and (bad) pop adc negl mov mov mov jnp leaveq push mov retq insl sub pop jnp hlt xchg pop mov pop sub cli fstpt mov push cld mov jnp xor lret insb rex.WRX push mov cltd std mov pop in push xor fistpll pop pushq xor rex.W ss (bad) pop and imul or pop jp movabs imul mov movabs icebp mov mov jle jge push add mov cmp jmpq fwait mov cwtl rex.WXB push (bad) and fildl adc in loop callq int3 movabs sbb repnz and test callq jne test fistpll lret sbb gs xchg (bad) orl cmpsl jno xor jp cmp and rex.WRB (bad) sar jl retq cmp fcmovnbe insl scas fidivrl out push fsubrl (bad) (bad) xor mov fs pop (bad) (bad) pop add fistpl and jrcxz (bad) jnp xor movsl (bad) (bad) fildl add insl mov cwtl jne imul adc rex.WB cmp mov (bad) fcomi repz sub rex.WRX rex.RB rcl adc scas ja (bad) cmpsb retq (bad) enterq callq sbb (bad) pop pop jp sahf and jnp scas mov push rex fisub fldt and out sbb cmp pop callq mov nop jge adc rex.X cwtl imul mov in xor add sbb icebp add test out and fistl stos pop lea enterq jp fstpt stos (bad) xchg sahf xchg pop (bad) (bad) test rex.RX rex.RXB rex.WXB or mov (bad) or roll repnz (bad) movabs mov (bad) (bad) (bad) cld imul roll add fnsave rex.RXB push movsl add (bad) lahf add (bad) sub (bad) test mov lock out (bad) jl (bad) movabs cwtl (bad) in cmpsb int3 lock sti push (bad) mov fcmovnbe mov rex.WRB xchg fstpt xor xchg (bad) (bad) lods rex.WB xlat (bad) jae rex.RXB mov (bad) pop pop loop shrl cmpsb (bad) pop sub pop (bad) mov pop push mov out (bad) je rex.X sar rex.XB fstpt sub rex.WRB out movsl imulb icebp (bad) pop fcmove (bad) jns pop rex.X fwait cmp mov movsl sub push cltd scas rex.WXB ds stos fwait add repz and pop ja or sbb and (bad) fildl repnz mov rex.RXB retw mov cmp fstpt ss pushq (bad) jp or sahf stos (bad) mov int (bad) outsl fwait add jp fdivl imul (bad) imul mov loopne stos outsb (bad) cmp (bad) fcmovnb rex.XB cmc cs fcmovnbe sbbl push mov (bad) or (bad) nop jo retq cwtl lret cmp out lahf cli pop lods fs lea cmp fistl pushq pop fcmovnb movabs rex.WXB loope stos and rex rcl negb (bad) fcomps sahf push mov xor mov adc loop (bad) loope movsl icebp pop fstpt ss mov clc cmp (bad) cltd fldl data16 iret (bad) movabs out jae stos ds pop cmpsl (bad) (bad) adc movsl mov pop cmova or add rex rcl mov (bad) mov adc (bad) xchg mov rex.RXB jb jnp mov push repnz addl pop lret sub movabs fidivl (bad) (bad) jbe push imul mov xchg mov mov rcr movsb es adc xor lods rcr xchg test mulb fistpl push push mov in pop cld cmc (bad) xor outsl mov mov stos stc cmpsl mov xchg adc rex.WX (bad) fstpt (bad) pop in and jo test cli rex.RX sbb int (bad) adc test pushq idivb pop cwtl push jge shl int rex.X cs push shll retq cmp int sbb fstpt (bad) mov pop lods (bad) adc fidivrl loop in movslq mov sbb rex.W movslq (bad) xor sbb loopne rex.RB mov rcrb lock rex.WXB out cltd sub add rex.WR pushq mov imul pop data16 mov movsl stos or fmuls movslq pop sbb leaveq sbb xchg fiaddl sub mov rex.RXB xor rex.XB cmp cmpsl (bad) ds out mov movabs enterq cli push (bad) std shrl cmp lret xorl xor rex.W js inc rex.R (bad) mov (bad) loop shll jnp (bad) xchg sub (bad) or (bad) rex.RX fistp rex.WXB jbe movslq push jrcxz rex.WRXB rex.WR out (bad) rol xor add mov insb mov sbb insl enterq pcmpgtd sbb cs add insl movabs insb lahf (bad) cmp fildl xchg or stc lcall mov loopne rclb loope rex.WR jns xchg rex.WRXB (bad) and sub lods push fistpl push (bad) jge cmp pop adc movsb (bad) mov mov jg stos rex.RX imul fnstenv pop (bad) (bad) (bad) or rex.B (bad) pop mov push callq (bad) fldenv movzwl sbb jno mov (bad) movslq pop push jb es fcmovnbe cmp adc adc sbb icebp test jge (bad) mov push or jae jno sub insl and xlat mov rex.WXB pushfq sub popfq pop xchg mov retq sbb mov rex.WRB sbb in out push je (bad) sub movabs sub (bad) jnp,pn sub es (bad) out (bad) adc mov jmpq leaveq ja test insl fnstcw test pop rex.RX (bad) fsts sbb xchg mov rex.RB (bad) xlat xchg pop fstpt cmp fs std cmp jp mov sbb fcoms cmp notl fwait mov addr32 leaveq fiaddl jrcxz xchg out xor jle es pop shl fdivrs rex.X mov push mov cmc jno mov jnp lods iret jrcxz sbb movsl neg int3 mov fcmovnbe push mov pop fcmovu movsb pop cmpsb pop js roll or rorb adc pop imul or int sti repz data16 shr push add (bad) or (bad) xchg (bad) mov pop loopne add fstl or lret xor (bad) mov in xlat and outsb pop loop fldt (bad) fbstp jnp mov adc int add jbe fisttpl scas (bad) imull rex.X (bad) mov pushfq mov fildl scas lret (bad) stos mov (bad) pushq push push loope fstpt (bad) or rex.WRB rex.W jge gs sarl xchg negb rex.RX movslq (bad) cmp mov rcrb fldt mov out pop int pop (bad) out fwait pop xor movsb fimul imul scas push or (bad) (bad) mov loopne and fucomp imul (bad) and movslq fcmovne int xchg test (bad) cmc out push rex.RX fistl jnp cmp in mov xor je fldt sub fistl jrcxz mov cmp rex.WRX push jnp callq or lahf xchg (bad) adc xor iret rex.X fucomi mov xor xchg or xchg jl jge icebp jmpq mov retq es loope mov adc insl sarl jno push sub and fwait int3 add rex.WX fldl sti (bad) and (bad) cli add lret stos mov pop movabs jg rex.WXB (bad) int3 and insb cmp (bad) fildl fmull in icebp jl add push lret jb and (bad) cmpsb push jnp mov jno adc (bad) fistp and xor fs jae insb xchg jge (bad) jbe movslq rex.RB jrcxz pop repz cmp fs out rclb subl imul (bad) scas and movl rex.WX lret (bad) stos (bad) ja jmp adcl fdivs int3 xor retq clc sbb (bad) pop in rex.RB movabs push fisubl mov lahf mov mov icebp or repz sub xor jne sbb cmpsl pushfq xchg loope je pop lahf mov and popfq push cmp lock retq add (bad) sti pushfq xchg cs (bad) xor fcomp jns xchg rex.RX imul orl (bad) js jp rex rex.W adc push push mov add jmp (bad) outsb (bad) and ficoml hlt mov xchg pop cmp (bad) fnstcw jb (bad) js fwait xchg imul add push push hlt fwait xchg mov (bad) jp cmp leaveq lret (bad) std cmp pop xchg (bad) rcrb insl loopne (bad) xor fimul jmpq pop jl flds push jp adc mov (bad) xor std ja rex.RXB (bad) iret (bad) mov cltd push (bad) mov (bad) sub pop (bad) hlt sub int rex.B add data16 and pop jmp pushq stos push sbb movabs movsl int3 sub movabs xor cmp cltd clc (bad) adc scas in rex.WRX rex.WRXB mov insb pop in out sbb lods ja sbb pmulhuw in (bad) cmp lret xlat pop test stos xor (bad) or scas in adc shll rorl pop and fwait or or pushq rex.WRXB (bad) (bad) mov scas enterq adc data16 and subb add cmpsl rex.WB rorl seta fwait int out sub pop rcrl (bad) loope jrcxz fcmovu fdivr cltd pop pop push fwait (bad) enterq or jle (bad) and rex.WXB (bad) mov (bad) cmp in add (bad) fdivp (bad) xchg shlb (bad) lods xchg (bad) fsub enterq pop ss (bad) pop (bad) mov push mov jle decb nop xchg sbb pop mov add movabs xchg sarl and shrl (bad) adc in mov cwtl mov or and (bad) fcmovnb or rex.R ss sti push in es pop pop rex.B gs (bad) in sbb ja loop mov mov mov test lret cwtl sub push cmp push xor std ss lret js out rex.WB insb ss addr32 sbb (bad) adc icebp std or cmp sbbl adc insb rex.W cld mov pop mov mov mov mov jne mov lret sub cmp repnz ds xor pop xchg adc cld mov and (bad) cltd cmp pop fstl jb (bad) and sub mov fwait (bad) or cmpl xchg pop (bad) icebp pushfq fcompl (bad) pop sar rex.WB mov loop mov fstpt xchg scas mov movabs mov rex.R xor stc rex.WR (bad) and mov (bad) (bad) cs mov or and xor rex.RX push pop scas adc (bad) js fldt mov fcmovnb test test sbb fistpl push mov pushfq xor movabs loop mov (bad) adcl sub sti lods rex.RXB leaveq push jle add lahf jbe out in add fisttpl ss xor (bad) pop icebp xorb or fwait adc sbb sbb cmpl and leaveq out sbb imul pop setns mov lods sub cmc (bad) (bad) pop fistl scas popfq pop iret or push jle leaveq enterq pop sub sbb fcmovnbe sbb icebp fisttpl xchg push movslq andl mov jp or xlat jae outsl movabs sti xchg cld xchg or (bad) lret fdivl fisttpl xor fcmovnbe xor add lret mov jae (bad) (bad) (bad) (bad) jo pop mov loopne,pt rex.WB cli mov rex.X rex.RX rex.WRB xor xchg (bad) in fs (bad) pushq cmp add pop nop and sbb mov rex.WRXB mov pop adc and cmp adc fisub sti mov sbb xor adc imul rex.XB out cli cmpsl xchg (bad) xor shr jg neg lret (bad) (bad) adc test mov xlat ror sbb cld in mov rex.RX rex.B fnop or or mov pop jmpq or fwait adc icebp fwait enterq int (bad) push movb mov pushfq jle rex.RB mov mov pop xchg cmpsb repz add lret fdivl pop rolb adc sbb xor repz cmp movslq jns iret cld sahf ja add out cmpsb sub test enterq pop xchg scas ds sbb loop rex.R lods loope add stos and in (bad) (bad) ficoml jnp (bad) (bad) xchg imul xchg xchg add xor data16 out leaveq (bad) sub xchg cwtl (bad) push retq xlat out imul scas addr32 jns rex.WXB jnp lret or rcrl mov cmp shrl xchg sbb hlt mov (bad) add cmp retq sti cltd xchg cmp movsb pop mov and rex.B rex.WRX adc pop (bad) sbb scas popfq xchg push or fcmovne pop jns push rex.WRX fs (bad) jne push and (bad) outsb xor sub jnp jo jnp cmp fidivr or (bad) sub hlt jns rex.WRB cli int pop pop rclb rex.XB mov pop mov fistl and cld rcr ja insl pushq fwait jb orl xchg in jnp xchg repnz shrb (bad) mov pop mov rex.WRB (bad) jns lock or fsub xor and xor fwait (bad) xor mov cwtl lret stc stos fmuls lock mov (bad) adc mov je jg icebp and (bad) (bad) fimull movabs fisttpl fisttpll mov fimul mul or pop xchg xchg rex.X (bad) mov jge lods mov cmp cmp clc adc fwait sbb stos xchg int or mov mov rex.B (bad) addr32 xor (bad) rex.X rex.WRXB cld mul movslq jnp xchg (bad) shlb xchg (bad) mov mov jae sub ja adc or scas (bad) lea cmp (bad) nop enterq sbb icebp stos (bad) ja lret (bad) xor out xchg (bad) sbb rex.X movabs xor jnp mov callq nop xor fistl in adc cltd fistl add fistl (bad) int lods (bad) cli xor push or fldcw loop nop adc scas pop xchg (bad) in (bad) (bad) cmpsb (bad) in sbbl xchg cmp xchg addr32 out jae or jmp mov jrcxz,pn (bad) mov mov mov loopne fwait rcrl pop (bad) (bad) adc pop clc lock je ds sbb jp (bad) and mov movabs or or (bad) pop lods in mov and mov mov mov adc pop xchg add mulb std adc stos jae xchg or or rex.WRB rex.WRXB movsb sub retq pop jae ss sbb btc fwait (bad) xchg (bad) lret (bad) mov fcomi (bad) lahf xor sub adc sbb rex.B (bad) insb and fcmovne fstl mov data16 cli push xchg fldt mov rex.W nop cmc add cwtl stos dec (bad) adc (bad) jrcxz xchg cmp pushq add (bad) adc fild insl test outsb (bad) popfq rex.WRB sarl callq xchg mov cmpsl (bad) out xchg jl mov adc scas addr32 (bad) rex.WX mov cmp adc sub xchg stos movabs rex.WRXB and fildl mov cmp jb lahf jae or outsb sahf nop (bad) jle movsb jnp fnstsw orb lea (bad) add rex.WRB or rex.WB cltd fistp stos and in (bad) imul push fldcw out loope stos (bad) (bad) (bad) lret (bad) movabs addb fwait lods sub jrcxz movslq leaveq clc rex.WRXB (bad) xor push (bad) add rex.XB scas gs sub retq hlt mov outsl icebp fwait int (bad) and fwait sub jnp out push fwait lock push mov push adc jle push add pop dec imul pop mov (bad) lock retq rex.B rorl ficoml mov (bad) add mov jnp pop xor jb cli sbb test jl popfq sti adc (bad) test or xor (bad) fstpt or (bad) xchg xchg test jnp scas sub (bad) jnp adc movabs sub xor jmp lock (bad) and adc jns loopne sarb jne out fwait or adc (bad) fidiv jno lea or cld cs add test xchg movabs fldt ss (bad) pop neg int (bad) jne jge scas add in insb rex.X or or (bad) ffreep pop fistpl add sbb xor fwait xchg cs (bad) fstpt out mov or jae (bad) and rclb repnz rex.XB push or shl cmp sbb (bad) negl (bad) sahf fistp or add je rex.X xchg (bad) adc mov push fnstcw fisubr (bad) push sbb push stos adc add vcvtps2pd fistpl sbb jb xchg movabs adc rex.WX lret pop xor std mov fistl rex.R nop rex.WR (bad) scas pushfq mov xchg insl (bad) mov loopne (bad) mov rcl cld lahf add sub (bad) std rex.WRX rex.WR nop (bad) or stc movslq xor cli fldl enterq fistl sub int add cmc enterq xor xorb (bad) mov xchg sub rex.RB (bad) mov cmp test clc movslq (bad) jmp cmp pop xchg mov popfq fistl push shll mov sar or (bad) mov je outsl xor and in rex fiadd scas stc stos jbe xlat sub rclb (bad) pop jnp sbb fistl insb jle fisttpl cli adc loope repnz add mov movsl callq (bad) loopne,pt pop test pop xchg rorl pop rex.X adc mov xchg mov mov mov sub imul movabs ja (bad) clc xor pop in loope xchg mov sbb shr popfq outsl adc mov xchg out loopne (bad) sbb in movsb vmovd mov xor fbld nop imulb (bad) fadd push (bad) add mov hlt mov cli and xchg data16 fcmovnb and rex.W sub mov rex.WRXB (bad) rcl cmp or std test out pop popfq cltd hlt sub xchg push mov retq (bad) sbb rex.WR fucomi add mov (bad) cmp jno stos pushq jge fs push xchg fwait outsb add out orl add rex fwait lahf cwtl cld lret mov pop fildl adc jo (bad) insl mov and rex.WR cmpsl mov sub (bad) repz or and cmp movslq in and movslq movabs mov rex.WRX loope retq psraw mov fcmovne push jb clc repnz in (bad) xlat (bad) add shll cmp jne mov mov sbb rcl jmpq rex.WRB (bad) movabs mov fstpt (bad) rex.WRXB jnp rol (bad) mov fisttpl (bad) fs xlat lea rex.WX xchg (bad) fnop and rex.XB add rex.R xor or pop loop fiadd xchg sub jb (bad) xchg pop pop xor or hlt (bad) pop scas rex.RB (bad) sub push sbb adc imul movsb or fcomi pop mov or (bad) fldt sub imul (bad) mov repnz in pop (bad) cmpsl sbb outsb cmp je or sbb sahf notl push lret (bad) popq in fwait bnd push fadd push jge mov ficompl xchg (bad) xchg (bad) cmc nop fildl cmpsl (bad) and push iret sti loope pop (bad) lahf sub pop subsd cmp neg ffree and lock rep (bad) (bad) (bad) add movslq push jne in push jmp loopne pop fsubs mov jmpq cli lock (bad) scas movsb pop lret fistl xlat (bad) fcomp movabs movabs in iret jbe rex.R cmp shrb jmpq and test rex.RXB or and cld (bad) mov mov fcmovnu (bad) mov scas mov sub mov (bad) stos negl addr32 ja in xchg rex.R lahf outsl or iret pop insl movsl fwait lret es sbb mov movsb xchg (bad) fstpt and fucomi jbe stos push push (bad) clc push mov rex.W fwait ja stos js mov mov push xchg (bad) and jnp adc xlat push fistpl or insb and pop cmovle insl fnop fidivrl loop jmp and mov out cmp mov in mov test outsl (bad) xchg (bad) pop rcll mov movabs rex.WRX sbb fistpl movabs pop or repz xchg xchg rex.X sub nop popfq ficompl sbb rcr mov xchg ja jnp mov pop int xchg movabs (bad) sbb cmpsl jp addr32 fistl (bad) popfq callq fstpt cli fs push jg rex.WR rex.RB sbb mov rex.X fwait xor fsubrs add pop (bad) sti out imul xchg cmp pushfq rex.XB rex.WR xchg rex.WRB ds mov sbb jb testl pop adc (bad) jno fwait mov (bad) lods pop imul pop pop sub rex.WX mov pop pop (bad) pop add mov mov xor nop sbb push xor add rex.RB fidivrl add pop add cmp cld movabs cmp mov push xor jl pop (bad) imul movabs clc xor lock pop pop jge or mov xchg adc pop (bad) mov rex.RB mov lahf mov lret pop faddp movsb rol push sub xchg xchg add sbb cmp sti xchg jno (bad) cmp pop fiadd (bad) lret rol out popfq mov cmp out sub cmp (bad) sbb fisttpll ja mov fnop add shrb pop (bad) and (bad) mov sub sbb pop pop (bad) xor push (bad) callq int jl notb jp stos cmp pushfq jge push xor xlat (bad) and (bad) rex.X lock lods movabs stos rcrl xchg je xchg ja movabs xchg xchg fs sbb js fisubr (bad) xchg pop fxtract int mov nopl loop push (bad) pop ficoml sbb es jrcxz pushq (bad) (bad) scas repz int (bad) pop in leaveq and clc stc fcompl (bad) adc rcrb pop cld iret adc sbb xlat (bad) mov adc decb jns retq icebp xor sub push rex.W insl rex.WX mov callq mov jns enterq outsl xchg rex.RB jnp jbe test mov mov rex.RX or (bad) out rex.WXB sbb (bad) mov (bad) jl jge insb retq fcmovne sbb add pop fisttpl jl mov int int mov sub sbb outsb cmp lea jno repz imul (bad) in rex.WR mov flds jnp sub cmp cmp fistpl and xlat adc movabs rex.RX fldt xchg xor push out fcomi (bad) mov packsswb (bad) imul pushq push fnstcw adc loope mov rex.WRXB rex.B push (bad) lret fildl adc cmpsb jo (bad) movsb fistpl insl repnz popfq pop (bad) in out fisttpl jmp (bad) fisubrl (bad) mov push sbb imul pop (bad) cmp (bad) je rex.RB fistl mov retq xchg sbb rex.W xlat movsl lea je fcmovnbe out in mov add (bad) sub or sbb callq movsb retq rex.WRB rex.RB mov fistl (bad) pop (bad) (bad) repnz mov (bad) stos and data16 adc rex.WB repz cltd (bad) adc shrb jge fistl xor (bad) or (bad) mov movabs int3 mov fsts lock pop fnstcw mov pop fldcw (bad) and movsb fildl cmpsb stos sub mov out andb fisttpl xlat sub push xor fistl mov jns mov (bad) nop mov int3 mov fistl sbb rex.WRXB rex.B xchg (bad) icebp iret xor (bad) (bad) sbb jb rex.W rex.RXB outsl imul fildl xchg cmp (bad) (bad) popfq sub hlt jl rex.WX decl movsb (bad) lea xchg or js mov (bad) nop lods loope out fistpl (bad) (bad) movsb repz gs (bad) fistpl jrcxz loopne mov fcoml mov and xlat movslq xor sti cmp jrcxz jno xor je cltd (bad) add sahf outsb add cs loop rex.RXB fldt hlt and xor (bad) push mov lret mov push movsb xchg fisttpl or (bad) fs xor xchg outsl fbld jl (bad) icebp rex.B (bad) cli and (bad) sbb sahf cmpsl fcmovnu cmpsb jne jl data16 sub rex.WRXB (bad) or cmp fidivl cmp ficomp jle jnp jns jae ror sbb cmp stos mov pop movslq fistl push rex.WRXB rex.R fldt movl movsb mov pop and gs jnp jmp fistp js push mulb (bad) (bad) jp mov fildll mov cmp push insb push fiadd (bad) (bad) fstpt cmc mov rex.WR cmp test (bad) repz push retq (bad) frstor (bad) hlt sub adc out in jbe movsl mov rex.XB loopne or mov and mov retq pop jmpq adcl fisubl cvtps2pd pop push gs (bad) jae out (bad) lock push retq pop or addr32 jl (bad) xchg (bad) imul add pop pop (bad) pop movabs cmp xchg int jmp out (bad) test test sbb fistpl adc jmp pop (bad) pushq fadd retq (bad) (bad) lret cs rex cltd mov movsl pop cs out iret or jo push or sbb mov add shlb jmp rex.R fcmovnu mov jb movabs pop sti (bad) mov push fstpt mov imul or rcr gs push cmp sub jl add xor mov (bad) int push fiaddl lods jmp xor or (bad) outsb push sbb rex.WB xor and add lea (bad) mov rex.RXB and jge (bad) push pushfq iret (bad) xchg (bad) std ss mov stos xchg (bad) scas pop fistl pop and popfq fstp sbb cmp push (bad) xor iret add in (bad) sbb xchg sar lods vpand lea repnz pop lods imulb rex.WXB rex sbb adc add iret rex.WRXB mov jrcxz cmp adc (bad) mov nop test xor xor stos movabs cltd mov rex.WB loop push icebp (bad) adc sub stos js (bad) out sbb cmp jle sahf (bad) movabs (bad) fwait cmp cmp rex.WRB addr32 jnp rex.RXB (bad) je fisubl pop jmp mov (bad) lods or loopne movabs push or lods push pop lea fsub fisttpl (bad) mov out pop rex.X (bad) lret lods lea movslq mov lahf sbb pop rex.WR mov pop sbb sbb imul fcoms fsubrs adc push fstl (bad) shrl mov (bad) fistpl or rex.WRX rex andb (bad) lahf std xchg cltd popfq movabs rex.RB sub out rex.RB pushq je jns cmp in xchg pop mov insl mov jge xchg adc test stc movsl mov (bad) (bad) mov cmp cli jge insl je icebp sahf rex.WRXB mov out add add loopne sbb mov pop (bad) adc jnp pop sti out (bad) (bad) rex.RXB (bad) data16 (bad) loope add ja (bad) out jb mov mov jmpq out ficompl xlat rex.X (bad) rclb or pop in jbe outsl or fstpt fwait in rcrl xor (bad) jmp jno sbb loope sub and fistl lock movabs (bad) lret fistl insl push mov fildl pop jle fistl (bad) push clc pop xchg std insl fwait stc (bad) iret insl push fildl sbb sub rex.W add cmp cmpsb movslq fucomi (bad) or mov adc (bad) sub adc mov fstpt push fistl scas or movslq fstps (bad) movsl lret push and (bad) (bad) add fwait andl fildl xor mov movabs (bad) sbb fwait xor (bad) outsb rex.WXB (bad) test pop movabs pop sbb and out xchg cwtl cmpsb add fs fisubrl push (bad) sub jp sbb push mov cld pop lret sbb mov (bad) enterq jg mov fidivrl add (bad) insl mov jnp repz (bad) jrcxz push adc mov mov mov and jns loope (bad) fnstsw rex.XB fstpt cmpb jmp jno lods mov pop xor jne xchg pop fcmovnb lahf cmpsb or jg (bad) rex.WR fisttpl cs lock cmovb pop (bad) out jo fisttpll out retq rex.WXB fstpt (bad) (bad) xchg jg (bad) rex.W cmpl je addl int divl stos xor add frstpm(287 enterq andl (bad) (bad) leaveq mov xor pop add in rcrb push mov pushq fldt lods cmc out and add popfq pop lret add (bad) mov (bad) xchg push cli lock xchg fistpl in (bad) fcmovnu int rex.WRX cmp push (bad) ds test jae (bad) mov scas rex.X rex.WRXB repnz fcmovnu xor cwtl xor mov movabs (bad) outsb (bad) sbb jle rex.R fildl std insl js stos rex.WR fidivr pushfq rex mov fldt or fldt mov icebp cwtl jp adc rex.WX rex.WRB shlb xchg (bad) (bad) jne fcomi push jmpq rcrl movsb lahf rex.WRB repnz push jmp (bad) insl sbb mov add sbb xor int3 sub mov cmp (bad) clc fildll loopne rex.WR fmuls jnp adc (bad) in fcmovnbe cmp stos push (bad) (bad) pop pop cld mov (bad) pop jmpq (bad) adc xchg movsl cmp stos int and fistpl stos outsb in movslq js ss pop cwtl cltd lret jbe sarl (bad) ja fcmovnbe movabs loop (bad) fcmovne pop mov mov data16 (bad) fstpt rex.B rex.WB mov xor movsl and vfmsub132ss (bad) fsts pop clc rex.RX es fwait loope out push mov imul pop movsl cmp pop adc (bad) lahf jo adc fwait mov sbb mov ds (bad) fstpt mov pop (bad) ja fwait lret (bad) pop (bad) adc xlat (bad) callq scas pop icebp cmpsb (bad) push sti fimull (bad) jp jo pop clc in adc mov fisttpl loopne jae lret stc (bad) movabs mov push pushfq (bad) jne adc lods fcmovnb or outsb (bad) and movsl add adc ja (bad) pop (bad) and mov rex.W rex.WRX rex.RX insl pop cmp mov jrcxz lret fcmovnbe sti in (bad) (bad) (bad) fstpt fisttpll rex.X rex xchg pop jne lods pop sbb cmp (bad) pop sbb lods cmpsl rex.WXB mul mov (bad) rex.XB mov rex.WX jrcxz jl xlat (bad) imul (bad) and adc or jnp sbb adc data16 pop jmp sbb and retq rclb pop in and push rex.RXB xchg stos rex.WB rex lret xchg xor pop stos popfq data16 (bad) (bad) pushq mov imul sbb hlt rex.XB rex.WXB (bad) repnz mov cltd sub jl sahf or std push xchg cmp fldt movabs lock jp add xchg mov stos (bad) mov enterq rcrl adc (bad) sub movabs imul clc repz and lret rcr push sti mov rex.WRXB (bad) xchg std sub cwtl or imul fs (bad) (bad) jne fildl test pushq xchg out mov movslq sbb fildl mov (bad) jae jne xchg xchg (bad) mov (bad) pushq (bad) (bad) ja mov cmp (bad) jbe pop push lret adc fistp pop int fisttpl (bad) ja leaveq jg jl rex.RB (bad) int3 xchg (bad) test rex.RB addr32 jp rcr push and callq cmp cmp in xor pushq subl (bad) fidivl cmc mov iret rex.WRXB imul pop pop adc xchg rex.WB adc fistp stc ficoml rex.X cmp out mov mov rex mov jae mov fcomi (bad) orl sbb rex.RB loop ss nop mov (bad) push rex lock stos repnz cmp xchg out fisubrl rex.W sti movabs ss fisttpl and mov imul fild or or enterq fsubr and ss rex.R mov (bad) sbb pop int jbe mov sub (bad) and (bad) movslq (bad) jno jp or and lea (bad) callq mov pushq cwtl add fistpl fnstenv test movabs jrcxz rex.WX rex.X and imul mov cld cmp or (bad) sbb movabs cmpsb mov push sub jno jp jrcxz scas nop pop (bad) xchg fildl xor xor cmp pop and in add mov mov rex.R shlb imul adc int and xor or out (bad) rex.W rex.WRXB pop (bad) mov (bad) fcmovne mov jae (bad) shll (bad) cmp (bad) adc mov xorb pop sarl xchg jmp rex.RX mov movabs pop mov pop fwait pop cmp push (bad) sub (bad) push cmp mov adc outsl (bad) sub leaveq jne jae mov movabs je mov rcll data16 xchg jg and jmpq (bad) and adc adc shrl in int mov mov pop int cli cs mov rex.RX mov out lods (bad) jne adc (bad) orl (bad) scas jnp or (bad) (bad) jg lret (bad) mov out mov xchg jg lea pop sbb out (bad) out rex.WB pop movabs mov icebp mov movslq pop pop popfq add cltd xchg sahf pop mov and movslq xchg xchg adc xor xchg mov (bad) xchg (bad) pop xor insb and sarb repnz lods push push (bad) sbb mov (bad) (bad) (bad) sub cltd jge or mov (bad) or (bad) ja xchg fstpt cmpsb rex.WRB jne popfq es adc xor addr32 (bad) iret fimul (bad) fwait (bad) mov imul xlat (bad) and fildl fistl iret xchg (bad) adc fcmovnbe rex.WR and pop (bad) pop sub fndisi(8087 lea std pop sub lock cs outsb (bad) (bad) and rex.XB pop sarl mov mov sbb push callq lods cmp lret fldt sbb cltd xchg fimull lea (bad) pushfq push int fisubl fisttpl jo add mov (bad) cwtl rex mov pop mov add mov sti loope mov out or outsl or mov movsb sarl test cld (bad) rol pop rorl push callq fsubrs push std out cmpl jns std movsb ror cmp mov rex.X insl cwtl shr mul mov fidivr sahf cmp push in or frstor rex.WR clc push mov cld loop addb push addr32 or (bad) gs jbe rex.W pop rex.WX loopne in mov jg fwait or outsb mov and ss cli mov rex.RB pop lret or movabs ss pushq jg (bad) (bad) cmovs add pop mov fcmovbe hlt popfq mov cs fisub rex.WXB pushfq mov mov loopne (bad) add insb jge rex.XB fildl cmp (bad) (bad) imul cwtl outsl (bad) mov jle in pushq pop xchg pop movsb fucomi (bad) or fdiv hlt lahf mov jge movslq sahf imul mov (bad) or sbb adc cmp shll fildl xchg sub fndisi(8087 rex.RX fstl cltd (bad) cs xchg ja (bad) (bad) fistpl (bad) stos jmpq imul fisttpl in pushfq ja rex.WX sbb mov loop in stc stos pushfq xchg fisttpl (bad) (bad) pop es mov (bad) fcomi or movslq cmp (bad) sbb and sti xchg retq nop fldcw and rex.WRXB xchg cmp iret push rex.WXB rex.RX or (bad) fucomi int3 push pushq sub jge pop cmp (bad) sub negb (bad) pop and repz pop imul (bad) adc sbb sbb rcl movsl cmp stos sti insb rex.RXB push (bad) xchg or retq mov fist cmp or in popfq (bad) sbb cmp sbb out sub out movabs or mov (bad) cmp not sbb fistl add movabs stos adc (bad) pop xor fisttpl cmp xchg (bad) sbb pushfq xor mull imul repz stc bnd jnp int enterq (bad) cmp rex.WB insb hlt je (bad) pop fnstenv sub xor add xor (bad) mov cmc (bad) lods fcomps imul sub and xchg sahf cmp (bad) ds jp lea add or int sbb rex.WX (bad) movslq andl test mov loopne in xchg rex.X mov iret xor mov jle gs add rcr fsincos test and rex.RB rex.WRX mov mov jmpq (bad) movabs cltd gs (bad) fwait cmp idivb cwtl xchg or rex.WRB rex.X xorl jl iret (bad) fldt rcrb jmpq (bad) sub (bad) fwait lods mov vpunpckhqdq rex.RX cmpl xchg fisubrl rex.WRXB xor (bad) jne push fldt mov mov (bad) fcmovne xlat (bad) sub test movsl movabs (bad) fcompl out rex.XB (bad) push (bad) (bad) pop outsl jnp and fldt lret jmp (bad) es cmp leaveq rex.B (bad) (bad) insb sbb test imulb pop mov (bad) mov je push movslq rex.X rex (bad) sarl xchg mov jmp cmp pop or incl insb pop loope outsl and add (bad) scas lret mov fstpt iret adc movslq add fimull jmpq (bad) mov hlt jge lods loope movabs fldt lea mov rex.WRXB sahf neg movsb push and mov rex.WX lods mov (bad) jno pop rex.RXB push insl cld add leaveq adc xchg (bad) loop rex.RX jnp jne pop mov shrl sti xchg (bad) (bad) enterq mov (bad) stc mov mov (bad) int3 (bad) and and stc pop scas in pushq mov jmpq jno mov and stc (bad) loopne adc test test fadd fcom outsl push movsb pop nop (bad) xchg jno cmpsb (bad) fldenv sub add jp fs (bad) int rex.RB xor sbb test or retq iret push in shrl rex movabs (bad) jle movslq xchg repnz jae rcrl (bad) repz outsl sti pushq retq (bad) icebp lret or xchg push xchg jns adc mov js popfq outsb sbb rex.WRB xchg fstl adc outsb and add jge loopne (bad) xor or js jnp scas fsubrs push rclb loopne sbb shrl roll clc pushfq xchg (bad) cmp outsb fstps sar fsubrl (bad) or lods retq fwait sbb (bad) sbb xchg js (bad) (bad) rex.WR cltd mov (bad) sub rex.WRB adc std js jbe frstor addr32 (bad) repnz sti out shlb movabs std pop leaveq outsl xchg jb pop hlt push mov or adc (bad) jmpq scas or (bad) xor repz stos shrl jrcxz cmpsl gs (bad) xor icebp mov lahf sub add ficoml pop and pushq mov jno or cs rex.WRXB fwait jle adc (bad) (bad) sbb sub jns leaveq fisubl jns and mov iret jmp movabs (bad) test (bad) movabs and or mov mov push (bad) pop or lods lock (bad) xor (bad) std movsl test (bad) mov adc rex.XB stc clc (bad) callq fnstenv je or cli fs lret add jp push cmpsb out jb (bad) jbe jle (bad) mov or fwait out stos (bad) clc mov icebp out pop rex.X pop rex.W lret hlt loope faddp movabs fnstcw xchg fidivr pop jne or mov sbb rex.WXB in jne (bad) (bad) xor movabs shrb xchg popfq loopne xchg add jnp nop jbe sahf idivb xchg lods clc rolb sbb xchg or movabs mov rex.XB rex.WRXB rex.WX pop fsubr lret pop sub ss pop fnsave jp lods cmp mov add mov pop fldenv rex.WB cmpsb (bad) notl (bad) xlat mov and and jg sbb add sub rex.RB rex.X and (bad) mov retq jmpq rol (bad) out mov (bad) (bad) mov fwait push (bad) sti sub xchg out cld pushfq flds xlat ja push or jo xchg movl (bad) movabs pop sbb rex.WRB fxtract adc (bad) rex.B (bad) xor adc sbb mov popq rex push fwait add xor rex.W out loope jae mov clc (bad) fxch rex.XB jb mov cltd add icebp pop mov loope xchg (bad) xor out icebp adcl clc or add scas addr32 retq out (bad) jae pushq sbb push ror pop fldl mov (bad) xor (bad) (bad) xchg xchg outsl scas cmp adcl add scas cmp movslq sbb (bad) or (bad) xor int3 sbb (bad) jmp or insl mov out fistl add movslq jl and cld addr32 rex.WR sti xor (bad) rex.WXB rex.XB fstpl push fs (bad) imul (bad) pushq and pop rex.RB pushq shlb xchg (bad) rex.RXB enterq mov cld (bad) clc sbb pop jmpq or flds (bad) movabs sub add out sbb (bad) sbb rcr sbb rcr outsl (bad) xchg rol xchg mov sbb rex.R rex.WB scas addr32 mov (bad) sub cmp (bad) and je test xorb pop push cmp jae xor (bad) sbb fdivrp shrb mov sub add cmc test leaveq xchg jnp fidivrl cwtl pushfq jns (bad) out cmp rex.WXB outsb jmpq push push and mov int (bad) sbb add mov stc xor movabs lods and jrcxz jge scas jnp push xchg cmp cmp lea (bad) loopne sbb sub push push or xchg (bad) xor add or insb mov sub mov mov test pop sbb mov insl rex.RB fwait sub cmpl mov pop (bad) cmp (bad) and (bad) movabs pop out in jl fisubr pop (bad) sub rex.RX (bad) cltd xor adc retq ja jrcxz (bad) (bad) adc cwtl xchg push (bad) movsl test movabs imul orl and rcr mov fsub cmp xor fbld fs clc (bad) jno (bad) xchg xchg movsl cmp add (bad) ja and sbb (bad) movabs vhaddps add add jo sar mov (bad) leaveq mov lret xor lods ja cmp (bad) add jne mov (bad) mov stc data16 movabs vunpcklpd mov (bad) sub fisttpl pop fwait rex.WXB mov xor jo in popfq fisttpl adcb fdivrs jbe cld and jns (bad) sub or (bad) push xor fild (bad) mov loopne adc sub imul (bad) es fisttpl iret cvttps2pi addr32 fstpt callq in jle rorb pop cmpsl fwait cwtl icebp rex.WRX fldt fsave (bad) test repz movabs mov scas (bad) (bad) fcmovnbe mov add outsl cmpsl sbb xchg rex.W fldt jmpq sbb icebp jp xor xchg movslq rex.WRB push mov add lret fist sti jg xor (bad) jns insb ljmp or push mov xor jl mov (bad) mov movb shl (bad) jmp cli in pop test rex.B adc (bad) fistl pop je cmpl (bad) rex fwait adc rcll mov fstpt (bad) (bad) lods rex.R pop fcmovnb cmp xor adc mov and jnp rex.RB xchg stc or rex.WRXB push mov repnz iret sub retq (bad) imul movabs enterq cmpl (bad) push fistpl nop movsl add pop jne outsl push (bad) lret loop rex.W out pop retq (bad) (bad) gs test push lret leaveq fwait push pop (bad) rex (bad) fildl jne stos jl fwait int3 lea fwait mov lahf xchg movabs adc adc and pushq imul loopne std fistpl jl fidivrl (bad) pop xchg lret fmul shr (bad) cmp adc cmpsb (bad) pop jge ror mov fildl (bad) cmp push jmp scas mov fisttpl jb sub cmp movabs jge out movabs (bad) loope jg mov imul fcmovnbe push cmp cmpsb (bad) stc rex.WR movsl pop test pop or or xchg rcr rex.RXB adc jp (bad) and rex.WXB pop push stos rex.WRXB (bad) sarl ffree mov fdivp (bad) and pop mov push rex.RX sbb sub rex.WRX push lret mov (bad) stos movb popq (bad) xor xchg (bad) loopne test mov fistl movabs push or pop rex (bad) (bad) mov xor xchg notl stos mov movsl xor and lods test popfq or int3 mov mov out rex.WRB pop idiv (bad) (bad) lea cwtl sahf mov mov shlb movabs (bad) (bad) js ss (bad) fisttpl pop iret subl adcb jg icebp clc (bad) rex.W adc test xlat mov rex.WX cwtl jno mov mov stos fstpt xorl rex.RXB lock rex sbb fcmovnbe sub in pop test sbb xchg (bad) ja mov hlt (bad) rcrl sub fwait stos cli scas jnp sbb xchg rex.WRX fistl mov fucomi shrb insl and adc pop xchg mov out xor (bad) mov and push cmp or xchg mov rex.X rex.WRXB (bad) jae roll movabs sub and jp jo sahf and push insb (bad) push (bad) fucomi or xor rex.B and movsl fwait movslq rcrb int3 lahf in sbb jle cs sub pop (bad) pushq push mov or cmp mov and jl xchg jmp mov rex.W mov callq adc fstl hlt cwtl fwait and xor mov movabs addr32 pop xor fadd add movabs pop (bad) adc stc jrcxz sbb (bad) or divb fisttpl jmpq mov pop (bad) fsubrl orb pop mov mov fcoms adc (bad) rex.XB fwait xchg (bad) movabs fmull icebp jl in (bad) cmpsl sub mov lea pop mov roll sbb es mov jbe rorb pop xor xchg jne popfq stos (bad) push rex.X ss out test xchg fisubr jmpq cmp pop repnz rex.R rex.RX addr32 fistl out rex.X sete jp addr32 fstpt movabs xchg rex.WRB mov mov cs int (bad) cmp cmovge sbb cmc lret cmp pop fwait popfq add outsl addr32 sarl pop callq sbb mov pop (bad) ss and iret rex.R fstps (bad) icebp or in enterq lret (bad) (bad) (bad) xlat push movslq int scas cmpl jge lods fldenv jnp loope cltd pop sti (bad) movslq cmp fs jrcxz or (bad) fnstsw push sti (bad) out pop and cmp rex.WR (bad) insl (bad) in fimul in jmp imul lret vcvtdq2ps jp lahf int3 retq rex.RX xchg stos cmpsl lret outsb add insb rex.X mov rorb xchg out movslq and push pop sar jge cld (bad) jae je (bad) (bad) sahf out movabs scas hlt movabs outsl jns imul (bad) rex.W rex.X int3 mov or push mov (bad) push mov pop add and cmpps idivb (bad) int pop xchg stos fdivs cmp rex.W insb imul je sbb (bad) movabs xchg jno fcmovu xchg add mov or loopne push clc mov rex.RB fwait std pop adc or rex.XB push xor (bad) in fwait (bad) (bad) cltd fs fisubl loopne mov (bad) mov cli cmpb xor (bad) mov jne retq (bad) mov mov adc sar (bad) lret cwtl movslq push (bad) jo pop test jp rex.WRB movabs add adc iret mov or loope pop and retq rex.RX nop (bad) sub (bad) rcll jnp icebp jge push cmpsl imul sbb (bad) sbb xchg jae pop movmskps sbb cmp push mov mov fisub xlat (bad) pop and sbb pop jp pop pop (bad) xor pop scas jl ficompl push mov mov lods jge add (bad) lahf mov xlat xchg rex.WB jp loope jp sarl ss out jne and pop ds push and push stos fldl movsb xchg mov lea cmpsl ja xor out (bad) xchg and xchg fstpl iret mov pop cmp cmp (bad) jns test mov push (bad) pop ficompl or or sbb out or fs loop pop adc rclb mov xchg cli (bad) roll mov cmp cmc jno nop adc pop enterq js jbe jg out xor push pop mov out loopne rex.XB movsl cmp out rex.WR jns data16 rex.WRXB mov add (bad) sbb cmpsl stc pushq fnstcw mov outsl (bad) xchg loopne mov pop std cmp xor fldenv roll (bad) mov leaveq xor or stc testb in jns testl adc push sub xchg xchg testl cmp loop or fiaddl (bad) outsl jp in cmpsl (bad) test cmp sub psllq xchg popfq (bad) (bad) addr32 popfq pushq push sub fnstcw mov (bad) rex.R repz movslq (bad) in sahf dec adc mov cltd loopne movslq (bad) test mov jmp add push movb andl pop rex pop fs xor negl cs sub movsl (bad) fimull sub sub callq pop test insb outsl movabs cmp (bad) pop or xor (bad) lea imul (bad) jnp or sub cmp fcoml mov cwtl fcmovnb mov int3 (bad) jno (bad) pop xor sub or rex.WRXB movslq adc mov cli (bad) data16 rex.XB and sti xlat or retq scas pop cmc fcmovnu add mov rex.RXB cmp loopne movabs cmp sub (bad) shll jo and pushfq imul jg cmp rex.WRB or mov fdivl (bad) pop xor (bad) (bad) fwait lret mov (bad) jle hlt sti (bad) and or cmpsb imul (bad) pop (bad) jmpq jrcxz fildl push mov mov cmp pop (bad) mov (bad) movabs iret (bad) (bad) (bad) jae test sti fistl retq pop leaveq adc mov movslq (bad) sbb orl cwtl fildl mov (bad) adc lahf orl icebp (bad) (bad) sub cmpsl movabs jrcxz ds (bad) cmp outsl pop mov int3 xchg mov (bad) mov or pop rex.WB pop jno rex.WB (bad) mov fsubs fistpl (bad) (bad) jno loopne mov push xchg (bad) mov (bad) pop movabs (bad) fstpt scas cmp (bad) mov jnp popfq mov stos (bad) rex.WRX and add outsb rex.WRB movl vmsave push test rex.WRB int3 (bad) mov add (bad) stos xchg imul mov adc stos (bad) movsl movabs mov mov jmpq cli insb (bad) mov retq adc (bad) test lahf pop and (bad) ja (bad) pop or add mov fistpl fisttpl mov pushq fmuls test fistl push cmp sub fistl rex.W fcomi cmpsl rex.WRXB add out gs sub push (bad) loop movabs iret (bad) int3 mov cwtl push mov fstpt add fcmovu addr32 jns adcb pushfq data16 movsb fstpt sub (bad) jrcxz movabs rex.XB cs clts mov pop fcmovnb mov (bad) jg (bad) enterq fildl rex xor jae callq xchg pop (bad) rex.W repnz rcrb jnp nop sub fwait (bad) push mov mov (bad) mov retq sbb pop xchg movsl repnz xor jmpq cmp (bad) js rex.WXB cwtl sbb sub mov lock jnp mov lahf stos adc or fsts pop sub cmp stc fwait ss fldpi sbb rex adc cs retq rex.WB mov fisttp rex.WB addr32 insl callq jmpq sbb (bad) (bad) fldenv cmp push ja loopne mov cld rex push xchg orb (bad) xor pop (bad) lods pop push push (bad) (bad) jnp rex.R push jp push frstor retq scas mov (bad) mov sbb out (bad) push movabs jo fldt cmc fisttpl cwtl mov mov repz pop adc push mov repnz fucomi (bad) or rex.RX rex.R addr32 sub pushq xor test jnp (bad) mov xor fistpl insb lret sahf xor (bad) mulb jb scas cmp out adc cmp jg jp icebp push jrcxz test fwait (bad) (bad) push mov (bad) xchg outsb (bad) movabs xor rex.WB or xchg fcmovne mov stos push sahf and mov shll sbb stos popq jnp rex.W xor mov xchg jg and mov shr mov lret cmp xorb cli (bad) fs mov and adc movabs push xchg movslq movsb pop movabs rex.RXB sbb mov test rex.WXB callq mov rex.WR (bad) rex.W xchg ja fcmovnu lock shrl (bad) rex.RB pop jae scas (bad) xchg and sbb cltd xor insl je push mov mov sahf xorb push lods fildl (bad) mov addl jae or (bad) movslq in fildl fwait jb sti test fcmovne mov and out es rex.RB lret ds loope cmp sbb mov or andb fist (bad) fcomi jne movsb ja rex.WRXB es lea (bad) jge fnsave rex.WRXB jl fistpl hlt rolb mov (bad) sbb add sar jnp sub scas (bad) jg xchg (bad) out ja pop sbb (bad) (bad) xor xchg (bad) subb pop js add pushfq jb mov pop vmovntdq seta data16 (bad) jg push (bad) jb loopne subb rex.WR repnz jl stos mov jne (bad) stos xchg jp insl and jae xchg iret sbb movabs jae in (bad) lahf movsb rex.WR callq sbb jns neg rex.RX or stos fistl jrcxz retq add cmp rcl mov mov shr push outsl movsb (bad) pushq ja push cli icebp pop jrcxz incb sub rex.RXB mov cmpsb fcmovnu pop movabs (bad) fcomi and addl adc ror std rex.WR shrl and fisttpl movabs outsl push cli xchg insb add std fistl roll mov sarb movabs fstpt movabs movabs cmp out fwait rex.WXB fnop (bad) mov pop outsl sub es xchg fildl adc (bad) cmp pop sahf cmpsl mov and sar in jo adc cmp es nop lods test sbb fidivrl movabs mov ja callq stos scas xchg movabs pop mov add cmp jns (bad) pop (bad) callq mov adc clc sbb clc or leaveq push mov or fcomps xor (bad) (bad) loope loop leaveq mov pop push xor in cld rex.R sub fldt (bad) add add imul jnp (bad) mov rolb (bad) sbb pop adc or jae fdivr lock rex.XB std pop and rex.WRB loopne or jnp testb rorl xor sar out in rex.WXB hlt fistpl jl outsl add std (bad) (bad) mov xchg fdivl leaveq jge sbb int jae fcmovnbe sub adc mov pushq loope fildl cmpsl jne or (bad) pop shll fisttpl out (bad) in clc retq mov (bad) repz rex.R (bad) outsl scas rex.WRB pcmpeqd (bad) (bad) or pushq adc out or cmpsb rcrb fildl insl (bad) jle sahf push fidivl (bad) and sbb fcmovu mov test vmread fistpl ror (bad) adc fildl rolb push sub fmuls or iret adc and or lahf fldt pop (bad) mov (bad) sub (bad) (bad) fildl (bad) mov jbe sub (bad) xchg (bad) pop leaveq pop fsts loopne (bad) clc movabs imul push cmpsb xlat scas repnz xchg clc pop mov rex.W jrcxz jno xlat cmpsl (bad) mov je fimull cmpsb jmp fistl xorl cmp or sbb in rex.XB in movabs stos (bad) pop out popfq fcomp int cmp (bad) notb rex.RX lahf movsl jns addr32 mov jmp fwait xor fcoml add fwait mov repz enterq stos xchg movsl and and sub cmp xchg cs (bad) mov stos push push rex.WXB pop pop sub and andl lods icebp cmp (bad) jns test test retq xchg loope and jnp xor out iret (bad) and or fwait or jg (bad) mov clc pop xor sahf enterq mov rex.B xchg in add stos adc sbb xchg push jns or cmpsb xchg xchg cmp icebp popfq rex.WXB jge push mov mov pop or testl pop (bad) or fimul int test xchg lret not push js jrcxz and stc or push (bad) ds sbb leaveq adc nop test repz iret ja (bad) rcl jge fs lea sub mov clc xchg add (bad) (bad) rep xchg adc rex.WXB sub cwtl addl retq sbb test jp stos mul cmp std and sub add mov test (bad) pop xchg callq sbb add jno (bad) fildl xor jns xchg retq add jne (bad) pop or fmulp fwait jrcxz xchg adc rex.RX xchg outsl mov fstpt movabs adc mov cs stos addr32 and xor sub mov je adc loop fistl (bad) pop pop xchg callq iret iret and xor imul hlt xor xor ja sbb xor rex.B or jmpq movslq cld (bad) push sbb jge rex.RXB xchg jno or loopne (bad) rex.X ds (bad) mov (bad) pop cmpsl fildll adc fisttpl data16 rorl movabs (bad) (bad) (bad) push mov fstpl out (bad) mov pop negl sarl fcomip cmc rex.RB (bad) mov sbb or sub and pushq addr32 int jns xor sbb (bad) cmpsl outsb sub fwait loopne jo add push push movsl imul fwait mov xor fnstenv sub fwait sbb sbb rex.RB rex.R jne sub mov rorl xchg movabs shrb ftst xor stc rex.X and adc push rex.X mov add mov cmp test rex.R fwait or fistpll xor xor push pop sbb frstpm(287 mov faddp jnp movslq lock loopne (bad) iret out adc callq rex.WX test fcmovne sahf cmp and (bad) xor (bad) adc retq movabs add rolb pop cltd cmp pop fmull cmpsl xchg sbb adc mov cld (bad) and movsb pop incb movsb mov insl ss fbld (bad) data16 xor push (bad) notb xchg rex.X ja pop js push mov pop faddp test rex.R xor (bad) (bad) pushfq add mov mov shrl rex.WRXB jge rex lock gs (bad) xchg jmpq and push (bad) leaveq stos gs (bad) mov mov push outsl int xchg repz sub xor out (bad) fistl mov mov gs jmp cmp hlt retq fildl (bad) adc rex.R sub je enterq xlat xchg rex.WRX fldt stos mov pop sbb sub lret loop mov xchg pushq fisttpl mov out (bad) jns rex.WX (bad) div js sub fistpl sbb sbb je add (bad) outsb leaveq mov scas add adc mov pop imul (bad) (bad) fildl or and sti (bad) fnstcw jmpq insl fistpl outsb push out pop mov or out out add sub or loop nop adc out (bad) or (bad) xor pushq or and fldt pop int ss (bad) fcomi (bad) mov xor rex.R jno rex (bad) rex.RXB rex.WRX cmp cmp int3 (bad) mov test xor loope push out or (bad) xchg cmp rcrb test fcmovnb scas or xor sbbb rorb rex.WRXB (bad) (bad) gs cmp (bad) adc ds fcmovnu sub pushq insb callq push test std rex.RXB adc rex.R fucomip movabs sbb mov mov mov js rex.RX lock (bad) data16 pop jns jl cmp lods adc mov cmc (bad) cmp pop adc add cmp mov (bad) mov iret gs (bad) (bad) shrb (bad) mov in pop lods iret xchg adc rex.R fneni(8087 callq rex.WRB sahf (bad) icebp (bad) repnz rex.R fwait xchg add cmc mov rex.WX rex.WRB adc push jl fcmovnu mov sbb mov sub mov hlt retq jo rex.R (bad) mov rex.WB data16 and addr32 fisttpl and fdivs (bad) (bad) xchg sbb push stos (bad) jbe in sbb pop je mov cld sub rex.RB test and rex.W push (bad) hlt jg sbb ds enterq movabs jbe pop rex.WX jae jle in fistpl ja xchg cmp mov int3 leaveq and adc and mov (bad) sub jb rex.R pop mov orl fstpt rex.WRXB rolb xor sbb adc fstps rex.W (bad) int3 pop sub jne sbb cmp lret rolb (bad) adc add mov outsb rex.RX js (bad) xchg (bad) (bad) clc adc pop add hlt movb adc sub xlat lods imull jg movsb sub sbb test icebp movsl out mov push lahf adc fiadd outsb (bad) mov int insl (bad) mov (bad) fisttpl jbe test or pop pop test sar cmpsb (bad) and rex.RX repnz jnp (bad) lret retq rex (bad) ss mov rex.WRXB mov sub pop test rex.WR jp fcoml movslq push (bad) (bad) vcvttss2si fildl sub cmp push cmp gs fiaddl nop (bad) mov add rclb test sub xor pop rex.WR rex.WX addr32 (bad) jg pop (bad) jl fsubrl ja jne loopne or movb mov sub fsubr ja jg pop test (bad) mov retq int rex.R cmpsb fcomi sub jg fldt imul jnp (bad) mov int rclb retq repz fldt enterq pop decl cmc (bad) insb gs fcomi add push (bad) cld pushq sbb out cmp xlat hlt popfq shlb rex.WX rex.WR (bad) push rex.XB repnz sbb rcr jns xchg push cltd sbb mov xlat push push jnp sub mov movsl popfq imul add sarl scas sbb in rclb pop addr32 cwtl xlat callq (bad) outsl rex.X push xor xchg sti mov sbb or sub pushq jae (bad) fnstsw fwait loopne lret in movsb rex.R (bad) out push addr32 loop out movslq rex.WR fs add jle pop (bad) addr32 adc jo (bad) cltd rex.XB movslq fcoms adc movslq jnp pop pop xchg std stc rex.XB mov out rol idivl addl sti push (bad) xchg or mov xor jae mov rex.WRB cmp js lahf jp push retq rex.WX xor (bad) jno push (bad) mov sub (bad) out movabs add movslq cwtl (bad) fcmovne je pop rclb mov imul fwait xchg outsl int3 pop xor rex.WB xchg testb mov rex.X rex.RXB mov xchg (bad) cmp fldt or add rex.W rex.WRX xor jp lock jb retq pop leaveq in (bad) out jge (bad) push mov xor cli imul pop xchg fldt sbb enterq pushq xor mov adc (bad) mov jb sub jbe mov fildl xor int mov pop pop pop scas lock out movsl jae (bad) mov stos fstpt cmp fistpl iret clc jl imull fldt (bad) mov (bad) xor pop fs sub and xchg pop (bad) mov mov and xor (bad) rex.RX int3 test mov (bad) push fiadd cli rex.WXB (bad) rex cmpsl mov add leaveq int3 cwtl rex.B addr32 movabs cmp jno xor scas mov lock cmc pop data16 mov mov imul adc fcoms lods out jnp (bad) (bad) pushfq lret cwtl cs fs push xchg retq pop shl in (bad) sub jnp scas pop fldt in pushq test sub sbb imul (bad) rex.W outsl fisttpl rex.R pop cltd mov sub and fs push (bad) or mov gs rex.XB fcoms or jae cwtl (bad) (bad) pop adc (bad) insl sarb fwait rex.WB xor (bad) ds shl add jle fldt lods rex.WRX rex.WRB lahf fiaddl push push (bad) pop mov jmp jo pop imul mov pop and es pop loope mov mov and jle (bad) (bad) sub movabs (bad) jno xchg (bad) mov (bad) fstl out xchg insl or and enterq sbb (bad) and sti add sbb iret push loop test xchg stc push jg and push fbstp test pop shr lea rcr push ja repnz and addr32 rex.WRX rex.RXB (bad) lock iret rex.X jne,pn loope jbe test imul sbb rex.RB movslq lea ficoml or cs cmp fs push (bad) jne rorl shll nop adc addr32 int rex.X rex.WR rex.WB rcl sbb (bad) sahf rex.RB enterq (bad) loope (bad) movabs lret sub and movsl fwait and add repnz jl test and sub insl add push pop (bad) sub idiv loopne je and fwait xchg fcmovb jno pop mov rex.WX rex.RXB pop cmp pushq insb and cmp (bad) and pop (bad) xchg sub orl ds es (bad) insl insl cmp xor lods (bad) (bad) jge cwtl (bad) sub out rex.WX xchg fwait movsl hlt mov mov popq in jmpq ss enterq (bad) pop sub rclb pop pushq cwtl (bad) rex.RX cmpsl pop adc fisubr ja pop test leaveq xchg (bad) mov fwait cltd (bad) hlt lods sti mov fisttpll je clc (bad) sub (bad) jno ja repz in push movabs mov pop sub and mov jbe mov lret mov imul rex.WXB jp mov (bad) out rex.WRXB roll push xchg (bad) sub jns pop sbb mov cmpb insl movslq or test mov push jns xchg imul (bad) sarl callq es add cmp or loopne push (bad) sbb (bad) movabs cmp cmp add movabs fcomps and cmp (bad) lret fistpll sub push adc (bad) sbb (bad) push fnstsw (bad) xchg rex.WRXB (bad) mov jo rcrl push movabs pop jo rex.RX cmc scas mov pop ja pop lret (bad) in sbb loop mov add mov jp (bad) xchg pushq mov pushfq ss adc mov leaveq cmp pop fwait sub movabs ja test add add cwtl mov (bad) sbb sub push rex.WRB addr32 jo cmc movsb xchg sbb adc outsl rex.WXB rex.WRXB out (bad) in cwtl addr32 rex.WX cmp adc pushq jae (bad) adc cmpsl int lahf enterq ds push adc and test xor (bad) sbb or cmp fisubr mov or jns lret rex.WRX pop rex.WXB cmp cmp cmp ja xor icebp fcmovnbe sbb push movabs mov jp (bad) movabs adc xor (bad) mov adc ja xchg (bad) mov xchg leaveq fwait loop rex.WRXB negb gs (bad) jmp rorl (bad) mov pop jmpq rex.WR pop movsl rex.X in fistpl mov stos push sahf rex.WXB mov cmp mov pop mov rex.WRB push xchg jp xor lock cmp (bad) cltd (bad) iret retq or mov fistl xchg rex.WRX fs mov (bad) cmp push or ja rolb stos idivl out jo fucomi sub xchg mov cmc rex.WRXB ljmp jge lock fdivrl addr32 fildl push sbb mov xchg (bad) js shrb (bad) out rex.RX push mov pop test sbb xchg ficom mov mov adc fsubs pop jbe leaveq or jno (bad) jae mov jb (bad) imul add add (bad) out pop lret (bad) pop cmc push xchg (bad) mov pop out (bad) rex.WRB sarl fldenv test fdivp pop sub movabs (bad) or pop add (bad) xlat rex.R je cmp rex.WR jmp popq movabs mov out xchg rorb sbb fistpl (bad) jnp add mov rorb test adc pop repnz (bad) and mov (bad) push sti fstl negb xor fistpl sbb loopne push fs rex.RX xchg fwait push sub jle rex.WRXB test jns jmpq movabs sbb mov popfq add (bad) sbb pop rex.RX imul mov fistpl adc rex.WRX leaveq jle retq pop scas clc pop retq mov rex.WXB retq stc lret xchg pushfq push in (bad) (bad) in adc (bad) cmpsl jae pop mov (bad) (bad) adc (bad) data16 imul ds (bad) rcrb jp push cmpsb outsl cmpsb (bad) (bad) jp mov pushq lods mov cli cld repnz fldt out rex.WB rex.X (bad) adc or fildl sub cmp (bad) rex.RB xchg btcl std fildl (bad) pushq (bad) out pop in rex.RB xchg imul mov rex cmp (bad) cmp mov sbb xor xchg lods movsl xor in std (bad) mov jmpq (bad) (bad) jae xlat mov rcrb fildl mov shll rex.R movsb stos ds retq pop in repnz lock loop xchg xchg data16 retq repz adc xor mov push and fildl xor jne xor xchg or rex.WR cmp fwait rex.WX (bad) (bad) fisttpl adc out jnp fcom sahf xor (bad) and (bad) fcmovne mov or pop addr32 decl lahf mov xor int3 pop cld leaveq mov clc hlt (bad) or loop sub rex.R sahf (bad) rex.WRXB sub (bad) xchg rex.WB cmp push rex.WRX mov or rolb adc lods rex.WR shrl fwait rex.B int3 fisttpl int cli add sub sub xlat loop rex fdivr mov push mov mov pop sbb (bad) movabs sub adc imul sti (bad) rex.RX loopne lods push (bad) stc rex.RB (bad) (bad) leaveq (bad) std rex.WRXB jo mov add lret (bad) movabs rex.WXB mov cmp sbbb (bad) vsqrtps leaveq fldt cmp sti fldt lahf push pop mov sub cmp rex clc sub (bad) jg sub xchg jne loope (bad) adc xchg pushq js cmp adc xchg (bad) pushq adc jo sub (bad) repnz fwait rex.RB (bad) fistpl test mov ja (bad) jrcxz pop pushfq xchg cmp push andl cmp mov adc (bad) rex.B rex.WXB jo loop stos enterq (bad) jae rex.XB fistl and lret hlt jo mov jne push fstpt roll jge loop add adc xor rex.WB push ds rex.W movslq push (bad) out pop and (bad) add movslq (bad) mov mov and mov push popfq movabs sbb imul mov mov push add mov add mov (bad) sbb xchg clc mov mov jnp or xor fwait push movabs rex.WRXB (bad) fwait cmp jge (bad) (bad) sub fisttpl (bad) jno rex.RB rex.WRXB (bad) push add mov pop sti (bad) rex.WR jnp add mov mov sti jrcxz add lret ss andl fldt pop lea callq andl (bad) fwait push rex.WRB and rex.RB jo fcmovnu sub movabs movabs movsb pushfq jmpq (bad) rex.WRX iret movabs mov mov leaveq fisttpl add nop (bad) xor movabs sbb (bad) leaveq (bad) mov fcoml rex.WR (bad) jnp stos fisttpl cmp jmp fcmovne xor fs fadd sub sub fbstp (bad) mov xor sbbl sbb mov out push movabs stc imulb fldt rex.WRB imul pop jmp mov pushq rcr add (bad) cmpsb adc xor jo (bad) xor fstpt mov fistl pushfq fistp fistpl sarb push (bad) cmp mov add xor test in out jnp pushfq adc mov fs add in std push xchg add bnd or cwtl mov addr32 ds add jnp ficompl push pop or stc sbb insb xchg rex.WRXB sub cmpsl xor rex.W mov in or pushq rcrl mov in movslq stc xchg cmp pop (bad) and cmp gs fdiv (bad) mov mov xchg outsl iret xor movsl jae add xchg cli (bad) fistpl mov cmp rex.RXB lods movslq sbb xor enterq jmpq mov or (bad) mov xor mov fwait mov xchg (bad) fldt jo add scas (bad) add jmpq mov xchg insb pop mov (bad) notb xchg or xor fstpl push mov fwait out adc jnp in icebp rclb nop fisttpl add (bad) fstpt (bad) insl mov clc cmp jmp rex.W rex.WRB iret fwait imulb fidiv (bad) or rcl fucomi xchg rex add pop adc sub imul fsubrl leaveq or jp (bad) cmova sbb pop je jg jp jp and scas test fldt add out neg callq lret test sti sub movabs sub cmp scas retq out cmp fiadd (bad) popfq rcl cwtl (bad) cmp mul fwait pushfq (bad) stos (bad) stc retq cltd mov pop (bad) sub roll je mov rex.RB lcall cltd test out movsb xor (bad) xchg fistpl sti hlt and imul rex.WR lock imul fstpt mov mov pushfq cmp add push retq mov sbb cmpsb sub pop xchg mov imul sarb int3 cld fcomi shrl fsubs lahf pop rclb and sub push mov pop push (bad) rex.W fwait push out mov xchg (bad) lahf cld (bad) lods cmp xchg cwtl (bad) mov push (bad) mov rex.R rex.XB rex.RB mov lahf fstpt (bad) roll in mov add out (bad) pop outsb sub rex.RB cmp adc jne pop (bad) movabs pop sbb jp (bad) pop cmp jne xchg cmc or sbb jmpq or rex.B rex.WRX sub fcmovnb (bad) xchg xchg rex.WX rex.WB xchg movabs int insl pop rex.RB jnp jmpq or xchg in mov sarb (bad) int3 cmp pop or jmpq mov jno rex.WRB or jnp jb cwtl nop stc (bad) out movabs movslq sbb push (bad) adc pop and or cltd fstpt testl xor lods xchg (bad) shrl or cmp rex.WRB scas ror movslq (bad) rex.RXB (bad) (bad) in popfq movsl push and mov fldt movabs cmp pop leaveq (bad) mov fistl loopne rex.RXB rex.XB (bad) pop fstpt and push (bad) jo in mov retq (bad) movslq adc xlat adc jae jmp fwait rex.R iret adc (bad) fcmovnbe jp and fdiv add (bad) or (bad) leaveq test push rex.WR test fisttpl (bad) push rex.B scas pop push imull loope movsb jo cmp jg outsl (bad) xchg add (bad) or mov or jp sub sub int3 out cmp fistpl rex.WRX (bad) lods loop (bad) out fwait jp repnz sub fistpl mov push or mov (bad) rex.B jmpq loope fcomi pop bswap jns jg (bad) sarl jmp mov xor (bad) fistpl or fldcw cmp mov shl rex.WRB jrcxz pop add cmp xchg sub mov (bad) jle scas rcr (bad) in or scas rex.WXB rex.RXB jge push out adc mov xchg imul repnz pushq jnp sbb lods rex.WB mov adc fnsave lods (bad) cs mov mov rex.W rex.WXB (bad) add pop pop mov (bad) in (bad) loope pop test outsl xchg cmp loop (bad) sub (bad) push rex.WR stos int shl xchg or jle push cmpsb pause rex.WX in push rex.WX outsl lea rex.W ja add cmp add leaveq fsubrs (bad) lret mov sbb es xor (bad) rolb jnp pop fwait scas xor addr32 sti sub cmc fildl std (bad) in iret insl insl xor jge and movabs fimull in jmp add push data16 mov movabs push pop test jg fucomp rex.X pop (bad) loop sbb or mov (bad) and (bad) (bad) movabs or mov jo (bad) (bad) movabs xchg and rex.WRB mov icebp cli pop add (bad) (bad) lods imul xchg leaveq adc and push and push mov (bad) or jnp and callq outsb fstpt rex.R rex.WRB add sbb xor fwait pushq shll (bad) adc fmul push cli fistpll outsb movslq jne test ds movabs push retq sub lock adc movsl mov clc jnp sbb fistpl adc fcmove loop (bad) push ja pop add jrcxz push mov and mov pop gs xchg ds stos push or jle popfq test sbb fistpl add xchg rex.WRXB rex.W (bad) pop rex.RB fwait sbb pop fldt mov cmp mov jmp subb push out enterq lret cmp fisttpl hlt xchg lods mov fisub (bad) xchg cmp push (bad) pushq and movabs rex.WRXB add in rex.WR addr32 mov (bad) mov je xor sbb leaveq jne xchg insl sub push jo (bad) lock sbb (bad) (bad) fildl pop out icebp sbb push mov and pop loopne in sub (bad) xor mov loope enterq pushfq or outsb push out (bad) sub and mov cwtl push (bad) xlat mov (bad) (bad) (bad) (bad) push jo in cli rex.RX in and jle (bad) rcr sub jnp int pop pop sub fstpt stc pop pop and (bad) jmp (bad) pop (bad) jno (bad) testb fstpt in and pop sahf (bad) mov movabs sti fisttpl push movabs rex.B pop repnz add fidivl mov fbld jmpq (bad) stc jnp mov in push repz (bad) or jnp xchg imul rex fcompl stos movslq adc jmp rex.XB cvtdq2ps jns outsl or cmp xchg insb lret stos data16 dec (bad) mov jmpq fisttpl xchg cmp adc rorb sub sub mov mov fldt (bad) pop jge xchg hlt (bad) rex push test stos rex.B outsb cltd (bad) rex.WR xchg jge fwait and mov rex.WRX mov in es pop iret pop xor mov cmp mov movsl mov fistpl popfq fcom add fs leaveq rex.WR xchg int3 movslq (bad) fwait pushfq (bad) push orl pop mov test or mov mov pushfq fbld sbb xlat rex.W repz add fmul (bad) xor jbe sub (bad) out (bad) stos (bad) repz (bad) mov (bad) mov test js lahf loope mov (bad) fldenv mov (bad) and cltd popfq addr32 cmp jns lret mov ficoml movabs fstpt (bad) xor push (bad) lahf push fscale pushq nop add rex.RB rex.WX mov rex.RB js mov rex.RX sbb mov pop push stc mov push mov cmp xlat or rcl push xchg sub push push xchg (bad) fstps cmp add shr jp test movsb mov mov xchg push rex.WX fimul pop retq mov mov or push rex.WB fwait out or nop rex.X sub (bad) xacquire movslq idivl ss mov jl scas xchg (bad) gs (bad) int and rex.WRB test mov or dec push leaveq outsl and jnp pop (bad) jrcxz push fistpl sub xchg fisttpl jae rex.WR adc (bad) jnp sub adc mov rex.RXB and loop add fisttpl sbb (bad) rex.WB retq shr or lods jle fisttpl (bad) mov movsb stc movabs sub rex.RB jl retq or xor mov mov fldt es pop repz cvtps2pi jnp xor mov mov fcomip ds mov xor cs rex.RX rex.WR data16 pushfq ss or mov add lock and push rorb int lahf xor jb (bad) sub push lret rex.W rex.X fstpt mov loopne ja jg xchg sub adc add std pop ja test in sbb addr32 pop push rex.WRXB mov fs cmp rex.WXB gs push scas adc movsl repz fisubrl rex.WRB (bad) jrcxz pop pop (bad) adc (bad) cmp fstpl mov test cltd cs jle rclb int3 stos mov pushq rex.WXB rorl (bad) mov sub jle fstpt pop lret ss out in fstpt mov (bad) fistl test push (bad) xchg fcmovne add xor fcmovnu icebp outsb (bad) xchg jl and fcmovnu add (bad) mov xchg fistpl rex.RXB push insl (bad) imul mov hlt jnp pop mov fcom cltd add sbb int3 repnz movslq (bad) (bad) or sub repz rex.B (bad) push sar fnsetpm(287 (bad) xchg sub fistpl pop movabs add shrl adc xor cmp sbb rex.WRXB int push ffree fdivrs rex.X or fildl leaveq sbb pushq fcomi or insb fadd fmuls nop stc pop mov jnp je loop neg (bad) cmp iret cld push mov imul sbb in fisttpll movabs fdivs jmpq pushq rex.WR cld mov data16 mov xor cltd clc jo mov cmp xchg stos jl xor imul outsb pop mov loope sub rex.B mov movsb jnp (bad) xchg mov outsb movabs imul xchg int fistpl insb sub mov loopne add or xor cltd rcl (bad) adc pop fidivr in leaveq andl (bad) nop divb fwait pop sbb scas xchg adc add (bad) jge push sub jb cmp mov int3 xor rex iret rcrb sub rex.RX ds enterq test stos leaveq push mov fstpt and (bad) jrcxz jbe fcmovnbe movabs sub pop pop lods (bad) imul fisttpl fdivr mov rex.B push (bad) xor xchg roll (bad) (bad) jmpq test jnp jl sar jnp (bad) (bad) adc pop fwait cmp es xor push fwait and ja mov cmp push mov cld iret xchg mov (bad) xor rex.WR es rex.WRB rex.RB fisttpl iret (bad) repz add (bad) jns retq ss cmp movsl push movabs pop sub stc (bad) loop rex.WRXB movsb adc pop sub out push fstpt mov rex.WXB loope scas fistl loopne rex.WRX data16 mov (bad) jmp callq adcl pop movslq movslq (bad) (bad) pop (bad) push rex.WRB pop ss jnp outsl and sbb adc jns testl mov fildl leaveq jl fwait xchg mov (bad) sub outsl out cmp push mov fwait adc jmpq sub cwtl (bad) in mov iret (bad) adc iret (bad) movsl repz sbb movntq out in fcmovnbe pop rex.RXB (bad) cld cwtl (bad) fldt rolb test and mov jnp mov iret (bad) or and mov js xor fildl (bad) shlb (bad) outsl jnp add fstpt movabs mov mov mov test cmpsb lahf jne enterq adc (bad) jg out fcmovnb rex.WR test jp lcall sub jae (bad) pushq int3 mov sub jge mov mov imul and mov hlt cwtl pop push pop cmpsl movabs std idiv pop pop adc xchg stos mov enterq test rex.RX clc mov fistl or movslq (bad) adc jl retq movabs rex.WRX retq loopne (bad) jno xor fadds rex ja jne fwait mov add cmpsb push jl stos mov mov (bad) rex.XB sbb lahf cmp sti pushq fucomi sub and xlat or push test pushq mov int3 adc sub mov jle addr32 (bad) rex.WXB (bad) movabs movslq push out and fildl (bad) fistl sbb lock mov mov iret (bad) mov fnsetpm(287 add rex.WRXB rex.RX cmp cmp push (bad) pop int3 shlb lahf hlt mov ds (bad) (bad) fisttpll adc fisttpl (bad) mov (bad) outsl sub mov movabs movl rex.RXB mov (bad) jae lods cld movabs (bad) out jbe pop (bad) outsb rex.XB sub push rep xchg movabs sbb mov pop lock pop jmpq pop xor fildl lea in movsb (bad) pop test xchg xor cmp (bad) clc icebp cmpsb (bad) scas out xor in mov jnp adc data16 (bad) (bad) mov movsl xchg fsts push mov data16 out subb test je pop insb fnstcw cmp icebp and cli fucomi popfq sbb sbb add add (bad) (bad) mov repnz xor rex rex.RXB add xlat lock cmp rorb fldt repnz pushq (bad) cmp vpand (bad) push sahf callq pushfq (bad) loopne stos jne xor mov push stos rex.RXB sti fildl fnstenv (bad) out jae (bad) retq ficoml hlt xchg (bad) mov xor sbb test mov in fcmovnu mov and add pushq xchg (bad) mov movsl scas mov stos pop cs stos (bad) (bad) and pop imul xor movabs std (bad) mov scas out pop push (bad) bts fucomi push and hlt (bad) mov leaveq and mov push clc mov pushq pop mov (bad) push lret fldt sub mov mov jp (bad) or and sbb fistl test sbb push (bad) pop sbb fwait in (bad) mov (bad) fstpt clc or and pop imulb lret cmp and (bad) enterq mov pop mov addl rex.XB in repz or pop (bad) std or fldl icebp movabs fsub jns fwait out (bad) cmp (bad) fsubl movabs mov push cmp xor xchg scas retq xor retq lods jl xchg adc pop movabs stc mov lock cs incb push retq xor mov mov addb add (bad) sti rex.WB (bad) sub in movsl sbb rex.WRB test sarb rex.XB add shrl lock cmpsb jge outsb lea push repnz xor cmp cwtl es push pop push push callq addr32 loop loop (bad) gs jo leaveq mov rex.RB (bad) pushfq adc in push xchg mov cli pop sbb out data16 push rorl insl lahf sbbb movslq rex sahf jrcxz in ss push (bad) scas (bad) mov sbb add cmc xor sbb int3 insl (bad) test rex.WXB rex.WR fwait clc lods pop mov outsl or jg rex.B xchg (bad) rex.XB stos cwtl outsb out push scas xchg jno in (bad) xchg int movslq leaveq imul lock mov xor mov lret fidivr loopne mov test pop js mull adc scas cmp nop mov jg (bad) xor xor jns push xor adc scas mov adc lods enterq fbld lret and fcoms rex.RX mov mov mov jnp or out test cmp adc icebp sbb movslq (bad) insb mov rex.B add push xchg movsl pop jl sub and loope rex.WB rex.X adc (bad) pop fldl2t mov rex.WR xor or rex.WXB xor out lods jb xor mov jg (bad) rex.WR rex.WRX cmp cmp sub mov fistp (bad) (bad) mov pop jl lods lods or (bad) push fildl cmc mov out pop add subl adc adc xor rex.WRB iret rex.W mov fildl movabs sbb in stos fwait in loop add clc or subl fisttpl mov sbb ds outsb callq mov js rcrl fistpl and std pushq movabs adcl xchg mov jbe lahf data16 movslq scas cld adc push sarl outsl jmpq xchg pop ja rex.WXB movsb iret cltd cmp loop rex.X push test rex mov sub rolb test lods mov (bad) out add jnp retq fildl loop (bad) (bad) add (bad) sti xor mov scas pop pop (bad) or fwait rex.B sbb pop fistl loope (bad) (bad) movsb jnp mov adc cs sbb nop callq loop mov test fistpl out or fcoms mov (bad) je loopne rex.W or sub pop movabs mov fbld adcb add or rex.RB (bad) push leaveq rex.R ds addr32 in nop fdivs jmpq (bad) and (bad) (bad) (bad) fildl gs or cmpsl (bad) sbb jo cmp cmpsb jnp gs xor frstor pop rex.WXB mov mov iret out (bad) popfq lock xchg nop incb shrb movsb fdivrl fwait sub mov movabs cld insb fistl popfq (bad) ja in and movsb sahf js (bad) jg (bad) loop cli nop retq jne rex.RXB sub fucomi sub out push shufps xchg (bad) pop xchg rex.WRXB gs mov mov adc retq mov cmp out pop (bad) or pop jmp outsl cmpb sub (bad) (bad) scas add push rol fstpt cld and xor ds loope xor rex.RXB jnp stos rex.R (bad) (bad) out sub repz mov push (bad) sub fildl ss and mov fnstenv pop cmp pop jl cmp out jp fcomps cltd or stc sub addr32 movabs cmp (bad) xchg mov loope mov scas (bad) jnp or xchg movabs push adc out cmpsl pushq fcmovnb xor push mov addr32 popfq in rclb sub sbb mov lret iret rex.X jmpq out test fistpll (bad) out repz pop mov cli orl rex.WR mov xchg movslq fildl pop and fildl (bad) lock (bad) fistl (bad) pushq test stc fistpl and sub jne push sbb loop fwait pop add flds mov stos xchg rex.WX or (bad) add outsl add jnp rcrl rex.RB lock out pop or push es xchg fistp push (bad) rex.WB mov lods xchg (bad) sub rex.R test push lea nop mov xor (bad) mov pop je sub outsb pop sub test in stos and cmpsl xchg mov fild sub (bad) (bad) rex.WRXB cld in sbb push sbb cltd rex.WB pop lea popfw xor cmp pop cmp adc cmovo xchg mov pop fwait cmp (bad) (bad) cltd mov xor mov loopne (bad) push xlat jrcxz push cmc sub jne pop clc mov rex.WRX fwait roll (bad) rolb (bad) loope in and cmp sbb lock cs rex.WXB or rex.WXB repnz jnp jl imul movsb (bad) xchg std movsb sti rex.WB fldl mov and adc fwait jmp (bad) addr32 (bad) js repnz jne pop lods pop rex.WB jnp cmp xchg (bad) sbb mov ja fist pushfq xlat jl (bad) (bad) jmpq int3 or loop pop pop xlat imul rex.RB xor push bnd fistpl je movslq xchg mov sbb lret mov es sbb xchg jno fwait xchg xchg andl mov vcvtsd2si (bad) pop clc retq cmp (bad) sbb xchg scas and adc pop pop pop and jns jmp or fisubl in testl xchg jns sti movabs in test icebp and (bad) sarb cmp in int3 in adc out clc (bad) jns outsl sbb iret rex.XB sub pop mov fimull pop (bad) (bad) je shr xor cmpsb mov cmp push mov (bad) mov add (bad) jno xchg jge add add icebp rex.R repnz cmpsl adc xchg xchg mov stos mov subb (bad) pop std pushq (bad) sbb mov mov (bad) or notl loopne rex.WX cmp xor setl or xlat cmp jrcxz add (bad) pop (bad) (bad) cmp mov pop adc jns retq hlt and pop (bad) (bad) (bad) icebp shrl mov mov cmc (bad) jl xchg push scas mov jge (bad) cld adc repnz sbb (bad) xor shrl push rex.R loope mov add jne add pop rex.WXB add addr32 cmp rex.WRX (bad) imul add pushfq shrl adc (bad) fisttpl sub stos mov popfq xchg ror mov mov jrcxz test icebp fstpt xor nop cmpsl cmp sub fcmovnbe leaveq ds mov clc add fldt cmpsl xchg mov add adc adc imul mov andl add fistl (bad) out fldt insb mov rex.R fwait push sahf movslq xor lahf fwait (bad) xchg sbb insl cli rex.RB mov (bad) (bad) pop (bad) imul (bad) jp add mov fdivl fildl popq xchg insb sti hlt xor rex.RB pop fadd sbb cmc jrcxz sub mov add fistpl cmp rex.RX (bad) xor sub cmc jg cmp fisttpl sbb pop xchg mov jo jp out lret sbb icebp fwait rol in rex.WR rex rex.R mov sub fimul (bad) push mov rex.RXB pop (bad) xor pop jnp movabs (bad) pop (bad) or fwait in adc sar movslq xchg push jle icebp loop retq repnz rex.WXB ficomp sub jne pop push outsl sub or mov fucomp out fildll (bad) (bad) movabs cltd pop (bad) fsubrp sbb pop test imul (bad) add out push pop mov sbb jge or fs scas mov sar gs sub and hlt cwtl addr32 (bad) adc out rex.RXB push or or (bad) stos out jle test jmpq gs (bad) mov stos in cmp int3 test je in (bad) add rcrb or jb scas mov sub jmp mull fistp pushq jrcxz in jge rex.WRX mov or mov rex.R cld lock loop rolb rclb mov rcll ja and (bad) out add add pop xchg scas xchg xchg jp mulb ficomp adc out movabs (bad) loop rex.WRX and sahf lods sbb (bad) pop push cs fwait data16 mov cmp neg pop push xchg hlt test (bad) stc (bad) (bad) imul rcll fcmovnbe cs (bad) idiv out pop fldenv mov test (bad) cli add mov ficom stc (bad) mov addr32 (bad) (bad) fistpl xchg fstpt jmpq cmpsb and jnp repz pop xor retq jb lret imul (bad) pop pop add js (bad) jl jne out mov (bad) fcoml rex.XB movslq mov rex.X rex.WB fistpl mov cmp fcmovnu pop cmpsb fldenv rex.XB lods jne sarl fs xchg movsl mov and and sub (bad) gs add xchg add ficompl push rex.X jnp pop cmp fwait cmp rcl outsl por fidivrl sbb (bad) enterq es jmpq int3 leaveq movsb fcmovu and mov pop (bad) loope rex.WR int rex.XB xor add movabs fild or pushq (bad) lods xchg fidivrl repnz cmp pop sbb orl retq loop cld (bad) jg test js jle data16 cmp cmpsl fildl cmp sub push pop mov je in sub add push je mov sbb (bad) xchg sbb (bad) sub pushq sarb test rex.RB push sub fucomi out and xor in and movabs out push mov (bad) movabs pop std and movabs fildl cwtl (bad) lret stos pop (bad) scas fwait iret test shrb cltd fildl out push or retq (bad) iret mov sub and fadds jns push (bad) fistl std pop stos nop jle out push rex.RB mov xor pop add (bad) mov popfq fisttpl xor and (bad) fcmovnu pop mov and rex.W fcmovnu out add xchg mov ficomp rex.RB rcl out rex.W push lret push cld (bad) pushfq fcomps sub test xchg adc xchg or sarq cs (bad) pop popfq pop es out enterq pushfq (bad) fs addb (bad) adc rcrl hlt xchg and cmc cmp fistpl xchg jno (bad) test or (bad) (bad) fistpl (bad) mov pop add push xchg xchg stos (bad) (bad) or rex.WRB fwait fwait add nop roll sbb in jnp pop and sbb out push (bad) (bad) jrcxz mov cmpsl pushq adc fisttpl fs in xor jge (bad) xor pop sub pop rcr ja int3 xor iret mov fsubrl jnp jl (bad) (bad) adc jle imul pushfq jns rcrb (bad) cs cltd (bad) int (bad) lock adc fcmovne xlat lods rex.B movabs (bad) adc int3 sbb loopne fldt fbld or (bad) cmp sbb mov jg scas lods subl sbb imul sub push rex.WXB adc cmp rex.RX (bad) scas test stos push cmp mov rex.W jnp imul rex.XB or pop out adc repz fcmovnb cmp (bad) xor int3 mov fmulp insb mov rex.WRXB decb pop leaveq cltd addr32 negl sarb jbe stc lock loop add pop loope or pushq cmpsl xor mov (bad) mov movslq rex.B and out jne hlt lahf push fildl mov jmp fistpll add and xchg pop mov sahf fwait jg mov fwait clc jge jl sub mov rex.X rex.WRX gs outsb (bad) jne in test test callq jle mov (bad) rex.RX es testl xor (bad) push rex.X jl insl pop (bad) or xor jmpq andb rex.WR pushq sub xor xchg sbbl jne push fisttpl xor mov xchg pop out ds gs or pop insb (bad) cmp push stos xor mov mov mov ds pop fwait xor pop mov movsb lods rcl cld adc (bad) jnp cmp fildl (bad) test fcmovnbe out jmpq pop (bad) mov rex.WRB xor mov fwait leaveq stc mov (bad) (bad) fcmovne and cltd xchg (bad) scas pop jb mov retq sbb callq mov (bad) int (bad) xor es rex.WXB push adc lods pop andb (bad) out lret fcoml retq lret rcr sarb (bad) (bad) cmp push and rex.WRXB sti mov out sub fisubrl mov lret (bad) fist mov rex.WX pushq add and (bad) or fistpl stos sbb pop xlat fstpt movabs jmp mov rex.RX jl mov ja add fwait rex xchg in (bad) jo outsb lret scas adc jnp shll mov fisubrl jge xchg mov fucomi pushfq cmp mov xchg and fnop ss test pop (bad) movabs rex.WX mov cltd orl pushq mov rol ss (bad) mov sub stos test mov xchg (bad) push lock pop shlb int and outsl out (bad) add xor pop jp mov cltd pop test adc (bad) rex.WXB hlt (bad) cmp pop idivl movsb (bad) fstp fistpl pop sub movsb stos movabs mov adc cmovo adcl push sbb jno outsb rex.WXB lea fcmovne movsb jne or adc scas (bad) out jp loopne add ja movsb repnz adc (bad) rorl xchg or retq lret pop cltd or (bad) xchg rex.RX mov scas xchg loope rex.R iret xor mov test jl rcrb lahf stos pop in (bad) push jl jmpq mov in mov loope jmpq sbb (bad) (bad) add xor xor rex.WRB insb (bad) pop push xchg push (bad) (bad) mov lret cmp xchg jg lea je xor jge sbb imul or add movabs pushq lahf pop lods movabs jle addr32 (bad) mov jg pushfq mov add (bad) loope mov loope out sbb mov fwait mov sub (bad) iret mov or push sbbl fldt push mulb pop in pop repz rex.RX mov (bad) nop fcmovne movslq (bad) rex.WR sub fs pop in pop enterq add outsl jg add callq fcmovnu cmpsl test jbe cmp rex.R fistpl xlat mov sub dec mov sbb and imul movabs add out xchg movsl mov mov fcomp (bad) mov cwtl mov lret xor iret add cmp mov rex.WR add mov and (bad) push push jnp retq jrcxz rex.WRX addr32 push cmp fcmovnbe rex.WRB rex.XB fisubr (bad) xchg movb (bad) loop cmpl jmp sub insl xchg fldl2t fiadd iret (bad) (bad) xchg stos addr32 iret or (bad) mov fisttpl xlat xchg fiadd (bad) jne cmp or mov sbb movsb xchg jp int3 in out and icebp rcr and (bad) mov xchg (bad) stos jg mov (bad) adc icebp (bad) cmpsb xor movsb fldt imul adc callq mov push sub (bad) fcomi adc pop mov jae jmpq mov xchg test lahf mov and mov xchg cmpsb fs rex mov frstor rex.R mov fcomi or rcrb add and fcmovnbe mov xchg and and or mov movsl callq lahf sbb movabs lret loop xchg test cmp push jmpq (bad) mov (bad) in sub lock and xchg jle fldt (bad) or sbb ficom in xchg iret jo rex.XB stos in mov jl fs fisttpl and in push fwait movl cli test xchg fneni(8087 sbb (bad) callq cmp incb je mov pushfq pop fisttpl (bad) cmp mov fldt and movabs test movslq jnp (bad) (bad) pushq movabs (bad) fldt fcom scas (bad) push and push je cltd imul movsb push lock cmp fwait addr32 xchg (bad) fistl loope cmp push (bad) (bad) cld cmp (bad) jrcxz popfq (bad) fstpt in add (bad) push es xor stos pop mov (bad) xchg mov fsubrs (bad) int3 loopne pop fwait jl sbb mov adc (bad) adc movabs and mov (bad) xor jnp test pop pop decl out cmpsl js rex.B scas (bad) incb and fcoms cmp (bad) movabs cli adcl (bad) lock or rex.WRXB (bad) push push (bad) mov mov in subl push mov rex.WRB out (bad) (bad) fucomi stos ja pop sub insb es rex.X cmp test (bad) cwtl and fisttpl addr32 (bad) rex.WXB cld lea add mov (bad) mov rorb stos (bad) mov nop add rex.RB icebp fstpt stos loope int3 lahf xchg test pushq sub (bad) scas loop outsl cmp cmpsb pop and pop test movabs outsl out cmp xchg test cmp movslq mov jns fbld and mov (bad) (bad) xor or push out mov (bad) push rex.RX cmp lahf fistl add xlat (bad) (bad) cmpsl mov stos mov nop callq (bad) fwait xchg mov (bad) hlt test js int3 pop addr32 xor fiadd rex.B rex.WXB popfq fcmovnb fwait jle mov or rex.XB addr32 (bad) (bad) mov rex.RXB cmp xchg pop mov lods movabs ficom out (bad) push fisttpl js,pn mov cmp add fisttpl loope or sub push (bad) and imul movsb cwtl (bad) pop push xlat pop (bad) pop hlt lock jmp jmpq pop lods sub pop push xchg add movabs xchg mov pop add adcl lock (bad) rex.B cs mov je nop (bad) stos fsubs xchg (bad) leaveq rex.R outsb fwait push jl xchg sbb fcmovnb mov icebp and sub or pcmpgtd (bad) leaveq jae mov add iret pop enterq out add xchg nop stc add mov cmp shrb (bad) rex.XB rclb leaveq (bad) rex.RB cs fisub push add cmpsb scas (bad) add clc fildl rcrb (bad) rex sub fildll jne pop mov movabs mov callq loope (bad) push loop sub ds fcomi test sti mov scas pop (bad) loopne (bad) jge jg add pushq jns ror out (bad) pop mov stos cmpsl neg xor add icebp iret xor (bad) push test mov fcmovbe jae sbb fcomi add mov insb bnd (bad) cmp mov (bad) add and imul mov pop (bad) mov (bad) outsb rex.WX lods pop mull out fcmovnu adc clc jmp xlat push sub repz push in movslq sbb (bad) jno fldenv and pop jp rex.R fistp push out mov jmpq sbb cld cmp or sahf push rex stos cwtl mov cltd lods (bad) (bad) and test mov push rolb sbbl pop fisubr scas and shrl mov jl mov (bad) add js (bad) xor cld add sbb jnp mov xchg sub sbb in rex.R or rclb out sub lock clc sbb pop (bad) cltd out rex.WXB rex lock sub or (bad) retq (bad) lock rex.WRXB ds (bad) mov movslq xchg mov and rex.WB xchg lahf (bad) (bad) stc fstpt jno push or mov sbb lret out cmp retq mov and fidivrl (bad) (bad) mov pop cmc (bad) in cmp cmp imul xchg (bad) movabs lock (bad) (bad) (bad) (bad) out cld out imul (bad) xchg icebp pop hlt mov loop cwtl cltd sahf rex.WB rex.WXB fisubl or es (bad) jnp fisubr repz (bad) lret mov (bad) pushq xor mov xor xchg and (bad) jle mov xchg or gs int3 outsl jno cltd or cmpsb outsb cld outsl sbb out push jnp adc xor cwtl (bad) retq test (bad) es rorl out xlat clc int cmp in xchg movabs (bad) jae clc movabs rex.WRX add sbb movslq (bad) int3 xchg push shr pop retq mov pop jl ja (bad) fsubp adc mov fstp stos (bad) out je rex.RXB jl pushfq movsb sub loope out int mov movabs sbb (bad) pop imul cmp fstps imul repnz (bad) or adc sub (bad) or (bad) rex.WB pushq mov vaddps (bad) retq (bad) in fisttpl stc xchg pushw rex.WB cmp std push jae jbe stos (bad) jo pop rex.RX cltd sbb out (bad) mov adc enterq fldt xchg cmp pushq incb add fnstenv (bad) test sbb fndisi(8087 pop or test pop mov mov mov icebp xchg int out test cmc loop,pn jns movabs loope xchg insl rex.RXB fimul add mov (bad) (bad) jge (bad) lret movslq push mov xchg loopne callq mov jle (bad) rex.WB lret rex.WR (bad) cltd mov lahf fwait (bad) adc rex.WB movabs lret mov nop in cli jns loopne mov popfq (bad) jle (bad) pop (bad) add sti or (bad) fisubl (bad) pop cld shl fistpl mov mov rex.WRXB adc jrcxz mov mov fmuls cmp subl (bad) gs cmp ficoml fldt outsl iret scas adc fcmovnu (bad) mov pop and pop fcmovnbe (bad) and cwtl int xlat push push es pop rex.RXB jrcxz lods and iret jbe cmc rex.XB xor adc rex.WRX fimull ds mov rex.XB ror sti fldt mov (bad) pop mov nop movabs or sbb fstpt (bad) std rex.RXB movsb or insl lret sub xor ds loopne (bad) (bad) data16 stos pop or pop sub xchg rcrb leaveq push in xchg pcmpgtw (bad) push rorl mov imul popfq int shrb cli jg cltd popfq jo repnz and (bad) (bad) fcoml rex.WB popfq repz cmp or (bad) (bad) (bad) cmp fstpt rex.X sub fldt shrl fstpt and (bad) mov cmp push movsb rex.WR mov rclb fcomi clc rolb mov leaveq outsb mov movabs xchg movslq fsub cwtl rcll stos mov and fmuls fwait mov (bad) jg fwait jmp mov fndisi(8087 xchg iret std (bad) fbld cmpsb cmc add lret sahf jbe (bad) pop in nop or (bad) (bad) cbtw sub (bad) jge movabs fmul pop xchg sahf mov rex.WB sarb rex.WXB rex.XB sbb and insb imul push rex.WRB movabs insl rex.X cld addr32 mov movabs fistl movabs (bad) add pop lea lods mov nop adc loop idivb mov cli push adc in xor retq and int3 sbb (bad) fisttpll lea cli rcll jg ja xchg or jno or (bad) ds jl ficompl pop rex.WB ja (bad) loopne xor movb lea xchg movslq rex.XB pushq rex.WR imul add fsubs sub xor cmc stos sahf int nop xor fcoml ja pushfq jnp notl cmp adc cmpsl xor cmpsb sbb sub pop movzbl (bad) cmp xor test (bad) repz (bad) fistpl jo dec (bad) fcmovnu outsb stos xchg mov test (bad) (bad) (bad) jbe and add (bad) mov mov jae push adcl mov (bad) (bad) sbb (bad) xchg pop (bad) fstpt xchg fnstenv in push add (bad) (bad) js rex.W fsubl rex.B (bad) mov jb push (bad) ficom (bad) (bad) xchg stos jge push movsb xlat adc fldt (bad) adc jnp xchg fst movslq xor (bad) popfq mov sub (bad) fldt adc iret cmp pop cmp mov jno fstpt (bad) rex.B push or lret rex.X mov repnz (bad) or loop sub repnz sbb fcompl gs push (bad) lods cmp rex.WXB cli scas jnp xchg imul shr rex.RXB bswap xlat rex.R fistl push retq mov xchg (bad) pop lods xchg (bad) push sub imul sbb fs retq out (bad) adc xchg fldt (bad) (bad) jo jno mov iret iret mov (bad) rex.X (bad) add add fwait cs rex.WRX icebp sti (bad) push retq (bad) (bad) mov jns in xor int clc or std mov stc xchg (bad) or pop rex.B fldcw xchg mov sbb sti hlt and sbb rcll cmp fcom pop shlb repz rorb push fucomi ljmp ds imul scas leaveq rex.WRB rex.WRXB xor negl iret enterq mov mov jmpq loopne sti test movabs push xchg xchg (bad) mov (bad) fisttpl sbb sub rex.XB adc pop (bad) or mov and ds sub rex.W int3 mov stos mov rcr jno rex.WRX push sbbl in clc int fwait add es sub sbb pop add mov pop je pop loop jne callq pop ja pushq sub sub sbb hlt jl imul cmp rex.W mov mov imul movabs push lahf cli xor (bad) sahf out test (bad) rex.RX fwait sub xchg test (bad) mov mov (bad) (bad) pop imul fcomi sub mov xor (bad) retq repnz flds fwait pushfq pop sarb (bad) sbb fildl pop (bad) (bad) mov paddd je,pt adc sbb (bad) std xchg mov rcll and push xor (bad) mov mov nop jo movabs popfq fcomi or movsl sub sbb (bad) mov stos lods (bad) movsb pop jge out in adc sbb mov in sbb mov xchg push imul adc pcmpeqw pop cmpl and or repnz fwait mov sbb rex.X movabs push cmpsl xchg mov (bad) jp (bad) jb in fs rex.RB (bad) pop jnp cmpsl cmp out std test out add out sub add xchg or (bad) jne cmp adc jl and (bad) rcrb jle cwtl test frstor lret add (bad) pop ds cs (bad) mov xchg (bad) cs movabs sbb xchg mov cmp (bad) xchg stos mov cmp vmovlps mov cmp mov (bad) stos sub (bad) in mov jne sbb or int3 rex.WRXB gs (bad) (bad) test sbb ds sbb jg cmp xor rcl sahf out mov (bad) gs fwait rorb mov (bad) cmpsb jle jo test loopne xor and rol mov sbb lods (bad) int mov jnp jb es sbb in jo movslq retq pop cmpsl push repnz movslq sbb rex.X add sarb fildl mov fisttpl rex.WXB cmc mov cli (bad) (bad) outsl cmp fdivl lret out rex.WB sbb xor sti repnz scas push rcr cmp movslq pop rex.XB movslq (bad) xchg mov lea fndisi(8087 cmp sbb mov add (bad) mov (bad) movabs sub test (bad) nop cmp (bad) (bad) (bad) jle (bad) push fnstenv rex.WRX xchg mov fistl sbb (bad) cwtl cmpsb (bad) fs mov sbb rex.X pop in add (bad) or xor (bad) fildl xchg jle cmpsl fsubrs rex.WR mov push cmp movabs pop cmpsb pop xor retq (bad) std pop xchg cld fimul out lock sbb (bad) shlb and mov sar (bad) (bad) in jae outsb (bad) (bad) xor sbb (bad) mov rex.X outsl incl sbb in cmp rex.RXB (bad) fcmovnb je rex.W repnz lods rex.WR ss jrcxz test (bad) or fnop jge fistl fucomi mov jg push cmp and pop (bad) jmp (bad) and fistl sbb idivb (bad) jl int3 enterq cmp (bad) sahf int jge (bad) sbb (bad) or xchg pop and (bad) test fisttpl mov callq (bad) movsl push cmp push xlat test push (bad) sub pop outsl int mov push addr32 (bad) sbb sbb add or pop cmc adc test push mov (bad) movslq (bad) stc mov xchg rolb addr32 sub rex.XB addr32 shr mov loope fistl rex.WRB rex.WRX sti test pop lods rex.WB jge mov fstpl mov out callq lret fstl xchg add jge adc (bad) and cmp fcmovnu stos jp pop fiadd (bad) jg movabs pushfq and or (bad) rex.WRB sub cmp sti ds loope lods ds sub jbe rcr rex.R data16 jg (bad) rex.WRXB jo (bad) fildl loope lgdt (bad) mov rex.WRXB rex.RXB incl mov mov enterq fmul in cmp addr32 icebp jns cmpsb mov mov fsubl mov rex.WR rex.RXB mov addl popfq cmp cltd rcr outsb (bad) rex.X add loopne scas adc xchg xchg fildl (bad) movabs icebp (bad) or cmp pop scas xchg mov (bad) (bad) push cmpsb adc add imul movslq mov pop sub movabs (bad) (bad) sbb loopne mov rex and add cltd fcmovnb push (bad) xchg mov pushq pushfq sub repz jnp push js (bad) push rex.WRB (bad) lret cltd (bad) pop fsubp sbb push xchg adc add sarb or imul cmpsb jp add addr32 (bad) shr (bad) sbb (bad) mov mov lods paddsb jbe jno fs xor or stos (bad) int cltd (bad) mov addr32 retq (bad) lahf xor cmp sub or add mov test or (bad) cmp (bad) lock mov rex.WRB fildl sbb cmpsb cmpb cmpsl mov xchg sub test (bad) rex.WX jmpq and int3 cld retq sbb movabs xchg mov test (bad) fstpt sub mov cwtl xor movabs mov (bad) xlat sub cmp fstpt (bad) push or or or fucomi scas xchg (bad) popfq notl rex.WR cmp fs sahf iret or sub pop push fldt cmpsl je fwait jp pop push jnp test leaveq mov fisttpl mov add sbb in int pop cmp fcoms out rex.WRXB mov rex.WX rex.WRB rex.XB cltd loop lea sub leaveq or (bad) sbb xlat callq (bad) pop (bad) mov (bad) rex.X cs (bad) movabs and mov (bad) in fisttpl or rex.W sti xor sub push retq mov sub add fcmovnu xor imul mov cmp (bad) imulb notl xchg movslq jrcxz (bad) pushfq lea (bad) (bad) pop jg rex.WXB sbb stos fstps xchg pop testb movabs pushfq mov add xorl shr sbb (bad) pop movsb stos push xor mov adc xchg fstpt loopne jge loop mov jo jno enterq fdivrs pop repnz (bad) rex.RB xor imul cld movabs roll jb iret rex.WR (bad) (bad) ficom addr32 jae out xchg and movsb (bad) pushq rex.R xchg pop (bad) fistpl xchg rex.WRB and rex.WRX (bad) movsl fisttpl cmp add mov enterq retq cld (bad) rex.X fstpt xor and movslq cmp (bad) in push fcomps mov mov (bad) fwait (bad) int3 jrcxz mov rex.WRB imul (bad) or and (bad) rex.X rex.RXB push (bad) and (bad) cmp int3 jmpq and rex.RB rex.WRX (bad) (bad) pop idivb add jle fstpt loop adc leaveq lahf out (bad) jmpq sbb (bad) hlt (bad) (bad) stos add add pop cmp (bad) (bad) xor hlt xchg xor std in pop in (bad) nop jle xchg or clc movabs mov mov lock xor cld sbb jbe add (bad) push mov fdivrs add fstpt or add icebp mov cmpsb (bad) insb lahf sub fbstp rex.RB callq cmp add fcmove or jg out pop or rex.WRB mov jnp add jmp (bad) cmp outsb adc mov lahf fcmovnu sar (bad) jns fistp sbb mov mov rex.XB fildl callq out pop (bad) lods cmp jnp outsl mov (bad) and pop iret (bad) sti add jp xchg int3 xor sbb (bad) pushfq outsl test sub jns sbb rolb push cmc pushq sbb mov cmp sti fdiv sahf andl callq out mov sti (bad) cli lret stos add mov movabs and mov callq push fwait jle sbb (bad) imul (bad) (bad) fwait movabs cmpsl movabs imul fsubrl (bad) lods fwait sti mov rex.WRX lea and adc xchg jl (bad) rex.X fsubl std xchg push pop jae (bad) loopne sbb (bad) push cs (bad) pop jae fistl mov (bad) fcmovne mov sbb retq mov in ds icebp insl insb fwait sub cmpsb (bad) jb movabs sub or xchg fcmovu addr32 mov cli (bad) push pop (bad) insl jo test cmpsl xorb push mov outsl jns (bad) add and (bad) mov cs jp fistpl cld test lea push or (bad) cmp sub cmp sbb pushfq jl (bad) push test (bad) icebp callq cs (bad) pop push stos sub or lock rex.RXB lret cltd retq loopne (bad) fwait rex.WR mov rex.B or fstpt outsb pop insb mov (bad) sub rcr fwait mov (bad) fist movsb push (bad) pop adc or and mov mov xchg fldenv sub pushq sub fildl jbe cmc hlt rex.XB add pop repz xchg popfq mov js (bad) cli jle rorl add and rex.B movsl movabs cmp push addr32 gs iret adc rex.WRB fildl (bad) (bad) mov pop and (bad) adc mov fldt xchg lods mov xor rex.WRX sbbl ja cmp (bad) rex.WRXB (bad) iret out int3 jrcxz rex.WB fwait mov rex.RB insl fistl mov jle stos icebp (bad) pushq add mov cmp or jmpq enterq rex.B add ror rcll mov imul cmp push or gs mov xor xor stos pushfq cmpsl cmp ficompl pop imul retq cltd or lret (bad) clc pop jmp adc out lock xchg add fdivl sarq fcom scas in xor rex.R movsl pop jge f2xm1 rex.W or scas (bad) pop cmp jno adc lahf ds cmp sbb out (bad) cs fldcw (bad) icebp push jo (bad) jp js es (bad) je push cmc test faddl rex out outsl sbb or imul pushq repz cmp cmc add std xchg xchg lods test mov xor jns pushq lods cmp mov ss pop mov fwait (bad) (bad) cli pop adc repnz fiaddl cmp xor sbb pushq (bad) lods jne jno mov add rex.RX pop outsb pop fwait (bad) (bad) cmp lret add (bad) fwait ds push pop loopne lret (bad) jbe outsl xchg or divb rex.R movsb rcll retq xchg push (bad) cmpsb rex.RX xor (bad) fstpt add and sub hlt (bad) gs sub shrb (bad) push sar push fmuls and mov adc test fdivrl (bad) rex.WX iret mov pop xlat sbb shrb (bad) mov rex.WRXB xchg (bad) movabs pushq loopne fldl and adc mov xchg (bad) mov pushq xor ss rex.RX and cmc movsl push fisttpl mov pop fs (bad) mov fwait mov cmc movabs sbb mov fstpt or lock popfq rex.WRX mov mov cmp fstpt mov (bad) (bad) cmp mov xchg mov (bad) cmp stos sti jno sbb retq mov (bad) jmp callq movsl mov cs addr32 (bad) mov sbb sahf movabs (bad) add jno icebp sbb fcmovnbe (bad) mov sbb jo rex.WB fs fstpt cmp (bad) loopne add fistl push (bad) mov (bad) fildl xchg (bad) repnz (bad) jg sbb retq sbb (bad) mov (bad) or mov (bad) loop rex.WX hlt (bad) xor enterq movslq pop mov pop (bad) pop push negl loopne (bad) cltd add xchg sti in push sbb rex.RB xor add out loope and outsl or push (bad) (bad) (bad) rex.X hlt cmc fdivr fcoms in (bad) sbb jo sub xchg rex.WB mov mov test imul add and icebp xlat (bad) jne int lods (bad) cmpsl (bad) (bad) stos cwtl retq (bad) lret rex.R jnp mov jrcxz iret test nop fcmovnbe rex.WRX (bad) (bad) int in and (bad) movabs rex.WRXB xor push in and cmp stc icebp fldt rex.B sub shrb add fistpl movsb sahf rex.X fcmovnbe fisubrl add test add jg lahf push fistl es fdivs rex.R fcmovbe fucomi jmpq sub push in imul jrcxz (bad) ja flds rex.RXB rex.WRXB or xlat push fisttpl mov pop in mov and loope or ja mov xor (bad) rex.R mov sbb imul cmc cld stos loope fdivr mov callq (bad) clc push (bad) loopne mov push add mov enterq (bad) xor xchg xor (bad) insb adc push outsb fstpt mov mov (bad) lret (bad) cmc (bad) stos jl push test push movabs (bad) and hlt imulb rex.XB rex.R retq (bad) lods fbstp sub fstpt mov cmpsb (bad) loope sbb (bad) rex.WXB jb jnp mov test scas mov iret (bad) in pop pop insb clc retq pop movabs xchg fwait add push mov sbb lea adc ja fildl stos movslq pop rex.XB testl pop scas pop xchg (bad) sub cmp xor push fucomi pushfq icebp adcl mov cmovb xor loop pop in insb shrl rex.B nop int shll (bad) (bad) int out fwait xor xchg movsb retq outsb addr32 movl in subl clc rex.RXB and fstp add incl imul push lahf rex.X push cmp add mov test cld (bad) pop adc cmpsl fidiv jae test ja mov xor sbb fmull lahf jo fistpl xchg std rex.WX fwait mov push pop test movslq pop vpor movsb je cmp xchg (bad) (bad) mov iret jg (bad) mov fildl test repnz pop cmp rex.WRX rex.RX mov cmp decl cmp add (bad) fistl cmp fistl mov pop movsb mov and rex.WRX rex sbb retq (bad) addl std jp add fndisi(8087 adc sub sub (bad) stos (bad) rcll jnp mov cmp jnp movabs (bad) movabs dec iret data16 scas rex.WX fistl rex.WRXB cltd sub pop xchg push fcompl lret (bad) push jg sti pushq imul mov (bad) xor rex.R mov xchg fimul fcmovne (bad) pop movb pushfq push push xchg or (bad) sbb imul (bad) cmp bnd movabs (bad) sti (bad) mov push (bad) (bad) test mov xor fwait jg rex.WB pop (bad) cmp stos scas fistl (bad) cmp (bad) in pop cmpsb (bad) xor xchg mov fistpll stos rex.WRXB add mov jae hlt xlat rex.WB pushfq sub rex.W push fstpt cmp (bad) mov rex.WB fbld sbb sbb test (bad) test adc callq movabs add push mov mov test cmp rex.X stos xchg push (bad) stos movabs and sbb cmpsl cmp push mov movabs test or fildl (bad) enterq es movabs jp sub cld (bad) xchg addr32 int3 (bad) jmpq rex.WR fwait sbb fsub imulb fistl cmp pop scas cmpsl js jl (bad) lock mov sbb (bad) xlat rex.WXB (bad) fsts clc adc jmp rex.WRXB fisttpl sti ror or mov and (bad) jo (bad) lret (bad) gs and (bad) mov cmp (bad) shll sbb int rex.WXB (bad) pop mov jne rex.WR sbb mov (bad) (bad) (bad) rcrl rex.WX mov xlat loop pop add or rex.WRXB pop fwait pop mov add rclb hlt cmp adc leaveq (bad) xor fisttpl movabs jle or cli cmc outsl in jg (bad) (bad) (bad) push movabs sub jbe rex.B rol jp sub (bad) add (bad) movabs lock sbb sahf (bad) add xchg (bad) pushq mov (bad) icebp sahf (bad) rcrb adcl xchg sbb outsb data16 rex.RB push (bad) pop adcl leaveq rcrb roll repz push (bad) pop (bad) cltd icebp rex.WRX (bad) jnp jns mov push add retq movsl pop out fisttpl (bad) rclb jge hlt mov fcmovne rex.W sub xor clc pop push (bad) sub ds fcmovnbe orb adc and (bad) jne addr32 fisttp movsb fstpt sahf xor mov cmp fs fldt loopne pop fildl and rcr mov mov cld pop enterq (bad) mov repnz and rcrb iret and lahf retq fldt jns pushq sahf outsb fisttpl adc adc movabs push (bad) std (bad) xchg mov jo lods (bad) or and sub std fistpl xor sbb lret xor fildl xchg fwait push rex.X rex.WRXB imul popfq pop sub (bad) mov or fstps sbb push outsl pop rex.XB leaveq cmp xchg roll adc mov jl pop or mov fldenv rex.WRB xchg in and sbb fimul iret movabs push rex.R cmpsb out push fwait push jg rex.RB pop addr32 jl mov movslq (bad) (bad) (bad) sbb movsb or lret jle push push (bad) sbb imul mov rex.X jbe rcr mov scas rex repz (bad) jrcxz in ja mov fcmovnbe pop adc pop mov (bad) sub mov add rex.WR fistpl (bad) (bad) jnp lock mov mov mov rex.RB rcrl fcmovnb fcomp movabs and imul push cmc mov sbb kmovw xchg movslq fildll or (bad) fwait movabs movsb fidivrl sbb (bad) pushfq iret jg hlt sub jno sarl std pop fcmovne out add (bad) in sub fstpt xor sub add (bad) jae sbb pop mov mov push int testl push sub pop rex.WB sub add lea movslq subl sti movabs shll or fildl mov cmp int3 rex.W rex.WB adc add iret notb fdivs mov xchg jge fstpt (bad) xor fistl xor sbb nop pop enterq fdivs or (bad) pushq insl fcom cmpsl movsb sub cwtl int3 xor mov clc in (bad) scas fcmovne rorb sarb movabs repz movsb adc cmp and rex.XB pop rex.WRX sbb rex.RB fldt mov and ja nop (bad) cmp loope addr32 jle rex.WR fwait cmp and xchg jns rex.WRXB fstpt shrb out sahf stos rex.WB (bad) add lret push rex.RB and cs int rex.RXB sub movsb scas mov sbb fstpt int pop rex.RB cmp jge int3 mov insl push pop xor rex.XB cmpsb fldt insl xchg shl mov out pushq fdivs (bad) js pop cmp add push lahf lods pop shlb push out fstpt adc jns (bad) xchg sub fstpt rex.WRB xor pop jrcxz mov xor (bad) int movl mov mov cmp mov or cmp cmpsl movsl and icebp pop cld cmc adc (bad) cltd (bad) jnp push (bad) fcmovnb sbb nop int3 fnop cld out adc sbb movsb fldt jge movabs out pop leaveq movsl outsb mov mov out (bad) cwtl or or sub iret ja cli cmp (bad) hlt pop neg rep jbe (bad) sbb rex.R rex.WXB movabs fstpt push rex.RB mov (bad) fldt cltd (bad) mov rex.WRXB rex.XB ds mov push (bad) idivl cmpsb mov pop adc movslq retq xor fldt fs mov mov (bad) jne fstpt test iret insb and xor outsb xchg (bad) (bad) fildl lahf adc lods jge pop pop rorl add movslq push out mov jns movsl sub push int cmp cmp rex.WXB movabs loop repz callq (bad) fucomi fwait mov jb jne jg fcmovne fstps insb fcmovnu roll rex.WRX fstpt pop xor fwait enterq sbb mov stos std lahf jnp adc retq pop movabs push jno rex.WRX jge fimul (bad) insb and or fcmovnu mov xor and cvtdq2ps xchg pop cmpsb out cmp add int in sub test mov and (bad) rcl push out push jle std push mov rex.WXB lods cli adc movsb sbb mov pushfq fdivrl cmp jo xchg std (bad) jns add and jns (bad) in pop jne xchg xchg pop cmp hlt leaveq scas out out (bad) xor fadds rcl push loope in (bad) stos test (bad) or lock imul nop sar orl rex.R (bad) sbb cmp jl push imul sub add movabs xchg test ds jbe adc or lods xchg xchg fs lret loop sarl pushq movslq xchg add sub leaveq xchg scas adc mov add loopne and scas jno (bad) popfq cmp stos test mov (bad) xor movabs xor imul pushq jmpq jbe stos pop pop std fildl sbb (bad) movabs adc or xor (bad) rcrl leaveq enterq cld sarl pop or cltd (bad) cmp jae mov (bad) mov (bad) in mov pop adc pop sbb (bad) (bad) cld rex.WRXB gs movslq cmpsl xchg jno jae pop (bad) repz vpacksswb add ds jns fwait icebp fbstp repnz jb jno xor xor rcrl adc clc mov (bad) push lea (bad) or cmp data16 (bad) and stos (bad) ja retq stos xor sub or add push imul pop (bad) mov rex.WR imul add push (bad) lret jns sarl push iret (bad) (bad) jmpq pop imul in in cltd jns (bad) sub pop negb rex.WB movabs (bad) pop fidivl lahf shrl rex jae out cmpsb add push mov sbb mov fnstsw (bad) jmpq cmp adc xchg adc jp std icebp jns loopne sti rex.RXB adc cmp popfq push jg mov fldcw fstpt sbb in movabs test xor cmp retq rex.X cmp mov pop repz adc jmpq fsubrs mov mov jl roll mov mov test lods (bad) sub pop jns xchg stos push (bad) test jno movslq fistl mov (bad) out (bad) stos (bad) lahf nop (bad) fistl rex.R ja (bad) or adc sbb (bad) fildl sbb pop jl and (bad) cs cmp cmp stos mov mov or scas cmp sbb (bad) ja jno fwait cmp add fiaddl xor outsl sbb scas test in pop mov (bad) (bad) movabs cld sub icebp (bad) sub mov jg andb fildl xchg (bad) mov xchg iret mov cwtl cmp xchg cmp (bad) rex.X ss (bad) xor (bad) gs rex.WRXB lret fisubl sbb xchg imul pushfq fcmovnbe jne insl pop movabs mov fdiv push adc outsb jg rex.WRB xchg fstpl gs adc sbb jmpq movsl lods shll push cmp loop negb outsb (bad) sbb sti callq rex.WRB xor adc push pop cmpsb pop cmp push fildl xchg (bad) and outsb out lret mov jbe push adc jnp fucomip jnp stc rolb test xchg jne (bad) imul (bad) mov push rex.XB (bad) sbb (bad) jg push xchg push mov lret in mov xlat rex.RB lods xchg sti out repz (bad) adc sub sbb cmp fwait out gs xchg cld adc popfq cmp stos mov rex.X (bad) (bad) subl jl insl (bad) fldenv pop je,pn xchg push rex.RXB mov cmp add fcmovb mov lods mov add xchg lret sbb rex.X (bad) cmp movsl (bad) sub pslld push (bad) push cmp sti cmp mov jns (bad) fildl xlat mov or cmc loop (bad) cmp jne neg vpxor mov fistpl rclb rex.WR ficoml rex.RB (bad) sbb fisub (bad) (bad) outsb pop xchg pushq or xchg adc fs fisttpl icebp and callq imul jno fcmovnu fwait or ror mov iret test cmp pushq pop jae jnp test movabs jle fistpl pushq sub in jns rex.WRB clc cmp xor pushq rex.WB rex.XB rex.WRXB mov (bad) cwtl or jge add cmp and movsl mov xbeginq sbb (bad) or imul xchg pop loopne fstpt rex.WRB sbb mov rex.WRX fildl scas jmp cwtl jno lods rex or out add stc xchg mov (bad) lods andb (bad) (bad) enterq and in jl (bad) fisubl mov and rex.WB push xor push (bad) movsl (bad) pop sbb jb pop rcll fistp movabs mov rcrl pop in adc repnz xlat jbe imul mov neg jmp xchg ficoml mov (bad) shrb ror cmp cmp or outsb pop jl push int3 adc in pushfq mov in cmpsb iret icebp fidivr sti frstor rex.XB rex.RXB iret test nop ja ss mov jle add repz imul xor xchg sub in iret jg pop cmpsl movabs (bad) xchg and mov (bad) (bad) jrcxz fnstsw add mov lock fcompl (bad) es fcmovbe pushfq rex.W pop movabs (bad) ja mov movslq xchg rex.WB rex.XB cmp int3 rex.WRXB pop cli mov xchg cmc and gs jg adc (bad) cmp (bad) sarb addr32 data16 test mov sarb xor push push jge add rcrb stc (bad) mov fist sbb lods jbe pop (bad) sti in (bad) rex.WB cmc movabs rex xchg jnp sbb jnp pop adc or push sub xor repz xchg outsb push test or jl test (bad) pop bswap fistpll (bad) jp pushq fwait icebp jmpq pop stos jae add sbb mov loopne rex.RXB pushq sbb jbe jb adc std xor gs in (bad) out fstpl movabs es iret push test leaveq jrcxz mov (bad) (bad) stos div xor sub (bad) clc xchg outsl jmp insb cmp push pushq cli sbb mov sbb clc pop sbb mov sti and (bad) pushfq gs (bad) jrcxz pop rex.WRB rcll (bad) mov cltd in lahf repz cwtl repnz (bad) xor nop fnsave xchg movsl xor mov jmp push out xchg mov cld (bad) cmc mov cmp lret rex.WRXB mov rex.XB pop cltd xor es rex.X sbbl xchg out adc pushq mov adc xor imul add fiaddl adc movsl pushq sub or lods pop pop incb (bad) subl (bad) mov push retq jle outsl push lret addr32 iret stos or cmp pushq ds jno lret outsl (bad) rex jle loopne fist movslq (bad) rex.RXB jb mov insl (bad) fldcw (bad) cmc or sbb (bad) pushq or sbb nop rcr push jle lods mov scas xor pushq ffree (bad) stc (bad) clc test rex.X xlat and mov pop push mov (bad) (bad) fistpl xor jnp (bad) or scas lods movabs adc retq (bad) push lret out (bad) fwait adc rex mov insl flds push pushq scas fildll or cmp negl movabs dec mov mov outsb xchg cmp xchg retq in (bad) mov (bad) push (bad) mov lock lret push je (bad) scas xor fisubl or push lret fcomi fstpt jbe int sti loop xor loopne push pop xchg loop gs and stos (bad) cmp pop fildl mov movsl fistpl sub add push sub rex.WX xchg js push iret (bad) cmp fsubs mov mov push out fwait pop ficom sub fstpt cmp or (bad) nop cmp pop movslq jge movslq xor (bad) (bad) stos nop fcmovnu mov rex.WR (bad) sbb fildll iret rex.WB cmp (bad) rex.XB jmpq fstpt jne shrb pop (bad) rex.RB fbstp jg mov adc sbb fxch xor add xor rex.B cli rex.WB sub movslq rex.WRB or pushfq sub sti fistpl test xor pop gs adc iret retq sub push rex.WRB lods add mov (bad) xchg sub movabs lret retq (bad) data16 xlat (bad) jne push push sbb xchg pop jbe movsl cltd shr shrb add fisttpll add scas int3 leaveq stos out pop adc scas sbb in iret (bad) (bad) mov notl je or mov mov (bad) add ja pop (bad) iret xchg pop test shl shrl jns,pt jle (bad) rex.WR or jmpq lock clc hlt fisttpll add pushq mov sti pushq outsb xor pop rex.WXB rex.WX mov out and xor jne ljmp mov in gs mov (bad) fisubrl (bad) sbb (bad) mov jbe test fs fild rcll add mov out (bad) notl es fnstcw lods or enterq flds (bad) cmp sti sqrtps adc (bad) and (bad) adc retq rex.R rex.XB xor enterq mov (bad) mov rex mov jo sbb (bad) (bad) movsb (bad) xchg jp callq jg pop test callq rcrl or push movabs xchg lret outsl out int pop mov out jo retq (bad) lock fwait sbb mov sahf (bad) ss outsl hlt out in mov push cwtl (bad) mov mov (bad) jmpq jnp (bad) mov add mov rcll pop mov sub mov (bad) int3 mull lret adc int3 fnstenv adc test (bad) js fsts andl (bad) jae fnstcw in jl scas jns adc ror jl mov sbb cld lret (bad) rex.WRXB or mov pop loope incb icebp test xor fildll pop jl jp (bad) or (bad) ficoml fistp sti adcl fcom cmp cmp loope roll rex rex.B iretq ror stos pushq mov adc cwtl rex.XB rex.WB ja out or xor fidiv or (bad) pop (bad) ja jp data16 jmpq push add in xor fcmovne cmp mov cmp fwait push insb (bad) fstl sbb insl pop jns mov and or (bad) jge jp (bad) fbld std imul pop fstpt movabs lods pop jae (bad) jrcxz stos pop popfq sarb push nop retq or xchg pop in imul pop or shr fldenv cmp or sbb (bad) push ja or mov cmpsb rex.RX mov adc rex.WRB xchg sti fisttpl rol or cmp mov neg rex.RXB or js movabs sahf test cmp fistpl cmpsb jnp fcmovne (bad) mov jne (bad) fs imul adc or (bad) or pop mov popfq xor push (bad) xchg and jbe movabs mov repnz leaveq mov pop mov xchg (bad) test sub fistl add jge test int3 cs mov scas pop adc add fistl insl rex.R mov or test gs (bad) jnp test lahf xchg outsl fisttpl rex.X (bad) mov pop iret jno out andl pcmpeqb (bad) movsl adc cmp fdivs es xchg sub ss (bad) repnz rex (bad) pushq popfq imul jnp mov (bad) mov fisttpl rex.RB jb scas ficomp xchg cmp sbb lock (bad) pop (bad) gs sti movabs add (bad) sub gs (bad) rex.R es (bad) xorb divl rorl fsub cmp stos (bad) mov cmp sbb rex.RB frstor adc addl mov xor scas imul sub sbb es jg fistpl mov push sub or cli (bad) callq rex.WX pop jbe stc xor addr32 fistpl (bad) (bad) fwait iret xorl rex.WB es adc rex.W mov or stos outsb rex.XB (bad) imul sub out jp (bad) imul cld push movabs repz fstpt (bad) or icebp test movabs (bad) sbb cmp cmp out jp popfq and rex.WX adc jnp mov (bad) fildl testb fsubl movabs adc out mov lahf fstps cli adc fucomi (bad) lods jno mov mov pushfq in mov pop rex.RB rex.RXB stos ja rex.B push push test in xor xor jbe lret rex.R fucomi lret orl jg fistl (bad) xchg cmp (bad) pop pop or and fwait (bad) mov test rex.RB rex.WRX xor sti cmp mov bsf fisttpl lret addl adc push (bad) mov out jge fistpl loop adc cwtl cmp rex.WR adc sbb stos rex.B xor popfq pop adc and fsubl jle mov sbb mov (bad) ficoml loopne pop (bad) sbb movabs rcr repnz or (bad) out outsl fwait cmpsl clc iret movabs sbb es xor (bad) push outsb callq pushq jp and mov pop sbb movabs adcl (bad) or lret cltd pop loope add lods (bad) faddl pop pushq xor out or pop cltd xorb cmp fprem1 lock movabs (bad) movsl cmp or sti int3 testl out sub lock mov mov cmp add or xlat enterq ds adc sub pop imul mov cmp pop fidivl clc (bad) sbb rex.WRB ror (bad) out ss (bad) insb (bad) cltd jmpq orl push shrb ss (bad) test fwait jae jle xor and fildll mov orl icebp rcrb push movsb imul retq xchg fwait rex.RXB xchg (bad) sub movslq jnp mov add fdivl (bad) cmpsb jns in rex.XB (bad) fwait xchg in add jp fcmovnbe cmp cmp rex.WXB xchg cs gs push (bad) adc cmp (bad) leaveq mov lea mov pop repnz mov imul repz and imul int3 retq nop pop jg rclb hlt lret fwait out rex.R fcmovnbe xor je (bad) xor xchg data16 rcrb mov rex.R pop scas jp rclb mov pop mov (bad) test pop fwait rex.RB fcmovnbe pushq pcmpeqd fstpt ja cwtl jne xchg push repz sbb (bad) xor mov sub fildl movabs movb test add fistpl sbb jnp cs or nop xor fldt lods test gs callq mov pop pop pop es outsb jp addr32 movsl rex.WRB (bad) stos fldt fistpl movabs cltd fcompl cmpl adc fxch mov insl pushfq sbb sbb jl cmp rex.RB jnp fs pop out sbb mov push mov gs mov xchg (bad) (bad) fidivrl (bad) sbb stos push in adc and add cld retq mov fsub (bad) (bad) cmp popq mov pop jl push rex.WB mov (bad) cli rcl push iret add and sbb pop xchg mov imul fdivp movslq jnp xchg jns out clc mov rex.WR ja pop xchg pushq (bad) and rex.X lock std stc out push enterq fnsave mov (bad) rex.RB or and and fwait xlat add movl jl rcrb insl int (bad) (bad) push fnsave retq je (bad) sub add (bad) mov (bad) sub sub fwait in loop sub fildl adc xlat shrb sbb je subl outsb sbb roll (bad) push adc (bad) push xlat and in mov in sbbl adc fdivrs xor leaveq pop adc cld add adc imul and sbb xchg lock adc pushq rex.WXB enterq and repnz jnp xor (bad) (bad) fwait sbb mov mov sbb sub test fcmovb retq bnd (bad) std sbb test out movabs sahf jle imul mov xchg pop or flds fwait loopne xchg iret adcl jle fadds lret fist mov push push rex.B adc sarl clc scas sbb (bad) es ds (bad) cmpsb mov xor clc (bad) outsl insl test push mov retq sbb pop mov xor mov mov (bad) xchg rex.R fld (bad) adc (bad) (bad) leaveq xorl int or cld and rex.WRB fcoms pop sti rex.XB cltd sub (bad) addr32 mov loope movabs fild rex.X mov jns and mov pushq clc push jbe adc divl setp add and stc (bad) fcomip push xor adc cli repnz fwait (bad) (bad) (bad) push sbbb pop sbb icebp in mov pop cmpsl pushfq shll leaveq lods mov hlt mov rex.WRB fwait adc sub xchg and fldt rex.W callq mov xchg pop jmpq test fstpt push sub (bad) sub (bad) (bad) int3 fnsetpm(287 mov (bad) (bad) (bad) adc (bad) push mov cmp fwait test fistpl cmp cltd clc cmpsl jmp jns add pop sub and push mov sbb stos adc (bad) fucomi fsubrp repnz pop xchg push adc xchg mov pop sbb sti add (bad) movabs (bad) xor or xchg push cltd scas mov adc xchg and rex.X cmp jl (bad) pop iret jne data16 fldt cmp fnstcw xchg pop jmpq (bad) rex.X jp (bad) orl mov fwait (bad) pop lahf gs movabs (bad) out jns fcomps rex.B rcll int3 (bad) xchg repz fidiv add xlat fistpl jne (bad) push add xor pop movsb (bad) mov add int cld fs icebp sbb cmp jrcxz out mul (bad) iret (bad) (bad) push and (bad) or mov push push pop pop xor movabs add sub mov cli jnp (bad) jle mov (bad) shlb mov imull lret mov retq out mov fwait std rex.B (bad) pushfq iret pop fwait lods ja xor jnp pop fistpl stos rex.WRXB rex.W fucom and jae adc insl iret and sbb pushq jnp push mov (bad) or or fldt test (bad) repnz cmovb sbb out sahf cmpsl fwait rex.RXB insb fistp fcmovne sub sub ss xor adc jmpq iret and (bad) leaveq mov stos lea andl cmp movl (bad) movslq or rex.RB data16 je out (bad) xlat sub (bad) fildl xchg mov sub int popfq cld (bad) sar rex.B (bad) jnp fcomi lahf test or fcomps adc fdivl cwtl pop pop movsl lods imul fildl xchg sbb loope sbb ja fwait (bad) cmp fwait mov (bad) iret or stos imul in mov (bad) push rex.W loop pop test movslq negb rcr int3 sub rex.WB mov adc mov fwait sub sbb (bad) cmp xchg imul jl mov mov pop rex.WX lret sbb nop fiaddl (bad) jnp rex.WXB rex.B mov jns repz ss cmp (bad) xchg sbbl and rex.R (bad) (bad) clc fbstp out ds (bad) mov mov rex.W and lods cmc stos rex.X mov sbb xchg mov (bad) or int fcomp sti in jae push mov pop imul sbb out xchg fldenv (bad) fistl xchg adc retq (bad) mov gs fisub fwait mov enterq shll (bad) movsb fstpt neg jmpq and jge (bad) sti addr32 not mov (bad) lods fnsetpm(287 adc mov (bad) xchg retq pop cmp in xchg xchg cmc ds frstor (bad) nop test and movsl (bad) stos mov retq int3 icebp xchg scas rex leaveq adc mov rex.WXB rex.RB jns mov (bad) callq jne movsl fldt pop lods cmp push (bad) jae out addb loope movabs mov fstpt (bad) std rex.R sbb mov cltd fstpt enterq cmc movabs mov xchg pop insl fild movabs xchg loope cmpsb pop in pushfq xor cltd outsl cld add sbb (bad) xchg test xchg rorb (bad) adc pop mov xor rex.WB ja rex.WXB fisttpl pop mov adc (bad) data16 xor mov lahf xchg (bad) mov in sbb (bad) adcl adc adc mov lret xchg xchg xor push xor mov fucomi or rex.RX sti fndisi(8087 mov rex.WRXB jo fcmovu movabs jns enterq jle xchg adc jrcxz movslq jns fwait sbb imul pop sbb add test xor rcr test icebp rex.W fcmovne (bad) xchg imul mov fmull or (bad) fistpl std xchg int (bad) rex.WX (bad) jmp sub mov mov jae (bad) outsb rex.R rcrl iret out add pop or pop fwait (bad) sbbl sub rcll sbb loop mov push add ja push test jl stos js cmp mov sbb xlat push pop jg cltd rex.WX mov cli retq iret (bad) jl sub pop mov push sbb loope data16 (bad) retq std cmp movabs es push sbb imul jb (bad) int3 cwtl cltd xor lock pop mov add jle (bad) icebp cmc sbb loope sahf sub xchg retq ds fld mov rcrl jnp mov (bad) adc and callq rex.R (bad) xor clc mov xor (bad) jg (bad) xor test lods xchg or movabs out xor (bad) fcmovnbe lods sub cmp outsl pop cli lea jge (bad) (bad) lret jno fstpt (bad) sarb (bad) ds add mov (bad) mov pcmpgtd rex.X (bad) je push rex.WRX rex.WR ds add cmpsb pop push (bad) mov negl movabs push sar (bad) rex.X stos (bad) testb nop rex.WXB adc jl pop push (bad) pop or xchg imul add sub adc (bad) adc je lahf shl popfq xor sbb (bad) sub movabs jge scas cmp sbb cmc rcrb cmp stc xorl (bad) (bad) mov pop push adc out or sub testb in adc rex.XB (bad) pop cwtl mov repz jae in int sub jne pop (bad) imul cmp jrcxz pop adc mov ja imul movslq cli jmp (bad) (bad) fcomps ficomp cmp mov (bad) sbb push ja mov mov rex.XB mov xchg insb (bad) sub jnp mov ljmp add xor (bad) xchg loope (bad) int3 rex.RB cmpl (bad) and jnp rcl sbb (bad) mov xor sub movsl jb jg rex.RXB fcomi ljmp cwtl xchg shrl rex.RB add xlat pop (bad) (bad) (bad) hlt xchg lret fstps rex.WRB rex.R mov add fstpt rex.RB (bad) pop loopne test (bad) pop gs callq movslq stos (bad) rex.WB rex.W xchg rorb je or cltd (bad) jp sbb fwait cmp lahf lods stos sbb (bad) sub cltd movslq fdivs add rex.XB jo push add sub sbb and mov mov push sbb fbstp sbb xchg fsubs rex.WRXB fcmove xor rex.XB test (bad) (bad) mov imul pop pop pop icebp (bad) pushfq cmp push xchg loop ror (bad) (bad) pop scas rex.RB fbstp pop movabs divb and int3 pop rcrb cmpsb mov jae cli clc (bad) movsl add lahf rex.RXB ds push (bad) pushfq in mov mov (bad) cli loope in mov or sbb (bad) pop (bad) fnstcw clc xor orl xor (bad) outsb adc (bad) (bad) cltd mov pop push adc int repnz mov (bad) (bad) lahf lahf (bad) sbb movslq addr32 pop sbb ds add jp push add mov popfq imul std fs mov (bad) (bad) fmull out sbb loopne movabs rex.WB rex.WR and pop push sub cmp cmpsl movslq pushq lret sub movabs pushq mov callq sbbl sbb flds cmpsl pop xchg popq imul rex.WX jmp pop push (bad) enterq adc fist push lock xor rex.R rex.WRX rex.B and out sbb adc out in rcrb push je pop adc (bad) xchg icebp rorb (bad) and sbb sbb jb adc xchg cltd adc in push (bad) mov or movabs (bad) adcl out sbb popfq lahf mov scas pushq movsl (bad) mov out push (bad) cli frstpm(287 push cmp js nop rex.RXB adc fistpl cmpb insl adc push rex.XB cmpsl (bad) mov cmp and add cmp adc rex.RB adc fwait xchg cmp rex.WB jne rex.WRXB cwtl (bad) pop (bad) lea pushq stos (bad) rex.RB or fisttpl and push or (bad) push imul (bad) (bad) xlat xchg pop imul mov mulb cmp cs mov jnp loop mov sbb rorb fcom cmpsb lret test mov cmp fwait add (bad) clc ss fisttpl out andl (bad) sarb mov decb pop sub (bad) imul sbb sub in mov sbb lock xor mov and pop sarl (bad) fnstsw mov (bad) fwait pop cmpsb jne hlt (bad) sub adc or (bad) popfq imul outsb callq and stos jne (bad) adc cmpsl mov in jb jae sti or jnp pop imul fldt insb jg mov sbbl or rex.XB stos je retq clc movslq push sub or imulb xchg (bad) imul lock xorb cmc movsb scas fisubl notl sub enterq rol fnstsw jno pop (bad) movabs icebp rex.WRB notl fwait mov cmp sti fidiv (bad) mov cmp sub (bad) (bad) mov in (bad) pop jmpq pop rex.W or mov xchg mov rex.WR sub in lret mov pop stos imul (bad) (bad) cmp add cld lods rex.WB rex.WXB gs loopne pop sbb mov adc xchg imul fldt out fldt (bad) out enterq outsb lahf jns push sub insb adc jno fwait sarl pop test ds fcmove ds fldt jg fstpt movsb (bad) (bad) fmull mov loopne loope push fstpt (bad) insb or movabs out adc fstpt (bad) fcomps retq lods xchg or cmp lods xchg movabs (bad) adc imul lea push insb (bad) imul test lcall movabs (bad) mov fistpl (bad) and ss fistpl orl imul fistpl rex.XB sub adc pushq leaveq push mov xor jae xchg (bad) roll jg mov cld jo cmp rex.X test movabs pop cmpsb jp cmp (bad) (bad) jo jmpq repnz hlt (bad) lock imul sbb mov adc cwtl fstps jae iret sbb sub sbb jnp push mov jmpq push pop sub stc sub (bad) pop adc fldt xchg retq and int3 push fistpl ss imul (bad) cmp ja popfq test jns or adc sub sti sbb cmc or je (bad) out and insl ja add push pop scas sbb jnp cmpsl jl (bad) cmp rex.W (bad) icebp (bad) notl adc cmp in (bad) (bad) movsl lret iret push jp rex leaveq adc sti (bad) fimull pop je and nop rex.WB lea scas (bad) movslq push mov xchg jrcxz (bad) jrcxz out pop rex.WXB (bad) mov rcll jg xlat test (bad) cmp (bad) pushq jnp mov push (bad) rex.WB fisttpll (bad) xchg mov (bad) xchg movabs ds xor xchg imul and lea mov sbb bswap ja retq pop sub gs movabs (bad) std add imul rex.WR ficomp cmp imul cmp in jne xchg adc ficoml or push pop (bad) lods lods mov jae mov std (bad) stos fimull mov cld repz test fdivrp and icebp fsub mov jmpq jmp cmpsl pop fiaddl jrcxz fdivrl push hlt and jne jno in pop sbb xchg ficompl in rcrb retq mov (bad) or add (bad) mov xor imul cmp cmp decb retq pop (bad) xchg pop icebp retq or pop movabs pushfq (bad) mov loop negb rcll addr32 cmpsl and (bad) cmc push cwtl (bad) movabs rorl cmp leaveq vpmullw and stos mov movabs push sarb (bad) xor xor and flds mov mov fsts pushfq fbstp test enterq negb pushfq mov popfq sti fwait (bad) rex.X loop movabs adc (bad) mov movslq cli pushfq scas pop (bad) mov add loopne sub and fsin adc mov fsts cld addr32 pop push xlat sub rex.WRB fs add adc cltd mov rcr jb adc mov mov ja jae pop or xchg lods pushq (bad) xchg out mov loope sub je adc (bad) pop xchg int3 std cmp andb xor or (bad) nop cltd adc or xchg in mov pop sub pop and jg sbbb ficoml (bad) loopne fwait xchg movabs negl rex.WRB fsqrt sub out lret add movslq fisubrl cs fcmove xchg mov ss cmp stos insb shrb and push (bad) adc imul mov pop (bad) add (bad) xor jnp adc push (bad) sahf roll gs xchg sti push callq xor movd (bad) jle movabs ss (bad) clc sub (bad) mov or add pop pop (bad) cmc and lock cmp cmpsl rolb (bad) test jp addr32 rex.WRX (bad) (bad) jnp xchg stos xchg ja (bad) pop fstpt loope roll add (bad) rex.WRXB retq lock cmc and stos (bad) out jnp rex.RX test fisttpl or fisubl and movzwl mov mov adc xorl (bad) sbb pop pushq movabs nop in jns jae add xor xor mov jl mov sub sbb rcll ss test sub pop idivb cltq jne lret sbb rex.B ja jns sub xor jp mov (bad) xor (bad) and movabs mov movabs pop adc (bad) retq (bad) rex.WX xchg jg cwtl adc mov push push sub push mov out add pop jo int out jmp retq fwait in out xlat movabs movabs mov rorl xor gs addr32 adc rolb cmpsl (bad) sahf sub rex.X pop (bad) (bad) or and addr32 mov fwait (bad) or or pop loopne out or sbb cmp (bad) rex.XB movabs pushq cmp push cmpsl mov (bad) in push js fsts rex.WRX fisttpl (bad) fwait (bad) retq push jns orl jle,pt pop jbe mov int3 push popfq and jmp (bad) and cmp mov fs fcmovbe or or fcmovne notb retq movsl fcmovne adc pop mov push in movabs (bad) (bad) xchg loopne sub hlt or add lods movsb data16 in mov fldenv jae and rex.WB pop xchg retq retq cmp idivl jge fstpt xchg jmpq rex.WB outsb (bad) mov stc js mov clc movsb mov push pop addr32 pop sub (bad) pop fidiv flds mov scas je add push fsubs (bad) xchg (bad) (bad) or pop ds rcrl pop shrb cs mov pop (bad) es insl lret cltd fidivr movslq xchg add jbe mov cmp (bad) push (bad) mov cwtl cmpsl jmpq ja xchg rex.WB loopne mov retq sub fistpl roll lods add xor mov mov jnp repz (bad) push out (bad) (bad) rex.WXB lods pop mulb icebp adc (bad) fldt push xchg fwait retq mov clc (bad) lea (bad) (bad) fisubrl adc pop xchg xchg pop (bad) jae pop hlt and jl mov lods (bad) incb and mov adc jae (bad) mov or pop (bad) out adc sti rex rex.XB or fldl lret or movsb stos movabs nop pushfq hlt mov (bad) mov fucomi insl sbb movsl scas mov enterq xchg (bad) mov retq decb pop (bad) std add rex.WR insb add mov shl fcmovbe scas mov jne pop xlat retq sarb sub or repz fldt out imul and fldcw insl cmp ss outsl and leaveq popfq rex.RB mov pop xchg out pushq lahf in retq rex.WX xor rex.RXB outsb adc sub lock stc (bad) (bad) loopne xor mov fidivl add out stc push sahf (bad) xchg (bad) rol pushfq (bad) stos enterq loop (bad) leaveq mov xchg (bad) (bad) test xchg and fld out fiaddl popfq std xchg push push xor (bad) xchg fsubrs retq (bad) pop sub iret rex.R cmpsl mov cltd (bad) (bad) (bad) or cltd je xor (bad) jmpq sbb rorb push or (bad) jp (bad) pushq and pop push add push loopne rex.WX rex.RXB fidivrl pop insb jo jp jp (bad) pushq adc mov mov out xor mov mov leaveq push icebp insb jns (bad) (bad) lods fwait pushq mov movabs (bad) mov jp movabs jnp fistpl roll pop sub (bad) or mov lahf (bad) in fistl xchg (bad) cld xor fisttpl pushfq mov pop xchg test lods imul fisttpl mov or (bad) (bad) retq rex.WR rex.WB gs (bad) sahf rex.RB push xor int3 jo nop pop scas test mov mov xchg sub or rex.WB cs sbb and mov mov imul xchg rcrb (bad) (bad) (bad) pop rex.XB movsl fwait rex.RB (bad) (bad) iret (bad) xchg jmpq in rorb popfq lods sbb mov scas jne and movabs (bad) push xchg (bad) nop rcrb cmp mov push lahf (bad) pop out jmpq (bad) mov mov mov (bad) or rex.WXB push sub (bad) sti loop outsl mov or gs jl mov andl outsl pop mov and gs jne movsl clc loop in movabs (bad) enterq fldt rex.WRXB or decl xor mov sahf push std or es xor mov mov pop movabs fldcw fcomps lret add rex.WRXB xor cmp cli sbbl movslq stc loope movabs xchg (bad) (bad) rex.WXB rex.RB mov cmp rex.WR mov (bad) mov (bad) rex.RX rex.RXB test pop cmpsl fistp push cld mov rex.XB rex.XB icebp cmpl imul jno mov data16 adc (bad) icebp fwait stos movsb rex.X (bad) fisttpl in test pop and outsb adc int stc jle (bad) cmp ds shlb (bad) pop xor cld hlt cmpsb pop imul jo add fcmovnb rex.WXB mov (bad) (bad) push jnp movsl mov (bad) (bad) pop xor movsb outsb cmc fwait movslq jmpq addr32 imul mov (bad) sub (bad) (bad) sbb movabs xchg xchg cwtl rex.WX pushq (bad) xlat mov fist test or pop rex.WXB pop or shrd ficompl (bad) pop std int3 stos push add jae (bad) sbb retq (bad) (bad) rex.R mov in loope jge mov (bad) out pop cmp outsb loop fildl pushq add push movabs (bad) movslq in jo or int icebp sub nop xchg mov (bad) pop (bad) out fsubs (bad) fisttpl adc (bad) (bad) jg insl fwait test mov pushq and mov gs hlt mov mov gs pop movsl insb cmp (bad) mov fucomi rex.XB add outsl jb and mov mov imul shlb jb sub enterq sbb xlat mov or jl sub and out add mov lret mov sti lock adc test (bad) cld xlat ja jl (bad) sti lea movabs or mov in pop fwait push jbe sti jnp (bad) popfq jp addr32 push cwtl adcl xchg fptan test xchg xchg fiaddl jg rex.WRX sub mov cmp jns jno imul fldl iret xchg (bad) iret pop rex.RXB jae,pn cmp cli cmp mov loopne xchg rex.WRX fsts cmp (bad) sub jae je leaveq (bad) cltd pop out xchg (bad) rcrl mulb (bad) lods movsb rex.XB scas (bad) (bad) addr32 cltd ss jle add jb sbb mov rex.WRXB xlat jle scas xchg jrcxz pop xchg sub push xchg jb (bad) or out sahf movabs stc int jrcxz or (bad) js push cli sub out and xchg rex.WRX pop pushq cmpsb or pop sub in movabs pop rcll push push adc cmp loop jrcxz scas push xchg je std movsb jp (bad) fisttp (bad) jl mov addr32 (bad) sbb adc enterq sub sbb addr32 (bad) lret cmpsl push leaveq (bad) enterq (bad) xor rex.WB movsl pushfq sbb xchg (bad) xor xchg rex.WR (bad) adc sbb xor xor (bad) mov fcoms pop fwait (bad) lock repz rex addr32 lahf (bad) xchg test loopne pushfq pop cmp out jg rorl sbbl adc jno gs xchg mov or rex.WB lock ficom ja sarl (bad) fs rex.WX ss popfq imul adc (bad) jo out jns js cltd jg xor rex.XB pop rex.WX sarl sbb (bad) fiaddl and sbb test and out (bad) in loope movslq mov cmp scas mov movsb ja (bad) lret sub leaveq in rorb leaveq rex.WB rex (bad) jge (bad) dec push fwait lods out jns fwait or cmpsl mov je lahf in xchg mov (bad) cwtl mov jg or rex.XB xor leaveq cmpxchg xlat jp sbb rex.WX movslq cmpsb mov ss pop stos mov fmuls xor loopne xchg jne adcb movabs cltd in fsubs fstpt xchg (bad) insl (bad) pop fndisi(8087 adc add jg jrcxz retq rex.RX rex.WR pop (bad) (bad) rex.WRB cmp add rex.WB (bad) jl stos cltd mov (bad) ds or in int jl (bad) (bad) imul insl pop mov add push loop clc pop (bad) rclb fidivrl rex.B (bad) (bad) addl fs (bad) stc and fistpl loop mov push movslq (bad) jle mov shrl and mov (bad) mov or (bad) stos jp cmp repz and movabs xor mov sbb movabs repz fistl mov sbb (bad) test xchg cmp xchg and (bad) jbe adc pushfq test sahf ss insl pop xchg (bad) (bad) lret sbb pop add add mov jmpq mov or jae movsb jae (bad) stc (bad) push push mov rex.WRB rex.X lock fisttpll jno stos cwtl mov mov adc mov (bad) loop or lret fwait push pop cmp mov repnz jmpq mov js xlat cs movabs (bad) lea sbb (bad) push testb lret mov add or retq out testb rex.XB xor push add xor rex.W out and nop pop movabs pop pop xor add (bad) rex.RX (bad) (bad) fistl pushq rex.X xor rex.WRXB mov data16 pop subl (bad) fistl rorl mov or adc mov mov test (bad) or out cmp fisub adc add fwait mov cmpsb clc sahf int3 mov cmp sbb movabs pop fwait out (bad) cwtl rcrb cmp xchg addr32 pushfq hlt (bad) in (bad) or test (bad) mov sub fwait push adc and pop jo fwait (bad) pop (bad) mov rex.WXB mov iret loope lret pop xchg scas ss (bad) mov jrcxz popfq repz cmp rex rex.WR (bad) adc mov movabs iret stc mov (bad) lock in cmp pop cmp lret xchg (bad) (bad) rex.R rex.WXB mov (bad) popfq sbb (bad) xchg mov movabs enterq mov std pop test xor notb pop cs insb mov rex.RXB fistl fidivl (bad) jo fwait or jmpq repz sti mov movabs cmp sbb and pop cmp push fistl jbe xchg rex.W fidivrl test cmp (bad) rex.B mov mov rex.WRB cwtl fldt adc outsb jg in pop mov or xor in adc or add pop rex.R jbe push xchg pop rex.XB fistpl xlat pushq push add sbb (bad) lock je outsl xchg jns rex.RXB loopne pushfq movslq or mov retq xor rex.XB (bad) fldcw fisttpl imul notb push (bad) imul cmp fistl cmpsb rcrb repnz jns int push mov jb (bad) movabs add stos retq xor fnsetpm(287 sub pand fs stos incb pop xchg loope divb pop and sbbl (bad) retq pop push ds shrb (bad) pop stos pushq neg movsb or out leaveq adc (bad) pop popfq lods (bad) mov pop add xchg sbb rex (bad) pushq cli gs lea loop jg push mov pop mov or int3 and xchg cmpsb scas pop test leaveq mov (bad) stos pop movabs in scas fisttpl repz shrl gs mov (bad) ds test and stos pop mov cmc sub jnp mov add mov outsb fdivl jae push (bad) cmp shr xchg enterq mov xchg mov mov mov rcrb gs pop int hlt movsl jge fiaddl iret imull lea (bad) xchg lret fst test (bad) shrl pop loopne fldt enterq lods andl rex.RXB fbld iret rcll add (bad) fcom pop jmp rex.WR xor rex.R rex.RXB (bad) int retq in in jne jbe movabs pop fisttpl shll (bad) iret (bad) mov stc mov scas pushq cpuid (bad) xchg pop cmp idivb jrcxz popfq vorps jp (bad) out (bad) mov rex.W push mov fwait mov in iret icebp or rcll sahf or leaveq je fmul xor push jrcxz (bad) (bad) sub repz sub adc (bad) nop pop xorl mov adc (bad) rex.R mov ss rex xor fcmovnbe rex.RX adc (bad) mov rex.WR (bad) jae fnstenv xchg cmp data16 cmp icebp movabs sbb movsb (bad) xor adc push insl stos fnclex lahf or cmpsl adc add imul shrb fmull minps (bad) add jmpq (bad) insl loope and push pop lret or mov (bad) pop mov movabs pop sahf xchg rex.XB cwtl mov je out gs and pop in out push (bad) in retq pop int loopne test xor mov movabs movabs fbstp enterq lods fcmovnu or callq movabs rex.WB sbb cmp xor xchg rex.RB (bad) data16 rex.RX (bad) retq iret pop xchg fisttpl jl xor rex push mov mov mov push sub sub and popfq lock mov push adc push imul jl pop pop pop imul jnp jb (bad) xor (bad) fnclex mov sub rex.WR push adc mov pop pop xchg (bad) lret sahf movabs fstpt adc (bad) mov pop xchg sub (bad) clc rex.WRXB jp fcmovnbe in add ror pop (bad) (bad) cli pushfq or mov callq push (bad) leaveq pop pop (bad) movabs add lcall jne and push imul fwait movslq mov push pop add or addr32 lods add (bad) mov jg scas out ss decb (bad) mov data16 add out and ss xchg (bad) leaveq cmp add add add (bad) pop scas adc (bad) cli (bad) pop (bad) add icebp imul and rex.WB fsubrl mov jrcxz pop add fisttpl (bad) cltd (bad) adc add pop fldt std xchg rex.WR fisttpl (bad) rex.RB addr32 (bad) pop imul pop jae mov sbb in mov rex.R sub jns and mov ja rex.WXB xor push lea callq and xor sub mov pop sarb or sub jae pop or (bad) rex.WRB in mov movabs lahf add fisttpl in stos outsb (bad) divb jae sti movswl fcmovnu retq sahf rex.X (bad) pop roll or fistl movabs sub or retq sbb mov (bad) sub rex.RB fwait xchg pushq xor imul mov leaveq sbb sub xchg pop sbb vxorpd adc loope mov cmp fstpl scas jge xchg cmp (bad) ss out adc movabs cmp movabs fcoms cmc (bad) fistpll in pop (bad) lods fsts sbb xor notl mov adc push sbb out (bad) mov (bad) cmp clc mov loope fbstp or pop sbb iret add (bad) jae stos rex add outsb xlat ficoml add pop clc in jg rex.X xchg sbb (bad) jnp jp jrcxz (bad) fdivs (bad) outsb ror or rex.WRX rex.WR add sub int fild pop and out loope movabs in mov rex.R rex.WXB lret cmp mov loopne out adc lea pop rex.RX rex.RB cmpsb add adc out push lret iret jg (bad) adc mov loopne imul gs (bad) scas jle pushfq xlat mov rex.RXB jae rex.WB (bad) xchg rorb iret lods sbb (bad) (bad) sbb cmp adc loop xlat cmpsl icebp pop push xchg pop or sbb lods int and gs icebp icebp ficoml xchg sbb scas fidiv and (bad) stos pop imul xchg movsb jp std fsubp and xor jb cmp (bad) jmpq ja (bad) je sti mov mov retq in movslq mul push (bad) xchg fisub scas out cmp pop repnz adc data16 shr addr32 cmp (bad) pop rex.R leaveq retq testb mov (bad) in (bad) and jrcxz xor loop imul rex.WB jmpq mov gs ds mov sub pop (bad) in rcl (bad) rex.WR retq rex.WX (bad) fadd movnti (bad) mov jnp pop and sub sbb rex.WRB (bad) (bad) (bad) jnp xor (bad) mov pop add fwait ror jl rex.RB rex.WRX imul repnz imul lock fistp movabs mov or or movslq sub movabs lret rex.RB rcrl data16 stc cwtl push (bad) fs outsb or lahf lods mov cld imul (bad) orl push popfq es jg jne cmp pop mov or rex.WB fs mov or xchg rex fldt (bad) or ror callq fistpl pop clc push movabs mov (bad) rol mov add lods adc fistpl jno and popfq lahf (bad) enterq fistl movslq fildl or addr32 (bad) or sti fmull mov rex.W rex.WRB fwait movslq in rex.B out pop out sbb (bad) (bad) pop push mov mov rex.X xchg cmp jnp imul sub movsb rcrl xor fcmovu xchg mov movabs cmp fcomp stc (bad) xchg add sub sarl insl rex.XB movabs or pop xor stc sub cmp (bad) clc (bad) mov jae (bad) mov test fstpt orl lea rex.WRXB popfq mov mov fwait sarb mov test xor out push fwait (bad) int mov add push js retq jnp pop popq pop (bad) rex.WRB xor movsl fidivr or rorb imul mov scas xor sub xlat pop (bad) (bad) mov and mov rex.WR mov loope mov orl pushfq (bad) (bad) lret mov popfq stos fcomi jg lods xchg (bad) push pop fisttpl push fild (bad) (bad) retq (bad) cmp add mov pop fstpl jno xchg test jnp pop sub jg pop jrcxz std mov outsl mov mov in xor jns pop nop faddl (bad) rex.RXB rex jle or adc push rex.RXB fadds adc movabs cli in (bad) and gs cmp (bad) rex.WRB rex xchg rex.XB fldt movabs fldt rex.RXB pop in leaveq xor sbb std add fldt push cs fwait cli or jb or (bad) (bad) cmp adc shrl cmp mov mov xchg sarb mov add jne or sub sbb movslq loopne fstl sub cmpsl fistl adc (bad) pop rex.R mov (bad) test loop and jae (bad) loope rex rex.WX rex.WRX xchg pushq jne (bad) cmpb loope xlat jbe fstpt or or rex.RB pop in and cltd fstpt sub pushq in fwait cmp rex.WX icebp add (bad) test pushq subl movsl stc movabs (bad) imul movabs add shrl cmp (bad) (bad) fisttpl clc sub mov test nop test rex.W lock jno (bad) rex.WB jnp rex.R adc adc sub mov stos fcmovnu scas mov lret fistl sub jns fiadd leaveq rorl out stos mov xchg std adc push xlat out movslq roll rex.RX rex.B lahf ss sti mov cmpxchg movabs movabs iret (bad) rex.X cwtl in mov stos mov popfq (bad) fistl xchg (bad) (bad) xchg mov fstpt lret sahf jne mov out xor xor sub callq xor in and fcmovb cmpsl movsl fs frstor ss push sbb test mov push xchg rex.WRXB icebp and (bad) ja cmpl lods cli (bad) fneni(8087 and (bad) mov fildl adc (bad) ds movabs pop retq retq rcll push loop (bad) lret (bad) add insb mov pop (bad) (bad) pushfq or push jae mov sbb imul sahf enterq sbb fisttpl jns and (bad) pop (bad) lea (bad) stos (bad) icebp pop pushq lea sub sbb xchg mov mov and retq test rex.RX cmp (bad) repz jmpq mov movslq lods (bad) jrcxz fnstcw (bad) rex.W rex.XB imul adc fistpl xchg (bad) test (bad) jbe leaveq cwtl insb xchg (bad) rex.RXB out xor stos cmp xor rolb (bad) and mov js shrw jge (bad) cmovle (bad) ss rex.WR rex.RX in xchg mov sbb push rex.R or (bad) cli cmc cmp rex.XB (bad) rex.X sub in pop mov pop lea mov sahf outsl lret rex.WRXB fsts (bad) in xchg (bad) xchg jae (bad) jge fldt popfq xchg loope pop test jo (bad) hlt rex out (bad) lock (bad) cmc and push or adc mov (bad) pop rex.WXB outsb pop clc scas ss scas xor lret ja pop or ss loopne add jl cmp ss push js in rex.W pop push fcmovbe lea add cld xchg cld rex.WRX cli sub push pop cld pop mov int3 (bad) fist xchg pushq fsubs data16 add shl (bad) movabs fsubrl loopne cmp xlat mov callq mov fadd push jns (bad) add sub mov jrcxz loope addr32 xchg xlat (bad) lahf and fildl lret fisttpl cmp loop sti adc fistpl retq add (bad) xadd (bad) int3 (bad) (bad) fistpl (bad) rex.R lea rex.WRX (bad) int lods rex.WXB xchg mull mov fstpt out in mov hlt fstpt iret add fcomi outsl push add cmp adc test ss jns negl mov pop xor iret rex.WRXB jnp mov std test sub mov loope int cmp (bad) rcl or cmp sti pop xor mov lock (bad) cmc jne sub rex.WRB sahf es xor cs xchg test adc fcmovnbe hlt sbb jns stos sub ficompl andl (bad) icebp jnp rex rex.RXB rex.XB mov divl imul mov movabs fildll int3 (bad) fildl rex.WRX iret (bad) (bad) in mov fisubrl stos rol in sbb fistpl rorb pop mov stc xchg stos loope iret je mov (bad) imul add fimul fwait (bad) fcmovnb (bad) jo andl fisttpl jnp lods shll sbb rcrb icebp fidiv movslq and mov imul add fadds rorl jns scas clc fist adcl sarb (bad) push (bad) ja fildl push or sbb or cltd loop cmp pop (bad) xor fcomi xchg rcl xor pop xchg hlt movb mov fsts rex.RX (bad) add xchg cmpsl pop movabs mov mov leaveq int3 jno rolb push jl mov or shrb pop fistpl callq sti adc mov idiv push jnp std in push fstp (bad) ss (bad) (bad) pop (bad) bnd (bad) callq lods jnp fsubs xchg cmp cmpsb add pop repnz jo cmp cld (bad) adc (bad) xor (bad) fldt (bad) fist xor fistl (bad) outsb popq pop lods or jl mov loope sbb imul in cmpsb movabs pop mov in sbb stos sbb repz out jge je and jp xorb fcmove xchg cmp clc pop (bad) lods mov xor or (bad) jb decb mov lea (bad) movabs sub fistl cmp scas rex.WX jbe rex.X sar negl nop (bad) (bad) int3 or movabs push mov mov rex.RXB jae mov pop rex.RX rex.X movabs sub (bad) pop xchg (bad) mov cli int3 pop xlat fwait mov xor rorl rclb push (bad) xchg (bad) (bad) fwait ds cmp and cmpsl (bad) fcmovu sub test stc int ss cli test cmp retq sbb mov pop rex.RXB rex.WB (bad) mov xor push push (bad) clc jnp in cld scas rex.RB movabs (bad) mov mov mov fistpl push pop and int3 movabs (bad) mov jg rex.WRXB xchg pop mov shll scas movslq ficomp xor fwait or nop shll jg fcomp mov (bad) fstpt mov loop out add cli fild (bad) popfq rcr pop sub mov stos sbb xchg mov lods adc scas je faddl out fucomi cmp sub fisttpl pop fldt adc (bad) movabs repnz lock imul rex.WX or cmpsl callq imulb mov (bad) rex.RXB and (bad) jbe ds clc pcmpgtd sbb jrcxz mov ror push fldt jmpq cmp sbb ss jle fwait add rex.R pushfq mov pop and cli adc fisttpll add add xor (bad) int (bad) lock imul sbb xchg fistl movabs add fcmovnu in adc sahf pop fistl mov out jnp mov pop or rex.XB mov mov mov mov rex xchg push and fisttpl rex.X (bad) sub jmpq jnp fistpl rex.WRB push and (bad) fcomi mov xor outsb fstpt lock xchg jo mov add mov in rex.RXB pop imul push rex.WR pop push iret xor imul mov pop add xlat mov stc jnp pushq fcmovnu or push (bad) pop xor (bad) push mov fstpt rex.WRXB insl pop (bad) mov negl fwait cmp xor xor xor (bad) pop (bad) loopne js stos shrl mov stc pop imul cmp jns addr32 (bad) xor fldcw movabs sub fldt xchg movabs push xchg pop mov loopne mov test test (bad) lods fldcw jle pop scas ds retq sub xchg test sub or jge jbe pop pushfq (bad) cltd or stos push fistl insb sbb cmp movsb rolb mov jrcxz add (bad) popfq mov out jmp sbb fistl xor sarl cmpsb mov fisttpl and or and pop (bad) cmp (bad) xchg icebp stos movslq (bad) jp cmpsl iret insb jmpq (bad) callq xchg test mov incq leaveq fsubrl fildl add cmp repz mov rex.WRB out rex.WRXB jrcxz add lret push mov adc fildl sbb xchg mulb (bad) and rol xor rex.WRX int jo mov std xorl mov (bad) stos (bad) lock (bad) fwait addl int scas mov sub retq (bad) loope (bad) and pop jrcxz movslq repz pop jae insb rex (bad) movsb mov and fcompl pop fneni(8087 jo (bad) out imul mov (bad) or in xchg pop callq push mov lods fistpl (bad) clc mov xor push add gs xchg xchg cs fildl push loope (bad) cmp cmp (bad) movsb je fisubrl movabs push rcll jnp jbe mov jb xchg test push pop mov (bad) add adc or mov mov lock jmpq sub retq iret mov xchg xchg cmp rex.WRXB ja pop (bad) rcr cmp (bad) adc xchg fadds xor nop or imul (bad) (bad) and fisub push jnp std in jo cmp jnp and jle (bad) mov (bad) (bad) mov push xchg mov mov js fwait pop or jrcxz xchg outsl movabs adc rex.WXB push mov jne (bad) push mov callq add fwait mov rex.WRX sbbb adc and fwait lods out sahf repz pop test mov cli cmp callq pop xchg adc addr32 adc adc xor adc (bad) (bad) and fdivrs idiv (bad) mov xor jmpq xchg rex.RXB mov shll jmp movabs jns rcrl lret movabs fcomi test loop or adc push sbb pop leaveq pop jl fildl int3 (bad) push mov push fildl jl movsl (bad) push adc mov std rex.W rex.XB (bad) insl icebp js fistpl movsl movabs pushfq in mov fstpt (bad) xor sbb jne jnp cs loop xor pop xchg xchg es sub movsb xchg fadd rex.RXB es jns (bad) mov enterq fwait or loop in iret pop push push or fdivrs pop add sbb (bad) jnp cmc mov jnp xchg sub xor push movabs mov (bad) test cltd fninit fcompl pop addr32 test sub hlt fwait push loop (bad) in (bad) movslq repz xor pushq fcmovnb test pop lock jp pop clc loope (bad) sbb addr32 repnz (bad) pop (bad) stc sbb fistl rex.WRB cmp jmp fidivl stos cld add xlat stos push lret add push xor rex.RX fistl push xchg jno rex.XB scas scas incb (bad) pop push xchg movsb popfq cmp movabs stc pop pop (bad) mov add fistl and mov xchg mov fistpl lret (bad) pop and fildll xor push lret pop popfq (bad) cli mov lods (bad) addr32 pushq mov and push rex.WR and fstpt cld fs hlt scas (bad) (bad) enterq pop (bad) cltd xchg jnp in cmpl sub xor jl rex fwait rex.X (bad) mov (bad) es rcr repnz and sub jmpq mov mov adc int3 in mov test icebp cs push pop rclb ds xchg scas mov push movabs (bad) xor movabs cli jnp callq repnz (bad) fisttpl (bad) mov rcr stos nop subl cmp rex.RX (bad) sbb fildll rex.WX popfq movabs movabs pop callq (bad) (bad) add insb fistl rex.W sub ds push mov (bad) (bad) movabs imul cmp rorb cs rclb pushfq movslq rex.WRX stos (bad) sub mov (bad) hlt rex.WRB (bad) stos push lock sbb mov (bad) pushq movabs rex.WR and cld sti cmpsb or push insb retq jns cmp nop fldt cwtl sbb lahf (bad) rcr mov repnz loop movslq xchg fidivrl xor xchg insl sbb jae push add (bad) xlat (bad) fistpl (bad) roll rex.WRB jle rex.B rex.R mov rex.R outsb jo pop mov fwait cmp mov (bad) lea cmc mov mov mov fcmovnu adc lret (bad) pop jnp imul retq pop fisubl cltd jae (bad) (bad) rex.WB lahf mov rolb or in int3 (bad) imul pop sbb fiaddl jnp rex.WX pop insb rcrb sbb cmp sbb testl sbb rcr (bad) std iret lret data16 jg invd mov cmp movslq sub out icebp nop rex.WRB (bad) (bad) jae in iret sbb and loop push xor (bad) mov mov push push (bad) cmpsb xchg fisttpl rex.WRX rcrb hlt cmp add ds pushq (bad) xchg out lods rex.RXB fstpt rex.WB xor (bad) jnp (bad) (bad) movsb push movslq out in mov xor fildll rex.W xor jnp loopne (bad) es jge rex.RB lods cltd (bad) pop cmp scas push lock jmp fmul testl cmpsl or (bad) jg (bad) mov mov (bad) rex.WRB lret outsb pop std (bad) fistpl pushq lea iret rex rex.WRB rex.X cmp fmul mov rex.R adc xor mov mov fdivrl jnp fucom rex.XB std stc movslq xor sbb retq sub rex outsl jge (bad) or clc fcmovnbe mov (bad) int and fwait imul fsubrp jge (bad) cwtl out fidivl (bad) xchg (bad) int3 sub fildl (bad) rex (bad) in add rex.R jle jno (bad) xor imul loopne jl pop lock sbb cltd lret scas out out rex.WB loopne gs cli (bad) push mov (bad) mov fsubs out ss mov (bad) sbb movabs mov push js add es rex.W jrcxz,pn mov push in fstps rex.WB movabs adc fsubrl pop (bad) rex.W mov es lahf es (bad) mov (bad) (bad) mov pop enterq idivl pushq adc (bad) std rex.R sub add notl test in xchg jne jne or rex.RX pop pushq pop jno (bad) rex.WR xchg jbe or fistl in out in mov sbb pop clc popfq movabs sbb (bad) xor add xchg pop (bad) pop xor imul push mov movslq xchg mov add push cs sub jb mov xchg fldcw in xchg xchg cmp jae mov jp rex.XB adc jle jnp adc (bad) loope mov shlb (bad) fsub stos lods cmp retq and pop add lods (bad) mov clc mov (bad) pop (bad) rol jrcxz rex.WXB sbb insl data16 push pop hlt (bad) (bad) jns cwtl adc clc xor test cli fistl jrcxz icebp or or stc rex add mov push push mov (bad) out jns jns and xchg adc rex.XB cld (bad) jmpq sbb (bad) pop retq mov (bad) (bad) flds mov popfq (bad) add scas movsb lods sub mov (bad) stc pop (bad) lods adc (bad) (bad) imul rex.WX jge fadds (bad) (bad) rex.WRX rex.RXB rex loop (bad) jno rex.X rex.WR (bad) scas hlt pushq mov (bad) popfq loopne (bad) pop add jp cmp (bad) clc rex.WB pop adc rex fisttpl outsb test cmp and push and (bad) rex.RXB rex.RB (bad) (bad) rex.RB int (bad) fisttpl ss movslq sub xchg fs and (bad) lods (bad) (bad) pop jnp xor pushq fldt loop adc movb xor fcoms fstl or pop xor lods add mov add xchg callq rex.WRB (bad) pop xor (bad) imul (bad) jns cli push push sbb pushq out or fwait mov xor sbb xchg push fldenv pop lret and jae clc fisubl push rex.WXB ss xor sub not andl rcrb insl jrcxz popfq pop (bad) sbb loop or cmp xor and rex.WRX jp cmp xor leaveq push retq (bad) pop rex.R lret fidiv jb stos rex.XB add cmp adc mov test rex.W rex.X sbb jb xor repz xchg (bad) leaveq (bad) cmp rcr ficompl sub sub adc fmuls rex.RB and rclb ss and popfq xchg mov jrcxz xchg cltd idivl cmp outsl ja loop fistl adc xchg repz ss add leaveq fsubp fistpll stos pop rex rex.WB lret push sbb movabs rcrb rex.WX rex.RXB (bad) adc jns int3 or (bad) (bad) xchg iret popfq (bad) fwait orl lret fstpt xlat jnp pop cmpsb outsb movabs (bad) and and divl (bad) mov sbb fstpt rex.X pop rex.WX adc sarb loope and pushq pop (bad) and movabs mov repz cmpsl repnz (bad) lahf sub rex.R pop xchg hlt addr32 cmp (bad) imul or (bad) rex.R (bad) lods cmp rex.RX or (bad) stos movabs scas test fnclex (bad) rex.WRXB add jae rex.WRX rex.X retq test (bad) imul fistl rex.RB mov icebp subb stos nop cmp (bad) fbld movabs rex.RXB pop and sti enterq mov xor out callq mov push fisttpl and and addr32 (bad) addr32 leaveq fsubrs addr32 lahf mov fisubr cmpsb je (bad) cmp rex.WRX popfq int3 sbb stos loope rol test or out pop pop pushfq and sbbb push jl (bad) insl (bad) stos rorb out xor (bad) test (bad) sub stc (bad) sbb adc rex.XB pop or push out retq push rex.WXB rolb xchg frstor rex.WR test (bad) (bad) (bad) cltd fwait pop (bad) mov testl push loopne (bad) rex.RXB js xchg add addr32 xor iretq (bad) rex.WB rex.WR rcl jmpq scas out and mov xchg sub xlat mov outsb std movsl (bad) (bad) callq rex in cmp rorl rex.W pushq sbb test rex.WR ss out scas (bad) xchg jbe xor push add sub mov add or mov mov movsl je mov in fcomps outsl adcl pushq jne jl (bad) mov (bad) xchg xchg jp fwait lret stos xor mov cltd xchg xchg (bad) mov cmp pushq add mov jb hlt out (bad) in jmpq gs stos scas (bad) (bad) pop rex.RXB data16 fwait sub iret in (bad) fcmovne (bad) (bad) pop jp test push and fcompl (bad) mov cmp push cld repz cmp int3 pushq (bad) cld pop xchg (bad) cmp rex.W pop and pop sub cmp stos stc mov rol pushq and sbb (bad) cmc test (bad) pushq cmp mov lret and loop imul cltd sbb pushq or je jae pop out cmp fiadd (bad) (bad) repnz pushfq ljmp adc sbbl (bad) adc (bad) mov rex fwait rex.WR mov mov pop or loope push sub lret fisttpl callq or or (bad) sub push fistl mov movabs repz pop test cmp add (bad) shll leaveq and fidivl in sbb stos push or fstpt lea xor scas rex.RB rex.WR mov sbb mov sbb lahf jno lret or (bad) out rex.WRX mov (bad) ss icebp popfq sti fidivrl sbb movabs pop jo fimull xchg cmpsb test test callq (bad) sbb (bad) cs jl jnp xchg cwtl and (bad) cmp cmp mov (bad) jmp sub out jp cmp stc sub jnp mov or adc xchg jne fcmovu out loope mov int3 movabs push rex.WRXB addr32 pop (bad) jbe insl outsb fildl cmp hlt lret pop pop (bad) sti orl imul rex.RXB (bad) (bad) mov jno (bad) xor gs (bad) mov cmp (bad) fucomi imul cmp sbb xor mov mov (bad) mov pop outsb xchg push js pop pop cmp scas mov loop jae (bad) rex.B sahf fnstsw xor fildl mov pop iret rol (bad) jae xchg cmp xor mov (bad) sarb or rex.RX shrb jo and xchg sub or push jl mov fucom mov push (bad) adc std sub pop imul (bad) mov in xor mov and adc rex.RX out (bad) xchg cmp jmp movsl sarb test test (bad) out fistpl push int (bad) cltd pop jmp (bad) (bad) fstpt rcrl adc sahf (bad) rex.WR push js cli pop rex.X mov (bad) mov imul fisttpl sbb fwait insl push cmpsb movabs ja adc fldt push (bad) mov int jle enterq rcr pop sub movslq fwait cmp outsl jle pop sbb fwait loop,pn mov insb loope push movabs movsl cld (bad) (bad) cmpsl adc lahf jae (bad) push adc mov push addr32 xor sarb xchg sub sbb in pushfq repnz ror add (bad) int3 or je (bad) push cwtl mov cmp (bad) clc shrl xchg ja jbe addr32 rex.RB (bad) (bad) rex.WB rex.RB cs (bad) jle lahf pop (bad) add or jl roll movsb mov push push adc sbb pop callq push js rex.W xor rex.WX add callq icebp fildll add imul xor push push pop nop rex.XB adc fwait retq (bad) adc rcl rex.W rex.XB push (bad) (bad) push loop (bad) (bad) (bad) lret sub stos (bad) fidiv lods (bad) rex.WB leaveq fnstcw imul stc retq xchg fimull xor icebp retq mov (bad) xchg push and (bad) pop and or mov popfq mov iret es cwtl (bad) xor mov nop jl (bad) push (bad) jle push pop rex.WRX jle mov jbe mov cmp orl lods jae rex.RB mov fimul (bad) adc cwtl (bad) cmp xchg iret cltd pop mov cmpsl pushfq pop (bad) (bad) out (bad) xchg pop data16 fscale push loope cmp sbb push (bad) (bad) pop or loopne loop rex.RXB rex.RB (bad) (bad) pop xchg test lea pop xor jmpq xchg scas pushq mov adc sub rex.WR mov sbb addr32 movslq sbb (bad) cmp (bad) (bad) sbbl movabs mov mov sub sarb outsb rex.X cmc rclb mov adc fistpl movslq test mov leaveq cmp movsb (bad) movslq pop fisttp fisttpl jmp sub shrb rcr fwait adc (bad) mov pop ficom ds fisttpl push sti sbb fidivrl pop int3 mov mov pop fisttpl adc (bad) test mov (bad) leaveq cmp (bad) fildl xchg iret cmpsl out rex.WX (bad) rex.WXB test mov and stos ja adc retq push mov (bad) rex.WR mov in push jnp sbb xor lods mov (bad) (bad) fistl scas or xchg ja fisttpl insl jnp jne (bad) fistl or xchg (bad) sub xlat mov es stc fcmovnu and xchg mov leaveq scas repz jno rex.WR ds mov outsl push retq movabs lret mov (bad) or fstpt cmp pushq or outsb pushfq add sbb (bad) in cs adc in sahf xor imul xchg (bad) mov mov adc retq jnp js fcmovnbe jns cs adc rex.WR and rcl fcmovnu cld int out mov (bad) add pop (bad) movabs mov xchg xor rex.RX xchg sbb fimull add (bad) mov test (bad) in shlb fistpl (bad) out ja fistpll (bad) fwait out jrcxz xor cmc add push mov push ficom pop repz or imul mov icebp and rex movslq and add mov mov jo (bad) jb pushq (bad) rolb out int ja negb fldcw ficoml xor ljmp rex.XB sub adc scas data16 pop imul cmp retq (bad) int rex.WB adc adc repnz sub rex stc xchg and and xchg (bad) jae xchg fistl fstpt rex.WB (bad) sub (bad) insb pand xchg cmp (bad) sahf add fwait mov out rorb xchg mov xchg in jl sbb jns rex.WR jne add popfq insl fcmovnbe mov jg xlat cmpsb lahf fld lods xchg mov int3 add fldt imul mov hlt push fidiv outsb imul cmpsb mov rex.WR mov cmpsl sbb (bad) out xchg (bad) movabs data16 adc sahf fidivr int rex.R and xchg fistl stos rex.W fs pop mov stc (bad) or jb jne mov jp rex.WXB lahf xor insb jge xor mov mov fldt (bad) enterq rex.W stos pop sbb lret rex.B incb repz (bad) or and jns (bad) cmpsb mov sbb in ror jg rex.W rex.RX ficompl (bad) jne adc rex.RXB or push sarl xor (bad) mov or cmc push callq sub pop fincstp sti fidivrl shlb jle or lret movsb pop movabs jmpq xchg xor sub pop movsl in pop sub mov xchg or sbb mov sbb (bad) xchg movsb mov ffreep push repnz jle pop fwait sbb pop pushq cwtl mov (bad) mov movabs pushfq (bad) js cltd xor ljmp imul in adc sbb jae fstpt cmp rex.WXB adc popfq sbb imull stos push adc cmpsl or test fisubrl sbb fild rex.RXB lock fst sbb icebp subb movabs (bad) scas adc (bad) jno pop mov pop xor (bad) rex.RXB movabs or adc (bad) push (bad) (bad) cmpsl icebp fbstp (bad) pop sarb test (bad) hlt fisubrl push (bad) clc js insb push int icebp xchg movabs (bad) xlat xchg movsb cmp movslq movabs fwait (bad) mov data16 pop js jne sbb rex.WXB rex.W fucomi in jg mov fildl (bad) imul jne cmp (bad) mov sub sbb movabs pop imul jbe add (bad) (bad) (bad) lods (bad) lret xor shrb push rex.WR rcr jrcxz sub rex.WX roll iret nop fucomi (bad) rex.WXB jle xchg or cmc stos push popq out (bad) sarl pop movabs mov callq scas data16 xor retq cmpsl adc mov cli (bad) outsl sub cmpsb (bad) sbb mov pop rex.WXB adc mov sbbl cmpsl (bad) sub rex.WRXB (bad) test scas clc popfq retq pop cmp repnz mov pop push pop (bad) jle adc (bad) (bad) fistpl (bad) push pop in adc sbbl addr32 (bad) (bad) outsb add pop (bad) (bad) test rex.WRX rex.WX jmp mov (bad) push xchg (bad) and xor out xchg mov in mov xor pushq adcl fwait retq out sbb rex.RX (bad) cld stos sub movslq xchg (bad) pop add lods leaveq movabs (bad) testl or insb insb or ja retq (bad) xchg or cltd cmp cltd mov popfq jl adc pop rex.WR rex.WB pop fsubrl pop andb push jo cltd cmp rex.WRB mov (bad) movabs add sbb mov sbb xchg cmp fnsave nop mov data16 (bad) rex.RX pushq imul push rex.WX rex.RX insl loopne xlat orl and stos or fldt loop mov (bad) lods (bad) add push (bad) adc fistp (bad) fstpt fwait sub (bad) fstps rex.WX push cmp int3 sub movabs lahf (bad) scas xchg int3 fcomi push popfq fimull (bad) ds and in fstl nop cltd hlt push jnp xchg test sahf push adcl jmpq (bad) xlat xchg cmp int mov sahf outsl (bad) lahf fistl jg jmpq (bad) out mov loop mov jo jae jb pushq adc and int3 fsubs retq xchg push adc sbb test add push rex.RB sar cmp fcomi sub and mov stos lock mov ja jmpq cmp (bad) mov xchg andl jbe int3 (bad) data16 rex.XB gs push (bad) enterq xor loope data16 cmp in xchg fildl (bad) jp or or xchg pop mov mov movabs cmp stos fldt shrb pop rcr rex.WRXB lahf iret xchg cmp movabs out (bad) or sub repnz pop jrcxz rcrb rex.WB mov in mov pop xchg fs int3 pop and cmp cmp pop rex (bad) outsb rex.WRB imul lret (bad) (bad) rex.B out pop roll lret repz pop cltd cli retq fcmovnbe jge movhps rex.WRX sbb rex.W adc xchg (bad) movabs cmp sbb hlt xchg lock decb cmc lahf adc fs xchg fisttpl add push out fcomi out or fistl popfq int3 jg rcrq xor rex.RB or (bad) (bad) int3 fwait leaveq js jp (bad) (bad) mov mov jo rex.R rex.WR rex.RXB sbb jae jg lea loopne icebp jp mov sub rex.XB rex.W xor pop repnz adc movsl (bad) imul iret or mov mov rex.RXB pushfq lahf pop in (bad) add mov (bad) test adc rex.WB pop out xor addl lret shrb (bad) int3 pop mov and jp pushq xchg xor jmp xor rex.WRX rex.WB lea (bad) push imul enterq xlat test (bad) jmp push mov xor fcomps ss (bad) movabs rex.WB int3 mov adc pop insl cmp mov scas pop cmc cmp fucomi jae or movabs out js retq fisubr lea pop (bad) cmp mov outsl movslq mov outsb fdivrl sahf push (bad) mov lods fistl callq mov sub (bad) (bad) xchg pop mov lahf (bad) movsb outsb jns jb fildl pop (bad) mov (bad) test callq (bad) fstps gs (bad) jrcxz shrl (bad) movabs sbbb mov outsb sub fcmovnb mov or push retq data16 mov pop jo jno stc fwait jmpq lock ja in mov pushq sub clc jae (bad) mov cmp (bad) (bad) or (bad) (bad) pop pop (bad) rex.WB xchg (bad) rex.RXB (bad) ss xlat sub repnz xor ss and (bad) xchg mov divl and lret popfq leaveq mov pop pop cwtl mov movabs addr32 (bad) retq test (bad) imul adc fucomip addl pop in fs or xor cmp xlat pop add enterq rex.RB adc scas shll and mov (bad) fxch test jl lahf insl shll (bad) sbb es jmpq in and rex.RX xchg lods pop retq sub mov push xchg (bad) (bad) icebp sbb pop jge xor fndisi(8087 mov insb xchg (bad) cwtl or addr32 pop rcr out mov or jns imul lret add (bad) jb lahf pop ja mov cmc fistl sahf movsl movabs xchg icebp in flds jnp add pop (bad) rex.WRB jne pop mov pushq jp push imul fidivl loope stc sar (bad) hlt jnp (bad) sbb add rex.RB rex movabs nop xor push test xlat retq xchg jbe rcrl mov (bad) leaveq movabs xor (bad) sbb xor mov in rex.WR (bad) popq or or pop addr32 je ss sbb mov shll mov mov mov cmp jbe xor xchg cwtl leaveq xchg fcmovnbe lret rex.X rex.WXB xchg shlb stc (bad) mov pushq fs (bad) (bad) mov frstor vcvtsd2ss add (bad) add ja (bad) in jb sbb or jns and xchg sub cli (bad) mov fs mov retq sub cld cmp fildl scas (bad) loope mov sub adc pop rex.RB out sbb ds lods rex.WRB sahf pop (bad) pop and jo pop jae jg std jae sbb and test ja rex.RB or push repz rex.WB xchg (bad) sbb or lret sarl sub rex.WR and pop jnp testb lods jnp (bad) xchg pushq sub enterq mov sahf pop mov xchg lods fwait xor pop (bad) je cmp or pop gs fisttpl scas movabs rex.RXB fwait xor (bad) (bad) and sbb mulb pop rex.R fs enterq xchg repnz fildl (bad) test fistpl xchg push es sarb mov ds (bad) (bad) (bad) adc xchg in lahf jns loopne rex.WR (bad) or retq lret mov sub decl mov in push mov rcrl mov test test (bad) insb (bad) es rex.X push cmp (bad) (bad) push pop mov fdivl rclb push cmp mov je jno pop xor adc test mov cmpb mov or movabs cld movabs (bad) fsts clc (bad) (bad) cmpsl pop (bad) rex.W fcmovnbe loopne and mov (bad) (bad) mov hlt gs xchg pushfq rex.X or xor adc rex.RB mov rex.RXB es rex pop imul shr repnz jo es lahf test clc stos xor fstpt xor jle in or out mov iret enterq sub (bad) mov sbb (bad) add mov mov mov stos mov sbb (bad) (bad) mov (bad) rex.WX fistl xchg sub rex.RX pop cmp add xchg fucomi (bad) (bad) lock pushq adc loop loope jne repz rex.R fwait xchg sti jmpq scas xor pop push mov (bad) movsl out push xor pop (bad) xchg rex.WXB rex sbb mov es (bad) icebp lahf (bad) test mov in int xchg mov int3 (bad) jmp pop jg ficom push clc mov sbb and xchg (bad) repz (bad) (bad) pushq fist mov ja movabs (bad) adc xor jp popfq jle adc rex.WR cmp xor pop jo jns cmp rex.WRX stc jg cmp (bad) or and cmc sub xchg pop xor (bad) (bad) retq sbb callq ja rcr pushq lret add movabs mov retq sar cmp push rex.WRX fsts cmpsb pop in jmpq mov pushq xchg (bad) push cmpsl test jne (bad) or movabs scas mov mov out sete mov (bad) test and mov sub cmp loope jb pop rex.WB cmpsl movabs fistpl and xor (bad) and adc cmp (bad) fsts popfq (bad) (bad) out imul rex.R leaveq pop sbb int retq cmp lahf (bad) (bad) mov pop rex.R jns shlb mov sahf fwait xor pop fist rex.WB rex or xchg rex.R mov mov (bad) pop jmp adc movsl push ss fldt xchg movslq sub rex.WR fistl jae flds test mov (bad) and pmaxsw adc (bad) (bad) mov fistl adc push sub mov xchg out add cmp fistl dec jnp std int3 or adc imul pop cmp mov xor jae add push push fcom in int pushq rex.X mov fnstenv (bad) push cmp rex.WRB movabs repz movabs retq (bad) (bad) sbb fwait movslq (bad) rex.X int3 pop (bad) mov adc rex.R xchg rex.R (bad) in fldcw pop (bad) xor stos mov (bad) fwait xchg outsb (bad) add fcmovnb sbb movabs pop fwait adc xchg jne popfq pop fisttpl (bad) xchg jns (bad) xor loop fs rclb cli lret mov shrl cmp iret in mov push ja pop repnz push in xchg mov stos mov or rex.RX cmpsl jmp setae lea test (bad) sarb frstor retq jl fadd rex.WB mov rorb sbb fwait sbb rex.WRX (bad) or lock pop (bad) xor (bad) sbb out rex.RX mov int3 pop fs fimull sub (bad) icebp adc pop mov callq push out push cmp test cltd add sarl adc jl (bad) pop subps sbb (bad) imul int3 jb out sahf mov mov pushq add (bad) mov jo xchg fdivl insb (bad) js xor sbb fiaddl loope rex.R and stos mov xor mov rex.WX mul roll cmp je rcrl add rex.WB and add rex.WX push sahf movabs xchg cld rex cmpsl clc xchg jmp (bad) callq js adc js iret xchg (bad) fistpll fdivl sahf or movabs shll or pushq loopne xchg pushq movabs rex.RB sub mov and jp or fildl mov mov rolb sub cmp xlat or pop (bad) pcmpeqw outsl mov push cwtl or rcr or rex.WR jrcxz divl and je outsl (bad) fildl rex.RB jrcxz rex.WX movabs (bad) (bad) mov gs mov rex.WXB movsl jne mov jae hlt pop (bad) jl xchg add fsubr movabs (bad) repnz rcl callq fldt sub ja adc jnp and add jle test stc pop insl rcll mov movabs mov imul (bad) callq pushq rex.WR rex.RXB fstl movabs rex.WX sub sub out (bad) jmp jno jge rex.WRB rex.B cwtl pushq mov sbb and (bad) movabs rex.WB xor mov jno rex.B xor cmpsb (bad) int3 (bad) and sti sbb movabs sbb (bad) rex.RXB rex.WR (bad) pop adc (bad) rex.RX in fildl movslq fldt sarb and mulb lock stos ss movabs sub mov (bad) jrcxz rex.XB xchg pop add adc add xchg and (bad) jge sub retq (bad) pop rex.RXB fmull jmpq pop ficoml cmp cld fwait in push sarb cmp xchg xor (bad) movsb fisttpl in jne mov sub mov (bad) loope xchg push mov pop (bad) jo rex.WB and (bad) rex.WRXB lret test std (bad) push clc mov cmpsb js (bad) push push adc (bad) fistl xor push cmc mov (bad) sbb rex.WRXB rex.XB or push or add popfq pop js mov mov (bad) mov pop pop loope cmp cmp push in int3 mov imul xor idivl pop and test jne rex.WRX in hlt mov (bad) and pop es icebp retq movabs sub fcomi std in jl test orl icebp cli test (bad) pop and ficoml sub jmpq mov mov (bad) mov fisttpl in popfq cwtl mov sub out (bad) mov fisubrl (bad) sbb out es (bad) mov mov add jmpq lea (bad) (bad) xor imul in rex.RXB pop js fcmovne cmp test jo rol xchg fcmovnb (bad) jmp sbb loop addr32 int3 sbb or (bad) (bad) sbb fistpl add fidiv jns lock (bad) jns (bad) xor fisttp xor (bad) rex.RX repnz xlat (bad) pop (bad) loop rex.WRX test (bad) lret pop (bad) mov (bad) sub (bad) out push int jnp movabs xchg pop pop push add xor (bad) movabs pop and fldcw rex.RB insl enterq and pop imul idivb (bad) push (bad) adc pop sub loop cld add data16 jp cmp cmp stos rex.WXB mov or sti (bad) fcoml (bad) rex.RX stc rex.WR rex.WB cwtl or sbb sti add jne jnp rex.WB fstpl mov xchg pop sbb cmc (bad) cmpb push or lods fild push lock (bad) hlt pop pushfq test fwait xor (bad) lods std lret mov push cld and jnp movabs rex.XB sahf rex.WRB push xor and jns ds jno cli mov or cld test sub out mov cmp leaveq push adc (bad) and xor lods jnp cmpsl rcrb adc stos retq (bad) test push (bad) pushfq retq retq sbb pushq (bad) pop stos repz fistpll fcmovnbe add xchg (bad) and stc pop add jmp sbb and stos je pop jns or xchg (bad) retq mov add pushq (bad) nop or rex.WB or clc insb negb fmuls sbb pushq push out rex.X rex.X fwait add or in or jae rex.R jg add es cld sub (bad) rolb pushq mov fwait cli in or (bad) hlt mov popfq lret nop mov rex.X (bad) fisttpl push retq (bad) mov mov mov cmp (bad) hlt or xor mov mov rex.WRX out jp std fldt (bad) in (bad) enterq (bad) rex.B sub or int3 sbb jnp jl (bad) (bad) movabs std movslq (bad) mov mov cwtl insb cmp cmp (bad) cmpb xor cmp loopne jl popfq fildl pop rex.XB xchg loope retq ja pop (bad) rcl rcrl xchg add or jp xor xor loope rex.B rex.WRB cmpsl rex.B movabs scas iret xchg test ffree lahf (bad) (bad) mov fisttpl sub rorl in cmp mov lret ja push xchg sub mov lods insb pop cld or xrelease loopne test clc sub fldt push (bad) rex.WR decl cmp movslq in pop clc (bad) sbb xor (bad) and push sarb subl mov outsb xor rol test rcr fmull (bad) cs xchg cmp fistl or (bad) cmpsl sub adc xor adc (bad) rex.RB adc jnp sub loopne imull in cwtl fildl out mov cs or pop mov (bad) xchg ja scas sahf xchg (bad) jnp je pop jge jno mov lods fistpl or cltd (bad) in and rex.WRXB pop rex.WB pushq mov or xlat (bad) movabs out jns pop scas cmp sub retq pushq xchg cltd shrq or rex.B sbb in mov mov outsl (bad) adc lahf int rex.WRXB fstpt js add pop add (bad) jnp (bad) in rex.WXB xor fcmovnbe scas pop rex.XB (bad) out callq mov rex addr32 int3 cmp sub callq outsl std insb fistpl insl repnz rcl (bad) rex.R or (bad) fdiv add push ja fistpl and out add pop sbb sub loope (bad) cmp mov pushq sub movabs outsb mov cld (bad) sbb jnp pop mov cmpsl (bad) fcmovnbe lock imul (bad) pop xchg mov push rolb rex.WB lahf pop lods rex.X pop insb (bad) rex.WRXB add mov (bad) (bad) cmp sbb (bad) ss adc push in stos xchg rclb (bad) cmpsl lods (bad) mov movsl sarl lock sbb inc es jno andl (bad) sbb rex.X shrb xchg sahf sahf sbb mov shl mov mov lahf mov (bad) shll imul and xor scas (bad) mov (bad) pop movslq movabs cmpsb lret cmp lret jrcxz (bad) adc xor sbb (bad) fcmovne pop pop jg push (bad) xor mov (bad) (bad) stc addr32 movb (bad) fildl rolb fldenv in fstpt out lahf (bad) (bad) mov movsb in cli (bad) sub (bad) cmp std add jo xor cld es mov sbb (bad) xor push mov imul rex.WR pop push adcl leaveq fisttpl jl mov (bad) fucomi sub push movabs out je insl (bad) adc and retq xor sub (bad) rex.WB lods mov fistpl data16 or shlb mov adc sub flds retq mov mov rcrl (bad) enterq pop out rex.WRB mov rex.WB rex.X or insb add pop movslq nop xlat mov rex.XB pop (bad) divb (bad) neg rorb jrcxz add (bad) (bad) push push sbb cmp sub (bad) test mov adc jb callq push xchg (bad) adc (bad) jl jp popfq jb pop loope or add in xchg in jge adc or rex.WRX callq cli out and out cmp test outsb xchg jle nop jb (bad) (bad) (bad) jle mov andl rex and sbb xor mov rex.WX mov ja (bad) rex.WR loope push (bad) pushfq jo and pop out mov mov (bad) pop mov (bad) loopne outsb (bad) (bad) jl xchg xchg clc scas push rex.XB mov rcrb cmp mov jbe jge (bad) rorl stos add in out movsb movslq add fcomps imul adc leaveq (bad) in jnp nop sti movabs ror or cwtl std (bad) jle (bad) or or rex.WX loopne or jmpq leaveq int xchg jp (bad) fistpll jmpq or xchg pop (bad) icebp pushfq pushq rol pop (bad) (bad) rex.WRXB (bad) pop or or iret sub rex.W cmc rex.R fwait jno push (bad) adc mov pop sbb cmp xlat fistpl movslq sbb sub (bad) (bad) rolb cmp repz repz addr32 gs icebp sub rex.RXB xorl adc mov rex.XB (bad) bnd loope jmp xchg lock push (bad) fdivr jb mov pop xchg movabs test cmp xchg cmc (bad) adc sbb movabs pop out rex.WXB std push rex.WRX and (bad) (bad) popfq stos sub fldt idivb pushfq (bad) (bad) std fistpl insl nop cmp fcmovnu rex.WRB (bad) mov fcomi mov pop mov adc mov stos pop mov (bad) mov movslq or xor insb push add or push fstpt mov negb movslq sub fwait push xchg and fildl icebp hlt adc cqto stos retq rex.R pop xchg or rex.WX stos lahf or iret retq data16 jle rclb sbbl pop fstpt xchg mov jmpq pop (bad) pop rex.WRB rex.XB fistpl std xchg retq and mov push sub cmp movabs fldt xchg (bad) and enterq pop rex.RB fwait (bad) pushq xor sub cld mov fwait out fstp int3 rex.RX push (bad) mov fcmovnu mov sahf rex.WRB jmpq xchg (bad) fildl push cmpsl mov sbb lock rex.X addr32 loopne mov xchg rex.WX (bad) rcr scas in in sub pop mov rex.XB pop lret in and clc cld stos (bad) repnz retq pop (bad) int mov fcomi (bad) mov add sbb (bad) fcomi shrb retq (bad) lret push (bad) mov movslq fisubl mov rex.WRXB mov test mov add xchg mov jne pushq fstpt int xchg jl movsl mov or cmp xchg mov mov xchg adc (bad) stos rex.X rex.RXB cmc rcrb jle jae cmp mov icebp ficomp lea push push ds xor lock mov xlat xor jg pop sub xor (bad) jl (bad) (bad) xlat (bad) fstpt jbe xor or int add push rex.WRX test (bad) sahf rex.R jl (bad) sub xchg icebp addl pop movslq fdivrp insl movsl (bad) or cwtl shrb mov mov in push lahf ficom ja enterq xchg (bad) mov (bad) rex.XB (bad) stc movabs rex.RB xlat sbb in stos rex.WXB (bad) xor scas fs sbb mov add shll xor (bad) movslq cmp pop (bad) retq cli mov and rclb or stos jp loopne jg add in fimull rex.RX push pop mov xchg pop cli add and rex.WR jnp movabs cmp ficompl data16 jns adc rex.WR rex.WRX cmp or (bad) adc add mov jno cwtl jae (bad) (bad) mov clc (bad) jae sub leaveq loope nop push (bad) jbe push rcrb jno btsl pop xor fstl push adc xor or push fstps jmpq jrcxz cs (bad) and (bad) xchg icebp cmp jae imul pushq fs lret movabs in sbb test cmc (bad) sub retq out pop gs jge fsts gs sti sbb add iret rex.XB adc mov (bad) push sub jbe xchg mov fcmovbe rex.RB out mov gs (bad) xchg jl shll pop movsl pop gs (bad) sub and adc push int3 push mov mov cld rep scas sub leaveq outsb rorl pop add out rex.WX test (bad) fistl loop push jrcxz pop nop pop std adc (bad) lock in or cmp xchg pushq fstpt or adc xor jae mov fisttpl or (bad) pop mov loope pop jbe pop sub pop cld ds mov cmpl or lods cmpsl hlt imul add int cwtl (bad) mov jg xchg rcll ds ja pop cmpsl (bad) hlt test rex.WB (bad) cmp xor add icebp (bad) xor (bad) (bad) (bad) rex.XB xor rex.WB (bad) fmull xchg out repnz sbb and rex.B icebp test imul shrb imul fsubrl push insl sbb int ds xor clc js mov (bad) leaveq rex.XB sti sbb rol xor mov (bad) stos (bad) cld fucomi push mov cmp and (bad) jae fwait (bad) ds (bad) push jnp cmp add rex.RXB repnz hlt add xchg orb push pop mov xchg pop vsubps pop cmp fndisi(8087 push ds xor jo je nop and mov (bad) fistpl cmpsl repz sahf or pop shr int xchg movabs and movabs loop mov pushfq (bad) repz sbb and test cmp shl jmpq movabs sbb imul sub stc mov mov (bad) jge mov adc insl (bad) rex.WB es cmp fistl (bad) xor (bad) (bad) or imul fistl or outsb xor and cmp sub outsl and xlat clc cmp push and data16 loope jl movabs stos (bad) in push movsb xor callq pop rex push pushq cwtl pushq fwait fs fadds add rex.RX jno out fildl movabs sbb in shll scas or shr jnp icebp sti (bad) outsl (bad) cmovge out fwait in lret (bad) jmpq (bad) fwait mov xor (bad) in test mov and test rex.W xchg fistl sub push mov pop (bad) retq rex.WX fucomi adc adc fistpl int mov xor pop push (bad) sub cmp fildl xor mov and add mov rorb adc or lock in cmp sbb (bad) jb fisttpl movabs stos sti and fucomi shrb cld loopne mov cmpsb clc mov sub or lock rex.B loop pop movsb mov cmp loope pop fnsave (bad) mov not (bad) fwait jnp fildl js pop fldt stc nop mov (bad) xchg (bad) rcr or movabs sbb adc or xchg fildl push xor fisttpl fdivl rorb sub push int rex.WB mov and (bad) cli retq xchg fnstsw (bad) (bad) mov mov rex.WRX cs (bad) push or pushq xchg mov retq fdiv fstpt jo movslq jmpq xchg mov movabs pop rex.WRXB xchg jb (bad) xchg fildl movslq fcmovne jns mov rex.WRX fs fcmovne pushfq sub out jg insl xchg xchg and jmpq (bad) cmpsb jge lret mov popfq add shr push (bad) idiv rex.R xchg jnp xchg je mov xchg cltd jp jmpq fwait or rex.RB rex.WR jrcxz je imul movslq cmp rex.RX cld xchg add cmp in (bad) int rex (bad) and pop jrcxz movslq xchg movslq out pop xor sti pop rcll (bad) repz mov (bad) mov cmp rex (bad) jmpq sbb xlat ss lea cwtl jnp repz hlt mov movabs fisubrl rex.WRB test cs insl (bad) sub or or lods ja rcr fistpl xlat stos shll je icebp mov cld (bad) jnp test rex.RB jbe add rex.WRXB (bad) pop add mov mov xchg addr32 fidivl enterq lret cmpsl movabs sti test jl movsb xchg rex.WB rex.WR jnp (bad) (bad) lret lret xchg mov (bad) (bad) jne mov hlt or jmp lret (bad) scas scas retq jg fistl xchg (bad) sbb movabs ljmp loop sub pop shld rex.X lods mov scas pushq imul pop (bad) (bad) mov mov scas cmp lods mov add sbb repnz xchg pop mov (bad) (bad) out gs (bad) mov repz push pop (bad) fdivrs (bad) lahf add sbb mov movabs sbb mov movslq or mov divl jne sti or cmp movabs push movabs (bad) adc adc scas addl leaveq or fstpt mov xchg (bad) or retq enterq out and fyl2x xlat fwait (bad) jl (bad) fcmovnbe (bad) in lods sbb cmp retq fidivrl xchg or gs (bad) in rex.X (bad) imul iret retq pop sarl test rex.XB rex.WB xor mov (bad) jg pop add ja adc mov fcomps (bad) xchg sbb (bad) push in test (bad) lods (bad) retq gs fistl fldenv ss hlt cmp xlat cmp push insl jg movabs and imul mov mov (bad) retq rex.W or pop (bad) outsl cmp and outsl mov lods sbb fcmovnbe mov insl movabs (bad) pushq scas (bad) imul out pushfq fstpt popfq rex.RB adc mov or rcll (bad) adc xchg fisttpl popfq es (bad) (bad) push fcmovnb and fldl movabs xor cld scas fistpl jmp mov pushfq (bad) fsubrs mov gs cmpsb retq fwait out scas mov cmp pushfq popfq stos (bad) cmc sub stos retq (bad) cmp pushq test push add imul mov sbb mov cmp xor in mov jge nop pop adc sti xchg movsb rex.X jg pop push jae gs fildl or cmp int int sub mov sti (bad) ja (bad) fistpl (bad) repnz fcmovne lock in xchg (bad) (bad) nop mov jnp mov lahf (bad) js out loop fndisi(8087 repz mov sub dec and fidiv in push pushfq jno (bad) pop rex.WRB jo pop cmp cmp out pop movslq mov scas cmc rex.WX (bad) or movabs (bad) mov rex.RX jae mov pop nop es cmp pop leaveq pop adc outsb add (bad) sti fcomi repnz mov (bad) cmp cs push cmp sti jp (bad) adc push popfq (bad) (bad) rex.R sub rex.RXB rorb mov pop scas adc (bad) cmp sbb jne test (bad) orl and add jmpq (bad) pop mov (bad) jno lret sar xchg (bad) fldt and imul rex.WRB addl add cmp mov cmp (bad) lret pop sbb cmpsl pop cld pop test rex.R cmp mov (bad) jno and mov rex.R test rex.WRB ds fwait ja (bad) leaveq sarb push add fisub pop xchg retq jae (bad) movabs xor xchg cld fwait pop mov xor add movabs jnp mov (bad) or push pushq in jae rex.R movabs retq xchg rex.RX out push data16 in out rex.WRXB outsl movabs cs fbstp pushfq vmwrite test sti cli cmpsl pop rcll (bad) mov mov jbe push not cmp add and mov add sbb xlat push (bad) out (bad) xchg cltd rex.RX mov cltd std ficom lock or test rex.X rex.RX rex.XB sbb (bad) fs lea adc xor stos (bad) xor popfq (bad) mov fwait pop sub sub test (bad) xchg addl out (bad) sub fildl rex.X rex.WR mov sbb xchg (bad) out addr32 rex.WXB test xor (bad) (bad) or xlat jg (bad) fdivrl pop add in sti jl cmp out fcomi mov out adc cld or iret fwait (bad) (bad) callq push (bad) repnz movslq shrl fildl xchg mov jg movabs xchg sub mov test movsl sub rex.B xchg je fisttpl cs xor fucomi roll nop cmp rclb (bad) or pop mov (bad) in ja ja (bad) pop (bad) xchg (bad) rex.RX (bad) mov mov jmp movabs or jb xchg stos gs pushq (bad) callq movabs mov pop test insb xchg jns loope sub fnop movabs movsl (bad) jne,pt movabs mov imull mov (bad) insb (bad) es fstpt adc rcr fwait cwtl push cld add push jle (bad) fdivrl xor cmp cmp (bad) jbe push cwtl xor push (bad) mov xchg movabs push rex.WB (bad) pop out ja jno rex.WRB or fwait cmp out cltd pop shll repnz shl stos rex.B rex.WRB cmp cmp mov icebp xchg pop (bad) je and callq xchg rex.XB (bad) rex.WR xor cmp fwait jne (bad) (bad) or mov jmp cld movabs pop fbstp retq xor mov (bad) (bad) or fnsave mov fld (bad) fnstcw or sahf xchg cmpsb xlat mov pushq js sub adc insb pop push (bad) xchg rclb stos adc fs rex.RXB sbbl scas (bad) (bad) cmp popfq in subl int retq fwait xchg (bad) pop clc xchg in negb fbstp data16 sarl jb in jle rex.WXB adc lea retq xchg cmp (bad) cli (bad) add rex.WRXB xor pop mov (bad) std outsl js fadds neg cmp jle jbe fwait ja hlt (bad) (bad) popfq xor cmp insb xchg push pushfq insb adc jae jae sub imulb jrcxz (bad) (bad) add (bad) jns ficompl add xchg fs xchg pop (bad) fwait sub (bad) std icebp mov and jo callq lahf (bad) neg movabs (bad) addr32 pop gs jmpq push mov push outsl out mov rex.WB mov (bad) (bad) push mov (bad) loope xor push (bad) movabs add idivb mov movslq rex.R roll pushq movslq (bad) int3 mov cli cmp rex.B es (bad) fwait mov sub in cmpsb ds popfq pop pop stos xchg or loope outsb (bad) push shll orl sub xchg mov cs movabs loope rolb xchg fsts jb ss push and lods lods mov stos leaveq cmp (bad) push and xor movabs pop stc jp cld mov push sbb pop sbb pop (bad) add xchg imul rex.R retq jg xchg stos (bad) (bad) fwait mov fucom imul int3 (bad) fisubr or or stos loopne (bad) mov push fwait (bad) jp,pt cmp pop and pushq sub jae (bad) lods xchg jl mov add leaveq add data16 adc jbe pushfq jle push (bad) (bad) (bad) rex.WRB lods fsts retq push stos movabs xchg retq pop js mov ss fld xchg push mov divb (bad) cltd scas xchg sbb mov lret imul in mov repz xor jnp insl (bad) int3 sub mov (bad) jg xchg fwait cmp fildl test mov retq pop sbb push (bad) fimul jp mov jmpq movsb movslq push mov rex (bad) add mov mov test repnz (bad) (bad) rclb push (bad) int3 push jnp (bad) mov mov sub xor fadd sbb loopne cwtl xchg mov add jo sahf scas movabs sbb and (bad) cmp push jrcxz out (bad) add enterq sbb out xchg movslq cmpsl fcomps scas rex.WRB loopl lods mov lret imul test rolb cmc gs out jg pop stos or (bad) xchg and (bad) rex.WX rex.XB rolb out popq xor rex.WRB xlat mov push ss sbbl (bad) push xor jns pop adc imul icebp rex.WX rex.W or movnti in out xchg mov pop add ss rcrb fild in outsb (bad) (bad) rex.RXB jb jo pop mov xchg and pushq sub pushq sbb mov lock fstpl loopne jb and rcrl stc fdivrs xchg pop xchg mov clc cld cltd sar jae pop pandn jnp rex.XB jle (bad) push mov and (bad) addr32 fisttpl ja (bad) pop data16 movsb xor rex.WRB out mov pop mov pop pop sub popfq and scas (bad) sbb mov fistpl (bad) pop (bad) mov (bad) pushw movabs sub lret xchg (bad) je (bad) sbb and outsl (bad) rcr cs movabs ljmp ds sub xor lretw rex.WRB or jmpq jns push fistpl add lret xchg mov outsb ss and fisttpl push js xchg xchg pop (bad) xchg cmpl cmpl enterq and cli nop adc test cmp adc jnp mov (bad) movsl lods retq retq push mov add imul int3 add (bad) mov rex.X pop repnz adc xor mov lods ss fistpl pop pop pushq xchg push sub int stc (bad) jnp rcrb mov fisttpl in mov leaveq lahf cmp jb (bad) fcmovb stos pop cmp pop outsb fdivrs rex.XB xchg jg push mov (bad) cwtl (bad) xor out pop loope add or cmp sbb push xchg fwait int3 js fstpt rex.RX jb fldt rex.WR fcmovnbe add (bad) add (bad) pop and fnop ss or jne rex.WB jp cmp nop xchg rex.RX rex.WRB pop lahf (bad) sub imul or (bad) (bad) adc push repnz (bad) jg test jle fcmovnu jbe loope xor movslq fldt cwtl out mov enterq xchg repnz movabs retq pop (bad) (bad) and lods callq (bad) cltd (bad) mov data16 scas fdivrs sub xchg xor rep add push (bad) (bad) xor pop rex rex.R bnd rcr jnp pop (bad) lret (bad) fwait jmpq rex.WB adc sub enterq leaveq xchg stc stos mov in add (bad) jae (bad) (bad) repz and movabs rcll movslq imul cmpsl mov vorps push sub mov xor pop divl test add pushfq lret (bad) mov rex.R jns pushfq pop std icebp (bad) scas mov jbe adc stos cmpsb fstpt sub es test retq test (bad) pop lock jne or mov push or (bad) repnz sbb sbb push int3 cld push sarb mov jo xor xor sub sbb lahf leaveq fistpl test vmovlpd xlat fstpt rex.XB or (bad) in jg rex.WR sub pop cmc imulb rex.WR lods sbb rex.X mov add pop bnd mov jle fistl cmp xchg (bad) xchg pop fcmovnb scas xchg testb mov outsl fs rex.XB rex.W mov push iret push fadd mov or rex.X popfq movabs xor xchg rol fldt popfq insl jnp pop (bad) test mov xchg fs (bad) cmp mov testl (bad) shll xchg add imul clc adc sbb rex.B jnp movsb lods mov sbb pop cld (bad) lret push sbb and retq xchg rex.WRXB in jnp mov es add sti or fldt shrb mov addr32 popfq stos rex.W stos mov (bad) cmp mov mov pop fildl sub add data16 in out sub xchg mov jmpq rex.XB or (bad) mov movsl rcr outsl sbb mov iret jns fisttpl int3 jo sbb fildl mov cmpsb (bad) imul mov push sub fldt xor int jmp movabs test sti fidivr add (bad) or imul xorl or movabs insl callq subb rorb lock sbb pop lret rex.B (bad) xchg rex.WR mov (bad) sbb push lahf add add in rex cld lods mov imul push push sub rex.WR addr32 lea rex.WRB mov sub lahf rex.WRX pop popq (bad) (bad) xor sub int3 imul movabs icebp pop mov loope pop and test stos fistpl lods (bad) jle repz add sub pushfq scas fldt (bad) cmp fildl xchg jo repz rex jl mov push rex.WRX rex.WX fisttpl sbb test add mov imul adc add adc roll (bad) mov jp adc ja lahf ss int3 (bad) pushq fwait jae (bad) cmpsb mov callq jno pop movsl push sub mov push fcomi addl je mov (bad) add iret rex.X xchg jl mov (bad) imul outsl or test jrcxz cmp rex.X sbb (bad) fistl jge and (bad) (bad) (bad) cmp jmpq xor mov jnp jo fndisi(8087 scas xor out sub mov in (bad) add fcmovnu jl stos vpcmpeqw jbe and mov movsb pop loopne (bad) rex.XB (bad) fisttpl mov sub movabs xchg insl retq js pushfq test fistl or nop pop mov retq jae sbb pop fdivrs fwait mov xchg (bad) and jrcxz ja pop fisttpl rex.WRXB je sub in fldl xchg (bad) mov xchg (bad) stos xor pop enterq xor sub loopne cmp test jns popfq xchg adc in sub pop pop mov sub out in push movsb (bad) lods rorb (bad) fadds stos rex.B test out movabs pop adc movabs hlt (bad) pop push pop xor imul mov cltd mov or sub sbbb cmp jae stc mov rex.RXB mov xor (bad) (bad) rex.B repnz nop sbb adc jbe fidiv (bad) je xchg sbb fs outsb imul rex.XB rcr cmp add scas fldt rex.B fnstcw jb out fcmovnb (bad) movabs je fisttp jle (bad) or (bad) adc clc in test imul xor xor fldt out xchg mov movabs (bad) xor enterq rcr xlat rolb mov fistl (bad) bnd add mov stos and pushq rex.WRXB int3 push out shll rex.WRX out cld jb and movslq movabs pop sahf rex.WXB push sbb fildl out push and sahf mov insb cmpsb pop jns scas outsl pushfq shll push (bad) leaveq (bad) (bad) fistl cli in (bad) movabs mov xor pop lret or push jne fsubrs cltd fldt cmc (bad) cmp push add scas movabs cli ss cld outsl js push icebp push imul cmp (bad) fcmovne lea (bad) lods jl pop mov imull mov sub cltd (bad) cmp fcmovnu fsubrs (bad) out (bad) xchg mov movabs rex.WXB fldt cmp icebp pop movabs ds push and repz xor push out (bad) (bad) jbe imul push rex.WXB icebp out adc adc (bad) cmc rex.RB fstps xor or lock js pop test (bad) imul xchg jge data16 pop hlt pop mov fwait jns pop jnp jg sub cmp or out ficomp pandn test fisttpl rex.RXB (bad) out loope (bad) adc pop insl fdivs lahf (bad) (bad) in addr32 jmp data16 jnp sbb in and sbb fistl out xchg xchg jne (bad) movabs (bad) mov in pushfq fcmovnbe cmpsb lods movsb (bad) (bad) (bad) (bad) adc pop mov rex xchg jnp and outsb and fwait cmpsl or ss sub xchg fistl sub mov movabs rex.WXB mov rex.X or rex.WRB mov sub rex.WR (bad) js jrcxz mov pop mov test cmp rex.WRX js (bad) add cld adc pop (bad) xchg jle pop pop cmp sub push mov jae xchg (bad) cmovne (bad) ss movabs hlt rex.WXB push xchg cmpsl roll f2xm1 jp rex jrcxz int3 pop jno rex.R adc int mov jmp (bad) gs rex.WR clc cmp pushq je mov adc (bad) cmpb mov clc lods pop negb ds iret (bad) and jl push xor (bad) js retq add mov sarb xchg ja rex.X fldenv xor or or adc out (bad) fildl mov mov repz lods xchg rex.RX or pop fidivl cli movsl imul (bad) imull mov mov (bad) mov nop xchg in mov sbb adc (bad) cmp ds xor rex.RB sbb rcrl (bad) out mov mov fwait sar mov fisttpl cltd in popfq (bad) mov outsl (bad) leaveq orl addr32 lea adc jmp (bad) pop loop rex.RXB sub push (bad) adc rex pop lods add sub fwait test (bad) mov mov rex.X (bad) sbb (bad) cmp fxch add rex.RB (bad) imul fildl or rorl gs adc and fadd in cmp rex.RB int3 xchg jb (bad) or fldt popfq or repz jmpq rex.RXB (bad) push lea (bad) xchg rex.WXB push outsl cld sub (bad) mov adc push and pop stos (bad) pop xchg mov (bad) sub lret (bad) movabs lea outsb adc add mov cmp add pop sahf adc (bad) and pop in xor movslq imull mov add jne movabs adcl fs xchg ds push (bad) pop jo outsb std in jg (bad) jae (bad) jmp gs stos cmp adc push fldt mov in pushfq adc outsl add iret stos jnp nop mov mov jnp add imul out stc pushq cmp icebp xlat loopne retq push push fidivl jmpq rex.RB popfq push sbb (bad) callq (bad) movabs fisttpl lea insb sbb jbe pop sbb outsb scas lret loop and pop fiadd out push xchg mov xlat mov mov cmp fwait movabs ja and (bad) nop enterq popfq mov int jle mov cmp enterq cmp mov push rex.WR xor scas push (bad) rex.WRX int3 sbb push jmpq rex.WRB and std pop jle rex.W pop lea rex.RXB imul mov pop movsb fldt rex.W or lock ds push fldt cs xor stc test rex.X rex.WRXB xor xlat pop mov (bad) fcomi movsl (bad) lods lea movslq fwait or fistl (bad) loop or jmpq in jl xchg sbb retq pushq cmp pop leaveq sbb imul sti fisttpl es (bad) (bad) jns (bad) push sbb (bad) leaveq jnp or (bad) adcb push adc or jmp mov pop (bad) movabs movabs mov mov mov rex.X mov jrcxz jp mov lret imul (bad) out movabs (bad) jg sbb sub rorb lods out fistpl pop (bad) (bad) not sub out fcmovne js sbb fisttpl mov jl add xchg ja mov pop jle rex.R sbb pop cmp or sub cs insl xor (bad) pop adc (bad) (bad) or adc rex.WX add add (bad) (bad) pop fadds insb movsb mov adc stc stos rex.WR jne (bad) mov orl pop (bad) mov jbe sbb sti retq scas fstpt and rcl mov mov (bad) (bad) (bad) xchg imul pop es data16 loopne jg insl sarb pop and jbe in sti lahf in cmp (bad) (bad) (bad) int fnstcw push rex.WRB jle cmpb enterq (bad) fisttp pop jp jb rcrl movabs fprem1 test test (bad) mov xchg (bad) callq jnp mov movabs xor pop sub mov movsb mov rex.WXB pop (bad) paddusb rolb push sarl and (bad) jo add std (bad) mov and xchg xchg xchg push addr32 movslq mull push push pop xor shrb jne ds cltd js mov xchg imul fistl out movabs repnz hlt orb incb cmp rex.WR gs retq and add pushq rclb push (bad) jae xchg push (bad) test mov outsl (bad) push fsub (bad) jrcxz cmc and callq retq pushq rex.WRX rex.WR (bad) divl jae rex.WRXB out (bad) icebp rorl and in rex.X rex.WRB iret fwait mov rex.WRB rex.RXB rex.XB fstpt movabs jns mov decl ficomp and push jo pop mov xchg fisubl mov rex.WB adc scas adc or cli lahf outsb movslq adcl add pushfq (bad) out jb fcmovnu (bad) leaveq repnz xor fsubrs rex.WRX out (bad) pop sub jae movslq fcomi rex.WB int3 adc sub or sub sbb push movsb cmc hlt test (bad) (bad) sbb fcomi jp cmc xor xlat sti pop movabs cmp jnp add rcrl pushq clc sub sbb mov (bad) cwtl outsl sarb mov scas mov fstps (bad) rex.WX jnp sbb fwait push cmc movsb xchg pop sbb in not (bad) sbb adc rex.W rex.R rex.WX push xorb or cs pop jg xor and rex.RX rex.WXB push or jge xlat cltd gs mov fdivrp in or (bad) imul rex.WRB flds scas (bad) adc jae xchg mov loope pop popfq test and enterq add xchg pop pop gs jmpq adc jne out es fwait (bad) lret push pushq cs adc fcmovnbe stos (bad) vpunpcklqdq pushfq pop icebp cmc addr32 jo rcrb imul (bad) jge add or cmp mov (bad) jne je stos mov adc mov loop cmpsl cmp scas and pushfq (bad) fisubrl mov pop rex lock (bad) rex.WX (bad) fildl (bad) xor popq out adc push pop mov loop or sbb mov cmp pop stos rorb outsl jmpq imul movslq jl adc push mov rex.R xor (bad) mov or cmpsb (bad) fstps xchg push pushfq pop movabs jl jg mov jg jp lods in retq (bad) ja sbb pop rex.R jp lret push mul js insb retq popfq in in mov cmp or stos pop sub sub jae mov push sbb enterq cmpsl loop and (bad) (bad) pop movslq movsl rex.WR fistpl shlb fldt nop xor mov and sahf int cwtl pushq mov icebp (bad) rex.W rex.R fwait mov insl (bad) fidiv (bad) (bad) jae xchg pop mov lock insl xor fistl adc mov jp scas cld xor rorb test data16 cmc (bad) test mov jg adc cmpsb mov xchg fistl xlat mov (bad) sub fldt rex.WXB movsl neg stos popfq pushq jp cmp mov pop es cmp stc sbb rex.XB adc cld cmp mov movsb scas jne fisttpl ds cmpsl insl jae mov in (bad) out notb jae (bad) (bad) pop mov (bad) rex.RB out push sub in pop enterq movabs lock xor push insl nop rex.WX out test callq repz fild mov pop cmpsb stos cld scas or pand mov pop rex.WB push fadd test (bad) rex.WX clc in mov fs (bad) sub leaveq sbb jb movabs fdivrl (bad) sahf pop xchg addb mov jnp addr32 add (bad) mov out (bad) or adc movabs sub icebp (bad) xlat xor fcomi rolb out mov sub (bad) xor rex.RXB sbb rex.WXB jnp push (bad) rex.R nop rex.W loop rex.WRX pop idivl movabs ss push sub and mov and cmp xlat lcall andl and xchg sub mov scas nop or (bad) or cmc sub add std add push (bad) xchg (bad) roll push comiss jmp cltd pop mov movsb (bad) (bad) jp push and retq test cmpsl (bad) fildl mov xchg or jno test sbb (bad) rex.WRB xor fildll jl (bad) or (bad) cmp pop push xlat cld insb push cli and add xor cmc mov mov (bad) xor jp add loope pop int3 insl (bad) rex.WXB fstpt (bad) rex.WRX fildl iret push fstpt rex.RXB (bad) pop mov or test mov cmp pop add addr32 jae xchg fistpl mov loopne repz popfq sub fcmovnu rex.WR pop pushfq int (bad) out jle pop insl fcmovne lods (bad) repz push and pushq (bad) out pand rex.WX sub mov or gs add jno cmc cmp sbb sub lahf out movsb mov scas rcr (bad) retq mov xchg rex.RB sub and scas fstpt (bad) js mov subb es (bad) (bad) jnp sub icebp imul rex.R jne push and cmp mov xchg insb or push mov fisub cltd mov pushq cli sbb insl (bad) xor jbe (bad) rex.WB rex.WRXB rex.RB xchg movsb sbbl pop mov repnz (bad) movabs fdivl mov mov lret push (bad) mov fistp mov (bad) jge repz fstpl sub loopne (bad) pop mov movabs in rex.RB idivl (bad) xor (bad) mov shlb sbb fwait std mov movabs push cmp (bad) jno jne sub (bad) sti (bad) pop jle fmull jge add (bad) pop cmp push jnp fidivrl push std jp sbb rex.WRB cmc mov insl (bad) jrcxz clc lods cmpsl movabs xlat je fs (bad) lahf adc cmp ja pop xlat rex.RB jrcxz xor cltd movabs lret (bad) callq rex.WRX (bad) hlt (bad) cmp jp cli mov push imul sarb cmp rcrb xchg pushq (bad) mov (bad) and pop cmpsl cli jae pushfq icebp jl or xchg jmp xlat push (bad) xchg (bad) (bad) (bad) (bad) (bad) jo and clc rex.B or insb fcmovnb mov lret movb jae jrcxz repz adc fprem1 scas repnz push mov (bad) xlat (bad) sahf jp adc rorb xchg adc cmp outsb jp divb jno sub or lret (bad) addr32 or andb rcrb fs mov pushq (bad) rex.RX rex.WXB lods (bad) (bad) int3 jmp mov and sub and push cmp xlat andb push adc xor mov xchg in mov movabs add (bad) xor (bad) in jp ficompl add (bad) enterq and movslq push (bad) fwait test movslq add sti fnstcw sub rex.R pop pop cwtl mov movabs sbb movsl je je cmp lret rex data16 popfq leaveq push (bad) push in stc popfq fprem1 mov xchg cmp (bad) (bad) sbb (bad) mov push sbb mov iret js (bad) rex.WX rex.WRB fnstsw adcl in (bad) xchg sbb jp test bnd adc notl add out shrl jns pushq xchg pop cmp mulb (bad) scas xlat fcomps mov (bad) repz rex.WB (bad) rex.R fs rex.R (bad) mov cs mov push xchg mov cld int rex.R addr32 or (bad) cmp jne lret bnd rex.WX xor adc jl sti rex.X ficom add callq iret (bad) push sub add xor add mov (bad) mov or js mov movabs mov or cltd mov (bad) leaveq fidiv sbb rex.RXB fwait (bad) jns xor decl (bad) fcmovnbe std or (bad) pushfq lea push cmp (bad) fneni(8087 mov clc outsl push jne fcomi std in rolb xchg (bad) loopne notl cld cmp (bad) adc imul add mov push push sbb std adc mov outsb jg int ja loopne fnsave movabs cmp loope,pn fistpl cmc sub pop cmp fisttpl xor fstpt rex.WRB rex.RXB mov (bad) mov loopne pop rex.B rex.XB out imul pop cmp jg and adcl movabs cmp stc or pop and jnp,pn add xchg cltd cmpsl clc jle sbb sbb fisttpl (bad) movslq iret cmp loope xor sub (bad) xchg xchg push sbb pop rex.RXB imulb jne jge mov (bad) std xchg callq (bad) (bad) push (bad) outsl xor fstpt test mov rex.WR sub fwait imulb mov callq mov fistpl jmpq ja jle imul jns xchg or repz test rex.XB popfq (bad) pop lods shl movslq mov push rex.W fwait cmp std jp cmpsb jrcxz mov callq int3 je movsl fisub push push push add clc stos pop mov subl xlat lret sbb jg jnp mov cs rcr retq out lock mov fildl (bad) sbb movabs (bad) mov pop lret cmp (bad) or mov pop fucomi mov mov imul sub stc mov sahf jle mov callq pop (bad) lods rex.B rex.RXB fisubr mov (bad) repnz ja mov cmp pop in movsb (bad) or (bad) cmp mov movabs pop fadd stos mov ja (bad) addb xchg adc fildl int3 out and nop jrcxz test mov (bad) jb retq fisubl add jae rex.WRB rex movabs (bad) sti (bad) leaveq jmp mov faddp rcrl adc xchg rex.XB (bad) int sbb xor out fsubs (bad) (bad) add pushfq gs xor cmp movsb ficompl (bad) mov fucom xchg sub mov pushfq jmpq loope int3 lock lahf sbb jge add push (bad) xor je xor leaveq stos rex.W xchg fistl jnp (bad) fstpt xchg std notb (bad) fidivl scas insl (bad) pop (bad) mov mov fdivrs nop jl insb fsubrs insb and xchg je mov cmp (bad) xlat rcr and outsb stos pop push add sbb mov rex.R or mov (bad) ss and cmp neg lods shrl sub mov nop pop sbbl jo sbb adc xor mov sub adc mov fisttpl sbb lea mov add adc adc and lock mov int3 mov clc jno jae (bad) in mov mov pop test (bad) pop icebp sbb jb test scas add mov sahf test (bad) xchg pushfq movabs mov sbb or (bad) add movabs test or fidivl subl (bad) (bad) shll iret scas out adc sub cmp fadds jns cld imul fildl rex.WR sub (bad) (bad) (bad) xchg in insl imul out fidivrl fisttp xchg mov (bad) xchg pop rcrl lock or (bad) rep mov xor adc (bad) xchg mov push fcmovnbe adc xor outsb add fistl pop mov sbb movslq (bad) (bad) cltd nop fcmovne xchg mov pop rex.WR cmpsb (bad) ss test mov xor (bad) (bad) rex.R jnp fldenv sti (bad) test loope cmp or cmp sti sbb loopne xchg movsb test outsb fidiv cmp in sti repnz mul loope lret mov fiaddl lods out sahf jl adc mov pushq loop (bad) (bad) pop outsl int3 sbb (bad) loopne jl out std rex.RXB rcrb fimul jle scas jle add (bad) movsb jbe iret sbb fstl jbe xor cwtl movsl xchg or out es jrcxz cmpsl gs ror (bad) (bad) mov xor rex.X rex.WX xor (bad) rex loope loop lea rex.W mov std xchg push or pop add sub sbb fsts loop (bad) (bad) cmpsl pop mov rex.RX fs retq outsl insb add jl repnz push pop movabs mov xchg test pop mov (bad) fidivrl scas (bad) movabs test or clc clc cmp mov (bad) retq mov cwtl push push xor int fs mov movabs imul jg (bad) rex.RX mov cmp jl xor movsl jge and ss lret je jno fwait add stos lea (bad) test push pop (bad) movabs mov push jae push sbb adc ljmp cmp (bad) movabs xchg cmp or notl sub pop xchg lret mov fnstcw mov (bad) jge jmp (bad) movb push (bad) xor faddp stos jp xchg mov mov pop loopne add jns ss andl sub movabs rex lock mov mov jo out push (bad) pop sbb repnz in jle mov sub xor pop (bad) and test fstpl retq or (bad) adc rex.RB fsubr mov mov sbb sub fistpl rex.WX rex.RB rex.WRB (bad) mov test (bad) (bad) jbe rex.WXB rex.XB xor loop push (bad) mov push lods sbb adc flds (bad) mov (bad) mov out test push test lock mov jne (bad) fldenv jnp nop loop fucomi pop (bad) fsubrs sub xor pop mov rex.RB pop ds je iret jae cmp fcmovnu mov rex.WRB cmpsb scas ror retq push (bad) fcmovne pop push int std je fldt in mov movabs fdivs iret fwait jl jo push sbb repz fwait test and std adc popfq out shr mov rex.XB (bad) adc xorl int out and cltd retq (bad) fsincos jmpq sub rex.WB mov xchg ss rorb movabs (bad) push push in addl adc sbb rex.RXB movabs jne loopne in and jp lods rex.WXB out movabs lret js rclb (bad) push fwait cmp pop idivb scas xor imul mov int jo (bad) sub mov push fbld movsb mov sbb enterq pop jns or jrcxz fidiv mov xor rex.WRX sar mov mov rex.WRB xchg xchg mov clc (bad) (bad) fcmovnb sarl (bad) out xchg shlb (bad) adc cmp fistpl and lock sbb fucomi stos xchg mov fcomi rex.WX fistp cltd fstpt sub sub (bad) jo movslq pop fisttpl pushfq lret fldcw iret out bswap (bad) retq cmpsl (bad) sbb xlat xchg or nop std jo jge (bad) xlat fldt rex.WRXB sbb add rcrl pushq lret imul push xchg pop pop stos movabs fstpt mov add push es fisttpl (bad) hlt (bad) or retq fldt in cld push movsl clc (bad) jo retq shrl in and sar push sub pop jne popfq push (bad) xor jbe cs mov fisttpl out test sub test in fistl scas (bad) jp addr32 pushq push push out adc fidivr fcmovb fwait (bad) mov repz sbb jnp pushq jg mov xlat movabs adc scas scas (bad) xor jne rex.XB add cld mov pop and mov fstl fstpt cwtl mov add mov jp imul pop rorb rex.WRXB pop stc out push fnsave mov mov outsb jno adc rex.B or pop movabs leaveq fldt movabs sbb out jnp mov fistpl (bad) xchg enterq cmpsb int3 mulb fstpt imul stos cltd or lods (bad) pushq cmp sbb jmpq (bad) repnz rcr xchg test push push fwait sbb and xchg (bad) pop hlt callq xchg addr32 mov jae (bad) test xchg fldt sbbl mov ds fwait rex.X jle or mov mov and (bad) stos cmp pop (bad) xor mov and (bad) mov rclb adc (bad) mov sti or mov rex.RXB mov mov stos push rex.RB movl push pop xor sbb idivb (bad) push sbb jns pop fildl movabs and fucomi in (bad) mov imul jo cmp (bad) (bad) mov rex.WRXB (bad) rex.WXB push pop cld and lret outsl and je (bad) out fistl ja xchg fninit sub sub movabs adc jmpq xchg rex.WX or pushq mov fisttpl add cmp loopne pop rex.WXB (bad) scas push fiaddl xor cmp mov cmpsb sbb mov rex.R addr32 sbb sbb rex.R mov fsts out mov add or fcmovnbe add nop mov pop xchg movsl push jmpq sbb movslq sub rex.WB sub mov int fnstenv insb shl std ja (bad) xlat (bad) mul push and jp push (bad) or (bad) xor imul or (bad) out jns lods xlat ja (bad) push and xor retq cmp xor pop (bad) sub sub loope in pop testb rcl rex.R movsb (bad) xlat xchg stc test scas sbb sub and and (bad) (bad) (bad) rex.WRB cld hlt xlat (bad) out sub insl or rex.WXB (bad) fstps in test (bad) out in (bad) lret mov (bad) push cmp retq clc cld movabs mov icebp cmp imul jg xor out adc jge rex.WRX test sbb out xchg xor add and rex.WRX rex.WB lock pushq push rex.RB (bad) push test adc stos fsubrs imul in fimul pop add vorps repnz (bad) (bad) rex.WRXB or retq jmp jl and test pop pandn callq (bad) fstpl xor ds (bad) rex.RXB pop xchg xor pop fistpll out fsts (bad) xor cmpsl fwait negb ja fwait cmp rex.WRXB xor push outsl jnp sub (bad) sti insb pop (bad) fisubr imul jbe or jb xchg add sub and sbb scas mov retq mov (bad) pop pop sti (bad) (bad) (bad) rex.R mov outsl (bad) jae cmpl sar mov (bad) cmp jns jae out xor xchg push fdiv (bad) rex.WRXB rex fbld ja (bad) (bad) (bad) xor outsl cmp add lretw xchg mov loop mov pop adc jp and movabs cltd ss ja pop ss mov lret loopne leaveq jg addr32 cwtl cmp adc (bad) mov pop rcll cmp (bad) cli test cs js (bad) movabs sti retq sahf rorl mov movabs (bad) xlat repz push rex.X (bad) and lret push push cmp mov pop (bad) pop jae outsl (bad) xchg jrcxz xor fiaddl movabs mov xchg push mov push rex.X jno rex.RB cmpsl sbb sarl jge out sbb (bad) jl and clc nop stos pop push push pop sbb rex.WRB rex.WRB es frstor jl pop jnp (bad) (bad) or xor cmp rex.WB jrcxz loope cmpsb add stos and mov movabs rex.RB or cwtl adc mov xchg (bad) adc (bad) xchg movsl loopne mov xchg (bad) mov or lcall push cwtl or jne jo cmpsb sbb jns out (bad) rex.WXB jno (bad) stos (bad) push xchg iret rex.B push (bad) stos adc nop mov cli xor and out rex.WXB shl rex.WB add iret ds sub mov xor mov jrcxz xor int sub (bad) pushq push out jne insl mov mov mov ja ficomp js fnstenv rex.W repnz movabs sahf pop rex.XB (bad) cmp (bad) jl ss mov add (bad) lret mov sub (bad) ss pushq (bad) test push rcr pop cmp leaveq adc (bad) rex.X rcll fwait retq pop rex.WRX rex.WRXB xchg flds notl jns iret in adc ds xchg sbb (bad) pop (bad) (bad) jnp mov and movsb ds (bad) (bad) mov and adc (bad) add pop push cmpsl pop pushq and (bad) cmc xor (bad) js mov rex.WRX xchg insb rcrb out xchg loope movslq xchg rex.XB test jp mov (bad) mov mov xor fcompl pushq rex.WX rex.RXB jl jne mov jb xchg in rcrl mov mov adc add jo push mov rex.WXB scas push lock or scas cld rex.WXB stos cmpsb stos ss sub add (bad) fnstcw stos and (bad) idivl data16 divb retq rex.WX pushq jo movl adc rex.RX rex.RB fwait stos pop mov sub xchg std xchg (bad) cmp fisttpl xor rex.WX (bad) ja jbe xlat push loopne dec (bad) pop or rex.XB push mov pop (bad) (bad) retq (bad) jno test or rex.RXB or pop rex.WX push loop lock mov lret rex.XB movabs jge fistpl pop retq mov sbb pop sbb (bad) (bad) lret nop ja pop (bad) sub cmp in pop (bad) insl (bad) ss retq outsb xchg mov (bad) xor push sub stos xlat mov mov popfq insb rex.WR (bad) fs fistpl xchg mulb add (bad) rex.R fwait pushq push loop iret sbb and pushq xor xor cmp iret or (bad) (bad) loope fstps (bad) cmp jbe add rcrb rex.B rex.WRB movabs xchg xchg add (bad) jmpq jge iret sub movslq int3 push in fstpt fistl push out rex.RB fldt (bad) lods mov mov (bad) lock imul hlt mov xchg xchg jb cmp pop xchg (bad) pop add jae subl mov (bad) int3 mov fistl fstl ja ror popfq fldcw or add fs (bad) rex.X fnsetpm(287 (bad) mov int3 xor (bad) cmp add test out pop lret nop or add (bad) (bad) xchg stos je xchg fistl mov ja xor imul sub sub movslq xchg add fninit (bad) (bad) stos movslq mov rex.B in lret adc mov and (bad) cmc and mov adc fwait xor (bad) lret ja or pop sub mov mov loope popfq lret callq xor mov (bad) mov cmp mov hlt imul stos pop mov idivb ds xor movabs movsb jl (bad) int3 rol adc sub jrcxz (bad) mov retq (bad) lretw test (bad) mov gs mov jge and jmpq outsb mov iret out lea jmpq fwait js scas pmaxsw xchg jge scas in (bad) retq mov insb (bad) stc push jge fldt (bad) stos movabs xor sahf or out test and rex.WR es rolb pushq and fistpl cmp push mov add fldt xor jae xor pop add idiv jrcxz addr32 mov (bad) popfq mov push xchg mov xchg add adc (bad) jmp (bad) mov (bad) mov fneni(8087 loop jrcxz movabs out enterq xchg (bad) xor jne movabs rorl adc pop rex.RB or movslq jae push and fiaddl lods scas pop adc xchg pop push pop xchg mov pop or cmpl xor (bad) fucom fldt notl push cmp test mov retq cmp in rex.WXB rcr insl (bad) rorb fcmovnbe cmp fistl fidivl shll xor std (bad) in mov sbb scas mov rex.WR or (bad) testb push add (bad) sti fmuls retq or in mov rex.WXB mov add (bad) mov (bad) xor retq (bad) or shufps rex.W sbb mov fistpl cld cld divb (bad) or and lods rex.RX mov cmpsb fbstp mov mov pop jo (bad) jb (bad) (bad) rolb rex.R idivb pop retq push scas sbb xchg jne (bad) or (bad) test mov loop fistpl sbb xor (bad) mov jns cs sbb stc mov mov (bad) xchg pop (bad) push divl and lret popfq (bad) xor rex.W out rex jo (bad) rex.RXB or mov (bad) fildl (bad) cmpsb xor and mov icebp fcmovnb sbb push sti and (bad) pop mov or (bad) adc (bad) int and xchg mov mov stos out (bad) rex.WR or fcomi stc loop mov fstpt sbb mov (bad) std test adc jae es pushq ficoml mov push test (bad) mov pop or sahf xchg (bad) push sbb (bad) (bad) (bad) cmp subb fistpl (bad) retq and rex.WR sbb mov cmp fistpl callq adc push jo lock adc sbb xchg xor (bad) (bad) ja push sbb sbb mov mov movslq adc ds sub cli shrb mov mov hlt rex.WB in and retq addr32 fildl sub sub (bad) stos fs mov jg int data16 and push add pop and (bad) sbb rex.WRB jp pop mov test (bad) xchg (bad) lret rcrb int3 es scas sub rex.R fwait scas cmpsl (bad) or test adc mov fisubr adc and pop mov test mov enterq je fwait test repnz cltd faddl (bad) test push cmp popfq rex.WB movabs lods lea xchg imul outsb (bad) fs sub fstpt jmp rex adc negb xor (bad) (bad) (bad) and (bad) (bad) mov shrb fucomi xchg or imul jmpq pop fstpt stos pushq push mov (bad) popfq fwait jmpq pop fcomp scas xchg or sbb pop sub jl fistpl movsl and (bad) xlat rcr jg lahf add jmp fisttpl jp xor es sti rex.WXB (bad) gs movabs adc sbb pop xchg rex.RX negb xlat (bad) fild test insl std xchg fcmovnb callq movabs (bad) jbe mov push (bad) (bad) xlat add push rex.RXB cmpsl rex.WRXB rex.R gs data16 sysret (bad) xchg jb cltd pop xchg xchg cmpsb pop repz pop callq pinsrw loope clc jno jns (bad) icebp repnz or imul jp (bad) movabs ss fidivl adc adc mov fldt cmp cmp vmovhps pushq cmovg movslq xor leaveq rex.RXB lret mov ficompl nop jns jne add cmp xchg cwtl scas push rex.B fistl and xchg (bad) add (bad) test (bad) in push and fistpl cmp fcompl rex.XB jnp sbb xor retq scas cmpsl fistl jnp movsl (bad) cmc cmp mov sbb cmp rex.RXB (bad) (bad) mov scas cmc lahf sub mov push fwait adc (bad) fisttp cmp mov cmpsl xor movslq (bad) (bad) lahf rex.WRB pop (bad) and test out mov (bad) lods loope rex.WR rcrb (bad) std leaveq sbb fbstp pop pop push rex.WRB outsl (bad) callq (bad) leaveq test add out cmp outsl idivb lods cmp pop movabs cwtl jnp leaveq sbb fld loop mov jae adc pop or rex.WR addr32 ja (bad) pop sbbl xchg sub stos (bad) ss push fstpt jne movabs test (bad) ds sub push fldcw jae popfq rex.XB adc fldt mov jg xchg loop mov (bad) push pushfq insl jns fcmovnu add out (bad) rex.WRB mov mov (bad) in (bad) imul fdivrl fildl rex.RX add fildl mov adc cli xchg (bad) rex.X in in xor (bad) rex.RB fldt jp jb sbb rex.WR (bad) (bad) (bad) lock pop sub (bad) mov fcom movsb jrcxz adc mov ja adc movslq (bad) hlt (bad) je mov and jb jl pushq mov movsb cmpsl outsb pop cwtl adc (bad) clc adc in mov sbb pop cmp (bad) mov cld lods mov test (bad) test (bad) nop push out out fldlg2 adc cwtl rex.W fildl insl push out rex.WR rex.RB insl xchg jnp hlt test sti or cmp rex.W sbb or and out xchg mov insl movsl fwait cli repnz push incl add push icebp pop rcrb push cmp (bad) (bad) add xchg (bad) add fistpl cmp fistl out insb movabs (bad) insl add icebp jg xchg cs retq xor (bad) cwtl fldt gs mov (bad) (bad) je mov pop pop lret or test xchg xchg mov (bad) xchg (bad) mov xchg enterq outsl iret (bad) mov pop fmuls (bad) jno cli pop movabs (bad) pushfq in sbb pushfq cmp fldt es std cltd movsl fcmovnb lock out callq sti rex.WRB fs fs fstpt xchg iret insb movabs and int mov xor fcmovne push in (bad) nop repnz pop loop loope add out (bad) pop cmp jns movsb fistpl xchg je push mov nop pop pushq rex.XB cmp xor in (bad) xor pop imul cmp clc push rex.B jle cmp (bad) vshufpd fs adc xchg fimul mov lcall push rcrl scas out rex.WR xchg cmp (bad) not jno addb pop retq mov sarl jrcxz xor (bad) mov add fistl cmpsl jae rex.WRB rex.X mov or jmp cmp pop (bad) pop test icebp fwait and lret mov movsl (bad) jns retq sub sarl (bad) sbb rex.WRB rex.WB (bad) jnp jo add xor add mov xchg fisttpl imul xor ds pushq push jne (bad) rex.X (bad) fldl push fistpl fisubl jbe rex.WRX adc mov jle (bad) leaveq add iret fisttp sub outsl pop (bad) xchg cs rcrb out ficompl cmp rex.WRXB (bad) (bad) push cmp rex.XB xchg rex.R movabs jge pop outsl mov ds xchg jp cmp rcl or mov test pushq adcl (bad) (bad) mov int mov hlt or test out push (bad) retq scas push mov xor out fadd add jns retq ficompl lahf rex.B rex fwait icebp mov sahf icebp mov rcrl and test or icebp (bad) (bad) cmp (bad) add sub clc mov rcll or lock cmp faddl pop cmp (bad) (bad) jno sbb (bad) mov fcmovu jmpq cld fwait leaveq xchg addr32 (bad) repnz js shrl int3 adc lret hlt (bad) movsl xor cmp sbb rclb (bad) stc loope jno jns xor add add es cmp movsl pop jmp adc stc fildl out cli repz jb jg (bad) callq xor fcmovnu xchg mov sub cmpsl (bad) adc mov jne adc fcmovbe (bad) or sbb fs rex.WX or fadds mov pop xchg mul repnz gs pop pop jne nop jbe idivb xlat xorl sub loopne rex.RX repnz cwtl test mov (bad) adc pop adc or (bad) (bad) cmp in xor cwtl xor sbb cmp scas (bad) scas push fs mov (bad) pop insl add adc shrb mov add sub rorq imul sbb xor rex.WX leaveq or (bad) sub and xor (bad) rex.WRXB es cli stc pop rex.RB jle (bad) (bad) adc xor rex.WRX mov or push (bad) rex.WRB rex.WXB cli push movslq jg xchg rex.RX pushfq add rex.B es ficompl jmpq xor stc rex.WRX or jp (bad) loop (bad) out xor add and (bad) pushq (bad) xor loopne retq int (bad) jb hlt rex.WRXB sbb rex.B ja pop (bad) xor (bad) cmp stos cmp sbb imul in pop movlps adc cmp movsb (bad) pop xchg cli iret rex.X insb loopne (bad) fistpl sbb (bad) (bad) pop fist add and movabs xor sarb (bad) jnp xor (bad) out movabs in pop rcl xor imul add cmp push adc jrcxz rcr (bad) imul rex.WX sti pop pop pushq mov jae popfq pop out and xchg test scas loope fstpl (bad) hlt xchg adc insb andl fbstp jae rex.RX xor movabs lock push push sar xchg (bad) (bad) retq fcoml movslq movsl push (bad) add sbb cmp (bad) xorb ror mov fdivrs mov scas pop jle cltd fistpll sub frstpm(287 movslq enterq nop cmp rex.RB (bad) stc (bad) mov mov out rex.XB (bad) mov jo xor (bad) jrcxz rex.WX out pop pop mov mov cmp xchg adc sbb movabs push fstpl (bad) fidivr xchg test std jmpq movsl mov (bad) fs (bad) or (bad) (bad) sbb jmp js shll stc cltd rex.WRXB test and mov test sbb pushq (bad) test retq callq (bad) or push add xchg out js xchg insb push adcb rex.X (bad) (bad) callq (bad) shrb jno movsl (bad) sub mull pop (bad) movabs adc jae add fildl jns xor in lock fistpl sub and or (bad) jp out insl movabs rorb js scas (bad) or fcmovnbe (bad) or xchg sub xchg (bad) (bad) (bad) out jns pop je cmp ror jg rex.RXB gs sub or iret out pop (bad) jmpq fdivr loopne popfq mov push pop nop jle repnz incb (bad) rex.WRB mov fwait movabs jnp add pushq sub push (bad) rex.WXB lock mov (bad) movslq fstpt xor int jo xor and sub cmpsb fild fildl data16 addr32 rex.WRB ss ficomp lods (bad) and cld xchg mov xor (bad) hlt mov (bad) fistl rex.WXB ror frstpm(287 iret jmp repz callq fwait movslq fildl jg adc rex.W rex.RXB and rex.XB jle mov (bad) lock xlat add mov lods xchg movslq push clc cmp add in rorl loop (bad) or out mov insb outsl stos fs xchg jb sub sbb (bad) in out stos fldl (bad) roll pushfq (bad) (bad) scas fisttpll lods jns sbb (bad) pop and jmpq int3 stos pop or jbe and insl (bad) divl outsb es (bad) push xor popfq fist (bad) (bad) (bad) imul push imul and mov andb (bad) in loop sbb sub stos loopne xchg adc rex.WB xchg imul xchg push (bad) (bad) mulb or in mov movslq iret fidivrl movabs pop js rex.B gs movabs pop push rex.XB (bad) mov cmpsb shl jnp push sbb (bad) pop sti gs test in cmc loopne js callq (bad) js retq (bad) test xor mov lock mov (bad) gs or sbb loop adc (bad) push loope xor rex.R frstor or (bad) mov cmp adc jno leaveq icebp out cmpl mov push test (bad) xor retq (bad) andb push mov and rcr cmp enterq xchg data16 stos (bad) loope xchg movsl (bad) rex.X rex.WB xchg outsl std jne mov cmc adc cltd in gs sbb jmp jp fdivs sub mov xchg rolb adc movsb xchg retq mov mov lret (bad) push loope rolb cmp mov cmp (bad) loop insl rex.WR not in push sarb out (bad) data16 (bad) in (bad) cwtl pushfq pop cltd mov rex.XB sub add mov (bad) in pushfq (bad) jne ja imul (bad) fstps ds fs psllw retq adc jl test (bad) jle (bad) xchg shlb out cmp (bad) ss decb outsb push loope iret cltd mov pop adc in pop (bad) rex.RXB push rcrb add jno adc out cmc xor adc adc ja mov rex.RXB sti xlat loope or fwait ja push push pop push movabs ja rol (bad) sbb out rex.RX xchg ficomp mov mov push mov mov sbb and hlt sbb cld (bad) rex.WB retq cmp mov pop idiv outsl jmpq fninit sub cmpsl mov (bad) addr32 xchg sbb jb xchg mov mov popfq sub xor (bad) fcmovnu (bad) xchg sub loopne fcomi std insb lahf imul mov xchg (bad) idivb push mov xor pop (bad) mov or fwait loopne and xchg pushfq (bad) rex.XB and out mov (bad) fcomi adc cmp mov xchg jle xchg fcmovnu adc fnop outsl sti (bad) shlb (bad) (bad) pop rex.WX data16 or lahf fcom mov (bad) rex.XB lods adc cwtl lret mov addl (bad) jns int3 cs cli rex.RB ds cmp fldt (bad) lahf enterq push orb adc (bad) rol fistpl (bad) clc mov mov lahf lods mov rex.WRX add (bad) rex.B rex.WX ja outsl push rex.XB mov cmp outsl jnp adc testl mov pop adc and icebp or fistpl xchg idivb pop loope,pn fiadd xor pop cmp repnz push sbb fistl es rcll (bad) xchg (bad) (bad) cmp sbb rex.RB addr32 pop mov mov scas (bad) jnp mov (bad) (bad) cmp in fmull (bad) leaveq sahf xchg retq stos stos mov push rex.RXB adc inc fs (bad) xor fcomp mov (bad) add jbe lret callq test and mov pushq (bad) sti rex.RXB movabs fidivr fldt rex.WR enterq (bad) adc pop test xchg stos out cmp sub fistpl push and pop mov mov retq sbb fistl insb (bad) and mov (bad) xchg (bad) lret fnstsw xor andl lods jp pop sub mov pushq rclb es fisttpl fisub out rcrb cmp pop pop (bad) rex (bad) fwait add xchg push iret and rex.XB rex.WR adc sub imulb sbb or mov fildl adc enterq fisttpl (bad) sub mov jno movsb mov (bad) scas push add (bad) rex.XB callq cmp or ja scas (bad) xchg rcr addr32 cmp mov jns leaveq xor xchg mov scas fildl lock cvtdq2ps test movsb (bad) jnp (bad) (bad) shll movabs sahf lea popfq imul rex.R jl rex.WRB sbb repnz add jns cmp and stc fisttpl mov push cmp fstpl pop and rex.WRB ja add fstpt xchg pushq (bad) int3 mov cwtl pop cmc or mov rex jno xchg fstpt jbe outsl (bad) or fcmovnu mov rex.R xchg mov sbb mov mov in jge rcr stc cs push pop pop (bad) fnstsw repz adc sbb rex.RB imul repnz movabs fcmovnu (bad) mov jb (bad) nop fldt sahf cmpsl (bad) sub and outsb cmpl callq (bad) loop or (bad) rex.RB xor fisttpl repnz cmp (bad) movslq cltd lods mov jb (bad) add xor sbb and push lret retq add push ds movslq fstpt lahf rex.R sti xchg (bad) and rex.WRB ds (bad) xchg rex.WRX cltd cwtl xchg jbe xor add (bad) fcomi pop (bad) icebp cli (bad) loopne fucomi cmp or (bad) (bad) leaveq xor fildl out rex.R (bad) pop test ja add sar rex.WB sub retq rex.WRX rex mov mov pop out adc cmp cmp (bad) (bad) mov (bad) mov imul (bad) (bad) iret xchg jrcxz or loop gs movsl js xchg (bad) lock pop push jne mov lock out jb out and (bad) movslq ficompl sub outsl jnp adc callq jnp cmp (bad) xchg sbb mov mov and roll insl (bad) movb or push movsl rcrb xor cmc adc (bad) cmp pop sub imul xchg jle (bad) fildll push enterq fldt fsubs pop imul xor jle pop cld mov rex.WB clc mov jae (bad) icebp outsl xchg (bad) sarb push xchg nop mov (bad) cwtl mov rex.X sub stos sbb scas xor sub ror sub shl movsb add fild cmp jrcxz (bad) mov fbld repz callq jl sbb jnp (bad) repnz (bad) push or (bad) pop in cmp fsubl rex.RXB nop fstps cmp push lods es jae xor (bad) cmpsb xlat pop data16 and push pop sbb stos sbbl icebp xor add lea loopne sub bnd mov xor andl int3 add adc pop jb rex.RB rex.W (bad) xor cwtl pop repnz xor sti pop (bad) in push cmpl sbb mov push sbb jmpq imul cmp (bad) popfq insb push rex.RXB fild fisubr (bad) add cmpsb or cmc xchg or mov jae pop cmc fwait sbb ficomp (bad) jp scas out lods enterq pop in out jns icebp je cld jmp or xor std jge (bad) ror idivl and notb gs callq or int3 push (bad) push data16 fdivrp out in rex.W jg jbe pop fxch and test lods sbb (bad) lret rcr leaveq rex.W mov (bad) cmp fwait rcl andl lea adc push in out (bad) rex.WX add fist cmp push addr32 rex.RXB (bad) mov mov mov in adc sbb leaveq (bad) fstpl stos (bad) (bad) lret xor (bad) jo xchg adc mov add fs push sbb sarb add push mov hlt clc retq in push xchg sahf mov rex.R mov mov clc movabs jl adc and in mov fdivl or stc (bad) cld (bad) xorb in fs (bad) je cmp (bad) pop sub add popfq test retq add sarl ficom in (bad) movsl mov mov ds nop add pop xor repnz lahf xlat jmp rex.WB xor xor (bad) rex.WRB (bad) je jo pop push and fistl imul addl rex.WR (bad) (bad) push (bad) jp xor js adc mov jbe ds mul iret cmpsb imulb add rex.WXB adc push pop xchg lret pop xchg adc jns ja cwtl (bad) lea rol callq (bad) out adc loop andl xor retq jbe push (bad) or mov lret cmp cs jge loope mov (bad) cld (bad) lret (bad) hlt mov fidiv (bad) xor pushq jle push movsl mov or xlat or (bad) rex.WXB lock out jp jmpq fldcw fldl add (bad) and (bad) mov out repz out stc callq (bad) mov rex.WXB (bad) fisub push test loopne adc fstpt mov jmpq outsl retq fist in (bad) shll movabs push or mov mov loopne xor xchg sti rex.RX shll xor (bad) sbb sub pop in rex.R fsts cli lock jno (bad) cld sub pop sahf out jmpq testb (bad) movsb jg pop jae or add movsl mov enterq sbb or rex.W retq jb (bad) sub rex.B rex.WRB lock fwait pushq mov loop movabs retq (bad) sbb xchg xchg or push insb xchg nop xor cltd pop imul adc cwtl cld movabs in (bad) (bad) pushq fisttpl out shll add jns lock stos mov jnp sahf and xchg pushq add sti test movabs mov (bad) (bad) xor mov incb sar push repnz pushfq jne fcmovb xor cmp addb pop outsl pushq fistpll fidivl mov loope pushq loop loop mov cmp js (bad) pop xchg xchg mov xor jp cmp rex.WRB xchg rex.WRB iret imul (bad) (bad) out out (bad) movslq out adc in (bad) imulb xor stc mov jle adc cli (bad) rclb sub pop adc (bad) mov (bad) clc mov ss (bad) out mov xchg outsb movabs sar add or xor mov mov (bad) (bad) jo mov ss jns jbe push mov rcr (bad) hlt pop mov mov (bad) fistp or mov (bad) test callq ss cld xchg test (bad) mov out clc rorl xchg xor rex.WR fildl out jmpq movabs test stos pop cs jae shll test add mov rcr jge repz sub jmp and movsl lea jrcxz sbb rex.WRXB subl test int3 rex.WB rclb fstpt sbb cld cmc movabs fwait (bad) (bad) out fisttpl rex.WXB fldcw loope fcmovnu adc mov je jle (bad) xchg (bad) mov mov adc mov rex.RB movsl pop (bad) mov movabs xchg (bad) xor fcmovne adc lods (bad) int3 xor (bad) pop add movabs std (bad) sbb add scas fstpt (bad) pop popq (bad) or xchg (bad) add rex.RX sub lods and ds cmc cwtl hlt jp lret jnp jne shll scas rex.WX (bad) fnstcw mov loope rex.B cmp loopne jp or rex.RXB sahf cli sahf mov cld pop push or ds out cmp fisttpl bnd cmp xlat in jo sub sub jns (bad) sub repz mov (bad) rex.RXB insl in lret mov loope (bad) fisttpl sti xor int3 in mov mov mov jge push jnp rcr xchg adc popfq decl (bad) pop jno sub clc pop ja sub movsb lret xchg xchg jo enterq push pop retq ucomiss je neg xchg (bad) pop rex.RXB test (bad) add (bad) rcrb movabs lods push fisttpl mov or insl movsl jp xchg rex.WB sbb fistl cltd (bad) add fwait lret (bad) fsts hlt fsub jl pushq cmp sub clc iret jne movabs sub test adc cmc icebp rex.WX adc jo (bad) xor cmp hlt or push (bad) cmp ds push icebp (bad) fldl fisttpl push (bad) mov loopne cld mov out or or sub in rex.WRX or add push out fs adc sbb stc rex.WRXB sub retq push sbb shr jns enterq pop pushq lret xchg lock cld add movsb mov in (bad) test loope cmpsl lahf adc (bad) cmp sbb pop retq mov loopne rex.WRX fcmovnb xchg in push and rex.WRXB mov vpmulhuw adc in out pop cmc adc (bad) add sarb mov andl and fimull lahf mov (bad) pop (bad) retq (bad) xchg xor cmp rex.RXB or mov mov mov callq decb and rex.WRXB popfq fisttpl nop sub fstpt rex cs mov mov or movabs retq rex.WB leaveq (bad) lret nop (bad) (bad) push mov pop xchg rex.WR icebp fist pushq scas (bad) sub rex.WRB vunpcklpd iret xor retq ds mov mov sub callq push hlt jl or testb mov xor hlt cmp push fstpt icebp push jo (bad) xor and pop stos push callq fmuls test test mov (bad) cmpsl pop cmp in sahf pop jrcxz imul sbb or jbe rex.WRB (bad) adc out mov or (bad) jle rex.RB mov jo (bad) loop push pop fwait jnp mov add push stos fistl sbb push sub jb fldl (bad) jbe push testb rex.X fcmovbe cmpsl pop outsb (bad) movabs push adc fistp jp add movabs and ficoml xor mov jmp jae pop fwait (bad) and (bad) (bad) add push jne div pushfq sub imul (bad) xor (bad) jae outsb sti rorb and (bad) (bad) rex.WB icebp ucomiss shrb sbb rex.WXB jle (bad) (bad) int3 xchg (bad) mov loop sub (bad) (bad) fwait iret and iret sub rex.RX leaveq xchg add sub int and ja in movslq add rex.R pop sub movabs or (bad) (bad) pop sbb mov jrcxz jnp xchg (bad) loopne add movslq jae jno sbb insl mov ja add repnz or fisttpll add push js rex.B mov (bad) sub (bad) insb mov xor scas rcrq movsb in (bad) sahf rex movsb or pop and movabs pop pop ja leaveq stos test (bad) jge int3 loopne jl rex.RB repz rex.WX and mov movabs loop movhps (bad) sti jns (bad) pop loopne (bad) pop movslq (bad) xchg in jmp cltd clc fistp js leaveq retq xchg xor xlat or pop lahf rex.R leavew xor repnz mov sbb cld pop mov mov jns (bad) lea adc je (bad) pop sub mov sbb jo sti (bad) (bad) (bad) cmp sub outsl push cld and movslq movslq sub hlt rex.RXB cmc retq cmpsl repnz jle jne and in xor jrcxz (bad) jl sub fs rcll xchg cmp fild int stos out xchg (bad) rex.RB retq (bad) in (bad) or adc rex.RX popfq fistl xchg (bad) pop (bad) add or jns xchg push pop (bad) (bad) pop jmpq rex.RB in fwait push xchg movsl lret fiadd mov pushq fcom mov (bad) lret leaveq mov imul rex.RXB (bad) movabs cltd imul (bad) (bad) (bad) in popfq repnz in lret mov lret xchg roll xchg pop jge imul fsub rex.RXB sub mov jb xchg mov mov loop mov loop pop sbb xchg jge in retq in psubsw add add sbb ss sub adc and ja (bad) (bad) mov adc shll enterq notb xchg rex.R icebp jnp outsb sub pushq pop mov rcrb (bad) cld jns sti pushfq mov (bad) lret (bad) pop retq add sbb stc sbb stos adcl lret mov (bad) push fwait and mov rex.B retq pop pushq movsb in cltd (bad) cltd rcr rex.RB rex.WX (bad) vorps adc (bad) (bad) cld xchg lret (bad) pop xchg jno rex.R rex.WB sbb scas pop callq (bad) xor cmp test adc movabs push test adc ss lods divb adcl nop pop (bad) repz in nop imull (bad) sti push jmp sbb pop fdivrs fs jae imul stc pushq jg and mov movabs (bad) add repz fildll pop loopne fsubr rolb (bad) mov sarb jae sbb lret pop pop rex.RXB (bad) (bad) and fdivrs jno add movsl test sbb insb outsl mov fwait int3 add xlat lret (bad) and (bad) pop and jmpq iret mov fucomi (bad) jae add test and mov ss stc add fist pop mov jns fistl (bad) rex.WRXB cmp cld sahf xor jne (bad) (bad) mov cmpl (bad) mov in sub pop push (bad) imul (bad) clc gs (bad) rex.WR mov add movabs fidiv sub pop (bad) xlat pop movlps pop in (bad) fcmovnbe mov (bad) pop fildl sbb (bad) xchg callq shr movsb fadds mov int3 (bad) insb pop mov xor pop (bad) fisttpl jmp mov fldt (bad) mov fstpt in (bad) mov loope hlt retq sub out adc movsb jmpq pop js addb xlat iret out int3 jmpq (bad) push loope fistpl pushfq rex.WRB pop mov mov (bad) rex.WRXB jne icebp popfq ja jrcxz jns jmp mov scas test add stos fisub (bad) mov rex.WRB (bad) fnstenv rex.WR mov movabs mov add (bad) clc imul adc adc pop lea cli ror pop notl sbb fadds movabs mov cmpsb mov sahf (bad) fwait add or add xchg mov stc xchg fistl repnz (bad) fisttpll (bad) pop je out imul jl xor lods movabs xor xchg xor cltd enterq pop rex.X callq (bad) setnp cmpsb pushq rex.X fwait (bad) sbb ja xor (bad) jmp rorb lock rex.RXB faddp rex.RXB repz adc sbb fneni(8087 rex.W jge adc leaveq sub fwait movsl insl (bad) jmpq xchg (bad) or cmp fucomip adc add (bad) subl repnz fisttpl (bad) (bad) (bad) lock imul (bad) decb shr mov test fistl cli sbb mov (bad) repnz jge pop pop fisubr jl cli scas push sbb test mov cltd mov fistpl loopne jne stos add movabs (bad) sarl movabs push sbb (bad) stos repz mov idivb out cmp rex.WRB mov gs or mov (bad) iret insl callq (bad) (bad) fistp negl add pop iret in cmp sbb add add xchg fwait iret (bad) push push clc js mov (bad) mov adc xchg (bad) movabs addr32 mov retq lods ja js lcall xchg es pop vcomiss pop cld cmp nop jp add movabs (bad) pushfq imul movabs xchg jl jbe movabs (bad) fsts push cwtl imul rex.WRXB (bad) and jns vpackssdw loopne test cmc sar retq cmp ds outsl xchg and pop mov lahf xlat (bad) xchg (bad) adc xchg jp cmp fsub pushfq hlt testb pushfq lahf jnp push adc adc push pushq addr32 nop or cltd imul cmp or clc pop (bad) lock sub jg jrcxz xor fisttpl cmc push stos lods pop test (bad) fisttpl cld sar fimull mov pop (bad) shr pushq cmpl pushq clc (bad) scas (bad) rex.XB jle rex.WRB xchg sbb fs sarb shrb fwait andb cmp lock (bad) adc sbb rex.WB lahf mov icebp xchg xor rex.RXB test mov pop loop jge sub push sbb (bad) fcomi (bad) nop fistpll add rex.WR lret pop loope out ror pop jp (bad) mov (bad) push sti repnz lahf (bad) vphaddudq mov lock pop retq int pop rex.RX fwait xor gs nop fndisi(8087 xchg out (bad) imul rex.WRB mov jb fstpt jae stc push xchg cmp (bad) fildll mov (bad) rex.WX or (bad) rex.W rcrb pop std stos sbb es (bad) mov fstp js (bad) mov rex.R rex.W sti and and (bad) pop adc (bad) pop cmp sahf xor movsl vpmaddwd (bad) xor clc std mov sbb or callq int3 popfq movabs xchg mov cs sub pop pushq or scas pop (bad) and jg lods orb hlt (bad) iret sbb (bad) rclb (bad) pop sbb pushfq and jnp cmp sub imul data16 shlb rex.WRXB rex.W sbb (bad) xor mov mov pushfq push rcrl add hlt (bad) add and cmp fildl cmp pop fnop add and pushfq (bad) int or sub fadds adc rex.WR fistpl rex.XB lods fildl notl ljmp push xor (bad) rex.W jnp sbb sbb fistl popfq jo pop mov rorl xchg jno jg pop mov mov sbb (bad) rex.XB ss lods in mul pop sub iret rex.XB (bad) jmp mov and jg pushq mov xchg (bad) jne scas jg out icebp retq pop xor lock data16 insb xor hlt (bad) in (bad) jmp fistpll xor movabs xlat stos pop (bad) repnz jp jge (bad) sub (bad) roll sti adc scas addr32 jp rex.B ficompl movabs cmp fisttpll xor mov fldcw (bad) sbbl insl xor addr32 fistpl rorl fildl in mov (bad) sbbl (bad) rex.WX fs pop fisttpl sub push (bad) sub ja adc push pop lret (bad) movslq gs cmp rex.WRB rex.WRXB cs jno mov sub mov fstpt lea pop rex.RXB pop (bad) rex.WXB jnp fiadd shl (bad) mov adc fildl or (bad) xchg fdivrs xchg rex es xchg lods pop sbb (bad) repnz in pop fstpt push rex.WXB out cmp lock jns sbb lea fisttpl loopne insb jle hlt (bad) pop retq mov pop add cmp add pop (bad) (bad) pop rorb jp repnz mov jae rex.X (bad) jge (bad) jbe (bad) push mov retq fldt add or (bad) jmp cmp (bad) fistpl jl in rex.XB stos (bad) cmp lret fucomi add fbld pop push rex.WB or jbe jmp pop pop mov (bad) sub jae sbb retq push mov (bad) pop rex.WXB rex.RB mov mov rex.WX fadd cmpsb rex.WRB pop rcrl rex.WB gs mov (bad) outsl movslq (bad) (bad) xor adcb movabs rex loop mov lods incl mov pop adc retq test stos mov (bad) sarl out fbstp add rex.WRB imul fnop repz rex.WX cltd (bad) mov in hlt fldt js lock push fistl sub andl lods hlt sahf sbb jp pop cmc pop pop rex.RB xchg and cld mov cmp fs adc cmp stc rex.RB rex.WRB sub mov (bad) rorl sbb mov movabs lret es loop and xchg insb (bad) jrcxz mov pop (bad) std mov xor out (bad) sub (bad) mov rex.WXB lods mov cmp push or movabs xchg movsl pop cld test repnz mov movabs fstpt nop fwait sti test pop fstpt cmpsb push test push or fld mov (bad) push (bad) je mov pop fnstcw (bad) test out rex.XB xor (bad) and imul jno mov xor jb xchg pop cld ss test sarb popfq rex.WB loopne (bad) mov mov pop divb insl rex.WRB hlt adc (bad) es and imul lret enterq jo loopne mov xchg std rex.WXB mov push movsl movslq jp jl movabs imul sbb jp in and add mov or fistl and (bad) rex.R xor cli add addr32 or (bad) iret mov fxch fistpl (bad) scas retq stos push jbe cmp in out clc lea pushfq mov and addr32 fwait sbb sahf and fidivl pop and cmp fcmovnb imul (bad) nop out movabs cmc mov (bad) sub cmp sbb (bad) sub (bad) mov or xchg fnstsw pushq and or mov movabs shlb (bad) adc pop int3 mov subb fistl push xchg adc rex.RXB ja (bad) mov (bad) int3 pop sbbl sbb fstpt (bad) out pop enterq imul js xor idivl imul xchg mov orl (bad) (bad) pand or mov cli sub sub fldl (bad) imul icebp xchg or push (bad) sub loope or divb sbb xor fildl pushq addr32 fildl mov mov push fisub fstpt cmp out mov hlt fcmovnb gs xlat or or mov std outsb sub test (bad) cmp xchg jnp sbb adc lahf or mov rex.W fstpl pop sub adc fildl leaveq retq hlt or pop nop js mov pushq push (bad) mov (bad) fistpl rex.RXB and sub jrcxz fs mov or in jg fcomi push fwait (bad) rorb jb in sarb (bad) (bad) or repnz addb sar sbb rex.RX fucomi pop pushq rex.W jl and rex.R (bad) mov pop ja stos xchg fildl mov add in lret cs lea out addr32 sbb (bad) mov in and mov adc rex mov pop popfq rex.WRB mov or mov sub mov rex.WXB loopne pop sti pushfq imul (bad) repnz jg pop (bad) je mov sbb in (bad) addr32 or fcomps rex.WB jmp cs xchg rex.WRXB sti cmp rcl jle add loop and mov mov pop xor cmp std (bad) movabs int push rex.W mov pop loopne lods cmp rex.W lods (bad) in cmp mov lret addr32 ss rex.WX mov ss xchg data16 out jns frstor (bad) (bad) js sarq rcl xor cld push sbb mov sahf loope and mov rorl fst out int outsl jne or xchg (bad) stc cmp sub lods xor push (bad) jno rex.WRX fnsave sub xor fwait (bad) (bad) rcrl (bad) xor fwait xchg callq xor leaveq cmpsl pushfq push frstor rex.B (bad) shrl (bad) scas lret and jp xchg movabs fiaddl sbb add cld (bad) mov (bad) (bad) data16 mov (bad) nop add (bad) xchg jl (bad) cwtl (bad) je repz pop xor lock loop out movabs jp addl iret cmp imul jno outsl xor jp adc rex.B std lods add insb or sbb rcll ja cmp xor cld xchg (bad) (bad) insl mov test push gs jns lea lods int3 xchg xchg (bad) movsl rclb and cmp mov outsl adc retq mov je xor rex.RXB mov stc sub addr32 or movslq or fstl jns (bad) fild fstps fiaddl (bad) addps stos push in mov rolb (bad) pop or add std cmpsl push mov or xchg ja mov (bad) callq xchg (bad) xchg rex.W xchg or or retq out loope ficoml in mov sti test (bad) (bad) lock (bad) adcl adc (bad) mov sbb push pop push rex.WX xchg rcr xlat (bad) (bad) std lods rex.XB fst pop mov and test je (bad) rorl orb fistp ss pop repz (bad) fisubrl mov sbb or jp rex.RX cmp jrcxz (bad) sub or int3 xchg add loope (bad) sbb shlb jge xchg pop rex.WXB push jrcxz push xchg clc pop xor or test rex.W jnp jle scas (bad) xchg leaveq mov cmp sub cwtl stos jne pop push (bad) roll mov xor int3 fstpt (bad) rex.RX (bad) mov adc (bad) sbb rex.WR jne movabs pop xchg fstl ds cwtl (bad) mov sarl sbb (bad) push mov xchg rex.WRXB pop or mov mov stc nop fidivl fisttp (bad) ror rex.RXB jge jp jbe xchg (bad) frstor (bad) enterq push sub jmpq nop xchg sub (bad) data16 gs lods rex.WXB (bad) ss xchg (bad) mov pop rorb pop (bad) xchg jg lret push push xchg cltd rex (bad) out pop (bad) cmp cld pop (bad) lods sarl xlat fcoml rex.WRX je (bad) jne decl and lret out cld push mov loopne cli popfq mov xchg push mov repnz xor rex.XB rex.RB adc (bad) jno add imul fdivs pushq jmpq rex.R xchg sub push add or jbe out xchg fisubl or rex.RX lret xchg fbstp add idiv (bad) shr rex.WB jmpq adc mov and fistl insl js rex.WB rex.B push (bad) movabs (bad) jnp faddl in out xchg (bad) lret pop sets pushq pop or or lea mov (bad) std xchg fsts sub adc cmp sahf rex.W mov enterq (bad) xchg lahf xchg shlb fstpl test shlb (bad) sbb icebp rex.XB rex.WX rcrl cmpsb jmp stc test fsubp pavgb (bad) js cmp roll and icebp fidivr mov movabs mov lret pushq or fiaddl sarl clc test test movabs rex.RX (bad) add lret adc pop pop (bad) stc or xchg adc and add (bad) pop sbb fs xchg fcom adc push cs push out rex.WRXB rcll pushfq frndint out cmpsl rcr push push pop fimull rex.X (bad) (bad) jns and cmp cltd cmpsl sub fmuls imul clc pop movslq sahf sti scas icebp (bad) mov iret mov rcrl (bad) cmc sbb rex.R rex.RXB cmp nop or jle retq movsb imul cmpsl or xor jg callq mov cmp fnstcw repz mov xor (bad) sbb rex.WXB test retq sbb lahf push sahf (bad) sub and movabs rep push jbe jmpq pop (bad) pop or xchg mov pop (bad) or pop (bad) movsb sub fwait or pop fcomi (bad) in (bad) fistpl rex.WRB pop lahf (bad) fstpt sub incl rex.WR insb fwait pop (bad) lock jne pop adc mov push (bad) sub (bad) mov cmp rex.WX cltd pop fstp sub clc test sbb fcmovnb (bad) pop xor retq push xchg (bad) imul (bad) in shrl mov (bad) (bad) fstpt (bad) or bnd sub jp push xor mov or xchg jbe movslq rex.WR imulb (bad) imul mov sbb iret retq (bad) xor add sahf cltd and (bad) rex.RB outsb mov rex.WX movabs cmpsb jl pop icebp movhlps idivb rex.RB xchg fildl outsl mov pop sbb push stc out in jnp sbb mov sarl or popfq rex.WX or cmpsb or fcmovne mov vaddpd (bad) mov pushq mov cmp rex.WR (bad) fistl nop (bad) mov adc (bad) enterq pop movslq (bad) (bad) js repz (bad) movabs fnsetpm(287 cltd mov jg adc test enterq fisubl sub (bad) repz (bad) cwtl lret ss jo rcr push cld callq orl std (bad) out jnp add callq stos mov fistl (bad) std (bad) cld mov adc (bad) ficompl scas (bad) mov or (bad) callq (bad) in movsb xchg cld (bad) xchg mov mov retq nop cmpsl (bad) mov jmp jns pushq test jmpq in jrcxz mov loopne gs fisubl (bad) and rex.RXB pop xchg (bad) sahf repz or gs fidivrl pop fisubl je rorb lret pop mov test (bad) fdivrl lret mov mov jnp adc fwait (bad) mov rclb clc push lret cmp (bad) xchg pop adc (bad) pop mov std (bad) rex.W rex.W fwait adc cmpsl sub stos sbb shrl sarb insb imul sbb mov xchg xchg in mov xlat or lock loope (bad) popfq (bad) (bad) and cmpl sahf rex.WR (bad) loopne cmp movsl loope jb out outsb mov fwait shrb imul repnz lods mov mov retq lock cltd ja push jns mov mov (bad) and fldt xchg (bad) jl fsubs fs pushfq insl jmp cld pop add or fwait or stc pop mov sub xchg outsl and (bad) imul cwtl rex.R add fisttpl jbe mov (bad) and xchg mov fldt xor (bad) in xor int3 roll leaveq notb outsl (bad) lea fsubrl sbb mov xchg adcl lods pop xor data16 (bad) push movsl testb (bad) stc fstpt (bad) lret fdivs sub pop lret or adc jrcxz xchg (bad) sub jge fwait xchg js (bad) scas mov (bad) sub pushq movslq rorb add adc scas jnp std rex.WX movslq (bad) xchg jmp adc imul mov fnstsw or mov int imul sidt out mov and xor js push or out (bad) repz sti push (bad) out mov (bad) xor sub rex.WR mov add (bad) cmp sti (bad) mov roll or js jne push jp cmp (bad) jp xor pop rex.RX fwait mov (bad) addb fcomps movsb (bad) mov in adc mov jnp xor and rex.WX addl cmc outsl (bad) repz xchg push stc rcrl std rex.W rex.WRB xchg fs frstpm(287 cwtl sbb (bad) fndisi(8087 in lock iret sti (bad) (bad) ja adc (bad) jbe mov ds pop lret mov sbb sbb rex.WR roll sahf pop bnd fisubl xchg insb adc (bad) test lahf insl (bad) and fstpt sbb adc (bad) sti insb movabs or push xlat rex.RB cs lock rex.WR loop mov fistl sbb xchg (bad) in (bad) (bad) or sbb iret lods movsb sbb int rcll lret cmp cmp mov (bad) (bad) (bad) jae xchg xor rex.R incb int3 mov and xorl out sarl and push test fildl fdivr hlt fldt (bad) push (bad) xchg (bad) (bad) push rex.WRX callq jb cmp decl retq pop int3 mov adc (bad) push fwait (bad) gs fidivrl jmp xchg cltd clc and out movabs jne scas mov pop fisub (bad) mov (bad) sub nop (bad) fcmovnb xor xchg pop jrcxz (bad) stos mov leaveq (bad) popq cmp lea sbb in out push (bad) pop mov mov fadd rex.R mov ficoml xor (bad) cmp movabs sbb (bad) addl cmp insl in rex.WRB movslq jge mov in sbb cmp jmpq lret (bad) and sti (bad) or or xor repz mov (bad) fildl shlb movabs xchg (bad) cld xor push xchg (bad) xor (bad) mov shrl mov pop push icebp fisttpl sbb (bad) jp fmuls cmp popfq add sarl jge test rex.X rex.RB rex xor fwait loope (bad) or lock (bad) int3 jle add movsb jb push fwait rex.B cmp loopne enterq lock or outsl movabs cmp pop mov sub xor cs movsb rex.WRB scas (bad) (bad) (bad) (bad) (bad) icebp iret clc cmp cmp lods jb and cs (bad) rex.RXB cmp enterq loop xchg cltd leaveq mov fisttpl rex.WRB rex.X and lock adc out rex cltd in rex.RX sub (bad) test push mov imul (bad) xor xor gs pop fwait nop repnz push adc mov jnp and (bad) cmp sti ds (bad) mov movabs pop xchg xor repnz (bad) mov lahf mov clc (bad) xor pushq and (bad) icebp (bad) stos fildl js out rex.WX sub leaveq xchg sbb stos sbb (bad) in loop mov sahf ja fwait decb (bad) jnp rex.XB fs pop xor cmp scas add lock mov retq add (bad) pop push and rex.B rex.B cs int3 in rex.RB cltd push and (bad) jnp (bad) sbb ficomp rex.WX (bad) xchg cwtl (bad) (bad) fstpt cli retq fstpt xchg mov adc or cmp fldenv mov jno fistpl (bad) rex mov pop callq sbb (bad) fstpt stos es sub cli fistl xchg loopne movabs iret shll and jle rex.WRB repnz jnp sub fs pushq sbb rex ss cmp pop adc mov fildl or out (bad) imul add stos xlat or or xor imul add outsl neg jmpq jb out retq (bad) cmp shrb mov rex.XB rcrl in (bad) or pop lods fildl push stos sbb hlt xchg in rex.RB mov popfq lret rcr (bad) fimul out (bad) loopne pop (bad) (bad) (bad) (bad) stos je out rex.WRX fistpl jbe mov cmp int3 fsubrl lock sti rex.WX rex.WRB in (bad) push fistpll add rclb rex.RX fwait pushq mov sbb sahf cmp pop (bad) fildl sub nop (bad) retq (bad) xchg cmp rex.WR rex.X add (bad) retq mov jp test cmpsl sbb cld (bad) (bad) (bad) int mov (bad) sub mov xor rcrl jge adc xchg in pop (bad) stos fistl adc pop rex.XB rex.WRB sarb (bad) jno xor insl jmpq gs sbb loop fwait (bad) sti out jp xchg es jne cmp mov sub (bad) repz icebp callq cmp or pop and xor fwait test adcb (bad) ldmxcsr mov (bad) push (bad) rex.X adc ja mov push (bad) outsb cli rcr xchg test (bad) pop (bad) (bad) jge gs cmp (bad) jle pop imul mov fistpl push rorb movabs adc sar sbb adc add jrcxz movsb cld fstpt rex.WX rex.WRXB fcmovne (bad) lahf jno jmpq insl out adc pop test push fistpl cmc or enterq push rex.XB mov mov cmpsb stc mov mov cmp xor stos sub cmp pop mov gs data16 stc mov jae and test movslq or sub or mov in repz xchg repnz lret jno rex.WRX and (bad) scas add jp mov loope sub shl xchg or fwait pushq stos fisubrl sbb ss outsb loopne shlb (bad) (bad) stos scas jbe and neg or retq xor loop jmp jg fiadd mov jae (bad) out cltd pop (bad) xchg push mov retq es loopne pop cvtpi2ps in push cltd (bad) gs mov mov fildll pushq push (bad) sbb movsb movabs add mov callq sub jle mov fcoml movabs cmp int addl pop out test or or (bad) (bad) sbb (bad) xchg sbb xchg (bad) rclb sbb xchg cld and (bad) mov divl and lock movabs push and and jnp xchg cmp (bad) pop movslq (bad) jo in fiadd mov mov (bad) mov (bad) clc sar pushq js xor mov pop mov mov cmp add xchg xchg in sbb mov cmpsb leaveq add (bad) test jo hlt ficomp adc rex.WRX lahf sub fsts (bad) push jo (bad) leaveq xchg add sahf jmpq sahf sub jae and mov adc jmp push orl retq pushq cmp (bad) pand push movsl fstpt sbb push in (bad) fistpl (bad) sub cmc mov jnp je and fstpt fdivrl or xchg (bad) cmc lret sbb jg jmpq mov pushfq push jne mov sub mov movslq jno ficompl fwait or outsl movslq cwtl lahf sbb xchg (bad) (bad) rex.WXB fstpt ss mov pop shll xchg lahf cltd outsl adc mov fisub fld sbb sbb or add lahf cmp out pop add fbld xchg (bad) loopne pushfq and (bad) mov test xorl nop jg fildl sub (bad) mov ror or xor add xchg (bad) mov xchg adc pushq iret data16 rex.XB js repnz fildl jg adc stos pop rex.WR cmp (bad) (bad) loope (bad) lret loop add sti (bad) outsl (bad) or leaveq adc movsl ja mov jmp mov movabs rex.XB fwait xchg movabs (bad) jnp fldt out test rex.WB rex.RX pop stos rolb push sahf mov sarl mov loopne add (bad) xor popfq (bad) stc movsb callq cmp mov pop pop xorl std adc xchg ds (bad) rex.WXB push gs sbb ss adc lahf xchg movsb retq rex.X jge mov (bad) ficom iret sbb pushfq (bad) mov retq pmaxsw (bad) mov js fnclex lret fdivr leaveq or adc mov test fstpt jnp pushfq (bad) sar movslq (bad) xor lock rex.WX (bad) push packsswb mov pushq (bad) cmp nop mov ss (bad) leaveq fiadd imul rex.RB fldt mov enterq cmpsl mov popfq fucomi movabs not mov and imul push rex.B mov (bad) jnp jne (bad) fwait out adc sbb xchg mov (bad) stos pushq nop add outsb (bad) cmp je (bad) repz sbb (bad) imul (bad) loop ltr mov rex.B adcl sub xchg jnp cs pop int (bad) (bad) in out (bad) js movsl cmp (bad) pop pop cmp or mov int3 (bad) movslq mov sti jns sahf outsl rex.WB ja sub (bad) (bad) mov gs int cmp movslq sbb cmp adc sbb jno fadds rex scas movslq add fadd (bad) sahf movslq lods movabs es addr32 jl adc jmpq outsb rex.XB testl jge (bad) fcmovne lahf cmp add out push movabs lret push or xlat stos xor (bad) test fildl clc mov sub mov enterq (bad) jb pop fstpt rex.WRB xor in std (bad) movsb (bad) gs divb jnp cmp jp rcrl (bad) (bad) push (bad) jnp add add test rex.WR rex.RB (bad) int cmpsb movslq jbe (bad) mov cmp rex.WRXB add add nop addr32 xor repnz cmp adc jge pop out (bad) and out pop jrcxz push xchg movslq adc cmp (bad) rex.WXB popfq sahf mov (bad) movabs ficomp adc xor outsb pop and sbb mov and push jb pushq jns xchg sarb or lods jmp sbb fldt sbb insl mov mov ja xchg adc test mov fcmovnb (bad) xor adc rex.W (bad) sub movsb xor push gs ds rex.WRB rex.XB (bad) mov push jle test sbb lea pop (bad) mov jnp jae jo add (bad) xlat jmpq jp rex.RXB (bad) test mov add xor fnsave (bad) sub mov out push sbb jp test sbb xchg ds fisttpl jo mov cmc and (bad) or fistpl loope int sub sti fisttp pushq stos (bad) leaveq cmp mov jmpq (bad) rex.WRXB mov pop test sti rex.XB (bad) pop sbb cmp cltd xor rcrl movabs jbe cs sub in test rex.WXB gs pop jp stos xlat shlb fisubl push (bad) lea cmp jo push pushfq iret mov adc rex.RB xchg std (bad) (bad) movslq pop pop (bad) imul rex.WX add fwait xor xor mov lea or jmpq leaveq addr32 jp sub fildl and mov rex.RB pop retq (bad) mov mov rex.R cmpsl rcr enterq cmpsb or adc rex.WB push jne mov fist adc and in mov xchg (bad) int3 pop (bad) mov movsl pop loop js in pop xorl cmp pushq fisttpl rex.WRX rex addr32 movabs (bad) (bad) fcmove adc sti (bad) fcomi xchg sub movslq rex.RXB (bad) movabs callq rex.WXB out xlat fwait lock jmpq push mov xchg mov test faddl (bad) (bad) rex.WB rex.X jg (bad) retq (bad) roll rex.WRB fildl cmp rolb rex lods add sbb test or div pop movabs js push (bad) lods add (bad) test jp adc or (bad) mov pop cmp in xchg rex.WRB lahf pop movsb or (bad) rex.B int3 fs stos sbb movslq add mov fisttpl sbb data16 or sub xor (bad) cmp fcomi (bad) andl in (bad) lods rex.R es pop mov jae mov xchg out out repnz rex.WX mov rex.WRX pop (bad) and fldt sbb pushq fwait test xor cli jae movslq sbb pop loopne,pn jns movsb popfq fwait sub jne and movslq xor rex.RX fnstenv cmp (bad) clc (bad) mov mov cmp sub imul cmp cmp xor (bad) fstps sbb gs xchg mov cmp insb stos pushq imul retq jnp mov fldt (bad) movslq fildl (bad) rcl mov xchg rex.RX fistpl in out lret fistl rex.WB jmpq rex.X lahf jno (bad) mov imul stc movsl add fwait add pop rex.RX push cmp jno repnz iret insl and xchg out test scas loop xchg jbe pop movabs dec rex.RXB (bad) push add adc gs sbb in icebp std fildl fidivr push stos mov xorb cmp addr32 pushfq mov lret (bad) adc mov rex.R add mov (bad) push xor (bad) retq xor sub data16 fadd in cmp pop movabs pop int3 fstpt jae mov cwtl pop ficoml stos cmpsb sbb shl add callq nop subb push pop add push rol pop xchg xorl (bad) cmp insb std push jnp rorb jle pop cmpsl lret (bad) pop push jmp cltd out stos (bad) fs (bad) fcomi (bad) rolb jl out cwtl (bad) mov pop mov rcr frstor pop sub push rex.RXB adc sub xchg insl fidivr xor pop xchg (bad) mov mov pop roll adcb mov loopne iret (bad) xor shl lret jno (bad) push xchg rex.WRXB rex.WRB (bad) pop pushfq mov adc outsl pop jrcxz push pushq jrcxz pop mov psubusw jle sti mov (bad) sbb retq test sarb addr32 or out push (bad) shl jnp (bad) adcb in iret xor xor adc xorl sub adc (bad) gs jno mov sbb fbstp movslq pop lret shl sbb loope (bad) xchg test pop es leaveq pop mov sbb iret adc fistp or xchg imul lea adc rex.WR iret rex.XB pop (bad) pop xor sbb jrcxz in (bad) xor (bad) callq mov movabs push rex.RB xchg jns mov rex.WRX js rex.RB mov (bad) push ja cwtl lret test jmp lea push ja or jno (bad) mov pop jmp push add loope (bad) jp (bad) (bad) (bad) (bad) outsb (bad) and adc cwtl or mov cmp fstpt jnp sbb xchg (bad) repnz shlb jb (bad) jrcxz add jle sti rex.R movsb outsl add rex.W rex.W (bad) and mov fmull scas loope out fs movabs jne std test add in addr32 mov stos mov pushq (bad) retq icebp (bad) fisubr jg sub jmp jmp push retq rcrb adc (bad) (bad) imul jg popfq pop pop add (bad) xchg jl shrb stos (bad) scas fstpt add iret popfq fcompl rex.W repz sbb rex.R leaveq sub rex rex.RXB (bad) sub mov rex.RB mov jbe movb push rex.X (bad) scas sbb cmc and rex.WRXB fwait mov enterq or cmpsb fildl adc icebp pop addr32 rex.WX xchg out cltd push repz (bad) or and pop (bad) xor fistl and push (bad) fbld jl movabs cld (bad) (bad) rex.WRX jnp rex.X repz fistl adc mov and movl fistl (bad) gs (bad) subl or and jbe out push mov iret (bad) movslq fild push in or pop mov pop lea lock rex.WR rex.RB loop mov adc shrl rolb es pop mov jnp push mov icebp (bad) pop pop andl xchg movslq cld stc fcmovne rex.X sub and xor mov loop pop sbb push jae sbb lahf out rex.WRXB (bad) push in movsl addr32 xchg lods gs sahf fistp jns adc rcll imul in test (bad) (bad) sbb jp adc lret add fldt or stos or imul clc retq imul (bad) sahf sbb cmp enterq and (bad) or rorl mov retq jnp pop iret lods cmp fistpl adc (bad) fildl mov scas jbe int xor cmp int3 rolb stos mov pop outsl xchg pop movabs stos loop,pn mov gs jp je movsl fisttp bnd fmuls fldt add cmp rex.R iret xor test rex.WXB or cmpsb fstpt xor movabs add and callq lret adc sti pop adc lods movabs (bad) decl callq mov sbbl xor (bad) rex pushq ja fistl fcoms jle sub (bad) (bad) imul sub push out rex.WRX shr js nop out pop shlb mov movabs jnp addl lret (bad) cmp repnz fildll fmuls rex.X test sbb retq jae pop (bad) push out lahf ss or sbb rex.R (bad) outsb jrcxz (bad) (bad) scas jmpq cmp stos (bad) rclb fwait (bad) mov clts (bad) test jne push jle push fstp mov mov fistpl or (bad) (bad) adc clc mov std cwtl jne add pop push pushq rex.RXB rex.W cwtl (bad) add xchg xor jno movabs idivb jg cmp rex.WB je imul psubw jbe sub jle pop xchg in rex.RB movabs lahf adc rcll cltd (bad) js mov xor push and mov mov in mov iret push jbe jg xchg rex.WXB rex.WX (bad) mov (bad) movslq sbb mov movabs (bad) pop in outsl mov int mov scas fistl sbb rex.RX adc stos std loope fucomi or imul out nop cltd xor sub xor mov sub jge jmp (bad) jmpq lret imulb and gs jne loop fndisi(8087 movswl or (bad) out rol in pop (bad) sub andl xchg adc pop loop movabs fwait jrcxz repz jo fucomi int3 lods (bad) cmpsb jp (bad) movsl jnp fwait outsl retq adc jge rex out adc icebp iret mov (bad) rex.W scas mov mov scas push jge rcrb fistl fdivrs or movslq cmp retq mov (bad) xchg (bad) pop (bad) cmp fldt nop rex.X fucomi imul (bad) stc retq add lret mov mov hlt push sbb pushq add (bad) jrcxz (bad) (bad) ja mov and jle mov out sti mov scas (bad) mov rex.RB and cmc add (bad) pop lret rex.WXB jg gs pushq test add or cli loop rex.WRX movabs rex.W pop flds std lods movabs or int3 mov ds or pop lret xchg clc stos push fisttpl rex pushq (bad) add add lret fistpl insl stos pop iret push mov cli jae (bad) jne rex.WR rex.RX add iret sarl iret gs movslq (bad) mov push pop and lea fidivrl (bad) or rex.RX jb movabs jo and shrb mov (bad) add fcmovne mov (bad) imul fimull (bad) mov xor int outsl (bad) and pop sub fstpt and push test xchg loop,pn rex.R je sub stc jnp cmc cmpsl out cmp fcmovnbe adcb (bad) movslq (bad) sub (bad) fildl imul ja rcrl jg (bad) pop rex.WXB rex.WXB rex.WRX jb shlb (bad) lahf jnp subl js pop int3 (bad) (bad) xor mov in movabs sub xchg rex and pushq fistpl movslq fldenv pop add (bad) push sub pop (bad) pushq hlt or mov xorl add rcrb or jl addl mov (bad) xchg mov retq enterq push and outsb fimul (bad) cmp adc stos adc xchg rex.R sub xchg sub mov push mov (bad) fistl cmp (bad) rex.WRX mov adc mov jrcxz push fld (bad) int3 jg (bad) jle shrb jb pop xor cmp add rex.WB (bad) insl scas rex.WR (bad) fldt out pushfq pushq cmp (bad) and (bad) mov fidiv (bad) and out xchg lret push fwait adc mov movslq add xchg rex.W jle out sub pop cmp rex.X (bad) lret rorb pop (bad) je insb stos mov (bad) movabs jle mov fistpl out mov (bad) cltd fstpt or fisttpl test mov cmp cwtl add jmpq jl mov fidivrl outsw pushfq rex.R ja repz adc loopne mov or xchg (bad) mov loope add xor xchg rex.WR cmp (bad) (bad) movabs (bad) cltd (bad) in adc (bad) adc in shrb rex.W gs vmovntdq pop pop jg fisttp cmp addr32 cmp (bad) ss rex.WRXB jrcxz xchg lahf fildl (bad) rex.WX movabs out jge pushq rex.RXB rex.WB sbb fucomi adc pop add (bad) sahf rex.WX push cltd pushfq fcmovnbe mov repz xor mov fldt fistpl sbb rex.R xchg popfq scas rol add pop psraw pop rex.WRB rex.RB outsl jnp movabs (bad) callq xor cld fcmovne adc lock pushq lods jbe out js and adc movabs movslq pop data16 fistl sbb mov sub fistpl jo mov or mov fstpl rex rex.RXB rex.WXB pop and in jne test jle stos rex.RX insl rex.RXB rex.WX (bad) mov push jrcxz sbb fwait in sbb and movabs (bad) cmp xor push sbb adc rex.R movsl fndisi(8087 xchg lcall int (bad) test cmpsl sbb rex.X sar jne rex.RB lahf int pop (bad) mov cmp and (bad) jo jmpq lock fiaddl shrl loopne shrb sub mov jl xchg and pop push fisttpl (bad) or (bad) nop (bad) or (bad) or pop retq movabs fisttpl mov cs loope pop (bad) fstp js rex.B outsl scas jb cmp movabs adc (bad) adcl fldt push jle fdivs push movslq cmc fstpt cmp (bad) lock lahf jb movsl rex.WR movabs shrb pop rex.WR decl hlt test rex.WRXB pop loope (bad) jge rcrl repnz outsl xchg rex rex.RX sbb mov push std mov rex.WRXB sarb fs movabs lods push pop (bad) or mov sbb movabs out rex sbb jmp sbb jg push sub xchg cmp in and cmp test addb adc callq pop pop cltd (bad) ss push (bad) shld in pop ja callq xchg js fistpl push jl lods outsl add adc (bad) cld (bad) stc fninit cmc sub mov rex.WXB loopne add (bad) pop mov cmpsb sbb sti pop xor fildl xor rclb jno lret fldt rorl pop (bad) mov out fwait mov (bad) jrcxz leaveq movabs or xor (bad) fisttpl ja retq xchg jrcxz add fisttpl mov lock adcl mov mov andl mov test pop pushq enterq jrcxz push scas out hlt fs pop outsb insb in mov rex.WB fimul repz pushq jns mov and rex.WRXB rex.WB (bad) jo and or pop movsb mov mov adc (bad) rex.XB xor xchg out cmp rex.X rex.R mov add and test ss (bad) sbb and lret push pop xchg sbb cmp rex.RX iret lahf sbb xor jns cmp ds lret mov int or (bad) fcomi pop sahf movabs negl stos sbb in mov in stos (bad) jmp fstpt (bad) (bad) jge sub fcomi push nop mov (bad) fwait rex.WB shrb mov jmpq out (bad) out (bad) test fwait (bad) mov (bad) xor pushq add (bad) cli and imul pop rex.B test (bad) mov fistpl xlat pop retq int rex.B test push jle and imul sahf lret movabs add cmp mov rex.WRX jnp add imul cltd stos (bad) (bad) mov (bad) adc jl rex.XB jne sbb mov fidivr sub jae jmp movsl pop mov add mov pop sub rex.B cmpb fnstcw data16 divb rolb and ds cmpsb mov andl rex.WR xor fldt (bad) (bad) movslq add movl mov fisttpl cmp int3 cmp rex.W sbb (bad) (bad) rex.XB fsubs stos fisttpl sbb insb jg imul subb jp (bad) xor fwait or mov imul repnz (bad) cmp xor or sbb retq std rolb (bad) adc mov sub pop mov fstp movlhps sub rex.WR int pop lock in fsubl mov sbb cmp sub xchg jnp cli es lods out fistpl jno or retq mov mov cmp fistl pushq adc add mov je cmp (bad) lock add push test (bad) pop and push sbb push (bad) mov rex.XB (bad) jmp js out std fisttpl rex.WRX nop leaveq and retq lods adc xor pop mov rex.WRXB cmp xor rex.WR fistpl movabs std mov rex.RXB movabs fwait cmp imul (bad) rex.W ja cmc (bad) outsb jnp ficompl cltd jnp add jrcxz mov retq es pop cmpb add and loop pop mov (bad) movabs xchg rex.RX sbb fwait (bad) sbb pop lods rex.XB in mov pushq xor mov pop pop mov add (bad) xchg jbe mov in jnp mov cld fildl or (bad) testb fstpt icebp fisubrl or cmpsb mov (bad) xchg movabs or sbb or mov pop push gs cs pop fs and fcmovnb (bad) fdivs sbb icebp (bad) xor cwtl in jns jl (bad) cld (bad) ss ds cmp mov repz push retq and mov cmpsl fucomi mov cmp cld js push fisttpl fcmovbe (bad) rex jno jmpq xchg fildl mov movabs lret or pop jae (bad) mov cmp jp jrcxz or fildl out xor pop ds sahf lret fdivl (bad) rorl rex.XB neg xchg mov sahf out sub (bad) fcmovu (bad) cwtl xchg pop rex.WB fistl push movsl or xor rol sbb xchg sarl pop cs push int xor jnp xor adc std mov or (bad) int3 hlt fwait (bad) rcrl out push (bad) add add and xchg pushq (bad) sub out sar repnz mov icebp jne (bad) xor sbb mov mov subb rex.R jp (bad) pop jle scas add (bad) movabs out add fwait clc sub (bad) stos xchg xlat cmpb push cwtl pop (bad) and jno push xor ja pop or rcll repnz jmpq fsubrs jp mov fstps (bad) fiaddl (bad) xchg (bad) mov (bad) repz or adc fwait (bad) fwait cld loop mov jge sti rcrb pop pop outsl shlb enterq fbld adc and push scas (bad) notb xrelease rex.WX es rex.W addr32 in in loop (bad) pop rex.WR sbb repz fildl mov (bad) mov (bad) or (bad) fcmovnb mul jne int3 ja pop jl imul cmp andl (bad) xchg pop out test mov in (bad) movabs out jl fcmovnu mov cmpsl and retq jbe add jo iret push jl jns (bad) mov out cld cwtl (bad) and js sub mov (bad) clc fstpt rex.WB xchg fldt sbb rex.W cs mov data16 push jge rex.RXB lret pushfq cmp mov jg cmp out xchg xchg iret adc popfq or movabs cmpsb sarb xor (bad) (bad) jge mov mov rex.RXB pop jmp outsl stos ja mov mov (bad) (bad) fcmovnb es adc adc repz add mov add (bad) jnp outsb rex.WRXB imul stos adc clc mov rex.W fisubrl mov jg xchg mov (bad) imul retq pop test cwtl lret pushq pop jmpq jb jrcxz,pn sbb (bad) in rex.R (bad) imul mov stos test loope rex.XB fcmovnb (bad) retq push sbb ficompl push imul (bad) mov sti fs faddl xor fildl fs jb repnz clc adc scas jnp jle (bad) fsubrs (bad) mov (bad) (bad) adc adc iret cmp fistl lods js out mov jo jnp mov pop (bad) (bad) in adc stos in ss stc cmp in jnp rex.RXB (bad) mov cmp sbbl (bad) test jne (bad) pop movl pop (bad) rex.WRXB sub jnp pop push fstpt movabs popfq adc (bad) push cmpsb add sub mov (bad) popfq mov fsubl stos push sub xchg or (bad) ss fs negb pop (bad) callq sahf in or in cmp imul pop insl (bad) movabs cld test loop xchg fildl ss cmc rex.WB flds mov fstpl movabs fisubr mov and subw out rex.WB rex.X (bad) (bad) rex.RX movabs iret cmp and fneni(8087 (bad) subl cmpsl add push sbbb rex.RXB rex.WXB sbb (bad) (bad) (bad) or clc push (bad) sti (bad) retq add cmpsl ds and repz rex.WXB sbb ja fistpl pop out insl mov rex.XB or xchg mov jbe (bad) and out rex.WRB adc adc (bad) (bad) in rcrb sub push subb cmp pop or rex.RX (bad) in sub or (bad) push ljmp loopne lods shrl retq mov fcmovnu mov xor (bad) jmpq push lods fs in rex.X adc lea test outsl fldt jg jle scas push xor pushfq repz mov fidivr xchg fistl int (bad) (bad) push fwait es cmpsb rorl pop movabs fwait xchg addb out insl es fldt in add or leaveq sahf orl (bad) in add loopne or (bad) int jmp pushq cmp pushfq (bad) xchg (bad) jl pop cwtl rex.B rex.WRX mov movabs popfq (bad) rex.WRB adc stos pop clc test insl (bad) cmp (bad) or sub sti in iret icebp fisttpl lahf loope (bad) jo mov lret xor mov mov (bad) (bad) mov sbb movabs movsl lods fcmovne adc rex.WB orps (bad) roll pushfq and insl sti fwait cli fstps sbb cmovnp and imul cmp mov fildl (bad) fisttpl addr32 mov leaveq int3 pop jl lahf rex.WRB jrcxz jg imul (bad) int3 js rex.X loop push mov fcomi sbb pop rex.WXB (bad) cmp cmpsb enterq xor stos movslq jae movabs (bad) pop xor subl movabs and rex.XB (bad) insb sahf lahf rex.RB sub rex repz xchg imul lret (bad) rex.WRXB (bad) sub fcmovnbe or (bad) loope movabs lret cmp or fcmovnu loope movsl pushq or mov or int jae pop icebp ja stos xlat mov fmuls add mov pushq or xchg in (bad) rex.WXB xchg fcomps leaveq or xor mov (bad) pop pop notb rex.WR scas in jle (bad) fisttpl insb in out pop outsb add (bad) and adc cli xchg cmp sub sub xor fcmovnbe out jl sahf rex.WRX sbb ror scas mov fildl (bad) mov (bad) (bad) pop sub rex.RXB rex.RXB mov xchg rolb (bad) lret mov fldcw sbb outsl cmp fdivrl jno (bad) orl lret (bad) cmpsl mov cmp and loop imul cmp clc or pop (bad) jbe retq mov xchg fistpl rex.RB rex.RX pop (bad) pop mov jno add xor sbb xchg sbb test fndisi(8087 clc cli jge (bad) (bad) addr32 rex.R outsb mov sbb xchg insl pop cmp fsubrl xchg mov xor lods test jp fs and stos push cmp sbb rex.WRX popfq (bad) enterq cmpsb fimull adc sub fnstsw sub shlb fstl sahf lods movabs imul movswl movabs mov adc pop cmc mov test add sbb pushfq popfq (bad) insb gs (bad) mov push pop fisubrl iret mov lret jns add pop rex.W xor ss and rcr mov pop test sbb (bad) mov stos lods jmpq imul adc fistl fiaddl jno adc fdivl pop rex.WR or xchg pop movabs rex.WRX jp sti fwait pop xlat push pop fcmovnu jl scas out rex.WXB mov rex.W jne jle sbbl retq (bad) cmpsl int push (bad) in sbb rex.WB jl cmpsb xor bnd (bad) xchg cmp fucomi mov mov jmp pop or jl rcrl rex.WR rex.RXB sti (bad) (bad) xchg xor retq pushq (bad) adc pop rex.RX cmp test es and jno movsb imul fs loop enterq pop cmp jle retq repz (bad) cli imul push (bad) icebp fstpt pushfq rex.WXB and (bad) sti pop fisubl and xchg fdivrl scas neg (bad) (bad) jns imul pop xor xadd stos rex.WRX rex.WXB (bad) fisubr mov sub pop mov cmpsl js lret cmp xchg rex.WRB ss lea int3 lret rex.WR es mov (bad) in rex.W (bad) cmp or pop sbb (bad) cmp test sbb push js (bad) mov sbb cmp (bad) mov jmpq xor xor fidivr adc or adc xchg test pop cmpsb adc clc loopne jnp in jae fstp push hlt or data16 test movsb retq cmp (bad) rex.W (bad) repnz addr32 out mov xlat fwait push jle pushq (bad) xchg mov repnz test mov xchg pushq rex.R cmpsl pop (bad) callq pop mov add xchg (bad) (bad) (bad) xor lea movslq rex.XB clc pop sbb fistpl shll xor mov or jae mov (bad) jmp repz (bad) stos mov xor sbb jg fcoms je rex.RXB out test insb jg fistpl (bad) decb xchg sbb mov data16 fnclex (bad) xchg (bad) mov fildl xor fisubrl sub lret imul int3 cs mov nop cld (bad) mov loop jns sti jb ja retq rex.RX xlat jbe xor stc jnp pop (bad) fistpl fs mov mov add and mov fidivrl (bad) lcall fistpl (bad) mov ficompl in lret xlat (bad) or fldcw fwait jrcxz fwait adc insb sahf rorl fldl movabs movabs xor leaveq shlb push movabs xor cmp jbe jg pop add sti nop shll jle adc mov (bad) (bad) jge sti or jns cmc pop imul subl stc rex or cmp pop enterq xchg rex.WRX rex leaveq js rex.WRX test sbb pushq (bad) rex.WR fisttpl rex.WRXB out out mov rex.WRB repz mov jg xchg lcall pop rolb and cmc fldt xor mov xchg fstpt and ja rex.WX movsb xchg imul out fstl rex.WXB cmp mov hlt in or (bad) xor rex add cmp in fwait rex.WB (bad) (bad) scas (bad) mov repz mov pop and mov pop shll rex.RB rex.WR ds xchg and ds movslq jrcxz and (bad) adc fldt out cmp movabs sbb jo out fstpt cmp or movabs lret rex.WR mov mov movabs (bad) cmp test cmp movabs xchg test xchg (bad) (bad) insl jp jae cmp cmp lods jno lock rex.W outsl out and add es rcrl lea and fnsave pop or (bad) mov and mov sbb movslq xor cwtl (bad) cltd sti (bad) jbe mov mov sub repnz mov movabs rex.WXB push pop jg adc cmc and mov in stos (bad) cmp pop callq in xor (bad) jrcxz (bad) cmp clc lods xlat fwait rex.B sbb and jmpq loop loope rex.WB sub jnp xchg fistpll iret and (bad) (bad) and scas ss fldt (bad) pop or (bad) gs sbb outsb xchg jno pop push mov (bad) lea or push or and (bad) and mov retq mov test sbb (bad) mov mov sub xchg push (bad) adc mov jle rex.WXB stos xchg push and jmpq (bad) jrcxz or fwait mov mov pop adc rex.WB (bad) (bad) fidivrl lods (bad) imul lret jnp sub add xchg fucomi ffree xor sub movsb pushfq sbb (bad) push push rex.XB fldt push or fcmovnbe loop cld insl jnp cmp mov jbe rex.X imul pushq loope xchg ds (bad) movzbl fldt add fcomp test mov fidivl fistl lret (bad) push fcom (bad) xor mov rex.WRXB cltd insl pop roll rcr repnz jp xchg (bad) (bad) test imul rex.WRX add stc (bad) rex.W lret sbb rex.WB fildll popfq out push lret jo xor cmpl jns pop xchg mov (bad) sub orl push (bad) xchg cmp jne mov fcmovne sbb or out pop rex.RX adc (bad) je (bad) (bad) mov mov xchg rex.WRX rex.WB jb fmuls orb pop fwait mov pop out js fcomi or in iret mov fmuls repz out (bad) (bad) or in imul lret in movsb test (bad) pushq sarl mov in (bad) gs sub (bad) imul repnz (bad) or push rex.RXB movabs in (bad) testl lret shll subl pop popq repnz jle ss or jno (bad) jo pop stos (bad) push callq lods vxorps cmp (bad) sbb ss xchg rex.WX jmpq (bad) mov xchg rol cli subl pop pop rex.XB rex.RX movsl scas push and retq sbb xor fmull pop lods and (bad) sbb jp sub scas sub std movslq jb xchg jle test faddp out sti pushq rcll insb mov mov or lret out int pop lahf (bad) loopne movsl cmp (bad) js cwtl sti xchg (bad) (bad) movabs nop (bad) sbb xchg test sbb mov push or addr32 sub or jge (bad) pop lods shl rolb jl cli cltd mov cmp or lock pop mov (bad) (bad) cmp fwait cli mov (bad) (bad) jmp fcmovnu adc mov jg (bad) fisttpl cmp cmp maxps (bad) (bad) movabs xchg sub fldt push and (bad) in cli test movabs int jmp loopne lret retq xchg mov push cmc push sbb (bad) (bad) rex.WX int fisttpl pushfq outsl rex.XB mov (bad) cld (bad) sub rex.WR fistl mov movsb icebp rex.RX pop sbb lret pushq mov add pop fildl jp pushq cmp jmpq movabs rex.WRXB pop mov pop sbb mov (bad) (bad) cmc jnp fisttpl xlat pop hlt rex.WRX retq rex.XB cmpsl rex.WR rex.RB rex.R or jbe mov pushq pop add loopne cmpsb or orl (bad) cmp lods sbb fstpt imul (bad) jne enterq loope sti sub pop stos test push or cld (bad) outsl test mov stos jrcxz,pt fwait xor pop and fildl pop es outsl push fsubr rcrl push cmp cmp jmp imul outsl (bad) fcomi pop xor popfq (bad) outsb (bad) mov in pop mov mov (bad) mov fistpl sarl movabs jnp and cmpsb fdiv std insb (bad) push idivb cltd sbb lea or pop and xchg insb lahf xlat push scas jne fisttpl (bad) xchg fiaddl (bad) fsubrl cmpsl or fldl movsl or mov sub jb jnp add pop out jno xchg lret rex.WR mov pop rex.R outsb (bad) cmp fildl add (bad) sahf jmpq loop (bad) repnz sbb push pop rex.WXB sub sbb movabs cmpl shrl sbb pop fldcw rex.WX sub rex and movabs fbstp int imul add jns adc rex.W add mov xlat pop cmpsb sbb push or rex.WB (bad) sbb leaveq pop mov scas xchg enterq (bad) fcmovnb push add (bad) rex.XB jmp imul ja repz lret xlat fstp cmp rex.WR test or cmpsb push pop jl mov lock insl jp data16 (bad) jnp movabs je (bad) movabs adc rorl fistpl (bad) pushq or clc sbb mov fisubrl cld or (bad) enterq add movabs jp (bad) xchg int3 and (bad) (bad) fldt lock scas rex.WX (bad) or xor cmp and (bad) adc xchg in adc mov (bad) lret std xor sbb repnz mov mov imul cmp cmpsb movslq (bad) xor (bad) mov out add mov sub (bad) scas in imul (bad) jge (bad) mov stos fbstp mov pop (bad) cmc out addl add mov (bad) (bad) outsl mov scas mov popfq and mov insb out jo in out pop rex.WB addr32 sarl rex.WRX pop push cltd (bad) lock out xor rex.WRX (bad) retq pop (bad) and sbb sti push cmpsl cmpsb jae cmp rex pop pushfq movabs xorl rol loope mov lods fimul push int3 shlb mov sub lea (bad) je push fmuls fisubl jne (bad) adc (bad) mov addr32 cwtl lret add cwtl push pushq js (bad) jg mov (bad) repz push rex.WB pushq cli sub sub rex.RXB fnstsw out adc (bad) xchg fs movslq mov testb cli rex.RX fwait push sub sub sub in adc (bad) pop jnp sti xchg jae loopne cmpsb pop and sbb cld lret and (bad) xchg in in cmp fwait sti adc mov (bad) ss (bad) clc xor unpckhps jne in pop fmulp sbb popfq xchg ja and mov cmp xor mov ja gs sub (bad) cmc xor rex.RXB lret rex.WRB rex.WXB repz mov outsb xlat rex divb lret movabs jbe jrcxz cmpsl movabs mov out sti adc jl (bad) fcomps pushq or mov movabs cmp rex.RX jno mov (bad) pop test add cmp push pop and movabs cs adc cmp xor mov push mov mov rex.WRB xor mov push (bad) loope cwtl loop xchg in or (bad) or pushq mov rex.WRX movabs (bad) mov fisttpl fstps rex.WRX and rex.RB out insb mull jp gs mov rex.WRXB mov mov sar jno mov pushq rex.B jmpq rclb pop stc rcrl movzbl mov je sbb adc (bad) mov add fstpt pushq leaveq push (bad) adc pop mov movabs (bad) mov sbb and (bad) lret cmc and adc enterq (bad) popfq rex.WR rex.RB cmp (bad) (bad) (bad) mov (bad) lods jnp (bad) std push mov fwait xchg icebp jns in xchg mov outsl mov rex.R or fisttpl push jne rol pop lret jae jl (bad) stos movslq ds pop jp add (bad) cmp sbb fucomi jle jno movsb sub fisttpl rex.RX rex.WRB xchg (bad) xor rex.R pop push (bad) fisttpl in cmc adc push int lea jbe xchg (bad) or vshufps sahf out sub sti mov (bad) and retq mov (bad) xlat (bad) adc fnstsw sub loop or rex.WXB mov stc (bad) fnstenv sub movabs and ja rex.W (bad) cmp lods or test pop rcr (bad) xchg sbb add fwait pop (bad) jge xchg (bad) idivb sub idiv (bad) ja adc mov (bad) sub (bad) lcall fdivr push jp (bad) movslq push scas out lock leaveq push (bad) (bad) push (bad) js cmp pop add retq add jle rex.RB ja cs pop out mov mov lock rex.XB data16 ss adcb stos (bad) cwtl fwait callq rex.WRB sbb movslq jo addr32 and sub stos mov scas mov sbb (bad) movabs sbb xchg push or pop (bad) (bad) mov add xchg xchg pop cmp (bad) iret and jne push pop movabs rex.WRB je addr32 push cmpsl (bad) cli adc clc rcrl sbb (bad) (bad) mov or icebp fcmovbe insb xchg mov cltd mov scas fisttpl mov fstpt or (bad) sub jno sub fildll imul (bad) movabs sbb xor popfq loopne mov lahf int3 rclb clc (bad) cwtl xor rex.B xchg fbld int3 iret ja or (bad) jnp xor sub (bad) out rex.WRXB mov stc rcr icebp pop (bad) mov rex.B pop movabs (bad) add (bad) insl stos sti and xorl jp sub push fwait rex addr32 xchg jl (bad) out movb or cmc (bad) sub push mov rex.RX je jrcxz push movabs (bad) mov or test push sti sub xlat outsl movsb cmpsl fstpt cmp add loopne pushfq movabs fwait loop xchg rex.WRX fstpt (bad) mov adc add pop xchg (bad) cmpsb roll sbb mov fisttpl enterq adc stos jmpq jl mov (bad) add pop and (bad) adc fucomi sti pop (bad) ja and pop imul xchg in (bad) out xorl rex.RX rex.WX jnp or pop ja push mov mov (bad) and mov lods movabs movabs shrl fmull fistpl addr32 fiaddl std imul ss rex.WRB sub lods movabs jbe callq rex.R imul clc outsb (bad) cmp sahf pop int (bad) cvtps2pi fcmovnu test fmul fistpl (bad) fisttpl sarl (bad) sarl stc fidivr scas fisttpl (bad) add adc pushq cmc mov jb add data16 sbb scas stos push rex.X lock jb lahf fmul (bad) sti mov (bad) mov jne outsl mov sbb mov retq sbb cmp push (bad) pushq adc lahf fstpt jg fwait outsl xor fistl mov in data16 add cltd pop (bad) fildl (bad) (bad) icebp mov mov out sub fisttpl xchg push and mov mov outsb js (bad) std (bad) mov push fmull test add fneni(8087 (bad) add out sbb xchg pop xchg out decl sar mov rex.RB outsl cli add add mov (bad) loopne (bad) sti mov pop rex stos sbb rex.WRB fwait xchg sub movabs push int sbb hlt clc mov mov fistl sbb jle lods xchg or cmpsb lods adc (bad) fstpt mov fwait rex.RXB int3 mov (bad) sub fistl gs out ficomp and pop jmp rex.R (bad) (bad) (bad) mov (bad) add imul (bad) out and mov mov repz rex.XB jne stos (bad) sub retq (bad) pop (bad) rex.WB sbb mulb mov jns hlt retq stos sti xor lret loop pop rex.R lea ja or or (bad) xchg loop cs adc sub clc sub xor and rex.WB (bad) movabs (bad) sub mov movabs (bad) fwait (bad) rex.WXB fsubp (bad) or xchg cmp push pushq jbe cmp hlt fwait pop (bad) repz mov push sbb sub repz xchg xchg movabs cli fstpt rex.X push (bad) (bad) jbe fisttpl mov scas pushq mov sbb push outsb mov fistl (bad) bnd sbb testl mov (bad) (bad) fwait cmp and rex.WRB and rex.RXB sarl loope xchg jg sbb imul xchg movslq (bad) clc xor fistpl cmp or stos push push data16 xor push mov flds fcmovnbe or (bad) stc cmp negb std fcomi push mov test imul mov push xchg jl (bad) sbb jns rex.X cmp (bad) fwait mov rorl and fs fstpt loope sbb movsb rex.RX pop fwait or jrcxz jo sbb xor add jnp xor int (bad) (bad) pop jo loopne movabs outsl fistpl cmp cld push pushfq (bad) lahf jae movl fwait pop xchg xchg jmpq cltd data16 movabs xchg stc (bad) (bad) (bad) mov fcomi add (bad) (bad) push add fldt sar push adc mov movsb (bad) movabs loopne incb add xlat scas push (bad) movsb js nop movsl vzeroall movsl in fidivrl xchg ficom cmpsb leaveq enterq (bad) mov xchg popfq rex.R mov mov jno rex.WRB mov (bad) mov xchg or (bad) out out loopne add mov pop (bad) lahf jae add push andl and and lock rex.X fcmovne mov gs fsubp cmp icebp xor rex.WXB cwtl fidivrl push cwtl scas (bad) outsl sti ja lret sbb test fldcw and xchg repz ss rex.RB (bad) cli xor (bad) iret fwait (bad) mov (bad) and jno insb mov ja retq push sbb retq push mov (bad) out fistl out jl retq pop (bad) pop (bad) std lahf hlt pop out (bad) (bad) mov xor pop adc jl fwait cmp (bad) (bad) out fpatan add pop movslq fs xchg rex.WRXB enterq movabs pop (bad) (bad) pushfq or sahf sub ja fisttp test fcomps fstpt add pop test mov pop rex.XB ja add (bad) mov sub fidivl (bad) stos fdivrl cmpl pop rex push fcoms (bad) jnp (bad) lods add xchg movabs jne fistpl (bad) imul mov movslq retq test push (bad) pop (bad) cmp rex.RXB push jle movabs fdivrl rex.XB mov rex.B (bad) pop jb movsb xchg test fistl fldenv pop rex.WR rex.X jrcxz lea cwtl add imul movhlps mov push (bad) in (bad) mov (bad) loop cmpsl cld movabs fs movabs rex.R and (bad) jrcxz (bad) sub rex.WXB xor and lret or sbb jrcxz sub and nop outsl sub stc (bad) movslq cld mov iret xlat fidivl test ja pop cmp loopne pop mov fwait xor int xchg push cld int3 pop add add retq cld (bad) sbb fnstcw mov jnp jns mov or scas jle (bad) push add fstpt cld sub sbb (bad) insl (bad) fcmovnbe and fimull pop mov movabs cli jb rorb fwait mov cmp rex.WB rex.WRB sub movabs adc (bad) mov adc sbb (bad) fldt syscall not out jle (bad) mov sbb hlt pop pop add push incb xchg imul (bad) push js retq xchg sub outsb xchg fldt and lret fcmovne fs and cmpsb push xchg mov rex.WRX (bad) push fst mov jnp and icebp jns rex.WRX mov stos (bad) shrb clc lret lods xor pop push rex jp outsl mov movabs mov (bad) add or imul scas or mov xlat fstpt and icebp (bad) pop fisttpl test mov jne sti out cld sub adc adc loop repz std and (bad) jrcxz rex.WRXB xor lock jmp mov and jo mov shr adc mov lods add (bad) rex.WXB (bad) cmp and imul faddp mov sbb movabs rex.R pop imul rex.WRX adc (bad) ss cltd sbb cli pop addr32 mov lret xor (bad) hlt bnd jnp out rex.XB xchg adc pop xchg mov insb retq add lahf movslq mov mov (bad) idivb and loope in mov mov test push cltd retq repnz stos movabs push (bad) sbb fistp jnp mov sub rcl xor rex.RX data16 (bad) pop roll in rex.R loop mov xchg pushq push adc xorl cmpsb subb mov cmc (bad) (bad) loop pop mov lret movabs popfq (bad) sbb sub and cmc xchg push rex.XB sbb sub cmpsb sub jg rcll sti rex.W pop imul repnz mov repnz ja sahf mov enterq int3 int pop loop (bad) loope in rex.X movabs pushq movabs and retq mov lret cmp xchg xchg and imul iret scas mov movsb jp or faddp cs loope outsl (bad) sbb repz movabs rex.WX out stos (bad) pcmpgtd test push (bad) and pushq rex.WB data16 rex.WRX push (bad) jno xchg sbb outsl (bad) fwait sbb mov (bad) clc mov clc (bad) shrb adc fnstsw shrl mov ficoml loop mov out xor (bad) data16 or (bad) xchg dec push loopne fidivrl or xchg test adc sub jae scas ficomp out (bad) cmp xor fs sbb cltd add in mov (bad) fld pop add xchg xchg push divl pop loopne rex.XB rex.WXB rcr (bad) js rex.XB scas rex.WRXB fildl movabs jbe (bad) loopne fildl sbb jo push push sub hlt pop or push fcomi decl push or (bad) fcmovne test movabs rex.X (bad) lret lods pop fnstcw sub (bad) and (bad) or (bad) mov insl (bad) hlt xchg (bad) add xlat adc callq xor sub rex.WRB push fildl xor mov rorb mov pop (bad) mov xchg fwait jbe rcrl out pop iret fldt rex.X repnz cmp adc lret sub or addr32 mov loope test lea out (bad) or fistl insl jl divb fcmovnbe leaveq rex.XB cwtl fstpt mov cmp (bad) stc sti or (bad) fstpt int3 (bad) (bad) leaveq mov cmp sti sbb int gs adc (bad) mov and mov movslq retq (bad) fisubrl pop (bad) imul rcrb (bad) (bad) push rex.WB rex.WXB xlat mov movabs adc xchg and pop out add pushfq cmp adc lret jne cltd (bad) retq sub ss (bad) sub pop add sbb mov mov (bad) jge add (bad) xchg imul sbb mov pop mov jne sub mov imul lret rex.X and out movabs (bad) clc repz lock pushq (bad) rex.WRXB insl rex sub subl cmpsl sahf loop hlt sbb (bad) loope mov (bad) pop xchg jne xchg pop jns gs pop xchg (bad) (bad) sbb jne test mov cltd retq pop or in vxorps repz rex.RXB jle pop xlat jmp callq or (bad) stc cmp (bad) rex.WR rex.WRXB pop (bad) pop int3 (bad) outsl rolb xor (bad) pop test xchg push rex.B pushq push mov in insl lods sub mov jns pop xchg and rex.RXB or ja sbb pop sbb iret jle pop pop scas out (bad) (bad) adc xchg callq add cmp jmpq pop (bad) leaveq (bad) jne (bad) mov (bad) (bad) sbb movsl pop shrb sbb gs mov xor stos pop movabs fistl shrl (bad) mov (bad) (bad) cmpl movsb (bad) (bad) int (bad) mov xor data16 fcmovnbe (bad) sbb fistl idivl adc jae rex.WXB and xlat rex.RXB int movsb fnstcw jne fsubrs rex.W xor data16 jo (bad) outsb xchg (bad) data16 fldt adc rex.WR jbe pop pushfq stos fs fisub xlat mov (bad) in (bad) in push jl (bad) int push (bad) rex.WX xchg pushfq (bad) mov jbe fcmovnbe sbb out push sbb rex.WR rex.XB xor es rex.RXB jbe xchg (bad) rex.RXB xlat (bad) rex.WXB xchg pop adc stos mov or (bad) sti rex.WRXB rex.RB xor rex.R imul in pushq cltd or mov fs stos push ficompl (bad) sbb cmp in (bad) rex loop (bad) shrb jp and (bad) xor movsl mov cmpsl fmulp mov and ds cs pop lret nop xchg retq sbb mov mov jge (bad) mov in incb xchg sub jae insw imul xchg (bad) rex.RB add (bad) enterq push sar cmp fidivl (bad) mov pushq and insl stos xchg cmp stos vandps rex.WRX mov movabs mov fisttpl fsubp jg push mov callq rex.RX cmpsl mov push hlt nop imul rcr ds pushq loope sahf (bad) cs lret pushfq fwait rex.WR mov (bad) xchg sub repz rex.WRXB add jg xor rex.WR pop cltd fwait add (bad) (bad) adc mov add sbb (bad) outsl rex.W outsb nop add rex.WX rclb xchg pop out test xchg mov popfq add fiaddl mov (bad) hlt je rex.WRB stc pop rcr sbb rex.WX and loopne pop sahf mov (bad) add mov int3 xchg jns cmp (bad) loopne movsb imul xchg mov mov and sub mov je lock xor imul fistpl (bad) std retq rex.WR xor and es rcll add jg fcmovne ss (bad) mov (bad) fistl cmp push cli xor mov popq fistpl or stc fildl xchg je fildl mov push rex.WR addr32 jp loopne mov sub adc push jns callq rex.R mov je adc pop xlat fcmovu rcrb movsb loopne rex.R or adc mov xor rex.W repz (bad) cmp out fildll sti (bad) mov std mov (bad) (bad) rex.WB frstor (bad) or sti jne movabs std out jbe outsb out ds and insl rcl mov sahf (bad) adc push xchg fwait pushq mov mov push sbb cmpsl jns test sub addr32 mov and cmp mov (bad) (bad) mov mov scas out xchg ds loopne repnz lret outsl pop sub (bad) callq fimul pop movabs repnz (bad) loop sub mov psubq push sbb lret xchg out rex.WRX xor xchg movabs push mov and xchg pop pop (bad) es fcmovnu gs or rex.RB scas xchg jnp mov cmp rex.WR addl (bad) jp jno xchg callq (bad) cwtl test std frstpm(287 and (bad) mov or pop push add (bad) fnsave pop fistl scas data16 jo nop mov out (bad) jl,pn ds fistpl adc jo sarb mov fnstsw jnp mov enterq mov jae pop sbbl fs in xchg mov fildl or rex.RXB sub callq (bad) pushfq (bad) stc rex.RB and lods test mov or and loope (bad) ffree (bad) jmp in lock rex.RX movabs rorb (bad) incb test sbb pop pop mov (bad) lahf (bad) fcmovne roll fldt push fnstsw movb rex.X repz xchg retq (bad) nop fldt xor fldt lock retq (bad) rex.RXB cs popfq pop adc fisttpl cmp cmc ss xchg fildl rex.WR rex.X mov and cmc (bad) or (bad) push jg push pop imul (bad) xor retq jae insl pop movslq (bad) (bad) (bad) fdivl and rex.X sub jnp (bad) idivb cmp fildl shll cld adc xchg push gs xchg test sahf pop (bad) cmp (bad) xor loop fstpt sahf fnstsw fstpt adcb pop jbe sub (bad) rex.WRX mov imul fiaddl push jnp mov ds mov add loope jmpq mov popfq cmc enterq (bad) movslq xchg out loopne add lea jp es jg movabs cli or push outsb in imul clc cmpsb (bad) jae or sbb sub and loopne (bad) mov mov movabs fdivs lods (bad) sti enterq fisttpl cmp (bad) fildl pop xchg jb fiaddl outsb cmp (bad) mov xor pop or shlb rex.WX add cld mov (bad) jge imul sub mov sub rex.WRX add adc mov sub rex.RXB (bad) outsb fildll sub mov (bad) pop mov or js cmp xorl xchg rex.B (bad) jp mov sar cs (bad) cmpsl jns or mov roll rex rex.RX pop jge cwtl in jmp (bad) mov xor in std insb outsl movabs rex.XB (bad) xchg fistpl int3 mov sub (bad) fwait mov (bad) jo (bad) retq sar push (bad) and xor rex.RXB rex.R push mov (bad) add adc rcrb sarl (bad) adc add xchg cmpsb movl ficoml add lret pop ss stos fwait pop stc rex.R fucomi in outsb adc retq fwait retq jnp fistl sbb sbb rcrl jrcxz in imulb fldt rex.RX fs pop pop btr pop lret mov (bad) in push fildl (bad) mov xchg loop (bad) outsl and jmp mov int mov imul mov push sub in pop movabs pop lock mov outsl fmuls rex.RB adc vcvtsd2ss retq mov test xchg cmp sub push mov fwait (bad) cmp movabs or rex.RXB (bad) pop jb and lahf sbb clc nop mov sub (bad) neg or push shrl cli rex.WR gs sbb push movsb and or mov sarl xor imul jrcxz mov stc fucomi rex.WR rex.R (bad) mov out fcompl (bad) fcmovnbe pushq jnp xor sbb pop or push rex.RXB pop xchg pop mov setnp rcr imul (bad) imul rex.WRX (bad) pushq negb rcl or (bad) fcmovnb mov (bad) sbb (bad) (bad) lock mov ljmp hlt (bad) fisttpl push jl (bad) (bad) rcrl adc xor es (bad) out jmpq xchg sbb fstpt (bad) in sub (bad) push loop jae scas jnp fstl push jg int roll (bad) addr32 mov mov fiadd adc xchg (bad) jmpq (bad) lods fcomp cmp int out add icebp iret xor loope (bad) negl rex.WXB pop mov fidivr fcmove push add retq sbb xchg scas out adc fisttpl pop xchg add iret leaveq adc rex.WRXB movabs xor mov (bad) addr32 ss push vmread jge cltd adc test stos iret adc sbb and adc not sti or rex.WB mov (bad) push adc rex.RXB xor test (bad) cwtl test popfq sbb rex.RXB xor iret imul clc xchg repnz cli std xorl stos jbe mov gs rex.WXB mov test sbb imul cmp jno in adc jp fs pop retq cmpl rex.XB sub cmp add jl or je (bad) in (bad) push (bad) and add iret scas and jnp (bad) mov push enterq add lods and adc sbb rex.WRXB adc push (bad) pushfq and out add xchg scas ja fstpt sahf pushq xchg nop adc jno xchg rex.WRXB rex.XB stos vpsllq jne (bad) (bad) movsb imul mov push test lret sub pop pop add mov sbb (bad) ss lret cmp insl xchg (bad) push push pop (bad) (bad) sbbl jo fisttpl sub callq popfq pop cmpsl pop rol pop xchg lods (bad) cltd mov cmp loope add sub test cmp fisttpl and push (bad) push push (bad) lock (bad) mov imul in cmp jge stos (bad) rex.RXB imul xrelease cmp or (bad) (bad) lret outsb lahf sti pop rex.B sub sub cmpsl or sub rex.WR rorb cld jrcxz fildl xor pop xor movabs roll fstpt mov jnp movslq or rex.XB mov sbb (bad) fnsetpm(287 insb jae outsb jnp (bad) iret mov movslq jp jno pop (bad) jbe in jnp loop mov movb mov xor (bad) pop adc rex mov ja (bad) rorb lods movsl sub scas fnstcw mov mov mov (bad) mov (bad) test fistl cmp add jnp xchg sub (bad) fisttpl sbb loope rex.X fcomi movabs outsb and rex.XB cmpsb fwait cmp movabs pop sbb sbb pop pop add pushq es lret xlat cmc leaveq cmpsb cmp adc pop (bad) (bad) lods mov (bad) sub xor rex.WB rex.W int3 insb pop (bad) shlb or loop (bad) xor mov mov cmp sub fisttpl std movabs sbb jnp rex.RXB movslq movsl cwtl mov cmp rex.WX sub nop and stos adc jg jnp rex.RX xchg xlat xchg addr32 fistl or mov mov (bad) pop cltd retq (bad) cmp imul loopne rex.WXB (bad) jle sti add (bad) sub mov sbb out (bad) insb or jle mov sub rex.XB (bad) rex.R xor out (bad) (bad) (bad) rex.WB ljmp pop add (bad) nop rex.WRXB int3 fisttpl add imul jnp lea (bad) xchg rcrb jo pop (bad) cmpsb xchg shrl (bad) xor (bad) subb cmp mov clc or rex.R lret (bad) pop fs pop and (bad) rex.B jo and (bad) xor sar mov adc and or jo ja xchg sbb fwait sbb fwait mov fist sbb fldcw ds rex.XB movabs (bad) in (bad) bnd rcrl pop shl lea rex.RXB (bad) out xchg jb mov movabs or and rcrl es add (bad) (bad) jnp fcmovne xor jmpq mov pop int sti mov retq addl movabs andb ss cmpsl movslq fild out xchg add pop (bad) hlt lods cmp (bad) jle fildl fcom mov pop pop cmpsl ds (bad) xchg imul (bad) decl movabs or mov rex.RB adc mov fldcw fwait and fistpl in push push retq mov (bad) fcmovnbe and sub fisttpl add fcmovnb mov test rex.RB roll pop cld cltd jrcxz mov icebp cmp hlt (bad) shrl test add movl (bad) mull int movabs in pop lahf push add jns pop adc mov cmc jl and pop idiv jmp cmpsb cmp rex.R (bad) cwtl push jrcxz shl (bad) data16 add je rex.RB adc enterq fistl movsb push adc xor scas loopne pop movabs cmp xor jg retq adc mov jp sub lret pop lret xchg leaveq (bad) xor loopne push rex.WXB push mov and jg (bad) cmc fstps fistpl (bad) or mov es fistl (bad) rex.XB rcll movsb (bad) cmp lods xchg lret gs loop (bad) mov cli scas jmpq adc retq adc imul retq and (bad) cmpsl subl pop rex.WB lea sub outsb insl movsl mov jns shr jae rex.WRB gs out (bad) fistpll rex.WRX loope pop sbb rex.WB and lcall imul and icebp mov sarl (bad) shlb rex.XB out sbb mov xor xchg fwait insl add jns push mov movsb fldt push sbb pop mov ja adc (bad) mov test int3 and xor xchg (bad) repnz cmp test fwait push cmpsl xchg out (bad) out shl add mov adc rcrb push add xchg insb (bad) pop xor or sub pop (bad) cli stos test mov (bad) pop sarb movl (bad) jle nop jae sbb sub rex.WRX (bad) xorl (bad) push sbb adc pushq or add (bad) hlt fildl mov movabs cmp test rex scas cwtl fistpl fs (bad) cs loop pop adc mov sub jno fldt fldt rdmsr xchg fisttpl rex.XB xchg (bad) decb pop and imul je xchg pop xchg popfq clc xor lret push pop test mov mov xor (bad) rex.WRX fisttpl fstp mov rex.RB fisttpl cmpsl nop (bad) pop push lret repz adc fcmovnb incb and movabs xchg std xchg xor fildl xorl int or (bad) out test rex or (bad) sbb jb mov rex.WRXB callq lods mov divb outsb (bad) sbb (bad) lods or (bad) (bad) je add fld test or mov add cmp rex.X insl mov (bad) out xchg and adc adc rex.WRXB (bad) or jge jnp scas fcmovne sbb gs fs fildl and movabs and mov insb jle fistpl (bad) pushfq mov jg xor cmp fldt (bad) (bad) loope fwait sbb imul rex.B lret add sbb (bad) lret insb rcr popfq mov sbb xlat or pop adc rex.WRXB push jnp sub lods add outsl rex.XB rex.WRB (bad) cmp fwait push jb movabs (bad) rex.RXB cmp (bad) loopne adc jmp (bad) out and mov std clc xchg stc cmp mov fsts fwait (bad) ror rcr sub or (bad) (bad) (bad) (bad) xor test adcl jp stc data16 mov sbb scas (bad) (bad) mov icebp out stos push sub adc outsb jg fistl (bad) (bad) xor movabs push leaveq lods ror fwait mov rex out (bad) pop xor mov rex repnz mov mov lock (bad) or rex.XB jae (bad) pop popfq gs iret mulb xchg push (bad) mov fidivl lock test rex.WRB jp loopne add roll sub (bad) sub push in movabs rex.WRXB pop or ja in xchg outsl int3 cmp clc sbb (bad) lods (bad) sub repz add (bad) ficomp pop ds sub rex.WXB repnz mov subb fxch roll fs jmpq sahf (bad) adc movabs (bad) (bad) jp jp stos (bad) cmc or scas mov fcmovne fs sub sub imul adc sbb int sahf jae sbb cmp lods (bad) push (bad) mov cwtl pop cmp out rex.WRX jmpq xchg add xorb repnz cmpl fprem1 add lods lea lret rex.RXB (bad) xchg sbb (bad) jmpq (bad) std fnstenv xchg mov scas and retq jrcxz adc in add mov pop push or sbb (bad) jne (bad) addb (bad) imul jbe push mov fldt xor xor rex.RXB mov stos xchg testl add push mov rex.WRB imul push (bad) cmpsb addr32 pop fldt xchg rex.RX mov push lods loope hlt and jmp xor push insl fstpt testl fistpl xor rclb scas adc jb cmp and (bad) mov outsl out mov fistl enterq outsb movsl ja (bad) and (bad) addb fldt xchg fdiv sbb test fnsetpm(287 xor cmpsb adc stos cmp or xchg rex.RXB jg fildl rex.WRB (bad) push fistl jb loope out mov (bad) fnop gs test fcmovne push mov cmpsb or retq (bad) mov (bad) or rex.RX add pop sarb (bad) (bad) jg sbb sub sbbl test jp jnp insl xor int3 jrcxz test pop retq cld popfq and jo enterq pop pop sub int3 sub jnp fstpt (bad) jno (bad) adc rex.X std pushfq rex.XB pushq lods (bad) add and movabs sbb (bad) push mov flds sbb (bad) cmp mulb sbb pushfq add movslq or fildl jmpq (bad) rex.RXB rolb xchg add fistpl (bad) mov jl and mov push and (bad) xor (bad) add rex.WR loopne clc imul (bad) add cltd retq (bad) or imul iret rex.RXB push fstpt and mov mov (bad) mov (bad) scas rex.WB std or xor push cmp adc pop movsb iret xchg xchg cld jnp cltd in (bad) cmc rex.WRXB test jg fstpt mov mov sub fstpt and jnp sbb mov iret retq cmp adc sub (bad) (bad) je pushq fildl (bad) rex.WRX stos (bad) rex.XB push mov (bad) jb xor add clc retq fcoms xchg jle cmpsb test hlt cmp test lahf cmc (bad) fucomi xchg (bad) cltd rex.WRXB rex.RX pushq scas sub test push sbb fdivs push and (bad) (bad) sbb scas setl xchg fisttpl loopne xor jo rorb adc push rex.WXB rex.WX sub cmpsl (bad) je (bad) add (bad) pop cmp retq (bad) movabs iret cld rex.WRB (bad) jg pop rex.X and (bad) (bad) mov pop sahf jnp xlat and cmp and insl test or pop push and (bad) (bad) ja cmp (bad) clc mov jo (bad) xchg or xor test rex xor stc (bad) fwait xlat and and add out insl lods mov jrcxz iret rex.R (bad) stos callq popfq jno (bad) push (bad) fldt mov movsb mov and adc (bad) imul lock pushq pop (bad) cmc xchg mov out popfq rex.W and movsl push (bad) sub pop mov rex.RX movsb jns jb push out mov sbb in (bad) xchg (bad) mov cmpsb (bad) vsubsd xlat movabs mov jmp jae pop (bad) jg movsl stos int3 (bad) repnz repz fneni(8087 jbe and (bad) (bad) (bad) int insb imul retq jns rclb xchg fstpt xor rorb pop rex.XB stos fisttpl adcb jge cmp push (bad) and neg movabs imul test fldt rex.XB nop outsb mov fldt shll (bad) pop jp xor pop loopne out rex.WRXB xchg mov sbb pushq xlat push (bad) xor ds jo or cmp (bad) rex.R mov xchg adcl hlt (bad) rex.WX (bad) (bad) sub scas (bad) fcmovu mov or mov test jne mov in xchg jl outsb (bad) rex.W andl sbb movabs mov cld int3 fwait sub or leaveq (bad) fwait stos jno mov pushq fistpl xor loopne rex.WXB xlat or lods (bad) (bad) sti (bad) fldt mov and fld leaveq add imul fwait fwait cmp je fstpt jmp js mov stos test jnp stos je xor jmpq callq xor add stos push ds mov dec adc sub rex.X pushfq ja xor fstpt rex.RXB push pop mov fisttpl mov fisttpl fcoml scas rex.RXB mov mov addl cmp movabs sbb cmp je lret imul (bad) sub stc lret lods rex adc (bad) cmc test mov cli (bad) movabs (bad) jnp (bad) movabs loope cmp (bad) imul (bad) leaveq xor (bad) scas push xchg rex.X pushq mov or fistl ss adc mov xor or ror mov mov or jne rorb out (bad) or cmp fcomi lret sub neg (bad) rex.R cltd mov movsl stc sbb (bad) sub fwait rex.B jge mov (bad) lret xchg lahf and sub pop pop idivl (bad) sub lret movabs cmpb (bad) int3 fwait movslq sbb stc rex.W (bad) (bad) pop mov retq addl xor test adc cmp hlt mov movlps scas mov pop adc stos iret (bad) sbb (bad) fndisi(8087 movabs (bad) and fild sbb cmp (bad) xorb jo rex.X (bad) lret je repz rex.R xchg jne (bad) mov cmp (bad) pop xor loopne rex.WRXB in lods push stos pop movsb popfq mov (bad) mov (bad) adc jrcxz mov rex.WRB adc and add fs rorb rex fld jrcxz lahf pop leaveq movsl jns or imul mov and or and sahf imul fstps pop jg out popfq (bad) loopne mov je (bad) fstps xor jp fwait lods mov fdivr imul fstps fldt mov (bad) and jae pop or and sbb lea add pop sub xchg jge rex.WR cmp cltd leaveq loope mov (bad) xchg test push xchg adc sub lcall sub cmp push lea callq hlt push mov imul pushfq (bad) xchg (bad) std mov lea (bad) cwtl xchg sahf out rex.X xchg addr32 xlat (bad) pop rex.WRX movabs (bad) cmp movabs xchg (bad) mov add rcl mov adc push sarl lret pop rex.RXB pop push xor scas xor loope mov mov add movsb cld xchg xor movabs mov stos sub movslq movabs cvtps2pd clc mov lods cs push mov jle fwait sub rcrb int3 and (bad) adc (bad) outsb sbb out insl jne (bad) imul data16 (bad) (bad) pop rcr rex.XB xor push xor fidivl xchg adc push sub (bad) out jnp (bad) rex.WR mov (bad) int3 adc inc ja (bad) lret rorb hlt (bad) (bad) jl cwtl mov (bad) xchg mov imul iret pop popfq sub xchg sbb add cmpsb fs push repz movl rex.WXB pop movsl xchg pop cmc mov outsl fstps vmovupd int3 and push pavgw pop rcr je fs (bad) or add sarb mov sbb fistl outsb adc jrcxz rex.W pop xchg movabs add jmp stos ffreep in jp pop pushfq cmp jle xchg xor jl,pn rep (bad) fs out fstpl (bad) pop add lret imul iret xor push out movabs (bad) (bad) mov pop pop mov pop pop fdivrs cmp lret xchg cmpsb rex.WRB mov rex.XB (bad) cmpsb movslq jle (bad) insb sub xor sub loopne shl leaveq repz rex (bad) cmp adc pop rex.RX je rorl stc sbb mull insb nop out jo rex.WXB or pushfq mov jl sbb or popfq rex.WB xchg mov pop jne xchg xlat pop mov loope cmp repz mov push adcl sbb loopne fwait mov xchg lret (bad) cmp mov imul faddp xchg fstpl pop pushq in fidivl and (bad) jno sti out xchg scas fwait cld (bad) out int3 jae (bad) (bad) fs int icebp rorb iret or jrcxz xchg std adc fwait (bad) rorl rex.WB fwait cmp callq sub (bad) fimull repnz push fdivrs add lahf rex.B xchg testl cmp retq insb mov fcmovnu rex.RB cs push shrb fisttpl push fiadd insl or pushq test outsl (bad) insb stc test fbstp clc rcll add rex.RX (bad) stc je and fimull xor gs fisttpl adc rex.WRB mov imul fsubrl cli xor pop rex.XB fwait xchg cmp movsb sub mov cltd ds (bad) mov int int3 rex.R stos jmp pop jbe add add cmpsb (bad) cld in int3 fcmovnb and mov (bad) callq imul cmp cltd xlat leaveq shrb rex.WX add sahf (bad) ja rex.RX adc (bad) xor cltd (bad) pop iretq int stc (bad) rex.WB xor jmp adc or lret frstor (bad) test rex.WRB and cmp rex.WRB mov fldl cmp add (bad) mov sbb push (bad) ja fcoml cmp retq nop fildl lret lods pop add xor popfq fildl sub and (bad) mov and (bad) movabs idivl sbb rex rex.B (bad) mov fwait rcrb rex.WXB or pop addr32 mov movabs xchg pop rex.WRX pop movsb mov rcrl jle xchg test outsl clc retq (bad) callq cs cmc stos sarl xchg mov fisttpl movsb (bad) mov int3 ficompl sbb xchg push pop test rex.X xor lahf sarl movabs sub rcr jrcxz sti mov xor and fstpt mov addl fisttpll ja cmp ja cmp push jg rex.XB jns (bad) rex.WXB pop rex.X je movsb sub movabs fisttpl paddusb in test and add out movabs xchg movsl pushq ja sti jrcxz in (bad) test or xor mov fcmovnb or rex.XB sbb pop mov (bad) lret sub cwtl or mov rex.WX fcmovu in push rex scas push enterq jp adc pop cmp retq (bad) pop in fstpt test movabs push sub out cmpsl mov frstpm(287 cs gs mov movabs retq add xchg clc fucomi sahf stc lods bnd mov in adc retq fildl repz std cmc sbbl fs (bad) not (bad) in insb xchg cltd scas cwtl push cmpsl cmp jo in jrcxz sbb mull add jle mov rex.WRB adc insl pop pop out cs rex.WRXB cwtl lret sub (bad) rex.W movsl stc mov rex.WRB ja fwait mov and add mov fisttpl loope hlt test lods (bad) fwait (bad) out enterq push pop ds or sub in cld repnz mov out loopne pop adc mov movabs mov push fisttpl mov imul pcmpeqw rex.WXB fistpl add fistpl sarb fnclex adcb rex.X rex.B gs xchg lret int3 jb jp mov cmpb mov cmp jrcxz jo adc sbb in (bad) fildl movabs sub xchg xor imul mov xchg xchg imul popfq (bad) (bad) push mov adc ljmp (bad) push movabs sub sbb add sub callq and mov js andb movabs hlt or pushq mov (bad) callq ss sub fwait and sub and rex.WX jge negl (bad) sub cmp (bad) fstpt data16 rex.R rex.WRXB rcrb movsl (bad) and (bad) mov pop and mov jnp xlat sub sub xchg xor fisttpl fs (bad) mov sbb sbb sub pop fadds fisubrl push rex.XB es cmp decb add lods mov fcmovnu (bad) cs xchg cli jno (bad) jb movsl gs xchg mov cmp clc ficompl xchg insl xchg push (bad) (bad) sub pop test (bad) (bad) rcll pushq (bad) pushq rex.XB mov sub pushq test in out cli sub scas fisttpl pop imul (bad) mov fistl rex.WRB loope (bad) (bad) negb pop sub fwait rolb fwait mov jnp mov mov (bad) (bad) stc jle orl pop add add fsubrl test cmp decb ror fcmovb fildl adc in stc (bad) lods out (bad) mov sbb xor cmpb pop fiaddl movabs push or mov pop lret rex.WXB rcrb out int3 mov lock add (bad) sbb xchg xchg out (bad) xchg (bad) rex.WXB je imul push adc (bad) incb js jge (bad) jne leaveq add (bad) ss (bad) rorl push std mov fwait cwtl negb sbb out cld or (bad) (bad) jg mov sbbb add xlat jle or mov rex callq cmp negb (bad) rex.RX outsl pushq retq ja movsb fs pop rex.RXB shrl sub pop (bad) stc (bad) mov or push retq loop jl cmpsl jnp adc sbb sbb fsubp out rorb (bad) mov pop cmp cmpsl pop test mov fadd jae mov push lock pop retq (bad) xorl leaveq (bad) adc jnp shrb loop push iret xchg (bad) or rex.XB repnz pop lret addr32 cmc jnp push test rex.RXB jb in fcoms jp outsl cltd push hlt in movsl xchg data16 cmp and add sti out mov rex.WX pop pop and push movabs sub stos insb (bad) jle mov pop jnp adc fistpl adc sarb lock sub (bad) rex.WXB rex out (bad) (bad) lret (bad) cmp adc fistl push sub imul pop in fcmovnbe jae outsb cmpsb cwtl retq rex.WRX mov pop (bad) mov lea repnz xor xor test xchg stos fcmovnbe pop xlat xchg cmpsl lret jl add out fcmovu outsl in xchg (bad) sbb and rex.B rex.RXB js (bad) jns xchg int mov lret stos repz sahf (bad) sub xchg fstpt enterq xchg fldt mov jbe (bad) cmp mov movabs push and repnz jp rex.B fsubs data16 mov iret sub ficomp rex.WRX pop es in push (bad) sub (bad) scas (bad) pushq (bad) movslq jrcxz mov rex.RXB repz loop cwtl outsl cmp loopne enterq cmp push cltd add lock iret (bad) cmpsb jl test jmp outsl jmpq fcomi xor mov fdivrs icebp sub lea cmpsl rex.R (bad) jnp jge push scas pop mov addr32 movslq fcmovbe (bad) push ds fildl addl test movsl mov push xchg jge pop fisttpl mov jp,pt and fcmovnu rex.WRXB movabs sbb sbb jg orl out lahf cmp (bad) fistpl and (bad) (bad) in cmp bnd rolb xchg xlat cmp add outsl movabs fsubl sub (bad) pop rex.XB imul callq jle jrcxz mov cwtl fstpt addr32 movslq adc cmp xchg jmpq sarl and jno pop mov xchg addr32 sub rex.XB pop fistl rex.WRXB in and rcr (bad) pop fistl rex.R ds (bad) (bad) adc fstpt and push (bad) fsubl mov movabs (bad) lret push ja lock icebp (bad) mov sti (bad) lret (bad) add fwait or fistpll xlat and sub int3 jne stos mov scas cmpsl adc xchg add lret rex.W sub (bad) clc jl pop jrcxz cmp cmp or fistl xor movabs xchg mov and movabs pop fstp xlat movabs sub je (bad) jae shrb push callq clc or (bad) sub add jnp sbb fnsave pushq rex.WRXB pop test nop scas rex jae in mov rex.XB adc rex.RB fistpl mov sbb mov mov sti adc cmp (bad) movslq fisubl (bad) (bad) xlat add andb sub cmp int jb std loop mov ficoml cwtl fstpl fistp mov loopne imull movb fwait push push sbb (bad) jb add sub (bad) jmpq (bad) std lret xor cmpsb sub rex.WXB pop sbb push movabs or lock sbb pop pushq sbb enterq pop rex.WRXB test movsb in cmpsl sbb outsb jb mov mov je loopne mov insb or orl pop insb rex.WB xchg (bad) xor fs (bad) cld stos mov lods jmpq add rex.RB loop scas rex.RX or repz jge jnp add outsb mov or idiv cwtl mov movslq (bad) int3 adc add (bad) pop mov outsb iret push pop rex.WRX adc and jne pushfq rex.W cmpsb mov movabs (bad) cld adc pop xchg (bad) xchg sub xor mov test xchg iret jno push push xchg rex.WX (bad) out add fistl movabs push callq xchg add xchg and test pushq sub push rex.R int3 loope pushq sub pop adc mov test mov ja mov mov pop sub and (bad) movslq mov ror or cltd pushq jnp pop imul (bad) movabs enterq add leaveq adc push sbb rex.WRXB rex.WRX (bad) and xchg sbb mov pop cmp icebp or lret pop test sbb mov (bad) push (bad) rex.WRX nop outsb fsubp rex and pop rex.WB xchg pop xor sub repz fs fcmovnb movslq xchg jrcxz (bad) fisttpl rex.WRX rex.RXB (bad) pop rex.WXB movabs (bad) ja test or imul jns pop mov pop rex.W rex.X gs pop xchg pop rex.R lahf clc jmp jae jb fstpt movslq fldt sbb or push pop (bad) (bad) fs jge (bad) (bad) sbb mov or rex.WRXB leaveq movabs sti mov cmp pop leaveq (bad) imul ss xor xchg jnp (bad) cmc sbb loop xchg push test vminps sbb cwtl pop sbb push (bad) (bad) sti xchg pop enterq mov xor sub xchg sbb (bad) (bad) adc retq movabs sbb in rex.WB addr32 scas stos (bad) fs push ss (bad) xlat outsl adc (bad) pop pop fidivrl xchg mov and test pop sbb retq and xorl cmp stos mov mov xchg rex.W std icebp pop cmpsb mov push mov (bad) sub xor add sub sti push cmp (bad) sub sarb cltd pop lods adc shr (bad) adc fwait icebp cmpsl sbb (bad) xchg sbb (bad) sbb movslq rex.X sti ja pop fstpt rex.RXB (bad) es int3 fcmove fs movabs int3 sarb xor xchg sarl fs xor xor je cmp mov rex.W mov pop loope adc mov fnstsw (bad) insb adc adc cltd retq pop jge rol (bad) cvttps2pi xor xchg out repz popfq mov add cmp insb ja movabs xchg fwait imul shrb popfq mov sti xchg mov cmp callq mov fcmovu jns movslq cmp in jg mov xchg (bad) (bad) xchg mov xchg (bad) jb in jmpq (bad) repz xchg fildl movl push (bad) (bad) mov rex.RX fcomi (bad) flds sahf xchg fildl and sbb (bad) sbb iret imulb int ds (bad) out mov (bad) orl in add jbe jnp testl cwtl loop pop rex.WRB sub sub ja (bad) add imul retq (bad) addr32 rolb and jrcxz (bad) cmpsl pushfq movabs int callq rorb (bad) loop (bad) xchg scas imul xchg mov cwtl (bad) add mov fiadd movslq fadd shl cmp xor (bad) rex.RX rex.R out out pop mov rex add stos lret mov adc fisttpl enterq fstpt (bad) lret mov loopne rex.XB fisttpl ficom sub sbb rex.R gs enterq fld (bad) stc (bad) rcr add jo adcl rex.XB or pop (bad) movslq stos (bad) cmp mov mov jae callq in xchg scas mov movslq iret nop addr32 cmp (bad) jl rex.RB or sbb retq push lock movslq (bad) int3 rex.XB xor jne ja (bad) pop pushq xor push xor mov (bad) (bad) fadds fnsave pop imul (bad) fwait fwait out outsl fcmovnu movsb je jne rex.WRB push fs sbb mov mov or mov int3 stc in rex.RXB fwait pop out add and mov imul fisubr stc nop js or (bad) cld rex.RX rorl add rex.WB pop fldt sub lods pop push loope insb lahf (bad) popfq push movabs (bad) ds rex.RB fldt rex.WRX pop lret rorb fstpt xor in rex.WRXB xchg in (bad) lock (bad) fisubl out fwait add je rex.RB and movslq mov test (bad) icebp cwtl (bad) shld push in rex.WB pop sbb pop jno retq cmp cmp push or movsl fiadd lret movsb ficompl fildl adc clc lea test in and rex.RXB jrcxz sbb insl rex.WRXB sub fimull popfq imul fsubs or imul notb cmovge mov jg mov mov outsb outsl fistpl stos rex.WRXB int xchg xchg retq sub mov iret lret pop (bad) (bad) mov outsb or rex.XB lock scas stos popq es (bad) and jmp insb mov mov fwait out rex.XB clc rex.WRB insl sbb ja mov cmp data16 fcmovu add jno fistpl retq gs rex.WB cld xchg (bad) (bad) mov fiaddl and ja xor rex.R fildl pop fist fwait test rex.WX (bad) pop mov cmp lret cli jg rex.RXB fwait mov insb (bad) test in (bad) add sub clc (bad) jmpq xor xchg (bad) adc fidivr push fstpt rcr pop shr jb (bad) xchg movsl ss outsl mov out xor and push and mov jne xchg adc repnz pop lret rex.WRX and xchg mov jnp jae in cmp xchg mov mov loopne and (bad) rcrl sbb pushq pop rex.W jp fs rex.WRX sub push hlt repz out adc movabs rcrl fidivrl out cmpsl loop jl add sbb lret push fwait mov add lods rex.WB (bad) rex shr in inc (bad) xchg rex.W mov cmp pushq jb jae xlat sbb callq push (bad) test pop xor (bad) in xlat mov fcmovb in (bad) rex.WB fs (bad) idiv xchg outsl fdivrs movslq (bad) popfq adc sub (bad) adc ss (bad) push movslq (bad) cmp lods iret push data16 stos push (bad) cmp movslq mull lahf pop gs (bad) movabs cmp rex.WX xor mov (bad) (bad) cmp xor lahf sbb (bad) fwait rex.X (bad) sbbb (bad) test cmovno in in and xlat (bad) jb xlat and in xchg rex.RB fldt jp (bad) loope (bad) (bad) cmp scas add adc xchg pop cmpsl jo orl out (bad) xor out rex.WB sar mov sub ror adc movsl rclb rex.RB rcr add fiaddl sbb jl (bad) mov hlt lods jrcxz sub (bad) (bad) (bad) or imul jo cmpsl xor leaveq adc rex.W sbb loop push jno xor or rex.W push cld jg sbb mov (bad) and wrmsr jbe mov cld xchg rex.XB imul mov hlt fstps add lret add jp jo repz xchg sbb mov fwait xchg sub sbb cmp sti outsl jl adc fstpt mov repnz push push (bad) insb pop clc loope jge rex.R rex.WRB mov test sbb andb mov (bad) (bad) fisttpl popfq adc shlb xor or pop shlb (bad) mov fstpt mov push int3 rex.WR loope push lock cmpl (bad) js (bad) pop movabs push sahf add callq jrcxz stos int3 cmp cmpl test ss lea stos add adc push xchg retq rcrl sbb (bad) mov jrcxz cmp jnp rex.WXB int3 rex.B cs lahf fcomi sbb add pop or (bad) fsubrp fidivrl rex.WX rex.WR sub pop rex.WR jg mov xchg pop push or and roll outsl and loop mov xchg (bad) fisttpl shrl sbb rex.WXB (bad) fisttpl pop (bad) push stc scas rex rex.RXB ds jns pushq lret fistp pop mov sub clc mov rex.RXB adc xor and mov mov lods out (bad) pop (bad) es repnz clc movabs jl (bad) xor roll data16 xor (bad) sbb xchg scas retq movsb test mov lods lods jb enterq (bad) repz (bad) (bad) fcmovne add movsb movabs fimull (bad) imul fdivrs jp test rex.W and fwait (bad) push movsl fbstp rex.RX std (bad) mov sti mov mov shlb (bad) imul jae (bad) sahf cmp jo pop xchg add mov mov rex.R (bad) rorl cmc (bad) xor sub (bad) vcvttps2dq jbe cld xchg cmp cmp int mov or (bad) sub or pop icebp rex.XB rex.WX rex.WRXB roll sub movntps shll add xor in mov fistl (bad) (bad) (bad) jnp rex.B ja (bad) push (bad) xor int3 faddl jnp (bad) imul lahf cmp rex dec xor out jg js sahf jae out (bad) (bad) pop imul movabs xor pop fisttpl adc rex.WRXB pushfq (bad) in (bad) cmpsl pop fwait pop out lretq int nop stc sbb mov pop xor lret mov in (bad) mov xchg sub xchg in push retq stc (bad) cmp sbb (bad) add mov ficomp test adc (bad) rex.WX lock mov (bad) cmp (bad) pop (bad) (bad) and fidivrl mov or jnp shl push (bad) adc outsb imul mulb sbb and fistl (bad) sub in fldt stos loop jbe add out mov ss repz rex.RX fisubl mov enterq movsl leaveq xchg rex.RB (bad) mov pop callq fwait adc push add sbb retq int3 sahf ror xor cmc pop es retq mov add push (bad) sub stos subb cli rex.WR rex pushq icebp pushfq fild in fnstcw pop pop (bad) (bad) (bad) sarl jne adc jmpq sti imul out pushq adc mov mov xor or jno jne out pop enterq fstpt (bad) jp (bad) and rex.R jmp cltd imul and movabs mov lods gs (bad) pushfq jo fldt test (bad) mov mov (bad) nop es mov (bad) or lret (bad) insl and fnstsw int3 (bad) jae push ficoml test andl or cmp (bad) ficomp and mov pop rex.B or push mov fwait (bad) outsb pop incl sahf push fistpl push jg rex.XB mov fld pop rex.WRXB (bad) div lret (bad) jno add mov cmp pop sub jge mov rex and int3 (bad) addr32 add pop outsb jnp in lret (bad) fwait sbb std sbb lahf jbe jrcxz mov movslq stos sub mov decl xlat and (bad) xor rex.X ds push iret pop adc leaveq pop and sahf pop jae pop (bad) rex.XB lock fstpt (bad) xorl callq adc cmp and rex.WXB sbb (bad) (bad) pand and sbb pop and mov repnz (bad) and rcrb (bad) cmp fldcw cmp mov in popfq lock fsubrs cltd or push (bad) lods movsl jmpq pushfq lret (bad) cmp mov callq mov fdivr jrcxz lock adcl adc and fwait xor pop fildl rcrb jno mov in loopne jbe imul cmpsl (bad) sbb jl pop xor pop (bad) test mov push ss movabs sbb repz cmp (bad) mov rex.WR cld jnp fwait mov cmp int3 jmpq addr32 push callq jns cmp pop jbe or xchg mov adc adc (bad) idiv xchg (bad) adc outsb (bad) push rex.WRX cwtl add and jno,pn jge iret cmp rex.WB rex.WRB (bad) (bad) sub pop xchg sbb fstpt hlt movsl cld int3 push rex.B xlat cmp clc cmpsl lret mov fisttpl add fcom cmp rex.WR cmc lock stos (bad) cmp movsb fwait xor icebp loope rex.W rex.WRB (bad) or xchg (bad) jnp rex.WXB icebp xor sarl rex.WRB cli xchg xchg imul (bad) lret mov leaveq rex.WR xlat leaveq ja fwait mov sbb (bad) (bad) mov sub xchg pushfq rex.R xor push add cmpsl scas sbb fwait imul (bad) sbb lods (bad) idivl rex.WB cmp (bad) pop (bad) int jl pop or negb push jmp mov mov xchg fistpl int3 ljmp or outsl and jne fisttpl cli add scas or pop and xchg rex.RXB rex.RB fstpt (bad) jns pop movabs (bad) fisubrl pop push pushq sbb mov rolb and (bad) mov cmp test (bad) xchg push mov movabs sbb fistl sub cltd data16 or (bad) (bad) (bad) xor (bad) push jo push jbe push add (bad) mov test mov loope mov pushq pop cmp (bad) (bad) pop jp movslq xchg mov faddl fimull and adc lret mov insb (bad) mov adc or lret test mov stos sbb out push imul out pop retq or pop mov or and loope xlat stos frstor test ds mov (bad) (bad) lods adc jg (bad) notl mov movabs adc callq and (bad) pushfq pop fsubl jmpq rcl or xorb (bad) std insl leaveq mov cwtl outsl cmpsl ja bnd (bad) add (bad) (bad) or mov iret push retq lea push (bad) jg hlt mul (bad) mov jns mov xchg sbb (bad) mov pop jmpq or jno add xchg clc push in fwait (bad) (bad) add add out push insb mov pop fsubl icebp pop rex.X repz jb (bad) jl fwait mov pop scas out stos fidivr jne sti mov stc fmulp faddl sub out add loope xor sbb rex.RB repz or (bad) retq pop jae outsl cmpb sbb imul mov in or (bad) js mov shll enterq mov scas int push rex.RXB and push pop jne xor roll adc rcr loope sahf mov push push (bad) (bad) add (bad) pop jnp out or fcomp (bad) (bad) in stos cmc mov popfq rorl lahf mov adc lret rex.WRB shl ds (bad) stos add sarb xchg push imul fstpt pop sub jmpq fmuls adcl (bad) (bad) xchg mov xor or fistl ss pop fldt fistp mov fs movabs mov add push fsts addr32 clc sbb (bad) test (bad) int xchg cmp out jle mov pop or or cs (bad) cmp pop (bad) lock push sub fistpl lret retq pushq outsb fistpl movabs movabs sub (bad) rex.W iret hlt cmpl jbe movsl in pop movabs push pushq adc callw cli fimul cwtl fs cmp (bad) mov cmp (bad) loopne stc sbb and leaveq xor push in xchg mov sbb cwtl lock (bad) sbb sbb out cmp (bad) push nop mov add fsubl push cld xchg push mov sti ds jno fwait scas cmpsl mov adc rex (bad) sub sahf fstpt popfq pop pushq fstpt jg int je imul shlb jo pushq (bad) pop test mov (bad) mov jmp or rex.WXB fstpt cmc push rex.WB mov fildl and fnclex (bad) jbe int3 (bad) std ds pop xor iret rex.WB addr32 and fistpl rex.B add mov cmc or rex.RB (bad) fxch push std movabs sub iret rcll pop or jl (bad) mov rex.WR (bad) mov movsl pop ds cli popfq test (bad) leaveq cmp fistpl mov shrb roll scas xlat jno adc (bad) stos push sbb push stos jrcxz mov xchg push insl (bad) mov movabs (bad) mov pushq and (bad) scas cld test (bad) (bad) pop lret mov rex.B push icebp (bad) mov sbb popfq int (bad) fsubs pop hlt (bad) andl lea push jnp lahf (bad) mov pop fistl in movabs callq jno cs (bad) pop addr32 cmc pop jne sbb sub rex.R shrb xor sbb jno imul pushq adc cmc rol loope (bad) rex sub je xchg fcmovnb test (bad) stos enterq iret sarb pop movslq cmp repnz movabs mov xchg in xchg adc addr32 (bad) xor pop sahf insl adc imul imul repnz mov mov push mov fwait shl lods insl (bad) cmp fwait jnp stc nop pop in (bad) rex.RB insl (bad) fsts pop cmp jmp ficompl pop pop cmp (bad) (bad) xchg adc (bad) mov pop or fucomi cmc cmpsb pushfq cmpsl adc xor scas cmp (bad) xlat adc insb retq (bad) rcrl clc push sarl sahf imul jp jne int scas pop jae cmp sbb or testl jae leaveq (bad) pop emms pop rex.RXB pop fistpl icebp xor (bad) xor jg mov pop cmp sub or fwait cmp or (bad) mov mov or repnz xlat outsl and mov out loopne jae lahf and lahf xor and rex test pop fildl in sti adc (bad) int mov jnp jbe rcl rex or ror mov test (bad) cmc movsl or fisttpll cmp xlat jmpq iret movabs cmc pushfq sahf movsl sbb fldenv (bad) ficom scas mov je jno cmpsb fildl outsb xchg (bad) (bad) or (bad) scas rex.RX ja xchg andl fistl mov loop fwait test fildl sti lea xchg mull mov rex.W and mov std fcomi or pop movsb icebp cmp rolb add repz fistl adc sub (bad) in (bad) rex.WX lret (bad) fisttpl (bad) sbb and sub jmpq push fwait mov out jno (bad) or jno and jl mov push cmp sbb cltd xchg sahf rex.WRB and addr32 fwait mov nop cli push jo rex.XB movabs pop mov (bad) sarb cmpsl pushfq cwtl decl (bad) adc add stos rex.B ss fwait cltd int3 push jae cmp ficomp fwait imul xlat (bad) xchg jae jb sbb out jge adc out fadds sub push imul mov and outsb mov cmc jge insl rcr in jl cwtl or fildl scas push test jne lret cmp loop xchg stos jmp add outsl fiaddl push data16 sbb (bad) sub pop mov (bad) (bad) mov xor xor cmpsl imul lods (bad) js xor movslq pop (bad) (bad) (bad) or sub movabs sub mov (bad) xchg xor mov cmp (bad) xor push lods rorl test mov fs sub outsb and stos xchg ds fistl rex.W (bad) push mov adc fwait fwait rcrb jb jnp sub clc fstp rex.R pop fildl xor in sbb sbb imul fcmovnb (bad) in fisub add movabs (bad) jno jo mov insl cmp (bad) xor test sbb mov test rex.X xor fistl (bad) movabs (bad) fnstenv rex.W mov ds (bad) or (bad) or stos sbb jg (bad) (bad) cmpsl rex.W mov movabs rex.WXB sub pushq imull mov loop rex.XB out push and mov js fisttpl mov xchg sbb cmp rcrl push and out gs rex.WRX add jl fistl and cmpsb mov push and sub or out rex.WRXB movsl movabs lods outsl jae addl movslq sarl sub movabs icebp adc cltd add mov pop rex.XB mov xor cmp pop stos stos ror (bad) movslq (bad) fnclex xor push add movabs or and in (bad) add rex.B xor jb fcmovbe sbb js sti enterq rex.WRB push add sub adc shrl popfq callq (bad) imul and xchg (bad) (bad) or xor mov je xchg movabs pop scas jp rex.RX xchg fwait (bad) adc fildl or (bad) (bad) pop mov mov xchg pop fisttpl (bad) hlt and cmp fcomi pop mov (bad) iret (bad) movsb fildl insb and add addr32 test mov (bad) cmp adc sbb (bad) je rex.WX rex.WRX clc (bad) insl sub mov subl push jae stos xor or (bad) (bad) sbb mov pop jg fucomi es mov pop loope stos cmp sti adc loopne mov iret (bad) xor and add lahf mov (bad) stos in lret mov cmp push (bad) rex.WRXB rex.WRXB rex.W fdivrp (bad) push fisttpl sahf mov jl cmp fisttpl mov (bad) js or mov clc rcrl movslq sub (bad) adc ja mov or and scas (bad) in fs mov jle push mov xchg test ficompl jg je sbb sbb push test pop jae push negb (bad) (bad) push cmp and (bad) andl (bad) mov pop cmp test fwait cltd mov out mov fldl lar or callq mov cmp addb sub or fwait loopne push fadds retq fimul mov (bad) shlb test ds stc ds rep (bad) jle repz cmp pop xor xor test in pop and mov xchg push adc or or sets pop jbe movslq sbb cmp pop fwait movsl pushq popfq stos cltd mov jbe pop stc iret leaveq in pop and jae andb loop cwtl rex.B sti out push mov pop stos scas (bad) mov rex.WX pop callq (bad) adc ja xchg fild jp (bad) cmp xchg (bad) fldenv sahf push ss mov push hlt std (bad) fwait in sub pop (bad) in mov rex.RXB lahf and (bad) mov cs movabs addr32 loope addr32 out out add (bad) out lret sub (bad) movabs lret mov mov push push xor jnp lea sbb (bad) mov (bad) iret retq lahf sub test pop fs (bad) insb mov gs or or in rex.X xor ss pushfq jge or rex.RX cmp movsl mov xchg jae push adc (bad) add cmp lret rex.WRB rex.RB pop jmpq (bad) mov jge add rex.WRXB push fild (bad) sbb fstpt rex.RXB pop pop jmpq mov lods jo (bad) notb adc jo clc in in and adc xchg cmpsb cmp pop setbe pop out adc scas (bad) (bad) ficoml or nop (bad) es orb xor jle push mov mov fdivrs sbb test popfq mov (bad) xor pop add jns fwait adc (bad) adc lea sbb cmp mov ror mov jns jl cs mov jp cmp jno mov nop sbb rolb callq cmc std (bad) clc add mov xor rex.XB sti mov movsb xchg punpckhwd xchg cmp push (bad) movsl xchg iret clc (bad) mov icebp sbb mov (bad) jae jl mov sbb rcll loope pushq mov mov xchg insl or mov mov add sbb test (bad) pop mov callq loopne jb repnz test jl or (bad) mov ljmp fstps jo fildll jrcxz pop mov push retq leaveq mov (bad) cmpsb retq jmp fiaddl mov pop jmp lret push test xor insb (bad) stos (bad) flds mov fnop mov lret (bad) sub (bad) stos xchg in (bad) or addr32 loope repz lods out pushq fbld (bad) negb jp ds movabs mov cmp sbb fstpt sbb (bad) mov add in push ficomp rex jmpq (bad) cmp jge fs xchg cmpsb fildl pushfq rex.WRX pop cmp jnp out data16 std add or xor (bad) js lods (bad) mov (bad) fisttpl pop (bad) pop out fucomip mov (bad) mov lods nop xor rex.RX sbb jg add fisttpl out cmp (bad) fdiv jb cltd add retq or iret sbb rex.XB fistpl scas in xchg (bad) std jae and fcmovne sbb cmp (bad) mov (bad) (bad) pand (bad) add mov in int add leaveq sub xor rex.RX ss pushq in out mov rol movsl movsb fwait movabs cmpsb in and fwait sar xor cwtl mov mov pushq (bad) xor or jbe lock lret cmp rex.B lcall mov (bad) or mov xlat add adc fwait movsb push mov ja in (bad) adc mov out cmc pop (bad) pushq (bad) cs mov movabs xor ficoml mov fcomi or test rex.WRX mov adc xor movsb fldt sbb pop fildl out (bad) cld clc adc notl cmp pop cmp lahf imul test vshufps rex.RX mov fldt fisttpl (bad) rex.W adcb test sub js nop loopne pop femms add push lea imul cmp addr32 movsb fisttpl mov repz (bad) push add leaveq or push cli (bad) fiaddl and mov addr32 jge xor ficoml fldt xchg jo (bad) xor sahf rex.WRXB (bad) insb int3 sub jp out push decb (bad) mov mov pushq fldt pop (bad) lock and fnclex jle (bad) movabs popfq mov xchg add ja mov (bad) mov mov jo jl sbb jb jrcxz fwait (bad) loop push adc add lods push adc cld sbb or (bad) insl sub test out lret in push rex.RB fsubr (bad) sbb jle out mov add (bad) fisubl (bad) idivl (bad) lea and rex.WRXB clc pop rol fcmovbe mov push sub test pop adc mov (bad) (bad) movabs fildll verw xor fstps in rex.RB rex.R psubq (bad) add ja jno (bad) add cli imul mov (bad) (bad) pop (bad) sarl insb popfq jmp sub sbb (bad) kmovw nop (bad) push rcrb rex.WR mov (bad) xor cld add pushq fdivl enterq int3 (bad) xchg and xchg jg rcrl out add rex.RX pop rex.WX out xchg xchg sub mov cli mov fidiv fwait leavew or iret push nop sti mov movsl lretw jg subl xor (bad) sahf xlat mov (bad) push and xchg (bad) xchg jnp xchg rex.WB rex.WR (bad) fstps mov and sub sub push adc (bad) retq mov xor mov cmp mov mov fbld cmp mov rex.WRXB fucomip mull movsl cmpl jns loope fs mov jrcxz jnp jno jl mov rorl cld movabs (bad) push xchg add iret mov movslq sub (bad) fnstcw pop fcomps xchg (bad) addr32 stc fstl adc (bad) scas retq mov in ficompl (bad) imul jmp lock add rcl sbb mov sbb imul nop sub (bad) pushq mov (bad) xor sbb sbb (bad) in movsl out rex.RXB (bad) sub jp pop test cmp lods (bad) adc rex.WXB insl sub (bad) and lret retq fwait (bad) retq mov (bad) (bad) fnstsw rex.WR movabs scas fistp (bad) (bad) (bad) cli cmp pop pop lret movsl mulb pop xor xorl pop mov xchg rex.WXB and movslq lret in push push jae mov fldcw xchg icebp fcomip rex.R cs stos (bad) mov pop pop push sbb pop frstor adc sub stos mov (bad) mulb mov loopne lock lret adc (bad) lret mov and (bad) xor (bad) movsb pop and fistl jl lret mov (bad) and xchg (bad) (bad) jl rorb xor pop addr32 addr32 mov test mov push mov (bad) test shll loope scas mov or (bad) mov mov iret and pushfq rex.WXB push xchg jbe mov cld cltd ja repz subl fidivr mov or cld fwait movslq pop cmp pop add (bad) mov sbb mov (bad) (bad) jnp outsb sbb and (bad) jmp xchg xchg sub and lret mov xchg rex.RXB retq out ficomp mov sub (bad) data16 xchg adc fs rex.WR pop push cmp mov (bad) mov je movabs testb lock or rex.RB fldt add cmp mov retq sub (bad) out lock outsl leaveq mov jle insl rex.WB mov mov push (bad) (bad) pop (bad) pushq loop pop or fucomi imul (bad) int3 (bad) movabs pushq xchg mov retq fldenv jne sti and movabs int pop rex.WRB xlat lea lahf fildll pop mov stos (bad) mov push sub lret add mov pop (bad) movabs repz jrcxz xchg rcll jmp (bad) mov fldt mov sbb and xchg loop jmp (bad) cmp fwait (bad) mov popfq out sub rex.RB fisttpl js test add push pop (bad) rex.WB and push (bad) jp rex.R stos fdivrl gs fmuls push add outsb (bad) iret insb push mov (bad) lret pop fs pop retq cli cltd add imul pop (bad) push jp sahf movsb rex.R rex.B xor sti fsubp jne adc xchg rex.R pop cld cmp cmp push mov (bad) fistpll mov fdivs (bad) rex.R repnz jae (bad) (bad) sbb (bad) pop pushq pushq (bad) sbb mov sub (bad) sub xlat pop insb cmpl mov jmpq rex.WX rex.WX push ficompl jg,pt fistpll jge cltd cmp add add rex.XB jrcxz mov xor rcrl jb leaveq xchg loopne jmpq pop mov in sbb rex.B (bad) pop xchg ficompl xchg pop clc or fadd leaveq (bad) jge test sbbb (bad) (bad) lock xor (bad) jrcxz jrcxz xchg and shll in push jle (bad) sbb out mov sub mov cld movsb cmpsl mov int xchg movabs pop push xor (bad) ss (bad) scas and scas ja (bad) test rclb mov test cld pop sar repz xor rex.B (bad) add adc mov stc add rex.RB adc in pop mov jrcxz sbb rex.WRXB and adc addr32 xchg leaveq (bad) cltd retq jp cld repz jrcxz or (bad) fcoms (bad) pop push or push (bad) fist add pop pop repz shll mov mov adc xchg in sarb xchg fstp out cmp add or fsts fistpll adcb pop fnstcw mov or push fiaddl (bad) int3 loopne movabs lea stos mov loopne nop push add (bad) int stc and movabs int3 rcrl (bad) rex.W scas insl sbbl data16 (bad) pop int3 retq pop test rex.WB xchg movsb jg fwait clc movsb (bad) insl mov in fwait imul (bad) ss movabs lret add xor or and fsubrs jne pop (bad) lock imul (bad) jnp jl sub rex.WX sub push fidivr sub (bad) (bad) movabs sub rex.WR ds fistpl pop stos xorl (bad) pop pop xchg (bad) imul movabs int fwait hlt (bad) adc movslq push cltd pop xchg add jnp rex.X fcom add in adcb imul jl retq add or (bad) test sub ss cmpsl (bad) hlt and imul jrcxz callq rex.RB fwait sbbl pop sbb pop jns movslq pushfq ss jl push pop (bad) ficomp push lahf or lods and lea stos cld movabs out rclb shlb add imul imul sub adc pop out movslq or push push cwtl retq fisubl and (bad) in loop rex.W (bad) clc mov sub (bad) repz (bad) cs (bad) test (bad) xor in jg pop orl mov shl imul rex.WRX mov movabs (bad) (bad) movsl subl pop outsb nop stos hlt gs lock ds fnstcw (bad) enterq (bad) fldt adc pop movslq rex.WRX and enterq retq push test mov nop fistl mov lods movsb mov movabs pop pop adc mov lahf out xchg scas movabs jno in sahf and fstp pop rex.XB fistl adc out jmpq mov (bad) pop mov std ds int mov fistl fs add pop rex.B (bad) cmpsb fistl (bad) (bad) jmpq incb movslq in ror fildl clc (bad) push (bad) rorl nop xor add pushfq movabs (bad) retq rcr jno movsl push add lods pop (bad) pushq jbe stos cmpsl int fcmovnb pop rcr clc add jrcxz push movsb push jae fucomi nop ss orl loop rex.WXB (bad) int3 fldt sbb cmc rex.WB mov jo adc sbb (bad) fisttpl popfq movslq rex.WB sub movabs fisttpl fldenv out jg jg stc pop xchg repz cmpsl (bad) rex.RX ss (bad) pop scas cs cmp (bad) jbe mov fcmovne xchg or rex.RXB pushq (bad) out jmp fisttpl (bad) clc loopne fs mov scas incl mov and fcmovnbe in cmp mov rex.WRX xor (bad) jb retq adc mov jl clc sub js in in and mov movslq cld (bad) adc je and or addr32 jnp mov pushq lahf movsl push idiv cmp mov stos rex.RXB adc (bad) out movabs data16 sub lret pop pop retq movslq fs pop repz pushq (bad) stc popfq sub sbbb rcr rex.WXB iret jbe pop (bad) jmpq (bad) repz cmc push pop (bad) fadds cli movsl (bad) push pop stos push rex.B xchg imul scas jae fcmovne sub rex.WX sahf (bad) cmp jo and imul sarl subb mov retq stos data16 mov gs lret movabs out cmc sub enterq pushfq xor test ja stos int3 (bad) jrcxz fcomps jae in cmp (bad) (bad) in rex.B bnd jnp jns lahf xor jno andb sarl jnp test pushq es mov mov lock fcmovne stos sub pop in mov mov push fildl (bad) cmc jne xchg test or scas (bad) xchg pop sbb add leaveq xor jnp (bad) fs stos sahf cmp cmpsb mov ss xor cmp add fadd in mov leaveq (bad) cltd sbb rolb jg pop mov in rex.RB pop add mov push lock xchg (bad) sub pop (bad) repz cmp mov mov cmpsl pushq movabs fwait rex.B pop outsl test xor pop movslq mov mov pushq jae sahf xor pop sbb sbb jnp push movabs cltd xchg mov add xchg pop callq pop or rcr and rex.RXB (bad) jno ja movslq adc sub xor cwtl push fwait (bad) loop xlat fwait lods xchg fmull jg mov xchg ds rex.XB xor (bad) int3 rex.RX jne cmpsl xchg (bad) jle sbb (bad) in lret xor cwtl add (bad) cld fwait nop scas pop xlat mov jbe jl jnp sbb sbb xchg pop in and cmp xchg cmp jmp mov or mov pop xchg or fwait mov movslq addb (bad) out mov int rex.WRB (bad) cmpsl sti xchg fimull (bad) mov jae enterq xor jnp sub (bad) xchg rex.WRX rex.RX icebp sbb and sbb fcmovnu push popfq movabs rex.RX mov pop movabs sbb push jns icebp lahf xor cmp enterq mov cli (bad) push rex.WRX lods shrb fs mov cmpsb (bad) (bad) outsl and rex.RB jnp xor loop lret stc (bad) rex.W mov (bad) je pop or stos or cmpsb add jae pop push (bad) insl and mov xor rex.WRB lret adc rex.XB and imul mov rcrb pop and pop cmp adc (bad) loope rex.RB pop push xchg repnz loop sub add fdivrs (bad) shrl push (bad) (bad) cs stos pop movsl xchg jl movslq fisub rex.WX mov push icebp js rex.WB pop addr32 rex.W rex.WRXB xchg sbb rex.RXB stc add mov pop mov cld (bad) ja lahf fnstcw (bad) clc or (bad) testl rex.XB pop push notb add rex.WRB cmp shlb out cmp rorl sub jp mov pop (bad) mov iret addr32 (bad) mov and add (bad) adc fadd fisub lret adcl fdivs mov and push (bad) int fistpll ss (bad) push rex.RX or mov jns adc jo mov (bad) (bad) xchg pop (bad) jle vcvtss2si mov and rex.WRX sub movabs jno pop mov movsb lret mov mov and enterq fisttpl or (bad) rclb int3 stos int (bad) data16 xchg pop rex.WB movslq loop mov cmp rex.WRXB pop rex.B data16 fisttpl adc rex.WX mov push int3 (bad) mul mov (bad) push int3 jg rex.R fwait xchg xchg stc xor (bad) pop sbb jl callq xchg jo (bad) xor or fistl rex.WR adc imul rex.RB stos mov mov and jns (bad) or push addr32 sbb (bad) xchg imul fdivs retq insl (bad) rex.WRB sarb popfq es mov push push mov out add iret rep incb mov (bad) fldl (bad) stc (bad) push fisttpl out jae (bad) std outsl add insl or cmp fisttpl (bad) jbe sahf scas (bad) int (bad) jno addr32 fistpl rex.W (bad) add in push and cmp push jbe mov pop in faddl movb push jnp sbb or pop hlt adc sbb pop cmp sub xchg rex.X (bad) xor mov ds (bad) retq sbb rex.XB rex.WRXB xor xchg movabs (bad) int3 fadds sbb rex.XB rex.RXB jl fcmovnbe (bad) (bad) ss (bad) jno (bad) jb test jbe rex.XB sbb icebp rex.X xor xorb xchg jle jnp (bad) test or sub (bad) out xchg jmpq fwait (bad) sub iret xchg or nop (bad) jg fmull sbb popfq mov jno rex leaveq push fmul xchg sti add cmp fcomi or clc sub rex.WRXB (bad) add and rcrb (bad) iret (bad) rex.B rex.WR rex.RX xchg (bad) add (bad) rcrl test rex.WRX xchg pop sbb in push lret (bad) in sbb retq (bad) sbb movabs lret pop (bad) (bad) lea cltd xchg push (bad) retq stc jns (bad) jmpq sbb fwait cmp in jne pop ds xchg push pop rex.RXB in movabs scas (bad) (bad) ja sub (bad) mov mov pop fisttpl iret callq ja in lock mov mov cltd lods cmp xchg enterq or jle xchg mov push (bad) and sub jb mov test rex.RXB mov pand jmpq lods (bad) fildl jmp sub (bad) pop rex.WB xchg enterq add imul out jge xchg fildl (bad) or (bad) movabs push imul (bad) sbb pushq in imulb (bad) rex.WXB push mov cli sbbl (bad) or pop pop mov std retq enterq gs es pop or (bad) mul jnp adc fldt (bad) in lret xor rex.RXB mov (bad) stos rex.WRXB (bad) (bad) push movabs (bad) repz and out pop jno ja insl mov mov adc mov hlt fistl nop pop movslq rex xor xchg xor (bad) sub lret rorl sbb sub clc or imul or (bad) jno pop add jns sbb repz adc push test callq rex.WB cwtl fucomi xor xor jle pop rcrb decb jrcxz ja jl lea hlt mov movsl rex.WX add jae lret lock out rex.WR (bad) shlb (bad) cs jne pop xchg test (bad) loope pop fistpl xchg and (bad) pop xchg movabs and cmp pop ds mov (bad) or pushq lret loop mov in cmc xor xor (bad) fwait loop (bad) or xchg pop and mov fwait sahf (bad) mov pop rex.WXB push sbb xor lret mov scas clc mov fildl (bad) int3 shrl and imull (bad) pop retq fimull jrcxz cmp xor jae scas cmp jg pop xor clc (bad) movabs fisub jb push mov pushq (bad) jp loope sub (bad) shrb mov psraw rex.WRXB mov sub loope mov lock (bad) (bad) cmpsl stc (bad) jg out scas sbb sti add iret and ljmp pop cmpsl pushq outsb or add hlt xor out rex.WR mov mov add test jg or mov (bad) xor sub mov sti (bad) ja (bad) xor stos cli mov rex.XB cmpsb sub test pop push cmp in xor xlat divl sub pushq pop push jge mov or cmpsb (bad) mov stos jmpq (bad) std and cmp rex.WRX lock out fdivrl fabs movsl in pop hlt or fwait int clc add stos jns xor cmp sbb test lret pushq (bad) jrcxz lods pop (bad) jno push cmp push repz mov xchg shrl (bad) xor mov andl jno add sbb retq (bad) xchg out jg sarb rex.X movabs sbb mov add fnstenv xor sub adc mov callq divb (bad) (bad) cmp or rex.W xor lea (bad) sbb and sahf rex.RX adc pop fild (bad) in add xor xor stc xchg (bad) cmp add insl mov xlat iret js add callq jb rex.RXB mov adc fldenv (bad) (bad) mov mov cmpsb (bad) vpaddb lahf mov lret std cmp nop rex.X lock fcmovnbe (bad) xchg pop pushq pop push xchg lahf movsl pop xchg add enterq mov mov lret and mov retq adc push fstpt xchg xchg cmp rex.RXB and lock or lods sbb xor mov push mov push pushq (bad) pop mov (bad) jge add (bad) mov (bad) xchg sub jnp std sub (bad) ficompl cmp out adc xor fildl mov mov (bad) sbb mov mov ficomp mov jno jp add (bad) cmp mov sti jge fwait repnz or mov add cmp or (bad) add stc sarl cli jl jg out fldt cmpsl xlat addr32 lahf cmp pop rcr cltd scas jnp xchg fcomp stos pop iret std decl mov (bad) or fiaddl outsl rex.WR (bad) pushq xchg add dec adc rex.WRB stc (bad) fwait mov lea movabs pop cmp int3 mov or (bad) (bad) xchg fistl adc movsb pop xor test fwait shrb jb sub fisttpl loope mov jmpq fcmovne stos rex.WRXB rcll incl rorb push out (bad) mov jno movabs sarb nop jo cmp out xchg sbb rex.W cmc pop adc rex.WRX in or cmp (bad) cmp test (bad) pop xchg jne xchg sar outsl or stos jrcxz data16 mov in pushq stos mov fwait pushq mov in fisubrl fild int3 xchg jae popfq lods jns pushq xchg movabs or rex.B rex.WRB mov sub mov pop xorb (bad) xor push xchg pop cmpsb lods (bad) addr32 (bad) stos movabs (bad) mov cmpsl jp mov add mov push mov rex.W cmp fdivs int3 cld rex.WR (bad) rolb jae xchg leaveq jge fwait and (bad) out subl add mov (bad) movsl movsl test shll test orl rex.WR (bad) rex.RB mov sbb cmpsl (bad) (bad) xor stos lods jno (bad) cmp sub insb insb (bad) lret (bad) in fs sarb loopne add shrl rex.R cld js mov retq mov lret gs fstl movsl push or or out gs (bad) jp pop add rex xor ffree mov sub out xchg add or addr32 out mov rex.R rex.RXB fisttp (bad) fldt (bad) ror pop mov push ja callq push rex.WR fistpl outsl (bad) lahf sub adc pop pushfq jg jrcxz mov (bad) and mov (bad) imul stc rex.WRXB xrelease or (bad) test sbb adc (bad) xor sub rex.B (bad) pop or rex.WR mov and fisttpl movabs (bad) pop jb jrcxz adc mov shl push pop popfq sbbl push fstpt xor fcmovne outsb fdivl rex.WRX (bad) sub rex.WXB imul lods mov frndint es push jg fistl int iret outsb mov fistl sbb (bad) pop jns addr32 lods add (bad) outsl pushq fistpl or (bad) jle or and jae rex.WRB mov xor std pushq push jb (bad) jnp stos shr (bad) or lea pop ficompl mov push pop mov jnp sub push pop (bad) popfq push fstpt mov mov sub fsubl jnp ficom (bad) std movsb (bad) pop and cld xor xchg mov adc fistpl cmc (bad) movabs adc (bad) push xlat mov and rex.RXB outsb (bad) (bad) xor adc cmp in jle cmp js rcl subb cmp insl push rclb push outsl (bad) push rex.W movsl rex.WR fmulp (bad) (bad) fldt (bad) out lahf rex.RXB push (bad) cmpl or or lret fwait pushfq (bad) out (bad) xchg fstpt jbe fisubrl xor (bad) cmp (bad) cltd mov int3 (bad) rex.WXB cmc fs flds pop rcl sub rex.B sbb std insb pop push sub and and cld ss cmp sub cmp jmp rex.R div rex.WRB lret jb xchg mov iret in rex.XB rex.B rex.R pop pmulhuw jbe push fisttpl test outsb pop movslq fisubrl cmp mov callq adc fisttpl push fsubl pop jno pop movabs xor retq or mov fcomi xchg sbb xlat lahf add stc mov movslq (bad) icebp (bad) (bad) (bad) js movabs add add and sbb imul rclb testb fcmovne in sahf movsl cmp mov int callq sub cmp mov jle cld addr32 jmp scas rex.RB add loope shrl rex.WRX fisttpll lea mov (bad) insb (bad) insl pop or (bad) sub sbb mov popfq fistpl cmp js movsl movabs mov adc scas mov jl push mov pushq xor cmp add jbe fcmovnu ds rex.XB (bad) fstpt fcmovbe callq (bad) out fstpt sbb sub fidivl cmc (bad) rex.XB rex.XB std adc xchg (bad) mov pop leaveq (bad) pop pop fsubrp mov jnp rex.WB mov xlat es and scas push pop add test cwtl fdivl pop mov cld xchg sbb cli push fnstcw mov pop (bad) (bad) adc sti shll rex.R rex.XB sbb cmp fstpl shlb sbb data16 imul cli pop imul push imul cltd rex.RB fs in (bad) out and or adc jne mov iret mov (bad) jo out outsb rex.WX lret fnstcw fisttp (bad) fiaddl in scas and (bad) outsl (bad) test xor clc js out out cmp xchg in movslq jae fnstsw cmpsl push adc je ja ficomp notl adc xchg in sub gs xchg sbb (bad) and mov sahf push sahf rolb and push (bad) out imul movsl adc mov imul outsb lock fcompl jp (bad) scas loope or out movabs push rex.WRX shrl fdivrs mov jmp ds mov cs sub cmp movslq pop cmp xor mov (bad) jo rex mov lahf (bad) sub clc adc mov insl and mov mov mov (bad) pop cmp jae push sbb hlt loope xchg xchg mov pushfq movabs movabs fidivr cld xchg mov (bad) mov and xchg jb test adc sbb mov stos movabs and cmpsl or or (bad) push xchg push (bad) jp (bad) sub push jmp mov retq rex.WXB sahf lahf rorb in fcomi ja rex.X (bad) push lahf insb adc loopne push imul (bad) fldt (bad) negb (bad) xlat cmpsb jge (bad) loope in mov cmp cmp pushq mov popfq mov rcr in jmpq push rex.WR add rex.W (bad) rex.R mov fwait (bad) pop lahf push pop (bad) lret insl movabs imul scas out sti (bad) xor sbb test (bad) cmp (bad) and mov pop pop fcomi xor rex.X rex.XB rex.WR out ja xchg decb (bad) gs jne insb and cmp rex movd ja movslq popq stc push pop flds (bad) (bad) mov es fstpt (bad) sub (bad) fdivl movabs and mov pop stos (bad) leaveq insl pushq pop (bad) fldcw addr32 push vmovntps add (bad) test movabs lods pushfq sarb rex.B (bad) pop callq rex.WRB movabs addr32 (bad) rex.X push (bad) sbb fistpl std adc int xor fildl jae sub jo shlb jno ja pushfq movabs stos fistpl movsl adc (bad) out mov add sbb je lret popfq jmp fcomi or or mov add pushfq retq xchg jmp cmpsl sbb movabs jno paddusb sbb mov mov cld in xor fistpl cltd fmuls subl (bad) pop jae mov jge fidiv or and cmpsb out movsb push mov pop iret (bad) repnz test (bad) fidiv jmp out movabs (bad) loop pop push fwait outsb loopne rex.RXB (bad) or out jmpq cmp insl fwait adc and repz jp sti jl xor mov pop xchg pop (bad) cli jnp (bad) lods loop jbe sbb mov sbb xlat jb (bad) es mov out pop loop pushfq mov (bad) sbb xchg push add lret je jge es rex.R rex.WR rorl imul and (bad) (bad) adc lods (bad) (bad) cmpl fwait mov rex lret int mov rol scas fcmovne cmpsb xlat shrb psraw fcomps and (bad) (bad) fwait pop add fsts push (bad) out jmpq sub adc cmp fldcw (bad) push fdivs mov cli mov cs (bad) (bad) pop mov sbb pop or lock mov sbb pop jmp (bad) stos cld xchg jae rex.WB stos (bad) pop jo mov push or pop mov pop sahf or (bad) stos jmp (bad) retq push imul (bad) (bad) mulb pushfq jp cld and (bad) push icebp xchg (bad) cmp adc (bad) int (bad) (bad) lods (bad) in jl,pt sbb sbb lock lret lret (bad) idivb push mov fldt int3 (bad) fcomip (bad) push fwait rex.XB (bad) fldcw retq fwait jb std cli push cmp scas pop add movabs imul icebp jmpq movabs adc cmc mov lods add push jnp mov test mov data16 mov imul mov sahf mov sti rex.XB movslq sub rex.WRB jae pushq add (bad) addb cmp movsl imul and lahf pushq mov cli add fstp adc and mov xchg mov mov fistl out rex.RXB (bad) push add jnp xchg lret rex.WRB sbb movsb leaveq sbb add popfq lods or loope fwait (bad) adc test (bad) movslq in xchg mov and (bad) mov rex.WXB out fwait ds repz out push ficoml xorps (bad) mov adc movsl pushq (bad) pop rex.RXB fistl jae jle (bad) shrb cmp stc push ficoml jg pop (bad) (bad) rex.WRX mov test mul pop movabs lods adc (bad) pop fldt mov rclb (bad) ja pop cmp mov fcomi cld (bad) xor fistpl cmp pop or rex.WB rex.R lock (bad) (bad) add push sub int3 (bad) push (bad) mov movabs gs fcom ss rex.XB sbb fld hlt mov push scas mov es sub in fistl sub mov (bad) sub movsb mov rex.RXB fwait (bad) pop mov push rex.WRB js or jmp data16 rcr cwtl sbb and or (bad) (bad) fnsetpm(287 add jg leaveq jnp fcom (bad) xor jnp pop (bad) (bad) mov pop jne imul lret pop lods ror add (bad) fwait xlat xchg rex.WRXB jae in jge test fcmovnb adc sarl sub iret mov (bad) pop rex.WXB add sbb fistl add retq rex.B fldenv imul add out cmp push pop push mov std jne sub push push fsubs pop add cmp (bad) cmp adc mov cmpsl cmpsb sub mov out jne pop out pop sbb in add gs jge pop stos mov movabs imul (bad) sub rolb rol pushfq sub jl movsl sbb rex.WRXB jp rolb in in mov push out leaveq mov pop pop sbb lock (bad) jnp and cmp mov rex.B outsb lahf (bad) (bad) xorl cmc popfq sbb (bad) mov (bad) lock cmc (bad) fstpt mov (bad) lods insb (bad) jno iret rex.WXB rcl mov ds shrl (bad) fcmovnb push loope cmpl adc movabs lods (bad) int mov hlt (bad) mov outsb fucomi jae sbb pop imull cltd mov (bad) retq (bad) cmpsb lods adc sbb es and cli (bad) rex.WRX fs cmp adc (bad) mov (bad) jg (bad) or sysret cmp sub (bad) (bad) ja (bad) adcl cmp movslq jle outsl cwtl push (bad) jbe mov fldt test mov xorl sbb rolb push xchg xchg mov xlat out or rex.RX lods test fbld fisttpl hlt fdivp xor sub leaveq movabs scas cmc stos xchg repnz lret (bad) lret mov pop add mov loopne movabs mov add stc add push or fistl movabs movsl and test cmp pop xor stc pop (bad) or cmp pop loop lret retq fcmovnbe outsb sub jnp xor (bad) cmp xchg repz push sbb fldt clc mov cs mov (bad) rex.WRX stos xchg repnz (bad) xor (bad) rex.RB fs movsl pop mov cmc popfq pop cmp mov (bad) ja and sub loopne pop xor xchg gs xlat (bad) jae (bad) sbb and sbb fwait (bad) imul rex.R jns adc cli jmpq xorb cwtl in rex.RB nop fildl jbe leaveq xchg data16 insb mov pop movabs pop xlat cwtl and ss push pop push (bad) xchg callq and xor in jmpq cmc pop mov outsl (bad) (bad) cwtl loopne add movabs je,pn pop (bad) int3 rex.WR xchg (bad) xor or cld in sbb and jg (bad) or mov or cmp mov ja subl (bad) sub xchg fwait popfq (bad) mov pop pop loope ss sub mov out (bad) fldt rex.RX retq mov cmp out imul leaveq (bad) jbe (bad) in jl rex.WXB rex.B xchg jno lea retq fildl leaveq cwtl rcrb (bad) push xchg adc rcrl jle cmc fisttpl cmp (bad) cmpsl mov add jrcxz (bad) fstpt loope xor sbb xchg add pop mov out imul rex.XB rex.X cmp mov movsl mov jb sbb (bad) rex.WR scas cli movsb sbb lret xlat decl fistpl xchg lea (bad) rex.WR mov jnp je (bad) rex.WRXB repz sbb (bad) cmp fucomi negl adc shl test in lods or mov fistl addr32 (bad) mov fisttp rorb imul xchg or mov add adc cmp push (bad) mov (bad) sbb and rex.RXB addr32 push push jb pop fist insb (bad) (bad) xor jnp rex.WRX (bad) repnz fucomi xchg push shll lods cmp and int sbb outsb (bad) adc sub (bad) xchg adc cmp xchg movslq std mov rex.X xchg sarq fadds fcmovne cmp xchg (bad) xchg mov fldt or push cmpsl sub mov pop adc mov pop cmp scas push ja sbb jge fadds add adc retq fdivl insl leaveq (bad) mov fcmovnb (bad) (bad) (bad) rex.WX xchg int3 and pop or fdivs rorl fidivrl add insb jl fcmovnb fiaddl mov sti loopne pop jp popfq (bad) ss stos (bad) lret add cmp test sarb std xor sarb flds (bad) cmp sub icebp rex.WRXB pushq sbb adc xor ja,pn mov rex.WXB pop rcrl int sbb sbb (bad) lods mov psubusw mov and rcll (bad) cmp pop jle movabs mov add pop (bad) pand sub jbe rex.B rex.RXB (bad) rex.WRXB cmc test sub (bad) jno (bad) rex sbb or jnp movsl cld (bad) jnp repnz and mov and test pop and push pushq movabs (bad) in adc cltd (bad) stos (bad) jno (bad) mov sub imul rex.WRB or push hlt rex.X rex.WB (bad) out test fildl movabs sbb and mov or int push test (bad) movsl imul (bad) in pop and test mov iret rex.RB ss out adc (bad) mov pushq pop pop fnstcw xchg imul mov sti js (bad) (bad) test cmp rex.XB cmpsl rolb push rex.WRX pop mov cmp enterq rex.WR add (bad) (bad) (bad) cmp sbb test pop cmc mov cli loop mov vzeroupper mov add in adc rcrl mov cmc in int subl push and adc movsb leaveq fwait (bad) and iret cmpsb popfq movabs (bad) out insb rcrl fidivr cmp pop xor js enterq lahf decb jnp push or ja (bad) fistl push or in (bad) rex.WRX mov (bad) xor popq jge (bad) rol movsb xchg fidivl lods mov imul pop and mov add lret hlt rex.RXB cld rex.W gs push jmp fbstp jle movabs pushfq xor fisubl test and stos stos cltd xor mov outsl out mov cmc retq imul xor cltd pop movabs pand gs rex.WRX sub pop movabs mov jbe xchg retq cmpsl (bad) (bad) sub (bad) or (bad) cltd xchg out jg xchg (bad) xor jl add push jb fdivl mov rex.B mov imull jge ljmp mov xor rex.RX mul (bad) int xor adc cli (bad) jmpq add pop jge mov clc fwait mov or push adc (bad) mov xor or xchg pop (bad) repnz in fidivr sbb ficoml pop (bad) stos cli xor (bad) popfq cwtl mov rcr sbb add mov scas fildl pop (bad) mov test movabs (bad) push setp pop (bad) callq (bad) mov mov scas jo pop cli adc rex.WRX rex.WB xchg (bad) lods rex.R (bad) out jnp int sar sub (bad) movabs (bad) mov ror (bad) loop push mov sbb cli mov (bad) pop (bad) rex.R (bad) fstpl or mov jnp (bad) movabs mov enterq or sbb rex.WRX rex.W rorl mov rex.RXB cmc (bad) add and fistpl (bad) jno mov fcmovnu in adc mov xchg rex.WB imul adc scas fistpl rex.R push callq cmpl push rex.WRB movabs mov insl imul xor mov rcrb or imul fnstcw rex.RB jmp rex.WXB rex push xor jnp jmpq insl and rex.WR test (bad) es addr32 mov js and outsb (bad) movabs (bad) and rex.RXB mov fistl mov fstpt sbb rclb cmc ja add movabs je (bad) outsb out fstpt fisttpl (bad) lahf cmp and lods add lret cmp xchg pop jl rex.WB mov or test sbb rex.WRXB fsincos fildl ss push fisttpl scas xchg xchg shrl loopne fs es test and js cmp outsb cld mov (bad) mov and jnp rex.WR mov movabs in xor push xlat xchg adc cmp cli xchg mov fldt iret cmpsb rcll lret mov (bad) xor int jae iret jns iret (bad) (bad) (bad) (bad) add (bad) cwtl mov mov stc push fistpl incl rex.WXB (bad) fldt (bad) ficomp insb rex.R rex.WRX cmc pop (bad) fstl (bad) pop lods and xor pop (bad) mov outsl sti nop cmc movsb pop push callq push sub cmp cmp rex.R repz jo (bad) jb (bad) shr fs xor xchg mov (bad) cmp (bad) movslq rclb xor (bad) jp fbld mov rclb or loop adc rclb mov mov xor mov pop out pop pop leaveq xor mov scas pop pushfq add (bad) mov pop push andl rex.WRX idivb xlat clc xchg outsl iret movabs jg flds fistl sbb (bad) sub (bad) rolb movabs jmp addr32 cld mov or icebp fldt xor fcomi (bad) (bad) sbb int movsl and mulb pushq adc (bad) (bad) sub mov lret rex.RXB fistpl and or mov (bad) movslq cli pop cwtl adc xor (bad) ja rex.RXB (bad) and leaveq cmp rex.RB data16 pop (bad) ss mov rex.WRX mov (bad) fs cwtl in xlat fbld ds pop (bad) std out xchg (bad) rex.X icebp imul int3 clc and mov add pop (bad) data16 mov (bad) (bad) movsb lods mov fistpl pop pop cs in cli xchg iret (bad) mov or rex rex.RB sbb fcmovnbe fadds or scas pop (bad) xchg mov rex.RXB rex.WXB cmp loope push roll rex.WRX movabs pop int mov sbb cmp lret fisttpl xor sbb mov enterq (bad) fimul (bad) xor (bad) int or cmpsl cwtl xlat jl add (bad) sub int push lret loop rex.WB ds push and mov add mov lock sub jbe fldt rex.RX fcomi insl add push movabs jo pop (bad) mov mov jg fistl jg jmpq adc sbb lock repnz callq (bad) mov rex.W rex.X (bad) rex.WR xchg adc sti xchg imul rex.RX fwait jg (bad) push xchg jno (bad) sbb rex movsl jne enterq (bad) rex.X fcmovne out out (bad) movsb rcr sbb in cli push xor addr32 fwait incb fcmovne rex.W adc pop push (bad) fldt test rex rex.WRXB mov mov pushq (bad) rex.WRX cmp fcomi adc loop mov fmulp or negl mov add jrcxz add add fcmovnbe sub test movabs and jnp lret outsl pop pushq movabs es imul adc imul cwtl outsl stos mov adc push js jle fidivrl mov fisttpl and mov addr32 (bad) bnd adc and pop movsb sub jnp loopne movslq fldt sub mov leaveq pop fildl mov pop push add rex.WRX pop out rex.RB pop fcmovu sub mov fstl and (bad) (bad) retq jp rex.WRB icebp shll xchg fisttp xchg fwait ss push out mov pop sti jnp lret adc mov push fs pop adc cmp subb cli jnp or out gs out lods (bad) pushfq (bad) (bad) mov (bad) mov jg jb roll adc movsl sbb sub (bad) outsl xchg (bad) mov or jrcxz (bad) clc cmp fstpt cs pop jae rcl cwtl (bad) (bad) imul cmp rex.RX pop sarb jns jg outsl mov cltd rex.B sub rex.WRX fildl test (bad) sbb cmp mov xlat rex.RX rex.WR fwait ja pushq and sbb mov or push stc scas cmp and fisubl int3 (bad) (bad) push pop mov rex.RB insl lahf out pushfq fistl and fwait test rex.WRX es sbb jmpq jp cmpsl jbe pop cmpsb frstor (bad) (bad) rex.WB mov jrcxz out sbb mov repnz stos mov jmpq pop (bad) mov add rex.WR cmp in and mov popfq roll sub fwait shrl out lock mov adc clc imul adc (bad) rex.WXB retq sub push jle jo cmp or mov mov jp rex.RXB rex.XB mov and mov (bad) ficoml movabs rex.WX and mov in add in rex.WX rex.XB rex.W fwait shrb neg pop xlat or and sub (bad) sub lea insb js gs rex.WB rex.WX lahf lods in rex.WB int fldt cli lahf sub rorl (bad) test mov rex.WB fimull cmp mov add mov es test sbb xlat repz (bad) mov (bad) (bad) in add add push push mov rex.RX add outsb loopne movsl rex and insl mov lea rex.RX retq mov xchg mov add sbb lret std imul fistl rex.WXB mov (bad) pop (bad) notb gs cwtl adc add rex.R ds lods mov loopne xchg jge (bad) lods int ficom (bad) movsb test fwait (bad) cmp (bad) fcmovu (bad) mov mov jae jae and pop mov pop lea mov clc cmovle shrb mov sub movsb (bad) and cmp rex.WR rex.R sarb lea outsl (bad) mov (bad) fdivp icebp sbb rex.WR jns stc out (bad) gs xchg (bad) cmp sarl sbb in cwtl rex.WB rex.WXB scas ficomp jb cmp leaveq rex.WR adc add in cmp rex.X sbb jl movabs and xor (bad) lods jbe sar test xor fcmovne jle rex.RX sub mov jno std stos push (bad) int cmpsl adc lret lods nop fs rex.RX scas addr32 mov pavgb in adc cmp pop lock callq movslq fildl rcrl pushq push and (bad) movabs xchg cmp jmpq (bad) loope sub pop jo sbb cs (bad) pop pop jbe xchg rex.WXB sbbb pop push std scas test xchg (bad) jrcxz mov pop (bad) cltd and fidivr or cmc lods fildll push rex.RB jp rolb (bad) callq rex.WRXB pop in rex.X movslq xchg sub int mov sub scas rex.XB sahf jns mov pushfq addr32 cmc pushfq xchg (bad) (bad) or (bad) jno movabs cmp adc add (bad) pop pop mov nop (bad) xchg shr imul jp (bad) jbe pop mov sbb sbb xor fisttpl push jrcxz (bad) cmp mov imul sti mov fistl (bad) mov ja in jg imul (bad) fldt js jns adc int pop imul fwait pop enterq cmp in retq jp pop pop adc sbb (bad) fildl iret mov (bad) jmpq rex.XB (bad) push cmp push (bad) push pop (bad) (bad) fidivl and movabs push (bad) mov mov or (bad) mov mov scas sti adc lods rex.RX (bad) fnstsw push ds cwtl pop or mov decb (bad) (bad) push rex.WR rex.RXB jnp mov xchg jge mov mov shlb jne mov xor xlat mov xchg pop cmpsl pushfq rex.RX repz mov xchg mov adc add and ja (bad) cld pop outsb push add (bad) fimul (bad) xor movsl jo movsl pop lods jno (bad) rex.RB addr32 sbb ja (bad) (bad) rex.R (bad) (bad) loope push (bad) rex.RXB mov (bad) and rcrb jo mov loop scas or jrcxz (bad) mov mov outsb push rex.R jne mov cmp hlt xchg mov scas xor cltd cmp rex.WRXB ds jl push jns (bad) jb retq xor adc (bad) add clc mov fcomps xchg js stc loope xchg (bad) in (bad) hlt (bad) out adc jno pop xchg push fwait jno xchg in enterq lahf movabs rex.WRXB sub pop ror stos mov fstps add (bad) ficoml lock fstps (bad) cltd sub pop fsts or leaveq mov xor test icebp (bad) decl vmovntdq rcrl cmp stos mov lods and (bad) lea or lock mov jne popq mov xchg sub push push rex.WR pop cld rex.WRB (bad) cmp je fsubrs int3 notb cmc in rex.WRXB imul (bad) lea xchg (bad) push add in push movabs in ss repnz xchg jnp imul xchg push loopne sub fildl lea jmp jo,pt pop std cmp fwait callq rex.X rorl mov (bad) movsl iret imull cmp lock sahf (bad) push sbb cmp out xchg nop cwtl fldcw push popfq rex.WRB (bad) pop push int3 out fwait mov (bad) gs (bad) insb jo stc add add xchg jp pop mov and jnp sbb sbb jl stos xor movabs neg scas push mov sbb pop jl pop scas in js xchg cld ficom div loop adc mov or (bad) ja mov out jmpq (bad) rclb jnp out mov (bad) or ja and and stos (bad) (bad) mov roll lret mov movabs mov pop test callq cmp pop rex.X rex.WRB ja jbe pop (bad) fcmovnb movslq loope fstl cmp fucomi and mov movabs pop pop out mov ja and cmp or mov int3 jnp sbb (bad) push push rcrl add (bad) test jge push repz rex.WRXB int push rex.RB stos outsl adc (bad) sbb outsb cs hlt pop cmpsl rex.XB rex.WRX fdivr pop (bad) fstpt or andl sbb (bad) adc (bad) lea rex.WRXB gs movabs rex.WB fisttpl push and mov or xlat movsl (bad) test or fistl jbe cld mov outsl ds cmc rcr loopne lret insb jp pop clc cltd (bad) outsb in fwait (bad) sti nop rcr std cmp xchg (bad) mov outsb pop movabs push sbb mov add rex.WX add rex.WRX (bad) (bad) (bad) jmp (bad) fistpl cltd (bad) fcoms fldt rorl fstpt (bad) out jrcxz jb testb xchg jae rcr stc flds pop lods js rex.RB imul xor sub (bad) jb jle sub retq fidivl (bad) mov lret xor movsb fadd mov shll pop (bad) xchg cwtl fstpt add cmp (bad) and icebp pop mov fcomi mov pop enterq (bad) insl cmp mov or xlat cmp cltd adc (bad) rorb scas mov (bad) cmp (bad) push insb mov sub in ss xor rcrl mov cmc scas (bad) push cmpsl mov mov lea je cld xor ficomp fwait pop sub rex.WX insl mov loop loopne,pn xor movsb lea jno (bad) xor scas (bad) rex fldl (bad) mov or pop xor push push rex.B int rex.XB rex.XB bnd fucomi or and fildl in push scas cmpsb xchg mov rex.R (bad) pop jae rex.XB fcomi pop xor out and int mov cwtl jrcxz sub push (bad) cmc js pop (bad) test fistl and addps (bad) xor scas (bad) (bad) add div xor popfq xor fcmovnu rex.X int push flds repz or jg stos sbb or jo gs rclb mov mov mov jns ficom sub in xchg rex.W or jno js imul icebp fcmovnbe jbe test std (bad) and add lret xchg and pop and mov rex.X popfq mov fnstsw imul mov mov pop enterq mov jle sub cltd test or xchg xchg sbb jo insb jge rcll add mov rex.WB xor sbb (bad) xchg (bad) jnp sbb (bad) sbb rex.RXB jmp lods mov mov or (bad) pop push sbb in add fcmovbe jge mov leaveq mov movabs (bad) mov add jmp push mov jp fidiv xor loopne jae pop (bad) hlt (bad) mov and or lahf imul movsb xchg mov jle pushfq data16 loopne (bad) lahf cmc fstpt insl fmuls mov rex.WRXB cmp pop lock add push mov adc push shrb rcll pushfq mov xchg mov clc sbbb int3 ds retq mov lret rex loop mov jmpq cmpsb fstpt (bad) push leaveq retq push sahf enterq jp push and fstpt imul jmpq cwtl (bad) xchg hlt push (bad) (bad) sub mov icebp pop jl ss sub push imul sbbl mov scas (bad) mov jg pop jno add xor sti (bad) adc scas stos (bad) (bad) (bad) mov sahf rex.WB fs pop clc mov lret cmp cli std mov shlb movabs icebp rcrl fwait mov imul int loope test (bad) mov outsl (bad) leaveq rex.R or rex.W xchg xchg (bad) sbb and (bad) and fwait xchg jge jmp lea (bad) pop jl rolb jae fldt mulb (bad) fldt adc orl movslq mov (bad) stos push clc addr32 xchg sbb stc out (bad) mov iret and xor fimull jb pushfq and (bad) jnp fs or fldt and shr sbb iret retq (bad) test mov icebp jo out fisttpl jg (bad) out mov (bad) (bad) iret and out enterq fldenv roll lods in (bad) (bad) (bad) xor xor mov jnp adc (bad) mov mov sub xchg mov test or hlt xchg int jnp mov (bad) cltd pushq jae rex.WRX cmp rcr sub push (bad) fildl mov (bad) (bad) fildl in es and xor in fldt adc jg jrcxz xchg mov xchg mov fcomi es pop and pop rex xlat rcr jge jae add and and cmpsl jno sub mov fwait stc or add ds xchg repz popfq lods imul mov mov sbb mov mov test pop movslq push (bad) imull cmp add sbb (bad) (bad) rex.WRB push add and (bad) cs (bad) mov jae (bad) sti fsubrl mov mov cmp rex.RB rex.WRX iret fcomi sub rcll and mov or retq (bad) pop mov (bad) sub fisttp push (bad) xor sbb scas mov ss fs xchg push add movsl pop (bad) rex.WB xchg mov rex.XB movabs (bad) ss mov fwait push fst fisubl je adc add (bad) addl mov cmpsl mov and jae xchg (bad) negl cld loopne rcl xchg (bad) (bad) (bad) (bad) imul jb (bad) mov test fldenv or (bad) (bad) imul mov add sub cmc (bad) sub xorl xchg sbb std mov scas rex.WRB (bad) mov sbb (bad) rdpmc pushq push xchg sub pop mov and lret in rex.RB xchg jns adc or out (bad) scas movsb in ds (bad) int data16 mov (bad) lahf movabs movabs fcmovnu xor mov (bad) (bad) retq subb imul movabs fidivl shlb push jrcxz or jns cld cltd jmpq adc add or pushq pop sarl (bad) ja rex.WR and mov adc pop rcll jnp int3 mov out out fistl popfq jae pop or imul mov jne add add rex.WRB std outsl xchg movslq ljmp (bad) mov scas nop jg cltd cmp rex.XB jae lahf cs jb fcomi (bad) pop sbbl pop jns add clc movabs jle rex.WX retq mov fwait popq sbb pop (bad) mov jns sbb movabs (bad) fildl int xor cpuid rex popfq mov (bad) rex.RX mov jge mov xchg pushq jns push movslq fcmovne xor fcmovnbe ss and (bad) retq cmp mov rex.WR fwait es fildl (bad) decl and xor mov iret pop lret (bad) or rol retq add sti mov jmpq cmp fiaddl loope movabs mov (bad) stc or loop rex.RXB mov shrb mov (bad) (bad) mov adc sbb add je hlt ds rcrb push rex.WXB or pop add (bad) test fwait sbb rcll enterq mov out sub (bad) pop xchg push (bad) iret push (bad) fcoml xchg (bad) out mov push adc fmull jg mov movabs cs mov fisubrl mov push cmp sbb pop cli test lods retq rex.RB out sbb (bad) jns and mov jb mov cmp push jno fs mov mov (bad) mov xchg mov cltd in (bad) add add (bad) stc out rcrb (bad) push sahf sti fcmovnu adc pop pop (bad) pop (bad) rex.WRB xlat orb gs sbb pop sbb cmpsl imul (bad) mov or mov cmp pop int insb rex.WXB pushq jge fcmovnbe cmp mov fildl or pop pop sarb jne movabs test int3 hlt adc pop movabs retq lods rclb movslq push mov mov cld mov (bad) jo js ds retq push cmpsb mov scas xor neg int3 and xor mov jns shr fninit jo cmp fisttpl fpatan std mov jge or pop (bad) repnz sbbl incq cltd xor sub pop data16 xchg (bad) (bad) stc test insl add xchg out pop cmp ss cmp adc rex.WRX fs sub xchg fldt hlt sbb jge (bad) jb add sbb rex.WRX lods insl (bad) insb lret rex.WB lock popfq sub pop jge outsl mov adc or jns adc rorb pop sbb cs (bad) insl je stos retq sbb ficompl rex.WX fwait movb callq xlat iret out rex.WRB adc loopne sti cmp (bad) jae fs mov adc enterq rex.X addr32 pop sahf jnp xchg sub stos scas rex jae imul fsts mov iret pop mov cmc movsb xchg stos jle in push pop (bad) mov stos (bad) rex.WXB (bad) fisubr sarl jo retq xchg rex.R jae fcomi (bad) andl retq fucomi pushfq fs int3 rex.XB rex.WX gs sbb pop jmp cmp rex.WR xchg mov cmp out test push lret js xchg (bad) adc pop sub fcmovnbe xor pushfq xor jg pop (bad) cmp lods sbb rex.RXB icebp mov enterq add push xchg rex.X (bad) imul mov cmp rcll clc test mov enterq (bad) mov (bad) fcomi lea cmp in adc pand pop sub rex mov push sbb rex.X sbb (bad) pop and rex.B rex.WRB fcmovnu clc negb in xor movsb adc push fimul (bad) imul cmp xor (bad) clc sub (bad) adc fs movabs sbb in xchg (bad) lret icebp imul rex.RXB movabs in sbb rorb mov jne and xor mov fcmovnbe pop xor (bad) pop jne (bad) jp add pop mov jrcxz stos fwait cmp cld push xor int3 fcomi loopne adc jmpq (bad) pop movsb and and outsl jrcxz push (bad) (bad) cmp movabs mov adc fstpt movabs std rex.WRB sub popfq subl (bad) sub fidivr sub mov cmp fcmovnu xchg enterq fisubl imul mov pop lods pop pop xor mov pop fcmovnu (bad) insb xor stos (bad) jne or adc jns in jmp xchg retq jmpq mov fild mov movabs push pop fildl (bad) and lret jnp fwait add hlt add adc (bad) int3 (bad) fisttpl mov movsl pop jrcxz sbb in fwait (bad) retq mov movabs push repnz sub lods pop cmpl mov adc movabs sub and int (bad) fucomi cmp push (bad) movabs xchg (bad) movsb cmc add insl movabs pop mov jl or jnp push retq pop mov out jbe leaveq fisttpl sub jb adc fldt fisubl sub mov and testb out cwtl incl ja,pn jmpq out jl (bad) shlb fistpl rex.WRX out pop retw test and (bad) or scas pop cmpsb cmp xchg pop je xlat (bad) mov ja imul sti int3 pop sub cs fistl out pop mov pop mov or (bad) ds lods and iret xlat (bad) rex.RB fimull (bad) fsubrs jnp lods jbe and and out cs rex.RXB (bad) adc in fcmovnb mov or pop mov sub mov fs leaveq sbb (bad) fcmovnbe outsl jg nop je pop outsb test (bad) mov stos sub or fadds nop movabs pop repnz sbb xchg iret stos xchg pop mov fcmovnu test xchg sub sti out rex.W addr32 sbb adc pop cmp mov movabs repnz fdivr movb in (bad) mov and rcrl (bad) insb scas loop insl ja addr32 int loopne fwait (bad) (bad) push rex.WRB push (bad) stos sarb (bad) jg psrlw sub rex.RB mov cmp (bad) jb fldenv std adc rex.WRX sbbl xor pop (bad) rex.X rex.W adc std scas mov and lods mov cmp in xchg mov nop sub (bad) add jmp test icebp (bad) fxch movabs cmp jae in icebp push fstpt push jg (bad) jmpq fcmovnb (bad) (bad) mov mov mov mov and fistpl negl (bad) adc int3 mov push mov loopne mov jo fcmovne mov fisubrl rorb xor cmp pmulhw xchg (bad) mov sbb jl or icebp rex.W xor callq adc lret or jg cld rcr pushfq adc xor in jp push mov sbb fwait or fcmovnb or test push pand (bad) jb add push fwait imul clc movabs pop test jnp sbb cmpsl roll test lods sti lea sti rex.R rex.X stos lret shlb lret sti fcoms mov and add movslq lea fxch cmpsb pop cmp ja (bad) pop mov movsb jbe rclb ja and fisubrl loope cs adc xchg sbb add lea int3 adc loope mov and pop mov fidivl int3 rcrl ljmp rcrb hlt (bad) callq rorl nop in xlat movslq (bad) in sub pop push (bad) mov gs ds sub or fistpl xor (bad) mov xchg rex.WR (bad) rex.WRB mov jns in jle or push movabs mov add jl or callq jno out movslq pop fsubs (bad) sbb adc mov sub push pushq fisttpl cwtl rex.X cmp sti mov and mov (bad) sub and jno add pop pop push pop (bad) pop loopne ja cmp es jle (bad) xchg imul cmpsl vpshuflw sub iret xor cmp (bad) rex sbb pop cmpsb mov lods rex.WRB or out fwait mov fildl jbe push fs fldt out movsb (bad) rex.B mov (bad) and xchg fidivl add push (bad) je or lods movabs (bad) cwtl xchg mov (bad) (bad) rex.WRXB pop or cvtps2pd int3 je (bad) scas (bad) rex.RB fcmovne movslq push xchg outsb out (bad) rex.WXB and pushq (bad) (bad) lods jmpq (bad) rex.W in movabs lock rex.WR fwait (bad) fidivl js (bad) clc imul nop rex.WX rex.WRXB jmp cwtl (bad) push mov (bad) mov (bad) (bad) mov fstpt xor adc cmpsl sar movabs (bad) roll (bad) push (bad) or adc pop fsubl jnp sub adc rex.WRX xor pop scas mov (bad) sub sbb movabs std cmp imul rex.W cmp (bad) int3 or fldt jmpq jae sub imul pop rex.RXB rex.WRX stos ss jnp push in pop add lods xchg in cmp mov mov retq fistl (bad) (bad) cltd cmp scas rex.WR sti or rex.WX int3 mov pop push (bad) stos cltd xor and imul mov rex pop lea sbb rex.WRB sub and sahf gs mov (bad) mov fistl imul sub push (bad) stos repz popfq imul fcmovnb cmp ja mov movsl (bad) outsb adc retq (bad) outsl jno in es or (bad) rex (bad) mov scas movsb mov vpaddsw xor (bad) test cltd xor clc (bad) lret jnp (bad) and xchg sahf imul jb movsl lods fstpt pop (bad) gs adc (bad) movabs (bad) xor cltd adc out add cmp xor mov (bad) rex.WRB insb mov outsl (bad) (bad) insl mull or push rex.RXB sub (bad) adc jle and jns lahf in pop (bad) insb jp jae sarl fninit mov jnp add add pop stos movabs mov lret lock (bad) icebp jno mov jbe xchg (bad) pop loope and mov insb addr32 pop sub pushq jg iret jg fisubrl loope rex.RXB cltd and (bad) adc sub add lret clc rex.WX divb xchg (bad) es sub clc sbb mov insl jnp mov and or add rcr loopne mov fbld (bad) and rex.XB addr32 cmp pop jne outsl add sbb imul jne mov xor jns mov xorl or and mov cltd xchg xchg push sbb jmpq sbbb out (bad) mov insl je jae adcb cld stos loope out sahf pop or cmpsl (bad) in cmpsl (bad) adc adc cmp out test pop rex.WRX and mov mov cmp (bad) push rorl xchg push pop rex.B mov pop test xchg flds mov add or je fwait iret callq sarl (bad) imul pop mov jle push (bad) sub cltd jmpq sub mov sti add (bad) xor rex.XB mov mov callq xchg add pop mov mov mov (bad) pushfq mov pop (bad) stc scas (bad) pop stos (bad) lret rol (bad) xchg xchg mov (bad) mov andb push out fistl fwait rex.R pop cld (bad) mov cmp rex.WR mov rex.WRXB rex.RXB cmpsb adc movsb jo test lret rex.X fstpt stos int pop (bad) push repnz jle adc and sbb je cmp rex.R retq (bad) fstpt stos (bad) (bad) sahf mov jl shr out push or add (bad) xchg fdiv test mov sbb int3 mov int mov scas (bad) icebp pop fnstsw fistp xchg jns push push imul mov (bad) (bad) shll rex.RX fildl retq enterq pop lahf insb push mov (bad) pop mov rex.WRXB fwait mov (bad) mov test (bad) sub rex.XB xchg or (bad) je out and xor fildl pushq mov (bad) fimul lret fnstsw scas movabs adc fisttpl (bad) pushfq push js xchg pop loopne mov stos pop subl shll push jrcxz (bad) fisttpl push cmpsl scas push pop mov leaveq sub fstpt xchg sbb pop push jb lret or pand mov push mov rex xor and (bad) pushq pushq mov ss xor js std (bad) lret push sahf insb jnp jae sbb add imul callq mov test xchg stos push out insl xor mov xlat sbb rcr jl pop adc loopne jae imul add xchg sub loope xor in rex.X ss jge mov add fistp mov adc insl jg or test addb add sub rcrl (bad) (bad) fadds sub data16 (bad) and (bad) std cmp in cld (bad) (bad) push (bad) in scas js sbb sub cmp (bad) pop adc out rex.WRX loopne push jnp rex.WR xchg sub push (bad) mov sarb rex.RX (bad) pop push (bad) xor xchg in movabs loope (bad) lods retq jmp mov insl xor jg rolb xor rex.B addr32 loop sahf mov mov test push mov movslq callq (bad) outsb cli leaveq sti jnp (bad) fdivrs rcll mov jb lock pop add or pop add repnz fistpl punpcklbw adc mov push out iret mov xor ja int push fadds or sbb movabs mov pushfq mov loopne pop lea std (bad) sti xchg in fcmovu push (bad) (bad) fcmovbe (bad) lods xchg push out sbb xlat rex.RX push push xchg sbb hlt jle leaveq lea (bad) shrb rex.W jmp (bad) mov push cli rex.WRX lock jmpq fadds movslq subl out leaveq sub scas jmp cmp xchg outsb cli cltd jle push push mov fdivp (bad) push repnz jno (bad) xchg pop (bad) out sbb rclb repz (bad) xor mov scas in (bad) nop es sbb pop (bad) sub pushq xlat mov push (bad) push (bad) imul movabs jae fstpl lods test push push pop cmpsb (bad) or sbb (bad) out imul adc xor and xchg rex.WR (bad) movslq fisttpl jp or mov fninit out movabs in pop mov rex.WRXB sahf pop movslq xlat pop sbb fsts pop icebp outsl xchg xchg std and enterq (bad) sahf sarl mov gs push mov jbe pop sbb test xor mov (bad) mov pop (bad) (bad) adc retq lret or fstpl rex.B (bad) andl jle xchg (bad) rclb sub out (bad) mov sahf not xchg mov incl test sbb insb sub mov (bad) retq xlat in or push je mov in xchg mov fs push xor push cmp es int movabs loopne jmpq jg sbbl mov fldenv (bad) lret rex.W or out pop (bad) cmpl xchg and pop rcrl add pop pop rex.WB xchg mov pop (bad) lret sub (bad) nop push lret callq pop (bad) rex.WRXB andb scas loope pop cmp rex.W (bad) add mov xchg (bad) leaveq pop pop gs add mov cld jbe (bad) (bad) adc mov mov retq lret sub rex mov test or in jrcxz jmpq pop cld pop sbb packsswb lods fsubp lret sti adc mov fwait cmpl xor (bad) (bad) rex.XB cmp out cs (bad) int xchg (bad) rex.RX (bad) movabs sub (bad) cmp rex.W jmp push jbe push mul pop mov push repnz rex.R xchg sbb xchg fsubp out movabs rex.WB cmp loop adc scas movsb rex.WRB rex.R xchg mov add mov mov cmp sbb sti scas mov push js adc cltd push js pop insl test (bad) scas insb (bad) loop (bad) imul fidiv xchg lahf sti and (bad) jp imul in stc and fild addr32 adc (bad) stos loope retq add sbb (bad) add pop lods add rex.B rex.WRX mov (bad) enterq adcl fisubl sbb sbb or sbb xchg xchg fdiv (bad) scas (bad) in (bad) ds int3 rex.RB xor pop and pushfq outsl scas insb sub pop fstp stc nop addl rex.WRB (bad) mov mov adc test (bad) add push push fs roll adc rex.RXB retq int pop cltd mov (bad) in rex.RX jrcxz pop shl imul add fistpl rex.WRB leaveq shrl (bad) adc push (bad) lret fisttpl cmpl insl fs (bad) mov addr32 es pop fistl imul push rex.WRXB (bad) (bad) pushfq jl and (bad) rex.RX jg,pn mov sbb (bad) mov pop (bad) in push rex.WXB mov (bad) movabs rex.X fldt jno rex.XB std jmpq or movsb jne loope callq in neg sub je fwait sbb adc mov mov out (bad) cmpsl movsb cltd outsl (bad) fwait xor or insl loop or mov rex.RB in jmp lock (bad) frstor mov repnz popfq lea jnp shll mov movabs rcrl (bad) rex.WXB or fcoms (bad) rex.WXB jmp rex.WRXB (bad) ss pop push test mov xor ss fs (bad) (bad) rcl sbb (bad) sub jrcxz mov lret or fbstp fidivr stc loope mov in mov sbb rex.WXB int3 mov sub mov or jmp lret pop xor test cmpsb subl gs rcrb cwtl lea fstpt rex.WRB retq (bad) xor movb (bad) mov push xlat add rcrb (bad) imul jbe in pushq jmpq test push (bad) ss rex.WRB dec xchg cmp mov xor in rex.RX push (bad) pop sbb and rex.RX xorb mov xor fwait pop pop ffree sbb sbb mov rcrl adc (bad) movslq jb rex.WXB cmp mov rex.WB rex.XB mov leaveq mov movabs roll fcoml pushq fisttp and in and (bad) loop cmc nop xor mov fdivrs lret push cmp lret flds push (bad) sbb or (bad) jp (bad) pop xor pop fidivr xchg or jrcxz enterq (bad) mov sbb cli push mov jnp,pt or pop pushq (bad) or push shr lock fiaddl fnstsw and cmp sub or repnz fldcw movabs insb (bad) mov fyl2x in (bad) mov (bad) decb push cmp loopne pop enterq sbb xchg in hlt sbb fldln2 retq (bad) fidivl stc pop out sub mov sub push dec out (bad) mov cmpsb out xchg xchg mov std mov jge rex.WR rex.XB lock pop (bad) repnz mov movsb es pop xchg out adc addr32 cmp push test jnp mov in pop pop (bad) adc jmpq sbb sub insl jg ss jnp jns xchg (bad) in fcmovnb lret int test lret mov fisttpll in repz rex.B xor xchg in (bad) test sub pop out jl xchg jns rcr cmp pand cmpsb (bad) mov cmp mov in (bad) xor rex.WB mov xchg pushfq cs (bad) adc mov fcompl (bad) mov xchg ds movsl fldt add gs add rex.W add imul jge (bad) icebp mov sub enterq (bad) cmp (bad) jo rex.WRB (bad) std repz pop xorl (bad) fistpl es rclb rex.WRXB rex.B xchg mov adc stos or rex.WRB in cmpsb cld pop test mov cmp cmp (bad) sbb enterq adc fstpt idiv mov adc pop (bad) js push jnp mov cmp loopne fildl jmp add push (bad) sub (bad) fsts rex.XB stos xchg pop popfq test pop iret mov rex.X sbb rex.WRXB cvttps2pi rex.RB rex.WRXB mov add leaveq xor sub addl add flds cmp scas xchg mov rex.RXB jae andb adc push out stos sahf (bad) fldt (bad) (bad) xor xchg ss rex.W rex.WRXB xchg insl std jo cmp movabs movslq push (bad) test lock mov (bad) (bad) xor loop jle and mov lahf imul jae jnp xor (bad) push fistpl sti xor fisttpl xchg incl rex.WRB fld ja adc rcr jo test sbb pop xor cs rex.B rex.RB xchg mov fldenv push cwtl movl xchg out mov add xchg xor (bad) popfq push stc (bad) xor rex.RB rex.WRX movslq cmpsb xchg (bad) cmc pop xchg rex.XB mov sub jmp repz fdivl cmp cmpsl lret fsubs fistl repnz adc rex.WR fs and pop cmp jne fldt and jae jo add test addr32 and sarl cmpl pop jno retq pop rcrb callq vcmpps iret jrcxz add mov scas xor and sbb and pop jg rcrb cmp retq xchg jo rex.WRXB testb outsb rex.W jle fsub push rex.WX mov test fildl xor int3 (bad) fs cmp jb push fwait mov lods pop imul rclb hlt mov rex.WRX movsl cmpsl pop mov (bad) or pushq shll (bad) test sbb xchg int pop jl loope repz roll movabs pop gs pushq pop fwait movl iret mov rcrl repnz jp insb sub movslq pop lahf rex.R rex.WR insb xchg push push orl mov insl sbb jnp movsl rex.R sub (bad) (bad) jge (bad) (bad) repnz jmp retq in fistl gs cld fmuls fistl push and out lea lods popfq insl rex.WRXB xor and mov fistl (bad) push adc rex.XB cwtl (bad) pop cmpsb fcmovbe rex.WXB jb sub jne pop rex.WR xchg sub mov scas test mov jns lret add outsl fisttpl movslq add clc sub (bad) (bad) cmp (bad) cltd shrl (bad) sub in movabs lods subps fnstenv mov shlb mov gs xchg mov add xor fildl mov add fwait cli xorl push mov jnp mov lods (bad) (bad) imul cmp test sbb fsubrs test (bad) (bad) xchg in (bad) loop fstpl cmp sbb cld pop fcompl fldt out stc and in rex.WB loop add or pop fwait cmp fldt mov fstpt in callq jnp xor rex.W movabs es outsb push sbb and rex.R stos sub add insb pop and pushq fwait ds ffree mov (bad) (bad) mov mov (bad) mov rex.WRX movabs lods sbb fnstenv push (bad) adc fnsave imul icebp movabs pop rex.XB cmp shrb sahf (bad) sub fdivrl jrcxz (bad) and repnz ficompl lods mov cmp sub movabs addr32 iret movsl push cmp movabs lock rex.B sbb rorb fcoms std xor cmp cmpsb pop xor rcrl sub out jnp out (bad) lret (bad) rex.RB pushfq leaveq (bad) shlb cwtl cmc fistl leaveq or sub sub xor retq hlt loope and (bad) (bad) in mov mov pop rex.XB sub push jmp loop mov int retq and jae mov (bad) rex.WRXB cmp sbb (bad) sarl lods mov adc (bad) xchg jns mov fistpl je (bad) rex.WB sub mov and fildl jo add outsb je imul stos or in pushq sbb jle jnp roll fisttpl rcr (bad) pushq cli jno push rex.WB addr32 fistp movsb jnp adc fidivrl (bad) add stos mov int pop and pop or mov and xor fnsetpm(287 jp xchg addb mov fisttpl repz divl rcrl jnp sahf rex.WXB pushfq out lahf pop movabs mov and fildl loope ficomp (bad) test cmpsl pop sarb loop ror sahf cs rex.XB and (bad) ftst and (bad) lock pop movl gs popfq jo retq fcmove xchg jmpq jrcxz or (bad) xorps jae ss rex.WR cmp pushq (bad) pop cwtl mov out (bad) adcl pop scas (bad) xor xchg push (bad) ja mov in shrb pop out pop jae rcl push mov retq jge mov stos xlat movslq sti loopne rex.WRX sbb pop jno push xchg mov hlt sub sub add rex.R negb rolb lods cmp lods popfq cmp jg (bad) pop push shrl sbbl fidivrl scas xor or addr32 scas orb movslq add out push xlat xchg and (bad) jno mov enterq fwait cmp ds pop xchg rolb fisubrl (bad) xchg (bad) pop std fcomi add xlat orl repz movabs faddl mov insb outsl xchg pop sar or push (bad) cmp and (bad) fstpt cmp icebp and (bad) jbe mov stos (bad) scas (bad) (bad) mov rcrl cmpsb push (bad) data16 clc mov iret pop scas xchg imul mov xor outsb pushq (bad) jo in pop stos movsb cmp rex.XB rex.X rex.W repnz jnp pop adc xor xchg xchg jrcxz pop and decl mov pop (bad) movslq jmp and xor (bad) adc (bad) stc cld orb in (bad) rex.RXB fcomp and pop or fbld push sbb fistl cmp jrcxz mov add stc (bad) xor sarl fldt jge (bad) outsb (bad) pop and and push adc mov (bad) imul add fdivrs mov sbb (bad) xor pop jno sbb fsts (bad) mov cltd (bad) leaveq sti test out fwait (bad) (bad) and mov test xchg scas (bad) mov mov movabs rex.WRXB sbb cmp (bad) lret pop cmpl jo (bad) cs fldenv movabs rex.R sarb mull imul movabs (bad) es rex.WRX (bad) cli retq xchg rcll sti xor jns xchg (bad) fstpt imul int (bad) std fcmovnu fwait pop jnp cmp xchg idivl imulb int3 retq xor repz (bad) fldt xor imul jb cmpsb rex.WRB out lahf push loope,pn jmp fdivs fwait cmp mov (bad) imul movsl push sbb sti cmp sbb out add sub cmp (bad) pushfq fistpl enterq ja (bad) sub mov sbb (bad) mov pop (bad) rex.WX sub adc push (bad) shll xchg es es fldl int rex.X js loop leaveq fistpl or pop or (bad) and rcrl push mov rcrb xchg (bad) jmp (bad) outsb cmp int or rex.XB test cmpl xorl push xchg add cmc (bad) mov lret int3 lea and (bad) xor xor icebp callq leaveq and movabs rex.WRB js push cld scas xor or cmp jmpq jo xchg pushq leaveq sub fcmovnb movslq or mov rex.RXB fdivr rex.X xchg rcr add and fadds fisubrl fdivrl icebp cwtl cli pop fcmovnb add xchg jge int3 lock sti imul mov sbb and rex.WRX xor rex.RXB adc outsb mov push fldl jrcxz mov xor scas mov jmp lods mov fildl int pop push adc rex.WRX fildl cmp xor loopne test cmp (bad) sub pushfq jnp (bad) (bad) sbb imul cmpsl sti movslq and pop mov (bad) mov test sbb mov movabs in jb rex.WXB enterq xchg mov (bad) mov stc lahf pushq and xlat or (bad) pop rex.WXB sub cmp (bad) xor in imulb iret and adc cmpsl movslq fstpt loopne movabs movsl fst mov adc lret xor fimull jns addl int and xchg sbb or pop (bad) mov adc xorl (bad) lods adc in cwtl (bad) fistpl xor (bad) stos pop rex.B fisubl sahf xor pop movabs or rol pop mov fild rex.WRB push cmc fiaddl repz add mov movsl cmp (bad) mov scas fcomi sahf mov out fstpt js (bad) leaveq (bad) and mov add jle cltd movabs jb rex.X and pop sahf mov movabs or stos xchg incl xchg (bad) movsb loope fcomi stos rex.WB xchg add fildl jbe pushfq jnp pop add (bad) out cmp lods (bad) pop jmpq sub stos ja pop (bad) mov mov rex.WX sub jo (bad) in fdivrs (bad) and loop add lret movabs sub divb cwtl add mov adc rcr jrcxz (bad) js retq push mov (bad) mov data16 cmp repnz fistl testl cli sbb sub (bad) cltd pop gs mov sub adc fstpt push test xchg test (bad) jno fldt xchg rex.WXB mov loop (bad) xchg push pop mov jl fs (bad) enterq (bad) rex.WX (bad) xchg insb fsubs fcmovbe cli movabs add push scas out rcrl loopne jp jmp fs lock (bad) test (bad) fst xchg mov mov mov xchg imul or xchg (bad) cs faddl shr fwait movsl sarl pop push callq sbb out cwtl cltd jge xor cmp xchg mov callq jnp movabs popfq cs jno callq and adc add adc test fsubl movabs cld mov push imul mov scas (bad) imul pop xchg movsl pop pop test mov fistpl and loope rex.WX incb cmp (bad) fisttpl mov rcr jne fildll (bad) lods mov (bad) add (bad) add (bad) cmp lock jno sbb mov (bad) or sbb rex.RX pop push xchg (bad) (bad) pop fucomi jne and repnz (bad) rex.RXB (bad) outsb rex.R jmpq jg je sbb rex.WR mov retq mov mov cmp stos xchg loope mov pop fwait rex.WRB callq movslq loopne (bad) (bad) push mov (bad) adc jno fisttpl cli sub pop insl jge add rex.WRXB add rex.RXB (bad) movslq pop xchg push mov (bad) jrcxz fistl mov mov (bad) fldt hlt jge (bad) lahf fcomi add xchg stc cs pop cmp sub jbe pop cmpsl scas mov lods frstor sub cmpsb cmpb xor (bad) (bad) rex.RX fldt jle pop (bad) pand xor movabs js stos (bad) subl push rex.X push pop js,pn and scas (bad) nop fcmovne pop iret mov pop sti (bad) repz cmp stos stos cmpsb rclb mov movabs test fcmovnb sub notl or rol stos mov xchg test rex.WXB or or mov pop mov (bad) pop (bad) rex.WRXB cmc jg icebp rex.WR or cs int3 fildll lods rex.X imul enterq mov orl (bad) pop pop (bad) gs nop fwait xlat rex.WR and retq push addr32 fwait lea mov push jno loope test push (bad) mov sub push rex.WXB lock xchg data16 rex.WX rclb or push fldenv sbb popfq fdivr fs mov cs loope fldcw imul js fldt lods mov jge test (bad) or (bad) rex.RX lret mov std andl rex.RXB rex.W (bad) mov (bad) xchg and movabs fcmovu rex.WXB (bad) leaveq push rex.WRB mov xchg rex.WRX jrcxz movabs rolb in out push pop xchg (bad) adc push out mov jne or jle pop xor imul rex.R jno sbb scas pop add (bad) movabs pop mov icebp sahf mov (bad) movsl mov data16 xchg jp mov pop xor jns sti popfq (bad) imul stos in je cmpsl xchg xchg leaveq stos lret idivb jb stos fwait (bad) adc xor rex.WRB fcompl (bad) enterq rcrb fiaddl pop pushfq push out mov sti lods mov mov pop (bad) and mov (bad) and scas sbb insl scas xchg (bad) outsb adcb or (bad) movslq fnstsw fisub std jge fwait cmp jnp cmpsl (bad) mov and (bad) or loope lret cmp fwait notl jp cmp sarb (bad) add pop fild cmp sbb mov lods or pop out icebp or (bad) (bad) (bad) test (bad) xchg (bad) out addr32 jnp leaveq xchg rex.R rex.WX rex.WRXB pop movslq test xchg imul mov data16 insb (bad) outsb and loop cli mov jno (bad) push stc mov fcmovnu lods rex.R sub neg fcom shlb or (bad) rex.RXB ficoml xchg rex.X and jp xchg in (bad) rex.R pop jl and movabs mov (bad) mov mov jns in and cwtl fldt (bad) int3 (bad) insb xchg xchg ficompl out push (bad) mov negb jrcxz mov pushq mov sbb clc test repnz and (bad) cmpl (bad) loopne,pn cmpsl pop rex.RB mov xchg ds add mov movabs xchg push and rex.WRXB fistl xor enterq clc stc ss xchg movslq rex.WRXB (bad) sarb jnp sub loop fisttpl mov insb scas sub fldt cmp xor ss jmpq pop pop stos (bad) jg xor fisttpl cmp and mov mov scas imul punpckhwd fisttpl movabs fwait cwtl rex.WX lret jne jnp mov adc fistpl jbe xlat fisubl mov mov sub pop add jp jnp rex.WRX out fistpl fcomps fnstenv pop (bad) fisttpl movabs lods push jne lret fisttpl stos rex.WXB push loope out callq fcmovnbe rex.WRXB xchg xchg rcr lahf (bad) je fs pop or cmp cmp rex.WB fist add push scas andl (bad) (bad) ja (bad) push and or xchg lock add pop fstl callq or (bad) push xor retq fcmovnu scas movabs xor sbb leaveq fcmovnu lock mov fstpt jne subl (bad) leaveq gs xchg mov ss xor movabs addr32 lock (bad) jb mov jns and sbb fldt cmp or rex.WX push jne,pt adcl sahf push pop jo pop pushfq je rex.WRXB ds jne pop mov mov retq test jnp pop sub stos pushq and mov xchg push mov (bad) push es pop (bad) (bad) sbbb xorl and std mov mov (bad) retq sbb (bad) cld push and (bad) adc movabs fwait pop cmp gs xor sbb rex.WX cwtl jns xlat xchg push cmp jg icebp xor (bad) sub (bad) mov (bad) jp cli rcr (bad) movabs outsb lods outsl fsubrs out rex.XB rex.WRXB adc sub (bad) data16 ficomp fisttpl jno mov sub clc shrb mov imul ss sbb fcomi insb rex.RXB mov adc pushfq (bad) xor fstpt mov sbb jmpq ja (bad) lcall sahf lock rex.XB fwait jnp add scas (bad) cmp movsb push fistl rex.RX lret pop fcoml pop cmp int3 adc push insb push mov sar add (bad) int xor fstl loopl int3 (bad) lods jg (bad) push pushq and (bad) rex.W mov cmpb rex.W fcmovnbe (bad) fldenv rex.X lods cld (bad) rex pushq mov mov fstpt mov lods (bad) retq clc pop jrcxz out cmp retq rex.RXB (bad) fildl push int3 rex.W (bad) scas jmp (bad) rex.RB cs fcmovnb (bad) (bad) rex.WR sahf sub (bad) (bad) add (bad) fnop mov gs outsb jge pop pop or add or in mov stos cmp jnp (bad) rex.WRXB outsb popfq (bad) jmp push pushq sti adc lret mov leaveq sbb lahf (bad) xor sbb (bad) rcrl cmpl mov fwait and jmp (bad) fcmovnbe mov test fisttpl or (bad) rex.WRX js and jns or (bad) xchg imul pop pop pop cmpsl jle pop fimul (bad) fcmovnu cmp jrcxz out movabs lret mov fwait sbb outsb mov int3 mov test rorl jrcxz (bad) sarw jb out sub movslq rex.R retq pushq push adc loope (bad) retq (bad) (bad) push (bad) add jnp fistp pop rex.WRB add xchg (bad) fwait (bad) mov imul imul mov sbb out adc out cs xchg fdivl rex.XB (bad) repz and rex.WXB rex.WRXB push cmpsb cmp (bad) sub pop push xlat sbb sbbl adc iret jb cmp data16 cmpsl cltd push rclb fsubs jmp retq rcr in mov jp ja fstpl xorl push lock add adc cwtl jp xchg and xchg add scas or movabs (bad) movabs hlt mov rex.X cmp mov fistl cmp and mov rex.RX jns sbb rex.X rex.RB pop loopne jmp pop (bad) adc xlat mov mov (bad) pushq lea (bad) (bad) adc sbb mov adcb or imull xor (bad) mov fildl es (bad) mov cmp popfq add jge pop (bad) orb rcll iret int3 subl push cltd mov fwait lods rorb movsb ds rex.WX fistl sbb repz lods rex.R rex.RX push (bad) push outsl adc movabs or outsb sahf ja enterq lret jmpq xchg sbb add mov popfq outsl push mov and (bad) fmull mov mov cli loop xchg push int in lret mov out fwait add outsb imul fisttpl fmull fildl mov scas pop (bad) leaveq int3 pop (bad) test jns rcr adc fidivl fistpl (bad) pop mov (bad) jnp (bad) sub pop rex.WXB xchg (bad) rcll fs push jle sub push imul fcmovnu mov fwait rex.WX mov int rex.WB sti rex.WR xchg pushfq movslq imul rex.WRB push cmp mov push out pushq mov sar imul fcmovu xlat cmp push push cli sub push mov scas or test ds lods cmp xor hlt cmc xchg repnz xor (bad) sub rex.W fucomi cwtl js push lods adc (bad) imul fsubl pushfq out movabs sbb hlt sarl clc cmpsb movabs mov mov (bad) sbb stos pop or pop scas loopne pop cmp jno xlat bswap mov ds (bad) pop mov jle sub (bad) cmpsl mov xor adc cmp (bad) cmp addb pop jg push rclb movabs sbb push out xchg jns and imul insl (bad) fildl lret adc fwait (bad) cld fimul mov jmp (bad) punpckldq mov callq lret xchg rcr cmp adc lods hlt add mov data16 jnp jo rex.WX pop movslq outsl jno sti add rex.R ja or repnz mov xchg (bad) mov push sbb cmp push lahf fisub stos mov cs sbb xchg (bad) (bad) loop jns push fsubs movsb addr32 mov fcomps callq out jb xor jno (bad) fistl xchg (bad) cmp (bad) or adc mov push mov (bad) or rex je rex.WRX rex.RB rex.RXB in rex.RX (bad) (bad) (bad) xchg sbb pop insl cltd test in pop mov out stos jg or mov pop mov fcomi (bad) and sbb test pop lock mov fldcw mov (bad) jnp imul in pop pop add (bad) ja jns jge mov leaveq mov mov movslq cmp std (bad) cmpsb sarl imul lock push cwtl bswap fcmovnbe movabs (bad) (bad) jrcxz jo jae decb js jno mov xor vminpd fidiv repz enterq (bad) pop sbbb shr mov jg or add data16 stos mov scas movslq mov adc (bad) (bad) rex.WX (bad) outsl mov rex.WXB (bad) fwait icebp (bad) mov fwait test push xlat (bad) in xchg cmp jns rcrl or xchg rex.RXB je jbe mov jl fneni(8087 stos mov jno pop test retq lods and pushq testb jle cld fsubrl sbb mov xor (bad) adcl shll pushq mov sbb imul pop iret jo or push fildl mov add pop jrcxz fcoml cli sbb (bad) lcall (bad) mov fisttpl (bad) (bad) rex.WXB cmp cmc jnp fidivr and fcmovnbe cmp sbb movsl ds push icebp lahf and cmp jns (bad) (bad) outsb (bad) out fdivs lahf jmpq rex.B rex.X sbb push (bad) cld scas stos (bad) in and int (bad) add fcmovnb sub xchg adc lret sahf jno movabs sbb cwtl ja mov pop lods (bad) lahf rcrb add (bad) cltd nop rex.RX loop out cmp (bad) (bad) add push jne xchg sub cmp retq xor fcmovnbe mov (bad) (bad) out mov fldenv sub add insb cmpsb mov out stc jrcxz fisttpl (bad) pushfq retq stos or and es mov movslq or (bad) (bad) subl or rex.RXB (bad) cs sbb xchg sub rex.WRB fwait (bad) (bad) pop test jbe mov jp mov leaveq or add mov mov in (bad) (bad) push fs xchg xor xchg mov (bad) movabs fstps rex.WX rex.R and (bad) lahf xchg mov add cmp sbb loop xor xchg and lock ja out (bad) test js lods pop (bad) push xchg clc xor add fisttpl (bad) (bad) xor pop stos fbstp pop (bad) jrcxz pushq cmp rex.R mov movslq (bad) (bad) pop jne (bad) rex.WXB stos add jnp (bad) (bad) (bad) xchg pop adc insl or pop int3 pushfq jp fwait bnd movabs (bad) add gs sub cmp imul add (bad) xchg cmp rex.RX push (bad) push fs lret sbb movabs pop (bad) xchg jp rex.RXB andl (bad) sub mov jo (bad) addr32 (bad) in mov int cli pop mov (bad) jnp loopne fld mov mov pop fcmove (bad) rex.RX jae movabs cmp and adc sarb cmpsl or push insl out lods mov push mov mov lret pop iret mov fwait cld sub (bad) sahf loope jrcxz icebp pop sbb sub pop (bad) cmp jle adc push and (bad) or mov sbb xor hlt rex.WB adc push rcrb or push (bad) or fstps add outsb jl mov xchg popq push rex.R sub adc mov (bad) xor (bad) (bad) imul lahf (bad) shrl (bad) fstl adc lock rex.WXB rol jle lret fsubs cmp cs xor sbb xchg test orl sub out cmp (bad) cmp xor fidivl movabs sarb iret jns pop test fsubrp sbb or insl (bad) scas vpmovmskb (bad) nop jnp cmc lret fisubl mov jbe test and cltd out (bad) pushq shrl mov sub loopne popfq (bad) pop mov push or lods (bad) movsl stos mov xchg (bad) rex.WR rex data16 mov addr32 or lock jg lods cmp cmp rex.B (bad) cmp retq mov movsb insl mov adc (bad) iret xor callq jl (bad) (bad) (bad) pushq xchg enterq enterq push (bad) sbb pop pushq (bad) lods loopne rorl in xchg add mov (bad) pop rex.RXB add imul movabs fidivr sub (bad) jbe mov push fstl mov (bad) enterq xchg (bad) mov movabs xchg rex.WRX test (bad) cwtl and lret sub lret add push out lret push int fisub test rex.WRB rex.XB fild icebp rorl xchg pop push (bad) pop mull data16 mov xchg rorl imul rex.WB (bad) cs add xor pop and movsl sbb xchg (bad) (bad) lret mov jo jge add movsb maxps repz (bad) movsl loop rclb jmpq (bad) mov fisubrl rex.WX in jle icebp mov shl push sbb jrcxz push pop mov jle or out addr32 pushq sub pop (bad) rex.WRB callq out sbb sbb movsl fmuls (bad) leaveq stos jl fldenv pop ja cmpb out repz jne xchg shll mov sbb rex.RB mov loop outsl popfq xchg nop lock sbb xchg xor outsl js gs sub in lahf cmp mov leaveq push test test pushfq mov mov (bad) xchg rex.RXB jl imul fidiv or movabs sbb rex.WRXB ja push mov (bad) jg pop faddl or shlb movabs callq add or (bad) seta add pop mov and ja gs jo xor rex.R mov mov cli insl (bad) sbb imul xchg and loop xchg sbb (bad) stc mov insb cmp xor xor and mov xchg or (bad) rex.WRXB or xor push (bad) ficom loop rex.X sbb (bad) pop stos or data16 adc mov jae add (bad) pop xchg rex.W in mov (bad) mov rex.XB icebp push cli pop pop addr32 loop jb (bad) and pop jmp jg lret (bad) stc ja rex.WR (bad) jae mov (bad) xor leaveq mov jge pushq mov lods or mov fwait xchg mov stos sub imull jae pushfq push sahf and insb imul repnz fldt adc out movabs (bad) cwtl incb mov (bad) stos sbb (bad) (bad) mov mov (bad) cmp or sbb rcrb xor movabs jg mov imul and pop jmp pushfq sub stos fucomi sbb sti cs pop loopne adc (bad) (bad) mov cmc rex.B pop or (bad) sbb fsubl add movabs lods cltd scas rex.WB jbe scas fistl pop xchg cmpsl retq ror and fildl repnz or ds movsb fucomi push jnp sbb pushq scas cmp movslq pop mov push test sub sbb push and (bad) rex.B mov jno pop test pushfq push movabs (bad) fs (bad) and andl (bad) jmp (bad) pop retq rex.XB cmp xchg fadds (bad) sub mov cmp mov add jrcxz (bad) mov cmp scas mov ja hlt movabs pop fildl rex.RX int3 in fiadd fildl mov test sub outsl sub ds insb fwait adc mov adc (bad) push cld fstpt cmp lret rclb cmp jp push idiv lret outsl movabs cmp adc jmpq (bad) cmp xchg enterq imul cmp (bad) or fcoml xchg loop outsb adc fcmovnbe (bad) pop cmp (bad) mov cwtl jge or ja movsl mov sub cmpsb fidiv xchg mov rex.WXB sbb jb add rex.WRB out (bad) mov fcomps movsl cmp (bad) (bad) test lods fucomi insl xchg lahf or (bad) enterq rex.XB mov pop jge cltd inc mov (bad) xor push (bad) add sub sahf movslq ds jne and insb xor or fildl jo fmul orl movabs loop lahf movslq fwait lret lods movsb divl addr32 jnp adc and es jg fwait je movabs jmpq (bad) sbb gs imul mov fcmovnbe nop fisubrl and pop pop (bad) sub mov pop pushq cmc sub outsl mov js (bad) out icebp push (bad) (bad) xchg ss faddp lods fsub fstpt stos clc rolb fsub std in fidivrl int3 ja lret movabs mov fwait adcl mov adc mull add fisttpl push xchg xor in pop xchg cltd cwtl pop scas retq (bad) jmp cmp and add sub lret pop lods fwait xor jae cmpsl insl fstpt stos mov (bad) cmp cmc (bad) pop fnsetpm(287 (bad) fcom or (bad) hlt xchg movabs adc adc lret sbb push sub xor (bad) (bad) rex.W (bad) popfq sub or outsb lahf mov movabs cmpsb sbb lret cwtl fisubrl cmp mov fdivrl sahf lock xchg fildl (bad) (bad) gs rex.WR in mov js push (bad) xor pop pop cmp (bad) mov jg fcmovnu (bad) outsl mov xor fcmovnb (bad) add rex.WRB rep xor jnp (bad) (bad) (bad) or xchg andb xor jle ds mov push (bad) cli insb sbb jmp pop xchg jmp sbb sub (bad) faddl stos mov and adc (bad) jb mov sub adc testl pop lods add fs data16 js cmp mov pop jns shlb add (bad) retq jl push int3 mov fisttp icebp cwtl pop outsl (bad) fsincos xchg stos jnp cld xchg in fcompl pop lock icebp out rex.XB and fadds (bad) divl fnstsw (bad) leaveq int negl (bad) mov mov leaveq jno xchg add pop imul push (bad) jae mov jae push and xchg mulb rex.WXB fwait je sub callq cmp cltd sbb insl cli jmp out (bad) (bad) sub and (bad) jl sahf in repz pop (bad) mov movslq stos rex.RX movsl jp fnstenv loopne (bad) fist (bad) movabs repnz movsb push hlt sub lahf pushq mov ss rex.WX (bad) push movb insl cmpsl (bad) jge rex.WRXB mov sbb jg adc not rex.XB mov (bad) jbe,pn xor xchg (bad) out mov shrb jno xchg movabs cmpsb retq (bad) xchg jmpq callq sbb xor mov addr32 movslq fsub insl pop mov fiadd adc lea rex.WB cmpsl (bad) xchg (bad) notb test fsubrs sub push mov rex.WRB (bad) rex.WRXB hlt es sbb repz rex.B sub sub (bad) orl lock (bad) fisub add sahf fnstsw neg xor fstp fnsave shrb fidivrl pop rex.R cmp pop add xor callq cmp gs test mov js sub xchg xchg or (bad) lods leaveq pushq cltd es jge outsl lods addr32 loope,pn cmp xchg push fwait pushq hlt mov (bad) stc xchg sbb (bad) fistl iret jnp sub rex.RB (bad) test cltd rex.RXB lea fsin fisttpl jb int (bad) sahf pop push idivl jl rex.WR mov fildl xor mov sub sub or mov rex.R mov icebp push and sahf (bad) xlat imul xor outsb mov rex fistl jb fcomi push sti leaveq stos movsl mov scas movabs cmp in stos mov xchg fucomi (bad) sti mov sub test jno mov shlb jbe popfq outsb add or sub (bad) cmp (bad) xchg negb (bad) mov and mov push rex.RXB (bad) sbb imul pushfq (bad) sti push in hlt push movabs mov jne test imul sbb sbb cmp gs fstpt mov in clc sub pop (bad) cmp push rex.W or fnsetpm(287 sahf push jmpq push movabs push f2xm1 jle jmp adc callq pop (bad) int setnp outsb ror mov rex.WRB and push add sti stos fcomi adc (bad) xchg sbb sub cmc (bad) push jnp push (bad) fisttpl scas imul js pop fucomi xchg pushq out movabs (bad) js push jnp test pop movsl movabs movabs pop (bad) jae push jb gs (bad) pop (bad) test rex.R jne pop rex.WRB mov xchg jns js cmp or rex.WRX cli mov mov sub fwait push movslq out (bad) (bad) jmpq and lret nop imul (bad) test lock rex.XB data16 fwait (bad) or cwtl xchg loopne mov in test cld rex.WR jnp test sbb pushfq fldt xchg rex.WB push rex.RB decb retq (bad) rex.WRX jp or movabs gs xchg or pop fisubrl (bad) jmpq hlt movsl (bad) (bad) in (bad) mov cmp jae (bad) jo and out mov rcr test ss push iret out lods ds mov lock fldt xor mov in push movslq iret xchg (bad) int jle insl (bad) jmpq rex.WR and sti fnstcw insb xchg (bad) (bad) outsb rex.B xor stos fisttpl shrb mov add jge (bad) adc out rex rex.WXB sub rcr out insb pop mov add jne jl imul or jae mov scas in add mov rex.RB test fsubrs int sbbl cmpsl test fstpt (bad) cmc rex.X sbb jmpq cmp cs jnp rex.WX sbb fcmovne mov or mov stos (bad) (bad) (bad) mov mov add ss cltd xchg pop (bad) loop pushfq rex.WR fisubr out jge movsb fldt jne rcr in (bad) rex.RX nop mov fstpt mov (bad) pushfq fstpt cmpsl sbb callq pop push adc cltd jle (bad) ja test rex.X pushq lods fwait jle rex.RXB cmp jnp push sahf movabs cmp or mov push (bad) rex adc or sbb fstpt mov (bad) and (bad) lock fcmove hlt stos movabs imul (bad) fstps xchg mov push sub test loope (bad) scas movslq loopne xchg (bad) sub imul iret mov rex.R loopne movabs push mul imul stos (bad) hlt imul and movslq cmp mov (bad) (bad) outsb (bad) sbb mov (bad) (bad) lods (bad) pop movsb push jnp (bad) mov mov jb lock fucomi adc jp cmpsl adc fiaddl (bad) jge stos and sbbl fistl fiaddl cmpb and fistl sbb fisttpl callq or cmp jae push (bad) (bad) (bad) sbb sub fcomi clc sahf sbb sub jb (bad) jbe loopne movsl fistl out add (bad) repnz rex.RB mov xchg (bad) lock out add rex.WRX push and (bad) (bad) xchg xchg or fcmovnb xor sub imul rex.WRXB rex.W fistpl lea lret xchg mov (bad) js (bad) mov gs sub xor push retq fisttpl test sbb jmpq cmp cwtl (bad) mov sbb sub out stos (bad) jo std add mov rex.WR xchg pop (bad) (bad) adc or mov jl sbb pop in repnz or mov jg fcmovne mov ja ficomp mov js (bad) outsl (bad) xor cmp scas shlb movabs fnclex fdivrs or mov mov movsb iret rex.WXB (bad) movsb sarb sub pop ficoml mov mov and addr32 out fdivrl fisttpl rex.WX cmp fwait cmc jne fild sub movabs mov mov in test pop rex.WB lods rex.R or or out (bad) fnstenv and rex.WB and stos retq (bad) (bad) pop rex.XB cs rex pop jmpq jnp fdivs mov adc (bad) fistl sarl fistpl insb fs int3 movabs (bad) fisubrl jge movabs (bad) mov fildl or adc retq pop pushfq jp sub movsl rex.WR sub int3 lock retq es jnp and icebp test add (bad) or mov and imul (bad) int3 (bad) and fisttpl xchg mov (bad) data16 adc jo xchg cs fucomi (bad) shrl or (bad) cs xchg (bad) push mov jl out je pop cmpsb fcomi sub rex.WR rex.XB xchg (bad) data16 push sub pop pushq fiaddl stos cmp pop lods rex.WXB test fisttp stos pop cli rex.WR cltd add and adc ss (bad) (bad) or cli movslq or rolb mov scas (bad) mov jns and out and sub pop int3 fs stc (bad) push and (bad) cwtl and (bad) stos stc jnp mov insl xor (bad) xor fdivr js (bad) cmpsl pushq push (bad) (bad) iret or push fcmovbe and imul xor xor xor imul xchg mov movabs cmpsb loop icebp (bad) (bad) out jae lods pop jrcxz outsb cmp (bad) xchg clc es pushq mov mov sub (bad) (bad) push cwtl fdivrs pushq std rex.WR jne imul movsl (bad) out adc push pop in in cmp cltd movslq jbe mov and sbb push pop callq (bad) test cmp in (bad) stc je imul rex.RB rex.RX popfq (bad) add imul push outsl jb in xor movslq fbld fildll pop mov jge (bad) iret push adc jp pop fidivl cli rclb sti (bad) (bad) xor add pop jae out jmpq test ja rex.WRXB xlat push add fnsave lea pop rex.WRB jmp push fidivl fwait jo rex out push mov loopne popfq xchg and pushq mov jb add rex.WR jne retq mov scas sahf jg mov xchg movabs (bad) rex.WRX xor or adc scas rorb (bad) repz rex.WB push rex.WRXB mov xchg lret jle outsb movabs cmp lret xchg or loopne push setno sbb (bad) test sbb (bad) sub cmp and icebp rex.W repz mov fdivrs fldt (bad) jrcxz jmpq sbb cmp (bad) adc sub mov mov (bad) (bad) (bad) mov pop shll pop mov jrcxz lcall out (bad) (bad) rex.W and int3 and mov mov sbb ds fucomi jnp lods rolb sbb mov adc mov jle nop cld fstpt pushq fiaddl (bad) imul mov repz xor or clc movabs pop rex.WX or push and (bad) pop sahf out outsb jno scas (bad) mov jnp jle pop (bad) stos xchg rex (bad) sub sub mov (bad) fistpl or mov (bad) pop movabs loopne nop scas mov jnp callq rex.WRXB rex.XB neg or push jl jg movsl sar (bad) xor push cmp xor (bad) mov or or rex.WRB mov std xor int rex.W push (bad) or data16 xor gs pop ja cmp pop mov jg mov fcomi in lret add rol sahf push (bad) callq and rex.RX adc cmpl jbe (bad) (bad) pop mov setnp (bad) mov imul pushq movsb (bad) movabs mov rex.WRXB (bad) cmc repz ja push rcl rex.R sar sbb fwait pushfq pop xor xchg push mov fldt mov (bad) and callq rex.RX sbb enterq pop fs fnstsw repz rex.WXB rex.R fmull fcomps test mov pop data16 movsb rex.WRB popfq pop mov rex.X pop cmp lret rex.RXB out mov frstor xchg cmp xchg (bad) sub cmp add cli fistl popfq add cltd (bad) xor pop (bad) movsb pop fisttp jmp sbb push jnp in iret pushfq icebp cmpsb sub sbb sbb adc addr32 mov scas pop leaveq cmp in pop and xor fcmovnbe mov (bad) pop retq (bad) (bad) push out adc mov (bad) pushq rex sub (bad) fistpl test pop (bad) (bad) push sbb (bad) (bad) add mov xchg jb in jp pop ds movabs push mov rex.RXB rex.WRX pop xor rcrl cmp insl movslq rex.R xchg (bad) xchg rex.WB gs loope rcll (bad) jmpq in fisttpl movabs push fisttp adc cs fstpt cmp popfq imul lods movabs jne rex.WB sbb mov (bad) lret fxch fild mov (bad) in lret rex.WRB rex.WR sub stos adc pop push movabs (bad) (bad) imul iret rex.W (bad) sub xlat add movsb mov enterq nop rorb push js movabs mov push fimul jmpq movabs jnp jrcxz pushfq movabs sub test test mov (bad) pushq scas or loopne cld add rex (bad) (bad) xchg or add mov psllq fldt ficomp (bad) sbb (bad) movabs rclb rex.X stc stos loopne addr32 (bad) fucom add test (bad) mov sub (bad) fistl or cmp (bad) flds jg cmpsl pop loop pop andb fcomi push gs and xor sahf xor loop (bad) mov (bad) adc pushq cld insb sbb cmp (bad) cmpsl push (bad) test mov mov (bad) iret rolb mov mov sbb rex.WXB (bad) sub and adc cmp movabs pop mov cmpsl popq fistpl scas out int pop leaveq mov adc test or xlat test rol in pop cli (bad) push sbb adcl stos repz out (bad) int3 int cmp fistpl (bad) push std pop pushfq rex.WXB rol stc jmpq (bad) out xchg or sub pop push fistl popfq (bad) fstp mov ds sbb lahf sub scas movabs and fstpt fsubs retq (bad) (bad) (bad) int3 jrcxz int pushfq rex.RX or popfq icebp cld xor fdivs rex.X test mov xchg (bad) lods jno mov xchg js jns jne mov test (bad) adc repnz sbb mov lret out rex.XB sahf fcmovnb xor mov repz (bad) xchg rex.RXB pop pop loopne sbb xor add add pushq adc rex.RXB imul lahf (bad) test xor add retq callq out repz rex.WB cmp mov subb (bad) lods icebp push (bad) (bad) and lea (bad) imul enterq cld fwait add pop and fwait mov mov mov (bad) data16 (bad) jne pushfq fisttpl jbe add rex.WRX jnp push sub (bad) rex.WR (bad) fwait mov lret fistl repz mov rex.X mov mov add (bad) in imul jne jno out fcmovnb lods (bad) rex.WB in adc gs rex.W sbb jno out movabs cltd fcmovnu adc in push pop mov jns and fistpl mov pop rex.WXB movabs stc fcomi (bad) xchg and rex.R stos (bad) clc sub outsl xor retq ss cmp in (bad) and mov adc pushq push sbb lret nop mov retq out mov cmp push pop adc lea jns add (bad) mov pop rex.B mov or mov cmp fstpt jne jns lahf repnz xlat jnp xchg mov add cmp movabs and pop rex.WRXB pop (bad) (bad) ja cmp xor imul mov fldl adc cmp fstps xor mov (bad) rex.WRXB ss addl fisttpl mov cli je pop and cmp movslq hlt test or jnp jmp pop and outsl ror fcomps mov movabs (bad) sbb lock orl sbb fs fwait cmp jge add mov and or (bad) (bad) pop (bad) (bad) sub mov pop cmp and pop pushq cmpsl mov mov mov in (bad) push fadd cld rcl fisttpl jne mov (bad) (bad) pop es (bad) (bad) and fwait rex.RXB xchg (bad) add xchg movabs sti cmp mov or je or rex.WRXB mov mov cli sub int pop jl push movsl lods (bad) jbe rex.XB xchg adc iret mov add js jnp scas and movabs cmp int mov jb mov lret lret mov fwait cmp fs mov xor xchg (bad) pop mov std cli xchg jae pushq fs ds lret callq iret push (bad) (bad) cmp (bad) (bad) xchg movabs adc and fildl pushq ja clc add cmp or lret in cs int3 pushfq insb repnz cltd (bad) pop out (bad) or sbb cmp movabs rex.R cmp (bad) (bad) mov iret mov rex.WRX adc cmp (bad) repnz xor mov mov mov fs (bad) out sbb test mov fstpt (bad) rolb rex.R rex.WB sbb movsb ficompl sub es (bad) pop rcr xchg sar out leaveq (bad) pushq adc push mov fistpl movabs cmc repnz cli fistl xchg mov in lock rex.WR ja (bad) lret pop or add pop mov mov jnp (bad) (bad) adc and pop mov sbb (bad) pop adc (bad) (bad) shll shrl mov xlat jle mov (bad) mov gs mov cmp mov (bad) mov je insb shrl imul and mov test mov fwait ds fldcw jae sbb (bad) out mov ja out mov mov cmp pop cld enterq iret jle (bad) (bad) std lock (bad) push neg xchg cwtl sub sub (bad) movslq xchg jns jge (bad) testl jg (bad) cwtl mov xor add cmpsl jbe retq int3 sbb push retq test and mov (bad) icebp ja or mov rex.RX (bad) or mov scas shll mov pop push (bad) mov (bad) shll xlat push nop xor scas repnz je rex.RXB cmp jrcxz push nop mov cmp lods stos sub xchg (bad) pop sbb jrcxz rex.RX (bad) jle pop or cmp stos leaveq jb (bad) outsb rex.WXB repnz test fstpt mov cli movsb clc push in add shll push pop adc fwait xchg sahf sub (bad) mov mov or push loopne fstl cli mov push add pop cmpsl js sahf sbb rex.W rex.RXB sbb cmp lods (bad) cmp mov test lret or movabs out (bad) in (bad) cs rex.XB loopne movabs cmp mov pop pavgw mov fildl pushq cmc rex.RB and or (bad) fs addr32 mov loop lretq rex.RXB (bad) mov (bad) mov int (bad) mov rcrb mov push xchg vpunpckhdq icebp imul popfq imul insl mov sub (bad) imul data16 xor out (bad) rex cmc cmp pop jo loopne mov fstpt movabs rex.R rex.WRX cmp lods cmpb cli and test cwtl lret adcl cmpsl mov and (bad) movabs xor push or repnz incl (bad) fistl cmp fisttp sbb and rex.WXB add mov jp adc pop movabs xor out cld hlt jbe jne (bad) pop lea rex.XB cmp repz mov xor mov jnp or jnp rex.WRX (bad) push cmp xor mov push cs mov (bad) iret (bad) lahf (bad) jb pop mov iretq (bad) push lret (bad) add (bad) or in lahf cli lods outsl jl hlt pop push jmp (bad) rex.WB or (bad) cmc (bad) mov jns add push adc push (bad) pop nop in cmc rex.WXB cltd mov in mov xchg (bad) es cmp (bad) xor popfq sub jmpq fwait (bad) sbb or cmpsb rex.WRX in adc es (bad) retq ja pop rex.WRB lahf scas pop hlt in fwait rex.RB push and sahf out test mov pushq fcompl test jl adc (bad) (bad) xlat (bad) or add sarb std (bad) rex.WB rex.RB or mov js bnd mov mov jmp ds mulps mov (bad) jp sbb sti adc fldt repnz add cmp rex.XB push or test and and (bad) push rex.R and jmpq jnp jns add (bad) fwait movabs sbb callq (bad) (bad) rex cmp fisttpl xchg (bad) nop mov mov mov add movsl mov lahf sbb push scas iret movslq fwait jnp pop (bad) fninit add add xchg pop retq out je rorl sub fistl (bad) vxorps jns scas popfq retq pushfq popfq (bad) in (bad) fcmovnu repz data16 (bad) sbb xchg pand mov jne in (bad) rex.X lods cmp in (bad) (bad) jmpq add sub rex.WRX adc fcmovnb rcll mov add mov out sub in test std pop sbbl pushq jl jo fimull push and (bad) subl (bad) neg xchg rex.X or (bad) jge pop je pushq fistl rex.WR out push pop pop cmpsl rex.WRXB (bad) in out xchg cs jns cli sub mov jge mov (bad) iret rex.RB xor rex.WR cli and (bad) (bad) loop in fidivr mov lea (bad) movsb sub pop mov add fildl add fwait loopne mov sub cmp fildl cmp (bad) mov add adc rorb cmp imul fcmovnbe rex.RXB std icebp pop push cmpsb pop jp cmp add xor and xchg pop sub scas (bad) rex.X std add rex.RX mov and cli fcmovnu in stos jno shll (bad) xchg out jnp jle int jno mov or rex.X (bad) (bad) fistl cmpsb jb ja rex.RB jbe pop jge hlt xor stos push data16 xor and sbb sahf movl iret lret cmp and (bad) jnp rex ds mov movslq cld (bad) (bad) rex.WRB cmpsl test fistpl lahf (bad) iret mov rex.R or fcmovnu in popfq jmpq pushq (bad) cmp mov fisubr cmp jno xor fcmovnb jo sub int3 fsubrs out cmp fucomi mov jrcxz lretq sti add (bad) mov xchg jp fcmovnbe mov sub sub cmp and movslq and rex.R out (bad) sub push mov adc test fcmovnb mov (bad) scas addr32 (bad) fcmovne rex.WR shl jbe pop jne fcmovbe cltd mov fisttp jp mov rex.W add adc std jo adc sbb mov out out es jno rex.X mov stos (bad) (bad) add jmpq rex.WRXB rex.RB movabs mull fstpt add incl pop and test xchg cmp out sahf test xor es decl sbb and mov mov pop repnz or test out insl pop sti (bad) outsl rex.X xor cmp jrcxz sbb icebp notb rex.WRXB popfq imul (bad) xchg in addr32 loope cmp cs pop and test (bad) lret (bad) mov std pop (bad) pushq fldenv fildl (bad) pushfq push fstpt mov sbb pop fwait ss push mov (bad) out out push clc cmp pop clc xor fldt cmp (bad) (bad) or xlat mov addr32 iret add cmp pushfq push rex.W xchg push jnp cmpsl out leaveq push rex.WRXB rex.RXB mov mov adc icebp fldt fild outsb (bad) pand jbe stos fistl xchg mov test nop loop addr32 or fildl mov (bad) sub fwait mov imul (bad) push outsl cli (bad) (bad) or loope es in or xor mov ffree and (bad) jnp jnp add push xchg (bad) (bad) test icebp mov pop loopne rex.WRX test fcmovnu repnz (bad) jmp sahf rcr mov push (bad) sbb rex.WRX stc add (bad) out rol int enterq fist lret (bad) or insb out jne jbe outsb pop (bad) xor in stc jp push push push movabs sub mov xchg pushfq or (bad) fldz fistpl and scas (bad) xchg fisttpl sbb je mov xchg movabs rex shr push (bad) push cmp scas add push sbb cli hlt (bad) outsb jp ficoml movslq adc fucomi cmp jno xchg js (bad) not cmpsb cmc rex.WR xlat lret mov adc pop callq lods (bad) int mov jl ja jmpq lahf mov pushfq rex.WR jb (bad) (bad) xchg fcomi cltd movabs orb push loopne rex.RXB pop cmp fdivrs jle xchg faddl fldt movabs int3 sarb sub lahf movabs (bad) rex.WB sub addr32 or repnz jae int3 cld mov retq xchg cmp (bad) (bad) mov fistp pop loop rex.WR mov (bad) js rex.WRB or and mov fildl cld rex.X mov testb jne cli or (bad) fstpt cltd jge sbb xlat xchg sbb sti movsb (bad) and mov test xchg add lods (bad) nop add fstpt or (bad) insl incl sbb (bad) pop sbb movsl sub adcb imul (bad) xor imull fistpl mulb and cmp add mov bnd mov fisttpl outsb je mov xlat jns mov (bad) xchg or cwtl cmp xchg jns mov mov xor pushq scas sbb add and sbb in fcmovbe sub add es fildl rex.WB rex.WRXB (bad) (bad) lods lret rolb push mov repnz ficoml or fldt sub fstpt xor insl test imul outsb (bad) leaveq and loopne,pt fwait fwait xchg xchg rex.WRXB es pushfq pop mov or jb popq (bad) (bad) jmp jne jb ds (bad) fcomi (bad) test fsubrl (bad) pop js xor rex.X rex.B mov rex.RB sahf sbb data16 jae adc pushq (bad) retq mov movsb pop out stos xor in add mov mov xchg (bad) lock faddp mov pop adc (bad) rex.WRB loopne rorb ss and cmp or data16 (bad) out pop movabs (bad) fwait mov rex.RX imul (bad) neg fstpt cmp pushq ss (bad) ficoml and fstenv or add or jae sub mov movslq xor fcmovb add (bad) mov movabs ficomp fimull sbb ja rex.RX out imul cmp (bad) pushfq insl jl lret jae or movslq rex.XB (bad) mov sbb pushfq mov out sbb retq add fildl pushq cmpsb push pop xor adc adc std rex.WB sar add (bad) xchg (bad) or outsl pop jae mov loopne xor (bad) mov jnp sbb cmp sbb leaveq icebp callq pop and lahf sub pop pushfq movslq movabs mov (bad) pushq fldt clc (bad) (bad) pop rex.WB pop retq fwait (bad) test (bad) fcmove retq (bad) cld jmp rex mov mov gs in adc jb sbbb in je jrcxz int mov (bad) jb pop fs ss insb add xchg in pop fcomps push add pop pop add es sbb (bad) out lret mov rex.B ss pop loope loop (bad) addr32 or fildll fcmovnbe or rex.WRXB pop movabs lret int3 adc jbe add (bad) mov mov clc addr32 stos xor jne xchg jg test (bad) adc mov cmp jmpq sarb fisttp neg rex.XB push (bad) jnp rex.WR fsts outsb jnp fimul and fistpl fcmovnbe pop test fcomps ss invd out jnp imul rex.WRB (bad) loope mov fcomp cmpsb mov add fistpl (bad) movabs test jg rex.WB data16 (bad) xor je roll fstpt lods cmp push cs nop and pop rcrb sub jl iret imul xchg leaveq sarl (bad) push mov stos (bad) jns pop (bad) lock movabs cltd mov adc cwtl rex rex stos jge imul negq fucomi ds (bad) cmp outsb xor jmp cli rex.WRB xor push movsb stos xor xchg cmp lret mov sbbb rex lea orl xor imul retq rex.B repnz (bad) (bad) sub sbb rex.RXB fwait rex.RXB xor pushq movsl mov sbbb scas pop std (bad) icebp or pop jbe cli sub fldenv fwait cmp (bad) mov rex.WR (bad) ja insl cli sbb fildl xchg (bad) sub fstpt insb sbb jp fimull test notl mov fcmovne or movabs adc lods sahf fidivl xchg mov std jae adc (bad) sbb cmp fsubs rex.XB cmp (bad) lret fcoms or retq jmp add movslq retq jo fstpt sar (bad) fsin rex.R (bad) cs or rex.WR (bad) ds sarb out lock rex.WXB fldt movabs pop subb pop pop (bad) cmp add mov xchg movabs icebp mov clc (bad) xchg ficompl push xor pushq cmp jae (bad) pop add negb imul pop adc xor (bad) rex.X (bad) hlt mov jae jo sbb (bad) jge xlat iret or int cmp and mov mov testb fwait jnp stc (bad) in jrcxz push (bad) cld xor fildl pop mov lock cwtl rex.WR (bad) adc sbb jmp test (bad) xacquire fwait mov sti int3 jne xchg sbb cmp std adc mov fcmovnbe movabs fcomi je mov add jns (bad) cmpsb js addr32 fcmovnbe nop cmp xchg (bad) cmp xor push mov xchg fistpl xchg pop scas int3 (bad) rex.WX mov stc (bad) fstpt andl (bad) in sub leaveq (bad) movabs callq xchg (bad) mov rex.WR sarl cltd retq fwait stos gs icebp sbb push (bad) out andb leaveq test repnz (bad) repz inc cmp callq imul test mov pop push push in and insb fstpt (bad) cwtl shr lods rex.RXB stos pop cmp jo rex.RX mov fstpt test imul callq (bad) cmp jnp (bad) jmpq cmp fidivl rex.W stos jrcxz xchg rex.X mov mov lret or sbb imull (bad) xchg int (bad) int3 xchg push push push pushq loope xor push repnz in mov mov pop (bad) jnp data16 xchg cwtl (bad) jl xchg rex.WRB fs mov cmp push sbb ss jno fs sub cli sub int3 rex.RB push movsl (bad) fisttpll sarb (bad) retq mov scas shl mov (bad) or (bad) pop (bad) test mov stos lret mov (bad) (bad) fildl scas scas movsl mov movsb fisttpl sub iret jbe mov fildl lods (bad) xchg xor out pop xor cmp and (bad) nop addl sbb fcmovne movabs movabs int roll adc (bad) mov movsb fldt js xchg sub mov leaveq pushq mov sbb fcmovnb or adc fcmovb stc and sub sbb lret rex.RXB cli add mov (bad) in (bad) movzwl push movsb push scas loop sub std pop outsl popfq movsl or (bad) push fwait (bad) pop push (bad) sub pop (bad) mov fucomp clc cltd mov out or (bad) xchg adc push pop data16 and jp fsub pop push decb mov mov mov int3 cmpxchg xchg cwtl jns adc rex.WRX repnz iret (bad) outsb insl xchg xor andl stos (bad) outsl pop rex.WX jb,pn sub sbb retq (bad) test cli mov in leaveq mov push (bad) sub movabs cmpsl fldt mov jbe std retq popfq xor mov and add fwait imul stos xor pop jne xchg rex.RX fsts sub movsl adc xchg (bad) mov imul pop stc pop decb sti sub rex.RXB ficom rcl fldt cmpl fnop fnstcw lret fcmovbe cwtd (bad) cli je rex.WRXB jp pushfq rorl cmp jg fwait rex.B mov int3 pop pop add mov (bad) sbb (bad) adc push xchg sub fcomi loop jrcxz fistpl test rex.WR (bad) (bad) movabs repnz movabs mov retq maskmovq testl or lods mov jrcxz rex.WRB (bad) imul popq outsb xchg pushfq (bad) pop rex.W rex.WR rex lock push xor icebp sub hlt scas mov cmp xchg jmp sahf xor test jg mov mov sar popfq out test fistpl sbbl adc rex.WRB rex.B (bad) (bad) (bad) cmc mov jnp insb fwait sbb push mov scas fstps jnp movabs int test out rex mov and fisttpl adc (bad) (bad) adc or fild fistpl or pop mov nop std push iret xchg pop pop (bad) lea and (bad) lods insb xchg jae (bad) ja adc pop test rol (bad) cmp push pop rclb (bad) out (bad) fwait cs rex.X fstpt out sbb clc mov movsb mov push push xor (bad) mov fcomps jnp mov sarl jae xor gs fstpl or lret pushq iret cli test rex.WR rex.RB push fwait cmp mov xlat nop add setnp xor pop pop cmp insl (bad) ficomp jg jno mov (bad) fcmovnbe cmp nop outsl jge pop jnp insl xchg pop pop cmp pushfq mov pushq fisttpl xchg rex.WRB rex.XB fs pop xor mov (bad) xor cmp (bad) fistl xchg rex.WRXB pop and cmp mov test fisttpl ss cmpb sub sti lock fbld cmc (bad) or mov (bad) jrcxz pop es cmp (bad) rex.WRX fistl jo xchg (bad) (bad) (bad) (bad) lock test jmp push pop rcl (bad) fdivrs ficoml rex.W fwait add cli insl jg xor out int3 (bad) lea or insb push divb (bad) out jp (bad) lea jrcxz (bad) repz pushq fsubrs (bad) push xchg (bad) cmp xchg lea push cmp rex.WB rex.RX xchg and fsts rex.B fisubrl mov cwtl xor xor push ss test data16 stos addl (bad) fbld (bad) pushfq adc in (bad) fcmovnbe cmp test imul (bad) fldt fistl movslq pop fisttpl rex.RXB rex.R jmp mov rex.WRXB cli cld incl callq (bad) hlt lods addr32 pop push cmp insl or (bad) jmp stos fistl ljmp jmpq xchg mull movabs and pop hlt fildl je mov mov mov pushfq enterq fildl mov sub mov or pop jno in ljmp orl fwait jo scas loope lods (bad) xor fimul outsl fcmovnbe mov out adc mov mov jbe retq lods pushq fldt jmp and rex.WR push subb jb (bad) movsb (bad) movslq lea adc add (bad) mov (bad) in and fldt js or sbb jno subb pop mov (bad) std (bad) (bad) sub pushq enterq pop out add movslq pop jg mov movzwl scas (bad) hlt std pop or movsl mov in push fwait rex.RB fnop mov cmp rex.XB cmp movabs jns sub fistpl adc xor lahf jae (bad) (bad) and sbb pushq int lods pop sbb movabs adc fistpl cld loop mov add (bad) or retq orb rex.WX rex.XB pop clc pop lret mov int shll out add sarb andl and pop (bad) fs es lahf mov mov (bad) movsb and jl fwait out jns xor xor (bad) fild sub fwait movabs pop pmuludq rex.RX jae jne or pop mov xchg js outsb push retq lea sbb loop sub scas xchg (bad) sbb xchg pop lods and mov mov mov jge sti xchg mov pop and pop ja clc adc xchg rex.RX fwait cmpsb mov repz ss (bad) mov cmp mov pushq pop push jae jg out (bad) cmp (bad) fstpt xor jg mov jno pop pop rex.WRXB and rex.X fsts lret (bad) and pop jns rex.RXB cmp mov test lods xchg movsb fistl (bad) mov push mov fcmovu fldcw cli pop or lret pop stc cmpsb fldenv cmc sbb jg push mov rcr mov xchg jne fdivl pop adc out rcll icebp pushq pop movabs outsl xchg sarb adc sbb scas xor mov jl out and mov xchg rex.RX (bad) (bad) (bad) test js (bad) mov sbb loopne icebp fistl cli cmpsl push rex.WR hlt ja loopne push cwtl sti fisubrl fsub imul imul test sbb and mov (bad) sti (bad) push cmp movabs xchg jg es (bad) rex.WRXB frstor sbb jbe (bad) jnp push imul fmul (bad) sub cld xchg pop sti push sbb jle (bad) lock retq sti rex.WRB jmp sbb jno subl in rex.WX imul cwtl (bad) pop mov pop mov sbbl icebp nop iret (bad) jrcxz pop mov cmpsl out adc cld pushq xchg loope mov or xchg push cwtl stc loop (bad) repz ds (bad) out mov cmpsb je sbb mov lret js movzwl imul cmc sbb fidivl fcomps and xor add jle pop out mov test adc cvtpi2ps std mov xchg in mov (bad) xor (bad) movabs or out sahf (bad) jle pushq rorb jge outsw mov int3 mov mov pop mov (bad) imul cmp push cwtl insl add mov pop xor lahf loopne (bad) pop rex.B rorb rex.WXB and lret (bad) stos int3 (bad) rex.WR rex.WRB mov (bad) out lret jo int3 xlat xchg mov pushq jl rcll cli jns out or xlat rex.WRB fldcw (bad) cmp adc add insb push je mov faddl adc retq js pop cmp xor in sbb and std insb xchg (bad) imul (bad) mov test xor cmc cmp pop (bad) maxps fmuls and (bad) callq xor icebp std jl rex.WRXB movsb (bad) sub push subb mov fiaddl mov sti jp jbe pop (bad) add sahf push rex.RB fwait (bad) in xchg push enterq cltd xor pop ficoml (bad) (bad) shlb jge xchg (bad) sbb or rex.WRX xlat adcb rex.RB jle,pn popq (bad) xor pushq test (bad) repz or out jne out insl sarb insl rex.XB jb (bad) (bad) sub rex.WB retq cmpsl pushfq fs outsb (bad) mov (bad) (bad) rolb jmpq cmpb (bad) mov pop xchg xlat (bad) callq xchg jg xchg sub pop clc and shrl push rex.WRB xchg pop rex.RB jno out (bad) rex.WRB movabs jne lret rex.X adc adc xchg std insb pop adc add or rex.WRB mov (bad) shll loope rcrl fwait ja rolb in mov test xor out adc decb hlt insb xor pushq add repz (bad) and rex.WRX pop repz push gs rex.RB fbld mov rcll or ficomp push (bad) cmpsb iret lock (bad) mov rex.RXB rex.WXB movslq and fistpl es movabs jp (bad) (bad) cmp rex.W movsb push outsb jl (bad) fildl pop (bad) loop sbb mov pop adc stos pop cmp or retq imul rex.WXB and (bad) rex.X fcmovnb (bad) outsl (bad) int push sub or pop cmp jl fildl jns jnp jbe (bad) mov jae rclb xchg callq mov fisttpl rex.WR (bad) mov mov std test rex.B int3 (bad) outsb mov add (bad) (bad) xor movslq imul push lea andb xor out ja rex.RX cmpb movabs js je pop es rex.RX out (bad) sbb rex.WX ja std (bad) sub lcall xor (bad) xor rex.WRB mov add jae stos (bad) (bad) sub fldt jbe loop hlt lods movzbl fstpt movsb movabs rcll in fistl adc mov fcomp rex.WR cmp iret cltd rolb xor jae loopne (bad) ffreep sub rex.B adc adc lock lods cmpsl pop not rex.XB movabs (bad) lods fcmovnbe test js loop fildl (bad) xor or jb mov jg jnp sahf mov loop rex.XB out rex.WXB mov rex.RXB lahf pop rex.WB mov sarb movsb pop rex.B jge fs pop xor pop add clc xchg popfq (bad) add repz mov (bad) jne rex.B mov mov cld popfq rex.WRXB cltd callq jno pop pop sbb rex.RXB fwait mov (bad) pop out jle jno fstl xchg fldt add sbb fs pop xchg rorb (bad) sbb xchg mov jne rex.X add adc out fld1 jno jbe pop pushfq stos cmp (bad) nop/reserved js insl xchg (bad) pop or iret push leaveq jnp loope add mov stc pushq (bad) scas xor movsb iret loope fldt in (bad) jmpq or jg fidivrl sbb movl gs test mov xchg (bad) flds sbb xchg orl fildl fisubrl movabs sub fisttpl pop cmp sub sti fistpl xchg mulb (bad) clc fstps sbb adc (bad) retq adcl lret (bad) (bad) callq pushfq mov cli (bad) movsl fcmovne (bad) outsb xchg jnp pop (bad) pop insb (bad) addr32 jae int pushq jns pop (bad) xchg lods lea push stos out enterq mov imul (bad) push push jmpq mov add outsl mov push leaveq (bad) pushq jae orl xchg xchg (bad) sub jns subl xor pcmpeqb xor in adc jns rex.RX and fdiv lods mov push mov jg (bad) cmc mov jae and adc mov or rcl pop nop add fnstenv xor mov push rex.WRB cmp (bad) movabs pop xchg pop movabs pop (bad) rcrb retq fiaddl xor in movsb mov es lret sbb pop sbb orl or repz sub pop add push repnz sti jle rex.WR loopne sbb sbb test pop pop loope ficoml pop jl iret fst je jae cs fwait imul sti imul lahf gs jg sub movabs loope xor (bad) xchg rex.WRXB mov mov out rolb jp mov push (bad) mov fwait retq fiadd mov loopne imul mov xor (bad) (bad) es leaveq sub retq sbb rex.RB shrb adc mov (bad) addr32 sub popfq xor fnstsw cli xchg and mov jbe (bad) mov popfq rex.WX gs movslq jns clc sbb mov retq jo and adc movsb (bad) test fstpt jns pop sbb cmpsl sub sbb (bad) sub movabs loopne adc sarl jle (bad) mov lock in (bad) push pushfq jp pop in movslq sbb push xchg jge sti rex.X push cwtl (bad) fnop sub xchg xchg pushfq (bad) mov xor lret fmull push lret loope push insb (bad) insl adc mov cmp xchg push push xchg mov pop sub movnti callq (bad) pop movsl (bad) popfq push cmp mov outsl int push iret sbb jns (bad) xor rcrb (bad) loopne clc adc fstl (bad) loope outsb rcll cmp lock movabs pop jnp cmp (bad) loop xchg cmp test jo vmulpd mov fild mov xor fisttpll xor rex.WB (bad) jp icebp jp popfq rex.RXB add rol mov xchg (bad) jnp rex.WR imul push jmp pushfq add push xchg mov in sbb (bad) (bad) (bad) in add cmp fcmovnbe out scas rolb retq (bad) sarl lods cmp fistpl imulb fcomi sbb cli movabs mov xchg sub push mov sub or xor mov mov cmp cld (bad) out push (bad) (bad) pop mov mov jmp out (bad) xor (bad) (bad) negb pop adc xchg lock (bad) jbe add imul pop pushq lahf lret mov iret (bad) pop sti adc (bad) mov fildl sub or jmp (bad) xor and out rclb icebp cvtdq2ps or jnp jg scas sbb (bad) xor push xchg add mov jns (bad) imul fidivr (bad) mov pushfq mov (bad) xor pop enterq push jl jnp rex.RX leaveq pushq fwait rex.X rex.WRXB hlt out loope rex.WX sbb and lods jbe ljmp ds fistpl rex.RXB mov xchg mov rolb cmpsb push xchg push mov in (bad) ja test ss xor jmpq mov xchg fldt cmp jns (bad) fistl push mov je fstpt lods stos loopne jb fistl sbb cwtl (bad) cmc fisttp in and insl (bad) add jle pop add and lret (bad) outsl push rcr imul cmp push and outsb pop fldl sbbl mov (bad) mov test sub rex.XB add xchg push jge lret add fldcw mov mov (bad) neg or pop pushq (bad) fistp jne test mov push adc imul roll iret loop cmp mov rex.X orps xchg (bad) jle mov rex.RB outsl movsb fstpt (bad) (bad) ds sbb rex.WXB fcmovnu imul jnp mov and sub (bad) (bad) fstpl movsb jo mov (bad) pop sbb jnp iret xchg lea xor (bad) sub adc retq fistpl jg mov (bad) sub lea pushfq add mov fninit xor (bad) mov (bad) imul jg lret cmp insb add jae sbb xchg enterq outsl (bad) xchg (bad) (bad) adc (bad) and pop xor cmp push jnp test rex.RXB xchg mov fist rex.WB rex.WXB sbb (bad) lock (bad) stos xor insl cli and adc mov imul mov test flds (bad) sbb (bad) sbb push mov psllw pop xchg in and rex.RB rex jo ds rcrl pop lea data16 jl mov mov cltd mov fistpl adc xchg xchg pop lods test mov stc repnz pop sbb jnp loopne (bad) pop add pushfq cmpsl mov pop cmp fild (bad) xlat jae (bad) movabs jnp pop nop sbb (bad) xor iret sbb imul push jae rex.XB loope stos lea xchg (bad) (bad) (bad) cmp (bad) sbb xchg addl adc sub movsl lret (bad) xor (bad) adc ss in jbe lret nop mov lods sub cli (bad) stc adc cmp lret jle (bad) pop (bad) rex.W jb pop (bad) addr32 pushw jns leaveq (bad) (bad) add mov jnp es fistl cmpsb sbb (bad) cmpsl (bad) (bad) icebp xlat (bad) fildl idiv sbb fsubrs sbb lret pushq pop imul nop retq pop adc sbb adc out push stos mov pop repnz (bad) or mov add cmpb mov jns retq rex.B jnp push jmp pop (bad) pop and js rex.XB loope lret push (bad) mov retq movsl stos (bad) or xchg (bad) idivl mov cmp mov nop fcomi test add pop (bad) (bad) push sub mov pop rex.RX rex.WRXB fldt lea rex.B xor (bad) (bad) loopne (bad) fisubl sub and mov (bad) or enterq retq rex.XB cli rcrl test mov sub fstpt xchg movsl in cs pop imul rex.RXB xchg lahf movsb fstpt (bad) cmp cmp movsl enterq mov fdivs (bad) xor cmp fstpt clc rex.WRB and fcomi cmp push mov rorb sarb cmp cmpsl and addr32 (bad) push pop rex.XB es je and std rex fwait jl cmpsb repnz fnop rex.WRX out pop mov jnp add lret ss cltd retq rex.WXB rex.WRXB jge pop jl fadds cltd repnz xchg rex.WRB stos rcll push retq movabs icebp cmp or push int fs stos ss out (bad) (bad) fildl fprem1 or sbbb (bad) nop pop push pop pushfq mov hlt lret loop cmpsb lock push fdivrl fwait rex.WB test push cmp cmc fstpt jle std clc adc sbb rex.WRB (bad) jnp rex.W imul pop adc fdivrl (bad) add rex.RB rex.RB rex.RXB or fnstenv sti (bad) mov out adc sub (bad) movsl (bad) pop (bad) xchg push cmp (bad) (bad) xor (bad) rex.WRB (bad) and loopne mov (bad) rex.B pop outsl jns pop movslq or push pushq in es fcom fwait xchg add fistl xchg dec hlt callq add cs lret xlat pop lods scas fdivs push cmp rex.R rex.X out (bad) mov callq push pushq xlat sub fnstsw cwtl cmp xchg outsl mov mov adc mov mov and sbb lret pop cmp jge mov (bad) gs cmp (bad) xor rcr rex.WR rex int3 cmp test imul add (bad) (bad) clc movabs sub fst cmp imul (bad) sub rex.WX out or lahf (bad) (bad) not jp mov xchg (bad) (bad) pop insl pop mov lret rex fisubr mov rex.WRX imul mov (bad) (bad) rex.WRB xchg mov add (bad) repz sbb gs ficoml cmp test adc rex.RXB jg (bad) (bad) mov add std (bad) cmpsl mov iret (bad) xchg rclb pop xorl push insl out jrcxz xchg (bad) xchg fcmovnbe (bad) (bad) loopne jnp repz ss icebp retq xchg xor fstpt or jno clc loopne out or pop rex.RX rex.WB fstps stos icebp pop bnd sub rex.RX mov fldt or stos push shrl callq repnz and mov pop (bad) xor push sub mov (bad) in sahf (bad) (bad) fistl xor popfq fstpt cld lock xchg mov push leaveq jbe out andl movsl xchg add pop sub pop lods je cmp mov (bad) fcmovnb rex.WRB (bad) insb in fucomi (bad) fs xchg xchg rolb test retq fadds pop sub out jnp mov imul mov sbb and mov fucomi (bad) test cmpsb jmp sbb lret (bad) movsb jnp sbb sub icebp and fcomps imul fdivrl xor jno sub (bad) fistpll mov stos repz cmovo (bad) cmc mov enterq cmp movabs push lahf test mov push insb xchg fldenv xor sbbb loope shlb cmpsb (bad) push fxch callq in out fstpt rex.WX rex.WB retq add (bad) imul movabs xchg (bad) push (bad) and xchg pop jnp xor pop mov (bad) (bad) add push push (bad) incb adc rex.W movsl mov cmp adc push pop rex.RB outsl (bad) (bad) (bad) sub rex.WRXB pop and data16 jmpq mov fwait test push rex.X xlat mov (bad) loope adcl sti (bad) (bad) sbb jrcxz,pn lods cmp xchg pushq push and movabs (bad) rex.WB loopne pop xor cld add sbb pushfq int3 rex.X ja (bad) fnclex xchg cmp cmp mov es leaveq (bad) imull int jno sbb incl push mov xchg retq test (bad) loope push ja imul rex.WR (bad) xor iret sub add cmp adc add push jno pop fldt loopne pop fs push cli test adc es fldt sub pop cmpsb out and fstp jbe mov movabs (bad) fcmovnb push cmpsl add (bad) movslq in insb rex.X fucomip lret rcr or cwtl callq sbb addr32 mov in xchg rex (bad) cmc cmpsl mov and jns movabs loopne mov jbe or (bad) fucomi jle iret mov rex.WRB lods out (bad) mov fldt mov and (bad) mov in (bad) or cmpl (bad) pop out iret adc jnp or fimull rex.WX rex.WR mov out and lea adc neg int jmpq (bad) pop mov sti stos (bad) cmp loop ja mov out add test in xlat rex.RB pop fisubl and xchg test pop (bad) or mov nop outsl fidiv or (bad) (bad) (bad) cmp ja xor mov ds xchg adc loopne mov cmp movabs sub push xor xchg add int movsl nop leaveq (bad) sub fwait add xor xlat fcmovnu jle (bad) or mov cmpsb jo fistpl (bad) mov pop mov (bad) adc mov (bad) and pop add sarb pop push (bad) fwait push jge movsl pop popfq repnz mov (bad) (bad) or rex.R sahf pop push rex.RB repz and stos (bad) jl fcmovnbe xchg mov cmp fcmovnbe mov add addr32 jge xchg and mov mov pop stos cld adc mov (bad) fs icebp ds pop rex.RXB pop movabs std rclb sbb mov adc loope sbb pop retq popfq faddl push or sbbl movabs fadds fistl fsubr jg retq cmp push pop sbb (bad) jg shl (bad) loopne mov movabs fwait push xor (bad) pop push fstpt test adc xor int3 jl rex.X gs add sub mov test callq movslq add mov fisttpl leaveq retq rcrb pushq jbe clc sub movabs (bad) scas (bad) ja pop fldenv insb (bad) lsl mov (bad) out xchg (bad) insl (bad) or or xchg std xchg jle out movabs lods pop mov mov stc test rex.W (bad) adc or sub lret (bad) lea push test xchg xchg lret shrl rex.RXB scas add andl and js sbb fmul (bad) callq rex.RB sti (bad) xor jne mov or pop cld (bad) mov rex.RX sub sbb sub in movslq cmp data16 popfq jns (bad) insl sti rex.RX adc mov es outsl mov (bad) push or mov loopne rex.WB mov rex.RXB sub loopne sub rex.RB (bad) fs rcr sbb push sar xor cld fiadd push ss mov fnstcw cld mov push mov xor lods cmp xchg adc cmp repnz (bad) (bad) callw andb push pushfq sub rex.RB adc (bad) xchg (bad) cltd push rex.XB cmp mov pop cld rex.WXB (bad) hlt push mov (bad) mov outsb mov xchg pop scas mov rorl (bad) ror out mov je lret (bad) movslq ja lret mov movabs mov xchg jp retq adc or (bad) fsubrl out popfq push mov push leaveq nop stc adc leaveq sub callq xor (bad) cmpsl out mov stos sbb mov rex.WX fs scas rex.WXB xchg ffreep in cltd sti mov fmuls sbb mov (bad) in out int3 sub (bad) (bad) scas (bad) mov (bad) roll xchg cli jb rex.WXB jmpq hlt xor cmp (bad) sub sahf cmp addb rex.R rcll push pop idivl mov jne subl rex.W adc (bad) pop push mov outsl (bad) sbb add adc mov mov enterq xchg (bad) in sbb iret fs add lods (bad) cltd mov in movabs mov stos (bad) cltd in retq movabs stos mov sahf push sbb pop loope or test xchg (bad) mov iret rex.WRXB imul mov (bad) jrcxz enterq mov xlat (bad) sub push (bad) out movslq xor repz (bad) mov cmp mov rex.WRXB jns insl rex.R enterq nop or adc out xchg rex.RX loopne cmp mov stos ja xchg (bad) (bad) rex.WRX (bad) and xchg push fisttpl fisttp (bad) jmp in fcmovnu cmp cmc xorl xor adc testb sbb loopne (bad) xchg shr movzbl fisttpl test mov and xchg out rex.RX movslq fistpl push pop sub adc and callq add fs fnsetpm(287 je push jg xchg and jmpq pushq rex.WX lods fcmovne (bad) push insb sbb cld xor cmc add jo loop xchg cs cmpsl popfq (bad) pop imul (bad) fmul push data16 or jmp mov rex.XB int3 rex.WRXB lock adc fisttpll callq xchg int3 xor mov xor fcmovb scas jne fiaddl std ds hlt sub jae out mov test stos int3 mov outsb push int3 add cmc hlt cmpsl rex.WRXB fisttpl (bad) sbb cmp mov pop and (bad) sbbl mov sbb xor out cmp jmpq fidivl xchg stos rcrb movabs fstpt xchg stos scas (bad) cmp or pop cmp adc sbb (bad) outsb pop pop mov leaveq (bad) push sbb cmp xchg fildl lock push mov movsl jo imul pop push test jle jmpq mov enterq fsubrs fdivl jae lahf fstpt cmp adc pushq (bad) cmpsl rex.WRB fisttpl jp jnp push ja mov cmp and retq stos (bad) pop adc xchg xchg int jae pop movabs notl rex.WRXB cmp or mov jg jns sbb cmp jmpq pop and int3 hlt (bad) sub (bad) pop sahf rex.WX or stos (bad) out mov jne repnz (bad) fwait cs lock repnz pop (bad) rex.W int3 ja mov rex.XB mov callq (bad) fimul or fisubrl xor out pushfq int push jg pushfq (bad) fisttpl mov or sbb test movabs mov sbb movabs pop ror push pop pushq mov push (bad) mov xchg xchg pop ss xor adc mov rex.WXB shlb xor out pop lret adc popfq and std or push gs fisttpl hlt pop (bad) (bad) es xor add mov add (bad) (bad) (bad) out or cmpsb addr32 pop push (bad) ss cmpsl pop cmc jnp (bad) fistpl andl decl sbb jae push pop rex.WRXB ds std mov adc mov movsb xchg out movsl fldt mov test fstpt stos (bad) scas (bad) pop loope xchg sar fistl jge cmp fstpt push je fistl mov jnp imul lahf lret data16 xchg sbb adc (bad) or test xor xor sub pop (bad) and int xor cmp imul (bad) cwtl jrcxz xchg cmp lret test lret rex.WB rex.WB (bad) mov rex (bad) pop sbb scas add cmp pop cs movabs pop push test movabs movsl push movslq rorb imul sbb cltd mov fimull xchg cwtl push fidivrl (bad) jp and adc mov (bad) mov add rex.R rcrb xor add fwait and movabs (bad) repz mov and (bad) sbb mov rex.W in (bad) psubusw (bad) and movabs ss test rex.RB or cld ja xchg rex.X push sub pushq movabs push rex.B (bad) loop iret decb movabs xchg icebp (bad) (bad) mov imul and movswl push mov jne js jae sub hlt mov mov cmp subl movsl insl sbb xor (bad) xchg xchg rex.X fs (bad) lock (bad) rcrb mov and jg fstpt mov pop rex.WRB (bad) xchg and sbb out int xchg jnp mov fistl loope or (bad) sbb lret fistl or bnd test (bad) movsb test xor scas gs mov fildll jnp add out pop sub stos and sub (bad) out (bad) cmp movsb ffreep fs pop rex.WXB cmpsb xchg negb sti fsts pop movsb (bad) clc stos cmc stos stos rex.RB cmp pop push mov lahf test xchg (bad) jno fistl (bad) (bad) enterq fcmovu lret (bad) mov sub cmpsb loope mov movsb popfq fcmovbe (bad) stos sub fucomi mov adc fcmovnbe jnp xchg subl callq rex.WX lea mov push fcmovnu mov repnz fistpl jae rex.WX pop (bad) test adcb lea outsl out test rcrb rex.RX ss fisttpl pushq fadd mov sbb movabs (bad) repnz add (bad) fs lret rex.WRX movsl cli jg rex.WRB adc lahf jb jge jp mov mov adc rex.RX or (bad) fldcw pop retq rex.WX rex.WR ja fisubrl jg pushq xor xor (bad) (bad) out (bad) mov pop rex.WX xor and imul (bad) test rex.WB add or sarl rex.RXB fwait pop sarb sub pop (bad) nop ficomp (bad) jo xor (bad) cmp (bad) mov ja xchg retq jrcxz popfq xchg (bad) pushq pop rex.WRXB imulb sahf mov lods xchg mov int3 fisttpl (bad) mov fcompl std fsts sub movabs roll push neg rex.WXB in jmpq imul jnp jp adc jle rex.WRX pop sub pop (bad) fwait (bad) push test (bad) sti mov imul jne push out (bad) rex.RB fbld xchg or cld (bad) out popq (bad) push xlat add rex.WXB pushfq (bad) fldl cs pop in fs sti rol in ds popfq mov cmp mov stos xor pushq fistpl sbb or movabs sub fisttpll push and rex.RX rorb mov fidivrl movslq xor mov (bad) lret (bad) push movsl lods mov (bad) scas rex.WXB add fcmovnu pushq (bad) or push adc push cmp mov fldt mov mov and in (bad) gs cmp push add pop pushfq push push xchg enterq fcomi decb (bad) mov rex.RXB add rex.W sbbl fistpl sbb rex.WX mov xlat sarl repz iret sub fisttpl loope (bad) sar jo (bad) (bad) cwtl lret xor rex.WXB rex.WRXB mov fistl mov fcmovnb (bad) movabs push insb sub (bad) sbb and cmp imul outsl xor imul adc (bad) movabs rex.X push rex.RXB jo,pn (bad) sbb mov mov sub cltd rex.RB or (bad) and outsb lret adc flds add test xchg js sub mov adc jg mov mov or and pop repz insb popfq rex.XB adc cmc xor movabs rex.WR sub adc rex jp mov fs movslq shll mov retq lahf (bad) jo push rcl push cmpb push xor and (bad) push xchg fcmovnb jae incb add xchg (bad) xor (bad) mov sub sbb outsw imul sahf imul mov stos (bad) pop sbb lock data16 lret ss mov out insb xor sbb (bad) rex.WXB rex.RXB rex.RX jl (bad) jb push (bad) stos hlt adc jns movabs xchg mov scas js sbb cld (bad) jbe push mov retq jae rex.B xchg sbb sbb test (bad) adc loop lods xchg mov pushq mov and out push adc test xor test jne (bad) (bad) xchg rcr in loopne rcrl std hlt mov rex.RX rex.X (bad) movslq push (bad) jae (bad) sub (bad) stos es jne orl test mov pop mov (bad) xchg test mov xchg fbstp notb movsb mov adc jns outsb mov jle icebp js leaveq jrcxz adc add pop pop (bad) (bad) jnp (bad) movabs or rex.RX je jp sahf pop xor out (bad) sub (bad) mov (bad) movabs sbb fstpl (bad) cmp insl rex.R in cli cmp xor or stc leaveq mov add (bad) jp jl pop cs retq mov xchg loope mov loopne (bad) sti sub pop (bad) xchg mov (bad) mov pop cltd mov (bad) int3 pushfq rex.RB lret nop mov (bad) clc loopne pushq adc jo test xlat orb mov add (bad) movsb cmp flds sti out xor data16 mov cmpsl push rex.WB jmp repz or or icebp add push xor pop cmp xlat loopne int lods push fistpll jno outsl or cmp (bad) sbbb lods scas sbb fcmovnb (bad) mov cwtl xchg mov imul stos sbb loopne jge testl xchg mov pushfq xlat (bad) xchg mov fnop xor movslq push mov and (bad) mov mov sbb fildl in adc cmp sbb div popfq lods rex shl int pop nop rcr je mov (bad) int3 cmp (bad) fistpl (bad) rex.WX pop fldenv pop nop rex.WXB fcmovb (bad) cmpsb lods rex.W int (bad) mov (bad) push movslq movabs rex.XB add insb jmpq (bad) imul ja retq sub stos (bad) adc jne fisttpl xchg pop cmp in movsb rex.WRB xor xchg pop popfq (bad) sbb push add (bad) jnp pop ror sub sbb cli or in cmp rex sbb fwait rex.B jp lods jne sub (bad) (bad) xchg cmpsl ficoml (bad) xchg xor jo cltd sbb sarb pop (bad) pop loopne fs add (bad) out incl (bad) test fwait cmp shll rex.RX sbb cs adc outsl jnp rcrl iret add pop ja sbb mov mov outsb push pop leaveq (bad) ds fildl rex.WB mov fldl2t jmp mov xor pop rex.WRXB rex.X pop or xchg outsl xlat adc jo cli in and mov jmp sub jno rex.W (bad) (bad) rex.WRX xlat movsl fcomps xchg mov gs rex.RXB cmpsb and xchg (bad) pop sbb setne pop push fwait orl jl cmp insb es rex.WRX xlat or lods lahf (bad) mov outsl push retq pop movsb rex.WRB jl fisttpl xchg fs or mov scas imul or push (bad) sbb stos lret shrl mov xor push jmpq adc mov enterq fistpl rsqrtps (bad) jbe pushq mov int3 add scas pop cmc jg test fcomi xchg xor shll mov retq jmp outsl out and movabs (bad) fldt (bad) or cli sub (bad) (bad) rex.WB insb adc xchg imul shrb pop out (bad) (bad) test fwait xor xchg pop in and fwait cmp test int jmpq mov adc pop jno xchg rex.RB jb,pt (bad) in xlat jle add xor sub lods push sar push imul je imul lret in rex xchg fcmovne (bad) roll rex.WXB (bad) test ss xlat rex.RXB xor scas cmp insb pop xor stos rex.WR movabs mov rex.X rex.RB imul je (bad) pop jmpq pop in lods ror lods mov fstpt (bad) ss pop xchg (bad) fild jb cmp mov sub fistl mov mov and rex.XB out jmpq (bad) repz in jl or fwait pop lock fimul xor jrcxz push callq lea ds (bad) add rex.WRX pushfq jl pop sahf sub (bad) scas sub xchg push retq push jne xor and (bad) and fistl push xor mov fcmovbe mov sbb cmp (bad) (bad) (bad) (bad) sbb jmp pop stos (bad) loopne adc push pop std movabs cmp cmpsb mov sub (bad) mov rex.RB pop imul icebp xchg xchg movabs sub jae loopne jae (bad) jg pop xlat fstpt fs push and add fnop rex.B rex.WRXB jle mov shrb movb pop movabs mov cmp fcmovne mov fs add iret cmc fdivl (bad) insb xchg sar rex.WRB (bad) pop ja out fcmovnbe movabs cmp xor jle rex.XB or fsubr (bad) sbb jo or movabs add std push retq xchg and xchg mov jbe jb xchg subl mov xchg (bad) fldenv repz repnz testl lret fcom cmp push add (bad) movabs adc lods cmpsb pop or and jnp sbb rex rex.X rex.WX sbb mov (bad) std rep adc adc fildl xchg pop (bad) xchg xchg negl mov jbe sub sbbb rex.RXB faddl or sub mov lret clc mov rcll jnp pop fcom mov rex.WB jmp cmp fisttpll sub (bad) xor fcoms stos (bad) sbb fwait adc icebp cmpsb (bad) mov cmp push (bad) jp adc sti or gs lea movabs movslq adcl rcll imul xor push (bad) sti pushfq xchg out (bad) cmc pop (bad) hlt out cwtl stos stos mov jp (bad) (bad) pop sub movabs movsb (bad) rex.RXB rex.WRXB stc insl rep jge mov lret js mov sbb jbe lret jl and cmp movslq sub mov jge shr add (bad) shlb rex.XB rex.WR rex.RB sbb adcl and rolb (bad) pop jb (bad) movsl mov sbb ja jg fwait sub lods movsl repz push out movabs sbb push adc rorl cltd jrcxz xchg retq ja jb and enterq mov jl jrcxz xchg (bad) imul add rex.B fcmovnu insb push stc (bad) lahf lret (bad) mov mov or sbb movabs fwait mov mov rex.R (bad) out xor rex.WRB fldt cwtl cmp pop add neg vpmulhuw pushfq sub pushq icebp xor fstpt int3 fisub rex.WXB lock fisttpl cmpsb fcomps xchg out icebp or lahf in out addl or outsb fildl jle rex.B jg fcomi iret (bad) xor mov (bad) (bad) pop retq (bad) cld jno fcmovnb lea (bad) sarb in push data16 movabs clc mov push (bad) fs mov sub fdivl xchg and rex.WR cwtl cli sub pop rex.XB sbb and fcomi movsl rex.RX adcl mov pop xor xchg (bad) movabs rex.X pop add (bad) jae (bad) mov mov fldt pop test xchg movabs retq scas and and jns push xchg sahf int3 add jne lods pop pop jbe jae sub push sbb nop pop callq and jns sbb fwait (bad) rex.WRB fwait (bad) mov xchg mov movslq imul push rex.RB nop js sub adc (bad) jne addl jns leaveq add lods scas rex.R iret (bad) rex.WR ss sub data16 lret rex.W or jrcxz rex.B (bad) jae mov (bad) adc and stc pop mov (bad) test int cmp scas and adc lret lret sub rex.W cwtl jnp mov fistpl cmpsl pop repnz mov sub shl in push scas mov push rex.WR test in xchg rex.WB jnp (bad) and (bad) loopne scas mov imul xor xchg (bad) mov out (bad) in (bad) ficom int fstpt callq ds fwait and (bad) push movzbl popq mov sbb (bad) loopne int3 rex.W mov add rex.XB rex.WRB jp sar sub hlt (bad) imul or pop cmc push (bad) xchg jl addr32 (bad) (bad) retq rcrb fistpl sub nop rex.WRX ss pop jrcxz cmpsb mov outsb xchg push (bad) stos sbb test pop push mov mov pop vmaxpd jbe shrl test sub pushq (bad) and lods out retq rex.XB jle fucomi test adc fiaddl enterq push movslq (bad) sub testb shrb sti repz movabs fucomi xchg jp xchg retq lods sarb loopne (bad) out rex.X (bad) xor sub (bad) int sub (bad) or rex.RB movsb jno fildl retq pop cmp xchg retq lock repnz pop test (bad) fildl (bad) adc jno fldt lahf (bad) jmpq imul mov xor fwait xchg cmp mov fcmovnbe jnp (bad) lret adc xor imul leaveq rorl idiv push cmp (bad) adc jmp cwtl cmp movslq cli rex.RXB or xchg mov adc xor test fisubr fisttpl fst pushfq add add mov fcmovne jbe fcompl subl and or fildl incl shrl outsb and mov xchg ss xchg (bad) adc and cmp (bad) test in int and (bad) (bad) fldt adc (bad) mov iret test (bad) fstpt push cmovne push popfq rcll mov (bad) std repnz loopne rex.W (bad) (bad) fwait cmp jmp lock test mov rex.RXB mov rex.RX (bad) (bad) fldt (bad) push mov repz (bad) jge jno fisubrl out stos std insb (bad) (bad) mov sbb out repz add cmp jns imul cmp sbb callq fwait lret test (bad) addr32 outsb movslq mov jnp (bad) fcoms or sarl test fwait jo xchg pop std nop (bad) or fstpt in movabs pop imul jp (bad) pop scas xchg adc xor callq xchg fistpl or xor sub in rex.RX rex.R sbb rcr jg jno (bad) ss addr32 out or (bad) es jmp jnp cmp divl jns hlt sub pushfq addr32 rex.WXB jle (bad) or mov movabs xor sbb out mov (bad) sahf rex.XB (bad) (bad) lock and mov cmp cmp adc (bad) lods ja in ss jg adc jmp push (bad) jne jl mov ficomp loop retq iret (bad) (bad) xchg mov (bad) mov lea ss sarl cs (bad) mov rex.WX lret mov xchg rex.WXB rex.XB pop mov rclb in xchg addr32 (bad) mov sbb loopne (bad) mov adc mov xor jmp push out cmpl movsl push push nop pop jb imul clc jae add (bad) gs jrcxz in xor xchg fnstsw (bad) rex.RX retq xchg cmp push out pop sub mov (bad) adc xor sbb pop jle mov mov mov cltd add sbb xchg sti stc shrl fwait (bad) imul or rex.WXB and mov (bad) (bad) bnd lea pop fiadd mov (bad) js xchg or pop jp shlb jmpq (bad) and pop fmuls fildll add (bad) sti (bad) cwtl pop pop jae flds pop cmpsl mov rex.WB fistpl rex.RXB adc push pop fsubs add mov adc scas scas (bad) push repz fisubr jno xlat lea stc pop add xchg xlat pushfq pop fs fsubrl adc xchg cltd lods mov sarb fstps adc sub ror (bad) push (bad) hlt cmp mov pop mov lods lret enterq add mov rcr xchg pushq and movsb fildl stos xor imul rex.WB stc adc fldt xor push fcmovne (bad) (bad) sbb in rex.XB add jae test (bad) es pop jg jp jbe xchg lods rex.RXB int3 retq xchg cmp push repnz (bad) rex.R rex.RX (bad) mov lret jns lock ss xor (bad) and or xchg jbe pop fndisi(8087 test mov fisttpl test nop stc addr32 mov rex.X mov rex.RX mov fs mov pop nop pop movabs (bad) lods (bad) jnp cmp fs add int3 jne rex jl pop and test nop fildl jge stc jbe (bad) movabs rex.X and movsl fwait rex.R mov fucomi (bad) retq (bad) repz scas pop (bad) loopne xchg or fdivrs cmp jae loop adc xchg fldt pop je pop (bad) insb (bad) mov (bad) push adc int out sahf xor pushq (bad) leaveq scas scas pop cmpsb push mov jns outsl and mov lods jo sub mov (bad) cmc rolb fwait (bad) (bad) mov sub sbb test jae jne (bad) (bad) rex.WXB rex.WRX jnp fistl jg or mov xor sbb xchg outsl (bad) (bad) xor rex.RB (bad) (bad) jge stc outsb movabs sbb (bad) in addr32 iret mov roll cld pop xchg push iret cwtl (bad) test pushq (bad) stos jg rep scas push jne (bad) or fsubl iret or rex.WRXB sub add xchg adc iret push push insb out shlb adc ficompl push (bad) (bad) repnz cmp pop sbb imul enterq rex.WXB rex.RB stc (bad) cmp scas rex.X mov lods test (bad) jno pop in (bad) data16 cli movslq gs xor repz cmpsl xor xchg lods movsb (bad) iret in rex.RB mull outsb mov xchg xchg or rex.WXB mov add or fcmovne adc test (bad) and rex.WRXB fs (bad) fnstenv pushq loopne mov sbb jg test cmc std adc rex.X (bad) xor cmp retq rex.WXB mov jge add (bad) lea fldt mov cltd nop adc enterq rex.WB sub mov fadds fisttpl cmp pop jb jge fcmovnbe jl,pt cmp cmp sbb xchg insb mov lret fildl pushq push fistl (bad) cmc subl sub fldt rex.RX stos (bad) xor sub rex.R adc xchg cs pop (bad) insb iret adc push popfq lods je or and pop (bad) nop push sub sbb (bad) mov xchg movsb fstpt mov fstpt in and jae (bad) xchg pushq fistpl xor imul cwtl rex.R mov imul (bad) (bad) (bad) fmuls rex.B (bad) mov std loopne xchg fldt adcl (bad) (bad) xor fimull cld xchg push popfq or int3 rex.WXB repz xchg jmpq push cltd fsubp adc loop insl rex.W movsl lock pop cmp (bad) (bad) push (bad) cmp jnp clc out je imul cld outsb movsl rol (bad) rex.R clc mov (bad) mov out fmuls movabs andl sbb hlt stos sahf ss sbb (bad) (bad) push out sbb loope mov test loopne in sub and clc mov out je retq (bad) (bad) cmp (bad) ficomp sub add loopne push cs ffree xlat sub pop xchg cmp in add rex.WR or push mov jae pushq jno or jle shl cld scas sbb (bad) std (bad) rex.WRXB rex (bad) movsb in xchg (bad) xchg (bad) jae jno add jge fistl (bad) jmpq jmp cwtl test mov (bad) mov pushfq push outsl loope stc mov fcomi pop callq popfq pop xchg fldt mov (bad) mov pop std rex.R pop jg (bad) jns (bad) fucomi je test fcmovne paddb sbb push (bad) test hlt je test mov fwait nop cmp ja fisttpl enterq mov mov mov mov push jg fcmovnb (bad) (bad) adc rex.RX or pushfq movsb (bad) pop (bad) in addl (bad) (bad) mov fldt lods and rex.WB (bad) insb (bad) fcmovnb jno cmp push or xchg ja pushq ss rex.WRB rex.RB xchg fwait (bad) xor fs movabs or (bad) (bad) and outsl popfq test jp fcomi jl sub adc push movabs rex.WXB jmp rex.W cmp push roll (bad) xchg movabs fcmovbe enterq (bad) xchg (bad) mov orw mov fldt (bad) (bad) jbe lods mov (bad) pop sub repz mov (bad) jge out jbe push std rex.B movsb sub pop push (bad) push (bad) enterq jne (bad) loope clc movsl rex.XB out icebp pop movabs iret fcomi sbb fmull cmp xchg mov sbb rex.WX loope test push mov push clc or rex.WB sbb in rex.R and (bad) fildl cltd (bad) xchg pop iret pushq add fisttpl iret lret jp adc cmc sbb (bad) add movsb or (bad) int3 add mov jmp push (bad) sti pop imul insl std (bad) int3 jrcxz jl fstpt jbe (bad) test pop cmp mov (bad) leaveq mov push pop repnz lods pop mov je pop xchg outsl rex rex.WRB jrcxz add movsl cmp mov (bad) sub pop jae push pushq imul (bad) xchg fiaddl jnp pop leaveq fistpl in jns pushfw fstpt mov xor cmp rex.RXB adc nop jle leaveq and pop rcr (bad) (bad) jrcxz or enterq or cs adc mov cmp movabs movslq stc (bad) rex.X sub (bad) mov pop (bad) sbb fisttpl and and js (bad) insl add jge scas (bad) rex.WRB fdivl rex.WX fbld lret movabs sbb insl or jp (bad) mov jne sub push popfq (bad) (bad) leaveq retq nop adcb push addr32 outsl vcvttps2dq (bad) push fiadd cmp scas cmc add imul push push jne in (bad) movabs (bad) push (bad) in retq icebp lods add xchg mov adc and rex.XB in insb retq jno sub sub mov push xor add sbb rex.RX rex.RX mov xchg fcompl rorb repnz mov stos in push jle shr cmp xchg (bad) (bad) push (bad) mov rex.WRXB rex.WRB sub sub scas xchg clc jg callq cmp out mov mov int3 frstor push lods (bad) pushq sbb pushq fwait (bad) rex.XB addb (bad) push mov fistl mov pushq mov sub fs (bad) lock movslq leaveq fwait add (bad) xor xchg and decl rex.RXB (bad) shlb mov cld mov stos (bad) outsb popfq (bad) adc xor enterq rcll push pop sti fdivp mov lock cmp fstp xlat jb pop jbe repz (bad) (bad) test sbb jns pop adc (bad) sbb sub pop sub fistp xor rex.XB rex.WX pop mov sbb cmpsb lahf in mov pop cmc sub (bad) xor imul outsl xor lahf and xlat sub (bad) cmp mov fstp pop cli xchg cmp rex.XB sub rex.RX out jl fiadd add sti pop (bad) jne movsb mov leaveq rex.WXB adc fisttpl hlt (bad) ss add (bad) (bad) movsl sti jl out xor mov (bad) cmp jae push movslq mov rex.WB cmpsl fstpt or lahf xlat xchg sbb sub pushfq fistl (bad) stos js movslq fisubrl popfq jg movslq sub rex.WR in mov add (bad) std fldt sbbl adc (bad) movslq repnz rex.R fwait mov or cld imul enterq and add pop adc jrcxz rex.RXB sub push scas mov pop jnp scas mov sub in int xchg cs out jge (bad) retq imul sub out jp jmpq retq xorl cld jg mov cmp sti cmpsl leaveq loop test in (bad) sub lret fsqrt icebp pop rex.RB ds stos std jnp mov outsb pop imul test ja mov push fistpl lahf sub push sbb xchg (bad) sub rex.B pop movabs cs mov fnclex mov push and push (bad) jg stos (bad) mov ja ror imul sbb cmp negl ds (bad) mov (bad) cli fcmovnu xchg scas xlat enterq int pop (bad) fwait outsl sub (bad) je fcomi mov cmp pop jne (bad) push clc or cmp adc std rex.XB stos jle pop rex.WRX sbb mov jbe fidivl jp sub movsl rex.WRB cmp jg adc stc in (bad) sbb ja gs mov fcomps (bad) cmp rex.WRXB addr32 (bad) lods insb xchg (bad) add mov push rex.B rex.B repz adc add mov (bad) jns pushq or jg insb jae in fistpl (bad) loop (bad) mov out ss jg hlt sub add push movsb mov icebp mov or (bad) adc pop push xchg jp jnp rex.RX test cmp mov (bad) xchg rex.R repnz mov outsl (bad) (bad) movslq sub push addl lods fld mov test fwait pop add xor adc outsb (bad) lahf (bad) (bad) pop movslq test sbb sbb (bad) shlb adc sahf out add lods int3 in rol (bad) stos movsb mov rex.X icebp (bad) loope mov hlt stc xchg xchg imul fistl repnz add adc (bad) leaveq xchg cmp mov callq test jne cli fstpt iret jp cmp xchg push (bad) adc cmp (bad) int3 fbstp fmuls (bad) rex.X push sbb (bad) jle and pmullw add or jno and mov (bad) cmpsl fnstenv xor (bad) fwait pop sbb mov rex.RXB ds iret cwtl rex.XB or bnd mov cmp rex.WX sub out and callq test out mov add in (bad) rex.WRB mov mov je pop rex.W subb imul sarl pop ds ja jo test loopne fistpl rex.WRXB gs retq vxorpd (bad) fisub gs xchg xor scas out int mov jg mov and jb (bad) rex.XB mov lods xchg fisttpl mov push (bad) lret xchg jp (bad) fcmovnu fcomps add lret rex.WXB rcll xchg mov cmp pop pop add jno jl clc stos sti (bad) (bad) and rcr jae pushq imul out xchg (bad) nop roll insl fistl test cmp or lock data16 add push sbb jnp adc scas rex.W fbld movabs or std (bad) fisubrl xor ja or cld movabs (bad) addr32 stos sahf sti imul adc in (bad) iret jb fcoml lret fwait jns push sbb mov sbb rex.WRX rex.XB outsl shr sbb mov jns cmpsb stc rex.XB mov loop and rex.WR (bad) std jnp std mov add mov gs std xchg movabs sub mov shrb and rcr add pushq pop (bad) outsb (bad) test test mov repz xchg xchg cmpsb out icebp lods movabs adc fs adc sti rex.WRXB ss pop iret ffree add and xchg retq subl loope adc cmpsb fbld fwait sbb iret out fnstenv jle adc rorl and (bad) shll or pushfq push jp notl (bad) jle (bad) fcom ja insl add xlat (bad) fsubp push (bad) es rex.RXB or (bad) sbb pop in xchg rex.WX popfq ja loopne (bad) pop stos mov sub movsb out add push cs sti fadds rex.R sbb movslq sbb (bad) data16 movslq std repnz lods sahf fldt test lahf (bad) adc fsubrl rex.XB addr32 rex.WRXB fildl sub fistpl mov jle stc and (bad) cmp stos (bad) adc repz xchg fisttp in gs sbb mov (bad) jns push or and add rex.X repz mov lods movabs test mov je mov pop sarb sarl (bad) icebp (bad) movslq loop pop xorl and pop add jmpq fildl sub in leaveq cmc fs jnp jge rorl fcmovnu mov loop mov mov jrcxz pop (bad) (bad) cltd cwtl fs gs orl pop (bad) ja (bad) shr xchg or fcmovb xor mov icebp movabs push jg stc fimul cmp imul ucomiss test fistl test fidivl in (bad) pushq stos push sub xchg fstpt sub sub mov jg rex.WR fs (bad) mov cmp rex.WX loopne negb xchg imul out jmp ljmp int mov mov xor adc (bad) mov jne in out mov cmpsl sbb js mov fistpl cs and xchg (bad) mov rex.WRX int3 iret stc movslq ja jbe cld xor xchg jb mov sub and and je (bad) in out (bad) in movabs pop push mov xchg stos fisttpl (bad) int int pop (bad) rex.R (bad) scas (bad) frstpm(287 (bad) adc rex.WR cli lods fucomi fsts fwait movslq incl fs (bad) movabs sahf push insb pop jnp rex.W xchg (bad) (bad) add pop or cmp pushq rex.RXB rex.W rex.X insl leaveq shlb adc in push mov int testb shlb fwait and mov (bad) push adc pop imul rol pop popfq cltd js pop pxor add xlat (bad) xchg cwtl cmp pushq xlat pushfq sbb and (bad) pop (bad) test (bad) vrsqrtps adc out rex.WRX xchg xor movslq lods divl mov movabs (bad) jne retq ss adc sbb cmp (bad) xchg insl imul sub shlb repz outsl adcl (bad) mov lret bnd mov fcmovnb (bad) popfq loopne js lret fistl add in mov stos rex.RXB xchg sbb cs movsb xor mov (bad) hlt jmp push stos jp (bad) cmp (bad) test pop jmpq lret lea rex.WB cmp pop out rex.WRXB mov fsts (bad) popfq cmp in leaveq rex.WRXB ficoml fistl pmaxub rex.X rex.WRX jae in add rex.WX xchg cmp (bad) xor sub movabs rex.WB ja mov (bad) (bad) jae pushfq xor pop je fstl fstpt sbb add in mov (bad) imul cwtl fimull and fnstcw mov data16 test outsb adcl jg add (bad) fstpl jb imul (bad) test (bad) sbb lods (bad) xor mov pop push (bad) add outsb scas lret (bad) jmp movabs idivb (bad) rex.WB adc (bad) jb pop jno pop movabs or (bad) mov fwait stos insl rex.WR mov pop sub rex.WXB and push fdiv (bad) test sbb hlt add add int3 lock pop rex.WB in mov test stc push pushfq imul lahf cmpsb popfq int retq and mov push test fsub fwait outsl xlat fstpt xchg and mov int xor cli adc push insb fdiv sbb imul sbb lock fcmovne popfq test rex.WX sub andl and jrcxz,pt cmpsb pop in (bad) (bad) add xchg loop (bad) out mov lahf mov iret sub pop (bad) pushq pop sarb fsts fstpt or mov (bad) cmp leaveq cmp push (bad) std pushfq rex.WRXB in in jge nop (bad) (bad) and scas fldt fdivs (bad) rex.WRB xor or cmp fstpt fistl sbb rex.WRXB rex.XB jge pop stos (bad) xlat movabs test sub loopne,pt leaveq mov fisttpl je ror xor mov (bad) mov subl sbb jle rex.WRX push addl fidiv xorps lods movabs jno mov test movslq xorb add insl push mov xor pop and mov adc or (bad) (bad) sub notb xchg stos out and sarb fstpl (bad) scas addr32 or movabs sarl ja rex.WX rex.WB fisubrl (bad) jb sbb movabs mov icebp (bad) movslq or rex.XB xor jns cmp (bad) mov fstpt jb data16 scas mov data16 fldt lret int pop fisttpl xor jb gs or lret cld stos lret mov mov fldt sub (bad) cmpsl pop cmp fnsave ja sub fistl mov movabs rolb sub rex.WRB or (bad) fldt notl rex.WRXB rex.WRB sub jnp pop in lahf (bad) mov pop (bad) movabs or in pop cmpsl ja and jg adc callq rex.RXB stos mov rcr sub jbe,pn sarl or sbb movabs rclb (bad) rex.WRB jp (bad) mov stos fcmovnu adc mov sub out sbbl fcomp (bad) shlb dec adc push stc cmp clc loopne (bad) (bad) fistpl add cmp add xchg (bad) xor or mov pop fstp sub rex.WRB in rex.RXB fisubr (bad) (bad) stos hlt scas rex.RX stos (bad) cmp push stc add mov (bad) iret lret mov jl adc xor xchg push fisttpl movsl fcomi sbb (bad) pop and xchg imul idiv out fisttp (bad) (bad) data16 stc fisub jnp outsb rex.WR adc fisubr (bad) imul rex.WXB adc popfq push cs out mov imul movabs xchg mov fsts (bad) sbb outsb cmc movslq mov out mov out (bad) sahf notq jmp (bad) jg imul (bad) test (bad) sbb xchg mov (bad) (bad) jp cmp sub in (bad) movabs outsl std or mov mov cmp data16 (bad) or push repnz ficom cmp rex.RX and addb hlt jmp test xchg mov pop leaveq fcomi mov int (bad) rcr cmp adc rex.WRB clc fldenv (bad) fildl in xchg lret sbb sbb mov imul jmp fcomi rex.WX rex.WRB fiaddl lock mov rex.RXB retq inc pop mov movslq lret (bad) sbb xor and cmp negl fcmovne push (bad) push fs (bad) pop ja jae scas loop (bad) repz ror out xlat mov mov jnp imulb cmp sub or rex.WRXB fwait (bad) rex.WRB and xor (bad) hlt fildl lret movabs jnp (bad) addr32 movabs xchg mov cmp jg (bad) lods mov (bad) adc pop icebp imul (bad) fsubl xor retq sub mov xchg imul cmc test cltd rex.RXB (bad) je ljmp or rex.WRB fistpl cmc rex.WXB pop (bad) incb fwait mov lods or jl (bad) lret sbb addr32 sub cs hlt je (bad) (bad) callq jmpq jmp push pop incl fstpt out add ja lret f2xm1 jne rex.WR rex sahf pushq and fwait lret sub mov fldt pop xchg adc (bad) es rex.WXB fldt (bad) cmp (bad) mov shrd outsb and pushq rex.X cs add in sbb in mov lretq out (bad) pop and sub lahf fneni(8087 mov orl rex.R rex.RXB out push imul mov fcomi (bad) and clc (bad) leaveq xchg stc add (bad) adc rex.XB add adc in int3 mov pop ss fisttpll or push xor ss insb loope fldt rex.RX pushq addl sarb cmp pand sbb (bad) mov imul or or iret jbe mov cmp sub or cmc es xor (bad) mov shrb fs (bad) (bad) jmpq fmuls stc jnp not jne jo cmp add mov jno fidivrl pop imul rcll adc testb (bad) rex.XB cmp cmp vmulps fneni(8087 lods icebp cmp xchg scas and jnp cltd xor or fisttpl stos mulb xchg xor mov fisttpl pop nop (bad) mov mov mov jg imul or cmpsl xchg (bad) mov lret mov movabs movabs and (bad) xor movsl (bad) cmpsl xlat movabs pop (bad) in adc rex.WRB (bad) or (bad) or (bad) icebp jbe sub and ja rex.WRB sub pop (bad) fildl repz (bad) pushq lret cwtl xchg push (bad) rex.X xchg rex.WX fwait outsb push cld mov rex movabs pop mov rex.RX testl mov scas (bad) std leaveq mov mov (bad) cmp pushfq iret rex.R sbb jnp rcrl push cmc lock rex.WR imul pop sbb iret movabs rex.X pop ljmp movsl mov in push stos fistp fwait (bad) mov add loope adc popfq out mov scas (bad) push pop imul scas mov fistpl (bad) or add xchg and fildll jnp jp fldt push enterq (bad) fildl rex.WB rex.RX or (bad) jmpq gs push scas xchg xor (bad) stos rcr jnp xlat sub pop (bad) pop hlt add rex movslq leaveq mov (bad) mov jne (bad) xchg icebp mov adc fdivrl xchg loop nop (bad) rex.WB mov or mov cmp push xlat (bad) mov cmpsq mov test mov loope cmp int3 cltd loope or std rcrb add pop lret orl decb (bad) cmp jmp cmp xchg mull push fildl movabs pop cmp or je fcmovnu int3 (bad) mov int3 push loopne (bad) mov fnstsw lods mov cld jrcxz mov (bad) sti mov (bad) (bad) gs add mov jne out (bad) rex.WXB rex.WRXB rex.W pop adc rex.WXB mov fisubl xchg out sbb mov (bad) sarq sub jns and outsl add push adc ss xchg rex.WRX rex.WR pop pushq mov ficomp pop xchg and pop fs sub mov loopne cmp push sbb (bad) pop (bad) (bad) xor xchg loope jo push rex.WRB rex.WRX mov pop xor iret (bad) mov xchg pop jg (bad) and (bad) imul test (bad) jrcxz rex.W (bad) (bad) xor mov add mov pop mov jrcxz cmpsb std movslq (bad) data16 (bad) xchg (bad) cmp mulb lret jae adc cmpsl or out mov sbb jb rex.R xlat push movslq decb xchg fs push cs mov pop je (bad) outsb fcmovb and sub rex.B jnp adc in and jge jb int3 pop xor fwait lret loopne sbbl js xorl (bad) mov sbb cmp fisttpl (bad) xor mov leaveq fildl sarl (bad) scas movabs fldt mov sbb fcomi mov mov outsb mov (bad) rex.RB movabs fldcw imul pop repz jnp dec jns mov std (bad) lods xchg nop pop (bad) imul leaveq (bad) callq rcr fcompp mov out fistl sub or jb jle rex.WXB jmp rex.RXB rex.R outsl pop retq (bad) (bad) stos imul loope xchg cmp cmp mov rex.WB nop (bad) cmp rex.RX movabs jp mov cwtl fisttp jg add (bad) pushq or rcl subb scas sbb or cld outsb test out lods int3 mov jmpq fwait mov sbb imul (bad) (bad) mov cmp stos (bad) push movsl fistl stos and (bad) (bad) mov (bad) scas scas test jmpq fild lods jne sub jno cmp or pop fwait mov mov push push sbb stc pop movabs sub sti (bad) push rex.RXB (bad) lock sbb push or jg fsts mov pop loop sbb imul andl lahf or cmp movsb adc mov enterq outsb test add (bad) outsl xor xlat rex.WR hlt (bad) sbb xchg shrb (bad) (bad) jnp fiaddl (bad) (bad) fsubrp (bad) adc test rex.W xchg stos and pop (bad) and cmp pop (bad) rclb lea pop xchg rcrl adc pop mov fsts addr32 fstpt add push or in fcmovnbe fwait out roll lea roll xchg movabs gs mov (bad) cmp std in iret xchg pop test adc lahf movslq retq (bad) sbb lret jl xchg push cli xor out vandps push rol rex.RB or mov and cmpsl jmp neg (bad) mov rex.X sbb clc jle in (bad) (bad) sbb (bad) xor icebp out (bad) adc fldt rex.WX or mov or sahf int jno jae (bad) (bad) mov (bad) cmp ja adc fildl retq leaveq lret cmc fstpt mov clc xchg popfq (bad) mov push fmul sub rex.RB ja push (bad) xor pop icebp gs stos rex.X jo (bad) subl mov pushfq movabs mov imul rex.X hlt scas (bad) sbbl mov mov fistl sub repnz sub add fisttpl cmpsl pop decb jo (bad) repz (bad) clc add or scas jge scas lods mov and pushfq push jl mov rex.WRB test fistpl in stos fld rex.XB sarb cmp pop fildl mov movabs pop fdivrs sbb mov movabs rol (bad) jo pop pop adc rex.B mov xor fucomi xchg mov callq out mov lods movabs mov es lods sbb (bad) outsl fcmovnbe leaveq (bad) sbb pop mov pop scas push cmp in cld rex.XB sub fsubp sti jge mov fs fistpl cmp es out lods enterq int3 (bad) cmpl jb (bad) and mov sub movabs mov jp fnop sub jne jo fidivl sti iret test jnp out fistpl hlt loopne jo jrcxz (bad) in mov or xchg mov fcoms sarl movsl cmpsl fisttpl cmpsl (bad) add mov fcmovnu pop (bad) pop lret (bad) pushq fstpt adc adc add rex.WXB and jae fildl mov gs xor mov lahf in jp fnstsw xor mov adc sbb mov xchg mov iret cmp stc scas test add adc in ds pop mov or adc mov jo pop mov repz cs (bad) cmpsl cld retq rex.B fisubl fsts repnz shrl xorl xchg push (bad) adcb mov mov test sub jge,pt shl ss lock mov out rex gs leaveq lahf (bad) bnd fwait movabs adc popfq (bad) mov rclb in fiaddl (bad) sub pop add mov gs xchg jrcxz mov cmp fs sti imul and lock (bad) or leaveq lahf jns movabs xor rex.WRXB imul out xchg movslq (bad) xlat or int3 pushfq callq pop xchg fbld mov cltd sub (bad) fldt es rex.WRB cmp mov sahf test or xlat movabs mov cwtl fisttpl (bad) fildl mulb jo (bad) mov xchg leaveq (bad) pop mov mov fstps pushq pop pop sbb (bad) xchg rex.WR cmp movslq movsl popfq (bad) fistpl (bad) enterq pop shll repz shll fisttpl fisttpl push ja in or leaveq mov cld nop (bad) cmpl and (bad) scas pop jno sbb jb stc push pop xchg (bad) cld retq rex.XB and rex.WR pop xchg push sub and or mov cmp mov stos jbe iret out mov push stc movabs fistpl gs or (bad) pop xchg fwait xor hlt js cmp (bad) (bad) xchg lods xor loop pop and shll sub pop or rex.WX movabs rex.RB mov xchg mov fmuls mov loope fadd push (bad) cmp idivb cmp rex.W lret out sub fistl mov mov je jns rex.RB mov movabs rol xlat (bad) pop add pushq (bad) int mov je movabs sub in addr32 cs xlat addr32 fwait hlt ficomp cmpsb movabs pop fldt mov rex sahf rcr mov fsubrs lock (bad) mov rex.WRX fstpt pop (bad) or rcr push ss out jnp push (bad) cmp mov addr32 (bad) pop (bad) callq test stos (bad) pushfq sahf add repnz (bad) mov sbb out mov jge and pop fiaddl jge add mov icebp and xor xchg jnp add (bad) jo mov jl adc cli push nop popfq cmpsl cmp loop xor push mulb sub pop (bad) jbe push lods cmp movsl push scas (bad) jle lret rex.WR pop add pop sbb cmpb xorb or pop vmovntpd jle xchg imul jl jne sbb (bad) and push (bad) insb rex.WRB xchg jne xchg rex.W repz mov and (bad) add mov mov pop pop xor (bad) or and jle xor mov lret push ss jmp test stos add negb ss pop loop test add mov xchg lods cmpsl pop xorl fucomp sbb pop (bad) movntps retq pop (bad) movslq or (bad) js (bad) test (bad) (bad) test insl (bad) jb movsb sub jae adc fisttpl rex.B loop int3 fimul scas (bad) pop repz or loopne (bad) rex.WRX fldt cmp movabs rex.WB (bad) ss jg push mov (bad) jb mov xlat jp insb rex.WRXB (bad) (bad) repz mov jb movsl gs mov je cli loop fwait xchg lahf rex.WR leaveq or int3 rex.WRXB and or xchg ja mov mov pop sub fstpt fist push pop and insb add pop cmp pop sbb iret cltd (bad) repz and jnp insb jle (bad) gs idivl rex.RX jge (bad) or xor ja mov retq rex.XB rcr cs mov jp stc jnp cmpsl movsb sbb cmp jno movabs (bad) cmp xchg xor rex.RX cwtl out shrl fistl rol adc mov cmp pop (bad) pop xor jmpq jne nop pop int xchg mov fnstsw fildl lret rex.WB rex.B rex.W cmp (bad) sbb jbe movsl sti and xor (bad) ja rex.R ficoml jne xor movslq scas push (bad) sahf jnp cmp pop shr (bad) stos jge jno pushq cld cs and push cmp mov test clc cmp (bad) mov (bad) xchg pushq (bad) rex.RX push (bad) sbb out mov outsl mov fistpl jne mov fisttpl rex.W fsubrs fucomi loope jle sub cmp mov gs neg push jnp (bad) jle stos (bad) stos mov lods fcmovne movsb add pop and push mov (bad) enterq mov pushq pop gs repnz mov int3 nop (bad) rex.WX or cmp imul sub cmp cs pushfq popfq (bad) rcrl pop addr32 cmpsb (bad) rex.WB movabs fcoml fisubrl cmp cmp fwait pop cmc (bad) xchg lock cmp adc hlt (bad) (bad) fs cmp add (bad) icebp (bad) pop (bad) mov jnp addr32 mov (bad) fstpt cmp pushq xchg sbb in jb mov fstp xchg sbb adc xor rex.WRB pop pop and mov sub (bad) mov xchg xchg jrcxz xor fs fstpt sbb leaveq stos loopne (bad) fldl mov in rex.WX fistl adc sbb jmp or and and lret jle add lret (bad) mov mov or or pop (bad) rcll and rex.WB (bad) cmpsl movabs adc sti lods lahf leaveq sbb xchg add (bad) fildl pushfq lret stos pop mov imul (bad) imul jg movsb (bad) test (bad) (bad) ja adc callq jp (bad) and (bad) sub ljmp sbb lahf movabs lea fldt rex.WRX add retq stos pushq mov adc (bad) repz movabs cld adc fcmovnbe (bad) mov insl imul popfq mov clc data16 movabs mov mov mov (bad) mov fstpt callq cmp movsb sarb sub in pop int3 shll jnp outsb movabs (bad) clc fcom xchg lret xor jno pop pop insb notb or xchg pop movabs lret add shlb pop cmpsl test pop pop jno jge gs xor fstpt add cli repnz jrcxz mov (bad) (bad) xchg jns push adc or imul stos jle gs fcmovnb stos cld movabs pushq vmovsd fwait test lock fisttpl callq add push pop pop mov in sbb jle fstpt mov add pop lea jns jnp pop add lods stos push movslq movzwq mov cltd leaveq insb mov (bad) (bad) es (bad) push push sbb es mov jp js sub in icebp jmpq iret jno cmp (bad) push and jg push mov push jrcxz and push nop lea mov (bad) sti (bad) loopne jno pushfq add sbb jp sub stos sbb xor movslq and movabs pop adc add pushq (bad) and sbb cmpsb or jo outsl sarb xchg add sub pop data16 in sub rex.WRXB mov sub or xchg lea mov cs rex.B (bad) mov (bad) vorpd add callq jae movsb data16 pop loope jns sbb (bad) cmpsb leaveq mov movabs movslq rex.RX or (bad) mov sub ss fcomps fisubl xchg or push rex.WRX (bad) icebp xor movabs fistl cld sub (bad) (bad) test icebp out (bad) cmpsl cli popfq jae lret clc movsb fidivr repnz movabs xchg (bad) mov outsb out sub add and xor xchg mov (bad) pop (bad) fwait rorl ss (bad) (bad) fucomip (bad) loope shrl or outsb pop push (bad) shlb add pushq mov jbe mov jp sub mov xlat lea push pushfq and insl retq movsl adc (bad) cld (bad) sub gs (bad) lret gs mov add lret (bad) int sbbb add jge jno rex.W (bad) pop sbb mov pop add jnp loope add mov movsb cmp fwait xchg rex.WB jmpq fisttpl cmp mov pop pop imul (bad) push rcrb js (bad) jl loop jg out cmp sub xchg fwait (bad) in imul rex.WRX pop rex.WRB rex.RXB sbb jae ljmp (bad) rex.WR ss fwait sbb fildl jrcxz jb in pushfq popfq (bad) out sbb cmp xchg or shrb fwait mov movl mov fistpl iret (bad) lret (bad) (bad) out iret and xchg sbb leaveq int loope cmp js adc adc pop (bad) (bad) ficompl pop (bad) sub sar fwait out cs rex.WRXB lods jno out xorb loope add pop sbb mov mov sbbb (bad) cmp sbb push pop cltd int3 test lret (bad) hlt cli fstpt xchg stos pushq fcmovnb insl (bad) sbb mov (bad) mov nop repnz (bad) (bad) rex.X iret loope pop stos add xor lods mov retq faddl iret (bad) rex.WX (bad) lahf fldt (bad) jns fmuls movabs pop stos vmovsd fcmovnbe cmpsb mov out rex.RX ss fistpl scas xchg (bad) stos loop xchg xchg (bad) adc imul rex.RB in (bad) rex.WXB loopne rol pop callq cli lock rex.WR rex.RXB cmpl imul scas fildl mov stos lods ror retq (bad) jmp rex.W xchg pushfq addr32 add mov xlat popfq (bad) mov adc fcmovnb jb callq fistl push mov cmc sbb (bad) retq fwait sar lret scas pop push mov ja (bad) jnp mov add (bad) (bad) testb movsb pop fcomi test xchg rex.RX orb jle cmp psrlq fwait mov or mov sub push pop jno or jnp (bad) cmp mov test jle mov rex.RX fild mov rex.WR cmp (bad) (bad) cld out out and test (bad) stos xchg scas cmp rex.WRXB (bad) minps fcmovnbe jo adc movslq (bad) xchg pop in cmp cmovne and push mov mov cmp fwait mov movabs push (bad) test rex.WRXB mov cmp rex.X pushq imul in cltd pushq (bad) jno sub (bad) setbe jmpq rex.R adc jnp xchg (bad) mov add cmp or (bad) push out rex.RX gs mov xchg jle stos fidivr out mov rex.WRXB rex.RX rex.WR rex.WRB rex.WR out sti xor fdivs (bad) fnstenv clc pop sbb mov hlt movslq fldcw add xchg push (bad) out loop fwait push mov test cmpsl mov jnp es in pop sarl loopne (bad) pop fstpl (bad) test movabs jmp jno ficomp rex.WX mov rex.WX movsl sub (bad) mov fistl xchg (bad) cmp mov sbb push push jbe rex.B mov pop sbb retq sbbl add pop (bad) (bad) add cmc movabs stc xchg pop mov xor (bad) (bad) sub sub rex.XB fstpt and dec ds add (bad) std xchg mov movabs test fs ds fwait (bad) mov movsb mov rex.WRXB mov rex.R in sbb cmp xlat fimull lret cmp pop mov pushq lods jae xor rex.WX ds xchg adc test and mov sbb push pop add movabs (bad) je fsubrl lods retq callq mov cmp fsubrl fcmovnbe jrcxz sti mov test fsubrl jge (bad) (bad) in rex.B insb jbe (bad) (bad) rolb data16 and and fucomip xor (bad) notl rex.RB (bad) xchg push imul callq test lret add sub pop pop xchg (bad) sti nop pop xchg sti push xchg (bad) test pushfq push rex.WR rex.WXB xchg sti cli add xor cmp scas lea pop and (bad) outsl lods mov sti fdiv xchg adc (bad) rex.X push (bad) sub fwait sti lret and and pop cmp fs cmp mov in js xchg hlt push in fldl adc mov (bad) (bad) xchg (bad) push sub fidiv std mov sahf xchg xor (bad) (bad) jmp and test (bad) pushq es insb jo cmp pop sub jb rex.WRB or jl popfq xor outsb out mov (bad) sarl push popfq stos (bad) (bad) cmpsl pushfq mov nop mov (bad) (bad) ss stos xor fs rex.XB pop fcmovnbe sub rex.WXB fsubrs fistpl (bad) or add callq mov iret fistpl cmpsl (bad) mov xchg mov push mov fldt pop pushq rcr xor popfq addr32 imul test rep mov imul pop (bad) sub mov mov jnp pushq push jno mov (bad) (bad) (bad) xchg (bad) or add movslq mov iret (bad) mov (bad) xchg pop pushq jns stos (bad) xchg fwait xor and (bad) mov xchg (bad) movabs mov or jns test pop sub movsb cmp add mov fimul loop rex fwait sub and fildl stos xchg cltd cmp repnz mov fcmovnbe imul fstpt mov ja (bad) movabs rex.WB rex.WRB jg sahf fildl rex.WRXB push (bad) callq fs jno nop std out fldt sub and xor mov (bad) adc fistpl sub jbe push fwait jle (bad) rex.WRB fcmovnb jle shrl push pop rex.X jp enterq fstpt jno xor xchg movslq mov fldt (bad) pushq xchg rex.WRB rex.X push punpcklbw cmp jnp mov (bad) sahf clc and rex.RX mov (bad) (bad) mov out pop lea cmc (bad) (bad) xchg cmp mov lods cmp fisttpl hlt fsubrs sub addps adc (bad) out sbb insb rex.XB out fimull and cmp cmp mov push cmp pushq fcoml out (bad) gs mov jno sub xor sub push stos (bad) rex.WB mov out pop sbb jrcxz cmp mov (bad) mov (bad) (bad) push lea mov rorb fst jne repnz mov (bad) pop mov xor insl in scas sahf pop add movsl imulb fisttpl mov adc xor mov rex.R xor out (bad) pop or pop lea cwtl jle out lock fs (bad) and jno rclb pop lret cmp sbb setge in lea add push cltd test idivl pop rex.W (bad) xor xlat pop mov push rex.WR fnop adc (bad) int3 jns rex.W outsl lock (bad) sbb rex.WRX (bad) subl pop retq xor mov cmp (bad) push sbb stos (bad) cmpsl mov sbb or or add sbb and mov cs es jrcxz adc pop mov in in (bad) out sub mov (bad) hlt jmpq rex shrl push iret ja rex.WX fs in (bad) hlt rex.W addl in push outsl cmp lods sbb sbb leaveq push sub mov loope std (bad) mov frstor gs fidivr out mov iret or fcoms xor fstl nop or mov std movsl (bad) sub add (bad) (bad) mov mov loopne rcll scas js fwait cwtl sub mov and loope mov ja fmuls (bad) push pop rcrl idivl xlat (bad) loope (bad) rex.WRXB movslq fldln2 fstp movabs jle fyl2xp1 push pushq cld or ror jl adc sbb rex.WX rex.B push test sahf fldcw (bad) push rex.RB jnp add add stc cmc jle rex.R fcompl (bad) push pop cmp fimul test jno sbb jrcxz xlat idivb iret sbb (bad) sbb xor rorl jns hlt cmp mov mov xchg adc addr32 je jae shrb out sbb rex.WR fcoms out sub (bad) cmp test (bad) xchg xchg pop cmpsl mov adc jrcxz jae push outsl (bad) mov mov and add pushq fildll outsl sbb nop cmp lret (bad) sbb adc (bad) (bad) loopne push jno mov (bad) xor xchg jle in cmp sub fistpl mov stos test jo pop rex xchg cmp fistpl rex.WX cltd push cmpsb (bad) insb mov add popfq pop (bad) (bad) push lahf adc sbb sbb mov movsb fwait (bad) outsl xchg jp mov rorl jae mov loope and scas jnp (bad) pop (bad) (bad) pop rex.WRXB cmp jg mov in (bad) mov movsl jp cmp insb fldt shl and pop rex.WR sbb fdivs stc in xor fistl outsl iret repnz movslq push fldt pop jns (bad) pop jrcxz sbb rex.XB test iret rex.WX pushfq sbb fistpl cmp (bad) mov mov mov adc pop mov jae movabs insl fndisi(8087 mov pushfq clc adc rex.WRB icebp clc (bad) or xchg stos (bad) (bad) movabs out loope in pop cld mov adc mov (bad) push xor sbb jg fildl xchg sub rex.X adc je cmp int cltd imul sub repnz jo jne or pop lods add (bad) sbb js fwait (bad) push jb rex.XB lret jrcxz in cmpsl and rex.WRB shlb sub lods (bad) (bad) shr and jnp pop xchg iret fwait (bad) (bad) gs pop stc test fs xlat sbb xor and js addr32 (bad) rex.X (bad) loopne lret rex.WXB fistpl (bad) callq loope int3 and jae mov mov rex.WB (bad) movabs adcb mov pop (bad) pop (bad) jb rex.RB rex.WRX sahf mov (bad) rex.X rcl int3 push loope jne addr32 jns movabs (bad) pop mov jne je xchg rex.WB (bad) fs rex.R jl ja cmp xlat mov jge cmp mov adc test jno pop fcmovnb loop mov fisttpl xchg add ja lods xor rex.RXB retq pop loope je js stos adc rcr add sbb clc mov gs jge test or jb je sub add clc lcall (bad) shrl cmp flds xchg (bad) in push test pop scas test mov (bad) jmp mov icebp mov (bad) fidivrl rex.WR rex test mov pop rex.RX and stos mov in fldl pop xor rex.RB enterq fmull (bad) cmpl in fistp (bad) xlat fisttpl test and (bad) pop rorl lods xor stc rex.XB mov movabs rex.RB cltd ss mov in (bad) scas loope hlt sarl jge test push (bad) push cmp xor cmp cmp xchg add mov data16 xor icebp mov repz xchg (bad) and xor out add xchg (bad) or rex gs popfq sbbl rcrl out (bad) mov or push insl jnp mov fisttpl clc sbb (bad) adc (bad) (bad) or jge rex.R addr32 jae pop outsb stos in hlt cld fildl movabs je xlat (bad) fildl (bad) fistl rex.WR rcr or movabs rex.B pop (bad) (bad) mov sbb pop fwait rcr scas push movl rex.X xchg pop sbb pop and inc out pop pop push imul cltq xor movslq sub subl nop fcmovnu (bad) pop and int ds (bad) (bad) (bad) imul rex.WB xchg pop iret (bad) stos (bad) cmp shlb cmp fcmovne rex.WRB mov lret fildl movsb jrcxz xchg jne test sub fdivrs imul push stos (bad) enterq mov jo jns mov fcmovnb sahf rex.WR jne loop imul jl retq rex.X (bad) adc xchg (bad) (bad) (bad) sub pop add lret rex.RB mov (bad) rex.WRB iret jb fcomps stos ja sbb add rcrb pop add xor jno mov outsl adc fldt cli test mov mov movsl sbb xor (bad) add xchg mov rex.B (bad) xor sti sti jrcxz xchg fcompl push adc lret xchg adc (bad) pop mov int sbb xchg mov xor jl pop cmpsl stos movslq int3 pop rex.WX fcomps lock movabs jo rex.WB and rex.WR scas je fild stos push pop fidivr adc (bad) mov js mov in (bad) (bad) and in sbb (bad) rex.WB stos iret loopne addr32 cmp cmp push addr32 loopne outsl add movabs jmp sub (bad) jl repnz ds sub enterq (bad) xor rex.WXB xchg in push xlat incl (bad) lret rex.W sarl (bad) pop (bad) sub push xchg rex.WRXB pop sub mov pop test shll jp rcrb insl xor movslq mov nop add fcmove sbb xchg fistp sub fwait roll data16 (bad) out pop mov vcvttss2si pop add loopne pop movslq and std (bad) pushq (bad) rex.WB repnz ss orl sub imul (bad) (bad) sub or cmp test (bad) push xchg es mov fwait insl xchg cmp add (bad) cmp hlt fnstenv mov (bad) (bad) rex.RXB and (bad) adc xlat rcll rex.WXB jne leaveq fldenv test rex.WB cmc cmp stos pop or test rex.XB pushq mov movabs hlt jl cmpsb (bad) fcoml loope xchg sarl iret (bad) add mov xchg repnz fstps test (bad) sub sbb xlat lahf pop fisttp je add rex.WRB int3 mov retq mov mov jrcxz loop sbb mov mov xor ja repz mov stos rex.WRX fisubr rorb fsubrl divl mov adc scas rex.WXB rex.RXB (bad) test ss cmp xchg cwtl rex push xor iret fnstenv fnstenv or rex.WRX rex.WRXB (bad) push roll xor (bad) (bad) (bad) mov jp xor mov jle xchg movabs fcomp rex.XB mov rex.WRB shrb rex.X mov sub (bad) lret out xlat and test xchg sbb sub pop lret (bad) (bad) rex.RXB rex.WRB rex.WRX xlat add sub std cmpsb or mov scas in (bad) out es not cs test ja rex.W (bad) or (bad) imul pop cmp cmp or mov rex.W xor mov jg or fsub out sbb and jg ds (bad) sub in rex.XB cmp insl std mov movabs adc scas jnp xchg imul fwait jg add mov (bad) (bad) mov lea movabs popfq sub fildl adc sbb out push fistl je mov push sti sbb and xchg lret lea and xchg (bad) fiaddl movabs mov mov sbb fwait iret and jbe retq cvtdq2ps repz pushq rex.R jns cltd fistl stos sbb fldenv rcrw (bad) push add xchg loopne mov outsl fildll rex.RB scas addr32 xchg pop (bad) xchg (bad) or jb mov clc pop sub pushq push rcrb sbb gs (bad) movslq fisubrl jle repnz mov cmp jmp addr32 in movabs mov ja test cmpsl mov xchg in cmp outsb jg (bad) push (bad) iret (bad) (bad) (bad) fcmovne (bad) sti fcoms je jnp pop xchg (bad) movsl mov fs and and adc jb (bad) or retq xor add adc or repnz rex.R push nop (bad) pop or clc sub fidivrl outsl pushq leaveq fildl js enterq adc (bad) adc xor rex.WRB pop repz cmp cld in cmp add (bad) cwtl mov jno js rex.B xchg lods sti movabs pop (bad) test lret rex.WRB retq push pop rex (bad) (bad) xchg pushq sub add rex (bad) add jg pop cli loop (bad) subl fcomi adc sbb (bad) mov (bad) scas rex.RXB mov movslq mov and test push rex.WB (bad) idivl (bad) fisub rex.WRB pop fwait in jnp mov xchg cld fstpt jg sarl add cs add and xchg fsub sbb fisubrl mov fwait xchg mov lahf sub repz mov jg jmpq adc and cmpsl in addr32 add rorb pushq out adc xchg imul (bad) movabs lods scas jnp fstpl rex.WRX (bad) (bad) or sub cmp (bad) fisubl xchg jp fwait icebp pop lret xor mov test rex.X insl (bad) popfq jnp jae fucomi sub adc callq leaveq and rex.W cmp add lret mov rex.WX mov fs (bad) mov int (bad) xchg xor jg rex (bad) sbb xlat popfq fidivl (bad) jno xor repz (bad) sbb iret push xchg pop test jae rex xor fwait cmc mov (bad) in jbe mov imul cld pop add nop push (bad) cmp mov ror hlt retq repz movslq mov jmpq fistpl pop xchg ror loope es pop retq push jne and fisttpl mov xchg fisttpl decb rex.RX and sbb repz cli pushfq fistl jae push rex.RXB fistl jbe fisubr ror fildl insb lahf mov movabs and fistpl test sub popfq or jns rex.W push lods out (bad) jb fcmovnu movsb out (bad) sub ja jle push (bad) mov jae (bad) (bad) mov fidiv fmull xor enterq lret imul push cmpsb (bad) mov fadd (bad) repnz movabs jle lods rex.X out pop or cltd cmpsl mov (bad) fwait sub sahf (bad) mov mov (bad) mov mov rex.R or xor (bad) (bad) repnz (bad) (bad) pushq (bad) rcrl (bad) (bad) mov jnp cmp jle scas in sub rcr out (bad) (bad) push jns pop cmc sub (bad) (bad) lahf imul (bad) cwtl (bad) push rex.RXB xchg (bad) mov cmp clc lahf fstpt movslq nop xor (bad) (bad) fmuls jb (bad) (bad) lea xchg rex.XB leaveq je fcmovnbe pop (bad) push add mov sub mov mov mov xor jmpq cmc (bad) mov lret mov or (bad) jge test cmp mov push or mov xchg pop rex.XB and sub adc pushfq (bad) loopne adc rex cmp add movl pop loope out imul callq insl (bad) in fwait cmp pop xchg fildl (bad) sub cmp (bad) mov test sbb shlb pushfq mov test xor rex.WB (bad) pop mov jnp fildl jno callq cmpsl mov lret lods and cltd sub jnp or (bad) stos fwait stc fiadd push mov (bad) pop subl (bad) test rex.XB rcll fcomi mov sbb leaveq popfq pushfq test add adc pop (bad) mov ja xor nop fstpt out icebp cmc sub or or cmp mov fidivrl mov fs mov (bad) sbb rex.RX sbb mov stos jno jae push pushfq add test cld and movabs shrb test jns add rex.RB (bad) cmp jnp repz (bad) retq syscall sbb mov cwtl add or rex.R add rcrl mov mov mov rex.RX (bad) fninit (bad) add stos fcmovnbe cmc adc rorl (bad) shr jno fidivrl and adc movabs mov pushq test clc popq (bad) mov add out pop lods (bad) fcomp adc mov cmp mov imul push nop add movsb xchg gs (bad) imul lods adc rex.RB jmpq (bad) pushq jl,pt clc cmp fldt repnz xor xchg out mov mov cld test repnz xchg pop (bad) movsl sbb pop (bad) jo lock add xchg push leaveq stc lods cmp and fwait adc or (bad) rex.W fucomi (bad) mov (bad) sarb mov (bad) push rex.RXB mov add ktestb (bad) sbb xor or rex.X nop iret and callq retq mov sub fadd mov xchg fwait (bad) nop sbb imul (bad) xor mov sahf callq and xchg adc lock rex.WR xchg sahf rex.WRB (bad) cli (bad) callq hlt mov jmpq rex.R jno fstpt (bad) fistpl jmp fisub rex.WX retq pop scas out cmp pop (bad) rex.W push xchg sub ds cli orl rex.W xchg in iret mov loope in cmp rex.WRXB out lock emms adc lret jmp xor (bad) fisttpll adc addr32 addl fist push mov pop and hlt pushq sub gs fadds (bad) mov retq or sub fbstp cmp rcrl add cltd cltd xchg jbe fdivs (bad) cmp in sub leaveq (bad) (bad) adc (bad) ja pop sbb lock (bad) in add rex.WX rex.W cmc cs (bad) mov (bad) jnp rex.B (bad) int3 movsl je jnp out loope and fildl ss (bad) and out je insb push fwait (bad) or push rex.R (bad) (bad) and mov adc rolb ds (bad) sbb in pop fucomi cmp iret callq fbstp (bad) add fcmovnbe outsb adc fwait mov roll adc fsubs fistl jno mov xchg cmp lock jnp adc mov retq sbb lret xor xchg cmp pop sub jnp test js (bad) xor cmpsl fdiv add movabs xchg xchg add (bad) push rex.WRXB fs rex.XB pushfq fcmovnb xchg (bad) (bad) (bad) out mov cmp jne test mov pushfq fildl add cmp push rex.RX or rex.WRXB jnp test sbb cmp fildl je mov jl loop test and sbb mov (bad) or movabs (bad) (bad) stos iret (bad) mov sbbb pop xchg hlt rex mov push rex.RX rex.B rex.WX pop or insl callq (bad) scas and (bad) stos movabs jnp mov and (bad) stos (bad) rex.WXB fcmovne lock (bad) (bad) (bad) adc push stos movabs (bad) mov ja imul cmp loopne pushq sub pop cmpsl push sub jae loope xor pop rolb jbe (bad) ja in fcmovnbe fwait gs xchg in outsl fstpt cltd mov xchg std lea mov fldt xchg xor rex.RB fneni(8087 or ficom mov and (bad) add sub jne mov ds (bad) sub push nop push jmp test retq mov jmpq iret xlat mov insb mov add (bad) xor adc jnp rex.W jle jnp sub xchg sub xchg imul mov pop pop rex.B rex.RXB gs adc callq outsb sahf cmc (bad) push cmp int jnp hlt sub imul jmpq fildl (bad) (bad) sbb (bad) xchg lods out stos movabs fcomi and mov lods cmc cmp xchg fistpl movslq adc imul pop and cmpsb test push push jae mov (bad) push sub repz mov retq mov mov add push xor pop (bad) push cmp xchg jl lret fisubrl retq add (bad) (bad) and sbb lret cld sub sbb movabs test fiaddl out lods xor ja xor scas rcr mov jne mov out pop pop pushq insb xlat (bad) fcomi cs xor movabs sbb repnz pop (bad) sub xchg fwait mov popfq jg je lods fildl jg lahf rcrb js std sub mov cmp mov pop jns fs rex.WRB rex xchg xchg pop neg (bad) enterq xorl and hlt sti nop cmp loopne vpcmpeqd add je insb mov sub pop cmc cmp jp lret (bad) jl,pn addr32 cmpsb sub add and push cmp cmp insb (bad) (bad) mov movsb mov loope movabs rex.RB xchg add nop mov rex.WRB movsb mov fldt (bad) in int3 sbb xor (bad) fldt push and test (bad) (bad) jrcxz cltd sbb (bad) rex.WB rex.XB sub imul jae add movabs jo push rex.WR (bad) out pop (bad) sub rex.W xchg pushq outsb fucomi adc push add add pop test xchg jg fsubrl xchg rex.W loop (bad) cwtl ja push rex.WXB xor adc or imul (bad) fcmovnu mov cltd push sbb fcomp (bad) prefetch cmp out out rex.X mov (bad) mov cltd xor xchg (bad) cmp mov (bad) rcr and fwait hlt (bad) pop gs xor movsb xchg sbbl pop out imul loop rex.X and rex.WRB imul pop jmp (bad) sub (bad) cltd pop mov adcb lret mov imul idiv insl pop and mov fidivl or (bad) out xor imul mov jge push cmp fimul jge cmp add pop (bad) out xchg (bad) fild rcr insl mov sti (bad) pushq pop shl retq mov push fistpl roll fisttpl mov sub adc pop (bad) sub xor (bad) adc stos and data16 cmp loopne (bad) repz xor fcmovnb fnstcw xchg lea pop sbb jmp (bad) testl mov pop pop xor fistl (bad) retq fldcw (bad) (bad) fcmovnbe (bad) push add (bad) mov fimull testb sti pop push pop lods adc fistpl mov jo and nop (bad) (bad) pop mov cmp (bad) xor mov std neg out push fiadd cld jb movslq push sti jl insl addr32 (bad) (bad) xor movsb mov callq fistpl out in loop fistp (bad) sub (bad) mov jmpq jg lret (bad) mov or rex.WR ud2 mov fwait push (bad) pop addl (bad) and stos js adc repnz or jne jge movabs mov jb lods movslq adc rex.RB (bad) (bad) fisubrl fldt insl sub in and mov fisubr fld scas in jb insb mov mov pushq shll data16 mov mov (bad) sub fsts (bad) fidivl sbb (bad) mov movsb (bad) (bad) rex.WR stos xchg (bad) xlat lret pop test add mov (bad) stos stos (bad) sarl xchg rex.WRB (bad) push in (bad) sti clc push sbb mov out pop iret sbb push jle (bad) loop callq scas rex.RB mov push int3 movsl insl add (bad) fildl (bad) add (bad) scas pop data16 pop pop (bad) sbb mov test adc mov push (bad) xorl rorl (bad) mov or lret mov cmp push outsl addr32 ss in mov (bad) (bad) sub fistp or imul rex.RX fsubl rex.RXB out outsl xlat (bad) fcmovnb in lods stos jb,pn retq repz pop (bad) (bad) add cmp mov insb outsl subl mov mov stos test (bad) (bad) (bad) sbb push sbb adc (bad) pushfq cwtl (bad) sub rex.W (bad) test js test jnp enterq mov lar mov mov rex.WRB insl (bad) cmp xchg jle push mov fcmovnbe (bad) hlt mov stos std lock jnp push rex.WX stc (bad) fimul fistpl jp (bad) cmp push movabs mov adc retq cmp cmp and mov in rex.WB stc repnz (bad) out jnp rcr mov gs (bad) add leaveq and (bad) fstpt rex.X div scas jae ds jl cmp pminsw jge push imull and jle fucomi adc insl xchg jne,pn (bad) stc add (bad) (bad) out cld fistpl or mov push pushq (bad) fistpl imul mov mov test lahf jl sbb fistp jns nop (bad) decb rex.WXB rex.RX movslq or pop add pushq adc data16 xchg lods out pop ficoml mov int3 cmp mov xchg and rex.RB sbb xchg xchg fldt add int3 jns jo rex.WB test pop movsl mov mov mov (bad) fildl or (bad) fnop mov push rex.WRX fbld sbb mov and rex.X xor mov xchg xor push pop sub push pop mov out xchg push iret out (bad) sahf rcr movabs pslld fstps fistp sbb ja jne adc (bad) (bad) leaveq mov callq xor (bad) (bad) and ficomp adc xchg in jnp adc (bad) rcll (bad) fwait (bad) (bad) and testb (bad) push adc (bad) sahf cli (bad) mov scas adcl enterq (bad) movabs in or popfq rex.RX rex.XB out (bad) rex.RX mov (bad) or adc lea je (bad) add clts push fimull and ja lret fldl2t push iret jbe rorb scas fldcw loop cmc insl mov fwait adc push pop (bad) (bad) std mov jbe cltd (bad) and fisubl loopne sub xchg pop repz movsb pop fldt adc add loope (bad) negb movslq or lea adc ss fwait jno enterq push pop retq (bad) (bad) imul insl cltd (bad) and (bad) loopne adc test stos (bad) and mov (bad) stc adc in sahf add fcoms sub popfq cmp nop sbb lods or stc retq insb sbb callq ss lret (bad) clc out or jge adc sub mov (bad) and xor push xchg stc lahf pop sbb out int3 xor rcr sub add nop pop imul push stos int3 rex.RB mov cmp test add jrcxz lock sub leaveq pop pushfq imul lods or add cmp (bad) sbb or jl jo (bad) jrcxz xor gs jp loopne (bad) stos rex.RXB int mov lret jmpq or pop faddl xchg repnz andl (bad) push loope data16 jo (bad) sbb push nop xchg es rex.XB rex.XB pop fcomps loop loope fistpll mov and mov mov mov addr32 add jmp jle pop jp cmp lret jl xchg pushq push mov cltd pop (bad) outsb retq sbb adc jne (bad) cmp rex.RXB push scas sbb mov jmpq ficomp jl not mov lret xchg xchg scas xlat fwait sbb (bad) cld rex.WXB cwtl sti cltd pop fs gs (bad) mov mov xchg (bad) pop xor or test (bad) or mov or fwait rex.XB movabs test enterq test mov ficompl rex.WRB rex.X (bad) ficompl sti sub adc ja lock sbb sahf (bad) (bad) xchg shll adc (bad) cmc rclb mov mov mov push push lret inc xor js test out and out cmp (bad) mov callq rex.B rex.WRX adc addl ss bswap rcrb jb rex.WB je jnp stc fisttpl (bad) nop jo leaveq cmp cmc mov (bad) cwtl outsl (bad) pop int3 pmullw nop (bad) imul fistl mov pushfq outsl (bad) or lret fimul (bad) fldt pop pop adc pop (bad) (bad) rex.R rex.X jbe cmpsl mov jmpq pop loopne rcrl cmc neg jge sahf sti fnstcw nop sbb insl push scas (bad) or lock cmpsl (bad) rex.WXB int (bad) adc pop (bad) sbb fistpl xchg rex.RB fucomi movsl xchg adc movslq je cmp (bad) sbb out (bad) rex.RX sub in pop lods fistl and fld jmpq cmp push (bad) adc fistpl jno and xor pushfq (bad) (bad) jo xlat rex.WB xor adc pop (bad) xchg add sub and movabs jae rex.RB pushfq add add lahf cmc and adc mov enterq mov jrcxz push cmp add (bad) out outsl jle jb pop mov (bad) (bad) mov pop push scas (bad) jae mov fstpt jbe cld in sub sub imulb xchg (bad) mov cmp or fldt mov xor and fistl scas add pushfq mov rex.RXB jbe sub cmp (bad) test add and fisttpl insb retq sbb add or (bad) or (bad) loopne outsl (bad) fldt xor pop jmpq xor or rex.WRB fs mov pop stos cs mov jbe push out fldt ja jne mov mov movsl rex rex.X andl jge fldt jae and stos mov mov jp lahf cmp ja jne jns fwait out (bad) pop pop lea (bad) adc (bad) outsl mov (bad) cltd sbb (bad) pop mov (bad) mov (bad) push fsubs (bad) (bad) movabs retq mov pop rex.RXB xchg in sub adc push out and jnp or (bad) sbb push cmc movabs xchg (bad) (bad) push mov pop or es notl clc rcr mov and (bad) and (bad) jrcxz (bad) jne lods xor rex.WRB lods and stos and int loopne mov (bad) addr32 xchg repnz push xchg sti jns je or sbb std incl jno ja movabs add mov push jle fnsave (bad) test push rex.WR in popfq ss sbb sbb (bad) (bad) sbb push rex.WRB or (bad) xor out jrcxz lods cli xor mov jae (bad) xlat mov xor jmpq xchg cwtl xor pop (bad) stos add cmp rcrb xor rcl loopne jbe push cmp pushq pop (bad) sbb jns push xchg fwait addl push out xlat cmc add xchg addr32 (bad) (bad) repnz or (bad) rex.WRXB fmuls xchg rex.WB add out (bad) (bad) sbb fwait rcl mov movabs (bad) or adc cmp xchg (bad) cld lock sbb or cmp fmuls movsl mov fs jrcxz pop ficompl repnz imul mov sbbb movsb pop repz cmp adc insl imul fldcw xchg testb jnp test sbb movsl fildll (bad) in jrcxz fsts out rex.WRB (bad) movabs add and repnz data16 mov pop pushq fild repz test pop fwait cli rex.WX int (bad) push mov lods add (bad) rex.RX movsb fistl addr32 (bad) pop mov js cwtl (bad) cmp jb lea cmpxchg (bad) lret mov rcrb stc jge (bad) mov xchg cltd cmp xlat and fistl ds (bad) push pop or imulb and (bad) fcmovne pushfq xchg rex.X rex.XB fldt (bad) enterq int3 stc (bad) mov (bad) pop imul jbe pop adc jle sbb fldenv fucomi xchg jrcxz sbb cmp pop rex.WRB (bad) or adc iret sbb addr32 mov jge fistpl scas (bad) (bad) jg cli add andl out add out adc (bad) (bad) ss rex.WB nop sbb (bad) adcl pop insl (bad) and pushfq divb loope rex lahf rex.WRXB mov iret xchg rol add lret (bad) xchg xchg cmp mov insl adc cltd (bad) fwait sbb mov xchg repz mov push cmpsb out cmp fidivr fwait jmp mov cmpsb (bad) movabs cmpsl (bad) (bad) int3 adc mov jrcxz or (bad) hlt rolb (bad) jle lahf rex.RX sbb (bad) or xchg out rex.WX ja mov insl xlat xor fldenv movsb sti push sub or adc jae in adc adc sti sbb mov jp and and sti (bad) mov incb fstl pop sub pop jmp xor ss (bad) jp (bad) (bad) (bad) xlat push (bad) fcomip jrcxz loop cmp cmp fstpt xchg insl (bad) jno adc adc and (bad) loopne in jne cmp sbb (bad) (bad) mov mov fisttp mov mov insl movslq mov (bad) rcrl pushq (bad) xchg fcoms rex.R not push (bad) and add (bad) subb not js stc fstpt rex.RB xor (bad) jo or mov (bad) rex.X fistl cltd shlb lret enterq (bad) mov addr32 mov push rex.RX in lret adc mov jp mov sbb stos (bad) nop jns xchg outsb outsl fisttpl int pop sub fcmovne loopne (bad) xchg int3 pop (bad) cmp (bad) sbb je cmp mov xchg push (bad) clc pop fildl (bad) xchg in (bad) fs push sbb in mov cmp adc and fstpt rex.W fsubs (bad) pop in and mov insl xchg jnp pushfq test (bad) xor mov jne xchg pop repnz xor rex.RXB lret fisttpl or sbb mov cs (bad) or (bad) xor lret or outsb repnz fildl hlt fs and jbe xlat sub adc xchg cli (bad) rex.W xor pop sub jnp sbb rex.RXB rex.X sub repnz leaveq ss jle rex.W push out out in xchg sub movsl pop jmp (bad) mov mov cmp (bad) (bad) rex.WRX xor xor xor sti mov fildl rex.B (bad) jae ds scas fistl pop xchg push cmpb jg movslq rol rex.WRB rex.W sub (bad) jrcxz divl cmp (bad) jne or pop push fldt sbb jge (bad) loopne add pop loopne cmp movabs hlt adc shrb out out add fs (bad) rex.RXB rex.WRXB jns (bad) movslq (bad) iret rex.WB sub incb clc or lock xor (bad) ficom mov cld mov fcompl mov std sub sbbb jno repz jo jge gs cwtl mov (bad) hlt in jge (bad) adc cmp push xchg std (bad) or push rex.RXB pushfq xlat cld int3 xchg xlat push (bad) (bad) stos hlt lret jbe (bad) mov fnstcw jl cmp (bad) outsl faddl addl sbb jb xor ljmp xor stc mov push (bad) rex cmpsb movabs outsb and fsubrs push (bad) stc fwait icebp jne jge adc rex.WX (bad) ds rex.X cli pop adc int3 jns fwait xchg rex.RX rex.W ss fldt rorb (bad) push add push lock outsl (bad) lret lahf push jle mov cltd stc fildl mul outsb leaveq jnp (bad) pop retq movsl sub jns or sbb out (bad) movabs cmp cmpsb (bad) mov fisubrl (bad) fldt repz adc (bad) in adc scas fcomi pop lret sub xor repz lret (bad) pop pop xor jle xor rex.RXB mov mov adc xorl js push jge or outsl add enterq and neg xor mov xchg iret out (bad) (bad) rex.XB rex.W fistpl (bad) ror fisttpl insb jb negl cltd (bad) jae imul lock jp fistl (bad) fistl pop cmp jg push repnz vsubss mov (bad) jo (bad) pop jae mov jno fistl out rex.WR (bad) (bad) sarb mov xor or xchg rex.WRB repz (bad) adcl pop (bad) (bad) xchg outsl imul bnd repnz mov pop rex.WB rex.RX loopne mov pmovmskb jns icebp in scas rex.RB out enterq mov out add out adc cs jl (bad) fstpt cld push rex push (bad) pushq addr32 pop in (bad) imul and jne or sarb (bad) pop jo rex.XB fisttpl stc cld mov out cwtl fildl faddl fstpt scas sub (bad) stc mov and adc imul movabs (bad) add movabs fcoms adc push leaveq jmp xchg pop loope jb jns xchg callq pop (bad) lods std and (bad) (bad) xchg outsl scas nop pop pop adc (bad) (bad) int pand divb (bad) fcompl mov lret mov pushfq pushq fnsave mov rcr rex.B cmp (bad) popq cmpsl fisubl mov (bad) sbbl push jbe fstpt sbb jo in add rex.WRX int3 jno (bad) fucomi sti pop rcrb xchg lods cli invd rex.RB or loopne adc adc mov fwait movabs mov or mov cs xor push fisub sahf movsl pop sub (bad) mov push pop lea jns jle fcompl in pop lahf incb (bad) xchg rex.RB ds adc xchg rex.WB popfq cltd fistpl jno fnsave or lea ds mov xor (bad) movslq rclb fisttpl mov push stc retq sub and xchg pushq cmp sbb sub rex.RXB push fwait pushq sarl mov (bad) lods cmp sahf pop (bad) jb rex.WB test xchg jmpq add jg fcmovnbe adc sub pop add popfq (bad) pop xor push xor cwtl sti (bad) fwait sub scas and in (bad) lret adc rcr cmp (bad) (bad) out rex.WR ss iret add xchg add movabs jo movabs rex.RB rex.WR jbe (bad) rex.WR nop fildl shrl lret fsts xor jnp mov scas jnp gs outsl fs pushq cmp repz push int3 (bad) and rex.WRX rex.R (bad) (bad) xor cmp push ds (bad) movsb push loop in fstpt mov xor mov (bad) cltd andl std (bad) rcr addr32 pop lock jg mov clc jge xchg outsb stos (bad) movb mov and hlt xor movabs and sub subb gs xchg int (bad) imul sti and (bad) fisubrl outsl jbe (bad) fwait pop (bad) xchg sub popfq notl xchg sub ds or jb adc fcmovnb ja xlat movsb mov jrcxz rex.RB movsl clc out fisttpl (bad) movabs jnp add sub pop adc cmp cmp (bad) pop pushq repz cmp mov rex.WX (bad) add iret test fistpl test rex.WR mov (bad) cmpsl mov cli cltd fimul fistl (bad) jp andl pop iret (bad) fcmovnu ffree pushq pop retq xchg xor mov fidiv stos cmp rex.RB addr32 int3 gs jge leaveq jle sub pop test retq fwait lret or rex.X adc stos push stos cmp fnsave jb fcomi adc and cmpsb shl push sub cmp mov rex sahf movabs rex.WXB loop je xor and incl (bad) insb int insl sbb jmpq int push pushfq not js pop cmp loope rex.WX (bad) rcll int3 (bad) mov pop in fwait or insl xchg or movsl and mov adc retq movabs pushq and fstpt rex.W pop mov (bad) fildl shlb icebp (bad) fsubp adc mov (bad) pushfq loop sub rcl jg pop push (bad) pavgb rcl mov mov jge movsb sub cld sbb (bad) vxorpd push add ja push jbe rex.WRX rex.WRXB loope lods jmp leaveq cltd lock cmp sub add xchg mov sahf jb test push (bad) cmc mov mov sarl rex.RXB (bad) mov (bad) hlt xchg callq mul (bad) (bad) cli (bad) mov (bad) repz or sub mov rex.W subb mov (bad) in int3 loopne and outsl fwait stc push fwait cmpsl mov (bad) cld pop jmpq xlat sahf jrcxz in rex.R fwait xchg and lea xor sbb lock notb sbb int3 retq add and ja fmulp xor push (bad) sbb enterq (bad) icebp mov mov jp lock pop jno movabs fdivr pop ja cwtl push scas (bad) pop jle insl xlat sbb fst rex.X lret xchg push test mov stos mov (bad) xchg sub imul cmpsl stos fcmovne xchg js adc or frstor cltd mov (bad) out popfq rcr (bad) push loop cld enterq (bad) mov jns (bad) cmpsb rex.WR fs pop pop rex.R movabs rex.WXB lahf movslq jle pop pop fucomi sub out fucomi jb (bad) cmp test adc or jmp outsl (bad) jbe (bad) pop lea out add sbb mov (bad) cmp jo or lret xor es rex.X gs pushq fistpl je test stos ja pushfq test and (bad) negl rex.X mov xchg out cwtl pop xchg push adc retq (bad) adc and cmp mov sbb outsb std adc repz fldcw mov and (bad) pop add std hlt xor sbb sahf test mov fstpt movabs sub rex.RXB mov (bad) (bad) sti mov movabs int pop pop sti imul ds scas (bad) cltd mov xchg mov xchg int (bad) cmp cmpsl cmp fisttpl (bad) xor cmp xchg stos cmp fldt leaveq cmc rex.WB test fwait (bad) xchg insb add adc rex.B mov rex out jno js xchg sub retq push data16 ss in movabs loopne jnp rex.WR adc mov rex.X (bad) movslq rex.WRXB and xchg (bad) sub sbb stos je ja jne (bad) iret jmp rex.WX push adc sub leaveq out pop cmpsl (bad) pushq mov push mov (bad) pop sub ja cmp pop fistl cwtl jp or out fildl xlat add (bad) fildl jrcxz (bad) (bad) xchg or int (bad) rex.WB icebp cmp fildl (bad) sbb fistpl push pushfq rex.WRXB adc fistpl xchg scas (bad) mov xchg adc jge rex sbb fmuls stos es rex.XB (bad) fldenv (bad) rex.WX rex.WRXB cmp add mov shll fstpt xchg (bad) (bad) stc rex.XB fistpl int in fistl jno jnp add or mov mov jnp scas and pop mov sti pushq rex.XB int jnp fadds mov out jg rex.R cmpsl mov movabs stos pop loop lock test (bad) adcb fldt test repnz push fldt xchg mov mov mov add push insl movabs in (bad) loope pop cmpb stos fwait or cmp lret mov ficoml rex.WRXB retq (bad) mov push xorl lret jns adc jle add mov movabs rex.WX vcvtsd2ss scas (bad) outsb lcall rex.RXB pop repnz pushfq lods movabs xor jnp mov (bad) mov cmp fwait sbbl and shr (bad) or cmp rex.WRB fcmovnbe jmp ja adc push cli jae je test orl gs icebp fucomi xchg jb ds pop movabs and pop in add sub rex.WRXB callq (bad) pushq retq outsl and adc (bad) push fidivl xor test xlat pushq addr32 (bad) xor rex.R sbb (bad) movsb test fcmovbe jmpq and jnp and insb lods cmp iret rex.RX fstpt push mov sbb fbld rex.RXB ds xchg fnstcw sti (bad) (bad) test jae,pt out jbe (bad) fs push fcomps mov (bad) faddl rex.B imul imul cmp pop xchg rex.WRB fistp jle pop in mov loope sarl (bad) xor movsb leaveq adc sub adc sub push fistpll std xchg cmp adc data16 (bad) pop pop loope sub callq jne jo push and jle rex.R cmpsl jb xchg or (bad) fistp (bad) xchg sbb rex.B rex.X adc adc push rex.WB jmp scas movslq mov xor jl addr32 rex.WB shr add negb (bad) cmp or shrb sbb in hlt xchg rex.WRXB cwtl pushq jle icebp std (bad) callq xchg (bad) enterq mov stos mov (bad) adc xchg shll ja rex.RXB (bad) (bad) sub repnz (bad) rcr mov mov cmc retq jb mov fildl incl lock mov mov rcrl (bad) out push sub adc je addl and orl fcmovnbe in rex.WRXB (bad) cs (bad) shrl fstpl (bad) ss fnclex sub adc lret (bad) or imul jae and rex.X movslq insb rcr cmpsl (bad) pop lods fbstp xlat cwtl jne js xor fildl pop ss pop (bad) repnz movsb imul cmp jno push xchg sbb push push stos out or and (bad) (bad) pushq cmpsb pushq fldt add cmp mov sbb scas nop add jge jb fldt loop push jmp movabs rcrb fildll xorb mov xor (bad) mov jg fisttp in imul adc imul add mov movabs and xchg adcb ja rex.WRX ss repz (bad) xchg fcmovnu cs jo incl ds (bad) mov fucomi (bad) int (bad) rex.WXB rex.XB in test mov sarl cmpsb scas (bad) (bad) lret imul test xchg xchg mov fildl push pushfq mov mov paddusb xor rclb (bad) loopne xchg jrcxz (bad) (bad) xchg xor leaveq fsts jnp addr32 jnp xchg (bad) pop mov xor (bad) sar xchg jge jmpq lret mov fstpl sbb (bad) hlt (bad) and gs sub fisttpl scas test int3 (bad) sbb imul (bad) cltd (bad) cld mov (bad) add pand (bad) repnz pushfq ja cs (bad) (bad) rex.WRXB cld push std fwait rex.RB divl xlat fcmovnbe in xchg movsb (bad) xchg pop xor jl rex.X rex.RX out stos pop fistl (bad) cmc cmp sub jrcxz insl movsl jl xchg rex.R iret (bad) (bad) fisttpl pushfq xor pop icebp data16 or or fsubrl popfq sahf mov stc (bad) ja scas fistpl cmp fcmovu and lahf sub add es (bad) mov rex.WRB push loop in fistl fistpl movabs popfq out movsb pop mov movsl negb (bad) popfq in xchg mov cli sbb or stos loope sbb (bad) mov add jmp cwtl rex.R clc add push enterq xchg cmpb fstpt mov fcmovnu or (bad) iretq ss pop (bad) data16 mov lea leaveq popfq (bad) adc cmp movabs stc fstpt stos push (bad) lahf rex.RB (bad) retq rex jne test cltd icebp orb leaveq mov ficoml fidivr jno movslq fucomi rex.R adc mov incb lods push (bad) add icebp mov ficompl adc (bad) in stos push (bad) pop (bad) jp xchg js rex pop xchg fcmovne and push xor fistpl cmp rex.R lods jnp rex.WRXB sub ds cmp pop mov test and pop insl xor jle (bad) cmp rorl lock pop lret fcmovnu jp cwtl (bad) ss mov rcr mov rex.RXB mov cmp cmp mov jrcxz xor jnp sub jne xchg mov lret adc rex.RB sbb cmp xor fs sbb cmp xacquire test (bad) xor add lea insl push loope rex.XB (bad) (bad) xorl jge push mov movabs (bad) adc hlt cwtl sbb jle and cmpsb movabs pushq sbb push insl movslq sub xchg scas hlt (bad) out rex.X adc or sub stos sub push jp add insb rcrl seta outsl (bad) jbe lods gs addr32 xor retq xchg jno xlat mov movabs movsl movabs or jp (bad) adc sarb jbe retq mov mov push (bad) jae jnp test lahf jb pop lahf pop push sbb iret jle cmp clc repnz stos (bad) mov mov jge adc xchg pop xlat icebp mov jmp mov adc movabs push and mov cli (bad) cld movsb or lock sahf ss adc cwtl retq rex.XB adc (bad) jnp push cmp ja cmp js popfq (bad) jbe loop rex.RB push pop cmc sbb rclb cmp mov es imul or (bad) mov and cmp lret jnp cmp je push xchg (bad) scas (bad) xchg clc rex.WRB movabs jl loope sahf jrcxz rex.R xlat (bad) and pop lret or xchg or pop outsl (bad) fwait xor xchg cmp jp fsts xchg lock or pop (bad) repz imul sbb lret sub mov int3 movabs pop sub test mov mov pop rex.WXB js movl add mov pushfq rex.WX std (bad) pop movabs mov lahf sub jo callq rclw sbb mov gs adc mov xchg xor mulb pop nop push add jb repnz fcomip rex.RB addr32 (bad) clc sbb or jnp mov sbb pop movsl adc je cmpsl pushfq mov out xor push rex.X (bad) pop add movabs rex.WRX rex.WRB cs test iret (bad) imul test sbb (bad) cmc sbb (bad) xchg fsubl push adc mov (bad) pop flds (bad) push push iret iret cmp stos pop rex.WX jns rcrl loop cli jg rex.WRXB addr32 rex pop imulb pop adc in movsb repz movslq rex.WRX rex.WR (bad) mov (bad) retq xor (bad) loope adc pop retq out xlat test and cmp (bad) or sbb (bad) ja (bad) test adc shl jmp repnz cmp imul jp addr32 lods in loope xchg rcll cs rclb sar sbb (bad) xorb (bad) cltd (bad) fldt jrcxz js jno mov xchg movsl outsw xchg adc (bad) movabs repz repnz rex.X hlt mov (bad) fistpl push js (bad) jl jnp (bad) in in (bad) (bad) jmp sub rex.B (bad) cmc in push rex.WXB push (bad) cmp idivl pushfq (bad) sti xor xor pushq rex.WB rex cld pop clc andb addr32 jrcxz insl (bad) fiaddl loope repnz cmp rex.B retq loop push insb jle and stos movsl fisttp xchg push push pop jl nop (bad) movslq sbb fcomi sub pop stos rex.B rex.B xor callq adc mov fwait lock cmpsb xor popfq rex.WB cli jo fdivs (bad) lods cmp rex.B movsl lret pop lahf sub fcom retq (bad) (bad) or and movabs in push cmp rex.W fwait icebp mov pop xchg outsb int pop mov mov push iret pushq add mov gs adc rex.W pop mov add lret mov and lods rex ja mov add (bad) fildl mov rcr mov (bad) out push test or jne cmp add (bad) movsl test enterq mov out rex.XB rex.WB int3 jne push xor jge stos cmp or test jb stos fistl out fmull fcomi cld jge rex.WRXB int3 test cmp and xchg sub pop xchg lods fisttpl cmp xor sbb mov pop es xor cmp mov js (bad) hlt jle rex.WR xor or (bad) fild (bad) fwait jg mov (bad) adc cmp ss loope jle movabs fstpt xor fcomi fisubrl out (bad) iret es (bad) hlt xor rex.XB jae or fcmovnu scas cli pushfq in jmpq pop subl insb fsub sub sbb nop (bad) and std and sahf push fistl imul jb rolb outsl xchg rex pop test cmp jle fdivl sbbl out (bad) fwait xchg push icebp jne fucomi rex.XB (bad) int (bad) adc fs sahf mov fwait (bad) xor repz lea jmpq cmc mov (bad) fcoms imul sbb movabs mov (bad) (bad) mov lods mov pop sbb retq (bad) mov xchg insl xchg (bad) addl (bad) (bad) jnp imul jp cmp int3 sbb jns rcr add jmpq cmp pushq sub sub push loop pop cs out fistpl (bad) adc ds fistpl sub (bad) nop std jo movabs (bad) or retq rex.WR mov rol cmc repz and mov insl pop stc vaddpd sub jnp push xlat push sbbb movabs movabs jrcxz (bad) and adcl repnz (bad) shl rex.W rex.R sbb pop jl imul rcrb fldl pop and rex.WRB (bad) jo movabs jp add (bad) (bad) mov pop repz xchg cmp cmp int add cmc in cmp in test add (bad) push jns jne decb mov sub jbe loop push mov and scas pop xchg push sub or rex.W lods (bad) jrcxz clc movsb loop rclb (bad) add add mov pop int (bad) jae jne add out outsb jp mov or rex.WRB xor out fstpt cld fisttpl negl retq add rex.RXB (bad) pushq pop cmp jo ds xchg pushq ss push (bad) movabs fldt pop es stos sbb (bad) jle rex.RB (bad) or subl mov sahf (bad) data16 fcmovb retq (bad) mov in cld outsb movabs mov hlt ficom clc fisttpl mov lock cmovnp and jp xor imul (bad) cmp jae pushfq iret fwait imul mov mov jno pop xor outsb js rol rcrb xor mov (bad) fcomi movabs pushq (bad) xchg push mov in mov clc and adc mov sub or mov xor movsb jg mov fildl out pop mov jrcxz rex.WR ja movabs iret shl fisttpl mov rex.W sbb xchg jmpq (bad) fistl pop jl shll js movabs (bad) rex.R (bad) mov sbb stos pop test pushfq cmp adc (bad) subb js nop retq jnp rex.WRXB (bad) rex.W pop and xchg movabs push nop xor sbb (bad) pop or mov sub fldt std hlt data16 callq sti pop xorl movsb fsubr mov cmc cmpsb xor fstpt mov loope lretw add push sarb cmp sbb mov jl pop (bad) mov push ds sbb add lods adc jne cmp sbb and jg lods repz and rex.RB rcr (bad) cmp mov mov stos rex.W rex.RB jp mov mov movslq out sub add leaveq scas std rex.WRX (bad) stc sub fdivs add repnz (bad) pushq xchg (bad) rex.XB insb pop (bad) and rex.WB pop jl (bad) mov rex.B out jae xchg imul push pop in (bad) gs lods (bad) mov ja mov fdivrl pop xchg (bad) and notl scas mov fsubs (bad) sub out movabs sbb js cmp pop xchg fcoms xchg imul mov icebp mov (bad) stc jo or (bad) cmp movabs js popfq mov rex.RB pop or rex.B mov jae cld jp mov cmp jl jle jmp std imul push fidivrl fs sbb (bad) (bad) (bad) cmpsl xlat sub lods (bad) enterq cmp iret (bad) lahf pushfq xchg or (bad) (bad) cmp pop retq frstor xchg retq shrb cwtl repnz out cmpsl (bad) pop mov mov (bad) jp xor (bad) rex.WR jmpq adc jno jrcxz ss stc mov lods push (bad) push pop mov (bad) (bad) (bad) mov jne mov pop mov ficompl xchg mov repz cmpsb jg imul lret sar xor push mov int3 pop adc out out cmp divps js rex.W in out jnp stos cmpsl test mov pop (bad) pop (bad) cwtl lret std ficom push (bad) int3 hlt mov sahf and fistpl pop or pop movabs (bad) cmp push fcmovnb adc rex.WRXB xor (bad) out (bad) and (bad) lock jns rex.XB mulb cmp mov in rex.WR pop es (bad) jae lret (bad) cmpsb cwtl pop cmp push fildl ja fldt adc (bad) mov mov sbb mov (bad) (bad) es mov jge fildl in and movsb (bad) fs rex.RX test lods data16 push jnp in jmpq sbb mov (bad) jl and xchg sub (bad) jb mov fisttpl or in jo sub mov movabs xchg adc retq mov outsl pop mov cmp (bad) fwait (bad) in mov rex.RB rcll sub adc fmul movabs (bad) scas jge sti (bad) in fistpl rex.WRB rex (bad) (bad) rex.B pop (bad) movabs sbb pop hlt add cs pop cmp cmp add (bad) sbb xor fistpl iret out sbb out xor fsubrl push jle (bad) pushq mov sarb fsts cld jrcxz loop retq (bad) vmaxpd je (bad) fwait leaveq retq (bad) cmpsb (bad) mov mov fildll sbb fildl xchg (bad) in fldt mov rcrb mov fldt fnstsw (bad) fisttp and outsb xchg (bad) sti rex.WB and jae mov insb sbb fldenv or (bad) outsb mov cmp iret fcoms fstpt cmp mov notb fstl mov in sbb ds pop rex.RXB mov rex.WR mov pop (bad) insb scas test sub push jg cmp fistl (bad) cltd ja pop std shll xchg leaveq lahf mov jo rex.XB lock lret pop add fucomi callq movabs (bad) and fsts adc adc leaveq cwtl fs xchg cmp fcmovnb mov movabs movslq callq (bad) cmp (bad) pop sub rex.WX or out add fcmovnb mov stc (bad) (bad) (bad) jmpq movsl adc fisttpl loope (bad) fldt rex.WRXB xchg int3 pop adc adc out rex.RB rex.XB lods (bad) mov rex.WB data16 and xlat rex.RXB jns (bad) xchg (bad) lock retq out (bad) nop retq mov cmp insb pop fildl enterq (bad) jae fildl xchg sub mov movabs mov mov xchg cmp rex.WR mov fistl sarb stos and fwait mov cmpl mov outsl (bad) mov xor rex.WRXB int (bad) ficomp jnp pop pop jno sub add mov mov or fisttpl cmp lock mov mov fildl rex.WRB fildl scas sub sbb nop fistpl mov orl push imul push (bad) adc and leaveq cmp loope xchg (bad) pop sbb clc (bad) jnp adc imul std in ds je (bad) pop or repnz cltd iret in ja pop insb push lock adc rex.WXB rex.WRB imul sbb xor (bad) data16 xchg loope adc and mov or (bad) cltd add fidivrl (bad) fiaddl mov (bad) (bad) cmp push iret and mov ja mov in sbb repz xchg jb rex.WRXB push push stos rep cltd nop frndint or xchg outsl or xchg ficompl push (bad) xor (bad) js iret rex.R ds loop xlat int3 sbb sub fwait rex.W push push sub cmpsl rex.WRB fs xchg sbb insb out xchg push mov cli xchg push cltd rex.RXB popfq iret (bad) (bad) pop repnz cld std cltd (bad) fadds jle rex.R sbb loopne pop mov rex.WRX mov jrcxz or fwait (bad) mov rex.WRX clc mov adc scas mov cld rex.X xchg xchg xor pop cmovns mov cmp fwait push lock (bad) loope in pop and xchg pop std (bad) cmp insb (bad) mov rex.WB addr32 rex.WRXB sub adc mov (bad) cld movabs mov stos test rex.WXB mov mov test int3 pop imul es xor clc rex.XB jnp sbb movabs xor loopne add cmp insb fstl mov mov fwait mov mov cltd gs xor enterq fwait pop xorl sbb fcmovnbe repz adc (bad) rol rex.W mov sub sbb rex.WRX mov outsb movabs sub (bad) ffreep mov movslq cmp adc rex.W (bad) mov addl dec (bad) ja js (bad) xchg sahf push and cmp pop (bad) in xchg fildl fnstsw sub (bad) pop mov jg fstpt and test es cmp mov (bad) je push fldt jg int3 in sti (bad) push xor iret jmp cmp pushq mov test (bad) (bad) (bad) or rex.WRX rex.RXB (bad) or mov xchg fldt fmuls cmp fwait pop mov mov push rex.WRB jo and pop cmp fucomi cmpsl or cmpl fistl movabs std adc and fisttpl adc and mov (bad) mov rex.WXB pop pushq out mov rex xchg jno xchg out push stc pop mov imul xchg mov mov fisub xchg mov nop mov retq (bad) (bad) jne movabs pop rex.WX (bad) rex.WB sub push mov adcl mov fucomi xchg sarb test fcmovnb cmc fs mov (bad) mov fcoms push mov jno test cmp sub jb push push (bad) (bad) rex.WRB lret sti and rex.RXB sti fisubr jne stos repnz rex.RX pop rex or rex.WR out mov pop sbb rex.XB rcrl (bad) (bad) cmp clc iret jns jno loop jnp sbb xor rex.XB (bad) adc sbb mov repnz fistl fisttp rex.XB es push pop adc mov sub (bad) xor lock adc rex.WRXB fadds fisubrl cmpsl (bad) (bad) pop lea outsl cld rex test rex.RX add cmp movabs jp mov neg (bad) (bad) xchg mov (bad) mov mov cmp sub retq (bad) push (bad) xor scas pop in pop insb sub cwtl mov mov adc xchg xchg adc mov retq lret (bad) (bad) movabs and jp add (bad) jnp add (bad) jb (bad) add hlt rex.RXB fldt adc and xchg cmp (bad) (bad) (bad) fmuls rex.WRX es cwtl fstl and sbb fwait (bad) addl xor (bad) rex.WRX add fcompl (bad) fcmovnu xlat (bad) pushq pop rex.WXB fcmovnu mov (bad) xor sub shrb rex.W fcomi sbb movabs (bad) js (bad) (bad) (bad) sbb adc fnop repz sti (bad) (bad) movabs xchg mov lret out sbb jge mov cmp rcrb (bad) mov test rex.R pushq add mov loope xor xchg push ljmp in pop loopne push and lret mov add fwait (bad) testb add test lods std ja (bad) test or retq (bad) out std pop (bad) cmp rcr retq loope je ficompl in shl shrl xor (bad) xchg lods jno shr (bad) je mov pop loopne cld jne rex.XB movabs fbld sub testl imul movsb mov retq clc movslq lret js retq mov mov fwait loope push lea jns int rex.R imul xor push stos je add or rex.B fstps mov rex.WRX xchg pop int3 notl stc mov jg retq jl cld cli adc cmp mov (bad) (bad) rex.X gs (bad) (bad) xor sub cld loope movl jrcxz rex.WB movabs cmp (bad) (bad) mov lahf scas leaveq or jnp sub callq (bad) mov outsl push xlat mov and pop data16 stos (bad) data16 pop fstps jmp adc sbb jns fs fcomps fsubrp mov mov cmpsl pop shlb sub jb mov scas xor sbb (bad) cltd (bad) adc fdivrs js pop cmpsl sbb and fdivs jo or insl sub or or loop push jnp iret jno pop mov gs pop out xor xchg sahf pop (bad) add rex.R (bad) push add cmp stc (bad) mov mov jg,pt fisttpl test shlb sti nop pop loope xor rex.WRXB repz data16 (bad) (bad) sbb mov mov clc fistpl rcr (bad) lret and int cmp leaveq fistpl test (bad) pop mov and std (bad) stc insl ds int3 sub sbb push ja mov (bad) rex.R mov (bad) jnp mov idivl mov (bad) pop movsl xchg loopne pushfq pop jg js scas rex.RB fldt imul mov rex.W test xchg pop mov adc (bad) fldt lahf out cmp mov mov (bad) and jg fcmovnu xchg pushq movabs xchg js sbb xorl (bad) stos fld mov mov add insl jmpq pop (bad) or mov fs rorb fwait mov in jp (bad) fnstenv popfq sub cmc mov rex.B rex.WXB int or xchg rex.WX push in stmxcsr cmpsl and imul rex.RB fwait mov js fcoml (bad) (bad) (bad) mov mov enterq jle cmpsb popfq (bad) mov (bad) jns xchg adc (bad) rcr rex.WXB loope loopne jp cltd push outsb movabs cmpsb rex.WRXB rex.WRX jg (bad) and cmp loope rex.WRB mov (bad) pop add (bad) mov (bad) sbb std outsl (bad) gs std insl xchg lock jns mov and nop xor movabs callq push xchg lret (bad) adc (bad) jp pop (bad) mov sub sbb je cltd fwait popfq (bad) mov rex.RX pop or xor lods ss (bad) mov mov ds cwtl cmp and retq adc ficomp jns sti fsub std mov mov pushfq xor std xchg rex.WRX mov flds rex.R rex.X popfq sbb jns sub fcomi in push movsb cs or imul mov movabs adc fwait pop or rex.W sub jg sub nop rex.RXB stc fimul (bad) test pop and retq (bad) mov xor (bad) cmpsl fsubrl push (bad) mov mov xor fdivs mov pop imul addr32 rcr in xchg movzbl pop xor test (bad) lret (bad) sar mov fildl (bad) xor jns imul test mov jo cmp sar xchg jmp (bad) adc stos enterq and mulb fsubrs push in fstpt lret adc leaveq int rex.W or cs fildl test mov or (bad) movsb fisttpl adc movabs fwait repz addr32 and sbb xchg movsl pop (bad) neg sbb movabs test pushfq enterq cmpsl (bad) (bad) rex.XB pushq (bad) mov mov rex.WB xchg (bad) loop ja mov callq (bad) loopne fildl adc cmp xchg (bad) ds jg xor pushq rex.XB sahf pop rcll rex sar push movabs fildl jnp and xor xlat pop (bad) pop mov outsb sbb (bad) jae push jno (bad) rex.WR std xor pop rex.W in bnd xor (bad) mov (bad) test es and mov or fwait cmp outsb fistpl mov rex.WR xor rorl sub movabs mov insb imul callq adc scas faddl or (bad) jl andl mov lods int3 pop test cltd imull xchg rclb xlat (bad) sbb mov repz fwait sahf jle jg add sub orl push adc push rex.XB add (bad) jl cltd mov pop retq cltd cmp retq pop or ficom add out retq (bad) cld mov sti sub jl pop xor int3 ss shrl ljmp or sti pop sahf (bad) in rex.W sti mov push and jrcxz rex fwait int (bad) cmpsl cltd mov rorl addr32 pop stos mov (bad) imul loopne add (bad) adc sub cmp (bad) loopne add movabs scas pop (bad) rex.W stc mov rex.RXB test (bad) fwait (bad) and (bad) xchg hlt adc add rorl mov (bad) pop sub movabs out lret retq jp (bad) jrcxz rex.W rex.X fistl data16 or test fistpl es (bad) movabs and jbe sub sub test fildl jno es mov (bad) out and test movabs or ds neg loope mov xor (bad) repnz icebp rcrb xchg (bad) lea movabs jmp test cltd (bad) and mov cwtl fistpl cli orl jge addr32 fcomps pop jno push out xchg sbb movslq fstpt mov fcoms pop or stos cmp int3 (bad) (bad) pop and lret xchg mov adc std rex.XB and ffreep xlat (bad) rex.WR sub push and out sti jrcxz or movabs in fs (bad) fistpl testb (bad) int (bad) rex.B cmp retq lret int3 negl mov imul jp (bad) (bad) xor jns pop jge fldt ror (bad) lods ds jnp or jo ja cmpsb (bad) mov jp fisttpl in (bad) leaveq (bad) xchg movabs rex.WR idivb mov scas gs pop fsubs mov xlat jmpq cmp pop (bad) out rorb xor adc mov fistpl xchg add (bad) jnp pop fcomi mov pop lock (bad) xor movsl (bad) (bad) retq fmuls ja (bad) outsl adc add out in sbb rex.RXB push adc pop retq pop movabs jg out push sub push mov (bad) pushfq cmp or lea adc jnp addr32 loopne shrb rex.WXB (bad) jae pushq (bad) stos enterq cmpb movsl rex.WRB out (bad) cmp sub cmp mov xor pushfq (bad) je rex.R enterq mov jo ja (bad) in fstpt mov xchg jno loop and popfq and lods rex.WRXB int3 movsl data16 retq movabs mov cli (bad) fucomp push fisttpl jle xor cmp cmp loopne mov jle (bad) (bad) cltd (bad) mov pop in rex.WB (bad) adc (bad) es fucomi push push mov enterq (bad) fs cwtl es out lods cli fldt push add movabs (bad) jo addr32 jnp sbb lods callq jae xor loopne fidivl stos stos pop js pop rex.WX cli nop fstpt (bad) movabs lock jnp sahf rex.WRB rex.RX (bad) fidiv sub cmc pushfq repz addr32 jb movabs stos jno rex or pop (bad) repz (bad) jae jp and icebp fisttpl (bad) jle movabs mov or rex.WR (bad) fwait and (bad) mov (bad) icebp addr32 enterq (bad) jmpq js hlt fisttpl mov fdivr cltd callq mov xor loope (bad) fcmovbe gs data16 (bad) sub rex rex.XB pop push cld mov loope in mov sti (bad) (bad) mov rex.W mov jns and enterq rcrb (bad) cmp (bad) pop sti iret fwait pop sbb cmp (bad) xchg rex.RX pop (bad) ja sub (bad) (bad) or xchg push cs pop rex.RB jp xor gs (bad) sbb mov push mov pop lock (bad) rex.WR cwtl cld jae rex.WRB cld xchg rex pop shrb pop add (bad) rex.WB push rex.WRX fwait mov rex.XB leaveq movsb jrcxz (bad) insl rorb mov mov lock std pop (bad) (bad) imul (bad) sarl fisubrl (bad) mov xchg in fist popfq lret (bad) xchg in rex.WR hlt and pop add enterq or movabs rex.WRXB or fcmovnb (bad) fldt (bad) xlat xor cld sub rex.WRX stos rex.W fs (bad) mov loope lea gs (bad) push sbb in and in test mov pop in or fwait (bad) idivl fistl fcomps mov retq hlt mov add jmpq (bad) adc es in rex.WB (bad) mov cld in mov fistl xchg jg (bad) xor and push rex or addr32 sub pop push ds hlt mov or xchg movsb rorb enterq rclb out (bad) (bad) idivb (bad) stos (bad) mov sar and (bad) mov jge loopne cld pop (bad) pop imul xchg lods (bad) (bad) rex.X lret movsl lahf (bad) or cmp fisttpl mov xchg jo xchg pop or push adc cmc loop callq jno (bad) or fistpl out and mov sub fwait mov lods (bad) jns fidivrl stc push or in sub cwtl cmp mov outsl (bad) add sbb cmp mov stos fistl cld adc pop imul (bad) in (bad) fistpl pop iret add mov fcoms jae pop outsb lods movabs movabs pop xor push (bad) pop jne (bad) xchg insb fcmovnb rcr add adc xor (bad) movabs mov xchg and ss mov mov and fistpl pop and fldt pop (bad) repz stos gs sbb rex.RX sub jno pop and (bad) xchg jg rex.WRB (bad) (bad) cltd and xlat repnz imul (bad) testl lods pop jp (bad) (bad) rex.WRB loop (bad) mov pop jnp cmp mov rex.WXB rex.X out cmp (bad) pop (bad) (bad) adc fistpl (bad) jg push movabs jbe fcomi jle adc andb rex.RXB sbb shrl mul popq or sti fcmovnbe pushq xchg sahf fistpl (bad) jnp rex.R cs addr32 (bad) sub xor fs iret jrcxz rex.W rex.WB xor fistpl add fwait cmp (bad) fstpt movslq stos idivl lods jae rex.XB fstpt (bad) rolb lret jae,pn fstps (bad) pop in (bad) push rex.RXB jle pop mov rex.WRXB movabs fistl xor sbb mov (bad) pop cwtl sub lods fdivrl lcall fstpl pop outsl and xor xchg lods sbb rex.W rex.WX retq loopne fsts cli int3 rex.WRXB idivl fwait test fisttpl mov in cmp callq add fildl sbb test fisttpl xchg cs (bad) js mov mov mov and mov cmp mov jb rex.WR repnz movsl je pop or jbe mov iret insb (bad) mov test cmc mov xchg push test cmp xchg cwtl pushq and out sub loope jle (bad) xchg rex.R or fcomi and in pop (bad) fs sarl sti xor fucomi movabs imul fwait sarb mov xchg pop (bad) mov cwtl rex xor fistpl sub loopne rcrb mov rex.R and rex.WR adc push or rex.WXB add (bad) push ja mov xor fwait pushq jl rorb sub leaveq in fldt retq (bad) fidivl mov callq mov rex or cmc scas (bad) movslq fildll (bad) jno xchg test fcomi lock push (bad) sub pushq repnz cmp jp outsb mov movabs frstor pop (bad) loop fwait testb xchg adc mov mov cltd rex.B pop rex.RXB and fnstsw (bad) mov loope imul fdivrs pop mov (bad) pop and (bad) (bad) sub lret jb fldt push fistl and retq (bad) rex.RB callq or xchg (bad) repz rex.RXB adc mov rex.R (bad) mov cltd movabs data16 fistpl gs push (bad) pop mov (bad) rex.WRB add jle repnz push push cli (bad) cmc nop (bad) add xchg xor cmp mov in loope (bad) sti test ja (bad) fcmovnu hlt rex.RXB xchg adc nop fisttpll xor movabs push cmp bnd hlt or in fcmovnbe rex.WB addb (bad) repz lods (bad) gs cmp lahf fistpl pop (bad) and (bad) fs sub push (bad) addr32 ss (bad) (bad) sub pop rex.RX loopne sbb jbe mov in int and xor (bad) fildl scas and imul jg mov or je mov jno lock negl rex fldt rex.WRB fcomi insl mov mov lret mov faddl (bad) pop lods rex.XB mov iret pop (bad) rcl xlat xor rex.RXB and add fisttpl rex.XB (bad) pop out ja popfq pop adc sti pop cmp push pushfq je popq sbb xor fistl lods clc rex.RX (bad) out retq iret (bad) pop pop int3 or rex.WR rex.WXB mov adc (bad) push rex.WRXB insl pop cmp fldt (bad) repz (bad) xor jnp xchg xlat cld mov fisubrl (bad) mov ja push mov lcall adc rex.WX xchg clc int not pop jno sbbb (bad) xlat cmp stc sub and (bad) enterq mov (bad) push movabs xor loopne scas roll cmp sub xchg fistpl sub retq fcmovnu push xchg mov fadd sub mov cmp jo imul int shrb icebp callq jp movabs pop (bad) jbe sarl stos test sub (bad) and ror shrl pop mov rcll (bad) jno (bad) mov movsl pop mov fildl outsb jmp push add push cltd mov fisttpl add movabs nop pop (bad) xor xchg fisttpl cmpsl jbe jg movabs sub insl stos rorb add xor (bad) movabs movsb adc and xchg imul in outsl rex.WRX (bad) fldt mov jnp xchg add fmul (bad) xchg (bad) and push lods rcrl sub testl retq jo rex.XB fildl mov xor sbb in fisttpl push mov iret jl lret movsl (bad) jp pop pushq fscale imul (bad) sbb fnstsw scas fwait mov xor (bad) mov mov rex.WX iret jge lret cmp (bad) je (bad) movabs rex.RX jmpq retq lret ds lret stos fildl mov mov jp decb rex.B int fucomi lock scas add popfq clc fcomi in lret cmp ss rex.RXB mov and (bad) (bad) lret cmp movsb leaveq (bad) jno fcmovnu adc pop xchg cmp pcmpeqw (bad) insb pop rex.R mov pop (bad) xchg leaveq pop rex.WRB or mov lods shrb loope mov sar or ss pushfq movabs fcoml push ficomp roll enterq fstpt push mov (bad) rex.XB (bad) xor mov cmp cmp (bad) (bad) pop pop in fisttpl pushq lods fstpt xchg stc outsb jg pop push xor stos (bad) cmp adc scas mov stos sub out pop out push pushq jbe mov xor xor sub (bad) mov mov (bad) xor addr32 data16 pushfq and (bad) xchg mov fnsave (bad) lods or pop mov mov push and mulb jae mov sub mov pop and movslq fistl icebp jrcxz jb cmp cwtl (bad) or mov callq rolb outsb jnp int rex.WR xor pop cmpb (bad) mov (bad) jge cmp pushq (bad) rex.WRXB in imul (bad) mov cwtl ds fisttpl callq fistl pop clc cmp and ljmp cmp pop pop rex.WR fwait and cld imulb xor jno rex.B ds rex.W sbb cwtl retq xchg in pushq add imul fistpl add jns fildl fcomp rex.R and (bad) in and mov rex.RXB (bad) or and xor loop mov mov (bad) sarl cld out xchg (bad) cmp fcomps push rcrl pushq adc xlat mov loope push sbb je cmp (bad) jmpq and cmc fbstp subb cmp (bad) cmpsl lret xchg fisttpl jae push cmpsb je rex.WR pop fistpl push jno pop outsb pop xor scas xchg mulb movabs xor or push hlt rex.RXB (bad) sahf in insb cmp (bad) pop cmp mov pop (bad) out icebp (bad) jo cmp sub jne jnp out fisubrl ss jmpq movabs pop mov or sub in mov rex.RX lea jnp lahf pushfq (bad) and popfq or mov push mov lods (bad) push stos cmp (bad) imul neg cmp (bad) jno fnstenv fidivr out fisubl jns test rex.WB rex.R cltd (bad) movabs cmp stc mov (bad) movslq (bad) xor movabs fwait rex.XB ficompl xor (bad) testb imul xlat fildl pop mov nop callq pop cli movabs sub ds jrcxz hlt sub fstps jo or jmp push sbb (bad) pop (bad) (bad) repz cmc sahf jnp push rex.WRB add fmull xor jo rcrl rex.WR or (bad) movsb fstp insl (bad) lahf jo rorl fldt add ds imulb push cmp xchg jrcxz lock xor pushq sub retq rex.WR mull (bad) adcl or (bad) int3 pop pop xchg cs fildl out fistpl (bad) (bad) nop fildl and sub neg (bad) sbb mov or (bad) fldenv jrcxz lods jp fcmovnu add adc (bad) int3 repz rex.WRX adc adcq (bad) fimul loop jp mov sbb testl pop scas rex.RX movabs rex.RB ss sarl cmp xchg fcmovne or mov rex.WRB movslq ds insl push scas rcrb movabs pop (bad) or stos loope faddl subl jrcxz sbb mov rex.X and fstpl hlt fildl (bad) xchg mov lret mov rex.R mov jnp lahf leaveq repnz (bad) jmp sbb rcrl std cmc fmul xchg (bad) mov imulb fcmovnb cmp rex.X (bad) int imul xchg adc pop adc movslq xor jnp rcr sahf fildl pop (bad) (bad) xchg notb or stos push mov (bad) (bad) jbe insb (bad) cli push lea punpckhwd or or pop lret xchg loope hlt ficom shlb (bad) mov fcmovnbe jp sub pushq repz sti cmp mov mov sub movslq in pop out movslq fldt outsl (bad) leaveq (bad) xor pop (bad) in rcrl sub mov lret or (bad) pushq fisubr cmp rex.WRX mov and pushfq add in in jge (bad) sbb (bad) leaveq rex.WRX rex.WR fwait pop mov rex.WR rex pop fildl lret rcrb adc nop (bad) mov gs mov out fistl xor cmpsl mov icebp mov xor outsb iret or fcompl fucomip mov (bad) (bad) fcmovnbe (bad) ss rex.WRB push (bad) rex.B (bad) (bad) (bad) sub notl cmp jg fxch loopne xchg rex.RX rex.W mov (bad) mov (bad) js (bad) and pop pop (bad) leaveq mov xchg push rex.WR fs xor mov fstpt (bad) jrcxz and xor fistpl int (bad) in or pop cwtl stos rex.RX jle movabs outsb mov imul (bad) push movabs sbb rex.WR push shlb lahf rex.X fistl (bad) test and jnp out rex.WXB ds push mov rclb pop add xchg mov lret (bad) mov mov (bad) jno jns fnstenv pop (bad) nop loope retq (bad) (bad) jae or mov or push jbe cmp adc and (bad) int3 mov es jb add mov rex.W rex.WR cltd xchg insl (bad) pop (bad) sbb jne sbb repz ficompl or int (bad) shrb mov je movsl sub cmp or rcrb cmp rex.R ss jns sbb mov mov sahf int imul rcrl (bad) repnz mov insl jge fcmovnb rex.RB or fidivr rcr je (bad) test movslq and (bad) sbb out jb xor mov rcrb xchg sarb fwait adc push pop scas mov sahf (bad) jnp imul jmpq or sbb xchg movsb add add rex.XB imul loopel (bad) rex.RB pushq mov jmp sub jl mov mov scas loopne pushq insb (bad) divb or cld push mov mov adc and jle xchg rex.WB and rex nop mov jg sahf lahf cmp (bad) insb fisttpll sbb and (bad) (bad) or pop mov jge test sti jae (bad) (bad) (bad) jnp out ja xchg push (bad) retq cltd add pop mov push fldl pushq jnp sbb out movsl sub sub add sub and jae fiaddl xchg sti (bad) jae (bad) and ficoml sub xor (bad) or (bad) (bad) pop rcl rex.WRB fiaddl out (bad) sub js fstpt mov fucomi rsqrtps sbb sar mov (bad) add (bad) movabs movsl and mov insb cltd cmp and cld outsb pop mov (bad) icebp mov xchg rex.RX push push movsb jnp adc (bad) sbb rorb in xor (bad) pop repnz jle (bad) mov mov xor gs and cmpsb scas pop xor rex.B xchg jmpq mov (bad) addr32 xor icebp in movabs jl and decb cmpsb sub mov rex.WB mov rex.RX mov shrl rex.WXB cmc (bad) es xchg addr32 fcmovnbe vucomiss scas cmp clc rclb subl add and fildl fnop scas mov jbe (bad) cmp mov push stos imul sub cmp out stos (bad) (bad) (bad) fwait or js lret jge (bad) roll rex.RB or cmpsl scas fwait int3 and out pop sub cmc gs pop lods xchg (bad) cli movabs orl rcr (bad) mov (bad) pop mov pop sub and fistpl rcl cld mov rex.R (bad) rex.WB rex.X (bad) fs adc insl (bad) or shrl pushfq movslq xor test movabs (bad) pop in loopne out stc sub xchg push icebp push (bad) mov (bad) cli lahf shrb lods jp stc xor pop or add insb xchg cli subl mov jmpq iret nop jrcxz scas rex push outsl je (bad) pop insl pop stos lods out incb (bad) pushw xchg cli test sbb (bad) test rex.WRX test test rex.WXB mov mov mov loop jb sbb sbb (bad) cld cli cs frstpm(287 adc fs or pop out xor out push (bad) ficompl adc or ds push scas enterq shlb rex.WR and cmp int (bad) fcomps xchg xorl sbb mov pop outsl pop test sti nop push (bad) (bad) mov enterq fstpt or rex.WX xchg cmp icebp jb fstpt iret sbb or xchg mov cmpsl lret xchg xor movslq sub jno lods sarl std (bad) cmp xorl fcmove mov fisttpl mov in sbb (bad) lret sbb add (bad) lret xchg cs xchg rex.WB jne cltd movabs (bad) rex.WXB int (bad) fstpt xchg jl or int3 fldenv fwait loopne lahf sub stos (bad) pop add pop add jg sbb addr32 pop adc add (bad) jbe lock rex.RXB repnz (bad) lret adc int3 retq jg mov and push (bad) scas mov xor out xchg test test retq ss pop rorl not pop repnz adc and and fcmovnu or jmpq movabs lods gs pushfq sahf (bad) mov out (bad) fistl rex.WRB (bad) xor pop mov sbb cli nop retq es clc out rex.XB ds xchg adc ss pop cmpsl (bad) je movabs add sti sub mov fcmovu or rex.W rex.X jns (bad) pop movsl in pop rex.WB retq (bad) fdivrl in push cltd pushfq pop (bad) lea xor repz xor std xor sub loopne sbb fistp stos (bad) pop in jae iret sbb outsl out fldenv add pop xor sti xchg jns (bad) sub xchg pop rex.W out sub rex.WRX (bad) mov sti shrb (bad) (bad) repz movsl adc cltd test std sub jo mov rex.WRB out test jmp sub int3 cmp stos add stc push jbe sub push and rex.R rex.W sbb int3 fimull pop jg jle stc sbb cmp addl push imul jle pop (bad) jo callq nop (bad) (bad) (bad) outsl adc push xchg retq iret xor movabs push xchg xchg pushq repnz (bad) xchg rex.WXB flds xor test sbb retq mov pushfq out cmp loope movabs fwait sub or and (bad) hlt in mov fldt cli sub rex.B sbb nop (bad) jl fistpl icebp fsubl rex.R lock int mov (bad) pop outsl adc rex.XB jl (bad) sbbl fistpl mull pop pop (bad) and (bad) lock lret icebp fistl retq push subl fisubrl and ficompl (bad) sbb push mov (bad) or insb jge int3 fisttpll test fs (bad) (bad) fcmove icebp fnstenv pop rex.RB lret in fmull jge or jp lods ss fldt negl sti push fwait pop movabs (bad) rex.R and fild and sbb (bad) cmp or xchg mov mov (bad) retq nop push (bad) xchg jae repnz sbb add std retq sahf movsl sbb adc fbld xor mov lret xchg stc and (bad) enterq repnz flds frstor mov out ds rcrb loop push and add add mov std in lods (bad) (bad) (bad) xchg stc divl fwait pushq adc or data16 mov sbb lea movslq (bad) repnz (bad) xchg push cli (bad) fistpl (bad) jo movabs (bad) adc add loop mov shrb xor xor rex.WB pop (bad) loop mov test jmp repnz movabs rcr data16 outsl and out (bad) adc push pop xchg test test fcmovnb jb cld cmp lret (bad) fcmovnb imul fistpl retq sbb int rex.WX fisttpl rorb fucomi pop test xor sbb pushq fwait rorb imul rex.WB rex.X sub fildl test addl cld mov clc sbb xchg mov and pushfq cmp rex.B scas lods pushq fs loop xchg xchg stos repz cmpsl cmpsb stos notb jns lret jae fisttpl cmp cli stos loop (bad) data16 pop out cmpsl mov add fcmovnb ja mov xchg pushq jo in or jne jb fildl roll cld imul adc (bad) pop retq fs data16 ds jmpq (bad) rex.WXB test sub cmp xor hlt xor out movabs rex.WRX fldl hlt lret loope (bad) cmp add add rex.WR mov adc test movslq mov xor and fcmovnu pop retq imul scas addr32 rex.RXB fistpl jbe,pt push rex.WXB pushfq ja outsl invd pop or mov fadds mov outsb ds out fldt cmp sbb ss movabs add (bad) rex.WRB pop orb jrcxz or (bad) lods push push stc idivl gs xchg cmp sahf mov pop and retq jmp cmp sarb jb (bad) rex.WB pushq movsb in mov retq rex.XB out xor rex.WRB rex.WX cmp (bad) imul and sahf or mov (bad) pushfq es hlt rex.B test movsl mov rex sarb std rex.B xor and (bad) ds retq jae cmp lahf fwait (bad) fisttpl sub test sub cmovns in scas imulb lret (bad) (bad) (bad) xorb push fnstcw push jnp (bad) xchg hlt (bad) cmp cmp adc rex.WRXB mov cmpsl cmp (bad) lahf rex int xchg jge (bad) mov xlat mov add sub pop (bad) sbb subb out je jmp rex.RB cmpsb (bad) fcomps sarb or fisttp xorb in mov movabs scas cmpsl fprem insb rex.RB xchg (bad) fistpl xchg jns lret pop and push rex.WRB pop (bad) outsb and rex.WRXB jae fcmovne add cmp (bad) mov imul push jne add pushfq push cmp (bad) pushq (bad) shrb lea push mov (bad) insl or (bad) stos icebp (bad) loopne in (bad) jmpq ds mov (bad) (bad) ficom mov mov cmp lret addr32 xchg sub (bad) retq and jmp sbb jle and (bad) xchg lret and cmp rex.R test shlb rcr mov and sbb sbb jle (bad) std enterq lret outsl jb mov sub fistl xor jmp js xor test cwtl fistpl cltd loop test (bad) xchg cmpsb movabs (bad) callq xchg loopne sub cwtl jae lret loop (bad) sbb add jle mov sbb sarl cs sti mov (bad) push cmp (bad) movabs (bad) (bad) fildl stc add rex.R rex.WB imul lods cli fstpt std xchg mov xchg pop rex.WR fs out movabs cmp lahf mulb cmp loop mov push rex.WRB outsb movabs mov fstpt mov (bad) ds pop mov in (bad) pop rex.XB imul pop (bad) (bad) mov int fdivrp addr32 test push add and rex.WRB out fsubr imul (bad) xchg fistpl jnp out (bad) pop jg jrcxz pushq rex.WX mov or (bad) rorb adc popfq mov test (bad) mov pushfq rex.WR rex.X mov lods mov mov fcoml mov sub fildl (bad) cltd test rex lods add lods mov (bad) rex.WRXB fisttpl cwtl rex rex.RXB fcomi mov mov pop callq lahf add fwait (bad) mov stos rorl (bad) xor add cltd pop imul cmpsl int3 jnp rex.WX lock sbb pop fimull sbb rex.W xor (bad) loope fldt jrcxz scas xchg fistpl cmp repnz subl sbb (bad) jge mov retq rex.WXB stos xlat push cli (bad) push mov ficoml pavgb imul repz (bad) (bad) test adc cmp es subb push fldt rex.WB pushfq fisttpl (bad) (bad) in outsb pop fistpl mov (bad) movabs jno (bad) data16 jae out add out pushq xor sub outsb cmpsl sub cwtl sahf (bad) rex.XB mov rex.RXB and rex.R shlb mov (bad) in pop fisttpll rex.RX lret (bad) pop push scas add (bad) (bad) jrcxz mov imul fadd and rex.WRB (bad) adc out jp pop add mov jne xor sbb movabs ds (bad) movabs imul xchg fcoms mov hlt or mov scas (bad) mov add retq fildl cmp jo sbb fistpl rorl (bad) pop jge adc (bad) cmpsb cli int rex.W rex.WR fldenv adc (bad) lret (bad) and repnz outsl pop cmp xchg enterq (bad) (bad) xchg cwtl fimull sub fidiv retq mov mov xchg (bad) jno push leaveq xor cmp adc imul push mov cltd pop jrcxz jnp loop out ror xchg out icebp out pushq jg (bad) jmp mov push mov and fwait cs mov mov adc int3 rex.WRX sbb or rex.WX ja pushq add jae rolb pop movsb fistpl or in fucomi and or cli fldt jmp xor mov (bad) or xor out js movslq jge icebp (bad) (bad) enterq mov (bad) sbb insb or jnp sbb mov cmpb lret cmp (bad) pop (bad) lods sbb jnp cmpsb sahf or retq mul (bad) jp (bad) mov cmc fstpt popfq iret (bad) fcmovnbe sub xchg pushq outsl pop movabs lret xchg pop jp cmpsb pop in mov xrelease sub roll and repnz rex adc or rcrb sbb loopne adc (bad) push (bad) pop add (bad) cmpsb (bad) xor popfq icebp cmp cmp ja int jrcxz loopne add pop test mov (bad) mov sbb int or (bad) movsb mov icebp nop xor (bad) hlt rex.WRXB (bad) cmp mov lods (bad) sbb push pop mov and add sbbb mov or and (bad) sbb mov pushq jo rex.WB (bad) in sub mov (bad) fcom fwait iret sarl movl retq pushq rex.X in (bad) or scas cmp andl loop lret sbb or mov mov fstpl (bad) fidiv adc imul scas (bad) int3 and in (bad) jmp fidivrl ficompl mov (bad) fidiv jmpq cmp rclb jnp fiaddl mov jb jo (bad) pop repz out std pop sub vpaddsw jbe,pt out (bad) xchg (bad) adc or icebp pop xchg pop rex.WXB ljmp (bad) adc jmp rex.RB callq fisttp rcr (bad) movsl lods jl and out sub mov (bad) and (bad) movslq xchg movsb fadd xor xchg rcll lea cmp rex.X jne fildll pushq (bad) std pushfq es in (bad) cmp movsl rex pushfq add and (bad) (bad) jb mov je imul hlt fs fcmovb xor mov scas xchg xchg rorb rex.W sub mov insl xchg rorb (bad) cld jg pushfq push cwtl push mov (bad) mov adc rex.RXB (bad) sub addr32 out cld (bad) ds sti rex.XB test xchg jns mov jnp sbb push shrl fsubl sbb stos fcmove (bad) jg stos sbb outsb mov fwait rcr or je fs pop neg (bad) xchg movabs pushq rex.R repnz (bad) rex.B lods push mov faddl fisttpl sti rcrl add add xor mov rex.WRXB test (bad) movabs pop rex int3 xor sbb cmp imul add rex.WXB xor pop clc iret rex.WB ds (bad) mov mov fistpl pop movabs mov jrcxz out cmp push ss fcmovnu rex.WX pushq mov callq (bad) (bad) es sub ja int3 pop (bad) leaveq test movabs addps shrl (bad) enterq je mov (bad) iret cltd or clc sub (bad) push retq fbstp lods enterq mov cld out rex.WX lahf (bad) fldt enterq and rcl jns shrl jb movsl pop fldenv sbb cs rex.WR fisubr repz pop addr32 jmp loopne mov cwtl fstpt xchg loop fstpt cmpsl jle (bad) gs lret adc clc pop insl jle xchg and rex.RX sti mov jne push ja (bad) push mov (bad) lret fnop sahf mov pop rex.X adc stos jle pop or fisttpl cmp adcb movabs cmpsl (bad) addl (bad) popfq fldt mov add xchg movabs in cmp lahf fcmovnu mov divb ds sbb xchg pop mov xchg rcrb pop mov rcrb lods fistl jb test (bad) (bad) (bad) fdivr fstpt (bad) pop incl loopne fistl int imul or mov mov mov lods adc mov jg xor jb pop mov rex.WR xor in iret push enterq iret (bad) fdivrl fldt (bad) or (bad) rex.RX (bad) pushq mov mov sub imul jns xchg (bad) or sub mov fcmovne sysenter push ds pop cmp clc xor cmp fimull pushfq mov and (bad) orl fistl xchg pop (bad) xchg push jge rex movsl pop fstsw fcoms cld (bad) sbb xchg or mov mov jrcxz,pn (bad) hlt pop gs (bad) rex.B mov fstpt test loopne pop stos gs (bad) xor nop jno jle cmp (bad) xchg adcb xchg add movsb adc and lods mov rex.WX adc fcmovnb movabs outsb mov repz (bad) pop out sti imul enterq rcrl movsb sbb add rex.X popfq nop fcmovnb (bad) fucomp rex.WRXB decl fmul xor sbb int3 imul (bad) push push fsubr loope jo push out mov sahf (bad) insl fwait outsl test notb imul pop data16 add shll out sbb pop rex.XB (bad) stos sub (bad) retq fs in int3 mov mov std add fildl rex.WRB cwtl data16 iret hlt scas push (bad) loope pop es (bad) enterq xchg push fildl shlb fsubrs adcl stos xchg and fldt cs mov in shl pop imul rex.B and (bad) maskmovq testl pop mov (bad) sbb imul jo (bad) in push add pop or sub (bad) mov rex.WX imul popfq xchg sbb jns fistl stc movsb addl mov (bad) fstps outsl (bad) cmp rex cmp sub rex.X retq jmpq sahf cmp in cld sahf jmp or stos rex.WR rex.WX pand mov mov int3 fcomi shrl rcr lods rcll (bad) sub (bad) cmp mov pushq sbb adcl pop cmpsb jl,pn idivl rcrb (bad) ds jbe sub out subl jns (bad) push shll jmp sub in mov (bad) mov mov icebp lahf sbb stc callq push data16 sbb xor out int lods cmpb pop fldt mov jl pop in loope cmp rex.WX cs add sub and mov sahf ficom rex.RB ss jg jmp movabs xchg jnp cmpsb add pop jno insb sub movslq mov (bad) scas push jl in mov sbb add and cmp or xor add imul rex.WRX mov add pop cmp mov outsl or jmpq in (bad) mov (bad) and pop sub fsubrs (bad) sarl rex.WRXB (bad) mov fcomi or stc test pushfq add shrb (bad) test mov (bad) pop icebp mov rex movabs (bad) jrcxz jmp sbb add fistpl out (bad) (bad) push rex.B lods cmpsb jnp imul (bad) (bad) push leaveq repnz rex.W pop and adc mov icebp fisubl jmp mov (bad) movabs add (bad) xor push outsb jg jl pop pop mov add push fstpt movabs adc jbe pop mov and lret add fcmovne adc movabs jge jb out imul or in sbb jmp loop push fistl ja (bad) popfq ds (bad) push rex.WX imul rex.X (bad) cmp sbb (bad) xor jbe pushfq rex.WXB fistl push lahf cmpsb pop jmp (bad) fucomi sahf rorb xchg rorl fistl retq mov scas push cmp fwait mov and push rcll out push pushfq hlt xchg rex.WR jne mov fimul jb xchg (bad) cmpb mulb xor fistl mov imul (bad) sbb or in rex.WRX fistp sbb nop jno adc add sti movsl addr32 and scas fldt jb movslq movsb xchg (bad) rolb (bad) mov (bad) jmp sbb push hlt xchg in int jnp push rex.WB (bad) xchg push imul (bad) retq mov jmp test and cmp fisttpl cli shrb mov mov icebp popfq mov add es out adc or je xor stos in roll ljmp (bad) cmp fildl stc pushq scas fstpt fidivrl outsb imul sub loopne push pop fisttpl add out (bad) (bad) push (bad) and imul mulb repz popfq fildll xor xor sub and push and (bad) fisttpl shl xor mov rex.WRX mov (bad) (bad) fsubl (bad) cs (bad) pop xor cmp mov jmp (bad) lret rex add frstpm(287 add (bad) xchg setp pop mov rex.X fcmovnb movabs (bad) addl sbb cltd clc xchg test shlb sbb pop retq jnp int3 or test cwtl add data16 (bad) rex.WX mov movabs cmp xor sti xchg clc jmp retq sub std rex.WXB ss test rex.X mov rex.RX sub push movabs ja callq int sti repnz push add pop mov jmpq jle out in cmp xchg enterq cmp push adc movabs mov test cmp mov loopne and (bad) test adcb (bad) outsb (bad) (bad) adc fildl (bad) or jbe rex.X push cmp cmp fnop subb pop (bad) movsb movabs pushfq rex.R cs push cmp pop mov sub sbb pop je sti (bad) nop fldt lahf add rex.RXB rex.R decl pop scas imulb add cmp mov jle cmp iret outsl stos imul pop mov int jmpq lods jnp jnp (bad) mov (bad) movabs and mov fstpt rex.WRX lock pop pushfq (bad) shrl (bad) rex.WB sbb (bad) push (bad) rex.WRB (bad) in sbb rorl vcvtps2pd add add xchg iret (bad) sbb xor sti js (bad) (bad) jg (bad) sub cmp int pop insl sub xor repnz mov cmp jge pop retq cmpsl mov stos lahf clc lods jmp rex.WR fildl rex.RB js (bad) sbb push adc sahf rex.R fdivl xchg jmp in rex.WRB or (bad) sub out loope mov pop mov xor leaveq (bad) loopel jle sub (bad) rex.WRB fisttpll je gs pop xor xchg (bad) fildl mov xchg pop nop jo sbb lock rorl jl pushq hlt adc (bad) test std fldt push insb or (bad) or pop cmpsb fldt jb loop cwtl fbstp fstp cmp mov jle add mov sub popfq sbb rex rcrl push (bad) sbb pushfw (bad) leaveq cmp push (bad) cmp sub out jb nop adc cld sub or fisttpl rex.WRXB je,pn out (bad) (bad) (bad) (bad) mov fisubr test loopne rorl retq addr32 test mov pushq and mov add pop fabs (bad) cmp or (bad) cmpsl rex.X pop cmp pop movabs add (bad) movabs (bad) pop or insl icebp (bad) clc lret neg mov out fstpt or cltd (bad) test jo (bad) and push (bad) xchg movabs mov cmp jne fcmovnbe mov lahf push mov mov jnp (bad) fdivr pushq fninit loop (bad) jle push popfq pop test imul sub jno and mov rex.R loop add adc (bad) and xchg out pop pop and repz pushfq cld rex hlt add rex.W adc fldt xchg and jo fistl jle int (bad) imul (bad) sub push push sti fsubp xchg sbb mov retq (bad) sbb (bad) fcmovnb fsubrl mov mov movabs (bad) rorl rex.R fwait lods sub or icebp loope or in and (bad) rex.W fwait jbe lock repnz fcmovnb (bad) and and mov mov out pop movsb pop xor (bad) loopne push imul (bad) jmpq lea (bad) stc nop cmp (bad) stos leaveq js (bad) cli mov push (bad) pop lock fadd fisttpl and (bad) mov (bad) fstpt xacquire movabs (bad) cwtl (bad) cmp (bad) cmp rex.WR cmp add cli out mov (bad) (bad) (bad) push cltd movabs xor cmp retq pop add adc mov jne lret fstps out sub xchg and or cmp in (bad) pop or (bad) xor rcrl stos xor lret jae,pt fldenv (bad) repz xor xchg (bad) cmp mov decb push (bad) mov pushq pop xchg rcr sbb int3 add rex.X and pushfq divps jae fmulp xor es fwait cmp (bad) adc and fldt outsl rex.WRB (bad) cmp rex.RB jb lret rex.WR outsl and rex.RX insl (bad) repz in movabs imulb xor decl mov lret pushfq rol jo movsl int3 (bad) sub fwait jnp popfq mov pop lahf (bad) sbb int3 fdivp adc or adc in jnp rex.RXB xchg push scas jl add mov lahf movslq fistl jo rex.WRX retq (bad) mov (bad) cmc cli or pop (bad) in xor pop fdiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) pop (bad) or clc rex.WRXB rex.WXB pushq push sbb or rex.WRB (bad) (bad) and push push sub mov push xchg pop mov sub adc fstpt (bad) rex.XB pop adc fistpl mov and push (bad) scas rex.R rex.WXB rex.X loope cld movq repz rex.WRB rex.RX lahf (bad) (bad) loope (bad) push or pop or stos fs in adc (bad) stc sub xchg addr32 (bad) sarl rex.WB fildl loop rex.WRB rex.WRXB fstpt out fldt add je fimul lock fcmovnu rex.WX (bad) pop push or mov rex out pushq in stos (bad) (bad) cmp cmpsl (bad) mov sub rex.WXB adc sbb sbb xchg mov pop imul sub sbb push and movabs pop test movabs jrcxz adc rex.WRX loope sub (bad) add mov cmp xor outsb xor lret iret sub (bad) test add lcall push cltd (bad) and pop mov (bad) js sbb sub loop test fs roll jne mov pop adc xchg sbb push test loope jl jle pop in bnd pop xchg lahf or push sbb or mov fbld (bad) addr32 (bad) movabs test sub test leavew push add (bad) jne out xor incb lret (bad) retq mov (bad) sbb ficom movsb insb fwait or mov pop pushfq jrcxz sbb fs rex.WRX rex.X (bad) rex.WB hlt imul mov loopne mov pop popq es pop or (bad) rex.WRB mov movslq rex.WRXB xor (bad) fiaddl pop push xchg frstor movsb in retq mov (bad) and or xchg je out sbb movb subb idiv cli xchg jg or xchg (bad) pop lret xchg pop rorl (bad) (bad) (bad) pop jns out stos (bad) pop (bad) (bad) and sbb rex.R test mov xchg sbb (bad) jno (bad) add (bad) mov retq cwtl js mov xchg ror stos pop pop test (bad) outsb out test enterq pop (bad) icebp je shll shl mov mov (bad) mov jnp jge jo fwait int3 mov roll fstl (bad) loopne (bad) test pop hlt (bad) in movslq (bad) outsb fnstcw pop adc pushfq mov loopne xchg jnp cmpsl cltd test rex.XB jrcxz (bad) push (bad) pop mov rex.XB rex.WRB cmc jo mov leaveq fimull jg stc fdivrs (bad) rex.WRX rex.XB rex.WRXB (bad) (bad) repnz (bad) xchg (bad) (bad) loopne rex.RB sbb (bad) lods test (bad) (bad) sbb (bad) and add mov mov rex.X sub mov xor outsb mov mov xor mov subl sti rex.WRB shrl or xor jmp lret push mov mov mov rex.WR jae mov sbb pushq pop pushfq xor (bad) imul leaveq jne fstpt (bad) push pop out push fcmovu xchg int3 mov rex.WX movslq mov (bad) adc rex lea xchg kxorb (bad) fisttpl xchg sub jp lahf scas (bad) (bad) sub movslq mov sub rex.W retq cmp fcmovu rex.XB fistl leaveq mov (bad) rex.B jno,pt jb fcoms ss adc stos cs lock cmp jns movabs (bad) push retq sub pushq stos cltd pop sub (bad) imul mov sbb fldt test invd fisttpl in fucomi (bad) out rex.WRX test repz andb in rex.WXB orl lea rex.WR push fcmovnb fldl pop int3 fsubp insb fwait fs xor xchg movabs mov sbb push mov sbb fwait (bad) cmp movsb push pop mov insb cmp loop fistl test std stc clc add add jmpq iret fs jnp mov (bad) (bad) ss rcrb pop ror and movslq and fnop adc in jb pushq (bad) sbb retq rex.RXB sahf rex.RB rex.W (bad) sbb or add je insl (bad) fisttpl sbb rcrb xor (bad) jae jne and push lret faddl sub (bad) mov cmp pop rcrl (bad) in rol stc fistl (bad) (bad) (bad) mov repnz and (bad) movslq (bad) jp push fwait outsb pop push xor rex.RX pop adc movslq cmpsb xchg and push fistl pop jmpq mov (bad) sbb fidivr rex.XB add (bad) fildl (bad) cmp fcomi jle jl pop push and std icebp hlt sub mov mov and pop mov rex.WRXB (bad) pop xlat push (bad) movabs (bad) enterq stos js (bad) cmp retq orb rex.RB in cmc sub cmp (bad) and fcmovnb cmp and out (bad) (bad) add mov loopne retq adc data16 icebp xor (bad) movsb and add sub ss (bad) popfq scas xchg (bad) ja push in cmpsl int3 rex.RXB xrelease and (bad) hlt in fsubr out (bad) mov jl or pop sub pop std retq rex.XB pushq (bad) jmp jb addr32 fucomi pop push rex.WR repz fcmovnb mov jg pop xchg mov cmp and rex.RX mov mov fwait pop jmp rcrl (bad) icebp retq jl (bad) cmp fwait xchg stos loop fcmovnb mov mov sbb cld and (bad) int mov scas sub fcmovnbe adc lock sbb movsl jnp mov loope adcb mov xor (bad) mov sbb jle cltd (bad) int3 jle pop (bad) push adc (bad) push imul (bad) pop cltd rol hlt rorl pop leaveq rex.RB movabs xor lock fiaddl insb (bad) (bad) repz or rex.XB sahf and mov fcom (bad) (bad) loop and test rcll pop xlat fwait push (bad) fadds pop (bad) mov mov (bad) jnp mov sub cwtl mov xor cwtl add mov or and or f2xm1 in (bad) (bad) in movsb (bad) imul insb push out icebp sub cmp movslq jnp loop retq mov (bad) xlat vpmovmskb adc cmp rex.RB (bad) mov (bad) icebp mov out or test in fstl or (bad) pushq jrcxz nop (bad) data16 cmc xchg sub jrcxz add add (bad) jne stos in rex.XB rcll movsl xchg push push fwait pop rex.B or fs out mov mov rex.WB (bad) adc fcoml mov rex.WB fwait and adc or (bad) lock rex.W mov imul jno (bad) rex.WRB mov sbb lret mov sub jae pop push xchg add pop mov (bad) pop leaveq mov mov xchg out add pop push push jbe iret sub (bad) (bad) rcr adc outsb push andl in xor pop mov lock rex.X jmp sub (bad) and mov mov clc movslq es and cmp (bad) (bad) mov pop xchg mov scas cs fwait cltd test jnp (bad) lret push out pop (bad) in iret ds sbb pushq out cmc (bad) (bad) fisttpl sub mov sbbl scas je jns loope (bad) mov xor push xor ficom int3 repz fstps clc (bad) imul (bad) rex.WX adc rex.WRX callq test sbb sti clc fnstcw rex.XB jb or test xchg hlt sbb or mov fwait rex.WX lret hlt fst sub fiadd fwait xchg xor hlt (bad) jge in (bad) sar jmp mov pop and xchg or xchg (bad) int3 lret sub rcll xchg pop (bad) sbb xor scas jno movslq addr32 jp fwait loopne or out push pop mov in enterq or (bad) outsb cwtl gs iret or rex.WX (bad) fwait cs sbb sub (bad) fnop rex.WRB data16 movslq mul pushfq callq (bad) rol (bad) pop (bad) (bad) (bad) mov stc loope rex test lock cmp (bad) cmc rex.RX movsl (bad) (bad) sbb ss cs out stc xchg fucomip jo adc outsl mov cld repnz test shl xchg ficompl adc js (bad) rex.B mov rex.X incl sub insl jo sub jae mov mov push cld enterq pop (bad) push pop xor xor fsubs lock lods pop (bad) jb movabs mov sbb test outsb imul mov xlat ja gs out lret adc popfq pop (bad) hlt adc jns mov rex.WXB mov loop out (bad) xor xchg or rex.WRB rex.WB lock std retq stos retq cmc enterq cmpsb add clc cmp rex.WX sub (bad) clc mov xor jne or add (bad) cmp (bad) mov push push sbb mov mov pop fwait in in (bad) jmp pushfq (bad) sub rex.B jp pop mov insl xchg lods jmpq jae push jne sbb sti jnp out adc mov fwait and jmp out mov insl (bad) out (bad) rex.WB jbe push pop fisttpll (bad) fcmovnbe std mov repz movslq jne (bad) adc scas fbstp xor adcl push sub rex.RB stos xchg or and adc sarl fsubl ss ja rex.X in out fwait movslq mov mov cs add sub push add iret outsl pushfq cld and (bad) jns insb test cmpsl popfq mov sahf mov jp jb int cltd callq rex.W (bad) mov adc (bad) sahf ljmp xlat jo loope (bad) icebp (bad) cltd xchg cmc (bad) (bad) (bad) test jnp addr32 cmp mov std and rex.WXB repnz fs retq add (bad) or out shlb xchg subl in sub xor popfq (bad) xchg scas addr32 sbb lock adc (bad) callq movabs mov and and sarl ja cwtl jrcxz loope sbb movslq or sub (bad) (bad) (bad) (bad) add adc mov cmc mov fisttp (bad) cmp fwait and mov in jge add pop lea cld sbb pop repz cmp or mov test (bad) rex.WXB out cwtl test insl lods (bad) (bad) loopne iret test (bad) cmpsl pushfq (bad) (bad) iret shlb rex.RX or rex.WR fimull je xchg fwait mov gs ficompl cmp imul retq pop pop sbb xchg in mov movslq addl (bad) decl (bad) mov fdivs rex.WB je rex.RXB or rex.RXB fidivrl push jle push pop xor sbb (bad) sbb rex.XB rex.W movabs movsl jns ficomp xchg pop gs mov (bad) add add adc (bad) xchg loope pop (bad) hlt jb jp or fistp jmp (bad) loope mov xor pop icebp mov jne sbb fistp jge test jrcxz ss jrcxz xor (bad) (bad) sub (bad) push xchg sahf mov mov (bad) (bad) mov enterq in jle cmp pushq sub jrcxz add xchg rex.RB or xchg jmp test xbeginq mov xor enterq add imul pop lret (bad) movslq fldt out lret gs jb rex sbb add cmp (bad) push push cs fmuls push xchg fs fisttpl mov cmp pop push fildl pop sahf retq (bad) test je xor leaveq fistl cmp fistl and retq mov or fisttpl sub rclb mov pop stos (bad) rex.WRB shrl nop mov (bad) add pop lods sub ja rex.WRB iret jne (bad) jp movabs jo rex.XB (bad) push adc hlt sahf int3 mov in retq shll cmp or in push (bad) mov sub (bad) stos fsubs scas rex.R scas pop stos addl loopne leaveq push fistl sti (bad) sbb jns lods jno jp in (bad) stos retq clc lahf (bad) mov movslq fildl mov movabs mov xchg ss mov cmc (bad) icebp sbb pop mov jmp fwait rex pop mov xor xor stos jge cmpb imul (bad) jmpq fistl pop movb adc pop cmp scas jae (bad) in push jnp add xchg out pop cmp mov scas (bad) (bad) in popfq leaveq mov add hlt es mov imul cmpsl (bad) rex.WRX mov jl mov repnz sahf rex.XB (bad) fisubrl mov sub xchg push sub rex.WXB push shrl (bad) pop mov jns sbb mov (bad) (bad) (bad) (bad) retq fcmovnu xchg (bad) in loope rex.RXB push jl jg test sub test cltd sub or cmp fcmovnb pushfq test adcl jne (bad) (bad) xor movsb pushq mov fcoms (bad) movsl jge movsb xchg outsb sti jl int3 jns movabs (bad) scas pop sbb adc fstpt cli vmovsd jns fcmovne xor adc retq (bad) xchg adcb xchg jnp,pt cmp (bad) test and mov (bad) cmp pushq jnp rex.X (bad) (bad) movabs push stc fs fcmovnu mov add mov mov cmp pop cmp sub or sub fbld lods cmpsb (bad) sub jae hlt (bad) sbb xchg pushfq retq out test cmp fldt xchg or out mov testl ja push rex.WR incl mov rolb fstpt sub jp stos mov xchg or cmpsb jne fninit mov push pop rex.RXB lock test fs int rex.WXB fs mov rcrb (bad) add mov iret loop movslq xor rcrb xor sbb lods adc sbbb cmp mov std movsb addr32 lea scas sub scas jle push xor stc add sbb pop iret (bad) sbb mov push (bad) push mov jle pop (bad) popfq (bad) mov rex.WR pushq mov in outsl push sub mov (bad) fisttpl (bad) loope imul jae cld fmuls adc fildl cltd scas (bad) lods pop stos leaveq sahf xchg lret cmp (bad) test sub or jnp pop fistl scas (bad) cmp rex.WRX imul fnop out adc (bad) loope rex.RB sbb fldcw adc mov fisttpl and addr32 std pop mov repnz jb ja pop (bad) rex.WXB rex.B retq jge mov and (bad) stc (bad) (bad) and rex.WXB stos (bad) rex.XB imul (bad) cmpsl xor lret lahf lock movabs mov idivl mov fistpl insb stos xlat cmpsl (bad) mov push adc sbb push sub push sub or movsl out cmp jmpq lock xor lret (bad) sub in std (bad) int3 rex.XB mov (bad) clc (bad) (bad) sbb fisttp adc add (bad) ficomp enterq fwait xchg rex.WRX pop (bad) cli rex.WRB cmp mov (bad) fs mov (bad) sub movsl lahf (bad) mov std pop rcrb or cmp (bad) (bad) fisttpl cmc loop int pop rcl (bad) (bad) xor or add sahf pop push pop (bad) fdivl and or mov pop jg mov (bad) xchg rcll scas pop data16 sub adc fldenv jge stos (bad) fwait (bad) scas (bad) mov fistl (bad) push or icebp xchg xor pushq movabs in shl mov mov xlat sub cli cmp cli (bad) (bad) lret fsubrs movslq movabs retq mov rcrl jbe (bad) repz mulb xor nop sbb leaveq add xchg rex.WB out rex.RX rex.RX fwait mov xor shll callq loopne xchg cmpsb adc pop push stos outsl mov (bad) mov adc xchg xor lret cltd lock pushq in fnstsw test xor sahf in andl ja sub cmp cmc mov and fisttpl and rex.WRX jle out outsb (bad) iret xor je adc loopne adc cwtl fincstp mov (bad) mov (bad) (bad) scas sbb sti jge push imul xchg (bad) mov lret pop xor gs retq adc jb lock add jp movabs (bad) pop jo sti jmp adc (bad) fistl movabs (bad) divl jg (bad) mov sub loop sbb and mov (bad) jrcxz jno popfq sub xor mov and or neg jne cmp (bad) mov adc (bad) roll (bad) mov rex.WRX (bad) xchg jno adc adc mov stos jae rex.W fcmovnbe mov jmp mov (bad) xor and fcompl cmpsl fstpt pop xchg rex.X rex.R mov cmp xor (bad) pop push rex.WRX rex.X fistl mov rex.WRB xor js jg (bad) or jl je mov adc (bad) (bad) sbb (bad) retq rex.WX movsb pop add in add lret sti lret rex.XB in stos (bad) cltd mov pop xchg outsl jne add push pop vmovd sbb roll rex.W int pop push rex.XB push fwait subq popfq addr32 (bad) fildll pop push or loope add cmp (bad) fcmove pop addr32 ds mov (bad) or fdiv pop (bad) jp xchg lods js addr32 pop sbb mov jle add cmpsl ficompl cmp and sti ss fnstcw pop fiadd (bad) mov (bad) sbb lahf imul rex.RXB gs mov mov mov repz push xlat rex.RXB fsubrl sbb add adc imul (bad) jge imul in (bad) fcmovnbe test sarl (bad) and loopne pushq push rcr mov or (bad) (bad) (bad) (bad) jbe test loopne decb sbb test int3 sbb cmp mov fisttpl adc js insl int xchg jp jmp mov xchg mov scas (bad) jb fistl push mov fstpt popfq add lret fcmovnb or and pop add mov sbb rolb int3 fcmovne (bad) faddl mov xor sub (bad) fucomi and movabs xor in cltd (bad) ds and adc loop (bad) (bad) imul lea xchg (bad) outsb jle sub pop jae imul sub movabs pushq rcrl (bad) sbb mov enterq jp fwait jne push mov jo movabs and clc mov pop adc lods mov adc ja int cvtdq2ps iret mov adcl mov pop (bad) (bad) xchg xchg sbb sbb add rex.RXB adc out insb outsl (bad) sbb movslq pop loopne retq sub rex.WRB mov jo push or pop rorb jnp (bad) pop mov imul mov sbb (bad) lret push fstpt fs and stos pop gs cmp and adc lahf and cld pop mov shrb movslq sbb cmp (bad) movabs leaveq retq fcmovne scas jo out pop sbb rex.WXB rex.RB (bad) imul cs fnsetpm(287 (bad) jnp popfq test fwait sub int3 mov callq rex.WRXB rex.RX jnp fs movabs rex.RB (bad) int pop jl rex.WRX cmpsb (bad) jnp lods (bad) jbe fstpt sbb outsb and mov sbb (bad) lock rex.R and rcl gs lods xchg fnclex cwtl (bad) in in (bad) (bad) lods mov js data16 cmp push sbb lock cmpsl mov pop (bad) xor rex (bad) test sbb in mov (bad) (bad) mov rex.RX rex.R (bad) (bad) sahf mov pushq (bad) (bad) je lahf jns test adc fucomi popfq add push (bad) fcomi xchg jrcxz and fwait cmpxchg clc or jle (bad) insl pop mov shlb add (bad) xor rex.RX stc jns addr32 mov mov (bad) pop adc jmp rex.WR xlat fldt xor adc mov adc fstpt leaveq mov (bad) hlt pushq pop mov sbb stos and fstpt (bad) out adc push cmc (bad) fldt (bad) lahf mov rex.W sarl mov (bad) xor rclb rex.WR callq fsubrs mov mov (bad) jbe jae movabs or or fwait in push lahf insl sahf rex.RX lock callq fsts push cmp fmull rcrl rex cmpsb movabs rex.RXB pop scas pop (bad) sub mov (bad) fs fistl push jp mov cld jg and cwtl (bad) fisttpl imulb ja add (bad) rex.WR rex.R sbb (bad) sbb pop jne fldenv or retq mov fisttpl pop mov fmull (bad) (bad) mov pop cmp scas push mov shrb jne rex.WRXB mov mov mov in imul mov jg xor jge (bad) fstp scas hlt rex mov cmp in add cld rex.WB xchg fadd orl rorb or cwtl (bad) sti jmp imul mov cs (bad) outsb jns xchg psubusw faddl gs imul ja xor pop sub mov in push ds ja test xor fimul pushfq test flds rex.WB add push movabs mov mov shrb jle mov or mov jnp (bad) rex.WRX fstpt jne cmpsb xchg out ss hlt or cmp push rex.XB push rolb mov push push or test out xor (bad) xor es sbb (bad) pop pushq cmpsl mov scas rex.WR popfq sbbl (bad) push movslq pop push rex.WRXB out jbe or test rex.WB jnp js fldt mov fidivl xchg add vpunpckldq outsb xorl sbb pop movsl (bad) adc (bad) or sub mov mov jp fildl div adc xchg (bad) push mov sub retq mov xchg or callq gs push jl lahf pop push mov adc lods push lret pop imul mov jo sbb in sub (bad) mov adc (bad) popfq cmpsb push es jo in mov iret push (bad) fnsave add or cs push fcmovne mov in fstpt mov xchg lret jge or jnp cmc vcmpsd jae adc mov repnz or fwait push mov cmp fildl (bad) xor enterq rex.WRB rex.RX jnp (bad) jle sub lock (bad) push rex.WX (bad) iret sub rex.XB (bad) (bad) in jnp add xor rex.WR rex.WRXB jp stc cmovb and imul (bad) push sub movabs xor cmp xchg add cmp (bad) insl mov hlt cmp gs fmul xchg stos (bad) sbb and mov test pand lret cmp fistl enterq ds xor hlt and retq imul test nop (bad) pop xchg rex.B rex.WR pop fstpt and add push (bad) adc (bad) (bad) pushfq or movslq and cmp bnd jo adc imul (bad) jmp cmp rex.WRXB int jae cmp in mov stos (bad) out ficoml (bad) out xchg mov (bad) fistpl cltd (bad) sub data16 retq rolb and sti rex.RXB rex.WX adc movabs mov rolb add sub outsb cmp jnp jl xchg ss rex.RB ja out push adc xchg fwait xchg cmp pop movabs scas fimull fs pop adc jnp lods and fimull xchg fwait cmp (bad) (bad) pop loop (bad) sub jg jns fisttpl (bad) ds rex.B movabs jmp insb cld rex.X mov push and push xchg clc jg cmp (bad) (bad) pop add rcl movabs adc fistl (bad) push callq leaveq xor sbb (bad) (bad) fcmovne out sub mov (bad) mov pop rex.RB fdivrl out xchg movabs jrcxz movslq or retq lret sbb ds (bad) ds pushq imul or mov fldt jnp adc sbb (bad) and fistpl mov push js jnp lret pop (bad) fcoms rex push jg rex.RXB in hlt test subb out int cmp sbb (bad) or clc or ror fcomip (bad) fldt push sbb (bad) stos addr32 jno fs (bad) fwait movabs xchg or fildl or (bad) push pushq retq and add rex.WRX rex.WXB rex.RX cwtl (bad) retq cltd gs (bad) mov fisttpl callq (bad) es clc mov add lret ficoml int lret cmc loopne test fadd pop iret mov xchg callq pop scas pop orl xchg clc cmp clc stos sbbl (bad) push rex.RXB mov jle (bad) rex.WRX mov fistpl out movabs (bad) movabs retq jns pop or test pop jnp in rcrb or stos clc pushfq in sbb outsb xchg mov nop addl push rex.RXB fdivl mov xchg pop je mov (bad) (bad) xchg fildl es cmp sub (bad) rex.WXB int3 xor push sbb fistl cs fstpt in ja jbe and fdivrs jle jrcxz shrl cmp sbb hlt pop sbb xchg jp jrcxz cmp jnp out (bad) mov fstpt sub fisttpl lods (bad) fldt (bad) jl stos add adc rex.WRXB test mov in pop popfq stc rolb imul xchg rex.W mov movslq fildl cld imul and fcomi in pop (bad) rex.WR lret mov sbb (bad) xor data16 mov xor xchg out movsb push in cmp mov xchg enterq xor and popfq and mov test mov hlt icebp and movsb (bad) jl xchg push xor orl xchg (bad) lods fwait sbb js cmpsl (bad) lock (bad) cmp mov rex and fs movsb pop in (bad) mov mov pushq mov jnp ja cmp and fstp pop push fwait sbb ss movabs jno lods (bad) xchg (bad) xchg jp push pop pop ds (bad) push fwait int loope jne pop add mov cld jae movabs pop push xchg fwait push frstor jo rcr rex.R pop mov rex.WRB gs sbb lahf add fistl outsl out clc (bad) cmp push rex.WRX insb faddl imul cmp fs rex.RB xchg fisttpl mov in sub out (bad) out sbb out lret (bad) sub xor xor (bad) xchg xor sti hlt or (bad) xchg (bad) (bad) and rcrb fild jle xchg rex.RX cltd fwait cmpsl (bad) ss pop sub mov or stos rex.X repnz lods xchg ja retq cld fwait rcrl loopne (bad) nop outsb add mov rex.WRX or cmp fidivrl (bad) loopne loopne outsl adc xor pushq jo scas pushq mov cmpsl enterq fimul fs movabs rcr push xchg push rex.R push xor cld jmpq or out (bad) faddp fisub std sub repz jbe xor (bad) (bad) xchg sub pushq scas push xchg cmpsl popfq sbb push (bad) psubb xchg mov test mov out lret or rcrl out or cli cmpl repnz int rex.WXB xlat xlat fxam flds rex.WRXB sbb (bad) jmp lret jrcxz sbb lock mov fwait js xor retq xchg out push je xor push cwtl mov and (bad) sub and sti pop cmp mov jnp xchg (bad) popfq rex.XB rex.WB rex.WRB lods sahf out retq movabs cli int (bad) (bad) rex.WRX fisttp cs add rex.WRB jnp fistl and (bad) xor rorb outsl iret xor jno cs cltd rex.XB rex.WRB (bad) cmp mov fisttpl push (bad) sbb cli pop jrcxz fisttpl sub rex.RX jge adc pop jnp and (bad) pop mov (bad) (bad) (bad) rex.WX (bad) adc (bad) jp sahf push (bad) (bad) (bad) out or cwtl cmp and push cmp cwtl and pop (bad) (bad) mov rex ds mov pop cmpsl (bad) movabs sub rex.W mov fistl jp rex.WR and xlat jns xchg nop fwait sbb rex.XB xor loop sub movslq mov (bad) sbb out hlt rex.B fwait insb pop mov mov imul stos shrb push push clc sub or jne fidivl sar mov mov fstpt xor out or xor int (bad) test rex.RXB sub sbb xor lods mov push sbb or fisttpl add out and and (bad) cwtl (bad) push out fcmovnb cmp sub pushfq mov fildl jmp xor clc cmp sbb outsl mov in fwait test ss jge push stos rex.WRB xor mov pop imul retq mov cmp out fildl cwtl (bad) and cltd rex cmp retq cmp and ss rolb sbb roll mov (bad) xor xchg fisttpl mov ds int (bad) enterq movabs (bad) sbb sbb (bad) (bad) push mov lods mov mov (bad) mov pop outsb (bad) rex.WRX pop xor in rex.B push stc jrcxz scas cmp (bad) or xor int movslq pushfq mov and (bad) (bad) retq (bad) cwtl icebp mov lret (bad) ds jp movabs fstpt (bad) rex.WXB jge (bad) jnp add push movsb fldt (bad) fwait cmpsl adc jno fs or rex.WRX jnp mull jmpq callq (bad) movslq fwait or cli cmp rex.WXB rex.RX jb int3 adc (bad) xchg xor shll sbb rex.WB rex.WXB rex.WRB jl loopne mov jnp adc shr (bad) sbb out shlb mov xchg loope in cmp ja out (bad) (bad) jmpq jnp test rex and cltd pop movsl jns jno mov (bad) stc rex.WRXB (bad) sbb fidivl xlat lods mov mov jp cmpsl and (bad) rcrl (bad) ds jnp adc fcmovnu insb imul fstpt lods or and xchg (bad) (bad) mov out rex.WRX rcr stos xchg sahf cld addr32 test cmp cmp xchg or outsl rex or nop or jne stc fmul xor (bad) scas rex.RXB push sahf cmp pop xchg cmpsl addr32 (bad) sub jrcxz icebp movabs lret cs sub sbb fistl jno cmp movslq fsts jnp jg rex.XB rex.X (bad) cmp fildl adc fdivrl jrcxz pop xchg (bad) mov pop mov rex.WR mov movabs in xorl push xorl push (bad) (bad) fbstp ror (bad) fisttpl rex.WX rex.X fisubrl roll (bad) push sub out popfq push and or std (bad) add rex.RX pushfq mov or adc test mov push adc add (bad) or stos jmp addr32 (bad) sbb stos mov rex.WB rex.WRXB pop enterq psrlw mov fistpll mov (bad) sarb jns fisttp sti adc cmp callq add clc (bad) sar loope mov insl fisub loop shrl roll add fs (bad) (bad) pop retq jnp scas rex.XB pop negl xor cmpb rex.W loopne shr rex.WR push lods pop loop fwait cli (bad) xchg pop out (bad) (bad) sbb mov rcr mov retq fs (bad) sbb test (bad) (bad) xchg (bad) mov iret (bad) (bad) push push add fldcw (bad) adc push fxch push xchg test add xchg (bad) cmpsl retq fs (bad) icebp cwtl pop cmp jrcxz cld (bad) callq or jo mov mov ja rex.W jl xchg sbb adc popfq jnp push pushfq sbb (bad) lock out jmpq repz std std in pop or movabs adc mov cs pushq (bad) xchg mov cmp pop je jb sahf (bad) sbb push rex.RB push movsb retq or repz sti rex.XB repnz push jle int3 (bad) xor fisubr rex.WB jge mov adc movslq sbb xchg mov adc sbb mov js in and fisttpl rex.W xor rex.B lock loop xchg add jmpq mov xor cs fcos in rex.RX adc fildl (bad) pop xchg fistpl mov repnz fcmovne movabs (bad) clc je ficompl sarl cltd movsb fistpl sub sbbl stc sti push xlat cmc rex.RXB add push xlat callq sbb adc push sbb jae xor jno sub insl fucomi insb (bad) push lahf xchg rolb fistpl pop sub jns in repz js rcll cwtl mov mov mov fistl adcl sbb cmc add rorl pop insl jp push push shr (bad) rex.RB xchg cmp fldt push xlat adc adc sub or mov mov lret mov ficompl stos cmp outsl mov sub fcmovbe and negb rex.R rex.WXB insl (bad) (bad) lock (bad) sbb jnp xchg and jmpq (bad) leaveq int3 jno mov push stc repnz cwtl loopne (bad) fcomi or or pop mov push pushq jb xchg loop js addr32 add jnp rex.WRXB mov adc lock test and mov rex.R jp xor xlat or retq in insl and jmpq cmp jnp jno sub outsl vpunpckhbw cmp or sub insl enterq test mov adc mov mov or xlat xchg rex.WRB cmp fildl data16 imul cld in stos mov shr fwait add fsubl cmc sbb fldt ror movabs (bad) cmp cmpsl and xchg rex.WXB ficompl leaveq (bad) test lret test cltd sbb and fstpt xor (bad) rex.RX insl insl fistl sbb and ficom idiv enterq retq lret pop shl push and pop imul rex.RXB stos rex mov xchg insl (bad) push mov xchg (bad) cltd stc sbb adc xchg mov pop sbb sbb movabs js outsl xchg jp jae mov icebp cmp sub mov mov mov mov rcrl push int cmp or (bad) xchg (bad) (bad) jmpq repnz mov sub fldt (bad) fistl lea cltd scas pop frstpm(287 xchg jrcxz test pop out fidivrl cmp movabs mov sbbl icebp movslq lods (bad) pop jrcxz jae cmp pushfq outsl (bad) mov rep add outsl fcomp (bad) sti enterq cwtl rex.X xor mov je popfq xlat flds iret rex.WRB test imul (bad) and data16 (bad) or mov fninit xchg or jp push shr adc movslq xchg (bad) outsb in (bad) rex.RXB (bad) push (bad) (bad) rex.W movslq rcrb push loope mov (bad) test ds clc in in imul pop push pop int3 (bad) or adc (bad) pushq retq add sbb fdivrp cld push (bad) test loop and push sbb or mov (bad) xchg icebp pushq or and (bad) test pop mov rex.WXB sbb add jae fidivrl (bad) add mov rex.XB xlat movsb rex.WRB xchg movabs mov lock xchg callq rex.B mov mov push xor rex.WRX jo and shll adc pop cmovl insb rex.WRX mov xchg mov rex fs shll push stos movsb jg jno rcl adc lret pop (bad) push mov push leaveq (bad) xlat and pop (bad) rcll rex.X cs scas xlat xor (bad) push mov add jmp shrq fildl or pop lret addb fdivrl push lods lret mov and gs push xrelease rex rex.R xchg fldenv out (bad) pop rex.WXB ja mov mov mov sub pushq enterq xchg cli and fcmovb pop pop jmp fcmovnb pushq mov xchg jmpq lahf fwait cmp cmp gs fisttpl rolb pop and rex std (bad) (bad) xlat rex.RB fisttpl cld push jno mov and fld1 pushfq pushq rex.WRXB test mov add fstpt rex.R addr32 leaveq pop (bad) rex.WB mov mov mov fstl (bad) lret xchg rcrb or loope cmc sbb jrcxz callq mov mov push pushq jrcxz xor (bad) fidiv fstpt sbb pop lock rex.X mov imul (bad) addr32 rcrl fcomi and (bad) jmpq xor jae mov fcomi add mov mov test sar xor pop sub fwait movabs sarl pop nop add sub callq (bad) rcrl xlat jl mov pop mov sti (bad) sbb mov mov sbb shr in lahf jnp (bad) je add pop stos sub in (bad) fisttpl fmul pop mov mov mov callq add mov cmp pop cs or (bad) push repnz rex.RXB (bad) rex.WRXB pushq add adc pop rex.R xchg (bad) stos imul mov rorb lret je fisttpl pushfq (bad) addr32 sti sbb lea icebp mov retq repz iret and lods rex.RX pop mov lret int3 xchg jl mov (bad) xor xchg sbb cmp leaveq ficom lea sbb (bad) adc sarl int3 sub (bad) movslq push (bad) fisttpl cmp outsb jge xchg sbb stos cwtl mov jmp rex.WR (bad) mov (bad) je (bad) sub push (bad) (bad) pop pop enterq mov xchg movabs fcmovnb enterq jmpq mov sub (bad) (bad) jmpq pushq sti (bad) (bad) lret incl jne (bad) shr fldt imul (bad) add rex.WB fcmovnb movabs callq in pushq out mov jae popfq lret fstps idivl insb xlat jl pop (bad) movabs lea iret (bad) fstpt cmp lret sbb push ja (bad) (bad) (bad) pop sbb pushq fistl rcr push xor movabs fbstp pop pushfq (bad) mov lods jae push stos sub rex.WX adc orl and ja sbb pop movslq add (bad) fisttpl lret leaveq out ficoml in (bad) mov sbb imul inc (bad) xchg fidivr mov push in pop (bad) jo sbb fnclex mov out rorb rex movabs rex.WRB cmp xor fstpt retq xlat repz rex.WX pop je fwait (bad) rex.XB xor xchg xor mov pushq (bad) mov add fistpl rolb push imul callq imul rolb sub popfq adc lock in fidivrl sub pop sti sub adc (bad) pop fcmovnu (bad) push cmp stos xchg fisttpll loope adc movabs push pop jnp push orl lret push rex.RXB xor rex.WRB and leaveq faddp je (bad) (bad) retq andl cltd fistpl pushq fnstenv and out lret and shrb lock xorl je (bad) or bnd rorl mov (bad) jg mov imul (bad) rex.WX (bad) leaveq (bad) mov cmp mov add (bad) enterq or (bad) jle or lret pop xor mov pushfq push roll push (bad) sub adc pop leaveq xlat mov (bad) movsl stos (bad) cld mov xchg flds cmp sbb pop rex.WRXB movabs fcmovnb (bad) or push rex.WRB std cmp divl andl push lret fninit psllw mov lahf mov (bad) shr insb fcomi fnsave add ss mov mov lcall (bad) repnz xlat xchg xchg jl mov test stc bt add cmc clc movzwl rcl mov bt add test test bt test mov bt jmpq jne adc cmc ror shld mov cmc sar mov cmc jmpq adc jmpq jmpq cmc mov cmp movsl (bad) fdivl rex.WRB repnz xabort lahf and (bad) pushq (bad) fwait push roll sbbl mov out (bad) (bad) xchg rex.WXB sbb and jnp jg (bad) cld cwtl mov (bad) xor movabs push test (bad) (bad) insl popfq imul or js add outsl add (bad) int fild test adc fldt (bad) rex.WR (bad) (bad) (bad) sti repnz (bad) (bad) (bad) mov fwait (bad) push mov xchg cmpsl rol (bad) fadds add add xor cwtl lret rex.WRX xchg rex rex.WRB and loope test xchg andb roll rex.R adc xor (bad) mov pop repz loop shrl push jle adc (bad) callq mov jmpq rep data16 (bad) or stos (bad) add dec pop cmp or mov pop std std cmc test popfq jmpq push jmpq jmpq add test cmc jmpq jmpq jmpq mov jmpq jmpq cpuid cmp test stc sub cmc jmpq push jmpq bsr and xchg mov bsf shl btr mov cmp sub jmpq popq jmpq jmpq push jmpq jmpq jmpq jmpq bt sub clc cmp shr jmpq jmpq jle mov jmpq push jmpq neg movzbl test xor test cmc stc test add jmpq callq bswap seta not mov jmpq push jmpq jmpq jmpq movzbq movzbw rcl cmc rcr mov jmpq stc bswap stc bt test test sub bt ror jmpq push jmpq jmpq ja jmpq jmpq jmpq divl jmpq pushfq jmpq jmpq pushfq jmpq xor bt mov cmc neg clc mov stc sub clc mul jmpq jmpq jmpq push jmpq lea jmpq jne pushfq jmpq push jmpq jmpq jmpq jmpq jmpq pushfq jmpq mov jmpq jmpq push jmpq jmpq pushfq jmpq shr sub movsbq jmpq jmpq push jmpq jmpq jmpq push jmpq push jmpq je stc addl test sub cmc clc xor bt cmc cmc bt xchg stc stc cmp test cmp jmpq mov jmpq stc imul jmpq mov jmpq jmpq dec or movzbl bt not xor cmc rcr sub jmpq jmpq dec cmc clc bt xor jmpq jmpq push jmpq jmpq jmpq jmpq jmpq jmpq mov jmpq jmpq je jmpq sub jmpq add jmpq push jmpq push jmpq jmpq push jmpq not jmpq rcl stc btr mov cmp test add jmpq dec stc stc xor clc stc clc bt cbtw jnp cwtl stc cmc cmc stc cltq jmpq pushfq jmpq mov jmpq jmpq jmpq jmpq jmpq pushfq jmpq push jmpq decl jmpq cmc cmc stc and jmpq jmpq popq jmpq jmpq add btr mov shr setns mov clc sub jle divl jmpq jmpq jbe shl lea stc lea cmc clc clc jmpq jmpq jmpq clc add jmpq push jmpq jmpq mov jmpq jmpq inc sbb bts sar add bswap btr rcl xor rcl btc neg shld add lea stc or bsf add shr setle shld xor mov test bt test jmpq jmpq push jmpq push jmpq jmpq clc test sub clc bt cmc stc shr jmpq push jmpq jmpq push jmpq jmpq inc stc bt ror jmpq push jmpq push jmpq divq jmpq jmpq push jmpq not jmpq jmpq push jae push jmpq movzbw mov not mov jmpq mov jmpq jmpq push jmpq jmpq mov jmpq popq jmpq jmpq push jmpq je cmp bt clc clc cmp jmpq jmpq mov xor bsr bswap movzbl inc xor sar btr not add mov not dec setb movzbw dec not jb clc shr xor mov ror movzbl bt cmc stc jmpq jmpq mov jmpq jne push jmpq push jmpq clc mov sub neg bt setl mov test cmc sub cmc shrd jmpq push jmpq push jmpq push jmpq push jmpq push jmpq jnp push jmpq jmpq push jmpq pushfq jmpq pushfq jno popq jmpq jmpq push jmpq jmpq jle pushfq jmpq jbe sbb lea cmc stc lea stc test jmpq jmpq mov jmpq jmpq push jmpq mov jmpq pushfq jmpq js push jmpq jmpq movzbw xchg mov neg mov test bsf mov cmc cmc add jmpq jmpq push inc not xchg mov bswap inc bts xchg jmpq jmpq test clc stc test ja je test test test cmc addl stc bt bt clc sub cmp cmc sub clc xchg test bt bt cmp cmp jmpq mov jmpq jmpq cmp sub test test xchg test stc stc cmp jmpq jmpq jmpq jmpq shrd bts or rcr mov mov add jmpq sub jmpq jmpq push jmpq cmc add clc jmpq jmpq jmpq popq jmpq jmpq mov jmpq mov not not mov jmpq not seta mov jmpq dec jmpq jmpq push jmpq push jmpq stc sub jmpq mov jmpq jge popq jmpq lea xchg inc btr btc movzbq ror ror add sub not cmc sbb mov cmc rcr sub bsr shr cmp bsr and neg cmc inc mov setae shrd lea btr btc or movabs clc data16 repz stc sub bsf mov sets cmc add movzbl mov neg neg sub sbb cmc neg rcr add data16 repnz (bad) cmc ror movzbw neg shl sub bswap rol sub lea clc movzbq mov bt movzbl mov stc ror test stc test test add jmpq popq jmpq mov jmpq push jmpq jmpq jmpq mov jmpq push jmpq mov jmpq push jmpq jmpq jmpq jmpq mov jmpq jmpq cmp jmpq jmpq seto pop movsbw movsbw pop not jmpq mov jmpq push jmpq push jmpq push jmpq jmpq jmpq popq jmpq jmpq push jmpq jmpq popq jmpq mov jmpq jmpq clc jae add jmpq jmpq lea shl shr mov clc add mov cmp cmp bt jmpq jmpq jmpq mov jmpq push jmpq push jmpq push jmpq push jmpq mov jmpq push jmpq jmpq clc cmp add jmpq je stc cmp jmpq mov jmpq pushfq jmpq jmpq jmpq push jmpq mov jmpq push jmpq jmpq push jmpq mov jmpq jmpq push jmpq push jmpq rcl add and sub mov jmpq cwtl bt test bt cltq test cmc stc test sub jmpq popq jmpq je mov jmpq jmpq clc and jmpq push jmpq cmc xor cmp cmp jmpq bt clc stc stc xor jmpq push jmpq je setae not movsbw mov jmpq movzbw not sar mov movzbw dec mov clc stc cmc jmpq jmpq push jmpq jmpq bt ror cmp clc bt stc xor cmc test cmp mov jmpq shrd cmp ror clc mov cmp add jmpq push jmpq push jmpq shld mov cmc cmp bt cmc sub jmpq jmpq jmpq jmpq popq jmpq jmpq mov jmpq mov jmpq jmpq push jmpq push jmpq jmpq jmpq ja shrd btr clc mov cmc xchg clc bt xor jmpq je test jmpq sub jmpq lea lea dec mov not jmpq push jmpq jmpq jmpq jmpq push jmpq cmp bt add jmpq clc sub jmpq shld adc (bad) icebp mov neg bt cmp mov cmp cmc jmpq jmpq not lea push setns not mov push not lea push dec jmpq lea jmpq jmpq mov jmpq mov jmpq push jmpq div jmpq pushfq jmpq mov jmpq jmpq jmpq push je push jmpq mov jmpq or pop shrd shl popfq lea pop bswap pop jmpq mov stc cmp bt sub cmp movl clc or jmpq bt jmpq push jmpq jmpq shld mov or inc mov shr mov bt (bad) icebp mov test add stc shld jmpq lea jmpq mov jmpq mov pushfq mov push cld mov jmpq add jmpq lea dec movsbw bt jmpq jp sub bt imul jmpq jmpq push jmpq popq jmpq push jmpq popq jmpq jmpq jmpq test sub stc stc cmp cmp shl jmpq jne lea xorb jmpq jne cmp sub stc cmp xchg cmp jno test test sub jmpq push jmpq popq jmpq inc xor shl btc xor cmp movzbl jmpq jmpq jmpq popq jmpq sbb dec mov rcr mov cmp stc sub jmpq je jmpq dec bt lea cmc clc clc xor test sub jmpq jmpq mov lea mov jmpq jmpq jmpq mov jmpq jmpq push jmpq clc add jmpq popq jmpq pushfq jmpq push jmpq test sub test shl jmpq movsbw bswap notq neg mov cmp cmp cmp stc sub jmpq jmpq jmpq test add jmpq push jmpq mov jmpq sub jmpq push jmpq jmpq jnp mov jno mov jmpq mov jmpq jmpq rol jmpq push jmpq je setp lea not lea mov jmpq push jmpq jmpq inc cmp stc not cmp bt bt sub bt add bt xor stc cwtl cmp cmp stc stc sub jmpq jmpq jmpq jmpq popq jmpq rcl mov add (bad) lock jmpq push jmpq rol btr bt mov stc clc xchg stc xor jmpq jmpq pushq setnp movsbw jmpq jmpq jmpq jmpq jmpq jmpq popq jmpq test movl clc or jmpq jmpq pushfq jmpq pushfq jmpq jmpq jmpq mov jmpq jmpq jmpq push jmpq mov jmpq push jmpq jmpq jmpq ja push jmpq jge push jmpq jmpq jmpq push jmpq jmpq push jmpq sar shld (bad) testb rex.RX xchg retq movzbw inc inc setnp inc (bad) repnz neg setle rol bsr btc dec add mov bsr not mov jo cmc add jmpq inc cmc jne clc cmp not stc add cmp stc test clc add bt xor stc cwtl bt stc cltq cmc cmc jmpq jns push jmpq push jmpq jmpq stc sbb (bad) lock mov mov cmc bswap cmc stc jns add jmpq pushfq jmpq lea jmpq lea jmpq push jmpq push jmpq lea sub setne bswap movabs bswap add bt inc rcr mov neg and add movsbw movzbw test cmc mov add add dec neg sub clc dec shl add add adc rcr inc not add add rcl neg rcl sub adc movsbl ror sub rol cmc rcl rcl movzbq rcl movzbq rcr mov clc ror stc test add jmpq push jmpq push jmpq cld cld jmpq jmpq jmpq jmpq push clc ror bswap cmc sub data16 repz cmc clc cmp clc sub clc jmpq jmpq push jmpq mov jmpq push jmpq not shr rol mov shl not test mov cmc not test not test cmc cmp clc sub clc and jmpq push jmpq clc mul jmpq cld mov movsbq lea std push mov lea movzbw mov ja std std cld jmpq jmpq cmc shl jmpq jmpq test jmpq pushfq jmpq jmpq jmpq jmpq mov jmpq pushfq jmpq jmpq jmpq jmpq jmpq jmpq push jmpq jmpq jmpq jmpq jmpq push jmpq jmpq push jmpq jmpq jmpq push jmpq push jmpq jmpq push jmpq popq jmpq add cmp movzbl mov jmpq je cmc clc cmp jmpq lea bt cmc rdtsc test bt jmpq push jmpq mov jmpq movzbw xor btr mov bt shl stc stc shr cmp or stc cmc cmp xor stc jmpq jmpq push jmpq push jmpq jmpq jmpq jmpq push jmpq sub bt clc shr jmpq jmpq bswap bt test test sub cmc bt clc ror jmpq push jmpq mov jmpq jmpq lea movzbw movsbw mov jmpq mov jmpq jmpq mov jmpq push jmpq jmpq push jmpq popq jmpq push jmpq setne pop lea mov not movabs pop retq push jmpq setb ror adc xadd not inc bsf bt inc mov stc jle sub sub btc and bsf cmp mov sub stc shr lea clc movabs clc adc btc add test lea btr mov shld inc ror add neg jmpq push jmpq push jmpq push jmpq jmpq add jmpq jmpq mov jmpq push jmpq jmpq jmpq clc jmpq bsf xor bt mov jmpq jmpq mov jmpq push jmpq jmpq jmpq shrd bts jmpq cmc mov jmpq je cmc bt jmpq jmpq mov movsbq mov jmpq push je push jmpq jmpq mov jmpq jmpq push jmpq add add stos rex.WRB rex rex.WB and rex.RXB and rex.WXB loopne rex.WRB (bad) cmp add sar add movabs cmpsl rex.WR movabs rex.W rex.WRXB rex add add movabs rex.WRB and add loopne rex.WB sar add (bad) (bad) rex.RXB sar add and rex.RXB loopne rex.WRB add add fmull xor add add add (bad) scas rex.WB orb xor add and add add add rolb add add add add add add rex.WB loopne rex.RXB loopne rex.WRX orb xor add rex add movabs (bad) rex.WXB rcrb add andb add (bad) add shl add add add loopne rex.RXB and add rex rex.WB loopne rex.WRX add rex.WR andb add rex.W rex.WRB rolb add rex.W rex.WRB loopne rex.WB subb add loopne rex.WB rex add add xchg add shlb add rex.RXB (bad) push rex.WRX add rex.WRX rex add xorb xor add loopne rex.WRB loopne rex.WB and rex.RXB loopne rex.WRXB (bad) (bad) rex.RXB shrb add movabs in rex.WRB rolb add add add std rex.WXB rorb xor add rex add rorb xor add andb add add add add add xchg xor add loopne rex.WR movabs in rex.WRB rex rex.WB movabs movabs add movabs rex.RB rex.WXB andb add rex.WB and rex.WXB rex add (bad) mov add and add xorb add and add (bad) adc add shrb add pop rex.WRX loopne add and rex.WXB add add loopne rex.RXB (bad) scas rex.WB rex xor add shrb add sub xor add and xor add rex add loopne rex.WB add add rex.WXB rex add add rex.RXB loopne rex.WB (bad) adc add (bad) mov add cmp add add add rex add movabs add add add add add data16 loopne rex.WRB rex add (bad) ss movabs xlat rex.RXB movabs test add or add orb xor add rolb add add add rex.W rex.WRB sarb add add lods rex.WRX loopne rex.WR and add loopne rex.WB loopne rex.WRXB add rex.WR rex gs loopne rex.WB rex rex.WB loopne rex.WB add add add add rex.WRB rex add loopne rex.WXB shl add loopne rex.WB add add andb add (bad) rex.WR loopne rex.WRXB rorb xor add and rex.WXB rex add loopne rex.WB (bad) pop rex.WRB movabs data16 subb add (bad) cmp add and add and add add rex.WRX (bad) mov add movabs icebp add sarb add add add add rex.WB (bad) scas rex.WB and rex.RXB (bad) scas rex.WB loopne rex.WRXB cmp add loopne rex.WRB (bad) rex.RB rex.WXB movabs sbb xor add loopne rex.RXB orb xor add addb add stos rex.WRB (bad) (bad) rex.RXB movabs or add (bad) (bad) rex.RXB loopne rex.WB loopne rex.WRB addb add rex rex.WB (bad) push rex.WRX addb add jl add loopne add cmp add shlb add add add rex.RXB xorb add and rex.RXB (bad) ss rex add add rex.WB loopne rex.WRB and rex.WXB rex gs add add rex.WRB cmp add and rex.RXB (bad) mov add add add rex add add rex.WRB loopne rex.WR and rex.WXB and xor add rorb xor add (bad) pop rex.WRB or add loopne rex.WRB (bad) pop rex.WRB sarb add add add add cmp add add add rex.RXB and add (bad) cmp add sar add rex add add jp add add add rex.RXB addb add add add xchg rex.WRX rex add (bad) scas rex.WB shl add rolb add rex.RXB rex rex.WB rex gs rorb xor add (bad) push rex.WRX movabs or add shr rex.X (bad) jmpq fisttpll btr ror movsbw xchg not cmc btc bsf mov stc xchg sub jmpq bsr bsf and movsbw shld mov and ror lea not movabs mov shr lea add adc shld mov or add sbb clc dec mov not neg sub dec ror add movsbw sar bswap not sets rcl neg sbb sar sub adc bts bt rcl sub bt bt movzbq movsbl mov rol seta mov clc jmpq push jmpq push jmpq push jmpq jne mov inc sbb mov cmc and test cmp clc cmp jmpq je cmp cmp jmpq jmpq jmpq jmpq push jmpq jmpq jmpq push jmpq jmpq lea jmpq sar mov cmp cmp stc add jmpq mov jmpq jmpq jmpq jmpq jmpq jae push jmpq push jmpq push jmpq jmpq jmpq mov jmpq jmpq popq jmpq push jmpq shl movzbw neg mov bt cmp shrd add jmpq mov jmpq cmp not mov test jp test bt sub jmpq jmpq jns popq jmpq jmpq push jmpq jmpq jmpq popq jmpq clc sub jns bt sub jmpq jmpq bswap mov cmp mov jmpq jmpq jmpq je test cmc cmp jmpq je setne jmpq je test bt cmc bt cmp jmpq push jmpq push jmpq jmpq xchg seto movsbq xchg push inc setl inc movsbw push dec dec dec pushq setl movabs dec lea mov dec push bswap mov movsbl jmpq push jmpq push jmpq push jmpq push jmpq mov jmpq push jmpq push jmpq rcl movsbw clc mov add jmpq jmpq push jmpq push jmpq push jmpq push jmpq push jmpq push jmpq push jmpq push jmpq jae popq jmpq push jg push jmpq push jmpq je stc stc clc bt addl cmc cmc sub clc jmpq push jmpq mov jmpq mov jmpq jmpq jmpq jmpq jmpq mov xor test btr shr lea jmpq popq jmpq jne shl mov xor movzbl mov cmp cmp jmpq jmpq jmpq rol sbb not add inc shrd ror (bad) (bad) sub mov lea movzbl inc movsbw or mov xor mov jmpq jmpq je stc cmp jmpq clc shr jmpq jmpq mov jmpq jmpq pushfq jmpq jmpq mov jmpq jmpq bsf inc mov shl mov cmc test sub bt jmpq push jmpq cmc cmp jmpq mov jmpq jmpq shl neg inc and movzbl cmc clc xor clc cmp bt add jmpq push jmpq jmpq push jmpq push jmpq jmpq (bad) lock repz bts cmp xor sub add stc mov shrd cmp ror add and mov and adc shr sub sar neg add bt dec btc stc not data16 data16 (bad) neg lea sub sbb cmc sub cmc bt cmc movzbq mov mov bt clc bt ror bt stc add jmpq mov jmpq mov jmpq jmpq mov jmpq jmpq stc cmp xor cmc cmc cmc stc sub jmpq push jmpq mov jo mov jmpq cmp sub jmpq jmpq jmpq push jmpq push jmpq jmpq push jmpq jmpq bts bsf bsr mov clc pop clc dec lea pop bsr std ror pop std cmc test pop lea adc pop jmpq mov jmpq push jmpq push jmpq inc test clc neg jmpq push jmpq mov jmpq lea push jmpq jmpq mov lea std std push movsbw jmpq pushfq jmpq popq jmpq jmpq jmpq jmpq movzbw pop jmpq jmpq pop bswap mov mov pop bswap mov jmpq jmpq jmpq jmpq jmpq push jmpq xadd adc jmpq jmpq clc sub jmpq popq jmpq jmpq jmpq ja jmpq bsf rcl notl not btr rcr mov stc sub bt clc bt clc and jmpq jmpq test clc add jno not jmpq push jmpq popq jmpq not cmc add test bt cmc add clc cmc bt cmp xor test bt jmpq jmpq cmc cmp sub jle mov jle lea jmpq jmpq push jmpq push jmpq jmpq push jmpq popq jmpq bt cmc btc mov cmc jmpq jmpq push jmpq cmc cmc cmc clc add jle mov jmpq push jmpq mov jmpq pushfq jmpq ror cmc add jmpq mov jmpq jne sar mov bt and stc cmp jle jne rcl movsbl shld xorb movsbw pop jmpq push jbe push jmpq push jmpq popq jmpq jmpq jmpq popq jmpq jmpq push jmpq push js push jmpq popq jmpq mov jmpq jmpq jmpq jmpq jmpq jmpq sub cmc jne bt imul jmpq mov bt jmpq jmpq cmp jmpq popq jmpq push jmpq jmpq push jmpq jmpq mov jmpq push jmpq jne adc shrd btr xorb movsbw movzbl pop jmpq cmc test jmpq cld cld jmpq lea jmpq push jmpq jmpq mov jmpq jmpq popq jmpq jo ja sub or setge not mov sbb lea xchg test bsf sub bt clc lea sub shl and rol sub lea movsbw mov movzbl pushfq jmpq not jmpq jmpq mov jmpq ja jmpq push jmpq lea jmpq jmpq mov jmpq movsbq btr and sbb jmpq mov jmpq push jmpq push jmpq jmpq push jmpq jmpq jmpq pushfq jmpq jmpq jmpq jmpq mov jne pushfq jmpq push jmpq jo pushfq jmpq sub jmpq pushfq jmpq jmpq mov jmpq jmpq push jmpq jmpq push jmpq rol mov jo xor jmpq cmc clc cmp jmpq xchg mov movzbw lea shrd mov jmpq cmc add jmpq mov jmpq jmpq push jmpq jmpq jmpq push jmpq jmpq bt mov stc cmc cmp sub test add jmpq dec stc test cmp lea clc stc cmc xor cmc stc sub jmpq pushfq jmpq dec cmc clc test cbtw bt bt stc cwtl cmp jmpq rep test pop btc rcr pop stc cmp cmp cld popfq jmpq pushfq jmpq push jmpq jmpq jmpq jmpq push jmpq data16 lock bsr movzww bt test test stc xchg bt xor jmpq jmpq movzbw bswap mov movsbw push mov bswap not movsbw mov jmpq jmpq jmpq push jmpq dec jmpq jmpq jmpq jmpq add jg mov jmpq mov jmpq bsr and rol lea cmp bt jmpq bt add jmpq jmpq pushfq jmpq jne jne mov jmpq push jmpq jmpq jmpq push jmpq jmpq popq jmpq push jmpq mov jmpq push jmpq jmpq push jb push jmpq mov jmpq jl popq jmpq push jmpq mov jmpq push jmpq push jmpq jmpq jmpq jmpq mov jmpq jmpq mov jmpq push jmpq jmpq jmpq mov jmpq mov jmpq mov jmpq push jmpq push jmpq jmpq push jmpq push je push jmpq mov jmpq jmpq jmpq jmpq jmpq jmpq jmpq xadd ror mov jno bts neg mov jmpq popq jmpq mov jmpq jmpq jmpq jmpq jmpq push jmpq jmpq push jmpq push jmpq push jmpq test bt and jmpq jmpq not jmpq push jmpq lea stc stc stc jmpq mov jmpq jmpq push jmpq jmpq pushfq jmpq clc sub jmpq jmpq push jne push jg push jmpq bt test add jmpq xadd not cmp cmc mov shld stc btc setg mov bt clc not test stc not jmpq mov jmpq mov jmpq push jmpq jmpq jmpq mov mov setge movabs xchg mov bswap bswap movzbq jmpq popq jmpq cmc test cmp jmpq push jmpq push jmpq push jmpq add ror mov cmc sub jmpq push jmpq popq jmpq jmpq mov jmpq mov jmpq mov jmpq xor cmp test xchg cmp jmpq jmpq jmpq jmpq push jmpq mov bt test bt add ja callq jmpq push jmpq jne bsf cmp or neg xorb mov bswap setle pop jmpq jmpq jmpq jmpq ror bts test setae add bsf or shr shld xor btc not bsr movzbw mov jg add jmpq push jmpq push jge push jmpq dec test jmpq mov jmpq mov std jmpq jmpq jle mov jmpq or mov cmc inc rcr mov test jmpq bswap movzbw mov jmpq push jmpq jmpq push jmpq add jmpq jmpq sub jmpq mov jmpq mov mov jb mov jg mov jmpq jmpq push jmpq sub clc test cmc jmpq jmpq mov jmpq jmpq jmpq test jbe bt add jmpq jmpq jmpq push jmpq pushfq jmpq sub inc mov cmp test add jmpq push jmpq jmpq neg setle lea mov inc add cmp inc mov adc test clc mov bt bt clc add clc shrd jmpq jns mov jmpq jmpq lea jmpq pushfq jmpq bt test stc sub bt imul jmpq push jmpq cmp jmpq clc bt cmp pushq bt clc cmc add cld popfq jmpq sub clc test jmpq jmpq pushfq jo popq jmpq mov jmpq add jmpq push jge push jmpq push jmpq jmpq push jmpq jmpq (bad) lock rol sbb mov clc xor cmc clc cmc cmc ror stc stc xor clc jns ror test cmp test xor jmpq jmpq jmpq jmpq jmpq jmpq push jae push jmpq jmpq sets pop lea setle pop jo xchg xchg pop mov setb jmpq inc stc clc not cmc cmc cmp clc add cmc cmc cmp cmp add cmc test bt bt xor test cwtl test cltq bt jmpq popq jmpq jmpq mov jmpq mov jmpq mov jmpq jmpq push jp push jmpq push jmpq jmpq mov jmpq mov jmpq movsbw lea shr stc mov jmpq mov jmpq push jmpq cmp cmc cmp sub cmc jmpq mov jmpq popq jmpq jmpq not rcr mov and stc bts mov (bad) icebp rcl mov stc bt clc sub stc jmpq jmpq mov jmpq jmpq push jmpq push movzbw cmp or sub and jmpq push jmpq jmpq mov jmpq jmpq ja jne je jmpq sub jmpq push jmpq jmpq jmpq jmpq jmpq jmpq push jmpq inc movabs bswap mov setle lea mov seto movzbw dec push jmpq push jmpq xadd shld data16 lock push add movsb loopne movzbw (bad) lock stc bt jmpq jmpq rol jmpq jmpq popq jmpq jmpq push jmpq jmpq push jmpq jmpq push jmpq jmpq jmpq push jmpq jmpq sub jmpq jmpq dec jmpq jmpq jmpq add jmpq push jmpq push jmpq jmpq cmc ror cmp bt cmc stc add jmpq jmpq push jmpq mov jmpq jmpq pushfq jmpq jmpq push jmpq jmpq jmpq seto pop lea lea lea pop retq jmpq sbb shl xadd stc mov add sbb bt mov stc add jb mov jmpq callq movzbw movsbw jmpq jmpq jmpq push jmpq rep shld pop shld clc btc cld pop std std popfq jmpq jmpq clc addl cmp clc cmc jmpq jmpq push js push jmpq inc bt cmc clc stc neg cmp cmc clc clc sub test cmp jmpq jmpq mov jmpq jmpq push jmpq je movsbl movzbq lea mov jmpq jmpq bsf mov bt stc jmpq cmc mov test mov shld mov stc cmp jmpq pushfq jmpq push jmpq setae mov ror bsf sbb xor stc rcl mov not ror stc rol bsr adc xor movsbw ror rcr jmpq mov jmpq popq jmpq push jmpq rol rcl clc mov cmc clc jmpq clc stc clc stc cwtl clc clc cltq cmp cmc sub jmpq jmpq clc mul jmpq mov jmpq push jmpq push jmpq push jmpq sete lea not pop movzbw pop mov movzbl pop bswap mov pop mov mov mov mov pop movsbw jmpq push jmpq pushfq jmpq jmpq jmpq push jmpq push jmpq push jmpq inc mov xor bsr rcr bt mov stc cmp add jmpq push jmpq push jmpq push jmpq jmpq jmpq lea inc rcl jmpq push jmpq addl bt push bt test stc clc sub jmpq callq jmpq pushfq jb popq jmpq jmpq jmpq jmpq dec cmc bt lea cmc stc clc test xor test cmp cmc cmp sub jmpq push jmpq mov jmpq jbe push jmpq jle pushfq jmpq jmpq jmpq jmpq pushfq jmpq popq jmpq jns popq jmpq (bad) hlt add mov cmc mov mov cmc bt jmpq jmpq jmpq inc stc clc clc cmc ror cmc clc bt jmpq jmpq mov test rol movzbl cmc jmpq not cmc mov mov bswap mov jo sub clc bt mul jmpq mov jmpq inc test neg clc sub stc cmc add bt stc cmc test sub jmpq jmpq mov jmpq cmp jmpq push jmpq push jmpq jmpq pushfq jmpq sub jmpq jmpq jmpq jmpq push jmpq push jmpq jmpq push jmpq push jmpq push jmpq push jmpq push jmpq jmpq push jmpq jmpq cmp jmpq jmpq jmpq jmpq jmpq mov jmpq jmpq pushfq jmpq jmpq ja shld add mov btc neg clc lea stc sub shr neg lea movzbw btr and shl shl movsbl btc sub movzbw movsbq mov jmpq jmpq push jmpq push jmpq shld jmpq jmpq jmpq jmpq cmp jmpq jmpq push jmpq popq jmpq movzbq movsbw push movzbw movabs jmpq mov jmpq jmpq jmpq jmpq jmpq stc sub jb mov jmpq jmpq jmpq pushfq jmpq pop jmpq jmpq cmp movzbw mov sbb rcl mov test clc sub test clc stc cmp shl jmpq jmpq test add jmpq rol not sbb mov mov cmp cmp sub jmpq push jmpq shrd mov cmp dec xor movsbw lea sub mov bswap jmpq jmpq jmpq jmpq movzbl jmpq sub bt clc stc bt imul jmpq jle not jmpq push jmpq not mov setle mov jmpq es mov jmpq ror rcr bswap movzbw not and rcr movzbl mov lea xadd test sub movzbl lea bsf sbb and inc bts mov neg jmpq jmpq mov jmpq bswap cmc shld sar mov test sub jmpq jmpq jmpq jmpq jb mov jmpq mov jmpq jmpq push jmpq jmpq mov jmpq jmpq jmpq jmpq jmpq movsbw data16 repnz btc mov cmp cmp cmc stc add jmpq push jmpq push jmpq jmpq mov jmpq mov jmpq jmpq jmpq jmpq mov jmpq push jmpq je stc cmp cmp jmpq push jmpq jmpq push jmpq sar shr mov shl rol add mov js bt sub clc cmc stc shr jmpq inc cmc lea bt clc bt not jmpq lea jmpq jmpq push jmpq jmpq push jmpq push movsbw not push lea bswap movsbw push not repz not inc push jb mov movzbw push dec jns mov bswap push dec push movsbw movsbw xchg pushq js movabs movsbw movsbq not setle mov xchg bswap jmpq push jb push jmpq lea dec mov bswap lea movsbw inc bswap lea jmpq push movabs push mov bswap lea movsbw push lea setbe push movzbw lea push movzbw mov mov setge push jmpq jmpq jmpq push jmpq push jmpq je bswap movzbw mov jmpq push jmpq jmpq push jmpq jmpq push jmpq jmpq jno pushfq jmpq popq jmpq popq jmpq jmpq jmpq add jmpq jmpq push jmpq movsbw push jmpq jmpq jns sub jmpq push jmpq push jne push jmpq jmpq pushfq jge popq jmpq jmpq push jmpq push jmpq jmpq jmpq jmpq push jmpq xadd cmc mov sbb mov shr and mov clc jmpq jmpq push jmpq movsbq not setae seta mov jmpq je cmp xor stc clc cmp jns jbe or lea clc lea jmpq jmpq jmpq mov jmpq push jmpq mov jmpq cwtd mov sbb dec test movzbw mov jmpq mov jmpq jmpq jmpq jmpq push jmpq jmpq jmpq jmpq jmpq push jmpq push jmpq mov jmpq push jmpq push jmpq add shl add btr sbb add inc mov cmp clc bt add jne mov jmpq jmpq push jmpq jp popq jmpq push jmpq push jmpq jmpq setno mov jmpq jmpq mov jmpq jmpq jmpq jmpq or neg bts mov shr jmpq jmpq jmpq popq jmpq xor cmp stc bt sub jmpq jmpq push jmpq jmpq jmpq jmpq jmpq jmpq clc bt add cmc cmc cmp mov jmpq not jmpq cmpl jmpq jmpq jmpq cmp jmpq mov cmp cmc xchg cmp stc xor jmpq jmpq jmpq push jmpq push jmpq push jmpq jmpq jmpq jmpq push jmpq push jmpq jmpq push jmpq jmpq jmpq jmpq xadd mov lea mov clc add jmpq push jmpq push jmpq pushfq jmpq mov clc mov stc bt sub jmpq rol setge ror shld add stc or not shr xor not movzbw bswap dec dec bsr lea neg or mov stc bt jp sub jmpq stc jmpq mov jmpq push jmpq jmpq mov xor or dec sub and add rcl lea bt and not add neg and sar shld sub shl sub movzbw mov cmc jmpq jns mov jmpq push jmpq jmpq pop cmp cltq cmp jmpq cmc bt clc mov jmpq jmpq popq jmpq push jmpq popq jmpq shr movzbl dec clc add bswap jmpq jmpq jne je clc cmc cmc jmpq jmpq push jmpq jmpq jmpq jmpq jmpq 