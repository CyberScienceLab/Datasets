pop adc or (bad) xchg cs callq mov adc callq jne xchg test (bad) rex.WRXB cmpsl rex rex.B dec jno retq add hlt (bad) sub fdivrl in movslq sub scas ficoml mov hlt (bad) sub pop nop jns outsl sarl lahf std or xchg cmp mov xor in callq pop cmpsl rex.WRXB sbb mov jmp lret lods js sbb (bad) adc mov jb (bad) cmp lret jrcxz and push imul (bad) (bad) xor adc (bad) cltd or push or (bad) lea lcall xor movabs push cmc mov imul sbb push mov mov fs test (bad) (bad) sub add outsl jns enterq mov hlt jmpq jmpq cmpb jmpq jmpq movsbw not add mov test stc and cmp bt jne add jmpq jb stc bt cmp jmpq add cmc shr data16 testl ds bt (bad) testl cmovs jge bswap add neg clc (bad) testl mov cmc shr cmp bt clc cmp jmpq ja rol shr jbe rcl sub movzbw rol or add bts test bsr shl mov bt cmc mov cmp test repnz jmpq mov bswap jmpq jmpq jmpq jmpq bt cmp jmpq andl mov orl or imul mov (bad) lahf notb xlat mulb movabs in and sbb xor cmpsl imul (bad) fisttp (bad) mov cld (bad) (bad) mov sub fidivr (bad) cltd fistpll ficomp repz fs jge jrcxz mov push cmp lcall rex.WX xchg (bad) (bad) mov loop (bad) (bad) ja (bad) imul rex.WR jp or mov and imul or (bad) xor pop xchg rcll (bad) xor jae test mov lret add jge sbb imul adc rex.X mov (bad) (bad) and lret xchg push out (bad) (bad) and pop xor rex.RXB (bad) (bad) fist cwtl clc imul fs es sbb cld (bad) (bad) jg sbb rex.WB (bad) lcall jnp (bad) (bad) in mov callq rex.XB (bad) std lea out sub cmpsl (bad) scas (bad) std andl jns stc (bad) (bad) fisttp fstl mov stc add push xchg cmp scas divl sti xor jg divl clc or (bad) jae scas iret (bad) cmp rex.WR mov (bad) jg callq nop scas sub movabs callq jmpq out (bad) insb (bad) pop (bad) mov sbb cmp xchg cmp fdivs fisttpll or movslq rclb add and sbb mov rex.X (bad) (bad) lcall adc (bad) (bad) mov xor (bad) (bad) (bad) rex.B xor xchg and xchg xchg push subb (bad) incl push repnz rex.R movsl fmull jb sub lea repz or add movabs push and adc (bad) rex.R or push lret sub nop (bad) in pop movsb pop rex.R add cmpb jmpq jne movabs mov jmpq callq jmpq jmpq repnz jmpq sbb sahf or mov rex.RX (bad) mov xchg add leaveq imul icebp sbb (bad) xchg jb std (bad) cli int3 (bad) leaveq pop pop fs repz pop cmp (bad) rex.RXB sbb sbb (bad) (bad) fbstp (bad) rex.RB mov (bad) flds lods cmpsl test adc fldcw lock lret (bad) xor xor sbb mov pop mov stc rex.B jnp xchg push cmp rcrl mov sahf cli (bad) lcall in fnstsw mov rolb rex rex.WRX xchg adc and repnz add stos rex.X rex.RB cmp test enterq mov in (bad) imul rcrl lret movabs fisub insl adc sbb jp rex.R sbb sbb imul rex.B es (bad) (bad) (bad) stc mov xor test add not mov jmpq jmpq jmpq jmpq sbb movabs loopne adc movabs xor xchg cmp sub mov adc movslq movabs (bad) loopne std (bad) lcall sub subl rex.RB jge push jrcxz sbb retq fdivr (bad) (bad) jg xchg divl mov jge andl data16 movabs add (bad) scas sub rex.X rex.WX lock mov pop cwtl movsl (bad) int xchg jge mov or cmp idiv or test loope cmp callq add xchg fcmovne repz lods in imul and (bad) (bad) mov icebp in push mov mov fucomip mov (bad) repz xor (bad) cmp mov idivl fsubs jo rex.XB (bad) cmp rex.WRXB (bad) (bad) (bad) (bad) mov adc pop outsl ffreep (bad) data16 ja movabs (bad) pop repz jle sahf jns pop (bad) sbb xor repz lea in imul push xchg jno add mov fist mov cld (bad) (bad) jmpq jg jnp (bad) lcall sub xor rex.RX lods push mov cmp mov xor mov mov out xor out fwait (bad) in push (bad) jle mov adc pushq lret push lahf (bad) fistp int movabs ficoml cwtl or (bad) xchg push cmp ds movsb rex.WR sbb out mov add scas sbb mov push jp icebp and adc rex.WB xchg cmc or shll in (bad) and add or xchg cltd sbb sub jp callq in or xchg push and (bad) (bad) (bad) jmpq mov push sbb fstps (bad) imul pop (bad) cld (bad) (bad) (bad) jg mov cli (bad) lcall (bad) hlt sbb pushq (bad) cmp add insb jb sbb scas stc adc (bad) jl mov mov or push cwtl adc xor rex.WX jmpq adc (bad) pop movabs pop (bad) fsubr (bad) (bad) rorb std (bad) mov test mov (bad) std popfq int3 rep movsbw not movzbw pop jmpq rex.RXB hlt pop fs mov or (bad) (bad) jns movsb pop imul (bad) cld (bad) and (bad) cmp in (bad) cmpb cmc pop fisttpll sbb out rex.RX rex.R jae retq (bad) lock ja push pushfq and xchg cmp movabs (bad) jrcxz and pop mov or (bad) (bad) (bad) insb push callq or (bad) (bad) mov add mov pushq mov int3 int3 jb sub xchg xor test or xchg cmp (bad) jle psubq add mov repnz por rex.RB sub insl adc adc cs sti xor rex.WRX cmp sbb cmpsl fcoml sub and sarl rex.W jnp rex rex (bad) lea bswap pop xchg pop lea not pop mov movzbl pop retq rex.WXB rex.RB rex.WRX rex.RB xor cs insb add stc bt ror jmpq ja jmpq jmpq clc test cmp jmpq bt push shld btr dec rcl mov bt stc sub jmpq mov (bad) mov int rex.WR int3 in mov (bad) pop (bad) scas hlt or (bad) jno jbe push push insl out gs loop sbb push rex.X jl adc repz mov shlb jbe pop test adc or cmp xor pushq rex.WR or (bad) lcall jns idivl (bad) (bad) iret sbb jae fsubs ljmp rex jbe sahf rex.WR ror fsubs cmc or jp sbb push rex.WB rex.WB out out movsl popfq rex.W pop fldt xchg outsl in cld in (bad) cmpsl mov addr32 mov jno cmp movsl std xor scas mov cmc or mov sub outsb out std add xor cli rex.WX xchg retq cltd cld mov xor lahf cli jp test stos (bad) mov lahf (bad) or push (bad) out mov add jge xor stos sti fs mov cltd lret (bad) lcall rex.WRX push js std (bad) lcall imul adc bswap xchg lods push xchg scas sbb iret (bad) mov add mov mov jmpq xchg repz (bad) test mov movsl and cli rex.WB mov cmpsb fs leaveq test push mov rex.XB rex.WX push mov or sti jmp xchg sub movabs data16 add andl (bad) (bad) jg rex.WR fsubl (bad) andl lea lret fiaddl adc mov js (bad) (bad) (bad) movabs pushq popfq jmp sahf (bad) sub (bad) cli adc add (bad) faddp jbe movsl adc jb test pop rex.WXB addr32 (bad) (bad) lcall pop out clc jrcxz rex.WRB pop pushfq mov loop pushq adc pushq push mov clc jrcxz decl xor xlat (bad) loope (bad) shll enterq (bad) jg jb not cli (bad) lcall popfq rex.RXB leaveq jae fildll or xchg xchg roll movl add test hlt rex.WR and jp pop mov xor (bad) lret cmp pop rex.WB (bad) in sbb cltd xor (bad) int pushfq (bad) nop callq jb pushq out icebp scas icebp in xchg xchg rex.RXB adc mov in (bad) out (bad) adc cmp icebp cltd (bad) out (bad) push and (bad) pop (bad) data16 cmc clc cmp jmpq stc test jmpq jmpq jmpq clc clc add jmpq stc test sub jmpq jmpq cmc cmp cmp repnz jmpq ja shr sbb add add clc add ror clc clc xchg setp movsbw mov bt inc rcl inc mov bt jmpq lret push mov add stos (bad) (bad) and dec test sub (bad) xor hlt cmp rex.XB and sbb push jbe (bad) sbb pop cmp maskmovq divl (bad) mov test test (bad) (bad) (bad) jg xorb stos cld (bad) lcall add (bad) lcall add sti fisubrl cmp rex.WXB ficomp je sahf or cwtl ja mov mov retq outsb cs fs rcll push pushfq rex.WR cld sub cli (bad) enterq add jmpq mov ss xor rex.XB cmp rex.WRX xchg mov (bad) fucomp hlt cli mov mov shr callq movabs sub scas mov xor (bad) test xor (bad) (bad) outsb rex.WRB jg in movsb jle pop rex.RX mov xchg xor jbe jmp movsb lea add add add add fstpt push add add shrb add add add add add sahf str lahf (bad) clc sahf lldt pop add movabs pop add and add mov add add add add add add add add add lahf sldt ltr verr (bad) jle str stos (bad) mov (bad) xor adc (bad) mov (bad) pushq xchg hlt adc sbb or movabs jo loop sbbb pop ja scas rex.WXB jle int and in push fcoms fiadd scas jrcxz fwait and (bad) xor adc sahf nop ja jge repnz or sub shlb cmp push rex.WR rex.RX sahf mov (bad) insl rex.W cmp xchg and pushq pop lods callq jns sbb enterq adc push pop loope adc push out cvtpi2ps test fnstsw rex.RXB mov movabs movsl sub (bad) rex.WRB adc fldl mov test mov sbb retq xor xchg sub shrb adc (bad) lret bts (bad) test in mov cli xor rex.WRXB push xchg push mov rex.R or movabs inc (bad) jge cmp hlt (bad) rol xlat adc enterq and rex.B addr32 icebp cli jae movabs jge jbe xorl insb insb ficompl mov pushq jb cld jno sub rex.RXB pushq lea cmpsb shl cmp (bad) mov bnd addb sahf fcomps test scas mov jmp sahf mov (bad) sbb shld fldenv test rex.RB rex.WRB stos xlat lahf xchg jae (bad) xchg cltd xchg gs push jae sub ss rex.WRX adc (bad) mov jae rcrl cmp insb insl rex.R cmp loop (bad) cli (bad) xor pushq mov incb (bad) mov (bad) out clc push xorb pop jae imul mul and mov adc rex.WXB mov test std push push xor push push fsts test (bad) add xchg in mov gs hlt cmpsb (bad) adc add out es in rex.WR mov (bad) rex.WRB testb enterq sub shl lods mov pop pop push mov jno popfq fisub add (bad) add cwtl lea sbb mov push mov mov add cmovl and imul sbb xchg pop sub xor (bad) jl cmp xor (bad) mov lret roll cli sti and mov jo comiss idivl je es fucomip (bad) test clc adc loop xchg mov insb xor je cmp idivl xor rex.RXB or fldenv stos jnp movabs sbb imul mov jbe rol rex.RX nop fidivrl or sbb add jbe add (bad) movabs cmpb and shl adc (bad) (bad) xor clc pop (bad) jl (bad) sub rorl fadds insl mov cs rex.WX fwait stos jmp mov in sub lahf (bad) repnz mov or cs xor loope mov (bad) mov jmp cmp adc movabs repz rex.RX stos (bad) (bad) cmpl sar mov jl mov stos and (bad) pop enterq lret mov loope add imulb sbb (bad) clc rex.RX out loopne jne pop rolb jl imul rex.X pushfq movabs icebp jg rex.RB movabs int mov push rex.XB int3 ja movslq sub popfq mov rcr sub mov fmulp mov xlat (bad) fnstsw adc jo xchg outsl adc add cli (bad) xor push andb sub xor insl xchg (bad) lret fbstp fmuls (bad) cwtl test push (bad) adc mov cwtl cld sub scas pop cmpsl pop xchg pop or loopne (bad) in int3 mov imul ficompl cmpsb sbb pop (bad) fisttpl mov pop lods (bad) stos (bad) fisubl movsb mov repz xchg movabs rex.XB sbb jne sub lock xor lret cmpsb (bad) (bad) nop in cmc (bad) fs mov and movabs (bad) (bad) xchg jo enterq shrl cmp pop add cmpl mov retq loop fs or cmp mov or in mov popfq lods rex.WX fidiv rcrl (bad) rex.RX int3 (bad) (bad) cmp push stos and xor (bad) in adc leaveq and movslq add (bad) movslq lods (bad) cmpsl adcl (bad) rcl lea addr32 xchg cmp jbe nop retq add imul push push jle xchg or ja add fildll mov rex.X xchg add movabs in cmp sbb push mov push cmp push mov adc lods pop leaveq add int3 orl rex.W clc xor lock (bad) xchg fwait mov lock in cmpsb and rex.B sub cmpl retq rex.WRB lret faddl je rex.WRX (bad) jae cmp cltd rex.RB imul pop loopne cmpsb (bad) jnp sbb (bad) sti pop sub ficomp out popfq movabs jg fisttp lea (bad) int3 sbb xor ror pushfq lods in imul (bad) mov insl sbb add jnp (bad) int int3 xor xor lret pop out (bad) mov cmovb rex.B cli out push incb xor imul (bad) (bad) add repnz jns sub idivb push mov fwait (bad) scas (bad) mov loope mov (bad) cs imul (bad) clc int xor in adcl std rclb es rex.R fs lret xchg cmp ds mov pop fwait movsb pushfq popfq addr32 xor sub jo (bad) xlat fisttpll callq loop mov (bad) jp (bad) (bad) movslq test lret (bad) jg (bad) xor xor fucom mov (bad) (bad) or lock fsubrs sub movabs (bad) enterq or jno enterq cltd jns rex.X scas js add pop add (bad) fxch (bad) mov imul (bad) mov rex.WB imul jbe xor rex and sbb xlat xor stc mov and (bad) imul jns (bad) adc jo adc sbb add sub (bad) test pop movabs push (bad) jmpq repnz in cmp incb rex.WB cmc lods jg mov pop sub (bad) mov xchg mov (bad) (bad) (bad) shlb out (bad) movabs xchg (bad) cli cmpsb cli mov (bad) (bad) ss jl (bad) mov movabs jrcxz retq rcll mov iret mov adc mov jge pop (bad) rex.R mov xchg psubsw adc mov rex.WRB (bad) vpaddusw xchg iret leaveq sub add popfq (bad) mov mov push movsb pop (bad) sub movabs out (bad) sbb cmp out sbb cli jno es (bad) pop mov xchg sarl in (bad) loope enterq (bad) sbb imul cmp (bad) icebp pop ja int3 rex.W (bad) rex.WX (bad) (bad) (bad) xor (bad) push sbb sbb rex.XB rex.WX pushq pop in movabs or sbbb jnp popfq (bad) out sbb adc sti ss xor mov out adc xor ja sbb repz rex.RX jb sub sbb jb sbb mov fcmove lods callq lods xlat and xchg pop shrl or retq js stos mov rex.RX test rex.B and jl rex.R and movsl imul movabs insb jp xchg and xchg mull pop iret fbstp mull pushq sub jnp rex.WRB out insl sub and and sub (bad) and (bad) icebp shrb pop adc rex.X jmp (bad) sub (bad) std xchg rex.WB sbb xor icebp repz movabs addr32 addb jle rex.B mov (bad) xor pop out imul mov mov xor fst xchg or mov test and mov xor outsb (bad) rex.XB (bad) shlb out xor in xor xor (bad) (bad) or jno,pt (bad) jp xchg movslq test scas movabs adc js add retq stos add movsl rex.RXB stos xor rex.RXB rex.R rex.WXB test adc fcomp jae mov movabs pushq add (bad) mov xchg add sub jno movabs (bad) fsubr or enterq mov (bad) sub (bad) shrl push and adc movslq (bad) cmp jnp es rex fiadd jmpq xchg (bad) lods adc retq lods (bad) test adc lock fmuls repz movsb and test xor jns (bad) stc and add mov jg jae outsl rex.WXB lea (bad) xchg push (bad) add callq adc jne push pop rex.X xchg xor pop lods adc in and loopne (bad) ds xchg frstor jmp mov nop xorb mov int3 jl jbe push movsl sbb (bad) and (bad) sub xlat fwait mov adc (bad) loop (bad) sbb test fistl mov gs outsl fs imul insb insb add jae (bad) insb insb add fs gs rex.XB jne je jb gs push je imul gs movslq jb add jb imul add insb outsl (bad) fs gs rex.XB jne je jb gs push je imul movslq outsl js pop insb insb add imul cs insb add add add gs mov xchg mov test jp (bad) testl mov xchg mov fist (bad) sub mov enterq jo add callq mov xor lock or push add mov ds cltd pop movabs sbb xchg mov jl pop hlt lahf (bad) icebp add movabs sbb (bad) (bad) fildll int3 rex cli (bad) lcall push test cmc (bad) pushfq test gs (bad) mov xor lea data16 sub add rex.WRB test sbb push and xchg push int (bad) adc mov retq sbb andl std lret dec bt cmp neg clc sub test bt shr jmpq jne cmc cmc movb clc test jmpq ja jmpq jae jmpq jmpq jle and jns mov je dec and rex.RX mov (bad) sbb jae retq test mov cmp cmp mov or (bad) divb cmp cs (bad) (bad) fildll cld (bad) (bad) mov test leaveq adc sub rex.X movsb cld (bad) (bad) (bad) imul jg jle rex.RXB es mov ds rex.RB jg jle fistl repnz pop xchg xchg cmp rex.W and jo jne (bad) or movabs retq adc enterq sub je mov pop test (bad) (bad) in movsl test es pop movsl fs adc cli (bad) mov rex.XB (bad) sarl out (bad) mov cmc cmp (bad) in (bad) (bad) (bad) jg (bad) imull scas jae rex.WX mov callq fistpl std (bad) lcall mov or (bad) lcall jae fsubrs cmp rex.B adc jbe callq jmp loope cld or movabs (bad) xor sbb mov movabs and fs imul int3 cmp incb nop (bad) retq cld or out (bad) loopne rex.WRX repz pop rex.WB popq int sbb jbe movb pushq sub add push ljmp (bad) mov add (bad) cli adc es gs pop xchg and mov cmpsb gs jmp (bad) out fdivl rex.WB sbb movsb fwait or xor movsb (bad) (bad) lcall cmp lret sbb or jno out or sub (bad) rex.WB and (bad) (bad) (bad) sbb (bad) lcall xchg or cmp xchg sbb mov not push push xchg loopne and rex.RB stos cmp (bad) imul (bad) pushfq push cmp sub sti idiv icebp cmpsb imul push stos (bad) test insl rolb lock sub sub push ss mov mov divb sub sbb outsb jbe sahf data16 adc sbb or cmpsl rex stos mov iret ja cmc or xchg (bad) jmpq mov or add stc add jmpq pushq jmpq rex.B rex.R push xor cs insb add cmpsb sbb mov test clc test add cmp stc bt bt test jmpq jmpq jne jmpq or bt mov mov cmc cmc clc stc and test add jmpq pushq jae pushq jmpq jmpq jmpq jmpq mov (bad) mov mov push jae (bad) ds rex.R jnp rcrl jg pop insl in fldt sub xchg sahf sub movabs adc adc rcrb sbb adc fistl xchg rex.RX outsl xor mov ja xchg jae adc push xchg sbb push setg test rex.WRXB sbb or (bad) (bad) jg (bad) (bad) scas jl lods rex.WR add (bad) (bad) adc mov rex.W mov out pop and and rex.WRXB (bad) in retq mov mov sti rex.WXB pop fstl (bad) and callq ds outsl loop (bad) mov sub or mov (bad) movabs movsl fs (bad) mov (bad) ss lea roll stos jrcxz pop and push rex.WB rex.WRXB xchg andl (bad) lret cwtl sti sub pop jno push movabs movabs out (bad) subb int3 rex.WRB (bad) (bad) jbe (bad) jno xor mov mov rex.X adc popfq pop imul sbb mov mov (bad) xlat out jae (bad) lods add xchg jbe sub (bad) lcall sbb in (bad) xor enterq pop mov adc mov xchg jle sub xchg rex.B cmp mov loope stc xor sbb jl cmp (bad) cmp (bad) (bad) callq adc or rex.WRXB pop ss loopne mov cltd rex.WRXB xor fsubrs vldmxcsr out loopne (bad) lea sub sahf loop jne mov fwait push xchg scas rex.RX add cmp cmpsl test (bad) jo frstor movabs xchg adc add movsl push (bad) jb retq (bad) fwait test sub clc stc test shr jmpq jmpq jmpq ja jmpq jo pushq jmpq adc pop jle mov (bad) out popfq in rex.XB add lods in test adc mov (bad) vpcmpgtd je sbb clc addb sub test and push fdivrp (bad) (bad) fbld (bad) scas iret (bad) vsubpd stos (bad) sub or (bad) (bad) jg loope outsb test (bad) lcall mov adc add pop or (bad) pop xchg (bad) xchg adc mov cmpsb (bad) xor xchg cmp (bad) (bad) (bad) xchg (bad) jnp add mov leaveq add push xchg (bad) (bad) int fwait jnp (bad) loopne and enterq push xchg or (bad) (bad) push mov movabs (bad) out rex.WB add (bad) mov (bad) mov sbb mov (bad) leaveq rex.WB lahf out notb ss lea rex.W ds mov out iret (bad) in test mov rex.RX (bad) (bad) jg push adc cltd js ljmp idiv cld (bad) lcall test lods and (bad) lcall adc mov lret test pushq adc (bad) push lods mov rex.WB pop imul cmp lods xor jrcxz and andl (bad) add repnz add push jmpq fwait push loopne xor sahf es outsb jbe fsubrl jae jrcxz stos adcl rex.R jp mov adcb scas mov xchg xor rex.WRXB mov (bad) mov cltd xor rcrb sub sbb (bad) mov xchg or (bad) es in movslq or xor sbbl jp sub push sub adc nop nop addl or cmp and lret jrcxz cmc mov icebp (bad) pop pushq movsb outsb mov (bad) lcall add lcall sub rex.WB push in out (bad) lea addr32 pop pushfq mov cmpsb (bad) std insl mov mov mov repnz ss push (bad) fidivrl xor sbb jrcxz loope iret sbb andl pop add (bad) (bad) xlat mov rcr flds push (bad) mov leaveq (bad) xlat jle in ss mov rex.RX (bad) in rex.RB mov (bad) in sbb sub or cmc rcr push sub test mov sub shr rcr cmp sub bswap movsbl lea jmpq jmpq mov jmpq jbe jne dec not test rcl mov shrd mov sub rcr mov bt bt bt sub stc pushq clc cmp jp ja test sub lea add stc mov setl test sub mov stc bt clc clc repnz jne jne stc cmp movb cmc clc jmpq callq shl cmc movsbw add and movzbq mov cmp bt cmpb jmpq jl test (bad) (bad) mov std or lods in callq movabs imul cmp rex.R loop retq or (bad) xor test xor movabs xor jg decb pop sti jnp cmp pop rex mov xchg movsb rex.WRXB lret fistl (bad) (bad) adc sub (bad) cmpsl rex.WRXB sub xchg divl and jle push hlt jno int3 movhlps mov (bad) and mov pop lea pop jmpq imul (bad) mulb sar nop (bad) xlat retq js outsl sahf jbe in sbb out rex.RXB sub xchg (bad) mov sar jns (bad) ficom movsb fs ss add cli cmpsb rex.WR (bad) (bad) jg lahf rex.RX sub (bad) mov (bad) sarb in and xor (bad) lcall clc mov (bad) lcall jne jno sbb xor xchg lret pushq rex.WX jle mov mov sub pushq mov push pop fistl (bad) fildl pop or rex.RB rex.XB shll enterq movabs jb sub imul lock push xchg (bad) (bad) mov push xchg push (bad) (bad) gs rex.XB sbb mov je fidivl jle je rex.X and rex.WRX xor sbb jmpq sub bt (bad) hlt mov sar dec dec add clc mov jmpq mov or icebp mov (bad) mov lods xor (bad) cmpsb (bad) fldenv mov (bad) xlat divb outsl cmpsl data16 or jbe int (bad) scas out fs sub and (bad) (bad) (bad) enterq sbb (bad) xchg movabs mov (bad) sbb cmp (bad) (bad) (bad) xchg out fstl nop rex jg sbbb mov hlt add mov lret jo sbb cs je cltd rex.WRXB jg xchg or (bad) and rex fimul retq enterq pushfq mov push jbe iret (bad) outsb rex.WRB add push mov mov and (bad) clc emms xchg (bad) shrl lahf (bad) (bad) movabs mov (bad) cld xlat scas pop out or xchg jle lea callq jmpq lcall in (bad) mov (bad) (bad) mov xlat add add rex.B shlb rex.WXB lods sbb mov (bad) out and pop sub cld (bad) lcall sarb (bad) (bad) jg or cmpsl test incl in xchg jnp (bad) or test adc nop push (bad) and stc mov data16 (bad) jns cmp add fist jne jrcxz jmpq jmpq (bad) mov mov test rex.RX xor mov data16 and sbb movabs add rex.RXB rex.RXB data16 repz adc xchg add pop cs xchg movslq cmp (bad) mov adc (bad) (bad) mov adcb rex rex.RX or pop mov lss ss ljmp shrl xchg push mov adc xchg or clc xor jp xor ss fcomp sbb addr32 (bad) (bad) scas ljmp clc jmpq jmpq bt stc imul bt cmp add jmpq jne bt cmc clc clc movb test bt cmp test jle je bsr sar adc sbb push and inc mov sbb adc sub not jmpq rex.R mov xchg mov mov rex.WRB pop (bad) jge rex xor adc (bad) mov add retq jge xor and (bad) jmpq jne fcomi (bad) pushq fsts rex (bad) lcall ljmp mov push lahf jg out cmp pop mov sbb (bad) and (bad) andl (bad) movsl cmpsl xor (bad) je and (bad) push add rex.WRX sub or (bad) lods xchg outsl mov cmpsl test xchg jae xchg mov out (bad) scas sub xchg rex.X and movabs add je adc (bad) push xor cmc adc fildl sub mov andl imul outsl (bad) (bad) cmp (bad) (bad) lcall cli jmpq lcall cmc pushfq jnp pop cmp rex mov retq imul shrl pop xchg loope pop movsl test xor std test rex.RXB es (bad) sbb (bad) adc cmpl push xor pop out callq xor (bad) ja (bad) and xor cmpsl shrl loop jns ja callq stos mov icebp jg idivb test pop rex.WX insl adc cmp pushq (bad) pushq loopne sbb jbe fistl (bad) retq rex.X rex.X mov jle in fldenv fldt pop jmpq jmpq jae jmpq jmpq callq jmpq jmpq jmpq test jmpq jmpq jb stc clc cmpb jmpq cmp callq popfq adc fnstcw gs jno (bad) fwait (bad) adc cmp and fcmovnu and loope mov pop movabs adcl (bad) repz mov (bad) or negl clc mov xchg push or rorb jle mov mov mov enterq mov std add rex fcomps icebp shll rex.RXB push loopne and push mov or scas fcompl imul pushfq xchg add mov mov fldt xchg xor sbb notb rex.B sub test pop and orl retq (bad) int3 (bad) fisubl jns mov out add outsl insl sub in jmp xlat cs (bad) mov stos adc nop jne pop adc (bad) sub test sbb push adc xor adc sti jl add mov mov (bad) cmp add adc (bad) or (bad) jmp sub mov movabs rex.B rex.R sbb in (bad) jge (bad) (bad) (bad) ja popfq rex.RB mov fdivl (bad) (bad) out lods cs and loop adc andb lahf xorl out stos adc rex.R (bad) mov push lea adc test ds retq repz xor cwtl (bad) rex.R (bad) cmc add (bad) cmpsb pushq mov fsubl addb push in adc adc cmpsb pushq lock fbld adc add (bad) mov mov out cmc pushq or adc loopne in jmpq mov jge push cmc mov adc stos xor outsl (bad) notl adc jle enterq adc pushq adc xor cmc jp and and int3 mov sbb (bad) in mov mov push (bad) sub (bad) jmp pop jbe (bad) push push test rex.WRX mov mov cs (bad) adc jno cmp (bad) mov (bad) (bad) lea adc scas lods push push fdivrs add std mov hlt adc jmp and cwtl lock add sbb rex.R repz mov imul adc jp addl js in rex.WRX lods adc xchg ds cli adc push xchg sbb movsb rex out lock repnz sub mov fstps pop fsubs (bad) roll movsl add (bad) psllq mov adc stos xor sbb test mov xor sbb repz sbb cwtl fcmovb xor pushq (bad) test loope cmp jb cmp sbb adc xor (bad) (bad) shrl shlb xchg mov ficoml stc test push lahf enterq jmp or or (bad) stos rex.WXB mov adc rcrl adc xchg adc repz push sub lods sub mov cmc adc movabs rol or clc test xchg je xor fild push push ljmp icebp lea movabs jae sub or cwtl mov pop in jg add push mov lret sub rex adc cmp movsb adc (bad) jne int cmc pop xchg adc fs hlt adc jnp movabs stc cld ficom mov push je cltd xchg pop mov test insb retq movabs je imul rex.RX cmp or int sbb fnstsw movsb in jbe mov pop (bad) or (bad) push cmp ror ja fcoml xchg (bad) and pop gs adc mov rex.WRXB adc jle retq push xchg pop rex.WR icebp mov mov adc movabs (bad) std add loope (bad) stos adc xchg leaveq lods insl cli sbb jbe fldl push sub (bad) (bad) xlat sahf mov mov or or movabs add adc leaveq xor iret adc (bad) incb int adc scas (bad) jg cmpsl sbb adc mov callq jns (bad) addl lret adc (bad) mov test adc (bad) (bad) add (bad) adc adcb cmp ror or (bad) push (bad) mov notl repz hlt (bad) adc and pop sti stos out sub mov (bad) or movsl add rex.WRX sub repnz and stos rex.WRXB adc xor negl mov adc (bad) out jo sbb sbb data16 adc jno add out imul retq jo rex.RX (bad) adc fdivp xor mov mov jle pop fcomps scas (bad) (bad) xchg (bad) fimull xchg insb cs sti (bad) mov hlt andl mov jae callq or cld push jbe jrcxz or rex.B (bad) cvtpi2ps xchg adc in rex.WX or push fdivrs mov push (bad) xchg or std xchg movsb (bad) fistl add lods lods push lock sbb rex.WXB sti rex.R enterq adc je (bad) popfq fiadd push push in add fldenv pushq xchg fistpll jae sbb xchg adc stc cltd fadd pop test scas movabs adc shll je fiaddl add sub adc push add cwtl fstpt adc rex.RB adc fsubl xlat adc and jg cmp cli xchg adc movabs pop pushq (bad) (bad) sbb push cmova mov adc jbe repz jo rex.X adc sub push lods rex.WX cmp movsb xchg jo jbe xchg outsl rclb cmp xor lock pshufw ss outsl xchg (bad) (bad) clc out and (bad) ficom rex.WR jmpq test cltd cs (bad) fsubs xor cmp sahf cs outsl out jb out jne xchg (bad) clc fbld rclb add outsl (bad) or xchg (bad) mov add adc jne jno push sbb lods insl and pop mov sub (bad) pushfq adc sub push adc rex rex.WB sti and mov repnz lods insb not repz jb callq cmp clc rex.WRXB push sbb add (bad) (bad) jg lock rex.WXB fwait cmpsl mov int3 (bad) or (bad) cwtl adc (bad) test adc jbe jb mov sub pop (bad) adc (bad) int sub or sub jnp mov pop subb je cmp and movsb cmp (bad) mov push sbb (bad) cwtl test rex.RXB (bad) rex (bad) test ficoml or adc pop xchg adc pushq jns xchg sub push xlat sub mov cmc or or mov mov fistpl outsb fidivrl or pushw rex.WRXB ss (bad) rex.RX jmpq imul test (bad) (bad) sbb ja sbb (bad) rex.RB (bad) jge (bad) xchg retq adc pop fmull test jo clc (bad) movabs out in lods je emms cmp movslq xor addl pushq lods lret jne stc fmuls mov es sub rex.WRX xor (bad) (bad) in rex.W rex.X adc push xchg and mov rex.RX pop (bad) jb sbb mov je popfq pmullw adc (bad) imul jrcxz adc mul add ja (bad) rex.WRXB xor in sti mov test (bad) jmpq sub in (bad) movsb xchg fdivrp adc (bad) rclb cmc (bad) pop hlt loope adc mov iret fxtract rolb sysexit (bad) or mov (bad) (bad) divb adc pop (bad) (bad) mov notb xor (bad) xchg adc hlt clc retq pop imul (bad) mov sbb push mov out addr32 (bad) cmc and cli xchg shr (bad) (bad) xchg xor pop mov addr32 insb jl xchg jo js movsb je sub andl sbb addr32 or test (bad) imul push add sti jo xor mov hlt (bad) cmp rex.WB fsubs xchg ja push or (bad) push jmpq cmp test jge rcrl and xor (bad) adc add repz add pushfq testl pop in (bad) cmc rex.WRX jo or xor (bad) (bad) jrcxz xchg or adc add cmp lock (bad) loopne pop mov fist or rex.WB rex.RXB pop jg (bad) ja test cmc lahf jnp lock rex.RXB out rex.WR xor idiv (bad) pop add loop jae not xchg mov nop mov jle jg mov add mov testl or (bad) jbe jo in (bad) or (bad) push out xor scas (bad) (bad) out out or std xchg jnp xor ljmp (bad) cs jl je,pt mov jae (bad) xchg rex.XB rex.RB (bad) (bad) jo mov rex.XB (bad) mov fidiv out out out out out rex.WRX lea movslq mov jg or fs jrcxz xchg lock pop faddl repnz xchg movsl rex.W adcl (bad) lret rex.WRXB fs lret (bad) (bad) adc mov or lret in mov rex.WRXB rex.WXB out push mov xlat (bad) (bad) pop adcl push rex.WRXB mul xchg push mov jne orl (bad) out pop fadds (bad) addr32 adc out adc (bad) out adc rex.R (bad) rex.XB fucomp outsb mov ja rex.WXB rex.XB push addl rolb movl mov lret rex.XB hlt adc rex.R test xchg stos sbb cltd int3 movslq xchg xchg add mov sbb add jae xlat (bad) push (bad) adc enterq xchg xchg lods sbb cmp test adc (bad) jae add (bad) rex.WRXB sbb xor xchg in sahf test pushfq (bad) mov repz fs pushfq (bad) mov rex.W jrcxz adc test push push ja add pop mov (bad) imul (bad) xor mov rex.WRXB (bad) jle movl or retq (bad) xchg callq in xor test rex.XB gs cmp lret xchg sbb notl push in jrcxz rex.WR adc (bad) pop xchg (bad) mov and out xchg addl movsw xchg xchg xchg pop xlat retq adc rex.WR rex.R rcr jge mov retq (bad) or push add outsl in (bad) (bad) test outsb (bad) data16 je (bad) movslq mov je pop sbb movabs outsl xlat rcll scas xchg or in xchg lods cld (bad) sub add cmpsl cld or or mov pop out subl sbb rex.WX jrcxz lea pop (bad) outsb (bad) lods mull cmp push (bad) push cltd xchg (bad) adc jge (bad) repz xchg in rex.WRXB insl outsl loope in pop mov movabs adc (bad) jne rcl sub testl sbbl retq in jbe jb test stos (bad) cmp insl pop (bad) jne cmpsl (bad) lods rex.RB xchg mov callq add enterq out (bad) rex.WR scas (bad) cmp mov pushq jo (bad) cs scas movabs sbb rex.RX movsl lret (bad) and mov shl xchg (bad) xor (bad) mov rex.RXB and je pushfq xlat mov xor cld (bad) jae out rex.WRXB lahf xchg and lods outsl rex.RXB (bad) mov nop outsl mov mov add rex.WRX fsubl pop lret movslq jge mov add movslq rex.RXB addr32 xchg (bad) loopne xchg rcll mov rex.WRX in rex.RXB xchg shr (bad) fiadd test xor xor (bad) cmp cmc (bad) pop (bad) cmc rorb movsb xchg fdivrp enterq mov (bad) divb xor rex.RB test xchg shlb cmc rex.WB ficom (bad) rex.WRB (bad) sub xor xchg movsb (bad) fdivrp adc and test or (bad) cmpsb jg rex.RXB or iret es imul lea push (bad) in fidivl insb pop or push lahf retq js rex.WX jrcxz sub cmp loopne rex.RXB ja add adcl sub add xor jge imul rex.WR mov popfq or cmp test (bad) or rex.WRB loop xchg je jmpq jp or push push jae cld mov xlat out add add iret sahf pushq fild (bad) adc mov (bad) cmpl xor movabs ja mov rex.RX mov jns or pushfq rex.RB or mov pop hlt push (bad) (bad) and mov (bad) (bad) movslq fimull (bad) pop lock callq fcom ror enterq mov test adc nop mov js jo pushq pop push push rex.WR rex.W rex.R xor and and adc or add add sti div out jmp adc ror lret (bad) adc mov stos cmpsl adc xchg (bad) mov ja outsl imul pop pop push push rex.WRXB rex.WXB rex.RXB xor sub movsb and sbb fwait pop fs repnz (bad) lock icebp xchg addl (bad) movabs hlt xor cwtl mov test (bad) rcr ror rex.WRB rex.RX sub (bad) xor iret adc xchg (bad) or lahf push idiv (bad) rex.WRX mov fs adc prefetch or and xchg pushq rol or movslq or or or (bad) adc or fcmove sbb scas fcoms (bad) add adc (bad) out ficom lret mov scas stos cmpsb movabs (bad) jle jp jb pushq (bad) pop adc rex.WX rex.RX rex.X ds sub and adc or add adc jmpq (bad) ror leaveq (bad) adc test cltd xchg xchg lea jns jno imul push rex.WRB rex.WB rex.RB rex.B sub fistp insb adc adc adc leaveq (bad) adc xchg jb (bad) sub push orl fldt (bad) outsl mov lahf out pushq rex.WRXB sbb ss rex.WRXB rex.WRXB push xchg mov std adc ja rex.WXB (bad) cmp jo,pt xchg add jrcxz or xchg std xchg xor mov rex.WRXB fwait orl jnp rex.WXB mov jnp je mov rorl int callq rex.XB je jmpq xchg je outsb (bad) (bad) ficompl callq or movslq je cmp xchg sbb mov xchg loop xor movabs fsts sub (bad) insb je cmp rol xlat xor xlat int sbbb (bad) pop (bad) imul add xchg (bad) add jnp adc xchg callq jo cmp stc pop std cmp lret (bad) jg adc shrl rex.R je iret (bad) out repz not xchg rex.XB (bad) pop mov (bad) cwtl xchg iret testb cmp repz jae movabs (bad) (bad) out and insb xchg (bad) mov test (bad) sbb fisubrl repz adc xchg jg and jrcxz notl rex.WRXB xchg rex.R xor sbb pop idivl cmp mov jne add (bad) lahf and (bad) mov jl and in sbb hlt xorb pushq sub ficom je jo lods rcrb mov rolb (bad) sbb test adc in adc insb scas mov or rex.WX and out adc (bad) mov rex.R faddl fdivrl xchg icebp nop rex.WRXB jg movsb rex.WR rolb (bad) rex.XB sub xchg sarl xchg rex.B out (bad) andl push push or add mov and mov (bad) callq rex.WR xor mov sti (bad) mov rclb ja mov divl or lret adc pushq testb fs xchg xchg je sti test cmc (bad) test rex.WRXB xor jmpq lret add mov test xor test sti xchg mov lea push (bad) out in hlt sti cmc mov rclb cmc test rex.WRXB rex.RX data16 jbe xchg mov negb cmc push test movsb (bad) fimul cmc push test rex.WRXB mull push mov (bad) jbe xchg test movsb (bad) fdivrp (bad) mov mov xor jbe cmp fdivrp hlt rclb push cmc xchg jno (bad) lret not jo hlt rcl fsts not (bad) sti add rex.RB cmp lret mov retq add (bad) enterq in movslq mov adc sub cmpsl xlat mov or or push jae rex.X (bad) or (bad) imull xchg lret (bad) add iret and pop ja add cmp (bad) (bad) iret mov xchg mov out fisubr sbb jmpq scas faddl xchg neg rex.WXB loop fistp (bad) pop jg cs xchg jl xlat movb rex.WRX pop (bad) scas (bad) push xor mov (bad) xchg xchg cmp lock cltd cmp jbe fwait pop mov ja test (bad) cli in loopne retq movsb push jnp rex.RXB (bad) (bad) push mov (bad) push sub mov int es rol rorb popq fiadd cmp xorl mov push out adc cmp cmp rex.WRX (bad) je je mov rex.WRXB (bad) xchg rex.RX mov lret rex.XB movabs fcomp mov jle iret mov or xchg xchg retq cs insl push movb outsl retq (bad) pushq rex.R fs pavgb mov mov out (bad) (bad) pop jge outsl (bad) rorb (bad) addr32 mov mov jnp rex.RXB pop rex.RX jb xchg addr32 rex.R xlat (bad) movabs divl push (bad) int rex.WRXB (bad) rex.RX lret cmp push xchg jnp,pn test xchg mov mov insb rex.RX repz adc (bad) mov fucomi rex.WRXB xchg nop (bad) mov add rex.XB (bad) test cmp xchg adc loope rex.WXB jns xor (bad) out movslq in xlat or sti xlat (bad) mov push sar callq mov mov rex.RX sti imul push xor mov pop (bad) (bad) je outsl scas pop sti sub fidivl xchg rex.RB pop sbb (bad) rcl lahf (bad) leaveq (bad) (bad) xlat jo rex.RB clc lret test adc imul xchg mov ficomp cmp jae (bad) push mov xchg rolb jrcxz mov pushfq jmp mov xchg and pop mov rclb retq xchg loop divb push mov nop adc (bad) cltd cmc out adcl xchg or idiv mov rclb or lret mov stos push and retq rex.WRX mov (bad) xorl (bad) cmc out xor xchg (bad) or pushq rclb cmc out xchg scas decb rcll out (bad) (bad) jne add (bad) sti mov callq (bad) xchg dec movabs or push add adc adc mov (bad) (bad) adc (bad) (bad) or pushq rclb stos (bad) rex.WRB lret push (bad) iret (bad) mov stos (bad) rex.WR xlat (bad) data16 mov xlat rcl (bad) xchg cmpsb nop ja (bad) jne push (bad) fnsetpm(287 (bad) add cmc add xchg fs decb movsl xchg (bad) push rex.X rex.RXB rex.WRXB imull or rcl out xchg (bad) test rex.WR mov (bad) mov iret (bad) (bad) rex.WRX mov callq rex.WRX (bad) and jl (bad) xchg push (bad) (bad) ficompl rcll (bad) sti or (bad) mov push xchg scas add mov (bad) mov movabs imul xchg rclb movsb (bad) test ds mov add jne (bad) xchg jmp mov (bad) scas adc decl xchg ss sti jbe (bad) jns (bad) fldt retq fcom mov outsb xlat (bad) lods push (bad) in lods in (bad) and add or fcomps or or jp xchg rex.WRB jp (bad) (bad) popfq adc fbstp ds testl mov xchg mov movabs xor lret cmc push (bad) (bad) xchg (bad) hlt hlt xchg mov test sub jg xor sub adc xor adc jae xor not (bad) fcomip cmc out xchg rex.WXB rex.RX lea clc cwtl shll sbb adc iret adc movsb xchg mov ss mov lret clc stos callq jle (bad) mov or mov (bad) and (bad) (bad) je and mov add in jle add je rex.W and fdiv enterq sub and jle mov rolb jo xchg rcl mov add sbb int3 out cmpb add bnd jrcxz (bad) mov addr32 ror ja push mull fbstp mov add idivl add (bad) repnz int3 xchg mov lret pop (bad) or xor mov movsb or cmp movl faddl xor (bad) stos retq div sub or insb rex.RX je xor or movsl push add pushq push fs sar mov mov push rolb int3 adc enterq adc adc xchg hlt adc ror push cld test rex.WRXB and adc imul pop (bad) and and pop (bad) and sbb (bad) ss push and outsb and mov mov (bad) mov rcl push pop adc clc xchg push xchg enterq (bad) or adc lock shr pop adc rex.WX callq rex.WRX scas sbb pop adc ficompl addl cmp mov mov sub add or cwtl repz xor fildl (bad) (bad) movslq (bad) lahf rex.WXB lods test stos and xor sti jg lea push rex.RXB insl xchg movabs push (bad) subb int xchg pushfq pop sub cli ja sahf in xlat add es (bad) (bad) push mov insb xchg sarl cmpsb lahf rex.XB fsubr push fwait push lahf (bad) jae xchg test movslq sbb xor rex.XB mov subl hlt mov rex.RX mov rex.XB (bad) mov (bad) xchg push rex.WXB movsl xor pop loopne jg lea and cmp test jb andl int mov movslq (bad) mov rcrb fcom idivb xchg scas sti addr32 xchg lock mov (bad) icebp pop ja fs rex.XB xchg push ror mov movabs (bad) repz ja or fs rex cmp in rex.RXB mov rex.R sti or mov repnz fcompl pop jnp test insb subl int (bad) jb (bad) (bad) sbb fwait (bad) in or jbe ja mov rex.WRB rex.WRXB out xor xor xchg rex.WXB sar adc addr32 enterq or mov sti jmp nop repz fstpt (bad) div (bad) lret and or xlat push hlt ja or mov mov jmpq psubsw cmp leaveq rex.RXB movsl pop (bad) outsb callq xchg add movslq mov xchg test outsl nop (bad) jl stc (bad) cmp push scas or movabs rex.RXB rclb retq sub fdivp pushq xchg mov sub jle cmp out (bad) rex.WRX (bad) divl clc add or cmp rclb pop add xchg subl movabs mov stos (bad) cltd cmc mov mov (bad) loope (bad) in xchg sarb xor icebp (bad) xor push adc add mov popfq push repz adc es adc movabs pop imul sahf add jg (bad) adc cmc mov repz (bad) (bad) jl scas mov rorl cltd iret (bad) ss lret mov xchg movsb lahf ficom jne out leaveq (bad) mov adc data16 gs mov in (bad) xlat sub rex.R jge cmpsl jo jb push jo pop insl adc jo idivb scas scas xchg (bad) rex.W clc fs xor mov rex.XB sub or iret jl (bad) movabs mov mov cmp rex.B rex.WR (bad) jrcxz or (bad) xor xchg xchg (bad) pop test test pop (bad) sub and pop rex.R cmp adc jg jp adc iret (bad) cmp mov nop ja imul (bad) jo scas (bad) sbb rex.RXB sub popfq repnz je rex.RB lea jrcxz mov push fisub pop out cmp ds movabs (bad) mov fs mov (bad) push rex.RXB sbb cmp jmp callq repz sub jno cmp out rex.WB fucomip stc sub and (bad) push lret sarl pop (bad) lret repz xlat testl (bad) fldt movslq movb test int mov sbbl (bad) rex.WR movslq xchg imul je cltd ja jo and add repz (bad) repz (bad) in fdivp (bad) outsl fwait rcrb (bad) (bad) jo jl pop and fstl (bad) mov rex.XB (bad) push mov jl cmp or mov out (bad) jmp (bad) rex.WR cmpsl mov pushq jno lret lea push imul gs ss cld mov mov xchg add fisubl (bad) outsl test rex.XB es and xor (bad) es (bad) mov rex.WXB mov jae std jle movslq xchg xchg and ja (bad) enterq loopnel addr32 pop lret mov add out add xor and or xchg (bad) xchg cltd rex.XB ror icebp jg push cltd es xor int3 xlat (bad) (bad) jl addr32 lret mov (bad) test out ss adc jp jg in cmp imul (bad) stos gs rex.RXB (bad) nop sub rex.WRX fs jae rex.WRX fs mov cmp leaveq rex.RXB test rex.RX js rex.WR loopne pushfq jle rex.X jne sub rex.R xchg rcr pushq or pop (bad) (bad) jo or jnp xchg add repz out lods (bad) mov neg stc adc repz push lret cmp push rex.WX repz pop fistp push mov and mov enterq lret xor psllq cmp push (bad) ficom push adc rex.RXB push out or (bad) sbbl mov test in (bad) mov xchg movslq push xor out lods pop outsb (bad) loope pop (bad) jae rcrl jmpq mov and mov lahf test test rex.WXB gs repz mov cmpsl pushfq or mov add (bad) movsb out (bad) xchg rex.WXB jne or in jrcxz insl sbb jg pop push (bad) in xor in sbb and (bad) and rex.RX rex.WX xor add callq ficomp retq jne in lret fist xorl sbb icebp imulw jnp add xor sub sbb enterq xor xchg (bad) mov rex.R jg or (bad) out js pushq add pushfq sub loope test add add jmp scas adc pop (bad) mov cmpsl imul or (bad) (bad) rex.WR cmp jrcxz lahf mov and and fucomip movsb add repnz (bad) mov div mov invd mov xor xchg cmp jnp fistpll add int fwait xchg (bad) xchg mov scas cs fwait scas cmp or neg rcl hlt (bad) push rex.W (bad) xor (bad) fdivrp ja not push cmc mov rolb (bad) rex.WR (bad) xor neg sti (bad) (bad) mov notb test movsb xor (bad) jbe mov mov mov mov mov jne (bad) (bad) rex.WRXB (bad) movsb (bad) fdivrp xlat mov hlt (bad) xchg pop (bad) ss movsb xchg fdivrp (bad) mov (bad) (bad) (bad) rex.WRXB rex.WRXB xor fimul cltd mov xchg cmc push test push xchg pushq movsb xlat fdivrp xchg rclb div test divb xlat movsb xchg ficom mov mov mov mov testl xchg mov mov jne (bad) cmc xor mov sti (bad) mov jl ss movsb ja sti (bad) mov rex.WRXB ss movsb (bad) fdivrp (bad) mov divb (bad) mov xor mov xor push mov push rex.WRXB xor je sti (bad) (bad) jne notb sub push (bad) nop mov fdivrp (bad) mov (bad) mov adc orb hlt adc (bad) push (bad) sbb (bad) push (bad) enterq rex.WXB mov push (bad) add xor mov in addr32 add xchg repnz (bad) (bad) callq xor mov in add jo mov test (bad) xor idiv mov rcrb push xor (bad) (bad) data16 test sarb sbb fs (bad) es sub rex.R jl cwtl js pop int3 rex cmp adc jo add add adc repz sub (bad) sbb callq xor adc rex.WX (bad) (bad) int3 mov movsb (bad) mov nop sub je,pn (bad) adc movslq push (bad) push xor vmread test xchg loopne movslq push (bad) push (bad) movsb sbb fisub add ds (bad) mov movsb cltd insb jle adc notl and cmp rcrb rex.RB outsb or addr32 (bad) (bad) rex.WRB fcoms jae jno sub xchg adc retq jbe fidivr add jp movabs rex.WB cmc imul (bad) (bad) cmp and rcll pushq (bad) sub rex.RX rex.XB movabs andb xchg (bad) mov hlt and pop test lret xor xchg repz xchg and in and mov movabs push jge mov (bad) rex.RB or rex.RX mov (bad) jb loope lods (bad) xlat lock jge movabs mov rorb xor (bad) sbb xchg out (bad) out rex.WRB (bad) ja add rex.W fwait xor or imul cli pop (bad) pushq ja addr32 (bad) adc (bad) pop and cmp stc rex.WRX leaveq xchg ja (bad) and stos push mov rex.RXB (bad) (bad) ja pushfq (bad) ja leaveq (bad) push lahf push fwait rex.WRX jmp mov mov loope lods (bad) (bad) rex.WXB stos (bad) jge xor icebp repz (bad) jo repz notl sti rex.XB rex.X cmp mov xor test xor (bad) iret jo movabs cld (bad) (bad) fist (bad) xlat movslq outsl movslq notl cmp callq jae xchg pushfq sub imul add mov popfq cmp or mov (bad) xchg push xchg imul mov mov adc popfq insb ja mov sbb mov pop mov callq (bad) int3 outsb rex.WRB mull mov movabs jmp xchg (bad) fs adc mov ja xchg subl sar push mov fist je repz push (bad) add lret xchg mov sub cmp rex.WRXB rex.WXB add rex.W rex.WR test pop add icebp sbb sarb push adc rex.WR (bad) fiadd or nop sub loopne test idivl (bad) pop movslq (bad) xchg (bad) (bad) sub xchg (bad) (bad) int jrcxz mov pop cmpsl jo test fstps add fwait and insl rex ds test and out lret cld add (bad) xlat je (bad) xchg out out sub imul xchg and sbb xor rex.RXB (bad) xchg callq (bad) add in push in lret jo pop imul or repz cmpsl (bad) (bad) rex.WB or fcomi push cmp icebp lods hlt rex.WX and xor rex mov ja mov int test (bad) in push ja xchg popfq fwait ror push fsub lret adc rex.XB jae pop or xchg movslq pushfq lock jrcxz mov mov (bad) jrcxz xchg sub jo (bad) (bad) mov add mov add mul iret pop (bad) mov or and mov nop (bad) clc (bad) hlt loopne mov mov retq rex.WB hlt sub (bad) jrcxz mov cmp mov rex.W iret loope push (bad) repz lret sbb (bad) hlt push notl (bad) jrcxz add lret adc iret or or add xor jrcxz adcb sub cmpsb fidiv rex.WR mov sbb std (bad) xchg pop movslq pop mov movsl (bad) cs mov stos mov xchg nop cmp rex.WR cmp xchg (bad) test adc fwait repz andb push xor xchg add sbbl xor (bad) cmp rex.WB lods (bad) (bad) cmc fildl cmp rex.RXB mov scas (bad) loopne movsl test pop fs pop rex.WRXB adc movl int3 add test (bad) mov mov notl stos cld adc mov retq (bad) cmp (bad) sub jb (bad) sub (bad) rex.WR rex rex.RB shll rex.R out cld xor mov lods in push jo adc xchg test pop mov icebp (bad) rex gs int3 xchg je jo cmp retq test mov out out rex.WR and rex.WRX sub lret jo and jbe cmp jle (bad) sbb adc je jae add cmp mov or test (bad) int jo xchg rex.WB loopne out out rex.X jp mul push lock out or and pop or xchg and lret sub rex.R sub je push in adc xchg cmc xor iret xorb mov add cmpsl xchg test jmp stos rex.RXB outsb pop jo in xor rex.WRXB iret stos fwait rex.XB loop (bad) mov icebp movsl in xlat jae (bad) or lods xchg clc mov xlat retq stos sub xlat xor mov or cwtl (bad) subb out rcrb jne push xchg (bad) jrcxz (bad) xlat jbe in fs adc rex.W or cld mov or xor cwtl mov jg in (bad) lock test pop rclb (bad) sbb sbb jg (bad) mov pop push lods movsb sub retq mov popfq mov sbb mov mov rex.WRB rex.R rex.X and adc sub mov or push jmp test pop lea add (bad) push xor or fxch movsl cmp (bad) jne mov sti pop rex.RX sub repz jmpq sbb jle fisttpl outsb add adc or ja addr32 lret jg push push or scas xchg rcll rclb pushq (bad) std outsl cmp or sbb lret (bad) (bad) xchg (bad) xor or mov icebp rex.R and lock jmp jg out out (bad) (bad) push rex.R add xchg sub (bad) gs lcall xor ss xchg lret (bad) cmovnp push jae (bad) or lret push repz lret rex.WRX jae in jnp pop push mov xchg (bad) add popq jnp scas lock iret pop fcmovnbe rex.RX iret rex.WXB pushq xorl in push int3 (bad) add (bad) int3 (bad) (bad) jge add nop mov (bad) mov iret ds mov (bad) rex.WRB ds sti xchg rclb xchg hlt test nop movsb add (bad) (bad) adc out (bad) jp (bad) (bad) sub and jle pushq notb out xchg (bad) je (bad) mov sbb loop xlat jle sti xchg rcl fdivp (bad) pop push cmc push test adc push (bad) out push mov gs sbb mov (bad) hlt vandnps fdivrp (bad) mov rcr cmc loope (bad) in push mov xchg mov xchg rex.WR push sub (bad) xor lret movsb rex.WR fwait rex.W pop add test (bad) movsb jrcxz lods (bad) jbe ja sbb mov divl mov rex.WXB and fistl cli (bad) jle not push jmp pushfq test adc or (bad) sub ja xor (bad) xchg (bad) test js mov test test and add fs pop shlb scas xlat pushfq (bad) (bad) fs mov rex.RX rex.WRXB pushfq (bad) rorl and rex.RXB (bad) cmpsb xor cmpsb xchg out movsl or ja (bad) cmc (bad) lret xchg add js test hlt (bad) (bad) ja (bad) cmp (bad) push (bad) (bad) jae (bad) pushfq or rex.RXB fs notl lret js fnop cmpsb mov xlat nop je (bad) nop fs (bad) mov test mov add (bad) and (bad) incb and out lods mov (bad) sbb or mov test or (bad) ja add je rex.R lock mov mov je xor xlat ss cmpsl jmpq mov xor (bad) xchg cmp repz (bad) xchg repnz stos (bad) test (bad) (bad) (bad) pop (bad) jo sub iret pop mov (bad) mov fnop (bad) (bad) int3 hlt (bad) add pushq mov cwtl (bad) jl iret fisttp mov testb in shrb divb jrcxz mov sub mov cltd pushq mov (bad) xor mov mov jl hlt adc cli hlt fistpll je jo adc lret movsb push pop and xor sub cmpsl rol adc adc rex.RX push mov fsubrp add rex.RXB lea cmpsb rex.WXB add adc cmpsb repz xchg repz jg out in clc mov hlt mov add jnp in push mov fdivl rex.B out (bad) xlat and (bad) sbb cmpsb insb and repz movabs movsb movsl jo cmp xchg add rex.RX cmpsb xchg nop cmpsb scas mov sti out not (bad) and frstor cmp lods adc shr (bad) (bad) (bad) pinsrw (bad) loope mov xor (bad) out pop mov ja and mov (bad) cmpsl fld mov pushq ja (bad) ja sub xor movabs out out jno (bad) in xchg ja (bad) stos test (bad) icebp hlt cmp (bad) mov cmp lock push mov test hlt xchg xlat and lods ja and ja adc sub push lock idiv adc ja cs mov xor push jns push iret cmp (bad) mov (bad) rex.R hlt (bad) rcl mov rex.RB jl rcll or mov rex.RX hlt movabs add hlt cltd mov (bad) rolb rclb mov hlt sarb rcl nop adc (bad) fwait jl stos jrcxz add lock int (bad) jae cmpsb fs out pop adc (bad) or xchg ja mov xchg rex.WB rex.WRX pop (bad) (bad) (bad) test rex.RX lock xchg pop (bad) insl loope cmp lea mov rclb xor gs add int stos lret jle xor rolb rclb (bad) rex.RXB (bad) fwait mov mov rclb xor lods ror xor nop (bad) test push push cmp nop mov add push pop add shlb movabs (bad) rex.RXB (bad) fwait mov mov leaveq mov hlt jns and jg lock in rex.R (bad) callq sbb nop (bad) (bad) (bad) out lock std in movabs sub cmp cmc (bad) add sarb adc (bad) stc in icebp cmpsl mov or (bad) sub (bad) and cmc sbb rex.WRB fs (bad) xchg (bad) add shlb (bad) test (bad) add hlt xor mov sub rex.WX (bad) mov mov jo int (bad) adc rex.WRB fldln2 clc fxch ss jp ror pushq mov mov (bad) (bad) (bad) lea jae xor rorb stos rolb (bad) pop rcl (bad) movabs push (bad) jge jno loope int stos rolb (bad) pop rcl push xor jmp jl testl jno add test in rex.WB rex.RXB rolb push sbb shll cs rcl outsl xchg (bad) (bad) add (bad) es ja (bad) out leaveq pop cmp hlt rcl (bad) (bad) out rorl (bad) cmc rex.RX fwait sub callq sbb rex.RB fwait lea mov pop push (bad) (bad) test add stc jmp sar hlt stos adc xchg add scas lock mov mov xor lock xor lock xor xor movsl js xchg cmc (bad) add (bad) mov mov cmp gs (bad) (bad) add shlb (bad) test (bad) add gs adc or leaveq rcll mov jl (bad) popfq lock xchg sarl (bad) test loopne (bad) adc rex.WRB shlb (bad) test rex.WRXB mov xchg ror addr32 pop je test stc repz lock rex.X insb rex.WR push shlb adc shlb (bad) test (bad) add or push xor stos nop sti add pop jo (bad) (bad) (bad) test sbb movabs (bad) test sbb cs add mov cmp sar mov add or sbb test (bad) (bad) fwait mov sbb (bad) xchg repnz nop add sbb rex.WRB nop jno negb add xor jp int rex.WB add (bad) (bad) cs fcmovnu jl or xchg rex out subb int jge rcl cli lret mov movl xor cmpsl pop subl xchg xlat sbb sub rex.WR cmp xlat xchg loope xor sub rex.WX (bad) add rcrl mov (bad) ja (bad) (bad) (bad) mov jg mov cmp (bad) (bad) fucomi sub loopne xor fisubr stos popfq mov sbb rex.XB rex.RXB pop movslq adc (bad) or xchg es jrcxz mov rex.WRXB cltd in (bad) (bad) push pop push mov push add mov (bad) jae push movabs hlt lods in jg rex.WX loope add pop stos (bad) jo rex.R rex.WXB fcomps and (bad) callq mov xor stos enterq retq xor push sub or rex.WR rex rex.R fs xor in orl add or out mov repz pushfq cmp xor xor add cld push lahf xor xor jle and lret lret sub push fstl rex.WR pushq and lock ss iret mov rex callq imull jl xchg scas add mov (bad) (bad) cld rex.RB add addr32 adc and (bad) sub xchg jrcxz (bad) leaveq rex.B pop icebp and fcomp xchg enterq out cltd mov and rex.WXB pop add lock dec je cmp add jb and xchg loop addb (bad) stos sbb icebp mov mov rex.XB xor jb rol (bad) sub outsb rex.WR (bad) je push in adc test rex.WXB lock in mov adc leaveq sti ds testb mov sbb mov xchg (bad) (bad) insb mov (bad) test (bad) xchg scas (bad) mov lods push mov int jge jb jmp addr32 mov rex.WR addr32 sub push mov lods pop (bad) push out (bad) retq (bad) pushq rcl xchg xor xor xchg pop xor lret mov or out testb repz rex.RX jge rolb es es rex.RB (bad) hlt rex.WR sbb (bad) nop stos pushq pop rcll xchg xchg (bad) mov mov mov sub xchg (bad) loopne movslq push jne iret mov cmc hlt loopne rex.WRB (bad) add rex.X pop scas scas jbe xchg cmp adcb add pop mov (bad) (bad) vmovups and out (bad) pushq sub test xchg mov push mov iret mov fnstsw pop fwait out push cmp jg lods retq repz mov xchg add fbstp (bad) fwait or sti iret lahf cmc rex.R fwait data16 mov (bad) ds fdivrs nop rex.WXB (bad) jp pop mov out cs mov (bad) (bad) in lret (bad) sbb cmp pop icebp jno xchg mov push scas sub mov rex.X fistpl (bad) push int jmp fisttpll repz cs fistp pop push (bad) xchg jae mov cwtl subb rex.WXB cmpsb pop imul loop in jp rex.R add rex.RB rex.RXB (bad) (bad) pushfq jb pop or fcompl (bad) mov jmp add fidivl push jmp push cmp sub (bad) repnz fist jrcxz sub out mov pushfq add adc adc jrcxz (bad) rex.RX sub rex.WRXB or (bad) xchg mov or or test pop jbe push sbb in (bad) rex.WR pop fldenv (bad) lret pushq push (bad) rex.WXB movabs mov rex.WR rex.WR rex.WRB rex.W rex.WB movabs cmp pop out (bad) (bad) (bad) xor mov int jg imul and cmp rex.WX rex.R rex.RX mov loopne add adc js pushq mov or cmc ja jno mov rcl rclb in push jle (bad) push mov ror sti iret cs (bad) and stos xlat ja xor or outsl jbe (bad) xchg push fucomi pop rclb lods xchg sbb test ja test pop stos (bad) (bad) test int3 mov hlt fidivrl rex.RB (bad) push mov iret add rex.X movabs mov rorb cmpsb cltd scas jge (bad) lea xor pop mov mov mov rex.WRXB (bad) sbb lods (bad) rex.XB cli and (bad) popfq sahf mov (bad) xchg mov xor mov (bad) xchg pop mov lret data16 rex.R mov lods cmp test xor (bad) sbb xlat push sub and and pop jmp jne stc rex.RB rex.R pop callq (bad) add repz lock subl pop cmpsl je (bad) rex.X rex.B test (bad) jae pushfq (bad) (bad) cmp (bad) (bad) test rex.RB push movslq lock shlb faddp decl xor adc jrcxz bnd iret popfq jg (bad) lret repz in mov mov jo rex.WRB jrcxz je (bad) lock out xlat mov xor (bad) adc negl mov ja ss test (bad) movsb add pop rex.R nop movabs mov (bad) jbe stc es (bad) xlat fwait add xor (bad) js (bad) cmp jrcxz je or lahf orb xchg cmp rex.WR bnd in (bad) cmp (bad) imul imul stc xchg xor ja negl sti jbe (bad) cltd shlb add push xchg xchg addr32 test roll cmp nop int (bad) nop (bad) subb retq cmpl icebp sbb mov loopne mov xchg mov and movabs rex.WRXB mov ja sti (bad) fiadd out jne jmpq xlat add xchg (bad) cmc xchg imul (bad) je and lock jrcxz (bad) iret jmpq (bad) adc rcll push (bad) sbb mov xor pushq scas cmp sbb rcrb adc mov nop mov lret rex.RXB rex.WB out (bad) (bad) roll out xrelease lods xchg push sub (bad) jbe je sub (bad) (bad) adc push callq notl mov add add idivb sub mov pop rex.RX loop out xlat cmp cmp mov orl insl ror (bad) pop xor cmpsl jl rex.WRX jmp not cmpb out adc (bad) push gs jae jg pop rex.R jge out lret sbb jp mull (bad) pop roll sti push mov es xchg mov jp fidivr (bad) int xor adc rex.RB rex.X rex.X iret (bad) jg fistp gs pop sbb movabs sbb add out rex mov push (bad) mov (bad) pop rex.WRXB rex.WXB movsl iret jmp add jo fistp or (bad) rex.WXB mov jmp or cs stos push xor insb nop mov retq (bad) rcrl (bad) rex.WRX lret flds subb pop scas rex.R mov sub gs fdivs xchg movb js xor xor (bad) mov (bad) mov pop js mov test (bad) scas sarl xchg loopne rex.X jne mov (bad) rex.WXB mov scas jne (bad) push push and or lock cmp int (bad) test rex.RB int3 adc hlt (bad) stos jrcxz rex.WRB jmp jne jp adc jmpq sub in sti (bad) (bad) xchg rex.RXB icebp mov xchg rex.WRXB adc push fs cmpb andl out cmp (bad) rex.RX adc repz loop (bad) jrcxz xchg (bad) mov xchg xchg imul int movslq loope rex.RX (bad) or mov add mov sub adc rex.R xor (bad) add xor rex cwtl cmp lret fisttpll xor rex.W sub (bad) sub xor retq xlat sub repz test mov sub xor (bad) es mov mov sarl out (bad) sub sub rex.R repz sub and test movsl jrcxz rex.RB cmpsl and cmp xchg (bad) addl out lret adc mov repnz xor ja (bad) xrelease (bad) fidivl sbb nop subb or mov adc pushfq (bad) sbb (bad) mov pushq pop xor (bad) jne mov rex.WRX jnp xchg rex.WRXB out psrlw rex.WR rorl rex.RX js (bad) cld push rex.XB lret repz rclb xor test rolb add add sbb (bad) cmpsl jp mov movabs fcmove sbb rex.WRB rex.RXB in lret in (bad) sar callq rex test int add add lret (bad) pop int (bad) and sub jge jo lock (bad) xchg jl je add nop xchg rex.RX mov lahf rex.WB and (bad) pushq (bad) or (bad) mov sub stos mov jo xor (bad) mov lcall repz push jbe movsl adc xor or retq hlt lahf stc ds (bad) (bad) mov jbe mov rex.W rex.WR cmp pushfq (bad) rex.WRB rex.R or divl xor xchg xchg (bad) xchg ss cmp outsb (bad) ror or jae mov sarl out jp (bad) jl mov pushq faddl (bad) outsl mov or xchg (bad) (bad) addb je xchg (bad) rex.B or sbb movsl sub mov (bad) xchg sub mov cmp sub rolb rex.WX mov rex.B fistpll insb jmpq (bad) (bad) rol rep push pushfq sbb andb (bad) adc jrcxz rex.RX lods je out fcmovne mov leaveq push sbbb fbstp mov jrcxz rex.X rex.WRB gs rex.RB mov (bad) xchg mov andl xchg or je hlt sub (bad) popfq mov imul loop (bad) mov or mov add (bad) (bad) adc pop jo sahf or xchg or repz cmp rex outsb int3 rcrl rex.W sub test cmp int3 sahf scas (bad) cmp fwait iret mov (bad) test jge insl out jno mov or iret fninit mov lods addr32 jmp lods in push xor xchg enterq jmp mov outsb (bad) and callq (bad) (bad) stc xlat xchg (bad) sbbl test in adc or xchg adc lahf addr32 callq loopne fcoml fcomps (bad) xchg cld movabs test rex.WRXB fiadd adc add in rex.WR out in shlb addr32 movsb repnz int3 cmpsl test mov (bad) (bad) or (bad) rorb repnz int3 (bad) test (bad) int rex.WR rex.WRXB rex.WRB repnz int3 out test imul shrb add insl repnz int3 scas test mov add sub test idiv sarb add jge mov idivl add cmp test neg rcrb add pop repnz int3 sahf test mov add sbb test notl rclb xchg repnz rolb mov push push repnz repnz div (bad) jo jb jae repnz mov mov mov xor add add mov ror test test add rex.B repnz loop jrcxz loope (bad) mov movslq movabs mov add and enterq adc push lret ror jno leaveq pop rorb rorb rorb rorb rorb rorb rorb rorb rorb rorb rorb rorb rorb rorb rorb rorb rorb rorb rorb rorb rorb rorb rorb rorb rorb rorb (bad) mov out lock repnz int3 (bad) test notl mov add je ja mov mov xor (bad) mov xchg (bad) test testl mov or mov mov mov xor repnz mov (bad) cmc lock movsb mov lods int3 cld test adc lock in (bad) lock movabs mov out mov xchg push push add hlt test rex.WRXB sbb callq loopne fcompl test sbb xor xor ss rolb mov test movsb cwtl rex.WRB xor cmc rex.RX je (bad) jle sti rorb (bad) xor cwtl mov test movsb xchg and lea xor cld rex.WB in gs fdivrl rex.WR lock (bad) sbb pop rex.WR lock push or (bad) lock pop push lret adc xchg lock int3 xchg leaveq (bad) rex.WRXB rex.R lret cld (bad) jo push mov (bad) (bad) cmpsl lret (bad) (bad) adc rex.WRB rex.X sub lret ss sbb fidivrl jns int3 rex mov rex.WR rex.WRXB sbb (bad) fsubl test loopne fcom rorb cwtl int3 mov push (bad) lret (bad) lock or mov imul repz lret loopne cmc mov nop pop push leaveq pop movsb xchg pop push je adc ss nop cmp cmc sbb and (bad) lock pop in xor (bad) mov sbb jo push cmpsl ds mov int3 add in out adc add add fldl push rex.XB or sbbl jb insb lock sti (bad) loopne xor hlt xchg push lods or add (bad) lock movabs cld (bad) in (bad) cmpsb cmp je nop fdivp cwtl mov or xchg sub xchg fmul xchg add nop (bad) notl adc fs adc lock (bad) and fiaddl push rex mov mov xchg clc xchg movsl xor int adc and push (bad) adc shlb (bad) cmp rex.WRB push outsl notl xor adc (bad) and adc movabs leaveq or (bad) jbe xchg xor sub cmpsl adc fdivl and sub loop xchg pop sub test xchg rorl jnp rcll and vpor imul sub jbe rex addr32 or icebp adc test mov rex.WR fchs mov shrl push mov push sub popfq rcll (bad) mov sbb mov rex.WX ss adc add std test push cli (bad) adc ja pushq adc jg (bad) adc test int insb (bad) rcrl (bad) push adc (bad) test (bad) adc mov clc (bad) jl xor adc mov adc outsl sbb adc xchg adc shrl (bad) xchg jne mov movsb addl and rex.WRB retq sub rex.RB btc fadds std mov adc cmp adc (bad) divb and (bad) repz lods shlb adc (bad) xchg int3 rex.WRX clc (bad) sub adc adc cltd out mov (bad) roll leaveq outsl jno or push jnp (bad) adc (bad) add or out outsb icebp adc loopne and add test or callq icebp orb ja rex.WX lock (bad) test or mov push rex.RX and adc loopne pop sub cs (bad) rex.WX or rcrl jl add rex.WXB callq sub loopne rex.XB sbb adc sbb lret pop jmp push sahf clc and mov cli ja adc movabs push cmp mov sbb test sbb repnz (bad) lods (bad) in movabs (bad) fimul jge sub jne mov adc xor rex.WRB fcomp push jnp es mov rex.X imull out in pop cmp clc (bad) add cltd retq sarb movsl ficomp push xor jae out xchg adc es int adc iret retq adc sub mov jl retq (bad) sub sbb je and scas rex.RX cmpsl jp mov (bad) rex.X sahf mov movabs jl mov rex.XB lret or sbb imul enterq pxor adc lea push adc in fmulp adc cmpl nop cltd test decb lea ja or (bad) adc xchg cmp push sti cmp push outsl fcomps in sub clc jg callq sbb fcomps xor (bad) add (bad) adc int mov fisttp rex.WX xchg adc mov sti jae test adc scas mov cltd adc sub adc popfq sbb rex.WRX push movsb rex.WRB in adc rex.WX jle rex.RX cld mov adc mov adc (bad) or (bad) pushq callq in push cltd add (bad) adc rex.WB addr32 xchg callq adc (bad) rex.WX sbb ss push (bad) push sbb imull (bad) (bad) pushfq mov xchg clc jne push cli notb (bad) cwtl mov adc adc mov movsl (bad) (bad) pop xchg unpckhps mov je sub adc int3 sbb rex.WXB rex.WRB adc notl rex.XB shlb sub mov mov adc sub test adc cs xor cmp out rex.WB lock rex.RXB rex.RB rorb int3 (bad) (bad) adc scas stos adc cmp insl mov scas xchg jns pushq or sti (bad) test mov adc out mov cmp loopne push mov mov (bad) sbb imulb xlat test movslq cmp sbb mov (bad) sbb out outsl adc xchg adc adc test or imul adc xor push xchg xor cmpsl adc pop ja xchg pushfq fidivl imul ja pushq push (bad) sub sbb mov pop hlt push stos fcomp xor push xchg jbe pushfq push sbb adc (bad) cltd (bad) adc push stc pushq or adc sbb xchg stc (bad) rcll sub sbb (bad) pop cmc test fdivs or (bad) pop mov or push or stc adc xor sbb mov jne stos xchg ficompl (bad) fsts (bad) rex.RXB movabs fidivl or cmpsl mov and sub sbb mov adc push in cmp sub ja neg adc add mov jno mov sbb pop (bad) cmc xchg add xor enterq (bad) xor test adc idiv enterq (bad) pushq mov lret push (bad) adc push jrcxz mov sbb cmc rex.W sbb fcoml sahf testb (bad) rex.WRX jnp (bad) mov adc add test out adc popfq sub adc sub cmp adc out push pop adc adc sbb mov jo rex.WRB jp add cmc adc sbb adc adc pushfq je push int3 cmc xor or push adc lods mov rex fdivs mov jo xchg sbb adc fdivrl jo outsl rol sbb pushq int3 rex.WX pushfq (bad) push pop loope xor callq pop in xchg xor adc mov fsubs pop mov ja sahf leaveq add and (bad) mov (bad) adc mov mov adc out sbb and fmull in xchg xchg pushq cmpsl gs pop jle enterq clc xor add rex.WRX xchg in pushq or stos push mov imul cltd rcrl adc movslq and adc rex.RX out callq imul in nop cld retq jno adc ss test out rex.WB cs int3 adc fmuls pop adc mov mov jne lock jl pushfq (bad) adc mov adc adc adc jns add lock rex.WR mov lea adc rcll ja (bad) sbb (bad) testb (bad) or adc jp adc push or push adc sub (bad) clc mov adc sbb push adc fistl (bad) rex.WB out (bad) and seta adc clc pop movsl adc rorl lods adc mov pop stc xchg jl sub pop sub (bad) mov xor mov adc xchg and ja xor (bad) lods test mov jnp sar clc rex.X (bad) and loope pushq sbb scas lock adc mov scas hlt adc fsubrl push adc (bad) mov mov cmpsb lretw mov stos adc sub sbb adc cmp movsl (bad) subl (bad) fstl negb cmp pop enterq cmp int3 clc push rex.WR or lods adc lcall stos stos rclb fmul jp (bad) adc movslq imul (bad) adc (bad) xchg je clc (bad) (bad) jmpq mov xchg mov sbb stos fdivrl retq rex.WRXB pop add pop (bad) add (bad) adc cltd xor hlt xor (bad) (bad) test push push mov sbb adc pop imul fisttpll shll sub fisttpll lea (bad) stos (bad) fcoms rcl xor mov retq jb adc movabs jns repz and nop xchg adc or sub cmp jl pop fsubl imul fmulp mov adc xor sub stos adc cmp jbe or movabs mov xor xor movabs xchg (bad) jle rex.WRXB adc rex.WR fidiv (bad) and lret rex.WRX fcomps pop mov push rex.B xchg rex.RB repz and jg cmpsl sbb pop je rcll xchg (bad) rex.WX sbb and rex.WXB xchg jbe adc pop (bad) (bad) and (bad) callq or mov (bad) test out push or adc (bad) xor xor gs ss (bad) mov enterq outsl mov mov jo mov sbb add jge fs ds stc (bad) out and in sarb (bad) movsb jrcxz mov cmpsb or lods popfq adc outsb rex.X or or test pop cwtl pushq sbb outsb out rex.RXB repz pushfq int adcb xchg rex.WRXB add fdivl (bad) out mov mov (bad) cmp int loopnel adc pushq test add (bad) adc cmpsb push (bad) stc adc insb adc or mov clc movabs movabs and sbb xor xchg mov rex.WXB add gs fnstenv add mov jl sub jge (bad) (bad) pushfq jo adc adc gs adc rex.RX adc (bad) sbb enterq lret fdivr in mov imul adc sbb shrl cmpsl adc lret (bad) cmp and hlt cli cmp rcr test jp jg mov or lock or adc (bad) fwait mov adc jmpq imul xchg adc sbb push xor adc rex hlt ss enterq repz stos xchg fdivrs jae adc xchg adc pop jno (bad) movsb or (bad) mov jae cmc adc jno xchg pushfq clc mov rorl rex.WX jno ja and xchg jb xchg sub sbb cmc jno (bad) xchg (bad) cmp (bad) xchg (bad) (bad) in pop pop cmp adc or pushq jae fdivs cmp xor outsb rcll rex.B jg or sbb sub sbb clc (bad) js xor pop xchg cmp (bad) mov adc sbb fidivl or rex.WRXB xchg fsts (bad) cmc adc (bad) xor sbb adc out repnz adc lea sub sahf mov rex.XB jns lret adc xchg notl (bad) jno sub and test (bad) insb in cmpsb pop mov jmp (bad) (bad) and movabs adcb cltd lret rorb push add mov (bad) adc adc mov mov std sbb sub (bad) adc (bad) pop (bad) add cwtl adc jl out adc adc and ja adc jg and rorl test (bad) add sbb jrcxz adc xor adc pop (bad) pop adc fdivrs xchg adc (bad) cld retq cltd sbb lods adc mov pop add loop cs sub (bad) jl xor clc mov movabs adc push movsb jp mov fcoms xor rex.WX rex.RXB (bad) mov cmp pushfq pop es xlat pop pop or (bad) negb mov pop xchg sbb mov adc mov fwait or or sbb jge sbb repnz mov adc xchg xchg mov fmull xchg sbb lret ficompl ds (bad) and stos jno adc (bad) push fwait rex.RB pushq (bad) or lods iret mov rex.RB mov or outsl mov rex.RX and sub cmp test adc fistl push fisub lock scas jb push adc fnop add in je adc push mov adc es insb mov (bad) (bad) (bad) mov (bad) xor btr mov in (bad) clc (bad) fsubrs or push (bad) callq xchg adc or out scas (bad) rex adc cli rex.WR sbb movsl (bad) add fisttpl adc retq adc rex.RXB (bad) adc lea xor (bad) jge jb rex.W je lods unpckhps sbb sbb and adc jns scas xor pop (bad) test leaveq adc (bad) pop or movabs lock cli add cli (bad) fsts and xchg rclb lret int sub adc add rex.B (bad) sarb adc add mov in and adc iret cmp and (bad) icebp (bad) push and movslq pop (bad) (bad) (bad) xchg adc fmull mov loop sbb sub nop adc movslq and sub jae mov or adc mov push movsl (bad) cs (bad) cmp enterq adc iret test (bad) rex.R sub (bad) xor adc mov adc cwtl mov leaveq adc (bad) mov rex.WRXB jns jmp in movhps stos xlat mov adc pushfq rolb adc adc cmc outsl out adc pushq jg rclb movabs pop adc loope out adc insl jg fisttpll xchg pop and movsl pushfq repz rex.RB pop sub adc sbb rex.W adc cwtl mov lahf cmpsl (bad) adc mov (bad) adc (bad) out xor cmc rex.W adc or cmp mov in and out rcrl push enterq or adc rex.RX fdivrs movabs icebp mov pop fadd push test mulb adc or rex.X (bad) fsubl imul adc out lock adc xor mov movabs fwait rex.X retq sub clc (bad) es cmp pop cmp push add popfq mov (bad) (bad) and (bad) jno movabs rex.WX rex.R mov rex.WX add or mov callq clc cmc (bad) imul jmp sbb (bad) rex.X xchg test sbb divl rex.RB movabs rex.WXB rex.WRB rex.WRXB fsubr jnp scas mov je fwait es xchg fidivl xor (bad) xchg xchg adc and rex.B cmp mov mov mov mov jp adc (bad) and or xchg js fmull adc cmpsb (bad) mov rex.XB lods adc jae adc rorl adc xchg and stos in (bad) je (bad) sub push add jo cld adc leaveq rol lods cmpsl (bad) xor pop adc std movabs xchg sti gs imul xchg nop adc mov and sbb leaveq rex.WXB adc or xor adc (bad) jp (bad) callq adc std (bad) rex.R jg movsl rex pop xchg jo push movslq (bad) adc (bad) or stos pop loope (bad) (bad) xor (bad) cwtl test rex.W (bad) mov xchg mov mov loope rex.RXB mov adc imul mov rorb xchg adc push add adc sti mov js jg rcll sub gs (bad) hlt retq and adc clc and pop in sbb outsl pop rcl fadds xor fist mov pop jge movsb (bad) sbb (bad) movabs fwait xor fld xor or push hlt negb mov mov movabs addr32 (bad) or xchg adc (bad) or adc pop xor (bad) adc in mov push adc sti sub sbb cmc xlat fiadd gs cmp leaveq insb (bad) xchg rex.WB mov jge fcmovbe sbb clc adc rex.W pushq sub push adc add shr lret cltd outsl fbstp test adc sahf cmpsl (bad) fisub xor stc add fwait push push enterq clc (bad) movabs xchg adc pop jbe push (bad) loopne xor jge adc mov fcmovnu xchg push adc fs stc pop faddl cwtl adc mov lret in mov adc rex.WXB adc cmp lahf xorps in xchg mov mov sub cmp (bad) sub jle (bad) adc rorb test add (bad) adc jnp in jo sahf lret vmovaps scas mov rex.XB adc lret or sub jbe cmp push sub adc adc sub or mov pushfq (bad) adc ja loope popfq and test add jo (bad) push cmp adc xchg stc sbb and push or push cmp lret adc adc fmuls sub and and (bad) movabs rex.WX fmul fldl (bad) sbb repz push push movsb insl mov (bad) jns fs out (bad) and and adc sub (bad) fnstsw scas cmp mov or or xor imul js push test ja push cli adc or movsl xchg xchg or std lock jge (bad) mov icebp sbb callq mov add sbb push lahf (bad) movslq (bad) or test xor scas (bad) rex.WRB mov rex.X rex.XB test (bad) jp test subl in sub mov (bad) xor pushq adc rex.RX rep fsubrs rcll xchg repnz retw adc stos iret cmp xor or cmp rex.WRXB ss (bad) adc mov (bad) js nop (bad) xchg cmp mull fdivl mov sbb xor (bad) sub outsl or (bad) loope rex.WRB adc fdivs loop imulb jae add adc xchg (bad) cvtdq2ps rex.WXB cmpsb mov mov jg imul fsubrs xlat sbb push fbstp iret mov insb loopne (bad) faddl lret rex.WRX rex.RX gs jp (bad) adc jg adc rex.WRX jnp or test adc (bad) cltd xor je icebp add movsb and sbb adc test insl adc fnsave fcoms hlt test (bad) adc and flds adc sub mov adc lret xor sub lods jmpq test mov xchg adc add jmp xchg adc sbb xchg adc pop mov adc cmp push movsb movabs mull scas xchg adc rex.XB (bad) fmuls adc test cs adc sahf imul adc rex.R out rclb cltd sub gs fnstsw std adc jmp popfq outsl adc test out fwait push jne (bad) out cmpsb adc jp negl xchg stc push out pushq in and sarb test adc adc rex.WRB stc adc shrb cwtl pop (bad) cmp mov xor push fsubrl (bad) scas xchg pushfq in movabs (bad) cmp (bad) adc ja in adc movsl (bad) xchg (bad) and or mov sub and vpsubusw outsl mov push jno (bad) pop adc insb clc test mov xchg or adc push (bad) out pushfq push adcl notb in test sti adc xchg adc sbb outsb or cmp add sbb mov or or xchg test movsb adc adc fneni(8087 adc lock (bad) shlb xchg adc pop hlt (bad) jg mov lods adc sbb mov rcll (bad) hlt sub (bad) pop test jge jg adc pop pop xchg leaveq clc mov fmuls (bad) (bad) cmp jge adc sbb fcompl sbb adc rorb sarb adc sbb ficoml icebp (bad) and xor insb xchg xchg jne add (bad) add sub adc fidivl callq adc movabs push rol adc sti xor (bad) sarb in imul adc (bad) (bad) pop test sub adc xchg (bad) rex.W callq adc icebp fstps mov or gs adc jns imul test xchg xor (bad) lret (bad) pop jae fdivl jmpq (bad) or setl mov adc adc adc jmp in jo mov repnz and (bad) test out sbb cmp stc stos rex.WRB pop movabs xchg test sbb insb mov (bad) adc je add hlt (bad) xor rex.XB gs rex.R (bad) imul imul xchg mov adc movabs mov (bad) (bad) in adc (bad) pop enterq (bad) adc lret mov gs movabs (bad) sbb sub adc adc rex.XB sbb mov sti or or in pop sub adc movsb xlat fsubs imul mov jno cli jmp (bad) (bad) adc (bad) lods test adc idivl mov adc (bad) sbb jbe (bad) xor cmpsl adc mov (bad) rex.WR (bad) rex.R (bad) and fxtract out (bad) mov rcrb jo jle mov (bad) and (bad) adc hlt pushq adc (bad) (bad) and sbb or xor (bad) out (bad) cmp outsl rex.R rex.X adc rex.WRXB and movabs cmp adc cld outsb or adc jae cwtl add outsl jns rex.WRX push add test xchg push xchg in outsl adc (bad) rex.RXB movsb fs adc (bad) (bad) pop fimul movsb cmp xchg subb adc shlb movabs (bad) push mov xchg pop (bad) and fwait lahf ficomp jnp push movabs ss adc mov xor or clc (bad) cmp or rolb outsl add js lock in sbb rex.WRXB movabs sbb sub adc mov int3 movabs gs faddl loop testl (bad) cs rex.RX adc lods sub callq adc mov adc (bad) jno imul in int movsb xor cmp callq xchg mov callq adc clc cwtl (bad) adc fisttpll adc rex.XB cmp (bad) cmp sti stos stos iret and mov pop scas (bad) adc sbb callq mov xchg out loop adc xor xchg pop fcoml rex.WR movslq fdivrp movsb loope cmc (bad) lea and (bad) lock lahf rex.B rex.RB and xchg push (bad) adc rex.WRB movabs xchg outsb rex.W adc add movsl or cmc cmp je std stc flds lods add (bad) (bad) fcom test retq xchg pop fnstsw cmp loop fs adc adc iret sub adc pop cmpsb rex.WRX or rex.XB rex.WB (bad) mov push jl xor rex.R test xchg rex.WRXB cltd push mov adc int mov push (bad) (bad) outsb fnsetpm(287 (bad) sbb jno jrcxz pop pushfq or xchg lret adc loope sbb pop (bad) push push sub loopne rex.W xchg rex.WR fstenv adc sbb adc cmpsb (bad) fdivr test jns stc xchg jl mov adc int add roll push mov lock add (bad) sub and and (bad) pop int3 adc pop xchg mov mov sbb cmc imul xor jne hlt rex.WX xchg sub xor test jrcxz clc movslq (bad) (bad) fistl rex.WX pushfq push sub mov sbbb (bad) mov (bad) movabs (bad) (bad) outsl (bad) fsts jne out scas mov movabs frstor movabs push (bad) adc mov stos test jno and xchg sbb xorb push cmpsl (bad) fdivs xchg adc fldlg2 mov or lret xor adc xlat mov and (bad) xchg jb std sub jnp add adc jo xor movsl sub push or adc (bad) (bad) iret adc sbb mov push std and jnp rex.RB adc rex.WR pushfq (bad) mov clc sub mov shlb jb,pt rex.RXB xchg (bad) lea or scas out mov pop data16 cmp and test ja adc rex.WXB adc add fldenv mov (bad) cmp sbb add jmpq add jge rex.RX and rex.W mov (bad) sub mov adc mov (bad) cmc lret xor (bad) push loopne movabs sbb out mov adc outsl or adc sbb jl mov (bad) cmc rex sbb pop rex.WRXB jo movsb ficomp adc leaveq or out out sbb gs repz je jne cwtl pop loop adc (bad) out rex.XB xor int3 movsb repnz test pushfq cmp xchg push js fbstp (bad) nop (bad) cmc sbb cmp cld add icebp (bad) push sub mov mov lahf push movslq adc jae mov adc jne and (bad) mov adc jb loopne clc jae jnp push (bad) movabs lret push add add mov (bad) out ds test (bad) adc retq cltd (bad) (bad) callq (bad) adcl (bad) sub adc movabs xor jne sub lret add push adc iret add mov cmp test adc pushq icebp loop cmp rcrb xchg test jmp in sbb adc enterq mov sti xor outsl fidiv imul mov in cli add lock add lret (bad) rex movsb or mov jp out retq (bad) xor xchg in sub (bad) pushfq rorb push ss jns mov pop or adc test pop (bad) adc mov psllq rol xchg (bad) out clc xchg addb adc (bad) cltd and imul out jp sub mov sahf pop xchg mov movsb pushfq data16 adc (bad) rclb fsubs add sbb adc sbb adc cmovno push (bad) push movabs jnp cmp (bad) and rex.WRX rex.RXB xchg imul rex.WRXB jge xchg xchg adc push outsb adc adc and (bad) (bad) hlt adc (bad) cwtl jb mov jrcxz and nop (bad) pushfq sbbl adc lret cli (bad) out adc sbb and stos xchg and xchg or xchg (bad) cmp jns adc mov hlt clc lock mov test (bad) mov adc jae mov or cmp xchg (bad) add adc dec mov adc movslq sub mov movabs adc adc stos pop ss retq push (bad) pop in adc cs pop (bad) (bad) sbb (bad) std (bad) cmpsb fcoms adc popfq adc sahf cwtl sub (bad) adc rex fcom (bad) lret fcoml (bad) adc mov cmp ficom add rclb and retq sbb (bad) adc rex.XB push test or mov sub sbb mul sti adc mov adc sbb mov insb adc fnstenv in out adc mov sub (bad) out cltd in test mov (bad) rclb lock pushfq jne lock xor cli cs add xor xlat rex.WRB add push movabs sub mov adc add outsl notb data16 lods adc pushq insb movabs cmp (bad) adc mov (bad) (bad) adc sbb lods adc repnz adc (bad) (bad) jne adc scas mov out (bad) loopel imul (bad) xchg popfq adc pop stos add rex.WRXB cltd rex.WRXB xor pop loopne mov adc (bad) cmp adc ja popfq jge cmp adc out pushq or push movabs shl stos mov (bad) pop xchg rex.R (bad) rex.WRX add rex.B rex.WB ds lret rex.WRXB adc andnps mov (bad) lods rex.RB decl or movslq push jbe add (bad) (bad) movabs rex.WRXB repz (bad) adc jrcxz pop adc xor insb adc (bad) repnz jo (bad) rcr sti xchg (bad) adc and cmp adc rex.RX jae adc shlb fwait enterq es jne rex.XB cmc mov out adc rex cmp shr cwtl movabs movabs and ss xor adc std jp mov jns or jbe mov cmpsb insb ja or andb adc clc imul retq rex.RXB cwtl mov lret sbb out adc cmp rex.WB rex.X add (bad) clc push and imul sbb lret adc int3 mov mov sti sub rex.WR orl (bad) xor adc push cld ficom je addr32 adc movabs xchg adc adc cwtl rex.W test adc insl movabs adc in (bad) incl xlat stos adc fnsave (bad) clc (bad) jo rex.RB adc std or adc push xchg (bad) add push pushq pop or (bad) cmc out addr32 rex.WRX int3 lock jb and (bad) clc (bad) lock popfq xchg (bad) sbb stos add adc (bad) and rex.WX adc (bad) push mov (bad) adc mov imul adc repnz adc sub fisttpl adc bnd xor test sti imul insb iret (bad) icebp retq adc in callq rex.RX cli pushq xchg stc (bad) cmc or mov out mov or sub jnp pushq pop pop jle insl adc xor std sub adc and data16 sbb out adc and lahf adc mov pop jne jmpq callq xchg (bad) sbb movabs jrcxz sub in cmp adc sbb rex.RX (bad) pmuludq nop imul adc add mov lret xchg sub (bad) adc pushq sbb adc addr32 outsb xor jbe divl adc (bad) or mov fwait push jnp lahf (bad) pop shlb mov mov mov stos scas int cmp std out rcrb adc pop (bad) (bad) xchg clc je int3 cmp jae adc lea (bad) cmp (bad) lock int3 insb sub cs adc (bad) jmpq outsb (bad) popfq adc pop push jno fdivrs (bad) gs adc out nop mov adc jb vunpckhps mov (bad) outsb gs fsubr movsb xor scas adc vhsubpd adc test sbb rex.X nop jl jno push mov add xor fistl movabs adc pushfq fld hlt adc movabs xchg cmpsl je (bad) sub lock fisubl in mov adc lods (bad) (bad) mov adc xchg adc (bad) imul sbb jp enterq pop or (bad) (bad) adc jnp movabs (bad) adc pushq imul push and (bad) (bad) test rex.WRXB cmp rex.W cs xchg cmpsb add cmp or repz rex.WX push out outsb adc jb pop movabs pop js xchg mov mov test pushfq rex.RB pop mov xchg mov lahf cmpsl lret ss sbb callq adc xchg cmpsb (bad) int movsb imul adc push adc mov add lret adc jmpq in (bad) fprem1 rex.WX cwtl fsubs jne add xchg or (bad) xchg pushfq jbe pushq int xchg ffreep and jge adc (bad) (bad) (bad) xor (bad) sbb sub jbe insb adc mov cmp jae outsl and adc int3 mov adc js stc xchg adc out (bad) (bad) fcoms or (bad) adc adc cmp retq (bad) callq cmpl mov scas (bad) sbb add (bad) or and push jp xor push rex.RB rex.W jmpq cmpsb lods push (bad) sub jns rex.WX gs pop xchg fldcw js jo pavgw cmp sub movsb leaveq adc out or in addr32 cmp ja imul (bad) sti xchg std (bad) mov (bad) adc mov pop in or ja push adc ds xchg mov fwait rex.RXB push adc or (bad) sub adc xor fsubr test imul sub retq (bad) rex.WX sub and (bad) fwait xchg pop mov fdivrs callq adc movsl stos xor (bad) (bad) sbb lock rcll test (bad) adc pop adc out adc test adc pop xor mov ficoml in mov cld push lea mov pop (bad) xrelease adc (bad) or sub xchg adc lods adc mov or jbe in rex.WXB xchg (bad) jp adc pop jo mov movb (bad) adc mov ja jns add jmpq (bad) pushfq mov and addr32 rex.WXB jl jbe adc (bad) loope rex (bad) fdivs xchg pushq adc insb pop (bad) or adc cs cltd jg pop xchg or out rex.RX xchg addr32 repnz xchg adc sbb repz lock movslq adc mov rex.WR rex.WXB or push pop imul or lahf rclb pushq movsl and xor (bad) jge leaveq (bad) adc add (bad) adc push mov (bad) pushq cmp push sbb sub sahf out mov retq pop rex.XB mov or (bad) movsl ja sbb (bad) xchg rex.XB cmpsb clc push js (bad) callq adc sbb rex.XB (bad) xor sub outsb add test (bad) lods (bad) insb (bad) adc and rex.WRB xchg insl nop adc jp sub adc pop adc out cmp mov adc rex.B jp test adc sbb add (bad) (bad) push out (bad) mov ficoml retq cmc test fistl (bad) sbb mov mov (bad) add or fidivrl jne stc iret sbb icebp decl int3 (bad) (bad) pop lock and (bad) mov adc sbb lods movslq xchg sub (bad) sub int outsl stos mov sub mov adc pop in rex.WB mov cmc (bad) push xchg ja mov adc mov (bad) mov xchg imul adc rex.WX mov clc mov cli (bad) adc lods rex.WXB adc pop rclb movabs pop and pop lret (bad) adc jae movsl loop not or sub rex.R xor lret adc enterq adc test cmp sub or (bad) icebp xchg adc sbb rex.WX lock mov adc jnp clc movslq adc mov xchg adc add adc out (bad) adc xchg movabs pushq rex.W mov adc mov jb adc scas jne fisubl push adc sbb test sub rex addr32 cli iret nop or icebp mov stos js stos pop adc xor and shll (bad) scas cmp adc movsl cltd jp callq (bad) rcrb rclb xor xorl sbb (bad) cltd (bad) cwtl adc (bad) sub clc sub shlb adc cmp mov icebp rex.WX xchg movabs (bad) rex.WRX fdivl push out or adc cwtl (bad) adc rex.X mov or in es add rorl add cmp sub rex.RXB and and xor and ss rex.X fbstp adc rex.RXB rex.WR leaveq adc out popfq rex.XB test lea lods adc pop in rex.RB out pop sarb jno insl movsb add cmp test xor (bad) cmpsb rex.WRB xor push adc xor pop sub (bad) (bad) lahf hlt out mov xchg lret (bad) mov in fmuls (bad) (bad) xchg xchg cmp repnz pop push cmc adc je mov mov xchg (bad) in mov adc (bad) cmp std addr32 sahf test xor incb (bad) jl adc rex or test xor jrcxz int mov mov rex.WXB (bad) jmpq test xor out mov add adc mov xor or (bad) cmp jl cmc adc fwait xchg rcrl adcl mov adc fs (bad) sbb hlt rex.WR and out (bad) sub push rex.WX or pop cld (bad) movabs and pushq ficoml fadds jns mov and xchg adc cmp adc adc mov cli xlat adc (bad) out sbb jbe stc (bad) jno fsubr rex.WX callq icebp std shll fldln2 stc int and mov (bad) fcoms sbb add movsl adc add adc pop or xchg add adc sub push loopne xor neg (bad) mov callq (bad) rex.RXB repz jne adc fdivs or adc stos (bad) adc jbe sbb mov adc mov or cmp rex jae cmp in mov pop movabs mov (bad) jae (bad) mov enterq adc adc adc sub add xor movabs (bad) enterq and mov out sbb cmp adcl xchg test rex.RX cmp (bad) (bad) movabs sbb adc mov adc cld (bad) jb rex.WRB rex.XB rex.RX cltd jge movsl in push xchg xor rex.WRX mov (bad) xchg pop push adc cmp cmp scas (bad) (bad) roll jrcxz movabs adc loop cwtl xchg clc (bad) movsl rcrb and cmp repz faddp add adc and popfq adc stos or mov push and rex.X loop add (bad) icebp jmpq sub and imul mov (bad) pop movabs addl jp (bad) rex.XB in cwtl cmp (bad) mov cmp adc data16 sub sub and pop adc sbbl jmpq xchg rex.WRXB jle (bad) (bad) sbb add push cld in lret pop rex.B (bad) cmpsl adc xchg fwait cmp sub rex movsl and sbb mov callq test (bad) mov mov (bad) cmp jns jbe faddl gs adc pop leaveq xchg fcoml cwtl sti adc pushq mov (bad) xchg (bad) mov mov jp sti mov adc cwtl (bad) es sbb movabs cs lods pushfq leaveq or outsb jrcxz pushfq ja add or (bad) pop lock cqto repnz std xor cmc or mov fcoms adc scas (bad) rcr sub mov movabs adc (bad) cmc (bad) cmpsb adc imull rex je xchg mov test fstps adc pop cmp or push jbe imul adc pop stc lods sahf sub (bad) icebp (bad) out mov pop imul xchg mov adc loop mov (bad) ds lea xor jge es sbb sub add cmpsb fcom (bad) (bad) stc add pushq adc xchg push xor (bad) (bad) adc mov and xor add jle ss (bad) fs xchg adc xor loop (bad) adc (bad) mov mov fsub xor (bad) or (bad) js add sbb cld adc adc sub rcl xchg movabs vpminsw mov in jae out popfq adc repnz xabort and (bad) cmpsl adc rex.B shrb adc scas mov adc bnd retq jp idivb adc cmp imul xchg addr32 jg jno sbb jge decb sub xor xor movb jbe jle adc outsb test fdivrs sub adc (bad) ss cmp mov nop jge adc pop hlt (bad) mov (bad) push adc adc pop mov lock fsubl push js rorb rex.X xabort cwtl cmp jno adc (bad) adc (bad) and pop fist pop adc push jl jg rex.WRX xchg cwtl cltd lahf fistp std cmc (bad) sub xor xchg adc push out (bad) pushfq adc (bad) jne (bad) in jne adc (bad) mov sub sbb pop adc (bad) stc add int3 retq lock cmpsl adc pop rcll imul rex.X lea pop (bad) fdivrl scas fsts adc pop retq add adc add lret (bad) cmpsl (bad) movabs mov or (bad) (bad) adc (bad) out adc sbb and (bad) incl (bad) mov data16 mov xchg rex.WRB xchg xor mov mov prefetch (bad) scas clc sub mov callq and add stc out mov adc and add sub cmp or stos notb adc sbb (bad) adcl cmp repnz (bad) xchg xor adc mov xor je push repnz adc and (bad) or pop (bad) adc lods and (bad) adc stos sbb xchg sarl mov adc mov rex.RB or cmp ffreep (bad) repz (bad) or lock adc xchg gs in push mov cmpsl pushq jae (bad) je,pn xor and rex.WRX adc (bad) xchg xchg rex test adc xor lock (bad) jl lea pop adc not pop lret adc loopne (bad) mov mov leaveq xor mov imulb (bad) repz lret push jp lahf adc cld pop testl popfq sarb andl cwtl jo mov and incb add loop xor sbb cmpsb adc (bad) movabs push adc (bad) pop sbb iret adc push mov jl (bad) adc sarb adc add out adc cs mov test (bad) ss adc mov cli (bad) movabs sbb clc nop ja mov (bad) xchg add test test fnstenv sub (bad) add rex.WX xor (bad) rex.RXB rex.WRB rex.RXB (bad) (bad) (bad) test (bad) or (bad) and gs leaveq int3 push cmp jmp (bad) jmpq (bad) jg rcrb (bad) adc ss movabs jae sbb rex.WX adc pop or mov (bad) ja stc adc xlat stc xorl add repnz mov gs test lods loop rorl (bad) int mov and push rex.WB adc push adc imul retq cld (bad) jnp je in movabs insb adc (bad) imul adc mov xor pushfq and pop je pop rex.XB test (bad) (bad) fild test out (bad) jmpq in jnp cld adc adc lret std mov jmp (bad) sub std cmp xor sbb ja lret js sbb (bad) adc adc adc (bad) cmp push out mov adc pop or push fsubrs xchg mov add push lock (bad) jae cs or (bad) push jne xchg cwtl lea (bad) cmpsl cld incb (bad) or notl pop add lods (bad) rex.WRXB cmp movabs mov or mov (bad) (bad) xchg mov cmp rex.WRB scas (bad) adc pop fiaddl adc (bad) imul rex.RXB mov adc outsb jmpq enterq mov adc rex.B fsts stc out movslq and cld jno in rcrb xchg roll xor jne xorl (bad) stc xchg rex.XB pop mov sub pop sbb jg,pt (bad) or sub and mov xchg jge (bad) (bad) callq repnz (bad) adc movabs sbb xlat loopne sbb cs mov cmpsl sub cli fdivs adc cmp xchg cmp adc mov pop adc rex.WB xor std es mov jb fcoms movabs addl in test inc adc sub adc push cli rex.RX out adc push cmp pushq push rex.RB mov xchg mov sbb adc in and jge xchg adc mov sbb in jp xor in lea adc in in or xchg fcoms mov xor xor xor jne (bad) rex.X add (bad) (bad) jbe rex.WXB sbb sub sub xor fldenv fidiv adc xchg lahf loopne rex.WRXB adc in divb sti shlb (bad) jne mov adc cmpb insl adc adc push lret (bad) adc rcr mov outsl out scas rex.XB (bad) push jl jle or sub adc fldcw and clc and or xchg test xchg adc (bad) xchg imul jl (bad) xor movabs (bad) sbb mov mov adc jg and xor jmp (bad) pop je jp imul adc callq retq (bad) (bad) mov es and fdivl xlat and insl int3 (bad) mov es stc adc xchg adc js (bad) and int (bad) adc xlat cmp (bad) decl out and and mov test lods (bad) mov adc mov or mov adc rex.B cmp jno insb shll or add adc sbb rorb clc fwait xor jbe jle adc outsl mov mov hlt test fs xchg xchg rorl adc xchg std out cmp jle roll and retq (bad) cmp sub nop cmp scas jno lret retq sbb fldenv adc (bad) out iret adc cmpsb adc lods adc (bad) push loopne add test jmpq (bad) ror xchg or mov rex.RXB or shrb adc or jnp push retq lea unpckhps fcompl cli sub fwait icebp (bad) fistl cmp push mov sbb jge pop adc fs xchg xlat adc adc stos mov rex.X pop fdivs adc nop xchg pop sub sub insb (bad) mov outsb push sbb rex.WXB (bad) jb mov mov xor cmpsb mov and (bad) lret xchg lret jp add (bad) rclb out pushfq lahf adc fdivrp callq add int rclb or repz jp movabs mov (bad) imul (bad) subl jbe mov fbstp in sbb loope jg movsl stos adc lods mov mov insl (bad) (bad) loop mov and cmpsl mov mull adc pushq pushq movsl mov adc rcr adc cmp (bad) loope (bad) mov shlb callq fnstenv in pop sbb cs leaveq nop imul cmpsl xlat (bad) cli pop add pop out xchg jne rex.RX rex.WR (bad) loop pushfq insl add stc add rex.X mov jp ja retq test sbb outsl clc loope mov out (bad) nop or mov (bad) mov fbstp mov jns cwtl adc sti pop and cld rex.XB scas out mov xor push movabs jne sub mov add test xor or (bad) pushq push sub or icebp and jno fmul pop or in or cwtl (bad) xchg adc cmpb stos sti push adc stos (bad) xchg adc sub (bad) adc pop sub (bad) xor fcoms jmp cmp rex.WXB xor in adc ficoml pop addr32 adc sub add cli icebp rex.RB adc retq or fisub mov or (bad) xchg lret ja pop rcrl xor pop cwtl jno (bad) pop adc cmpsb mov movabs push pop adc adc jbe sub pushfq xchg fcmovbe int adc pop add push (bad) rclb in sbb xchg stos (bad) leaveq jmpq (bad) pop fldl int3 mov (bad) mov out cmp xchg in pop movsb and jne (bad) or insl sahf ficoml addr32 and xchg jno jmp adc or sbb and int3 mov out or (bad) js pop adc push adc pop pop jmp cmp sbb adc rex.WXB xor sub adc pop mov add rep adc (bad) iret or stos (bad) add or jne xor gs adc pop rex.RB fisubr in lods or pop int3 adc mov adc (bad) (bad) pop mov adc (bad) push sub insl adc imul push xlat adc add push mov cmp xchg mov adc sti rex.R adc fdivs adc push loopne stc xchg cwtl mov and adc or mov movsl (bad) fiaddl fcoms retq hlt movabs stos push and jmp add add fwait adc push adc or lahf sbb lods (bad) stc rorb addr32 fiadd movsl mov adc sub mov sub xchg (bad) cmpsl adc (bad) rex.W adc xchg jnp or out push or rex.WRB adc int xor adc rex.XB cmp rex.WRXB pop xchg adc (bad) mov movabs loop rcrb (bad) movsb lret (bad) repz shrl jle (bad) sbbl or xchg push sarl sub fidivl adc xchg movabs sub shrl fstl or pop jne add (bad) adc jl pop xlat rex.WRXB adc rex.B or rex.W fwait testb mov pop add and (bad) callq gs push cmp sbb frstor pushq icebp (bad) mov test clc adc (bad) callq lret mov and loop (bad) lret fcom jae rex xor (bad) (bad) adc retq push push jo mov cmc out or mov push or fnstenv stc rex.WXB mov and and adc xchg out movabs rex.WRXB fmuls negb (bad) jrcxz adc jg xchg fcoms (bad) sub int fisttp sbb jl rex.WX push (bad) fsubs add cmp xor rex.X jbe pop insb add shlb cli xchg adc lea and callq (bad) add push (bad) adc mov mulb (bad) adc adc adc sbb adc lods mov adc cld adc jge mov loopne adc sbb roll mov (bad) callq (bad) imul sub movslq addr32 movabs add push in rcl push (bad) test (bad) fwait xchg xchg xchg mov adc sub cli fs rex.WRX (bad) adc pop in mov nop pop sbb sub sbb xor adc rex.RB (bad) testl mov add mov sbb sbb jnp lods or popfq (bad) (bad) pop jmpq rolb mov (bad) jp movsl mov (bad) outsl mov (bad) push mov rex shll pop adc mov jo adc repnz jge or sahf adc cmpsl cmp (bad) fdivrs (bad) and mov fild (bad) sub sub xor add stos and loope (bad) xchg popfq rex.RXB lock adc pop xor push sub movabs add sbb (bad) adc nop sbb fidivl push (bad) adc or mov adc xchg sbb or out sbb and rex.WR callq (bad) or pushfq out or loope out cmp mov xchg mov sub sub cmpsb sbb cli (bad) cmp cmp iret or (bad) jo,pn or (bad) push int3 (bad) adc hlt fdivrp sti adc or (bad) imulb es mov addr32 (bad) (bad) hlt sbb int and jb adc sbb js imul rex.W sbb (bad) movabs mov rcrl fdivs (bad) xor xor (bad) ficomp js cmpsb fld mov icebp (bad) jbe jne cmp fadd (bad) (bad) jo add in xchg pushq push adc xchg test iret jge in rex.WRB mov pop cld adc (bad) (bad) xor rex.WRXB out adc mov mov rol (bad) sub adc (bad) subl jmp (bad) adc jbe decb adc mov and fdivs nop mov out rcl adc xor es rex.XB clc cmp mov fcoms rex.WR push sahf and fdiv jne (bad) fistl sbb es mov mov (bad) mov adc gs cmp push adc mov (bad) fsubrl adc (bad) xchg mov jmpq fmul jno clc iret adc ds rex.XB fcompl movslq lret imul push mov xor pushfq (bad) gs fcomps (bad) insl hlt mov or (bad) sbb adc rex.WX rex.RX rex.WR mov pop push movsb xchg movabs clc cmp sbb adc je fnop stc adc jno adc adc sbb cmp scas lock cli mov xchg in sbb adc mov out jg movabs cmpsb pop sti (bad) or jge js rex.WRX cld jo (bad) retq adc leaveq push mov rex.R mov addb unpckhps lea adc sbb clc and scas lret xlat out and jbe rex.WB rorb jge mov (bad) and adc jae lods (bad) and jne adc cltd rex.WR lret adc jg pushq scas jp mov lahf adc push jrcxz popfq adc pop clc leaveq pop adc cld and adc push xchg sub hlt lret adc clc cmc sti and add lods pop mov (bad) (bad) cmp sbb mov (bad) add sbb addl lods jns (bad) rex.RXB sub stos rex.WRB (bad) push movabs adc test (bad) jne in cpuid and jb xchg (bad) stos callq adcl or (bad) lret xor ljmp add pop and xor repz adc lods shrb out adc data16 (bad) sbb or jne sub xor (bad) jo push (bad) imul pop int push callq adc (bad) sbb sbb pop movsb rex.RXB (bad) rex.WR gs mov (bad) (bad) shl icebp and (bad) in stc and rex.RXB callq movabs (bad) adc mov test fdivrs lahf (bad) cltd xchg sbb or xchg icebp sbb (bad) int3 cvtdq2ps lock and insb cmp sub or (bad) (bad) or jne clc jo js iret adc movsb adc mov cltd rex.WXB mov jge movabs and (bad) jne adc insl in scas outsb lret movsl cmp adc adc in xlat jmpq pop or cmp adc rex mull out lret sbb stos shll (bad) cltd (bad) cmp mov jno cmpsl push (bad) rcll mov pop jl insl pop (bad) adc rex.RX fwait or xchg jle ja sbb lret pop hlt rex.WRXB xor (bad) (bad) jne sbb loope lret cmpsb sub adc mov (bad) test mov test adc jo fnstsw rex.WR adc mov xchg adc or pop sbbb adc fdivr callq adc and and movabs jge jne (bad) xor fwait lock cmpsl adc push rolb adc movabs (bad) xchg js in rcrb out lock movabs ss adcl fsubl cmp (bad) push fisttpll gs in adc (bad) std mov adc sarb xchg adc callq (bad) adc stc mov pop ficoml mull (bad) (bad) adc lea xchg xchg adc mov cwtl adc (bad) sbb sahf sar cs orl adc mov sub mov adc sbb sub int3 sbb rcll xchg xchg sub (bad) movsb cmp xlat adc xor or cmp loopne push imul rex.XB jae adc mov rex.WX xchg cli hlt out (bad) rex.WB (bad) or push cmp mov sbb (bad) pushq adc jno xor xlat jp (bad) fimul insl add pushfq sti (bad) fwait (bad) sbbb in adc (bad) (bad) (bad) sub sbb pop pop xor adc rorb cmp rcrl out sub add (bad) (bad) mov adc cmpsl std fidivr pop jl cli add xchg sub mov adc cmp notl (bad) (bad) test scas (bad) cmp adc adc jb outsb pop and xchg (bad) (bad) adc (bad) pop enterq (bad) add rorb push xchg movabs pop adc pushfq and fist loope fnstsw mov sub rex.WXB adc mul cmp mov add jne adc add iret adc repz adc outsl lock (bad) sub xchg xor or rex.XB mov pop cmp sbb sub movabs mov pop in sar (bad) stos adc mov xchg adc ficom sbb adc push xor addr32 (bad) outsl lret callq mov jl fidivl int (bad) push sub rex.X jmp sbb fucomip xor adc rex.RXB cltd and (bad) push adc rcll rex.XB cmp addr32 insl mov (bad) xchg (bad) jl lahf rex.WR add outsb (bad) rcll (bad) retq (bad) adc fsubrl lret mov mov or or add adc mov popq mov xchg lods nop adc mov push out adc retq adc iret cmpsl int3 je,pt jns lret sbb movabs jns pop loopne (bad) movabs (bad) ficompl adc movabs xchg adc xor xchg iret pushq (bad) and movabs xchg gs rex jp rclb adc (bad) cmp popfq rex.B jno loope add jmp movslq rex.RXB xor mov (bad) (bad) scas pop sbb lea mov subl (bad) xchg pushq cmpsl mov xchg mov adc (bad) movabs sahf clc imul pop (bad) insl adc jb movabs (bad) (bad) adc push rex.RX fcoms jae cli mov or and lock adc and xor sbb cmc rex.W pop adc sti jmpq xchg sbb fistp rex.RX cld lahf sbb mov pop rorb ja orb (bad) mov sub stos rex.WXB lods sbb fmull jp (bad) (bad) unpckhps mov (bad) add and xchg cmc (bad) movabs fsubl jno rex.R add (bad) mov movsb jle jae xchg mov loopne idivb (bad) adc in sbb xor adc js movabs or (bad) pop adc es cmpsl outsl scas or xor push out sub mov lret repnz adc movslq adc xchg xchg mov adc mov (bad) add rclb xchg or pop out or loope adc popq (bad) pushfq sub (bad) fidivr scas mov cmp (bad) clc pop cs lret shlb push cmc iret movabs (bad) fimull js rex.RB xchg out (bad) lret test sti jne (bad) movsb es adc mov adc (bad) jae cwtl jp push xor adc icebp pop adc and (bad) adc mov fdivrs adc (bad) in adc fadd mov cmp (bad) (bad) cmc fcoms mov es insb mov clc add or mov cmc adc (bad) xor stc nop fwait mov jne and or mov imul icebp xchg (bad) mov adc (bad) insb cld pop adc (bad) adc sub (bad) adc and jrcxz mov adc xchg mov mov fldenv (bad) (bad) push pop (bad) mov cmp loopne adc stc add (bad) xchg adc clc mov pop cli rex.WRB xchg adc adc jne stc rclb rclb clc sub push adc rex.RXB jge shrl mov rex.WX xchg cwtl xlat sub cmpsb movabs sub test (bad) ficomp sub loopne mov js adc pop ja jbe repnz fs (bad) rex.W adc xor test or pushfq sub cwtl rclb adc xor outsb (bad) adc jg and push loopne pop movsb cmpsb pop fistp sub jle lea (bad) fsts cs loop adc cmpl sbb push int3 imul stos mov xchg or or movabs (bad) adc mov fs (bad) jns or push and (bad) or adc roll or (bad) jno push mov sar jg xchg sbb mov xbeginq pop (bad) mov ficom fwait sbb adc adc sub sub adc outsb psubsb (bad) rex.WRX push ror mov repz mov rorl int3 in jmpq in xchg pushfq adc out fldl2t adc (bad) idiv (bad) adc jnp repnz pushq (bad) or cwtl jg (bad) cmc (bad) pushfq loopne mov cld stos pushq lahf pop mov pop sub mov xlat mov sti adc (bad) int jg and jl mov adc iret add pop push test mov jrcxz pushfq jae pushq notb push and xchg or and lret retq in stos leaveq sub push fwait adc data16 popfq movabs out mov (bad) add andnps jnp rex.WRXB outsb adc popfq in js movabs jb loop cmp xlat push (bad) ficomp pushq mov cli adc and (bad) (bad) (bad) fcmovbe or xchg adc outsl jae or test (bad) (bad) pop adc rex.WX push or adcb mov rclb cmp scas test fucomi roll xlat test push rex.WRB add faddl outsb test sbb mov adc (bad) or xor jmp push enterq je pop mov rclb pop int adc rex.XB retq adc (bad) jno (bad) fcomps jrcxz (bad) xchg rex.RXB fs mov sar out (bad) in and pushfq fs fwait adc in repz fdivrs cwtl movslq fs jmp data16 rex.RXB add sbb jo and or xor imul (bad) adc cli repnz rex.WX adc push leaveq sub mov fdivl rcll addr32 in add mov scas adc mov (bad) adc scas outsb jl and jns pushq (bad) push addl out clc adc cmpsl jae callq (bad) (bad) push sub test adc and rex.WRX jne adc or out scas jae in cs jb xchg (bad) adc mov mov stos (bad) rex.X rex.W js pop int cmp jno rclb mov push faddl adc (bad) idiv movsb movsb fldl rex.WR and ss (bad) xchg or stos sub add jrcxz vmovdqu out add and retq (bad) cmpsl adc jno and fdivs mov xchg (bad) jl out add imul fwait jp fdivs jne (bad) pushfq fadds repnz fldenv cmp out cmp rex.WR rex.XB fsubrs rex.RB xor lret mov add xchg jnp xor sub gs cmp out jl mov lods int and mov gs xchg mov mov or (bad) (bad) rex.RXB rex.XB rex.RB push lock cmc (bad) es (bad) mov and ljmp adc sbb adc imul adc xchg ds out stos callq clc (bad) adc (bad) out (bad) (bad) adc imul stos hlt xor or sbb rex.X jrcxz (bad) jle add outsb cmpsb stc repz adc adc xchg repnz loopne add js addl gs std jae movsb xchg rcrl (bad) (bad) mov addl mov and movsl adc movabs (bad) pop xor or stc outsb adc add rex.R pop jp push test adc push pop or leaveq paddusb (bad) adc sub lods and jmpq xchg (bad) not push test in (bad) adc es insl xchg movabs push (bad) hlt add mov sahf cmpsb adc rcr lret (bad) xor xor icebp int adc std (bad) push (bad) movsb cltd mov adc ja rex.XB fdivrs add test and rex.WX rex.WB rex.XB adc out add clc callq xchg in cli out js rex.WRXB rex sub rex.W adc (bad) lock rclb cwtl (bad) mov test cmp mov rex.B xor or or insl add adc adc cmpsb (bad) lahf imul fdiv (bad) mov mov xor fadds in jbe rcrb (bad) lahf jmpq rex.WX xchg push cli cmp (bad) (bad) cmc push mov (bad) scas mov loope callq xchg pop in fmuls imulb jmpq loope movabs callq xchg sbb cmp jp (bad) (bad) adc fmulp mov jl scas mov rcrb rex.WRX or push movabs mov add movsb pop xchg insb adc movabs sbb adc adc lcall mov pushq adc (bad) out rex.W and sub retq cmp rex.WXB (bad) cld adc pushq cmp pop es shll (bad) insb pop fmull (bad) jnp adc fwait or sub scas clc repnz sbb fs jmp jb mov sbb sbbl in sub fcoml mov xor retq loope out and cld or cmp rex.B adc vcomisd rclb sbb or xchg movsb (bad) push (bad) adc xchg adc (bad) (bad) cltd and jp xor enterq pop lods (bad) pop or addb cltd cmp adc (bad) xchg xchg retq cmp xor retq mov (bad) stos adc nop mov es stc lock pop cli (bad) adc xor test xchg jb fcompl xor cwtl rex.RX (bad) sbb sahf fildll (bad) enterq adc (bad) icebp adc jmpq add adc sbb icebp adc lret cmp adc fwait add mov add rex rex.X rex.RX rex.W xor adc mov push cwtl rclb mov adc sbb je in adc std pushq push adc (bad) (bad) iret (bad) adc cld xchg pop adc cmpsb (bad) nop sbb xor enterq adcl cld jp push and in (bad) sub lea out and add rex.WX adc mov sub shrb xor sub rex.RXB xor xchg sbb adc (bad) cmp ss or rcl sbb adc sub mov adc je cmp jg adc adc popfq adc mov in lret pushfq psubsw cwtl clc cmp adc jo in adc or out nop xor (bad) sub and rex.X test add (bad) movabs nop add sahf rorl je leaveq add mov ja (bad) rex.WRX rex.R xchg and (bad) fdivrp (bad) sub vunpckhpd imul rcr rex.WX mov int es (bad) rex.W adc sti rex.XB sub enterq fcoms adc cmp adc out jb mov mov adc xchg mov adc rex.WXB push (bad) adc (bad) xchg gs xor mov adc or (bad) adc add cmpsb (bad) adc shrb sub cwtl cmp (bad) adc in in (bad) insl cs scas fsubrp mov rex.RXB rex fwait adc (bad) (bad) fiadd pushfq leaveq xlat lods (bad) (bad) adc adc movsl mov adc rex.WXB sahf xchg iret mov loope loopne stc data16 add xor insl (bad) test loopne adc in retq adc rclb rex.RB adc push and adc xor (bad) clc test lret or xchg sub rex.RX (bad) adc adc push adc out imull xchg hlt sbb fsts rex.WRX rcr cmp sub jb adcb mov sbb lock leaveq fadds adc cli rex.R loop adc xor retq hlt jle idivb ficompl adc test fcmovne int lahf sub in mov rclb lods retq in (bad) (bad) enterq jrcxz lock and rex.RB sti insb fs mov (bad) out and push pop pushfq cmp adc movsb and xchg sub adc (bad) cmp xchg sub or mov sahf ffree ficoml pushfq lea (bad) jo add adc add movabs (bad) and roll pop clc adc xchg mov mov xorl (bad) and pop movabs pushfq popfq repz enterq sarl in xchg adc test movabs divl adc pushq test pop and rex.WRXB out mov xchg pop sbb and xchg je (bad) cmp push adc lahf out rex.WB sbb xchg xchg mov (bad) adc and rclb pop movabs adc int3 rex.RX pushfq cmp cmc sub or (bad) xor adc out push fsubs rex.RX adc and je lods (bad) (bad) mov cmp jns mov adc in xchg stc (bad) jl jb add nop fsub push (bad) out fdiv adc lahf fs (bad) mov movsl pop (bad) pushq fcoml (bad) cmp test or in xor pop outsl jmpq mov or pushq xchg sub adc push (bad) movabs out rex.W movabs clc rex.WRB lahf xor paddsb icebp lock (bad) cld add cmpsl mov adc (bad) std mov jne rex.XB rex.WRXB fwait and sub in or jo adc and rex.WXB stc adc shll pop or pop adc rcll mov insb cmp xchg push add lea add (bad) (bad) add mov adc pop data16 clc lret rex.R or adc (bad) (bad) (bad) adc add mov clc movabs xchg xchg outsb mov sbb gs jp fcomps movabs and jns retq cmpsb mov sbb pop (bad) rex.WRXB and rclb movsb sbb retq mov jo (bad) and (bad) or rcll cmpsl popfq fsub adc add mov outsl out sub (bad) rex.WR or pushq xor adc iret mov add mov insl movsl fcoms fcompl xor sbb mov xorl xor sahf shl adc movsl or xchg (bad) xor sbb adc sbb add xor movsl rex.WX loop adc xchg addr32 xor cmp xor push push pop adc jns pushq rex.RB sub (bad) (bad) (bad) pop jb clc push mov fs sub sbb outsl sti cwtl jle xor out movabs pop cmp outsl lods callq adc or popfq add (bad) gs nop jno mov addr32 jl rex.WRB mov retq adc rex.WRXB cmpsl and sbb jbe adc and xor adc movsl loopne in rclb (bad) push xchg std sbb clc cli out jo rex.WR or xchg (bad) (bad) (bad) lret xor pop (bad) (bad) sub hlt adc lret rex.XB jmpq fcoms movabs mov (bad) repnz std fwait (bad) lods out xor hlt loop (bad) lock rex.WRX adc (bad) push (bad) int3 rex.WXB (bad) movabs ss nop (bad) test push clc xchg icebp adc (bad) jrcxz xchg adc xchg cld xor (bad) push sub rex.WB or mov sub mov sub pop test notl adc (bad) retq mov jnp rcrb mov sub jbe or adc movsb fimul callq cmp or fistl push adc xchg mov adc adc mov push rex.RB sub cltd rex.XB in rex.WB repz lock sub mov (bad) and xor rex.R jle cmpl pushfq xor mov jb cli adc jbe xchg (bad) mov adc lahf sub sub enterq rex.RXB mov or sti (bad) ja ss (bad) or add retq rex.RB rex.WRX (bad) rcrb ljmp adc add xor adc (bad) pop pushq adc pop sub bnd xor in int3 jns (bad) or ds out movabs je movabs mov mov leaveq jbe adc (bad) nop adc rorl cli (bad) fcoms and and rex.WXB adc (bad) mov mov iret movslq shrl jmpq rex.RXB push hlt fsubrl testl rex.WRXB sub or je outsb push or (bad) push mov clc fisttpl mov adc push fistpll adc pop jnp (bad) adc mov movabs cmp jne jp or mov adc in add add js xor rex xor out (bad) movabs push cmpsb xchg adc xchg insl xorl (bad) fsts pop jge adc adc lea cmp pushq pop stos adc and sbb in mov stos out ja cmp out pop mov adc scas mov add or outsb push clc cwtl data16 leaveq shlb (bad) (bad) pop (bad) (bad) mov adc addr32 xchg adc sub test adc test (bad) adc (bad) sahf outsb mov stos or test pop (bad) adc fcompl add faddl (bad) (bad) xchg sub adc and out in jmpq xchg clc stos (bad) test (bad) push callq adc push rex.WRB adc jge push sub adc (bad) or adc fdivrl cmp (bad) adc cmp adc or pushq add addr32 movsl sbb cmp lock cmp (bad) xchg xchg adc (bad) in mov cmp nop push jmpq lahf rcll (bad) cs jp adc callq enterq (bad) scas adc mov frstor and (bad) jo mov movsb mov repz mov sub adc mov adc stos lea enterq sbb (bad) stc (bad) mov sub adc xor mov xor sub or sub xor fisttpll or sub test (bad) adc mov sarl repnz je mov jns rex.XB test xor vcmppd imul or (bad) insb adc and leaveq or lea adc loop adc adc cmp sub jns rex.WRB ja cli psrld (bad) fcmovb xchg (bad) int (bad) out adc rex.WXB clc inc push (bad) push mov adc mov repz leaveq cli push or (bad) pop pushfq or and jne push mov rcll push (bad) pop pop jmpq mov leaveq jno retq adc fdivrl sbb xorl (bad) rex.B adc mov cli add sbb pop rclb xchg adc fcmovnb jl sub sbb insl mov rex.WRXB jle scas fstl pop add movabs (bad) adc jo sub xchg movsl roll movabs jrcxz mov mov (bad) adc jns movsb notb jbe add adc (bad) mov rex.WX icebp and xchg adc rex.RX push mov fisubr (bad) adc push pop adc (bad) (bad) xor adc pushfq div jp or insb in (bad) pop movabs rex.R rex.XB hlt mov or xlat jno jb mov jmp xor rex.X and pop jae mov (bad) lret scas rex.X adc loopne popfq adc and mov adc (bad) jae (bad) adc test adc mov xchg popfq jl xor movabs mov movabs mov push lea sub rex push jne mov (bad) (bad) (bad) rclb (bad) cltd jb and shll orl adc (bad) pop iret (bad) out adc sub fild (bad) xchg jl mov int stc adc adc nop pop callq xchg data16 clc (bad) (bad) fsubl clc fildll mov mul (bad) push rex.XB adc outsl adc sub xchg (bad) and xchg mov mov adc movabs xor imul test (bad) rex.RX movabs leaveq jge mov stos movabs loopne fsubl stc mov pop loop xor add and adc mov adc int3 push fildll jne (bad) adc callq (bad) retq adc xlat psrlw test xor (bad) ja xchg test push (bad) or xlat or mov mov add leaveq lret sbb fadds fldt push xor cmpsl xchg sbb enterq and mov adc sti add push adc (bad) mov ror lock adc push pushfq rex.WRXB adc jnp js lret adc push push xor (bad) fdivr mov xchg repnz (bad) adc popfq rex.RX rex.WR sub rex test xor cmc sub popfq mov sbb (bad) mov out (bad) adc and lock cmp jb adc adc test cmp subl adc movabs and mov rex.WX (bad) jge (bad) (bad) jle notl push (bad) stos mov (bad) xchg js and pop sbb sbb adc adc callq movabs and (bad) push adc (bad) sahf sbb loop sbb jne jbe sbb cmc adc movabs rex.WB xchg test mov or xor fdivs fnstcw sbb adc outsl (bad) adc xlat (bad) adc xor fistl (bad) mov (bad) pop adc xor cwtl es (bad) (bad) adc push rcll leaveq jbe in test out in (bad) mov cmovle mov divl retq (bad) jge push mov fucomi adc test fadds fidivrl mov div or sbb lea insb clc cmp adc or fisttpll mov outsb fwait and mov adc movlps nop sub (bad) ds jb mov imul repz cmp mov cmp rcll adc (bad) mov (bad) fcomps xchg mov shll add adc adc mov (bad) lea (bad) xchg xor fcmovbe fmul sub data16 mov clc sti mov fistl rex.W es (bad) insb adc adc (bad) push sbb adc lods (bad) movabs xchg xorb enterq adc cmpsb rex.W sub in xchg rex (bad) push mov adc int pop sbb mov cltd rex.RB loopne (bad) or callq and push mov fcompl rex.X in (bad) scas sbb adc mov and mov adc jae insb (bad) jb mov mov cmp mov rex.RXB pushq mull add adc adc rex.RB lock fcom movsb and mov rex.WX adc and and cs mov adc add (bad) jae addr32 (bad) xchg ficomp adc mov cltd jge adc adc fimull xchg adc (bad) test xchg rex.RB iret adc mov rex.WR (bad) lret leaveq scas lock rorl lock loopne mov rex.WR test sub adc (bad) mov jbe (bad) push test unpckhps (bad) shrl (bad) pop sub adc loope movsb rex.RX cmc push lock adc jg out jae adc cmpsb rex.XB (bad) rex.WX jae sbb mov add int stos sub rclb test notl sub jle cmp repnz adc jb leaveq add loopne mov adc repnz popfq adc pop xchg push add (bad) rcr imul adc data16 adc cmp adc cmpsb push rex.B rex rcll adc sbbb jmpq scas adc add out adc iret adc mov and adc jne mov mov (bad) (bad) hlt (bad) adc negl movabs sub movabs rcrb out testb (bad) mov mov mov adc or fcom push jrcxz adc ss (bad) movsb sub jno callq mov movsl and insl rex.WRX gs (bad) movabs cwtl sub movabs addr32 mov sti rex.RX stc sub mov scas cmpsb mov retq pop sub roll gs cmp xchg or rex.WX (bad) cmpsl cmp (bad) rex.RX adc or scas ds mov (bad) fcmovb jg stos xor jns leaveq fbstp sti data16 movsl rcl rex.X rex.XB (bad) (bad) outsl scas adc adcl subb mov rex.WXB sub or sbb iret adc stos mov adc callq (bad) rcll loopne adc xchg adc rex.RX imul xor jns adc sbb out rorl (bad) xchg int (bad) adc xchg fistp ja imul push in movsl adc retq xchg callq mov unpckhps cli mov adc rcrl adc mov gs clc (bad) push mov (bad) js pop pop clc fdiv mov mov loope loopne andl adc (bad) cmp rex.XB sub repz adc xchg adc add loop sbb enterq xor callq xor (bad) fisubr (bad) int adc jrcxz adc rex.XB repnz (bad) rclb rex.WRB mov shlb movslq (bad) test (bad) xchg adc mov (bad) repz mov or clc jne xchg (bad) adc mov or mov adc sbb xlat imul fs sub in imul push lea xchg (bad) movabs cli (bad) in scas adc lret sbb mov sub callq adc xlat fmul add and mov adc and adc fsubrs mov adc data16 rex.WRX add xor add retq xchg (bad) rex.WRB xchg mov mov insl sti adc out xchg shlb mov adc sti jmpq out pop or adc loopne xlat cmp push mov pop imul pushfq icebp and or push mov adc stos pop (bad) movabs rex.XB (bad) pop adc (bad) sub adc push js fs push adc (bad) mov rex.WRX sbb fisttp fldl adc xchg (bad) in (bad) cmpsb sub (bad) and mov cli adc fnstcw mov (bad) ficom movabs jb stos clc (bad) leaveq or push push rex.WXB imul fcom mov mov rex.XB rex.WB rex.RB cwtl gs adc mov mov (bad) icebp (bad) rex.X rex.WR (bad) cmpsb jl adc pop (bad) jg or lods imul ljmp lock xchg mov adc rex.WRX rorl (bad) je (bad) sub cmp jae (bad) sub outsb adc scas retq test jo adc xor pushq jbe sbb jo out faddl cmpsb rex.WX (bad) adc add (bad) adc repnz mov (bad) xor je (bad) xor and cmpb (bad) ds sbb movsl or cmc sti fsubrl test rex.RX divb xor lods lods mov rclb or int3 movabs rex.WRX adc insl adc out rcl rex.RXB sub imul addr32 mov test addl pushfq test and (bad) xchg sbb mov mov (bad) xchg (bad) adc fidivrl outsl mov fs lret lock mov adc sbb andl adc iret mov mov retq cmp adc cwtl (bad) (bad) out rcl sub (bad) out popfq adc pop push add or (bad) jbe mov rcl rex.W rex.WRXB mov or sub adc adc lea fwait adc mov out out (bad) rex.R (bad) lock fmuls pushfq jbe jbe cmp hlt mov shll adc cmp and or (bad) outsl xchg fwait pop pop (bad) adc pushq movabs push adc loop (bad) imul rex.R callq add adc (bad) push lret outsl fmulp rex.WRX cli callq sbb in test and xchg callq sbb adc and (bad) (bad) push rclb (bad) mov jp mov (bad) std lea vpshlw (bad) adc in adc adc nop xchg push rex jmp outsb pop pop xchg xchg fs add rex.WX fiaddl mov adc lock retq pop rex.WXB adc (bad) jge sub xchg pop and (bad) rol data16 cs adc (bad) adc xor enterq lock xchg fs push (bad) xor cmp sub xchg popfq cmp mov (bad) xchg pop icebp jge pop (bad) movabs jne (bad) rex.WB adc (bad) fnstenv sub (bad) xor mov rex.WB cmc fsubl (bad) cltd mov adc adc fs xchg lods adc cmp (bad) adc sbb repnz rex.WXB adc fstpt (bad) adc cmp jb in (bad) rex.RX jp (bad) push xchg (bad) pop adc mov fistpl (bad) xchg imul sbbl div mov sub jp adc movsl std rex.WX rex mov or cld rex.RX (bad) xchg (bad) rex.WRXB retq rex.XB or rex.RB ss xor (bad) sbb rex.WXB clc outsl cmp fistpl xor mov out rex.WR sub cli rex rex.RXB cmp hlt loopne sbb or xor fsubs rex.WRB sbb mov gs mov (bad) movabs rex.RX rex.WXB rex.WX outsl mov sub movsl ja (bad) adc cmp nop clc (bad) (bad) push lea adc (bad) add pop pushfq and xor std rcrl jns pop cmpxchg outsl sub rex.W xchg push adc retq (bad) js rex.X rex.RB lret adc rex.W in adc add and add adc adc pop (bad) movabs mov (bad) (bad) repz or insl pop mov mov scas cmp outsb pop es (bad) adc mov sub (bad) adc sar cltd jb adc (bad) or lods adcb xchg repz add sbb out (bad) cmc (bad) adc pop rex.WXB mov stc adc push mov rex cmp mov fwait (bad) adc pop lods xor pushq jl and adc push mov (bad) sbb pushq data16 out cmp push cld (bad) rex.RXB std xchg adc xchg callq pop sub xchg jrcxz jle xchg adc int rclb mov or in mov lods jae (bad) pushfq (bad) ds xchg rex.X xor rex.WX pushq adc rex.WB adc rex.RX mov retq mov mov out fnop cmp fwait mov or cs sub jne ss rolb clc xor out nop hlt es rex.RB cltd jnp (bad) je cmpsb movslq int3 mov hlt add (bad) (bad) cmpsl adc (bad) sbb sub xchg (bad) addr32 mov subps push mov retq xlat pop decl rcrl (bad) adc fidivl (bad) rex.WRX adcl lahf push add fnstcw (bad) cmp adc rex.WRB xor ds xchg std or rex.W (bad) or (bad) mov adc sbb cmpsb pushq (bad) idivb cmp adc (bad) push jp adc js adc xor adc popfq jle (bad) rcl repz adc movsb sub popfq lea sub (bad) adc rex clc adc jb mov adc rex.WRX pop mov (bad) push mov lods cmp sahf adc and loopne adc cmp int mov (bad) xor (bad) sub mov push retq in test (bad) mov adc adc jp lahf (bad) adc callq leaveq xchg push ljmp repnz andl scas rex.WB pop packuswb (bad) rex.B lods jbe hlt jne jo xchg insl rex.WXB sti (bad) adc (bad) sbb lret movabs mov cwtl ja mov hlt push ficom (bad) (bad) lahf xchg or adc add and adc pushq mov (bad) push add xchg adc in adc add adc pop lock imul push (bad) ja push jne or (bad) (bad) push (bad) xchg adc mov shll ja (bad) (bad) adc loope (bad) cmpsl or enterq sub retq subb outsl andl shrl stc jbe jmp testb adc mov jns sahf pushq lods gs xchg lock (bad) cwtl cltd xchg adc adc pop or retq movsb xchg (bad) loopne testb mov xchg jmpq sub and es adc stos and (bad) xchg shrb xor mov or jg adc mov sub icebp cmp mov push rex.WB (bad) push (bad) xor push or mov cli adc push mov cs (bad) rex.WRB test lods mov out imul sbb cmp and or (bad) rex.W addr32 pop out add rex.WR pop loope adc je fadds rex.WRXB rex.WRX add fxch (bad) fistpl jmp (bad) jp add movabs adc adc fs test rex.WRB rex.RX adc mov sub in or vmulpd out enterq retq test stos sub mov adc xor push xor xchg adc add adc mov or movabs adc lret (bad) push jbe cmp js fdivr rex.RB (bad) xchg (bad) sbb or fldt mov (bad) movabs pop (bad) add movsb je (bad) xor movabs lret xchg adc (bad) (bad) add adc lret rex.WRXB adc lahf jno pop add (bad) rex.X push jrcxz pop gs movslq fmuls fstl or gs cmp (bad) jle sub sub mov jrcxz test sahf (bad) adc adc adc cmp (bad) icebp or xor mov jae sti insl adc pop out cltd and cld cwtl mov adc cmp cmp push (bad) xchg sub push ficoml (bad) (bad) mov cltd repnz lret sbb stos xlat (bad) adc (bad) mov (bad) adc (bad) rex.RX (bad) xchg push (bad) (bad) int3 (bad) cmp adc rex.RB or sub lock cmp enterq xchg xor jno clc adc sub xor loope sub mov cmp cmp adc out push (bad) lock in mov test decb movsb adc leaveq xchg faddl push push stos iret repz ja (bad) xchg rex.XB jg or (bad) sbb imul adc fistl (bad) mov jno ficoml xchg sub je test cwtl push adc pushfq cmpsl cmp (bad) xor rcrb gs fcoms (bad) (bad) xor or mov xchg adc fistl add adc mov lret push adc pop clc (bad) adc xchg and jbe adc cli jl jno cmp cmp ja xor (bad) adc jnp test rex.WRB rex.RXB jne adc jns cmc add and adc or iret adc sbb xchg mov (bad) sti xchg pushq xor or jnp pushq rex.W rex fdivs addl pop retq mov ja jo repz retq iret adc xchg push gs adc fiaddl and cmpl (bad) or adc xor cs mov adc fnstenv rcl movabs addb xchg jns pop lods or mov adc (bad) stos mov (bad) adc push rcr adc (bad) outsl or mov mov cmp rex.XB adc jo sub lock (bad) fs mulb int3 xchg adc rex.B add fstps pop cld pop jno push retq push push cmc (bad) jo push je adc xor subl add xchg cmp add adc mov or (bad) cwtl out loopne sub (bad) test pushfq in sub mov xchg movslq retq cmp adc add xor (bad) mov mov sub adc mov mov adc cmc rex in pop mov popfq sbb fist stos sbb loopne divb adc shrl adc callq (bad) sbb jmpq rorb adc (bad) sbb fwait and adc test (bad) callq (bad) hlt (bad) mov add sbb icebp outsl sbb xor (bad) je movabs (bad) adc mov mov xchg (bad) (bad) iret nop and (bad) mov adc (bad) xchg stos mov push stos rex.WRB cwtl (bad) cs adc add or icebp rex.WRX mov shr fsubrs xchg (bad) (bad) and mov movabs fdivrl fst jnp nop test mov (bad) movabs add adc mov (bad) fbld adc mov test or ficoml and sbb (bad) iret adc jbe adc mov xchg (bad) jae leaveq pushfq div rex.WX sbb out int3 shlb adc rex.WRB adc fcoms xchg loopne add xchg rex and (bad) mov loop test mov xchg sub rex.WR or repz clc xchg lods repnz adc xchg adc (bad) cli sub pop adc cltd xor mov jae rex.WXB (bad) xchg mov sub jno fmuls and rex.WR cmp mov movabs cmp cs (bad) rex.WRX (bad) cltd out (bad) mov mov adc push (bad) pop loopne add add sub and cmp (bad) scas subb retq rex.WRX push fcoms (bad) (bad) jno test and mov testl callq mov gs rex.RXB ficoml movsb add mov sbb xchg xor rex.XB lock fmull jge mov xor (bad) adc adc fdivl jne outsb xchg mov (bad) rex xchg data16 movsb out mov cld push stos outsl in mov icebp or es insl rex.RB and sbb jns lret push jbe pop push out insl adc (bad) add sub ja jbe in (bad) test int xor xchg (bad) lea adc rex.WX (bad) and jae mov adc xchg movsl add sub mov (bad) rex.W lods imul lahf sbb (bad) adc mov adc rex.RX adc (bad) and or mov cltd idivl insl adc sub (bad) movabs rex.R adc adc sbb pop gs fwait push fbld sbb pop je incb (bad) not pushq (bad) adc (bad) jl lret push push mov (bad) sbb (bad) xor lea adc sbb push (bad) (bad) imul in mov fisttp (bad) rex.WX cmc (bad) clc out mov push lcall or mov mov fwait adc (bad) push scas in adc add shrl loop sub outsl (bad) (bad) ss in push pop mov (bad) adc clc adc ss jp fdivs imul fidivr push pop adc cld push jmpq scas add (bad) xor mov jb jmp or or jne test xor fsts mov in mov mov pop adc xchg mov cmp sbb pop pushfq jbe (bad) stc xchg xchg in psubusb jnp fnstsw ficoml xchg (bad) mov je cs push pop jne clc (bad) cmp mov (bad) adc xor fdivrl insl or adc xor pop sti mov xor rex.R stos jle pop adc callq movsb sahf lretw pushq sbb (bad) fs test push fistl retq add adc rex.WXB out popfq add jae add in add sarl jrcxz sub push in (bad) pop ja jns (bad) adc retq jne xchg int pushfq rex.XB and jmp popfq rex.WX xchg std adc fdivs callq xchg (bad) xor sbb (bad) pushq pop push rex.WRX adc hlt mov adc push mov (bad) test insl (bad) add data16 adc lods jne test pushq jb test adc mov xchg mov (bad) jle push imul gs scas mov stc stos add mov (bad) xchg cli notb clc (bad) push mov imul enterq push adc rex.WX rex.RX xchg adc push or xlat add mov std adc xchg insb mov adc jae push adc movsl hlt sub xchg sbb (bad) rex.WRX adc pop outsl (bad) cmp (bad) mov xchg (bad) add xlat and mov outsl (bad) pushq int insl xlat sub sub adc push sbb push scas fcoml sub pushq adc lret out adc or push mov rex.X (bad) adc sub std rex.W or (bad) jo movslq rclb idivb mov pop adc in ss jmpq fdivrs xor imul adc pop enterq xchg (bad) test xor sub mov (bad) cwtl lods (bad) adc jae (bad) sahf adc addr32 (bad) jle hlt (bad) ss js adc je rcrb rex.WX add (bad) adc jl xchg xbeginq xchg push mov (bad) clc mov ja (bad) push and xchg push test (bad) movabs outsl jnp ja pop insl outsb mov mov ficoml callq (bad) adc (bad) ficoml xchg out ss cmp add jp rex cmp rex.B sti pop or pushq or (bad) (bad) movabs mov stos jge or fs sbb cltd or adc (bad) mov (bad) adc rex.R mov adc (bad) scas addr32 sbb mov xor cwtl mov adc js movsb push adc lret adc (bad) jl sti (bad) adc mov adc xlat xchg pop (bad) mov imul jp xchg xlat adc pushq adc (bad) (bad) cmp movabs (bad) cmpsl and lahf (bad) (bad) sub xor mov adc sbb (bad) fcoml jp sbb or fistl cmp (bad) negl add adc mull iret mov fsubs std pop test movabs (bad) mov push hlt jns fnstenv cmp rex.WRB in pushq mov adc pushq in sbb cld ficomp popfq adc cltd rex.WRX adc sub mov adc cmp outsl cmp rex.WXB insb js out or fstpt sbb data16 adc adc retq rex.WRB adc lret (bad) outsb clc outsl xchg pop ja pop jrcxz push pop mov or cwtl adc jmpq (bad) enterq sub or pop rex.WRB scas stc lahf and and test xchg (bad) pushfq hlt rex.RB scas and jmp fwait mov mov retq rclb in (bad) nop sbb adc xchg xchg xchg jns jnp lock fcompl mov cli mov fsubs mov sub xor mov add faddl clc lahf cmp adc push add adc shrb out insb je fidivl (bad) mov movsb callq sub cwtl sbb cmp movabs lret (bad) (bad) callq (bad) add sbb callq leaveq mov mov out and (bad) sbb mov and cmp (bad) adc cmp (bad) movsb movsb mov or or (bad) rex.WRB ss (bad) int3 jne mov xor ja mov mov (bad) and lahf insl jne jge adc mov or std movabs adc rex.R mov xchg jmpq adc (bad) jb pushq in mov sbb scas movabs rsqrtps in adc lea add lods rex.RB (bad) callq test sub jnp mov xchg mov xchg jo out fmuls roll xchg lock dec movabs test adc rex.XB rex.B (bad) loop (bad) adc xchg int3 adc lret adc push push cwtl mov rex.WRXB sub (bad) (bad) (bad) outsl test add (bad) xchg sub fist or (bad) xchg jl adc scas fs repz cmp cmc sub icebp rex.WRXB rex.R (bad) adc xor rex.WRB repz rex.RX sbb fldl rcrl movabs adc lods (bad) lret rex.WRX movabs add sbb adc outsl or mov xor or shlb mov and adc stos lahf iret mov leaveq (bad) sbb adc (bad) insl adc or sub sub stos adc mov cmp (bad) adc pop mov push adc push adc ds pushfq pop (bad) adc adc adc jns (bad) repz mov mov (bad) lahf ja in shrl rex.WX (bad) loope clc and sarb adc sbb pop fmull retq sub mov cli cmp adc (bad) jne sti pop mov loopne enterq fistl sbb jbe adc mov sub adc push jp std push fidivr ja xchg cmp lret mov push ja pop addr32 or xchg data16 adc (bad) (bad) sbb cld jmp (bad) xchg loope rex.RXB rex.XB scas xchg push jge adc (bad) and adc add rorl adc stc data16 stos xchg cltd (bad) fbld gs mov sbb je insb mov adc cmc movd cwtl adc shr adc (bad) je (bad) adc test cmc xchg rcrb ficompl fwait mov in mov pop test sub (bad) push out jle sub adc or ja push jle mov test in xchg rex.RXB sbb cmpsl insb out callq movsl pop std adc je xor loop addr32 mov adc sub imul push push and (bad) cmpsl mov adc pushfq enterq insb add pop jge,pn cmp cmc out jl adc test in pop sub adc (bad) add test scas repz adc mov (bad) add adc sub nop lea xor pop xor int3 cmpsl retq adc xor pop rex.RB stc cmc add cmp and or xchg (bad) xlat add jne imul adc jns pop lret (bad) or (bad) loope or (bad) test (bad) cmp fiadd (bad) rex.WX xchg (bad) movabs ja add cs rex.WRB rex.RB out rex.WR movabs adc rclb in (bad) fwait sar mov (bad) xor rex.WRXB clc vunpckhps xchg cmc (bad) cmp sbb (bad) mov movsl loop sbb jl xor ss test leaveq mov push clc iret cmp loop (bad) push cltd pop fwait mov clc xor sub xchg (bad) (bad) movslq adc mov jg cmp adc fdivrs popfq adc rex.XB sbb xlat xchg leaveq add rex.RX (bad) pushfq mov fsubl imul retq add test (bad) adc mov icebp and mov xor jbe (bad) adc rex.WB or js unpckhps cmp mov rcll icebp lods mov je or (bad) rex.WX push (bad) (bad) out xor insb adc fidivrl jmpq add movabs adc xchg rclb (bad) push push add mov adc adc movabs mov jnp (bad) mov scas cmpsl (bad) xchg jmpq adc pushq movabs and mov adc mov movsl (bad) add sbbl (bad) adc (bad) adc xor jno int3 repnz enterq and fcomps fwait adc fdivs fcmovne loope psllw cwtl mulb in int3 jmpq cmp rol (bad) retq adc push jmpq xor mov std adc and ljmp jbe xor xorl adc callq cmp cmp adc jp adc jno cmp jns repz hlt (bad) rcl jmp int (bad) pushq rex.WR rol movslq mov ficoml jmp in jp (bad) lods mov jnp movsb (bad) and test adc xchg ficoml lret mov add add adc fild lods sub push xchg pushfq mov outsb adc movabs sub clc test jbe adc adc lods rex.RX clc mov pop (bad) jnp fldt std (bad) fwait loopne sbb xchg xchg rcrl int3 (bad) adc in fidivrl lea sbb stos hlt cmpsb callq int sub decb rex.RB rex.WRB div mov adc (bad) cs adc xchg xor (bad) adc movabs (bad) (bad) cmc (bad) rex.WR pop adc fcomps adc js (bad) adc lods (bad) xchg iret imul xchg xchg jne adc (bad) adc pop jnp adc mov jl xchg sub adc cs pop sub adc xlat repnz notb js pop in fmull jl lea movabs rex.WRX (bad) sar mov adc mov rex.RXB leaveq (bad) sbb sbb xchg cli push or add xor iret xchg xchg adc int3 jb xchg adc js mov shr (bad) rcpps (bad) insl xor (bad) mov adc cwtl adc data16 (bad) sti adc mov (bad) sub stos xchg mov pop adc je sahf xor sub divl fldenv pushq cmp movsb (bad) sub (bad) xchg fwait popfq (bad) mov retq mov decb rex.RX mov xchg fist mov sbb jb pop cmpsb or sub fcoml (bad) sbb add xor ds jmp adc mov xchg mov mov or mov sub movabs idivb sti sub insb rex.WRB adcb lods (bad) loope mov (bad) xor test sub sub xor sbb std xor cmp adc jle adc push (bad) faddp or fcomip rex.WB rex.RXB jnp adc xchg insb push mov adc (bad) fist test xor leaveq xchg lea cs mov adc cltd lea mov (bad) or sbb mov (bad) leaveq rex.XB mov sbb add out pop cltd adc fisub adc lock movsb sbb icebp adc lret pushfq mov in (bad) insb sbb mov adc rclb ja callq rex.XB cld enterq fdivrl jo rex.XB adc ja adc mov adc decb rex.WB out jle (bad) rex.WRXB insl jno hlt out (bad) repz lret icebp adc adc sbb or clc cli es sbb push push push adc insl or (bad) callq pop pushq (bad) pushfq test add in ror mov sub and cmp test or xchg je mov jns adc enterq pop movsb adc add fstl clc push sbb sub rex.XB sub cmpsl and adc rex.X fstl adc rex.WRB (bad) adc sbb push and int3 (bad) cmp (bad) movslq int sub enterq rex.XB ja or or cmp xor or mov fbstp push or mov (bad) pop test testq rolb adc add enterq fbstp outsl mov mov adc cmp xchg jrcxz ss (bad) jne adc xchg sbb push adc (bad) rcrl mov insl (bad) jb cmp push ss in rex.RXB xchg jno mov adc loop rex.WXB adc fcoms repz (bad) movabs jae lret (bad) (bad) jg adc in (bad) rex.WRX mov negb lahf test retq iret adc sbb movabs and fsubrp push popfq outsb rex.WRB push push xchg lods rex.WRXB and xlat scas mov (bad) adc and add adc mov cmpsl rex.WX jrcxz mov xchg sbbb nopl out imul js rex.X cltd fwait stc add xlat out or callq fcoms imul in (bad) lock adc insl (bad) mov jnp (bad) sub data16 fdivr adc jno jns adc (bad) adc rex (bad) mov or or adc adc in insb adc (bad) sub cwtl sbb add xchg outsl rex.W lea adc (bad) out (bad) addr32 xchg sbb clc rex.WRB cmp pushq scas adc mov mov cwtl rex.RXB adc (bad) mov fistl mov retq leaveq jmp in (bad) clc movabs push adc (bad) pop insl sahf mov sti adc movabs test xchg pop jle ja (bad) clc adc pop fcmovnbe pushfq lods imul icebp in (bad) mov and or cli (bad) in test (bad) jmp pushq notb incb (bad) icebp push adc scas pop rex.WRX js rex.WRXB notl sbb adc rex.X (bad) (bad) xchg hlt pop mov movabs (bad) push div rex.WRX adc jmpq (bad) adc cmp adc (bad) (bad) out and adc (bad) fisubl lea rex.WRB (bad) or (bad) and mov rex.WRX rex.WB pop (bad) fsubrs loop fisubr adc mov ja xor xchg movabs (bad) cmpsb insb xchg mov adc jo xor pop je in jmp movsb push (bad) rex.WRB sub rex.RX loopne or fcomps movabs jae insb mov and (bad) cwtl test insb (bad) retq jb pushq pop rex.R and rex.RXB out or (bad) or (bad) scas cmc sub pushq (bad) cmpsb sti es jno movsb int3 cmp or xchg cmp ja jmpq stos movabs stc (bad) in repnz fcomps shr xor adc mov adc (bad) xor push mov (bad) adc (bad) mov retq mov enterq gs fcoms xchg (bad) sbb mov adc gs lods mov jmp push sbb test fsubrs mov xor sub mov cmp (bad) adc sarl movsb sbb push cmp sub mov (bad) jnp notl je imul rex.WRB xchg jno jbe ss mov imul jns (bad) pop int3 mov rex.WX or jle popfq adc out or adcl and jns cmc fdivs or (bad) repz rex.RXB push adc rex.WRB jrcxz rclb fnsave leaveq or movslq fmull adc add out movabs (bad) xchg insb or hlt test lock (bad) cli cs rex.WRXB lock rclb add mov mov sbb xchg adc (bad) ficoml add jge or notl out sub jb (bad) jge stos adc or out pop (bad) adc pop (bad) imul icebp pop (bad) cmp sbb leaveq jp cmp (bad) cli xor lret sarl (bad) push adc adc pop mov rex.RB rex.RX pushq iret sub test sbb push (bad) ds adc movabs or (bad) mov cmp cmc (bad) (bad) adc in test (bad) xchg adc callq adc sub jb rcll rex.XB xchg push xor adc mov mov pop fcmovu push xchg insl fdivl jle outsl (bad) cltd xchg adc adc sbb imul repz and jge rex.WRXB and rex.RXB fcmove fbstp adc out movabs push int jne (bad) mov add cld jns fdivr (bad) (bad) (bad) retq lret adc cltd pushq loopne xor sbb (bad) cmp orl adc mov jrcxz (bad) pop push jp or adc lea or rex.RB rex.WRXB xchg adc loopne (bad) mov (bad) stos adc sbb push sub leaveq sbb cli and rcrl cmp in loopne test popfq adc outsl pop mov (bad) pushfq rex.W mov or std testb adc xlat lea mov rex.W loope mov lods gs (bad) hlt retq push ss fidivr je (bad) jl pop rcrl adc mov fbstp nop fldt movsl and (bad) (bad) pop sub xchg xor xchg adc enterq lret scas rex.WX mov out mov push xchg lret mov fist cmp fstl and (bad) imul jbe lahf adc jrcxz adc subb add jae lock mov xor (bad) pop add (bad) mov adc outsb (bad) repnz rex.WRX xchg loop cli (bad) ficoml (bad) pushq (bad) cs imul scas mov retq mov adc je callq push sub rex.WR gs nop (bad) lea iret cmp adc jnp mov (bad) adc jl adc xor (bad) pushfq fsubs pop (bad) stos movabs addr32 (bad) (bad) sub cld and mov callq mov (bad) ss or movabs jo or (bad) jp mov adc nop iret mov rex.B adc (bad) mov sti pop stc ss (bad) adc adc rex.WXB adc mov int3 (bad) lods leaveq cmp (bad) (bad) mov and and jge xor adc mov pop cwtl jne sub adc jbe sbbb sbb leaveq (bad) loop xchg jl fnop xlat sbb ficompl in testl xchg movl push sbb jo movabs rex.RB adc enterq pop xor or cmp or adc jno pop adcl rex.WRB rex.WRXB ficom mov rex.RB repnz adc (bad) cmc cwtl rex.XB jo cmpsb or xchg notl push xchg rex.X fdivrs outsl xchg sti push adc adc js (bad) rclb (bad) or mov pop nop xchg push cltd push adc mov cli std adc loope jb in lretw (bad) sub add xchg (bad) (bad) xchg imul push xchg adc popfq jp xchg or mov callq add jbe lods movabs jno int (bad) cld (bad) jmp jnp pushq or in out movabs (bad) test movslq cmpsb movabs and rex.WRX push (bad) xchg lods sub out mov (bad) rcll adc cmpsl rex.RX or or int rolb mov or mov decl sub rex.WXB rex.WRX (bad) adc (bad) adc (bad) pushq push push imul xchg adc (bad) push sbb adc in pop (bad) adc mov (bad) mulb gs cmpsl pushfq jrcxz notb and nop adc xchg pop fwait test shrl adc mov lea push (bad) rex.RXB xchg clc imul adc stc ja cwtl adc xchg xchg negb test jp std lahf fwait unpckhps (bad) mov scas (bad) imul or xor es (bad) jbe shlb sbb cmpsl adc (bad) (bad) scas mov pop xlat hlt rex.WRXB repz adc test or sbb nop adc (bad) rex.WRXB add adc (bad) cmp rcrl ds xchg fsts adc rex.WRB sub jrcxz push shl comiss cmp and insb (bad) cmp repz bswap adc cmp xchg iret movabs clc jns dec mov xchg or pop (bad) (bad) and callq in sub iret sbb mov jmpq sub (bad) icebp (bad) jne (bad) test (bad) xchg pop out and or (bad) adc outsl jle and imul adc lret mov mov cld rex.WRB or or push xlat xchg callq nop movsb jbe xchg lret push sti retq rex.WRX adc (bad) (bad) scas adc add jne adc mov imul or adc adc sub adc cmc jrcxz cmpsb (bad) (bad) movabs cld (bad) adc mov mov add sti ss test adc sub (bad) and or cmpsl adc adc (bad) (bad) adc rex.WR fwait push test adc mov cmc movabs rex.RXB rex.B add mov and adc jp (bad) lods adc adc lahf cmp cmp rex.WR rex.XB lods (bad) xor lret (bad) and mov cmp or sbbb test adc subps xlat mov jo rex.X mov mov loop retq xchg fwait xor (bad) sbb rex.WR jns (bad) or pop adc out mov cmpsl adc insl (bad) adc fldl sub loop or push xchg movabs rex.WRXB cmp adc mov fcoms adc movabs mov mov adc xor clc ss lea rex.W xchg test rex.WXB iret cmp jg push ds adc sti cld jo or push int lock adc (bad) jg and rex.WRB insl jl,pt jrcxz int3 mov xor rex.WRB test pop adc movb rex.RB rex.WRB mov stc int3 movsl sub retq add adc sub xor icebp retq movsb faddl push adc add adc movslq mov repz mov in in cmp lret xchg jge fsts rex.WR pop xor rcll mov (bad) sub test nop (bad) adc mov mull rex.WXB cmp (bad) mov test (bad) movslq cmp imul lea push loop (bad) (bad) and test sbb or rex.WXB cmovb rex.RX push movsb sbb insl popfq imul rex.WXB cltd in (bad) ds enterq test pop movabs fsubl xor (bad) jne cmp adc mov jnp outsb add or or xchg xor lret push int3 or or adc xor vmovups (bad) xchg and mov push cmp push lock cmp add rclb fsubr jb xor mov leaveq test xor adc or cmpb sbb clc mov out ss and rcrl stos fcmovne sub in lods sbb out lea rex.XB adc cli pushq test push in (bad) (bad) adc out in (bad) pushfq pushfq (bad) jne lods (bad) lahf rclb adc or fdivrs gs or or sub adc rcll sbb cmpsb add adc pop adc sub adc fwait lods (bad) mov mov pushq push adc (bad) (bad) cmp sbb adc shlb adc scas mov sub xor jle cmp lea xor icebp test sbb adc in push retq mov adc sbb cmpsb adc jge rex.WRXB cli rex cmp adc fisubrl ss mov xlat clc cwtl add xchg adc adc fistl or or mov push sub or enterq xchg imul xor outsl (bad) mov pop push xchg (bad) adc callq (bad) (bad) jmp jl add adc or imul incl adc fisttp adc outsb xchg clc cmp ja adc adc pop insl mov xchg or jle stos mov rex.WB addr32 pushq es mov rex.W push mov clc cmp xchg or mov ss jmp stc sub rex.B rex.WB (bad) stos (bad) repnz cli insl xchg lahf pushq ss or rolb xchg int or push jns movabs (bad) adc xor sub rex.WB xor pop sbb stc rcrl adc outsl rex.WRXB rex.WRB adc hlt adc rex.WRX in adc jnp adc and push rex.RXB adcb imul push adc pop xor or jle (bad) adc ds adc scas lret clc rex.RXB mov adc iret adc add add xor xchg retq jge fdiv mov repz xor jae cmpsl clc pop xlat cmp jo (bad) (bad) jne adcl addr32 (bad) int out fwait pushq andb add and adc rex.WXB movabs mov adc lods mov mov xchg sbbl rcrb mov cmp rex.X orl out push sub rcll adc ja or addr32 (bad) movsb fsubrs out rex.WRXB lods scas add mov rex.RX jo and ja fwait pop rex.R adc xchg lock scas outsl (bad) adc cmp (bad) adc lret xor or fcoml mov (bad) and jmpq push adc add ds clc jbe pop xchg mov jno in outsl adc int movslq adc movsl cmpsb gs adc sub adc mov mov xor sbb or sbb (bad) fucomi rex.W cs adc add in sbb test adc adc jns adc sub (bad) (bad) pop add and adc (bad) rex.WRX sub adc pop movsb ja bnd adc idivl lods adc (bad) mov jne adc mov stc enterq pushq xor xchg cmp rclb outsb movslq clc mov or callq stc int3 adc (bad) mov fwait xlat rex.WRB add adc cltd data16 adc (bad) fcomp leaveq xlat gs pushq outsb (bad) push adc or adc xchg jmp cli sti (bad) fmuls sub (bad) clc (bad) rex.WB lock int3 xor or adc jmpq imul rcrl cmp (bad) (bad) jne adc (bad) insb cld rex.WR (bad) test movabs or fist xchg jne je push mov pushfq lea (bad) (bad) iret (bad) and loop (bad) out jmpq int3 (bad) rcll push and add cmp (bad) imul (bad) adc (bad) rex.WRX (bad) add pop (bad) adc xchg xor fcoms (bad) movabs push mov sub adc and pop (bad) shlb pop int3 and stc test (bad) scas sbb movabs movabs or lahf push mov (bad) xchg push stos mov adc rcll push ficompl jae outsb adc rex.B sub adc nop jno (bad) adc popq stos adc in (bad) push sbb pushq ss adc lods rex.XB xchg adc adc out cwtl jns retq (bad) sbb std (bad) pop adc add or (bad) push shrl (bad) outsl movslq mov (bad) add mov fsubs and in jmp adc rex.R cmpsl jp popfq out rex fs rex out and rex.WR jmp sub (bad) sbb adc (bad) or xchg and xchg lret xor movabs std fprem (bad) sbb cwtl fistl xchg cwtl retq (bad) (bad) adc pop (bad) sub mov jae imul push push sar pop xchg xchg rex.WRX repnz rclb movsl mov int adc push push test sbb jns movabs adc push or pop sub out mov (bad) out movsb and (bad) out adc jns fmul adc xchg add push rex.WRB rex.RX mov fisubrl (bad) es cli (bad) adc mov add jae in pop (bad) adc rex.X fist retq outsl adc gs loop adc jb add (bad) (bad) adc rex.RB pop adc add and cmpsl iret mov clc rex.XB fidivl (bad) xor fcoms rex.R add test xor (bad) sub mov add (bad) adc cmp test adc (bad) pop adc scas and nop (bad) adc movabs xor push sbb js adc (bad) sti enterq test (bad) jl jg xor push loop jmpq and int3 mov icebp fsubs rex.WRXB int and mov xchg orps push retq sub rcrl popfq jb (bad) es sbb in adc xchg retq add sbb xor or adc outsb rex.RXB xchg fcmovne scas out (bad) notl outsb out mov mov rclb jrcxz add (bad) jmp xchg lods or mov adc scas push jge cmp jae scas push (bad) outsl rex.RXB movabs xor sahf in xlat add (bad) repz rex mov xchg rclb (bad) rex.WRB retq movabs xor lea sbb cmp imul jg mov iret pop rex.WX rcrl add (bad) callq jae mov rex.WX shlb cs adc rex.WX push (bad) xchg divl mov (bad) fildl cltd cmp xchg loop outsl xchg insb cmpsb or adc mov xor in cmp (bad) (bad) adc lods in (bad) mov (bad) jae mov adc (bad) rex.WXB add scas pushq pop adc sti and lret loope xor pop or push fsts or pop or or jbe rex.RB fwait sbb stos leaveq pop fs push hlt fstp mov lock faddl adc clc adc loopne lret xor pop rex imul iret xlat mov xchg (bad) insl adc sbb rex.B mov rex out and pop std vfixupimmss adc mov push adc cmp jg adc movsb (bad) sbb jrcxz and mov movabs xor mov (bad) adc or cli outsl movabs (bad) cmp pop stc xchg iret (bad) (bad) xor jp mov cmpsl callq test shrl pushq jae popfq in adc cmp rex.WRB rex.WRXB mov push shr jo sbb (bad) adc cmp int or mov lahf in xor mov add push rex.W (bad) adc jmpq xlat mov hlt rex.WXB (bad) sub pushq mov (bad) push shll notb imul cmp xchg sub adc sub stos rorb clc (bad) int lock (bad) imul (bad) adc or stos push push cmpsb mov (bad) repnz (bad) (bad) adc adc sti rex.W xor push jae adc mov mov cmp ficoml xchg (bad) in mov adc jnp mov xchg (bad) sub test (bad) jmpq pop imul in xchg mov mov outsb (bad) sbb sub fist (bad) movslq enterq imul fcoml movsl adc sarl jmpq imul add mov sub or mov retq pop (bad) adc pop xor lret out rex.RX sbb fidiv stc cmp jl (bad) adc xor (bad) xor adc retq rcrb nop adc movabs retq (bad) lret icebp and adc mov movabs fsubr adc pop cwtl mov callq adc adc cltd adcl adc jae mov mov rorb lret adc rex.RX rex.WX pop fstp gs cmp or loope xchg (bad) in pop sbb pushfq (bad) pop (bad) fdivrs adc movsb adc shll pop jg fstpt (bad) clc fwait (bad) (bad) (bad) mov (bad) icebp adc xor pop nop xchg add (bad) (bad) cwtl pushfq mov adc out and adc xlat outsb (bad) mov push or sbb mov (bad) mov rcrb (bad) mov adc pop (bad) stos outsl lock push mov adc lret test or fcoms pop rex.WX adc jo sub clc xor jg fsts push sub sub or jae xchg mov or (bad) in jnp (bad) (bad) movabs pop test adc and je xchg sti out sbb fisubl (bad) adc negb scas in jae adc cmpsb rex.WRX (bad) adc cmp rex.RB or loop mov adc xorl xchg add pop lret mov stc loopne mov fbstp rex.RX test fisubl rolb pop (bad) stos in mov (bad) fldcw (bad) rex.RB adc outsl and (bad) or (bad) adc lods fwait mov adc jae rorl fist out je adc xchg mov jge (bad) mov pushfq rex.WRXB pop xlat out jg adc jge push push adc repz mull push and rex.WRB movabs test test in mov movabs andb rex.RXB adc (bad) mov pop pushfq or pop retq mov adc pop mov jge rex.RX xchg (bad) (bad) rex.RXB xchg adc movabs sbb test rolb rex.WRXB mul sbbl ja callq (bad) test mov cmp rex adc push lea mov sbb jns jne mov rex.WRX sbb pop rex.WB hlt adc jb cld (bad) adc push (bad) mov clc loope fwait add (bad) je (bad) rex.WXB jo jbe loop adc push iret rex.R sub adc movsb (bad) adc push adc mov cmp mov adc lea or cmp jae pushq (bad) (bad) rex.RXB icebp (bad) ss (bad) (bad) (bad) xor add rex.X (bad) movsl cmp (bad) jp ds adc (bad) cld pushfq stos or push adc fisub lock add xchg xchg (bad) stc adc (bad) pop cmp mov sub movabs jle (bad) and sbb mov adc xchg pop pop cmp insl insb jrcxz mov cmp sbb cmc sbb vshufpd (bad) movabs jae out (bad) and adc ds cwtl adc je mov cli sbb jo pop xchg icebp adc (bad) jnp mov sti retq imul pop push cltd imulb fnstcw lock (bad) addr32 adc clc cmp sbb (bad) (bad) (bad) and (bad) (bad) roll rep (bad) sub sub push cmpsl xchg jl (bad) cmp xchg fisubl lods addr32 rex.RB jle callq adc fstpl push movslq push hlt test adc fist insl (bad) (bad) je test in stos lahf xchg icebp int3 lea std or mov jge addr32 mov gs rex.WX (bad) fisub and and (bad) movabs out (bad) adc rex.W rex.XB fadds jno jp sub cmpsb sti pop and or (bad) add (bad) xor (bad) or xor xor sbb sbb mov movsb mov out adc and xor fucomi ficompl sbb (bad) retq (bad) pop addr32 movsb adc push out jg xchg cmp jmp cmp add sub (bad) cmp popfq cvtps2pi adc adc movb xchg pop cmp jmp adc (bad) xchg stos in movslq xor cld and xor sbb or cmp std lret lock sbb (bad) sub cs bndstx (bad) (bad) (bad) add mov mov cmpl pop popfq sbb outsb (bad) jbe push loop cmpsl (bad) (bad) addr32 mov pop and pop sbb rex.WB mov (bad) rex.XB adc lret (bad) adc sub (bad) movslq sbbl je cmp jbe cwtl rex.RB scas repz cmp sub (bad) fnstsw jrcxz stos sahf movabs add imul adc push cmc cmp cmpsl rex.WRX adc fisub gs xor test sub xchg rex.RXB addl loop adc sub mov imulb outsb pushfq fistl rex.B push stc adc (bad) clc and movsl fcompl (bad) mov out sub pushq loop (bad) jae cmp or adc stc or (bad) adc repz xchg add push adc mov (bad) xchg adc xor mov data16 jnp (bad) fld insl mov rex.R sbb loope cmp xchg adc (bad) jne sbb mov in xor test add xchg adc sub unpckhps xchg rex.B cmp and jg push jnp xchg jne callq decb mov cmp (bad) mov fistl mov cs out stc cmp xor jno (bad) or add (bad) add mov cmp mov push adc xchg mov jl xchg rex.RX jbe adc sbb xor mov test rex.WR or add push adc and sub sbb hlt or (bad) std xor pop cmpsb jg stos mov adc int3 jne (bad) adc xor pushq orl push retq (bad) xor jle mov andl mov xor movsl adc sub xor jp and jl rex.WRXB loope (bad) rex.W adc (bad) jo cmp mov insl gs push sub ss jp xchg or lock (bad) (bad) movabs jg add xor rex.WRB mov faddl adc mov jrcxz xchg stc pop cmp rex.RB adc std vcvtps2pd je movabs es idiv fcom mov fwait (bad) mov adc fisttpll and leaveq adc xchg cmpsl xchg fwait and rclb fisttp adc rex.RX sahf adc mov pushq leaveq pop sar ficom push xchg je xorl ds jno or jne cmc jae adc pop push push (bad) enterq adc movslq sub (bad) adc (bad) (bad) (bad) adc xor xchg adc sub subb mov push and rex.WXB in mov add and int3 (bad) fcoml mov rex repnz xor sub (bad) rex.WXB xor add lock (bad) adc or leaveq movsb xlat xchg cmp adc clc jnp or adc sbb hlt adc pushq not xor (bad) (bad) (bad) roll (bad) adc mov (bad) jmp sbb in rex.WR sub or mov push clc clc ja adc push stos outsb pop push or push callq repnz and sti clc lret (bad) callq sub notb pushfq push and and test xchg push adc sub adc (bad) mov test xchg jne cmp ffreep clc rex.WRXB incb mov fwait push je (bad) clc xor jmp (bad) movsb sbb (bad) and idiv rex.RB data16 fsubr sbb jb pop rex.RXB sub cmpsb icebp push (bad) add (bad) sahf xchg xlat jnp adc sub movabs clc mov (bad) (bad) xorl (bad) adc (bad) (bad) pushq insl enterq popfq testl jo sub retq imul (bad) outsl movsl mov or adc fldl sbb fwait data16 rex.RXB nop movl cwtl pushq (bad) jae fmul gs (bad) insl shrb xor adc (bad) adc push mov lods movabs loopne cmp pushq shlb or outsl (bad) (bad) push fstpt mov notl stc (bad) sub andb movslq adc iret jbe cs lock jrcxz pop adc mov xor sti (bad) or fidivl mov add or pop idivb lea shll (bad) sarl incb mov (bad) jl mov out jge add (bad) (bad) movabs or loop and add lahf (bad) xchg mov sbb (bad) mov rex.B fistp push cmp xchg mov jne movabs rex.WXB mov je insb or and test mov (bad) sbbl and xchg adc gs rex.WRB xchg mov out (bad) jg sbb or rex.XB mov cli movsb xor lret xor push and adc imul test shll test mov rex mov add adc loope rex.X cltd retq loopne adc cs cmp lahf xor (bad) add jmpq jne out sbb push adc fcomi adc sahf cltd movslq adc ja add cld pop adc (bad) mov adc cltd js imul xchg mov cs push sbb fprem xor mov mov outsb movslq xor fwait mov in rex.WX fs adc lahf xor xor test jmp mov out lret push add jae in testb cltd roll (bad) xchg push mov cmp imul (bad) rex rep (bad) popfq xor rex.WR loope movsl cmp fimull test scas mov sbb adc fildll sub cmpsl rex.WXB (bad) pop rex.WRX mov adc and test (bad) adc cmp cli (bad) rex.WX mov or mov (bad) jl mov xchg xchg mov hlt imul retq or xor out sbb sti or je lea xchg sbb adc ss cli sub jb (bad) adc push clc sub mov mov rex.RXB test ja adc mov sub adc pushq movsb sbb rex lret push jle adc xchg rex.WR cmp or pop and loop add leaveq xchg xchg imul (bad) sub mov mov mov (bad) xorl adc mov mov xchg sbb xor ds jb adc cmc lret clc imul int mov lahf (bad) mov test sbb xchg adc lods adc sbb movl test cltd fmull imul test cwtl in cli (bad) je (bad) (bad) pop mov push jae rex.X mov in std push jbe adc loop xor mov adc (bad) movsb mov sbb out test adc adc cmp xchg in adc shll jl clc bnd (bad) jae in adc cmp idiv movabs callq mov or sbb outsl adc ss sub cmp rex.XB add jae jle cmp sbb loop xchg sub movsl fstps jns (bad) fdiv retq adc (bad) nop (bad) mov adc cmc (bad) adc imull adc mov (bad) rex.RB int (bad) (bad) enterq sbb ss js jns (bad) imulb lea adc mov or jl rol adc mov gs adc sbb cmp push sub test js adc xor jbe wrmsr outsl rorb movsb test notl or and jb lret sbb (bad) mov hlt loopne shrb clc (bad) pushfq int mov subb sbb jns clc gs cmp or adc imul outsl mov adc (bad) sub clc gs idivb std or pop push or fsubs adc xchg orl xchg (bad) out imul adc push mov std add jbe rex (bad) lea mov or stos pop adc xchg mov sbb mov rex.RB (bad) jns ja jb notl cmc mov rex hlt xor mov adc add sub push and xor mov (bad) pop movsb clc rex.WB mov fcoml (bad) stc adc data16 mov mov fimull xchg mov ja clc rex.B (bad) (bad) out push icebp repnz adc or fwait rcll clc sub add test jnp push adc jle cmpsl fs mov out (bad) and loope leaveq adc out jp mov mov frstor adc xor nop cltd icebp (bad) sub rcrl jns imul movabs xchg sub ds push mov sub fildll int3 fmul mov adc je mov scas xchg (bad) fimul (bad) sbb mov push rex.WX sub jp or addr32 or (bad) xor adc movabs (bad) sub adc mov in (bad) mov (bad) or jmpq add fdivrl (bad) adc out loop movabs jbe adc add (bad) out (bad) mov cs add jp stc rex.RX movabs adc lock jo mov mov out cld mov stos and cmp (bad) sbb (bad) cmp adc rex.RXB jne adc (bad) sub add push sub clc (bad) push (bad) mov jne loopne jg jge addl mov callq scas rcrl mul bnd out test adc rex.X adc push jmp cmp cmp notb adcl sbb mov (bad) push push shrb or adc in mov pop pushfq jno mov callq sbb (bad) jno in pop adc sub (bad) adc lock ss sarb sbb mov adc rex.W data16 adc cmp scas jo (bad) adc decl cli pop (bad) add lock stos or int3 adc sub fldl divl and cmp (bad) and xor movsl test int rorw in int3 ja rex.WR pop stc or mov or (bad) adc (bad) lods test rex.R fldl2e adc clc xchg enterq mov divb rex rex.W rex.WXB adc rex.RB cmp (bad) cmpsl movabs push mov xchg jge sbb or sbb lock push vaddsd lea clc pop (bad) fucomp retq mov xchg callq cs out adc lret sbb xchg xlat mov pop pushfq fmuls jge repnz push imul fcompl movabs add cltd mov fistl jle (bad) sub adc fcmovu sar adc movabs insl fsubrl mov fs pushfq adc jnp adc mov pushfq cmp mov pop lods rex.XB movslq and (bad) adc movsl push or add mov (bad) cmp adc adc in sub jno pop or and adc cmpl cmp rex.WXB retq js mov lahf loopne cwtl mov fcoml fdivs insl mov cli rex.WB sub sub scas (bad) xor jmp js pop lret (bad) in push sub addr32 out jmpq add xor mov (bad) adc jge mov rcr (bad) (bad) int (bad) or jp xchg adc sbb adcl cwtl sbb lock or cmpsb movslq fstpt pop jae adc mov push movsb jb (bad) (bad) incl mov movsl (bad) adc jns adc idivw sbb push out test mov adc xor sbb movsb in mov jmp test movabs test or fldcw xchg leaveq sub rorb mov stos callq rex.WXB movsb xchg (bad) cmp (bad) mov adc (bad) jrcxz cwtl adcl callq adc (bad) rclb mov gs sbb std push jb adc or imul movabs stos out leaveq mov xchg adc rex.WRXB push rex.RX iret out adc mov (bad) xchg (bad) rex.RXB or (bad) nop fmul (bad) rex.RXB sbb pop outsl cmp mov rex.XB add or mov fmull lea xchg push cs outsl mov mov (bad) sahf adc sub mov rcrb ds jmpq mov cmp movsl xchg fs scas cmp (bad) or (bad) and clc sbb (bad) (bad) imul xlat jnp jrcxz and adc mov pushq adc stc (bad) imull cmp movslq rex.WB rex.RX (bad) lahf int fsubl (bad) xor xchg and adc sti rex.R es jge mov adc jle push mov jno rclb icebp (bad) movabs xchg (bad) rex.RX adc sbb (bad) fdivrl adc rex.RX sbb pop movsb cmp xor and (bad) loope xchg nop pop pushfq imull adc js or fsubrl repz adc (bad) adc mov scas icebp divl sbb mov sub xor pop jnp jmpq pop sub rex.WRB adc cwtl lock (bad) rex.RXB or jbe movb fwait push repnz cltd or sbb movabs push (bad) test cmc sub pop or rex.RX (bad) jbe mov (bad) lods addl adc xor sbb fisubrl jl xchg jne stc adc xlat sbb shrb adc mov repnz xchg rex.R adc (bad) (bad) cmp insl cmp rex.RX (bad) rex.WRXB je rex.WB xchg sbb pop (bad) (bad) mov mov or sti xchg jle sarl (bad) jns clc sub (bad) movsb loopne xchg cwtl adc fs (bad) adc test mov (bad) rex.R (bad) rorl jp mov fwait jno rex.XB lea vunpckhps mov pushq movb adc sub out sbb icebp adc xlat sub jne rex.B repnz jns jle out jbe or mov (bad) (bad) adc ss clc mov rorb pushfq (bad) push rcll and pop (bad) notb xchg test notl rorb sbb xchg (bad) mov in pop sbb out add adc push movsb jg lret pop decl push cli (bad) push sub cmp lock rorl (bad) xchg add xchg ds rex.B mov gs sub xchg stc cmp clc adc pop push adc insl xchg test xor cmc sahf and sbb hlt jl pop rex.WXB cmp sbb adc and push je (bad) xor xlat and lock rclb add (bad) pop fistpl add adc fwait cmp movabs out lock cmp lret pop adc xchg mov (bad) out adc and pop or (bad) adc lea cmp sub movabs ss clc adc xchg iret jg xchg sbb xor insl leaveq jp (bad) jno adc (bad) negl adc movslq pop or rcl out (bad) data16 sti push adc (bad) mov ja adc movabs mov cmc insl jl out (bad) jbe popfq mov loope lods xchg je rex.RXB cltd xchg rex.XB scas xchg in adc (bad) test add adc adc rex.X and test (bad) adc insl pop (bad) push or push or sub (bad) (bad) adc lret mov push cmp (bad) test add jge mov xchg add adc (bad) mov or out adc (bad) ja in sub nop rex jle hlt rex.XB rex.RB mov shll xor (bad) divb (bad) adc lea add rcrl push (bad) fcomp push ds xor cmp lret adc (bad) adc fcmovbe sub (bad) (bad) cwtl (bad) or push xchg jp mov ds mov movsl adc sbb (bad) (bad) loop movsl (bad) jge (bad) xchg adc movsl pop in adc loop adc or test (bad) cs xor retq shll int mov rex.RX jp xchg push or rcll (bad) push xor add sub sbb xor test cwtl (bad) movslq repz (bad) sbb lret movabs adc out loop adc mov fcmovnu adc adcl adc (bad) movabs mov pop lods and add enterq idiv push gs adc fcoms (bad) add popfq lods jnp fmuls test insb rex.WR rex.R outsl adc jno idivl pop icebp xchg push rex.WRXB (bad) and test adc fbstp jne sub movabs (bad) mov cs (bad) fmul (bad) xchg lret xor jmp lea cmp rex.R (bad) xchg sub in adc or and callq fisubrl cmc adc leaveq lahf mov adc mov xor adc in adc mov push mov callq data16 adc in adc pop adc (bad) fldcw pop adc cmpsb jrcxz or jmp sbb popfq adc rorl (bad) adc pop (bad) stos mov rex subq mov jns nop (bad) lods and insb pop mov (bad) (bad) int3 xor rex push pop leaveq jl lods adc je in adc movslq (bad) add imull stos mov push rex.WX xor xchg gs pop (bad) fwait stc adc clc imul test (bad) fdivrl (bad) (bad) outsb pushfq imul adc (bad) jne sub push lock lods loop outsb adc mov lret (bad) and adc sahf push jno adc jnp pushq cmp adc movsb adc fwait adc (bad) sbb and movsl movntq sub in mov adc (bad) mov cmp push and movabs mov movabs (bad) (bad) adc mov adc (bad) (bad) popfq lret adc xchg rex.WX test (bad) or in and rex.RXB xlat (bad) cwtl xchg js xchg cwtl (bad) fadds cmp fsubrl rex.XB mov (bad) lret or rex.WRB (bad) (bad) (bad) mov in stc (bad) pop add unpckhps lret (bad) jno (bad) fs add fcoms fisttp lret jne sub push push adc add test mov (bad) adc (bad) lret cwtl cmp repz cmp enterq sub adc cvttps2pi imul rex.R sbb adc cli xchg je jnp vunpckhpd pop adc adc cmc pop or and sub add (bad) sub rex.WB xlat mov in in mov add fcmove movabs xchg mov mov adc icebp in or out ja fsts push and pop adc mov sbbb ficoml add repnz nop out sub sub xchg adc jbe rex.R lock xchg in xor adc mov loopne xchg pop or sbb lock incw jae push adc lret outsb xchg rex.WX sub adc (bad) pushq sbb (bad) jne add push sets adc std (bad) sti rex.RX or clc fiaddl xor pop push fs xchg and lods jns cmp faddl decl (bad) xchg (bad) or pop cld cltd jl jrcxz repnz add pushq fidivr cmovge test add xlat mov (bad) mov rex.WRXB clc mov clc divb pop jmpq mov movabs rep or or xchg rex.X add (bad) fistpll mov mov cwtl in stc jmpq push pop in rex.R (bad) nop rex.WR xor sbb mov jl out or pop jmpq jg and (bad) (bad) callq adc insl icebp or rex.B adcl add (bad) adc in (bad) rex (bad) (bad) sub pop mov adc test xor notl (bad) adc (bad) jp movabs retq ja (bad) adc sti rex.RB rex.WR jbe xor adc cli mov int3 clc rex.RXB mov fstpl and pop adc adc adc mov or push rex.WR rex.XB sub xlat mov pop lret push insl andb enterq rex.B clc (bad) fmull and data16 pushfq adc jg pop jp cmp (bad) test je xchg test (bad) test pop and push adc int mov and sub mov callq (bad) fisttpl scas (bad) lock test leaveq xchg pop cld (bad) fsts xor and cmp stos (bad) xchg fwait adc lret loop sarl mov push (bad) mov movslq adc (bad) jb rclb je repz shr frstor or callq adc data16 cwtl adc negb rex.W movabs or movsb push rolb (bad) or push imul icebp mov mov rex.WB imul adc int3 xor rex.X pushfq outsb (bad) stos ss cmp clc rex.WRX repz xor adc xor rcll out sbb in sub (bad) (bad) rcrl (bad) rex.WRB cmp (bad) adc int loopne adc fmul rex.WXB movsl lret xor (bad) test cmp adc ficoml hlt jle in sbb or jne lods loope adc in nop or in ds gs stos cmp rcr outsl fs or rex.WR hlt ja adc (bad) push hlt adc jbe imul (bad) ja sbb and sub rex.B rcrb jbe setb xor push xchg jne fs mov imul test mov xchg add push xchg int3 addb clc std stos test rex.WR rex.W mov or pop jmp sbb xlat enterq (bad) xchg fstpt or ja cmp push movsl ds fadds pushq mov and mov adc cmp cmp (bad) xchg add jg in adc insl enterq or xchg (bad) (bad) jns ss (bad) adc rex.WR (bad) shrl xchg rex.WRXB movslq jne idiv mov cmp (bad) adc iret (bad) out ficoml addl imul adc xchg xor add mov lods hlt sbb (bad) loop adc mov in adc xchg cld add movabs xchg sbb clc (bad) mov adcl adc mov (bad) movsb adc movsl loopne sbb cmp repz fwait adc add insb (bad) push pop or adc jbe rcll (bad) mov movsl adc cmpsl mov sub je pushfq xor outsl movabs xchg (bad) movabs enterq insl sub hlt (bad) js callq (bad) and jns in xchg xchg js mov adc cwtl xchg adc in test adc adc xchg sub mov pop xchg rorb adc mov (bad) fwait push mov rex.W add sub or clc ss mov rex.WRX (bad) fdivl mov pop xchg sub addr32 lret movabs jo xor mov js mov rex.R rex.RXB mov adc push movsb test js pop imul out (bad) iret leaveq xchg rolb test rex.R adc shll jo adc scas (bad) je fdivrs loopne rex.X adc imul rex.WXB (bad) insb cmp (bad) push leaveq or pushq lret stos mov scas xor xchg or pushfq add loope (bad) jns sbb rclb xor incl movsl rex.W mov pop lret cmc mov and (bad) jbe pop decl adc test cmc (bad) data16 xor add (bad) or (bad) and mov in add jb cld jmp jne (bad) or fmul fwait adc popfq cmpsl stc mov incl push lock adc add rex.WRB rex.WRXB adc (bad) xor test fs cmp mov pop retq adc cmpsb rex.WB mov rex.R and es rclb out xchg rex.RB and adc adc cltd jno jrcxz (bad) out lea adc callq rclb cmpsl rex.RX sahf adc cwtl push stos mov add (bad) xchg adc sbb callq mul push insb add int (bad) jp fs push sbb rex.X lock pushq (bad) int3 jnp je (bad) xor jbe outsb and adc mov (bad) sub push cld (bad) or fisub callq movsl xchg mov adc add sti sahf adc push cli mov xor ja or push ss movslq or jb popfq fildll jl mov fisubr push pushfq mov rex.W mov or xchg stos (bad) (bad) retq rex.WRB cli push add adc movsl fwait adc adc out jne sub lret stos (bad) mov fdiv and (bad) pop and mov in mov adc leaveq repz adc cmpsl xchg adc hlt (bad) lods or test xchg adc add push adc in sub push shr add mov add sub rex.RB test in xchg adc (bad) adc lods pop mov adc enterq add sbb imul (bad) callq addl outsb mov and mov (bad) adc mov push icebp mov add fsubl scas (bad) (bad) shrb adc loop out adc mov lret rex.WRXB xor add xchg js cmp int cltd movabs sub rex.RX fsubrp in add pushq mov out and rcl (bad) in and push adc cwtl (bad) xor fldcw sbb hlt and mov xchg xchg adc pushq sbb adc pushfq icebp mov rex.X xor es xorb jp movabs outsb rcll jge add rex.RXB mov retq mul jns mov lods or adc mov (bad) rex.WX cmp notb (bad) adc cli enterq (bad) adc xor in adc mov sub adc sbb hlt (bad) insl adc (bad) (bad) push jb movsb (bad) push adc fcoms and cld sub ja (bad) mov rex.RXB (bad) (bad) loopne (bad) mov cmp jns cli sti (bad) ja or mov rex.R rex.WX movsb or outsb sbb (bad) rex.WRX (bad) cmpsl adc movabs je sub mov mov retq xchg push mov mov loopne fs js and mov adc icebp (bad) sub push pop push stc adc sbb xchg adc jle retq sbb mov clc rex.WRB movabs (bad) pushq (bad) rex.RB in (bad) cmc lods imul (bad) leaveq fcoms push push sbb (bad) in add mov pop (bad) adc cmp or (bad) mov pop insb loope (bad) rex.WXB ljmp (bad) adc pop xchg stc xchg sbb and (bad) jbe cld adc rex.R pop xor sbb jne jp xlat jg cmpsb push xchg (bad) (bad) rex.X jmpq rex.RB fwait (bad) scas rex.RXB ss sbb stos lock mov fidivl push jb push cmpsb retq insl data16 sbb mov rcrl sti sbb or cmp adc xor fmul or (bad) jns hlt push rex.WX push out out je movsb pop (bad) (bad) lods (bad) jnp add fcompl rex (bad) mov xchg fistpl cmp xor jge ss (bad) (bad) hlt sbb movabs int fcomi in mov lock adc (bad) adc leaveq and cmpsl adc shlb adc fildll sub adc leaveq in rex.WR sub jnp retq ss or or push mov out mov movabs sub mov or cmp rorb vpextrd adc test adc mov (bad) pop ror out (bad) cmpsl jns pmulhuw and adc xor es adc lea out rex.WX mov (bad) adc mov (bad) xchg adc sub roll adc xchg xor stos adc push pop pushq adc push loope cltd adc rex.WX sbbl add and xchg (bad) cmp or mov sub movsb loop push adc xor pop in jae push shrd pushq movl enterq push push (bad) mov adc rex.RX movsl adc add ds sub mov test shrl stos rex.WXB cld scas adc mov test and clc mov (bad) push or fmuls cmp push pop stos loopne lods adc pop pop (bad) xchg jmpq clc mov sbb fmuls (bad) and loopne adc sbb (bad) loope (bad) pop jns push adc fsub and (bad) fs lret out insl pushq clc stos rex.XB movsb adc callq rcll or pop icebp lods xlat rex.XB rcr adc mov rex.WXB scas or hlt out adc mov scas cld gs test adc fld pop jbe rex.WRXB rex.XB test fcoml or pop fcmovbe adc in fdivrl mov pop mov cs imul in xor adc mov add mov xchg scas ss popfq adc movsl (bad) add ss adc push iret mov or (bad) (bad) rorb jnp test (bad) xor and cqto clc mov adc (bad) push fistp (bad) rex.WRB push sub out stos adc adc sub loope jo data16 push jae add rol in clc ss (bad) xlat js out xchg sbb adc (bad) movsb cld adc test gs data16 repnz pop (bad) cltd iret adc adcb and cmp (bad) lret movabs in cmpsb rex.RB sbb outsl movabs and add adc ss (bad) (bad) xchg adc out imul lret pop mov (bad) (bad) mov jge adc mov adc rex.W test fstpt xor fcoms mov addr32 mov mov scas sti sbb push (bad) clc cld insl mov xchg test cmpl stos mov rex.WB rex.WXB movslq adc jg jns negb adc cmp xchg sub (bad) pop rex.RXB (bad) ja (bad) (bad) (bad) pop popfq adc test mov mov retq adc xor xlat lock rclb adc mov jp cs mov mov mov sbb jb mov repz cmp (bad) mov lret adc xchg xor mov rcll icebp xor stos clc mov fs (bad) sti callq (bad) xchg imul mov (bad) adc push or adc fstps cltd (bad) out or xchg movabs lods mov fsts adc pushq int3 adc or or mov sbb adc sub sub notb (bad) loope pop rorq jl imul rex.X xchg movslq movsl add subl fs mov adc mov sub or or cmp rex.X rex.WXB leaveq ja vunpckhpd pushq out fs sub (bad) adc (bad) in pop adc and sbb adc rex.RB xor push fcoms jns xor or adc sbb mov data16 (bad) jbe mov xchg xor repnz ljmp jl mov (bad) adc test push lock cmpsl out cltd mov push jmpq xlat adc mov hlt outsb (bad) (bad) (bad) and lret ss add pop sbb cmp jbe rex.X xchg mov rclb and (bad) retq adc jge cmpsl in jl insl add fwait sub ljmp adc mov ds movabs cmp (bad) (bad) (bad) (bad) (bad) (bad) push adc lahf fidivrl adc cltd adc adcb fwait jmpq (bad) test jb cltd sbb mov outsb adc in mov ja retq lret cmp cmc add jo cmovle (bad) mov mov rex xchg sub or (bad) lea adc js movabs (bad) (bad) rolb movabs sbb cwtl lret (bad) mov mov (bad) mov or push xchg hlt mulb mov xchg scas adc push jge jnp and test adc insl add lret lret sub clc pop rex.RB in xlat xchg cld xor and xchg push pushq mov and jno push lods jmpq icebp pop jb push xchg (bad) rcll xchg rex.XB sti mov adc and (bad) out clc push imul callq (bad) pop sbb rex.WR pop imul cmp mov push mov cli callq xchg rex jmpq add (bad) pop or lret rex.R sub (bad) in (bad) xor cmc jl sbb scas push push (bad) add js sub adc (bad) jns mov (bad) push repnz jbe cld fs loop (bad) cmc or jmpq stc outsb rex.B cmp mov mov rex.XB (bad) (bad) jns test (bad) fsts rex.WR cmp clc xchg (bad) movslq rex.WX xchg sub rex.WRXB outsb jge fdivl mov or neg stos vhaddpd or adc push cmp jno xchg rex.RB or and orl movsl cmp (bad) gs fsubl fs adc (bad) (bad) lret push rcl rex.WB or sbb adcl (bad) adc mov (bad) xlat outsl mov movabs cs test and out add add add adc js adc push add adc or xor or mov or movabs stos adc jb clc lea rex.WRXB (bad) icebp adc or jns clc mov push or mov adc jne in push xor (bad) jp sub rex sub lret fstpt mov shl test xchg ja adc xchg lret rex.WX xor mov outsb adc xor cld or cltd cmp push ds rex.WRXB mov stos and xchg xlat rcrb mov in movsl adc add xchg test insl (bad) adc mov adc js xchg mov shr (bad) xor cld push push push lea lahf cwtl mov (bad) or in ss jmp and rex.RXB cmpsl jnp (bad) push adc repnz jb clc adc (bad) in pop adc sub cmp callq xlat fwait (bad) cmc (bad) std fisub rex.B (bad) notb movsb (bad) and int3 mov fistpll xor int push xchg repnz add mov xor xchg fcompl (bad) and scas adc jl movabs mov adc push jns adc clc jmpq mov outsb add cmpsl mov push vpxor fdiv sub jrcxz xor add or ja xchg sbb (bad) or mov push jns and push jae add sub jmpq rex.XB adc test sahf lret ja pop (bad) adc leaveq push stc imul mov fadds jnp out loope cmpsl test test xchg adc rex.R ss push or es lock (bad) or test pushfq push sub (bad) adc lods (bad) in adc stos fwait mov adc sbb (bad) jae push mov ja or (bad) mov mov cmc push fsubp adc sub push xchg (bad) pop loopne cmc (bad) adc (bad) jae (bad) (bad) mov (bad) notl xorb shrb adc xchg cmp ja (bad) jne cmp rex.RX and (bad) fldt rex.X (bad) and vunpckhpd (bad) fstl xor adc xchg mov add fdivl movabs (bad) rex.RB adc fs mov jns add adc test mov cmp (bad) xor rex.B test xlat rex.WX rcr push or sub test mov or sbb pop lock xchg mov movabs or (bad) movslq fistl retq and (bad) and sbb adc adc adc mov pop in adc add clc int3 adc xchg out pop adc in retq movsb movabs sub xchg movabs adc xor andl adc clc (bad) rex.WRB (bad) push movabs ja add (bad) mov and hlt jo sarb rex.R pop (bad) pop xchg test jns imul loopne (bad) (bad) cwtl (bad) xor adc sub (bad) sub out rex.W lods pop mov sbb pop (bad) cwtl outsl adc (bad) movsb stc popfq outsb sbb (bad) sahf lea js mov out lods cmp test mov cmp mov xchg (bad) add xchg je stos xor sbbl popfq cld (bad) push movslq xchg enterq adc mov movsb outsl lahf (bad) movabs insl jg rex.X scas jae jrcxz add lock and rolb in or je movabs retq (bad) cs xchg jmp in or mov push cwtl rex.B adc xor jb popfq or xchg mov jbe out clc lods cmp ds fdivl adc adc hlt adc (bad) js and (bad) ss mov (bad) adc roll lea xor (bad) cmpsl (bad) out cltd callq xor mov lods jbe adc (bad) jne cmp cld mov in cmpsl adc or mov xchg sbb and rex.WB (bad) fisub in mov adc retq sub adc or (bad) fcompl lea sbb lea rex.X int xchg rcr insb lea xchg rex.WRB cmp rex.X sub movabs pushq movhps add sbb lret or and (bad) rcll xchg adc (bad) xchg shl adc leaveq xor adc lea jl sbb gs xor cmp scas mov sbb rex.WRB (bad) and in adc xchg jmpq mov (bad) out (bad) (bad) jg,pn lret test cmp es (bad) mov movabs shrb xor pop lock (bad) callq stos add rex.XB nop rex.WRX mov scas mov (bad) jnp es retq adc adc (bad) adc jge xor (bad) lea outsl lret add (bad) or notw (bad) cmpsl xchg faddl fnstenv xchg fwait rex.R fcompl xchg (bad) lret movsl mov hlt adc clc mov cmc sub or rex.WRX xchg cmp adc mov push adc (bad) cmp callq rex.WRXB (bad) push or test testl xchg lahf (bad) jl push fldenv (bad) ss cld lret cmpsl mov test jnp push adc push mov in test shrb adc clc cli std rex.WRXB addr32 add cltd (bad) enterq movsb js mov cwtl sahf sub adc xchg mov movabs (bad) mov xor lock jmp push xor mov xor mov sbb fcoms or cwtl cmpsl add nop (bad) addr32 (bad) fcomp sbb sub rex.WRX xor scas fimull rex.WXB add xor xchg sub cmp push movsb xor movsl cmc (bad) imul insb out cwtl jnp adc xchg add sahf pop sub out or test in rex.WRXB mov es jo adc outsl mov cmp je adc rex.WRX loope int3 xchg outsb or pop in or mov sub mov or test rex.WXB pop jne add xor mov cmp push (bad) rcrb cmpl (bad) int scas rex.RX mov sub sbb fisubrl sub or mov jns out xlat sub jg xor or scas xchg push rcll rex.WR (bad) adc stos pop (bad) jb (bad) mov mov adc rcrl (bad) mov and fadds rex.R adc fdivrl xor jge (bad) cmp rex.W cs icebp sub adc mov paddb scas xlat insl rcll mov stc or lock mov out adc adc test adc (bad) pushfq cs and sbb out out push (bad) addr32 cltd clc (bad) movabs and rex.WB shll cmp jo (bad) mov pop mov lock rex.WB mov mov lea rex.WRX adcl adc mov rex.WRX xchg sbb adc (bad) sbb rex.X and cmc fisubrl out rex.RXB adc and mov xor (bad) push imul fstps (bad) stc (bad) (bad) sub retq adc add sbb or (bad) (bad) sub jmp add adc rex.WX pushq add data16 adc loop mov and (bad) stos add out rex.XB rex.WRX popfq (bad) bndldx clc mov xor hlt cmp gs rex.W orl (bad) xchg lahf cs (bad) (bad) (bad) sbb sub (bad) rcll adc lods mov mov int3 adc sahf push and adc sub push add mov lods adc jrcxz jl (bad) nop (bad) adc ss retq (bad) mov adc pushq adc mov cmp scas adc es mov adc leaveq xor gs adc scas rex.WR (bad) adc (bad) lret adc fcmovnb movsl (bad) adc lock movslq adc and pop stc lea es xor (bad) sub rex.W adc xorb mov add jge (bad) mov pushfq cmp jno mov lods rex.WXB movsb add mov sarl stos adc (bad) xlat sbb add sub or xchg out (bad) jne adc loope movabs sub adc xor or push insb cmp clc movsb and push xor jmp push push insb out adc flds and sarb lods (bad) fidivrl clc in pop xchg pop (bad) xchg cmc sub enterq mov push add mov adc xchg rex.B rex.WRB pop sbb adc lea xor cmc and rex.WR adc cwtl cmp adc (bad) adc push push mov adc push jl mov rex.XB jrcxz or jp iret retq lret mov jg ss sbb cmp xchg jrcxz add fcoml xchg sar jo (bad) mov mov adc test mov add and adc ds (bad) retq cmp adc mov out sysenter adc rex.WRB (bad) stos xlat and rex.X mov adc push pop rex.RB pop add push xchg (bad) movsb mov adc fldt cmp push and adc shlb jmpq (bad) cltd cmp adc lods test adc lock cmp out adc rcrb or test pop adc (bad) mov insl pushfq xor (bad) jb pushq pop or cmp pop sub and xor sti rex.WB repz pushfq push or adc (bad) mov xor mov jle adc es adc iret je and push pop test movslq sbb jl cwtl (bad) cmpsb in adc rex.WXB pop or out mov mov add imul stos adc callq jbe pushq jle cs adc jnp (bad) jno cmpl add (bad) xchg adc mov or enterq out movsl clc sbb rex.W rex.RXB sbb addr32 repz cmp jrcxz lret test pop enterq cmp adc fmull popfq adc (bad) nop adc adc movslq fwait adc xchg rex.R pop adc lret (bad) (bad) mov fcoml frstor jae ficom pop xchg mov cmpsb mov cmp cmp mov adc jge pop repnz rex.B js adc (bad) or leaveq adc mov movsb cwtl adc mov lahf nop sub mov cli adc sbb stc retq adc push pop add adc xor push add imul rex.WX addr32 cltd (bad) (bad) mov (bad) sub sub pushfq (bad) (bad) callq mov jp add sbb xlat adc movsb jno fstpl lret (bad) push stos mov lea or xchg jmpq or xchg pop (bad) mov repz je mov sbb jne pop jb lods loope movabs outsb adc mov rex.WR xor (bad) jo ficompl vunpckhps (bad) xor sub movabs or adc (bad) imul xor fcoml test (bad) mov adc and add loop vunpckhpd ds xchg insl or adc outsb out xor push mov xor sub rex.RXB lock stos adc rex.WR rex.R xchg fisttp jb jnp add (bad) jp adc lea (bad) (bad) out adc fsub sbb lock push adc adc mov (bad) adc (bad) jo sub xor pop sub pop (bad) (bad) rex.WR jmpq sbb push fdivl jrcxz test jg xchg add or adc (bad) (bad) pop imul andl mov rex.WXB hlt xlat (bad) (bad) test in enterq and sbb push jmpq loop cmp ss sub mov xchg adc sahf movsl and or xchg (bad) cli mov xchg imul xchg mov mov leaveq cmpsl outsl rex.WX (bad) (bad) xor (bad) out adc adc xchg icebp (bad) cmp mov (bad) ja xchg push adc pop push jnp adc add fist (bad) shrl rex.RXB sub xor push cmc rex.WX or icebp pop out mov movsb callq in cld adc rorl adc xchg add (bad) ficom loop emms (bad) cmpsl adc and and lods mov repnz and cmp cmc push jno (bad) and (bad) clc leaveq pop movabs fisubrl pushfq scas (bad) adc adc test addr32 cmpl mov rex.WXB ss sahf (bad) in adc repz rex.WXB (bad) adc notb xorb xchg jne (bad) ja scas retq sbb rorb push adc add xchg xor sbb rex.W (bad) jno jne push adc sub jrcxz jnp imul pop fdivl stc data16 cmp cwtl add sahf adc lock adc pop push xchg stc sbb (bad) mov sahf (bad) sub fsubrl adc pop rex.R rex and lock (bad) lods scas cli sub cmp rex.X pop (bad) mov jae jne or test lods pop (bad) or ja sub ds icebp pushfq jno test rcr rex.WB sub movabs fidivr rex.WRX adc retq or cli rex.WXB mov rcll icebp sbb cwtl sbb fcoms jle cmc cmpsb or (bad) xor cmp (bad) adc or mov pop vsqrtsd rcrb adc sbb and pop add imul in leaveq xchg or movabs adc and out (bad) data16 nop rex.X movsb rex.RXB jl (bad) int3 sub retq pop adc mov or or stos nop (bad) sub adc push jmp jns repz (bad) pop gs rex.WRX shr (bad) lea ja sub adc outsb xor add (bad) mov xchg sbb add (bad) jle stc rcrl mov (bad) divb loope (bad) fildl sub cmpsb rex.WRXB xchg outsl enterq retq adc outsb xor (bad) movabs add (bad) stos add int xor loop mov notl rex.WB sbb jge sbb repz rex.WX pushfq or test add jl lret xorl add ja fdivrl sbb lods add (bad) icebp push je adc (bad) jo push adc add mov adc ds (bad) adc xor loope fmul jae and clc sbb callq push insb (bad) sub ficoml fstpt es sub lock mov clc stos xor xchg (bad) leaveq rex.X notb xchg xchg orb icebp and sbb adc jl xor movslq pushq xor std fisub adc rex.WRXB (bad) rex.WXB test insl (bad) adc rex adc rex.RB rex.XB adc jmpq (bad) jo xor rex.WB adc (bad) or adc mov push adc xor xchg out xchg cmp adc adc cmpsl mov int3 push outsb rex.WXB rex.R cltd (bad) fnstenv pop rex.WRB retq lahf add adc add or insb mov mull push int xchg fdivrl (bad) fnop jns gs fadds mov adc (bad) adc fucomp cmc xor jmpq cmp (bad) pop (bad) cmc mov rex.WXB loope pop rclb add adc jnp adc fisttpll lea insl jbe mov xchg sbbl (bad) add out repnz frstor enterq lret adc insb push cmp add mov int3 rolb in jl (bad) xor rex.WRXB adc adcl adc jle jnp adc jl xchg add jo (bad) add rcl adc cwtl divl sbb sbb (bad) mov mov adc rex.B (bad) fdivr icebp repz rex.RXB sub gs adc test pop or test movabs pop cmp or adc rex.XB (bad) pushfq faddl cmpsl xchg sbb sahf xor test (bad) gs (bad) push mov xchg in in js xor sub adc sub xchg rex.WRB sub (bad) fdivrs xor (bad) rex.WX clc retq rex.WRXB hlt lret xor (bad) (bad) ljmp cmp and sub cli lea push push xchg sahf rex adc ja test repz movabs (bad) imul jne (bad) movsb enterq cmp fimull sbb movabs mov int (bad) loopne push in jns push mov mov sbb addr32 xchg adc jne (bad) callq and mov xchg xchg (bad) movabs jp push adc add movabs mov (bad) icebp adc jle cs scas lea lock adc hlt mov mov pop rex stc fs adc xchg adc addr32 push cmp ja xchg push repnz lods adc push push xor movabs adc (bad) enterq pop cmpsl jp rex.RXB cmp sub es sbb ficomp rex.X or test testb (bad) subb not and adc rex.X add mov and rex.R je out and stos rolb mov (bad) rex.RB xchg adc or pop adc xchg repz fcom sbb sbb and pop rex.X and and rex.WXB icebp adc addl adc push fadds cwtl std and lods xchg pop ja fcoms xchg xor adc mov xor out frstor adc jl mov (bad) or pop (bad) clc (bad) (bad) jle (bad) fcoml or mov adc xchg movsb cld rex fwait adc (bad) adc xchg jno (bad) adc pop sub rex.W cmp cmp sbb push adc mov xchg adc gs lret jle and ror shrl in rex.WB (bad) adc mov out sub nop (bad) (bad) jmp push (bad) push sub scas xor sbb (bad) clc test mov sbb cmp and sub fsubrs js xchg pop or in (bad) (bad) jge test in callq shrb jno adc mov enterq pop jns jl std mov sub test push (bad) jno jbe (bad) jne xchg stos rex.WXB xchg (bad) push cmp loopne cli (bad) sbb rex.R cmp clc cwtl leaveq or mov (bad) adc (bad) imul sub lret rex.RXB repnz rex.XB ds rcrb sbb and or jbe push out rex.WRXB rex.X imul adc ja nop mov lret lods retq (bad) push sbb adc pop xchg (bad) and pushfq jp icebp (bad) sarl adc out lret js sub ja xchg xchg mov (bad) sub mov rex.XB adc or movabs (bad) loope lock (bad) sub xchg push adc mov push or insb fs jae xchg xor and icebp clc nop imul pop xchg lock jbe or repz fcoml sbb fiaddl rex.W push xorb add jge jae movabs lock xor adc adc xchg (bad) (bad) or add and hlt jno mov or xor sub mov mov cmpsb cmp lods out hlt clc adc scas (bad) fisttpll add callq je mov iret (bad) push insb mov fidivl out mov test sbb mov out mov data16 rex.WRXB mov add mov rcrb (bad) mov lock in rex.W rex.WRX sub rex.WRXB xchg jbe int3 test movsb adc xchg mov (bad) loope xor adc cltd iret movabs rex.WX push (bad) jg adc jl divb adc sbb jmpq xor out push insb insl fcomp xchg adc js sbb sub movsl callq push jl adc add loope adc jp or adc xor jnp adc sub or rex.W decl (bad) jg lahf callq adc xchg or jrcxz add push lods mov and or and mov adc cmc sub add icebp unpckhps (bad) stos adc jl xor ss pop lahf insb rex.XB in or push stos movsl popfq (bad) adc push xchg add add mov cmp test cltd mov or mov in push adc movb push adc in xchg stc xor sbb xor ficompl pushq xchg rex.WXB rex.WX mov and (bad) xor out xor adc rex.RB mov adc (bad) ss and mov xor mov movabs xchg scas nop add cmpsl sarb hlt (bad) sub add addr32 push adc roll (bad) xor and jp rex.W ficoml or cmp sbb outsb rex.WB pop mov cwtl mov (bad) xchg adc rex.WXB movabs pop adc adc stos jl mov (bad) or jge mov adc cmp fnstenv (bad) imull adc (bad) pop rcr test adc sbbl mov in adc mov (bad) xchg fmuls mov (bad) rex.WB rex.RX jl cmp jo xlat (bad) ss jp fisubr retq xchg lret fdivr adc mov (bad) xchg adc mov lahf (bad) adc sub xorb hlt (bad) push pushfq mov test adc sti add popfq jae fildll adc pop add mov stos mov rcr adc (bad) lret adc fidivrl adc fstps sti out adc test mov callq or cmpsl cmc sbb adc lahf fisubr mov or add retq cmpsl (bad) push jno mov (bad) xchg idiv mov (bad) or xchg sbb ja adc xor faddl sub or jmp (bad) (bad) lods cmp adc rex.RXB es cmp add and loope fucom push mov xchg adc add xor jg lea in mov (bad) movsb pop adc mov push imul js rex.XB xchg std test adc pop jl xchg cmp jbe add pop out fdivr movabs pushfq xchg clc adc out jbe jle (bad) push cld or roll and push adc (bad) cmp outsb xor jp (bad) mov lret adc xchg cmp movabs add or adc ss adc sbb fs (bad) rex.WRB adc mov ror xchg jnp cltd (bad) push xchg outsb adc sbb adc cmp gs faddl sub sbb fsubrl push pop fcoms (bad) pop jmpq in stos pushfq rorl xor and (bad) mov rex.WRX (bad) adc sub xor sarl push jrcxz mov cwtl rex.WR adc cs rex.WRXB divl frstor adc jno xchg movsb adc stos and in push mov outsb pushq sbb cmp int sub adc test pushq insl stc fmul iret js callq xorb lods jmp fucomip movabs cli out xor adc adc xchg push callq adc pushq push mov mov fwait andl mov rex.WXB (bad) xchg add mov and test cmpsl xchg fist (bad) lahf ds lods retq jo pop stc xor lods rex.WB jb rex.W mov retq pop mov jae or vpsubsb pop rex.RXB adc cmpsl icebp rex.RXB fdivl jg xchg sub mov jne int3 retq (bad) jb cmp in and add adc jnp clc shr stc rex.WRXB (bad) (bad) fadd fcoms mov stc add mov rclb pushfq adc cld adc jl mov pushq xchg (bad) stos stos rex.WRX adc push (bad) shrb add lock in push es pop (bad) (bad) pushfq fucomip adc jle addl sbb int notl sti pushfq pop xchg test sub push xlat adc (bad) loope xchg adc stc cmp fistl (bad) xor cmp rex.WB adc divb lret (bad) sbb rex fs in (bad) (bad) lret (bad) xchg (bad) ds (bad) mov icebp rex.X repnz adc cli mov adc je mov adc pushq rclb mov cmp rex.WX adc sub xchg push nop lahf movsb adc pop xchg adc mov movabs (bad) idiv or sbb or xchg and int adc xchg movabs ja xchg clc lahf rex.WX rex.R loopne mov rex.B hlt stos (bad) sub cwtl (bad) std sbb out stc rcrl and (bad) fdivrs push and xlat jo pop xchg push cmpsl cmp or push sbb (bad) cmp xor and lea adc callq pop cmp mov and rex.WB rcll push mov rex.WRXB lock rex.WXB adc xor sti ficompl cmc (bad) movslq fsub es jp adc rex.RX hlt mov std lret sbb adc mov jl push mov movabs push imul xchg movabs clc (bad) xchg lret cld mov in xchg mov rex.B iret pop or or repnz pop mov xor and (bad) adc mov xchg xchg push mov loop fdivrl cltd fsubp pop (bad) addr32 cld adc imul adc jmp je (bad) gs jge (bad) adc cs sahf adc pop callq adc mov testb int3 push enterw push adc (bad) cmp push sub cmpsl rex.WRB push adc (bad) xor pushq adc adcl jp fwait neg cmp (bad) xor xchg movsl or rcrb rex.WRB (bad) (bad) (bad) fidiv lret rex.WR repnz leaveq and cmpsl stc js cmpsb add xlat or xchg xchg idivb stos lods clc add pop (bad) sub pslld xchg gs adc xor ljmp adc or pop mov (bad) rorl test (bad) in (bad) fsubrl push pushfq popfq (bad) pop pushfq jne pop ljmp (bad) cmp (bad) je adc adc add and jnp clc test (bad) jmpq xchg enterq pushq sti je ffreep xchg and adc (bad) add data16 add movsb rex.W or jb (bad) lret (bad) mov sti adc push cmp jp (bad) retq out adc adc rex.WRXB xor rex.XB scas xor fdiv mov (bad) or retq xor rex.WRB xchg or divl sub pop rex.WRXB push jno push jbe in rex.WXB rex.WRB rex.RXB pop add (bad) test cld rolb sub ds rex.RXB (bad) xchg insl ficom rex.WB (bad) or cmp rex.RX add mov adc rex.RXB cld xchg cwtl and mov adc and or (bad) or int out (bad) mov callq adc jb mov (bad) rex.XB fs cmp xchg xchg (bad) clc sti (bad) rex.WRX enterq or lods mov mov cmp (bad) out rex.X mov adc mov lock rclb (bad) adc hlt add (bad) adc (bad) retq xor movabs (bad) xor rex.WR (bad) lods (bad) jno push lea mov xor sub xchg mov gs sbb rex.WRX cmp mov repnz lock (bad) clc (bad) test stos push sub adc rex.WRB out gs cmp pop adc jge clc cmp cmp (bad) (bad) adc fbstp mov (bad) adc insl (bad) lret (bad) fsubr rex.R pop adc sbb xchg jne mov repz ss imul jg pop mov (bad) xchg or cmp test fdivs cmp cwtl adc add movsl adc xchg (bad) (bad) push pop mov jle jo push (bad) or jmpq xor or (bad) loopne xchg rex.WR (bad) sbb outsb ss rex.WRX xchg subl jno fist cli (bad) adc (bad) or clc pop sub sti adc rex fidivr mov insl add rex.W popfq (bad) fsub mov mov and sbb insb adc std or mov sbb pop pop ss mov rex.RX rclb jge xor clc pop jmp scas jmpq test mov clc loope sti jle outsl cltd xchg or (bad) notl jle clc (bad) repz cmp push (bad) mov jge push mov jle js sbb sbb (bad) sbb push xchg cmp int adc mov mov js lock movups and (bad) or jg push sbb outsb sbb (bad) sbb xor jnp movslq (bad) or sbb sbb xchg repz int3 (bad) stc push cmpsl adc fwait push pop negb and jrcxz push lods add xchg and cmp (bad) push jno (bad) jp (bad) xlat (bad) adc jl (bad) mov gs callq fmuls add jnp movslq jo cwtl ss nop and hlt std adc lret pop xchg cs xchg adc js xor hlt mov mov retq pop rex.RB add adc repz or push pop ss or insl nop mov rex.WRX movsb push and push mov sub mov and cmp sub shll (bad) (bad) rex xchg (bad) in insb xchg mov rex.WRX pop rex.WRB adc (bad) lahf jmpq hlt movsb jo push and retq push xchg (bad) mov movsl xchg fmuls xor mov push pop fcoml lock adc fwait and mov icebp loop sbb jrcxz stc clc pxor (bad) repz (bad) ja int xor xchg adc mov popq sbb pop adc out js movslq stc mov (bad) fs rex.WRXB leaveq adc fnstsw or sbb (bad) adc scas fsubr callq xchg cmp callq adc jle test adc adc push adc adc sbb or adc idivb (bad) callq or lock (bad) sti push adc mov sub adc rex.WX gs fwait jge mov sbb and ss (bad) jmpq xor mov mov push retq lea xchg adc cwtl add (bad) cmp adc paddsb sbb mov rex.R mov rex.WXB mov adc stc adc (bad) insb sub negb xor push stos mov and mov or pop addl movslq push fsubl imul neg mov retq adc (bad) je hlt adc jne retq movsb or gs loope adc fildl (bad) insb (bad) adc cwtl rex.RB repz stos or in adc adc (bad) mov cmpl adc xchg (bad) mov mov adc sub (bad) adc or ds and adc movabs movabs loope neg adc add pop int xchg (bad) test mov scas lret mov movl jns jno add cmpsb rex.X cltd fmuls sbb jo stos movabs out (bad) cmp fdivrs out pop xchg sbb (bad) add lods outsb iret insl adc push mov and adc lret popfq adc (bad) push rex.RB adc add xchg cli adc rex.RXB out or rex rex.WR rex.B rex.WRB adc shlb pop adc rcrl frstor xchg sub pushq (bad) or (bad) cmp (bad) adc adc (bad) faddl mov sbb sbb scas xor (bad) mov in adc push pop sahf adc test push lods sub mov addb repnz (bad) adc rex.XB mov rex.WRX xlat (bad) cmp sub push (bad) sbb out fmul lret (bad) xor pop insb (bad) mov retq hlt adc (bad) sbb (bad) xchg fnop mov clc ljmp xor and in adc mul and int3 mov pop clc sub adc xchg jb and sbbl xor ss int3 adc (bad) (bad) mov stos mov adc xchg adc adc in test xor xor jg adc mov int3 add cmp xchg cld insl xchg adc fmull movsl sbb pop sbb cmpl adc push add (bad) (bad) adc cld sub (bad) adc rex.WRXB (bad) lods or scas push sub adc mov jrcxz retq movabs mov jo and mov cwtl jns xbeginq push jle sbb cmp jge (bad) xor or push mov rex.WRX adc (bad) test rex.XB and retq fwait jmpq cmpsl cltd cmp movabs pushq xor (bad) mov and (bad) rex.WRB and adc xchg (bad) cmp adc xor push frstor (bad) mov adc rex.WRB sub pop mov pop push mov rcrl fmull or push pop mov xlat imul pop xchg cmp push push test xchg xor adc cmp adc xchg fwait lahf cmpsl (bad) es ds adc jl lret cmc (bad) adc jb adc jl push xlat or adc jp adc or in adc sbb in xlat xchg jmpq add sbb movabs (bad) fsub push (bad) (bad) xorb fcomp sbb mov xchg movabs test pop jle imul adc mov jp cmpl xor mov adc gs push jo mov ffreep (bad) adc push lret pushfq (bad) xor lods sbb fdivrs (bad) repnz unpckhps (bad) pop iret fmul lea cmp mov retq sbb clc lock adc adc rex.X xor adc insb and fisubr add push cmpsl mov jl adc jae mov rex.WR callq cmpl (bad) adc and (bad) or rex.WB test cmp add push xor or xchg fbld sti jb sub adc or mov loopne add clc in movabs or or push mov mov lock adc movsl fs cmp adc (bad) out adc xchg add (bad) cmp rex.WX xchg (bad) cli (bad) add or pushq xchg rex es je notb and ss lahf int or sbb adc cmp stos js (bad) and sub iret (bad) lods cmovg (bad) adc ss adc adc jns add pushfq mov cmp fmull movabs loopne sbb adc out ds adc xchg push (bad) test jns test or lods rcll pop (bad) insb lock in (bad) mov adc xchg (bad) adcl (bad) mov pop loopne (bad) rex.RXB fmul pop adc mov addr32 push jnp sub fdivrs movabs sbb (bad) jmpq cmp cli cmp retq xchg std add stos loope cld and adc adc pop adc shrl adc lret cmpsl std movslq add ss rex.RX or in imul lahf sarl es add mov or (bad) adc add rol cwtl add movabs xor push movabs rex sub push push adc adc fnstsw xchg test (bad) retq (bad) movabs or sbb retq retq imul or adc push js cmc mov repz mov xorl lret sbb rex.WR and movabs sti outsl in scas ficompl leaveq jg es movlps adc xchg js cwtl or in cmp adc xchg movabs xor (bad) pop rex.WB mov (bad) cmp insl pop jnp (bad) fdivr cld movsl (bad) adc rex.WX jl retq xor (bad) shrb adc add iret pop insl out mov (bad) repnz gs push jmpq hlt data16 (bad) or (bad) mov rex.WX cmp mov or rex.WB xor data16 adc insb add pslld adc (bad) in adc mov jle je push adc xchg rex.X lock sub jne (bad) adc pop (bad) adc adc jns nop jno xchg xor or shll fdivrs lock rex (bad) cmp add push xchg mov jno (bad) (bad) adc loope xchg adc xor outsl jbe adc pushfq adc test adc ss out enterq fwait xlat sub adc int movsb xor adc (bad) icebp and add out rex.WX adc (bad) mov xchg out std rex.WB jge mov jmpq adc adc (bad) sarb xchg enterq movsb movsb jns or (bad) (bad) ja test mov retq shlb mov adc mov adc retq xchg xchg and repnz cmp xor mov imul rex.WRX add rex.WX scas test adc mov adc jo sub adc xchg rex.RXB es movsb nop mov in sub (bad) add rex.XB jle adc pop and scas adc pushq push mov add rclb rex.B and add mov xchg adc out adc mov rex.WRX cmp movabs popfq insl (bad) adc pop mov xor pushfq adc sbb test jae sub adc jb jle or (bad) ss mov adc sub xlat jo sub add rex.B jno adc rex.W adc rex.WRX fdivs pop jae mov pop xchg rex.R (bad) mov and (bad) ffree cwtl adc roll xlat decb (bad) icebp sbb jg add movabs push out int3 xchg xchg adc (bad) sub adc mov outsl movslq jmpq (bad) cmpsl icebp mov xor mov or repnz adc or mov movsb orl rex.WRB sti xchg sub rex.RXB xchg pop adc push test or movsl movsb (bad) add xor jg fwait mov enterq push mov fadds mov cmp rex.WR lock sti jne jrcxz jg mov sub (bad) je repnz push jo adc add mov sbb (bad) xlat mov scas adc cs gs jne mov pushfq (bad) stc sub mov xlat adc xor mov roll xor pop mov jne retq xor adc gs pshufw fwait rex.B sub retq (bad) flds (bad) jl out (bad) rex rex.RB rex.RX (bad) unpckhps rex.B test stos (bad) adc pop lret (bad) movsb adc test or movabs and add enterq add xchg pop (bad) fstpt xchg adc or in xchg adc fwait jno jp jmpq (bad) sub movslq mov fcoms (bad) shlb sahf xor push or (bad) xchg loope jno pop (bad) movabs (bad) xor adc sbb retq es mov sbb lock loop (bad) (bad) fistp xchg (bad) (bad) add lock cmp (bad) adc mov or lods sbb or push (bad) cmp out xchg jns rex.X subb fsubr jmp xchg loope jnp cwtl mov jno mov (bad) (bad) adc lret adc adc xor sub adc lods xchg outsl (bad) lock xchg xchg add insb (bad) fidivrl sbb divb (bad) rex.WB rex.XB fcoml adc rex.WR mov (bad) adc (bad) push rex rex.WXB adc mov (bad) out adc adc adc cs outsb adc cmp push movabs scas mov scas xchg fnstenv lret in mov ficomp xor cmp (bad) mov jp mov (bad) adc pop xchg sbb out rcll (bad) clc cmc (bad) push adc lock out test mov faddl pushq (bad) adc pushfq stc mov sub mov vunpckhps cmc jbe (bad) scas cmp in jnp in mov mov (bad) (bad) cwtl jae lods adc lahf fdiv cld adc retq hlt sahf in xchg repnz cmp adc xor cmpsb test mov callq xchg adc rol movsl iret adc movslq push (bad) jl movabs sub lea rex.X mov push test repnz adc loope adc (bad) rex.R sahf lret cmp or cwtl jge fcmovnu (bad) adc (bad) int3 mov jmpq (bad) sub adc adc rex.WX (bad) jle hlt ficoml notb icebp and enterq adc sbb fdiv mov xor hlt ss adc mov cmp in jg callq adc jno icebp lea rex.RX std mov rex.WB or xlat adc cmp add adc (bad) cmp callq fcomps movabs clc pushfq rex.WXB rex.WRX rorb push adc jo xlat (bad) xchg (bad) adc mov jp jae (bad) xor outsb adc retq sbb mov sbb cmp rcr jl rex.WRB fnstenv outsl or (bad) jrcxz neg stc cmpsb cmp loop fimull and (bad) vsubps adc rcll std lods cmp (bad) popfq jmp jnp movabs movsl jbe cli jl pop add adc mov pushfq int leaveq decb (bad) (bad) and or mov rex.RXB fisubr (bad) xchg cmp lock xor (bad) adc adc xchg jp retq sbb adc vfnmsub132ps (bad) scas rcrl jle fsts (bad) (bad) (bad) (bad) clc in (bad) test (bad) clc xor mov jno sbbb rex.R (bad) mov pushfq adc imul cmp (bad) sbb cmp cltd add movsb insb jbe lock in (bad) andps pop (bad) jmp (bad) cwtl adc int (bad) cmc cmpsb xor sbb cli xchg insb jae sub or xchg lret (bad) rex.WX or hlt push mov fistl movabs add adc mov fcom (bad) rex.RXB mov xor add pop adc sbb rex.RX rex.WRXB rex.RXB or (bad) jle movabs repz jbe adc sti xchg pop rcll and callq and mov cmp mov adc rex.X adc jrcxz out add push ss jg andl (bad) adc xchg and sahf rclb adc (bad) mov (bad) jg gs pop stos rex.X shrb mov and and ja loope adc cld push jae test mov cli pushq xchg cmp or mulb add lods (bad) (bad) rex.R adc rex.RX mov retq (bad) rex.RXB shrb sub jne rex.WR pop jnp test and hlt (bad) sbb mov pop sbb nop jp insl mov adc mov (bad) jb scas push sbb pop jno adc test cmpl sub repz xchg fistl pop xchg int3 movabs cmp xchg fdivrl mov adc cmp (bad) leaveq sub adc adc pushfq add adc push adc (bad) (bad) mov adc sub js adc rex.WXB sbb add and (bad) (bad) mov in test jns callq (bad) adc pop js icebp adc pushfq out cmp xchg jg and adc fildll adc (bad) (bad) xchg (bad) jae mov test test lock adc or mov rex.B pop in cwtl or (bad) pop jns xchg (bad) xchg xchg adc adc adc mov in sbbl push xchg adc popfq (bad) xchg cli pop (bad) adc mov cltd sbb mov or imulb cmp stc add out and (bad) fist xchg nop mov adc pop jle movsl rex.RXB movabs rex.WX (bad) mov push cli lahf push cmc ja imul (bad) cmp cmp lods mov adc add push cmpsl xchg imul jnp leaveq rex.R repz and gs shl (bad) (bad) jns imul adc incb retq mov adc push adc rolb jrcxz sub movsb lret (bad) hlt pop (bad) xchg sub (bad) xchg xor pushfq adc fstl adc push (bad) mov push adc jrcxz lods or rex.WRX lea push xchg adc repz clc rcrl mov xchg pop adc iret adc fdivrl adc out sub xchg mov rex.XB (bad) (bad) cmp xorl fwait (bad) mov cld (bad) xor rex.WX or mov adc in adc adc or or rex.WRX (bad) jg push (bad) clc jno sbb xchg test xor lret rex.RX jno (bad) sub push movsl (bad) pop mov xchg xchg add outsl mov adcb (bad) mov rex.WB fnstenv jne icebp sahf (bad) cld insb adc sarb adc repz cmpsl or (bad) jnp adc rolb clc stos fsin out push mov mov (bad) rex push pop rex.R xor rex.WRXB or sbb push (bad) stos xor int3 xchg pop jge or adc (bad) adc ds in stos fdivl (bad) jrcxz not mov mov sti adc sbb adc jns cmp adc adc shl adc leaveq movsl (bad) adc sub scas imul addr32 xor in (bad) rex.RB cmpsl xchg adc test adc callq or ds (bad) mov je hlt jge (bad) mov (bad) fsts jne jo rclb xor xchg clc xor push ficomp adc push adc push lahf adc jnp enterq adc cmpsb xor gs or mov add adc xchg fild or cmpsl sub test je sub (bad) adc mov xchg and movabs shlb callq adc fcoml repz lahf jle xchg jge adc or (bad) lret rex.WRXB jo mov xor je cmp insb sbb or (bad) xor (bad) rex.WXB pop loope fcoml rex.WX (bad) je pop cld lea or mov xchg (bad) icebp jb xchg rex.WXB rex.R (bad) adc fwait loopne popfq adc (bad) insb lock out mov xchg enterq adcl cli pop andl push (bad) xor rex.RB cmp out lret adc (bad) pushq rex.RX push rex.R addr32 push and push adc or sub loop push add jg cs push (bad) mov (bad) jmpq bnd pop notb pop outsb (bad) push adc mov callq (bad) adc mov xchg callq (bad) ss adc add rex.WRXB adc pop rex.WR rex.WRXB rex.WRXB mov mov test jge subl fldenv iret xchg (bad) rex.WX pop xchg imul movabs adc adc xlat adc jae cmp xor xor retq add push (bad) mov (bad) jle cwtl adc xchg lock hlt sbb (bad) es lret xlat rex.WR adc (bad) xchg adc (bad) xor cmpsl (bad) cltd jnp mov ss or rex.WRX pop (bad) add (bad) adc fmull push jnp push (bad) rorl adc (bad) (bad) mov adc jp sti add je (bad) push adc jo loopne addl (bad) (bad) adc mov sbb (bad) sub pushfq and mov data16 ficoml insb rex.RB add jg or mov mov ja xchg repz jb adc sarb sbb add (bad) rex.WRX gs jg clc add mov xchg cmp popq xchg adc mov std cld (bad) shll (bad) xchg xor (bad) adc sbb cmp insb sub cmp rex.WRB (bad) sbbl movsb in mov jle (bad) adc (bad) or out fisub xor fsubrs jb jp xchg adc (bad) outsb fstl adc imul iret (bad) adc repz cmp adc test adc sub leaveq sub cmp sbb push (bad) lods mov (bad) (bad) insb xchg mov fdecstp jmpq push pop jne rex.WB sub cmc push sub (bad) outsb loop or pop movslq rex.RXB adc and out retq popfq scas adc (bad) out mov adc add jno rex.XB (bad) rex.WXB xlat fiadd test sbb rex.X adc mov test xor movabs rex.WRB sti and repnz pushq push xorb rex.XB lock incb sbb (bad) clc (bad) int3 (bad) cmp (bad) xchg adc addr32 jns adc out in pop mov adc mov xchg (bad) (bad) lret jmp (bad) xchg rex.WRB add rex.WRB sub adc int3 jge rex.WR sarb xchg roll pop (bad) adc adc pop loope cwtl xchg shrl fcoms sbb push fildll cmp stos xchg (bad) jge repz adc retq fwait adc xchg jb and or (bad) (bad) jns mov adc sbb rex.WB mov adc lods rcrb mov jnp outsb mov add sub popfq (bad) popfq (bad) sub push mov xchg sarb rex.RB clc rex.WRX xor xchg callq (bad) pop jae jg lret adc je lea cmp or sbb out xor jl fstps (bad) cltd fldenv adc mov jbe adc je test push add adc mov push rcr sub mov mov adc ds pop movabs jle (bad) movsb lahf lods push (bad) cmc (bad) rex.XB rex.RX add ja imul or (bad) sub ja jrcxz pop sti pop sub (bad) enterq add test enterq (bad) xor jns leaveq and (bad) fdivrl adc jbe rex rex.W xchg mov and adc push out cld lods xlat (bad) pop xchg (bad) jne (bad) adc or rex.WB jne rex.WX vrsqrtps jno (bad) add sbb xor rex.RB callq (bad) fldt movabs (bad) test sbb adc ja insb fstp (bad) and retq pushq roll mov cli (bad) adc enterq add push rex.RXB stc test adc xor rex.WX adc xor insb adc add mov rex.WRXB xlat cltd rex.RB cs rex.B jno or and pop (bad) fistl cwtl adc pushq adc pop (bad) jo cmp mov rep insb imul retq iret mov sbb push (bad) movabs mov adc jl pushq retq (bad) movl loope pushfq hlt adc adc retq and cltd sbb adc xchg adc adc fdivrs (bad) ror sbb sbb scas sub cmp pop out (bad) cmp jnp lods jb cwtl jno mov (bad) mov jmp adc or push mov movsl gs adc data16 rex.WRX mov and lahf clc fstpt (bad) (bad) (bad) adc rex.X movb adc push rex.WRX cli test sbb imul sbb sbb or addr32 push mov mov out fiadd cmp xlat cmp rex.WR in or nop xor xorb popfq adc jns jbe rex.RXB sbb pop push xchg adc adc stos sbb cmp je adc mov mov (bad) rex lret adc xlat or push and rex.RXB repz adc jne iret outsl clc in int fs movslq lahf adc mov mov sbb push adcl xlat adc adc pop cmp sub (bad) adc movabs xor mov xchg out pushfq fldl jmpq xor mov pop adc rex.WRX rex.RX (bad) ds in fs adc adc add (bad) (bad) callq stos jne jge pop mov push rex.WRB (bad) ljmp or sbb mov cld (bad) movslq sbb pop (bad) xor or adc adc out cmp es rex.XB callq adc fidiv mov jg mov adc cmp roll sbb decb movabs mov adc rex.WRB (bad) adc and sub mov adc (bad) ds (bad) callq mov mov rex.WXB es lea (bad) mov mov js (bad) jne loopne (bad) add out pushq (bad) stos or subl out or cld or fcoml fbld movsb (bad) xchg lods or adc lret rex.R loope or pop (bad) retq stos sub adc repnz scas mov add lretq fsubrs mov sbb and rex.WB mov rex.RX rex.WRX rex.R xchg jrcxz or data16 outsl (bad) mov (bad) sub adc or jb stc pop xchg (bad) xchg pushq or sbb movabs sub out fwait adc sarl mov js imul leaveq adc data16 lock sub ss movabs push mov xor sbb rex.RB imul jns adc leaveq stos (bad) adc push mov test (bad) movabs mov rex.WXB loope test xchg adc rex.WR adc outsl adc (bad) mov outsb fildll adc or pushq rex.RXB test xor shll add sbb cltd sub jae cmpsl movabs test adc mov adc ss push cmpsb mov movsb ljmp movabs adc rex.X leaveq jnp test jno (bad) xchg mov movabs or jle (bad) (bad) movabs xor (bad) pop rex.RXB sub in repz (bad) jle jns (bad) mov std int3 loop fisttp cmpb and adc rex.WXB mov rex.X mov adc rex.RB movsb stos adc pop xchg lret test mov xlat push adc mov or cmpsb adc adc sbbl push adc rex.X pushfq adc and push (bad) movslq (bad) sarl (bad) pop adc sbb cmpsl movsb mov icebp cwtl and adcb test mov adc rex.XB sbb fbstp push movabs rex.R push fs xor pop sub rex.RXB adc repz sbb fsubrl cmp push (bad) xchg xor jno adc or (bad) cmpsl pop (bad) icebp jno test mov sub jno xchg mov add insb rex.WXB (bad) fnstcw xchg (bad) mov sbb cmp fsubs iret cmp or (bad) mov adc (bad) (bad) adc (bad) push adc rex or loop mov cltd and mov jo mov sub pushfq (bad) push adc sbb and mov jrcxz subl push adc fiadd rex.WRX iret xchg imul push jnp test lret sub add outsl adc es (bad) xchg adc (bad) (bad) clc xor and adc jbe out cmpsl shlb (bad) jns mov pop (bad) and or mov outsl ficoml sarb jmp cmp mov or mov push (bad) mov fwait (bad) fs cli stos jp add sbb or (bad) mov push adc rex.X out outsb or mov nop xchg retq sbbl out ss xchg shll xor mov fcomp jg mov int3 fstl or adc rex.RB add (bad) jmp (bad) adc cwtl adc out rcl repz fwait adc cmp xor (bad) retq mov adc mov or adcb hlt adc cmp xor std and repz pop mov adc xor xor (bad) or retq and rex.WXB adc psraw sbb adc xchg sub not ficom push iret fnsave push adc cwtl mov rex.WRXB rex.WR rex.RX outsb xchg in push sbb or (bad) mov or xchg imul pop js adc xor xchg adc pop out pushq icebp stos test adc adc adc test or cmp cmove (bad) mov cmc lods xchg jno out adc retq rclb or int adc lods sbbl js adc fidivl mov retq or pop pop outsl and sbb adc lret jb sub mov add mov adc rcrl adc ficomp jno or fs xchg add rex.W mov cwtl push and fdivs lret mov outsb (bad) andq loop rex.WXB sub adc cmp fsts (bad) je pop clc sbb adc cmp xor or (bad) mov fdivl sub push pop adc mov jmpq xor jg xchg sbb out js adc xchg jnp int loop je (bad) (bad) sbb adc iret fdivs adc (bad) (bad) lret adc (bad) clc mov jle push push clc pushq hlt adc mov xchg imul fdivs or (bad) jo adc (bad) (bad) pushfq adc xchg push (bad) adc test (bad) sahf add cmp adc push (bad) rex.WXB lock adc xlat callq (bad) push jle fwait xorl push and test rex.WXB mov or rex.WRXB (bad) xor (bad) sar (bad) (bad) jmpq nop or adc mov xor sub data16 retq or adc jg (bad) jl rex.WR test and (bad) push lret sub cmp add push sbb pop sbb (bad) sbb icebp xchg jrcxz adc xchg outsl in popfq (bad) mov jae xor sbb xchg push adc cwtl mov movsb retq mov rex.WRX mov movabs fsts adc insb (bad) mov adc shr (bad) add iret cmpsl or adc mov cmc (bad) test push or or test (bad) movabs rolb push mov loop movabs (bad) cmc adc rex.B mov push or jae repnz sbb xchg (bad) mov xchg imul (bad) enterq (bad) adc or outsl adc adc rex.W adc (bad) push adc imul iret rex.WX ficoml rex.WX pop adc cmpsb cli fistpl pop adc cmp (bad) addl (bad) adc rex.WX rex mov mov adc jne add (bad) cwtl (bad) clc (bad) push jge rcl (bad) out sahf clc (bad) jne lock jbe test xor (bad) (bad) rclb (bad) lock rex.WRB int3 subl xchg sbb cmp outsl jo push lret adc adc adc out xchg adc (bad) clc movsl rex.B adcl (bad) std mov adc sahf adc and imulb (bad) mov sub adc mov add adc hlt cmpb adc mov ficoml (bad) rex.X or jp ja (bad) xchg pushq (bad) or (bad) test mov adc in scas pushq and xor scas (bad) xchg adc xchg adc sbb js jns adc xchg jrcxz (bad) add (bad) adc mov loopne in adc jne movabs adc adc pushq mov adc fs xlat jrcxz callq adc mov (bad) cmp clc mov jrcxz,pn icebp lea adc iret jo push adcl (bad) jae (bad) adc (bad) mov sarb adc cmp rex.WRX adc push adc cwtl mov rclb cmp jnp xchg mov int xlat xor test push xchg xor sbb adc (bad) fsubrl (bad) (bad) movslq clc mov sbbl frstor in cmp out test pushq (bad) divb ja (bad) push lahf adc clc loopne adc ljmp scas pushfq out adc outsb jno jg rex.WRXB adc adc jnp or pop and sub cmp mov fdivs cwtl add bnd fstpt adc mov clc (bad) sub test mov adc outsl movabs ja (bad) jbe push mov or rex.W (bad) xchg jno (bad) mov pop fmulp (bad) ss cmp jbe and adc rex.WRX cmp (bad) outsb sbb adc or movabs adc cmp fcom outsl adc cli jnp pushfq push scas mov xor and mov repz xchg xor (bad) xchg sbb adc stos mov (bad) adc jbe jrcxz xchg imull movabs mov jae icebp pop ficom adc adc sbb icebp jo rorb cmpb push adc mov mov pop and jns adc enterq sbb (bad) adc pop mov pushfq fdivrl (bad) retq xor jrcxz jge fmuls lret jne (bad) pop adc and jge adc popfq push adc adc cmpsl pop sbb mov xor pop incb sub (bad) xchg sub jne jmp push loop jns cli rex.X adc fsincos adc rex.WRXB ss fbld fimull (bad) cmc jl movsb rex.WRB xchg leaveq mov in addr32 and outsb pop xchg adc lock adc jg callq mov cmp ja (bad) lret jb mov adc adc cs jno enterq adc and fwait pop movabs mov adc mov lea adc (bad) sbb scas xchg insl or pop leaveq adc xchg and pop pop rex.B (bad) cwtl lret adc (bad) add rex.XB adc jae (bad) mov mov in nop xchg rcrl and rex.X push push (bad) rex.RX xchg hlt rorl xchg xchg xchg rex.WXB mov rex.WRXB (bad) pop orps (bad) (bad) imul mov ror imul and push xchg mov shl sti or mov xchg in nop rex.WRXB (bad) out (bad) jne (bad) pop rex.WR imul push lret (bad) out imul push adc cltd or insl push mov out in xlat (bad) shl xchg nop (bad) mov mov ljmp shrb (bad) pushq mov rex.RB cmp mov decl fldl2e (bad) (bad) (bad) xchg es mov decl (bad) push movsb xlat push test mov lcall push or not popq push rex.XB adc (bad) sbb xchg xchg xchg mov mov callq (bad) int3 rex.RB add out add (bad) push push push sbb out jne hlt mov push es out lock (bad) (bad) (bad) push insl cltd out rex rex.WXB es rex.RX xlat (bad) jne out mov cmpsb push mov (bad) lret loopne (bad) in dec xor rex.XB mov push add xchg decb jb adc out adc xchg mulb push rex.B or shl (bad) (bad) rex (bad) fcmovnbe cmp (bad) (bad) xchg out mov lcall incl out push mov gs lret test mov adc mov incl rclb mov mov push rclb xchg rex.W (bad) js outsl flds mov xchg fs mov iret (bad) (bad) pop mov xchg retq mov mov std lret (bad) xchg movsb xchg outsl sbb decb mov (bad) mov nop (bad) push imul sub orl cmp out repz push movsl hlt test push rex.X out pop add (bad) loopne xchg imul sub sarl (bad) (bad) mov rex.W (bad) push xor out jle hlt rorl xchg push in rex.WXB rcrb push fmull rclb decb pushq (bad) pushq adc sahf (bad) (bad) (bad) sbb shrl jno sbb (bad) push hlt adc (bad) scas (bad) push cmp mov leaveq hlt notl (bad) ss and jns stc (bad) xor mov push pop add (bad) add mov push (bad) mov in push mov mov rex.XB (bad) (bad) jrcxz negb push movsb add mov (bad) lret adc sarl (bad) hlt test push test (bad) addr32 divb (bad) stos (bad) push adc out xchg es mov (bad) movsb jmp hlt pop mov rex push lods in push fxch out add callq mov hlt shll clc push repz hlt rex.W rex.RXB rex.WRX rex.W or mov movsb xchg cwtl jno lret fadd lock adc adc jge pop movsb xchg mov adc jmpq or gs sub mov mov xor callq cli out xchg (bad) jrcxz movslq rex.RXB or jae out xor xchg fwait cmp mov jo pop (bad) (bad) adc insb (bad) std stos add test xchg xchg adc (bad) clc test (bad) (bad) scas xchg mov cli movsb push rex.R sub outsb mov or jbe cmpsl xchg outsl (bad) push adc adc jge int3 cmp ds rex.RXB fdivl mov fildl rex out rex.WR in adc jl sub fchs clc clc (bad) mov (bad) jns (bad) mov mov sbb fdivl or adc jg (bad) adc (bad) jns mov (bad) int sub ja adc adc cmp (bad) rex.WRB xor cmp (bad) out sub mov cwtl xlat or adc out mov adc repz (bad) push faddl mov (bad) fs (bad) adc rcrl mov push push adc xchg add fistpl stc movabs and nop jge xorb and cmpsb pop jae (bad) xchg ja (bad) cli rex.RB adc data16 imul adc vpaddd xorb mov adc fdivrl mov or add or sub adc movabs adc pop or or xor imulb xchg or outsb in (bad) cmc loope rex.XB add (bad) sub cmp lret retq pop sti lods sub adc test or (bad) cwtl sub lret stc sbb jge leaveq xor jae (bad) xchg sbb (bad) es fiaddl rex.RXB fnstcw movabs mov or mov fidivl movabs jns cmp (bad) in ss es fisubrl pop rex.WXB adc (bad) mov push divb or xor pop xor sbb (bad) rex.RXB adc pushq sbb callq retq repnz jb rcrb xchg push jrcxz insb pop adc out adc test xchg mov xchg adc rcll (bad) ja push cmp int3 gs add icebp test rex.W push std movsb (bad) adc mov xor or pop rclb jo adc retq (bad) retq imul cmp (bad) test (bad) clc mov mov jns xchg callq push pop push movabs pop (bad) hlt (bad) fwait pop rclb rex.WB adc mov (bad) mov mov push out scas cwtl outsb (bad) xchg hlt (bad) (bad) jae adc mov mov jge cld or in mov cwtl (bad) mov push adc out adc adc rex.W xor jno rex.RXB fwait cli int3 jo sbb and iret adc sbb (bad) std cld mov lret rex.RXB not (bad) adc ss rex.R mov mov fisttp fistl push movsb rcll sbb rcr adc adc mov repz iret cwtl (bad) adc test lock (bad) (bad) adc fsts xor push pushq bnd pop add andl mov sub jae cmc pushq idivb (bad) push adc jbe rex.WB push (bad) (bad) jl adc push (bad) insb cmp sub retq repnz xor rex.RB (bad) or outsl xchg shll jnp pushq jp sub xchg fdivrs pop adc xchg mov push adc pushq lret mov out mov pop fsubl retq xorb sub or cmp sbb (bad) stos fsts lahf xchg cld jb clc (bad) vmovupd mov in push xchg and sub mov adc fdivrs xor xchg xor cld adc xchg jmp ss (bad) mov push or mov fisubr adc out push xor jo pushq push fcmovnbe (bad) lods adc (bad) out mov cld pop (bad) (bad) mov cmpsl (bad) (bad) push lahf callq adc lods adc mov fimul xchg jnp adc cmc add rex.WX xor mov stos xchg sbb adc xlat imul adc xor xor xchg add push adc lahf pop or mov adc jnp,pt imulb fnsave cltd adc movslq push popfq clc push test std repnz push adc idivl (bad) leaveq mov push fstpt sbb fidivl out repz xchg cmpsl push xor adc hlt rex.WX adc cmp pop clc repnz and (bad) test shll cli xlat adc retq xor jle add (bad) ror adc rex.R test jl ss rcrb stos clc in mov sahf mov movabs sub push push adc mov repnz lret mov idivb adc repz or or adc rex.WX fwait ss adc xor cmpsl xchg or int3 adc ficoml cmp add movslq sub mov idiv xchg fidivl (bad) imul and mov rex adcb (bad) jg xchg ficoml push in retq gs push adc (bad) adc cs add pop rex.X in mov add push adc pop and in sub (bad) jo and rex.WRB rex.WRB (bad) test adc mov (bad) xchg adc fs cmp xor rex.WRXB sarb loopne adc or rex.WXB mov mov jrcxz xlat cltd or or movabs hlt int3 xor cmp sbb cli imull fiadd loop adc cmp mov ds fsubrl test adc jbe adc iret int rex.WB (bad) adc movabs rex je jle or test mov xchg xor rex.WX cmp mov (bad) jno imul pushfq (bad) adc mov (bad) or sub sti adc xchg rex.WRB jmp cs movslq xchg or rex.WRX (bad) cltd cmp (bad) xor adc sbb mov push mov divb adc sbb imul mov (bad) mov callq xlat adc xor mov movabs (bad) add rorb adc fist xor (bad) mov int jg (bad) (bad) sbb jbe pop out mov insl adc imul sbb pushq sub push add (bad) insb fwait lea jge or adc fdivs rex.X rex.WR and pop push xor lret (bad) or rcrb xchg (bad) jne adc mov xchg sbb cmp test rex.WRX sar pushq pop rcll shlb push adc mov (bad) sub xlat outsb mov stos and (bad) fisub loop adc jp lea adc push adc jg movabs rex.WRXB test (bad) ss fidiv out (bad) adc std adc clc sbb and adc outsl test adc fsts add jrcxz adc rex.WR rex.WB rex.WX adc xor fsts xor xchg adc (bad) (bad) fidivl mov and or rcrl adc sbbl mov icebp mov lret add xor push fdivp sub adc rex.RXB imul rex.WB movabs addr32 outsb adc or adc jp ror push lret adc jns mov and insb (bad) adc rex.R cmp scas loop adc lret push adc jl rex.W rex.RXB (bad) adc mov repnz (bad) in fidivrl jns adc xor repnz sub int3 leaveq mov adc faddl sbb jno push or jo retq (bad) notl (bad) callq jge std rex.WRXB test fidivl repz adc pushfq sub sahf push out push sbb std (bad) mov in sub adc (bad) int3 jo,pn adc push and mov jp adc mov or lahf cmp pushq cmp fsts fwait scas jle cltd (bad) rex.WXB mov rcll pop mov movabs mov mov repz xor mov decb cwtl (bad) adc xchg push popfq mov cmpsl mov and adc sub cmp (bad) jo mov rex.WXB adc imul rcll lahf adcb scas pop sub loop cmp lea sub mov repz adc cmp xchg adc fbstp fadds ja cli xor clc xor xchg adc fdivrs sbb sbb mov xor shrb (bad) mov adc jno fwait push push xor mull adc push (bad) add or push jbe cmp xor and test (bad) and xchg pop in pushq retq out notb mov hlt and mov xchg rex.RXB mov int3 cmpsb stos xchg lret fcoms sarb sbb scas mov adcl clc jbe ficoml in adc (bad) mov jno nop jrcxz and rex.R or rex.XB mov retq and or rex.WRXB xor cmp movsl pushq adc mov cwtl xlat enterq adc fisubr clc (bad) or nop rex.B push (bad) push out adc ljmp add out jg (bad) leaveq adc rex.WX cmp mov fiaddl xor lret push add jbe xrelease or push cmp neg (bad) rex.WRB mov and cmpsl xor retq jnp adc rex.RX mov xor rex.W xchg insl add cld (bad) adc sahf fcmovbe fadd lods pop cmpsl adc cld add sub rcrl icebp xchg (bad) adc sbb out cmp adc mov adc add hlt adc cmc pop (bad) mov mov in jge mov rcl sbb stc out fs out rcrl pushfq (bad) or (bad) adc pop (bad) push rex.WRXB sbb adc movabs mov adc jne lods iret (bad) adc (bad) shrb mov pop sbb rolb or hlt mov jl fcomps sub jo rex.XB push mov clc jge imul mov adc xchg movabs xchg (bad) and adc adc outsl cmp ss adc (bad) mov fwait adc negb fdivrl outsb shrl adc mov adc cwtl adc (bad) or push pushq adc icebp clc clc adcb pop rex.XB or xor mov push adc iret loopne hlt adc in fcomps sub shll push cmc es movslq mov insb xchg sbb lock xlat adc jge mov int3 sbb movabs (bad) adc lock (bad) mov lods fprem1 (bad) xor (bad) adc rolb pop sbb jne jmpq movsb jg lret (bad) mov mov cmp jg cmp xchg hlt mov or mov pop imul xor adc mov sti (bad) ss mov adc je callq lock (bad) cwtl add jp (bad) xchg (bad) xchg push sbb scas mov push lock sti sub je cmp rex.RXB (bad) pop movslq out rex.B ror ds pop (bad) (bad) jne xchg mov jge (bad) rex.WRX push movsl jg and ja (bad) in sbb add roll (bad) and unpckhps mov adc mov push test in pushq jp (bad) xlat adc xor adc ss fcoms rol cmp scas mov movsb sbb adc adc cmp jp jb xchg scas or (bad) imul cmp or cmp sbb push or rex.WX shl pop adcl adc test loope or and int3 rex.WRX adc mov jge xor adc mov rex.RX adc sbb (bad) xor add sub mov push adc jg scas adc in xor repz loop jae xchg imul adc test adc xor out icebp clc cmc repz mov cltd mov xor mov mov movabs or clc xchg (bad) cltd test adc js fldenv or sub sahf test out xor std sbb movslq xor test and xchg incl and fcmovnbe shl adc (bad) rex.WRB adc (bad) callq cmp (bad) (bad) xchg xlat xchg cmp ss jbe adc clc pop jge in add rex.WX push (bad) sub rex.WRX (bad) adc (bad) pushq callq adc rex.X out lea push xlat sub rex.WB xchg out pop rcrl adc je hlt js pop xor adc adc popfq push sbb sbb (bad) mov out js adc movslq adc xchg lock data16 std bnd sahf mov pushq push adc push (bad) jae int3 ja mov retq xchg (bad) adc movslq mov xchg sub mov ja xor loop mov fiaddl movslq movsb adc movabs push insl lahf loope (bad) pop in cmp cmp (bad) (bad) callq (bad) adc stc and rcl add rex.XB std sbb adc xchg fisub stos test fcoms int3 rex.WRXB (bad) pop (bad) pop js cwtl (bad) xchg jae leaveq jo pushfq test mov (bad) cmp (bad) repnz pop or unpckhps (bad) adc add mov mov out adc pop rex.RB adc fs push clc enterq gs xchg adc adc clc adc xchg jmp xchg adc or jb sub adc push adc sbb int lock sarb adc adc xor push (bad) clc outsl movabs jl std adc (bad) and adc pop jp mov adcl adc mov out std out test leaveq popfq sub (bad) xchg test xor pop xlat sbb adc (bad) jne adc (bad) sbb movsb pop hlt cmp test ficompl xchg fmul mov mov pushfq rex.WRB movsb mov mov retq adc std stc xor xchg add fsubrs (bad) xchg sub lret mov insl mov jns sahf jmp mov jae (bad) out test jne cmp (bad) or adc rex.WRB adc push (bad) sahf (bad) adc push sub imul test xor fisttpll pop (bad) int3 mov std adc or in or movsb clc int3 cli stc add xchg (bad) mov push mov (bad) sahf rex.RX mov fprem1 pop or adc sbb xlat sbb adc or (bad) (bad) (bad) push adc rex.XB mov (bad) (bad) movsb popfq adc pop sbb fdivrp add out adc xchg callq or xchg pop imull jb push jle ss adc cwtl fimull ja mov lahf rex.WR (bad) fnstenv sub rex.W pop rex.RXB mov push out adc sbb adc adc and nop and insl movabs (bad) (bad) in push xorl push dec adc mov (bad) xor xchg jl adc add (bad) mulb rex.WRX adc (bad) adc adc adc retq jmpq sub jl rex.R sbb pop rex.WRB fwait lock adc movabs adc pop test test cmp js (bad) and (bad) adc sbb cli repz cmp (bad) jae mov xchg adc outsb adc movabs push stc insl (bad) cmc mov adc xchg jnp movsb jge jp hlt sbb mov fsubrl (bad) cli adc in rex.W adc and jle pushfq (bad) and sbb callq rol cli cmp cwtl xchg js adc xchg push rex.XB rex.X adc lret push adc add int adc or rex.WRB adc pushfq sub xchg adc xlat xor clc (bad) mov fs icebp lods jno cmp (bad) jnp pop xor sub movabs add mov ficomp jle fsubrl mov test mov cmpl imul lock cwtl repz sub (bad) cmpsl xchg or notl adc je fcoml xlat adcl stc jae (bad) mov xchg (bad) adc and movabs test cltd sahf cwtl adc imul rex.W movabs scas mov xchg retq lahf in jne mov cmp int callq adc adc mov xchg (bad) rex.XB adc cmp nop rex.WRXB mov pop stos (bad) mov jns adc (bad) jle (bad) xor jge (bad) (bad) and rcrl je cmpsl rex.RB or repz pop sub adc sbb mov stos mov push push adc rex divl stos rclb ficom test lods xor pushq cs pop clc add pushq mov js cmpsb adc pop insl push popfq adc add cmp adc (bad) (bad) jne addr32 adc (bad) pushfq loope fiadd or (bad) sbb out (bad) push shll (bad) or and sbb callq or adc cmpsl adc mov (bad) push stos adc in loopne xor jle sti xor adc or (bad) adc jnp push mov adc in iret adc push rex.R adc lret (bad) movl scas adc leaveq icebp push sub fcoms xchg sub or lret mov (bad) adc std and test or jbe mov pop (bad) lock (bad) sti pop (bad) mov retq (bad) int repnz insb stos pop (bad) movsb mov mov (bad) xchg test mov jns pushfq mov clc xor add cli add rex.WRXB mov in mov mov (bad) adc mov scas jns repz andl (bad) cmp repz es adc fwait (bad) sbb adc fnclex (bad) cmp (bad) lock imul mov or adc sub rol xchg add (bad) (bad) pushfq retq rex.W adc mov mov cmc outsl xor insl hlt rex.WRXB xlat clc (bad) adcb stos pop push jg sbb mov not mov incl rex.WX push jns (bad) adc lods mov movabs rex.RXB adc (bad) mov pop or test jne jl (bad) mov adc movabs adc xchg (bad) or iret add (bad) sub (bad) xchg sub adc cwtl adc sub jbe and or rex.WRXB rex.XB neg adc xchg (bad) adc pop cmp mov sbb xlat and in adcl out loop adc sti pop adc mov mov sbb push sbb (bad) xor out cmpsl lahf rex.RB adc pop rex.X mov cmp jae stos push adc sbb cmpl test pop adc jg rex.W push jl in adc adc clc cmp sbb rex.WRX adc pop adc and adc add push adc adc fcomip jno pop adc (bad) mov jrcxz adc ja adc adc (bad) add out rex.R xchg rcrl adc and adc in push js mov loopne or jns adc cmpsl (bad) callq push and xchg movabs push (bad) cltd jno js (bad) rex.WR pop rcrl scas (bad) xchg adc lods pop (bad) adc je out lock callq rex.WRB push fcmovnbe (bad) adc xor test adc xchg lock adc mov iret mov stc movabs and adc or cmp add (bad) mov adc (bad) (bad) cli add xchg pop mov jmpq out push adc and movabs rex.WB push insb cwtl out cmp adc icebp movabs mov rex.WX add lret pop (bad) xchg jle in cltd (bad) xchg jg std (bad) movabs mov jbe pushfq sbb test xchg mov in xor rex.RB jp and stos xchg jno sar push mov fsubl mov adc sub retq (bad) mov push or (bad) fwait adc push ja in xor adc (bad) jnp cmc adc stos mov push adc add es rcll fistl pushq xlat xor sti mov add fdivrs int3 adc pop push push pushfq adc and rex.WXB and (bad) (bad) lock mov adc cs (bad) adc lret xor rex.WXB pushq movsl adc negb jne (bad) jrcxz fistl ffreep cmpsb popfq adc movslq jmp mov mov rex.XB xchg in rex.WXB adc xor (bad) (bad) adc adc xchg imul cmpsb fmul adc (bad) cmp cmpl adc xchg rex.RXB clc mov mov (bad) cmp jne mov mov jmp xchg imul sub fcomi jp adc xchg add (bad) fsubrl enterq add mov adc fildll adc jne adc (bad) cwtl (bad) mov adc adc sub sahf jmp insl repnz jmpq enterq jbe int3 push mov callq adc sub out fisubl adc fwait callq sti jp sub mov lea (bad) cmp xchg push incb push in sbb out sbb cmpsl (bad) std xchg adc cmc cmp push adc xor (bad) (bad) adc or sub mov (bad) jmpq or rex.WR fadd adc push adc xchg insb sar adc pop outsl mov popfq sti mov fisttpll js stc jg out sbb (bad) xchg cmp adc adc sahf or (bad) sbb mov xchg popfq adc ss adc lods movabs cmc in jrcxz (bad) mov lods pop (bad) rex.WR (bad) ficoml and xor pop and outsb add fwait loope cli cmp (bad) es xlat (bad) adc sub insl movabs adc xor jp mov adc jns adc or push leaveq or mov mov jno sub adc xor adc (bad) (bad) pop (bad) rex.WRB xor (bad) or movabs sbb lock xor adc mov unpckhps movabs adc (bad) xchg cld rex fwait cmp jge mov push and jnp js jle adc fwait sti enterq mov test push xor adc mov jb adc adc loope rex.WRXB lret vunpckhps (bad) rex.WR rex.X cmp xor cmpsb leaveq adc popfq insb orl push xor adc test movsb adc cmp or loope jne mov divl mov xchg int3 push adc stos sbb (bad) adc jmp cs pushq (bad) xor clc stos mov es rex.W out (bad) mov adc adc ficoml adc or cwtl add or jb (bad) adc fmull rex.R xchg adc (bad) out (bad) jbe lea cmp or push (bad) adc (bad) or adc xchg es jbe sbb adc (bad) rex.WX movzwl lret add add leaveq adc rex.RB and pop (bad) jae (bad) add adc push add (bad) idivl mov js or (bad) and lods addr32 vmovaps (bad) in adc negl retq rex.WX jg rex.WRXB jnp (bad) pop lret add out adc xchg adc jno push or adc pop push adc maxps mov (bad) clc (bad) sbb fwait scas push je,pn jb lods xor stos mov adc (bad) fdivs (bad) rex.WRB push sbb imulb fcmove movsl (bad) (bad) nop add (bad) test (bad) jno sbb jge adc mov xor push out xlat clc popfq (bad) jg xorps (bad) mov sbb jl xor (bad) iret adc adc fisub mov sub xor lahf mov mov loopne jb in negl adc (bad) hlt mov adc sub adc fisubr or mov push std mov (bad) adc data16 adc mov xlat cmp (bad) pop sbb sub add cmc push test push adc xchg addb je cld (bad) xor push and jrcxz cwtl nop adc jne lea adc fbld (bad) nop and mov mov and (bad) rex.WRB (bad) xor adc jle lods pushq mov (bad) xor adc stc or pop leaveq mov (bad) fcoms mov pop xchg fist fidivl callq (bad) cmp sub xor loope rex.XB sbb stos mov jne sets jae push out sbb (bad) xor rex.WRXB retq mov (bad) sub add pop cli movabs sti push jp mov jno mov cli (bad) (bad) adc rex.WB ss fistl jrcxz ss clc lods push xor leaveq jne mov or xlat adc xor (bad) pushq rex.XB jno (bad) gs clc std addr32 movabs push cmp xor insl notl cmp adc push ja rex.WRX fs (bad) or loop adc add xchg mov repz mov or sub cmp clc or (bad) (bad) ds xor (bad) xlat fistp jg cmp mov (bad) cmp rex.WB xor int3 movabs mov sbb adc (bad) (bad) notl xor pushq movabs adc mov callq pop adc sub out and rex.R xor adc (bad) jno lock rex add or fs push cli (bad) bnd jl insl adc clc (bad) out mov sub push xor push push fsubrs data16 sbb adc pop xchg adc div mov imul (bad) movabs adc stos jmpq mov adc hlt mov adc js xor lods lock push jg sbb or xchg jle (bad) movsb icebp clc rex.XB xchg sbb adc and adc mov adc (bad) adc addr32 mov iret pushfq idiv adc jb ficoml xchg mov push movabs cmp fidiv adc xor pop push and xor in adc clc ja (bad) xchg adc xor (bad) sbb push loop mov or xchg jle (bad) or test xchg adc mov add xor movsb or jb and xchg lahf jl cmpsb loopne clc stc stos mov adc out cmpl insb adc fist lret (bad) ja add lahf cmc jge jne adc xor lret cmc (bad) cmp shr lahf adc sti (bad) (bad) mov xlat mov lock sub xchg adc (bad) adc popq adc xor lret push xchg jnp adc je pop (bad) adc movabs cmpsl cmpsl adc rex.WRX std hlt xor (bad) adc mov adc mov fisubl xchg mov movabs outsl adc xor (bad) movabs pop xlat cmp adc pushq sub xchg rex.W jp outsl jne movsb or mov adc (bad) mov cmp adc (bad) adc (bad) cmc mov out ss mov adc data16 lock mov rex.W mov sar (bad) jge pop add (bad) sti jl (bad) adc (bad) sbbl int3 adc mov jl fdivs loopne pushq pop xchg movslq mov mov test adc (bad) sbb lcall adc (bad) mov (bad) mov rex.RB jl xchg pop adc jno repz add fwait (bad) cmpsl adc adc adc movabs pop jge (bad) lock mov lret mov mov jl cmp xchg pop mov rex.WXB push rex.WR (bad) push adc mov mov rex.WRB mov adc adc mov xchg add adc imul test adc (bad) insb (bad) adc or adc pop sbb or (bad) movabs adc lock or test jmp rex.RX adc jae rex.WX pop push mov mov (bad) loop (bad) pop push imul out outsl adc sbb mov test pop ds rex.WR xrelease rorl adc and adc mov mov adc cmp fdivrs mov adc pop push mov adc (bad) (bad) push push sbbl rcrb js adc scas add adc push ja sti adc (bad) (bad) (bad) (bad) (bad) sbb sub (bad) mov adc push jmp cmpsl or ja loope sub jrcxz xchg adc lahf clc rex.R lods jmpq sbb mov rex.WX (bad) sub adc xchg jns mov movabs pushq (bad) sub cmp and std mov xchg (bad) lock movl ja shrb adc adc adc jnp jge callq xchg adc or jo (bad) adc rclb push jmpq movabs xchg cwtl fldenv add outsl mov adc pop mov out js nop adc add loopne mov xchg retq test mov adcb rex.WB cli mov adc fist out pop pop adc adc add mov adc cmp pop iret xor fcoms loop add cltd push adc cmp lahf (bad) gs (bad) cmc pop sbb add adc xchg cmp test insl fcomps rex.R pop xchg addr32 lret add jbe (bad) push sbb (bad) sarl imul adc std cwtl add test (bad) xor fnsave pop rex.RB (bad) jl adc xor mov lret adc int jp jle sti mov (bad) xor adc xchg mov stos adc cmpsl in push divl adc mov jl (bad) or xchg jge (bad) adc adc stos mov xor jb pushq ror cld cmpsl sbb rex.WX adc xchg cmp (bad) icebp jnp fwait cs retq scas fdivrl addr32 lods and push je sbbl and ja lods (bad) adc xor adc pushq adc sub (bad) lea cmc sbb (bad) xor lret insl or mov adc cmpsb jrcxz rex.X rex.RB rex.WR xor adc adc stc xchg (bad) loopne fnstsw or (bad) rex.XB adc jno int3 pop adc (bad) (bad) or fnstsw mov adc sub mov divb loope (bad) push adc lods sbb sub adc adc xchg cmpsb jp clc cmp add rol jns adc xchg sbb adc movslq sub test mov pop and imul pushfq movsb sub jl sbb jno (bad) hlt movabs push out lock push sbb shrl fs pop int3 fcoms rex.W and sub shll xor xchg sbb jae (bad) cmp adc and int3 jo repnz fidivrl adc xchg (bad) xchg adc mov in pop lock (bad) adc sub outsb clc xor mov adc (bad) vunpckhpd je (bad) cltd jg sub callq outsl jae pushq (bad) lret test (bad) es jge adc pop movabs repz subl repz (bad) xchg rex.W idiv or add mov adc (bad) mov pushfq outsl (bad) mov std roll js test adc xor mov pop (bad) movslq or out nop (bad) mov adc xchg adc stos or cmp imul adc (bad) and or xor pop or adc xor gs (bad) (bad) adc insl jns or (bad) in adc adc cltd rex.RX adc out fwait pop out add adc or fisubrl jbe adc imul mov movabs lcall (bad) jg sub sbb icebp rex.R out adc add adc (bad) ss sti add insl jbe callq out rex.WB push clc jns (bad) vaddsd or stos xor (bad) mov adc push cmp insl rex.WRX adc rex.WXB jae xor xor mov rex.WXB or div mov sbb add (bad) push cld (bad) mov lods fwait adc lret xchg cmp push gs icebp mov jae xchg out mov jge jno scas adc or out adc movabs test adc xchg test rex.WX (bad) xchg movabs rex.RXB sbb xor and add loopne out movsl push xor cmp rex.X adc jno cmpl adc mov (bad) fcoml retq mov jo jo popfq lret lahf adc mov sbb sub adc jb mov fstl xchg scas imul adc decb or pushq push stc push jp movabs xchg adc jne and (bad) pushfq adc or rex.RX jbe out data16 adc push mov int push cmp stc hlt jns xlat movsb outsl imul add mov fwait test push sbb lods sbb mov cwtl data16 and rex.RX loop adc jns loopne stc mov shrl adc loope jrcxz mov scas mov and sub add (bad) adc repz data16 stos or mov push adc hlt (bad) and (bad) push xchg push (bad) sub adc adc jbe test lret hlt jb adc (bad) jmpq (bad) (bad) mov es pushq adc (bad) sbb pushfq in adc repz xlat ss mov xor xchg sar mov adc movabs or (bad) jno add cmp jbe push or loope adc adc (bad) cmpb out pop outsb popfq adc cltd test xchg push lods adc fnop adc (bad) out js mov sub and sbb or (bad) movabs adc push xchg testl out (bad) lods xchg (bad) fmull cld push popfq mov hlt pop xchg ds sahf rex.WR xor fistp (bad) ficoml pushfq adc mov (bad) mov hlt jne xchg jge pop push scas adc cmc retq (bad) xlat (bad) leaveq sub (bad) orl (bad) add fcmovbe adc push (bad) cmc jne push mov adc (bad) (bad) imulb xchg (bad) lea adc (bad) movsl jbe xchg (bad) push xor jmp or testl (bad) (bad) mov xchg pop jne push add push adc mov adc adc ja xchg insl xor (bad) mov notw xlat mov pushq mov mov hlt adcl (bad) and jbe lret divl (bad) (bad) insl mov (bad) lret je repz push cli push outsb hlt push lods je sbb movabs cmc rex or (bad) (bad) loopne (bad) xchg cmp clc cld push (bad) hlt movabs add pop xlat push (bad) int xchg xchg test adc (bad) lret jne xchg sbb cmc push insb scas adc (bad) movabs mov cltd xchg xchg je push std cmc or (bad) (bad) negb in fdivs xchg pop ficompl es (bad) sbb jbe xchg xor and (bad) (bad) add (bad) (bad) adc mov xchg sub push mov cmp (bad) jne mov clc adc not push fmuls (bad) adc out mull push adc (bad) rorl xchg cli push (bad) (bad) gs push outsb add xor adc jbe push (bad) notl sub int in push (bad) je movabs add adc jl sub (bad) fsubs notl (bad) out adc sbb hlt sub imul mov sbb lea xchg pmaddwd jbe push fcoml jmpq rex.WRX pop adc mov xchg imul js cmp jle push mov div enterq (bad) cmp mov idiv mov ror xchg fs js rex.RXB mov adc xchg lret (bad) jrcxz adc callq notb (bad) xlat and (bad) in adc fisubl fnsave add enterq lock pushfq nop adc rex.RXB incb cs (bad) popfq mov mov jbe lods push leaveq neg adc out (bad) jno out adc jno mov out adc leaveq je xchg out adc cmpsl (bad) adc (bad) outsb mov movsb lods movabs add (bad) pop jb push jle (bad) adc adc movabs rex.RXB xor test movabs and or test mov adc and test jmp rex.WR (bad) div (bad) cltd xchg sub rex.WRXB stos pop fcmovb or data16 add mov stos xchg pop rcll ss sub mov or xchg sbb xor rclb hlt xor sub ja (bad) fsubrl adc adc adc and or push cmp pushfq pop imul retq fildll mov scas xchg adc (bad) rex.WXB jmpq leaveq outsl gs rex.WB movabs and mov (bad) in and (bad) adc je or movsl shlb movabs sbb rex.W xor (bad) (bad) js rex.X mov sub fist (bad) push xor sub xchg (bad) cmp scas outsl fwait bnd xlat rclb pop cli mov pushfq lock pop movabs insl (bad) adc mov pop adcb mov repz loop (bad) xchg int3 (bad) xor or (bad) movabs or push sahf xor ja loope (bad) je cld (bad) movabs add adc add add mov in repz lea jp push sbb adc pop mov jae rex.RXB sub lahf xchg fs rex.B pop (bad) or repnz testb add callq push movsb hlt jge,pt (bad) xorb faddp adc pop fidivl push (bad) rex.X jo sahf mov push and rcrl adc loop or fnstenv mov loope out sub sub adc movsb cmovle rex.WB rex.RXB movsl movabs int xor xlat xchg cli shrb adc sbb xor jg sti rex.WR nop xchg clc mov and popfq rclb ja (bad) rex.RX repnz repz retq mov es lods rex.RXB negb xor out mov xchg mov out push push pushq mov fs fstl cmp or stc (bad) push int cwtl jbe pushq movabs std rex.WRXB mov adc repz add cwtl mov repz or (bad) mov rex.RX xchg mov ss jbe stc in movabs lahf test push and lock jb lret cs sbb adc pushfq (bad) adc (bad) int3 lcall (bad) fsubp adc rex.WXB loop cwtl (bad) movabs insb xchg callq outsb adc int3 retq in fwait and enterq xchg xchg cmp (bad) je sbb rex pop outsl retq rex.WXB (bad) mov fsubrl (bad) adc lods rex.X rex.RX sub sbb adc (bad) iret mov cmp xchg imul adc xchg jmp fist or mov xor cld in pop retq sub adc stc (bad) adc imul psubusb and xchg xor and adc jle xchg mov xchg ss shr (bad) adc out scas adc flds xchg (bad) xchg sbb and cmp (bad) lods xor rex.WX rex.WRXB xlat mov mov rex.WR sbb movabs adc cmp pushq adc mov sbb fmull and adc (bad) xorb orl rex.RB clc movslq jno cmp addr32 (bad) adc insl outsb or adc rex.WRB retq pushfq adc push or jo decl rex.B jne and (bad) fsubs je stc xchg push imul int (bad) xor movslq cmp movsl loopne pushfq adc adcl adc (bad) jge lods clc mov (bad) icebp jmpq sub rex.WX rex.WR adc and sub mov add and rex.W pop xor and mov and (bad) loope xchg pop mov pop xchg (bad) faddl divb sbb rex.WXB push adcb cwtl xor xchg fmuls (bad) adc loopne mov adc retq ja push adc and mov stos and jmp movl adc mov and (bad) (bad) sub (bad) xchg (bad) jne jle and cmp mov mov xchg xchg stos (bad) adc and (bad) jrcxz sbb mov leaveq xchg adc xor cmp pop shrb sbb cmpsl mov mov pop jl adc and insb fcoms add cmc sahf lret cltd mov sub sbb iret lods xchg addr32 (bad) (bad) retq sbb cwtl xor push cwtl add lret (bad) xor rex.WRXB (bad) push (bad) ds adc loopne or adc (bad) pop pop fistl adc (bad) cmc adc pop rex.WRB stc adc ds test xor (bad) adc (bad) rex.WRX cs sbb xchg adc xor test rex.RB rex.X or mov (bad) in int mov jbe add fnstenv loope outsb (bad) rex.WRXB cmp cltd push fstpl fdivrs add (bad) fidiv jb mov adc (bad) fcomip or jne adc (bad) (bad) mov movabs out adc es in adc stos (bad) push jl push mov ds cmc enterq xchg xor or mov (bad) and adc push add and (bad) fs xacquire or adc nop out (bad) rex.RX adc ficomp (bad) sub xchg xchg pop mov jle adc and fnop out xchg lods mov jle lret push out and sbb and xor (bad) imul mov notl or sub adc rex addr32 mov pop int3 (bad) (bad) popfq jp adc or sbb jne (bad) sti add sub xor cmc fistpll in fstl (bad) sbb gs data16 mov out mov sub test pop movabs xchg ss (bad) sbb sbb stos decb (bad) (bad) adc divl xchg pushq mov out cld or adc mov pop push adc insb (bad) lahf xor mov sarl and push jnp cwtl iret loop adc retq and (bad) ficompl jb frstor (bad) pushq movslq fs xor sub clc loop ss mov callq sbb pop cmpsl rex.WXB fs rex.RXB cmp jo xchg xor (bad) adc pop sbb adc lock adc fistpl test rex.XB adc rex.X lods cmp push xchg cmpsl xchg (bad) push cmp xor es (bad) rex.WX lea andl movslq addr32 loope (bad) mov rex.WRX movabs cmp stc fnop leaveq retq mov imul fsubr adc sbbl pop out pop rex.WRXB adc add in rex.RXB adc mov rex.WRB rex.RXB rex.WRXB lods sbb adc and adc idivl movabs lret sub in hlt rex.WB cmpsl lahf mov adc jmpq or gs insl mov lods mov out push addr32 cwtl adc jmp rex.W int jo (bad) std test or pop je and mov callq and xchg rex.WRXB out adc in xor scas (bad) divb rcll (bad) movslq (bad) (bad) repnz push (bad) cmc out fdivrs cmpsb outsb jge ficom stos std (bad) rex.X cld adc shll rcll fcoml sub nop mov shll movabs or jrcxz lods stos sbb rex rex.WXB in adc mov mov mov xor adc (bad) rcrl adc sahf (bad) cmp sub mov int rcll xchg fnsave mov (bad) xchg rolb (bad) and adc cmp jno sub movaps (bad) shl adc push loop scas xor (bad) rcrl shl xor (bad) pushq rex.WRB rcll sub xchg adc orl addr32 adc idivl in movabs loopne adc movabs (bad) (bad) test rex.B (bad) and sbb (bad) or (bad) cltd rex.XB mov rex adc pop callq xor mov rex.RXB pop sub mov orl push sbb pop or out rex.WRXB (bad) add and cli in fistl (bad) adc rex.X adc mov sahf fs in lret adc push cld stc sbb outsb faddl push cmc stos or mov adc mov sti adc or ficoml addr32 dec rex.WRXB fcomp in rex.RX int3 test fst movb (bad) adc (bad) or cwtl (bad) sbb adc (bad) xchg push (bad) lea or retq rex.XB cs je jne fsubrl movabs cs jo (bad) jmpq (bad) push pop jbe fmul (bad) add lock mov xor (bad) (bad) adc movsb mov in sbb and mov popfq xchg cmp retq xchg adc fdiv jmpq mov jge mov psadbw ss (bad) roll xchg adc xor adc test mov mov rex.RXB adc roll xchg addr32 push xchg mov loop or mov adc add retq rex.X je (bad) repnz jmpq fsubrl sbb (bad) or and (bad) xlat or lock (bad) cli nop push cmp adc add mov sub mov fnsave (bad) ja (bad) loop add mov and sbb in xor lret jl rex.WRXB stc rex.WRX retq adc popfq adc sbb xchg rex.WRX jl jge adc or (bad) jmpq mov fcmovnb mov (bad) callq adc sbb jne xlat movsb pop push callq adc test fsts movabs adc rex.WX (bad) adc rex.B sbb adc test xchg mov movabs add sbb repz (bad) (bad) scas cmp jnp cmp add imul adc fstpl out cmp jg pop (bad) adc pushq mov popfq cmpsl (bad) mov (bad) sahf (bad) cwtl add sub mov lahf mov out rex.RB cmp cmp cmp rcrb cs and retq xor rex.WB rcrb (bad) adc xchg jb xchg sub repnz cmp sbb (bad) xchg xor fcompl lock adc xlat add pop adc hlt push (bad) (bad) pushfq jo scas adc (bad) mov (bad) in sbb or and jne adc icebp jne adc push jle cli repz jne (bad) or push sub mov movabs faddl mov sub rex.RB fs push adc sbb gs cmp lods jrcxz jb adc sub rex.WRB jl out mov test and sbb mov push or cmpsb adc xor xchg test in rex.WXB (bad) (bad) (bad) sub int3 pop rex.WX sarb or (bad) rcll and movsb cmpsl mov andb mov xor sub or rex.RB and xchg push lock xchg cmc lods repnz (bad) loope adc sahf int3 rex.XB jns (bad) retq adc jg (bad) mov adc (bad) sbb push retq imul movabs adc (bad) (bad) mov jmp notb rex fimul rcr in movabs adc (bad) rex.WRB pushq lods leaveq sbb rex.WB pop sub mov cli jmpq sbb retq (bad) gs add movsl lahf test (bad) xchg add (bad) jbe xor xchg xor adc ss adc pop and mov (bad) (bad) (bad) adc (bad) rex.WRXB xchg sub sub mov sbb scas scas adc (bad) cmp pop adc rex.R test and repz pop lods cmp adc mov (bad) movslq out fidivl nop fadds (bad) cli mov lock sbb (bad) add jne adc lret mov fistl cltd (bad) lea xchg cld jno mov repz rex.R pop movsl retq out xor adc outsb fcoms cs fcoml adc (bad) loopne push adc std ds rex.RB adc cmpsb or (bad) adc mov lret cmc in or add adc cmpsl jbe rex.WX (bad) mov jp xor imul add (bad) rex.WRXB push mov (bad) or lea and js xchg adc jmp movabs in je jb (bad) mov cmp cmc mov pushfq rcr mov adc (bad) in (bad) sbb adc push sbb stc pop adc sbb sbb xchg pushq jne xorl (bad) es rex.X or cmp mov xchg sbb adc hlt (bad) push cmp popfq (bad) adc and jbe adc roll popfq jns jmpq ficomp mov or jg or out sahf jge adc sub in rex.WB rex.WRXB stos movabs cld lret jbe fwait lea (bad) mov movabs adc push shll fdivrs mov xchg xchg rex.RXB rex.W (bad) (bad) out pushfq xchg cltd insb lock (bad) xor jmp rex.RXB mov sub mov lahf cwtl rex.WRX in mov adc add cmp rex.RX cmpsl or adc or and (bad) adc pop mov callq push stc divl (bad) xlat cmpsl movsb cmp mov movslq fldl fdivs adc jle adc (bad) add mov mov cmp pop add stos (bad) rclb push pop adc fs mov sahf rex.W adc adc (bad) (bad) adc xor rex.RB callq xlat (bad) jnp je and movsb es push or cmp xor pop out insb adc stos scas sub adc (bad) xor (bad) adc xchg rex.WXB add mov (bad) clc xchg (bad) xchg int sbb adc rclb (bad) ljmp cld xchg fwait int test push lea (bad) gs (bad) jg sub clc mov xlat rex.B mov icebp (bad) or mov xchg mov adc hlt repnz cwtl rcrb adc push sbb js test xor pushq rex.W int ss lods adc cmp jmp sahf jrcxz rex.W adc add js and (bad) fstpt rorb rex.RX mov mov adc push addr32 movabs movslq lods out sti retq adc mov divw jb rex.XB jge or retq (bad) cmp mov clc shrd fisttpll imul (bad) out push scas adc orl xchg pop popq test adc push cli fbld or movl jl cmc rex.WRB jbe and add xor push repnz rex.WXB rex.XB fwait adc roll (bad) adc negb xlat pop xchg ss mov retq (bad) mov (bad) adc (bad) js adc out mov (bad) mov (bad) clc mov mov or loop (bad) jb xor ficomp (bad) and rorl cmp and (bad) mov std jbe rex.RB adc sbb mov adc sbb movabs push adc (bad) sbb (bad) adc retq push xchg sub mov fwait pushfq test gs frstor mov mov push xlat in notl adc sub out pop mov (bad) xchg mov xchg lahf clc rex.XB mov inc sahf sub retq gs jmp or movabs (bad) (bad) and cwtl imul repz stos pop rclb sub movslq adc fdivr fidivl pop sarb rex.WXB retq cmp mov sbb xor ss (bad) jbe adc or out xchg movabs outsl xor retq test adc pushfq jae sbb cs xchg movslq outsb callq insl movsl (bad) adc adc (bad) clc jmpq mov push sbb adc js movabs push sub icebp mov push (bad) (bad) imul adc lea cmp sub sub and clc cmp xchg sub xchg adc stos add sbb cmc out xchg and jl popfq (bad) (bad) movabs repz xchg and (bad) pushq mov jb push rex.RB xchg adc xor push xchg (bad) pop in punpcklwd sub adc leaveq pop adc (bad) popq rex.WR (bad) push int3 adc cmp ss pop xchg mov andb xlat outsl push adc lods sbb cli adc jg (bad) mov pop rex.W lret adc imul (bad) rex.WB movabs out (bad) adc or xor jrcxz repz push xchg rex.XB es lret xchg movsl (bad) (bad) adc mov je or jmpq lahf adc add rex.RXB imul xchg or adc xchg (bad) (bad) mov jne rex.WX out sbb movabs leaveq xor lret data16 xchg jrcxz iret adc (bad) loop nop push rex.WRB (bad) rex cmp xchg scas xlat rex.WR sub and jo (bad) mov sbb stos and jns cmc xor sti xor repz or (bad) out rcr and adc jrcxz test lock or (bad) jl repnz mov add retq divb sub adc (bad) lock sub rex.WRX fucomi lock mov push clc mov rex.W inc or insb cltd adc adc nop fdivrs loope mov (bad) (bad) cmc adc rex.RB mov xchg lods lock jb fstl jle movhps fndisi(8087 xchg or mov fisubr (bad) xor xchg clc lahf adc pop outsl (bad) test nop data16 jmp cwtl jp rex.WRXB and (bad) adc mov jrcxz cmp movabs (bad) sbb jb push xor xor movsb loope rex.WRXB (bad) adcl mov (bad) callq adc loopne imul (bad) xchg xchg sbb rex.WX cli leaveq add adc ficomp pop mov jmpq cmp jnp xor adc cmp pop cwtl cmpsb divl sub xor xorb js adc sarb adc scas insl or pop jg pop adc movslq rex.WRXB adc test (bad) gs mov mov (bad) sub sbb cmp xor js adc int3 mov (bad) adc sub lea (bad) callq fcmovu (bad) sbb adc fsubrs or or data16 div (bad) in out xchg mov stc loopne (bad) (bad) (bad) mov or stos cmc (bad) mov rex.WRXB (bad) sbb adc adc mov lock jbe jle (bad) (bad) sbb lods sti fbstp movabs callq xor test sbb fildll scas fwait (bad) shr rex.WRXB adc xor pop lods adc push xor repnz sti cmc adc retq and notl rex.WX pushq mov xlat test pop sub mov sarb adc loope push addr32 adc xchg sub rorl fcoml sbb mov cld rex.RB pushq lods adc pop rex.B (bad) adc (bad) (bad) pop push adc mov lock (bad) jle or sbb sbb jo mov mov subb cmpsb (bad) add mov add xchg adc cmp adc adc or xor (bad) cmp mov adc (bad) repz jp or pop (bad) jmp divl xor mov repnz lret movabs scas ja sbb and movabs (bad) pushfq adc pushq sub movsb mov (bad) callq xor or adc pop adc (bad) rex.WR sbb insb push adc fsubrs addr32 jp decl (bad) fildll mov and fs fmul xchg lea jle adc fstpl mov notb test xor (bad) ja and adc (bad) cmp or (bad) adc cmpsl xchg pushq xchg pushfq lret mov (bad) cwtl fnstenv add (bad) fst push fadd pushfq clc (bad) retq gs pop xchg or (bad) out (bad) mov or (bad) mov lock (bad) (bad) enterq int3 add jbe adc (bad) addr32 sub cmpsl adc adc (bad) adc test mov rex.RB rex.RXB repz gs rex.RX cs mov outsl adc mov movsl and (bad) ja pop and sbb and insb in mov push (bad) adc jg outsl mov or stc push push jrcxz jns out xor rex.RXB or test (bad) adc sbb loopne shr je rex.RXB out hlt adc retq jne cmc ds and (bad) cmpsl or sbb xor (bad) pop mov pop sub es rex.WRB jge cwtl (bad) push and hlt (bad) (bad) xchg jp add (bad) loope jns movabs (bad) in sub xchg or mov icebp adc and pop and outsb xor pop jne push cwtl pushfq sbb sub cltd push push rex.W xchg adc mov hlt xor pop push jg outsb callq adc xor fadds outsl fstp leaveq (bad) fildll mov pushfq (bad) add sbb cmpsb (bad) adc adc adc mov rcrb adc (bad) cmp and cmp pop mov adc fnstsw (bad) iret and adc rex.WR adc or ss (bad) cmp rex.XB loopne mov nop mov fnstenv jno adc int rex.W rex.XB je int3 cltd loopne outsl xchg adc mov add xchg or xchg clc and cmpsl mov or movsb xor jb cmp add mov adc (bad) push adc mov push xchg stos rcll fnstcw jno mov fcom repz sub mov test movsb (bad) rex.WRB rex.WRX xchg sahf loope adc jnp seto in xchg rex.X jmpq cwtl movabs out xchg lock pop mov pushq in sbb callq ja je rex.WXB adc xchg rex.WRXB push mov adc movabs jnp sbb popq gs push or jb out jne (bad) adc cs and pop adc lock xor cli xor scas (bad) or test xor jo in fist pushfq (bad) sbb push (bad) and (bad) in rex.W test iret or sti adc jmpq jne (bad) clc repnz pop (bad) (bad) adc mov and incb int (bad) fnsave mov shll iret or pop ja xchg imul adc push mov mov rex.WB movsb cli or pushfq sbb and callq (bad) sub ja (bad) cmp sbb movsb cmp lods cli mov xor sbb pop mov lock add mov (bad) (bad) jp (bad) adc pop pop xchg mov xorb adc repnz fcoml cmp movsb in cmp (bad) rcrl adc pushq psubb popfq pushq mov movslq jae rex.XB or cwtl pop add enterq push (bad) (bad) (bad) fcoml (bad) xor in or mov xor xor shrl jno sub fcoml retq xchg cmp adc cmpsl movabs lret mov outsl pushfq rex.RX adc or hlt adc jl mov lock movabs and rex (bad) es fwait adc cltd pop rex.WRX sbbl mov ja in loopne int pushfq movslq sub adcl stos adc mov movslq lock jg and push cli sbb (bad) mov sbb ds (bad) ss adc rex.RB (bad) pushq add divb (bad) cmp (bad) fwait mov adc in jge enterq (bad) push or adcl enterq ficomp pop xor adc addr32 (bad) xchg fucomi add (bad) or sbb subl sub xchg xchg sbb (bad) addr32 or rex.WRXB xor mov sbb movabs loopne adc xchg and and xor mov lret pop mov pop retq jg (bad) jo xchg mov out scas xchg jp xlat pop rex.WRXB pop (bad) movabs out test xchg add cmpsl jae jnp jrcxz imul scas fdivr xlat outsb fidivl (bad) popfq rex.WRXB push pop orl js in adc hlt pop pop (bad) mov adc xchg jnp cmpsb (bad) xchg jbe cwtl xlat stos (bad) sbb mov mov (bad) xchg hlt (bad) push mov xchg (bad) add xchg (bad) (bad) test (bad) fmuls xchg (bad) push mov add push addr32 sub mov xor (bad) xchg out (bad) in xchg (bad) cmp (bad) adc insb fs or cmp or rex.R rex.R (bad) adc jnp jnp in in (bad) xor rex.XB in push (bad) repz retq btc push rex.RXB (bad) adc pop jo or (bad) mov (bad) pop xor stos mov pop jg rex.WR ss por stos or test mov xchg lock popq jae or adcl mov out rex.WXB test ja (bad) rex.XB gs lret and cmp adc xlat sbb xchg in adc data16 rex.WX cmp (bad) (bad) int (bad) sarb (bad) mov in jp movsl mov mov push (bad) mov rex.R loop lods notl fs fstpl in rcrl push xor add sti mov repz rex nop shrl (bad) test (bad) cltd adc imull sbb (bad) mov (bad) or rcl mov (bad) xchg mov cmp addr32 push (bad) pop (bad) add lods lret nop stos int3 imul rex.WXB cmp ljmp rex.WX mov or (bad) stos nop callq clc mov mov (bad) lret (bad) shl mov (bad) xchg movslq iret rex.R movabs (bad) retq repz xorl (bad) (bad) rex.WXB mov shll cmp mov adc lods push (bad) sub sbb xor cmp es adc sub pop imul rcll rex.XB lock loopne cmp movabs sub int outsb rex.RXB pushfq nopl (bad) out xor push pop rex.RX mov je xchg and jmp xchg xor (bad) div xchg sarl pop insb jae movsb and rex.WXB sbb (bad) push and rex.WXB rex.WRXB mov fs xchg je lea testl gs rex.WXB (bad) or out jo rex.WRX cmc test callq mov pop (bad) (bad) xchg sub xchg mov retq (bad) xchg sar mov movsb or out pop in pushfq xchg rex.R lahf loopne (bad) pushfq xchg rex.WX (bad) xor iret jle xchg and rex.WXB lock xlat push push jle mov fimul add rex.XB rex in mov xchg insb jb fstpt rex.RXB xchg int3 pop shrb xor pop jmpq mov (bad) outsl (bad) (bad) mov add (bad) cli jmp ja (bad) hlt add (bad) adc (bad) cld or xchg rex.WXB (bad) imul add int3 xor push push push (bad) push rex.XB rex.RXB lahf sub imul in or retq out rex.WRXB and xchg pushfq rex (bad) adcl (bad) andb cwtl ja mov rex.WXB rex.RX (bad) jnp fwait lcall (bad) (bad) rex.WXB pop mov stos (bad) jge sbb pop rex.RX rex.WRX jb xor pop and (bad) (bad) (bad) rorb stos xchg shr and hlt (bad) rex.WR rex.WRXB pop scas test cli xchg mov cwtl imul push rex.WRXB adc mov and sarl mov adc (bad) (bad) mov scas xchg movlps sbb push jrcxz mov xor mov or rex.XB sbb xor or (bad) xchg (bad) and mov xchg xlat cmc test iret rex.WR (bad) fisubl and test and (bad) xchg je fildl fisubl rex.XB imulb divl cmpb mov fs adc fistpll jl outsl rcrq xchg push pop js pop stos or je push (bad) pop hlt lar xlat mov rex.RX addr32 (bad) add nop sti push pop adc movslq rex.RX mov xor hlt in nop xchg push (bad) add xchg cld mov rolb push movsl lea pop xchg imul mov nop xchg stos (bad) (bad) in xor test pop push add and in out nop xor adc imul add (bad) je fdiv mov nop mov pushfq int3 jne (bad) (bad) rol rclb movabs xchg pushq (bad) (bad) mov push jl push in pushfq (bad) rex.R xchg cs mov out (bad) push mov fisubrl adc or sbb xchg je in xchg je cmp adc sub (bad) xchg nop jbe lea (bad) pop (bad) je (bad) mov mov (bad) (bad) xchg cmpsb (bad) mov and and rex.RX fidivl push rex.WRX es lock cmc mov mov repnz (bad) adc repnz (bad) (bad) je fistl (bad) test (bad) out xor negb push je nop mov gs or hlt add fidiv (bad) rex.RB fdivrp scas mov sbb fstl (bad) push out (bad) push mov int3 out push pop shl (bad) mov notb (bad) lret rex.RXB (bad) (bad) (bad) pop push (bad) add retq add mov ja rex.RB mov xor mov xchg (bad) hlt sub xchg cmpb lea push lock and fs push sbb push mov mov popfq (bad) xchg jbe stos push std (bad) nop jno push adc (bad) retq or xchg fwait xchg or stc rex.WRXB add rex.WR rex.RX jo sbb (bad) scas cli sarb adc pushq mov lret push test push negb (bad) out xchg test cmpsb xchg push test and push incl out xor (bad) (bad) xchg movabs rcl (bad) jrcxz es mov xchg mov nop xchg (bad) (bad) in stos adc (bad) hlt hlt (bad) push xchg lret test mov (bad) mov in (bad) jnp xchg (bad) xchg notl or mov xchg notl cmp and or rex.RB (bad) (bad) ja (bad) (bad) (bad) push mov in (bad) push mov mov xchg xchg and sti xchg xor out xchg adc ja (bad) adc (bad) (bad) xchg push mov nop mov push (bad) fs (bad) and nop xor (bad) jne mov int3 out je cmc cmc popfq jns hlt jle mov adcb testb (bad) cmp push in nop xor es push rcr mov xlat xchg jne (bad) xchg mov nop adc (bad) (bad) adc and jb adc or (bad) and rex.R (bad) insl out and mov cmp jl ja,pn adc rcll xor (bad) mov xchg and push rex.RX cmpsl sbb repnz loopne test out xor in adc (bad) popfq repnz xor xchg sbb mov pushq (bad) mov xchg xor rex.RB xor (bad) xor xor notb jae adc test lods (bad) rol out or push xchg test ja push adc (bad) lea mov push xchg test (bad) ja pop mov add cmc loop push lock sub (bad) pmulhuw (bad) hlt rcll (bad) cmc (bad) mov rclb and mov push jae cwtl hlt hlt ja movsl jg jae adc sub xor notb pushq jne ja rex.RXB adc cmovb (bad) ljmp xchg xchg or hlt (bad) hlt and xchg (bad) mov adc jb mov push push stos (bad) movsl (bad) jge push xchg testl add push and (bad) ss add iret hlt push fsts (bad) xor xor mov xchg (bad) movsb mov cmc cmpsb jo sub mov std (bad) mov (bad) (bad) mov push out movabs ss (bad) jae sbb xchg (bad) and push (bad) (bad) xor sbb xchg jbe add mov test sbb div test (bad) add rcl es xlat movabs (bad) out jae movabs ja pushq push fcom (bad) adc ja cmpsb xor roll (bad) xlat out sbb int3 xor sbb sub std mov (bad) xchg cmc rex.WRX mov repnz in ss mov push adc pop push add (bad) xchg scas movsl scas mov xor sti (bad) mov adcl pop (bad) mov or cmc xor mov push int3 hlt je movsl adc push lahf xchg movsb push div or xchg int mov xchg fs (bad) in mov out out (bad) and hlt xor test cmc movabs (bad) test iret addr32 add push mov (bad) callq je jbe lea or xlat repnz cwtl mov push (bad) (bad) cmc or std xchg jae (bad) in jno mov jne xchg (bad) (bad) jrcxz rex.W push rex.WX mov xlat rep mov movabs mov outsb cmpsl mov (bad) int xchg add (bad) xchg lods (bad) retq jae adc xor data16 movsb scas je mov mov push xorl xchg (bad) (bad) xchg mov stos fs xchg (bad) sti xchg (bad) (bad) (bad) xlat mov push decl cli jne nop adc rex.WXB xchg hlt (bad) loopne rex.R (bad) (bad) push movsb (bad) mov xor rex.RXB adc rex.R mov rclb add or mul (bad) pop push ds add cmp (bad) rcr movsl (bad) (bad) cmp ja adc test rex.WXB lock push (bad) (bad) nop out xchg imul jp retq popq (bad) sub lock iret xor retq adc cmp lock fs mov (bad) jmp fnop movsb add push ror xchg movsb (bad) in lock out and push adc xchg mov sbb xlat cmp add (bad) jo (bad) cld xor clc rex.WR rex.R mov xchg mov push loopne in in callq sbb rex.WR add mov push in xchg rex.R in addr32 mov xlat hlt je shlb xchg lock movabs mov rex.RXB div xchg hlt rex.R (bad) (bad) (bad) int3 (bad) add callq add xchg int push (bad) xchg in (bad) in xor rex.XB mov je lods rex.R test rex.WRB push fcompl (bad) hlt push clc xchg cld (bad) xlat imull in xor (bad) (bad) hlt xchg pop mov lock cmpsl (bad) lock test adc jmp or cmp in sbb rcl mov (bad) (bad) shrb xor data16 mov div xbeginq int3 (bad) push mov or cwtl mov hlt adc xchg in movabs (bad) lea xchg jl add fs (bad) mov cmpsb push mov addb sub xchg test (bad) rex.R bnd fmul (bad) loopne add adc mov lock movabs rex.WR imul mov in xchg (bad) hlt (bad) (bad) retq (bad) and lods xchg mov mov jmpq jno clc cmp (bad) (bad) mov xchg or adcl and cmpsl (bad) rex.WXB rex.RXB push sub lock and mov mov lahf xchg leaveq iret div (bad) xchg xchg in mov iretw adc sbb (bad) lea ficomp mov lret stos lea mov mov mov (bad) mov adc xchg cmp mov or xor xchg pop xor hlt xchg rex.R rex.WX adc pushq stos in xlat cmpsb (bad) xchg repnz callq rex.WR hlt pushq (bad) lock es mov cmpsl xchg (bad) callq in push lea xchg mov out cmp mov rex.WR push fwait jns rex.XB (bad) in mov rex.R lock (bad) test mov pushq enterq xor rex.R adc and (bad) fsubrs decl out adc ror (bad) cmpsl gs jmpq int3 (bad) cmp mov movsl mov cmc cld (bad) shlb lea mov out stc push xchg rcll add int rorl (bad) pushq pushfq adc (bad) hlt xchg cld push sbb jg add mov in rolb adc in adc xchg rex.RXB lock xchg jrcxz sbb lea push rex.RX mov rex.WR outsb add (bad) rcr mov mov in push (bad) mov fs imul mov lock adc cmpsb incb xor (bad) xchg pushq mov in mov (bad) push mov cs add loopne callq clc (bad) add int3 xchg or mov rex.WX rex.RX nop or (bad) mov or enterq jbe not mov div xchg rorl (bad) ja mov lret jnp sub insb (bad) mov (bad) out (bad) testb hlt rex.RXB int push loopne add (bad) (bad) rex.RB enterq pop push adc xchg cld (bad) add pop retq (bad) rex.RX (bad) (bad) xchg int test xlat cli pop push or jl out (bad) (bad) lock add sub (bad) rex.R push lea mov xor xchg mov add adc iret in mov add cmpsl je (bad) (bad) mov jne add rex (bad) rex.RXB pushq cs (bad) test (bad) rex.RX (bad) fcoms es lret (bad) (bad) adc lock rol xchg cmc jmp lock push add mov adc xchg ja push repz mov push xor sbb xchg rex.WR lock (bad) or test sti (bad) (bad) lock adc hlt jns jge xor xlat out fs mov mov mov hlt rex.WRB push mov mov (bad) rex.RB callq rex.WRXB out mov cmpsl (bad) lock rex.WB (bad) loopne rex.RXB xchg test xchg rex.WRXB xchg sti enterq in xchg push xorl (bad) mov jno (bad) stos xchg (bad) mov adc mov data16 (bad) neg mov (bad) clc and rex.R hlt xchg xchg pushfq cmp mov mov adc clc push push iret enterq rclb (bad) add jle,pn test js xor xchg (bad) rex.WRX lock pushq int xchg lea mov (bad) (bad) xor push mov notb xchg sub in xchg or cmp push sub and xchg mov (bad) clc adc mov cmpxchg (bad) xchg mov pop shlb (bad) mov test (bad) mov add or (bad) mov (bad) callq xor int3 enterq rex.RXB je (bad) pushq loopne ss divl in mov sarb iret add and cmpsl push int3 mulb push add fnsetpm(287 scas int3 rex.WB icebp (bad) loop mov fnsave lods adc cmp rclb jb fs loopne add xchg mov fsub mov adc xor int3 divl pop or xchg (bad) movabs test (bad) out out outsl xlat xchg rex.RXB push imul adc lock adc pop add (bad) and in cwtl fs adc mov (bad) hlt jp (bad) mov callq setne (bad) hlt and xlat or and in (bad) std adc (bad) mov mov fcoms andl xlat (bad) and hlt (bad) rex.WRXB shlb rex.RXB lock (bad) adc push std adc stc or hlt (bad) jno push in int3 lock (bad) mov pop push (bad) lahf iret rex.R add push lock idivl div push jmpq movsb (bad) (bad) repnz outsl cld imul xchg in and in xchg jo vshufps movsb push adc rex.R rex.WR movsl fs mov add or adc (bad) fsubs push pop rex.WR popfq outsl xor roll mov enterq (bad) push out (bad) (bad) (bad) or xchg (bad) (bad) lock mov push xchg xlat xor lea rol xor int es (bad) mov shr lock add movl adc rex.WXB push pop xor rex.WR push testl movsl testb rex.WRXB movabs in lock mov adc in (bad) (bad) jbe xor adc ss (bad) rclb xchg loopne sbb (bad) adc xchg clc xlat cld movslq testb rex.RB data16 test cld (bad) (bad) enterq cld int3 cld (bad) rex.WR mov mov cmp mov xchg xlat jae adc insb add (bad) xchg push mov ja lea mov nop callq push (bad) (bad) (bad) (bad) jge enterq mov (bad) in mov (bad) mov in in xchg out xor adc push lock lock xchg fldt data16 push add (bad) mov xor (bad) (bad) xchg xor push mov (bad) pextrw (bad) (bad) (bad) xchg push push jg (bad) push lock (bad) (bad) xor scas xchg rex.R mov rorb xlat movsb (bad) (bad) rex.WRB rex.RXB lock (bad) callq (bad) rex.RX (bad) in push push js (bad) mov mov hlt adc jno xor push fxtract cmp add divb add lock push iret add mov (bad) cmp ja rex.B pop push xchg int hlt rex.RX hlt xchg add or fbstp push xor mov pushfq (bad) (bad) repz sub push lock (bad) testb and scas xchg (bad) in and push pop rex.RB (bad) movsb (bad) jo rex.WXB test hlt mov xor (bad) jmp (bad) rex.WRXB out xchg adc push add imull cmp xchg out stos cmp scas (bad) (bad) je xchg test negl mov icebp fdivrl mov out pop clc mov jne in or mov xor int3 callq adc or div (bad) (bad) std xor add xlat (bad) or in xchg movsb test rex.WR lock jno test xor lock mov orps rex.RB test or nop test jnp (bad) xlat rcll pushw xlat movl insb (bad) gs in sahf movsb (bad) stos movsl (bad) test and loopne (bad) (bad) lock out xchg xor adc push pop test mov xchg (bad) (bad) fs (bad) (bad) jbe rex.W push pop adc fisub jne mov (bad) (bad) hlt fcmovnb test lods xchg movabs leaveq iret out (bad) in pushq xchg mull movsb test fidiv mov mov (bad) adc movsl xor (bad) sub mov movabs out add lock mov (bad) movabs rcl jge rex.WRX jo cld mov es (bad) mov (bad) test fwait movsb mov rex.RXB mov mov adc orl push lock lahf gs in push movabs (bad) mov in fs lock ja rex.WRXB (bad) jo mov mov (bad) lock xchg loopne rex.RB callq adc (bad) (bad) in add adc pushfq adc (bad) mov jp (bad) adc push rex.B rex.WRXB cmpsl xchg setg pop push jo es out hlt mov adc cld adc or (bad) hlt (bad) push mov xchg xor xor push or adc test cmpsl cmpsl xchg cmpsb rex.RXB test in movsb jo (bad) jno (bad) enterq fisubrl xchg lock out (bad) in jl hlt out cmpsb rex.RB rex.RB (bad) ja cmc nop movsb test (bad) (bad) notl loope push (bad) or je (bad) lock xor out je mov lret rex.R xchg (bad) jg cmpsl or push cmc (bad) jo movabs xchg movsl (bad) ficom (bad) (bad) (bad) (bad) rex.R je add sub lock xor movabs xchg xchg test (bad) xchg add (bad) repnz clc push adc adc retq hlt (bad) (bad) out rex.RXB (bad) (bad) push push xlat (bad) in lock mov (bad) xchg push jbe ja rex.WRX (bad) mov mov mov enterq movsb cmc cmp jge callq mull mov sub fistpl add sahf jbe cmp lret xchg rex.R jnp (bad) mov cmp hlt push callq xchg rex.WRXB fwait hlt test fisub rex.WXB xor imul add pushq fs push nop notb (bad) repnz fdivl (bad) lock rex.WB rex.RX (bad) bnd rex.WR xchg jae (bad) jmpq jp std (bad) xchg xlat lock (bad) mov add jo cs in (bad) xchg movsb (bad) adc push rex.WRB xchg (bad) es mov or adc lods (bad) and mov mov in pop cs decl fildll mov loopne cmpsb and in test hlt test clc xchg scas or xor rex.WRB (bad) sbb cmpsl ja or hlt fldt repz or jrcxz (bad) pushq mov ja gs lret in js lock test movabs int3 test lock add rorb adc or ja in iret (bad) neg shl xchg in rex.WRXB xchg mov (bad) mov es push test iret push xchg push pop rex.WR test neg (bad) fmull mov cmpb (bad) out repnz enterq xor (bad) in xor xlat mov or in movsl add (bad) movsb sbb adc ds rex.WRX (bad) mov or rex.RXB hlt rex.R adc cmpsq je mov cwtl shrb jrcxz xchg mov mov in rex (bad) (bad) mov jo mov pop ja rex.RXB (bad) xchg fstps repnz lods xchg imul xorb push rex.XB pushfq (bad) (bad) jnp add mov mov (bad) and callq (bad) push data16 hlt test idiv ror (bad) divb (bad) (bad) lock or fs mov jmp (bad) rex.R addr32 hlt rex.WRX movsb mul (bad) in (bad) movabs (bad) jge pop roll rex.R (bad) adc xor rex.R (bad) xlat mov callq jbe ja rex.WXB lock jg pop out xchg test xchg es sub test mov add push mov add hlt mov rex.RX rex.WRB rex.W std je xchg pop hlt (bad) pop rex.RXB add es lock testl movsl jmpq (bad) fcoml xchg xchg addl in lock jnp jle mov repz test hlt add xchg (bad) (bad) hlt xchg retq rex.W movabs push test hlt (bad) jnp (bad) (bad) xchg (bad) fsubrl (bad) xor rex.RB int3 test icebp cmpsl fdiv cmpsl adc mov iret push push rex.WX lock jnp and or or xchg or hlt (bad) jb rcrb xor (bad) imull lock (bad) in push lock sbb add (bad) ss xchg es adc (bad) rex.WRX or in xchg jae xchg shll add hlt adc je rex.RB hlt xchg (bad) (bad) sub xor xchg or rolb xchg xor adc push add hlt in movsb (bad) add push loop fs test enterq fadds mov add rex.WR lock xchg lock (bad) (bad) (bad) pop rex.B mov cmpsb mov subb not xrelease xchg xchg (bad) cld pushq lea xchg adc (bad) (bad) leaveq hlt jge (bad) (bad) enterq andb (bad) adc lret cmp xor mov push push not loopne imull out (bad) (bad) mov pop rex.RXB (bad) (bad) imul insb fs movslq (bad) lock loope (bad) jbe rex.RXB rex.R xor mov test jns jl pop mov xchg and adc and (bad) fisub or push pushq mov cmc mov mov hlt lods rcll in or (bad) mov test rex.RB (bad) and test (bad) pop sbb jae fcomi (bad) mov xchg mov xorb imul stos xor roll mov and mov repnz imul icebp lock imull lret shrl fbstp mov mov fbstp popfq popfq movb or adc adc (bad) mov push outsb (bad) out mov (bad) rex.WR cmp (bad) mov add (bad) rex.R adc mov jo mov (bad) rex.WR rex.R hlt mov movsb in (bad) add push repnz callq test lahf pop jge scas int out mov sub shlb push rorl push xchg lret in (bad) lock gs lea sahf xor rclb fs xor cmp (bad) mov (bad) adc outsl rcl (bad) jo (bad) shlb (bad) mov add xlat repz sahf xchg jnp mov in sub (bad) lock cmpsb ja lret rex.WR int out out jb (bad) lret xchg adc xorb xchg (bad) jae rex.RXB rex.WX mov add fcoml rex.WRX and pushq xchg cmp rex.WRB es (bad) jb setb push (bad) data16 sub mov (bad) hlt mov mov adc jl push ss mov push adc (bad) (bad) (bad) cmc push fistl xchg not pushq sub shlb rex.RXB rex.WX rex.RB fild pop jae out movsb (bad) iret cld mov lods xchg mov in xchg (bad) repz or and movsb (bad) adc push iret mov cmp xlat add cmpsb (bad) test cmc jno test rex.RXB roll xlat je movabs jbe mov xchg in dec or xchg fsubr rex.WRXB fdivp add or (bad) mov (bad) (bad) rex.RB nop (bad) (bad) (bad) test in pop push imul (bad) (bad) (bad) jo push (bad) and push rorb test add repnz sub in adc jb rorb xlat pushfq xor repz in rex.WXB rex.RXB and data16 adc push lock pop xor fadd mov xor mov lock xchg rex.WRXB rex.WX xchg hlt rex.R fcoms outsb mov addb data16 jns fs jne mov mov hlt rex.WRXB mov mov gs hlt int xchg movsl mov xchg hlt sub ss in retq hlt lret hlt (bad) adc rex.WR mov (bad) movabs in (bad) loop (bad) stc ja test pushfq mov (bad) jae (bad) mov cmc rex.RXB fisubrl std (bad) insl test mov adc rex.R adc es xor (bad) push push xchg (bad) sti addb mov fcmovnb mov jmp (bad) adc (bad) xchg cmp and stc xchg gs push push cmpsl fs cmp jo data16 cmc out ja jae imul in cmc hlt in (bad) xor fcmovnb lods mov hlt adc or (bad) (bad) mov stos (bad) (bad) or (bad) rex.WB (bad) cmc hlt (bad) repnz (bad) (bad) jo add int3 iret movabs nop jae mov (bad) jo add hlt cmpsb xchg notl (bad) rex.RXB repz jbe stos lret movsb (bad) mov (bad) mov xlat rcll mov adc xchg in pop mov rex.WR (bad) movsb mov jne or rcll pushfq repz enterq (bad) test push mov retq hlt rex.R data16 rex.X rex.WXB jmp rex.WRB nop jrcxz jo mov out rex.WRX xor sub pop ja xlat xchg (bad) (bad) rol mov rex.WRX in push and mov (bad) xor scas movsb push test jbe in insb scas fidiv jnp xlat fsubrp movslq xchg (bad) pop (bad) fildl push (bad) in lock rex.RXB div mov cmp rolb rex.RB xor xchg sahf xchg xchg imul mov or push pop lock xor in lods (bad) (bad) mov lret push fisttp mov orb insb adc add (bad) repnz callq (bad) lea xchg rcl lea pushq (bad) jno (bad) mov add rex.WRX xorb mov notb test xchg rex.WR mov (bad) movsb int sti test mov xchg mov mov jo je out mov xchg add in test or pop rex.RB rex.RXB xor fbstp add ror add adc adc pop hlt xorl in add test xchg xor mov push (bad) cmp je (bad) hlt push mov mov hlt fs (bad) loopne je int3 mov xchg rex.RX mov cmpsl ficom jnp (bad) xchg add cmp hlt push and (bad) (bad) jge (bad) mov push add movsb jns push xor (bad) xor adc xchg or fmull xchg je jo rex.W (bad) out push or xlat (bad) xlat out (bad) mulb xchg sbb rex.RX cmpsb std mov in adc (bad) rex.WXB xorb mov test adc or rcll pop jmpq int3 nop test out callq in roll nop (bad) ds div hlt repz xchg (bad) in (bad) lock (bad) or stos int3 lock mov test rex.RX xchg in rex.RB and fs (bad) in movabs ja int3 movsl xchg test (bad) cmc push sarl (bad) push rex.RXB xor xchg fcoms or and mov push add sbb out adc gs cmc adc movsl out (bad) add cmp (bad) in jo (bad) sarb mov add (bad) sti rex.WX rcrb mov (bad) (bad) xchg xchg jl pushfq adc (bad) shr cmc out rex.RXB rex.W rex.WR rex.R push (bad) xor (bad) mov (bad) iret insb xor stos pushq (bad) out loopne testl (bad) movsb jo sub (bad) iret mov (bad) movabs xchg cmp (bad) stos mov hlt xor jp xchg and xlat cmpsl (bad) lahf and shlb or leaveq rex.R hlt jmp cmp repnz lods test retq or and xchg cmp xlat mov xor rex.RX (bad) (bad) cmp (bad) adc rclb xchg xchg jmp jbe rex.WXB xchg out push out mov xchg insb int3 xchg mov xchg xor or callq hlt xchg adc ds (bad) std (bad) lock jle xor gs sub add push (bad) or enterq mov (bad) (bad) cmc cld in test mov rolb movsb mov sti add xchg push cmpsb int3 imul fidivrl push callq (bad) (bad) (bad) insb callq scas wrmsr and movsb fwait (bad) cmpsb fs (bad) (bad) (bad) sbb mov (bad) xor mov (bad) xor (bad) (bad) js and repz jbe mov jrcxz (bad) loop nop add xchg add enterq pop nop (bad) rex.R cmp (bad) divb (bad) and sub loopne rex.WRX stos mov in cli lock (bad) push in in (bad) loop jp ss fcoms (bad) btr icebp (bad) (bad) lock scas (bad) lret (bad) mov mov or in paddb ss in movsb test addr32 jle cmc and adc scas and xor cmpsb xchg hlt rex.WB jge (bad) test rex.WRXB addr32 insb clc mov int3 (bad) rex.WXB ss (bad) data16 fsts stos iret adc addr32 add adc mov (bad) rcl fs push (bad) out (bad) mov fnstsw scas mov push jmp (bad) push add imulb cmpsl push icebp cmp (bad) movsb (bad) insb (bad) shlb (bad) (bad) (bad) divb lock add cmp adc (bad) movabs jl push mov mov lock movsb sbb vcmpps xchg mov cmp rex.R lahf (bad) cmpsb (bad) loop in xchg mov lock (bad) or (bad) je (bad) (bad) xchg test icebp cmc rex.RX movsb add jae adc (bad) icebp fistl out adc mov out int repz xchg cwtl (bad) rex.W rex.RXB mov xchg mov add push (bad) nop iret push in imul (bad) xor mov jae (bad) mov mov adc icebp mov repz mov (bad) hlt xor in (bad) lock (bad) in (bad) (bad) mov rex.WXB addb xor icebp mov jb add hlt rex ja pop add sbb lock movl add imul xchg enterq (bad) movabs (bad) movsb xlat adc xchg mov (bad) mov mov stos movabs (bad) adc adc (bad) (bad) lock adc notb (bad) mov (bad) (bad) jp (bad) jg or rex.RX repnz callq negb (bad) (bad) rex.WX movabs (bad) push jge (bad) (bad) repz sub je mov enterq push (bad) out test (bad) mov adc or cld adc movabs xchg add rex.RX sbb (bad) mov add out sbb lret mov mov mov addb mov sbb mov fs add in add movsb (bad) incl mov insb je (bad) pop xchg mov (bad) mov (bad) movsb insb xlat (bad) (bad) lahf sub mov rex.R (bad) scas (bad) jae or in adc jo cmp (bad) movabs or shll add (bad) or adc push xlat sbb (bad) mov fcom lahf mov (bad) repnz adc xchg pop (bad) (bad) fcomi in rex.WR repz test cmc cwtl (bad) (bad) jmp outsl retq xchg rorb xlat (bad) xchg movabs (bad) rex.R rex es lea jne mov enterq (bad) rex.WRX rcrb push xchg (bad) mov jmp hlt (bad) enterq lret lock (bad) (bad) cmc movsl (bad) lret int and mov and out push mov lock je mov sbb (bad) (bad) xchg cmpsl (bad) outsl lock cld push and fcoml cmpsb cmpsb sahf test testl and int3 push data16 (bad) xchg hlt mov movabs xchg rex.RX and xchg sahf and (bad) mov rex.RX adc rex.WXB lock add addr32 (bad) push push hlt (bad) jmp and mov push in out movabs xchg jne (bad) js iret rex.RX movsb gs rex.X shl testb mov fucomp lock js imulb rex.RXB mov shll sti (bad) mov test and fdivrl rex.WR (bad) fist xor loope (bad) xchg pop xchg (bad) cld rex.WRX and (bad) fs xchg js jnp fcmovbe in sub (bad) int3 je retq lea callq mov sbbb push idiv sbb and mov push mov jle sti xchg mov (bad) test xchg fs (bad) xchg push in out sub lret rcl mov movabs addr32 lcall (bad) ror int mov jg repnz in cltd iret or ja cld hlt jl notb adc (bad) add (bad) (bad) (bad) fcompl (bad) imul cmp (bad) xor int fcomip cmpsl adc rex.RXB push (bad) jnp shl push (bad) ja (bad) hlt movsl (bad) adc (bad) cmc rolb rclb repnz xchg cmp insl jmp hlt callq test in pop jle fwait push mov add pop cmp (bad) and hlt js notb scas pop (bad) js or jg lret mov (bad) mov movsb xlat mov adc push lea sahf (bad) mov (bad) (bad) out (bad) cmp cmpsb add rex.WRXB je pushfq mov pushfq jmp (bad) mov rex.WXB mov add mov push rex.B rex.WXB rex.RXB rolb xchg rex.WB cld rex.RB notb out (bad) (bad) stc test pushfq vpshuflw movsb jno test xor adc (bad) lea (bad) (bad) adc xchg mov fcmovbe (bad) rex.RXB xor xchg (bad) sub (bad) hlt repnz lock int3 rex.RB rex.R je fcmovnb jns out scas or (bad) movsl test shrb lret adc test pop rex.WR callq in cld adc mov nop movsb cmc and (bad) in push addr32 es mov mov rex.R lock push (bad) fcmovnb (bad) jbe lret hlt xor rex.WR rex.RB lock (bad) jae xchg (bad) sub (bad) test hlt xor or fadd mov stc (bad) sub test scas div mov (bad) push or in xchg push (bad) and jo mov lock jae (bad) scas out mov lock je leaveq retq (bad) (bad) rex.WB (bad) jp mov jmpq mov pop bnd mov hlt sbb cmc out (bad) hlt fadd adcb and or cmpsb not addl or mov (bad) xlat rex.WRXB rex.X add int3 or cmpsb (bad) push (bad) and cmpsl jo push lea (bad) repz mov xor xchg push adc add test movsb pop add mov (bad) movabs mov lret in (bad) out xchg es pop (bad) nop (bad) xchg pop jmpq xchg (bad) or notl and and xchg addr32 cli (bad) lea xchg push mov vmovups (bad) divl mov sbb (bad) cmp test callq push jns or mov callq fsts stos je push push test xchg adc rex.WR xchg jb (bad) pop push addr32 (bad) neg or in leaveq xchg rex.WB (bad) and jbe adc xor and adc mov (bad) add fisubrl push mov rol xchg scas (bad) cld in lock fbld iret rol jp lods ja mov fs and xor int3 (bad) (bad) enterq mov iret (bad) scas (bad) lods adc xchg jle adc xor fcmovnb mov mul mov fldl js rex.RXB xchg adc std cmc mov insl scas cltd xor pop mov insl lock sbb movsb xchg mov rcl adc pop add (bad) lret in (bad) lock (bad) fld (bad) xor mov xlat repnz adc pop push xchg pop jne or and (bad) (bad) jo stos (bad) pushfq movabs fcoml je jmpq jmpq je add (bad) movslq pop movsb movsb (bad) cmp shrb movabs pushfq cmpsb movabs adc (bad) rcl int3 adc cmc (bad) xlat fmulp push fidivl in jo (bad) mov jo,pt shl cltd out callq lock lea pushq pop fist mov gs pop or (bad) xchg (bad) (bad) and in (bad) mov jns (bad) mov mov ja (bad) add adc stos insl and push adc or xchg insb mov mov pop (bad) push push lret (bad) lea and (bad) mov (bad) lods rex.WRXB rex.RB rcll cmp (bad) gs pop (bad) mov rex.WRB gs subl cmpsl (bad) movabs (bad) adc (bad) (bad) out (bad) out in adc jne mov push cmpsb push (bad) (bad) mov cltd mov hlt ffreep in rex.R cmpsl add es sti (bad) fld (bad) xor pop je xchg rex.X (bad) mov push add mov hlt sub test (bad) (bad) xlat add test out lock movsb jne es xorl rex.RX rcr enterq push lock pop out adc push push cs (bad) movabs movabs (bad) rcrb in lock push xlat rex.R (bad) rex.RB rex.RXB jne cwtl in mov mov mov (bad) iret rcl xchg movsb (bad) out add xchg push push push js and lahf rex.W (bad) rcl out ficoml (bad) mov add mov repnz (bad) sbb loop js rex.WR fs (bad) xacquire (bad) adc cmp fdivrs xor fdivrl test xchg pop (bad) rex.RB mov push stc mov rex.WRXB xor movsb in sti lods (bad) out (bad) rex.WXB fildl xlat (bad) xchg xor (bad) je,pn pop repnz int3 insb mov xchg int add xor mov rcrl (bad) rex.R loopne or mov addr32 push hlt adc xlat rex.X cmpb adc pop rex.RXB sub xor lods out rex.RXB and xlat xchg (bad) out (bad) rclb adc in mov and out iret out data16 mov jmpq push movslq fdivrp mov mov add jnp lahf leaveq mov mov xchg mov fcomip lret or xor test (bad) push rex.WRXB mov pushq (bad) rcrb xchg adc (bad) rcr imul jrcxz (bad) xchg push mov xchg (bad) out adc fadds push (bad) fld (bad) (bad) out xchg (bad) xchg lods fisttpl mov imul lea cmc addr32 notl (bad) sbb cmpsb xchg not stos (bad) sbb test je div xchg rex.RXB rex.R (bad) out movsl iret retq cs (bad) push gs adc jnp (bad) retq push mov out callq out (bad) jbe (bad) xchg xchg pop (bad) int3 mov or jo int3 enterq fisub lods adc lret push rcl test movsl mov rex.WXB repnz and jge (bad) (bad) and jmp int3 xchg sbb out sub fcomip push (bad) adc lret jno iret (bad) fsub (bad) jb in pop cmp push xchg add shlb mov jno rex.RX repnz rex.W add (bad) adc test mov stc jae push test mov jle lret fsts in sub (bad) or push rep cli fdivrp stos mov adc out rcr mov pushfq jle pushfq pushq rolb (bad) insl and mov xchg sete out push sti jg add rex.WR rex.WRB (bad) or push cwtl hlt xchg push cmpsl mov stos test pop nop add (bad) (bad) repnz mov push test test mov callq ja (bad) (bad) incl rclb mov (bad) (bad) mov loop adc sub xor add jl add je jne rex.X adc jno xor hlt add xchg iret (bad) mov cmp (bad) (bad) rorb (bad) rex.WR mov outsl mov xchg fist jo hlt (bad) (bad) rex.WRXB (bad) or xlat push (bad) lea movsb mov rex.WR repnz (bad) cmp (bad) jmp jge scas mov pop mov out push out xchg mov (bad) test out xchg (bad) (bad) repnz scas in (bad) retq and out push mov and lret rcl adc hlt rex.W push std out adc (bad) (bad) xlat hlt cmc xchg out (bad) in test (bad) (bad) rex.WB nop (bad) out or repnz xchg out out (bad) repnz clc in cs loope rex.RXB push adc push and pushq (bad) (bad) mov rol int3 pop add loope lock test out xchg (bad) or movsb (bad) mov out sahf rcr pop shl outsl cmc mov add pushq jmp (bad) pop add rex.RXB lahf push pushq xchg (bad) std sub pop mov (bad) (bad) roll or (bad) (bad) (bad) mov (bad) rolb rex.X rex rex.WRX xor out cld stc (bad) sti fdiv (bad) mov pop and (bad) add (bad) in (bad) xor xchg callq movsb or mov xor movsl push xchg stc xor push icebp sub out test add xlat decl sahf jmpq jo (bad) out iret rex.WX stc outsb idiv xchg (bad) std xchg (bad) rex.WB xchg (bad) lahf rex.WR mov (bad) mov push cltq hlt push cmpsq mov mov lea xor negl lea push cmpsb pop sahf add notb (bad) hlt mov xlat cmc in push jo sti cmp (bad) cmpsb adc (bad) (bad) movabs cmc (bad) xlat (bad) jo andb jl fsts xchg add xchg (bad) (bad) mov andb sub xor hlt mov rclb in (bad) hlt xchg test divl jo (bad) shrb mov sti cli mov mov stc rex.R pop repz mov push out andb cmp mov rex.WRXB xchg icebp retq (bad) mov icebp cli hlt push cmc (bad) icebp (bad) adcl ror xchg pop rex.WRB addr32 mov decl fidiv (bad) fcom icebp (bad) fldenv mov (bad) test jmp mov cmp fwait (bad) lea lea jo xlat rclb in rcl mov iret test push (bad) pushq js cmpsb or jmp rex.WRXB rex.RB test mov or (bad) adc (bad) xlat (bad) rex push in divl cltd rol mov fisubrl mov or (bad) add xlat xchg jo (bad) idivb xchg not shl rex.WX mov or movslq push pop insb mov lea out lods sahf xchg xor (bad) mov repnz int rex.WRB adc rex.W xlat test add mov icebp (bad) xchg and sub (bad) callq bnd out fstpt out push xchg lea push out mov cmp jo vpaddq adc movabs rcl cmc xchg jb es ds (bad) ficomp cli (bad) data16 jnp (bad) fnstenv nop sahf lret and repz clc (bad) mov add push push add and int3 (bad) mov xchg cmp mov xchg push data16 rex.WRB (bad) jo rclb mov adc mov adc rex.R xchg rex.WRX mov push xor lahf (bad) jge nop iret ja (bad) push jae (bad) (bad) outsl notl mov shll xchg mov (bad) scas xchg xchg shrb (bad) (bad) jo out mov push push mov jle add push (bad) pushq icebp repnz (bad) cwtl jle test rex.WR (bad) je (bad) jns add mov (bad) jge (bad) xchg mov retq cmpsl popq (bad) retq rorb push or pushfq add cld repnz xchg sbb and sbb xor rcl jg repnz rex.RXB (bad) test add mov rex.WR fs mov enterq (bad) movsl (bad) out (bad) pop rex.WXB lock jbe mov xor ja rex.WRXB rex.XB lahf lock ss ja movsb sub mov lock xchg (bad) test sub (bad) leaveq (bad) mov (bad) adc xchg push push (bad) xor push or repz xorb rex.RXB rex.W rex.R add fcomip xlat (bad) rex.X fmuls cmp in fcmovnb (bad) cmc stos shrb (bad) xor or sbb movsb add xchg xchg cwtl adc (bad) cmp (bad) sbb cmpsb (bad) pushq cmc (bad) xchg sbb addr32 imull andl je push repnz insb mov int3 pop add imull xlat in (bad) (bad) (bad) mov or shlb xchg xchg fldcw add lock mov (bad) rex.RXB xor xchg loope and mul mov lock sti (bad) lods (bad) pushfq xor rcrb and mov notb push (bad) out push pushq lods mov push jne rcll movabs mov ss (bad) xchg test mov (bad) nop xchg add or xchg jge jbe nop rex.WRXB je not or jo movabs push sbb hlt (bad) xor jo out xchg (bad) cmc fadds push lret (bad) sti jbe je push nop je mov cmc xlat xor (bad) xlat lock (bad) test (bad) (bad) xchg jl xor in (bad) (bad) (bad) sbb out (bad) jne out adc fdivl push movsb adc ds xchg fldln2 iret xor jle (bad) lock push mov rolb int3 and fcmove lea xchg lods (bad) mov mov (bad) rorb adc mov lahf movslq adc push mov ficom leaveq sub and idivl xor (bad) leaveq stos jmpq sub push mov (bad) fsubl cmpsl (bad) rex adc movabs stc (bad) out (bad) stos adc mov ficomp push cmpsb sti test movsb mov rcll je add sub int3 cmc mov (bad) xchg (bad) pushfq outsl adc retq movsb cwtl stc js (bad) add or int pop (bad) ficom pop xor repz xchg test sub pushfq and or or lock or jo adc rex.RB mov test jg (bad) and fs cmp sub hlt clc mov pop popfq rex.WXB jo callq (bad) fldenv cmc int3 or (bad) (bad) clc adc hlt jle movsb in fdivrp mov sbb negb push rex.WRB in rcrb movb movsb xor sti mov (bad) movsl rex.WRXB xor scas fdivrp js testl or rex.RX movsb xchg sti decl fmull movsb (bad) (bad) xlat mov xchg jg (bad) std stc mov ss mov push or out add nop hlt rorb test out insl mov test movsb xchg fdivrp (bad) mov xor out mov or rex.RB jno mov or mov push addr32 (bad) fdivrp (bad) mov test loope sti lahf mov (bad) xor mov mov fdivrp popfq mov shrb (bad) test rex.WRXB xor and jl mov in lea adc and (bad) (bad) rex.WRX cmc jle cmpsb rex.WRXB (bad) movsb push fdivrp jg scas (bad) div sub pushfq (bad) push in cmp hlt mov test movsb rex.WRXB jg xlat rorb pop rolb jne (bad) mov or idivb jle lret scas hlt mov sarb cmc lahf test rex.WRXB test cmp xchg xor out std jle sti push mov test movsb je sti xchg mov rolb lea int (bad) fdivrp mov test mov or rex.R movsb mov retq fstps pop lea mov push (bad) in mov test xchg xor movsb rex.WRXB lahf mov shlb lea mov sti in mov shrb scas jbe out rex.WR pop xor es pop (bad) (bad) scas mov push xchg ss loope adc sub in cmc out (bad) mov xchg xor movabs (bad) jne xchg or mov pop jbe div mov rex.R mov cs in fcomip xchg je adc adc in sbb (bad) xchg hlt mov rol cmc test je out popfq fdivrp add cmc (bad) test rex.WRXB mov pop out (bad) fdivrp (bad) mov (bad) cmc mov gs cld adc jo hlt rcr cmc adc iret jo in or test movsb push jo hlt (bad) add sub sub (bad) in pop hlt xchg push cmpsl add cld cmpsb insb fist (bad) (bad) xchg movabs mov or sti (bad) mov rolb rex.WRXB xor movsb loopne sti mov mov movsb in sti add faddl jle lret cld hlt jo mov int in (bad) mov mov shrb lcall movsl push mov sti xlat mov rex.WRX lret (bad) insb scas xlat in xchg xchg (bad) decl rex.WRB (bad) pop xchg adc movabs imul pop pop xchg test (bad) fisubl mov adc pop pushq cmp or repz lahf (bad) push nop rex.R test (bad) rex.WR sbb js push sar or fwait cs movslq mov xchg je adc xchg cmp sub add (bad) rex.WXB movslq cmpsb pushfq xchg outsb adc sbb adc iret xor in adc stc push imul cld push mov sti push (bad) cmp and out sbb mov xchg pop rex.WX mov rex.B rex.RB or add mov (bad) add push rex.R rex.X pushfq adc sbb je pop and (bad) (bad) xchg rclb adc insb (bad) xor movsl lea (bad) (bad) ja test movabs fdivl cltd add cmp add add sub xor xchg (bad) or movd sbb loop (bad) sti adc lret rex sub cmp (bad) popfq xor jl (bad) mov xor fidivr je xorb sahf stos (bad) ljmp xor sbb flds xor push rex.R pushfq (bad) push rex.WRXB sbb (bad) cwtl push push leaveq addr32 rex.WR or mov pushq jmpq (bad) mov mov pop jb fst jbe out int xor out or mov icebp ss repnz test adc push xchg js in addb xchg callq cwtl imul pushfq or sbb out outsl adc stos pushq pop (bad) xchg (bad) pop mov (bad) pop xor loopne cmpsb lahf add push mov imul out jns je sub (bad) movsb mov (bad) cltd (bad) std mov (bad) mov cmp in pushq gs adc addr32 adc rex.WRB (bad) adc or retq pushfq adc iret mov loope sbb fimul jbe (bad) out clc adc sub push retq adc or clc vmread xlat movsb mov rex.X adc push sub jns cltd cmp rex.WRB adc adc fistpll test lret in rex.RXB adc jb faddl xchg outsl jrcxz pop movsb roll mov in sahf callq xor out rex.RX xchg cmp sti scas jp push fsubs push add mov xchg rcrl (bad) movabs (bad) fs scas (bad) int3 (bad) in (bad) rex.WRX (bad) divl loopne nop or sbb lods add clc out or cmp push mov clc (bad) loopne rex.RB mov (bad) rex.WXB out in test lret cwtl enterq repz pop push jrcxz pop adcl xchg sbb rex.WX mov (bad) (bad) js mov retq mov xchg fldcw movabs out clc mov (bad) cmp adc xor and jne sub or mov outsb (bad) adc cmp imul sbb jno (bad) rex.WRB rex.WXB pop rcrl cmp ficom jnp rex.WX adc mov jae mov movabs imul je (bad) mov nop rex.XB (bad) jnp popfq jmpq mov pop pop adc int3 test mov (bad) callq (bad) xlat sahf rex.WX jrcxz,pt rcll test out rex.XB rcll rex.WRB movabs rex.WR gs out adc jae and mov add mov jge movabs fisubr cltd lret adc mov pop (bad) adc xor mov jb adc fnsave adc add nop jle adc or adc js data16 jno rex.R sub pop add mov lret inc adc int xchg mov mov fcoml xor mov xchg je jbe adc mov add adc in retq fdivs pop (bad) enterq fisubrl mov adc callq and imul xchg leaveq lret mov (bad) rex.RX clc adc sub push cmp (bad) out (bad) xor rex.XB pop mul cld vmovss adc (bad) mov retq pushq adc repnz imul adc mov lahf jmp repz cli in sbb rcll retq rex.WRXB and rclb fisttp (bad) rex.RB sub sub jae jmpq sub or jno push lods insb cmc test fcompl popfq mov or xchg unpckhps shll push cmp xchg rex.RB or imul (bad) cwtl fist jno mov adc push mov add adc sbb xchg xchg movq mov adc insl fsubp retq adc xor adc (bad) adc jrcxz mov (bad) or jmpq insb rex.WRXB sub imul jne adc mov add adc add (bad) enterq pop rex.WRXB (bad) adc pop rex.WX sbb rex.X (bad) xchg fnsave fwait adc xlat or adc sysexit repnz adc es callq loope jb xchg movabs and (bad) xchg rex.RXB rex.X adc rex.RX insl (bad) rcll callq push lods out sub cmc sbb pop fcoms adc pop sub rex.X push lods adc jp xchg or or (bad) rcll rex.WRB jno xchg int xor rex.RX rclb adc scas rex.RB xor adc xchg out movsl out (bad) pushfq and cmp cli xchg xor cld mov (bad) (bad) xchg cs and sub sbb adc mov jmpq cmp xor lea test mov imul adc mov in nop clc mov clc xlat stos jae scas adc ljmp loope pushq stc jg add lods and mov push (bad) out repnz movsb callq rex.XB (bad) fucomp adc std add sub (bad) sub and xor mov xor gs adc push adc (bad) rex.WRX mov xor lahf stc mov rex.RXB clc mov adc mov repz movabs data16 (bad) scas adc test cmc or pop (bad) retq rex.RX fsubrl loop cmpl push (bad) mov rcr fcompl (bad) sub lods xchg jl shr xlat movsl cmp xor cmc and int3 rex.WX (bad) or mov (bad) push add out (bad) (bad) adc je mov movabs mov fs addr32 movabs fcoms push callq adc mov test popfq (bad) pop scas repnz mov adc sar xchg and xchg adc mov (bad) shrl add adc push fisubr adc (bad) mov xor movabs adc insl add mov adc test pop adc sbb stc jle rex.WRXB leaveq ficoml sub cmp fcoml jbe adc sti (bad) xor jg (bad) (bad) cmp xchg mov insl mov (bad) enterq sub loope imul cmp or movabs add or xlat sub or cld adc (bad) jmpq mov sbb jnp std or sub push lods adc xchg mov (bad) shll icebp stc and incb push rex.WX rex.RB and cwtl jns movslq (bad) fadds adc (bad) push rex push jno movabs cs adc adc clc rolb jge or cmp orl lods test rex (bad) mov clc stos cmp rorb jp (bad) (bad) lock add xchg (bad) adc popfq out sbb cmp push movsb int3 test test fnsave xor (bad) mov rex.WXB rcrl leaveq xchg adc sahf xchg lods adcb je lock in fwait cmp (bad) pop jo imul (bad) movsl (bad) adc sub cmp xchg movsb xchg rex.WRB movslq pushfq popfq push mov push xchg jnp xor sahf mov sbb adc repz repnz sbb push (bad) sub imul mov cmpsl (bad) adc (bad) mov or (bad) rex.RXB jo stos adc xor xchg mov add push js and out faddl (bad) or mov movsb test mov sbb rex.B sbb add push cmpsl repz jns adc in scas sub sbb adc movabs jne fdivs push add sbb cmpsb jae sbb orb sbb (bad) repnz je add icebp (bad) jmpq adc (bad) xchg rex.X adc jge lea jae xlat and (bad) and addl out adc or sbb cmp adc mov xlat sub jae push sub cmp adc adc add adc out push or (bad) adc jns int3 sub mov and push or fimul (bad) adc and pushfq xchg push cmp pop out adc (bad) mov adc lret fsubp movsb add jle adc sub rex.RX je or mov test loopne jo mov ss adc sbb and adc movabs cltd std mov cwtl nop (bad) adc rex.W adc rex.RX cmc or (bad) sbb jo xchg in adc jae std rclb and notb (bad) gs adc jns sub mov jnp mov mov cmp lods cmc xchg movsl adc enterq adc jae mov adc addq hlt cltd mov and scas xchg scas cmp rorl stos xchg test add nop clc (bad) pop sub or hlt adc fs sub rex.XB adc xor (bad) retq fmull xor (bad) pop xchg out pop add out movabs or clc adc retq push adc ja lock (bad) insl pop movabs jo iret out mov cmp (bad) (bad) movsb (bad) mov adc retq or callq (bad) jmp adc mov push fldl jge add (bad) fmull fidivl movsl rex.B jae mov adc cmc cmp sub jno xor data16 pop xor add or insl cmpl add lock popfq adc mov (bad) addr32 rex.WRB in cmp movslq adc rclb push ficompl adc shll out xor rex leaveq add sbb add push xchg adc pushq push retq leaveq jb pop movsb sarb adc rex.R sbb adc or pop movabs cwtl outsl jne rclb decb in lea pushfq cltd (bad) sbb jnp jp addl mov adc shll adc mov rex.WX rcrl (bad) xor (bad) adc outsl roll sbb adc out (bad) xor clc int3 in movabs lahf (bad) mov cmp mov (bad) pop mov cwtl int3 lods xchg (bad) sbb clc cmp sub out movsl fcoms rex.WRX adc sub mov cmp rex.WB adc sub or adc and sahf (bad) (bad) mov add mov rex.RXB fwait (bad) adc mov movslq sbb stos jmpq or rex.RXB (bad) adc adc jl repz movsb jp movabs mov (bad) syscall int3 ds or and insl (bad) imul sti retq unpckhps addr32 adc pushq jg jge icebp (bad) movslq mov and fwait (bad) cmp jnp (bad) (bad) (bad) lock gs xor fdivp repz rex.B jg xchg and xchg add movsb leaveq cmpsb mov adc and out rex.RXB xor xor xchg cli int jae cmpsb pushfq icebp shl adc js mov (bad) fs xor (bad) fcoms (bad) (bad) scas add (bad) mov (bad) (bad) test add or sahf (bad) and adc jb sub callq xchg jnp adc cltd jae sub (bad) xor (bad) sti fstpt mov adc popfq rex.R (bad) (bad) movabs out sbb push adc pop xor enterq faddl fwait adc push adc fsubs xor pushq fwait in (bad) mov fdivl (bad) push adc imul or outsl iret sbb push xchg fadd movabs movsb mov (bad) movabs adc (bad) mov (bad) fsubl test jno add adc repz pop add adc in adc mov mov or repz scas jb stos (bad) xchg fcoms jle (bad) fwait sbb add cmc add adc and fcomps ja retq (bad) adc test sbb mov es pop adc movslq mov mov icebp sbb xor int3 and sub xchg adc rex.WXB gs (bad) adc cmp scas retq xor rex.XB mov xchg xchg push push push lahf clc pop adc pause in (bad) and (bad) fisubl or jp fisttpl (bad) mov rorl adc clc xchg jl (bad) loopne rex adc (bad) mov mov sbb add push xor rex.RB xchg clc (bad) cmp lret adc or rex.XB cmp in mov retq fwait (bad) sub or ds xchg mov scas and scas js mov xchg pop callq out sub (bad) add pop pushq movabs adc test push xor push adc mov jg movl jge and push iretq (bad) adc xchg (bad) mov jbe xlat mov adc xor xor add or mov vunpckhps popfq add xor xlat fdivl or mov push movabs rex.WX fs ds callq scas test sbb adc sub (bad) mov adc sarl mov (bad) push out jb xchg xor int3 fcompl frstor (bad) fildl cmp adc adc push test lahf in mov mov clc add addr32 lcall sub loop sub (bad) out fdivl outsl and sbb (bad) icebp add int (bad) fstps sarl push sarb retq (bad) int3 pop add sub movsb callq sarb lcall push sbb sub lahf adc jno mov imul (bad) sub mov push popfq out cli (bad) mov xor wbinvd int3 mov adc or adc xchg test jnp negb in cs (bad) rex.WRX insb clc out xchg mov retq rex.RX cmp jp rex.WB cwtl mov jge adc imul fsubrs (bad) mov sub sbb jne fwait cli divb mov sbb data16 sub push repz out cmp or sahf xchg pop sub cmp adc loopne out movabs adc cmp push repnz enterq (bad) fist jg xchg adc cmp cmpb jb rclb sub je xor hlt clc sbb mov mov in xorb mov orl (bad) mov (bad) (bad) cmp fcoml callq sub sbb xchg adc sub rex.X and xchg out fadd xchg rcrl push add mov rex.WXB movabs or frstor clc adc mov retq sbb xorl (bad) jl mov push pop out fcoml add mov or ds xor jne rex.WXB jg sbb add test mov sub movsb (bad) sub adc add cmp jge rex.B adc rex.WX pop lret adc fildll pop movabs jmp sub adc jp sub push push mov rex.W and (bad) adc (bad) cli mov cld jo adc fistpll or mov pop mov rorb push mov movabs mulb jne movabs in mov adc pop decb xor rex.XB (bad) pop out mov (bad) divb (bad) sub jmp (bad) retq movslq stos adc (bad) iret fs adc (bad) (bad) cmpsb hlt adc rolb xor fisttp adc adc repnz (bad) outsl (bad) jno lods push movabs xchg xor and cs vmovss mov xor adc (bad) (bad) rex.WRB adc mov pop or mov (bad) cs leaveq std cmpsl stos movsb adc insl divb stos adc (bad) adc cmp retq or adc loopne pushq (bad) leaveq mov stos or sbb sbb cmp gs incl add lods and movabs cmpsl callq (bad) outsl lock (bad) je mov in xor rex.XB rex.WX orl pop fnop pushfq in test lcall (bad) add cmp rex.W ja fcomi sbb andl rex.WRXB (bad) (bad) (bad) push mov movabs cli adc jp js popfq jne lahf cltd rcll (bad) push jl xor out (bad) adc jno std push cmc bt imul clc add jmpq je jmpq jmpq mov sbb ss rex.WRXB outsl std cwtl icebp mov rex.RB movabs pop cmp sbb mov mov jnp cmp cltd retq add (bad) lods in sbb mov pop cmc adc rex.WX rex.X (bad) xchg mov out movb push test xchg xchg sbb in jle xor sbb jl mov fmuls (bad) loopne xchg sub mov (bad) (bad) lcall xor (bad) lcall retq jg ss cmp clc add (bad) (bad) xor jb rex.B or int3 movsb mov in pop ss mov fildl repz (bad) xchg xor and rex.WRXB add test ds and jle and (bad) (bad) sahf jbe and rex.WB icebp data16 xchg fs jnp test jg mov cmp jmpq clc cmc test or jmpq rex.WB rex.W rex.WR push rex.WB cs rex.WR rex.WR xlat mov stc adc decl scas pop std or push sub stos (bad) xchg add movabs es add jns sub lret js and in lret add push xchg pop jb xchg sub incl or rcrl scas pop (bad) mov rex.RX test (bad) repz rex.WR sub cmc (bad) sti stos (bad) leaveq rex.WB fwait sbbb (bad) (bad) cld (bad) lcall xor pop xor cli (bad) lcall sbb xor pop push cli rcrl cs movabs xchg lods (bad) rex.WRX (bad) mov (bad) push shl cmpsb pop mov push loop (bad) mov rex.X rcr mov (bad) and push in mov in movabs mov rcrl (bad) adc add or sbb test (bad) mov push cmp in fiaddl jbe xor bt btr movzbl mov inc test add ror clc mov rol dec add inc shrd movl movsbl mov clc cmp jmpq pop jmpq neg mov cmc cmp jmpq je xor push bsf movzbw sar mov sub shld sub movsbw mov mov lea jmpq test jmpq jmpq clc cmc imul cmp add jmpq je movzbw bswap movzbl movsbq lea bswap movzwl movzbq lea bswap jmpq cmp jge mov (bad) test fisubr vmovups jge jrcxz rex.X xor xor jge enterq sahf stc (bad) (bad) callq jbe rex.RB xor sti xchg lods xor or (bad) leaveq fdivr (bad) (bad) (bad) push mov xchg ficom rex.WRB jmp sti (bad) lcall lret xchg (bad) adc mov imul adc (bad) mov (bad) pop add vsubps (bad) jl fidivrl stos xor add push push iret cmpsl out pop or test rex.WRX mov push sti mov mov je rex.W imull insb sub (bad) jge xchg (bad) jns xor (bad) pop rex.RXB sahf rex.RX int3 (bad) rex.WR (bad) mov cmp repz cli repz jmpq cmp bt movb bt cmp test jmpq jmpq jne stc clc test add cmp test add jmpq mov jmpq rex.RX repz mov shrl imulb leaveq add iret (bad) mov lods sbb (bad) movabs js pop in rex.RX sub retq movl (bad) (bad) rcrb mov sbb ljmp xor rex.WXB orl (bad) (bad) mov or (bad) (bad) mov jg (bad) stos mov stos push or rex test mov pop (bad) sub sbb mov pushq callq (bad) (bad) in (bad) fistp mov rex.RX xlat rex.WRXB movabs adc adc cli lock mov xor mov sbb rex.W imulb repz xor pop in mov out cmpsl fdivrl rex.B fisttp movslq and (bad) xchg mov xlat mov cmp mov fwait repz jmpq jne jmpq clc cmp jmpq jmpq jne shrd shl mov test stc add cmc cmc bt movzwl shl mov cmc clc test cmp add cmp mov bt clc bt test jmpq test stc cmp jmpq jmpq ja clc clc stc bt imul cmp add jmpq jmpq rep bswap movzbl movsbw movsbw pop jmpq jne shrd btr cmp sub clc mov rol rcl mov add bt mov test test jmpq idiv repnz xchg and (bad) add rex.W sub test fstl mov (bad) or mov int rcll lret ss jno (bad) jne xor pushq adc test cld movsb (bad) mov clc data16 movsb or loop pop xchg (bad) mul (bad) xchg mull sub ror int3 and fcompl mov shrb cmp (bad) cwtl (bad) xor fdivrs loope scas in or mov in (bad) cmpsl jns callq iret rex.RB rex.W cmpsl adc retq xchg insb xor (bad) push (bad) je mov flds cwtl xchg jne xor lret cltd pop mov cmp (bad) and mov fimull scas sub or xchg adc (bad) rex.W cld mov mul or push xchg fdiv repnz rex.XB shlb pushfq (bad) jne movabs stc mov lahf jmp push (bad) add add adc sub xorb adc rex.WR int3 int push lret hlt mulb fdiv rex.XB loop loope cmc retq jne sub movabs loopne stc add xchg retq or push in jns adc mov push add mov xchg repz (bad) pushfq sbb sbb push sbb jo iret scas cwtl cs (bad) sub in xchg and ss or add shll movabs jle es jrcxz push sti sbb hlt test xlat xlat adc xchg or jmpq outsb cmp push cmp int or rex.R adc jne (bad) cmp pushq loopne fstpl add cwtl (bad) pop add or hlt lods jmp mov fdiv gs (bad) shl (bad) fild pop lea (bad) (bad) data16 fs rex.WXB xor push (bad) sarb mov not or mov int3 mov push je in mov mov or pop (bad) sbb jle insl pop (bad) xor int cmp jns addr32 jbe rex.RXB cmc mov out jne sbb (bad) add scas insb repnz clc jrcxz (bad) rex.XB lock xchg (bad) sarb retq rex.X mov add (bad) mov cmp rex.RXB faddl (bad) fsubrs test addl pushfq and adc mov jl rcll (bad) stc mov or mov cmp push in sbb sbb (bad) xchg pushq insb push sbb movabs sbb xchg pop (bad) fstl insl (bad) jo cmpsl pop lods xchg pop test pop lret jl xchg mov movnti (bad) cmpsb je (bad) (bad) xchg out (bad) psubusb xchg sbb and pop pushq nop fsubrs xchg mov nop push cmp (bad) insb push mov cli (bad) fisubr xor (bad) sti jo mov push rex.WRXB repz movslq notl hlt mov rex jl lods movabs rex.RXB xor mov (bad) pushq cld jmpq xchg fwait sub xchg movabs hlt stos lock jmp mov push xchg (bad) adc add push sti (bad) test sub rex.RXB movslq hlt out or sbb add (bad) in sti pop mov adc jne rorl loopne lods clc lret cmp stos (bad) (bad) or jmp mov sahf hlt stc jo decl or (bad) mov lock xchg or repz (bad) cmp add jne out or out (bad) mov nop repz add addb (bad) adc stc rex.WXB add (bad) out scas cmp mov sbb sub out adc hlt push imul xor xchg adc xor in cmp sti lahf cs adc es (bad) (bad) callq add cmp mov cs clc and jbe in cwtl cmp scas mov imul mov orb (bad) jne xchg (bad) movabs out or jrcxz adc rorl enterq and push shr retq push jrcxz rex.RB int3 leaveq stos outsb jmpq std adc mov or loop out sub add (bad) int add repnz or (bad) je xlat (bad) addb outsl (bad) cli xchg or out adc callq rex.XB sbb (bad) hlt adc shrb mov (bad) or mov adc out or add in rex.RXB (bad) jl (bad) sub or adc jno add sub rex.WXB or jl (bad) test xor iret fmuls jne cmp in (bad) out (bad) mov rorb out fwait iret (bad) divl pushfq xor hlt rex.WR rex.WXB insb rclb (bad) ror sbb pop int3 (bad) xor adc mov (bad) (bad) movabs or adcb sub rex.RX ja rex.XB jb clc cmp out xor add add movl rolb (bad) fcmovbe fs outsl shlb mov (bad) (bad) sbb cmp lret jge test adc lret hlt lret mov movslq jae fs testl fxch fsubs rex in out mov pushq repz jns xchg insl rorb mov rex.RXB adc lock cmp cli fisttpl cmp std mov lock repnz and (bad) test xchg in mov je pop rex.WXB jrcxz add rex.RX add add imul out rex.XB imul sub rex.RX jrcxz test jmpq leaveq mov jne rex.RXB sarb and sbb rcll push hlt fmuls popfq (bad) or cmp retq outsl (bad) fcomip fwait lahf stos or xor in push adc (bad) mov mulb (bad) out (bad) hlt stc (bad) xor (bad) pop cltd out lock (bad) jl in mov insb shlb and mov rex.WRXB (bad) test or (bad) in out (bad) out repz sbb jne and int mov jns push and adc movabs clc (bad) mov lock cmpsb (bad) mov jne (bad) xor mov fs jne out (bad) cmpsb sub xlat add add fs (bad) cmp jrcxz (bad) fldt pop iret jne (bad) push mov rorl rorl mov shr xor xchg test cmp fcmovnbe jrcxz in pop xchg adc in mov cmc sarl push push xlat (bad) lahf adc add xor jmpq adc sub or jne jmp pop xchg mov and lock iret mov sub jnp (bad) repz xchg sahf sub and jg fwait ss (bad) push adc (bad) or cwtl enterq loope stos fs sti rex.WX xchg hlt (bad) nop mov adc (bad) push lock in sbb movabs rex repz out jne jno in test and rex.WRXB xchg je xor rex.RXB mov jne (bad) callq rex.R movabs ds xor imul (bad) (bad) adc rcll nop push sub mov jno mov rex.R xchg scas in mov adc cmp pop xchg outsb and rex.WX push (bad) fcom stos xchg (bad) lret popfq in sbb adc mov add sti data16 pop jmp test add in (bad) cmp (bad) adc lret jne callq jg jg mov sub (bad) adc mov pop out jb,pn in retq (bad) jne loop (bad) rex.XB jl in mov push rex.R rex.RXB pop xchg scas adc cmp push xlat rex.WRXB (bad) rcr rex.RXB add out test imul xchg pushq loopne jge cwtl add rclb (bad) icebp lods jno iret pushq rex.R ds test xchg out push and je or sub out rex.R mov pop idivl jmp rex.RB rex.WB adc adc add insl (bad) xchg jbe repnz jne jbe push stos loope pushq mov xchg movabs leaveq lock xchg or xchg (bad) ja je sbbl rex.WB andl mov cmp insl cmpsl lret gs stos int3 jge lea or or adc fadd stc (bad) pop movsb jge in loop sbb add jle add add and and sti mov xorb jbe xchg scas xchg cs (bad) push pushq or xchg lret pop jg or rex.WRXB mov jns jmpq cmpsl mov pop xchg movabs adc rex.RXB rex.WXB cmc and in (bad) fstp fcom popfq hlt xchg lret (bad) vunpcklps enterq add retq xchg (bad) (bad) xchg jne shll std leaveq jbe xlat test in je push mov and add xlat mov (bad) add xor fadd (bad) movabs cli in (bad) (bad) jo (bad) mov sahf (bad) icebp and rex.WRB sarl rcll (bad) ja jne test sub (bad) scas sub outsb insl fnstsw xchg and jnp jg imul xor sub fdivl and (bad) or test or mov out adc (bad) jns testb or sub rex.XB jno (bad) xchg sub hlt fadds mov add or or hlt or testb rex.W rex.WB jmp (bad) or out lock or repnz rol cli mov rex (bad) gs jne rclb mov imul cmpsb adc pop push sarl pop loop xchg cmp int3 (bad) xchg ror cmpsb test repz hlt rex.WXB sub je mov add lock xor (bad) test (bad) callq clc sbb (bad) jno insb xchg (bad) push jae xor scas sbb (bad) fildl repz jge nop mov rex.R clc adc out loop xchg shrl xor pop (bad) fnop xchg fsub jne fist sarl or add mov rex.RX cld rex.WRX mulb (bad) scas (bad) rex.WX divl fbld leaveq (bad) (bad) (bad) lods add outsb cld (bad) (bad) or fcmovnbe icebp jne rex.RB sbb icebp (bad) lods ds add rex.WXB rex.RX insl jbe rex.WR xor js adc repz rex.WX or jmp rex.XB (bad) (bad) stos mov sti sub xchg or fcomi out (bad) adc sbb out mov adc fdiv jne push adc (bad) imul fisubl movsb and lods adc or out int3 std (bad) jl fwait or out jmp xchg adc pop (bad) xchg rolb hlt repz int xchg or mov std adc mov ss cld addb (bad) jbe add (bad) push repz (bad) rex.XB (bad) in pushq popfq xchg scas (bad) (bad) (bad) xchg lret ss cld mov pushq sarb icebp sbb (bad) (bad) (bad) ja (bad) je jno mov rol mov icebp cmp leaveq xchg icebp rcll callq iret rex.WRXB iret icebp (bad) mov xor hlt push out (bad) jg rex.WRXB stc (bad) repnz shrl (bad) repnz push imulb or xlat repz pushfq xchg insb or out out pop cld pop xchg lock ss (bad) mov popq add nop xor xor loope mov rex.RXB push sbb (bad) jle gs movsb adc rex.B popfq rex.WRB imul loope test orb mov (bad) jmp rclb xchg xor int mov jmp xchg rolb mov push xchg (bad) negb xchg nop jrcxz cmp es imul add xchg sub rex.X or (bad) adc imul mov and rex.WR in rex.WB je (bad) jg in nop adc js test cmpsb pop stc add jge test mov xlat mov fild loopne in adc (bad) fldenv jl xor xchg (bad) sbb data16 addr32 rol add in (bad) jmp xchg (bad) iret mov rex.X cmp rol js xrelease fs repz xchg add mov rex.W cltd test or add (bad) ja jl movsl xchg loop xor add sub sbb (bad) rex.WXB push (bad) sub cmp out (bad) xor rex.X push sub xchg jl adc out rclb cs rex.WX rex.WR je add movabs sub rex.W lret callq mov imull (bad) fsubl fisttpl in test lock xor add (bad) sahf xor (bad) push add push (bad) jmpq add or sti fcoml mov sbb mov cltd add rex.R repz or rex adc add lods adc sub push callq sbb in and jne adc rex.WR add mov lret sub (bad) xor fcomi mov xchg pushq shll test repnz loopne jmpq adc imul (bad) cmc cmc movabs mov xchg lret xor push and (bad) or mov lahf xlat xor pcmpeqw enterq out cmp rep ja movsb mov stos xchg (bad) shr jg rex.XB divb rex.XB (bad) push add xor data16 std mov imulb test movabs pop or fistpll (bad) jnp add jmpq and (bad) mov or (bad) sbb rolb icebp jl imul fdivl or fsubrl xlat push or cmpsb (bad) jo jmp movsb mov mov (bad) xlat mov test push (bad) cld (bad) adc add jnp xchg (bad) xchg iret or (bad) pop mov adc bnd (bad) xor (bad) nop xchg cmp int (bad) jl lock loopne int3 (bad) nop cmp and or shl scas cltd adc and js or or cmpsl ficoml (bad) jne nop (bad) adc rex.WR push sub movabs fimull (bad) (bad) xchg push cmp fucom lahf or (bad) xor ror jo or sbb sub jne rex.X mov xlat test mov jne jg mov rex.XB testb xor in jo (bad) ja xchg adc movsb pushq nop mov (bad) adc mov (bad) add (bad) addl rex.WR es (bad) mov pop cmpl test add leaveq repnz jo (bad) xlat jne sub mov sbb pushq rex.WX jne hlt adc pop sbb (bad) adc sub and mov ja xchg rclb je (bad) movabs jg adc xor adc (bad) jg or fadds (bad) (bad) mov sub sbb or fstpt hlt movsb imul std jrcxz incl (bad) rex.WRB rex.RXB out ror xor (bad) cld mov (bad) mov or shl add jo rex.WR mov stos shlb adc (bad) xchg (bad) jne fcmovbe jne add sahf test fildl insb mov (bad) retq sub rex.XB xor pop add in lret int3 jne xor lods xor callq (bad) jb mov jne rex.WXB fs movsb adc rex.WX fsub jnp fdivr jne rex.WRB movsb (bad) fmul (bad) mov movslq (bad) mov mov retq (bad) (bad) addr32 fs iret je out (bad) xor pop push (bad) cmp (bad) (bad) mov rorb jne push xchg in (bad) mov push mov add jb mov movabs (bad) orl lret (bad) sbb jmpq decl xchg (bad) leaveq loop mov loopne movabs adc (bad) pop lock mov cmp (bad) movsl xorl adc push jne jno jle pushfq incb rex.XB add enterq rex.W test mov jmp jno mov (bad) or pop in mov rclb out movabs pop or (bad) adc clc fcom jb (bad) or repnz add or mov outsb repnz push nop (bad) and adc fsubs (bad) fdivp xchg (bad) cmpsl nop or add je loop and mov callq outsb adc rex (bad) xchg movsb (bad) adc sbb int3 (bad) mov rex.X (bad) (bad) xor orb jno xor lods sub push or (bad) lock xchg movslq push (bad) jnp rcrl or out sbb (bad) jae rex.XB movabs (bad) xlat repnz in add jne test addr32 clc (bad) xchg insl callq (bad) (bad) (bad) pop (bad) push (bad) xorps adc cmpsb stos jne rex.RX xor mov nop sub lahf stos xchg jne int3 (bad) push adc repnz int3 imul pop xchg pop retq fstps sub cmpsl sub add mov adc sarb scas je rex.XB ds callq js mov movabs (bad) (bad) (bad) adc xchg push (bad) or (bad) (bad) mov pushq (bad) push sbb movabs sub add jg push push imull rex.WR add adc or (bad) jbe mov (bad) xor add and (bad) iret rex.X rex.WX xchg add add adc add mulb push (bad) out push adc movb xchg vmovdqu (bad) cmp fdivrs rex.WX rex.WB (bad) fucom js xchg mov rex.WXB enterq sbb xlat cmpsb or xorb pushq mov jg (bad) (bad) adc adc mov or adc add (bad) repz lock and (bad) xchg push mov jrcxz adc mulb or rex.XB (bad) es (bad) nop xchg (bad) mov pushq rex.XB xchg movsb hlt (bad) (bad) fscale jle jns and mov add mov movabs fdivl rex.WB rolb (bad) shll in or mov (bad) ja jl add xorl adc add mov retq xchg rex cmp xchg fs clc incl (bad) in fcomps sbb or pushq xchg callq pushfq xchg xchg add je insl jae xchg xchg (bad) clc out jno jo mov pop sbb adc rex jne and add jle push (bad) add (bad) out mov hlt icebp imull mov lock sub mov int3 (bad) lock (bad) nop xchg lock fcomp nop mov pushq sbb mov (bad) xchg nop add xchg mov loop hlt movabs ds add int3 test (bad) and mov (bad) enterq mov jne jg pop push mov fwait retq rclb (bad) xchg leaveq cwtl jo nop (bad) xchg movabs push out mov testb repnz rcl cmp cli hlt jbe rorb sti (bad) (bad) cmp and repz mul push cmpsl adc int3 imul add and sahf jmp mov and rex.RXB fwait cmp or (bad) clc or mov xor or rex.WB hlt or in (bad) or add pushq fs addb retq jns (bad) movslq jle pop enterq and rex.WXB (bad) (bad) rclb mov push mov int3 xchg jge pop loop pop repnz addr32 (bad) cld (bad) push gs jns pop gs retq imul or nop sbb (bad) rex.WRXB (bad) push retq scas push int3 loope xchg or cli or mov rex.WRX xchg retq cld scas jno push mov jno mov hlt mov pop fcmovnu sti (bad) xor mov xchg cld adc pop rex.WRX jo (bad) loope fprem push or (bad) (bad) popfq ss (bad) movslq movabs xor int3 xlat (bad) stos fisub or adc cs rex.RX test push insb xchg pushfq jg or or rcll std jmp scas mov rol xchg or mov rex.RXB lret add xchg es add test fstp in jae test xor xor jge lock pushq mov (bad) adc sub repz (bad) (bad) rex.WX mov jne shr loope jmp jl sub movabs push (bad) stc or add in rex.W rex.R add sbb rex.RXB lock callq shrb cmpsb cmpsl (bad) in add sub adc add jmp lock rex.WRB adc rex.RX jrcxz fstpl jle movsl add adc (bad) (bad) rorb (bad) xlat in std testl xlat in push adcb jp mov (bad) mov mov testl adc adc jmpq loopne cmpsl loope cli insb rex.WRX data16 mov add repnz adc add rorl loope jg jrcxz shrb or adc movsb jmp push mov icebp comiss pop (bad) sub fcomps (bad) adc scas fiaddl (bad) mov add mov int3 repz (bad) (bad) or out je sbb sbb (bad) (bad) callq pop mov xchg or shrb push clc jne stc in lock adc (bad) (bad) rolb jbe and cld rcl mov pushfq cmc data16 hlt imul (bad) mov sti push lret stos sub addr32 es xor sbb mov scas or adc rex.W loop adc fmull ficoml notb cld rex.X jns mov (bad) fstl mov retq sti rex.WRXB (bad) sub shr (bad) sbb enterq jmp rex.WRX push sarb cmc or (bad) clc nop fsubs add (bad) emms mull shll out (bad) cmp out loop in adc shrb rex.WRX sub xor xlat js cmc cmpsl mov mov adcl (bad) ds add rex.XB (bad) retq (bad) repz (bad) test (bad) or test (bad) jo rclb and rex.WR add adc xchg push xchg mov jne jbe sbb jae stos fisubr stos mov and (bad) iret mov (bad) sbb movabs lret (bad) push jl rex.WXB rex.WXB insb xor fisubrl sub cmpsb (bad) sub movabs jb jo pushfq xchg mov mov out (bad) (bad) xchg mov fstl shr movl idiv add xchg jne mov or addb in rclb rex.XB (bad) jne rex.WB in clc out rorl rex.WRX push int xor rcl fs xlat sbb lret jmp mov rcr addr32 mov leaveq test in or repnz (bad) adc punpckhbw mov enterq (bad) sbb cwtl push xor sub sbb cmp (bad) xchg rex.RXB mov rex.RX rex.WRB rex.WXB mov and or xor lea sbbl test (bad) out std add jns mov push rcrb jae js (bad) jrcxz (bad) jne sti enterq jo cmp sub jne pop jp iret jno (bad) imul rclb sub movsb out (bad) jg (bad) shll (bad) mov cmc and xchg loop ss xor push adc pop lretw mov jo push jns mov setge (bad) loop ss notb icebp movabs xchg xlat icebp xchg mov (bad) push pushq jno rcr divb (bad) mov test pop retq rex.R xor mov loop adc jne push movsb adc test sub pushfq (bad) jmp xchg (bad) retq jne push imul (bad) mov (bad) rcll jrcxz xchg adc cltd addr32 rex.RX adc (bad) xlat fwait cmp cmc lret (bad) (bad) and (bad) push mov mov mov xor loope (bad) scas rex.XB repz jl std and int and int jl (bad) fsub rex.XB enterq jne rex.WX mov rex.WB jmpq rex.XB test in outsb rex.WX (bad) jae jge cmpb jne pminsw jp jg rex.WXB out loope xor mov je jmpq mov adc add pop (bad) xchg sub (bad) sbb (bad) in mov fiadd rex.RX movsl (bad) repnz int rex.WX loop rol mov fadds movslq jmpq (bad) add mov in callq adc cmp imul adc adc mov and cmp scas xchg xchg movabs (bad) pushq mov jbe rorl xchg cmpsl fdivp push movabs repnz xor in add es (bad) (bad) repnz addl movabs mov fidiv xchg or mov mov fwait stos lods sbb jmpq lock jne and int3 repnz (bad) cld xchg rorb jrcxz imul jg sub xor faddl sub xchg (bad) or jne sub or add in (bad) sbb (bad) (bad) lock jo or xor (bad) nop (bad) or xchg add fisttp cld xchg jrcxz pop out fadds sti loop (bad) jae (bad) pop fcmovb (bad) rex.WRX es add leaveq pop (bad) mov mov jno stos mov (bad) rcr rex.RB repnz xor (bad) clc scas adc addr32 mov jb mov (bad) mov xor (bad) jg add cmpsl outsb ds mov repnz outsb (bad) movsl std (bad) ficomp cli push mov out (bad) in mov add xchg lea icebp jbe jne jb mov pop pushfq repnz (bad) xlat xchg test push (bad) je xchg push add fstpt (bad) movb fwait mov jo sbb mov lods adc cmpb cmp or idivb pushfq jne xlat adc loopne xchg add (bad) jge xchg add subl xchg adc xchg xor xor js,pt xor scas lea pushfq out int3 rex.XB (bad) (bad) test sub (bad) mov sub add hlt (bad) xor loopne (bad) jne sbb (bad) imul mul fs fmuls je stos retq sbb (bad) mov clc incb (bad) test int3 push (bad) jae rex.WX rex.RXB sub callq (bad) add pushq jns adc (bad) (bad) int xlat mov mov stos push sub idiv pop (bad) movslq outsl cmp mov push in xor loopne and rex.RXB leaveq jmp xchg in sub in (bad) nop xchg (bad) in add sub (bad) out cmp gs sahf hlt push xchg jo lret cmc xlat xchg pop cmp mov or mov rex.WR test xlat mov (bad) push es add (bad) icebp xor xor fcompl mov rex.WB out sti push nop push (bad) mov adc jge jl rex rclb (bad) cmpsb rex.WRX jo in adc rex movsl pop (bad) adc (bad) rorl in mov adc jne fdiv (bad) (bad) (bad) rcl or (bad) (bad) pop stos rex.WX cmp xchg adc clc rex.WX xchg pushq stos pop add add cli rex.RXB fsubs fs fstpl mov mov repz sahf sub rex add push iret and outsl out add shlb (bad) mov mov sub test (bad) rorb retq addr32 ja negl mov (bad) jo (bad) rex.RB sarl and push adc add lock out iret test xlat jne iret (bad) movabs enterq fsubrs cli add jo lret cmp jmp cmc (bad) rex.RXB (bad) mov rex.RX sbbb (bad) jg rex.RXB add (bad) and add movslq cmpsl gs jne loopne lret xchg xchg jns (bad) sub or push cli pop lret push add (bad) mov (bad) jae hlt hlt mov and (bad) rex.WB rex.RXB rex.WRB rex.WX xlat fidivl xlat and jne roll out loopne callq pop mov (bad) je cmpb jne js sub rex.RXB out sar rclb negl jmpq sub sahf or xchg (bad) out popfq or movabs or fmuls (bad) rclb (bad) adc out js adc (bad) mov (bad) nop xor (bad) ds lock cmpsl loope xlat xchg cld cmpsb xchg (bad) (bad) jb (bad) mov rolb (bad) mov lods push cmpsl adc cmp (bad) adc loope rex.WXB loope lods int3 stos jae pushq imul (bad) divl xchg icebp movabs (bad) int3 xor sbb mov sbb out mov rorl xchg xchg (bad) test shll sbb jb jg js push rex rex.WRX in cmp sub lock push (bad) lock neg add insl int3 mov push jg xchg adc and loop retq int loopne (bad) sbb mov (bad) rorb cmp lret jb repnz or push sbb mov cmpb push (bad) mov fimull ja rex.WRX mov lea xor insl rcl push incl (bad) ja int mov in jp stos xchg (bad) nop push adc mov xlat lea imulb sbb xchg (bad) cld (bad) hlt xor mov gs pop mov out or (bad) sbb (bad) scas push stos (bad) hlt mulb or lods rex.RB xlat and jle xchg or (bad) (bad) (bad) xor xlat xchg sbb fildll pop xchg xchg add test sahf cmp test rex.WB testl cld push or (bad) xor ja (bad) (bad) mov imul int icebp jrcxz xlat callq mov (bad) repz cs add (bad) jne mov mov out idivb rex.W insl (bad) cltd rex.WR fwait (bad) int (bad) xor js fs je (bad) and popfq mov outsl es data16 fbld xor or jns addb add jge add add (bad) rex.RX xchg xchg (bad) (bad) sub (bad) and jne outsl in fistp jnp cmp int3 push push adc imulb out (bad) in rex.WRXB cmpsb add lods mov xchg (bad) rex.WRXB rex.XB jrcxz xor jne in rex.WRB retq data16 xchg mov callq sbb mov hlt cmp sbb rol imul jle int3 sbb push adc jrcxz push rex.X repnz sti (bad) sbb push in or rex.RX mov imul (bad) leaveq and (bad) mov sub test xchg cltd push movnti (bad) jb xor rex.XB testl push int3 jne fsub rex.WB (bad) sub out repnz jp jnp xchg xchg add or (bad) jle adc (bad) js (bad) or sub sbb or and (bad) movabs and loopne cmc lea int3 push int jrcxz rol cmp out or jnp (bad) jl test rex.WRXB mov loopne jrcxz nop (bad) or xchg test sahf imulb (bad) rex.XB xor (bad) out xchg fs cld mov outsb in and push (bad) xlat mov (bad) or lahf mov shlb push add mov pop add movabs mov xor sub sub push xor rex.WR repz rex.XB jbe lret or (bad) sbb xchg (bad) rex.R rex.RXB (bad) (bad) loopne (bad) cmp pushq scas rorl fcomip shrb sbb mov out (bad) push (bad) or jne insb or nop sbb loop xchg jne rex.W sub out and (bad) sahf and fnstcw add xchg mov and adc sub bnd hlt jg mulb test or mov enterq mov xlat mov rex.XB rex.RXB lock imull rex push js adc jne xor push lea (bad) xchg add mov push add scas fwait cmp (bad) add cmp andl push (bad) lock jo xchg and xchg pop jle cld rex.WR addr32 (bad) nop ficom xor jnp xchg add rex.B mov add or subl (bad) rex.RXB movabs xchg mov rex.WB sub xchg int3 int3 (bad) rex.XB rex.WRB jl (bad) out jbe or nop or lods mov mov je mov mov jno (bad) mov (bad) sub push jae cmp or cmpsb pop (bad) jmp rex.RB (bad) fwait (bad) cmp mov mov cmp jg leaveq callq add mov or jmp roll xor test cs lock add lods mov adc jb (bad) jne mov rcrl xchg sbb xlat jne cmp rex.WRXB (bad) rex.RXB retq jne (bad) rex.X and rcr rex.WRX cmpsl cmpsb (bad) add mov xchg rex.XB xchg scas mov (bad) test adc add outsl lock std fucomip adc (bad) xchg (bad) fbstp imul imul mov (bad) movabs loopne (bad) (bad) jne je in loop (bad) push idivb fwait lahf pop pushq (bad) and faddl jge adcl movabs insl (bad) loopne cmpl movsb in out mov and int3 clc xor je (bad) (bad) sbb (bad) mov and and and mov (bad) xor jg clc jnp pushq jae outsl in jne lock test (bad) mov rolb loopne out (bad) mov cld sub sbb imul xchg (bad) retq (bad) fsubl (bad) mov or or out sti (bad) adc (bad) (bad) add (bad) mov movabs pop adc mov rcr mov push movabs rex.RB (bad) mov lahf out out retq lret pushfq pop (bad) mov xchg mov xchg retq cs xchg adc ss pop callq sbb (bad) fcomp cmp roll cmp lods or xchg (bad) add push (bad) xor hlt add sub movabs (bad) xchg lock xchg movabs clc jne adc fiadd iret push test jne add cmc and jle or nop mov rex.XB sbb cwtl (bad) rex.W jne xchg xchg out mov xchg jno mov nop (bad) fnop loopne rex add or repnz mov js push sub mov ficoml imul (bad) or push or out (bad) cld (bad) xchg jb mov (bad) xor shrb and mov loopne sbb shrb bnd mov and sub mov bnd movsl pushfq add (bad) or mov and out and lret jne and sub cmp add out fnstenv rex.WR insb mov rorb loop adc mov (bad) mov rex.W faddp jl add jbe test nop xchg (bad) rclb retq jno ficom adc push (bad) add push xor sbb rex.B test xor adc out cli jne sub add es idivl pop add pop test sbb movsb rex.WB fsubrl (bad) xor imul (bad) jmpq (bad) ss test insl in retq jmpq xchg mov in movabs scas rex.WXB add mov repnz xor cltd mov fwait xchg mov cli xchg insb leaveq cmp mov sub push (bad) add xor pop mov icebp (bad) je adc mov jl lock cltd loopne xor lret in lock jbe fwait icebp xor (bad) jnp mov fisttpl imul jno pushq repz or in sub and (bad) out rex loopne mov fdivr pop fwait rex.RXB notb hlt sahf push ss rex.WXB mov xor adc xchg mov int xor and mov (bad) (bad) mov add sbb retq (bad) adc repz lret (bad) hlt (bad) add hlt sarb imul jae rex.WR loope leaveq push retq outsl (bad) jns (bad) (bad) jl sub push rex.XB (bad) subb mov scas std xchg and push (bad) jae adc (bad) cmc (bad) (bad) fs clc mov rex.R adc je out add leaveq or icebp cs mov ffree and nop cmpsl int3 jmpq add test xor fs scas xor add (bad) push in (bad) jne xor lock (bad) movabs xchg pushq (bad) lea adc (bad) sub pop add or adc push and rex.RX sahf (bad) out xor (bad) divl (bad) iret jbe cmpsb test sub dec rex mov orb je (bad) pand add mov (bad) jne retq neg out cmc add (bad) (bad) pop loopne repnz pavgb movabs xorl icebp cmp neg xlat int push cmp (bad) mov or xor jg xor iret (bad) fdivrp mov clc xchg js lret add fcomps or jp sub fadd jbe (bad) scas (bad) out movabs sub xor pop fistpl in xor js rex.RXB cmc jno lret ds jmpq ja shlb lods icebp (bad) sarb jle fdiv stos enterq (bad) adc or lock fisttp jne (bad) jb divb add sub rex.X (bad) gs sahf mov cli xchg mov lock cmc rex.XB push out xchg mov jmp and ja movsl repz movabs mov rex.WXB rex.WR nop js mov mov sbb rolb out rex.WB push sbb jno and icebp or mov pushfq sub mov imul add or pop sub push sub xlat testl xchg (bad) mov (bad) rex.WR add jae add add loopne movb jns sbb rex.R add int push jae mov fs lahf xchg or cld or lock xor sub rex.W rex.RX jrcxz in jns jb mov mov in or mov test jb xor fmuls (bad) test scas cltd leaveq mov sub stos out (bad) outsb cld rex.WRXB fcomi (bad) out (bad) imul push rex.WX movsl je rex.B jg pop notb jne fisubrl int (bad) (bad) sub or xchg movabs push cmp mov or mov lret hlt fnop incl test shl (bad) mov ja enterq add sbb xor (bad) retq cmc (bad) cmpsb push rex.WXB ds xor (bad) mul rex.XB sub (bad) outsl jne mov adc push mov rex.WRXB mov loope (bad) rex.RXB callq ss rex.WR in jne (bad) ja cmc add jne (bad) retq (bad) loopne (bad) (bad) xor fist jrcxz sub pop movl popq sbb shrl mov adc push lahf xor sti rex.R xchg mov movabs lret jo mov add jp (bad) (bad) xchg rex.R (bad) test mov rex.W cwtl mov (bad) clc push insl adcb fsubl push adc add cmp out xchg and mov pop adc std mov (bad) jp mov pushq roll mov mov (bad) xor out out mov out movsl test ror mov je jae lock (bad) test pushq or sub or retq (bad) lea insb scas mov adc (bad) sbb std enterq xchg rex.WRXB hlt xchg (bad) (bad) repnz xor sbb fmull imul sbb jo cmpsl ss cmovge (bad) mov fmuls and nop xor movsb roll sub (bad) pop subl jrcxz out mov je cmpsb iret ss js mov fldl mov leaveq lret je psraw xchg push int3 test sbb cmp jge testl or cltd add xchg in sti pop xor add and mov push (bad) jb rex.RX (bad) rorl js mov jmp not sub scas xlat mov bnd mov faddp pop sbb (bad) loop cld popfq rex.WXB adc rorl sub lahf out mov or xchg addr32 stos (bad) decb movsl pop (bad) add xchg sbb sti scas (bad) add add in loopne adc xor mov jb shll shrb js sbb ss callq mov out (bad) je int3 je movabs (bad) add mov jbe repnz jg rex.X lock xchg xchg add pop (bad) in int3 mov rclb xor test xchg retq cmpsl lods js test or in lock imul xchg push xor loopne xchg and mov rex.XB adc rex.RB add pop rex.WRB (bad) (bad) fnsave (bad) js mov popfq xlat cmpsl (bad) lods rex.X adc lock cmp xorps or scas (bad) ja mov (bad) xchg xor mov add movslq popfq movsl xor je lods xlat push insl pop mov xor insl xlat xlat (bad) fmull ss sub sub movsb je pop out rex.WRB jnp mul (bad) mov or popfq sub imul hlt sbb or and rex.RXB fstpl movsb adc xor (bad) xchg or rex.W rex.RXB (bad) adc movabs gs or (bad) sub adc nop sahf nop loope add sbb lret mov jp lea test and xchg pop (bad) xchg pop jp mov adc movsl sub mov hlt movsb xor enterq mov push test jo (bad) sbb mov (bad) (bad) pop (bad) (bad) adc or xchg je imul rex.WXB cmc stos movabs sbb mov sub out cld jno xchg insl cmc lret hlt lock sti mov (bad) nop jg mov adc mov mov sub popfq movhps xchg and or sub xchg out in pushq pop (bad) xchg int3 lods and mov lock leaveq jge (bad) mov mulb cltd sbb (bad) xchg rolb (bad) adc add rex.RXB (bad) out sub imul adc (bad) (bad) (bad) loope scas adc adc adc and jg je add callq or pop (bad) (bad) gs icebp out lret mov rex.X cld sub rex.WXB movsb pop jrcxz push fwait sbb in cmp (bad) cmpsl repnz sub mov mov lock lods retq pop cmp jmpq stos in cmp mov lahf mov out in out repnz mov mov xor addl and xchg repz rclb jmp sahf cmp (bad) push fstps adc pushq xor (bad) pushfq rex.WRB int xchg lods in jne sti mov hlt or cltd (bad) imul rex.WR lods or sbb and and movabs jb xor pop xchg or push pushq mov (bad) (bad) mov sub stos mov (bad) lahf rex.WX (bad) xchg xor (bad) xor rex.WR jne (bad) ja movabs add add jmpq int3 stc in (bad) loop and push or and fadds cmp mov jo add jl sub hlt mov mov enterq ds outsb insb shr (bad) mov rex.WX or and (bad) jo lea rex.WB test test (bad) xchg imul or add xchg mov and rex.B rex.RB (bad) adc imul rex.B xchg fdivs movabs lcall in sub add mov negb stc sbb js jbe adc cmc mov (bad) xor xchg je pop mov cmc xorb movsb test and add (bad) jae scas cld rcrb jo,pn lea sbb hlt (bad) mov enterq adc adc mov mov (bad) mov (bad) and (bad) out fisttpl movabs or sub jo jne mov rex.RXB jo int3 lods (bad) cmp cmovp cli fdivrs sub movsb add sbb retq or jmpq add rex.R sbb adc in pop (bad) mov xchg (bad) or lcall mov imul push (bad) out lahf sub mov fs fnop rex.W rex.RB jp sahf repz xchg sbb and (bad) jge (bad) (bad) jb lock adc xchg jne (bad) (bad) push (bad) mov (bad) mov pop mov push fcmovnu sbb int jns repz fist add repnz shlb cmovs xor rex.RXB xchg mov (bad) xchg movsb shrl xchg rex.RB mulb jne insl cs add lods add (bad) in jp xor in js movsl pop jae xchg rex.RX xchg rex.R mov cmp mov callq add or (bad) add or (bad) (bad) rex.WR push and retq mov mov jg (bad) (bad) adc pushq loope jmp nop (bad) cmc in adc (bad) iret loopne lea xor (bad) movabs (bad) mov (bad) add insl rex.R (bad) fstps repnz movabs cs cmc pop mov std (bad) js xchg (bad) rex.XB xchg in sub in xor or iret xchg rex.WRX xchg (bad) lea int3 (bad) sbb or push (bad) mov jno es movslq or rorb repnz scas in sbb jne int3 addr32 rex.WRB je and cld in jne js sub add idivl mov mov leaveq int3 out (bad) psubsb xor lret rorl ror add or mov cs shr xchg js fadds cmp movsb sub rol (bad) (bad) repz (bad) out xor (bad) xor jne je clc xchg cmc fwait xlat or adc mov (bad) (bad) mov stc mov rcrb cmc adc cmc cs out mov (bad) pop leaveq movsb xchg int sarb iret loopne lahf mov add cli and push out rex.RX outsb (bad) retq rex.RX adc xchg lret sub test (bad) pop negb (bad) (bad) xor mov (bad) add out add mov leaveq pushq fwait (bad) xor stos rex.X es cwtl jmpq xlat callq xchg jne imul mov push push (bad) mov sbb je and xor mov mov (bad) xor add xchg cli idiv add (bad) pop mov lock jae notb sub xchg jo sub (bad) mov rcrb fwait add cld nop loop pop xchg repnz lock (bad) xor cmpsb insl in adc (bad) xchg (bad) repz adc pop adc fdivs add mov and mov jg xor repnz jne test out int (bad) push mov xchg sub jg adc or xor adc sub mov xchg stos rex.XB rex.B (bad) adc decl (bad) fcoml (bad) (bad) rex.W push add lea ds push sbb movb mov stc or ds sub mov f2xm1 mov jl adc sarb jne scas (bad) and and xchg mov callq rex.WB mov add push sbb rolb test (bad) cld lret cmc testb and sub (bad) callq mov fdivrs adc adc jo insl stos pushq (bad) push addr32 sub jo or mov jne repz test (bad) frstor test xchg shrl mov (bad) sub jmp xchg lret (bad) lock adc xor add (bad) shrd pushfq loop movabs ss leaveq rex.B rex.R cmp (bad) mov jne xlat mov repnz mov (bad) rex.RXB and fistp hlt movslq scas (bad) lret stos movabs or lahf add (bad) rclb outsb in xchg (bad) (bad) popfq add (bad) add movabs mov stc rex.XB repz xor jb jns jo jle and pop cmp mov (bad) rex.WRX adc rex.WB rex.WRXB ds mov callq rex.RB jrcxz rex.WXB rex.RXB jno hlt push or (bad) push jl add push (bad) jne outsb stc (bad) adc rex.XB jae out flds xlat in and test out or out xlat and hlt xchg vandps xchg js mov jrcxz cwtl lea idivb push mov pop ja xchg xchg mov xor je (bad) push fildl mov je (bad) fidivl and mov lods iret push add js (bad) sahf jo push frstor jno movabs adc fiaddl (bad) lea sbb sbb test cmc add pop hlt sub (bad) or cmp jo movabs (bad) (bad) sub (bad) rex in adc xor pop pmullw push je (bad) rex.X pop loope mull or rex.WRXB mov (bad) (bad) (bad) mov (bad) push rex.WRXB mov mov (bad) mov (bad) adc mov (bad) lea and adc (bad) xchg ljmp fdivs jg add movabs push test es cmc in add or and fcmovnbe cld fdivr insl (bad) in insl cmp out adc retq (bad) fsts movabs ja (bad) xor cld stc out jge data16 add mov (bad) int sub adcl add fwait pop fimul jns in js push leaveq jno xor or adc sub jo jno (bad) mov out maxps jg and mov or add xchg mov lods (bad) or add push mov fcompl and nop or rex.XB mov push sbb cli or push out jrcxz push rex.B rex.XB fimull xchg xchg jno mov stos and cmc pushfq out fcomp sahf (bad) lods xchg xor (bad) es mov pop movabs (bad) xchg je (bad) cli sub fcoml pushq insb loope xchg leaveq pop adc imul out cmp or xchg repz or pop fcomp (bad) adc adcl add (bad) pop add clc add adc or fstpt adc sahf xchg flds pushq hlt (bad) repnz xor lock lods rex.WRB rcrl jmp addl add (bad) rol push push (bad) clc fsubrs nop movabs cmpsl or callq xchg cmp test insl or or adc (bad) pushq add adc and mov div (bad) out (bad) push int mov xor (bad) fistpll jle cmp rex.WRX rex.WRX rex mov and or adc mov pop mov mov rex.RXB fidiv sbb outsl (bad) xchg sub mov out movsb add (bad) pop jae (bad) pop or jae cmp not xchg xchg in lods lret rex.WR and rex.R loopne cmpsb xchg clc retq jne movabs out cmp movsb sbb and or je cmc cmp (bad) pop or mov and hlt mul (bad) add punpckhwd jmp out xor loope xchg lods lret imul (bad) lock mov rex.RB movabs push lock (bad) (bad) cmp or nop xlat rcl in (bad) (bad) (bad) rex.WXB out lret shrl iret iret xor add adc (bad) xlat xchg jne mov jno and xchg (bad) jge push jne lret pop (bad) adc out jp (bad) mov scas (bad) enterq ds jno popfq (bad) (bad) add xchg mov xor enterq lahf add rex.RB cmpsb rorl or cmp rex.X imul rex.WRX or push pushq push lock repnz (bad) xlat in andb jne (bad) sahf jno jb lret gs sbb fsubrl jmp xor lods (bad) sbb (bad) (bad) insl repz push xchg repnz (bad) ss in js (bad) rex.WB out je rorl adc sub icebp rex.X adc sub (bad) xor movabs sub jo cmp cmpsl or loopne sub rex.WRB xor shl insl ss and (bad) fistl icebp and scas rex.X test sarq stos (bad) retq sbb hlt out clc (bad) (bad) clc add rolb mov or hlt jg int3 fadds icebp pop xchg or add callq or sti (bad) out mov mov cwtl outsl rex.WX (bad) mov movsl (bad) add sbb or (bad) jrcxz mov outsl ds jne nop (bad) (bad) xchg (bad) loopne mul xchg mov xchg (bad) je push adc rex.RXB xor (bad) rex.R (bad) movabs callq jp mov xchg mov movabs jne movabs rex.W jo push sarl sbb (bad) rex.W pop mov pop add push fwait jno sub xchg ja jne lods in mov xchg xbeginq adc addr32 mov (bad) addb xchg and rex.WR movsl pushq rex.WXB rex.RB jae std add xor retq sub insb mov rex.WB scas xchg (bad) imul xchg pop (bad) (bad) ds (bad) sub jno add rex.RXB shll movabs (bad) jnp fs popfq jae sub and mov mov jne mov icebp mov imul rex.XB ss pop adc cmp (bad) stc lock outsl notb sub xchg adc xchg rex.WB mov mov or flds jg (bad) sub std jle cmp jmp enterq rex.WX (bad) (bad) xchg sbb callq (bad) mov push and xchg xorb fadds addl rex.WRXB jnp jo pushfq insb sahf jg xchg add xlat retq mov in push rex.WX sbbb scas lret (bad) mov lret mov addr32 repz ds jl shr and or cltd jle jrcxz add imul (bad) adc retq (bad) in test mov (bad) fisubr rcr repnz (bad) (bad) ficomp hlt mov sti jg (bad) jno iret ficomp imull jge fwait cli cmp int jg push push fdivrs (bad) lods xchg (bad) lahf (bad) out jne cmc (bad) jg or mov rex.RXB rex.X repz push mov popfq jle (bad) fsubr xchg xchg add jno add rex.X rex.W rex mov xchg (bad) jrcxz adc (bad) (bad) cld (bad) movslq push xlat (bad) ds lock cmp cmp roll ds (bad) insb retq jno movsb rex.RB mov repnz xor cltd mov loop stos (bad) adc ja mov enterq sbb jne int add (bad) mov addr32 enterq add in cmp pop add sbb and (bad) jle std sub mul imul xchg adc mov (bad) and xlat xchg sahf push fldcw mov jl bnd mov and and fs out add or adc iretw pop jne incl fwait push (bad) jb adc cmp and nop movhps sub jns fist rex.WRX rex.WX xor add mov xlat push hlt and push fist add or sahf stos enterq jmp je jbe int movsl addr32 int3 jno and (bad) rex.WR mov (bad) push adc movslq sub cmc (bad) (bad) movabs andl jle cmp xor jmp (bad) or enterq mov pop (bad) in pushq cs in jl rex.X sbb idivb cmc lock lret ds callq mov (bad) (bad) rex.WXB rex.WXB lret or js sub sub xchg lret jne in or popfq mov jne test adc pushfq jnp (bad) xchg mov (bad) push lea and (bad) sub xrelease add mov jne jbe rex.RXB subb retq (bad) hlt jrcxz (bad) mov push adc (bad) jne and (bad) js fiadd (bad) push push je (bad) sub mov push fistl jne stos fstl mov pop rolb add je (bad) movsl xor sub testl (bad) or (bad) movabs mov adc cmp jg xor scas sub pop xor sub ja lods mov jne mov stos adc fwait xor sbb (bad) sbb xchg cld (bad) mov push adc hlt mov (bad) fdivs push lock out pushfq loop (bad) hlt andb movabs repnz or rex.WX in sub xor push test (bad) sub cmpsl (bad) imul (bad) fwait and mov int3 (bad) and xor or jno pop or rex.WXB push jp or xchg cwtl test mov cs jl lods scas out add sbb fcmovbe rorb incl pop rex.X in (bad) or pushfq jb mov adc cmc imul idiv jmpq (bad) insb (bad) push jb adc xchg mov repz (bad) insl jne add pop pop std mov rex cld subl cwtl callq (bad) lock mov clc jle or (bad) int3 (bad) and mov pushq popfq lret pushq movabs jnp,pt mov rorb (bad) xchg rex.WX push or jnp mov mov fsubrs cli jl hlt xchg ficom test insb xor icebp add lock cld (bad) (bad) hlt jmp jno jmpq and sbb rex.RX sub (bad) repz (bad) mov clc fwait jle xchg xchg test shrb xorl scas jbe jno rex.WRX gs cmp subl rex.WRB and (bad) callq jbe clc jrcxz out (bad) imul and mov clc out movsb enterq jmp je or pop add (bad) (bad) mov repz mov stc sub or test mov test add or cmpsb mov add jb (bad) pop loop out cmp or (bad) add movsb test adc sahf mov xchg pop ja or (bad) cmp xchg pop and cmp lods lret push pop rex.WX or out cmp fldt jno cmpsl retq insl mov (bad) stc rex rex.X callq xor push or (bad) retq ss in add (bad) cmpsl movabs gs add xchg out mov adc xor retq cmc ds adc add xchg xchg mov out test (bad) loop push push xchg add xchg jbe mov pop sbb popfq add hlt adc data16 push add hlt sbb clc push push repz add (bad) fs adc xchg xor mov rex xor rcll sbb rex.X and jmp adc jge faddl cs sarb (bad) repz cmp rex.XB movabs add mov rex.WR sbb leaveq imul mov sub adc fadds and imul jnp sbb pop mov mov movslq sbb nop cmp pop cmp and cmc fwait cmpsl rex.WX repnz push sub jne pushq in (bad) push add std mov (bad) movsb (bad) fist (bad) adc add xor rex.WRX cltd (bad) (bad) jle (bad) jo add mov xchg (bad) or mov and rep fwait divl cmp lock jl (bad) callq (bad) pop mov pop (bad) (bad) icebp (bad) jne mov std mov xchg and jo or mov sbb hlt rex.WRXB int3 cmp fiadd or pop rorl (bad) push imul (bad) xchg mov callq rex cli nop fsubl cld loop in (bad) push rex.XB jge imul mov movabs rex.WR sbb in hlt adc movslq adc and loop in repz std fdivrs test cmp sbb (bad) jp fs (bad) mov jns or (bad) sub test retq mov mov jrcxz ss mov fsubrl (bad) test mov cld stc rclb pushq (bad) mov cld stos mov jne shrl sahf jle sbb ja mov rex out rex.X add adc loop (bad) or xchg adc int3 add rex.WB movabs (bad) or fs lock add rex.WR mov xor cld test loopne fsts shrb stc cmpsb std sarb fist (bad) out lock jne rex.XB iret sarb jno push fsubrs jo nop fsub movslq sub cmpsl pushq repnz jne stos add js xchg cmpsl and es add stos mov xchg out cs js movslq xchg jnp mov (bad) (bad) movabs add rex.RXB incb hlt mov mov add rex.WRX pop shlb in add xor lods mov jl lods leaveq mov mov movsb (bad) mov xor (bad) in (bad) xor push rex callq adc loopne (bad) push (bad) cmp es bnd xlat (bad) or (bad) cmc ja (bad) mov mov and xchg (bad) div fstpl rcl popfq nop sbb sbb (bad) cmp xor imul (bad) test rex.WR fsubrs xchg retq cld (bad) movabs loopne loope adc jb nop pop xchg sub (bad) sub xchg mov loopne mov jne rex callq or mov (bad) incl add imul pop or (bad) rex.RB hlt pushfq fwait out rex.XB mov cmc retq rex.WRB jo add leaveq hlt fs adc mov movabs insb cwtl rex.RXB rex.X rex fwait add mov (bad) sbb popq nop (bad) push (bad) (bad) repnz ficomp jne lea xchg jmp int3 add nop (bad) lock cwtl mov mov lret movabs push repz jbe out rolb mov ja sub lret (bad) push fcoms (bad) scas add jo (bad) fdivs fistl fsubp rex.WR xchg (bad) (bad) mov or (bad) pop (bad) adc mov es pop adc jmp test or sbb iret in mov (bad) idivb sbb stc add ficompl sbb mov fcoms mov sub mov rol xchg in (bad) mov rex.R ss xchg pushfq or push sbb jrcxz movabs mov or jmpq icebp xchg cmp (bad) cmp adc rex.WR test push cmpsb rex.X movsb add adc cmp outsl mov mov in stos mov add sbb sub lods (bad) int3 rex.WB std movslq rex.X (bad) movabs rex.B (bad) xchg cmp retq cmp mov notl pop xchg xor ljmp mov mov rex.XB lea (bad) cmp test or pushfq add add or mov rcl jl mov int in (bad) movntq xor in mov mov xor jnp jbe (bad) xchg sbb rex.WXB adc data16 movabs out pushq sbb jmpq es notl test rex.WRXB xor cmp mov (bad) sub adc (bad) je push cmp mov hlt mov mov xchg imul cmp enterq jne je loopne jl cmp xchg and pop rex.WRB gs je cmc (bad) or adc cwtl or (bad) rex.R es xor sbb pop adc and and in in adc mov jmpq nop (bad) (bad) push mov add xor mov imul jo retq jne xor jne sbb std xchg and xchg scas rex mov (bad) out popfq or push mov mov je hlt (bad) fdivl (bad) imulb mov in jae (bad) fsubp adc cli (bad) mov (bad) insb cmc (bad) fwait (bad) xor and add sbb pop add retq sbb sbb mov retq fwait (bad) movabs (bad) iret jne sub cmp xchg jnp jmpq nop rex push and cli (bad) xchg rex.WRX rex.R and add fwait xchg repz nop jb jg fwait mov (bad) in (bad) rex.WR lock sub movsl or movslq (bad) out (bad) scas retq and out mov (bad) sbb jp sahf push (bad) sbb cmp xchg sbb xchg (bad) rex.WRX sub push ficoml add insb (bad) or add and add rex.WR pop xor mov rex.WRB rex.RXB mov shrd cltd pushq rex.W rex.WRXB retq cmpsb test sub xlat jae shll or rex.W (bad) add mov add jg cli lock mov hlt (bad) test movabs sub int3 (bad) hlt lock adc mov out hlt sub in mov jne sub in cmp sbb sub or fs xor mov clc mov push sub jne or popfq (bad) add lret retq fiaddl cs rex.WR (bad) and and mov hlt (bad) or imul vmwrite sti movabs (bad) or jnp stos in ds mov imul fwait lret hlt (bad) mov (bad) rex.WXB scas imul rex.WR mov rex.XB (bad) pop rcl cmp mov gs sar std ds xchg add adc stc mov in pushq rex.X push cmpsl (bad) pushfq cmp push (bad) cli (bad) test mov lahf cwtl cmc sbb movabs rcrb pop rex.R (bad) rex.W adc (bad) xor xor xor (bad) cwtl cmc int3 (bad) cmp xor add mov leaveq xchg jl ds jmpq jnp xchg add jae (bad) loop addr32 mov adc lret cli clc leaveq jne (bad) in add lock mov cli lret lods int fwait jge or rex.RX jne jrcxz imul pushq pop add push js (bad) sbb (bad) (bad) cmpsb and (bad) push xchg (bad) loope and movslq out cs (bad) or cmp (bad) (bad) rolb int3 addr32 in (bad) (bad) jno rex.RX add retq in (bad) (bad) movabs enterq imul ss xchg or (bad) xchg adc rex.WB mov rclb jne push lahf testb push (bad) loop jno cmp movabs mov mov add rex.WRX int xchg icebp or cs js push mov imul out repz xchg lret subl hlt (bad) (bad) cmc push add add rex.W (bad) divb mov je mov fcomi cmc (bad) mov cli int3 hlt loope sub cli sbb pushfq lret (bad) rex.WX push test es rex.WRX xchg or in adc jb sbb (bad) jle xchg int (bad) (bad) jns (bad) rex.RX mov (bad) (bad) xor rex.RXB js shll pop (bad) stos mov fldenv adc fdivs lock mov xchg xchg ja (bad) rex.XB hlt cltd fsubrl (bad) sti add (bad) (bad) (bad) pop rex.XB cmp sbb xor pop repnz (bad) xor ja jne add cmp (bad) (bad) mov jl add rex.R rex.X rex.XB fcoms callq std (bad) sbb sub xchg push sbb jns xchg rex.WRB lret (bad) test retq push (bad) adc cs xchg insb loopne enterq ja or rex.WRXB divb mov (bad) xlat jmp rex.WRB out mov mov pushq notl jo push push lock adcb fildl ss lock xchg rex.RXB hlt pop (bad) xchg lret xor movabs xchg fnstenv mov rex.WR jbe mov jmp (bad) jl and mov push jl jmp ja rex.WRXB (bad) test adc xchg repz (bad) or imull xchg xchg cmc movsb (bad) repnz int3 push add lods xchg int3 mov in cmp add sub mov sub (bad) xlat cli stos sub (bad) xchg fmull mov sti pop stos sbb mov mov hlt js (bad) adc rex.WR pushq rex.W rex.WR xor fcoms rex.WR jne sub in (bad) sbb (bad) cmpsl cmpsl and fdivrl add mov sbbl pop adc sbb jle (bad) adc pop and xchg jbe xchg stos jo and fnsave rex.RX (bad) add (bad) stos clc lods lret faddl mov fcomi std test scas rex.WRX rex.RXB movabs or clc pop and rex.RB test loopne in mov movabs cld adc mov shrb pop add pushq (bad) cs xchg in ss pushq (bad) or (bad) or repnz xchg fs xor out xlat in add or shl hlt ds add (bad) cmpb jne negl adc lock (bad) (bad) (bad) insl (bad) mov mov rex.XB (bad) addl fildll mov gs movabs rex.X movsl repz mov or rex.X jge rex.RB pop loope imul movb ljmp (bad) add je lahf movabs callq mov xchg xor mov rex.WR in fisubrl jne and js rex.WRX callq cld sub jrcxz sbbl rex insl mov rex.WX rex.WRXB rex.WRX xchg mov mov (bad) (bad) xor ja ds mov and retq jns adc adc rex.WB in sbb sbb enterq rex.WRX sbb ja pop push xorl mov fdivrl clc xor (bad) mov xchg or cld fsubr add xor scas push test push adc in retq leaveq out adc xchg (bad) pop xor (bad) scas sub mov (bad) adc (bad) (bad) push push xlat imul cld lods add stos adc nop push (bad) outsl jle hlt adc (bad) in es sbb icebp rex.RB mov mov sbb fist adc xlat sub jb push in xor out xor rex.WXB shll rex.WRB adc es xchg lret xor stos (bad) jb or hlt incb clc jne (bad) enterq es or mov or xlat (bad) add lea xchg sub pop mov orl mov jmpq jne cltd xor sbb and cmc xchg push incl iret rex.W notl jne cmp (bad) adc xor sub cmc ja mov cmp fadd rex.RB cmc sbb and and cld cmp or push cs notb pop cwtl xor mov je (bad) fstps loopne jrcxz rcrl icebp (bad) sbb out adc loope adc iret xor add xchg mov imul shll mov xchg movabs jae sbb jbe data16 fbld lahf (bad) repnz mov pop and lods sub jp mov mov adc cwtl pushq mov rex.WRXB mov adc pop nop subl cmp movabs xchg enterq test int adc or (bad) sub imul in mov xor testb stc in test mov repnz outsl loope out es movsb notl roll (bad) repz stc icebp jne mull xor sti mov pushfq je adc fwait pop pop xchg mov mov sbb mov ja int mov mov callq xchg and or mov int3 xor sti (bad) cmpsb push mov ja lret js push or sub fsub sub mov sbb sbb nop sti mov or pop hlt jne rex.RB faddl mov iret fimull movsl movabs or xchg lahf jno pushfq xor adc (bad) or in (bad) adc sub xchg pop pop iret jo mov repz adc push xor int3 pop (bad) (bad) or adc sub mov (bad) lret popfq je mov or cs fidivr (bad) xor movabs adc callq (bad) nop (bad) lret popfq sub cld int3 out test jmp cmpsl (bad) sbb callq mov mov movabs fwait clc jle xor adc imul jg lock int3 (bad) movabs (bad) rex.R js jbe callq std jg fcmovbe jp push cmp cmp nop (bad) (bad) xchg xchg (bad) in xchg (bad) adc jrcxz out rcll int3 jns movsb test popfq loope (bad) mov cmpsl (bad) or je js movsl (bad) in adc rcrb (bad) outsb lods xchg (bad) enterq popfq std movsb (bad) fimul cmc std push movabs repnz or hlt cld (bad) (bad) lret (bad) xchg ficoml rex.WX mov mov test cmc (bad) enterq pop es sub (bad) movslq hlt (bad) out (bad) enterq jp cld cltd adc (bad) rex.R or int pushq xor xchg rex.WB fwait jno callq adc mov rex.WR push sbb cmp (bad) xchg jne rex.X icebp test imul sbb pop cli movb fwait mov xor imul fdivs mov (bad) in mov js mov or rex.RXB sub xor cmp enterq insb mov iret je (bad) xchg pop xchg loopne jmp or enterq (bad) or xor or mov sub (bad) iret (bad) mov (bad) lret sub jmp fstps scas xchg jg sub (bad) hlt and std negl adc mov (bad) repz rorl adc hlt push repnz xchg (bad) pushfq pushq repnz or adc (bad) push xor movb sub push rex.XB in xchg xchg rex.RXB sbb mov icebp rex.WXB jl fidiv or push icebp mov or or (bad) movslq rex.WX ss in and cmpsb idivl xor (bad) or shrb adc xor rex.R in movabs repnz (bad) nop jl rex.R (bad) sub rex.WXB sti rex.XB rex.XB iret mov rex.WRB sbb fnstsw stc rex.R sub rex.RXB (bad) (bad) pop jmp bnd (bad) rex.WRX (bad) cmp sbb roll (bad) je lret out pop rex.WXB fs cmp push rclb shll rex.WX adc jg je enterq js jno or lods xor stc jmp lret jno rex.WRX notl xchg add icebp out incl in insb loope cmpsl add (bad) fidiv jl testb int mov or (bad) xchg add int3 rex.RXB sbb cli and testb imul pushq or js push (bad) (bad) (bad) pop (bad) (bad) mov adc vpsraw (bad) enterq hlt xchg mov xchg or out movsb lret xchg iret mov sarb (bad) rex.B rex.XB cmp jge mov push sbb sub xchg (bad) mov loopne (bad) sub sbb or (bad) je movsl mov sbb psraw or xchg mov movsb hlt icebp rex.RX loop xchg int3 enterq fucomip test out xchg movsb lods sub mov (bad) gs loopne (bad) loopne push mov pop rex.XB movsb stc and cmp xor rcll jo (bad) cmp repnz jb or (bad) adc test test adc (bad) out (bad) notl adc cmp pop (bad) retq (bad) cmp (bad) mov out jne sbb ja mov or (bad) mov enterq (bad) lock mov out xchg imul mov fldenv (bad) jbe (bad) rex.WXB sarb hlt xor int3 (bad) sbb cmp (bad) xchg or add icebp sbb adc (bad) push (bad) (bad) pop mov rex.RXB rex.RXB mov (bad) cmp stos add (bad) xchg mov jno xchg cmp movabs cmc and and cmpsl pop mov mov rex.WRX je clc pushq or outsb mov mov retq (bad) cmc pushfq pop (bad) lahf rex.WB rex.RXB lods or jo idivl mov data16 imul sbb add mov out outsb cmp sub or (bad) (bad) jrcxz mov test js,pn pushq (bad) (bad) or retq or loopne adc (bad) rcrl or rcll js repz imulb and fcomp mov (bad) notb in or rex.WRX or movslq cli cmc cli int3 enterq imul rex.WR xor xor rex.RX lock (bad) cmpsl mov jrcxz (bad) push xor pop (bad) movsb jno clc (bad) rcl push loop cs mov add scas clc mov (bad) add mov iret not clc jne fisttp xor cli jmpq es nop enterq push repnz insl mov mov cmp and add cli loop enterq mov fs mov rorl mov (bad) mov (bad) xchg imulb xor in xchg jae enterq pop lea enterq test rex.WX leaveq shrb test xor pushfq pop (bad) fdiv int3 cli or mov xchg rex.WXB push sub in out push (bad) nop cmp test out mov fnclex add or mov lock push movsl leaveq cmp fs xchg mov (bad) repz cmp rex.WX xchg jns (bad) repz jae sub lods rex.R (bad) cmpsb (bad) or rex.WRX mov movabs pop rex.R xor mov (bad) lret sti rex.X adc mov movslq cmp rex.WXB fidivl es movabs jl adc push iret rex.WXB rex.RX nop add push icebp sub xlat mov rex.XB out loop cld xchg jne out jmp (bad) mov enterq mov sti jae xchg rex movabs sbb (bad) xor rex sbb cli int3 ss rex sbb jo push or retq movslq jbe lods jne sahf jne enterq add sub add jrcxz mov and pushq movslq cmp insb rex.WRX jne fstl movabs jae adc outsb push (bad) pushq push js mov int3 (bad) insl insb (bad) repz xor movabs or test jno cmp loopne scas or push movsl divl movsl int (bad) xchg sbb (bad) and (bad) rex.XB jg (bad) lods icebp cltd mov jne retq lods add (bad) (bad) xorl add or out cmpl (bad) in and testb adc jne sahf loopne callq jg rex.W out retq xlat decb movsb jno xchg cmp repz push in lret mov hlt xchg mov movabs lret in rolb pop jmp test and mov rex.WXB (bad) sbb outsl xchg pushfq mov (bad) mov (bad) xor and cmp xchg and (bad) xor iret insl scas xor in (bad) lods out jae sub sub mov loop mov in xor or (bad) outsl rex.XB cld fdivs (bad) (bad) movl cld jnp lret pop fldl out fst adc rex.XB add xchg lret or movslq cmp in push notb cmc and hlt out and xor movabs movslq adc ss xchg pop clc jae jo cmp mov mov roll imul jg imul decl mov movabs (bad) int3 push rex.WR (bad) jge (bad) rex.RXB in (bad) fwait or cmp jmpq fwait and cltd insb or mov test push (bad) jmpq (bad) (bad) sbbl fidivl xchg mov sbb rex.RXB (bad) movsl xlat cwtl je scas out pop or adcb jne icebp out sbb shlb rex.WXB repnz loop int adc outsb xor lahf mov pop cmp out (bad) jno clc (bad) retq imul (bad) cmp sub rcrl jne (bad) out (bad) cld movabs pop faddl rex.WX mov and int3 adc (bad) testl outsb sbb (bad) (bad) xchg imulb imul (bad) or mov mov add icebp pop adc out and sbb fnop roll and (bad) add jae (bad) or (bad) add sahf add (bad) cwtl mov add (bad) repnz adc mov xchg je cmpsl sbb in mov push stc (bad) cmp test add repnz repnz mov sbb xor push pushfq retq rex.WRX rex.R sbbl ss (bad) cmc cmp jl pop callq add icebp jp pop and push rex.XB (bad) rex.B addb adc xchg rex.RXB js pushq hlt or leaveq or adc (bad) (bad) adc sub adc imul and (bad) xchg or in add cld push xor adc rex.WRXB repnz push cs jne outsl push (bad) add push adc ss rex.WXB jmpq rex.WRX push mov stos jmpq movabs out (bad) jle or mov sub insl adc sbb cmc mov or rex.WB mov test mov (bad) xchg (bad) cmpsb mov (bad) (bad) sarl or jne or push hlt mov callq (bad) insl xchg jge test insb push adc pop xchg (bad) jne es nop push mov pushq test pop cmp nop rclb int mov or xor add or cld movabs add mov or retq rex.RB (bad) and xchg mov (bad) ss add mov mov fcomi push adc in xor subb fadds (bad) mov adc in sub xor cli jbe mov int mov mov hlt push xchg jo (bad) mov push add (bad) rol mov sub fsubr pop lahf in adc sti mov jmpq in je insb xor (bad) or rex.WRXB xchg scas int3 and mov repnz (bad) and pop iret and addb mov mov (bad) pushfq (bad) jo add andb sub mov nop mov mov jnp (bad) ss xorl (bad) and imul shl xchg mull cmc or xorl imul (bad) je (bad) movabs jne jg (bad) (bad) js cmpsb xchg in adc stos cmp (bad) pushq cld roll xor jmpq test xlat cmp jmpq mov retq jle lret add add and push pop movabs mov push scas xor int3 jne jno rex.WRB add rex.X lods rex.RX fs (bad) adc jmpq mov nop std rcl (bad) sahf pop rex.WR mov add add movsb mov and jmpq push cmp retq sbb cwtl xchg (bad) jae adc sbb rex.WXB std in retq mov cmpsb in repz xchg (bad) enterq (bad) cmpb sbb fcomp outsb mov (bad) pop sub mov js callq gs sbb jno (bad) jo test fildll lods movabs lahf adc or lret rex.RX insl rex.XB int3 mov neg stos imul sub (bad) xor lret std sub push insb outsl adc repz mov test jne and ss xchg mov cmovle push sbb xor int jmp (bad) adc xchg negb repz push mov jnp jrcxz or fst shl rex.W data16 (bad) ds xchg hlt mov callq (bad) clc xchg out (bad) xor and mov or xchg push mov (bad) lahf movabs jno (bad) pop (bad) jnp or ror (bad) hlt rex.WRXB rorb adc add out cli or hlt or jge jne enterq stos nop hlt jp (bad) (bad) repnz mov push cmpsl test movabs rex.WRXB lock repz outsl and sub (bad) stc sub and mov outsb add xchg rex.WRXB rex.XB cmp jbe repnz (bad) fstpt hlt and (bad) mov xchg cld outsl jbe mov pushq (bad) movsb (bad) jne cld (bad) rex.WRB subb test mov (bad) data16 (bad) rex.RXB add (bad) enterq data16 callq rex.RXB xor rex.X (bad) jg sub (bad) iret in retq mov rex.RXB mov mov mov mov es nop rex.B fisttp xor sahf stc js roll (bad) cmpsl (bad) std push fnop scas add sub cmc mov mov test jo mov adc cld out add out test xchg lock mov lods (bad) pop lock repz rex.RB mov push std idivb (bad) out add repnz jbe mov jrcxz xor mov (bad) fsub (bad) xchg pushfq and jbe (bad) fistl jne add stos out rcll sub fdivl enterq fs sub mov jne out es jmp insl (bad) int3 add jg scas adc xchg jae movabs cmc mov movsl mov lock pushq (bad) (bad) and fnstcw adc jns (bad) (bad) ds (bad) in pushq imul rex.RX sbb xchg movabs (bad) vmptrld addl (bad) mov jne sbb int fcomps rex.WRXB push enterq rex.WRB cmp xor lahf adc clc jg je retq add xchg mov (bad) xor incb jl rol loop push rorb add (bad) lods fidivr rclb pop jbe outsl push sub sbb rex.XB xor imul xchg cmp scas pushq jrcxz jge xchg cs fcom lock mov rex.R retq (bad) mov mov adc (bad) lret repnz sub (bad) add xchg jmpq rex.XB lock je icebp movabs movsb xchg (bad) rol rex.WRXB (bad) xchg add xorl adc test cmpsl rex.WR sar std movabs xor mulps mov lret adc (bad) shrl mov pop or sbb cwtl iret or (bad) movslq mov fisubl imul sub (bad) int3 divb sbb jl cmpsl iret xchg mov jo std cmp adc pushq out or xlat and push sahf sub movabs rex.W (bad) int mov mov gs (bad) fwait insb (bad) xor test xor add pushq loopne xchg push jl add (bad) test not test js add jo jge xor (bad) rex.WRB test loop add xchg jrcxz or and (bad) in enterq (bad) adc jmpq mov add test (bad) mov or popfq push cmp sbb scas sub mov fstpl movabs test (bad) xchg rex.RXB cmp rex.RX rex.WX movabs movb jns or rex.WB and (bad) and div (bad) adc jge (bad) rolb ss rex.XB scas and ss or rex.WX (bad) in push xchg and pop fxch rex.R (bad) jno callq fnstenv rex.RX and sbb out xor je jno or lret add jmpq sbb (bad) retq push add in (bad) jne in lods mov rex.XB repz lret adc (bad) nop roll movabs xlat rex.WRX (bad) or rex.RX cltd popfq not xchg movabs xchg outsb mov pop repnz data16 add fldcw retq add xchg pushq add scas mov mov (bad) mov rex.WRXB int pop imul pop (bad) in jno rex.WB gs add mov or mov out and jp rex.WRX jnp (bad) sub movlps adc xchg jl ds cmp enterq nop xchg es int (bad) pop rex.W sbb (bad) and lock int add (bad) repz (bad) push stos int pop in add (bad) cmp loopne (bad) insb add add clc outsb mov (bad) cld rcl push mov fxam enterq add xor (bad) xlat sbb out push addr32 add push mov push int3 lods retq cmp sti add (bad) xchg rex.XB jbe out cli hlt xchg repz (bad) imulb shlb iret rorb xchg cmp nop and (bad) cmp jne mov repz and je test cwtl jb or xor xor mov data16 lods and pop mov movabs cmc jne (bad) lret mov and and ss fildl mov mov (bad) (bad) cld mov (bad) xor mov push xorl xor imul je mov cwtl (bad) (bad) in rex.XB cld pop and hlt push sbb adc pushq fchs in sbb xor and sub incl imul loope insb or (bad) movslq mov xor stos cmp fldenv cmpsl repnz adc nop and sub xchg sub and in rex.XB and sbb jbe loopne mov xchg flds jns sub (bad) xor rex.RXB sub adc jg rclb mov sbb and fild (bad) (bad) sub (bad) xchg pushfq stc rex.RX rex.WRXB movsl sbb adc sbb push scas in rex.RB pop adc std movabs divl (bad) rex.XB rex.WRX or add xor push jl xor (bad) rex.WX xchg shrb (bad) imul js pushq push cmp out (bad) sub cmc rex.WR push cmpsb rex.WRXB rex.WRX insl (bad) int3 jno pop mov jrcxz (bad) flds loop sbb jrcxz (bad) jne or adc jrcxz and push and push out rex.WX scas retq shlb sbb and (bad) rex.RX jb fimull mov in rex.RXB lahf nop hlt add sti rex.WR (bad) xor lods add rex.X push jmpq jns fnstcw cmp pop (bad) stos jns imul pop icebp in xor rex.RXB (bad) mov adc lods or xchg jns jmpq fnsave ja sub (bad) (bad) (bad) insl pop mov xlat movabs rex.WRXB rex.WRB mov (bad) and or loop hlt xchg loop xchg xchg outsl jrcxz xor vcvtsd2si mov outsb cld int3 and xchg mov pushfq je out mov pop fisttpl sub push leaveq lea rex.WRX jle jmp (bad) or sbb (bad) or (bad) jne (bad) mov mov rex.WRX xlat std sbb mov mov push test and xor subl insl jmp ss stos cmp enterq repnz rex.WRXB (bad) (bad) (bad) xlat retq fild (bad) rex.RXB (bad) ja jle test fwait xchg testb mov in mov and (bad) push mov mov sahf mov push cmpl stos or mov add popq (bad) mov retq ss sbb (bad) jmpq shrb rex.X rex.WB imul lret imul fistl jg mov xchg rex.WX scas repz adc (bad) (bad) repz addl rex.WRX fwait cltd xor stc rcrb (bad) mov jbe fwait (bad) jbe rex.WRB add or mov mov adc rex.R rex.WXB clc jne sbb out push (bad) je pop in (bad) jo (bad) loop or pop lods rex.WR add imul or or sarb rex.RXB repz (bad) jo rex.WB xlat rex.WRX sbb push stc repz in cld loope mov int3 and mov jrcxz test (bad) pop fst shll jmpq mov jp (bad) sbb mov (bad) adc cmp add sub rcrb xchg and fbstp adc movabs push rcrb (bad) repnz pcmpeqb sbb (bad) enterq enterq cmpb adc xor (bad) movsb xor jp fs xor mov mov (bad) (bad) out nop adc rex.XB lods rex.X popfq pop imul shrb rex.XB xchg shlb xchg out (bad) adc rol es js in push xchg repnz xor gs or rex.RX fdivl out pop fbld test retq mov mov (bad) xor rex.WR subl out retq (bad) divb pop (bad) icebp (bad) movabs loope sub retq repnz callq jge pop adc sub sub out callq mov (bad) rex.WR xor scas out stc pop rex.WXB pushfq out xlat mov imul rex.WR out push jb jo cld scas negb retq jp movl outsl movabs je (bad) xor mov callq mov jmpq sub enterq ss pushq orb out outsb jp jrcxz mov sbb stos lock mov adc cmp stc ds or fidivrl in jmpq rcrb fidivrl (bad) jg je or (bad) retq and rex.WXB rex.WRX scas push sub add (bad) retq xlat mov xor xor (bad) movsl rex.X rex (bad) rclb popfq rex.X adc or fcmovu (bad) jbe decb popfq mov pushfq (bad) mov in or push cli rcll (bad) je or retq (bad) rex.RXB xchg rex.RX add int3 fiadd adc push cltd andl in mov adc mov (bad) xor stc iret (bad) pop movslq sub push jne data16 or out ja push shl mov xor or xor (bad) callq mov mov lods cltd xchg rclb jne mov rex.WX ds scas (bad) rex.RB repz xchg lahf xor in push push out shlb idivb int3 (bad) rex.R mov (bad) sub shrb callq (bad) cmp cmpsb (bad) stos rex.WRX mov (bad) std sub shl or fild loopne,pt jne jb (bad) xchg sub (bad) lock jl (bad) mov or jne,pt (bad) outsb std sub je (bad) notl (bad) repz add imul xchg rex imul pop stos fildl xlat (bad) lret add orb xchg addb insb rex.B std retq data16 (bad) test (bad) gs stos es (bad) (bad) retq in out xchg cmp (bad) jg mov lret and pmuludq jae mov rex.WX lods add sub jne jmp pop std mov pop lahf imul xchg pop cmpsb xrelease mov rex.WRB sbb mov (bad) xlat rex.B pop imul (bad) out popfq add xchg movabs (bad) repnz sub sub (bad) xchg enterq push cmpsb rex.RXB in fdivl insl loopne movsl cmpsb or cs adc xor (bad) rex.B movabs (bad) push leaveq xchg (bad) xlat add (bad) enterq jbe xchg adc add out add xor (bad) mov rex.RXB xchg xchg xlat or int je sbb jne (bad) or or or push sti sbb sbb rex.RB movsb (bad) add (bad) ja mov mov adc or imul gs repnz add (bad) (bad) cwtl or xlat iret (bad) std jbe pushq fcomp btr es rex.W add push sbb rex.RB movabs in sbb out or mov out in and or repz rclb add or es and or jo movsl sbb (bad) rex.WRXB retq pushq jmpq jg test pop fildl (bad) loopne add rclb out scas (bad) rcll xlat jae out retq rex.WRXB fwait push push mov mov jno sub add (bad) sbb outsb stc mov fcompl (bad) cmc mov cmp push (bad) adc jns fs mov cmp and mov jne (bad) mov fld1 (bad) mov stc fdivl push out rclb mov lock callq and lea adc jno mov cltd and mov cmc mov idivl xchg add rex.B lods jne xchg psubsb testb xchg fcompl mov (bad) imul insb cmc pop jns mov repz mov int sti div imul retq mov out push shrl (bad) rex.WX (bad) rex.WR push or cmc loopne (bad) in and out cld pop or (bad) pushq (bad) or jp imul (bad) add push or je xchg (bad) (bad) scas or jrcxz xchg xor jns retq mov mov push (bad) xchg sbb and data16 jne out add sub (bad) sbb movabs roll xchg pushq sti sahf jo (bad) (bad) xlat rex.WX rex.XB sub (bad) clc mov fcoms hlt adc loope (bad) mov rex.XB mov (bad) xchg jp and fcom add or xchg xor enterq movabs jo stos rcll rex.RXB rex out stc lahf cmp cli shrl rex.XB loope (bad) adc or hlt rex.WRXB mov mov test xor cs jb out je stos xor mov fisubrl (bad) mov rex.WRB xchg add mov clc imul pushq xor (bad) rcr and sub cmp sbb imul clc (bad) (bad) or rex.WR retq fildl mov std sub mov div and (bad) mul cmp rex.RXB (bad) add (bad) push cmp or (bad) sbb in (bad) mov orb (bad) rolb adc (bad) adc mov add mov xor retq or mov rcr rex.WR mov (bad) scas jl mov rex.R rex.WB rex.WR xchg lods lock jle xchg mov hlt nop (bad) (bad) or mov cld out rex.W (bad) (bad) add adc add xchg ds mov xchg sahf mov cld leaveq cltd shr lea in push and in ss (bad) xchg imul jmpq or rex.XB hlt add lock (bad) sahf mov mov pop std fadd insb iret sbb insb (bad) mov ror je rex.WRB test (bad) cmp in xor fsubrl rex.WRXB in (bad) add xchg mov enterq xor lret push cmp mov movabs mov jl popfq rex.XB (bad) xor cmp (bad) mov sbb fidivr mov sbb pushq mov fwait mov lock fs mov imul fcoms mov or loopne mov pushq retq jne mov (bad) rorb mov (bad) and push subl clc rex.WXB or lret clc iret adc adc and movsl loope jl (bad) (bad) rex.RXB in xor cmc test and rex.WR mov add rex.W vpsubsb mov mov retq pop or xor out cmp pop pop loop (bad) or (bad) mov xchg ds (bad) fistpl (bad) (bad) pop fbstp shlb ja push and mov adc mov cld (bad) int3 int3 jno or loop fisttpl clc jo (bad) test mov push iret (bad) jne cmpsl and out jg and xlat jne out lods fdivr rex.XB or mov mov adc xor (bad) add fstl cld push enterq insl push (bad) fstpl shlb mov (bad) shl movslq and cmc push icebp mov (bad) (bad) pop xchg movabs sbb or rcll xchg (bad) pop xchg (bad) (bad) add add or (bad) andl xor loop and adcb sbb fadds (bad) test fistl movabs mov sbb jl jmpq out jno loopne xchg in pop xchg mov (bad) xor enterq (bad) repz out xor prefetchnta mov rex.WR lock mov adc (bad) add and int3 lock cmpxchg cmp shll cli movabs jmpq (bad) sbb sbb rex.RX (bad) movslq (bad) (bad) movsl mov mov stos lods (bad) cwtl fnstsw gs stos jmpq mov jo movabs pop je (bad) adc callq xchg add jne cmp movabs (bad) outsb clc popfq adc lea (bad) (bad) (bad) jne jmpq push rex.WX stc test xchg mov js rclb sbb add fildl mov repnz and add cmp pop (bad) sbb mov fldenv sub sti rex.XB leaveq add and rex.WR callq (bad) fucomi adc xor enterq xchg sbb stos mov int3 (bad) int3 stc fwait adc rclb icebp cld ds mov push mov (bad) data16 or xchg adc cld mov push adc data16 jp and iret mov loope xor xor or jne leaveq cs adc pop jbe (bad) enterq cwtl mov fistp insb pushq add xchg int or xor std push fcoms add js clc mov push add rex.WRB ds push xchg fdivrs repz (bad) (bad) mov sbb mov hlt enterq loop add jbe (bad) mov push mov cltd callq (bad) and adc enterq lock addr32 jg (bad) adc mov (bad) fyl2x sub test mov (bad) mov rex.RXB jne push fdivrs mov sbb cli (bad) (bad) xchg notb (bad) ja add cmp rolb lahf pop mov xor and adc rcrl int mov add test (bad) lock rex.WRB cltd mov and rex.WR xchg sub fdivrp mov adc add and rclb rex.XB rex.R rex.R (bad) loopne (bad) lock sbb cmc sbb and cmp (bad) mov in mov push mov sbb (bad) mov (bad) clc (bad) (bad) and add adcb (bad) ja or xchg imul mov xchg xlat int ss iret pop fxch mov stc stos jb (bad) add neg ss xor test stc lock (bad) insl rex.RXB rex.WR retq (bad) fst jmp mov rex.WR sbb xchg nop cmp xchg add adc rex.WXB (bad) adc cmp leaveq or (bad) mov mov (bad) add add fcoml pushq out subl movsl jrcxz scas negb fsubrl movsb jo idivb or movabs (bad) mov sahf or (bad) icebp rex.RXB sub fs mov pop adc adc popfq sbb and incl loop cmp xchg out or xchg xor js sub in add pop xor (bad) jg sbb (bad) fwait roll mov icebp jne outsl in (bad) (bad) xchg sub (bad) movabs push mov (bad) outsb enterq sub (bad) jne (bad) or (bad) maskmovq testl cltd idivl (bad) jl nop (bad) (bad) xchg rex.WX mov push push (bad) lret sahf repnz iret (bad) mov icebp in (bad) notl mov xor jge rex.RXB addr32 add je or adc or loopne xchg mov adc mov (bad) cld xchg mov adc scas (bad) mov lock adc rex.WRB mov in imul jmpq ds add (bad) xor jne (bad) in rex.WRX rex.R pop adc jg lock cmpsb mov sbb rex.XB pop movabs jae jrcxz repz xchg (bad) sbb adc rex.WX in xchg jo imul fcom (bad) jae (bad) (bad) xchg xlat add negb std rol or sbb rex.WXB push callq lock or pushq (bad) add pushq movsb or (bad) xlat and jne jnp gs shl push mov rex.WXB xor mov es (bad) fcmovbe in (bad) (bad) cmc icebp (bad) mov mov mov stos sub (bad) je (bad) (bad) in push jg in faddl in rex.R lock ja ror test sub pop movsb xor sahf rex.XB xor sbb mov (bad) xchg imul rex.X adcb mov sub jo mov outsl (bad) movabs (bad) xchg stos clc or movabs mov sub sub push or and or and leaveq enterq mov lock (bad) sub icebp (bad) ss scas push (bad) sub (bad) xor pop and xchg push add cmc adc int3 fmull (bad) mov pop cmp jmpq movabs jno sub jb sub or sub (bad) or (bad) test xchg sbb jno ficoml sub xor and int3 push faddp mov int enterq stos stos jbe mov adc lsl jns ficoml (bad) add mov rcrb vmwrite roll movabs jns jg cld stc add rex.WR test add pop cld (bad) pushfq stos scas (bad) xchg jbe (bad) add pop or jmp push rorb scas sbb rex.X mov cld (bad) jrcxz clc es insl comiss paddw (bad) cmc rex.WR cvttps2pi pop adc mov add (bad) andb mov mov mov mov mov clc rex.XB jrcxz mov movsb in rex.WRXB js jo or jl or mov in repnz mov in (bad) fmulp in (bad) (bad) cli setg clc stc repnz not test and push jmp fcom out fdiv fistl add xchg je movslq push out (bad) (bad) xchg mov sahf cmp (bad) mov imul cmp mov mov repnz lock (bad) cmp int3 sbb xchg jmpq rex.XB int3 and movsb xchg (bad) mov adc iret (bad) jno pushq sbb stos pop add xchg sbb cli (bad) (bad) push xchg xchg jno pop mov jnp pop rex.WRXB rex.WRX adc xchg lock cmp jle mov repz mov mov push enterq (bad) mov and cmc in add out (bad) xor hlt ss sbb mov (bad) test pop mov mov bswap (bad) stos xchg push add enterq (bad) xor sbb sub pushfq pushfq in rcrb pushq adc jbe leaveq divl cmc (bad) xchg (bad) (bad) fimul and loope sub and mov xchg (bad) jbe add shrl add js cltd mov je push xchg (bad) (bad) push rex.X (bad) cmp decb je int (bad) rorl jne rex.R fisubl push sub xor mov imul sub imul add mov lock mov hlt je scas (bad) movabs (bad) add and lods sbb mov sub or mov jl (bad) pop fstpt jmp out ds (bad) jb (bad) xor iret pop mov outsl data16 fnop in pop jmp cmp mov int3 repz mov mov mov es je rcll rex.W pushq push xchg xor js push mov mov xor sub por cltd in pop rex.B and outsb outsb (bad) rcll (bad) xchg retq jmp mov adc (bad) lret jne scas sbb pop pop (bad) movslq jle rex.B mov adc push (bad) ja (bad) loopne je popfq lea mov pop insb insb (bad) ffree rex.XB mov mov sub outsl movabs (bad) (bad) test mov mov out clc mov jrcxz fidivl mov mov shlb xor rex.W fs mov shl xchg or jge lret jbe mov gs xor enterq lret cwtl adc cmp xchg (bad) cld cmp or out xlat lods rex.X loope xchg rex.B imull pushq notl mov (bad) add idivl add add rex.WR movabs fistp pop push sub test (bad) ror sub adc rex.WRXB rex.WB outsb loopne and mov callq gs mov pushfq retq sahf sarb push add (bad) out fwait xor repz pop pushq cmp (bad) (bad) pop cmc movabs sbb fcom clc add in rex.XB out movsb xchg movsl callq adc sti sub sbb pop rex.RXB add jno or mov xchg mov jg rex.W xor test jne (bad) int3 (bad) sub insl mov (bad) mov cld push rcrl rex.XB fwait shl hlt ja fs cmpsb fs movsb ror rorb unpckhps hlt mov cli mov jmpq sbb pop xchg sarb rex.XB (bad) out jne rex.X retq mov xchg sbb jno std int3 mov jl mov add loop rex.RXB push iret push cmpsl or mov (bad) nop jns adc xchg mov int3 (bad) pop (bad) add cmc incl add test pop fs lock mov mov enterq nop (bad) xchg (bad) add cmp cmc and pushq xchg out xlat add cmp and xchg add movabs pop cli rolb mov mov rclb ldmxcsr xorl (bad) and adc pushq repnz std nop mov or out (bad) sbb repz (bad) decb cmpsb pushfq or enterq push insl popfq cmp fnstcw int3 out fiaddl mov rex.R sbb insb add xchg divl fmull (bad) mov jp (bad) sahf frstpm(287 lret rex.RX pop insl (bad) je mov (bad) rclb jp xchg in fs mov mov adc and out std hlt xor shlb xchg int3 jne pop rex.XB mov xor push sti rex.XB jl push adc outsb fiadd xchg sub je shrl jnp rex.R outsb rex.WB scas out jle lods rex.WX rex.RX jg add pop xchg jne (bad) ja stos movabs in shlb mov (bad) int lahf fwait enterq rex.RB xor lret sub add int (bad) stos mov (bad) mov sbb (bad) rolb test out sbb (bad) movabs xchg add rex.WR scas rex.WRXB lock mov sbb rex.W retq add mov outsl xlat fsts (bad) loopne ficoml xchg std pop and int cmpl cltd add mov nop movabs or jp push mov rex.WXB and rex.WRXB test or xchg (bad) int jb (bad) xor (bad) ficom add out mov mov jrcxz mov or mov in jb add icebp (bad) jb (bad) or sbb xchg outsl fiadd rex.WX rex.RX xchg sbb push fstpt movabs or mov es mov rex.WRXB lret (bad) xor (bad) je jp mov pop callq add scas mov xor scas (bad) (bad) xchg add and jae imul hlt fnsave iret int3 scas hlt rex.R cmpl push (bad) xchg mov (bad) cwtl sub rex.WR push sub jl cmpl movabs movabs sti push enterq fimull out out addr32 pop (bad) stos stc pop pop lret fbstp (bad) (bad) adc pop callq push mov in mov andb mov (bad) (bad) cpuid jmp (bad) push jmp push fmull (bad) (bad) sbb or xor (bad) or (bad) loop callq int adc repnz rex.WRXB add jmpq mov out pop shll xchg adc adc sub test xor mov pop (bad) and nop pushq or fmuls lret add out psadbw pop mov jnp mov stc xchg mov sbb cmp (bad) loopne cmp loopne divb stos int xor mov movsb push sbbb in (bad) xchg cmpsb jrcxz rcr push (bad) xchg sbb int je xchg xchg xchg outsl mov loopne and sbb lock add out repnz (bad) divb xchg pop or (bad) rex.XB pop ror (bad) add and (bad) rex.XB iret insl sub fist lods sarb fucomi (bad) jns lret (bad) cwtl test mov (bad) push cmpsb xchg lock add cmpl ficomp and sti movabs insb movslq (bad) xor jne icebp cmp xchg hlt xor data16 test cmp unpcklps and xchg and rex.RX mov (bad) fwait addr32 popq sbb adc sbb xchg pushq xor jmp jne push movabs fucomi and out cmp rex.WRX sbb add lahf int3 stc pop (bad) retq and rex.RX (bad) leaveq movsl (bad) loop jb (bad) mov xchg sbb addr32 xor movsb xor sbb push cwtl imul (bad) mov (bad) fisttpl xchg mov add out (bad) repz pop nop hlt mov jl std add jne rex.X rex.WRXB sti outsl lock enterq fsts stos cmpsl cmp (bad) (bad) jbe (bad) loop pop (bad) in sub xor ds sbb (bad) or xchg gs jne pop loopne (bad) add retq imul fistpl or not jb mov scas fisubrl adc mov (bad) (bad) add test mov or xchg add pop gs js jae rclb cwtl rex.WR xchg lahf or test rex.WRX data16 adc xchg nop push (bad) (bad) xor adc or not or pop jb adc add add push mov mul jrcxz (bad) sub add (bad) sarb (bad) (bad) xchg hlt adc lret mov sub out (bad) jp mov mov (bad) lods (bad) lret (bad) xor (bad) or sbb popfq (bad) add in add (bad) jne push gs xor in lods add icebp cmp stc jmp jns jmp rex.R cld lea (bad) (bad) rex.RXB jnp mov cmp in pop (bad) sub cmpl (bad) (bad) inc xchg and adcb mov rolb andb push (bad) (bad) cwtl (bad) imulb xlat hlt movabs mov nop sbb push retq leaveq rex.WRX lock xchg xchg andb (bad) jnp cmp (bad) (bad) fwait xchg jne fcmovbe ja sbb scas or stc fisttp cld xlat add (bad) (bad) jb and mov and adc in or nop mov stc jl mov pop mov and movabs iret test mov mov rex.WRB mov mov mov movsb mov sub int3 nop xchg xor fnop clc fidivl push or sub or lock mov mov lret (bad) (bad) mov add in (bad) or mov fstps sti rex.W pushq cmpsl sub test jne jl (bad) jge mov jne cmp xor movb mov xchg sub sahf (bad) xchg mov sti mov imul jmpq xchg push xor xlat jne pop lahf lock sub mov insl rex.WR out movabs mov rex.WR (bad) fwait (bad) jle (bad) lahf loope jmpq (bad) lods (bad) jae ja loopne and xor outsb out jne (bad) cs jg and leaveq jle lahf xchg xchg lods xor adc nop fldl2e push movabs cmc fwait repnz mov or adc mov lock pushq mov sub or lock out test fldenv sub lret mov mov xchg and (bad) add (bad) sub cmp repz xchg imul loop (bad) add push add movabs push fildll (bad) sbb loop adc adc xchg lock or je push add out push xchg sbb or adc (bad) callq mov (bad) test neg cs hlt outsb (bad) (bad) (bad) xchg xor hlt (bad) or and icebp loopne (bad) push in out rolb mov push fs lock (bad) xor shrl push (bad) or mov sbbb out jg cmp insb out in or (bad) in insb mov pop int3 hlt push int3 out add cmp or imul stos add jrcxz mov sbb adc in lahf mov mov and ja idivb cmp loopne in andb add mov pop mov out fistl vpmuludq sbb jge lea mov xor rex.RB ss or xchg (bad) mov (bad) es mov lret sbb out fnop js (bad) mov movabs mov rex.WR push incb mov test adc jrcxz adc sub repnz shll test xchg sbb jmp jne mov pop jmpq int mov jno popfq xor rex.W in sarb loopne nop mov addr32 jns cmp (bad) push shr out fistpll (bad) outsl or xor or xchg fdiv rex.XB cld pop lea cmp (bad) xor sti or mulb rex.RB in add lock in sub cs movslq insb rex.R or fdivl and pop callq mov repnz lret stc (bad) ja push mov xlat sbb xchg (bad) stos cmp repz shrb out xchg adc adc scas cwtl jle stos callq hlt fdivl fcomp lock icebp popfq cwtl jp cmpsb sub rex.R (bad) cmp (bad) jne (bad) lock (bad) loopne adc (bad) adc sbb adc shrl in jne fwait lahf jo insb xchg rcrb int mov lret adc (bad) pushfq (bad) lret (bad) push (bad) sarl jne mov pushfq cltd movabs shrb rex.WB jne ffreep (bad) add (bad) and cmp xchg xchg sti retq adc shrb mov in out push adc loope and test and sarl fbld jbe (bad) xor js out xor (bad) (bad) (bad) xchg loopne insb js mov jo mov rex callq sbb xlat jnp lret ja rex.RXB push xchg pop mov mov (bad) or popfq mov jne sbb xchg ja loop nop mov (bad) (bad) mov push mov push add data16 ja xor mov xchg (bad) je xchg jbe push sbb fdivrs or adc or (bad) push or (bad) (bad) push cmp loope prefetchnta jb mov callq in jne movabs or movabs cmp lret mov (bad) (bad) lret out mov push fdivl and xchg jne shlb rex.XB rex.WXB rex.X pop rex.WRXB movabs push xorl or push movabs lahf (bad) cmp nop xor xor data16 mov rex.R roll rex.RXB (bad) push push cmpsl hlt rex.X rex.RB mov (bad) rcrb int3 or lret retq lea rex.XB rex.WR rex.X pop (bad) xorb adc fdivrl out ja xchg (bad) in and callq push jnp rex.WRXB cmp mov mov addb rex.WRX rex.W popq shrl lods (bad) sahf jne rcrl (bad) xor rex.R flds cmpsl xchg cmp pop (bad) jmp retq sbbl and notl testb (bad) rex or jge hlt pop rcrl cmp sbb mov imul (bad) ss (bad) xchg rclb (bad) movsl push cmp movsb outsl xor sbb fadd add (bad) sbb outsl iret mov loop (bad) xchg pushq iret jo push stos xor mov mov add mov cmpsb stc sbb (bad) xor rex.X adc cmp retq xchg callq int3 (bad) retq lea insb or jo xor xchg (bad) jne or mov rex.WX out push loope jle stos jge or xchg adc xchg rex.B std (bad) jl in addr32 or (bad) jbe add js sbb (bad) ss popfq jb je rex.WRB cltd in stc adc (bad) lret rex.RB mov jle ja xlat jp (bad) (bad) add mov and sub cltd hlt push (bad) lea push xor lods (bad) (bad) mov lret and stos insl (bad) rex.WRX (bad) lahf sbb out decb fsubr faddl outsl mov xor xchg retq jne and mov enterq (bad) adc (bad) (bad) jp rex.WRXB int or adc movsb xchg sbb pushfq or mulb pop es sub xor sub xchg jo cld sti push hlt movabs push repnz push test (bad) push and add pushfq rex xor pushw adc mov rex.XB loopne jne adc jrcxz xchg movsb mov fdivrs rex.WB jg cmpsl mov mov rex.WR mov rolb callq sub rex.RXB sub push pop mov jne imul and rex.R lock mov nop pop pop push rex.WRX (bad) fcoml jl push cmp cmp in mov or scas mov (bad) rcll (bad) mov xchg jmpq or xor js cmp hlt retq test push and mov mov je fildl (bad) and (bad) add rex.RX leaveq (bad) sbb mov mov add outsb xlat push add (bad) rex.WR movabs mov cwtl jne sbb (bad) push mov push loop out xchg fdivr rex.WX (bad) (bad) mov jp ss mov (bad) outsb js xchg (bad) out adc or rex.RXB icebp mov fdiv rex.XB (bad) and int adc adc or and push rex.RXB adc test (bad) xchg push (bad) pop mov neg rex.WR ja clc ja adc sub insb rex.WB ja jo imul sbb pop rex.RXB (bad) rex.W mov sbb mov xchg retq (bad) jmp mov sub (bad) cmp movsl rex.WXB jno mov (bad) xor (bad) repnz xlat (bad) iret (bad) (bad) mov jno rclb test (bad) (bad) cs mulq insl (bad) rex.WRX and and mov jrcxz icebp in (bad) sbb xor (bad) jp pop cwtl add or pop cmc cmp repnz or fild mov rcrb xor pushq cmpsl lret mov xchg insl mov (bad) sub movabs fisttp jae mov jmpq (bad) enterq or mov push sti or push rex.WR xchg push repnz (bad) in push add rex.WR (bad) sub (bad) sahf andl mov (bad) pop iret jne xor fild adc adc xchg pushfq mov loopne lods shll lods mov push adc xor movsl out or cmpsl cmpl (bad) (bad) xor or rex adc rex.RXB adc cmp insb sarl pop fs (bad) fimull (bad) (bad) sub retq retq push jp mov ss add jbe and (bad) push mov and sbb or (bad) (bad) mov lahf in add add je scas (bad) out xor (bad) test out (bad) cmc neg (bad) nop jg movabs xchg and and addr32 jne add mov andps movslq outsl adc cmp lret jl mov xor adc xor and mov (bad) enterq mov (bad) (bad) mov cmp (bad) mov adc xchg adc (bad) cmp cmpsl (bad) cmp xchg shlb nop (bad) movabs and mov fisttp mov (bad) mov iret jo mov (bad) callq rex.R mov rex.X retq cmp movabs (bad) add (bad) push movslq movslq stos adc movabs (bad) shl and lods cmp pop negb xchg pop (bad) adc and (bad) fucomp push repnz in (bad) adc add xlat push out jge xchg (bad) ficomp or (bad) (bad) (bad) sub int3 movsl add movb sub lahf int sub mov movabs (bad) adc stc movslq (bad) mov je pushq jo mov jmp retq enterq rex.WX push stc rex.B and iret sbb xlat imul ss pop (bad) or mov jne sub sub int clc repz outsl out movabs je xor movabs jae xchg fstpt stos push imul pop (bad) jrcxz mov add and rex.WRB adc adc sbb (bad) jne jmp jno push mov sarb push pop repz rex.R adc loop xor add repnz data16 cmc stc jbe (bad) cmp cmp fwait nop (bad) xor and out xchg pop icebp mov (bad) je or out or cmp push (bad) or xchg sbb and (bad) (bad) (bad) frstor pushfq divl insl fs cmp mov (bad) sbb sahf rex.WR out out push add je pushq in (bad) loopne xchg hlt ss js insl sbb (bad) and mov rcl adc (bad) fwait sbb loop cmp shll sbb iret (bad) or fcmovnb push rex.WRB repnz pushq add nop rex.B iret clc divl (bad) jl out sbb or xchg (bad) pop sub out (bad) xor sub rex.XB lock xor xchg and rex.XB (bad) sub adc rex.WXB rex.WX rex.X test xor (bad) (bad) (bad) xchg mov push xor in add pushq adc test lret loope scas (bad) out (bad) sarl (bad) push js (bad) cld decl (bad) pop sub ss add sbb (bad) (bad) callq mov (bad) sub and pushq add loop in cli out jne rcrb (bad) push jns xchg movabs rex.WRXB es adc pop movabs movabs mov hlt (bad) pop (bad) mov mov or std jae sbb jne mov movl cs out adc stos sbbb adcl in mov cmc fs div sub and rex.WXB nop mov add nop (bad) (bad) jne (bad) je jb mov xor mov sub (bad) cwtl cmp je (bad) (bad) cmpsl addb or add loop in pushq xchg imul nop (bad) jp (bad) imul js and popfq pushq adc add push (bad) (bad) insl sbb popfq sub adc (bad) es rex.X pop adc shl jo cld (bad) jno xchg out adc (bad) mov cmp jae (bad) push jae (bad) cmp or mov (bad) cmp andb lods test or clc mov nop mov cmp (bad) jae cmpsb mov mov (bad) pop in xlat test lea je imul stos add scas out (bad) adcl cld rex.WB push cmp rex.RX and fwait cmpsb rex.RXB lea in push hlt xor lea ja xor int (bad) lock movabs mov sub adc cli and add outsb xchg stos loop add es (bad) and adc add enterq rcll mov (bad) imul jae lret sbb hlt jg out or xchg jae (bad) push in je hlt loopne xchg enterq mov in (bad) sub scas xor jo adc movabs popfq test out pop mov movabs jno sti (bad) std add lret xor lcall xor sbb mov mov xchg faddl push test rex.WXB push callq imul lods rex.W out jg (bad) cwtl mov int3 imull xchg adc push sbb (bad) fstpl push or rorb add xchg rex.WB adc sub (bad) jmpq in imul add pushq xchg shl xor pop cmp (bad) fwait icebp mov mov test rolb xchg faddp jg (bad) (bad) xlat cwtl (bad) (bad) push or rex.RX jrcxz ja (bad) xor sbb mov rex.R pop leaveq sbb cltq (bad) (bad) orb rex.B xchg add rex.XB enterq mov mov adc shlb rex.WRB (bad) mov sub mov xchg mov sarl insb sub mov adc rex.WXB add rorb add push mov or lods insb repz sbb outsl adc rex.XB fwait imul and jns ficompl rex.WR mov popfq out jmp (bad) jp xor xchg mov je loopne lods sbb fs (bad) xchg mov (bad) fnsave (bad) ja repz add add add lock fcmovnbe or add push xor cld and (bad) sbb sbb es scas xchg rex.WR rex (bad) out sub movabs (bad) xor sbb ficomp loopne mov sub cmp or (bad) test or cs sub pop pop (bad) pop rex.WRXB sbb jno rex.B xlat (bad) hlt jno xlat (bad) and sbb cmp mov sbb sub je pop jrcxz jle out ds hlt fsubrl (bad) sub insl (bad) jp out and shl (bad) je int3 in (bad) or (bad) int cmp fisubrl std (bad) outsb push (bad) imul xor push add jno adc cmpsb gs and in in addr32 adc add (bad) pushq (bad) push leaveq and movabs rex.X xor and and (bad) mov lock (bad) push cltd and iret (bad) ss mov cld jg imul sbb cli fsubs jmpq (bad) cld rex.WRX jno (bad) fmull rex.XB (bad) rex.WB shr rex.WR or xchg cmp adc sbb retq je adc movabs add mov (bad) fs (bad) (bad) in in xor pop adc jno cmpsb insl rcr insb xchg paddusb fdiv xchg rcl shr repnz jno es (bad) push sbb (bad) mov add jae adc mov rex.W scas rex.W leaveq mov jno xchg fnstenv in rex.WB repz sub mov cltd cld sbb adc js lahf jno mov out or movabs or iret test icebp adc hlt fcom (bad) jbe rex.WXB rex.RX nop loop movabs (bad) mov cmpsb adc cltd in xor xchg adc xor repnz cmc cmpsl jno movabs adc loop (bad) test imul cmp (bad) js test add repnz cmp rex.R rex.WRXB mov imulb shrb out sub xor (bad) frstor sbb or sbb xlat (bad) (bad) stos imul add fcoml cltd enterq stos imull pop sbb (bad) movsb sbb adc rex.XB (bad) push xchg pushq or (bad) mov cs rex.RB push (bad) hlt test push mov movslq pop iret rex.WX mov xchg rcl pushq xchg add (bad) out jnp (bad) test scas xor cmp jns mov cmp jae mov mov sbb jrcxz xchg in sbb fs or (bad) adc push pop cmc jrcxz mov adc mov xchg int jno jle rex.XB xor mov adc pushq xorb mov icebp out mov adc push xchg fs scas xor in lock mulb push out jbe rex.WB jmp fsubs lea rex jmp (bad) push adc and adc fsts xchg (bad) (bad) lahf xlat sar pop push mov nop (bad) not rex.R add adc faddl adc pop pop or pop cwtl fs (bad) cmp div sbb mov rex.RB pop (bad) insb (bad) (bad) insl fisttpl add and rex.WRB jmpq scas lret shll pop (bad) rex.WXB (bad) (bad) or pop mov xchg sub (bad) jmp sarl push enterq bswap jne test cmpsb add push xchg sub xor fcomp and cmp mov retq mov (bad) and adc adc mov sub cmp cmc or (bad) nop adc or (bad) js stc (bad) (bad) movabs adc loop sbb jno push rex mov pop scas xchg enterq neg mov cmp fnstenv popfq jrcxz rol subb mov jo rex.WRX lock or fstpl xor cmc in addr32 jne sahf and xchg (bad) movabs stos mov jo (bad) push idivl pushq movsb cld outsl lock leaveq sub mov sub cld movabs rex.WRX repnz sahf (bad) lahf rex.WB (bad) xlat xor push adc add adc rex.WRXB sub jb sub (bad) cmpsl pop mov rex.WRXB (bad) add mov lods leaveq (bad) (bad) xchg mov callq rcll popfq rex.B callq mov mov sub enterq loope pop sub gs jmpq rorb adc mov pushq xchg loopne jne and xlat scas mov sub sbb imul cmpsb lock in test out (bad) (bad) xor (bad) cld (bad) in adc adc (bad) in cwtl mov mov pushq add adc adc sub sarb hlt jp mov out icebp mov pop (bad) sbb lods pop and enterq iret xchg xchg xor mov xchg repnz insb insl sub add and push imulb mov rex.WXB je rex.XB (bad) or xor rcll (bad) xchg stc xor incb imul jbe test mov (bad) loop or (bad) (bad) iret movabs push add roll sbb sbb fdivl ja hlt (bad) lock rcll pushq (bad) jne push in subl add mov mov je push (bad) ss stos jbe mov (bad) mov int ficoml push xor movabs add add insb callq jg xchg xchg mov callq and shrd mov rex.RXB sti xor jbe xor (bad) xchg or nop (bad) or fwait sti (bad) xorb sti jp xor sub ss cmc adc push (bad) sub add (bad) jbe lock leaveq jle (bad) (bad) callq mov popfq jo jns test idivl xchg int lret movabs hlt (bad) xor rex.WRB rex.WRX cmc nop callq fdivr jno out out xchg enterq (bad) pushfq (bad) hlt (bad) pop loopne imul out fs jmpq push retq addl xor add in xor rcl adc (bad) push lods pushfq loopne jno lods hlt push ja es insl mov je jo sbb rex.RX fwait js jae insb (bad) pop adc (bad) (bad) (bad) push adc out mov pop adc jns cmp add out pop add mov int3 xor mov (bad) jmpq enterq sbb cmpsb add adc sti sub jo and mov pop xchg add outsb hlt lock imul xchg and or mov sub mov xchg movsb jnp jl (bad) hlt mov loopne (bad) (bad) pop cmp (bad) (bad) add in loope xor js and rex.WB mov sub mov test rex.WRXB jae xor (bad) rex.X (bad) mov scas (bad) xchg jns movabs js (bad) rex.W test add adc (bad) int pop imul test (bad) callq out mov ja test loopne (bad) mov sarb loop add xor (bad) in rex.RX movabs adc in (bad) shrl push mov jle sub mov nop xlat int3 push ror jg pushfq and mov mov rex.WR cltd test adc and or push jne rex.WRX repnz rex.XB rex.RXB test fcoml retq rex.WX sbb repz adc sbb not xchg mov hlt mov mov mov rex rclb cmpsl lret add cltd push jle (bad) test or sub mov cltd jge (bad) (bad) shl repz cmc mov mov add sbb (bad) jle pop mov imul xchg or jo pop and movabs repnz or mov mov add (bad) (bad) or push jg adcl push or stc add or and fsubs xchg movsl cwtl loope or sbb xchg jp (bad) retq (bad) mov rex.XB mov nop mov pop pop (bad) cld rolb sub pop repz outsb pushq in pop and cwtl out adc int3 add push notl mov out repz mov pop jne,pn (bad) in lods jmpq adc push or (bad) (bad) pop jmp movb (bad) jbe std negl push ss fdivs add xchg adc int3 xchg sbb negb (bad) and cmp movabs in (bad) cli adc test sub in (bad) lods or sbb cwtl add cmp nop in pushq cmp jno retq es sub fst rcrl xor insb sub je xchg adc mov add pushq (bad) in cmp test pop (bad) xchg rex.R sbbl lret stos adc stc mov add fwait outsb js mov fdivl xchg add xchg movsl divl out or push movabs (bad) cltd sbb retq rolb rex.X cmp fcomip loope,pn (bad) pop xchg pop adc or lahf je jrcxz mov sbb xor loop adc sub xchg (bad) adc jge rex.RX ficoml push mov mov rex.XB lock (bad) (bad) sahf movabs push (bad) lods mov mov repnz xor mov mov push sbb and (bad) (bad) (bad) xchg push rex.XB (bad) adc pop (bad) cmp loopne (bad) test xchg and xor fdivrl orb cld in jne (bad) std jo (bad) sub int3 retq (bad) mov (bad) lahf sbb cmc sahf roll mov lods ss (bad) (bad) sub xor push int3 fdivrs or mov js je (bad) stos xchg adc adc scas rex.B xor mov pop addb (bad) rex.WXB jb lock retq push or out outsb mov add notl rex mov insl jns fmull imul add imul add out (bad) mov push jle stc lahf xchg scas add xchg nop je out hlt subl sub mov or hlt rex.RXB or mov lret stc (bad) mov add (bad) cmp in and add or in lock stos or cld cmp mov mov jp rex xchg stos fisttpl add add (bad) pop sbbb (bad) (bad) pushfq xchg rex.XB adc add leaveq nop ja jge mov test jno cmovo test jrcxz cmp (bad) jo pop (bad) sti adc lods mov pop cmpsl ja pop (bad) imul (bad) sbb pop icebp add rorl movabs notl jmp sbb or pushq je xorps (bad) mov sti pushfq cmc mov cmpsl mov (bad) popfq out retq (bad) (bad) xor (bad) jmpq fmull (bad) pop callq (bad) fiadd sub loop,pn pop jl gs (bad) mov jae insl (bad) (bad) or adc (bad) movabs in (bad) mov pop cmc jbe push cmc testb push jae (bad) mov (bad) movabs mov stos xor mov rex.WR fcmovnu (bad) movsb mov add sbb jmp orb cmp add (bad) push nop (bad) test and pop addr32 test or movsb movabs mov push insb add fadds push rex.WX add test mov rex.W iret fbstp push rex.WXB repz ja adc repz (bad) cli setp add rex.RXB in movsb adc add jrcxz (bad) rex.RB mov cmc fsubs testl js nop cltd and jo scas enterq pushfq cld jo cmpsl and (bad) sub rex.B es movabs mov (bad) enterq pop xchg (bad) repz test fistp rex.RX cli jp addl addr32 xchg ja adc rex.WRXB (bad) mov vmovaps cmp lret cmpsl add test sbb (bad) mov sbbl sub xor incl (bad) mov leaveq or cltd rex.R pop fwait cmp fmull rorb rex.XB movabs (bad) out push xchg sti and not (bad) (bad) jl fsubr (bad) enterq pop mov jrcxz iret adc jne jl and sbb cld jg lock and and rex.WRB pushq addb (bad) (bad) int fimull jo or xlat rorl in cmc push lahf and xchg and and sub callq rex.WRX insl and xor icebp (bad) (bad) xor enterq fcomps icebp mov subb lahf insl pop xor rclb callq xchg mov adc stc and (bad) cwtl subl test out test setg (bad) jrcxz test cmpsb pushfq sbb rex.XB mov cltd cmp bnd test xor cmp loop ss lods xchg (bad) xchg (bad) not rex.X rex.WXB cmp add push jae cmpsb (bad) test int3 test xchg (bad) push pushfq (bad) rex.WR xor or (bad) ss (bad) movsl sbb hlt mov fsts out pop adcb sbb push repnz add sub or jmp rex.B xchg add pop stos (bad) jne cmpsb hlt xor push or xor cli ss sbb movabs clc pop or sti add jge enterq stos fdivl (bad) xchg or je xchg jbe lea push movabs pop ds xor imul xchg movabs stos nop mov or mov xchg adc and (bad) xor jmp mov mov pop (bad) nop fsts or mov pop (bad) mov xchg sub xchg stos outsb xor scas int (bad) (bad) (bad) stc adc (bad) add xchg div (bad) pushfq loop xor lret hlt iret mov (bad) lock jge (bad) stos jbe cld sub (bad) cmp scas scas adc cmp jne mul orl rorl xor repnz sbb loopne (bad) or imul pop iret callq (bad) (bad) mov jmp jbe xchg mov jno (bad) enterq jns loopne rex.XB or stc mov rcrb rex.XB sbb cmp icebp imull push (bad) (bad) (bad) xchg outsb fiadd jnp cmp fisttp adc and (bad) (bad) mov in or popfq or pop cmpsl (bad) (bad) push or pop fs push (bad) test fstpt (bad) cmpsl xor xchg add fcom jbe loopne xor push (bad) cmp (bad) rex.RX fwait (bad) xchg lahf nop xlat or adc (bad) xchg push mov jg test (bad) scas rex.WR (bad) (bad) loope sub xchg adc add pushq imul mov rclb stc (bad) mov sub hlt (bad) and es rex.RB (bad) and adc lea (bad) loop (bad) jne pop (bad) adc fucomip or xchg int3 rex.R jo jne mov pop (bad) (bad) insb mov sarb xchg mov (bad) lret (bad) icebp mov clc test mov fcoms and out lahf (bad) rcl (bad) (bad) scas jp cmp sbb and movabs cmpb (bad) mov hlt out jne xchg jne in iret loopne rex.XB xchg fdivrl icebp rex.WRB ss out addb in cmpsl icebp add mov loopne stos movabs (bad) xor or lods sbb (bad) pop callq adc int3 fwait rex.WB bnd rex.WXB (bad) jne in rex.WRB mov shr (bad) mov rex.RB repnz sbb je sti insl (bad) rex.X jge or subl mov (bad) callq in sub scas and xchg jno (bad) adc sbb (bad) xchg push sbb repnz adc cltd and adcl sbb out and hlt movabs pop mulb mov sub test push add jno addr32 add fdiv cld fcomi stos movabs xchg mov xchg jrcxz loop jp js add (bad) rol push int3 repz add int3 (bad) rex.R ficoml rex.W mov mov nop adc retq repnz jae rex.WRB rclb xlat enterq rex.W in adc in mov cmp (bad) or fcmovnu pushq clc fnstcw (bad) (bad) stos mov mov cmp fldenv (bad) movabs rex.WRXB add rex.WRX mov jne leaveq and test repz sbb push lea imul addl cltd mov rcl imul jle (bad) add movabs adc (bad) fdiv jns imul mov test (bad) rex.W push out or and popfq andb mov rex.B (bad) (bad) mov push imul add mov (bad) jmp and xchg jne cltd pop add sbb push and xchg mov xor rex.B cmp retq (bad) (bad) sbbl sub iret jne out and pushq rex.XB test divl or ja or xor addr32 sbb or sar in (bad) cli jnp pop subl (bad) stos movb pop (bad) mov xchg (bad) pushq test js mov or xor rex.B (bad) or rex.WRB out add xchg divb repz fidivrl out rex.W or pop and add sub pop mov xchg clc movslq sub js in rex.RB (bad) pop adc (bad) (bad) sub jp in loope sbb add jrcxz lret sub lret outsl loope push ss pop out rex loop out add (bad) sbb pop shll (bad) lret loopne (bad) movslq enterq xor stos xchg xor mov mov (bad) sbb sub mov (bad) and out js (bad) fadds rex.WRX ja faddl hlt jp mov scas sub jb (bad) rorb jo int cmp iret retq movabs pop loope sarb (bad) or xor adcb in loopne mov (bad) (bad) imull jp xchg push fistl mov jle (bad) shrl sub or jg mov mov push adc cmp fwait in push (bad) xchg movsb rcr or negb pop (bad) fwait stos add xlat (bad) mov jl (bad) xchg mov popfq sti idivb push mov mov xchg int add xchg and sbb mov sbb je add in xor rex.X add sub test (bad) imul std in jp cmp lret imulb negb add repnz fsubs cmpsb (bad) sub nop push jg pushq (bad) add movsb (bad) sti mov movabs test jmp rorb pushfq scas rex.WRXB sbb js and imul mov xlat decb (bad) mov (bad) (bad) insb out fidivrl rex.XB xchg (bad) int3 scas or shlb je iret movabs sbb fsubs mov stos adcl pop in pushq adc xor std mov movslq pushfq and add mov adc xchg push andl hlt xor mov (bad) xor hlt outsb rex.WX xchg (bad) in div sti mov (bad) and add (bad) out rex.RB orb lods and cmc incb xchg mov xlat sbb mov fisubr imul jrcxz (bad) sarb jmp adc cmp je rolb stc je jne xchg mov mov xor pushq lock (bad) (bad) mov cmpsl xchg xchg lahf hlt testb mov (bad) int je (bad) sub xchg callq sub cmp std (bad) pop mov xchg outsb cmpsb test (bad) adc and mov repz (bad) xchg push (bad) decb imul rex.B repnz lea push cmpl movabs xchg or scas outsb scas jnp jg enterq ror adc rex.WXB mov stos addr32 lock cmp adc ja and scas xchg or movsb add add leaveq push hlt jnp or cmpsb nop xchg sub adc add jne jne loop xchg (bad) and (bad) mov cmp imul fsts cmp (bad) rex loop mov push sub fimull jg xor sub or lods test ja movabs rclb or cmp rex.WR or sbb cmp lea scas enterq decb (bad) xchg adc jnp out add imul retq rex.WXB pop (bad) push pop pushq mov adc rex.RXB adcl mov xchg rcl and out pop cmp (bad) xchg (bad) js cwtl or mov testb jne enterq sahf sub test jl mov (bad) jne es fnstsw hlt or scas repnz rex.R (bad) loopne cmp cmpsl (bad) mov lea or jg sbb imul and jae (bad) int jl test leaveq (bad) shrl mov (bad) jb clc sub sub pop scas jnp (bad) xchg jnp insb jno rex.R rex.WRX mov idiv test sarl lret ja jl or (bad) mov stos xchg push add and imul rex.B rex.WRX push clc sbb cwtl or in and mov addr32 (bad) cmpl outsb mov cmp stos jg add rex.RXB movsb movabs jno (bad) (bad) jge and add shr stc adc xor xor (bad) xor movabs mov nop mov (bad) (bad) jno or or fcoml pop fmulp js mov jo test jae (bad) lock jbe jo and ja pop sub iret cmp xor add iret mov test and out leaveq (bad) fmulp (bad) pop negb lea (bad) mov scas rex.RXB and nop push (bad) (bad) (bad) mov stc jp mov mov repz movslq rex.XB callq (bad) rex.WX mov out (bad) int3 jrcxz adc je ror (bad) jge rex.XB add rex.WRXB loop push (bad) (bad) and mov (bad) push sbb or in or icebp (bad) (bad) (bad) jne icebp pop clc sbb xchg cmc mov (bad) callq (bad) cmc lret ss out pop in jae rex shr sub mov and loopne cld push pop (bad) xlat mov (bad) movabs in mov loope loop cmp movabs (bad) (bad) mov rex.WXB xchg data16 xchg or sub shl callq (bad) xchg in hlt (bad) mul enterq loop (bad) jne gs sbb iret adc (bad) in imul xor dec xchg and insl scas sbb sbb cld or add (bad) retq push popfq mov and callq rclb or rex.WR (bad) add xchg jne (bad) or out rex.WB ds cs cmp jl mov adc jg fistp add out (bad) mov (bad) add (bad) ss (bad) or flds xor cmp rex.RXB or add (bad) jrcxz rex.WX adc cltd pushfq jne mov rex.XB mov sbb jle mov rex.R rex.RXB rol (bad) push or repz rclb movsl mov mov xor enterq xchg mov (bad) hlt add adc retq cmpsl rcrb sub sbb xchg adcb imul rex mov (bad) jl sub xchg loop imulb xchg ror or (bad) (bad) or xchg movhps mov push loop (bad) ds (bad) lret sar jo push (bad) (bad) je addr32 ror push (bad) lods movabs lods push push xor jae out lods divb (bad) xor in cwtl imulb push out shrb or xor lret enterq shr rex.XB fs (bad) (bad) mov rex.WRB (bad) pushfq mov jrcxz lret fs in jne cwtl es or pop push stc mov iret rex.RX in cli xchg xor lock rex.X cli cs movsb (bad) clc rex.WXB rex.WRX jno mov cwtl gs sbb adc jrcxz (bad) jae xchg imul xchg (bad) ss (bad) nop retq int fs rolb cld xchg je rclb pop cmp cmc pop jp icebp adc jno jle mov and (bad) retq rex.R mov mov cmp or mov cmp lock pop mov rex.W add shlb rex.WXB mov cwtl rolb rorl add out nop in and in callq jne and lret push xor mov cmpsl int3 cs (bad) xor leaveq loopne and or out cmpsl ss mov add add hlt sbb faddp rcl jg (bad) push mov rcrl fnstcw xchg mov jno or in sbb pop repnz adc rcrb lods jno xor cmp jne out mov add mov rol add iret fmul sbb or mov mov and out and pop mov rex.WRX mov in rex.WRXB (bad) push imul fs imul fstpt push mov sbbb sbb std cmp (bad) out jmp cld pushq out xor mov xor rex.WR insl lods fsub std retq rclb mov xlat mov fdiv loopne ds (bad) cs loop fisubrl jg fcomps (bad) jne idivl fldt fdivrs add rex.X (bad) or in scas add mov loopne cmp (bad) xor in add and fcomps mov jl mov (bad) jp mov scas fwait cmc mov pop popfq pop add (bad) cwtl clc (bad) fistpl shlb mov outsb std cltd jrcxz rex.WRX xchg mov (bad) jrcxz (bad) xor xor loopne (bad) cld push imul and cmc xchg cmp and (bad) push callq mov (bad) mov mov rex.WB rex.R enterq xor xlat pop repnz (bad) xor rex.RXB js pop cmp sbb (bad) and test xlat xchg cltd cli (bad) cmp nop stos xor fstps (bad) (bad) (bad) lea xchg out xor mov loopne rolb ja mov jrcxz mov sbb mov adc push sbb clc in push xor in sbb cmc cmp adc xor xor (bad) data16 in movabs callq pushfq (bad) rol sbb adc loope xchg mov (bad) mov (bad) xor xor fs and rorb xchg fwait (bad) hlt out fdivl rex.XB pushq shlb out sbb xchg movsb (bad) imulb (bad) jl adc psubd jnp push movabs xchg cmp fwait or (bad) (bad) (bad) or rex.RB pop sar push outsb cmp in mov addr32 (bad) ja xlat (bad) or callq adc repnz push cli ja and nop adc mov rcr sub or fwait rex.WB add adc mov mov (bad) xlat nop jne xor loop,pt sbb add repnz (bad) hlt xor (bad) (bad) lahf rex.WR sti mov or sbb mov cltd outsb mov xlat jg retq add jge and and scas (bad) addb retq (bad) or push test orl rex.XB cmp pushq jrcxz sub ja sbb push fdivrs mov cld lret cmovo rex.WX xchg rex.WRXB (bad) movsl (bad) sti (bad) mov rex.X rex.XB mov rex.B or (bad) (bad) out rex.RXB (bad) (bad) jl adc jo sbb (bad) lret add rex.WRX or insb movabs enterq xchg and data16 (bad) loopne add fucomi lods (bad) (bad) callq movsl js retq out (bad) rolb js movabs pop movsl jne out rex.XB sbb or xchg push imul out js jl xchg (bad) (bad) pop movabs lods rex.WX rclb pop xlat push scas fisttpl int3 cmpsb fwait pop movabs imul cmc and (bad) adc repz adc mov cltd cltd hlt sti sub negb mov or and rex.RXB pop (bad) iret out test insl rex.B int3 retq mov repnz cmp mov (bad) (bad) sub (bad) and rcr lock out loop rcll jle adc adc shll add (bad) (bad) adc movabs test jno int3 je ja (bad) push fcoms add sbb fstl (bad) sbb xchg in ja fs jmpq insl rex.WRB jmp es push cli movabs cmc (bad) jnp (bad) mov cld (bad) xor (bad) (bad) xor callq lock gs std (bad) in mov stc and out xor iret (bad) xchg jl mov repz rex.RXB int3 rorl push lea ja fnstcw rex.WR add rex.WX push outsb sbb icebp xor loop sbb or sub push (bad) sbb (bad) (bad) (bad) adc jne stos sub xchg jl (bad) mov (bad) mov jnp hlt sbb rex.XB rex.WRB add stos jno (bad) xchg adc in hlt mov rex.RX pop xchg testb jmp xor pop outsl add test and xchg enterq jo sub (bad) jrcxz lods mov loopne test jmpq js callq callq (bad) jl icebp movabs bnd (bad) push rolb outsb mov leaveq (bad) mov rex.WXB (bad) mov notb sub sub (bad) sbb cld sti sbb rex.WRX lret or jne cmp sub or add or add cmp xor mov callq (bad) test fs jg (bad) cld and xor rcll fcomps (bad) sub icebp jp (bad) out (bad) or adc std or cs insb (bad) mov (bad) ror repnz iret outsb (bad) imul xchg (bad) rex.X rex.RXB jmp clc xchg gs or repz sub adc (bad) (bad) mov fadds (bad) lahf adc rex out fldl insb adc push nop (bad) sub lods lea insl rex.RB add int3 (bad) mov mov lods es test int3 mov xchg add stos in xor or rex.R out test out rex.RB rex.WRB cmp mov lods and idivb (bad) mov jg (bad) (bad) rex.WRB mov (bad) hlt xchg out jrcxz jno jmpq repnz pop in stc shrb rex.XB rex.WR test roll out mov pop cld ds add xchg mov pushq rex.W rex.WR adc sbb stos div xchg jne adc or (bad) fbstp mov mov imulb cs iret cmp mov cwtl insb adc xchg xor pop incl sub cmp (bad) cmp (bad) jmp rex.WX rex.B rcrb (bad) xchg loopne mov rex.RB add adc or rex.RB gs rex.XB rex.RXB movsb mov jae add jb or and imul mov xchg sub rex.RB cmc sti adc cmp adc pop pop xchg lock retq mov (bad) movabs pop movabs (bad) adc lods add jne int sbb mov fistpl jne int3 or mov nop (bad) mov mov rex.RXB xchg (bad) cmp or rex.WRX add or in jne out sub pop test nop (bad) lock fdivrp or callq rex.RX in insb rex.RXB int3 mov or int scas (bad) callq je cltd xor xchg out and out rclb xchg sar jg out jg nop mov or in lahf add rex.WB imul cltd xchg fsub sub test rex.WRX callq jns lock js lret jl lock xlat add rex.B add imul (bad) rex.WR test jo incl flds xchg (bad) and fpatan stos je (bad) out (bad) pop adc callq (bad) (bad) sahf sbb or (bad) rex.WXB xchg in jnp stos fstpt adc loope xchg shrb cmp xchg ja (bad) or sti lods std xchg jne cli clc rorb in adc add fnstcw adc jbe fcomp mov (bad) xchg mov (bad) mov rex.R movabs xorl sub outsl pop (bad) fild rcl push (bad) cld add mov and rex.WB insl add rex.WRX mov xor (bad) loopne (bad) (bad) jae hlt rex.RX int3 sbb (bad) cld out jo lock (bad) rex.R sub rcrl mov rorb (bad) xchg mov in jge lock int3 mov (bad) jno mov mov rex.XB lock jne rex.RB stos mov fstps movsb or sub sbb xor jl sub gs xchg movabs lock js jg in cmp sbb stc sub xchg push mov or mul stc lret jbe fwait jns (bad) xor xor loopne mov push popfq rorl mov add add mulb mov jnp jae or (bad) xchg rex.XB add jle rex.WR jne fnstenv jmpq mov sbb pop scas cltd imul mov or sahf sub mov hlt setb rex.WR lock movslq (bad) hlt add rex.WRX (bad) push mov retq rex.WX jb (bad) jne (bad) lods iret (bad) fs out (bad) add imul push xchg push rex.WR cmp cld andl (bad) movabs gs stc cmp movabs cltd mov idivb xor std mov (bad) mov xchg popfq nop leaveq cmc xchg idivl cltd hlt jmpq test callq (bad) stc pop int out ror (bad) out popfq mov xchg ss movabs sbb push (bad) scas test je mov (bad) fst test (bad) imul add (bad) xor (bad) movsb rex.RXB xchg jo mov faddl jns xchg pop jne in je roll (bad) movsl jns scas jb hlt mov jne mov (bad) and stos pop pop in sub fsubr in stos (bad) mov xor mulb loopne jrcxz cmp addr32 iret xchg mov repnz nop adcl xchg mov rclb or jmpq adc cwtl jrcxz cmp rex sbb push mov (bad) jne (bad) iret (bad) rex.RXB (bad) loope cli repnz rex.XB mov lods mov fnop xchg (bad) (bad) sbb jbe (bad) push leaveq sbb es mov sbb xor (bad) rex.X cld icebp rex.RB mov lret out lock (bad) or (bad) (bad) mov or mov xor je pop clc or mov (bad) xor rcl movabs rcrb jg rex.WR sti adc add rex rex.WRX adc test loope mov lods mov xor lea test or add loopne lock scas pand loop enterq mov (bad) cmc movabs lods add outsl cmpsl hlt imul mov sbb mov add lock (bad) xchg cmove outsw (bad) jl mov or (bad) enterq xchg imul and insl rex.W insw gs cmp sub mov (bad) div rex.RXB mov negb (bad) xor add in (bad) movabs and sbb in (bad) push (bad) std sbb popfq loopne out fisttp (bad) jmpq jp fwait out mov or sbb imul jne mull repnz push cmpsb xchg xor movabs mov jne mov add jne popfq jo sbb and jae or xor scas enterq lock iret jne (bad) clc (bad) (bad) jbe iret or lret (bad) jae jbe jbe xlat mov rex.XB stos xor (bad) mov movb mov (bad) retq pop scas or (bad) pop mov lret rex.RXB fdivrs in jle test out icebp (bad) (bad) divb rorb cmp stos retq mov divb add push xchg lock jne test pushfq (bad) push repnz mov (bad) nop scas jo xchg rex.W sub (bad) adc xor (bad) mov (bad) stos fwait mov (bad) jbe sbb (bad) mov je push mov sub mov rex.WX rex.WX enterq mov mov scas out lahf sub mov es (bad) (bad) pop nop movslq mov mov in fs lea movb popfq movsb adc out repz pop sub (bad) hlt rex.WB or jle (bad) mul jmpq shrb and jno rcrl jge (bad) scas and xlat add mov and and pop adc (bad) jle fimull rex.WRXB and repnz adc cli out leaveq (bad) (bad) movabs mov pop (bad) add pushq adc imul and mov movsb xlat xchg movabs mov rex.R xor mov ror je cmc (bad) scas mov iret cwtl cwtl jae mov rex.RX or (bad) mov add xor (bad) (bad) mov int3 (bad) (bad) sub sub sbb lahf jae (bad) cmc push callq xor or enterq (bad) hlt and repz and test jno add sub (bad) cltd adcl callq in jmp (bad) add mov sub (bad) jmp jb xor imul pop mov imulb (bad) ror sbb sbb (bad) xor xchg xor xor mov (bad) adc (bad) xchg jmp sub xchg cmc fs sarb (bad) push stos adc (bad) jne scas sub xchg movsb nop (bad) adc (bad) mov ficompl and push mov lock (bad) callq cmp addr32 and xchg add es (bad) subl xor and lahf cmovae lods test (bad) or or mov mov std sub and rex.RXB mov or (bad) mov xchg add (bad) (bad) adc or fs stos mov in rex.RXB adc mov (bad) push jp rex.RXB iret jmp jmp jmpq pushq cmc jge mov imul movabs cs or outsb movabs sahf (bad) adc jno out (bad) (bad) lret rex.W rex.RXB fisubr callq jge add adc mov loopne sti fs (bad) and retq sbb rex.WX adc sub add fadd adc fwait cwtl xchg mov fcoml pop adc (bad) cwtl jne sub or in adc add retq callq retq pop adc or or rex.R rex.RXB mov movabs rex.WR rex.WXB rex.WRB insl test lods imul clc xchg (bad) subb sbb test notb enterq cs repnz cs stc cltd orl xlat jne and sub cmp (bad) push xchg sti (bad) (bad) push pop add adc sub xchg repz jl (bad) out sbb add sub mov add rex.RB and jne or sub xor sub cmpsb (bad) rex.XB callq movslq int3 pop data16 adc jl out icebp movabs adc mov (bad) or (bad) out adc xorl rex.WRB lret jne out mul fidivrl pop andl rcll int3 xor lock pop movabs mov hlt jne (bad) stos xchg lods repnz (bad) int3 sub cmp (bad) lea mov sti and adc cmpsl (bad) (bad) in (bad) cmpsb xchg rex.XB gs imul fist (bad) jbe jno (bad) jge mov iret loopne in test fsub xchg jrcxz mov imul out rex.WXB rex.W rex.WXB pop (bad) pop pop out adc pop pop sbb or xor or mov sbb cmpl (bad) (bad) icebp add sub jbe (bad) enterq stos jmpq xor mov jrcxz (bad) and test (bad) (bad) iret jne sarb xor je loop fiaddl hlt int3 pop add rex.RXB push insb vpunpcklqdq (bad) icebp (bad) fldl push sbb mov sbb cmp jae (bad) (bad) cltd rex.WB add sarb rorb or es xor stos int3 or adc cmp loope cltd out mov in pushfq (bad) cmp retq ss retq hlt adc jbe xchg mov in mov stos int sub out cwtl mov sub xchg rclb loope in or (bad) xchg hlt mov (bad) fs lea out push xor imul (bad) imul (bad) mov lods push lret xchg test cltd mov add adc mov fdivl push in cmp faddl pop add roll (bad) add adc rclb retq andl add sti sarb xchg idivl divq adc add cmp in jae andb push xor int3 jne (bad) fsubr std sub fdivrs adc js out scas mov out cltd jg scas retq jrcxz fsubr movsl mov js mov test std in mul hlt je mov mov pushq or fadds cmc mov fstpt insl rex.WR add jl hlt rolb adc hlt xchg nop mov rclb insb (bad) push fsubrp iret out pushq movabs movabs leaveq dec retq adc cmp mov loop jmp jne xor out ds popfq je hlt out push (bad) and mov pop rex.RB (bad) mov cmp mov js jae jne subl (bad) mov push mov stos mov mov sbb or je or loope je xor push cs xor lock or enterq push lret callq imul test (bad) sub (bad) mov scas icebp insb pop sti js (bad) movabs fldcw insl (bad) cmc retq or rolb pushq hlt jg out add and iret sbbb or (bad) scas int sub (bad) mov pop or out in jg test retq stc ror sbb add (bad) sbbl in hlt jne data16 (bad) hlt mov push xchg adcl or fsubrl cltd (bad) stos out sub pmullw loop movabs loopne (bad) cwtl mov (bad) mov loope jrcxz lods (bad) xor and nop (bad) (bad) stos xchg vandps stos lret sbb xchg jno test js xchg mov or in cmpsl out (bad) fadds push mov mov sub shrb int scas fwait rex.WRXB xchg fs cmp xchg jnp jp stc jmpq js pushq rex.XB insl out push (bad) adc adc cmc (bad) adc jno add loope mov mov ss (bad) rex.X cltd lret lock mov fild pop repnz (bad) xchg adcl loop hlt rex.RX mov (bad) repz iretw add cmp fwait and shll (bad) push cmpsl rex.WXB mov not out rex.WRB in and fmull rex.WRX cmp rex ja xlat or movabs push xor cmpb rex.WX fcomp lock and adc out xor lret out sbb mov (bad) mov ja test jnp test lods cmp outsl (bad) sub push data16 (bad) sub lret (bad) rex.WRX sbb xlat mov sub jmpq adc mov xlat rex.RX data16 (bad) out repnz mov sub incl sbb mov lahf scas loopne fsubp or test push stos push cmp push imul xchg jno rorl sbb cmp xor in sti imul sub int add fldcw push xor xchg or cli sbb (bad) (bad) mov pushfq cmp hlt fsub or mov jrcxz jae cmc xchg or cld adc rex.WXB insl in add push divl (bad) push pop or cmc rcll and hlt rex.WX popfq (bad) sub iret repnz rex.WB rex.XB jmp insl (bad) push (bad) jbe mov cmp callq or ds cld (bad) xchg or push rex.WRXB xor rex.B or mov loop cmc cmp jg lcall sbb int cmp (bad) hlt or adc rcll (bad) jne pop pop loopne jg sbb clc rcrl xor cmc xchg mov push xchg mov adc cld bndldx imul or add xchg (bad) scas (bad) pushfq mov adc xchg or (bad) icebp jl (bad) adc fisttpl and lock (bad) cld adc or mov leaveq sbb jmpq loopne cmc mov sub icebp sub or or rex.WXB mov test imull (bad) rex.XB mov pop stos mov adc (bad) lret je ja add add and (bad) mov retq gs (bad) callq mov in and pslld mov sub loope jns rex.RXB or test in adc cmc rex.XB rex.WR decl mov (bad) (bad) repz (bad) or out and mov and in and decb adc imul movsb movslq movsl (bad) (bad) not xchg rex.WR push enterq shlb and xchg clc (bad) sti xchg xchg (bad) (bad) add insb pop mov imull jrcxz (bad) rcrb mov (bad) (bad) divl in rex.WRX rex.RX jae jno rex.R jno adc xor push (bad) (bad) (bad) push lock ss xor pushq or enterq adc add rex.WR in test push xchg or mov jbe add jnp (bad) fwait adc sbb repnz or cmp jne (bad) cli (bad) pop rex.W rex.RXB fnstenv or jne add repnz rex.WRXB ror out fwait push (bad) gs xor movabs xchg outsl xor jbe (bad) rol cmc (bad) mov in fcmovu xlat loope js (bad) (bad) xlat (bad) out lods rex.RB xchg pop retq sti push mov loop retq stos xlat xlat (bad) jne cmp es sub in xchg xor (bad) pushq lods xor adc push rex.W jmpq add push adc test int3 (bad) sub int cmc repnz imul fwait add rex.WRB cmpsl test mov adc in (bad) cs or callq (bad) jae loop in pop pop adc xchg cld sub xchg in imul or adc movabs out fs add gs and clc xchg mov (bad) pop rcr hlt fcoms rex.XB repz or (bad) fcmovnu in (bad) (bad) (bad) adc mov adc sub mov rex.WR rex.WX in (bad) int add sti (bad) xchg rex.XB fwait (bad) not fdivr (bad) (bad) popfq (bad) sub mov xchg rex.WR rex.WR in (bad) rex.WR xlat int3 xor rorb mov (bad) mov rex.XB hlt (bad) adc int3 or xchg scas or xchg jmp mov adc movabs hlt adc mov movsb or (bad) add (bad) lock lea xor cld and (bad) pushq hlt push rolb (bad) adc adc movsb xlat repnz xchg add jne int3 repnz (bad) (bad) test cld jne enterq sbb jmpq in cmp rclb test jmpq ja cld int3 stc pop rex.WX xchg in xchg add mov rex.WRB (bad) cmp pop mov test adc xor enterq scas in (bad) or mov hlt mov jne rex.RXB push outsl push add in rolb jno rex pop push jmpq lods xor in add rex.XB cmp shll adc je add out test addb sbb add js push adc (bad) rol adc ss enterq es (bad) test (bad) pushq xorb pop add mov xor je jmpq lahf outsb and insb pushq jo xchg add cmp lock (bad) xor lahf (bad) xchg mov xchg and add test push or mov xchg jbe out push push pop movsb fbstp insb adc (bad) (bad) jmp cs push stos rcll in mov int mov fdivl (bad) hlt mov test mov sub (bad) (bad) pop rorb xchg add pop test add sub or out xor xchg adcl nop jl movabs sti xor pushfq add fidivr int add pop cmp fidiv callq jle out je retq jne sub (bad) addb xor sbb jl jmp rex.WXB flds sbb sbb movsb adc add (bad) pushfq jrcxz mov mov test xchg cs pushq (bad) and xor adc (bad) cltd pushq scas jb insb fwait notl mov cmc cmp retq (bad) (bad) (bad) sub out decl mov out or adc adc repz adc in sahf cmpsl lock adc or js je rex.B fwait xchg (bad) or mov jle mov movabs or ds in in adc outsb jnp out mov loop mov pop jrcxz in xchg retq or push xchg push clc popfq jrcxz add lock (bad) (bad) (bad) xchg sub (bad) xor and (bad) test (bad) pop jno test rex.WRB rex.WR pop f2xm1 push test sub int3 pop mov loope test je (bad) retq shlb je out or test rex.B lock (bad) (bad) (bad) rorb outsb adc add (bad) (bad) int3 cmp lock rolb rex.WRB xchg xlat in or fnstsw add rex.WRB nop sub xlat (bad) xor (bad) cs sbb idiv adc xor mov int3 jno in and lea rex.WX movabs rex sub jnp (bad) or fistl sub rex.XB in cwtl sbb repnz add add rex.R rcll xchg add (bad) sbb rex.RB and mov add or cmp fwait sbb xchg mov xchg (bad) or adc xchg sti fldenv dec (bad) or (bad) fist leaveq movabs (bad) mov movabs xchg sbb ss ss push iret stc jge mov sub cmp jp je lea (bad) fs jne callq cld adc or js (bad) sbb jne push std jo xchg mov mov (bad) adc adc rex.WRXB (bad) (bad) push mov clc nop stos rex.WR jae lock rex.WR addl imul mov jo pop (bad) (bad) jo out (bad) rex.R push int test adc rex.WB sti stos imul xchg jno cmpl (bad) push insl jne xor scas jno leaveq push pop jno sbb (bad) sub pop rex.R (bad) cwtl (bad) ja enterq pop in (bad) xor fwait xchg jle push lods pushq lahf or (bad) enterq (bad) xorl xlat sarb test mov cmpsl in sbb int or test add pushfq adc or (bad) lods push leaveq loope fidivl sbbl adc xchg pop enterq mov push cmp (bad) push cmpsb adc sub addb clc ficomp retq test fsubr mov mov fist (bad) add (bad) (bad) or lock rex.XB sbb jrcxz addl int3 mov xlat mov rex.XB mov out testl sub adc notl pop cmc (bad) mov or movabs insl roll icebp sbb jno iret movl adc (bad) push in ja jo (bad) mov rex.R rex.W add sahf repz pop push xor movabs shrb push xor out pop fwait sub (bad) (bad) (bad) (bad) jge mov push jne ja insl mov sub jmpq add xchg (bad) cmp xchg lods cmc pushq sbb lea and (bad) jno test orb lret mov nop sub in sub (bad) notb sbb (bad) mov rex.XB push test sti imul xor test xchg jb mov insb adc (bad) enterq jo mov movsb hlt fdivl fcomps lret fdivl data16 or rex.RXB lock sbb adcl test or int mov mov cmp xor lods leaveq adc rex.RXB add movabs add cmc out stc jg out mov mov (bad) outsl mulb test adc jae xchg jmp mov je (bad) mov out xchg adc push sub jo jg fistp rex.W xchg rex.B js adc outsb xchg push cmp push rex.XB (bad) xor cli scas loopne lahf pop fwait or adc jns cmc rex.XB xchg push mov or (bad) mov xor add sbb push js in rex.XB rex.XB and pop rex.RB mov pop mov or add (bad) stos xor (bad) (bad) (bad) fcomps (bad) mulb xor ja in push xlat (bad) (bad) sub rex.WRX ss ss scas jb test fbstp mov jne or and frstpm(287 out or ja jmp je movabs jge add (bad) mov cld scas sbb fs in cmp cmp sub (bad) test stos xor (bad) (bad) lods lret je add (bad) sub or sbb sub out push add out in jmp callq movsb or (bad) mov mov enterq or imul in callq adc mov sbb gs test insb adc loop cld rex.X rex.RXB (bad) mov inc add mov fdivs cmp (bad) xor es and xor loopne (bad) std xchg mov stos lea xor rex.WXB xor (bad) retq (bad) xchg (bad) frstor jns (bad) lea int sub push xchg popfq ucomiss mov rex.W xlat or retq rex.WRX (bad) (bad) (bad) imul (bad) repz retq jge out add (bad) push (bad) pushq mov test test test addr32 lods cmp in sub psrlw mov jp (bad) xor jno (bad) (bad) sbb xor xchg rorb cmpsl pop add cld repnz hlt sbb mov cmp stos test and jne lahf push loopne stc fmul sbb (bad) (bad) mov lret and xor xor rex.WXB fdivr xchg hlt psubsb mov jne and add mov (bad) sub cli (bad) mov rex.RX int3 jrcxz fwait rex.X mov xlat test pop sbb repnz fistl jp cmp in and fdivl je js js and (bad) rex.RX imul xchg rex.RX xchg sub (bad) sub lock xor (bad) std lods imul pop sub rcrb pop out rorl cmp (bad) rex.WX cmp push push stos sub rex add (bad) mov pop xchg cld sbb fmuls mov ds push in repz push jp (bad) fsub jmp in incb sub mov (bad) cwtl or sbb or stc (bad) pushq (bad) ss adc rex.WX mov cmp in xor sub lret rex.WR out xorb stc es enterq mov stos xor (bad) out callq (bad) mov mov out repnz cld fbstp (bad) mov int3 (bad) js (bad) int fiaddl rex.B addb and stc fcmovbe xlat jp retq rex.WR adc iret or orl push (bad) loopne (bad) enterq or stc loop shll mov pop add push retq je mov jne xor jl and lahf lock (bad) xchg sbb je in jmpq sub data16 ds sbbl push mov rex.WB cs hlt jne rex.WRX pushfq (bad) cmpsb callq xor pop lahf test mov movsl sti jl pop rex.WRB rex.B jne scas lock rex.WX or jnp mov iret shrl xchg add rex.WB (bad) or scas lock fimull imul gs movabs rex.W mov xor sbb mov data16 outsb (bad) in rex.RX adc xchg pop (bad) mov shrl cmpsb add cltd cmp fsubrs nop xchg stos sbb sub xor sub out cli retq xchg pop sub in in xchg mov cmpsl add ffree rex.WXB vunpcklps jle jg int3 cld rex.WXB cmp or adcb or fnstenv in xchg and shrl (bad) hlt lret (bad) orps loop ja and sbb or push sub add add adc repnz test pop mov mov (bad) sbb pop sub and sbbb (bad) fcmovnb ja xlat add cwtl (bad) xor sarl xchg (bad) jle and pushq xor cmpsb mov (bad) lahf and pop jle in xchg mov callq mov xor cld pushq xchg mov vcvtss2si mov add jo add cmpl jle fcmove jne roll jge jns push xchg (bad) loopne sbb (bad) xchg test movabs xchg jg or adc movabs mov mov adc xlat lret mov pushq cmp push mov rex.B (bad) cld add sbb (bad) (bad) mov (bad) (bad) outsb out (bad) sbb push bnd xor lods mov or (bad) push hlt rex.RB fwait add pop repz sti add adc or rex.W (bad) popfq out f2xm1 sub lahf (bad) push (bad) or rex.WR push sbb movsb push cs or or mov sub lret (bad) cmp jae sbb pop cmp icebp rex.WR cs out xor cmp (bad) pop (bad) loope rol pushq mov adc push stc rclb mov shlb testb push adc xor rex.R pushq pushq repnz jns (bad) (bad) fnstsw cmpsb mov jge xor (bad) out push sbb mov ud2 and mov rex.XB xor xchg imul callq add addr32 dec shll mov (bad) (bad) mov (bad) (bad) movabs (bad) mov repz jmpq insl rex.WRX cmp fcoms mulb rex.WX rex.WB popfq adc sbb (bad) adc loop sbb ss (bad) test outsl rex.WX rex.WRXB (bad) sub or (bad) pop lods jmp rex.WRXB pop ja xchg (bad) scas (bad) (bad) cmc sub (bad) stos je test (bad) js sub xchg shrb stos (bad) out retq push pop xchg fsubl nop movabs (bad) lods adc adc std fsubr repnz gs adc sub sbb icebp xchg mov rclb movsl add mov jae cmpsl rex.WX outsb imul mov add mov lea shrb (bad) adc add movabs push (bad) rex.RX fiaddl data16 (bad) rex.W repz cld xor sbb cmp cmpsb or mov (bad) adc rex.XB vpinsrw out add movabs nop hlt rex.XB sub xor in movb mov out sub (bad) imul shll insl or out add imul cmp test in jo or adc sbb jno (bad) adc rex.XB notl (bad) retq mov (bad) adc xchg jle jmp rex.WRB mov (bad) or cmp rex.WB lods (bad) xchg or loope repz rex.RB rex xchg jmp xlat repnz test sbb push adc (bad) jmp jle out adc adc or or and int3 (bad) gs gs jrcxz adc out xor (bad) or mov and js sbb rex.WX nop clc imul mov jb subl add fcomps add cwtl cmpsb std nop cwtl sbb fwait mov scas rex.WRB push stc adc (bad) rex.WRXB jnp insb push and outsl adc callq jae lea sbb cmp hlt fsts xlat jmpq mov rex.R mov (bad) cld xlat adc stc test (bad) (bad) mov stc xchg xchg (bad) retq movabs sbbb jnp test mov xchg add pop imul mov (bad) mov cli (bad) inc mov push (bad) es adc jg pushq sbb (bad) idivb xchg (bad) mov rex.RX xor adc xchg xor push fwait (bad) (bad) adc (bad) cmpsb jne scas push jle (bad) xor rex.WXB xor add popfq pop mov movsl jp or jae push lret movabs pop cmpsb sti (bad) lock or sti nop push cwtl scas add pushq rex.W or in sub lahf jl cwtl sub int mov push pop adc rex.RXB or adc jp insb jno adcb frstor pushq sub lea and pushq mov or test (bad) or pushq pop adc rex.WR lods cwtl sbb (bad) adc mov outsb (bad) push jno xchg nop (bad) add jbe lods mov jg adc test adc or (bad) xchg js jp pop push mov scas rex.WX movabs stos and xor adc (bad) (bad) scas or adc cmp (bad) or cmp test (bad) (bad) pop or mov (bad) and jmpq jl jnp mov or vunpcklps jne mov lret movsl adc pop out test push mov rcl or xor cmpsl mov adc (bad) mov retq pop xchg push jo sub jo (bad) retq cmc pop (bad) pop pop fstp insb rex.RXB retq adc ficompl retq fnsave test loop and (bad) jmp jae mov in cmp pushq jg jge mov (bad) xor (bad) jrcxz add lock mov mov fidiv add jl adc in sbb cmp fldcw cmpsb jns pop adc mov sub rex.WXB ror (bad) mov repnz retq cltd xlat cmp sub add pop and out mov mov mov mov cmp enterq mov mov imul adc pop add (bad) (bad) add or add rex.RXB add jno movsl push fmul jrcxz cmpsb insl movsb test and scas xor mov lea leaveq (bad) sti push hlt (bad) push jbe push jbe jb push sub xor fistp loop insb adc xor sub sub mov repz sbb jno scas rex.RX xchg add cmp scas (bad) (bad) outsb movabs push or out clc callq sub imulb cmpsl sbb (bad) movabs loop xchg iret mov mov pushq (bad) stos adc repz rorl xor fadd mov sbb out pop outsl sub pop callq stc sub repnz mov subl cmpsl cmp (bad) rex.RX jp jo movabs cs sub fs (bad) rex.XB rex.WR (bad) pushw in add (bad) jne pop mov and insb mov rex.XB (bad) repnz (bad) xchg xchg push insb pushq mov xchg (bad) (bad) repnz jne mov or add add cltd nop movsl stos pushq rex.WB rex.WR lret mov jge test (bad) jns mov rorb or or (bad) jae movsb cltd (bad) addl (bad) icebp lods sbb rex.XB (bad) loopne out adc (bad) (bad) rclb mov rex.RXB xchg callq (bad) hlt sbb or stos (bad) xchg cmpsl insl mov out insl in fwait stos jbe jg (bad) sub xor push int3 xchg retq loope (bad) movsl test cmpsl stc jno in cld push sub mov xor (bad) pushq rex.WR and (bad) movabs rex.R imul lock (bad) jne add (bad) (bad) mov push and jb or xchg mov jmpq incl (bad) push push imul (bad) notb ds jae (bad) xor jns xchg loopne lret jg rex.R rex.R or lret cs (bad) addr32 adc ds mov lods xchg out fwait pushfq xchg adc fnop hlt mov lret rex.RB or (bad) out jne cmp (bad) jmp (bad) je and mov mov (bad) in mov mov int3 pushfq adc mov jp sub rex.WRX pushfq and int3 fldl add sub jb xor loope (bad) ss scas xor jne mov rex.RX fstl (bad) jge je adc adc mov sub cmpb cmpsl es out (bad) cmp movabs nop hlt cwtl rex.WR (bad) fisubrl xchg sti test fdivp rex.RXB xor (bad) fisttpl add adc jne gs fwait xor cltd out cli jle enterq js sub pushq sub mov (bad) mov ss xchg sbb insl lea rex.WR idiv (bad) je sub (bad) push callq stc mov rex.RXB repnz jo add rex.RX repnz int3 (bad) test mov (bad) pushq movabs xchg adc sbb cmp imull push and mov rolb cmp pop rex.XB fcompl rex.WR pop andl fwait mov test jmp add (bad) mov stc or mov push sub repnz (bad) jns rex.X jmp sub rcrb and out retq xchg loop (bad) sub cld push fsts (bad) repz xchg push adc or push out (bad) (bad) mov (bad) fdivr fwait stc add (bad) pop pop data16 shrb out and or jl adc rclb movabs jle jmp (bad) (bad) rex.WR rex.XB cld movabs add and sub (bad) mov add out cmp cltd callq add in sbb fucomip jne xchg movsb repnz ds mov xchg xor lods rex.WRX rex.WR test rex.WR rex.WR mov and rcl movsb ja and loop clc jne in mov shl push jns imul sti jae push cmc (bad) mov pushfq (bad) out ds repnz lods mov (bad) lock insl xchg mov movsl frstpm(287 pop (bad) xchg int3 xchg or insl lea mov loop addr32 push enterq test or stc out (bad) retq (bad) (bad) (bad) jne out (bad) (bad) test (bad) gs xor out xor rex.WB movsb clc (bad) mov mov sub imul in adc out imul je out insl and xlat pushq adc icebp std imul or and movsb or std add fiadd test (bad) pushfq retq mov fld mov xor fcompl in jmpq jl (bad) rex.XB shr in clc popfq xlat (bad) (bad) roll lock cmp xor loopnel (bad) sbb test add clc adc add mov xchg lahf retq iret scas fwait pop sbb out add lea xchg xor xor cmpl loopne sbb pop out loop jg add add (bad) mov jl mov lret push (bad) fstl sbb test push sub (bad) (bad) mov out leaveq sub mov push or pushq movabs adc sbb (bad) psubusw sbb ja add and xor (bad) (bad) sbb mov ror test rex.W stc test push jmp add xchg cld cmc (bad) jne (bad) cli jae jo and je mov sti insb xlat (bad) addr32 (bad) es (bad) (bad) sbb sub lret sti lea fistl iret add lret or xchg (bad) xchg add (bad) mov jb mov fdivl jge lock cli hlt pop repnz mov fwait data16 or cmpb fidivl jne (bad) (bad) jp movslq hlt (bad) mov mov pop mov insl stc cmp (bad) pop pop (bad) adc lea jmp (bad) (bad) fs xchg cmp and sbb iret callq or scas std data16 adc pop push (bad) jrcxz adc xchg movabs cmp xor movabs fwait retq or xchg add mov movslq or rex.XB test rex.RXB (bad) mov adc adc icebp callq nop add push repz jrcxz jl (bad) xchg (bad) (bad) fwait rex.XB fs out mov clc push adc (bad) sar fwait mov xchg lret (bad) stos cld xchg (bad) (bad) mov xor sbb out or xlat divb xchg sub rolb cmp push lods or mov sti cmp xor (bad) jp adc hlt incl int (bad) test imul pop pop lret test (bad) sarl mov fimull jmp test push (bad) rcr addr32 callq mov rex.WRXB callq rex.WRXB sahf mov test sti scas popfq adc sti addr32 (bad) (bad) rex.WRXB (bad) push add pop cmp xor je (bad) sub out movabs shlb ss xchg movsb jne sahf xor movabs xchg mov jnp (bad) jge jbe callq enterq add and and mov pop pop movabs shll je pop sbb lods movabs adc rex.WB xchg lret rex.R rex.WRXB cmp rex.X sbb (bad) test stc rex.WR xchg adc jmpq imul data16 xor (bad) retq icebp jrcxz stc mov or (bad) (bad) jno cmpsl std pop mov xchg mov jo (bad) js fs jne jrcxz ror lret or (bad) (bad) rex.WRXB cmpsl cmp adc pushfq ss in ja (bad) (bad) sbb movabs rex.WR jle scas jne movabs adc imul loope (bad) imul lods xlat (bad) adc fsub adc (bad) mov adc retq sbb retq add adc mov mov rex.WR xchg roll mov (bad) lods xchg jrcxz push (bad) retq jnp retq jp rex push xchg xlat iret movabs test (bad) hlt and rex.WB out pushq add mov movabs (bad) hlt jno nop (bad) (bad) mov (bad) mov lods movsb (bad) (bad) out jne (bad) (bad) rex.RB nop rex.RX (bad) (bad) pushfq add loopne adc mov rex.WR pushq (bad) mov xchg sub jnp jne or cwtl jmpq sub push in loopne repnz movabs out and fs ss mov rex.WR jne xor and movabs add pop test push int3 adc movl rex.WRX (bad) iret movabs cmpsb orb mov jno repz xchg (bad) sbb (bad) cmpsb add hlt (bad) out lock (bad) movslq push mov sbb (bad) fxtract mov out mov leaveq xor mov xchg fidivrl add mov rex.WB iret xor sub (bad) scas (bad) mov test xchg push mov fs loope or movslq fdivrl mov loopne (bad) cmp xchg jno cwtl and jrcxz (bad) add xor jmpq or pushq lahf cwtl in (bad) callq (bad) mov jne rex.RXB in sub ja mov mov retq jp jrcxz mov test pop (bad) adc (bad) xor add jne xor adc xor (bad) retq out enterq jp mov sbb sub addr32 roll cmp retq std mov addb sbb mov (bad) jle mov imul cmpsb or and pop rex.RB sbb or cmc add enterq lock in lock mov es jne in in lea outsl or xor orb jne (bad) imul (bad) hlt out (bad) mov (bad) mov xor rex.WR cmp adc xlat mov rex.WXB adc or insb insb push cltd lods shlb mov fs xchg (bad) repnz cli loope add xor sub movslq stos jb jo in int3 sbb int3 or mov sbb insl xor hlt or shrl mov fldenv je sub (bad) cli pop sub enterq push jp loopne and (bad) stos mov popfq cld movabs shlb add rex.RX sub movsb int3 repnz rex.RXB jnp (bad) fnstcw mov movntps test xorb int3 fsubrl retq stc stos fmul repnz pop fucom out pop sub (bad) pop mov adc xchg jp add lods sti (bad) xchg add add in (bad) jmp (bad) push (bad) sarb add xlat pop hlt xchg (bad) rex.XB add push mov jb imul mov xchg xor jp xor je fcmovnbe cs adc in shll idiv in fadds xchg and push push shrb (bad) sbb jl add cltd xorb add rex.X rex.RXB pop sbbl sub add xchg adc and xor rex.W rex.XB add pushq add clc cmp mov hlt add sub and (bad) icebp (bad) or xchg je adc shll or hlt rorl (bad) jbe pushq movsl stc (bad) js sahf iret icebp or (bad) sub mov rex.RXB xchg lock push lahf callq xchg (bad) xchg mov (bad) or jrcxz,pt pop mov pushq mov out (bad) pop xor test jo (bad) xor callq add outsl nop mov (bad) rex.WX mov je cmp adc (bad) sbb rex.RXB or mov rex.WR mov gs mov mov (bad) lods lea incb lcall xchg mov add (bad) stos or (bad) sbb outsb and (bad) (bad) rex.WB (bad) sti add mov fs fnsave rclb addr32 test out sub rcll rex.XB mov repz mov fmuls or or (bad) xor sbb pushfq testb imul idivb mull insb (bad) fiaddl jp test mul loopne rex.R mov movabs je sub repz test (bad) iret jne mov lret mov or mov xchg add loope adc loopne (bad) pushq insb push (bad) push or xlat xchg or xor es repz rex.WB (bad) (bad) jge sbb rclb shlb lahf sub fs int xorl or (bad) xor (bad) xlat sbbl mov xchg fmul cmp testl cmc mov fwait insl push (bad) negl rex.RXB xor rex.XB loopne out (bad) xchg (bad) mov (bad) je (bad) cmp sub pop xchg jns cltd test xlat in and movabs pop and mov sub int3 cmc idiv add lock je cmp pushq mov seto mov retq pop mov xor icebp out adc or movabs fldenv (bad) mov (bad) mov sub js cld cmp ds enterq lods in xchg and js xchg jne (bad) rolb fbld lea sti popfq jno xor (bad) mov add shrb (bad) push rex rex.WRX pushq (bad) jb push xor scas xchg imul adc retq xlat (bad) mov jrcxz rcrb test jl and in push xchg jne movsl (bad) lods stos and xlat (bad) (bad) mov sysret and adc mov sbb mov leaveq (bad) or add fnstenv scas xchg cwtl movabs js adc or pop xor rcpps test popfq or mov rex.RXB es (bad) out xchg std (bad) jg add (bad) adc cmp mov retq push ja xlat (bad) fcmovnu adc fistp (bad) lods lret callq push pushfq mov in loop push mov sbb pop cmpl test je mov mov andl xlat mov movabs cmp (bad) imul pop fcomps xlat mov clc sbb mov out out in adc jp nop lret (bad) adc rex.WR cmpsl (bad) xchg movabs jno pop mov insl repz movabs add out mov repnz test (bad) rex.B retq pop std pushq rex.XB push cld fist (bad) movsb cmc (bad) fidiv testl or mov mov hlt and or nop (bad) xchg mov cmp fildll stc movslq or loop jp cmp xchg jmp (bad) and fistp (bad) stos mov jne push stos add rex.WXB (bad) test ja,pn (bad) testb adc nop (bad) repz push lea mov ss cmp jb rolb cmc cmp cmp (bad) jp std or fdivrs xchg xchg sbb or adc sub (bad) (bad) enterq icebp and jmp pop rex loop rex.WRXB cmp pop (bad) test int3 or stc or xor or xchg repnz adc mov mov repnz cltd scas jle rex.WRXB (bad) (bad) lret loopne or jo (bad) push jrcxz pop pushq imul cs cld rex.WXB loop int3 cmp fdivrs mov xchg sbb adc jrcxz sub js rex.X push rex.WRXB rex.R and fldl movntq (bad) retq (bad) mov and nop or pop negb or js rex.RXB add int3 adc sti (bad) repnz and lret mov (bad) movabs pop (bad) cmpsl (bad) andb (bad) fcompp mov icebp jno (bad) pop out fprem mov xor jp jo (bad) fucomip int and (bad) xor add loope or sub stos leaveq add (bad) and (bad) stc rex.WRXB rol idiv add sub push stc push cmc callq sub cmp or or rex.RX jge test std lods rex.XB rex.RX nop add test iret pushq (bad) jmpq xor pushfq push lock je xchg fidiv sub push pushq rex.W pop ffree roll imul mov lret sti cmc (bad) (bad) hlt push rex.XB jmpq add mov xor cmp cltd out (bad) pop sbbb movsl (bad) rex.WR rolb push xchg cmc retq jne in jge rex.XB pop rex.X jmp outsb rex.RXB sbb sbb callq addr32 data16 (bad) pop (bad) mov lea cmp xlat pop jg rorb pushq callq mov rex.WXB rex.B cs xchg in fstpl (bad) xchg push mov lret jne (bad) fsts movsb imul cs adc retq (bad) lea xchg adc xchg xchg (bad) pop rex.RB stc (bad) lods idivl sti add sub push (bad) xlat or adc movabs (bad) in xor repz (bad) rex.XB loopne mov adc xchg pop and adc mov insl int xchg (bad) jo iret insl std in mov (bad) cmpsl shr movabs gs push rex.WRB jnp ror lea jne lret outsb xchg mov lock imul insl in insb insl (bad) pop (bad) xchg and pushq callq mov out clc std (bad) movslq cmc adc (bad) jge push enterq out mov ss (bad) jne sbb test sbb xchg rex.W xlat or rex.XB ja mov sarl jp (bad) retq out in test (bad) int3 jb in mov js rex.WXB cmpsb jl jle lods icebp (bad) (bad) mov add (bad) adc (bad) test sub cmp xchg out sub mov (bad) mov imul stos mov loopne fnop imul sbb lods adc loopne adc add callq fsubl scas rex.WRX lret (bad) mov scas push ss insl (bad) jne sub jl jmp jge je (bad) rex.RX xchg mov test repnz pushfq jmp (bad) mov data16 je add sub or jne cwtl fcmove mov (bad) or pop shrb xor rex.RB je subl scas cltd adc (bad) retq mov movb (bad) loope push (bad) cs push fmulp add (bad) clc test fimull (bad) (bad) lock repz adc xchg or movabs (bad) add shll (bad) icebp callq fcoml cmp xor sub and cli rcrb lods in cmp rex.RX jo rclb (bad) jo lods and in rex.XB ss (bad) clc adcl insl movabs jl fadd lods rex.R int adc adc icebp (bad) fldenv mov insl (bad) cmpsl mov add add loope jnp fdivl pop xor add lret (bad) pop and add js jmp fcmovnbe or sub add fbstp rex.WRXB imul lock jmp mov rex cs jne int3 (bad) mov lret push movabs mov ja stc adc and mov (bad) mull sbb iret push rorb push cmp xchg cwtl rex.WX mov xchg jne repnz addr32 cli jne sub lods nop xchg orb push sub (bad) js rex.R (bad) adc (bad) jnp loopne xchg jrcxz rex.RB cld (bad) jne repnz add add sti push pop or jp jmp or pushq retq orb (bad) pop iret (bad) (bad) add jmpq add ss insb add loop (bad) pop pop push xor (bad) mov add je loopne or push movabs adc xchg jl out stc cmpsb mov movsb cmp in and ja (bad) jo je rex.WR sbb mov ss fwait and stos movsb hlt icebp movntq xchg jmpq cmp (bad) xchg or mov xlat movsb and and mov jb (bad) xchg sub push sbb (bad) (bad) mov loopne xor pushq sub rex.RB repnz xor add cltd pop xchg mov mov xor (bad) jrcxz popfq (bad) in rex.WRX ja jrcxz push mull out lock rex.B lret (bad) in lods (bad) ss imul (bad) rcl imul sti movabs (bad) iret int3 (bad) adc add adc cmpsl fdivs jo mov fsubr (bad) pop rcr fiaddl and adc push rex cli mov mov jne rcrb cmpsb or callq (bad) xchg hlt rolb (bad) jg mov cmpsb and add sbb fwait fwait repnz (bad) iret subl callq in outsl xchg repnz and or adc hlt (bad) mulb mov cmc adc loopne (bad) cmp sahf mov or out xchg rex.RXB jmp add scas push pushq mov sbb rex.WB fnsetpm(287 xor sbb add cwtl movslq cwtl sub xchg cmp je add xlat xchg mov mov rex.RX je mov (bad) (bad) cmp mov in movsb xchg (bad) cmpsl sbb and iretq hlt test scas rex nop je addl hlt sti add or (bad) mov rex.WRX clc mov rex.RXB popfq cmp adc (bad) int3 add (bad) test (bad) jo xor in or cmpl rex.W insb pop lock adc pop xchg sub repnz adc jp fidiv (bad) clc pop stos push lret outsb adc lock outsl mov jae je stos ds pop mov insb xor push test (bad) cmp fstps fwait or (bad) hlt jne insb rex.RXB in push lret mov (bad) (bad) jle jmpq imul lea mov mov (bad) cmpsl data16 mov xlat xchg jle or cmc mov and stos rex.R pushq and sub mov cmp cmp (bad) xor cmpsb push xchg repz (bad) ror mov pushfq rex.WX lock loop sub (bad) add callq adc cld adc mov (bad) sub mov fdivrs xchg mov fs loop (bad) (bad) add lret fmuls adc rex.RXB (bad) add sub fiaddl scas imul adc add fs xchg icebp cmc (bad) xchg icebp mov xor (bad) mov ficoml sub (bad) jg mov adc lret cmp shll mov rolb mov shlb cld rclb cmp xor (bad) xchg add sub pop rex.WRXB nopl xchg out adc lods add stos rex.RB jg pushfq in std and and je cld adc mov and adc sbb (bad) jle or lock cmpsl fbstp xchg (bad) xchg int3 rcll (bad) in or or xor xor in jno pop mov retq movabs mov jl stos (bad) mov fisttpl ss xor (bad) (bad) or clc add std lea scas rex.WXB xchg add xor cmp xchg jo and and sub adc push ffree or out insl or pushq mov cld rex.XB fbstp mov adc jno sub jns cltd (bad) out xchg ficompl je (bad) (bad) rex.WX (bad) add out (bad) xchg pushfq out jne push in mov sub jl push cmp stos mov rex.R repnz xchg or fs adc (bad) jne rex.RB fwait pop jne mov movsl jne (bad) (bad) and hlt (bad) mov push lods (bad) or rex.WRXB retq lret cmp mov xor add leaveq notl pushq mov rex.RXB adc rex.WR fdivl add fwait sbb pushq sbb sbb int3 xchg mov lahf rex.RXB and mov rex.XB je adc mov pushq or js (bad) lahf (bad) xlat cli mov (bad) cmp enterq (bad) pop (bad) (bad) fsqrt rex adc callq (bad) jo pop nop test lock (bad) (bad) setp pushq (bad) xchg icebp (bad) xchg adc jg sti imul mov out adc push xchg int3 movabs out repnz imul jno adc je (bad) out outsl (bad) jnp rex.XB push xchg lock (bad) insl test movsb sti jo test xchg test nop clc int3 xor sub add flds sti xor out cld loope add (bad) hlt sahf data16 rex.R add rex.WXB rex.WRB mov retq add xchg fwait or lea (bad) (bad) cmpsb (bad) rex.WX scas sub push pop int (bad) xchg or sbb sub jo fadds add (bad) cwtl or rex.XB push (bad) xchg rex.R xor in imul scas or out adc jns (bad) (bad) lea sub rex.RXB and idiv mov (bad) add sub (bad) repz (bad) rex.R rol adc (bad) mov (bad) ficoml loop adc (bad) adc test lods (bad) or rex.W clc sub in repnz cs push xchg adc mov mov clc cmp in fistl test rorl cs adc in (bad) adc cmc cmp or xchg mov cld out cmp mov lret add imul (bad) fldcw lock mov add xchg notb insl pop or jno cli (bad) mov hlt (bad) xor retq pushfq sbb stos callq jbe (bad) out sub rex.WXB add clc fadds cwtl lret mov je push lahf jbe rex.X xlat cltd out cmc xor sbb pushq add sub (bad) and hlt rex.WRXB iret fucomp (bad) pop rex.B vmovaps sti adc mov lock mov (bad) fcomps fisubl (bad) mov (bad) mov mov mov cmc sti push je fwait nop (bad) in stos add lret and repnz (bad) jo xchg mov jmp addb (bad) push cmp cmc repz in scas out jne sub fdivrl rex.WXB pop sub xor in out add mov mov rex.W cmpsl ja jmpq add loopne rex.RXB addr32 loopne movabs ds pushq add (bad) and xchg jne lock lea retq (bad) push jmpq sub loop pop popfq clc adc (bad) or adc jmpq adc scas fdivrp jge ficompl (bad) cmp mov pop (bad) mov (bad) sbb rclb (bad) shrb or fiaddl sub rex.WXB jl loope nop out rcll (bad) rex.RX lock js in add rex.RB mov and int3 and add (bad) cld jl rex.WR mov xchg (bad) (bad) mov rex.R (bad) retq mov add out mov add rex.RXB lret mov nop (bad) (bad) test movabs push xchg rex.B rclb push xor (bad) in fdivl mov fnstenv xchg xor pushq movabs sbb sub cmp shrb sbb add and mov jmp sub insb stos xor sub shlb pop orl leaveq and mov pushq movsb std pop sbb add test (bad) (bad) sub rex.B rex.WRX rex.RXB not push push imul or mov movq (bad) mov xor (bad) rex.WRX out xor mov (bad) (bad) (bad) rclb mov jno add mov mov (bad) in rcrl xchg pop testb rex (bad) mov ss mov insb jno or ss rclb jno (bad) (bad) xor jrcxz outsb retq nop movsb ja repnz scas sub and (bad) ror ja leaveq sbb cld (bad) lret sti hlt mull movabs mov in fdivrs sbb subb addb imul lret loope pop (bad) sub rex.WRX in pop mov addb cmc add sbb lods (bad) and (bad) fiaddl popq mov (bad) mov xor (bad) xor push test add rex.WXB mov mov pop cltd jo cmp or push (bad) xor sub movslq xchg mov mov hlt mov push push cld fs xlat jne mov xlat and rex.WXB adc rcrl mov cld rex.R iret jne mov rcll (bad) fdivr (bad) movabs jo jae mov fsubp (bad) in callq and rex.WXB rex.B gs test fisttpll std icebp xchg (bad) loope jge cwtl add push mov sti rex.WRXB xchg adc divl mov je movabs setae mov rex.WX in and add sbb gs loop and xchg push fs outsb pop psllw (bad) movsb fdivl test add xor xchg cmp fmul out add jne in cmp mov hlt rex.WRB sub (bad) push retq xchg (bad) loop mov (bad) jno adc test jne pop pushq pushfq adc (bad) mull xchg int3 xlat add (bad) and add push (bad) cmp add insl sbb repnz (bad) jl lahf mov (bad) mov jg rcrb (bad) stos repz rex.XB int3 add mov cmc rex.RXB rex.WRB loope test sbb divl and pushq xor jrcxz js shrl (bad) rex.WB xlat rex.R test callq notb stos (bad) divl (bad) out add in rex.RXB lret xlat xchg push imul xchg (bad) sbb push je in hlt (bad) icebp fsubrl and sti and mov cmp stos (bad) jbe or pushq outsb cmpsb sub pop adc rex.R rex.WX jg fdivrs hlt icebp or test and push push (bad) (bad) and cmp roll add xchg sti in mov jl jae rex.WRX rex.XB gs (bad) jno jle jno pushfq cmc or popfq mov hlt std enterq repz adc fsubrl adc rorb sbb xchg rex.WRB repnz hlt or (bad) repz loopne add out (bad) and cmpsb add mov hlt jmpq mov rex.WXB fwait or (bad) xchg (bad) xor and hlt mov rex.WXB adc sub (bad) idiv rex.R stos loope hlt fwait rex.WRXB rex.WXB mov or repnz (bad) pushq movslq sub fsub retq mov or cltd outsl hlt addr32 or mov pushq or xor mov leaveq (bad) rex.WRB cmp add or xor testl fdivs push (bad) mov adc rex.WRB rex.WXB rex.WB insb rex.WRXB jle (bad) xchg gs cmp (bad) mov data16 (bad) pushfq nop orb cmpsl adc xchg icebp sbb add in bnd jp pop test int3 rex.RXB rex.WRB (bad) or lods fistpll (bad) callq (bad) fimul mov in jl rex int sbb adc addr32 mov int3 lods pushq out push nop xchg cli test movabs out add out data16 imul retq fs xchg lods (bad) or sbb push pop adc out adc out (bad) adc out cmp psrld xchg jle and scas xor jns push cs fwait adc mov (bad) (bad) mov callq xchg jbe stc (bad) hlt cmpsl retq mov sub sub or lods loopne rcl rex.R outsb jbe cmc out rex.W or mov and lods stos or iret movabs ja or (bad) (bad) in (bad) push xor mov out shrl sbb cld nop and jns adcb push test push (bad) (bad) scas fwait (bad) mov xchg mov (bad) retq shr cmc pop mov pushfq and and es adc hlt fnstcw sar (bad) pop xchg cwtl jae xlat imul jne (bad) mov cli scas jge movsb or nop outsl (bad) je and out lods insb (bad) jge xorb cmp (bad) outsl imul or fild jb or orl stc xor or (bad) mov notl jmp and mov mov out (bad) stos sub mov addr32 sbb pop mov in iret retq xor cs jbe rorb (bad) pop adc (bad) sub add jle lret shr push mov xlat stos (bad) js xor fs and jl clc jb insl or stos jmp mov pop rex.RXB (bad) insb sbb fidivl scas dec iret rex (bad) stos rclb mov cmp rcrl rex.X jmpq or add mov jl callq fs jb ds (bad) jo lock movabs cmp iret sbb xlat scas test repnz and or (bad) ja stos (bad) jne fnstenv pop sbb lret in imul mov xlat rex.RXB ss (bad) fadds jno cmp (bad) sti hlt callq fisttp js fwait je add imulb loope (bad) ss (bad) (bad) rex.WR xchg (bad) push and (bad) push adc ud1 fiadd lret lahf adc pop movslq cmp pop mov pushq retq (bad) xor retq cmp mov xlat (bad) pop rex.RXB mov hlt push mov mov sub jnp repnz xorq sbb insl jae pop lods movsl cmp (bad) jo jrcxz rex.WR sub cmp mul cltd (bad) iret (bad) insb bnd es adc movabs xchg enterq pushfq cltd jp mov jb in sbb add imul retq mov movsb mov mov je je or add rex.WRB (bad) mov push (bad) iret hlt cs adc pop jne xchg movabs pop (bad) ds retq data16 xchg rex.R ss adc icebp in xchg movsl clc jno or xchg mov (bad) rex.WB mov rex.XB adc (bad) sahf gs (bad) scas cld adc mov rex.WXB fist (bad) fnstcw stc lock add callq add xlat ror (bad) xchg rex.X gs xchg out adc or enterq in or frndint out hlt jno jb (bad) and xchg fmuls mov jno (bad) cmpsl adc or cmp fildl sub lret or bnd imul pop and cmc mov or add xchg test or retq rcl xchg lahf test or stos xchg mov adc sbb mov movsb test in fcomps adc cli mov lods insb in cmpsl (bad) roll jmp adc out xchg loope mov mov lea (bad) xor or mov sbb add and insb cmpsb jb jl (bad) idiv mov lods rex.RXB add imul rorl (bad) rex.X jne shrb (bad) (bad) sub sub push xchg test movabs loopne sbb adc test int mov xchg mov add jge or mov add scas outsb mov or retw pop (bad) add sub sub mov (bad) sub adc sti imul lods subb and jno (bad) in imul sar push sbb mov es or sub or xor imul sahf or fwait xor loope (bad) rcrb fist out xor or xor adc adc (bad) hlt insl (bad) or mov jo xchg (bad) xor sti out adcl fwait jmp sbb (bad) mov and adc sbbl pop cmp enterq movabs sub (bad) movabs mov push and rex.WRX mov cli fldenv (bad) stos ja sub (bad) rex.WXB adc or (bad) (bad) (bad) fucomp adc add add mov mov rex.XB adc loop (bad) leaveq out adc (bad) repz add cmc enterq cmp xor or (bad) loop sbb movabs sub out fldl2t (bad) fildl rex.RXB rex.RX cs stc or add mov xchg xor add push insl (bad) lret movabs mov cmp (bad) add cmpsl and andl mov test adc popfq adc (bad) insl cs jb add loopel jrcxz outsb and (bad) sub rex.RXB jns (bad) sub rex.WRX mov jns (bad) add add or cmc or out mov fisub push js pop or shlb add (bad) mov jl scas lret es mov jae (bad) lods fcmovu push adc xchg rex.XB rex.RXB mov xchg repnz hlt rex.XB pop imul mov add pushq ds lret adc shrl fs fwait xchg adc (bad) jrcxz stos xchg int3 xchg gs jb xlat pop sub std xchg mov mov loop rex.B out (bad) retq cmp adc out stos xlat mov and ds add (bad) rorb out je sti cltd loopne movslq rex.W sbb sbb push ds lods jmp (bad) rex.X rcr mov (bad) cmp out push cmp movsb pop cld cwtl jno push rcrb clc test add and rex.WXB fs mov movabs sub (bad) enterq pushq mov (bad) push and jne mov mov (bad) rex.WRX (bad) rex.XB lock (bad) sbb rorb adcl pushfq subb (bad) jrcxz mov scas cwtl rex.WRX imul (bad) push rex.WB je lcall int3 rex.WR mov in sub fsub stos xor xchg jmp cmpsl and xchg divb jns ds cmp mov rex.XB shr ss jne sbb sbb addr32 lahf je (bad) rcll xchg rol stc testl js mov (bad) repz mov rex.W and xlat mov loopne fdivr out xor loop sub callq xchg gs and clc rex mov pop movabs fstp xchg frstor cmp outsl cmc fildl lock xor cmp or pcmpeqw cmp repz (bad) out sub (bad) (bad) imul lock js in mov in or cs mov (bad) xchg lahf add mov rex.X cmp adc leaveq fildl sbb rex.WXB gs (bad) sar int3 jno rex.WRB (bad) cltd adc xchg jge test out mov scas jo push loope or lret enterq loop and neg cmc mov jne ja (bad) xor test xchg sub mov out push hlt leaveq push cmp mov (bad) cmc int3 adc repnz mov lock je xchg outsl pushfq (bad) adc loop push rex.WRB jg lret pushq je xor and xchg or jl fsubrl loopne je out add (bad) in jno movabs (bad) lods xchg lret (bad) mov rex.WXB cmp (bad) nop add addr32 fcmovu (bad) add divl mov lahf add mov (bad) mov (bad) jb fistpll nop (bad) (bad) rex.RXB fwait xchg rex.XB out (bad) adc imul imul shlb es cli js xor repnz jg cltd in repnz adc mov or xchg cmpsl adc mov push (bad) int (bad) (bad) adc mov push sbb add movabs and xor sbb xchg pop loop rex.X xor add (bad) mov out xchg mov xlat sbb sbb xlat out rex.XB (bad) xor (bad) test (bad) add cmp jrcxz movsl xor pop repnz jne add jno or scas and outsl test adc cmp mov (bad) es sbb outsl rex.RXB rex.XB mov adc xor (bad) push sub cli jno jo and or add in jne (bad) rex.WB lahf mov cmp out xchg icebp sahf push (bad) jge mov mov pushq add fs (bad) jno add adc xor in rex.WR rex.RB cmpsl mov cmp add sbb rex.XB xchg (bad) rex.RXB lahf cmp mov out test (bad) loop repnz test push sbb cld (bad) add mov xchg mov movsl xchg loope orl leaveq rex.WRXB or insb and rex.WX leaveq or (bad) cmp iret nop (bad) jrcxz add jge xchg sub ficoml cmp xchg xor (bad) jbe mov xor cmc pushfq mov repnz nop xor fxch cltd (bad) sub ficom cmp test and idiv or movsb mov and (bad) outsl repz in pushq or loopne sbb fiadd (bad) rex.WXB (bad) (bad) push adc add int lock add pushq pushfq xlat outsb mov lea (bad) (bad) adc cli fcmovne pop in adc push je jrcxz jrcxz vpmacsdql enterq imul (bad) lock in xor (bad) (bad) fwait adc lret push or test cmpsl rex rex.W jne insl (bad) ror addb pop (bad) imul adc (bad) lea retq fildl push cli mov adc scas out adc out iret adc adc cld std mov in js mov and ss (bad) outsb rex.WRB repz (bad) rorb xchg notb (bad) sbb loope xlat jo xor cli rex.RX rex.B (bad) retq lret jl (bad) repz fcomi loop mov int (bad) rorb or gs lret int rex.WRXB rex.RB data16 jrcxz pushq rex.RXB push in lods mov jne mov outsl leaveq add rex.W rex.RXB jbe rex.X popfq mov or fistp (bad) jrcxz mov retq data16 jb (bad) add sbb jmp sbbb int jns jnp xchg rex.WRX notl out addr32 (bad) jg push stos jle lcall and movabs in xor in popfq xchg (bad) cs xchg xchg jg (bad) (bad) rex.WRB cs enterq out xchg rex.RX (bad) mov and fwait jle add callq jg push push adc int3 xchg movabs rex.WR mov sub clc fisubl push add js stos icebp in jno scas movabs cmp fistp fstpl and xor icebp push xchg sbb fs (bad) outsl xlat shr xchg pushq pop xor add mov and xchg and and adc movsb pushq add (bad) imul add ja enterq hlt movslq faddl out faddl xor out imul xlat cmp xor sti mov fisubrl (bad) add hlt jg out movabs push fwait rex.R sbb push (bad) insl mov and mov mov movabs jno stc mov mov sub push xchg jns fdivl xorl (bad) (bad) xchg push cmpsb in (bad) pushq jb (bad) in (bad) jg hlt mov in (bad) jno xchg (bad) sub fwait adc (bad) (bad) movabs (bad) cmp sub adc sub jae xchg out (bad) sbb imul rex.RX or adc (bad) adc push insl (bad) jrcxz xchg int3 sub rclb pop int3 cmp shlb stos sub (bad) xchg (bad) (bad) (bad) add callq (bad) callq (bad) icebp (bad) callq xor hlt hlt mov adc nop mov callq (bad) rex.WR (bad) psubd add add repnz stos nop repnz xchg or repnz fwait jno (bad) adc stos add cmp xlat test lods rex.WRB (bad) (bad) mov mov test pushq (bad) cltd jle hlt je push jnp (bad) and int3 (bad) sub or iret push lock and mov rex.WB (bad) mov stos and out pop jg adc movabs rorb add loop push int3 out jne (bad) sbb insb xchg adc movabs (bad) xchg (bad) and movsb movsb (bad) pop leaveq gs mov in or add rex.WRX pop out jns sbb test push jne (bad) adc rex.RX adc (bad) in (bad) repz sbb cli and xchg in lock jle adc in jrcxz in in stos (bad) rex.W or mov and push add int stos cmpsl rex.WX stos (bad) xchg andb callq (bad) icebp mov out cmp (bad) mov (bad) or idivl sbb xlat xchg int3 nop adc rex.RXB cwtl pop (bad) cwtl test hlt xor rex.WRX add sbb out add roll sbb (bad) rex.RXB loop out adc push mov sti and push or insb decb (bad) stos push (bad) rex.RXB rep pushq pop addr32 test (bad) divb repnz sahf jl push scas rex.XB rex.WRX (bad) xchg mov add int3 xchg sub mov xchg mov rex.R rex.RB jmp loop xor (bad) jns or jmpq sbb test xchg jmpq insb (bad) and shrl rex.W and pop adc orl and sti (bad) callq (bad) (bad) iret jno callq (bad) int xchg scas rorl imul or xchg or (bad) hlt or and jl xor mov loopne mov insl pushq (bad) (bad) sub loope (bad) fiadd mov cli adc (bad) clc pop sti add (bad) xor sub test push xchg imul or xchg test (bad) (bad) std or fs movabs and or add loope or sbb add out fstpt rex.WR rex.R pop xor sbb stos mov or xchg pop repnz hlt (bad) jb rex.XB and (bad) jo rcll xchg pop gs mov jmpq imul or (bad) icebp xor rex.B shl mov test xchg flds in popfq sub push lock sub (bad) ss (bad) adc nop (bad) rex.R mov movsl nop sub out hlt sub adc (bad) rex.WXB push and sbb fsts testb lods or xchg addr32 jp loop mov retq out or mov not pushq or add sti sbb cmp rex.R repz bnd lea or rex.RB pushfq add and add lock mov insb mov add or testl and sub cmp (bad) (bad) data16 lods mov nop (bad) and sub cmc retq test (bad) shrb mov add sbb ror (bad) (bad) adc hlt sbb cwtl xchg sar ror test rolb imul pop cwtl cld mov mull sbb clc scas callq cmc lock retq orl (bad) rex.X (bad) imul adc jnp fistp add outsl pop cltd rcrl fmuls (bad) loopne mov push sub (bad) mov cmovne cmp push cmp cmpsb xor repnz ss pop (bad) pushq xchg jnp (bad) xor je mov push cmp xor jl jbe testb jl jl out hlt js sub retq setl jbe or cmp leaveq jne add mov jg sbb stos std iret add cmpsb jbe push rol (bad) jno xor rex.WB imull jo (bad) adc jne cmc cmc mov jo popfq xchg rorb add cmc add xor (bad) (bad) jo retq pushq jno or or pop jb xor jno cmpsl fcomp scas adc rcrl (bad) notl xchg rex.WRX mov cwtl (bad) test cmp jb xor jge testb lock xchg test cmp imul clc (bad) lea lock rex.WR add out cltd hlt lock xlat imul cmp xor movslq hlt xor xchg (bad) cli out lret rex.XB cs jns lahf or sub mulb out rex.RX es jne xor mov push mov mov callq adc lahf int3 in (bad) jl or mov in jg es (bad) adc xor (bad) std sub loop out rcl or jns shr xor (bad) mov sarb outsl xor xor (bad) movabs lret test add (bad) xlat jmp rex.WRXB lock mov test push int (bad) fwait mov pop pushq cmp addr32 fildll (bad) (bad) mov rex.WRXB pushq (bad) add jge push xchg vmptrld push sti (bad) xor sarb xor sbb (bad) xchg (bad) scas (bad) (bad) ja or jge cli (bad) rolb (bad) (bad) std mov jno mul mov (bad) in or enterq (bad) jge gs or jle sti rex.WB mov outsb lahf jmpq outsb lret scas out in push mull xchg ljmp adc jne cmp jbe rex xlat push lret int3 lods ror cmpsl xchg push iret idivb adc (bad) out (bad) mulps rex.WRX iret mov push out mov out or (bad) jno mov movabs rex.RB push test (bad) fs cmp mov xor pop xchg mov leaveq (bad) iret (bad) adc add cld push fiaddl clc push mov push (bad) (bad) cmc (bad) out in adc sbb pop (bad) (bad) fsubs clc jno cmp sub cmp jl add stos je sub (bad) (bad) jnp or xor rex.WRX sbb in rcl mov adc jnp mov rex.WX scas xchg (bad) jp je xor xchg popq or mov out scas je insl add mov mov (bad) xchg xchg jne (bad) sub (bad) lret or sub roll out in hlt (bad) pushfq lret test loop xchg imul pushfw (bad) lret mov fadds jmp jge rex.B cmp rex.WR sub movabs or jg (bad) (bad) (bad) repnz pushq (bad) jg and xchg and mov push movabs rex.RXB je js negb add adc movsb adc mov push cld mov (bad) or out rex.WR jne sbb add rex.WRX and push (bad) in cli mov jno or rex.X fistp test in sti mov fwait sub jmp inc (bad) (bad) mov mov pushq cmp imul push pop movabs mov mov pushq (bad) mov pop (bad) in (bad) cmpsb stos cmp or cmp xchg insl xor jno rex.WX std cmp and (bad) retq jp clc outsb mov lahf bswap mov jmp js iret (bad) idiv (bad) sahf sub fwait iret jbe mov (bad) xchg out xchg repnz add pop xchg iret test ja mov push cltd cmpl jb rex.XB rex.WR repz (bad) insb rcrl test addb (bad) jrcxz jbe (bad) iret mov jp jle cmp (bad) xor pop push cli (bad) imulb lods push out jmpq outsb cli add popfq or add cmp movsb (bad) (bad) gs stos mov adc (bad) hlt data16 mov (bad) lea or icebp shl mov adc (bad) mul es movabs xlat and rolb (bad) (bad) (bad) adc mov (bad) ficoml mov or rex.WR xor rex.WR rex.XB ror test movd cmp pop and push rex.RB rcll adc (bad) icebp hlt popfq data16 movabs add data16 (bad) popfq (bad) adc push insb nopl mov jl (bad) or mov imul in je (bad) repnz or jmp or sar or rex.XB mov (bad) js (bad) and fs (bad) insb test or or (bad) cmp xchg cmp jmp rex.RXB imul (bad) xchg lret (bad) or lcall mov rex.WB (bad) adc add or rex.RB in and sub (bad) xorb jg ds data16 mov and repz sahf cmp sbb cmp pop (bad) rex.WR cmp (bad) xchg xor jns fcoms adc rex.WRB repnz jne xlat stos mov add (bad) pop jmp jmpq callq jne pop clc adc pushq sbb or (bad) jne imul xchg xchg sbb hlt mov xchg out negl testl xor jp mull rex.WR (bad) gs xor xchg fnstenv rex.RXB sbb (bad) pop fcoml mov (bad) xor (bad) pushq fdivs outsl (bad) xor fwait xor xorl or mov in push mov outsb repnz gs rex.WX rex.X out xchg (bad) pushq (bad) rex.WXB and mov xor pop sbb (bad) xlat rcrb pop out sbb add add cmp iret cltd adc pop mov in mov in cmp pop out jp or (bad) cmp xchg add pop or sub xor add in push jnp jae mov jne mov (bad) out imul cwtl cmp jp (bad) adc add mov test rex.WX (bad) hlt stos mov xchg rex adc or retq xchg mov jo jl in mov movabs stos in jle xlat iret jne insl pop jno in fadd or pushfq shrb fwait pop pushq out cmp ss mov movabs push cmpsl xchg add fwait cmp or sbb decb cwtl xchg push xchg cld mov int jo xchg cwtl fs leaveq lods negb retq cmc sarb scas and outsb adc sbb (bad) sarb movsl jne sbb nop mov and adc in out cmc rorb (bad) fucomp lahf cmp pop add (bad) loop xchg xchg xchg (bad) (bad) loopne lods (bad) fcoms pushq rex.WRXB cmpsl pushq sbb xlat rex.WX idivb int (bad) loopne xor (bad) (bad) (bad) and out jmpq adc and iret lods mov retq jmp pop add cli gs sti lods sub jl popfq pushfq out cmp sbb mov mov pushq sub rex.W rex.WRX (bad) and test or sub (bad) xchg mov jno imul gs in (bad) (bad) fsubp (bad) rex.WX jg mov movsb iret callq (bad) cmp push sarb ja,pn (bad) pop (bad) and add sub leaveq xchg jp in push push jg xor (bad) (bad) xchg stos mov shrb and or enterq or mov stos sub in (bad) jno sbb cmp out or mov add rex.RXB cmpsb jle (bad) rex.RB enterq mov repnz (bad) rex.R add (bad) mov ja xor test sbb (bad) jmpq mov or jnp rex.X lea enterq es xorb adc movabs xor mov adc and roll push movabs (bad) cmp rex.XB or mov retq stc mov or addr32 (bad) std jmpq mov scas movslq mov int jns ss mov popfq cmp rex.WX adc xchg nop add lock jae idiv int3 add adc cltd rex.WXB out in stc testl pop std callq fs outsl and xchg (bad) pop xor in rex.B (bad) or out movabs je data16 pushq mov pop cmc cli fiadd (bad) fwait (bad) idivl sbb xchg push adc rex.WR xlat (bad) in out xchg xor (bad) retq xchg movabs add push jl xchg add add (bad) jmp adc sahf ja rex.WRXB (bad) (bad) xorl adc callq push pushfq xlat mov iret mov push fisttp outsb rex.WR ss fstpl sbb rol xor cmpb pop out mov mov or jne lock flds and push xor add xor int3 int3 mov xorl cltd xor mov xlat (bad) sbb xchg divb stos callq (bad) mov (bad) xchg js rex.WXB int (bad) (bad) pop ficomp jne xor out rol xchg test in cmc pop int3 mov xor enterq iret adcl jns or jp push insl mov mov movnti stc mov sbb sbb leaveq sbb sbb jo rol mov add add xor (bad) (bad) xlat rex.XB movabs mov test pop int (bad) (bad) fxtract gs (bad) cmpsl (bad) leaveq in sbb xor data16 rex.XB loopne rex.WX loop adc rclb callq adc (bad) jrcxz loope xchg (bad) fistpll pop cmp add sbb (bad) (bad) mov rdmsr out gs push (bad) adc rex.XB fwait rex adc jne pop jne bnd add (bad) or mov cmp cs xchg adc push jo stc imul (bad) xchg adc jnp repnz rex.B out ja sbb retq cld (bad) xchg andl movabs cmp fwait test (bad) movabs (bad) movabs movsl rex.RB rex.WRX push and adc out mov cmc shll sahf rcr movabs rorb cli or (bad) jo cli push pop mov xrelease (bad) (bad) mov rclb movsl lret mov loop int movsl (bad) insb retq int3 leaveq mov or int sub repnz push por movabs push mov jae jne mov fdivs cmpsb push (bad) movsl push lods (bad) xchg shrl fstl mov add mov scas adc jae int3 rex.WB scas fiadd (bad) (bad) rorb leaveq (bad) rex.W loop pushfq adc rex.R cmpsl jno in sbb or movsb cmp or (bad) (bad) and sbb fsub push (bad) rex.WB jo or enterq (bad) notb negl fdivs ds cmp out hlt jnp rex.WRX rex.RXB (bad) xor std mov rex.WX xlat (bad) fwait cmpsb jnp mov mov adc (bad) and (bad) pop fdivr (bad) rex.RB loopnel fs (bad) repnz cmp xchg (bad) (bad) scas adc adc sbb rex.XB (bad) icebp sbb adc xor xor (bad) cmp lgs xlat fstpt jno jo and loop (bad) lea or cwtl and (bad) cltd cmpsl stc loopne (bad) mov out and or cld xchg test std or js jae pushq retq push std add movsl adc rex.R sub (bad) jge pop pop mov (bad) adc cs mov xlat xchg adc adc pop (bad) lods rex.WR (bad) mov (bad) sub fdiv in int lock in or movsb leaveq lret movabs sub fidivl addb adc ja movabs callq mov hlt shrb xchg pop hlt add sahf rorl (bad) lret mov fmul rex.R shr loope or (bad) (bad) jb jno mov jne mov xor cmp pop cltd in rex.W cmp flds pushq sbb je adc sub jp xchg and pop sub (bad) lock lea jmpq nop jmp and mul notl mov or test or mov add sbb pop xchg jmp (bad) adc ss mov xchg jb lret (bad) xchg mov (bad) jge int lea sub loope or mov repz (bad) cmp (bad) jae leaveq xchg repz xchg jl rex.WRX adc sbb rex.RXB sbb add int mov (bad) in mov (bad) mov sbb mov (bad) and mov (bad) in rex.B ss (bad) cli (bad) and iret mov sbb rex.X int3 (bad) int3 (bad) (bad) mov test (bad) pop lret lods (bad) pop jns cld pushq sub out movabs movabs int outsb fstpl fdivrl callq adc callq sub clc xlat and sahf or sbb pop xor in mov (bad) mulps cltd rex.WRXB clc enterq fldl push fmuls data16 (bad) fmulp jb in or jmp std add (bad) jne or cltd stc jmp or jne movsl add scas imul (bad) jrcxz pop lret add rex.WR sub xlat movabs jmpq cmp cmp mov hlt test divl push adc sub repz jmp sbb rex.WB sub fs rcl movabs sub callq loopne and and xlat mov xchg int3 int pop mov rex.B rex.WX jl cmp jne rex.R shrb retq cmp stos loope js rex.R ds cltd jb push shrb fs (bad) jne rex.W sbb outsl adc push mov sub (bad) and cmp sbb (bad) xor pop movabs add hlt jns mov (bad) cmp out std in xchg (bad) test push je and movsl nop adc (bad) (bad) hlt sub or lahf jno (bad) pop xchg lea add add rex.XB rex.WX xchg (bad) and sub sti add add rex.WRB movsb iret hlt adc or (bad) adc xor loope rex.WRB in gs or lock orb stc sbb or (bad) jmp imul nop (bad) rex.WX xor (bad) mov mov jns or in test nop cmp jo rex.W rex.XB (bad) cmp mov mov cmc or sub imul xor or incb xchg jle int (bad) (bad) rex.WX xlat imul callq adc (bad) xchg (bad) cltd in popfq lea (bad) movslq add xor or popfq rex.WXB adc or jns loopne jne sub rex.RXB jp mov pop adc repnz rex.WRB (bad) xlat push (bad) ss jmp scas rex.RB cmovns in stos push push (bad) insb pop jmp jno andl cs push cld cmc (bad) rex.XB mov add push add pop mov cmc jne adc cmpxchg sbb fwait cmc lods (bad) rex.RB (bad) add stos movl or sub mov add roll cs mov es xchg (bad) or rex.RXB fistpl stc in xor mov jne rex.RB xchg mov or movb jge mov (bad) lcall (bad) rex.XB (bad) xchg add fcom add (bad) rex.RXB mov in sub rex.R fbld (bad) cmpsl jp,pt adc sub mov mov pop test imulb fsub fisttpl or fcompl (bad) cmc jbe retq jnp xchg rcll (bad) in rcl mov out xchg (bad) (bad) callq add (bad) jrcxz int xor (bad) xor pop sub pop (bad) adc mov jne mov lods (bad) or cmp cmpb cmp mov or retq stos (bad) imul xorl scas (bad) mov (bad) enterq fistpl push add and mov and sub js ljmp xchg ja (bad) xchg retq (bad) jmpq movabs (bad) push out sarb add movabs mov jb out push mov movabs sbb andl mov (bad) xchg cs and js movabs rex.WB rex.R jg stos in jne and jmpq or push mov or mov test xlat test outsb jle adc mov jmpq push pop ficom rex.RB fnstsw jbe decb callq repz or fnstenv (bad) test rex.RB cmp (bad) js es xor mov retq movsl vpand (bad) rex.X lock rcll pop addr32 xchg mov jmp sbb je mov rorb rex.WRXB or adc rex.XB add lret sbb fdivs sub idivb (bad) (bad) adc fmull (bad) (bad) cmp (bad) add xchg stos jne repnz movabs (bad) (bad) in (bad) and adc rorl (bad) (bad) xor (bad) notl out and icebp cld (bad) cmp adc cld (bad) sub (bad) mov test (bad) sub hlt xor add (bad) icebp (bad) out xor add out rex.XB cmp adc xlat (bad) in and je mov sub (bad) rcrb adc and rex.W rex.XB mov and adc (bad) xchg or or fdivrs jae prefetch int3 hlt mov adc and adc sub int js and xchg adc (bad) cltd sbb notl incl cmp rex.W rex.X ja adc jne (bad) or cmpsl or and cmc retq lock or sbb cmp out stc adc add xor or (bad) adc (bad) hlt (bad) (bad) xlat (bad) (bad) sub xchg pop or (bad) in push sti rex.RXB cmp push pushq xchg adc sahf pop (bad) movabs imul roll (bad) test std fbld in (bad) js xchg mov mov dec cmc outsb fdivs mov adc rex.WRXB pop imul or mov in jo je (bad) or jl rex.WRB mov in rolb jne retq stos imul rex.RXB sub add retq rex.RXB rex.XB rex.WB rex.WRB or fdivs adc movsb out (bad) add add pop lret cltd jne and push mov xchg mov movabs add pushq mov and cmc rex.WRB stos rcr pop and sbb jne test scas (bad) rcr adc movabs (bad) mov (bad) sbb pop rex.RXB in callq in xchg hlt jmp add and mov nop imul jo lea (bad) rex.WRB sbb mov cmp lods pop loop mov rex.RXB hlt movabs (bad) scas mov jne lret outsl out sub add (bad) (bad) xchg xor loop fs and sub or or movsb int jns mov add add out iret and rex.WB xchg (bad) (bad) fcmovnbe (bad) cs xlat je stc fwait std or rex.XB test sub pop push (bad) mov (bad) outsb rex.WRXB sub lock movabs mov (bad) (bad) icebp loop mov sbb sub mov sbb js (bad) mov xchg (bad) addr32 xor movsb push rex.WB fs jb out ror mov push stc pop mov or iret (bad) rex.R (bad) fistpl movsl (bad) mov out (bad) xor or xor or sbb xchg callq or adc rex.W xorb test sbbb cmc adc and lret xchg adc cld and rex.XB movsb repz in mov or (bad) mov (bad) or (bad) lahf lret xor adc rex.WRB rex.XB lock mov (bad) xor xchg and (bad) xor xchg push rex.WR mov (bad) mov xor in stos xorb push rex.X adc rex.R (bad) jnp test mov xchg cmp sbb or cmp fadd mov leaveq jp gs rex.WB (bad) int3 repnz push or jno int std loop adc test addr32 xchg (bad) adc sbb (bad) movabs loop addr32 mov out test rex.W lods ja jns push cmp jo (bad) mov rex.WXB adc sub rex.WR in and rex.XB out insb icebp add rex.RXB (bad) sbb imul push (bad) jne xchg sbb add sarb add lea out pop pop rex.WRX sbb in mov fwait fwait stos sti (bad) mov xchg mov jrcxz idivb adc jne mov adc (bad) (bad) mov (bad) rex.RB jno lea movabs hlt add mov retq mulb sub pop cmp sbb add push popq cmp sbb es xor push jbe sub mov xchg push lea jp mov test insb fbstp jbe pop je lret (bad) xlat in jg cmc cmp je imul mov xor cmpsb (bad) or (bad) and rex.WRB add in push fnsave (bad) xchg out (bad) xchg cmp cmpsb imul rex.RXB add jne push out retq mov jne shlb mov adc jne (bad) mov sub pop push jle adc (bad) mov xor fnsave pop retq jbe repnz (bad) (bad) (bad) fisubl cmp fucomp ss mov jbe xchg in adc xor and out lret sbb push jmp insl (bad) cmpsb jge movsl cmp nop (bad) pop (bad) cmp in (bad) out rex sbb push (bad) insb jmpq or (bad) mov adc mov sbb mov repz cmc xchg mov rolb enterq rex.WR cmc jmp jle or (bad) ljmp jae orl icebp fs js xor rex.RXB (bad) data16 leaveq rex.R insb (bad) out testb sbb in sub xadd je push retq adc (bad) (bad) rcl add std je (bad) rex.RB (bad) jle jle insl sub jnp callq (bad) sbb push sub lret frstpm(287 movsl jle and stos fild fisubrl fwait (bad) cwtl (bad) movb xchg lock jnp mov callq xchg sub rex.WX in cltd ja fdecstp sarb rex.RXB or jne or rex rcr int3 imul lret pop mov (bad) xchg shr jne sbb sbb jmp or push movabs pop mov pand jne adc xchg lock pop add jbe (bad) (bad) lock repz or in (bad) out or repnz (bad) hlt insb jmp mov mov rex.WRX jne adc mov xor mov xchg add sbb stos (bad) movslq (bad) imul cmp mov jp xlat sub rcrl roll (bad) (bad) cmc fnstcw jg xlat movsb fs out mov nop int3 or or rex.RXB js gs lock (bad) xlat cmpsl hlt xchg test iret or adc or pushq imul jne rex.WB enterq in adc xor shlb insl adc jne sub push xchg rex.XB (bad) mul mov hlt adc (bad) mov push cmp fcomps or xchg jbe xor hlt rex.XB movabs sbb imul lret adc movabs (bad) adc int3 adc int3 (bad) sub mov sub int3 (bad) test cld sbb push out (bad) retq stc adc out or (bad) addb sub rex.WRXB mov scas add push xlat fcoml pop (bad) rorb adc or loopne add pop pop rex.RXB mov (bad) xor (bad) callq (bad) notl ja adc mov mov sti rex.X loop adc insl mov std sti sbb sbb rex.WRB rex.WXB (bad) (bad) xor repnz add xchg notb ja adc xor sahf (bad) popfq scas pushq jg int3 rex.XB add pushq test mul (bad) jae push fwait adc pushq subb rex.RX out mov jmpq cmp out mov mov cmp (bad) js (bad) in (bad) test iret and retq pop xchg insb xlat loop add xor xchg scas (bad) scas jne push cmpb test xchg lret (bad) (bad) rex.WB imul (bad) imul add sahf jb fistl rex.WRXB cmp in insl callq rex.RXB sub or pushfq mov jne repz cmp loopne enterq cmp jno rcll notl retq hlt scas repnz push mov clc (bad) jne xchg xor mov (bad) leaveq rex.XB rex.WB push jge xchg (bad) clc repz sbb (bad) rex.WXB roll (bad) rex.WR jp jae xchg or rcll cmp jmpq rex.XB test std xlat push (bad) negl sub rex.X mov hlt mov adc adc add gs mov mov and fmuls lock (bad) enterq insl fcmovb xlat notb mov xchg divb mov push clc mov outsb fnstenv cltd fcoml adc (bad) in rex.X (bad) outsb rex.WRB xchg lret out xchg xchg jnp jno pushfq (bad) jle movabs mov hlt int xchg xor ficom mov xchg and xor rex.X (bad) mov (bad) (bad) hlt jo jnp adc (bad) rorb xchg rex.WB test in out (bad) jae mov adc xor push iret xchg (bad) (bad) rex.B jne xchg lock enterq rcl retq mov mov mov pop test sahf xchg imulb jp jae in ss lret (bad) jae or ss sub ss (bad) (bad) mov popfq or mov (bad) data16 add or cmc jp jbe rex.RXB (bad) cmp mov xchg add pushq sbb (bad) (bad) adc pushq cs loopne or (bad) adc xchg mov rex.RB add xor shlb (bad) hlt cmc popfq sbb pushq sub int scas insb iret ficoml xchg and sarb cmp rex.R and xchg rex.WXB (bad) imul repnz lock jp mov lahf (bad) cs xchg xchg mov repnz paddusb xchg cmp rex.RXB movabs mov sbb pushfq popfq sub push cmpsl rcrb je mov rex jmp test sub xor sub adc idivl pushq in cld xor nop in sbb callq imul insl cmpsl rorb pushq in rorb and mov test mov (bad) cmp nop xchg (bad) (bad) in (bad) mov test and fnstcw repnz int3 lods callq rex.WB jrcxz jne jo lock cmp fs jo cmpsl int3 add mov push movabs mov mov stos sub and add mov test std jne add push std out sarb movsb mov and (bad) sub insl cmp retq add xor xor (bad) fucomip in rex jg in outsb adc fadds jg ja loopne lods push in retq movsl (bad) mov add rex.RXB (bad) add jnp add hlt test xchg mov test sub repnz add xchg cmpsb (bad) sub clc (bad) or fwait repz repnz rex.XB lock cmpsb mov orb sub hlt or je fist (bad) callq cmpsl es xor out scas or (bad) loopne cli stc lock decl mov xor (bad) pop jrcxz sbb (bad) fdivr lret jp mov fucomi and (bad) sbb mov std or rex.WRXB js nop (bad) (bad) sarb pop cmpsl and nop jne outsb int3 and lock cmpsb add jmp rex.RX add xchg cltd test repz jo out popfq xchg (bad) xlat add (bad) in add vcmpps mov pushq loopne pop (bad) xchg fmull (bad) xor retq (bad) mov or sbb mov sbb (bad) xor in imul sub ficomp xchg js sbb rex.WRXB cmp add and sub jrcxz test test mov mov fs adc add (bad) (bad) insb je mov (bad) cmp add or mov cmp cmpsl sahf xchg rex.RB jrcxz (bad) rex.X push in cmp jmp xchg sti pushq mov (bad) rex.XB pmaddwd cmovo imul sub jbe (bad) xor jl push cltd sbb or cmpsb (bad) fs loopne rcrl repz fcomps rex.WR hlt jbe je pop (bad) mov jne testb jae idivb jl jb enterq (bad) lret test xor fdivrp mov adcb (bad) rex.WR (bad) rex.WXB lock rex.WRXB movabs add rex.WXB xor mov mov (bad) leaveq or loop pop jge rex.WR js rex.WRXB mov shrb sarb xchg rex.R mov cld sub rex.RXB (bad) gs rex.WRXB rex.WRB adc sarb js ss scas (bad) or adc sbb xor adc callq mov add jne out lahf js xor cmp loopne pop sub xchg or loopne (bad) movsb pcmpeqw jmp test cmpl (bad) out xchg (bad) mov (bad) lahf xchg (bad) (bad) int or jns loop outsl xor lahf out (bad) mov pop xor cld (bad) retq jge mov fdivrl mov icebp outsl mov fwait (bad) mov andl jne rorl lods loopne adc imul xchg nop cli xchg (bad) jne insb jae xchg (bad) cmp (bad) fmuls mov add xor pushq js and je out (bad) (bad) movsb xchg push xlat add rex.RX sub or pop xchg mov rclb test ljmp mov mov pop in or xor js hlt test fst lock (bad) in push pushfq loop hlt sub lahf or (bad) cltd leaveq out popfq iret movsb jne in vpsubsw loopne in or movslq and sbb pop gs scas (bad) rex.WRX sub mov or je retq mov jp fist mov and mov (bad) mov fbstp xchg mov (bad) movabs mov (bad) sub lock sbb hlt outsl xor rex.W (bad) (bad) nop movabs test push enterq add xor cmpsl jl fsubs popfq xor xlat pop fidivr jmp sti repz or jrcxz and xor andb sti (bad) mov shll (bad) jne movabs rex.RX in test sti imul mov mov (bad) outsl movabs out out mov insl notb icebp xchg or out or rex.XB add (bad) jne int cmpsb fcoml and add mov mov cmpsl imul adc test mov (bad) (bad) fdivp adc add add (bad) fildll push xchg or (bad) sti sarb rex.WB sub (bad) (bad) in rex.WRX imul in (bad) mov jrcxz (bad) callq sar pop add sub mov add int (bad) (bad) jae (bad) gs leaveq cwtl enterq cmp cmc (bad) jno lret out rex.RXB (bad) pushq movsb sbb or mov rex.WRXB loopne cmp clc fadd xor pop clc push stc or sub pop (bad) fdivrl ja data16 xor xlat std or push (bad) add roll cld or jb ror scas movabs bswap add adc mov sub pushfq loopne rex.WXB push test push in adc add je test enterq jb (bad) int3 (bad) lret (bad) in hlt icebp sbb (bad) rorb jle test js adc lods negb add rex.RXB leaveq sub pop rex.WR pushq nop js (bad) sahf mov or lods sbb rex.WX hlt (bad) add test js rex.XB (bad) (bad) clc xchg jo imul adc int or (bad) add and icebp lods (bad) (bad) rex.WR xchg int mov add (bad) rex.WR fwait cld mov jg (bad) rex.RXB ficoml retq fwait test sbb movsb mov mov fwait (bad) jmp loop int3 js adc repz xchg test mov or xchg (bad) pop insl int mov fs adc (bad) test xor (bad) push rex.RX imul leaveq pop lock or (bad) and rex.WR jrcxz xchg (bad) pop rex ds (bad) rex.RX jne out (bad) mov sahf movabs sub pushq (bad) fwait or enterq movabs enterq jrcxz callq mov callq and push imul mov rex.WRB mov xlat jno test jge pushq mov push (bad) test jno adc test (bad) hlt rex.XB fwait scas shll and icebp sti adc in adc add outsb repnz xchg sbb cmp xor rex.XB (bad) shlb jge stos in cmp fld push rex.WB fistpl rep (bad) loop add xor cmp (bad) outsb lock adc hlt mov push jg pop cltd insl or mov jae fwait jle or (bad) movabs (bad) fcoml jl in imul (bad) callq (bad) fist hlt cmc (bad) std mov mov callq mov int3 mov xor push int es cmp pop test popfq cmp pushq fs scas shrl movabs mulb (bad) stos test or add in adcl (bad) (bad) jb lahf xchg lea imull jb sbb sbb lock or xchg add sbbb push rorl movsl repz (bad) rex.RB sub pushfq mov (bad) addb xor ja mov adc movsb lods rex.XB mov jo pushq test rex.XB adc or jne add movsb rex.WRB lods (bad) xor mov (bad) out shlb popfq addr32 mov xchg adc sbb jo adc jae and push or pop lcall (bad) in cmp (bad) data16 out movabs push cwtl xor push rex.RB (bad) (bad) xor bnd mulb cmp nop rex.WR sbb and and pop js jrcxz mov cwtl lock add (bad) rcll pop pushq pushfq sub cmpl adc add (bad) (bad) mov imul add or xor cmp (bad) je add cmpsb fwait (bad) (bad) or rex.WRX data16 (bad) mov stos jbe adc and ja xchg (bad) nop (bad) jne add insb xchg or rex.WRB fs jne loope cmp movabs lret callq cmp rex.X fcmovb jae mov loope mov es fild sbb cs fwait (bad) push or (bad) (bad) fs sbb out (bad) and lret (bad) or (bad) add xlat push mov adc mov callq in mov sarl jne scas mov xchg nop jo (bad) lods rex.WRXB (bad) out cmp rcl xchg or in rex.RB rex.RXB jno jp test jnp mov jl jl xchg rex.X add sbb callq xchg jmp xor repnz movabs lahf (bad) push movsb mov rex.WRX lock cmp jo (bad) sub loopne mov mov pushq lock (bad) jne mov test test movslq repnz pushfq push insb imul cmp jb jbe adc xor mov jrcxz jo insb mov add std mov scas cmp pop jmp mov xchg jle push jmp jmpq out push fildl jae (bad) rex.RXB and pop clc (bad) fmul and jno cmc out jne jrcxz (bad) jle cli adc jmp addr32 xchg lods out and cwtl xchg rex.RXB xchg add outsb (bad) test sub outsb mov or rol push and int3 int3 adc leaveq rex.WRXB out mov (bad) imul addl sub repnz push (bad) js shr rex.W sbbl cmp fcmovnu fistp jbe xor mov mov jae sbb push fs imul int3 adc mov pop lods push imul jbe mov and in jne jno outsl shlb push mov out sub xor cmp sbb xchg ss lret in jmpq rcr cld pop xor mov mov mov push pushq sub pushq jle pop push rex.X (bad) loop and pop or mov hlt movsl jg sbbl rol mov clc xchg (bad) rex.W xchg movabs adc movabs or (bad) popfq xchg outsb (bad) fistpll lods out mull xor rex.XB adc xchg data16 sub (bad) xor out jge sub pop movabs int (bad) out int xor test mov outsb xchg retq xor divl sbb out insl (bad) mov repnz imul add cmp (bad) in sub adc add cmp jne and xor xor shr pushq mov shll rex.WX mov (bad) push (bad) mov cli je adc iret add adc (bad) ficoml (bad) (bad) cwtl test pushq adc callq jnp sbb mov fwait pop repz sbb lcall (bad) sbb pop cmc rex.WRX xor and rex.WRB ror or or (bad) rcll out imul xchg sarb mov jae fistp rex.RXB jne imul mov cmc rcrl sub out mov (bad) mov xchg rex.WR jne fnop xchg fisub out add addr32 jl hlt movabs xchg fadds sub loopne add movabs outsb insb mov xor xchg (bad) js (bad) rex.RXB mov out loopne (bad) sub (bad) or iret (bad) repnz rex.XB sub or rolb out xor rex.X cltd sub xor rex sti push add adc (bad) add jg lea cwtl repnz sub mov icebp mov lock pop rex.RXB rex.WRB (bad) push js (bad) xchg mov js mov (bad) ds rex.RB subb test mov jp jno outsb push mov loopl loop rex.X mov fs cmp mov cs jne jbe (bad) mov jo adc int mov add out stos xlat (bad) and gs mov mov stos fs rex.RXB fcomps mov js add hlt fmulp outsl out (bad) (bad) test push (bad) sub mov fisubr add out popfq (bad) addr32 xchg xchg xchg rex.X rex.WRXB xchg and (bad) push (bad) rex.XB repz or (bad) out and in idiv rex.B (bad) ss xchg sahf jmp mov (bad) je mov es mov mov (bad) pop movabs pop cmp adc mov mov xchg loop insl movb fisttpl rex.R xor rex.RXB sub lea pushq sub xchg out movabs cmp xor pop pop decb repnz lock jne movsb mov push (bad) add mov xchg pushq pop or jae sub add cmp sbb loop fldt (bad) shrl pop or jmpq (bad) and (bad) cwtl (bad) mov mov sbb mov (bad) mov sub in pop jb mov std (bad) (bad) (bad) xor (bad) movabs imul int3 push cmp mov int or xchg sub rex.X and adc (bad) jrcxz (bad) mov and jnp,pn (bad) mov ror imul rex.XB (bad) rex.R outsb rex.R push sbb rex.X adc sbb adc jno cmc (bad) mov adc (bad) repz add outsb mov test sbb (bad) nop or or adc mov rex.RB mov lahf jrcxz fnsave out loop (bad) mov fdivs lock cmpsl cld (bad) jne mov insl rex.RB rex.XB add add (bad) xchg and comiss pushq xor callq add sti (bad) div (bad) cs enterq cmp (bad) push cmpsl jmp xlat pop (bad) retq loopne rcl cmpsb mov rex.RB (bad) in mov lret imul cld movabs jrcxz (bad) mov or cli (bad) in in sti xor cmp jo sbb hlt mov add sub repz and (bad) sarl adc je xchg callq divb clc xchg movsb int repnz sbb mov xchg push rex.WRB add and add mov xchg jmpq sub gs lahf xchg adc sbb int3 repz push (bad) or out xlat jl add pop (bad) push rex.R cld pop adc (bad) in push sti adc xor lea push sbb (bad) (bad) hlt mov fimul cmc out lea mov mov adc shlb fimull sbbl (bad) es sbb lret int3 add jl sti adc stc rex.WR mov mov (bad) in xchg sbb jg int3 pop xorb jp cld or rex.XB and test rex.WB cs mov out add pop xchg jno cmp pop jrcxz rorb movabs (bad) roll adc add mov adc icebp cs callq push js or in add out add out test movabs (bad) sub rex.RXB pop cmp xor insl repnz (bad) rex.R gs mov cmpsl (bad) or adc pushq testb movabs add (bad) jne in or adc je out rex.WB (bad) repnz or mov jmpq sbb or (bad) int in jae imull fstps retq push lock pop or in rex.WXB rex.WB rex.XB int3 add or ss (bad) xlat ss callq or xchg push push pushq xor out movabs mov fnop mov mov rcl sbb iret enterq clc jg (bad) xchg xor xchg stc (bad) cld xor jl push push and rex.WRB int3 jno fcmovnbe xor fstl callq (bad) sbb jmp push cmpsl shl leaveq rorl (bad) add imul pushq mov in mov xchg je add rex.XB xchg adc rex.WXB lock sbb imul xlat adc jrcxz add (bad) imul jrcxz mov add (bad) loopne mov movabs or notl fdivp xor sbb cmpl xor (bad) (bad) xchg je shll int3 in mov sbb mov add cwtl rex.RX sub lret push rex.WR or xchg (bad) xor divb push xlat cmpsl (bad) or add or adc fs mull out rex.R mov lock sub cmp sub callq insl int3 adc (bad) and jl (bad) pushq mov sbb stc xlat movabs repnz add fdivl imulb je sub loopne jo add and mov xchg mov mov test scas (bad) mov mov pop leaveq cltd jg enterq adc and jns adc xor xor pop mov jne idivl sbb (bad) repnz add (bad) xor sub fdivl out lock rex.RX jmpq mov js in (bad) rep jo repz scas adc rex.W push add clc cmc rex.WXB (bad) jp je rex.RXB (bad) loopne loop xlat shl imul fisttpl js leaveq xchg rex.WR addr32 or mov sti in int3 sbb rex.WR fsts (bad) xor (bad) mov mov or xchg hlt rex.RXB loopne sub test mul xchg movl or gs retq enterq sbb sbb iret out sbb jbe jnp je out sbb outsl xor (bad) add add mull je jge jno adc mov pop pushq outsb pop enterq sti add and scas negl mov in jae fidivr fmuls jle jle int add jmpq mov loopne push or or xchg (bad) or add xor xor retq mov jrcxz xchg rex.R shll loop and jns es (bad) or repz ja jo addr32 xchg (bad) loopne rex.XB mov mov mov xor push mov in neg lods (bad) in loopne mov out mov rorb (bad) adc retq (bad) lahf test mov or mov sbb mov outsl je hlt adc pop (bad) adc js adc cwtl (bad) mov mov (bad) seta in (bad) jne div cmp (bad) (bad) iret outsl stos (bad) out rex.WRB out pop rex.W add mov sbb ja retq jns pushq xchg jno sbb insb cmp (bad) xchg (bad) (bad) mov ss test js sbb (bad) not (bad) (bad) pop out nop sub data16 adc cld (bad) icebp mov or in mov xor lahf mov out loopne fs jno jo movabs pushq (bad) enterq add or hlt jno and jmp rex.B lock clc int ror or lret add add insl (bad) jg xchg push lret jne movabs (bad) mov sahf cmp rex.X addr32 (bad) or (bad) push add (bad) enterq add fbstp jne (bad) fisub mov and and adc adc jg add sahf (bad) push and sub icebp callq (bad) hlt adc orl cmp (bad) data16 adc xchg cmp push xor out fldenv mov retq scas fmul fwait enterq (bad) jne (bad) rex.XB scas mov jbe (bad) test mov out xchg xor (bad) (bad) (bad) add js push mov mov pop (bad) fmul in repz clc adc adc add enterq push std add xchg addl mov sub jle stos (bad) push pop and cld test (bad) mov lods jl pop movsl and jno loopne addr32 adc mov insb movabs push retq loope pop (bad) nop xor js enterq (bad) pushq pop pop and mov pushq (bad) xor sub pop movabs and mov int xor cmp pop std pop rcrl adc pushfq idivl (bad) int3 xchg clc rex.RXB out adc outsl (bad) or cld rex.XB xor mov mov (bad) push movabs lock not cmp test xor movsb repnz sub sbb adc jg lock adc fdivs push divb (bad) xor adcl (bad) in mov jne add (bad) push (bad) sarl iret insb cmp (bad) addl cmp (bad) (bad) (bad) (bad) add (bad) sbb leaveq insl nop cmc and mov mov push pop cmp jne subl mov rex.WRX rex.WXB mov repz sub mov mov data16 push xchg jno fwait cwtl (bad) xchg sub callq roll rex.WX adc cmp rex.WXB push nop push jp (bad) orb cmp jbe cmp pop hlt sub (bad) jmpq (bad) movsb (bad) sysenter out jg,pn jmpq add hlt (bad) pop rex.WX jne jl repnz test mov (bad) xor hlt fmuls fistp mov es adc cmp xchg or pushq and mov adc out imul shl xor (bad) test rex.WRB imul (bad) (bad) or fistpll jns movntq out adc xchg sbb xor cmp movabs pop fisttpll std imull lret (bad) push cs lahf sbb shll incb add cmpsl or movabs (bad) rex.WX push or js cmpsl jae xchg fs in xor and jmp sbb mov fcomip idivl mull cmc and pop (bad) (bad) sbb (bad) loope imul out xor lods fsub add and out mov push (bad) adc std xchg mov movsl add jne fwait mov mov jle rex.WRX rex.R cmp fwait insl addr32 or add xorb (bad) vmovntps imul mov add (bad) jg fwait addb mov (bad) mov cmp sub mov in ja xor (bad) add sub jl mov adc (bad) (bad) idiv repnz sbb mov xlat xchg rex.WRX int3 out xor loope jne push pop fadd mov gs rex.WX data16 or nop fcom sbb mov scas jmpq movabs in rex.X cld jrcxz notl idiv fidivrl sbbb (bad) and rex.XB fisubrl sbb sbb cld callq enterq mov add adc std movabs data16 adc rex.WRX mov je push (bad) pushq repnz jb mul pause or lods bnd scas in add movabs insb (bad) (bad) test add rex.WR and or (bad) mov movsl push lahf icebp (bad) xchg adc fmuls test repz (bad) xlat jne pop hlt decb adc fst not xchg mov push mov push hlt cmp (bad) jo int (bad) pop (bad) in pop mov add adc std int cmc fstl pushq cmc push retq add adc pop jno movsl (bad) out rcl xor jl adc sbb stos (bad) fwait jg sbb scas je loopne mov repz nop (bad) je (bad) icebp push mov (bad) movsb hlt or cmpsl push mov jns insb add sbb hlt jne int (bad) mov adc rorb rex.WRX in hlt add or (bad) je sub cmpsl or add mov mov push int3 (bad) mov fwait ss insb lock fsubrs xor mov pop out add lods mov jne xchg sbb idiv rex.WX and imul je mov int3 add popfq pop cmpb or or sbb and outsl (bad) rex.WRXB xchg lods out fistpl test push pop pushfq scas adcb enterq push cmp and sbb sbb xchg and (bad) (bad) mov adc rex.WXB jp jbe movabs adc (bad) jno (bad) data16 mov adc test pop adc (bad) out hlt or (bad) add test insb sub enterq enterq lods mov lret jnp xor popfq rex.XB sbb in adc ds cmpsl (bad) rex.WB (bad) xchg scas rex.R int gs (bad) pop imul jb mov mov in (bad) jne jnp jno mov fdiv jno shrb and sbb jp repz mov mov js (bad) (bad) jle punpckhdq (bad) rex.XB mov out test ror out orl pop mov out int adc pushq mov (bad) rex.WRX rex.B fs mov (bad) hlt imul (bad) and adc jrcxz xor hlt push (bad) xor mov (bad) lods xchg movabs repz push (bad) pop jmp sbb cmp fmuls adc cmpsl or insb adc or mov or rorb cmpsb rex.XB sbb in sbb adc (bad) or sbb cmpsb rcrl stc sbb movabs leaveq mov movslq and in mov jne xchg shrb int loopne or cmpsb stos ja xchg movabs je rolb in or es mov rex.R fwait xchg add jo (bad) in mov (bad) jno stos sbb es sbb outsl add in fdivr jbe rex.RXB repnz (bad) rex.WR cli (bad) rex.WRXB (bad) adc js in std mov (bad) mov sub out and addr32 rex.XB adc jno (bad) rex.X popfq in retq and out (bad) mov (bad) rex.WXB pop push cmp or pushq mov sub rex.XB adc (bad) loop adc adc jrcxz xor hlt xor xlat rex.WRXB rex.X mov pushq rex.WRX loop ja out or jg xchg and rex.XB push std int3 cs fadds rex.WR hlt add (bad) lahf popfq adcl (bad) insb jl rorl jne and (bad) retq and rcr lods mov cli int3 repz imul loop add pushq popq lods rolb (bad) (bad) lock leaveq stc xchg mov fldl cmc imul jmp sub iret jno fwait (bad) or lock fldenv mov sub stos div add pop and movslq (bad) loopne jne cli pop out test retq push adc (bad) mov fwait paddb fbld adc (bad) sahf adc (bad) rcl rex.RB (bad) mov xor je mov xlat neg jmp mov add jbe (bad) jne callq nop sub mov clc jne cmc cld cld loope pop mov jge (bad) (bad) and cmp cmpsl cmp cmp pop scas xchg rex test retq movabs xchg ljmp push (bad) jne rex.X sub sbb xor cltd sbb scas clc fistpll xlat fistpll cmc and rex.RX sub (bad) movabs or out add sbb push and jne mov mov test xlat sbb movabs (bad) (bad) sub pop or (bad) (bad) out (bad) (bad) repnz addr32 pushq add (bad) stos imul repz cmp gs fistp rex.RXB (bad) (bad) sbb (bad) pop add mov (bad) mov loopne imul stc or cmp pop rex.WRB xor mov ss and lea fisttpll xor jo mov (bad) pushq sub rex.WRXB xorb rex.WR ss outsb adc xorb adc xor jno loop rcl sbb jne movabs push fwait in (bad) jne adc mov xchg adc and rex.RXB rex.WR rex.WR xchg mov in icebp cmc or add mov sbb repz cmc cmp addr32 jo in (bad) lea jno shlb mov rex.RXB push jbe mov or loopne rex.WRXB rex.WRXB xor sub push xlat jne cmpsl pushq cmpb pop popfq out jp cmc rex.WRXB mov sub jns test int3 notb and retq in rex.XB jge nop lock or and movsb mov mov retq movabs loop jge rex.WRB jne retq push mov mov (bad) loopne stc mov push fmull jg jmp sub adc mov shlb push retq mov scas rex.WR cmp sub in jne rex.RX rex.WX fmull and jg xor add sahf es mov (bad) (bad) and sub or sub adc adc jmp test push cmp repz rex.XB adc rex.WRXB mov cmp sahf xlat fldenv jb cmp cmp xchg sbb callq (bad) lret push xchg loop repnz mov rex.WXB xor in pop scas adc adc lret sbb rex.RXB insb xchg jnp sub (bad) callq jnp int3 mov js (bad) in xchg mov add jae (bad) adc mov (bad) mov fsubrs pop clc (bad) mov pop xchg out cli sbb jl cltd imul rex.RXB jg and jl movslq insb rex.XB add xchg push (bad) (bad) movl sub jo (bad) mov (bad) out xchg cmp rex.R loopne imul in fdecstp rex.B (bad) jo movsb (bad) sbb jne jle retq in (bad) and jns rex.WXB int pop nop retq sbb and retq and mov add mov or (bad) rex.WR rex.W rex.WXB sbb (bad) pushq insl je xlat (bad) jbe or add nop rex.XB mov add int3 imul mov rcl imul rex.WRX jp mov and (bad) sbb sahf cmp loopne (bad) adc jne or add and adc rex.WRB enterq lret callq jmpq cmpl (bad) xor and (bad) xchg add jne xchg jmpq outsb test enterq fdivs gs int sahf iret hlt xor push mov jg add mov rex.XB cmp and (bad) sti mov lahf mov sbb rex.RB xor (bad) rex.WRB out rex add or (bad) cmp shrb movabs mov andb lods insb mov (bad) or enterq lock xor mov mov (bad) psllq xor jmpq cwtl xlat pop in jne out sbb fdiv or adc pushfq xor out sub (bad) sti movabs jne movabs mov movsb rcll sub cs xchg fcmovnu (bad) add sbb leaveq cld push xchg jne or xor adc and mov (bad) rcl repz adc nop test (bad) (bad) xchg lahf rex.WRB rex.WRB pop xchg icebp xchg jne xor in cs (bad) (bad) jmpq pop test rcrl (bad) movabs movsl scas fs callq loopne adc sub rex.WXB in lock out xchg xor rex.RXB in xchg cmpsb rex.WRXB rcrb (bad) sub sub test xchg movabs mov cmc rex.WRXB pushq rex.WRX (bad) (bad) cmp cmpsl (bad) rex.W lahf push xchg out xchg sub ja jrcxz fadds (bad) jmpq std and sub (bad) rex.RX mov lahf mov xchg jnp clc or jne lret add adc pop xlat push movsb (bad) (bad) pop imul clc jmp out push sbb or stc hlt or cld xchg sbbb adc sbb push stos test xor xchg adc scas (bad) hlt (bad) int3 fdivrp movabs jbe (bad) mov (bad) jae cmp or jge or (bad) test ficom out retq jrcxz divb btrl rex.RXB xchg callq repz lods xlat (bad) (bad) sub (bad) mov ja out (bad) and xchg (bad) and add rcl clc repnz (bad) out hlt cli jno lock mov cld adc mov cmp push enterq fsubr add jne retq or std adc jb addb jo mov adc fs add adc in sbb or (bad) lret (bad) in (bad) jne (bad) xor add lods in loopne pop idiv add lock sub int add jne cmp add pop lock mov out add rex fstpl pop mov xor (bad) adc add mov idiv rex.RX or add or test or (bad) mov leaveq xor mov movabs rex.R xor and movabs mov or movsl xor movabs jmpq and push sbb in and (bad) scas mov rolb mov clc in rex.RB shll stos pushq je mov xor adc retq callq mov in jrcxz (bad) xchg or (bad) outsb jbe (bad) orl roll (bad) (bad) (bad) rex.WRX movabs dec add mov cld rex.WB xchg mov mov je decb lahf mov xor callq xchg or icebp popfq (bad) mov sub mov lods or (bad) adcl int3 test mov rex.WR mov repz jne cs repnz sbb xchg movabs add js push mov jno adc addr32 jne pop add mov (bad) adc (bad) int or out add jae sahf and out and xchg rex.WB movabs sbb imul adc cltd jae push (bad) std retq (bad) (bad) jbe inc callq hlt sub test mov xchg (bad) retq (bad) or out stc mov (bad) (bad) and rex.R and imul in fisttp (bad) adc mov xchg mov (bad) imul lods push mov add pushq out jg push and or rex.WRX jne (bad) mov jbe mov add (bad) jmpq jbe lret xchg repnz mov add (bad) lahf (bad) jmp push out jae clc (bad) (bad) (bad) movsl fucomi mov rex.WRXB and mov or adc test mov (bad) rcll retq jo out je cmpl and movabs lock (bad) sub sbbl (bad) add mulb insb clc std hlt mov mov fsubr rex.XB cmc imul hlt (bad) sbb adcb imul rex.WRX xchg ds sbb loop enterq push incl (bad) cmc (bad) (bad) mov xchg enterq icebp fistp (bad) jne (bad) in xchg (bad) callq mov (bad) rex.RXB (bad) cwtl out (bad) or mov enterq xor jne stos push (bad) loope (bad) movsl (bad) (bad) sbb cli test and pop or jl xchg (bad) sub data16 push ds in sbb and movsb mov (bad) int rex.WB or enterq rex.WR hlt (bad) (bad) pop xchg jns and (bad) imul cwtl divb pop or pushq enterq jmpq jne,pt and stos shlb xchg adc lret movabs int3 xor sbb cld and rex.XB out xchg xor fisub sub (bad) outsb jae add sbb (bad) out pop out loop rex.WRB repz test loopne mov adc (bad) or and mov lock cs xor xor fwait outsb es ficoml add sbb mov xchg or mov fsubs lock jg fstpt cltd (bad) xchg (bad) sbb and jmp (bad) test imul xchg adc (bad) add (bad) or fdivr scas out pop (bad) jl in sub mov pop (bad) rex.WXB or xor shrb jb movabs popfq pushq add cmp lcall hlt cmc xor imul add jno push (bad) and xchg rex.WRB in loopne fcoms fsubrl enterq rex.WR hlt js test jmp callq hlt or scas xchg ss (bad) cs xor rex.X jns (bad) or jrcxz mov ss mov (bad) cltd xchg (bad) movslq or adc xlat (bad) xlat adc rex.RXB xlat mov fs clc xor (bad) xchg rex.WR out or xchg (bad) adc mov (bad) and fnstcw movsl test add pop test xchg mov xchg mov cmp and mov (bad) jmp (bad) insb int3 rex.RB cs rex.W cs ds push test rex.WRXB insl cmp rex.X fstl (bad) repz lahf pop (bad) test in xchg mov (bad) xor push adc mov (bad) notl (bad) and (bad) mov retq or sub int3 cmp insl addl mov sbb movsb mov out mov sub hlt and in rex.WR mov je cmp lock (bad) repz test or sub cmp add add pop (bad) or imul mov hlt nop int3 outsb (bad) in (bad) test mov mov cmp retq adc (bad) jg repnz push xchg pop out hlt cld enterq (bad) xchg adc enterq add movsb or (bad) xor nop xchg pushq je adc fxch out (bad) mov rex.R stc imul cli loopne (bad) (bad) popfq push nop movabs or mov callq cmp insl rex.XB movabs adc rex.WB icebp movl mov callq jne xchg sbb (bad) mov sub sbb (bad) cmp xchg or (bad) insl xchg fcom mov mov adc (bad) mulb push pop mov add jge jo hlt enterq fwait jl in add fsubrs icebp (bad) lods out or cmc sbb jo lock jge nop lret hlt stos rcl divb (bad) insl xor mov (bad) (bad) loopne inc out or mov notb or je xlat mov xor fucom pop gs cld (bad) movslq and xchg repz (bad) cmpsl mov add mov sbb sbb sti mov mov lods fadd out movabs xlat sti movslq es adc movabs fsubr pushq (bad) xlat je shr (bad) sti (bad) iret sbb mov cmp xor or test jns (bad) fsub sub (bad) push jae adc xchg sti adc fadds rex.B jno sub xor hlt jmp nop fldl2e stc xchg jae (bad) pushq or out je outsb je adc and xor rex.WRX and cwtl repz sub rol ss (bad) mov (bad) shrb (bad) or mov notl in ds jne (bad) xchg mov fdivr pushq in enterq (bad) shl (bad) (bad) (bad) gs or add jge (bad) xchg (bad) in pop jle mov or clc xlat in retq push jl (bad) (bad) movsl push es lret (bad) rex.WRXB lock (bad) (bad) (bad) push mov rex.WRX or repnz (bad) lock adc lret and rex.WR rex.RXB add jbe add sub jge cmpsb add mov rex.W icebp insb xchg cwtl jo sub push push movabs int add hlt rex.WR stos subl adc in lods (bad) gs add mov sub sub rex.R xchg fnstenv int3 and scas rex.RXB rex.W mov rex.XB fs push (bad) (bad) jmpq jmp movsl pop (bad) in data16 leaveq jp lret pop movslq movabs (bad) jne jo stos (bad) std mulb cmpsb jae mov repz or or sbb int mov (bad) mov add pushq push out mov out lods fild (bad) lret (bad) xchg in movsb cmp or push sbb out mov cmpl mov rex.R xor cld rex.W rex.WXB int3 imul hlt (bad) add rex.RXB push (bad) repnz loop vmovaps (bad) rex.XB lock mov mov jmpq xor add adc mov fs fild or (bad) push sub mov (bad) sbb add retq cmp push cmp (bad) push sbb (bad) repnz mov or nop mov or nop cmc jmp (bad) iret jne sbb js and enterq ds lock (bad) and cmp adc push movsb rex.R mov int3 icebp jrcxz mov mov push (bad) push je imul in movslq movabs iret (bad) out (bad) sbb jbe pop lock ss cs retq add push (bad) (bad) jrcxz (bad) mov hlt out or (bad) outsb or mov leaveq (bad) xchg xlat jnp push sar cmp test repnz out nop repnz rex.XB rex.RX sbb hlt cld sbb mov in decb xor xor mov enterq jrcxz hlt sbb cwtl (bad) sbb (bad) or icebp jae add retq out mov xor push add or jne xorl movabs or cwtl sub sbb outsb and jmp (bad) pushq (bad) outsb int test retq xchg (bad) mov rex.RXB (bad) mov pushq cli jmpq (bad) sbb jmp push cmp insb jge lock imul (bad) sbb retq movabs loopne adc (bad) mov push mov jne fwait pop (bad) (bad) enterq (bad) rex.WRB sub test pushq lods shll xchg jne mov test mov stc hlt and (bad) imul xchg (bad) xor movsb clc hlt xor adc retq (bad) (bad) repnz imul and cmp (bad) (bad) loope out sub fwait cld sub sub xchg movabs adc (bad) or push in jo pop (bad) mov rex.WXB mov adc xor lret push hlt hlt test test mov loopne retq lods jne add fsubrs xchg (bad) int nop imul lahf in lea stos in rex (bad) (bad) jne vshufps enterq (bad) (bad) (bad) mov (bad) (bad) sub lock pop mov test cmp sub hlt sbb and hlt nop jge mov jno test (bad) sub rex.WXB xor jb or sahf or retq shlb jl pop (bad) mov rex.WXB mov callq (bad) bnd xchg gs and jmp and loopne mov (bad) fwait sbb in xchg shlb mov loopne (bad) jne cmp adc stc nop jns hlt lock mov xor imul cmp add rex.RXB in pop (bad) jne icebp lahf movslq adc xlat cmpsl ds push movsb add xchg cmp xor adc xor lods (bad) test (bad) (bad) jne jl in xchg scas sbb adc (bad) or (bad) icebp adc subb mov (bad) jrcxz movsl (bad) (bad) (bad) out clc rex.WR or xorb iret jne (bad) out clc (bad) mov insb xchg callq je loop je sbbb je or jne movabs jge xchg fwait pop fdivs insl mov out mov repnz leavew rex.X lret jne mov nop out or (bad) fadds rex.XB sub (bad) cmp je hlt out push rex.RXB lea repz mov popfq mov and rcl xchg pushq nop test pushfq (bad) add idivl and mov imul je xchg orb (bad) mov add adc sti fbld (bad) lock movabs int sbb movabs cmpsl push sti adc rex.R (bad) test rex test test cld pushq mov push (bad) (bad) mov mov pushfq mov or rex.RB cmp cmp xor mov jne (bad) ror (bad) rex.WRXB xchg rex.RB or scas (bad) fistpl jp mov repnz and (bad) rex.W cmpsl (bad) adc and ss cltd (bad) loopne (bad) adc (bad) rex.RB cmpsl clc sti (bad) loope xchg clc xchg popfq test (bad) xor mov or rcrb (bad) or mov jb cld pop jns xchg mov xchg add (bad) sub add cwtl xchg nop add not mov sti (bad) ror mov mov (bad) adc fwait or jmpq (bad) pushq and cmpsl out fbstp sbb (bad) mov callq or sarb test jnp (bad) pushq (bad) cli xorb fidivrl lea rex.R enterq xor mov fwait cmc cli in ja mov (bad) xor div jg xor shlb hlt shrb or lret mov cmpsb fcomip rex.RX icebp sbb (bad) enterq or (bad) (bad) ja sti mov lahf outsl pop xor out shl (bad) xlat sbb jb xchg jne out test rex.RXB jrcxz rex.XB or addr32 xchg add movsb cmp mov sbbl rex.RXB xchg or jno xor (bad) sbb rex.WRB rex.XB pop jle repnz movabs (bad) outsb adc and test mov sahf lret xchg outsb or loop adc adc mov sbb cs xchg jmpq add adc out in idivb imull out stos mov jne rex.XB xlat sbbl fldl rex.W mov out fdivrs xchg (bad) (bad) jrcxz in test mov je push sub mov in mov sub loopne mov int3 xchg mov (bad) (bad) lock rex.WRX (bad) jl lahf outsb je fadd (bad) xchg (bad) cwtl insb mov rex.B sub add out push mov xchg movsl rex.RXB lock mov in jno cltd or (bad) repnz (bad) mov and test adc xchg sub rex.WXB rex.XB sub sbb adc std hlt incb add add xor (bad) stos xchg sbb add imul je in adc (bad) cmp jae jo rex.RX (bad) retq xchg jo rex.RXB es or cmp mov repz (bad) jmpq (bad) (bad) (bad) hlt sbb movabs jmpq out out outsb idivb lock cmp xchg (bad) iret insl add mov jp push mov int3 xchg rex.WXB and divb (bad) xchg (bad) or fs movhps jne xchg pushq loop cltd mov lret outsb jmpq xor out xchg cmc movabs jns stos (bad) hlt sbb jrcxz mov movsb negl lock rex.W pop movsl mov mul rex.RX rex.WRX loopne mov rex.WRB es rcl (bad) add lret fimul test js mov repz rex.WB rcrb add je adc (bad) in pop loop (bad) rolb (bad) enterw mov rex.XB or int3 scas stos or nop xchg (bad) add push popfq in sahf mov xchg sub vpsrad fwait xchg (bad) or clc (bad) (bad) (bad) ss divl (bad) fcoms (bad) scas in jmpq fs sbb scas mov add cld (bad) rex.WR xchg (bad) xor cmp cmpsb cmc out pop lea fsubrs test retq xchg hlt jns,pn movslq jge int jmp rcll js (bad) xor rex.WX pop adc (bad) or movabs not xchg fidiv insl int add rex.W sbb mov lahf lods cmp cltd mov pop lock rex.WRX callq push jne mov (bad) shll (bad) pminub mov (bad) in fnop jne scas rex.WRX bnd jg test xchg sub mov loop cmp sbb mov in cmc sbb mov (bad) jg mov sub push (bad) xchg rex.XB (bad) out jg jne pop sbb mov hlt jb (bad) mov ja push add sub rex.RB (bad) fucomi and movabs jbe (bad) mulb rex.RX mov add or pop fiaddl cli fwait lea insl jae out movabs popfq xor mov in xor or or jle jmpq jne sahf add mov lods js jg nop mov xchg shrb nop mov movabs jl es (bad) (bad) (bad) imul adcb hlt (bad) pop add or mov cwtl adc lods sub rex.RX jno lock and (bad) rex.WRB popfq loopne test push pushfq xor mov jne mov mov adc imul push (bad) (bad) rex.R jrcxz pop repnz (bad) (bad) negl mov (bad) insl rolb jne mov (bad) sbb int lock mov sarb (bad) sahf (bad) (bad) rex.WRX add rolb fnop xchg xor cmp test xchg mov pop xchg (bad) addr32 fs lock and push add std and (bad) xor mov jno test je push cmpsb out stc gs jmp (bad) mov insl (bad) mov sub sub adc push ljmp in repz pop jge jmpq (bad) lock sub out (bad) add sbb (bad) lcall cs mov insb hlt sti rex.R mov popfq hlt cmc cmpsb pop je popq test clc stc fcmovbe (bad) rorl add mov or (bad) loope add (bad) push add (bad) flds stc hlt fsin mov cwtl test sbb xchg lods rcl movabs cmp clc hlt adc (bad) jne xor callq popfq pop iret jne (bad) push clc mov iret xchg (bad) (bad) test jge mov lea cmp pushfq xor rex.RX mov (bad) jb and xchg rex.WRXB std rorb fidiv pop lahf cmpb (bad) (bad) jno mov add movabs mov cmp rolb rex.WR pushfq callq sbb enterq pop (bad) sbb fdiv in cmp adc pop div xchg rex.WRB or (bad) (bad) (bad) (bad) (bad) rex.RX or fdivrp callq add rcrb xchg (bad) and pushfq movsb mov cld cmpsb sbb cli adc jge mov adc or jp nop sbb (bad) rex.RXB bnd fadds fs test (bad) (bad) or imulb cmc int fnsave jne scas lret fist cmp rex.WX rex.X jg insl mov sbb cmc (bad) outsb mov cmp mov movabs cli retq sbb cs xchg repnz xchg mov lret in (bad) imul movabs (bad) leaveq (bad) rex.WRB repnz cld xor (bad) imul or cltd adc push jmp (bad) xchg add xor jmpq xor xchg loopne iret fstpl xlat mov push (bad) rex.RXB pop push (bad) and pop cmc or cmp fsub int3 add frstor sub repz mov icebp int lahf lods sbbl sbb icebp rex jns (bad) repnz stos int3 add mov xor jmpq add ss (bad) cs popfq insl nop pop (bad) out pushq lock repz add retq sarb (bad) mov stc xor hlt pop rex outsb lahf (bad) cmc (bad) shlb stos sub jne (bad) (bad) movabs xlat fwait int ja,pt push and lods (bad) ss sub jne rex.X (bad) sub adc movsl scas fsub or and (bad) out cs mov (bad) fimul add out xchg mov and int hlt idiv fcmovb js icebp adc (bad) mov jo stos adc ss sub mov rex.XB cld mov (bad) movabs sbb mov enterq repz adc pop movslq lods loop jae mov (bad) cmp adc mulb adc (bad) fistp lcall (bad) jne repz rex.WRB or orb cld cmp shlb (bad) or hlt (bad) jne (bad) mov cwtl callq addr32 int3 adc repz adcl add insl sbbl fstps jae sahf (bad) pop push (bad) jne xchg or popfq ljmp xlat fimull notl repnz mov mov add rex.X lods or (bad) rolb gs sbb xor (bad) (bad) (bad) andb mov movabs sub (bad) pop xchg mov mulb cs ja or xor movsl movsl (bad) cmp (bad) (bad) lea and mov scas lods or pop stos nop mov rcrb add in (bad) adc enterq sbb rex.WB movslq lea (bad) fiadd fsub jns mov add xor fistpl movabs out lret add stos mov adc mov fcoms adc or mov xchg jmpq (bad) xchg jne jo sbb cmp notl rcrl imul movsb cmpl jmp cli retq je (bad) in mov imull mov mov mov (bad) (bad) rex.XB push xor or out xchg int3 sahf rex.RX xchg push iret mov sbb rorl jne jge hlt loop push adc stos ss rex.R test rex.RXB rex.RXB rex.WRX cltd xchg pushq int3 mov fdivp (bad) sbb or add jnp xchg rcl sbb sbb and hlt rex.RXB jg mov (bad) int3 jl and (bad) xor popfq xchg cs out fwait jle xor and push insb and std and je in lret rex.WX xchg (bad) out ficompl out jae pushq sub (bad) and mov jne lea sbb retq in fist fcmovu cmp add adc rex.WXB and rex.RXB and lret out add and jb add xor jrcxz fistl sub xchg rex push xor addb and repz jle adcb xlat add mov mov rex.WRX and or add pushq sti mov xchg push xchg out (bad) rex.RXB insl cmp test std mov (bad) (bad) scas (bad) jp rolw out (bad) int3 cld sub mov lods push rex.WRXB retq rex.W (bad) stc or jno je sbb cmpsl and xor fs lahf xchg add or movsl xchg and mov (bad) add test xchg jne lret clc mov movsb imul mov (bad) sbb add adc rex.RXB adc cmp or xchg add cmp jmp enterq add in xchg (bad) (bad) or add insl jl (bad) (bad) jrcxz rex or movabs je jae fucom insb out sub std cmc jne lret cmp or add mov mov cmpsb or (bad) fdivs mov (bad) xchg (bad) loopne scas out jmp popfq cmpsb pop out sub imul mov cmpsb push (bad) int add out adc (bad) add js (bad) sarl lea jne cmp (bad) setbe stos stos repnz (bad) mov sub xor hlt pop (bad) cld repz sti rex.XB (bad) sarb push ss (bad) and adc adc fimul sbb lods or sbbb sarl cmpsb (bad) sub enterq (bad) xchg xchg sub int3 rex.XB addb adc sbb xchg jns rex.WRB sbb (bad) pop icebp mov push (bad) jno adc repnz xor adc push movsb cmp mov cs mov xor adc push sbb in out out jne mov adc (bad) in sbb shrb pop jge mov push addr32 jno and pushq out jmp (bad) push mov test (bad) xchg movabs sbb pop out data16 jno mov rex.RB jg jrcxz sbb sahf out out cmp or mov hlt pushq mov movsb in js sub cmp sarl add sub int3 pop (bad) adc mov jge addr32 test leaveq mov js fcmove (bad) sub lret and jnp add (bad) mov cmpsl imul xlat loopne pinsrw test in pop push pop sub std or sbb push mov add xchg sub xor pushfw fdecstp sahf movsb add sub (bad) rex.RXB or (bad) sub lahf lock movabs icebp ja mov and out (bad) rex.XB jo xlat xchg jb nop rex.RXB in int pop leaveq test push jne xor rex.RX pop rorb (bad) scas (bad) adc mov jle movabs add test cmp cmc add xor cmp jg fsubs rex rex.WX rex.WR rex.WRB jno bswap cmp hlt mov pushfq jae cmp jne fwait test cli and adc mov iret fwait shrl repz (bad) push mov jne and repnz in nop xorl cwtl xchg or hlt jle (bad) callq retq push stos adcb lret (bad) cmp shrl fs (bad) push xor or (bad) shl hlt callq int and sbb rex.RB xor sbbb pop (bad) ja cmp or cmp rex.XB or cmpsl rex.RXB repz (bad) mov (bad) mov rex.RB scas jbe (bad) movb sbb (bad) sbb repz mov jnp jo mov sarb push jmpq and shrl add xor or (bad) out jmpq rex.X mov scas mov xchg mov retq mov cmovg out movsb cmp fadds in loopne rolb negb lret jle int3 jne cmp ffree mov adc add sbb (bad) rex.RX or iret (bad) sub psrad adc add or xchg mov add (bad) fcoml xchg (bad) in adc in mov rex.RX (bad) jae (bad) or or std and loope ja push out icebp and mov lods out pop and add clc xlat adc jrcxz (bad) cli or or imull repz int3 stc pop mov or rex callq or (bad) fisttp repz (bad) inc js addr32 cmc gs rex.WXB cld xchg rex.W jne rex rex.R or cmp (bad) cmc movabs jno rex.WXB pop outsb (bad) and xchg or mov mov mov mov mov (bad) jo xchg sub sti loop sbb fsqrt xor sbb scas and movslq mov es xchg adc and jne insb cmpsb callq add subl or int3 mov mov xlat mov mov adc xchg xchg (bad) and jb xor cmp push popfq xchg sbb rcrb (bad) (bad) rol rex.WB rex.WX test mov in nop fcoml xchg hlt callq pop mov sub mov orb or movabs lahf (bad) and int (bad) rex.RB mov movabs add (bad) cmpsb mov add fsubs push lahf fwait xor imul adc in adc mov add pop rex.RB push mov (bad) in (bad) scas sbb sub loop adc or xorl cmp lret lock xor (bad) push xchg test push cmp (bad) sub je lea (bad) sbb xlat jne cmp fldenv (bad) cmp (bad) sbb fadds insb (bad) lahf outsb (bad) pop or repz cmp rex.WRXB xchg (bad) (bad) sbbl push (bad) (bad) hlt mov fidivl cmp cmp pushq adc stc clc add sub xor clc sub add cltd roll in ror xchg (bad) iret jne or in cmpsb loope xor (bad) (bad) xlat fldl (bad) in push stc int3 mov lock (bad) enterq and xor rex.RXB push in sub fiaddl ja scas sub and lret xchg std fwait jno nop lock jnp xor cmp cmp jmp and sti in mov jo and cmpsl repnz stc or adc rex.RXB rex.B out mov pop (bad) bnd fcmovnbe sahf (bad) (bad) mov and ds iret (bad) (bad) xor ss callq callq xchg imul lods fldenv mov jno adc jmp adc rex.RXB push idiv add loop fcmovnbe idivb rex.WRX adc rex.W test (bad) imul rex.XB rex.WX adc rex.WRB mov xlat scas rep or jne pop sbb xchg xlat xor (bad) loop sub xlat js fwait std or out imul xor stc mov fbld rex.WRX xchg flds in (bad) hlt rex.WXB rex.X rex.WX fs rex.WRX test xchg xor insl and lods callq scas movsl mov rex.WXB and sbb outsb cmpl movsl jmp data16 push (bad) movabs rep int3 jp ljmp enterq out (bad) mov fbld repnz lahf adc add xchg xchg es shlb mov int mov (bad) out mov or notb cld int3 movslq add ss (bad) (bad) mov mov cld cld stc add retq xor testb and adc jne (bad) and xchg adc insb mov std fsubr (bad) out cltd (bad) icebp imul hlt adc push lods loopne sarl push (bad) (bad) movabs rex.RXB pop movabs movsb (bad) (bad) rex.RXB (bad) rex.X mov (bad) jmp callq addr32 jo enterq testb repz rcr imul fcompl (bad) loop adc cmp xlat add loope fnstcw fnstsw jmp lea jl test movabs lock iret (bad) test pop adc test push (bad) jmpq add scas lods (bad) xchg popfq mov loope mov sbb movabs jne mov adc push pushq fcompl mov and rex.RXB or (bad) add (bad) cltd xor jg sub enterq incl in repz retq (bad) lock fistpll pop stos add (bad) addr32 in cmp cwtl pop add addr32 pushfq sub push or imul lea mov add movabs icebp repnz icebp push and mul rex.WRX sti callq movlps pop loop (bad) mov adc rol xchg imul push xchg (bad) add (bad) lock mov (bad) xor in xchg jno sub std pop iret shrb (bad) xchg rolb (bad) mov pop (bad) shll (bad) shll mov loope lock rex.R fildl negb add mov add xor rex.RXB in or or lea (bad) callq (bad) (bad) sbb loopne mov int3 sub mov add callq rex.WRB fist jo mov imul sbb popq mov (bad) cmc (bad) ja pop (bad) xchg iret mov leaveq push vpsllq mov shrl push sub pop rex.RB mov rex.WB hlt iret (bad) mov mov adc push add jmpq xchg movsb mov es test (bad) jb mov add fstl stc test (bad) popfq mov sbb scas jo (bad) jo rex enterq mov rex.XB rex.WB jne mov xchg push add mov jo jmpq mov jnp loope pushq jne sbb imul or fdivs pop movslq add fstps jns cld cmp (bad) imul lret lret fwait adc out repnz and out xor sub fistp push insb in stos js jge js retq xlat loope in sub push out mov divb cli movabs cmp adc xchg xchg out pop rex.WX punpckhbw sub int3 scas add (bad) xlat mov leaveq add rex.X fldcw jmpq (bad) mov add fldl jge xchg loop xor mov (bad) xor lret movabs or sysenter (bad) rex.B lods rex.RXB (bad) cmpsl cmpsb sbb (bad) movabs or lret or rex.XB rex.RX (bad) fcoml ja hlt xor idivl add lock (bad) push fcomi out adc xor (bad) (bad) std push mov xor xchg push test pop sbb nop adc jae je mov test xchg imul xor mov rcrl outsl (bad) (bad) scas sbb stc sbb or xor in iret movabs lahf (bad) xor (bad) cld out stos xor cs (bad) push rex.XB mov adc add rex.WRB lock clc es jne mov and push movsb lea js repz xchg jb cmc pop iret callq (bad) jno pop jmp sub (bad) jne rex.WB rex.RX (bad) mov out rex.WB jge or push (bad) rex.WRX mov (bad) (bad) (bad) mov ud1 push mov fld cmp fwait pop mov rex test or jmpq repnz jne jno mov (bad) cmc cmp adc xchg adc and test xchg pop and stos jae jrcxz pop rorl xchg cmp jg data16 xor sbb jrcxz mov add xchg cmp rcrb push movslq (bad) rex.RXB shl test pushq rex.WXB out icebp imul (bad) cmp insl rol jne sub rex.WB leaveq or or xchg hlt movl movabs testb rex.WR imul jp jmp jno repz (bad) (bad) or add (bad) loop xchg sahf mov pop push mov in test mov add negb lret or jle rex.R cmp (bad) movabs sbb mov add xor adc or (bad) pop lret cs mov popfq movabs (bad) sub (bad) mov idivl (bad) shr insl gs enterq mov xchg or xchg xor loop (bad) je jge cvttps2pi rex.B pop lret (bad) sbbb xchg (bad) mov mov xchg sbb in js insb and in rex.WB not in loop rex.WRB lret scas cmp popfq outsl (bad) (bad) outsb test out xchg (bad) rex.WB or xor nop mov xchg adc icebp and out mov out (bad) (bad) xchg rex.W js xchg rex.WRX xor ror (bad) add retq or fs pcmpeqw jno mov (bad) rex.WXB movsb push js cmova loopne rex.XB (bad) (bad) bsf lock mov rex.XB stc rex.RX leaveq push imul add (bad) clc movaps mov jae xchg cli mov (bad) lea mov push sub movslq adc jmp (bad) mov jmpq (bad) mov sbb jo xchg rex.WB sbb rex.RX subl out (bad) retq jne movsb mov js mov jo testb cmp xchg mov jno sbb push lea or lret pushfq test rcll jo jl nop int3 or imul (bad) sbb xor or push orb sbb or retq pop mov (bad) push (bad) mov rex.WRXB xor in (bad) mov pushq mov (bad) sub enterq movslq sub mov (bad) push rex.WRB or ds or pop cmp rex.WB jae iret (bad) jg jbe (bad) add cltd jne mov mov jns adc rex.WB sti (bad) repnz and js or cmpsb lods sbb out push jle pushq jp insl rex.WRXB fs rex.WB jno mov repz leaveq add (bad) jae and add sub je popfq movl cmpsl rcrb int (bad) push mov mov retq rex.XB int (bad) cwtl rex.R add movsb sbb negb ja jnp je cmpsl sub (bad) sub (bad) je (bad) sbb push pushq loop sbb add adc mov mov push push mov insl rol adc jnp and or mov (bad) bnd fstp mov clc jo (bad) (bad) rex.RB push push pop jrcxz scas (bad) scas enterq mov ja iret mov (bad) and push or adc (bad) or and xorb loope lock mov out sub adcl xorb icebp jae out lret scas callq (bad) imul sti insb in cmc rex.XB repz jp jl andb cmp adc jp icebp stos rex.X repz add cmp jae movabs (bad) (bad) push rex.RXB (bad) loopne jne jo jo mov imul cmc imul xor movabs push (bad) test mov (bad) cwtl jmp jne mov js test mov or movabs and adc hlt lret movabs sub push scas in retq loop cmpsl retq movabs push hlt rex.X repnz xor xor movabs or (bad) adc hlt mov jns (bad) or (bad) bnd mov adc clc jne (bad) enterq sbb sub pop add (bad) mov roll jb xor stos pushq out rex.WRB push scas enterq (bad) cmovae pop rex.RXB loopne jnp (bad) (bad) (bad) rclb (bad) mov jne pushq test rex.RB movsb rcrl outsb jle adc test jae rex.RX (bad) pop mov adc sbb in movabs loope cmpsl rex.WR repz (bad) pop (bad) repnz test (bad) imul jnp test (bad) rol pop mov rorl outsb xchg xlat mov int3 add retq test pop adc and xor movabs je rex.WRXB xchg add sbb mov xor jle enterq rex.WXB mov jns jno add (bad) xbeginq out add in jbe sub addr32 sub rcrl mov ja rex.RX (bad) (bad) cmc mov fcomps jrcxz sbb add and pop roll out addr32 xor cltd xchg add (bad) xchg (bad) loope add movslq hlt mov (bad) jae push rex.RX in mov xchg push (bad) mov pop adc out rex.RXB add or and hlt enterq add jrcxz pop ss (bad) jne sbb loopne cmpsb in push mov leaveq (bad) lods lahf sub rex.RXB xchg mov add ss cmp mov adc cmc outsb repnz lock adc faddl sbb or adc cmp subb or rex.RXB shrl pavgw in sub ja (bad) xor sqrtps or mov sahf cmp rex.R mov sub pop nop push jne (bad) push (bad) cmp test fadd movsl fcmove sahf test sub loope push mov (bad) (bad) add xchg rex.B cld sub fimul jb loopne movsb sbb sbb add push fsubrl repz (bad) movsb popfq jrcxz pop repz lods out cmp jae retq callq sbb push and cmp adc (bad) jp movsl (bad) jno (bad) addr32 pushfq cmc movabs (bad) xor sbb rex.XB (bad) pop repnz xor mov jmp rex.WX out test xlat jne (bad) and (bad) imul in jg in and xor mov adc rex.RXB (bad) movabs scas cmc mov lock rex.WRXB push adc or push xchg outsl sub mov jne fsts movabs ds (bad) mov adc movslq jne pmulhuw repz (bad) leaveq test in sbb pushfq mov pushq and add or xchg (bad) (bad) sbb enterq imul mov rorl xor xor lock (bad) cld test sub (bad) sub jg mov or (bad) pop int insl xchg pushq fcoms lret mov std or or outsb (bad) (bad) (bad) xor rol out xchg pushq cmp jne add (bad) cmp popfq (bad) jne scas add pop mov nop pop scas js mov rclb cmc (bad) jp divb callq (bad) rex.WXB add cmc in stos out vcmpngeps testl out movabs rorb mov fsubl idivl (bad) fistl test pop mov (bad) sub outsl punpcklbw retq outsl cmpsl add pop jno jg (bad) xchg mov sbb adc xor rex.XB lock xlat jne movabs retq outsl hlt cmp fdivrl (bad) pop sub retq xor add (bad) cmc retq sub lahf adc add (bad) jl pushfq or (bad) (bad) (bad) imul adc jmpq imul (bad) shl adc push sbb lcall (bad) mov mov (bad) push xchg (bad) mov xchg add mov mov jl retq adc rex.RXB rex.XB out jle cltd out sbb (bad) or jne cmp testb mov mov out lods ja callq and mov movlps xchg mov pushq sbb sub jrcxz retq test xchg (bad) mov fmull rex.WRX jo xor (bad) int insl rex.B and test jge movsb sti (bad) hlt (bad) test and xor shl or cld cmp outsb cmc cli and test rex.RXB scas mov sarb jae pop adc xor (bad) (bad) sti decl and jmpq imul lahf xchg es mov test (bad) add mov negb insb mov xor lahf (bad) rex.WRXB (bad) jmpq jp sbb sub rex.WXB xchg cmp lods (bad) movabs pop loope xor xchg cmp add adc fcom jne icebp lods add ficompl pop int3 xor rex.WRX rex.XB jmpq stc or (bad) imul jp mov cmpsb adc and mov movabs imull out rex.RX and and lods lahf push repz (bad) mov rex.XB sti (bad) cs jge (bad) fild fdivp add rex.WB movabs xchg andl and jg imul rex.WXB ss (bad) (bad) cmc cmp pop jle scas jmp int mov (bad) ja sbb insl sub xchg xchg cwtl int gs add sub rcrl cltd test jae adc retq neg icebp xor jno (bad) sub fildll je ss jrcxz sbb add (bad) jmpq movabs (bad) hlt rex.W (bad) mov rolb jge or lea gs fbld rorl out mulb rex.W mov (bad) jae xchg and rex.XB xchg es lock xchg test movabs cmp sbb testl cmp iret mov jo or (bad) or and test mov imul rex.WX (bad) in lods movabs mov (bad) rex cmc push imul sbb (bad) adc std clc cmpsl (bad) mov mov loopne (bad) jne and or (bad) lock or mov rclb (bad) fsubr xor adc imul mov ja sti fcomip sbb jmpq stc pop retq cld sbb rex.RXB repz std rex.W test xlat cmp loopne (bad) mov jae jne sbb jno add repnz cltd add repnz xchg (bad) adc lahf mov rex.WXB rex.WXB rex.RXB (bad) mov lret loope adc in push rex.WXB (bad) sub (bad) (bad) add rorl push in jne es out sub sahf add and lock cmp (bad) fmul adc rex.WB add movabs test xor adc jne push lock fwait test (bad) jmpq mov (bad) sub mov add gs xor jb hlt push mov shrl push (bad) es rex.WR je out mov mov out xchg fisttpll xchg sbb sbb cltd rex.RXB adc sbb lods sbb clc lret jne lods hlt hlt (bad) callq retq push xchg rex.RB jno,pn mov (bad) mov mov (bad) or jg jle test jp cmpsb (bad) enterq and mov push fsubrs movabs cli iret mov adc int3 jbe add mov (bad) mov xchg ljmp in xor (bad) loop (bad) es adc (bad) mov rex and push add hlt jrcxz sti add repz pop loopne out (bad) add adc jo rex.R (bad) in jl imulb or rex.WX clc or add rol push (bad) rorb cmp or xchg cmp jns xor lock popfq sub movabs jb mov (bad) (bad) jnp jne fimul in (bad) imulb cmc je xor hlt jg loop nop paddq nop fiaddl (bad) and (bad) adc rex.X hlt rex.RX (bad) adc fadd add repnz movabs (bad) repnz imul movslq hlt shrb jno (bad) adc hlt (bad) fwait ss clc (bad) (bad) jno (bad) js sbb notb movsl cltd sbb mov add jmp xchg (bad) std adc movsl sbb (bad) xor (bad) leaveq fstpt (bad) pop (bad) mov adc test cld lret in (bad) je pop iret xor cld iret jne xchg and jle fs movsb divl (bad) adc adc rex.W cmp jl out jg repz rolb and (bad) hlt pop add rex.WRXB xor add mov (bad) movabs stos add (bad) (bad) mov jl mov pop enterq xchg lret sub icebp mov jae and (bad) sbb (bad) nop xchg (bad) (bad) or addr32 pop (bad) (bad) mov jmpq mov mov rex.X mov divl mov (bad) insl mov fwait (bad) stc sbb mov rex.RB sbb retq mov mov loop ds sub loopne jmp pop rex.RXB imul jne mov lahf hlt jbe lret mov xor mov enterq loopne (bad) jmp cmp or (bad) adc cmpl in imul cmpsl sub jrcxz fidivl rex.WRX scas jbe and gs (bad) imul in xchg (bad) mov cli movabs jne jg mov ja flds imul retq sbb (bad) (bad) pop mov pop sarl jrcxz (bad) stos or or lret or lock sbb mov (bad) rclb mov (bad) hlt imul sti (bad) js movabs fcomi sbb in pop (bad) out iret cmp int3 repz loopne stos (bad) loopne mov (bad) mov fstpt pop pop (bad) (bad) rex.WX add rex.XB jne and (bad) mov mov xor mov (bad) or loope sti cmc idiv (bad) rolb adc jg fisttp rcr movslq jno nop xor jmp scas sub add jmpq pushfq rex.B xor mov rex.WRB and rex.W cli imul xchg ja push and js (bad) sbb lea and scas hlt xchg fwait stc (bad) cwtl (bad) sbb inc shr mov stos jo jp in and xchg jo mov clc data16 imul (bad) lret jne (bad) rex.WRB stc (bad) mov xlat (bad) adc mov pop mov test rex.B and js popfq loop or out lahf add movabs add sbb lahf push (bad) (bad) (bad) retq jg movabs rex.WR xor xchg mov jmp (bad) push imul sbb outsb mov sbb in xchg push (bad) push mov push andb jbe adc fadd (bad) and lock (bad) pushq add mov out rex.XB adc sbb jle sub (bad) jbe add std cmp out jl jne iret rex.XB imull rex.WRXB movslq incl jmp mov (bad) (bad) sub mov ds (bad) (bad) ss punpckhwd rex.XB js in rex.WB int add pop (bad) sub sbb cwtl jrcxz test and (bad) fmuls sbb movsb adc imul movsb adc lea rol std or rex.XB movabs push (bad) out lods hlt repz cmp fwait ss (bad) or jo push xchg and rex.B and clc jnp sub and (bad) rex.WXB cld (bad) add mov adc rex.B clc add or sub movsb outsl (bad) jmp mov (bad) jg popfq scas rex.WRXB fwait (bad) jne rex.WR lods pushq jbe hlt fadds hlt mov test sub mov lock retq add adc sbb pop sub test push pop sub xchg jno (bad) data16 in or rex.WRX rex.WB mov fmul vpmaddwd xlat rex.WR cs jb push adc jl jo rcrl mov movsb add jl mov mov (bad) push rex.X lock shll mov or (bad) mov jge xchg pop or (bad) rex.XB fcomi jne (bad) jle (bad) lods xor and pop (bad) adc sbb sub nop leaveq lret (bad) xchg push fcom in adc notb (bad) scas lods in add cmc or pop xorb (bad) (bad) in jp (bad) pushfq (bad) cmpsl jbe (bad) int3 out fisttpll hlt jge rex.R loop lahf (bad) mov pushq sbb xorb (bad) rex.RXB fldenv adc in and mov fs es pop push mov (bad) addr32 fmuls icebp push cmp fldt rolb notb nop cs movabs xor add ja lahf movabs pop (bad) (bad) scas or xchg (bad) xor adc lret jne (bad) (bad) insl imul sbb cmp in fild (bad) ss pop jne,pn mov add imul mov rex.XB sbb (bad) add (bad) iret jo mov out xor adc cwtl and rcl testl imul (bad) sbb rex.RXB rex.WXB mov mov push rex.WRXB or gs and repnz adc rex.WXB std fistl push push fdiv callq mov imul fldcw jge scas mov adc xchg fwait sbb xor lock (bad) xor in retq push and cmpsb callq scas (bad) enterq sbb sub fbld mov (bad) adc push xlat add je,pn or adc js and xchg pshufw retq fcoms mov mov and cmp pushfq (bad) shl sub cmp in pushq (bad) (bad) (bad) fsubrs fmull stc jmpq gs sub xor out adc jb mov pushq int3 mov xchg sbb test mov cwtl cmp pushq mov (bad) mov jne sbb push mov je andl test in adc mov pushq fwait cld or ljmp push stos movsb enterq push enterq lock pop popfq (bad) xchg rolb int3 movabs callq and and rex.R fistpl (bad) scas fistp (bad) adc xor (bad) cmp stc add lret adc and test push add mov rex.RXB (bad) xor jl jle subl out sahf adc mov mov pop je mov push rex.XB xor std cmp (bad) add add mov adc (bad) mov jbe int3 (bad) rex.RXB cli ss jne jmp sub and rex.RB rex.B addr32 ficomp jae js rex.XB je cmpsb movsl jns (bad) (bad) adc movabs adc rex.XB adc (bad) xchg or rex.RXB or mov mov xchg nop xor adc (bad) mov iret mov imul ds in test repnz out retq cmc pop mov mov fiaddl lock mov xor (bad) pushfq mov je cld sbb jnp movabs enterq xor cwtl add xchg xor adc jrcxz adc add mov or adc adc jns xor jno,pn adc add or add mov rex.WXB jo callq loopne test in mov lods clc push mov rex.W sub leaveq pop nop xchg xchg out mov (bad) mov subl (bad) xchg mov rex.RX adc (bad) (bad) or xlat cltd test sbb (bad) fstpl (bad) jne pop jne rex.RX rex.B pushfq xor sahf callq (bad) mov shrb or mov (bad) or add cmp js leaveq push es outsb clc add fistl rex repz mov jne pop (bad) lock jnp (bad) add sbb jne adc (bad) (bad) cmc pushfq imul int3 rol movsl jg in pushfq repnz rex.WRB push clc xchg imul jmpq loopne mull add mov add pushfq and fnstenv cmp rex.X scas xchg mov fistl rex.RX sub fs callq testb xchg (bad) pmaxsw xchg rex.RXB neg cmp add icebp (bad) test jl mov out sti xchg adc imulb add jno (bad) hlt rex.RX pop (bad) rex.XB mov movabs mov retq (bad) in push add (bad) xor leaveq sub jne leaveq test add rorb pushq (bad) rex.WRB roll adc push xchg jl push cld mov pop cmp and pop jo fcoml mov in nop movabs add xchg or jl mov icebp sub xor enterq lret (bad) xor adc (bad) add (bad) xchg loop outsl (bad) scas movabs (bad) imull out rex.WRX lock cmp add movabs es std rex or jno lret mov retq in (bad) fs in movabs popq repz movb out divl test mov xchg adc add sbb adc xchg xorb scas cmp and int3 test (bad) repnz cmpl (bad) (bad) (bad) rex.XB outsb (bad) cmc retq lret lods (bad) mov (bad) stos iret test shrb rolb callq icebp pop sbb cmp xlat ds loope rex.WB gs rex.XB and add adc pop mov out xor rex.XB xchg pushq rex.WRXB repnz and imull cmp xorl sbb add rex.WRX enterq and or xor adc (bad) (bad) xchg clc hlt add mov xchg movb out rcll rol jle rex.W push sbb sub rex.WRX add data16 (bad) cmp rex.WRX out mov fnop in rex cmp or test test xlat cltd (bad) adc jrcxz test mov sti icebp (bad) mov jno and in (bad) xor in xchg lock xor sahf mov ja movabs jge mov rex.X push test rex.WXB movabs sbb jns (bad) callq adc add (bad) lock sbb (bad) jnp int rex.B sbb popfq mov rex.W sbb adc nop add rex.WX cmp and xor (bad) sub pushq jae rex.WRXB and (bad) jno repz jnp icebp cltd adc out fucomp xchg pop int lods cmp jrcxz roll repz insl js fistpll pop fisttpll push sar mov neg sbb or and out adc jne xor out cmp cmpsl or fistpll (bad) sbb xor sbb (bad) retq ds adc (bad) movabs rol (bad) js movabs jnp js add or nop adc callq (bad) rex.WRXB loopne cmp pop or (bad) imul or cmpsb (bad) cmp cmp push lock (bad) std sahf je add rex.RXB (bad) (bad) and imul sarl adc test (bad) pop sbb (bad) or adc mov cmpb cwtl sub mov nop rex.RXB in nop (bad) jle mov sub mov movabs jno callq sbb scas (bad) sbb rex.X test sbb fs insb push popfq movabs test movabs cltd mov iret mov xchg mov (bad) sub notb incl hlt pop add nop (bad) in xorb imul in loopne test addr32 movslq lods (bad) or jbe imull addl (bad) jrcxz mov movabs pop (bad) gs fsubrl test sbb ja xchg insb jge (bad) xchg rclb (bad) pop rex.RX insl xor (bad) sub adc sbb movabs es adc fs xchg fmulp out xchg rex.XB pushq rex xor cmp out xlat adcb (bad) sbb push rex.RXB push ss nop fdivs sbb lret notb cs or mov lahf mov (bad) loope roll int3 callq jle fcoml fmuls pushq adc adc repz sbb int3 rex.RX sub mov adc repz cmpsb ss (bad) movabs push sbb lea jmp js vdivpd add mov xlat and rex.WRX xchg or shrl rex.WRXB rex.W in popq fwait (bad) mov lahf jg mov xor hlt mov push (bad) add (bad) rex.WRB roll test data16 ficoml push enterq rex (bad) add pushfq mov rex.WR callq rex.W mov in xchg jp in imul rex out cmp mulb rex.WR shrb ffree cmp mov xlat loop sub mov repz push movabs sbb ja xchg xchg or (bad) movsq fs loop cli cmpsb xchg repz jg pushq (bad) sti rex.WRX sbb mov mov mov repz out add cli jbe mov notl rex.WRB push out mov test jnp mov cwtl mov sbb and movsb out xor mov callq (bad) sub sti jne xor imulb (bad) iret mov nop and xor or movsl rclb lea hlt test sbb adc mov (bad) movabs or je mov js push sbb (bad) nop je xor pop out xorb fwait pushfq sahf in (bad) jrcxz iret fisttp cwtl pop push ja or (bad) xlat movabs mov cmpsl out rex.W xor sarb xor push jmp (bad) (bad) bnd xchg xchg jne jrcxz (bad) test mov and nop mov rex.B nop (bad) rex.WR rex.WRX mov xchg (bad) xor or cmc mov mov pop sbb push cmp jbe popfq rclb test insb mov (bad) pushq rex.WRXB cwtl mov (bad) (bad) rex.WRX sbb push nop pop xchg or mov imul nop mov (bad) mov mov jne out enterq ds enterq xor (bad) sti cmp sub mov test mov (bad) out fs bnd fldt add callq jnp mov cwtl mov mov (bad) jp repnz int3 fldt mov mov rex.WRXB xor xlat xor push mov nop mov sbb and cmpsb out and push xor mov add (bad) rex.WRB push sbb mov test mov jo retq jrcxz push push sub cmp (bad) pop jl rex.WRXB (bad) mov (bad) rex.X movabs loope rex.WR add cs mov sub lahf and lret mov (bad) pop and icebp addl (bad) out mov lock je pop mov mov xchg movabs (bad) push fcmovbe je stc mov xor ja jnp xor lahf out push movsl (bad) lock or (bad) rex.RX jo in div rex.R (bad) mov hlt movsb out xchg mov (bad) jbe add insb in (bad) jmpq (bad) rclb (bad) (bad) (bad) cmc mov (bad) jmpq nop xchg rclb nop rolb (bad) xor adc (bad) push hlt hlt rex.RXB (bad) mov mov cmpsl (bad) xchg mov push je add or mov (bad) mov notb xlat mov push push hlt and rclb (bad) add (bad) not mov (bad) (bad) jmpq nop mov (bad) divb rex.RX jbe data16 push shlb (bad) nop (bad) rolb div add (bad) (bad) shlb xchg (bad) callq notb shlb push add (bad) xor or hlt in or push out mov rex.RB xchg fistl xchg shlb (bad) xor (bad) mov (bad) pushq sbb jmpq xlat rclb (bad) xchg (bad) divb push sub nop (bad) rolb (bad) not out (bad) (bad) callq mov rex.R add (bad) push rcl mov (bad) or lahf data16 sbb cmp xor (bad) xor movsl jmp cs movabs stc bnd jge scas out adc push rex.WRX (bad) int3 int mov sub rclb stc or or cli rex.RX clc ja mov cmp and mov add (bad) push lock loopne mov add or enterq ljmp push rcl mov sarb mul (bad) sub cmp movabs addr32 add cld xor rex.XB xchg mov cld rex.WB xchg (bad) int3 movabs jne in je out pop mov xchg (bad) jno or clc cmc jne xlat mov sbb push out movsl shr imul cmpsl xchg sahf imul lahf movsb fadds (bad) rex.R callq and sbb rex.WB xor sbb ja add xchg leaveq xchg jne jmp mov hlt lahf adc test fsubs fistpl push or loop lret (bad) movsb (bad) add callq mov fucomi add rex.RB mov xchg mov add callq (bad) sbb mov (bad) andb rex.WR and mov clc out or adc sbb lea (bad) rex.XB rex.WB scas out movsl jne xchg insb and cld rex.XB imul movabs hlt imull (bad) mov retq cltd jno cmp xor or (bad) sbb sbb xor (bad) pushq vandps int3 jne test icebp add outsl adc sbb scas push movsb callq scas imul imul cmpsl xchg rclb ds (bad) rclb xchg mov out je out add (bad) xor out nop notb psadbw fstl (bad) hlt and (bad) imul rex.WRXB stc loopne add out (bad) mov (bad) jmp (bad) int3 rcl int fldenv cmp loope xchg movabs insb cmp xorb cmp or jle sub lahf hlt jae sti std jb jno xchg jle xlat jmpq (bad) (bad) cmp adc or loopne or outsb (bad) imul (bad) ror fwait stos (bad) int3 pop adc callq jrcxz sub (bad) int3 mov (bad) (bad) mov loope mov and ficom pushq nop sub js imul callq int3 jrcxz xchg data16 (bad) jno sbb outsb mov (bad) adc in push add add mov movsb push add mov jl (bad) and mov xchg and or test iret fmuls js retq add xchg adc (bad) or or cmc retq xor (bad) mov lret cmc mov gs rex.WRX (bad) adc jo mov cltd add (bad) rex.WR add enterq imul xchg cmp kmovw sub cmp fild mov pop sub (bad) (bad) rex.WRB fcmovu hlt insl xchg loope jge (bad) (bad) (bad) retq xor (bad) jo loop ror jg jrcxz push es cmp pop cmp (bad) cwtl rex.X (bad) (bad) or rex.XB (bad) mov xchg (bad) xchg js adc cld sbb hlt jno mov xchg jo xor cwtl (bad) (bad) movabs (bad) movl imul push shrb pop push push mov (bad) out retq xchg (bad) nop sbb push (bad) (bad) push mov fisubrl test loopne rex.RXB lret in jne xchg cld mov and and cmp je push loopne jo jne stos and movabs scas shrb cltd cmc (bad) pop jne pushfq (bad) hlt enterq xchg xchg push (bad) mov (bad) sub shr insl or int3 rex.RXB nop jrcxz mov or pop cld (bad) xchg cmp xor cmc fwait out movabs shl push pop in divb rex.X (bad) fmul idiv out (bad) nop cmp (bad) addr32 push popfq cmp and mov test rex.WRB movabs (bad) pop jne fdivs js or hlt mov in test movabs xchg jne add out xlat and lahf cmc xor fs ljmp (bad) or xor (bad) mov push mov cltd mov adc stos std clc rex.RXB je fcompl iret jbe outsl jp in or xor retq rex.XB pushq (bad) cld cld (bad) sub or (bad) (bad) out repnz sbbb add sub and in sub pop jo sub or imulb add xchg rex.RXB leaveq jne mov push in repnz (bad) mov stos sub mov sbb lods sub rex.RXB and push imul add jle jno sbb rex.WRX rex.WB rex.RB jno clc pushq movabs push adc adc lods xchg out jno scas xor out std jmpq (bad) rex.W movabs pop rcll xor loopne or mov nop cmp callq callq and mov sbb rex.WX and rex.RB adc lock repz rex.WX rex.RB ss in push xor mov shrl jle (bad) callq add sbb jne (bad) fsubl insb add (bad) sti out pushq pushq push rol add rex.WRB and mov (bad) sbb jrcxz pop fimul stc add xor cli fiaddl rex.RXB rex.XB insb or xchg cld test movsb lods mov sub rex.WR nop xchg cmp (bad) movabs xchg lahf cmc adc callq adc or rex.WXB xlat test sti sub cs out xchg add cld jno in imul lret movslq or rex.WXB int jo fnsave add movabs (bad) int3 add mov fst lea fsub div adc cmp xchg (bad) lret rex.RB es jo xchg xchg sbb add xchg add add fdivl imul and repnz pop cld rex.XB cmp add rex.WR rex.RXB cmpl push in jmp repnz add (bad) (bad) (bad) pushq cli sbb xchg xchg xchg rex.W stc rex.WRB cmpsl movslq xlat movsl rex ds rex.RXB jae sbb (bad) xor insb (bad) add faddl or mov clc cmp sar cs shrb rex.WRB pop flds adc fcoms jo (bad) and out or xor (bad) mov je mov test sbb (bad) jne decl add lods (bad) add ror repz (bad) mov mov xchg callq out xchg rex.B jp neg add mov jne pushfq movabs pop cmp sub cld jg (bad) repz jmp (bad) mov pop xor add rex.WR (bad) adc jne pushfq mov repz test sub add pop scas idivb insl or rolb loope mov mov cld (bad) repz pushq (bad) or xchg enterq pop (bad) sbb adc out rorl sysenter add adc adc rex.WRX lods test rex.WRXB or lret callq sbb jo (bad) (bad) (bad) sti (bad) mov jno mov (bad) adc jbe int adc pushq (bad) outsb scas data16 rex.RXB and nop shr scas movabs mov std (bad) xchg adc or or xchg jge jp imul imull lea jne fldenv jb cmp in jl xor (bad) pop adc sbb adc add lahf (bad) rex.WRX rex.RXB divb (bad) xor cmp sub std push (bad) callq lret adc testb and movsb std add (bad) out adc callq lock in rex.RB (bad) repnz mov movabs pop xchg adc (bad) xor cmp rex.RX adc (bad) mov test jno mov pop xchg cmpsl movabs retq xchg push mov test push lahf sbb and sub cli neg pop rorl ja pop int3 insl (bad) repz int3 rex.XB out xchg std jne fnop addl mov addr32 xchg shr sbb rex.RXB add mov shr negl flds in cld pushq sub mov lods cmp cld mov jb xchg (bad) jae and rex.WRXB fcompl negb cli cmp rex.WXB push pop pushq int3 je enterq xchg lods jo insb pop ficom (bad) sbbb ja add (bad) std and out loop mov (bad) cmp adc data16 adc sub or stc je pushfq jbe cmp mov js jb movabs rex.W fwait mov xor cmp fadds nopl (bad) add or push pushq jo (bad) xlat mov imul push in push sub std sbb sbb sub add add mov and mov rex.RXB jne cs pop jno (bad) pop cltd je addl pop and push pushq rex.WRXB test ss lock push push repz xchg xorl cmc (bad) (bad) addr32 mov repz rex.WR rex.RX jne pop xchg ds rex xchg mov xchg in xchg rex.RB (bad) rex.WRX insb push mov sbb callq retq rex.WRXB xchg addr32 and sub int3 imul lret or adc jns (bad) popq xchg push outsl xor in or mov (bad) leaveq sub cmpsb (bad) add sbb (bad) mov or cmc idivb mov jbe or sub push xor or rex.WXB add push movabs sub jg xchg xor movabs btc gs pop (bad) test es (bad) std cs insl cmc push mov mov fdivl jrcxz adc xchg push jne lret mov fbld (bad) (bad) jb test outsl mov or mov mov jmp frstor mov jl jmp stc pop pop lock hlt fstpt or pand movabs xor int3 (bad) push jns leaveq and es xchg (bad) mov xor (bad) or xchg nop adc (bad) (bad) fistpl add paddusw xchg lods ja movabs sarb (bad) mov insb icebp (bad) imul imul movsl fidiv movabs jmpq in adc add imul xchg ljmp mov cmp sub idiv mov (bad) sbb lods adc fwait sbb hlt lahf lret push sbb sahf clc xor cmc callq in out rex.XB (bad) and es (bad) testb (bad) lahf gs mov cld insb push mov psubusw lock (bad) int3 ficoml nop add sbb hlt fnop fnop vmwrite jne loopne (bad) xlat jo rex.WR movsl in (bad) (bad) repnz add movabs repz mov xlat mov in imul outsb hlt add cmp hlt and pop rolb (bad) loop sub or pop scas stc xchg hlt mov hlt jnp (bad) sub retq cmp loopne xchg jnp (bad) (bad) (bad) fadds xlat cmp imulb xor pop jmp pushq fucomi cmc rex.RX ficoml push mov rex.W in or in pop lahf (bad) (bad) rex.XB mov hlt xlat test rclb in (bad) adc fwait xor jno rex.R (bad) sbb jmpq mov (bad) (bad) add sahf (bad) mov int3 jne fcmovne or nop mov out or and cmp add (bad) mov (bad) stc pushfq (bad) jne or cmc xor in negb rcrb cmp (bad) js in gs mov add data16 (bad) rex.WB enterq pop and (bad) ss sbb and repnz cmpsb clc and (bad) jge addr32 and callq std or push xchg sbb add movabs jmp xor fadd or push cmp ror outsb sbb imul xor cmp (bad) (bad) mov in sbb test in pushfq fcom add pushq rex.WXB (bad) mov leaveq rex.RXB ds (bad) push push sub add xchg int3 mov rex.RB rex.W and xor mov mov (bad) rex.X (bad) (bad) jrcxz int mov lea movabs (bad) sub xchg nop mov test cmp jbe mov sub int3 ja rex.WR ficoml jg int3 push rex.RXB mov sub rex.WRXB push rex.WXB add cmc in mov jne sbb xchg (bad) rex.RXB xor (bad) and xchg cmpsb push jmp (bad) jne lahf xchg (bad) cmp push xlat rex.WRB sbb in popfq test xchg mov lock jmp (bad) cmp (bad) (bad) sahf fs cmp je rex.WRX xor and (bad) add fs xchg and rex.RX sub icebp pop xor xor add push rcrb ja hlt jne add shlb nop repnz pop ljmp retq sahf and mov cltd (bad) and cmp or rex.WR outsb (bad) loop rex.WRX mov (bad) repz (bad) (bad) xchg divb icebp loop mov or pop (bad) enterq out cli (bad) or pop fsubs (bad) mov or jne (bad) (bad) sub rex.R rex.XB mov rex.WR sbb int3 rex.XB pushq out sub rex.RXB rex.X rex.RXB cmc adc cmp xor rex.B or hlt cmpsb rex.RB fwait enterq sahf add push cmp hlt loop out (bad) (bad) xor xchg (bad) mov shlb add rex.WRXB sub movabs push sti jmpq mov mov hlt sarb xchg rolb in (bad) fwait or scas mov iret stos (bad) mov loop (bad) or (bad) (bad) mov jne fxtract or je mov psrlq xchg add repnz (bad) xchg rclb (bad) cmp lret sub (bad) push mov out sub mov out sbb rex.WRB cli fisub lret (bad) xor test cmp (bad) lahf movabs imul mov retq int3 (bad) hlt rex.RXB out (bad) xchg enterq sub movabs insl rex rex.RXB cltd and or push cmp xchg lock stos mov int xor repnz mov mov shrb adc mov jmp pop rex.RXB sarb sub (bad) add jo cmp scas (bad) add rex.RXB lock clc mov jg or out out (bad) fcoms (bad) xor imul fsubs (bad) loop xchg (bad) xchg sbb sbb imul movabs jne xor clc xchg repz sub push jrcxz std push lock jne mov callq adc cs scas mov (bad) incl mov push cmp rcl (bad) (bad) mov out mov xor (bad) jrcxz jae xchg sbb or in add test xlat hlt in adc mov cmpsl fadds mov int pop (bad) xchg adc sbb push mov rex.WRXB push (bad) or je in out xlat pop xchg enterq in add (bad) int3 mov cmc rol retq and adc mov lret mov imul jne push (bad) (bad) movabs mov mov movsl or sbb std (bad) xor adc (bad) lret scas jle or sub mov rex.XB jrcxz,pn shrl rex.WRX repnz test fwait xlat push outsb adc or jle fwait out pushq push pushq jg cltd add xchg push xor mov ds rcrl scas rex.WRB lods movsb nop add add movsb icebp mov add sbb xor cld (bad) rex.RXB mov sub jae out and pop out loop ss cmpsl pushq rex.XB mov add mov mov insb vmovups and pop add cs jle add mov and pop jrcxz adc in adc xorb sbb imul repz add cmp movsl xor rex.R rex.WR addr32 sbb int stos (bad) int lods push in mov jg out adc pop xacquire jo pop mov rex.WB rex.WR or mov (bad) or xchg or (bad) sbb or rex.WRXB rex.WR stos cmp cmp mov (bad) sub add mov imul (bad) in xchg cwtl orl pop xor and fdivs rex.W cld icebp (bad) mov sub and int movsb cmpsl (bad) imul sti nop lret xor (bad) adc imul (bad) leaveq lea out int3 cmp (bad) add shlb lods rex.RXB rex.W xor xchg cld adc jno (bad) iret sbb (bad) mov rex.RXB (bad) mov (bad) mov xchg imul or sbb rex.WRB idivb jno xor sbb rex.WB shld add adc or shr nop fadds add jmp addb fist (bad) out mov (bad) adc add lock sahf pushfq add hlt xor or in cwtl (bad) hlt xor mov and out xor jl mov rex.WR xor in repnz fmuls sbb fucom sbb icebp cld or in imul fs adc leaveq (bad) sbb pushfq xchg (bad) add pushq and mov (bad) cmp fwait loopne lahf xchg loopne mov out mull mov sti repz pop hlt lock callq or sbb imul or hlt or rex.WRX in callq jno mov jbe movsl xchg movsb push rex.WR adc loopne movups mov add (bad) or outsb add enterq je mov (bad) xor and xlat loopne cld add hlt ss xor insl xchg roll mov jnp lock mov (bad) xlat jo or xchg jmpq movabs adc jp mov movabs add stos clc movabs push sub out mov rex.WXB add xchg xchg (bad) sub fsub stc (bad) pop callq or (bad) test imul and and jmp adc jbe (bad) adc (bad) lret mov cmp callq xchg adc pop rex.WRB (bad) in jmp adcl push (bad) (bad) scas push adc push movsb cmp callq pop in xorb pop pop cmp push mov test add (bad) sub (bad) push jbe rex pop je jno mov xchg sbb mov incl repz (bad) in or add xor decl callq mov shll sub popfq mov (bad) repnz add hlt xchg out rex.XB or out leaveq (bad) scas or xchg xor push nop in imul imul int3 fadds int enterq adc imul test orb es add sub sub cmp cld adc subb imul sbb (bad) jae sub pop loop sub (bad) jp in add cs fsubs mov insb jge rex.X adc lret (bad) retq sub mov mov sbb push jne out (bad) and repz sbb es in pushq sbb jmpq sti (bad) outsb sbb rex.RB lods and leaveq sub (bad) in or es cmc sarl mov js (bad) push push mov add in adc sbb lods sbb in sub mov jno push sbb shlb mov nop scas adc fisttpl mov je es loope push out insb gs xor rex.RB pop mov shr (bad) push and cmp mov jbe jmpq (bad) sbb nop leaveq sub imul icebp jae push cld test (bad) mov fdivrs movabs in or rex.RXB gs hlt (bad) rex.R repz stos jne (bad) rex.WRB xchg add (bad) out xchg cltd in cld fnsave push (bad) jne cmp out and adc leaveq rex.R lea xchg sahf pushq mov (bad) cmp pop mov xchg and adc (bad) retq cmp or (bad) ja and pop add repnz (bad) enterq repz addb out push es jns popfq and push out xlat jne mov (bad) out pop (bad) add sub xchg mov retq and rex.XB sbb mov (bad) adc outsb xor xchg icebp mov retq (bad) mov decb fwait (bad) sbb (bad) rex.WRXB rex.WB push xchg ss mov lock (bad) stos mov cmp test add mov lea cmc xchg es (bad) divl (bad) mov adc or jne (bad) rex.WRX cs xor callq push loopne es sbb out (bad) (bad) test cltd cmp (bad) movsl (bad) or (bad) jbe test adc lahf (bad) mov sub je add xor cmc push add rex ds cmp hlt xchg cld lock (bad) repnz cmp pop test loope xor rex.XB xor lahf add imul insl iret rex.X (bad) cmc movabs pop mov loop shlb (bad) idivl movabs add sub xchg out in sub shr imul sbb in lret sub sub movq add mov rcrb mov mov add jmp ja (bad) out fdivs xor cmc sub pop in imulb (bad) mov (bad) jne push pushq scas es stc (bad) (bad) in and movslq and jge (bad) and hlt push test fdivrs and push mov xor sbb cmp (bad) idivb ja lret sbb fldl xabort cli (bad) jb sub (bad) add xlat sub nop (bad) xchg ror fisttpll sbb (bad) int clc add xor in imul out rex.W cmp stc push (bad) (bad) cmp mov rex.X iret je sub (bad) fs add mov movabs out jmp (bad) gs or ljmp xlat mov (bad) jae (bad) rex.RB rex.WRXB rex.WX sub mov jp scas scas sbb rex.RXB (bad) (bad) sahf nop lret movabs (bad) push cmp retq (bad) (bad) rex.XB or outsb adc jne es hlt js xchg (bad) stc sti xor fdiv xchg mov mov out mov rex.W (bad) fcmovne pop js xchg add and stc sbb jg adc (bad) sub addb loopne xchg stos sub xchg decl imul sbb xor and (bad) (bad) mov ja imul sarl fsub test out gs fistpl mov test jmpq xor push add cld rex.R (bad) pop ja xor (bad) sub (bad) (bad) adc (bad) xlat and sbb sbb (bad) je rcl imul hlt shlb loope loop jnp cld js (bad) and fwait shll rex.WXB sbb test fwait sub jge jne rex.RB (bad) adc js rex.WB jmpq test xor shl (bad) mov faddl incl sub xchg and cmpsb (bad) iret xchg pushq sub (bad) sub cmc sbb rex.WRXB (bad) mov xchg scas lock (bad) cltd push int3 (bad) and mov movsl or rcrl (bad) enterq fs (bad) insb and cmp push pushfq rex.XB rex.WXB rex.WXB add adc test repnz movslq (bad) iret leaveq mov push (bad) jp fdivs (bad) xchg rex.WXB (bad) xchg (bad) fwait mov pushq (bad) push or mov cli fs testl add sbb jo insb (bad) (bad) incb cmp lret push jbe (bad) mov xchg lret cmp mov (bad) add retq cmpsl push cmpsb (bad) lahf xchg (bad) mov ror (bad) scas rex.X repz mov rex.X push rex.RB pop (bad) or (bad) mov test cmp or in (bad) sub sub clc out xor sbb pushq xchg xor ds out addr32 leaveq (bad) shr sbb rex.WRB rex.X jo mov sub jrcxz adc shrb (bad) jne (bad) rex.RX rex.WR lret cmp (bad) (bad) push mov xor xchg test mov and jge add pop rex.WRXB (bad) rex.RX rex.WXB (bad) sbb or sbb wbinvd adc stc mov jl add sub push jmp xor (bad) testl andb pushq push adc movabs (bad) and imul loop (bad) xor (bad) (bad) mov add xor nop (bad) mov hlt or add sbb out and xor pushq test iret fcmovnu jge dec lock std scas rcl or or test mov movabs rex.W rex.RX rex.WRX (bad) insb notl mov sbb pop sub cmpsl rex.XB jne,pn (bad) cld rorb stc (bad) (bad) sbb rex.XB stos rolb test sub push sbb (bad) jge repnz add neg jmp (bad) (bad) push sbb shrb push frstor lahf mov (bad) (bad) cmp rex.WR xchg out (bad) (bad) mov mov jmp adc pushq cmp cld mov and jno lea jo add imul subl test mov and xchg hlt sbb movslq in adc es (bad) mov jle cs cmp xor (bad) jae (bad) adc sub sbb rex.R jge fist jge xchg add pop jb icebp (bad) movabs lret mov pushfq fisttp scas xchg mov js mov sub nop xchg (bad) (bad) xor jb (bad) jne xor push test addb rex.WRXB mov ja mov and pop jne movsl (bad) cmpb cmp lahf rex.X or ss or add jno xchg (bad) jno xchg (bad) or and (bad) adc adc (bad) sbb pushq or addl cwtl xor mov lods sbb mov mov jp (bad) fist add insl fdivs sub pop fs jmp imul rex.RXB cmp movb sub jb rex.RXB icebp sti cmpsb jne add or (bad) imul xor add sbb rex.W and xor rex.WR jrcxz movabs lret (bad) imul xorb imul insl cmp je gs test outsl mov sub data16 pop fist (bad) insl popq rex.R sub je xor cmp int3 jne lods push or imul cld data16 ja (bad) (bad) mov sub sub imul sbb sub ja enterq es jrcxz or ja mov and fstps cmp adc js (bad) cmc add mov hlt jne mov sbb std mov pop andl jno sar mov enterq rex.X in mov (bad) stos mov fadd add (bad) int3 rex.WRXB xlat (bad) iret pop add imul xchg xchg lods jno jae pop mov cmp xchg nop mov cltd outsb or adc movabs adcl loope jbe push sbb (bad) or imul xchg rex.WRB pushfq addl adc rcrl rex.WRX fistl int3 rex.B xlat add (bad) mov outsb test sub add pop push cltd rex.RXB xor or bnd jo out adc xlat adc push jrcxz (bad) xor je push push jmpq jp sbb lret xor testl pushq jno xor jne jg movb push push sgdt add (bad) jno or add pop mov in loopne xchg and rex.W lock fdiv lods in addr32 imul (bad) in hlt rol jle xlat sbb xor add xor int or fwait jb add stc adc sbb fcompl fs xchg (bad) add ss test mov or xchg (bad) sub sub fdivrs mov fwait xchg add (bad) lret jno lock xchg (bad) xchg (bad) fdivl pop add loope adc (bad) sub fistp pop sbb xor (bad) in mov out (bad) jo pop jno adcl callq lret (bad) movsb data16 (bad) or std (bad) movsb xchg pop pushq sbb (bad) xorl pushq fiadd sub adc mulb or imul test pushq add sbb mov mov cmp or lahf (bad) es mul adc xor cmp mov icebp (bad) add repz or xor jne xchg rex.XB mov (bad) loopne adc rex.WR mov test enterq mov push (bad) and (bad) or jmpq xchg lret add (bad) adc or gs fsubs adc enterq cmp rex.B (bad) hlt push (bad) negb int3 mov cld flds (bad) sub sub jmpq jne movabs adc or sbb (bad) (bad) (bad) cmp mov loopne adcb cli add rex.B mov sbb xchg movabs mov rex.W rex.WX andb xchg data16 jl xchg cltd xchg and or (bad) movsb test (bad) outsb lock pop rol or xchg mov cs rex.R add pop in addr32 xchg iret mov pop cmpsb (bad) push mov cmp xchg in repnz cmp mov movsb mov cmc addr32 cmpsl (bad) scas xor scas rorb addr32 (bad) (bad) movabs imull callq xor (bad) or or callq rex.RXB (bad) or xchg (bad) (bad) (bad) add (bad) sub jl add in mov repz lret insb je fs and (bad) out xlat imul ja (bad) repnz xor mov add in (bad) addl jle callq adc mov sub sub jmp (bad) mov (bad) (bad) in data16 cmp xchg stc hlt jbe fcomip int3 imul rex.RX sub int3 data16 (bad) jo rclb cmp rex.RB rex.X pop xchg jmp notb xchg xchg fcoml mov (bad) xchg and jno movsl cmc sbb jno or add (bad) add cmp imul push jl jrcxz imul movslq cmp adc (bad) pushq imul lods rorb push out sub data16 lods adc ss or rex.B xor cs rcll sub nop jne xor ds pop cmp stos mov ss callq std or mov adc (bad) add repz mulb insl test xchg rex.WX (bad) mov lret jg cmp rcr mov fistl mov sbb push jrcxz fmull (bad) or adc lods mov pop add movabs xor hlt push sub mov (bad) mov repnz push mov adc xor movsb cld cld fst mov rex.WR (bad) mov lahf mov imull shlb lods rex.R adc pop sub sti repnz mov rex.WR mov xchg divl push xchg (bad) stos pop rex.WX iret xchg clc mov (bad) jbe (bad) (bad) push (bad) mov ss outsb sub clc push sbb incl adc xor jno add jae outsl ss loop xchg add xor rex ss lahf repnz ficomp rex.X add mov xchg sub rcl (bad) (bad) hlt faddl lods rex.WB test xorl icebp in jg mov jnp add cmpsb in lock mov mov js (bad) xor rorl (bad) je loopne sahf sbb mov (bad) mov sub xlat jo xor xor rex.WRX jb (bad) (bad) hlt rex.RXB stos insl jl (bad) out in ds (bad) icebp mov hlt mov cmpsl int3 add sub lret rex.WRXB scas add rex.RXB lods (bad) adc or stos je sarb xchg in movsb fs and xchg jle repz fsts out jne or mov xchg movabs rex.X and stos js cmp xor mov movsb or rex.X callq pushfq cmp or rex.WRXB or (bad) mov sub sub movsb sub testb add jl jae xor movsb mov js addr32 sub or push fdecstp pop insb jp mov movl (bad) sub enterq imul jb (bad) adc (bad) (bad) add rex.WRB xchg hlt rclb (bad) jne in cmp xchg mov (bad) mov int (bad) pushfq fwait sub (bad) or (bad) ds stos or insl (bad) (bad) (bad) rex.WRX int mov je andl push (bad) (bad) xor (bad) cmc imul mov (bad) push adc sub (bad) xchg retq imull int3 (bad) (bad) in repz test (bad) mov movl hlt enterq (bad) adc xchg pop loop sub push mov int3 and push fwait cmp push rex.R lods mov (bad) sub rex.RX xor rex.WXB rex.XB ds push fs loop lods jno rex fptan lea pand lret add sti imul push (bad) repnz jo mov shll rex.RB jmp pushfq movl (bad) mov adc xchg push xchg (bad) (bad) rex.RXB mov stc leaveq jo jrcxz pop jne repnz (bad) rex.X xchg xor sbb jmp imul and (bad) ss (bad) hlt push (bad) mov (bad) mov imull rex.RX nop (bad) iret pslld fs hlt int3 adc (bad) imulb jg idivl mov (bad) ds cmp cmpsl (bad) retq rex.WB push hlt sbb ss jne scas sub in imul jbe rclb (bad) callq xchg mov push movsl sub push repnz pop std (bad) xchg cld (bad) popfq xchg rex.W ds mov lods cltd xchg out or jo insl cld int3 repnz rex.XB fwait sbb xchg int pop iret clc add incl cli retq hlt hlt in (bad) cmpsb ss in retq repz movabs (bad) mov sub pushfq pushq adc cs xor insl sbb fistp or add test (bad) mov cs or or mov xchg out jmp (bad) in xchg imul popfq lret addr32 mov fmuls fldcw movsl adc pop stos (bad) incb xchg lret rex.WRB mov or cmp pushq out repnz out rex xor mov or loop add out push fs xchg movabs out (bad) (bad) and jrcxz gs hlt (bad) repz sub (bad) adc retq mov iret sbb rex.WRX jo movsl enterq cmp rex.WRB mov mov lock add add sbb fcos and sub fcomps sub (bad) repz adc movb jne iret (bad) mov iret xor test fistp rex.WX gs jbe sub pushq rex.WRXB stc (bad) jns xchg pop (bad) jne (bad) and imul cltd stos cwtl ds std (bad) ss sub and icebp stc rex.X (bad) retq imul rex.WRB rclb lock int3 sub adc (bad) add rex.WB adc loope hlt fbld rex.WRB movslq add adc pushq ficom retq sub mov in cmp retq (bad) lret rex.RB cs (bad) or add rex.B rex.WRXB lock cwtl fdivrs pop xchg mov retq add sbb xor adc nop sbb sahf (bad) mov sub (bad) jbe cmp test loope jle stos xchg sub add xchg push std adc mov jge fsubr incb push (bad) push (bad) (bad) sub xchg fsts stos cmp jae sub rex.WX retq cld rex.X cld out and (bad) out mov mov cmp (bad) enterq (bad) (bad) hlt lret iret je sti rex.XB imul add (bad) xchg mov (bad) push jg mov (bad) andb cmp pop rex.WX out sub mov jne hlt (bad) and sbb jle imul (bad) push cltd xchg sub and iret movabs mov push out (bad) or adc push cmpsb cmp xchg (bad) push sbb bnd (bad) imul (bad) or sti in adc (bad) jne enterq imul mov divb int3 (bad) test and and loope mov movsl xor cwtl push popfq rex.XB cmp xorb (bad) rclb subl adc push jp (bad) insl sbb adc rex.W out test (bad) (bad) mov pop cld insb outsl in (bad) movsb cmpsl scas (bad) adc (bad) ss (bad) movabs xchg (bad) adc adc mov popfq sub and in (bad) in pushq jrcxz nop hlt in mov mov clc cli movabs mov loope pop (bad) (bad) add cmp mov in push fdivrl mov adc fwait (bad) sub out mov cmp add (bad) and xor add clc movabs hlt mov sbb insb xchg xchg nop retq add loop int jne mov sub cmp (bad) stos cld (bad) push rex.XB xchg callq rex.WRXB sub lods mov in jnp adcb jg int3 fnstenv adc sub (bad) mov cmp imul pushq adc adc test mov adc rex.WXB mov movsl or jo callq mov test (bad) stos (bad) pushq subl test (bad) jns push sub int3 (bad) callq xor adc push retq sub (bad) fildll xchg adc rex.WXB adc add movabs in (bad) xchg data16 and sub popfq jrcxz jge xchg xchg xchg or pop jmp cmpsb out test sub push add (bad) add or (bad) icebp rex.B (bad) loope adc rex.RB rex.XB (bad) mov add xor (bad) out fdivrl push sbb adc loope mov push jae,pn decl sub jns int (bad) (bad) push rex.XB and xchg sub cmpsl adc retq mov jo (bad) nop (bad) mov out (bad) adcl xchg jae (bad) cmc add cmp movabs mov (bad) adc std int3 mov or fs retq jbe push sbb xchg pop ja jno xchg pushfq sub int xchg mov push hlt jne (bad) and jmp mov add xor jo mov (bad) sub out outsl callq xor int3 icebp lea add rex.XB mul jae repnz (bad) mov rex.WB ss mov rolb in div cmp out je or mov sub and and (bad) mov scas fsubl lods in ja (bad) repnz int3 push add mov cmp sub data16 in sub lods imul out out rolb adc cmc std or adc jl lret and rex.RXB sti jrcxz cld fsubs (bad) cld mov data16 (bad) (bad) rex.XB sbb mul (bad) je out push sub (bad) sbb and (bad) movabs lea sbb in mov jo push pop (bad) lea cmc (bad) jne ja (bad) rex.R xlat xor xor push xchg retq xor rex.R push out test (bad) jno (bad) jg mov shr adc pop (bad) and mov cmp (bad) cs fistpll cmc lret jne mov rex.WRXB (bad) (bad) (bad) push add or out jne adc push retq (bad) or mov pop (bad) adc xchg mov imul lock adc sbb vmovupd push xor pushq cmp sub repz div adc std add sbb popfq fcmovb (bad) addr32 enterq and or xchg xchg sub imul je rex.WR hlt rorb loope cs jl lahf pop cmpb shr enterq rex mov cld or jmpq sub callq fist mov retq callq nop cmc rex.WR rex.XB test hlt and and (bad) fcmovnb or (bad) mov (bad) mov rex.R pop jne add pop hlt mov adc imul jl fadds cmp je rorb sub popfq (bad) imul repz jg test xor (bad) repnz repz pop iret pop jbe rex.WRX and xchg add jno pop rex.RB add adc hlt (bad) in (bad) adc rex.R pushq push mov jo int pushq jle fwait insl (bad) xchg xor xchg mull or std mov hlt sub or mov (bad) sub rex.WXB cmp adc jl mov and in rcl (bad) (bad) lods mov (bad) fstps xchg jb test in lock mov jge int3 cld jne int3 rex.WXB rex.WRB rex.WRX pop add jbe (bad) xchg movabs in adc (bad) sbbb (bad) add (bad) (bad) rex.WR fsubs rex.W xor (bad) mov xor adc jmpq jne rex.WXB add roll add data16 (bad) in (bad) cli mov rorb mov mov retq mov sub xorl lock ss movabs movsb or mov (bad) jb lea (bad) rclb ror mov or sarb adc and (bad) pop retq mov ficompl je pop fimul push loopne adc xor pop test hlt sbb sbb retq in (bad) imul or xlat out mov (bad) in rex.RXB loopne gs sub (bad) sbb imul xchg and in xor adc (bad) or in mov loop fwait or and (bad) nop jno sub sbb (bad) imulb mov cmp pop xor enterq jmp xchg (bad) in and repnz popfq outsl cmpsl movabs (bad) mov xor icebp mov in cld mov rex.RX xor sub rex.W nop int3 test iret (bad) sbb lods or cld lods test xor mov (bad) and cwtl (bad) or adc sbb xchg fisttp in jno pop mov int3 cld insl mov rex.W fisttpl sub hlt jnp rex.RXB cs add imul (bad) fcomp and out xor lahf jl mov mov outsb movabs add sbb mov sbb fs (bad) fiadd adc rex.WRB gs xchg (bad) retq fwait (bad) fsubl imul xor sbb cmp adc (bad) addr32 adc adc or retq cmc pushq (bad) jb xor stos rol add xor addl (bad) cs (bad) jno (bad) xor push test xorl xchg rex.XB sub xor hlt sarb xor pushq rex xor (bad) in lcall xchg js xchg push push out sub data16 rex.RXB cmp movabs mov rex.WB or push jo mov sub (bad) xor push repz pop stos sbb out loopne addr32 (bad) hlt mov rcrb pop (bad) pop (bad) mov jne xchg mulb rex.WRXB push stos push callq (bad) mov repnz shrb sub (bad) movabs push cwtl rex.RXB sbb sarb sub (bad) leaveq movabs insb and jg add in rex.WX (bad) xlat ja hlt push push mov xchg repz in jno cs shlb push sub pop int3 pushq adc xor out rclb sti (bad) rex.WRB (bad) icebp (bad) mov mov adc imul lock rex.WRXB rex.WRX outsl (bad) or jne rex.X jmpq mov sub nop scas jno test pop push mov xorb lret or test push xor sub test xor and add rex.WXB retq loop or fistpll (bad) sbb (bad) retq push (bad) sbb xlat pop iret jg addl add rex.WR rex.R xchg or jp (bad) (bad) xor (bad) mov cld adcl out push mov mov rex.XB lock scas rolb outsb mov mov sbb jg or mov (bad) (bad) add repnz es xchg mov add jns (bad) hlt rex.WB (bad) adc jrcxz jl int sti jnp ja jbe cmpsb xchg fadds (bad) loopne xchg add mov movslq add xlat test xchg jb imull mov push hlt clc pop (bad) mov adc pop fs xlat jmp xrelease mov (bad) addr32 int cmpsl sbb (bad) rolb test fnop add or fcmovnbe repnz sbb (bad) pop fimull pushfq (bad) in rex.R movsb js cltd (bad) mov (bad) lock mov (bad) push lahf (bad) (bad) jb (bad) lret insb rclb (bad) flds lods cld xor insb mov movabs (bad) sub movsb fadds sbb (bad) xor and cli in orb mov pushq rex.X fiaddl fdivrs rex.XB add mov retq jae mov (bad) rex.WXB jge imul adc jmpq test (bad) rclb xor rex.RXB (bad) fs mov xchg xchg fisttp (bad) push add sub mull and out sbb (bad) or mov stos rex.R pop in sbb add jne je mov or hlt jg repnz xlat (bad) subl add lods cs fistpl (bad) or pop push (bad) (bad) xchg push leaveq or (bad) sub add and xchg (bad) std xchg pushq jo leaveq adc add popfq rex.WRX int jl and (bad) sbb jns rex.WRX (bad) sbb add jno adc add add out rex.WRB rex.RB sub out scas mov xor (bad) hlt movabs out jnp movabs adc xchg rex.WRXB repz in std (bad) cmp cmovle inc xchg mov xchg out xor xor (bad) test mov ja and lods (bad) lret lock imul fbstp add push fcmove (bad) mov add (bad) push fwait (bad) add rex.W rex.WR pushfq xchg jrcxz push hlt insl in rex adc xlat add xchg movl (bad) ds cli sub retq xor sahf (bad) add pcmpeqd xlat adc mov retq ficomp jns xlat test (bad) mov jne in lods iret cmp rclb es xchg xor or or stos (bad) stc cld rex.R test mov jrcxz and pushq (bad) push iret sbb mull mov cmp (bad) std (bad) callq scas (bad) mov popfq fmuls rclb callq cltd push push push fs rcll repz repz (bad) (bad) (bad) out xchg insb repz and rex.RX jrcxz movsb data16 pop lea (bad) mov (bad) (bad) std adc rex.WRB fdivrl lret push (bad) adc (bad) adc jb and xor push rex.WX sub (bad) fmuls jne (bad) rex.R fs adc add xchg adcl lods xchg fldcw sbb hlt (bad) mov add xor xor (bad) jo fwait lock test repnz rex.B rex.B mov (bad) movslq (bad) hlt rex.WXB fmuls jrcxz mov or cmc lret mov loop (bad) in ja lahf fnsetpm(287 add cld scas (bad) mov int3 push mov or mov mov xor imul sti cld adc push addr32 add fadds pushq pop movsb int mov (bad) push add vmovss adc cmp (bad) and pushq mov (bad) xchg shrl push data16 sub (bad) lods cmpsl rcrb loop and add out add je in mov test iretq adc add add iret outsb callq retq (bad) xor stos (bad) mov mov mov xlat jrcxz mov mov adc adc xchg (bad) mov stc xchg sbb mov mov repz scas loopne add out xchg xchg xor jnp jae (bad) insl icebp rex.B test jge and iret cwtl hlt rex.XB and xchg mov cs mov hlt xchg out (bad) pushq out add xor int3 cmp repnz in push jne (bad) icebp rex.XB rex.RB repz sbb add cmpsb insb pop iret repz mov out test int (bad) or mov (bad) lock sub out pop cmc cs and fidiv in insw (bad) jbe jge std movabs lea (bad) out fwait lea (bad) pushq rex.RB div (bad) add jo xor cmp rex.B sti xor sub scas rex.WXB sahf movabs sub stc mov icebp es fistp sub rex.X cmp stos jmpq lods xchg xchg jp push clc jno adc fistpll addb in push clc (bad) test xor fcmovnb adc add movslq repnz divl repz lods in hlt cmp adc test out (bad) rex (bad) rex.RB xchg rex.RX and add mov (bad) nop (bad) fcompl mov cld mov or xchg add movsb popfq (bad) pop adc mov pop and mov sbb int3 leaveq sub or mov out stos gs (bad) (bad) adc cmp callq rex.WR (bad) jnp ss or xlat nop (bad) rex.WR add loop (bad) xor sti xchg push pop iret push lret xlat testb cmp scas xlat sbb out callq (bad) lock stos movabs add popfq (bad) mov xchg jmp cmp mov jg rex.WR scas sbb outsl add push mov pushq repnz mov addl and (bad) add (bad) add callq and (bad) jae hlt loope (bad) or mov (bad) or or or jg mov add rex.WB mov jrcxz,pt cmp adc rex.R cmp (bad) mov callq leaveq add js int3 mov adc push callq push xlat xlat movsb or cmpsb adc mov clc addr32 and cmpsl imul or mov (bad) shll mov notl pop ss mov pcmpeqw mov lods mov or mov ja add enterq (bad) outsb repz icebp movabs (bad) add or (bad) mov sbb (bad) mov in or es xor rex.RXB xchg mov setae enterq rex.R sub (bad) jle pop (bad) or lret pushq mov cld repz clc xor mov (bad) push mov rex.RB (bad) js jno mov push adc (bad) (bad) rex.WX mov scas sub (bad) (bad) decb (bad) idivl movsl outsb adc jge (bad) (bad) or rex.WXB adc (bad) fsubr std adc out negb mov mov hlt rex.XB (bad) push push retq sub adc iret in in test std xchg (bad) cmp fcoml je pop hlt adc loopne and rex.RX (bad) mov mov mov sbb xlat divb lock rex.XB cld rex.R fs (bad) int pop jo rex.W hlt lock sub pop push fsubrs in xchg adc xor outsl rex.RB xchg lret rex.XB cs callq insb jl cld mov test pushq in (bad) push rolb faddp (bad) jne sbb push (bad) and icebp pop rex.R shlb ficomp (bad) mov (bad) mov icebp out push addb sbb adc rex.WRX callq (bad) cld adc jbe sti mov movabs pop push mov lods pop add adc retq sbb rex.X jrcxz mov (bad) fwait sbb movabs callq std rorl mov jne or out adc jb je (bad) xchg movl mov sti or loop sarb lahf cmp adc cmpsl (bad) js rex.B pop out leaveq or push rclb retq out stos xchg mov imul jmpq xchg jb cmc (bad) jne and (bad) (bad) (bad) (bad) xchg enterq hlt data16 add cwtl xor or and (bad) xor (bad) rolb add (bad) repnz test test es rex.X test retq pop ficom (bad) mov add lods and mov retq icebp sbb or xor (bad) mov adc movsb lahf xchg add and fcom shlb rex.RXB or (bad) cmp or rex.R jl test xchg fwait and push mov out xchg fstpt (bad) scas xchg pop xor xchg (bad) xchg push mov mov out jge out (bad) (bad) cmp xchg (bad) pop (bad) lret adc cmp test mov jge and test test and (bad) sub adc scas add or in adc rclb push cmp mov movsb xchg testl xlat (bad) je (bad) (bad) testl mov (bad) pop (bad) push sbb shr add test or movsl in push cmc xlat int3 xor cmp out je sub sub rex.WRX (bad) or lock sti shlb movabs rex.WR je xor lahf repnz rorb in sbb push cs rolb movsb jne (bad) and pop lcall fstpl fnstsw (bad) rex.XB fs or rex.R jno xor push push pop mov (bad) rex.WRXB (bad) sahf mov sbb pop add xchg jae rex.RXB adc xchg (bad) imul xchg or loop sti push sbb test sub adc movsb movabs sub mov (bad) mov xor sub (bad) rex.B and fisubrl fsubp push rex.WRXB or es rex.XB xchg rex.WXB icebp (bad) sub pop test lock jb rex.WRB (bad) not xor jb jl xor pop push rex.XB std fbstp rcrl (bad) mov je (bad) or callq (bad) cli rex.R bnd sub rol mov mov imul movsb test cltd imul push push jae pop (bad) (bad) std mov cmc movntq out (bad) in xchg mov out jrcxz cmp (bad) or fist (bad) rex.WRX sub out add add movabs xor hlt sbb (bad) sbbb sub add iret imul rex.W mov mov (bad) jne cmp cltd adc and or js test or xchg cltd in (bad) decb sbbl hlt jne push fimul icebp pop lock jmpq add (bad) fldl jmpq pop test mov push out (bad) (bad) gs adc (bad) sbb pop movsb scas gs mov stos (bad) (bad) adc rorb xchg mov in icebp rex.RXB rex.WRB or rex.XB (bad) loop sbb xchg sub in mov xchg or add cmpsb xlat adc or mov rex.RX adc out or (bad) mov je jle ja sub out jge (bad) pop xlat fwait cmc repnz retq sub mov div leaveq (bad) mov xlat mov mov rex.WB fwait int3 movabs cwtl rex.WRXB mov adc repz xchg (bad) (bad) sbb mov rex.XB cs movsl rex.WX pushfq not (bad) (bad) pop movsb (bad) adc (bad) (bad) loopne fs rex.XB fcoms rex.RX scas neg rex.RXB rex.RB add mov mov sti enterq or adc rex.WRX or rex.X scas mov test (bad) shlb or adc imul push pop cld repz xlat movsb xor sub xor xor cmpsl (bad) xchg div notl (bad) add nop rex.XB out outsl rex rex.WR (bad) insl nop outsl add (bad) jge (bad) (bad) add rcrl push hlt clc (bad) std (bad) fwait int3 insl retq mov sub mov sbb loopne add pop test mov adc repnz shll data16 mov jb fs (bad) or insl and cld rex (bad) es and in cld pop retq (bad) enterq and insb (bad) jbe movabs jmp pop or xor (bad) (bad) mov ror pop fnsetpm(287 (bad) and xchg mov std outsb stos adc gs rex.WX sub clc cmpsl xchg and je add stos sub pop fcomp je adc mov (bad) xchg or add rcrl enterq (bad) and retq xor or (bad) mov sbb pop icebp lock cmp xchg pop or mov (bad) mov (bad) sbb jns add xchg and ja out repnz rex.RB (bad) mov or push add and xor flds mov mov movsb sub or or negb xor xor (bad) insl pop movabs shrl pushq sub and sub sbb leaveq rex.WB and gs mov lret in xchg add stos and pop jg nop cwtl sbb (bad) mov lock imulb lock jl js xchg jmp mov xchg mov mov (bad) jne jb (bad) (bad) xor (bad) mov stc or clc stc jmp retq push xchg clc jae out mov je mov pushq scas adcb (bad) sti xor stos (bad) (bad) sub mov add js or jns fstps mov and xor or pushq movsb callq hlt (bad) xchg jl pop (bad) gs adc adc cmp (bad) sbb push add in mov jb mov adc rex.RB out mov movsb std xor (bad) pop sbb gs rex.XB test jnp lods add mov rex.RB mov (bad) push xor rorl push lea jp (bad) xor (bad) cltd adc out (bad) je adc sbb out push mov retq hlt mov sbb js xchg sub ds hlt out in mov mov fnsave movslq mov cmp test jbe xorb imul adc (bad) xor mov xchg fcompl mov rex.RX add mov jo,pt jne out mov inc (bad) jne fcomp mov xchg nop (bad) jl xchg jne sbb mov movsb sub sbb and sbb xchg add mov lea rex movabs mov retq cmp movabs in insb jmp add add (bad) insl (bad) sbb (bad) fmul adc (bad) pop adc ficoml cli lea jrcxz sti xchg mov adc (bad) lahf stos xchg push rex.W es rex.RXB (bad) je ja imul je insb jne movabs (bad) cmp sbb (bad) mov mov xchg (bad) sbb jrcxz add jp iret (bad) fcomip es negl leaveq sub pushq repnz stos in adc or (bad) movabs mov add test (bad) test and mov pop lock sbb mov sbb lret rex.RB sbb xchg jno add repnz repnz cmp add cmp (bad) and icebp sbb mov rex.WX push push adc cmp rex.XB ds add (bad) rex.WRB xchg movabs rex.WRXB jmp fildll add (bad) (bad) xchg and xchg data16 push out xchg jl or hlt movsl rex.WRX (bad) xor adc jbe hlt (bad) adc push outsl xor in test sahf add nop cmc loop insl adc lahf and sbb loop push xlat lret (bad) popfq or jae or (bad) xlat lahf mov cltd (bad) (bad) sub pop enterq cmp xchg (bad) rex.WRX cmc (bad) mov fistp and addl jne fwait adc xor sbb (bad) repnz outsl add add xchg or add je (bad) rex.WRX fwait jno rex.XB jbe fidivrl rcrl cld retq jo pop retq xor (bad) cmp jb mov retq es out (bad) (bad) outsb scas retq incl jmp (bad) outsb retq cwtl pop (bad) nop test rex.WR pushq sub xchg rex.R je add sbb in mov int3 (bad) jg movabs rcrb leaveq sub mov lahf rex.R push sbb mov mov adc cmp push int xlat repz adc outsl add loopne (bad) mov (bad) pop rex.WRB xor hlt push jae mov enterq cld and insl ja pop adc (bad) shl (bad) leaveq cld push mov (bad) (bad) sti and mov add pop mov jmp adc (bad) or xor (bad) pushfq pop fwait push jb testb xchg add add repz cmp (bad) add mov (bad) add imul imul (bad) or retq or push repz jg test outsb cmp add sahf mov iret cmp (bad) movsb xor cmc rex.WR addb rex.RX and mov xchg adc test xchg xchg cmp cwtl je imul stos cmpsl int popfq rex.WX shlb (bad) (bad) cmpb add fist sub jg xor adc fsubs jmp (bad) iret and movabs xor push adc add rex.RXB sbb (bad) imul mov cmp adc (bad) mov jrcxz cmpl lret insb jg test je (bad) sbb adc (bad) pushfq xchg rcr jmpq (bad) lret shl cld xlat pop hlt cwtl (bad) jne cmp cmp fwait data16 scas pushq ss pop test (bad) push lahf (bad) mov jl (bad) mov adc add jno or fnstsw xchg loop or pushq mov pushq fdivl (bad) (bad) xlat (bad) test or rex.RB mov (bad) (bad) jbe loopne xchg or (bad) (bad) add div cld mov addb mov (bad) mov jle out ds lahf xchg (bad) (bad) fimul rex.RX addr32 mov je and loopne push retq add jbe rex.WX lret mov add rex.RB mov xchg enterq xor (bad) mov fadd adc (bad) out imul adc push cmpsb imul notb rex.XB stos add sti cmp rex.WRXB rolb sbb mov xchg (bad) xor pop xor jno fcom xchg mov enterq imul idiv stc stos add test sbb mov push cld cmp in in repnz movabs mov jo clc rex.WX (bad) (bad) mov sti (bad) fsin mov (bad) (bad) jl,pn (bad) jmp (bad) (bad) fucomip cli cmpsl mov push lock jmp and jmp mov and xchg jae xor int3 (bad) lods icebp (bad) cmp mov fwait sbb (bad) rex.WRB pushfq or lea (bad) imul retq (bad) in fldcw (bad) add rex.XB fdivs int3 jae pop mov pop bndldx lret repnz (bad) push out push (bad) loope mov in jo xchg (bad) sbb rex.W rex.X xchg xchg repz (bad) or or hlt sub rex.WX rex.R stos lock (bad) xchg mov pop jbe enterq stos shrb fisubr push xchg ja cltd or adc sbb xchg popfq movsb leaveq and push rex.RX xlat int add lock (bad) mov sti (bad) and pushq (bad) ja std jnp movabs rex.W repz lahf adc xlat mov mov pushq loopne sti rex.W rex.WR es xchg (bad) lcall sub xchg pop nop test out rex.RB cmp insb sarb notb insb (bad) loopne rex.WR push (bad) nop sbb movabs mov xchg (bad) (bad) (bad) rex.XB std lock mov or hlt fbstp movl or xchg push out movabs movsl cmc adc adc adc cmp lods add xor lods push jb xor xchg repz (bad) sub (bad) imul push rex.WRXB add in or or out movabs sub jg mov adc pop and fs (bad) out mov fwait mov xor adc neg movsl (bad) lea mov pushfq or mov (bad) sbb mov push rex.XB (bad) mov lahf mov movl movabs (bad) sub add cltd repnz and adc test int3 adc cmp data16 rex.WRXB repnz or shrb in add mov int3 cld mov int3 clc mov rclb push or cmpsl mov add je fs mov callq mov adc add testl mov mov add or xchg pushq test mov mov callq mov lods and pop add pop repz (bad) push (bad) (bad) (bad) (bad) rclb and rcll pushq in pop loop cmc mov mov rex.W loopne or pop andb mov sbb and sub jno std (bad) mov (bad) sahf rex.RX hlt mov fucomi rcr sbb pushq (bad) (bad) jmp rex.RXB and xor add adc retq cli lock cmpsb test jne rex.RX ja int es ljmp out in (bad) es and sbb mov movabs sbb (bad) cmpsb mov (bad) fs push xchg pop pushq movabs sbb jbe out repnz lea (bad) mov add (bad) jmp (bad) mov in mov xchg stos adc xor movabs (bad) push cli (bad) test iret movsb (bad) rolb test (bad) (bad) (bad) add lret hlt xchg or add jbe add xor callq mov (bad) shll or rex.WRB (bad) addr32 add test in jp jo (bad) jle add (bad) (bad) popq out xchg add mov mov mov xchg (bad) xchg xchg add cmpsl or lea (bad) ss add rex.RX mov test add ss add cmc pop nop in (bad) callq mov push xor or lea (bad) gs add rex.RB mov add ss nop in (bad) callq mov test ja movsb jmp pop mov iret sub cs mov adc (bad) mov out push outsl xor rex.XB movsb mov adc hlt fs test fmul jg stos rex.RXB repnz mov pop js rcr in nop push (bad) test es add rex.WRB loopne nop rex.RB rex.WRXB cmp add xor rol rex.W sub out or (bad) xor callq loop push repnz cmpsl (bad) xor mov movabs xchg (bad) fldt (bad) loop,pt ja cmpsb (bad) mov push (bad) lea cwtl xlat pop roll jp xor rex.X rex.WB mov hlt sarl xchg rex.RXB xchg cmpsl jp in imul mov mov (bad) mov insb out mov cmp or js fs sub lock xchg sbb rclb push lret lods rex.R js push lcall sub lret adc fs sub jp adc sub and mov leaveq cmp push (bad) movabs xor lret movabs add add or sub pop cmp pop add test add bnd jrcxz (bad) lods mov retq jmpq push mov (bad) mov outsb or enterq in (bad) jne mov fnstenv (bad) add and cmc scas push cmp pushfq rex.W jg (bad) rex.R (bad) add (bad) rex.X mov xlat (bad) cld mov add subl in mov or cmpl loope mov xlat hlt test xlat test movabs repz and (bad) mov out (bad) pushq loope (bad) push fisubl push xchg mov cmp cltd add rex.WXB bnd loopne mov js add (bad) rex.WRB sbb in sbb xchg jmpq rex.XB mov xor add movabs (bad) cmp mov (bad) leaveq subb gs int callq sub cmc cmc adc jbe callq jno idiv (bad) or xchg stos rex.R retq (bad) (bad) xchg mov or add out shr mov cld (bad) movabs js lahf xchg xlat (bad) adc (bad) jbe icebp xchg imul popfq stos cmc popfq int3 js rex.WX rex.WRX rex.WB sub (bad) cmp mov js xchg adc jp pop xchg loope push mov adc pushq cmp adc mov scas fnstcw push xchg or rex.RXB data16 sbb sti xor (bad) or test (bad) adc mov mov pop in test push sahf cmp rex.WRX enterq vmovsd adc lock jo (bad) jne (bad) mov out xor sbb sarl add mov xchg xchg jo xchg imul lea rex.WRX out and adc xchg (bad) rex.WXB jb addr32 xchg sbb jne out and mov jnp xacquire idiv cmp sub vsqrtss out cmp rex.WXB cmp rex.WXB rex.WR add callq (bad) jrcxz int rex.WXB jmp (bad) lock xorps divl movabs movabs (bad) rex.WB scas repz xor cmp loop (bad) add mov mov rex.WR sbb push adc (bad) add jne adc mov adc (bad) loop stos (bad) stos movabs and in insb orb js push (bad) adc mov push add rex ss xorb push (bad) cmovs (bad) or lods xlat out adc hlt movsb and (bad) callq add (bad) sbb sbb (bad) push or cltd stc icebp in (bad) jmpq (bad) (bad) add mov cmp loope js (bad) add (bad) sbb adc (bad) adc mov xor xchg jge test (bad) rex.WRB sbb mov sbb jmp pop iret es rex.RXB lock mov shr movabs jmp pushq xchg jmpq movl and (bad) (bad) xor (bad) (bad) xor bswap (bad) rex (bad) cwtl jmp retq pushq out xor (bad) push cmpsl xlat (bad) lretw cmp jbe repz (bad) mov repz outsb out (bad) cmc or jae (bad) (bad) mov pushq jae xchg pop mov lock sub movsb sub and rolb push mov or movsl cmpb cmp sub (bad) jne mov andb rorl xor jmpq jmp test jb xor add pop sarb (bad) insl repz iret rol xlat push js mov loopne add sbb jmp and imul retq cmc (bad) pushfq movsb fildll push xchg adc (bad) movabs xchg mov sahf cmp mov jp xchg imul out xchg rex.WRB rex.WR and movsb pop pop jl (bad) out rclb lea push fimul or fnsave xor cmp adc iret mov or stc mov mov loopne int xor retq (bad) cltd test mov in (bad) in in pushq cli (bad) xchg jrcxz stos lea mov movslq test mov and jo (bad) int sbb shll pop sbb or or pop mov sti sbb (bad) icebp and movsb out (bad) fistpl and fsubrl (bad) mov insl xchg loope addr32 rex (bad) fs (bad) out fild jmp push rex.RB (bad) imul repz movabs add cltd mov sub jnp lods out xchg roll add or rcll rex.WR out loopne (bad) hlt jmp movabs mov adc lret loop sub sub (bad) int rex.X xchg jne sub idivl in sti outsl mov js (bad) sbb cwtl cmp jno jl enterq push insl mov (bad) out in sbb pop rex.WXB (bad) je xlat xchg out pushfq fnop iret (bad) pop push mov idivb pop (bad) test sub or push test repz rex.XB xchg (bad) rcr (bad) sub rex.RX push pop fmulp adcl je out (bad) xor mov (bad) mov xor xchg fisubl sbb adc (bad) jge (bad) rex.WX mov jmp (bad) xor (bad) gs rex.RX (bad) add mov loopne pushfq sbb mov hlt or fstps (bad) (bad) xor out mov int3 (bad) (bad) jmpq jl (bad) mov leaveq rex.R lods pushq mov out nop (bad) adc ja repz xchg add (bad) adc (bad) push lods loope sbb rex.WX xchg movsl sbb jge stc cmpsb cmc adc fmuls and push out outsl mov or loop xchg sbb icebp movabs mov test sbb mov std xor and pop nop retq in sub xor lret xchg add rorl adc test jae jl loopne cld sub (bad) (bad) ss push jg (bad) lret cmpsb jp jae outsl mov (bad) jmpq cld cltd int cmp (bad) push sahf mov add mov incl test imul clc rol std (bad) lcall ja clc xchg sti and (bad) (bad) notl jb cld xchg clc movswl (bad) sbb and hlt mov (bad) jo mov push jbe retq adc (bad) rex.WRX movabs test (bad) xchg sbb pushfq or mov sbb adc xchg and sti out scas out std repnz sub mov xchg nop xor adc fiaddl mov jae loop int sub jne xchg xorl sbb jge movabs jrcxz rex and mov ja icebp rex.XB rex.R xchg or ror add lock (bad) push xor in repz lret push lret or mov addr32 fwait pop cmpsl fadds and jbe sbb int3 pushq mov in adc out rorl repz movsb rex.RXB lock mov out pushq cmp repnz cmpsb jmpq outsl fcomp add loope sar or rex.X bnd pop (bad) rex.WR adc movabs push pushq out stos shlb leaveq (bad) pushq (bad) insb movabs loop jnp test adc adc (bad) mov (bad) roll callq leaveq (bad) sbb mov fwait rex.RX (bad) xchg scas mov sbb rex.RXB rex.WXB add test sbbb and stos (bad) jrcxz push in and mov loopne or hlt rclb add xlat (bad) js and sub rex.XB in xor cld xor mov cmp jg (bad) sbb fimul (bad) xchg pop roll xor hlt add mov imul (bad) (bad) pushq lea cmc add cmp fcompl or sbb fmul loopne jmpq lock imul add lods or (bad) movsl outsb sarl jp js pop leaveq cmpsb sahf xchg fdivp retq push cs test rolb mov addr32 (bad) ds jmp retq xchg cmc xchg xchg mov (bad) sbb lret add hlt add xchg cld in hlt int lods xor (bad) xor repnz ja and and add sbb jle mov xchg rex.WRX (bad) adc or or out sbb rex.W in loope cmp mov (bad) out pop imul xchg and xor rex.WRXB (bad) sub mov mov int3 loope int3 int rex.RB repz sbb outsb ja insl pop xlat jno and rcr divb xchg shr (bad) mov lods sbb and xlat jae or jmp data16 xor out jrcxz jae callq fwait (bad) rcrl popfq repnz in sub sbb jmp adc (bad) cmc (bad) add fsubl iret pop rolb mov rex.WRX jno sbb in clc out jnp jo movabs sbb cwtl (bad) lods (bad) adc fsubs andb (bad) rex.WR xor hlt (bad) mov pushq icebp retq mov pushfq mov neg xor rex lods rolb outsl ja retq adc xchg test callq jb icebp subl rex.RB (bad) loop lods sbb movabs sub xchg fcmovne mov test jbe (bad) pop (bad) repz rex.WRX rex.RB movabs push jmp pop gs push and xor mov (bad) (bad) (bad) adc or mov cpuid addr32 cwtl xchg xor enterq je mov sbb int scas (bad) adc (bad) mov addr32 sahf mov (bad) iret sub out retq or lahf rex.X add adc cmpsb mov js fcom add adc out int mov sbb icebp repz ficompl jbe nop rex.R mov fcmove sub fsubs xchg pushfq xchg shr lret (bad) mov icebp push fwait test xlat iret sbb or xchg rcl rex.RXB rex.WRX (bad) cmp mov and pop (bad) (bad) repnz sahf mov (bad) outsb in push fmull test retq sbb rex.X (bad) mov andb cs xor jl pop mov mov sub (bad) or stos or fcmovbe mov sbb add (bad) es (bad) push movabs (bad) add out or mov in shr jp (bad) int mov adc (bad) adc xor (bad) stc cs stc mov xor (bad) jmpq sarb or push mov mov adc (bad) mov callq in sub or notb and lods xlat cld hlt rex.RXB xchg jo stc cwtl cmp rex.RXB pop (bad) retq adc sbb push mov or lret and hlt stc movsl xor rex imull xchg sbb stos (bad) gs rex.WRB mov rex.XB movslq rclb adc (bad) fnop add fwait vandpd in mov scas mov not xor test fsubrl add pop fwait sarl cmp adc ds insb mov cmpsl mov sub (bad) cmp and test mov rex.WB rex.R jnp (bad) int3 int3 push push gs in insl cld fucom xor sbb or pcmpeqd movsl iret and rex.WXB rex.RXB (bad) je sbb ficomp (bad) (bad) nop pop out pop fwait jp cmc adc or jp xchg rex.RXB shrb mul push movsb sti and adc sbb mov callq fistp out repnz fmul jp xlat movslq xor jo or (bad) (bad) adc xchg stc clc hlt xchg in adc fcomps fist jne outsb xor jp xor shrb test and andb rex.WXB rex.WB fsubrs sti in lahf insl lret add xchg imul nop (bad) xchg xchg (bad) jb mov push xor cmp movsl pop lock in movabs (bad) xor icebp bndstx xlat (bad) enterq (bad) mov ja in mov (bad) jl or (bad) mov (bad) pushfq adc sbb xchg xor repz jmp xchg rex.WR adc or sbb (bad) (bad) rex.WRX cmpsb mov mov mov lahf cld imul rex.R out or push sub rex.RX xlat hlt or pop adc and mov pop lods mov jno cmp and mov xchg (bad) rex.RXB fildl mov adc enterq adc add adc sub scas test jae (bad) pop xchg icebp mov add in sbb and (bad) sbb sbb lods sub mov rcl add sbb sub cld fs ja shrb movabs mov mov and lea (bad) jg movabs (bad) icebp (bad) scas iret movabs cld adc add jl mov nop pop cmp cmc push sub test fist ss mov cmp push rex.XB lock callq mov add out (bad) adc test (bad) (bad) lock rex.XB test add rex.WRB repz mov (bad) and xor (bad) and in incl (bad) repz or out mov cwtl test xchg ss hlt data16 sbb int hlt int3 int3 mov rex.WR mov cmpsb fs je int3 (bad) movabs cmp pop test repz test int3 xchg xchg je mov push add cmp (bad) out rex.R es mov xchg insb divl add adc jno insl movslq or jl sbb (bad) or negb (bad) adc sub mov xchg adc mov movabs callq js mov (bad) leaveq (bad) jle rex.W xor fldt cmpsl insl add sub (bad) icebp adc pop or or mov repnz xor (bad) movabs or rex.WRXB add mov rex.WB out mov mov mov add (bad) out xchg rex.R xchg jge push je jbe lock in (bad) enterq pop adc cli movabs lret idiv out sbb (bad) push jbe stos rex.R pop xor mov mov ja and je cmc xor xchg or pushfq cmp (bad) mov (bad) xor add jo and es test add mov xlat mul pop mov (bad) jno loopne or rex.WRB int3 test (bad) loop jo push je add jne (bad) pop cmp rex.WX push xor xor faddp (bad) and movabs repz add xor es test add (bad) xor pop xor insb xor nop andl push jmp mov cli mov rdtsc in push test loopne push add jg jb adc add mov iret sbb test lea cld mov mov xor sub repnz callq add xchg mov fstpt out test lock cmpsb cmpsl nop mov out and and add callq stc rex.RXB xor sbb or je cmp out mov push xchg insb jb int test mov sbb out loopne xor hlt jp lock std movabs rex.WRX jne (bad) mov (bad) rex.WRB outsl cmp jne adc cmpl stos cwtl nop (bad) mov (bad) imul rex.WXB or rex.WRXB (bad) repz jbe push rcr (bad) (bad) mulb (bad) test cmc sub xchg mov rex.WRX nop rcrb (bad) dec add add retq jrcxz xchg cmpsb in cmp fdivs subb retq mov in (bad) (bad) adc xor lods int and divl mov fs cltd gs retq test xor (bad) jl sbb icebp hlt jmp (bad) sbb xchg iret cmp rex.WRB cmp mov fld mov xchg mov fwait and pop sbb int3 sbb out jne mov xor (bad) adc imul outsl rex.WRB rex.R retq mov ror or icebp sub mov or mov test (bad) and add (bad) je rex.RB sub gs jno and rcr psraw xchg jno rex.B mov xor and add sub pushq repz pushfq cli rex.XB rex.B add sub jns or rcr sarl movsb hlt xor (bad) int3 push fildll jge (bad) sub jae (bad) mov fcmovu icebp nop mov repnz or rclb (bad) sbb mov xchg add adc loope (bad) in cli rex.WXB mov mov xchg movabs or sbb (bad) xchg and ja movslq adc nop cmp (bad) add icebp (bad) in ja xchg xor popfq jb (bad) decb lods cld rex.WRB in sub mov jno rex.RB in or clc test fstl cmp xor add (bad) sub jmp push rex.XB test xchg xor test test add cmpsl jl xchg and negl (bad) xor or mov fsubs test outsl and or jrcxz (bad) xchg test and int xlat movabs (bad) jge (bad) rcl jns or faddl mov rorl callq lret pop sbb xchg gs adcl cli (bad) hlt xchg adc (bad) test xor rex.B rex.WRX cmp or rex.WR movslq clc fs je xchg rex.WRXB jrcxz add (bad) mov adc hlt clc mov adc test (bad) imul loopne (bad) push imul jle movsb insb loopne add movslq mov rex.R rex.WX in in outsb repz sti add (bad) callq xchg (bad) fs (bad) (bad) sbb fstpl jne lods rex.WXB push sbb and test rol cmp push out xor push xlat fcoml or jo popfq rex mov (bad) fdivrl pop shl xchg mov xchg repz cltd mov fcoms (bad) mov (bad) xor push mov (bad) or hlt movsl retq mov push rex.WR xchg (bad) push outsl (bad) gs jo adc test lock adc add jo fldl out (bad) cmc jrcxz movsb push iret rex.WX xchg add cmp fs (bad) adc or in rex.WXB (bad) shll hlt stos test int cmp ja (bad) loopne xchg addl loop mov test movnti mov std fs lahf movabs (bad) in jp xchg jg or test div ja pop retq loope mov pop or add testb neg (bad) gs cwtl shll lret (bad) pop loope mov mov cmpsb cmc mov mov rex.WR ss mov fs or adc (bad) es and and mull (bad) xor repnz cmp loope movsb in xchg movsl xor cmpsb out nop roll (bad) add push sub sahf (bad) push in int3 (bad) mov xor (bad) in adc mov push je loop cmpsl push je int3 jno xchg out xlat jbe cltd or cmpsl rep sub mov (bad) callq sarl in callq cli xchg stos loopne je and (bad) sti xchg mov sub mov mov (bad) and shr adc cmpb movabs (bad) lock rex.WXB jg out cmc cwtl add (bad) fnop add je mov lock rcl negl cltd rex.W shll xor xor and (bad) je gs (bad) xchg (bad) loope push lock sub (bad) out jae neg xchg iret icebp sti test adc mov (bad) repz (bad) addr32 sub jno sub add (bad) (bad) (bad) push je push mov rcll (bad) icebp xchg (bad) out xor xchg add adcb test rcll cs lock pushq mov xchg hlt lret (bad) cmp lods jo addb push adc jle,pt repnz repz rex.RXB out jmp iret fs fs adc test (bad) jo add xor fcom mov jae movabs (bad) mov int3 lods mov sub xlat pop test adc test jl (bad) rolb hlt xchg mov sahf or (bad) (bad) add or hlt sbb or shll add rorb shl in (bad) sbb cmpsl fcmovb push sbb (bad) rex push rex.R cltd jrcxz rex.WRB xlat fcoml sbb mov rex.B rex.WR or jno fbstp movsl rex.WR mov addr32 adc xor fs or xchg jmpq stos enterq nop adc frstor mov mov je rcl rol (bad) xor (bad) (bad) (bad) cltd push mov fs sbb pushq in lock int3 mov mov pop andq push sub scas or and mov or nop xchg (bad) adc adc rex.WR xor fwait (bad) out mov jnp xor xor mov (bad) movsl retq repnz or imul es repz rex.WR outsl rex.W push data16 rex.WRX push xchg xchg stos lock or (bad) mov sub mov retq mov jrcxz add fs (bad) (bad) adc jbe (bad) rex jo jl shrl mov out push hlt add xchg mov cmpsl adc shl add je cli (bad) xchg xor mov (bad) mov (bad) (bad) not pop cli add jmp (bad) push or shll add imul cmp rex.WXB gs (bad) adc lods cmc mov lret (bad) mov jmpq insb and fs fstl shlb pushq mov (bad) or mov stos scas cwtl icebp xchg (bad) or testb shlb je (bad) or cmpsb notl push int push xor add rex.WR je (bad) rex.WR xchg mov subb js int andl rclb rex.WXB xchg stc xchg and (bad) stos fwait mov rcrb (bad) sub pop adc push mov es push rex.WR gs pop test add pop sbb pop (bad) rex.WXB rex.RX fisttp and cld jge push add cmpsb callq jne in ja out sti xchg (bad) mov mov scas or (bad) (bad) xor adc addr32 sbb or (bad) je rex.RX xchg jno mov mov sub add sbb rex.WRX xor add push jno rolb jo jb std loopne sbb mov xchg (bad) movabs xchg lock movabs rex.WRB icebp movabs lret xorl rex.WRXB rex.W cmpsb es push retq pop retq repnz mov (bad) mov push xchg rex.WX rex.WXB mov add xchg mov (bad) fs mov data16 lret and jns repz jmp cli mov jbe cmpsl ja rex.RX rex.RX xchg gs xor (bad) ja or out (bad) sub cmc cmp or xor or shrb out outsb movabs (bad) nop mov mov (bad) pushq fs (bad) rex.W lods add jo mov cmp mov mov mov (bad) pushq pop (bad) (bad) sti mov in data16 out sbb in iret jmpq shl xor mov cltd mov iret jb (bad) and xor add enterq iret rcrl xlat mov push push add lea jle rex.WB add xchg out out fs push or gs rcrl jmpq (bad) jp mov repnz lret stos mov rex.RX mov mov (bad) movabs rex.WR push mov out in lret jo pop (bad) xor add mov in jns repnz imul pushq int3 scas out mov (bad) (bad) jp rol rex.WXB data16 (bad) and xor rex.WRB or rex.WRB (bad) mov mov jo lock xor mov outsb test (bad) pushq jge adc (bad) fildll (bad) addl movsb jmp (bad) mov (bad) (bad) and scas pop std lods push (bad) in lea (bad) in add xor mulb xor pushq rex.W movsb je sar retq rex.WX sub movabs retq loop xor fild sub rex.WX test add retq mov orb sbb movabs jne sub sub es scas adc xchg rex.X mov iret xor hlt cwtl rex.R push sbb push add (bad) sub xor push sti jne (bad) rcrb cmp or sub pop mov pop cmc jne mov jl add mov imul cmp icebp and (bad) roll in xor mov movabs bnd rcl and out (bad) mov sbb rex.R pop mov movabs or sbb (bad) pop loopne sbb (bad) fcmovnu pop rcr (bad) lods jne fistpl xchg push (bad) mov jmp or xor mov adc or callq (bad) je (bad) add movsb pop xchg sbb rex.RXB clc push jns mov fnstenv and imul pushq xor rex.RB loop and loope xor divl xchg rcrl rex jl rex.RXB xchg insb rex.WRX and mov mov lea out loope pop mov test xor (bad) jne rex.R jrcxz mov test jge rcrl or (bad) cld leaveq sub mov icebp enterq rex.XB int outsl pushfq movabs loope add fstl jne cld (bad) shrl (bad) pop es in adc mov rex mov (bad) rex.WRX es jle and (bad) jmpq add mov (bad) push lret xor test jmpq outsl (bad) (bad) movabs xor (bad) fisub pop xchg pop in loop bt movabs sub fcomip sub (bad) mov movsb cmpsb shrq pop cmp iret jmp pushfw xadd pop (bad) pop in adc out (bad) add loop xchg loop or loop sbb vmovupd sub (bad) retq (bad) cmp rex.RX insl movabs fsts xor and leaveq rex.WRB fidivrl mov and xchg stos sub rex.RB in (bad) xchg (bad) push imul fxam mov (bad) jne mov (bad) jmp test ds (bad) rex.XB (bad) xchg and (bad) leaveq mov mov rex.RXB loope fstpt push popq hlt stc (bad) mov rex.RB notl mov fucom push xchg lock cmpsl xchg out jmp push jge loop fistpl (bad) lcall sti imul xchg shl hlt movl cld in mov fsubr add sbb cmp mov movabs mov stc cs mov jbe icebp in popfq iret (bad) adc sub rex.WRXB or popq imul mov idivb scas (bad) pushq (bad) adc mov js fmull (bad) testb or mov mov rex.WR in push ss iret rex.W mov test lods rex.X iret hlt push sti rorb (bad) push (bad) imul sub mov add mov jmp push sub sbb shrb jne mov jne fs mov mov cmp stc ss adc or (bad) xchg mov outsl push fsubrs in rex.X mov cld xor sub loop,pn push lods insb pop es or jno add fdivrs cmpsl jae add add movabs negb adc rex.B pop adc rex.B cmp (bad) mov (bad) jmpq loope add sti or xor gs jp in out (bad) pop adc and movabs js cli cmp (bad) mov (bad) pop (bad) (bad) pop (bad) (bad) xor (bad) cs idivb (bad) callq push xchg repnz pop jnp sbb (bad) lock mov (bad) clc mov enterq retq rex.WRB rex.W rex.B repnz idiv lahf jp (bad) out xchg or adc pop roll fidiv add outsb rex.WRX fistpl jne (bad) push add add xor mov movabs rex.WRX popfq fistpll push and cmp adc stos (bad) cmp loopne mov icebp mov xchg add rex.WB add mov (bad) pop or in fwait cmp stos rex.B loop (bad) push mov pcmpeqw add (bad) rex.RXB rex.WRX add add push cmp (bad) adc add in test in rex.W fmuls (bad) rex.RB sub rex.XB mov pop rex.WRB (bad) in adc adc or (bad) jrcxz xchg lods mov pushq (bad) or mov xchg push enterq mov push (bad) callq xchg testb out add jbe (bad) (bad) mov sub enterq rex.XB sbb in loop jno xor popfq push scas (bad) rcll and int3 push sub add add jp jns (bad) pushfq xor fcomip out (bad) (bad) xchg (bad) and adc out sub (bad) mov (bad) rex.XB and jne add or or jae and push mov pushq pop in idivl movsb mov push adc stos mov (bad) nop adc push std add (bad) lahf and test (bad) lret (bad) push insb enterq jno in sbb jne (bad) ja xchg and add rex.RXB repz callq (bad) int3 mov pop jp (bad) fstpl (bad) jo jmpq fwait and (bad) iret jno adc rex mov (bad) popfq or faddl adc jl push pushfq or sbb test mov adc (bad) in or (bad) mov mov mov iret hlt jge lock rex.R mov jne cmp mov fadd retq xchg int rex.WRB rex.RX shlb rex.W cmp sbb mov decl rex.WRX in xchg callq rcrb mov mov xchg xchg and (bad) jne sbb push xor je push push add jg cmp pop xchg movabs loope fs sbb rex.RX negb jge (bad) adc (bad) test int adc stc pop xchg sub movl out notl test mov (bad) insb and (bad) jne (bad) notb (bad) jrcxz cmp (bad) jne jp sti sbb adc push sbb jnp (bad) push xchg jne loop jno lock adc in xor (bad) loopne iret je cltd (bad) addl push xor (bad) in stc (bad) (bad) jae mov mov adc decl jne (bad) (bad) mov sub int3 pop movabs movabs movsl test fwait shll negl (bad) xchg pop rex.WXB (bad) adc or xchg adc lret xchg add xchg rex.RX xchg pop cwtl rex.WRX lock (bad) cli lock (bad) sbb add or xchg pushq add sub jl sbb xchg xor (bad) mov add cmpsb (bad) out int3 enterq lock rex.B repz push jbe cmp xchg in xchg scas mov clc retq and (bad) stos test sarl cmc fcmovnbe mov xchg stc scas adc xchg or shll xchg fwait xor test jmp stc jrcxz insl jne rex.WRB movsb cmpsl add adc xchg rclb mov mov out sti xor cmp xchg mov (bad) cmp stos rex.RX lahf (bad) notb adc rex.RXB mov adc cmpsl jo js jne ror test jno clc loop hlt jne and jno adc (bad) sbb lret fildl cwtl cmpsb adcl inc je je mov leaveq rcrb hlt (bad) mov xor sub imul sbb lea retq in adc jne fcoml jae xchg push pop in mov (bad) fwait rex.X lret mov movabs lret movabs jo rex.WXB ficom (bad) cmc rex.WXB jmp sbb jne (bad) mov out mov jae cmp cmp movabs in fwait pop pop jp pushfq cld movabs cmp (bad) sub mov jne lret int3 sbb push xor (bad) add lret (bad) rex.WR push add adc or lock lret hlt mov (bad) sub or pushq xor sub (bad) (bad) (bad) cmc rclb lahf (bad) outsl rex.RB rex.WRB mov stc fs sub icebp jno cmp icebp rex.WX fcomps (bad) iret subl rex.RB icebp (bad) rex.RB hlt xor mov jmpq add xlat int3 fsts imul out mov (bad) std mul and jmp mov mov xor sarb fcoms cmp (bad) mov mov sbb mov jnp sbbb movsb lock adc or push loope xchg sub mulps jne fbld mov roll loope (bad) xchg ss mov retq push adc adc out (bad) xor mov js lods cmp (bad) insb mov xor (bad) out (bad) outsb rex.WR mov and (bad) (bad) out out (bad) jns jo xlat rex.R shr movabs (bad) pushq fwait pop (bad) push mov in icebp fsts mov rolb or out jg or enterq (bad) pop rex.RB mov addb xor (bad) (bad) pop repnz add (bad) (bad) push movabs xchg cmpsl xor lahf pop jae xchg pushq (bad) add outsl nop mov (bad) (bad) (bad) adc jg clc (bad) pushq fcoml jmp outsb (bad) mov fsub fwait jge xor fist in (bad) pop rex.WRX mov rcrl (bad) insb cld (bad) repz jp pushfq fnstsw sub (bad) pushfq sub push stc cmpsl fldt cmpxchg repnz rex.WRX mov out and and loop lahf adc sbb cmp mov add rex.XB xchg (bad) lock fwait cs add ja (bad) loope insb jne (bad) xor add cwtl divl xor jno (bad) js rex.RB mov in cmp mov sahf out mov add movabs mov or push mov (bad) rclb or (bad) and xor xor rex.WB sbb adc or mov in or xchg hlt jl (bad) or repz pop out and out (bad) enterq adc mov mov lock mov jmp and (bad) out (bad) iret js (bad) int3 (bad) lock rex.XB in (bad) imul push or adc rcll jns enterq sbb (bad) or rex.RB add xchg and rex.WXB xor (bad) (bad) cmp jp out xlat adc std rex.WRXB mov mov test adc xchg jbe pop jne jb in fadds movabs rex.WRX psubusb xlat sbb rclb jne and in cmc (bad) rex.R push or rex.WRX add stc test decb and pop cmp xor stc je mov fsubr add jrcxz stc add fldcw in fcomps addr32 int push adc cltd rex.RB scas retq (bad) cli sbb and push push (bad) fcomp push lods mov rex.X in out (bad) add jne mov repnz jrcxz push test cmp mov sti icebp cmp or enterq add jne push (bad) repz and mov testb (bad) sbb (bad) imul jno lahf ds mov add fnstcw test (bad) push shrb je iret movslq rcll cmp js scas (bad) imull add out xchg test cmp and jno int3 decl movups cmp or add sbb mov and jno test cltd mov jno scas movslq xchg or or cmp mov sti push jne jmpq icebp (bad) rex.WX xchg (bad) fistp loope sahf sub jae hlt jbe sub jns xor add add adc stos (bad) jae xchg fimull and rex.WR test scas repnz mov jp xchg (bad) pop movsl data16 or push in rex.R jl movabs rex.B gs (bad) (bad) pop ss (bad) rex.WRX sbb repnz (bad) (bad) out xor (bad) mov sub rex.RXB add or or mov rex.WRX fisub test insb callq mov adc xor rex.WRXB add cmp test (bad) adc or lret sbb stos imul loop xchg (bad) push xchg xchg rex.RXB sbb rex.XB test movsl sbb (bad) mov xor (bad) (bad) or rex.X test setle sarl xchg stos jl callq cmp repz lods imul jne jns pop (bad) lret pop pop (bad) clc mov (bad) out int and jbe loopne fdivl jmp jmpq fbstp xchg add mov std (bad) lahf push out mov or jae adc mov addr32 mov rex.RXB out ds loope rex.WB addr32 retq stos callq int jge pop jmpq adc leaveq imul (bad) mov mov scas cmc rex.WXB iret pushq adc std cs jnp adc lahf vpsllw pop push loopne (bad) (bad) fdiv (bad) jnp lret jbe sar rcrl imulb push jrcxz mov and xor (bad) repz pushfq movsb add mov in or bnd push out andl movabs js pushfq xchg xor fwait jne (bad) rex.WRX rex.WR testl xor xchg in stc (bad) mov (bad) cwtl and and fcoms jne outsb jmpq push jl or imul fdivs jmp and rex.RX (bad) mov rex.XB jne jl jp mov pushq shrl push jne xchg loopne (bad) (bad) adc leaveq je clc js out lahf (bad) fwait sbb xchg mov mov add jbe and sbb xor imul sti (bad) sub (bad) pushq push or sub cltd fcomip jle lahf jmp icebp sub pop (bad) jmpq in push rex.WRB hlt add rex.WRXB (bad) adc in add outsl repz scas or sub add sub cmp pushq add ja sbb lret mov xchg test (bad) in movabs add lea movsb test sbb (bad) movsb add xor test cld cmp mov pop imul rolb repz (bad) lods rex.RB data16 (bad) sbb cmp xchg pop or mov cmp jae rex push stos scas retq mov jl test adc (bad) cmp jmpq sar hlt xchg sar (bad) callq (bad) sbb cmp movabs (bad) lods and or xchg or cmp stc hlt jle imul enterq in (bad) mov pushq xchg lahf pop and (bad) callq cmc (bad) add push enterq divl add mov loop or xor lahf xchg rex.RXB xlat and loopne add pushq orb (bad) sub push rex.RXB push xor rex.XB imul (bad) lret cld (bad) testb imul notl adc callq mov mov lods xchg jrcxz lret out (bad) (bad) loopne push mov imul push pop loopne add imul add (bad) (bad) cmp rex.WRB shlb shl (bad) xlat sbb retq (bad) sbb sub or jne enterq pushfq or adc (bad) mov (bad) mov int3 jle pop mov sub (bad) cmp std in jrcxz (bad) cld jl xor lret out add xchg mov adc test loopne adc fisttpl cmp (bad) (bad) jmp outsb cli sbb jne nop pop jne add add (bad) es xchg pop xor add sbb adc or rex.W (bad) adc shrl push (bad) or (bad) test adc adc xchg cmpl clc std xchg (bad) loop adc ja test or sub nop icebp jl icebp in in (bad) add (bad) xchg xor mov (bad) lods cld (bad) cmpl jmpq fadds (bad) pop sbb xchg jmp add sbb std jo cli callq jl xor enterq add xor adc mov or (bad) xor (bad) (bad) test fs test rex.RB lret or add xchg in (bad) jnp or rex.RXB add sbb adc push and and jmpq test or and jbe or scas es xchg enterq add cltd mov mov push pushfq lock adcb xchg (bad) rex.WR es lods outsb faddl hlt xchg (bad) bnd adc jno and out jne (bad) push sub (bad) (bad) ja test shll cmp repz (bad) repz (bad) lods add pushq cmp stc rex.WXB in jbe add (bad) add lods and js (bad) add lret leaveq adc std cmpsb (bad) je mov pop and push nop mov rclb (bad) repz sbb cwtl pushq out imul retq mov (bad) (bad) loop xchg insl rex.RB es pmaxsw jnp and add (bad) cmpsb mov idiv pop (bad) (bad) or jns adc or or callq sub or or mov rex.XB pushfq sbb out callq mov (bad) imul push negb (bad) mov cmc add mov in mov cld (bad) xor stos clc cwtl rex.R push lea xchg lods mov (bad) sub jae or fucom mov lahf or (bad) je repnz xor adc and nop (bad) mov movabs push sbb stc (bad) movabs (bad) stc clc lods icebp (bad) xchg xchg push adc neg pop adc adc rex.WRB test (bad) hlt cs or lahf jno jne scas sub data16 repz rex.RXB test xlat adc push (bad) cmp adc (bad) adc rex.WRXB std mov jg lods xchg sbb sbb lea lret mov fwait enterq stc or test sbbb imul out movsb add int pushq popfq rorb retq mov sub jnp xchg scas push in xchg (bad) xchg pop or out loope mov xchg mov jne mov xchg cmp xchg out test repz jl stos in clc or and out sti xor (bad) hlt (bad) ucomiss sti adc int3 in incl mov repz jbe sbb xchg adc sub (bad) imul gs cmpsl fcompl cwtl jle (bad) mov mov jne jge jo jl shrb rex.WXB sbb (bad) mov (bad) in test (bad) fcoml (bad) jno adc jrcxz (bad) in xchg callq imul (bad) stc (bad) cld outsb pop xchg (bad) xor or (bad) rex.W fnstcw lret mov xor cmovl movabs jae mov jrcxz (bad) xchg or in (bad) rex.XB repz xor pop (bad) rex.WRXB ja in xor or xor fisubl mov jmpq jns adc rex.WRB jmpq (bad) jp rex.WRX (bad) out movsb leaveq outsb rex.WB addl fbstp lock xchg jl jnp push jne stos in callq test imul adc cmpsb insl sbbb rex.WXB idivb clc pop (bad) lahf mulb xchg popfq jns jle pop stos (bad) push or mov and or fcoms lahf jg sbb loopne (bad) jo rex.WX lahf add add fsubrl retq rex.WRXB repnz rex.WRX scas retq cld jne mov movabs fbld adc jae sbb rol repz flds add adc nop stos out rex.XB lock lock fst retq (bad) mov test enterq or sub or xchg addl (bad) roll out (bad) int3 add fucomi push nop xchg test xor out (bad) nop mov or imul (bad) push lea scas rex.R mov stos lret cld rex.WRX cmc sub movsl (bad) jo stos xchg ficom rcl xchg (bad) hlt or int (bad) (bad) movslq rex.WR xlat add (bad) (bad) out xor sub adc jne clc cmp and (bad) (bad) mov callq cmp xchg xor or js jne in pushq mov mov (bad) (bad) rex.WRB (bad) jne sub add out (bad) (bad) add pushq imul fisub and (bad) icebp add jg cmp or lcall adcb jb orl add pop nop ja or imul or mov rex.X xchg mov addl loopne xchg shr push (bad) ja add and rex.WB jl out cmp sahf in pushfq mov je movabs push in xor rex.RB pop mov cs rex.WB nop repz pop or rex test lret (bad) sub (bad) mov adc cmc scas test movabs icebp or lret xlat rex.RB cmp scas (bad) imul cmp jrcxz repnz mov rex.WX jne push mov retq rex.XB in jbe icebp xor jmpq movslq jo out enterq push pop (bad) or sbb int xchg test add xchg in lahf mov xor rex.RB rex.RXB cmp cmp xlat rorl rex.RX int repz add loope divb fwait outsb (bad) and leaveq xlat cltd mov xchg mov jne push mov mov push imul in rex.X int3 data16 cmpsb repz or add or add sar jno (bad) xor cli movsl jno xor or (bad) xchg push clc movabs int lea cmp fmull je and adc xor (bad) adc (bad) rex.WRXB rex.WB xor int3 enterq test lea xor (bad) mov (bad) sub (bad) mov sbb mov xchg push (bad) sub xchg jrcxz mov and xchg mov (bad) outsb fdivrs mov pushq faddl enterq pop repz rorl imul roll add loopne mov in or fstps lods or xor insl sbb rex.X sub repz ss and jno rex.R outsl enterq add popfq int testb mov lods add mov fcomp loope jl sarl int3 in lock adc mov rex.RXB lock (bad) lcallw js xor (bad) pop rex.WR sbb rcl sub (bad) fnop imul push clc xor rex.RXB rex.B rex.XB data16 lock xchg jno lret int3 jmpq jo mov fdivrs scas stos cld pop or add mov lods xchg jg cld sub add mov or adc (bad) push add mov sub callq mov or and mov movsb repz loopne (bad) lods stc je loop hlt shll test adc callq sbb sub (bad) (bad) (bad) (bad) rolb movabs rex rex.X (bad) mov xor xchg mov int3 repnz or rex.WR xchg rex.WXB (bad) (bad) sti sti int3 add push rex.WRXB imul lock cmp enterq mov sbb mov movsl (bad) rex.WRB adc mov jrcxz jg je jne movsb mov out imul (bad) jrcxz sbb xchg repz hlt jne fwait sbb movabs jrcxz rex.WR icebp sub xchg sub xchg rcl rex.R fistp movslq mov je and std rex rex jbe scas sbb rex.XB (bad) jno retq js adc rex.WRB adc push sub or js adc pushq xor repnz (bad) stc imul insb pushq je push je cmp xchg (bad) ja out mov sti cmc in imul and adc (bad) or rex.B push ss rex.WRXB rex.XB adc mov hlt fstpl sbb (bad) jno mov (bad) out (bad) lock out loopne (bad) in pop js sbb sub sub shrb (bad) or movabs rex.XB loope out jrcxz sub rex.WRXB testl fs imul mov or add (bad) xor or jl imul (bad) mov out xadd xchg repz (bad) rex.WR repz sbb (bad) push mov (bad) cltd repnz sbb loop fstps and jl sar adc add (bad) xchg out sbb (bad) push mov jno mov pop mov jnp and stos xchg jl adc hlt (bad) out and pop (bad) iret fucom push (bad) jne movabs pop mov rex.B rex.WR (bad) sub mov sbb (bad) popfq in sub clc (bad) jns stos (bad) rex and sub iret scas (bad) adc rex.RB lea ficompl pop pushfq (bad) fs add (bad) mov out add push (bad) loop fistpl jns adc repz int int3 add lret lret cwtl rex.W push cmp outsl in mov sub rex.WX lock stc xchg (bad) lea (bad) int3 in mov rex.B (bad) rex.RX rex.RXB rex.RX rex.R rex.RX (bad) (bad) sbb (bad) fsubp mov (bad) in (bad) sub mov (bad) shrb mov jo rorl scas (bad) push data16 (bad) imul xchg sub pop movslq (bad) jno (bad) (bad) (bad) push (bad) push movabs testb nop std movsb pop mov and or rex.XB (bad) xor shll callq add ja xchg rex mov (bad) sbb mulb mov pop movsl add imul pop rex.XB fsubl outsl or loop lock jne xchg enterq mov adc cmpsb sub jne add xchg pop (bad) (bad) cmp pop mov and cli scas or xor mov pop jne fildl movabs stos fistp cmpsb movsl push retq (bad) out pop rorl jne mov rex.WR rex.W rex.XB mov mov outsb (bad) rcll fadds add jmp adc rex.XB movslq adc je lret (bad) sahf fldt rex.WXB adc insl add and stos xchg mov mov mov push rex.XB testb fisubrl jns sbb cmp fdiv out fstpt nop mov xchg mov (bad) jg pop addr32 imul sbb loop insb sub rex.WR addr32 cwtl (bad) mov loopne mov (bad) testb movabs jrcxz pop imul or or stc fsub (bad) sbb jg cli rep in int xchg int sahf (bad) xchg cld cmc scas (bad) adc (bad) jle cmc hlt addr32 rcrl pushq int3 add fisttp rex.WR and mov mov cmpsl or push cmp pop pushq (bad) sbb enterq push iret push (bad) or repz pushq es add repz (bad) jne vpaddb jmp fcoml and mov adc out callq add xchg jg jmp sbb (bad) hlt out addr32 (bad) add sbb hlt js or fwait jmp cmpsb leaveq insl cmp jl leaveq pop adc cmp in jno (bad) sbb andb retq jnp rex.R xchg adc adc xchg rex.WRX clc or mov faddl adc test xchg mov sbb lods rex.XB movsb imul (bad) fist (bad) add rex.WRB add cld js sub xor rex.WX loopne lret fwait shrb scas movabs mov out int (bad) (bad) rex.RB (bad) mov stc (bad) stc pushq rex.WB ss mov jae cmc lock rex.WRX repnz push std jrcxz pop leaveq xchg cmp or movl add divl in (bad) mov add shrb xor cmc rex.WXB (bad) or add (bad) leaveq lea mov xor (bad) in rex.WXB pop insl loopne or out xor (bad) js xchg mov xlat rex.WRXB repnz (bad) sarb mov nop imul pop rex.R add (bad) int movabs lock je mov mov clc (bad) rcrb movabs xor retq movabs push ficompl movabs (bad) rex.WB lods cmp (bad) sbb sbb sbb fadd imul rclb or in je leaveq jns cld xor pushq loope sub callq pushq (bad) (bad) jg out mov push mov or outsb in fs repz mov sub (bad) rcr jge (bad) (bad) mov mov fisubr rcr rex.WRB std xor in adc negl repnz xchg shlb or and nop mov loope fstl (bad) rolb (bad) (bad) (bad) cmc jbe inc hlt out outsl rex.RX lods rorl xchg mov (bad) (bad) (bad) out test js enterq test or repnz mov sbb push jo addr32 xlat stos fwait insb mov rex lock adc jbe movabs test lock loope test std mov mov or (bad) rex.XB mov add repnz and mov out jbe retq jno (bad) fsubrs rex.RXB cwtl (bad) lock xchg movsb mov cmp hlt sbb mull in fnstcw pushq mov in test (bad) hlt (bad) lahf xchg pop xor (bad) cmc bts movslq add lret fstps lret ficomp retq repz and xchg frstor (bad) insb scas adc (bad) je cmpsb (bad) (bad) int rolb lea xchg mov sub and cmc std insb and je out sbb (bad) (bad) (bad) mov (bad) pushq pushq xor push (bad) xchg or or xchg or or jo mov jmpq in scas xor xor lea pushfq mov out cmp sbb nop xchg push mov nop cmp jge (bad) jl rcrl cli xlat rex.X int clc enterq outsl jbe mov jne enterq add rex.RXB lea hlt test mov jg and (bad) sub jno rex.WB mov in pop xor jmp sub (bad) mov and pop and xor out clc and rex.RXB lock hlt cli in cli add sbb xchg imul xor push fisubrl mov movabs and push xchg fdivrp (bad) hlt add scas xor mov cli insb setge popfq in add rex.X mov popfq cwtl fdivl rex.XB or mov fcoms rex.WXB int3 sub (bad) sti (bad) mov and jo (bad) adc or in add in xchg adc fdivr xor sti retq jrcxz adc or sub femms push push mov imul rcrl movslq xchg jne push sub rex.XB rdmsr add xchg rcr lock cmp and mov ja cmp (bad) xor cmpsl xorb add jbe sbb add or or cld lock repz xor adc pushq (bad) (bad) xchg (bad) jbe vpbroadcastw rex.B mov push loopne add sarb (bad) js push ja enterq stc add (bad) addb iret sarb addl xchg lock (bad) testl leaveq cld test sub rex.RXB rex.WXB add add or xor jrcxz mov cmc mov or (bad) sbb (bad) pop jno (bad) sahf in cmc (bad) jb adc imul rex.B push (bad) add mov mov add xchg (bad) push iret cli jb hlt (bad) rex.WRXB (bad) mov sar rex.XB mov and jrcxz loop imul xor rex fsubrs (bad) (bad) adc sbb sbb xchg (bad) bswap and (bad) jo fdivrs push js hlt xchg movabs fild mov push repnz iret jbe push enterq mov test sbb jns adc (bad) or (bad) sub (bad) fmuls cld or fldl2t jno rex.WRB test fsts sti adc (bad) rex.WB pop sbb (bad) push std int3 jne fdivrs (bad) and cmp rex.XB and sahf (bad) pushq stos cmp add out mov punpcklbw xchg or repz xchg mov js loopne pushq mov add xchg insb (bad) loope or es cmp adc or or xor adc rex.WRX rex.RXB jb rex.RXB (bad) and stc xor sbb icebp in rorb (bad) insb retq fldenv hlt xchg sbb cmp std adc in adc cmp es push icebp rex.WR (bad) popfq mov mov sub mov adc jl (bad) (bad) cmc rorb xor (bad) (bad) fildll or nop (bad) jge sbb cmp stc jno enterq xchg or cmp jbe jns or in sbb cmpsb insl sbbb or xor adc rex.RX add and or and retq cli out xor (bad) or fs (bad) jmp (bad) hlt xor and test (bad) mov hlt sub outsb push rex.WXB in push pop test adc rex.WX retq rex.W pop xchg add test sbb mov pushq sbbl sbb loop mov (bad) sbb push sbb (bad) sbb mov rex.WX adc adc mov icebp mov (bad) rorb mov (bad) repnz out outsb rex.WX xlat cmp sbb stc cld outsl xchg xchg xor and cmp xchg faddl movslq rex.WB mov mov (bad) mov jno lret xchg cwtl sub imul int3 (bad) insl in repz (bad) rex.WX enterq fisub int3 (bad) adc jne adc imul (bad) fyl2xp1 sbb (bad) fwait (bad) fsubl je rex.XB cmp (bad) (bad) out xchg flds in rex.X push in mov xor insl callq add cmp (bad) mov cltd icebp pop sbb int3 (bad) testl rex.R je es push (bad) mov lods rolb lods rclb je cwtl push rex.WR pop jg jne adc in cld adc imul test (bad) test insb (bad) xor mov lahf pop push inc jecxz xchg mov (bad) imul and jle popfq xchg adc adc stos (bad) add callq out jp (bad) mov mov jg fcom cld push (bad) or fwait nop sbb mov adc xchg and jle rex.WB jp xchg mov in leaveq enterq xchg push shrb test in shrb adc rex.WX mov enterq (bad) je xchg jl es and cmp fsubrl push sbb xchg (bad) rex.W adc (bad) rex.WR fs rex.WRXB rex.RXB sbb mul or movsb (bad) loopne add cmp xor xchg pop jmp lock movabs rep pushq add lock jp int (bad) fistpl jl sbb test in rex.XB rex.RXB xor xchg pushfq rex.WRXB adc jmp rex.X sbb add outsb nop in (bad) pop (bad) test and pop cmp pop rex.WR (bad) or mov add cmp adc int3 rorb and retq cmp (bad) or fwait (bad) xchg add or (bad) adc (bad) (bad) cmp retq seto std mov jno hlt mov lock stc (bad) divl (bad) xchg int cmc (bad) (bad) pushfq retq jl mov cmpsb loopne test or psubusw jrcxz loop imull pop addb (bad) jno xchg mov mov or imul xchg fsubp or gs subl cld (bad) sbb xor ss push adc cmp or xchg (bad) sbb pushq jge rex.RB cmpsb sub mov repz lock out leaveq (bad) xchg faddl mov add adc (bad) (bad) push rex.R rex.XB mov rex.WRXB incl jmp movabs mov xchg push enterq push stos icebp (bad) mov push fldcw rex.WRX rex rcl pop icebp std hlt adc mov or jg adc movslq sti sbb mov and jmpq imul (bad) sub and mov movabs js rex.R inc mov adc (bad) hlt push sub (bad) pop add rex.RXB leavew rex.B es and xchg sbb sbb pop test test popfq add mov push mov (bad) or adc mov or mov adc (bad) (bad) (bad) mov in sbb rex.R mov movabs cmp sub (bad) icebp (bad) and mov test rclb fnstenv (bad) xchg jmpq cld xchg outsl xchg scas cmp sbb cld xlat movslq jp js jl mov mov fucomip jb adc cwtl jno xchg mov fistl leaveq (bad) (bad) test (bad) jmp adc xorl rorb jo (bad) or vsubpd rclb lock je sub outsl in mov (bad) movslq mov mov xchg push xor sub mov pop in push mov mov icebp rex.WX movsl cmpl retq fistpl lock (bad) mov pop test xchg xor mov (bad) ja test loop imul rex.WR jns rex.RX std push scas loope or mov imul fwait xor (bad) rex.W sub fmuls rex.RX in in rex.WX rcrl in xchg xchg adc add int mov xchg add xor mov xor add fucom rorb mov in push cmp movslq sbb add rcr int3 in mov mov ss fadds movslq gs loopne (bad) rex.RXB es lock xlat rex.XB gs xlat rcrl sbb sbb in fcompl enterq sub mov and imul and pushq je idivl jmp es stos mov frstor retq (bad) out int retq rex.WR mov (bad) cld idiv test hlt (bad) pop push ds in (bad) xchg inc rex.RXB adcl lock in fisubr push (bad) adc retq repnz rex.WR lea in add xor (bad) cmp jns scas rex.WXB fistpll (bad) xchg (bad) test push imul callq xor pop sti sbb int insb push or xchg (bad) lret test nop or rex.RXB jg jrcxz ss mov add sub sub pop rolb cli xchg lods scas enterq xlat cmp pop (bad) adc pushq xchg sbb add nop jne,pn sub push callq adc adc rex.XB imul mov lret rex.R add retq test lret scas (bad) pop xor sbb rex.RXB adc sub loopne mov mov movslq test mov rex.WB int cmp imul pop test mov (bad) icebp mov and xchg adc out mov xor clc (bad) rex.W pop imul and cld idivl (bad) xchg sub adc xchg sti loop je (bad) xchg (bad) sbb orl sarb stc adc push jno (bad) mov lock in (bad) sbb repz adcl (bad) add mulb adc shl leaveq std int3 (bad) hlt add jno jne adc adc or (bad) outsl imul xchg es or sub clc leaveq movslq rex.XB clc lods jg xchg sbb insl (bad) repz and lret xchg hlt addr32 adc popfq dec (bad) hlt adc adc (bad) pop (bad) push sbb jle or test imul jo pushq or hlt outsb int3 outsb mull cmpsb sti (bad) mov in rex.RB cmp enterq movsl (bad) mov or sbb mov movabs rex.XB add pop pop lea and insl repz (bad) adc add or or (bad) xorq jns hlt callq (bad) mov or pop imul add sarl in sub jmpq or jg repnz and imul hlt xchg rex.X and adc sahf add test fcoms sub nop rex.WR es outsl hlt ror jno sbb (bad) test (bad) sarb lea test (bad) xchg xchg scas addr32 (bad) icebp fstl in add hlt sub lret jmp orb test lea jmpq test stc movsb je pop jb clc movb test xchg in or mov scas jg cli clc jge fnstcw loope (bad) (bad) (bad) data16 sti mov out xchg or mov sti mov mov mov rex.WR mov (bad) (bad) mov lods movabs mov add retq (bad) lock rex.WR add cmpsb pop or (bad) rex.XB rex.RXB lea mov outsl jne shr add out or xchg in mov and sub enterq (bad) (bad) (bad) repz xchg cmc xchg xlat mov sbb rex.RXB test scas in (bad) fstpl (bad) jge fbstp xchg (bad) or subb (bad) shr rex.B (bad) xor push lahf mov stos cmp (bad) and std (bad) sub (bad) lea jl int3 mov sbb mov push sbb jne mov movabs (bad) jle mov (bad) lret shr (bad) (bad) or roll sahf mov xchg pushq enterq (bad) jg (bad) mov (bad) adcb jg (bad) mov in adc sarb iret mov (bad) in movabs insb push jo repnz mov mov add mov lods callq cmp (bad) stos jo adc data16 xor push xlat jne cli adc cmp push movabs stos push adc (bad) pop mov rcll out pushfq scas or mov jle mov lods xchg jne sub xchg loope pushfq out xor xor sarb xchg (bad) int3 cmp pushfq pop (bad) mov or jmp (bad) pop cmp sbb jo jge retq (bad) pop (bad) add xchg (bad) cld add stos rex.WRB rclb (bad) shrl callq add icebp (bad) fimull add or rorb rex.WRX jo cmp in rex.W retq xchg rex.R repnz sbb iret xchg (bad) mov cmp mov (bad) out in jne (bad) repz stos xchg mov xchg (bad) hlt adc jne jmp cmp out push (bad) divl cwtl (bad) (bad) sub push ja push (bad) adc push cmp hlt xchg (bad) xor (bad) sbb add add rex.WB mov sub adc loop (bad) mov (bad) repz test or add fbstp jne (bad) sbb rex.RB retq adc xor in and repnz jp cld xchg add mov mov add push popfq jns stos add add (bad) adc pop mov lods mov nop hlt loopne add rex.XB retq xchg cmc sub fidivrl rex.WX adc stos mov callq sub out sub cwtl jne fs lock (bad) and sbb fcoml imul test cs cld mov or clc cmp pushfq movabs cwtl rex.W jb cltd xchg fistl mov jmp je jp push js callq rorb enterq add (bad) sar notb jo add (bad) mov xor movabs rcll icebp (bad) (bad) mov rolb nop xchg adc jne mov xor rex.B add or or adc test add movabs xchg xchg mov xchg hlt jno rex.RB xor mov rex.WB adc push (bad) xchg xor xchg stos push callq (bad) push hlt (bad) outsl pushfq mov mov loopne adc or ds in (bad) js fdivp sarb xchg xchg repz sub lea sbb callq xchg callq rex.XB xchg imul popfq sub repz (bad) cmc push (bad) rex.WRXB mov rex.XB (bad) out and movsb xchg fdivrp outsl mov scas cmc (bad) rcrl lock lret (bad) test add rex.RX ss and jmp cs push jbe (bad) sbb add callq (bad) pop (bad) jne rex.RX rex.WRB rex.WX insl movabs and mov push enterq or rex.WR cmc xlat or imul (bad) (bad) int push jo jno push push push jo xchg mov sbb (bad) (bad) loop fs push xchg push (bad) mov xchg (bad) adc jnp repz add xchg add fisttpl jne mov xchg add leaveq movslq mov insl (bad) loopne sbb sub rex.RB (bad) icebp sub push rex.WRXB lret sbb xchg push rex.WR adc (bad) (bad) rex.B adc (bad) (bad) unpcklps callq or xchg hlt leaveq js out (bad) xchg mov xor (bad) ja and (bad) jle xchg mov mov push insl (bad) (bad) (bad) mov lock test imull xor test mov mov lods cmp xchg push je movabs mov rex.R stc jmp outsb repnz icebp std lock adc push sub jne shrl movabs xlat push (bad) pushq ja vmovapd or rolb int (bad) mov jne or mov adc idiv (bad) rex.W movabs (bad) adc idivb xor stos jo rclb lock (bad) movslq jns xor je cmc pop (bad) loop and je or int adc rolb and fs addl rclb (bad) (bad) cmp jge rex.WX out xchg add or add rex jno rex.RXB sub (bad) lret repnz lock xor in (bad) jg (bad) xor push mov outsl stc rex.XB sub xchg fist (bad) (bad) mov rex.RXB cmpsb xchg (bad) sub mov (bad) (bad) or (bad) rex.R rolb or adc mov rcll jmpq or mov pushq or xchg (bad) push fstp sti movabs je adc (bad) ja rex.WXB es je xchg ljmp push add fstl mov int3 xor sub (bad) sbb (bad) xchg js xchg test (bad) push xlat xchg (bad) rex.WRB xchg and pop xlat (bad) xlat rex.RX mov xchg xor sub cmc int3 mov jns rex.XB rolb jnp jl cmp xor (bad) test xor notl (bad) rolb (bad) callq push icebp roll lret gs sarb enterq and cmpsl popfq push add fmul rex.R (bad) addb in and mov xchg xor add (bad) (bad) jl xlat mov hlt (bad) mov (bad) lea (bad) or enterq adc xchg fdiv push rex.XB xchg mov (bad) push push or mov gs adc adc (bad) insb int3 jne int3 and (bad) leaveq rex.RXB mov rclb (bad) adc add xchg (bad) (bad) flds enterq (bad) xchg (bad) (bad) jne pop mov push nop adc cmpsl fs (bad) (bad) nop rex.RB xlat or hlt rorl sub iret movslq loopne xorl pop xchg pop (bad) leaveq in xchg xlat (bad) pop add mov rex.RXB rcll xchg (bad) div (bad) rex.WRXB rex.WRX (bad) (bad) or nop rex.R xlat nop (bad) jbe push add (bad) rcl adc (bad) icebp adc (bad) jp xchg (bad) xchg rolb cmp add cmp add cli enterq xchg (bad) sub sub xchg push mov push mov xlat (bad) adc cmp callq mov in movabs and add retq cmc and popfq cs xor (bad) cmp in cmpsb (bad) sub sbb or (bad) add (bad) or rex.B bnd xchg sahf mov xchg add rex.WRXB (bad) add test rex.W stos sub pop outsl add shl (bad) rex.R loopne in jne sbb xchg xchg xlat mov loope icebp xchg xlat jne rex.WR movups (bad) lret (bad) rorl clc iret jne adc hlt (bad) xor mov rex.WRX (bad) and mov adc test rorl test jne movsl sbb cmp xchg shlb mov (bad) jno out out hlt (bad) xor movabs (bad) movabs and sbb add push sub mov sbb push (bad) std push (bad) stc adc or and sarl (bad) repnz xchg pop xor or (bad) stos xchg and (bad) hlt rex.WRXB iret loopne lods (bad) jne movabs or fmull adc movabs retq jne and jne sbbb (bad) (bad) (bad) xor rorb jne xlat sbb clc mov jne (bad) push cld mul push es mov (bad) (bad) (bad) dec (bad) fstpl adc add scas xchg mov cmp pushq xor mov (bad) rex.WRX (bad) notl sbb or xor or rex.WRX movabs iret movslq or in mov fdivs ja movsb xor add hlt (bad) and movslq mov push out insl movslq pop insl xchg movabs mov movslq (bad) out sbb (bad) and mov mov jo test nop adc je mov push outsl in mov pushfq jbe imul sbb outsb retq (bad) outsb (bad) lret mulb jp lock sbb lock mov xchg lea xchg mov jmpq jne btr sub bt mov rol add or cmp mov clc cmc test jmpq sub stc jmpq cmp jmpq add rex.XB (bad) je rex.XB insl jo je (bad) insb imul movb clc clc cmp stc test jmpq jae stc jmpq callq setg add rol lea test setle mov bt cmpb jmpq jne clc sar mov cmp jmpq loop retq sbb fucomip (bad) (bad) jl sub pushq push or (bad) (bad) std insl retq sbb fistpll movsb movslq negb fwait mov not xchg xchg xor sub (bad) or (bad) xchg movabs callq (bad) cmpsl (bad) ficomp mov std (bad) (bad) fbld and (bad) or xchg out (bad) hlt popfq adc addr32 cmp cmp retq pushfq jnp (bad) scas jl add or mov rex.WX xor adc sbb rex.RXB fs (bad) (bad) fsubl rex.X (bad) mov (bad) mov jb adc std adc jne addr32 mull or mov (bad) (bad) push nop cmc jb imul rex.XB test cmp bt clc stc test jmpq jne rol mov test add clc bt jmpq ja jmpq rex.R rex.WRX push rex.WB cs insb add stc cmp cmp bt cmp jmpq jmpq jmpq jmpq jmpq sub nop cli sbb (bad) std lods sbb icebp loope (bad) rcrl mov jl test (bad) stc int3 jno xchg push xor or xchg add push cli adc pushfq negl scas rex.WRX push sub sbb clc test (bad) imul testl movsl push adc pop cld int3 stos (bad) xor pop rex.RX rex.B (bad) in jmpq (bad) rex.WR (bad) xlat jle cmc adc adc add (bad) (bad) (bad) push std (bad) lcall je or cld and sub lret stos repnz divl or outsb rex.WX xor jl (bad) packssdw movsb movslq retq sub and (bad) (bad) data16 (bad) push xchg pop loope scas out fisttpll jae icebp icebp test rex.XB jrcxz xchg sti jmp and sub test cmc sub stc jmpq jmpq mov jmpq rex.RXB ja rex.RX (bad) ficom orl mov xchg xor cli jp pop jo (bad) movb jmpq mov adc (bad) fbstp cld (bad) lcall jbe or xchg pop es jrcxz loopne rex.WRX rex.W rex.WRX (bad) rol add out scas sub mov adc (bad) jmpq xchg sub notb xor mov xchg movl lods sbb loop add pop out add pop cs out sar (bad) jrcxz cmpsl out (bad) fisttp pop (bad) ffree (bad) add mov sbb add or scas rex.RX rex.WRB sbb mov mov stc xchg adc outsb out sbb mov retq sub mov jae xor cmp rex.W ds mov (bad) rex.WRXB rex.WX repnz (bad) movsw pop (bad) mov hlt xchg xor rex.XB repnz imul andl mov lcall (bad) push mov (bad) mov sbb rex.WRXB cs data16 test rolb and jae sbb std sub and jne movslq xchg and fstps (bad) (bad) jg or mov xchg data16 pop mov mov and rex.XB xor out xchg (bad) scas rcll loope jg (bad) pop mov scas pop not rex.WRB fisubl frstor retq jmpq xor bt repnz jmpq or mov movabs jae retq mov mull out lea add (bad) movabs rcl add cmc (bad) xchg or fistpl shrl adc (bad) lcall loope add or (bad) xor loop fcompl (bad) lcall callq pushfq movslq outsb (bad) in xchg roll (bad) lret std rex.RB sub data16 rex.WB (bad) lea add shll mov lret xchg mov jb pop mov sub ja jns mov cmp in movslq xchg lods in xor int cltd jns imull cwtl or (bad) movabs (bad) (bad) int3 mov rex.RXB addr32 jae fistl shll popfq jge rcrb lock lock (bad) mov (bad) xchg mov outsb out jmpq jmpq jmpq sbb sbb or cmp (bad) (bad) test and leaveq add (bad) jo (bad) cmpsb (bad) (bad) hlt adc sbb adc cltd in pop cmc xchg rex.XB ljmp sar (bad) jg add sbb (bad) (bad) mov rex.RB add or add sbb rcrl loop xor (bad) ja sbbl movabs (bad) xchg mov mov pushq cli (bad) fisttp stos addl mov sub fiaddl sbb mov stc xchg adc push xor icebp icebp jno push push push rex.WB cs rex.WR rex.WR test push (bad) add and rorl mov rex.X rex.W rex.W (bad) xchg xor (bad) xchg xor adc leaveq add jle rex.RB rex.WRX lods rex.WR ficompl (bad) rex.R xor (bad) pop mov mov sbb (bad) (bad) (bad) imulb mov cmc out mov pop (bad) jb int cmp lcall ja rcl cli (bad) lcall cwtl pop mov sub fadds ficomp leaveq gs pop movabs rex.WX and and xor rex.X pop rclb mov pop (bad) std popfq add mov push cmc mov (bad) mov rex.WB xor in mov loope scas ja (bad) cs jo xor push insb mov rex.WR jbe jmp in (bad) jns idiv lods xor jae add mov ja add cmp mov bt movsbw sbb mov cmp cmp sub cmc stc repnz jmpq (bad) (bad) rex.XB rex.WXB (bad) rex.WB sbb and rex.RXB loop mov jg (bad) mov lods out xchg pop jo stos (bad) pop (bad) int mov sbb gs cli scas mov (bad) mov cld loopne (bad) pop sub jmpq sbb (bad) jg xor mov sbb out in movabs (bad) (bad) (bad) jg movslq mov sti (bad) lcall lods jae (bad) in add out ja add scas lods rex.WXB xor outsb rol sbb rex es xchg add cmc mov rex.X rex.RXB adc mov int fistl icebp (bad) mov insl (bad) adc xor pop (bad) and ficoml rex adc xor iret xchg rcll xlat adc outsl sub (bad) jmpq jae cmc seto inc adc mov dec inc add test mov shr (bad) cmc (bad) mov stc stc cmc xor jmpq rex.R (bad) sbb decl scas pop popfq mov (bad) (bad) adc push jns shrb popfq (bad) mov insb mov lret xchg xor cli xor sbb or (bad) (bad) mov mov sbb es popfq cld (bad) lcall (bad) jge fadd outsl pop (bad) js (bad) adc scas mov (bad) (bad) cld loop adc push xor cmp ds insb shrl add or cltd rex.WRXB int sub adc mov sub imul (bad) mov or push in je ja (bad) lock or cmp sub rcr jmpq jne or bt btr mov bt bt cmp stc add cmp cmp movzwl add mov cmc test add cmc cmc mov clc jmpq pop adc imul rex.W fist and pop outsb (bad) fldcw loopne and add (bad) shll (bad) xor out jne ds pop sub sbb (bad) lahf cli and jp xor mov out mov mov cltd je (bad) mov fisttpll adc pop enterq jb pop (bad) rex.XB push cmpsb cmpb xchg add rex.RB rex.WRX in and in hlt cli add cmpsb mov rex.WRX lcall jge xchg std (bad) lcall mov movabs movabs (bad) not fmuls lods jne pop rex.WRX pushfq adc test mov rex.R sbb out xchg push jmp adc rex.WRXB insl mov mov (bad) pop and and fiadd push pushq (bad) or xchg pushq insb std (bad) (bad) adc xchg xor adc test and mov bt add bt cmc movzwl movzbw movsbw mov clc cmp cmc add clc mov cmc bt stc test jmpq movslq mov pushfq sub add lea clc jg fist mov test retq xor jle frstor fdivl rex.WXB sbb shrl sbb cmpb (bad) (bad) (bad) fistp movabs icebp sub (bad) loop (bad) rex.RX rex.WRX push xchg (bad) nop adc mov sahf divb adc cld (bad) (bad) jg sub cmp (bad) lcall outsb test or out fnstsw movsl xchg xchg (bad) cmovge subl lods rex.WXB lods jnp rol pushq or stos cmp (bad) adc rex.WB rex.WB rex.RXB fisttp jmp mov (bad) xor jnp (bad) and rex.WXB or (bad) cmp and ja (bad) outsl (bad) mov pop xor mov or rex.XB mov sarb fiadd or jnp adc sbb mov and (bad) leaveq (bad) test jg xchg je (bad) mov insl mov sub adc (bad) mov (bad) mov xchg jno or movabs ds mov sbb (bad) (bad) sub in push xor rex.RB rex.XB (bad) jns sbb cmp movabs movl not int xor mov (bad) cmpsb gs and cmp nop rex.WRXB (bad) and loopne pop clc jo cs pop pop repz (bad) test je mov add add jmp imul and mov cmp retq fistl fldenv sub fwait sbb (bad) stc (bad) (bad) ds push movabs mov jg push jne fs adc mov adc fnstsw (bad) lock (bad) mov mov cmp lods sbb jns repz fisttpll pop flds add push push mov mov flds (bad) std mov scas repz (bad) lcall mov jp (bad) rex.WRXB (bad) sub jmp imul rex.X ds mov (bad) cmpsl ja mov fsubs adc pop mov retq movsb jl push movabs (bad) add mul pushq fcmove and adc push xchg out fs sub (bad) rex.WR sbb test cmp (bad) (bad) pop lea js (bad) test incl cwtl and mov insl pushfq pop imul rex.X adc cmp stc jno rex.W rex.WXB cmp xchg pop cs shr cmpsl or movsl cmpl jo jl repnz andb (bad) fnstsw (bad) (bad) rex.RX test pushq add sub fiadd push (bad) xchg mov adcl movsb cld (bad) (bad) jg pop loop stc cli (bad) lcall (bad) and movslq mov rex.WRXB in pushfq (bad) cmpsb xchg pushq enterq push jl (bad) int rex.W or retq rex.XB xchg pop insl jl pop add jns pop retq out (bad) mov addr32 fbstp sbb outsl (bad) xor jmp (bad) callq stos adcl jg or jns xchg adc in stos sbb out xchg push stc jbe (bad) (bad) sbbb rex.RB cwtl and add test and mov incl jmpq sar xor bsr adc add jmpq leaveq rex.B js sbb imul cmp test mul pop jno pushq fsubr imul add (bad) (bad) fidiv sbb jno cmp popfq mov adc out (bad) (bad) lcall callq cmc push or cld (bad) lcall out (bad) ss lretq xor in movabs mov sub (bad) data16 xchg adc or pushq push fisttpll and xchg adc flds xchg push scas (bad) ja (bad) in movabs xor (bad) cmp xchg (bad) add test xchg add shr mov bsf cmp sub bts btc shr mov jmpq jmpq jmpq cmp clc cmp sub jmpq bt movb jmpq fnstsw mov rex.WXB rex.WRX scas sub adc leaveq int3 sub orl enterq retq (bad) test (bad) outsl sahf jbe cli pop stos and (bad) lcall pop std (bad) (bad) incl (bad) sbb (bad) (bad) mov rex.WRB mov and fbstp (bad) rex.XB (bad) out mov (bad) xchg jne sub jae loopne enterq xor repz fldt or add cmc rex.WB sbb lods jrcxz push loopne cmpsb lods sbb sub sub (bad) sub mov mov mov mov mov (bad) lods jl loope jo push (bad) out rex.WRX (bad) sub push scas data16 (bad) scas xor rex.WB (bad) in jne cmp pop xchg sub mov ss sbb mov scas push adc push sbb lret xchg fdivrl fs xchg cmp pop jb and sbb (bad) movabs mov (bad) lret (bad) mov insl lods xchg rex.R add jp (bad) (bad) jmpq pop (bad) movabs jge loop cld (bad) (bad) (bad) test stos (bad) push sti (bad) lcall (bad) mov jns (bad) repz cmp rex.WRXB cmc sub sub adc mov rex.R rex.WR xor data16 (bad) xchg lea pushfq scas scas pop sarb imul pop (bad) scas rex.WRB xor xor test mov jl sub xchg out sahf rex.WR (bad) movabs jmpq sub xchg fldcw mov pop icebp pop push sbb add xchg vpcmpeqb and jns callq rcrl mov xor imull je rex.WX movslq and pop rex std (bad) lcall mov pop (bad) cwtl push (bad) xchg xor cmp mov sub rorb in shlb jp clc mov or push movabs lods stos or rex.WRXB (bad) movabs and and xchg sub (bad) mov callq rex.WR xor xchg pxor lret and push xchg cld in movabs lods jnp rclq rex.WRXB rex.WRB fwait repz rex clc add stc sbb std (bad) decl in bswap jmpq jmpq jne xchg mov or sar sub and bt mov cmp cmc cmc sub stc clc stc clc pushq test jmpq je jmpq mov cmc add bt not cmp cmc cmc xor jmpq jne xchg mov rex.W testb sub ror mov cmc cmp test bt sub cmc clc stc pushq test bt bt stc cmp jmpq jp jb retq cmc movb cmc test bt test jmpq jne jmpq add add jg ja pop sbb jl or out (bad) (bad) movabs movslq (bad) mov cmp (bad) outsl pushq fsubrs test (bad) movabs xchg and movabs xchg adc rex.B int3 jl lcall movabs es rex.WRX or imul cli mov mov cld (bad) lcall mov rex.X test or fldl2e rex.WR (bad) (bad) adc pop xor and push imul (bad) (bad) jbe imul scas (bad) xor (bad) (bad) loopne in callq jp push rex.B rex.WB sbb (bad) (bad) test leaveq or rex.RX leaveq jbe cmp xchg adc addr32 lahf iret xlat xchg (bad) and pop out rex.WRX stos mov (bad) mov in stos sub add jmpq jmpq jmpq jmpq callq setno add bts add bsf clc mov cmc stc bt cmpb jmpq pushq jmpq mov cmp clc cmp test jmpq stos movslq (bad) pop sbb xchg xor jp enterq (bad) loop rex.B addr32 fstps outsl (bad) fisubr (bad) lods sbb out frstor fwait imul test test mov mov lret or (bad) lcall push lock mov jle and sub int out idiv (bad) (bad) (bad) jb,pt sub (bad) lcall mov test cmp icebp movslq cltd xlat sbb push loope add cs imul std sub and leaveq in sbb movslq jbe rex.B (bad) xor sub jl fstpl cmp (bad) pop or loopne or (bad) mov push loopne pop repnz jp adc add cmpsl mov sbb lret (bad) add mov push retq sub fistp (bad) adc movabs jl cmpsl fildll or mov movabs lret and out lahf cs mov ficompl jg cmp or (bad) (bad) lcall popfq cmp (bad) (bad) lea int3 or mov rex.R sbbb (bad) lcall test adc (bad) insb push es rex.WXB ja jg xchg ficoml repz pop or fsubs lock jg mov jno jnp jmp rex.X sub callq xor sahf (bad) fdivs mov sbbl (bad) rex.XB push jne mov and sbb (bad) cmpsl mov imul (bad) mov movabs rex.WRB mov outsl and xchg (bad) pop cmpsb ss cs cmp mov (bad) mov mov retq rorl cmpsb jle and rex.W rex.WXB adc fidivr sub insb cmp jns (bad) ds (bad) in test jb (bad) rcll rex.WB rex.WR movabs addr32 pop (bad) add imul stos rclb mov xor or xchg pushfq test pushq mov out testb mov jb ja lea fadd add movabs out in jl int3 sbb rex pop (bad) (bad) and adc pop (bad) ja jl rex.RXB in push pop sbb flds movabs shll je jl stos outsl rcrl out es pushfq pop pop cmp (bad) pushq and push or popfq test fist out (bad) (bad) flds outsb jo xchg ds fisubr rex.RX rorl push repnz (bad) (bad) (bad) (bad) ja (bad) std sbb shrl mov (bad) add test rex.RB (bad) rex.WXB xor icebp clc mov je mov or jns in int retq movabs cwtl and movabs (bad) mov sbb out scas pop movsl and (bad) test lcall (bad) fdivs add int jp add push imul int rex (bad) xor add ja (bad) rex.WB movabs jp pushq icebp orb (bad) (bad) (bad) sub and (bad) (bad) (bad) (bad) mov and pop cmc (bad) pushfq sub xor movabs pop pop pop and pop cmp movsb test push outsb je push jrcxz xchg leaveq sub xchg xor rex.RXB es movsl imul lretw repz leaveq cmp pushq cmp mov test enterq rex.WRX sbb (bad) in gs jne stos bnd movabs jb sbb enterq adc cmp out notl cmp (bad) or es adc push xchg pop mov push rex.WR test xchg (bad) cli adc test jb retq jmpq je mov bswap lea not xchg not not movzwl bswap lea not bswap lea mov jmpq callq rcl add rcl btc add bts mov jmpq jmpq jmpq dec jmpq mov sbb sub sets lea jmpq mov sub cmpsl jg fsubrp and lods add pop xor or xlat mov mul orl (bad) xor fcomps jnp repnz pushq jrcxz jrcxz xchg jb lock (bad) rcrl (bad) (bad) mov (bad) int and or pushq popfq xor jne (bad) (bad) jg std ss lret lcall ja (bad) xchg cmpsl outsb (bad) pop cli cmc adc fildll mov mov jmp fild (bad) cmp (bad) sti and sbb adc shlb push or jno mov xchg mov add push xor in push and mov add (bad) clc or cmpsb test adc cltd rex.WRXB fs push test leaveq rex.WB (bad) cmp imul data16 or loopne fldl sbb movabs clc nop notb fucomp rex.WR rex.RXB rex.RX fcompl repnz jrcxz lahf jb es xchg rex data16 and fdivl mov std (bad) (bad) mov rex.WR mov mov (bad) rex.WRB enterq out cmpsl out lods add fistp add jg pushq es mov (bad) lret in repnz in rex.WX xchg (bad) loop sub sbb cld (bad) (bad) jmpq (bad) mov lcall sbbb rex.WRB rex.WXB out scas push jbe rex.WRXB iret lret sahf fcompl cmpsl push xor iret (bad) out ss je and cli (bad) xchg lahf push hlt xor xor scas (bad) in sbb (bad) movabs or out fistpl out fiadd in movsb jmp sub mov xor je jb sub mov shr jns add retq mov cmp jmpq bswap pop movzbl not bswap pop movsbl xchg pop js pop jmpq sbb (bad) lret mov (bad) jns add sub (bad) je (bad) jg (bad) mov movabs add (bad) (bad) add sub pushq pop idivb frstor pop xor (bad) jg and jo sub mov mov jno or xor (bad) movsl std (bad) lcall jnp scas popfq (bad) cld (bad) (bad) mov pop (bad) movabs cs (bad) (bad) jmp (bad) rex lock push subl andb divb cltd add mov push mov lods mov rex.WRX lods loopne mov (bad) test rex.X movabs or in imul fimul xor shl jbe cmp and (bad) int3 add jmpq leaveq icebp data16 mov (bad) ds and fistpll pop outsl movsbl cmp (bad) rex.RXB and std lods sbb (bad) rex.WRXB addr32 adc mov movabs enterq rex.B (bad) (bad) lcall and sub mov sub (bad) pushq lret push cmp lcall xor cmp imul mov xor cmovge (bad) mov and movabs (bad) data16 fs scas xchg jle (bad) mov fildl cmp mov xor cmp adc (bad) xor pop mov and jns movslq fstpl retq movabs adc add add or shld test mov bt cmpb jmpq cmp clc xor clc jmpq ja bt not inc sub ror setp add cmc add cmp bsr rol rcl mov sub mov jmpq ja jmpq je clc push stc rol test mov rcr sub bswap jmpq jmpq push sarb movslq mov lret enterq jbe icebp push js sub or jmpq xchg (bad) mov and pop outsb es sti rex.WXB xchg mov and mov cli adc clc adc mov mov jmpq and mov sbb movabs jmpq push or test scas xor leaveq cmp sar or lods std (bad) (bad) fist (bad) movabs jle fsubl pushfq nop (bad) fcompl scas jl,pt (bad) fwait sbb rolb (bad) (bad) pop adc in pop loop movabs (bad) int3 fs xor or sbb incl movsb and out fldcw (bad) cmpsl (bad) movabs (bad) bt neg add movzbw bt lea bsr mov jmpq callq neg inc add test not sub mov cmc test cmc cmpb jmpq mov pop (bad) sbb mov jne rol and and xor mov pop mulb cltd cld rex.WR rex.RXB jbe (bad) pop imul pushq pop jo (bad) sub pushq outsl scas pop mov push stos rex.R mov (bad) (bad) sub mov lods jrcxz rex.WRX add mov (bad) cmpsl ljmp repz leaveq sub cld (bad) (bad) decl sti (bad) lcall sti retq jae addl in (bad) push out pop lahf sbb cmp jbe add stc rex.B adc (bad) (bad) jbe jae jno paddusw xchg mov lea shr jo movabs sbb (bad) add xchg pushq retq (bad) cmc or or add bt add jmpq jmpq jne bt btr mov bts shl sar sub bsf bts sbb cmp mov clc test bt sub stc pushq test cmp cmp jmpq pushq jmpq add jmpq stos imul sbb add sahf and dec icebp mov rex.WB out imul cmp (bad) in mov jbe lods jne pop sub cmc xor add adc in ja (bad) rex.RX push (bad) adc lock lods lods or sar add ss xchg mov fwait adc rex.WRX (bad) xlat mov in cmp ficompl sub (bad) ds stos and orl mov repnz (bad) jg pop push mov jl notb lock mov icebp (bad) mov (bad) jo (bad) test (bad) or test test xchg or sub retq xchg lret in push mov xchg (bad) or (bad) sti cmpsl movsl gs retq and cwtl rex.WX gs ja loope mov (bad) fimull (bad) (bad) cld jo (bad) cmpsl callq rcl (bad) movsb sub in cwtl shl shr cmpsb pop outsl pop rex.XB movsb ja (bad) repnz lret cmpsb movsl xor sub (bad) xchg sarl pop or rcl jle (bad) cs outsl es iret xchg movsb outsl lahf rex.RX mov fisttp (bad) adc addl (bad) movabs shlb (bad) mov not movsl jg push rclb movsb (bad) (bad) cmp or shrb je fidivl xor rolb mov int movabs mov sbb push iret (bad) movabs push loopne rex lock leaveq test (bad) push cld lods jbe lods jbe rex.X cmpsb lahf mov (bad) mov sbb movabs jmpq mov add (bad) mov movb int movabs xchg (bad) (bad) (bad) xchg rex.WRXB repnz loopne addr32 jmpq jns and dec push popfq add push cmp and (bad) sti (bad) out jbe (bad) xor sahf pop iret adc inc std jno movabs loope rex.WB rex.WXB rclq jg decb rex.RB lock pushfq out divb (bad) jge or cwtl repz ss jge cmp in add iret sbb sub (bad) lcall lods mov and mov movabs jnp subl sarl push stos (bad) lock rex.RB push sbb incl outsb adc or jno outsl mov or jo (bad) (bad) ss ss push xchg rex.WX movabs jae push clc (bad) pushq scas pop std or (bad) fistpll rolb ss sub mov and sub (bad) pop insl mov cmp mov mov in data16 jmpq imul jnp xor rex.B fsubl pop xor and and add mov cli and (bad) insb mov (bad) xchg rclb adc lahf mov (bad) (bad) (bad) jo jmpq (bad) mov jg in int3 or out adc mov popfq cmp adc rex.XB rolb fiadd in or mov leaveq (bad) (bad) iret sbb jmp subb push push stos cmp cmp jno mov (bad) mov (bad) jnp adc (bad) (bad) rcll repz and pushq sub mov pop retq jmpq add jl add bt stc stc sub jmpq jbe jb cmc stc cmp jmpq jmpq jae stc test jmpq jmpq adc sub cmpsl push rex.X jns xor cmp (bad) movabs (bad) jl movabs or cmp fsubl movslq cmp leaveq add (bad) out cmp hlt rex.WR stos add mov rex.X or (bad) (bad) (bad) sbb fimul (bad) (bad) lcall cmp je test movsb stos cmp movabs (bad) and (bad) stc xchg iret fiadd rex.WX repnz jp loope iret adc std std retq movabs jmp (bad) xor (bad) fsubrl pushq rcrb push clc outsb adc jmp test rex.RB loop (bad) and jg push std mov stos xlat (bad) mov (bad) jmpq movzbw mov rol mov test cmc mov test cmc cmp stc xor clc bt bt bt repnz jmpq je movsbw cmp bswap mov push and neg neg test mov inc clc (bad) lock movsbw lea movzbw lea jmpq jmpq pushq jmpq rex.WX imul and rex rex.RX cltd cld fs (bad) (bad) ss movsl fs fimull rol and movabs (bad) and pop outsb (bad) lret rex.W rex.RXB (bad) mov stc sub cmp js cmp xchg adc rex.W movabs stos std (bad) mov and and cmp adc xor lret jp xor cmp scas ss and je lods hlt in pushfq lods sub repz jmp imul stc cmc or jmpq vpxor mov push mov sar (bad) rex.WB and mov out xchg xor stos jbe,pn sbb cmp or pushq or or xchg ss sbb lods (bad) fs mov (bad) xor mov (bad) popfq (bad) sub mov (bad) std (bad) (bad) fild sti (bad) lcall outsb sub (bad) pushq or rex.WRX ficompl add jae sahf imul imul (bad) adc cmc pushfq icebp rcrb mov pop pop rex.WRB (bad) (bad) adcl push (bad) int xchg gs sti xor data16 cmp stos cmp and insb and rex.WX adc rex.WRXB (bad) mov jnp insb stos pushq (bad) adc pop out mov add insb sbb rex.X pushfq insb fwait and imul pop cmp pop (bad) movl xor movsb (bad) mul stos out or (bad) sub rex.RX rex.RX pushfq (bad) (bad) (bad) lcall mov rex.X callq add mov cld (bad) lcall (bad) rol adc (bad) lcall pop pop jp cwtl pop sub pop int3 lret cmp pushq sbb add (bad) add movabs cmp fstpt sub mov mov in cli mov (bad) sbb add mov rex.XB (bad) mov lret add faddl sub rex.R rex.X or add callq fild test (bad) (bad) outsb and push add lahf (bad) xchg jg imul outsl out (bad) (bad) rol movabs notb and (bad) lock loope mov pop hlt cmp lahf (bad) mov hlt pop push rex.RX rex.RX rex.RX or jmpq sbb (bad) lcall cmp iret cwtl sarb mov addb fidiv xlat imull iret cmp adc cmp pop cmp cld (bad) (bad) mov movabs mov adc repnz (bad) cli fstps mov jo rex.WRX test or repz sub sbb ss pop rex.R fs pop nop and cs xor rex.XB fidiv rex.WXB or (bad) (bad) adc and clc popfq push rex.RB push rex.WB rex.WRXB rex.WRX cs insb add test (bad) add xchg insl pop (bad) loopne lea mov movzwl jmpq push sbb mov outsl sahf rex.WRX int3 rex.R out scas fucomip mov cltd xor shrl scas (bad) mov in cmpl mov loopne and test cmp cltd cli sahf pushfq loop (bad) (bad) fistp adc (bad) stos sub xchg add (bad) std (bad) (bad) (bad) jge out mov (bad) fs stc cmp (bad) scas rex.X jrcxz jle and xor (bad) mov subb (bad) cltq or add es out insb and xor (bad) scas (bad) in and fmull rex.XB sbb adc sbb jb push jle sbb jno es movabs (bad) movabs adc (bad) (bad) (bad) cmpsb and (bad) mov sub and sti (bad) stc stc stc bt imul clc cmp test clc add jmpq jb cmp cmp jmpq je rcl push shr neg shr mov cmp sub lea movzbw lea jmpq mov rex.WXB sbb mov xchg ss mov mov lea cmp (bad) and sbb mov push fsubr (bad) (bad) outsb imul jnp add shrb push or (bad) (bad) stc (bad) popq mov mov lods jmp test rex.WRXB bt mov or add out cmp jg rex.X adc (bad) lcall jmp in add (bad) (bad) jge int3 lret mov pop jge movsb loop xor adc push lea fistl (bad) in pop fimul fwait xor es (bad) mov jl pushfq rex.WX jo (bad) pop mov (bad) repnz xlat adc and pop (bad) fnstsw mov rex.X fwait (bad) xor xor fsub jne cmc jmpq (bad) sub jno mov outsl pushq stos jmp cs jl rex.RXB rex.RXB out je and mov sti int jno xchg sub rex.RXB and (bad) mov (bad) (bad) repz jrcxz xor push fwait xor sbb mov orb (bad) lcall (bad) scas or (bad) (bad) (bad) (bad) lods stos xor mov adc xor mov cli (bad) insb cld icebp (bad) add pushfq rex.R add cwtl repz push (bad) fisttpll cwtl and (bad) cld mov insb jne mov cmpsb rex.WRX rex.WRXB adc jns cmpsb je push push mov mov adc rcl jbe cld fistl repnz jne addl andl fldcw add sub or push xchg or lods cmc mov pop xlat pop xorb scas out rex.R jmp ljmp sbb (bad) sbb stc sbb rex.RXB or fwait xor xlat (bad) xchg adc std cmp (bad) cs jl iret mov sbb and (bad) fist cld (bad) (bad) mov fcomps mov loope nop cld (bad) lcall push (bad) shrl push stos adc or jle sub rex.WX sbb mov push mov mov pop es stos adc divb test jl cmp (bad) fwait ja scas xorl add jmpq jno (bad) cmp mov mov rex.WR rol (bad) (bad) movsb movslq (bad) mov movabs xchg pushq mov jno sbb sub push scas (bad) fcoml adc (bad) push je (bad) mov lcall test (bad) lods lret (bad) (bad) fbld sti (bad) lcall (bad) xchg fs xor xchg (bad) movsl fldl outsl clc jmp cmpsb xor jo gs scas (bad) (bad) xchg or (bad) adc xchg pop shlb jae repz callq pop movswl jbe lock cmp movsl jg add nop and mov rex.RX adc (bad) (bad) lods adc jp clc or sarb sbb outsb imul gs in push rex.RX test out (bad) (bad) rorl rol in mov insl fucomp pushfq add jmpq mov jne lret add lock jbe adc xchg (bad) (bad) jg sti movabs jno js push jne (bad) cli rol cmp (bad) jb jmpq lret cmp fcoms pop sub mov (bad) (bad) lahf sbb rex.RXB rex.WRX add jmpq movabs stos mov pop repz out xchg rex.B push gs (bad) rex.WR rex.WRXB popfq movsl rex.XB pop andl std outsb (bad) fcom mov (bad) mov mov add or jno sti (bad) lcall fwait xor (bad) cld ds outsl rex.WB (bad) and (bad) es rex.WR cmp rex.WRXB rex.WX pop fndisi(8087 jg mov mov ficoml callq test rex xor jns flds ss rex.WXB mov pop (bad) gs adc cmp movabs movabs movb bt jmpq jmpq adc jmpq not lea jp movzbq setne mov pop jmpq jb bt cmpb jmpq jmpq stos jmpq jmpq ja stc clc cmc imul clc clc clc cmp add jmpq jg jne movzbl mov jmpq pushq jmpq xor ja jne mov jnp or pushq cmp cltd adc stos add cmp sbb adc cmp mov jp cmp pushq and (bad) fisubl mov push rex.RX add or push roll (bad) mov popfq faddl sub adc or (bad) (bad) lcall or jns cmpsl and jp movabs lea adc (bad) (bad) (bad) xchg rex.WB repnz xor push push shlb lods rex.WX sub rex.WRB (bad) cmpsl test mov xlat (bad) mov in rex.WRB fwait add icebp icebp xchg scas es jne jg (bad) xchg mov jnp enterq or add jmpq je jmpq ja stc stc imul test stc jmpq jae seto test mov mov rcl and shrd mov movzbl shl shr add mov cmc cmp xor jns cmc repnz jmpq jne sar sub sar mov sbb add inc rcr mov cmp test jmpq jb cmc stc clc clc cmp jmpq je clc clc cmp stc add test cmp jmpq push push push push xor cs insb add shrl sbb mov iret (bad) jp vaddpd incl movsb in xor jns (bad) fidivr and movabs push out cmpsb test and sbb adc (bad) sbb mov rex (bad) (bad) fistpll mov jmpq movsb sar (bad) lcall xchg or adc jle popfq xor jb and mov sbb push (bad) mov xlat cltd js ja vsubps jns rex.RX ficom (bad) push or pushq fwait adc mov mov sbb lret rcrl jno (bad) mov pushq sub (bad) (bad) pop lea repz test jge fisttpll sub and leaveq xor rex.WRXB test (bad) (bad) sub sub mov adc add shr adc rcr rcr mov jmpq jmpq jb je bt clc jmpq rolb mov loop jmpq (bad) (bad) rex.W rex sbb pop cmp rex.XB and cmpsl data16 pop jo repz cmp (bad) out negb (bad) lret ljmp in cmp (bad) (bad) cltd retq mov pushfq rex.WX clc mov xchg addr32 (bad) (bad) jg xor (bad) (bad) lcall (bad) xchg and pop push stc cmp and rex.R gs add adcl test jnp adc or hlt mov push (bad) push rclb (bad) in lahf mov jae pushfq sbbl fisubrl jno adc movabs xchg shrb (bad) std sub jmp mov rex.W (bad) mov push xchg int3 (bad) pushfq lret je test sub cmp stc cmp jo ja cmc cmc stc cmc imul clc test jmpq jmpq jmpq jne test stc movb jmpq clc add jmpq je jmpq jne jmpq (bad) xchg fidivrl jmp rex.WX (bad) (bad) sbb xor (bad) test pop out sbb sbb add jge mov cmpl (bad) mov (bad) cld (bad) (bad) mov ljmp xchg adc (bad) jns movsb xchg popfq cld sub fnstsw mov adc mov lahf (bad) rex.WRX ds orl movsl add gs jb js clc callq xor adc xchg push lea sub xchg icebp in jb mov jo outsb divb addr32 bt stc bt clc imul stc clc add jmpq jne jmpq add hlt pop jp mov rex.WRB imull (bad) out jmpq repz movsw cmp (bad) movsw test or pushq es in xor jnp sbb (bad) (bad) (bad) mov out in rex.RX test fcompl (bad) cmpsl or leaveq movsl sti (bad) lcall mov rcrl rex.RX scas cmp cmp roll pop (bad) (bad) stc add (bad) std rex.RB fidivrl lock and rex.WR lret js lods insl retq rex.WRXB in cmp cmp (bad) in cld movlhps enterq add test xchg in rex adc (bad) lret imul pop pop xchg cmpsb rex.RX callq rex.R cmp leaveq sub jno push (bad) divl cmc clc jmpq jne stc bt add add mov jmpq cmp jmpq add rex.RXB gs outsl fs imul add push mov jnp mov callq sub mov rex.WRB loopne rex.WRXB sbb (bad) out pop or pop add jg data16 lahf (bad) cld sbb xchg fs mov push cwtl rex.RXB xor clc (bad) jle push loope (bad) (bad) (bad) (bad) jg mov cmpsl (bad) movabs fidiv (bad) movsb xchg fldenv cmp add lock add (bad) jl mov (bad) (bad) jmpq out mov (bad) lcall movabs xor sub out rex.WRXB (bad) je (bad) (bad) jns (bad) incb xchg jno loope push out scas ss in popfq adc pop rorl callq rex.WRXB rex.B lock mov (bad) lea add fsubrl (bad) fistl jp adc je mov (bad) cmc xor rex.B and push xchg xor mov int insb mov add add cmp jmpq jmpq je bswap cmp not shld push add inc adc jmpq je movzbw shld bswap push rcl rcl xor cmp mov dec shr bsf sub jmpq je cmp cmc bt cmp jmpq jne not rcl shl bt xor add mov jmpq jmpq add push gs jne jb push (bad) insb jne add sarb (bad) add test (bad) add in inc and sub bswap rcr cmc add mov xor rol shl sub add add mov cmp cmp clc cmc test jmpq jmpq ja (bad) lock stc sub shl bsf shr add neg clc test mov cmp (bad) lock bt clc stc stc repnz jmpq jmpq scas (bad) fs jle mov mov mov xchg (bad) xchg movsl cmp mov int3 jl mov fiaddl scas out fisttpll pop rol sbb lret (bad) cmpsb and iret ja (bad) mov cmpsl data16 std rex.WRB mov int sbb pop xchg lods adc (bad) push adc movabs (bad) imul jg add ds outsl jb pop rex.RB sbb out movabs lock lahf cli add fsubrp jge push jae or fdivs out jbe out in stos mov movsl sub or adc cmp xor test (bad) fisub mov jp rex.B lods sbb cmova (bad) (bad) jb mov pushq and sub test movb movswl cmp mov lods rex.WXB xor cmc xor data16 in mov mov and adc insb test jno (bad) mov test sbb cli movabs jbe scas fidivr (bad) mov jmpq or mov or rcrb push xchg and and dec mov shll rex rex.RX imul mov mov je mov mov pop add outsl mov adc in insl mov ja mov (bad) cli (bad) outsl ja xchg and fwait push mov rex.X addb rex.XB push xchg push push adc jns and std rorb rex.RX hlt mov fwait add mov lea jmpq jae stc clc jmpq jmpq jmpq jmpq ja lea mov lea pop jmpq mov sbb xor lahf in adc movabs scas movabs movsb sub (bad) rorb jbe or mov jo (bad) pop insl cmp sbb in rcl loopne (bad) (bad) jl imul mov adc pandn mov jmpq pop rex.R rex.WR jrcxz add push add cmp and sub (bad) lcall cld fisttpll sarl lods lods xchg cmpsl pcmpgtb (bad) mov movsl push nop mov add (bad) (bad) pop mov in jmp retq (bad) mov adc (bad) clc in rex.WRX repnz clc push notb rex.WXB int3 jno pop (bad) cmc gs sti rex.WX enterq in push mov (bad) movabs (bad) repz stc clc stc stc repnz jmpq jmpq ja stc clc imul test cmp cmc add jmpq jae clc sub jmpq xor xchg sbbl xchg cli (bad) or (bad) mov fstps mov xlat rex.WRXB (bad) xchg repz movslq mov stc and mov xchg mov (bad) fsts rex mov insl (bad) out out rex.RB rex.WXB (bad) stos sti jno push (bad) (bad) (bad) (bad) add ficom and jns callq jrcxz cld (bad) (bad) jg fimull adc sti (bad) lcall mov loop,pt rex.B rex.RB rex.WRB sub push loope pop cmp (bad) or icebp (bad) xchg push cmp jp fwait xor (bad) push sub pop in mov in mov mov and rex.RB rex.XB fwait mov enterq jmp sub scas jl in mov jg test rex.WRB add sub fistpll in and jb push jp rex.WB movabs and (bad) cs pop mov (bad) and jno adc mov rex.WB rex.WXB shll scas (bad) mov rorl es mov fildl xor push je rex.WRXB (bad) (bad) out cmp sub rolb xor (bad) lcall xchg (bad) lcall adc rex.X sbb mov xchg movslq lret cld and jl rcr xchg push rex.WX push mov cmpsb (bad) enterq test retq movslq xchg rex.W movabs callq xchg adc (bad) xchg pushq mov add (bad) push jmp jns xor rex.RX fadd adc jmpq (bad) rex.WRXB pop lret (bad) scas (bad) (bad) enterq (bad) bt neg cmp clc stc test sub jmpq jmpq ja xor rcr not sub clc jb (bad) lock add btr btr or mov test rol or mov cmc repnz jmpq jne bt shld inc mov clc cmp or jmpq callq bsr shrd add dec lea mov jmpq add insb jae jb jo add sbb movabs test mov fsubrp adc or lret stos jp push out (bad) in imul stos sub and test in xor and pop jo xchg sti adc (bad) cmpsl (bad) (bad) hlt pushfq (bad) cmp and orl mov and or (bad) (bad) (bad) cmp jns mov mov push push or push (bad) (bad) xchg lock (bad) outsb sbb loope hlt shll (bad) rex.WX retq icebp out (bad) je (bad) or push incl (bad) adc mov in sbb lret and and shll jo jns and add mov (bad) cmpsl (bad) and mov popfq clc cmp rex.WRX xor mov mov rex.X scas rex.RXB data16 in in or rex.WX cmp xor mov in jge xchg cmp mov rex.WRB je movabs callq repz push movslq imul nop sar je jle sbb rex.WXB rex.WRX out (bad) mov ja int mov mov in and mov (bad) jo jne (bad) decl jl mov or add flds (bad) (bad) lcall or and and jns push add xor movabs xor xchg lret movabs in (bad) xor andl (bad) lcall sub (bad) lcall movabs shrb fwait push (bad) mov xchg rex.WRXB lahf rex.WB data16 xchg jno add rex.X (bad) or movslq (bad) xchg rex.XB (bad) xchg in mov (bad) sub mov sbb loope cltd pop (bad) fist mov (bad) (bad) (bad) out cmp push push mov push cmp or mov je btr push jmpq adc mov clc cmc add clc bt movzwl cmp cmp mov cmc add cmc mov bt cmc test jmpq xor jno xchg mov lock fildll xchg (bad) sar push ja ds add outsl pushq jge rex.WR decl fidivr (bad) mov lock jns fwait push add sub sub (bad) test or mov (bad) (bad) fistpll mov rex.WRXB (bad) sub (bad) (bad) loopne rex.B std (bad) lcall (bad) test (bad) lcall out mov mov test or push pop mov adc mov fiaddl pushq sbb out push pushfq cld sub callq rex.WRB fwait pop cwtl or rex.WRX hlt in sub rex.R movabs mov fwait xchg mov (bad) (bad) mov cmp jae test or (bad) mov (bad) xor stc jbe add (bad) xchg lods or jl sub cmpl add neg mov shrd mov test shr ror mov cmc xor test repnz jmpq test jmpq jmpq jne jmpq jmpq lods jmpq rex.R jmpq xor rex.RXB jrcxz scas (bad) mov mov (bad) (bad) leaveq jno rol rol (bad) in mull mulb pushq iret mov or lods (bad) hlt mov fs (bad) (bad) lcall loope pop stos cmpl (bad) push ficoml (bad) mov and jne fisttp je movsl cmp test push xchg int3 cmpsb xchg rex.RX lock mov add (bad) pop cld (bad) lcall fnop mov (bad) mov adc mov int not jne pop jb mov mov (bad) ficomp sub cmc (bad) out sub ss xlat ja notb xchg imul repz fmul or scas jl pushq pushq imul or jg sub sbb add cs rex.XB cmp rex.WX rex.WR jrcxz mov rex.X xor addb in pop add iret (bad) data16 clc push rex.XB jo (bad) fbstp rolb iret rex.RXB sbb cmp retq cmpsl pushq nop test (bad) lcall sub mov or sbb rex.RX adc xor callq cmpsl (bad) rex.WXB rex.XB mov in rex.B movabs cmc repz test fmul std (bad) (bad) fisttp xchg and (bad) lcall add xchg add rex.WXB mov rcl out jle sub mov jne jmp jp enterq (bad) (bad) mov movslq test lods jnp rorl vminpd mov test std sub lea (bad) xchg jbe pop int3 (bad) movsb add xor (bad) jmpq retq icebp jne test cmp jmpq jmpq je clc bt stc sub bt clc jmpq je test clc jmpq add add sbb add (bad) mov cltd rex.WB mov test test out (bad) (bad) push jne hlt and (bad) or scas pop outsb (bad) vpaddb adc out (bad) rex.WRB repnz iret xchg jmp mov lahf shll xchg xor adc (bad) int (bad) xor rorb jp xor rex.B test cli xor pop cmp jno adc push (bad) insb rcl cli (bad) lcall or movabs cmp add cmp lock jrcxz or (bad) jp or pop testb xor pop in rcrl andl mov or rex push xchg rex.WR (bad) divl fsubrl pop cltd rex.WRXB lahf fisttp mov mov clc emms push xchg xor cmc rex.WRB rex.W icebp test (bad) (bad) (bad) jns roll stos lods rex.WX movslq shll mov hlt jl fwait xor push rcl rex.WRX shll cmpsb xor mov (bad) rex.W lock jae pop add push rex.WRXB fisttp outsl divl jmpq std popfq rex.WXB pop add jae xadd xor mov shr movzbw setne mov shl xor cmc setg mov cmp jmpq rep not pop jmpq bt jmpq jle jnp mov mov (bad) cmpsl push jbe shrl cwtl sti mov mov cltd leaveq add jo push cmpsl data16 mov movabs jg rex.R in cld (bad) lcall jmpq mov (bad) sub mov (bad) lret push or rex.RB test sbb sahf rex.WRX mov rex.RXB repnz xor xchg lret fildl mov xor int in mov sbb push xchg push xchg jo push pop scas jne callq jne sbb test loop jl xor xchg movabs in je retq and out psadbw pop out divl cmc mov in cmc mov rcl xchg (bad) (bad) sub mov rex push loope out stos je rcl rcl dec push bswap or not mov seto shld sar sub movzbw lea jmpq mov outsb fmuls cwtl out (bad) lods and (bad) pop sarl (bad) jp leaveq (bad) test xlat xchg add (bad) test mov stc movabs movsl test test notb out xchg cmp jg negl ss rex.WX and fidiv jp fmul adc push out js pushq mov gs std mov (bad) (bad) (bad) (bad) (bad) hlt mov mov rex.WXB insb (bad) rex.WR rex.WRB and imul pop fwait adc or sub sbb movabs add mov (bad) sahf rex.WR cmp jno add jg sbb add push xchg cmp (bad) scas (bad) mov cmp or loopne cmp adc cmpl xchg leaveq (bad) push shr sub shl data16 (bad) add bts mov (bad) lock stc test cmp repnz jmpq sub bt jle cmc repnz jmpq in push cmc pop mov mov rex.WRB xchg jmp jno jmpq nop and mov jle jno rex.XB or sbb mov xor shll nop pop out scas rex.RXB rex.RB rcl (bad) jp or rcrb jnp mov pop or (bad) lcall mov add mov sbb xor and jns je or retq movabs movabs adc xor rex.WRB fwait or add mov cld adc adc (bad) rex.R push out (bad) xchg mov ss (bad) (bad) and test sub add stos enterq (bad) sets mov jmpq ja test add cmp sbb test stc add test xor xchg dec mov ror rcl bt mov test test bt jmpq xchg mov clc (bad) (bad) adc jne addb test lret add (bad) (bad) addl movslq sbb mov mov xchg cwtl fisubrl (bad) (bad) dec movslq xchg jl sub stos pushq (bad) cld shr cld (bad) lcall mov sti (bad) lcall sub faddl adc (bad) (bad) fwait mov jle (bad) insl xchg rorl jbe,pn callq addr32 mov mov lock rex.WX callq (bad) xchg xor lods movsb cmpl mov scas jge and mov icebp addl xchg pop mov or mov xchg adc cltd rex.WRXB jg xchg sbb fwait or push rex.RB rex.WRX cs insb add movabs mov lods adc xlat idivb pop insb test (bad) (bad) and clc and pop outsb (bad) (bad) mov push pop mov int jno imul and jne in cmp sbb rex.WRX xor cmpsb (bad) mov and push clc leaveq orb (bad) lcall ficoml or (bad) (bad) (bad) or cmp cltd push xchg jb mov rex.WRXB fidivr cltd and test mov adc mov sub add icebp cltd out cmpsl jne xchg lods in jnp (bad) cmp jg jbe in lea andb jg sub (bad) fistpll mov movabs xor rex.RX jmp es xor mov cs xor (bad) cmc jge jp paddusw pop or (bad) (bad) (bad) add add pop icebp outsb clc jg maxps addr32 scas xlat iret mov outsl movslq rex.RX add movabs sbb add lret rex.WXB sbb decb xor (bad) and adcb ss shl mov push pushfq sbb mov sbb imul or stos mov pop lahf lea (bad) pushfq pop (bad) (bad) lcall adc xchg in sbb xlat mov cld (bad) (bad) jg sbb mov (bad) cmc mov mov (bad) fldl cltd sbb or callq or (bad) test stos cli icebp int3 rex.WX fldt leaveq loopne push mov imul in movslq (bad) je es pushfq jns pushfq (bad) and mov rex.B rex.RXB jge cmc xor jns adc loope mov xchg adc mov (bad) xchg jle subl out pop rex.R or in cli jp jmp sub loopne mov jmpq or imul rex.X (bad) jns hlt insb sub push jbe pop mov jbe mov rex.R xchg jb jo (bad) mov lret (bad) (bad) lcall imul (bad) fisubrl jno or faddl sbb fdivl cmp (bad) lcall cs mov sbb fisttpll mov movabs (bad) std xor adc or (bad) callq (bad) stc (bad) cmpsl test in popfq rex.WXB (bad) lahf iret sbb jmpq int mov and mov mov popfq jno movsb jbe je rex.WXB addr32 ja std adc out (bad) sarl rex.WB outsl (bad) mov mov jg (bad) cmpsl (bad) (bad) sub test pop jb and (bad) notl mov and mov rex.B (bad) jno mov (bad) xchg jne mov rex.WRXB xor int3 sbb (bad) out insb add (bad) adc jmp and sbb (bad) mov rex.WX (bad) push (bad) outsb pop movsb rex.WB rex.WRB mov push add movslq std sbb cmpsl stos rex.WRB mov (bad) outsb mov jg and pop (bad) rex.X jae fcompl or stos (bad) or pop lret subl mov cmp cwtl xchg (bad) fldl sub pop int jle test jrcxz cli sub repnz insb mov cmp mov (bad) test xor enterq rorb cld leaveq in insb hlt pushq (bad) pop add (bad) mov movsb cmc (bad) jb test mov (bad) add test js cltd sub setg fdivs (bad) adc pushq jnp (bad) mull add int add in add movabs xchg mov add movsb rex.WB loop push in add fs js test xor pushfq rex.RX mov (bad) jge (bad) retq push enterq test in push (bad) in sti cmpsb out ds callq sarb js out fcoml (bad) add movabs imull pushfq cmc sub sbb lea sub fadds mov (bad) frstor (bad) (bad) jg (bad) hlt and add rex.RXB and mov (bad) add xlat rex.RXB push rorl (bad) decl popfq sbb (bad) retq pcmpgtb jnp data16 callq fcmovu pop push (bad) sarb fisttpll xchg add rex.RXB (bad) (bad) jg push add sbb mov jns sbb orl retq movsb fwait retq cmp lret mov hlt (bad) mov xor rex.WRXB sub adc (bad) divl icebp (bad) jg sbb scas (bad) cmc popfq movabs adc or outsb (bad) fwait rolb and outsb and mov hlt je jmpq or imul (bad) hlt je or add (bad) rclb jg fisubr rex rex.W std movsl xor (bad) xor jle xchg (bad) test jb enterq cwtl mov jg adc out popfq pop insb test scas cwtl je sti sub adc adc and pushq rex.RX fldcw pushq es or xor (bad) mov cld (bad) (bad) fisttp rex.WRB (bad) cli (bad) lcall stos jno add mov xchg cmp sti or cmpsl rex.RXB data16 or mov or push cmp mov (bad) clc or fiadd xchg rex.WRX (bad) xor add mov rex.RXB cmpsl (bad) outsl ja insl add jle (bad) jle in cmp mov fldl movsb fadd adc sar bt jmpq xchg rex.WRX xor mov shll cltd retq rol (bad) repz pop cmp pop jrcxz (bad) fldl sub xchg cmp movabs (bad) rex rex.WRX je jp,pt es (bad) (bad) (bad) (bad) cli rex.WXB rex.WXB mov jmpq sub je popfq rex.B rex.WXB push nop mov pop gs xchg fisub movslq xchg push and test xchg shrb (bad) jrcxz loop push cld (bad) (bad) fist (bad) lcall repz (bad) lock rex.WRX (bad) int3 ja subb popfq add in int3 adc and fcmove or pushq jo (bad) in rex.XB in push xchg jb or pop mov adc cmpsb and (bad) mov lret cmpsl mov (bad) sbb xchg pop mov jmpq decl test (bad) add (bad) add test and add (bad) xor movsbw btr mov (bad) lock sar stc add bt stc rol mov jmpq rclb cmp test pop cmp sbb sti fiadd and fidivr mov (bad) mov mov rol xchg adc mul or stc cwtl ja (bad) xchg sahf xor adc (bad) (bad) (bad) mov imul jge sub sti pop pop sbb xchg fs sub (bad) (bad) fistpll and (bad) idivb enterq push adc rolb repnz (bad) (bad) sar fadds mov cltd xor cmpsb ds cmpsb jle,pt int3 sbb int pop std in test movabs mov and rex.B or and (bad) jno jnp (bad) and rex.W iret scas out cmp (bad) and sub rex.WRX sti rex.WX add jmpq sub cmp clc stc bt pushq cmc cmp stc cmp cmp jmpq in test cs sbb cltd out pop outsb ss movsb in rex.RXB int test jb (bad) test scas (bad) je fbstp (bad) (bad) jl add roll and outsl rex.WRXB (bad) in lods jnp add push sti cmpsb push xor mov (bad) (bad) lcall leaveq mov (bad) mov cld (bad) lcall adc add cmp (bad) lcall xchg pop lea jnp vpmullw mov nop push repnz movb xor rex.R or mov sub out xor or add sub jle adc pushq jg (bad) (bad) (bad) fwait movl add outsl or xchg sti ficoml (bad) cmp mov scas jl sub scas (bad) in movsl sbbl out popfq add jne or sbb ss sbb shlb test bt pushq test cmp jmpq jae stc cmp cmc test cmp jmpq adc rcrl sbb sub add mov rex.RX add stos jrcxz cld xlat push rex.X nop leaveq stc adc lret movslq xchg rex.WB cmp (bad) mov lods jnp rolb jle jbe (bad) (bad) (bad) rcrb mov movabs (bad) (bad) mov rex.WXB (bad) lcall out movabs xchg leaveq push mov movsb jrcxz std fs imul mov sti mov js (bad) adc rorb rex.RX sbb mov rex.XB rex.XB rex.R sbb mov fcmove loop movabs mov cmc mov (bad) push (bad) mov cmp jb (bad) test (bad) jmpq cmp cmp cmp cmc add cmc sub jmpq callq not bt add sar mov test cmpb jmpq xor sbb retq or (bad) (bad) pop insl lods sub rex.WRX int and rex.XB (bad) outsl sahf movsb hlt cmp imul adc xlat scas pop (bad) jmp sbb callq rclb jbe and cmp (bad) (bad) fildll int3 movsb insb movsb mov imul cld (bad) lcall xchg and (bad) sti (bad) lcall in out (bad) adcb mov and jnp sbb jge (bad) adc push xor pop andl sub jbe (bad) psubusw push (bad) rolb fistp sar (bad) mov adc cmp fnsave xor subl (bad) sub mov hlt sbb jmpq cmp in loope out int rex.WRXB mov mov jb clc cmp jmpq xor sbbb lret nop jo imul cmp rex.X (bad) fucomip mov insb pop or jno pop xchg jbe cmp mov cwtl iret (bad) rex.WRX add fidiv fcmovne rcr imul mov movsb sbb jb movabs test lahf pushfq or mov mov rex.RXB and frstor movsb sti add jg adc (bad) lcall cli ror (bad) (bad) int3 ja (bad) outsl callq sub adc mov jno rex.WRXB in mov rex.RXB insl mov mov scas roll jns xchg push (bad) fistpll in cmp fs sub callq mov push pop mov cmp (bad) jae movabs sbbl in rex.WR data16 xor (bad) sub sbb mov loop loope lock ja (bad) lock xlat retq cmp stc xor pop imul pop out adc jbe or cmpsl adc or (bad) (bad) lcall nop cmp or add rex.RX clc cmp cmp fs adc mov stos cmp clc xor xlat mov (bad) and (bad) (bad) fild scas retq sti (bad) lcall cltd cltd cs pop mov int test gs cwtl in and fcom jnp or rex.W rex.RB pop (bad) mov lea mov lahf rex.WRB in xorl adc (bad) and jb mov ss nop (bad) add in jnp xor bswap pop jmpq cmp or jmpq cs jbe sahf sbb mov xor xchg rex.XB rex.WB clc cwtl (bad) outsl (bad) adc add or cli push jns enterq vunpckhpd mov test pop andl pop out sbb add (bad) (bad) (bad) sub xor sub (bad) jg cltd int mov xor adc (bad) mov cltd and (bad) sbb mov xor movabs xchg (bad) lcall subl xor or out cltd rex.B test data16 mov mov subl xchg push cmp xor adc adc xchg jbe add leaveq (bad) jg add mov cwtl (bad) (bad) xchg rex.RB (bad) add bt sub cmc bt cmp jmpq callq sbb mov setbe add xor and mov test cmp cmp cmpb jmpq (bad) outsb faddl sbb imul sub adc mov sub cmp (bad) (bad) jbe cmp adc out cmpsl xor rex fidivrl xor (bad) lcall (bad) mov (bad) push nop js (bad) (bad) enterq insl imul cmp fnop and rex.WR cmp js out (bad) loope (bad) je (bad) test add pop sbb xor cmpl mov mov jl and popq sti or pop cmp out fisttpll rex.WXB movabs jrcxz loopne cmc rex.RB rex.R test cltd rorl (bad) xor (bad) ja callq stc or jmpq je bsf btc inc add not bts btc adc sub cmc jmpq jb clc stc cmp jmpq jmpq clc test cmp add jmpq jmpq push icebp sahf or sbb add rex.WXB pop cmp ficoml test (bad) (bad) notb cmp mov addb out ficomp xor cmp pushfq rex rex.R imul rex.WRXB (bad) lcall insb jb sub out rex.WXB cld (bad) lcall and (bad) lcall je,pn rex.WXB (bad) pop cmp movslq sbb mov add cmpb rex.WXB xor (bad) add icebp add stos xor mov test (bad) rex.WB add and ss lahf rex.WB rex.RXB mov add andl imul sub hlt or (bad) movabs subl in lret (bad) rex.WXB in cmpl (bad) add test in add mov or mov push btr adc mov or sub lea movsbq lea jmpq test push movabs stos sub cmp (bad) (bad) add and xor movabs xchg rex.WX rex (bad) outsl pop mov rol out in sbb sub (bad) scas jle cld or (bad) xchg (bad) xchg mov xlat outsb cmp pop rex.RXB (bad) push add std jns fisubr pop insl sbb stos out jmpq sbb stos add outsb fist clc movabs scas jbe jmpq (bad) sbb stos rex.WRXB js cmp (bad) xor test sbb imul mov add test movabs sub xchg nop push movabs rex.WXB lea sbb add xchg rex.X (bad) sbb adc movabs (bad) scas lods rex.WXB fwait rex.WRB (bad) (bad) clc mov jb fbstp xchg xchg cld (bad) (bad) mov in jmp sbb sub jnp cmp xor rex.WB es stc rex.WB (bad) std jne test or rex.RX xchg sti xor push xchg fs rex.X add (bad) fisubr mov rex.XB jrcxz mov pop int3 xchg sti adc std sub add jmpq jmpq test or jmpq callq jne adc jmpq gs movabs jne (bad) loope (bad) insl (bad) fnstsw sub imul rex.WRX ss adc sbb sbb test repnz stc or lods push in (bad) (bad) (bad) fistpll (bad) pop rex.RXB out and out cmpsb rolb fadds (bad) (bad) (bad) rex.WR (bad) mov (bad) (bad) mov mov outsl mov (bad) (bad) pushq sub fidivr rex.RX (bad) (bad) rex.RXB xor (bad) xlat adc loope shrb callq jle stos mov test test (bad) (bad) leaveq (bad) (bad) outsb rex.WRB rex.WRX outsb fimul (bad) pushq pushq cmp or rex.XB pause sbb scas jl cltd (bad) xor ss (bad) int or int add add add add shrd setle shrd ror mov rol bsr btr mov movzbw bt bt bt mov bsf xor mov btr cmc push rcl mov adc sub stc btc shrd sub bswap mov not lea mov mov mov xchg xchg movsbl mov jmpq (bad) xchg mov (bad) or mov xchg (bad) mov mov negb sbb enterq adc mov movabs sbb out insb (bad) mov rex.X rex.RX jmpq xchg pop ds roll lret xorb sbb lahf xchg rex.RXB add xor test sahf scas (bad) vdivss movabs or lcall rex.WR rex.WX addb js testb sbb iret lahf cmp xchg vsubps sub (bad) xchg imul (bad) cld pop (bad) cmp and jb mov xchg or sbb (bad) (bad) sub jp rex.RXB rex.RXB or add cmpsl test (bad) or (bad) in add xorl shrb add shr jmpq movabs mov repz and rex.WRB sbb adc push jae sub mov out sbb or pop movabs jrcxz mov insb fwait repz (bad) (bad) fcomip test xor (bad) outsb mov jmp (bad) lcall rex (bad) lcall mov movsb out sub mov xchg push cmp cmp (bad) rex.RX xlat xchg mov movabs movsb sahf jge movsb loop shll out pop jrcxz jmpq pop xchg adc sub fdivrs out (bad) xchg jp clc cmp jbe retq sub andl gs movabs and ja stc imul cmp add jmpq mov clc bt stc mov dec mov sbb mov cmp dec jmpq add push jns je insl push (bad) jb insl gs jb rex.WB outsw add sbb cmpb jmpq cmp mov stc cmc clc test jmpq ja cmc add test or jmpq callq adc bt clc not add xor rol mov clc test bt cmp cmpb jmpq jmpq jmpq cmp sbb sbb or push xchg rol (bad) mov mov xchg or cli cmp mull ja xor rclb xchg pop movabs jns lods jge jle (bad) (bad) jg (bad) push (bad) (bad) jno adc mov mov repz and jmpq ja scas (bad) push add fistl mov fdivrp (bad) (bad) (bad) fstps (bad) (bad) mov retq pop cltd (bad) push iret sbb gs rex.WR mov cli add (bad) (bad) mov test mov pop (bad) adc mov (bad) xchg int3 (bad) in ja std sub and lahf movsb je stc rex.W fmuls mov cmp or pop repnz xchg ds sub lret xchg jle pushq jmpq je cmc test stc jo add cmc clc cmc cmp jo jb cmp cmp jmpq je stc cmp jmpq addb adc or retq (bad) (bad) je add mov jge mov (bad) jg (bad) mov mov mov in sbb rex.RXB retq cltd xchg push xor in sub mov stc jno cmp (bad) (bad) (bad) (bad) out (bad) cmp movslq (bad) fbld sti (bad) lcall xchg (bad) and cli movabs imul addr32 je jg std insl mov (bad) lahf (bad) fist (bad) movsl ficompl loopne mov callq movabs xchg pop stc imul xchg push adc cmpsl push (bad) pop sti repnz (bad) out ss (bad) (bad) rex.RXB test (bad) jge jmp (bad) rolb sub (bad) insl or add mov cmpsl out pop (bad) pop movsl subl mov cs stos sbb fwait xor and fstps rex.R jp hlt mov (bad) es pop mov hlt cmc hlt rorl test out (bad) cmp (bad) subl ds sbb sti adc nop (bad) fucomip (bad) mov stos or sbb rex.RXB es jl insb repnz sub mov mov xor insl xchg push fwait push stc jmpq jle movabs jns out (bad) (bad) mov shrl jns push (bad) and cltd rex.R push std rex.RB mov outsl adc xlat jl stos sbb (bad) or xchg movabs rex.B fs mov push (bad) imul imull sbb pop or movslq xor sub adcb repnz jno pop mov jle (bad) adc jg xor test cmp (bad) (bad) mov cmpsb out rex lock xor rex.WXB lock xchg (bad) (bad) insb cmp sti adc add fadds jbe jmp stc rex.XB mov (bad) data16 jb or pop mov jno es mov fstps xchg push push or (bad) std adc xchg lock mov rcl sub shl add (bad) lock mov mov setge rol neg mov stc test test repnz jmpq add jmpq jmpq jmpq xchg push mov cmp sbb (bad) outsl sahf jbe mov test push xchg adc cmp (bad) (bad) in sub sub rex.RX insb (bad) mov lods cmp push jbe leaveq xor xchg (bad) xor popfq int rorl or (bad) (bad) mov or (bad) (bad) (bad) out pushq or pop push ss rex.R sub sub hlt in pop push pop xor push xchg push pushq jge lret iret cmp (bad) mov int out retq icebp add xchg xor xchg add add rex.XB repz or in cmp movabs test pop (bad) jmp ja mov rex.WRXB pop and sub (bad) add jle in cmp add add lea rcrl icebp sahf sbb (bad) je rclb out cmpsl sahf (bad) rex.XB jne jmpq cs lods sbb (bad) fisubr fdivl scas hlt sbb add jrcxz add sub (bad) jl and int3 push mov nop rex.W mov rex.RXB lret mov (bad) cmp scas dec jl sub orb (bad) (bad) (bad) mov rex.WX scas mov pop cmp sbb (bad) movsb or (bad) (bad) (bad) dec enterq add jo (bad) pop mov and add mov callq xor bnd pop adc add jae (bad) test jo mov movsl cmp xor jne rex.WX or andl movabs jg lods push mov mov mov adc movsb push jae add jg (bad) es outsb ds (bad) je fildll cmp (bad) xchg jge mov stos sbb (bad) pop out xchg test lea sarl sbb sahf sar (bad) (bad) xchg pop xchg and pop push xor repz jmp adc pop xor (bad) lcall lods rex.RB rex.WRB rex.RB data16 gs imul or fs push retq mov cmp mov (bad) stos subb in cmp lcall xchg std add and (bad) sbb cmp (bad) adc xchg rex.WRX adc hlt and pop jl jge (bad) cmpsb rex.R es rex.R jge push rex.WRX (bad) sahf mov rclb adc out add fnstcw iret sbb jmpq js popfq (bad) scas sbb (bad) (bad) insb fwait rex.WXB mov and rex.RB sbb loope movabs mov adc out xchg pop mov movabs movsl or (bad) stos movabs push cs jg sub fild (bad) mov mov or iret sbb sub (bad) (bad) (bad) mov int (bad) scas jns out int3 add in and (bad) sti (bad) lcall lods and mov test or pop (bad) sub cmp int gs pop cmp (bad) scas leaveq mov incb pop insl adc imul loope jg out push xchg insl adc xchg jg (bad) (bad) xor stc xor ja std xor lahf ljmp fadd add (bad) xor add lods lods (bad) add or xchg rex.WRXB or shr lock mov mov hlt xor repnz sub lock mov out int3 mov in mov out (bad) in push rcrb out push mov (bad) rorb mov mov rcl std lock mov xchg push jle (bad) hlt movabs sahf lock cmp mov hlt lock in mov fbstp xlat sarb in add push test rex.W addr32 mov test cmp movabs movsb jb (bad) (bad) rclb (bad) hlt cwtl std hlt (bad) mov in in lock pop nop cltd push xchg (bad) hlt in in (bad) std shlb test rex.W mov mov out hlt (bad) or (bad) fnop adc (bad) out rclb jl add mov rolb insb nop xchg cmpsb in cmpsb lock (bad) xorl or sbb (bad) movslq jo push fist push out push insb hlt mov xchg jb sbb hlt std lock mov mov lock mov (bad) out pushq rex.WR hlt mov lock in (bad) rclb pop xchg or hlt int3 (bad) cmp es mov shl cmp rex.WR rorb mul push push sarb mov hlt mov movabs je lock xlat test adc sarb xchg add sub jg push (bad) sarb (bad) js mov (bad) sti rex.R rex.RXB add insl idivl cmp repz lock xchg hlt (bad) out hlt ja mov out jmp and (bad) scas lock hlt mov mov mov pop jrcxz (bad) mov push rolb in jbe (bad) (bad) rcrb mov rcrb xchg shrb (bad) adc or (bad) rex.R lock mov hlt mov hlt (bad) mov mov hlt mov xchg rolb (bad) adc shrb hlt jne retq (bad) ja hlt repnz jbe paddb rex.WR lock push hlt mov lock mov rex.W lock xchg out push repnz stos xchg push adc rolb lret sarb (bad) (bad) jg (bad) rclb pop push shl lahf cld (bad) (bad) mov cmp lock in hlt out retq xchg (bad) (bad) (bad) xchg rcrb je cmc (bad) div es (bad) push (bad) mov mov xchg add or movb add icebp xchg jg lock mov hlt sub jae mov push (bad) (bad) ja repz ror ja push (bad) mov shlb mov (bad) jne lret (bad) push shlb xchg rol rex.RXB rex.R and out push je mov rex.W lock add hlt mov rex.XB mov mov lock (bad) fs loop scas movsl jbe hlt jp ja mov mov lock mov xor mov mov hlt cmpsl add hlt (bad) loope out enterq lock outsl push add out mov lock mov hlt retq (bad) rex (bad) pop (bad) adc hlt movabs or shlb jae vxorps xor adc (bad) cmpsb xchg jg shrb iret gs shlb rcl test xchg sbb adc (bad) rex.WR rolb in hlt lock (bad) xlat xchg enterq lock mov out xchg pop fs xchg repz in rorb jrcxz repnz fdivrp testb (bad) test hlt loope lock enterq lock push mov fcmove test hlt (bad) lock push hlt mov lock in shr lock mov sarb lock cmpsb add pushfq mov in paddb jo xchg shl sub (bad) int3 rex.RXB lock push (bad) adc sbb lock adc faddp xchg mov (bad) hlt (bad) (bad) (bad) mov or pushq lock test (bad) lret lock addl xlat loop add icebp fiadd out rcr mov cmpsb cmp mov sbbl shlb je mov (bad) jrcxz (bad) ja hlt mov lock rex.W lock and (bad) mov rex.W lock mov xor cmpsb lret (bad) imulb (bad) sarb mov (bad) xchg sahf xchg int3 xchg xchg hlt pop (bad) xchg shrb (bad) jno (bad) mov hlt test mov (bad) orl pop mov rorb (bad) scas (bad) in (bad) sarb pop (bad) xchg jbe hlt sbb (bad) xor out mov sbb (bad) out or (bad) test hlt rex.W lock mov add movsb adc hlt addl out or push (bad) div rex.W xchg or hlt jg (bad) mov hlt sbb xchg adc mov cmpsb mov mov out xchg adc push xchg (bad) in sarb js xchg mov hlt rex.R lock mov rex.W lock loop lock mov hlt xchg rex.WR lock mov mov adc xchg lock xor or je mov std loope in enterq lock movabs xor cs xchg rex.WRB mov cmp mov mov add xchg (bad) or stos push rex.WX rex.R lock hlt and mov add pushq add hlt (bad) in xchg mov adc jrcxz lock (bad) in hlt stos pop lock mov hlt rex.X lock xor rex.WR mov (bad) xchg adc (bad) rorb repz outsl push push rclb push rcrb sbb (bad) (bad) shlb push shlb xchg rolb hlt std lock cmpsl rex.WRB mov iret adc adc add hlt fs hlt mov out push lock (bad) mov push mov xor rex.WRB sbb sbb lret add jbe mov ror rex.WRB mov shrb in rex.WX rcr rex.R lock mul hlt cmpsl lock mov movabs mov enterq lock jg rcl rorb loope push push mov rolb repz xor rcrb cmp not (bad) mov rex.WB rex.WRX adc shl mov mov xchg (bad) sar js add xlat xchg mov sarb rex.RXB (bad) repz repz rex.W (bad) jno jge (bad) rcrb xchg (bad) in shr loope addr32 hlt scas rex.R lock mov hlt cmpsb lock mov rorb out out (bad) (bad) xor (bad) xchg jns (bad) jne push shlb push es in (bad) iret imul test loope in shlb (bad) xor cmpsb out shlb xchg rolb (bad) hlt rcll hlt jg lock xchg hlt adc in (bad) (bad) (bad) rclb push rcrb push mov rol rex.WB mov xchg rcrb addr32 repz (bad) sarb mov shrb xor (bad) mov jl xchg sub jg shlb adc push push lods shrb icebp jae push rex.WX adc rex.RX mov mov rex.W lock mov mov lock mov hlt subl hlt out or add mov rclb shlb mov (bad) movsl out lock hlt movl adc enterq hlt ja mov mov lock mov mov (bad) (bad) ja mov out jl lock push mov loop nop in lock hlt test cli (bad) out add rol mov xchg shlb (bad) mov sar mov hlt (bad) adc in lods hlt xchg mov hlt xlat scas lock mov hlt lock mov add test xchg (bad) mov hlt cmc scas lock jl test xchg add cwtl in (bad) (bad) mov rclb xor push mov shrb push xchg mov stos mov xor in mov mov hlt xor cmc mov loop test mov xchg rolb in es (bad) std (bad) ja hlt insb (bad) (bad) cmpsb std shlb push xchg rorb je (bad) push push (bad) (bad) jne rex.WX mov imull xchg mov xlat shrb (bad) cmpsb movslq sarb pop hlt (bad) mov push sar push rex.W push mov rcl movsq insb (bad) jbe sar cmp jbe xor rcrb cmpsl adc rolb rex.W xor mov sbb hlt test (bad) mov rolb push sarb jb addr32 mov (bad) and mov shrb push xchg shrb add (bad) (bad) mov (bad) ds in cmpsb xchg (bad) (bad) rclb (bad) (bad) (bad) hlt hlt mov lock lret hlt stos rex.R lock add fs mov xchg scas lock mov hlt jp ja mov mov lock (bad) mov (bad) jge (bad) in push (bad) mov fbstp loopne pushq rex.W rolb lock repnz (bad) hlt movabs lock sbb gs mov rex.RXB movl mov rex.RX hlt loopne xor mov rex.WR lock out rolb scas add xchg push rcr mov test movabs test xchg rex.W rex.RB rex.WR cmpsl lahf xchg movsb xchg mull in pop lock xchg hlt mov (bad) hlt rex.R mov hlt (bad) rex.WRB push cld hlt (bad) lock addr32 hlt add lock hlt (bad) xchg cmc mov (bad) iret xor cmpsb mov rclb retq mov in xchg (bad) xor jnp xchg cmp (bad) hlt data16 rex.RX sarb xchg sarb sarb imul jge xor or rcl movslq int (bad) (bad) out (bad) lock (bad) jb rex.X lock hlt (bad) lock mov mov lock (bad) mov (bad) out shlb rex.RX rex.R xchg (bad) (bad) hlt sub scas hlt and enterq fs mov push add (bad) rclb hlt loop out jb hlt mov stos push jnp mov mov rclb (bad) rex.WXB mov push rex.RXB (bad) repnz rex.XB data16 (bad) std rclb xchg xchg fnop je out push popfq sarb (bad) rolb xchg out (bad) rclb sub ja push rex.W jg mov push add ja stos jbe jge jl shufps adc lods loope xchg mov mov jbe sarb loope (bad) mov hlt sub rex.XB hlt hlt mov lock mov (bad) xor sarb mul rclb (bad) retq (bad) mov push (bad) shr lret in (bad) rorb mov sarb (bad) (bad) add rex.WXB cmpsb mov hlt xchg mov xor or sbb lock testl mov push shlb ja jbe mov lock mov (bad) adc hlt mov lock (bad) mov mulb rolb rclb xchg mov (bad) hlt mov mov xchg (bad) mov outsl add xor xchg jp xor (bad) shrb (bad) icebp jmp lret mov cmc rclb repz enterq loop or xchg rex.R lock xchg out (bad) lock (bad) (bad) rolb pop int iret data16 (bad) sar jle add callq rex.W (bad) xor rex.W test hlt rex.WXB (bad) mov hlt sbb (bad) mov push add push rex.XB rex.WRX movsl loop mov hlt fisttpl xchg hlt mov lock mov mov hlt sbb hlt mov add test mov rex.W lock (bad) xchg mov add xchg add lret rex.RB (bad) adc rex lock push (bad) and movabs out rcrb in popfq lock in xchg rorb adc (bad) pop lret push rorb (bad) or clts mov (bad) ror sub (bad) (bad) add jl insb (bad) mov push sar loope cmpsb adc add (bad) fxch (bad) (bad) mov mov test out sar jle cmp rex.RXB mov std (bad) mov lock xchg mov (bad) lock (bad) hlt rol jbe xchg hlt jg lock div pop mov push xor ja mov rex.W mov mov jnp lock stos ss rolb rex.WRX fdiv movsl out (bad) (bad) fnop js mov push rex.WR movabs shrb push shlb (bad) lret hlt jl (bad) out rclb psubb rex.WRB rex.WR fs loope (bad) jge xchg scas (bad) shr jno xor fs insl idiv push shrb imul gs hlt (bad) jbe xchg rolb pop (bad) addr32 hlt movsl lock mov hlt je pop (bad) jg push rclb push hlt hlt (bad) mov xchg (bad) hlt mov mov in cs adc (bad) add pop mov icebp add std shlb sub andq out mov cmp mov (bad) pop insb hlt movsl test (bad) hlt rex.R jg jne xchg mov add cld cld gs fst add rorb cmpsb in shlb in lock test mov hlt add mov hlt mov xchg test es (bad) hlt ds cmpsb mov mov rex.WB lock mov hlt rex.W hlt mov mov mov lock mov repnz shl rex.RXB (bad) (bad) mov mov callq xchg shrb mov (bad) out stos hlt xlat push jle outsl outsl hlt (bad) ja mov lock mov hlt jg lock mov hlt mov in jbe xchg std (bad) hlt fdiv test (bad) (bad) scas lock mov (bad) int3 rex.R fs hlt pop lock hlt or rcr (bad) addr32 hlt int3 rex.WXB adc (bad) mov movsl mov int3 pushq cmpsb jae hlt mov lock mov mov (bad) or jnp shlb (bad) div movsb mov hlt mov lock repz rcrb fs mov (bad) sarb (bad) in jmp int3 ror movabs (bad) hlt xchg in (bad) xor test (bad) (bad) xor repz add in xchg rolb insb hlt (bad) rex.RX repz lret out rorb iret test shl xor rorb mov cmp cld hlt stos sbb ja (bad) hlt mov lock (bad) mov mov cmp hlt retq rcll enterq lock mov test add (bad) (bad) hlt (bad) mov cmpsb xchg or hlt mov jl xchg ja mov (bad) movsl mov xchg not add jne xchg hlt cmp (bad) cmc xchg hlt rex.W hlt rex.RX hlt iret loope xchg (bad) mov hlt push lock cmc mov imulb push xchg shrb out rex mov or mov push rcl lock mov mov lock mov fs movsb rex.RX hlt xor rex.RB jnp hlt (bad) (bad) hlt test fcomi jg mov (bad) jo rcll iret xor rorb lock (bad) mov jns jmp test hlt rex.W lock mov xlat std push rcrb (bad) stos lret cmp retq repz lock xchg div test scas (bad) xor hlt ja mov mov lock mov xor mov rclb mov xchg hlt jo xchg mov rorb (bad) (bad) (bad) (bad) shrb hlt rex.WR rex.R lock mov hlt mov and mov hlt sub movabs rclb jnp hlt ss sbb std shll pop (bad) (bad) adc cmp lock mov repnz addr32 in (bad) jae (bad) adc hlt es mov out outsl repz hlt xchg in push sarb (bad) cmpsb orl movslq sti repz push xlat repnz pop je push cmp jg xor (bad) in xor (bad) ja push xchg (bad) rcrb push xchg rclb hlt jg (bad) test shlb div hlt in (bad) hlt xor rclb hlt (bad) repz add paddb jb xchg in xchg (bad) stc rorb (bad) icebp (bad) push (bad) xlat rclb push hlt add (bad) (bad) (bad) prefetch or xchg test hlt rex.W push mov mov jl adc pushq imul gs hlt jmpq adc nop loope xchg mov hlt rex rex.WR lock mov mov sarb out rcl add hlt in enterq push rorb data16 rolb jg hlt out jnp shl icebp push ss (bad) shlb rex.WR notb hlt hlt lock mov rorb lock push repz xor mov shrb (bad) in push shrb out rex.W addr32 sbb in (bad) movabs ja mov out xor (bad) jmpq jl fisubl pop rex.W lock repz sbb mov rolb (bad) mul hlt fnop out addr32 sar std lock mov (bad) rex.WRX add (bad) fiadd push push rolb adc (bad) rex.WRB mov cmc repnz xchg mov rex.RXB notl mov (bad) mov mov (bad) jne jmpq int3 (bad) scas mov stos iret xchg add and fsubl jo in hlt (bad) (bad) data16 pop (bad) shr movabs xor shrb push jmpq int3 (bad) (bad) or cmpsb rex.WB cmpsb (bad) mov xchg notl jae in addr32 jrcxz (bad) out sarb add push mov in xchg (bad) mov xchg jle mov jo xchg mov rolb lods jl std movsl shlb in push addr32 bswap (bad) rex.W rcrb mov mov repz shrb test std and push mov rcrb xchg jg xchg xor hlt push mov sarb mov rolb rorb mov push rex.RB adc adc mov lock mov mov adc je out sarb push (bad) lock mov in shrb lock (bad) shrb push in adc in cmpsb shlb (bad) hlt test pop movsl shr in idiv add (bad) (bad) mov (bad) jae (bad) rclb rex.WRB jns rex.W paddusw jge andl hlt fsts rex.R repnz (bad) rex.WR clc hlt sub xchg jmpq lret (bad) mov xchg lret shl and (bad) rclb shr in ja out rex.WRB repz sarb lock mov xchg ss xchg (bad) rclb mov add (bad) repnz int3 (bad) mov (bad) out shrb movsb (bad) mov mov adc stos test cmpsb ror rex.WRB cmpsb (bad) xchg movsl push cmc hlt callq jmp hlt int3 in cltd mov mov (bad) shlb lock std rorb shl mov shlb addl cmc (bad) rcrb rol in mov jbe shl (bad) push out rolb retq jne mov not in rex.RX push rex.WRB fs mov mov jnp rorb (bad) jo imul out xchg div gs xchg out cld hlt rex.RX lock xor mov shrb xor push es fistpl mov xlat (bad) sarb cmpsb mov sar out cmc notb pop xchg shrb rex.WRXB test cmpsl shlb rolb sarb mov js xchg xchg addr32 (bad) retq rclb rex.B xchg in add (bad) testl xor test rex.WR jmp sbb mov hlt sbb out push (bad) test or test retq ss jo and adc in mul and test fdiv add (bad) out rcr xor sbbl cmp or loopne hlt and push (bad) sarb in lock shlb mov out (bad) in not mov mov loopne iret push rcl adc rex.WRB es hlt loop (bad) hlt movsl mov (bad) rorb push hlt scas mov rex.RX orl mov xchg fist hlt callq in (bad) jo rex.WXB data16 shrb test (bad) repz add jg mov mov mov sbb jb (bad) mov mov and mull stc rolb cwtl fist mov rcrb rorb xor rex.RB rcl sub xchg fstpt shrb and loope adc sub retq and sbb hlt mov rex.RB jne loope out (bad) hlt xchg adc and hlt mov in hlt je and pop lock in xor test rorb mov (bad) mov (bad) sar test std cmc shrb add jle mov push ror cmp mov add push mov rex.RX (bad) xchg (bad) mov rex.R hlt loop adc nop divl loop mov xor mov rcr out jg mov shlb and (bad) (bad) shrb repz xchg xor out nop xchg push mov ss (bad) xlat (bad) mov (bad) adc lock mov sahf pop xchg add push std sarb mov sarb mov mov data16 rorb scas hlt vmovmskps rclb in std sarb mov sarb xchg xchg sar jae hlt (bad) mov movslq xchg push mov rcl pop mov (bad) lock add jne push hlt add div rex.WRB xchg (bad) jbe jmp test hlt sbb mov jg hlt jg push hlt sarb lock cld test rorb xor (bad) push push sarb xchg (bad) jbe mov jbe test cmc std push ror sbb (bad) movsb sbb decl hlt int3 (bad) not iret xchg hlt jl or rex.WX sbb pop jrcxz out shl mov (bad) out sarb xor mov int iret hlt hlt cwtl int (bad) mov rcrb xchg (bad) mov in hlt mov sbb pop jrcxz out rcl jg hlt (bad) mov (bad) out hlt data16 hlt push fidivrl rorb mov and hlt jnp repz int3 rolb (bad) mov repz out js hlt hlt in je adc lock test enterq mov add sar in cmc sar mov jrcxz movsl out shrb cmpsb fnop (bad) mov mov hlt test hlt jl stos retq je sarb rorb xchg rex.WB rex.WRB mov (bad) shrb sub shlb (bad) not xchg sahf (bad) adc adc jmpq (bad) ds ja test shlb or (bad) xchg xchg mov mov (bad) xor (bad) mov rorb push (bad) rex.RB repnz mov (bad) sbb (bad) mov xlat rclb mov int3 mov xchg and xchg rorb xor (bad) lock mov xchg cmp shlb (bad) (bad) bnd mov (bad) hlt (bad) xchg adc (bad) out (bad) repnz rex.WRX rolb out shrb in rclb mov (bad) idivl xchg (bad) xchg jp rex.WR test xchg lock mov add rex.WRXB repz out shlb add pushq and (bad) not or imul add fiaddl shl iret push adc and rclb (bad) shr jo mov shrb in repnz mulb xchg (bad) data16 hlt rex.RX lock addr32 hlt fisub (bad) (bad) jnp rolb push xor pop xchg div lock test rclb lock mov mov jo push and push rolb (bad) jnp (bad) mov push rex.RX (bad) shlb test xor mov rcrb xchg shl ss and xor cs (bad) xchg sub mov hlt mov lock mov (bad) fsubs mul (bad) (bad) jne jl push push ror (bad) mull in (bad) lock jo mov rclb shll movabs in int3 (bad) jo (bad) jo popfq in push in retq (bad) jbe mov (bad) hlt (bad) mov mov push adc shr rex.R lock mov hlt test hlt cltd lea rex.WR lock xchg jg shlb lock push hlt repnz add (bad) adc adc lock rex.W js add in push neg stc rolb cmc xchg (bad) paddb (bad) lock mov add icebp hlt ss shl in xchg jg rclb sbb mov jmpq hlt addr32 vxorps xlat in test hlt loop lock mov hlt rex.WB lock movsl rex.R lock push push xchg loope ja mov out (bad) push in xchg shlb jl push push rorb (bad) shrb idivl movabs xchg negl hlt movabs lock mov neg int btc hlt mov lock rex.WRX lock repnz leaveq scas lock mov hlt mov iret ss (bad) rorb rclb (bad) (bad) rex.W lock jbe (bad) loope xchg mov hlt and lock mov rcr lret (bad) jo mov mov (bad) ud1 clc iret out mov (bad) mov mov mov mfence (bad) (bad) jl (bad) lock mov mov lock mov rex.RX hlt rex lock mov sbb divl stos (bad) (bad) shl test ror movsl test rolb out cmp data16 mov mov movabs (bad) ja mov lock xor hlt cld popfq test paddb callq hlt mov lock mov (bad) rex.RB cmp mov xor push in cmp not mov rolb hlt cmp xlat (bad) push jge add fild rcll mov (bad) add hlt stos loope ss hlt pop rex.R lock add adc xchg mov xlat rol insl data16 mov (bad) imul jo test test mov (bad) repnz rclb adc hlt divl fs test xchg mov rex.WRB lock div jg lock mov hlt sbb lock notl lock sub rex.RB mov hlt add jg ja sbb scas (bad) hlt outsb retq xor test lock mov (bad) mov xor mov (bad) rex.WRB in out shrb adc sbb lock xchg enterq lock xchg test xlat and (bad) sub jrcxz out rclb lock movsl enterq lock out pop lock mov (bad) xchg and push lock hlt in and enterq lock out sbb mov mov enterq movsb mov mov push lock rex.R lock mov hlt xchg mov mov sub and (bad) mov int3 (bad) adc (bad) (bad) hlt xlat xchg (bad) fnop movabs hlt mov repnz rex.X lock mov hlt adc xchg (bad) add add (bad) rex.W cld hlt ss hlt mov xchg repnz test lock xor hlt test idivl lock callq hlt mov loopne xor mov jg lock add (bad) repnz cld hlt test mov mov lock mov rolb out (bad) lock mov insb rex.R lock hlt and (bad) (bad) mov sbb push mov adc scas hlt xor lock xlat mull hlt rex.W stos in fs repnz (bad) je lock (bad) addr32 hlt lods rex.WR lock xchg mov hlt rex.W ss hlt or lock je insb hlt and mov hlt sti rex.R lock lock mov rex.WR mov (bad) je (bad) (bad) rcll adc mov pop in push mov imul pushfq adc (bad) add gs xchg hlt jg lock push rclb xor cmp rolb hlt jg (bad) ror nop xchg lahf (bad) hlt rex.W rex.RX hlt sahf in xchg or hlt hlt lock test rex.W movsl mov adc mov jg lock add xchg bnd cld hlt out hlt ja mov out js push (bad) mov rex.W lock add hlt rex.WRX xlat mov imul je add scas lock rex.RX icebp mov stos sbb add lock retq movabs jg repz sarb lock push div and (bad) gs hlt (bad) jrcxz add jae lock (bad) mov shrb xchg (bad) adc rex.X pop xchg (bad) rcrb mov push in (bad) lock (bad) (bad) hlt enterq xchg (bad) hlt mov mov rex.W rex.WB lock mov xor hlt (bad) mov hlt ds lock hlt rex.RB rex.R movslq fs cmp std push ror and adc test and (bad) mov mov xor in mov jg lock xor xor push jno notl rorb (bad) mov (bad) testb rorb sbb jg rcl (bad) jo jmpq push shlb mov xchg mov enterq xchg mov push push scas rolb hlt (bad) add shlb sub cld (bad) (bad) ror mov or sarb lock mov in adc jg lock mov shlb orl rex.R sarb pop rorb shlb push hlt hlt (bad) rex.WRB iret xchg test xchg movabs (bad) out rol mov rclb xchg xchg jge lock mov adcl int test sub retq jl and hlt cmpsb push repz ror outsl and mov rolb fnop hlt mov hlt mov mov repnz movslq (bad) adc loop rex.WRXB jg (bad) shlb push in rex.RX mov jmpq rex.XB loopne mov lock push push (bad) sar cmp rex.W sarb orl (bad) (bad) jb mov (bad) int3 rcl (bad) mov xor jbe xchg adc xchg jg rcrb rorb sub cmc push push rorb jno rolb (bad) pop xchg adc movabs push or (bad) xrelease jmpq and (bad) (bad) roll mov push hlt bnd data16 repz std rorb adc insb sbb mov in div gs mov int lock (bad) repnz mov rcl fsubrp out (bad) hlt cwtl mov js (bad) (bad) cmpsl rcrb xchg std shlb add stc mov je pop cmc shrb in (bad) rcrb xlat (bad) adcl mov rex.RB xchg (bad) rex.WX mov hlt rex.RXB (bad) rcr ds out xlat rolb mov (bad) xchg fisttp jle lret sub adc retq jle adc (bad) jrcxz or add push rex.R hlt std in hlt (bad) gs hlt (bad) in ss hlt jo in hlt lret and adc scas jle adc rex.XB or add pushq in test rex.RXB hlt jge ja in in xor rolb add add sbb hlt (bad) jrcxz or xchg int3 sub (bad) int3 lea hlt and hlt ljmp int (bad) hlt hlt cwtl xchg mov rcrb lock xchg retq iret sub in hlt fildl hlt or cmp rorb sub hlt and push shr rex.WRB (bad) push mov (bad) lock cmc repz mov lock sbb in repnz jne adc (bad) or addr32 xorl hlt fnop scas (bad) push sahf rex.WRB mov adc lods (bad) (bad) in adc out jo pop mov out ror mov hlt (bad) (bad) jg rclb (bad) adc shrb ja rclb lock mov add (bad) lock stos (bad) jg xchg lock je mov shl test (bad) (bad) std cld pushq push rolb xchg rorb lock xchg push sbb gs push push push rolb cmc xorl rex.RX lock icebp sub shlb not icebp mov lock sub (bad) rcr in in xlat sarb jle xchg (bad) jmpq hlt xchg in xor rclb repnz mov (bad) mov mul movabs xchg sti and (bad) stc lock hlt repnz (bad) divl push mov hlt mov xchg cmc mov shrb (bad) lret (bad) or mov xchg fsts hlt xlat loope out enterq lock mov hlt (bad) lock mov rex.W mov mov (bad) rex.WR lock jnp rcrb div adc (bad) (bad) adc (bad) jmpq movabs jmpq jne movzbw movzbw mov jmpq bt stc repnz jmpq xor adc (bad) sbb (bad) test out sahf ds mov imul adc push jae rex.WX sti adc mov out cltd movsb or retq and (bad) out cmp stos jmpq rex.XB stc (bad) negl add rex.W cs std (bad) lcall adc lcall (bad) andb push push (bad) movabs adc xchg sbb rex.W (bad) rex.WRXB push out cmp je insb (bad) sbb stos cmpsb mov std and xchg iret loop xchg sbb mov (bad) (bad) (bad) sti adc int3 cmp rex.WRB scas mov es clc adc fstl fwait or cmp movabs (bad) (bad) fbstp scas iret sbb test out (bad) rex.R fs in cmc insl and (bad) mov xchg ss (bad) xchg xor movabs jmpq (bad) mov push jns or cmp icebp pop enterq (bad) sbb retq orb test jmpq insl and in gs sahf retq rex.WRB rex.WXB imul pop xchg repz (bad) lcall rex.W (bad) lcall retq (bad) adc rex.WRX pop (bad) ja hlt xchg stos mov js jno push in decb lods sbb lret push push mov loopne xchg or mov lret adc jne jg pop sbb (bad) addr32 (bad) sub sbb adc mov and and jns jns (bad) test (bad) add or mov (bad) jl movslq jmpq cmpsl data16 (bad) iret (bad) cs lahf cli rex.X out sahf stc (bad) test (bad) xor mov add movabs movabs (bad) (bad) (bad) out xor fldt loop lea cld (bad) (bad) mov adc (bad) lcall cmp cmpsb fs popfq shrl rex.B rex.WRB mov rex.W out imul pop jrcxz ss cwtl add fsubrs sahf rex.W sub jl stos jge roll pop loop pop cmp cwtl xor push (bad) jl push xor xchg xchg xor rex.XB insb add sbb test and rex.RX and jb jo (bad) outsb (bad) push rex.WRB mov (bad) sbb lret push ss rex.R movsb (bad) mov outsl (bad) cmc or loope sbb movabs xor (bad) ds hlt mov rclb mov lods fnstsw loop pop jo (bad) (bad) in jne nop pushq clc ja cs int3 lret pop jle (bad) lcall push xchg rex.WRB out rex.WR iret push (bad) test adc fcomps (bad) (bad) mov (bad) sti (bad) lcall or (bad) sbb xor ja (bad) movabs imul cs mov and or and mov and retq sbb rex.B (bad) (bad) mov add rex.RX adc rorl out rex.RXB sub sub mov insl mov test mov ja in test (bad) callq jmpq jmpq xor setns mov jmpq cmc xor test repnz jmpq cmpb jmpq movzbw and sub shrd rcr lea mov sar add sar add cmc neg mov test cmc stc test jmpq movsl or mov rex.RXB rex.RB mov jno test adc loop orl add loope fadds notb (bad) lahf mov sub rorl or or (bad) lcall (bad) mov xor int3 rorl rclb loope test scas sub (bad) (bad) pushfq int3 (bad) cmc insl mov (bad) push (bad) outsl mov mov xchg rorb shl out (bad) jrcxz (bad) lcall (bad) imulb xchg push jb xor mov stc fcoms adc repnz fndisi(8087 rclb ja (bad) add and andl adc clc jo (bad) sbb movabs xchg out cmp cmp fmul js (bad) fcompl loop sub add and sbb ds rcl stc test xor mov movzbw lea mov pop jmpq je bt add clc cmp jmpq popfq (bad) fistpl mov es test sub frstor cmp in gs adc mov pop cmp cli mov rex.X sbb cmpsl outsl sahf ss (bad) mov sbb adc (bad) lcall ja mov mov pop cmc (bad) jl push cs jmpq icebp push test (bad) jg mov rex.R (bad) lcall movsl insb (bad) push xor (bad) cmpsb (bad) data16 rex.W mov cmpsl rex.RX mov fs or movsb (bad) mov pushq (bad) push sbb (bad) rex.WRB push xchg fldenv (bad) xchg divl insl hlt jmp hlt repz fstpl je mov stos mov int3 stos imul adc movabs and cltd sbb cs lods and je sbb (bad) (bad) iret sbb sbb leaveq fsts rex imul scas push jne cmc bt movb cmc test jmpq inc cmp cmc xor stc cmp not stc cmc sub jmpq jne bsr data16 icebp add lods loope rcr mov cmp cmp jmpq stos jmpq jmpq jne inc rcr bsr mov mov not movsbl sub add add mov jmpq add rex.R gs jb jns outsb jbe jb outsb insl outsb je insb outsl movslq clc cmc movb test test jmpq jmpq push lock std std mov xchg pushq mov retq jb out retq sbb mov (bad) cmc ss callq js in fmuls retq (bad) push pop (bad) add jmpq xchg es test sbb mov rex.RX movslq xchg (bad) scas rex.R add repnz rex.WR jmp sbb rex.RX clc jmpq jae cmp clc mov not rcr test cmc add not not jmpq cmp mov sub and mov rex.RXB rex.WRXB mov js (bad) decl pop insl fucomp lods (bad) decl decb cmpsl and (bad) lods imul (bad) sahf (bad) jo std std (bad) lcall (bad) mul rex.WRB rex.W ds ds mov fistp xchg callq cli (bad) lcall mov (bad) retq gs (bad) or out pop popfq int3 mov (bad) leaveq ja fidivr rex.WR cmp shlb rex.RX cmp int3 add mov cltd rex.WRXB adc sub (bad) stos sahf je add (bad) jge or cld mov (bad) mov xchg leaveq hlt push (bad) jae movsb jle mov movabs fmull rex.X cmpsb ds rex.WXB ss es cld movsb (bad) retq xor add je gs imul sub sbb xchg pop out (bad) out and xor pop outsb (bad) mov jae push sar movabs xchg divl or rex.WXB adc (bad) add pushfq (bad) (bad) (bad) fildll fdivl xor pop sbb (bad) insb mov lods mov mov lret rex.WXB rex xchg add sbb rex.B fs rex.WR xchg pop sbbl sub adc (bad) xlat std (bad) lcall or (bad) lcall pushq pop jge rex add xlat add adc out jno mov fdivs hlt xor cmp (bad) fcoml or (bad) andb cmpsb ds (bad) cmp mov movslq mov rcrl test (bad) or jns sbb rcl xchg pushq sar mov cmpsb xor sub orl pop cmp (bad) outsl sahf es mov iret push xor (bad) mov add sbb jae cli xor bnd push (bad) (bad) lcall popfq insl and adc outsb imul mov xchg push or xlat rex.WRXB movslq (bad) (bad) (bad) iret jae (bad) sti (bad) lcall rex.WRX push (bad) out sub mov rorl out jg sub lret cwtl mov rclb lret mov (bad) (bad) scas leaveq sbb mov (bad) mov out repz cmp callq (bad) rex.WRXB int3 mov divl (bad) ja fisttpll andl andl fwait pop xchg sarl clc cwtl jne cltd add mov shr test cmp cmc test bt cmp jmpq ja cmc imul stc bt add jmpq jmpq jmpq pop adcl movsw std or sub cmpsb insl cmp mov adc rex.R xor cld fildl and addr32 (bad) jae (bad) fnstenv (bad) mov pop outsb xchg shrl jb (bad) cli and (bad) (bad) (bad) jg (bad) adc (bad) xlat (bad) mov pushq mov cmp (bad) mov hlt rex.WXB cltd loope (bad) cld and xchg fidiv (bad) loop (bad) (bad) (bad) fist mov pop xchg (bad) cmp cmp rex.B rex.WRB out int sarl xor movabs loope pop (bad) (bad) out rex.RX fs es (bad) std lods jnp loopne adc rex.WX xor and (bad) xchg clc stc repnz jmpq add flds sbb out lods sub jrcxz mov sti adc or (bad) ds and out pop insl and mov add jge int3 sti add or sbb (bad) (bad) fbstp iret xchg shlb (bad) (bad) (bad) rex.WRX add jno and rex.WRB test rex.WXB (bad) mov pop jmpq mov je retq in ss push sbb (bad) jg (bad) mov lcall int mov mov sti movsb je cltd (bad) (bad) mov addr32 movabs ds movslq cs mov callq add lret sbb and js sub outsb mov mov sbb mov cs retq xchg jno cmp nop xlat jmpq clc jmpq jmpq jmpq jne cmc bt clc clc movb jmpq test cmpb jmpq inc bt cmp jns xor test bt test not jmpq add clc cmc stc mov and mov clc cmc cmp jmpq jmpq add rex.XB rex.XB (bad) je rex.WB jae (bad) outsb movslq jmpq sarl pop retq mov mov sub (bad) imul imul jrcxz rex.WX (bad) in jg jb jb sub jns xchg rex.X (bad) (bad) out (bad) mov jnp sahf ss jge in xchg cmp enterq cmp gs (bad) pop (bad) rex.WRX cmp (bad) (bad) mov pop rex.WXB lahf shrl ror leaveq test movabs cmp jae (bad) in movabs loopne pop adc fisttpll jge (bad) outsb sbb (bad) mov (bad) fisub pop push or movsb rex.XB movabs (bad) xchg sbb test (bad) lahf (bad) (bad) std xchg push andl or movslq xlat lahf push xchg or hlt insb mov jo data16 in movabs pop mov cmpsl bswap lea jmpq jae adc xadd stc movsbw mov lea lea mov movzbl rol xor add mov cmc cmc cmp jmpq jne btc mov bsr rcl jmpq callq jmpq jmpq rex.WXB in mov insl pushfq rex.R rex.X rex.WB scas pop fnstsw pop jno sbb (bad) (bad) es (bad) outsb pop cmp rex.WXB rex.WRX mov pop in mov mov in fildl (bad) (bad) lcall (bad) lret nop rex.WRXB rorb fistl mov cmpsl rex.RX jns (bad) mov sub add out shll clc cs (bad) (bad) mov test (bad) lcall jo rex.WRXB rex.WRX xor flds out (bad) retq fstenv rcrl pop cmp callq data16 out ds sub add and mov and rex.WRB sbb pop retq pop pop mov pushq imul xchg push rex.W push retq mov jl pop (bad) outsb jbe int3 add add mov xor es cmpsb test rex.WB testl mov ja ror sub movsbl bsr add lea mov ror seto rol neg mov stc stc repnz jmpq jmpq jmpq jmpq mov mov out mov (bad) mov add and cmc lea cmp adc lock sti rex.XB addr32 lret cmpl adc jb pushq or fld cld (bad) (bad) mov jmp or rex.RXB data16 (bad) hlt jne lods cmp sub out xchg je scas out cmp jae imul (bad) (bad) push in pop xchg sbb jrcxz sbb (bad) rex.WRX (bad) sahf push and add cltd or jmp and lret fmuls scas jl rex.WX push loop sub callq add fmuls out mov cli adc test cs rex.RX rcll sub jo outsl pushq loope sbbb adc push test pop cmp xchg pop stos jp int int3 (bad) rex.WRXB rex.WRB xor addr32 (bad) (bad) lcall cwtl rex.XB (bad) (bad) (bad) and add loop and pop pushq int (bad) jmpq repz rclb rex.WX pop or movsl je rex.X (bad) lcall push pop or cld (bad) lcall (bad) xchg in mov movslq out (bad) rex.WX sbb push andb xchg (bad) (bad) (bad) faddl (bad) rex.X std gs pop xchg add (bad) add xor add rex.X movabs (bad) xchg cmpsb ss movabs fist push (bad) mov jmpq lea jmpq rex.WX mov sbb pop insl test mov test cmpsl data16 lods and fistl mov mov sbb or jae rex.X outsl sbb mov fisub out scas rex.WB and mov cli or adc rex.WX (bad) adc (bad) (bad) mov addr32 (bad) lcall mov icebp mov add js sbb rex.RX sub cli cmp stos (bad) outsb sub jg xchg leaveq add gs pop xchg sbb (bad) (bad) jmpq lods cmp rex clc (bad) (bad) fldt mov andb adc lods push (bad) xchg rex.WR and fistl fnstcw xchg rex.R add cli pop xchg (bad) in and jbe mov (bad) test (bad) jmpq (bad) (bad) mov rol neg or neg sub shr btr rol mov bt sub test pushq jmpq jmpq jno mov jmpq movabs insb fwait and stos sub push jp (bad) add jo retq or (bad) xchg ss std adc jl rex.X cwtl out (bad) in rorl (bad) (bad) jg sub loop mov cmpsb (bad) mov insb (bad) outsl add sub shll fldenv mov callq xor test (bad) std (bad) (bad) mov (bad) cld (bad) lcall add cmp jrcxz (bad) sub cmp out fiadd sbb mov incl sbb xorl faddl sbb movslq sbbb clc push xchg out sub jb xchg vpaddsw nop shlb sub xor jnp adc es and or xchg (bad) loop test cmc in popfq mov add jo xchg sbb or xchg xor mov mov (bad) xor pushfq push xor (bad) (bad) or rex.RXB (bad) (bad) sub sub sbb rcrb mov out rex.WRX ss (bad) (bad) mov (bad) cmp adc (bad) adc or and (bad) rcrl (bad) repz and (bad) lcall shrl mov es sbb mov push movsl cli (bad) lcall pop (bad) cmp andl (bad) or push (bad) xchg (bad) xor and ja adc rex.W cs rex.R (bad) int3 xor jl (bad) sbb (bad) (bad) jbe insb je adc retq callq pop rex.R in (bad) mov add sarb movzwl data16 testl add int (bad) sbb add adc pushq (bad) fsts stos add rol outsb (bad) rex cmp (bad) (bad) mov nop cld (bad) lcall idivl outsl sbb push sti xlat movabs add (bad) insb rex.WXB repz cmp idivl lret xchg or rcll add sti (bad) (bad) xchg je jp (bad) mov scas mov cmpsb mov adc (bad) data16 xchg shrl leaveq (bad) cld mov (bad) (bad) and jne cmp movslq (bad) jns rex.WXB lods sbb sub pop cli movsl cmp adc and cld xor mov pop lods jp (bad) seta mov ss pushq jo incb stc add bt stc cmp jmpq jne jmpq jne btr cmc xor lea mov jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq add rex.RXB gs gs imul jmpq bswap movzbl lea jmpq jmpq xchg rorl fldt movabs (bad) out int xor rex.WRXB out jne sarb sub pushq fwait pop mov loope cmp pop sahf movq mov movsb fcoml jg (bad) (bad) lcall out sub xchg (bad) int3 add cmp (bad) (bad) (bad) (bad) mov jae (bad) lcall (bad) xor cmp pushq add fnstenv int mov push clc pop mov clc add rex.WB rex.WRXB jmpq add jle (bad) outsl (bad) xchg (bad) sub rex.WRB test callq std (bad) stos subb mov insl mov xchg adc add (bad) fisub xor cli jp rex.WRXB sub nop pop mov and (bad) cmpsb jle js sbb movslq rolb xchg (bad) out (bad) rex.WX sbb retq adc mov mov (bad) mov addr32 rex.WRXB je rex.XB or cltd sbb (bad) (bad) jg pop stc xchg (bad) repnz movabs test (bad) rex.X (bad) sbb (bad) push push ljmp rex.WX (bad) rcl imul (bad) pop rex.RX xchg xor movabs adc adc jb mov add stc (bad) out (bad) cmpsb jns outsb cmp sbb loop xchg sbb jno test fistp add rex.RB rex.WRB cmpl cmp jmpq (bad) loop sbb sbb outsl sahf out (bad) (bad) repnz rex mov jne retq mov and es jb sbb push or fwait adc callq fsubrp cmp out rex.WRB mov stc mov in (bad) rex.W stos mov mov (bad) jno adc cmc (bad) jg or cld mov ror stos repnz ss (bad) (bad) cmp sahf ds xor fadds mov es sti add fldenv jle test cli mov movabs (bad) cmc imul jns fxch pop popq in jp clc callq iret ss adc mov (bad) sbb push (bad) test xchg add (bad) cltd cmp shrb push adc callq mov popfq clc pop outsl out mov push jbe lods fnstsw test fucomip pop cmp pushq add sar sub lock nop mov pop (bad) fs (bad) (bad) (bad) callq (bad) xchg and (bad) (bad) mov repz outsl rex.RX pushq pop (bad) (bad) mov std (bad) lcall (bad) ds adc (bad) mov jg cmpsb push xor (bad) faddp (bad) fdivrl addr32 jnp sub pop (bad) (bad) sbb adc rcrl (bad) stos out pop cs rex.WRXB mov out movsl std lods cmc stc jmpq clc test pushq stc cmp jmpq ja cmc bt cmc imul cmp test cmc add jmpq add rex.XB lock movabs insl mov or (bad) mov loopne xchg xchg add repnz rex.WB outsl and cmc jge scas mov cltd fsts pop jae jne sub (bad) (bad) jmpq rolb outsb test pop mov sahf sbbl add pop add (bad) push movabs iret test scas (bad) test shlb movabs rex.WRB (bad) (bad) fistpll jno lahf movabs (bad) sub fnstenv (bad) repz cmp (bad) je jge repz jne mov xor lret jnp shrl test int3 pushfq rex.WX cmp adc rex.X out push (bad) xchg rex.RX mov xchg mov ljmp pushq push xchg out lea (bad) std adc je in pop nop or int xchg int3 stos jnp pop popq jns xchg sti lock test jp xor jmp sub adc cmpsl outsb (bad) in xlat rex.WB mov pop (bad) in retq leaveq rcll (bad) sub fcom rex.WRX mov adc push cmp (bad) pop insl xchg add fs iret scas rex.WRX out rex.R and adc and ss lods xor hlt je mov cwtl adc orb (bad) (bad) (bad) add (bad) (bad) (bad) jg and jnp movabs xchg repz callq cmpsb movsw adc add test pop iret push xlat sub jmp mov sub (bad) (bad) rex.R jmp jmpq pushfq rex.R loop mov retq xor mov jns rex.R and mov push xchg jge xor mov pop xchg fsubr adcl (bad) and xchg and push loope (bad) icebp testl and mov pushq add loop mov rorl pop (bad) imul rex.RB xor xor lea sti cmp mov (bad) (bad) mov cld cs movabs pushfq add mov sbb movsl (bad) loop adc outsl (bad) pop xor decl fldl rex.WXB mov and mov int3 lods xor mov rex ffreep (bad) in sbb xchg add jmpq insb mov rex.XB repnz out sbb rex.WXB loop cmp add fs movslq in sub fsubrl rex.WB rcll pop jno xchg icebp imul rex.XB xchg (bad) (bad) and (bad) lcall xor sti (bad) lcall sbb xor rex.W push stos add (bad) sub mov mov pop (bad) sbb jmpq adc lock imul (bad) pop mov xor rex.RX rex.R sub adc adc mov repz cmp movabs mov cmp sub pop mov rex rex.W or int mov fs mov fdivrs adc jmpq jmpq or stc movslq sbb fsubrp push je mov jge mov iret (bad) outsb imul mulb and fucomip (bad) mov mov jg xor (bad) es rorb lcall imul (bad) (bad) mov rclb movsb sub (bad) std (bad) (bad) (bad) (bad) scas in sbb mov add leaveq loopne add xchg xor (bad) mov (bad) jb sub (bad) or jmpq mov (bad) pushq sub push xchg cmp rex.WX (bad) movabs and (bad) scas rcll (bad) sub sbb pop sub rex.WRXB movsw xor mov (bad) test or mov lahf mov fsubrl sahf mov hlt (bad) rorl (bad) mov mov lods rex.W sarl (bad) mov xchg cmp (bad) faddl fcom sub (bad) shll stc cwtl ja add (bad) fdivrs cld (bad) (bad) jg rex.R clc xchg cli (bad) lcall push (bad) mov push cli nop test jrcxz (bad) sbb add stos push pop xchg rex.W (bad) push cmp cmc xchg rex.WXB in jne xor jmpq int3 fs out (bad) (bad) xchg or mov add outsl and adc sbb mov outsb cs test retq jmpq jmpq jo je cmc jmpq not lea setno lea jle callq bsf dec add (bad) div (bad) or rorl mov test stc cmpb jmpq je cmp cmc clc jmpq jb cmp cmpb jno ja jmpq jmpq ja jmpq je clc cmp cmc test cmp jmpq jle callq cmp add bsr rcr sub shl mov clc jmpq jmpq mov negb mov mov movsb (bad) decl mov (bad) repz xor sbb (bad) (bad) xor and fistl pop imulb cmp rex.WB adc rex.WXB (bad) mov mov loopne (bad) (bad) out or (bad) (bad) (bad) jb,pt (bad) (bad) cli (bad) lcall stc sub add cltd js mov test xchg xor ja mov movabs sub and adc xchg scas fimul movslq jmp cli add (bad) (bad) and jp fs jnp jg sbb xchg xchg imul cld es adc add mov jb mov (bad) out cmp push lock xchg jle nop ja add (bad) (bad) mov pushq not xchg bswap lea not mov xchg xchg movzwl not lea mov mov lea lea lea mov jmpq push not lods jmpq jmpq adc mov (bad) in lods sub jg mov andl push (bad) out (bad) xor cmp pushq pop xor rex.RXB retq (bad) rex.WR outsl cwtl mov push (bad) mov gs (bad) lcall mov movsl fs divl cmp js adc cmpsb ds add sbb lcall (bad) fwait mov (bad) pop and mov mov imull xchg (bad) mov xor jns or xor and xorl repz (bad) (bad) xchg out cmp retq xor or (bad) pushq fwait movsb retq in out rex.RXB push and mov sbb rcl push xchg insl jne (bad) callq mov clc cs (bad) mov cld adc movabs add add pop popfq or (bad) (bad) xor and adc subl (bad) pop mov loopne movslq mov jno out outsl sahf out sbb (bad) fidivr (bad) mov xchg (bad) cmpsb scas (bad) (bad) (bad) lcall and pop sarb (bad) lcall xchg (bad) jne test rex.WXB rex.R xchg movabs (bad) (bad) pop push mov add clc sub xor (bad) rex.WRB pushq (bad) sub cld mov add adc shrb cmp pop and mov sbb movsb rex.XB repnz cmpsl out scas (bad) (bad) add jmp adc js repz out (bad) cmp out add movabs cwtl clc outsb mov movslq mov sbb jne insb (bad) cmp cmc cmc sub bt stc cmc cmp mov jmpq sub test cmp jmpq mov jno stc sbb xor mov gs movabs or fisttpll mov loopne sbb retq iret pop mulb mov (bad) mov mov insl insl stos xor jg jbe mov cmp and sub (bad) (bad) scas lea and push rex.WRXB xor jle push xor (bad) std lea mov lea in mov (bad) and cmp enterq gs cwtl fmuls (bad) sbb rex.WX mov mov mov mov rex.XB jg (bad) test xchg insl pushfq in sbb repnz movabs mov andb lahf cmpsb xor divb sub xlat leaveq adc (bad) or push insl cld test (bad) lcall cmp adc pop clc xlat xchg (bad) mov sti (bad) out add js mov pop sti (bad) lcall cmc mov (bad) shl subl (bad) imul xchg jae fcmovbe cmp rex.WXB fs mov jmpq insl mov callq pushfq (bad) xor fmull cmp rex.W test and (bad) pop mov callq (bad) mov or sti add jae (bad) (bad) jmpq jmpq jp callq cmc test or jmpq xlat ja cmp sbb (bad) (bad) (bad) in xchg (bad) stos (bad) adc or add jle or mov xchg insl pushq retq mov lret xchg stc or jg callq and callq movsb cmp and callq mov (bad) xchg jmp pushq push pop or (bad) cmp iret (bad) in sub and pushq cwtl xlat xchg jne ja fisubr int3 cli ror sbb xor loopne cli rex.WX repz (bad) or xchg pop insb adc xchg jbe sbb rcrb sub test xchg fdivrl xchg adc (bad) jbe fs es push cld andl and sti pop cmp out test sub stc bt cmp jmpq je stc stc jmpq loope leaveq xor sbb jmpq shrb lods cmp test cmp loop jmpq rex.WXB mov cmp mov (bad) lcall rex.WXB gs (bad) stos jno leaveq movabs rex.WRX enterq rex.RB movabs cmp cs mov pop retq sub sbbl adc or cmpsl fwait (bad) pop lret add pop mov add xor and retq (bad) js push jno in lret jae xchg in icebp cltd adc rex.WR rex.X pop (bad) cwtl pushq nop sub rex.R hlt mov (bad) test mov push fisub andl and test rex.X mov lea setge movsbl lea jmpq in sub (bad) std sbb (bad) fidivrl roll jb sar movabs movabs imul sarb cmc adc jmp in test push fiaddl cmp cs sub xchg and (bad) (bad) mov rex.XB cld cmpsb sub sbb fwait jp jnp push (bad) cli adc (bad) (bad) cmp lahf outsl sahf outsb jbe mov movabs (bad) outsl adc imul rex.R in rex.R sarb mov fdivs callq sub and bt mov cmc cmp shl jmpq fnsave mov sub mov pushfq in out and sub (bad) hlt adc rex.W divl xchg or jae lret rex.XB pushfq pop (bad) (bad) jne pop mov icebp std (bad) (bad) mov (bad) (bad) (bad) callq mov mov push sti mov add in sbb push jle retq sti (bad) (bad) fisttp pop xor pop (bad) pop add (bad) (bad) fucomip enterq lret fbstp gs and xchg test rorb sbb (bad) (bad) (bad) out xchg lods rex.R rex.X movslq retq idiv (bad) fbld in or negl rex.WR rex.WR pop or rex.WRXB jbe,pn rcrb shll test in (bad) (bad) ljmp cltd jne hlt (bad) (bad) (bad) xor decb and mov xchg add jmp js outsb mov icebp mov (bad) in shll popfq jl stc (bad) loopne mov pushq mov rex.XB rex.X xchg mov (bad) (bad) movslq pop (bad) cld jmp add pop sbb sbb fsubrs (bad) and sub sbb imul ds push xchg (bad) cli jp rex.W push rex.WRB cmp out mull add (bad) fwait mov scas mov in cmp push lcall mov lods sub lcall stos rex.WX pop xchg (bad) cmp imulb sub sub push rex.X sub jb add mov mov cwtl rex.X pop sti pushfq rex.RXB cmp (bad) popfq jrcxz mov push (bad) jrcxz rex.B rex.RXB sub (bad) movabs sub jo mov (bad) divb pop and pop nop (bad) andb rcrb mov rcll rorl pop cmp or jns decl test (bad) add retq decl xchg cli push stc jmpq jmpq callq clc bsf ror add add xor sar mov test clc bt cmp cmpb jmpq bt xchg clc bt sub test stc shl setno setne lods cmc jmpq fs add or mov (bad) fidivl movabs jno shrl sbb imul cmp shlb sub out mov mov test fucomip (bad) (bad) xchg xor loope sarb rep sbb cltd or (bad) xchg sahf (bad) (bad) data16 xor fwait push fsts out testb rex.WXB cmpl rcll cs sub push (bad) jmp rex.W sbb (bad) cmp push subb or scas sub or add xlat imulb faddl push pop mov mov xchg lods push xor or movsb rex.X insb adc cmpsl pop jne mov mov lahf (bad) mov xchg (bad) xchg cmc jge rex.WR rex.W rex.WRX fsubrl (bad) sub jp mov (bad) mov leaveq adc (bad) (bad) xlat adc and movabs fstpt xor push mov mov (bad) stc add (bad) xorl xor rex.WRXB rex.WX repnz sub push (bad) adc or (bad) incb mov xor mov (bad) leaveq fdecstp rcll std (bad) (bad) (bad) cmp lret stos jp fs addr32 sti (bad) (bad) mov inc fidivr enterq mov rex.XB (bad) ljmp ds jb enterq ffree cmp mov je adc int3 sbb loop testl rex.XB loope or ss cmp mov loop fucomp fstpt callq sbb imul test jmp test sub (bad) sbb mov jae (bad) mov popfq sub (bad) add fdivl in mov adc xchg cmp out adc (bad) (bad) fbld (bad) sub or mov (bad) (bad) xchg cld (bad) (bad) fbstp cli (bad) lcall insl and outsb fistp (bad) mov rex.B cmp cmp movsl mov (bad) fsubrs rorl add andb (bad) sub pop mov and rex.WRXB out fcoms rex.W rex.WXB enterq fdivl mov jae lods and mov (bad) (bad) push push fmul in and pushfq out rex.RX pushq (bad) xchg in iret int fs lea mov (bad) enterq hlt push xchg rcrb pop lea cmpsb mov or movabs decl (bad) mov shr add movsbw mov jmpq jno (bad) xor mov cs pop xchg (bad) mov push rex.R mov jl xchg ss adc retq ds sub rcl test sub mov rex.B mov movswl movabs or jo fbstp hlt adc adc mov sbb pop mov lret rorl cld (bad) (bad) (bad) test jno cli (bad) lcall sbb pop sub lods (bad) sbb push cld insb test adcb movswl movslq (bad) pop rex.RX rex.WRX cmp mov xor cmp sbbl sahf out mov sti xor loope (bad) (bad) (bad) xchg rex.RX sub ss and mov mov jbe (bad) sub sbb lret (bad) mov xchg rex.WX and loope cwtl callq test enterq lods or xor sub repz out cltd fldcw xchg (bad) std (bad) (bad) callq (bad) int (bad) ds pop or rex.WX or repnz sbb jns cli (bad) (bad) mov in retq movabs pushfq (bad) pop sub mov (bad) (bad) push push jmp cmp jne jle (bad) movsl xchg mov mov out pop fmuls jmpq rex.WRX in jp retq fist pushq lret nop push cmpsb test movabs xchg rex.WXB stos sbbl cmp (bad) enterq fs (bad) lret add (bad) insb hlt rolb xchg add push sub sbb lret (bad) movabs adc notl push negb push lahf or test xor (bad) (bad) lcall (bad) mov xchg insb mov xchg add jle xchg add (bad) (bad) rex.WRXB test lcall ss retq addr32 stos mov jmpq rex.WRX jl loopne rex.WRX or push rorl hlt (bad) pop movsl xchg (bad) scas out add fstpt or (bad) adc and stos add push xchg clc xlat xchg push mov (bad) retq push lods push xchg lret sbb xchg pop jmpq (bad) rex.WX lahf rex.WRB (bad) enterq xchg jno js loopne xor jl (bad) decl or (bad) sbb mov (bad) addr32 mov rcl fwait lret shrl (bad) fistpll hlt rcrb rex.WRB sti mov jo cmpsb outsb mov mov (bad) or rex.WXB cwtl callq cltd cld (bad) (bad) (bad) leaveq (bad) addr32 outsl mull rex.WRXB stc outsb sub es (bad) (bad) lcall (bad) (bad) fimull (bad) out fimul (bad) rex.WRXB scas in callq xchg cmp retq fcomi add (bad) stc lock orw in divb retq insl rex.WR xchg cwtl and mov rex.WRB lea sbb test push jmp imul rex.WX movsb rex.XB incl movsl adcl jne bt movb stc test jmpq jmpq jmpq jmpq cmpb jmpq jmpq neg jmpq mov movzbw not movzbq mov mov xchg jnp mov seta movsbl jmpq stc test jmpq add and add add add adc (bad) fistl cli ja add (bad) add adc add adc add add addb add add add imul add add add adc add add add adc add mov add add adc add add add (bad) adc add sub add add add add add adc add adc add add fildll add mov adc add orl push or (bad) pop sub sub adc rex.WR (bad) jmp stos and fcmovb decl scas jbe popfq test out (bad) cmp retq (bad) hlt mov fidivl in clc sbb test icebp rorb data16 (bad) in xor cli sahf xor xor data16 lock sbb mov mov in out sub je adcl frstor mov icebp xchg mov insl repz push retq (bad) rex xchg nop (bad) add pop and rex.R sti dec retq gs xor or (bad) imul adc repz stc pushfq cmp fwait vmovhps jno rorb sub rex.WR lea shrb (bad) lahf xor mov push xor out pop leaveq (bad) xchg xor cld sbb mov xchg fnstsw adc clc add in mov data16 ss incl (bad) out sbb or mov xchg cmc gs jmpq (bad) (bad) movabs pop pushfq (bad) stc push icebp (bad) rex.XB push adc mov enterq ds sub jge test rex.XB or mov imul jbe ficom movsb adc sub movslq rex.RB hlt data16 (bad) imul rcll sbb lock imul push sahf iret xchg mov jmp and int3 xlat sub fistp sbb (bad) xor or movabs ficomp jl out cmp push jrcxz (bad) pop jmp (bad) movabs lretw jmp lods fcomps and frstor xor clc fldl sub imul cmpsl std mov rex.R (bad) (bad) (bad) cmp std rex.WR rex.WRXB scas xchg sub fwait mov (bad) divl sub in sbb (bad) xorl movslq lahf imul fisubrl jp pop push (bad) jb rcl lock push jo xlat (bad) (bad) icebp sar jnp or mov (bad) test xchg lock js movabs sbb (bad) xchg outsb movabs adc mov add jb scas cmp push jne insl (bad) rcrl xor rex sahf add (bad) fs test push jmp xchg xor (bad) pop xor sbb fisub xor (bad) xchg retq lret ficomp rex.WXB cmp sbb repz cli and rex.WR or es cmp pushq xchg pushq rcrl pop or pop xor (bad) cli (bad) mov (bad) (bad) clc and out js rex.RX xor leaveq outsb and mov push lods icebp jne (bad) mov mov shll out mov xchg cmc idivb sub jmpq fldenv (bad) es imul mov mov jmp int3 rex.W mull mov loopne sbb mov pop and (bad) jl push adc in adc add subl pop adc (bad) (bad) xchg jo stos sbb mov retq out jl outsb push gs rex.W pop mov xor rolb cmp pop int cmp sub sahf outsb jg fadd push (bad) push cmp sub push or jb cli rex.W (bad) xor cmpsl add sbb xchg iret or push mov (bad) xlat rex.WXB xchg data16 mov adc sub vunpckhps sub pop xchg sub rex.WX xor or icebp (bad) gs outsl sub lret rex.X out or (bad) (bad) mov jo gs retq jbe decb (bad) mov or jg sub pop or jne (bad) xchg lahf leaveq push subb add sbb sub pop std sbb clc cltd in adc retq jg test (bad) insl cltd (bad) (bad) callq stc jmpq rex.X pop pushfq mov mov push jns (bad) stos mov nop cmpsl xchg gs ds adc (bad) adc insl mov movabs or loope movabs jl in jnp push ficomp mov movsl movsl movabs movslq (bad) (bad) icebp callq rex.WR sbb outsl sbb or and sahf cli sbb and leaveq int leaveq js pop rex.WRX fs and add loope pop rex.WX sub es xor rex.WR rex.R (bad) adc adc adc rcrb adc in decl retq mov mov icebp (bad) mov test cmc (bad) xor (bad) fcomps rex.B pop pop (bad) add jns nop scas movabs (bad) iret (bad) xor imul out pop nop xor (bad) push (bad) pop or faddp xchg (bad) retq cmp jg xchg pushq mov js cs rex.RX cmp nop rex.RX pop movabs retq jp or hlt mov jmpq int retq (bad) cld mov rex.W insb rex.W imul mov stos in (bad) movsl xchg (bad) nop insb shl cwtl outsl xor (bad) fnstsw or pop jae test rex.WR (bad) outsb repz sbb (bad) adc in (bad) rcr xchg and movabs fimul sbb out adc xor pushfq sti cli xchg loop sbb fwait rex.WR movabs jge xchg (bad) add sub jns or movabs movabs stc rex.WRXB mov mov jg add fsubr in lret mov adc data16 stc (bad) or add (bad) sti (bad) icebp rex lret (bad) xchg lods xlat movabs mov repnz int3 push mov xor rolb sub xor xchg sub pop push cmp pop xor int push iret xlat mov fnstcw fidivl repnz imul sarb (bad) jns sbb or fwait pushfq sbb (bad) pop (bad) and stos in or cmp fiadd retq pushq in negb or xchg (bad) adc mov jp test movabs shrd jp (bad) adc sbb cmp (bad) callq push lret pslld rcrb (bad) add (bad) and hlt mov (bad) mov (bad) cmp std push leaveq test sti int adc jno fcomps cmp jl,pn lods repz jb jg out add stos (bad) lret sub cli in icebp mov mov imul sbb movabs adc add xor cltd mov (bad) mov mov rex.WRB rex.RXB movslq xlat (bad) add and (bad) sub mov push rclb retq mov pop stc movslq sub sub (bad) pop enterq (bad) fcmovu sbb iret in sbb cmp sbb scas outsl ds mov and movabs mov (bad) sub rorl add sbb cmc fmull test xchg jmp mov rex.W gs (bad) (bad) and mov lea jb push jnp (bad) fsubrl pop retq cmp jle push movslq lock or insb adc push (bad) fnsave sub fnstsw xchg jns popq out mov std in (bad) jae lods jno xor in ficom rex.XB repz push out sub scas adc and pop cmp mov out movsl push clc add (bad) mov rex.WX enterq fisubrl rex.WRXB out xchg (bad) cmp rex.RXB xchg mov push pop (bad) fiadd (bad) (bad) mov rex.W sti test cwtl lods and add (bad) repnz xor sahf rex.XB rex.WXB in pop mov imul jnp sarb xor sbb sub nop lock jne xchg jno jo jns std cmpsl (bad) cld jle pop (bad) sub rex add insb xor (bad) or out iret mov fwait decl cmp rex rex.WRX adc cltd in es rex.X cs in (bad) clc lods movabs xchg sbb push rex.X stos (bad) mov push lock xchg in and mov repz mov pop ja (bad) jns leaveq mov mov jnp cmpsl rex.RXB fcomp mov mov nop pop repz js rex.X rex.R push orb cmpsb push rex.WRX out loope (bad) xchg lods add test popq mov movabs adc movabs fiaddl test xor pushfq mov xor cmp sub rex.B (bad) (bad) scas rex.WR cmp loope (bad) out rex.RX mov jg or sbb (bad) (bad) (bad) push jrcxz (bad) rex.WXB or mov mov test cmp mov rex.WRXB ss jnp push out fwait and rex.WXB stc rolb sahf fdivrs cmp or mov lret or cmc rex.RXB rex.WXB fmuls sbb mov movsb rcrl out (bad) adcl loop insl (bad) subl jl pop rex.RB sbb es (bad) (bad) mov pop xor in fisubrl jne and xlat mov xlat int in cli subb sar fidivl rex.RB lock (bad) mov rcll sub rex.WX icebp jno gs pop sbb or retq cmp and cmpsb cwtl add lea sub incb pop fistl xor sar mov nop sbb lea rex.WX adc rex.WRB out stos int imul loopne retq or (bad) movabs and lods lahf cmp movslq mov data16 testl stos outsb (bad) sarl xorl test jae iret lods adc mov (bad) rorb (bad) xchg sbbb push int3 test jmpq push insl loop cmp add sti loope xchg lods hlt fcompl push data16 addr32 ror sbb xorl pop and add jo out add cmp and xor shlb (bad) add (bad) outsb jge sub add rex.WRXB (bad) mov iret out int3 out cmpsb xorl sub pop (bad) push enterq mov ds out cmpsl pop push cmp push mov add mov cmpsb (bad) shlb js cli sahf xchg add mov jb mov pop sahf rex.WXB sbb xchg mov icebp movabs decb mov (bad) add add cmp rex.R add and sub xchg (bad) cmp jg insl xchg push mov and mov jb cmpsb xchg mov je or rex.WX sub xor jle add rex.RX (bad) (bad) mov mov out andb (bad) and out jns cmp pop push rex.WXB mov cmp jle gs rex.WRX addr32 adc pop sbb movsl lret (bad) push sti std movsb loopne push js jp movabs add imul retq rex.W cmp adc (bad) rex.RB rex.WRX cmp jne (bad) enterq and jno (bad) ficom incl mov push faddl mov and sbb (bad) xor and fldcw (bad) push (bad) pop data16 cltd test mov jo cmpsb mov (bad) sbb fwait shl in out je lods xchg rcr lret cltd (bad) insl or sub cld (bad) outsl callq rex.WB and and movabs sbb rol xchg adc and xor (bad) (bad) cld mov push sahf gs xchg xchg out push iret addl xchg xchg sub cltd xor ficoml pop mov retq fwait xor stc fwait sbb (bad) ja es clc mov jo add mov add (bad) outsl fldcw sbb mov (bad) divl movabs in sbb jnp (bad) cmp pop sub es xor (bad) (bad) lock rex.WRXB (bad) cld cmpb stc cmp jbe sahf xor pop (bad) (bad) lcall (bad) pop addr32 (bad) (bad) outsl (bad) stos rolb (bad) mov jno mov scas stos sub (bad) rex.WX lods sub mov adc mov std (bad) lcall sbb (bad) lcall jmpq fcoms divb xchg rex.WR (bad) (bad) movabs movabs ds pop mov clc or scas xchg jns (bad) rex.RXB retq pop or push push mov jo sarb movsl in lret sti sub lret sbb xchg jb andb (bad) fmull movabs rorb rolb xchg shll lods jmpq jmpq ja test rcl sub dec or shrd add btr mov mov inc shl mov jmpq jmpq movabs scas out push rex.X add mov fsts test out mov add sahf rex.WR ss ds and (bad) cmpsb mov rex.WX cmp idivl xor cmpsb gs or and jb (bad) (bad) (bad) (bad) mov sub jg and adc scas movabs mov outsb lods test (bad) (bad) and stos sarb fs shll mov (bad) (bad) mov (bad) fldcw fisttpll divl insb cmp jb insb or pop pop jmpq jns (bad) ss clc sub icebp (bad) (bad) (bad) outsb mov in xchg rcll rex.WRXB in cmp pop mov in adc lret jno push rex.WRXB sbb stos callq (bad) rex.WRX push in bswap lea jmpq bt imul stc stc test add jmpq jmpq add adc mov in fisttpl lods fnstsw xchg clc movabs adc adc clc addb in je iret lahf jl (bad) (bad) (bad) sti adc (bad) hlt mov mov (bad) (bad) scas (bad) sbb icebp std movabs or cmp (bad) mov (bad) (bad) stc mov loop stos std push popfq (bad) (bad) cmpsb and fimull (bad) sahf rex.W push rex.WB push imul jb cmpsb rex.X (bad) lcall mov (bad) lcall mov pop mov out jbe mov (bad) lods mov lods pop in sub xor addr32 pop nop pushq repz jmpq retq rex (bad) int3 movsb mov (bad) ja pop mov decl test adc push xchg push cmp rex.W (bad) data16 mov enterq (bad) and mov sub sti cmpsb rex.WRX rorq addr32 sbb repz (bad) std gs cmp and mov cmp lock mov push xor jbe (bad) repz vpaddsb (bad) (bad) mov push xchg in fimull test iret rcrb (bad) (bad) (bad) mov lea setns test (bad) lcall cmp rorl mov repz xchg movzwl iret sar ja adc lahf jb shrl (bad) mov out xlat mov gs (bad) scas pop mov sbb (bad) push enterq mov (bad) or notl cmp (bad) outsb rex.WRB loopne cmpsb fimul in rex.R add insb mov mov xor rex.WX pop rex.RX mov rex.RXB gs xchg mov (bad) rex.WX ljmp xchg mov add mov enterq push pushfq sub rex.WRX xor sub pop (bad) sarl mov push jns mov rex.WXB push movsl (bad) test (bad) xchg ljmp ja sbb (bad) (bad) (bad) (bad) test (bad) (bad) (bad) add and (bad) (bad) jns cmp adc movabs lods and std (bad) (bad) (bad) jbe retq test (bad) lcall repz (bad) mov int3 jne or out sbb je imul insl imul (bad) pop (bad) lret cmp mov rcll loope (bad) hlt mov mov add sbb jne stos loop sbb loope xlat adc adc movsl andl pop rex.RXB icebp cmp xchg jo rex.RX xor sti cmp sub mov pop add sbb sti sbb rex.WX rex.WRB pop mov jrcxz mov orl cmp adc xchg (bad) popfq rex.WRB fist je jle (bad) (bad) lcall mov (bad) iret xchg insb sub mov lock mov movabs xor test test or (bad) (bad) callq loopne pop sti (bad) lcall rex.WRB (bad) xchg pushfq push mov sbb sbb flds andl sbb mov adc rcll rex.RXB pop rex.RB fidivrl adc mov hlt xchg test imul (bad) (bad) rex.WRB fwait rex.XB repz push jmp retq out fcoml (bad) jmpq movabs cmp jmpq jmpq je clc add clc clc bt cmp jmpq push lock std std andl jbe repz mov (bad) sbb (bad) lock pop in fnstsw cltd in pop rex.WRX rex.XB rex.B (bad) pop pop leaveq add callq nop (bad) ja lret xchg roll xor out shr xchg (bad) movsw add hlt mov mov int3 xor jmp adc cmc mov add (bad) sub mov stc rcl add mov bt test test stc sub jmpq jne clc bt stc clc movb bt stc test test jmpq je bt sub cmc stc cmp cmp jmpq jmpq jmpq clc add test bt jmpq jmpq cwtl cmp fs xor xchg ss sbb movabs ja not adc or xor xor mov rex.WXB repz loope rex.WRX rex.WB fwait iret (bad) (bad) lcall in lods in std (bad) (bad) mov rclb insb mov jbe movsb or (bad) mov callq cmpb jg js pop add leaveq nop cmp xor ljmp jmpq jl cmp jl xor (bad) ficoml cwtl movsl gs pop xlat jbe and out lea (bad) jmpq (bad) je sbb push xor (bad) fidivr subl push ja (bad) (bad) adc (bad) cmp mov and mov (bad) fchs or movabs clc and (bad) (bad) lcall (bad) mov (bad) scas sbb sarl (bad) sub (bad) (bad) cld (bad) (bad) jg mov (bad) lcall mov lret scas jge int3 fildl (bad) (bad) pop cli lods (bad) std mov iret rex.RXB rex.RB push xor sti pop and xor and outsb lock imul je lret adc push xchg rex.WRB fwait imul jns (bad) adc jp cmpsl (bad) jl test and leaveq stc rex.W (bad) mov xor push lock add fdivs xor mov movabs mov cld or testl rcrb sub in lret rex.WRXB mov leaveq icebp add repz xchg (bad) (bad) (bad) mov (bad) push xchg rex.WRX mov adc (bad) lcall xchg (bad) cli or (bad) lcall sub movabs sbb mov callq pushq je loop mov adc (bad) fisubr mov sahf jbe mov push movabs ja loope (bad) mov xor xor pop jle lcall imul jrcxz rex.WXB leaveq xor mov fdivs mov pop cmpsb (bad) mov mov adc adc mov push mov (bad) mov xor and mov mov push jns add cmpsl fistp cmp mov cmp rex.XB icebp testl (bad) add xor jns (bad) notl jbe xor rex.WRX imul stos (bad) test jg xor xor rex xor mov int mov and enterq js ss hlt (bad) cmp lahf gs repnz cmp imul stc ss adc roll scas pop pop fnstenv mov cltd stc ss sub (bad) test adc pushq rex.WB movsl in rex.X rex.XB fisttpll ss jl (bad) cmp test xchg rex.B pop xor mov cmc jno (bad) (bad) lcall cmpsl mov test ja mov (bad) lea movabs icebp (bad) jno in jle fdivrl (bad) cmp rex.B rex.RXB data16 testl out cli movsb jrcxz retq jrcxz mov lods loope jns pmaxsw and pop ds (bad) int3 mov insb je jb outsl seta in and adc pop or (bad) push cmp stos sbb or xchg xor (bad) outsl mov mov (bad) jmpq callq rol sbb xor rol add and ror mov bsr mov bt cmc bt cmpb jns jne or shld ror cmp sub xor mov shl shr sar neg add rcr neg not mov clc stc test test jmpq (bad) out lahf or mov cmp jg adc sar cltd cld mov mov and es jae icebp add and or sti add jns fucomip ss cmp and lcall je lret stos sub jns retq or jrcxz rex.WXB std (bad) (bad) fildll sti (bad) lcall and fwait imul adc fdivrl ja cs cld cmpsl (bad) mov sub jo (bad) (bad) jae imul sarb mov (bad) add lea std (bad) cmp rex.XB rex.B mov rex.RXB rex.B xor je cmp movsb rex.WR movabs mov (bad) ss (bad) rex.XB jo (bad) (bad) fnstcw rex.B cmp clc jmpq ja ror inc sub bt ror seto add btc mov inc mov jmpq ja rol sub setg and add not rol mov cmc stc cmp jmpq (bad) xor xor movabs stos (bad) or mov (bad) mov xchg test xchg (bad) (bad) out insl (bad) hlt lods (bad) xlat idivb int mov lret (bad) xchg rex.WXB sar mov iret ja (bad) lret (bad) pushfq and (bad) (bad) mov scas fild xchg movabs idiv (bad) lcall xchg xchg and mov sub rex.W sbb rex.R (bad) xor (bad) rex.WR push cmp rex.WXB xchg (bad) ja icebp pop fadds rclb ss pop mov hlt mov xchg movabs rex.WRXB cs push pushq mov sub cli jb jno ja test rex.WRB lods xor rex.RXB vhsubpd (bad) adc sbb je out and fiaddl movabs (bad) jmpq stc bt cmc bt sub std popfw jmpq popfq adc mov mov (bad) mov xchg xor add add adc sub add (bad) ds mov jns callq stos sarl add (bad) (bad) (bad) jle fcompl mov xlat mulb out rcr in test push rex.WXB fwait std xchg pushfq callq jl (bad) xchg cmp movabs rex.X cwtl rex.WX fmuls (bad) or mov cld (bad) lcall push cli (bad) lcall rex.WRXB cmp jo xlat mov cli cmp ss (bad) icebp popq push rex.XB rex.WXB stos adcb fmull pushq (bad) (bad) faddp data16 or adc cmpsl sahf data16 sub sarb xchg (bad) rex.RX rex.XB sahf out pop sbb imul mov enterq add jne xchg add sbb mov or imul rex.WXB mov shrl (bad) or jae (bad) (bad) lcall rex.RX leaveq pushq imul sub fmuls leaveq in jns lock retq jmp icebp mov (bad) (bad) mov cli (bad) lcall sbb stc sbb mov xchg outsb js push int3 lods cmp retq push xor loop pop jrcxz sub (bad) xor xchg xrelease xchg in out xchg and rex.WR push xor test or lock or (bad) mov jne imul sub andl (bad) and test sbb repz btr xor add test mov test cmc cmpb jmpq jmpq je cmp jmpq jmpq jmpq (bad) fs pop cmp cmp rex.XB mov lcall jp mov jg xor mov pop jge push fldt xor push ja ss mov lret (bad) sahf stc cmp int3 rex.WR shrl xor (bad) test hlt movsb and leaveq (bad) jl mov mov test shlb cmpsb cld (bad) (bad) incl cltd pop adc stos xlat (bad) std mov sub incb sahf pop mov iret outsl mov cmp outsb mov pop mov movslq jmpq jmpq jmpq insl xchg mov cmp cld add mov xchg clc pop cmp lret cmp fistl xchg (bad) add (bad) mov addr32 (bad) subl and test mov mov (bad) jg mov push (bad) jae sti sbb callq (bad) outsb mov xchg ja movsb movslq sbb cmp mov outsb ficom movslq ja divl js divb sarl rorl cltd and (bad) push mov enterq shll fiaddl mov bt jne cmp sub cmc shr jmpq jb stc stc jmpq xorl mov jbe pushfq imull ficomp lods rex.WRB outsb (bad) outsl sahf es cmp mov (bad) scas fildll stos cs sub scas int fiadd rex.WR out cmp jno (bad) (bad) (bad) (bad) (bad) push repnz or mov imul sti (bad) lcall rex.RXB out (bad) fstpl mov sbb (bad) popfq cli lock scas mov jg sub (bad) sbb push mov repnz js sbbb out movsl jmpq (bad) movabs (bad) stos jl jne mov orl (bad) xor push jne adc rex.B (bad) sahf (bad) mov add sub xor adc add outsl ja insl or out std cmp jb sti testb je loop adc add (bad) (bad) jmpq jmpq mov mov cmp rex.RB insb fwait sar mov or sbb rex.RX mov outsl mul rex.WX xor (bad) outsl jrcxz pop not rex.WRB leaveq jns outsl cwtl rex.R (bad) callq rex.WR (bad) (bad) (bad) jg jo (bad) xor (bad) insb (bad) (bad) fnop fadds (bad) sbb (bad) lcall push sbb jbe mov sub (bad) in adc jbe rex.B addl xor (bad) ds adc shlb mov (bad) lahf mov add cmpsl psubusw rex.W mov pushq rex.W ss mov sub nop push mov ficomp xchg push jmp icebp ds (bad) adc lock (bad) (bad) adc rex.WB fidiv stc movabs scas lea mov mov movsbw mov lea jmpq je jmpq mov movzbw lea jmpq jmpq clc bt movb clc jmpq int mov cmp mov adc repnz fisubrl retq and cmp mov pop sti add rex.RX movsl scas and rex.RX mov outsb popfq xor (bad) pushfq (bad) xor addb xchg add add sbb jae rex.WR (bad) outsl push test or (bad) (bad) mov sub retq rclb out insb mov cmp cmp sub sub addr32 add in jnp imull rex.RX add hlt mov lret pop mov out std xchg outsl clc xlat cmpsl (bad) rex.WRXB rex.WX cmp sbb xchg push jns (bad) cmpsl xor jmpq mov xchg lock rorl repz xchg cwtl lock ss mov fsubr xchg cmp add push rex.RX jp and pop fdivrs out jge push adc sbb (bad) fs jb sbb (bad) in rex.WB xchg push mov shrl rex.WR and repnz rex.RB gs cmp lock jg (bad) leaveq stc adc sti ficom sbb rolb mov fdivl movabs movabs sub scas sub (bad) cmp (bad) nop add sub stc jrcxz jbe enterq rex.W repz data16 mov lcall jg hlt mov cli (bad) lcall cld retq lret ja (bad) mulb fildl jb xchg iret gs (bad) xchg scas sbb insb in cmp std insl mov imul (bad) (bad) sub movabs or sahf out sub push (bad) add add sti and scas mov (bad) and and sti fs add rex.WXB fs ss jl loope out (bad) jmpq and insb or mov pop cmp cwtl (bad) rex.RXB or jrcxz rex.RX in pushfq sub rex.WB and out mov movabs fldt mov sbb enterq mov and imul (bad) (bad) (bad) (bad) andl fs xor push sahf cs jns (bad) and movabs cld (bad) (bad) mov jnp (bad) (bad) jg pushq imul (bad) mov cmpsl fcomp ss adc insb sub rex.X jns mov cli push mov (bad) out fdivrl mov cmp and sbb mov mov (bad) sbb (bad) (bad) sub loope scas ja xchg push (bad) and sub (bad) (bad) push xchg in push stos movslq push xchg fisubr push push adc jrcxz loope jmpq std gs insb (bad) scas pop (bad) lods and jbe xor (bad) ficoml enterq (bad) mov sbb (bad) in sbb jo pop fcompl out stos jmp lock ja mov jrcxz ficompl mov (bad) mov sbb lock mov mov jp icebp sbb mov xlat and (bad) xor imulb enterq in (bad) (bad) jg (bad) test jle cmpsl out (bad) rex.WR rex.RXB gs push std fcomps scas (bad) shlb jmpq fcomip mov (bad) (bad) mov xchg push xchg pop mov push or mov fnsave xor cmp iret push rex.WXB movsl pop push rex.W sahf jmpq (bad) pushq (bad) xor cwtl rex.WRX ss jl and adc (bad) add gs and sbb mov (bad) (bad) rclb movabs push xor (bad) mov or pop cmp imul sub sahf and addr32 int cmp outsl sahf (bad) xor rex.WX fwait pop sub nop pop mov (bad) repz pop jge rex.X xor mov and (bad) mov cmc (bad) jrcxz vpermq or repnz (bad) (bad) (bad) shrl adc push push xor mov pushfq sub in rcrb rex.W subb lods roll (bad) rcll cmp (bad) je cmp (bad) in xchg pop adc sbb mov xchg pushq movsb in movabs mov rex.W xchg push or fdivl ss movsl fs (bad) jp (bad) xchg jne sub sub or mov (bad) mov pop fiadd (bad) (bad) (bad) fbstp mov hlt rex.RXB scas pop cmp (bad) (bad) fbld cli (bad) lcall fs leaveq cmp fsubrs or and rex.X rex.W es mov (bad) cmp mov packuswb or pop rex.RXB rex.W (bad) push fs mov rex.W out push (bad) xlat adc movabs out int3 insb mov test (bad) jmp rcrl imul jns mull std (bad) pop (bad) (bad) lret mov adc xor (bad) push jge rex.W mov (bad) mull vpsadbw stc mov (bad) xor in sbb mov mov lock out rex.RB adc cs mov ljmp mov (bad) sbb jno enterq and add retq int3 loop jns (bad) jge jo test (bad) rex.RX jne rex.WX push sti fimull movabs repnz adc pop imul hlt xor jmpq je bt clc jmpq sub jmpq jmpq rex.R xor sbb adc sub jg rex.RX sarb pop sub movabs (bad) (bad) pushq pushfq movsl xor movabs std std (bad) (bad) ffreep jnp xor xchg rex.WRX adc (bad) (bad) (bad) test loope cli (bad) lcall jrcxz mov (bad) jmp and mov or adc in fimull mov in fisubl outsb (bad) (bad) test push mov loope js enterq (bad) movabs pop subl cmp fmuls or cmp xor stos sbb (bad) cmp sub pop mov cld (bad) je (bad) mov jnp stos sbb sbb insb cmc xchg xchg rex (bad) divl sub jl in push mov cmp add pop cmc jb pushfq xor adc mov (bad) fwait fs fwait rex.R js (bad) xchg movsb int3 sti and or f2xm1 rex adc movabs mov lods sub xor lret add fstpt shrl sbb hlt xchg add (bad) (bad) fild lret lret sbb push (bad) iret cmpsl and retq lea (bad) mov fdivr (bad) lcall (bad) fcompl test (bad) mov add loop sub mov add pushq pop jge lea cmp fdivrl and gs jle mov rex.X adc js in xor mov rex.WB fbld mov movabs (bad) outsb mov mov data16 jbe (bad) clc push out adc lret btc mov jmpq rex.RX rex.WRX jne lret (bad) jbe in fiaddl popfq jne (bad) repz (bad) xchg xor jae (bad) test (bad) addr32 out sub add add jae pop xor (bad) (bad) mov loop jmpq movsb sbb pop callq fsubrl or (bad) (bad) (bad) (bad) or jp enterq jmp mov mov mov test jl movslq (bad) movabs mov adc push sbb sbb cmc mov sbb (bad) mov cmc mov (bad) rex.WRB (bad) fidivl add sub rex.XB rex.RB mov adc addl rex.X and mov add cmc jne rex.WXB rex.WRXB fstl cwtl (bad) out (bad) rex.WRX rex.WB adc (bad) rex.RXB cmp (bad) in rex.RB rex.XB sbb out xchg stos rex.XB push mov (bad) lcall cs decb fistl rorl adc lock leaveq (bad) loopne rex.W and (bad) fcmovnb movslq icebp push xchg rex.WB pushfq jnp stos mov fcoms movabs addr32 pushq (bad) outsb mov cmp fwait mov cltd xor andl mov jmp xor (bad) lock iret rex.WX mov adc pushq cmp xchg jns mov rex.B (bad) incl loope pop xor rex.R push sti js in (bad) (bad) sub and in add jmpq rex.R xchg sti rex.RB fdivs and mov lods jl cmpsl data16 pop sub jns (bad) gs hlt adc int jmp mov or sub mov (bad) rex.WB cwtl rex.XB adc retq rolb push test (bad) lcall hlt mov je rex.WX rex.RX in (bad) orl leaveq int and movsl adc test vmovdqa rex.X lods sbb roll or or loope movabs stos (bad) jmpq (bad) rorb data16 test lods jnp sbb jne rorl fwait adc test sub retq xor fisubrl (bad) in rex.WXB (bad) add rorl icebp ror shl push shrd mov or movsbl bswap sete sub setne lea jmpq jp fiaddl mov mov adc (bad) jle xor xchg xchg out and outsl stc sub int3 cmpb mov push ss std and std jne sbb xchg cmp sti adc mov rex.W rex.WXB pushfq cmp out (bad) mov or (bad) (bad) ljmp (bad) pushq scas ss push sbb stc xchg jg jb add lock rex.WRXB hlt push xor cwtl ja movsl push mov (bad) std pop movsb sub cmp cld sub rcl cmp mov and or and roll rex.W push repz lea int mov (bad) xlat retq mov callq rex.WRXB (bad) pushfq rex.RB or insb add adc xor sahf sbb jnp rex.WX loopne (bad) (bad) (bad) mov add (bad) xchg adc pop and lods gs (bad) (bad) lcall rorl cmp adc add fbstp iret scas jge repz test cmpsl mov in fmul jl shrb addr32 xor (bad) (bad) faddl rex.W jmp or (bad) (bad) in adc rex.WB imul int add cli fstpl and es repnz callq es rex.WRX shrb shrl movabs sbb xor pop jo push mov cld rex.WR lea je movabs fidiv pop cmp mov xor stos xchg rex.R rex.WB (bad) mov icebp std (bad) (bad) mov cld sub std add (bad) add (bad) sbb rex.XB int3 cld jl cltd (bad) (bad) ss in test orl jge pop repz sahf jbe cwtl push add nop push notb std fdivrl rex.RX sbb (bad) cmpsb gs jmp xor sub (bad) addr32 movsl jge test cmp pop xchg sub mov adc rex.RX rex.RX rex.RX fxch or mov test test mov jmpq paddusw cmp cld push xchg or outsb jbe rex.WXB stc xor or mov ja test jmpq jmpq jmpq jne xor bt sub xor or movzbw dec mov sub adc add jmpq jmpq add sbb cmp rex.R rex.X adc clc test xchg add loopne out rex.WRX movsb fadd add gs (bad) cmp icebp mov (bad) jno out and jno jo (bad) scas rex.WRX (bad) cltd xor in (bad) retq push xor cwtl sub lcall mov (bad) (bad) (bad) frstor mov sbb movsl rex.WRX rex.WRB rex.RB and mov fwait jp rex.WB or add out mulb mov adc add sub pop movslq (bad) in mov movl jo cs rex.WRX int3 push xchg xor and (bad) faddl addr32 rex.WXB or sbb mov shr mov sub (bad) (bad) add jmp (bad) incl lods (bad) rex.WXB repz mov xlat rex.RXB cmc insl pushq out cmc cmpsb (bad) rcrl xor mov cld popfq pop insb hlt adc cli sub adc iret es jle,pt cmc in xchg cmp (bad) (bad) (bad) cmp loopne (bad) xchg je retq sbb sbb stc fimul (bad) (bad) fbstp (bad) sbb sti (bad) lcall mov cmpb out adc or (bad) imul enterq insl int test sub sbb fildl pop mov (bad) jo mov or jp sbbb retq jnp rex.WX jl pushq pushq jp pushq fcoml andl xchg or (bad) mov cmp or or jnp jne movsbw mov rcl shl mov cmp or jmpq stc bt repnz jmpq jmpq jmpq and orl (bad) decl push jne retq movslq push rex.XB leaveq leaveq mov or add mov adc sbb rex.W lahf sbb jae cmpsb ds sbb sub js es (bad) (bad) fild jrcxz ss (bad) scas sub (bad) xor xor icebp stos out and pop push sub cli (bad) lcall rex.R rex.RX xor rex adc rex.RB mov js jle xor mov fisttp in cmp xor (bad) and xchg pop movabs out jbe leaveq mov (bad) ja (bad) lock sbb insb mov (bad) jp sub loope push push leaveq mov leaveq (bad) (bad) pop cmp in ss (bad) std lods jnp mov fistp jbe andl mov setns mov lea mov movzbq pop seto mov mov bswap mov mov lea lea mov lea mov retq jne test cmc cmp movb stc clc bt test jmpq (bad) push mull sbb ds add in fwait xor int pop xchg pop loop sar pop jno (bad) and rex.WRX pop or pushq test stos addr32 (bad) (bad) (bad) jg or stos rex.WR loopne std (bad) (bad) mov test clc push outsb rex.WRB out fsubl retq adc mov xlat cs mov movabs rex.RB mov (bad) cld (bad) (bad) jg sub xor out (bad) mov and rex.RXB lods add movsl xor loopne sahf gs (bad) pop (bad) lret pop cmpsl (bad) mov lock in or gs (bad) xchg adc jrcxz mov (bad) scas jl mov (bad) push rex.WRXB push (bad) int3 rex.R or mov adc rex.WRXB rex.WR lods rex.WRXB rex.R jae jne jb pop add clc xchg decl mov loop mov mov idivb int movb jge enterq mov rex.WB rex.WR add mov movabs mov add repz lret push add cltd (bad) (bad) (bad) (bad) push sbb xchg and data16 stc test jb pushfq lret sbb xchg xlat fdiv adc (bad) lcall data16 (bad) lcall mov insb mov outsb jns cwtl (bad) add push sarb je cld insl lea sti jmp rex.XB jmp cltd or outsb jbe adc jmpq movabs sub or push xor jae ds cmp andb jp sub callq pop cmp cmova loopne (bad) add retq mov lea movzbl lea movsbl movzwl not movsbw movzbl lea not mov jmpq adc jmpq ja rol setb sub shld add shld neg bt mov (bad) lock shl mov bt cmc repnz jmpq jmpq sbb pop cmp rex.WXB rex.RX cld sub lret mov sub jbe jbe fs mov in (bad) or movsl adc out add leaveq jmpq movsb mov incl push add movabs rcrl (bad) lock xchg (bad) mov mov f2xm1 rex.W ss stos cmp (bad) lcall cmp sbb (bad) iret addr32 scas xlat (bad) lea adc cmp (bad) (bad) mov loopne pop movsl in fstpt mov mov jmp mov (bad) icebp add (bad) (bad) mov (bad) je push xor movsb or (bad) mov xchg fcmovnu xor (bad) lcall fcmovbe rex.RX (bad) (bad) mov imul mov (bad) addr32 (bad) rex.WX lret ds xor movaps out (bad) (bad) mov jb add jne rorl cltd adc (bad) (bad) mov adc (bad) in adc insl xchg and in (bad) (bad) fist scas mov in popfq mov mov pop rex.W lods test add (bad) (bad) lcall or cli jp pop add fstpt out cmp (bad) (bad) mov mov (bad) nop cwtl rex and mov mov stos push in int pushfq cmp imul xor hlt xor jl cmp imul mov popq sahf mov (bad) (bad) (bad) stos (bad) pop sub xor jp xchg rex.X (bad) int push xor insl or leaveq loope lock cmpsl (bad) outsl lods je ds or sub (bad) jrcxz out imull lods in or sbb mov sti xor xchg ss (bad) sbb rex.WB iret and add rex.B mov hlt jno (bad) cmc adc (bad) and jmpq test xor rcl movzbw push sub mov sar sub not jmpq jne jmpq jmpq je jmpq jmpq je not movzbw movzbw mov jnp lea jmpq clc cmc jmpq stc jmpq jmpq out (bad) xor mov sti (bad) xor loope add sub and xor rex.R or retq (bad) pop cmp pop movsw cmc cmpsb movsb adc jnp es int3 insb fildl or fstpt sub adc rex.RXB and xchg rex.WXB push nop rex.WRXB out lods in movsl mov cmc adc iret ja ja rex.RXB lahf jae or (bad) (bad) (bad) int adc cmp sbb lahf in fstpl mov (bad) scas sarl xchg and rex.X imul loopne sbb ja std gs xor cltd rex.WRXB cmc or adc mov mov sbb (bad) incl (bad) leaveq jmpq (bad) (bad) (bad) jae sbb rolb cs pop outsl mov adc mov rcr (bad) iret push mov cmp iret (bad) (bad) mulb movsb (bad) scas sub rex.WX rex.X add fadds in pushfq testl push retq (bad) (bad) lcall mov xchg rex.WB pop insl mov scas out sub stos (bad) enterq scas lea (bad) cmpsb (bad) lods rex.X rex.WR movabs jae sti cmpsb xchg pushq (bad) insb mov leaveq icebp icebp fisub sub add jb jno test ds cmp mov rex.X pushq add jo (bad) sbb stos adc xlat adc and rex and sbb push rex.WRX xchg sub in adc jb push (bad) sub pop ds push jmpq adc (bad) stc jb stc test or jmpq movsl (bad) jp push sbb shll jo jle test imul movsb sbb xlat mov (bad) mov cmpsb fs shr (bad) mov mov pushq lods jnp jns (bad) jnp mov mov adc jae std (bad) lcall rex.WX sbb imul xor (bad) (bad) mov cmp rex.WRB jbe outsb and (bad) fbld cli (bad) lcall and adc jns sbb sub mov fildl sbb (bad) rex.WRB cmp icebp mov sti addl and lea fildl or cmp int3 add mov adc rorl int3 (bad) mov ficoml js outsb jbe rex.XB and mov movabs mov cmpsb out cmp loope cs movabs retq (bad) sub je mov xchg xor pop add (bad) fnsave sbb (bad) dec pop cmp mov callq (bad) data16 sbb push or xlat ja movsl mov (bad) sahf rex.W (bad) repnz movslq gs rclb sub fwait or pop adc imul andl sar xchg rex.WRB (bad) and add je (bad) (bad) (bad) mov fs (bad) lcall rex.X pop frstor shr jp out outsl jle cli rex.WRX adc mov add sub and sbb out fcoml cltd or fild je (bad) rex.RXB xchg cmc xor shl es xor movslq imul jae and or xadd rcr mov mov rcr add mov not setnp mov jmpq jmpq or jmpq jmpq jne test jmpq jmpq jne lea lea ror inc mov bts rol sub btr mov bt cmp jmpq je movsbl push movsbw lea mov jmpq jb ja pop sbb mov jge jmp scas notb push je cmp or movabs movabs sbb test (bad) or (bad) adc pop cli clc test gs lods and popfq (bad) test add xor sti pop xchg mov rex.X jb jmp mov rex.WX mov jrcxz std loop xor sti mov push (bad) sti (bad) lcall js rex.RXB rcl sbb loopne sub in popfq mov repz pop fwait lahf stos lcall xlat negb add scas (bad) jnp and cmp gs fistl (bad) (bad) (bad) std and ja cmpsl jg add scas cltd rex.R rex.WRX jmpq cld lods loope pop sbb sub adc (bad) in test mov movabs retq lret roll addl outsb popfq xor pushq push movabs mov mov mov fdivs (bad) (bad) (bad) (bad) add adc add loope mov (bad) in pushfq retq (bad) out or rex.WX (bad) cmp callq adc gs fwait rex.R (bad) divl sti sub (bad) lcall sar (bad) lcall movsl in clc jg rex.WRB je pop mov fnstenv pop xor push test int mov test (bad) (bad) (bad) (bad) or (bad) pushfq cmp mov (bad) xor rex.RB lods and jb fmuls out cmp icebp pop xchg (bad) and sbb sbb xchg leaveq fldcw adc jae push rex.WR jb jmpq sub rex.WRXB (bad) push jae push cltd cld cmp retq leaveq rex.WB rex.WR sti push jp mov xlat (bad) out sub mov insl pushq xor stos in push cld fistpl mov loop pop xchg outsl (bad) add (bad) lcall (bad) xchg leaveq fdivrl xor (bad) lret fwait jns cld (bad) (bad) (bad) mov test cli (bad) lcall loope (bad) cwtl rolb (bad) in pop cmp (bad) jae xor movsb andl xchg rex.R (bad) loop test lret jne pushfq rex.WB adc adc (bad) cmpsb and sbb (bad) xchg jae rex.RB mov shll cmp clc rex.RXB in xchg sbb mov add cmp adc movsl jge in jb lahf or mov cwtl out (bad) rex.WRXB mov fnstcw pushfq xor jae mov (bad) (bad) out mov xor retq xchg jno enterq imul int gs (bad) (bad) (bad) mov (bad) sub icebp xorl add or mov (bad) (bad) cmpsl or mov ja push (bad) mov sahf (bad) enterq ss cld (bad) (bad) (bad) fs repnz (bad) lcall rex.WXB rex.RXB rex pop cmp (bad) mov sti cltd (bad) es lods rex.WR rex.RX js pop xor cmp rex.RB rex.WRB fwait jrcxz (bad) cmpsl fsubl rex.WX rex.RB rex.WXB (bad) sbb (bad) mov leaveq rex.RX mov sub xor add je outsl fs imul add test xor add test pop (bad) add mov test xor bt dec mov shl (bad) lock dec mov test test jmpq jmpq jmpq jae dec movsbw rcl setbe mov lea neg and cmp mov sbb not bts mov test clc sub cmc test repnz jmpq jmpq jne jmpq test sbb mulb and cmp pushq flds pop adc (bad) shll pushq sub push rex.RX xor or mov pop lret or (bad) incl movabs mov stc mov movabs (bad) (bad) mov cmp lcall fstl sar lea cmp (bad) (bad) mov mov sti ficompl sub (bad) (bad) cmp (bad) (bad) ds sub rcrl movabs jp sub mov retq push fisttp rorb lret rex.WB frstor (bad) mov movsl sub cmp pop test pushq scas out adc add (bad) insb rex.B insb outsl movslq cmp jmpq cmp jmpq jne setle pushfw ror seta mov clc clc cmc ror jmpq jmpq jb test cmp jmpq jmpq mov (bad) xchg pop sbb outsb je test lret jae jb cmp (bad) jae (bad) rex.RX or add icebp sbb out (bad) mov lahf (bad) ficom mov insb cmp pop rex.WXB jns jp movabs rex.WXB sub std cltd (bad) (bad) outsl (bad) (bad) lcall jno lret add in rex pop pop sbb cmp sbb sbb jl mov movsb or mov sti (bad) lcall add and mov pop cmpsb (bad) icebp mov (bad) mov jp xor repz rex.XB adc (bad) int fistl jno (bad) and retq rex.X (bad) add js cwtl or (bad) lret pop xchg rex.WXB jp test (bad) fxch nop (bad) push cmp xchg gs add popfq jne movl shll (bad) jg xchg movsl (bad) cmc fwait rex.RX and pop or pop sbb pop mov sbb loopne out rex.RX jne jnp repnz sub jo jrcxz cmp adc push (bad) pop (bad) int jae xchg rex.XB adc jns imul (bad) jmpq retq jae jmp (bad) jae (bad) xor add sub lcall rex (bad) lcall adc imull (bad) adc enterq (bad) loope rex.WX cmp or adc jae (bad) fs stos pop mov lret jnp jnp mov pop jmpq cmpl pop cmp adc pop mov mulb add (bad) ficoml mov rex ds shrl xchg fmull pushq jno pop in xor mov (bad) add btc bswap shr not xor movsbl bts mov clc bt jmpq jmpq jne clc neg cmp xor not inc dec movsbw mov setl cmp add sbb stc mov clc stc test jmpq gs mov (bad) jns xor jnp lods pop adc jno rex fwait psrlq push sarl leaveq (bad) in mov sub out xchg adc sar sbb movabs sub adc fwait mov mov lahf or cwtl pop sti stc fadds int (bad) fistpll inc gs cld fistpl sub iret cwtl ja lock mov (bad) pop push (bad) adc mov ss jne pop loope adc rcll push xchg xor sub jne add xchg fadd cmp rex.WB sub add out jbe in fwait shr adc (bad) add sbb int3 ja pop movsl fs rex.WX rex lock lahf cs cmpsl data16 fdivl fisubrl adc adc xor cmp cwtl (bad) rex.WRXB in sbb andl rcr retq xor adc lcall sub add sub addr32 rex.WB (bad) (bad) movabs sbb adc push mov out add clc (bad) jo insl movsl cmpsb xor push mov imul jmpq add div mov cld adc cli add sbb xchg lret sahf pop xor (bad) cwtl enterq mov adc jmp in sahf rex.W rex.RX (bad) retq lahf divl test sbb cmp cmp jbe scas sub test xor loope cmp or sbb push (bad) addr32 xor out sub adc test movsl push roll sti fiaddl (bad) cmp pop mov mov iret (bad) push fsts fucomip xchg xor rex.WRXB rex.RB adc notl mov (bad) shrb (bad) adc xchg pop ja (bad) (bad) mov jrcxz add mov in jl mov xchg adc (bad) out pop not movsl xor (bad) adc jmpq xor es (bad) mov scas jl (bad) mov rex.WRXB adc xor rex.X and mov (bad) fdivl fcmove or adc test adc sarl add sbb mov add push clc (bad) (bad) data16 and sbb imull movsb add std fadds (bad) (bad) jo push scas test addl sub adc lret cmp mov pop (bad) (bad) in (bad) (bad) (bad) mov sub pushq sti cld (bad) lcall test rex.X gs (bad) (bad) mov cmp loope retq clc movabs sbb movabs sbb and (bad) rex jle in hlt pushfq rex.WX pop and (bad) sahf rex.WRX je adc mov push xor sub movabs icebp mov fnop andb rex.WR or pop lods sub shlb jmpq rex.RXB gs outsl insb fs (bad) je add cltd (bad) mov js callq jmpq (bad) push sti movslq rex.X int3 (bad) outsl pushq mov int sub rex.WRX std jne sub and (bad) in js cmpsl je adc mov jl sbb gs (bad) adc lea jb sbb (bad) repz rex.WRX cmp (bad) (bad) mov sub mov callq or in sbb (bad) cld xchg or xchg adc test (bad) lcall sar lcall pop push callq scas mov add mov test ss xor (bad) xor mov (bad) jo in in xchg xchg (bad) leaveq test (bad) jns clc push xchg push lods jge cmp (bad) and jne or cltd jno sub cmpsl (bad) scas (bad) cmpsl (bad) ljmp lock movabs (bad) xlat (bad) rex.WRXB push sub jrcxz pop cmp decl rex.WRX xor scas pop sahf sub jmpq sub mov insl and jnp adc xchg mov negl movabs (bad) (bad) fildll xor pop es jnp rex.WR (bad) lcall pushq (bad) lcall jl imul adc push lret ss jae sahf icebp movsb mov push or ljmp rex.WRB rex.WRX pushq (bad) or push (bad) sub pop add rex.B jmpq popfq rex.WXB add test rex.WX xor popfq rex.WXB add mov stos adc cmp outsb adc fidivr jns (bad) retq shrb sbb (bad) out adc out xchg std or testl insb (bad) (bad) cmc (bad) sti movabs lods cmp andl icebp cltd sar push xchg xchg test and mov or (bad) sbb (bad) (bad) (bad) (bad) mov and fwait fwait orl mov mov fucomip adc mov (bad) retq rex.WRXB xor sarl lahf rex.W rex.WB cltd sub xor std sub rex.R add push xchg pop rcrb cmp sbb jb rex.X lret fwait cmp andl iret xlat outsl ja mull mov jb xor nop push cmpsb rex.WRX repz or cmp pop (bad) (bad) mov std sub lods jnp jp clc rex.RXB jg mov mov (bad) in js xlat cmpsl and stos mov sbb pop xor cmp pop jo (bad) out (bad) mov sbb or scas cmpsb (bad) lret out push (bad) and (bad) (bad) jg xchg retq out xchg xchg add jns out stc movabs clc cli (bad) lcall sbb lock (bad) xchg movslq xor fcmove gs lods and cmp jo xchg mov out jle repnz adc fs (bad) in mov rex.WRX adc xor mov out pop cltd test ds push out xchg jnp sbb xchg push (bad) in sub leaveq sbb sbb scas jge push sti xor cmp (bad) subb rex.RX testb or (bad) rex.WRX add (bad) or mov movzbw mov add add mov stc repnz jmpq pushq jmpq (bad) pop out pop addr32 xor (bad) pushq rex.WB cmpsl data16 movsb cmc popfq clc mov pop adc rex.W loop retq sar sub push icebp outsb or pop rex.RXB int (bad) lcall fiaddl iret lahf mov pop insb movsb and jne (bad) popq sbb xchg jno addl mov sub jmp pop cmp sub cld (bad) lcall fdivrp (bad) lcall push in sbb pop es gs add mov sarb sbb in mov clc test js outsb adc (bad) cmp sbb (bad) (bad) sbb sbb cmp outsl mov enterq xor mov fmuls rex.RB movslq rex.X pop loop mov rex.RXB gs fs jo gs rex.WB outsw add mov mov adc nop (bad) out rex lret rorl xchg movsl cmp test jae cli adc sbb mov popfq push cld fistl icebp mov mov (bad) (bad) (bad) jg xchg sbb jno fcoms (bad) test or movabs (bad) mov mov adc cmp mov addr32 popfq rex.RXB repnz push cmp jmp adc cmp in cld (bad) (bad) fild mov rex.X (bad) lcall sub fnop fidivl adc gs and and pop and and ja loopne in lea (bad) push cwtl fmul rex.W cmpsb (bad) (bad) xor data16 jb js (bad) mov (bad) out cmp push rex.WR and sub (bad) in lods jnp movabs fcoml jb cli decl mov imul cmc jmpq push not mov mov lods jmpq cmp cmp jmpq je jmpq callq jmpq jmpq sbb xor mov jp and xlat idivb xorl jge xchg xchg (bad) test loopne hlt stos rex.RXB es loope mul xlat sbb je jrcxz push rex.B rex.WB rex.WR (bad) out rex.WX sub movabs (bad) jg rolb lahf cwtl adc xchg cmpsl and xchg sti cltd leaveq pushq mov rex adc jo test sbb (bad) mov out mov mov rex.RXB rex.WRXB rex xor pop not mov mov scas jge jrcxz add stos ja int3 mov (bad) sub retq (bad) outsl (bad) (bad) pop xchg xchg (bad) (bad) (bad) jbe or seta xchg rex.WRXB xlat jbe,pn (bad) xor pop fisttp repz test jl mov rex.RX (bad) test retq jmp push jmp or xchg (bad) (bad) mov xchg add or lret or outsb cs notl (bad) leaveq rex.WB in xor cmpsb ja mov (bad) xchg rex.WRX int3 rorb xchg push add (bad) int3 add mov add mov and xchg shlb push cmpb jbe gs xchg xor jae xor mov push adc test jmpq jbe xor jrcxz outsb jae sub (bad) (bad) (bad) add sti insb mov (bad) popfq rex.WRB pop stc fmuls mov mov sbb xchg fs sbb repz in shrb adcb movabs mov out mov pushq insl mov pop mov or psubusw (bad) (bad) adc imul (bad) jno loopne outsl mov repnz (bad) (bad) (bad) mov sti (bad) (bad) (bad) (bad) (bad) (bad) leaveq cmp (bad) jns jno mov xor (bad) push mov loope enterq (bad) (bad) ja mov (bad) lcall jp push iret fnop (bad) lcall xor out mov fstpt popfq fildl and jl (bad) jns sbbb (bad) (bad) (bad) int3 push rex.WR sub adc adc (bad) movsl in rex.WRX or push jne xchg cs mov movslq pushq sbb (bad) or pop mov fwait or hlt xchg rex.WXB retq mov mov mov mov xchg rex.RXB add or add xor sub int mov rex.XB add ja jne je bswap xor sub ror xor not mov sar or ror mov jmpq jp bt ror jmpq jae test cmc bt cmc sub jge callq jmpq jmpq ja rol not clc rcl sub setnp add sub bswap mov cmp mov bt repnz jmpq jmpq mov movsbl movzbw not movsbw pop retq mov sbb loop jo push jbe rex.WRB rex.B rex jne loopne fistp scas movb (bad) xchg push (bad) (bad) outsb popfq int push mov adc sub push (bad) mov (bad) (bad) fnop in mov (bad) pop adc lods fmull jmp mov (bad) (bad) lock out sti (bad) lcall test (bad) mov hlt popfq test lock scas or js ss pushq (bad) iret and (bad) repnz cwtl movsl push rex.WRB (bad) or cmp and addb repz jns and movslq pushfq sub pop mov (bad) (bad) sub fidivl pushq pop mov sahf (bad) int3 jl xor pop movsb pop (bad) adc sbb jp xor loop adc sbb icebp pushfq cmp repnz adc xchg icebp in fwait lret add icebp sbb repz pop cmp fcomi mov mov xor (bad) fimul fdivs sbb (bad) lods hlt repz std (bad) (bad) (bad) rex.RX popfq xchg rex.B rex.WRB xchg int3 xchg mov pop lret xchg fnsave sbb scas stc (bad) push rex.B (bad) (bad) jg (bad) jbe xchg cli (bad) lcall vpsrld je (bad) imul js enterq rex.WX scas jg faddp (bad) fidiv scas data16 int3 and (bad) ja rex rex.WB insb sub rex.WRXB (bad) fdivs lods cmp fisubrl cld movslq fimul (bad) pop rex.RX lahf data16 and cmp add cmpsb (bad) leaveq es sti js lea sbb mov rex.WB sbb nop outsl (bad) (bad) movsw jne adc imul xor cmp pushq xchg repz in nop callq mov (bad) (bad) incb and retq test pop xchg cld (bad) (bad) (bad) lcall iret (bad) fisubrl (bad) mov push (bad) loopne rclb (bad) mov int rep (bad) mov rex.RB popq sar (bad) cld (bad) lcall (bad) clc (bad) lret cli (bad) (bad) mov mov jge cmp jne loope push pushfq or sbb (bad) rex.WRX clc xor loop int3 pop cmp xlat iret scas (bad) sub pushq sub or mov cld sub rex addr32 mov imul (bad) (bad) rex.RX in hlt and mov (bad) sub callq add (bad) rcll (bad) add jmpq bts adc mov clc jmpq (bad) (bad) insb (bad) jo mov mov pushfq push sbb int3 insb addr32 mov rex.RXB cli fstpl add ds adc jb and (bad) out int out ds sbb sbb (bad) lcall adc test retq data16 mov imull sahf (bad) sub mov mov xchg (bad) enterq xchg cmp outsb insb sbb adc outsb jne (bad) lcall rex.WX mov cli (bad) lcall (bad) mov rex.WR (bad) in adc adc pop lret adc lock push (bad) cmp (bad) std fsubl push lock outsl xlat iret lahf rex.WRB pop lea imul sbb fcmove ficoml callq or xor mov mov std pop (bad) movabs adc (bad) cld fistl loope push std add or cmp stc movb jmpq add rex.WR rex.RB jne gs je rex.WR outsl outsb push gs imul rex.WR (bad) imul add je sub mov jmpq je jmpq jmpq jmpq sub mov sub sti adc es insl mov jo fwait rex.XB fnsave (bad) sbb and mov (bad) (bad) jbe adc push jg insb or sub xlat mov (bad) int rex.W cld (bad) fldl popfq insl and rex.RXB mov clc adc pushq je mov (bad) rorb hlt adc xchg ds icebp cwtl (bad) cld (bad) (bad) jg jno mov (bad) lods rex.R retq in pushfq cmpsl movsl (bad) or lods jbe and sub xor outsl (bad) cmc (bad) cmp (bad) in insb movsb (bad) repnz push rex.WRXB (bad) lahf rex.WRB stos retq mov icebp push test (bad) adc cmc mov pushq out (bad) mov fisttp test (bad) add xchg add jmpq jmpq cmc cmc add jmpq rex.RXB jb mov mov movabs rex.R xchg and (bad) (bad) jle cs shrb out pushq (bad) xchg or insb sub fwait xor cmp xor rex.WX std popfq sub mov rex.WRX cmp or (bad) pop mov rex.WX rex (bad) in (bad) xlat pop cmpsl sti jrcxz cmpsb mov mov cmp clc sub movabs test rex.RX push xor mov rex (bad) movabs int3 cmpsl ja (bad) xor jle imul lahf ja cmovns (bad) mov cwtl (bad) std and adc xchg sub cmp (bad) cmp xchg cli (bad) adc xorl out add scas rex.R lret pop sti sub xlat xchg out loop retq (bad) in mov in lahf cltd rex.WRX (bad) rex.WRX popfq jge subl (bad) xchg add xor cltd mov add sbb xlat cmc icebp mov faddl xor fldenv (bad) mov in (bad) rex.WB insl sbb lret sub outsl rex.WRX and add or (bad) adc movabs lret mov test mov push cmp mov lcall (bad) xchg cld (bad) (bad) mov std xor gs mov repz sbb rex.RXB lods jne jnp fnstcw pop (bad) sbb lret imul and loope xchg movswl (bad) fbld add sub jge adc jb cmp xchg mov rex pop lea add jae jmpq add mov stos and sbb fucomip mov push (bad) pop cmp xchg add fnstcw (bad) lahf cs in sbb sbb loopne adc cmp js mov (bad) fsubl cmp (bad) (bad) (bad) mov (bad) data16 mov movslq retq mov xchg sub std (bad) lcall (bad) sti (bad) lcall rex.R decl xor popfq sbb push imul out adc push gs stos fcoms divb xor sbb jge or add gs xor rex.WB (bad) (bad) test jmp jne and stc imul outsl lock pushfq lock test xor add xor (bad) outsl es push xor sub insb mov je jmpq callq jmpq jne xor sbb xor bswap bt mov mov mov not add cmp sub mov jmpq jmpq jmpq push rol not sub sar mov test sub jmpq outsl insb xor cs insb add push mov push mov ds out fldcw stc jge (bad) pop int3 (bad) cmp xchg rex.RX mov mov (bad) sarb sbb rex.WR rex.WB fwait pushq jbe (bad) (bad) adc sub jae xchg mov std js cmp fiaddl add icebp stc sbb xchg (bad) rex.WB rex.WRX pop (bad) mov (bad) imul fimul mov clc or add movabs jae or xchg ds adc mov loop (bad) stc int mov and mov icebp (bad) jge mov out cmp pop rex mov cmp fstl test xor cmpsb mov rex.RXB ss jge in movabs rex jmpq jne sar test xor lea bts sbb mov test inc adc add ror (bad) lock mov test jmpq (bad) (bad) fs ja mov mov stos cmpsb gs movslq fldenv (bad) (bad) mov add (bad) adc (bad) std and jbe push (bad) test mov adc push (bad) (bad) (bad) fildll sbb add jg movsw rex.RB jge rex.RB cld (bad) (bad) jg sub jno sti (bad) lcall imul sahf cmp and loop rex adc jne sub scas outsl out and movabs (bad) rex push (bad) (bad) xor xchg pop cwtl or pop movsb cld rex sbb mov mov int data16 and mov test pop stos iret mov js pop (bad) xor sub cli sub ljmp and cmp repnz add movabs leaveq xchg rcll stos add test js mov int jmp ss rex.RB xchg xor mov add cltd (bad) cs (bad) in mov rex.X out movslq (bad) mov notb cli adc sbb lret (bad) push rex.B adc adc fistl mov mov rex.B ja pop scas (bad) lock test (bad) lcall mov mov add fwait mov adc rex.WXB mov rex.X mov test rex.RB rex.WRB retq stc xchg movl out lahf clc and adc fwait sti imul cmpsb mov movabs sbb xchg lods rex.R mov mov cmp (bad) rex.RX je rex.WB (bad) cmc and testl movslq (bad) cs mov (bad) mov xor or (bad) rorb stos orl mov jmpq clc stc cmp jmpq jmpq cmpsb outsb and xchg cmp xlat (bad) rex.W in lods (bad) cli adc xor movabs (bad) mov cmp and leaveq es (bad) (bad) xor mov rex.WRX (bad) adc cltd enterq (bad) sub test and xchg rex.W (bad) (bad) mov popfq sti (bad) lcall adc in mulb jmpq jg (bad) rex.B (bad) lret jo rex.RXB mov rex.W (bad) (bad) (bad) rex.WX (bad) ss mov mov stos add loope sti fidivl adc push iret (bad) push xor js xchg div xor mov (bad) cli movsl in repnz (bad) xchg out cmp subl xor sbb retq or xor mov mov rex.X rex.RXB lods fsubl xchg (bad) add mov add push or mov or (bad) lock mov jmpq jmpq je clc clc cmp jmpq jmpq movsbw bswap setno mov not not movsbw mov bswap bswap lea lea jmpq stc stc stc test jmpq je cmp clc bt sub cmc jmpq jp rex.X jnp mov mov (bad) roll out (bad) rex.WRX sar rex int mov xchg push (bad) jg data16 rex.RXB (bad) sbb (bad) rex.B (bad) sbb cltd cld add mov movslq fdivrp and loope push sub xchg mov loop (bad) cmpsb xor (bad) jge mov adc rex.X (bad) lcall ja jo cld (bad) lcall cmpsb insl (bad) fdivr xlat lahf (bad) mov sbb jmp lods mov adc fnstcw faddl pop rex.RXB addr32 rex.XB hlt in and sti jmp xchg push push test rex.WR add je sbb gs ja pop rolb mov cwtl rex.WRB cmp mov xor negl lss ja cmpl mov push jbe mov hlt mov retq (bad) push pushfq sub movsbl kxnorb adc jae xchg cmp sti shrl lahf (bad) and push adc adc and imulb (bad) (bad) (bad) (bad) rex.XB (bad) data16 mov jno pushfq xor flds mov lahf mov cli (bad) lcall je (bad) xchg hlt sahf hlt xchg jp xchg rex.X out lock rex.RX out (bad) sarl (bad) fiaddl sub push xchg insl mov (bad) pop int3 and imul jl lret cmp (bad) xchg sahf mov insb push jo xor and in sbb (bad) cmc xor data16 movabs mov and fdivrl fsubrl imul jo cmp add add adc jmpq faddl sbb and and fs lret cmpsb decb pop (bad) out mov cmp (bad) and hlt insb pop repnz mov sub xor xor jrcxz xchg and (bad) std (bad) lcall test stos imul (bad) (bad) (bad) jmpq iret testl add or or fsubrl repnz jo movslq rex.WR nop movabs add mov int3 (bad) xchg out xchg cmp in hlt add divb xchg jbe pushq jp mov js sarb xchg cmpsb pop mov mov rex.X push (bad) out (bad) sbb pop fisubl adc stos subl sub cmp andb xchg or rex.X addb cmc push and jl in hlt cmp sub xchg sti jl mov mov sub pop loop sbb je or adc lock (bad) rex.WRB (bad) in negb adc xor in push jp mov xor test or test (bad) fcomip (bad) or cmp (bad) (bad) jg rex.W rex.R rex.X cld (bad) (bad) mov rex.WR jb andb push pushfq rex.B ds jns rex.RX jne sti (bad) (bad) fistp retq add pushq outsl (bad) cmpsl (bad) mov fiadd fimul movabs lock fstl jb sbb (bad) (bad) adc jns add cmpsb mov xchg adc sti rex.X pushfq mov fimul cmp pop ja stc imul clc cmc clc clc add jmpq jmpq jmpq rex.WRB mov add in gs fbld jrcxz loop jo iret xchg ss std xor test fbstp (bad) (bad) movabs or (bad) gs (bad) sub lret scas (bad) (bad) (bad) (bad) hlt cmp xor repz and mul pop jp lea pushq scas xor jg cmp lods jmpq (bad) movabs out repz add stos adc mov popfq rex.RXB (bad) movabs jle hlt mov mov sbb (bad) lcall (bad) fsubr (bad) icebp mov rex.R or add jg (bad) cld cmp lods rex.WX (bad) (bad) xor and pop mov (bad) cli addr32 push test (bad) repnz xchg adc pop movsl xor add hlt rcll rex.WRB add cmp rclb data16 add movabs xor fs mov outsb rex.WRB pushq (bad) loopne je jmpq jmpq jmpq (bad) repnz in insb fwait jnp scas pop in xchg xchg and movabs (bad) xor imul loope idivb or adc xchg insl pushfq fdivl sub stos push adcb stos (bad) (bad) (bad) lcall pop lret in ds cmp jno shr (bad) outsb (bad) add fistpll cltd cmp loope (bad) push xor lock movsl sub insb mov popfq add sub cmpsl (bad) push xchg std (bad) mov lea push xchg adc or and adc lods in mov (bad) adc xchg jmpq je lea shl cmc push xchg mov bts rol sub jmpq jo movabs jmp stc iret movsl mov out mov sbb test iret (bad) ds pushq (bad) pop adc sub popfq add and (bad) lcall jb add lock repnz enterq pop lret rex.RXB mov pop enterq fiadd retq fcmovnbe adc stos xorl (bad) and mov (bad) pop movabs mov jae retq cmp (bad) callq out shl (bad) add imul (bad) (bad) (bad) out cmp adc (bad) mov rex.WRXB cmp je pop loope imul push push nop push cs lods jp cmp (bad) xchg insl popfq add (bad) and push add iret jmpq jnp stos (bad) sbb xchg and mov addr32 jbe,pt cmp shrl fadds (bad) cmc and mov stos (bad) int movswl es mov jg xor add push sti fimull callq (bad) sub (bad) mov test (bad) lcall out mov leaveq out mov (bad) out scas mov pop imul mov (bad) and ficomp sahf shlb jge test jp fs loope (bad) icebp mov jrcxz test mov adc (bad) addr32 jge pop add stos xchg ss jl cmp rex.WX nop pop mov in movsb fwait jnp sub mov mov rex push push xor sti cwtl add int (bad) mov jae (bad) orl sarl cmp cmp rex.W testl ficom mov popfq jne shll test (bad) (bad) (bad) inc rex.WRB cmp (bad) jns add retq and in jge std (bad) (bad) fistp lods movabs cltd rcl (bad) fsubrl and mov shl lock leaveq xchg mov cltd rex.WXB rclq ljmp or or test pushq mov pop outsl imul jne fisttpll or callq rex.R movslq rex.B jmpq iret sbb rex.XB cmpsl mov and rex push ss pop mov imul or pop cmp rex.W divl iret jg (bad) insb xor and push js (bad) fucomip push jne pop and add and test scas (bad) (bad) mov cmp adc (bad) (bad) push mov movabs test rex.RB out (bad) lcall and (bad) lcall jb cld xchg xchg lods fs movsl mov mov jrcxz (bad) mov xor fsubr (bad) rex.R mov (bad) xchg push and out mov repz xchg add sahf (bad) ss add xchg outsw (bad) sub (bad) iret push sub pop mov adc sbb leaveq leaveq mov ror cmpsl (bad) xchg lret and xchg add jno and lahf je jmpq cmp or jmpq jb cmc stc stc bt cmpb jmpq jmpq add rex.RXB gs outsl fs rex.WB outsw jb (bad) je outsl outsb add mov (bad) add movabs sbb pushq cmp out (bad) movb sbb roll xchg adc mov sbb rex.RX rex.R ljmp movslq xchg jmpq mov loope rex.WRX sbb pushq xchg in (bad) (bad) (bad) (bad) ljmp xor (bad) jae (bad) jrcxz xchg mov (bad) (bad) mov sub iret rcrl (bad) (bad) negb out (bad) scas js jge (bad) xchg (bad) jrcxz outsl sti (bad) lcall rex.WR mov (bad) stos rex.WRX sti rex.WXB movabs or loope xchg std jne or rcll xlat insb movsb (bad) adc sbb mov rex.WR lods jp cmpl (bad) push (bad) rorl rex.WX stc cmc bt neg ja stc cmc sub stc test bt cld popfw jmpq jo jae test stc clc cmp jnp ja shl add rcl or shl neg add rcr ror sbb rol xchg bt rcr shrd btc mov or add add not mov test jmpq jrcxz sarl xchg sbb cmp rex.WX rex.WRB jae mov (bad) cmp or xchg mov decl fsubrp adc stos movabs mov jmpq (bad) loop rex.WRXB movabs (bad) repz leaveq test out insl divb cmp movabs test imulb jmpq xor in imul mov out lret mov fstl rex.RX sbb xor push (bad) mov and (bad) fadds std (bad) xchg adc xor push popfq adc adc andb xchg test and pop rex.WB xchg ja cltd sar pop hlt sub rex.WXB inc mov stc inc mov shl bswap setb xchg mov bt bts dec mov jmpq add push (bad) je rex.WRB je pushq add sarb xchg (bad) movsl cmp (bad) movb adc rex.RX in push jae (bad) cmpsb xor sbb fstpt rex cmp retq add cld adc fs (bad) (bad) lcall xchg xor (bad) out pop add fsts fs mov push xchg or imul (bad) and lahf mov (bad) lcall cld retq sbb movabs (bad) (bad) outsl (bad) add out sub xchg push lea repnz add (bad) add ds std loop cmp pop jns jrcxz xor stos jmpq rex.W lock (bad) callq loopne gs movslq xor (bad) (bad) out xchg add and add js mov (bad) or data16 cld mov adc mov (bad) xchg pop xchg push (bad) push callq stc clc cmc sub jmpq and je sbb push xor cmp mov movsb mov popfq in (bad) mov in jg (bad) cs cmpsb gs movsl or (bad) mov adc js outsl mov lret mov pushfq add (bad) adc (bad) (bad) (bad) (bad) retq ficoml test jmpq fcmovnu jno add shll rex.WRXB in jg lahf add (bad) mov fmuls (bad) outsl mov hlt cld (bad) (bad) mov rex.WB (bad) lcall cmp cmp jmp loop cmp add (bad) fcoml push sub push pop cmp or popfq rex.WXB pause add add adc icebp outsb push rolb test (bad) and imul test or icebp (bad) iret sbb sub (bad) (bad) xor sti movabs (bad) pushq mov icebp sbb es fdivrs xlat mov mov add pushq std or out and add fidiv (bad) es sbb (bad) (bad) (bad) jg mov jl (bad) (bad) (bad) fucomip scas in jg push cld add lahf xlat mov gs rcrb mov mov jno or (bad) outsb movsl cmp mov test mov test pop rex.RX (bad) lcall data16 fwait cli (bad) lcall (bad) sbb imul rex.R rex.W mov loopne jne (bad) pop fndisi(8087 test (bad) sbb std (bad) (bad) ss mov (bad) jno sbbb or retq sub (bad) outsl adc pushq sub lods hlt mov fild cmp test lea lods div and pop test rorb add add bt jmpq sbb movsb (bad) mov jmp in sbb repnz (bad) lret cmp mov push rex.R fist (bad) or repnz clc adc adc pop adc jns rex.RXB rex.WXB or cmpsl (bad) (bad) (bad) (bad) (bad) pop fild push push mov sarl cwtl adc shld cmp test xor pop cmp cmp push rex.W (bad) mov or faddl jb or pop xchg xchg push cld je adc sub rex.X jb rex.WB rex.WRXB jmpq in (bad) (bad) (bad) in (bad) xchg cmp (bad) lcall int3 mov mov and jae mull (bad) rex.WX gs out imul (bad) adc movabs (bad) enterq nop enterq add rex.WB (bad) std or or fldcw rex.WRX insb je rex.WX rex.X bt add stc cmp cmp jmpq repnz jmpq jl pushq jmpq je bt cmp bt sub clc bt bt cmp jmpq jne add and mov test adc or sub cmp sub rol shld mov clc cmp bt bt sub cmc jmpq cmp jmpq lret mov sbb xchg (bad) mov jp add (bad) sbb movabs rex.WR rex.RXB data16 jge repz xlat (bad) push jmp fwait cld mov cmp cmc and rex.WRX (bad) (bad) (bad) (bad) adc fsubrp sub jb add or xchg (bad) cmp ja jo pushfq add mov sub (bad) pop push (bad) push (bad) lea xchg rex gs (bad) lcall xchg sti (bad) (bad) mov add cwtl in icebp push scas mov (bad) movabs push xor xchg push repz fisttpll jmpq (bad) and sub (bad) (bad) (bad) fsubl sbb test (bad) rex.WXB loop mov pop mulb fnstcw pop callq jmpq mov stos adc nop callq test jle hlt rclb rex.WXB adc test (bad) (bad) or rex.W loopne lret push out stc adc (bad) ficom fwait cmp movsb jo (bad) (bad) (bad) (bad) rex.RX rex.RX rex.RX (bad) repnz retq jne adc xchg fnstsw mov xchg int3 popfq std xchg int3 cmpsb jp and (bad) out scas loop sahf xchg fnstsw fs popfq cmp xor std (bad) lcall pop in jo (bad) lcall mov mov scas in sarb or ds pop cmp or (bad) sub cmpsb out add (bad) cs xor lods pop jrcxz shl mov fimul insb sub mov (bad) xchg push xchg insb mov add jle (bad) in push mov or jo xchg add jne xor rex bt jmpq push popfq mov mov stc fcomps (bad) out test or jae decb push jbe or xchg rex.WX rex.XB jg lods mov cmp (bad) xchg popfq adc cmp (bad) lcall ljmp addb iret xchg in lods ljmp or mov xor xchg negb rex.W lods ljmp pushq (bad) in or rex.WRX in addr32 (bad) (bad) (bad) pushq (bad) lcall rex.WRB mov adc mov or and jns imul (bad) xchg (bad) std or sti cltd rcll jne es cmc xor cmp test lret and (bad) xchg (bad) rex rex.WRX jnp and add cmpsb popfq rex.WRB lods (bad) sbb sbb jg es jno je cmp sub test test clc test cmp jmpq jmpq jmpq jne not not bswap movzbl mov jmpq add neg mov clc cmpb jmpq maskmovq negl jmpq sbb iret (bad) pop insl in sbb cmp stos retq push fdivl or mov xor (bad) mov mov insl rex.WR lret (bad) rex rex.RX (bad) (bad) (bad) mov mov fwait jp push xchg rcrb add cmp add (bad) (bad) jp and js addr32 (bad) (bad) fist cli (bad) lcall pop fnop rex.X movsl adc stos mov xchg jbe (bad) fcmove or xor adc add out xor in xor (bad) mov sbb push repz out (bad) pop mov fmull rex.WX (bad) loopne js ss adc or testb retq or in cmp adc popfq jne sub rol mov or bsf adc sub jmpq (bad) rex.RXB nop sbb push xor or shlb roll fsubr (bad) add xchg cmp fistpl icebp sbb mov pushq test jmp pop not mov cwtl or es lret (bad) (bad) lcall test loop sub test loopne std (bad) lcall (bad) mov (bad) mov (bad) mov cwtl rex.B jg jne xchg adc hlt xchg xor scas (bad) mov cmpsb out add xor pop (bad) (bad) sbb xchg vmovlps rex.WRB pop mov test (bad) stc cs es imul (bad) sbb and adc pop or rex.XB rex.R jbe (bad) jo (bad) sub (bad) outsb adc sub vpor icebp outsb and cmpsl maskmovq negl fidivl add jmpq callq jmpq add add add add add add add cltd sldt rex add rex add sbb xor add mov add scas sldt adc add sbb push rex add stos adc add mov add rex add adc addb rex.WRXB add sbb nop rex add rex add out adc mov adc add fistpl add rex add add rex add adc loopne adc add movabs sbb negl adc add cltd lldt rex.B add add xor sub add enterq js pop (bad) xchg sbb movsb stos retq (bad) mov sub cmp xchg add (bad) pop outsb xchg xor jmpq movabs (bad) mov mov jle and rex.RX (bad) (bad) fbld test or mov fisttp mov jrcxz lea movabs in (bad) sti (bad) lcall fwait xor cmpsl andb rex.WRB add insb test mov jne ds xor (bad) pop rol jbe (bad) int3 pushfq rex.WX pop and add retq or or cs push xchg xor mov and (bad) cld (bad) fildl mov pop (bad) mov mov xchg adc or xchg std fwait movslq lret repz xor stc jmpq (bad) ja jl repnz rex.W cmpb test in (bad) jmpq jne neg sar sub rol jmpq test enterq jp sbb sub sbb xor sub (bad) jae mov out rex.WRXB mov rex.WXB jp (bad) mov (bad) idivl push callq insl and mov xchg adc fcompl (bad) (bad) std push out cmp mov scas sub lcall mov (bad) lcall mov add clc movabs (bad) outsl jnp xchg loope mov cmp (bad) iret xlat (bad) std mov fwait xor lock es adc xor ds pushfq add mov loop pop (bad) mov pushfq (bad) xor xchg rex.WX repnz insb js retq gs push xchg mov mov test (bad) mov repz xchg push mov mov lahf callq jmpq jmpq clc jnp test sub cmp cmp jmpq jne dec setno mov cmp clc sub btc shr cmc neg mov cmc test stc test sub test bt pushq jmpq jne stc btc neg ror sub movzbw bswap mov jmpq test stc sub cmp test test test cmp jmpq adc xchg sbb and add rorl rex xchg and pushfq movsb pop or shld loopne sub (bad) (bad) mov fistpll fdivl (bad) hlt add sub adc and lods lret or (bad) lcall out cmp lahf (bad) scas (bad) xor (bad) (bad) fbld retq (bad) iret je pop mov test rex.WX push scas push cmp xlat mov out stc mov stos sbb rex.RX xor test sahf movabs lret fadds sbb xor mov jg neg mov mov test jp (bad) jae rex.RX xor (bad) retq (bad) mov mov rex.RX rcl jp pop rorl out mov stos or sbb std fcomps rex.WRX sub (bad) (bad) lcall adc test sub sbb adc stc or (bad) shrb push xchg jae out test loope (bad) xchg jae jb mov mov rex.WRX cmp (bad) (bad) mov insb (bad) retq mov pushq icebp testl movsl (bad) rex.WRX xor add pop test (bad) ljmp xchg jo sub sbb or fsubrs pop pushq rex.RB (bad) jbe in insl rex.WR imul jle pop add rex.X cs ss xor and add xchg lret js data16 hlt xor and rex.W jmp push push xor mov (bad) decl mov stc (bad) callq jmpq test jmpq imulb mov sar sbb rex.WRX (bad) lret push lods pop xor pop cmp and add mov andl popfq push mov push pop cmpsl rex.X cmp mov iret sbb pop movslq (bad) (bad) jg rex.X movabs fisttp sti (bad) lcall jno or insb hlt popfq iret adc cmp rex.WRX jns rex.B je stos or retq incb push xchg cmp int3 (bad) mov adc xchg adc and jge (bad) test xchg ds nop movabs fs adc imul cmpsl (bad) (bad) xchg or push cwtl or pushfq mov movabs (bad) jo sbb rex.WRB cmp ja mov (bad) std movsb fs mov rex.WXB jae mov mov ja fidivr xchg test loop pushq out movabs sbb (bad) jnp mov pushq imul lock adc add loop rex.WB stc fisubr fdivrp cld (bad) (bad) (bad) (bad) xchg vsqrtsd (bad) lcall (bad) adc xchg add mov enterq orl in jo (bad) in movslq (bad) outsb jbe sbb or mov cmp stc mov (bad) (bad) es rex.R push and rex.WX (bad) cmp sahf mov rex.WR (bad) rclb ja std in popfq and xchg icebp pushfq push xchg pushq rcrb imul jae (bad) fsubrl (bad) adc adc mov fwait jae movsb jg adc xlat movsb mov or add mov add loopne cld div sar mov sti hlt mov (bad) in movsb cmc callq or (bad) out (bad) repnz jrcxz or out adc sti or rex.R iret mov lret hlt cmpl addr32 movslq xchg int3 push test rex.WR (bad) xor out movd rcl mov sahf (bad) pushq push cmc jp cmp fnsave (bad) (bad) mul rex.R rex.WRB mov xchg (bad) idiv mov (bad) hlt xchg xchg sbb lret (bad) mov jbe hlt and mov (bad) loope xchg int (bad) ja xlat lret mov in (bad) push pop xchg ja sbb and adc jl rex.RXB xchg (bad) stos (bad) xor (bad) (bad) not or push rclb pop sbb in (bad) sub fidiv (bad) xchg lods sub cmpl ja outsl imul pop adc rex.RXB rex.XB cmp adc add callq jmp jrcxz adc lret mov mov rcrb out add xor xor or xchg xor nop xchg add nop hlt xchg (bad) mov (bad) (bad) xchg and mov cli xchg adc hlt adc rex.X ds (bad) xorl in push roll lock lahf jmpq outsl nop rex.WR leaveq mov popfq xchg xor push (bad) sub addl or lahf pop rex.WR mov mov (bad) fdivrp (bad) mov (bad) negb push test movsb xor sti mov cmc je test xor mov shl cmc hlt pop rolb push pop popq xchg (bad) lret in mov (bad) ss push test movsb (bad) fdivrp (bad) mov and divl cmc push test xor (bad) (bad) jne (bad) test rex.WRXB (bad) movsb neg sub ja xchg cmc mov xlat rex.WRXB adc xor sti push mov (bad) jne push xchg mov (bad) cmc jle sti mov test movsb xor sti (bad) (bad) xor and or sub xchg rcll (bad) or rex.W and add stos hlt mov movsb (bad) rex.R jb pop adc adc or push (bad) mov (bad) (bad) mov push (bad) out add sbb data16 (bad) lahf adc mov mov rex.WXB rex.RXB rex.RXB je sbbl ja jo je pop rex.XB fwait xor rex.WRXB lahf subl mov mov push fwait sti callq ja pushq xor adc rex.WRXB es adc andl mov add fdivrp (bad) (bad) je xchg mov (bad) adc movslq jnp fcoml repz and or divl enterq rex.RXB je jo push push xor rex.WR xor sbb xor xlat pop out fs test fs test sbb rex.WXB xchg int3 movslq xchg mov push out es cmp xchg iret repz test fistp pop xchg movsl int3 (bad) xchg xchg (bad) (bad) sahf push in rex.RXB pop (bad) mov (bad) xor lock sbb xor je sti hlt rclb not test rex.WRXB xor movsb push fdivrp (bad) mov cmc hlt lea mov sti cmc mov (bad) jbe mov push cmc xchg test rex.WRXB sub mov movsb xor hlt rcl cmc (bad) test xchg xor movabs xor xchg rex.RX cmpsl pushq jl mov rex add or jb jl push (bad) mov hlt add sbb push (bad) or cmc add sub or (bad) xlat or mov xchg (bad) mov xchg es mov add fiadd (bad) in fstpl xchg push sahf rex.X pushq movabs lods (bad) mov or mov faddl loop pop (bad) sahf adc (bad) adc fidivrl (bad) xor fstps repz (bad) (bad) (bad) adc jno icebp adc adc add retq js loop push xchg (bad) (bad) or movabs outsb rorl xchg jge mov adc adc clc (bad) mov mov (bad) sub (bad) xchg xchg out (bad) retq add jle or loopne mov (bad) (bad) (bad) icebp mul mov test rex ss and rex.RB sbb jle xchg adc out xchg shll andb outsb retq js mov cmc adc icebp stos mov iret xchg (bad) addb loope in adc sbb in in mov xor cltd fnclex clc mov (bad) or adcl lea push (bad) fcomp mov sti test data16 push adc adc add cmp (bad) imul cwtl sbb xchg fstl in test jrcxz clc (bad) mov icebp stc (bad) (bad) lret sub sbb (bad) cwtl scas pop adc xor fsubl push fstps adc sub xchg (bad) (bad) sub retq mov (bad) push lret (bad) cwtl int3 sub loop (bad) cld (bad) add sub and or sbb xchg and adc callq movabs (bad) cmp or rclb and mov adc (bad) data16 adc (bad) xor sti mov adc hlt test jne mov jle (bad) std (bad) add adc test push movsb int adc scas adc (bad) mov adc ja sarb iret (bad) add cmp adcb fcmovne pop and imul mov xchg popfq (bad) adc pushfq sahf jns adc sbb or (bad) and ficompl mov and cmpsl popfq (bad) adc movabs jmp xor scas (bad) fidivrl push push rex.WR rex.W rex.R rex pushq or fild add (bad) xchg movsb orb xchg pop push pop mov in (bad) sub mov (bad) ja rex.WRXB (bad) xchg rex.X rex.W fs rex.WXB xlat rex.WR rex.WRXB (bad) (bad) rex.X rex.WRX lock retq rex.WXB jnp pop movabs pop xor add push jbe orl jne sub xchg cmpl femms or mov out xor jne (bad) cmc (bad) test mov sbb fmul push repnz add xchg (bad) addr32 pushfq test (bad) (bad) (bad) xchg ror (bad) clc movsl lret or adc cwtl repnz push mov jne mov stos or cmc (bad) add jle add xchg lret clc rcll add (bad) repnz cwtl mov push hlt cmc push add hlt (bad) mov adc movsb xchg fdivrp xchg jo (bad) ss hlt mov (bad) adc in xchg adc cld rex.WRXB mov (bad) repnz rclb sub (bad) test (bad) test not test je push jrcxz fnsave jle mov rol cmc (bad) mov rorb sti mov cmc loopne xchg xor mov (bad) fmulp add pushq cmc cmpsl andl rex.WRXB mov xchg mov xorl hlt out out xchg mov ror icebp int3 xor sti rex.WRXB cmc callq xor js mov scas cmc lods test rex.WRXB (bad) movsb sub sti (bad) shrb insb test in xor movsb out fdivrp mov sarb rex.WXB ss mov rex.W in cmp xchg cmpsb adc mov cmc cld test rex.WRXB movabs mov test movsb pop fdivrp es rcr cmc fild ror rorb or rclb push test (bad) xchg fdivrp nop mov test lea mov mov (bad) xor xor jo rex.WRX test rex.WRXB repz mov rol mov mov xor cwtl mov test rex.WRXB add movabs lods test (bad) xor movsb loopne sti loop jrcxz sub pop adc rex.WXB std fcmovbe mov mov or or xchg jge adc xor sub mov fdivrp ds shr cmc jmp cmp mov movsb fstp sarb js pop rex.WRXB xor movsb sti fdivrp pop cmc fwait test sbb pop xor (bad) fdivrp fmuls sbb cwtl cmc xchg sbb sbb shll sbb icebp sbb sbb mov mov test sbb rex.WRB sbb andl rex.B rex.WRB shlb (bad) fiaddl xor cwtl cmc and rorb and sbb cmc rex.WX fiaddl xor sti sub sbb xor cmc mov cmp sarb sbb cmc pop sbb sbb sbb rex.WX pushfq mov lret rex.WX (bad) stos (bad) xchg (bad) add pop test notl (bad) movabs or nop cmpsl (bad) xchg mov add scas (bad) fnstenv mov add xchg mov mov (bad) mov clc sar mov add mov push push in mov mov push adc enterq (bad) adc (bad) movsl addr32 ja jae adc jb retq xlat mov add jno loopne rex.RB and flds movabs nop test repz jo jo scas or (bad) test rex.RXB (bad) (bad) mov pop cmp jbe or sahf mov retq xor test jrcxz fstps (bad) lea (bad) ss cli fcomp movslq pop mov or pop movabs mov fdivl iret xchg add and sbbl pop xorb test jmp cmp repnz test retq pop rex.B add mov sub (bad) adc rcrl rex.WB mov lock add (bad) rex.RXB repz adc and movabs pushfq lods and xchg (bad) xlat orl jmp adc callq mull add lret adc divl (bad) lock (bad) mov add ja es (bad) repz (bad) orb (bad) std jmp rex xor mov rex.R clc iret in (bad) adc lock or clc (bad) test out (bad) (bad) rex.WRB (bad) pop and (bad) xor xchg rex.RXB (bad) cmpsb (bad) jrcxz (bad) hlt rex.RX rclb imul sub imul xor incb and hlt out test jmp pop add push xor jmp or xchg lock jmp cmp sub xchg lock test cmpl scas jno push mov (bad) test mov sub pushq (bad) lock test xchg nop out sbb addl lock je in or and push test mov ficomp (bad) or rex.X out lret push es retq cwtl jno adc sti rcrb je in iret hlt test jrcxz (bad) repnz mov cmp or nop (bad) (bad) sti rex.XB push add addr32 sbb jmpq xchg jmpq mov test (bad) (bad) pushq test popq and rex.XB test push (bad) in jno xchg rex.XB (bad) mov (bad) pop xchg pushq sub (bad) in test rex.WRXB xlat retq notb mov nop (bad) (bad) xor xlat in rex.R (bad) sub mull xor divl (bad) mov cmp mov rolb or and push in add rex.RX repz jne (bad) ss idivl xchg cs out sub pushq test and data16 adc add pop mov in test or adc shl incl rex.W mov stc stos gs cli pop xchg (bad) jo (bad) test (bad) (bad) retq in orl add idivl pop and rcr mov jae sub jae xor or mov push (bad) (bad) rex.RX bnd or pop cltd xchg hlt jo adc add xchg enterq rex.RXB jle or ror adc mov fbstp lods idivl js (bad) hlt sahf test rex.WXB int3 rex.W xchg out mov xchg jp fisttpl rex.RB jmp (bad) (bad) mov movabs stos cmp rex.XB rex.WXB or xchg rex.RXB rex.X (bad) (bad) (bad) mov out mov (bad) test xlat rex.WRXB mov mov cmpsl pop fistp push movsb repz pop mov movabs movabs es rol mov (bad) lea cwtl test (bad) addr32 nop repz (bad) pop rex.R imul mov mov retq insl rex.XB xor add add rex.WXB rex.RXB (bad) add jl jmpq js out rex.RXB rex.XB jo repz rex.WXB add mov mov (bad) and (bad) rex.WRB (bad) mov movabs xor (bad) (bad) bnd ror popfq mov sub nop hlt (bad) mov hlt lea mov sti cmc mov mov rex.WR mov sbb fs (bad) (bad) sub (bad) mov (bad) (bad) (bad) (bad) rex.RXB cwtl mov outsl addr32 jbe adc jo movsl mov out jne cwtl and imull outsb adc (bad) sbb iret (bad) cmp sub xchg outsb ja xchg cmp jp adc int3 jnp sahf clc iret mov sbb (bad) rolb je cmp xchg sub cli rclb cmp jp std adc enterq or mov cltd in mov and movabs (bad) (bad) jbe mov imul jp rex.XB imul pop and mov movsb or rex.RB rex.WRXB cmc leaveq mov mov lods sahf cmp scas adc clc mov xor xchg loop adc (bad) imul rcr sti and mov sub xchg xchg mov (bad) push mov rex.RXB repz enterq out js xor cmp adc shlb movsb mov jne js (bad) sti test adc out and (bad) jmpq adc icebp imul adc adc es sbb rex.WRB fs stos cwtl rex.RB adc test pop (bad) adc mov rex.WR mov in (bad) imul adc (bad) (bad) fcoml adc (bad) iret out rex.W mov shrb icebp fs cmpsl adc mov stos mov mov and (bad) and repz icebp jmpq adc mov rex mov pop adc add lret push push cld jp rex.XB outsb insb (bad) xchg adcl pop mov (bad) adc out sub lods xor rex.RXB jb xor mov mov cmp adc (bad) leaveq adc add movabs rcll scas mov cli cmp or retq push hlt xchg notl sbb pop jae scas pushfq mov (bad) rex.WX (bad) (bad) fdivs repz push rex.R popfq push mov (bad) or pushq cmpsb (bad) ss adc cmp movslq insb (bad) loop (bad) fldcw (bad) (bad) mov adc (bad) cmp test loopne adc cmp xor rex.WRB clc (bad) (bad) jnp rclb shrl adc gs (bad) pop adc mov test lods pop retq cmpsb lea cwtl rex.RB mov test mov imulb adc push in pop fcoml pop pop xchg (bad) je test adc mov (bad) jrcxz andl (bad) (bad) in int (bad) or xor sub imul (bad) cmp lahf mov (bad) push (bad) std (bad) mov adc sub loope stc sbb xchg (bad) movabs and rex.WR adc callq pop push (bad) push or clc xor lret rex.XB (bad) repnz mov push unpckhps mov mov (bad) mov outsl rex.B sbb popfq rex.WRXB pushfq adc mov sub fadds xor xchg and adcl add rex.WRX jmp loope or fs jae imul jle jne fidivl xchg (bad) imul cmpsb (bad) sbb scas xorl rex.X jl mov cmp test and push pop mov adc divb or decb int pop (bad) clc rcll push xchg adc xor pushq adc hlt sub mov rex leaveq adc (bad) and or sbb adc (bad) lret or cmc shrl ss rex.WX sbb movslq (bad) sarb (bad) jae mov out mov jle lea mov jbe loop xor adc cmp rorl (bad) sarb add rcl test mov cmpsb (bad) cmp adc iret mov adc cmpsl adc enterq adc sub gs decl sbb (bad) in jmp mov sbb jg xchg and xchg mov (bad) movsb stos gs retq leaveq mov and sub xchg (bad) add lret (bad) add xor xchg iret movsb fldt add mov adc mov movb adc ja (bad) adc push fwait adc pushfq (bad) loopne adc test stc adc rex.XB scas adc and movabs add cltd add test sbb (bad) adc (bad) sar rex.RB sahf cmp sub xchg outsl (bad) xor stos (bad) rex.WX mov mov leaveq rex.RX movabs rcll cs rex.WXB adc rex.RX es pushfq ds pop adc mov sti rcll in and in ss sbb adc sti movabs add mov and test loopne rex.XB adc movsb rex.WRX (bad) sbb fs rex.RX (bad) rex sub test or mov pop mov lret (bad) adc jne jg xchg rex.RXB adc xor xchg cld fstl stc movsb adc stos jmp sub rex add out adc pop fisttp int mov (bad) jno cmpsb sub rex pop (bad) push adc (bad) (bad) outsl rex.WX xor rex.X adc jp jmp clc (bad) lock rex.XB andb retq (bad) fsubrl shrb lret adc (bad) (bad) lods gs cwtl loopne leaveq rex.B (bad) adc sbb icebp sub rex.WRXB mov adc mov jb (bad) lret cli (bad) sbb fisubl jo mov gs (bad) (bad) mov add adc mov lods pop adc or add nop sub jo jno clc adc cwtl enterq push cwtl jns faddl xor and loope rex.WRB jbe or xchg fcoml cmp lahf mov adc add test and cwtl adc xor mov outsb pushfq jne adc ja retq jge pop rex.RB jmpq rex.RX rex.WRXB fldz adc push push icebp add (bad) cmp insl rex.WRXB fmul in iret movabs add xor flds adc xor (bad) mov cmp shrb adc retq out jb out pop hlt push cltd add xor or leaveq imul (bad) retq lods int3 mov jle cmpsl rex.WRX rex.X vmovss mov jmp and sbb sbb rex.WXB fadd testb adc (bad) (bad) fdivl adc mov adc lods in (bad) jle mov movabs test mov andl sbb (bad) rex.WX push adc pop add mov cltd xchg (bad) rcl (bad) clc adc (bad) (bad) jg adc cltd stos mov adc subl enterq ss rex.WX adc mov lock imul (bad) movslq movsl push add pop add (bad) (bad) movabs cltd movabs movabs stos push jne (bad) sub mov outsl xchg jb adc mov rclb pop mov xor jmp adc add jne je rex.WRX rex.WRX xchg (bad) xchg sahf adc movslq icebp nop adc mov and add frstor sub xchg outsl js adc rex.WRB mov imul (bad) fdivl jle (bad) or sub and adc test lret rex.RX (bad) clc cwtl xchg push (bad) mov sarb mov add (bad) cmpsl (bad) in fwait in sub sbb adc cmp (bad) xor xor xchg and nop jmpq (bad) xchg scas (bad) xlat jae sub movsb adc clc xchg jno rex.RB (bad) adc sti sub or or (bad) xchg cmp sbb lea std adc xlat and mov rex adc mov popfq cmp sbb repnz rex.RX rex.WRXB sbb adc add fisubl (bad) cmp cmpsl adc sub jmp cmp push pop sub adc (bad) mov insb jnp lea pushfq push movabs insb adc xlat adc push test jl vunpckhps insb xor lods adc lret mov loope cmp mov adc sbb fsubs pushq pop out mov scas nop or adc rex.B pop out adc add add (bad) (bad) adc jl mov jg es mov (bad) ss loopne and add mov loopne rex.B mov js jns pushq fs and jae (bad) fisubl pushfq sbb (bad) pop mov pushfq fsub cmp in adc vcvtss2si and repz movb pop (bad) in adc int (bad) xchg jae push pushfq adc out lock adc xchg insl jno adc xor rex.WB out rex sbb jo sbb (bad) mov (bad) rex.WB in adc outsl lahf sahf pop test adc movabs popfq sti repz rex.X nop or cmp (bad) mov iret rex.RX xchg xchg (bad) adc jrcxz mov fistl or ds clc (bad) rclb icebp test and movabs adc rex.B adc mov notb addr32 pushq jns leaveq mov lock adc fwait fs cmpsl push movabs cmpsb add jnp enterq jmp rex.RB icebp adc sbb mov cmp and push ja jmpq movslq outsb mov and adc and adc test lea in mov fadds or xchg jo fsubl adc sbb (bad) leaveq adc push lahf xchg rex.XB (bad) add outsl adc rex (bad) rex.RXB push xor ds (bad) adc scas jbe lret loopne adc rex.RB movslq xor fildll (bad) adc cmp cmp fdivrl cmc mov jge mov mov (bad) mov cltd adc xchg rex.X adc jge jne or adc test (bad) sub out rex.WXB and (bad) stos sti fsubrs mov jp cmp adc rex.WRB cmp clc icebp sbb pop jmp xor pushq outsl adc mov mov out rex.WRX stc int3 mov (bad) paddb adc sbb push rex.RXB (bad) jge (bad) cltd (bad) adc (bad) loope movsl adc notb (bad) ss adc test (bad) (bad) rex.RXB ficoml add lods std adc cld (bad) xor rex.WXB cmp adc xor imul xchg mov xchg js and cmp loope movslq or adc (bad) test (bad) adc jmp mov std testl rex.RXB mov pop and fdivrs push (bad) xchg rep push or stos push cmp sub adc fisubrl ss sbb adc cld in pop movabs (bad) sbb ja loope pushfq test out out (bad) (bad) xor rex.XB adc rex.RXB (bad) xor push (bad) (bad) cmpsb adc gs rcr stos mov mov test jmpq adc push jl fist adc in (bad) jns rex.X pop sub and xchg (bad) loop adc (bad) lods push (bad) xchg adc jle pop jl xorb lret rex.WRB fdivrs push rex.X fnstsw int3 retq push push iret adc sbbl sbb rex.WRB movabs xlat rcrb or (bad) add out (bad) movabs fsubl leaveq retq adc in movabs (bad) adc mov adc and jnp sub xchg rcr add rcrb (bad) test lock sub loopne test insb add mov and xor subl mov xchg retq sbb (bad) mov adc adc rorb adc imul mov lods xchg movslq fs adc shlb clc (bad) adc fbld es (bad) pushfq sub sub mov mov rex.XB (bad) cmp adc fist lret pushq pop pop adc ror lods callq push (bad) movabs loop test (bad) (bad) stc mov adc adc cld cmpb test jae outsl xchg jmp jb adc sbb adc sub add jrcxz adc cmpsb rex.WRXB (bad) mov push xchg fidivr mov xchg (bad) and sub mov cmp (bad) movsb (bad) or adc enterq movabs push and and adc mov mov addr32 je orb pop add (bad) movsb xchg sbb jle mov xor mov sub test or xchg (bad) push and cmc clc pop fsub leaveq sbb (bad) movslq cmp test (bad) xchg adc xor cmp sti pop xchg add cld mov (bad) or push (bad) sbb rex.RB or movabs stos cmp (bad) xchg add (bad) out testl jrcxz cltq mov repz pop (bad) or (bad) mov push or (bad) out xor push pushq movslq notl sbb rex.XB mov adc xor add fdivr iret xchg rex.W fsubs or (bad) repz jl cs lock imulb adc mov push or pushq xor clc cmp and (bad) jne mov rcrb retq cmc pop jo adc cmc sub outsl jns mov adc mov (bad) push scas fwait (bad) loopne test jle fmuls mov xor xchg rex.W sbb ja rex.WB cs fs rex.RXB cld lods xchg (bad) out fbld ja je mov xchg rex.WXB jg int3 mov sti xchg jle retq (bad) mov (bad) pop rex.WR cmp rex pop test cmp cmp xor out (bad) fwait outsb xor cmpsl ja movabs xor jne iret (bad) test cmpsb jne (bad) jne rex.RXB int3 (bad) adc sbb adc cli je rex.WRXB sub movslq xorl (bad) adc rex.XB rex.WRXB sahf mov out rex.WXB es test ss xchg rex.RXB xchg or push int pop sub fistl (bad) out adc jle sub jmpq callq clc add sub cmp shld lea mov bt cmc cmc cmp cmpb jmpq jmpq ja clc clc jmpq repz xchg gs out ja mov rolb and mov mov mov mov rex.WRXB sar and lods push cmpsl add jmpq (bad) (bad) (bad) (bad) (bad) cmp rex.WR movsl xor cs jrcxz jle or xor (bad) or add rex.RXB xlat rex.WRXB (bad) (bad) mov out cli (bad) lcall (bad) in xchg pushq out jae lock cmp clc stos callq pop es rex.WRX xor cmpsl ds movsl test cs rex.WR in lret xor test rex.WXB repz (bad) and and push ss sbb test loope addr32 fsts (bad) fbstp scas jg xchg cmp cmp cltd cmpsb fisub es sub shl mov not add shr xor sub or mov cmp cmc bt test jmpq jmpq je movsbq shl not shrd push lea bsf mov sar mov not sub bswap movsbw jmpq or jmpq or sbb insb rex.WXB mov (bad) test iret (bad) (bad) (bad) and or sti ficomp pop (bad) decl jle vmovaps mov mov rcrb cmp test lret (bad) mov and (bad) (bad) mov lods gs mov fldcw xchg sub pop jp outsb rorb mov rex.WXB add pushq icebp mov lods sub ss or cmp (bad) cmp fisttpll movslq adc (bad) xchg divl scas (bad) (bad) cmpsb test in xchg push add and xor and mov xchg (bad) jg jle sbb pop cmp nop add lret movabs fistp xchg data16 mov xchg repz push (bad) jne mov pop add cltd xchg jbe xor (bad) jmpq (bad) (bad) lcall and (bad) sub (bad) cmpsl push rol sub jne callq (bad) cwtl enterq jbe or enterq rclb jmp clc js testb movabs push out js cld (bad) lcall rex.RB xor (bad) pushq rex.XB sahf cmp lods (bad) imul rex.WXB loop lock xchg ss jl mov out lahf (bad) pop sbb or xor leaveq rex.X jle jle xor (bad) hlt imul (bad) retq add std jge imul adc shll vminpd and and mov sub and (bad) jmpq movabs leaveq xor (bad) retq adc scas in fadds repnz es pop jl cmp cli rex.RXB rex.WR jnp std xor test xchg insb std jns mov adc std jae mov mov cltd fild repnz test add jns loope ds rex.X movslq pop fildl shr jae (bad) clc add mov rex.WRX (bad) movsl std pop push sbb subl pop (bad) fwait jge xchg test pop sbb cmpsl push out int mov (bad) lods cld mov xchg sti in pop cmp pop movabs scas mov and cmpsb mov sub cmp out movabs rex xchg mov and setge add movzbq mov stc stc bt cmpb jmpq callq jp add ror add mov test jmpq repz sbb (bad) (bad) outsb (bad) fist (bad) lods adc fmuls (bad) jp rex.WB rex.B adcl sbb lahf xchg sbb pushq cmp mov sub fwait xor (bad) (bad) sbb (bad) int3 callq (bad) (bad) fbstp lret sbb push adc (bad) (bad) mov (bad) movsl test cmp sahf push rex.XB add mov adc mov (bad) rcrb add mov gs fdivl lcall loop (bad) cltd stc cli fldenv retq cmp out pushq or (bad) sbb lods mov pop pop scas out jne sbb insl jp (bad) mov movslq add rex.WB icebp andl pop rex.RXB or mov rex.WX xor cs mov mov clc callq xor xlat push mov jb or mov movsb add stc cmc cmp bswap lea bswap movzbw pop jmpq rex.WRX cs retq stos mov (bad) imul cmp insb adc mov (bad) cmpsl xor or (bad) cmpsl dec sbb lea jne sub mov jmpq jno (bad) (bad) (bad) (bad) jg mov rex.RX mov outsb (bad) xor rorl loop (bad) (bad) (bad) (bad) rex.WR (bad) sti (bad) lcall cmp push mov mov cmp cmpsl rex.WR (bad) xchg (bad) or addr32 jo sbb jo test in stos andl sbbl xchg stos cmp pop add xchg push movabs (bad) out (bad) and xor sbb push sahf sbb add jp lahf out cmp stos and movabs jb add movq pop (bad) or clc add xor not mov bt cmc test jmpq jmpq cmp movzwl rcr btc btr add mov stc cmc bt add bt test mov stc cmp clc test jmpq rex.WRXB fsubp add (bad) fidivr int mov mov mov (bad) (bad) jb mov jmp pushq cmpb sub xor xchg mov movabs fwait fs roll jmpq xor (bad) mov or lret (bad) (bad) iret and fwait je (bad) in movsb and rex.WX fs rex.WB (bad) sub out pop movl cli sbb clc mov push stos mov scas push std xor mov adc imul fldt in movsb adc (bad) (bad) in mov test xor xor (bad) (bad) out jp cli cmpsb (bad) and xor rex.WRXB rex.RB rex.WX jp xchg rex.WRXB rex.RX cli cltd or or (bad) fs mov or movabs xor jne stos xchg xor cmpsb nop mov (bad) xor (bad) xor cmpsb rex.WX lea pop xor movabs sub lea repnz mov movabs push sti sub movsl rex.XB add jrcxz cmpsb xor movsl js xor movsb add jno xchg add cs rex.R pop jae int3 sub rex.WR stos imul out mov sbb sub sub sub sub sbb movabs mov rex.WRB jae int cmpsl movsl insl mov insl in cmp mov sub (bad) test retq in lret add (bad) in movsl push enterq xchg xor cld (bad) or rex.XB add push xchg mov mov notb (bad) scas out cli sub sahf mov cmpsl or repz jno jmp pushq xchg push mov (bad) jmpq divl xchg int rex.RXB (bad) lcall sbb (bad) rcll lahf cld (bad) (bad) mov test jge retq xchg retq movabs lods sub movabs pushfq rex.WX (bad) jo push rex.WRX in movabs add out fldt and mov loopne std repnz loop (bad) sbb sub and push rex.X cltd push lahf cs sbb test jo adc je movslq rol fcomi rex.X jbe pop xchg mov f2xm1 and jo xlat (bad) std (bad) (bad) (bad) and movb clc js out (bad) xor ss jle (bad) lcall or (bad) lcall int cli rorb pop cmp adc add and (bad) out leaveq (bad) xlat scas mov lods fidiv sbb or xor xlat sub mov sub cli mov (bad) outsl (bad) and rex.W out mov icebp (bad) cmp push pop jmpq mov pop cmp lret mov rex.W xchg pop rex.WXB pop icebp (bad) divl rex.WB jg cmc in sub ds pop movabs sub mov or adc mov sar rex.W rex.WXB cli adc cmp outsl pop in rex.XB mov (bad) in adc movsbl lea push shll insb sub (bad) (bad) fwait lret lods addr32 ja (bad) lcall cwtl sbb push add ss rex.R (bad) (bad) (bad) mov jnp sti (bad) lcall in sarb mov (bad) outsl (bad) (bad) jne jne (bad) je retq sub mov scas out xchg cmp pushq lock (bad) adc hlt cmpsb leaveq push jrcxz outsb push mov and shrl cmpl fsubl fisubr cmc imul sbb xor mov mov lods rex.WR ficoml mov cmp push xchg pop lea enterq in pushq and rex.B sbb jmpq jmpq out and rex.WB sbb sbb rex.R imul xor imul test movabs lock (bad) rex.WR fs out nop cld (bad) lcall xor (bad) repnz push stc rex rex.WRX imul movabs mov sbb pop cmp jmpq insb mov cmpsq ja sub (bad) (bad) (bad) jns jrcxz lret loop data16 insb rex.WXB xchg int and push mov es mov xchg push lods jnp fwait sub mulb sti jmp loope or pop xchg fadd je and pop mov xor add rex.WRXB in mov fsts (bad) push or sbb push sti jae rcrl fbstp movabs add jle add out out sbb (bad) mov retq callq pop jbe add (bad) (bad) (bad) lcall fldl2e jno sbb jae mov sbbb sbb rex mov pop (bad) out enterq enterq xchg cmovp std (bad) (bad) fistp sti (bad) lcall (bad) (bad) divb (bad) insl xchg fldenv mov cmp jle jne and cli xor retq jae jmp sub mov rex.X scas (bad) xchg test (bad) scas stos ss out mov add sbb xchg rex.WB (bad) (bad) jle (bad) sub jae mov ds repz sarb lea xchg push mov sbb fistpll mov ss jge rex.WXB xchg loop rex rex.RX sub (bad) jae push sbb in rex.RB movb and sub add (bad) (bad) lcall scas cld (bad) (bad) mov push std push xor mov pushq or cltd rex.R sbb (bad) mov ja mov mov rex.WRB rex.RX cld (bad) (bad) fist mov and rex.X ficom mov cld in je pop mov (bad) mov mov and loopne (bad) or jbe add jmpq jp push mov js xor test mov sub repnz rex.W std and and xchg retq or movabs test pop retq (bad) (bad) (bad) jg cmpsb jge (bad) jg out data16 in movabs enterq movsl cld rex.WRXB (bad) lcall (bad) mov lcall out cwtl lock ds mov adc vpaddsb movabs adc (bad) cmpsl test rorl xor popfq lock cmpsb rep mov mov sbb fmuls cmp or icebp insl repz movabs repnz xor sbb xchg lods fs cltd cmpsb jbe rex.WXB jo cs jl mov mov jno (bad) push pushq jmpq jmpq cmc ror jl dec bt cmp cmp jmpq (bad) jle js sbb push add (bad) stos cmp mov adc pop sub stc addl movabs rex.RX cmc sbb xor pxor leaveq (bad) test mov clc push (bad) (bad) (bad) pushq rex.RXB rolb rex.WRXB add or cmp mov stos sub insb scas jle (bad) iret sbb add push xor sub stc sub or test movabs fisttp icebp mov (bad) xor push imul (bad) rex add mov imul (bad) and sbb ss mov or add add sbb (bad) push mov cwtl (bad) cmp test in fcomp mov pop (bad) insb mov stos rex.XB fs movsl jg mov adc lock mov sub rex.RX cmp repnz enterq movabs (bad) (bad) push jmp js out (bad) mov (bad) add (bad) in sbb adc addr32 xor rcrl bswap mov movsbw mov pop jmpq jmpq jmpq and xchg sbb add mov in (bad) rex.WB push insb rex.WXB pop (bad) outsl loopne test cmpsl rex.RX cmpsb stos mov rex out (bad) (bad) std mov mov movabs rex.WRB retq rex.XB fnstenv sub (bad) pop test jae imul fadd cs sbb adc push enterq (bad) scas rex.RXB bnd xchg sarb and sbb stos retq cmp push cld fildl mov or fsub sti or (bad) (bad) lcall jmpq (bad) jns idivl cs or adc rolb jbe xor and add mov or fstpl and (bad) lret add mov jp (bad) gs sti xor jmpq xchg movzwl rcrb fsubrl jns fist mov mov push cld jns (bad) xchg lcall (bad) out fmulp sbb mov push mov clc movntq pop xchg xor adc sub (bad) jg (bad) cmc add (bad) movsbl add out xchg mov pop mov in jmpq (bad) mull jae (bad) adc push add insl (bad) (bad) jnp xchg sub (bad) mov flds jns in test (bad) retq (bad) add imulb popfq pop xchg or jp jo (bad) movsb mov movabs movabs rex.R sbb rcll lahf movsb rex.R (bad) in cmp mov rcll rex.WRXB cmc rex.WR adc test insb mov (bad) stos xchg (bad) mov setp lea jmpq sbb sbb subl or push (bad) (bad) xchg mov mov (bad) jo shrl movabs ljmp and push out pop jae xchg rex.WRX (bad) (bad) jmpq rex.WRXB pushq xchg ds xor out fldl or (bad) (bad) pushq jle jno sti (bad) lcall lahf data16 (bad) or movabs (bad) and (bad) cmp jge and adc xor ss icebp movl stc mov repz add push mov cmp test add repnz add pop fisttp jo pop lea pushq mov clc cmp data16 out xchg stos imul (bad) imul mov xchg mov sbb retq add rcrb xchg xor orl mov xchg mov outsl (bad) (bad) xor sbb fucomip push sar jo fstl (bad) leaveq ficomp mov lods sbb in (bad) pop js movsl adc jne outsb and adc cwtl ss nop cmp (bad) (bad) (bad) lcall imul lcall rolb out cmpsl rex.RX mov je (bad) mov fidivr mov cli pop imull jae pop stc ss hlt cmp (bad) jg gs adc jmpq rex.RB xor iret rex.WRXB mov rex.XB (bad) es loop sub rcrl data16 enterq ss movsb in ja (bad) xor adc movabs sub adc mov lret sub sub sub xor or cltd loope pop add loope pop (bad) (bad) (bad) fist lret add pop jmpq rex.X stos cld (bad) lcall sbb add (bad) lcall adc push insb (bad) rex.WRXB (bad) mov loop rex.RXB popfq jge sub (bad) int rex.WR rex.RXB adc loope cmpsb data16 add and cmp xchg adc jo outsb (bad) fiadd int mov jp repnz cli ja out lods sbb in imul sti outsb (bad) (bad) and gs cmpsl (bad) sbb (bad) xchg lods in xchg cmp xor adc (bad) (bad) movabs (bad) cmc jo (bad) (bad) (bad) decl xor add xor roll sti add lret add (bad) stc and clc add jmpq push bt cmc add mov or mov mov mov jmpq (bad) test sbb (bad) mov mov xchg rex.WB fucomip xchg xor orl (bad) push jae add ss sub lods xor xor (bad) jg sbb rex.WRB js (bad) (bad) (bad) outsb rex.WRB (bad) mov sub lock jb hlt xchg retq movabs notb mov fwait jp enterq cmp add sti adc mov rex.WRB mov es (bad) pushq xlat rclb cmp test mov push mov test adc (bad) pushq mov jle rex.WR add (bad) int hlt jl mov add xchg lods pop test mov rex.WRX pushq and pushq shll cmpsl push jbe rex.R (bad) xlat testb int adc add jns stos sub test ss mov movslq mov rorl iret (bad) and (bad) (bad) lcall rex.WX push incl (bad) jae xchg cmp mov rex.X (bad) (bad) fbld push (bad) cwtl stos sti (bad) (bad) mov loop ljmp cmp outsl jle and fild test mov lods jp js (bad) data16 (bad) sub cmpl divb cmp cwtl test xchg jl outsl sahf rcr jb icebp fwait cmp movsl sub push mov (bad) sub xchg cmp sub mov cli xor xchg bt imul test clc stc clc add jmpq hlt or fs sbb fild cmpsb gs sub cld add retq or movabs scas pop mov rex.XB adc rex.WX (bad) xor rex.WX repnz mov mov repz adc (bad) lcall out movsl ss jp mov cmc rex.RB (bad) mov (bad) mov and retq jmpq cli rex.WRB (bad) frstor (bad) adc (bad) add ss cmp scas adc jno xor pop andl mov rex.RB mov xchg cli (bad) lcall xchg je (bad) jo mov mov rex.WX data16 or mov fidivrl sbb insl in gs lahf rex.WRB mov stos (bad) mov sub rex push incb add rex.RX in mov lret mov xchg sbb test jle rex.R mov sbb add sahf (bad) (bad) jbe and jae mov lret xchg rex.WX enterq (bad) std test movabs jmpq pop ds mov (bad) (bad) ficoml rorl rex.WRXB ds rex.R mov mov jg xchg rex.RXB movl mov xlat rex.XB in xchg sbb imul mov fucomip mov lahf cmp adc mov adc cld (bad) (bad) jmpq sti (bad) (bad) (bad) lea (bad) sub mov mov outsl js rex.WXB pop fstpt cmp xchg xor ss scas jne loope pop adc (bad) mov xchg rex.XB stos (bad) out subb push icebp popq (bad) cmpsb (bad) rex.WRB rex.WXB rex.XB xchg push fadd or fsubl pop iret sbb lret (bad) (bad) sbb rex.WR sbb insb es and movabs add (bad) pushfq (bad) (bad) jmpq ja clc clc add jmpq jmpq jmpq jmpq rcr test test mov ror sub seto lea jmpq movsb jmpq xor rex.WRXB std add insl adc add shll adc sti adc callq (bad) scas test (bad) adc pop sbb mov pop (bad) rex.RX in add std (bad) (bad) mov (bad) push (bad) test and mov cld (bad) lcall leaveq cli (bad) lcall mov pushfq movslq movabs test push (bad) nop js adc jo (bad) pop callq (bad) sub and jnp (bad) sbb or xchg xchg jg jmpq mov (bad) in (bad) xor andl fildll (bad) mov lret imul (bad) xchg rex.XB fldl imul clc imul jmpq ja stc neg rcr add rcr mov and add bt xchg or mov shl bt not adc mov bt bt clc push test mov btr mov test stc clc sub jmpq test test test cmp retq or btc mov rcr mov jmpq pop xchg shrb sbb (bad) out mov xchg cmp clc fstpt adc in jne stos mov adc (bad) leaveq add cmp cmp (bad) gs mov jge push mov xor fwait lock lea (bad) popfq sub out pop ja es rex.RX (bad) lcall (bad) sti (bad) lcall mov pop xchg xchg pop sub xchg mov or push imul mov jge push cltd jg sahf sbb and xchg scas (bad) jae (bad) icebp (bad) xchg addl rex.WR or xchg (bad) sbb jmpq shlb sarb rex.RB popfq push out push xor idivb rex.XB and fbld scas jl push or adc mov (bad) cmp add mov stos je decl popfq rorl xchg setb jmpq out vmwrite sbb push hlt outsl (bad) (bad) (bad) mov lret jnp (bad) cmc lods sub jmp (bad) rex.RXB rex.WRXB or adc (bad) jb jno cmp (bad) out jb xchg test js retq sbb (bad) in rex.W std (bad) (bad) fildll (bad) callq rex.WRB fwait sub loope test cld (bad) (bad) mov callq (bad) roll test fldl sub rex.R cmp or icebp sbb (bad) mov pushfq fs add movslq (bad) jne rex.X rex.RX (bad) push mov (bad) scas js mov cmpsb jle pmaxsw scas (bad) xchg rex.WXB rex.X adc (bad) add retq jg int3 rex.R (bad) fidivrl sub and test jbe add test fiadd (bad) test sub stc cmp jmpq jmpq jmpq jne ror sar clc bts mov cmp stc stc or jmpq movabs jge enterq es callq (bad) jne and loopne mov enterq xor mov jae loopne sarb loop loope (bad) and rex.X (bad) (bad) (bad) mov jno callq rex.X and (bad) lcall push pop (bad) pop xor (bad) lcall rcrl xor loop sub pop std rex.RB mov test out (bad) iret (bad) add mov push lret rex.WRX rex.XB subl mov (bad) fidiv jl retq pop cs je sarb rex.X push cmp add xchg sbb stc lock cmpsb sbb cmc or js add fstps (bad) decl rex.WX movsl jg (bad) (bad) lods adc cs scas clc mov push subl (bad) push jae movzbl and bsf mov bsf cmc sub shld mov movzbq mov bt jmpq fsubrl fistpl pushq (bad) (bad) mov rex.WRB in mov rex.RB retq imul mov roll adc rex.WRX (bad) (bad) mov andl adc cmp cltd jmpq callq (bad) ffreep movl (bad) out (bad) cli xchg cltd frstor (bad) movsl out mov sbb enterq cs mov push jb fs (bad) sbb movsb rex.B test cmp (bad) idiv stos cli xorl (bad) add (bad) clc imul hlt xchg jbe rex.R rex.WR (bad) (bad) sbbl loopne and in lret in imul insb mov ds sub movabs and cmp (bad) (bad) fsubl rcrl (bad) in retq test cmp add jmpq and xchg sti fistpl fadds movabs xchg (bad) repz jp lock and movabs adc jmpq mov sbb sti out int in mov repnz and movsb push (bad) (bad) test or mov mov insl retq (bad) shr fs xchg jo (bad) and lods rex.WXB stc mov and (bad) lods outsl jrcxz rex.WRB add icebp rex.WRX stos add cwtl and add cmp (bad) add and jmpq xchg (bad) or rex.WR stos xchg lret sahf negb (bad) jl repnz repnz mov xlat jae (bad) imul test test add rex.WX mov rcrb xor jo (bad) (bad) rex.WXB test rex.X enterq cli xor rex.WXB mov mov rex.W cmpsl and sbb and movsl mov rex.WB cmpsl (bad) mov movsb fisubrl in orb pop insl shr rex.RXB cmpsb cmp (bad) rex.RXB int rex.RX rex.RX movabs add (bad) faddl rcrl outsb insb add push shll rex.RX gs and mov repnz (bad) add rex.RX movsb cwtl xor xchg add lods in sbb xor (bad) fs adc movabs rex.RB movabs es retq cltd out lret rex.R movabs jb (bad) sbb cmp test movabs iret jnp rolb mov cmpsb rex.X adc sub mov rcl rclb icebp xchg push push and (bad) and test (bad) (bad) add pop cwtl rex.WX jb je add mov (bad) pop cmp xchg movabs mov (bad) (bad) lahf leaveq fldcw xchg movabs rex.X (bad) (bad) nop rex.X adc xchg and cld xchg mov rex.B sub mov jge adc nop push mov rex.RXB mov rex.WX (bad) lcall rex.WRX in mov in sub (bad) mov jg pushfq jnp movslq sbb iret adc rex.WRX lret lret icebp pushfq in movslq cmp (bad) (bad) (bad) cmc sub cltd jno cwtl or mov sahf data16 (bad) adc lret sbb out notb fdivl sbb movslq test mov add cmp or jmpq push mov rex.RB and push js (bad) mov sub add clc fldt test add scas out cmpl mov sbb xor mov cmp rex.W (bad) add sbb jge xchg movslq cmp lahf (bad) scas jge jb icebp rex.WB insb rcll rex (bad) sub jns outsl (bad) rex.RX jbe insl jno (bad) (bad) mov mov leaveq (bad) cmp out clts fidivrl and (bad) xor je mov push mov xor retq xlat cmp xor add cmp jrcxz stos shrl cli cmp ds es rex.RB leaveq rex.WB cld pushfq adc mov and adc rex.W jbe std in movslq rex.RXB xor (bad) xor cwtl outsl movsl rex.XB hlt lods roll int int3 (bad) (bad) mov (bad) (bad) (bad) jg xchg retq movabs jg fcoml cmpsl rex.WRB (bad) (bad) mov jl out scas test je movl cmpsb in and mov cmpsl movsl sbb mov (bad) (bad) xor rex.R sub xchg xchg fisttpll mov movntq je push rex.W loop stc jmpq ljmp popfq rex.WXB cli add out cmp fistl pop popq in mov imul test jmpq jbe sub mov sub bts lea mov shrd mov data16 testl mov (bad) sbb shr jp shld xadd mov sub sar bsf add not jmpq jmpq xor nop cli loopne mov rex.WR rex.RXB clc rex.W push (bad) mov and lods in in mov test (bad) fidivr cmp xor adc (bad) (bad) mov xchg adc mov add and adc pop cmp (bad) je rex.B (bad) retq rex.RX sbb (bad) xchg shll xchg pop mov add (bad) (bad) (bad) iret sbb cmp movabs je mov push add mov sbb sbb clc xlat (bad) movsl cmc adc (bad) rex.WRXB std or adc mov mov xchg cld outsb xor sub cs (bad) movabs cmp lret cmp and lret cmp ja (bad) pushq outsl (bad) lods stos lret je mov or retq jrcxz rex.W and outsb decb sub push lret rex.W (bad) cmpsl xchg test insl pop cmp add xchg mov mov sti loopne or (bad) (bad) fcomip cmp wbinvd (bad) (bad) (bad) (bad) jl leaveq jbe cmp cs sub and xor push or add stc rex.WB or retq (bad) jp cltd adc rex.RXB repnz lock sbb jmp and jmpq cwtl adc jle jnp sbb (bad) ds adc pop add sbb pop mov cmp repz sahf sbb jge adc or add adc cmc stc or jmpq stos jmpq sti xor jrcxz mov rcrb rex.WRX rcll idivl cmc add ds jp js scas cmpsb (bad) mov scas xor stc sub (bad) test ss test in (bad) (bad) (bad) jle push add push (bad) mov or jo scas data16 (bad) lcall and loop mov orl movabs and sub (bad) movabs addb (bad) outsl ja (bad) ljmp rex add push xchg sbb rcl sub test jne test rex.WB or (bad) pop hlt mov enterq rex.W addr32 xchg adc mov rex.XB ss rex.B enterq push xchg clc movabs (bad) mov (bad) divl fdivrl test lea jmpq lea movsbw lea jmpq callq bts sar inc add rol mov test cmc clc cmc cmpb jmpq cmp sbb sub cmp (bad) pop callq sti xchg (bad) cs (bad) mov xchg add rcrl xor xchg add int xchg (bad) jp sbb int3 ja xor rex callq callq pushfq (bad) pushq (bad) (bad) (bad) xchg popfq in in push in rex.WRB jmpq mov scas cmp faddl (bad) jne (bad) lock (bad) (bad) (bad) out cmp idiv clc scas int3 test (bad) lods in (bad) sbb mov (bad) jmpq leaveq (bad) shlb (bad) (bad) cmp iret test lock xchg int3 jp (bad) (bad) or rex.WX (bad) lret xor cmp (bad) out cmp in (bad) mov sbb scas jl jp sub pop ffreep (bad) mov (bad) cmp or mov cmpsl (bad) cmpsl rex.WRXB (bad) scas iret xlat (bad) cld xchg push add mov mov cmp pop enterq movsl test cmp xor push movabs in sbb in xor (bad) cwtl adc and sub cltd (bad) enterq std pop sub enterq (bad) and (bad) cwtl or (bad) (bad) (bad) sti insb adc pop mov mov cmovbe lock lods add adc push mov movsb jle adc (bad) (bad) fcomip mov (bad) lcall jae jne repz fistp (bad) insl rex.WR xor invd jge sti jae rex.RX data16 fs (bad) jrcxz sbb rorb cmp pop mov sbb (bad) mov pushq jbe sub or (bad) (bad) rex xchg add jb push jg xor (bad) mov (bad) out mov (bad) mov sub rex.WX mov movsb movslq sbb rex.X mov adc (bad) test add out pushfq mov (bad) lcall jle pushfq mov (bad) and test popfq fstpl (bad) jle sbb push sti (bad) lcall jmp or lret outsl movabs gs sub sbb (bad) (bad) test (bad) push xchg (bad) pop (bad) mov cmp (bad) (bad) or rex.WB (bad) add retq mov jb movabs loope shlb mov insl popfq rex.WXB or sub (bad) sub sbb scas ss cmp jl rex.WX (bad) imul jns jne movzbw neg lea shrd xor adc sub add lea mov rcr not cmc neg add neg not rcr mov jmpq in add mov (bad) mov xchg icebp xlat (bad) (bad) and in fwait (bad) xor imul scas (bad) (bad) cmp rex.WRX repnz ds add fmull int3 sti stos mov rex.X rex.WX rex.WRB stos movslq and (bad) cmc or cmp (bad) (bad) mov push xchg fcmove adc xchg push test movabs je (bad) adc pushfq or push shl adc sub sbb xor mov mov fdivrs jg int mov notb std or repnz xor stos and fiaddl adc lea mov scas (bad) sbb repz (bad) jmpq (bad) imul jge data16 (bad) (bad) lcall add jae (bad) (bad) mov movabs jae (bad) xchg mov fs cmp cmovno enterq cmpsl rex.RXB (bad) shlb or pop mov cld xor stc rex.B fsts sahf rex.WR sbb (bad) fsubrs xor (bad) mov (bad) pop icebp pushfq or (bad) je mov pop callq insb je rcrl ds repnz jmpq je jne neg jge sub not inc bsr mov clc add bt mov test test jmpq hlt mov loop (bad) rorl (bad) movl lods sbb and and jg rex.RX fiaddl jae adc repz mov mov rex.WB retq jmpq pop test cs mov sub push jmp (bad) (bad) (bad) callq adc adcb or add lock jo fildl cmp xchg fisttp enterq xchg xchg hlt sub movsb push mov js mov (bad) lcall jrcxz (bad) lcall outsl push xchg rex.WRX xor add rex.RX and and out data16 loopne (bad) rex.RB rex.XB mov (bad) and or push scas (bad) in pop movsb xor (bad) mov xor lret (bad) pop hlt rcll outsb loop mov (bad) movsb rex.WR in and push jp xor push rex.RB pop mov cmp (bad) in jrcxz rex.WX rex.WRB pushfq (bad) jp in movslq mov or pushq adc nop (bad) movslq (bad) (bad) mov sbb pop jno addr32 ss movabs add lret mov loopne out lock cld jl mov (bad) lcall (bad) xchg push (bad) idiv (bad) lcall (bad) in pop xchg sti jae xor sub pop rex.RXB rex.WR cmp test xchg adc ljmp and jg adc rex.RXB xchg sti pushfq jnp rex.WR jae xchg idivl push (bad) xchg or mov (bad) repnz loopne and push xchg xor je rcrb cwtl rex.WRX mov adc (bad) (bad) addr32 es add imul rex.RXB scas pushq in test cmp jmpq jmpq iret jg jle sbb pop cmp (bad) je fldt imul adc mov fcoml (bad) out test adc fwait cmp (bad) xor cwtl rex.WRX es xchg out out int fisub jmp rex.W (bad) (bad) (bad) (bad) rex.R clc sbb cli xchg mov xchg adc leaveq (bad) (bad) sbb rex.WRXB (bad) (bad) mov adc push sub pushq xchg add (bad) lcall mov rcrl leaveq (bad) out ja cmp icebp xor pop lods sbb cmp and (bad) (bad) (bad) fdivrl enterq movsl fidivl enterq or xlat lock inc rex.WRB mov movsbl fstps jl push and rex.RB sahf in pushfq sub mov add fsubr (bad) (bad) (bad) jl sub rex.WXB jae (bad) jb add xchg (bad) mov scas rex.WRB fs sbb (bad) (bad) jg mov lahf pop imul fsubs std (bad) (bad) jg rex.WRXB sti (bad) lcall sbb mov scas cmp movabs fs cli push pushq jnp js and jp loope add or icebp rex.RX enterq xchg mov or rcrb (bad) int imul lods shlb (bad) jo jne xchg sub cmc xor xor scas je setl xchg lea xchg mov lea movsbl lea xchg mov mov jmpq fistp xor in sbb jnp push rex.R sbb out cmp xchg add (bad) callq sub cli adc in xchg xor movabs cli adc fisttp lods sbb jmp stc test (bad) (bad) (bad) jg xor in fs rcr std (bad) lcall jne or and mov add cwtl rex.XB xchg cmp test mov sbb outsb (bad) callq mov sbbl rex.RXB std jle icebp mov adc leaveq sbb xchg mov cmc enterq and retq retq xchg cwtl xor popfq rex.RB jle cmpb loope pop (bad) (bad) pop (bad) shlb and jg and xlat seta std in rex.WRB mov repz pushq sub cmp rex.R rex.WR jns jbe (bad) test jbe jge imul jmpq stos sti cwtl add sbb fistpll rex.WR stc adc (bad) out (bad) jp std or imul rex.WRX jrcxz jbe mov sbb cmp or roll mov push cmp enterq callq xorl and (bad) (bad) mov (bad) (bad) (bad) xchg push push or adcb pop mov (bad) movslq (bad) cli clc cwtl xor std (bad) (bad) fist mov pop ja retq rex.XB rex.WB ss mov sbb mov imul lods shlb adc test in sub adc lahf jl (bad) je add xor shrb out sbb insb or mov push in out mov sub mov and adc rex.WXB out (bad) hlt xchg pushq pop std lods fnsave xor mov adc add fadds add (bad) (bad) jg (bad) test jb (bad) cmp (bad) mov fsqrt (bad) lcall test rcl xlat orl mov rex.X mov in (bad) cmp mov out xor or or jbe pop mov iret xchg adc xchg (bad) sar mov cmp (bad) loope (bad) divl xchg in repz xchg xor sbb out cmp or add (bad) cmc mov adc stc jmpq (bad) and rex.X jne jp rcll mov jne lret (bad) pop sub sbb (bad) cmpsl xor out rex.RX stc faddl (bad) push jbe mov mov jo xchg cs out (bad) jbe int3 sbb jl (bad) (bad) fildll adc js push bndldx sbb xchg std std push or out lea repz adc cld (bad) lcall je movabs sbb int3 mov (bad) lahf jg push idiv movsl jg (bad) rorl (bad) sub add rcll and imul rcr xchg push jmp and mov sub jb callq add or sbb divb mov rex outsl ja fistp xchg (bad) stc bt imul clc jbe add jmpq xchg jne jg sbb pop cmp adc rex.XB cmp sahf sub int sub or sar mov or repnz cltd add and or sub adc in jo es roll sbb (bad) (bad) (bad) lcall add rcrb and adc cld (bad) (bad) mov ss (bad) lcall loope xchg (bad) sbb jle popfq test (bad) rex.WR shlb addr32 lock (bad) fisubr (bad) push rex.WRXB xchg or mov mov out es jmpq cmc xor gs retq rex.X stos mov jo or adc add loop rex.WRB rex.W adc cmp or test std icebp sbb fidivrl (bad) xchg xchg xor vdivpd (bad) jo (bad) out mov mov and adc (bad) lahf cs sub sub loope (bad) xchg rex.WRB rex.WXB sbb push xchg (bad) (bad) lcall gs (bad) pushq mov cld (bad) lcall (bad) (bad) lcall movabs sbb pop add cmc retq xor fs sub (bad) xchg rex.WRB fwait imul addb mov add ds mov jno rex.RXB movsl rex.RB (bad) iret lahf cmp mov js out scas sbb sbb pop (bad) xchg test (bad) rex.WRXB (bad) rorl xor push xchg pop push fmuls or (bad) mov push xchg clc movabs shll pop xchg sub loopne (bad) repz hlt rcll mov lock jg movb xchg pop (bad) in jo pushq out pop movslq movabs sbb repnz xor mov fs iret addr32 fcomps push mov or imul cltd xchg add (bad) (bad) xor divb and pop pushq xor jg enterq push (bad) in and lahf jle out cs (bad) cmp (bad) xchg mov adc sub cli (bad) sbb (bad) jg jbe shrl sub stc loope rcrl scas rex.WR repnz (bad) jmp repz callq push int imul xor xchg xcrypt-ecb cmpsl mov add jne lea frstor loopne (bad) (bad) out jl (bad) movabs cmpl mov (bad) hlt sbb or rex.WXB rex.WRX ds mov (bad) lods (bad) movl pushfq sub sub (bad) push jns jmpq cli adc popfq push hlt push cmp xchg rex.WRX fdivr (bad) lcall ja scas cmpsl rex.RXB in test xchg roll shlb pushq push retq int adc jp movsb in (bad) std (bad) (bad) ljmp cmc jae sti (bad) (bad) mov pop jle (bad) stos mov shl jo xchg rex.WRX es rex.WR or or (bad) repnz cmp (bad) iret xlat (bad) in mov imul icebp (bad) (bad) (bad) fisttp sub mov loop mov (bad) ss xchg jb jmpq sbb add (bad) (bad) incl (bad) mov clc clc sub cmc clc pushq cmp test cmp jmpq jmpq jmpq add rex.RXB gs outsl fs gs outsb fs add mov (bad) and sub (bad) mov fwait xor and add stos sar jb push (bad) decl movb rex.R imul test mov pop and (bad) (bad) fist cmc popfq rex.WXB push pop movslq shrl pushq (bad) pop push adc (bad) out (bad) rex.XB lcall movslq nop outsl (bad) (bad) rclb rex.WX pushfq test cmp rex.WRB (bad) mov mov loope mov outsl xlat iret (bad) (bad) xchg push (bad) js test (bad) xchg int3 add (bad) imul or (bad) jo sub jno (bad) (bad) cli cltd shll jle sbb repz out jb mov cmpsb pop (bad) and jg lods ja (bad) mov cmp sbb movabs bswap pop jmpq pop mov mov xor pop cmp push lahf cli mov xor xor push (bad) addr32 (bad) adc pop and out xor rex.RB (bad) mov cld (bad) lcall movabs mull mov add (bad) (bad) xchg andl cmp fisub push xchg lret or (bad) movsl sub jg sahf (bad) jge jo (bad) popfq xor mov jne rex.WRB mov (bad) mov mov mov stos andb lods xchg push xchg loop pushq loopne (bad) cmpsb push xchg pop mov loopne mov repz callq mov xchg (bad) xchg jae (bad) jmpq ja pushfq (bad) negl jrcxz (bad) imul mov jle rex.WRB mov rex.RXB in rex.WRB emms push and movabs pop cmp add (bad) sbb (bad) (bad) (bad) jmpq cmp mov xchg (bad) (bad) mov xchg xlat adc (bad) in repz (bad) (bad) mov xor (bad) lcall lret xchg (bad) sar adc jbe scas repnz cmc (bad) xchg adc mov or fstl pop lahf shr int (bad) cli sub jnp stos retq and xchg (bad) jl sub and and mov cwtl ja cmp (bad) (bad) ds (bad) (bad) insb sarl push xchg divl rex.WB (bad) and xor pop mov xchg push fisttp and or int add sar test jrcxz callq icebp xor dec mov sar dec sbb sub sub bt jmpq add cmp bt cmc bt cmp jmpq ja jmpq stos jmpq (bad) out movsb (bad) clc sbb jmp adc (bad) jp (bad) mov scas sub adc fcomps jnp rolb sbb cltq sti add (bad) sbb rex.WR adc sbb fisttpll jg (bad) lcall iret scas out sbb hlt shrl loop gs loope add cld (bad) (bad) fild sti (bad) lcall imul add xlat mov in xchg sub and imul fstpl mov retq (bad) fisttpl jmpq stos test mov (bad) stos push add imul fwait int3 sub sbb (bad) xchg and rex.X nop sbb sbb (bad) addr32 mov xor iret lahf data16 rex.X mov rex.WXB and jp mov nop pushq jmpq enterq stc sbb push xor je rex.WXB (bad) mov rcrb test add adcl inc cmc push outsl jns out (bad) push pushq test rex.R outsl out (bad) decb jmp xchg adc (bad) out push (bad) test mov push adc add or mov (bad) fildll (bad) movsl (bad) push xchg bswap (bad) sub xchg push xor scas movl rex.WX (bad) lcall (bad) (bad) (bad) callq xlat fdivrs (bad) jne pop loope imul add cld xlat xchg popfq fs xchg (bad) int cmp pop cmp xchg and addr32 mov mov fdivl rorl imul and cs mov jrcxz add (bad) fcmove push out rex.RXB lahf movsb (bad) jns add jge (bad) rex.WB cwtl ja cmp pushfq (bad) jns cli sbb rcrb jns pop jle,pn add jb mov (bad) mov (bad) pop imul sahf stc or (bad) stc iret (bad) (bad) jg sbb mov pushq outsl es push cltd cmp jo rex.RB (bad) movabs rex.W sub (bad) enterq sti (bad) (bad) jg adc (bad) (bad) jmpq fcos sti (bad) cmp mov ds out out (bad) rex.WRXB ds cmc cmp (bad) scas cmpsl sbb rex.WRXB add test subb loop adc leaveq and lods mov loope lret jg (bad) (bad) rex.WRX ss jl cmp or mov retq jrcxz push icebp (bad) xchg push and add (bad) movsb adc sub lods int3 adc movabs mov push jns (bad) loopne mov mov int imul mov pushfq hlt adc idivb add jrcxz rex.WRX mov cmc rex.WR (bad) (bad) (bad) jg rcl mov in js mov pushq rex.WRXB rex.X (bad) jle rex.R (bad) mov lret movabs hlt je cli jp jbe jbe sbb xchg sbb fidiv (bad) lcall jge sbb xor outsb adc mov mov (bad) (bad) rex.RX gs sub cmpb sarb and or and mov stos xchg in or rex.W rex cmp ljmp push in or jp shlb rex.WRX mov and pushq (bad) movabs jbe movslq gs (bad) insl add rex.X mov (bad) pop (bad) (bad) jmpq jmpq je bt stc clc jmpq ja bt stc bt imul test clc add jmpq ficoml movsb jno jo or jne,pn jbe (bad) (bad) (bad) movsl cwtl adc rex.B sub cld xor (bad) iret push ficompl xchg rex fdivrl push (bad) testl rex.WX rex.B jno mov (bad) adc xor fimul (bad) clc adc add nop jl leaveq loope (bad) out enterq rex.WX pop mov pop xor repz mov xlat in jno mov (bad) test fsubr rex.RX xchg sarl push out mov std and jne adc adc rex.X lcall mov cmp fstl add out xor mov adc adc and mov cld cltd sbb cmpl adc idiv jbe leaveq rex.WB cld mov (bad) adc (bad) jmpq std xchg sahf or int cmp out in jg (bad) and xlat sbb push or loop vcvttpd2dq pushq jmpq cld fadd adc ds negl leaveq rcll fdivs sub add cmp cmp cmp pushfq mov add xchg je fdivp and adc icebp ds (bad) (bad) xor adc (bad) cmp (bad) (bad) incl mov fnsave pushfq out jno xchg adc je xchg out int3 xor or in test gs mov sub or adc jbe and test add (bad) icebp roll or mov rol push sub movsb jne (bad) int rex.XB cwtl lods sub in fwait cld xchg imul shrb pushfq mov pop push mov xlat adc sbb adc mov mov (bad) push out rex mov (bad) rex.W (bad) add in pushq sbb (bad) cmp (bad) push cltd pushfq test cmp fsubrs cmp (bad) (bad) (bad) mov in (bad) mov cmc xchg shrb insl xchg popq stos test (bad) fxch stc xchg jns movabs xor jno sbb jg (bad) adc mov cmp hlt (bad) adc jge and add int mov push and (bad) push rex.WXB shll stc clc icebp fbld in std insb or retq (bad) (bad) cmp adc rex.R clc pop sbb movabs (bad) fnop cmc scas add add repnz adc adc retq repnz and jo xchg (bad) hlt and mov sub ficoml sbb xchg mov mov adc xchg (bad) xor push rol sub or mov (bad) stc movabs sbb mov mov (bad) or movslq fldenv fcmove (bad) and scas adc mov sbb (bad) cmc clc (bad) sbb lea cltd movsl movabs or jl ja mov outsb adc adc movabs (bad) (bad) xchg insl or in mov pushq (bad) sub push fsubl je rex.WRB test in int fsubrl jp lock mov rex.WRXB xchg jmpq push mov fs push int cli stos add jno insb pushq (bad) int3 lock (bad) adc jo add xorb pop pushfq bswap cmc repz nop iret rex.X ja mov repz jbe xchg cltd sub cmc sbb jno je test cld (bad) movsb xchg add fdivrs movslq and hlt lods push adc (bad) mov test mov in xor clc cmp cld cs mov (bad) or adc (bad) xor mov movabs mov sbb sub (bad) (bad) cwtl jno jo in (bad) movsb (bad) rcl je lods xorb jl int3 pop insl movabs xor cmp mov rex.R rex.WXB sub mov xlat and vpaddusb mov and lock or cmp out rex.W rex and mov (bad) loope jnp lret shr mov sbb in pop (bad) out cwtl or (bad) int3 scas and test jmp out push or sarb addr32 (bad) or lods mov mov jl outsb movslq mov pushq repz xor fisubrl sbb idiv lock and or push jno outsb je (bad) (bad) out out out mov pop shrb xchg add scas (bad) xor xchg rex.RB (bad) int leaveq mov in or jle sub mov xchg rex.RXB push or stc cmp rex.RXB xchg adc mov jb mov cmpsb mov and rex.RXB int pushq callq int adc mov fsts shl sahf adc (bad) (bad) xor xchg es paddsw mov pop mov stos or cmpsl (bad) retq (bad) sbb shr (bad) je test xor lock add addr32 mov (bad) fsubl (bad) hlt push cs in iret rex.RB loope hlt add int3 nop mov mov jo lock push rclb in mov fcoms sub mov (bad) out scas xchg (bad) sti mov (bad) (bad) mov jp rex.W (bad) in stos xchg sbb jne (bad) mov rex.R add rex.RX push cli mov xor (bad) shlb and push hlt sahf push (bad) (bad) add hlt movslq mov pop cmpsl (bad) mov stc sub sbbl outsb sub mov mov xchg repz xchg callq jle mov jo or (bad) test pop (bad) adcl push jae cmp mov rex.R (bad) hlt hlt leaveq sbb push pushq ja pushq movslq mov clc xchg (bad) pop xchg int xchg xchg rex.WRB repnz and shl xchg fdivs adc (bad) lods or pop je jbe fadds xchg cmp mov add xor cmp test hlt stc mov out and xor notl test mov xchg loopne (bad) xchg test adc (bad) ficoml (bad) jbe jrcxz (bad) test (bad) hlt or pop push sbb lret repz int3 (bad) xor hlt jbe (bad) (bad) enterq hlt sarl xor rex.WRB (bad) ds (bad) jne je rex.WXB es sti stos (bad) cmc js (bad) push mov xchg mov enterq (bad) push stos idivb out push movslq fsts mov push jle sub out mov jrcxz xchg fistl mov mov push rex.WXB addl (bad) (bad) jne push xchg xchg (bad) sub xchg xor mov jbe hlt ja rex.WRB jbe,pt push sti jns (bad) int xor xchg outsb hlt loope xchg (bad) stos (bad) test idivl out hlt movsb pop adc rcll xlat xchg (bad) xor push mov and adcl rcll int (bad) (bad) cmc outsb rex.WB xchg out callq repnz cmc insb adc ja (bad) xor (bad) in rcll and rex.WR fsub shll xor lea fmuls jno xor xor (bad) adc push mov cld jne (bad) (bad) hlt pushq lods rex.WX (bad) sbb pop fs (bad) jl xor or or pushfq rol lock push ds mov testl rex.WRXB mov rex.B in subb shlb cmpsb xor repz rex.B cltd callq xchg insl mov mov mov (bad) jne adcb out (bad) add (bad) xchg (bad) js imul xchg pop mul or scas jg add adc popfq xor xlat pop adc rex.B (bad) fwait stos sub ficompl jo or fdivl js push add mov (bad) clc xor movabs or mov test fdivr (bad) cwtl (bad) mov (bad) jo in in mov cmp mov lret movsb and movabs mov pushfq mov jp jp insb mov mov xor mov in jp cmp add pop movabs shl adc ds add push adc jae int int3 cmp insl scas jge icebp or cmpsl xlat adc out in mov rex.WXB scas mov lret sahf (bad) (bad) popfq (bad) sbb andb test add mov add mov xor mov or loop rex.WRX in mov xchg or mov mov push test (bad) lahf cld rex.WRX sbb out imul jbe repnz xor push lods xchg rex.WXB mov movabs imul rex.RB fucomi int3 movsb mov mov mov push (bad) cmp push jl add ss xlat push mov or mov jg (bad) add (bad) fcomp (bad) adc testl sbb (bad) cmp xlat cmpsb jne movsb jrcxz leaveq insl pop test mov pop mov (bad) in in xchg jmpq mov rex.R imul adc (bad) test push cmp jl pop jnp add xor cmp (bad) cwtl clc test jo (bad) (bad) iret cmc (bad) mov cld pop insb retq cld sbb roll loop cli and cmp scas xchg mov int3 mov rex fs xor test data16 jo jl movabs retq mov mov rex.R sbb (bad) cld (bad) adc clc ficom int3 sbb xchg mov or pop repz mov mov rex.WRB xor loopne mov test lret rex.WB je test jp outsb outsl insl adc sbb mov cs cwtl xor insb adc scas add jl icebp sbb xor jg sub cmp lods pop xchg mov test mulb insb rex.B cmp rex.B jo xchg out xor rex.WR cltd adc test push stos mov data16 (bad) jns lret pop push iret cwtl adc adc add rolb xor callq (bad) jp (bad) hlt mov (bad) sub imul jge jb rex.XB outsl jbe xor movsb mov in notb stos mov (bad) (bad) cmp out or shrl mov int icebp mov (bad) rex.WRXB adc clc in rclb xchg jb sar mov stos or xor int3 test rex.WRB and iret xchg outsb jno out push sbb rex.WRB mov ss movl movabs add outsb xchg and or icebp xchg out rex.WX cmp mov mov xor imul fiaddl lahf repnz sub (bad) jge fimul repz lods mov enterq rex gs in mov lock popfq mov leaveq repz rex.B movabs (bad) enterq mov test enterq add or movabs (bad) test jl sbb xchg cltd out std mov (bad) (bad) mov gs movl mov (bad) push mov fcoms pop push sub lret not add pop mov outsl (bad) (bad) lods js pop movabs cltd push (bad) pmulhw jge jns sbb xor icebp xor lcall mov rex.WRB jns in push xchg rex.RB cs sbb adc (bad) rex.X (bad) (bad) (bad) data16 mov cmc xchg rex.WB lret cli adc push cmp rex.X sbb (bad) int3 xchg push push adcl rex.WRB add (bad) (bad) out (bad) (bad) test (bad) push movabs xor cmp mov enterq (bad) or fs rorl adc testb (bad) jp test icebp std shll std js xor divb rorb xchg (bad) out test (bad) cmpsb add mov mov cmc sbb xor shl jne movabs repnz mov movsb loopel mov xor out movabs add cmpsl idiv decb cli js fwait (bad) rex.WXB outsb cltd (bad) sbb pop in jmpq movl in gs movabs add xor mov mov popfq (bad) movabs (bad) movabs mov sbb test (bad) add mov (bad) lods insb mov (bad) fsubr pop jo add add xchg lret pop rex.B cmpsb jl rex.W test or xor or xor mov pushq jl rex.WRXB jne nop mov (bad) push or adc test int3 out sbb in add (bad) and mov cld test insb add rcll test imul and scas (bad) lods jne mov rcrb je or js xor mov cmp imulb cmp test nop leaveq jg mov jmp out xor mov sbb (bad) mov (bad) mov xor imul push (bad) xor jrcxz nop mov retq lahf jmp scas je fdiv cmp or imul pushq hlt loopne sub enterq push test add mov ja jmpq int3 not mov mov jmp cmpsb movabs (bad) enterq fcmovnu addps sbb lock push push (bad) cltd movsb lock mov lahf lret xchg cld loope add pop and in jge retq sbb or add pushfq xor adc fisubrl divb movabs add adcl ljmp lock jrcxz mov (bad) mov xchg pop fcoml adc or jg mov roll mov rclb xor int3 and (bad) mov int (bad) xor cld (bad) xor pop out jrcxz add (bad) lock and (bad) loopne xor rclb (bad) sbb lahf test lock cmc rex.WXB add lret (bad) (bad) imul (bad) mov ficompl jae sbb (bad) push rex.XB mov addr32 jne push (bad) callq (bad) out mov rex.RB shll out repnz (bad) repnz mov std stos cmp xchg mov xlat lock jg movsb sarl lods hlt (bad) mov jo lods (bad) pop pushq movabs cmp fnop ja rex.WB or or int xor lahf xor jne cli (bad) or iret popfq loopne lret lock and hlt (bad) je test cmp sbb sub mov gs repnz (bad) xor in ss cmp (bad) xchg sbb mov mov (bad) je shr or xor mov test xor fdivs jbe (bad) and std (bad) cli add adc sarl pushq xchg mov popfq (bad) jg std shrb pushq lret push callq push cmp out rex.RB add cmpsb rex.WXB cs (bad) (bad) or in cmpsl movabs xor vpsrlw test notl lods jl pushq (bad) mov jp or rex.W mull not jg add movabs rex.W (bad) mov rex.XB mov push mov imul jge or lea push pop cmpsb sub rcrl pop rex.WRX rex.WB cld sahf mov xor es cmpsb and jno mov int3 je push loope repnz leaveq cld adc pop sub sbb rex.R rex.WR mov pop callq or cltd in cli movsl outsb jg sub jbe (bad) and xchg imul jns out loope in icebp mov js repnz and (bad) pop (bad) leaveq andb fdiv sub imul es or cld adc and rex.W cmp in mov (bad) adc ds sub pop mov mov xchg jae es cltd fild (bad) cmc repnz mov mov sbb divb and push adc sarl push sbb icebp jno nop jmpq test jo outsl mov jle insb jmp pop rcrl mov pop mov rex.XB fadds rex mov iret mov rex.WR adc fs xchg xchg and int cmp push and add jns mov (bad) (bad) mov pop xor adc lock fnsave xchg add rex.WRX push ja clc rex.RX rex.WRXB loope mov andb rex push rex.W pop pop stc fwait xchg jrcxz pop push fmuls movabs rex.WX rex.WX popq shr jmpq adc mov (bad) adc (bad) cmpsb (bad) loope rex.WXB xacquire mov pop icebp sahf cmc or mov mov (bad) lods fdivs pushq adcl (bad) idivl (bad) xchg cmp lods mov pushq cmp adc and stos (bad) mov cmp pop add or adc rex.X clc cmp test push (bad) rorb cmp xor in rex.X sbb rex.WB in pop rex.RX gs rex.W rcrb cmc pop mov cwtl mov rclb repz fsts out (bad) out lock adc sbb adc mov int3 jbe js xchg jge jle (bad) bsr mov shrb psubb int3 or rex.WRX sarl out xchg pushq (bad) adc xchg adc (bad) jmp (bad) jo rex.WR lock and loope cmp xchg cld test rex.WB jmp rex.WX (bad) jmp cmc movabs cmp jns mov repz out std gs rcrl xchg rex.RB (bad) xchg scas (bad) cmp jnp cld movabs adc scas int cmc pop add (bad) xchg cmpsb add insl imul jp fstpt pop jno and mov jbe movabs divb jg push test (bad) movabs (bad) in jmpq xor jne add int3 lock cmp and sbb cmp ja sbb or stos xor cmp mov xor rex.B scas jns mov push (bad) (bad) sbb rex.WRB scas (bad) jl jns or (bad) movabs repz rcl or scas add jo (bad) xor in xor mov fstps cmp (bad) (bad) mov fldenv (bad) jge mov (bad) hlt xor iret and mov jmpq xlat (bad) cmpsb pop sub (bad) mull js push pmulhw (bad) fisubr stc cmp or sbb test xchg (bad) div (bad) leaveq mov jg lods xchg and mov js pop adc mov fs and (bad) sub (bad) (bad) je mov mov (bad) and mov mov mov xchg xlat cld mov notl rclb mov mov rex.WRB rex.B leaveq mov lahf nop xchg rex.WRB xchg push (bad) jge xlat and int mov xchg xchg hlt in rcll (bad) mov leaveq sub xor jmp (bad) retq mov addr32 cmp (bad) add push adc sbbl xor rex.WRB adc pushq imul hlt clc mov test rex.WRB insw (bad) xor (bad) shlb addl (bad) outsb mov rex.WXB movsl loop testl cmpsb mov out stos or idivb pop loope xlat imul pushq ss rex.R lahf and add (bad) mov cmc icebp (bad) (bad) xor rex.XB pop fucomi repz mov (bad) jne rclb xchg mov divb mov movabs out cld sbb jo (bad) repnz movabs adc sbb sbb sbb data16 callq sub mov cld movb jge in lea (bad) scas (bad) jae jnp sub js lock (bad) clc popfq sbb cmp mov lret jrcxz repnz push (bad) rex.RXB pop rex (bad) rex.WXB imul fldpi (bad) jo cmp notl out out cld jnp cmp je cmc sub out clc pop in xchg (bad) loope and xor mov clc (bad) or in repnz rex.WXB test rclb (bad) movabs movaps (bad) pop push cmpsb pop push fcomp mov adc (bad) (bad) lret subl js mov add cmp sahf and xchg loopne cmp adc add lock rex.RX (bad) rex.W sub push push int jne pushfq xchg movabs rex.WR rex.WR sahf fstpt and (bad) stc add sub and test iret jne push shrl lret push (bad) cwtl xlat xor cli sub (bad) jp cld fadd add rex.WRB jg pop je rex.XB clc es xchg jle in movsl jmp rex.W (bad) push (bad) callq cmc adcl (bad) out xchg rex.W stc retq icebp or (bad) adc jno bnd mov out insb adc (bad) adc outsl add add jb pop rorl (bad) mov or add (bad) xor test in repz (bad) push es (bad) push (bad) out xor pop push mov and add mov rex.RX pop push add push fnstenv cmpsb jmpq add (bad) (bad) repnz cmc adc xor xor (bad) xor xor repnz adc (bad) insl add fdivl xchg (bad) sub mov hlt mov rex.W sub int retq xor cmc nop pop pop rex.B rex.R (bad) mov js int3 xor push push int adc mov jo loop addl mov cwtl jb adc jne push push insb xor xor mov fcoms sub incl es rex.XB sub loop retq rcr adc repnz cltd lods add (bad) retq push insb callq sbb or mull sub decl fnstcw rex.B (bad) rex.R sti in enterq lea cmpsl xchg es sub mov movabs or or cltd cmp rex.WB rex.WRB rex.WB mov (bad) movsl fs lea enterq sbb mov cli repnz test (bad) mov and adc sub add in sahf push mov movabs rex.XB rex.WRXB adc nop fwait pop nop cmc es test callq sbb outsb (bad) vpavgb add jo mov jno jp xor push jae adc fldenv cs out xor jmp add xor add fnstsw repnz out push clc movslq icebp (bad) jno sbb rex.WB test xor pop imul or mov add rex.WRB pop jmpq mov je mov add (bad) stos (bad) and mov push vpsubd setg (bad) xchg or pop or xchg xchg fs jno rex.WRX add push adc sarb test (bad) jle add rex.RB rorl adc out lahf (bad) sahf rex.WRXB fs (bad) movabs rex.X insl fcmovu and mov cmpsb test stos outsb gs loope (bad) adc sarb adc sub lret or sub (bad) xchg (bad) fldl sub (bad) leaveq mov pushq (bad) cmpsl movabs mov push adc push (bad) sbb int3 add fwait es adc mov sbb lret pop mov mov push data16 cli xchg and jns je repz jne adc retq ja (bad) (bad) je (bad) ss add leaveq jbe push sbb mov mov jmpq push lock pushq (bad) and incl lock out adc cmpsb int iret xchg out adc in pop cmp mov (bad) movabs xor and adc jno nop jp ficom (bad) adc xchg outsb rcrl xchg clc push mov pop lods lahf xor enterq (bad) (bad) lahf in add or jmpq cmpsl (bad) rex.RX scas (bad) or rex.XB and fisubl fimull xlat fcoms cli push mov or getsec mov roll mov lods push rorl xchg mov ds (bad) push mov std sti or out mov insl pop cmpsb insl iret jae add movsb push sbb loop pushq cmovbe add adc sub (bad) add cld js movabs rcr add in push (bad) (bad) mov shll ja push mov jb out mov (bad) (bad) jg (bad) mov (bad) jne or rex.WRB (bad) enterq rex.WRB or pop or stc sub (bad) f2xm1 rex.XB adc movslq rex.RB stos (bad) lret cmp mov movabs push rex.WRXB mov jmpq jno cld adc es pushq add cltd sbb cmp (bad) rex.B jrcxz pop xadd pop mov repz xchg or lret lods mov xlat jge ror movabs sbbb jno iret loop (bad) xchg xchg (bad) mov xor or sbbb in lea movabs sub xchg rex.RX pushq mov jbe fiadd in cs (bad) or movabs in outsl in rex.WRB xor (bad) (bad) jne mov lock pushq or fstl xor add cwtl pop adc push or mov jne out lret xchg scas (bad) sahf mov ds sub push cmp mov cmp sub pushfq (bad) (bad) lret jrcxz jo (bad) adc test or popfq cwtl mov test jne divl rex.WXB nopl cmp repz xor (bad) cmp stos mov int sub rex.WXB push cld (bad) jl add out add je cmc popfq (bad) mov (bad) jl mov (bad) lea out (bad) popfq xchg push (bad) rex.WRXB (bad) (bad) or (bad) mov retq (bad) xor addr32 int3 xor lea ficompl mov mov out out insb cmpsl movabs jle sbb mov fimul vpunpckhbw ss xchg rex.XB rex.X lret lret notl rex.W rex.B fs mov movslq jo sbb clc enterq push mov adc (bad) rex.WRXB jnp cmp add xchg xchg icebp cli (bad) lea add (bad) mov rex.B iretw xchg pop (bad) in pushq lock (bad) (bad) sti xlat and rex.RXB add insb sar ja (bad) cmp cmp jmp nop mov repz xchg nop sbb loop push in xchg sub mov movabs adc sub lods mov push test (bad) sbb jle (bad) jno mov fsubrl int loopne adc xchg and in pushq (bad) cmpsb adc xor test retq adc ja enterq test mov mov mov jmp cwtl scas push xchg cli and add jb pushq fldenv rex jrcxz addr32 (bad) stc xor or fsubl lods movsb hlt jl or jl sti pop add movl or jno (bad) mov gs (bad) mov sub imul (bad) rex.X sbb rex.RX shl push cmp mov mov sub callq mov (bad) lret in pop rorb es and (bad) movsl scas sahf (bad) js xlat rex.RB rex.R mov callq test mov addr32 (bad) in mov rex.W js xor adc punpcklwd insl (bad) gs loopne jnp movsl jne add addr32 rcrb jo test leaveq mov or xchg (bad) imul xchg cmp js (bad) (bad) fs xor jno adc mov mov rex.RB rex.RX (bad) (bad) stos push jb data16 sub sbb xor movabs push gs and pop xor and jb cmp retq rex.WR cmp cmpsb je scas add cmpsb insb (bad) insl test or sub rex.RXB imul lea in rex.RB es (bad) out vpmuludq push xor jo mov xlat pop rex.WRB lock (bad) (bad) rex.R mov out jnp mov (bad) add rex.WR xor xor sub shl or (bad) repnz mov ss mov (bad) sub xchg mov rex.WR gs (bad) mov xchg and mov xchg cmp test rex.B jno iret sub mov mov fcompl fbstp (bad) jle stos mov popfq int3 subb or sbb movabs add xorb in retq jb rorb in fldenv fcmovne pop (bad) icebp (bad) (bad) mulb xor mov and jp pop rex.WRXB loopne adc push out test test cmp (bad) or rcll (bad) int jno (bad) fsubrs and adc (bad) mov (bad) fwait rorl loope or cmpsb or adc sbb rex.WRXB mov (bad) mov mov and out mov xchg outsl iret imul notb and mov (bad) xor (bad) fcomps pop xor jl mov xchg orl or rex.WB enterq callq rex.WRX push sbb movabs mov and mov loope adc push gs jl jle sarb xchg scas mov adc (bad) loope rcll xlat cmpsb pop (bad) cmp in add rorb repz sub jmpq out add jle rex.WR enterq ror xchg (bad) retq fs add imul std (bad) test jg jg fdivrl cs cmpl es adc or out sbb retq cmpsb mov movabs mov outsb leaveq out (bad) fisttp add rex.RX jb mov jl push mov adc movabs mov adc jae rex shl int3 or rex.WRB add (bad) jno std stos (bad) mov mov leaveq xor xor (bad) xchg pop lock xchg pushfq adc rex.XB jmpq rex.WB mov lea jle mov (bad) add in (bad) retq jno out cld sbb rex.B xchg xlat rcrl mov sbbl (bad) push shrb mov (bad) lods xor adc icebp jno xor mov jns out rex.WRX loop sbb (bad) jne mov (bad) insl and xchg (bad) push lahf xor cli (bad) (bad) (bad) je (bad) mov rex.WRX test movabs (bad) hlt and adcb rex.WX callq xor or sbb mov (bad) rex.B mov jae test cmp out pushq mov push and cmp push lret push shrb popfq stos repnz jg mov iret xchg callq mov rex.W int3 rcrb mov rex.WRXB pop fsincos (bad) pop push mov and or add sbbb int3 icebp or jrcxz sub add rcll mov sahf jle movabs test jl movabs leaveq adc mov xor xorl cmp xchg mov lods outsb (bad) add int (bad) (bad) repz add int xor add cmp retq sub adc icebp (bad) (bad) sbb pop adc (bad) lock mov cmp rcll rex.B rex.RXB jno xor xor (bad) add lret add rcll mov stc push stos xor (bad) pop repz cmp pop adc mov add jmpq or in jae test sub xchg mov add std xchg (bad) or mov (bad) adc sub fstl (bad) jmp mov adc rex.R xor testl pushq jp (bad) fimul or mov rex.B ss movabs (bad) and ljmp pop mov fldcw fmuls repnz or (bad) fidivr lods movabs adc js jmpq jb xlat loope xchg sbb fimull cmp callq repz xor fiaddl xchg xor jle pushq mov hlt in js rex.RX sbb repz gs pop je es push push rex.RB push fwait rex.WXB mov stc cmpsb fsubrs repz pop cmp or (bad) rex.RB add xchg mul movslq adc movabs ss fisubrl cmp add (bad) xor insl push loope (bad) sub add (bad) icebp adc (bad) jno clc sub movabs or jmpq icebp mov and rex.XB test (bad) lahf or (bad) rex.WRXB rex.RB out add (bad) xchg add lods js es leaveq xor shrb (bad) loopne adc divb punpckhbw or out cmp push icebp and sub push jno mov js out test int3 push (bad) push es mov fildl and jb (bad) push clts jns (bad) sub movslq sbb out add pushq out (bad) hlt mov rex.WR mov (bad) test and rex.RXB rex.RB rex.RX xchg cmpsl test (bad) add int3 pushfq lahf outsl rex.WX cli popfq push rcl mov sarl rex.WR jge std mov lret xor clc sbb callq cmpsb fidivl cli and rex.W (bad) outsl imul adc or add xchg fnstcw test or jns add test (bad) (bad) mov xchg (bad) (bad) mov or nop clc out fdivr jrcxz,pt adc sub leaveq xchg mov outsb rex.W (bad) shll out movabs (bad) xchg xchg movsb roll cmp cmp addb (bad) fimull push push mov and or in and retq sub sbb je mov add ds (bad) sub movl sub mov sbb imul xchg jmpq in (bad) or in push callq fs jge (bad) std lret cli adc repnz mov (bad) out xchg mov hlt (bad) adc callq repnz movabs or xor (bad) rcll (bad) scas imul xor mov mov int3 jne mov (bad) fs cltd sub (bad) sbb outsb (bad) pop js add adc movabs adc jb hlt adc adc and rol xor rex.WRX rex.WXB clc jmp sbb xor (bad) jb subl push pop (bad) and movsb mov mov rex.R xchg adc adc nop rex.WR pop out test callq je jnp repnz (bad) or popfq fistl stos rex.R notb mov sbb cwtl rex.XB and xchg mov test cwtl xchg js clc adc div repnz cld pop test xchg incb mov in imul xchg jb shll adc jrcxz xchg (bad) shrl scas nop lea add push (bad) test cmp xchg jns push callq xor cmp insl cmp fdivrs pop (bad) imul shll pop mov pushfq test int3 mov (bad) mov insb (bad) or (bad) fmuls fdivrp enterq and jno fstl out rex.W jbe in test push shr or push sbb add rex.RXB (bad) movsb jns je fcoms movabs out pop jo out sbb (bad) (bad) xlat mov jmpq divl movabs pop xchg (bad) (bad) rex.X mov enterq pavgw test adc mov test add cltd mov repnz add or sub (bad) mulb (bad) xchg xchg jbe and jmp add out push mov jae in sub es mov (bad) adc lret (bad) jrcxz xor paddq (bad) jbe (bad) sbb sbb or and add cmp orps notb and sti rex.XB jp xchg jno adc out rex.WRB or data16 jge xchg adc (bad) rex.WR adc and movabs (bad) jno,pn in or fs callq imul mov loope jno push (bad) hlt (bad) push fsubs add hlt jns push add (bad) push or popq loope rex.RX lret mul mov jmp push vmovmskps sti iret popfq add (bad) cmp out xlat lods cmp or nop jnp je sub (bad) in add ja movsb jrcxz add mov imul or ss and or and psrlq mov push mulb neg fs (bad) cld (bad) push add xchg loope (bad) mov (bad) or jg cli js jne add and sbb shrb imul cmpsb (bad) out mov sub mov out xlat adc xchg ss cmp adc gs fsubr adc lret xchg cmc lret and (bad) div sub (bad) xchg pushfq jo (bad) adc (bad) jno push mov mov (bad) sub rex.W jo repnz callq ss ja stos movabs movabs push (bad) (bad) mov in lods pushq mov mov out (bad) rex.XB (bad) push mov jmpq movsb clc or xchg adc mov fstl lods or (bad) test out adc repnz pop (bad) mov (bad) cwtl rcl loop sub pop seto or pop (bad) xchg cmc pop jmp sbb push mov jbe movabs adc pop cmc stos retq pop rex.WB xchg sub xor pop (bad) adc in leaveq imul cmpsb and jmpq cwtl pushfq or pop retq add xor rex.RX push mov xor mov add rex.WRX rex.RB push (bad) mov cli lods (bad) pop ficoml or adc add jg cwtl mov xchg lea test pushq (bad) popfq (bad) add mov adc cmp clc adc jle jne sahf xchg pushq retq negb ja movsl or stos push mov adcb xchg outsb or cli fcoml xchg rex.RX pushq add rex.WRB (bad) movabs or add and add and shlb std mov mov mov (bad) adc mov notb (bad) (bad) hlt push jge paddw xchg and idivb xchg (bad) ja add sub (bad) fcoms rex.WR and and jg sahf (bad) cli xor jno rolb (bad) popfq rex.X cs jmp rex mov repnz xchg xor jle fmul in cld fadds (bad) stos (bad) xor rclb fildl sub jae mov xchg (bad) ja and imul clc mov mov mov data16 (bad) adc stos incb mov (bad) or (bad) (bad) jmp (bad) (bad) (bad) (bad) cli repz cmpsb int3 jnp sbb and loopne jb mov and shlb cmp jbe mov mul stos fadds lock cmp (bad) mov xor xor add mov sub callq fidivl cmpsb mov ds (bad) (bad) mov enterq (bad) push sbb cld (bad) (bad) fisubr fldt movabs cwtl out cld (bad) hlt ja clc fsubl (bad) jbe add add rex.X (bad) ss popfq fidiv repz jb sbbl (bad) pop xlat (bad) sbb cmpb xor xchg test movabs jb mov shr cmp xchg jbe fs callq push cwtl xchg icebp xor adc push sbb mov outsb xchg rex.WRB and (bad) xor jl fcomip rex.RX add fs movsl pop out out or jne sub xchg xchg js sbb pushq or xor hlt stos mov (bad) (bad) add cmp or add and mov push cmpsb adc mov int3 jbe jne mov pop jbe fsubr (bad) movl out xor xchg stc add rex.WRXB cs adc mulb movsl push (bad) leaveq sbb xchg xchg loopne rex.X movabs mov xchg imul jb or adc xor sar (bad) iret idivl (bad) loop fwait js mov rcrl iret jrcxz in cmp (bad) (bad) fwait fwait cltd mov jb iret out hlt and loope (bad) sub sbb int3 (bad) jb test insb (bad) in xor push xlat loop and (bad) xlat and (bad) hlt in add rex.WRXB mov test clc vmovss add rex.WX rex.R or xchg sbb cmp in movslq faddl xor (bad) fisttpll cmp xor jge fsubrs pop and cmp or xchg cltd (bad) rorl xor (bad) mov (bad) rex.WRB or sub loop (bad) imul (bad) pop push lods or or fistpll pushfw pop sub cmpl enterq mov movslq jmp enterq addr32 pop mov adc sti nop movsb adcl xchg xchg sub fsubl pushq mov movabs (bad) jno rex.X outsb adc pop rex.X cwtl fwait out rex.RXB xor cmovnp leaveq insl mov or push (bad) stc repnz repz xor movsb (bad) movsl (bad) rex.WRX rex.RB jl and cmp xchg xlat rex xor or mov mov lahf add jg negb in fs movabs cmp or (bad) out lahf movsb and rex.W mov sbb (bad) lret add (bad) rex.RX ss movabs pop cli icebp test retq in fnstcw (bad) sub es (bad) pop (bad) and mov xchg (bad) pop mov out jl or mov mov cmp and (bad) sbbb sarl jge (bad) rex.WR in out (bad) in fldenv iret cmc insl in movsl retq mov mov lret sub cmpsl cltd (bad) and rex.XB (bad) xchg adc rcll mov pop (bad) ss mov hlt mov push testl jl xchg leaveq movsb add repz rex.W clc movabs iret cmp callq (bad) test mov sub mov cmp in lods adc cmp jo insb mov repnz test fstpt adc (bad) int out fidiv push xor rcrb mov cmp pop in xor sub or push (bad) enterq xor (bad) rex.RX jl out jle adc rex.X rex.WB (bad) pop cltd add (bad) and sahf ds xor (bad) stos (bad) xor movabs pushq jae (bad) scas rex.B mov out rex.WX test mov sar (bad) mov and (bad) mov (bad) rorb sub mov test fistp (bad) and or push retq (bad) stos jg lret pop mov push (bad) cmp (bad) jmpq out movabs or xchg jge mov add (bad) cmpsb jl insl mov sbb cmp (bad) out rex.WX (bad) add (bad) sub adc (bad) cmpsl ror xchg rex.X xor sub sub rex.RB es frstor repz mov movslq jbe,pt roll xlat sub pop (bad) add lret mov test xor fildl out jge test (bad) cmp rolb mov std lock (bad) sbb lods insb out xchg (bad) rcl lahf mov and out mov (bad) sub jmpq jne mov shl mov sahf cmc pop pushfq sbb addr32 and out mov push mov mov push and pushfq cmp cmp push (bad) dec idivl rorl sub outsb mov mov or adc rex.RX ds rex.R idivb (bad) stos (bad) mov lods sub rolb data16 jle jle xchg out ja int3 adc cmpsb xor test fildl (bad) jb push lret fsubl (bad) ja rex.X push retq mov insl (bad) rex.RXB (bad) jg imul xlat pushq mov (bad) mov (bad) jno (bad) xchg add add xchg rcl movabs scas sub out rex.WRX jns mov add jo adc pushfq pop or adc (bad) or callq movabs lea es adc (bad) xlat rex.R cmpb scas (bad) mov fwait rcrl cwtl adc ja sti (bad) fwait int mov mov mov xchg sbb hlt mov and cmp fsubr rorl (bad) sub jl mov add pop stos jno int lret sahf add or mov mov in (bad) loop (bad) fwait loope callq mov add mov clc mov mov and (bad) mov lea ror mov or add cs adc mov movl (bad) cld and test (bad) rex.WRX (bad) callq gs or movsl fld xchg cmpsb rcll enterq pop or sbb movsl (bad) loope sbb mov lock cmp callq (bad) add or rex mov xchg jbe (bad) and and adc pop (bad) pushq cmp jmp ss cli mulb add (bad) int3 (bad) cli or xchg scas (bad) or cmc cmp (bad) movsb ss (bad) push (bad) mov add cwtl in jo in mov jrcxz (bad) push xchg cld add rcll (bad) sbb add or sub mov imul jge je fdiv out push test xor mov (bad) jae (bad) lahf or lahf loopne and setnp sbb rex.WB repz (bad) jne,pt jbe lret notb jns syscall add xor scas rex.X div (bad) xchg add jl scas pop ficomp (bad) (bad) addb rclb sarb lock lods movabs hlt and push pop pandn rolb mov add data16 enterq (bad) adc in (bad) adc (bad) hlt jl hlt add mov and fsubrs jne (bad) (bad) cmpsb loope mov pop rex.RX xor xor mov clc cwtl and add push ja in sub (bad) cmp mov (bad) stos cmpsl (bad) adc stos jno lods push test or (bad) mov callq sbb cld rex.XB pop push (bad) mov callq (bad) or lock and test mov insl jbe (bad) clc (bad) mov (bad) rex.XB sbb or paddusb mov mov (bad) cmp add nop rex.X sub pop divb mov rex callq xchg pop test add test adc pushq loop mov sarl rex.WRX push mov divb lods mov enterq (bad) add xchg or push xor cmpsl jle adc (bad) lahf cmp or rex.WXB rex.WR js (bad) sub xor out fistpl movsb xor xchg fildl adc adc movslq nop sbb cmc out xor loopne out cmpsl jne (bad) rcl rex.W rex.RXB and sahf test cli and jrcxz (bad) hlt or or jbe (bad) or movabs jne movslq movabs add not mov (bad) rex xchg popq rex.WRB or xor jae in cmpsl pop testl shll mov mov mov rex.WRX repz cmpsl adcb and jne js cs iret (bad) cmp fwait jno rex.WB rex.RXB icebp xchg jae sub insb fprem (bad) sbb adc js push xchg or jo lock test mov adc out in jl (bad) out movabs nop int3 fcoms jmpq (bad) (bad) mov add adc test mov cmp movslq in in lock xchg shl xchg (bad) mov cld andl xchg pushfq jne (bad) icebp ss cli (bad) ja xchg add lods rex.WRX rex.B xor push clc (bad) add lahf mov (bad) xchg (bad) add pop rex.X pop mov push notl xchg (bad) and cltd xor (bad) (bad) mov movabs movsb xchg or or in jno test stc and jle (bad) imul xor movsl cltd xchg jnp (bad) loopne rex.WR (bad) mov mov in decl movabs movabs out (bad) jmp jge push movabs mov mov adc mov sbb mov rex.WRXB rex.X ror (bad) mov and and adc rex.WX rex.WRB mov (bad) (bad) (bad) cmp (bad) fcomp (bad) cltd cmp ds (bad) push and adc out push in test in mov movabs jmpq xchg in sarb mov pop pop rex.R fs decl fmuls (bad) ss mov rcl mov lea mov in insb shr (bad) nop test je movabs pushq mov add adc fsubl adc out (bad) sar test or add xchg (bad) cmp sub jno (bad) (bad) xor and cmp xchg stc add mov out rex.R rol xor jnp (bad) rex.W repnz loopne add cmpl mov mov pop out pop callq xchg in mov pop xor mov or scas jno orl and jmpq mov movsb sbbl push push xchg add pushfq clc (bad) xchg or hlt in movabs xor xorb xor lea lretq repnz in adc rex.WRB ficoml rex.WXB ja (bad) cli jbe cmpsl fnstcw mov in pop lahf or pop jg and and jmpq repnz rex.WRX rex.WXB sbb xchg int sub push (bad) sbb pop andl in (bad) cs xor add clc (bad) out in xchg and or push pop (bad) and add hlt rex.WRB cmp add cmp fisttpll rex.WXB xor add shl mov test shr mov and fldt sub (bad) ja add jnp cld fs clc js or jnp mov jnp lock xchg mov jae je test repnz cmpsl loope xor xlat mov mov (bad) fxch in lea addb (bad) mov (bad) imul pop hlt data16 hlt fdiv sub (bad) mov mov mov add adc and sub rex.RXB mov adc insl orl sbb (bad) lock xchg cmc movabs and js iret and add xor gs (bad) pop icebp hlt adc rex.WRXB mov add (bad) out jl cmp rorb ror movabs sbb repnz (bad) rex.RX fcmovbe push sbb out loopne sahf out cmp mov fdivs (bad) imulb push cmp adc (bad) iret push addb xchg std mov mov jp not jl xchg xchg rcrl xorl xchg test stos scas xchg sub jo in loopne (bad) mov xor lret sub outsl (bad) mov loope mov rex.R pop mov xlat sbb pop and adc je nop (bad) xchg jb jns sub (bad) or movabs mov fs rex.W ds rcll callq int3 sbb or rex.WB xor iret (bad) mov (bad) iret jbe popq (bad) repnz add add imul fcmovbe cmp pop mov rex.W add or rex.WRB movabs rex.WB rex.WRB xor icebp jl jno out imul rex.R fiaddl rex.WR jno xchg pushq vpsubq xchg push fcomip jp (bad) mov mov xor movabs mov out rex.RXB mov sbb (bad) cld (bad) rex.RX sti mov mov neg outsl movsb repnz rex.R repz loopne out js (bad) mov fs xchg (bad) callq xchg stc movslq mov imul loop rex.WR rex.RX add movslq and rex.WX add rex.WRX hlt and callq add cmpsb (bad) test lods add repz movabs (bad) (bad) push sub sbb lea mov mov xor mov xor cld ja (bad) movslq shr adc shl pop mov jrcxz rex.XB mov cmpsb rex.WB fdivr outsb (bad) callq movhps rex.WRB rex.WB retq movabs (bad) sbb retq mov (bad) and xchg callq mov rex.R std (bad) xor rex.RX (bad) fs out scas in in (bad) xchg jmpq (bad) cwtl cmp hlt adc rex.WRB lods std loope sub push rex.WXB mov stos insl insb and test ds out mov jne push rolb (bad) (bad) jnp add (bad) push push mov xchg mov scas add fsubrs (bad) (bad) ja jle std mov push cmpb sub sub insl cltd xchg pop test js clc jnp (bad) std jmp (bad) (bad) outsb adc mov pushq or adc sarb fwait pop adc insb getsec (bad) fdiv mov callq movslq rex.B sub (bad) mov sbb adc xor (bad) or xor (bad) ds and pop sahf cmp cmpsb pushq out adc mov jrcxz sub add movsl (bad) insl fbld add pop lods (bad) sti xor (bad) (bad) pop (bad) jle pop cltd orl out test mov cmp movslq sub xor add (bad) mov rcll pop sbb and movsb mov adc (bad) (bad) pop mov adc push rex.B mov rorl (bad) pop and icebp lock push sub in (bad) faddl callq xchg stos nop nop mov fsubr out retq add enterq pop in pushq mov (bad) fcomi loope out std jae jne jg,pn (bad) cli xor sbb xor push lock add xchg rex.WX adc rcr sub rex.R rex.WRB cmpsl addr32 fs jae movsl xchg repz add cmc rex.XB in cmp add out adc mov jmp stos mov rex.RXB rex.RXB out (bad) or rex.XB lock and rex.WRX (bad) xlat fcompl repz sub and fnstenv rex.XB out imul insl and mov jrcxz fcoml enterq mov pushq (bad) add sub (bad) mov xchg out adc push es movabs (bad) cmp stos test rex.WRX push xor scas int3 (bad) ss std add adc test enterq leaveq mov jae add rex.RXB rex.RXB cltd cmp (bad) or and ds fdivrl clc popfq adc (bad) movabs push icebp adc (bad) adc lock xor sbb jbe xchg stos sbb xchg adc jne cld or jb lret (bad) or xor jrcxz sub sub roll xor cmp jge jle mov lret mov mov pop sbb test in adc mov notl fadds test or rex.WRX push add push data16 adc outsl js out test cld mov jae rex.WX pop js cmpsl sub (bad) jae jge test (bad) (bad) mov sahf js (bad) xchg xchg in movabs add xchg outsl cld js fidivr leaveq (bad) jrcxz jrcxz or repz in pop jge xchg imul sub mov sbb int3 lods callq xchg mov push loop (bad) (bad) xchg stos xor xchg jmp (bad) andb adc in je xchg rolb rex.WB fstl (bad) movsb sub (bad) rex.X pmulhw fisubr mov (bad) repnz lods (bad) stos addr32 mov sub lock sub outsl je sbb xchg ja int3 pop cmp movslq (bad) mov hlt imul (bad) push cmp push cmpb rcl (bad) ds fwait jbe (bad) jae insb push rorl push fdivrs hlt (bad) insb rcr pushq insb (bad) (bad) cmp adc jo and addr32 loope retq xchg mov xchg pushq xchg scas xor add test add (bad) (bad) sbb pop fdivrp sub mov xor xor add pop fwait icebp rclb cmp push mov (bad) jne sub movabs xor (bad) fcmovu (bad) pop std mov jno adc fmull sbb xchg (bad) jmp (bad) push mov cmp sahf and out adc add push fdivrl (bad) (bad) xchg jmpq add movsb xchg sarl xchg pop lods xor jrcxz add (bad) cltq jbe pop adc stos xor (bad) or fidivrl mov testb callq (bad) sbb in stos rcl sbb (bad) and imul popfq (bad) test movsb xchg int3 mov add xchg xlat (bad) rex.X rex.XB (bad) mov sub fistl xor movsl cmp (bad) (bad) frstor rclb cli in and pushq jg js jne pop fwait adc movslq xchg out sub xor jg (bad) rcll mov mov es add adcl adc fisttpl leaveq imul sbb pop popfq lahf fdivrs fisubrl scas or out jmp (bad) (bad) mov adc cld (bad) sarb xor (bad) or je outsl pop int3 callq fcomi rex.WRX add icebp jno push iret adc lea mov push pop movabs fistpl fsts sub lock xor adc mov mov and sbb test cmc add sub cmp fnop adc ss imul add jne jmp jb xlat add cld and xor jrcxz lret rex.WB rex.RXB gs rcrl or fstl sete callq movslq mov test add hlt mov adc outsl int mov jg fnop rex.WB xchg push incb cwtl cmp add rorl incl adc xchg rex.WXB add movsb xor icebp jbe xchg cli (bad) fmuls lret sbb cld clc cwtl lods xlat adc xchg stos jne popfq fild popfq rex.WRX (bad) xchg adc sub lock std test mov fsubrl xor rex.WB and sbb xor (bad) movsl insb ds cwtl mov cmp sbb rex.WRB outsb shll or (bad) scas int3 flds sub lahf std (bad) jne adc (bad) adc addr32 fwait callq jmp xchg xor xchg add mov jmpq sbb (bad) pushq lahf push jb mov leaveq (bad) sbb or or stos divb rex.W mov mov and (bad) (bad) scas fwait hlt cld pop mov rclb rex.RX loopne clc (bad) adc std add xor pop jle callq icebp rorl mov in xchg pop std sysret xchg jno pop mov repnz (bad) rex.RB mov (bad) js jae out jo xor (bad) mov and mov push adc rorb cld hlt stos and idivl (bad) xchg lret loop or (bad) sbb (bad) fisttpl jns mov pop xchg (bad) mov xchg mov mov add mov rex.WX or mov (bad) lahf (bad) lock cld push xchg rex.WRXB cmp (bad) or lock (bad) jmpq (bad) jrcxz jno retq repnz popfq movabs in stos mov iret (bad) mov sbb scas or rex.RX push cmp out or mov mov and xchg (bad) outsl in cmp movabs cwtl cli (bad) xchg movabs hlt lock adc (bad) cmpsl add rcrb sti add or (bad) xchg in xor loope or or scas out mov out cli rex.WX scas jno cmpsl jmpq (bad) out ja or (bad) mov (bad) lret (bad) jp movsl fldl push cmc xor (bad) movabs mov andb shrl outsb pop adc cmp add mov (bad) xor (bad) callq pop in jb scas callq (bad) retq mov (bad) incb lret enterq rex.XB movl mov pop push add mov movabs push adc sub (bad) negb sti (bad) test iret cmp enterq (bad) (bad) hlt jge add mov mov jae add add movslq jae repnz lock push (bad) adc or test stos out loop insb cwtl retq xchg pop adc sbb adc movabs in xchg enterq push movsb mul rex.WXB rex.X fsubr cwtl imul xor in (bad) jmpq (bad) or test cmp jp mov (bad) xor stos rcll (bad) mov xor add (bad) (bad) mov fwait gs fcoms cld rex.WRX js ss insb adc (bad) add addr32 lcall movsb in rex.X lods fdiv sbb push mov jp rex.RX or push test mov push (bad) (bad) or add (bad) test jo pop cmp es fcom mov mov icebp fcomip (bad) jno mov ficom callq lods iret lahf (bad) (bad) stos (bad) js rcrl lea clc notl (bad) ss mov insl out and xlat rex.RX in sub xor in add jrcxz and (bad) or (bad) adc out ja xchg fidiv jmp rex.RB lret xchg (bad) mov orl sub callq push pop add data16 ja pop jrcxz (bad) fdivrl insb inc (bad) repnz or (bad) mov (bad) je fnstenv stos mov fstl cwtl lret es mov adc hlt clc adc cmc mov stc cwtl jle mov ds lock mov hlt jge rcl callq repz sub fwait jmpq (bad) fsubs cmpb xchg insb push add (bad) or rex.WRX or sbb cmp xchg jmpq sbb push cmp subl cmp mov fs out ss jl in and jmp test xchg movabs push out js mov (bad) (bad) ja cli xor or movslq fcmove push xchg repz mov cld (bad) mov jno,pt clc in mov and xchg icebp mov push mov (bad) and rex.RB rex.RX repz adc lret (bad) add movabs fadds mov adc test shrb push (bad) rex.RX movsl mov pop retq (bad) icebp mov add cbtw and (bad) fadds sahf xor mov mov lock stc cmpsb nop addr32 xorl rex.RXB push test movsb (bad) xor cld gs cli jmpq push test mov mov mov js int adc add and sbb rorb rorl push cli fsubl xchg or fcomip xchg rex.RB or rex.WR and jp (bad) add mov ficom out lret movhps push adc scas jbe mov adc mov rex.WR (bad) mov pop (bad) (bad) xchg adc pop mov jbe xor (bad) adc xchg sarb lods mov outsl jo (bad) es cmp or sbb adc callq negb pop enterq in xchg lock cmpsl xor mov fiadd sbb repz (bad) mov jge test xchg clc clc sbb adc (bad) xor xchg sbb (bad) int3 adc vmovhps fcompl xlat push mov movabs stos jmpq rex.W adc (bad) jl movsl movabs lods and xor cld add adc paddsw push adc or nop xchg (bad) hlt mov rex xchg jns icebp lock sbb mov rcrb (bad) and and adc rex jge jrcxz leaveq xchg mov lock scas adc fist or retq scas (bad) notl out (bad) bswap push mov cli in repz lret sbb lods scas sbb xchg rex.WR jle sti divl rex.WX int3 lret (bad) stc (bad) adc or jle (bad) scas xor fwait cmp je xchg push clc fs loope cld sahf in fs cmp gs cmp (bad) and fsubr sahf gs pop lock rolb mov pushq mov int scas sub fistl (bad) rolb xchg mov sub cwtl enterq pop adc cmp pop in (bad) adc lret jne rex.WXB jno jo sub lret callq test nop xorb rex.WRXB (bad) rex.WR int3 and jmp jmpq cld adc lock rex.R xorb (bad) mov int push stc or xchg fs rex.WXB sarb sbb fistp fs test movabs cmp jg in out (bad) (bad) sbb adc (bad) cltd in fisubr int3 (bad) add jnp fcmovbe loopne cmp pop jo xlat je mulb callq sub std std adc (bad) xchg mov mov fistl xor adc (bad) (bad) xchg retq mov int add push retq ja (bad) and mov xchg out lea sbb stc push mov sbb or repnz movabs rex.WX jne fldcw xchg movsl mov lahf ds jno (bad) repz (bad) mov sbb in (bad) mov or xchg mov test or in (bad) xlat mov out scas mov std jl movabs (bad) pop stos add lret clc xlat rex.X cmp or test (bad) add pop push (bad) add lods pop adc callq adc sbb (bad) sbb push adc (bad) scas xchg mov adc mov out scas mov (bad) test (bad) icebp (bad) (bad) je mov repz (bad) lret or (bad) mov push cltd push fistpll xchg stc sub fistl xchg mov add adc jno adc (bad) (bad) pushq fdivrl outsl sub mov (bad) rex.B or in jne ficoml movabs out jo adc xor or cld icebp enterq push mov mov cld adc and std sbb jl retq lret icebp push cmp loope rex.R repz sub mov pop fsubl mov add hlt cmp (bad) mov fdivrs imul add push cs (bad) and imul add ds mov xchg std jb mov adc sbb sub xchg (bad) xchg or rex.RB cmp sub cmpsb rex.WXB and movsb repnz rorb add imul add push lea fist jle xor mov jg retq leaveq adc xchg rex.W iret in adc cmp or movabs adc (bad) fbld loope or xchg fcomps xchg in movslq cs push (bad) xchg jrcxz cmp sub scas (bad) cwtl rol mov (bad) movabs (bad) jnp sbb push pop loop adc sub imul je lret lahf or rex.WB sbb add sub (bad) addl insl shll test xchg adc add or lea jbe rex.RB es lret or scas push xchg sti cmp stos adc repz mov addr32 sub adc stos mov cltd cmp movslq lret or idivl xchg push fnstcw (bad) out test retq adc jno xchg adc pop iret (bad) mov (bad) xor and mov xor (bad) rcr test gs callq stc ja jbe rex.XB mov (bad) rex.RB (bad) popfq xchg callq in jmpq or push xchg insl xchg mov jno jne ss mov scas (bad) rex.R clc add out mov cli ja sub (bad) mov jno lock jb xor rex.RXB mov add mov std xor (bad) xchg lods xchg sub jp rex.WRB jmpq cmp rclb mov lahf hlt lret int (bad) mov fisub in or pop sbb jp mov gs rex.WRXB (bad) add out popfq mov mov pushq (bad) (bad) (bad) shrl jmp adc div (bad) in xchg or rep rex.W mov (bad) adc sbb jo cmp movabs stos sub pop xchg sub or fcmovne xchg cmpsb out (bad) rex.WX jp and rex.WRX xchg fwait pop rex.X (bad) int3 (bad) mov movabs in xchg cmp adc xor sti cmp std callq (bad) enterq (bad) or (bad) in add cmp pop adc sbb sub hlt adc sub adc jnp mov push std or fcomps fcompl mov mov (bad) rex.WXB outsb push mov and pop sahf incb mov jle lock mov and cmp sbb pop clc scas ja nop adc sub shlb rex.WRXB adc xor or (bad) (bad) lahf out jo cmp retq adc cmpsb xor lcall add fs insl rex.WXB fmuls mov jrcxz clc ja notb pop adc rex.WR js push cltd adc fadds gs adc cmp add xor in sub fst pop (bad) xor push xchg je add and lret out sub adc push jne lret mov repz sub sub scas mov (bad) (bad) rex.RX addr32 cmc adc sub in xor rex.R (bad) test ficoml scas int mov rex.XB jmpq pushq insb cs xchg xchg movabs xchg xchg rex.R rex.WRXB cmp and leaveq cmpsl sbb insl push ficom fist lods rex.X mov cmp pop (bad) add (bad) sub or jno jmpq add jmp jne repz movslq ja jno rex.WX ss or (bad) pushfq and xchg xrelease popfq (bad) push (bad) xor imulb in std and rex.WRXB xor enterq jrcxz stc xor pushq std stos movsb xchg std mov out (bad) adc mov adc sbb gs mov cwtl fidivr (bad) jne rex.RB (bad) test xchg (bad) sahf adc fs icebp push mov ds movsb cmp xor test rex.W lock xchg (bad) fwait xchg jns (bad) (bad) adc callq jmpq xchg (bad) sbb loope (bad) adc and (bad) adc (bad) jl fist (bad) xchg adc sbb mov xchg adc (bad) mov insb jae clc (bad) mov vrcpps (bad) push retq rex.WXB cmp int3 or fs rolb jrcxz adc pop movabs mov shll mov repz (bad) push and fmul sub or (bad) hlt callq mov mov sbb rex.B nop sbb (bad) mov iret ss pop (bad) cld or rex.WRB adc rex repnz or xlat cli cmpsl test mov cmc or mov xor sbb adcl repnz (bad) add adc jae (bad) jns (bad) xchg scas pop lock mov rex.WB add cmp out (bad) adc sub int3 cs rclb add je adc push ja xor rcll xor (bad) (bad) xchg rex.XB adc sub xchg rex.X (bad) movsl stos adc movabs (bad) movabs mov (bad) adc push ficompl adc in (bad) divl adc push repz ds (bad) xor jp (bad) movabs repnz (bad) movsb mov (bad) fidivrl movsb mov mov (bad) int3 rex.W jno rex.X mov repz js and int jae pop cli imul and jae add and (bad) rcrl int3 (bad) scas andl or rex.WR hlt out roll xor hlt or jae (bad) (bad) out pop out cmp lea cwtl sar (bad) popfq xor rex.WR repz insl sub jne es rex.WRB mov lahf movabs add lock enterq jrcxz and or (bad) icebp push xchg add (bad) sub xlat (bad) (bad) test fbld rex.WRB xchg jle fsubp sub test (bad) repz rex.R mov sbb test and clc retq out sub out rex.WRXB imul xchg nop jle clc xchg (bad) xchg sub mov fiaddl out rex.WRB rex.WB mov sub (bad) mov or rex.RX es lahf (bad) pop push xchg (bad) and sbb mov pop rex.RX add (bad) cltd (bad) push or cli sub imul leaveq mov adc jae cmc push faddl xor int (bad) (bad) loop pushfq cmpsb fcomps repz (bad) in clc xchg cmp sub jae jmp pushq (bad) rex.RB sbb lea (bad) push jo sbb fbstp repz gs cmp mov xchg push fwait and fistpll mov (bad) xchg insb stc test data16 xchg jle (bad) mov mov mov hlt adc sahf cmp mov push (bad) fwait ror jo pmuludq adc out jg or loope lock rex.WRB test mov cmc jmp jo cmc jo mov (bad) (bad) enterq (bad) jb fdivrs xlat mov hlt jmp mov outsb xchg iret and stos popq stos mov jb mov jne rex.R lods cmp xchg orl add (bad) jmpq callq hlt add out sub mov sbb cmp mov xchg in scas (bad) pop mov pop retq nop (bad) xor cmpsl movsl imul adc (bad) rex.XB hlt adc mov ss imul adc mov jne adc lods sbb imul or (bad) xchg mov adc notl or rex.RX adc xor adc cmp adc lock and (bad) retq cltd mov xchg pushfq rex.XB clc xlat cmpsl (bad) movabs mov cwtl loop add mov mov imul cmpb or adc cmp lock rex.XB xchg lret in (bad) xor rex.WB (bad) adc movsb (bad) sub fidiv push sti jl repz lock xchg mov callq (bad) insl pushq or pushq push fisttp sahf cld pop lret leaveq mov idiv (bad) rcrl xchg test rex.WR clc (bad) repz js movabs (bad) fnstsw mov sti sbb mov jle rex.WRB xor mov jbe adc lret std pop xchg leaveq fistpl imul out mov sbb xor nop pop and iret rex.WRX sbb out addb sub adc cmp fbld sub rex.RXB (bad) lret imul (bad) ss sub (bad) jb callq test mov in rex.WRB cld xchg jb adc pop or xor jbe shl cmp sbb add sbb jl rcl xor or (bad) mov push es xor pop movsl js (bad) xor xchg rex.RB addr32 (bad) (bad) jo sbb (bad) mull fs rex.WRX imul rex.RXB fistp rolb mov pop paddw jl (bad) es div xor (bad) and out or popfq mov es or xchg add adc out or mov and push or xchg rcl (bad) adc stos test rex.B jp sbb clc (bad) or (bad) (bad) rex.WXB push mov rex.WX scas and cwtl lret (bad) lods (bad) (bad) mov sbb fistl adc sbb imul xor mov adc rex.WB rex.WX in add hlt popfq pop (bad) (bad) sbb (bad) mov scas (bad) cmc sbb loopne js pop jl loope adc test (bad) lods xchg sub (bad) mov (bad) pop pop es sub lret pushq mov push jg movabs insl (bad) (bad) and cli cmp iretw (bad) rex.RXB sbb sub rex.RB xchg sub jg sti pop adc (bad) mov enterq cmp in lods movslq sub (bad) in ds fcoml add sbb callq jae adc subb icebp adc lret lock mov (bad) outsb adc xchg xor decb movabs jae sub rex.WRXB push mov sbb movabs callq adc mov adc rex.WB cmp (bad) out mov stc lahf movabs or xchg (bad) enterq retq pushfq sub rex.XB sbb xor and add sub retq (bad) mov and rex.RXB scas in (bad) cwtl or (bad) test (bad) rex.R retq fdivs rex rex.WRX (bad) in or adc mov je rex.WRX mov xor jmpq (bad) (bad) and pop (bad) mov jle cld mov jg fcomps test ds iret in xchg sub or adc cld orb push mov xlat push xchg cli (bad) je fcmovnu sti sbbl (bad) in lret add pop xor jae int outsl mov add sbb add fadds movsl mov rex.WXB scas jno fisubrl test rex.XB out add or lods (bad) shl pop outsb mov pop in in insb sbb mov fild nop (bad) imull gs sub mov xchg jg (bad) add push xchg sbb sub add xchg mov sbb int cmc fdiv cmp rex.WRB xchg and enterq or adc or xchg nop cmpsb stos or jae xor or (bad) pop mov (bad) jns pushq leaveq callq or mov jg (bad) test jae fimull stc (bad) sbb xchg imul mov jo jnp mov mov hlt adc repnz incl xchg rex.WR rex.X rex.WRXB sub movsl xor add jae out ficompl cmpsl in adcb in rex.RB jne (bad) movabs movabs mov jmpq jne insl (bad) jmpq cmp rex.WRXB and adc cmp rex.WR pushq sub enterq callq cmp icebp pushfq div js (bad) mov rex.WX pushq out es scas fdivrs (bad) repnz (bad) mov xchg or out sub retq and (bad) loop shrl addl (bad) cmp notb sbb or sbb cld outsb insl jmpq (bad) (bad) jo sar in enterq mov rex.X pushq jge (bad) jno (bad) (bad) (bad) cmpsl xchg cld rex.RX mov (bad) cwtl data16 add pop rex.WRX (bad) repz fwait hlt rorb retq retq ds and adc (bad) cmp (bad) scas jbe (bad) push adc callq lret test sti sarb retq xchg and cmp cs callq (bad) movabs (bad) mov in adc fwait sub pushq (bad) sub or pop js (bad) rex.WXB repz jmpq rex.RX repz test (bad) out cmp in add mov retq sub (bad) add or pop xor sbb (bad) lods adc (bad) shrl cwtl add adc (bad) rolb cmp adc push mov xchg mov adc (bad) in or add adc pop rex.WR rex.WX jne test je cmp adc (bad) mov xchg (bad) js sahf std stos sbb pushfq cmpsl cld adc shlb movslq adc pop mov insl push clc int3 push adc (bad) (bad) je pop sbb cltd pop popfq lahf adc cmp sbb fs fadd and pushq adc jle xor clc jg pop (bad) push push mov (bad) hlt lods (bad) sub clc and rex.WX mov adc mov sbb or mov shl add mov adc retq (bad) (bad) or cs adc (bad) add cld iret mov or test fisttpl cmp jnp jl lock pop add mov rex.X (bad) push mov testl jns callq int mov movsb es nop and in mov mov (bad) cld adc adc scas (bad) jb callq xchg sub rex.RXB rex.RX (bad) cmpsb add xchg mov cltd fcoml mov jno pushq test sbb gs pushq (bad) repnz or cwtl or jnp callq jbe pushq vdivps lock add xchg cli xor movabs rex.WRX rcr mov cmpsl (bad) xor rolb push xchg cmp adcb fisubrl cli shrb sbb mov cmp mov (bad) lock jne sbb xor mov and xor xorl add test mov pop fcmovnu lock add loopne (bad) out out and push xor cltd mov cmp outsl (bad) xor gs (bad) and in lock xchg sbb add jbe in xorb xor (bad) icebp and test lods xchg and push iret adc leaveq (bad) (bad) leaveq movabs cmp sti out vmovupd pop xchg (bad) fsubrl hlt mov add out callq test std rorb out jo cmp jmpq xor cmp scas rex.RB in rex.WR leaveq outsb fucomi xchg sarb pop sub (bad) add lock cld (bad) fsubs rex.RXB push jg test leaveq imul nop push imulb callq add add fwait es jmp mov sbb imul data16 cmp (bad) (bad) outsb sarl jmp jmpq (bad) rex.WRX movsl jne adc cld ficomp pop mov lret jbe pushfq fistpll (bad) jno movabs outsl lods (bad) lods (bad) and or mov movslq rex.W fidivrl fsubl hlt es hlt push callq jp divl xchg retq and mov (bad) pop push sub mov cld and jo cmc fildl retq push rex.R (bad) movsl adc cmp xchg pop (bad) adc fs pop (bad) (bad) (bad) (bad) cmpsb ja add int3 (bad) repz hlt mov mov push shrb insl mov pop mov divw xor or fidivrl cmp (bad) shlb and cmp ja ds push (bad) lock cld (bad) adc insl fcmovnb jl mov xor mov gs (bad) (bad) (bad) xchg (bad) xor outsl jbe test and hlt popfq movabs (bad) (bad) mov lods lods (bad) add jno (bad) adc xchg jbe in xchg shlb cltd pop (bad) mov out xchg gs xchg rex insl jmpq (bad) callq mov jl lock sahf incl cmp (bad) es adc test mov and negb stos cmp xorl or xor popfq cmp (bad) cmp mov or int3 (bad) subl repz rex.XB movabs jno xchg out andb xchg pop je adc in repnz movsb hlt xor mov (bad) rex.X rex movabs lret shrb notl fistpll test jb mov rex.W rex.WX lret nop add push mov outsl ja je out (bad) ss xor sbbb or rex.WRX cmp sub jg bnd add movsb or (bad) mov mov callq test int3 callq cmp fbld push fistl mov out jno sbb sub xchg (bad) (bad) (bad) out (bad) add lock movabs sahf rex.WRX jno gs fidivl adc in (bad) xor rolb test mov negb or out (bad) rex in jge insl jmpq adc jg jns repnz cmp adc callq cli rex.RX cs mov xor outsl mov orl xchg mov or int (bad) jmpq jbe clc lret xor vandnps (bad) (bad) pop add loopne (bad) rex.WB xor (bad) gs sbb rex.WRB adc test mov rolb jno adc and xor jnp fistpll (bad) pushfq stos (bad) xor or rex.W cs add push xchg (bad) mov adc push xlat push cld push clc jae outsl sub (bad) mov leaveq sub cld (bad) rex.WXB insl adc mov (bad) lea sbb rex.WRB cmpsb adc sbb retq xlat xor jno retq pop cmpsl sub sub movabs jbe mov rex.WB andl add sahf mov lahf rex.W je in cli or jbe (bad) callq or (bad) lret sub sbb xor xchg xor cmp and lock in movabs push movabs (bad) jo gs (bad) (bad) (bad) enterq callq js movabs sbb jle scas shlb sub notb xor adc enterq retq cmpsb add and rex.WB (bad) test sbb fmuls (bad) fisttpll adc sbb mov clc jge callq (bad) ss add push cmp mov mov std retq (bad) out xchg sub (bad) (bad) jg mov push loope jne rolb rex.RX test jno jp iret and (bad) mov rex.X lock (bad) mov (bad) sarl or ds or jnp xchg pop callq mov outsl push (bad) xor incl pushq xor or push scas int3 rcrl callq outsl rcr cli and pushq movabs cld xchg imul sahf movabs in xor ja add cmc movsb jle add xchg push cs jmp mov in mov repnz sbb lods cmp (bad) pop xchg add mov adc xchg (bad) or rorb xchg sub out or ja fdivr xchg rorl xchg (bad) int push add punpcklbw scas cmc mov (bad) rex.X and cmc adc enterq add add cld subl pmaxsw mov (bad) or test xorb int clc rex.RX rclb shrl pushq out fs (bad) (bad) (bad) sti inc fdiv pop js in jb repnz rex.X in fmull mov add sub xchg callq vdivpd fbld or xor mov rex.WRX fcompl mov xchg outsb push stos (bad) sub lahf xchg xlat jg imul pop mov jmp gs repnz adc js imul push test rcll jb xchg icebp xchg push clc fwait mov fisubl std rex.WXB stos lret mov push or xchg fistl subl fdivs xlat rex.WRX (bad) jo or int3 mov lock xor loop push sbb (bad) sbb jge movabs data16 lea (bad) mov cmp adc or xchg sub test (bad) scas and mov jae cmc sbb mov xlat (bad) pop mov jns insb xchg xor or movabs rex.RB sbb sbb cli shl gs adcl adc rex.RX cmp lea push loope adc sub mov rex.WRX adc sbb adc mov sub adc xchg xchg rex.XB in insb jns xchg std sub fcomps xchg in jrcxz loopne adc ss fnsave adc mov (bad) xchg mov (bad) jle (bad) ja push adc cmpl cmpsb pushq mov jp (bad) cwtl sub shlb (bad) rex.RB rex.X push (bad) (bad) adc movabs (bad) loop (bad) pushfq test scas (bad) adc (bad) and leaveq (bad) stos outsb (bad) iret in adc jo stc fcomps fisubl out xchg fcoms insl jnp rex.RX push xlat mov sbb ja mulb or shll adc sbb pop out test xor jle out adcb cmp add push lret rex.WRXB xchg push repnz sub xchg and or (bad) (bad) jge (bad) (bad) bnd cs xchg int3 pushq callq rex (bad) cmc ja fsubrs in (bad) xor and pop adc cmovp (bad) retq (bad) mov pop cli mov enterq and mov orb pop push pushq notl jae (bad) mov push xchg or cwtl std mov movabs lods adcl push fstpt xchg adc xor stos rcl xchg adcl xor (bad) pushfq cmp xchg stc or mov cld (bad) repz out xor mov rex.XB xchg leaveq rex.WRX insl rcrb (bad) adc sbb pop pop movsb retq add (bad) jg adc (bad) fisttpll mov mov (bad) jno adc jnp retq and push sbb (bad) mov int xlat vmovd rex.RB rex.X and adc pop rex.WR cld (bad) xchg or out idiv mov js ds in cltd cs movabs cmp (bad) sbb pushfq hlt in pop and cmpsl adc sub clc mov int3 fcmovnu adc add insl or (bad) mov xchg rex.WXB adc pop mov rex.WRB sbb jbe jns xchg cmpsl push push sub movabs notb adc (bad) fstps jge out loop sbb mov add rex.R rex.WRB rex.WRXB sbb (bad) (bad) mov mov movabs mov movabs adc ficomp js testb es pop nop rex.W in (bad) fisub xchg (bad) adc or rex.WRX rex.W and negb push add (bad) fsub subb rolb fstpl mov fistpl add or jrcxz mov test and enterq add rex.WR lods mov rex.X fnstsw mov or (bad) mov or cmp fs rex.XB pop js (bad) or xcrypt-ctr cmpsl pop add callq (bad) (bad) cmp xchg repnz clc add xor add lock or loope adc xchg or frstor rex.WX in adc xchg fistp jne nop fdivs leaveq cmpsb gs push mov or (bad) (bad) jmp leaveq cmpsb rcrb xlat xchg lock cmp sbb jbe or mov stc sbb jno (bad) jle lock shll mov loope sbb sbb mov add adc bnd jrcxz rex.WX adcb jmp out xchg sbb pop (bad) mov add adc rcll cmc push add and ds or jnp cld lods rex.RB sub (bad) add jnp movsb sub clc addl movabs mov xor adc (bad) and (bad) jo stc jle adc cwtl lahf and push test imul ja cmp jp mov or rex fdivl jbe std mov xor (bad) stos or mov mov jno xchg (bad) adc pushq in rex.WB cmp or lret cmp jb mov mov movslq jp (bad) push jno jns pop xlat pop lods xor adc mov jnp (bad) (bad) callq xchg rex.WR fdivrs and xchg es rex.RXB sub jo repnz outsl cwtl int add insb mov lock (bad) xchg sahf sbb jmp push cs addl rcl adc movabs rex.XB rex.WRB test add adc or mov xchg (bad) (bad) shlb xchg (bad) movslq sub pop rex.RXB mov xor or hlt enterq rcrl out insl xchg jo addb rex.WRXB imul rex.RX je pop callq (bad) repnz movabs mov rex.R add int3 (bad) test rex.WRX lock mov mov push mov mov js (bad) or fnstenv push (bad) and adc push add scas leaveq xchg and jg sub or fmul add std lea fs callq fcoms jns add icebp adc in rex sub mov lea mov mov (bad) xor je push es adc rex.X xchg adcl out pop rolb lock cwtl rex.WB fs pushq sbb and push pop sahf jl or mov (bad) scas xchg gs int3 cwtl jnp xchg (bad) testb (bad) adc punpckhwd mov in add xor lock rex.WRXB int3 cmc jg sub (bad) sbb adcl (bad) stc (bad) je rex.WXB fsubrl popfq fcom loopne rex.RX push (bad) fcoml xlat (bad) lea (bad) xchg clc movsb push cmpsl decb (bad) and adc (bad) (bad) cmc retq rex.RX sbb push rex.X cmp (bad) pushq xor xchg xchg (bad) icebp pushfq shl retq cmp adc rorb pop cwtl (bad) repz cld in jg lods (bad) out add pop add je mov loope (bad) out shlb repnz lods lret xor fdivrp and lea imul or jo cld xchg pushq jb imul (bad) or or cli xor pop faddl movsb jns fwait push mov (bad) callq jbe,pt cs push js sub je rex.B addr32 rex loopne pushfq adc rex.WRXB (bad) rex.WX xchg jp mov rex.WRX sbb or (bad) xchg add jg (bad) lret retq adc imul fs sbb adc (bad) xchg (bad) adc int3 xor mov (bad) mov or or (bad) and push push ds jns out add popfq movsl cli pop (bad) adc lea lret push movsb add mov stos callq fist cmpsb and (bad) jne sti adc repnz ficomp clc rex.WX nop adc js rex.XB mov sahf add rex.WX pop stos (bad) xchg adc xchg cwtl movabs jmpq (bad) adc rex.RXB insb and ja push (bad) rex.WRXB lock sub (bad) (bad) sbbb faddl sbb jle ja mov (bad) mov es fist xor (bad) frstor mov (bad) xor cli (bad) push or mov jnp std jb sbbl xchg sub in (bad) rex.X xchg xor or xchg divb cmp or mov adc jno repnz stos mov out (bad) mov rol mull rex.WB ss rolb mov int3 (bad) or lods mov leaveq iret add mov int (bad) repz or pop fisubr lods mov outsl mov rex.X adc scas ss jge mov adc rcll sbb js mov and loope rex.RX lret retq adc (bad) pushfq scas lahf adc adcl je mov cmpsb adc fisub xchg adc incl rex (bad) or stos lret mov sub xor outsb (bad) mov sub pop (bad) adc adc insb or scas (bad) lods (bad) repz fistp or (bad) adc (bad) xchg rex.WR push in jge sahf mov push push cmp adc rex.W xchg faddl add subb and adc fldenv stos sbb (bad) jo sahf js adc sbb cli shlb cmp rex.RB xchg or adc pop shr jae or mov rex.WXB cmp int3 movabs xchg ror xor (bad) jns scas adc mov (bad) adc int3 xchg hlt rex.WX imul or jmpq fdivrs jg xor cmpsl (bad) adc es (bad) rex.RB rex.R pop fcmovbe xchg rex.RXB lret (bad) cwtl es stc pop fistpl add mov lods and sub pop je int3 jbe adc xchg jge mov data16 cmp adc cmp (bad) pop (bad) add callq jo jrcxz outsl (bad) adc xor or bnd mov (bad) add out adc cmp pop adcl sbb jo stc push mov callq or rex.X lods (bad) sub rex.WRXB fwait xorb (bad) int3 (bad) jmpq js or mov js sbb rcrl jrcxz fbld rex.B imul (bad) mov testb fs enterq cwtl repz sub fs outsb fidivr js (bad) (bad) (bad) (bad) pop jns ss mov repnz xchg callq in jnp movsb (bad) rcll (bad) cmpsl (bad) iret sbb mov (bad) in iret lods (bad) in mov mov insl repnz rex.RXB lock in jmp rex.XB mov pushq pop jbe jbe rex.WRB add (bad) jne vmwrite in cmp pop loope push repz push outsb ja lea fist xor mov fs xchg insl cltd (bad) jmpq sub insl orb (bad) movabs sbb rex.WRXB (bad) (bad) push (bad) sti (bad) xor leaveq mov xchg clc or and fldl jno cmp pop and scas jp clc fist (bad) pop std xor out rex.B gs outsb adc jns mov xchg xchg (bad) fisttpll add mov pushfq retq mov (bad) mulb rex.WRXB jmpq out add (bad) and sbb stos xor in rex.RB repnz fidiv or rex.WRX add pop sbb je icebp sub (bad) (bad) out and mov mov pushq test int3 sub test mov notl push enterq mov (bad) rolb sub xchg (bad) mov mov sub xchg testl mov mov add pushfq outsl in fild mov push cltd cmp pop nop mov cmp je xchg notb add mov or xchg fiadd rex.RXB rex.WRX sahf pop movabs push adc fs and adc fwait cmp adc retq fist pop jle fcoms xchg test out cs insb ficoml xchg sbb rex.RX repz gs jp (bad) xchg or xor and mov sbb (bad) sbb xorl (bad) test test adc lea (bad) ss ds jp sub or (bad) cmp loope (bad) xchg sub cs (bad) fsubrl xchg (bad) cld sub flds pop (bad) adc xor ds or (bad) (bad) xchg (bad) (bad) (bad) (bad) (bad) es adc and mov sbb sub out jno fwait out rex.WRXB mov test (bad) (bad) sbb out xchg mov rcr (bad) pop or nop (bad) push stos rcr (bad) out cmp (bad) fs cmp push in mov insb (bad) mov (bad) xchg mov jne lahf fs rex.WB rex.RXB imul fsts outsb rex.WR addr32 rex.WRXB xor in loop out rex.RB ficoml cs jo xor or (bad) movsb adc rex.W mov pop (bad) outsl mov adc ja in mov (bad) loopne test rex.WB repz retq add mov cmp and lods mov (bad) scas (bad) xlat (bad) mov xor adc stos rex.WB fildll div mov sub (bad) adc rex.WRB repz pop out retq jl (bad) pop adc rex.B stos test mov adc (bad) push mov sub shrb repnz movslq and retq adc jl mov enterq sub rcll pop retq (bad) mov iret lods push icebp sbb addr32 sub and or jne sbb lret (bad) sbb xchg (bad) cmp mov xor jmpq adc xor stc imul icebp jbe mov rex rex.WB sarb movl xchg and or nop rcrl cmc in data16 jg mov adc (bad) movslq or repnz (bad) mov (bad) jmpq fistpll (bad) ss mov fistl shlb pushq mov lods and fildll mov add or (bad) mov mov rex xlat ja lahf retq stos movabs add xor and cmpsb rex.RXB sbb pop mov jbe callq movabs rex.RXB jae pop mov xchg cmp (bad) cmp addl cld test adc outsb push divb adc (bad) addl repnz icebp xchg jmpq jmp cmp add (bad) stos or int3 int3 jmp (bad) adc mov shr loope mov adc jg cltd pop sub adcl push jb xor cmp movabs out sub adc movabs (bad) or jp mov adc hlt popfq cld jmp cmc and ds (bad) xor cltd (bad) repnz rcl mov cmp mov xlat js push rex.RX rex.RB mov int movabs xchg sbb adc jbe fild mov scas sbb mov (bad) fdivrl retq (bad) cmpsl test sub in adc sub xchg (bad) fcompl pop clc (bad) int push add xlat and int adc jb xlat pop adc sahf js in adc faddl ss adc sub xchg cld push cmp outsb in enterq js or or adc jb mov movsb movabs pop or mov (bad) nop push div mov jmp jb cmovo stos xlat jmpq ror rcrl insb (bad) mov add cmpsb mov push subl and (bad) out nop mov pop pop jae (bad) jne sub idivb clc jne in rex sbb push sub sar (bad) xchg xor hlt mov mov push xor jle and and add retq repnz movsl cmp sbb (bad) xchg rex.WRB sub push mov cmc rex.RXB fist cmp jno (bad) ja adc push movslq or or cmpsb notb xchg hlt roll test mov or (bad) jne movb ss or jge idivl jb fdivl mov pop sub adc callq (bad) stc loope cmp (bad) sbb cmc mov outsl cwtl scas rex fwait adc fnop mov cmp lock (bad) xchg js (bad) (bad) stos push cmpsb fs imul xlat cmpsl clc sbb mov insb fcoml test outsb movsb xchg adc mov icebp add pushq mov rex.X insl (bad) rex.WRXB cltd pushfq (bad) mov adc movabs (bad) pop (bad) or test push adc cmp sub push push cmp mov fstpt enterq xchg ss (bad) in leaveq sub cwtl scas cli (bad) callq sti jns mov (bad) and (bad) retq (bad) retq jne pop movslq push (bad) (bad) (bad) add rolb jge mov fisttpl and cs js xlat std (bad) adcl scas adc rcrl xchg sti jmp sbb mov mov outsl mov fisubr ficompl jl sub lret add movslq std test jmp adc add pop test fisubr rex.X xor stc rex.X adcl sub xchg or (bad) in mov (bad) insl sub fist adc (bad) (bad) mov rex.RXB sahf (bad) (bad) mov and push mov rex.WRXB test sbb (bad) retq (bad) orb sbb scas xchg repnz jns (bad) sarb (bad) xor jae cli sti (bad) (bad) mov shrl add imul imul ffreep movabs sahf in sbbl rex.X out idivb loope fnstcw mov pushq (bad) xchg (bad) repnz cmp orb leaveq (bad) lahf lret mov (bad) in and cwtl xchg fmul (bad) rclb cld pop add hlt (bad) push test or clc (bad) (bad) sbb rcll sub adc fisub sbb cld jl adc add xor (bad) adc clc outsl cld rex.RB jno push xor xchg adc pushq (bad) enterq imul adc addr32 xchg add adc leaveq rex.WRX adc sahf and (bad) stos adc cmc jp rex.WRXB in vcvttpd2dq jg mov in mov pop adc mov int3 lods mov jmpq jl (bad) adc in and out pushfq lea pop movabs sub push xchg repnz rex.XB sub cmp rol push cltd xchg movsl lret adc jo mov adc (bad) sub enterq pushq sbb xor (bad) (bad) sub test gs or cmp and xor (bad) movsb lock repnz rex.WXB addr32 sbb jl (bad) (bad) stos rex.WRX rex.R rolb (bad) (bad) in cmovp jl or xacquire jae jns fdiv movslq callq out sub out xchg lret pushfq pop cmp sbb xchg unpckhps push ss mov cmpsl (bad) enterq pop sbb popfq (bad) adc jbe cs adc pushq fs jrcxz lock jp cmp jbe ficompl std rcll add mov add add ja pop jmp test jl adc sub adc jrcxz popfq movsl jne jge add sbbl rex.XB stc pop cld test jnp add rex.RXB xchg sbb mov mov xor callq (bad) iret rex.X rex jl rex.XB ss stos mov rex.XB (bad) jbe cltd retq (bad) mov or mov adc lea xchg js imul jne xchg jrcxz out (bad) xor fwait pop movabs sbb add rex.WRXB (bad) xor in hlt flds stos (bad) insl jl xlat push movabs adc sarb rcrb int3 fmull sbb movabs xor (bad) (bad) push push or cmpsl (bad) cli pop insl add jb add cmp jno data16 sub cmp (bad) mov callq mov movslq push mov pop insb callq mov rex rex.RX fwait (bad) stos push enterq bnd or xchg shll lods rex.R sahf addl mulb add cmpsb push add sub or mov cmp lock (bad) jl xchg frstor lock adc mul int lahf (bad) repnz jb jae add in callq js fistl adc xor not std sub loope jb lret xchg (bad) sbb xchg int3 mov notl xor rex.W jb (bad) icebp callq jnp cmpsb fwait int3 adc mov movabs mov out int ds (bad) in mov repz push adc mov fidivr outsl push (bad) stos test fild enterq mov sbb (bad) mov jb cmpsl scas lahf mov xlat add lock imul cmpsb in jp sub (bad) movabs cvtps2pi rex.WXB add rorb add lahf lahf sbb nop xor mov iret pushq and fnstsw mov add (bad) cld lret movabs stos in (bad) gs xor and (bad) es add xor jge,pt add (bad) (bad) xor or test sbb or iret push (bad) (bad) fcmovnbe test fisttpll std movabs enterq imul movabs cmp fsubr gs (bad) (bad) mov push pop adc rex.X repnz mov rex.R rex.WB (bad) push mov (bad) xor sahf jg mov rex.R callq (bad) cmp add lods push push (bad) (bad) (bad) (bad) loopne repz pop fistp or and (bad) test outsl mov xchg (bad) (bad) adc add pushq (bad) jrcxz xchg hlt jge adc jb pop cmp lret mov stos out movabs adc movsw cmpsl lock xor rex.WB loope or add jae xchg or clc cld fbld sbbl loope movsb pushq sub rex.WXB xchg out repz adc test cmp rex.X fistl jmp test mov jle jno sub xchg push fnstcw or pushq pop sbb mov jo push cmp ficomp insl adc (bad) fwait add in movsl mov js and and movsb or lahf (bad) jl icebp test outsl (bad) adc movsl add rex.X ffree jge sub (bad) lods mov and (bad) ss addr32 fsub (bad) loope imul mov scas add adc sarb mov add or fs xchg cmp sbb fidivl pop lret mov or or rex xchg adc mov shlb xlat push jnp leaveq ss in (bad) jmp adc mov (bad) jge pminsw lods divb cmp stc out movabs pop rorl (bad) lret sbb mov sub push pop callq adc cld ja loope cs movabs adc fstpt clc mov movabs lock (bad) xchg push movq mov adc lret (bad) adc xchg imul lods and sub (bad) xlat out loop jmpq rex.WRXB and mov adc sub addl mov or sarl (bad) std adc push rex.WXB rex and (bad) lods xor pop addr32 jne cld adc or fcomps adc enterq adc (bad) (bad) and adc mov iret mov popfq (bad) addr32 sbb mov adc sub mov (bad) cmpsl add loop sbb insl scas (bad) mov mov (bad) adc mov sub lock test (bad) jbe subb mov push enterq ds adc xlat or add js rex.WR and jb repnz xchg rex.WRX repnz callq js add ja (bad) rex.XB add out adc (bad) or rorl subb or test pop xchg push (bad) out testl sub sub cmp sbb in hlt hlt movslq in retq jo fist (bad) adc jmpq jbe mov (bad) mov cmc sbb out int rex.XB push xchg leaveq lods push rex.WXB es sub out (bad) sub ds cs xor out jns (bad) pop movabs lret push xchg jne stos nop movsb clc fisttp and rex.WX or movsb clc lret push add shlb addr32 mov rex.RX rex.RXB repz cmp callq and jrcxz out lock sti jo (bad) xchg rex.XB lock adc jne sbb movsl out xchg adc fwait hlt mov fmuls sbb ja adc imul sub xor or stos cmc mov (bad) push jl (bad) xlat mov out mov adc xchg push icebp xor cwtl sbb sbb (bad) cmpsb sub (bad) adcl rex.WRB stc (bad) movsb data16 divb adc jns retq push mov sbb (bad) ss cmp (bad) pop insl jmp push rex.WB cmp js mov shl (bad) pop fistp (bad) jne jnp clc sbb and mov lret (bad) movabs adc mov jrcxz std adc (bad) shr insl adc (bad) jle push or in adc rex.WX xchg (bad) cmp pop adc (bad) cmpsl gs fnstcw movabs movsb mov outsb and xchg or cmovge sub hlt rex.RXB add and cmp sbb (bad) xchg rcrl push pavgw jg shrb loope pushq callq sbb rex.WRB mov (bad) mov mov mov rex.RB xchg test lahf and xor (bad) fidivl jnp es and (bad) push (bad) mov (bad) repz xchg lret adc adc adc push adc mov add sarb adc sub xchg (bad) cmp pop mov sahf sub movsb sub sub push lahf and mov lods imulb loope (bad) out xor rol jno js or hlt scas mov in lock ror insl pushq ljmp frstor (bad) mov pop insb xchg jnp xchg xor fstpt xor pop lock sbb adc (bad) mov rorb test stos insb pop sahf sbbb push cld (bad) sub cld mov popfq mov test cmp jle add mov (bad) repnz jbe and add test adc or jge in rcll out rex.XB and mov (bad) sub push adc rex.WXB rex.WXB ss repz rcl bsf mov (bad) mov rcl out lret test (bad) icebp pop cmc and rex.WRX fsubr in cmpsl sub mov lods cmp cltd push mov clc fisttp add mov js jg repnz mov stos xchg nop (bad) and imul cltd pushq insb (bad) add mov jmp mov or test repz xor fcoms (bad) sub sub xchg cwtl (bad) insb xchg mov popfq or cli pop ja int rex.WX push leaveq xor je (bad) outsb or decb push rex.WRX mov gs rex.X pop xchg (bad) adc jb retq popfq not (bad) add add adc mov xchg adc (bad) add jl adc and adc sub and stos roll mov adc outsl add jae in out sub xsavec mov lret rep or (bad) (bad) and rex.RB adcb repz stos (bad) sub jmpq mov cs rolb imul scas jrcxz mov or stos (bad) add (bad) rex.W push mulb cwtl je stos sub cmp popfq movslq jne pop (bad) cmpsl leaveq int jns (bad) insb rex.R rex.R mov jno (bad) sub mov (bad) cmp icebp mull sahf mov in sahf bndstx jae cmp adc ss std (bad) jge roll jbe xor pop (bad) stos sbb rorl in mov or and sahf gs or rex.WXB callq xor jge mov and or (bad) (bad) and or push mov imulb xlat mov mov int ds popfq mov mov add repnz loopne jmp cld (bad) cmp xchg (bad) (bad) rcll rex.WRXB (bad) pushfq fbld movabs clc adc std cwtl pushfq pop xchg cs fwait cmpb jnp (bad) fisubl sub rex.RB rex.X retq xchg jrcxz or sahf or fcoml out sbbl adc sbb xchg sbb jmp sub adc int3 adc xchg adc ss adc jrcxz adcl (bad) rex.RXB and mov repnz rex.B mov push (bad) jno insb repz lea hlt cmp mov stos movsl mov in movabs rex.R pushq xor jno test or mov idivb mov jb rex.WB testl data16 nop (bad) rex.R (bad) sub add add lcall pop rex.WXB xchg movsl out (bad) mov pushfq rcrl jmp xchg mov in adc out add (bad) (bad) jne mov (bad) (bad) je repz (bad) pop lods mov imul mov idiv ja (bad) out movabs cmpsb xlat cmpsl fidivr adc pushq pop rex.WRB add movabs not pushq movsl jg scas addl lock (bad) pop and movabs push (bad) jp jmpq push xchg fidivl pop mov push cmp rex.XB sbb xor push movb jg sahf (bad) in scas fcoms push mov sub rex.RB es lahf adc ja cmp adc mov mov adc retq mov xchg sbb sbb adc rex.X test rex.WRX movslq enterq mov clc and out push adc stos adc hlt cmp adc fsubrs jnp subb jmp or movl movabs pushfq (bad) int or jbe in rex.R adc (bad) out adc mov sub fistp (bad) (bad) sub enterq push add or retq gs fs adc data16 pushfq and xchg (bad) ds (bad) rex.WXB sbb adc test and push push fdivrs xchg clc (bad) add mov push (bad) (bad) adc or mov movabs cli adc cmp (bad) movabs adc fcompl sub enterq (bad) xlat (bad) (bad) adc mov test popfq lods (bad) (bad) sub rex.WB or addr32 rex.RXB cmp adc mov int3 in int jo (bad) (bad) ficoml clc jge mov sbb push stc rcl and xor sbb mov imul or lret or cmp mov xor cmpsb sub mov (bad) cmp cmp add mov xchg xchg cmpsl jl rex lock callq test xchg (bad) fldl repnz ss (bad) jo mov shl rex rex.B int3 lea xor or cld add rex.XB movslq movabs fstpl movabs test popfq int fdivl clc (bad) adc movsl (bad) idivl pop sbb (bad) loop mov mov jb adc push int3 mov fdivrl (bad) cmp jmp adc in sub cwtl mov (bad) ja xchg popfq fadds sub fwait adc (bad) int3 (bad) or js add adc or adc (bad) movabs sbb mov pop outsl sub xchg (bad) notl mov push rex.WRB push (bad) cmp adc cltd clc rcrl test pushq loopne or outsb xchg cmp adc (bad) cwtl cmp loopne nop fcoml adc vpextrw rex.WRB fimul movabs adc leaveq mov xchg and add push add mov out xchg cli clc in fwait (bad) xchg ds (bad) mov mov adc jge mov sbb callq jnp rex.RB adc rex.WX std fdivr (bad) add adc rex.W clc jrcxz test test jle (bad) adc sbb lock or rex.X retq adc fcom lret je (bad) cmp mov ss out mov (bad) ja mov adc cmp sbb rex.X (bad) and adc adc adc in sub jrcxz xor push (bad) stos stos rex.WB (bad) in mov or mov adc (bad) rex.W adc add xor icebp adc cs clc test jmp push jp push push or xchg (bad) xchg int push fcompl mov (bad) je imul rclb jp (bad) add mov loopne jb (bad) pushfq cmp fisub adc or (bad) cmp add adc and (bad) pop (bad) and jl push jno leaveq pop (bad) (bad) jmp add (bad) mov sub test sub (bad) and rex.W xchg cli cmp pop pushq stc mov (bad) sub mov fdivrl movsb mov mov fsubs movabs push mov add fmull pop mov (bad) cltd cmp rex.B push adc cli (bad) rclb jg xlat push (bad) fsts pop gs mov xor jne push in (bad) icebp adc adcb or or adc fdivrp imul (bad) jg jge pushfq push xor adc cmp rex.WR jne sbb test xchg in or jae pushq mov add sub xor (bad) xor clc out js stc rex.WRX xchg movsl pop lret (bad) add stc mov mov (bad) push lea test pop adc push mov and add push cmp push rex jb (bad) movabs (bad) jno fist mov xchg callq lret orb (bad) rcll (bad) jmpq add cmpb incl rex.B out rcll rex.XB repnz cmp add subb rex.WRXB rex.B rex.WRB xor mov test or (bad) and (bad) scas cwtl xor cmp xchg mov xcrypt-cfb cmpsl and mov sbb (bad) cmp adc add mov mov cmpsl sahf movabs jle push push test cmp sub xchg mov rex.WB jp (bad) sahf repz cmp movsl outsb xor mov movabs or (bad) lods (bad) lock rex.XB (bad) push adc lahf jae adc jne mov lret cmp sub jae adc rex.WX (bad) rex.R push jnp (bad) sbb movabs sarb xor jb adc pop imul stos sub push or mov rex.WR jnp sbb adc pop lods test cmpl cmp addl jno adc pushfq (bad) cmpsl mov (bad) cmp mov sub rcrb movabs or movsb xchg test movq rclb and stc js fwait adc or (bad) ds mov jbe pop mov movsb mov (bad) enterq adc out (bad) movsl xchg jno or pushq leaveq xlat fistl negl repz jb jno ja rex.XB (bad) xchg test fs add scas or (bad) sahf xor mov rclb xor push (bad) (bad) jae mov cwtl repz mov fnstsw ror cli xchg (bad) repnz rex.X mov int3 jrcxz loopne xor loopne jmpq sbb rcr scas cmp js (bad) jl nop (bad) rex.WRXB rex.WXB test xor imul sub pushq or mov and xchg fldenv fiadd cmpsl jne or jae popq push mov callq mov mov mov pop push mov outsl rex xor rex.WRB retq (bad) fnsave and xchg rex.RB adc adc mov (bad) leaveq nop xchg adc (bad) mov notb rex.W insb pushfq xchg lock (bad) adc movsl js pop add clc fsubrl adc pop fs pushq mov movsl xchg xchg je hlt mov or insl (bad) pop (bad) rex adc jo cmc jnp mov setno retq adc xchg xchg movsl in movlps xchg scas rex.RX rex.RB enterq cwtl jns jnp push pop sub sarl mov rorb adc scas sbb fwait add nop and adc or repnz (bad) (bad) and rex.R int3 outsb or subb icebp int movabs (bad) add pushq sbb jge adc and xchg (bad) loopne pop insb adc sbb loop test callq int js mov add stos (bad) push fcoms xor adc and adc cli int3 insl adc divb lahf adc rex out int3 pop (bad) (bad) sbb cmp push xchg xchg jb adc imul out in insl jp adc loopne movabs cmp je (bad) jmp fcoms add movabs mov sub add cmp (bad) or rex.B (bad) or fnstcw xchg xor callq je movabs mov fs callq stos rex.WR (bad) repz retq (bad) fcmovnb (bad) cmp (bad) in (bad) rex.WRXB adc test cs popfq xchg xchg add push popfq mov (bad) (bad) mov jne out bswap (bad) sbb xchg iret rex.WXB and in je pushq jmpq jnp scas adc (bad) jg adc push mov rcll iret test push xor rclb and cmp or mov mov movabs je mov adc and (bad) xchg xchg mov pop pushq mov rex.WB rex.WR jns xchg loop mov (bad) (bad) mov add adc es jrcxz adc fbstp or and mov pushfq mov jo pop sbb rex.WRB pushfq push (bad) (bad) mov pop and xor mov cltd clc (bad) sbb xchg cld incb or jle jno (bad) (bad) sti addr32 mov bnd movabs cmp xor ja shrb sbb xor sbb cwtl sbb jno and xchg ds loop mov or ficomp or outsb sub out in and scas fimul mov clc out cmp gs cltd retq mov sarl cmp jl fnstenv push (bad) xlat sbb fsubr js fcmovnb test fadds mov add and sbb retq jmp xchg cmp mov adc lea xchg sbb mov lock in and jl or pop mov sbb sub and enterq adc push rclb rex.WX sbb cwtl mov lods adc jge out cmp stc pop scas jno icebp in jb (bad) sbb add movsb pop pushq (bad) push cwtl lret ficomp sub and (bad) rex.WRB iret adc rex.RB data16 (bad) (bad) test sub mov sti (bad) sub jle xchg (bad) jo pop rex.XB gs std and pop sbb xor push insl retq fcoml data16 or stos imul cmc rex.WXB pop repnz cwtl lods add add sub jbe push rex.WRX rex.RB in jb je rex rex.WRX rex.W es and in (bad) in jae ja adc fistpll xchg mov lret rolb cmp xchg je (bad) movabs leaveq lret repnz mov adc or clc jge sahf xlat pop pop (bad) movsb mov adc lods ja mov insl fbstp jb shlb jne stc cmp (bad) xor jg movsb lahf cmp xchg jb clc fstpt xor (bad) (bad) jrcxz sub add push cmc pushfq lahf pop adc xor xor fwait pop es adc (bad) push push fsubl rex.WB jmpq fdivr jmp push sbb cmpsb movsb add pop and scas ss rorl in jg pushq push rex.WX (bad) sbb mov push cmpsl mov add add cld xrelease retq add cmpl and sar lods jmpq repz rex.XB (bad) (bad) sti stc adc lahf xor divb xchg test rex.X mov nop int3 (bad) adc cmp mov leaveq pop (bad) add psllq (bad) rex.WRXB lock mov test xchg push jb rex.WR notb adc adc stos adc xor jae xchg (bad) pop and sub push adc sub js movabs rex.RXB imul add add rorb add push mov callq sbb rex.WB mov vmovlpd fdivr (bad) in pop jrcxz iret notb xchg int3 jns jno (bad) (bad) stos repnz sbb adc xor fsubr repnz (bad) fwait mov (bad) pop and std add xchg sarb mov movsl mov fdivl adc pushq add out rex.XB js int cmc clc fstp sbb (bad) xor xor es fwait adc mov (bad) mov (bad) xchg adc outsl pop loope (bad) clc (bad) adc cltd (bad) mov cmc xchg jp lahf xchg add adc fisub (bad) xchg test pop xchg sub or incl int3 repz mov adc (bad) rex.RX rex.RXB cltd sti (bad) add push insb push (bad) pop xchg (bad) pushfq xor (bad) mov rex.WR rcrl jno adc (bad) movabs xchg adc mov cwtl (bad) loop movabs jl mov popq addl icebp xor rex.RXB movabs pushq in jle mov retq lock (bad) add cmp rex.RXB sbb (bad) pinsrw js xchg cwtl cmp rex.WB lahf cmp rclb std and jrcxz push jl scas stos mov or mov push (bad) jmpq jb add cmp mov pop pop test fistpll (bad) hlt push sbb hlt add out jp rorb add nop sbb add rcll xorb addr32 and test retq push rorb and neg cmp scas (bad) cmp callq xor or cmp insb pop in add sbb or (bad) jb mov jmpq (bad) cs mov cmp scas rcl movabs popfq fimul movabs rex.WB sub xchg sarl callq and jl mov xchg pushq adc stos rex.WR pop adc callq push (bad) clc (bad) femms cmc clc jne fcomip push sar int adc rcrl shrl mov jno js imul mov push test rex.RX rex.X (bad) xor and mov jae jp sti (bad) mov push rex.RB adc and (bad) cmc mov adc repz push outsb and imul xchg mov sub (bad) (bad) (bad) in movabs clc callq mov mov (bad) jge adc in (bad) cmc xor adc lods or in sbb cmp std adc xchg rex.R hlt sbb rex.XB jmp (bad) mov nop (bad) andl and ss mov add mov (bad) cmovbe imul sbb push (bad) mov popfq (bad) xchg sbb xor (bad) outsl adc pushfq adc int xchg (bad) adc enterq adc and (bad) je adc xor es stos jne test adc in int jp (bad) pop push rorb rex (bad) (bad) loop sbb (bad) pushq lock jo sub out rex.RXB cmpsb out pop imul add loope rex.WB rex.XB or and mov (bad) (bad) sub fldt mulb rex.WRXB (bad) sbb push mov sub mov (bad) callq in out scas push jbe push mov rex.WRX sbb lock mov jne outsb adc xor (bad) (bad) rex.WX xchg popfq xchg in pushfq mov cmp insb and (bad) xchg ficom (bad) mov mov sbb xchg sub rex.WR je and cmp (bad) jnp xor mov stos xor lahf movabs and add jno adc mov push loope enterq repnz add (bad) add rex.RXB rex.RX rex.WX lret rex.WB jmp add or hlt adc lahf jo add pushq sbb lods mov adc incb sub sbb jp fiaddl fistpll outsl cld (bad) jo mov shrl mov repz icebp cmp cmp or iret (bad) std nop or mov sbb (bad) jp movabs xor mov incb jo mov (bad) or pop jg push rex shrl add lret rclb rex adc (bad) sbb mov (bad) rex.RB loopne jbe xchg cmp rorb (bad) insb rex.WR movsl je add pop jne and add imul pop mov xor stos (bad) enterq rex.WRXB test ja jns fistl add rex.B push push rex.WRX in and es movabs pop loopne sub pushq mov rex.B fwait ss cmp insl clc rex.R enterq rolb add lret iret addb fcmovbe sti out lods adc jmp mov pop mov pushq and jp sarb or xlat jbe orb pushq jns repz std rex.WXB rex.WRX (bad) xor xor adc (bad) sbb (bad) adc rex xchg pop leaveq xchg xor xchg mov xchg std rex.WXB adc test or movabs jo mov rex.X jne xchg retq and add (bad) adc sbb lahf (bad) (bad) cmpsl xchg cmp xlat divb sahf insl movabs or cmp insb push add push adc sbb sbb loopne mov addr32 pop movabs prefetchwt1 xor sub (bad) std mov int3 insl es stos or std data16 add or lock enterq push test jns (bad) ds pop out and pop movabs (bad) add (bad) int3 jbe callq sub add insl xchg rex.B int3 movabs in jbe stos lods (bad) fdiv push adc add pop add mov rex.WRX mov mov rex.RB sbb jmpq mov (bad) jo (bad) xor (bad) mov pop pop or xchg cmc ds or out imul and rex.X xchg rclb xor gs or ss mov (bad) movabs imul or (bad) clc pop ds rex.RB pop mov (bad) jb fwait push leaveq jmp adc cmp adc (bad) lock rex.WRX jmp adc rex.XB xchg clc (bad) mov mov rex.WRX mov mov shl mov rex.RB iret adc imul fistpl out xor scas sub cmp mov (bad) lock xor out adc fidivrl xor (bad) je andb scas and repnz stos stos jmpq xor jno mov pushq idiv rex.XB pushfq (bad) (bad) movsb callq cmpl sub fbstp enterq xchg fwait xor mov int3 xchg adc sub in xor cmp mov test cli jrcxz xchg ja or out cwtl (bad) (bad) sti adc (bad) cmpsb mov mov int (bad) jnp in enterq (bad) (bad) (bad) xchg shr stc (bad) adc push sbb (bad) adc pop movabs (bad) xchg js sbb imul xchg scas (bad) rex.WRB add insl (bad) xchg int sbb fwait adc rex.XB adc sub (bad) rex.WRX rex.WR pop adc xor iret xlat adc out lea jmpq sbb mov jb mov imul push mov movabs (bad) mov mov (bad) and iret test mov xor (bad) mov mov add pxor pop imul mov cmp xchg pushq and movabs (bad) rex sub fwait shrl mov popq mov (bad) vsubss rex.WRXB xchg xor (bad) add mov cli xchg mov insl movabs cwtl imul callq (bad) (bad) iret adc add repnz rex.R push jnp xlat rex cs loop (bad) test mov (bad) pop adc andb adc (bad) mov (bad) mov adc (bad) xlat ja push fbld sub cmc sarl sbb adc sub mov xchg jns sub pop (bad) jge fdiv sub cwtl jno test es callq add mov rex.RXB sub js (bad) (bad) sbb push or (bad) (bad) repnz iret mov rcl jb (bad) xchg icebp out and mov pop (bad) mov test adc lock (bad) rex.RXB sub iret rex.RXB flds hlt jns repnz adc xor ja adc and sbb gs nop add adc fwait jg adc (bad) (bad) js (bad) pop in pop repz adc mov enterq outsl ficom hlt bndldx adc or xchg add stos sar roll clc cld and rex rex.WR (bad) mov adc adc mov scas rex.WX rex.WRXB lock push adc pop (bad) xchg sub rex.WRB rorb (bad) pop jl insb (bad) (bad) enterq or add (bad) (bad) and add and (bad) (bad) in lods repnz jo push (bad) sub (bad) (bad) mov pop (bad) loope xor rex.WRX callq stos (bad) mov test jmp xor xor jnp bswap xor insb jg iret xor cld (bad) or pop xor and and mov xlat sub mov or or push adc jmpq mov mul rex.B js,pt sbb or jl insl insl clc lea cli (bad) fsubp rex.B jbe jmpq (bad) pminsw add or mov or sbb mov jo adc data16 mov push adc adc (bad) jb std adc jo and mov out push (bad) mov add cwtl push ss xchg cmp insl out lods cmp subb (bad) add or rex.R shrb and (bad) (bad) mov sbb (bad) in pop js orl imul mov or sub adc xor cli addr32 je lods (bad) mov adc sub lea jne (bad) popfq in cmp je sub rex mov (bad) and add mov add popfq (bad) rorb fscale (bad) es out jmp or (bad) jne in adc mov addr32 sub je lock jb xchg (bad) ja,pt hlt movabs cwtl jl paddusb adc (bad) mov rex.RX (bad) movabs (bad) addr32 fsubs cmc xor es (bad) (bad) jp cmpsl lcall push stos int sbb int (bad) and fwait (bad) popfq js retq test mov add (bad) jbe (bad) sahf jle fcmovne cmp fisub rol (bad) (bad) cmp pop adc jmp (bad) (bad) lahf in mov push jae hlt js cmp jl stos xor adc divb pop frstor lock cmpsb cmp movabs adc rclb cmp ds movsl xor sbb rex.WRXB cmp fprem test scas lods out xor sub add (bad) movsl adc (bad) std popfq mov (bad) cmp sub cli rex.WX shlb xchg pushfq jbe xchg (bad) (bad) gs and push scas lods xor clc jno mov fs pushq jae xlat pop icebp xchg jne push cmp in cmp fdivrl js and cmp or cli jg push mov or (bad) (bad) out and jrcxz lock xchg add (bad) mov sti pop adc enterq adc rex imul jmpq jns adc test adc (bad) pushfq es (bad) movabs jno pop jl rex.WRX test adc leaveq stos jne lahf pushfq xchg xchg cld jl (bad) (bad) add or mov insl rex.B and mov mov stc sbb sub (bad) jnp popq push jmp icebp jge adc (bad) cltd add pop mov movabs and (bad) rex.WXB movabs pop fnsave (bad) sbbb incb jno add (bad) add cld rex.X mov rex.WR or (bad) (bad) or xchg push popfq repz rex.WB out pop outsl out movabs push (bad) pop xchg ss fimull rex.XB mov cmpsb shrb and mov or rex.WRB mov push movsl or add rex.WR jle rex (bad) in cmp and stos mov fcoms xor sbb callq insl pop mov bnd (bad) sbb roll nop (bad) insb lea sbb test xor mov lret lahf jl mov adc add popfq repnz sub mov fs test sarl adc subw mov xor push adc int adc cltd (bad) pop sbb sub cmc sbb nop iret xchg (bad) or add mov jle (bad) cli cmc and repz (bad) (bad) js (bad) mov (bad) mov push adc cld lods repz movabs test xchg mov mov out push adc pushq repz (bad) adc add enterq push clc push adc (bad) pop mov icebp add push stc adc (bad) outsb retq loop hlt xor pop jmp add adc mov mov loopne mov lods rcll (bad) mov xor pop (bad) sbb mov mov (bad) cmp xor outsl sti jae xchg lock xchg (bad) adc cld pop xor add adc xchg adc retq or xchg rex.W push mov mov mov (bad) (bad) (bad) (bad) movsl (bad) gs or cld ss mull pop mov pop scas in jg out xchg mov cmp (bad) rex.B add push adcb mov test xor (bad) adc sbb adc fmull jno and xor fwait mov jle repz hlt adc stos adc (bad) (bad) lahf mov mov push mov add jmpq rex.RB adc add xchg mov fistl mov rex.WRB jmpq imul cmp sahf or cmp jne (bad) (bad) and jo pop stos clc mov mulb lea pop sbb mov outsl cmpsb scas mov or (bad) movslq jg stos clc xchg lret adc or jbe jle sahf js mov enterq movsl out movslq sub (bad) add rex.W jb mov callq es (bad) leaveq callq divb pop or jne jmp scas jne roll rclb sbb push (bad) cld mov mov mov (bad) stc rex.XB xchg loope sbb movabs cmp stc push rex.X (bad) (bad) jl rex.WR sub (bad) sbb push mov (bad) loope push adc insl hlt (bad) push lock pushq adc stc (bad) popfq rex.RX (bad) out test jae rex.RB je xlat (bad) fmull rex.RXB adc outsl xchg adc mov movabs test jrcxz cwtl (bad) (bad) xorps cltd cmpsb retq (bad) mov (bad) push (bad) (bad) adc rclb pop fdivrp mov push mov sub mov jrcxz xchg cltd xchg movabs (bad) movsb lea add enterq (bad) or pop cmp adc cli mov cmp gs push (bad) pushfq xlat popfq push rex.RB cmpsl (bad) divl and and (bad) xchg rex.XB (bad) (bad) testl mov rcrl stos sarl (bad) sub sahf (bad) in (bad) (bad) mov repz out adcb leaveq xchg or or (bad) nop xchg jnp jp mov add (bad) add jne cs (bad) mov sub rex.WRB cmp (bad) jp jb push lods xor ja push lahf in fucom imul xor sub iret xor (bad) in mov adc mov adc ficomp cmove adc in in (bad) adc or jge add cs add sarl retq adc movabs rex.RX jl push (bad) adc cmc jp cltd stc (bad) lock jg in faddl push or (bad) adc jno ss xor jo jbe stos (bad) fist data16 cli rex.W in jbe jrcxz xorb je movabs outsl (bad) (bad) jno sahf movabs rex.WRB cmp retq (bad) jp add (bad) loope (bad) adc ficom cmpl pop pop mov mov test add mov (bad) xor lret or mov mov xchg (bad) add push test push fildll (bad) icebp cld (bad) je or callq or jno sahf adc hlt add jge rex.XB shl (bad) (bad) sub je mov xor pop xchg cwtl and jne movsb (bad) lods in rex.WXB rex.WR fcomps push scas (bad) cmpsl (bad) mov mov fcoms sub scas (bad) movsl pop mov add rex.WRB scas xchg fbld mov insb (bad) je xchg ds cmp (bad) mov or lahf cmpsb adc rex.W (bad) fadd retq (bad) scas cmp (bad) fwait mov and jns (bad) fistpl mov andl (bad) mov andl js (bad) rex.XB fdiv ss fisubr sub or fmuls mov js sbbl jb xor cmpsl (bad) nop movabs in add out jle pop iret lret outsb xchg mov sbb rorl jl in xchg movabs pop xchg (bad) stos jns (bad) sbbl es add mov in adc jmp test (bad) outsl roll (bad) adc adc pop (bad) js (bad) mov cmpsl (bad) out xchg shll and pop xor mov mov adcl testb out adc out in popfq add (bad) cmp rex.WR mov mov xchg rex.RXB cs lahf or xchg repz pop sbb loope xchg mov test jg or lea or add jle mov jns cmp retq ds adc scas xor xchg adc push jp jl test adc and mov (bad) loopne cs test (bad) and js mov stos mov lods (bad) rex.W jp adc push push in and cmp (bad) data16 int cmp test push cmp (bad) xchg outsb jns adc jrcxz add push xchg fsub in movabs sub rex.XB (bad) (bad) icebp int3 rex.W fwait (bad) jbe mov cli lods movabs jrcxz cmc rex.RXB movabs push lahf rcrb imul (bad) mov cs xor xchg rex.X mov in jne rex.WX adc xchg push (bad) pop in lea xchg xorl jg add ss js jnp sub (bad) sbb xor sbb sub and add (bad) cs in sarb pop (bad) or mov (bad) jbe add (bad) pop test adc out lea xor je incb jne and cmp out (bad) mov xor lods adc rex.R (bad) sub (bad) iret xor mov cwtl mov jno pop pushfq pop and xor or xchg adc cli (bad) add sub xorl callq out (bad) ja and xchg mov je clc out gs cwtl jg cmovnp cmc jae shrb jbe sarb adc out adc cld orb movsl pop callq (bad) repnz rcll cmp sub jns adc xchg push cmc insb mov icebp sub and cmp out test add mov mov lods adc (bad) lea and lods (bad) (bad) sub or xchg movsl push mov and jp rex.RB int3 or (bad) cmp movabs rex.WX (bad) sub push mov popfq (bad) in es fstpt (bad) xchg lods in xchg adc clc and adc xchg rex.WRXB ss callq in fwait adc add cs (bad) cmpsl rex.WB xor sub nop jbe jns lcall or xor fcmovnbe rex.RXB notb incb (bad) cmp add lret rex.WXB mov mov (bad) or imul callq mov clc sub lea fdivs add insb adc rex rex.WX pop mov rex.WRB test xchg (bad) (bad) (bad) pop or test insl callq rsqrtps int mov (bad) pushq std sbb jae ss (bad) lods mov or (bad) pop cmp (bad) (bad) fs xchg movslq (bad) pop push adc mov mov int3 jmp xchg adc notl leaveq rex.WX or out out scas or (bad) mov fsubrs cmpsb test and adc stc movabs sub ds (bad) or jle in (bad) movabs jb adc mov in mov cmp insl shr push stc mov adc movabs fcmovu mov (bad) jns rex.B sub imul insl jnp (bad) ss insb jae and xor fisub fistp xchg cld (bad) or pop mov (bad) sbb (bad) in test cmp (bad) lret and or and add add cmpb rdtsc (bad) push cwtl jae xor jb sahf cmp adc pushq rex.RB stos test movsl cmc out (bad) mov (bad) jg sti lret fstp fcoms mov xchg xchg jrcxz xchg out (bad) sbb or dec rex.R sub or xor mov es xchg (bad) xor (bad) out xor push adc lret stos sbb stos insl or (bad) xor (bad) lret in mov jno fwait retq xor adc sbb loope (bad) stc lods int lret rex.WR adc mov (bad) je (bad) mov adc jns hlt xchg or (bad) cld or leaveq (bad) jg xor cmp push fdivl mov adc adc or xor adc (bad) pop stos out insb xchg repz sbb in cmpsb cmpsl or movabs clc adcl js sbb movsb in (bad) je mov mov adc (bad) ss mov adc add (bad) gs out scas jbe subb xchg (bad) (bad) (bad) ss movabs enterq mov js push or mov push fistl loop adc sbb jnp (bad) rex.WXB mov hlt xor jmpq (bad) (bad) mov (bad) xor (bad) xchg or and xchg rex.WRB rex.WX stos fdivr rex.RX hlt push lea scas xor scas rex.XB sbb lret rex.RXB add repnz incb adc (bad) je (bad) cmp enterq rex.W push pop pop mov mov in xchg sbb gs add (bad) adc repz loop or (bad) cmp rex.WXB xlat fdivp out jnp (bad) repnz jmp mov pop lret xor data16 out or xchg sbbl mov and pushfq add mov (bad) lahf jno (bad) (bad) jmp rex.WRXB mov mov jo mov mov jnp jno pushfq std adcb cs jno (bad) push (bad) sbb sbb xchg pop xor (bad) pop rex.B callq icebp fnop push cmp rex.RX add (bad) lret cmp getsec in xor adc rex.RXB xor jmp mov adc rex.WRXB jp sbb jmpq xor jmp imul adc xlat lahf mov jns push mov (bad) jl add (bad) imul imul cmp (bad) hlt sbb callq or stos test loopne cld push cltd jb fcmovne mov lahf out lahf add add shrb popfq or movabs shr rolb out out scas jmp xchg mov and mov fcompl imul push pop jl hlt xor mov frstor rcr or movabs sub jo push mov jge fs (bad) xchg fnstcw cli ss je repnz xchg mov mov (bad) (bad) adc (bad) or and (bad) mov stos (bad) pop rex.RX rex.XB clc (bad) adc rcr add outsb movsl out push movabs cmpsl mov callq hlt fldcw cld movabs std jge retq (bad) push addr32 enterq rex.WXB mov icebp int cld xchg cmp test cli rex sbb rex.R mov movabs rex.WRB cli std xor rex.WR int3 enterq loop adc lahf movslq sti push stos fwait (bad) add mov mov xchg fidiv (bad) jno loopne cmp int test movslq jp cwtl bts and or lret rex.XB and pushq (bad) fs jae rcll push fild jmp cmpsl (bad) jne lea movabs cmp jrcxz xchg int3 push je insb rex.X repz xchg roll mov icebp hlt movsb add rex.RX pop leaveq rex.WX mov pop mov jbe or (bad) mov rcrb cmpsl jbe push (bad) outsl sahf mov (bad) fnsave (bad) xor sbb imul push mov (bad) mov sub sbb insl pop or pop mov adc push mov cmc jmpq (bad) and rex.B sub rcr in imul mov icebp (bad) mov pop pop cmp rex.WX retq (bad) adc fistp (bad) xchg test xchg lock cmpsb cwtl je sahf jns rex.X (bad) mov fnop (bad) fsubrl or jae xchg sbb jb adc mov (bad) movabs xchg callq (bad) sub xchg xchg fs js nop xor rex.WB mov rex.R emms cld jge stos notb fwait test adc sbb shrb sbb fwait data16 mov sbb imul (bad) sub movabs xor ss cmp (bad) rex.WR scas push fcmovnu insl mov jb repz movabs fwait mov test in add out xor movsb int3 push fnstcw lahf scas rex.X cs add hlt js sub cltd mov repnz icebp sar mov fdivs adc or or xlat or fcmovu mov (bad) callq pop imul mov insb mov js and mov adc fcmovnu and movsl (bad) mov mov (bad) sub mov jmp (bad) add fsubrl iret std or sub cmp xchg push adc out adc (bad) mov pop (bad) xor push add pop adc add sbb jp cmp callq cmc xchg cmpsl sbb cmp cs shll cmp mov push (bad) loope rex.WX add (bad) cmc xor push mov sbb or rex.WX add (bad) push (bad) (bad) (bad) stos (bad) jo (bad) out pop xor cld or mov cli ss test xchg out loop lea rex.XB adc (bad) (bad) retq cmp adcl mov mov or cltd and mull test jnp (bad) (bad) and mov popfq mov sub in cmp callq jge or push mov retq hlt xchg or adc icebp pop cmpsb (bad) jge pop movsl jp icebp xor jg fcompl or sub rex.RB ficom sub (bad) pop mov mov outsl xchg movsl adc (bad) (bad) (bad) iret (bad) fbld mov add fcomps sar push jae rex.X adc sub iret push (bad) adc xchg pushfq (bad) and sbb imul sbb (bad) repz (bad) mov cmp (bad) xor mov iret popfq in incl movsl mov (bad) int outsl adc lods pop or retq lret sub adc (bad) (bad) adc xor jo (bad) rex.X cs gs mov (bad) sub nop push mov sahf lock cmpsl std rex.WX mov div roll rex.XB rex.WRXB (bad) adc loop fidiv cltd sub rex.RB fld rex iret in adc mov adc adc incl adcl add mov (bad) adc mov scas cltd (bad) or mov sbb movsl sub push lods out adc loope (bad) sub xor xchg (bad) je hlt pop adc outsl stc sbb jns mov js cmp sub push in cmp outsb test or stos pushq mov (bad) (bad) movabs (bad) rex.R and sub lret and rex.RX repz mov fiadd pop (bad) out mov (bad) out movabs cltd (bad) or sub (bad) jns imul nop jrcxz js retq adc jg movsl rcll (bad) retq (bad) movabs rex.X scas fmull xlat insb retq jb cmp sbb or jge mov iret fidivr mov sbb int3 retq insb (bad) pushq stos loope rex.WX hlt rex.WRXB rex.RX (bad) js sub adc and movabs xchg icebp (bad) (bad) (bad) rex.RX fwait (bad) cmpsb adc and (bad) rex.WRXB sbb sub push (bad) push stos callq mov in (bad) push (bad) (bad) (bad) adc sahf pushq mov pop fidivr fist cmp leaveq rex.WRX rex.WRXB xchg rex.WX jno cmpsb pushq scas sbb jnp icebp in cmp mov movabs jbe cld and adc adc mov (bad) and adc push (bad) adc sbb rex.R in mov xchg repz imul cmpsb test add or or xchg pop (bad) push or sub fistp xchg mov in cmp xor or (bad) sub out push (bad) leaveq sahf and rex cmp out rex.R xor rex.WRXB movabs es adc add repnz and sbb andl (bad) (bad) fldcw pop imul rcrl (bad) or insl xor sbb int3 rex.XB bnd and cmpsl rclb fcomp roll int3 xor lgdt or cmp jge xchg out sbb frstpm(287 and iret rex.WRXB rcll xchg movabs sbb rex.WB mov mov rex.WR pop in adc fwait xchg sub xchg movabs notb stos in cmpsl jle (bad) sub pushq cmp sahf push pop adc push cmp out or (bad) movsl clc es rex.WX push insl movslq add fmull (bad) lods sbb jnp and lock pushq (bad) wbinvd ss jp movabs rex.RB rex.WX rex.WRB push pop ficoml push scas jl cmp sbb movabs pop cmp push add (bad) sub xor mov (bad) push xchg adc push adc (bad) (bad) test xchg callq nop lock scas mov xchg or in push sub out add rex.WXB iret push xor or (bad) fwait (bad) cmp sub xchg jb xchg sbb rex.X outsl sub jbe movabs sbb mov cwtl mov adc sub jno pop (bad) ja jmp (bad) ds pop push or pop add clc (bad) cmpsl pushfq cmp mov int3 (bad) lock mov mov push xor (bad) lea mov jmpq test movabs popfq xor mov xor jge adc sbb stos jge adc mov retq clc out add rex.R (bad) (bad) int push xlat adc mov adc mov adc xor push cmp imul mov dec or sbbb out subb pushq cmp js add cmpsb outsb mov fs (bad) cs lea jno fidivr mov mov mov or rorb add xor cld icebp retq rex.X (bad) sbb xchg movsb mov push mov or mov push fdivr int3 fidiv (bad) (bad) adc (bad) jno pop out jb xor lret fs xchg lods pop or jg repnz lea push sbb ficoml (bad) rex.W movsl out sbb in stos ds out push fsubr lea lret adc mov int xor imulb nop sbb xchg and xchg clc adc (bad) (bad) (bad) or imul ja adc repnz lea rex.RXB callq movb hlt xchg fisttp adc lods sar xor (bad) in sbb xchg fs push pop or stos (bad) jae out loop xor sub xor push (bad) test cmp (bad) sti xchg lea (bad) (bad) mov imul flds jns xor imul repz cmc and loop mov mov add ds jmp jg repz mov mov enterq sbb xchg pop cmpl in pop xlat xchg add sbb cmp (bad) (bad) lret mov (bad) mov sbb pop movsl jge mov jp rcrl adc mov out rex.WXB mov mov jl mov pop (bad) add lea rex.RXB adc mulb pop out in movabs (bad) sbb in rex.WR rex.WX movabs retq fistl lods sbb test and rex.R xor stos sbb callq loop pop mov in fcoms jo movabs add fstpt icebp enterq andl or xor rex.WRX (bad) (bad) retq cmpsl sahf mov hlt shlb (bad) or iret cmpsl movsb (bad) shrb mov (bad) cmp push and movsb mov out int cmp adc out loope (bad) insb xor xchg push jmp jo or jnp lock cmp jmpq rex.WXB adc pop pop pushfq (bad) mov mov lock xlat mov repz movabs mov and fildll mov jp add (bad) sub mov rex.WRX fsts (bad) loopne (bad) repz rex.WXB adc (bad) imul test (bad) icebp out cmp (bad) nop jrcxz xchg ror outsl enterq mov (bad) (bad) push xchg cmpsb xchg movabs cli sti xor rex.B std xor jno (bad) pushfq cmpsl (bad) sub out cwtl jne push (bad) rex.WRB nop mov sahf hlt sub (bad) fisttp mov icebp and add callq test ja mov mov xor jmpq lea cmpsl xchg xor push pushfq enterq mov psubusb rex.XB pushfq (bad) callq cmp sahf ja testb loopne in sbb lock in (bad) (bad) jl sti pop rex.X cmp stos stc mov (bad) rex.WXB jp xchg movabs xchg jns scas and rolb (bad) repnz and shll test outsb mov (bad) push jne and or sti subb (bad) sub pop add pop adc neg (bad) push fidivrl enterq outsb (bad) lret (bad) fcomps (bad) adc jrcxz sbbl bnd rex.WXB (bad) in (bad) jno (bad) sub rolb rex.B push (bad) retq jmp (bad) push (bad) test xchg (bad) ja pushfq movsb mov loop xchg (bad) sub rex rex.WRXB (bad) adc add add sub cs scas iret (bad) xchg xchg push (bad) mov (bad) rex.RX rex cmp repnz fsubs mov (bad) jae repnz insl add rex.WRX sbb scas adc rclb adc (bad) ficompl enterq js (bad) cli pop sbbl sub pop and rex (bad) sarb retq (bad) lahf (bad) sbb push (bad) push (bad) (bad) xor (bad) ljmp or add repnz mov ja adc push pop iret retq xlat jno negb (bad) cmc (bad) jg ss pushq rex.WXB (bad) callq mov rex.WR cli adc (bad) popq xchg lock test mov (bad) out (bad) lock sub rex.X xchg stos ss clc adc and (bad) out sub imulb loopne mov lods out mov test jno retw gs cli mov mov popq rex.XB stc or (bad) and (bad) adc syscall int3 sub (bad) push jge pop hlt (bad) js ds jrcxz mov mov push lock popfq addb int3 and or test pop push jmpq rex.XB loop,pt jno incb pop mov adc mov testl cmc stos or rex int3 jbe rorb sti (bad) adc fistl repnz clc or cmp pop jmpq sub xor callq (bad) mov (bad) fsubrs mov insl retq hlt xor (bad) sbb in cmp (bad) xor (bad) movabs nop push lock outsl or mov mov lock (bad) pushq cmp mov lock iret cmpsl fisttpll push jle fsubrl int3 sbb mov sbb in lea sub hlt hlt (bad) or out (bad) shl jp xorl repnz pop mov mov std movslq rex.WR lret (bad) mov push retq jbe rex.RB xchg (bad) jns mov (bad) cwtl xor fstpt mov jp mov mov and mov xor out fisttpll scas mov int3 flds (bad) rcrb lock iret addr32 enterq sbb data16 repnz cltd movsb mov xchg and loope loope test (bad) hlt xchg pop mov (bad) cmpsl (bad) test xchg sbb mov jmp callq jge mov enterq rex.WX cld mov ja jb sar fistpl callq adc jle (bad) adc rex.WR push push loop or (bad) cmp rcrb addr32 clc mov hlt add jle add movabs ss mov popfq loope (bad) nop outsl movabs mov es icebp addl fldenv rex.WRXB out std jae pop jo (bad) negl ss cmp mov mov (bad) pop popfq mov mov sbb adc fdiv jp sub rex.RX mov pop push and sub rex.RX mov sub pop (bad) shlb cmp stos rex.R and fistp add enterq mov shrb movabs (bad) jb loope mov sub ds movsb loopne scas push out ja (bad) push xor nop sub rex.WRXB rex.X jg (bad) icebp (bad) fistl pushq add lods adc fwait sub movabs movabs cmp (bad) push (bad) rex.XB xchg hlt adc add rex.WB jo movabs test add cs scas adc rex.XB sbb cmc adc add push jle (bad) loopne push je outsb mov sub std (bad) add rex.WB add lock or test (bad) loop rex.X outsb nop callq movsl sbb in (bad) cmovns xor scas lret retq sbb lods mov test add inc adc mov mov callq std push vmovupd jbe fisubr or cmp jo jge sbb (bad) mov and imull push lret scas adc push movsb subl (bad) mov mov (bad) iret mov je (bad) (bad) sbb (bad) wbinvd cmpsl jl (bad) (bad) sbb mov jp (bad) fwait sahf cmp test adc in stos adc insb mov jno or (bad) sbb rex.RB or push mov (bad) xchg adc fbld movabs loop mov and lret (bad) cmc roll rex.WRB mov (bad) (bad) enterq (bad) cmp push enterq sub callq rclb scas (bad) xchg int addr32 loop (bad) or jp fsubl lock pop insl (bad) adc rex.B (bad) mov mov jbe (bad) imul cli (bad) mov or rex.B rex.W and lods lods (bad) push xchg xchg movabs rex.RX ja xor jle imul or adc fmuls mov mov (bad) (bad) movsl fcoms sbb mov outsb flds imul add add jl movsb cmp (bad) or (bad) push movabs (bad) in (bad) or (bad) scas imul std stc or add rcr and (bad) outsl mov mov popfq (bad) iret setno jae jae ss outsb (bad) (bad) push push mov mov (bad) test es jo hlt sub (bad) pop cli jl rex.RX adc leaveq fwait rex.WX or pop fdivrl xchg jp jb fs (bad) (bad) sbb xchg fild test in mov imul rex.RX icebp jae (bad) rolb (bad) (bad) rclb loop (bad) clc sub (bad) xchg rex.WXB int pushq or scas in movabs jns int cmp lea movabs sub lea out es andl fidivr adc lahf or (bad) adc (bad) jmpq (bad) stos pushq add (bad) mov (bad) rex.WRXB rex.RXB rex.WXB jno mov or jrcxz callq xor sbb in mov (bad) ficompl mov or xchg lods je nop lods repnz pop divb fwait sub xchg fbstp cs (bad) (bad) stc sbb mov pop jne scas (bad) mov add loopne callq es lock xchg (bad) sarl (bad) (bad) test lock pmulhuw (bad) add in (bad) jmpq adc push mov sbb std (bad) loopne iret test xor cli fcomip (bad) int subl rex.WB pop pop cmp (bad) imul (bad) xor fdiv int (bad) movabs cmp and pop imulb movslq insb mov push mov jno,pn rex.XB movabs insb jns mov ja xchg js fsts data16 out add (bad) adcb sub (bad) lret cwtl in xor push lock addl icebp rex.XB in rex.WB (bad) jmp and cmpl adc rclb xchg adc insl push hlt rex.WX xor (bad) vandpd (bad) repz clc (bad) xchg (bad) sahf (bad) popfq sbb lea (bad) loopne mov or sub jo (bad) rex.RXB cwtl leaveq (bad) in (bad) hlt rex.B rex.RB sbb rex.XB mov outsl sahf adc xchg cmp (bad) fiadd negl rex.WRB adc (bad) fcomps or push adc add adc jl xchg jg adc rex.WRX sahf xchg jnp rex.X jp (bad) rex.WRXB push movsb adc gs iret insl or (bad) cmp and ss lret mov (bad) loopne xor enterw sub xchg push callq adc addl (bad) imul or adc imul mov cwtl mov (bad) mov cmp mov xorb mov push imul rex.XB jne add retq (bad) scas std rex.XB (bad) rcrl xchg (bad) cmp sbb jne (bad) icebp mov sbb je sbb movabs sbb cmp loope movl xor movabs negb and xor cmpsl cmpsb lret (bad) lret sub adc sbb movsl and mov adc stos test es push (bad) cmp jg add enterq adc or mov (bad) stc adc jg shl jbe xor rex.WXB xchg mov fstpt rex.RX stos cwtl (bad) mov adc retq xor callq jle insl sub clc cmp rex.WRXB popfq stos in mov xchg mov pop mov (bad) sahf sub test rex.XB (bad) hlt mov jge fldt mov movabs sbb (bad) sub mov enterq cmp mov ja pop movabs push enterq rcrb or xlat mov callq xor push mov xchg (bad) ds cs (bad) push shl xchg xor repnz xor enterq xchg callq pop jg std sbb (bad) (bad) cld or int3 (bad) sti sbb jmp xchg clc adc xor (bad) xor bnd (bad) ds xchg jae xor jns adc imul mov outsl add (bad) pop and fisttpl (bad) lret jnp callq mov sarl add or (bad) rolb xor pushq andb jo test test mov sub xchg cmpsl or lock out incl sub cld adc repnz rex.RX (bad) loope fcomps fs and lret or test hlt rex.RB add fiadd mov xlat out movabs mov and testb (bad) sbb and mov pop xchg mov sbb js cmp xlat imul add (bad) (bad) mov int3 pop sub test imul or pop rcrl jo pop cmp pop loope jle,pn (bad) add xchg rorl sahf clc int cmc sahf (bad) ja (bad) sub imul push xor pop (bad) mov push lcall fcoms in retq hlt or jg imul nop mov in (bad) (bad) enterq cmpsb (bad) repnz int3 and pushq enterq sahf jns mov (bad) pop xor hlt icebp adcl xchg adc fs adc insl (bad) xchg push pushfq fcompl loopne mov in ffree xchg (bad) sub mulb mov mov out std jmp cmpb (bad) push jns adc repz mov rorl rex.R mov (bad) sbb adc js mov sub out xor (bad) and leaveq enterq and sub fsubrp sub lret mov retq push int3 in fild cmp xchg mov rex.WX xchg test xchg repz and mov mov (bad) (bad) xchg xchg adc fsts (bad) xor rcll adc jnp imul leaveq lock pop repnz jbe push push (bad) add mov (bad) adc jo rex.WXB rex.WX (bad) sub jle loopne sbb repnz enterq imul cmp hlt xor movabs movsl imul push jb (bad) fcoms fisubr (bad) or (bad) mov mov (bad) or lods in insb pop pushfq lahf xor je add outsl mov callq sub jnp fwait (bad) cmp push scas sub xlat movsl add rex.WR cmp movabs ds idivb xor leaveq jp (bad) stos mov adc leaveq pop std ja wbinvd adc mov negb shrb hlt je (bad) xchg xor add cwtl sub jns rex mov lahf jrcxz (bad) jns xchg jne mov or sub and xchg jns jp outsl xchg nop jne jle frstor rex rex.B xor adc (bad) mov stos and and and mov imul rex.WRXB xchg jg in pop pushfq (bad) data16 enterq pop or xor callq mov adc sbb cmp adc movsb cmpsb add sbb adcl cmpsl movslq orb test rcll jns pop cmp adc cld test mov xor repnz pop and movabs int3 xchg and repz xlat cs xor (bad) pushfq in cmp add (bad) lock push iret sbb xor imul push js sub jns or or data16 (bad) pop mov jrcxz mov cmp add in cs pushq (bad) (bad) repnz push mov pop outsl mov (bad) clc ja mov sbb (bad) jmpq add stos mov add (bad) or add or in adc movsl xlat xlat movabs movsb (bad) rolb or push outsl movabs add callq and movabs (bad) push and rex.WB xchg xor rex.W (bad) (bad) jg push retq xchg sub mov (bad) or loop out movabs or add mov adc addl jle std pop addr32 js stc push (bad) (bad) xchg lret jge (bad) ficoml int3 ja jbe push fcomps fldl stos mov push pop fisttp out fs (bad) pop push adc iret fdivrs std rex.XB test (bad) push xchg or cmp add and xchg ds pop mov bswap andl movsb sar xlat mul rex.W or repnz (bad) push adc repnz (bad) (bad) push (bad) imul in add fs movslq gs sbb pop jb add lock (bad) ds push mov (bad) cmp push xor (bad) jmp out (bad) add (bad) add ds test sbb retq xor (bad) ds or pop or shl jnp adc mov jo (bad) mov xchg adc jge icebp jo callq cmp callq cltd (bad) (bad) cmp rex.WB movabs jb orl out and mov (bad) adc sub out idivl lret nop add mov or add rclb (bad) add fwait lock fistpl mov es (bad) incb (bad) rex.WX es xchg mov pop mov iret adc xchg jbe lock repnz rorl pop mov or ror xchg fsubrl push adc sub imul and imul icebp rex.RX movsl js out cld ss out cmpsb jne or and cltd (bad) pop sahf incb out mov rex.X stos leaveq rex.WRX push enterq fistl pushq mov stos test scas xchg sbb pop mov cmp xor (bad) in xchg xchg insb mov xor shll (bad) push adc xlat mov or enterq sub jmpq xchg adc (bad) (bad) je push adc fildll sbb jle push mov (bad) data16 pushq (bad) hlt stos (bad) xor cmp sub and and repnz fwait xchg retq add xchg jbe (bad) adc rex.WX push in xor xor jg add cmp (bad) int mov (bad) mov add (bad) movabs enterq movabs xchg (bad) lock mov mov loopne (bad) icebp testb rex.WR notl and mov imul or xchg pop stc mov (bad) callq sub pop fimull cmpsl repnz xchg (bad) rex.WRX negb loope (bad) xor cmp test cmpsb mov xor out adcb in mov jno xchg stos in clc sysenter mov jo in stc cwtl (bad) (bad) (bad) adc (bad) jb adc movabs and pushq pop vminps xchg sbb sub sar xchg (bad) add mov fdivrl pop popfq adc jnp out adc mov xor cmp (bad) (bad) or (bad) icebp fs and or mov jp in sub mov add insl mov (bad) test cmp movabs sub (bad) callq mov adc fwait (bad) pop out and hlt push fbld loopne mov mov add int3 outsl xchg mov pop sub cltd or cmpl movsl mov (bad) sbb (bad) (bad) sar xor sbb (bad) mov sub rex.WR mov adc add add cmpsb lret cmpsl adc pop and add rex.X mov adc xchg rex.XB (bad) cld xchg xchg jno int loopne pushq sarl int cmp rex.W bnd mov fnstsw xchg mov mov ss (bad) gs movabs add sbb (bad) in mov (bad) fdivrs jbe repnz test nop (bad) (bad) adc xchg rex.R or lahf out ja rcrl (bad) leaveq loope (bad) (bad) sub or mov sub popfq sbb cmp lahf lock sub fsubs movabs jae out rol xor mov push rex.RB shll and mov std callq add neg (bad) cmp nop out add rex shl (bad) jne,pt sub mov icebp rex data16 rex.WRX cltd repz test push jns or repnz fsubs adc jrcxz fcmove rol movabs xchg int3 mov pop retq scas movabs fdivl cltd (bad) stos cmpsl clc adc (bad) rex.WR ss mov xchg jp (bad) cmp (bad) jg xor fnsave (bad) enterq fmuls rclb cmpsb sub adc callq add mov mov pop stc add fwait jb mov loopne stos popfq jbe adc cmpsl ja (bad) loope retq mov clc (bad) (bad) xchg (bad) push push adc imul movabs out mov lods pop ficom stc cmpsl jl rex.RXB clc add ds mov adc xchg mov adc jl mov jp retq xchg cli callq push outsl (bad) (bad) stos rclb cmp pop sbb or (bad) sub je adc xor lahf mov rex.RXB sub fnsave push or psubq std (bad) (bad) jmp callq (bad) (bad) addr32 xchg or (bad) pxor (bad) outsl test mov cmp and (bad) rex.WR xchg ss mov (bad) jle jae rex.WXB mov adc (bad) rex.R rex.X rex.WR rex.RB rex.RXB lods rolb mov jae pop jno jo xchg sub scas (bad) mov (bad) retq add frstor mov scas jmpq divb push iret (bad) mov fsubr mov pop ja mov jne push jb add movabs or out cmpsb (bad) lea rex.RB hlt xchg sub xchg adc (bad) sbb mov rex.WRB or mov cmc (bad) mov push (bad) std add mov mov hlt imul icebp push rex.WXB sbb mov (bad) repz adcb push or movabs and add adc xor mov xchg xor jno test (bad) shr (bad) xchg adc callq xlat clc jns cltd callq repz cwtl jmp es movabs xchg jmpq xchg or add rolb cmc xchg (bad) jne mov (bad) rex.WRX std add (bad) sbb pop sbb or (bad) mov (bad) mov movabs mov rex.X (bad) xchg xor mov add decl ds pop rex.R (bad) movabs int (bad) lea fldt out rex.WR (bad) psrld adc add jrcxz (bad) (bad) mov movsb mov lret sub sbb adc cmp pop xchg imul nop mov cmp sbb (bad) rex.WR rex.RXB adc (bad) rex.WRB lock push (bad) clc loopne xchg clc (bad) mov pop cmc pushfq pop (bad) adc add (bad) movslq pop (bad) movabs cltd xlat jo adc xchg xor scas push xor (bad) push (bad) (bad) faddl mov adc rex.WRB mov fwait movabs sbb rex.X (bad) mov fcomi add test movsl out jle adc (bad) fistpll adc mov cmp jbe xchg mov movslq xchg negb mov mov mov (bad) ficom add and sbb ficompl add iret rex.WR mov lahf sub pop add mov cmp add add sbb mov add mov (bad) adc pop (bad) xor or out xchg jbe test repz fisttp (bad) rex.WXB fisttpll (bad) idivb mov lods push adc imul mov (bad) mov jo fisttpl out shrb ss and (bad) and movl xor pop sub rex.WRB push rex.WXB test out mov (bad) mov rorl movabs jg rolb or fsubrp movabs in repz retq lock clc (bad) out cmp or xchg xchg fsubr mov and (bad) xchg scas movabs ficompl adc push sbb retq (bad) xor movabs mov and push add (bad) jmpq imul xchg jno mov push shrb cmpsb xlat adc std jmp add sub (bad) jo (bad) add rex.WXB callq jge test fnstcw mov xchg fidivr clc rex.RB lods (bad) rex.WRX (bad) mov cmp fistl pop sub or popfq pop or (bad) hlt movabs pop scas pop cmp or js mov rclb adc sbb loopne adc sub jge rcll repz cwtl cmovg cmp (bad) mov (bad) leaveq mov es (bad) sub fnstcw in lods std mov cmpsb rex.RB movsl push push push cli cli incl pushq (bad) outsb jo jl mov push pushq xlat and or mov imul add push testb mov imul pop mov iret and jae add in sti clc push jl incl xor (bad) mov icebp push (bad) (bad) or adc cs (bad) (bad) sub fdiv int3 jb adc jge int3 sub (bad) ss cld insb adcb retq jg jrcxz push add mov cltd mov mov sbb or sub (bad) add and mov mov and adc es out fwait (bad) (bad) sti or shrb notb (bad) xorl add mov cmp (bad) icebp (bad) (bad) xchg lock lock or sub mov mov iret movabs shll xchg out and pushfq jnp adc int in cmp insl (bad) sbb rex.WRXB or rex.WXB rolb icebp mov jne fistl out add add data16 or push cmp (bad) (bad) (bad) test (bad) xor adc (bad) cmp xchg lock push cld (bad) adc std lahf (bad) mov pop adc rcrb rex.WX sub adc sbb movabs jge (bad) es ljmp cwtl xor jle je loopne stos repnz lret sbb adc rex.X lea cmpsl cmpsb adc jp loope leaveq callq xchg out and movabs xor adc cmpsl out in cmp or jne std xor iret sub movsb in or push cmp sahf xor and add mov mov push pop xor ds add mov xchg or jne mov add (bad) xor int3 movsb cmpsl xor insb mov pop imul cmp jge (bad) (bad) insl cmp fnsave (bad) push iret cmpsb outsb mov lret mov lret shl sti rex.RXB (bad) enterq sub lock push rex.W add cltd jns pop mov repnz xchg pop pop mov mov and mov jmpq add mov divl sbb stos in out or cmp (bad) adc sbb (bad) movabs xchg jge movabs or sbb rex.WRX callq mov lods retq fwait pushfq (bad) std (bad) cmp (bad) fbld xor adc (bad) adc fs loope or mov test (bad) sti (bad) callq jae fisttpll clc (bad) js jg cltd push retq ja mulb out mov rex.XB mov cs add jl adc mov xlat retq sub cwtl push (bad) xor adc (bad) rcrl rolb jno pushfq adc jp pop (bad) jae rex pop rex.WRX (bad) xchg sbb xchg jrcxz jno fidivr (bad) rclb rex.X pop xor cmpsb push add div (bad) adc enterq rex.RB sub (bad) (bad) mov rex.RB add or add (bad) sub pop cmp stos stc test rex.WRX test sbb jmpq jbe ror push in push xor fstps rex.RB push iret adc or and and movabs fwait pop sbb push lods xchg (bad) jmpq loop mov lahf fwait cmpsl adc xchg or adc lock cs push jb xchg ss (bad) sbb adc movabs mov rex.R jne sahf mov push cmp addl (bad) adc rex.WX rex.R mov adc xchg callq test or xchg xchg xor jno shrl add (bad) ficompl xchg jo jbe (bad) fisttpl outsb or push test pushfq (bad) movabs stc shr jae xor gs (bad) nop adc sub (bad) xchg lock pop fidivr sub xchg xchg js sbb rex.WRB adc mov (bad) mov or enterq jns (bad) rex.RX (bad) int3 stc sub and xchg adc sub orl xchg xor retq or xchg (bad) jl faddl mov jo mov adc (bad) sub adc xchg out (bad) in out mov mov or pop jmp (bad) or or xor xchg jg (bad) mov int3 push retq add mov cltd movabs repnz pop (bad) and lret sets xor imul fsts mov jl jb ss cmp adc enterq test fisubrl mov xchg pop std sub add and (bad) mov add sbb rex.WX rex.XB xor adcb rex.RB sbb rol out testl jne loopne (bad) xor sbb pop (bad) adc mov insb in fld outsl cld outsb (bad) (bad) mov loope and lea imul and (bad) imul cmpsb sbb xchg adc (bad) fstpl sti xchg retq loopne rex.WXB pop or (bad) (bad) adc (bad) jmp and xchg (bad) jno icebp rex.RX imul xor negl cmc movabs sbb add (bad) in mov (bad) rex.WR xchg mov sahf add je (bad) push std or jrcxz retq mov sbb or and or mov fwait xchg adc cmp cmp lahf xor xchg (bad) mov push insb (bad) sbb sbb xchg mov addr32 adc pushq sub sub xchg enterq adc retq shll pop gs lock rcll add movsb fcoms mov fisttpl addr32 (bad) adc (bad) rex.WX jmpq mov (bad) cmp rex.RXB adc pop sbb lahf and retq mull add je movabs lret insl movsb pop adc sub jbe and adc push (bad) movabs addl repnz fistp sbb add int3 mov xchg xor test lock xor sbb (bad) (bad) test mov rex mov jne or rex.WXB mov js enterq mov insl add xor rex sub movabs jb (bad) mov (bad) push add rex.B pop and and mov jge cli ficompl xor adc (bad) in idivb movsb (bad) jl adc mov (bad) or (bad) mov cmp movabs sti xor (bad) fbld scas stc rex.WRX (bad) push (bad) mov pushq fcomps mov add retq int3 lret cmp push (bad) sarb clc lret rex.WRX sbb out or mov jmpq cmp sbb fstl sub jle mov adc cmp (bad) xor rcrl loop pop stc (bad) push xchg loopne (bad) (bad) idivl int (bad) xor out clc rcrb mov repz and jne sbb cld cmp pop (bad) rcrb mov test stos callq test stc mov scas jo xchg mov adc and mov adc (bad) std (bad) pop fstpl (bad) leaveq adc pop ficoml mov jmp adc sub in adc push adc fstpt sbb (bad) sbb loopne (bad) fdiv xor adc jo out xor (bad) js lahf push xor imul (bad) sbb retq loop (bad) and cmp (bad) or clc (bad) rex.WRB repz rex.RB divb sahf insl movabs jp ja jne rex.X in rex.WR pop scas test sbb (bad) (bad) cmp mov cmp callq fdivrl (bad) rcl cmp (bad) xchg mov pop adc and scas rex.WR add insl push adc (bad) (bad) xor add xchg (bad) adc stos mov adc (bad) mov jne add xchg (bad) jno adc (bad) cs ja mov adc mov cmp in movabs (bad) xlat adc leaveq push xor cmp adc adc cmp gs mov rex andb mov rorl addl adc sbb pop fwait xor movabs lahf fisub fidivl rex.WB mov adc jmpq (bad) rex.R pushfq cld lret or pop adc rex.WX jle and rex.WRX fistpll xchg (bad) in int adc fstp cmp adc sahf gs fwait imul xchg fist (bad) fsts (bad) and sub xchg or jl (bad) icebp imul pushq out (bad) adc xlat rex.WRX lret (bad) mov mov rex.RB (bad) or adc fwait sbb or sbb retq rex sub shr mov push jrcxz lret mov cltd xchg (bad) loope (bad) or rex.WX rex.W mov push fbstp divl xlat (bad) jl (bad) xchg rex.WRB in adc movsb in outsl fcoml adc add cmp (bad) mov mov (bad) (bad) adc push (bad) fcom rex.B rex.RB gs and sahf lods xchg adc or callq sub rcr fistp mov mov adc (bad) sub adc mov cmp (bad) mov mov cwtl sti pmaxsw sbb int3 (bad) int3 adc xor lock rex.RX rex.RB mov icebp pushfq enterq movb xchg adc add mov and test cmp mov or insb clc fwait (bad) xchg je gs pushfq mov flds (bad) outsb movabs out jl sarl js (bad) lea push or xchg sub mov paddb push jp test (bad) in pop (bad) xlat sbb xchg sbb pop (bad) hlt (bad) cld (bad) imul xor xor rcl xor pop adc pop mov sbb ljmp xor (bad) rex.RXB in xchg fwait iret rex.WRX movabs movabs rex.WRX rorb (bad) mov mov out add rex mov lahf (bad) lret xor cmp adc mov (bad) cmp jbe leaveq std int3 (bad) xor jb cwtl xchg adc retq adc rex.W (bad) xchg mov cli sbb (bad) jne enterq rcrl xchg sub xor cli lret (bad) adc (bad) test fucomp fldcw sub movsb data16 adc outsl (bad) int3 lock in scas jns xchg rol lret lock callq xor movabs repz (bad) jrcxz mov lock mov ss je fcmovbe fdivs xchg (bad) lock pop xchg (bad) repnz lods and fwait or (bad) notl sbb and mov icebp idiv popfq xchg jge xchg scas mov (bad) xor add add (bad) mov xchg mov (bad) xchg mov (bad) cmp icebp adc rcr and mov pushq lods push push mov int3 pop mov xlat xchg fcompl rex.R push adcl rex.WRXB mov in imul std push nop in addb xchg (bad) rex push mov callq add mov fdiv cmc mov adc sbb cmp adc shlb (bad) movsl cmpsb sub mov mov sbb fwait cmp mul jl rex.WX pop sbb lock pushfq mov imul rex.WRX rex.WRB mov xchg rex.WRB rex.WX test ss pop fsubs and xor sub cmpsb jb cli push pop adc xor lahf fisttpll jge fcoms outsb sub or (bad) pop rex.WRXB and insl or rex.WRXB (bad) (bad) add (bad) decl or (bad) loop (bad) xchg icebp adc lar imul icebp mov cmp xor cltd jrcxz popfq (bad) mov (bad) repz shl jae (bad) pop neg jmp insl rex.WRXB (bad) sbb adc cmp in rorl mov mov fmuls pop loopne sti cwtl adc out or push subl outsb icebp and xchg xor sub or mov rex.B rex.W add shrb mov pushq out cltd rex.XB rex mov jmpq in ss rex.X push or callq mov push ficomp sbb (bad) xor nop and (bad) (bad) and sub jl rex.XB push (bad) fwait (bad) and in mov lods out insl jo in and (bad) pop push and rex.B (bad) mov pop push sbb pop loope mov stc (bad) movsb add jno outsb repz repz fcmovbe (bad) clc rex.X xchg loopne or faddp shrl sbb in lods jnp adc retq push (bad) sbb in test xchg cld adc movsb repnz addr32 repz push adc jno fsts and sub enterq xchg (bad) mov (bad) jo rorb (bad) in pop mov rex.WB rclb rex.X cs jl and (bad) and xchg repz clc in jno lods (bad) lahf push xlat or cwtl (bad) rex.WXB add movabs sbb (bad) rex.X idiv hlt std and loopne je xchg xor cwtl sub push jp rex.X mov sub fdivrs sbb rex.WR ja,pn push in pop rex.WRXB (bad) bnd rex.WXB test jno leaveq icebp jnp rex.RB sbb (bad) jp movsl and (bad) data16 rex.RX ja xchg cmp cmp pminsw mov (bad) rex.W rex.WRX (bad) jle or fucom sbbl movabs (bad) clc and sub mov add or push fsubrl xor (bad) mov addr32 in rex.X rex.XB orl out sbb fisubr or callq test xor mov (bad) xor xchg jb xchg pop adc mov and scas rex.B mov rex.WRX add movslq (bad) xchg paddw push fwait jns adc mov lock rex.B rex.RXB adc sub sarl stc int in pushq jmp adc cmpxchg add adc negb std xchg mov lods adc and (bad) rex.W mov sub and in xor stc adcb sub clc cmp sub or adc (bad) sub imul cmp mulb mov xor (bad) fucom movsb xchg sbb enterq (bad) jo mov (bad) out (bad) addr32 adc rex.XB mov callq pushq cmp callq retq xchg (bad) sbb xchg sbb (bad) test and (bad) rex.RXB icebp repnz mov xor movabs pop add int3 or movabs and insl cmp or or (bad) addr32 punpckldq xor fiadd sbb andb xor add ficoml sbb (bad) adc or or sub cmc cmpb out or xchg adc mov ss retq push shlb fwait (bad) mulb test loopne push stos (bad) movabs fcompl std cld sub js in xchg or (bad) mul imul repnz jmpq and je add retq (bad) (bad) jb rex.WXB add (bad) jno cmpsl mov cltd cltd and stos rcrb shl cmp pop fiaddl pop adc adc out adc (bad) rex.WRXB add jne sbb pushfq (bad) push unpckhps add (bad) pop test (bad) callq movabs pop movabs push (bad) sti adc jae (bad) iret xor mov xlat hlt (bad) and adc rex (bad) (bad) xlat adc test xor callq jno jne rex.RB movsl xchg xlat enterq mov adc iret lods ss callq retq adc pushq jmpq adc or mov (bad) pop es mov fidivrl loope xor (bad) xchg sbb adc sub pop jno mov es (bad) add movabs cmp (bad) xchg movslq mov movsb xor (bad) adc rex.RX (bad) adc loopne xchg mov adc callq data16 xchg pushfq or (bad) cmpb adc xchg out sahf sbb jo adc addr32 push mov mov movsb pop (bad) cli cmp shll test fdivrs cmc insb pop adc test lahf (bad) out adc and notb icebp ss lock fwait pop lahf movnti xchg (bad) push sub sub lock mov rex.RB gs scas adc out outsl mov (bad) pop or nop rcll jo (bad) retq jmp lret cmc in add or or rex.XB add (bad) ds test (bad) (bad) and test sub or lcall cmp (bad) (bad) (bad) xor adc je xchg callq (bad) data16 in rex.WR fwait movsl (bad) adc (bad) stos sbb fdivr mov je adc push sti (bad) mov fstpt hlt in xor movsb icebp add rex.XB sub mov or (bad) adc (bad) xor sbb loope sub adc icebp push std fsubrs push rex.RXB repnz lea (bad) cwtl lret rex.WR xor push mov jbe mov (bad) out subl cli pop movabs pushq xlat mov jb fwait mov adc movslq scas lret (bad) gs pop (bad) imul jge cmpsb out xchg xchg stc fsubs adc jrcxz sub add cld incl jno sbb subl test in std movabs mov (bad) loope xor imul hlt rcl mov jns adc push (bad) sbb rorl (bad) adc fmull adc loop test (bad) or jb sbb push (bad) rclb or adc xchg xchg pushq push rex.RXB mov sahf rex movsb jbe sbb (bad) in and xchg jns (bad) add hlt stc add sti mov add repz mov cs rex.X or rex.RXB insb mov js rex rex.B movabs adc pop and xchg xor cs lods sub mov pop xchg push retq outsl (bad) jbe adc jae stos (bad) je outsl and and or (bad) rex.W sbb jns fmuls in rol lock or (bad) (bad) pop cmpsb adc mov out adc movabs xchg imul lahf sbb (bad) in sub rex.RB gs jns leaveq in sub cmp outsl fs sahf pop out mov xchg (bad) push rex.WX or lret insb add clc rex.WRX or sbb fnstcw lea adc jle pushfq addr32 imul ss or movsb xor gs fcoml hlt rex.RXB sbb mov rex.WRXB cmp mov adc addl (bad) data16 movslq xchg stc (bad) (bad) in (bad) adc xchg adc scas xlat (bad) (bad) mov rex.R mov and loop clc int cmp sahf xchg iret int3 adc in repz js js mov cmp mov std jl (bad) adc add (bad) pop fistl cli loop test mov add lahf jo push (bad) adc sbb in adc jae bswap fmul and or (bad) pop (bad) mov roll sub add (bad) outsl sub shll or (bad) sub je or loopne mov lods add or cs xor pop cmp and pop jmpq pushq and (bad) lahf rex.WX adc or add sbb es outsl mov sti push (bad) fs sub sahf fdivr rex.B cmp xchg adc int3 pop (bad) jnp add jl cltd (bad) push mov jl (bad) cmp or jns shl mov rex.WRXB lock xchg mov jbe cmp mov mov mov mov repnz xlat xor jrcxz xchg shlb rex.WRX (bad) hlt xor (bad) rclb and retq enterq or pop add sub pushq mov xor adc mov rex.B rex.WRXB pop fs cmp retq loop movabs in cs movabs out cmp adc retq (bad) mov pushq add adc xor mov enterq (bad) in test xor icebp mov enterq (bad) (bad) loopne jl iret je (bad) add mov pushq pop cld movabs mov (bad) cld fwait jno rex.XB (bad) sub adc or lahf push cmp jmpq (bad) mov (bad) sub or push sahf cmpsl mov push sahf lods or mov mov mov xor push adc lock mov mov fiadd fiaddl icebp (bad) cmp repnz and mov (bad) push fwait rex.R movsl and (bad) out xchg push xchg rex.B xlat and adc mov icebp rex.XB je sbb fwait icebp push (bad) test stc out hlt push out clc rex.WRX and (bad) (bad) imul adc jmp lods and mov in ss adc lods push adc movabs sub adc fbstp push jge movsl movabs fnstsw js jrcxz and xchg xor or (bad) mov movabs lahf jp in out sbb or sub sbb adc rex.R lods jnp sbbb (bad) xor sub adc or rorb and es stc sub mov jge fwait rex.XB (bad) retq xor iret mov js xchg xchg ds cmp mov pop sub (bad) lods push test (bad) (bad) (bad) cmp sub jo (bad) add (bad) icebp cwtl lret in cmpsb in sub mov rex.RX rex.W rex.RXB retq push jp mov pop xchg (bad) mov imulb (bad) mov in negl subl sub mov sahf sarl mov sub rex.R sub mov rex.WB xchg push imul repnz popfq (bad) (bad) movabs adc pop xchg (bad) test ss (bad) rex.RB in adc and divl xadd (bad) (bad) lods mov pop jne (bad) repnz test out int3 incb callq addr32 push pop cmp adc data16 scas mov (bad) (bad) mov pop pop adc jge and xor movabs (bad) ja scas cmp mov pop movabs (bad) pushq or in adc pop adc loopne adc xor (bad) (bad) cli or adc ja and rex.WXB test pop fdivrs mov add cmp int3 in adc sub xor movsl popfq pushfq fwait (bad) pop adc rex.WR mov pop loope movslq ss pop movabs adc xor lea rex repz (bad) rex.RB cmp jrcxz jl xor adc jb ficompl and (bad) jmpq rex.RB rex.WR cs int adc flds roll fnstsw rex.RB add (bad) rex.WR push retq (bad) rex.RXB rex.WX cmp or (bad) test mov (bad) push repz movabs int3 (bad) cmp pop rex.WX jp int3 hlt mov mov fmul adc mov imul (bad) xor and movslq movabs psadbw push lock test xor lock (bad) movslq adc lea outsl rex.XB subl leaveq sub mov pop rex.WB fisubr movslq sbb rex.R jmpq (bad) pop rex.RX fsubrs rcr jb cltd mov lea jp jmp test lea js sub mov mov (bad) movsl movabs (bad) xchg pop xchg sbb (bad) xor jb xchg adc add mov mov setg sub (bad) xchg cs adc rex.WXB rex.RX repz jae fsubl cmp xchg loope sbb std es loopnel rex.W mov outsb xor imul sti lahf (bad) rex.WX mov rex.WRX (bad) sub mov callw mov or int3 (bad) mov (bad) callq and or adc mov addl leaveq add rex.XB rex.RX ds sahf sbb callq pop nop xchg int3 xor out popfq sar cs movsb lods subb jne fstps pop test mov cli (bad) (bad) xacquire imul jbe mov pop ds push pop and rex.WR (bad) or sub add mov cs callq xchg mov mov outsb xadd sub sahf ficom add imul cmp jmpq jno (bad) bnd mov (bad) (bad) loopne movsb (bad) add add mov roll sbb pop (bad) rex.RXB mov mov movabs adc out mov js mov (bad) callq mov (bad) data16 repnz movsl rex.X imull or andl imul fistpl (bad) (bad) (bad) loope outsl cld mov movabs ss out (bad) int cmp add push (bad) sbb (bad) movabs (bad) orb (bad) mov clc adc subl cmp cs or rex.X fs xchg xchg mov retq jbe leaveq scas (bad) jno mov add imulb test outsb cmp jmpq xor push rex.WRX adc outsb (bad) mov and xor mov lods rex.RXB push fwait shrl (bad) jmpq (bad) jo xor pop push rex.X rex.RX or mov or add mov (bad) mov (bad) pop callq (bad) sbbb incl imul (bad) (bad) or mov (bad) shll rex.R xor (bad) (bad) rex.RXB mov adc add ja sbb test sub xor add (bad) orb (bad) scas rex.B adc shr adc or mov (bad) adc and insb rex.WB add sbb shll je cmpsl (bad) (bad) (bad) adc movslq rcrl pop je imul (bad) mov out je cmp out mov (bad) sub jl jrcxz (bad) jmp je pop scas gs ds loopne push xor icebp (bad) xchg rex.WR (bad) cmp nop (bad) out rex.RXB js add xor sbb scas pushfq adc std lea mov test mov xor (bad) mov or jl callq ss scas xchg (bad) mov mov callq xor or (bad) hlt sub int callq fdivrs rex.W rex.WB rex.WRB mov notb movabs xchg jbe,pt retq roll add add sbb adc (bad) (bad) gs jmpq in xchg cmp imul xchg mov jne cmp cpuid shrl add jmp iret jl mov roll rex.WXB xchg and (bad) xor or xchg je ja xor rex.XB push mov mov ss xabort jmp int3 xchg xchg popfq in xor mov ja movabs (bad) movsb in mov scas (bad) jbe adc mov sbb addr32 mov jno test adc adc rex.W add rex.WRX rex.B movabs test rex pop sbb mov flds jp test jns gs stos (bad) rex.RX or pop xor add xchg and mov adc (bad) rex.RXB addr32 add out (bad) mov (bad) and fldenv xchg loop in adc loopne imul jae enterq xor (bad) negl cli pop cmp (bad) (bad) push lock adc rex.WRX mov (bad) gs pop lock pushq pop lods callq sarl adc or rex.RXB push stos sub icebp or jg xchg rolb pop mov repz out (bad) add movabs mov xor fcompl adc jp test jns jl sub cmpb mov sti cmc movsb repz (bad) push or push cmp adc ds jmpq es rex.WRB jo (bad) (bad) jle stos adc stc fcmovnbe enterq (bad) fisubl xchg out add data16 loope jo (bad) sub jrcxz stos cmp callq jo push cmpsl fwait xlat (bad) pop cmc jne xchg xchg pushq fidivl mov movsb rex.WR lahf rex.W cwtl mov notb jbe rex.XB mov mov and loope shrl rcrl rcrb movhlps xor (bad) mov pop idivb (bad) in pop fistpl xchg sub add mov (bad) mov sbb notl adc (bad) rex.RX in adc sbb rex.WX fwait sub xchg adc cmovne data16 pushq push ja (bad) cwtl pop cld gs sbb sbb in add xor or push mov (bad) rclb (bad) cwtl (bad) fidiv (bad) (bad) lahf pop and movabs adc push xor test add mov hlt lea movslq andl jle outsl mov cmp rex.WXB rcrb lock or xor mov mov (bad) cmp fildl int3 push (bad) pop shr lret sarb (bad) lods rex.WRB cs hlt lret divb sbb fldt xchg mov scas or sub mov (bad) mov rex.W cs pushfq hlt xor imul (bad) jge (bad) (bad) sub pop sbb rex.RXB (bad) or cld in add iret sbb stos mov data16 js mov (bad) shll rorb mov jmp nop cmp (bad) mov test add (bad) lods (bad) rclb xchg (bad) test cmp (bad) (bad) frstor xchg in mov (bad) (bad) (bad) lock push (bad) in (bad) fadds (bad) mov ja adc sti mov enterq adc repz xor add pushq cmp and (bad) cld (bad) movabs (bad) movsl outsb outsl xchg lock repnz xchg or mov and rex.WXB adc cmp (bad) add cld test (bad) sub cs out mov retq and jl pop sbb std test jno (bad) add cwtl clc pushfq repnz (bad) scas lods mov imul lret rex.WX rex.X out (bad) cltd or fcomps leaveq push adc (bad) xor lret xchg jmp mov stos js scas pushfq test rex.WXB sarb in mov (bad) xchg sub and mul sub int3 (bad) add callq imul cltd callq mov sub cwtl sbb sbb int hlt xor outsl and cmp rex.X jo xchg jle scas cltd (bad) jne adc (bad) movabs gs pop adc movsl and rex.WX gs adc pop push xor lock movabs xor mov xchg out rex.B rex.XB enterq jae jo adc lods adc and shl rex.B stos (bad) clc mov adc rex.WX jno jrcxz movabs sbb or or (bad) enterq jge sbb movabs mov xchg imul int test fcoml int fmull ficomp push fcomp sahf (bad) jl (bad) rex retq sahf int3 femms fcomp shlb mov hlt xorb cmp movabs mov push push mov mov xchg sti add add (bad) adc roll fidivr nop je adc retq cmc (bad) xchg repz fbld or rex.X pop mov (bad) movabs add sub fs (bad) rclb (bad) rex.XB movsb mov or adc fsubrl add jrcxz or rex.R cli and divb mov adc mov push push push (bad) jp mov rex.RXB imul clc imul sbb movabs rex.RX movabs clc jmpq xchg adc movabs xor shl sub icebp js (bad) sbb mov je jne notl scas int rex.RB (bad) (bad) test xlat mov jge fs mov push (bad) dec mov adc rex.RX pop (bad) sub rex.XB leaveq stos (bad) mov callq or in imul sub push mov adc (bad) xor outsl loopne sub adcl adc cmp xlat lock or jb adc mov adc (bad) mov xchg xor rex.WXB and rex.RXB xlat rcrl xchg insb in mov jle fstps cmpsl and jg rex.X rex.R (bad) (bad) add nopl fiaddl adc cmpsl mov cwtl mov (bad) xchg push (bad) (bad) cmpsb adc scas in outsl mov pop sbb sub xchg adc sti enterq xchg stos mov lahf rex.WR sub rex cld and pushq out rex.WXB mov jae lea xchg jmpq cli and ror mov cmp pcmpeqb popfq clc in cmp pushq ss add in mov adc lods sub scas add rex.R imul jo mov ss and (bad) mov scas (bad) sti add mov or mov scas ja popfq or (bad) xchg fucomi test fistpll adc gs fistl (bad) adc insl adc (bad) retq jl (bad) cmpsl add xchg adc mov adc rex sub icebp sbb rex.WRX rex.WRXB fimul or cmp rex.XB xchg iretw out pop mov callq lahf lea enterq mov pop sbb (bad) wbinvd pushq callq push std (bad) mov out sbbb fnop out xchg sbb andl sbb (bad) jns in xchg in mov cld add imul push mov fs (bad) retq add xchg gs jmp mov orps jo callq test in cmpsb add xchg in sarl (bad) cmp and (bad) (bad) rex.B or (bad) rex.WRXB rex.XB fistl (bad) (bad) jmp loope lock sub mov push cmpb and test cmpsb mov lods mov jne repnz stos loopne pop xchg (bad) push add (bad) mov (bad) lods xchg (bad) cmp cltd ds out and (bad) lock test cmp fs (bad) xchg (bad) sbb callq or rclb adc pop data16 adc fbld jbe int rex.WRX lahf jno (bad) mov rcrl in test sub cmp scas or xchg cmp pushq adc fsubrl test (bad) rex.WRB movl cli add add in movabs sub fsubl test mov add pop lahf pop movsb (bad) sbb (bad) lods and xchg movsl pushfq xor mov push (bad) (bad) or test jg js (bad) sbb jmp cmp adc test outsl mulb rex.WRB fs (bad) rex.WRX shl xchg adc hlt sti jl xchg cld fdivrs popfq (bad) std rex.RXB adc roll mov add (bad) jbe jb sub retq (bad) or adc and push sub (bad) lods cmpsb cld or xchg movsb or pushq lret (bad) or adc pop pop jo pop leaveq (bad) lret xchg mov rex.XB push pop fdivr jge mov mov cmp add pop mulb mov cmp mov (bad) pushq xchg xchg rex.WRX mov rex.R movabs (bad) add xchg sbb mov rcrb stc (bad) add add sbb adc callq (bad) mov or rex.W mov fistl imul sbb mov rclb test (bad) sbb cltd (bad) scas add shll sub rcr sub xchg scas xor jrcxz (bad) pop rex.WRX jne xor pushq (bad) pop mov pushq sarl jg (bad) mov xor enterq add cmp mov sahf movabs (bad) xor fnstsw leaveq (bad) (bad) notb jb jl imul (bad) jmp rex.XB test (bad) (bad) add adc xor icebp xor or es rex.WB lock insb xchg xchg stos stc callq adc rex.WB rex.WXB sub mov rex.W (bad) xchg hlt mov mov adc pop (bad) adc xchg insb (bad) imul sbb int3 push gs xor (bad) xchg movslq (bad) add jrcxz sbb cld add rex.RXB jno (bad) div sub (bad) ss jmp lods mov cwtl insl incl mov int3 jb push or mov or out mov shr movslq mov in add imul xor cs pop je add (bad) sbb mov (bad) repz mov imul (bad) mov adc rex.R out lods movabs mov (bad) xor push xchg jp cmp mov xor mov nop orl rex.WB ror js ds xchg pop and (bad) mov movabs pushq cltd jno (bad) or jno and int3 lock or int xchg mov sub or retq leaveq add or fs sbb (bad) outsb (bad) add (bad) (bad) jo (bad) orl mov or rex.X push pop jmp mov jnp (bad) xlat notb pop xor sub cmp cmpsb (bad) push xchg imul rex.RB rex.WRB clc xchg (bad) (bad) int mov cmp callq lods out (bad) icebp stos xchg xchg icebp xor mov lock movabs (bad) adc (bad) mov pop jl (bad) or and rex cmp pop movabs leaveq stos (bad) in adc mov adc mov cmp sub rcrl clc movabs mov in sbbl movabs (bad) (bad) sub mov (bad) cmp add mov adc lea repz adc movsb popfq and mov loop cmpsb lods (bad) xor or pushfq in in (bad) and pushq rex.WRX (bad) shrb stos add imul cmpsb mov imul jns (bad) andl lea (bad) (bad) jge add imul sbb pop adc outsl test movabs rex.WRB pop cmp movabs jns adc ds scas rex.RB (bad) es jmp cs xor and or out cmp sbb cltd sbb cmp adc (bad) adc mov pop adc (bad) xor xor xchg (bad) xor adc stos xor adc movabs movabs pop rex.WR (bad) mov rclb (bad) repnz sti xchg (bad) xor mov jmp pop andl int adc cmp pop xor mov sub hlt insb adc rex.RX (bad) jmp (bad) xchg mov adc lea or jrcxz pop push std (bad) movabs lret rex.R callw sar and fnop loope fisubrl movabs cmpsl jg cmp imul xor push test movabs insb (bad) pushq repz rolb mov cmpsl adc push (bad) jl std test outsb lea pushq adc adc jg adcb or scas outsb or mov mov pushq cmpsl jrcxz es rex mov sub mov stos stc jmp sub sbb mov adc mulb (bad) int jno sbb mov cmc push fstl sub repnz (bad) icebp mov ss or mov rol jmp mov (bad) xor adc in push rex.WRX sbbl leaveq sub cmp rex.RB fs and cmp scas or xchg rex.RX rex.RB rex.XB and sbb sahf (bad) jmp fisubrl loop cmc movslq (bad) sti hlt jns lock or data16 cs andl adc xor mov enterq rex.WRX rex.RXB mov jne cmp in mov and jmp cmpsb fldcw movsl cmp mov (bad) and rex.RB fstpt jge sub pop or cmp mov (bad) xor cmp or rex.WRXB fs callq xchg outsb xchg hlt sub mov imul cltd clc xor xor sbb mov fisub (bad) insl (bad) adc jno mov vpminsw movabs sbb ss enterq unpcklps xchg xor sbb cmp rex.WX mov fdivr cwtl loope adc rclb adc callq outsb rex.WRB (bad) jbe imul int3 push cmc add mov mov (bad) pop ficomp adc sbb or retq mov (bad) mov xor (bad) cmp mov js rex.RXB rex.X rclb and add add jl add jno mov int3 add pop rclb xchg (bad) ja in repz mov (bad) xor (bad) cmp callq jmp sub push rex.WRX movabs mov sub xor jg jp retq sahf int3 lea movsl movabs pop xor je lods and cmp (bad) icebp rex.RX or cmp pushfq and and mov rorb push cmpsl (bad) push imul cmp stc push jg jmp adc and repnz mov rex.B insb jae mov retq mov bnd pop cmc imul add and jo mov popfq xchg in cmp in xlat push stos out or cltd rex.WRX xchg cmp clc rcr sahf adc mov shr cmp cmc enterq mov pop xor and rex.RX movsb push jb retq jrcxz imul jne (bad) test sbb xchg (bad) in jns pop sub (bad) jo data16 adc mov fmull mov int3 xchg add (bad) test in fisubl jmpq cld (bad) fwait rcll jbe xchg add (bad) add jb lret test je mov and sbb push fstps je (bad) lods sub rex.XB std jge sub add out lret push fsubrs ss pop mov lock in movsl push adc out callq push imul (bad) push mov or mov and sti ja sbbb sbb cld jno mov pop stc clc in ja test insl pavgb xlat or push stc sbb pop lods (bad) jbe rex.RXB (bad) out cs rex.WRB xchg (bad) mov sub jbe mov and mov fldcw push sti cmpb icebp mov rex.XB cmpsb xchg jns (bad) mov retq cmc ss bnd xchg test rex.WXB stos cs jo (bad) enterq rex.RB xchg fdivrl negb (bad) mov mov (bad) rex.WB or rclb push (bad) xor xchg je adc rex.WX rex.RX rex.WB (bad) jmpq xchg xor pop callq (bad) (bad) test fidivrl mov (bad) jb adc (bad) insb psllq xor test sbb enterq xchg sbb fsubrs jmpq sub xor xchg (bad) lods iret (bad) rex.RXB pop movabs sbbb pop cmp pushfq sub (bad) movsb adc fisubl jle cld add adc xchg (bad) jge in push divb pop and rex.WXB push hlt sarb add push in (bad) movslq push fistl jl test repnz cld ficom rex.X cmp and pushfq jno (bad) rex.RX pop mov stos fchs fsubl rex.X rex.WRX leaveq nop or sub movabs cs (bad) pushfq and es test add or add mov xchg retq cli scas repnz (bad) or loopne pushfq testb fwait sub adcl xchg lods sub xor mov rex.WRB xchg fwait add (bad) (bad) cltd add callq mov callq add add and (bad) sahf (bad) cmc mov hlt icebp pop xchg (bad) test xchg xor xchg out xchg jne xchg add lcall xlat (bad) fsubrs idiv scas jno out iret mov (bad) (bad) (bad) cmpsl and (bad) out in rclb add rex.WR xor hlt div sbb cs and and adc icebp fidivrl adc mov xchg movabs lock lret js sbb rex jns and (bad) pop jge loope mov xchg movabs sbb mov icebp insl (bad) xor push fcomps mov callq fdivrp add movabs mov pushq movabs sbb xchg (bad) outsl cmp adc out enterq sub push cmp adc out rex.WXB and adc rex.WRB jae add and stos mov or (bad) int pop cmc rex.RX add (bad) int3 int3 movsl jne ljmp cmp fcmovbe jo,pt or clc lock (bad) sbb sub mov (bad) js or cmpb adc or mov (bad) sub negb retq lahf mov in sub (bad) or xchg cmpsb scas out (bad) jae mov sbb orl (bad) fisub xchg js (bad) mov (bad) xchg cmp rex.XB imulb add ss push xor (bad) (bad) sbb push mov mov or push (bad) add fcoml sarl sbb int3 cld or shll rex.X out jrcxz test xchg insl pop rex.WB fcomps lret rex.B push add scas pop sbbb (bad) (bad) fwait xor cmp out (bad) sbb add cmp sub jl adc fnstsw (bad) sbb (bad) sbb subl (bad) mov stc or popq cld add fsubs push sbb sahf (bad) adc lfs adc gs callq mov cltd fwait (bad) pushq (bad) pop repnz pushq cmp adc or out cmp icebp jns adc test hlt js or sbb adc adc xchg add insb add popfq (bad) cmc or orl sub cmpsb lock pushq jl pop std and cmp cmp and cmc add add nop xor sub rcl (bad) in (bad) mov mov scas negl mov add in (bad) xor movabs callq cmp jbe out pop nop mov adc stc jo mull push (bad) (bad) fdiv (bad) sbb rex.XB cmp pushfq (bad) rex.WRB xor (bad) js push lahf pop push out pop cmpsl mov icebp xchg test rex.XB test adc scas lock (bad) jne cmpb rex.R rex.WRX sbb lock movsl sbb pop ja movabs lods sarb add js adc pop (bad) cmp sbb push or fmuls cmp sbb (bad) shll jrcxz lods fwait jnp (bad) jno pop adc adc (bad) and (bad) retq (bad) or add (bad) or sbb (bad) or xor fisubl cmp mov lock rex.WRB lret (bad) cmpsb fistpl nop xor (bad) (bad) mov scas pop es xchg rex.WXB sbb xchg js icebp imul (bad) stos jb shrb mov or shr sub push in mov lahf jbe (bad) (bad) sbb jl jae push jmp int3 (bad) sub mov sub movabs cmpsb xor (bad) jns fidivl fucomi xchg mov xchg and jp mov (bad) push (bad) rex.XB jne movslq cmp cwtl push cmp (bad) ja sbb fbld lret xchg imul and jrcxz scas push pop jg icebp cltd outsl mov (bad) add mov jno icebp (bad) mov jbe jo mov rex.RB loopne pop stos cmpsl or movabs fiaddl sbb sbb sarb xor (bad) mov or popq insl jns (bad) sahf icebp (bad) in xor rex.RB xchg sbb mov (bad) fs orl or or and push ja (bad) sbb repnz movb jmp and andl pop mov and ror mov (bad) add stc js adc (bad) and in or js,pn test adc movsb cwtl push pop rex.B subb lret nop sub sub pop (bad) loopne rcl or add (bad) lret and and (bad) leaveq or fptan (bad) adc add sbb cltd (bad) (bad) loopne sub (bad) icebp imul out rex.WRB or sub nop loopne clc fwait adc push rex.XB cmc jno orl xor adc cmpl scas loope mov callq stc (bad) stc push sub adc pop (bad) std gs in rex.X adc test jl fcomps out pop adc add and sti or (bad) out adc xor or rex or jrcxz rex.RX (bad) (bad) push pop (bad) (bad) sbb fs add rex.WRB sub test or nop adc sub loopne rex.RXB int out xchg out movslq rex.WRB mov xchg adc mov andl outsb xlat pop ds nop jb mov or sbb cld lcall (bad) jl std cmp cltd (bad) mov rex.WRXB ss icebp adc jns adc rex.WRB (bad) mov (bad) (bad) roll js pop rex.RXB xor rex.R faddl test mov push ds fs fstpl add or cmp (bad) rex.WR adc lahf fist xchg es lock cmc enterq or (bad) cmpsb iret (bad) testb pushq rcrb out push (bad) mov push lock retq int3 (bad) rex.WB push or sbb adc in movabs in retq or rex.WX lea xor cwtl outsb pop push cmpsb sub fistp or push mov (bad) mov xchg test adc sub pop mov rcll retq negl pushfq or retq mov in mov rcrl (bad) idiv out add cmpsb repz fistpll pop mov fisubr (bad) movabs push insb jno clc mov imul rex lahf stos push add fsubrs out addl rex.WR add (bad) scas imul in repz pop mov loop (bad) and (bad) rclb fistpll test sbb adc xchg sarl pop (bad) rex.RX es clc adc mulb adc pop js jle cmp (bad) (bad) xor in jle stos enterq rex.R rex.WX movabs mov iret rex.WRB rex.RXB mov xor callq pop clc gs cmpsl in jo fidivrl pop (bad) adc outsl stc clc and sub xchg cmc cli add (bad) movsl cmpsl lret add mov cmp enterq hlt xlat cwtl cmp adc push nop pop mov rex.XB mov ds js int xor sbb rex.WX pmullw adc xchg push (bad) insl (bad) mov inc sbb cmpsl xchg je or rex.WX add add in jp (bad) mov (bad) cmpsl rex.XB adc cmp test movsl test rex.XB gs push fcomp and cmp es mov xor ficom jmpq and add (bad) movabs rex.WRB mov xchg cmp xor xchg int or callq subb fcoml add or cmp and rex.WB (bad) xchg jp pop xor out gs (bad) xchg clc or mov lahf (bad) (bad) hlt push sbb or popfq rex.WRXB (bad) (bad) enterq (bad) adc xchg jle fsubl add mov adc (bad) and xor and int jbe (bad) xchg ss fs mov mov in fcoms jp addl mov negl and pushq outsl push push fdivrp cmp addb mov fnstsw enterq movabs js movslq adc rex sahf (bad) add (bad) adc out jrcxz jne sub (bad) cmp cld or sub sub test test (bad) mov xchg ja cmpb rcr rex.WRB (bad) (bad) pop xchg cld in cmp rex.WRB and (bad) fbld rex.B push callq je (bad) add int (bad) jmp (bad) cs cmp and xchg div sbb fidivrl add cld pop (bad) cmp lret pop adc sbb mov adc jae cmp lods adc rex.WXB rclb insl outsb (bad) lock pushq or in pop xchg js sub xchg pop (bad) jmp mov es cmp loope orl rex.WXB xchg mov adc rex.XB rex.X stos rcrl out vpaddw (bad) adc mov idivl gs sub mov jns rex.X (bad) imul movsl hlt sbb stc cltd (bad) jrcxz lret leaveq (bad) or mov cmp cmpsb xchg mov callq adc xor rcll fstps mov sub outsl lock (bad) sub xchg data16 mov in movslq add cld cmp sub fiaddl stos (bad) mov jae cltd stc callq xlat (bad) ja cs xchg and out ja mov fild ja pop (bad) test test hlt fistp mov test (bad) cwtl and in nop negb add cs (bad) xchg mov push push xlat mov mov push xor (bad) and add data16 rcrb jno pop push (bad) mov pushq sub (bad) (bad) xor pushfq (bad) pushq mov (bad) (bad) mov mov jl rex.XB xor pop scas pop cmp jp fisttp fldenv xchg neg (bad) mov xchg adc mov cmp rex.WXB jno sbb clc mov xchg sahf pushfq (bad) gs adc test (bad) movslq mov lret adc int3 mov or (bad) jrcxz pop mov pop jb nop jne cltd (bad) retq adc push mov xchg out jb xchg and retq pop sbb jl subb cmp xor push stc and xor movabs adc jl mov enterq adc lock xor and enterq push (bad) ljmp cmp pop adc mov sbb adc jno or mov xchg xor rex.R movsl push mov imul ss and imul add movabs lock (bad) rex.WRXB (bad) imulb adc repnz (bad) loope adc and xor insl rex.B (bad) (bad) sbb jl callq stos sub mov rcrl sbb jne rex.WX jno in scas mov push enterq data16 adc mov ja repnz cmp rex.RB lods js fucomi (bad) rex.WB rex.WX jno fldcw push xor (bad) test rex.RXB adc add sbb xchg mov lret cmp push movabs or pop (bad) cmp rex sbb mov jnp int3 sbb rex.RX (bad) mov (bad) movabs movabs xlat fdivr gs xchg add cwtl or mov adc push mov fcomps fcompl adcb imul cld loop (bad) adc test add sbbl (bad) sbb int3 add imul adc and mov add adc fdivl push (bad) sub cmp adc icebp xchg adc cltd (bad) adc mov retq jl adc rex.WXB (bad) cmpsl (bad) or add adc out and lret adc ficoml std (bad) (bad) scas movsl or jo add (bad) (bad) push (bad) adc sub (bad) cmp mov jnp mov adc add in cs adc mov movsl fs jmpq addr32 jl mov cmp (bad) outsb rex.WRB (bad) mov stos lret movabs repnz bndldx repz xlat push nop repnz sbb cmc mov cs faddl or imul sbb movabs popfq out and in test rex.RX (bad) stos (bad) rex.XB add hlt jge repnz sbb and shl adc mov (bad) jle cmpsl scas movabs hlt cmp (bad) rex.WRB add rex sbb sbb add xchg mov andb fcmovnbe rex.WXB rex.WRB lock mov in fiadd ja rex.WX xor sub fwait jno shrl (bad) push stos mov pop jae testl xchg pop fldt stc stos adc and and callq mov (bad) adc movabs pop (bad) (bad) adc cltd jmpw lret or movsb add and stos (bad) mov (bad) imul mov lods xchg cmp clc xchg and movsl mov pushq rex.WRB in jo cs jge cli fwait jl movsl (bad) retq rex.WRB adc sub or cld (bad) fdivr pushq rex.W cld mov and jmp mov (bad) repnz (bad) hlt lods fs in test out jg or pop push push repnz (bad) or xlat (bad) enterq popfq (bad) movabs jo test rex.RX fs in jne mov add mov push jle test adc stc jb mov nop sarb std (bad) movsb adc rex.RXB hlt fcoms sub sub movsb or repz sti andl xchg xchg and rex.WRX movsl cmpsb out mov icebp mov (bad) push sub (bad) loop mov (bad) add adc rex.RX pushq (bad) sbb rclb and callq mov imul shr and xchg pop rex.B shll ds xchg (bad) (bad) or callq stos in clc lock lea mov mov insl cli mov mov hlt lret cmpsb ds (bad) rex mov rex.W rex.RX xchg or test in xchg out mov repz push test xor push mov jbe add imul cmp in adc rclb fs sahf or (bad) rex.WB sbb (bad) adc (bad) fstps stos (bad) push test jle lret xor cwtl lods (bad) adc loopne push sbb sub pop sti iret insb adc fstp movsb in scas xor cmc pop push hlt rex.WX pop or push mov or (bad) rex.RXB and hlt nop (bad) sti adc mov cmp fimull repz (bad) mov iret pop xor test push (bad) syscall adc (bad) outsl jge mov pop and mov rex.WXB xor fadds insb (bad) cmp pop (bad) callq in mull enterq pushq (bad) leaveq sub and stos sbb add (bad) pop and add (bad) or mov callq lret (bad) out leaveq adc out out loop sub pop callq movabs pop roll lock movabs (bad) (bad) movsb jle adc insb gs (bad) (bad) andb pop lret (bad) insb iret adc mov and mov xchg sbb ja (bad) movslq mov in rex addr32 out cmp or sti xchg jp (bad) rex.WB (bad) jmpq rex.WRXB (bad) out add hlt sub (bad) pushq or ja (bad) fneni(8087 int mov (bad) rex.WRB (bad) cmp movabs xlat (bad) (bad) jg cmp movsb mov notb add (bad) mov lods movabs jae cli loop movabs mov xor mov (bad) cwtl adc xor ja scas testb (bad) pop rex.WX (bad) (bad) rex.WRB or test jmp add xchg sub fild or out (bad) cli addr32 cmp mov xor mov (bad) mov add imul jle xor sub out (bad) push rex.W sar or and (bad) lahf lods rex.X (bad) mov or push (bad) mov movabs fcom lods mov (bad) adc add adc push mov addl loope add idivb hlt clc mov xor ficom loop xor jmpq sub fidivr sub (bad) fcoml (bad) xlat ss xorl and mov imul (bad) mov or cltd fwait xchg or adc pushfq in add rcll cmp movslq add sub or sub (bad) scas rex.WRX push insb mov mov rex.RXB mov jnp lea enterq rex.RXB scas mov sbb push mov sbb (bad) fidivl (bad) pop movabs imul xchg (bad) (bad) xchg fmul jl (bad) and push adc ja push enterq sbb fidivrl (bad) mov and (bad) xor adc stos rex.WRXB rex.WRX ss adc loopne or jne sub (bad) adc movslq and cli int3 sub rex.RX in loope xchg xlat or imul notl mov (bad) test in (bad) push fnstsw (bad) movslq (bad) stc adc mov xchg ja (bad) mov repnz mov sub or mov lret stos jne add sbb mov insb in xlat xchg or adc and hlt cli lock test jns (bad) pop xor int3 (bad) or xchg jbe jb stos (bad) (bad) cmovl pop mov sbb mov and (bad) int3 rex or leaveq js pushq int3 mov rex.RB in mov push fwait (bad) int3 rex.RX fistl sub cmp xlat xor jo (bad) es mov xchg adc sar (bad) adc xor fcomps sahf mov (bad) adc shl movsl adc or movabs (bad) enterq lods and ds xor out sub out setae xor push rex.WRB gs xchg (bad) mov push sbb sbb cmpsb jmpq int3 sbb add rex.WRXB addr32 mov (bad) fbld out (bad) or int imul cmc (bad) push lock mov movsb int3 in scas (bad) fdivr fisttpll add rex.X (bad) (bad) orl (bad) push pop out insb adc pushq (bad) iret or (bad) adc (bad) mov adc or lock (bad) mov cmp sbb sub jo jl clc and (bad) (bad) mov lahf hlt xchg adc jge rolb mov xor mov adc loope lock std pop movabs push movabs repnz push mov (bad) out sub retq jl scas rex.B jae (bad) sahf pushq (bad) (bad) addl adc mov push pop adc (bad) sub jle lods xor rex.RXB ds mov jrcxz adc retq cmc cmp mov (bad) xchg movabs stc adcl fcoml cmp (bad) add jle in rex.WX sbb int add hlt (bad) (bad) sub rex.WRB (bad) push (bad) jg test js movabs test (bad) scas mov stos mov (bad) xchg imul add sub loopne mov jmp lea (bad) mov or sbb (bad) mov movl adc and (bad) push stc stos sub mov jb (bad) sbb xchg mov adc jmp in ja xchg fs mov rex.WR data16 adc jmpq movabs movabs rex.XB push (bad) jge rorb pop jne mov sub cwtl (bad) push fsts fwait pop (bad) sbb mov (bad) rex.WRB rex.WXB add mov jp mov cmpsl loop cwtl sub (bad) mov (bad) clc pushfq xor mov push cmp andb adc jne (bad) push adc rex.X and (bad) leaveq jne xlat (bad) rex.RX (bad) adc retq add test sbb rex.WB pop mov rcll movabs jge and mov rex.WRXB (bad) decl vrcpss jge or jrcxz xchg (bad) mov rex vsubss loop pushfq (bad) jmpq mov in out movsl fstpl int3 std add mov adc rex.WR mov test scas and mov mov fadd (bad) rex.RXB sub push pop in sub (bad) enterq adc rex ds int bnd fstpt sub sub cli cmp and (bad) jno repnz add rex.R lods int3 mov (bad) pop sbb adc cmp adc movsl sub unpckhps in pop sbb (bad) out hlt jne sbb push test or movabs xchg jg lock lret (bad) and mov jl (bad) js imul and (bad) and movsl (bad) rex.WB add rex.R repz rex.RB mov mov movsl (bad) outsl rex.WRB jbe xchg mov or adc or (bad) adc sti fcoms jrcxz or adc scas sbb mov jb test mov lods bndldx ss push sbb mov mov sub xor and sub add test es (bad) jrcxz cmp jl (bad) movabs iret adc (bad) lea add imul enterq jno clc jge adc rex.RB rex.WXB lods adc mov pushfq stc (bad) dec fstps and adc mov add push ds callq adc fcoms mov jno mov rclb js sub int3 sbbb and leaveq xor shr scas xchg mov int3 fdivrl (bad) data16 xchg lock sbb sahf (bad) sbb cmpsl jns and rex.WR (bad) jbe movslq or rex.RXB mov (bad) (bad) pop in mov jnp (bad) addr32 mov sbb shlb and xor retq add mov je adc xchg rex.W xchg adc lret push adc cwtl callq mov movslq jbe jb adc jmpq int3 push fcomp (bad) push cs rex.WRXB fnstcw mov mov jno cwtl (bad) clc pop jge gs xor pop add (bad) jmpq (bad) rex.WX add sub int rex.WRB (bad) callq subb mov iret cmp addr32 xor mov and sbb lret mov pop jle callq sahf xchg adc (bad) (bad) rex js rex.RXB repnz cltd shrl xchg icebp mov or (bad) jbe rex.RB or shrl adc jb mov std or (bad) imul adc jne pop lcall rex.WRXB pushq push jno test es or fwait mov int3 pop mov add (bad) sbb rex.X sbb mov je rex.XB fs (bad) (bad) push rex.XB cmp push mov mov or mov imul jl scas mov (bad) outsl or pop repz outsl adc ds sbb (bad) jae (bad) fistp mov adc repz (bad) cmp movsb jrcxz test sub or out (bad) lret (bad) (bad) pop (bad) lods xor cs fidivrl and mov ss mov xchg out jb clc stos stos rex.WR xchg cmp or pop xchg xchg mulb and rex.WRB sbb jnp jle or adc adc (bad) movabs xor (bad) (bad) (bad) incl scas push push mov (bad) adc pop stc (bad) adc incb adcw pop mov or xor loop clc sbb callq and mull (bad) push xchg sub add test mov rex.WB mov sub lock mov (bad) add lods (bad) (bad) adc rcr mov (bad) sbb (bad) and or test loope mov clc xchg (bad) sbb or cmp not (bad) fucomp rex.WR imul movabs fisubr xor cmp shlb rex.X or (bad) (bad) sub sub mov in sub (bad) xchg popfq jmpq retq xchg mov xor icebp lock (bad) or jmpq jnp or mov pop pop fiadd jns (bad) jo rex.WX insb push testb adc fstpt rex.WRXB sub sub and jne mov and (bad) adc lea je jbe clc std pop jae xchg push (bad) xor fist and jp rex.X (bad) cmp xchg (bad) (bad) lea retq cltd mov push adc sahf adc adc fcomps (bad) adc cmp repz adc xor int (bad) mov mov out (bad) cmp xlat jmp pushq retq or sbb cmp test sahf xchg nop cmp or sti push mov enterq pop pop out xor mov pop test sbb adc lea adc xchg hlt rex jg xchg or fwait jo and icebp xchg pop (bad) cwtl pop or cltd in push fstps jo add or mov lods cmp fisttpll callq lea (bad) nop mulb sbb fcoms jp mov cs in sahf retq imul xor (bad) mov sbb xlat pop jle mov es pop mov sub xchg rex.X rex.WRXB cltd rol in xor adc mov adc (bad) pop cmp cld iret out sbb fbld (bad) mov rex.RX push xor adc (bad) (bad) xor out (bad) pushq pop (bad) cmpps in rcll sub outsl (bad) in (bad) rex.WXB gs rex.XB jrcxz in mov push in cmp xor (bad) sub xchg cmovns (bad) cmp rex.WXB pushfq rex.XB (bad) (bad) jns rex.WRXB mov mov (bad) fsts ss (bad) adc ficoml jp or jb iret rex.WRB cmp lret jge sub mov rex.WRB scas adc fsubl in rex.WR rex.B rex.W adc jg gs movslq ja and (bad) ss sub cmp (bad) sbb xorl test leaveq mov adc fidivr rex.B smsw mov cmc sbb pop adc js int3 jb push xor cmpsl adc sahf mov fstpl leaveq (bad) fcompl mov adc (bad) mov iret shr sub mov push mov jl sarb sbb pop jo vpcmpgtd out rorl adc (bad) movsb movsl (bad) (bad) rex.X retq in (bad) push sub add mov adc and outsb repnz (bad) (bad) (bad) jno loopne adc sbb sahf out fs sub mov adc loop fwait js retq movsl pmaxub xchg mov adc clc out out int (bad) mov jno (bad) sub sub mov adc repz adc fucomip and push jno sbb retq add retq jns (bad) (bad) lock cmp fbld push jne rex.RB rcll lods mov (bad) (bad) loop cmp lods mov mov jo xchg fcmovnbe xor adc adc es out and je imul mull mov xchg shrl movabs mov adc mov push adc cli adc cld (bad) adc (bad) sbb jp sbb mov or lods mov std jne cwtl (bad) je rex.WRXB js (bad) cli mov push rex.WB std movabs in sub mov adc gs pushfq rex.R fs push (bad) rex.WB rex.WXB push xchg fnsave push test ss jl adc clc (bad) mov mov fcmovnu mov and lret mov rcl icebp lock cltd rex.RXB out int3 imul add xor cwtl out (bad) cmpsl sbb js callq (bad) sub movsb (bad) lea jmp (bad) jnp add and (bad) out mov xchg hlt rex.WX jne rex.X cmpb in pop (bad) cmc cmp jns or mov mov push in sub fwait roll add xchg cmp lahf (bad) sbb and xor adc sbb test popfq divb mov (bad) (bad) rex xorb (bad) mov or (bad) cmc insl jle loope out in (bad) repnz lret ljmp loopne fisubl cwtl movabs movabs pushq add or (bad) xor (bad) rcrb xor add jle or sub movabs callq rex.WX jnp and xchg xchg fwait or xor movabs mov rclb rex.WB add sub adc sbb addr32 adc xchg jns mov movabs mov adc lea push mov clc cmp and (bad) cmpsb fwait and repz and jge (bad) int3 mov pushq stos jl or lret fcompl sbb rex.X add xchg mov sub loopne outsb rex.WB (bad) (bad) rex.WB stos xor js in (bad) (bad) imul mov cltd or (bad) jo repz sub adc enterq fimul lods addr32 loopne adc xchg xchg gs (bad) xchg sub scas add rex.B rex.WX lock rex.B (bad) retq or subb stos in movsl adc rex.RXB mov (bad) pop enterq or jb cmp (bad) cli sti jb shll sbb fs jnp pop subl and (bad) adc add out xchg rex.WRB fwait (bad) rex.WB imulb std add pushfq clc ja divb retq xor test hlt js or xor jle jbe mov movsl mov cli add ss pushfq (bad) (bad) jno add add out int3 sahf add xor mov movabs inc loope xor push mov int lret mov rex.X (bad) sbb pop mov callq lods or adc lahf clc add and mov scas (bad) movabs imul and pop (bad) xor lea mov in sbb cmp or jge lock xchg out jbe cmpsb ficoml sbb xor and pop (bad) pop insb sub (bad) push rex.WRB sarl out vmovaps mov std xor shlb pop adcb jp insb mov mov mov (bad) movsl (bad) or iret fidivl push xchg push cmpsb (bad) jg push movabs adc sti pop sub xlat (bad) outsl or jne mov and callq roll in mov jb (bad) lock cwtl test push sub rex.WB mov cmp rex.X jb (bad) (bad) xchg callq (bad) jmpq fcomi cwtl jnp sub movsb rex.WRB rex.X or pop es jb,pn iret push fadds rex.W (bad) jg (bad) pushfq pop mov and rex.W xor mov shll (bad) sbb icebp mov movl movsb cs (bad) xchg mov fisttpl (bad) jrcxz out clc sbb (bad) mov je and rclb (bad) jae push adc icebp jbe scas adc mov cld push fistl push (bad) (bad) adc mov repz adc mov xchg loope ss sbb push rex.WRXB pop pushfq adc jbe xchg adc xor xor (bad) gs rex cmpsl adc jbe loope adc (bad) (bad) mov push push (bad) or addr32 orb repnz fcomps (bad) stc sbb xor cmp js rex.WRB rex.R cmc rex.WRXB and repz and int test sbbl scas sbb pop repz xor stos adc xchg cs rex.WRX rex.W (bad) popq jmpq mov sbb enterq sysexit adc movabs test (bad) (bad) (bad) lods (bad) scas adc retq push movabs add cmp jne jno int3 std xchg or (bad) in (bad) es in push out xorb adcl add pop mov test enterq rex.W sti rex.WRB cmp pop cmpsb or adc sbbl pop outsl adc rex.X xchg jnp movsl psllq test (bad) adc sbb unpckhps xchg sbb (bad) (bad) mov adc pop movabs pop retq and movabs (bad) ds mov (bad) or movsb rex.WRXB push (bad) xlat xchg push fbstp rex.RX pop (bad) adc push repz or mov mov iret mov cmp rex.RXB rex.XB pop (bad) adc mov rex cmpsl jbe callq sbb xchg (bad) (bad) (bad) imul xchg pushq (bad) sbb test cmpsl and lret (bad) push mov (bad) jp sti adc jmp ds mov rex.RXB idivb loop repz (bad) cld rorb fdiv xlat test lret lahf js jb enterq (bad) icebp or xor leaveq (bad) (bad) mov mov xor jle add (bad) lret icebp xchg fnstcw enterq (bad) and push retq adc (bad) xor (bad) (bad) mov (bad) mov add imul mov (bad) cli rex.XB sub shlb lods fadds inc vxorps movsb mov negb out hlt retq loop nop retq (bad) push xor xchg rorb lods cmp or out cmpsl or (bad) xor cmp imul pushq je sarb je (bad) sub cmp mov sub retq rex.RX sbb mov mov jns enterq and and add add es (bad) sub shlb enterq adc jno out cwtl jbe add (bad) ja (bad) or mov adc imul adc rex.X xlat adc push adc xchg (bad) fistpll push add cmp (bad) xchg cmc mov adc lods rex.WR xor or out insl nop icebp adc lock rex.B iret retq jg nop cld movsl fs add (bad) adc test sahf and or sub vmread mov add jne jns xchg or rorl add sbb rex.X xcrypt-ecb cmpsl (bad) rex.XB xlat lret js mov mov (bad) sarb pushfq fild add rex.WRXB (bad) (bad) cmc (bad) pop clc sbb (bad) int3 (bad) mov shl rex.WX stos adc jbe (bad) (bad) xchg imul jmp rex.WB lock out movabs cli sbb or cmpsl mov and (bad) push stc xor outsb negb test int3 rex.X jl push imul sbb (bad) mov loopne retq mov push ficompl (bad) lea jne mov movsb (bad) sub jbe jns outsl fnstsw xor (bad) (bad) sbb lahf (bad) sarb and mov (bad) add or (bad) insb (bad) mov (bad) jae mov in add (bad) mov hlt mov hlt loopne pop xchg movabs rex.WR sub mov (bad) jmpq or mov xor icebp rcrb mov and (bad) sbb xchg jge or shr jo cmc fcompl (bad) rex.WB (bad) cmc add push (bad) cmpb ror (bad) fildl movabs (bad) and add mov push cmp rex.WRB in test rex.WRXB jl imul add ss (bad) popfq (bad) out adc pop pop (bad) nop adc retq push adc pop lahf fstp cmp cltd jmp pop adc sbb rex.R clc (bad) insb (bad) adc jnp (bad) cmp negl stc lods (bad) add (bad) mov mov enterq pop (bad) mov lahf mov rex.WR imul int adc mov cmpsb insb vunpckhps sbb (bad) cli int3 lock (bad) imul jg rex.WRXB (bad) rex.R pushfq imul (bad) (bad) xor cmpsb mov and andb (bad) mov ds rex.WR out push push gs int mov movabs push mov sbb ja callq (bad) (bad) push negb mov rex.B jmp cmp pop sub push imul orb fmull mov es loopne jne xchg (bad) lahf (bad) (bad) loope enterq cmp xchg sub mov add xor jno fstps orb sbbb je movabs pop insb sti sub rolb cltd xor push cmp cmp add mov add xor mov icebp mov jle test test adc orl movabs (bad) jmp out or repnz sub lahf mov cs mov jrcxz imul fwait push xor push xchg cmp xor sbb movabs xor adc adc pop pushfq mov and adc rex.WX xchg retq retq xor sti adc outsb in ja push insl fs (bad) fcomps movslq in (bad) and jae callq jbe adc xlat (bad) stos adc rex.WXB sbb (bad) xor sbb adc or cmpsl out rex.WRX rex.WR (bad) jnp add rex.RB (bad) in and icebp cwtl (bad) subl cmc mov jns sti jp rex.WRX sarb xor mov stc lret jbe (bad) enterq lock nop movabs mov sti and cs movl lahf (bad) mov add orl push pushfq loopne adc retq jmp (bad) sbb pop stos movsl xchg (bad) gs (bad) push callq push test in mov mov cmpsl stos jb cmp ficomp push outsb jmp pop imul cltd outsl out jbe sti (bad) xor in callq sbbl (bad) (bad) (bad) rcl push scas icebp (bad) mov rcll push out add test mov pop out iret rex.R pushq stos push (bad) fst test sar mov xchg push cmp int3 mov sbb rex.R (bad) fwait push and (bad) (bad) idivb mov fldenv (bad) (bad) shrl add pushq cmp movabs xor (bad) rex.WB xchg shrl iret (bad) mov (bad) lock mov adc loopne callq xor pop jb xchg push (bad) sti lock gs fcoml or pop xor fdivrs adc (bad) and addr32 (bad) (bad) cmp sbb add (bad) (bad) enterq lahf out movabs or roll pop pushq insb adc push push (bad) jns sbb or sub jl shlb add fnstsw cmpl xor xchg repnz sub cmp repnz mov (bad) cmc push or sub out xchg movabs xor (bad) (bad) rex.WRXB movslq std add in shrl (bad) rex.WR jl sub out lock push rex.B scas or fmul lods adc test mov lea sub (bad) cmp xchg push (bad) or iret je sbb sbb xor (bad) push add (bad) cmp fildl imul xchg fcompl roll movsl (bad) sbb callq hlt or xor rex.X rex.WRB or sahf jg xor and gs pushfq (bad) mov out rex.X add adc (bad) xchg test push lea mov mov xor in std jmp and (bad) (bad) ficom and (bad) or iret imul rclb (bad) sbb stc jo (bad) (bad) movsl xchg (bad) fmulp imul sub (bad) adc cmp js cmp rex.RXB xchg (bad) (bad) mov cltd icebp push add test mov repz repnz mov je out mov movabs xor push (bad) push jmp add (bad) data16 (bad) fsub jno repz fs (bad) jno cmp pushq adc clc fldt pop fsubs repnz test hlt pop add pop sbb (bad) or rex.WRX (bad) (bad) jno scas mov loopne loop imul lret iret cmp and sbb test (bad) xchg (bad) loopne sbb punpckldq add sbb jp cmp nop iret movslq adc or mov (bad) js imul rcll cltd cmc or popfq fsub pushq rex.X (bad) xlat shlb xor cmpb (bad) movslq movabs mov shll xor rex.X adc mov push cmpl mov retq (bad) imul rex.RB pushq sub (bad) sbbb xor jno (bad) je cmc adc or (bad) (bad) fs mov push jmpq or jne (bad) sbb cld (bad) (bad) (bad) fs fildll (bad) mov ja int3 lock mov repz fmuls shl pop mov rcll sub fisubl jb push imul or xor imul sub xor icebp mov mov je in shll movslq pop jge pop cmp xor rcrl andl (bad) fsts add (bad) vshufpd sarl sbb adc movabs repz jb out out rex.RX ficoml (bad) cmc push mov sub in adc xchg jno ja (bad) (bad) (bad) and rcrl jmp xchg std sub in paddq mov shll mov pop sti rclb in xchg or adc cmpsb add adc cmp sub or cld orl push (bad) fdivrs add jmpq pop push (bad) lea scas (bad) (bad) or iret repnz sbb push xchg sbb rex.WB (bad) mov loopne fsubr sub mov repz in mov jl and (bad) (bad) xchg imul pushq adc pop jne mov jae repnz fimull (bad) rorl adc fiadd xor (bad) lock cmp out fimull rex.WXB jbe jno in (bad) xor (bad) es add or (bad) adc rex movsb xchg (bad) sbb mov (bad) mov roll add sub in iret (bad) add mov push icebp hlt jle mov (bad) cmc jp sahf and add insb (bad) xchg stos lcall (bad) (bad) test js popfq movsl adc movabs insb adc fnstenv mov adc movabs rex.WR in sbb rex.XB ds adc and mov clc and (bad) adc ficoml pushq xor mov sbb pop (bad) (bad) or adcl rex.W imul rex.XB (bad) ja (bad) rex.WRXB (bad) cli leaveq push push pop xor insb (bad) push cmp add lock (bad) xor sysenter rex.WRX scas gs (bad) rex.X lea lret pop xchg rex.B (bad) cmp mov mov add xchg xchg sbb pop mov iret mov pop shrl xor pushfq (bad) rex.B ss rex.WB add movsb imul scas and xchg xlat rex (bad) and lock or insb cltd rex.XB scas mov in xchg (bad) or rex.WXB movsb sbb mov cli sahf lock stos jl (bad) (bad) sub (bad) mov cmp (bad) data16 (bad) cmc (bad) add sbb add (bad) jrcxz gs adc mov mov ds sub jnp pop jb int mov pop add xor xlat adcl or mov in xchg jmp jbe or in xchg xor push ds loop cs mov add fdivr mov and smsw pop icebp hlt add rex.WRB push (bad) pop rex.WRB xlat xor add (bad) mov (bad) movsl or xorl (bad) jl cs mov (bad) fwait pop (bad) (bad) iretq in cwtl add jnp callq movsb rex or or mov pop scas negb push mov rex.WR add adc retq jns (bad) xor cmp (bad) rex.W es adcb adc lock sahf cmp sbb (bad) loope mov (bad) (bad) (bad) adc decl ss stc mov gs int3 add xor mov mov and cmpsb (bad) repz (bad) xor sarl sub xchg retq adc movabs (bad) add addb adc add or iret jno (bad) std xchg fsubl cmp fstpt retq cmp and or lahf (bad) lret callq lods (bad) adc push sbb retq adc rex.WX adc in jne jge mov stc fdivr (bad) fstpt push es adc mov rex.WRXB ss pushfq ds jg adc std movsl gs sbb xor (bad) mov adc ja stos fnsetpm(287 adc movabs adc js and jmp hlt push pushq or divb (bad) vunpcklps mov adc sub outsb xchg or pop movsl fwait rex.RXB (bad) lahf add rex.RXB out adc xor push or or xchg negb mov sub (bad) (bad) jns addb jmpq adc loope (bad) and mov rex.WB (bad) cs adc test jno sub out movabs imul (bad) je cltd loop adc push xor rex.WXB add pop push sbb retq xchg cmp mov or rex.WRX pop fs (bad) dec adc cs (bad) (bad) data16 xchg in fwait cmp add cmp add xor sub jno xchg mov hlt push fdivr in repnz in rex.WR fwait push imul pop ja mov sub (bad) setle fdivs xchg lret (bad) insb sbb int cmp xor sbb add xorl test pop adc (bad) (bad) out cmp lods jnp mov stos leaveq add fisubr add mov pop (bad) adc (bad) fld1 (bad) add (bad) (bad) nop scas push lret (bad) faddl lea in add jb or (bad) pushfq (bad) add xor jnp xchg jns rex.RXB mull or cmp xchg stc flds pop (bad) xchg ja outsb lock movabs or add rex sub gs or outsl movslq add add pop lock push lea pop add cli fcoml faddl loope push (bad) cmp pushq and repz and mov stc unpckhps xchg xchg fsubr jno jl jne or imul out rex.RXB mov jl rex.RX sub mov sub negb sbb and mov mov or rex.WRXB or adc clc sti adc ffree movsb nop rex.X mov jne mov xchg xlat scas movabs sub (bad) adc pop add rex.B rex.RB (bad) adc jnp (bad) jno xor movsl jg xor mov data16 (bad) jae push (bad) cmpsb or movabs jmpq xor rorl xchg (bad) lock stos lods mov add (bad) (bad) jmpq add rex.B jbe (bad) sub jbe jge scas push hlt mov ss rclb xchg pop je jae iret (bad) cmp lock loope and rex.WR mulb (bad) xchg pushq cltd in sbb insl sub xchg jrcxz enterq div clc adc or (bad) cwtl ss retq rex.R in je rex.WRXB adc gs outsl adc push sub sbb sbb rex.WRX or rex.WB add je sbb shrb cmp cmp and cmc mov scas rcr push (bad) sbb (bad) (bad) mov callq sbb pop rex.WRX icebp mov int3 or cmpb or lret adc rex.WRXB push rex.X sbbl (bad) mov movsl jae jo and sbb rex.RX sarl lock pop rex.RX retq sub add rex.WRX (bad) jnp (bad) push rex.RXB rex.XB ss or roll movabs push xchg je or xor push mov lahf jl rex.X enterq adc mov adc and add add movabs (bad) movabs push rcrb addr32 and imul iret rex.R xchg (bad) mov sahf sbb fsts adc (bad) js std cmpsl popfq rex.RB out push adc rex.WRX mov js push (bad) insb ss adc mov hlt clc out add and out in push stos mov push (bad) icebp cwtl sbbb (bad) fdivs (bad) rorl adc lods lods (bad) or jo movabs movslq jb cltd loopne and out (bad) pop test pop data16 (bad) rex.X add rex.WR or or add mov lock out or repnz mov cltd mov push fcoms pop jl mov jmpq cmp imul loopne (bad) (bad) push scas add bswap adc xchg js mov mov push push sbb sub xor pop pop cmpsl adc repnz je fildl mov jne xor sbb adc push push or sub xchg jo cmp lock sub imul mov out (bad) lea mov mov adc rex.RXB iret (bad) mov mov xchg or jp cmp rex.RX (bad) fwait adc xchg fistl (bad) jl xor adc push pop jne xchg ja rex.B fstpt fisttpll test add rex.WR adc add in xchg int3 callq xlat rex.X add mov cmp jne xchg or push js (bad) lods orb xchg imul mov adc pop fcom (bad) cmp movdq2q (bad) sub hlt rorb enterq repz scas (bad) jrcxz in jbe sub sbb jno cmp (bad) jge jmp ss cltd cmp pop cmp (bad) push iret mov xchg rex.RXB loopne repz idiv cs fstpl movsb mov sub std loopne and pavgw xchg push adc rex.R or movabs cld enterq jg retq (bad) xchg xchg movsb cltd popfq or (bad) clc jne adc sbb sbb fdivr sarb iret add xor rex.WRX hlt add cmp fsqrt lods and xchg add sahf lock jae cltd mov or or cmp mov lock sarb fimull (bad) sbb gs (bad) xchg sar add jg xor sbb fistl out mov xchg data16 addr32 je mov rex.RXB cmpsl xchg or sti adc pop mov push (bad) adc pushq xor (bad) or adc (bad) popfq insb rex.RB jbe rex.RXB cltd adc xor rex.W jbe jp push xchg sbb mov pop lahf sbb sarb cli (bad) xor (bad) cltd cmp (bad) (bad) repz (bad) sahf std fwait jrcxz xchg sbb jmpq fisttpl ficomp lods cwtl loope scas (bad) sbb (bad) adc or jae sub stos cmp xchg xchg push sub (bad) (bad) or lods (bad) push sub fmul rex.RXB adc sub cld (bad) int int3 cltd sbb in xchg mov xchg lods (bad) jno (bad) or xor jbe rex.X retq jnp sbbb es or adc sbb gs or (bad) mov mul (bad) adc cmp fwait (bad) jnp pop leaveq mov js (bad) fcoml rorb (bad) repnz stc mov jo push lock test in (bad) ss sub mov (bad) jb or imul pushq imul xor jno imul or adc jb jmp faddl in (bad) xchg sbb lea xchg jl rex.XB (bad) jnp sub fistpll repnz ror mov (bad) adc movabs sub clc movabs (bad) xor adc mov cmp push sbb xchg adc stc (bad) rex.WRXB pop lods scas xor and xor push adc (bad) mov or imul adc (bad) je test loop adc add (bad) (bad) cmc push (bad) js callq iret and push adc mov push cltd cmp rex.WRB cmp (bad) (bad) cmc mov ficom adc xchg testb cmpl adc rex.WRXB pop and mov cltd movslq (bad) (bad) add movabs and mov mov sti or mov push push notb rex.WRB out clc push test fbld jmpq leaveq test clc rex.WRXB sub mov mov adc in pop or jl and sti cli int3 in je jmp jne in rex.RX hlt (bad) cld (bad) insb gs adc (bad) sbb movabs iret and lock (bad) mov rex.WB fnop jne jge gs (bad) add popfq sbb rex.XB movsb int mov lret test (bad) xor test ja cmc cmp rex.X (bad) add movsl in iret mov int sub or cmp stc fsubrl adcl (bad) cmp scas xlat mov jb outsb repnz (bad) lea sub or sub mov shlb jmpq cmpsb out lea jl,pt (bad) jns mov add adc pop test pop gs lea mov jno rex.X rex.WXB rex.WB (bad) cltd js sub pop sbb mov xor (bad) cmp mov push mov out pop or (bad) mov callq enterq mov imul (bad) test jge vfnmsubps jrcxz jl (bad) push xchg add and (bad) insb rex.B pop adc lods test (bad) lahf cmp jae adc jbe loop xchg (bad) pop callq roll jo nop jl out insb add (bad) sub callq out rex.WRX nop roll (bad) or adc cmp mov adc mov insb pushfq scas xor xor add nop adc jp icebp add movsb enterq xchg xchg pop mov (bad) cmc adc adc rex.WB add mov xchg and scas in mov jno jmpq sbb jp (bad) (bad) jne cmp add (bad) jge add xchg xorb lock imul int adc add adc callq lret shlb sbb leaveq repnz mov xchg mov sti adc rex.XB stos or (bad) ja (bad) sti (bad) xor xchg movslq shll add or add leaveq (bad) mov popfq mov jae mov sbb push cmp (bad) mov mov cmpsl retq rex.B repz ja movsb jrcxz xor rorb (bad) sbb (bad) (bad) cltd adcl faddl test test or int3 rex.XB fwait sbb mov callq (bad) rex sub pop sbb lret push icebp retq and (bad) xchg cmp mov add (bad) loopne std (bad) mov cmp (bad) std sub mov rorb sub callq mov (bad) or (bad) (bad) mov outsb std rex.WRXB mov push sbb rex.WXB fwait jne adc and push jmpq add addb or push cmc mov cmpb movabs sahf mov add (bad) and push mov mov ficompl sub jno (bad) js adc test test sbb out enterq or lock or jg and mov or pushfq (bad) or in stos stos sbb cmp sarl fstpt scas clc out repz movabs stos or cmp movabs jnp xchg repz mov or (bad) sbb add movslq rex.XB cmp gs rex.WX mov and xchg xor cli fnstcw fsubrl xor xor (bad) clc insl in adc xchg (bad) (bad) (bad) adc (bad) mov cs negb mov jno pop (bad) mov sbb test adc rcrb lock sub ficoml cmp (bad) adc js pop cmp mulb fs in pushfq sbb out mov add sbb (bad) jl (bad) adc xchg adc rex.X and jle cli sqrtps mov fild andl and mov (bad) jo xlat mov cmp and (bad) fstps movsl cmp (bad) lods push roll rex.RB ss callq loopne jle xchg pop in xchg mov test push rex.WRB jmp jo rex.X cld and movabs xchg (bad) pushfq clc rex.WB push lock rex.RX (bad) (bad) loopne push jns pop fsubs push jge mov rex.WXB (bad) sub jmp sahf (bad) rex.WRX ss adc pop rex adc xchg mov adc add sbb jmpq and fsubl (bad) adc lret rex.WR rex.WRX xchg adc clc (bad) (bad) (bad) movsb xor fcompl in xchg cs (bad) callq lock adc pop (bad) add or movsb sub bnd cmp movslq movabs and jmp sub xchg clc (bad) lods push mov repz movsb rex.WRB xor out mov jo adc add lods (bad) (bad) xchg lock fmull (bad) rex.WRB cmp (bad) add push mov adc movabs mov (bad) jg mov (bad) notb cld test mov push mul add std (bad) adc negb pushq adc mov rex.WX jp push adc adc cli addb ss (bad) mov xor stc (bad) data16 xchg or fiadd adc fnstcw adc xchg pushfq movsl sub (bad) insb or (bad) fistpll (bad) sbb fdivl movabs fs jbe jl out mov sahf icebp adc sbb mov ss adc rex.WXB add adc jge (bad) mov popfq (bad) jle adc (bad) addr32 sub adc push icebp add int3 rex.WRX lret (bad) (bad) xor (bad) fcompl test (bad) in cli popfq adc xchg mov jae xor nop jbe adc lea pop and adc sbb xchg cmp pop xor outsb insl xchg (bad) xchg and callq sbb cmp (bad) jbe xor adc xchg loopne cmp (bad) out push xor (bad) scas or add adc insl repz enterq lock (bad) sub sbb retq or mov fs insb sbb lret adc scas mov test test nop lods test int loope adc lret rex.WR push xor stos mov adc fildll push push imul clc mov (bad) ja (bad) (bad) xchg mov xor rex.XB sbb or pop popfq adc or outsb xchg pop fwait mov rex.RX stos rclb js push movslq (bad) push push rcl (bad) clc jle leaveq pushq jmp test sbb pushfq (bad) jb (bad) ficomp rex.W callq add lret fwait in test sbbb setnp mov push outsb out out ja sbb jbe sub jns roll (bad) mov gs mov sarb fcomps (bad) test sub (bad) jrcxz imul scas rex.RX xor int mov rex.B imul push and (bad) movabs push in xor rex.R mov test xor (bad) rex.X xchg and (bad) out retq xor in in lahf iret cmpsb enterq js add loopne jge (bad) sub cli jge int decb push cmp sti mov not nop adc pop pop xchg insb xchg lods cs lret mov or std adc mov (bad) imulb movabs or int3 sbb movabs sarb jb lea (bad) xchg (bad) std lret out jl (bad) rex (bad) push stc mov rex.WX adc or xor xchg mov (bad) out add mov cmp and xchg in or rcrl hlt pop mov add adc (bad) sbb movabs push xorl xor (bad) test (bad) cwtl adc fdivrs out scas add sub sub jle pushq mov pushq pop (bad) push callq xchg rex.X rex.WXB cmpb adc xchg adc mov add imulb (bad) cwtl loopne (bad) sub (bad) mov testl fs xchg xchg rol movsl cmp jnp mov movabs xchg xor lret ja rex.WRX shlb push rex.WR (bad) movabs lret in or leaveq scas jno stos cmp fistl mov mov data16 adc mov xchg insb mov mov and test cmp rcll (bad) push xchg mov jg pushfq push and repnz sbb mov adc mov ror add rorl movabs in and xor pop (bad) adc fcomp rex.RXB sub add mov hlt pushq sbb sbb add lret lret je movl push fild sbb push rex.W rcl js sarb pop add mov insl data16 int (bad) retq js push mov shlb xchg sbb mov cmpl rol cmp sti xorb add rex.X push (bad) (bad) out icebp addr32 or mov (bad) and (bad) or mov mov mov rex.RX out (bad) xor (bad) es (bad) lea add cmp sbb mov out jae cmpsl movabs int int3 ficompl adc fsubrl rex.WRB movabs orl lods fcomi shrl cli add callq mov adc (bad) adcl pop sbb mov repnz and rol cmp iret mov (bad) fsubs mov xchg insl push xchg (bad) xchg cmpsb test mov push out movabs add mov fwait mov (bad) xor sbb mov rex.WR (bad) (bad) rex.WX (bad) pushfq andb adc fwait pop pop movabs (bad) (bad) adc adc outsl mov sbb pop addr32 cmp or lock sub jbe js out jmpq movsb in (bad) pushq adc mov mov rex.WRX rex.WB sub push xchg sahf pop ds or movabs sti leaveq (bad) (bad) sahf mov (bad) rex.W jno rex.WRXB jmp xchg mov ja jbe in or mov xchg hlt pop imul cmp rex.RB lock push rex.RXB push xor (bad) (bad) jae sbb rex.WB callq mov add imul loop rex.WRB rex.WB mov gs or sbb xchg (bad) in push movslq callq rex.XB btc rex push mov rex.R faddl sbb xchg add movsb out sub jmp mov jle (bad) (bad) jne fsubs xchg or hlt mov (bad) or or push jp scas rex.WRX mov mov shrl rex.WRXB (bad) mov add ja leaveq sub push adc (bad) xor add mov shrb sbb mov movabs stos cmp outsb (bad) (bad) and gs mov add adc xlat mov repz (bad) mov ja (bad) xor fmull jp push adc (bad) in (bad) cwtl rex.WRXB pop (bad) jrcxz iret sbb fsubs pop adc push jnp adc mov (bad) adc lods (bad) xor adc xchg rex.R test sbb adc or mov mov jns (bad) out scas add rex.RX fs adc imul push jle sbb mov mov mov (bad) mov mov cwtl (bad) (bad) xchg fcoml sti (bad) push (bad) lcall lret (bad) adc rex.RXB jl adc xor movabs pop rcll scas insl adc xor (bad) (bad) mull pop (bad) and sub fisttp (bad) xchg ficomp in callq fisttp clc pop sub (bad) callq xchg imul (bad) in imul jl movabs sub jns lock cmp retq cmc push xor orb xchg loope pop rorl mov shlb or add adc and mov lahf lea mov and pushq outsb rex.WRXB mov or xlat push mov and ja or fcos sub pushq cmpb imull sub xor lock addr32 lret and mov cld mov push rex.R (bad) xor mov ljmp mov repz (bad) incb sub mov push rex.R sub ja loop adc mov jno in (bad) mov mov sti (bad) jae adc rex.XB jrcxz and jne cmp and fisubr int (bad) sbb (bad) cmpsb sbb pop rex.WB xchg rorl rex.RX xchg (bad) test fsub xor xor mov rex.WB sahf pop (bad) jae (bad) callq rex.XB cli mov (bad) cld add fnstsw and in rex.WRB mov sbb fwait es flds jmpq and push enterq movabs (bad) add hlt ds sbb enterq shll cld notb leaveq imul sahf mov adc cltd shl add pop stos jne fwait repnz xchg adc and in mov lods int add sti mov (bad) and pop loop mov adc in mov fst insb (bad) xor pop loopne mov movabs add add popfq sahf sti rcr rex.WRX xchg enterq (bad) and (bad) retq (bad) (bad) fsubr repnz xchg rex.RB cmp and lock (bad) jno mov movabs or mov jg jrcxz add rcll test js (bad) iret fisub notb jmpq scas ss sub lock xchg rex.WXB mov (bad) xchg or (bad) loope jrcxz movsb cmp adc (bad) test stos pop and mov adc (bad) mov (bad) rex.XB rex.WRXB popfq sbb in jae int adc leaveq test push (bad) (bad) callq (bad) sbb adc jg and (bad) (bad) sarl (bad) insb clc cmp rex.XB lret adc sahf movsl adc adc jge add leaveq (bad) mov (bad) (bad) imul int3 cmp ss cltd push xor sahf (bad) movabs sahf hlt adc push in cs push mov pop lock sbb cld mov jb xor fwait lods xchg (bad) pop push clc rex.WR ror mov cmp jne xor adc callq movabs mov (bad) add xor jno mov mov rex.X cmp push adc idivl pop (bad) (bad) test sub ds (bad) outsl xchg add sbb mov mov xchg mov js movabs cmp pop pop or fidivrl sbb testb rex rex.WB push rex.RXB or (bad) jne or test (bad) xchg mov in addr32 xor popfq lahf jmp cvttps2pi fdivrs mov fcoms insb (bad) xchg stc and or sbb push cmc sub xor sbb retq addr32 adc or callq addl (bad) es jle mov sti (bad) xor callq xor add rclb (bad) movabs stos mov and mov fistp je loop rex setp rex.RB es xorl rex.RB push xorb imul fdivrl xchg popfq pop (bad) jrcxz sbb fwait movslq jp cmp pushfq clc add out (bad) popfq add add cbtw adc adc and subb xchg movabs sub fbstp rex.X push jae (bad) rex.WRX test mov sub (bad) push pop mov rclb mov (bad) (bad) mov int3 cmpsb (bad) lahf rcr pushq (bad) jno outsl retq (bad) sbb int3 mov ds sbb jmpq pop sub in jl (bad) (bad) out sub sarl int sbb sbb rex.WRB mov push (bad) fdivr (bad) sub int3 xor sbb add mov (bad) pushfq add lret cmc pop (bad) iret std (bad) (bad) cmp rex.WRX fisttp rcrl test retq (bad) pop (bad) jne rex.WRX adc xchg int3 rex.X rex.RXB jmpq (bad) mov mov mov mov xor xchg push test fimull or pushfq callq movabs mov out xchg (bad) jmp or sbb jb cmc xlat mov xor xchg mov adc add test je scas push sub adc (bad) lret clc movsw push jl rex.RXB jno (bad) xchg (bad) xchg jp add or adc incl rex.WRX shrb cld sub sbb xor repz in gs jge callq or sti jne js jp movabs mov stc fstpt retq pop jmp callq (bad) rex.RX retq (bad) sahf (bad) jge movsl mov lods lea xchg cmp retq out adc pop pushfq xor cmp out jrcxz adc push push test jnp and mov icebp sbb mov (bad) add adc mov fwait clc vmovaps mov sahf and lahf pushfq in pushq xchg mov mov jo push rorl mov stos jne push cmp mov jb (bad) leaveq sbb leaveq std mov jno jne jrcxz (bad) sti sub or jns pop lea cltd mov adc (bad) (bad) mov (bad) idivb xchg (bad) ljmp imul pop nop xor (bad) (bad) rex.WR xchg (bad) movhlps push stc (bad) int3 fs retq lahf jle jno cmp adc xor xor hlt (bad) movabs xchg fucom xchg and (bad) (bad) rex.R rex.WX callq adc rex.RX xorb scas push cmp in fwait (bad) cld mov mov rep (bad) insl in lock xor fdivrs out sub (bad) rex.W (bad) fdiv gs cmp add mul outsl adc jrcxz jle leaveq (bad) pop rex.WR mov adc movabs adc movsl imul rex.X mov (bad) (bad) or (bad) jmp rex.RXB (bad) fildll outsb fistpl mov mov mov icebp repz xchg shrl add sbb (bad) (bad) xor rex.WRX add cmp mov cli adc jmpq retq test pop and retq sub ds es mov lock shl sub rorb or cwtl push mov (bad) cmp jle fucomip mov adc out mov pushq (bad) jbe rex.RX sbb (bad) (bad) iret pop or shlb (bad) push nop (bad) movslq lahf enterq and or sbb mov pushq rex.WXB ficom lock (bad) retq (bad) hlt (bad) jne (bad) scas pop and jne jo (bad) (bad) mov (bad) sbb xchg fs mov lahf retq cmp xchg repnz std (bad) (bad) mov scas jno mov jns and push bndstx cmp (bad) (bad) and mov addr32 movsb js rcr insb (bad) fnstsw std (bad) (bad) popfq retq decb mov (bad) incl pop mov retq rex.X pop pop scas movabs jnp and loope data16 lock mov push mov mov xor sub int3 retq cmp fidiv or nop cmp or test cmp (bad) int mov mov iret int (bad) (bad) jle stos pop sub movabs pop rex.RX adc sbb jmp mov or popfq cmpsl or sarl xlat jmpq sbb push push retq and cmpsl xchg mov push rex.WRXB int3 push pop (bad) cmp lret (bad) cmp sub std movabs sbb cmpsl jl (bad) mov jmp hlt rex.WRXB sbb sub xor in or sahf cmp xchg xor xchg xor stos rex.WR adc pop pushfq insb insl xchg adc test adc adc (bad) cmc sahf gs fdivrs cld sbb adc icebp movl jne (bad) mov int mov rex.WRXB lahf scas (bad) jbe cmp pop and add rex.RB enterq stc or pop (bad) cmpsl rex.B jo mov or mov mov xchg (bad) fisubrl add (bad) adc adc sbb rex.WRXB decl (bad) rex.RB repnz xor sti jnp jns js and sbb jmp cmp adc mov (bad) test rex.XB or repnz movq and xchg in xlat and rex.B or adc cwtl pop std mov xor notb and test adc (bad) loopne movsb (bad) mov adc and rex.WRB lahf mov sbb mov pushq scas outsl shlb ss (bad) rclb mov movabs xchg adc mov stc retq adc cmpsl xor callq push lods pushfq mov cmp movsb (bad) cmpsb xchg in fisttpl loopne sub cmc pop (bad) mov rex.WB or pop pop sbb xchg repz cltd loopne and (bad) rex.WXB lock jno or insl incb fimull fsub (bad) xchg jnp (bad) add (bad) jo fs pop int3 repnz test mov add cmp add lret fisttpl (bad) jno,pt mulb fs and sbb in cmpsl addr32 rex.RX (bad) fist cld in sbb pop lods rex.X xlat movabs fdivrl and cmp mov rex.WX sbb sarl or imul xchg lea (bad) (bad) fadds sarl out leaveq movabs callq jmpq xlat rex.RB lea jmpq (bad) jmp sbb int3 xor cwtl (bad) pushq (bad) sbb (bad) in adc jbe mov jp sti sub push js enterq cs fwait sub push mov and mulb xchg mov movslq testl shlb and rex.RXB rex.WR or in retq mov cli (bad) fnop in ds cwtl rex.WRB int3 jne sub push and lods (bad) sbb test push sub fs lods sub push xchg mov xchg (bad) (bad) xor icebp int movabs lods add outsb (bad) popfq mov sbbb (bad) mov or push retq or movb (bad) pushfq (bad) mov mov rex.WRB and xor in cs outsb out lahf xlat (bad) gs mov (bad) rex.WRXB stos add rex.RB sbb xchg shlb or or mov out testb mov lock sbb insl gs pop repz lods mov (bad) xor (bad) imul mov pop xchg xchg cmpsl clc sub cmp (bad) adc pop jno (bad) (bad) mov adc movsl stos imul cmp mov pop callq sbb in popfq and movabs hlt push sub rex.RX xchg xor pop cmp lods out sub (bad) outsl scas jp add (bad) pop (bad) xor xchg and movabs cmp sbb es adc or out lock add lahf xor xchg jne xor cmp (bad) test adc mov movabs movsl (bad) jno mov repz nop test movlps push js mov ds and rex.X lock (bad) cmc rex.WR enterq xchg rcrb or stc lock rol push mov sbb mov insb rex.WRX (bad) rex.RXB (bad) std and cwtl adc retq es sub sbb mov and mov mov add movsl push lods mov adc incb cmp fbld or pop fisubrl pushfq (bad) mov (bad) and out (bad) imul and fdiv cmp lock cwtl (bad) loopne fwait jns movabs sbb stc adc (bad) test in outsl (bad) ds (bad) (bad) pop jmp (bad) cmp cli rex.WX jle mov xor jae and mov fimul push cmpl (bad) (bad) mov (bad) setns mov mov cmp pushq push (bad) (bad) adc sbb rex.WR rex.WRX leaveq movabs sub fs movslq add xchg sarl pop push (bad) shll sbb hlt repnz fdivr push lahf (bad) rex.WRB pop (bad) and push xor fisttpll jmp (bad) movabs movsl push (bad) rex.WX movabs xor push lock cld add rex.RX std lock rex.X loop test retq ss fstp adc sbb xchg adc sub fisub movabs imul fbld outsb xchg mov lods (bad) (bad) je out or ljmp jge sbb xor jb jp mov xor fisttpl and fwait rex (bad) or movabs movsl in adc xor push cmp mov sbb (bad) rex.B (bad) enterq shrb andb cmp lahf sbb pop outsl sahf add mov xchg mov cld adc movabs xlat rex.WX rex.RXB mov rex.WXB enterq in (bad) cmp jbe adc mov jno jmp imul retq (bad) rex.RXB (bad) (bad) rex.WRX sbb adc loopne pushq xchg cltd and adc out pop cmp leaveq (bad) fcoml or jg sub sub and (bad) adc xor hlt (bad) mov vmread xor movsl imul (bad) fist je mov adc test or (bad) icebp adc cmpsb addr32 rex.R andl (bad) adc jmp paddsw sar sbb xchg cwtl (bad) and add retq or sbb (bad) fistl (bad) movabs mov or sti (bad) and nop adc fbld mov rol mov (bad) je adc sub out (bad) in jo xor adc xchg scas sbb repz sbb or (bad) xchg ja rex.RXB and pop fstps out shr xchg xchg addb sti cmp imul cmc fadds out or (bad) (bad) (bad) hlt out out imul (bad) (bad) popfq callq icebp cmp out xchg lock cmp pushq (bad) and add (bad) (bad) (bad) sti pushq sbb push es repnz jb mov cmpsl rex.WR jp add icebp mov xchg jbe pushq (bad) adc mov sub push (bad) (bad) shrl mov icebp stc rcll rex.XB mov cmp pop push out jl iret leaveq (bad) mov ficomp push adc rex.RX in xor std movslq out mov insl movl sub (bad) unpckhps (bad) pop test pop retq pushfq cwtl pop sub pop imul fwait or (bad) adc push nop insb callq cmpsl fcoml xlat or sub sub mov mov push mov or insb js ja movabs xor or clc jrcxz cmp pushq adc rex.WRX imul xor jl cmpsb adc and adc (bad) movabs and and xchg adc push (bad) adc mov jp adc rex.WRB pop ds sub (bad) leaveq pop (bad) ss add mov adc std pop and ja outsb push pop (bad) fild or fldcw in add adc repnz cld pop fistpll adc mov rex.WR sub adc mov pop sbb (bad) sub retq clc xorb and adc xchg adc pushfq loopne test int3 rex.WRX and rex.WRB (bad) movabs add sub adc in adc stc cld pop jrcxz xchg pushq lods (bad) adc mov repz int mov movl scas (bad) sub cmpsb (bad) out xchg insl mov xchg nop ds mull xlat pop rex.WR push movabs pushq mov data16 sbb repnz ficom (bad) rex.WR (bad) xor out (bad) rex.W rex.WB rex.WX nop in sbb sbb xor push push cmp sub push xor jle andl (bad) insl cmp sub or adc xlat sub sub test clc or adc (bad) movabs stos fsubr rex.WRX jne gs mov ss mov jo andl (bad) loop pop rex.R add icebp adc adc cmc fnstsw xchg (bad) movabs adc xor (bad) test icebp adc mov push adc add stos adc mov sbbb add ds enterq xchg fldt pop add fist mov mov adc stos js and lahf lock (bad) retq (bad) mov pop adc sub mov (bad) push cmp (bad) (bad) clc pop cmp xchg rcrb (bad) rex.WXB jl or jmpq idivb pushq add hlt sti movslq mov sub leaveq loop in and pop xor insb mov mov movabs out cmp mov (bad) xchg rex.WX (bad) (bad) jle add sub cmp pop (bad) jmp es mov (bad) test pop jb xchg lret push (bad) clc fadd xchg movslq push cmp (bad) outsl mov pop (bad) add movsl pop xor rorb (bad) js je cld loope jmp callq adc add rex.R rex.RXB adc sub test orl in jno xor rcll mov retq mov (bad) or and xlat gs cltd jrcxz pop cmp std sub mov sbb roll movabs sbbl insl mov mov rex.XB rex.WRX fwait out push leaveq fnop movsb (bad) pop outsb jo sbb mov (bad) or (bad) xchg shlb sbb xchg enterq lock int adc iret (bad) or rex.WB xchg test adc mov mov (bad) pop sahf mov jmpq mov sub xor ss lock sbb (bad) sbb adc jp pop adc out jo popfq (bad) add (bad) scas popfq in adc retq in psubb pop rex.WB mov rex.B rex.R pop (bad) rcll jns (bad) adc jnp sbb mov fild xchg setnp and fsts mov add pop enterq outsb iret jno (bad) mov test (bad) mov sub movsb (bad) test adc emms push jmpq (bad) and in stc rex.RXB fs and xchg adc out jmp stos insb mov rex.WRB jae in add icebp lahf mov add fwait lods fmul loopne imul js add stos repnz jrcxz ss mov adc (bad) mov cmp sahf fdivp or cmp xor stos shr repnz (bad) or jnp or or or addr32 pop mov in repnz (bad) test rex.R (bad) fadd std cmp clc fsubrs out imul in add add rex.WXB rex.WX xchg push (bad) movabs xchg lret loope rcr sbb (bad) xor int (bad) stos sub nop xor (bad) out scas pop (bad) out or mov outsl jl mov rex.WRX cmp jb movslq fmull retq cmp jno rex.WRB cmpsb cmp lock jne (bad) test lods or pop pushfq jg push pop (bad) cltd adc add movslq sbb mov adc push (bad) callq movabs sbb test sti (bad) (bad) adc sahf xchg lret push sub push mov (bad) in fidiv callq (bad) int xchg xor iret in lods jl push xor js mov sbb sbb sti fcoms jg subl jne push fstpt (bad) iret mov shlb mov bnd jrcxz rex xor addr32 or xchg adc nop push mov push xchg adc xor fwait and and and add push loope mov (bad) lcall pushfq mov (bad) cltd adc jge cmp rex.WRB xchg pop movabs mov (bad) (bad) pushfq add test cmp lahf (bad) in adc fildl (bad) (bad) rex.W loopne iret (bad) xchg pushq rex.WXB push (bad) (bad) push clc jge ds (bad) adc jnp (bad) adc nop xor je rex.WRB (bad) addr32 mov add lods lock jne sbb cli addl sbb push callq jl lock pushq push shrl rex.RB rcll rex.B shlb jbe pop movabs movabs js movabs jne hlt in and or cltd (bad) out cmp lods sbb push (bad) (bad) paddw or cmp mov jb in (bad) fwait lea roll fs rex.WRXB (bad) cmp pop lea rex.RX out cwtl xchg adc cmpb sti insl sbb push cwtl or sub xchg lock (bad) push lea (bad) sub loope movabs cmp imul retq mov jp adc outsb in (bad) orb sti cmp enterq xchg mov ffree mov std callq xor fcmovne xor or (bad) retq lret push testb fistp jbe xor adc shrl scas sbb jno xchg test insb push (bad) cli jmpq (bad) push lret jns mov movabs (bad) lock cmp (bad) jne mov callq movabs (bad) fstl (bad) cs (bad) not (bad) or and xor mov (bad) or rex.WB pushq insl xchg (bad) (bad) and sti and clc out mov cmp rex.RXB ds mov jno stos or or stc sub lock adc fiaddl cwtl rex.R cmpsb fs or rex.WRB sbb mov adc popfq and movabs xor push rcl mov repz (bad) test rex.WRXB movsb push push (bad) (bad) pop (bad) movabs jmp mov adc rex jg lahf push cmp pop jno out (bad) pushq push sbb int xchg movsb cmp je mov lea jmpq add shr or (bad) mov jno mov stc test sbbb rclb movabs repz rcrl lods push jl adc subl rex.W and cmpsb xlat mov negb out cmp (bad) mov rcr mov xchg add imul lret or lret push outsl enterq xchg loopne (bad) rex.WX (bad) fucomip je imul mov (bad) add mov callw testb fdivp (bad) mull jb (bad) pop lea insl sub jae fsubrl (bad) mov cmpsl sbb rex.W divl sbb imul lea out rex.RX pop fimul jno mov mov movsl pop or imulb movabs adcb lea xor mov scas (bad) (bad) insl movsl lock js jne cld push and and js repz add adc xor xchg sbb stos std push callq sub xchg sbb sti mov movabs (bad) mov jmpq rorb pop xchg (bad) mov (bad) cmp enterq adc rex.WR (bad) cmp std push mov (bad) jge pop adc jmp pop movabs and out mov int test (bad) cmp push xchg rex.WXB popfq jle push sbb push push ds mov xchg adc addb cs int3 fbld or jg (bad) xor out pop and adc push cmp or push notb xchg xchg fs sbb mov adc rex rex.WB rex.W rex.WX (bad) loop mov (bad) syscall negl pop cld fwait push loop xchg adcb (bad) sbbl mov callq and scas (bad) repnz je sbb (bad) movsl callq jns rex.X rex.RB mov lret nop fucomp mov add (bad) (bad) mov callq imulb mov (bad) repz pop sbb orb (bad) std (bad) iret test out pop and xlat cmc sub rex.X (bad) cwtl (bad) xchg xor or xchg add cmp adc or test (bad) cltd movsl cli movabs (bad) imul mov xor jrcxz (bad) and cwtl (bad) (bad) add sbb callq pop pop mov rolb or out mov int3 mulps cmp mov int3 or cmpsb adc (bad) push push rex.RXB sub lock clc mov sbb pushq mov cmpsl pop popq fidivrl jb mov (bad) jl mov cmp and js int fbld icebp adc sub cmc mov rex.WR xor rex.WB addr32 movabs pop cld retq add pop ss or int3 fwait roll outsb mov movsb jns (bad) push (bad) sub jrcxz (bad) repnz repnz nop adcl stos icebp out retq cwtl jae andl sub cwtl repnz or xchg (bad) fcompl cmp jp jrcxz lret cld movsb in popq rex.B sub jnp (bad) jae,pt or pop xchg cltd xchg mov jrcxz adc ficompl (bad) sbb adc xor sti jl pop jge stc push xchg adc movabs movabs and (bad) imul clc hlt xor xchg jns (bad) add adc xor (bad) je ss sbb movabs adc movslq outsl (bad) xchg movabs jl std push add sub rclb cltd imul jle jns (bad) (bad) (bad) and in lock shrl (bad) callq mov or jae ficompl (bad) jrcxz addr32 xchg rolb mov mov es jns push (bad) sti stc add fadds adc cltd xchg adc enterq clc jb cmp (bad) fwait (bad) ficompl fnstsw fildl pushq jmp pop adc stos test rex.WRB mov rex.R js adc leaveq mov cmc adc scas xor xchg adc jbe sahf repz add xor jae cs pop adc orl repnz fild xchg cli cmp (bad) adc js (bad) stos fs pop iret adc movabs insb sbb xor sub (bad) xor fdiv adc adc je retq (bad) rex.RXB lock movslq rex.RB or and mov or sbb test fdiv retq rcrl pop and sti pop je pushq fucom fsubs rex.WXB lahf and sub xor cmc (bad) rex.RXB repnz sub outsb xchg xor mov mov jne jno adc clc mov push xchg sbb or (bad) and in loope (bad) sbb fimul (bad) sbb adc scas mov jge lahf (bad) jp icebp adc adc sub adc rex.XB rex.RXB pushfq pop (bad) push icebp (bad) (bad) int3 sbb (bad) (bad) sub nop or orl (bad) (bad) lock lock sbb mov add xchg rcl adc sub enterq add cmpsb cmp cmpsl push imul mov loopne mov sarb jns mov (bad) push mov rex.WRXB sbb cmc adc (bad) ds (bad) pushq xchg (bad) xchg jb cwtl (bad) rcll movabs sub (bad) cmp (bad) sbb sub pushq movabs or rol out int3 (bad) (bad) mov pushfq adc shlb rex (bad) movabs adc xchg adc mov je andl (bad) out rex.WX outsl rex.WRB push xchg mov pop lea lods insl (bad) xchg jp or orb push cmpsl and test sub rex.RX pop cmp data16 scas xlat adc jg lret jo nop adc jae and xchg cmpsb and or enterq orl test mov adc or fidiv shll mov add leaveq (bad) cmpsb scas adc ja rex.RX movabs shrl add rex.RX (bad) mov xor cmp (bad) rex.XB outsb rex.WR icebp fwait ror adc mov fcmovnbe (bad) jmpq pop sub (bad) (bad) cmp sahf out or mov jo int3 fsub callq push fisttpl (bad) and repnz (bad) xorb adc icebp and mov mov in clc pop (bad) sub lret js lret enterq sub rex.WX test (bad) mov xchg lahf (bad) cmc jge add out movabs cmp pop rex.WRB std iret rex.WXB push (bad) cmp movabs (bad) rex.RXB movslq shr and rex.RX lahf fist adcl (bad) rex.XB (bad) faddl xchg (bad) shlb (bad) sub (bad) xor movabs sub int3 mov mov pop movabs fistpll xor (bad) mov cli test in xor flds lahf rex.WX rex.WX jnp rcrb add std in cli out rex.RB adc cmp mov fdivrl jrcxz mov mov fmulp mov sbb pushq test push fistp movabs sbb lret int3 and rex.WB pop push (bad) idivl jp pop sbb xchg (bad) addr32 mov lea jne clc lock xchg mov stc js sub or lret cltd jbe xchg push in mov movabs retq data16 or xor xchg rex.WXB adc xchg and or sbb sbb rex.WRXB imul adc mov cmc (bad) clc cmp xchg sbb ror xchg faddp movabs cmc frstor fs cwtl adc ss ficom icebp je pop adc test pop rex.WRB adc xchg (bad) in adc (bad) mov xor adc (bad) int pop push (bad) jmp jrcxz mov adc and sub add (bad) (bad) mov sbb shlb rex.R rex.WRB jns pop and mov and loope imul sub xchg adc add and (bad) add add movabs xchg adc cli add loop cmpsb int pop (bad) (bad) xchg and (bad) clc pop loopne iret out mov cs sub jle and insl cmpsl adc (bad) cmp in sub xchg jl adc jmp lods (bad) lock sbb adc add out rex.WRB hlt mov xor sub sbb jbe je xor fdivrp test sub xor cltd callq jo jnp cmp lock movabs movsl (bad) xchg in (bad) mov xchg (bad) int3 rex.WX jrcxz (bad) add insl (bad) rex.B lock (bad) hlt mov (bad) sbbb rorl jmp lea test repnz icebp cmp pop add adc jo mov (bad) addr32 imul jns in (bad) rcrb loopne and in int mov pop (bad) xchg movabs (bad) pop sub jo add and stos pop rex.R (bad) (bad) cs adc and cltd faddl subl xchg rex.WXB test and xchg rex.WB mov retq dec cmp xchg jnp div xchg xchg fistp pop (bad) (bad) jmpq add rex jbe mov rex.WRX cmp jmpq cld jno (bad) mov mov (bad) adc (bad) xchg mov xchg pop sub movabs xchg xchg (bad) (bad) cli jg sub adc jmpq xor sub insb lods pop xchg cmp mov and sbb scas fcoms push test hlt adc int3 push (bad) xor jnp mov icebp xchg pushfq add lock jg lahf rorl add fidiv jne loop add xor rcrl scas enterq jge add mov (bad) sbb sbb rex.RXB out rex.WRB (bad) mov enterq sub push (bad) (bad) ror adc (bad) xlat and andb rex.WXB ja (bad) add callq rex.XB retq (bad) xchg mov adc xor adc lret cmp xor pextrw test or mov xchg add je pop jmp pop and in xor rex.WRB (bad) mov (bad) rex.WR cli sbb sub movsb sub adc mov rex rorb and cmc cmp push xor mov roll insl add pop imul cmpsb xor xchg (bad) mov fstpl stos xor rolb and mov fadd (bad) (bad) outsl (bad) and add loopne and mov mov rex.WRB sbb movabs pushq jp rex.WRX fwait sbb icebp lret shr repnz mov sbb cs and and push cwtl add (bad) in imul cmpsl notb sti sbb mov mov rcrl (bad) adc push mov rol add lods push xor (bad) mov xchg adc pushq pushq mov pop jrcxz add cld in sub bswap rex.WR imul js rex.XB movabs mov mov in rex.RXB rex.WRX xchg push push (bad) ss sbb lret xchg cmpsl in jo mov push rex.WRXB pop or lock push fs mov ja xor int3 rex.RX xor xchg clc insb sahf or cmp (bad) jno loopne mov or or sahf fwait je jmpq xchg (bad) jge rex.WR cli insl rex.XB mov cmpsl in mov push jno scas rorb lods imul loopne mov jo xor lea mov add push pop pushq int push or mov movabs int3 cli jmp rex.RXB xor ja push prefetch or add xchg xlat mov std cwtl rex.XB callq (bad) mov adc jmp xchg jb in loope sbb jnp repz retq and rex.WXB fwait lock pop pop cmp rex.WRX lret (bad) rcrb jo movsb mov xchg xor adc cmp mov sub retq scas addr32 mov xchg es or outsb (bad) out xchg (bad) jo (bad) (bad) pop std add mov (bad) sbb xor xor test jb out xchg cmpsl xchg or mov mov (bad) push scas jnp in cmp and (bad) mov adc addr32 stos (bad) int3 mov jmp ja or retq stos mov and lea (bad) fwait sbb or mov adc rex.X jne ja fsubr cmp movabs outsb mov adc stos leaveq xchg (bad) test movsb sahf cmp mov (bad) ficom xchg push cmp mov jne jg test xor jns movabs mov and repnz callq sub int3 cmp xor mov or (bad) (bad) pop nop imul leaveq wbinvd callq movabs fiaddl or int3 sbb imul sbb or popfq pop hlt mov and or repnz pushfq retq jno xchg test and (bad) and (bad) pushfq je pop mov rex.R add (bad) adc lock (bad) mov retq rex adc mov sub adc shrl int pop mov (bad) fistp (bad) movslq int3 mov sarb add (bad) sub lea js repz push mov mov cmp (bad) xor xchg mov outsl sub test insl cmp (bad) popq callq push mov xchg or sbb cmp callq pop sub (bad) push mov fdivrs and jb rex.RX or xchg mov es nop jbe rex.WXB test cmp jne xchg pushfq (bad) callq icebp push xlat (bad) retq jno mov cwtl out cld or jl out or movslq rex.XB (bad) xor jl pushq movslq xchg out cs xorb (bad) push popfq jne out es adc data16 adc (bad) cs hlt (bad) mov in cmp out test pop pop mov pop jns lret lea out cmpsb andl mov (bad) xchg pop imul rex.WB jbe pop or rex.X (bad) jg mov add xchg lret insb test cmp sub loopne jnp add movsl adc adc fs test movabs retq repnz sub cmc and out out or ja (bad) push and mov test mov cmp push rorl rex pop rex.WRX xor in pop (bad) (bad) and (bad) add sbb fxch sbb and sub stos jmp (bad) scas imul (bad) movsl jb jo (bad) xchg jl cld mov jp mov lock pop (bad) jl movabs (bad) xchg enterq and enterq mov push in add rex.WRXB push and addr32 rcrb jbe and or mov xchg gs adc fs out outsb adc jo callq repnz rcr (bad) (bad) lea adc pushq mov cwtl addb bnd adc fs (bad) lock pop cmpsb and cmp lahf stos xchg stos sub rex.R (bad) xchg (bad) sahf add gs mov mov rcll xor nop rex.XB adc ss sbb rex.B lahf or data16 mov or rex.B adc adc cmp out (bad) out clc or test xor xor xchg pop mov int3 sbbb (bad) rex.RX cmpsl rex.RB sbb scas (bad) ds clc or (bad) iret in or movslq xor je or xor jo add rcrl cmp mov xor mov mov xor loope or push push clc callq cltd mov mov (bad) rex.RB sti retq (bad) xor (bad) (bad) rclb shl pushq int xlat in out stos jrcxz cmp adc movabs (bad) (bad) stc mov clc cmp rex.W fmul sub stos (bad) add add rex.W mov mov xchg rcrl enterq je,pn gs rex.WR jae mov xlat jge (bad) add mov adc sbb mov cmpsl jns rex.W jrcxz fwait callq iret mov fdivrs pushq adc sbb mov jmpq loopne mov loope (bad) (bad) push cmp jbe mov mov rol mov and xor loop rex.X cld stos mov cmp addr32 test int3 add xchg rex.WXB mov rclb adc mulb mov and (bad) mov and or fwait je test add (bad) adc (bad) xorb add flds cmp xchg rex.W jbe repz adc mov int (bad) fmulp es mov movabs out rex.WB lods int mov push cs sahf (bad) movslq (bad) or nop mov in cli (bad) pop fdivrs (bad) jge cmp (bad) adc cmp cld and es pop push cmp and cmp mov sbb (bad) sub (bad) (bad) in movabs push fnsave mov in rex.X xchg or sahf xor jge (bad) mov or (bad) mov or push hlt (bad) cmp adc jmpq cmp addr32 movsl xchg xor xor in or cmp rex push (bad) and adc jb xor or push xchg movabs (bad) xor fisubl fisttpl test (bad) and add sbb cmp or retq cld sbb add out retq xchg adc sub ss lock and fsubrp cmp (bad) movabs in pop sbb rex.W clc adc add fsubrs lahf repz pop add push xor push pop cmp cmpsl out addl xlat or rex.RX scas lea rex.B cmp insb jne mov add sub jge xchg sub or mov sub xor idiv (bad) rex.RX jo mov (bad) push rex.WR rex.WB or push push pop out rex rex.W sub mov xlat cmp rex.RXB loopne rex.WRXB adc push in jp mov xchg stos cld mov adc rex.R pop xor mov loopne jge sbb jge mov fbld mov push adc mov cltd (bad) adc fstpt movabs sub jl cmpsl test sub gs cs fadds rex.RX rex.WRXB fs xchg lock mov loop std push rex.RXB add push jp psubsw add loopne lods ror fldt (bad) mov (bad) add jle enterq jmpq rex.WB (bad) repz or cmpsl xchg (bad) adc movabs jno enterq mov jbe mov shl hlt (bad) scas stos pop add fwait mov xchg (bad) cmp subb sbb sub mov fwait (bad) sbb adc rex.WRB jp xchg rex.X rex.WRX (bad) xlat in rex.RXB and fs push rex.WR mov rex.RX mov (bad) jp adc fadds addb (bad) and jns pop cmp add pop jge enterq fnstsw jp lret add icebp rex.WX (bad) pop repnz add (bad) rol lock xor or rex.WXB fisub (bad) (bad) jne xor xchg (bad) mov enterq sbb mov add std pushq (bad) adc mov adc lret sub test cmp rex.RX xlat fwait repnz (bad) rolb mov cli fmuls rex.X (bad) fisub movabs mov retq adc fisttpl rex.X rex.RXB push stc pop cltd mov (bad) fidivl push (bad) jb jno pushq (bad) xchg or shrb jb mov shr leaveq shl xchg jae rex.WRB in (bad) add adc mov insl sbb (bad) add rex.WXB mov pop mov cmc gs pop (bad) retq xchg lret add adc xchg in (bad) rcll clc popfq cld rcl xor add (bad) outsb rex.WB fcoml xchg cs xchg mov push rex.WRB (bad) mov sarl movsl in rcl movabs pop sbb lret (bad) mov frstor (bad) adc movabs pop push rex.XB mov cmp movslq insb adc jle adc add (bad) sub lret mov movslq sbb sbb fisttp idivb retq cld pop ss sub rex.WRB rex.RB mov pop push callq (bad) (bad) adc cld scas cmpsb std in cmp pop (bad) mov pop fistp jp add xor out and shrl pop rex.WRB lret rex.B fsts loopne (bad) movl add xchg xor insb (bad) mov jb rex.WX ds in jno fs gs adcl sbb rorl divl sbb mov bswap xor rex.XB movslq (bad) adc pop jp retq cld (bad) imul cld and or pushfq and fwait callq (bad) pushq and callq (bad) (bad) addl cli (bad) repz insb movsb pop adc (bad) negl xchg jo jl (bad) cmp and xor enterq add (bad) jb fstl add (bad) or mov cmp incb (bad) rex.B sbb icebp xchg sub pop mov cmp (bad) (bad) callq or cmp fcoms (bad) maskmovq (bad) sbb mov shll xchg jbe retq sti xchg lock mov sti sbb (bad) ds pop adc mov push add icebp callq lock mov mov (bad) rex.WRB loope rex.WR (bad) in callq add out rex.RB mov mov and movabs callq repnz xor (bad) pop (bad) movsb out and (bad) andl movabs push (bad) sub jae loope pop (bad) rex.WB mov lods sub sub (bad) in jno stos (bad) out rex.W cltd xchg (bad) xlat rex.RX jno mull xor sbb leaveq hlt repnz adc mov xchg imul add testb rex.WRX addr32 mov repz movsl or cmp xor fwait (bad) rex.XB out movsl xchg (bad) loope or mov xchg callq test (bad) fisttp stos mov mov jns pop adc sbb push divl adc in or scas sub test (bad) movabs (bad) (bad) sub in fcoml pop lret jno add imul mov or nop rcrl repnz cmp push sbb mov jae adc sti add mov movd xor adc mov (bad) movsb cmpsb add adc repnz movabs (bad) fist lret callq (bad) scas cmp (bad) lods xchg mov sub ss data16 sub (bad) sbb add movabs fistpl int3 mov cli xchg and es mov (bad) xchg and (bad) push stos mov ds lret xchg push cmp enterq rex.WRB rex.W (bad) mov and cmp mov loope add mov stc movsl scas push cmp sbb rex.WRX retq mov mov and fcoms and xchg fisubrl cmp fistpll negb (bad) insb int3 (bad) int rex.WRX int outsb (bad) repz sahf sub out js rclb cmpsb xchg int3 mov adc push xchg rex.WRXB insb in and js push idivl (bad) xchg (bad) rex.XB add out or in push int3 rex.X xor (bad) pop repnz repz or xor clc or enterq cmp rex.WRX callq (bad) add sbb movabs and xchg shll mov rex.WRX xor mov (bad) (bad) (bad) callq add rcr fnstenv fisubl gs sbb fldl fmuls (bad) outsl sub sub sbb pop rex.XB mov xor (bad) (bad) cmp (bad) out xchg xor cmc mov sub sub loope jge rex.RX in (bad) cmp rex.WR ds adcb mov xchg cmp xchg mov (bad) sub fbstp cmpsl pop jbe cltd xchg and xchg je lahf sahf fs jnp mov mov xchg retq mov pop clc fcoms (bad) imul mov jbe push clc (bad) sbbl and enterq pop push or test sarb mov pushq in fmul (bad) data16 add movabs xor fiaddl rex.RB repnz int push sbb repnz (bad) xlat sbb sub mov int add cmpsb jle cli (bad) push (bad) popfq adc and xchg cmpsb adc pop sbb callq movsb hlt stos mov leaveq adc popq pop cmc sub pushfq sub jmpq add push mov pop adc lahf mov lret and (bad) scas nop (bad) mov lcall cmp or and in outsb (bad) xchg adc mov xor fwait jp pushfq and repnz cs rol adc repnz fcoml loopne cmpsl xchg movsl or addr32 cmp rorl xor rex.WXB jnp hlt rex.WRX rex.RB mov adc and add cmp adc pop (bad) mov (bad) and cltd sbb xor cmpsb sti xchg adc incl js (bad) and or (bad) adc (bad) adc mov (bad) pop mov imul out mov rex.RX stc adc (bad) retq and jp adc jrcxz leaveq loopne movabs repz adc mov mov pop cmp add sub add mov xlat mov insl test fsubr adc (bad) jmpq xchg (bad) xor je xchg out in fwait rolb push xchg adc (bad) cmp pop faddl jo sti (bad) cld jl out cmp (bad) cmp adc sahf rex.W rex.RX callq rex.B cld ds lahf cmpsb adc cmpl xchg push xchg adc shll or jl and fs or (bad) xor jmp adc and cli stc fs jo fs xchg fmuls rorl out lods mov jrcxz in (bad) mov xor (bad) mov xor (bad) cmp xor lock mov and lret xchg sub (bad) lret (bad) xchg (bad) in mov add xchg xchg jo cwtl cmp leaveq adc mov or jp or (bad) callq pop (bad) stos (bad) (bad) scas mov xchg (bad) js cmp rex.WX fisttpll adc pop add repnz fdivl add sbbl test adc notb std jne retq mov lahf sub mov movhps pop and rex.WRB loop (bad) mov rex.RB nop jne push xor notl sbb addl (bad) rex.XB fs je mov repnz sbb mov xlat fiadd jns test fcoml jl (bad) mov adc in push in mov movabs (bad) mov std int3 xchg adc pushfq pop or cmpsl stos (bad) (bad) xchg rex.X pushfq test nop (bad) insl and rex.RX adc in xchg adc pushq addb in pushq cmp out out adc mov or faddl test cmp pmovmskb (bad) mov loop (bad) shrb sbb jno fs test xor (bad) test add jle or or cld xchg int3 callq (bad) cmp cs sub in add sarb mov fistp (bad) jnp (bad) movabs cmpsl (bad) scas cmp jbe imul lret int3 repnz rex.WRX lret hlt push (bad) in mov push pop (bad) mov sub rex.RB fcos sar and imul movabs sub pushfq (bad) (bad) clc enterq xchg (bad) rex.WXB rex.WX jae rex.WRXB adc loop and (bad) cmp (bad) (bad) adc sub jns sbb negb (bad) callq jne jmpq rex.WXB jnp or (bad) fistpl sbb lock mov adc callq sbb fistpll (bad) adc xor sbb rex.XB (bad) rex.WXB or rex.WRB movabs add mov xor cltd retq xchg adc rex.RB stc pushq xchg out (bad) mov movslq mov mov rex.XB (bad) callq push push lock out jae notl test shll (bad) push (bad) pushfq mov mov lea mov callq mov sahf (bad) roll xor sub (bad) rex.WB adc xor addl jl lea cmp (bad) adc mov rex.WXB adc fidivr xor repnz loopne (bad) and sub nop adc xor jle sub (bad) mov outsl in rex.W fcoml mov fbstp rcll mov mov (bad) fsubrs fwait pop (bad) movsl (bad) cmpsl fs std popfq movabs andl or out (bad) xchg mov fsubrl cmp je fcmove jg xchg test fcomps std and (bad) cmpb sti cwtl addr32 sub (bad) test test movsb cmp mov repnz in rex.RB jno jg adcb pop mov movabs rex.XB in rcrb jl rcrb mov push jno (bad) push loop or mov movabs callq gs fidivr cld decb fwait cltd cmp sbbl out retq rex.XB adc cld rex.X enterq decl movsb rex.RXB rex.XB jge out pop adc mov fwait sub sub push mov cltd cmp je adc (bad) (bad) cmp mov adc es adc add cmp rex.WXB pushq fdiv retq cmpsb retq test mov (bad) pop mov jo cwtl push or clc stos or pop xchg (bad) mov fs mov movabs movabs pop and sub or enterq lret jbe pushq (bad) or (bad) cmp imul (bad) cmc mov adc push xor sbb enterq mov int3 insl mov adc and xchg shlb adc pushq (bad) adc or mov mov adc sub mov sbb (bad) xchg scas cs (bad) or mov adc fsubrs (bad) jo xchg and rex.R sti jmp scas xlat je jmp jne adc hlt popfq ljmp mov rex.WRB adc mov repnz neg and pop hlt sub pop (bad) iret mov cmp or mov cmpsb outsb (bad) mov rex.XB mov adc sarb (bad) (bad) out (bad) rex.WRX cmp jmp push (bad) addl mov lret lahf sub jle cmc movsl neg movsb (bad) mov andb mov jno imul mov sub enterq mov jge xchg mov push stos xlat (bad) xor rex.X (bad) adc push pop rcr (bad) sti sub retq (bad) pushfq test (bad) pop adc cmp or jne (bad) rex.WRX mov or pop loope rex.WB xor addr32 movabs cmp jnp (bad) rex.RXB imul lods xchg sahf rep add rex.RB (bad) xor adc notb pushfq mov (bad) add (bad) xlat jbe adc movsl jl,pt callq hlt in out callq cltd xchg mov incb adc rex.WB jb jmp outsl add mov adc (bad) clc (bad) jge (bad) adc sub mov sbb retq mov mov sbb sub push cmp movabs jmpq mull (bad) mov div (bad) fwait xchg movabs xchg movabs mov or rex.WB (bad) xor lock (bad) cmpsl roll (bad) int mov int3 xchg fs je insb enterq rex.WX enterq movabs lea mov out sbb or decb xor lock shll insb jmp sbb push mov movslq callq icebp jrcxz vucomiss movabs cmpsl stos adc adc outsb rex.WR cmp jg (bad) xchg mov clc add adc push (bad) jl mov xchg rex add rex.WR jle rex.WXB js adc (bad) mov push add lock xchg cmp or xchg adc cmp orl xchg hlt rex add cmp nop lods jno mov scas adc lret mov xchg adc push scas test testb test jb jne movabs pushq clc mov test sub fcmovne (bad) rex.WRB data16 rex.WRX retq sbb loope jrcxz add push ja callq pop out in jnp (bad) idivb (bad) jge sbb mov (bad) cmc callq rex.WX (bad) and (bad) fcoms cmpsl subl sub (bad) add (bad) xchg movabs pop and jno cltd ds std mov cmpsb (bad) cld (bad) fisub jne rcl and movsb in rex.W rex.WRB push pop and or fildl (bad) ror xor jae push mov in and cmp retq (bad) lahf adc lret adc rcll pop add mov (bad) (bad) lea jns (bad) pop rex.RX pop or and (bad) (bad) decb mov or stc js add adc jbe sbb out pop (bad) movabs mov lahf pop shlb test mov sbb (bad) jne rex.R (bad) jno cmp xlat (bad) and addb fidivrl pushq lea jne xchg movabs xchg (bad) scas xchg sbb cli fsts cld add (bad) or mov pop jg (bad) rex.XB movb movabs test cs lea adc (bad) and adc movabs fcomps sahf pop movsl in adc sub xchg push push rex.W fwait push callq and lahf (bad) in lahf ds callq add sbb (bad) test (bad) test add nop cmp adc loop pushq sub lahf fwait sbb adc xchg jno rex.W rex.RX clc (bad) testl cmc js fcomp shrl rex.WR and pop xor add ss mov (bad) add cmp outsb callq (bad) movabs gs (bad) adc fdivrs pop or (bad) gs movabs rex.RXB cmpsl sbb and gs test stc mov mov sbb (bad) adc (bad) fildl scas sub push cmpsl in mov sti fdivs (bad) cmp lret mov sbb (bad) movabs rex.RX iret mov jmp rex.WXB rex.WX sub movabs in (bad) mov js mov sbb movabs je fcomp or (bad) or (bad) ja sub imul or scas xor sbb (bad) (bad) (bad) callq mov int3 rex.WRB sub (bad) loope pop out movsb imul push leaveq jb mov cmpsb sub es sub out (bad) repz add (bad) and (bad) push lret pop sub scas pushq mov adc adc lock rex.X rex.WB cmpsb jne cli es (bad) sbb (bad) std test mov rex.RB adc xor outsl imul (bad) repnz insb xchg (bad) (bad) xor movsb adc scas add sub rex.WRXB (bad) jbe sbb callq mov mov or int fldenv or in repnz sarb lea (bad) adc leaveq orl mov callq retq pop andl movsb scas incb xor movsb rex.RX rex.RXB pop pop adcb xchg data16 clc callq loop clc pop int3 rex pop mov out lret popfq int3 fdiv rcrl lret xchg cltd int callq jmpq icebp or ds lods and cmp imul (bad) push gs mov and sbb imul callq (bad) movabs loop push (bad) sbb mov retq insb (bad) out pop rex.X lods in clc movabs mov and int3 int3 (bad) sbb pushfq fbld (bad) scas mov fcomps addb ja mov fsub out sub jae (bad) iret mov push sarl and adc nop cmc (bad) insl fadds rex.RXB outsl movslq fwait add adc push movsl (bad) xchg rex.WRB movabs pushq adcl fldcw mov jle or test adc (bad) stos rex.W pushq adc jge andl fwait pop adc rex.R rex.WXB rex.WX xchg push cmpsl test sbb sub adc out sub (bad) sub (bad) rex.W rex.WX callq retq xchg mov stc push rclb jg movabs (bad) cltd (bad) xchg (bad) sahf sub (bad) or (bad) mov pop nop in add (bad) (bad) lods sbb lea cmp add pop jp add or loop in or (bad) adc add or mov data16 jae cs sub in and movslq insl retq xchg jno rorl (bad) mov int3 cmp push pushq rex.WRX repnz cmp xchg pop js sahf in xchg xor cmp movsb jae int3 xor andb or xchg lods xchg adc sub pop gs (bad) mov lock mov sub and sbb lahf fs rex.WXB xchg adc mov adc (bad) (bad) (bad) fdivrl jbe movabs rex.B xor cmc mov pop adc cld mov adc (bad) test clc adc lret lea sub stos rex.WXB repz sbb adc adc sub movsl lods (bad) mov mov rex or pop mov lods rex.WR cld mov in add clc (bad) mov or rex.WRX push mov jae (bad) xor out fisubrl sbb jo (bad) jo (bad) scas rex.WX outsb cli shrb xor rolb and pushq (bad) (bad) xchg movslq (bad) movabs add imul movabs test clc clc and sub iret xor rex.W rex.RXB cld add in rex.RX jmpq adc outsl adc adc or xor movsb pushq lods fwait push xor in sbb ficoml pop (bad) fs std sbb in clc or push mov (bad) rex.RXB mov push adc jrcxz mov (bad) sub movsb out scas adc test cld (bad) (bad) rex.WB cmc jno and xchg fisttpl movsl jmpq mov sbb (bad) (bad) rex.RXB xor push ds and add add sbb cli callq insl or scas sti popfq lock add jns (bad) fnstsw jne enterq jno pushfw jmp jo mov (bad) test mov imul adc add enterq pushq out jnp ds rex.WX (bad) rex.RXB nop int3 js or stos sbb adc rex.WXB xchg (bad) fist push (bad) cmp adc or cmpsl (bad) mov outsb sub jp mov pop es dec mov add adc outsl add mov mov mov jns (bad) jnp roll (bad) fstps (bad) and mov mov or add add ds adc lahf (bad) sbb push callq out out sub lret adc notl pop pushfq in clc outsb out xchg je (bad) (bad) fstpl sub test xor sbb sbb punpckldq nop (bad) mov cmp out adc mov out hlt rex.RB cmp insl xor xor ja callq int3 mov scas push push sub (bad) shrl sub roll xor xchg scas (bad) (bad) sbb sahf adc movabs xchg scas (bad) sti jae outsb lock fnstsw (bad) cld scas (bad) sbb fwait adc fdiv pop test (bad) test mov sbbl (bad) jo movsb push rex.RXB jns xchg pushq int3 pop or sbb xor xor xchg jno add movsl callq (bad) repnz movb lahf mov xchg mov cmp rex.RX mov retq in mov sahf (bad) jae int3 pushfq jno (bad) rex.WRXB xchg add xchg cld leaveq cli cwtl (bad) mov testl cltd lods pop (bad) lods pop scas jg es mov scas retq insb leaveq rex.RB mov (bad) (bad) (bad) mov cwtl repnz cmp (bad) (bad) sbb mov mov and adc js (bad) and jnp mov jmp jmp outsb cmpsb in cmp sbb sti sub int3 rex.WR rex (bad) pop rex.W rex.B adc (bad) test adc mov and fist xchg int3 in adc cmp adc ds xor mov cmp (bad) movsb add test mov cwtl pop xchg xchg add js loopne (bad) sbb sbb and xchg rex.WX (bad) push (bad) mov fcomp cwtl push (bad) in mov pop rep test (bad) out repnz js xchg jno rex.WRXB adc (bad) rex.WRX cld adc xor retq rorl incl (bad) add (bad) sub (bad) adc cmp (bad) rclb jno or addr32 cmp unpckhps test sbb or cwtl ss or sub (bad) (bad) (bad) mov int and mov sti pop add add push xchg loop and lea lahf adc or (bad) cwtl in (bad) (bad) jle movabs (bad) jmpq cmp and add stc sub stc callq sub rex.WRB (bad) movabs xor jg fwait jp lock (bad) negl and (bad) xchg jbe cmpsb sub test adc xchg mov sub or jp sysenter mov lock loopne (bad) rex.WRB adc mov adc jp es sub rex rex.WB (bad) xor push lahf test sahf sbb test callq and (bad) sub cwtl and vpor cltd or and (bad) out pop and fnstsw fnsave fs out bnd hlt adc rex.WRB cmp rex.RB shl (bad) sti adc push incb sub adc (bad) repnz notl pop fadds adc repz cmp cmp sti (bad) retq (bad) shr add rclb fwait leaveq cltd in int3 adc xor jne mov adc fist xchg pushq iret push push movsl in xchg callq mov subl addr32 enterq add adc loopne roll jmpq (bad) sbb andl jne jno lea faddp fisubl sub fsubs in (bad) mov mov cli mov out mov add (bad) (bad) insl sbb callq mov idivb adc mov testl addr32 pop jns enterq (bad) movabs sub push (bad) mov gs paddsb xor mov repz lock repz pop js jge sbb sarb rex.WRX jbe cmp fildll mov xlat (bad) loopne or and (bad) pop rex.RXB sub fdiv jl pop xchg add scas in out adc nop jne adc (bad) and test ss (bad) jne (bad) push fdivl (bad) in loope rex.W xchg sub or xchg rcll mulb out outsl repz jmp stos (bad) movsb in mov sbb jge mov jbe leaveq and in (bad) lock js out mov (bad) lock lea gs push retq callq fnsave (bad) xchg (bad) shr int3 fsts pop in (bad) cmp callq adc jp sbb (bad) cs and fisttpl rcrl (bad) add sub sbb je (bad) scas rex.R fs lea rcl (bad) sbb in ja pop (bad) int3 (bad) sub mov mov and rorb push out add (bad) scas (bad) jae insb xor mov (bad) clc (bad) cmpsl sbb js jmpq decb add jbe mov sbb in movabs add cmp scas (bad) xor adc lock adc cmp insl je ficompl pop adc adc rex.WRX mov mov push mov movabs sahf xor loopne,pn xor stos fucomi (bad) sbb push and sti cltd rex.RXB pop and or add popfq (bad) sbb xchg mov (bad) js out scas pop ss sub push addr32 mov jne rclb scas movsl (bad) repnz pop xlat rex.RB faddp iret (bad) jge movsl lock callq (bad) push pop imul cmp rex.RB mov (bad) and (bad) (bad) adc mov and (bad) adc rex.X (bad) fwait divb xchg lret test mov andl loopne pop cmp (bad) retq mov out fnop outsb ljmp (bad) xchg and rex.WRB rex.WRX or cmpsb sub xor iret jnp pmaxsw mov (bad) rex.WRX or sub (bad) (bad) cmc clc lahf rex.RX mov add or (bad) (bad) rorb sbb mov (bad) mov fwait rex.WX rol stos rcrb outsb (bad) adc jno (bad) mov or and adc cs pushq pop mov fsubrs movabs or mov pop movsl insb adc rex mov add fcompl push push (bad) cs pop rex.RXB (bad) xchg ja mov (bad) adc (bad) test test (bad) sub retq mov pop lods mov leaveq sbb (bad) mov and mov (bad) jns (bad) (bad) pop frstor rex.RX es stos rex.RB fisttp mov adc fcomps pop xor hlt in (bad) cmp mov decl pushq lock es cmp cmp jp rex.B out sub (bad) int3 bnd push (bad) ja leaveq adc leaveq and pop push test (bad) sbb cld roll mov push retq jbe or (bad) xor sbb sub iret (bad) add jrcxz (bad) data16 incb popq xor rex.WR adc adc fcomps (bad) (bad) (bad) icebp (bad) mov mov es rex.W xchg and adc rex.XB cmp add hlt jns cmc mov lods adc mov sbb xchg js andb mov movsb pushq rex.WRB (bad) adc xor imul (bad) adc mov xchg in (bad) shll in adc or pop js cmp (bad) push adc movsb cs pop adc adc ficompl callq (bad) jo cli (bad) movsb sub popq mov pop (bad) fmul fisttpll (bad) mov adc cmp jge adc mov ds in sbb cmp cmc pushfq mov xchg adc lret (bad) xchg repnz mov fcomps cmpsl adc or fmull in lods insb add in adc cmp vmovupd mov jmpq cli rex.WRX stos rex.WRXB fisubrl lea lea lock (bad) xlat outsl sub rex.XB outsl gs rex.RX (bad) jno icebp mov in stc (bad) xor mov add (bad) leaveq in or outsb and pop movsb test lock out cmp js cld pop insl pop imul leaveq fdivrs es add xchg mov cmp (bad) (bad) jno js movabs movsl xchg add pop sub and adc jrcxz js cmp mov jl (bad) xor andl in lret movabs (bad) mov or shlb jp mov fs fdiv shrb callq lock pop ljmp ss adc mov (bad) mov jg movsb je jle push cmp shll es out movsb hlt jne (bad) (bad) push icebp cmp rex.XB mov xchg mov and rex.X fwait (bad) callq (bad) sub adc fmuls pushfq (bad) (bad) cmp retq jae fcoms pop nop (bad) cmp mov or popfq xor lret (bad) add jmp mov rex.RB mov ficoml scas lods cmp (bad) jo and rex.WX mov (bad) out adc test adc xchg rex.W ficompl pop fs (bad) xor jmpq sub adc iret xor rex.WRXB mov (bad) xchg (bad) out retq adc xchg pop fnop popfq andb test (bad) mov jne movslq nop or pop and lea adc sti mov xor sub mov jb repz mov pop cmp movabs jae es push or adc test pop mov je xchg jb or test mov ds ds (bad) out adc xor (bad) adc sbb or lock adc insb (bad) and pop out push or sub mov (bad) sbb roll lock in (bad) (bad) mov jnp ja clc cld cmpsb mov push sub (bad) std pop rex.B mov pop (bad) mov mov out rex.WRX adc (bad) (bad) test xchg (bad) (bad) movabs cmp or mov rclb (bad) movsb insb add rex.RXB fxch mov mov lods fs fildl ja jno mov jp and sub adc lret push in adc sub insb xchg lock (bad) adc mov (bad) js retq callq adc sbb or cltd movabs movb (bad) adc jae (bad) sbb jl (bad) cld jp loop int adc loope cmp pop sbb adc addb sub or jmp cmpl (bad) or push jbe fwait cwtl loope rex.WXB xor pushq rex.RX (bad) cwtl cmp js push add mov rex.RX rex.RB gs cmp cmp cltd mov xor outsl (bad) (bad) int push (bad) and rex.RX fwait mov adc cmpsl (bad) repnz xor adc callq (bad) pop stos mov sti callq fimull push pop push lods pop (bad) (bad) rex.WRX (bad) rcl or jae pop cmp cmc test adc sbb ror and movabs jmp pop (bad) lret add sbb loop out or (bad) xchg lea mov pop fisubl and rex.RX or cmc (bad) mov xor (bad) mov mov divl lcall imul rex.WXB lock pop adc jg rex.RX mov xor clc pop movsl push scas (bad) negl rex.RX (bad) (bad) jbe (bad) sbb lock rex.WRXB in (bad) rex.WRX sti xchg mov popfq jbe or add (bad) in rex.WR callq jge add (bad) adc mov adc insb adc rex rex.WXB mov or test sub pop jno mov lea adc pop movabs mov adc jb push xchg add mov push (bad) in (bad) mov hlt cli jg xor fucom xchg mov or adc js pop or cmpsl and (bad) (bad) callq and mov ss rcrb repz adcb jrcxz je sbb adc movabs sahf popfq (bad) xor fwait mov gs fsubs mov cwtl mov cltd xchg insb outsl (bad) rex.RB (bad) adc (bad) mov pop xchg push rex.B clc (bad) sub mov sarl outsl mov mov (bad) push adc lock fldl repnz mov xchg or ror (bad) (bad) xchg (bad) rex.W rex.WRB fs (bad) movsl (bad) popfq rex.WB imul sub (bad) mov (bad) (bad) pop imul xor push jno mov add lret adc loope or test (bad) sub loopne fsubrl es scas imul cltd pop rcrl test (bad) mov pop repnz (bad) adc fsubs out sbb cmpsl fcompl icebp fdivs mov (bad) mov xchg fwait pushfq sti test repnz xor or jns cltd retq adc outsl sub fist sub pop test rex.WRB sahf rex.XB jge callq out pushq adc rex.WRX rex.WX (bad) (bad) jae rex.WRB bnd nop imul jno (bad) mov cmpsl rex.WRX xchg sbb lods rex.WRXB test sarl cmp movabs (bad) xor xchg leaveq enterq sbb movabs sub mov rex.WXB test (bad) mov adc std cmp ja fmuls fistpl xlat (bad) nop (bad) (bad) mov jmpq push (bad) jae lahf adc push scas or hlt push xchg jl (bad) loopne movabs sub rclb or (bad) fs add (bad) cmc (bad) sbb movabs rex.WB sbb xor setge rex.B fdivrl adc scas enterq leaveq nop xchg xlat shlb out ja (bad) stos mov movabs cli loopne jmp jne or jl adc adc lods push not adc xor (bad) in sub (bad) lock jne adc int3 mov jnp movabs add movabs lret rex.WR rex.WRB leaveq std pop add js (bad) push hlt andb movabs enterq (bad) jo jge (bad) imul push jb cmpsl movb sbb cmp (bad) (bad) test sub and xchg xor rex.RB mov adc sub push jo xchg jg fcoms sub mov (bad) fbld (bad) movabs adc cmpsl cltd callq pushq sub xchg movabs or fcoml repz pop jne jmp (bad) loopne xor callq (bad) add jno hlt lock (bad) (bad) rex.WRX mov (bad) mov pop (bad) add rex.WRX pop mov mov jae or sbb mov jo sbb loopne sub pushq imul movabs cmp (bad) pop cld add adc adc (bad) popfq mov cli rex.WR movups cmp pop xchg callq loope push jo sbb out callq push rex.R cmp (bad) mov (bad) jne sbb rex.XB jrcxz cmp xchg mov (bad) test or adc push sbb lock jbe mov xchg in mov and movsb rclq rex.RX xchg xchg sti scas je add in xor popfq adc fnsave push jg mov loopne lock (bad) mov (bad) cltd fwait loop stos adc sub sbb adc sbb es cmpsl xor pushq cs cmp adc insb (bad) (bad) jmpq add jrcxz out sbb sub cmp retq movl hlt rex.RX add add hlt rex.XB rex.WX rex.X mov add xor mov fdiv mov (bad) fs mov imul retq sub js cmp sub pop rcr pop mov fsub mov (bad) icebp imul in test rex.RX fiaddl sbb shrb sub mov mov lret sbb sarl pop adc jnp (bad) rex.WR (bad) rex.B (bad) loop adc scas jno pop (bad) sbb (bad) push cmp fxtract adc (bad) mov out push pop jo or lods je addb outsb mov mov mov push movabs xchg repnz test movabs std jb imul adc ficoml rorb int3 mov (bad) adc out and fild rex.WXB push cmp out add or (bad) jno fbld in xor (bad) or cmp mov gs and cmp jne ficom movabs mov mov sub loopne sbb pushq repz lock rex.WXB cmpsb add movabs mov out pop xchg xchg clc out mov pop gs jrcxz fsubs (bad) rex.XB mov rex.WX add (bad) mov adc es adc add insl rex.WRXB push mov (bad) movsb cwtl movslq xchg mov add repz imul adc insl icebp jae adc xchg in pushq add sub rex.WRXB test out clc adc movabs xlat xchg mov (bad) sbb xchg (bad) (bad) lods push jle add cli popfq cld in (bad) test js clc sbb (bad) retq (bad) lods xchg mov jne pop sahf lahf (bad) movslq and rclb add test insb adc int3 xchg in xchg jg push (bad) and cmp (bad) jno jmp int3 sbb cwtl rex.WXB mov (bad) (bad) (bad) fldl in jns cmpsb data16 rep incl rex.WXB xor (bad) add pop (bad) rex.RB divb sbb or stos (bad) mov stc shl mov leaveq movabs out adcl adc xor rclb out adc int3 (bad) pop sahf push xchg test sbb incl adc xchg hlt roll sbb (bad) in adc cmpsw stos ds frstor adc xor or jno movsb push (bad) (bad) adc lods outsl xchg insl xchg pushq mov test pop addl xchg sbb imul (bad) orl frstor popfq jae movsb sti jo adc pop mov adcl stos (bad) insb (bad) and pushfq jno sarb cmpsb out fmul mov (bad) cmp adc mov xchg cltd lock adc rex.WR clc stc int test test add je add adc scas xor ds rolb fdivl add outsl jae jne cmpsb (bad) or jrcxz xor (bad) adc xorl cwtl mov loop imul sbb je adc (bad) adc or hlt (bad) test sti adc stos jp xchg ss jae rex.XB xlat adc fdivrl ds (bad) sub nop push xor movabs fimul pop (bad) rex.WXB add out callq rex.WRB rex.WB icebp jbe data16 mov addr32 ss sub (bad) and movabs (bad) adc popfq cmp mov lods (bad) clc mov fmull push mov xor pop adc push fcomps xchg (bad) xchg movabs pop jp rex.RX pop fidivr cmpl (bad) mov jp lock mov sahf loop mov pop out cmpsb es enterq mov (bad) (bad) mov cmp cld loope jae cli mov pop jmp sbb (bad) nop movabs callq enterq (bad) xchg outsb jg imul xchg imul rex.RXB jrcxz ds lods (bad) xchg in icebp xchg mov ds jle popq cmp add pop jmpq js repnz mov xor mov pushq pop sbb sub fistp mov mov imul cwtl lock (bad) mov adc lea rex.WRX and nop xor sbb rex.WRXB pop jo (bad) fldl mov pop in in adc (bad) jg in mov or add push jne clc cmp sbb retq mov add leaveq sbb scas add in xor mov push (bad) (bad) in mov mov (bad) cmp std gs in in leaveq jno (bad) lods loop in push fdivrp jmp test enterq lahf jl xchg adc nop out jne test xor add fs sahf (bad) movslq data16 (bad) pop xor rex.RXB xlat and (bad) sahf fwait (bad) rex.RX rex.W cmpsl (bad) repz mov (bad) xor (bad) jns jg enterq incl movabs repnz jrcxz jae cltd (bad) (bad) cmp add ficom pop (bad) stc lods rex.RB std mov js push rol mov sti xchg mov (bad) loope (bad) jb add adcb pop lods pop ss push adc xchg rex.WRXB movabs jp adc adc cmp (bad) xchg or add (bad) (bad) (bad) sti iret or sbb push xor xchg (bad) in (bad) loop mov movsb mov (bad) sbb (bad) int test cmc mov jo rex.RX vpcmpgtw push adc rex.B (bad) fmuls ss mov notl sbb lahf adc repnz jp imul stos callq fstps out or (bad) pushfq adc xlat xchg cld cmp rex.RB fucomp and mov sub enterq and xchg icebp lods clc fistp sbb movslq xchg (bad) int ds (bad) clc fs (bad) sub fsubl adc jnp sbb adc xchg ja mov or fistp adc movabs (bad) (bad) xchg loop lea stos int nop xchg jp sbb jg test add adc jne rex.WB sub add xchg xchg pushq sub (bad) mov std adc push out in clc callq adc and movq icebp and clc rex.WRB cwtl xchg (bad) (bad) mov stos cmp out or cld pop (bad) or (bad) jle out (bad) add add imul cmp (bad) iret jae jb add mov cmp cmp nop pop test (bad) (bad) jg retq sub add in lret fsub xchg mov sbb scas or rex.W rex.R mov cmp xchg pushq ja add rex.WX (bad) rex.WRB (bad) adc movsb jmp sti insb rex.WX rcll hlt (bad) rex.WRXB adc notl pop insl push sbb sub mulb pop xchg mov adc fstps xor add out adc (bad) and mov mov xchg sahf adc mov sbb (bad) jle xchg sub add lretq sub rex rex.RX incl sub sub or hlt loope int3 xchg idivb mov mov adc (bad) fsts jnp orl jmp (bad) sub or (bad) movabs push xlat xor out jg adc repz adc mov xchg stc rex.WRX mov sti (bad) cmpsl xor insl mov (bad) push (bad) mov fdivrs pop (bad) in adc insb (bad) callq out xlat scas in jle mov (bad) adc std gs (bad) adc mov test (bad) movsb cmp loop stos adc nop jne cmpl cmp xlat hlt test rol (bad) cmp callq adc xchg movsb out jo jle andl xor cmp add mov int3 push mov rex.WXB roll adc (bad) (bad) or xor jns movabs cmp fmull bnd (bad) jnp (bad) sbb idiv rex.WRX rex.WR rex.W pop rex.XB gs mov scas jrcxz fistp (bad) (bad) push mov xchg rex.WRB xchg loopne pop int3 leaveq push rex.WRB stos sub adc (bad) std (bad) jrcxz xor cmp fcoms adc (bad) rcr fidivr mov movabs out mov int push (bad) xor or add rex.XB rex andb mov xchg mov movabs repnz sub push (bad) sub (bad) or push movslq push and jne xchg data16 retq lret mov ds int3 jb xor lret mov (bad) insl adc addb mov movsb sbb out sbb (bad) sbb addr32 rcl rolb mov es and jne mov clc or xchg jne xchg jg rcrl pushq rex.RX outsb int mov xchg fwait xchg xor movabs mov xchg stos add pop cli sti lret icebp cltd shrb pop jno bnd ffreep rex.RB (bad) (bad) sub add cmp test xchg (bad) (bad) loopne (bad) and pushq mov (bad) add in imul adc stos sbb retq fisubrl and add pushq pop sarl (bad) movabs jo (bad) and and or adc cmp gs mov jno push jns mov std (bad) int (bad) mov cmp mov or (bad) xor pushq movabs loope cs sub movabs std mov push pop pushq rex.WXB mull rex.WR and or jg rex.RB xor cmp or pushq adc movabs data16 movabs and sub callq mov pop rex.WXB loop rorl adc mov rex.WX subl movabs sbbl cmpsb enterq pop push in ds add clc out adc adc test gs (bad) cmp (bad) out mull xor push cmp rex.WXB sahf (bad) push in push adc pop (bad) (bad) push enterq mul mov mov int3 xchg mov pop rex.B (bad) xlat ss imul (bad) xchg (bad) or pop nop adc lret lods and mov pop clc fidivrl ja sti sbb adc test movsb enterq rcll pushfq fcomps xchg add (bad) test test scas fdivl xor (bad) or sbb iret cmp (bad) out mov in movabs sbb jg and add sub lea (bad) lahf fs xchg xchg movabs pushq (bad) (bad) repz mov jmpq (bad) adc or test callq movslq (bad) jrcxz cmp add jnp pop cmpsb push out cltd pop rex.WRXB loope (bad) fildl outsb (bad) popfq (bad) adc adc lret (bad) xchg (bad) push xor (bad) movsb jo (bad) (bad) push (bad) clc mov movabs callq rex.WRXB decl (bad) and (bad) hlt mov popfq and in adc out push rex.WXB cmpb imul push rex.RXB mov adc sub js lahf cmp sbb xlat xor rex.WRXB pop pushfq (bad) (bad) mov cli jns cmp in sbb sbb mov in cs ss fisub rex.R out lods adc lea (bad) mov push jmp jne fs mov imul (bad) adc sbb xchg cld loope (bad) je lfs and cmp leaveq rex.R fildl push (bad) adc nop cmp rex.R adc or jg mov pushfq clc andl xchg ja int3 lea cwtl clc (bad) retq add movabs callq lods movsl adc (bad) gs adc fstpt sbbl xor out (bad) and fsubrs pop cmp (bad) xor (bad) rex.WRX out sbb pop (bad) or (bad) xchg pushfq mov mov cmp cmp sbb (bad) callq xorb shl (bad) adc pushq adc and mov scas jae sarb (bad) fsubl xchg loopne stc lret and (bad) add mov iret rex.WRX adc cmp xchg ds cwtl (bad) (bad) pushfq (bad) rex.WB mov mov lock in (bad) je xor rex.WR push mov adc xor pop popfq adc cmp xchg int xchg cmc shll enterq sub stos icebp jb movabs (bad) mov outsl out xchg push cld mov mov (bad) or fld and ds add jbe (bad) (bad) rex.WRX int outsb cli stc addb sbbl sti int3 fwait mov adc int3 mov sub add (bad) fild add push fistpl pushfq rex.WX mov cltd xor or (bad) sub fwait push and vpcmpgtb xchg (bad) movabs test xchg mov rex.WRX outsl mov out pop adc insb movabs test pop mov in mov jne,pt pushq rex.XB cs movabs cmp add jbe in adc (bad) cmc add xchg push in and (bad) rcpps adc movslq stos rex.WRB sub rex.RB (bad) mov or test retq cmpsb lahf pop enterq out loopne mov adc addl orb mov and (bad) jae (bad) mov rex.RXB rex.WRXB lock and fsubp xchg adc rex.WRX add pushfq adc adc notl xchg je jnp rex.RXB (bad) sbb xchg (bad) mov jge push xor sahf cld (bad) rex.RX xchg jl in jle (bad) cltd out (bad) xchg (bad) rclb (bad) (bad) add push lahf shrl movabs (bad) mov pop (bad) repz adc cmp enterq std (bad) cmp mov pop rex.WRX rex.X cmp (bad) adc movabs sub (bad) pxor (bad) push xchg and add fsubr cmp imul sqrtpd sub notb lea sub xchg add sbb add cmp fstl add fdivrl cmpsl sub (bad) adc rex.W test xchg or xchg xor insl shl lock enterq cwtl callq fs and icebp add retq jae push fwait addr32 js movabs insl test and cmp (bad) gs push sbb xchg xchg cmp add pushfq rex.WRB rclb (bad) (bad) notb mov xchg ficomp mov mov test pop (bad) jp retq orl mov (bad) callq popfq (bad) lock jo xchg movabs xchg cmc rex jp jne (bad) push cltd leaveq and xchg lret (bad) push push fstl stos jns cmpsb add and add xor (bad) fcmovb in loope callq pop lea insb rex.WRX and sbb outsb xchg or pushfq enterq popfq push or adc mulb retq cld xor hlt xchg sbb xchg pop or xchg neg (bad) (bad) (bad) cs mov in or fs sarl sbb mov movabs mov mov (bad) imul mov mov or push mov lods shl push cmp jb add int xorl rex.RX mov (bad) xlat sub and sbb repnz out lret (bad) (bad) (bad) adc cmc pop and push xor add sbb adc movabs es pop movslq popfq fsubl addl fs pop popfq add out adc rex.B mov out int3 and adc lods mov pop push or mov xchg (bad) jb adc rex push push jge jle pop xchg rex.B jp mov sbb enterq xor lahf push (bad) loope rex.X mov pushq xor xor std lahf pushq adc rex.WXB rolb cmpb mov movabs add es xchg int and std (bad) sub jb lret and test and (bad) retq (bad) adc testb adc movsl pushq (bad) jmp pop lock or push lret fdivrs and sub (bad) mov push adc lahf retq sub mov xchg lea (bad) (bad) rex jle not mov fiaddl ds lods and and stc lret sub xchg xor xchg adc ja movsb (bad) sbb and push push add and adc (bad) (bad) test imulb es adc shrl xor xchg int3 movsl cmp movslq test (bad) push repz adc rcll fsubrl xchg jp fisubr (bad) mov rex.WR ds adc mov rex.WX adc mov adc adc push mov jo rex.RB cmp xchg stos leaveq sub out mov sbb lahf cmp xchg mov out sbb js int xor xor int3 (bad) fmuls mov in outsl (bad) lods cmp (bad) out rex.RX rex.RB pushq ds in or push jne (bad) adc imul pop mov outsl adc push loope outsb adc and movabs push sub pop scas jl and repz and (bad) pop rex.WRX xchg lret pop or (bad) (bad) (bad) xor int mov rex.WRB sbb out add sub lret cmp mov xor cmp add callq jno add and rex.WRB pushfq jns (bad) cmpsb or sub jne (bad) (bad) pop cmp imul (bad) mov (bad) jb fucomip (bad) add add cmp mov stos sbb rex.WRB rex.RB sub xlat fadds rex.R rex.RXB stc sbb int test pop std sub mov notb cli adc and adc (bad) cmpsl in and fild sub xchg (bad) push xchg adc xchg or (bad) mov or enterq add rex.WRXB es sub xchg movabs jle pop fisttp sbb adc push (bad) add jnp rex.WRX leaveq insl test or je pop sbb (bad) sub movabs mov ss xchg (bad) in sbb fwait sbbb nop sub (bad) out and (bad) (bad) (bad) jne sbb or (bad) int (bad) outsb xor cmp adc xor (bad) mov rex.WR mov fnstcw adc iret push push stos movabs add (bad) jmp add adc rex.X imul push mov rolb xchg pop movsl rex.WR rex.WRB addr32 fist (bad) mov adc imul callq push mov ja (bad) stc cld jle rex.WRB cmpsl adc (bad) and cwtl (bad) (bad) gs leaveq faddl mov mov xchg (bad) int adc xchg push sbb cmpsl lock adc rex.RXB outsb and std fstp (bad) sbb sbb mov rex.RXB jp rex.WX adc lods sub mov nop jbe mov and push rorl adc icebp pop fcompl jbe fdivr adc sub push adc and retq xor push cmc (bad) mov adc (bad) or adc add cltd (bad) pop (bad) pop mov or pop sbb rex.WXB push sahf jne callq adc rex.X insl or (bad) cmpsb add jb adc clc mov xlat (bad) (bad) sbb orb ds outsb cmp push rorb cmp sub movups or add sbb cmp adc (bad) xchg mov cmpsl sbb mov pop cmp test rex.R adc cmp sub mov lahf loope add test add outsb out movl jge sbb out add pop jo xchg iret rex.WB rex.R mov jmp sub xchg xchg jnp (bad) xor adc add rex.WRX cld stc jne mov test movabs retq or in leaveq ds xchg or cli cmp (bad) mov in cmp pop fistl mov insb retq stos (bad) mov movabs repnz pushq (bad) mov stc jno icebp add jp xchg iret jno jmp rex.B iret in movl movabs rex.RB and jb mov (bad) push cld adc in mov stos xor add enterq mulb enterq mov gs (bad) loope or mov push pushq test cmp xchg outsl adc or scas adc rex.R cmpsl rorb retq adc (bad) adc rex.XB leaveq rex.WRX rex.WRB mov mov jns mov adc insl in sub and adc (bad) stos callq jp cli cwtl stc fwait fs pop pop callq or mov push out cmp rex.B rex.W rex.X adc xlat loope jl lcall xchg scas cli lea pop rex.RB movabs mov scas add lock shll callq jbe nop (bad) sbb (bad) or adc xor sub int (bad) or push movabs sub pop add cli rex.WRXB sahf cmpsl out xchg ss sub cmp imul ja xchg (bad) clc sbb movabs jno movabs cli jmp in callq cmpsl sahf rex.WRXB rex.X in ja movabs lock (bad) xchg fs mov callq lret (bad) (bad) (bad) fist sbb xor std mov pop mov jl,pn adc rex.X clc enterq adc mov (bad) pushq adc in int xor rex.R pushfq scas jb (bad) adc lret xor rex.RXB fwait in pop (bad) out rex.WB repnz and jae sti pop and loopne nop rex.WRX rex.WRB mov xchg out pop rex.WXB jmp add outsl add stos push mov push enterq push pop sahf (bad) fcoms mov xchg pushq sti jno jg or mov lods fs (bad) mov js mov test cmp fs decb sub pop sbb mov mov xor lea (bad) js or (bad) out (bad) movsl repnz sbb xor sub jrcxz pop imull movabs jae enterq xlat std xchg std repnz sub push pushq callq mov clc cmp add jmp fwait sahf icebp add or shlb xchg int3 rcrb (bad) rex.B stos loopne retq xor mov enterq popfq ja mov xor mov sub nop add cmp adc add (bad) lret rex (bad) notb je add js cmc in ds out movsb (bad) rex.WXB rol (bad) jns mov movabs in fwait (bad) or add jp pop adc mov and or (bad) or rex add (bad) js fptan xor pushq lock jne (bad) (bad) mov in mov cs mov or sub pushfq jmpq (bad) mov add cs sahf (bad) ds and sbb negl push test fistp lret adc fldenv or and gs (bad) xor and fcmovb sub fildl (bad) or js or std test movabs (bad) xacquire cmpb xor sub hlt mov sbb jb rex.WX jl adc (bad) (bad) and jbe sbbl pop (bad) repz adc (bad) out push lahf movabs insb pop fistpll cmp in out sbb pop (bad) push xchg cld rex.WRXB stos rex.XB (bad) push cmpsl movabs add xchg (bad) enterq cmp (bad) (bad) repz push iret pop (bad) adc sub (bad) mov lock scas ja sti pop stc callq cmp pop rex.R xchg rex.XB and rex.B rex.B adc mov pop sbb or (bad) sub fnstsw ds or fimul icebp rex.XB jp jle adc loopne cs stos add push (bad) (bad) xchg rcl (bad) mov enterq mov (bad) (bad) and lods enterq sahf and push rex.WXB je cmp test (bad) xchg repz jg mov pop mov xor shrb fwait push fucomi mov scas add repnz push (bad) cmp popfq rex.X gs std data16 insb (bad) xchg xor cmpsb mov jnp fs mov (bad) loope add rex.WRX jbe jmp jrcxz fdivrs movabs and js push scas nop jo jb cltd lret push mov (bad) adc or mov and (bad) retq sub jmp lock out mov xor sbb outsb (bad) fidivr loop rolb xor jbe sti rex xor adc jmpq push (bad) (bad) cmc mov (bad) (bad) jl mov js retq mov (bad) fldenv (bad) xchg jl rex.RX fs ficomp sub fistl mov stc jle movl (bad) pop sub addr32 jne add sbb shrb jbe sub mov mov cmp insb pushq and adc fbstp lea out pop cmp movabs jnp mov rex.B mov adc jns mov fistl movsb shl movabs and jrcxz rex.WRXB cs je out sbb mov fimul jbe mov repnz std (bad) and idivl mov out sbb sbb mov sti fiaddl cmp mov and loope mov cmp rex.RX out cmp fdivr popfq jge xchg rex.XB mov sbb pushq stos jmpq cmp enterq (bad) shll adc fisub (bad) insl adc je stc rex.WRXB sahf ja sub sub movslq (bad) rex.W pop fcom (bad) ja (bad) (bad) jg icebp xchg rex.WRXB repnz vaddpd xor (bad) jle nop (bad) fsubl jg imul or (bad) insb lods cmpsl adc jns movabs cmp sbb rex.RXB movabs adc out outsb sub jmp (bad) fcoms negb pop data16 rex.RB jno cmp jmp cmc outsb loop (bad) (bad) adc outsb (bad) imul cmp enterq push (bad) fimull fcoms or mov jo (bad) sub stos xchg in mov mov lea cmpsb (bad) mov pop (bad) adc jmp rex.WB rex.WB jmp add jbe xchg jne add mov andl xorb jge stos fcmovb mov (bad) out mov sub fbstp mov xorl xlat andl fiaddl (bad) movabs sti sub fiaddl out pop and (bad) stos (bad) or rex.XB fldt xor and pop cmc xchg fwait out mov (bad) jrcxz callq rex.X mov imul and repnz pop add jle xor mov and adcb mov adc insb hlt not adc jns ds adc (bad) mov pop (bad) mov lods rex.B sub xor clc icebp xchg cmp or rcll cmc jne adc out push xchg adc in (bad) imul retq (bad) repz adc push rex.RB fistl rex.WB jb cmp xchg pushfq (bad) xchg mov (bad) push pushq adc sub movslq rol fmull lret mov cli mov jne out jge (bad) movsl ds add rex.WX pop mov adc imul or jno (bad) mov (bad) xor adc rex.WRB gs data16 retq (bad) mov ffree jb or add adc (bad) in xchg adc cli cld xchg and adc je mov cmp (bad) mov (bad) psllq adc fdivrs rex.WR (bad) sub xchg cmp and push mov movslq clc movsb xor xchg cmc pushfq callq (bad) std cmp movabs mov (bad) cli cwtl loope (bad) movabs and lea (bad) negl add pop push pushq push or adc and movsl jno and xchg clc xor adc imul pushq xchg sbb negl pop (bad) and (bad) jrcxz (bad) adc xlat enterq sub frstor jne adc mov rex.R adc sub jae sub cli (bad) frstor loop pop push jno (bad) add add mov adc jl xor mov mov movabs xchg adc movabs add retq and sarb int3 cmp lahf pop fcomps jne xchg rex.WXB xchg push (bad) adc lods (bad) adc mov mov imul imul and (bad) (bad) lret (bad) (bad) rex.X lods sahf add adc cld rex.WX enterq (bad) movabs adc mov cmp (bad) sbb cltd lock cs out lret mov sub fdiv (bad) xchg (bad) cmc push push mov (bad) fsub xor and shrb pop mov (bad) pop lahf cmp jle sbb movabs add scas xor fsubs stos (bad) adc sbb cs mov mov cld test jbe xchg cmpsb jb (bad) lret lods jmp popfq lret test roll test pushq and push movsl cmpsl push insb jns push ror jmpq xor jle jbe cmp movabs repnz or imul repz or cltd xchg sbb xchg xlat mov (bad) jmpq (bad) stos add push js movslq adcl (bad) test vmread pop rex.WX out add (bad) stc mov lret rex insb push hlt adc rex.WRX xchg (bad) or mov test mov rex.RXB (bad) sub rex.WB xchg push xchg xchg mov repnz mov loop imul mov (bad) xorl adc pushq stc (bad) scas jmpq sbb and mov rex.R mov mov jb int3 jmpq test and sbb (bad) push lret (bad) rex.XB xchg xchg cmp out test lods jrcxz sarl hlt sub add fcomp xchg sbb scas push xchg pushfq (bad) mov or add addr32 jne (bad) movsb ja xchg (bad) push mov adc sbb jrcxz pop adc sbb rex.WXB es rex.WX fwait pop std (bad) (bad) imul fs xor add (bad) outsl adc rex and (bad) outsb adc fdivl mov (bad) in adc jnp lahf rex rex.WR (bad) mov gs rex.W rex stos sbb int3 mov mov adc adc pop rex.X mov nop clc sti (bad) xorl xor or adc xor jnp mov movabs rex.B rex.XB cs jl adc andb (bad) jge add mov mov add sbb and and pop rex.WR add sbb (bad) (bad) jb movabs mov rex.RX std cmp rex.WXB mov rex.R stos mov jp js cmpsb jmpq lret (bad) (bad) sbb xchg xchg incb out xlat pop adc rex.WRX in sub repz hlt sbb (bad) (bad) (bad) mov adc movsb cmpsl cmp fistl rex.R and (bad) push test sub jae jg mov mov mov mov scas mov in sbb add enterq jge adc mov adc xchg notb or mov adc (bad) (bad) adc pushq adc fistl cli (bad) fsubrp push cld push rex.RB (bad) adc jp rex.WB mov xor and push (bad) movabs jae cli cltd jl xchg push mov lods movabs out out jrcxz or xor rex.WXB or leaveq pop test (bad) movabs rex.XB add cmp jg lea mov nop insl (bad) sbb sub callq push xchg gs xchg pushfq xchg (bad) sbb xchg cwtl rorl xor adc sub xchg jbe divb sbb cmp jrcxz push mov or int sbb mov (bad) mov (bad) rex.WR sub lock scas lods cmp (bad) fmul pushfq pushfq (bad) mov (bad) test rcll retq loopne movabs add pop xlat pop xor or (bad) fisttpll stos push (bad) rcr mov rex.W rex.WX out or in movsb stc or outsl (bad) xchg rcl pop jne jnp rex.RB or icebp xchg sbb sbb mov jne xchg lods mov or xchg xchg and cmp insl std pop rcll lea int xor loopne jne (bad) xchg (bad) fmuls mov and or sbb (bad) rex.RXB adc cld (bad) je fistl cmpsl rex.RX test popq and insl fdivs adc mov mov xadd (bad) notb fwait adc and pop cmp (bad) mov js,pn shll int addr32 mov pop (bad) mov adc jns (bad) rex push lods pop (bad) std fist adc push repnz movsb sti clc and (bad) jno test (bad) cmp push out pop rex.X adc push rex.RXB rex.WX (bad) mov (bad) jg jbe rex.X ds imul (bad) rex.RB mov insb (bad) lock rex.RXB rex.R adc mov stc rex.WRXB in movslq in (bad) hlt movsb cmp pop (bad) xchg imul sub rex.RXB adc (bad) or in (bad) mov rex.X leaveq or (bad) sub xor adc push cli rex.WR jmpq cmp leaveq mov jbe xchg adc or jne (bad) pop pushfq adc mov sbb int3 mov testb test mov adc mov test int3 (bad) int (bad) adc fdiv jrcxz or (bad) repnz iret callq push stos lock pushq fist push test sub or adc sbb lea sbb mov xchg mov jp rex.WX lea add mov cmp ja ss cwtl mov xor (bad) rex.RXB callq (bad) pushq out cmp jne repz mov lret pop lock mov mov in jno stos and sbb movsl sub adc flds cld (bad) xor push xchg rex.WRB xchg pushfq iret mov pop xchg callq cmpsb sahf mov (bad) stc (bad) adc sbb sarl insb (bad) xchg lret ds (bad) (bad) jo stos outsb cmc fildl out lret (bad) adc mov sub enterq rex.XB int3 jae sbb (bad) xor fild jne xchg cld loopne sub rex.R movabs out xchg (bad) jmpq (bad) je (bad) adc std shr jo (bad) xor jle cmp jb fdivrs mov or (bad) rex.R movabs mov pop (bad) rex.WB jne (bad) lahf rex.WRX jmpq pushq rex.X test push setae clc jge pop adc pop pushq jbe xor mov cltd sbb (bad) adc std cmp pop popfq adc jmp adc rex.XB fild lahf adc fucom hlt shl or shll mov pop (bad) cmp (bad) (bad) sahf pushfq pop pop jge add adc sbb pop pop adc jae rcr repz sbb test faddl sub js lock pushq cmc (bad) in negb cld adc jo rex.WRB lret bnd mov jg mov lock (bad) fwait xor clc lods stos rcll in imull movsb add retq mov loope out (bad) lret fdecstp stos xchg pop pop repz push mov mov (bad) mov xor jns adc test adc push xlat mov xchg rex in icebp pop cmp (bad) (bad) push xlat pop fsubrl callq mov mov pushq sub (bad) in loop rex.RB cmpsl and mov (bad) cltd (bad) add (bad) adc or mov adc jns (bad) repnz push xchg cli jg cmp insl mov in out int int3 adc sub adc sub rex.WXB insl (bad) clc fstpt and push (bad) pushq rex.WR icebp add sbb adc rcrb ja hlt sarb mov (bad) lahf imul int hlt ds sub in cmp mov scas sub sbb or pop xor (bad) mov (bad) rex.WRXB rex.WX or repnz lea rex.WB test or fcmove js jg jns lock sub jno sahf pop lret movabs hlt lods (bad) js sub push mov test mov adc movsl adc rex.WB xlat cmc fwait adc rex.RB and adc mov jo adc pop pop movabs (bad) pop (bad) xchg clc lret cs movabs sub and out test xchg in rex.RX or (bad) xchg or cmc mov mov cmp and rex.X (bad) rex.WRX iret (bad) add jrcxz sbb insb (bad) fistpl (bad) or icebp sbb xor (bad) movabs jle movsl in adc cmp rex.XB fsubrs adc mov pop cmc hlt mul mov movabs movabs roll (bad) es enterq enterq (bad) in jne adc (bad) in adc cmp (bad) (bad) xor sahf mov mov (bad) cmc push mov rex.R fstps cmp adc (bad) mov test test xchg adc insb (bad) rex.WR repz or pushq xchg mov fs sahf (bad) js adc (bad) std xchg rex.RX jbe rex.RB rex.RXB movsb movl push (bad) mov sub rorl cld adc int (bad) xor xor (bad) (bad) ja adc cmpsl scas mov xchg lcall fwait cmp and mov adc xor mov adc gs insl (bad) clc addl pop (bad) xchg (bad) shlb mov enterq pushq mov and pushfq je test repnz add test xchg es sahf rex.RXB pushq movslq and cltd js xor movabs adc adc fwait xor cmp sub cltd sbb fnstsw add insl in scas rex.RX int movslq push adc and mov sar in (bad) (bad) fidivr adc push jno addr32 xchg mov jmp movq xchg rorb or cld imul sbb movabs adc cwtl and leaveq mov cmp cld jno popfq sbb fbld int3 jrcxz pop out ja (bad) and add lea pop adc (bad) fist add wbinvd insb adc push pop xor movabs adc test fildll jbe or xor (bad) stc jnp clc mov (bad) js scas and jrcxz in outsb (bad) xor (bad) xchg in jno xchg sbb or adc (bad) cmp (bad) xor sub faddl mov scas sbb adc stos mov decb addl and rex jb int3 add adc pop movsb fcompl jp mov test cmp add or and lock xchg pushfq pop std popfq (bad) adc imul jae mov pop loop hlt (bad) fisub enterq jrcxz int fist xor nop (bad) lret push xchg xchg adc cltd xor xlat pop add jmpq cmp adcb mov pop cmp movabs push cmc fidivr and (bad) (bad) jb (bad) shrb fadd xor xorl (bad) mov (bad) mov (bad) jne (bad) in sbb jl add (bad) mov rol lahf sahf mov xchg cmpb lahf cmp adc jge jge retq movabs test (bad) or pop xchg repz rex.WRXB sub and repz lea xchg enterq sub jg rex.RXB pushq xchg nop jns or or sub scas rex.WX rex.R (bad) cli movabs sar xchg sub andl (bad) lahf sub pushq cmc (bad) ja pushfq shl lock sub or xchg rex.WXB nop enterq xor idivb (bad) (bad) subl (bad) icebp push xchg sub cmp andb rex.XB cmp cmp out rex.WXB jmpq sbb movslq adc fisttp or (bad) jmpq adcl out movabs movsb (bad) mov cmp and and xchg lock cmp mov (bad) mov rex.X lret out ja (bad) pop add mov outsl out cmc sbb out and retq (bad) roll loopne loop rex.RB cmp subb loopne add cmp lret or lods (bad) movabs sti icebp (bad) in fwait retq rex.WB movsb xor ss xchg jmpq out push fsubrs mov imul (bad) rex.WB rex.W rex.RB adc movabs xchg adc adc mov sarb add add pop rcrb cli repnz rex xchg rex.R sub (bad) sbb shrb test data16 sub (bad) fwait shrb adc xchg mov push mov (bad) ds xorl out pop rex.RXB jge in callq outsb movsl fstpt cmpsl xchg push (bad) cmp (bad) or mov in jns hlt adc outsl jbe lret mov ss sbb cmpl xchg (bad) (bad) repnz andl add (bad) pop (bad) xor in callq jns jmp mov (bad) popfq sub sbb callq (bad) retq ror cli lods sub in or jne retq (bad) rex.WRB cmpsl (bad) mov sub cmpsb cltd jno (bad) cmp cmp jge sbb mov and mov (bad) (bad) adc add test rex.RB or add push jrcxz or test mov sbb rex.B retq push jb rex.WR lea (bad) xchg (bad) fistpll (bad) stos add loopne mov incb jne and sarb sbb imul (bad) (bad) orb (bad) mov jne push mov (bad) adc add (bad) mov (bad) mov shlb cwtl pop sub (bad) int3 xor outsl xchg adc add pushq adc push sbb adc (bad) (bad) rex.R es xchg ficom divb fisub sbb adc sahf (bad) (bad) push je outsb (bad) incl out leaveq mov movabs mov cltd jae int3 (bad) imul xor mov pop xchg mov mov clc jge push fldenv jnp andb (bad) push xchg adc sbb (bad) xor mov rex.RB movabs rcll and cmpsl rolb sbb pop push mov add je mov stos pushfq movabs jmp adc cmp jns sahf jl sub repnz push and movabs hlt jnp xlat test (bad) or mov callq rex.W test stc pop rex.RXB xor roll mov push rex.WB cmp sub cwtl scas jmp mov fdivrs mov stos mov lahf pop (bad) cmp sbb or outsl (bad) xchg mov cmpb ss js sbb notl outsl (bad) mov mov or cli test out sub push mulb cmpsl pop add outsb mov (bad) xor jg sub and mov mov or add test int3 pop cltd outsb rex.WRX add pop add or pop push mov js rex.RXB movslq mov sub jb cmpb or movabs out mov shlb (bad) lret out xor (bad) jne in int3 (bad) cmc repnz mov mov mov xchg sub sub mov xchg out repz (bad) lahf callq xchg int3 push (bad) push xchg lret jnp ja lret xlat (bad) cmpsb lahf gs cmpb loop scas fwait stos imul sub add sub fidiv jmpq xchg xor je imul outsl (bad) fidivl adcl mov lret xchg push xchg adc cmc (bad) adc test and pop fdivrl adc jo adc retq rex.RXB (bad) adc stos sbb sub (bad) adc lahf fs rcrl (bad) xchg sbb and int3 fdivrp cmp mov jrcxz (bad) jnp out movslq mov cmp adc stos mov sub rex.B ss add (bad) (bad) subl (bad) xor mov ss (bad) mov negl lret push push xchg sub rex.XB cmp jmp callq icebp xor and add xor icebp pop cmc and xchg int3 cmp xor (bad) (bad) nop mov imull jne js or ficoml movabs push adc jns (bad) addr32 add and mov (bad) fs mov stc mov (bad) notl loope or mov in fdiv pop xor xor fimull add jle (bad) icebp cmc inc rex.WXB (bad) mov xorb sbb (bad) mov cmp rex.RX frstor add retq jmp xor mov in (bad) fcompl jbe jne add adc scas push mov adc sahf (bad) rex.X adc mov add rex.R mov sub popfq test mov and cltd adc jp adc adc mov push (bad) cmc mov movabs adc rex.WRX mov (bad) sub jl data16 (bad) andb out sahf or adc jnp (bad) ja in mov test cmpsl in int3 and lret lcall adc mov (bad) jbe imul xchg rex.RX movabs (bad) retq jrcxz fsubrl callq (bad) fnstsw je out repnz add (bad) (bad) iret (bad) jb (bad) mov (bad) repnz lock (bad) and pop xchg mov (bad) or retq hlt cld rex.X addr32 pop sarl sub push add pop or sbb cmp out or (bad) movsb (bad) jno add imul jno mov and cs sbb flds (bad) repnz xor sbb push mov callq add jne push jmpq repnz int sahf mov xor or insl adcl cmpsb xchg adc or jp in jbe (bad) mov cwtl insl imul rex.WRX (bad) mov pop std (bad) adc mov loopne popfq (bad) add or (bad) xchg rolb (bad) sbb mov sub adc xor jae add sbb loopne and callq (bad) sub sbb mov imul fst push or push xor outsb int3 test adc mov jb adc je rex.R mov and jl or jmp sub cmp mov or or (bad) lock pop and jmp sti pop adc shlb (bad) and mov sbb cmp xchg ss (bad) enterq rex sub mov jo mov rex.B and (bad) adc jp sahf xchg hlt xchg (bad) frstor out adc mov (bad) enterq mov callq (bad) (bad) movslq (bad) (bad) (bad) retq (bad) rex.WRB and mov add xchg or lods mov rcl or add outsl cs mov (bad) rex.X jmpq fisubl mov scas sbb xchg fdivrl lret push (bad) mull pushq rcrb sti rex.RB rex.WR jnp jmpq lahf (bad) jl adc add xchg adc gs lahf mov fnstcw sub add or adc inc (bad) jae jmpq bnd (bad) (bad) (bad) rex.XB cmc mov rex.B lock clc fnstenv scas imul adcl sbb hlt push sub addl pop jrcxz or rex.B jg jle out and lock mov in jno rex.XB fwait xchg jge sub (bad) xorb pop mov jmp rex xchg jnp sub je pushq rex.X retq jb adc xchg out (bad) sub callq je or mov cltd cs xor fstps fidivr (bad) clc (bad) or negb sti (bad) adc sub add movabs (bad) add fnstenv adc add lea pop jmpq xor mov imul sbbb cwtl (bad) cmpsb push jnp or rex.WXB pop or mov adc fstps jp neg movslq cmc (bad) and gs xor pop mov jno rex.WXB (bad) jno adc cmp loop repnz hlt and std sbb mov ja lock ffreep fadds xor jrcxz scas test jge out add sub repnz mov push (bad) (bad) sbb test (bad) mov cwtl push mov pop (bad) pop push and (bad) icebp rcll sar and cmc in pop sbb mov shl add pushfq jb lock pushq cmp xor ja jge lea movabs icebp jae cmp rcrb (bad) xchg xchg mov push stc movabs rex.RXB rex.WR add lret rex.WB lock (bad) fwait mov or jnp iret or (bad) adc xor pushq rex.WX and and jne xor jl push and pop (bad) (bad) (bad) (bad) adc xor (bad) scas repnz movsl test xchg orl lods (bad) (bad) xlat fistp pushfq movsb pop (bad) lahf lea mov add std insl fs and (bad) test jo (bad) (bad) jnp or adc add sub (bad) sbb scas or or (bad) or fcompl (bad) sbb xor (bad) ss lods mov rex.WB shrl hlt sub stc add jp ror xchg sbb (bad) rcll in int and negl sbbl stos (bad) xchg rex.WR sbb (bad) mov (bad) xor (bad) lahf (bad) fs (bad) adc and ss mov add cmp sbb or jno xor je and lods ss data16 ss out xchg mov movsb mov push pop jne adc rex.WRX add and (bad) add sub push in add sub sub mov rex.W (bad) rex.WRB fsub retq lea lock cmp (bad) xchg sub rex movabs jp scas mov clc (bad) and addl fisubrl rex.W xor mov xchg lret rcrb std movabs mov adc (bad) stc sbb xchg clc (bad) cli addb push mov in retq mov in add (bad) jmp cli jp imul pop (bad) cltd movsb lret lret add mov jmpq xchg adc push push push and pop adc test out and xchg iret rex.WRXB jo fsubr in adc in movsb cmp lods outsl adc (bad) rex.WR fcomps std movsb sub adc mov mov fdivrs out push test add mov pop adc cld xchg mov adc addr32 (bad) (bad) adc icebp out (bad) jl cmp jbe loopne cmp clc fwait pop add mov fistpll cmpsb fsub rex.WXB (bad) mov cmp cld xchg xchg cltd (bad) leaveq clc adc mov adc ss sahf mov rex.RB rex.WR rex.WRX addl scas push jb (bad) or roll cwtl std push fbstp xor rex.X clc (bad) movsb (bad) xchg outsl (bad) adc rex.WX xor jbe insl leaveq sarb lods stc sub adc out jo push (bad) and ss jne,pn or movabs pop cld and leaveq insl retq rex.R (bad) and stos sbb (bad) fwait (bad) cli (bad) pop or adc cmp jp jae int3 xor pop adc xchg push ss movsl (bad) insl mov adc mov scas lret sub or jge jo and add sbb (bad) (bad) in movabs xlat gs idivb sub add ds loope xchg xor sbb lgs not insl rex.WXB sub sub adc jnp addr32 (bad) jne xchg xchg add push mov or (bad) xchg push cwtl mov movsb adc callq fisub xchg adc (bad) mov sub movabs cmp sar add mov enterq movabs loop in adc cmp in popfq insb lea add (bad) mov cmp sbb lret (bad) fidivl rex.WB jae jb adc adc fprem or cld pushq push jns (bad) popfq jmp push fwait pushq ja cmp stos test adc fistpl fstpl and cli rex.WR xlat jp clc mov pushfq (bad) addr32 adc (bad) divl clc rex.W jae test xor sbb adc icebp negl pushq rex jbe mov push sub cmp cmp push or (bad) sbb jrcxz packssdw rol fimull mov add test int xor int3 rex.RX or fistpll stos rex.WRXB (bad) hlt sbb movabs cmp jp pushfq (bad) sub (bad) and adc xchg sub cli adc push movsl (bad) movabs (bad) stos leaveq pop or (bad) nop and (bad) or rex.RB or loope adc or gs rex.X adc xor xchg cmpsl fmuls test out (bad) (bad) sub add stos push adc xor stos out and xchg (bad) sbb xchg adc ds (bad) iret adc cmp scas adc (bad) jl rex.XB adc xlat mov xchg test callq add movabs jb rex.RXB rex.XB mov (bad) jle fcomip (bad) addb cld sbb js push (bad) movabs xchg lahf loope adc rolb mov jne (bad) rex.WRX add xchg (bad) test in je cmpsb jl push add js jg movabs xor adc push or and in xchg (bad) mov push adcb (bad) (bad) jge icebp xchg fbstp jnp (bad) movsl scas jmp xchg sbb cmp es stos callq test movslq push rex.WRXB (bad) enterq rex.RB mov cmp rolb rex (bad) out xchg fbstp mov insb push (bad) sbb pop add test rex.XB (bad) jl cld out rex.WB or mov or clc (bad) fsubr fiadd sbb rex.WRXB pop imul and or xchg pop lahf cmp fimull mov outsl (bad) adc add mov (bad) (bad) rex.WRXB movabs fildl (bad) mov fadds shrl movabs nop (bad) rorl jno mov retq int3 add cwtl imul mov mov stc sarb leaveq xor xchg xor push sub (bad) mov addr32 mov sbb jae imul add orb (bad) cmp mov push (bad) out pop jne ficoml fs lret in or ja out (bad) jbe adc popfq mov pop or (bad) loope mov push (bad) nop fisttpll out fimull xchg rex.WR int3 insl sbb rcrb in mov mov and subl (bad) xor (bad) rex.X adc xchg out push sub rex.RX xchg pushfq push (bad) xchg push jnp cmp rex.WR (bad) in retq sub cld and data16 sbb mov jp xchg fmuls rex.RXB je,pn and and rex.X addl movsl (bad) in mov lea mov pop fs fdivp sbb rorb sahf sti outsl movabs hlt mov fdivrs js adc pop and (bad) add mov jle jbe pop or (bad) lock cmp sub movsb lea or (bad) jmpq xchg callq jmp (bad) pop jmp lahf push movsb imul test cmpsb (bad) sahf mov xlat sbb lea add and xchg push pop lahf pop cmpsb (bad) rex.WRX nop test mov iret insb or (bad) jns adc (bad) out lock out (bad) (bad) mov xchg loope add add mov nop rex.WR (bad) (bad) xlat (bad) pop adc mov xchg rex.WX jrcxz xchg js jne mov retq rclb callq lahf sbb jrcxz xchg mov cld add in movabs mov mov jbe hlt adc sbb (bad) pushfq divb push js ffreep and cmp (bad) pop insl int3 push sti or xchg rex.WXB lret xor loopne or xchg sub (bad) repnz insb pushfq push ss and jp sbb jb stc xchg lods callq stos push add and ds (bad) iret or test or jmp (bad) mov (bad) xor ja jae faddl or add (bad) or add jrcxz imul (bad) cmp push xorl and pop xor int out push jnp movabs mov clc pop retq add jbe (bad) mov rcll retq (bad) fsubrs retq cli xchg fsts rep jb adc rex.WX sbb imul rex.XB adc (bad) (bad) cmc lock mov pop in lret mov add (bad) movsl pop ja push repz sahf mov push (bad) pushq loope cmpb mov mov (bad) mov rex.WRB out (bad) popfq int add xchg in sbb faddl (bad) cmp fildll repnz adc loopne iret stc fxch lock (bad) lea lods rex.WRX (bad) orl callq out insb mov jmp imul movabs rex.X mov je (bad) negb mov xchg xchg rex.WB lock (bad) cmp retq lock mov leaveq test (bad) int xchg jge cld add insb hlt sbb mov cmp (bad) idivb adc or cs orl xor cli fsubrs (bad) sbb rex.RB hlt sbb cltd and (bad) fstl retq movabs (bad) cmp je mov (bad) jmpq add je js scas push nop vmovsd adc es (bad) jle int3 imul cmp sbb (bad) jb enterq xlat stc in and cmp (bad) jl lret xor cltd or (bad) movsl sbb in cld adc mov sub test sbb add xor (bad) (bad) adc jmp xchg movabs int3 mov pop adc jns (bad) (bad) movsb stos enterq jb (bad) loopne push sub cmp pushq lods xor jno adc ja rorl int3 scas pop pushfq outsb jle or mov loop push xor cmp xchg rex.W rex.W rex adc adc scas rex.WR rex.X xor (bad) mov xchg (bad) (bad) adc rex.B rex.XB rex.WX mov mov rex.WB notl out rex.WRXB nop mov js rex.RX xchg ss test add outsl (bad) roll (bad) mov jnp (bad) sub pop (bad) movsl mov ja push rex.RX or and or adc jae js iret retq and (bad) sbb shrb xchg je cmp lea xchg jp mov addb loope retq lock (bad) jbe xchg mov scas xchg idivb cwtl (bad) (bad) test or (bad) sbb xchg mov in stc fsubs rex sub jno adc lahf sahf rex.W or notb mov xor (bad) (bad) or (bad) mov and out cwtl (bad) (bad) lods repz adc (bad) mov fwait mov cmp (bad) rol repnz (bad) add jrcxz (bad) xor cmp sub push stc cmpsb xor (bad) movabs mov pop es (bad) (bad) (bad) mov fcoml jno stos sahf cmp clc rex.B std adc sub and rclb popq (bad) movslq lret adc movabs jle out or gs xchg mov mov int add (bad) out or sbb shr jg cmpsl outsb sbb (bad) leaveq je lock not (bad) adc mov stos jge jrcxz and es add and sub (bad) sbb adc out add lock adc (bad) xchg jl and mov nop jmpq es adc fst mov and xchg popfq fcmovnu rex.XB lock mov adc xchg gs sub lcall adcl or (bad) in test adc jl je test ds sbb and fnstsw add mov sub out mov (bad) mov (bad) adc cmp mov jmp mov not sbbb (bad) fdivs lock sbb test nop sub mov rolb sbb imul mov out lahf jg mov jp addr32 test movabs adc cmp scas sbb pushq xchg xchg sub sub sbb (bad) (bad) cmp (bad) xor rex.WRB rex.WX xchg adc (bad) xcrypt-cbc cmpsl adc mov lock lods mov imul pushq rex.RXB adc std jl xchg sub addr32 imul pop loope or rex.B (bad) fistp callq cmc lret xor mov sbb rex.RB push in push xor sbb insl icebp xor mov movabs notl notb rex.W add xchg std jg add adc mov sub sarl sbb pop and jne cmp mov or push movabs adc hlt fisttpl jle (bad) movsb mov sbb hlt pop (bad) cld add pop and movslq loop movslq sbbl (bad) pushq out rex.WRB (bad) movslq or mov xor fildl imul cltd (bad) rex.WR in (bad) sarb movabs pop sub adcl fidivrl cmc xchg outsb (bad) (bad) mov sbb rex.R mov lock push cli scas xchg push jbe pushfq lahf movslq mov lea mov xor retq lock and sbb cld in xchg pushq sbb fmuls jmpq mov sbb xchg rcrb and rclb fistpl adc cmc jl popfq adc mov addl pop jge (bad) jmp push (bad) or xchg adc mov rex.W adc pop fxch mov adc rex.WR (bad) insl sub xchg rex.WR adc mov (bad) xor retq xchg jle in jae loope retq in cld pop rex.WRX repnz imul and movabs loopne (bad) in xor (bad) leaveq (bad) sbb lock (bad) and rex.B push mov out ss mov fstpl iret gs xor jp cmp (bad) (bad) xchg lods adc push mov rex.B rorl add (bad) cs stos (bad) (bad) adc rex.R callq jle enterq push shlb xchg jns sbb std and and lahf lret xlat add jno jae cmc pushfq lock int3 rcl xchg cltd rex.WRX (bad) mov (bad) cli cld lret push jbe xchg mov enterq lea (bad) xor rex.WRB rex.XB or stos adc add fwait sub rex push jb (bad) push int jo fcoms cmp cmpsb sbb in and lret mov (bad) adc in in (bad) jb rcrl fdivs sahf jbe int mov jge int add decb ffreep sbb ror xchg sub push rex.X repnz adc std (bad) fild (bad) ds mov test or rcl and jge or jae xchg imul icebp popq pop lock outsb fistl mov stc pushq cli adc sbb adc sti cltd pop mov cs xor leaveq retq bnd adc sti jl (bad) rex.RX jmp clc sub jrcxz mov (bad) mov add (bad) mov mov (bad) enterq xor rex.WR (bad) mov jle mov out int3 adc jne add (bad) add pop xor (bad) int jns mov jno xchg xor sub fnstcw sbb mov rex.WR repz sub cmp out or pop jmp out movsl rcl (bad) stc negb outsl or callq cmpl or xchg rex.X add repnz push leaveq out xor mov fnsave xchg (bad) ja sahf ds cs nop mov (bad) sbb je int3 fnsave add rolb (bad) in iret add pop popfq pop jb jne or loopne xchg jmp fcoml lea (bad) out rex.R or xor callq (bad) sub scas in testl jbe adc (bad) mov in or (bad) xor ss fidivr lods or add loopne sub je sub cmp mov sahf retq push pushq ss rcrl fiaddl pop sbb loop xchg in mov cmp fs and pop mov fwait ja lahf (bad) xchg shlb push (bad) jo (bad) pop mov jb mov rex.WR (bad) cltd (bad) rex.X jg jnp push jmp jbe jmp or repnz rex.XB test callq mov incl (bad) es jno adc add imull (bad) mulb add (bad) (bad) sub (bad) lods sub add push mov xchg rex.WX (bad) pop rex.WB stos xchg cmc rex.WB mov stos cmc repnz in or sbb (bad) jrcxz (bad) jne,pn fimul fwait maskmovq (bad) rex.WB imul add xor btc and cs in hlt (bad) pushq push fildl add pop out mul (bad) out mov adc sbb rex.RX adc jle (bad) and fcmovnbe push mov cmp in insb xchg adc or outsl cwtl repz xor and fwait adc jb jmp or rex.X fadds fcmovu xor enterq mov int3 (bad) ja (bad) sub (bad) in mov add insb outsb and rex.WX movabs je hlt ja lahf callq es repnz xchg (bad) jrcxz jbe scas imul add xor rorb callq pushq push (bad) or (bad) idivb add roll and rex.WR rex.WRX cmp callq insl rcrb rex pop gs adc sbb sub sub int lods std subl lods js fs (bad) xor xor sbb (bad) mov cmp pop pop and icebp loope cmc fmul cmp sub nop adc pushq (bad) cmp add (bad) ds adc mov and add loop imul cld lock xor pop movlps (bad) rcr jrcxz mov xchg gs sub mov fidivl xchg data16 jns int3 mov icebp mov mov sub outsl int3 jae adc lahf mov ss sub or (bad) cmp fiadd (bad) retq lret (bad) add jnp cmove xor rex.WRXB jrcxz xchg add xor out sub xor imul cwtl lock scas cld rex.WR leaveq and (bad) sub (bad) xchg mov cmc cmp pop (bad) sub leaveq (bad) pslld fcompl int3 rex.WRX por lock push xor popfq add xor add xchg jne ss adc adc andb cld mov adc negb movabs xchg in adc (bad) xor jmpq je xchg mov jge add fdivrl cld lods push push xlat xchg fcomps sbb cmp (bad) or or repz idiv jle adc outsb xchg lock adc adc fwait xor xchg sub or sbb jge movabs jb pop push mov mov mov out adc cmp cmp rex.WB movabs (bad) push add sahf (bad) out sbb push rolb adc stos pop and xchg mulb pop mov ja out cmc stos and mov mov cs mov (bad) fcmovnu (bad) mov fsubs push adc cmc (bad) hlt rex.WXB jg jge jmpq cmp push sahf fisubl retq lock mov ror or loopne push mov jle (bad) rex.W mov ds in iret loopne add or sarb mov add lret (bad) out sbb fcomp popfq sub and jmp cld andb rex.RXB mov leaveq jae int3 cld out jrcxz and sub cmp data16 (bad) mov cmp fnstcw or pop mov jle (bad) (bad) roll notb mov mov hlt xchg (bad) (bad) rex.WB rex.WX in adc callq (bad) xlat test cmp sbb sub in std adc cmp adc sub fist imul hlt sbb (bad) rex.WB xchg and xor lods ss (bad) mov pop loope and mov rcl adc and scas xor cmp cmp sbb sbb adc nop xchg push (bad) (bad) movabs (bad) (bad) ja mov rex.RX (bad) adc ds adc lods (bad) (bad) or movsl int3 xlat rex scas outsl or (bad) movabs (bad) rex.WX rex.WX jnp add popfq ds repz rex.WRB pop (bad) or xchg ja,pt stos xor icebp imul xor adc test js addr32 (bad) cmp out ja pop (bad) xor (bad) mov cld and xlat mov xor fstpt (bad) movabs loop cmc (bad) clc adc rex.R (bad) xchg rcr sbb xchg (bad) sbb rex.RX add mov test xchg xchg loope pushfq or cmp add cmp fwait mov std test out out xchg or push xlat (bad) fcomps mov data16 push pop adc fprem (bad) sbb out ja jg or xchg pop sbb adc (bad) sub fs adc fidivr sub test enterq xor jle lods movsl lock adc mov lahf jrcxz rex.WRB xchg sbb (bad) fwait mov mov test imul jae mov and cmp mov xor stos mov mov fstpt out orl sub mov stc cltd mov fcoms movabs jo (bad) (bad) lods fs mov or push leaveq cmp rex.X lock xchg addr32 (bad) rex.WRXB pop add in push cmpsl rex.RXB (bad) or fistl or hlt cs bnd mov test js fcom jae mov sub sahf mov rorb (bad) sub xor sub adc rex.RB rex.WXB or jbe xorl add mov mov (bad) imul or sbb xorb andl (bad) rex.XB cmc cmovno (bad) retq (bad) sub (bad) xor cmc in mov repnz (bad) lock movabs pop cmp pop cmp (bad) jg (bad) rex.WRXB adc out mov divl insl add xorb or xor jo sbb rcr outsb outsl add fs cltd xchg fsubr jns jnp mov and push (bad) xor cmp jo hlt callq sarl enterq leaveq xchg (bad) or jp cs xchg (bad) movsb xor in (bad) movabs (bad) sbb rorl cmp or callq js insb pop hlt (bad) rex.RB cmpb pushq imul insb repz (bad) rorb mov cwtl xchg out sub xchg jmpq stos jnp adc in scas jno sti push cmp repnz jmpq sub rex.XB adc and out repnz outsl repnz jmpq and retq rorl mov or adc add and fwait add mov xchg jge (bad) out adc mov movsl and fdivs and (bad) adc rex.WXB or adc cmpsb cmp rex.WRX rex.RB adc xchg pop jo rex.X adc cs pop mov sar test rex.WX adc callq push jl adc movsl jrcxz enterq es sub (bad) movsb (bad) cmpsl mov std push push adc es movslq adc rcrb lret clc (bad) xchg adc (bad) xchg mov cmp cmp fdivrs add xchg adc decl jp sti xchg (bad) flds rex.WB sub lods rex.B rex.WRB sarb pop outsb adc (bad) xchg test mov mov and (bad) (bad) fcomp retq (bad) sbb cld jmp xchg xchg cs push adc mov gs adc es or xchg pop lods int cli and notb jl test pop jo rcll xchg fs outsb xlat mov faddl mov mov xor fsubs imul pop adc cs pop mov lods (bad) pop or movsl adc retq rex.B add cmp mov imul mov xchg (bad) mov (bad) xchg (bad) shrl clc mov (bad) out insl scas xchg test cltd (bad) (bad) retq push adc loopne fs clc fwait cmp movabs cld (bad) xchg mov jno adc loope test push xlat or fsubr fnsave in add add cmp (bad) pop adc mov rex jle add rex.WXB adc jne mov loopne movslq in rex.WXB pop int movabs xor xchg jbe rex.XB rex.RXB (bad) (bad) ja jne (bad) rex.RX rex.WRXB movslq fnop fistp cmp or jno test (bad) (bad) or jmp sbb and or xchg fcomp outsl xchg jb retq jne imulb (bad) or fmull sub scas push mov cmp add rex.B rcrb rex.B xor lret in pop pop (bad) mov (bad) jne pop mov cmpsb jae out xor in rex.WRXB ja or fcomip fcoms mov sahf pop push jno mull mov jae pop mov jns hlt add xor loopne negb (bad) or and and movabs xchg or outsb xchg outsl adc or (bad) mov xor sarl add add xor (bad) (bad) and imul lahf or add scas sbb mov add ja pushfq test jl (bad) adc mov callq add mov pop mov adc jle (bad) rex.XB and insl (bad) mov rex.W sbb mov cmp sbb (bad) mov xor mov (bad) rex.W rex.WB xlat hlt enterq lock (bad) cmp repz fldl or or cmc (bad) (bad) mov jb std in cld movslq enterq jo adc xchg (bad) movabs (bad) add adc (bad) mov in xchg or fwait orb sbb pop repz retq adc movsb data16 leaveq adc test (bad) or adc fsubs jae and sbb (bad) out (bad) outsb mov adc fistpll mov fmuls or fidivr popfq pop lret lods outsb xor add gs lock cmpsl imul sbb (bad) std jg movhps add (bad) cmp adc pop fsts mov lahf lock (bad) mov (bad) mov (bad) push cmp mov jg mov movsb adc rolb rex.WRB xor and fsub int3 je adc jnp int3 cmpsl lods xor push sbb jle adc out imul cmp (bad) pop or or add (bad) adc lret sub test pop jrcxz gs xchg (bad) callq adc sbb notl sbb adc (bad) (bad) jg mov xchg push callq and cmpsb (bad) testb or add (bad) notl mov mov sub jl rex.RB or outsl xchg jne (bad) and rex.R retq pushfq mov scas and rex.WRXB xor lea loope push mov adcb (bad) xor in sbb add mov (bad) sub adc lahf cmpsb rex.WRB loope xor or rex.WRX adc add cmc pop xchg pop mov xchg movabs sbb and cwtl rex.WXB and jrcxz stos test lock sti (bad) movabs xchg cmp jg and push xchg cwtl pop push cmc (bad) adc jno test pop adc in mov repz retq push out and cli pop sub xchg callq mov pop movsl in fstpt outsl repnz xchg rol rex.WRXB adcl pushq out rex.B add (bad) sub int xchg (bad) callw fwait (bad) or add or rex.WRXB (bad) lock fst xor out pop rex.WRXB (bad) mov (bad) adc pop or rex.X jbe xor es add out rex.RX lret subl rex.WRB (bad) hlt adc and (bad) subb (bad) mov add sub repz mov xchg insl mov stos or rex.WRB repnz (bad) lret push xor (bad) cli fsub push sbb ja rolb (bad) cmp add or movsb jl rorl retq pushq sub frstor rex.W push (bad) (bad) (bad) add mov fs insb lock or adc rex.WRXB mov clc fistpl jo xor outsb mov rex.WB fdivl adc iret lea mov push (bad) ss jae je pushq (bad) std mov adc push (bad) add js (bad) data16 adc adc divb cwtl mov ja pop cmp cltd (bad) mov enterq pushfq cmpsl leaveq and je push and imull mov push insl adc jl int or (bad) cmc callq adc push (bad) pop cmp adc mov mov pushq stos sar repnz rex.WRX idivl rex lock push jne fucomi pop rex.WRB rex.WX rex.WX rex.R jns rex.RXB or rcll iret push notl rex.RB test rex.WB (bad) cmp or push (bad) sub loop jno std rex.XB rex.WRB clc test sbb rex.RX out xor xchg clc ja push mov loope int3 callq scas and mov add mov sti (bad) and adc and sbb xlat enterq pop jns mov cmp jrcxz add (bad) mov int xchg rex.WXB rex.RX insl rex.RX lock lock imul push js (bad) (bad) push loop out add cli rex.WRX adc movabs fwait cmp adc jmpq sbb pop scas (bad) push adc (bad) or push outsb sub (bad) retq (bad) enterq ss ds jno mov (bad) rex.WXB rex.WX (bad) stos stos or push (bad) fcomip test adc out (bad) adc stos movabs movabs (bad) scas (bad) adc (bad) (bad) cmpsl cmp fsub dec sbb adc (bad) test nop push mov mov mov (bad) mov sbb js repz xor xchg mov sub push cmp leaveq lret div pushfq adc loop test mov gs in add enterq pop (bad) lea mov mov fs pop fdiv addb in rex.X (bad) xchg cmp movsl add rex.XB jl int3 xchg xchg adc (bad) notl repnz test adc adc je jmp adc scas jmpq cwtl sbb pop mov xchg (bad) movabs (bad) fistpll (bad) add or adc jle divb sbbb or or loop add mov movabs ds adc push lock cli adc andb sysenter ja (bad) ss rex.X rex.WXB xchg adc and sub mov divb leaveq mov push jne (bad) callq rex.XB adc mov adc js jg callq (bad) sahf repz add add fld (bad) cmc adc mov jmp pop or sti (bad) movsb and (bad) cmc xchg jp sahf jl retq add sbb (bad) mov icebp jbe (bad) ds jrcxz (bad) rex.W sub in pop push imul adc mov cmc mov sub mov sahf scas cwtl lahf cmp pop (bad) imul xchg sti (bad) mov or mov mov movabs push jo (bad) ror mov (bad) adc (bad) adc xchg insl outsl movslq mov xchg cmc (bad) hlt mov and xor adc mov enterq jle cmp js addb sub push pushq (bad) (bad) cmp sub stc add jmp xchg (bad) rex.R callq cmp rex.WRX adc pop cmp add outsb (bad) je adc sub rex.R xlat (bad) rex.XB notb push sbb retq mull lods addr32 mov cmp rex.R and xchg jbe cli (bad) pop enterq xchg push unpckhps xchg jg lock xor rex.WRX clc jmpq psubsb adc cmp mov movabs frstor callq and mov jo out pop (bad) xor scas ja fsubl adc std in jns (bad) test mov adc (bad) mov vpsubw clc ja outsl insb or enterq (bad) fdivrl (bad) mov (bad) (bad) clc (bad) rex.XB mov (bad) (bad) jg (bad) movabs xlat retw push andl jb callq leaveq fwait loopne ror hlt add or fwait mov or es popfq mov add insl rex.WRB rex.WX jrcxz (bad) movabs mov setge or jp retq xorl cmp movabs add (bad) nop jo (bad) cmpsb int (bad) inc movabs add sub gs imul in sub adcb add callq fldenv pop je rorb (bad) (bad) (bad) sbb movabs rex.RB rex.WRXB pop or pop sub cmp (bad) xchg (bad) (bad) cld stos (bad) loope (bad) (bad) mov cmp ja out add (bad) mov int pushq push and push fidiv jmp add sub mov (bad) adc repnz enterq fadd addr32 (bad) pushfq push and adc jl lea push pop (bad) cmp rex.XB jp imul mov jg movabs (bad) xor xchg hlt stos movabs cli sub pop (bad) fadd (bad) rex.WRX cmp repz push mov lret in lret xor in (bad) hlt (bad) adc (bad) xchg (bad) pcmpeqd xor (bad) (bad) js xlat sti fwait or jmpq rcll xchg (bad) mov (bad) sbb xor rex.WRXB add pop jp mov mov sub jmp xchg test movslq callq nop shrl sbb js movl test outsl rex.XB adcb adc rex.R rex leaveq mov lahf and movsb adcl out sub out rex.W ss lret imul js adc shr retq lock pushfq pop idivb int3 sbbl pop pushq rex.B (bad) imul (bad) popq sbb rex.WR test xor stc addl sub adc enterq and divb outsb xchg bnd cwtl and adc stos sbb scas jg (bad) rex.RB adc push and enterq xor (bad) lea jne sbb and out cmpsl rex.WXB adc in xchg (bad) rex.WRXB movabs add insl rolb (bad) outsb adc cmpsl gs mov (bad) movsb mov lret (bad) lock fsubs repnz js (bad) subb (bad) mov adc jns push rex.WX rex jl mov add rex.XB or (bad) mov mov test (bad) rex.WRX push mov ss mov and cltd cmp add out mov adc adc adc loop or (bad) cmc sub cld pop lahf rex.B add stc movslq add sar lock insl xor mov mov cmp cltd (bad) mov jae imul (bad) mov jle in hlt repnz cwtl rex.RX test push callq adc jle sbb mov (bad) (bad) fdivr loope sbb fnstsw push pop callq push xor or movsb (bad) xchg (bad) loopne cmp jle hlt (bad) (bad) movsb data16 jns out mov add (bad) or imul (bad) out outsl fist adc insb mov es lea (bad) cmp test xlat fs add (bad) add rex.WX movabs imul mov retq xor (bad) jge mov adc rorl jb out mov (bad) outsb rex.WRXB (bad) scas sbb adc movabs mov add or add jne xor cmpsb pushq movslq sub movabs mov jne movd (bad) sbb rex.WX xor pop (bad) out lock adc rex.X scas lods enterq xor cmp adc loop add adc cmpsb out cs push rex.WRXB adc pop jg,pt in lea mov movabs adc stos xchg pop xor repnz enterq rex.RX sub bnd xchg leaveq (bad) (bad) rex.B sub jns jrcxz mov sub (bad) and adc int3 jae sti adc rex.B cld adc add or mov add mov jo pop rex.RB rex.WRB mov jns cltd fwait (bad) sub push (bad) ss sbb sub add mov mov adc test (bad) cli (bad) lods hlt jmpq movslq out (bad) mov cltd repnz xchg adc mov push imul in sub stos add xchg (bad) or (bad) and jnp jle pop sbb (bad) (bad) loope mov pushfq shlb icebp xchg movabs and callq rex.XB fwait push (bad) rex.RX data16 loope ds sub (bad) mov mov jp repz mov pop popfq lea (bad) xor stos lods in callq and lods mov (bad) mov mov sub or (bad) jrcxz ss (bad) add (bad) mov stos (bad) mov jp (bad) xor lock or stos rex.XB (bad) sbb push movsb jne rex.RB data16 jmp loop xor imul enterq (bad) add add imul or mov movslq (bad) cwtl (bad) xchg jle adc xchg or (bad) jae jge ljmp retq rex.RXB (bad) not xor sbb push mov loope gs mov icebp jbe pop mov mov repnz scas cltd (bad) push popfq (bad) jrcxz adc scas out adc mov (bad) test scas outsb adc fs fsubr adc add movabs lret adc in out adc xchg popfq jbe cld gs adc adc mov cmp addr32 ja cmp subb push adc cltd sbb clc xor adc imul (bad) adc out pop icebp (bad) adc mov jge out adc jp mov (bad) adc fwait (bad) cmp add add leaveq lea adc or jne out in mov test gs movabs icebp xor jb jns loopne (bad) movsl in out xchg divl (bad) mov (bad) mov add mov rex.WRXB (bad) xor mov xchg (bad) loopne rex.WB (bad) xchg mov lock retq (bad) xor or and callq sub push (bad) jrcxz not jg fadd (bad) int3 cltd rex.XB push in cmp (bad) imul (bad) sbb fimull idivl xor mov add cmpsl xchg sbb xor rex.WB sub callq ss mov xchg adc (bad) lret repnz xor xor mov lahf fwait xor push jne cmc cmpsb sub (bad) (bad) cmp imulb adc mov add loop mov movabs mov fsts sub (bad) jae mov retq rex.WRX xchg adc pop or fwait mov (bad) js rcr add push (bad) push es adc ss and (bad) pushq cmc sub xor test scas adc fnstsw rex.R jne pop pop clc outsb sub imul jb gs (bad) mov mov adc (bad) jge sbb adc xor cs adc testb test stos jae (bad) loop rex.RB pushq add sbb repnz (bad) jrcxz adc (bad) mov cmp pop xchg imul addl jle jo jle es loope rex.W gs scas (bad) (bad) mov xor add rex.WXB clc adc int3 rex.WRB mov adc lret test pop push ss sbb (bad) (bad) xchg mov fdivr test lret mov cmpsl xchg rclb retq or out or test mov jl push stos (bad) movabs callq cmp outsb in (bad) sahf sub stos rex.WRX sahf jb xor sub jno lea and (bad) rex.XB sarl cs pop fnsave jno rex.B jmpq add fcomip sub adc add fidivr push jns lods ja sbb in movabs (bad) mov rex.R xchg jrcxz loop cmp cmpb or rex.W lret cs loop rcrb push outsb int jb pop mov sbb pop pushq cmp xchg stos xor cmp int neg lea mov loope and add jb or (bad) and repz jne (bad) insb sarb push sub repz add mov (bad) negb shlb negb push pop xchg sub pop sahf (bad) seto mov fwait mov mov retq icebp cmp cltd rcll ficom and push mov sub pushq rex.WRX (bad) fnstenv adc rex.WX or mov leaveq xor stc cmp adc mov adc loop (bad) outsl adc or adc fdivs mov rex.WXB repnz in jp popfq lock jae fwait (bad) (bad) xchg mov xor ficomp rcl mov adc push fistpll add mov popfq in xchg xchg jae (bad) and (bad) sbb fistp fist jno (bad) scas js cmp adc rex.WRB jae callq cmp cmp push in jnp jmp and (bad) lgdt jne lahf out jmpq mov xor lods imul add fmul iret outsb cmp mov mov enterq sbb pop add jb push loop scas popfq mov (bad) mov adc mov push jle divl shrl loop and out add movsl mov fwait sub sbb int3 xlat imul repz cmp cmp repz (bad) lahf sbb shrl mov xchg jae (bad) adc or scas jg or cs rex.WRX hlt (bad) xlat add test jp stos fldt retq xchg mov jg jg outsl jl (bad) roll mov (bad) cmp ss pop xlat in mov xchg fnsave add jno jns rex.WRX and rex.WXB out jo (bad) lock (bad) rex.X jae sbb (bad) xlat (bad) mov movsl rex.RXB pop jge xchg add jg (bad) mov adc rex.W movsb and mov pop sbb mov (bad) rex.XB (bad) rcll pop (bad) clc fs rex.RB rex.RX jge icebp adc add (bad) sahf fcom (bad) lret sub jb adc mov jrcxz adc es rex.X (bad) pop imul out addr32 fdivs fisubl fmuls fcoml adc rex.WXB rex.WB ds lea adc imul or sub xchg adc (bad) int repz (bad) clc (bad) and sub cmp xor rex.XB mov rex.R push callq (bad) rex.R jmpq js (bad) faddp outsl (bad) mov jge sub pop loopne (bad) mov lret out test push sbb and or adc pop rex.RX xor rex.RXB rex.WR sti (bad) jnp nop cmp and cmp lods cmp xor (bad) rex.WR add mov adc nop push (bad) negb jb sti fldcw rex.WRX movabs sbb outsl int3 js hlt (bad) adc in cmp gs mov xchg jnp rex.WR fnstcw or cmp lock icebp rex sbb rex.XB add out xchg rclq rol rex.X jg (bad) (bad) adc fmull leaveq rex.WB fwait sbb subps test add (bad) mov rex.WX clc mov (bad) repz rex.RB fwait pop dec rex.R mov mov rex.WRB clc adc addl fimull jmp jp (bad) jae data16 pop lret test icebp out (bad) rex.WRXB mov addr32 pop sbb adc outsb mov (bad) cmp hlt xchg lahf (bad) pop adc ja adc mov (bad) xor rex.X (bad) (bad) test fwait mov mov fmuls loope movabs flds pushq outsb (bad) mov rolb sub lock push and xchg (bad) jno rex.WRB js lock or xchg std sbb pop or cmp or mov sub js sbb pushq (bad) rex add lea add sbb jp mov out ds or movsl xchg rex.RX rex jns test mov test xorl xor mov adc rex.RXB iret sbb lret sar nop jne and adc add adc push cmp mov movabs cmp xor pop out mov pop mov rex.WR adc out cmp adc or jne pushfq jbe adc (bad) jne push mov sarl cli cld xor sahf xchg enterq xor test cs loopne push fsincos clc (bad) mov mov adc (bad) add jo fs (bad) (bad) popfq mov xchg (bad) cmc xor (bad) push (bad) (bad) jl cmpsb movsl (bad) pop cs push mov mov and sbb mov or sahf (bad) jrcxz stos adc iret rex.RXB push imul xchg xchg outsl adc and rex.X mov mov icebp xchg (bad) (bad) callq jge mov scas es jmpq in jbe rolb lods ja xor lret xor add shlb adc decl (bad) push cmp sub (bad) retq outsl cmpsb movabs (bad) jne int mov adc sub sub rex.WRXB movabs mov xor (bad) or rex.WXB xchg cld add (bad) stc movabs rcrl xchg mov push pop imul xor gs shlb cltd sub jp mov rex.R test adc xor xor ja rex es (bad) adc (bad) int3 lahf popfq subb repz fist clc sbbl adc lahf out mov fadd or sub in stc gs (bad) cmp (bad) sbb test scas adc callq add (bad) in (bad) enterq (bad) (bad) adc (bad) (bad) cmp mov cmpsl mov cmp xchg loop movsb gs out (bad) jb adc (bad) mov (bad) xchg movabs cltd (bad) xlat xchg lcall xchg xlat pushq adc mov (bad) mov (bad) (bad) adc rex.X (bad) mov rcll stos rex.WXB sub sub sbb mov mov lock rex.WX jl rex pop data16 repz (bad) mov insb adc add pop pop mov push in outsl fist pop movsl (bad) imul rex.WB callq sub (bad) and ja callq fwait or add xlat xchg pop js xchg movabs sbb ficoml (bad) and imul (bad) and rex.RX or ja (bad) pushq stos adc data16 adc sbb adc jmp rex.WR add nop sbb sbb pop xchg xchg adc adc mov mov (bad) incb movsl (bad) pop rex.RX int testl adcb mov or adc addr32 imulb (bad) movabs pop or sub mov test push adc and jl je,pn mov sti fwait movabs push fnstcw out xchg mov (bad) jno je (bad) adc callq retq mov (bad) mov push xchg adc sbb lahf pushq sub insl (bad) ss (bad) push ficom or sbb jne adc (bad) fcomp push sub mov (bad) adc movabs mov rex.WB stc xchg roll ds mov outsl sub or pushq rex.RXB add xchg es (bad) jbe (bad) sahf cmpsl (bad) jb (bad) cs (bad) (bad) sub and in loop sub sub movsb pushq int (bad) push mov scas (bad) iret (bad) adc je mov fdivl (bad) repnz (bad) popfq fwait (bad) add xchg or xorl pop fwait sub std adc fsubl adc and rex.RB (bad) cwtl fidivr cwtl sbb adc push adc data16 sub rex.R rex.RXB lock rex.WRB and mov ja icebp pop (bad) cmp out xchg adc out mov sbb and lahf rex.B jbe sti clc jmp and js popfq shll enterq repnz test mov lret xchg and jmp in or retq xor mov jmp mov jnp xor fldl ja sti or (bad) lods (bad) add fbld sub (bad) out add nop popq rorl cmc pop fcoms pop sub cmp mov cmc pushq popfq and leaveq xchg loop (bad) fcmovnbe jg mov add out mov jnp jno mov xchg xchg sbb jg mov xchg cmp sbb (bad) (bad) loop pop (bad) je lahf xor adc rex sbb mulb jp cli retq mov movabs fist rex.R rex.R pushq lret rex.WRX rcr (bad) movb add (bad) sub stc lahf (bad) pop and cld sbb fwait retq gs fisubl mov rex.WXB mov sbb cld clc pop cmp adc fsubs addl mov (bad) test xchg xlat ss (bad) add or in (bad) (bad) mov (bad) sarl jb cld insl (bad) add ja rex.W or retq xor rex.X rex.B (bad) jbe and cmc mov lods rex.WR xor lret mov std xlat or retq test jno mov movabs lock out (bad) cmpb and mov (bad) (bad) fldenv xchg adc rex.WRB rex.WRXB xchg cmp decb mov mov adc sub push stos adc loop push mov and fbld sbb cli jge jae sbb jg xchg lods add std popfq or xchg sbb pushq adc push push (bad) push rex.RXB clc and (bad) iret or mov rex.W repz or (bad) adc fidivr add pushfq icebp rol push cmp rex.WX adc add adc rex.RXB cwtl mov icebp gs cli out lret (bad) mov jns push imul (bad) sub cmp (bad) mov or ljmp lods xor xchg sub retq movabs (bad) (bad) or rex.RX (bad) (bad) xchg neg (bad) mov jno pushfq pop (bad) lret rex.WRX gs rex.WR mov (bad) (bad) adc xchg testl xor incl int3 sub xchg cmp adc addr32 cli es insl cmc cwtl cltd int3 int3 outsl jo lods jge cmpsb (bad) enterq cltd push rclb test es xchg jp add retq jmp (bad) and adc (bad) jb and fmuls hlt push stos mov js scas adc adc movabs pushq and fstpl subb lock adc (bad) (bad) loop adc sub jmp sub push mov out push test xchg mov cmp test add or pop (bad) xor es jae cmp (bad) std pushq mov add adc movabs imul xchg jp fild xchg shlb mov addl xor push (bad) xchg fsubr jle and xor movabs push ja jl xchg (bad) lock pop loop mov imul pop cmp rex.WRXB (bad) jne incb mov rex.WRXB int3 jno sahf int3 sarb jmp rex.R out (bad) (bad) mov and adc fstl (bad) jno rex.B (bad) ds adc lods (bad) or pop idivb cmpsb std mov rex.RB (bad) mov movsb adc pushfq retq or je pop jmp sub jmpq (bad) xchg mov xchg (bad) xor or xchg and or pop sbb mov push jae movabs in jne xchg xchg jbe mov pushfq xor loope rex.R push (bad) mov rex.WRB sbb or hlt or movabs rex.X (bad) and sub (bad) fiaddl mov push rex.WXB cmp pcmpeqw cld adc lods or (bad) sbb mov (bad) jle movabs fildll (bad) pop push cmpsb cmpsl fnop rex.WRB or mov (bad) sarb (bad) (bad) out fisttpll (bad) mov (bad) je mov out rex.B cs (bad) push mov idiv in jno jb sub cmp (bad) (bad) retq cmpsb movabs add mov pop movl (bad) push rex.RX sub (bad) (bad) out jns and sbb (bad) (bad) (bad) xor jp and movabs rex.XB pushq mov xor fmuls rex.WRXB pop jge rex.WXB (bad) int3 test (bad) pushq retq (bad) pop mov fistpll pop or or (bad) pop adc popfq callq adc rcll andb xor lret xor fdivr (bad) (bad) xchg adc xchg rex.RB rex.WRXB push mov add (bad) (bad) xor (bad) pop lahf cmpsl add imul mov int3 sub mov dec pop push jb adc repnz in (bad) jrcxz loop callq sub adc mov (bad) cli sub hlt sbbb movabs out punpcklwd loopne test mov mov lret or push or and mov ficomp addr32 mov mov rex mov fstpt int3 outsb int3 adc outsl jb add cli scas fs and clc fsubr mov (bad) pop (bad) jp jnp (bad) and movslq push ror rex.WX negb rex.RX sub ss push rex.WX and sahf and jnp sub movsb mov pop fwait ss jo psadbw stos pop data16 retq and and test shl sbb out imul adcl mov div xchg adc iret add fadds in adc fisub add lret adc jge movsl mov test retq and ss movslq mov adc movabs enterq stc mov jnp in ds hlt sub mov imul sub (bad) lea nop shrl sbb jp std pushq jg adc jbe push lea sub or test adc fcompl nop clc cs unpckhps cmp imul adc (bad) push divb in mov push lret rex.WR xor or rex.WRB cmp pop jg stos xor pop iret sar int3 cs adc jns (bad) sub lea movabs callq (bad) jp add and rex.WX out mov (bad) cmpsl jrcxz (bad) mov fdivr imul xchg orl jne pop xor jmp fidivr adc pop adc mov movabs mulb loop cltd cmp lock stos pushq mov push adc and push fdivrl cmc stc lcall fmuls rex.RB cmp jmp cmpl jmpq sub pop pop insb or repnz (bad) repz jbe jnp cmp loop stos sbb adc rex.RX adc pop icebp jge rex.WX test sub adc mov data16 lods sub mov adc push imul imul cmp add mov xor (bad) or rex.RB rex.RX fs rex.RB (bad) sbb imul sub add add subb rex.WRB lret rex.R rex.WRX jl xchg adc xchg popfq rex.RB movabs fnstcw jg (bad) and (bad) enterq (bad) xchg je in or rex.WRXB mov mov jbe lahf (bad) enterq fsubrl in (bad) insl retq rcrb cmp mov cs (bad) movabs pop (bad) cmc (bad) add mov sti (bad) enterq xchg sbbl faddp mov mov jg rex.WXB cltd test (bad) (bad) xor adc insl mov push cmpsl (bad) iret cmpsb addl sar (bad) (bad) xbeginq jo xchg push fstps (bad) rex.XB cwtl xor sub (bad) mov js jrcxz and rex.WR jno or and enterq jmp sub movabs mov (bad) mov popfq rex.WRX and and cwtl scas cmp retq xlat push fcomip test rcrb (bad) rorb movabs sahf lock cmp rex.B jmpq push xchg scas xchg push andl (bad) je push (bad) hlt (bad) mov lock xchg jmp sub nop rex.WRX (bad) xor (bad) xor rex.WX sahf (bad) lahf jle adc outsl rex.WR adc jae adc callq xchg shlb int3 nop add mov (bad) rex.WRB cwtl addb adc lods insl rex.X out stc jbe movabs push es je jp push sbb sti xchg mov (bad) lock callq push sbbb rex.WB test mov mov outsl push pushq add add jmpq (bad) cmpl movsb (bad) (bad) or movabs xchg loopne addl adc cmp repz sbb or pushq push fs rex.W adc (bad) test movabs rex.R data16 xchg out ficom test popfq cmp je jmp movsb imul ficom repnz sub (bad) adc rcll mov mov or cmc jo jb insb repnz movabs pop rex.RB sbb shl in and or (bad) (bad) scas mov movslq fadds roll xchg insl jge mov rex.WB mov jmp add add mov cmp push xchg nop and (bad) adc mov lahf push and add and es or movabs and je xor (bad) and mov fiadd jle rolb xor fidivrl add cld adc ss shll jg and gs jae (bad) xchg add (bad) xchg clc add push lret imul movabs or fistpll xchg (bad) push int3 jo sub jno (bad) imul callq xchg mov xor sub lret iret sbb mov sub sub movabs or std add (bad) retq mov int3 sub sbb test fwait push xor callq hlt pop pop fist mov je cs insb mov in (bad) sbb (bad) std out fdivrs mov test mov adc cmp sub callq insl hlt adc imul and push (bad) mov rex.WX (bad) cmp xchg jno iret or (bad) mov std (bad) lock cmp rex.WB xlat (bad) xchg push xor and add fimull fsubrl rex.RXB ss iret cmp xchg (bad) (bad) and (bad) cmp loopne insl rex.RXB movabs int retq ja rex.X (bad) in or cmp gs adc pop (bad) cld clc cmp (bad) insb sbbb cwtl xor jno icebp fwait and rex.WRX add jl ss and popfq ss fsubl push cmp mov jnp mov adc cmp push jle scas rex.WXB (bad) movabs pushq adc mov add xor in stc fsts adc lods lods mov push xchg adc and push mov icebp in adc js int3 xchg fisttp xchg nop adc fistpl add push (bad) out rex.RB lods add (bad) (bad) movsb (bad) out add push ds xchg push rex.WR xor add cmpsb stc fwait xlat in out cmpsl xchg sbb rex.X rex.WR mov cli adc (bad) pinsrw leaveq pop adc vmovdqu xchg pushfq pushfq xor jo cli cltd mov cmpb and mov fbstp (bad) add rex.WX lock xchg adc pushq pop callq addb xchg xor mov xchg scas fwait xor xchg cli pop xlat and cmp sub rex.RB adc test insb outsl (bad) pop pushq xor rex.B lretq repnz sub (bad) (bad) adc fabs outsl sbb (bad) (bad) adc and (bad) rex.WRB jb xor xchg (bad) je and fsubrs pop sbb gs adc sbb adc adc popfq std lea (bad) (bad) mov movabs (bad) xor (bad) mov sub icebp and incl and rex.WRX repnz addr32 cmp adc subl rex.RXB outsb ficoml fucomi (bad) pop icebp cmp xchg out xacquire mov cmpsl (bad) mul push fiaddl rex.RX xchg jge push retq sub movabs (bad) cmp test pop jmpq test jne and mov mov movabs or outsl and stos sub int3 frstor adc sbb (bad) rex.RB push xchg xor adc movabs mov hlt xchg jns fstps jge jle adc callq xchg jrcxz adc je mov adc or mov jg test retq jae hlt (bad) mov retq xor mov (bad) sbb (bad) push or lea faddl out retq out jrcxz subb shrl adc js lret (bad) (bad) xor in (bad) mov (bad) (bad) idivb (bad) add xchg out hlt (bad) (bad) jo cli xor es mov negl jns int3 mov mov cmp xchg sub fldl and callq loop rex.WRXB pop cmpsb test lahf adc pop pop iret in mov xchg mov (bad) imul retq cmp (bad) fidivr rex.WB hlt xchg adc xchg rex.WRX clc fstps fisub mov adc test idivl ficompl xchg sbb je pop cltd sub ds test rex.B cld xchg or push mov repz (bad) sbb push adc rcrl mov (bad) mov retq or (bad) lods sub push (bad) (bad) jae addr32 mov data16 sti fwait cli and xchg adc movsb cmp (bad) xor (bad) adc pushq stos subb addr32 out lods emms jne (bad) sbb sub pop sbb sbb fdivrs pushq cltd (bad) xchg out cld callq pop pushfq in sbb sbb (bad) icebp retq scas (bad) (bad) mov icebp and (bad) jmp xchg (bad) or (bad) pop sub (bad) int3 sbb fcomp jb int3 in enterq xor add or ja push lock (bad) and stos lret rclb cmp js mov rex.WRX (bad) movabs (bad) (bad) jmpq (bad) repnz nop leaveq out pop xchg (bad) out rex.X js or mov (bad) add outsb and mov pop (bad) xchg (bad) clc je sub test movsl cmp adc push lea adc pushq mov mov and xchg sub out callq xchg (bad) (bad) (bad) sbb stc clc adc (bad) xor sub (bad) rex.WX frstor sub icebp movsb ja push and (bad) adc in adc (bad) fisttpl add lock cmp sub sub (bad) imul push xlat fmuls pop (bad) loop out xchg iret cs lret fdivrl (bad) (bad) (bad) mov adc test or scas push sbb xlat (bad) xchg rex.X lahf jno rex.B (bad) sbb movsl xchg sbb adc test add movabs sahf adcl rex.X xor (bad) iret adc jg stos fisttpl test fsubl (bad) es xor icebp enterq jge rclb hlt xchg fdivrs pushfq fisttpll or xchg add loope movabs xchg push scas rex.RX fwait cmp pushw (bad) sti nop mov test add cwtl rex.WB icebp adc sbb xchg mov rex.X push (bad) pushfq stos (bad) fsubr xlat or xchg xchg pushq int3 pushfq adc sub fdivrl stos outsl (bad) pop sub xor rcr sub (bad) roll pop movabs in adc or gs unpckhps mov stos cld adc iret and lock rex.RX xchg sti jns lahf sbb adc rex.WRB rex.WRXB fsubrs fdivrl jae icebp adc loop or push js pop loopne rex.XB mov scas lret jo or xor (bad) mov rolb lea (bad) (bad) cld lock jno test insb fwait adc add repnz adc mov xlat adc sub in mov push pop adc test fwait loopne sub scas int3 adc pushfq pushq lret cmp (bad) rex.RX add stc adc out sbb (bad) enterq and out movslq add (bad) xor sbb rorl (bad) xlat hlt stos jns callq add add rex.R adc stos jno pop (bad) pop add add divb push rcl cmp data16 int and cmp jbe rex (bad) iret mov (bad) mov mov insl xchg mov cld adc insb callq movsl (bad) xchg (bad) (bad) jno lods and sbb mov loopne je repnz (bad) adc repnz rorb and pop cmp or (bad) adc (bad) retq mov or hlt push pop (bad) sbb sub je xchg fidivl out jns shrb cmp mov and fstps mov fsubl rclb (bad) retq rex.RXB enterw adc push mov rex.WR rex.WRX insb (bad) xchg adc addb gs jne push xchg sbb icebp (bad) rex.W fmuls pop movslq out mov (bad) (bad) movsb rex.RB fstps clc stos pushq xor iret retq jl sbb pop loop sbb mov mov insb (bad) rex.WRX pop je sub sbb rex.WXB mov or pushq leaveq (bad) (bad) or adc (bad) xlat pushfq (bad) cld rex.WR cmpsb xchg (bad) (bad) test (bad) xchg repz movslq (bad) adc push adc fwait rex.WXB (bad) mov (bad) jg pop imull imul popfq and or cli sbb (bad) push clc fidivrl cmp mov adc rex.RB data16 addr32 xor and (bad) and (bad) mov lea (bad) cmpsb sub adc outsb pushfq cmpsl xchg mov adc movabs mov movabs or ss jns xchg mov (bad) and rex.RXB lock clc (bad) test cld rex.XB icebp (bad) (bad) lods pop in mov cli (bad) and ja mov push add or pushq mov fidivr lods fildll nop mov (bad) (bad) (bad) push and xlat pop add sbb movb test cmc jne (bad) cs adc movzwl mov cmpsl xor or sbb sbb xor outsl xchg outsb sbb movsl xor cmp sub and movsl or add push mov sbb cwtl cltd sub int3 pop and xchg (bad) iret push adc mov addr32 mov lahf cmp (bad) pop (bad) rex.WRXB pop add sub callq adc adc enterq xchg push and imul mov jno in add xchg fwait cmp movabs (bad) lea mov and xchg xchg insb imul mov cli callq imul mov adc mov jns sbbl mov in outsb adc (bad) rex.WRXB cs and jge adc neg sub ss adc pop or out imul sub adc xlat pop pop pushfq mov adc vpunpckhbw and jo push push in xchg jmp adcl jb xchg movsb pop fstpl cmp leaveq pop mov (bad) (bad) imul mov mov adc clc adc in mov enterq imul xlat enterq mov in int mov jno mov movabs ss (bad) jb sbb adc scas or pop movabs jle callq out lea rex.WB stos push mov leaveq repz lock and iret (bad) repnz rex.WRX (bad) jl jle movabs repnz lock std rex.WR rex.R cs add xor xor mov popfq repnz (bad) mov cmp sbb add push mov (bad) movabs lahf out insb insl sti fisubl adc and adc (bad) push icebp cwtl callq push sbb (bad) lret movabs or pop vpunpckhwd rex.WRB rex out (bad) in sbb jle xchg sbb rorb movslq and and cmp (bad) lahf cli repnz xchg pop cli callq xor xor (bad) fcomps add xchg rex.RB jg sti xchg ja mov rex.X int mov (bad) cmp and push ds mov rex.WRXB es mov or sarb mov fwait sti icebp fdivrs push addr32 rex rex.RB scas (bad) jo mov callq cmp xor sub sbb imul xor pop pushq insb in pcmpgtw cli mov lods outsb rex.WRB pushq adc mov cmp xchg adc jge mov add (bad) in adc (bad) pop rorl sub rex.WB cmp push jae movsl adc rex.WXB divb jle adc stc int icebp (bad) push (bad) pop retq adc nop bswap insb adc movsb lods lock outsl xchg or adc outsl repz mov (bad) jl (bad) (bad) (bad) retq sub fdivrs rcll lods scas fistl cltd fsubr cmp and scas jbe sbb add xor fist (bad) in repz and push shlb sahf rex.WRXB fisubl xor jb and or push pushq mov mov mov int3 mov sahf es movabs (bad) mov xchg jp add callq add mov cld (bad) adc (bad) rorl loope jbe jge adc sbb nop (bad) clc sbb mov movabs fsubl (bad) incb adc rex.RX fdivrl in or sub (bad) test fdivs clc callq xor mov (bad) int3 hlt adc test loope out (bad) (bad) mov jp mov lock cltd (bad) js in cwtl (bad) cmpsb rex.RX jp stos shl movsb push outsb mulb jo fs push adc (bad) mov clc fsubrl (bad) push enterq cmpsl sub cwtl sbb shrb fs jne iret jne (bad) loop scas (bad) adc cli jmp rex.WR (bad) pop adc (bad) in rex.WRXB jmpq and pop mov adc xor (bad) xchg fmull test xchg xchg pop jrcxz frstor xchg jmpw mov rex jl xchg in xchg xchg (bad) rex.B cltd rex.R stos rcll or adc or rex.RXB adc jo (bad) pop adc rex.R cwtl scas mov cmp adc pop jo xchg imul xor (bad) adc (bad) cmc jp pop popfq test mov adc sub sbb (bad) xchg push jg rex.WR lret xor mov test (bad) iret cli stos loope adc mov mov fidivr rex.WXB xchg and lret (bad) loop add rex.RXB (bad) cs push stos clc rex.WX or push add push pop xor add outsb cmpsl ss (bad) adc movabs mov mov clc push add outsb adc mov sub sub cmpsb rex.WX (bad) ja rex.WXB (bad) (bad) adc out xchg insb xor (bad) lods jmp pushfq icebp adc out mov loope pop xchg and adc cli mov mov (bad) je and push jo jl (bad) fcoms (bad) retq pop insl rex.WRXB gs pop push fwait pop js mov mov sbb mov stos add mov imul or xchg sti sbb sub and rex.WRB and je stos movsl push cwtl sub rex.WRXB pop std (bad) xchg cli or cli xchg (bad) (bad) ss cmp adc rex.R (bad) rex lods (bad) rex.WR mov cmp sub movabs stc xchg test callq pop pop lods cmpsb stc adc pop and pushq rorb xor xor jp rex.WRX lods clc fdiv in mov pop mov adc test rol add imul cs nop fwait (bad) rex.RX (bad) es mov movsb movslq push rex addr32 add mov enterq fidiv jmpq rex.WRB paddd adc clc (bad) sbb scas mov pop jge adc sub test adc sbb jg (bad) addl insl mov (bad) adc adc rclb (bad) add sub movabs insl in adc loopne mov add out (bad) in mov fstpt adc (bad) xchg pop loope rex.XB sub adcb cmp pop adc stos movslq adc test enterq xchg fwait rclb xchg or mov rex.RX (bad) rolb (bad) mov add fisub cmpsb out outsb and rex.X rex.WXB xor (bad) (bad) adc sti mov cwtl movsb or jg (bad) rex.R and icebp xchg enterq and sub sarl mov mov scas sub jae cmp and fs outsl push rex.RB adc xor cmpsl adc add (bad) jae pushfq (bad) push push (bad) and sub adc jnp add add enterq or cli sbb scas or lret cmovge mov lock lock xchg and pop adc cmc (bad) (bad) xchg jge (bad) jl in in outsb (bad) stc adc mov (bad) (bad) stc (bad) es in cmc fnstcw out xor (bad) lret fndisi(8087 mov lods jne push js mov jp adc rex.B pop std retq scas rex loope mov int sbb clc callq (bad) fadds (bad) mov mov rex.XB mov rex.WX push rcrb in and lods fldpi sbb (bad) fnstenv mov or xlat mov push mov xchg js (bad) adc (bad) cmp cmpsb rex.RXB mov lret in movabs mov add adc (bad) mov jmp adc fucomp cwtl (bad) rcll fadds data16 rex.WX cs xchg mov ja jge jnp lret xchg mov retq movabs sahf or adc callq jo callq js jge repz pop (bad) add jno push xchg sbb movabs jae cmpsl and mov rex.WR in repnz push and je pop sahf frstor or push xor lock iret xor divl mov xchg jmp scas xlat mov adc (bad) jl hlt insb in add loop adcb adc mov lods (bad) or enterq fldenv rex.WB and sbb enterq adc out rex.R test iret (bad) lods out cs je cmc test add (bad) xor (bad) (bad) leaveq adc imul vmovaps jns jae rcrb xchg fwait pushq xchg (bad) rex.B rex.RB rex.X nop rcr cmp mov mov pop sti loopne and xchg clc sbb lock rex.RB es add retq pop roll jno push cmp callq mov je sbb (bad) xchg divb (bad) retq (bad) jb cld (bad) add (bad) pop jge add out adc bnd mov mov movsl sbb cmp rorl scas rex.WXB rex.WXB movabs rex.WRB nop jg (bad) rclb mov sbb mov sbb (bad) (bad) add adc xchg out int3 cmp in movabs test rcrb in and rex.RB (bad) mov mov push push sbb in rex and std or callq (bad) cli or js out (bad) pop cmpsl nop jb and (bad) test out mov cli sub xchg mov mov add gs retq push cmp xor cli pop (bad) retq mov test or mov retq lods push adc sbb xchg sbb jg sub lret pop rex.WR and mov xor clc jns sahf gs or int3 xchg fdivs sub scas movabs ja push cmp stos outsb cmpsl (bad) mov xchg stc (bad) rolb rex.B in xor (bad) adc cmpsb xchg clc mov rex.RB loop push ficom adc fcomip loope sbb xchg stos repz test jmpq lods (bad) (bad) xor add outsl movslq (bad) movabs nop sbb (bad) cmp in popq psadbw addr32 (bad) fs negl jmpq (bad) fwait cmp cwtl sbb fisttpl add adc cmpsb adc mov rclb mov (bad) adc jrcxz mov sbb xchg jbe pushq pop sahf mov addb xchg sub mov (bad) mov ja mov in (bad) rex.B lret fsubl adc adc sub rex.WRXB rex.W adc adc retq adc xchg adc sbb lahf cmp adc loop js test (bad) adc jl lea jmpq clc andl fstps cmpsb cli (bad) mov or mov jno mov movsl (bad) add in (bad) cmpb int3 movl out adc (bad) (bad) (bad) rex jb rex.WX scas xchg retq scas fisubl and icebp sub cs jmp jno cltd lock mulb (bad) and cmp cmpb test (bad) xchg data16 js scas mov test ds mov lock (bad) or cmp imul fmulp adc (bad) mov sub rex.XB popfq outsl repz mov out (bad) sub es sbb add jge movsb cmp mov (bad) es jno (bad) sbb shld adc (bad) jb notb movabs cs imul xchg test cmp retq fnop es and enterq mov pop and jmp and (bad) in mov (bad) xchg push xchg out mov movsb (bad) data16 subb adc int3 xor mov fwait add adc (bad) popfq pop outsb je (bad) mov mov repnz or cmpsb (bad) jmp (bad) fisubr (bad) stos in push xchg enterq in (bad) (bad) sub mov (bad) int3 (bad) loope lret sbb cltd or cmp (bad) cli sbb rclb adc pop lahf movslq rex.RX add outsb (bad) adc xor retq in pop adc adc fwait mov rex.WRX retq lea fstpl adc pop es (bad) sbb (bad) add jmp xlat or and mov (bad) movabs push (bad) cmp (bad) fwait or mov in rclb and xchg in (bad) ffreep mov je mov push adc not scas adc jbe adc mov data16 fstpt xor and popfq cmp (bad) jl leaveq (bad) jne mov je sub test (bad) (bad) (bad) jnp mov push or rex.RX rex.WB rex.XB test (bad) icebp (bad) (bad) rex.R test cmpl adc rex.WRX fcomp rex.RB rex.WR mov out sub jb xchg xchg int xor add movzbl mov (bad) repnz (bad) xchg retq std lahf test mov or push (bad) (bad) push idivb push xlat and push cmpsb lods lea cli stc and xchg mov sub (bad) (bad) xor adc add (bad) (bad) vpunpcklbw pop adc (bad) hlt cmp ja sub jrcxz add pop adc jae pop fwait sti in jge stos adc incl pop (bad) movsl pop fdivl xchg xor jbe (bad) fucomip jno cs int cmp rex.WRXB sub (bad) sbb mov pop rex.R imul pushq cli add rex.WX fdivs push divb pop mov (bad) pushq lock or rex.WRX rex.RX adc ja push cwtl test mov ja mov push rcll and cmp mov or xchg movabs negb xchg rex.WRX fmull xchg stos pop xchg mov xlat pop rclb xor rex.X repz (bad) (bad) movabs adc fisubrl jl adc xorl (bad) movabs mov xchg add fbld insb int (bad) rex.WB rex.WRXB cwtl mov ds xor xchg rol sbb pop adc jge jae (bad) test rolb (bad) sbb int3 ss outsb add (bad) jb (bad) (bad) (bad) (bad) xchg (bad) and adc ficomp xchg xchg rex.WB callq (bad) cltd sbb add or cmpsb jbe adc and sub ss add or sbb (bad) cmc sbb rex.RB (bad) notl mov (bad) (bad) adc push test (bad) mov (bad) int3 imul xchg (bad) or mov (bad) (bad) jge jmp (bad) mov shrl (bad) loopne rex.WX es js mov lret mov jg mov stc lods (bad) and cld or rex.WX sbb (bad) push (bad) (bad) sahf mov in and mov neg lods mov add std mov xor mov sub fs cmp mov xchg mov jnp (bad) stc (bad) cld incl or sub sub adc mov lret callq cmpsl imul (bad) lret and repnz pop (bad) rcrb jmpq adc jnp (bad) movslq push popfq movabs pop mov ss sbb (bad) (bad) in rex.XB rex.WX (bad) add cmp fcomps sub or pushq loope mov (bad) xchg adc or (bad) jg (bad) out (bad) std data16 (bad) push rex.RXB (bad) jle cmp or adc pop or scas mov xor adc movabs nop (bad) jbe or jne pop enterq or in xor mov lret loope (bad) (bad) (bad) jae (bad) out mov rex.RX jp xor jo test rex.RXB or (bad) cmp add push retq maskmovq sbb (bad) jo lods mov mov mov jb,pn (bad) pop jmpq gs (bad) (bad) (bad) and loop xor cmp or sub repnz push in cmp rcll sbb push xchg je rex.B cmp lods cwtl push push mov jp rex.X (bad) ss fcompl movabs (bad) cmp roll orl (bad) mov (bad) mov jp xchg (bad) mov xchg fwait (bad) jnp cwtl (bad) push mov ja jns (bad) sahf (bad) addr32 sbb popfq imul mov adc jl adc (bad) pop pop retq or pop icebp (bad) lretw adc out movsl insb cs xchg ja adc (bad) adcb rex.RXB jmp out cltd lea xchg push stc adc mov jg cmp sbb (bad) (bad) jbe add mov (bad) mov or pop es cmp mov movslq fs movabs add callq xchg mov pop insl clc cmp push mov mov sti cmp (bad) icebp out add mov jmpq rex.RB sbb fs push xlat ss vmovmskps push cmp adc lods out xchg adc mov enterq insl adc loop and adc leaveq (bad) lods callq xchg or lcall (bad) sub push lea fadds outsl mov out sub movabs callq or out rex.B mov callw in in or jge cli xchg xor push loopne mov xor rex.RB mov leaveq mov mov push xchg jnp vpmovmskb xchg push xorl (bad) cmpsl enterq out mov sub and ja cli lret jmp jb std pop roll xor sbb psadbw rex.RB add pop jrcxz mov (bad) jno stos fwait (bad) leaveq pop cmc mov test xchg hlt cltd (bad) mov loope sahf iret out (bad) push addl adc popq mov (bad) rex.XB mov mov movabs mov push callq fnstenv and movabs sarl (bad) mov negl or adc callq retq jmp int movabs fmull sbb imul push (bad) cld loop pmulhuw (bad) mov gs xchg (bad) xchg js rex.WRX stc out lock or xor xchg shll jno ss jns (bad) pop (bad) cwtl sbb cmp in loope (bad) cmp test (bad) lret adc rex.RXB rex.RX sbbl xor (bad) movslq adc lahf jl lock sub sub adc ja (bad) movslq (bad) movsb (bad) mov pop cmp push adc rex.WRX adc leaveq sbb add mov (bad) fbstp orl jg test or xchg mov rcl callq loop rex.RB notb add adc xchg push cmpsl push scas mov (bad) xor (bad) (bad) cmova in repz and decb (bad) rex.X jl enterq mov leaveq mov enterq imul or add mov jmpq add jae movsb xchg (bad) jne (bad) mov mov push jmpq add cmp (bad) and or cmpsb or adc and movabs sti lea mov popfq (bad) stc rsm mov (bad) pop (bad) mov adc mov xchg rex.WRB rex.WR movabs jb adcl sbb xor movabs repnz mov (bad) rex.WRB rex.RB xor iret cmp (bad) xchg add out scas (bad) out mov (bad) push lret adc jb (bad) notb mov imul xor xor fcoml cmp jbe mov int (bad) (bad) movsl movsb outsl in adc fcomps loopne retq xchg (bad) (bad) or sub (bad) icebp xchg pop stos cmpsl retq rcrb pop xor adc cmpsl jp (bad) rex.RXB lock sahf and xchg or repz adc adc fnstsw mov ja push cmp mov sbb movl push adc movabs rex.WR decb or rex.WRXB movabs xchg adc push or fnstcw out xor push retq (bad) adc repz cld push and (bad) (bad) mov cmpsb and jno mov (bad) lock (bad) retq rex.RB sub xor jnp and and pop push test cmp fs add cmp pop movabs pop and test sbb or (bad) data16 adc push cmp adc jo negb xchg js retq adc push add fs retq js sti test sarl pushq mov in xchg (bad) (bad) rex.WB and (bad) (bad) (bad) outsl jl movabs (bad) (bad) xlat rclb sbb test mov popfq jne cmpsb callq xlat fiaddl movsb cs xchg jl out scas out nop mov push mov (bad) or jnp (bad) jne sbb mov xchg rex.RXB rex.R callq rolb and adc jnp (bad) hlt (bad) pop in push fstpl (bad) lahf mov mov rex.RXB and mov rex.R clc or pushfq and cltd mov std jmp pop pushfq loopne xchg lahf fist cmp push mov test fs and add sub xor add or rex.WB (bad) mov pushfq in movsl adc pop xchg movabs rex.WXB retq sbb lahf and pop jmp icebp xor (bad) adc adc (bad) jae jns (bad) cli push xor mov notl sbb jnp lock in ja (bad) xchg push sub loope mov cmp mov sti stos rex.B push xchg (bad) (bad) adc rcll fidivrl orb push jno sbb cmp ds (bad) sahf out rex.WRB rex.WRX adc idiv jbe (bad) sub cmp lret cmp enterq fisubl xlat mov outsl xchg (bad) ja ds cli mov add add stos subl (bad) (bad) adc jrcxz movslq outsl roll jge cwtl rex rex.RXB (bad) jo fcoms cwtl (bad) (bad) sbb movsl int3 sub xchg add pop cmp lock je rex.WX enterq sub xor cmpsb push (bad) callq nop movabs insb lods (bad) mov cmp cltd subb mov out rex.RXB pop jrcxz (bad) sbb in decl int3 fsubrs mov xchg xchg sarl lods sbb (bad) adc mov movabs pop testl clc (bad) cmpsb mov sbb and xor mov shll or mov out iret test sbb retq adc xchg nop xor push mov jle jle sbb rex jne fnstsw loope in mulb js xchg test (bad) fadds mov and rex.WRXB ja sub enterq in insl mov mov xchg (bad) (bad) insl sub adc xlat fcmovnu sub (bad) cld in notl cmp (bad) push js jae jle shrl cmpsb xchg (bad) jle jno xchg adc movabs mov (bad) je sarl jge mov sbb ja lret movabs adc insl xchg (bad) add fdiv (bad) in and (bad) test fs int jg test jp and add and push ja mov jmp sub sbb cmp callq lahf (bad) fstpt in (bad) (bad) (bad) add or jno xor adc mov xor (bad) leaveq rcl pop pop xchg pmulhuw (bad) xor (bad) rorb or movabs js jnp adc add pop data16 lahf xor sub or leaveq push repnz pop cld sbb sub icebp bswap std (bad) mov mov imul cmp int (bad) shll (bad) push sbb cmpsb and nop fcomi enterq add and push pop (bad) gs fadds rex.WRXB jnp xor insb out adc adc adc pop and xchg adc jae xor retq add lods adc in test pushfq scas fadd or rorl leaveq cltd adc jrcxz test sub cmp xor pop out add scas adc outsl (bad) ss movabs movabs (bad) xor mov gs or cli flds enterq pop mov outsl idivb xchg stos cmp rex.WR fcomps and cmp clc sub (bad) insb cmovs jne or icebp rcll adc shlb jge adc sbb fldt incl (bad) sub cmp rex.XB (bad) or adc jns xchg enterq rex.RX leaveq adc (bad) outsb rex.R (bad) cld cwtl movsl stc mov enterq lret jmp ficomp fisttpll pop movabs mov sbb or outsb rex.WRXB push (bad) stc adc out rex.WR rex.WRX xchg (bad) (bad) xchg adc xor rcrb imul pop cmp enterq sub adc ja idivl scas sub je pop (bad) xchg (bad) or fwait (bad) lods rex.WR rcll in adc mov and pop jo xchg fs sbb adc rex.RXB (bad) mov cltd rex.WRXB adc push fcomps sub cld fisttpl (bad) mov js pushq mov adc in xchg push adc pop (bad) outsl push (bad) (bad) clc (bad) std enterq (bad) in movsb mov int or cmc adc retq sbb mov xlat jg pop lret mov stos jbe mov push cmp idivb gs rex.R rex.WRB pop mov scas jns mov sub movabs or callq (bad) adc xor stos imul (bad) xchg mov mov retq (bad) and jo (bad) jl je cmp (bad) or sub jle mov push (bad) lods shr data16 pop mov xchg mov (bad) pop es lock (bad) sbb pop (bad) sub test add push jb adc mov xchg lock adc fwait pop and xchg movsb (bad) (bad) add (bad) rex.WRB adc cli mov mov adc gs mov xchg xor push imul lea mov jg adc rex.B rex.W (bad) xor imul jmpq fwait adc jmp shl fwait sub movabs sub insl sbb rol xchg sbb add (bad) pop in (bad) sbb pop movsl mov (bad) and rex.WR insl xor scas rex.XB addr32 rex.RB sbb imul add (bad) jne std ja pushq scas mov xchg (bad) repnz rex.WRXB loope xor adc sbb lret mov xchg rex.XB (bad) jmpq (bad) xchg (bad) andb jp mov mov sub repnz add (bad) in cwtl xchg push mov xor retq movsl sub cmp mov rex.R jmp adc and mov jp (bad) xor mov and pop loopne mov pop (bad) cmp callq xor mov cs jns xchg sbb shlb rclb cmp or clc xchg int3 xlat sub out xchg test insb lock mov mov (bad) lahf insl outsl adc jo xor mov mov xchg stc cld fisubr rex.WX rex.RXB adc sub mov repz jne mov push insb xchg loope (bad) callq (bad) out rex.WRB mov or rcll jae (bad) fs fstl sbb rex.W outsl pop loop sub push push pop adc xchg xor loopne enterq jbe adc sti sbb jmpq (bad) mov (bad) test and (bad) pop sub xlat movabs mov or add add (bad) in xorb jge jne xchg (bad) addr32 cwtl rex.X xorb idivl nop int3 rex.X sub cltd jmpq adc stos rex.R hlt (bad) jmp ja iret es cltd jmp fisttpll sbb jbe jno jo retq and pop nop jno mov notb repz jns pop test (bad) xor in pop sbb stos (bad) mov add cwtl in outsl jg jl (bad) hlt adc push adc adc fwait sub rex.WRXB xchg rex.WX adc (bad) or (bad) jmpq push jp sbb movabs or test or cli pop adc fsubr sub rex.W addr32 (bad) cmp adc subl rex.RX vunpckhps scas in insb cs mov imul jmpq sbb jno or xor fs enterq mov ficomp je lock addb xchg rex.WX loopne movsb pushq or rcll pop pop insl or rex.RX retq xchg and xlat adc (bad) rex.XB addb ss jge clc cwtl adc movabs shll (bad) outsb lea xor sbb movabs sub stos in adc in sub loope (bad) or xchg iret (bad) or and (bad) loopne xor and push scas (bad) rcll cmc hlt jb mov adc and cmp mov jmpq pushq (bad) imul xchg (bad) (bad) adc out (bad) (bad) mov adc lret mov mov xchg rex.WRB dec jno hlt cmpl xor rex.RXB rex.RX fucomip fdivr insl and sbb push (bad) sbb mov rcrl mull enterq (bad) sub mov sbb rex.RX (bad) scas (bad) retq stos insl cmpsb sub push rex.RB fs cli mov push in (bad) or mov outsb out rcll (bad) (bad) sti jnp or sub repnz mov (bad) xor sub xor jns add adc mov sub (bad) lods test rex.WRB sub rcrb cmp xor mov fcompl rex.WR loope mov adc insl xchg negl callq rex.B frstor (bad) adcb test cmp (bad) mov int push popfq adc out outsb cs (bad) mov nop (bad) rex.XB (bad) (bad) not jnp push adc jno pop rex.X sbb mov mov sbb movabs xor (bad) sahf mov jbe sub sbb adc sub xchg retq (bad) cli js or repnz (bad) xor nop pushfq gs cmp enterq rex.WRB xor and (bad) and in lods mov callq xchg jne (bad) outsb sub insb movabs sbb mov push xchg iret (bad) cltd mov xor mov in fcomps cmpsb adc jne sub sbb (bad) push jno xchg jle or xor cld or mov xchg rcrb mov xchg sub (bad) cmp (bad) fstpt lret mov xchg push callq or (bad) (bad) sub fdivrl xchg jae rex.RXB fstpl push int3 movslq cs shll lahf sahf xor jmp gs adc sbb icebp adc or cld pop fcompl mov jl fdivrl push cmp cmpsl imul rex.RX loopne sub pop jg rex.R push xor (bad) pop or pop rex.RB lret and (bad) (bad) xchg xor pop pushfq rex xchg mulb jp scas push mov and mov divb movabs jne sub movabs sub xchg sbb imul rex.W xchg xchg xchg sbb mov xor (bad) rex.X mov mov adc add sti fnop fs rcll (bad) xchg ja cmp sub jg rex.WRB fdivs (bad) out enterq xlat sub (bad) rex.RB xchg ror jns imul pushfq fs (bad) in lods adc mov rex int3 (bad) add popfq cmp mov (bad) sbb scas xchg icebp (bad) sub addr32 (bad) and data16 sub sbb sub or push sahf adc test rex.WRX xchg sub and adc rex.RXB rcr mov sbb or add (bad) pop push adc or xor adc mov (bad) (bad) ds sbb lock fwait jo adc jg adc out icebp repz add clc imul outsb retq pop movabs test or ss in rclb (bad) (bad) (bad) adc fucomi fild add adc rex.WRXB adc (bad) lret gs adc (bad) imul adc lods add (bad) adc xchg (bad) (bad) int3 pushq push (bad) std test test shrb pop (bad) cmp mov cmp xchg jmp adc (bad) cmp enterq leaveq or add pop xor (bad) jg and jne lock (bad) jg jns lock test (bad) (bad) cmp lea outsb fimull lret cs jae fistpll or adc int pop mov in iret (bad) xchg sbb scas movabs push and in and rex.WRX sarb mov (bad) (bad) int3 jno cld sub (bad) and sti add fisttp in lods adc xor adc shll sbbl jp mov sub fwait popfq mov repnz (bad) jbe sti adc jae (bad) imul ja repz (bad) fwait xor xor and repnz rex xchg cmpb (bad) mov add lret cwtl lods adc (bad) divb and retq (bad) stos or push xchg (bad) imull push jnp or sub insl add (bad) sbb sti adc rolb add add (bad) fdiv mov rex.WRB pushq (bad) mov shrl sbb jmpq out jns lret (bad) jmpq rex.XB (bad) int3 mov jnp cmp sbb out adc xor mov rex.WRB mov cmp fisttpl jno rex.WB cmpsl cmp and adc sub imul (bad) movabs retq and mov cmp mov loop and lock pushq ror mov (bad) ud2 (bad) jns mov jno or iret cs (bad) out pop or mov js roll xchg or sarl ffree sahf mov and pop cmp gs (bad) movabs movsb or pop cmp jae (bad) lock int3 roll in es pop cmp lods mov xor cli test xor leaveq loopne outsb rex.WB xchg and nop out adc pop mov in push js clc lret in pop xchg mov mov jne stc cmp mov push fs sub lret and je (bad) add rex.X and addr32 jg fisubr jne adc cmpsb (bad) incl pushfq mov (bad) pcmpgtb ja lahf not imul pop mov enterq ja jrcxz fcmovnbe (bad) rex.WRXB mov scas adc push cli and lret cmc xchg add scas (bad) (bad) ficomp jp (bad) mov sbbl sub jbe cs (bad) mov stc push (bad) rex.B rex.W stos fistpl outsb xor rex.WRXB nop (bad) enterq and cmp xchg push mov mov addr32 push jne jl push popfq xor xor xchg jo xchg negb cli mov (bad) (bad) adc (bad) xor js rex.WRX scas push stc or adc mov adc xor clc mov add xor jmpq ss enterq cmc lods fwait lahf jge mov rex.B repnz rex.WX fmull rcrl (bad) (bad) in jns (bad) rorb (bad) test callq sarl add loop pushfq mov icebp xor and xor mov and jno test mov imul push scas mov out (bad) and mov je lods mov clc mov outsl callq movabs pop rex.WXB jg (bad) (bad) (bad) cmp mov pop mov mov rex.WB movabs sub push jge (bad) (bad) cltd test in (bad) addr32 andl pop rex.RB xchg cs mov jb xor shll cmpsl mov insl (bad) mov (bad) adc leaveq sub jne enterq mov stos rex.WR rex.WRB sbb adc xchg mov lock (bad) ss cmp xor adc shr cmpsb mov ffree out fcomps mov adcb stos adc mov sub and and sbb imull xchg repnz mov add out xchg cmc shll es mov xor clc callq (bad) (bad) xchg jno nop fdivrl rex.R lea ffree or (bad) lods add cld vrsqrtss cmp movabs movsb neg (bad) jge add (bad) sub fyl2x retq int (bad) rex.RX xor (bad) (bad) repz or jo or xchg mov stos sub fucom fdivr mov (bad) mov insl or xor (bad) jns (bad) mov add rex.WRXB mov (bad) jmp int3 (bad) mov loopne mov movabs adc pop sbb (bad) stc add and sub sub adc add pop add and mov push mov and xchg fs fidivr rex.WB adc je (bad) mov mov mov movabs sbb fiaddl rex.RX lea sti (bad) jb (bad) (bad) movabs pop sub and rex.WRX rex.WB je rcrb cmc mov rex.WR adc rex.XB (bad) pop cs out retq jnp mov cld ds cs stos out jbe pushfq xchg adc jno and fild (bad) shl add rex.WRXB ss push cmc movsl pop (bad) sub sbb in fwait xor (bad) lods and or (bad) or rex.RB lea and mov repz mov stos (bad) sbbb jle ds sub sbb (bad) xor push jnp fmulp (bad) ja mov add mov cmp mov cltd ss xor adc cmp xchg mov (bad) es rex.RX rex.XB insl mov adcl (bad) (bad) mov cmc jne cwtl gs jmp cld jle idivb push jge callq sub (bad) gs loop pushq rex.WRXB adc xor rclq stos lret sub callq scas sahf mov popfq retq (bad) (bad) jmp mov inc andl out sbb (bad) push in (bad) mov fs mov xchg xchg (bad) mov mov adc callq (bad) in cmp fcompl jae rex.WRB jne jg (bad) cmp cmp shrb sahf xor callq std and add repnz mov push and stos xor ror xchg sbb mov and xchg scas (bad) sarl push (bad) or int3 callq ja cmp js enterq (bad) (bad) adc rex.RXB mov cmp cmp xlat int3 sti (bad) xor xchg pushq sti (bad) cmpsb std int xor xorl frstor cltd or (bad) (bad) adc fwait jne loop add cmpsb jbe (bad) repnz clc rcrb sarl repz rcl pop or sub es mov scas xchg jrcxz add lret fs callq fidiv adc (bad) sub jle cwtl sti jg fdivl cs movsb or xor rcll es sti (bad) jns,pt adc callq loopne mov scas cmp (bad) (bad) stos rex.WR movsl adc imul xor adc (bad) ja pushq (bad) std test (bad) cwtl insl adc add test (bad) loope push (bad) mov je (bad) sub pushq mov jrcxz cmp scas fwait outsl loopne rex.WXB loope enterq (bad) rex.WRB sbbb in in pushq enterq sbb (bad) clc jbe (bad) rex.R add xchg add imul add mov add sub jno or (bad) cmpb sub stc icebp clc fmuls sub rex.WRB movabs enterq rex.RXB jae adc or test mov jle lods sbb xchg mov (bad) add js ds insl (bad) lods fmulp cmp imul scas callq lret xor jae rex.RXB rex.WB pop push movslq jp int3 (bad) xchg rex.WB insl adc rex.XB cmp sahf mov cmpsl (bad) xchg mov (bad) in retq incl xchg in (bad) std (bad) test rol sub jmpq xor js cs test (bad) pop sbb sub cmp pop adc mov rclb pop or adc js or gs es int3 iret mov add movslq or (bad) lret pop and adc ja out adc stos mov ja movabs (bad) mov retq jno pop insb sbb lret scas movabs (bad) repnz or sete sbb movswl xor enterq imulb ds cmpsb callq (bad) (bad) mov (bad) mov and (bad) adc lahf adc adc jg add vpsllw rex.B pushq sbb cld and stos (bad) insl enterq insb and rclb rex.WRX (bad) (bad) jae (bad) jg jl repnz cmp or sahf frstor imul (bad) rex.R movabs mov jne jmp mov jrcxz mov mov rex.RB and mov cmp pop (bad) and (bad) cmp retq or int hlt or iret add mov cmp add outsb jmpq xchg add ss cs lea xlat repz (bad) mov mov mov mov push (bad) enterq mov (bad) test push sbb cmp (bad) sbb std xchg xchg sti rex.RB and mov fcoml rex.W (bad) imul jne test and out (bad) cmp lods cwtl rex.XB iret cmp (bad) xor (bad) fs (bad) (bad) xlat sbb jg xchg push in mov jno push (bad) and fildl cmp pop mov sub adc pop xchg pop movsl repnz iret pop (bad) cltd out cs (bad) rex.RXB scas gs or lahf retq stos xor shll sti push or xchg rex.WB out retq popq (bad) cmpsl movabs movsl jmpq adc xor push (bad) lock pop cli enterq loop lock mov roll pop push mov add jbe (bad) cli sbb adc adcl push movabs rex.X adc pop mov mov movb jmpq movsb stos or fwait leaveq roll rex.R jle add sbb jmp in pop pop (bad) xchg or adc rex.WRB add (bad) (bad) rex.WX fs data16 cmp pop cmpsl insb (bad) pushq rex.RB out rex.B and adc fcoml ja jbe imul sbb cmp pop ds xchg (bad) rex.RX (bad) ss xchg outsl in xchg xchg cld or lahf cmp mov mov (bad) cmp gs rol xchg retq add lea sbb cmp loope mov movabs sbb (bad) (bad) cmc and and pushq rex.WRXB rex.WRB scas ljmp (bad) sahf xlat mov cmp pop or (bad) mov cmp rclb mov adc rex.B out repnz sub loopne jbe lret pop lret adc jne jmp xchg push xchg sarl xor clc mov (bad) rex.RX push rex.W fnop loop fwait rex.WRX adc push jbe mul mov sti (bad) rex.RB js rex.RXB lahf mov or je cmp add push jge mov (bad) rex.X sarb vmwrite adc and lods jbe add (bad) loope outsl pop mull bnd enterq rex.WRX lods mov fwait mov or mov mulb and (bad) (bad) adc (bad) ds xchg push xchg xchg rex.WR (bad) repz (bad) out popfq mov callq out scas out mov cmp ss out cmpsb lock out cltd movslq sub scas (bad) (bad) vpsubsb (bad) jbe (bad) mov rex.RB sub test adc movsb pushq (bad) fcoml iret insl pop imul or imul rex.RX push or pop jge sbb adc imul and pushq (bad) insb adc hlt stos imul (bad) rcrb add sub in and sbb mov jns mov test add scas xor (bad) pop adc (bad) jae (bad) pop push add xchg fs jo sub lcall movsl pop adc xor cld lods xor push sub movsb (bad) sbb cltd sti adc andq cmpsb sub or adc je js or (bad) mov nop stos jnp xor (bad) and mov adc xor (bad) mov pop (bad) sbb (bad) (bad) and gs mov lock mov andb xor test (bad) fistl iret and xchg mov adc nop mov (bad) push lahf fs outsl adc icebp jl jge fsubl cmp and pop fs (bad) rclb mov insb rcrl out jrcxz shrb movabs and repz subl mov adc retq je push callq or adc (bad) xchg mov and (bad) xchg or sbb scas cltd out repz (bad) loopne mov rcrl adc cmp (bad) cmpsl sbb mov nop decb outsl rex.WRB add in sbb sub jge add xchg xchg movslq mov data16 addr32 ss sub (bad) xchg or jbe adcl rex.W rex.WXB jne (bad) adc (bad) jnp mov lret xor addr32 mov sti rex.WRB pop (bad) clc scas push adc (bad) push mov movsl mov adc rex rex.B lock (bad) (bad) rex.RXB scas and iret and gs out (bad) adc std and sbb (bad) (bad) mov mov pop push imull adc xchg jmpq enterq mov (bad) (bad) ss test fnstenv iret std pop mov sub mov addr32 scas adc rclb cmp rclb js adc add xchg (bad) rex.WRXB ss addb (bad) std and stos lret rex.WRX adc (bad) xor repz mov add imul retq rex.WXB loopne mov (bad) sbb or xchg (bad) sub pushq pop xor adc lret pop cmpsb jge mulb stos xor add sbb xor stc xchg (bad) cmpsb shrl (bad) je (bad) mov rorl xchg rex.XB repnz icebp sub add test (bad) rcll (bad) int3 jmp scas insl add ror lock cli pushq movsb mov xchg orl push adc jae jns adc adc and push rolb lock adc sbb rex.B (bad) nop out mov testl movsb callq lods add adc (bad) (bad) (bad) (bad) cmp pop clc rex.X int rex hlt sbb adc jbe imulb mov and out sarl jl (bad) jne add cmc mov fisubl in (bad) push (bad) pop fdivrl fxam int int3 adc jno rex.WRB pushfw and mov mov (bad) movabs sahf jg mov (bad) xlat retq jrcxz cmp (bad) mov sub pop test adc rex.RX cmpsb imul (bad) rex add adc adc (bad) xlat stc and xchg fnop (bad) std stc (bad) movabs mov retq add cltd mov (bad) cmpsl (bad) adc sbb movsl mov lock mov add callq ja mov sbb stc lock adc (bad) jne or (bad) jle xor and int3 push rex.WRB push mov mov lret rex.RX enterq stos cld lock rex.XB callq pushfq cli movabs stc cs sub mov (bad) (bad) mov push jl repz sahf imul movabs (bad) (bad) rex.RX movabs (bad) mov fxtract (bad) (bad) in or mov popfq rex.WRXB xor shr sti sub orl bnd dec push retq test out rcrl pop mov push cwtl mov mov (bad) movabs retq negb adc cmp testb push test iret imul test in push js int stc (bad) cmp sbb lea pushfq and cmp sub push movabs mov adc adc (bad) stos callq test ffreep movabs mov lock retq movslq xchg mov jge rex.WRB sbb rex.RXB rex.WR or cmp retq int3 clc and jns lods jmp mov or mov xor mov (bad) (bad) mul addr32 (bad) clc push and (bad) fidiv leaveq repnz xor add (bad) (bad) fwait xchg add jrcxz add lret (bad) cmp data16 scas and fcomip rex.RB xor adc sbb test rolb fiaddl lahf data16 (bad) lods (bad) repz mov popfq mov fnstenv jb jrcxz rex.RX callq sarb mov push push rex.WRX jae lahf jno mov xor popfq push out rex.XB stc mov sbb mov (bad) push jne mov pop sub mov addr32 xor push jnp movabs bswap adc jno mov (bad) std or ds not sub push sub or xor cmc lret sub fadds gs (bad) pop repnz mov rex.WXB mov callq mov ds in sub retq fisttp mulb out mov lods add xchg int cmp or sbb in test jo lock rex.WRB out ss xchg mov cmp (bad) (bad) (bad) sbb cmp sub push and (bad) push shr fdivs push (bad) jno rex.WR shrl mov xor lret pop out push mov and movabs scas (bad) jmpq jge mov push int3 add out mov fdivrs retq xchg sti retq imul int3 rex.WRX movabs (bad) decb mov cmc push mov xor out xchg (bad) and push lea rex.WXB pop rolb jrcxz cmp add jmpq cs loop rex.R fdivrl sub movabs (bad) rex.RXB (bad) repz callq sbbl or movslq (bad) insl je pop add mov push scas sarl (bad) xor (bad) (bad) mov adc mov cwtl xor adc lods jne pop cmp push sbbl retq mov test sti jl addr32 xlat adc and adc ficompl (bad) sti fldln2 (bad) movabs (bad) cwtl andl (bad) vcvtsi2ssl out (bad) (bad) rex.WXB movabs xchg push (bad) movsb test or mov mov mov ficoml mov (bad) add cs mov (bad) fadds (bad) jae cmp push and popfq out mov in rex.R fwait scas lret std pop xchg (bad) andb sub int3 fidiv cmp mov push add addr32 mov (bad) jno sar rex.X loop rex.WRX in jns (bad) adc xchg xchg insb gs (bad) out jl insb ds mov clc rex.WXB (bad) (bad) jbe ja cld mov adc (bad) add hlt shrl out callq callq add adc or (bad) pop scas rcll sub stos ficoml (bad) cmc fwait jbe ficom outsb or (bad) xchg add pop movabs repnz (bad) (bad) jae repz mov out testb out insb push rex.WX mov out pop mov rcrb fcmovne mov rcrl rex.WRB pop loop push adc (bad) insb or js stos (bad) mov xchg jmp imul (bad) iret cs xor rex.R repnz shl cmp insb xchg (bad) (bad) and testb or (bad) out sub sahf push in test lods imul (bad) js fwait (bad) push add xchg adc (bad) fisubrl xchg adc (bad) lea loop mov xchg jno rex.XB (bad) mov movsl sbb rex.WB rex.WRB adc pop sub rex.W jmp cmp fmull xor pop repz lahf int push ja neg fchs test out adc cmpsl paddusw pop rex.WRX fbstp jp test adc add jge int mov mov cli callq imul fmull rcll mov mov and callq xlat mov adc mov loope adc std adc fidivr rcrb (bad) jb es ja sbb rcll xor (bad) mov fcoml add lock (bad) cld fidivr (bad) adc mov jae sti adc lret ja mov sub lea (bad) vmwrite cmp sti fwait ds jne xor mov adc (bad) push cmp adc or int3 mov shll xor add test (bad) lods and (bad) rclb int3 (bad) pop push jrcxz fsts fs rex.XB (bad) js sbb jle sbb test (bad) xlat nop cmc (bad) add insl jge push nop pop ja sbb jrcxz pop xchg fidivrl imul mov and cmp insl and add xor mov (bad) push test ds jp popfq (bad) mov fidivrl mov push mov rcl xor cmp int3 rex.R or (bad) (bad) xlat testb repnz iret pushq rex.WRXB mov sbb (bad) add cmp es (bad) jae jrcxz (bad) (bad) push (bad) adc mov imul pop rex.WRX hlt outsl mov ss imul sbb cmp movsl hlt and cmp mov mov add scas cmpsb (bad) xor (bad) mov negb imul xchg jb add add stos (bad) in jno (bad) mov stos (bad) cwtl adc cli fsubr rcrb cmp jmp jmpq sub mov movabs mov ljmp jns mov stos cwtl jne mov xchg iret jb (bad) adcl in sahf repz js jae sbb movabs mov (bad) mov fisttp outsb (bad) rex.RXB add out rex.X and lahf add outsl or rex.RXB rex.W and or mov or out sub test (bad) xlat sub add cmp xor jmp in jmpq cld movabs mov (bad) cli mov push int scas lods cmc pop retq hlt xor mov out adc (bad) imul cli push (bad) cmp fidivr sub add hlt (bad) (bad) in mov and jge adc adc xor sbb ds xor icebp (bad) adc sbb pop movabs lods repnz movsb (bad) rex.WXB lea or pop xchg popfq (bad) clc out rex.W sbb (bad) imul insl js mov adc xchg (bad) test adc (bad) xor adc pushq or adc addl adcl movabs adc imul lahf rex.WRX (bad) adc (bad) pushfq fcomps or mov push push sarl callq or jns adc adc sbb jge popfq cld xlat push pop repz (bad) ja (bad) xor sarl pop lock (bad) (bad) loope (bad) (bad) movsl sbb xchg jns hlt xchg pop int3 push (bad) movslq rex.WB xchg adc mov fdivl adc push divl add (bad) (bad) int3 outsb fildll out or jge add mov (bad) imul mov (bad) xchg pop repz jg and adc icebp and scas push and rex.WXB out pushq sbb leaveq add sbb lahf rolb mov cmp mov cltd jne mov scas (bad) rex.WR adc cmp add sub rex.RXB (bad) add add jl (bad) add (bad) leaveq cmp stos and jbe sub cmp sahf pushfq jl sbb rex.RX jb xor and pushfq xchg fisttpl adc push movsl push adc cmp pushq clc (bad) mov (bad) mov sub sub push nop rex.XB leaveq adc cmc add sbb fstpl sub idivl mov push test add push ja (bad) movabs rex.WRB shll jne cs mov addr32 add jnp (bad) xor sarl add adc jbe sbb xor (bad) mov imul je cmp pop or (bad) fdivrl add xchg jp mov movsl pushq cwtl enterq jmp mov (bad) push es movabs movsl mov xlat mov test fdivr pop rex.WB rcrb adc (bad) (bad) add cmp rex.X pushq cmp rex.WB lock jbe add fldt mov rex.WXB movabs sub jge int3 (bad) xor and ss rex.R (bad) in cmp movhps (bad) sub cmpb jg mov mov hlt shrl hlt lods test (bad) shr lret ds enterq cltd in jae rex.WRB jg rex.WRB (bad) mov callq mov cwtl insb cmp pushq push jg sbb imul sbb fcomps insb cltd pop adc bsf rex.WRB cmp add out js xlat lahf xor cwtl fisttp xor sub lock insl mov in mov mov (bad) jnp cmp jle cmp sub pop (bad) or xlat cmp sbb push in (bad) (bad) xor out (bad) xchg enterq vcvttsd2si (bad) add sbb adc (bad) jle pop cmc (bad) callq xor pop and insb in jle cmp xchg pop mov xor mov fmuls (bad) pop add scas test movslq mov or mov in iret add fs xchg cmp cmp orb (bad) adc xchg (bad) fs and test shr rex.W sbb test add pop and cmp mov or cli add jbe pop mov (bad) (bad) movabs je or and adc (bad) jle pop (bad) adc sbb jl mov (bad) adc adc rex subl (bad) (bad) (bad) pop rex.WRX movabs lret inc (bad) push push xchg jl (bad) cmc (bad) movsb add (bad) cmp (bad) rex.WR in add fdivl mov jrcxz rclb xor xchg adc jmp popfq xchg (bad) lret mov xor mov lahf jrcxz data16 pop movabs cmp sbb callq adc cld test std popfq sbb xchg jb xor pop je sub movsb add cltd sti (bad) add movabs lea movabs out or popfq xchg sbbl xchg movabs xchg xor (bad) movslq (bad) ds add in mov rex.R stos add icebp leaveq xlat insl ds pop mov sbb sbbl icebp push (bad) sbb pushfq rex.RXB imul add (bad) std rex.WRB (bad) rex.WRB mov repz popfq out xchg callq cmp sub in es movabs out sti callq add (bad) movabs (bad) xchg out jmp mov add rex.X mov icebp rex.WB cli add push ds adc std push sbb addr32 push push cmp sub movabs (bad) out mov fnstcw pushq sub push psubb add pop adc add movsb pushq and rex.RX callq adc (bad) rex.WRX cmp (bad) (bad) cmpsl adc test add fsubl push addl data16 pushfq sub retq (bad) rex (bad) or or (bad) cmp (bad) and pushfq pop add rex.WXB xor push mov fistl xor stos (bad) cmp or push ja pop fbstp mov xchg sub rex.WRXB rclb cltd cwtl loope ficoml popfq (bad) adc ss mov or rex.WRX cmp xor adc adc (bad) rex.WR rex.RXB xor js (bad) mov cmpb and pop rex.WX callq add pop sbb retq adc mov (bad) sub jo lock push cmp pushq adc sarb adc push mov add (bad) insl jne mov xchg in mov jle pushq callq stc popfq sbb mov test and rex.X or in adc fldenv rex.WRXB (bad) mov push rex.WB jl fdivs (bad) retq adc sbb push enterq cmp loopne mov out in fildl push setbe (bad) adc and pop mov (bad) imul mov test add ja sbb lea and rex.WRX movabs int in sub xchg mov lahf in callq xor xchg lock movsb push in jg mov cli adc xor or pop add mov and mov enterq mov xlat lsl cli sbb fmull jmpq xchg in hlt pop mov xchg stc (bad) add enterq jp out icebp enterq cmp mov gs insl mov test jbe ficompl pop (bad) enterq sub cmc adc (bad) xor rex.WRXB rex.X mov add (bad) rex.B pop pop sbb (bad) adc js mov cmp in (bad) out jge scas mov fwait test jnp jmpq rex.WRXB hlt mov ds or (bad) cld shlb data16 je imul rex.XB mull (bad) cmp rex.WRX ss lret xor or (bad) fisubrl fwait (bad) xor (bad) jae xor enterq decl mov je (bad) (bad) and rex.R data16 insl add (bad) push or mov hlt xchg lock sbb or ja fsubr mov rex.WRX lea sub jbe adc add (bad) (bad) mov sbb add add push pushq rex.WXB rex.WX (bad) lods scas xor outsb (bad) adc xlat ds lret pop (bad) retq loopne clc fstpt pushq xchg rex.WB xchg xchg mov std shll (bad) int mov sti mov int out xchg cld (bad) (bad) fldl leaveq lret outsb adc (bad) add and loopne out sbb jne int3 adc mov insl imul add jbe imulb mov rex.RX scas xchg rex.X add cltd mov (bad) je mov (bad) jno xchg mov movsb push jb (bad) jp fcoms loop (bad) mov movsl cmp pminsw (bad) jno sub fwait rcrl (bad) lea (bad) lret popfq or push data16 mov add jo mov adc scas repz int3 mov and rex.RB adc push sbb ss push fadds ja ss adc pop jbe cmp in xchg (bad) add (bad) add jmpq imul mov pop rcll mov lret movabs rcll jnp js movabs stos (bad) callq rex.X mov mov xchg scas add rex.WRX xchg jle int3 callq add imul mov lea add data16 pop iret pop flds or add cmp mov cmp cld xchg pop clc fild xchg out rex mov int3 xchg cmp loop gs pop dec (bad) mov fucomp xchg out (bad) (bad) (bad) movabs cmp insl push jne add ja cmp (bad) addr32 movl fistl pop add js nop mov rex.WXB mov pop (bad) sbb stos cmc rex.WRXB and in out movabs (bad) shll js lods jo test sarl (bad) out rolb test or adc movsb xor mov (bad) in pop addb (bad) add (bad) push fidivl (bad) rex.WRXB cwtl adc rex.WRB callq retq jae rex.RB xchg push rex.WRB cmc xor adc add adc adc fildl rex.W addb in sub rex.XB mov in (bad) (bad) movsb fimull mov adc mov adc jmpq movabs xchg and adc xor pushfq lock cld sahf (bad) or imul adcb clc mov cwtl sarb enterq mov xchg (bad) setne xor test movabs or cwtl lret (bad) rex.WXB sub insl int3 (bad) fs rex.WX and icebp rex.R add mov and sub (bad) jmp jb add fdiv fistpll mov rcr in jno (bad) mov lods imul jno (bad) jb andnps (bad) sub mov mov data16 scas ficoml imul mov mov sbb add lret jle (bad) insb (bad) mov negb adc or xor jl mov sub out rorb movabs xchg ja js jrcxz clc pop mov insb push xchg add leaveq xorl add xor rex.RXB out mov (bad) sahf jns cltd sub and push outsb (bad) xor shrl loop es push fdivr (bad) pop pop or rclb rex.WRB or out faddl cmp mov rex.B (bad) not pop and xlat out (bad) sub icebp stc scas mov movups and xchg cmp xchg callq adc and sub or (bad) fist sub cmove (bad) mov xor and mov mov push adc mov and push jae mov pop add adc push xor rex.WX adc adc (bad) jg test or (bad) pushq (bad) sbb movabs (bad) cmc lock imul sub sub xor out popfq rex.R loop pushq sub or or (bad) adcl mov rex.RB and cmp fcomi sub pop rex.X jl jbe jl (bad) test (bad) fmull (bad) sbb add mov rex.R jbe (bad) hlt push pushq (bad) notb and fstl cwtl pop sbb adc (bad) enterq in rex.WXB xchg mov rex.RB (bad) cmp rcl mov popq jmp callq jp negb cmp and rex rex.RX mov mov adc js pop add mov gs sbb or nop mov push adc xchg rex.WX stos sbb popfq pop fcoml mov (bad) sub (bad) rex.WRXB lret test shlb adc in (bad) movsl rex.WXB cmp (bad) callq int3 cwtl push cmp (bad) adc rex.XB add (bad) or xor push xchg fistl jno adc push push adc (bad) xor (bad) in push xor int3 (bad) push or andb sbb (bad) outsl and xchg jo lahf sub push lahf repnz mov callq loop xchg fstpl mov gs mov mov retq xor loop cltd ror test ds movsl pop xchg xchg pop or jbe rex.RX movslq or mov stos mov jmpq ja and jrcxz (bad) push sahf pop cmp mov (bad) movsb jrcxz adc sub lret insl rex.WX ds lock rex.RX jmp (bad) xchg jns imul movabs rcr or xchg rex.WX adc and int sub fsubrl vrsqrtps (bad) adc mov mov adc rex.XB jnp (bad) scas in mov adc pop mov and push (bad) (bad) sbb adc pushfq (bad) pop and insl or movabs (bad) pop ds lods rex.WRXB int3 fisubrl xchg adc shlb jl push and (bad) (bad) add sbb out pushq or xor or fucomip je (bad) push sti or add pop add pushq push cs sbb sahf rex.XB (bad) lods pop clc (bad) (bad) jmp mov sbb cmp rex.W movabs test enterq jae fild cmp adc leaveq repnz (bad) out mov (bad) nop xor sbb push mov (bad) int3 sub ficompl movabs (bad) sub jno rex.XB data16 popfq callq fist rex.R ss pop (bad) mov xor jno jne xor std rex.W push push xchg add mov leaveq jmpq (bad) cwtl adc outsb sub lock adc addl fcoml gs loope xor gs addr32 in adc push in rex.WRB mov jge repz pop leaveq std movsb incl cltd enterq mov jae cli xor imul sbb iret (bad) pushq mov mov adc and sub rex.WRXB push stos test movabs or mov add fldt xchg add or retq rex add cmp pop sbb add callq insw (bad) xchg (bad) fisub scas js (bad) sbb rex.RB movabs or cs movslq lods rex.WRB lret or ficoml movabs sub (bad) jg adc cmp adcl testb jge and mov (bad) sbb test mov addl pop jne push cmc or stos xchg ds in jo mov (bad) (bad) xchg (bad) (bad) test xchg retq shrl stos mov out movsl and (bad) pop rcr (bad) movabs cld cmp (bad) outsb jo mov and pop retq mov or (bad) in mulb jle (bad) add mov (bad) cmpsl in cmp (bad) scas rex.WB test adc adc subb (bad) pop mov and cmp jnp icebp rex.WR adc mov jbe fistpll jg callq mov xchg in sub xor scas jne (bad) pop fwait (bad) sub (bad) in cmp pop add adc xor mov push ss mov (bad) pop add movabs iret xchg sbb fcmove movslq mov retq lock (bad) sub mov int3 jb sub cmpsl jbe pop pop mov adc incb and retq adc ss mov add cmp (bad) cltd mov test rex.WXB jg mov in sbb push in xchg lock rex.WR cs mov adc loope adc push and fsts std jg rex.WXB cltd pushq pop fdivrl imul out callq pushfq addl cwtl loope rex.WXB jmpq cs rex.RXB push xor pop or mov or jl rex.RXB adc push repnz lret int mov testb mov sbb add cmp sub nop adcb cltd out scas (bad) hlt es rex.XB cmp lock jge ss negb push rex.RB callq mov adc addr32 jrcxz mov add push out int3 add mov (bad) cltd jp rex.WRX scas (bad) (bad) mov stos movabs (bad) or jrcxz adc mov movabs xchg rex.WRXB sti cmp negl and stos imul repz adc and cmp lock jl rex.WX (bad) adc adc (bad) cmpsl rex.RB adc cmc mov mov xor (bad) mov sbbl loop adc enterq jo cmp rex.RB sbb or add xor rex.RX cmp cmpsl in fs or push mov rex (bad) sarb mov and in push callq rex.WRXB (bad) and xchg or and mov fstpt (bad) mov or cmp and outsl mov adc pop sbb mov stos xchg lods out mov mov pushq (bad) stc sbb jnp shrl rclb push push gs fcoms stc rex.WX adc mov xchg sub adc mov test mov pop fisttpll adc (bad) sbb insl mov mov add pop pop and sub mov lock fwait cmp rex.WXB rex.WB adc iret (bad) gs movsl sub (bad) (bad) out fidivr jmp xchg stos insb fwait or mov jl sbb jno icebp sub (bad) loop rex (bad) gs xchg fwait (bad) rex.WRX cmp fstps cmc (bad) xchg (bad) adc mov stos testb xor leaveq sbb stos test sub (bad) insb cwtl sbb shrb ja or add rex.WXB pop out out lret mov (bad) rclb test rex.WXB (bad) mov mov sub mov and mov testb add rex.XB fimull xlat loop jle push lea jns (bad) (bad) sbb cmp mov xor mov (bad) js xchg (bad) jo,pn rex.RB rex.X rex (bad) sub xchg pop repnz mov fcomip rex.X insl xor lock (bad) xchg (bad) xchg (bad) rex.X mov cmp (bad) sbb nop add lock adc enterq out xchg rex.WRB not repz roll mulb psllq loopne lea rex (bad) (bad) rex.RXB lock lea (bad) jmpq imul (bad) lock sub iret rex.XB and add outsl repz rex.WRB rex.RX cmc repz movabs cmp (bad) (bad) std test (bad) jne (bad) fsub adc add int3 adc pop adcb rex.RXB rex.RXB ss out (bad) adc repnz xchg rolb mov shrb mov xorl cmp sbb jmpq adcl push (bad) rex.WXB sub out pop (bad) xor rex.X (bad) xchg callq pop lock and mov in sbb mov xlat (bad) mov rcr int3 mov mov mov xchg gs mov test mov (bad) pop jo lea (bad) xor xor xor add popfq adc rex.R jg es mov sti movabs movabs adc jp pop rex.RX (bad) pop adc (bad) in clc jne callq push je fdivrs adc mov int3 sbb or js loop jne sub (bad) xchg jmpq lock mov rex.XB leaveq test and mov or jl rex.WRX out xchg mov and (bad) rex.WRB lea (bad) (bad) mov xor mov mov (bad) or sub xchg test add outsb data16 pop nop cltd xchg outsl (bad) xchg xchg mov mov (bad) mov jno rex xacquire pop (bad) (bad) rex.XB mov orb sbb (bad) rex.WXB rex.WX xor cmp fistpll mov (bad) rex rex.WRX or hlt adc jnp mov and adc popfq test pop lahf (bad) jmpq xor fimul rex.B rex.WRB ja (bad) push cs (bad) mov lock (bad) fisub pop sub iret popfq cmp mov insl push fldl or pop xchg rcr sbb jae sub std add mov and fsubrl and mov decb (bad) (bad) add movsl xchg lods iret (bad) retq add lret mov jno and add fwait rex.WB xor cmp sbb mov lea movsl test pop (bad) add cmp mov cmc xchg jp rex.WRXB adc jg fsts cmp int (bad) sahf callq vxorps test mov sub mov pop rex.WRX (bad) jl mov stc sbb xor adc fs rex.RB test fdivl add mov mov and rex.WB es outsl sub or push mov fstpl mov test mov and (bad) cmpsb xor lret scas mov cmpsb lods (bad) sbb fst int rex.WRX (bad) mov xchg adc rex.RX xchg xchg adc lret (bad) out xor lock adc cmp sbb ja subb rcr cs out and out test data16 leaveq mov jbe mov jno mov rex.WRX rex.WXB jge and gs (bad) lahf sub rex.RB rex.RX mov mov lahf cmp sahf and (bad) or add xchg test xor sahf xor (bad) jp test mov adc mov pop mov imul (bad) pushfq add (bad) lea rex.WRB pop test out adc rex.WB out (bad) sub or jae jns xchg push xchg cmpsl push xor (bad) lret push xchg lea sub pop cmp xchg (bad) ss pop jbe or (bad) jmpq pushq stos jmp jge xor fimul push int3 mov mov add pop xlat xchg (bad) lgs shl add in test mov callq rex.WRB scas jmpq xor popfq mov mov or sub jae push pop rcl test movabs in fnstsw (bad) (bad) pop lea mov js negb sub cmp pushq xor rex xor sbb adc sarl rex.WXB (bad) stos (bad) jmpq movl pushq lods callq movabs (bad) jo mov xchg or stc leaveq push jb ucomiss lock je adc (bad) test cltd add add mov repz (bad) lahf fsubl mov rex.WRXB jmp and jmp cmc fidivr gs pop (bad) adc rex.RX push retq sbb mov rex.WRX std pushfq out insl (bad) mov adc (bad) imul jge adc or jae pop rclb rex.XB rex.WRXB ss mov xor mov or adc fbld jp and mov jl (bad) or frstor jo cmp retq (bad) (bad) adc addb pushfq (bad) rolb enterq push (bad) clc cmp sbb add (bad) in data16 (bad) fdivs scas ja imul jne test (bad) sbb add movb stos rex.WXB cmc add (bad) cmp insb xchg or xor (bad) lock (bad) (bad) outsb btr add mov rex.WR rex.WRXB sbb xchg jne repnz adc test or push sub or and mov fnsave rcrb xchg movabs data16 int3 add cmp insl icebp adc rex.R sub fdivs sub or clc insl (bad) in es std fs adc (bad) shlb pop popfq movabs or (bad) and jb pop callq clc mov movabs (bad) adc add xchg icebp rex.WRXB cmp insb (bad) cmpsl popfq (bad) adc (bad) mov icebp pop xchg sti lahf fildl or movabs sub in adc cmpps imul ficomp addr32 (bad) fistpl in lret shl cli sbb rex mov mov (bad) jg mov adc pop adc div rex mov mov jae cmp jo or insb (bad) xchg insb xchg movabs movabs cmpl and sub pushfq fbstp movsb icebp and orps rcll clc pushq mov adc push in (bad) callq sub imul addr32 lahf pushfq jne add outsb and clc (bad) movabs imul fsubrs adc clc sbb adc (bad) and fstpl cmc movabs cwtl movl mov sub cltd rex.RB or cld fwait adc mov hlt xchg (bad) pop (bad) sbb mov mov js movslq leaveq mov xchg popfq (bad) jl or adc jns addl ss mov and callq xor popfq mov mov lods rcr push cmp test loopne jb repz sub in fmulp movsb rex.RX pop (bad) add rex.B subl sbb push stos add in int pop or xchg xor (bad) (bad) ficoml fbld clc movabs rex.R insb jns sub enterq stos sbb adc xor movl sub movabs adc (bad) adc sub push nop sti jl test stos nop adc rex or jne sub adc rex.R rex.WRB rclb outsl scas xlat retq lock xchg xor ds sub xor pop jg (bad) jl sbb loop,pt (bad) or (bad) test (bad) test gs leaveq int3 adc stc xchg pushq xor hlt (bad) cmc scas in rex.RX pop ja sbb jl test mov scas cmp (bad) rorl in pushfq fcompl sub vpcmpeqw xchg add (bad) shll adc lret test int mov (bad) stos hlt or (bad) xor movsl sub int3 scas rex.WX (bad) loopne lahf jno movslq fnsave xor lret (bad) add lods outsb jne cmp in xchg callq rex.X pushq pop mov mov rex.XB xchg adc int pop push pop ds stos imul scas sub insl rex.WR cmp shll rex pop and and callq jno cwtl adc lock (bad) insb mov xchg clc rex.WRX rex.WRXB sub sbb in cli mov fmull adc (bad) clc xor mov sbb clc jle (bad) inc push adc jg mov mov clc cmp rex.RX hlt add mov cwtl adc movabs mov sbb and rclb add lret stos adc jg in in imul (bad) and in or out or and cmp sub rex.WB rex.R (bad) mov (bad) or and out or movabs add adc (bad) sub hlt (bad) sar (bad) fisttp adc loop mov sahf (bad) adc movabs mov cmp and xchg icebp (bad) pop jmpq pop (bad) push (bad) mov sbb push xchg sub cs adc stos (bad) (bad) mov push cmp (bad) retq je cs and jbe jmp (bad) repz add xchg adc iret in (bad) cmpsl mov sbb mov xchg jnp lret ja xchg repnz (bad) stos sub lret xorl jbe fildl gs adc in sub leaveq add push iret (bad) sbb fimul xchg or rex.RXB (bad) cmp fdivr in leaveq (bad) jle jmpq sahf test rex.WRB (bad) cltd cs (bad) cmp jns cmp (bad) pop adc (bad) shrd rex.WB or iret mov push (bad) rex.WX or cmpsb outsb adc stos outsb adc retq pushq callq retq and mov push push xor sub movsb js stc adc or lods insb pop pop push movabs lret cmpb (bad) xlat cmp adc mov ss int pushfq jb xchg out adc lods and cmc push pop adc std push mov movabs (bad) xchg adc add rcll (bad) out push lock adc movabs fucomi pop or mov sbb rex.WXB scas xchg xchg adc adcl push (bad) adc push imul sahf mov (bad) cmp scas xor xchg (bad) rex.RB jge (bad) shll xchg ss rex.WRB adc jp pop sub cmp mov adc fwait jae adc pop mov pushfq and and (bad) (bad) adc pop lahf mov add rex.WX and data16 mov fnop (bad) (bad) sarl test icebp pushq adc fbld enterq repz sub pop rex.RX or movsl ss and repnz or test ja mov or mov add insb (bad) and jmpq (bad) push pop cltd icebp cmp (bad) movabs (bad) movabs (bad) mov rex.X (bad) repnz push mov jg push sbb sbb jmpq adc fmul (bad) pop movsb push retq sbb shrb xchg (bad) jns xchg pushq xchg mov icebp xchg fwait rcrb (bad) enterq (bad) js rex.XB add sub xchg pop sahf (bad) adc iret mov cwtl movsl (bad) fs push incb mov adc cmc xor in adc imul iret movsl lret (bad) (bad) push push rex.R (bad) sti add scas jnp pop cwtl movsb (bad) cmp mov rex (bad) ss test test sahf repz lock (bad) push adc cs clc jp rex.XB int3 and add enterq pop xchg lret outsl push jl adc and scas jp jnp movabs mov or and (bad) movsb loope enterq sahf adc adc lods decl sub mul sbb lods mov mov data16 scas push (bad) mov repz (bad) stos iret retq (bad) movabs loopne insb or or add movabs pop test xlat mov cmp rolb cs or (bad) popfq sub ss mov je (bad) (bad) adc fdivs rcrl out sub fxch movsl retq or jp testl in imul loope (bad) jge rcrb mov (bad) sub adc xchg pop rex.RXB jne vpslld divb icebp movslq (bad) (bad) add pushq subl jge (bad) jnp push and or lock ja (bad) loope sbb sub adc (bad) rcrl js pop rex.WX lock adc push nop pop test and (bad) fwait pop out add (bad) retq (bad) (bad) fidivl clc callq mov mov (bad) add mov mov mov (bad) jns pushq push (bad) rex.RB pop pop roll (bad) cs pushfq lods and (bad) and or in sub (bad) (bad) lret jmpq mov movsb movsb lock sbb cmp sbb lock or pushq cld imul (bad) adc rol (bad) cli (bad) cmp fsubrp in and movsb adc xchg fsubrs (bad) mov loopne imulb pop push (bad) mov xor jae rex.RX sbb jg test pop and (bad) or out adc mov rex.WB test (bad) sbb repz (bad) mov pushq mov out jmpq (bad) (bad) xchg and sarb js rclb ljmp leaveq je mov (bad) (bad) rex.WR xchg lock xchg (bad) cmc mov rex.WX sub rex.XB lock pushfq xchg (bad) jno,pt cmp incb andl outsl and jmpq adc andl (bad) pushq test (bad) mov rex.RX rex.RX (bad) mov (bad) test xor in movslq add (bad) xchg (bad) adc jne cltd lret rex.XB rex.X pop and movabs (bad) cltd adc rex.X cmp in adc adc xchg push jns adc fisub jne js mov jg mov pushq mov (bad) (bad) or (bad) sbb (bad) mov out sbb out scas (bad) rex.XB (bad) xchg cwtl mov rex.WB adc (bad) mov ficompl sub (bad) cltd cli or test rex.WRB movsb sub jmpq sbb (bad) cld fsubl subl ja and and cmpsl fadds rex.R out stc adc shll fcmovnu xchg (bad) xchg and (bad) sbb xor out (bad) add xchg hlt adc (bad) mov and (bad) testl jge fist out loope (bad) lock mov callq loope fs (bad) retq (bad) shl imul jno rex.WB sbb loopne rex.WXB std in js cmpsl (bad) repnz mov scas data16 adc int3 sbb adc rex.WRXB or clc pop iret (bad) cmp jns pop pop adc enterq out (bad) adc (bad) (bad) cmp insb fisub and cmpsb (bad) adc adc outsb out xchg movsl xor mov cmp (bad) cmp int vunpcklps imull fbstp (bad) pop push cmp pushq sub fsubl add sub jl or loope imul or or test add sub and stos xor test or lock rex.WX adc fwait push jl jg mov outsb cmpsl nop jp sbb add sbb (bad) jmp hlt iret mov add cwtl pop push mov (bad) loop cmp int3 add mov test test and or int jae or adc andl jrcxz lahf (bad) movabs outsl cs scas rex.WRX or push xor (bad) mov callq pop (bad) in (bad) lock andl nop adc xlat mov sub mov and addr32 int3 adc movabs cmp sub cmp sar cmp mov mov xor rcll adc and or adc mov (bad) adc (bad) insl sbb or cmpsl push jmpq mov adc pop jnp int3 pop (bad) gs out adc xchg adc (bad) (bad) pushfq (bad) jl pop jge movabs mov (bad) sub outsl retq xchg sahf xchg test xlat add and pop jp callq jg pop xchg add rex.WRX mov movabs xchg rex and leaveq sub (bad) sbb int3 (bad) push pop movabs clc in sarb sbb rex.WB and roll pop or cmp jg (bad) push (bad) or lret sub (bad) fadds xchg jrcxz sub or ja (bad) pushq jno (bad) jb mov mov shll rex.X orl xor stos sbb xor std (bad) in cwtl out cmp pop fistpl xchg mov mov xchg rex.RB mov pushq mov pop xchg psrlq lret push callq (bad) in (bad) jno mov xor rex.WRXB push rcll jno jmpq xchg iret mov rex.RB (bad) adc mov cwtl xchg cltd xlat rex incl and retq sbb mov or nop rex.WRXB insl sbb (bad) or ds ss adc (bad) xor mov add adc sub pushfq xchg fcoms adc rcll (bad) jl (bad) jle addr32 insb xchg mov push in sti iret int3 xchg xchg jns jg fdivp xor (bad) out mov stc (bad) insl adc gs add cltd adc jbe (bad) mov (bad) je pop jne mov lock xchg nop jb pushq imul pop mov pop adc (bad) test rcll (bad) jmpq fs rcrl insl movsl adc pushq xchg rex.WRB xor sti fistl lods stos mov pop push cmp adc adc push roll adc popfq in (bad) (bad) fisttpl retq (bad) cmp retq push pushq (bad) repz scas movsl sbb rex.WXB movabs lock fstl sbb add or fbstp scas cmpsl mov rex.WXB cmp cwtl sbb sbb and (bad) jne sbb leaveq std fbld add mov jb pop sub xchg push fcomp pop adc pushq mov rex.RX fistpll cmc fdivr xchg push mov sbb (bad) pop fadd es add jb rclb mov add leaveq movabs cltd sub push lock fsub cmp add push (bad) cmp rex.RXB rex.WXB (bad) adc xchg jmp movsb stc sbb pop cltd push xor adc in jp popfq adc rex.WR pop pop add cmpsl (bad) push pop lock insb (bad) rex.WB adc clc (bad) (bad) movabs jle pop cmp pushfq xchg mov xor out pushq pop fdivl mov (bad) (bad) mov test rex.WX adc xchg jnp xchg adc (bad) ds and push xchg insl icebp adc (bad) cld and ja sbb and inc rex.WRX cmp insl push test adc je jrcxz adc enterq adc movsl sbb push test cmp mov xchg mov adc (bad) movabs xchg cwtl pop cld and add mov negl (bad) xchg sbb mov test mov mov ja and (bad) enterq jno pop movsb cmpl rex.RB (bad) scas (bad) not rcrb fdivl sbb fs lock xchg mov sti (bad) xchg adc and add scas (bad) fs rex.WRB rex.X mull clc pushq popfq adcl mov cmp (bad) in fidivrl adc cltd cs (bad) mov adc addl test mov (bad) ficomp (bad) xchg (bad) xor cld or loopne adc mov (bad) push sbb (bad) mov stc or pop mov adcl jo push (bad) je (bad) cli adc callq cmp outsb sub xchg adc leaveq xchg mov add (bad) addr32 pop cmp clc mov (bad) hlt mov punpcklbw cmpsl mov jo cltd in (bad) jno (bad) cmp (bad) mov testl (bad) jge mov outsb xchg (bad) adc test and jno ja xor adc rcrb jmpq sub and loopne and adc sbb fbstp lea jle movabs xchg imul add rex.XB retq or jne pop rex.RB iret (bad) callq pop jrcxz addb fcomp (bad) pop push out (bad) jbe rex.RX rex rex.RX jb leaveq jb rcr mov (bad) xor rorl (bad) adc movsb jg push cmp test (bad) xor jp (bad) cmc jmpq (bad) xchg loop or in retq adc (bad) fbstp mov push pushq mov outsl movsl add pushq loopne jmp sub sti or adc leaveq lret mov rolb outsb jmpq and sub (bad) pop xchg roll or mov xchg data16 jae insl cmc rex.W xchg adc push scas (bad) mov mov adc out or add mov adc callq cmc rex.RX andb pop jo ficompl push int3 gs and jmpq imul jg and mov data16 adc out or pop xchg xchg push add repz scas push (bad) xor retq rex.R jmp rex.WRXB pop test movsb rcll fsubl (bad) ficom (bad) jbe sahf adc gs mov jnp pop sub sbb sub xlat mov rex.WX retq and (bad) movabs rex.X rex.RB xor jnp roll (bad) (bad) sub ss rclb cmpsb pushq (bad) add (bad) fistl or rcll mov push negl (bad) in jbe rex.WX or rex.WRX lock mov mov pop add je mov sub or mov push sub pushq sar data16 repz xorl sub divb adc rex.WRXB ss (bad) and testl xlat cmc adc addb rex.RX jb insb stos (bad) icebp lret jrcxz clc int sahf (bad) cmp (bad) cmp (bad) (bad) sbb mov push or (bad) (bad) movabs mov (bad) leaveq rex.W adc xchg movsb add jmp jb add std mov je or (bad) cmp shr adc push outsb (bad) sbb ds (bad) xor (bad) callq mov push push (bad) jge mov (bad) or (bad) out mov pop xchg adc mov mov adc (bad) repnz sbb callq leaveq xchg fnstcw sub (bad) or adc rex.WXB repnz (bad) xchg loop sbb loope stos getsec or sbb cmp fwait pop push rex.WXB test cmp sarl out pop imul inc (bad) mov fisttpl add rex.XB (bad) (bad) xchg stos mov push rex.WB push sbb setp or adc test sub movabs repnz jg repnz mov and xchg rex.RXB insb loope sub xchg pushq rex.RXB imul jae sahf (bad) imul mov xchg mov xor jbe sbb cmpsl and add jbe jg rex.X and xchg rex.R int not sar lea shrl jle imull xlat mov sbb adc fildll xchg push (bad) lods hlt lock rex.B rex.X int3 sar xchg and xor rex.WRX cwtl fidivl pop pop mov xor xchg mov xor jae repnz (bad) rorb mov cmp rcl and or (bad) mov lock mov movslq rex.WRXB out add xor movabs push (bad) add test int mov (bad) sbbl (bad) rex.WRB rex.RXB outsb mov adc (bad) or pop xchg add add outsb fist (bad) (bad) pop or (bad) rex.RX pop je fs int3 clc fwait cmp add adc (bad) mov xchg (bad) push mov rex.X (bad) out xchg (bad) and add out lock sbb jp rex.XB adc clc test jo js (bad) je rex.XB test pop add (bad) cwtl pop in enterq (bad) or adc rex.WXB es and lret (bad) ds cs lods imul jge and negb test js (bad) sbb repnz jmp mov fcmovbe rex.WRXB mov jp (bad) xor and pop out movabs mov xchg jns sub xor sub (bad) repz test sub push jno push (bad) xor push adc adc sarb mov cmpsl clc sbb (bad) subb fsubrl lock add and pop addb push adc jg add (bad) adc mov mov adc (bad) ficom fnstsw xabort and cltd (bad) or jmp rex.WRXB mov jns fs xchg add shrb test (bad) (bad) sub or adc add cmp mov mov xor hlt pop shrb and mov cld enterq loope jmpq sub rex.WRX shlb jle and push (bad) mov mov push jne adc (bad) push repnz xchg repz xor outsb mov (bad) fistp rorl (bad) (bad) (bad) (bad) xor mov and out adc movabs add lret mov sub push (bad) rex.WRX add mov or popfq (bad) xchg adc mov outsl idivb (bad) movslq mov sub mov and mov sbb pop sbb cmp jrcxz adc ja rex.X adc mov push push adc pushq (bad) callq retq add mov xchg push or js fstpt (bad) subl sub out fisubr push int3 jl jp addb js icebp popfq imul mov je push repz callq cmpsb rorl in mov or mov rex.WRX mov out (bad) cmpsl (bad) xor movabs adc or (bad) addr32 cmpsl (bad) lock sbb (bad) add fmuls test test sbb fsubrl rex.WX std test scas pop sbb scas pop repnz cmc mov rex.WRXB (bad) cs hlt cmp fwait (bad) xor (bad) cs rcl xor (bad) cmp cmp (bad) gs add callq sbb xchg pop xor bnd test (bad) int3 xchg sti xchg int3 add mov test jle rex.W enterq out retq and and mov adc scas push xor adc cmp loop rex.XB js (bad) cmp (bad) ss mov (bad) sbb rex.WRB rex.WXB (bad) lock jae mov xor push xor (bad) fidivr sahf adc (bad) jno xor (bad) (bad) incl callq and xchg cli callq (bad) std and xchg callw popfq pop sbb push lret xor (bad) adc fs rex.WRXB add (bad) (bad) jnp adc in sub ja sti adc callq (bad) js rex.B (bad) add cmpsb mov and or cmp movsl out (bad) rclb adc jp cmp pop xchg jnp pop or xchg sub and xlat sub lods adc int lea fwait sub fldcw (bad) (bad) rex.W mov lods xor xchg pushq xor cmp rex.XB push (bad) xchg adc sub pop sbb lea fbld and rex.W rorl adc xor scas adc xchg (bad) or cwtl outsb jrcxz (bad) addl sub adc rex.WRXB add add fidiv sbb push in (bad) neg (bad) (bad) (bad) mov rex.WRXB rex.WR sbb adc (bad) sti mov div and ds sbb movl (bad) cmp (bad) (bad) lret adc mov outsl xchg outsl (bad) enterq je rex.WB xor stos callq out and xor retq jmpq sahf (bad) (bad) mov int3 mov adc (bad) xchg jp (bad) cmp (bad) imul push push rex.W rex.XB cmc add (bad) mov test scas sbb mov out (bad) and adc cmp rorl sub (bad) pop stc rcr callq and xchg retq push pop popfq mov fsub stos jb retq xchg loopne test jne adcb pop rex.X lods sbb data16 (bad) xlat mull adc (bad) xchg sbb (bad) jrcxz hlt rcrl mov fisub adc (bad) rex.WRB sbb adcl mov outsb (bad) (bad) cli lods cmp (bad) in sbb fsubp cmp jbe cmp retq out outsb (bad) mulb shrb adc pop push mov jmpq out loope pushfq callq mov rcr rex.RXB retq imul jb mov mov cwtl and rorl psrad (bad) adc repnz es mov jo (bad) out xchg cli fs jne lret nop mov loopne fnsave rex.WX rex.X out cmp (bad) je fiaddl push jp mov icebp callq sbb rex.W (bad) in (bad) xor cmp or push mov movsl lret (bad) pushq callq xor or jge addr32 imul (bad) imul int3 retq pop push es lock fwait mov pop jrcxz retq movabs roll push pop jo xchg (bad) jrcxz sbb callq xor in adc rex.WB jp outsl shll cmp xor or sbb (bad) jno std adc cwtl mov lret jne cmpsl retq (bad) mov insl icebp xchg scas adc xchg and cmp jl xlat (bad) imulb xchg (bad) mov add sbb fs rex.WRX jl mov mov xor enterq scas mov std (bad) sti sbb jl mov (bad) adc sub cmp enterq (bad) sbb out mov imul rex.WB rex.X sbb and sbb sbb add leaveq jge hlt (bad) (bad) out mov mov (bad) sbb fsub jg mov jb repnz mov push gs jne repz and mov cmp xchg (bad) shrl pop push pop imul (bad) cmp rex.B add sbb lea sahf mov stc cld (bad) mov or insb rex.RX xchg sbb (bad) push (bad) ffree jl scas movabs enterq mov jle callq mov std xchg repz pop imul (bad) pop nop out rex.WX jge (bad) movslq pop stos (bad) pop enterq (bad) insl icebp cmp incl sub adc (bad) xor cmp lods (bad) (bad) jo fbstp movabs jne roll stc pop jae add cmpsb rex.WR cmp rex.R rex.X movslq leaveq ss pop test (bad) cmp sbb (bad) jae adc adc outsb (bad) ja jmpq jp pop jmpq xor sub stc jne mov addr32 lea cltd mov (bad) adc scas mov and test out sub in out sub adc mov pushq test push xorb cld (bad) add and int3 icebp (bad) rex.WRX fcoms testb adc imul rex push fdivr (bad) (bad) push cmp in pop movabs sub ja data16 push shl mov and or adc cmpl pushq outsb push jae mull (bad) xchg mov sub adc cmpsl lock mov rex.RXB sbb iret push xlat testb fwait int cld (bad) insb cmp out rorl jmpq mov sbb jb xchg imul sub xchg mov adc xchg cmpsl retq js (bad) rex.RXB jp sbb mov (bad) mov je out enterq fcompl sar xchg jle data16 stos (bad) roll add adc orb pop (bad) popq (bad) xchg adc (bad) stos sub adc clc mov gs cwtl xchg rex fs iret retq jrcxz int3 ja adc lock sbb idivl rex sahf adc mov movsb xchg leaveq lret push or mov stos stos shrb xor jp outsl in adc retq rex.RXB adc cli and push xor jmpq mov lock imul (bad) fdivr fstps in (bad) xchg adc in callq cltd or retq xchg or lcall mov (bad) xor cmp and pushq (bad) std adc jnp js adc test mov xchg jbe sahf adc callq (bad) and cmp xchg (bad) movabs ficom std test movsb add lods insl adc cmp sbbb and sub testb xor or (bad) cmp (bad) xchg rex rex.RX jbe (bad) scas fisttp xchg cmpsb movabs adc jrcxz pushq fxtract and (bad) (bad) cmp sbbb movb mov jno rex.X cmp mov mov callq jrcxz and ss out lea xlat and and int3 sbb rex.X (bad) mov add jmpq (bad) xor xchg fwait imul fcoms adc imul mov movabs mov (bad) ds (bad) (bad) insb leaveq outsl (bad) callq sbb (bad) (bad) incb mov (bad) (bad) lahf adc rex.WR gs adc xchg adc mov (bad) xor fadd scas movabs rex.WRB ds out and jge pop ss (bad) test (bad) push rex.WX hlt movabs int3 push out cmpsb sub (bad) or add mov mov mov rcrb fdivp ja jns loopne rex.RB shll mov and and or rex.W lret add mov repz mov (bad) lret pop rex.RB movsb add jnp in xchg (bad) popfq and (bad) mull (bad) je pop fdivrs rex.WRXB cs fsubrs and push and insl scas or mov (bad) push mov fsub push xor pop in add insb out movabs (bad) sbb popfq xchg pop (bad) rex.XB adc (bad) cmp movabs jmpq popfq (bad) xchg lahf push (bad) loopne mov add rex.WRXB mov nop mov data16 data16 inc jl pop cmp in cmpl sub outsl cmpsb push stos (bad) adc (bad) mov ds pushq adc gs mov mov adc in in adc push xor pushfq in mov jl mov mov callq adc adc test xor adc xchg sbb push add adc jmpq cmp movabs movabs loopne cmc pop mov movsl (bad) fs xchg push data16 (bad) adc mov sbb rex.XB (bad) pop idivb cli rex.WXB push push and push jno xor mov push roll xor add mov rex int cwtl mov push iret pop sbb pushq bnd adc xchg nop scas (bad) repz movslq int xor push scas out movabs repz (bad) ficomp icebp mov (bad) in movabs shl cmp or pop test lock pop lea roll and repz repnz test movabs push rex.WRXB lahf repnz (bad) and orl jno lahf jle rex.RX and push (bad) mov callq fwait (bad) and insb or (bad) mov (bad) mov fadds sub mov (bad) add ds mov sub adc mov lahf movabs sbb (bad) (bad) test pop test xchg cmp fdivp xchg fsubrp rclb (bad) mov sbb lods rex.WR xchg (bad) jrcxz adc rex.R adc xor (bad) adc fwait pop mov (bad) or sub adc ja sti iret rex.WRX (bad) sub repnz xlat jbe mov faddl fnstenv jno adc movabs ss (bad) shrb test adc rex.WXB jno cli sbb mov (bad) lahf pop xor ss (bad) xchg fs retq mov jae lock pop cmp jbe jne cmp test rex.WR sub adc lahf and std and mov int3 and push sub (bad) sarb and cs jmp xchg loopne xchg hlt (bad) movabs mov jo xchg js add fimull cmp jp in xchg (bad) cmp movabs mov clc cld movabs jle add (bad) rex.X and pushq adc jmp sub fbstp push jg in std add jno out testb rex repnz outsb loop fcomps or push fwait push jb xor outsb imul enterq push pop retq xchg mov pop fisub add rex.W sub outsb (bad) insb icebp in enterq sbb xchg (bad) push mov rex.B fwait lock xchg lahf (bad) (bad) adc sbb jg adc rex.WXB pop hlt adc mov jmp push rex.WRXB pop (bad) pop lret (bad) pop fmuls add sub repz jmpq jnp rex.WRB int3 pop xchg rex.WRXB rex.WR rex.XB rex.R addr32 stos movsb pop outsl repz xlat pop or (bad) fstps lret (bad) (bad) rex.R js mov push movabs (bad) jne mov mov add jl rorb cmp cmpsl cmovbe movsb (bad) sub (bad) or pop in rex.WRX orb (bad) xchg (bad) lea jno (bad) fild cld ss xor movabs (bad) mov in iret mov je fiadd repz and add xlat js xchg (bad) cmp (bad) (bad) adc xchg (bad) xor and imul and stos pop push (bad) jnp lcall xchg add fcoml jrcxz mov adc adc lahf cmp xor push (bad) jne (bad) cld and add push xchg push cmp and (bad) or cmp in (bad) mov push (bad) icebp adc xchg xchg outsb ja nop adc and fs idivw adc rex.WXB lret pushfq rex.W ds fwait sub jno (bad) cmp int adc mov jae lahf sbb nop jo add add jle jmpq adcb je pushq lods rex.RB repz sbb mov lahf ja cli jbe xor adc mov (bad) rex.B sbb fildl fsubrs scas xor fbstp rex.WRXB mov cltd lahf enterq mov (bad) shll mov and adc rex.WXB sbb push insl (bad) pushfq jl popfq (bad) (bad) cmp xchg jp (bad) mov adc rex.X and adc (bad) movsl sub adc scas xchg movsl or mov in out sub movabs sbb scas adc mov xor cmpsl rcrl sbb xor idivb pop (bad) or adc adc imul and int push adc (bad) mov rex.RX scas insl xchg adc push out fcoml rex.XB or cmpsl movslq mov push (bad) cld or xchg in rex.WRX adc rex.WXB (bad) add add mov and sub jbe jmpq jo push and fadd xchg movabs out rex.B or sti adc movsl rex.WR mov (bad) and addr32 sub pushq mov mov fcoms (bad) fsubs (bad) and push ficompl xchg in xchg add int3 or push xchg sbb cmp movsl xor pushq sbb mov (bad) sbb jp (bad) jmp cmpsb xchg mov (bad) sbb sub xchg repz mov or mov movabs movabs fsubr or adc (bad) andb push fidivr (bad) xchg lods jge sub sub test retq in jp sbb stos repnz and xchg (bad) lock std (bad) sbb lods movabs faddp sbb in xor cltd (bad) pop mov callq repnz sub vucomiss notl (bad) (bad) andb mov rex.R (bad) mov sahf sete fstpt mov xchg je (bad) enterq (bad) callq outsl lea mull gs movsb pushq jne pop rex.XB pop adc sub adc jae (bad) (bad) in sub and popfq adc vsubsd jne retq (bad) insb or xchg cld sbb jle and lods push sub jnp adc mov adc rex.WRX cmpsl (bad) movsb cmpsb jmpq and sbb in rex.WR callq mov stos sbb and jo rex.WR (bad) (bad) gs rex.WX xlat xchg jno jbe (bad) xchg adc mov push roll (bad) (bad) add push sbb adc sub stos (bad) or rex.XB movabs out (bad) rex.RX add adc (bad) pushq jmpq (bad) xor (bad) scas and loope or movabs xchg in out out lock sahf mov adc mov mov ror in or sub shl movsb (bad) rolb jno mov outsb cltd sbb (bad) (bad) (bad) jmp mov (bad) sar xchg pushq jns add stc movabs mov rex.X (bad) jns mov mov in (bad) sub cltd out or rex.WRX (bad) cmp enterq mov ss mov iret xchg jbe or rex.WRB pop jns fistpl (bad) jmp push rex.WRX xchg (bad) fldl pushq push xchg stc jle jrcxz mov cmpsb xor fstpl rcl mov or adc clc (bad) fwait rex.XB adc fbld (bad) cs xchg incb sar (bad) rex.WB push xchg rex.WRX adc fsub stos mov (bad) mov add (bad) xchg rex.R sbb sbb cld test (bad) or xor insl cmp clc rex mov cltd (bad) pop fs (bad) (bad) cmp and iret and cmc movabs add (bad) pushfq fsubrp xchg rex.WRB sub (bad) (bad) clc or stc test mov movabs or sub rex.WRB jae xlat pushq and xchg and (bad) xor (bad) jrcxz rex.WXB mov in pop mov mov out xor cmp rex.RXB xor movslq (bad) orl adc pushq outsl xor (bad) add std jmpq push rex.RXB rex.WXB (bad) cmovp rcll roll xor mov movabs outsb ja xor insl sub sbb (bad) and addr32 fisttpl push (bad) push sub mov xchg scas sbb fnstcw loopne rex.WR decb addl adc rex.RX enterq adc adc jmpq in movsb fidivr or mov xlat lods rex.WRB callq (bad) movabs shll adc pop rex adcb (bad) pop leaveq (bad) fcompl (bad) xchg mov xor xlat push or mov cltd and (bad) adc rex.R adc xchg (bad) adc mov xchg mov jbe mov popfq adc mov (bad) adc fwait pop and jmpq data16 and pop mov stc ss rex.R stc mov fldcw movabs or mov cmp scas xor (bad) stos movabs (bad) mov adc retq (bad) int pushq js repnz add (bad) js xchg lret sarb scas sarb pop xor js (bad) mov and mov (bad) pop out pop (bad) cwtl mov data16 (bad) (bad) data16 and out push jbe (bad) (bad) loope add pushfq movabs hlt (bad) out (bad) shrb retq movabs scas retq mov notl or fmuls add sbb sub rex.B cs (bad) push push (bad) xor js insb scas cmp jmpq sbb xchg mov mov add pop jp mov stos (bad) sub movsl sub (bad) out movabs adc cli imull sub rex.WR icebp addr32 movabs in adc sarl push mov jge roll scas imul and lahf jp or xchg loope xor imul retq test fisttp (bad) (bad) testb fwait (bad) jb mov cwtl cmp std mov enterq cmp mov icebp mov test adc jmp sub xchg js enterq sbb (bad) test pop cmp mov push jns rex.RX in or xchg mov (bad) es adc shll lret xchg sbb (bad) lea adc (bad) rex.RX int3 scas (bad) rcll xor xchg (bad) sbb (bad) cltd cmp adc ss adc jle (bad) (bad) iret outsl xchg in adc int add (bad) fs rex.WX pop imul cmp callq mov adc (bad) add in (bad) rex.RB enterq pop paddq vmaxps (bad) repnz in clc and sub adc loopne (bad) jge cli jns jne mov (bad) mov push movabs fmuls rex.WB sbb pushq (bad) sub mov mov insb push cmc lea rex.WX sbb pushq add (bad) ja (bad) data16 in rex.WRB stos pop callq iret cltd (bad) (bad) jmp (bad) jne and in sub mov (bad) adc adcb adc rex.RB fs and std pop movsl stos stos adc icebp sbb insb adc or fidivl (bad) jno ja clc jmpq xchg xchg jge (bad) fadds xor enterq repz insl push (bad) (bad) adc (bad) (bad) adc je fidivr clc jnp (bad) cltd out int lret stos pop fnstsw push ja enterq cmp xor jns js adc imul jrcxz test xchg (bad) sub int3 imul rex.WX add cmp xchg jne (bad) (bad) jmp adc (bad) lahf movsl es mov icebp jae cmp jbe xchg outsb (bad) sbb clc iret (bad) out leaveq pop in xor (bad) or sub and bnd insb lret (bad) sub stos xor jle and xchg jg hlt xchg (bad) in lret std stc mov mov or (bad) (bad) movabs push ds jae outsb fmulp cmp pop fs xchg push and rex.WRX int3 ds es or repnz mov rex.B pop (bad) (bad) popfq int pop cmp mov cmp xor push jb std int3 xor js movl bnd add sbb (bad) rex.R es or and push cmp push outsl in xchg fnop (bad) jo sbb movabs lock (bad) sub jmp sbb jae mov insl enterq rex.RX cltd pmulhuw in mov mov mov jmpq stos cli addr32 mov in xchg rex.XB imul movabs jno imul cwtl mov lret jno jle retq (bad) incl (bad) sub xchg (bad) xlat jg ror lret mov sbb (bad) repnz test rex.WB adc shl int3 out lock movabs xor clc mov xchg mov adc mov sbb mov fidivl xchg push nop jns adc (bad) mov fnop xchg adc or movabs fadd adc xchg mov xchg mov adc xor clc fucomi sete stc adc in rcrl (bad) adc movsb rex.WX xchg rex.WRXB adc mov and sti movabs (bad) outsl and (bad) jg fnstsw rex.RX xchg cmpsb add int3 cltd sbb adc rcll sub rex.B add addr32 ss (bad) cltd xchg fildll mov xor (bad) xor lock adc (bad) pop ja and ficompl xor fcoms xor jnp sub mov (bad) fadds (bad) lret (bad) in add jnp (bad) retq out lock jmpq adc xchg repnz repz (bad) add cmp or (bad) push movsb fdivrl pop (bad) mov add fadds jrcxz retq mov (bad) mov mov pop jne cmpsl or jne or (bad) adc add and jbe push push mov jmp mov pop cmp cmpsb mov xor jle (bad) movslq cmp mov fstps andb mov es mov cld add imul (bad) jl test rex.WRX cmpsb callq mov xor pushq fdivrs (bad) add xchg xor fstpt cmp sub xor or ja xchg movslq out cmpsb test and pop sbb sbb rex.RB or cmp (bad) (bad) repz rex.WRB outsl sub jge or or add xchg sbb fsubr (bad) xchg movsb addb fs mov xchg (bad) repz jmpq jne xor jbe cmp enterq cwtl shrb adc (bad) movabs callq cmp (bad) jno lea (bad) rex.XB rex.WRXB enterq (bad) mov sbb iret pushq out and lret rex.RB repnz callq cs repnz xor jno jg sub test jno repz sbb movabs pop sbb jno cwtl (bad) xor fs rex.B adc rcll rex.R rex.RXB rcrb es xchg pushfq (bad) and or sbb add subb add popq mov fmul mov rex.W cmp sbb and xor lods push cmpsl mov pushfq mov icebp jno repz adc jrcxz pop cmc adc je push push (bad) (bad) in rex.X rex.WXB rex.WR stos std jno hlt (bad) pop (bad) xor lods fcoms xchg scas divb push and loopne sbb stos mov lods mov xor retq sbb (bad) cmpsb sub (bad) icebp cmpsl in sbb movslq rex.WR pop (bad) (bad) andl (bad) adc rex.WRB mov shll iret outsb pop sub xchg rol add scas lock (bad) hlt (bad) (bad) cs (bad) (bad) jbe lahf repz jo sbb add and clc (bad) rex.WR rex.WRXB push clc xor pushq out or push stos sub or fcmovnb adc insl icebp adc fisubl notb or scas movabs imul adc int and movabs and and xchg add mov (bad) jmp test adc int mov (bad) mov (bad) test pop add mov xchg insl pop mov jno adc rclb (bad) push jl cmp repnz (bad) int jp mov icebp mov je (bad) fnstcw div lar xor mov mov add sub rex.X or mov out enterq or jbe (bad) and xor rex.RXB sub or (bad) je jb (bad) mov cmp jl mov sti adc mov mov popfq and push fwait outsb xchg movsl and repz cmp sbb jg (bad) sub imul cmpsl jo adc or mov push icebp int3 (bad) lahf movslq mov xor mov pushfq popfq adc in mov xchg pushq adc test adc pop pop movsl mov xor xchg movabs nop xchg shl int3 jo mov cmp out (bad) adc xchg xor cld jmpq rcrb movsb es sub (bad) rcrl mov imulb outsb adc fisubrl repz push jb fcoms mov (bad) xchg push adc (bad) sbb js pop js push cwtl pop jo (bad) or rex.X mov callq cltd sahf and adc push (bad) adc movabs jae adc rex.XB movsl in pushq test stos xlat push stos (bad) push (bad) lret push mov add xchg mov adc mov adc (bad) movb xor out sbb mov pop and pop mov adc (bad) and imul (bad) or (bad) int3 adc jnp mov and jno cmp loop (bad) sti test xor rcr xchg lock mov adc add adc mov (bad) test (bad) or lods and out lock lahf (bad) pop and sub (bad) adc push lock adc mov je adc mov ja (bad) or xchg xor mov lods cmp or or add adc fcomps jnp mov rex.WR rex.B scas movabs jmp stos push js in adc cmp or cmc sub movslq ja fwait sub push in (bad) mov sbb mov sub outsl fwait sbb mov imulb mov rex.XB (bad) jns gs sbb sub (bad) retq add sub rex.WB jnp sbb enterq jg and mov fistp push push imul jo loope (bad) xchg rex.WRX cmp cld push add or cmp imul sbb and rex.WB (bad) sbb cmp rex.WRX rex.WRXB loop jmp jmpq cmpsb fsubrs add lea hlt jmpq sbb jrcxz pushq test stos jbe cmc rex.RXB (bad) movsb lock xchg add insb xchg iret and mov mov (bad) test ja cwtl rex.WRX mov add add test push popq (bad) (bad) (bad) insb addr32 movabs repnz rex.WX fwait stos (bad) xor outsb xchg pop loopne insb cs int3 movabs jrcxz mov pop rex.WRXB ljmp rex.XB test (bad) fwait sarl pop (bad) or mov push push rol xor imul (bad) and test (bad) scas rex (bad) cltd mov or adc mov add adc rex.WXB cmc mov cmp imul adc int mov adc add xor rcll cmc pop adc rex.RB rex.WRX fwait ss (bad) and stos sti out lock rex adc insb rex.WB jb (bad) (bad) adc push rex.B (bad) adc mov (bad) roll add push sbb xor fidivr fwait (bad) push (bad) sub pop movabs retq adc or jo push sti (bad) sbb nop rcrb xchg movabs xchg shr addr32 bnd rex.WRB (bad) xchg outsb hlt push or (bad) (bad) (bad) subb xor and lock rex (bad) (bad) lea sub pushq jl (bad) fsubrs (bad) adc push add add (bad) std add addr32 retq gs stc (bad) xor hlt lock roll (bad) stos (bad) jge jne fs jo (bad) jrcxz rex.RB add jns sbb lock add in or lret xchg cmp jne (bad) fld lea push mov and cmp orb vmovupd push (bad) movsb movabs push mov outsb (bad) addr32 in cs jo hlt push cwtl mov push push mov fistpl (bad) pop jb int3 or test ljmp andl push (bad) test mov rcr movslq adc movsb mov in lods jg or xchg adc push (bad) mov mov fadds add jle xor push cmc pushfq or mov pushq (bad) adc xor xchg cld (bad) mov fcoml (bad) enterq adc roll outsl (bad) mov scas sub (bad) lahf or rex.RB sub rex.WRXB mov ror (bad) xchg adc (bad) xor loop or cmc ss lods cli es fidivr xor (bad) and sarb je sbb je in (bad) pop jp int3 stc pop (bad) not test (bad) or int3 or repz cli js (bad) and fcmovne sti (bad) cwtl sbb rex.W (bad) retq callq push add fbld sbb test push adc (bad) out add iret lea (bad) fld or rex.RXB adc rex.WB fidiv addr32 jg jb adc fbstp xor or cltd sbb add rex.WX and sbb rex.X or jle shr nop loope adc jge mov mov adc add rorl rex.WRB add or xchg cwtl (bad) in adc fwait cmc movabs push push or scas add pop stos xchg jne pop adc js addr32 adc lock sbb jno lahf (bad) (bad) jrcxz sub jbe (bad) (bad) mov jbe xchg cmp xchg (bad) out retq test rex.XB adc stc lahf rex.WRXB test sbb and xchg and sbb in adc (bad) movl xlat mov imul out sbb nop imul and (bad) scas mov sub enterq (bad) sti sub divb adc (bad) movsl outsb outsl movsl lret (bad) sbb mov mov sbb mov mov pop imul fbstp pop adc mov fwait sbb mov (bad) adc addr32 add (bad) xchg insl mov sbb rex.WRXB mov fisubrl jp sub mov retq ds sub (bad) scas adc ror or imul (bad) (bad) loopne lret mov ja test ds test mov rex.XB rex.WX jo popq (bad) pushq rex.WRB (bad) (bad) in or retq (bad) (bad) cmpsl retq and xchg lahf imul movabs mov int3 push (bad) scas jae cwtl xchg callq cltd sbb rcll sbb insb es (bad) jrcxz adc adc (bad) push adc (bad) (bad) movsl rex.RXB sub adc (bad) negb frstor test (bad) sbb xchg mov or (bad) sti rex.XB sar popfq andb adc lock fwait xchg adc xlat cld mov andl sbb pop int mov jb adc addl fcomip rex.RXB retq rex.R rex.RB rex.WB enterq adc mov sub enterq insl push adc jg add (bad) mov in rex.RXB rex.WRX leaveq sub sub pop pop adc mov jge in mov fisubl cmp std (bad) data16 add movabs scas (bad) xor fadds (bad) (bad) jbe mov (bad) mov rex.WB mov fs rex.X lock rex.WRB idivl mov rcl (bad) jmpq mov jns adc imul (bad) test and ss xor push pop xchg (bad) push movabs pop xlat adc xchg lods push (bad) test mov rcll movsb jno (bad) cmp idivl xchg xchg ja mov push adc sub (bad) cwtl clc xchg jnp cmpsl or add cmp rclb mov test add jl xor int mov (bad) xchg mov (bad) bnd push pop cmp sbb jae sbb movabs push fistpl and push jb adc fisubrl xchg pop (bad) and mov mov push jmpq mov ds out jmp adc mov pop (bad) gs xchg icebp cwtl adc cld adc jmpq mov mov jb (bad) pushfq jmpq fbstp adc mov (bad) push nop test (bad) (bad) (bad) or cmp shr in movabs (bad) mov mov pop callq leaveq (bad) (bad) rex.WRB in adc or pop add cmpsb mov lods sub int sbb retq add jp adc callq or fsubl stos rex.WRX cmc out rex.W std (bad) jbe andb movabs sahf (bad) pop ss or (bad) xchg push rolb (bad) icebp std add add loopne xor (bad) imul mov mov or je,pt sub jp mov mov pop pop sbb cli hlt mov callq rex.WXB (bad) and (bad) sbb in mov int3 int3 mov rex.WRB add loop pop sbb push in roll jmpq mov rex.R mov rex.WRXB sar pop fwait ss jae adc je mov rex.WR ds xchg rol cmpsl pop (bad) test scas adc addr32 (bad) xchg sarl mov add add pop and retq je and rex.WRXB imul movsl imul mov fwait mov mov mov stc addl xlat sub xchg mov jbe pushfq sahf mov push mov xchg sub sbb movsl mov enterq bt add fisub movsl add xchg add (bad) (bad) mov xchg insb and (bad) mov sbb xchg push repz jrcxz or pushq movabs add pop adc stos jno pop pop rex.WRB outsb push or movabs out xor (bad) jae sub (bad) movabs pop (bad) xor (bad) test scas rex.RXB iret cmpsl jge mov (bad) cmp jl sbb and insb (bad) cwtl shrl lahf jno lret sub rol or callq (bad) add int3 negl sub (bad) rex.WRXB xlat jle lock mov stc rex.WXB scas in adc jb movslq and sbb cmp sub cmpsl fwait enterq add sbb cs popfq (bad) (bad) mov xor js and and int3 insl jns pop movabs adc faddp adc loope xchg mov sub insl (bad) (bad) add popfq (bad) and sbb ficomp (bad) movsl lock lock cmp stc cmp xchg adcl jg adc andb adc repz movabs (bad) in push mov jno mov add cmp or std mov adc cmp fmul sub sub cmp icebp mov (bad) jne movabs rex.R out mov adc jmp rex.W test or lock add movabs (bad) xchg rex.XB rex.WRB cmp (bad) adc (bad) sbb mov add mov vcvtdq2ps int3 je adc movabs add js mov xchg mov lahf in cmp add xchg imul xlat fdivr mov movabs add add cld add cmp (bad) sbb js and retq movsb and pop (bad) (bad) movabs xlat fadds (bad) or rex.W in (bad) hlt rex.WRB rex.WB xchg jl (bad) js sub pushfq push pop add mov (bad) or mov movabs and push cmp rex.WR rex.WRB rorl mov icebp cld es xchg mov test in and push rex.R out sub hlt (bad) insl (bad) or xlat mov (bad) adc fcoms pop fistpl cli imul rex.WB stos loopne (bad) loope and pop jle add or push mov mov add lods cmp and mulb rex.WRXB loope sub loopne scas movabs pop lods outsl sbb mov fucom imul imul in xchg jo push sbb fwait cmpsl in out rex.WR rex.W (bad) insb callq cmc mov negl andb lahf mov rex.X (bad) roll or (bad) (bad) jne mov test sub mov or iret cmp xchg in jo int3 mov (bad) mov mov (bad) pop (bad) out mov jp (bad) or leaveq rex.WX cmp rex.XB repnz (bad) adc (bad) mov test shl lahf (bad) out hlt (bad) and or pop in (bad) and lretw outsb cmp movabs gs int3 add add xor rex.WR or ja jp movabs fs test movabs xchg adc repnz sbb callq sub (bad) stos in clc cwtl enterq rex.RB or insl and lahf (bad) rex.RX rex.WRB jb movsb cmc mov (bad) (bad) testb hlt jl or or sub mov xor add (bad) test jbe (bad) rcrb push std add push fwait pop jle pop xor jle add rex.WX and movabs cmp in xchg fldt (bad) callq rex.X idivl loope je (bad) jae jg (bad) in mov add (bad) mul cmp (bad) cltd pop sti push fcomps (bad) push insl adc ja mov (bad) xchg rex.WX sbb movsl js adc (bad) clc movsl sub sub xor rex.RXB (bad) out rclb jno jnp movabs movsb retq ds or loope lahf fnstenv (bad) mov sbb (bad) xchg bswap retq mull jns and out pop mov xchg vcvtps2pd add (bad) sbb xor pushq (bad) (bad) std add out fimull int rex.WXB shll mov jle sub loopne (bad) mov (bad) rex.WRXB es sub mov sbbl incl andl pop fisub add je fdivp (bad) mov and push xchg addr32 (bad) (bad) sub lahf pop sahf add sbbl adc push mov movsb in rex.W std xchg loope cmp (bad) cmp int3 cmp sub xchg cmpsl jb movsl int3 fisttp test std pushfq (bad) rex jg (bad) jne imul sub sbb cmp pop rex.XB (bad) push (bad) push push lods or iret ja ficompl fwait and add outsb data16 adc push loopne xor rex.WB or sbb movabs adc rex.X cli mov (bad) (bad) mov xchg sub xchg (bad) imul (bad) xor (bad) (bad) adc mov lahf add rex.RX rex.WRB rex.R int3 and movsb (bad) movabs or ds fiaddl (bad) rex.RB lret fcompl (bad) jne (bad) lock int and scas jbe cwtl adc pop loope imul (bad) push adcl and sub (bad) mov test notb clc cmp (bad) xor mov xor rcl jb,pt fs fwait cmp sarl or adc pop mov (bad) push and test cltd mov cs cmpsl (bad) add adc or adc lret cs pushfq cli outsb loope es rex.WX rex.XB fdivrl pop add retq add (bad) xor (bad) adc jb fmulp mov icebp xor or rex.WR xchg lret pop (bad) xor add nop rex.WXB or pop xor xor (bad) out add mov (bad) sbb sbb jle out enterq fs xchg mov je subb out xor mov (bad) rex.RB lods movsb movabs rex.WB adc callq fwait cmp orb (bad) addr32 jnp (bad) mov (bad) lods sub (bad) jle sbb loop std (bad) or pop sahf loopne cmc lods sarl adc int adc or outsl sub lret mov (bad) (bad) cmp int3 rex.WX insb xchg data16 cs xor fs adc (bad) jle adc pushq shlb cmp cmp xchg jne callq rcll jp fldenv mov enterq repz cmpsl movabs ja sub add xchg xor rex.XB jmp xor sbb retq push fcoml lods jrcxz out or (bad) in lret movslq out mov (bad) rex.X and xlat lods ds sub sbb mov out fwait (bad) jae mov btrl fsubr rex.WXB pop test lret xor push in and jmpq xor rex.X ss (bad) xchg sbb rcl (bad) loopne adc ja in andl jle sarl and jnp sahf (bad) (bad) (bad) add (bad) rolb xchg subl outsb rex.WRB jns faddl lock sbb or mov rex.W sub js cmp loop movabs rex.RXB xchg ja (bad) (bad) testb je in int subl scas insb push pushq fistpll (bad) lretq sti fs ja (bad) xchg xor sub (bad) and int3 imul pop mov (bad) sub mov mov lock cmc jp clc movabs pop add rex.W xchg (bad) (bad) test jp mov nop mov repnz shll mov icebp mov rex.X rex.WB stos cwtl sbb and std sbb mov mov in pop adc mov mov enterq movl rex.RX lods xor cmp rex.XB (bad) movsl rex.RXB xor push mov movabs jmp (bad) and imull enterq adc pop fidivr rclb cmp jnp pop popfq mov (bad) enterq sub test adc cmpsb movsb pushq push sub movabs (bad) mov and pushq mov (bad) mov sbb in (bad) sub push (bad) jg stos sub xlat adc out jl popfq pop enterq add and (bad) jnp leaveq (bad) sbb rex.WX (bad) clc rex.WRX push jrcxz movabs (bad) sub and fildll jl xor mov sbb xchg sbb scas push cmp mov (bad) (bad) xchg (bad) fistp (bad) repz clc and mov shr jge ds fsubs leaveq (bad) mov stos mov fwait cmp imul xchg rex.WXB adc icebp (bad) rex.XB fildl je rex.WRX xor adc callq fwait out sub pop add (bad) mov mov adc cmp retq sub mov mov nop imul jae fiaddl adc fcmovb movabs rex.XB rex.WRX add (bad) xchg cmp scas std not (bad) mov std adc stc jbe xchg push movabs rex.W movsl or int3 stos sub push (bad) rcll (bad) jg xor and push sub pushfq (bad) mov sbb cmp outsl shll jle (bad) loop mov jne rex.X insb popfq (bad) callq jge (bad) add push jo mov and rex.R imul cmpsb in add repz cmp (bad) test (bad) lea movsb sbb loop jmpq adc loop xorl mov xorb sbb movabs imul in cmp out cmp add cmc and (bad) movsb xchg xchg loopne repz (bad) and add jmp xor (bad) lock mov (bad) xor (bad) movabs (bad) cli (bad) out add outsl enterq and movabs sbb (bad) ds xchg push mov (bad) (bad) movabs outsl jmp ja sbb rex.B or pop cmp sbb (bad) in push stos xchg lea cli push mov pushfq xor push adc jnp loopne rex.B push mov movabs imul loope push (bad) mov xchg fdivr push pushq sub fiadd outsb clc (bad) (bad) popfq (bad) (bad) cltd (bad) ficom (bad) lret xor and adc addl xchg iret (bad) movsl jmpq sarl in enterq jo mov mov and adc test scas push mov pop push xor pushq outsl pushq mov rex.WRX fs lods int3 push adc sbb (bad) mov repz add movabs or adc mov cld xchg jl adc mov (bad) mov adc (bad) pop pop (bad) mov add movsl rex.R xchg adc adc (bad) add imul (bad) rex.RXB mov callq push popfq stos xchg jp adc mov (bad) ja mov jno movsb neg out mov divl cmpsl or cld mov (bad) pushq (bad) push mov push rex.B mov (bad) shlb (bad) jae (bad) movabs jrcxz outsl (bad) shll imul sbbb (bad) pop (bad) enterq adc push sbb adc jp repnz mov mov sbb stos jns or (bad) callq lods es rcr pop fsubp sub test mov xchg std addb rex.RB xchg out fwait sbbl sub hlt mov pop cmp jb cmp or add sub mov mov retq out test outsb mov stos shll or xor jb mov (bad) jb (bad) cmp cmp rex.WRB bsr add jge and ds ss callq (bad) adc (bad) (bad) xchg icebp sub mov xchg mov push sub adc frstor (bad) mov cmp monitorx jns pop push mov rex.WXB xor rclb fsub sarb (bad) (bad) mov xor fcoml (bad) cmp (bad) add xor iret (bad) (bad) icebp (bad) (bad) push xor mov mov (bad) outsb xchg in fsts loopne std adc add sub adc xchg (bad) lahf popfq adc mov sbb sbb retq (bad) (bad) mov lret lock xchg xor push xchg rex.WXB jp cltd or push mov sti mov addb jmp lea sbb stos retq or rex.XB xor rex.WX xor and scas outsl xchg int3 sbb lahf movsb test cmp rex.XB fbld enterq es lock or jle cld jle callq rex.WRX loopne adc or rex.RXB lock mov mov int out ror xor add in addr32 (bad) cmpl mov add pushfq out sbb xor jmpq (bad) outsb js sbb push roll or stos and callq mov sbb add (bad) paddsb cmp imul pop enterq sti rex.WB fsubl pop (bad) movabs icebp js (bad) retq rex.RXB push (bad) rex.R adc (bad) lods rex.RXB scas retq out (bad) out push rex.RB movslq mov ficom (bad) testb test jg mov xchg (bad) adc pushq nop and imul lods jno cmp and and jno sbb loopne (bad) loope push rolb mov sbb (bad) outsb sub sahf pop sbb rolb mov out movsl (bad) fld and (bad) int3 push rorb subb out movabs and test (bad) add fs jbe in cld or cmp out rex.WRXB rex.XB (bad) sbb scas (bad) jrcxz jns rcrb pop btr jl enterq je out rclb cmp js mov (bad) fxch leaveq mov out outsl adc sar jrcxz adc int movabs mov (bad) stc cs movsb xchg fimul (bad) rex.WRXB ja nop push (bad) mov (bad) pop incb rex.X xchg push jo adc and (bad) sbb roll jl xchg out clc cmp xchg in sub callq and es adc (bad) xor adc notl mov repz or (bad) ficompl mov xchg mov (bad) rex.X movabs sti (bad) mov pop pop js insb (bad) fwait mov rex.W add mov jge ror test imul fimul callq pushfq push lahf add (bad) out test jl int3 sub mov mov cmp mov (bad) adc in jmp or fsubs callq sub (bad) mov push cld test jle scas pop insl mov xor movslq adc and mov xor cwtl rex.RXB cmp mov push hlt fstl enterq xchg (bad) nop lahf sub rcll rex.W movabs imul xchg (bad) (bad) je (bad) movslq cli lock (bad) jp std adc in fidivrl mov (bad) (bad) adc in adc (bad) adc xchg fs cmpsl rex.WRXB fsubrs rex.WB rex.WXB addl retq or out jo mov sub movsl imul push mov in sub (bad) adc icebp mov mov incl movslq cs pushq jbe fwait movabs push push cmp mov mov (bad) (bad) and movabs and rex.W adc andl stos adc je movabs stc jle pop and adc cltd jno rex.RX and lahf movabs xor push addr32 movabs xchg sbb enterq iret rex.RX adc popfq add jmpq rex.WXB movabs cmp orl adcb sahf std pop je cmp or push jo cmp xchg idivl stos icebp popfq icebp movabs (bad) mov sbb (bad) std and test (bad) rex.WB nopl cwtl fs cmp add loopne sub push imul (bad) test xlat (bad) or (bad) sbb xchg jne or and mov (bad) (bad) lock push mov adc test adcl and rex.X (bad) adc rex.WXB fmuls jge (bad) clc mov rex.WRB push (bad) ss lahf or cld (bad) xor pop movabs popfq clc push (bad) test add insb (bad) (bad) jo ror (bad) cld jb (bad) es rex.WRB mov mov (bad) jne fdivl xchg xchg movabs pushq add out cmp adc fisub cmp shrl sbb adc fcomps adc jrcxz jmpq ror add je shll (bad) mov mov nop movabs stos pop data16 xchg sub cwtl jge xor (bad) (bad) sub movsl (bad) add (bad) and xor jae (bad) pop (bad) hlt imul (bad) xor rex.XB movabs mov addr32 cmp lahf enterq rex.XB or push and callq (bad) mov rex.WRX cli (bad) jmp rex.WRX movabs testl (bad) rclb xchg fsubs sub (bad) pop cmp fwait sub (bad) cmpsl movabs callq sbb cld addr32 mov cmp pop and ja adc xor xor mov rex.WRXB jno int3 test mov imul pop jrcxz jrcxz adc (bad) xchg sub push xor rex.RXB (bad) mov (bad) sti or adc sahf (bad) movsb cwtl adc fmuls loope mov outsl (bad) rex.WXB mov cmp add jbe lret (bad) or mov fwait sbb jle movabs js sub out fist add (bad) cmpsl jg std cli (bad) jle (bad) xchg xor xor jnp adc lahf pushfq loopne callq sbb (bad) push (bad) gs and insl callq rex xchg mov rex.WRX stos rcll jnp or leaveq rcrl out clc sbb loop addr32 jns and cli cmpsl mov add int3 movsl cmpsl sbb cltd jmp fs (bad) pop roll jrcxz imulb and (bad) add rcrb cmpsl cli xlat jg mov imull stos movsb xchg in je imul scas repnz or (bad) adc xor push in pushq mov or sbb lock jnp test js mov (bad) fstpl mov addr32 rex.WRB adc test sbb fxch jno jo pop (bad) adc test movsl (bad) in iret mull (bad) adc push pop mov int or or adc mov xchg push retq rex rex.RB and cmp (bad) sbb js ss cmp sub or mov jae stc faddl in rex.WR or xor and rex scas jmp push (bad) fistpl xchg adc xorl push (bad) in adc jb rcl out rex.W sbb sub xchg popfq (bad) retq push mov adcb (bad) mov add jp rcr jle test ja pop loop sub callq and rex.B rex.B push mov xor in push sbb add adc sbb jne lret incl mov mov data16 pop (bad) repz xchg and pushfq mov adcl rcl sub pop jle mov popq cltd lret out adc mov sbb pop mov sub (bad) mov bnd in sub mov and sbb scas or xor xchg sbb jns mov rex.WB movabs out (bad) and push mov (bad) jae mov adc add (bad) pushfq (bad) sbb jrcxz in or (bad) sbb rcll push test rex.WXB and popfq adc iret push sbb ficoml (bad) pop pop and mov adc in cmp rex.RXB iret mov add mov mov or test and and jns lahf pop cmp xor (bad) rex.WXB rex.WR xchg add xchg (bad) (bad) movaps mov ficoml pop sbb pop jmpq (bad) adc rex.RB fdivrs xchg cmp mov jrcxz xchg in jmp add push xchg scas lods xor push sarl (bad) pop xor rex.W movabs ja adc push in (bad) mov or add imul or mov xchg mov pop hlt (bad) pop adc add cld insb add add popfq add (bad) cli imul test mov add lock movb lea int (bad) adcl mov std (bad) add stc fistpl jle push retq callq and icebp adc (bad) and push retq sbb (bad) lahf (bad) cmp (bad) xor scas rex.WRXB ss ljmp push or mov xor (bad) push ficom (bad) movslq rex.WRB (bad) (bad) xchg rex.WRX xchg adc es lock ja pushq cli (bad) rex.WRXB xchg jb add (bad) (bad) scas fstpt sbbl add or xchg stos (bad) insb jae sub leaveq sbb (bad) retq test retq xlat or (bad) out fildll mov adc sub xchg mov rex.B xchg rex.RB data16 insl mov leaveq cltd sub jae jne je shrb vpunpckldq stc rcl jp sub jle mov ss icebp fcomi xor callq sub lea (bad) pop (bad) mov jmp xchg adc sbb sbb mov push lret (bad) (bad) pop div and (bad) andl pop add mov sub (bad) movabs or loope pop jp rolb mov pop (bad) rcrb subl push rex.RXB jne mov movslq in loopne pushq (bad) mov sub je xchg cmp (bad) xchg (bad) in ror or callq xchg sbb sbb xchg sbb fidivl add adc mov movabs cmpsl (bad) mov adc sbb and (bad) and adc repnz ficoml sbb mov cs cwtl xor xchg rex.RX fmulp cmp mov scas (bad) repnz xor out sbb and retq mov xor (bad) idivb (bad) add mov add rex.WRB (bad) fwait es (bad) sub fadds (bad) add and vpunpcklwd or or xlat xor cmp ja push incl mov stos (bad) (bad) callq sahf in (bad) repnz mov fcoml (bad) xchg adc psubb loope cmpsb and pushq in (bad) enterq out loop lret (bad) fstpl adc (bad) mov cmp mov jo sub or mov xchg adc clc in insl adc xlat (bad) scas clc rex.WR cmpsb sti (bad) and (bad) xor cwtl mov xchg xchg xchg sbb retq imul (bad) cmpsb in outsl rex.WXB add hlt popfq sbb gs pop xchg and xchg (bad) mov push cmp mov adcb cs sub pop rex xor jbe out sahf mov ffree xchg addr32 jl adc movabs rex.WRX adc in lock out and sbb bnd jg xchg jae rex.RX (bad) add lea add cmp or and loopne push jg (bad) and inc js pop xchg sbb fcmovnbe and fidivrl adc fcomp xor movabs mov mov movabs xchg sbb adc fldcw and sub pop jo orb sub retq sub cmp es and sub add pushq rex xchg pop (bad) jnp cmpsl xlat rex.XB test (bad) mov and out push lret ss lods cmp add movabs stos xor (bad) xor (bad) mov mov lea push pop adc movsl imul adc outsb and pop mov in out xor (bad) ds rex.B sbb mov push and ss adc in mov mov (bad) (bad) pop pop fxch cmp (bad) cmp mov adc outsb outsl ljmp adc data16 xor adc add stos rclb andb loope retq jrcxz jl sub cmp std pop cmc popfq std adc mov leaveq jmpq clc sbb sbb xor (bad) rex.WRB cmpsb (bad) rcll sbb jo retq (bad) test roll repz movabs out mov scas rolb rorb (bad) (bad) fldenv sub js mov std sub xchg lock int push lret sar adc xchg lret and enterq xchg imulb (bad) rex.WX rex.WXB cmp pop lret or sbb (bad) or movsl clc (bad) in sahf mov xchg js (bad) lock cmp xchg sbb and push sub (bad) in out rex.WB xlat sub rex.WB repnz push or adc jne test (bad) rex.WX fdivrs movabs lock pop scas cmp xchg (bad) callq es (bad) sbb sahf pop rex.WXB addr32 jmpq jo push mov xchg test jb (bad) jns push popq in imul fildll rex.RXB fdivrs in sar sbb sub (bad) mov jbe rex.WRB movabs frstor mov rex.XB icebp rex.WRB xor mov push js shll lret sahf out mov xchg adc test and mov or pop jbe xchg lock (bad) mov push rex.W xchg cltd test mov rclb mov pop and scas sbb add sbb int add cmc out (bad) pushq sbb xchg loop mov gs leaveq (bad) mov (bad) sbb sbb sub rex.X xor stos repz mov rex.RX mov in repz loope fwait xor add iret cmp retq (bad) jne mov sub pop jne out sbb sarl push decb sub fsubrs mov ja outsb rex.X xor sub jp test cmc add pushq rex.WXB mov pop rex.B jle shrb jp or fist shlb push jmp mov lret movabs or fdivl nopl mov xchg mov push rex.WRX repz sub (bad) rex.WRXB pop cmp es testl pushq cs mov int rex.X sub rex.RXB add xchg rex.R add (bad) mov and push rex.RXB bnd cmp (bad) out sti mov es int insb divb mov add movsb jmp out stos xor add lock pop loope jns mul push repnz or or (bad) testb or mov add gs out loopne rex.WB or xor cs add shll loope xlat insl pop (bad) (bad) jge divl mov callq adc xor decl or sbb jmpq movabs (bad) movsb add andb cmpsb cmp movsb xor sbb jg xchg lods rex.X xor mov std lret ja (bad) adc rex.XB test mov (bad) popfq add add sub movabs add pushq enterq pop insb sub adc lretq repz out adc pop pushq in pushq rex.XB mov movabs vpsubq (bad) stos leaveq scas xor rol addr32 mov (bad) fsubl mov movsb add add jge (bad) adc adc and out test sub jl out rex.WR (bad) (bad) (bad) jg,pt xchg (bad) iret outsl (bad) adc fnstcw rex.XB lea loop and adc jrcxz leaveq (bad) stos jne (bad) (bad) mov jle outsl adc xchg (bad) adc sarb adc mov pushq cwtl fisttp cmpsb loop jge jp (bad) push (bad) pushq callq sbb scas or popq sub xor pushq add cwtl mov rorb (bad) js loop insb adc fcmovb addb out rex.WB in rex.WRB callq jne jnp mulb fmull push sbb in ja fstps add mov or (bad) add jmpq or int3 icebp or hlt push scas xchg mov xchg sbb movabs mov mov jae xor (bad) (bad) jbe insl pushq pop xchg push pop sub cmpsb rex.RB mov stos sub push cltd sbb jl (bad) and cmp scas in rcr add rex.WX pop (bad) (bad) rex (bad) mov stos (bad) inc add cmp pop rex.WRB popfq enterq in add jrcxz rex.RXB ss rex.RX add jns sub sahf adc fstpt imul iret popfq scas sbb (bad) lods xor add cmp jl pushq movabs retq adc (bad) pop cmp rex.WB cs in (bad) jge sbb pushq lret adc loop mov adc jne pop insl retq add sbb test nop xchg fistl int3 lret lea fwait cmp (bad) imul (bad) repnz cmc jg adc rex.RX rex.RXB data16 adc movabs movabs cmp nop (bad) callq scas out mov stos push jne (bad) jno repz and in sbb xor out (bad) gs lock rex.WRX jno rex.WB rorl jmpq lods (bad) sarb xchg xlat pop cmp add or push adc rex.WRB mov pop add hlt rex.RXB insl gs (bad) or lods or lret or adc fsubs int3 (bad) rex.RX loop (bad) jmpq pop (bad) xchg (bad) jl repnz mov or shll movabs cmp xchg mov cmp scas and xchg xor adc and (bad) cmpsb movabs jb xchg and xchg sahf js and jle mov mov test cli add callq xchg cmpsl jge or mov or push (bad) cmpsb out (bad) negb and rex.RX adc (bad) sub ds (bad) and lock sti rex.B ss fildll test push sbb and (bad) add mov mov in add (bad) or sbbl cld jae jne jmp mov xor mov sub (bad) (bad) lods test xchg sub cmc and pop jmp nop js (bad) add and mov movabs xor movabs jbe pushq jle jl fcom push adc pop movsb or rex (bad) adc in (bad) mov or movslq adc or addl in rorb (bad) adc pushq jmp insl xor adc (bad) lahf adc out (bad) or (bad) push ror adc addr32 xchg adc push xchg sub or std (bad) or adc repz cmp sbb enterq sub retq xchg (bad) (bad) pop mov addr32 jae repnz xchg pushq pop mov addb cmp adc stos cmp enterq enterq and cmpsb xor jnp cmp jmp pop (bad) test scas in sahf nop cmp or rex.XB rex.X sbb in repnz popfq xchg adc decl movslq stos movabs (bad) rex.XB xlat iret or cmp (bad) imul rex movsl xor mov hlt jmp and movabs sbb rex.RB jno (bad) je jae adc in mov pushq test mov ficom mov fadd (bad) xchg (bad) sbb js sbb pop (bad) mov rcll cltd mov adc (bad) cmp cmp mov jmpq or rex.XB xor test mov rex.RB (bad) jmp sub rex.RXB mov push mov xchg mov add sub (bad) add pop cmp mov and (bad) xor out mov js rex.WX mov or movsb push pop repz sub sbb out outsb sbb cmp mov lock fwait jno data16 cmp repnz rex.WX pop idivb enterq gs rex.B (bad) imulb mov add in clc (bad) cvtps2pd retq scas in (bad) movsb (bad) rex.RB lock (bad) push (bad) mov enterq (bad) and cmpsb mov stos sub ss rex.X xor fdivrs (bad) jno idivb (bad) xchg outsb (bad) mov rex.RB add rcll ds xchg jmpq or retq (bad) in movabs test (bad) (bad) xchg fcomps cwtl icebp test adc xchg pushq xor nop xchg (bad) fwait sub cs fidivr movabs adc (bad) or jp rex jmp xor fsub loop stos callq scas lods jo pop gs repz enterq rex.WX (bad) mov hlt (bad) add lock mov stos (bad) mov popfq and (bad) mov rcl int3 gs repz test sub (bad) (bad) xchg mov rex.WRX or pop mov add fistpll stos loop pop (bad) jle mov xchg xor fdivs pop (bad) push mov pushq adc imul sti push (bad) adc cmpsb insl xadd addl sti jp imul (bad) or (bad) jne xchg pop fsubl shr lea jns cmp jl (bad) je cmp (bad) mov leaveq mov pop adc sbb (bad) or jge xchg mov ss int adc pushq mov adc (bad) jne jb adc leaveq push (bad) pushq xchg sbb rep push out adc jg adc (bad) mov adc cs sub cld pop (bad) int sub rcrb mov cltd (bad) rex.WRXB xchg js rcll sbb xchg push insb adc test (bad) add rex.RXB jo jrcxz mov or pmaxsw cmpb mov cmp rex.XB lahf (bad) imul cli (bad) jmpq clc ja loop add mov rcr jb es int3 lret es jb mov (bad) or test rex.XB pop bnd xor sbb or in xchg pop mov rex.RX rex.RXB lock and (bad) push outsl (bad) (bad) shrl sub sbb xchg or fsubr enterq or xor scas mov mov rcl adc mov cwtl ficompl mov adc cwtl (bad) (bad) pop and sub mov out (bad) (bad) jg and pop fs xor (bad) cmp cmp (bad) stos imul in adc cmp xchg (bad) jns idivl pop adc (bad) pop sbb mov (bad) add (bad) mov jrcxz retq rex.X and clts xor lock rex.RB add sahf popfq in xchg fcoml pushfq std (bad) xchg push (bad) leaveq fneni(8087 ss (bad) movabs adcl (bad) lahf insb (bad) loopne cmp (bad) flds adc sti (bad) cmp outsb in rcrl adc adc (bad) in mov or in (bad) jno (bad) sbb (bad) movsl out sub std cld add (bad) xchg movabs cwtl out movabs mov mov adc sbb push adc movabs push sub sbb mov vunpckhpd (bad) cmp sahf clc jmpq not divb test pushq cmpsb out lock movabs or push xchg adc add lock fcmovne (bad) (bad) mov sbb add (bad) in sbb ds jb subb push out test cwtl (bad) lahf hlt jl and xchg out (bad) stc ss mov scas sub push mov jne popfq testb fs out xchg cwtl (bad) xor mov insl lock adc stc repz mov addr32 js add push xor adc rcll mov jne (bad) (bad) add sub lods push push test (bad) test mov int3 es adc icebp xchg gs push (bad) fadd rex.WXB int3 xchg popfq or mov sub addr32 mov jge add testl mov mov js mov adc add cmc adc cltd movabs movabs adc pushq rex.RX adc mov (bad) imul clc mov pushfq xchg stc or sub notb (bad) adc lock fstpl lret fbstp adc mov xor (bad) nop iret lea hlt or (bad) fwait out mov cmpb (bad) (bad) cmp std (bad) and and mov (bad) xor fs je repnz xor add rcll (bad) mov adc pop (bad) seta (bad) lret or std (bad) repnz adc lea ja adc rex.B (bad) clc (bad) mov mov cmp push mov pop and cltd xchg (bad) (bad) (bad) icebp jae xchg mov imul adcb add sti rex.XB pop lock repnz movabs xchg addr32 clc enterq lock (bad) (bad) and add data16 outsb jle loopne fist cmp scas callq lods sbb add cpuid mov loopne (bad) push mov ja pushfq fcmovbe mov cmpsb fisttpll or rex.RB scas add roll loope and cmp jl sbb cmpsb xchg mov pop int xor stos mov int rex.RB jnp (bad) adc cwtl rex.WXB push xor movsl mov ss sub fldt leaveq or and xchg push rex.WX cmp fsubr movabs test enterq or std pushq adc cmpsl std and pop movabs xchg (bad) clc fwait jne rex.X adc or and cmpsl sahf mov (bad) add adc xchg rex.RX rex.XB xor (bad) pop fdivrl retq adcb movabs (bad) sub stos adc xor (bad) adc js xchg nop (bad) lods xor xchg rolb (bad) sub xchg (bad) cmp push stos stos adc es sbb (bad) mov push adc mov (bad) mov push mov mov or (bad) pop adc mov or adc adc scas xlat push adc movabs data16 sub adc xchg shlb mov rex.WRB stos sub cld insl mov imul push push rex.WRXB jo hlt fdivrl sbb push jp retq adc movsl rex.WXB insb adc jns sub adc movabs lret xlat xchg push rex.WR (bad) pushfq (bad) mov mov sar adc lret push pop adc xlat and iret rex.WRX xchg (bad) cmp push push adc shlb movsb rex.W (bad) mov pushfq xchg xor rex adc callq add mov cmp addr32 rex.WRXB rex.XB repnz xor out or jge pop jbe jmp mov adc hlt mov mov mov jbe (bad) jno cmp stos (bad) (bad) jae adc repz test int3 sub rex.XB imull adc add vpmulhw mov cmp and test mov or rex.RXB imul outsb adc rex.WRXB adc and cmp push sbb test icebp callq (bad) jp mov (bad) pop sbb mov fdivs push rex.X pop or enterq lret cmpsl cmp xchg (bad) (bad) jge (bad) mov fwait cmp (bad) out stc int3 in and iret rex.RXB scas push and or pushfq in std callq jb and adc xchg (bad) rex push test outsb out fnstenv mov mov add faddl gs gs jnp mov or std rex.RXB mov jmp cmp rex.WB in jnp sbb add xchg rcr outsb sub out rex.WXB sub fwait cwtl pushq pop fstl and add mov (bad) or xor mov or sub jnp shll movsl jmp out add popq addl in adc (bad) loop rex.WX addb adc cmp mov test stos int3 lcall mov cmp (bad) and movsb mov xchg sbb adc and jle or cmp rex.WRB (bad) adc rorl cmp adc xor push (bad) clc jg add sbb fs sbb xchg (bad) push adc (bad) xor adc mov rcr jmpq (bad) rex.WR enterq adc (bad) data16 lock xchg jb (bad) out out clc or xor (bad) int3 (bad) jge adc (bad) pop (bad) repnz add add nop cvtps2pd fwait mov stos cmp cmpb and or movabs (bad) jg mov push lret (bad) jnp sbb test mov xor mov jg jb sbb cmp cmpl in jg sbbl rex.R outsb and loope pop (bad) mov ja jo sahf (bad) adc and pop xlat cmp (bad) mov mov or sahf (bad) (bad) (bad) cmp test xchg rex.RX mov jmp ja (bad) fildl jno rcrl insb (bad) cmp cmp xor add cmp sbbb pushq repnz or jnp scas (bad) mov jl sub clc pop je fcomps cmp movabs imul (bad) fistpll rex.XB stos lods outsb xchg fcoms sarl psllq pop mov fsubl rex.X push retq iret fiaddl out decl push int3 mov sub mov (bad) fldcw sub or movslq jne outsb jno cmc (bad) pop jge and movabs divl out std (bad) jmp incl jns (bad) hlt xor (bad) in stc jb pushfq sub xchg adc clc pop lock lea adc (bad) (bad) callq or cld ficoml lret push adc add repnz int3 jno mov (bad) ja mov pop fwait mov jl (bad) pop and sbb xchg xor (bad) sti mov test out imul mov add xchg pop rex.WRX (bad) (bad) (bad) sub cmp psllq movabs int rolb jb (bad) test pushfq insl rex.RB rcrl xchg sub sub outsl rex.WRB icebp rex.RB cmp fwait in fchs rex.B jae (bad) in insb movabs mov test add scas and rex.RB mov rex.WB xchg cwtl cmc rclb in adc xor xchg cmp (bad) int rex.WB imulb ja sbb enterq adc cmp retq adc mov add lock adc xor rex.RXB and lods jb pushq in xlat xor loope rex.W outsb cmp (bad) (bad) fsts or or cmpsl (bad) (bad) xchg adc mov pop (bad) mov enterq sbb add (bad) cmovle fdivrs rex.RXB rex.RX fmull (bad) lods jnp movabs insl sti and psubsb lods repnz int3 lret cmp jns or (bad) or pop (bad) enterq xchg cmp xchg or (bad) leaveq out pushq push (bad) jl add rex.WX pop (bad) (bad) adc (bad) js jb (bad) fistpl sub out and or stc push icebp adc in (bad) (bad) scas mov cltd adc (bad) or sbb mov add movabs movabs hlt and add stos (bad) js sub jge divl jle rex.WB (bad) rex.R jmpq nop (bad) pop push rex.WRXB rex (bad) adc sbb rex.WRB callq cmpsl (bad) sbb pop (bad) jle (bad) jo cmp adc shl andl scas scas (bad) (bad) movslq cltd adc movabs movsb adc mov xor pop movabs push out (bad) mov sub or (bad) sbb push (bad) push rex.RXB sub lock push fcmovnu (bad) (bad) (bad) test sub js pushq add out mov jle loop mov adcb xchg rex.WRX or rex.WXB rex.WX add adc (bad) rex.RX (bad) mov cmpl xchg add adc push repz (bad) clc sub add or push pcmpeqw ja adc gs adc jle (bad) rex.RB xchg adc push push cmp adc scas (bad) je push insb or or cmp mov mov or (bad) in cs cmpsl adc out push mov lea fwait (bad) adc adc hlt or adc adc lahf sub add cld adc xchg rex.RXB sub mov lret test mov cmp (bad) retq jge (bad) mov and (bad) xor adc test xor rex.RB out mov lock jb mov sub (bad) adc out jbe xor in (bad) out callq xchg clc or adc rex.B jge fstps fisttpll outsb jmpq test mov add or repz (bad) xchg cmc sti cmp std adc test lret stos (bad) rex.WX mov pop xchg in jb sbb xchg out data16 add mov pop (bad) (bad) push ds jno pop movabs jb xchg add and clc mov (bad) fadds rex.WR rex.WRX add leaveq sub cmp movsl fstps rex.B rolb mov repnz add movabs (bad) test mov mov je add and vcvtps2pd lock add test sub mov mov or (bad) rex.XB pop nop mov (bad) mov mov (bad) fsub mov push lods add cmp xor cwtl mov xchg add movslq pushq push jg mov xchg xchg or mov fsubr loop jmpq add (bad) mov (bad) lret fucomp imul and (bad) leaveq imul xlat rex.B and movsb jae test lock adc and cld xchg int xchg rex.WRB rex.RX repz mov jno rex.WRX jnp test clc repnz scas sbb pushq jnp (bad) sahf int3 cmp mov xor jno jae add movabs int orl adc mov repnz mov add cltd mov xchg rolb and push pop and add push add adc andl push (bad) mov pop (bad) xchg rex.RX sbb movl lahf adc cmp lock xorl adc xchg sbb jo loope xor in rex.WR (bad) push (bad) (bad) adc sbb loopne rex.B lretq sub push (bad) sahf add imul adc mov repz (bad) sub xchg fs push jno test mov lods ss rex.X int adc add sub (bad) mov mov jnp jno insb xchg jl lea adc fmuls addl pop push xchg adcl sbb mov mov fsubl enterq xchg push cmp push rex.R push idiv sbb (bad) clc push (bad) retq adc stc cwtl loope adc and or rex.RB bnd mov add rex.B xlat rex.XB fs pop mov movabs in rex.X mov divb jno incb int3 cs cmp int3 jrcxz (bad) nop mov push cs cmp jrcxz outsl (bad) gs pop movsb xchg movslq adc in mov movsb jmp rex.RX jb lahf xor (bad) pushq xchg and int retq xor add xchg mov (bad) rclb mull test push pop pop in mov cmc pop jo xchg outsb sbb movabs pop xchg int (bad) sub add jnp callq xor xlat out je or mov retq cltd (bad) rex.WRX and sarl fptan shr mov addr32 rcrb (bad) (bad) pop jo sbb rex.R movsb (bad) in movabs (bad) mov adc sub (bad) push rcrl mov clc movsb stc pop pushfq pop push addl out callq scas (bad) rex.WX adc cwtl js push pop jl data16 lret leaveq (bad) adc rex.WR jne adc jp xchg sti adc or cmpsb clc addr32 (bad) push (bad) lods rcll clc mov mov rex.X rex.RB xor adc ds rex.WX sub popfq and cmp sub add jo insl negb add jns pushq rex.WX fwait mov sbb push movsb rex.RB rex push cmp rex.WRB movabs cmp fdivrp test jg sahf jl (bad) sub rcr iret jne callq adc insl cmpsb jo xor add mov adc fadd adc addb push (bad) push sub sub adc xchg mov (bad) rex.RXB pop lret or push rex.WRX xchg adc cmp adc addr32 sub and stos sub lods (bad) mov add adc (bad) in adc cmp ss test add and rex.RX int cs outsl (bad) outsb cli sbb adc jne ds sbb addr32 jl mov rex.WXB test hlt pop sub sbb cmp icebp imul rex.RXB lret ja (bad) mov mulb je push pop stos (bad) pop sbb (bad) lock ficompl jnp sbb mov or (bad) js icebp cmpsb (bad) scas and out fdivrs int3 xchg mov push jrcxz xor (bad) fsubr jo xchg adc rex.WR mov xchg repz shlb sbb xchg adc sbb and (bad) callq cmp adc callq (bad) jrcxz outsb jbe jp and rex.RB std jb mov and pop lahf imul push add and jmpq (bad) or (bad) cmc and popq jo imul adc (bad) rorb (bad) pushfq callq (bad) mov rex.WB and andl (bad) addr32 es test rex.W pop jmpq cld cmp js,pn rex.RXB xor xchg imul (bad) (bad) rex.WB or vdivpd insl fidiv adc xchg sbb mov cmp fdivl add cmc xor (bad) jne sti callq adc cmc adc (bad) xor adc mov push mov mov ss or xchg cmp in rex.RX rex.WX xchg rcll popfq sbb adcb leaveq xor (bad) rex.WXB data16 movslq adc fldcw (bad) out cwtl retq lret adc mov pop mov xchg int3 or push (bad) (bad) fs jg sbb (bad) repz or pop cmc cmc movabs fldenv orl mov out adc (bad) jg mov xor (bad) cld (bad) or outsb sub lock scas add rorb mov and (bad) rex.WRXB test xorb movsl jno scas insl loope frstor mov add xchg and outsb fisubrl add or js (bad) sub orb xchg (bad) sahf (bad) outsl lret fcmovnu adc (bad) mov scas fwait clc (bad) fsubrl add (bad) movabs cmp fs rex.RXB imul xchg fdivs rex.WRB leaveq addb xchg mov xor movabs retq xchg test and jmpq jns stos cmp and fdivs iret rex.WRX in (bad) pop jns mov (bad) int push callq rex.WRXB subl or pushfq mov cmp shl (bad) rex.RB out mov adc movsb mov or mov movsl test out (bad) mov jp push mov int3 movabs or or movabs add xor add movsl enterq jae lock (bad) mov fdivrp add mov or (bad) test mov fwait stos pop mov or sar std sbbl out jmpq popfq sbbb mov push jno (bad) mov cwtl jns adc jmpq pushq lret out jne or insl xchg movabs (bad) jge (bad) rclb pop mov sbb (bad) cwtl (bad) fs push xor lods out mov jl (bad) je and (bad) (bad) hlt mov (bad) lods (bad) or adc pushq mov pop rex.B rex adc jno out (bad) mov mov ja pop add callq xchg (bad) push cli in adc out (bad) int3 adc mov fsubs mov (bad) stc cld (bad) or mov rex.WR and (bad) in mov ja sub (bad) pushfq mov sbb (bad) mov cmp cmp cmc es clc ds fcomps fdivrl data16 movsb in (bad) (bad) ja jl (bad) push mov cmp nop lods (bad) push push (bad) movsb cmpsb out sub (bad) adc sub adc (bad) (bad) adc xchg xor mov flds pushfq (bad) (bad) xchg xchg xorl cmp adc je retq (bad) sbb xchg pop pop lock push mov (bad) xchg jno (bad) ja (bad) fwait sub adc (bad) cmc stc gs adc xchg je cmp (bad) add clc sbb pop adc cmpsb mov (bad) mov push mov stos or sub mov in adc push (bad) cltd movabs push (bad) lods add clc cmpsb xchg adc ffreep or and jbe push mov in fsubp adc xchg (bad) fsub (bad) lret movabs (bad) cmp test mov xchg xchg (bad) in mov cltd pop test mov (bad) notl movabs jne sbb rex iret insl jmp mov xchg out xor imulb rex.WRXB rex.WXB repnz add xchg push and js in sbb jo xchg adc stos es (bad) stc adc sbb mov xchg add insl rex.WRXB nop add test xor lahf std xlat shll (bad) pop mov mov (bad) adc rclb int3 cltd hlt sub hlt rex xchg jge icebp jbe clc rex.WRXB (bad) pop rex.WX sbb fdivrl and out adc leaveq sub or (bad) movsl imul outsl js (bad) sti mov jno mov adc andl adc cld rex adc sti rex.WRXB notb (bad) lret pushfq retq (bad) jns add imul imul adc add stos jmp lahf sarb rex.R or adc mov stc cltd (bad) (bad) movsl xor push adc in or (bad) fwait pop sub (bad) (bad) (bad) cmpsl mov and ja retq callq pop movabs lock scas (bad) xchg test rex.WR or out jg mov mov jne lea cwtl f2xm1 push popfq xchg xchg cli lahf data16 rex.WB sti repnz cmp cmp xor (bad) mov xchg test shll sub mov sbb adc cmp cmc xor fisub adc vaddss sub int xor add adc rex.WRX add fs jle repz xchg jns cmpsl fistpl adc test insl rex.W jno pop adc jne sub cmc cmc (bad) movsb mov mov jo or (bad) adc rex.W hlt sub mov add fwait sbb rex.WRXB xor ja nop and sbb cmp cmc adc add cmp rex.WB rex.X je mov push mov (bad) out repz adc int3 cmc or cmp xchg jle repnz adc sub adc adc add test xchg adc ds adc mov in mov push cmp outsl movsb xchg sbb adc (bad) push (bad) push (bad) cld addl (bad) xor xchg (bad) xchg cli in fwait clc (bad) test adc or pop mov rex.W loopne jo icebp loop fsubrl cmpsb rex.RXB pop fcomi rex.WRXB xorb add js in leaveq pop (bad) test scas sbb loope adc or adc (bad) movabs fisubl cmp adc (bad) mov xchg stos (bad) cwtl movabs test adc add mov push (bad) adc cld and imul callq (bad) adcl mov jbe movabs rorb jbe rex.B xchg mov jae hlt pop pop jp jns mov adc mov stc rex.R orl decb adc imul push pop push pop cmp xchg scas (bad) push cmp enterq jne add lahf data16 add xor (bad) cwtl callq xchg cmp mov or mov callq add movsl or rex.X push sbb adc flds scas sub fstpl imul pushq and xor sub mov rex.WRB jne mov hlt (bad) rex.WXB xor mov fcomps test rex.XB jge stos jp (bad) adc add (bad) adc callq and hlt rorb hlt loop jl mov mov mov (bad) sub mov fucomi mov rex.WX enterq (bad) or pushq and icebp and jp rex.RXB cwtl rex.XB rex.WRB rex.WRXB pop jne out and pop or out gs mov gs cmp fs xor fimul rex.WX xchg jne (bad) lahf (bad) mov and add (bad) iret mov sbb stos (bad) test add add rex.X mov mov pop adc roll callq div lods adc push fimull (bad) rol mov (bad) mov andb rex.WRB sub cmp mov add pop movabs add or movabs (bad) cmp pop mov xchg scas and sub pop cwtl mov (bad) (bad) out rclb test (bad) adc mov stos enterq rex.B icebp movabs or sub mov loopne rex.WRB lock or je mov lret sbb adc rex.WXB (bad) int3 frstor rex.RX callq fidivr adc xchg add sub lock sbb (bad) (bad) mov xchg hlt cmp movabs fs (bad) enterq cmovge ds jno rex.WR xlat and sbb sbb mov sbb rex.B and (bad) rex.WR xlat shlb xor jb push (bad) retq pop push test rolb sbb pushfq cltd js xor std add rex.X sub adc repnz (bad) mov orb rolb xchg and rex.WRB pop popfq adc jmpq mov (bad) (bad) callq js sub pop callq pushfq fnstsw fdiv jmpq in sub shlb mov cli enterq push pushfq movabs xchg fwait (bad) fdivr (bad) out std jnp stos (bad) test pushq insb (bad) pop (bad) out (bad) mov xchg insl fsub cmpsl out and mov sub mov and jb std rcr fiaddl xor movabs imul movabs add in mov sbb jne out (bad) push rorb pop xor (bad) movabs movabs in lahf scas push fcom fwait mul cmpsb or push or fsubl add mov jmpq rex.X sub push fwait int rorl jl scas fs lock std and jno (bad) jno mov xor movslq rolb push rex.W xor (bad) jno push rex.WR pop sbb add out pop or int3 pmaxub jno rex.XB shll add in sub callq (bad) xor hlt (bad) int3 lahf rex.WRX rex.RB fs rex.B mov mov jge add xlat and (bad) or stos adc sbb int mov rex.R (bad) and test movabs sub rex.X mov push cli movabs jle movabs loop rorb mov (bad) mov ds mov xor cwtl callq in lahf cmpsb adc push divb mov push negb (bad) sbb adc fcompl data16 push adc jge (bad) rex.RXB jne icebp cwtl (bad) jne and mov sbb movabs (bad) movabs sub retq seto subb (bad) push cld scas or rex.RX addr32 adc idivb xchg (bad) mov mov (bad) leaveq ror (bad) sub cld or test xchg mov and mov xchg movabs rex.W int3 (bad) xchg out add xor pop adc jmpq jbe icebp and adc jae test or fidivr in lea movabs add pop xchg (bad) jbe stc rex.WRB and movslq xchg (bad) jmp adc mov push ss or push push mov imul imulb (bad) jg and shlb (bad) jbe repz fstpt and (bad) sbb and mov (bad) int3 sti divps movabs js cmp (bad) (bad) sbbb rex.X push jo jbe roll add mov mov insl cmp sub repnz pushq mov adc movabs xchg test mov and loop mov jbe stos rex.WR in sub fucom gs adc (bad) movabs cmovnp adc pop popfq and fisubl xchg outsb outsl xchg (bad) (bad) enterq outsw adc push mov add pop pop out fmul out or sbb fsubs push jno xor movslq loope pop sub add push rex.WRXB mov movabs test lahf mov lahf jg rex.R movabs subb jae add mov sbb pop jmp sbb mov xchg (bad) xor pop and xchg repz xlat (bad) push std movabs movabs cmc adc adc jae (bad) jne test adc xor int3 adc rex.RXB stos fmul cs (bad) pushfq sbb rex.WRB andl or movabs xchg retq cmp xchg xor adc mov insl cmc adc pop in scas adc cld ds rex.WRX mov adc ja mov cmp pop mov jae (bad) pop (bad) cmp retq mov (bad) sub int and lods adc (bad) (bad) sub (bad) shl xlat pop pop (bad) (bad) mov add add mov fmuls (bad) xchg rex.WB xchg test adc data16 (bad) mov int3 outsb (bad) (bad) rcr pop jmp (bad) jbe scas jne rex.WXB jle rex.B movabs lods adc fcoml mov cmp (bad) (bad) std adc sub notl rclb fwait jg (bad) adc scas xor (bad) sub mov adc insl ds xchg test vpxor (bad) xor xchg add cli lock loop popfq lea (bad) notl clc adc or jmpq icebp or pop pushq and fdiv sub adc push mov mov pushq jne clc or (bad) negb stos rex.WRB cli fs callq rex.XB (bad) out mov mov or test mov jae (bad) mov rex.WXB leaveq rex.WX push (bad) sbb mov lea jmp (bad) push jnp xchg cmp outsl xor adc lods out adc je repnz mov and xor (bad) pmaxub and or and rex.WRB cli add mov or fidivr jo push lret xchg mov adc (bad) jp test (bad) outsb lods adc fistpll mov or push mov and (bad) callq hlt rex.WX rex.RX (bad) fmul icebp lret rex.WRXB hlt (bad) (bad) cld hlt xchg movsb sub insl adc (bad) add rclb or out lock xchg mov callq fucomi (bad) cmc sub xchg (bad) test sbb sbb cmp xchg push sub adc enterq cmc out adc enterq outsb xchg mov xor and std and adc movabs jnp mov fnstsw pushq mov fisub out lock and sub cmp nop (bad) stc lea std movslq shlb movabs adc and lock ds mov sahf fprem1 (bad) movsl mov fdivl cwtl js fcoms add jbe movabs sti mov (bad) insb (bad) push or mov push (bad) jl in (bad) mov xor cmp movslq adc pop cmpb sbb (bad) pause retq mov setnp mov fmul (bad) idivb jne sbb xchg pop movabs outsl in (bad) out jrcxz rcr xor (bad) jno (bad) rex.B movabs imul pop jne push rex.B (bad) adc (bad) loopne and sbb rcl (bad) ja lret and or loopne iret (bad) xchg insb test adc movsb pushq mov lock mov mov ja rex.WB (bad) roll mov repnz jnp pop lahf or fwait sbb and retq jg imul fwait test repz pop cmp (bad) gs sbb xchg (bad) mov pop lods (bad) rex imul jno,pn add (bad) clc jge (bad) pop mov cmp cmpsb and (bad) sub leaveq mov cmp (bad) andb rex.X adc in (bad) push lock (bad) adc sub sbbb movabs rex.WB mov pop (bad) xchg in xor mov (bad) repz add rex (bad) jo mov cmp adc jp movsl pop push scas movsb cmp lock jno sbb and sub pop movabs add rex.WR hlt (bad) add jbe and (bad) adc and pushq popfq retq hlt adc pushfq (bad) loop adc pop mov mov adc es add lock adc rol shrb jrcxz int mov xchg sti cmp (bad) xor imul xlat adc rex.RX mov mov jb shll rex.WR (bad) mov rex.R adc jbe add pop fsubrl ja js mov fwait ss (bad) (bad) cmpsb jp rex.RB int (bad) rex.WRB imul rex.RXB repnz sub stos (bad) int clc mov (bad) cld retq rex.RXB in rex.XB jl rex (bad) (bad) scas fsincos and rex.XB rex.R xchg pop int3 cmp int push (bad) popfq xchg (bad) push out jns movsb (bad) stc nop cmp movabs mov adc mov lock std (bad) icebp add (bad) (bad) in movabs rex.WR sub rex.WX xchg jmp mov or xchg andb and rex.WRB xchg int3 mov movslq push (bad) in cmp pop jno shlb (bad) fildll retq pushq mov (bad) rex.WX sarb cli mov xor mov mov mov or sub std addr32 (bad) cwtl mov rex.RB repnz cltd rex.RXB lock fs (bad) xchg xchg (bad) (bad) movabs (bad) fsts fdivrs add stos imul mov pop movabs (bad) push mov insb jnp and xor nop mov add (bad) cmp jmpq test retq adc lahf lods insb shll and adc rex.WXB adc jbe scas (bad) scas fs mov movabs adc adc fnstsw push rcrl jg lret mov pop faddl rex.R icebp jbe pop fiadd adc rex.WXB cs (bad) sub mov adc (bad) ficompl adc push jae mov and adc (bad) add adc (bad) rex.RX rex.W rex.XB in lock mov (bad) (bad) frstor or iret (bad) (bad) setl popq adc xchg (bad) (bad) sbb fcmovnbe push mov adc (bad) add loop addr32 je cmovp adc add stos (bad) out mov adc xor xchg (bad) rex.W cmpsb adc xchg callq mov rex.XB sbb rex.B sub (bad) ss clc rex.WB stc mov xor outsl lods fistpll or mov adc jg push adc rex.X (bad) mov xchg cmc cmp xor (bad) (bad) xlat sub (bad) jne sbb adc rclb adc (bad) rex.RX sbb or gs xchg sbb mov adc adc rex.RXB pop rex.WR (bad) rex.WRB xchg je test lahf pop stc jle adc sub (bad) cmp enterq testb and rex.WRXB xchg jnp fwait adc (bad) (bad) add jo (bad) cmpsl cmp clc std movsb xlat (bad) popfq jl out rex.WRXB int (bad) adc push cmp add pop jge (bad) gs (bad) sub cmp or sbb and (bad) nop and enterq je cltd jrcxz stos sub in (bad) push callq fild xor in addl xor xor mov rex.WRX out xor pop add insl cs and rol push int mov push mov lahf cmc pop adc (bad) mov and cmpsl cmp jns iret xchg adc rex.RXB xchg sti jl add (bad) (bad) or xchg xchg in jb mov cmc (bad) mov (bad) shl adc sub adc cmc jmpq pop test push pushfq retq rex.WRB fwait fs adc (bad) retq adc lret stos int3 je pop hlt xor cwtl stc enterq adc cmc divl adc xchg mov mov rclb fimul stos rclb clc andl imul lock enterq cli (bad) sbb (bad) cmp pop movsb scas gs push enterq std rex.WX (bad) mov sahf pop sbb sbb adc pop popq sbb js mov push push cmp and mov sub cmc (bad) lock mov in add add (bad) (bad) and add jmp mov xor jo add mov sbb push and (bad) mov mov lods movabs pushfq sbb movsb cmp xor icebp pushq lock mov rex.WRB fisttpll mov lods (bad) movsl mov cltd mov jg lgs out or retq mov test stos sbb clc (bad) or (bad) and lock sub (bad) push push xchg mov lea sub sub (bad) ds popfq adc fistpl rex.WX callq adc mov push push or movslq jle cli xchg insb mov cmpb fiaddl xchg jmpq sti adc and movabs in int (bad) mov (bad) add or cmpb hlt cs lock push mov (bad) mov adc insl mov add in mov cs gs jg pop rex.XB adc sbb adc andl adc pop jae (bad) (bad) cmp xor (bad) push cwtl push (bad) mov push gs mov xor loope rex.X rex.XB movslq mov jp sub rex sbb clc (bad) lods jno fisttpll repz sbb movabs push jnp nop (bad) xor sbb pushq (bad) (bad) test in retq fcomp push icebp int fdiv mov and je sbb or sbb jae rex.WRX mov std adc (bad) repnz (bad) mov imul xor sbb pushq cmp (bad) test repnz lods scas es hlt mov lret movsl jg callq jae adc mov (bad) scas pushq movslq movsb ja pushfq xor idiv mov mov stos rex.WXB or rex.W adc mov sar and adc notb clc jne pop (bad) mov punpcklbw xor lahf lock mov xlat jne and pop scas insl xchg movsl adc mov and jl push or ja insl (bad) rex.WXB pop and adc out push mov fcmovnu mov movabs add xor mov stos imul int3 (bad) fisub movq add (bad) test movsb (bad) xchg mov retq in cwtl (bad) rex.WR cmp clc lods rex.R pop fucomip movabs sub adc xchg gs cmpsl or (bad) rex.RXB mov mov int3 cmp pop and mov rex.W repnz movabs mov pop (bad) leaveq nop rex.XB pop xchg (bad) or sbb add je idiv mov je cmp push mov add lcall mov and add cs (bad) fldcw in or stos callq (bad) testb push jbe fwait jle adc and mov and loop mov rex.WRX (bad) xor cmp pop xchg clc and adc pop (bad) and cmp xor (bad) ja iret cmp xchg out cwtl enterq rex.WRX mov ja (bad) push js rcrb pmulhuw add push jmp gs test xchg std out (bad) adcl (bad) xchg cwtl (bad) jb rclb add scas cmpsb mov or callq rex.B mov lret rex ss int3 fprem1 jae (bad) int3 enterq cmp pop sub xor rex.WX in sub mov test (bad) (bad) jge mov rex.WXB add push fistp adc fiaddl (bad) pcmpgtb cmp mov or mov enterq pushq (bad) callq fisub cmp rcll callq adc sbb andb leaveq out cmp sbb sub jge sbb sti fdivs sub xchg adc push sbb jge rex.XB lock movabs sbb jle pushq callq (bad) (bad) icebp mov gs lret cmc mulb loop jmpq stos cmp sub add in ficomp movsb pop stos cltd lret in lock loopne jp idivb in pop or cmp fldln2 rex.WRB adc in loop and es retq adc xor (bad) (bad) lret (bad) lahf xchg (bad) mov push push push mov sbb or pushq sbb mov rex.WB data16 insb scas movsb push xlat or adc xor movabs adc fisttp adc mov rex.RB add push cwtl test retq sub stc jne mov or xchg xchg (bad) mov loopne scas rex.WRB xchg lcall jl mov out xchg sbb pop and jno cmp mov jbe,pn rex.WRB repnz mov idivb sub movabs mov gs mov stos pop jmpq and adc pop or mov lahf push hlt and mov cmc push jmp in xchg xchg fmull sbb (bad) dec mov rcll ss xchg repz out movsb (bad) cmp fadd (bad) rex.WRXB xchg sbb ffree clc rex.RX rex.WXB sbb fprem1 mov xor sbb fcomps sub sbb imul cld js lock xor (bad) sub cmp outsl in mov fstl rex.XB movabs popfq (bad) and push repnz xlat cmp rex.WRB xchg rex.X and loopne or xchg enterq retq (bad) rex.XB rex.W jge (bad) mov xchg jmpq jle jb (bad) (bad) adc out (bad) pop adc (bad) sub (bad) movabs jo ja loop out pushfq (bad) int3 mov mov (bad) (bad) cmp cli mov pushfq add fsubs adc imul rex.X adc movslq loope adc pop and mov (bad) sahf mov add sbb sub or or scas out rex.R jns gs (bad) rex.WR xor add adc addr32 scas rex.RB sahf hlt adc (bad) sbb iret (bad) rcrl rex rex.X adc lock adc rex.WRX jb lret (bad) add push rex.WX or test out fwait and xchg or movsl (bad) out rex.WRXB rex.RXB sub pushq mov mov loopne rex.XB test (bad) cmp mov adc insl (bad) pushfq add jp loop and sbb cmp in xor rex.WRX js (bad) rex.WRB (bad) add in or mov cltd adc fstl (bad) jge loopne retq repz adc or xor xchg cmp mov je push f2xm1 fiaddl (bad) adc pop xchg pop (bad) lea cmp cwtl mov mov rex.WR push (bad) or movslq mov cltd gs mov rex.WRXB mov rex.RXB and stos loope out loope sbb sbb (bad) js rex.RB sub mov xchg cmc xlat out xor (bad) jge nop jne xchg jnp cvtps2pi and xchg sbb (bad) lods push rex.XB pop mov sbb in mov xchg xchg clc cmp jrcxz xchg repz and in mov adc xchg rex.RXB add int outsl enterq xchg (bad) cmp rex.WXB adc cmp mov insl mov in sarl adc rcll pop (bad) rex.RXB test sbb shlb or rex.WRX rex.X mov movabs rolb jbe repz rex.RX (bad) (bad) in mov xchg add xchg jbe (bad) (bad) xchg jnp scas adcl rex.WB std cmp fdivr add (bad) mov sub cmpsl xchg sti rex.WB jmpq rex.X pop and jno xchg sub jrcxz (bad) mov addr32 sub lods rorl jnp fild popfq mov jns test rex.W scas rcl js callq jbe fucomip fistp rex.WRB jb add cmp xor xor rex.RB jmpq outsl loop push cmp repnz fsubrl negl xchg or rcr in fs rex.XB pushq js cwtl callq cmpsb pop fisttp (bad) movabs mov clc callq xor std movsb rcll imul sbb or sub pushq mov movabs sub in adc ficomp xchg mov mov push (bad) gs push xor rex.WRXB (bad) subl xchg adc cmp and (bad) in divl xor or movb retq adc pop mov (bad) jmp adc sbb movabs fisub jg retq jge (bad) mov add adc lea sbb jno sub shrl movabs xchg xchg jbe retq loopne fwait adc movsb jmp pop cld jno jbe sub (bad) enterq adc mov iret ss add movl rcll rex.WRXB add callq (bad) es out push addr32 pushq (bad) add retq fisttpll pop andnps movabs mov pop xchg xor rorl test rex.B stc int3 ficom adc cld cli (bad) rex.WRX (bad) idivb (bad) lea xor add add iret cmp cld rorb sub or rex.RX cmp push retq (bad) mov mov pop push fldt mov mov mov jp adc and test iret data16 adc push push ss xor (bad) in out shll clc rex.WX rex.WX lock stos (bad) out movsb and js cltd cmp repnz fildl add in repz (bad) (bad) rex.WRB cmp mov adc xor sub (bad) cmp (bad) movslq (bad) lock xor enterq (bad) push cmp leaveq rex.WR mov lock loop andl out xlat (bad) repz cmp lock adc pop (bad) jmp (bad) scas adc in adc xor js jmp jne (bad) mov or fistpll push imul (bad) in ja pushq icebp mov and (bad) or adc adc sarl nop jno fdivr in xchg mov stos adc sub pushfq or (bad) mov mov cli (bad) cmc adc or retq (bad) callq nop lahf pop or mov fmull rex.WB (bad) lock xchg frstor jno (bad) sbb (bad) mov (bad) or (bad) jrcxz and movsl ja retq sbb movslq rex.W (bad) rolb xor jns hlt cld mov lret (bad) rex.WXB jns mov or (bad) fdivrl sbb mov fwait jb std callq fdivrs cmp mov out test rex.RB add int3 rex.XB jmpq mov and xchg jbe cwtl rex.X pop pushfq (bad) or or in (bad) imul xor jo int push cmp rex.XB rex.WR rex.WRX cmpsb callq or (bad) mov mov cmp ss lret sbb lea (bad) cmc push cwtl popfq div and test fcompl out mov rex.WB rex.XB test retq adc xor or sub rex.RXB pop lock and xchg lret lock push (bad) adc jmpq push mov mov jbe xor imul mov cld mov movslq rex.WX adc sub movabs cs (bad) fdivrs cmp addr32 adc jb adc rex.RXB movsl or rex.WR test rex.WRX sbb xor add (bad) mov mov (bad) cwtl sbb pushfq xchg (bad) clc add mov mov rclb mov jns movabs adc xchg clc cmp mov out adc fwait pushq (bad) adc pop mov rex.R push xor (bad) push movsl adc sub (bad) or xchg or mov es iret scas lods sahf sbb xor (bad) int out pop out adc fmul imul (bad) jl mov xlat and mov pop enterq (bad) cld sub cltd adc repnz out xchg test shl outsb (bad) je roll rex.WRXB mov lods push ss rex.WRX rclb and adc rex.WB mov adc (bad) xor adc (bad) adc or fild jl mov movabs add adc adc cli sbb adc movabs sbb mov jo (bad) retq mov rex.WX (bad) xchg fdivl icebp rcr and int pcmpeqd rcll pop xor outsb clc push jle test xlat lea sahf movabs mov test shrb mov mov (bad) setbe sbb (bad) movabs jbe sub scas xlat or (bad) xor add int movabs xor lahf cmp adc (bad) xchg ja and ja xchg movsb and test jl mov or jl fwait divl mov (bad) mov adc imul mov xchg push jp cmp (bad) sub (bad) mov (bad) and scas adc scas sub lock xor js je xor sub mov xor jp xchg (bad) (bad) (bad) add add cmc mov add (bad) xchg rex.R push adc hlt rclb callq icebp cmpsb jne (bad) cli rex.RB or loope out sbb jbe cmc push in pop xchg fwait fs and movabs (bad) lret xchg std fidivr mov (bad) callq push push int3 in test insl cmpb rex.RX cmpsb (bad) jb adc lods scas push jg xchg stc xchg mov and clc cmp cmpsb xchg fcoms (bad) sub jg stos movsb (bad) mov jmpq sub lret es add jmp push (bad) (bad) imul in add rex.WXB mov rcll je std push xchg cld mov or mov and xchg pushfq (bad) rex.WR scas push insb (bad) adc outsl out mov or cmp retq pop rorb (bad) outsb nop mov sbb cmpsb in jrcxz scas jge pop fwait jno add jbe cmp and pop push rex.RXB mov mulb cmp ss mov in jno lcall out mov mov (bad) pushq (bad) rcrb (bad) rex.WRX (bad) pop (bad) leaveq sub (bad) (bad) jrcxz rex.RB push (bad) jmpq mov xor rorb xchg rex.RXB rex.R sbb cld adc jrcxz rex.W sbb lock (bad) jno adc imul (bad) imul mov fmuls jno adc jae pop lock add mov and xor sub movabs movabs jo rex.XB pop sub cmpsb mov sbb (bad) pop stos xlat xchg mov divb mov pop sub mull movabs mov push jns xchg xor adc scas (bad) jb stos (bad) sub mov adc cmpsb mov add outsb cs retq callq fistl jbe jmp or push sti jl (bad) out or rcll xor mov jae ja pop xchg cwtl adc callq rex.X rex.R rex.W adc gs jmp std push in cwtl in or rex.WXB stos lret (bad) pop rex.WRXB sub jl xor cmp jbe cmp adc lock mull adc repz adc insl xchg (bad) xchg int3 push mov cmc in and test sub pop stos mov (bad) fwait jns fs movabs mov mov cmp mov add cmp or cmpsl mov adc scas in bnd push (bad) out leaveq divb scas rolb and hlt lock movsb adcb rcl xchg fistp cmp (bad) adc (bad) js repnz add fcomip (bad) add pop pmovmskb xchg sub xor or in je sbb push stc fisub in mov callq jbe (bad) pop test rex.XB insb scas push xchg or fldl xor lea xor mov sub (bad) ds rex.RX lock mov callq pop movabs xchg jl sti cmpsl in or out (bad) adc push push mov adc loopne movabs mov (bad) stc adc sub sti addl (bad) (bad) cmpsb out rex.WRXB (bad) fucomp rex.RXB push retq rex.R add sub nop callq sbb jmpq sbb callq cmpsl or add push and (bad) lock jmp xchg pop imul repnz xchg jb rolb callq js rex.W (bad) (bad) shlb mov (bad) mov adc mov xchg rcrl sbb sub rex.WX xor xlat sahf fldl adc (bad) rex.W jge (bad) mov adc adc cmovl cmc jmpq in jbe not xor callq mov xchg jbe jns in (bad) xor (bad) rex.WX mov faddl insb clc push ds rex.RB (bad) rex.WR mov sub (bad) in xchg xchg mov movabs pop mov mov pop mov fidiv std rex.WRB divl int3 movabs xchg in pop pushq sbb jno ds movabs adc jb rcl movabs jle xchg cltd cwtl fcmovnb stos jnp jrcxz jmp adc hlt (bad) xor rex.W mov xchg int3 sahf adc rex and (bad) (bad) cld movabs jg push jbe out hlt sbb sbb jbe insl mov (bad) mov (bad) rex.RX cmp (bad) push jp (bad) or jae fistpl (bad) mov add or pop adc (bad) push push int3 adcb or js jno out jg insb pushq (bad) xor (bad) push mov hlt mov test cmpsb sar xor mov rex.WR rclb (bad) int adc rex.X jno xchg scas retq es fldenv push out mov (bad) enterq add jg pop jle int3 movabs rex.WX push pushfq (bad) rex.WB rex xchg faddl loopne sub (bad) adcl je pop xchg rex.WRX fstps movabs loope movabs pushq sbb and movabs je stc test fsubs fnstcw (bad) rex.X gs mov xor mov adc add sti jb or lock frstor pop adc push or jno (bad) mov add retq mov cmp sbb pop (bad) rex.X add cmp add fisubrl out add sub out nop (bad) cltd (bad) push jnp rex.WR (bad) (bad) push mov sbb (bad) cwtl jmpq clc (bad) and add fwait addr32 (bad) pop cmp callq adc rex.WRX mov test ja mov pop xor (bad) adc fucomi jp rcr clc jle jmpq push or (bad) cmpsl xchg jge push adc frstor add adc jne cs test and fistl (bad) in mov (bad) movsb adc (bad) fsub (bad) (bad) cltd pop retq xchg xchg cli lock sub movabs fsubrs fistp and loopne xor fstpt rex xor or fstl callq in cmp (bad) (bad) mov int3 (bad) xchg fcomp (bad) in sub pushq cwtl and out (bad) sub mov push or movabs rex.WXB pop (bad) stos adc cmp and mov xor push rcll loopel iret in (bad) xor mov mov hlt retq sub (bad) es lods adc test jb (bad) jrcxz fadds sbb retq fwait cmp adc (bad) jle (bad) (bad) iret insb mov push sar cmp sbb rex.WXB subl and push mov hlt cld pushfq (bad) and jbe divl rex.WRX cmp cmp movslq (bad) (bad) movabs repz rolb adc add scas rex.R jle jmp and sbb test (bad) (bad) xor (bad) sbb sub xchg (bad) enterq iret in fidivl repnz (bad) loop scas sbb sub callq rex.WR fs mov clc movabs fwait (bad) and outsb mov shrb (bad) int3 popfq jge adc (bad) rex.RB (bad) out rex test test (bad) cmp jo (bad) stos (bad) xchg adc (bad) cld fcomip xchg cs int3 mov xchg cmp (bad) mov fistp xchg and mov (bad) mov cmp adc rcr jl test mov enterq test add sub fwait in (bad) cs cmp or xchg or shrl divb sbb adc callq data16 cs cwtl (bad) push rex.WB rex.W jbe ds rex.WB mov (bad) (bad) imul testb cmp mov pop xor ds callq jmpq and xor addb (bad) xor shll adc jnp push xor shrb (bad) (bad) mov test xor fist (bad) (bad) callq mov (bad) pop test (bad) int3 in stos mov pop popfq mov cmp xor sub adc or sbb rex.WRB mov jne xor pop add andl (bad) hlt imul and mov xor adc rex.X xor int3 out cmc cmp xchg (bad) cld (bad) lret out int3 lock int push mov callq pop (bad) and jp adc movabs rex.XB pop or hlt in push in add jno std jbe push rex.RB mov cmp or (bad) xor (bad) insb adc stc int push fcoms in xchg mov adc rex.X (bad) or sub out or adc mov xor incl (bad) sub xor xchg or movsb in (bad) fistl xchg xchg sbb adc in or cmpsl xchg rol ds movabs jmpq push repnz lock push scas lret jle cmpl imul out (bad) movsl push (bad) (bad) or enterq xchg jne mov lea lock mov cld or xor or out jno (bad) xchg xchg jmp movabs mov xchg (bad) sar cmp cld out fs sti adc ds outsl adc or (bad) icebp xchg jg jne pop leaveq (bad) ss cmpsl popfq lret adc or rex.XB rex.WXB test mov add retq ja jp nop rex.B sbb sbb (bad) (bad) mov add (bad) iret sbb xor jae leaveq cmpsb je (bad) retq xlat xchg cmpsl scas cmp mov int3 jge pop in jnp xchg push and adc mov repnz in lock mov cmp and cmp jrcxz repnz or rex.X test pop fwait test cmp scas (bad) scas and (bad) hlt (bad) lock lods popfq movsb (bad) (bad) stc or test rex.WRX (bad) add rcrb retq (bad) sub rex.WB popfq out (bad) or (bad) xor insb mov jle push rex sub lods sbb xor mov (bad) stos rclb (bad) in leaveq rex.WR (bad) xlat xchg (bad) adc fcompl rex.B (bad) stos mov push xlat mov xchg lock or (bad) xor sbb mov ss add enterq and negb adc rex.WRB rex ja shrb in movabs rex.RB (bad) adc mov clc out (bad) xchg cwtl push movabs push sar jae in mov (bad) xor enterq or push out push ss fisubl adc (bad) and add stos cmp or xor iret mov (bad) rex.W rex.WX fidivr fs mov (bad) movsb xchg setae adc addr32 mov mov enterq int3 or jnp (bad) (bad) push push out icebp mov idivl orl jp in sub callq mov int3 clc sbb sub rex.X sar adc fnstsw in xchg cmp in (bad) adc movslq cmp mov (bad) or jl mov mov fisub adc in mov repnz (bad) out or add push callq adc fdivr pop loope hlt fimul sbb sub mov sub sub adc adc (bad) repz js xchg jbe sbb or pushq xchg (bad) cli xchg (bad) (bad) stc andb mov (bad) je pushfq adc data16 shrl jge addr32 xchg je pushq jl (bad) xchg adc mov rclb jp sbb lock jno xchg (bad) (bad) repnz and test adc retq cmp scas mov cmpsb or mov loope add movsb jrcxz rex.WRXB mov (bad) lret adc rex.XB in adc or adc (bad) xchg pop cmpsl adc sahf addb or (bad) (bad) adc (bad) jbe std or xchg xor mov (bad) jrcxz std mov rex.X sarb cltd (bad) mov leaveq (bad) cmp rorl or stc mov lahf (bad) (bad) (bad) imul xchg add adc scas out imul int3 (bad) add xlat adc gs jnp cmc in xchg xor mov enterq rex.WR mov pop xor pop xchg fs mov push lock (bad) cmpl lea mov sbb movabs scas outsb xchg or fwait mov (bad) xchg cmp gs sbb jno jmpq mov hlt (bad) sbb fdivs rex.WXB lock cwtl enterq ss push adc adc fs xor add (bad) cmpsl mov sbb xchg rex.XB xchg or jo (bad) clc rex.X push cmc rex.WRB xchg rex.WRB movsb (bad) test callq test lock jg add cli sbb xlat xchg test in rex.WRB ficomp shll cli fdivrl mov sub (bad) sahf (bad) cmpsb movabs and cmpb movsl rex.RX xor or add jmp sbb (bad) pushq sbb cs (bad) xchg or (bad) es jno sbbb sbb mov out (bad) mov cmp (bad) movsb sub rex sub mov pop mov (bad) jnp xor push sub icebp vpminub ds xchg rex.XB cmp adc xor and fsubrs lret imul adc hlt mov es scas loop out sbb pushq (bad) mov repz fwait pop jnp out imul or cwtl xor xor adc pop fsubl callq (bad) (bad) mov in stos rex.WRXB adcb insl add or (bad) ds fdivs push sbb movabs je xor callq mov fsubrs jbe mov cmpsb callq xor scas mov xlat rex.WRB (bad) adc mov adc adc (bad) xor sub (bad) (bad) (bad) jrcxz in cld mov lock rorl mov adc out fidiv add (bad) rex.WXB retq xchg jne add xchg adc mov cmpsb out xlat adc mov cs iret adc pop (bad) push in adc (bad) loop shlb pushfq jne adc jge movsb adc pop add jne fwait unpckhps (bad) jmpq outsb lods (bad) (bad) push add (bad) rex.X rex.RXB (bad) lock adc and test mov (bad) frstor sbb push rex.RXB fs icebp loope scas clc xchg mov mov mov xor adc push pop stos sub mov pop pushq add mov add shrl andb sbb lret cwtl mov mov jns mov xchg lods jge (bad) (bad) (bad) enterq fmuls (bad) add xchg (bad) movabs test or jbe movsl (bad) pop (bad) fs mov xor repnz (bad) rcr jne (bad) xchg cmp out jo adc pop xor adc (bad) mov pop and faddl in (bad) movslq (bad) (bad) addl (bad) test jns sbb (bad) adc rex.R out fcomps mov int3 rex imul lods jl nop or mov xchg pop scas int3 cmc push (bad) adc repnz mov mov mov pushq push lret fwait mov in jmpq fmull std (bad) xchg (bad) addr32 sbb pop xchg (bad) (bad) es lahf notl add adc test rex.W adc idivl lods sbb (bad) (bad) cmp movabs cmpsb (bad) xor xor retq cmp jge sbb mov jne adc xchg cmp adc xor iret callq adc scas mov sbb (bad) mov out and mov movsb cltd fisttp push (bad) addl (bad) jmp insl unpckhps pop sbb mov sahf jl andl jne int (bad) adc outsb or add in adc sub idivb cmp test (bad) rex.WRX sbb mov stos pop adc xchg pop faddl movsb imul or adc outsl js rex.WX or fwait ja adc test cmp icebp (bad) (bad) lahf scas movabs sub iret fildl fnop mov (bad) jle js movsb jne xor sbb or mov (bad) sub outsb test jb adc (bad) and (bad) xor cli callq sbb mov rex.X lahf (bad) mov (bad) (bad) jbe js adc rcll cmc xchg jne pop cmp fs jp mov sbb push andl insl mov nop (bad) xor mov clc std mov out (bad) mov adc (bad) lods cmp mov mov (bad) (bad) out (bad) (bad) cmp xchg pop sub or test out add sbb adc sub adc icebp fsts (bad) rex.RX rex.W repnz rex.WRXB cld and loope (bad) adc (bad) int3 lock xchg adc cmp pop and (bad) pushfq cld add pop (bad) xchg xchg fdiv popfq jl xchg or mov sbb (bad) pop add xor fs (bad) add (bad) cmp rex.WR and push fildll cmc retq fnstsw fadds mov push movsl sub (bad) ror rex.B jmp xchg (bad) cmp fistpll jp cmp (bad) in sub (bad) rex.B fwait (bad) iret fmul and notb out and jp cmp (bad) (bad) (bad) push lock mov xchg enterq stos (bad) mov pop (bad) xor sbb add insl (bad) callq repnz movslq int3 std fisubl testb (bad) divl (bad) or push sub (bad) loope cli jne pop movabs adc pop js cmp mov sub mov ss callq cltd (bad) mov shrl (bad) in adc js or sbb notb in add iret (bad) out sbb sub rcll jmpw sbb repz lods pop xorb add add (bad) lret jbe push outsb imul (bad) push sti in rex.R jno (bad) notl movabs enterq and roll movabs shrd xchg adc (bad) jo mov movsl cmp mov stos adc nop jne sbb add add (bad) (bad) mov xchg add cld (bad) out adc (bad) fmull jrcxz lahf (bad) push cli (bad) (bad) mov scas adc cmp rex.WRB lock (bad) rex.RB and retq xchg (bad) mov or fidivrl fadds sub add push pop push cmp test jbe or or adc (bad) (bad) lea (bad) movslq (bad) (bad) sbb js adc rcr add (bad) add pop pop mov or cmpsl sbb std js imulb rex.RXB jnp lock lock lret or mov add ds int3 in jno (bad) mov nopl (bad) movabs add es cs rex.R outsl (bad) or push (bad) xchg jp pushfq cmp test jbe add adc jno cli int3 (bad) scas push rex.RXB jle (bad) xchg xlat lock lahf rcrl movabs adc xlat adc (bad) pushq out (bad) adc (bad) jrcxz decb (bad) jg pushq enterq mov jne andl std push (bad) movabs cltd pushq or rex.WXB adc add psubusb adc (bad) rex.XB sbb (bad) lock lock cmpps pop rex.WRX in and xchg jne int3 outsl outsb in mov adc cli callq rex.RXB fwait sbb sbb cmpsl fs repz insl repnz pop cmp (bad) fcomps mov stos leaveq nop adc ficompl bswap (bad) sub (bad) ds sahf jg push gs movabs (bad) mov adc sub stos mov pop icebp xor xchg mov mov jb pop leaveq sub mov (bad) fcompl mov pushq (bad) (bad) jo (bad) add out cmpsb outsb rex.WRX (bad) pop sbb rex.WXB pop repz push adc jg and push stos xchg rex.WRXB enterq (bad) loopne jmp adc push cmp rcl mov fcomps sub (bad) cltd cwtl push xor adc mov jp mov imull shr sbb and lret mov rex.RXB es add or (bad) (bad) (bad) cmp (bad) out sbb mov push and rcll out xchg clc iret and mov add xchg add add movabs fildll xchg (bad) bnd rex.XB out gs out (bad) repz cmp movslq rcll (bad) fwait pop std mov adc imul fldcw fstpl (bad) and cmc icebp (bad) adc push pop add add pop sub mov cmc movslq popfq mov mov scas outsb (bad) xor pop pop cli push push (bad) push and push adc rex.R insl scas jns mov movb (bad) mov and push mov sarl test jbe or in sbb cmpsb cli mov or adc adc std add rex.W cltd (bad) (bad) fild cmp (bad) xor ds movabs adc pop cmpsb push test xchg adc xor (bad) xchg rex.WR mov rex.XB (bad) (bad) cmp cmc adc movabs clc jge jl jne xchg sbb (bad) or mov fsubrs rex.RX lahf adc lret shlb repz push pop notb (bad) xchg and rex xor mov jge xor add xor pop xchg (bad) adc in rclb fdivrl or pop jg xor pushq in mov (bad) jle popfq add sbb rex.WR es cmc adc xchg out test mov adc (bad) mov mov pop lahf sbb cmp add movslq (bad) adc idivb (bad) cmp (bad) imul repnz adc xchg add imul xlat (bad) jge pop fbstp jne pushfq movabs adc jne subl (bad) mov pop cltd loopne or pop and or test test (bad) xchg test sbb scas (bad) not cmp mov test xlat (bad) rex.WRXB adc jmp mov adc rex.WB out pop rex.WXB xor mov movabs adc (bad) (bad) ss pushfq icebp mov adc out jmp adc sub jnp mov jmpq xor (bad) cs adc mov mov adc mov mov xchg cmp rex.WX (bad) add xchg push xchg or xchg stos mov (bad) sahf adc data16 add (bad) cld sub and divl int3 repz adc rex.WB adc int jmpq (bad) adc pop and out add fisubl mov fcompl jp nop out mov sbb (bad) out nopl scas mov rex.X or (bad) xchg loope std jrcxz ja mov sub push adc andl test xchg (bad) (bad) loopne sub add xor subl test xchg pop cmp jl adc jge xchg sbb cld add (bad) retq repz pmullw push sbb adc mov pop adc and pop fist (bad) sbb xchg adc push cltd jp repz fsubl cmp rex.RB (bad) or xchg loope mov xchg xchg out movsl in mov hlt mov fcoml (bad) enterq adc cmp in jp movabs hlt mov cli pop outsb mov (bad) rex.WR xor enterq jns imul sarq movslq scas mov iret pushfq mov (bad) outsl outsb xchg adc notl jmp xor (bad) and jle repz adc js jp adc xchg rex.RXB sbb jo (bad) cmpsb jl adc pop insl add repz repnz sub clc xchg xlat pop loope adc and adc push ficomp enterq (bad) scas push stc adc gs jno adc (bad) jb rex.X (bad) sub (bad) and adc imul movabs sub jbe sub (bad) xor (bad) insl fistpll cmp xor jns stc mov mov and (bad) retq pop out int3 sahf (bad) (bad) roll leaveq movslq pushq test rol xlat lods rex.WRXB (bad) sbb addr32 xlat or roll or out repz fwait mul rex.W jae (bad) callq (bad) movsl sub or sub negb js movabs xor (bad) mov or addr32 callq xor sub xchg rolb rex.X ja lret (bad) sub and sub fadd rex.WXB rex.R (bad) mov pop xchg xchg out rex.WRB mov (bad) xor lods pop outsb jns (bad) incb rex.WX faddl mov rex.WRX jle (bad) ja (bad) add rorb leaveq (bad) (bad) (bad) jp or hlt or xchg push insb gs mov (bad) sbb sub xchg lea movabs test insb (bad) ss movslq (bad) jmp xor rex.B add jg jno (bad) test mov hlt cli in movsb (bad) xlat andl fdiv (bad) and (bad) lret pushfq out and (bad) adc (bad) add cmp add xlat add ja fcompl callq clc (bad) and jne test xor out sbb (bad) enterq stos (bad) add cmpsb movslq pushfq lahf mov test cmp fistpll pop cmc leaveq mov push (bad) (bad) jae sub sbb out jge xchg mulb (bad) fcom xor stos and adc rex.WX jne (bad) cmp xorl cwtl mov mov rex.X xor sub imul push (bad) js mov and rex.RB mov jmpq cmpb xlat insb xchg mov (bad) mov rolb shlb fs not cmc rex.W (bad) rex.WRXB mov (bad) xor (bad) sub lret loope ja and adc movabs cli sbb rex.WXB out rclb incb mov rex.WR jmp imul (bad) (bad) xchg (bad) ja cli rex.X test fwait out je jae adc cmpsl movslq out adc orb adc add adc (bad) decl adc mov test jg and cmovl or (bad) test adc xchg jp mov (bad) (bad) and scas (bad) movabs sbb cwtl (bad) adc add js test cmpl jb cwtl xchg (bad) or (bad) outsl loopne xchg sbb xor sbb adc adc cmp sub (bad) in sbb and fcoml retq fcmovnb sti xorl mov add cmp (bad) or pop cltd fdiv (bad) jl ss xor xlat (bad) jmp retq fsubl push imul and and (bad) rex.R orb sub lods (bad) cmp out (bad) and fistpll (bad) notb rex.X xchg (bad) fmuls jb callq sub lahf std mov sarb xchg rex.WRX fwait cwtl packsswb mov (bad) xchg test pop pushfq and out mov xor pop adc rex.RB adc (bad) push cmp (bad) btc clc cmc push mov or adc xchg jnp lods std callq retq adc rcrl mov fwait adc mov pushfq and add rcll mov add mov jrcxz add mov cli mov clc mov enterq std test adc loope addl mov out adcb rex.WRXB sub xchg (bad) lahf sti jrcxz and mov lods js mov or ss out (bad) lret add xor (bad) rex.WR lock cmp lock ror (bad) test rex.WR ja jl (bad) repnz xor sbb sbb cli or cmp sub rex.WRXB (bad) repnz and (bad) ffreep fstpl sub (bad) cmp sgdt scas adc sub (bad) (bad) or sub clc sarl mov rex.WRB icebp (bad) rex.X and sub xor imulb ja test (bad) and add sbb cmp pop and cwtl lret insl cli (bad) (bad) fbstp push adcl fstpt pushq sub icebp mov and idivl jnp insl (bad) es cmpb mov add cmp (bad) in cli scas sub (bad) (bad) sub jg icebp fiadd enterq addr32 adc pushfq mov and pop rex.W cmp pop cld jmp lock push xchg outsb pushq or push (bad) mov adc sub lret (bad) sbb sbb shr jnp sub movsb push sbbb cmp not fistpll sbb sub rex.B or cs mov leaveq rex.X fist out cs xchg rex.W adc xor pop pop push mov mov sub out xor sbb in jno mov (bad) or out adc out mov xchg sub cmpsw int3 and push push shlb and rex.RXB rclb mov xlat insb push in mov xchg callq mov pop mov repz je xor rex.R mov (bad) mov fmul cs cld hlt stos jae callq cmp (bad) (bad) repz fdivl sbb rex.XB jne xor (bad) and add mov and xchg shl pop adc loope sub xorl sbb jo (bad) hlt mov rex.RB add mov int add push xor sbb push mov push clc jp mov stc and rex.WB rex.WX xchg loopne add movabs rorl jp leaveq push rex.WR jg outsl idivb push fs or or rex.WB (bad) (bad) jmpq mov cmp in xchg jmp test xchg jmpq xor pop (bad) popfq (bad) gs sar xchg add (bad) add sbb insb sbb out cld fucomp xchg sbb js xor cmp ds rex.RXB push mov (bad) movsl xlat enterq push movsb (bad) mov scas jne or push (bad) mov (bad) fdivrp adc adc fmuls mov adc (bad) rex.WXB rex.WRXB add sub mov sbb jns (bad) lods loopne movabs xchg sub adc repz sti cli rex.RB fsubs rex mov outsb in jns retq rex.XB int mov (bad) rex.RX jl fcompl mov jno pop (bad) movsb cli iret (bad) adc loopne sub xchg leaveq add jrcxz (bad) jno xor pop movabs cmc add push addr32 pop (bad) nop xchg jg fbld cmp orb pop rex.RXB rex.W add push pushq hlt mov stc mov jmpq sub (bad) icebp js adc leaveq rex.WX cs mov fmulp (bad) mov rex.WX repz cmpsl mov (bad) xor shrb fmul lea and sub movabs cwtl jno pop rex.WRB rex.WR xchg mov lret xchg frstor repz (bad) fdivr out js lret pop lret mov (bad) cmpsb fcompl add out mov scas xchg pushq sub adc lahf ja (bad) cmp test xchg and stos (bad) out rex.WB pop fsts lahf sub or add adc and sub test loopne add sub or or stos cmp xor in mov cmpsb (bad) scas adc and push popfq sub sub and mov add mov (bad) imul xchg jnp sbb lock jp mov mov add push xchg cwtl push pop push adc adc retq (bad) sbb or fsubrs fild andl adc sar add outsl vdivps jbe (bad) hlt jl ja repnz jns and outsb (bad) xchg loopne and rex.R push adc mov leaveq int3 enterq in jb sub mov ss leaveq or cmp rex.WB movabs fwait mov imul mov or jp (bad) jrcxz xlat decb fadds in stos (bad) fs pop xor pop test push addr32 callq mov (bad) test adc xchg and sbb mov fcoms movslq mov stos pop pushq (bad) (bad) stos test adc or (bad) sbb (bad) mov fwait sbb xchg sbb cltd pop ds (bad) mov fdivrl mov add pop xchg movsb pop in or popfq icebp jle add sbb fsubrl (bad) (bad) movsb (bad) mov (bad) xlat mov pop retq sbb out fs (bad) adc mov adc mov push push test mov clc orq lea jg fbld sub mov rex.X xchg push and fwait test data16 fidiv (bad) (bad) xchg mov cmp (bad) xor repz hlt js adc (bad) lods jo sbb xchg fadds (bad) je and cltd movsl jno stc pop test mov (bad) xor sbb sub sbb addr32 add rex.WB in add hlt (bad) sahf rex.WRB (bad) (bad) insl cmpsb pushq fwait and mov xor (bad) adc lea lock std jge rex.WRB jrcxz or cmp rex adc (bad) xchg ds out scas and in pop (bad) rex.WR mov adc callq and jns outsb (bad) lock lea adc jae sbb jp mov adc rex.WR mov (bad) rex.WRXB (bad) or cmp movabs pop inc (bad) (bad) or cmp xchg jb pop outsl add adc mov mov jnp loope or mov (bad) mov jg cld xchg and lock in or or xchg and movsl iret fcompl iret nop (bad) notl and (bad) rex.X jnp lea hlt add pop add movabs or jno sbb mov fdivrs (bad) xchg push and in cmp movsb lea leaveq (bad) adc mov test (bad) ficoml jno or sub mov rex.WR rex.WRB mov (bad) movslq mov insb sub (bad) out cwtl sarl rclb and or add jrcxz fdivr cmc rex.R mov movabs rorl (bad) (bad) pop lret jle,pn sub movabs mov mov add movslq jb in cmpsl hlt ds or add add (bad) insl sbb rorb ss js sbb movsb loope push cmp ud1 xchg jns (bad) mov subb xlat stc cmp in incb sub int3 mov mov lret push or adc retq mov icebp rex.RXB rex.WX fbstp outsb (bad) test subl adc mov sub mov addr32 sbb (bad) mov (bad) movl (bad) cmc jp pop cmp jge fbld outsb hlt sbb (bad) pop mov icebp cwtl retq and rclb push lods test adc lret rex.WRX (bad) lock incl (bad) cmp xchg cmp push (bad) pop lock or lret lahf hlt mov out add and and rex.WRX data16 jnp adc lock (bad) pushq push xlat sub (bad) (bad) sub rex.XB fwait (bad) outsb (bad) jo add mov xchg mov rex.R adc fisttpll js sub add cmp sub jle (bad) (bad) xor (bad) out rex.RX iret add out in cltd jmp pop mov fistpl mov (bad) push callq cmp (bad) (bad) rex.R out mov jo movabs cmpb push mov or mov push cmpsb xchg out in rcrb and or retq pushfq fdivrs rex (bad) stos mov pop sbb mov push cwtl out (bad) (bad) rclb (bad) bnd mov sub and xchg lret rorl xor lahf movsl out xchg rex.WRX rex.B or loope xchg movabs rex.W pop out or and leaveq scas pop push mov cltd (bad) sub mov (bad) int xchg xor and stc (bad) jp sti movabs je,pn cmp clc out sahf adc loop mov callq and fcmovbe loop (bad) xchg nop int xor (bad) in push fwait or xchg (bad) movsl jbe sub out rex.WRB rex.WX push mov cwtl sbb pushfq mov movsl sub enterq adc sbb adc cmc xchg ss pop (bad) (bad) add xchg callq loopne lahf shr mov mov adc (bad) xor nop clc fsubs or enterq movsb (bad) adc (bad) (bad) (bad) rex.RB sbb lret add pushfq pushq pop mov mov pop gs xchg jne test stc fistl (bad) mov mov retq (bad) rex.X adc push lock clc rex.X xlat mov rex.WR int pushq retq adc (bad) push iret and cs mov lock negb hlt rclb rex.XB (bad) (bad) (bad) sbb cmp jne leaveq movsb repnz mov adc pop rex.RXB imul (bad) or (bad) xor lahf jmpq in in adc addr32 rex.WXB (bad) jne rex.RB (bad) clc xchg rex.WRX jae in add sbb fbstp js fnstcw insl rex.WXB mov xchg xlat in push cltd (bad) jb jge rex.WRB enterq adc or sbb and test loope ss out mov fiadd cmp cld mov jnp sbb xchg fdiv cmp (bad) ss sub (bad) rolb cli (bad) test (bad) sbb jg insl jl cltd lret (bad) push in xor sbb stos movsl adc movslq imul xchg sahf lods and and (bad) hlt repz lock fisubl movabs mov ja repz mov imul fdivr ficompl sbb xlat sub mov (bad) jae jns callq (bad) movsl movabs fwait vcmpsd imul mov (bad) out mov int (bad) and test ds movabs sbb xchg ror rex.RXB (bad) fbstp repnz jge (bad) pop rex.WR ficomp (bad) sub (bad) mov (bad) pop negb (bad) (bad) cmp or (bad) rex.W sbb (bad) js adc test mov jo or (bad) movsl (bad) lock pushq pushq rex.WRB cmpsb divb (bad) sub xchg (bad) cli (bad) mov cmp or add cld push mov (bad) rorl repnz or xchg stos faddl lahf jno retq (bad) je (bad) push mov cmpsl (bad) sbb femms xlat adc jl xor stos cmp scas cmp cli adc (bad) ja adc rcll (bad) and add mov adc retq add fmull fwait sarb xchg (bad) cmpsl (bad) mov (bad) adc lods stos clc cmp cmc rex.WX adc imul rclb mov test jg leaveq callq pop and loopne stos push sbb lock xor movabs loope jge mov sbb int3 mov mov xchg jp mov cmp hlt adc mov (bad) out test and movabs roll movabs mov stc and mov sub int3 rcrl pop (bad) xor callq fisttpl push add fnstenv or add and addb enterq rex.RB adc jne or mov loopne out btr mov pop jrcxz sub rex.X push xchg (bad) cmp jno and imul movabs cmp rcrb stos sbb adc xlat je cmp pop jo xor (bad) sbb rex.W addr32 in cmp fsts cwtl (bad) test sbb (bad) jo rex.X xchg shrb adc (bad) xor and sub add adc pushfq in rex.WRX push (bad) test movsb sub jge,pn adc pop in (bad) movslq lods xor mov xor rex.RB fdivrs mov sub imul test adc mov imul (bad) or fsub fwait add mov rex.WRXB add push scas (bad) callq adc frstor adc cli sbb xor ja (bad) (bad) adc jne enterq sub fistl test adc (bad) or mov xor jbe stc int enterq push sbb std incl or shr mov scas outsl adc pop cmp push adc mov mov mov cmpsl imul mov jne repnz sub push ror data16 (bad) in xchg and lret (bad) jg stos mov sub rex.WXB (bad) push jb (bad) (bad) pop rcrl mov (bad) leaveq lock (bad) rorl add mov adc (bad) gs (bad) (bad) rex.WB mov stos out cmpsl flds mov sbb movsb jns xor jnp sub rex.B div lock rex.WXB js movabs iret fwait popfq sar or sub xchg sub adc ja push out or movabs sbb int3 jmp es (bad) add sbb (bad) mov jmp or cltd (bad) rex.RB push lods xchg push xchg mov stos idiv stos or cmp jmpq callq movl popfq cmp repz (bad) rex.WB (bad) mov xchg sub adc adc adc xor lahf cld adc test cmp adc or rex.WB cs xor out pop (bad) (bad) (bad) adc int3 and rex.WRX rclb xor cmp js (bad) mov cli addl (bad) cmp jmp adc mov cli (bad) scas mov adc jp mov xor adc (bad) sbb adc (bad) fwait jp js (bad) rex.RB and stc or adc movabs and lods outsl pop sub sbb push rorl lock iret out js mov andl (bad) push out (bad) sbbl xor callq scas (bad) (bad) rex.WRX pushfq sub lock gs cmpb fdivp (bad) (bad) mov pop cmp rex.RXB movsb cmp (bad) sti pop pushfq xchg (bad) (bad) adc (bad) int3 rcll pop test mov (bad) in jne or stos and xchg jno jl (bad) mov clc (bad) jrcxz or pop sbb adcl adc movsb adc cmp shrl mov xchg sahf jl adc cmpsb (bad) and adc stos (bad) or mov sbb xchg pushfq retq lret adc cmpsb sub or frstor (bad) (bad) sbb and jg addl lret pop (bad) faddl iret mov (bad) lods (bad) retq xor jne int3 cmp or jbe loopne adc (bad) scas xor fstp mov push and sahf add gs pop xchg jo sbb gs ss int3 rex.WRXB fucomi cld fbld mov in jno pop (bad) movabs pop sbb pop (bad) sub (bad) lea cmp mov divb adcl (bad) rex.RB repnz sub jnp nop (bad) mov fdiv mov (bad) shll popfq test retq iret pop (bad) lods scas mov nop push movsb sbbb imul cmovb (bad) pop (bad) andb push fadds adc fwait repnz (bad) js jmp pop xchg jmpq lock sbb jl mov movslq repnz xchg int push mov callq scas clc and cmp int sbb movsb callq ja cld (bad) gs jne (bad) (bad) (bad) rex.WRXB push mov or mov std sbb pop sbb push sbb frstor shl push stos lea (bad) pop xchg adcl sub fwait stc (bad) adc pushq jg jmp (bad) movsb (bad) and adc iret retq adc pop (bad) (bad) mov and nop sub mov add sbb pushq adcb cs xchg (bad) in xchg ja cmp outsl leaveq cmp callq sub imul in rcl push rex.WRXB cmp sub repnz test mov mov or frstor out (bad) stos mov and (bad) setnp movabs mov js pop and xchg xchg jno rcrl (bad) push push hlt scas jrcxz mov cld outsl jb mov ds fcoms mov or rex.WB adc (bad) idivl in jno pop icebp xor rolb loop js retq pop xchg data16 loopne jmpq rex.WB adcb (bad) or jnp movslq push sub lock (bad) movsl push rex.W mov adc repz sbb enterq (bad) xlat clc jno mov xchg sbb in pop jl retq (bad) add xchg sbb sub sub add sbb cli movsb (bad) xchg sub sub xchg xchg (bad) mov xor movabs jnp out rex.WRXB jmp (bad) out lea imul in pop and cs push cmpb jne or xchg lret adc pop repnz notl push (bad) jle adc mov lahf (bad) jbe adc rex.B cmpsb adc (bad) xchg mov cli mov movsb mov jae xchg and or lock (bad) int out rex.WB xchg fldcw lods or jg xchg shlb movabs (bad) rex.WR (bad) rex.B adc rclb clc sbb mov adc retq subb (bad) jnp jb xchg lock stos rex.WX cmp sub mov (bad) adc leaveq fdiv push je sti sub callq xchg adc movslq xorb sub sbb rex.R cmp (bad) sub and add sub idivb (bad) jmp rex.RB jae sbb (bad) adc mov pop add xor andl int3 orl (bad) and xchg cmp or rex.WX (bad) jle or add sub and (bad) rex.WR rex.WRX (bad) cmpsb xchg inc in movabs cmp clc addr32 fwait xchg in and jl jmpq movabs lock fiadd pmovmskb sbb add cmc push (bad) std rex.WRB shll sbb adc jmpq int jo sbb cs push cmp sbb jp jnp insb movabs mov imul insl (bad) mov mov adcb stos fisttpl adc mov movsl imul xor lret (bad) or mulb fdivs sbb cmp xor mov (bad) fcom (bad) icebp or int sbbb sbb mov (bad) ror (bad) (bad) and adc jrcxz or movhlps rex.WRX mov sbb cmp rol movabs xlat (bad) (bad) xchg leaveq lock outsb (bad) loop imul xlat testb mov jg test add addr32 loope rex.X in (bad) fxch rex.RB mov adc hlt jrcxz cmp adc (bad) xchg jmp fadds mov in jno mov pushq mov sbb xor adc shlb (bad) cmp fmuls in mov mov jrcxz (bad) jmp ror or sub sbb (bad) orb rex.B fwait std retq adc (bad) push xchg xor xchg push cmp xchg scas xor in rcll jo rex.RB jl and retq gs add movabs push jno retq pop test xchg (bad) rex.RXB (bad) movsl (bad) adc sbb clc adc and (bad) movb cli jno adc ds hlt xchg jge callq (bad) rex.RXB enterq movabs pushq mov cli hlt (bad) add scas (bad) pop add mov (bad) imul mov int rex.WX jrcxz (bad) movsl sbb and fadds lahf mov mov xchg clc sbb (bad) or or test xchg test or jnp lea pop repz out or lods xor movntps sbb adc rex.RB rex.R sub repnz sub and outsb hlt mov cmp (bad) xlat mov (bad) cmpsl sub rex.X xchg pop mov add rcll push mov sbb outsl test pop (bad) enterq mov setg imul xor gs fistpl (bad) jmp sbb mov xchg adc lret (bad) sub sbb pop sbb pop insb lods push xchg ja pop fcompl loop xchg sbb fstp fistl out pop test xchg movabs add out (bad) out adc cld push adc adc retq (bad) or pop push sub pop sbb add mov or xchg xchg cld mulb retq rex.WX push fdivr imul pop (bad) outsl js or jo (bad) test movabs or (bad) test scas mov pop cld pushq sbb mov fwait cmp cltd mov (bad) jge xchg mov push lods mov rex.WB or push jb add callq rex.WR out adc int callq es rex.WRX (bad) loope push es es cmp add sub paddsb pushq pushfq sub and int3 adc lahf retq int3 add out out addr32 push xchg (bad) pop sub int fsubs sub mov jae sub rex.RX (bad) fldt loop xor sti sbb mov jl jge sbb cwtl cmp rcll (bad) out xchg (bad) and mov test and stos outsl and stos outsb ss cmc cltd (bad) jmp (bad) pop push (bad) sub and cmp je add and in shl rex.RXB sbb bswap add xlat jno ds rex.WRB mov and repnz (bad) (bad) fstl cli xor fwait (bad) nop nop (bad) popfq js add xor push adc retq mov movsl movabs stos clc add negl adc cmp xchg out int stos ss mov enterq add iret xor sbb jno jne push jrcxz adc andl jb xor stos rex.WRXB rex.W adc sub iret cs cs rcr (bad) (bad) enterq (bad) es movsl mov pop and or or add or addl in xchg fcoml mov sbb jrcxz cmpsl or (bad) sar jp (bad) xor or xchg insl stc add loop lock (bad) imulb xchg movabs callq sbb push or adc nop mov ja pushq in mov add adc fwait imull rex.X in sub lock in jo rorl (bad) push fwait addl ficom and mov or (bad) xchg jae mov or lea (bad) push xlat je rex.WRB rex.WR cmp rcll rex.XB (bad) ficompl enterq cmp pushfq or add int3 mov xlat xlat or cwtl rcll test mov in rex.RX sbb retq jmpq rex.RB or rex.XB adc fsubrs sbb pop fwait clc xor jne sahf (bad) jnp pop rex.RXB rex.WX xor movsb (bad) outsb jmp rex.XB pushfq cld push fsubrl js xchg mov callq mov movabs push (bad) (bad) test push clc mov (bad) sbb rex rex.WB loopne movsb mov test fsts movabs mov leaveq rex.WRX rex.WRXB rex.W (bad) rex.WRB notb jb xchg adc xor mov and jns (bad) fsubl cmpsb and mov cmpsl add pop sahf fstp movabs adc in rex.X xorl fistl jb mov (bad) js movabs push mov (bad) push xchg stos (bad) adc rex.RXB jp ljmp scas or mov stc add in pop (bad) xchg (bad) adc rex.RXB rex.WRX jrcxz movsl ficoml (bad) push mov imul lock je movsl mov adc negl push nop js rclb fwait sub mov divl fistl (bad) or adc mov fwait cmp movabs cli mov push adc int sbb rex.W jle (bad) (bad) or xchg (bad) xchg jnp cmp and mov callq and adc sahf es jnp jle mov adc sti or cmp adc stc jle mov add adc jmp outsl (bad) int3 push push mov sub rex.RB imul in sub sbb in icebp (bad) (bad) pop mov jne out int3 je mov push rex.RX push lods rex.RB cs movabs retq imul ror jno int retq js rex.WB (bad) jge cmp (bad) push popfq rcll std cli (bad) xchg (bad) mov jmp out (bad) and adc xchg and test adc lock fidiv pushfq mov sbb rex.W rex.XB nop enterq jae xchg sbb jmp add and rex.R test stos (bad) adc faddl popfq pop addr32 adc mov mov sbbl rex.B pushq ss test nop rex.RX sti (bad) loopne lea mov add scas imul adc orl mov rex.B adc (bad) lock scas cmp mov rex.R rex.WX xchg adc pop push mov mov or rcll xor cmpsb add sub push push (bad) ss cmp out jl rex.RX (bad) lcall (bad) mov xchg (bad) int3 xor or mov xchg mov cmp fsub movslq movabs sbb (bad) add fistpll or xchg mov sbb mov je fcomps pop movslq mov jno stos (bad) lock rcrl cmp pop callq movsb repz xchg (bad) adc cmp gs (bad) xor xchg (bad) (bad) (bad) movslq out push mov jmpq sub xchg (bad) pop or jne rex.R or cli sbb add rorl cmp imul and movslq (bad) lahf pop jno movb (bad) and gs (bad) retw cmp jle es add cmpsb cmp test movabs (bad) loopne sub div jrcxz rcrl sbb mov cs movabs rex.WX xor xor movslq sbbb retq rex.WXB callq repnz roll clc (bad) (bad) adc jo (bad) ja or mov push jmp mov (bad) insl movabs ficompl adc cmp mov adc or pop in cmc cmpb rex.WRXB mov out mov adc test pop out rex.WB sub jrcxz loope mov test icebp (bad) and sti out movabs in and or xor (bad) out insl jb jns add pushq int (bad) lea rcl rclb (bad) xchg out xchg and int insl (bad) (bad) movabs addr32 xchg (bad) retq adc out (bad) rolb mov addr32 add rorb sbb jns xchg (bad) pop xchg movabs retq pop rex.XB rex.WRB rex.RX (bad) imul and adc (bad) lods repz sub (bad) rex.X sbb nop (bad) mov insb lock push in sbb (bad) xor push add rex.WRX ds sbb hlt loop cld rex.RB pop or mov je pop std and bsr test stc enterq cmp add out shrb (bad) movabs (bad) cmc jg rex.R out (bad) pop sbb (bad) fisttp (bad) rex.XB jno jae mov repz pop jrcxz sub cmc xchg sub xchg shrl cld mov lock mull push test push pop sub movabs (bad) out xor ds (bad) rex.WRX or rex.RB (bad) xchg push xchg sbb fwait retq adc (bad) or and shr xor xchg jg rex.RX sti shrl (bad) (bad) lods in callq rex.XB enterq (bad) leaveq push adc jmp xchg and cmp (bad) jae adc cli clc (bad) fwait rex.RXB mov adc jp (bad) movsl sbb fdivrl retq orb jno mov mov adc cwtl cli pop and add (bad) and imul push (bad) (bad) mov xor push ds and enterq (bad) loope xor and rex.R rex.WR mov (bad) callq (bad) movsw callq fistp (bad) addb adc (bad) mov adc xchg insb (bad) add mov rcrb (bad) jnp sbb fs xchg rex.WRB add callq push or in gs rex.B je fstl mov cs push (bad) mov (bad) sbb sbb sbb movslq mov or outsb (bad) ss outsb lea pop adc mov or xlat adc jbe fdivl loop imul (bad) jg jne xchg or and in add or sbb (bad) add gs xor div out negb pop mov fdivrs jg fwait out stos sub (bad) cmp out rex.W rex.R fwait rcrb or (bad) lret mov repz mov mov rex.X mov movabs xchg int3 (bad) xchg test pop and xchg pop andl jns (bad) sub fwait add push sbb mov insb mov xor (bad) sbb (bad) mov mov stos in fmulp rex.WRXB jno scas sbb jrcxz callq or push sub xchg (bad) es (bad) jne sbb rex.WR and sub cmc (bad) add lods fistpll sahf and loop sbb pop pushq adc sbb fwait test pushq sbb sbb (bad) mov jge sub shll loopne setne cmc movsb sbb fwait jno adc (bad) fist (bad) (bad) int xor push xchg movsl jnp rdtsc or mov add jge cmp repz (bad) rex.WRB mov sbb jb fisttp xor faddp movabs add (bad) sti test pop mov movabs jne mov pushq mov in xchg insb cmp cmp sti (bad) (bad) mov je sub pop mov rex sti mov xchg scas in rex.R retq mov push retq mov mov xchg lea pop mov (bad) out ja stos ss and scas xchg adc (bad) xorb (bad) jmp imul mov mov sub jns mov (bad) rex.WRB addr32 adc out mov callq (bad) (bad) mov (bad) mov cli cmp (bad) movabs rex.RX sbb push jne fstps iret xor sbb jb fsubrs enterq fidiv cmpl jle sahf and imul rol jb fildll vaddsubpd movsb std jg mov je xchg xchg xchg and adc roll jbe std adc jg out jae insl jge or vmovhps jl pop enterq sub nop rorl and push lods (bad) and js ds or (bad) (bad) xchg mov in xor or bnd jl (bad) or sbb js rex.RXB (bad) ss (bad) mov mov lock rex.RX rex movsb cmp sub sarl js adc insl nop push mov mov imul lea xchg adc and (bad) imul cli or insl mov mov adc rex.WR lret sub xor repnz fstp in popfq adc or xchg jne (bad) in rex.WB stos jnp adc fldcw sub lods push xor fcompl hlt (bad) movabs jge or rex.W rex.WX xor leaveq mov and pushq adc mov (bad) sbb lea adc in lahf (bad) jge rex.XB (bad) cmc shl jns sub jg sbb callq jo repnz lret (bad) and frstor popfq cmp nop jge mov sbb ja sub lahf sub out (bad) mov and cmp (bad) xchg and sbb data16 fmuls test sbb xchg cmp jno jl sarl rex.RB movabs jo xor scas mov mov (bad) in int sbb jp lock (bad) (bad) and movslq (bad) (bad) push adc je shll sub mov (bad) ja rex.WRB popfq cli rex.WR mov cmp add add outsb (bad) jmp (bad) ficoml adcl adc sbb xchg jle adc mov xor (bad) (bad) jrcxz (bad) xlat mov out cmp jo fstps rex.RX sbb or scas xor ss pop adc (bad) pushfq mov (bad) or (bad) cltd (bad) fldenv add adcl in cmp xchg callq (bad) rex.WRXB clc (bad) mov (bad) shl (bad) or (bad) sbb (bad) out sbb stos fcmovnu iret negb fs jmp jne fwait in (bad) adc outsl cs mov test (bad) callq cmp add jge adc pushfq repnz rex.W sahf loopne add and pop adc (bad) push roll jno jrcxz fucomi outsb (bad) (bad) stos sub and popfq xor or popfq sbb movabs rex (bad) adc nop (bad) xchg ss sbb sbb mov stc test xor mov or jbe jle (bad) xor and rex.WRX rex.WRB adc fidivrl jmp mov or cwtl sbb xchg xchg pop imul (bad) xchg (bad) adc sub (bad) xchg and sbb or movsb jno or xchg lea (bad) je enterq mov adcl sbb pop (bad) iret xchg ss cmp rex.WRXB pop xchg cmpsl (bad) mov neg rcll sbb cmpsl jb xchg mov push xchg adc sbb mov (bad) sbb adc rcrl int xor push lea rex.W add xchg and imul jmp mov push jge movabs cld mov push adc imull in movabs pop mov scas lods je adc loope enterq pop (bad) test fildl sbb rex.B stos cvtdq2ps or lret jae insb enterq data16 mov rex.WRXB ss adc movabs or jo rclb (bad) mov sbb mov pushq movsb push (bad) adc in in outsl cmp pushfq cs icebp or pop mov or cmp push rex.RX or retq cmpb add out or xchg push jne pushq push jns (bad) mov pop jb rex.X push push (bad) hlt or and fsave fsubl xchg mov data16 out (bad) and es or (bad) out pop or movabs and (bad) (bad) rex.R fs mov addr32 in sahf (bad) sub ds ss fstpl pop (bad) or (bad) (bad) push mov icebp adc orl adc add xchg pop mov pushfq add xchg jo sbb cmp imul int3 rex.WRB mov (bad) cmp mov rex.WR sub sbb rcrl or movslq or iret cmp fisubl cmc pop (bad) lahf mov rex.RXB fwait (bad) push (bad) add je orl jg and fild add (bad) in mov (bad) jp (bad) out jb leaveq rex.XB in pop cmp movabs xchg jns rex.RXB (bad) rol cmp ja movslq in add mov cmc (bad) jns imul (bad) mov push xchg lods ds loop or and stc cmp sub cli rex adc rex.XB out outsb or mov rex.XB or movslq mov lret or rex.WR int3 clc mov cwtl push cmp rex.WRXB (bad) (bad) mov shl add jno fbstp or popfq fsubr rex.WXB adc sub mov mov jae (bad) fldl xor rorl adc in rex.WRXB xchg imul (bad) mov jmp adc mov mov je mov xor movabs (bad) cmp rex.X imul xorb (bad) push icebp vminsd mov and popfq nop jno lods add add sahf test rex.R cmp (bad) xor orl mov (bad) iret jne xchg rolb push xor add rex.RXB (bad) mov rex.RXB (bad) adc (bad) jno xor iret adc xchg (bad) adc test mov lret mov adc push jb (bad) or mov movabs xor jbe pop clc std jg rex.X xor jmp (bad) (bad) rex.XB or (bad) adcl adc imul jns (bad) cmc (bad) add xor cwtl or insb pop rex.W rex.XB xchg push jl lock imul push mov adc push xor movsl rex.RX insb sub lock outsb mov jae adc rcl popfq adc callq xchg fwait icebp xchg or xchg rex.WB sub sbb cli or pushq outsl sbb (bad) cmc retq xchg js sub cmp sbb rex.R ss jg data16 (bad) (bad) and repnz insl cmpsl popfq faddl and (bad) cmp js add hlt pushq adc (bad) rex.WRB pop jo or or xchg (bad) lock test adc or jo (bad) mov jne rcll (bad) push fnop (bad) lods push clc push mov cld jl jae (bad) jne xchg sub sahf adc sbb and and imul (bad) rex.WXB movsl push adc push push or lods jb cmpsl fistl (bad) xlat mov cmpsb outsl insb addr32 adc movsl sub pushq sub xor push add lret cld xor (bad) callq (bad) push xchg movabs rex.WX (bad) (bad) jl callq movsl (bad) and adc (bad) retq rex.WRXB mov mov ja icebp stos pop mov adc icebp rex.RXB rex.RB lock retq adc pushq outsl lods or adc mov pop cmp js sub (bad) mov fdivrl sbb mov mov sub frstor incb movabs rex.B adc adc (bad) insb xchg mov fcomps jle std mov lock rex.WRB adc out jo cli adc addl mov adc (bad) and mov fistpl (bad) fbld out adc mov cli xor pop in xor or mov xchg mov push add sub jae (bad) sub cltd lret fldcw xchg (bad) and xor (bad) (bad) mov sar movsl pop and cmpsb adc rex.WXB pushq rcll xchg data16 test add push sub push rex.X negl repnz rex sbb and popfq fmull jg lahf jno sbb hlt or and jnp movabs out add mov rclb cmp mov leaveq sbb push stc mov cwtl xor rex.WR movsl (bad) (bad) (bad) rex.WB je mov adc rex.RXB rex.RXB stc or shll callq rex.RB sub callq mov jl roll (bad) ss push jnp movabs movl (bad) fdivrl in in loop jmp (bad) lods (bad) mov (bad) cmpsb cmp fadd (bad) xchg movabs js,pt andl sbb xor rex.WRXB add psubsw stos push xchg clc clc iret add andl ja (bad) (bad) bnd jrcxz sub fstps add imul iret and imul (bad) cmp lea cmpsl xchg xlat lods push (bad) cs rex.WRXB mov xchg negl fiadd mov sub jmp (bad) fyl2x pop pushq sbb repnz (bad) and (bad) js (bad) jge jmpq repnz and jg add movl mov test xchg ja ja fcoms rex.WRX sbb in pop xchg sbb adc jo mov and rorl sub (bad) int3 (bad) cwtl pop repnz adc stos (bad) js adc or cmp (bad) sub (bad) add rex.RB ds repnz mov mov and pop jns jle mov xchg stc xor rex.WX repnz and leaveq (bad) out imul (bad) out mov cwtl mov adc jo (bad) stc (bad) fidivrl callq cmp or fildll push push rex.W xor negb (bad) pop and jge mov (bad) xchg loope movabs push sbbb xchg (bad) loopne test sub sbb sub jno (bad) mov test jb cli shr fisub test (bad) movabs retq sbb push (bad) xor outsl popfq fwait and (bad) and add (bad) fwait (bad) and fadd (bad) xchg (bad) jae stos jg rorb mov repz (bad) pop mov sbb jno or push (bad) mov scas mov fisttpl push add mov push cmp retq callq out sub fidiv enterq (bad) mov (bad) (bad) mov rex.WX rex.XB and outsb (bad) out fldenv pop callq sub rorb lea (bad) and pushfq cmpsl (bad) mov add mov (bad) (bad) callq test pop add jle adc mov add repnz movabs ljmp leaveq add in mov cmc callq stc imul enterq pop sub and lock jae mov movabs mov adc ds es (bad) mov (bad) rex rex.WRX and int3 rcrb notl (bad) movsl iret fwait cmp sbb loopne repnz mov retq sub xchg loope add addr32 hlt lock mov push adc cmp xor jae xchg rex.WX mov cmp xor mov jnp cmpsb cmp push xlat rex.WXB roll ror xchg rex.WRXB in jrcxz (bad) test imul popfq fist jrcxz test adc repnz jae adc cmpsl (bad) rex.WRXB movabs fcoms xchg movsl mov adc pop jl adc (bad) sub mov adc cmp adc sahf out or (bad) shrd adc jp jae adc icebp jbe sub rex.B xlat pushq xchg pop push pushq (bad) in insb and xchg and lahf add or jle rorb sbb ficoml adc cld mov or (bad) sbb in clc jnp lock loop xor iret popfq addb mov fmul add and push in push insb and jge push mov rex.WRXB iret (bad) rex.W push jp (bad) jno icebp lahf rex.WRB outsb mov and (bad) or rex.RXB jl callq and cmp (bad) in jl in push stos ss mov sub in retq (bad) insb xchg push mov adc sbb (bad) cmpsl gs adc (bad) add retq xor xchg adc rex.WXB ja push xchg cmpsb (bad) pushq and adc in jmpq pop rex.RB rex.WX xor mov rex.X mov adc jrcxz vcvttsd2si adc jp adc movabs pushq sti (bad) (bad) mov mov adc addr32 adc jge xchg (bad) jge adc add (bad) ss inc jns enterq rcll sbb fildll xor clc sbb hlt add clc ja lock outsb cmpsl adc in adc outsb xor add addb test mov fadds rex.WRB movabs fwait adc jle adc sti iret rex.WRX adc stc cmpsb jb jbe fwait (bad) adc mov shrl callq xchg xor imul xchg std jg cmp insl or xchg cmp add mov fmuls xchg xchg xchg movslq jmp xchg lock mov out mov lea retq push mov out xchg (bad) (bad) xchg mov cwtl pushfq repz icebp mov sbb mov or loopne loopne xchg xlat cmp pop sbb (bad) (bad) iret add xor add lock mov pop test lret in rex.XB out mov rex.WRB (bad) mov cmc sbb lock cltd rex.B (bad) sbb notb (bad) push xlat mov scas sbb cmp (bad) cmp pop sti and (bad) push ss jl (bad) push and imul ss mov jb add rex.R rex.B jne psrld iret pop fucomip (bad) mov (bad) out sub lahf and jb cltd (bad) lock (bad) cmpsl xchg (bad) cltd push xor lods stc shll rex.XB (bad) loop loopne (bad) cmp rclb jno (bad) mov in retq cmp enterq jmpq callq rex.WRB cmp (bad) jmpq xor retq (bad) rex.WRB (bad) (bad) repnz mov pop xchg mov pop outsb icebp scas lock jmpq callq in mov in stos sub mov and mov int3 fwait sub cmp (bad) rcrb jo test repnz add add sub (bad) (bad) insb rcll mov rex.B add (bad) rcl ficomp out sub and cmp add and (bad) rol retq pushfq sbbb jmpq pop rolb xchg (bad) jmp rex.WRX add sbb pop xor js (bad) xor adc jg mov xchg rex.B or test add int xchg xor rorl lock push sbb mov adc notl or sbb icebp mov (bad) rex.W jne (bad) enterq or movabs jae mov rex.RX sub push xchg sub adc (bad) jmpq sub je addr32 sbb and jp (bad) rex.WRX lea mov movb xchg cmpsl sub lock sbb adc jp cli imul (bad) cmp js (bad) sub in lea add mov cmp and (bad) push rex.R je push xor mov cmpsl scas adc (bad) (bad) lock (bad) pushq mov rex.B subl and adc (bad) jge push rex.WRB outsb sub push jo cmpsl mov test insl adc (bad) add movabs cld jmpq movabs int3 sub out sbb sar or jmp or scas lods fsub sahf addr32 jp shl add test pop mov add popfq cmc jl mov mov pop mov rcrb mov rex.WR (bad) hlt sarl cld add adcb ja repnz jae mov rex.RB fdiv mov rex.RXB jb xor xchg adc sahf mov cmp movsl loopne xcrypt-ecb cmpsl mov jge popfq or (bad) sub add lret rex.RXB or test movabs test xchg rex.XB mov addr32 sbb add shll seta iret notl adc mov test mov std jge and out (bad) iret add outsl xor sbb sahf lahf mov xchg cld add lock jns (bad) movabs jno out sub jns mov (bad) imul cltd out adc (bad) retq movabs idivl addr32 cmp rex.X xor fldenv mov (bad) cld in out rclb retq adc callq sti popfq insl adc mov fsubr (bad) pop cltd xchg pop and add movabs mov mov adc adc movb rex.WRB fisttp pushq lods adc rex.WX (bad) mov jno roll xlat sti sub or xchg icebp add stc js jno (bad) sub mov xchg es sub xchg add push xchg repz loopne (bad) std (bad) pop ficompl fstpl adcb iret or pop lods adc (bad) jp xor in leaveq rex.R mov or mov imul jg fs shlb mov js or (bad) mov scas (bad) sbb sub (bad) out stos jmpq adc (bad) mov lock sbb mov (bad) pop sub jg adc adcl xchg xor adc cmp cwtl add sub addl fwait xchg (bad) (bad) mull and jmpq mov movq rex.B adc sbb pop fstl jne ja enterq cwtl rex.RB rex.RXB pushq lahf add leaveq (bad) fsubrs push int3 hlt fs sub pop shl test sbb adc sti divb fiaddl mov (bad) loope data16 cmpl jne mov fist jbe (bad) adc or movsl es xchg adc stos enterq mull cmp pushfq adc movslq and or jl mov rex.WRB sbb adc adc mov xlat push imul pop orl adc ss mov xor push mov xlat sti cli mov (bad) adc test push fnstenv lods addl loopne (bad) (bad) cmp jrcxz sub out popfq adc sbb movsl test jbe movabs imul (bad) int3 xor adc mov adc mov leaveq pushfq stc cli loop in (bad) add ss push (bad) (bad) in cmpsl lods add pop (bad) (bad) sub jnp mov (bad) lods (bad) (bad) and jae ds lods cmp add xchg (bad) test xor fadds (bad) rex.WR cltd push loope icebp add popfq cmpsl movabs movsl (bad) mov (bad) pushq mov and add (bad) xor and (bad) (bad) jrcxz rex.B (bad) pop jle int3 pop xchg sub fisub cli ss pop rex.WRX shrl mov retq outsl (bad) mov mov (bad) loopne div mov lret pop divl outsl (bad) movabs and js int (bad) cli shll adc insb ds rex.X (bad) (bad) pushfq rcr data16 imul fiadd lea cmc es (bad) pushq xlat retq cmp std jg ljmp mov xchg mov pushfq cltd fcomip out fstpl mov rex.X xchg sar mov pop ja and adc add pop cmc xor lock sub sarl lea or popfq clc fwait scas icebp push pop cli (bad) cld js movabs adc test add rcll (bad) (bad) fld jbe rex.RB movabs xor push jmpq (bad) or rex.B sub movabs adc repnz in insl retq pushq cmp fwait (bad) and cmc xor or xchg retq fs pushfq mov (bad) nop or roll jno movabs movsb (bad) jbe cmp (bad) lea ja pushfq (bad) fnstsw lret lahf out (bad) (bad) rorl cmp adc gs pop cs mov mov (bad) sbb jae imul out gs (bad) mov (bad) jno sarb jmpq pop xor imul rex.WRB fwait or rex.RXB mov pop or jns jns (bad) test cmp jns sub js (bad) js,pn in push shll (bad) mulb cmp (bad) pop es and stos xor rex.RX sub push and push pushfq (bad) cli pop xor (bad) fadds pop es (bad) mov clc xlat (bad) mov addl sub xlat cmp js loopne lahf jno int (bad) in mov cld sbb jo xor or or mov fistl xchg lret cs (bad) fmull jno xchg add sbb add cmp cmp out divb nop cmp (bad) sbb adc jbe fisttpll int leaveq movsb movabs rclb pushq (bad) xchg icebp cmp pop jmpq (bad) out mov mov cmp xor mov xchg push and cld mov movabs xor leaveq callq cld (bad) sbb add mov cmp (bad) fidivl (bad) movslq push lahf fstpt pop or xor sbb mov xor (bad) icebp (bad) (bad) (bad) (bad) pop test pop movabs sub (bad) (bad) xchg cmp adc cltd rex.W rex out lock repz rcrl sbb retq sbb jg add (bad) (bad) mov sbb jns insb stos cltd rex.RX ss (bad) and rex.WR loope in rex.WXB ss cwtl sbb rcll js cmp push mov movsl fs (bad) rex.WB and or rex.XB data16 (bad) out xchg mov adc pop sbb push mov jge and fmull cmc ja (bad) data16 (bad) sub cmc (bad) (bad) int (bad) xor mov cbtw adc jo popfq or int stc cltd rcrb (bad) pushq (bad) cmp (bad) data16 jmpq ds (bad) rex.WXB test sub jmpq rcl mov js mov adc mov pop adc fsubr add sbb rex.WX bnd adc cmp retq sbb mov push lret callq mov outsl and imul (bad) nop push xchg movabs lahf (bad) xlat pop decb movsl xor (bad) iret in push (bad) mov (bad) outsb pop mov fcomip sbb jmpq rex.WX (bad) fmuls insl (bad) mov adc xor outsl push mov out pop out push (bad) rcll and sbb lods mov xchg lahf (bad) shll pushfq cmpsb xchg (bad) rclb (bad) push xor sbb cmp xor mov cmp out mov (bad) add jge movsl mov (bad) (bad) adc fmul pop (bad) mov sbbl sub and popfq push movabs xchg lock shll (bad) (bad) lock cmp mov (bad) mov (bad) movntps cmc sahf mov movabs hlt sbb xor lock mov insb xchg pop jnp adc jae sbb rex mov movabs cmp mov jle xlat cmp cmp sub shll rex.WRB (bad) mov mov sub rcrb movsb insl jae orl push xchg lods callq add cmc jmpq and jle rex jo rex.RXB jbe (bad) (bad) and adc pop xor mov pop jrcxz (bad) movabs xchg mov push mov jnp cli roll fimul nop out jb pop add add insl or pop rex.XB out (bad) movsb andb (bad) paddsb rex.WR stos scas rcll rex.XB lret sti adc mov (bad) push fucom pushfq lods (bad) xlat (bad) in (bad) movabs loope push imul out int int3 (bad) mov (bad) mov sub add int (bad) (bad) adc cmp and (bad) rex.WRB xlat idivl mov (bad) gs add sbb (bad) or lret xor pop jbe pop add vandnps sub pop movabs (bad) out rex.X in adc retq mov fisubr mov cltd fwait push or adc sbb jg ror (bad) enterq andl adc divb jmpq or jbe sahf (bad) or lahf xchg movabs mov push xor movslq rex.WXB cmp (bad) insb xchg sub cmp fdivr sbbb pop pop stos (bad) add pop mov mov sub icebp mov push add jae movabs fildll int3 fldcw rex.WB cs jno out and shl xor rex.WR int out rex.WB fcompp rcrl mov (bad) mov cmp fmuls int3 or pop jp movsb fs nop es mov xchg push int3 jle fsts adc (bad) sub roll popq enterq callq adc mov std rex.RXB or js push (bad) mov or cld loop in je cmp push mov retq cmc adc adc mov (bad) (bad) mov mov adc movsb mov pop fwait pushfq icebp mov adc xchg mov rorl jns in fs cli push out adc mov movabs (bad) adc outsb (bad) xchg jrcxz add ja adc xchg fcomi xor adc lahf cld imul testl out xchg in add add or push imull stos mov fld1 fs gs outsl lods repz xchg out mov callq mov rex.X outsb je (bad) cmp movslq rclb or bnd lret stos (bad) movabs adc jae jge addr32 (bad) or loope out sub ss scas movabs mov fwait ds out sti adc sub (bad) xchg bnd in jmp lods (bad) rorl mov (bad) (bad) ss movabs cld jns movsb xor mov (bad) xchg pop or outsl (bad) (bad) (bad) xor lahf (bad) mov stc jg cld xorl iret xchg sbb (bad) cmp cwtl sub (bad) jrcxz lahf adc sbb xchg jrcxz adc (bad) xchg and (bad) sbb add movsb cmc (bad) xchg push cmp add sub rex.WB std push cmp lods cmp rex.RXB imul (bad) xor xchg in rex.WXB gs mov (bad) (bad) and std mov lods push shrb loope rex (bad) add insl mov lahf divb stos andb mov pop rex.WRB shr xor clc repz jge hlt (bad) xor test (bad) sbb jne in rex.R jne and js mov jg (bad) hlt mov jle scas cltd (bad) or pop pushq mov mov add imul movslq and xlat loopne rex.WXB (bad) mov and (bad) repnz (bad) lods or test push rex.WRB rex.B adc jo cmp iret or pushq jmpq pop (bad) xchg or rex.RX rex.WRXB and add xor mov rex.W ficomp leaveq adc es adc mov adc cmp mov out (bad) (bad) outsl hlt cld fsts pop in out or mov mov mov xchg jbe mov mov fstpt fxch fwait sbb enterq jae ss mov test push pop cld imul pop mov push mov adc sub xor mov xchg movsb (bad) fcmovnbe (bad) cmp out or sub rolb adc outsl icebp jnp push jl jo push sub add cmp or xorb jmp jb in (bad) jle (bad) adc rclb rex.B xor (bad) rclb pop rex.R retq in (bad) jo sbb and jmp pushq jmpq (bad) xor in in enterq rep popfq loop cmp lea (bad) jbe rex.W retq cmp scas sub mov in jnp rex.RXB scas in loope (bad) int3 rex.RX cmp insb hlt mov rex.X stos sub mov test cld jo sub insl and cmp repz rex (bad) stc fnstcw sbb mov and (bad) rex.WRB (bad) jrcxz mov lret enterq (bad) sbb (bad) xor test enterq xor callq shll (bad) xchg pop cmp fnstcw mov rex.XB jge pop stos or iret lret mov mov mov pop ds mov retq rex.WXB xchg out rcll lcall cltd jp ja lahf cmp scas rex.WRX xor test pop xchg (bad) jo rex.X rex.R rex.X mov or retq rex.WRB mov jl or andl fdivr add jb xchg push and (bad) in pop push movsl (bad) gs jl,pt adc movslq js pop cs jp fbld stos add and rex.WR adc and loope rex.W lock imul imul add repnz scas sub add subl add sbb fnop or punpcklbw test sub rex.RX mov out (bad) fcoml rex.WR jnp adc sbb movabs js int3 xchg sub pop mov retq mov or movsb push mov (bad) pop (bad) jo (bad) adc callq (bad) fld1 fsub rex.RXB notb rex.WXB or sbb (bad) sbb jno xorl lock mov and (bad) rex.WX cmp in adcb pop je mov (bad) std callq rorb mov xor in in add insl test (bad) sbb test sub xor fldt (bad) push lock (bad) jnp rex.WRXB (bad) mov insl and lods mov icebp notb mov sub cmp (bad) mov adc rex.RX mov sbb mov and (bad) or or scas adcl mov stos add cmp fwait sbb (bad) (bad) (bad) js push fstps (bad) roll bsr rex.R mov add sbb (bad) subl sub mov shrl rex.WB lret adc repnz stos sub xchg movsl or add addr32 adc rex.WB jl rex.WXB rex.RB rex.WXB (bad) xor jno push out xchg or (bad) hlt (bad) fucomp add repz (bad) (bad) leaveq std cmp callq adc icebp callq or (bad) push clc nop pop enterq cmpsl movabs setae adc fisubrl or adc mov mov (bad) addb jne retq push xor mov movsb and or pop jbe int3 rcrb out repnz jp sbb adc retq and callq jge in movsl jno cmp test rcll repnz rex.R cltd (bad) movslq or xlat and bnd mov mov adc lods push xor (bad) gs adc jno mov adc mov xchg gs (bad) out (bad) push pushfq push mov pushfq jle rex.W adc rcll sbb xchg sub push movsb test mov cwtl rex.X (bad) pop (bad) std (bad) mov es (bad) out callq push xor mov mov pop callq adc cmpl sahf sbb rex rex.WB jb jnp cmp cwtl cmp pop (bad) sbb sahf fcompl repz jbe cmp (bad) xchg jge (bad) jno cmpsl (bad) push pushq xchg push (bad) ja rex.WRX push fcomp pop sub mov push jrcxz jp cmpsl mov leaveq push faddp iret xor sbb (bad) stc movabs mov push xor fwait xlat and outsb insb xchg out icebp (bad) (bad) frstor and movabs rex.WR (bad) push (bad) js icebp rex.WX (bad) cmp out xlat mov repnz (bad) mov and cmpsb rex.X mov and (bad) stos (bad) sti pop xchg rex.WRX (bad) ds test adc mov jne add fdivrs out mov mov pop rex.WX (bad) fdivl lret je test (bad) push (bad) sub xchg mov loopne adc pop (bad) adc (bad) movsb icebp rex.RXB repz callq lods out adc mov lock adc outsb xchg mov add (bad) (bad) pop stc mov adc hlt jns cmp or ja ss jae pushq sub adc add adc mov (bad) cli jne adc (bad) xor jns sbb scas mov adc fldcw rex.WR cmp clc adc mov (bad) movabs out mov (bad) (bad) sub lea cmp cmp rex.RXB rex.WRX sbb (bad) mov jg frstor and imul pushfq mov mov rex.RXB (bad) sbb xchg cmp sub adc int3 movabs movslq and (bad) push xor jbe lahf nop sub in push movsl pushq rex.WRB rorb and icebp mov rex.WRXB xor (bad) rex.RX (bad) mov mov cltd pop lahf sahf xor idivl mov movsl push xchg repnz adc pop movabs js scas hlt xor fwait (bad) popfq lahf add test cmp pop rex.X fwait mov addr32 in lods pop push cmp notb (bad) callq mov jmp (bad) (bad) xchg movabs test or jl (bad) hlt ss xchg jo mov xchg callq js add (bad) rex.RX nop and pop cwtl rex.B fwait insl adc pop (bad) adc rclb out mov pushq jmpq movabs repnz cmpsl pop or fsubl addb out movsl movsb repnz shl sbb outsb add lea pop (bad) (bad) (bad) (bad) sbb (bad) mov (bad) adc lea popfq add rolb cs sbbl jp test xchg pop movsl jl jmp lahf adc push push retq (bad) jg (bad) outsb (bad) sub (bad) enterq rex.WRX mov enterq (bad) std cmc pop cmp (bad) cmp and xlat pop sbb stc cmp (bad) jmp cltd movabs sbb cli jl movslq test (bad) ds xor rorl jne (bad) imul leaveq mov mov retq stos rex.WX xor (bad) or (bad) loopne lahf push add push xchg lea jne xchg jp sarl add cmc jg js clc andl mov add or xchg icebp subb sub sbb lock mov (bad) (bad) add shlb pop add rclb mov subl push xor sbb fsubr cld pushq xchg add sbb and pop rex.X adc (bad) fsub cld and in xchg and push bnd cmpsb or stos sub retq loop lock (bad) pop rex.WR cld and mov cmpsl gs insb pop sbb jne fimull out mov in xor hlt loop cmpsb or pop and pop es or sbb (bad) add leaveq jrcxz cld mov callw divb out lods xor push adc mov loopne fstpl jb out imul xchg adc xchg movabs rex.RB jae or jle movabs mov enterq pop sti popfq mov xchg lea mov sahf (bad) cmpl add jne out and (bad) mov cmp cmpsb (bad) imul jo (bad) addr32 fcomps sbb je adc gs (bad) or leaveq test lods sbb add fdivs adc rex.WRB test or pop xlat in mov adc frstor sti iret cld cmp sarb imul pop mov movabs mov int3 rex.WR jl (bad) xchg mov sbb out out rex.RB adc fnsave xor xchg push jmp (bad) jge iret cltd retq (bad) (bad) xchg jg xlat xchg mov pop stc int jb xchg fwait in and popfq adc imul rex.WRX stos sbb push sub or (bad) (bad) mov adc push rex.R mov je jge cmp insl (bad) adc fisttp out mov rex.RXB jrcxz mov adc cmp test icebp fsqrt adc out sub xchg jnp mov jmpq scas jns and movslq cmpsb (bad) sti adc add (bad) lahf pop sub jmpq jge sbb stos (bad) mov (bad) movabs (bad) (bad) mov mov stos rcll nop xor pop clc add and jmpq jno jne fildll cmc insb iret xchg sub jno out or fadds cs in mov adc cmp sub xchg mov repz lock xchg pop sub fcmovu out fstpt js (bad) hlt adc (bad) and sahf enterq mov es or (bad) mov scas cmp and jno outsl rex.WRB or cmp rex.WX adc cmp adc loop (bad) sub mov sub jno (bad) fnsave pop fsubl rex.XB int fdiv cli (bad) xchg sbb mov push lock out (bad) jp clc or test pop lea data16 rex.WXB jno icebp sbb cmp (bad) (bad) jge rcll cmp sub push jg cmp out sub pop rex.RB fdivrs (bad) out rcrl sbb fstpt imul ss (bad) clc stos fadd and fnstsw fldl cltd or clc (bad) cmp or test (bad) cs hlt enterq jae jmpq jge pop (bad) rex.RX movhps or cmp (bad) jle push (bad) xor (bad) add xor push fcoms adc icebp out sbb (bad) jl xchg icebp jle movabs sbb or fwait mov cs (bad) lods jmp push rex or (bad) scas jno divb jns mov cmp rex.W test jg repz (bad) sub enterq outsl mov jp rcr pushfq ss sub rex.X add and icebp out jne jno fstps fs ja sbb ja or out rex pushfq (bad) int3 (bad) rex.WR lods sub pop rorb lods mov mov jo repz mov cwtl add test push rex.RB add (bad) je ss popfq adc callq sbb and movabs xchg xchg cmp jmp lods adc sub push mov rex.W mov lea stos rex.WB movsb push xchg mov sahf (bad) ja movabs jbe movabs pop ss push cmp rex.RXB push sbbl loope setnp (bad) (bad) push mov movabs mov retq sub (bad) add imul pop lret (bad) (bad) sbb iret xor rex.XB insb rcll (bad) jo pop andl add lock int or mov cmovne sti test jrcxz (bad) shrl adc jo (bad) adc shrd sbb fwait jno push pushq adc iret xchg popfq mov lret sub (bad) fildll fs repz mov sub loope sbb fildl cltd (bad) xchg outsl push movabs pop jns out lret outsb (bad) rex.X scas (bad) jne pop and xchg adc jp sbb adc mov icebp jbe xchg adc and data16 sub pushfq imul adc cmpsl cmp mov scas jne lahf jbe add pop test (bad) adc adc mov mov add mov ja int3 (bad) xchg js rex.WRXB rex.XB (bad) cmpsb rcrb fsub cmp or sti (bad) sub gs (bad) pop ficomp rex.RB fwait sbb adc pop mov (bad) data16 rex.W addr32 fbld mov jb (bad) (bad) iret adc fimul cli jns fistpl adc push (bad) adc sbbl enterq lock sbb rcrl (bad) xchg and cltd setg clc and (bad) add callq cmp mov xor (bad) icebp xor callq retq push (bad) mov xor bnd and std jo fucomip sub rex mov mov faddl rex (bad) jl movabs lret jge frstor imul mov (bad) add out rex.WR data16 movabs cmp jae xchg es test idivb and push sub fisttp (bad) xchg (bad) pop fdiv (bad) (bad) cs pop push sbbl (bad) (bad) add jmp xlat enterq cmpsb rex.B add (bad) in retq lahf xchg rex.RB add jrcxz imul (bad) add rex.RB add adc jl sub mov and rex.W orb add sub mov (bad) insb retq (bad) mov or or (bad) popfq rex.WB imul rex.WXB scas rcrl adc pop imul (bad) (bad) mov sub repz sbb lret and rex.RX push pop push (bad) rex.X add jbe lods pushq (bad) (bad) cwtl sub lods mov (bad) (bad) nop lock pop mov xlat (bad) loopne push ficomp sbb (bad) xor jrcxz jno sub (bad) cltd xchg loop mov rcrb fmul (bad) xor (bad) loop (bad) push mov sub lahf lods jbe xorb xor sub xchg (bad) jg sbb icebp leaveq rex.XB cmpsl lods or (bad) (bad) cmp std callq loopne (bad) gs jno push lahf add sbb vcomisd (bad) sti jmp cs repz retq xchg (bad) (bad) mov mov mov push mov lahf cmp jne mov pushq rex.RX or add (bad) mov cltd pushfq xchg icebp mov mov movb es add pop sbb jns xor cwtl xor xchg add rcll rex.XB pushfq xchg addr32 fbld xchg jne mov rolb sub (bad) repnz icebp xorl faddl sub lods rex.WRXB gs xor mov push addl (bad) and and xor leaveq ds pop mov adc (bad) rex.WR frstor movslq retq (bad) cmp xchg mov cwtl adc movabs xor pop movsb xchg enterq mov sub mov (bad) retq adc (bad) (bad) add clc test jg add adc repz mov pop and out jp cmpb mov and adc (bad) (bad) rolb or mov xor mov jg rclb rex.RB lock xchg rex.WX (bad) mov vpmaxsw pushq (bad) sbb (bad) and pushq mov (bad) adc or adc cmovle push callw loopne int je xor push xlat out mov jge (bad) xor jb mov es rex.WB cmpsq sbbl repnz cltd pop cmp clc out pop xor sub jnp andb xchg push fistpl lea rex.RB in mov rcll sub pushfq mov (bad) adc cltd cmp push (bad) pop jl cmc int3 scas (bad) adc test sub icebp rclb adc xlat (bad) add sub sub test add fwait pop add add pop sub xchg negb movsl in lods push (bad) test mov lahf cmp pop and test pushq sahf out or jno add pushq addl movslq or add (bad) outsl (bad) ror (bad) bnd or (bad) insl mov push jp (bad) cmp (bad) js iret sub repnz rex.B insb push sub jbe or mov stc lahf or xchg pop adc and lods (bad) ss mov movslq or mov (bad) test rex.WRX je sub (bad) jg fcoml (bad) scas (bad) lods clc or xlat mov sar (bad) add rex.RX (bad) add test pop xlat (bad) (bad) or ss cmp mov pushq out outsb (bad) (bad) jle mov faddl (bad) sahf adc scas xor xor (bad) fdivr imul push adc rex.B pop pop (bad) push and in jae pushq adc adc lret lret and mov js pop movabs (bad) ficoml jle fldcw adc push lretw test (bad) mov mov (bad) (bad) adc lock (bad) cwtl fidivr cmp imul sbb and xor sub (bad) (bad) addr32 imul or jno (bad) ficom popfq repnz xchg sbb xchg adc jnp mov vunpckhpd lret (bad) fbstp rex.XB mov sub push test xor fstps (bad) jne push jo test or fcomps cmp (bad) (bad) rex.X adc sub (bad) movslq pop jle div jne xchg stc rex.XB rex.WRXB in insb mov mov jg (bad) adc cwtl (bad) retq movabs rex.RB fs adc outsl mov lock jb add movsb rex.RB mov stos push sub movabs scas xor mov fdivrl adc rex.WRXB stos repz rex.RB clc leaveq pushq in mov adc jge (bad) (bad) mov adc int3 push xor out ficom in cmp in jmpq stos push adc (bad) (bad) fistl mov adc rex.WX sbb xchg je (bad) pop rex.XB xchg (bad) ja and in (bad) pop (bad) rex.X and and push rex jle rex.B mov pushq stos adc callq fnstsw adc incb repnz in cmc pop adc rex.R or xchg xchg ds adc adc lret (bad) std shrl adc push xchg (bad) cmp xchg adc pop loopne ds jle and movsb jl callq and xor push mov mov fild int3 in xchg repnz stos out imul xor cmp (bad) rex.WRB xchg or iret movslq jg enterq and push mov and and push test xchg rol repnz or adc es xchg (bad) rex.WB xchg adc xorb movsl insb (bad) adc movsb test (bad) add jo mov adc sub adc (bad) rex.WRXB rex.WRXB out jmpq mov and and mov and xchg rex insb adc test sub (bad) (bad) mov xchg push (bad) mov adc mov pop movslq int3 rex.WRB jl push stos or (bad) test pop or cmpsb mov pop mov (bad) addr32 rex.WRXB cmp loopne mov in callq push cmp clc adc rcrb pop mov xor mov xlat pop insb roll enterq sbb jge rex.WXB xor xchg rex.WX rex.WB or adc cmp xor jo ja adcl std in add jne rex.RX movabs push sub out leaveq pushq out jno or (bad) out rex.XB mov adc xor (bad) or loop ds push pushq out jne cltd out sub xchg adc je rex.WXB (bad) (bad) (bad) mov retq addb pop clc lods lret rex.WR rcll and scas rex.WRX jrcxz adc cmpsb rex.WRB movslq jmp adc repz addl (bad) and movabs and (bad) cmp mov adc mov adc add or mov and (bad) and mov test ficompl cmpsb and (bad) enterq pushq pop jne pop lret sub rex.RXB in enterq xchg clc push sti (bad) lock jo (bad) std psllq test out adc jbe cmp loop,pn orl or movabs fnstsw cmp jb sbb add push push and cmp in adc mov sarl (bad) loopne cmpl rex.R adc xor rol insb outsl cmc (bad) jno movabs (bad) mov push (bad) insl sti pop and test add adc add or adc and xchg (bad) adc movslq clc pop int cmpsb xchg rex.WB sub sar clc mov hlt callq lods xchg (bad) fdiv (bad) cmp sub pop push and fisubrl add cmp cmp add sbb shr rex.XB xor xor jno iret fiaddl jmpq rex.WRX rex.WX rex.WR stos shr or mov std ja (bad) fcmovnbe rcll rolb addl rcrb rex repz sub addr32 rex.RXB xor mov xchg stos fisubr lret mov xchg add mov push push jrcxz or sbb and (bad) std xorl adcl popq rex.WX and mov fistpll std addr32 rex.B push (bad) mov rex.RXB (bad) lods (bad) in push out (bad) adc sbb vlddqu (bad) (bad) pushq jl incl sub rex.R or adc mov repz xchg jp fadds sbb outsb (bad) xchg enterq jne pushq (bad) rex.RB movslq jae mov adc cmc outsl mov (bad) lock xchg push rex.RB cmp lock sub in fidivr rex.RX outsb adc movsb mov sub rex.RXB or sbb xchg fdiv (bad) stos fnsave rex.WRB rex.WRXB imul add fmul add out add sbb popfq mov rex.WR insb cmp (bad) pop frstor adc xor add rex.WX lods mov sub xchg fcompl addl cld mov shlb test xchg jmpq in (bad) or mov (bad) cwtl xchg je rex.WRXB mov mov imul rcrb xchg js sbb xchg xchg mov xor pushfq and out (bad) push ja xchg push int3 stos xor (bad) rex.WB mov xchg (bad) adc sbb sub cmp mov add imul mov insb cmc shrb int3 mov xchg orl fldln2 outsb xchg xchg mov rex.W stos lock movslq cmc jmpq scas clc jbe and fcompl sbb rex.RX mov mov mov push add enterq retq cs and fnstenv stos mov rex.WR push push mov shlb or lock mov scas enterq clc mov pushq icebp movabs rex.R jae push leaveq repnz cmpsl push sbb mov idivb mov and jmpq fidivrl push xchg fwait jno out push pushq sbb mov rclb sarb fs lock xor sub fsubr adc add mov cmpsl cwtl test or rex.R xchg add jle mov sar rex.R rex.XB sarl cmc cltd movabs fs repz xchg callq jne sbb enterq push push nop fs movabs xchg adc adc fsin clc addl in cmp xor rorb pop and (bad) add cltd popfq mov rex.WR (bad) in enterq push jbe xchg pop loope test out fdiv and sub mov mov adc clc cmp (bad) adc (bad) frstor test ficomp loope retq mov retq and sub imul (bad) test add pushq callq xchg je fcomp callq cmpsb (bad) sub retq adc jno xchg sti fwait fwait sbb (bad) sahf callq retq adc add xor xor sbb notl sbb jnp out and push jmpq movslq push movabs xor je mov jbe cmp negl pushfq xchg cmp loope rex.WX mov sub rex.WB jno jmpq mov xchg pop mov fcompl lods push mov in or or imul callq push retq adc jbe out jmpq push gs lea in adc movsl (bad) mov sub (bad) pushq (bad) or adc fstps (bad) (bad) rex.WRX hlt cmp (bad) divb (bad) ss mov rex.R push (bad) xlat ja imul rex.WX gs or jmpq adc (bad) jp adc xor rcl (bad) icebp imull movabs xchg movabs jnp (bad) (bad) adc (bad) jne adc mov loope xor (bad) mov sub sbb pushq std sahf cmc rex.WXB add and push adc rex.RB adc or sub cmpsb sub lret sbb mov push (bad) mov or out sub pushq out jmp adc stc jp (bad) mov lea (bad) jne hlt (bad) cmp lock rex.WRXB (bad) outsl rex.WB rex.R sub (bad) add cltd adc rex.RX adc or xchg (bad) out movabs mov addl and rex.WRB js fdivrs mov clc xor (bad) (bad) pop ficompl and imul (bad) rex.WRX sbb rex.WB (bad) jnp sbb rex.WRXB ds (bad) (bad) es callq (bad) lock rcll xor xor cld in enterq movabs mov or fadds and rorb xchg rex.RX clc rorl adc repnz out test pushq jns movsl out in xor lret cmp push jg pop movsl mov add nop cs repnz add cmp out cmp imul mov mov and sbb add test (bad) sbb rex.R cli and test cs repz or rorl movabs clc iret bnd mov (bad) mov lahf rorb fucomi pop sbb rex.X (bad) rex.WRB adc xchg ror adc movabs lret adcl (bad) movsl mov sbb xchg popq (bad) in sahf jg loopne lock sub adc add test pop iret mov add stc add sbb fdivl sub and in hlt and rex.WRB nop and lret (bad) mov (bad) cmp (bad) mov pushq stc mov enterq adc pop jp jg loope xchg fs scas nop xor rex.W lret add (bad) xor pushq addr32 push or cld mov in xor or or repnz fldenv xchg or mov movabs movabs xor jge cmp rclb pushfq rex.WRXB adc xor or movabs pop push insl (bad) mov rex.WR (bad) mov (bad) jns lods in xchg pushq rex.XB retq pop adc addb add notl add test loop rex xchg nop ds xchg sbb sub (bad) rcll sbb (bad) retq (bad) movb pushq lret stos adc lahf pushfq sbb hlt (bad) jge out adc rex.R jns add iret xchg and sub adc mov adc pop movslq (bad) out scas xchg xchg ds sub rex.X xchg insb out push rex.WRXB (bad) xlat rex.WRB sub cmp (bad) (bad) mov lock sbb xor add jbe add callq mov cmp (bad) or movabs (bad) mov movabs (bad) (bad) xor adc pop and cs (bad) xor mov (bad) mov jo xor fnstcw (bad) cmp mov (bad) or (bad) adc jne xchg fldl cwtl stc cld pop movabs cmp repnz imul adc scas or cwtl (bad) mov out jne lea rex.WX (bad) or sarb mov sub (bad) pushq mov push cmp jrcxz mov pop xor mov (bad) fistp (bad) cmp adc insl fdivrs cmp cmp in es cmp cmpsb lcall adc and movsb sub mov cmpsl rex.RB cmp jnp out xor test jmpq in (bad) xor pop cmp cmp xchg xor jne (bad) add stos rcl cli fistpll fsubrs mov fcomps jp pop (bad) in (bad) mov and stos jno xlat mov mov sub xchg (bad) jbe mov xor adc or adc push mov (bad) (bad) pop mov mov cmp or (bad) (bad) or rex.WB rex.WX sbb nop movslq clc xchg (bad) jle (bad) xchg adc sbb (bad) jo (bad) sbb add lods test pop vmovlps pop rex.WX out outsb jle jae jl movl push adc in pop jrcxz andl jnp adc stos and push adc jmpq sbb adc adc loope add adc (bad) fdivrl mov xchg cmpsl scas xchg mov pushfq cmp movb rcll sub add jns (bad) mov lods xchg rcl mov scas push sbb and and xchg sub cmpl (bad) stos mov in sbb jge mov (bad) add xchg cwtl sbb mov adc xor (bad) jle insl (bad) sub test push nop loop mov lcall adc add rex.WB rex.WXB in movabs mov repnz mov sahf adc cmp push pop imul mov mov push test sub lock ffree add fsubs (bad) retq and std sub sub mov adc mov rolb iret and fsts adc adc adc sub cltd mull cld rex.RB (bad) adc rex.R cld cmp movslq (bad) fnop (bad) cmp or and adc adc and clc add (bad) or xor in (bad) fldl push rcll pop fidivr (bad) retq hlt rex.WX xchg mov mov mov test (bad) in in xchg adc (bad) fwait (bad) and stos pop (bad) mov (bad) movabs fcmovu sub add sbb loop xchg (bad) mov push pop xchg mov cmp (bad) test js loope out je mov add insl jae add xor add vmovntdq mov repz push pop sti add cmpl jns outsl mov rclb lahf test adc xchg cwtl adc cmpsl mov jg iret mov xor rorl jmpq xor xchg adc cmp (bad) xchg push js adc push cmp lock xor ja (bad) add addr32 xchg fldcw mov fstps jmp add (bad) imul and (bad) adc hlt std (bad) clc mov pop (bad) pushq (bad) imul xchg rex.WRB adc movabs jae sub cmp mov rex add retq or enterq mov (bad) loopne jmp add rex.WRB div add jae fdivs sub add jg and and addb (bad) scas lea xchg (bad) inc mov add jbe or add es mov sub rclb imul (bad) (bad) fadds (bad) rex.WRXB movsb je mov scas ss pop negb cltd (bad) mov sbb (bad) (bad) or iret adc xor subl repz pushq pushq or xor data16 and andl (bad) rcrl (bad) movabs mov and cmpsb or (bad) sub mov push rex.R icebp mov adc pushq jo add lock mov mov adc (bad) xor adc jge or add jb (bad) js movslq and and add movabs sbb ss icebp retq mov es repnz xchg jae data16 push pushq adc outsb (bad) sub or sub popfq (bad) ja in xchg sub imul callq sub mov rex.WB cli (bad) jp sub cld push jge outsb mov mov cmpsl push (bad) stc (bad) (bad) or cmp rorb cs xor (bad) xchg and mov es and enterq movl clc xchg jp push (bad) add jbe fmulp std mov in push or fcoms sarl imul sub rex.WXB pop cli fwait jo xchg stos out mov sbb push xor mov and imul fisubl add (bad) cmp add scas mov movhps push fs jmpq sub adc imul (bad) callq rex.WB movabs mov adc lret scas fisttp lret pop int3 or rclb (bad) retq rol (bad) xchg sub sub rex.RB jnp rex.WB add lock (bad) mov sbb dec jge (bad) loop mov cld xor negl es jnp xor sti or mov rex.WX (bad) xor sub pop movabs (bad) (bad) sub adc movabs xchg sbb je nop int mov (bad) imul rex.R insb sbb (bad) sub mov add adc pushfq xor int3 icebp lcall outsl (bad) (bad) mov callq lret cld rex.R (bad) incl or xor out add (bad) sub mov rolb jl push rorb in or stc mov xor mov addr32 rcrl icebp adc sbb std xchg js enterq mov repnz pop mov int pushfq repnz retq movabs mov movabs jg add fmulp popfq insb and jno cmp push sbb lret (bad) es repnz (bad) pop sub push mov jrcxz jne (bad) pop mov callq push mov adc std xchg cmc movabs push fbstp adc popfq fisub icebp movabs cltd (bad) rex.WRXB sub rex.WR out and (bad) sub add (bad) cs cmp mov rex.WXB lea iret clc rex.XB rex.WRB incl pop lea flds add cmpsb and test retq xchg cltd xchg scas loop (bad) sub mov (bad) in sbb jg and xchg xchg jmpq repnz in in adc (bad) mov (bad) mov movabs out enterq mov pop push fistpll popfq (bad) lock loope push sbb cmc lock stos and mov insl xchg (bad) rcl mov mov sub xchg repz (bad) in push sarb mov jbe lahf (bad) fildl or (bad) (bad) rex.WXB lock and mov movabs adc rex.R pushfq sbb (bad) movabs cs jnp add rex.B (bad) sbb sub or and rex.WXB retq add adc mov rex.WRB mov sbb add sbb mov movabs pushq in out stc test xor (bad) adc fcoms xor xchg sbb ror (bad) or cmpsb adc rex.WX mov cmp adc rex.XB testb xor in or xor rex.XB adc xchg xor or cltd out adc (bad) add rclb test xor (bad) or and push movsb adc rex.WRXB test add imul (bad) loop adc pop fisub cli sbb rex.WRB adc rex.RXB cmpsb xchg push jmp js cwtl fdivr (bad) and xchg jl jb pop pop jnp rex.R rex.WRB rex.RB xchg (bad) movabs callq outsb cwtl sar (bad) cld (bad) lock mov adc cs (bad) (bad) (bad) mov (bad) (bad) sub gs push data16 (bad) enterq mov movabs lret fmul or cltd mov rorb loopne adc adc adc loopne cwtl add lea insb sbb xchg pop xchg mov je in (bad) mov and xlat in or mov (bad) in or sub movsl lret dec adc out cmp cmpsl cmp and test in jnp js lea test sbb add (bad) cmp ss sbb loope (bad) (bad) in neg lahf adc adc jb cmp jbe pop cmpsb add xchg lret mov rex.WX mov ja xor sar outsl and xchg callq (bad) popfq rex int3 fistp int rex.WRXB jno rex.WX jno cmpsl lods (bad) jle cmp icebp jns (bad) test js insl mov (bad) sub retq test add lods xor push sti fiadd out retq in cmp push cmp push mov (bad) js mov rex.WRB and and outsl (bad) callq cmc rex.X shl jae jge test or jmp cmpsb or idivb mov outsb mov ja fnstcw push and jge subl lea adc sti js mov enterq ja mov sarl repz jge imul mov rcrb mulb fwait rclb or or repnz rex.WRB or (bad) mov cmp (bad) (bad) rex.WRXB rex.WRX jmp test or push divl iret (bad) scas pushfq (bad) ds or rex.R pop lods and add jl cmp adc rclb pop (bad) sub ficompl scas (bad) ss rex.WXB cltd (bad) fildll jmpq in (bad) (bad) xchg jl rex.WRB fs jae rex.RX (bad) sbb jne movabs mov rex.WX mov or xor sbb cltd (bad) cwtl loope (bad) ficoml add adc jp cmc jns movsb rex.RXB rex.WRX (bad) adc andl sbb mov callq mov cmp (bad) (bad) pushfq sahf xchg (bad) shrb sbb fnstcw jne lock retq addr32 mov cmp rex.RB push (bad) mov and cwtl (bad) rex.X repz jmpq fisttp add rorl stc xchg or xor stos or test cmpsl in sbb in add test lahf adc insl or movabs (bad) adc out (bad) lock (bad) in (bad) and adc divl icebp push lock cmp retq adc pop sahf adc (bad) vpor sbb loope cmp pop and orl mov test xchg paddb push (bad) (bad) in scas cmp jg pushfq adc movslq push or imul in fidivr adc jae sbb pop cmp (bad) (bad) fstpl roll jmp adc sbb rex.WB or add js xchg in out enterq repnz sub fisttp rex.XB (bad) rex.RX callq rex.RB xchg push imul (bad) repz (bad) jne shr rclb (bad) lods neg in mov data16 out pop xchg mov (bad) push fbld pop fnop clc fs jo pushq cld mov (bad) fptan fistpl mov ja push pushq roll (bad) mov jo int3 (bad) mov push sahf (bad) pop movabs cmc (bad) adc (bad) (bad) sete pop (bad) rex.R (bad) imul cmpsl (bad) int3 xor adc scas rex.WRB jmp or xchg (bad) jmpq rex.RX rex.X jge movabs (bad) cli jg cmp mov test jbe jne rex.XB xchg xchg fstp movslq gs in mov push xor (bad) (bad) adc or xchg loop addr32 jp lock nop rex.XB and (bad) adc adc pop adc push incl fldcw movabs mov push adc out (bad) adc js (bad) rclb mov mov loope test xlat mov or lahf jno (bad) faddl xchg (bad) loope cmpsl fwait push sarl imul out rex.XB rex.RXB lock jno and sub xchg sbb pop pushfq int3 repz xor (bad) mov (bad) invd mov movabs push mov movabs or push cmp pop pop (bad) rex.RX movabs loop push mov (bad) adc cmp sbb xlat js rex.WXB mov and hlt mov fsubrp jge std fwait push xchg (bad) push mov movswl xchg jmpq in (bad) callq add rex.W (bad) ja (bad) xchg subb cmpl (bad) rex.RX mov rex.WX sbb xor int and movslq (bad) or (bad) sub fdiv xchg rcrq rex.WRX xor (bad) push jge xorl add jmp sub push sar jbe rex.XB lods xor push ror (bad) (bad) (bad) and (bad) stos fsubl or out lods outsl mov rorb stos sub push jae pop jns pushq sbb xchg xor int lock xchg push or jg rex.RX add (bad) (bad) push push fsts (bad) adc add clc std sbb (bad) rex.WR fist sbb movabs adc sahf cmpsl rex pop cmp addr32 pop (bad) sbb lods mov pop (bad) pop adc xor rex.XB mov (bad) push rex.XB imul mov fucomip sbb (bad) (bad) pop pop mov mov fisubrl cmc rex.WB scas callq in sbb jle cmpb mov or repnz (bad) cs fs add (bad) iret mov cmp (bad) xor sbb stc or rex.WX insb mov sbb xchg xchg rex.W adcl push rex.RXB push lock stc outsl fcompl enterq rex.W (bad) out sbbb xor movabs xchg mov mov loope fistpl mov add rex.WXB rcl sbb cmp mov jo in (bad) movsl or fs (bad) lahf pop mov (bad) xor adc rex.WRB (bad) popfq enterq idivl adc fiadd vfmsub231sd std out adc (bad) jae add insb (bad) mov add xchg sti lret rex.WRXB (bad) mov ds and (bad) cmp xchg xor push adc xor (bad) test mov pushq pop movl add mov ss je (bad) imull adc mov sahf xchg movabs sub lods jne pushq sbb rex.WXB movabs out sub adc sbb loope rex.X jno cmp movabs sbb adc (bad) add scas iret adc cmp hlt outsb retq orb pop mov mov adc mov (bad) (bad) adc minps (bad) in clc mov xor test scas (bad) shl pop rorl adc and fmul (bad) jns xchg push fwait idivb adc sbb adc scas xchg sbb mov sti rex.WRB lods mov and jge mov rex.WRX xor (bad) (bad) (bad) adc or jb je xchg insb (bad) jg xchg (bad) (bad) loop rex.WRXB add loopne jl or adc movsl pop test rex.WRX mov mov ficompl push xchg mov adc mov rcll xchg cld xchg jp rex.B pop sbb (bad) and mov push sub (bad) cmp lea adc pop and mov adc jrcxz movsl test (bad) insl mov cmc mov cmp sub rex.W lea pop fistpll adc loopne cmpb lods int3 rex.RB rex.WRXB xchg mov cld rex.W and mov adc sbb or or sbb (bad) adc and push mov mov fsubrs (bad) sbb (bad) retq sub adc mov jno xchg xchg test lods movabs or rol mov mov cwtl mov xchg hlt shrb add mov add roll (bad) cmpsb and sub mov sbb mov ror retq enterq cwtl sbb mov rcll imul pushfq mov add mov shlb jrcxz vunpckhps xchg notl (bad) fwait movabs adc and (bad) xchg mov scas int3 sbb and xchg xchg shlb or rex.WRB mov cwtl fdivs jne adc in add xchg stos cmp movabs movslq sbb mov rcll (bad) (bad) paddusb adc mov sahf ljmp movsl loop mov iret xchg lods (bad) rex push xor movsb stos jmpq (bad) mov sub addb rcll (bad) or jns (bad) jb adc fisub insl push (bad) fcomps jl or sti mov push mov in xchg (bad) (bad) jo sub xor xchg mov lret jmpq pushq je jnp popfq std mov cmp (bad) (bad) push or xor push mov int3 movabs (bad) icebp mov popfq mov rex.WB jno and push sbb xor sub cmp (bad) jle adc rep adc sub add rex.X jno adc rex.XB sub add or rex.RB (bad) mov (bad) lods xchg (bad) push jmpq loopne insl out jbe adc (bad) not xor movabs fnop jp mov adc sti jl incl xor callq retq adc jae xor pop (bad) (bad) jp pop jne adc icebp movsl cmp cwtl rex mov adc loop or imul sbb jrcxz or jno test callq pushfq enterq leaveq insb xlat push add push movsb and xor cmp rex.WX repnz fwait adc cmp outsl xor adc pushq movsb fcomps or or frstor movl adc mov lods adc pushq pop lods mov (bad) add push movabs cmp push test retq mov push cltd and rex.RX scas sub (bad) ja jge xchg std adc mov (bad) (bad) test (bad) xchg cmp mov (bad) mov lea in jmpq (bad) mov mov (bad) pop mov and mov jno mov retq xchg pushq xchg sbb rex.WXB jae callq or test adc rex.WX adc mov cli outsb mov and jns test rex.XB xor mov (bad) jbe enterq mov movabs orl rol (bad) cmc lret in adc repnz mov jge cmpsb pushq pop sbb and or push adc rex.WB ds rcl ss rex.RXB fs jns repz cmp xlat mov movl leaveq (bad) cmpl adc rclb (bad) xchg (bad) adc rclb fisub xchg rolb in insl sti fiaddl (bad) add insb movsb mov lret sbb add add sub imul mov pop pop (bad) movabs clc movabs stos movabs leaveq pop cmc cmc sahf push addr32 or loopne sub es movabs rex.WX cld fcoms jae (bad) fbld loope lea (bad) repz psubw adc sbbl and cmp xchg and add test xlat xchg add jg add and repnz enterq imul (bad) jmpq sysret adc cmovbe rex.WR jno cmpsb jle fisttp frstor rex.RB (bad) cmp xchg enterq pop movsl mov subb out stos je lock test mov (bad) mov fbld xor movabs lahf (bad) mov (bad) add (bad) mov imul pop retq scas rex.WB (bad) rex.WR jbe mov xchg add lea lahf xchg sahf fiaddl scas rex.XB mov (bad) push adc (bad) sbb repnz jp imul and (bad) xchg shll xlat lods (bad) loop ja rex.XB jmpq mov sbb mov jb add repnz cmp mov leaveq or adc sub movabs callq xchg in (bad) repnz scas jmp shl pop lea cmpsl cmpsl (bad) int nop (bad) mov rex rex.WB jne push cltd jb scas cmp sbb out (bad) retq (bad) and sbb pop cld (bad) pop ds clac insb retq test xorl (bad) sti rex.WX movl movsl xor xchg sub repnz or and jns enterq add jl sti (bad) and sti mov pop (bad) fwait or jno test add hlt cmp (bad) push sti (bad) mov flds fs jge or mov adc mov lahf addr32 (bad) pushfq fidivrl cmp (bad) mov movabs test repz push and (bad) js sub xor lods sub (bad) cmp xchg and sbb sbb adc lret add movabs movslq pushq cmp jle lods or mov pcmpgtd adc outsl xchg sbb adc insl (bad) pushfq mov rex.RB fwait (bad) fucomip je adc or mov jne adc (bad) jb xor lock cli adcl cwtl push mov adc fildl test imul mov test fdivrl (bad) jb pushq rex in rex.WB and jne fsts jne mov or test mov cmp fs (bad) lahf scas rex.WRB (bad) sub lock mov mov pop rex.X adc adc cltd pop (bad) rex.RX std test sub andl jns ds (bad) test sub sub pop jbe,pn adc or (bad) ss clc (bad) in mov jrcxz mov (bad) movabs (bad) rex.RX add insb (bad) out jb sti fsts test imul gs rex.R mov fcoms xor mov push js fwait mov cmp fs jmp pop (bad) (bad) fs scas rex.RX outsl cli testb jge add movabs enterq incl jmp xor xor movabs adc cld cs (bad) or jmp xchg rex.WX adc cmc mov rex.RB or or (bad) cmp rorb cmp js,pn pushfq sub insl test mov xchg pushq xor or sbb rex.WRB jg incb rex.X adc std jb jmp loop and mov (bad) xchg push cld (bad) int3 insl out lods ss sti or icebp (bad) movabs and mov sbb xchg adc sub and and outsb in mov and lock cmp (bad) (bad) sbb rex.RB addr32 ds clc (bad) xchg (bad) cmp por and and adc outsl std adc callq movslq mov push lea cmp pop xchg or or repnz rex.RB adc (bad) cld (bad) add rclb cmc (bad) (bad) popfq and xchg jnp xchg (bad) js adc (bad) movntps rex.RB (bad) pop adc mov mov nop jne ds mov js fcoml lock stos (bad) xor in mov (bad) int3 repz sbb cmp je pop loopne rex.WXB fs or push push (bad) (bad) cltd (bad) jl rex.XB xorb test adc rex.WX (bad) pop adc adc add sarl cltd insl rex.WRB pop sbb push movslq loope rex.WRB or in jno repnz xchg xchg (bad) xchg pop rex mov mov repz xchg mov (bad) xor addl cld pushfq repz jg insb sbb roll cmc pushfq or push add or test jne ss popfq or cmpsl test and pushfq cmp (bad) or rex.RB sbb callq (bad) in (bad) rex.WX mov sub jmpq (bad) lea (bad) sbbb jrcxz mov (bad) (bad) add (bad) lret jrcxz (bad) repnz not int3 test pop movabs jmp test add rcll mov rex.WX or cmp int3 (bad) add push mov jl movabs xor (bad) adc mov pop test mov mov jo je xlat bnd adc rex.B data16 or mov cwtl (bad) adc (bad) (bad) cltd clc pop adc and rex.R pushfq stc cmpsl fs mov sbb xchg sbb callq jne adc (bad) rcl stos adc (bad) pop clc std adc rex.WRB fwait callq adc test jl rex.WB (bad) mov (bad) fdivl int js mov add and add loope fxch hlt cld pop sbb add retq mov clc sub setge and fdivr nop movsb out mov mov out adc lods sub sub xchg sbb iret jno leaveq or (bad) movsb sub (bad) pushfq cmpsb outsl mov pop jle rex.W push lock mov push (bad) cmp jae clc fstl (bad) insl cmc out stc rex.WRXB mov adc xchg icebp notb lahf rex.WR fstpt and jae adc (bad) adc mov mov rolb and addr32 jns fstpl adc or imul callq xchg xchg repnz je sbb add addr32 (bad) (bad) mov fdivr je sarb mov push fwait (bad) rex.RB sub (bad) insl jnp mov push lea addl push out (bad) lock lods adc stos (bad) sarl cmc mov ds rcrl or roll or lahf jno rex.RB jmpq gs or jo sbb sub subl xchg fstpl leaveq adc js cmp jmp sbb (bad) cmp adc (bad) jge (bad) cmc push iret mov cltd (bad) mov mov push sub rcll cmp (bad) jnp or (bad) push std cmp or clc (bad) cs movabs gs adc jge es outsl fstpt (bad) or xchg (bad) insl push cwtl std lock or (bad) insl xor in rol jb rex.WRXB (bad) (bad) js or stos scas test add mov push rex.WRX addr32 push sbb jl in add or xchg std nop adc rex.XB (bad) stos test cli jmpq jp stc xor callq adc outsl rex.WRX mov sbb jmp cld sub divl (bad) (bad) enterq clc cmp (bad) in fadd sbb adc rorl push sub xor jrcxz mov adc (bad) pushq xchg fistl outsb mov loopne sub xchg movabs (bad) mov sub fwait pushq pushfq stos std (bad) data16 (bad) and cmp and rolb imul callq and jne imul fcmovnbe and int3 (bad) movabs enterq and (bad) lret sub sbb shr adc or cld (bad) mov jo outsb mov mov rex.X mov jnp cmp or in pushq mov mov movsb stos rex.WRXB retq xchg rex.RXB jg iret mov add or jge adc addl xor (bad) adc sub push mov fsubrl mov mov sbb and movsb or jp xchg jle sub rex.X (bad) or mov mov and cmpsb xchg jae imul lea test rex.WRX (bad) cmp andl sub xchg rcrb sub pushfw js movsb mov xor push lods xchg xchg pop (bad) xor mov es xchg fild xchg bswap xchg mov outsl mov jl pop test add orb pop cmp add cld fsubl xchg rex.WB out push imul sub mov subb pushfq or add cld cli jrcxz iret add jne xchg sahf (bad) clc mov cli (bad) jns int sahf xchg xchg hlt pop xor rex.WRX (bad) (bad) rex.WRXB xchg pushq in imull (bad) add addr32 mov mov xchg int out stos (bad) (bad) jne jnp (bad) imul (bad) xor stc jle adc pushq movabs test (bad) and or (bad) (bad) adc sbb neg rex.WRXB cs (bad) cli xor and rex.WB pop test (bad) adc rex.WR (bad) enterq adc sbb cmp (bad) adc (bad) mov stos pop mov repnz push outsb idiv insb gs push repz mov xor insb (bad) je rex.R icebp (bad) repnz mov popq xor pushq rex.WXB (bad) jl je stc rex.WRB xor push in pushq rex.WR (bad) int3 insb (bad) pop adc sub mov adc cs or adc mov cmpsb and retq adc repz outsb add jo adc in (bad) xchg jns (bad) int3 lods adc sbb adc (bad) cmpsl fadds or pop add (bad) xchg cltd outsl mov test adc mov (bad) cmp adc insl dec cld clc jge movsb sub adc pushq fsubl lock (bad) (bad) (bad) cmpsl movsb in (bad) adc (bad) movabs fs pop adc outsl cltd adc push (bad) sahf out add jno (bad) (bad) xchg ja outsb cmp and cmp cli lea roll pop adc sbb pop in adc and jmp and add add jrcxz jmp (bad) xor xor mov lock int3 or in (bad) sarb sub (bad) or push movsl mov adc add cmp and in pop ficomp and idivb fild imul (bad) repnz ja rcl jl (bad) jb (bad) and roll pop int sbb and add test lea sahf rcll mov pop fwait sbb jb or callq retq sbb fcoms sbb (bad) mov xorb (bad) stc xchg data16 data16 (bad) cltd je rex.WB (bad) repnz imul sbb pop ja xchg mov fmul mov repnz addr32 fisttpll out and (bad) test pop rex.WR je jae retq mov callq add push lret sbb push rex.WRX sbb (bad) jmp sub (bad) (bad) callq cmp sub xchg xchg fsub fstpl xlat cmp jle movsb test fwait (bad) adc jmp clc addb push adc (bad) test adc (bad) test out pop rex.WB adc add push and cmp roll sbb xchg js mov (bad) xchg ficom std (bad) repnz (bad) out loope xor fcoms push popq pop mov rex.RB rex.X adc (bad) or cmpb rep shll rex.RXB (bad) xchg (bad) (bad) push push (bad) std imulb rex.X (bad) movabs add int3 movabs mov mov repz test icebp rex.WX popfq and push lods test rex.WR add (bad) repz (bad) rex.RB (bad) loop sbb mov rex.B stc mov insb xchg (bad) fiadd mov sub xchg pushq int (bad) rcrl add cmpsb fwait jbe add xor rex.WB rex.WRB fdivr gs js rcll lods lods clc cmpsl jb int3 (bad) rolb nop fcmovnbe cmp jne callq out sbb sti outsb (bad) sub mov leaveq mov in out cmp pop rex.WX xchg (bad) rex.WR fs (bad) or fsubs (bad) jne pushq xor (bad) (bad) int xor outsb mov xor gs repz pushq mov out jno pushq test mov add rex.WRB fcmovbe out mov add shlb (bad) xor rex.WRXB sarb sbb sub cltd icebp push outsb roll mov jmp es (bad) cmc test and (bad) mov scas or (bad) test and lock (bad) (bad) data16 xchg scas (bad) rcll (bad) add mov fist jne add ss clc adc pop sbb movabs jne xor push jbe lret mov sbb (bad) sbb subl leaveq loope jno xchg (bad) and (bad) (bad) ss mov movslq jae (bad) ss cmp mov (bad) (bad) rex.RB fisttpl fsubrs movsl mov adc mov cwtl add hlt or cli xchg sbb cwtl callq cmpsl movabs push jo (bad) retq scas hlt enterq cmp ffreep (bad) (bad) (bad) shrl xchg add mov (bad) iret sbb sub int xchg sub and (bad) imull int in (bad) or adc imul jmpq es (bad) jrcxz fidiv jo rclb mov add scas addr32 jb sbb jbe test xchg clc andl add fcoml mov rol fwait or retq add add (bad) and retq mov xchg mov test shrb rep jne (bad) mov stos cmpb (bad) sub rex.WX lock icebp push mov leaveq mov or lods sbb mov insl push rex.X mov push sbb rex.WXB cmp (bad) js lods mov pop retq sub xlat mov or mov movsl pop xchg fsub roll pushq rex.B xchg jbe sbb mov fwait std std (bad) or rex.WXB (bad) scas sub pop cmp sub int test (bad) in clc js popfq fist out (bad) add and rex.X mov sahf pop rex.WRB jae (bad) jp es mov jp and test jge fimull jl pop rex.WRB scas push cld and nop repz mov vpsllq sbb stos repnz rex.WB jle xlat xchg adc pushfq or mov cmp (bad) rex.WRX add imul rex.WRXB (bad) orl add (bad) movsl imul xor sbb sbb push mov adc insb iret push lods pushfq rex.WRXB (bad) jnp pushfq cmp rex.WRB ja pop and push incb clc sbb test shrl and rex.WXB adc (bad) jg (bad) addr32 nop push cmp mov adc (bad) shrl adc jno repz mov and cltd and mov movabs and enterq adc cmp mov jmp imulb rex.B rex or xchg out in or and (bad) rex.RX (bad) gs int3 lea test out sbb rcr xchg xchg int xor (bad) (bad) adc (bad) gs adc (bad) lret adc fisubrl rex.RX mov cmp or int adc or movabs pop cmp std (bad) mov rex.R push movsb jp scas xchg insb rex lods add cmp retq xor (bad) pop ds mov jns push pop (bad) mov sub in xchg cmp sbb fsubrl (bad) mov jns fistl mov (bad) retq cli jl xchg xor movabs adc stc jg xor xchg gs push int clc rex.WRX push cmp xchg adc in or hlt push mov xor cmp jmp je (bad) push stc outsb leaveq fwait sub push out (bad) sub push mov mov out (bad) ds pushq xchg retq movsb rex.XB rex.WXB in es cs pop xchg rex.RB pop (bad) in sbb (bad) (bad) (bad) and xchg rex.XB sbb int3 jae (bad) mov push (bad) cmp jge add (bad) (bad) mov xor mov (bad) cmp imul (bad) sub add add mov mov adc sub pop cltd sti rex.WRB cli rex.W rex.XB mov jns test movsl out sub (bad) xchg pushfq (bad) sbb ficompl sbb (bad) andb and xor in (bad) adc test pop lret movabs cwtl rex.WRB movslq mov jb cwtl scas (bad) fmull mov add mov sbb adc xchg jbe xor xchg hlt (bad) jg cmp adc fisubl or rex.WR adc jne movsl cwtl enterq out pushq or push add add jg push (bad) jne xor (bad) mov mov insb mov int rex.R jne (bad) (bad) int3 jnp lahf add (bad) (bad) and (bad) xor sbb cmp or sbb sbb (bad) stos je (bad) xor (bad) pushfq mov movabs mov int3 mov fcmovnbe pop and (bad) ds jmpq add push jge mov (bad) mov jmpq clc int3 push repnz fidivrl imul (bad) adc cld ds adc (bad) (bad) mov adc rex.WB push fyl2x add adc stc mov rex.RB loopne (bad) adc sbb adcb adc xchg je pop adc out rex.RX out adcl adc mov lods hlt adc insb cmp add mov sub mov pop sbb in adc ror (bad) test xchg rex.W (bad) mov testb sbb fcomps (bad) pushfq popfq (bad) or ja pushq and and (bad) cs mov scas and icebp mov xchg stc sub in (bad) frstor (bad) adc scas xchg lahf (bad) punpcklbw xchg popfq mov or jmpq rex.WRXB (bad) and (bad) xchg imul movslq adc out in adc or rex.WXB cs lock mov sbb retq int3 retq adc mov mov pop sahf ja (bad) rex.WB cmp int3 retq stos mov adc (bad) (bad) js imul (bad) cmovp (bad) in adc jbe xchg pop adc and cld adc or in rex.WRXB xor add mov (bad) insl mov callq pop sbb lret rex.WRX fistpl test rex.WB rex pop (bad) adc or (bad) movabs insb scas push cmc xor lock (bad) pop test (bad) in adc (bad) pop es test mov pop fxch hlt (bad) lret rex.WRB adc ja or sub (bad) (bad) and and (bad) xchg adc cmp jge jrcxz (bad) pop push rex.WRX andl loop movl xor out fiadd callq push rcrb pushq (bad) rex.WRB adc scas out add mov rex.WRX rcl pushq xchg (bad) loopne sub push (bad) sahf adc xchg popfq add pushfq (bad) loopne add loop (bad) jne pushq (bad) out scas sub ss movabs orl push jb mov cltd pop lock jmpq mov cmp (bad) repz (bad) pushq sub fild jb mov mov (bad) xor (bad) vcvtsd2ss repz loopne rex.XB rex.WRXB (bad) (bad) adc xchg (bad) js fs callq sbb sti and (bad) and ja mov rex.WRXB adc xlat rex.X push pop (bad) fadds movsb pop rex.RX int jp,pn callq data16 insl jbe sbb (bad) mov jl jbe pop xchg psrlw jp mov xchg retq rcrl pushq pushfq (bad) shlb pop pop (bad) rcl test add xlat push stos jbe rex.WRXB adc (bad) out jnp popfq (bad) fwait pushq imul imul add callq (bad) or add insb (bad) repz mov adc pop jns or mov xchg js cli (bad) (bad) or or (bad) test lock pop (bad) stos cwtl adc lret xchg repnz jmpq rcll xchg lock ja (bad) (bad) stos mov fisub sbb stos (bad) rex.WXB rex.W mov mov clc cwtl icebp nop sarb (bad) mov cltd sahf mov jmp (bad) xor pushq (bad) js (bad) hlt enterq pushq int emms in cld pushfq in out adc out rex.WRX rex.WR adc std fsubl (bad) andl shrb mov (bad) add jp cld mov fistp int sub sbb cmp (bad) xor jno or (bad) imul (bad) xchg ds xchg in or mov xchg push mov lods or rex.WXB cmpsl rex.WX xor (bad) cli int3 (bad) rex.XB pop push in (bad) sbb push sbb rex.RB rex.WXB mov mov cltd ss pop cmp xor adc xlat cmp jge mov xchg xlat (bad) ss mov xor notl push rcll mov xor (bad) es xchg push pop cmp jnp nop pop adc int3 lock faddl mov sbb mov sbb in repnz adc mov and adc adc cmp retq (bad) mov adc test xchg pushfq sahf out test xchg pushq adcb rex lods or pop pop mov callq (bad) xor push shl mov scas add imul mov sbb jbe lahf jge (bad) mov (bad) repnz popfq xchg (bad) xchg (bad) cmpsb jle rex.WRXB hlt repnz insb lock lahf (bad) cmc jrcxz rex.WRB (bad) xor pop rex.RX and scas outsl mov sub (bad) js xlat iret test in cltd pop lock cli lock rex.RX push sbb pushq add mov adc sarb xchg or stos sbb jno xor mov lret sarl stc mov adc jns clc mov rex.WB mov rex cmp sbb and mov rex.WRXB rex.R rex.WR outsb push notl (bad) sbb scas insl lock (bad) rcr retq (bad) jp rex.WB sbb outsl adc movabs (bad) pop ficom rex.WRB (bad) pop sub jge pushfq xchg cwtl xchg adc fldenv pop sbb pop cmp gs adc jmpq lods adc (bad) pushfq gs test movsl push loopne cld adc (bad) xlat leaveq fmull xor pushfq and rex.WXB rex.RXB or adc and (bad) jmpq cmp fstp insb add rex.W mov cmp lret add outsb jl pop adc in rex.XB movntps pop jo stos mov sub push (bad) xchg enterq int3 notl (bad) sbb movsb or xchg sahf rex.XB adc add fcmovnu (bad) sbb out and add (bad) (bad) pop (bad) jno retq hlt adc ja js jrcxz imul jo add sub rex.WR rex.WR lock adc movabs rcll and lret jmp xchg int movabs (bad) (bad) and cmp loopne mov mov push jns fcom sub stos callq push jno xchg (bad) rex.WR add (bad) lahf int3 (bad) sub xchg rex.WR movabs (bad) fsub (bad) sarl mov adc movabs sbb or testb retq xchg cs mov or or pop cmpsb sbb (bad) cli mov jb addr32 callq (bad) xchg cwtl and out pop cld fistp cld mov pushfq jae fmul movabs adc lock cmp sti cld fdivr mov test fstl mov sub and xchg ja fist jno popfw jb mov xor xchg xlat and mov (bad) lea jo and mov in (bad) (bad) mov cmp scas and adc lret rorb out hlt mov add adc or xchg xor jae lea callq (bad) negl nop mov fcoml sub lods (bad) in test stc jp,pn insl outsb (bad) push lea (bad) out in jae xor (bad) sub jmp in pop cmp mov jno jne sub addr32 js fist (bad) iret imul mov mov movsl addr32 xchg ficompl (bad) fs (bad) mov (bad) idivb pop jbe adc cmp cmc (bad) cwtl mov rex.RB mov jnp rex.WR jbe lret loopne lea or loope (bad) (bad) jno xor sbb cmp (bad) mov in imulb and sub callq test std mov xor (bad) repz scas push retq sub rex.RX push pop fs sbb fidivl icebp rcrb mov pushq sbb adc rolb lock movabs (bad) rex.WRXB mov sbb rcl cmc vmovsd push pcmpgtw (bad) and (bad) jo mov icebp (bad) pop shrb rex.WRX fs mov xchg shrl adc int (bad) jno and pop jb (bad) (bad) jb (bad) mov adc push lods neg rex.R adc ds scas lock xadd jl pop rex.W rex.WRXB stos imul sbb scas xchg mov callq pushq sub xor pop push add rex.RX xorl push (bad) push (bad) pushfq clc sub cmc sbb stos mov rsm jns lock (bad) (bad) popfq (bad) push nop (bad) jl pop pmaxsw sub rex.WRB or negl (bad) stos mov rex movabs cmp lret mov fsub nop pushfq sub shrb mov rex.WRXB add std adc (bad) sbb in sahf push jg xchg imul xor and sbb mov jnp adc jo hlt push lock fldt scas shrl adc mov or es mov xchg loopne es cmc add (bad) int3 lret (bad) jrcxz retq notl callq out xchg lea nop rcrb fsubl sbb mov push cmpsb add adc jg stos jbe negl movabs test nop rcrl add rex.RX pushq rcll enterq popfq imull and sub sbb cld adc jo mov (bad) pop or leaveq jmp rex.WRX rex.B cli cmpsl lock mov sahf mov retq fstps and sub (bad) enterq rex.WR adc out enterq (bad) cmp movabs or fsubrl movabs sub xchg or xchg out adc (bad) movabs xchg iret cli sub clc or pop mov outsl mov adc push ss adc jae xor rex.X xchg je cmp fstpt (bad) out adc xor clc lsl push mov adc adc and adc xchg test jl cmpsl enterq out rex.WRXB notl loop stos adc jrcxz mov cmc and xor repnz clc cmp movslq rex.WR (bad) xchg movabs movabs adc jo push cmp mov pushq xlat or lock sbb rex.W repz (bad) outsb xor xchg mov sbb (bad) scas cs jmp pushfq outsl xchg rclb cmp mov pop mov sub (bad) jmpq jbe rex.WB rex.WRB lahf (bad) or jle callq outsl outsb (bad) imul add or xor hlt mov mov pop cwtl or and rex.WRX iret adc cwtl (bad) adc and push cmp adc fistpll divl or add (bad) xchg sub gs and sub (bad) hlt add xor in movsl hlt sbb insl test (bad) rex.WXB movabs cmp mov popfq test (bad) test xchg lahf negb xchg add mov (bad) (bad) fmul (bad) sbb push loop sub std mov xchg fcoms sub jns (bad) movsb (bad) cmp (bad) shl xchg fdivs testb xchg movabs xor mov jrcxz insl ja (bad) mov mov mov push (bad) xchg mov push icebp (bad) mov (bad) fistpl cmp or add int mov lea fcmove mov rex.B and hlt or callq (bad) xchg rex.RB sti (bad) int gs (bad) jno test (bad) rex.RB sti xor cmp mul (bad) clc and mov data16 (bad) (bad) mov popfq in xor (bad) iret mov stos lea repnz xor in or adc (bad) in stc cld mov mov sbb lret cwtl nop jne or and push movabs cmp roll ss adc js hlt pop adc fdivrl rcll mov (bad) adc cmpsb icebp js int rex.WR or jg pushq enterq (bad) fsubs sbb stos push cltd rex.WX pushfq (bad) retq sub fidivrl jne cmp insl rol int and retq sub cmpsb in mov cmp sub pushfq and (bad) (bad) xchg lret or (bad) fwait lock (bad) out mov add nop outsl xrelease cld xchg (bad) (bad) xchg cmp rex.R adc sbb (bad) pop rorb adc lea (bad) lea movsb movslq jno jnp jl pop callq movabs jl add pop incb lea cmp rex jb lods vmread push popfq icebp (bad) rex.RB lock sub jg jns int3 in rex.WXB repnz xor pop adc xchg mov rex.WRB mov stos lea mov enterq rex.WRB mov fldt addr32 callq push cmp pushfq xchg add xchg int3 in or xlat sti pop push mov cmp pop cmp adc (bad) mov (bad) sbb (bad) imul movabs flds (bad) pushq pop sbb mov mov fwait jne fdiv lea callq jae cmp es jmp bswap add repz xchg push mov mov lock xchg add pop adc imul xchg mov or jmp cwtl jl pop adc je pop sbb fsubrl adc (bad) adc mov scas je pushq xchg or imul jno fdivr jle in mov sbb mov adc ss jmp fdivrl xchg push cmp jno ja (bad) (bad) stc cwtl test repz (bad) out stos (bad) (bad) insl (bad) jns je retq gs fdivrp cmp jb mov (bad) or or pop and int3 pushq shrl xchg (bad) movslq and loop rex.W sub lret add insl cwtl fcomip xlat sub retq xchg xchg idiv loop add rcll fstps shl movabs pop movsl lods addb imul negb jg (bad) pushq test ljmp enterq mov rex.RB rex.XB xchg shr sbb sahf sub add mov movabs (bad) pop xor (bad) jl xchg (bad) mov (bad) pop xchg xorl sbb and rex testb ds pop (bad) fadds fimull (bad) cmpsb or fisttpl pushq movslq and cmp (bad) lea (bad) pop rcrb adc fs rex.WB xor push sbb sahf xor sub (bad) (bad) add adc (bad) stos out xchg rex.WR pop (bad) rex.WX stc mov cmp xlat sub jl ja fadds xor stos fwait jo push stos movabs sbb popfq (bad) rcrl or sub (bad) std neg (bad) push (bad) mov ja sahf and sbb lea add rex.WB add loopne rex pushq (bad) or lret xchg cwtl mov adc scas mov xchg push mov pop cltd rolb add (bad) jle (bad) scas (bad) adc jnp sbb adc (bad) mov pop fcoml (bad) push push mov mov fs jrcxz jp (bad) scas int3 mov mov adc sub sbb sbb xchg insl out adc xor js xchg adc jb pop sbb (bad) adc rorl (bad) or (bad) pop (bad) jb jle bts adc (bad) notl lahf retq (bad) sub pop add (bad) jmpw int3 rex.XB rex.X sbb jp loopne (bad) or fimull pop std popfq mov cmp cmc ficomp mov pushfq jb pop and outsb mov sbb enterq push test jg lock (bad) mov divb adc in iret mov (bad) pop rex.WB movabs sbb (bad) mov subb xor (bad) fwait sbb xchg scas callq cmpsb rcr pop mov (bad) (bad) cmc movsl rex.RX mulb jg sub lret movsb cld out mov add and pop (bad) mov adc lahf int3 jl and adc jno fadd insb adc mov rolw cld mov rex.RX lock stos pushq loopne push repz add fadds movabs mov sub sbb add push mov xchg js rex.WRXB adc pop nop cmp lahf jrcxz xchg imul jle (bad) sbb xor (bad) adc mov adc je cltd cwtl (bad) jbe addb xchg add (bad) mulb or sti add clc or (bad) xor rex.RX mov (bad) or js cltd jl movabs addr32 sbb pop adc cwtl cmp pop fwait loop callq (bad) or (bad) enterq (bad) rex.RXB leaveq xor (bad) sti out jp (bad) xorb iret rex.RB js jle orl cmp (bad) jge jb adc add adc mov int retq (bad) mov stos jmpq (bad) ds stos sbb and movsl (bad) loope out xlat repz (bad) push adc sub rex.R gs rcl mov cmpsl cltd negb mov rex.WR (bad) pushq jmpq jb pop (bad) rex.R data16 jne cwtl (bad) icebp xor mov adc (bad) loopne callq mov jb (bad) out pushfq fsubrl jmpq rolb scas fwait xor jb rex.X cmp test xor callq fwait std add rex.RB mov push (bad) xchg sbb mov add and xor fwait rex.WRX sbb movsb (bad) repnz adc sbb int popfq enterq lret xchg rex push mov movabs shrb pop xchg push rex.X hlt iret sbb adc incb and hlt or movl sbb cmp cmc mov retq xlat sub loope mov xor loope sub (bad) xchg push stos scas outsb (bad) (bad) push rex.WRB adc (bad) sar and adc and rex.B fwait divl (bad) fcompl push add adc adc sbb xchg mov adc lods nop addl sbb and mov out adc xchg lret adc adc (bad) or sub fs xor cmpsl rex.WRXB mov adc sbb mov sub (bad) or mov push adc add loope movabs sbb xchg push rcll (bad) callq (bad) jle sbb sub or mov pop and xchg and (bad) cmpsb add add hlt mov xor outsb add enterq mov (bad) loop cmovne (bad) cwtl sub xchg (bad) or adc sbb mov xor incb insb mov and xchg sub add cld (bad) add (bad) out orl sub lea jg jmpq and rex.RXB data16 cltd xorl jrcxz adc mov rex.R push repz cltd icebp outsl rex.WR mov push in jrcxz nop retq clc push mov retq fcomip sbb in in rcll movabs cli cmpsb movsb pushfq fbld scas xor push pop sub cmp push int3 movsl xchg in fcoms loope xchg or push push retq xchg (bad) repnz (bad) (bad) int jae (bad) rclb callq clc (bad) mov ss adc (bad) and and jae jnp rex.X xchg push cmc adc mov xor rex.WX adc lret add imul mov and (bad) insb and rex.B mov je xchg and pushq lock fs (bad) fmuls fcompl cltd jae adc ss push (bad) movsb xchg movabs mov pushfq push lods or mov adc hlt movabs clc adc mov (bad) xlat (bad) xor mov pop sbb xor movabs movslq movsb callq or addr32 (bad) rex.R mov add sbb push add sbb sti (bad) pushfq fistpll xchg push cmp or jo xchg mov imul add out mov (bad) ja mov out pop scas (bad) je cmp sub (bad) rcrb scas mov mov movabs (bad) sbb xchg or movabs sbb es lods shl fdiv rex.RX outsl jbe xchg or rex.WB leaveq sti (bad) shr mov push or insl movsl (bad) lock xorl rorl and mov lods mov add int3 (bad) sub xor mov add push jns jg (bad) mov rex.RB jle or rex.WRB sub retq rex.R es out rex.RB stos xor lret jns insb in insl mov adc add sub mov xchg sbb jl mov enterq mov testl sbb stos int3 adc and rex.XB addr32 retq fdivs jns and mov insl xchg pop hlt xlat (bad) rex.WRB lock popq jb (bad) in lret cmp (bad) (bad) mov xor or xor test (bad) adc callq add add roll add mov outsb jle decb rex.WRX push loopne callq adc (bad) movsl rex.WRX rex.RB xchg (bad) rex.RXB (bad) xchg adc xchg (bad) lods test clc (bad) push mov iret rex.WRB adc insl icebp xchg adc rex.WRXB retq rex.WXB sub rex.WRXB xor (bad) in adc ss fisubrl adc mov and cs mov pop lea add cs movsb mov subl imul ss movslq callq adc and xlat (bad) ljmp rex.WXB js stc sub or sarb push add or addl cmp lods add mov xchg fucom rex.WB mov (bad) rex.RXB add repz pop mov pop (bad) lea sub sub mov mov and iret (bad) xlat rex.WRX rex.WXB movabs (bad) rex.WRXB cld jnp mov sub (bad) mov sub outsb mov sub xchg add jl rex.WX push xor adc mov pushfq push pushq repz adc push cmp sub pop stos movsl mov rex.XB (bad) jb mov xlat sahf mov mov (bad) add mov adc push rolb (bad) rex.WXB pop mov jp add rex.RB fs cmp rex.XB mov rex.RX add insl (bad) lret sahf cwtl lock andb mov or lcall adc cmpsb out adc push and stos test (bad) retq fs (bad) cmc and and (bad) xchg mov mov mov repz ds adc hlt (bad) in clc ja pop pop movslq (bad) sub adc xor bnd (bad) push push add rolb imul (bad) movabs mov lock gs xor adc sub jnp (bad) (bad) (bad) or or stos (bad) sbb push int3 movabs add outsl retq (bad) loope ss sub mov add data16 movabs rex.W adc mov push fs cs rex.WXB pop lock push (bad) rex.WR mov and lods rex.WR lock xchg adc mov (bad) (bad) es adc test adc out rex.WR clc (bad) hlt fcompl xchg and test cmp mov fucomip (bad) (bad) leaveq (bad) clc and leaveq (bad) (bad) callq adc outsb adc (bad) fdivrs (bad) (bad) clc mov adc je cwtl xor or sar pop jmpq xlat (bad) cmp jp loop rex.WB jne add (bad) outsl (bad) je cmovle jmp xchg or (bad) andl or repnz push (bad) (bad) clc pop xchg ss stc outsl or (bad) cs jno mov add cs sub or mov sbb notb xchg xor jns rex.X adc jbe adc push mov mov pushfq (bad) in std adc mov cmp (bad) cmc outsl in clc cmpsb mov and popfq lahf mov adc nop es movabs stc pop cld xorl repz pop mov adc sbb add popfq std cmp mov movsb (bad) adc sub callq sbb adc add push rex.RX cwtl in repnz movsb adc imul rex.WRB mov rex.RX add xchg vmovsd jno (bad) sbb pop and mov std (bad) out xor (bad) (bad) xchg lea pop gs cmpsb cmp adc stc loope test xchg push neg sub outsb (bad) or jbe idivl cmp (bad) lretq xchg cmp pushfq adc jmp in insl nop xor loope pop movabs cmc setbe or mov push mov fcoms fstps add shrb xor scas sub jp mov or sti jl and mov retq fmull pop mov (bad) std and rex.WRXB and rex.WB (bad) rex mov mov (bad) outsb add jle js fs mov clc (bad) fwait rex.RB iret or std popfq (bad) divl je repz mov rex.WRXB pop mov gs (bad) mov (bad) adc imul sbb test sub cmc mov cmp jbe out fiaddl xchg (bad) xchg xor test or gs push std clc retq push and jnp int3 psllq jbe rex.XB rex.WRXB in xor (bad) adc jge imul out int3 insl movabs (bad) push jmp leaveq shll or (bad) shr addr32 out mov rex.WX (bad) and faddl je add (bad) (bad) pop (bad) (bad) nop hlt (bad) fcmovbe rex.XB enterq adc adc mov adc js mov mov sub add sbb (bad) (bad) fwait pop jle retq lods pop xlat clc add mov addr32 cmp add rex adc fsubrs pushfq rolb int ficompl mov in (bad) (bad) roll mov mov callq or (bad) vmovhpd (bad) (bad) (bad) movsb mov rolb push mov test movabs (bad) outsl rex.WB or mov mov mov pop mov rcr setg push or (bad) adc xchg xadd pop test adc (bad) fild push add fwait jnp ja cltd cmp pop test sub push push ficoml push (bad) (bad) pop rex.B sub xor cmp (bad) mov mov rex.WRXB ds xchg rex.WX ja sub enterq jrcxz xchg rex.WRB loop movsl add sub adc and stos or out jmpq (bad) xchg test cmp cmp mov fs es out push (bad) pop jbe int3 sbb and adc popfq insb sub add rex.RX mov mov pushfq pop and clc out rex.WRXB rex.WR movsw loope popfq lods adc insl scas cmp sbb and xchg nop (bad) jno and sub xor lret (bad) adc movabs sbb mov lret fmulp (bad) cs rex.W push (bad) rex.R iret sub and mov xchg or sbb es mov sahf hlt clc xchg cmp (bad) sub std (bad) iret repz clc (bad) jnp je sti add scas mov cmpsl lods rex.B jb rex.RX sbb out mov pushq outsb rorb and jmp sub int xor out mov push pop sbb mov roll mov ffreep rex.WRB (bad) cmp or xchg adc mov xchg or xchg sbb nop sbb loop mov lods rorb and jg cmpsb lods ja lods std cwtl addl lahf fsubs int3 (bad) adc repnz or (bad) xor (bad) cli (bad) or add push fdivrl rex.WB sbb sub jne rex.XB loope (bad) rex.WB cmp (bad) fnstsw pop (bad) mov jge mov loope sbb cltd mov je pop and fwait jbe cmp andb mov pop fldt and push xor sub out outsl ja out xchg adc push shlb mov fmuls pushfq movabs (bad) push or imul in imul adc (bad) lret fistpl sti add clts jnp mov and mov xchg xchg adc in rex.WXB jrcxz (bad) test jno cmp retq (bad) (bad) rex.RB pop ja imul stc callq stos xor push xchg data16 pop xor data16 push enterq push popfq (bad) (bad) adc in out push cmp mov gs fmull scas jae rex.WRB xorl xchg loopne sub fstpl nop pushfq retq pop divb and in mov or push rorl insb mov (bad) (bad) jmp sub mov mov (bad) push imul adc rex.WRX add jae jp in out lret sbb (bad) jae mov lea sbb je fisub rex.XB push add retq callq or adc sub rex.WRB loop loopne pop and fwait cmp mov mov mov (bad) psubsb fstl pop mov jo andb (bad) fistpll sub cmp sbb sub movabs cwtl sub cmp fisttpll mov popfq retq lahf xchg (bad) xchg mov xchg mov movsl mov pop fwait (bad) rcl retq movabs (bad) repnz pop test movabs jno xchg adc sahf outsl (bad) xor scas js nop (bad) (bad) fistpll (bad) (bad) orb and lret adc cmp cmp nop (bad) ja fdivs xchg setns pushq (bad) mov adc cmp in (bad) movsb clc xchg rex.WXB lods adc cs add adcb nop test adc movslq (bad) sub rex.XB rex or loopne addr32 or xchg (bad) mov rex.RX andl loope retq insl sub negl outsl rex.WR jno push adc sub (bad) add xchg movabs xchg mov xchg xor sub sub xchg loope jg sbb callq push scas test xchg add out push (bad) mov outsb xchg mov xchg jl (bad) fdiv xlat in adc mov (bad) mov jb and scas mov stos add fcoms (bad) test (bad) imul xor xor adc pop pop addr32 pop xor push rex.RX push (bad) notl or lret pop adc (bad) jb xchg jbe cltd fucomi push movslq rex.WXB sub addr32 mov pushq (bad) xor nop insl mov mov cmc xor rex.RXB rex.XB je sbb adc (bad) or adc insb adc lret adc rorb cmp cmp (bad) sbb or adc jl add add push push lock cwtl stc (bad) pushq pop cmp (bad) xchg sbb adc and popfq xor sbb (bad) push add repz andb jge sub in rex.B jmp rex.XB sbb add cmp nop pushq callq and sub popfq (bad) and rex.RX cld xchg sbb ss rex.RB pop in rex.XB int (bad) shr xchg or jle xchg out sub ja mov xchg adcb out push rex.X (bad) xor (bad) xor xor lahf lods cmp in (bad) pop jl mov jnp mov js movsb callq jo (bad) adc or cmpxchg gs (bad) mov xor add add mov xor data16 sub movsl (bad) (bad) mov lock jb jp sbb jrcxz std rex.XB cmp add adc mov ss (bad) mov rex.X xchg sbb jne sub lret flds out add or repnz add xlat fmul (bad) mov (bad) cld rex.B (bad) rex.WXB xchg and and mov ja subl leaveq sbb (bad) (bad) cld fistp (bad) xor jp sub add cltd pop pushq and jae sbb callq (bad) popfq mov xchg shrl xchg mov cmp xorb rex.W rex.RB (bad) (bad) fild (bad) mov mov and out push (bad) out loope (bad) sarl adc push sub rcr pcmpeqw mov push cmp rex.WR lock repnz cmp loopne sbb and jmpq and sub xchg pop xor push or (bad) jno rex.RB pop xchg xor callq (bad) stos pop (bad) mov adc shr fdivl xchg xchg sub orl (bad) sbb rex.WX orl popfq adc int (bad) (bad) fs stc adc add pop stos cwtl nop xchg insb adc stc stos or shlb adc sbb (bad) in rex.WB movq adc pushq add adc cwtl cmp int scas sbb pushq cltd int3 pop and jno (bad) mov (bad) xor shll adc (bad) pushfq std test (bad) xchg movsl sbb sbb xor cmp (bad) push mov adc lods mov (bad) icebp xchg test movabs pop sub ss sbb xor fsubr callq stc or leaveq (bad) jae (bad) adc std (bad) jae (bad) setb (bad) (bad) icebp psubusb rex.WRX xchg sub repnz cmc fistp pop (bad) add pop adc (bad) jl (bad) (bad) mov jnp add sahf mov add mov repz rex.WRXB xchg lahf fsubs std (bad) xor cmp leaveq cmc test idivl (bad) (bad) enterq rex.WX mov rex.B fistp callq cmp lahf mov jmp add fistpll cmp push stos jg xchg (bad) lret adc push add (bad) pop ss mov xchg (bad) jge and je (bad) mov negl xor sub cmpsl sub push movabs pop adc (bad) jge sbb cmp adc (bad) jne adc adc movabs mov imul or enterq pushq pushq scas repnz (bad) (bad) repz in mov (bad) ja cmp or rex.WRX int3 cmpsb imul (bad) add enterq (bad) add push fisubl jl lods (bad) or fwait cmp jae cltd adc jae adc cmp rex.WXB repnz jno jbe jge adc insl rex.B xchg data16 jl mov in jno add (bad) rclb enterq push lret insl out rex.WX retq je hlt push cmp loop pushq adc orl adc rex.WXB sbb mov sub jmp xor rex.B cmp (bad) mov jl rcl mov rex.RXB ss (bad) std callq lret or add movabs stos imulb push fmull add push mov sbb xchg rex.WXB mov sub (bad) add in (bad) (bad) jae movsl int3 rex.WRB int xchg mov lods xor adc add add test rex.X movabs ja movabs xchg xchg (bad) or rex.WRXB (bad) cmc xchg ja cmp push (bad) (bad) (bad) jnp adc insl adc (bad) mov mov xchg adc (bad) adc rex.WX mov adc test jg (bad) cwtl mov fdivrs (bad) mov sbb out add test adc cltd (bad) xor hlt push (bad) in cwtl stos xchg enterq ss hlt jmpq pop mov cmc movabs xchg jmp rex.RXB ss sbb rorb (bad) xlat xor ss repnz add (bad) nop repz stos stos or shrb mov fldt fwait (bad) mov hlt (bad) jbe and sub push rex.RXB (bad) (bad) in adc sub and std sbb (bad) test (bad) and xlat ds jno jge and jle rcrb int3 int in mov fcoms adc in in (bad) (bad) enterq pop xor (bad) insb adc mov mov adc jb test movsb fstpl xor addb (bad) rex.WX lahf mov in mov xchg pop mov mov push cmp out (bad) in push xlat movabs adc rex.WRXB enterq xchg js fwait xchg outsb cmp mov rex.WX (bad) pushq rolb decl test xchg jp fildll cmp pop js rolb lret push shr int3 jle jmpq cli repz test loop add hlt push negb jb sub xchg push jne fcoml jmpq rex.X (bad) ficompl jae js mov (bad) adc rex.WRXB in rex.XB add (bad) imul retq popfq (bad) jno leaveq add rex.WRB in cmp sarl lock rcll sbbl lahf push lock out lea (bad) adc xchg (bad) rex.WR decb rorl add retq xor movabs retq hlt mov movl (bad) stos sub in adc movslq outsb cld jnp sub or lret test xor lea rcr out pop (bad) push and or int3 and (bad) outsb rex.WRX mov (bad) (bad) mov cmpsb mov mov loop out xchg mov rex.RXB scas int3 mov (bad) test enterq (bad) mov roll xchg rcrb mov rcll (bad) cmp or jl imul jmp sub (bad) jrcxz and int cmc sahf jno andl retq pop (bad) es pop mov pop jae lahf mov out imul mov cmp rcrb xchg lret movabs (bad) cmp mov mov sbb rex.R adc lock jne and push lret mov xchg jg (bad) rex.WRB sub xor out popfq clc adc movabs (bad) rex.RXB mov cmp pop movabs and lods fs (bad) jle pushfq cmp cmp rclb (bad) mov out jmpq cmpsb (bad) movslq push jns (bad) leaveq (bad) mov fmuls xlat pushq add add and adc (bad) in std lret rex.WRXB (bad) adc retq mov sbb xor sbb std sbb jne popfq iret shrb loopne rex.WR (bad) fimull scas add adc xchg mov (bad) and adc rcll sub movabs int xchg fildl adc mov sub andl and (bad) push (bad) adc icebp rex.XB jb lret notb and lock pop lods mov rex.WRXB xchg fxtract jle jge mov cwtl loope test fsubl add sahf mov icebp cmp (bad) fistpl adc (bad) iret adc pop mov xor mov jno ljmp (bad) rcrb sbb outsb lods fisttpl cmp and rex.WR xchg or cwtl insb and push pop jle add add adc (bad) adc lret rex.WX mov pop (bad) sub cmp or jmp jge outsb or imul js mov adc sbb adc movabs ss rex.WB retq xchg jne jp retq (bad) lcall sbb insb jl xchg (bad) mov imul or pop addb mov popfq cli cmp insl adc rex.RX fwait push addr32 fistp mov mov ficoml cmp or fsubrl rex.WX push insb callq cmp pop incl push jbe adc xor rex.RB rex pushq or xor mov and jmp jne (bad) xor add lret leaveq repz sub mov xchg fidivl (bad) stc fsubs jg (bad) mov retq fwait mov cmp (bad) cmp xchg xor retq notb rex rex.RXB adc jbe (bad) cmp shll rcr pop xchg mov and lods xor repnz fwait pmovmskb mov (bad) mov testb out push push mov (bad) (bad) (bad) stc rex.RB sub xor jmpq jl mov ficoml push iret cmp rex.WXB movabs add sti imul add cltd popq imul in scas fisttpll std jbe callq xchg fdivp sub adc (bad) lahf loope fwait enterq fdivrs sub lods int (bad) push sbb push addr32 rex.WRX (bad) or sub cmc rex.WXB rex.WXB (bad) cmpsl push and (bad) int3 jp imul xor pmulhw pop (bad) mov mov es xchg movabs mov stc xor xchg lahf rex.WX jle mov push rex.WRX stc sbb add add and adc (bad) mov mov mov repnz push or outsb and movabs (bad) rex.WR cmp adc js icebp xchg (bad) je sbb mov divl push scas xlat push xchg xor fidivr repnz mov lcall movabs sti retq sbb (bad) (bad) (bad) lret adc (bad) fisub adc rex.X or orl enterq sub xchg shll (bad) (bad) data16 or cmp xor cwtl (bad) pop data16 shl (bad) outsl adc int3 (bad) push hlt enterq add lods nopl adc je and rex.WX rex.RB lock (bad) xor cmpsl mov xor xchg addr32 pushq mov and mov add adc (bad) push sub and rex.RXB rex.WR mov repz (bad) stc iret (bad) (bad) xor jne (bad) add (bad) push fdivs (bad) sbb (bad) rex.X lret rex.RB fwait mov je (bad) and push xchg adc retq and sbb rcll mov lock test test (bad) add (bad) movabs or sbb nop and rex.WXB (bad) cmp shrl pushq rex.WRXB push out callq (bad) xchg insb sbb mov or xor mov jp mov rex.WRXB rex.RXB fdivs cmp stos (bad) cld fsubs divb (bad) (bad) jg mov int3 fbld push cld sbb clc fwait pop imul ds sub add int andl xor (bad) iret xchg sbb pop add xchg cld stos rex.B cwtl pop frstor mov jnp sarl jmp sub or (bad) frndint (bad) lods mov adc (bad) (bad) pop repnz and (bad) mov int rex.W (bad) repnz mov or int3 (bad) and pop pop cmp and pushq mov mov push std adc (bad) fwait shll retq lahf (bad) lods jne push pop rex.B outsl (bad) mov movsb pushq adc xor in pop jo cmc push sbb rcll xchg pop in sub imul shrl add rex.WXB out jge cld (bad) sahf mov jnp sub movsl add cmp mov cli rolb xlat jbe adc xor jle add mov cld cmp sbb push rex.R pop adc std sub mov (bad) pop pushfq (bad) icebp sub punpcklbw sbbb rex.RXB add jnp sbb and sub test test cmp (bad) xor add cld or add lret xor scas sub pop popfq and lret (bad) in rex.W adc cltd or fbld cmpsl pushq pop sub sti je mov adc jrcxz (bad) fbstp add (bad) movabs retq (bad) movsl es pushfq (bad) (bad) xchg lock fistl jne pcmpeqd or ljmp mov out sub add sbb mov decb jmp xchg adc xchg (bad) outsb jge and stc fimull mov cltd adc (bad) js sbb test adc mov cwtl xchg (bad) or div sbb clc cwtl loope jrcxz outsb (bad) (bad) sarb rex.RX movsb cmp xchg rex.WR rorb movabs rex.B pop xor (bad) (bad) sbb callq (bad) (bad) add test xorl ljmp cs (bad) (bad) rex.RXB or adc push pop or iret pop hlt jmp sbb int3 ficomp in out pushfq rex.RX lock rex xchg loop sub sbb adc nop add (bad) rex.WR rorl cs lret adc adc add (bad) jle in outsl xchg (bad) lahf jge adc repnz clc jp and retq or (bad) mov (bad) xchg pop movsb stc or andb je add (bad) or pop add xor adc sbb pop cwtl js (bad) rex.RB push (bad) loopne add in test jbe adc xchg push cmp rex.RX rex.X xchg jge movabs fcomps (bad) lahf push add push sahf xchg (bad) (bad) rex.X and lret mov pop mov test adc xlat (bad) pop mov rex.X adc fsubp movabs xchg mov lods or adc mov fdivrl repnz sub (bad) (bad) xchg sarb mov int adc (bad) jb mov adc iret (bad) sbb outsb sbb rex adc cmp xlat adc rex.RX ss adc (bad) or push push cmp imul out jmpq adc rex.R or cmp lret jmp push push push or (bad) mov or sub (bad) ds add pop add negb subb (bad) mov adc push addb or pop lock add push jbe imul repnz (bad) (bad) movabs (bad) (bad) xchg (bad) xor imul in jne jp add add sub jns mov movabs push test cwtl mov (bad) shrl lret (bad) jb nop js mov test xchg xor rex.WX imul (bad) scas in (bad) (bad) add test adc mov scas insl lock cltd jne add (bad) (bad) js int3 sub scas scas (bad) (bad) ja rex.RXB retq (bad) movabs (bad) iret fistp test lahf or adc mov test adc (bad) jg fisubr (bad) xor (bad) loop shlb xchg xchg cli adc in xchg fnsave xor stos test and mov out mov (bad) or rex.WR push fcompl out (bad) pop fildl xlat lret cmp jge rex.WRX (bad) jne push imul test xor mov movabs out retq or jae shl add out pushq mov rcl jno test test or add stos (bad) sub add (bad) enterq fnstcw adc addr32 add sub clc jbe in rex.WR mov je loopne push dec sbb or and and jge scas rorb cmp mov mov push cld rex.R sbb out sub mov mov add jp loope data16 jmp pushfq lods adc fisubr mov (bad) adc mov int3 cmc sbb push cwtl insb sbb js mov sbb jmpq jle pop rex.RX push rex.WR fld and xor popfq adc cmpsb xchg adc movslq (bad) adc (bad) out jne adc mov cld fsts repnz sbb int3 xor cmp xchg (bad) xchg lods test sub rex.WR movabs push imul js jb cli jno pop adc mov xchg (bad) js mov xor (bad) in rex.WRB xchg (bad) adc or adc sbb mov enterq xchg mov fadd jno lods xchg (bad) in sbb xchg pop and jae not loopne and rex.XB idivb sbb xlat jno retq push jbe jrcxz lock mov std jnp out sbb int3 mov add jne (bad) cmp xchg xor and mov (bad) insl enterq in sub sti insb test enterq rex.WR (bad) test pushq xor (bad) idivl in mov mov pop xor movslq int xchg stos sbb sub (bad) cmp jne pop xor (bad) (bad) (bad) mov sub movmskps and jg mov rex.W (bad) enterq rex.RX mov mov repnz (bad) and (bad) sub (bad) adc (bad) incl push xchg sub ss (bad) retq mov xor ficoml movslq int3 mov fs adc hlt push jns lahf sbb (bad) mov sub or cmp int3 mov or adc adc leaveq lods xchg jns sub add mov sub mov enterq add xchg (bad) jmpq adc imul xor mov mov pop xor jge hlt (bad) sbb icebp jmp adc xchg rex.RB cmc (bad) mov in pop imul (bad) leaveq movabs (bad) (bad) lods add fs out (bad) and (bad) imull rex.WRX (bad) insb mov int cmp mov mov jmp xchg and sub movsb (bad) mov callq mov cmpsl pop (bad) stos jne sub pushq rex.W xchg add xor nop (bad) loopne outsl rcll cmp addr32 fwait mov rex.WX cmpps ja xor cld rcr (bad) int xchg mov sub (bad) mov add cmpsb out jle (bad) jp scas retq ss lahf adc and pop rep rex.WRXB fldcw (bad) subb in je scas (bad) js xchg andl mov cmp xchg rex.XB or (bad) pop xor callq rex rolb mov pop int mov mov add movabs (bad) or (bad) adc jmpq pop iret cmp adc cmpsl (bad) popfq cwtl (bad) adc sti mov sbb xchg adc sub mov mov xchg cmp (bad) out mov ss adc add cmp jp retq rex.W rex.WXB xlat lock or cltd xchg repz ds rex.RXB sbb mov cmpsb pop in rcll rex.WB jmpq xor (bad) (bad) add adc lret xchg adc movabs iret adc rcrl add adc cmp (bad) (bad) cmp (bad) movabs and jmpq and fidiv (bad) fadds jp (bad) jl retq mov cmpsb or nop (bad) jrcxz adc pop cli movslq lea and rex.X lods sub adc mov mov sahf repnz fbstp outsl and mov lea (bad) and pop cltd jne cmp jne mov rex.WXB sub loop cmpsb pop out or orb cltd ss out and sbb mov movabs retq xchg jge (bad) (bad) addl lret fwait rcrl fsubl clc callq (bad) imulb adc movsb mov adc imul sti retq idivl vaddss (bad) ss sub enterq and sbb (bad) movabs cwtl push xchg popfq (bad) movslq retq (bad) gs cmpsl add out stos adc pop and pop (bad) xor sub pop mov xlat push insl out adc (bad) xchg in xlat in rex.WRX lea adc push xchg std cmp insl mov lret pushq mov nop sahf add stos (bad) icebp mov out jno (bad) jne mov (bad) shrb pop xor rex.R retq out sar cld mov xor (bad) in mov inc or or (bad) (bad) movsb imul cmp push fwait jno add and out (bad) movabs lahf rorb pop movsl (bad) lret in rex.WRB lods imul sbb xor rcl sahf outsl pop out movsl and imul ja pop fistpll (bad) xor (bad) mov sub and or rex.WRX add pop in pop jb or data16 lods std add (bad) (bad) fstpt out xor (bad) (bad) (bad) jmp push sbb out mov fs (bad) sub outsb out or testb xor cmc movsl rex.WRX rex.B incl adc or (bad) js in or lret xchg sub jmp rex.RX push mov (bad) movabs in jg rorb and rex.RX fucomp (bad) ds adc push movabs loope outsb gs pop lock jmpq shlb fisubl cmpsl mov (bad) ds test adc movl or mov out lret lret (bad) repz lret push jge fcmovnbe rex.RB ja or movsb add fistl pop rex.RX movabs adc cmp sub push adc jmpq adc fsubs (bad) out lea (bad) adc scas and sub (bad) movabs jne push cmpsl xor rex.RX jo xchg sbb out sbb (bad) retq unpckhps cmp test add lea push rex.R lock rex.XB rex.WX cli cmpsl out int3 emms (bad) xchg shr xchg adc lahf mov sub push adc cld adc adc pop clc add cmp adc sub in popfq mov js sub movabs and jo jae lock lock sub cld pop je add (bad) movabs fcomi (bad) mov cltd pop fsubrp rex.RX rex.RXB js (bad) jbe fisttp add pop mov rex.X (bad) fisubr shrb mov pop and callq (bad) out test xchg and rex.RB adc push jge stos icebp (bad) cmpsl adc xchg (bad) sbb leaveq nop mov std sub rclb (bad) cld movabs rex.RXB sub js cmp (bad) movsb cmpsl or movabs std callq int adc sbb cmp mov insl fmull decl repz movabs or jo (bad) pop rex.RX or jbe cmpsb sbb xchg cli fidivr fs xchg xchg rcll rex.R (bad) xchg rcll movslq test je mov (bad) in add xor (bad) (bad) cmp decb and push lcall (bad) mov std (bad) xor in rorl add (bad) add sbb movsb pop movabs repz mov (bad) mov iret or icebp sti or xor lret test stos rex.WR cmp xor adc (bad) mov mov jmpq movslq xlat or callq (bad) int mov adc iret push (bad) mov mov adc push int adc sbb push and cmpsl sbb (bad) adc sub rcll jae pushfq pop movabs ja cmp fistpll mov xor push (bad) xlat rex.XB rex.WXB int xchg add xchg (bad) adc mov or and adc icebp xor fidivrl cld lret (bad) callq mov add mov sbb scas movabs adc test in ja mov mov (bad) clc sbb mov (bad) and (bad) xchg clc (bad) scas test loopne ss jrcxz in (bad) imul hlt mov lock jp mov rex.WRB xchg or (bad) adc push (bad) lock enterq adc mov and (bad) add popfq adc jge in jmp (bad) (bad) (bad) out adc test scas adc xadd ja or push pushq in add rex.WRX fwait push (bad) push sub retq rex.R sub and ss adc shl imul stos add mov pop adc fisttpll adc mov push rex.B outsb jrcxz mov add cmpsl (bad) or adcl stos xchg (bad) fwait sub lock icebp callq cmpsl (bad) (bad) in (bad) retq lret rex.WR rex.WRB pop or fchs (bad) ss (bad) in movslq stc adc push (bad) je (bad) xor adc (bad) and jmpq pop mov rex.RB (bad) pop sbb mov js popfq adc movsl imul lea data16 mov loope movsl xor add mov fidiv adc or adc and xchg adc movb cmp mov pushq rex.WB and (bad) add ds stos (bad) pop adc push adc pushfq cmc xor adc push xchg scas xchg in lret out fmull rex.WRB xor xchg (bad) add add out rex.WRX jne sbb out rex.WB rex.WXB mov js rex.XB rex.B (bad) in (bad) retq sahf (bad) adc and std fstp int push adc cmp scas scas jae (bad) insl rex.WB (bad) repz adc popq (bad) adc jl mov adc lock and mov out in rex.RB cli pop adc adc scas cli xchg test add sub cmp out js jle mov sbb stos mov jae fwait (bad) retq in js dec sbb scas xchg sub sub rex.RB (bad) (bad) cmp (bad) mov sbb lahf rex.WX hlt add je sub mov (bad) loopne not rcl adc xor push pop data16 callq insb sub pop jge int3 repnz (bad) (bad) rex.WXB jb xchg out xor gs jae rcl xchg movswl gs test and sarb retq xchg std in je pop mov pop mov jb (bad) and xchg test enterq pop cmp hlt rep rex.WRB jrcxz rex.R rex.X iret push mov (bad) (bad) jo rex.WXB hlt add in pop rex.RX (bad) (bad) sahf imul repnz sbb mov insb imul (bad) js sbb (bad) out rex.WB cmc rex.WR pushq es xchg notb rex.W rex.RX lock xchg adc test jne imul or add cmpsl es mov pop movabs add (bad) popfq jne mov (bad) fldln2 mov or mov adc leaveq or jnp adc outsb out add pop (bad) or pop cld and rex.WRXB out add (bad) jl pop and clc xchg jrcxz xor rex.W xor mov sbb push jno and out cmp mov push sbb (bad) sahf test lods cwtl out mov xor jg mov cli rex.RB add lods sbb (bad) outsb loop pop mov (bad) sub xchg mov xor push adc icebp jle lock xor roll icebp negb and enterq test adc and out jrcxz jne fwait mov out (bad) insl xlat adc cmpl lret xor sbb retq jbe or push mov or push jg movsb mov (bad) jl ficompl xor out (bad) mov out mov sub mov and mov fcoms mov sub xchg rex.RXB rcll adc (bad) xchg insb fsubrs int3 (bad) mov sbb jg repnz rex.WX (bad) lock rex.XB or outsl movabs xor (bad) rorl repz shr jns js pop mov xchg jge rex.XB ds sbb rol (bad) xor adc mov fwait xchg sar ficompl test xchg mov jne push or xchg movabs icebp movabs rex.WB (bad) pushq shrl ja fistpl loopne pushq sarb movabs mov (bad) push (bad) mov cli callq outsl movslq sub pop rex.WX cwtl or retq in rex.B and xchg in (bad) sub rex.XB adc retq stc adc adc (bad) xor adc lods sub fs out (bad) sbb mov add ror pop rex.XB fimul (bad) xchg (bad) lods test jnp sbb sub test pushfq pop sub es pop mov pop (bad) and rex.RXB cli nop add scas jb push or (bad) pop imul fwait mov mov mov jmpq rex.X or test pop pop (bad) jmp movl adc xor movabs fildll (bad) mov (bad) cld rex.WRXB rex.XB pushfq cltd sbb (bad) mov cs ficompl add fs (bad) and rex.WXB std movabs test (bad) xchg jnp in mov cmp test mov add xchg movslq or (bad) sbb xor loope fldenv jmp loopne mov sub jae lods jo sbb (bad) leaveq mov (bad) jl (bad) adc (bad) popq invd rex.WR push fwait cmp mov lea fimull cmpsb push jmpq mov scas (bad) jmpq (bad) xor hlt (bad) fidiv sbb cmp (bad) lods rex.RB adc xchg jmp xor mov add pop test rex.WRX mov rex.XB je notl sbb rex.RXB test (bad) movsb (bad) mov and rcl pushfq push out sbb movabs fsubs xlat pushq (bad) mov stos mov adc (bad) xor ss or cmpsb pushq xor pop sbb xor pop adc rex.X sbb fldt out fcoml test xlat push add (bad) add and lods push lock clc adc test (bad) cmpsl cli (bad) or lret fs and out rex.RB adc rcll fiadd adc or (bad) xchg test in sub adc mov leaveq (bad) pop cmc or rex.RXB out iret cmp imul movabs rolb cmpsb sub adc xor (bad) jg cld sahf cmp and rcrl fbld push (bad) (bad) loop mov clc mov rex.WRX xchg lret (bad) sub mov (bad) mov int3 (bad) addr32 pushq enterq std cmp adc in pop (bad) jae add movabs push rex.R es pop icebp (bad) js cli bnd sub sub (bad) push jmp leaveq loopne cltd fistpll xor and sub jo (bad) pop sti outsb rex.WRB rex.WRX add mov (bad) hlt cmp push jno rex.WRX iret cmpsb int3 pop adc sub fsubrp (bad) pop enterq int ja test (bad) sbb xchg popq adc pop movabs rex.RB (bad) add cs lret pushq (bad) jle out xor (bad) (bad) (bad) jno (bad) es adc mov xor sub add add cltd jo xchg repz (bad) xor cli (bad) stc pushq ss xchg negb movsb outsl sbb (bad) jbe lea fidivr in or pop cmp (bad) adc cmp pop or (bad) cmp je xchg fistp fldl pop loop adc outsl cld or push add or fdiv in pushfq mov rex.WXB xchg rex.WR repnz xchg out jne xor sbb (bad) repz lods retq rex.WRX in (bad) sbb cmc jno (bad) adc stos mov and lods sarl retq (bad) stos lfs cmp xor retq mov push cwtl lods movabs fnstcw and xor loopne repnz (bad) pop movsl stc mov lahf mov (bad) (bad) cmp callq pushq cs cmc out rex.RXB (bad) lock lret rex.X pop add rclb (bad) xor and movabs lahf adc jns rex.W (bad) cmpsl cmp adc (bad) (bad) clc (bad) imul mov jle xchg mov or adc frstor sti jne rex.WB mov rex.X cld hlt lea (bad) (bad) fwait pop xchg sar leaveq pushfq adc (bad) (bad) jge (bad) rex.R and (bad) adc fcmovnu and (bad) clc and mov and (bad) xchg (bad) stos cmc pop adc adc (bad) (bad) and add and rclb adc mov lret sbb adc test rex.X fxch adc outsb popfq (bad) fs xchg xchg adc cmc jb addr32 pushq cmovge sahf pop add adc addr32 sti insl std (bad) mov adc fidivr push adc xchg scas sarl movsb cmp callq mov xchg pushw xor subl cld repz std add adc (bad) incl movsl adc mov std mov pop rex.WB es (bad) test cltd (bad) pop ds mov jrcxz fwait jbe and cmp push in add mov (bad) insb icebp clc fisttp popfq push push cs jge rclb in xor or bndldx insl callq lahf xorb movsl sub pop adc sahf cmp (bad) cmove movabs rcll jbe outsb adc repz cld xor rcrb (bad) adc cmp int3 scas mov adc sub (bad) mov rex.WRXB xchg fcoml lahf adc and gs push test (bad) push (bad) jnp mov lock andb (bad) std (bad) vpcmpeqd (bad) adc (bad) pop in gs imul or sbb movabs lods or mov in adc lods (bad) or (bad) or xlat sub mov add push test (bad) insb lock rex.X rclb rex.XB fwait out rex.WB sub data16 mov and xorl clc adc or pushq movabs (bad) loopne (bad) sti idivl push rex.WR xchg pop out out and movabs loopne out adc jmp mov cwtl test push or stos fwait xchg mov cltd adc movslq scas out lea cmpsl xor pop (bad) sahf cld xchg mov cmpsb adc sub xor cwtl add cmp cltd add fbstp popfq cs sbb cmp push cmp callq (bad) rex xor fnstenv rex.RB cmp retq xor sbb and and adc jno (bad) sti mov fldpi add (bad) add rex.WX sub inc rex.WRB rex.XB cmpb mov mov (bad) fmuls cmp mov repz jae (bad) je lock jno mov add (bad) mov imul mov mov ja add out jne test in rex.RX push (bad) dec mov movsl rex.RX push (bad) loop push ffree sbbl pop and (bad) adc rolb add cld cmc js adc test add jo and add sub (bad) or (bad) stc rex.WR (bad) mov and retq insl retq pushfq push rex.RX xchg scas lahf test nop mov cmp mov std stc push rex.RX (bad) sbb push rex.RB lahf adc stos fdivr jne pop rex add fs and and jb (bad) js leaveq pushq cmp fldt fdivr pop add movabs fwait pop (bad) jle (bad) add sbb rex.RB callq sbb scas in pop xchg cmpsb movabs sbb int cs (bad) jno add sbb pop movsl imul adc (bad) ja leaveq fwait xchg inc mov mov sub leaveq rex.WRB int3 pop sbb repz stc xchg incl fistpll lret movabs and ud1 cld sub fidivrl fildll adc sub sub or enterq or insl (bad) jno callq xchg (bad) (bad) iret (bad) (bad) add add enterq (bad) callq fs jmp imul (bad) push rcrl mov (bad) push in cltd pushq (bad) movabs movabs int pop rex.RX xlat fs adc sub imul pop push and add rex.WB cs fwait cmp mov loope mov neg jo jno sbb rcrb jnp and es (bad) pop jne add sbb clc jg xchg and jbe (bad) rex.WRX or (bad) movabs std push mov (bad) xchg fstpl adc insb rex.WXB rex.WX gs int3 xor sub loope mov imul xor fcmovu push cmp (bad) stc sbb adc mov insb pop (bad) mov adc lods in sub je adc (bad) mov loop int rcrb hlt movabs mov lahf movsb jbe js cmp xor add xchg (bad) adc jnp rex.XB repz jns or movabs add (bad) (bad) mov (bad) (bad) push add add (bad) (bad) and std cmp mov xchg repnz mov cmp cmpsb sbb xchg movslq (bad) ficomp (bad) pushq clc mov sahf sbb rex or cmpsb add adc pop fwait jns sbb jg (bad) enterq (bad) adc fldt mov add hlt add mov (bad) and iret (bad) rex.X movabs fidivr or movabs retq (bad) (bad) outsl adc sbb jno (bad) mov cmp (bad) fadds jg mov (bad) xchg mov sbbb cli movslq nop (bad) mov sub xchg adc callq adc clc rex.WX adc mov rex mov xor (bad) (bad) sub sbb xchg adc cmp rex.RX fs lods rex.WRXB mov sbb test mov or rex.B mov adc pop fsubl jno jg add jnp (bad) repnz mov roll sbb lods (bad) rcl pop sbb insl int cmc movabs pop (bad) insb lret cmp int3 sub sub mov pop mov jmp out sub cmp (bad) jl (bad) cmpsl loopne punpckhbw and and fmull mov sub jge pop push (bad) out (bad) ja push fbld mov (bad) (bad) pop cmp rex.RB out (bad) and mov fstpt mov push ror (bad) je mov lret sub loope rex.B rex.WB idivb in or jne (bad) push adc outsb rex.WR scas fcomps out (bad) outsl xchg mov pop adc (bad) pop (bad) (bad) (bad) (bad) rex.W (bad) in loop add outsl in clc loope xor rex.WRX sub adc hlt popfq cmpsb pop adc lahf pop jl (bad) jbe mov nop repnz clc out xorl push (bad) mov rcrb jle rex.W fadd pop mov bnd pop fcom (bad) xchg rex.WX addb (bad) rex.WR (bad) (bad) enterq movl imul movabs mov jmpq out (bad) pop (bad) cmp scas int mov jmpq (bad) mov and (bad) lods sbb rex.WRB adc (bad) in adc add sub rex.B jmpq fs (bad) rcll pop cltd mov sbb push (bad) insl int3 (bad) jno (bad) xchg xlat push pop push or (bad) int3 fs and rol rex.WXB xor and mov int3 rex.W mov fisub cmp cs ja loop and cs xchg or mov mov rex.RXB je sub lahf insb push nop fcomp (bad) adc (bad) fnstcw mov rex.W sub rcll jl cmpsl clc fild adc xchg pop mov jl rex.WX pop packssdw or adc mov in mov adc cmp fadds mov ja cwtl pop push add cmpsl out int3 mov rex.R mov mov fisubr adc cmp xchg (bad) (bad) (bad) adc rex.RB pop adc add sbb rcl cmc pop rex.RX sbb adc mov enterq (bad) mov and sbb adc cmp or (bad) sahf adc xlat adc (bad) add jbe pop jnp and jno cmp je int3 (bad) adc sbb pop (bad) ss adc mov sbb adc insb cmc push lods jne (bad) add nop shlb push stos sub adc (bad) rex.RB adc cmp in jl insb movslq xor rex.RXB sbb rex.WX rex.WB lahf retq push fcomps sbbb xchg and and sub pushq xor js stc xchg scas movabs fidivrl sub fneni(8087 adc (bad) pop ja jrcxz xchg pop addr32 push (bad) test rex.B scas callq (bad) or mov adc pop (bad) xchg rex sub cld rex.WRB es (bad) fwait mov jp cld or lahf insb cmp pushq enterq (bad) mov loope rex.W rex.RXB mov adc rex.WRXB or xchg xchg (bad) insl jle mov loop jbe (bad) pushfq push (bad) xlat retq movabs sbb sahf (bad) (bad) adc hlt jge fnstenv fisttpll mov xchg repnz push retq adc pop and jl std add push retq movabs pushfq out jo fiaddl mov push or push xchg mov mov test xor (bad) add mov adc cmp (bad) (bad) xchg mov or vpmaxub jne rex.RXB in xchg adc rex.RB scas adc push mov pop mov mov clc movabs adc jb movabs je (bad) add sbb and jae loop push xchg cmp or sub adc (bad) and mov push or ja xchg pop (bad) (bad) adc movabs (bad) and sub or (bad) adc movsb mov (bad) imul callq adc cmpsb mov pop (bad) mov jge enterq lea test pop xchg or xor (bad) mov push pop xchg (bad) xchg push jge (bad) std (bad) repnz sub fisttpl fild mov retq sub in jle xchg add xor or ja jbe movabs pop pushfq (bad) rex.WRX addl enterq cmp js retq adc mov rex.B adc fdivl cmpsl (bad) insb xchg xchg int jo push adc ljmp loope subl repz xor cwtl test fs fwait pop and rex.WRXB jge and push cmp movabs mov or and pushq rex.WR mov adc pop mov lock mov or fnstsw (bad) mov xor pop jns pushfq (bad) jmp push rorl js mov clc xorl mov xchg jae movsb or pushfq nopl fwait add jmpq adc jne rex.WRX lods (bad) push ds rcr mul pop adc cs sub mov fmul or mov lods callq outsl (bad) (bad) (bad) lahf (bad) rex.RB fs cmp (bad) pop (bad) sub movabs push leaveq xchg (bad) xchg pop rex.WB mov sbb notb cmc ja xchg sbb sub gs pop mov rex.RX or mov pushfq and xchg out stos test add cmp (bad) or xchg rex.WB mov adc jnp fsts xchg sub jmpq mov movabs sub (bad) gs jge sub (bad) cmp fisub (bad) adc fadds pop and cmp insb mov sub cli cmp push out adc in xchg movsl (bad) (bad) adc clc pop cmp add ss (bad) jmp out push stc adc es rex.X jb mov cmp jnp (bad) mov (bad) incl adc (bad) out sub cli mov xchg push pushfq xchg or (bad) (bad) xchg adc or pushq push push movabs xor (bad) or (bad) out mov movabs movsl mov sub adc fadd jae lock xchg adc or outsb (bad) mov add or (bad) jmpq jae sbb fld1 sub lods (bad) lock rex.RXB movabs cmp (bad) (bad) test mov test add callq retq xor repnz push retq jae int repnz push std pop cmpsl (bad) int int3 idivb lock std xchg je movabs (bad) clc jle (bad) jo sub cltd in (bad) (bad) shll rcr or addr32 out lea test rex.WXB jae xchg adc loopne push (bad) pop enterq out notb and rex.WRX (bad) rex.WRB fs movsl lods gs (bad) mov callq movabs adc mov fstps (bad) test rex.WX stc ds lret cmpl xchg mov sarl je mov sahf loope adc cli sbb (bad) retq add mov movsb (bad) or lock mov jmpq add rex.RXB imul callq retq (bad) add jp idivb jnp cmpsl or rex.W (bad) xchg lods outsl mov cmp and adc jle (bad) add adc pop ja gs rex.WRX jae or mov faddl sbb in lods (bad) sub test imul (bad) (bad) mov sub adc rex.X in (bad) ja test lock add (bad) testl shl add add es movabs lret imul fstps push xchg mov sub pushq (bad) add sub movabs (bad) rex.WR cld clc mov out pop test roll adc xor adc jnp mov pop push mov js testl rex.RX ss adc push xchg mov adc std add test in adc (bad) adc mov push adc add mov cmpsl adc outsb repz cltd or clc in (bad) sub out callq fcoml adc movsb scas add mov popfq (bad) adc loopne sar mov (bad) (bad) mov pop cmp add jbe (bad) inc adc callq or sub int3 (bad) mov (bad) pop enterq xor and pop xchg pushq (bad) out rex.RX movsl clc jne fwait jo push rex.WRB idivb jnp (bad) xchg xchg ds rex.XB (bad) jg (bad) mov (bad) scas jne adc xor (bad) fdivrs mov test lea sub xchg lock (bad) loope adc mov (bad) xchg testb pop (bad) adc adc repz ja out mov (bad) jmpq ljmp stos js and jne ja mov int3 pop mov add adc insb xchg jne jae adc mov je cli pop cmp fwait adc rex.WRX movabs (bad) scas sub jo mov push add clc (bad) cmpsl insb scas and enterq pop fild lock stc in sbb xor mov (bad) pop (bad) jae mov pop sub movabs adc nop fimull mov addr32 sub adc stos (bad) decl callq adc jne cmp or std lods data16 (bad) rex.WRXB and test movabs mov rex.WB pushfq cld add fwait mov mov shrl stc add xor push in push ja pop pop clc rex.X cmpb movabs pop cmpsl xlat out js (bad) imul (bad) fldenv stos adc movabs rex.RX movslq (bad) or rcrb sti cltd outsl popq loope mov imul jns retq xchg jrcxz loope and outsl xchg icebp (bad) push adc jnp insb adc xchg repz data16 (bad) sub lods (bad) hlt fsubrl mov retq sbb (bad) adc jbe adc nop add callq xor shl fwait rex.RX icebp jno mov hlt cmp fnstsw add (bad) cwtl (bad) movsb in rex.WRB (bad) and xlat add jg adc fsubrs mov jb adc (bad) and adc loop (bad) add (bad) int fist hlt (bad) (bad) pop jl out rex.XB xchg xchg cltd retq rol rex.WB rex.RB jae enterq cli mov rex.WRB fsubrp xchg push lock fldcw movabs (bad) imul add mov movsl or rex.WR rex.RX rex.WRB in fs adc cmpsb je addb (bad) rex.WX or rcrl rex.R mov mov frstor (bad) or or rex.R sbb (bad) jle (bad) jmp rex.RX shrl loope xor jae in ds (bad) test icebp rex.WRB nop cwtl test int jg fcoml lahf and js cmc sub jmp jb fiadd cwtl and rex.W imul sub and mov xchg retq sbb (bad) mov adc pop rclb imulb cs (bad) rex.RXB cld sub lret jb cli adc pop (bad) fidivr lods pop mov (bad) or add and or rex.WB adc sahf (bad) xchg adc mov (bad) rex.WRB in (bad) movabs (bad) jb adc test mov adc adc adc hlt (bad) pop movabs rex.RX or mov cmpsl push or in pop mov sub or sub sahf cmpsb (bad) outsb lods js and rex.XB movabs je and adc callq jo icebp mov lock clc shr (bad) in (bad) xchg jg in hlt (bad) callq fsubr sahf (bad) popfq rorb and rex.WRX sub xchg test cltd xchg lock rex.WRB (bad) outsb roll int3 retq cmpsb rcrl loope (bad) test rex.B jbe out mov mov (bad) out cmpsb (bad) push mov lods mov add (bad) (bad) movslq sub adc sub insb xorb xchg fnop mov (bad) out (bad) mov xor test mov roll or fistpll mov out (bad) jbe mov and rcll jne lret lret lock adc pop fisubrl sbb cmc movslq imul ss mov pushfq xchg cmpsl sub (bad) vmread add sub movabs and or fdivrp test fcmovu mov out out outsb add fstl fild pushq movabs (bad) repz adc cmp (bad) mov scas int3 (bad) rex.RXB sub sub pushfq add (bad) sub hlt movabs push imul add mov (bad) shlb sub mov cld mov lock lock (bad) mov rex.WRX hlt in rcl fnstcw sub mov xor (bad) clc push sbb (bad) mov jo lea rcrb fisttp mov out sub adc xlat pop mov rex.R test sbb rorb (bad) stos (bad) rex.WRX setg (bad) cmp pop test jle xchg js vpslld out add stos (bad) (bad) repz (bad) or rex cmp rex iret (bad) lods fwait subb movabs (bad) shrq (bad) add lods and fs mov adc mov faddl scas sub fcompl xchg mov (bad) cmp add pushfq adc (bad) mov loop adc jo adc sbb push addr32 adc stos sub xchg fdivs clc sti xchg frstor rex.X pop pop enterq (bad) (bad) or lahf xor in (bad) pop mov pop lahf or mov sub add cmp cltd (bad) mov (bad) mov adc push xor scas adcb xchg pop pop adc mov mov adc sbb adc sub lods adc pop rex.RXB or adc movabs (bad) lea retq leaveq (bad) xor mov cmp sub movabs add jo mov insl sub jge mov push (bad) (bad) adc xor mov je lock jrcxz mov rex.WB rex.XB xchg in movabs push lahf xor test adc test xor mov cmp outsl xchg neg or movabs jo loop movabs rex.X pushq fisub loop sub js loope jmpq or gs push adc pushfq addr32 callq std stos sub pop mov adc fldenv xor mov fist mov loopne emms mulb (bad) mov (bad) lea sub ror mov sbb sbb rex.X rex.X mov bnd add sub xchg callq and fwait push or mov rex.R (bad) push movabs adc adc psraw test movslq and jp shld (bad) push xchg rorb jne (bad) pop push or pop xchg xor or mov xchg mov sbb repz xadd and icebp cmpsl mov or xchg mov imul sahf mov fidivr in or (bad) xlat lock pop mov adc outsl push insl nop mov fcomps (bad) adc cli push pop cmp popfq fist fs (bad) sub rex.R gs and adc enterq adc rex.WX (bad) jno pop sti movslq outsw xor movabs fwait cwtl (bad) (bad) jge rex.WXB (bad) cmc rex.XB lods stos testl (bad) fcomps (bad) cmpsb mov nop movabs (bad) stos mov adc mov jno (bad) or xor pop lods push rex.WRX rex.WRXB test and adc sti rex.WRB rex.WRX adc xchg sbb shll xchg lods mov jmp in rex.WXB adc mov ss lock cld fistpll sub push rex.RX repnz pop sahf jg (bad) (bad) pop int3 (bad) mov add movabs cld callq mov fneni(8087 sbb (bad) icebp callq (bad) rcl test xor out sbb adc (bad) nop (bad) std adc callq imul movl (bad) rex.WRB test xchg mov or jmpq add retq (bad) push (bad) rex.WXB enterq jl incq add loop xchg push (bad) shrw lock adc mov rex.WR and movabs addb sbb jmp add iret mov (bad) sub or cmp mov lods sub adc mov sub and sbb mov or (bad) repz adc xchg je jp movabs test adc or fsub mov push stc xchg sbb xchg fwait sub xor (bad) (bad) fidivrl test iret xlat mov push loope fsubrs mov pop (bad) stos ja xchg xchg adc and mov xchg (bad) jg mov mov (bad) mov (bad) sub push int xlat outsl adc rex.XB mov fcomps mov jge pop std in jl fs push sbb cwtl mov and lods fcom in cmp std sti (bad) clc in mov rcrl fwait xchg and scas mov pop cld jmp std or (bad) push push and (bad) fldcw mov add pushq mov jnp mov (bad) scas fs sbb movabs retq sbb pop test clc jge fsub (bad) popfq xor test imul popfq (bad) push (bad) adc fsubl xor add push rex.X sub rex.RB (bad) mov (bad) or (bad) and (bad) lods pop movabs (bad) fimul (bad) mov movsl (bad) out (bad) test xchg xor add orl sub (bad) movabs jbe jne jrcxz and or mov (bad) push sbbl pop jno (bad) (bad) and std sub push in pinsrw mov add or (bad) insl (bad) (bad) (bad) push rex.WR sub (bad) faddl (bad) jmp xchg (bad) and pop test repz add je jbe fistl (bad) fistpl rex.XB xchg rex.WB rex.WX int3 xor loope movsb cmp mov test (bad) lea leaveq jbe cmp (bad) scas and mov mov shl mov addr32 cmp add imul cmpsl cmpsb out je (bad) jne hlt insl mov or test loope and ja test rex.R rex.XB fs fsubr (bad) and (bad) js adc jno movl cmp sbb movabs lea shl jbe jae js jns callq scas ficompl xor push add in and add (bad) lods repz (bad) sar mov fmuls xchg (bad) pop cmp and mov adc xchg shll jb (bad) xchg clc cld pop mov (bad) imul add sub pushq movsb (bad) (bad) paddd jle and mov cmp loop xchg xchg (bad) xchg mov sbb stos and fldcw xchg (bad) sbb pop (bad) jmp adc cmp push add rex.WRB (bad) (bad) fldl retq (bad) xor sbb loopne jl repz mov int3 mov cmp (bad) pop sbb jg adc and push sti loop (bad) xchg pop mov jne jmpq and xor sbb movabs xor and pushq xlat pushq rex.WRXB js (bad) mov cmpl rex.B enterq (bad) mov (bad) lret (bad) mov mov cmp (bad) xchg xchg movslq sbb push adc out add jnp sbb pop cmc xor pop vsubss leaveq (bad) lret mov mov pop push xor out pop pop es pop (bad) out callq fsubs adc jo cmp adc mov test jle jp rex.R stc sbb mov cmp cltd adc mov adc idiv or adc rex insb (bad) adc and xor adc test adc (bad) (bad) mov mov (bad) add mov (bad) (bad) jne in adc rex.WX (bad) lock adc (bad) mov pop (bad) xor (bad) sub loope movslq (bad) mov jle add rex.WRX lock push bnd fcoml add (bad) (bad) jl mov loopne xor fdivrl callq cmp (bad) jge sbbl int3 cwtl xchg add cltd outsb push adc sub cmpl jl rex.RXB rex.XB adc (bad) fstps (bad) lret fsubrl mov rex.W (bad) xchg fisubl sarl jno rex.R test retq jb rex.WB xlat fistp rorb (bad) scas xor mov push sbb stos sbb adc push adc adc adc (bad) adc (bad) mov hlt and jb test push and loop movabs nop stos and rep je jmp mov (bad) sub and in jo,pn cmp test sahf mov mov adc ljmp and push jmp xor rex.R in lods cmp cwtl movabs xlat add movabs rex.X adc sbb out (bad) test (bad) jno xchg jmp popfq fildll mov mov stos or callq mov cmc adc retq sbb add (bad) test (bad) adc imul rex.X adc movb (bad) pop cmp cli (bad) jb mov and rex.WRXB push retq mov (bad) (bad) cmpsb (bad) and mov rex.RX test xchg movabs jnp iret sbb mov insl iret rex.WRX (bad) xor (bad) lret addr32 add adc repnz clc cld adc and adc (bad) cli sar insl adc fildll fbstp andl push rex.WB callq (bad) cmp sub jne and jb mov push mov ss mov cmp or rex.WR pushq sbb sbb xchg adc adc adc or mov rex.B mov imul movabs fisubrl xor test (bad) callq xchg xor jb push out adc or rex.WR or jg mov cmp jmpq in scas pop testb test mov flds xchg (bad) push xchg nop rex.RX outsb xchg adc mov sub sub fcmovu sahf rex.WXB ja cmp (bad) sbb adc movsb pushq sub xchg jl sub adc cs xor or mulb and (bad) jnp and cmpsb rex.RXB gs insl add rex.RB adc rex.B adc cmc (bad) movabs xor adc rex.WRX and xchg ja (bad) adc movabs jl adc (bad) mov gs repnz mov add jbe cli xchg fsubr jge (bad) sbb add cmpb js out (bad) add mov mov and add loope (bad) pop pand adc sub xor add xchg (bad) mov lahf retq movabs rex.WX or fdivs adc iret sbb negl fadds test stos pop movups sbb adc jbe and mov outsb push imul movabs cmpsl js movl mov xlat (bad) ja push adc pop divl sar add (bad) rcr pushq xor fwait (bad) enterq cmp pushfq (bad) sub rex.R gs imul add mov pushfq xchg sub sahf (bad) mov es (bad) adc ds scas icebp and lods jne std mov andb imul mov and rcr sub cmc (bad) leaveq (bad) movsl in sbb sub (bad) (bad) xor rex.R rex.XB jnp notl movabs rex.XB data16 mov mov pop cmp int or rex.WRXB cltd jns iret xor mov fs not lods xchg (bad) (bad) xor stos cli bnd retq sub mov in cs jl xor callq adc mov rex.WX add xchg sbb jnp popfq and cmpl mov mov (bad) adc (bad) rex.WRX loope stos (bad) int3 (bad) (bad) addr32 popfq out jae cmp (bad) outsb outsl sub lahf cmpsl clc sbb or (bad) and pop ds xchg cmp mov adc (bad) mov icebp (bad) xor fxch adc fdivr addb jno repz jnp sub rolb pushq out movabs stos (bad) mov and fwait jmp nop retq sbb outsl add icebp (bad) je mov sar mov mov (bad) mov jne (bad) xor or or (bad) xchg rex.WXB (bad) sbb cs rex.B jmpq xchg mov lock out movsl push mov push (bad) mov retq cmp (bad) and adc (bad) mov loope rex.R mov push mov rex.RXB es adc (bad) mov imul (bad) cmpsb test adc push (bad) adc adc cmp lods out jbe sarl adc and cli sbb adc neg repz out je adc loopne mov mov add (bad) pop jo mov mov lock popfq sub sub jmpq xchg xchg imul out movsl sub jbe sbb add xor jmp not (bad) xchg (bad) xchg stos cld gs jp out or mov js rex.RX ss lods out in sub jle jle outsl js hlt push add and jb and cmp cmp add sbb repz rex.R movsl (bad) incb int3 rex.RXB sbb pop (bad) shrl pop (bad) mov clc rex.B data16 (bad) retq fnstenv je cmp jo jbe imul (bad) mov mov adc adc mov fdivr xchg cld movsb orb roll (bad) and (bad) xchg mov mov push or retq rolb sub xor (bad) mov std adc rex.WRB mov (bad) xchg mov sbb mov (bad) iret rex.RXB jo gs jmp pop out xchg xchg pop sub sbb jbe lock jl (bad) pop xchg je loop hlt (bad) push xorl movabs fwait adc jb xlat mov cmp pop adc (bad) rex.RB sbb mov fwait adc (bad) (bad) cmp rex.WXB jnp movsb and xchg cwtl lods (bad) adc rcll in pop mov callq add xor mov jge adc sbb sar in int3 xchg (bad) rex.RXB (bad) (bad) xchg adc iret je mov cmp (bad) cmpsb out or cmp outsb mov mov fs xor and pop push mov fdivrp callq (bad) push fwait and (bad) pop movsb (bad) (bad) (bad) insl nop js or lea psllq ficom jne (bad) (bad) mov mov adc cmc fistl rex.RB sbb out fs and movabs cltd mov roll mov cld lods ficom pop mov mov (bad) sbb pop cmpsb in (bad) and in addr32 add in xchg pop push cwtl scas lret rcl icebp (bad) xchg lods xchg rex.RXB lea mov (bad) mov adc cmpsb in ja xchg push sbb xor lods fisttpl xor outsb fcmovb or rex.RX mov test xchg mov pop push pop rex.WRB sti cmp or mov and fild (bad) pop sub mov pop jns (bad) (bad) (bad) cmc sbb or (bad) sbb sub je shrl pop sarl retq sbb jge addr32 xchg loope imul (bad) sbb sub sbb cmc sub outsl adc loope cld add sub jge lea jno or adc jmpq push pop adc rex rex.XB adc (bad) addb adc cwtl jne (bad) lock or movabs in lock out mov sbb mov rex.WRX clc rex.R mov (bad) sbb mov je xchg cltd fwait int3 loop loope xchg adc (bad) pop clc gs xchg pop pop (bad) rex.WX adc adc movabs loopne repnz int3 cmp faddp (bad) idivb jae pushq lock jge jrcxz (bad) movabs rex.WB xchg jmpq push out lock (bad) xchg mov adc lret (bad) add repnz fcomps addr32 mov push dec (bad) jrcxz pop (bad) and out out xchg fcomp outsl scas fisubrl and push rex.WRX addr32 incb sub and rex.B repz (bad) js movabs push shl in add hlt rex.X push xor sub (bad) (bad) xor cmp push mov cmp sbb gs push xchg (bad) in pushq lods icebp (bad) fwait (bad) jno xlat or and loope out test adc movd cltd mov fcmovnu sbb cwtl fwait xor or cld movabs xchg out jbe jae xor repz sbb xchg xlat (bad) jo cmp add popq outsl rex.W mov and movabs mov movabs sub xchg push (bad) jno or cs adc retq lods mov movabs stos xchg mov push test cmp push jg sub divb pop sub jp mov rex.B adc sbb push fcmovnu repz (bad) (bad) (bad) cmp xchg jb lret sbb (bad) (bad) andb ss movsb adc (bad) fnsave (bad) jl fdivrl lods sbb jns clc rclb lahf std mov popfq (bad) jge js mov and xor push sub adc popfq (bad) and (bad) loop pushq adc cltd js (bad) fs jp sbb and lods mov nop decl mov mov sbb (bad) out mov lock xchg nop rex.WX push sbb retq sub mov jge (bad) and and jb (bad) sub mov addr32 iret faddl stc cmc (bad) leaveq sub xchg push jo rex.WRB adc loope (bad) (bad) (bad) add in in jno shll add sub callq push and cmp insl cmp mov retq (bad) repnz stos in cmp pop mov add cs sbb pushfq outsl jnp jae cmp gs (bad) rex.B mov add test rex.B rex.WRB (bad) (bad) (bad) xor fsubl rcll out sub cmp test stc js rex.WRB (bad) cmp push js (bad) movabs or insl xchg xor fnstcw (bad) nop insl adc cmp mov cwtl jmp (bad) (bad) xchg hlt rex.WX pcmpeqb clc out jp mov (bad) (bad) imul or rex.XB adc insl xor and (bad) or xchg cld ficom leaveq ja lock scas adc (bad) rex.WRB fbld fmull frstor jbe (bad) push adc (bad) cmp xor clc adc addr32 sbb fdivrl out test mov sub (bad) cwtl cli pop push (bad) rex.WR scas (bad) cmc cmp add mov sub callq jbe (bad) mov (bad) cmp sbb shrb push add mov jnp add or hlt cs (bad) hlt pop (bad) xor test add push negb or mov (bad) cmp pop movq xor xchg sbb or mov cwtl mov icebp cmc mov sub repnz or (bad) lods out push cmc mov movabs mov incl add pushq and fnsave jo rex.X fs (bad) rex.WRB mov add es sub stos enterq pop sub fcomps (bad) iret xor clc fldt and xor sarl int loop cld movslq sub (bad) imul outsl lods push js push sbbl jp rex.XB mov (bad) stc shrb pop mov xchg callq mov mov (bad) mov xchg fcoml (bad) je adc rex.WR lret enterq push clc lret mov fistl (bad) rex.WB cli mov (bad) rex.WXB (bad) outsb outsl rex.WRB decb and xchg fsubrl or ds mov mov mov push out and (bad) mov mov (bad) outsb stos es pop fidivr sub outsb (bad) cmp (bad) out push ja (bad) sub pop cltd xor mov bnd rex.WRX mov test cmp rex.W popq and fdiv sbb mov push jo jmpq lret test and clc sbb callq adc xchg rex rex.RXB rex.WRXB jp std (bad) sbb (bad) callw adc push clc (bad) leaveq stos push mov push movabs jl or jge outsb and iret (bad) adc push ficompl js adc and popfq rex.R adcb clc and retq xchg push mov mov adc add (bad) (bad) sbb mov add sub (bad) xchg (bad) jg rex.WX fdivrl pop pop (bad) xchg in jb sbb mov (bad) fist addl mov int add fwait jrcxz shlb fldl lods retq cmpsl pop mov pop pop mov (bad) bnd sub adc xor leaveq (bad) mov int3 cmpsb mov pushq repz (bad) (bad) jp fdiv adc add shll loope or retq cmp sarl in mov sub (bad) stos mov adc lea sti sub rex.WRB pop pushfq cld clc rex.RX push jge jge (bad) shll adc orb (bad) lahf (bad) pop clc sbb and rex.WXB in rex.R fs lods sbb (bad) movabs loop rex.XB push sbb movslq test sub mov and xchg xlat mov add adc mov pop pop movsl lods rclb (bad) adc adc outsl jno lea ss ja mov callq mov (bad) neg push adc ja cmovbe fisubrl (bad) test or adc add xchg mov subb out mov stc cmpsb movabs out loope (bad) mov and or adc (bad) adc and rorl push or mov rex.W addr32 (bad) jle fs rex.WXB mov (bad) rex.XB iret sub mov sub clc stc mov adc (bad) movsl imul cmp test (bad) adc fidivl (bad) imull adc leaveq (bad) mov cltd or addr32 add sbb cmp fistl mov ja adc jns pop xchg (bad) in adc mov popfq rex.XB sarb (bad) outsl lods out idivb cmp add (bad) and addr32 test (bad) (bad) rex.R rex.WRB clc adc (bad) sub or adc fsubr or (bad) fs orb jle jg pop jno rex.XB or sub xchg jl push fbld xlat mov sub adc and mov (bad) cld cmc leaveq or int3 rex xchg push rex.X cs clc pop pushfq mov jae maskmovq jo jmp pop adc and jl (bad) fisubrl push mov (bad) or add sub rex.RXB xchg jl adc mov loope and jb push or rex (bad) frstor rcrb and lret xor xchg jae xor adc lcall (bad) in adc xchg lahf mov cmp lahf adc (bad) jno mov fs sti js sub int3 int3 xchg jnp lea jns stos rex.WRB ja push rex sub sub sbb xor mov cmc or jge pushq (bad) rex.XB nop out push (bad) xor (bad) movabs sbb sub (bad) rex.RB xor pop jmpq or jl and int3 xchg imul movslq gs idiv (bad) xchg repnz mov xor (bad) rolb and and rex.RB sahf (bad) jnp (bad) shrl hlt movsl out mov movabs jmp in xchg xchg es or lea mov subl fdivrs (bad) in fmuls rex.WR (bad) mov repnz movsb xorl xlat pop mov (bad) sbb xchg (bad) sub lahf out divb testl sbb jns ficom and jrcxz stos mov cld in (bad) punpckhwd cli or add lock shrb retq lods adc pushq (bad) fimull popfq xchg xor pop cli or cmp fmul jmpq and adc jge (bad) push gs std rex.RB (bad) (bad) rex.WRX add or insb xchg (bad) cmp cld jle int in xor out adc mov fsub sbb mov (bad) (bad) xor xor push (bad) popfq (bad) adc (bad) lock add (bad) (bad) pop cmp pushfq (bad) movabs rcrb jno add roll enterq cs cmc rex.WR rex.WRB sub adc out and xor adc xchg fcoms rcll jae or adc or (bad) retq (bad) insl adc xchg jge mov xchg sbb add jns xor mov mov rex.RB rex.XB (bad) pop shrb mov hlt (bad) leaveq js and cmc fcompl xlat cmp xor rex.WRXB push rex.WRX push hlt testl adc (bad) movsb sub int orl cmp fnsave adc pop (bad) cmc retq adc push xchg scas sub (bad) (bad) mov and (bad) adc fwait pop cmpsl (bad) adc lret test iret (bad) cmp or mov jae (bad) pop push (bad) jmpq and jbe cmc adc incb mov adc adc (bad) movabs (bad) adc ror (bad) (bad) sbb std jl cmpsl mov scas xor clc stc addb rex.XB rex.XB shrl xor adc rex.WRX (bad) js jrcxz fs cmp cs (bad) repz pop and sub (bad) pop rex.WB jg pop sbb (bad) lahf mov sbbb (bad) sbb (bad) pushq adc sub xlat xor (bad) flds sub fisttpl (bad) mov lahf repz (bad) out xchg add (bad) js lahf jno (bad) jne cli rcrl and mov (bad) js mov adc sub add lahf movslq lock loope sbb (bad) mov jmp rex.WRB sbb outsb xchg (bad) repnz je enterq fmull lea clc rex.WRX cs and jb gs and mov fcoml xchg imul cltd add jl adc adc jp adc rex.RXB fisubrl adc lods add in js (bad) sbb push cmp movsb cs and jrcxz out xchg xchg adc jnp and xchg xor fsub rex.WRXB adc mov fstpl lret popfq or jp (bad) rex.RXB sarb mov xlat notb cmpsl add (bad) test or imul imul repz rclb rex lock sub (bad) sub rcr mov jnp xchg ja and rex.RXB mov movabs adc outsl scas and and jmpq insl jbe adc or mov rex.WRX xor xchg mov lock mov add add mov xchg sbb add hlt popfq fbstp jne ja (bad) scas push add mov test lret loope (bad) (bad) mov je (bad) popfq adc and xor in (bad) mov loop stos std and rex.WX sarl jbe loop js sub mov and rex.WR or idivb rcrl test (bad) lahf pop outsb lret imul pop adcl cwtl mov (bad) and xchg (bad) repnz (bad) mov (bad) int3 (bad) sub xchg or pushq (bad) sbb lret add jb repnz movabs adc ds int3 cwtl rex.X icebp (bad) rex.XB movsb pop adc pop rex.X rex.WX push rex.WX sub nop fs xor sub subb orl divb or mov notb push (bad) cmc lahf sbb fwait js movabs rolb callq xchg leaveq (bad) (bad) decl xor (bad) sub jb mov fidivl cmp mov movabs movsl (bad) (bad) jrcxz leaveq rex.WX repnz add add xchg in (bad) mov sub adc add cmp lret pushfq icebp xor fisttpll movslq sub addr32 and ficompl outsl (bad) je mov scas push add cmp mov mov rex.WR jo loopne adc adc in rex.XB (bad) or cmp movabs adc orl (bad) rex.RX rex.R push cmp mov mov (bad) xlat ss cld andl fwait sbb (bad) (bad) mov sti sbb movslq jbe sahf (bad) callq js add jrcxz or (bad) divl or adc test (bad) adc test mov imul or (bad) adc xlat sbb shlb (bad) and mov lea adc or iret xor or cmp (bad) popfq (bad) cmpsl adc loop hlt xchg adc imul xchg xor xchg mov adc lods outsl mov mov jne fcomps movb stc jle add repz rcl pushfq sbb leaveq scas adc mov shl out mov lea rex.RX fs adc hlt rex xchg loope lret sub and adc cltd pop xor cmpsl mov pop adc pushq (bad) sub pop int3 or cmp adc or mov pop mov (bad) retq xchg mov xchg (bad) movabs mov jno rex.XB test sbb or lahf hlt (bad) mov and pop mov retq hlt xor sub ss loopne cmpsb rex.WRX sub ss scas (bad) sub and add movsb (bad) pop jge hlt (bad) (bad) rex.WB movslq add imul rex.WXB xor sarl cmp sub js movabs (bad) sub rex.RX xor int3 fldcw mov xchg rex.R mov sbb mov (bad) jge xor (bad) rex.R xchg xor sub or imul push retq (bad) sbb popfq jo mov push rcll popfq hlt rex.W lock jae je sbb rex.WB xor xlat (bad) and (bad) xor adc orl cwtl push out cmp pop rex.WR leaveq and sarb insl cwtl push repz cmp (bad) rex.WX fwait jno mov sbb or sbb adcb mov add rcr frstor mov xor and pop (bad) (bad) negl clc mov xchg add lods scas push adc and rcll fsubrl and (bad) rex.WRB hlt adc loop outsb lods or fnop and fwait jmpq (bad) xchg mov loopne (bad) adc js adc xchg testb ss (bad) xchg out push jo ficompl add rex.B xchg jae mov mov repz cmp imul xchg (bad) stc faddl (bad) rex.WRB scas out int pop adc (bad) insl jnp mov out sub jno fwait rex.X test callq ja pushq adc xchg icebp out push jmp mov cmpsb icebp xchg (bad) rex.WX cmp mov enterq push mov movabs movslq rex.WRX sub mov and adc push rex.RB fsub int3 (bad) shlb cmp test pop rex.RB rex.WR movabs (bad) cs (bad) (bad) pop callq add add enterq and (bad) push xor xchg push sub jnp rcl (bad) clc pop mov js push insb xchg xchg rex.WXB or cmp enterw pop adc imul rex.WX fisubrl ja in es clc sub fsubl addl (bad) (bad) cmp xchg movslq rex.XB sbb rorb push cmp adc out in pop pop callq bswap cmpsb sbb pushq (bad) mov jrcxz movsb add cs fstpt push sub leaveq sub sub xchg rex.WB mov mov lahf lock and add adc pushq push pop fistp pop clc mov xchg imul jno (bad) movsb callq idivb xchg sub retq pop rex.RXB push lock (bad) cmp sar pop jo push push mov in scas in gs pop and pop lahf std int movsb adc adc clc lods adc rorb rex.WXB rex.WX or rex.WRB pop push adc adc jo sbb shrb add jne movabs add and fist xchg shr sub jbe popq out nop hlt mov std add and repnz push cmc jnp ffree (bad) cmp imul test and lcall rex.RX (bad) mov or sub addl jmp xor adc sbb (bad) fistl jg (bad) jmp enterq xchg xchg scas or (bad) xchg movsb jrcxz fdivs sbb add and add retq (bad) or adc xchg (bad) sub xchg mov jp movsb ja cs and insl xchg xor pop rex.WR xor adc mov ror or movabs xor sub add leaveq je callq (bad) xor (bad) add add insl movabs xchg cmp pushq andb sbb mov and cwtl (bad) sbb enterq imul retq (bad) stos and add movabs (bad) rex.WRX lea adc in push in adc js sub cli stc cmovns popfq rorl (bad) mov movsl or sub movabs cld (bad) (bad) imul int3 jno cmpl movabs lea ror rex.XB rex.W lods sub sbb stos mov jnp and int3 imul pushfq pop clc rclb outsb jle xchg lret xchg out (bad) pop cmpsb jno lea or push xchg fs cmp sbb es xor pushq mov mov and (bad) rex.WRX insb sub and test movabs mov (bad) callq pushq pop (bad) or rcrb mov rex.WRXB lret cld pushq mov rolb fwait mov (bad) mul loope stos adc rex.X in sbb retq xor mov imul mov cmpsl jo (bad) in or fwait or insl pop jno xchg cmp subl lahf pop add adc sub outsl xchg retq (bad) add xor mov xor rex.WRB pushfq movabs stos and push adc mov (bad) in adc js add (bad) (bad) pop (bad) xor cmpb adc jbe jl rcll (bad) mov stc add adc mov jg mov rex.WX adc pop sbb lods iret subl jnp imul sti adc mov fwait imul test xchg or jmp cmc (bad) je int (bad) in mov leaveq mov sbb movabs js jmpq add imul adc lea sub xorl mov or (bad) lret stos mov (bad) pop (bad) mov jne (bad) mov xchg callq repz out push adc outsl add xchg mov (bad) adc retq add iret xor js sub lods stos pop (bad) leaveq sub (bad) div jnp int3 movsl xchg add lods movsl cmp enterq movabs jns or (bad) out adc test scas or int3 mov scas std pop mov mov pop mov mov cmp mov (bad) mov (bad) jo lea retq in lret rcl mov je adc or pop adc cli (bad) enterq push imul sarb (bad) and and loope pushfq movabs pushq idivb and subl jbe (bad) (bad) fildll jnp xor cld and insl rcrb cs rex.WXB iret sub pushq xchg repnz (bad) rex.WRB (bad) (bad) or out (bad) sub mov mov callq hlt rex decb sub mov pop sub mov rex sub rex.WX outsb adc sti push jl clc cltd lret retq rex.WB rex.WXB mov ss adc sub adc rex.WXB bnd or in xchg pop rcll adc lahf mov int3 adc rex.W (bad) lock roll lahf rex.RX stos insb out jo hlt jbe pop (bad) cltd jnp ss sbb int push (bad) mov xor jns fcompl sub cmpsb push insl cltd mov enterq pop and movsl (bad) or push sub js notb jmpq mov xchg pop mov and jb mov callq jbe jmp int cltd rex.XB add outsb mov decl sub data16 mov loop and jl fsubr stos pop js mov rex.WRX rex.XB sbb and icebp out sar push sub rorb mov icebp (bad) (bad) insl add sub (bad) test shlb rex.WX je rex.WXB leaveq fistpll sbb (bad) lock cmp mov and loopne pop lret (bad) test rorl mov mov std rcll mov cmp rex.WX (bad) subl rex.WRX and cmpsl insl adc (bad) mov lret imul cmp sub mov movabs jp (bad) jge (bad) ss (bad) or cs bswap add adc repnz ss scas sbb push mov lea push negb fimull insb (bad) mov fadds repnz rorb sbb xchg (bad) jbe outsb clc add lahf nop or test cld adc fldl jg rex.RB mov adc mov in (bad) adc movabs enterq data16 rex.RXB and jae imul jg xchg notb vpsllw lock out adc sbb cmp (bad) push (bad) test (bad) mov (bad) insl adc fcoml popfq movsb pop sub adc pop rex.R and xor rex.R add fmuls sahf cmp pushq (bad) cwtl lret and jmpq mov or xchg xchg movb adc movabs sub sbb movabs sbb sbb xchg shll add (bad) rex.WRB sarb (bad) lock (bad) jb jns (bad) cmp (bad) fistl cld jl sbb rex.W adc (bad) sub test jg cwtl mov (bad) add add xor (bad) vpsrad movabs addr32 lret sub mov or (bad) pop lods cs rex.RX hlt adc xchg insb pop or loope movabs out xor rclb adc xchg sti jnp test sbb retq adc push ds orb imul (bad) rex.WR jl xchg cmc adc repnz adc sbb (bad) xchg mov lahf (bad) cs add shr and mov and faddp rex.RXB js cli mov (bad) push in mov and adc (bad) cmovg add lea jmp sbb int3 (bad) xchg scas packuswb rclb pushq adc pushq (bad) bnd add rex.WX (bad) hlt sahf sub add movabs loope rex.RB xchg rex.WRXB sub jnp pop mov pop mov lahf movabs pop jge fnop (bad) stc mov fs lea and jne xlat sbb lahf xor lock and pop jno (bad) clc add mov rex.R (bad) sub mov sti sbbl movabs jmpq out retq sti movsb xorl pushq add rex.WXB add out ds sub nop test pop sub stos push adc shll insl sub je loope clc cmc sub adc adc iret imulb clc sbb sub push jno mov pop es repnz retq (bad) mov push sub cmp (bad) rex.RX fcoml mov jb adc imul insl loop cmpsb callq enterq lahf jp xchg push pop (bad) sahf add and (bad) fdivrs (bad) adc (bad) add mov (bad) jbe cltd sti adc lahf cld jmpq (bad) adc xchg (bad) add rex.RXB ficompl pop push movabs (bad) mov pushq or (bad) ss mov test adc cld test int int3 (bad) (bad) clc mov insb or pop and int3 mov adc stos jmpq mov xchg loopne cmpsl out sbb mov sub retq mov outsb fwait xchg mov stos movabs testb adc sub insb push pop sub xchg (bad) retq addr32 fwait cmp xorb xchg js (bad) int xchg movsb andl or rex.WXB add lret (bad) adc cltd (bad) pop adc in or mov or sbb movabs test cmp (bad) add loop cmpsb (bad) rex.WXB sub pop add test nop (bad) xchg adc mov adc movsb cltd jl adc rex.W or xchg (bad) xor cld adc negl lret (bad) adc std (bad) movb movabs or mov rex.XB pop xor (bad) or stos or iret (bad) rex.WRX adc xlat movabs (bad) adc (bad) mov xchg adc popfq adc rex.WR mov adc jrcxz adc sar adc adc rex.WX mov outsl sub xor outsb pop add rcrb rex.RXB adc pop pop cmpsb (bad) xor int3 iret push rclb test push (bad) adc add callq lahf insl (bad) xor sti or sbb lods lahf out pop add (bad) mov cmp (bad) mov pop cld xchg push xchg std fdivrl xor (bad) rex.WXB gs adc pushq adc adc (bad) std jmp adc data16 out outsb (bad) icebp cwtl xor nop pop mov xchg (bad) rex.X pushfq jbe leaveq cltd repnz jno insb in xchg cmp insl outsb sub faddl jg rex.WR push pop xchg (bad) sub push adc scas sub rolb int stc mov je push lods adc pushfq sub (bad) in fs (bad) mov sbb xchg sbb fstp push push es sahf xchg pop lods xor (bad) mov adc and jne (bad) (bad) callq rex.X add sub add or xchg sbb jnp cmp sbb orl add out in mov cmp (bad) jmpq sti fcoms rex.X xchg (bad) push leaveq xchg cmp push pop repz cmp (bad) repnz lahf js jne in clc add and int (bad) pop nop (bad) test frndint add pop rex.WR fwait or jmpq add (bad) outsb and push mov out cmp jp ja popfq sbb (bad) jno lods mov fdivrs shlb cmpsb movabs fs pop fistp sbb pop xorl es mov xchg pop enterq icebp cmc rex.RX mov (bad) xor int3 rex add loope lods iret xor notb adc mov jo fsubr xchg adc or (bad) clc mov mov xor (bad) jl lahf adc cmpsb (bad) (bad) lods cmp and (bad) sub mov (bad) push add icebp adc fsubl (bad) and addr32 xchg adc pop jno or movabs fnstsw jae (bad) sahf out out out xchg pushq mov xchg xchg pop pushq sarb out popfq mov clc sti push cld adc fidiv loope push rex.RX mov push add jne jmp fbld mov adc cmp js xchg (bad) and gs out mov rex.WR callq repnz gs sbb push pop rex.WRX adc hlt jbe leaveq je (bad) sbb cmp subl (bad) (bad) (bad) adc lret add mov rex.RXB (bad) pushq mov (bad) rcrb test imul jns adc movsb xor adc (bad) jae jle outsl repz cs cmp pop (bad) js push pop adc and adc xchg (bad) mov mov lahf xchg adc (bad) adc fimull jno js adc adc pop rex.XB fadds xor scas mov loope retq callq xchg xor mov ljmp pushq fist or mov pushq xchg (bad) cli test adc sub cmc add jrcxz mov stc jno,pt jo rex.XB std leaveq adc fnop pop out or lock fldt (bad) jl (bad) cld push (bad) nop rex.R jmp std sarb repnz and (bad) sub jno push enterq pop out and (bad) stc adc mov mov fdivs (bad) cltd in (bad) cwtl (bad) fwait rex.WB test mov int3 sub and sub push gs (bad) hlt mov fcmovnbe (bad) sub add int3 mov xchg pop sbb pop pop cwtl pop (bad) movabs lcall or cmp (bad) scas cltd (bad) adc icebp cmp fildll jge,pt (bad) and jmpq and mov lock jne rex and mov (bad) sub xor jrcxz mov mov adc sbbl mov leaveq (bad) add insb (bad) mov es mov or xor out callq and adc nopl sub cmpsb lods iret sub (bad) sbb sarb lea jrcxz sbb mov lahf fcomps (bad) retq jle lahf leaveq pop retq cld retq mov enterq push es (bad) pop jno push rex pop mov (bad) fdiv (bad) movslq mov mov and mov mov push enterq insl push xor cmpsb mov jmp mov int3 mov cmp in jmpq sarb pop rex.WRX repnz xchg push (bad) lods (bad) retq xor nop adc lods sub loop stos and cmc divb cmp cmp movabs jb xchg pop adc (bad) and gs out and mov xor jl jns in rex.WRX jl (bad) sub (bad) mov out fldt adc mov pop je lret xchg adc sub shr ds sbb add sub pushq ja xchg jrcxz jne mov shll xchg jbe cmovne (bad) movsl xlat rcrb mov mov jmpq adc (bad) pop jne std lret (bad) retq (bad) pop mov leaveq (bad) jmpq int sub rex.WB negb xor adc and xchg jns sbb mov mov out push in push jbe retq mov loopne xchg test sub mov jle or adc gs push popfq (bad) mov ja cli pop or imul vpmovsxwd jg fldt cmp and xchg xor loope insb movabs pop shlb adc mov in shll or sub pushq sub or jne outsl nop in (bad) sbb adc cs cmp data16 jl mov jno (bad) mov jno push (bad) repz lock sub rcr lret mov testl sub punpckhwd mov sarl rex.RB mov pop or xchg cmpsl sbb push (bad) shlb rex.XB xchg mov (bad) rex.WXB rcrl pop (bad) out repz push xchg callq (bad) pop rex.WRB sub jne push lea mov and mov (bad) mov mov adc stos add jns jmpq rex.WR rex.WB pop or rex.W mov cmp xchg in push test cmc (bad) jmpq addr32 or xor or cmp rex.X in scas sub mov jrcxz rex.R rex.X xchg cmp rex.B repnz rex.RXB retq lock jmp or adc mov mov fninit xchg cmpsb jno rex.WB rex.WRB scas (bad) sbb int3 sbb icebp rex.WRB stos in lret xor movsb scas test cmpsb test pop xchg lock jp mov push and lret imul imul adc adc push xor or dec (bad) retq (bad) (bad) mov cmp in and fs add movabs xchg xor mov jno sub xlat mov mov sahf jns jle mov xor (bad) int3 loope addl pushq out jp insb in rex.WX lock (bad) sub xchg mov sub add jmpq jrcxz and mov jp cld repnz jno outsl (bad) lock icebp rcrl rcl pushq shrl rex.XB scas (bad) icebp fldt or rex.WX rex.RXB mov cmp mov outsb lock mov sbb pop adc (bad) rex.WRXB or out (bad) adc jno fdivs jge jbe push push scas sub mov xchg out jb (bad) fldenv xchg enterq mov lret push sbb sub (bad) fstl (bad) cmp mov cwtl movabs in mov sbb je push in xchg insb sub mov gs negb (bad) xor movsb (bad) mov sbb (bad) adc and (bad) mov jrcxz shrb mov sub imul fstps (bad) (bad) (bad) mov gs in jne lock out and xchg adc adc out mov popfq (bad) and (bad) scas adc sub adc test sub fdivl insb sub movabs xor xchg xchg xchg or jle lret fwait es icebp xchg mov rex.WR add clc fisubl movups fwait push insl fcmovnb adc jle fdivrs in xchg rex.WB (bad) rex.B rex outsb je rex.WRXB stos sub out xchg (bad) xchg push retq (bad) lock in xchg cmp scas mov jge (bad) mov rex.XB andl icebp (bad) mov lods xchg and sub adc fwait lret out vmaskmovdqu and mov lods leaveq je sub mov clc rex.WR rex.WRB push (bad) pop test repz (bad) fmulp or fmuls sbb adc xorb out jmp adc stos outsl movsb adc cmp iret mov rex.XB xchg add cmc data16 or loope (bad) rex.XB (bad) test scas cmp xor add popfq lahf cmp rex.RXB hlt cmp cmp ficomp fiadd pop (bad) (bad) adc xchg cli adc insl mov lods xor (bad) xor shlb cmpsl enterq sbb jo sbb mov loop sbb jrcxz sti callq or out mov retq nop jne mov fidivrl movabs (bad) std (bad) out in fistpl mov sub unpcklps jne sub adc and sub fldl adcl test fdivr mov cmp enterq sub std stc xchg rex.RXB movabs jl mov rex.XB (bad) mov sub adc pushq sub cwtl mov or and (bad) pop (bad) (bad) mov rex.WRB test enterq idivl xchg popq (bad) add cmc adc push or adc movabs fisttpl adc pushfq icebp mov mov add loop adc (bad) out notb xor sarb lock ds outsb cmpsl xchg adc mov add xchg and (bad) lods cli pushq xchg adc and or int push (bad) fcompl mov (bad) fs push push mov adc jl frstor stos jne fistpll (bad) (bad) jge or (bad) xor mov enterq rclb xor or lock xchg xor (bad) mov xchg (bad) and ficom ja pushfq jne (bad) (bad) in xchg xchg mov adc lret ss mov js in (bad) (bad) out (bad) mov or imul sub pop mov (bad) mov callq mov (bad) out mov cmp adc (bad) sub xorl ficomp js cltd divb (bad) rex.WR (bad) jmpq gs sbb jmpq xchg movabs pushq (bad) mov sub rex.RB add xor and rex.RX rex.B outsb lods pop adc and mov (bad) sbb lret es test scas sbb outsl jne add push (bad) gs enterq xorb loop pushfq pop (bad) (bad) (bad) mov enterq movabs pop pop xchg shlb and sub or in loop (bad) rex.R popfq fwait ja add or mov iret fisttp cmp xchg or jne fs addr32 mov retq callq out adc (bad) (bad) and (bad) popfq pushfq rex enterq pop retq rex.WB cs (bad) xor fist mov loopne pop (bad) cmp movabs rex.WR push retq adc icebp (bad) mov (bad) (bad) lods in out xchg or adc js jrcxz (bad) pushq prefetch movabs jno and roll push (bad) jo retq xchg sbb fcoml adc adc clc xchg (bad) sub jg stos popfq sbb cmp xchg fisubrl and fist (bad) push retq add mov (bad) insb and push fwait rex.WRXB mov mov sbb (bad) jmp sub (bad) (bad) or xor mov es rex.X xchg stos sub std (bad) (bad) sarl fwait movabs movabs adc add push jmp (bad) movslq fdivr push fwait jno sbb leaveq idivb (bad) int3 rex.WXB lahf xor scas jno out repnz pushq jns es xchg mov rex.R add enterq movabs xchg xor sti add (bad) test rex.XB jnp andl (bad) lock icebp mov and pop push sub insb jbe jns rex.B leaveq and cmp (bad) gs xor (bad) rex.WRX add rex.X std and imul jns fwait (bad) mov add add mov jp add and retq movabs mov fidiv stos negb add mov sub push rex pop sbb out loopne imul pushq (bad) (bad) or out (bad) mov movsl nop (bad) (bad) mov xor (bad) (bad) fsubs movabs adcl and jg mull adc xor rcrl pushq mov (bad) and (bad) sub movb xchg mov cmp js pop and jb ficoml mov int cmc (bad) pushq rclb (bad) xor jb movabs mov pop cmp adcb jb jns mov (bad) in mov add fldenv push fidivr (bad) fdivs clc (bad) mov mov (bad) jl adc mov insl hlt xorb callq (bad) jmp lea jg add movabs popfq pop xchg pop fnsave leaveq insb mov movabs rex.R cmpsl movslq (bad) jo rex.WRXB stos sahf xchg pushq mov jl xor in adc mov jno (bad) stos jae add pop cmp rex.X mov in (bad) fwait and lea jb and imul jmp bndldx (bad) jrcxz fnsave ds ss xor push in or fbstp rex.WRX (bad) mov int3 in mov cmpsl and sbb retq sub in sbb clc test jge retq int3 and movsb adc mov or (bad) cwtl push (bad) cmp loope int sbb rex.WX scas mov clc xchg int lea movabs jne mov lods (bad) sbb adc retq repz fstl rex.B int3 lea callq movabs pop (bad) out icebp adc rex.W repz adc out rex.RX pop pushq lret mov and or in xchg xorb (bad) (bad) shlb push sarl movslq rex.WRX sbb es mov (bad) jge (bad) adc (bad) or (bad) rex.RB lock (bad) sbb scas cmpsl (bad) fldt sub jp adc (bad) jno (bad) rorl lcall insb mov xchg add sbb movslq jne mov add lret ja sub add mov and xchg jno xchg pop ds pushfq jmp ja insb xor (bad) popfq jp (bad) lahf xor fs cmpsb xchg adc bts sbb xchg mov test xchg mov callq or mov adc ficomp adc (bad) sub repnz xchg pop mov sub (bad) mov cmp push push add mov (bad) (bad) fisub add (bad) fistp xchg push testb mov adc jg jb clc rex.X (bad) rex.WX rex.WR cwtl adc (bad) add (bad) movabs lahf jmp push jbe rex.B rex.WX sbb (bad) xchg (bad) (bad) pushfq adc mov mov in sbb adc sub lods (bad) pushq adc lsl cmp (bad) push jno jl sbb pop imul jae mov adc je xchg movabs stos jp rcll movslq push cmp jmp imul stos sysexit adc outsb xchg repz rex.WB xchg rex.WRX add callq (bad) insl mov fcmovnb and mov push push adc insb push push fcoms je push insl mov imull js scas rex.XB ja sbb jne scas rex.WR scas (bad) pushfq add (bad) data16 clc rex.WRB (bad) push (bad) or lods and loopne xchg jge rex.RXB rex.RB xchg adc cltd sbb callq cli cmp push shrb jmpq xchg xor (bad) rcll (bad) flds (bad) cmpsb sub push jbe (bad) leaveq (bad) pushfq rex.WX out mov cltd cmpsl jg adc xor adc cmp xor fldcw fwait movntps pop adc jle (bad) cmpsl adc (bad) and unpckhps jbe (bad) test (bad) (bad) adc or stos addr32 gs movabs add pop mov pushfq movabs cmpb rex.RB rex.X add lock test imul fadd sub repnz movabs xchg (bad) cmpsl push iret movabs xchg (bad) xlat (bad) cmp ja and loop jno xor (bad) repnz sub std rex.X js mov (bad) andb xchg callq js and add rcll fsubrs (bad) es or push je xlat xor or nop (bad) rex.WR adc ja sub sbb mov push mov pushq in sub retq push stos mov test es push mov xchg rex.R jp jrcxz rcll or and imul (bad) rex fwait adc rex.RB rcll adc repz cmp in insl fcoms pushfq xchg ror repnz movabs sbb movsb test rex.WB rex.B rex.WXB (bad) and push push addb sub pushfq stc add xchg pushfq (bad) sub loopne pop cmp (bad) jl out (bad) int3 jno add cmp mov jnp jae add mov gs and mov movsl jp rex.XB (bad) (bad) push (bad) stos pushfq fwait mov stos sub mov rex.WXB rex.X in (bad) fistpll add jo mov iret or repnz shll andb (bad) js out push insb or test nop sti js cmp xlat cli add in in adc xchg sbb add sti iret rex.WRX clc jmpq mov jnp push xor cmp rex.W cmc jp sub adc rex.WXB ficom mov stc jnp int and fmull jae cli xchg push fdivrs (bad) mov add xchg (bad) xchg xchg xchg push or jl sub add pop sbb jbe (bad) jl ss rex.WXB insl (bad) mov nop imul xchg sbb lods out retq xchg out mulb (bad) test add mov callq imul std and pop repz nop adc mov xchg fs (bad) imul and movsl and cmc adc xor xchg mov jne notb lahf cmp mov xor (bad) adc cmpsb cmp (bad) (bad) pushq (bad) xor pop rolb adc lock incb cmpsl adc out scas push movabs je clc mov orl retq xchg (bad) pop lods or mov xchg fmull mov xchg out leaveq scas add mov pop and stos push and out or mov std fmull in cld ds movslq xlat and movabs or lods cmp jno outsb jae jae (bad) fadds rex.R or movabs stos and and out (bad) retq hlt movabs lock jge mov and push adc cmpsb jmp sub push scas leaveq rex.WX cmp (bad) jmpq imulb xchg (bad) outsl out fstl sub rex.W sub cmp repnz js adc xchg xchg rex.WRX fildl xchg movsb xchg repnz sbb jb rex.RX fsub rex.RB jbe rex xor or and retq xchg pop stc cltd (bad) and test cmc xchg adc movsb xor cltd (bad) movabs loop fsubl rex.B xchg push mov movsb (bad) (bad) rex.W xor mov adc retq in jbe jl out sbb cmc (bad) jrcxz and cltd (bad) xor adc jno (bad) cwtl fdivrl and (bad) mov es mov pop adc rex.B std (bad) add lea sar (bad) mov in xchg sbb rex.R add callq rex.B mov shlb adc lods in scas out clc sub (bad) int clc and adc outsl jns pushfq mov outsb icebp xchg xchg loop lahf xchg rex.WRXB adc push js (bad) jae xchg insb jb push add rcrb or rex.WRB (bad) notb (bad) cltd fnsave je (bad) pop fistp in mov xchg pushq push push mov (bad) rex.WRX xchg mull xlat cmp test cmpb fwait adc lods push or and rex.XB stos movsb or cmp push adc rex.W test stos mov mov xchg pop jo (bad) adc (bad) fwait nop sub mov push mov xorb test adc and rex.WRXB sbb rex.R adc rex.RB (bad) fwait callq xor movabs jno cmpsl fadds in pop and (bad) or mov icebp adc clc clc rex pop jmp data16 mov jo xchg movabs pop je fsub fsts rex pop rex.WRX int3 fisub rex.WRX incl sbb out jmp callq mov cmp fstpl and out rex.XB icebp adc (bad) lret imul push xchg jge test push xlat (bad) (bad) jae lret push xchg rex.WRX (bad) mov lock rex.X rex.RB lea jno fisubr (bad) cmp int cld or mov callq cmp repnz fadd mov fadd std fs leaveq sahf mov jns fadd movabs stos lret push mov and add adc (bad) xor (bad) ja jae shrb out sub and adc rex.WR ror cmp xchg mov or mov adc xchg std (bad) fimull (bad) hlt adc jmpq movabs cmp sbb pushfq xlat fildll notb mov push movabs pushq fisttpll or ss je rex pop cmc sbb sub callq movsb adc stc rex.XB adc mov pop mov jb rex.WX fwait orl cld and rex.RX shlb and orl sbb out xchg loope cmp push and rex.WB movsb loop,pn scas rex.RB sbb retq mov (bad) shlb (bad) xchg movabs xchg add mov fisttp (bad) (bad) enterq sbb loop or pop xchg out or (bad) and lods pushq fsubrl adc jg cmp mov (bad) (bad) (bad) mov hlt (bad) fsubrp fbld adc pop retq adc cmp rclb mov xor and jbe mov push shrl (bad) pop scas (bad) push ds mov xchg rex.WRX and xchg stc add pop adc cwtl outsl xor sahf xor (bad) in push ficoml rex.WR mov add (bad) je (bad) mov in emms push loope add rex.WXB je insl (bad) or and xor xlat (bad) add flds adc pop or (bad) rex.WR fdivrs retq fcmovb cmc cld hlt mov callq test sbb adc xor or imul in pop rex.RXB xor int3 clc push jo pop fbld add (bad) mov enterq pop lahf (bad) (bad) push (bad) js (bad) xor sbb movabs fcmovnu sub (bad) cmpsb callq pop fnstsw ds (bad) or jb (bad) cmc jl add (bad) (bad) adc add xchg (bad) push jbe scas adc jrcxz xor clc hlt xor mov (bad) adc (bad) push stos stos sbb lock mov jo xchg add add pushq xor adc mov adc lret fwait adc add ss scas add fldcw (bad) movabs pop sub cltd data16 mov (bad) add movsl (bad) addr32 leaveq jo repz movabs lret fwait cmpl (bad) mov (bad) fldcw jbe and add push jns fnstsw (bad) outsb mov cmp jle xchg js rex.WRB jg xchg rex.WRX shll (bad) mov (bad) lret setae cltd mov fidivr sarb (bad) in mov pop out jmp pop cwtl cli test movabs sbb push insb add mov pop sbb push repnz xor fcoms cmc xor loope rex.RB add (bad) divl mov test in (bad) sub push add and rex.WRX rex.RX jg fdivrl test movsl jo repnz pushq mov or (bad) xchg adc (bad) ja and rex.WR std cmpsb mov rex.WR es iret cmp adc callq fs (bad) sarb mov add mov xor imul and retq (bad) rex.WXB hlt je pop sti sub scas pop enterq xor xchg fs and rex.X fwait cmp jge retq rex.XB adc jrcxz test movsb or (bad) movabs clc js adc xchg xchg jbe mov sub (bad) (bad) push mov adc sbb movl jle jb add add adc mov pop adc pop cmp xor push cmpsl pop movsb cmp adc fnstsw adc mov mov ds popq and sbb xchg sbb ss rex.WXB xchg adc cmc rex.XB (bad) loop add mov mov sahf ss or (bad) xchg adc cli mov pop callq rex.WX ja addr32 imul pop push je or pushfq xchg cs push cwtl push popfq sbb sbb in push pop rex.WRXB or jrcxz mov jg cs fwait out adc shll rclb stc (bad) repnz rex.RX sbb test callq adc repnz mov xchg lret (bad) and mov jns jae outsl or push imul (bad) mov xor insb fs shlb sub rex.X xchg (bad) (bad) mov add imul repz fimull std sar andb int sbb (bad) xchg cld enterq ja xor insb pop xor (bad) fs std scas xchg sbb (bad) pop xchg xor cmpsl sahf mov sub movsl mov rex.WRX add hlt fwait pushq std fbld cs je mov mov rex.WR mov (bad) testl lret adc adc in lea adc sbb add cmp sbb imul push adc pop (bad) (bad) mov lock ficomp add rex.W xor adc cld jg cmp jmpq jle push (bad) lock rex.R es rex.XB push adc insl (bad) jb fsub rex.RX mov (bad) sbb int test enterq mov mov pushfq xchg adc and data16 xchg mov (bad) xchg lret add sbb outsl adc lcall pushq and xchg mov pop pop lock (bad) (bad) jp cmpsb mov (bad) enterq or in or sub xchg stos rex.WR or jmp int push jge rex.RXB clc mov xchg ficom xor (bad) rol (bad) std (bad) (bad) lock xchg xlat jrcxz rex.RB mov xchg je lahf xor jnp sub shr insb xchg xchg repnz cmpsl add subl rex.RX cmp add je adcb pushq cltd out adc callq xchg or sub sbb jp sbb (bad) callq mov mov (bad) leaveq jmp jne retq push notb and negb (bad) loope pop js sbb fwait sub xchg movsb fidivr cmp (bad) cmp sub add rex.RX int shr clc sbb (bad) (bad) jge xchg xchg lea (bad) rex.RXB out cs push and rex.WRX mul fiadd add cmp mov jl and add hlt (bad) add pushq leaveq mov lock addr32 icebp lret icebp (bad) xchg push rex.R lea cmp jbe scas test or or rex.RXB mov adc lret sub push (bad) sahf cwtl rex.X jb push and mov (bad) sbb (bad) sbb cmpsb sbb mov cmp in out mov and adcl test (bad) clc in add (bad) cmc sahf cmp movabs (bad) rex.R mov adc movabs loope cmc imul (bad) imul loope test (bad) or sub movslq adc xchg (bad) adc and (bad) jo adc (bad) test roll adc jne mov or cwtl cltd or cs cmp test push (bad) div jmp mov or mov clc adc rex.WR std xchg adc fyl2xp1 fwait movabs (bad) xchg (bad) jo and cld mov jrcxz movabs mulb push std (bad) rclb negb repz cmp or jl test rex.X (bad) rex lret and shlb movsl repnz adc sbb (bad) pushq stos (bad) stc fcmovbe loopne outsl xchg in (bad) jp push (bad) cmp sbb icebp adcl test adc out xchg scas callq push push pushfq movsb cwtl or sub movabs (bad) cld rex.WB add jne xor gs movsl fs cltd jmp adc js fmuls adc cmp loope (bad) test adc mov xlat in pop (bad) jrcxz rex.RXB adcl mov or ja adc (bad) (bad) scas rclb cmc push add or xchg adc jne rex.WRXB lods test cli (bad) pop adc (bad) (bad) (bad) adc movabs xchg fcoml js or mul adc and int3 adcl xor mov movsb clc (bad) scas (bad) and adc (bad) mov jb movsl sahf xor loope (bad) rex.WR in int mov cmp (bad) outsl sti rex.RX (bad) rex.WRXB sbb movslq lock sti mov (bad) fistp out push (bad) mov adcl sub test movsl js mov adc or xchg or or leaveq (bad) and (bad) xor icebp (bad) iret int fist or (bad) adc or and add stc sbb xchg cmc movabs out (bad) adcl iret xlat icebp adc nop (bad) movsl retq (bad) adc movslq or mov repnz sub xchg (bad) cmpsb (bad) adc cmpsl pushq adc xchg cmp sub out (bad) in test adc xor movsl sub adc retq (bad) mov cwtl int je rex add mov jbe mov mov jns lock (bad) adc or insl mov cwtl cwtl or push out fmuls xchg push (bad) repz jg clc push mov lods cld pop clc jns jo xor js mov movabs out loopne insl popfq adc fwait (bad) pop and stos add fnstcw or int (bad) fild popfq (bad) sar mov adc push mov xor cmpsl xchg fadds adc (bad) cmp fs (bad) adc rex.WRX rex.WXB mov xchg mov xchg sahf jmp icebp mov xor lret jl js jmpq (bad) and adc (bad) xchg (bad) retq jne rex repz sub (bad) jmp mov mov int3 imul fiaddl cmp xchg sub jns leaveq or push (bad) js adc xchg jle push repz adc mov or fs fstpt xchg pop retq jns sub (bad) (bad) mov sbb fcmovu fisttp add adc jl rex and fist jns jo mov rex.W sub xor push xchg rex.RX (bad) movabs rex.WRB xor jge xchg (bad) cltd in movslq jmp lret add js nop (bad) (bad) movslq (bad) sbb cmp xchg mov (bad) or data16 jmpq hlt fisttpll rex.WXB rex.RXB rex.XB or jns sub (bad) rex.WX insl adc cmp int3 in jns xchg add adc lahf repz fsubr push movsb (bad) jae movabs xor idivl push div callq fmuls xchg loop (bad) rclb jl pop adc add loopne xor jns adc movabs xor std xor adc mov cmpb mov rex.RXB pushfq cmp xor lea jle imul sub out mov loop rolb lods jns push mov cmp adc (bad) (bad) adc ss add adc mov clc (bad) jns pop movsb xchg movsl cmp lock add fstpl mov or mov xchg jns repnz xchg adc ja (bad) push pushfq pushfq (bad) xchg (bad) movabs xor js leaveq (bad) cli xchg xchg and adc adc sbb rex.XB fidivrl rex.X mov cmp lock sarl mov and sub (bad) xor sbb andl rex test adc loopne xor (bad) sbb cmc movabs cmp shl rex.WX mov popfq add and and sbb (bad) (bad) adc adc xchg cwtl out xchg mov push jns fcmove shl rex.R rex.X xlat jns stc and js mov mov adc testb fstl out fdiv out lahf mov jl lock add jno (bad) adc xchg fwait mov (bad) scas hlt (bad) (bad) fcomi rex (bad) adc cld adc rex.RB xchg add jns xchg fidivr es mov (bad) test (bad) fnstsw (bad) sub movabs adc sbb (bad) push pop (bad) negl stc sar loop mov sar (bad) adc cs test sbb in cmp xchg lret add in and fiadd mov add xor sub adc rex.WB push or rex.WRXB (bad) rex.RX movabs xchg rex.X std notb push cmpsb notl jbe rorb cld adc or nop fstl pop add es (bad) mov add push pushfq sub adc cwtl xchg adc fnop add sti (bad) cmp mov hlt or cwtl rex.X xor int (bad) movabs or ds mov (bad) jns jae stc (bad) decb lock sub adc xchg xchg rex.X xlat adc sbbb int3 icebp ror imulb xchg (bad) (bad) fs (bad) adc add xlat cmpsb jns add (bad) (bad) fucom jrcxz fcompl cmp imul cmpsb add or repnz sub (bad) jns add (bad) add fcoml enterq data16 rex.RB mov hlt (bad) js insb push push jns movabs adc addr32 hlt movabs and iret (bad) jns callq and adc cmpsl (bad) push adc movabs retq retq adc sub cmp vpaddsw imul cmp nop pop (bad) (bad) ja scas jnp (bad) adc adc in jl (bad) nop add rex.WRXB rex repz xor xchg es (bad) jae xchg or test pushfq xchg mov cmp (bad) insl ss adc scas add clc push xor xor mov int3 (bad) popfq test leaveq loopne insl or add push mov data16 fnstenv add adc stos addb fsubr adc mov jge out jne jns rex.RXB adc not cmpsb adc cmpsb sub out add sbb add jle pop jl jns mov rorl sub fbstp (bad) xchg adc shr add cmp and and fiaddl jmpq fiadd mov int3 sti or imull (bad) xor sahf pop rex.WRB cmp or jge mov jge or pushq shrl mulb movsb movabs cmc adc popfq and test out or (bad) and (bad) (bad) mov lock in cmpl sbb sbb xor int3 stos rex.XB hlt shrb push xchg push cmc xor cmpsl (bad) out (bad) fisttp fist or or sub fisttpll and rex.X fisubr movabs xchg cwtd jmpq jne adc shr bts sub sub mov shr bt seta add jns ror bt test mov cmc test jno je stc cmp cmp cmc sub jmpq jmpq jmpq rex.RXB (bad) and mov int3 sti fwait xor int insb int3 mov movabs xchg pop (bad) mov in pushfq mov int movsl sbb xchg xor pop jne retq sub pushq pop test xchg ja (bad) sti test mov mov sti (bad) lcall (bad) (bad) push jl es lahf imull sbb xchg jns repnz add jae push push ss cmp add movslq (bad) (bad) rex.R or ds jle rcr mov lret cmpsl rex.RB adc fcompl (bad) pop xchg pop sahf gs rex.WXB fwait push stc jmpq (bad) and xor mov test (bad) (bad) pop fsub jrcxz out test jmpq cmp ds and cmpsb out fdivl rex.X and xor lods mov sbb cmpsb test sti fidivl (bad) (bad) sahf sub rex.WX adc retq pushq xchg xor jp xor rex.RX or pushq (bad) jg mov jbe std (bad) lcall scas loopne ds or maskmovq mull in pop movsb (bad) lea mov xor retq cmp mov (bad) jb xor data16 (bad) or mov push xor sub pushq rorb callq rex.X xor rorb adc cmp mov rorl xor in iret icebp out (bad) (bad) (bad) sub stc add bt clc cmpb jmpq pop (bad) adc and rcrb rex.WRX and fnstsw and out sahf mov rex.WR jnp jno (bad) (bad) (bad) or outsl vshufps sbb int3 mov lahf fwait rolb (bad) (bad) rex.RX (bad) jbe pushq testl fbstp int3 (bad) (bad) and js adc lea (bad) fiadd rex.WRB xchg push cmpsb mov andl cld (bad) lcall test (bad) lcall mov (bad) gs (bad) or fs rex.XB (bad) mov (bad) in lods jl or mov or xor rex.X movsw enterq pop clc imul mov jo push xchg (bad) sub jbe (bad) jns icebp movabs sub fnstsw jno mov xor fwait mov rex.RXB xchg (bad) rex.RX (bad) jle (bad) hlt xchg xor adc pop test callq or cltd repnz (bad) (bad) (bad) fbstp jle fstl divb lahf std rex.RB rex.WXB rex.WRX xchg rex.RX (bad) (bad) xor pop mov xchg push cwtl mov js imul popq jb enterq popfq sahf rex.X jae mov hlt int3 fwait or gs add cmp cmp cltd sub (bad) add sti xor xchg data16 fsubrl shl xchg (bad) (bad) mov cmp imul jmp (bad) (bad) mov (bad) mov and jg fisubr mov adcb (bad) repnz adc cmpsl and mov hlt fistpll jp in jle (bad) (bad) sahf sub (bad) xlat push (bad) (bad) (bad) (bad) ljmp mov (bad) mov jne loop rex.WB (bad) (bad) ljmp xchg lcall icebp movsb cvtdq2ps (bad) stos clc or rex.WRXB jle (bad) mov mov mov loop or and rex.B (bad) mov repz clc pop mov xchg add sarl mov scas pop fsin pushfq rex.RX (bad) mov push (bad) cld insl int pop movabs rex.WXB or or xchg sahf (bad) and (bad) push cltd loope sub repnz jmpq jmpq jae cmp clc cmc clc cmp jmpq jmpq jmpq callq stc bt clc clc or jmpq callq jmpq cmc clc cmp test jmpq cmp clc cmp jmpq xchg imul rex.WX movsb int3 (bad) fistpll (bad) ds cmp or and jnp out sbb sar mov mov add test mov rex.RX (bad) (bad) lcall (bad) int3 xor xchg jno (bad) sbb xchg mov mov (bad) callq scas adc cwtl mov sbb int3 cmc imul mov cmpsb movsb add and jae or imul or std (bad) lcall (bad) std cmp cld (bad) lcall imul sub (bad) popfq rex.RX jmp or pop pop mov stc mov jnp ficoml ss push or jmpq loop mov rex.W xor xor rep cmp jmp lods jb cltd rex.R (bad) lods test scas jbe push (bad) in addr32 cmp cli xchg add mov push jbe adc orl test es xor push je sti sbb and js iret (bad) mov pop cwtl mov jmp (bad) rex.WRX (bad) adc repz nop push (bad) cmpsb sbb (bad) lcall and (bad) sub lea cmp cmp lcall cli (bad) imul pop addl mov in sbb sbb lock pushq js jbe (bad) adc jae pop xchg adc rcll cmpsb jbe xor xchg pop xor cmp imul (bad) jae sub mov fucom dec rex.WR jnp out es imull jno jnp (bad) leaveq xchg lret pop cli mov (bad) shrl mov rcll lret pop insb je retq movabs cwtl rex (bad) pop xchg sub movabs pop not bswap jmpq push rex.W rex.RB rex.WR xor cs insb add rex.RXB and stos (bad) lret loop callq jp stc cltd xor rex.RX add jmpq out cmp sub rex.WX adc fbld mov pushq rex.WB or mov jg movslq adc stc jno ds cld (bad) (bad) (bad) rex.WX or xor pushq addr32 movabs test push or and jg mov fidivrl jb and enterq cmp xchg push rex.WX xor jne vfnmadd132sd fstpl mov jbe (bad) rex.RX adc sbb popfq in cmp add xchg stos (bad) adc je out jle (bad) sbb rex.W jmpq jae jmpq pushq jmpq jmpq jmpq jb cmc clc cmc jmpq bt repnz jmpq ja adc cmc and sub xor add mov bsr mov add rcr jmpq enterq rex.WRB rex.WR and stc mov cmp imul mov xchg repz insl mov adcb (bad) scas ss scas fwait out cs pop jo push mov cmp lcall rorb rex.RXB rex.RB sbb xchg xchg (bad) sbb pop add (bad) lcall subl sti (bad) lcall (bad) movb jmp and mov jno sub outsb sbb pushq fcmovne ss jno jp add push xchg loop sahf ds repz jb mov nop push xchg pushfq rex.WX rex.X callq rcl (bad) or loopne (bad) jbe rex.R pop mov (bad) outsb and jns negl divl mulb and xchg mov pop jb jnp push cmp sbb (bad) mov cmp mov in test sbb (bad) pop mov lea fwait cmp movabs ds cld (bad) (bad) mov lock rex.WRX sahf scas rex.W xor (bad) lcall xor lea movsl lods add mov mov rex.WRXB jo xchg jno xchg movsl xorl andb fisttp xchg pop (bad) (bad) mov (bad) out xchg imul rex.RX jl xchg push sbb push sahf fidivr mov movabs adc lcall mov fnstsw mov push jp rcrl decl (bad) lahf jg rex.WRX stos (bad) orl movabs andl or cwtl js cmp xlat std std (bad) lcall cmp jb cmp xor or jo cmpsl push lret int cld (bad) lcall (bad) xchg lods sti sar (bad) lcall loop btc js test (bad) adc in sbb add or cmp pop (bad) fwait (bad) rex adc movabs xchg (bad) stc mov (bad) mov sub rcl sub stos fmuls es jp loop fadds movabs sbb adc mov (bad) stc cmp sub bt test cmp jmpq xchg int3 jl push and fsubr movabs int cmp movslq in outsl cmpsl data16 jmpq (bad) imul (bad) or push sti fimull sub scas jge insl sub sbb jg (bad) (bad) (bad) mov or mov stc rex.WB (bad) mov cmp add (bad) adcl lcall pushfq movslq (bad) push (bad) ja pop rcrb jp scas rex.RXB (bad) gs cmpsb rex.WRX mov (bad) pop rex.WRX xchg xor mov jae (bad) in cmp ud2 pop cli fldenv sub mov (bad) jo (bad) data16 add or cmp xchg stos rex.XB ficomp loop mov xchg rex or mov movzbl movsbw movsbl mov pop retq je cmc bt sub jmpq jmpq stc jmpq cmpsb push sti gs and pop outsb (bad) test movabs popfq jne je sbb (bad) imull lea imul icebp cs js rcll shll adc add fist pop rex.WX (bad) (bad) (bad) fild cltd (bad) push jg (bad) jl rex.RXB (bad) (bad) mov mov (bad) (bad) mov pushq lea xor loop cmp adcl (bad) xor rex.RX or xchg movabs fmuls out (bad) (bad) xor vpor (bad) ja jge pushfq (bad) imul test data16 movsl cli pushq addr32 icebp pushfq cld mov int3 and movslq rex.X push in cmp push sbb jl lods sub lea out test add sbb enterq pushq movsl xor (bad) mov movabs rex.WRB xchg push xor mov addb ss jne xlat xchg sub (bad) (bad) mov retq ja rex.WXB pushq and mov (bad) out pop rex.B (bad) (bad) mov xchg sti (bad) lcall mov nop xor mov and or addb and sbb add xor push rex.WRB retq scas jge jnp or rex.WRX xor sbb movabs cmp rcl mov and (bad) (bad) xlat adc jmpq sub out and leaveq jmpq test stc test jmpq jmpq repnz jmpq pop fisubr push and rol (bad) insb lods pop mov jno loopne pop outsb (bad) lahf movl rex mov loopne fistpll sub pop repz rcrl (bad) cmpsl outsl mov cmpsl out int out and lcall roll (bad) mov (bad) mov mov (bad) outsl pop rex.B xchg jae pop push mov lea jo xchg (bad) lcall fdivr (bad) lcall movabs add cs cmp loope sbb jmp pop (bad) (bad) (bad) mov (bad) and movabs jmpq rex.XB xchg rex.WB or cwtl and loope xor push in and loope movabs addr32 mov rex.RX xchg out pop cld cmp sub bt jmpq bsf rol bt ror mov cmc clc cmp and jmpq movsbw not mov jmpq jmpq jae shrd not rcr sar mov inc neg btc rcr mov seta stc shl mov cmc cmc xor cmp repnz jmpq bt cmc cmc sub cmp clc clc cmp cmp jmpq and add add add adc (bad) fistl cli ja add (bad) add adc add adc add add addb add add add imul add add add adc add add add adc add mov add add adc add add add (bad) adc add sub add add add add add adc add adc add add fildll add mov adc add test xor add fldenv jmpq cmp push xor mov lea test add shrd sub mov not mov lea jmpq callq jmpq add add add fldenv add push add add test fsubrs lock or and cmp (bad) stos pushq stos nop stos shrb stos clc stos add sbb stos push stos add add pop add add test test test cmp pushq test mov test or cmp fsubrs lock clc stos add lods and lods lods rex.W add add add add stos callq stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs lods enterq fsubrs lods clc lods add sbb xor lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs scas enterq fsubrs add add add movsl rex push movsl (bad) movsl jo andb movsl shlb movsl add xor (bad) cmpsb jo andb cmpsb shlb cmpsb add xor (bad) cmpsl jo andb cmpsl shlb cmpsl add xor (bad) test test test test test test test test test test test xor (bad) test nop test shrb test and push stos (bad) stos jo subb stos add sbb xor stos push stos pop stos (bad) stos pushq stos subb stos test mov mov stos loopne callq stos add lods sub lods rex.W push lods js subb add add movsb test mov mov movsb shlb movsb lock clc movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb movsl movabs movsl enterq fsubs lock clc movsl add sbb xor rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb cmpsl movabs cmpsl enterq fsubs lock clc cmpsl add sbb xor rex.W test test test test stos mov stos loopne add rex add push stos (bad) stos pushq stos subb stos movabs stos enterq fsubrs lock clc stos add sbb xor stos push stos pop stos (bad) stos pushq stos nop stos cwtl stos movabs stos enterq fsubrs lock clc stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs addb test mov lods callq lods sbb add (bad) add add add movsb enterq test rolb add movabs mov movabs clc movabs and push movabs add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs scas enterq fsubrs lock clc scas add sbb xor scas push scas pushq scas subb scas movabs scas enterq fsubrs lock clc scas add add (bad) add add add movabs sub movabs pushq movabs movabs movabs callq movabs xor pop movabs andb movabs and movsb callq movsl xor movsq push movsl (bad) movsl add rex rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb stos lock clc stos add lods and lods lods rex.W (bad) lods pushq add lock add add lock add sbb add add sbb xor add add or sub add andb movabs movabs movsl test fsubs push cmpsb add or or add outsl movabs add subl add out movsl mov add or add fsubs rclb push neg shr push bts movsbl push bsf push sar sar xor mov cmc add mov neg mov dec clc xor mov mov xchg lods rol rcr rcl ror jmpq jmpq clc cmp jmpq jmpq jne cmp movb jmpq adc jmpq jmpq sub shld rcl shrd bswap mov stc cmc sub stc pushq clc test clc test cmp jmpq je stc cmc bt clc sub jmpq stc push rex.W mulb mov add mov jmpq jne sar shr xor bswap jmpq stos jmpq pop cmpsb jmp pop and jno mov in (bad) xor xchg cmc movsl fs (bad) out mov insl pushfq and sarb out and movabs orl fwait (bad) (bad) lcall cs rex.WRB loopne add (bad) (bad) je mov pop xor test add cmpsb in int3 rex.WR (bad) imul (bad) mov sti (bad) lcall xchg cs leaveq je repz repnz jnp sub xor rorl lea add cmp scas ss int3 push shld adc mov imul adc movabs cmpsl mov rcll jmp cmp (bad) xchg push mov int rex.WXB (bad) int3 movabs lock jmpq mov (bad) stc pop and and and or vhaddpd sub xchg or mov add movslq adc sub pop lret add rex.WRX sub jae (bad) mov addr32 loop jmpq (bad) (bad) rex.W out or (bad) (bad) fbstp cmp scas in repz mov mov pushq repz jle mov mov push je jb push scas xchg (bad) repnz int xor repnz ss sbb loope rex mov ds mov pop fisttp sub xor lock xchg (bad) (bad) push lock cs xchg test jo xchg lock fs setg idiv pushfq mull sub test ja ss imul callq clc js iret mov pop mov jo sahf pop sub (bad) scas lahf rcr adc (bad) lcall insb cld (bad) (bad) mov mov cmp mov lret test in rex.RB sar mov (bad) (bad) fildll jb repz negl rex.RXB jrcxz mov (bad) addr32 test addr32 add lods hlt xor sub cmpsb test jnp fldenv int3 sub movabs fcoml lcall leaveq sarl (bad) and movsl movsb movslq scas ds pop jo mov and mov jmpq push jns clc (bad) cmpsl (bad) hlt mov movsb int3 stos adc fldcw movabs xchg sub xchg cmp add pushq pushq fisubrl data16 adc mov sub jg in rex.XB sub push add cli and pushfq rex.RX std (bad) lcall insl loopne sub (bad) lcall movabs (bad) sarl jo std jrcxz jne sti push xchg cld fisttpl mov pop push lret cmp vptestnmq mov (bad) sbb in (bad) mov je sbb (bad) scas rex.WRXB add pop mov std rex.RB and cmpsl sahf jbe xor sub (bad) sub mov adc retq callq stc jmpq jmpq adc movabs movsl fs repnz xor sub or sub and fcomi jp (bad) je (bad) scas lock retq xchg adc andl or movaps (bad) (bad) jg rex.WX movabs insl sub xchg or rcll xchg jmp (bad) (bad) (bad) loop rex.XB rex (bad) lcall cmp or push (bad) in in and add lods xor pop test imul fisttp clc test push (bad) (bad) (bad) sub pop ficoml pushq in cmp push cltd rex.WB (bad) and jl (bad) mov (bad) ja popfq int3 adc push (bad) pop adc jg data16 rcrb cwtl mov (bad) loopne mov mov and scas jns push xchg jl (bad) outsl ja gs stc (bad) fimull vmwrite mov js stos cs cmc rex.RB rex.XB push hlt cmp or and rex.WRXB rex.WX xor cli adc pop outsl ljmp subb or (bad) int scas mov (bad) scas (bad) (bad) (bad) (bad) (bad) loope (bad) out cmpsb push cmp rex.WXB xchg cs (bad) lcall cmp lcall shrb xchg adc rex push rolb pop add push push stos add movsb subl insb pop movabs sbb pop (bad) ja out scas js pushq (bad) cmpsb (bad) loopne sahf sbb cmp mov fdivs (bad) cmp xor fisttp fisubr scas jg insl jne xor and pushfq int3 sbb add data16 (bad) rex.RX mov outsb mov cld pop insb clc (bad) in fisttpl loope out (bad) (bad) jle movslq mov push rex.RX mov (bad) rex.X fsubrs iret rex.RXB rex.RB sti sbb and cmp leaveq rol pop sub (bad) cmp (bad) ja adc mov popfq mov (bad) mov test scas out pushfq (bad) rex.WRXB mov xchg test or rex.X or lahf rex.WB sti (bad) movabs (bad) rex sub rex.R cmp cmp lcall or stc fsubs xor (bad) pop in lret movslq rex.RB je out cli sub adc pop (bad) repz rex.RB jmp push xor xor (bad) cli sbb andb xor pushq mov rex.X sub mov fldenv stos or jno movslq sub insb mov cmp icebp adc ja in cmp (bad) out sbb ds cmp (bad) lret adc out sbb negl pushq (bad) and adc (bad) in mov (bad) (bad) (bad) jg pop (bad) cmpsl xor xchg (bad) repz stc sub add fwait (bad) fwait rclb fs xchg (bad) adc mov pop int iret mov popfq rclb (bad) cmc (bad) (bad) (bad) and data16 enterq rex.XB push nop mov psrlw imul js fnstenv mov mov test jle sbb sub stc and lret or in mov out xchg jae rolb callq (bad) jae rex.WB int (bad) mov (bad) push cmp rex.W test incb fwait or (bad) (bad) sub xchg jbe xor out xchg rex.WRX je rex.RX (bad) int3 add movsbw lea jmpq lea mov jmpq jmpq jmpq cmc sub out adc sbb out mov (bad) jg stos (bad) adc in xchg lret cmp or div push fstpt mov mov xor push ja lret rex.WB rex.WR rol notb scas pop int mov (bad) (bad) (bad) mov pop xlat sub or pushfq (bad) push and fisub repz pop mov mov and rex.X cmp xchg pop scas fcmovu (bad) mov mov rex.W rex mov (bad) movb mov (bad) vpand enterq rex.WRB fwait movslq lods mov cld fldt cmp pop callq shld movsbw test add btc mov test cmc bt cmpb jmpq jmpq jb clc bt cmp jmpq cmc cmc sub jmpq jmpq jmpq sub jmpq sbb insl xlat data16 loope cmpsl data16 pop test (bad) cmpsl push jbe fcompl or and rex.RXB sar test pop add mov jb test out (bad) (bad) hlt add cmp (bad) sar (bad) (bad) jg (bad) rex.RB pushfq pop rex.WRXB adc xlat js (bad) jmpq enterq (bad) std (bad) (bad) fbstp jp test lcall movabs adc incl movslq (bad) cmp pushq or mov fistl jmpq cltd stc (bad) jg cmp push cltd push mov out je sbb jb enterq out idivb repz jle jmp jp stos imul std sbb (bad) xor lret imul or cli decl mov (bad) stc ljmp (bad) rex.WRX ljmp jmpq rex.WR and fidivrl jg sub movabs movabs (bad) outsb mov mov xor push pop (bad) gs add or stc fsubl orl movabs int3 sub movabs rex.WXB (bad) add and (bad) in mov mov cmpsb popfq rex.RB movsl (bad) sub (bad) lea and scas xchg loop sbb mov cmp add movabs jrcxz stos sub mov in gs mov xchg push std test (bad) outsb rex.W (bad) (bad) (bad) (bad) mov cltd xor fidivr jnp gs jb stc rex.X orl lret fs fwait (bad) pop rex.RX and fsubl jrcxz test popfq adc xchg in sbb xchg xor sub rex.RX push stc jbe xlat movhps movabs jmpq jne bt cmc btr mov cmp cmp add stc bt bt movzwl rcl sar mov mov jmpq sarl push mov jns testl cmp rex.WXB jp or rol mov (bad) movabs pop jno xchg push sarb add push xchg gs rex.WXB (bad) (bad) (bad) shll int3 mov xchg cltd jns sub int cltd in cld (bad) (bad) jg lock (bad) fnstsw vmwrite fmull out sub (bad) or fwait jp cld cli sbb loop jp mov (bad) mov rex.W (bad) sti (bad) lcall and (bad) imul (bad) test movabs adc sbb add (bad) add (bad) and movslq callq jl push xor mov pop rex.W xchg (bad) xchg stos adc or xlat iret (bad) pop fldenv push xor mov sti add add shld stc clc bsr mov cmc stc stc cmpb jmpq jne test stc stc movb jmpq pushq jmpq mov mov movzbw mov jmpq jmp xor sbb jrcxz (bad) test xchg in jrcxz push decb outsl sahf (bad) lods add xchg fucomp movabs rex.RB mov fidivrl enterq (bad) mov rcrl insl rex.WR stos (bad) in mov add lcall in jno callq (bad) or (bad) pop and (bad) (bad) xchg ds adcb rex.WX or sub rcll rex.WR js sbbl pop xchg xlat hlt add mov jae mov cltd (bad) (bad) rex.RX xor cltd pushq int repz pop in sbb add add imul adcl pushfq pop repz imul es movabs lock callq and push rex.RX test pop mov pop cmp or movabs (bad) pushfq (bad) jge cmp add xchg fucomp or rex.WXB adc cmp movb push rex.R rex.WR (bad) rex.WRX in mov movabs (bad) in and retq outsl or jle add (bad) add (bad) lea sbb std test sbb mov add xor mov and push lock popfq rex.WRB retq mov xchg xchg push test hlt je sbb pop cmp (bad) lahf rex.WRXB xchg test std push xchg or xor (bad) xchg adc and (bad) or jb ja int mov jp callq je xor xchg xlat rex.WRXB rorl mov pop cmp rex.W rex.WXB mov mov and enterq xchg pop nop (bad) iret decb push xor (bad) (bad) cmpsl adc and jno adc rclb mov (bad) (bad) (bad) mov jmpq (bad) movsl in repnz vmovupd movabs sbb (bad) (bad) ljmp jle outsb sti (bad) lcall (bad) cld sub rex.WRX (bad) mov jo in rex.X fsubl xor lahf push adc sub rex.WB out cmp je adc cmpsb add (bad) jmpq rcrl xchg retq retq pushfq rex.XB lock andl cmp scas (bad) in and shll popfq pop rex.RB rex.WRB rex.WRXB movsb push jmpq imul lret jrcxz push (bad) xchg ss and fwait and (bad) mov or pop sub imul rex.WRX rcrb sub push movabs lock (bad) (bad) (bad) fistp int3 nop mov rex.XB and mov mov (bad) push sub sarl rex.WRXB jle jmp movslq (bad) lcall add mov xchg xchg and leaveq cli in (bad) pop mov mov push smsw mov mov (bad) fdivs gs xchg and mov (bad) xchg (bad) fimul cmp push mov movsb mov or sbb retq cmpsb test adc callq mov and mov rcr (bad) out in push (bad) outsb and (bad) out push cmp push or add rex.RXB (bad) (bad) ds sbb xchg cmp (bad) cmpsl data16 add cmc xor (bad) cmpsb negb mov lcall rex.R js std (bad) (bad) mov (bad) leaveq (bad) (bad) scas ss (bad) (bad) clc cld (bad) (bad) (bad) sbb sarl (bad) mov rex.WRB mov cld adc rex.RXB repnz push (bad) outsl sahf (bad) (bad) mov rex.W scas vpavgw mov loope (bad) (bad) in add lahf rex.RXB xor jbe sbb xor mov test rex.WRXB ja bt bt clc bt imul cmp test add jmpq pushq and sahf stc or (bad) data16 pop and out rex.WX mov retq movabs sti add sub imul add fistpl leaveq add lea retq rex.W or cmpsl (bad) rex.RXB insl xchg (bad) lcall out xor (bad) mov cli loope cld (bad) (bad) mov adc jnp fwait sahf rex.WRX jne cmp movabs pop mov xchg rex.WRB mov iret (bad) xchg jbe add ja cmp add push or mov (bad) outsb sub (bad) rex.RXB in repz (bad) (bad) mov jl mov (bad) ss movsb mov cli (bad) (bad) jmpq lods mov add sbb jrcxz jp lea int3 sti push cltd add (bad) lret xchg rex.WXB (bad) sbbl xor add mov xchg pushq retq std xchg or movabs std and or out in and mov push rcrb (bad) rex.XB rex.WB fldcw jo je bsr shl btr btr push sar mov rol sub setae bswap setle bswap lea jmpq test bt cmpb jmpq jmpq adc jl jo mov cmp rex.XB sar cmp (bad) add and es fldenv or popfq sbb rex.RB mov cmpsb (bad) jge cld or (bad) (bad) xor pop xchg mov jmp mov sbb jg in jbe mov mov jbe lea shrb fdivl mov rex.WRB jl (bad) icebp pushfq std (bad) (bad) fistpll jns repnz (bad) lcall (bad) adc out cwtl data16 jne outsb in xor mov mov lods jl scas xchg jbe and adc (bad) (bad) out cmp mov jbe xchg sub (bad) rex.XB cmp xchg ss add (bad) mov add mov sbb (bad) adc adc scas jl fidivl clc cmp (bad) fsubl movabs (bad) repz movabs pop mulb and xchg xor out mov or jp frstor (bad) movsb (bad) out fnsave and test lahf add (bad) mov fistpll (bad) (bad) (bad) (bad) mov data16 mov (bad) lods push fcoms adc cli pushq outsl sbb in jmpq rex.WX sti fs repnz jl mov cmc movabs cltd pop cmp (bad) (bad) fildll cli (bad) lcall and xor frstor rex.WRX movslq adc fidivl negl data16 lea (bad) fisttpll pushfq jl rex.X xchg (bad) int fisttpl fwait cmp add ss rex.R sub mov test sub (bad) test (bad) (bad) mov decl test add add bswap bts push sar and mov movsbl sub lea movsbw seta movsbw lea jmpq jmpq je test jmpq jl (bad) int3 jae mov (bad) rex.WRXB rex.WRB xor mov cmp (bad) cmc jne mov mov sub mov shlb sub mov (bad) xchg jle (bad) lcall cmp sahf jae cli jb (bad) (bad) (bad) cld (bad) (bad) pushq mov push sti (bad) (bad) mov sarl (bad) rex.RB adc lods (bad) ffreep jb xor jp js cmp or pop imul ds movsb cmp in jno fidiv mov adc rex.WR (bad) stos sbbb retq xchg jno mov mov adc outsl and jae mov mov push jp rex.W (bad) sarl andb jmp stos repz cmp sub (bad) jo and (bad) cs cmp mov sub mov push add rex.W or lods fild (bad) (bad) (bad) xchg js (bad) ja push outsb xchg xor xor sti adc lahf leaveq stc test int imul test repz enterq mov hlt mov mov cmp xchg jae cltd rex.R and clc test stc mov test xor jl sub data16 xchg rex.WX movsl jp mov rex.XB (bad) and rex.WXB roll je mov sbb mov (bad) addl xchg movabs (bad) test rex.RX cmp (bad) (bad) mov nop cld (bad) lcall sti mul or mov push out test push xchg (bad) (bad) (bad) xor repnz (bad) xchg jne rex.WRX add icebp (bad) movl adc push jrcxz out and cmp ja mov cmpsl ljmp (bad) int3 std mov loop rex.WRB or adc jne push (bad) adc (bad) rex.WRXB jge retq pushq pop add (bad) lods rex.WRB sbb callq add (bad) movabs mov mov cmp cmpsl (bad) pop cmp (bad) sub test jmpq vcvtpd2ps jne mov xor (bad) xor or lahf cs xor add (bad) cmc mov enterq out push cmp lea test add xorl mov iret (bad) (bad) (bad) (bad) and movsb cmpl pop stc callq ds int3 rorb mov mov cmpsl (bad) xor sub out leaveq sbb xchg stos xor adc lahf repz cld (bad) lcall and and (bad) lcall jmp out add mov insb (bad) lret fcompl jns rex.WR jno (bad) cmc lods jnp adc roll jmpq std sub std xchg rex.WXB or movsb rex.X push pushq icebp test popfq rex.WXB mov push jmp mov callq and mov xchg hlt (bad) jmpq stc sub jmpq jne cmc mov not neg shld add sub rcl rcr mov cmc cmc sub cmc pushq test bt cmc cmp cmp jmpq jmpq cmp jmpq rex.WRX cs jbe mov sub movabs (bad) not rex.WRB rex.W cs leaveq rex.B rex.RXB data16 (bad) adc fistpll xchg lret jge jne mov fcmove sub cmpsl insb mov (bad) (bad) jg xchg xor add sti (bad) (bad) mov mov and cmp mov pop push data16 sti (bad) lcall fdivl rex.WX mov and xor rorl or outsl (bad) test adc cs movslq sub test fwait retq push div rex.WB decl (bad) (bad) icebp pop add std movq out leaveq mov popfq fldt fmul lods jge sbb sub rex.RX cltd or sbb int and imul xchg insb mov js (bad) std rex.WRB fisttp clc cmc sub stc bt cmp jmpq xor sub mov sub jns (bad) cmp ja loop and or out (bad) movsw fnstsw nop (bad) jg fidivr xchg xchg or loopne jns ja adc (bad) jg and pop jmpq leaveq rcll retq cld (bad) (bad) push mov (bad) lcall mov jo sub cmp cltd jmp mov mov sbb lock push ss adc loopne pop cmp sub xlat (bad) (bad) mov push push (bad) popfq loop mov (bad) (bad) xor fildll add andl jns mov enterq jmp xchg mov movabs callq mov (bad) enterq test jns ja cmc jb mov in je lret out test jmpq jmpq jb bt clc cmp jmpq callq sar bsr (bad) repz adc shl shld mov bt stc bt jmpq adc jmpq mov and or (bad) hlt and cmp imul loop jmpq nop pop callq adc xchg sbb jle subl and int pushq xchg pop int3 xor mov xchg pop or outsl mov shlb ss mov nop pushq fsts cmp push out cmp sti (bad) (bad) mov js mov cmp movb or outsb pop cld or or adc sar jb xor ja test rex.XB outsb hlt jle push adc in mov (bad) lret (bad) (bad) (bad) lcall pushq push fwait mov or cld (bad) (bad) jg mov (bad) (bad) cli (bad) lcall jnp outsb mov (bad) (bad) outsl and fbld rex.RB lea enterq retq xor mov xor ds rex.R jmpq push (bad) js xchg test jae insl cmp cmpsb (bad) (bad) pushfq movslq xor (bad) (bad) out scas jl adc and jl sbb xchg rex.B movabs and in fstpt xchg or mov enterq mull out push or jrcxz or stos sub mov test sar jbe (bad) adc imul stos add push rex.RB (bad) (bad) (bad) lcall pop (bad) ds (bad) pop fcmovne sbb xor lods (bad) jmpq andl sub outsb rex.X cli (bad) lcall int pushfq (bad) ss sbb xchg sbb insb xor notl (bad) xchg cwtl mov stc imul js jge add retq repz or loope ss out cmc push push int3 loopne cmp pop jmpq adc jnp (bad) or cli int3 fs rex.WRXB outsb mov mov add jb clc pop fisubrl sti jmp enterq (bad) in (bad) jmpq mov mov decl test (bad) jmpq mov mov stc clc or jmpq add mov (bad) rclb orl insb sbb jne sbb cmpsb xor (bad) xchg add mov pushfq je mul (bad) pushq shrb pop out xchg xor rex.RB data16 mov (bad) lcall xor jg mov rex.RB (bad) iret (bad) retq sbb callq mov std (bad) lcall cmc mov (bad) lcall jb and sub sbb rex.RXB fwait adc push mov (bad) or adc xchg or pop rex.WRB cld (bad) mov jrcxz repz stc sbb sahf mov shll sub adc scas mov xchg rol ror (bad) (bad) test xor mov xchg shl cmpsl addr32 test xchg movslq pop (bad) jmp cmp test test jmpq xor mov mov stos movslq and rex.WRB rep (bad) mov pop movl mov icebp pop scas jg movabs je (bad) insl rex.RB xchg (bad) mov fsts xchg push std xchg (bad) (bad) bswap (bad) bnd lods mov ds adc (bad) ss fwait adc adcb pushfq push (bad) cmpb cltd rex.RB adc (bad) lcall (bad) movsb add pop push stc in (bad) sub jne adc xor je (bad) xlat adc cwtl rex.WRX (bad) rex.WRX (bad) xchg mov mov (bad) and cs jl pushfq cld orl (bad) or adc mov adc mov cmpsl ljmp jmpq cmc or jmpq bt stc imul test cmc clc add jmpq jmpq jmpq cmp mov jge mov gs sarl rclb pushfq in out (bad) cmpsb fimul fwait jg pushfq rex.RXB in jmp (bad) lret (bad) (bad) pushq xor pushfq movabs sti sub (bad) or sti fiadd xor push rex.XB sbb cli or out or cmp (bad) (bad) mov (bad) pushq rcll cld (bad) lcall mov (bad) sar lcall mulb cmp rex.RX rex.WRXB loopne pop cmp mov mov retq leaveq jbe adc (bad) mov xchg pop rex.WRX loope mov mulb lods fcoml (bad) lahf movsl rex.XB pushq in push mov xor icebp icebp sbb (bad) sub (bad) mov mov loop push std jp sub jb imul imul icebp add jmpq rex.WXB mov jle mov pushfq sub movsw jge and mov (bad) rex.R jmpq rex.WRX fisubl mov in pop (bad) decl jle mov xchg or adc fnstenv paddd (bad) jg sub fidiv fwait (bad) insb fwait movslq stc or or jmp sbb mov (bad) mov mov sbb and jle xchg ficompl and mov rcrl rex.WRX pop mov iret psubusw rex.WB fwait push xchg retq sti loopne cmp (bad) cld (bad) lcall movabs mull push sbb out (bad) jne imul pop lret fsubrl test and push rex.X scas (bad) and (bad) sub (bad) rorl mov scas pop movabs rex.WRB add jmpq and (bad) rex.WRXB pushfq rex.WX xor (bad) lahf addr32 (bad) nop mov add (bad) add iret and lods sub (bad) mov push cli adc adc and lea (bad) cmpsl data16 rex.X jbe (bad) sub (bad) addr32 (bad) (bad) incl out int mov insb add mov xor loope sbb rex.WB mov pop shll (bad) (bad) mov mov (bad) lcall loopne jge sbb xchg jb shrl push callq (bad) notb repz rex.WR add test std sbb (bad) pop mov pushq and rex.RX fimul xor mov (bad) sub and xor jg cmp lock callq sub cmp rex.W callq jmpq movb cmp test jmpq jmpq callq rcr add stc mov bt test cmc jmpq mov lods (bad) andl jnp shlb jnp add decl mov sbb mov loop cltd cld rex.WR lret std or sub push mov out push push int push (bad) mov (bad) (bad) (bad) mov xchg (bad) mov out (bad) gs movabs mov (bad) sub insb xchg sbb seta xchg rex.RB movsl test imul mov sub (bad) retq xchg xchg xor ficoml pop mov rcl movslq sub cmpsl fcoml andl clc adc in pushq insl cmp (bad) cli shlb cmpsb rex.WRX rex.WB mov callq int xor mov sub jl xchg pop mov jle (bad) mov xchg fs or (bad) lcall sbb (bad) lcall add lea repz xor adcl movsb (bad) cmp nop push stos rorl xor in rex.X outsl (bad) and out jbe jle mov xor jb xor and divb add and retq pushq stos and jmp add mov mov loopne or lcall leaveq mov adc add jmpq jne bts xor movzbw setno mov shr rcl add test mov cmp cmp cmc test jmpq jae bts btr stc mov and data16 icebp or jmpq mov (bad) or mov cmp stc xor clc jmpq jl rex.X andl mov jbe out rex.WRXB pop jno rex.W data16 add jg cli (bad) cmc jne push pop xchg cmp rex.WRB subb jrcxz xor movslq xor mov clc (bad) scas jl and iret scas insb cmpsb loop pop scas fistpll sbb in (bad) js xlat sub repnz addr32 push xor (bad) (bad) (bad) xchg push sub (bad) ja push (bad) movabs or rex mov (bad) rex.RX retq (bad) retq jmpq gs sti cld rex (bad) jns (bad) adc (bad) adc insl rex.WR mov rex.RB rex.R outsl rex.WRXB cs adc rex.WXB enterq mov loope loope adc loope or adc loop pushq mov outsl xchg jle jmpq xorl fwait and fldl rex.RX (bad) f2xm1 js sub jns je icebp movabs sbb movsl sub (bad) lcall xchg lahf sbb std (bad) (bad) dec (bad) sbb leaveq and in xchg and fldt cmp add rex.WRX mov adc sub nop push cs cmp (bad) (bad) pop cmp fwait movsb sub loope push test mov and xchg (bad) clc add (bad) stos rex.WRB rcrl cmpsl in (bad) test mov in mov adc pop orl ficoml nop push ds mov rex.R mov (bad) int3 jl int3 jno scas jge and mov pop xchg mov js push sub (bad) mov (bad) jmpq je jmpq sub jl and or rcl imull cmp xchg (bad) mov jno rex.W (bad) insl xchg pop jmp lret shr subl sbb (bad) add xlat adc push std test iret lahf rex.WRB xor (bad) lcall push cmpsl outsl cmpsl repnz (bad) mov add movsl xor cmp mov cmp cld (bad) (bad) (bad) out (bad) je cli (bad) lcall rex.RX lock jg clc add test xchg xor add cltd roll callq jo mov outsl rex.WRX js out cmp test jrcxz stc jmpq xchg adc (bad) cmpb cmp (bad) lahf rex.WRB rex.WXB jmpq repz stc cld jl repnz mov gs cmp stc test movb bt test cmc cmp test jne je dec push rol mov lea btc sub movsbw movsbw lea jmpq je xchg lea movsbw movzwl movsbw lea movsbw bswap mov jmpq pushq jns pushq jmpq je rcr test test ror push lea clc mov cmc btc sub mov lea jmpq adc jmpq clc stc cmc test cmp jmpq adc mov and or (bad) and push rex.R (bad) (bad) fnsave push cli fnstsw jp leaveq stc fcoml repz add sub (bad) lea (bad) (bad) (bad) fist jno sub rex.WX in rex.XB loop callq pushfq mov mov mov mov movabs lods jbe popfq rex.RXB (bad) jnp sbb add jne lock mov and mov (bad) fnsave (bad) cmc adc sub cld (bad) lcall and (bad) lcall or add pushq rex.WB push stc cmp sub movabs scas pop cmp mov loope jle hlt in xchg push movabs icebp jns fisttp movabs cli jmpq cli (bad) cmp add rex.WRXB sti cmp xchg (bad) nop (bad) lahf rex.RX rex.RX leaveq cmp mov mov mov stc push add mov or jp (bad) (bad) jg movabs repz cld (bad) (bad) mov rex.WRXB (bad) lcall iret sti and (bad) popfq rex.RX jp add pushq out imul jg (bad) (bad) (bad) sahf outsb mov cmp (bad) sub adc movabs nop pushq pop xchg sbb cmp rex.W mov (bad) int sbb fadds fidivr andl test push cmpsb jge callq scas ljmp (bad) negl sub adc push (bad) ficomp enterq rex.RX (bad) xchg jmpq stc cmp repnz jmpq jne btc setno rcr rcr mov cmc jmpq push cltd outsl (bad) sub cmpsb (bad) mov rol (bad) push icebp sbb test cmp sar movabs (bad) pushq rex.WB repz pop mov hlt xor (bad) (bad) xchg (bad) (bad) lcall movabs scas rex.WX sub fbld add cli lahf and (bad) lcall retq lcall jrcxz (bad) mov pop sub pop push cli in sbb mov fsubl mov or pushq stos xor push xchg (bad) (bad) xchg pushfq test pop test add add and sub add (bad) lods (bad) (bad) loope rex.RX gs scas jbe loope cli sub jb in sub sti stc add rex.WRX rex.R pushfq rex.WX (bad) xlat adc fildl stos movslq adc mov or mov mov mov sbb rex.WB addr32 fldcw loopne sahf out test out lea hlt cmp js or rex.WXB out int3 mov adc movabs xchg imul (bad) xchg (bad) data16 pushq and sub fs sbb add mov xor sub adc mov jo sub (bad) rex.X (bad) loop clc push pushq sub movabs hlt std (bad) (bad) (bad) iret (bad) pop iret (bad) (bad) (bad) mov imull sbb outsl (bad) sub test pop mull ljmp out or xor rex.WRX pop rex.WRB loop pop mov mov mov outsb pushq (bad) mov pushq (bad) movsl jge pop mov mov lret jbe adc pop lret pop cli movsl rex.RB xchg rex.WX mov mov (bad) mull cli xor xchg jo or sbb sahf (bad) fcoms (bad) (bad) loopne outsl rex.WRX jbe jmpq (bad) fcmovb (bad) fidivr rex.RX or pushfq jnp loop rex.WB mov jmpq or mov repz icebp sbb loop jo push push sub add push rex.WX xor cwtl ja (bad) lcall leaveq (bad) (bad) test (bad) fdivs insb lea or xor jmpq push xor cmp cmp nop cmp sti (bad) (bad) (bad) shrb add rex.WR (bad) lcall rex.XB (bad) lcall and push imul xor fisubl sub pop pop mov insb push add stos jnp loop jns mov loope iret insl (bad) callq cmp jl loop or outsl jne mov es pop rex.RX adc mov (bad) in stos xor scas (bad) xlat adc xor ds fistl movabs mov rex.W rex.WR push rex.WB cs insb add jns cli incl add push push jne jb push gs imul jb (bad) je outsl outsb add xchg jb mov mov or mov outsb cs rex.WRX rex.WB adc pop xor repnz (bad) cmpsl in xchg mov rex.WRB clc callq mov mov gs xchg jae lods xor cmp or adc lods movabs idiv (bad) lcall nop (bad) (bad) js stos js repz adc ja fyl2xp1 (bad) cmp (bad) pushq mov sub mov ds rex.WRB sti fwait pop adc xchg out xchg jp pop mov push retq (bad) int3 test xorl xchg (bad) adc xlat shrl pop popfq retq and cmc lret stos sub adc xchg mov pop clc sub movabs rex.WRB rex (bad) (bad) jge test (bad) fmull jmpq sub clc sub not dec jmpq clc cmp jmpq (bad) pop repz lea mov cs imul cmpsb outsb popfq jne cmp nop or popfq test (bad) cmp lret mov rex.WB push (bad) mov test (bad) fnstenv loopne jnp (bad) xchg imul (bad) retq (bad) (bad) lcall int3 and mov and rex.RX cwtl sti rex.XB cmp lcall and data16 fidivr retq movslq add ror iret lret lods mov rex.XB (bad) cmp ds jns (bad) test lahf xlat insl rex.WR icebp (bad) fisttp rex.B out popfq rex.WXB rex rex.WRXB outsl rex.WX insl mov clc lea mov retq (bad) addr32 shll addl cmp sbb cmc insl add cmp lock ja rex.XB jns mov mov (bad) or rex.R rex.WRXB xchg mov sub in scas idivb jmp movabs rex.W gs add (bad) (bad) (bad) mov pop cmp (bad) cmp (bad) (bad) movabs xor (bad) or ds test lock out add pop or pop and (bad) (bad) (bad) mov mov rex.WRB adc (bad) movabs pushq xor jmpq cmp cmc push int3 addl mov movsl movabs pop rol pop mov sbb loope rcrl xor xchg add add xchg rex jo xlat (bad) lods test rex.WRXB (bad) mov insl cmc and (bad) stc (bad) (bad) mov adc and xor lahf jg (bad) mov repnz repz sarb cli adc jbe bswap out mov jl fwait test mov callq fistl rex.WB (bad) std test andb mov mov fisttpll push rex.RXB xchg (bad) rex.RB lock lcall mov mov repnz movsb add and mov (bad) cmpsl xchg lea jrcxz rcr scas js in ss mov xchg jno pop mov out jns mov mov sbb mov cmp cmp xor adc rex.XB test testl out rex.RX add mov fild popfq movabs divb xchg jbe cmp or (bad) (bad) fild in jge retq sub movzwl imul sub or mov lods (bad) (bad) add and loop mov cltd fwait jp sbb add (bad) mov je stc cltq rex.WRX ds sahf outsl cli fstps xchg add and rex.RXB cmp sub imul (bad) imul cltd and pop xor pop (bad) or jae push loop mov or mov scas test (bad) hlt (bad) jb adc jl pushq out cmp jp sbb in (bad) iret mov jmpq (bad) adc je jmpq jmpq jle rex.WXB and pushfq mov fwait icebp test or (bad) std xchg pop orl or movabs fistpll (bad) (bad) sbb jg cmpsb and pop sarl xchg sahf rex.WB mov rex.WX xchg (bad) (bad) jg (bad) jle (bad) (bad) lea lahf subl lcall pushq ja test jb callq orl sub xor (bad) movabs vpcmpeqw ja test ffreep (bad) sti adc loopne pop and lods (bad) sub (bad) stc lock (bad) mov add clc sub mov cmpsb jle cmpsb faddp out mov iret ja fmull (bad) sub rex.WRXB push rex.WRXB lea not mov jmpq mov add bt add add ror rcr clc mov cmp jmpq adc jmpq jmpq jmpq jmpq push push rex.RB xor cs insb add test stc decl test pop mov movzbl mov jmpq (bad) sahf insb (bad) xchg and rex sub (bad) movabs loopne xchg repnz in outsl movsbl or rex.XB rex.WB (bad) and mov add popfq in cmpsb (bad) (bad) (bad) lcall mov loop test fbstp xchg (bad) test cld (bad) (bad) jg enterq cli (bad) lcall rex.RXB rex.XB (bad) in lods test divl push rex.R rex.WX mov adc ja test cltd stc xchg hlt and or sbb pop cmpsb rex.WRX out cmp (bad) (bad) xor es mov ljmp push rcrl mov adc fildl mov sub movabs sbb xchg rex.WXB cmp jne setns bswap jmpq cs jle xchg and (bad) (bad) pop (bad) notl mov mov (bad) cmc rcrl lret rex.WRX mov movb and scas pop (bad) adc rex.B adc (bad) lcall mov adc sti mov movsb rex.WR jnp cli jb cld (bad) lcall (bad) cli (bad) lcall or (bad) retq mov in adc gs cmp shlb rex.WB xchg stos mov xchg cmp xchg adc xchg out rex.WRXB in push rex.WRB nop sbb pop rex.WRX (bad) jne adcl sbb je rex.WRB rex.WRB rex.WXB stos or and scas outsb mov cmp (bad) (bad) lods push xchg adc sti pop add leaveq jmpq out (bad) sbb xchg and cltd xor rex.W cmp adc rcl cmpsb (bad) rex.WX (bad) lods jle mov xor sbb xor sbb jle ja in stos mov push xor mov rex.XB js cmpsb (bad) lods xor or (bad) (bad) (bad) xorl rex.WRXB outsb jge sub (bad) fidivr adc lock (bad) lea pushq sub jbe outsl rex.WRX jge mov pushq rex.WRXB xchg movabs adc add test sbb repz imul movsl sti cmpsb lods adc push repnz cmp pop jbe retq xchg (bad) jle xor jb xor stos cmp int fistl pop (bad) seta or clc mov jl lret and data16 xchg pandn out (bad) pop cs and add test cmpsb notb (bad) jne pop mov cmpsb push jne cmp xor shlb mov sbb cwtl push sub movabs mov jne (bad) (bad) xchg fstp xchg lret cltd (bad) out cmp std (bad) (bad) jg sarb (bad) lcall insl xchg jmp xor cmp std scas xor or add jle push leaveq sbb pop pushq fnstcw cmp lahf jle data16 fs rex.RB imul (bad) f2xm1 adc rex.RB pushq movabs mov andl (bad) adc xchg (bad) iret sbb lahf scas sub leaveq rex.WX ss mov xlat (bad) outsb jmpq mov not movzbl movsbq lea pop retq sbb mov mov rex.WRB fs mov xor push lea sbbl sbb (bad) sbb imul mov mov rex.RXB retq (bad) lcall fisubl movsb pop repz sarl add out adc mov cld (bad) (bad) mov mov repz add mov stos and add rex.XB es push (bad) or rex or and cmp xor or and push sti fisubl jl mov sbb and rex.WX xchg (bad) lret xchg movabs insb mov xchg out in xchg push cwtl and rex.W xchg push movabs movabs imul test add ja xchg pop xchg pop xchg xchg pop movsbw movzbl lea movzbw pop jmpq jne gs xor fs insb add sbb popfq xchg and jae (bad) lods add xchg hlt mov loope pushq sub adc and fs push rex.RXB rex.XB mov (bad) add (bad) sbb push xchg or mov sub and fnstenv (bad) movabs scas mov loopne ficomp mov cmp (bad) std (bad) lcall and (bad) lcall movabs add jl rex.XB cmp rex.WRB mov (bad) (bad) repnz mov sub insl loope sub cwtl push xchg stc movsb rex.WR xor mov test leaveq (bad) ficomp in mov nop pop or imul pop movabs fs xor sub add es pop icebp pop cwtl and lret mov jne or rex.WX loopne iret rex.WRXB rex.WX repnz mov (bad) movsl insl pushfq or adc out xchg insl pushfq je mov hlt (bad) xchg jo sbb rex.WX pop outsl (bad) int3 (bad) jg (bad) std (bad) (bad) mov or jle (bad) (bad) (bad) mov cli (bad) lcall ss push xor andb sbb vpaddw test (bad) mov jge or fcomps xor cmp push retq imulb mov insl push cmp add push xchg je ss jnp and rex.WRB movabs add repnz andb mov or cmp rex.X rex.WX out cmp rex repz and outsl mov add adc stc decl (bad) jne stc incl mov cmp jmpq lea jmpq sbb mov movslq add mov add int3 (bad) (bad) (bad) (bad) in jl (bad) jp imul cmpsb fidivr jge icebp push sahf add movslq test or movslq (bad) (bad) pushq sahf rex.WR ja fisub in pop rex.B fnstsw pop (bad) stos imul cmp (bad) lcall popfq push repnz jge enterq movabs data16 hlt movsl stos rex.WXB icebp sbb (bad) mov or pop mov fdivrl es fs add ja jne add xlat (bad) rex.WR fsts xchg xchg rex.WX lods cmp stc xchg (bad) mov rex.WRX fsubrl (bad) pop mov (bad) mov mov rex.WXB movabs stc (bad) lcall es and mov ss adc and cld and movabs data16 pushq (bad) xorb mov (bad) out rex adc pop add retq sub (bad) mov (bad) (bad) xchg movsb andl mov jb or sbb (bad) xor iret scas outsb adcb xchg rex.RB pop (bad) iret loope notb sti adc (bad) pop (bad) mov (bad) (bad) lcall pop std xchg jae xor cld (bad) (bad) mov ds sub enterq rex.WX mov rex.RX add (bad) mov jmpq jae callq cmpsb test or rex.RB leaveq (bad) rex.WRXB cwtl or adc xor mov (bad) mov fcos callq movsbl jmpq jne adc rcl sub inc inc btr movsbw mov xor test add add mov mov jmpq adc jmpq adc retq jmpq or mov rcr lea movsbl mov bsr and ror push rol mov ror stc sub rcr rcl push setns sar push rcr add test lea push not push bswap dec mov clc test jmpq je test stc bt sub clc cmp cmp jmpq (bad) in (bad) (bad) callq jmpq xchg retq rex.WR callq rol jmpq jne movsbl bsf bswap mov bt clc cmc clc add jmpq jne setg rol not mov test xor neg bsr sub sub mov shl mov test bt cmc cmp sub cmp bt pushq test cmc cmp jmpq lahf push cld popfw and mov pushfq add sub mov (bad) movabs and repnz sar or xchg mov mov xchg push in insb ds (bad) (bad) (bad) lcall pop data16 pushfq je (bad) in and cmpsl xor shlb pop or cld cli (bad) lcall cmp shlb rex.RB rex.WXB es loop mov repnz rex.WB jl lcall and xchg rcrb mov mov lods fs (bad) (bad) enterq es movabs (bad) push push (bad) cmpsl vpsubd pop rex.WX pushq xor rcrb mov xor and (bad) (bad) push add mov popfq mov sahf and xlat testb movabs popfq clc or std or or mov mov rex.WRB scas data16 rex lock (bad) (bad) lcall fwait sub adc (bad) mov test (bad) addr32 movabs xor decb fcoms cmc pushq sub movb rex.WRXB (bad) ljmp jle insl rex.WR (bad) repz pop push outsb cld (bad) (bad) (bad) out retq retq cli (bad) lcall test mov and or leaveq test sbb jo idivl rex.WR test xchg sbb jnp loope pop lea ffree jge rex.XB movabs jns mov sbb push mov js sub ja (bad) ljmp jle in xchg or xchg imul imull add rex jne jmpq jmpq jmpq rex.RXB rex.R xor cs insb add (bad) lahf and jge cmp (bad) movsl fs jns adc sbb sti adc leaveq (bad) xlat idivb jne enterq and jno movabs adcl (bad) pop or es jmp mov stos adc (bad) rex.RX cld (bad) (bad) mov lret lcall cmp (bad) mov std xor adc (bad) xor (bad) jbe insb rex.WXB add jo shl mov or (bad) fsubl cmp (bad) fistpll cmpsl (bad) (bad) pop mov scas divb sub mov fild or loop in sarb add flds loope cmpsb std sbb (bad) cli in js rex.WRXB rex.XB iret xchg fistpll shrl (bad) repnz insb and pop mov add pop mov or add clc clc add rol add xor mov cmc test jmpq jmpq pushq jmpq mov sub cmp add rol rol neg add mov setno cmc rcr rol mov bt clc repnz jmpq cmp cmp repnz jmpq ja sbb sbb bt rcl sub lea shl dec add btc btc setae bswap mov not jg inc mov stc repnz jmpq jae fwait add roll (bad) mov movabs adc or pushq mov or int imul cmp lret stos movslq pop rex.WB push data16 (bad) sbb retq std scas pop (bad) (bad) (bad) lcall mov shlb imul (bad) xchg es icebp add jbe faddp (bad) fbld cmp jmpq cmp (bad) and xchg mov sub callq (bad) mov (bad) cmpsb push rcl xchg jrcxz mov lcall fild pop outsb out movsl test adc or sti callq jp or mov cmp add lcall movsb jns (bad) stc (bad) lcall imul cmpb outsb (bad) pop (bad) mov add jmpq sbb (bad) maskmovq mull movabs mov out (bad) add gs cli (bad) pop nop loopne rex.WRX (bad) lea movabs xchg push add sarl in mov or sub (bad) (bad) rex.RX or sub jae jmpq jmpq fcompl movabs (bad) jp fnstenv cmpsb cs shll (bad) rex.WX jrcxz mov xchg ss jne in mov jmpq int mov (bad) (bad) (bad) ljmp xchg jrcxz cld (bad) lcall mov mov nop pop outsl (bad) add sub sub in out jg mov cmp (bad) pop adc sahf rex.W pop stos fisttpl push jge cld shll loope (bad) out jne lret xor xor mov ss fsts (bad) int pop xchg adc jmp enterq rex.RX jl fiaddl movabs fadd push cltd cmp ds rex.R fnstenv (bad) test (bad) (bad) ss stc sahf ja jmpq test jmpq jae data16 (bad) paddd shl mov movzbw not shl mov inc or neg shld mov stc cmc test jmpq clc pushq test jmpq push push xor xor fs insb add sub repz jmpq jmpq bt cmc stc test jmpq not dec and neg bt sub setl mov stos not mov jb callq jmpq seta xchg not jmpq jmpq jmpq jmpq jne jmpq ja mov cmp (bad) jp stc or loopne and loope mov divl mov insl pushfq or jmp es enterq std mov jmp test (bad) rex.XB (bad) sti cmpsb (bad) (bad) xor roll test divb lcall add (bad) lcall cmp xchg mov and xor jp clc (bad) sahf cmp xorl mov (bad) pop push (bad) (bad) (bad) push or lods add stos movsb movslq (bad) (bad) adc adc (bad) in cmp cmc rex.WRB xchg sub rex.WR in or and outsb imul mov adc cld xor adc rex.WRXB (bad) add lods in shll sub cmpsl xchg and (bad) push stc (bad) jmpq adc insb (bad) movsl and movsb (bad) iret (bad) enterq test (bad) (bad) jb push hlt rclb sbb sub mov outsl (bad) outsb rex.WRB sbbl callq (bad) fidivrl in ficoml adc (bad) jg out rex.WXB sti (bad) lcall (bad) xchg rex.WXB movabs rex.WXB (bad) (bad) (bad) sti cmp or mov imull jne sub add sub (bad) sbb rcrl roll incb retq sub pop test mov mov (bad) pop or sub add or lahf scas ss mov movabs sti xor insb pop sbb sahf rex rex.R rex.WR (bad) enterq and rex.WR fwait push add rex.RX pop jnp out idivb in xchg rorl and adc add or mov movsb movslq loop nop (bad) cmpsl ja add (bad) jle rex.RX rex.RX or loope xlat testb scas sub (bad) or (bad) ja std (bad) (bad) mov adcb add clc add lods push loope mov adc fisttp cmpsl jmpq rex.R fs and sub fsts xlat retq ja (bad) cmp xor (bad) (bad) insl adc callq imul jmp leaveq cmp lahf rex.WRB xchg push divl adc rex.R stc push bt stc add jmpq jmpq jne bt dec movzbw mov cmc cmp cmc clc or jmpq add jmpq bswap movsbw lea jmpq push movslq xor cs insb add (bad) (bad) repz xchg (bad) repz mov jrcxz (bad) jmpq jmpq je jmpq add jmpq rorb mov sub outsl pushq leaveq stc adc repz shrl (bad) mov (bad) jne cwtl rex.W rex.RX imul mov and in fmull paddd (bad) (bad) hlt rcll rex.WX cltd or add or adc xchg roll or test retq adc and add pop cld (bad) lcall addr32 scas cli (bad) lcall xor insl rex.WXB xor mov (bad) mov cmp xchg shlb jmp jb rex.B rex.RXB mov ljmp shrb (bad) fisttp adc jmp rex.WR jnp or xor lret lock (bad) adc (bad) (bad) xchg mov leaveq jno mov test mov mov (bad) je jrcxz mov and and sub xlat retq int jmp mov hlt movsl (bad) sbb cmpsb gs fwait mov add cmp and (bad) (bad) lcall jb and sti (bad) push xor mov jno orb pop std mov mov sti (bad) lcall pushq rex.WB sbb mov add or shlb push xor callq mov sbb cltd rex.WRXB ja and cmp js stos rex.RX (bad) icebp cmpl rclb adc xchg jbe or loopne lods jrcxz (bad) enterq mov jmpq add rex.WRX (bad) xchg insl add stc and (bad) in mov and xor loopne int mulb cli pushq xlat rex.B push xor test sbb xor rex.RB gs sub pop push xchg jrcxz imul cmpsl rex.WX imul sub pop cmp cli sub xchg cmp xchg std rex.RB ja jg or or (bad) lcall mov and jno movabs sbb jle pop jrcxz (bad) movabs mov iret nop callq and mov pop cmp sub mov rex.XB adc sti jnp rex.WRX outsl pop add xchg test fsubrl lret add lods add js test rex.R test imulb enterq rex.RX mov mov rex.RB cmp out (bad) movsl (bad) rex.RXB jbe adc xchg int3 loopne (bad) (bad) (bad) fild std (bad) (bad) jg mov rcrl movabs movabs add cwtl xor xchg or (bad) add and jmp retq pushq movabs and ja pop xchg or pop xchg jmpq insl sub (bad) xor jo ss ss rex.WXB out ds rex.WB (bad) (bad) addl rex.R rex.WRXB movabs push add sbb jmpq sub loope rex.WX data16 lock mov xchg cs pop jmp f2xm1 and (bad) out mov imul ss (bad) push jne (bad) cld xor jg mov xor insb mov fwait repz hlt je fsubs (bad) pop adc lret pop not (bad) rex.RXB insb rorl mov sarl std (bad) (bad) fild sbb je fwait incb mov retq repz jl pop cmp pop cmp xor (bad) outsb jge mull (bad) cmp int clc xchg rorl add sbb fwait push sbb (bad) cmc or mov icebp icebp rex.B xlat cs mov (bad) push xchg sub jo mov ds cmp cwtl rex.WRX mov stos out lcall jmpq mov mul jb in in movabs mov rorl shlb in je fidivl in insb and xchg cmp rex.WX std (bad) lcall stos jp mov push lret incl (bad) mov (bad) lcall clc mov (bad) lcall jne push (bad) sarb andl mov (bad) mov (bad) movabs clc pop cs stos jrcxz mov cmp rex.XB movslq xchg rex.W rex.RX mov (bad) xchg insb xchg rex.WRX rex.B sub addr32 sub fxch xor scas ss retq stc (bad) (bad) pop in push xchg retq addb pop mov (bad) xchg rex.W cmp movabs rclb (bad) add and cmc adc sti xchg cmp or xchg adc jmp jb in int3 mov mov int mov mov jg sbb (bad) rex.RX imul (bad) (bad) fisttp jne add push (bad) cmpsb gs mov mov or (bad) lcall sub frstor (bad) lcall insl popfq fidivl cmp mov (bad) xchg ds scas jle sbb xchg xchg ds retq rex.WXB stc (bad) (bad) rex.WRXB std in xor mov and fcmovne cmp mov (bad) jae push rcll rex.WRXB rex.WRXB add jno rex.WR es (bad) (bad) fnstsw sbb add (bad) mov xor adc ss or add (bad) lods fldl outsb je outsb (bad) jae cmc pop cmp xor movabs fmuls (bad) mov (bad) jmpq repnz jmpq jmpq sub mov movslq xchg cmp rorl (bad) rex.WRX or movabs adc pop ds insl adc xchg ja xchg pushfq cld mov xchg push repnz or (bad) (bad) (bad) jg (bad) test cmc pushfq jnp (bad) (bad) xchg imul pop rex adc (bad) sti (bad) nop movabs ja mov cmp fistpl adc pop mov or jmpq (bad) in jge rex.WR (bad) rex.RXB pop (bad) pushq push sbb mov (bad) add (bad) or lret pop (bad) xchg std adc sub lock (bad) cmpsl cmp mov cmpsb sti xor jrcxz clc (bad) popfq (bad) jl jrcxz add (bad) rex.XB jmpq rex.RB jg and and sbb or xchg test (bad) in cmp cmp rex.RB jge loope mov (bad) (bad) mov out lea sbb rex (bad) jg jle (bad) pop out or push rex.X rex.X xchg jns (bad) (bad) (bad) (bad) movsl xchg lahf add (bad) ja cmpl (bad) jns cmpsl push fisubrl scas (bad) std int3 ja callq (bad) adc mov jge cmp roll repnz idivb mov (bad) (bad) retq xor (bad) cwtl rex.WRX rex.WRX xor pushq add nop push mov adc cmp sub xchg leaveq pop xchg and mov incb test add cmp clc bt test mov cmp clc cmc ja test jae je stc stc stc add cmp cmp cmp jmpq jmpq jne jmpq jne ror stc sub btc shrd bswap stc mov sar add bt xor mov stc test jmpq je cmp sub bt bt clc jmpq jne not mov mov jmpq orb add add sub add xor add cwtl in addb add sbb sbb fist cs mov push jp std mov movabs retq mov cwtl sti jae (bad) rex.W ja mov pushq mov ds movsl test lret and pop (bad) (bad) (bad) (bad) fnstsw jmp movabs fadd lret fdivrp (bad) lcall fcoms xor (bad) lcall xchg testl fcoml mov retq add pushq xchg jne mov jne push repz push xchg and cmp lahf xchg addl clc xchg push test (bad) (bad) (bad) (bad) xchg jne scas (bad) xchg rex.W movabs mov and pop sub mov retq adc mov rcrb mov pop movsb rex.WR cmp xchg adc cmpsb push rex.WRX shll (bad) fdivp sub jno lret pop xchg add (bad) popfq test test jmpq stc cmp jmpq jmpq ja add and sub and btc add inc mov mov (bad) lock cs bt repnz jmpq pushq and pushq mov notl notb stos and scas not movabs push ja repnz and or add vsubpd cmpsl xor clc callq pop mov (bad) (bad) jg and adc fisubl mov rex.W rex.WRB insl xchg xchg cmc xchg cmp (bad) (bad) incl sti (bad) lcall leaveq add leaveq jb fcom rex.WRX in rex.RX imul fidivr rex.B ds (bad) fstl adc rex.RX mov popfq in (bad) ja (bad) test stos fistpl jo fdivp rolb xchg lret int3 add lahf out imul movslq fnstsw (bad) mov repz rex.B lods in push xchg push (bad) retq sbb data16 out jo roll insl mov icebp (bad) cltd rex.X es movslq movsl rex.R rex.WRXB int jae repz xchg (bad) sub mov in pop xchg (bad) add jb rcl jo pop mov loope jns xchg fmulp xor mov test mov mov movabs int (bad) lods xor rex.RXB faddl out in fild mov addl and (bad) outsl sahf ss sub retq and add (bad) xchg repnz jb jmp retq mov cli jb movb xchg pop xchg jnp and clc rex.RXB rex.RXB (bad) mov mov or mov stc mov jmpq lea rex.WR jno out pop mov mov rex fwait (bad) mov jae pushq (bad) xor mov mov enterq test jle sub divl jbe in rex.WX in jge add test xchg movsb jmp pop jno adc xlat mov std (bad) (bad) (bad) enterq mov (bad) lcall subl retq movabs xor insb mov out jno cltd in (bad) jl rex.RX mov (bad) (bad) adcb shrb pushq xchg push mov add movabs sbb rex.RB sbb fs cmp xor andb (bad) cmp push scas (bad) push cmp imul (bad) mov lods add xchg pop adc rex.WRX je mov and (bad) pop xchg in jo cmp jmpq jmpq lea jmpq je rcr lea cmc stc push ror sbb or bsf mov cmp sub movsbw setno lea jmpq ja stc imul cmp test add jmpq pushq jbe pushq jmpq test pushq cmc test cmp cmp jmpq fbstp mov addb insl retq sti adc adc (bad) jb mov xchg or adcl (bad) push xor pop decl sahf sub xchg cmp in callq orl rex.WRB fstpt xchg jno xchg (bad) mov test mov insb or xchg movabs (bad) mov mov fldt test (bad) cmp jb test sbb cmc rex.WRB mov (bad) (bad) (bad) mov and push xor (bad) out frstor sbb (bad) mov (bad) retq lret (bad) rex.WRB test (bad) push sbb mov retq sub jge or loopne test rolb movabs push lock push xor xchg stos xor sub (bad) in jne fstl mov (bad) scas rorl (bad) jg mov lret stos repnz jle jmpq ja jb cmp jmpq (bad) callq rex.WR incl jle or adcl (bad) clc pmovmskb lret fmull cmp and add xchg es or mov cmpsl incl sbb lahf cltd js lock xchg jae retq and fmuls rex.X stos sti (bad) pushq jno fdivrl (bad) pop mov outsl ja adc sub mov and mov sub fistpl (bad) mov adc (bad) lcall gs add lahf fwait sbb in lret hlt xchg and mov (bad) (bad) xchg (bad) mov (bad) mov jb sbb out jg xchg lods push out (bad) rex.WRX jmp jmpq mov xlat adc cmpsl test in movsl in jge (bad) sbb adc xchg cs adc and (bad) xor fsubr cmpsl data16 je or retq pop jo mov jle fldenv scas (bad) std cmp and cmpsb jg pop movabs jns jp (bad) (bad) (bad) (bad) lcall sub cmp pop cmc movabs rex.B pop add (bad) lcall int jg push sti (bad) lcall xchg mov callq enterq js mov rex.RXB ficompl mov cmp jo and xchg int cmp callq rex retq mov fistpll rcll stos repnz or jp (bad) pushq pop mov sub in fwait retq jrcxz rorl scas rex.RX cmp (bad) sbb push (bad) (bad) jg cmc jmpq je seto not bswap mov movsbl xchg movzbw lea bswap mov sete mov movsbw mov xchg lea movsbw jmpq jmpq rcr mov sar bsr mov sbb clc dec mov stc jmpq jmpq cmp test cmp test jmpq jmpq je cmc btr bsr push movsbl mov dec cmc sub movzbw not lea jmpq jmpq fcompl fwait mov xlat mov mov jg ds sub add (bad) push rex.R fwait jmp xchg add (bad) (bad) rex.WRX rex.WB movsbl pop stos adc or xor lods push sar (bad) (bad) mov popfq rex.R in test imul adc push std (bad) (bad) fbld mov outsb movsl sti (bad) lcall mov fbstp adc iret js (bad) cmp (bad) stc rex.WRXB mov lock in mov shrb or or and sbb pushq stos out xchg pushfq cmp and scas outsb sarl (bad) pop mov divl or addr32 movsl jge push mov jno out negb add sbb mov sbb addr32 cmp cli mov jmp clc (bad) cmp sub bt cmc pushq test test jmpq push not btc rcl bsf mov bswap push and push movsbw not cmp adc push stc rol push bswap jmpq adc and out (bad) (bad) fnstenv (bad) jge cmp mov test (bad) (bad) repz jb mov mov stos rex.X (bad) push add (bad) (bad) mov jne mov sahf rex.WR sbb data16 (bad) lcall (bad) mov mov add mov adc movsb out (bad) (bad) mov cmp (bad) lcall (bad) mov cltd icebp mov pop mov movabs (bad) movslq mov or cwtl (bad) scas jge jrcxz push and (bad) out in mov mov sbb cld and xchg leaveq (bad) mov mov rex.W (bad) stc push pushfq es test and rex.RB ds lea pop pop mov (bad) and es jl imul xlat jbe cmp mov (bad) jle callq bts xor add inc movabs neg mov clc js test cmpb jmpq jmpq mov lea movzbw pop retq je clc stc test test sub cmc clc cmp jmpq jmpq mov jmpq je stc sub cmc cmc cmp jmpq jmpq jmpq ja cmc sub add rcl ror shld add clc ror mov clc not mov jmpq jae bt cmp jmpq add add ror stc mov jmpq cmc not cmc sub test stc clc test cmp not lea not pop jmpq jmpq callq ror shl add sbb inc shr shrd mov cmc bt cmp bt cmpb jle jne rol neg stc jmpq bt stc test jmpq add cmc stc cmp jmpq je stc cmc cmp retq je xchg movabs mov movsbw movsbw jle mov mov lea mov movzbq lea jmpq callq bt cmc jmpq mov and (bad) je xchg cmp adc fdivrs and gs mov push mov lcall ja loop cld (bad) lcall cmpsb insl (bad) fdivrs jrcxz jb push stos rex.WRX (bad) (bad) (bad) cmp adc jg cld sbb jg and fcompl lock stos xchg and sub mov lahf (bad) (bad) cltd cmp movabs (bad) fidivrl rcll in (bad) cmp xlat (bad) repnz imul lods sub je pop jmpq js pop jae (bad) jg mov (bad) and movabs sbb xchg adc retq (bad) (bad) adc xor out mov adc imul xor and xchg mov movsb movslq retq (bad) mov jb mov jmpq pop and adc pop imul movabs ficom (bad) or test add (bad) lcall div rex.WRB outsb rex.WB mull mov popfq adc cld (bad) (bad) lcall cli (bad) lcall adc divl loope enterq (bad) movsl push nop rex.RB (bad) pop movl data16 adc sbb (bad) xchg in jl adc movabs ja sub jl xchg mov cmp lea mov rex.WX repnz (bad) jle (bad) sahf (bad) rex.WRX ss (bad) xchg jbe xor cwtl mov jle add or xchg sub jns add ror movzbw movsbw ror neg jmpq push jmpq jmpq push jmpq bt test sub cmc test jp shl jmpq popq jmpq jmpq push lea jmpq push jmpq mov jmpq not push bswap movsbw jmpq clc test neg jmpq clc add jmpq jmpq jbe mov jmpq jmpq mov jmpq mov jmpq mov jmpq popq jmpq not jmpq xor clc bt stc cmp jmpq clc cmp jmpq jmpq jmpq pushfq jmpq clc jmpq jmpq mov jmpq jmpq shr mov bsr setnp mov stc jmpq jmpq jmpq popq jmpq mov jmpq push jmpq bt neg cmc not cmc jmpq je jmpq sub jmpq jmpq jmpq push jmpq inc jmpq jmpq jmpq jmpq clc add cmc bt jmpq jmpq push jmpq jmpq push jmpq je stc cmp je test addl cmp cmp cmc sub bt xor cmp clc cmp xchg test test cmp jmpq jmpq push jmpq popq jmpq popq jmpq push seta xchg xchg push bswap not push sets lea push seta jmpq pushfq jmpq rol clc add test stc test test add jmpq mov jmpq mov jmpq jmpq push jmpq popq jmpq rol jmpq test neg jmpq jmpq setno mov jmpq xchg repz rol rcr pushq ror jp btr movabs btr clc not mov not bts push movsbw sets btr mov btc movabs rol rex.W cmc sub out (bad) mov (bad) sbb shr bswap rol mov xadd bswap rcl shl sub not and xchg dec and mov shld lea data16 repz movabs xadd dec add setle shr not bt mov bsr dec setp add lea movsbw rcr mov sete sub movzbw inc movsbq rcl sbb btc add rcr not or ror not stc add shld sub lea inc bswap movsbw movzbq mov movsbw movsbw mov jg inc test test stc add jmpq jmpq push jmpq push jmpq push jmpq jmpq setp movsbq push not sete setae movzbl mov jmpq not mov movzbw mov test test cmp add jmpq cmc bt neg jmpq jmpq push jmpq jmpq jmpq jns stc add jmpq jmpq jg mov jmpq jmpq jmpq movzbl movzbl movzbw mov bt neg stc bswap mov stc cmc cmc not test bt not cmp cmp and jmpq mov jmpq mov jmpq push jp push jmpq jmpq jmpq push jmpq bt add jmpq mov jmpq jmpq push jmpq push jmpq inc bt jmpq add bt cmp add cmc rol jmpq bt test cwtl clc test sub jmpq push jmpq jmpq pushfq jmpq js mov jmpq movzbq lea movsbw movzbw mov mov jns inc bt clc jmpq push jmpq jmpq jmpq push jmpq pushfq jmpq clc bt jmpq clc add jmpq jmpq mov jmpq mov jmpq jg sub jmpq jbe rep cmc pop rcl test neg movsbl pop jb cmc cmp popfq jmpq mov jmpq jmpq sub cmp add jmpq jmpq jmpq jmpq jmpq jmpq xchg neg btr mov rcl bt or sar mov jmpq push jmpq sar mov bt xor adc mov test sub jmpq jmpq mov jmpq push jmpq push jmpq jmpq xadd add or cmc mov sbb xor mov jmpq jb push jmpq je stc cmp jmpq stc stc cbtw bt jmpq inc stc cbtw jmpq push jmpq jmpq push jmpq push jmpq pushfq jmpq movsbw lea push bswap setns push not jmpq jmpq mov jmpq push jmpq clc test jo shl jmpq shl jmpq push jmpq clc add bt add cmc cmc cmp cbtw jmpq inc mov clc stc cmc cmc add jmpq jmpq js cpuid jmpq push jmpq not inc add rol add bt stc not rol add setp sub bswap inc movzbq dec movsbl inc mov jl inc stc bt bt jmpq jmpq push jmpq push jmpq push jmpq mov jmpq jmpq add jmpq add jmpq sub jmpq clc cmp bt jmpq jmpq push jmpq jmpq jmpq jmpq jmpq movsbl push not repz btr pushq movsbw movsbq not rcr movabs bswap btc mov mov cmc push cmc mov setb sete rol cmc sub xadd bswap xadd mov shld ror add bsr sub bswap dec bt and btr mov inc rcr lea jmpq mov jmpq jnp push jmpq jmpq jmpq mov jmpq pushfq jmpq add jnp inc jmpq jmpq movabs shr cmp add bsf mov rol sub shr neg add or rcr sub mov dec movsbw inc mov sub movsbq inc sbb add bsr ror setb setge not jmpq mov jmpq jmpq popq jmpq jmpq jmpq jmpq push jmpq mov jmpq jmpq push jmpq or rdtsc jmpq push jmpq movzbl bswap jmpq jmpq je test addl cmc clc bt stc sub cmc cmc bt sub test cmp test xchg stc cmc jmpq push jmpq jmpq jmpq setnp push not not push not xchg lea movzbw push setnp movsbq bswap not repz rol stc not xchg pushq stc movabs setne movzbw mov bts push bts rcr clc mov bswap bswap jmpq push jmpq push jmpq mov jmpq jmpq clc test sub jmpq popq jmpq pushfq jmpq jmpq popq jmpq push jmpq push jmpq jmpq rep btc bsr pop movsbl jmpq jmpq jmpq push jmpq jmpq test rcr adc add and (bad) icebp movzbw bts sub not movzbq dec mov jmpq push jmpq push jmpq cmp cmc popfq jmpq rol and test sbb mov clc test jmpq pushfq jns popq jmpq jno mov jmpq push jmpq jmpq stc clc jmpq js jbe btr clc rcl lea test bt jmpq movzbq push bswap jmpq inc jmpq push jmpq jmpq add adc bt mov jmpq jmpq jmpq movsbq push not push movsbw movzbw jmpq lea not push jmpq mov jmpq jmpq jne dec sub mov jmpq push jmpq push jmpq jmpq jmpq jmpq mov jmpq push jle push jmpq jmpq jmpq push jmpq stc jmpq inc clc stc cmp cmp add jmpq sub jl mov jmpq cmc cmp shl jmpq jmpq popq jmpq mov jmpq push jns push jmpq ror mov jmpq jmpq jmpq jmpq mov jmpq push jmpq bt jmpq mov setbe mov jmpq push jmpq jmpq mov jmpq push jmpq jmpq popq jmpq jmpq push jmpq lea push mov xchg not jmpq jmpq jmpq stc ror clc clc push (bad) testl cmc rol (bad) lock fmuls adc add cmp jmpq mov jmpq add jmpq test add jmpq mov jns pushfq jmpq add jmpq mov jmpq jmpq clc test clc sub bt stc add jmpq mov jmpq jmpq jmpq jmpq sub clc ror clc clc bt xor cmc jmpq jmpq mov jmpq mov je pushfq jmpq cwtl jmpq jmpq pushfq jmpq jmpq push jmpq shr jge mov jmpq push jmpq jmpq mov mov movzbw push xchg push setp bswap not not push jmpq popq jmpq sbb bsr rol rol movzbl cmc bsf clc movzbl xor inc cmp neg lea bswap mov movzbw dec sar bswap btc bt xor bswap xor or shrd mov stc jmpq jmpq push jmpq bt clc add clc stc clc jmpq jmpq test sub clc add jmpq jne and sbb test xorb lea mov pop jmpq jmpq push jmpq es mov jmpq push jmpq jmpq push jmpq jmpq push jmpq lea jmpq bt sub jmpq add jl mov jmpq jg mov jmpq mov jmpq popq jmpq jmpq push jmpq jmpq cmp test add jmpq bt clc sub bt cmp cmpl jmpq push jmpq popq jmpq pushfq jmpq jmpq setno bswap pop movsbw movsbl lea pop lea pop movzbw movsbl jmpq rol stc jge neg jmpq push jmpq sub cmc test bt sub jmpq sub jmpq push jmpq jmpq jmpq push movsbw push jl lea push movsbw movsbl lea setne push bswap movzbq jmpq push lea sub bts adc bsr pop cmp cltq cmc bt stc cmp sub stc cmp stc bt mov bt bt sub jmpq jmpq push jmpq mov jmpq bt bt sub jmpq mov jmpq push jmpq jmpq cmc cmp sub cmc bt bt ror clc stc jmpq jmpq jmpq popq jmpq jmpq jmpq popq jmpq popq jmpq push jmpq popq jmpq stc add jmpq jmpq clc seto neg mov clc add jbe mov jmpq pushfq jmpq push jmpq jmpq jmpq jmpq push jmpq movzbl jmpq push jmpq jmpq push jmpq push jmpq mov jmpq push jmpq popq jmpq clc sub clc and jmpq push jmpq jmpq jmpq push jmpq pushfq jmpq bswap movabs bswap mov mov lea lea bts movzbl push rcr xchg mov lea rol bt ror clc movsbw sub dec mov bsr bswap setns adc bt mov movzbw sub shrd bsf bt and rol and ror mov rol adc lea clc movzbl sar shr movabs and add btc sbb cmc movsbw mov rcr movzbl inc add mov mov lea adc neg movsbw sub dec jmpq callq bswap not mov jmpq jmpq push jmpq test clc cwtl test bt cltq jmpq jmpq jmpq jmpq shld mov stc mov bt sub jmpq jmpq cld cld jmpq push jo push jmpq push jmpq mov jmpq jmpq jmpq push jmpq jmpq shl bts xor rol bsr bswap mov cmc add jmpq bts rol rcr shl mov cmc test cmp jmpq jmpq jmpq push jmpq jne divl jmpq push jmpq not not bts mov lea jmpq push jo push jmpq jmpq jmpq mov jmpq inc cmp cmc cmp jmpq xchg movsbw push lea movsbw push lea push movsbw bswap push lea movzbl push bswap sets push mov xchg push mov mov not push xchg setne push xchg bswap not repz movzbw movzbw pushq cmc clc movabs sete mov ror push jmpq cmp add jmpq stc add test stc cbtw jmpq push jmpq popq jmpq test test bt cmp mov clc jmpq not movzbq movsbl mov jmpq jmpq bts shl ror movzbl cmp cmc sar add add movsbw jmpq jmpq cmp clc shl jmpq jbe push jmpq push jmpq je jmpq jmpq jmpq push jmpq mov jmpq jbe mov jmpq jmpq push jmpq stc stc bt cmp jmpq jmpq rol test dec shr sub shrd sets shld bswap btc mov movzbw inc data16 (bad) or sub data16 lock shr shr and xchg mov lea shrd ror or lea movzbw rcr movabs sbb add add test btr lea mov and bsf clc add rol add shld mov clc xor inc stc sub bswap mov inc xor add movsbw not not add sbb and sub mov lea inc movzbq movsbw bswap inc mov jmpq clc cmc stc add jmpq mov jmpq push jmpq push jmpq cmc shld sub mov sub xor mov cmc cmc jmpq jmpq jmpq mov jmpq jmpq mov jmpq bswap not movsbw movzbw inc not bswap not sub add ror shl mov test cmc jmpq jmpq jmpq mov jmpq jmpq jno push jmpq popq jmpq jmpq jmpq pushfq jmpq jmpq push jmpq lea pushfq movsbw lea push lea mov not movsbq not mov lea std std jmpq jmpq jbe mov mov setne mov jmpq bt add jmpq popq jmpq push jmpq jmpq movsbq jmpq je push jmpq jmpq jmpq jmpq push jmpq setbe movsbw not pop not movsbw movsbl pop jmpq jmpq test btr add movzbl and (bad) repnz add bsf shl inc sub stc stc sub mov bt ror data16 repnz (bad) test cltd retq bsf bsf sbb add btr shld (bad) repnz mov stc cmp jmpq jmpq jmpq push movsbw setle movsbw mov push not mov movsbw push movsbw not lea jp push jo push lea lea movzbl lea push xchg jmpq popq jmpq push jmpq jmpq jmpq push jmpq divl jmpq add jmpq jmpq push movzbw push movzbw seto push bswap push mov movsbw jg push xchg movzbq lea repz ror movsbw pushq rcl lea rcr btc movabs bts bswap mov not rcl not bts push rcr clc mov rcl rcr setbe stc rol and xadd sub dec bswap inc mov bsf xchg sub bsr movzbw and shr bswap shrd xchg mov sub ror add setb lea rcr neg mov rcl movabs inc sar shl add bswap mov lea stc not add lea btc mov shl shr mov (bad) icebp sub inc movsbw inc neg cmc rcr add stc btc bsf not btc shld bt add add rcl sub inc jmpq jmpq jmpq jmpq bt test add jmpq jmpq pushfq jbe popq jmpq jmpq push jmpq stc test shr jmpq cbtw shrd shrd shrd movzww stc add stc lea clc stc rol jmpq mov jmpq mov jmpq push jmpq jmpq push jmpq push jmpq mov jmpq mov jmpq jmpq push jmpq jl mov jmpq jmpq movzbw push jmpq mov jmpq jmpq pushfq jmpq jmpq jmpq jmpq jmpq push setae push not push not lea movzbl push setbe mov push bswap movsbw bswap push movzbw xchg push movsbl lea bswap push xchg bswap repz ror rcr pushq stc xchg movsbw movabs rol jmpq movzbw dec btr lea cmp test cmp jmpq jmpq push jmpq mov jmpq sbb sub rcl inc and clc sbb add movzbw mov xor add bsr shld lea cmp mov bsf sbb movabs bt add neg movzbq shr mov btr inc xadd add movsbl shr btr mov adc setle neg sub mov inc bsf movsbw rcr add movsbw dec bt dec not jmpq jmpq jmpq xchg mov inc inc shl adc xor cmp bts sets rcr neg dec bswap inc dec shrd not btc neg xor jmpq jmpq pushfq jmpq bt lea cmc stc stc clc test jmpq ja jmpq jmpq jmpq jmpq jmpq mov jmpq jmpq jmpq jmpq stc cmc bt cmp jmpq jmpq push jmpq jmpq popq jmpq jmpq mov jmpq push jmpq jmpq push jmpq pushfq jmpq jg lea not setne not jmpq jmpq cmp sub jmpq mov jmpq push movzbw push jmpq test and test clc cmp jmpq mov jmpq bt neg jb inc jmpq cmp clc add jmpq pushfq jmpq push jno push jmpq jmpq push jmpq mov jmpq popq jmpq jmpq je mov not mov jmpq std cld jmpq mov jmpq bt cmc sub clc cmc clc stc sub jmpq cmp jmpq add jmpq push jmpq mov jmpq push jmpq push jge push jmpq mov jmpq mov jmpq js mov jmpq inc bt clc add jmpq popq jmpq push jmpq sar dec mov shr mov clc bt add jmpq popq jmpq test cwtl jmpq mov jmpq push mov mov jmpq mov jmpq jmpq jmpq test cmp add std test popfq jmpq pushfq jmpq push jmpq jmpq push jmpq jmpq jmpq jmpq mov jmpq jmpq lea mov jmpq jmpq popq jmpq setg push xchg lea push lea xchg not push lea setge jmpq inc test test add stc jmpq jmpq jmpq push jmpq jmpq jmpq bt test stc add cmp add jmpq pushfq jmpq jmpq push jo push jmpq (bad) (bad) sbb xorl addb add (bad) add add add jo sbb (bad) xor add (bad) stc sbb mov add add (bad) sbb or add icebp add add add movabs es add add sahf or add add (bad) stc sbb sub add add cmp sbb (bad) adc add add xorl addb add pop lcall addb add clc or add add mov add add addb add clc and add add movb add add retq xor add add movb add add clc and add add sar sbb movb add add or sbb add add push negl addb add (bad) adc add add adc sbb add add out sbb add add pop lcall addb add (bad) (bad) sbb add add movabs negl addb add jo sbb icebp add add add test add add sbb shrb sbb add add movabs es add add out xor add add xorl addb add (bad) sub addb add pop lcall addb add cmp sbb fsubs sbb add add adc sbb add add jo sbb retq xor add add sar sbb loopne sbb sub sbb add add out cs add add shrb sbb add add mov sbb add add insl sbb addb add shrb sbb add add mov sbb add add mov add add es add add sti add addb add jge sbb add add mov sbb add add (bad) and add add (bad) xor addb add (bad) stc sbb (bad) and add add (bad) add add add movabs or add add jrcxz sbb add add frstor sbb add add (bad) sub addb add (bad) xor addb add stos es add add (bad) adc add add (bad) sub addb add cmp sbb fidivl addb add mov sbb add add out sbb add add out cs add add (bad) (bad) sbb add add (bad) sub addb add xorl addb add (bad) and addb add (bad) sub add add rex.WX sbb sub sbb add add (bad) adc add add jrcxz sbb add add or sbb add add loopne sbb out sbb add add sub sbb add add loopne sbb frstor sbb add add shrb sbb add add (bad) and add add out cs add add out cs add add (bad) and addb add movb add add (bad) (bad) sbb (bad) sub addb add test sbb add add (bad) and add add insl sbb addb add mov sbb add add xor add (bad) sub add add push negl addb add insl sbb addb add (bad) sub addb add (bad) sub addb add sti adc add add push negl addb add insb sub add add sub sbb add add adc sbb add add (bad) xor addb add clc or add add (bad) sub add add add add add xor add add clc and add add stos es add add sahf or add add jrcxz sbb add add cmp sbb add add add sar sbb push negl addb add out cs add add or sbb add add xorl addb add shrb sbb add add movabs adc add add (bad) adc add add retq xor add add add add add out xor add add mov add add addb add sbb addb add jrcxz sbb add add (bad) (bad) sbb add add add sbb add add push add add add (bad) and add add (bad) stc sbb mov sbb add add adc sbb add add jge sbb add add (bad) and add add xchg and add add lods or add add adc sbb add add movb add add sub sbb add add sti adc add add movabs xor add mov sbb add add fsubs sbb add add (bad) add add add movabs hlt sbb (bad) sub addb add icebp add add add xor add mov sbb add add (bad) and add add (bad) adc add add sub add add (bad) sub addb add (bad) xor add mov add add sbb add add (bad) adc add add jge sbb add add push negl addb add insl sbb addb add retq xor add add jo sbb add add add cmp sbb fsubs sbb add add test add add (bad) sbb xorl addb add or add (bad) xor addb add mov sbb add add sti add addb add stos es add add (bad) (bad) sbb cltd xor add mov add add add add sbb add add sbb addb add (bad) sub add add (bad) adc add add sub add add (bad) and add add cltd xor add test sbb add add (bad) (bad) sbb (bad) xor add fidivl addb add fsubs sbb add add out cs add add sti adc add add push add add add mov add add (bad) sbb add add rex.WX sbb add add add adc add add and add add xchg and add add fidivl addb add sti adc add add (bad) (bad) sbb add add add and add add (bad) add add add loopne sbb insb sub add add rorb sbb add add (bad) (bad) sbb add add frstor sbb add add clc or add add test add add add add add (bad) and addb add insl sbb addb add adc add add (bad) sbb add add insb sub add add cltd xor add sbb addb add out sbb add add (bad) add add add push add add add movabs (bad) sbb add add adc add add mov (bad) jmpq callq inc setl notl sub mov jns cmc cmp cmp sub cmc clc stc and jmpq jmpq mov jmpq jmpq jmpq jmpq sub movzbw mov btr or ror shld mov jmpq popq jmpq jmpq jmpq jmpq popq jmpq jmpq std std cld popfq jmpq bt rol btr sbb not movsbl sub bt bsf neg bswap bsr data16 cmc movzbq mov mov stc sub rcr xor shr and bswap bt shl mov xor bt dec bts lea movzbl stc movabs test adc add sbb mov stc bsf mov xor add bt bswap setnp mov stc sub lea movzbw bswap inc btc not add inc shl neg not (bad) cmc add (bad) roll setae cmc mov bsr sub movsbw bswap movzbq mov inc not mov mov jmpq jmpq push jmpq test mov rol add jmpq push jmpq callq jmpq movsbw jg bswap push setge push bswap not xchg lea push movsbl push xchg not not push not lea push xchg mov push xchg push jmpq cmp test stc and jg mov jmpq mov jmpq jmpq jl push mov push jmpq jmpq jmpq mov jmpq mov jmpq jmpq neg xadd mov bt adc sar mov stc clc test sub stc cmp test jmpq rol rol sub bts movsbw inc dec bswap btc add shld clc mov clc sub bsf xor xor (bad) icebp add in add lea mov sub rcl xor shrd lea movzbq neg cmc add movabs cmc adc xor stc add btc mov sbb shrd shld add bt inc sub stc mov inc sub movzbw inc rcl rcl add shr not rol add movzbw shl test sub seta movzbq mov mov jmpq popq jmpq xor js dec mov bt cmc add ja pushfq jmpq mov jmpq bt mov cmc stc test sub cmc jmpq jne bt jmpq jae lea jmpq btc xor rcl mov rcl cmp cmc sar mov jnp cmc stc cmp sub cmc test stc cmp shr jmpq stc cmp cmp addl clc sub test clc cmc test xor stc bt xchg test cmp jmpq jmpq pushfq jmpq rcr notq bsr dec bsr or mov clc sub cmc cmp bt test and jmpq push jmpq jmpq jmpq setns mov ror bts rcr xchg push bt btr bt mov mov jb bswap rol data16 hlt add out data16 cmc cmc sub not add cmp bswap btr stc jmpq stc shrd jmpq jmpq popq jmpq jmpq jmpq stc mov shl setne add mov setno seta jmpq lea jmpq rol mov jmpq push jmpq mov jmpq mov jmpq jmpq push jmpq mov jle mov jmpq popq jmpq ja movsbw xchg bsf mov btc lea shl sar sub movzbq btr sbb not lea rcl dec lea and sub test sub lea mov mov jmpq jmpq jmpq push jmpq jmpq jmpq mov jmpq mov jmpq push jmpq jmpq not bsf dec inc mov clc cmc stc sub jmpq clc jmpq or shl setae cbtw mov bt cmc stc add stc cmc je rol test jmpq jmpq jmpq rol jmpq push jmpq sub bswap mov clc sub jmpq jmpq mov jmpq sub bt clc cmp mov cmc stc test jmpq ja jmpq jmpq jmpq pushfq jmpq popq jmpq cwtl cmc sub jmpq push jmpq clc jmpq popq jmpq lea jmpq jmpq push jmpq jmpq push jmpq jmpq test cmp jmpq push jmpq stc ror stc cmp neg bt cmc not cmc cmp stc test sub js cmc test cmc mov bt clc jmpq jmpq pushfq jmpq popq jmpq rep bts and and pop bsf bts bts pop jmpq jmpq shld shr mov add mov jmpq pop movsbq movzbw pop movsbw pop retq push jmpq jmpq ja mov jmpq jmpq jmpq push jmpq jmpq cmp lea cmc add stc sub jmpq mov jmpq cwtl bt cltq jmpq jmpq jmpq lea jmpq je clc test test test cmp jmpq add bt jmpq jmpq inc bt cmp cmc bt add test cmc stc sub cmp sub jmpq je movsbw mov movsbq setle mov jmpq pushfq jmpq jmpq pushfq jmpq jmpq jmpq stc cmp jmpq push jmpq mov jmpq push jmpq jmpq jmpq jp push jmpq push jmpq setl bswap movsbw mov jmpq lea bswap mov jmpq jmpq jmpq jmpq js push jmpq inc cmc add jmpq jmpq movzbw btc rcr btc movzbl sub or bsr setae sub bswap bts rcl jmpq pop movsbw pop jmpq jmpq push jmpq jmpq jmpq and not and sub movzbl test stc lea bt add cmc sub clc jmpq jmpq jmpq jmpq jmpq jmpq push jmpq jmpq jmpq push jmpq push jmpq mov jmpq jmpq popq jmpq xchg pop xchg movzbw not pop bswap pop not xchg lea pop jmpq jmpq pop jmpq rcr btc bsf mov ror not pop or bsr movzbw pop cld not popfq jmpq jmpq test cmp stc bt pushq jmpq mov jns lea jns mov jmpq push jmpq seto movzbl mov (bad) hlt mov clc jae stc sub cmp add jl pushfq jmpq jne add bswap xorb movzbq not pop jmpq push jmpq jmpq popq jmpq mov jmpq lea not lea push movsbq push mov movsbw push jmpq jmpq jmpq bswap mov adc mov cmp shrd mov bt not bt cmp not jnp sub cmc stc je and jp mov js pushfq jmpq popq jmpq add jmpq push jmpq pushfq jmpq jmpq jmpq push jmpq sub clc bt stc bt rol jmpq bt clc stc bt rol bt stc stc add test test add cmp cmc stc cbtw cmp test cwtl stc sub jmpq push jmpq jmpq mov jmpq push jmpq push jmpq mov jmpq mov jmpq clc cltq cmc test stc clc sub stc sub jmpq cmc add jmpq push jmpq jmpq cmc mov mov cmc bt jmpq jmpq jmpq jmpq sub jmpq mov jmpq jmpq jmpq jmpq push jmpq jmpq jmpq push jmpq stc and jmpq jmpq jmpq jmpq inc clc clc test add cmc clc test cwtl bt sub jmpq jmpq dec bt ror jmpq jmpq push jmpq push setne push seto sete setge bswap push jmpq mov jmpq push jmpq jne movzbw btc bsf xorb setno not jmpq jmpq pushfq jmpq inc cmp add jmpq inc movsbl sar not neg lea movzbq sbb neg bsr lea sar add mov mov jmpq jmpq jne clc mov stc and test cmp jmpq push jmpq jmpq movzbw or mov movsbw shr not mov seta not mov stc test add clc cmc shrd jmpq jmpq push jmpq jmpq push jmpq inc btc mov movzbw not and mov sar sub mov cmp add test test test shld jmpq data16 lock xadd not mov bt ror bswap mov cmp jmpq push jmpq mov jmpq jmpq jmpq clc bt clc shl jmpq push jmpq popq jmpq jmpq sar clc xadd stc mov adc shl mov rcl mov clc stc sub jmpq jmpq inc stc jmpq add cmc bt rol jmpq pushfq jmpq bswap test btc mov cmc test add jmpq push jmpq mov js pushfq jmpq push jmpq jmpq jmpq jmpq ja popq jmpq bt bt cmc ror test cmc cmp xor stc cmc cmc add stc mov clc clc sub jmpq popq jmpq push jb push jmpq jmpq (bad) lock mov rol mov test sub cmp cmp cmc clc shr jmpq je jmpq jbe jmpq inc clc add clc test stc clc cwtl cmc stc stc bt cltq cmp sub cmc bt sub jmpq jmpq popq jmpq jmpq push jmpq jmpq pushfq jmpq jmpq inc cmc add jmpq mov xor mov stc mov clc cmc add jmpq push jmpq push jmpq jmpq bt sub jmpq push jmpq popq jmpq jmpq jmpq dec jmpq mov jo pushfq jmpq bswap not test mov shr sar rcr mov clc sub cmp test test jmpq jmpq mov jmpq je cmp cmp jmpq pushfq jmpq jmpq pushfq jle popq jmpq cmc stc lea test test clc stc sub jmpq mov jmpq jmpq jmpq push jmpq jmpq inc jmpq push jmpq ror add rol setge bswap stc sub jmpq mov jmpq ja ja je jmpq mov jmpq pushfq jmpq jmpq jmpq jmpq push jmpq push jmpq movsbw mov jmpq jmpq push jmpq push movzbq not push jmpq jmpq mov jmpq push jmpq push jmpq jmpq jmpq push jmpq jmpq je lea movsbq setp mov mov jmpq popq jmpq pushfq jmpq push jmpq push jmpq jmpq jae inc bt cmp cmc add jmpq mov jmpq jp test clc add jo bt stc rol clc clc jmpq jmpq bswap (bad) hlt stc mov cmc clc bt add jmpq mov jmpq push jmpq inc movzbl jmpq mov jmpq jmpq jmpq mov jmpq pop bt bt bt bt popfq jmpq pushfq jmpq pushfq jmpq jmpq jmpq sub adc bts sar not sub sub pop cmc bt sub jmpq jmpq jmpq push jmpq jmpq mov jmpq push jmpq jmpq sub jmpq mov jnp pushfq jmpq and mov xadd sbb sub setnp xadd dec data16 (bad) or ror clc add mov xchg lea shrd movabs add add btr btr sub sub mov stc btr add add bsr inc bts mov not lea sub not inc xor add and not xor add bt sub lea setg movzbq bswap jmpq popq jmpq popq jmpq jmpq jmpq push jmpq popq jmpq bswap not movzbl mov jmpq cmp cmpl jmpq jne or mov test cmp stc and test cmp jmpq push jmpq jmpq jmpq jle mov jmpq push jmpq jmpq je jmpq inc clc bt sub stc jmpq jmpq mov jmpq jmpq jmpq cmc xor clc test xchg test stc stc sub jmpq jmpq jmpq push jmpq jmpq jmpq shld movsbw mov cmp sub jmpq cmc stc cwtl bt cltq clc sub cmc clc sub jmpq push jmpq inc cmc stc cmp jmpq pushfq jmpq jmpq cpuid cmc sub jmpq push jmpq pop movzbq pop jmpq jmpq mov jmpq push jmpq jmpq jmpq mov jmpq jmpq jmpq lea jmpq bts data16 lock mov btc mov cmc test add jmpq push jmpq pushfq jmpq push jmpq push jmpq inc jmpq push jmpq jmpq jmpq movzbw lea mov mov lea adc movsbw cmc mov setno mov cmc sub bt shld jmpq jmpq bt shl shr mov (bad) repnz stc mov bt jg clc add jae mov jmpq cmp jmpq jmpq jmpq push jmpq clc clc sub stc bt shr jmpq je ror stc xor cmp bt bt add bt mov bt sub jmpq mov clc neg mov bt shrd add inc inc stc add btr ror btc rol cmc and rol movzbw add not bt bt add movzbw shr movzbl stc mov cmc movl clc stc or jmpq push jmpq jmpq rcl stc bt mov clc adc jae rol mov cmp sub bt cmc jae shl jmpq not neg mov jmpq push jmpq js push bswap mov mov mov cld cld jmpq test setge mov cmp cmc cmc cmc add jmpq jmpq push jmpq stc add test stc jmpq push jmpq popq jmpq mov jmpq inc test add stc cmp clc jmpq jns inc jmpq popq jmpq add stc bt clc rol clc stc jmpq jmpq test jmpq mov jmpq pushfq jmpq je bswap not mov jmpq jmpq ror movzww stc test test jmpq jmpq push jmpq pushfq jmpq repz mov movsbw pushq ror mov bswap movabs bswap mov ror movzbw mov push xchg mov mov bts rol rol xadd cmp sub bt (bad) notl add bswap shl btc data16 cmc or in out rol jmpq movsbw setp movsbw setb mov jmpq rcl test movzbl and cmc movzbl add movsbw inc btr stc not not neg and movzbw shl btr add shld bsf neg stc add rcl xor cmc sar mov test cmp clc add jmpq ja movzbw mov jmpq jmpq jmpq push jmpq jmpq jmpq push jmpq pushfq jmpq je stc cmp clc jmpq jmpq jae push jmpq clc lea clc cmc clc cmp test jmpq clc addl cmp cmc stc cmc push bt sub jmpq jmpq jmpq adc cmp sub mov neg rol mov test cmc stc test sub clc imul jmpq jmpq push jmpq jmpq shr mov cmc cmc sub bt shl jmpq jmpq jmpq push jmpq mov jmpq mov jmpq jmpq pushfq jmpq jmpq mov jmpq jmpq jmpq push jmpq jmpq clc stc add bt jmpq push jmpq jmpq bt add stc clc cmp cmp sub jmpq lea movsbq seto mov jmpq jmpq mov jmpq push jmpq 