add add dec add add add add add add add add add xchg dec add pop je add and add add and add add add addb add add and add add add addb add add sub add push sub add add sub add add add add sub add add sub adc add jmp add adc add add add inc or add inc add add add add add add add push add add add add add add add add add rolb add adc add add add mov or adc stos push add popa pop and popa inc add add add adc xchg adc add add in adc pop or add js (bad) incl mov add sbb mov add sbb add add or or add pop (bad) (bad) incl pop pop or or pop or add inc (bad) (bad) decl sbb or adc cmp (bad) call add add add jmp add and (bad) incl add adc pop add add add add adc add add pop jle add add or outsb adc inc or add flds add je add dec add add add jl add add add out add aaa add add add add add add add adc and add add add add add cmp add cmp add roll add xchg pop pop inc pop pushf pop adc sub pop bound add push cmp (bad) incl add pop pop push popa inc add add or add pop adc cmp (bad) call or mov add xchg and sub adc (bad) adc or pop or push cmp (bad) ljmp add add or or push cmp (bad) (bad) incl pop pop or faddl add adc das add add add adc pop pop xor adc and add add push cmp (bad) (bad) call pop and adc and add add pop pop pusha xchg adc cmp (bad) (bad) incl sub pop pop pusha xchg adc cmp (bad) (bad) incl add xor add add add add adc add add sbb inc or add add add add add add add add pop add add add add add add push or and add xchg and add add stos add add add add stos add add pop popf pop or movsl add popa pop aas pop push popa inc add add add or (bad) sbb cli or addb add add cmp (bad) incl mov add sbb sub pop pop or pop sub sbb cmp (bad) lcall cmp (bad) ljmp push adc add add add add add add add add add add add add push add push sub jg (bad) call xor add add add add jle add add push jle add add pop sub add add add add add add add add add add add or add or add add add popa add add pop add push es push or adc popa pop dec pop push popa inc add add add adc and add add add in adc pop or add add add outsl push add or adc and add add add add incl pop pop or add add add or add or pop or jle add add xor add add xor pop pushf xor pop adc lcall sub adc and add xchg and add pop adc incl je add add adc pop push xchg and adc incl adc push add add add and inc add add add add add add add add add add add or add es or fsubl cmpb add and add add add jle add add inc jle add add inc xchg jle add add jns popa pop jbe pushf sub add add add sub or add sub adc add inc add add add adc add add sub pop inc add add add add add or add or pusha xchg or fldenv test add add add add add sub add cmp sub add or rorb add push sub adc add add add pop add adc add add push jle add add pop sub add add add add add add add add add add add add pop add add add add or add sbb add adc and add add add add popa pop pop pop push popa inc add add adc add adc and add xchg and inc add pop adc stc adc adc and and add incl mov add sbb add or pop or add incl pop pop or jle add or add mov add or sbb xor pop or add lcall sub sbb add incl jne add add adc and add add add add call xor add add or add jle add add sub pop inc add add add add add add add add add add add or or testl pop or add sub and add lea add add add add add sub add add add add sub push add push sub adc add adc add or add jle add add push jle add add pop sub add add add imul add add or add add add cltd add add add add add add add scas add add sldt push sbb add adc pop dec xchg and (bad) add pop adc popa pop jb push popa inc add add add adc sub adc adc pop and add add incl mov add sbb add or adc and and add pop adc incl pop pop or lea add or add mov or pop pop xor sbb add call pop pop dec xchg pop inc pop sub adc and and popf add pop adc incl jne add add adc and and add pop adc incl add push add add add sub xor add add push add adc add add sub pop inc add add add add add add add add add adc add or pusha xchg or fldenv rcrb add and add add add sub add cmp sub add or rclb add push sub adc add inc add add add adc add add sub pop inc add add add add add add add adc add or mov add xchg and add pop or shrb sub add sub add push sub add add add add add je add add and mov add add es adc add es add add mov add add mov jle add add xchg add xchg pop pop and popf sub add cmp sub add or rclb sub adc add fldl add or add jle add add add add push sbb add add or add and add add add sub add add add pop add add add pop add add add and or add popa pop pop pop push popa inc add add push add add or add mov add cmc pop adc cmpsl add sub add or pop pop or in add or dec add add and add or pop pop xor sbb add ja (bad) lcall sub adc and add xchg and jg add add pop (bad) (bad) ljmp push adc adc inc add add add add add add add add add add add push add push sub push (bad) incl add adc add aas add add and inc add add add add add pop add push es or faddl add add add add add add add sub add add sub cmp sub add or rcrb add push sub adc push add add adc add add push jle add add pop sub inc or add adc add add add mov add add add add add add add add add add sbb add adc pop dec xchg adc pop dec xchg pop adc pop or add jle add add sub add add sub pop push popa inc add add adc pop and add add add add call pop and and jbe add jmp pop jno adc incl mov add sbb or add or push pop jno adc incl pop pop or sbb add or lock add or sbb xor pop or add lcall sub adc and push pop adc incl jne add add pop or add incl add adc add loopne add or add jle add add add add push sub add or add jno add mov add pop add add add add add or add cmp add lea add lea add xor sbb add sbb add mov add mov add push pop push popa inc add add push add add or add mov xchg and add add out push or adc lea mov add sbb add or adc and add add add add insb (bad) (bad) incl pop pop or and pop or adc pop (bad) (bad) decl sbb or adc dec (bad) (bad) call push pop popa xchg and add pop sub pop sub add add xor (bad) call xor add add sub or add add add add add add add add sbb add or pusha xchg or fstps add add add add or push jne add sbb dec pop push add push and adc loop lods inc and sub push jae add or cmp sub add or rcrb add sub adc add loope add or add jle add add push jle add add pop sub add add add add add add add add add add add add add add add sbb add rcrb sbb add adc pop push xchg and adc popa pop insl pop push popa inc add add push add add or add stc adc pop or add add or pop or add incl pop pop or xchg add add add test add or sbb pop xor add add add add lcall sub pop or add incl je add add pop or add incl add adc add sgdtl add add adc add add push jle add add pop sub add add add add add mov add add add add add mov add mov add add add push add add push add push adc sbb pop adc push adc popa pop push pop push popa inc add add adc add adc and and add pop adc stc adc adc and add add add add incl mov add sbb add or adc and pop dec pop adc incl pop pop or nop push add or jb add or add sbb pop xor adc pop adc add add call push and and sub pop je add add adc pop xor add add incl mov add cli add add sbb adc push and add jae add or add or sub add sub pop add push sub adc add push add add add adc add add sub pop inc add add add add add add add and add or inc add add add sub rolb add add adc add and add add movsb add add add add sub add add add add sub and add sub (bad) and add add jg add sub and add add incb add sub adc add sub add sub and add sub add add adc shlb add push sub adc add ljmp adc add add push jle add add pop sub add add add dec add add add add add cwtl add add add add add sbb add add add shlb add adc and add add add add sbb add popa pop xor popa inc add add add adc and add add add in adc push adc incl mov add sbb outsl push add or adc and and add incl pop pop or ret add aaa add add add sbb pop xor sbb add lcall sub pop je add add sbb add incl add xor add add add add adc add add push sub add add add inc add add add add add pop add add add jne add cmpsb add add add add add shlb adc and and adc sbb add popa pop sub push popa inc add add push add add or add pop outsl xchg pop push pop sub adc push adc add add outsl pop add or adc and adc and pop adc incl pop pop or sahf add add xor and sbb pop jle add add jle add add xchg add pop sbb xor sbb (bad) (bad) call push pop pop xchg sub pop jne add add adc pop pop xchg adc incl add adc pop add add add add adc add add add add push sub inc or add js add sub add push add add add add add add add add add add add add shlb add push adc popl add pop adc mov or push and and add pop adc mov and popa inc add add adc push and and inc add pop adc jp (bad) lcall sub adc (bad) adc or push adc gs (bad) incl mov add sbb sbb add or adc push (bad) (bad) incl pop pop or and add incb add jle add add incb add xchg jle add add adc pop popf pop add pop sub adc add push (bad) (bad) lcall add or (bad) incl sub adc add (bad) incl adc add add add adc add add push jle add add pop sub add add add xchg add add add add add push add add add add add add add add add daa add push es adc sbb add popa pop outsl pop push popa inc add add add adc pop arpl add out adc sbb add add add outsl sbb add or adc incl pop pop or loop add or add dec sldt or push pop pop xor add add add add call sub adc and add add add incl jne add add add add imul add add add imul add add add sub pop and add add add add incl adc add add add adc add add push jle add add pop sub add add add add add xchg add scas add add add add add pop add add add add add add sub add adc pop pop xchg adc adc sbb add add push push popa sbb popa inc add add add adc and add xchg and sub add cmpsb add add add add incl mov add add mov add sbb add or adc pop pop xchg pop adc add incl pop pop or insb or xor sbb pop xor pop or add call push pop adc sub pop sub add incl add xor add add adc adc add or rorb add sub add or mov add and add add add add and scas add add push add sub or add sub add or fildl add and pop add sub sbb add jp sbb add je add add je add sbb add push fimul sbb push add or add shrb add push sub add add add add push add add add add add add add sub sub add sub adc add in add add add adc add add push jle add add pop sub inc or add (bad) add add add pushf add add add add add add add and add sahf add add add push add add sub add adc pop inc xchg and adc adc pop dec xchg pop dec pop adc popa pop and popa inc add add add adc sub adc (bad) adc or pop or add incl mov add sbb add or adc and add add add incl pop pop or and pop or inc (bad) (bad) decl sbb adc pop pop jns and add add lcall sbb (bad) (bad) incl add adc add dec add add add adc add add sub pop inc add add add add add sub add or pusha xchg or fldcw or add sub add push sub adc add sub add push sub add cmp sub add or shrb sub adc add flds add adc add jle add add add inc or add add add or add pusha add add add nop add add add add add or add xchg add add add add sbb add push es or add mov add xchg and add add sub pop push popa inc add add add add sbb cli pop ud2 adc arpl add sub add or add cmpsb add add add cmp (bad) incl pop pop or pop sub adc jno or call add pop xchg sub adc bound add cmp (bad) (bad) incl sub or incl add adc add xor add adc add jle add add add add push sub add or add add add add add add add add add add add add add add add add aaa add add add add das add push es adc mov pop pop pop lea add add add pop adc mov and add add add add mov or mov xchg add decb add pop or add js (bad) incl pop add add add or add adc pop (bad) (bad) incl incl add pop pop push add arpl or adc and add add add ss (bad) incl pop and add add or add je add sbb add xchg add popa rcrb add xchg and add pop adc add (bad) decl pop pop or adc idiv (bad) decl pop xor sbb (bad) (bad) lcall or cmc push je add sbb add add add sub add or (bad) xor add sub add and add sub xor add sub add adc add add add add add or add add add and add adc add xor add add add adc add inc add add add add add (bad) xor add adc jl and or imul sbb add pop xchg pop pop pop pop decb add sbb pop or push xor or cli add add push add das add push sub cmp sub add sub xor add sub adc add jmp add push add adc add add pop jle add add or dec adc inc or add inc add add add add add add add sbb add jp add jno add pop add add add add add add xor add adc and add add add push sub adc sub inc pop push popa inc add add add adc sub add add add in adc (bad) adc or sbb push cmp (bad) incl mov add sbb sub adc pop pop xchg adc cmp (bad) incl pop pop or adc adc pop or push cmp (bad) call sub pop or push cmp (bad) (bad) incl sub or push cmp adc add std add add add adc add add add add push sub add or add add add add add push add add add sldt add add popf add add add outsl add add add add add (bad) xor adc add mov or adc scas add popa pop addr16 push popa inc add add push add add add add or add xchg adc sbb or out add adc pop adc jbe (bad) incl sub add or pop or add data16 (bad) incl sub add or pop or add push (bad) (bad) incl pop pop or in add add and pop sub push adc cmp (bad) call add pop sub sbb add sub (bad) incl sub push and add add add add adc (bad) incl add adc add roll add sbb add jle add add jle add add add or inc or add cmp add imul add add add add imul add inc add add add add add add or and and add pop or rolb popa inc add add adc add or cmpsb add add add sub or cwtl add sub add or pop pop or sbb pop sbb js (bad) call add jno sub pop or imul adc adc inc add add add add add add add add add add add add push sub jle (bad) incl add lcall add push and add sub add or and add add sub add or (bad) aaa add push sub adc add (bad) add add add adc add add add add add add add add xor add add cmp add or add mov in add add or add push sub add push or add add add add mov and add add or add push pop jae add push or or add add add push sub cmp add sub add xor add add adc add add jle add add add xor inc or add popa add add add sbb add jle add add add xor add or add add add xor add sarb add push es sub pop and add add or sbb mov and add add or ja add xchg and jg add sub add and add sub add sub xor or rolb add xchg and or jl (bad) call add pusha xchg sub push and add add pusha or and and mov cmp (bad) incl sub add adc or and add sbb add jle add add add add add or add addl add add add add add add add add add add add add push adc xchg add xchg and or insl add add dec add add or add or add add cmpsl add add aad add sub add sub and add add lods add add or add adc and add and add add push add push add mov cmpsl add add or adc and (bad) add add add push sub add or add add cmp (bad) incl jle add add iret add add add add iret add add add das xchg pusha and pushf pop sbb adc add xchg add add add cmp (bad) (bad) lcall sub adc add sub add adc sub sub add or sub stos add add pop adc sub add or xor add and add add aas add push push add or sarb add sub adc add aad add sbb add jle add add add add add add or add cmp add cmp add ja add sub add adc add jo add or add sub add jle add jle add dec add add add add cmp sbb sub push or or popa pop pop pop push popa inc add add add add sbb sub adc adc jge and add add sub add outsl xor add or or incl pop pop or pop sub adc add add cmp (bad) lcall sub sbb incl je add add adc jl add pop or incl add adc add aad add pop add adc add add add add push sub add or add addl add add add add add add add add add push add add add cmp add add add add add push sbb add mov pop dec xchg and add add add lods add popa pop sbb popa inc add add add adc xchg pop or clc add sbb add xor add or (bad) (bad) incl pop pop or and pop or adc fs (bad) decl sbb adc add add add add dec (bad) (bad) lcall or cmc pop sub or add cmp (bad) incl add adc add jmp add sbb add add push jle add add pop sub adc add add add add add add add add and add insl add add add mov add add add sarb add push es or add adc and and adc popa pop cmp popa inc add add add adc and add add add in sbb sbb add incl add xor add or pop and add add add add incl pop pop or test add or adc and add or pop or or adc call pop pop jle and add add in pop sub adc incl adc push add add push add adc add add sub add adc add adc add adc add rolb add or push xchg and or roll jnp add add add add add xor add add xor add je pop pop push pop pushf sub add adc push add add add and inc add add add add add add add inc add push es or faddl jnp add add add addl add add addl add inc xchg pop and pushf sub add xor add add or add jle add add sub add adc add adc add add add rolb add or pop xchg and mov add sub add add add adc add cmp add push add adc jae add push jge add add sub add add or add add jne add add add add add add add pop add add rolb add sub add xor add add adc add add movd add add adc pop adc inc adc add add add jbe add adc add add add add add add add add add add add add add add add add add add add add rolb push es or push sub lods inc popa add add add or add and sbb pop popa or or push cmp (bad) (bad) jle add add push add sbb lcall adc cmp (bad) lcall adc cmc or add sub je add sbb add add add adc or or mov add add add push cmp (bad) (bad) pushl add or add or add sbb or adc add sbb or pop xchg adc or push cmp (bad) (bad) call or pop adc push pop pop pop adc and incl add arpl pop sbb push cmp (bad) (bad) call push pop and or push adc cmp (bad) (bad) lcall sub adc pop punpckldq or add sbb or pop pop adc adc adc and add add add push cmp je add sbb adc pop movlps cmp add xor add adc add sbb or pop pop adc pop xchg popa adc je add sbb or or pop adc or popa shrl add or adc and add add add push cmp (bad) (bad) call or pop adc pop movlps cmp (bad) call or pop xor add add add push cmp (bad) (bad) lcall or cmc adc xor add outsl aaa add or add push add sbb or add add add add add push cmp std (bad) decl jne add add add adc add in add add add adc add add add add add or add jne add add add dec add add add add add add add add add mov add sahf add add inc add push adc mov and testl mov or popa pop xor popa inc add add or add adc dec pop or and and popf add pop sub pop or add scas add add add cmp (bad) incl add cmp add or add insb pop or incl pop pop or sbb or or lcall or notb add add sub (bad) incl sub incl add adc add icebp add add add sbb inc or add outsb add add add add add cmp add dec add add add add add add adc and add add add orb add lea push jne add sbb and or stos push jne add sbb and add popf push jne add sbb (bad) xor or lea je add sbb add add sbb fadds add popf push or insb (bad) (bad) incl jne add sbb and add popf push je add sbb and add popf or pop xchg and or inc (bad) (bad) incl jne add sbb and add popf sbb orb add je add sbb sub inc add push sub add adc add xor add add and inc add add add add add add add inc add push sbb sub add dec add push adc add add xor add add add add adc add add sub pop inc add add add add add add add dec add push or mov add xchg and testb pop or sarb add add add adc pop add add add add adc or inc push add add add add add add add add add add adcb add adc add add sbb lret push sub add add dec add push and add add jae add sub add sub adc and add add pushf add add xor add dec add push and add add xchg add add push add sub adc and add add ja add sub add dec add push and jmp add sub add sub adc sub add dec add push sub adc sub add or add or add add or xor (bad) incl sub add sub dec add push sub sub sbb sub add or rorb add sub adc add add or inc add add add add add add add add add add add add add or and add add int add sub add sub adc dec sub dec add add outsl add add adc add sbb sub add and sldt sub sbb jmp lods inc and add add sub push and add inc jae add or add or rorb add sub xor add add add sub add pop adc sldt add adcb add push and add and add sub add sub pop nopl jae add or xchg add and adc add add and add add mov add sub add sub sbb loope lods inc and add add sub push and add inc jae add or add or rorb push sub adc add adc add and add jle add add add add push sbb add add or add pop add add add add add add add add add add add add and popf add add adc add outsl inc add or fimull push or add and add add inc add add push add sub add and add add xor add sub cmc add add les add sub add add adc lar add push add sub incb push incb pop sub sbb add (bad) (bad) (bad) call add add add jmp add push adc pop adc cmp adc push pop pop (bad) or (bad) (bad) incl push xor push adc push (bad) (bad) call push and add xchg and add pop sub add sub or rorb add sub add add inc add or adc push sub dec add push sub adc pop add add add add adc add add add add push sbb add add or add sub add dec add add add add add add add add xchg add add add or add pop adc enter pop and push popa inc add add add adc mov add cmc adc add sub add add add or pop pop or xchg pop add or test and add add sbb jle add add jo add jo add and add add pop xor add add add add dec (bad) (bad) call add repnz adc adc inc add add add add add add add add add add add dec add push sub dec (bad) (bad) incl adc add fild add and add jle add add add inc or add push add add add inc add add add jg add xchg add add add add add add add rclb add es adc mov and add xchg and xchg add pop adc stos add pop arpl popa inc add add add adc xchg adc add add in adc (bad) adc or sbb add jb (bad) incl sub add or adc arpl (bad) incl pop pop or and pop sub sbb add dec (bad) (bad) lcall or cmc adc add add add xor sub or add sub (bad) incl push je add lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jns je insl cs jb ja outsb addr16 imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc push inc inc rcr lahf mov fistp mov fistp mov fistp mov fistp mov fistp mov loope fwait mov jmp ficompl mov in ficompl mov add fwait mov or fwait mov or fwait mov or fwait mov push fistpl mov and fwait mov sub fwait mov sub fwait mov sub fistpl mov dec fistpl mov dec fistpl add push add daa add add add add add add add push add lods push add test add and add xchg add add add add add mov add add add add add add add add addb add add mov add popa add add add add add add add add add add add add and add add rolb add stc add add add add add add add push add mov add add jecxz add rorb add and add aaa add add add add add cmp sub add add add add xor bound aaa add add add add add cmp sub add add add and add aaa add add add add add cmp sub add add add add and add aaa add add add add add cmp sub add add add add and add aaa add add add add add cmp sub add add add xor bound aaa add add add add add cmp sub add add add popa add and add aaa add add add add add cmp sub add add pushf je add add aaa add add add add add cmp sub add add add add aaa add add add add add cmp sub add add add add and add aaa add add add add add cmp sub add add add scas add and add aaa add add add add add cmp sub add add add add and add aaa add add add add add cmp sub add add add aad add xor bound aaa add add add add add cmp sub add add xor bound aaa add add add add add cmp sub add add add xor bound aaa add add add add add cmp sub add add add adc add add aaa add add add add add cmp sub add add add xor bound aaa add add add add add cmp sub add add add add and add aaa add add add add add cmp sub add add bound add add aaa add add add add add cmp sub add add add add aaa add add add add add cmp sub add add add xor bound aaa add add add add add cmp sub add add add xor bound aaa add add add add add cmp sub add add add cwtl add and add aaa add add add add add cmp sub add add add xor bound aaa add add add add add cmp sub add add mov add aaa add add add add add cmp sub add add add add and add aaa add add add add add cmp sub add add add in add add aaa add add add add add cmp sub add add add add and add aaa add add add add add cmp sub add add add xor bound aaa add add add add add cmp sub add add and add and add aaa add add add add add cmp sub add add add add aaa add add add add add cmp sub add add add inc add and add aaa add add add add add cmp sub add add add add and add aaa add add add add add cmp sub add add add insl add and add aaa add add add add add cmp sub add add add add and add aaa add add add add add cmp sub add rcll add add add add add add cmp sub add xor xor xor bound aaa add add add add add cmp sub add xor cmpsl mov add aaa add add add add add cmp sub add xor push iret add and add aaa add add add add add cmp sub add xor test add and add aaa add add add add add cmp sub add xor repz add and add aaa add add add add add cmp sub add add xor bound aaa add add add add add cmp sub add add xor bound aaa add add add add add cmp sub add add xor add xor bound aaa add add add add add cmp sub add add xor bound aaa add add add add add cmp sub add add push add and add add add add add add add add add add inc add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb rolb push daa daa out dec dec dec dec dec out fwait out cmp fnstcw fnstsw cmpsb jecxz cmpsl into aam xor ret xor cmc (bad) fdivp imul daa cmp fwait lods ds imul fisttp cmp cmp sahf (bad) cmp out jp jno stos cmp out jecxz lea rcll add lods pushl push (bad) push xchg in or jae xchg mov roll add clc mov int3 hlt xchg shlb stos pop xchg dec cmpsb cmc negl mov inc imul ffree mov sar jnp lahf fwait cmc mov iret jo lret xchg add adc push inc dec jae cli fstpt push loop pop cmp imul sub sbb (bad) stos out (bad) inc negl dec lcall (bad) (bad) and leave sbb ja je lods sahf push into outsb mov insl lods lret lods std mov mov addr16 and xchg sbb xor mov out clc fisubrl rorl cmp je movsb dec add addr16 mov jo push push (bad) and sbb xor aas fwait jmp sub leave mov hlt mov roll mov fiadd xor pop cli rcr mov in mov cmc xchg xchg loop sbb out sub fwait outsl (bad) ss jp (bad) jnp inc mov jecxz sbb movsb or or jnp push mov add or call xchg push in dec insl cwtl adc cmp inc outsl rclb push adc push cmp (bad) sbb mov dec adc xchg repnz pop adc mov dec je je repnz xchg mov xorl xor aaa clc cmpsb adc bound aaa std mov dec add aad push mov icebp and (bad) nop lds pop (bad) lret addr16 jnp mov mov mov in idivb inc mov mov icebp mov push (bad) xor (bad) push pop arpl outsb mov mov ret sbb jecxz xchg dec (bad) or popa ret stc mov dec cmp cmpsb jp sbb sub mov mov mov shll stos ds les cmp cmpsl aam arpl mov mov inc or sbb push aam mov mov and jns (bad) (bad) or pop fs repz sbb dec inc scas data16 loop mov ret jns mov pop mov lods push inc adc mov mov push fcoms xor sbb jbe or mov sbb out sub xor std cmp addr16 jmp aas sub jb or dec sbb insb jb ja adc push mov popf aad loopne (bad) or (bad) les cmp push outsb jmp or jg mov and aad xor mov mov xchg mov pop inc imul outsl rorl xor sbb push (bad) mov sbb sub (bad) pop pop sub fmull outsb aad dec mov sub lahf in mov mov (bad) dec push lahf dec (bad) arpl insb cmpsl test lock bound xchg sahf cmp adcl popf sti inc inc movsl pop imulb push lret lahf or xchg lods lods leave pop jnp outsb mov xchg pop repnz mov jl cld ja pop push scas in jns jge sahf push in insl mov inc sti jns sbb and push gs inc pop ljmp std cmc or xchg mov jbe dec xchg sbb mov add incl cmp jecxz lahf cmpsb mov add mov mov pop mov in fisubr data16 xor add cltd roll sub shlb mov inc rcl in dec pop inc jmp pop dec xor jb push out push pop push adc fadds pop jo je incl push jmp and push cmp jns aas and jle pop icebp in dec sub mov or test stos rol add cmp inc jb pop push addr16 stos aam icebp daa ret push pop int xchg sbb fimull dec test loopne inc jmp scas rcll push es cli fldl out add jne adc inc mov int cmp mov cmpsl (bad) loopne repz das lea fs ljmp and or lret xor inc leave movsl jbe clc lret mull cmp xor test lods mov pop add and xor jnp lods inc xchg hlt call or shrb and idivl lods pop addr16 lahf (bad) jnp int mov (bad) bnd pop xchg sbb ret lret mov mov or dec lcall in dec out cmpl mov aad push mov push cmp adc loope inc stos add mov outsl (bad) mov gs sub adc xorb cmpsl jp movsb es aam mov pop or out shl or cltd sub mov dec jbe adc testb stos dec leave push enter out adc mov inc pop add or push pop inc sti jns and cli push leave push mov add xchg je or into push aas adc stc repz ficompl mov dec dec andb xor loopne out push js sahf std fisttp mov int jg in jb out divl xchg pop sti lea xor lcall icebp scas and mov shlb lods fdiv sub xchg adc lret gs sub sub (bad) ret sahf xor popa mov nop xor mov jb xchg mov push mov jl sahf pmulhw pop jb push adc mov lods mov icebp outsl (bad) mov lods stc (bad) lahf imul movsb icebp xor lcall fwait and lret mov and push mov notb push leave hlt les mov test or outsl pusha jnp leave pop mov or jmp cmp ltr rcll or or dec je inc xor adc repz popa add pop out subl xchg inc mov loopne and outsb xchg mov cmp xchg xor outsb pushf mov pop imul push fwait call pop jne fistl jle in mov (bad) (bad) mov mov es pop das or jbe cltd pop iret mov xchg push lahf add ja adc dec pop inc push mov cmpsb fsubr jg mov inc inc lret and add jmp pop jge push mov mov sub push add lret xor insb imul lahf xchg in les push push push sub jl dec jae repnz (bad) lea scas test add add mov dec dec sti xchg scas jnp cmpsl mov or cmpsl in cmp xchg mov cltd fcmove and jg cs (bad) dec out shlb push xor and lods mov pop in add je mov pop or in jmp in pop adc std jge negl leave sbb jno iret xchg sbb pop lds mov je add lea pushf rorb mov push ljmp in add push cmpsb mov or cmpsl push mov mov push jne test jmp mov fstp lcall xlat subl and int3 cmp mov fsub je fisttpl or faddl xchg gs stos dec and ret mov lds jmp mov adc and or test popf ljmp jno jne mov sbb sti xlat mov cmp scas pop pop mov subb movsl int3 mov and cmp out mov (bad) adc xor sub push pop repz push cmpl in push ja cmpsb inc ljmp dec mov inc add scas scas nop inc or jbe sbb andb (bad) push push js mov xchg in mov add (bad) xor inc fs (bad) arpl jmp lods into es lock call adc mov repz out mov sti (bad) (bad) mov mov lret mov inc aam sbb aam lret aaa pop je nop cmpsb mov mov scas xor add pop fstl stos fidivl out (bad) ret sbb push xchg xor stos inc sub cli inc cmp sbb jns (bad) lret and loopne nop add push imul jne sub dec mov or cmpsb fisubl fwait jl test mov outsb scas in fwait push xchg pop rclb inc xor mov lcall push shl inc and mov cmp sti add cmc rol (bad) mov pop sbb popf cmp dec inc loope movsb mov mov pop pop stos or lahf mov lods pop fidivrl mov lcall cmp scas inc sbb aad jl mov jecxz dec adc out sbb movsb int3 jge and in adcl mov jp movsl pop jns sti add sbbl add or xchg fisttpl repz pop das in icebp das lds lods adc icebp cli leave (bad) jno iret rcll jnp and sub lods add outsb pop sbb rcrb and cli out ss ja inc repnz jle dec icebp nop adc jge icebp dec popf js cmpsl mov and mov or add daa mov in pop int add push bound sub aad sbb jmp pop bound xchg out xor or popa mov sbb ljmp mov idivb push test adc fwait enter push loop test mov ret aad out mov and push in lods dec jmp inc das xchg mov fwait aaa jp push jg push js jne imul ret imul inc jp lea iret xchg aas add push dec pop inc sbb dec cmp icebp dec inc (bad) cs adc mov mov fcomi in pop adc or daa out or push popa std lahf xchg mov xor and out and jmp jne rcr add rclb icebp stos andb mov xchg mov mov push hlt and xor pop jge jo ret pop (bad) mov mov xchg lea xchg sbb xchg into cs and stos fnstenv push mov (bad) lock push xchg pop in jno dec xor jle push or call push nop adc jno stos into setns lods push std jl in and pushaw xchg int3 dec xor sbb lret daa clc jbe repnz xor das push sbb jbe mov mov mov xchg clc mov nop pop and mov fldt sahf mov mov stos cmp mov mov cmpsl jnp dec in nop inc mov push mov test insb cs ja fcmovbe sbb jns (bad) outsb sbb inc sbb pop jmp jne cli mov aas cli das dec xchg lods xlat test gs push sub stos or sbb mov mov xchg adc jecxz xchg in pop sbb mov add mov ficoml clc pop aam ljmp cmc jno jp movl cmpsb outsb sub xchg lods sahf pop mov dec scas (bad) push movsb xor cli sahf out shl jl dec cmp xchg stc mov or adc aaa ret lcall inc jle data16 cltd xchg jbe xchg jb jp push pushf pop shlb xor pop inc or aaa sub xchg repnz jo repz jl adc loopne mov popa out and repnz das iret ret in or repz dec call cld lcall iret push mov push outsl loope mov mov cld repz ss and pop out and sub push mov pop (bad) movsb pop mov push jne push xlat es arpl scas xchg popf xchg call or outsb lret rolb ret imul movsl subl js xchg pop mov jmp or push leave sbb aas cli add sub imul jp jmp into dec out mov and cmp cmp rep cmpsb add les out icebp popa out ds cmp aad ret (bad) ret out jmp push mov mov inc or and mov sub mov pop test cmpsb hlt push push pop inc shl insl cmp sub push (bad) mov push mov into addr16 fstpt push sbb ss imul jge push cmp pop sbb cmp mov adc vhsubps pop fdivs push dec lret nop les pop sub jbe out xchg push ja and clc xor mov push push fwait xchg das aaa lods aam lret fnsave int sub out add mov insb int ss fbstp cmp mov mov loopne mov jge xlat cmc adc fsub lret out sub movsb movsl outsb rcrb popa aaa push out adcl push lods (bad) ficoml mov inc push add jecxz pop movsb sbb in mov repz sti xchg dec xchg lods add lcall mov mov xchg sti xchg fs in mull pop sti adc mul out push dec xchg (bad) stos cmpsl (bad) addr16 insb call lahf xchg or stc xor (bad) (bad) in xor lahf push cmp xchg sub pushf cmpsb out inc fadd leave dec arpl repnz shrb and sbb cmpsb cmp leave push jecxz push xchg adc dec (bad) jle je push mov movsl lods adc sub imul fmul push outsl dec mov xchg popa cmp outsl fstps ret and adc xchg ja insb ljmp in push dec inc adc or loop aad gs mov jo xchg mov cmp adc cmc xchg repnz add inc decb movsl mov sub sbb adc icebp adc mov push stos aaa mov or adc xchg xchg scas adc scas test add cld mov leave xchg daa dec sahf cmp repnz xchg daa dec sahf cmp repnz add aas test test xchg pop dec add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb sar shr sbb mov dec ja xchg test dec xor cwtl out sahf out out scas leave out jnp (bad) (bad) sti lahf clc mov je clc decl int (bad) outsb adc (bad) stc lahf push test push int pop aas movsl dec jns lret dec out xchg sub pop popf add popa lret pop sbb or xor rcl fstpt mov pop pop cltd xor into iret ffreep mov jne test mov dec out sti in inc test in rolb and fadds rorb and sub out sbb fildll push rorb das cwtl mov lods cld js and or pusha fnsave adc cmc lahf jne hlt (bad) xchg aad sub mov xchg jmp mov sbb bound in insl movsl or les xlat icebp xor imul and push inc aam cmp movsl dec xor loopne lds scas fimull vcvttpd2dqx dec cmp pop pop stc dec inc mov adc push mov mov aad dec adc shrl mov dec popa add mov xchg test cmp cmp push lea mov push insb je xor scas ret mov test rorl push mov cmc test ja push jbe fdivs sbb adc mov jnp pop jb xor loope movsl movsl jecxz or cmc dec sub int sub lds leave jg clc and leave jl inc mov sub jbe (bad) xlat pusha push inc xchg jbe xor push into leave cmp lock shr clc sbb mov xor xlat fnstcw add fwait pushf xor ret test inc pop push lds sbbl xor pop push clc ss adc pop sarb xlat push mov xorl pop insb dec jl jg fs cmp mov mov scas leave mov xchg test add mov pusha outsb and jg cmp jae ret mov (bad) dec test jmp (bad) or dec or sub dec mov mov sub shl xor inc hlt out dec push push mov pop jae rorb cmpsl stos icebp inc xor sub jns fstl and insb sbb or addl lock icebp push fwait sbbb sbb cltd pop jg psubusw scas push push cmp ljmp dec sbb scas cmpsl pop and mov cwtl xchg loopne mov (bad) mov imul xor cmp sbb lods ljmp test cwtl push aad sarl arpl dec mov pop xlat xor lcall push and xor jle (bad) cmpsb xor cmpsb mov mov xchg loopne jb dec ljmp in mov xor aad cmp and mov ret fcmovb sub flds pop lock jge push add or sub ret push push mov cmp fisubrl jl sbb mov jbe mov movsb xor outsl dec fwait xor and dec cmp out mov dec fs cld mov aam leave mov aaa dec (bad) data16 je adc jnp mov pop cli repnz jns loope xor mov jle mov sub mov pop sti and imul scas push incl pop dec pop repnz push or popa (bad) mov and mov stos sub sub lret or push or and ret jmp aas pushf adc bound iret loopne xchg xchg sbb mov add add ljmp jmp aas push push push iret stos in xor (bad) lods jmp push aas mov and mov cs push jbe push xchg aam ja in sub insb jo stos test sbb int dec popf mov mov dec sbb lret jae js push test cmc sub aam (bad) and push push imul and sub repz test adc mov mov pop pop jb adc arpl jl in mov or push arpl jmp repz pop sarb scas xor ret loop repnz pushf and xlat jne xor adc imul mov imul push dec in xor jl and pop je mov insb xchg dec lret jne push mov xchg dec popf inc nop sub sbb or pop mov or imul mov or cmpsl mov test xlat mov push mov mov mov clc cltd jle rcl (bad) out mov aad xlat dec (bad) iret pop dec mov addl dec hlt stos in outsb das inc adc or sbb dec movsl jg xor shll icebp out out dec sub test or gs insb and arpl fs jno pop xchg mov pushaw popa add sub ja inc outsb outsl mov icebp out mov adc push movb sahf imul xor cli xor sbb push dec lods mov sbb test jge cmp mov jo aad stos fstps test out (bad) loope add pop hlt (bad) insb push fwait sub adc bound rcrb xchg sbb repz sub mov arpl popa pop pop iret dec cwtl stc dec ss dec push or sbb jge fwait sub sub fdivrl adc idivb xchg mov ds test inc mov cmpsl xchg cltd mov ja fisubl nop inc adc (bad) mov out (bad) fdivl mov xchg or adc mov cld pop mov xchg xor les mov test insb and add pop ret test push adc (bad) out mov jge rcr xor cld pushf pop das and inc lods push iret pop fstps xor add fildl addr16 jecxz pop mov sub int aam int3 (bad) sbb insb aas cmp hlt outsl adc cmp lock fist test movsl xor mov scas ss arpl cmp lock adc (bad) mov xchg jns or or cwtl outsb out in ds outsl jge jmp adc sub (bad) xor jle mov sbb (bad) inc xchg jns sub mov jmp std aam cmpsb testb leave inc lahf mov inc xchg dec mov ret adc sarl std mov (bad) hlt cmp push arpl les fcomps mov repz (bad) mov int aaa sub loop fidivl shl dec pop fisubr cmp sub jl pop or jg xchg mov and fwait pop aaa shrl jnp xor iret lds ljmp dec dec jnp fwait mov dec dec add dec ljmp inc mov lods xchg inc push xchg mov lret adc (bad) jnp push imul (bad) cmp pop setb xchg pop jne push inc in stc lea adc adc add out ja aad or mov xlat ljmp and cmp leave xor shrl push xchg adc das mov dec hlt lea stos cld mov inc adc or outsb inc adc inc insl ret add ss jle xchg addr16 pop in xor xlat jbe or adc mov xor mov lret xor cli loopne pop mov das test fnstcw xchg movsl jnp push add int3 jl pop jbe ja in nop push cld push cmp cmpsl (bad) test (bad) adc cwtl push std ss pusha fnstenv dec shrb push mov movsl jl ss mov mov mov out push xor adc in ficomp xchg mov jnp out aam rcrl fs pop sbb push add sti mov sti std adcb nop add (bad) dec rclb jge les jecxz or push lret cmpsb out xchg cmpsb cmp data16 cmpsl push adc loop dec in in jae aas fsubrp std inc inc cmpsb test pop (bad) ljmp dec push xchg (bad) push or iret add xchg das sbb mov aam and dec push jl out inc clc sti jmp sub push sub aas mov addr16 dec loopne mov lods mov and sub stc loopne fs es inc daa imul fild stc add xchg push mov sub outsl fistpll test add (bad) imul push aaa sub std movsl (bad) flds je and in cmp out adc cmp cld inc in ret sti fwait or push dec xchg addr16 iret jne add (bad) cmc sahf ja add jns mov mov cmp sbb xor xor in jae adc push fadds jg xchg sbb mov mov outsb mov pop lret imull addr16 cmp xor or loopne leave or nop (bad) std pop pop fwait pop out cwtl out cmp test sub cmp ljmp inc dec xlat inc lods or rep mov pop adc pusha movsl jne test pop pop adc sub popl mov inc (bad) sti xchg or cli rcr aaa xchg mov push rcll jnp jmp cli dec and dec (bad) jmp adcb inc das xchg fucomip xchg and js jecxz pop sar in sbb movsb inc pop or aas repz inc xor add mulb mov mov mov loopne js add enter insb fwait push push movsb mov xorb cs out outsb mov mov out or add addl (bad) pop lea sahf shrl scas das std imul test pop cld xor pop out jle push inc roll scas mov sub mov cs pushf mov lret inc push popf repnz and (bad) or pop loopne pushf lret aaa inc adc cmp push imul dec rorb in hlt out push jb push dec add push scas lret adc gs push cmpsl les loope jns sar in popa pop cmp dec mov cmp xor icebp sub adc jmp pop je sub fisttp bound inc in aaa dec leave ret cmp xchg (bad) pop out sbb sub addr16 lods inc pop cmc arpl jge bound stc repnz inc xchg es inc adc and (bad) cmp imul divl gs sbb dec ss fimull neg xchg arpl and jp in xchg popl in sbb fmull mov stos (bad) lods aaa or mov mov ds add jns jne fwait das add jl cltd jno xchg and cwtl sarb mov (bad) sub cmpsb (bad) mov adcb je shrb lret stos js sub arpl push movsl xchg pop push inc ret aad lret or push inc cli sub std ja out scas ret cmp repnz xor inc adc (bad) pop incl add test inc mov outsl repnz out pop (bad) leave leave jb rcrb fs jmp je dec mov jp leave fcoms mov cmp mov mov or add mov xchg pop add jmp mov or adc cmc inc in out adc jnp pop outsl ljmp xor inc xor movsb ds loope mov cmp rorl or lret cmpsb jnp mov arpl or mov add and jns movsl mov fmull imul fsubrs lahf dec ljmp push fs dec inc jo xor loop das cmp mov mov mov mov stc arpl (bad) sti inc push jno xchg aas popf fadds imul (bad) jmp pop rorl jecxz inc lock jl sbb sub pop sbb popa and mov ret jecxz pop test xor pop outsl rcrb xchg pop insl pop shl aas cmp imul jb xchg cmp cmpsl jle aas mov fldenv jmp pop mov xchg int mov pop mov or xor push cmp jnp cmp sub mov cmp xor pop call imul mov sbb jno cmp jne inc fisttp dec mull cld mov stos push jmp stc stos mov enter dec xchg js lock dec mov dec cmp jns sub aaa add cmp test jae sub jge sbb aam shr cmpsb scas dec xor lcall mov pop dec les mov fwait mov js xchg lds cmp je cmp nop xorl pop leave fadds pop or and cmp jle inc or pop sub push jge xor leave ljmp or dec daa sub fnstcw shll xchg sub jae fsub arpl lcall icebp mov pop test or lcall inc insb cmp xchg aaa inc shr call aam fldcw iret xchg jp jecxz lods cld movsb lret pop sti pushf adc inc pop dec fcompp fstl cmp sub cltd inc dec mov es es dec lcall mov hlt imul outsb push fcmovnb insb movsl xchg xchg icebp outsl jmp fildll call xchg repnz push xchg mov pop xor pop sub je pushaw adc dec icebp (bad) push (bad) sahf xchg cli xchg mov ss or sbb mov or push push sbb and push sbb dec pop jns adc mov fs jmp lcall sub lods bound pop or arpl cld mov cmpl add jg in aad xchg sub sbb push dec pop mov mov mov pop mov imull inc jns adc icebp mov adc call cmp xor mov mov cwtl pop arpl and dec repz iret adc std lcall aas sub fidiv cwtl adc int in sub mulb sbb popa testl sbb inc sub or aas std out sbb loop mov das pop mov mov das pop mov add aas jmp sahf sbb add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc push push aas faddl add loopne cmpsb cmp cmpsl dec out xchg rcr sbb fwait ss insl cmp iret imul sbb out jge (bad) jmp sbb add lds (bad) mov cmp lahf push and pop aam sahf jp rolb (bad) mov mov pop jmp lods or icebp inc enter daa lds jnp push cmp sub (bad) dec dec loopne enter out adc sub dec push dec cmc lret fiadd mov ffreep push mov leave cli mov mov clc cmpsb movsl lods fmuls shll or or lock aas push outsl inc stos mov dec cmovb mov sbb or sbb push mov insl clc xchg leave loopne jno aad mov dec jp xchg mov xchg xor bswap int sub dec dec lcall aad call sub int jge repz arpl xor mov dec dec and push jge mov insl movsl lcall (bad) in cmp ljmp test test jnp or jecxz mov xchg xor fnstcw bound ret push in add pusha orl dec nop pop sahf iret or cmp push push jnp and mov in adc cmp or lcall ret jo les jae inc inc in sub das sub lock mov add sbb xchg rorl out jno xchg cwtl push jae inc or pushf aad push pop and xor or mov pushf mov mov push jnp mov dec and adc xchg sub mov clc dec add lret enter (bad) xor shrl xchg mov sbb cmp xor mov push fadd xorl sti jp fcoms pop fidivrl das jnp mov sbbb daa (bad) mov push jmp pusha push dec sbb data16 lahf sbb arpl movsb cmp add dec enter sub jle,pn testb aam je nop imul and dec ficom sbb mov pusha cmp sub cltd jno js pop xchg rcll cltd stos adc cmp lock xchg cmp xchg cmp ret push imul dec mov ljmp roll mov pop or int3 fisubrl in or and mov loopne jge stc push jae in icebp outsb jne cvttps2pi adc xchg test adc aaa movb and pusha rorl push xchg icebp mov aad cld rcr imul push int3 cwtl mov pop pop aad (bad) adc add bnd dec lret mov or aad jo arpl lcall mov pop movsl xchg je sarl aaa imul leave ds (bad) sti call push sti jecxz,pt dec jmp std js fimull dec jno loop xorl push repz and jne jb push sub je inc ficom arpl pop (bad) hlt daa xor push (bad) ss push jnp fnstcw lods arpl pop test pop jle les adc insl es orl data16 sti pop std out loop pop and push shl adc mov les jae push dec daa lcall xchg pushf (bad) jbe push xor adc mov sbb aas out dec out sbb mov leave ret mov fs ds cs loopne push pop test ss leave in pop movsb adc xor mov jbe pop out adc int or (bad) lods subb nop adc mov dec lds jl sbb pop sub loop test lods aam pop push push daa xchg push jno shr push inc incb popf pop xor mov (bad) cs adc push mov xor aas mov sarb int scas xchg (bad) bound enter notb pop ja fstpt xor inc lods xchg pop push popf out iret pop xchg push push jecxz ljmp mov or into jge lods cli lea or mov ds xor jbe scas and outsb mov mov dec jae sarl pop lahf data16 mov scas leave cld xlat inc inc fidivrl sub jae (bad) pop or xor add mov pop (bad) sahf es dec pop fist xor jne sar int3 pushf cli div mov push clc sub fs xor cmc and lds jns aaa push push pop xchg out data16 inc pop pop enter in inc jecxz sub cld bound push lods push dec mov mov mov inc rdmsr sub in pop scas pop dec cli adc jle ljmp and je sub scas subb rcll jb pop dec cmp mov adc idivl out xchg and cmp js pop ret call xchg repnz push stc mov adcl in (bad) icebp les cmp jnp cmpsl insb les fstp lds adc fnop icebp dec pop sub mov mov jo es push aas xor (bad) xor mov jg push sub sub stos (bad) jmp pop pop push inc stc js fwait rclb jg push or fsubs mov call xlat mov jge or aas cmp dec mov lcall mov jle movsl mov xchg icebp sti loopne dec sub adc jae and and popf sub pusha xchg adc mov xchg dec (bad) call jns out loope stos pop out inc sbb rolb cli je xchg dec sub inc inc ds pop or out xor movsb add lds (bad) shrl inc jb xchg lret mov xor xor stos cs lret mov push sbb idivl cmpsb addr16 sarb mov xor cmc inc jmp mov lods sarb test pop pop and cmp xor (bad) mov cli inc fwait sti push jb rorb xchg inc loope push inc jo push ret cmpl add daa movsl loopne mov mov icebp add sar call dec pop push inc decb pop jge lret sub inc mov mov je adc mov and test loopne sbb inc inc data16 enter pop and mulb jne sbb lcall jne fistpl push jle push fldt icebp imul jns insb fs test ss add xchg rorb push lock jns in stos test mulb adc sbb das inc adc xlat stc cmp xchg cmp and add add ret sbb ret push jecxz gs add pop push shr mov out xchg lock (bad) enter out mov cmc shrl ficoml sub jbe push outsl pop das outsb mov in jne mov xchg int and arpl sbb pop ret sahf push sbb adc mov add xor cld push fisttp (bad) icebp cmc push js arpl add repnz into adc mov cltd and mov fsub pop jp pop inc aam in dec scas loop test mov mov out aaa cmc cmp and push jmp add jg mull ret es ret cmp adc data16 and add adcl je pop outsl push mov (bad) dec cs cli enter iret pop mov int3 mov push repnz mov xchg ja inc push and dec outsl into cmpsl in mov push mov xor mov mov cmpsl arpl or jnp repz or in cmp xor jmp (bad) pop sbb jle mov sub ret inc insl sbb mov xchg mov inc inc jg push fadds inc inc jecxz jae dec test pop rorb or hlt pop dec aas push sub mov sahf cmp pop jns push sub lock mov (bad) ss out cmp aas xchg cltd jp cltd and inc and mov adc xor adc lea xchg (bad) push jo or repz and (bad) fsubs xchg mov mov xor dec out gs push inc xor and mov into cmp jmp mov gs dec sub cltd out cs stos fbld mov jecxz jae or ss pop out movsb aas (bad) cmp mov das adc out leave gs cld das (bad) jmp in mov repz mov xor cmc insl mov dec push call imul xchg (bad) mov pushf mov mov daa mov inc insl mov out mov popa mov xlat jecxz dec rorb jp insl xchg xor fcmovb lods xor stos test movsb adc and cmp mov cmpsl cmp mov outsb loopne xchg adc cmp fwait cmp sub inc enter add call bound (bad) lcall xchg icebp aaa out je xor xlat ret incb rorb adc mov iret dec ficompl lock pop popf fwait shrl pop ljmp lcall or lock ds imul iret mov addr16 jo addl push xchg std mov pop cmpsl sbb push add sbb mov mov stos rep pop pushf negb divb ljmp pop push sub das (bad) divb lds shrb cmp fidivr mov pop sbb cwtl pop call sbb jg dec sbb push leave jecxz mov inc mov (bad) xor push dec push shll dec fnstsw jge fwait jb lahf dec sbb out dec shll arpl xor mov and sbb popf add pop ljmp jp add push push mov sbb pop lea ds in into mov cmp les sub inc push inc pop mov sub or xor inc cli pop out mov lcall pop dec mov movsb ss mov sub les cmp push (bad) lock jbe out stos xor xchg cmp hlt arpl in xor sbb pop sbb andl sbb adc lds frstor sbb in cmc cmp cmc xor ds push sbb xchg andb xor mov jle jb mov cmp inc jb cmp xchg mov repz push inc inc lods cmpsl adc mov int mov divb ds inc lods ret les mov push add aaa jle aas (bad) or (bad) jns int3 stos lea mov adc cmp lahf rcrl lods mov (bad) sub rcr or mov neg or (bad) adc aam pop mov into xchg movsl mov ss mov aam jecxz (bad) cmpsb pushf cmp add out mov icebp dec gs mov jl out enter cmp push pop dec jl xchg pop mov dec adc imul in jecxz ds mov adcb cwtl and clc pop lahf ja xchg cmp aad add mov jbe cmovbe cmpsl ret aaa sub cld loope nop jno ss inc insb pop sub imul sbb add clc push xor xlat out inc mov sbb cmp nop add popl jmp dec bound leave (bad) dec psubsw mov scas push outsb xchg inc cwtl xchg xchg scas jle xor das sahf and gs xor out stc mov or dec (bad) xchg (bad) (bad) lods jbe cmp out repz loope pusha stc notb push dec clc push inc (bad) xor stos das dec inc or mov push lahf aam sub mov inc push adc sbb push loope adc addr16 loopne pop push cmp fmuls inc inc xchg mov movl sub xor pop push pusha mov ret dec insb add rclb jno pop jg sahf xchg mov fcomps mov push xchg cmp popl lret stos push (bad) jmp dec push movsb jg ja inc cmp sub out cmp lds out loope mov mov jnp adc outsb (bad) ja add gs xor mov arpl enter inc adc fisub (bad) inc fidivl or shll xchg ret outsl test adc std pcmpgtw loopne adc inc cs js mov imul (bad) imul repz (bad) lahf mov test inc aaa add test pop mov icebp mov (bad) ret sahf jb jmp mov and jnp test aad jmp call push add push ljmp (bad) cltd adc and sarb pushf std and fidivr cmc test cld jne scas jmp xor aam xchg out xchg out mov and xchg sbb popf sub test int3 je push mov push pop iret mov rcrb inc mov sarb repz test inc in xor mov daa jb ljmp and mov jp push cmp lret (bad) in mov sub jmp in mov cmc or jl out addl cmp add popf js das repz dec clc dec mov jmp add das dec pop lock sub jmp lods pop loope adc xchg mov rcl or or xchg jecxz fcomps stos mov lret mov cmpsl push out loopne (bad) (bad) xor pop xor dec cwtl add test push lahf ja push jecxz or pop int3 inc pop cli shrl mov rorb out mov and repz stc push pop push xchg mov or aad xchg fnop flds fwait cwtl stos fdivs ss (bad) rol dec je mov mov outsb (bad) mov loop pushl popf aam add mov ja pop nop lret mov pop cmp int3 lods jl jle outsb scas jae push (bad) jecxz aas loop fwait xlat mov lahf xor (bad) jg inc dec sub (bad) leave pushf push mov test sahf adc lcall in outsl (bad) rolb ret cs imul jno (bad) jmp fnstenv jnp in fnstenv jnp in fcos (bad) clc movq or mov add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push and jecxz icebp rcr ffree insl loop ret insl lcall cwtl popf fcom je je ja loope xor cmp jno aam sti std mov inc cmp cmp add xor call lock mov mov mov jnp jo xlat (bad) add dec cmp cmp pop jmp insl mov mov push adc or movsl das lret cmp inc xchg pop in cmp lret push xchg jmp push pop arpl or out mov cmp xor sahf pop notl (bad) and inc (bad) sbb xchg or and and cmpsb sbb in and push pushl dec test fst in roll sbb xlat mov sub sub push fiadd cmpsb xlat divb loopne adc add mov or mov (bad) jno inc divl (bad) jmp subl adc xchg jecxz xchg (bad) jnp sbb ret pop mov jne lock xor sub mov es ret fistl lea mov adc cmp jne inc pop push rclb mov mov jmp adc aas dec inc cmp test mov jns adc das call push mov dec add lds jmp leave push sarl or xchg (bad) lret lret addb jno test pop cs sbb sub fdivr xchg aad mov lret (bad) leave rcrl xor jbe pop sbb pop lahf loopne cs push xor or add pop push add inc bound shrb xchg jo dec or mov pop popf outsb roll decl mov push pop push pop cmp js jp and xchg jnp dec mov (bad) mov adc xor mov jbe adc mov xor jmp and ss jmp hlt push out mov ljmp sub rorb jmp std mov xlat adc add int3 inc out popf repz arpl popf loop mov inc adc adc cmpsb add insb jbe loop jp sub adc fs mov mov pop inc push or daa mov mov scas lods lahf aas sbb pop or xchg lea lods mov aaa pinsrw jge repz push xchg jg out pushf cmp cmp sbb in and or sbb jbe loopne cmpsl pop pop pusha call dec xchg out jne cmc neg xchg mov insb sbb aad xchg lahf sub test lret mov jb inc mov sub mov jp adc add mov add jle cmpsl inc mov mov shll loope insb jp aad xchg mov loopne jnp (bad) stc mov sub cld mov call mov push dec mov xor dec mov std dec jns mov mov out loopne cmp and xchg dec fnsave stos jae bound sbb scas and jmp xchg jns,pt lahf cmpsl test cmpsb dec mov dec mov je pushf or mov xchg (bad) sbb jmp ja repz inc dec out jne mov test insl inc xchg cmp jnp repz jmp mov dec inc cmpsb cld dec gs jae arpl or xchg pop sbb and mov mov mov push adc inc ret pop push shrl insb sbb out inc stos std and bound push fucomp dec mov xchg and and mov lea push inc or mov jo sub shlb lahf pop add hlt fs mov jl inc bound fiaddl add lock xor jmp je adc dec jg pop pusha rcr jge popf sbb fldl add out pop push lods jge loope das aaa mov inc dec (bad) push rorl mov cmp jno (bad) movsb or mov mov mov xchg cmpsb aad dec mov mov insb repz cmpsb lock mov loopne xor push jecxz mov and mov imul test cmp push ja mov jo cwtl je cmc xchg les or loope xor xor aam add cmpl pop inc push push dec mulb push sarl push enter lods xchg pop inc aas fincstp cmp mov aas or sbb inc fbld push sbb out in mov mov and int push mov push pop popf outsb xchg lgs cltd jle (bad) pusha push lock shrl les sub pop dec sahf out mov xlat cmpsl icebp sbb leave fsubl aad mov popa (bad) ds mov adc aas pop add cli cli or mov inc jno sub adc push test cmpsb xchg test test push ljmp loopne int xchg cld scas aad outsl cmp (bad) aad lds out aas pop xchg ds ds and pushf es and mov mov clc adc inc inc sti nop int adc test cmpsb imul pop popl call or sbb out pop cmpsb stc rcll pop leave aad arpl ret mov repnz rclb int movsb ljmp ja insb arpl jecxz js into fcomp scas or insb daa pop adc stos js sti pop outsb mov ret aam iret arpl or andb mov pop test xchg fwait adc iret es call stc dec mov jg inc jne sub fdivr nop sbb or movsb xchg mov dec enter mov test xchg in xchg push (bad) stos push test cld leave repnz and sbb test (bad) mov popa dec sub xor add cli lret outsb out repz les stc ja (bad) in imul dec sub dec rcrb cmp mov lods sti xchg mov push mov stos inc cmp insl mov and push stc mov repnz push test pushf mov mov pop sarb jl pop cwtl adc sbb bound adc in sub in push sti inc cmp test (bad) adc lret add loop pop cmpsb jbe sahf push mov out es mov in scas lods lahf es dec stos push insb fs aam (bad) or je mov mov icebp popl and das lock lret pop mov and push repnz pop push repz sub jmp daa mov sub loope popf (bad) xlat loop (bad) loop lret ret and lock sub fwait leave adc mov loop push testb mov push int sbb jmp jne popa push and add movsl or cmp pop inc rorl or (bad) mov stos xor inc jno cli xchg sahf jb mov add (bad) dec push lea dec movsl push inc jbe sti jmp addr16 inc sub adc test or fwait jecxz out popa mov sub imul adc push (bad) (bad) leave cmp cltd or xchg scas push push loopne fwait adc pop sbb fmul mov mov push cmpsb or jb cmpsb loopne shrd movsl adc xchg and jmp stos mov stos es pop or and mov mov push jecxz scas fldcw or push sbb cmpsb mov push or in mov repz jmp adc sub and (bad) pop fdivs clc mov xchg cld inc cmp inc or inc iret sbb out imul imul sub xchg ljmp ja jp xchg pop arpl dec mov jl ret gs mov aaa jb iret xchg je bound shrl repnz (bad) je movl mov or dec and adc test insl jg pop mov imul jne cwtl push fdivrl cmpsl aad stos ss je sti cmpsl rorl pop movsl mov jle std (bad) in mov push cld add push adc aas cmp (bad) (bad) outsl std into lock fucomp imul scas fucomp clc jbe call aaa xor test mov cs ret lds mov loop inc ret pop push add popa mov stos fcoms xchg sub sbb cld pop sbb dec inc lea roll andb fmull push adc add sbb icebp roll (bad) mov in clc neg mov mov clc lret aaa int jo adc lret adc stos mov (bad) xchg in mov nop jo xchg adc jle clc and mov adc mov int push (bad) fidiv cli pop lock and fdivrs adc ljmp mov int3 pushf imul ljmp nop dec lock or fnstenv sahf fnstsw shrb fwait rcrb rcrb jbe jae add aas pop cli lock xor inc jae insb fimul fildl add push cltd xchg clc xchg jl inc dec enter dec xorl add sbb fistpl shrb fimul cmp adc icebp mov dec daa loope xor out les daa add xor fs imul or cmp mov add and lcall out sub add adc int pop xorl lods xchg dec mov addr16 mov aas push sub popa leave mov aad data16 xchg test mulb popa cmpsb dec in xor (bad) mov or jge jp cmpsl gs fstpl in (bad) (bad) mov mov ja sahf or xchg outsb jno in mov stos ja mov clc add (bad) rcll add and lds push in das mov pop and inc fmuls mov push sbb pop mov pop add mov add nop pop xor mov adc lret push mov dec inc sub push mov sub xchg dec pop fidivrl sub arpl xchg push inc int3 into fs adc xor pop sbb jmp sbb repnz xor xor pop inc jle jno sub ljmp les mull arpl mov fildll xchg mov xchg cs jne pop cmp scas ficompl mov mov mov jae clc (bad) pushl je (bad) mov lock adc (bad) into adc cmp fistpll jo adc xor pusha test dec lea xchg nop rolb cltd aad rol enter mov in inc mov lcall jns lahf and add xor es pop mov ja addr16 mov out and call xchg xchg (bad) dec mov push xorb ret in adc mov fcoms dec mov mov shrb sti stc mov dec mov jp sbb xchg push cmc adc mulb das ret out sub or loop out (bad) lods aam enter setge sbb cmp das sub mov loope iret inc pop xchg dec push daa jb adc scas cmp stos test cmp aam sbb mov push mov xchg mov aaa sub lahf in sbb insb int3 mov cmp int mov rcll rorb pop pop scas mov out std sbb pushf and mov fstps (bad) in mov cmp jbe xlat lods sub dec imul dec cmp popf jnp roll or xchg imul inc fmull adc xchg cmc shlb mov in sbb (bad) dec addr16 fwait inc xlat sub sbb stc mov dec adc movsb xor (bad) dec sbb movb icebp push mov mov scas mov xor xchg inc scas das sbb dec imul sbb js andl dec cmp xchg add sahf inc xchg cmpsb repnz das mov dec add test mov cld sbb out jg fdecstp mov or mov push push (bad) leave dec pop adc pop mov in xchg in sub (bad) shrl pandn pmaxub addr16 fst orl mov dec inc (bad) icebp sub faddl in mov lods aam pop pop dec fild pop lcall pusha test (bad) mov repz lock stos (bad) (bad) jecxz pop hlt cwtl shrl rdmsr push jp cli lret cltd dec (bad) out int3 imul (bad) aaa add xor jmp mov loop aas out xor or sbb cmp push iret (bad) xor clc ja std mov cmpsl lods jbe mov dec cmp xor test adc cmp jae iret push jnp lret loop xchg add and cmp add adc lds and sti xchg mov enter mov fldl jnp jecxz dec and sbb int pop push ss lret lcall aad leave movsb (bad) xor xlat mov or nop insl and push lods int cmc test fnstenv jb xor sbb pop lea aas fistl (bad) push mov test orb dec test mov or lods xor test insb repz and sbb jle out dec mov add vmovdqu pop mov addl xor lods xor cltd pushf rorl in mov or mov mull jecxz push cmp add or jge sbb sti pop in cmp lahf or cmp mov and dec pop jg mov hlt sub cli ret fstp dec jp in or pop mov dec push in iret repnz jecxz push lcall adc jae cmc lods scas sbb push (bad) fcmovb aaa je fs jl cmpsb jbe fs scas push call sbb cmp add sub jmp cmpsb push xchg inc stc movsl flds in or jmp (bad) aaa lret inc push mov movsl jl xlat mov shl sub mov inc xchg es and push xor fcoml mov or scas push pop dec push push (bad) jmp dec adc xor pop testb shl aad mov xchg jnp xorl cmp sti popa stc into mov xchg add inc push xor inc sbb call push cmp mov jp call loopne inc test shlb add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb loopne icebp xor je iret cmp (bad) fmuls popa fwait cmp ffree leave sbb xor mov pushf mov aaa mov std js add ljmp nop jno dec cmpsl insl dec nop sub xchg mov pusha (bad) ja sub jle arpl inc pushf cmc sub push dec popa lea ss insl clc (bad) push pop jne ret packssdw iret ds rol inc cmp adcb inc repnz sub sbb (bad) jbe dec xor leave enter out jno popf sbb call aam jnp push xchg insl sbb pusha lret imul imul xchg adcb jle in cmpsl jae scas cmp pop or into push push (bad) push adc scas sub scas xor enter pop in mov cmp dec ret push and dec icebp data16 lods sbb pop dec (bad) je,pt pop cmp xor mov mov jns sbb cwtl cmp adcl xchg out or jl outsb xor out dec cmp inc mov insb mov pop pushf mov push xchg xlat pop mulb mov mov push cmp cmp jb push popf inc or lods push movsl daa pushf ret inc fstpl outsb into mov mov imul scas fdivrl ss ffreep pop xor test jo in jg and mov lods mov push stc into sub scas loope add (bad) jae push and das cltd jecxz mov cmp sub push lret test cmp jno in and stos dec sbb mov mov and out fiaddl dec push mov inc push adc loopne pop mov push movsl mov jecxz mov pop sub shr xor out call adc jbe out mov popf nop scas stos dec inc inc (bad) pushf imul add cmp sbb cmpsb iret insb mov aad les mov push pop mov jmpw lods push xor push cmp push jae js mov dec scas sub call ret sub cs pop mov std je test fmuls lret into xchg scas push inc std out dec adc scas ja arpl lret (bad) cmp sbb scas in in fwait int jns (bad) mov ret adc sub mov jge shlb xor jne imul mov fwait xor pop fsts ja iret sbb sahf dec mov lcall call cli stos mov xor cmc fstps bound mov mov fdivl sbb mov call loopne pushf sahf mov cmp std cmpsl xchg out enter inc push pushf outsl out scas ret imul vpandn mov xchg xchg test xor test mov aaa dec movsl xchg das inc pushf inc repz int3 mov stos out (bad) xor pop imul das push jo mov mov fdivrl js aad xor mov jmp jnp leave sti xchg push or jmp mov test adc cmp pop lock clc arpl enter xchg mov cmpsl sbb lock and inc in xchg into je pop sbb or leave jo divl mov inc ret cmpsb hlt mov into mov loope pop enter and data16 sub movsb cmp jle add inc cwtl push (bad) mov fimul scas daa cmpsl out adc (bad) mov dec jmp jb cmpsl push mov shrb stos and pusha cld (bad) mov xor lcall pop mul ret inc and addr16 and jbe or icebp aaa imul cmc mov (bad) aaa das cmp out ljmp jne add out mov test xchg js xchg (bad) sub jne mov stos aad xor add sub jne or pop mov adcl hlt xor pushf jo out dec outsl mov lods mov mov push in and es leave stos std push pusha push pop jg inc sub out jnp (bad) lods aam out and mov int3 (bad) fwait and or pop sub cwtl mov dec pushf mov pushf inc xlat xchg inc pushf fcompl cmp adc dec mov mov mov js cmp xchg outsb lods dec adc jg push out movsl mov lods mov jecxz shll stos adc test cmpsl dec sbb (bad) repnz imul aam ljmp or call cmpb repnz fildl and sub mov lds cmp jg inc pop jl pop mov mov dec xor iret jge add xlat push stos xchg mov stos mov iret fldcw pop push fs jnp push ficom js insb dec cmpsl ja stos scas xchg fwait les out cmpl cltd pop cmp aaa mov jg adc daa (bad) cld mov sub and and pushf loopne lcall mov push add fimul enter lods int stos mov or xchg jne cmp enter add (bad) or std repz push adc nop loop stos jbe jecxz add push cmp es xlat sub sbb push cmp xchg adc push sub loop bound add out sbb clc mov mov pop jecxz sub out sub fsubs daa lock lahf ss int add cmp sub and mov sub sbb fbld sbb jl repz mov mov xchg pop (bad) fistpl xor and enter in mov js mov andl in sub push outsb rcrb je repnz sub stc sub arpl loop,pt test bound jnp loopne shll sbb jle adc imul inc fmuls jnp cmpps adc outsb daa xchg arpl add jno cmc mov sub mov push cmp sarl or out insl (bad) out push cmp xchg subl rcrb dec push mov cli xchg pop inc mov rclb stos dec imul insb mov adc sbb xor mov aam addr16 ljmp out fs outsl jno xor xor inc push jae das pop add pop daa push push fldcw iret mov lds jb pushf outsb ljmp fisttp test arpl out fnop addr16 xchg dec inc and (bad) or lods cltd lods stos addb pop iret scas aaa data16 xchg rolb or xchg jb lcall stc push cmp loope push into inc sub fdivrs daa test sbb ljmp das out lods cltd push (bad) jb rcr fstpt and ret push or or pusha pop cltd enter or sub lahf xchg cli sub dec in xlat insl leave xor je mov push cli pop movb popf test gs dec aad mov fdivrs (bad) repnz or xor test (bad) stc lret scas dec add dec mov pop and push ret or add lea jmp imulb cwtl mov pop loopne popf dec leave imul mov mov and xor cltd imul jns out lret cmc push lret add xor jmp mov out mov xchg inc dec cs xor mov lods popa in flds adc (bad) enter jbe push repz fsts xor lods pop xchg (bad) enter ss pushf dec mov mov mov stos shr jg clc lea adc mov pop pop sbb xlat push (bad) push movsl jbe jbe push cli pop jb xor mov jne lds lahf inc pop shrl mov inc push es pop and pusha js xchg cs xchg movsl mov mov adc frstor inc push cmpl jae push xor mov sub pop and mov adc pop adc or adc hlt outsl sbb in fidivr sub leave dec in cmpsb inc mov ret inc and jne ror ja es add mov insl cmp (bad) jmp fcomps out insb jne mov faddl cmp mov xor fs sbb inc lea shr stos insb jbe in dec rclb mov pop lds dec (bad) je mov rcrl inc (bad) sarl xorb aaa in lods add std out daa (bad) adc (bad) loope out in pop in imul and mov and fsubrl loope icebp enter test int ret je add push insb jnp mov and in mov jo ret test inc cli add lods stos (bad) push aam fstp pop mov aas cmp shrl loopne dec sti fdivrl sbb movsb lds addr16 sbb sbb stc jge cmp xchg cld jle pop jo adc dec xlat mov xchg ret jne sbb (bad) repz je mov and out push add xor lds out and mov std push dec imul pushf (bad) dec (bad) in cmp mov pop fsts mov xor in mov mov jo lea pop fwait insb jmp add into jmp je mov leave mov push frndint dec in xor jno dec (bad) into dec fisubl push lret movsb dec mov fldl enter push dec (bad) mov jl in or insb sbb mov imul adc into ss inc pushf sub test int3 fsub pop lock lahf lahf stos fiaddl mov ds add inc jg push sahf std idivl mulb in test add dec test stos je (bad) ret int in or insb pop idivl mov and mov jge sub xor push lahf std inc shll xor clc adc mov iret jl rcll dec sbb jnp ret inc mov cmc ss pop push fistp ss mov push aad adc mov pop cmpb xchg hlt lret clc icebp xor subb stos push pop ret sub ja pop rcr pop add push add outsl icebp mov imul movsl lret arpl fs push shrb das xchg jnp or fs cmpsl fwait outsl lods popf js data16 das cmpsl jns xchg cmpsb adc and iret push jns and int rcrl inc xlat leave bound xchg or cmp pop xor ljmp es xor popa outsb test rcl push (bad) sahf cmp pop imul ret or push or xor adc and mov movsl cwtl jl mull mov push jp repz dec aas sbb je jbe mov mov push add cld lock jns mov insl xlat cmp push rolb ret (bad) fistp jns xchg sar cmc outsb inc stos ds jns dec test add sbb xorl ds mov subl clc aaa insl lea pop adc iret fisubrl fstl sbb lcall cwtl xchg xlat add or inc xor insb jnp iret call pop push cltd rcl xor loop sub dec inc cmp test nop xor stc aad cmp push adc dec movsb cmc pop (bad) mov lock in addr16 add lret jo int3 cld mov fildl push (bad) jae pop sub inc lret mov sbb push scas arpl sbb sbb clc adc sarb mov mov mov lock insl xchg (bad) adc mov aam mov popf lea testb mov jae les shll add inc sbb (bad) std insb pop dec sbb aaa insb icebp and out cs adc pop cmp stos popf sub lds add mov add fisub std leave xlat cwtl add lods mov stos je sbb inc add pop arpl test imul push outsl jge clc cmp iret dec testl mov mov pop in cld or mov mov rcr (bad) lock das fstpt imul mov lods addl sti jno in sub stc bnd (bad) lods inc pop cmp aad fstps push mov imul pop cmp movsl (bad) pushf or jo inc stos sbb ja std xchg in decl lcall xchg mov arpl imulb popf loopne dec stc add push mov push scas add jns dec cmp rcr xchg js jno xor sbb in in xor ret cmpsb rorb ljmp mov adc xchg add jge xor sbb and add adc or movsl adc and insb cmpsl pop sbb push rol lds pop dec fstpl mov adc (bad) xor mov int3 jl xchg (bad) hlt je leave loopne sub rclb fs (bad) xor xchg jnp mov data16 pop fwait sbb addr16 or inc lock jns or sti mov lods lcall rcrb movsb das mov pop mov test dec xlat clc in mov nop push rorb cmp xchg jmp cmp push jnp nop int test and sbb xchg pop dec out sub les cmc jmp inc sbb add sub iret rcll mov (bad) bnd into add xlat jo mov sbb dec dec push and adc push cld iret or or mov xor inc jmp fmulp mov nop cmc fucom mov sub stos iret imul (bad) stos dec movsb inc jno xor repz pop jno sub jno or xchg aam pop jnp mov fstps int3 lret cmp lret sbb ds xchg ret popf xor fistpll add jb sub out cmpl outsl stos mov out inc mov jnp xor inc inc loop xchg lods xchg dec insl fistpll into notb ljmp pop jl leave das pop sbb mov cli cld push xor mov sub call test out mov adcl jnp lods mov out arpl out lods outsl mov xchg xor mov (bad) push sbb pop into pop inc inc out out mov mov push jg add jnp fs negl jp in xchg daa dec sahf cmp repnz xchg daa dec sahf cmp bnd add incl shll mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add into adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push and jecxz icebp sbb dec out jmp ror xor int in xor cmpsb jae rcr cmp aam std mov inc cmp cmp add sub decl incb inc dec jo cmp and jl dec ss movsl jns jmp imul or into cwtl jns dec notb icebp (bad) or jl notb and test and sti xlat or test lods xor jp xor stos fwait test lret cmp clc push lret jg loopne or cmp dec mov mov mov ret sub (bad) or insl ret lret std sbb call idivl addr16 mov arpl ds and lret fldl loop mov or mov cwtl test out mov jge xchg mov mov mov adc xor sbb popa loope dec lcall mov fisub xor push xchg jo into push and fsubrs adc ret mov jno outsb jne pop stos xor add push xchg in in jbe sub jnp movsl xchg mov inc call pusha mov rcrb fsubrp mov pop in cmp repnz and outsl pop (bad) and jo inc loopne aad sti push pushf or inc xchg adc loop mov jl inc xlat nop in mov xchg push mov in movsl lret ss arpl cmpsl mov (bad) xchg sbb jo lcall mull mov out mov sbb fnstsw ret adc lret push sub das adc push imul call rolb add pop pop nop adc sub gs inc dec imul xchg mov rolb mov loop mov arpl mov inc xchg loopne iret cmpsl add add out cmp movsb pop int3 cmp int mov push ds xor cld cmp pushl xor push (bad) cmp or scas xchg sub cmpsl loopne hlt loopne push ss cmp clc movsl das or sub cmp aaa mov sbbb lock movsl inc inc cmp mov stc mov mov jns pop or jb stos inc fmuls push push cmp dec (bad) jbe or xor sti pop pop and dec aad push rcl push inc fstpt out (bad) xor (bad) xlat jae test data16 cli fdivrl popf mov push push (bad) sbb and pop repz pushf cmp jne pop (bad) push test jno or cmp jb ret stos mov lretw and cmp movsb lods int and add (bad) hlt popa cmp fld1 xlat out adc mov lret xor push sbb push add mov out push pmulhuw jb sarl cmp inc fistl sbb lds mov nop ja xlat loop pause cmp out push pop and shll inc cs mov pop mov scas jns hlt pop je in in sbb lods testl dec mov icebp lret sub pause into (bad) enter (bad) dec daa sub push add sar inc aam out in pop xlat or lahf sar dec jmp push mov jne jmp es xchg imul xchg (bad) cmp cmp jns adc (bad) inc ds cmpsb dec loop mov sub stos sbb mov cmp in repnz adc xchg mov inc dec psubq xchg push adc outsl loope add movl adc dec or cmp xchg mov adc js adc popf mov pop fdivs rcrb adc (bad) xlat scas shrb push stc xchg push pop jmp adc lock pop lock xor xchg shrb mov ret inc xchg xor jnp in int (bad) push inc dec pop fidiv inc ds pop jp inc (bad) iret daa arpl out rclb and leave mov (bad) and pop xchg out mov sub cmp jmp push add les jno mov mov movsl (bad) push dec repnz in sub mov std pop movsl fxch call or or mov rclb pop fdivs add mov ja xchg insl push mull sub push es inc xchg jo,pt neg ficoml es fisttpll mov xor xor daa popa cmpsb jno xor inc fs mov iret stos mov cltd pop icebp push repnz or stos or ss xchg addr16 orb gs pop sbb jno std xchg inc dec push xchg xchg pop mov fcoms pusha arpl cmp int mov xor inc clc cmp movsl out aas jge mov or movsl dec or cmpsl jg xorl sbbl addr16 inc add pop or cmp jg ret sub adc dec push cmp arpl mov pop inc push or mov into mov inc dec xor lods cli push pop das inc pop mov aas mov repnz mov ds fs out int3 cmp std xchg cmp cmpsb and xor int sub jg cmpsl jo lret mov stc dec ja push adc mov ret xlat pop mov cwtl pop insl jbe rcrl jmp pop jle add clc push (bad) mov lds aad bound mov pop inc cld mov pop mov add jo loope dec xchg andl bound mov push and and cltd movsb lret lods addl pusha add mov cmpsb pop mov cmp sub sub inc rcr dec mov (bad) pop popf xor mov addr16 jmp dec pushf int outsb mov idivb lods ds push cli cmp rcll aas es cwtl out sbb rorl dec imulb ja push cmp pusha pop push pop insb outsl xchg mov mov hlt cmp repnz scas loope adc xchg mov cmp inc dec dec stc xchg mov push mov xchg inc cli dec pop fcoml daa xor rolb inc sub mov jbe or rolb sub push xchg adc push push das push push mov mov push sub aad fstpt mov fcomps push xchg or dec imul push mov sub xchg mov inc in stc scas push pop mov sub out out popa sti mov inc les insl inc pop add sbb push (bad) mov lea aam or dec aad jge xor xchg in js lcall pop or stc add pusha xor int cltd or int aad sbb inc sbb inc mov (bad) (bad) pop pop xchg popa jl jne mov flds push mov inc push out out movsl stc das cld adc dec and negb mov add lcall sub loop lods ss pop cltd std xchg jno push mov sahf es fbstp adc xor test loopne fnstsw cmp mov pushf push mov clc mov cmp push or mov les adc mov clc jne and aam sub xor les jo sti mov sub xchg mov nop jno mov xchg mov inc sub push mov lods or sbb ds sbb mov lods push mov dec pop add push push jmp mov cmp jg fcmovnu xchg dec mov xchg or mov popl iret lret sub es sbb shlb (bad) pop pusha outsl xchg sti xchg add push or test lret sub outsb shrl fidivrl fstl dec bound in (bad) mov out aam sahf loopne std out in and xchg push or add or (bad) sbb xchg mov pop mov (bad) mov stc scas sbb stos sbb inc lret add or out add mov fistpll leave mov enter nop and daa repnz sbb (bad) ror jle pop xor mov mov insl xchg rcrl mov out lcall lods gs pop push jbe test (bad) push and sub inc cmpsl pop xlat outsb push push gs cmpsl push jl pop sub movsl jecxz pop fsubs fstpl pop in movd sbb add (bad) jae push push into popf icebp sub jle jbe or js cltd xor das sub std cmp or mov jmp pop pop cmp jge xor xor aam dec xor out adc mov lcall add cmc xchg std sbb jbe mov outsl movl jb sbb ljmp popl mov into (bad) lea inc daa dec add cli lahf sbb xchg or ret push sub pop imulb pop (bad) loop pop cmp and (bad) pop mov (bad) pop in enter and stos dec mov xchg add xchg lods sub arpl adc lods neg mov xchg rclb idiv frstor sub out nop arpl adcl mov inc xor aad mov std add cmc adc jg add inc sahf mov pop enter sub add and sub cld inc xor pop mov in xor mov lea insl paddq stc stos ljmp dec cmp es xor dec sub call cli dec (bad) push inc jnp pop xchg jae outsb in xchg rol je out cmpsb (bad) jne sub test fisubr (bad) rclb sub xchg jns inc or test mov insb pusha lahf int3 adc dec insl sti arpl fnstenv fwait cmp jo iret out rorl jnp dec xor jg or cli je jnp jnp das test scas lds aam mov test pop or mov notb enter fsts jl cmpsb cmp push aam rolb adcl push faddl and out mov les mov mov fsubs cmc push in sbb mov mov xor mov into repz or js inc fmul outsb cwtl nop and or sbb add cmp js mov ds loope mov addr16 mov rorb jns inc cmp test mov ljmp daa sbb pop dec in (bad) dec lahf fs dec and ss (bad) or and clc stc jg mov xlat in pop mov jmp idivb mov fldenv sahf aad jg dec or fistpll or cs mov xchg push jle jmp xor out dec push enter push add xor or popa mov pop cmp jg jge fcoml test sub (bad) loopne out pop add fs sbb push or push imul sub loop lcall push xchg mov sahf xchg push in pushf sti sbb xchg fwait loopne add (bad) leave pop xor jo pusha inc push xor inc xor daa cmp outsl mov sbb push data16 xor faddl lret lret and sti mov xchg addl dec or aam jns mov fisttpl pop int3 add clc icebp ds idivl sbb shrb push cmc outsb out movb (bad) jecxz arpl cmp movsl and test test pop lods (bad) push push inc add ss movsb cmp push dec xor pop aad pop sbb nop and cmp cwtl repz leave lds cld or sub xor jp sub add sbb mov sub adcl dec faddl dec adc je dec pop push cwtl sub add outsb test cltd or push pusha jmp stc and int3 jecxz inc and fsubr in loop jge sub push mov ret leave int3 dec pop fildll (bad) movsb pop mov mov lret or fimull popf dec add mov inc loope icebp fist sub inc sbb leave and xlat lods add add out sub mov out push and dec arpl adc call cmp push or or mov mov pop outsl into fmulp jo sub inc mov ds ss push ret mov xchg pop mov inc in ds dec jecxz or (bad) clc repnz mov and mov mov sub sub add cltd lods popa sub jne and jmp std xchg sub dec lret inc sahf test xchg add add or data16 sbb cli or mov and dec xor fsubrs outsl insb popa das mov sub pop inc sub inc jns adc enter xchg in scas xchg out cmp (bad) js sti xlat and jmp popf mov stos int mov decl fpatan mov jnp in movsb imul stc xchg sub xlat mov das push xor pop mov mov jg cld ja push pop js js out or cmp pop sti cmp data16 loopne (bad) cmp cmp push mov in pop loop test mov ljmpw jnp into cmpps mov (bad) jbe scas aad mov sbb lods lret leave add push sub sub mov xchg in jo cwtl add mov jmp mov adc push inc hlt sbb jmp xlat stos add rorb dec popa cmpsb jge ficoml (bad) jb and nop inc pop sti xchg add imul lock xchg xor jmp sbb shll push call leave or jmp ljmp (bad) mov pop pop bound std fstpl mov cmpsb jo add jno or mov mov cmp mov xor lahf push add mov setbe add sub div (bad) add jb sbb stos aad scas and xor inc lcall push sbb arpl jmp adc xor sbb add push fstpt pop stos sub enter and fisubl jb imul pusha fisubl and (bad) sub xchg push and xchg ret (bad) or test out push idivl rorl inc mov in jnp outsb mov std add (bad) movsb xchg das push xchg sbb fidivrl cmp insb fsubrs and aad decl cmp mov iret sahf cmp mov (bad) cmp cmp jbe in scas es ret add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rclb add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push and add (bad) icebp pcmpgtd xor pushf cwtl lcall out cmp jmp xor ja (bad) jmp bound repz (bad) (bad) jmp js hlt push add call je in nop mov push fbld imul loope fstps cmpsl pop xchg ja xlat std (bad) jmp xor jle xchg mov xor cli sbb jo cmp js push xor mov fwait iret (bad) cs dec jno int dec pushf fidivr push pushf jae lahf int3 je fucom out lret loop jo push fucomp imul mov cmc data16 jo into icebp and (bad) push mov lret add sbb pop push rclb and pop cmp je xchg xlat xor ret (bad) in or sahf movsb inc inc les scas (bad) pop mov fwait sar popf negl jg sub sub sti lcall fstl dec sub js lahf xor repnz mov test ret aam cmp subl in push js (bad) ss jp xchg cmpsb stos (bad) mov inc sbb cltd and fsubs jnp sub std sti inc lock push mov jle je xchg sti call cmp mov dec xchg dec js fsubp cmp pop mov fs sub sub sarb xchg jbe loopne,pn sub das and jno pusha add push pop mov pop (bad) lret cmp sub cmp (bad) es rcrl mov dec int3 push mov push mov xor cs pop mov adc and int3 rcl fisub fsubl std rcll xor jo (bad) int bound neg or add (bad) cmp (bad) fist mov push dec jbe (bad) pop nop mov stos neg sbb mov adc into mov xor lret iret into mov in pop pushl xchg (bad) aaa repz ja sbb add fldcw shrl mov xchg cmp dec mov sub stc (bad) jno xor jp mov and lock (bad) out xor fnstenv aam loop inc mov aas push mov and nop fdivl mov pop loop inc (bad) stos dec insl bound lcall xlat loop cmpsl js icebp cmpsl fnstenv in (bad) in repz push sti out xlat xchg je inc lahf mov or jb mov mov cmp out dec lds int3 pusha int xor push mov into mov cmc adc je leavew mov outsb sub sub push jb push inc mov jle insl into push int xchg mov pop dec data16 rol in add (bad) int3 das pop push mov adc pop adc jg int3 lods adc cmp fst (bad) mov pop pop and jp sub repnz inc fstps int3 int3 mov out sti pop or in jnp xor aam es xchg ljmp and out lahf or cmp and mov pop xchg inc lds mov repnz mov mov test xchg loop fisttpl and test (bad) jmp adc mov sbb call mov inc cmpsb jle (bad) jne test (bad) jbe pop outsb repnz and inc not pop push rolb mov dec xchg leave jmp cmp out dec mov cmpsb sbb pop cld cmpl lcall cmp lods pop or jo and sbb cltd stos jg lcall xchg les stos imul mov or arpl out jg cmpsb movsl idivb out xchg pop lahf aas (bad) or test cmp pushf frstor in or jl test cmp icebp pop mov pusha mov leave pusha push lcall sbb stos jp add (bad) pop jg popa fnsave je pusha push int xchg pop repz xchg ljmp pop (bad) ffree insl cmp bound inc mov push hlt xor (bad) jo dec lret sbb push pop fbstp lea in in in lods mov (bad) xlat cmpsl cmc xchg (bad) fwait out sbb add lock cli or mov ljmp cld jmp push in xchg subl sbb xchg cmp aad mov test add adc inc jae and ljmp pop lret or jbe xchg (bad) push punpcklwd pusha jmp lea addr16 stos pop rclb mov xor adc mov ljmp xlat pop cmp stc rcrb aas sbb loop jg pop pop mov jge dec jo fs mov aaa mov sub lret push iret stos insb jnp rorb and dec shlb stc mov pop cld (bad) jb sbb imul jg jmp loopne mov jnp lods addb ss pop cwtl mov ret dec sbb aam and cmpl xchg aam fistpll lods sti mov jnp mov (bad) sbb inc hlt push pop lcall mov mov push mov mov in xor adc pop (bad) push add or sub mov fild cmp add in xor push fwait xor movl shr and adc fcompl cmp cld es mov leave ljmp gs xchg or sub dec jns push push lea test mov mov pop (bad) or lcall mov mov fs loop dec push inc xor enter mov mov mov mov stos mov pop ret mov imul inc lret xor jmp je sub jge loop xlat loopne ss push pop hlt add push push xor mov add mov (bad) faddl test pop (bad) sub cmp sbb mov mov inc lcall ret loopne ret fsubs dec mov (bad) fidivl sub add pop sbb shlb push jp mov or jb and ds loopne cmpsb ficoml bound mov pop and dec hlt mov add loopne iret clc in ds das ret jecxz push lods lea jnp repnz mov pop mov repnz mov lret shlb sbb (bad) in fidivl std std mov rep loope add movl push inc loope xchg sarb jb pop xchg push inc mov xor or jp pop inc push cmp add daa adc call lock mov scas scas adc dec mov xchg mov sti pop fadds cmp ja gs xchg sub in xchg adc (bad) test out pop imul push add inc (bad) movb gs and in jl xor jl loop pop test mov lock loop (bad) or dec xor call jns jbe fstpl push test jle mov jae jo dec xchg int xchg or xlat ds daa jp add and push jnp ss cli sub lods jns (bad) sub fs push cmp adc xchg pop mov jb icebp movsl repz mov and lods inc mov pop les sahf mov enter push fdivrl and sbb dec mov cld cmpsl sub mov lods scas xor imul xchg sbb jp pop push dec lods in loop and add inc inc out in dec hlt adc push cmp jge cmp outsb mov cmc andl (bad) mov dec mov enter mov js imul aas aas push cltd add inc pushf pop mov aaa dec push mov push mov jnp push inc ss jnp lods jecxz out mov push pop into or mov lret mov cmp insb lods repnz add fistp mov cmpsl lea ljmp mov ja cli out in aam cmpsl mov push dec dec xchg inc fwait (bad) cld mov jbe sbbb scas insb cmc andb fstp (bad) push sbb fstpl fcomps lret pop jmp out lds jb (bad) dec or mov out inc in cmp outsb cmp imul xorl lea leave cmpsl jle xchg xor fcoms in xchg mov mov mov inc dec adc mov and ss mov scas jl popa push jb cmc out paddq in cmp stc mov jnp xlat movntps imul test scas sbb dec jae add mov loop loope (bad) cmp sbb mov sbb xor jo mov bound (bad) fisubrl mov aam or icebp ds cmpsb xor cltd out js fwait mov enter cltd lds test lock in fsubp rcll mov fldz flds scas pop lahf jmp cmpsb add pop push mov std (bad) fcomps cli sbb inc movsb xchg jno addr16 mov jnp cld popf insl imul lds dec in inc mov and xor mov (bad) sub mov dec jp mov jns and xchg in inc sbb and add xchg bound daa divb xchg adc pop pop (bad) mov movsb xchg sahf lret mov xlat ret outsb fmuls xchg (bad) lock push dec fbld push push pop dec adc fcoms dec mov pop shlb sbb mov dec or cmp lea insl mov jo pop dec ja mov inc clc jp mov dec out ljmp ja mov sarb pop mov cmp pop scas pop sub xor lods add bound or sarl sahf rorb xor frstor push xor lret frstor fimull push or or dec popf or jp out stos pop dec lea xor sbb rcrl fcompl pop das stos or dec cmpsl movl pop dec jg pop arpl mov mov pop test loop pop jg mov jle negl sub gs les push inc in (bad) outsb or ljmp cmc jno dec cmpsl xchg mov shrl cmp mov cmc (bad) and push xchg ret (bad) ljmp push push push inc aad cmp movsb leave sbbb outsb sub fisubr cmp push mov xchg stc andb pop fnstenv test test pop mov in sub cli subb jp repnz (bad) pop ja push repz jns fwait inc mov ja mov popl into push mov test and mov test jmp fldenv sub mov push fsubrs push push cmp jle test js add sti insb das in fs jnp xchg dec add mov xor cmp add cmpsb mov sbb int adc mov sub outsl mov adc xlat ficomp test sahf cs repz pusha das enter xchg in jl nop xchg loope jne daa (bad) aad push mov mov and cmpsb rol das pop adc repz imul jno dec xchg dec mov roll jecxz mov push and popf mov xlat dec ja mov fwait (bad) jno (bad) dec ljmp je dec mov dec (bad) iret add jecxz push add and enter bound add stc lret xchg les mov add rcrl loope mov in sahf cmp sbb in mov sbb pop cltd or movsl inc xor repz cwtl dec inc pop lea mov xchg pop in fildl mov mov js adc adc sub mov ljmp jae cmp into sbb jo mov add test push mov lcall (bad) xor jecxz mov pop rcll insb fwait pusha shrb adc dec pop iret les sbb outsl lods xchg jmp push pushf scas inc cmp fucomp (bad) xor ljmp incl mov cmp push xchg inc add dec push jg and inc xlat gs pop in or mov inc bnd fmuls cmp pop aam fcompl push mov clc imul mov popf mov mov sub or cmp outsb in in dec dec shll jbe das icebp xchg (bad) adc out pop add (bad) pop lcall loope mov repnz push fildll and mov icebp out jmp ds call pop mov loop cld pop xlat add sub cld jns mov or scas adc adc ljmp out push mov scas jo xchg inc ret xor cmp pop inc adc fistpll aaa (bad) and dec (bad) int mov and push jb mov addr16 fwait shrb rclb mov cmpsl in mov lret push test hlt lret aaa pushf add dec sub jne jnp popf sbb fisubl (bad) mov sbb lret and fisttpl add test (bad) pop cmp es fcoms mov dec jb pop inc push lret xchg xor out lret xchg out push imul jecxz mul jbe into (bad) push andl xor and arpl adc mov mov mov mov iret test or jle mov inc mov loope xlat sub mov inc mov test mov adc imul ficomp cmp js push xor popa ss lea lods and jp push test mov gs lods rep test popa aam lods sbb dec jne lahf movsl mov ds fcomip data16 je adc lods xlat jp aam fs push and and pop imul push pop fistpl mov xchg sub adc or jg lods push or jge push sbbl cmp gs xchg push rclb aam jecxz inc fimull shl (bad) fwait std (bad) ja mov lret sbb sbb and fs mov mov mov mov mov (bad) mov jmp xchg lods in subb inc jl ljmp xchg es add ss ds cwtl (bad) fstpl scas xchg xchg add push push popa mov inc stos pop add popf cmp cmp loopne addl push cmp lock addl push cld out add add dec adc add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add leave adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb rolb adc xchg jae cmpsl arpl cmp (bad) dec aaa shrl dec ja out dec dec ja dec dec out cwtl jp out sti xor add rclb decl jle pop mov dec sahf cmp into add es lds inc or (bad) mov test outsb into push iret js mov pop mov mov out ret loope mov das (bad) or inc pop out out dec sub or dec fsubl xchg pop cmp xchg xchg dec pop fs cmp mov xor test pop mov test sbb pop push das and mov out add fdivs lea fldt loop cmp jge test sub outsb out loopne in pop jnp bound sbb jl mov mov je fdivl out adc fcoms add cmpsb add push add (bad) sbb sbb mov inc push movsb into in addr16 in sbb sbb test push cltd adc dec mov sub repnz ret push inc and js data16 out stos jp cmc (bad) jmp mov cmp in push stos aas jmp sub nop ljmp and cmp adc push (bad) ja movsl js xlat push lea test add jnp lds fnstsw xchg ljmp leave pop push mov dec dec mov jbe ss sbb arpl icebp iret jp cmpl mov or js mov fcomps mov lods inc (bad) loopne push xchg pop popa cmp imul push movsl movsl inc in jmp fcomps test in dec pop (bad) mov and ficomp popf dec pop int3 fsts repnz repz cs sbb mov lds (bad) push test inc testb (bad) call (bad) mov scas setg aam ret (bad) out mov shrl jle push div fist or movsl inc je pop lea fwait push mov jge fisubr push nop mov xchg sbb jne lret xor and xlat xchg imul xchg pop loop test out cmp mov dec pusha iret test mov xor enter jl and lods sarl or sub and (bad) and cli mov fsubrl inc jecxz cmpsl add bound xchg scas ficompl hlt sub fs ds stc jnp movsb sbb dec xchg sbb xchg test lret lea or and mov mov sarb or sbb push jne sub sub adc (bad) or int3 (bad) mulb pushf imulb movsb (bad) and arpl pop mov mov dec inc sub mov mov fcmovnbe sub mov lret notl jns sti movsb cmp je aad ss mov mov add mov sub add sub dec (bad) mov in je mov (bad) jp pop scas fisttp imul push pop incb stos cwtl sbb test daa inc cmpsl xor mov test lahf ds movsb sarl in (bad) sti ljmp sub jno movsl or and adc and inc sub daa dec in mov inc xchg jl push (bad) lock pop add lcall sub mov xchg fisubrl test xchg (bad) repz subb pop mov inc add mov xchg pusha xchg cmp adc popa dec or xchg add jbe pop mov adc rcll adc mov loop or adc loope js fwait xlat icebp out push add mov cmp dec scas fs daa sub pop add outsb stos aaa mov cld dec push mov lcall sbb imul decb pop aas outsb je lock data16 mov shr out ret ja and outsl fisttpl and push mov xchg mov xor push mov add je inc mov je dec jg fsubrl sub out pop xchg data16 fnstenv pop (bad) (bad) ja decb inc or jb mov shll (bad) push shlb movsb aaa inc mov mov movsl lret sub (bad) jg add adcl divb fcoml sub cmpsb je repz cmp outsl mov adc inc push mov pusha add sbb push test jmp pop (bad) bound in ret add xchg sub (bad) mov xor ret nop jae loopne dec mov mov popa rorl mov imul mov add xchg mov (bad) adc xchg fmull push mov out xchg push xchg jb push or bound in ja lahf pop sub mov frstor jmp cld cltd stc imul mov nop cmp sbb cmp fstl js xchg test or pop cs repnz ficomp stos fistl stc aaa out dec jno in xor and sbb les call lods (bad) mov mov imul pop es cwtl bound fidivrl xchg clc adc cmc sbb adc dec int3 xchg cmpsb cmp mov mov sbb pop push xchg daa xchg stos xchg repnz cli lret cmp sahf mov and pop fbstp pop dec jne (bad) inc ss push fisubl pop int3 sbb dec cmc xchg sub stos movsb cmp imul and int aam cld mov aaa cmp (bad) int3 rol or scas fcoml imul fbstp and out xchg cmpsl in and sbb inc or jb sbb mov outsl mov xchg mov lcall (bad) cmovge outsl and push push inc jmp adc fstpt movsb adc mov in fisttpll out ret push negl iret jno outsb cmp sub pushw vpsubq and jb cmp pop pop adc cld push jne fmull rorb mov mov inc sub (bad) push cmp call or stc mov out bound pop cmpsl je cmp inc scas loopne ret add pop mov cmpsb xchg enter ss push pop jbe jnp das or (bad) fldenv sti mov fadd insb sbb sub adc xlat jbe stos pusha push inc jo pop ficom sarl jmp int (bad) cmc lea lds mov jecxz xchg xchg mov or and jb mov push cmpsb aam mov loop push xchg ss lods push sbb (bad) ss sbb jae mov pop adc iret push dec xchg xor sub dec push gs repnz and or jg test rorl in pop mov xor (bad) scas add pushf cltd dec out sub outsb mov jl test popl sbb lcall icebp sub hlt xchg leave lret and jle mov lods loop pop lods out mov push fnstenv add jp and cmp test inc adc xor ljmp pop mov or aam mov sbb fdivrs hlt not imul (bad) out dec pop cmp jb sub add cmpsb mov popa pop enter xor adc (bad) (bad) xor repz data16 add test jno adc cli cmp roll pop jecxz and loop dec push pop rcll js lods into cs pop dec mov mov xor mov rcrl ja fwait adc push ljmp jl mov fbld adc mov es push and mov inc dec cmpsl sub and hlt xor xor jp and xchg popf jne mov out out mov mov outsl stos adc in cmp aad sub into sbb scas out mov adc jge loop cmp xchg rclb mov add in mov add ja leave push jp pop das xchg test (bad) jo xor jne dec lea push xchg jae es fmul neg ret leave in into mov jmp scas jg cmp jnp mov sqrtps jae cltd xor xchg sbb (bad) mov fildll sub sub sti mov imul adc pop push (bad) je xor sub movb sub jbe pusha mov sub pusha std adc cli outsb lods pop sub dec xchg int xchg inc sbb sbb pop sub fsubrl cwtl (bad) idivl iret ret loopne lea xchg sbb xchg sbb cmp out fisubrl fnsave jbe outsb jg in decb lret mov je (bad) outsl je (bad) fbstp sbb stos xor shr xor scas dec and loope cmc adc inc shr mov or mov movsb sub xchg mov sahf pop sub xlat arpl cltd popa mov stc fidiv imul pop push lods cmp push mov sub es xlat repnz in jns repnz mov pop or outsb push mov sahf cmp sub push jne clc in jns scas mov int mov into xor sbb add xchg (bad) notb (bad) gs fs shlb and out inc inc out test loopne add adc iret jno rolb (bad) mov cli bound jg out addr16 mov test nop or xor push xor js lds jo xor pop inc mov jne repnz dec xlat stos mov or aas (bad) negl dec les mov pushf mov clc pusha push das or mov push mov add push mov dec popf in mov jo xor mov and into stc insb push pop and fstpt lret add dec push in mov ret inc call das jne in sub inc inc pop pop xchg aad arpl pop xor inc xchg add cmp jl into add jnp sbb (bad) cmp cmp push es ret jp gs ds push cmc pop fnstsw addr16 in xchg xchg sub mov push lods int mov sbb pop pop icebp lahf cmc push push addr16 sbb data16 jmp dec outsl mov jae jns enter insl sarl xor jne push mov loop sbb fldl dec rcrb jnp sub and inc movsl mov mov arpl adc sub add mov call xchg push clc mov outsb add andl inc shl push mov stc pushw leave sarb inc pop xlat sbb loop pop push popa pop bound dec hlt popa icebp mov pushf dec sbb stos mov lods (bad) dec cmp je sub repnz mov (bad) lret arpl dec pusha in dec cwtl subl adc pusha push les imul dec cmpsb xchg xlat ds xor push gs adc repnz push lret aas leave xor inc jno mov add int3 mov jge sbb (bad) in or test test (bad) aad adc lods aas (bad) xor push rcrb and pop in sbb pop outsl outsl jb push dec lods inc pop add dec push cmpsl mov pop iret insl sbb xor adc pop rcll and test jns (bad) adc cmpsl xor cltd int xchg repnz (bad) and imul cmpsb jge pushf in mov daa inc mov imul push mov outsl add in and xchg cli (bad) popf inc xchg clc push push mov and xor clc or sbb in in adcl arpl lods hlt in (bad) xor jmp add push loope mov stos or pop sti in pop push or sub clc fisubrl arpl ss stos jle idivb scas cmpsl js lea pop js mov xchg loope adc int stos or out mov std inc fdivr movsb mov mov pop cli adc stos rorb jmp bswap daa pushf inc inc xchg cltd int3 push hlt xchg lret jle (bad) scas cmp adc mov ror mov jbe dec stos ljmp push lock frstor dec and popa xor mov movsbl clc (bad) adc js mov mov push nop test ror (bad) xlat out jno test mov fcmove (bad) cmp movsb jne xchg nop or inc cltd xor stos cltd rcll stos fstpt push xchg add adc fstps mov jp,pt bound cmp loope and push ret lcall pop xor nop lock (bad) cmpsl xor xor add inc inc cmp inc sub insl out xchg jne insl lcall jne call testl nop mov je xchg pop mov loopne lcall inc fadds ficom mov jmp xchg xchg in (bad) iret test xor std in jmp jbe mov push dec pop sub fsubrs pop push cmpsb int rcrb (bad) aam mov mov imul les stc jb fidivl adc jmp mov adc mov adc into int push pop inc jmp pop and mov cmp jmp push popa imul jle je loop fdivp sub pop loopne rcl clc addr16 jo sbb inc sbbl call out inc rcr jb std lea aas cmpsl (bad) jmp dec cmp add jle add xchg dec dec dec pop (bad) xor mov les imul or sub push sarb lods push add aaa pop insb aam mov mov lock xlat sbb rolb sbb stos call fcmovu cmp imul (bad) (bad) hlt push insb xchg icebp out sub mov je jecxz mov jmp mov lock pop fidivl jns cmovnp push cmc cmp test subl jp or mov mov cmp leave jp mov xchg inc lods jecxz movntps fnstcw ljmp cmp bnd and lock mov stos xchg hlt dec cltd or push stos cmp cmpsl lret jne inc and mov dec dec sti dec pushf es notb sti (bad) sub loope xchg push mov push xor loopne and mov lret cld es mov aam data16 and fdivrs mov sbb cmp push leave jecxz call sbbl xor adc inc rclb jns in xchg daa dec sahf cmp repnz xchg (bad) aas add loopne insb pop enter add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc add shrl mov pop sub and movsb movsl sbb jmp sbb sbb sub xchg mov inc out ja imul add push les push or dec imul mov sbb mov ds adc into sub in dec insb les vcmpps push xor std push ds imul cmpsb sub stos mov (bad) iret and ljmp loope push ljmp inc out flds push (bad) push mov pop dec cmp dec add into pop jbe sbb and mov les sbb (bad) jno adc insl xlat mov mov add pusha bound movsl jmp or mov add sub iret push mov fistpll push lret cltd mov lods (bad) inc push ss cwtl xor aad dec mov mov dec or jg (bad) mov sub cltd fsubs pop lds cmp jl leave pop insb mov pop insl jmp xor push add and insl orb pop adc nop movsb adc push push push mulb xor aad int3 clc or or jbe in movsb pop lahf int pusha sub mov inc cld ret dec mov loopne fbstp movsl outsl es and enter push test into pop mov into add lret aad call pop adc mov xchg or movsb cli stc pushf sti loope xchg mov popf mov daa lea jge rolb je lret mov cmp dec xchg mov int3 hlt or push mov jmp xor mov roll mov dec imul movsl mov inc shrb test push movsl outsb jg fidivr adc pcmpeqd pusha add (bad) and notl jno pop dec popf in push ret dec sub mov xor je sub subl xchg push xorb pop (bad) xchg push cltd jle mov cs dec enter or jb pop in popf cmp sbb adc mov sub add out jns lea ljmp pop lods or xor fild inc pop dec jns sti pop int cli sbb hlt addr16 xchg stos mov in mov push adc sbb inc (bad) lods or faddl inc push pop mov sbb jns in ds (bad) adc add sbb loop ret add jle mov mov xchg (bad) mov test es push add mov mov xchg add push loope jae pop aas xorl (bad) and mov lret cltd data16 rclb jl and cmp (bad) fldcw cmc rcrl data16 (bad) fsubl jno mov push adc aas test add lret insl and sahf lds xor sbb push repz lahf loope aam mov sub aaa stc (bad) pop mov pop (bad) jmp mov ds test mov inc mov xchg jo cwtl or orps cmp jmp mov and xchg mov lret fdivrl (bad) das clc jns into or pushf sbb adc and xor rclb push and sub sub sbb or aaa sbb arpl cmp or test mov xchg push stos fcmovbe cmp ret mov lds and lea push andl mov dec or movsl in aas xor or pop das std repz cmpsb adc in out mov and xor fidivrl out (bad) testb fwait insb sbb sbb test xor jge sub icebp lods cmp aas movsb pop ret mov shl cmpl clc pop push pop cmpsl cmp aam mov (bad) outsl mov je mov scas rclb mov mov adc fildl hlt ret pop xchg add imul into lock outsl subl xor mov mov hlt or and push xchg bound roll fdivl iret push addr16 adc xor adc fcoms mov xchg movsl cwtl sub sti mov push or scas pop xchg je lcall xor mov mov insl jecxz or inc mul movsl push movsb and push in and fisub lret mov pushf cmp add mov push loopne rorb sub adc out mov sub jb dec fs xchg sub xchg stos sbb in mov inc aaa inc push cmpsl mov insb lret inc push (bad) mov rclb push mov (bad) ja jb inc imul sti js jne ja pop (bad) mov imul je lahf or sub sarl scas jo lret gs jg or mov sub inc and jb mov xchg mov notb lret ret adc sub sub movsb aaa clc repnz movsbl fwait push mov out jl int3 xor push push std jnp bound push cmp (bad) shrb jecxz add rclb sbb pop scas dec cmp push cli adc push mov adcb (bad) iret mov xor scas fdivrl pop push sti push enter loopne sub sarl rol scas adc jle mov hlt inc ficomp (bad) (bad) jne ss fstp (bad) nop ljmp sahf add or cli fisubl jl in or push dec ja daa mov mov scas push pop and and stos sub data16 test imul imul ss cmpsl mov sub aad andb arpl outsl sub addr16 sbb push sbb push movl lret pop mov repz dec cmp mov cmp and cmc pop lods call nop dec lret and push cmp jecxz in loop pop fnstcw add xchg jle aaa pop mov hlt dec jns lds cmc punpckhbw sub inc pop ss shlb push jp push andb cs add push mov inc inc jb mov mov push fisttpl imul mov pop testl pop inc daa jecxz fcomps mov std adcb int3 and ffree test mov popa gs inc movsl inc add aad xchg push or in mov mov mov cmp test insl xchg xor ret push inc lahf sub sahf call mov data16 das sub fwait andl fist pop mov add repnz outsb sbbl stos hlt adc stc cmp stc arpl and inc push add decb cli int jno loope imul dec fmuls insl dec iret mov outsb mov push movsl pop xor rolb jne mov jnp mov adc arpl leave inc pop es ja ret add lods fwait mov adc ja (bad) (bad) scas cmp jge mov pop xor cmp or testl ficom test cmpsl shl pop mov sub dec dec ds les jo sbb mov movsl dec pop jmp adc jb jbe test leave lods je and or lds xor mov push mov xor jl sbb gs add mov pop fistpl mov pushf leave pop icebp fimull mov mov popf pop (bad) mov and adc pop adc and in int cmp xchg ret shrl jnp adc xchg push xchg inc test fdivs jge xchg cltd sub ja mov lea dec mov push imulb mov cmp pushf dec outsb xor data16 cmp push js cmp mov mov movsb inc fsubrs push fdivr ja ds sbb mov push sub scas add jl sti cmp imul repz cli jmp mov cs cs mov outsb fnstsw fsubp sub scas (bad) xchg sub lods mov sub lods mov bnd mov rcrb (bad) dec mov cld xlat mov and lcall push (bad) xor test jbe sti mov sub cmp cmp xchg sub mov dec cli lret call xchg pop dec jp push dec xor mov cmp call ret mov (bad) mov aad daa lahf pushl fiadd imul and mov popf out push inc cmp mov test jns (bad) lock inc or inc mov lret and adc push pop jl add jae shlb movsb hlt lods insl xchg decb out mov inc not lock dec mov xor cwtl mov push and sbb dec dec enter push ret rolb add cs scas popf xor pop inc fsub sbb cmp insb sub xor lea into out jnp push jmp gs cmp xchg jp mov sbb xor mov in cmp (bad) rcrb push shlb mov pop mov popa sbb mov pushf (bad) daa test aaa stc add inc mov outsb push inc lods xchg jmp mov cmpsl pop dec or pop insl jbe mov lds mulb popl or mov mov mov sbb fnop stos cmpsb inc cmp cmp addb shl or lahf jno or pusha outsb rcr mov rcrl cli push pop cmc aas dec jns aaa stc into aad outsl sbb and pop xor lods dec pop jns mov xor pop mov sbb sub pop cmp leave push sbb in mov push cmp sbb cli insb outsb fnsave enter js fistpll add mov xchg arpl jnp pop out aaa mov xchg punpckhbw fwait test push outsl inc and xor fwait sub lahf add pop jp cmp and hlt aaa inc mov (bad) clc push mov int inc mov stos lcall out or jmp loope jecxz,pn push inc je ds xchg fpatan call push xor xor shl mov jecxz and adc inc sbb leave int jecxz lock test fwait imul out inc mov into mov jmp fdivs lcall loop test pop dec pop arpl jo or pop pushf mov and mov mov add mov out movsl mov or pop out add sub jg mov push adc inc push movsb inc jmp iret lret cmp inc pop rolb xchg enter xchg xor popa xlat mov mov cld pop xchg sti inc xchg push call mov dec cmc push ret inc fs stc in inc je (bad) jnp xor fsubr jns sbb push shlb pop in stos movsb leave pushf pop xchg int3 xchg dec mov cmp and andl iret push mov pop leave std inc sbb out xchg adc test dec mov insl adc push dec addr16 push outsl and repz xchg push cmp xor and jno inc fimull scas call mov push mov push dec mov sbb scas repnz xchg cmp lahf sub mov (bad) xor sub xchg xor imul loopne xchg lods or and scas push and sarl ror add out dec sub inc negl shrl out movsl sub (bad) fsubs jns jb sbb test ljmp mov mov loope frstor leave push jo lock mov mov pop adc in mov push pop xor popl dec fsub int imul pop xorl dec mov rcll sub sbb aaa lahf sub insl push inc push lar pushf (bad) lahf xor jl in push enter mov cmpb pop mov sub xor push inc cmp popa xchg pop push gs shlb repnz jge jl pop pop cmp (bad) xlat icebp xchg jp xor sub xchg lds or push popf xchg daa sbb and ret imul fcmovbe mov jle jnp xchg mov or mov cmpsl lock mov push iret mov data16 and test push ror xchg hlt hlt aad add fwait (bad) stos pop bswap jb xor scas pop push aad mov xor mov cli outsl lock inc xor rcrb inc cmp bound js in imul lret enter jns cmp mov fdivr sti jae dec mov test pop sub mov dec out stos mov push (bad) insb and scas mov and adc inc jge js es js outsl and out icebp and push and je daa jns test xchg or push adc hlt lods fneni(8087 sub es arpl out popf mov lea stc (bad) dec clc rcll icebp sahf in std je sub (bad) mov jle pop jp,pt rcll loopne aad xor pop sub stos xchg xor sbbl cld cmp scas mov test pop push jg mov stos xchg sub (bad) aaa sahf popl mov and adc test pop ret cmp data16 sub sub hlt movsb adc std sbb (bad) cmp sbb pop inc out adc xchg repnz ja sahf or inc das sbb fucom rorb es mov ret call in call test mov les add hlt fidivr jo movb and sub sub mov lret or fs and mov (bad) sbb mov pushf popa in jle ljmp icebp repnz sbb add jnp rcrl (bad) mov rcrb dec xchg icebp mov xchg mov dec rorb sub cmp (bad) pop icebp mov cmp insb repz lahf js jge popf mov xchg inc jbe das jecxz dec fistpl addr16 sub mov push (bad) mov mov out pop movsb sub scas (bad) inc std mov dec stc add mov cld cmp addr16 jl cld out push lock mov test js add es test xchg adc (bad) jmp leave xchg daa dec sahf cmp repnz xchg daa dec sahf cmp repnz lcall add incl and lret addl add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc push push pop adc add adc dec orl mov movsl mov add out add inc movsb inc and arpl or out mov mov mov add mov ljmp arpl push push (bad) mov clc push xchg das stos out add dec call xchg xchg mov mov aad push cltd xor cmc fucomp push sbb clc ljmp inc xchg pop adc cwtl mov add xor sti mov mulb inc lret stos mov lds leave mov (bad) cmpsl (bad) jl (bad) fdivs cltd (bad) in (bad) mov (bad) (bad) cmp sub jo xor sub xchg scas das mov push outsb test outsb add mov adc or jmp clc push in out lea std pop stos aaa iret rorl xor push lret out int3 jg repnz test cmp mov or and sbb lcall addr16 mov mov pop mov loopne lods pop loop scas push mov fsts inc jb iret or lahf movsl test fild lret push divb mov mov inc xchg pop mov push pop outsb andl das jl xchg pop dec loop fbstp mov xor lds in jbe cmp xor sub les mov movsl jge repnz (bad) mov je scas loop pop push mov int into or mov cmp daa adc or lret push cmp push xor and js cwtl ret mov push push test push push mov cmpl xor xor jg cmp pop lret repnz cltd xor clc in insl xor test lret xor in sbb pop ljmp addr16 jo pop push xor push popa mov (bad) fcmovu jnp ret dec int pop inc lret xor nop fwait dec shr out int mov incl ljmpw je adc imul popa out jmp outsb call leave lock mov sub jecxz pop imul lock dec lea push jae cmp jmp rcll addr16 std outsb add sub cld das fidiv fdivr das sbb stc xlat mov ret (bad) into add mov inc sub loope addr16 mov dec (bad) jmp cmp in ret dec mov in cli pop push je and jae je rcr outsb lea mov in aaa pop or cmp sub js mov inc mov and add add mov outsb cmpsb mov mov lcall stos aas (bad) dec jnp inc adc popa fistl push fiadd push mov and pusha sbb ss cmp mov negb cld (bad) jns and pop adcl cmp ret push sub pop xchg imul mov fwait jnp (bad) mov inc aas (bad) (bad) dec jbe icebp push repnz cmp int fidivl and cmp repz add mov xor js jb scas and repnz (bad) (bad) sub pop cmp ljmp les jmp sub sub mov push add out rorl cmc sbb jne pop stos cmp loope xchg leave xchg daa push add imul push clc push lds pop je dec jl push cmp cmp aas and mov pop mov inc pop jecxz pop xchg cmpsb inc into pop adc xor std scas arpl stos jp sub iret les add push push push pop push or mov lcall mov and call out jp enter pop add dec repnz pop pop jg sub push lods dec fmuls add push icebp iret fcompl cmc popa fs xor xchg data16 lods xchg maskmovq negl stc or mov inc insb sarb adc pop ret cltd inc add stc or sbb scas (bad) iret and jg jbe lret adc test fstps mov dec add xchg in pop leave and iret fnsave push and arpl imul sbb lds mull mov mov mov dec push fldcw jne cmpsl inc mov and jl stos pop sbb add fbstp test jns movsl dec pop shl push mov xor mov int imul mov lods jp push dec jge sti leave jp inc (bad) in xchg jo lods movsl scas jnp mov outsl pop sbb mov imul das add add call addr16 insb cmpsb mov xor out ret fs sub mov loop mov shrl scas mov mov adc inc dec cmp jg sub shl loopne cld test pop (bad) cli fildll xchg sarb stos sbb sbb add gs daa push aaa mov lahf add sti xchg sub sahf dec jecxz fstpt sub insb ss loopne xchg pop push cmp or pushf leave mov mov sub jge jle arpl loop arpl adc xlat jne mov dec jae sbb adc xchg in push and fild mov mov dec mov negb aad shll inc cmp jne cmpsb jae adc mov (bad) (bad) jecxz xlat inc aas out dec popa test pop sub lret xlat dec xchg adc xchg dec in mov push out add dec aaa aas jge xchg (bad) in push mov fcmovb and cli add ja dec push std (bad) and mov mov mov xsha256 cmpsb push mov or inc push test pop mov jne lret xchg fwait xor loop fidivr es mov stos ja jnp and and push outsl in jle fldt (bad) xor xchg xor cmp sbb outsb bsr loop mov test lahf ficompl push aam sahf pop andl scas adc cmp or mov ds and inc inc (bad) std pop xchg adcl imul hlt cltd jae in leave cld imul push sbb hlt cmp inc sub and push mov in jb cltd (bad) sub jl sbb and mov xchg notb popf push aas fcmovnbe jecxz sub rcll adc in mov xchg mov sbb jmp (bad) daa (bad) inc jg xor mov cmpsb push cs or push leave in lds (bad) xchg sahf cmp sub xchg push xchg xor inc jns pusha cwtl or xchg xor push out stos sbb (bad) sub loop loop pop jne push loopne pop push out outsb pop dec data16 scas lock xchg inc fldt cs lods dec enter or xor rcrb mov shrb clc xchg push lock mov pop sbb mov movsb das sbb loopne dec xor jb mov stos jecxz cmp in aas mov shrl and and and lock je mulb push push sti fistp int and loop xabort hlt ret mov sub add ja jmp push jb out outsb adc fiaddl scas adc mov rorl xor fisubrl cmp rol xor cs sub movsl lcallw mov nop gs dec sub ds push cmp mov pop xlat inc ret cmp push (bad) dec mov mov (bad) mov sub faddl inc fs mov test pop mov fucomi popa dec mov xor push movsb cmp lock test inc cmp loope bound inc cmp jo dec clc je mov push mov gs aam inc sub sub rorl mov popa or push into imul push jp lret cmpsl scas ss push mov and pop test dec repnz and mov inc ds mov jl adc aaa lods jg cmp pop ffree call or jg fmuls mov add pop xchg mov fist ret lods lcall push (bad) jo fdivs (bad) cli rcrl adc int lcall xchg sub jge inc out stos mov sbb enter cmpsl (bad) mov (bad) add (bad) mov icebp xor sub lret imul xchg sbb add cmp cmpsl js jl add push in jnp xchg mov sub rcll lock xchg leave or adc inc sahf sbb dec jge adc out fist or and push stc test in xor jge rolb xchg push dec fs mov xchg or loop push or push push mov (bad) dec and mov lcall imul or sti mov repz pop cmp decl lret xor test pop aas xchg cltd xchg jmp mov cmp das xor and dec adc fsubrs jb pop dec ja fs xchg mov dec jmp mov xchg and les mov add inc push mov out je pop mov (bad) dec and jle cmpsb or xchg add sub pop xor ss add (bad) jecxz daa or pop sahf pop and push pop (bad) push in mov mov add cmpsb xchg inc sbb mov push icebp nop sub mov lods aad mov mov fistpll sbb and fstpl mov push mov push mov inc xchg test ret and insl or mov cmp leave ret pop movsl ret pusha or loope mov jo or jo jl and jne fimull xorb add mov xchg and mov cmp inc push mov or out rclb dec mov pop push popf cwtl stos lahf (bad) repnz clc jge aas test mov jl rcr clc outsl and pop push in cmp add pop (bad) imul dec fwait jnp (bad) inc (bad) mov jmp in xor push js cmp cli and adc ret mov mov or sub (bad) mov mul sbb and rcrb fimul mov dec add mov or fst mov xchg mov ret lcall frstor subl push push sarb sub fwait test repnz and insl int pushl cmp loopne fldcw push ss xchg gs fstps push stos lahf push push ficom loope rol cmp dec cmp fldt mov push fimul or dec movlps sbb dec xchg xchg sub adcl pop scas pop mov mov pop or fcoms and push xor pop cmp arpl pop std or out imul xchg sub icebp fwait lods cmp sub pop pop nop push sbb out mov lret sarl (bad) sti xchg ljmp loopne jmp add add sub gs imul pop repnz mov pop les movsl sahf shrb test pop lret jl sbb fdivrl mov test sbb inc sahf push subl push in and push add out neg imul je insb fwait mov and pushf cwtl mov and adc out imul fdivl (bad) aad mov dec inc (bad) pop pop sbb mov or mov xor scas nop jmp push xchg mov sbb sub lcall sti jnp stos inc cmc cmc pop imul int repnz aam adc xchg pop clc pusha jecxz pop cmp fidivrl mov xor pop aam mov mov or cmp mov nop (bad) jmp lret mov repnz lret jge jle lahf sbb cli or xor ret jge pusha movsb (bad) fldcw fucomp pushf ja pop mov pop mov stos push daa xor popf mov dec pop xor rorl in sbb jecxz jl aad mov cmp cld xlat aaa cmpsb sub push add or sub out adc and test mov aam sbb cli push ret mov int mov std jo inc test add dec leave xlat push out mov out dec push xor xor (bad) enter into loopne arpl loopne es mov imul xchg jne or loop inc testb pushf sbb dec test out dec jno hlt and lahf adc xor int test loop pop xchg dec mov mov insl insb shr out pop ljmp adc out aad push dec xchg aaa sti push sub ret into loope movsl (bad) push cmpsl scas fucom outsb lods mov xchg fs into sub sahf test cmp push (bad) xor aas hlt push shl xchg imul daa clc mov test and cmp imul aaa cld inc jbe ljmp xor fcoms pop xor loope add test adc out addr16 scas popa push (bad) fs aad push idiv ja jb xlat popf and pop xor jns jnp adc mov in push fimul fstl popf and push ds (bad) xor pop (bad) mov xor lahf inc mull push mov pop push ret mov mov cld scas das jno test pop rcl enter sbb lcall sbb ljmp stc mov inc mov lea movsl sahf pop ret cmp fldcw mov (bad) mov adc aad das jge mov cmp pushf pop pushl addr16 fcmovu mov addr16 clc add xor mov cmp and or outsb pop push push inc cltd popf ss inc sub or (bad) out dec dec loop inc cmp and je jne int arpl outsl repnz je ja cmp daa (bad) jbe xlat sub stc ret jae dec or into outsb (bad) lcall in or js dec (bad) jmp (bad) shufps lea stos or fcmovb adc test sbb lods push inc rorb js loop mov das pop mov mov aas add push jmp add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int3 adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc add loopne jmp inc inc inc add or movsl fistl and xlat adc inc jmp xlat sub je inc out mov mov add cmp cmp clc test add fmulp pop in in popf dec xchg mov push mov mov sbb (bad) dec pusha push stc out out ljmp icebp outsb dec out jp test xor outsl int inc stos xchg fisttpl outsl js popa stos dec inc imul pop mov mov rorl scas loop das cltd fiaddl rcll stos call lret addr16 cltd adc hlt loopne cmp std or mov sub inc icebp fwait adc dec subb mov push dec dec push xchg push add sub out roll (bad) mov vmread mov sbb and mov xor jae jge inc lahf dec mov dec jnp push jne fdivrl mov jno cs shrl push sbb lock cld xchg pop lods shr repz mov push add cli push xor loopne xchg mov jp (bad) aam inc mov xchg push adc add jae and bound push jns cmpl (bad) insl lods stos push jle jle inc (bad) jge xchg mov jne bound push fimull mov or stos adc mov lods xchg add ret mov xor xchg mov inc imul std and ret dec mov mov into push sub lret cwtl jbe lds mov int3 rcll inc scas mov outsb repz (bad) out imul jno cmpsb mov call xor lds and setne imul jl dec aaa xor pop pop xchg and or and inc arpl jg lds test mov push das sub lea add push bound fcoms iret in xlat inc push sub lds popf sub mov add clc insb fwait loopne test mov decl rorb cmc icebp xlat mov je xchg scas in adc inc xor in test push std and xchg data16 mov (bad) rol mov fistp mov stc push mov out add xor push fadds dec inc mov movsl cmp dec cmp popl jb push stos mov dec fidivl test loopne xor or int3 out jge and xchg inc pop imul retw sahf xor jmp mov and sbb or adc ja stos data16 outsl and data16 loop jmp sub push xor mov scas mov insb and sub and inc imul cmp sbb jne dec jae das pop mov imul test pop mov lret dec mov outsl or and test xor cmp sub mov sbb xchg pushf enter pop cmp mov push ret mov jmp mov mov sbb mov fcoms repz ss pop mov cmp pushf imul mov dec push ljmp add sahf and in inc shll addl dec pop negl jecxz dec ds push imul mov inc xchg mov sbb mov push gs lret pop testb test frstor xor add mov bound push cmp loope (bad) mov bound push mov fidiv pop jmp inc iret loop mov jge les mov aaa jnp or jmp and test pop lahf jns les jmp push cltd adc dec push and je (bad) dec xlat shl and sbb sti test fbld das inc fdivl outsl js or and mov adc pop (bad) mov out jle es into xchg cmpsb cmp insb mov jle xchg mov xor cltd ret stos mov cs adc jecxz data16 ljmp fsubrp (bad) test sbb push sbb xchg mov mov popa push cmpsb mov loopne dec jns cmp jb xchg lods popa into push loope nop cmp pop imul cmpsl jae adc leave pop mov in scas dec js inc or jecxz push push popa jmp mov or and xchg (bad) mov mov and xchg push in outsl stos pop xchg pop insl push scas dec adc shr movsl jg loop cmp dec imul inc inc jge mov ret and sti stos aad scas enter sbb mov pop xchg sub std test jbe push sti add iret fildl mov jnp adc or (bad) sbb dec sub jg or (bad) icebp pop push loop sar fstpt fnsave or loopne dec hlt or xor pop and pop mov orb test or sub (bad) imul adc shr out in cmpsb pop push sbb (bad) cmp pop push pop out popf lcall mov or insb mov movsb (bad) pop jl bound pop mov and lret pop andl test inc fs pop je and insl clc jmp ss push out mov push inc (bad) cs outsl pushl enter mov pop outsl dec in aas insl xchg cltd test mov lret negl xlat mov and test jns mov push outsb lds jo dec sbb and dec mov (bad) mov dec les dec gs inc xchg and sbb loopne icebp enter imul mov xchg mov jge mov mov out mov nop mov insb clc xchg push or jecxz gs je xlat cmpsb fildl imul sbb mov pop cmp test xchg mov push adc popa pop out (bad) lock daa fimull insl insl shr sub std das flds cs pop mov scas push bnd mov dec cmp cli push sub adc repnz scas pushw cmp mov adc mov (bad) jne out mov mov sub mov xchg and inc lcall inc jmp inc addr16 loop call sahf pushl ljmp cmp xchg cmpsl movsl cwtl jg sbb nop leave aam pop icebp loop xchg jo cmp int mov and ss cmp test clc inc out rol ret repnz xchg xchg pop push dec cltd xor bound cmp insb pop ffreep mov fildll bound push sbb (bad) in add test sbb addr16 cmp test and cmp into inc inc and testl fmulp lods lret mov out and jle daa pop mov fxch add cli pop mov fimul sub shr ja test mov stos bound cld pop leave inc adc mov jae cwtl or lods cld cmp jecxz movsb rcr and movsb cmp insl push lcall lret inc fs ficom fidivl xlat jns out (bad) push dec aas mov mov cmp in sub jne cmpsl or xchg add leave push or call jne jp push mov mov in in mov aad mov mov push pop add loope pushf loope sbb sarl loopne popf ja push in div cmp js bound push adc push aaa loop shlb test outsb dec pop loop mov fild negb mov or cmpb lods inc ret dec jno and divl cmpsl daa and movb test imul lcall (bad) jns pop lods xchg inc or sbb jo and fs push movl inc adc leave jae test sub pop aas pop pop push sbb sbbl sti adc mov push fstps inc (bad) sub cmp sbb mov or fsub mov imul mov jne nop sub inc aaa es pop sbb in insl xchg test (bad) test mov fwait jp jbe test nop push mov jle in fistl add add nop adc iret add xchg jae xchg (bad) push (bad) xor lcall push and jmp js insb fldenv push loop das add jp int xor jb enter jnp mov dec loop in or mov sbb repz and cmc cmp xor push clc inc mov lock (bad) in les lret out (bad) mov dec pop xchg in sbb cmp sbb jl add (bad) or adc add mov or jle xor loopne mov outsl push and jle sbb fistpl sub jge leave pop scas (bad) adc iret sbb mov pop mov mov pushl or sub fadds (bad) mov or mov stc je mov mov cmpsb scas lods jg mov iret jle adc xchg jb fwait arpl rcrb mov sub sti mov mov and roll mov mov int loopne lock sti (bad) leave insb hlt push mov aam shrb sbb inc pop mov cmp or dec ja or and push imulb cmp std add push jae push inc jecxz sahf sbb enter (bad) addr16 mov pop stos fnstenv rol mov sbb cltd push sti mov add fstpt cwtl xchg popf out cmp adc push clc (bad) aad bswap xor inc pop xchg loope movsl movsb mov es cmp push xchg js loop cmpb std (bad) sbb mov cmpb std jg push sbb mov jnp xor (bad) scas insb jnp decb mov sbb jbe push add jl xor adc and imul or mov clc xchg push add push test adc mov xchg mov mov cli cmpsl into inc loope cmpsb xchg push adc inc inc jo pop xchg mov or lahf jp inc in fcmovnu xchg clc pop xor daa mov xchg mov fidiv xchg bound cmpsb fs xchg ljmp stos dec or inc push add jns cmp push and xor adc push in loop fwait mov push mov dec lahf inc imul enter xchg cmpsb or stos inc rcrb stos jnp xor jecxz test jle mov shlb or jmp adc add (bad) mov xchg outsb mov pop dec dec unpckhps sub stos cmp inc rol cmc stos sti inc dec (bad) sbb mov push insb loop dec mov dec stc lcall cs loopne fisubrl add test dec (bad) jno movsl out repnz rcrb add push mov pop dec sub daa mov fmuls mov push mov scas sub cmpsb int dec aas fucom jb insb jle arpl push imul sbb je rcrl daa or jbe (bad) jno ds xor mov out xchg lcall repnz shufps jnp xor das push mov in fs xchg jnp fldl xchg cmp movsl mov cmp ljmp mov in fwait mov pop adc sub xor sub hlt xchg jo gs repz mov push out movsb cld mov jmp jbe (bad) xor lahf ds xor leave out push push dec ja daa mov xchg cmp pop pop sub adc mov repnz ja fisttpll add sub adc popa xchg or sub fs pop and mov xchg in cltd pxor fnstsw mov aam insb inc lods sbb pushf idivb xchg mov push push (bad) xchg sub and outsl and push mov pop (bad) test push fistpl (bad) stos ss dec jmp insl dec and dec mov jmp es cs jo dec psraw leave sbb bnd mov cmp mov adc into mov bound pop mov adc push xor lods mov xchg pop push ljmp push sub xchg inc imul movsl es cld jo (bad) popf mov pushf dec jmp or daa push pop xchg pop jno mov mov out into xor cmp lahf movsl out inc nop dec cs cmp jp mov jp dec jl sbb cmpl int3 mov mov inc test ret mov mov sbbb sbb cmp xchg pushf ljmp jnp fs nop mov imul sar or mov mov stc mov test dec mov add dec inc lods sbb lcall xor sbb pusha add fadd mov (bad) xchg xchg cmp sahf fwait (bad) stc jle andb mov shr adc or fbstp stc imul je fdivr lds add divb cld fstps iret dec mov hlt (bad) cmpsl lods dec repz push mov aaa jl mov mov xor push in and mov pop (bad) lods cmc stos inc mov movsb (bad) arpl out into sbb xor sbb std in (bad) jle lock rcll push push cld mov dec sub adc loopne sub bound pushf and or adc inc ret insl pop es stc jnp into stos (bad) push std in push clc sahf mov movsl rolb xchg mov dec or xchg cmp jl cwtl jl mov inc fcom lret jae jp,pt fcmovb cmp lahf fnop mov adc xchg ret xor xchg call pop xor (bad) mov push data16 jl clc jnp out mov (bad) movsl or clc das pop std mov inc stc or daa mov and das mov cmpsb xchg add mov cmp xor fistl add aad pusha mov jecxz aaa mov cs jg hlt call push cmp mov jp call pop push stc push roll add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb add lock out mov mov xor int mov mov aam pushf cwtl out out mov cmp jg aas add or scas in lea imul push mov ds ljmp mov movsl cmpb lahf sqrtps out xchg enter and inc inc das movsl push fcos pop cmp scas (bad) adc push loop rcll loope pop mov bound push enter sub fnstcw fmul hlt xchg ljmp daa or push daa pop sbb fistp xor mov jg cltd push sahf fidivr cwtl in jno je fwait sbb push sub xchg movsb mov xchg je mov sub mov adc aam add fistp pop js jae or or in jmp (bad) hlt add adc jge mov inc aas add popa outsb mov enter and jne imul mov stc lods jmp jge push in and fdivr es mov jae sub shrb adc outsb repz xchg subb outsb mov ficoml mov les push pushf push sub int3 repz fstpt scas mov rcrl stos out int3 cld xchg cmp sbb xchg cmp inc das sub adc cmp loopne cltd aaa sub loope sub xchg and adc mov insb mov dec das insb sbb push (bad) mov jo inc mov ds ficompl bound not mov adc nop in mull xlat arpl movsl imul into bnd lea jns inc push (bad) insl ds xor ja dec div dec lret mov test adcl std movsb xlat cmpsb push xor sub test push pop mov dec clc dec and and or mov (bad) mov arpl daa jne,pt gs call decb and popf push fdivp pop fisubl pushl inc cmc lret in xor cmp out js repnz push add pushl (bad) es inc rcrb enter cmc int mov and xchg mov sub lret outsb mov dec add std push xchg jns fisttpll mov hlt push cmc mov cmc add xchg cmp and dec mov mov cmpsl mov (bad) in test testl push and pushf cltd and pop cmpsl loopne int jo aas loop lods sub outsl push mov sbb cmp mov shlb repnz mov call cmp xlat mov inc imul or or sub jnp cmpsb mov out jne loope xchg loop xchg aas inc fsubs (bad) xchg (bad) data16 ss mov mov sbb cmp cmpsl cmc mov aaa mov jns es outsb mov dec cmpsb jecxz out add jo xor pop pop cld cli mov rcr cmc (bad) aaa rcrb rol mov cmpsl out negl inc sub jmp sahf mov js into adc sbb popa dec out arpl (bad) aad jno xlat and stos insb push fstpl rorl cmp xor push xchg mov mov bound pop shr dec mov aam adc int3 xchg or or mov loop jbe xor add xchg lcall and sub mull mov pmaxub mov lock xor mov inc repnz call aas (bad) xchg adc push stos and mov push pop mov bound mov inc push sahf push lds neg sbb cwtl in xchg cwtd lds push and inc push push lcall (bad) push adc cmp cld scas pop cmp mov shlb test fistp pop push pop cwtl ja inc arpl stc sarb pop xchg dec rcrb cmp sti mov jo int3 loopne lods xchg jmp push fwait mov ficoml cmp xchg lahf xor sub add push enter push mov cmpsb and fwait jmp test jae jg sub insb out inc pop cmp or and mov pop imul cld adc roll jl rorl clc dec mov aam les xor cmpsb mov sbb in daa mov mov add adc xchg cs jge push clc test jecxz cltd and repnz cltd je frstor sbbl mov mov push push fiadd aas push data16 fisubl sub daa loop aam mov les ja inc push sub sub cmpsb and jbe push rcll dec sub mov mov lds cltd xor xchg lds data16 insb xchg icebp adc loopne loope jb lcall sub arpl loope movsl rolb jae dec stos and push fadds jle (bad) fdivr test div xchg test popa push and add test and sub pop push mov or or dec rcrl cld call enter dec xchg sub mov dec or test in xchg mov sub (bad) inc aad jle (bad) cld push outsl jbe fcoml ds mov sub ret lods out jg (bad) mov mov hlt lret xor data16 mov cs mov sbb xchg fidivr pop clc sbb rcll dec jmp aam sub adc jg popa lret repnz xor mov lahf xchg inc stos push pusha inc add add fimull das jo mov add mov xor mov inc ds xchg fcmove push sub pop pop mov xchg mov xchg imul out sbb mov dec push sbb sub lods pop sub push mov insl or adc push inc xor or test add lock adc ja imul push pusha mov aas sub cli or push add sbb jl mov inc push in push fwait jl cmc call (bad) jnp loop mov lods fstps push int mov mov xchg add stos shll les inc cs loop scas lock inc adc push push fwait inc pop mov jl mov push dec xlat stos xor adc inc (bad) mov xchg das mov mov jp push movsb jmp xchg ja mov xchg pop lret mov ret mov adc xor mov mov sahf ss mov mov hlt ds xor int3 je xor in mov test xchg int lcall mov fwait sub lock rcrl pop or data16 divl inc jg ljmp cmpsb lea xor add iret lock and cltd dec sbb out fwait pop jge mov sbb dec xchg xchg push fdivrl add pushf subl in popa fs pop std mov push inc dec or daa lcall adc stos fstpt (bad) cld shll lods xchg sbb (bad) jo mov push test push out mov xor xor insl jecxz fxch inc jmp int push arpl xchg (bad) lock add cwtl jl stos xor ljmp pop xchg cmp pop jp sub lods push test fisubl dec push adc mov push mov jne dec leave addr16 jo push into cmp cwtl push icebp cwtl pop leave shll adc scas popf jl pop sbb mov pop fdivl push pop jge push sahf sub scas pop sarl xor sbb add mov out adc or cmp insb dec das or mov pop cmp (bad) pusha jge mov push push cmpsb test fcomip mov add in icebp lods jecxz cmpsb inc mov and sub cltd hlt inc mov test mov jmp push mov icebp std dec sbb sub inc mov (bad) shrl pop les lahf lcall sub sti sbb cmp pop cld ret pop pop jle,pn cmc fisubl in clc sti daa out les in jg dec call ljmp jno lahf push and xor adc clc negl push xchg ja adc add mov pop out mov mov mov pusha das cwtl pop aaa adc pop push pop push icebp jl ja pop in mov xor je pop sbb sub xorl rcll push ss or jecxz dec pop arpl adc in adc push lds dec cmp fcmovnbe lcall repnz fimull or nop aas pop push cltd outsl jae loop mov xchg push imul rcrl xlat shlb xor (bad) sbb test fcmovb dec sbb jne stos sub mov push sbb and cli adc out iret fstl push out mov mov ffreep leave xchg mov lret in je push inc movd fadd jmp mov xchg test lahf enter loop cmp das mov xor jae dec jns lock xchg jne aad push add es ret dec sbbl roll out out jmp add lds inc pushf xor out xchg stos mov dec jmp mov movsb inc push xchg dec dec inc sub lods jae jnp dec sub push inc arpl xchg out nop mov (bad) out sbb movsl cmpsl mov ds sub sti adc jmp (bad) xchg aam nop xchg (bad) sub shll mov jmp negb jnp adc movsb jae inc sbb xchg adc ja pop js cmp neg js mov notb jb arpl andl loopne mov aas fsubrs lds add pop add mov inc mov jnp fiadd insb pop mov and mov push push add add enter jl sahf pop adc nop fdiv or dec jb aaa imul sub call sti jno bnd push push pushf sub mov push add iret jne cmpsl jmp or push popa (bad) imul push push es bound lock sbb inc pusha mov repnz std or hlt mov inc jl dec jmp mov aad in fist sti xor cmp incb fs stos fs movsl inc adc pop sbbl jno or add in dec sti cwtl in fnstenv lret in adc scas xor jge sub sub mov push jb dec icebp movsb scas cmp in mov or xchg adc int dec and push (bad) leave adc lods fsubrs mov mov in or ret sub andb imul pop inc dec in dec in mul pop adc dec (bad) inc outsb jne gs insl imul sub sub jl sub clc rolb sbb ret and lret rcl sbb mov dec movsl sbb jl inc into xchg ret jge jle mov jmp xchg (bad) (bad) jmp rolb into xchg pop inc aaa cmp daa xchg adc dec xchg leave mov pushf dec jge scas lcall mov pop or or arpl (bad) fcoms jge inc rcrb xor xchg loopne jns iret jl add push and fidiv mov mov inc jbe outsb jnp push out ret adc dec mov and js mov mov pop rcrb stos pop js sbb mov and xchg jne test and loop pushf sbb outsb out pop imul jno cmc and inc fyl2x bound pop adc xchg dec cltd repnz int movsb pushf hlt mov dec ret sub inc lret cmovnp aaa cmp test jp or int mov mov cmc lods xchg out aas xor dec (bad) inc (bad) adc loope adc popf mov lret insl mov es mov jg les (bad) in addr16 outsb jl in cmpsb push fsubl lods push push or lea mov jnp clc xchg push jg fcompl out xor push fnstenv adc push (bad) int stos mov mov popa test xor sub and mov and xchg push xor and mov mov jge dec fdivrl lcall add adc ficoml push mov xchg jo jb push push and aam scas out imul jb pop outsl add data16 iret movsb shrl int add (bad) fucom stos mov (bad) stc cmp lahf sarl loope ret or imul inc outsl or int3 jbe lret or scas sbb scas xchg mov add pushf ljmp sti inc push mov roll (bad) xor dec lret xor or fildll adc mov (bad) and fwait test sub in mov mov out std mov push push mov popf xchg mov xchg js lret stos loop cmpsl test xor (bad) ss lret movsl (bad) into sahf mov arpl xchg jo mov sbb andb mov cmp lret or adc lock jnp or (bad) hlt cmc inc push cs push test or pusha out in add lret fistpll jp mov dec (bad) sbb bound std cmpsb pushf xchg std sbb (bad) movb sarl stos xor je aas mov mov mov jae movzwl inc fist and pop lock jo sub icebp inc lods push push fdivrs ljmp xor xchg mov dec add push jne pop mov mov outsl add (bad) js inc lock lods jne adc fwait into ficoml inc jp sub loope or pop addr16 adc and aas sub cmc mov lock (bad) lds xor adc cld (bad) rcrb or scas mov icebp iret add and ret loopne sbb lods jns sbb sbb in mov xor div lea int enter fucom xchg cmp mov out or ja cmp in dec insb das movsl jmp mov in jmp cmp aam mov notb mov cmovbe adc ss clc or stc cs sti out clc in adc (bad) mov jle mov pop xchg stos dec pop xchg aaa cmpl aas in subb sbb or pop jecxz jmp and nop call in push sub lds dec fidivr lds iret fincstp mov fnstenv jnp in fnstenv jnp incl add rdtsc or dec or add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc mov shr jmp dec imul nop data16 mov out xchg xchg sbb and into negl lds add icebp or pushl aad call add pop or and fs dec or pop in fnstenv dec dec adc pop mov adc dec sub dec sub icebp in outsl cmp push pop fcmovnb fadds dec mov bound push shll adc add lock mov push aaa xchg sti (bad) (bad) nop mov mov fsts xchg imul lret dec data16 sub loop (bad) rcll jge stos pop scas (bad) je mov fildl or daa sbb and loop mov pop xchg (bad) in enter out adc jmp mov cmp pop arpl push and popa and aaa fsubl cwtl fnop cltd outsl bnd or add scas or std sub insb es ret jo cs repnz (bad) hlt sub push mov inc dec dec in inc push lds (bad) mov adc setge sub mov xchg stos sbb std sub (bad) jns push sbb fmull add movsb adc mov pop cld out inc sbb (bad) xchg jge mov clc ss popl dec aam dec mov jp and xchg push or mov push ret faddl or push adc iret mov (bad) mov pop jo test out ret nop imul xchg sbb adc mov xchg cmp sub ret sub int jmp ja mov dec shll push jg jmp cmpb xchg sub cld fwait push (bad) fisub cmpsl jne jns xchg jnp xor sbb sub pushf into dec and jne loope jb sbb mov jmp jae or push xor aaa add aaa out push out cmp gs rclw mov negl inc lock adc mov outsl scas jo add xchg sbb lret aam mov inc rolb and rcrb ja mulb mov mov test jbe adc daa xchg mov jecxz or add mov push lock jecxz iret jae dec dec sbb lret push shl xor loope inc mov xlat std fidiv inc adc ret jecxz (bad) sti xor inc dec pop shrl nop mov inc movsl add pop adc ja pop inc aas dec movsl dec cmp cld das lods cwtl leave mov lret or jmp inc and int3 (bad) shrb inc jmp out pop mov pslld and mov xchg movsl fs pop xchg push je arpl fiadd inc pop xchg lea or ljmp cltd mov xor mov jge dec jmp xchg rcll loopne roll movsb adc cmpsb imul mov ss mov (bad) xor jbe icebp ss adc fstpl push outsl popa dec inc ret test int3 and jae pushf push fidivrl sbb sbb adc andl scas mov jle mov lea cmpsb adcl jo xchg int fildl imul hlt mov push and (bad) (bad) scas pop pop mov imulb mov or loopne push xchg xchg mov test mov sbb fildll xor push addr16 dec outsb cltd ljmp dec pusha stos pop pushl jg pusha jp fwait xlat mov add add pushf es dec repnz negl mov addr16 (bad) mov cmpsl in fdivp leave and in outsl js xor adc popa dec imul push adc movsl push push loope push dec rcr cmpsb mov notl clc mov rolb mov cmp jnp addr16 adc inc cmpsb ror test test cs cs cmc mov sub push mov ret dec idiv push in mov insl (bad) daa inc out mov lock add pop add push es mov mov pop ret mov lods mov addr16 shrl mov push mov mov inc and cwtl xor jbe add (bad) lcall (bad) pop dec push ds jecxz mov push add inc or xor lret xchg test pop es aas pop leave mov shr push test sbb sti mov loope push or outsb outsb jmp daa inc hlt mov in aaa repnz hlt lods mov mov and mov cmp jmp dec or xchg ds lcall lret fldt daa movsl push stc bound or xchg dec sbb cmp test je gs and enter jmp repnz add jge insl and adc addr16 in adc jle inc inc mov mov mov push mov pop jne dec (bad) xor in lret cmp (bad) lea adc xor aaa sbb push fild scas loope data16 aaa mov dec adc xchg jo xor sbb inc jae xor mov mov mov push cmp mov xor mov in mov mov sbb jg adc stos popa outsl sub es data16 mov cltd add adc fistl (bad) in lock mov sahf sbb pop xlat aam mov push int shrl cli sub dec mov xlat rcrb call pop popa aaa aas fist dec jmp cwtl icebp mov cmp out andb js addr16 push jg aas inc popl pop sahf xor popa pop pop inc cmpl cli push and dec nop call repz inc mov ljmp fs loopne mov (bad) fcoml pop mov jge and stos into push repnz xlat idivb jnp add mov cmc lret mov push jle inc jns or int3 inc mov sbb add in les mov adc in sbb dec push mov (bad) fwait jb ds adc dec jns add add dec add add shr xchg lea into add or mov hlt jns mov cltd cmp jne push pusha sbb push push fs or shrb jns hlt jo test sbb loopne xchg out test sbb mov andl aaa sbb pop pop xor sub ret xor insb iret mov (bad) testl leave scas and jle mov movsl outsl in mov test cltd leave inc movsb scas call xchg mov insb and xchg mov push push jecxz xchg arpl xchg js loopne xchg inc push xchg adc mov jo cs xor cld or push scas aad addr16 in aas xorb les ljmp or nop sbbb jnp fsubs aas jge repz rclb out scas sub into and test cmp jbe aad jbe stc (bad) (bad) mov icebp jmp xor xor and and push xlat mov xchg mov pop bound pop sub or jp inc xor mov cmp loope and es inc js cmp shrb mov sahf jecxz fistpll mov lret and push bound or stc cmp cmp add pop inc aas mov push cs dec outsl push movsb stos push mov daa xor lods jb mov int jne fisubr ds pop cmp inc imul aaa or fidivl fimul (bad) (bad) call in xchg aam rcrl divb ja mov (bad) pop js scas cwtl mov cmp xchg push cmp fidivrl sbb xlat ss xor inc sbb xlat aam dec cmp sahf ret (bad) mov xchg fistpl loope xlat lret incb es (bad) jae call and push dec pop ficomp cmp cltd jne push xorb lret inc (bad) ret add (bad) jg mov dec hlt rcrl shll cmpsb lods repz into xor cmp lahf cmp mov inc les or add xchg out inc inc cmp sbb rorb push cmp je cld jp mov fsubr adc out outsb push out roll sti add and popa jge cli jb lea inc popa int shl jb mov dec (bad) test push les dec je loope mov stos pop rcl pop pop xchg iret in xor push pop aad jecxz push pop cli jnp icebp clc dec add clc jae add mov (bad) clc aaa gs and pop inc imul mov leave adc mov scas jge decl jb int3 mov clc xor jne mov add outsb daa lods dec cmp xor pop mov and inc scas jns movsb imul clc sub push dec inc pop in (bad) (bad) dec jge cmp pop inc add mov ret lods adc aad xlat mov addr16 pop xchg scas cmc mov (bad) dec movsl test mov mov jne sub pusha fcmovbe mov cmpsl in fsub daa div lods loopne xchg xor orb ja movsb mov arpl push sbb cmp (bad) stos cmp lock test and stc cmp or jp insl imul outsb dec bound sbb cmp mov jo push je ljmp pop push mov enter ds mov cmp in (bad) or fdiv ret cmpsb xchg cmp adcl xchg jbe (bad) out xor popa je hlt (bad) das fucomip mov leave pop sub std imul push jecxz stc dec fs sub js sbb cmp pop xlat les rcll ja add test dec or stos in pop xor imul push int3 inc mov sbb mov and sub outsb lcall push icebp cmp fstps fdivl test into or push sbb jecxz xchg mov dec rolb cmpb insl or sbb push inc mov fwait pop roll daa cmp pushf dec sbb xchg cmpsl xor test cmp scas push push sbb inc daa data16 out pop (bad) test mov inc out imul cmc lret mov pop clc hlt inc xchg add loope xchg jge mov subb sti mov nop (bad) xchg jns aaa pop sbb sbb cmp test dec inc cmpsl mov icebp pop pop pop insl dec xor and mov push (bad) jns jl outsl hlt loop shrb jg push sbbb int fdivrl xor add mov dec ja push (bad) movsl test or dec std repnz es jbe push lret rcr cmpsl in int push add aas pop fisubl jae fidivr inc rcll mov mov xlat inc jo mov pop ffreep (bad) enter xchg mov xlat cld add dec stos adc fwait (bad) jbe xchg lahf loope loop in fadds lret and stos fdivrs test xchg imul adc push jno push daa mov (bad) es mov adc add xor push mov out stos jnp mov (bad) or loop xor movsb sete cmp loope mov (bad) cli in int mov inc mov mov ss sarl push xchg and sbb (bad) mov mov mov mov icebp sub pusha jl jp lods (bad) incl sbbb mov jmp (bad) mov (bad) cmp in pushf push mov sub dec out loope push or aam jns (bad) fwait rcll insb aas fbld pop or rorl and mov mov test cmp xor das sbb leave nop xchg pop (bad) fcompl shrb bound pop lret test icebp jbe xchg sti push iret les push (bad) xchg pop push shll sbb jl enter pop in cmp xor test inc (bad) mov jnp cmp sbb movb push pop xor xor xor cmp out mov pop ret dec sbb jns xchg adc xchg mov mov cld repnz sbb ljmp (bad) fdiv jmp xchg jbe xchg dec cmp insb lahf xor add inc adc mov jnp out jae mov cmp leave inc ficompl push into jmp test fs dec out pop pop out lock outsb push add inc in xchg push loopne cltd xchg jnp inc xchg stc pop sbb inc push repz hlt sbb xchg xor jne sub bound mov mov sub push sahf loopne std inc fwait into test mov xchg loope mov (bad) jno pop adc pop mov lods rcr je loope jle ret xchg fimul fcoml call fs and cmp es push or xor mov mov roll pop out int insb ja movsb mov or cmp and fs shll sub out (bad) mov mov cmp fadd mov jge imul in pop std int3 mov xchg cmc bound sbb popa push stos inc add and push stos cmp add sar cli in insb add mov fsts xor outsl mov in push pusha test popa insl jle negl xor pusha ret or cli mov xchg lods push xor shl push (bad) xchg push push push jp jne xlat loopne pop cmp cmpsb lds fwait adc adc sar (bad) jbe addr16 jmp cmpsl fcomps aaa pop mov cltd cld mov pop lcall xor (bad) mulb jg loopne (bad) or aas (bad) xor pop jae jg mov fs mov mov jge jb jb xchg mov mov sahf mov dec push mov sbb es movsl jmp or fdivrs js sub divb out cmp sbb push mov inc jmp pushf xchg das sub fistpl cwtl mov mov push dec push xchg pushf fwait pushf push add mov dec push xor popf dec cmp out jae or mov cmp push rorb inc aaa dec in leave cwtl lea jp (bad) adc je test in inc (bad) std out sbb loop mov das pop mov mov das pop mov add aas cmp and dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add into adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc mov lea add xor daa (bad) or imul outsb nop push inc movsb inc out sbb sti into fistpll fdivrl mov popf add aas mov neg sbb scas jbe sahf adc adc das xchg jge sbb add mov (bad) lret mov and or lahf push add fcmovne (bad) pusha inc scas inc lds push (bad) je mov mov rcll mov mov fist js ret sub sbb dec fsubrl jecxz inc sbb xchg js push jbe test inc add (bad) jae insb jne jbe mov aad les or xorb mov mov sbb stc negb push pop add xchg lods (bad) or mov pusha fimul xchg (bad) jecxz fwait (bad) push sti xor add pop mov adc call xor sub add rdtsc insb ljmp sar inc xchg ret sbb stc add jle repnz mov add or mov xlat sbb shrb or cmp xor cmc xor dec imul mov xorb mov push mov dec jb xchg sub mov cmp sbb je xorl xor xchg lcall add cltd leave stos (bad) jb mov cmc cs pop pop and ss ss adc pop pop sbb jle (bad) nop mov out push ret sbb ror arpl (bad) je js movb jnp inc jmp pop cmc and cmc cli loop or test add jle mov inc xchg cmp dec and adc jmp arpl mov push or push jne dec icebp mov outsl pop sbbb (bad) sbb sub mov lcall add je xor or movsl hlt sbb add push je cmp mov (bad) pusha mov and xchg pop jl fxch xchg imul push out mov scas mov (bad) mov dec or es (bad) adc sbb mov pop je cmpsl mov or mov addr16 outsl dec jns and cli imul jbe add addl mov sbbb jle mov data16 (bad) push lret (bad) jbe stos xchg mov inc jp push mov mov lock jl js push jno pushf test jg xchg sbb inc adc mov jno push shlb je das fs pop mov daa lcall (bad) movsl out fidivl pop cmp subl mov jnp cmp inc popf cli mov dec inc dec xchg arpl xor in mov nopl imul outsb movsb adc (bad) in stc scas xor repnz call mov in xchg ljmp push pop mov clc in sub lahf or aam daa or stc into dec dec jae or mov push aas xor into (bad) cmp or in add xchg mov mov or cmpsl mov and and pop xchg pop inc rcll fdivs mov idivl mov pop xchg loope mov jle insb mov inc dec mov jmp lahf mov stc fnstsw mov add test (bad) shll lret pop decl (bad) jno fucomi das js dec mov mov rcrb inc roll stos sub push jmp lcall inc mov (bad) jp gs adc shr imul aam jbe xor lahf aas jmp scas xchg sahf xor cmc out pop ljmp push jb enter movsb sbb dec mov pop xchg dec jl sti gs jecxz adc nop cmp ds lea and lock sbb mov add popa xor xchg xchg mov pushw ds xor dec les je iret ljmp and sarl adc dec add call scas xlat into or out xchg mov xor je xchg sub cmp add jo jmp cwtl scas imul mov and and faddp popf enter lcall add mov retw ds xchg incb mov call mov je sti add stos adc dec shrb je jne jecxz ljmp mov sub mov ljmp bnd fsubrs addr16 push sub inc mov movsl jb adc xchg push push out push fs stos pop jns pop push loope cmpsl lret or fdivs mov fcomip cmp dec pop dec cmp inc push push outsb shll and test mov (bad) xchg xorl sub aad sahf lock lret sti ret mov pop in test repnz popf push fcomip pop cmp lock andl lods adc adc pop icebp cmc inc shrl lret and xchg mov push ljmp jno jne fild bound scas mov mov (bad) pop out and push ds addr16 sbb subl mov into insb pop loope adc sahf xchg dec mov outsb push aad push inc sti addr16 icebp jp inc xchg jbe in mov out in pusha or adc xlat (bad) lock xchg clc stos xchg inc ds push mov xchg sub lea xor scas imull lret data16 jg cld sub add push adc mov mov lods pop cltd sahf jge sahf adc lea adc and sub mov orl das and push ret ja stos cmp stos and jb inc movsb jle hlt pop mull lods or subl adc push add xchg dec test push aam imul scas xor test lods fnstsw addr16 mov scas xchg dec cmpsb xlat movsb xor xor inc cmp or aas mov dec mov sysexit push call pop jmp xor jbe or hlt push neg outsb jns je fxtract mov popa popa mov ljmp and xchg bound pop sub call (bad) pop mov psrad pop push pop jo scas push scas das call repz dec ljmp push xor insl roll fcmovnb xchg das nop popa add lea fcoms fistl mov lahf lret mov and jg mov imul das mov pushf lret scas jbe pop daa lahf fs inc jl fisttpll add jne loope pop loop xor cmp je,pn lds daa incb (bad) sbb pop fwait push clc (bad) xor cld lds in sbb jle push arpl mov dec test push imul sub inc and pop mov add test adc add mov sbb mov dec in mov xchg xchg adc jo pop or faddp inc mov jmp mov data16 inc jle sbb nop xchg pop adc sub inc dec orl sub push pop (bad) loope jae (bad) pop ss cwtl push imul mov xor addr16 sub les push mov pop pop mov lds into inc stos inc insb repz insl pop push sbb not cmp sub cmp into fsubrl movsl xor sub pop insl pop je jle std xor je cltd pop mov ss pmaddwd loope (bad) lahf shlb adc mov jb sbb pop mov daa addl je,pt dec inc dec aas lcall dec jne sarb mov pop pop frstor fwait std jbe sahf and mov std pop dec out imul jle fnstsw lret add imul sar daa mov push push rcrb dec adc blsfill push jne xchg cwtl jo stos test bound fbld in lret lods (bad) mov in xor xor and mov jo test or fwait lods aad lahf mov mov xchg pop or dec (bad) jecxz addr16 inc add xchg xchg add int scas mov mov xchg lcall cld adc sbb pop lcall and loopne fisttpl ds icebp lahf dec gs cmpsb push fild or push mov sub jbe test xor pop add clc aad push jno push (bad) (bad) jle (bad) mov mov stos loop rcll scas mov xor cmc mov aaa cld imul push or rcrb and (bad) (bad) lret mov adc mov mov jbe stos (bad) lret lret call (bad) imul jle mov into lods xchg lods (bad) jmp sbb fiaddl cmc sbb dec push add pusha push das loop popa push aas popf mov or pusha outsb (bad) push adc aaa inc mov aam add jl aas cmp sbb adc push ljmp xchg out test les mov scas jl jno mov xchg (bad) jns jecxz jne sar pop dec inc popl stc iret xor jmp pop lods repz push aaa (bad) mov mov add add lods lcall dec mov jecxz cmc xchg mov rcll dec adc in enter aam cmc xchg enter mov cmp leave jns xchg sub ret xchg pop push mov adc test nop stos std (bad) cli dec xchg das scas push cltd adc adc into data16 sbb data16 scas mov and cmp or mov mov push fmuls pusha adc adc rcrb pop inc lds inc inc xor jbe shrb (bad) mov xor cmp and int3 or test popa lret and pushl out int scas (bad) clc movsb xor dec in sub movsb int lock mov dec pusha scas aad pop lods (bad) insl das ret and scas cmp and sbb or aam push or cmp and xlat pop sbb js movsb popa xchg mov int jecxz xchg pusha lahf ja lock into and addl xchg and fild in jl pop sbb (bad) mov outsl sub pusha out outsl ficom mov push pop aaa xor cs ss in ja jne aam aam sbb std scas dec adc bound mov insb mov stos ja cmpsb nop mov aad xor push orl push push cltd mov sbb mov test dec mov sbb das mov mov adc or jg fwait or dec into fsubrl pop cmp outsl std dec add add dec push dec and lret pop mov lahf xchg das cmp add pop push push mov fmul jmp sbb mov int pop cmp pop js push sub jnp int3 inc ss insb cld mov sbb mov mov mov int push lods pop es push repz jg je test fiadd ss pop fdivrs sbb jl fisttpl fimull (bad) fcomi xchg jge jle cmpsb std rorl lods stos sbb mov mov arpl iret insb (bad) sti xchg aaa test (bad) mov mov jnp out ss dec xchg ja andb mov mov jo xchg mov pushf xor jns jb es jae rcll rcll arpl insl test out and insl adc dec loopne (bad) out dec pop mov push mov add rclb xor and mov dec push dec xor in scas adc push push xchg xchg in jl (bad) xchg es mov inc push cwtl jmp sbb xor and ja stc stc popa or xchg test mov bound sub sbb mov out inc mov xchg out jmp mov add xchg lret call mov pop or sub pop imul shl push mov sub mov lahf jnp push aas jmp int3 jl aas insl icebp imul mov pop jg add ja je in mov dec bound xor xchg imul xor (bad) (bad) fstl out imul push pop js clc into rolb lcall dec aas jno fsubrp cmp or divl dec (bad) clc mov xchg data16 push and (bad) xlat or push inc and roll mov xchg in jb inc jle test push inc inc lds inc mov mov jp aas addb adc ss xchg fbld cmp pop es fs push pusha in pop adc push out jbe (bad) xchg xchg xor ds pusha xchg in test adc xor insb and lret and insl jmp (bad) sti mov daa test cmpsl jp push xchg mov push dec mov leave pop repnz lret xor repz insl (bad) push loop es (bad) sub pushf scas inc jae adc dec push arpl cmpsl clc sub in push xor cmpsl inc mov movsl sub in shlb pop xchg mov mov jge lods icebp cld pop popf mov xchg mov int loopne scas jo inc dec xlat cmp mov pop jg jne xchg adc cmp sbb (bad) mov jb arpl lcall shl jnp lret push out test jne push cli dec sub in xor insl das and dec aad (bad) push mov sbb mov insb push pop cli hlt pop dec pop xchg scas dec xor (bad) add inc mov add xor mov lret mov bound out insb pop push je mov loop inc jne pop jl mov push and xchg int scas repz out nop shll add fldcw ror aam sub inc stos sub mov ss addr16 sbb loop cli lcall sub or push pop add int in cmp je outsl in jmp sbb sub jl out mov jle (bad) pop push loop push add kmovd add out inc dec stc ret xor jl daa jecxz dec dec pop call xor and les test stos pop fidivrl xchg loopne aad in add mov sbb xor cli jle cld mov inc add add into (bad) ja cmp mov iret sahf cmp mov iret sahf cmp clc pop mov jmp imul add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int3 adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb add lock (bad) in je sahf fucompp out outsb dec dec xor mov je je aaa addr16 xor jle jge out xor add and lock (bad) gs mov jbe push in iret sub pushf ds rclb adc mov dec (bad) and pop sbb dec jl imul xchg jmp inc test xchg dec fsubrp loopne add aaa cmp xor jbe push ficom sti sub lcall leave inc jne dec sarb push mov in cmpsb lea push mov scas fild mov inc outsb and pop inc imul pop lods imul lods out test test sbb xchg mov add cmpsl add or imul jecxz xchg dec ficom sar in inc and loopne movsl pop aad je or sub pop pop xchg xchg fs sti xor jp (bad) mov push into pop sbb push push adc test push mov ja pop leave fdivrs inc movsl stos and sbb mov repz mov addr16 ja decb js sub mov lcall stos mov dec test push add negl pop jg jmp sbb xchg divb add pop jge pop neg xchg lock jnp loope fidiv sbb out xchg adc shrb mov (bad) fwait mov jl aaa out xchg or push loop ds sbb mov shll and call pop pop xor insb int3 sbb push insl rcr mov minps mov mov mov inc lcall ret repz addr16 mov das test inc cld sub pop pop subb xchg pushf pop dec pop sbb push xchg and sub and imul mov fisttpll sbb mov and test cltd xor jg cmc rclb (bad) lea es push es stc sti cmc into iret scas stc jns or rsm mov push pop fstl add in mov ret (bad) rcll loopne jo pop mov jle mov jae out inc cs pop fnstcw pop mov pop jbe xchg mov dec adc pop in push cmpsl jge cs (bad) sahf xchg mov fsubs mov aaa fimul les pop dec data16 dec (bad) mov mov inc leave out cmp lcall std push adc (bad) ror fwait add inc xchg insl push pop leave mov je mov es sub lcall mov dec or scas xchg adc cmp sub dec cltd or adc pop sub xchg mov xchg sub dec sbb aas lods or xor outsb jno incb mov fdivl xchg sarb sub (bad) mov inc sub sub popf xor call movb cs sbb fs insb js jle push aam daa loopne fildl mov cltd rcrb out or pop push addr16 loop nop lods or (bad) pusha push sub mov (bad) jns fidivr daa inc mov popf adc daa icebp aad jmp repz outsl fnstenv pop fidivr (bad) fistl jnp xchg push inc cmp jge out insb shl call and inc lock jnp mov adc push fs int xor add mov adc sarl xor int decl fcmovnu cmp push push cmpb adc mov and and adc jae cmp fcmovnbe fisubrl xchg cmpsb test jb pop pop stc mov in leave loope out loope popa out mov push pop jmp xchg (bad) and xor imul stc fdivrp stc mov rcll lret mov (bad) out out call cmp sbb add jbe fcomps xor fsubrl clc fwait xor andl mov inc aam mov pop inc lock push mov mov and jo dec les stos mov fndisi(8087 (bad) (bad) lret popl lea push sub insb repnz or dec mov imul es lds mov rolb insb push lock pop mov or pop mov sahf pop aas lret adc jg int out and ds arpl fcmovnb test dec ds scas (bad) add ret in jo cmp movb xor dec mov mov push pop lds out aam jnp inc push xlat sub jns or lock push std mov pop in mov xor mov je insl sub outsb es rep lahf sbb pop jno bound pop and mov mov into jbe call aas daa mov insl call daa adc cs push jle in xchg add stos pop xchg push add out test xor xchg xchg fwait std ffreep fldcw mov dec jmp or sbb sub jmp test pop loop add jle sub sbb push mov add sbb rorl mov push jmp ds push jecxz aaa fistpll pushl insl (bad) push movsl mov adc fldl or dec imul and jge add jns or shlb mov pop stos aaa mov lea dec sub out daa test or dec popa aaa orl add loop dec xchg jle adc push sbb push ds sbb cmpsb push js clc fwait mov movsl push insl nop aad xchg cltd repz mov stos inc sahf jg push mov xlat mov aam dec sahf push outsb cmpsb mov xor sbb cwtl into cmp test lock add or mov fcoml add dec insb incb cmp fcom inc jno insb mov imul rorl and cmp andl mov jl xor and sti out adc adc or push adc push imul loopne sbb xchg fucomip push sbb outsb in sarl movsl add lds sti push adc sub rcr movsb scas adc mov xor sub xchg xchg pop inc fistl pop sahf cmp pop mov mov aad cs mov insb fidiv mov push popa jae sbb fbstp sub shrb int fisubr mov test imul in dec mov cmp inc push testl mov ret jle push rcr add cmp repz push mov jb fs mov push call push daa jns test jecxz sub sbb mov into and xor cmp decb sub add aad push pop mov pop je jo and pop xchg inc cmp and sub fndisi(8087 pop push decb out ja les fsub (bad) rorb dec repnz call lock fdiv and ljmp push (bad) sbb fsubs sub lea inc pop (bad) cmp push out sub (bad) xchg xchg aam mov xchg ja cli ret in add inc add sbb jbe or cwtl cmpl jle imul push cwtl (bad) (bad) stos popf mov push icebp adc insl xchg ljmp jae or mov stos ret imul add mov dec in jecxz test and divl push or stos and (bad) hlt pop push push shrl inc jp inc into push adc jbe and (bad) mov push in sbb push sbb xlat (bad) cli and popf xor inc xlat and scas ret loop pop (bad) mov fsubrl push jae cmp stos ficoml cwtl pop lea test sahf push (bad) loope or sbb or ror negb andl test stc inc mov in mov pop popa js jl (bad) icebp stos jg inc cltd push add test or and sbb pop cs cli cmpsl xor push xor fs mov imul fnstcw cmp pop mov std mov (bad) flds mov fcompl lods push lds push add mov scas mov jo push outsl das ret imul das aas jg jmp out aad sar ret sahf inc cli pop in sub test push insl daa icebp test mov inc lret xchg mov jo jnp sbb loop orb js mov lods (bad) mov idivb add mov xor jge jmp aad push adc stos std (bad) hlt or xchg xor sub int3 or sti lea fadd loopne mov push outsl nop fistp int3 data16 add dec neg dec in pop ret pop leave jo icebp popa cmp rcrb (bad) icebp cmp fwait int3 popa popa dec mov mov dec inc add add (bad) call dec jle cmpsb or rcr inc and loope inc roll jns rorb imul inc and mov cmp out fidivrl inc mov mov xchg fs cmpl jg movsb adc addr16 cmp mov cmpsb movsl jmp xchg mov lods pop stos sbb dec sub pop xor cmp cwtl add cltd mov ss xlat pop mov push push mov sub push jmp and mov fist ficoml fdivr mov mov (bad) mov std js aad mov bound inc jge je sbb xchg xchg xchg push dec push or xchg cltd repnz fldt ret cmp mov add mov cmp out sbb xor jae jae add in insb dec outsl out inc push sbb stos rorb push (bad) dec cs xor pop repz dec (bad) lea mov push pop loopne mov (bad) xor inc mov insb xor pop push ljmp pop push mov mov mov je jb ss xor cmp (bad) mov xor mov cmp fisttpll sub popa fildl les mov leave add push mov sub xchg in pop sbb stos loopne lods or jmp dec and push stos mov push (bad) out out mov ret cmc pop cld inc rcrb ja fidivl scas jge sub lods icebp shlb dec je lock (bad) dec sub xchg in dec cli pop push stos cltd loopne dec enter mov aas push add xor xchg adcb dec fcompl and xchg test aam ja inc dec xchg test sti lods int aas shrb test inc imul das pop addb jae imul or pop or add fidivrl pushf sbb mov or push xlat mov lcall push test lcall (bad) icebp xchg xchg icebp sahf xor push aas push xor (bad) xchg xor xchg xchg cmp jmp adc jnp leave fsubp in cmpsl jo cmp shl es or mov in mov adc jmp in lea cwtl jns addl in pop mov or cmpsb mov mov lret (bad) push test or mov test test mov sub push test movsl jae test push inc inc test add notb sub xor mov dec jp test or add ss (bad) xor dec sbb or int xor pop mov aas adc enter push mov sarl pop sahf cmp mov cmpsl imul lock stc or xchg icebp daa (bad) cwtl stc jmp cmp push push insb repnz (bad) xor pusha jle sub mov push pop mov pop sbb cmp les iret push pop pop notb jb ss pop movsb jl or test ret dec test mov into xchg das (bad) cs addr16 xchg ljmp xlat push add lods jae addl mov jae cmpsl mov repz jns call xor add xchg int (bad) lret call mov daa push lds mov mov dec pop xchg cmp repz inc lock xor push pop pop out (bad) loope dec ret movsb jno pop addr16 fnstenv in bound pop sbb les mov rcrl dec or push fmul int3 fisubl inc fcmovb outsl call mov cmp jp pusha addr16 sbb push jle xor sub adc xchg dec jge ljmp push cs cmp dec sub fildl xchg (bad) sbb rol xor mov adc push and lods or (bad) mov outsb add aas insb iret data16 aas (bad) mov mov scas shrl add adc test push mov icebp int3 xchg sbb push addr16 ret (bad) mov sbb lahf pop jl inc icebp sbb loop aam sub jo mov in dec mov mov dec pop aas pop xchg inc jb cwtl popf push jmp cmpl cmpsl test xor test push lds pusha dec mov jne jnp movsb add jnp addr16 mov (bad) dec mov add imul bound pop sbb pop and inc insb mov popa inc push int xchg and cmp rep imul cmp jmp ret xor sub into push lret xor push push movsb and ret and aam lret (bad) rcrl or sub lods push sbb xchg or adc dec mov sub pop ja jecxz push mov adc insb pushf sbb fildl adc mov jg xchg sbb mov push popa rcr rcll add jecxz int3 push pop jg mov dec cmp inc lahf cmpsl loope mov mov cmp sarb inc test xchg sbb dec js add insb or (bad) outsb cs fidivl das mov lret and lock mov or jmp push push imul fcomip inc outsb xadd xchg jno xchg jecxz mov and and lcall mov inc xchg xor fildl inc (bad) hlt ret ja mov inc std cs mov out cmp pop adc lods cmp push cmp pop cld pop or jnp in fnstenv jnp in fnstenv sti incl add pop add out add adc add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb rolb jae arpl cmpsb fabs je (bad) mov jmp dec out jmp out scas div mov mov add cmp cld scas scas dec pop insl dec daa aas ret mov (bad) xor sub fbld xchg into (bad) push mov or aaa orb testb jbe xor cmc out out scas sti jl lret ret (bad) iret xchg and jne cs inc sbb aaa pop nop xchg out mov das jbe or leave sub adc (bad) cmp jle arpl sub das jmp jne sbb push scas rcll mov sarb iret dec fidivr jb int3 xchg enter sbb mov mov out cmp sub add pusha (bad) mov gs and mov sbb inc ds lods or xchg jmp (bad) out xchg cld xor sub scas pushf aas mov xor fwait inc cli lret sbb nop jb mov add jecxz cmp addr16 cmpsb cmp shr dec xchg pop mov dec xchg enter inc sbb cli fistpl mov pushl jns sub xchg daa cld and sbb cmp test mov out rclb dec (bad) push inc outsl popf mov movsb stos adc popa mov or jno imul cmc dec inc xchg lds fwait add dec in mov fistp jb popf jne cmp sub jmp xor jge mov jecxz push fnsave mov shll xchg js lds dec pusha and sar leave adc cmc fild in jno xor call cmp ja cli pusha (bad) loope sbb xchg cmp adc movb jae popa cmp push cld je int push mov aad jb aas in jl jnp loopne pusha inc test sbbb mov mov adc aad add sti popa repz mov aam xchg jge push dec xchg or push push push in mov aaa mov xor test aam andl fstps push call (bad) or imul pop sti jnp cmp in fldenv out loop in xchg xchg das adc pop xchg dec pop into mov clc rcrl iret xchg orl mov dec dec lods push jge imul clc or jbe mov loopne pushl sbb sub in sub add adc mov data16 jge mov aaa idiv jmp push sub mov aam inc add mov popf jl jg xor loop inc inc mov lret loope pop mov fs test aad in push in gs pusha lds cmc cwtl push push fisubr leave mov es adc add leave push dec out jno xor jge pop sahf in imul rcrl pop leave loop jno aaa daa fmull sbb xor enter sahf lahf bound push lds inc je push je ja lds ret inc (bad) lret cmp add fcomps jecxz lea or or das addl or (bad) std test mov and ljmp xor inc jecxz decl mov xlat repnz xchg inc sbb sub cltd adc jnp push jg ljmp (bad) int3 das clc xchg scas (bad) mov dec or push out mov jmp stc push or popa popf xchg fidivr lods push movsl push (bad) mov mov outsl jl push pop test mov call mov push iret shlb and ss loope popf mov aad sub sbb clc add and xchg in pop xchg inc pop imul gs or ljmp xchg jnp add lods rcrl lods loop cli or dec xchg xor in in jo pop cmp jne (bad) jnp stos pop pop cmp insl call push lahf and jno inc (bad) cmp and sub pop int sub pop in xchg ret outsl leave push mov jle loope lret cli cmc and aad xlat mov and ja gs mov scas adc xchg dec in ss inc fcmovb (bad) je mov lods repnz (bad) (bad) xor jp outsl xor dec loope and pmulhw jmp adc arpl xorb int push arpl ja mov das xchg cwtl mov flds in scas inc clc jns mov push inc xchg lahf aas lea js,pn cs xchg pop add cs dec out mov and or ja pop int icebp in rol scas arpl or pop rcl popf sub inc mov mov arpl cmp jns sbb adc je iret mov movsb pop aas push cmc mov ror jecxz fs and add cmpsb sbb out mov out mov fwait mov repz shrl pushf mov leave adc sbb (bad) cmp (bad) ss dec mov inc push xchg xchg ret sarl je mov leave faddp dec pop iret fwait mov nop pop cmp jnp sbb xor orl mov sbbb fcoms mov push scas iret fcmovb jl push dec and sub jae in inc pop in or add rcrb sbb mov icebp sbb mov pop sti jo jno mov add dec adc iret add mov gs mov pusha test or repnz mov jb push push add pop and lock push movsl cli xor bound loopne imull push cmc (bad) xor pop clc push or test jp xchg repnz inc add jp into mov in pop cmp mov xchg (bad) cmp aad mov sub mov inc dec add sarl pop jne mov cmp ja cmp push negl dec and ja (bad) push inc mov push xor ljmp jae adc jne xchg add std pop jg dec lret pop xor ljmp scas push jb inc loop jnp fwait test xor push out mov and mov roll loop (bad) adc int3 rorl addr16 add mov (bad) gs jge roll out (bad) call (bad) fldt jne into int3 call cmp cmp jg and sarb fcompl pop jle popa and dec or or (bad) loopne (bad) xor jno jp mov iret aad fimul cmpsb lea (bad) adc xchg mov cmp inc sbb xchg push jecxz stos jp mov push mov jmp push inc sbbb flds cmpsb push outsb (bad) aaa and pop sub fs ja mov pop iret aaa mov lods mov or sti adc sbb push icebp cmc pop xchg push repnz sbb lahf stos in inc (bad) mov mov sbb inc and mov lods or mov movsb push cmp sti int and add (bad) dec inc jmp jle into xor push jnp mov shl ficomp push popa aaa add pusha add stc dec aam mov aas mov (bad) or int mov pop mov sub dec jmp int mov call cmp sub push push enter dec bound lcall xchg push dec sub into (bad) aad into xor push imul pop xchg sbb push adc xchg cmp stos inc inc push loope or xor (bad) mov bnd hlt xchg lahf adc cld inc cli jo xor cmpsl sub xchg xchg movsb lcall adc rcrl mov hlt fcmovbe and out xchg sub mov mov xchg add (bad) sbb loope adc (bad) push mov enter mov sbb mov mov hlt push lcall sbb fisubr cvtps2pd or mov xor and cmp jmp push sbb xchg fnstsw test and or jge lods pop sahf jo cltd push je fdivl sarl arpl pop fildll xlat sahf insl add cwtl xchg cmp stos mov and scas jmp push in into test xchg loop imul push push test fs dec fld sub adc push daa shll cmp (bad) in iret movsb cmp inc inc ficomp cmp dec ljmp jns cmp ja test push fs xchg fs pop ret pop rorl (bad) jp into adc mov mov fwait (bad) ja sub add fildl popa push aas lods mov dec lods lahf pop mov cmp mov fs pop push pop pop sbb push cmpsb push loopne push push call sub push dec mov fucomip inc and stos shll dec inc daa subl adc adc addr16 mov xchg call pop aam dec aam and or pop lds sbb or and (bad) aam push nop aam lods aaa ds sub test jae mov popa mov mov dec mov inc pop or mov les mov lock shrb xchg cmpl test jl pop fdivr (bad) test mov jl fwait inc adc addr16 or xor in clc dec jp subb aas sahf aam sub and inc (bad) mov inc js mov inc sahf lahf adc inc add out fdivr jb inc inc out test mov cmp sub lcall dec sub sbb sbb (bad) in gs lock fdivl xchg ret lahf call (bad) cmpb add pop cs fpatan lods lcall mov xchg aaa jae imul lcall push ljmp lret sbb jl xchg fstpl mov mov push push test dec ficompl add lret dec add shll ficom cmp sbb leave cli clc jp mov loopne jecxz,pt daa jg sub es adc jp mov pop or xor mov into lea mov scas aas sbb cmp stos mov cmp mov data16 je mov ja pusha inc xchg cltd push adc lahf lods pop loope or ljmp cmp mov daa not lret mov xchg (bad) lods sbb add sar enter jo or push mov push loopne lcall jmp outsl daa and inc aas cltd dec shr jecxz fwait int jns and xchg int pop mov xchg dec mov jp jb jge int xchg and in lea cmpl sbb fwait dec mov cld dec out sbb pop mov pushf out loop pop jae xchg lret xor mov push int3 add repz pushf push push negb ds mov (bad) cld jo xchg ret mov sub loopne (bad) jbe mov fstpt xor je in or dec ja cmp test popa imul and aad cmpsb sbb adc or arpl popa dec inc jg dec mov (bad) mulb push mov push dec and jno jae pop repz push and push pushf loope xor hlt dec popf push shll subb mov popa (bad) push lods hlt mov iret cwtl test inc dec repnz xchg xor insb test movsl cmpsl loope sub mov mov repnz loop test popf ljmp (bad) out faddl inc sbb xor jmp mov and hlt aaa xchg loopne push fcompl xchg jns fstpl cmp (bad) mov cwtl loop leave mov mov rol pop cmp negl rol cmpsb pop sahf or movsl xchg iret xchg test lcall xchg loop inc nop testl mov hlt xchg fs xor and addr16 mov sahf xchg lret dec mov cmpl or out pushf mov push push sub shl or aam xchg das xchg out dec lahf push sbb mov mov xor jg std (bad) mov mov xor lea cltd mov mov ret (bad) movl add mov sub mov mov aad sbb call lea or jge sbb popf test sub clc aam jb repnz pop xor movsl dec cmp aam dec rcl arpl cmp xor cmpsl outsl movsl repz leave mov movsl and repz mov dec add ficomp adc jne je,pn jp call adc sbb loope push stos stos out sbb pop pop (bad) testb xchg int jg mov cmp lret (bad) icebp dec add (bad) int3 gs adc pop cmpsl loopne mov sbb and mov out (bad) ficompl popa or outsb sub sti xchg push stc sbb test test add loopne push inc sbb inc pop push popf jmp into and mov sub sahf repz mov push pop movsb jle lahf dec movsl cmp popf lods inc jb lret push cmp fs (bad) jl mov inc jl daa dec adc or out mov mov cmp inc in lret call mov pusha mov test adc xchg test sbb fs cwtl shlb pop (bad) shlb out (bad) enter sub xlat push out data16 cmpsl ret das arpl std dec xchg insl mov mov cwtl dec ljmp out pushf xchg mov jae aas adc test sub adc mov and xor mov enter scas (bad) xchg fucom xchg push add mov es mov nop inc arpl (bad) xchg mov jecxz imul inc mov xchg repz loopne inc (bad) leave outsb adc push xorl lds xchg mov movsl jecxz fisttpll and rcl ret cmp test mov pslld outsl das movsb jmp repz shlb jnp,pn das out push mov push lret orl shrb xchg add jo lahf gs ja idiv cmpsb iret aas aas scas sbb jno mov and cmp sub jnp jmp (bad) fildll mov and jnp sub adc mov and (bad) (bad) cwtl inc nop xor sbb jns test inc arpl xor int in pop lret jl inc inc into sbb sbb fist cli push (bad) loopne fs pusha fs mov bnd hlt ljmp jp ljmp jp ljmp mov sub fiadd add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int3 adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push and jecxz icebp sarl fwait sarl outsb (bad) aam sbb je (bad) je xchg rcrl cmp cmp jae mov (bad) xlat out js js add mov or push into fistpl xchg inc fmull mov fwait movsb push pop into and sbb dec fsubrp lds sbb test addr16 cld mov ret test cmpsl pop cmpsb aad aas adc roll roll and fbstp enter pop test xor insb mov or pusha lea fucom ret push js js ficom insl ds sub std pop popf push js xlat fsubrl push (bad) out jae adc push insb sub xchg lods adc xchg jns out xlat (bad) jmp push sahf or xor stos jnp or add aad cmp addr16 or and cmovae adcl sub pop pop lods adc xor add add test data16 push add pop jne stc or fnstsw jo (bad) cmc cs mov xor mov mov call (bad) adc push popf pop cmp lods mov cmpsb and push dec cmpsl xor (bad) xor out movsb es push pop jne jp mov inc xor inc add addb push mov popa cwtl sahf push nop nop dec js in adc xchg (bad) iret sub ja mov push jmp ljmp in lods adc mov xlat (bad) or repz lods je add imul xor inc stos push push inc sahf inc pop jecxz push fstpt sarl push out pop mov push mov lea dec jae jg stos adc cmp repnz orl and inc dec push test dec jne sahf popa dec rorl imul pop inc sbb popf insb lret push notl in insl push push loopne jecxz insl out (bad) cmp jl pop mov and or mov lea xor mov mov xor jge xchg jg mov push div push xor mov add rcrl xchg dec (bad) gs push jp cmp or jp push mov cmc das insb dec lods data16 std mov js movsb out adc mov ficompl into push iret adc dec ret sahf push into push sbb sbb cld repz jno sbb pushf or or inc dec dec rclb push jns pop jmp pop ss fstl push xor inc mov jns xchg mov xlat pop mov pop scas adc cld push adc test dec mov repnz mov lock jns pop push mov jb and push pop popf mov (bad) mov xor enter aad xor push push jecxz add insl dec cltd adc mov sub lds cmp push fsts andl fidiv sub push enter pop sahf xor inc out data16 push adc pop adc mov mov inc dec dec iret push and lahf loope cmp xchg mov leave imull fwait leave or lds add dec je cmp adc cs std inc jmp xchg xchg pop mov cmpl daa popf out or xchg mov shlb movsb push cmpl pop jnp movsl mov and cld icebp add icebp or cli dec add and cwtl or jne cmp outsl cli dec jp jmp in jge out jmp dec xchg jae sub std movsb mov aas (bad) out sarl fistp sbb out mov cmc cmp jne das testl xor pushl ss cmp sub adc pop mov (bad) loope (bad) jno xchg dec xchg xchg mov ds loopne test cmp mov sti adc lret (bad) repnz shrl or inc or (bad) lahf pop lcall xchg arpl sbb icebp (bad) fistpl push dec mov fistpll inc adc pop sbb inc pop movsb mov lret fldl cs push add mov mov enter jns ja loope outsl xchg fildll push inc insl mov xchg dec mov stc or ret int3 cwtl pop test mov mov mov movsl ds (bad) notb jb cld (bad) xor mov mov lds mov mov cltd mov mov xchg in inc enter lret mov jp int3 jl aaa xor pusha cmp (bad) dec idivl adc int3 cmp repnz in fmuls std ret mov cli pusha sub movsl mov pop (bad) dec mov push scas rcr and or push add and fcmovnu push test pop and xchg (bad) xor aad add je mov insb pop dec xchg and xchg push stos nop push inc sbb out cld xor (bad) push decl loopne sbb xor or sub fcmovb sub inc lds enter push (bad) pop stos pop pop push (bad) mov insb loop (bad) clc cmp cli push xchg test rcrl jno es jae jl add pop (bad) adc es xchg mov daa and mov dec in push imul sub mov cmp aam xchg cld mov decl jmp loop xor fisttpl xchg lods and push jl in roll inc dec push jo pushl adc dec fistpll (bad) data16 jns mov rclb sbb (bad) call xor rorl imul add jae mov lret (bad) dec push lds inc mov pop es mov test jle xchg push and stos int3 jle mov lock hlt inc mov flds push or test (bad) out add mov outsl rclb and mov add das ja ja ljmp mov dec mov sbb cld sahf mov subb mov mov dec (bad) xlat dec je cmp mov frstor jge mov sbb cmpb mulb dec dec xchg iret xchg and rcl fcoms cmpsb popl imul fildl mov in test xor popa xor xchg aam push push lahf sbb push inc jmp dec add xchg pop xor repnz inc xchg bound loope and nop push pop and dec add icebp mov and divl adc cmp loope fwait (bad) fwait cwtl out push stos mov adc lock pop lcall xchg pop sub nop out out scas add xchg push sahf in fs in xor ljmp repnz push push fsubrs cmp ret jg dec mov dec add add gs in loope gs inc and loopne inc (bad) sub subb arpl in sbb mov (bad) popa mov add data16 jno int out pop (bad) das adc push adc and xor pop sbb xchg or (bad) out cmp fs fwait mov sbb xchg gs outsb mov mov imul mov vmovups (bad) jo push fucomp push cmpsb jbe imul jg mov jl mov ljmp xor (bad) jns pop stc dec pop or add fnsave test (bad) and jae les iret dec cmp mov movsl sarb (bad) dec daa inc sbb cmp xor enter cwtl lods mov xchg xor jmp pop mov inc mov (bad) sarb std loopne xor inc xor cmpsl cld and mov dec mov push cmp sbb jae ret addr16 mov mov out lret push out sub push xor jge popa jb inc int3 mov arpl and jns (bad) fidivl je (bad) cmpsl inc loopne mov test ret and shlb push cli xorl (bad) icebp jnp popf jmp push inc cmc fistp pop cli xor mov out movsb pop jp inc enter fisttp xchg loope roll fnstcw ret mov fildll and jne in out xor mov div xchg sub xchg lods pop pop fidivrl sbb fistpl xchg mov lods in int (bad) insb mov ret bnd mov outsl je fidivl ds or mov mov negl clc iret and in push xor pop adc xor stc mov adc xchg push push pop shl imul xchg sbb sbb mov xor fcoml int push mov mov ss ret dec adc jle pushf nop insb xchg mov mov xchg addr16 movsl cmc sbb or daa push pusha imul push push inc and inc sub push cmp (bad) ja or pop shrl cmp pop dec dec mov popf (bad) rol inc ja and mov shll inc or xchg in sub loop jb adc inc jecxz outsl inc das mov cld push and inc inc add and jl xor xchg and mov aas fwait jl imulb xor adc dec dec mov xor repnz loop lcall push popa xlat cld pop cmp fidiv rolb cmp lahf xchg in inc insb fwait movsb cmp std sbb adc cmc sbb sbb dec mov mov jbe sub sbb ret lret jnp std mov int3 cmc gs pop out inc push fisttp dec das push xacquire add clc out adc mov cld push push xor mov into fldenv cmpb push jg fsubs pusha pop (bad) popf jmp xchg les out jp push je icebp xchg scas xchg incb inc mov mov pop ss sub shr sub jge ljmp cmp rcll mov adc cmpsl imul les mov ret addr16 mov mov (bad) repz cmp je fs aam enter xor lret leave push mov insb mov xlat inc in (bad) xor jnp mov insb jo inc je test lock add mov aas (bad) imul dec jne xor jns jle jne pop repnz push cmc int3 jne add mov and ss xchg xchg stos leave jg enter dec ret ficompl and sahf data16 enter cmpsl stos repnz mov jnp ret xor repz mov in dec shrb dec sbb dec test ljmp pusha (bad) stos test lahf aad mov ds cmp push cmpsb fild inc lds sub leave ljmp mov aad mov push popa ljmp mov and cmp neg sbb inc push push push dec cmpsl lret pusha inc cmp adc cmp push or inc and mov in xor push push xchg fisttp in and xor xor aas rcll inc cwtl pop mov sub and xor sbb mov push out push jge cwtl in cmp adc loopne xchg fdivr lahf mov dec or or adcl mov mov jb pop rcrl mov (bad) pop fdivl sahf insb mov insb inc or ja in outsl adc arpl rcr loope aaa clc fs icebp xlat insl cltd cwtl arpl dec push or or xchg pop push push je int3 enter outsl sub in out shll addr16 push xchg cmp loopne (bad) pop sub xchg fdivr push fldl bound mov jb adc ror fnsave loop aaa in imul cwtl andb fnstenv jb fcompl movsl dec jbe push je and rol xchg pop adc pusha leave (bad) jb add std mov jp sbb pop dec mov je dec pop jle leave cmc jle out loopne out cld movsb (bad) push aad cmc cmp lret inc or mov or stc add rclb je pop (bad) add not mov mov add jbe rcrb pop pushf inc mov inc cltd adc mov (bad) (bad) enter insl fdivl movsb jno jns pop add fcompl jg subl xor (bad) sarb (bad) (bad) fndisi(8087 dec (bad) das lds std rcrl mov (bad) cwtl (bad) sbb mov iret movsl aad ret push (bad) sub mov std jecxz lods out arpl dec mov mov pop dec dec xor pop out popa icebp push insl pushf jp cmpsb jp and cli fsubl (bad) push push adc and jl jecxz arpl push sbb or pop daa mov stos sbb pop fidivl enter (bad) or xchg call mov fisttpl inc lcall std pusha in outsl push adcl test es and pop cli cmp lods cmp mov and ljmp loopne mov imul xchg outsb sbbb mov sub arpl (bad) out mov in ficompl ss push xchg sub push and out sub (bad) mov sahf sub stos dec inc leave mov and sub cmp xorb push mov jno or out idivb push int jg add mov pop cwtl push push adc dec jmp into add jge push jns sub sbb mov adc fcompl mov pop inc and cmpsb push mov movl pushf inc ror and cmp out pop inc cmp inc push add mov pop call sti lods xchg jmp lods (bad) divl popa cmp or jo aad push js insl ja sub add shr mov and shlb cltd (bad) push pusha cmp sub dec adc sbb cli lock xchg xchg xchg cmc mov (bad) mov (bad) into idiv cmp sub xlat pop movsl popf cmpsl pop inc and lock shr push (bad) je xor xor mov inc ljmp inc xchg lods lods xor popa xor lret mov movsb in push andl lcall adc mov jle add sub out xchg rcrb hlt xor (bad) (bad) outsb aad mov cli aas pop sbb adc or rclb mov xchg or push jp rolb cmp inc repz mov xchg daa dec sahf cmp repnz xchg daa dec sahf cmp repnz xchg lcall push push mull add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int3 adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb add lock aaa dec ja adc cwtl sahf fwait sahf mov es adc jae fwait pushf mov sbb test int3 sti mov xbegin cmp cmp inc push sub mov xor jns das inc fisttp mov cltd outsl and fistp fstps movsb add inc sub and pop xor mov xchg xchg mov js mov mov shrl int3 cmp sub shr bound (bad) movsb xor sub mov fs dec dec (bad) mov in test jmp pop std movsl sti mov arpl mov cltd jge push dec push rclb cmp xchg lods xor mov aaa dec lock xor mov in loopne (bad) lock fnop adcl bound imul lret mov test mov ret add jbe jl inc cs mov (bad) mov dec out inc aam mov fsub (bad) mov aad cmpsl mov inc mov in xchg popf pop xor arpl js ljmp fsubp jmp add dec rclb lds sub sahf mov cmp or mov scas pop in jg (bad) repnz push jnp jae jmp add mov inc sub jno dec add and pop push mov jne xchg jmp arpl mov iret lods popf ficompl fild mov sub sbb dec and xchg dec push and out sub adc test adc in inc je (bad) cld rcrl icebp lods nop push fcmovnbe jno jmp push and cmpl xor cs (bad) popw and mov movsb pop fs scas or push imul jnp ljmp cmp sbb shll mov pop jb add mov push dec and xor mov adc or xchg mov fldl test mov cmp (bad) mov not mov add enter dec add sbb dec dec xor lret mov scas out jle hlt dec andl int3 jb cmpsl data16 xchg fcmovnu jns popa xchg push (bad) lret cmc add enter and fsubr outsb xor mov dec xchg xchg loopne pop adc pop out (bad) (bad) jne mov jo fsubs dec mov push incl jne daa jmp (bad) hlt imul xor aaa (bad) xor pop pop std aam or movsb push movsl add sub mov or mov push mov jecxz insl dec push (bad) seto lock outsb nop mov imul out lods mov xlat cltd mov popa outsl xor or mov es inc mov push pop lret pushf push outsb pop scas mov daa cmp test lcall mov pop pop push test orl leave inc xor lods jle lret scas mov dec cs mov imul pop popa adc outsl mov jns adc lea ja (bad) fcmove out mov pop jp add jmp mov loopne pusha imulb test sub out cmp loope data16 mov and jne lea bound outsb mov mov jmp push xchg es adc dec test fwait stos add or ja das pop sub data16 out mov stos add pusha push das jno add xor int or add loop neg int3 in es iret fwait in xor mov sarl cmc repz int mov xchg lea cmp or mov (bad) cmp dec push mov jp and cmp inc movsl jge (bad) add push adc lret pop subl jo inc push pop inc mov jne js add xchg jp imul xor push push ja sar pop mov (bad) in jl popf xchg aas into cli shll es fs es and ret xor ds push fcoms dec push push push and (bad) pop sahf lods jo out jb in push xchg lock dec mov arpl fild cmp into lods jae push inc jae lea psubusb adc imul push dec and shrl stos pop (bad) xchg cmp repz add push daa jle xchg mov test and ljmp xchg mov mov (bad) rorl inc pushf pop sbb lret out sub movsl movsb push inc mov je xor cmp xchg xor jge add sahf lods jno scas inc pop mov mov lcall stc mov push js rorl cmp addr16 mov les test and add addr16 arpl cmp xor mov add test adc mov push repnz jp fisttpll in cs or add mov loope sbb mov imul mov mov cmp push pop xchg daa mov pop mov mov adc mov jg jl subb jnp sar xor xlat pop mov lods add lret dec popf mov dec pop sub pop xlat scas pushf popa inc daa in fs incl das jg jp adc fs fadds dec push mov adc dec pushf xchg psubd divl aam bound movl and push inc ds push adc xchg add rcll fnstcw push fild ret xlat mov out pop jle icebp mov cmpsb xor mov pusha mov mov popf mov xchg sahf call (bad) pusha cmc mov sbb jmp imul xchg dec jle aad jge int jo daa not (bad) mov or mov movsl ficompl dec xor and pushf shrb cmp fistp inc sahf jmp sub mov (bad) adc sti lds (bad) cli xorl les inc sbb ss xor push in push push mov pusha outsl sbb and (bad) or adc add cmpsb push dec mov push pop das mov sbb out cli test push (bad) cmp mov mov ficoml (bad) xchg push add outsb imul fwait or fnop mov ret rcr fistpl mov enter xchg dec xchg cwtl into mov mov push out sbb push cmp lret push negb sub mov fiadd enter xor xor push jmp call ret lea jbe mov mov aas test xor leave or loopne mov adc loopne rolb pop and mov int3 mov sahf (bad) mov je outsl push adc jbe int3 jbe or fwait and mov and es incb je loope adc jle stc andl mov dec shrl in lock mov (bad) jge adc fwait lods rorl scas adc mov cs test jg xor aas out dec inc and fs jb pop mov dec add mov jae insl push outsb dec stos fmuls js xor mov pop in inc cmpsl dec cli das xchg sub push cld mov inc cmpsb rolb bound lahf or mov roll lea jae push mov cli cmp dec sub sahf xor lods stos pop lock mov int3 jo stos sub out jnp bound push jecxz pop aaa loopne push or addr16 jl fwait xor cmpl pop sbb stos dec test mov das sub or cmpsb sub gs or pop fisttpl or leave lods xor sbb sti out mov or int jecxz imul push pusha jno hlt imul or mov fwait cmp xor xchg lods imulb cmp adc ljmp cmp jle xor adc sbb shr decb jae loopne gs or test (bad) call not sbb rcrb adc pop mov jb pop lock outsb shr xchg dec push pop push push arpl shrl mov pop push cmp xchg lea and jle push pop mov xchg jb into and push bound jne lret shrl mov into clc cmpsl add push sbb loop push xchg in or iret push jmp dec pop jns inc dec cltd movsl mov pinsrw ror fucomip xchg or xchg xchg push rcrl dec inc lcall clc cs fnstenv cmp in addl ficom push dec mov mov popa pop mov xor pop mov mov or inc js cmp sbb dec pop sbb call jge inc inc mov pop cmp movsb mov test insb add sub and xorb cvtps2pi inc xlat cmp add in or xchg cli fstl gs scas pop cmpsl xchg es enter sbb ret xchg lahf xchg or popf aaa xchg xchg out repnz out ljmp push arpl mov data16 int3 dec pop adc cmpsl aad mov adc (bad) xchg jno jecxz cmpsl jns adc jg push mov jecxz mov (bad) loop test (bad) leave ret mov push icebp adc and addr16 movsl push xchg sub loop ficom flds pop xchg xor dec add lock shlb mov mov mov mov mov pop std jmp xchg push std mov std jns xor aad xchg lds pop cmp push dec mov add inc (bad) repz mov in and inc icebp xchg push push cmp test xchg js jo (bad) rep cmp jae add inc test cltd sub lcall push cmp jae pop mov in lahf mov xor js lret lds xchg dec and or ja cmpl dec imul pop add cmp or or mov mov sbb outsb cmpsb cmp pop inc add rcr aam push jg jno mov push mov mov add rcrb jecxz mov sbb mov pop iret mov sbb in jp outsl cmp cmovns loop mov es cmp stc sub outsb (bad) dec inc sub outsb stc insb repnz notl jnp insl iret xchg adc cmp aaa aaa stos inc and (bad) jg xlat push ret out xor inc xor lret mov int3 xor ja pop push sbb mov add xor ja and xorb scas xlat push mov (bad) mov ds inc enter movb lret pop imul loope lret jg ja ret sbb test (bad) incl jbe lret dec push jno decl jo push arpl adc xor mov jp jne sbb mov in lock test pushf adc orb leave (bad) xor cmp int into nop xor or clc mov push adc dec pop int stos leave sbb (bad) fsubp xadd adc or pop push mov jno lret xchg mov and jae out mov out xchg in mov call imul inc sub js decl cmc or mov das cmp call mov scas cmp inc ds adc cmp int3 in outsl in mov jg pop lods lahf movsb lret xchg mov repz mov dec fwait sub sbb or jb inc xlat dec and pop jmp mov pusha and cs jno mov and ss adc add sbb stos mov push push inc into lods loopne fs mov or jne sub rorl outsb jg in lds insl sbb enter sbb mov pusha cli hlt xlat jns xor xchg rorl cld xor sti dec mov (bad) loop xor xchg sub int popf iret scas mov jg dec xchg orb or lret sub inc jne addr16 xlat fimul xchg dec mov dec repnz arpl dec jno adc test add call fdivrl xor mov ficompl add mov pmaddwd lea mov repnz sub out hlt and dec jge inc icebp mov ret jge je xor mov dec jnp movsb pop dec gs jb dec inc xchg jge cs ret imul cmc jnp and out mov jp iret lahf adc loop aad arpl jg mov insl mov mov add mov scas mov out rorl lahf dec or (bad) (bad) mov xchg ds pushf js imul mov (bad) loopne addr16 pushf xchg shrl or mov jge add or adc mov mov mov ret add xchg and add das mov dec stos test fisubr xorb shl in cmp xor mov and mov in ja adc mov cmp mov inc arpl cmp test loope add dec adc lcall lock or pop pop imul jno push push ja movsb movsb and shll pop xor sti lret lock inc popa lods jbe add jns sbb outsl sbb mov sub mov and adc pop sbb pop push lret outsb mov and iret pop std icebp sbb add ss scas test mov cmp pop add imul fnsave clc lea push ss push xchg xorb mov push aam mov mov jp mov aad faddl stc dec fadds jl outsb or scas sahf cwtl ja std dec jg jno repnz cmpb (bad) jmp ftst dec sbb call out push push cltd mov ficoml adc pop pop jb iret divb jns fidivl ficompl mov aad mov xchg xchg push leave mov fs cli imul xchg enter sub cmpsb sbb fdivrp (bad) call push cmp mov jp call loopne js testb add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add leave adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc add rcrl movsl add cmp sbb and aaa dec ja je jmp jmp sbb jo jnp jecxz push jecxz add ljmp neg iret popf out xor inc bound fdivrl rcrl push (bad) outsb ret xor std or aas sub nop dec dec andl or les into pop ficom je testb pop mov mov sbb jbe pop repz sbb adc push xchg pop arpl fsubrl outsb repnz sub int pop mov outsl sub call fiadd dec lcall insl jg cmc fisubl jl add jnp arpl xorl sbb push je test cmp mov xor xchg xlat adc out add jbe fscale sbb in push ja inc jp lret or xchg cwtl aaa inc daa push mov sub xchg ss out dec inc ret jp aas pop mov push aam cmp icebp ret push add pop ret xlat stc lods test out dec sbb ja jns cmp test hlt jno xor aad xor fincstp and and inc nop ret addr16 mov cs int arpl (bad) sbb ret (bad) imul or lret push scas daa not clc jne int3 in (bad) movsb out push (bad) adc xchg xlat push sub ret aaa lahf (bad) or jns test cltd and add add xor in (bad) stos pushf addr16 inc xchg sbb je push mov jns lods shlb test lcall dec test lds mov xchg jb test mov xor jmp pop lahf aas and add sbb enter scas jle pop clc lahf jg inc movsl cwtl cmp pop mov mov xlat jnp leave fidiv pop movsl mov daa add cmp (bad) into test xchg mov ss shrl cli adc dec sub fistpl icebp sub sbb adc sbb cmpsb das je dec add nop xor xlat cwtl ljmp in out in dec bound sti pushl dec sub jb cmp mov std dec and push cmp hlt scas les insl jne pop pop es sarl repz xchg pop or std sub es movsb sbb movsb sbb movsb mov add std mov (bad) shrb sbbl pop mov xchg pop nop and out pop (bad) das (bad) (bad) jmp sbb test jo stc push push and mov notb push sub sub (bad) out jns test jbe push mov sub int fs inc sub movsl xchg cmp test xor rorl ficoml (bad) les push xchg inc test xchg sbb pusha cmp mov xorl (bad) add pusha push negl into lret mov sbb lods rcl jle mov cli pop call out jl rcrl fsubs fild sub rorl loope or ret pop mov lock repz push or or add pop dec pop adc mov xchg sub dec (bad) xor or and cwtl xchg lock (bad) jbe push (bad) decb roll dec (bad) aaa das andl inc lock popa rcrl or test ficomp mov xchg sar out sub jp adc fsub gs lea (bad) jbe jae pop aas (bad) fs inc push js push arpl mov pusha mov test out push pop adc xchg sbb ss ja insb das push pop and xor scas ds loop mov ret or push stos jo pop push adc mov sub mov loopne idivl or adc sbb xlat adc mov (bad) hlt xchg sbbl dec sbb andl mov imul jp scas call scas xchg ficomp jp addr16 (bad) and fmuls mov lods sbb daa cmp loopne sbb mov pop push ja movsb fldt enter lock nop call icebp sbb (bad) out cld dec outsb jmp xor pushf cmpsb inc push rcrb stc xchg jbe add loopne sbb jle jnp push jmp inc test popa xchg xchg imul imul pop mov pop (bad) fwait jmp xor inc mov movl inc cmpsb mov cltd jp lret adc adc sbb rcrb or jmp xchg test sub mov jbe or sti push test (bad) mov sub mov inc mov rcl ror loope sbb in fidivrl mov lcall hlt loope and bound popf push and stc rcrl jnp es adc fcomps ss in movsl push je jle mov inc mov or das xchg xchg add gs pop and in push adc andb loop sbbl outsl lods jg inc sub mov add (bad) insl pop push xor or push (bad) cmpsb repz xchg mov push mov add aaa xor inc int sahf jmp into (bad) pushf sbb sub push dec mov and xor inc aas lea pop outsl test cmpsl scas sbb bound fdivl int sbb add inc ret xchg ret in add add aam mov test cmpsb loop imull iret lret jb jb sahf std push inc pop iret fucomip adc jge inc push cmpsl lods xchg mov pushf xchg insl xor pop xchg les adc jne test sub daa fstl in mov in clc push pmullw lock insl ja aas ss xor cli jbe add aad cmp jp je jnp mov sub es lret lahf imul loop jbe clc fwait lret imul (bad) pop jmp out sbb dec cmc (bad) aam push ss nop mov outsb add mov lret adc or cmp push (bad) inc jbe and xchg pop cs pusha xchg cmp mov pop mov and clc mov xchg je icebp data16 cmp dec push mov sbb inc pop imul mov pushl or sbb mov repnz (bad) pop int3 ss and bound sbbb das aaa pop mov cmc inc xchg pushf inc jno sub or int inc sub cmp xchg and and or outsb cmpsb adc cmpb push dec sub aaa ret dec movsb and mov jnp xchg sub (bad) jp inc xchg cmc and insl mov lcall pop rcll (bad) cmp aaa fsubl loop jle jp fidivrl iret mov loop test mov pop fcoms mov (bad) xor aaa popl ret dec xchg pop add out insl push int lock movsl shrl les push jb or mov data16 sub cmp std cmp out and daa sub in jecxz cs add jl sub add cmpsb jbe std adc rolb xor loop sub mov daa ret pop adc and adc sub mov outsl std pop pop sub inc mov nop repz or faddl sbb mov test dec cmp and shr pop repnz jne fwait ret mov lea ja jle mov and and ja mov iret and xchg (bad) xor stos stc mov sub push xor mov clc dec add xlat (bad) outsl cmc pop mov inc xor andl je fimul inc add lds movsl mov inc lret lods pop add movsb popa inc inc aaa lds lock and inc xchg outsb sub or add in xor ficomp repnz jp sub scas or fidivrl cmc pop ss scas or inc mov sbb add pop icebp hlt out icebp shrl inc adc out test mov cmc popf dec adc cltd test fisubrl jne ljmp popf cmp (bad) add jnp xor daa dec mov das stc movsb ds jge insb jno icebp outsb adc lods jecxz sub cmpb add stc pop loopne adc push call jb jg fdivl push loope clc popa xor xlat jp inc xchg insl ds cmpsl pop cmp cmp pop loopne xchg mov cmp mul scas mov inc cmp xor jl aaa jp lcall inc bound or arpl sbb and (bad) in cmc stc ss jae pop std cmp inc insl call pop and lahf and xchg push lret dec popf cli fsts lods push or fsubl lods data16 imul aas pop daa out xor mov hlt mov loopnew dec out (bad) int ret jecxz mov dec leave (bad) out sbb movsl popa or push adc in add and adc addb xor inc push pop loopne loop xor (bad) les pop mov and add lahf push popf mov out or sbb pop and imul arpl push arpl mov sti pusha mov test loopne jp xor test lds or rolb aad inc movsl test push and push pop push mov add sar sub mov cmp xlat std js (bad) fnstenv add push add mov test mov ficoml es out movsl ljmp js push and les mov das fisubr pop loopne sbb bound dec pushf ja xchg mov in jmp int fildl aaa inc jae pop test jne or adc popa aad js sub cld (bad) pop call or ja cwtl sbb mov test mov out in push inc movsl xchg xchg lahf jge pop cmp xchg (bad) sbb xor sbb popa jnp fstpl cld sti fucomi fsubp aam mov pop push mov ss hlt clc lock jecxz pop movsl test out sbb lahf push pop enter jo ljmp test ss push mov mov adc test cmp out loopne (bad) and jae shld cmc add mov xlat jae gs pushf arpl xchg xchg scas push dec push aam pop std lds cltd add cltd fnop fdivrl test test ret mov push cs mov rcrb rcll imul push sbb rclb pop stos xchg xor jno push orl ds lcall push cwtl cs mov data16 fild push dec xor push adc out insl or mov xchg adc ds add ss push cmp fimull mov push fistp test lea pop cmpsb insl add fstpt aam iret int3 xchg mov push hlt scas cmpxchg gs (bad) lret fidivl sub test mov mov ret jne jnp bound mov es sbb inc mov iret mov data16 icebp aam pop jne test popa or aas cmp add sbb mov ss mov push and negl dec addr16 jbe cmp cli sti out xchg and aam add add in popf aad mov dec xor adc pop inc lock mov ljmp inc pop push inc sub dec pop push xchg push pop clc push das ds nop iret orl mulb jg jle inc enter jmp (bad) mov xchg fistl jnp mov cwtl xchg jmp ffreep or pop push cmp mov cmpsb mov sbb mov mov add pushf movsl jl cld mov lret lea jmp out and add scas lcall and gs leave xor hlt (bad) cli rorb mov xor pop pop loope xor xchg addr16 hlt sub sub (bad) loopne mov out sbb jge jno pop mov cmpsb or pop cmpsb pop push (bad) dec jmp (bad) bound movsb jmp test mov inc icebp xchg mov pop orb mov mov mov int mov test cmp jg enter sbb mov inc popf leave and (bad) hlt inc shrb pop mov cmpsl pop repz ret mov imul stos cmp test cmp ljmp lods insl negl dec ja aaa lea ds cmp cmc xchg mov orl jbe mov pop mov (bad) je jne fs es aam dec push pushf lret out (bad) xor mov sbb mov je add push fstl notl mov int call and cmpsb push pushf jne cmp mov mov or pop dec dec les mov pop xchg std sbb adcl jge (bad) dec sub mov rorl test inc clc std jb mov (bad) mov imul xchg scas mov hlt ds mov in daa (bad) dec scas pop cwtl dec nop (bad) fs sarb das notl mov scas adc adc xchg and sbb jg jns movsb ljmp loopne outsl xchg inc (bad) in loope fwait test scas mov out movsb out dec jno cwtl cli lahf fisubrl or outsl cmpsl pop in mov ffree xor mov inc push out stos fildll xchg in aam sti insl les pop ret xchg or fst insb pop out call push mov shrl arpl and mov (bad) cmc cmp pop mov sti mov loopne and lret pop cld lds pop sbb sbb addr16 (bad) xor std popf mov mov cld mov cmp xchg arpl cli (bad) ret insb jnp jnp ficomp inc jl pop stos lret pop out mov test mov pop ds sbb lock pusha (bad) (bad) fmull sbb add aam xor in mov (bad) lahf pop or push ljmp xchg fnstenv jnp in fnstenv incl add punpckhdq in push clc push dec add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc push push inc xchg or adc mov out push jmp ret rorb je xorb inc aaa inc andl scas jno push pusha cmp dec loopne adc lods mov push fsubs fnstcw jl sub fisttp pushf xor xchg fdiv es jg sbb add in push pop xchg data16 mov lahf enter nop or push add cld adc xchg mov outsl xor jne xor and std sub mov xchg or jmp pusha mov push (bad) je pop les sbb jno cmp jns mov pop enter mov add (bad) push sbb xlat mov scas std cmc jae call xor fadds pop lods stos dec cld fidivl mov mov fistpl adc push or ds pop in mov push lock pop cwtl mov stos inc pop sub out scas (bad) int3 inc adc lret cmp insb out das mov (bad) notb sub pop push cli mov push jmp insl mov or cmp nop jb out mov jg cmpsb pop popa sub arpl ja stos cmc ss mov cltd sbb sub or dec loop out mov hlt mov jns loopne in jle sti cmp mov sub aad sub rorb mov lea in fwait stos les mov adc lea test jnp cmc in pusha jl das mov (bad) lods jecxz lods cs mov inc inc jg movsl push adc test lock mov out mov stos ror dec mov or ficompl and sub sub pop and sti cli xchg inc sub mov test testb dec lret lea lods sti aad movb pop ja and cmpsl jno sbb and xor (bad) push out push gs loop test xchg gs test xor (bad) sub (bad) loope or (bad) out adc decb jbe push inc jne xchg in sti pop gs enter insb push and mov mov add scas fnstcw push pop mov sbb enter xorl xchg das out gs clc cmp (bad) test xor xchg sub sbb mov imul sbb add sbb std enter pop pop and mov mov jle inc out push mov jmp sub das jl nop ret and dec mov icebp sub ret pushf icebp cltd push jle rcrl xor lcall imulb and push xchg xor test scas adcl pop stc out inc aad pop insl out ds pop mov outsb fbld mul mov add (bad) cwtl (bad) push mov sbb adc gs sbb sqrtps (bad) push ffreep mov sti dec repnz push loopw pop out rcrl mov leave pop fs inc jge lods out les jl rol sub xchg inc int3 shll mov lods pop xlat pop pop insl clc je repz inc xchg lea fcompl sarb mov mov aas stos lods xchg insl add jno inc mov repnz sub pop iret div xchg jns dec mov jns jbe jecxz or stos orl iret leave sbb pop mov pushf jo dec dec sub mov (bad) fs cwtl pop push mov or aad sbb out jo in daa popa jo and add mov xor dec call divl jbe adc cmp repnz pop fnstenv js fnstsw sbb repz in dec lock or cmp popf adc add xor dec insl aas or in cli mov test jg lcall lcall xchg inc mov add scas sbb jne cmp rcll aas inc ds fimul add nop pop dec bound fcmovb or (bad) add cmpsb imul jle xchg or (bad) ret jle xchg sti in mov lcall and fmul push or mov or push call test xor push call xchg xor sbb mov cmp push jb xchg test or fsub sbb sti sbbl pushf ret mov movl jg add or xchg sub dec xchg sbb jb mov jge cld push addr16 cmp adc lea in jg hlt xchg scas test inc repnz mov xor pusha jp mov cmp xor pop out addr16 sub xchg add adc xlat mov sbb fisubl sub outsl mov gs rclb push lock xlat pop adc xchg push push and pop mov jb std (bad) mov cwtl dec cmp (bad) sub out das (bad) xor and sub cmp cwtl test notb (bad) jp out xchg aas outsb push mov jnp enter xor daa push jbe lock mov fdiv and lahf mov mov aas sbb adc arpl mov into sbb out dec movb outsl andl pop jmp outsb push and scas and add call outsb lret ljmp out mov sbb xchg in cld and pop jno push lds dec inc js into cli lods jmp sahf pop mov mov call lcall ljmp ret jbe xor or clc add in lds div inc (bad) dec and dec stos or pop insb aam jge (bad) out xor pop xor or pop push fwait jo mov lds cwtl push cli cmp lret jno xor dec mov inc lods mov data16 push negb out dec dec push dec pop and in adc inc mov sub inc push cltd faddp dec jmp rorb ss inc mov gs jnp cmc jo orb mov mov (bad) popf clc jne lret rolb lret mov xlat sbb and lahf hlt add sbbl ja jns test jb cmp cmc mov mov out test sub sub or inc cwtl cs add clc or daa mov loope int lods loop cmp int3 and gs les nop xor (bad) xor and insl push subb and iret xor jmp or jno inc cltd cmp gs pop mov or out lret inc lds mov and or pushl dec add adc push push cwtl xor cmpsb pop and fxch xchg cmp imul nop cltd test mov syscall dec add or mov aad pop adc sbb fs mov jg mov mov out (bad) push and aas mov addr16 push lret cmpsl xchg aas cmp lahf lcall iret adc movsb (bad) jg adc jbe lock push lahf clc mov xchg ficomp arpl gs adc scas lahf stos lock sbb mov cmc jnp add loopne inc mov fs xchg add push xor jae mov ss sbb cmc sub stos xchg cmpsb sbb or pusha jl push jge out and in xchg add xchg fld int3 push adc bound jg ret dec or arpl repz sub dec mov outsl cltd stc dec xor mov mov idivl sub xor mov pop clc add mov (bad) lods push fbstp cld rorb xchg sub or mov mov rcrl mov pushl pop cmpsb icebp in clc inc adc es pop mov mov (bad) cmp fimul sbb test repnz xchg push adc hlt cmp cmp sarl cs sub lret sbb mov sbb subl stc test xchg sbb outsb ss push out or sti stos pop sbb dec ret or arpl or outsl mov xchg cmpsb das call push jns jbe lahf mov insb add mov mov xchg dec iret or or mov nop adc pushw cld lods add lret cmp inc out mov push lock push fwait movb pop adc out fcompl mov mov or and cmp adc jbe add arpl and pop adc jmp xchg push je or lahf xlat daa pop xor lea push lahf shll nop adc je and cmp inc stos xchg mov out add adc lcall dec push pop or lods stos cmpsb or scas pop and xor lds aam int3 push fnstcw rcrl lcall dec dec pop (bad) xlat mov stc sub xor and mov loopne popf sub out mov xor hlt ljmp pop insb outsb shl clc cmp cmp jle xor mov sbb out je iret jge inc int insl mov repnz inc ljmp inc daa in inc jno cli jg jne stc js jbe movsb in (bad) mov cmp (bad) sub out andl push pop in sub cs jmp pop jbe and mov mov ljmp xchg bound mov push cs sbb mov cmp jnp in (bad) lods repz xchg (bad) shll or dec (bad) xchg cld cmpsb push sahf mov dec sti cmpsb lods popf mov xor test push xchg mov fs cmp aaa ret mov sub fistl push out loopne push mov mov in (bad) or (bad) fnsave mov enter lret leave cld xor dec fs xchg test jecxz jecxz dec and out cmp cmp (bad) or or pop jecxz mov cli aas xchg jmp dec push cmp (bad) incl jge or jae insl jmp push sbb adc push xchg cmc in stc popa adc dec dec push push push xchg sub jp insl call or xlat mov scas adc fimull movsl and rorb cmp xchg mov cmp push or cmpsl sti insl lcall loopne mov mov aad pop lods rcrl fmull iret sub pop mov repnz scas loope cltd sbb leave cmp (bad) mov lds and mov or stos clc (bad) outsb bound adc addr16 dec aas cmp sub mov push les mov (bad) sbb imul (bad) dec cwtl data16 sbb rorl jge fistl imul inc add loope cld jae icebp aaa mov pmulhuw mov add popa or push mov pop mov inc repz insb addb lahf mov push mov fcmovne adc jg mov jmp pop or out bound jecxz cmp inc jecxz stc (bad) pop inc loope divl pop (bad) cmp jb xchg stos pop push out lcall enter sbbl (bad) fsubl mov call ja pop imul xchg mov pop dec adc sub add push xor pop int mov insb and out sub push lock inc cmp sub lret sbbl scas cmp in sti and movsb bound cmp in xor inc push mov popf icebp add jp rcrb ljmp dec (bad) jp inc out cwtl mov daa lahf out or out into xor test cmp ret xchg inc outsl loopne stos sti mov cltd inc or mov aam push std out repnz pop mov sarl mov icebp cltd sbb das scas push mov inc test dec and jmp xor test pop and pop addr16 adc rsqrtps bound rcll push les add in cmp adc and fildl cs push pop cmp (bad) mov test jge (bad) loope rorb or inc enter add rcl icebp fisub iret jnp cmovs push dec cmp jmp jmp fsubs push sti repz add ret clc xchg xor arpl fdivl mov out inc ss mov sub shrb inc inc ss add push loope pop imull pop push cmp xchg aam mov (bad) loope jmp push adc insl (bad) and ret push lods in stos scas cmp xor cmpsl push out jl push inc pop (bad) jb add pop fsubp sbb or mov rcrl pop jp (bad) jne inc inc dec das pop cmp cmpsb adc cmc repnz das clc mov xchg xor ja xchg mov sbb enter out add xchg movsb and roll pop dec sub stos test call push pop notb adc fld1 fisttp push adc pop call mov and jnp add call andb sbb imul out cmp pop out in adc jae dec add or sub fdivs (bad) add or data16 and adc inc mov inc push fidivrl jbe pushf addr16 inc data16 add mov mov xor fnop stos adc inc into mov sbb int mov out (bad) cmp xchg lods ficomp pop ja movsb or push in and negb rcrb hlt cmp jnp inc repz lods ret xchg and js sti fiaddl inc lods mov and (bad) (bad) outsl stos imul cmp push js sbb iret mov faddl cmpsb mov ja daa cmp adc add insb lcall mov push add aam add jb clc push dec loopne ret aam stc adc mov fstpt fcoml aaa push mov cwtl inc js ret push adc scas inc out arpl sub lahf cmpsl xor push xchg call es fstpt mov mov mov adc loop inc pop fsubl ffreep std stos sbb dec les sbb (bad) cmc pop cmp adc xchg test out cmpsb dec out movsl in cmp int3 loopne sarb add fnstcw mov jle add xchg mov xchg jp ljmp jp ljmp fild add add jecxz and movl inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int3 adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb rolb sbb jmp fnstsw jmp dec out fwait cwtl ds mov mov scas mov cmp (bad) jle xlat repz add outsb out jp iret sub ficom xor popf ret ds or cli xlat cwtl mov ret rolb int mov push or pop mov mov call xlat rdmsr pop lahf lock ljmp (bad) rclb pop adc jmp jmp dec xchg push std and xchg push pop sbb stos cmpsb icebp into mov mov mov testl xor jns dec xchg imul xchg mov popa shrb pop adc jmp es enter xchg (bad) pop add (bad) mov fldt in mov and out loop (bad) jg jno jmp sbb pop xacquire xchg jno stos (bad) sub ret test push cs dec cltd data16 addr16 outsl std addr16 mulb dec push loop ficompl xor fst push jne sbb ret sub and or jmp pop jge add mov pop fmuls cmpsb rcrl cld (bad) es data16 insl sbb or xchg pushf aam fucompp add es xchg outsl cmpsl out (bad) sti pop pop inc push call mov insb dec push mov popf mov (bad) jecxz cmp push lret lret dec xchg movsb push and fsub fyl2xp1 std aas cmp fs pop push sub jge dec xchg xchg movsb push cmp popa dec jmp push ret fstpt cmpsl int3 sub jge rcll addl imul data16 enter aam adc push loop scas xor repz cmp jecxz and mov sti mov push lcall out or out stc (bad) sub sarb dec sub sti and insl stc xor cmpsb jb,pt aas and adc incl movsb sbb sub popa int out and dec popa js mov mov inc push jge rolb (bad) aaa ja sahf mov setbe sub addl es aam mov or enter push sbb mov and out xchg lea iret inc xor jg div xacquire enter je dec je stos popf mov mov cli insb (bad) adc popa je rorl lahf aaa jo xchg fsub in sar sub mov fisttpl add nop cmp adc sub jo xor inc daa adc int or sub popw mov cmp je cmpb fwait xor mov pop sub loopne inc jg pop aaa inc (bad) jl test mov js sub push sbb (bad) lock or or cmp fmul movl movsl movsb adc cmp movsl decb cmpsl mov or lods push add xor add jmp jle test cs out dec push push dec hlt add adc and mov aaa xchg cli stc movsl lret sub adc lret pop loop (bad) mov cli adc xchg je add mov and sbb out add pusha xchg xchg mov aaa or cwtl mov (bad) mov scas (bad) sub mov sub sub xchg jbe jo dec fist mov lret dec inc inc sub jns loop movsb cmp (bad) daa inc or jl cmpsl fwait sbb dec or es rol (bad) push lcall ret loop sbb xchg test mov jo sub out sub push (bad) jbe jns out scas mov out adc popa fist andl int sub or mov iret mov ljmp pop sub mov and xchg in and dec jg cs das scas cmp test in dec pop rcrb sbb (bad) imull cmp popa cmc arpl dec push ss (bad) jo push in pop movsl lock ret push (bad) (bad) dec xor sbb bound out js loope les aad push shl and push pop sbb pop inc imul ret xor (bad) pushf call jae cmpsb mov insb cmpsl in inc and in out cmp jnp movsb xor lret mov mov test movsl cmp dec movl push pop sti push jb cwtl jne push lret push mov mov (bad) stos mov insl xchg (bad) cs add xchg xlat dec mov cld jp lahf jmp add pop pop sti stos xor ljmp dec inc movsb or cmc cmp xor in dec sbb adc std add icebp mov sti bound roll scas leave (bad) hlt into mov gs pop loope leave xor add mov push lds roll pop repz mov add mov cmpsl shrb push ds mov insb mov shl sbb test jmp sub xlat scas sub cld xor data16 push fsubrs xor stos mov sub sahf pop inc push add jmp leave jo push and jae cmp xor jmp je cmp and rol cli out pop pop push xchg out mov and jns pop test mov (bad) push mov ret dec mov push xchg orb fmull rclb ret loope sbb jmp out add insb xor sbb int3 cld in movsl fsub lods push mov orl pop mov xchg cli je mov cmpsb (bad) xor xor adc dec (bad) inc sub pusha icebp outsb cmp pop jbe dec jle int3 mov sbb push (bad) xor pushf xchg stos fiaddl jp inc dec outsb mov ds popf sbb (bad) mov mov (bad) pop and sub scas fs pop cmp pop test popf jae mov nop mov mov or lods and faddp inc inc xchg push scas call (bad) sbb stc mov int3 rcll mov inc movsb cltd jmp aad test pop stos sahf ds lret movsl je out out std dec fs out sbbl cld scas stos xor (bad) aad pop and pushf inc mov dec jmp test push add cmp mov cli pop jge xchg cmp sbb xchg in pop xlat dec std dec outsl jge outsl aam jl cld pop mov ja add cmpsb loop ss cmp fidivr das mov in mov adc out sub daa cmp int3 je in out pop mov or jbe aaa push jmp call lods popa mov int3 (bad) cli mov (bad) xchg in scas push inc ljmp xor lods (bad) sub aam daa pop push inc inc mov jle je rclb cmp mov fldcw jb stc jg imul repz inc push pop cmp inc dec clc addr16 lahf pop xchg out inc or inc adc icebp test sar sub in gs cmpsl pusha pop mov push dec xor aam pop sbb scas jmp jg lret pop dec les push add push xchg cwtl sbb jne (bad) or adc in inc pop sarb and push push or push arpl (bad) and insb mov enter cli sub xchg push sti jp leave (bad) lock jnp push test jb into add jecxz jmp ja shrd cmp icebp cvtps2pd sti jbe popf jnp jno cmp out insl test mov pusha mov jnp sbb sahf add adc arpl in xchg mov mov inc mov fs mov daa test cwtl fcoml lcall ret shrb pushf and sbb jl cwtl mov mov or and and cmp mov repz pop pop ja jl out cmpsb mov mov push lret cmp popa mov cmp repz add xchg push ret xorb rcrl mov sahf scas (bad) push or enter jp jmp jl fldenv lods mov push jl dec hlt test xor shrl jge ds fdivrs xchg and pop outsl sub jne pop add (bad) stos xchg pusha mov aas add pop push and and sub popa fldenv loop pushf stc mov pop icebp xor lahf mov mov data16 in inc loopne mov cltd cmp fiadd push orl hlt push dec lret dec jae test iret push inc movsb leave jb pop push gs out repnz fsubp inc in pop loopne jae out dec xchg xor stos inc arpl and sbb mov stos mov out and sahf sub jp scas cmp ret pop lods imul enter sti add out std je loopne pushf stc xorl call sti xchg leave pop dec or cld sub iret mov sub fdivl xor repz icebp fadds insb mov and daa fs pop pop mov loopne mov es mov or add ret iret test in and outsl add and test push xchg lods inc lds out mov or and jge sub lods lods cmc cld xor ret pop jb mov stc dec addl pop in dec sub aad jp mov push sub add scas (bad) pop out in sbb cmpb std push (bad) pop xchg cmc inc lods cmpsb (bad) orb out pushf mov ret icebp push (bad) dec hlt cmc sbb es mov xlat nop sbb (bad) loope (bad) not and (bad) call les sbb xchg mov ret aaa mov insl mov fsubrl mov test (bad) sub sub arpl test imul inc lahf pop xacquire js les (bad) stos xchg or mov dec cs (bad) jb (bad) fcmovbe cmc mov inc add jae clc orl lret imul push daa test push popa mov or rcrl xlat ljmp sub cmp fisub xor fistpl xchg jp (bad) pop mov je adc out xchg dec data16 mov shrl aas mov dec mov xlat fidivrl dec cld pop mov jg lret adc add test xor sahf sarl dec (bad) (bad) icebp sub decl mov dec sub jmp les mov aam dec xchg ja addr16 jno fstps jg and imul xlat jne pop xor ljmp push fnstenv dec subl mov push inc repz insb jmp xchg in imull lods mov lods adc enter jae sub jne jmp jnp loopne mov xor push fmul lahf dec sub icebp aam inc ret add inc insl jecxz fucomi hlt subl cmp lds iret xchg (bad) xor mov subb xor (bad) addr16 cmpsl movsb inc or cmp sub add lret fidivr (bad) jmp lods sub gs fbld enter (bad) test jo lds leave push add scas mov and decl sbb or rcrb mov sbb sbb leave or mov mov inc (bad) faddp xchg loopne jmp xlat sub fnstcw sub jns jecxz mov jae xchg push push and imul push mov ljmp aas loopne push hlt scas cmp repnz rorl cmp and cmpsl add leave add lods popa xor mov popa sti sbb cmp add arpl xor lret fdivrp mov ljmp outsb call mov cwtl aas cs mov fbld or dec pop jl rorl iret push cs push xor popf int3 leave orl sbb add push pusha mov xlat pop cmp mov aaa xchg mov adc cmp push repz outsl out jae mov (bad) lock lock jg xchg and test hlt mov rcrb stos mov push add fmull fs ja mov xor push insb out fs sarl push fsubr pop dec in adc push lods or xchg lret jle popf (bad) (bad) in push dec mov push test sub sbb inc and fsubrp pop sbb in mov (bad) ja lods add push dec sbb ret inc cmp mov pop mov inc inc (bad) cmp push jmp add int ja mov rorl je pop push xchg inc (bad) js loope push sbb mov aas mov fsubl cmc mov mov je mov (bad) mov icebp mov adc xor fisub icebp sub pop pop cmc dec or xchg xchg jmp test imul push mov lea xchg movsb mov mov loopne mov xchg mov cli inc mov jbe loopne test or jae fwait repz mov xchg pop fisubrl dec jmp rcrb into aas aad bound repnz lock jne,pn lret and icebp rorb outsb pusha popf inc stos jecxz cmpsl nop ja bound mov imull (bad) mov ret mov jmp ss lret pop js (bad) xor mov mov icebp fwait cmpsl jno push movsb mov jp mov icebp lret lret aaa stos scas or (bad) mov add bound cmpsb xor dec aas imul mov fnsave stos stc test js mov cmp enter jmp mov scas inc or mov sar loop inc icebp lds inc add and or inc dec push adc sub push dec outsb xchg pop aas popa fcmovbe jl or lahf push mov arpl dec clc loopne lret (bad) loope sub jno ja scas jb dec das push aas mov cmp (bad) dec sbb dec outsl test les ret mov iret insb add cmp in mov push xchg push call and out decb lret pop or cmp or (bad) xchg lret ret mov nop and lcall arpl inc mov int3 push mov adc repnz push loop xorb out loope (bad) call push cmp mov jp call sar fcmovbe adc xchg (bad) xlat and add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add leave adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push and jecxz icebp xor jns dec (bad) in in jno dec mov in dec dec divl fwait data16 cmpsb data16 cwtl out jmp ret clc cmp xchg lock stc add xchg daa cmp in add mov mov dec std aam xor xor mov inc (bad) dec shrl and push xchg mov dec jno sub inc push pop inc adc sahf mov dec insl fimul adc imul xchg lret pop out or scas mov orl lahf in mov lret xchg jmp pop cmp pop sbb sub inc pop push pushf sub mulb add pop xchg cmpsl inc jle inc add aas cs movsl loopne inc imul ds (bad) sbb loope movsb std mov add in mov fdivl fist and sti xlat (bad) out hlt xchg add repz cmp test xorb mov lret jne mov push ss mov (bad) xlat std xchg mov push imul push adc mov mov inc fcomip stc dec mov scas push test or jae mov sahf sbb cmpsl pop js aaa cli dec cltd outsb fisubrl (bad) movsb jnp mov xor dec pushf dec jge inc iret jl dec lsl dec cmp (bad) jmp mov fild decl and push hlt stos jo lods insl adc xchg mov test fbld nop enter adc pop add outsb inc repz daa add loop jo shrl ret push xchg jge movsb xor inc loope fidivrl mov mov inc ja repz pop xor leave enter (bad) mov push sub loopne jnp inc fmul sub jo (bad) mov lock call andb dec rcl leave jne jmp add mov cltd jg dec sub mov adc lds cmpsb scas lea mov xchg xor mov test (bad) in aaa sub xchg js xlat in dec xchg (bad) cs and sbb jne push jge mov mov adc push cmp or push (bad) jns sub mov decb fcomps xor dec inc or mov pusha cld test cmp (bad) fsubrl loopne mov int3 jae sub and push sub xorl sub mov fiaddl dec lea jmp cmp jns fcompl adc idiv test sbb mov jge daa jbe sarb push push into mov in iret lret inc shrl pop and or pusha or dec inc xchg in call mov xchg lds bound not dec aas lret jge loop,pn sub jle mov jae test popa sbb sub mov jle jo cmp push dec add push sub fsub test mov push mov mov xor adc and sbb test xor sub je mov sbb xlat fwait (bad) mov pop aas mov sub pop push imul jne xchg pop inc cli cmp xor arpl push cmp test mov adc ret xlat pop adc pop (bad) mov push push ss sub mov jg mov xor test pop push lods cmp cs or dec pop push pop lods push cmc fildll jb lret cmp jae pushf sub xchg mov mov cmpsb cmpsb aam test stc jg sti fstpl ss and inc notb icebp push movsb imul add add xor xchg orl mov imul popf cmpsl push iret jns test arpl cmc add dec out fildl arpl dec jne jge xchg mov xchg int jle mov sub repnz jg mov cmp lret cld (bad) adc fldt jl orl or push cmp scas adc dec push mov xlat vpcmpgtd xchg jb inc int push mov fdivl jmp cmp arpl inc lock mov push lret xlat icebp in outsb mov mov push fbstp cmp xchg jg movsl inc into pop mov or in inc or in int cmpsb lds lcall ja (bad) idivb (bad) mov jne stos mov fwait rcr mov (bad) push adc inc cwtl cmp pop xchg mov pushf mov push mov sub push xchg xchg cwtl jl jecxz add push dec mov popa adc jbe,pn and sub movl and or daa aam in aas std push xchg in or repnz lods pop fldt leave mov bound cld mov cld leave cmp sbb shrb push aas sahf jae jecxz cmpsl subl mov in add inc lods lock add scas sbb inc (bad) adc mov cs call je mov (bad) jle pop lcall jno lea push dec mov mov inc jmp mov sbb fistpl adc push or mov call xchg flds mov and movsl jge,pn movsl jle ret gs mov (bad) fcoms cmc pop mov scas inc xor inc cli pop frstor hlt (bad) hlt mov push add mov enter fmuls jo xchg mov sub xchg dec out add int3 cmpsl mov test pop fisttpll fwait push mov add mov mov cmp loopne nop inc les jmp mov iret jle xor leave (bad) fisubrl aas sbb addr16 xchg push lcall ret fcoml bound xchg in sbb lret nop aas cwtl or xlat or out fwait outsb push mov adc outsl mov adc push adc or aaa and lods fnstenv cmp ds imul mov adc sub repnz lds idivl cli mov add inc pop cmpsb shr inc adc imul dec out xor mov cli pop mov sub mov int3 test popf stc outsl and adc loopne lcall hlt sbb pop inc cmp xor adc movsl scas push mov in inc icebp gs xchg jl xor xchg out ljmp aaa fmull or mov or repnz out (bad) pop dec inc fwait int and and sub mov iret cmp cltd mov dec inc and inc cmpsb fldt scas push stos cmp mov xor stos out in sahf and xorl arpl nop and adc pop inc movsl xor rol pop push call inc sub gs (bad) jns push adc fs and (bad) mov sub fwait sbb stc jbe xchg pushf mov jg test insb cmc syscall popl pop and jb pop inc mov sbb (bad) cmp xchg jae xchg in (bad) dec inc pop in mov js cmpsb adc cmpsb aam cmpsb cltd addr16 dec dec cmc fnstenv je hlt ret rcrl fcompl xor or lret stc mov inc sub xor or das fmull push mov pop dec xor mov mov mov add cmp mov jmp ds jnp imul lock fdivs in fs fisttpl jns push inc fs mov lahf int3 out jmp leave aas lret das inc aaa xchg mov add notl idivb test call stos jns das add bound lea jle pop leave pop adc mov sub jae popa xchg aaa push jo mov lods (bad) adc mov pop cmp or or jg push pop jmp je mov dec mov xor add pop mov sti mov test sbb pop fisubr fstl outsl xchg push cmp out (bad) (bad) (bad) notl cltd xchg sahf pop sub hlt movsl sub movsb rclb xchg mov fdivs or cmpsb (bad) scas andb out and daa pop dec negb rcrb outsb or (bad) (bad) fcmovb (bad) add fcompl mov lcall data16 cmpl push adc cmc mov mov add pop aaa aam inc xor icebp mov div push (bad) cmpsl cmp les xchg jnp xor add (bad) adc xor aas jmp cli mov and adc clc xchg test add jns xlat mov add into loopne jne pop test push in dec subb mov lahf js lea jns insl (bad) xlat inc fucomp jnp push sarb movsl scas xchg push ja dec fnsave nop sti pop lcall in sbb add jnp inc push jp cli add popf (bad) cli pop (bad) ret or cltd loopne stc cmpsl lret outsl inc and jecxz cli push lret mov jae adc inc in into ja (bad) cwtl xchg or inc push jne enter popa repnz (bad) dec lock inc cltd jnp xchg cmp adc pushf push ljmp xchg jg fmull push xchg sarb insb dec dec fcomi sbb xchg fwait cmp add ss out nop add cmp xor cmp cli xor bnd cwtl xlat xchg cmc imul adc xchg inc xchg sbb cmp rcll dec sub repnz mov cmpsl clc pop mov gs jp cmp xchg dec insl ss int (bad) lods mov inc mov jmp shrb cli lods and out xlat jne imul mov daa adc sub pop stos sbb sub add xchg push fs call into enter jbe dec subl mov adc dec (bad) ljmp or jg mov scas cltd cltd repnz sub insl loope addr16 scas aam adc or pop and lret enter rclb mov jecxz pmaxsw xchg out add add sub cmp mov pop mov mov or xchg xchg stos dec clc xchg (bad) ret lret xchg les dec mov cmp dec sub in xchg add mov aam mov mov push jle push loope mov push inc push or jne hlt in stos inc jp inc dec sbb popf cmc lcall push pusha fsub iret and mov aas mov pusha xchg int popf sbb xor cli aas rolb fstps aad ljmp dec mov outsl inc dec dec or je mov sub mov push push jbe mov aaa mov jnp clc mov iret push jp (bad) sbb jmp xchg ja jbe push inc mov nop in out clc jno lret push or jmp sub dec int3 jmp out dec pop fbld (bad) mov xor cltd js cmp call repz popa (bad) out push mov mov cmpsb jge bound scas mov faddp rcr movb jge out push leave xor xor repz mov jno adc loop test test lock jecxz cli mov test cmp insl sub sbb das out dec fistl or add je or dec and jnp mov test and (bad) mov push push gs cmc pop mov bound inc mull out mov jo jp mov sub aaa icebp (bad) outsl pop clc fmull pop pop dec jle pushf repz cmp cld out pop mov mov fsub mull pop scas ret loop jp push mov lea ficoml push inc fsubrp pop cli inc and jle popa push repz jno adc mov int mov test xchg jno cmp pushf push xchg imul cs addr16 lahf or push mov (bad) sbb xchg cltd and adc xchg icebp push les and push imul pop pop pushf jg mov or mov fldt outsb ret daa adc xchg mov cltd cmp popf xor adc out and adc fstpl add inc rorb test cmp pop outsl inc pop add mov adc nop das inc pop push mov imul subps jb iret xchg pop fstp mov inc mov sub fdivl loop inc pusha test xchg sbb sbb xor mov (bad) lret jbe xor dec mov mov in dec sub repz lods push (bad) dec ss mov fs jo mov test es pop sub cmpsb inc xor xor out test adc dec pop popa and sahf clc pop je mov adc mov repnz clc inc adc fist cmpsl lods dec xchg xlat movsb fbstp fdivs push and sbb inc mov mov dec push add and pushf ljmp ljmp pop gs xor inc inc rol js,pn pop loopne pop cmp mov mov mov je lcall scas or push and and xor fnstsw ja repz dec aad pop movsl pop sbb pop mov pop xchg rol (bad) stc jne faddl push cmp test insb (bad) dec daa sar dec aas cmc into and movsl sbb xchg dec jb lcall cmpsl sub int3 sbb repz xor sti add loope aad mov jae jb xor jns cmp movswl mov lcall (bad) xor js into push jmp jnp sarb mov test cmp movsl or sub inc enter imull out loop,pt rclb xchg mov inc add or icebp inc lret jb add xor jp arpl add or add aaa aam hlt xchg out lds push movsl sub inc xchg clc pop mov in push cli sub (bad) push pop clc scas inc lret cmp mov ja test dec sbb xchg push movl push cmp std fs sub adc (bad) xor dec icebp sbb ljmp adc pop nop and adc mov adc jmp mov mov xchg lea xor cmpsb add cmp hlt loopne addl push cmp lock addl push cmp lock pop add aas cmc add cld jg insl add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add into adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb add lock cwtl out (bad) jne rorl xchg addr16 loop dec out test ljmp fstpl fcomps imul icebp pop add test sub cmp in movsl (bad) aas dec and mov jnp sbb dec gs jne cmp loopne (bad) sbb std jae xchg icebp sbb mulb xchg jae mov pop fs scas addr16 data16 mov mov add dec mov fcmovne jl pop xchg loopne mov cmp inc inc mov push ljmp add jae mov out repz and loopne xchg and mov sub enter mov jbe and out arpl popf stos jns lcall add shlb fimul lea cmp pop (bad) pop movsl push dec sub outsl scas sbb (bad) clc cli xor and mov popf or mov add scas test imul jl inc sbb add sub mov test mov xor and mov iret std jbe jns jg sub leave push xor inc mov stc dec dec mov inc xchg dec jecxz je push in pop jl arpl lods mov xchg hlt lret mov adc add insl jmp sbb jle aam push bound xchg sti lds cmpsb dec or (bad) out in or pusha ss xlat pop cmpsl popf dec int jae out out sub lods fcmovnb add mov or jns xchg lock jp sbb scas mov push aaa xchg outsl adc cmovno nop mov mov fisttpl negb pushf dec lds sbb (bad) jae cmpsb repnz out mov jnp mov sub pop mov mov add in lods test pop inc daa ja scas inc lret dec adc sbb mov jle mov inc shlb shr out jge pop nopl subl in stos adc jg lods mov cmp dec inc dec mov hlt push std aaa jecxz dec add and stc ret std stc addr16 imul mov and fisttp cmp and cmc mov call dec rcll es jmp push cmp adc orl mov in pop push pop jb mov inc push jo jo loopne dec test xchg stc xchg out mov xchg push xor add fcmovne cli mov aam add (bad) push dec lret fwait shrb adc pop push (bad) dec xor push lds push inc xchg or mov (bad) clc dec push orl lods sahf cld jecxz xchg xchg xor adc lea fsts aas in jl testb movsb je in fiaddl mov pushl xchg or xchg push pop inc mov arpl mov push dec mov in mov je mov (bad) cmp mov out scas fnstsw inc jle clc add (bad) stc xor inc sbb lods xchg jne add sbb mov ja sbb fidivrl sbb rorb popf dec dec lahf push lds and and add dec xor stc xlat (bad) gs gs (bad) cld dec push out lock scas jge call pop push aad js icebp jl daa push stos (bad) jns cld add loope jp icebp xchg ret inc xchg pop in adc jno or cmp test loopne std scas popf rolb (bad) aam jb dec jmp jle add imul (bad) std sub clc jae and repz aas lcall pop sbb xor pusha adc sbb (bad) jmp sub xchg cwtl aas mov push ficoml test and repz sbbb aaa mov cltd int rol jo pop negb mov xchg inc daa mov lret adc int3 fbld (bad) outsl inc dec push outsl sbb int jo ds std jecxz pop lcall in pop mov mov bound xchg int3 fsubrs (bad) icebp xchg test fs mov (bad) sub jmp fs jns push rolb aam negb mov cmpsb add and std idivl cmp fdiv and movsb mov xchg and mov inc loope mov xchg cmp pop (bad) or lret inc dec outsb shrl adc sub mov sbb mov sahf lea sub out lock xchg notb lahf dec test outsl xchg sbb inc rcl fs in fbld in sbb lods xchg das roll movsb cmpsl pop or loop stos out popf pop cltd add daa or adc pushf jmp idiv cmp fwait cld bound mov into mov sub dec stos in mov leave mov (bad) jb cwtl xor out jge xor data16 add or or pop loopne (bad) xor mov fs leave iret out mov pop xchg jp mov daa mov (bad) out xchg fmull sub sub jecxz jno (bad) loopne fdivl insb insb cmp mov into fmuls mov mov outsb mov movsl xor rclb outsl fistp imul ljmp inc and daa rclb aam xor inc bound jp leave cltd cmc cmovg or cld vcvtdq2pd xchg nop nop mov out aaa pop inc lahf add sub cmpsb icebp insl lods cmp addr16 xchg dec mov bound fdivs pop inc in cmp pushf fisttp nop sbb push (bad) pop push mov mov sbb adc rcl fisttp jl xor (bad) mov bndldx ljmp pop jns or ss aad sub inc pushl loopne jg movsb in shlb sub sub inc in cmp daa sbb jb xlat mov popa in adc mov cmp int3 cmp mov and jne push mov lods mov dec aaa inc fsubrs arpl push mov mov sbb pop movhps outsb dec mov fs pop incb (bad) mov jnp cmp shll outsl mov ja js or (bad) fcomps mov shrl push inc arpl or cmpsl mov xchg cs sub mov dec out imul mov ljmp jbe loopne les add xor sub aam xchg shl nop aad add dec and jns push jb test or mov xor stos xor (bad) lahf mov popl xchg or adc (bad) fild push in daa fldcw dec and in insl lea les mov (bad) sub fnop (bad) (bad) push push aam adc dec test add push lods cwtl xor mov inc cmp rorl xor ret ja div xchg xor fldenv stos xchg sbb int3 cmp and into or mov and jp xor pop movsb sub adc jl popa pop fild sub mov insl mov out mov adc push mov jae cmp repnz icebp xchg sub mov loopne adc pop fucomi adc xor data16 jno lret mov push out aad mov jnp adc pop push xchg fcmovu push enter jb adc push inc out xchg xor mov xor add shr pop (bad) cwtl and add pop jmp (bad) setae mov mov das push dec jo cmc mov insl lea inc inc inc pop ror dec cmp fsubrs adc dec in out cmpsb clc ss mov adc dec lods mov test inc enter mov jns aas push lret dec lret fdivrl arpl mov sbb cli icebp sub mov fmul test iret rcrb icebp mov test leave out sbb and jge pop adc xlat addr16 out (bad) iret xchg inc (bad) push push inc sahf pop pop sub jno and push sbb stc lods sbb push notb aaa inc and dec xlat je add dec adc fmull jno inc inc jecxz neg xchg dec pop repz call jo out in out mov pop test sarl xchg or xchg rorl pusha inc pop les out movsl js lret xchg pop in lahf loopne dec mov pop ss pcmpgtd cmp lahf push inc fwait jne imul lret sahf in adc lret lds adc jge lret xchg or add std inc movsl cli sbb stc pop lret das cwtl xchg inc lods test jnp add (bad) dec cld jns sahf dec dec arpl adc rcll push mov mov test xor cmp cld xchg and (bad) clc stc adc lret out cli (bad) mull nop sub cs mov (bad) mov pop idivb loop cmp xchg push stos lods jle cmpsl sbb cli xchg js mov mov sti mov addr16 leave addr16 aaa mov lret push mov push daa cmc jae in outsb xchg insl pop and in pop bnd mov adc sub add lret repz push fs pop ficoml sub adc sbb cmp pop aad cmpb (bad) lock push into or pop faddl hlt out or es mov pop cld in fwait insb jne mov hlt rol cltd rol fstps aad js out das outsl dec mov test push test std inc mov iret in data16 das dec inc mov mov jmp pop mov sub or adc das fistpl push idiv cmp es pop and pushf jo imull std fisubrl and xchg inc cmpsb mov aad movsb stos aas outsb scas fmuls outsb add jno (bad) xor cmp adc in test ss in dec insl dec mov lds jge daa adc jnp testb pop in dec pop hlt sarb mov rcr clc mov and (bad) mov sub stc mov push lods pusha or sarl shll fs stos leave mov in jb lock jno mov or dec movsl cs cld mov movsb bound mov popf sub push imul lods push cmp add xlat sbb (bad) push xor shrl jp leave int3 dec daa dec rorl jo push nop cld lods jbe push xor rcrl xchg or out ror mov jg cltd out sbb xor cld push xor sub cli repnz dec inc cmp mov push rcll jle rcr cmp stos mov add and adc adc ja sbb popf mov loop (bad) jmp loopne hlt stc sub mov addr16 insb jl outsb out shl sahf pop ljmp push insb test and stc dec (bad) sub mov stos in lcall fisub add test int notl sbb adc xlat push int push ret out rcr xchg sbb jg jns mov shlb cmp xor adc cwtl inc insl pop pop fstpl ret jp dec imul test repz jge les sbb adc mov lock mov jl sub dec (bad) loop jo out pop dec pop and rolb lds pop popa xchg pop or clc in and push into mov add jo int add mov xchg test fildll cmp cld movzwl add mov (bad) mov mov xchg std in enter (bad) mov pop sub insb in dec movsb dec adc out in scas xchg (bad) mov xchg mov cltd hlt inc inc mov sar jl adc inc jp stos daa push aas mov aas pop lret es icebp xor jnp imul inc insb daa cmpsl dec and out sbb das aam mov js clc gs add insl insb xchg ja push sub mov pusha sub xchg loope sub stos and or xchg subl add and xor inc add (bad) je jo lds or add (bad) mov pop mov xchg adc jg push int rorl movsb mov jp test js hlt inc mov fs xor push xchg scas (bad) (bad) ja jne call push negl shrl mov adc jo mov push mov fidivrl jb sahf pop movsl out outsl daa fnop faddl out jbe mov or rcr xor mov sub nop or loope mov jmp dec jp pop cltd pushf out inc adcl xchg push (bad) or inc stos xor mov (bad) (bad) mov movsb leave pop sub cmp mov loop adc push add jle pop jne xchg sbb sahf jp mov call into xor lods aam adc cmc push mov outsb insb aas push mov add out mov push cmp in mov (bad) insb jne cmp daa adc (bad) push pop jns add orl cmpsl icebp mov pop repz popf mov dec dec push cmp inc ret xchg xor negl fstpl push push xlat shrb or (bad) lret ficompl (bad) ja out loopne adc rol xlat test cvtpi2ps test jle pop inc sbb movsb dec jp mov imul push add fdivs cmp aas jmp sub dec scas pop stos jae cmp in mov cmc mov or test rcll jp aas adc icebp mov fwait add mov mov mov divb daa inc dec mov aaa xchg mov xor clc shll dec xchg pop mov stc sti mov inc nop pop cmp mov es loop sub subl adc mov and jb mov dec dec iret jnp pop fldenv or and dec mov push stc sub clc or mov aas nop idivl dec ss mov fistpl icebp cmpb jb dec sbb mov nop pop in add xor negl pop inc mov dec mov xchg lods in mov repz idivb cli or das mov leave (bad) mov jo mov xchg outsb jl cmpsb jmp push add cmp (bad) pop or mov jnp out fnstsw jnp out (bad) incl add pop xchg pushf repz jge add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int3 adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push and jecxz icebp rorl jmp xor cwtl data16 xor (bad) hlt imul (bad) mov jmp sti (bad) sbb repnz (bad) movl (bad) xchg imul js xchg fstps jg push xchg stos jns cmc scas mov jge or je test pop stc xor inc out scas add jo mov jbe push das in jge mov pop pushf add push ret shr push jae insb or loop cltd and in imul ds insb cmp out push into pusha adc movsb outsb popl pop arpl dec outsb (bad) aaa jle cs sahf sub cltd pop sbb loope cmp mov xor in or pop ret pop cmpsb xchg arpl outsl stc roll dec sub and lcall sub xor xor ret xor mov inc xchg adc loop jecxz out rcrl push loope js pop test (bad) fwait repnz loopne jns add add push xchg dec jg or movsb push jno data16 and xor push jge or jle (bad) out xchg lods (bad) fnstsw sbb (bad) fwait insb sub mov pop xor add arpl pop into and and lahf stmxcsr test push insl imulb gs (bad) sti cmp shl xor cmpl adc sti loop dec add xchg pop inc mov or jl cld test dec (bad) jge (bad) mov fnsave xor adc mov push mov sbb scas les dec xor sahf (bad) mov jecxz pop push sbb inc das mov xchg xor mov mov rcl in sub push mov stc (bad) repz adc mov pop gs sub out rorl jle fidivrl xchg cwtl jg push sub (bad) mov adc jns mov inc jno jb mov loopne pop data16 int mov test mov pop rcll stc cwtl mov arpl pop fcoms cmp andl (bad) jmp movsl and inc call jb push lcall stos or jne leave dec sbb mov (bad) xchg adc std mov std dec inc xchg movsb shll pop lahf nop cli ficoml mov cmc inc loopne jnp add sbb inc xchg data16 jns inc jmp mul add xchg out movsb aam adc pop loope inc push arpl cmp mov dec pop nop cmpsb or pop int3 loop sub and push arpl loopne int3 mov cld cs mov xor movsl not cs das inc push add ja int xchg xchg sbb mov lods pop test idivl test pop sahf jbe aad adc mov sub push test mov daa nop pop sub aaa mov (bad) rclb out add cmpsl jecxz push xchg stos stos insb push gs dec leave pop dec mov jp jp pop popa jae dec pop or call cmpsb jp xor in mov scas int shl fidiv jge dec xchg fistpl mov or lahf dec ficoml rorl or cmp jae (bad) or mov fstpl add sahf dec jb xor pop out popf pop call or cmc adc sbb cmpl jns xchg lock xchg or pop sbb decb test sub xchg cli or in out xor in lcall pushf xchg and and fisttp ret fldt mov lock outsb jne ds pop test adc js mov fucomp and add mov push popf ds pop lcall cwtl out cltd mov push and sbb (bad) outsl inc inc in pop aaa inc hlt push (bad) movsl scas in aaa cmp adc xor ret stos scas xchg xchg pop call adc jp mov ret lock push fcomps and jp fnstcw pop jecxz (bad) pop or lock aas inc sbb rclb mov adc lods mov xchg fimul push imul arpl stc jbe fidivl or jns cmc dec mov insb dec fwait clc scas dec popf scas aaa lea dec daa mov cld add imul insl adc push fs stos sub fisttpl pushl push jbe,pt and ficompl cld arpl dec mov (bad) lcall dec enter mov test mov push push push dec cmp sub cs xor rolb cmp imul xor (bad) or xor or lea pop stos ljmp dec cmc jge cmp xchg movsl jecxz loop sub inc arpl inc shrl notl das data16 mov loope pushf xor call sub ja mov leave (bad) inc jns loope add xor adc cwtl push sub sub fnstcw lds iret (bad) out mov lods or pop inc shlb bnd dec in sbb fcoms fldt pop xchg pushf cltd pop ja dec cmp iret fwait aam stos mov stos (bad) cmc lret lock faddl neg mov push inc or cltd jl out lds std pushf fs subl aaa mov xchg in in xchg insl jo add (bad) fldenv pop call (bad) lods fcmovb movb fisubrl lahf lods jae idivb out sti fstps mov je ret or xor sub hlt mov int3 adc loopne mov lods subb mov mov ss leave mov pop stos or mov scas xchg jp or jns xor lods sbb cmp rorl fidiv jmp jp pop jnp test push pop jb dec sbb movsb aas lods sti inc pop mov cmpsl cmpsl pop adc and mov stc dec mov and rcrl iret outsl push cli cmp xor lahf push call cmp movsb aam ljmp sub sub pop inc int and adc xchg cs sub fwait pusha and xchg sub sub and inc test stc shrl in cmp xor jb xchg pop sbb jo jp sar and push push out inc lock rcll imul add sub mov fstpt push das mov pusha jno dec mov jmp out dec jns les scas cli repnz jmp (bad) jnp,pn enter movl ja stc or jbe xor (bad) dec pusha stos mov inc xchg arpl xchg mov sbb add ds repnz cld mov sub inc fstpl pop lds (bad) idivb push popa stos aaa int xchg lcall fisubrl fs pop xchg mov pushf mov cli orl mov mov mov inc mov jmp cli jle insl out xchg stc pop dec in in push (bad) mov aas (bad) vmulpd aaa test stos outsl enter push jmp jb inc sub imul xor stos jl adc push adc divb mov (bad) adc mov mov or mov fmull mov mov pushf mov push xor add sbb mov aam dec jmp mov xlat pop mov dec xlat mov and aas popf sbb inc out ja or xchg mov scas lret ret lcall push lds pop ds insl mov sub inc ret xchg cmp gs add adc jbe aad cmpsb xchg push les loop out pop sbb xchg insl sarb adc clc stos jbe (bad) mov lcall sub and mov in iret push mov addr16 push in push cmp mov sbb add (bad) fdiv xorl das decl cld sub mov inc shrl jnp jge mov xchg add aaa xchg fs mov aad jno aam fwait cs mov pop popa and ds sub mov pop ret fldt pop push mov dec out outsb inc pushf mov and adc imul int3 lahf mov and push js mov (bad) fwait push sbb mov mov xchg fisttp popf out sub js stos or lds ret outsl sbb cld and fisubl addl mov add addb mov notl in aaa je dec jle jne pop cmpsl fwait aad (bad) cmp xor mov popf rorl ljmp pop mov fstps movsb (bad) fisubl push fwait insb and or and mov lret scas aad call pop push push mov into xor mov and dec mov push stc push cmpsb mov fist xorb les test xchg xor cwtl xor sbb mov dec dec mov push cmp xchg push fwait jmp xchg mov js sbb and test inc enter fstps mov mov jb mov cltd loope (bad) adc mov pop xchg inc movaps jb icebp nop cli jns sub xchg vcmppd (bad) std gs xchg pusha sub add in push mov test pusha outsb inc mov stos jne sub add div pop repz sub pop push xchg dec aam into push hlt imul xor movsl fdivrl stos ret scas daa dec iret pusha push jno out and sbb mov and fs roll lea push mov cmpsb int3 je push push fwait pushf lret bound mov pop cmp in pusha iret fist xor pop xchg dec pop mov sbb fsub popf int3 jl sbb xchg lods pop jecxz cwtd jb hlt jne jae sub nop pop mov mov pop aam pusha add xchg cs sbb lock mov orl add cmp push and jmp cmpsb test add cmp js xor jg mov mov stos jp stos add xor xchg in clc js cmp cli cwtl jne,pt (bad) jecxz sub sub adcl leave popf mov in or jmp add outsl movsl fnstsw addl int daa (bad) jle rcr or xor mov fs adc xchg sub cltd cmp push (bad) inc shlb aas stos arpl stos jns shl push stc push loopne sub outsb sti repnz hlt xchg inc les stos and dec int3 dec outsb idivb mov dec mov pop push pop dec sbb lea jmp mov clc ljmp xlat sbb sub sbb out mov test jle pop les and jl add push lods fistpll jp jbe out sbb push pop sub shl repnz mov aas pop adc mov push cmp xchg ret xchg lds sahf inc dec xchg paddsb mov push pop lahf xor xor pop jb and ljmp mov repz repz pop mov repz fsubrs fcmovnbe imul leave cmc sbb or (bad) xor or dec mov ja adc and xchg movntps mov iret ja bound xchg sbb (bad) cmpsl inc add mov (bad) jg fisttpl xlat jbe rcll lcall das jns iret arpl or fwait jbe psraw imul das cli mov test (bad) sahf fidivr enter sbb push pop notl dec push es pushf xchg inc popa push (bad) fwait cmp sbb (bad) das inc test pop imul add sub out pop pusha gs in sub repz movsb jbe test push add mov in push or into scas lock push dec xor or loope push dec or daa inc push sub fbstp fisubl call adc xor or fbld imul pop in aad jle cmpsb (bad) sub add cmp xchg push (bad) stos addr16 sub jle in push fmull cmp inc mov inc push mov mov mov daa xchg cli sar sbb outsb push pop sbb sbb xchg in rorb int3 ss mov fs pop inc movsl inc and fcmovbe fs xchg aaa adc mov sub adc mov fisubl rolb movsl leave mov hlt fimul add jp and sub loopne aam sbb xor sub fdivs loope daa data16 adc test jbe xor add int lock sbb mov cmp adc (bad) push into adc cs and insl cmpsb out (bad) popa jns int3 imul stos pop xchg xchg mov cmp (bad) int push dec jnp mov and dec xor jge test cli popf out enter push test mov addr16 out mov test sahf fistpll add pop je subb test cmp add xor inc dec and cmpsl rclb pop outsb xor xchg or test push cltd jbe mov push lcall daa xchg ss jg cmp and lds shlb xlat sar sub pop and mov adc adc cmpsb sbb pop jmp jo mov cmp aas xchg jmp ljmp xor and and dec inc cmc in jnp jno adc das xlat adc and aaa jmp mov loopne inc pop xor cmp (bad) (bad) je je xchg push mov ret lods lcall repz sub (bad) (bad) stc mov adc xchg jecxz sub pop cld pop sahf clc iret mov (bad) jae adc sbb inc mov push lea cmpsb ror sbb in mov outsb mov sbb call sub jno add int3 out inc sti xchg mov pop push xor movsb in cmpsl lea jne and adc xchg stos mov cmp mov arpl fsts pop es adc test mov lret push sbb (bad) les ds sbb or outsl push jle test dec add cmp in fnstenv jnp in fnstenv out add incb xchg dec call pop cmp dec add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push push xchg andl cmp pop imul add out out out xchg outsb and push jmp out mov push scas mov push add or (bad) cmp fist fs xchg scas push jbe pop lock les addr16 ja and leave lock push cmp xor dec pusha insb cltd mov sbb fsubs cmp push xchg ja mov xchg push lock divw xchg mov adc mov mov inc loope pop cmp je (bad) int sub loop xor add xchg inc std std pop cmp insb sbb fnop (bad) push lods or xchg (bad) and push pop movsl adc xor aam cwtl push jl insl add ret scas aad imul movsl mov movsb dec xchg imul pop or add mov add and mov rcrb push cli movsl pop mov mov lahf mov xchg movb pop (bad) (bad) add mov mov adc aas mov cmc push call test cmp dec sbb rol sti xor sbb mov stc jecxz imul push jo cmp jmp pop cmp fcoms mov mov fmull (bad) or ds (bad) lds ljmp outsl movsl fcompl sub (bad) fidivrl mov aaa popa pop psubq orl lods shr xchg and addr16 mov or cmc ss imul sbb repz fdivl stos dec scas mov dec push mov jl jl pop icebp je xchg add idivl (bad) or mov nop ret xor dec (bad) ss or jecxz pop test cmovle sub mov dec jmp imul sbb cmc dec stos out inc hlt push inc mov ds cwtl jae push push xchg test add and es push mov mov mov icebp out dec push imul test or aaa push sbb mov or popf inc and das mov notl les cmc jp inc (bad) rcrl inc orl mov inc pusha mov push pop push inc jle jle outsl xchg shrb lret push push cwtl push jbe sub push xchg ja and inc arpl and orb fs pop mov (bad) stos loopne fisubr pop mov push cmp cwtl jbe cmp pop jmp jl ret dec jle push ret dec jle cltd pop test jmp dec ljmp mov xchg lahf sbbb rolb and cli mov mov pop dec ja sbb push inc push pushf and sbb cmp jo bnd ljmp jecxz xchg js nop adc jmp (bad) aas imul and fldenv or xor sub ljmp stc push xor in daa (bad) lret jb mov insb dec mov je jne jns shrb or pop mov mov push push jae xchg mov frstor (bad) orb pop xchg into cli scas mov mov dec xor ja mov push nop adc sub pop cmp mov sbb dec popf push in (bad) fsubs notl int insb (bad) mov pop out je stc fucomi repnz stc jp pop lahf jno loope sub bound jp xchg sub sar jns inc or sub jns mov leave sub ret push adc ss pop imul jmp repnz mov das imul adc fsts dec add pop dec mov enter sbb (bad) pop inc xor addr16 gs or lods jo xor imul outsl jle push cmp dec xor ret das call or subb or mov aad call xor pop pop out icebp mov fcmovnbe inc scas in inc test loop inc (bad) mov int inc mov push fisttp bound lahf add mov dec nop adc add mov dec sbb mov pop jns cli inc jecxz fiaddl (bad) jle (bad) fimull mov adc ja bound xchg lods pop mov or leave sbb dec sub stc pop outsb pop icebp push sub scas imulb fdivp inc sub lea std das mov pop inc sbb cltd sahf and pop ja or push mov inc jne adc roll dec xlat in aad and cmp insb mov (bad) sub in jmp cmc clc (bad) nop mov push and and es dec hlt cli add test pop repz fist adc jmp mov jmp and repnz movsb cmc pop daa dec mov mov imul insl mov mov idivl xchg out cwtl popf dec stos dec (bad) mov test leave inc repz sub sbb mov mov (bad) fsubp cwtl mov mov andb rcrb push xchg es mov aam xchg sub add repnz mov (bad) sbb add je push fcompl sti dec mov mov jg out xchg dec daa mov cmp xchg mov pop add mov test mov xchg fstpl or cmp inc popf (bad) popf dec pop push mov adc out stos dec fisttp mov sti jge jne cmp movb sti dec dec or rorl in sbb or mov mov js cmp push lock gs or sarb mov imul fs sti dec xchg dec xlat cmp pop in pop cmp fildl mov adc mov xchg lahf test mov sbb shl bswap jnp jne test cli mov stos hlt fwait jb les or ds shrl and mov or mov in pop sbb in loope cmp pushf in sbb push sub cmp movsl bnd push mov jb movsl xchg jb rcrl fs xor outsl bound test inc mov push jb and fnop and sub movsb ss out sahf or bound js xor and xchg jne or sub and js into push arpl mov leave rorl imull push fidiv (bad) mov adc test mov add push push xchg gs lret fiadd mov or mov ljmp push push or cmc dec mov int in sahf pushf andl and and loope inc stos (bad) adc jb jbe lahf pusha dec inc lret int sbb and xlat xor test mov aam fcoml (bad) cmp aas mov scas shr sub out sub out in ss xchg (bad) jp cs fidivr cltd sbb imul jg adc mov stc xor (bad) (bad) mov push clc insl lea (bad) mov lods int (bad) fimull rolb fbstp sbb mov push pop movsb xchg imul (bad) sub (bad) enter addr16 in jns idiv jecxz out aaa add and int jno inc test cmp ljmp pusha pop mov jno push inc or (bad) or sbb inc aaa lods loopne push bnd xchg pop cmp pusha aaa pop aas mov (bad) repnz repnz mov mov cmp js mov or in jae cmp movsl push inc push mov in xchg xor jbe aam sub imul movsb add mov cmp inc jle xchg cmp scas aas and icebp cmpsb (bad) xchg push mov or out cmp adc jmp les lret aad loope mov add sub lahf faddl dec aam ljmp lock in cli ds js lahf je dec jae xchg jg cmc sbb pop fbld in sbb out fs mov cld cld xchg adc mov mov cmp aas (bad) xor xor sub mov inc or mov or adc mov jae icebp cmp rcll adc into (bad) sbb mov pop add xchg in mov pop inc adc adc lret dec pushf mov add ret inc sub or ja mov (bad) or dec dec out adc arpl mov out and mov adc pop ja jne xchg add mov call fcmovnu cmp jge (bad) jl add out aas pop cmpsb mov or mov jns fst negl loopne jge ljmp dec popa ja and mov inc enter sub rclb push mov ljmp jmp xor jns or pop mov clc ja mov cmp xor fild (bad) adc mov and scas jmp dec mov xor pop jmp test aaa jge js jg enter jnp test or adc sbb mov mov dec xor mov fs je dec add xchg pop (bad) xor xlat adc push and sbb xor pop jno sub sbb shr jb xchg and adc stos xor xchg mov rcrb push mov sub inc pop pusha inc and adc test dec jge movsb test lret divl and jb loop out pop push xchg lahf push xor test xchg mov mov jne stc cmp stos je insb add add mov stos pushf sbb mov (bad) negl cld jns mov sti xlat push jno dec pop mov sti lret divl or sub stc cmpl in lcall lcall mov inc shrl pop js pop xor mov in test adc lahf ljmp daa pop rorl aam push push pop (bad) imul cli xor pop out mov add nop adc adcb mov cmpsl dec int3 push push fldl test shll xor insl push cmp add pop mov jp iret pop mov lds push dec imul insb call (bad) call push imul mov daa xchg lds out push in push test sbb add fldcw rcrl or mov xchg mov xor jge es cmp enter in loop push and loope dec push lds sub andb jne inc (bad) xchg aam cmpb and sub fsubrs cmp iret std mov mov es pop jmp ds iret in enter (bad) imull in clc cli mov xlat popf and test pushf push mov sub jnp ljmp inc arpl inc stos jb icebp cmpsb inc push pushf js mov mov jp push aaa fnop mov jg,pn push iret in repz dec mov add arpl in movsb jnp lahf push pop mov prefetch dec sbb add cmp jge daa xor scas (bad) push int3 dec imul cmpsb dec jnp test jmp xor stos mov cmp in test sub stc ja or pop je fs push out xor add shlb pushf jnp (bad) in and cld add bound lods out loop lret int3 test movsl rcrl add adc fildll sub negb mov ljmp psllw push push dec (bad) out aad subl cs mov loopne test mov push scas or add inc aaa in mov mov (bad) out (bad) lahf das mov imul (bad) sbb imul mov call imul pop jmp pop roll lods and aad push cmp push popf jg fsubl (bad) cmc jae popl cs sub and mov movb cmpsb inc popa fldcw jle mov dec loopne sti cwtl ds xchg xor leave dec push and insl (bad) xchg and xchg mov mov cmpsb mov jbe push lds mov outsb pop dec fwait mov fdiv (bad) movsb and cmpsl fdivrl pop jecxz lock push fmuls int3 inc or lret dec mov imul pop scas dec mov popa mov sbb sbb repnz cmovno (bad) xor fs xchg cmp and popf shr addr16 out enter push mul inc mov cmp in std add xchg shrb xchg lahf rclb mov and fbld test xchg adc fildl ss repnz push test out pusha jnp xor mov mov (bad) xor xor repnz clc and cmpsl lea add push cwtl cld xchg xor imul ret inc or xchg daa and leave cmp cs mov xchg push bound mov jp out add clc ljmp out aaa scas faddl mov cmpsl aad pushf out iret mov add dec test test pusha xor mov fdivrl adc mov imul movsb fsubl enter pop lods cmp sbb xchg (bad) repz mov push cltd and gs data16 mov aad pushf lcall xchg cltd notl fs daa add std fbstp and leave loope jns (bad) push push push int3 ret scas popa or push icebp mov inc mov lods jl mov out loopne jnp mov mov lahf (bad) pop mov mov xor jae repnz ja fnstenv cmp pop int3 jmp adc dec scas push popa pusha repz lret jne push aas mov ljmp stos lea ljmp call daa int3 cmc fstpl bound xchg cmp in (bad) xor jb (bad) test inc cwtl ss pop addr16 mov inc push jnp inc pop in data16 mov sub jge scas jle mov cltd insl inc fmulp mov bound orl ret or sbb out add fs pushf push or sbb rcr jno mov sub dec sub nop stos add aaa (bad) movsl loopne pop andl cmpsb mov sbb inc xor xchg shl push and or lret shrb in mov das daa popf out mov clc out push stc stos inc xor cld xor (bad) shll dec (bad) jne (bad) fstpt in mov aam pusha aaa push loopne imul das pop mov mov das pop mov mov (bad) cmp loopne add jg int add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc or push and scas add pop mov jmp nop xchg out dec jmp stc sbb pop add sahf add fildll dec lods out cmp sti negb inc xchg sbb xchg and out add cwtl xlat xchg dec js mov add xchg mov out and enter movsl cmpsb movntq jl xor lcall (bad) jmp cmp push (bad) jl popa popa loop sub sub pop push dec inc xlat pop inc xchg mov pop pop std sar cmp sbb lahf nop test mov jb sbb rcrb sub (bad) or xor (bad) sbb push inc test out sub bound pop cltd or or adcl ss and in ss in movl into or mov cmp pop add pop cmp cltd xor ss pop pop ds cld mov mov aas loop xor and repnz (bad) and jns les xchg and arpl imul jbe js jno fwait push jnp arpl lock jle outsb mov mov dec push outsl xlat ret stc popa out js loope sbbl and mov mov push outsb scas mov in mov (bad) xor (bad) out cs xchg xchg sbb popf and sbb adcl sub dec aad inc cmp or lcall jge les xor inc mov or jns pushf loopne or lret pop (bad) inc inc and mov or mov (bad) mov ret idivb inc xor popa lcall jle xchg and xor add dec cltd test and push fmulp jle daa jg sub cli sub or mov ja (bad) sbb add mov mov rcrl mov xor sarl push mov sub clc mov pop mov dec or pop cmpsb ja adc sub jne aaa xchg jle (bad) rolb and mov jno add jae mov pop test testb gs xchg aad ds inc push mov fsubrs pop arpl aad (bad) lcall (bad) stos int ljmp dec frndint les cmp test enter jge mov cmp push xchg add push sub mov ljmp push scas cmp push and cmp xchg test sub dec jge shlb cmpsb xor stc cmp imul adcl pop lahf mov fsubrs pop xchg mov cmc iret aaa push and cmp or mov (bad) xor lahf es daa fldcw lret pop mov insb xor adc aad repnz jne xor mov lret push std test fmuls ds mov (bad) xor dec (bad) pushf push sbb ret push push call xchg aaa and das aad loopne pop adc fldenv and or (bad) and scas sub mov cmp mov inc xchg fdivrl and or push ljmp fdivrl jmp (bad) xchg adc push mov cmp or (bad) mov loopne pop jecxz shll dec stos ret mov out xlat popa mov shl std dec bound and inc xchg mov jo aaa mov mov and nopl adc dec jl pop movl ffreep int3 dec and dec repnz cmp xor sbb inc and mov (bad) pop add insb gs fwait lahf fisubl xlat lods inc enter idivl insl (bad) stos jae jnp lock inc imul call push dec sub push lock icebp mov in enter add add jns push cmp dec mov xchg sbb cmpsl movsb adc (bad) mov aaa and mov jne jg leave flds sub jo jo cmpsb pop push pop jnp ss fcompl lret lret and push cmpsb aaa lret (bad) cmp xor push das es pop pop das fucomp xchg stos mov imul lods dec lret add mov nop test pusha push and inc jbe pop xor dec pop ret sahf imulb xchg jge cmp or dec jl,pn scas hlt pop ds xchg rcr outsb in lds pop cmp les cmpsb loop fld or mov pop lea xchg mov jmp andl and test inc ret loope out adc fisubrl (bad) xchg out jb dec sub cs adc imulb sub cltd mov xchg xchg xchg xchg fs fistpll mov aad shll andb lods ljmp mov imul add add call or adc xchg rcl dec imul jmp decb inc mov out adc mov pop jl in xchg cmp std mov pop mov (bad) es aad cmp pop dec int cmp call or dec or insl stos enter sub cld mov dec test arpl dec cmc (bad) mov pusha sub inc and fwait and std mov mov adc xor jno in push cmp add cs xchg jp push mov nop cli xor fisttpll sub pop mov inc in xor movsl jg and inc leave mov mov sbb je xchg arpl bound in mov sub gs push rol mov adc cmp sub and fs push loopne jns js adc adc les mov enter xor jl cwtl mov xor fsts faddl (bad) xchg fmuls mov push jle ja mov push cmpsb test imul inc out cld cmp jg cmp fisttp aam dec data16 jp mov and enter mov fs roll in shrl pop xor mov cmpsl xchg inc js inc inc push cmp andl std stos hlt push sub inc lret or call inc (bad) (bad) jecxz jno imul jbe jnp rcrb dec imul (bad) inc jge mov xchg jecxz mov rol out jmp jno push mov mov pop jg xor (bad) adc subl mov dec sub push sbb xor test out push or xchg mov push out push mov aam add pop in xor push sbb mov cmpsb or xor add out or inc or add test outsl push lods sbb pusha fcomps inc fiadd cmp mov jecxz push push aad aaa mov lret (bad) mov xchg rcr sbb andl jae aaa fwait fs iret xchg fcoms sbb xor mov jns sub mov push fstl js int stos sbb lret sub (bad) mov xor fdivrl xchg xor lock or or sbb xchg packuswb ljmp cs push daa pop test (bad) jno push or cwtl push shrl sbb bound pop jne mov cmc push sub or push es mov xor scas inc daa adc dec imul stos sbb ljmp fs outsl pushf es nopl arpl rol test pop jp (bad) (bad) xchg popa or or lahf or ja add test iret ds and loopne inc int3 scas xchg (bad) pushl push and and inc jae les dec shrl xorl lahf push add je mov mov inc push sub fidiv arpl sbb cmc es loopne rclb push adc loop pushf mov leave mov aaa out cmpb add call addr16 xchg jbe (bad) iret xchg pmaddwd lcall xor xchg fisttpl cmp push jnp jmp rorl sbbl rcl xchg and std adc std ret dec loope sub inc inc pop into in addr16 xor hlt push adc test imul into xor arpl and sbb sub fwait mov hlt arpl fdivrs jne cmp add cmp aad mov aad lock and dec imul adc push daa dec scas jmp repnz (bad) (bad) dec ds in pop cltd ja xchg cs loope inc cs loop (bad) xor fsubrs dec jnp por mov das call data16 mov xor sbb bound scas stc imul push lock aam jg xchg and push js rcll ljmp insl or jbe dec or (bad) negb arpl popa cmp dec repz inc dec mov inc lods xchg scas dec (bad) in adc out push stos xor mov lds (bad) and sbb repnz dec mov jno rclb mov push push dec pop mov cmc sar lods pop adc lods popf mov mov xlat sbb cmpsl scas dec cwtl mov out jnp adc jp cmpsb pop push pop fs mov in mov jg out ds inc sub aas (bad) gs mov pop cli xchg cmp jbe stos shl subl mov addr16 idiv inc mov mov adc ret (bad) dec push orl ret jo push add adc xor sub xchg sub mov ret cmp mov pop lcall dec mov xchg andb aad adc xor sbb push jg,pn lds sar popf hlt xor sbb xor mov lea sbb addr16 jb xor cld (bad) and jle mulb adc xchg push sub aam icebp jae sub call ja xchg cmp cmp (bad) pushf and loopne js scas or lahf sub insl mov lcall neg sbb adc imul cmp fucom xor push adc sti stc jge xchg sbb sub ja movsb xor out adc mov data16 test pop push cmpsb imul jne mov or xor repz mov pop ret fisubrl mov xor xlat ljmp push hlt adc pop xor add add (bad) xor xor movsl mov or pop fdivs sub aam xor pop sub dec stc mov inc pushf lea (bad) mov mov out stos adc pop orb sub outsb std push xchg mov push subl and jae (bad) (bad) mov rolb les inc lods sbb insl imul hlt mov out pop inc push add add scas dec fstpt mov and inc lds in jns jns in xchg adc es mov pop mov pop cmp inc lea sbb pop adc mov or (bad) aam loop insl popa je fsts icebp scas push lods pop push out fs dec mov push lahf incl or (bad) mov cmp inc clc sarb insb pop inc stos cmp pop insl mov mov push mov popa xchg add mov (bad) and aaa lcall jne mov test jmp cmp (bad) push decl out mov mov jle xchg dec add lods dec js cltd cld mov mov cwtl enter pop iret inc rcrl jne shrb and add bound xchg sub sub in push sub pushf cwtl jns les mov fnsave addr16 aas pop jb addr16 jmp subl aad pop dec (bad) cmp and rcrl pushf test xchg xor push pop dec lea test xlat cmp sub mov push cld jne fisttp mov dec sub in cmp (bad) mov mov cmpsb sbb data16 sbb mov lcall call rcl mov leave lret test dec clc lcall fwait aad inc mov aad xchg lea stos dec popa xchg mov sub mov js data16 push mov and xchg adc shr sbb xchg out popa mov push icebp pusha sub andnps push adc mov iret aas cmp push sbb fsts fwait (bad) xchg and xor sbb rolb push insb out xchg mov inc (bad) je inc rcll outsl or repnz stos lods push mov scas aad lcall sbb iret gs or sub jge pop cmp sti add leave popa push outsb mov push inc rorb addr16 movsl mov aas mov test pusha scas (bad) push dec pop inc xlat stc fidivr sub orl xchg pop dec jmp in dec jecxz xchg push mov test int mov mov mov mov push inc add xor jb (bad) int3 mov adc or (bad) lahf mov lods fs sbb inc jnp add imul jmp push ss sub mov pop sub and fs call lods jne in mov pushl scas std mov loop das neg jmp jnp daa ljmp adc fdivr sub sub aaa out dec sbb mov data16 (bad) out in xorl cmp sbb jmp test int3 cmp ss and out add adc or mov cmpsl sbb jmp pop jno icebp (bad) jl (bad) adc pop test (bad) ficoml lahf pop cmp rcrl xchg mov ja loop (bad) jno lds (bad) fmull rorl fwait xor cs inc loop push nop icebp out sub (bad) jle inc push dec (bad) jmp inc add loop sub add sbb xchg cmp mov loope pop (bad) jle lds arpl mov jg mov jge sbb and sbb push dec or mov push out es adc leave inc xchg sbb divl pop jecxz mov (bad) lods roll sub dec idivb push scas pop mov stos push scas pop mov decl add aas jmp mov add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push push xchg or xchg xchg cs sbb adc push jmp mov nop inc imul out fcmovnu cmp icebp scas cmc add ficomp lock mov jg jg xchg (bad) hlt mov lcall iret (bad) mov lds in inc lahf jo jb adc mov or mov loope sub lods xor push xchg arpl stos sbb cmpsl jmp inc xor jle out idiv inc loop stos cmpsl (bad) scas movsl les add xchg (bad) divb push loope jb xor outsb jns fisttpl lods xchg push imul fwait dec arpl test in jge jne xor aad stc cmp mov popf cmp ret xor fcomp repnz outsl push xchg fdivp gs sbb fidivrl xchg xor ret iret sub mov xchg xchg mov int3 mov or cmp or loope xor pop push adc aad fnstsw jbe mov xchg (bad) fdivrs mov sub xchg icebp pushf out sbb adc sub sbbl ret adc hlt adc adc dec sbb cltd popa mov mov inc or jae mov pushf gs in ret or mov scas push ss jle andl imul mov rcll pushl (bad) rcr loope xchg (bad) xor mov cmp jae mov (bad) sub add outsb out shlb fwait xchg xchg push leave mov pop ror mov and arpl ret stc idivb js stos inc mov roll das push mov ja inc pop test and and xor inc inc out stos add rclb clc fs leave xor fistp xor popf test xor jecxz mov adcl or loopne sahf scas std int and fisubr (bad) (bad) sub jae sbb dec adc adc add mov and xor dec dec xchg dec or sub sbb in mov mov es push shl push sar hlt sub mulb mov pushf int cld xor (bad) adc out lds mov leave add xchg stos push enter sbb xchg jge mov sarb rorb pop add stc test (bad) in clc lock sbb mov sbb lahf fwait lea adc jae push js fcmove les repnz stos jae adc or jmp movsl insl pop xchg jg stos mov lods out imull mov jae cld xchg (bad) aas idivl je pop adc xor outsl push lods insb mov adc jmp dec mov into sub or adc mov (bad) js xchg iret push fwait movsl (bad) rcr loop test mov xchg adc fst dec aaa mov lods ret das inc pop lret jo or push push int3 sti (bad) (bad) lret inc lock jecxz mov ror cli push and scas inc jmp shrl push inc mov cmp repz mov lahf test in aad adc in or scas repnz sub push cmp pop jns adc (bad) shlb mov xchg push out cld pop jne into mov ret das mov arpl inc cmpsl mov fstpt mov je add loopne mov ja shrl repnz cs sbb xchg std sti mov dec mov mov inc cmpsb jp dec in xchg out push inc enter in sti lret dec xchg leave mov xor push lahf xor jg dec inc jno xor push jg,pt jp (bad) jae or mov pop out sbb fs pop sbbb in (bad) or xchg lods jle shr xrelease inc fstpl scas xchg pusha popf pop xor pop imul sub popa jno lahf stos ret jne cmpsl inc pop stos int pusha shrl mov mov xchg icebp lods mov push ljmp push jecxz ss dec lock nop insb out lret mov arpl decl xchg rcr dec push and lea pop imul inc (bad) outsl outsl mov ret sbb mov xchg xor push push mov sbb ja (bad) sti outsl jle sahf xlat pushf add iret cmc mov hlt cwtl fs insl xor jecxz,pt xlat cs xor lods js sub push adc hlt push imul fst sahf mov scas xor fcomip jge pop cmp and xchg jecxz xor adc inc and jnp mov sbb or adc mov out decl popf clc pop mov loop les and out in push aam sub fisttpll movsl dec (bad) xchg lret or fnstenv out inc push and inc in cmp and adc in cmpl je pop lock xchg mov (bad) jl mov ja loopne mov mov jl push push js call outsb mov cld push mov in mov pop mov or cmp scas jg adc sub out mov xlat jnp cmp push cmp rclb adc sub mov xor inc mov rcrl mov jae cltd pop enter aam lret out and pop adc jno outsb shr rcrl testb hlt std pop inc jb not ljmp mov js or cmp (bad) sahf jbe or push inc and lahf inc inc push xor jle lods in loop test loope mov and popf (bad) xor test cmc lret mov add add mov jle jno or (bad) mov jns aaa (bad) mov imul push push push inc mov jge rclb xor loopne inc out jmp imul lods jo push mov push sarl mov (bad) fnstcw jbe ret inc jmp mov and and xor ret adc pop add lcall pop pusha sub repnz test and addr16 clc pusha lret shr stos cmp daa mov add lcall lods gs and out mov bound loop leave dec cld xchg mov xchg jmp sti jb inc cmp mov fwait cmp mov jne jmp xchg xchg lods pmaxub cli pop insb int fdivl in xchg lcall push cmp (bad) cld in ljmp neg mov mov sub inc mov in mov icebp adc add les or imul gs add dec call push iret decl lahf lea shlb lods lret mov fldt add adc (bad) in cmpsb hlt mov adc cmpsb in cmp aas cwtl notb addr16 rolb mov mov repnz popa mov cld ljmp nop push inc mov mov mov imul popf mov rolb push js andb xchg jns fcompl jg (bad) mov aas repz jecxz std in jge dec push inc shrb push scas nop in push aam leave (bad) (bad) lds fs mov pop jmp stc andb cmp ss dec mov addr16 fdivr mov lahf andl mov ficoml xchg mov push adc fmuls outsb testb xchg movsl cltd xchg loop push inc negb push lahf mov inc mov aas sub fsubs mov les jbe pop test sarl sbb mov call mov xchg push repnz mov cmp cli mov scas fsts mov add ds xchg cmc sbb jmp popl adc pushf repnz adc int xchg cs in insb inc movsl ss xor outsl xor pop sbbb dec cmp mov imul mov push push clc adc repnz lods and adc aad jmp sbb aam aaa mov mov pop mov pop mov mul add rcrb and ds (bad) mov push dec pop inc addr16 dec xchg inc fdivr std xor and fbld push (bad) sbb shlb mov jmp jmp mov (bad) icebp or das je hlt sub sbb test cs dec in mov pop popf js enter orl mov cld sub xchg insb cltd add cmp subb jp rorb ret in or mov idivl mov add out jle pop jo xor loope push test ja loopnew (bad) in sbb sti in lock push push mov lret inc xlat test mov in jno mov aas xchg cmpsl in push mov mov in (bad) jp mov mov (bad) mov daa (bad) add mov fwait sbb push jmp inc (bad) lahf loope in adc jae ds push in xchg cmpsl adc aaa jle mov xor jae outsl loope in ret dec scas cmp dec rorl movsl inc fidiv js inc xchg out inc dec xlat unpckhps dec and mov les aaa xor movsl loopne pop test push push out pop scas cmp push mov lds mov mov jecxz push iret scas int push bound pop out inc insb push cld loop cmc out mov imul adc fdivl popf stos mov lods insl call xchg jbe gs mov adc ret inc or (bad) sub aas cmpsl mov rorb add mov addr16 pop lcall sbb scas pop cmp sbb push or mov (bad) leave add (bad) lahf mov jge adc imul mov cmpsl ss (bad) notl adc cli sub sub sub push pop (bad) cmc enter inc fmul test out adc xchg mov sbb mov push lahf popf in pop xchg (bad) mov jnp sub pusha cmp arpl mov pushf add dec ret (bad) dec pop test cmp inc jmp dec fisttp adc mov jnp movsb test cli icebp or and mov jmp popa (bad) mov dec dec xor repnz push and add jbe adc lahf aas push cltd ffree repz push and outsl cli and xor xor fistp call mov ret cli mov push ds pop jb lds sbb or jo lret pop xchg jp das ficoml mov cmp mov loope movl fmull jnp mov push int3 mov or ljmp jp jo outsb (bad) scas mov rol adc sub mov fcoms sub jae mov into and test imul adc jne mov jp jns (bad) mov jae insb incb adc jbe xchg arpl pop cld gs or or pop mov jecxz mov cmp jge inc iretw stos mov dec test sbb lcall and jge mov lret int loop sub movsb jae jbe clc aas mov mov divb roll std xchg rcl xchg xchg movsb jae scas iret out jbe jnp fisttpl xchg ror lret jecxz pusha (bad) push push ljmp loopne jecxz mov push jbe lret push inc xor fdiv pop and ljmp mov pop lods pop (bad) or push call cmp imul jae xor cmpsb inc andl das sahf push jp stos enter push inc pop push xchg or mov aad xchg (bad) xchg xchg rcrb repz sbb dec shl cmpsl int test ret test (bad) out ja iret je imul scas add imul cli mov mov mov adc pop jmp sbb iret mov mov xor pop lods ds or push jle fisub add leave std pop popf push xchg mov sub jae sahf lock pop les (bad) into mov or outsb pop dec inc dec js lods imul inc pop xor test add outsl push fs mov xor inc xor neg ds or mov rorb sti imul jmp movsb and cmp iret hlt or (bad) mov int3 xor lret pop inc cmp dec adc add nop out dec outsb jle loop jecxz mov pop into inc sbb sarl (bad) mov (bad) xchg cli and dec push lret and mov and repnz scas dec (bad) call (bad) sbb lock scas int lock mov (bad) data16 add enter dec out (bad) adc or xchg scas dec dec addr16 in sarb xchg in stc popa imul cmp movsb mov and pop push mov add std aas lea bound cmp add (bad) sti repnz insb sbb add popa xchg pop test call adc into mov add sub lret inc pop mulb mov out push lahf enter xor add sti cmc pop mov jo xchg pop mov lods mov mov push cmp sub push cmpsb mov add and loopne cld in testl sbb mov ss mov loopne jl and jne sub aam lret ret dec sti mov test or sbb lds mov call std xor and es inc mov mov aaa arpl adc je cmp imul fwait loopne dec fnstsw mov or adc aam data16 push xor cld push mov sbb sahf movsl aad fnstcw jge push xchg imul and in icebp mov cwtl clc leave sti pop mov (bad) and add push push inc push leave incl lods (bad) cmc add std test (bad) mov and dec xchg std sbb push lret and insl outsb pop jp mov imul movsl imul mov mov negb imul xchg ret movsl push insl push mov repnz jae pop or fwait test es je sbb sub fs and xchg sahf sub js xor lcall pusha xchg push test or scas pop mov jmp xorl sbb jp ljmp jp ljmp add or sbb add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int3 adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas fmull rolb lahf out jmp cmp pushf fdivl ja fnsave jmp jp jecxz dec (bad) aam mov push iret out faddp jecxz xor cld scas add mov fdivr lds fsubrl cmp xchg cmpsl mov push mov jmp loop dec cmpsl cmc int mov dec xor sub jmp shrl nop pavgw sahf inc sub mov lods dec lods pop push movl lods mov push adc decb mov jo mov mov mov xchg dec push dec sarl mov and cmpsl sub jnp mov jge or jns mov les and jae data16 adc jb add fdivr mov gs xor xchg lret lret mov xchg out sbb adc dec dec sbb xor xchg adc btr cmp xchg sbb jg mulb mov aad sti and repnz sbb lret clc lods mov adc data16 dec lods (bad) cmpsb jecxz sbbl or adc (bad) outsl cmpsb pop lret push loop out add sub sarb fadd add push std sbb fildll pop jno jp mov std (bad) icebp mov inc aas jmp std (bad) stc iret sub jns or mov hlt sbb dec push addr16 xor dec rcr (bad) je xor and imul dec outsl outsb test out test and push lea icebp popa lods movsl xchg ret test outsb out jg jle sub pop push add lret in call fwait insb fs cmp rorl pusha push xor sbb sbb xor sbb mov fdivr call call sbb aam fisub or inc cmpl inc (bad) sub adc pop outsl adc sub xor pop in aas and jns cmp lcall pop (bad) sub add sbb adc data16 push clc mov (bad) lret inc data16 adc push cmp repnz neg repz out sub stos shrl popf push push ss mov adc pop jo shrb dec sbb lea mov push jl outsb sub loop xchg sbb jecxz or out dec imul mov loop adc into mov bound jno xor cmp icebp clc daa cli rcrl dec sbb sub mov es xchg xlat popa pop xor dec enter ds and ss repz test sarl pop cwtl sub mov dec dec jmp mov addr16 ja dec pop sahf jg jp std les cltd inc jge stc xor ljmp clc inc mov xor jns ret pop js scas popa lods lret lret xchg lret push xchg aas (bad) cltd jp jmp test sub xchg repnz and enter mov pop inc and push (bad) xor mov lcall divl push push cmp mov mov ja xchg lret mov cmp sbb ja inc (bad) test sbb mov lahf pop test sub (bad) add mov shrl push test (bad) mov arpl out dec sbb cmc adc fldt xchg js cmp or ficomp cmc js mov in push movsb pop roll popa push and imul aam mov (bad) mov sbb xchg inc sbb fs lea es push pop fistl repz push jle and movsl lods das stos lea test mov or out pop lods daa shlb insl vpcmpeqb jge hlt in sub fldl icebp les inc scas mov (bad) loopne sbb mov jl fisttpl divl scas mulps push or jnp add or or out (bad) int3 mov pop inc adc fistl insl mov ret adc imul iret push mov cld cmp repnz push js lods cs sub fimull or scas cmp mov ret loopne shl movsbl int movsb and lds xchg fcompl pushw pop mov adc sahf les sub (bad) jmp fldt test or (bad) lock jmp cli push jle enter int lahf in mov dec clc and pop jge mov fdivs pop xchg dec xor lcall cli push stc in or cmp lea mov stos popa dec xchg daa (bad) xor enter stos lahf pop sbb mov dec decb jp mov mov inc mov (bad) jns inc mov xchg cmpb cmpsl out jl push out sub mov pusha dec xchg sbb push rclb nop loop mov pop jne (bad) pop cwtl add lock sub test fidiv mov mov lret push and ljmp mov xchg dec mov dec in outsl push jno movsl outsl fimull and push mov sub lds sti add and iret xchg bound sbb and xchg in (bad) test mull pop ljmp addl pop xor adc (bad) icebp sbb xchg push idiv xor fsubs xor fnstsw call and leave test das xor xchg mov fwait adc das xor jge clc sbb jns aam addl push jns inc cmp mov rcr and xor fs mov push stos insb in xchg jge and xchg sub sub test in xor lahf inc popl movb jbe xchg icebp sarb out cs pop mov mov or mov cli test jp (bad) int xor cli lret xchg xor repz int3 jmp stos enter sbb int3 lcall mov loope mov (bad) fistpl jo push mov push push push sahf dec in xchg in mov jnp sti mov or push jle in in mov (bad) pop into jmp xacquire add sub bound sub cmp push mov inc jecxz out loope out cli aad fs negl or inc lahf hlt sbb mov divb jle nop loopne into and pop xor rcrl fistp in in loopne das pop sub xchg lods shlb (bad) stos sub inc cltd fisttp imul push mov hlt push aam cmp test daa into in lea lods mov jnp sub loop xchg inc das xchg call push push cmpsb lahf pushf dec pop out out testl stos or fwait ret cltd adc repnz arpl das lcall int ds and aas (bad) lods or xor dec jle mov ffree add inc jbe sbb xchg adc daa call ja lds cld mov pop push (bad) (bad) stc jl mov push mov xchg cmp adc lds inc mov pop cmpsb push fist dec (bad) cmp pop daa icebp inc nop inc mov imul or fstps (bad) jge movsb pop cmpsl xlat mov imul enter xchg inc mov xchg (bad) ja cltd push lret adc jns lds pop push cmp xchg add dec and cmp (bad) mov jae sbb xor outsb pop fadds int3 lcall leave nop jl mov arpl cmpsb mov dec or loope adc xor mov lret es (bad) cwtl cltd btc jmp dec cli sub xchg scas sbb mov xchg out (bad) fcmovnbe push daa push stos cmpsb cs cld cmp nop lret bound cs insb cld cmc (bad) cltd jmp jbe pop mov push or mov pop sub dec jecxz and mov out arpl inc nop pop (bad) mov fsubs add call mov out imul mov xor pop xlat loop mov adc (bad) leave sti rorl dec in outsb sub cmp dec pop mov mov jb dec sarl mov push xor push pushf insb jns into xchg jle push orl sbb rcrb in push pop lret lcall sahf sub movsl jae addr16 std aam jns in sahf adc decb aad in cmc enter fdiv addr16 pop sbb add mov fld xchg mov (bad) cmpsb scas xor gs jnp pop or popa jns jnp rcrl ficomp cmc inc sub dec or lods ret and movsb das adc sbb mov sbb lahf xchg mov jno (bad) out jl cmp clc inc and push jbe inc inc std lret jmp shll ljmp movl (bad) and and jae negl imul aad sub dec jns in fsub lret repz shl fwait out call push into push dec ds scas add mov aam outsl loopne xor popa push push sbb jae jge ret cltd jae push ds out std pop inc pushf das out jg (bad) in xor out mov pop sub mov add mov push test repz pop pop add fmuls push mov mov push movsb inc mov mov pop mov mov fidivr fidiv lahf xchg les or push scas (bad) psubw pop insb adc push test imul jge mov lret repz loop jbe inc shr stc jo ja push pop gs fidivrl (bad) (bad) icebp jmp sbb std subl popf push push push ljmp dec dec call mov ds (bad) mov mov insl push cld sbb rcl push clc fistl cmp (bad) out insl push fsubs and inc push xor in cmp and jae cmp addr16 adc pop add cs insb mov ss std js cmpsl mov jb rep inc divb pop adc lret scas popf pusha push push lock push cmpsl lods lcall inc mov sub test mov jae inc adc xchg mov adc lret fildll out mov push cld inc mov xchg imul push rclb mov inc cmp fcmovbe (bad) push mov ja mov lock sbb mov out sbb cmp shl pop jmp xlat hlt push inc (bad) xchg scas (bad) (bad) mov (bad) notb shll clc out adc cmpsb push push aad inc lea mov outsl fistp xor test leave or rcll rcr mov insb push dec fldcw jnp iret fcoml adc std pop push mov jecxz lret jge sbb jge lahf xor sub shlb popa pushl push and lods or xor or inc cs (bad) (bad) cmc adc push mov mov ficom pusha xchg andb cmp mov inc ljmp jmp jbe outsl adc xor jnp pop dec lcall push sub dec (bad) (bad) cmpsl sub mov inc aaa pop mov add sub jp gs inc push xchg cld mov cmp pop or fild adc add xchg cs add inc xchg repz dec cltd mov mov add inc push imul fdivs loop lahf inc lahf js insb fcos imul add jbe out test aas jne xchg mov imull xor fincstp movsb or lds mov lcall in subb jecxz mov int3 sbb pushf xchg jle out mov push cmp mov pop leave mov ret pop push sahf mov iret pop std rcrb sbb ss lods pop test push lods std add fbld and in (bad) lds mov lods daa xchg sbb loopne cmp insl inc divl xchg iret or jecxz cli ds xchg jbe push cld or jne cld or cmp cmp pop inc xchg gs mov cs popl jge sbb push daa ss (bad) dec (bad) mov or js inc shl lret sbb faddp sti in test stc sub xlat movsl mov es add xor jno adc test aad adc jo pop inc mov mov pop push jmp xor add sahf sbb jle ljmp in dec movsl pop imul pop sarb sti mov aas loop testb dec shr sti or sub loope bound (bad) jnp sub lcall pushl jmp and sub lret xor xchg in or push popf inc lea ret xlat push leave fisubrl adc rorl ficomp mov orl pop cmp scas ljmp data16 push jmp sti loop fneni(8087 shr push or xlat sub pop data16 xchg inc push fiaddl fcmovbe push sti loope xchg mov loopne in xchg call or enter mov jb pop and ficoml inc aas call ds jnp inc xlat or enter fildll jns jnp push movsl cli dec sbb dec movsl adc lods lret outsl sub icebp pop mov inc push inc sahf mov outsb mov pop mov dec xchg mov imul scas cs lret mov cs out sub mov je pop enter sub sbb iret pop mov adc fistpll (bad) mov in or das pop fidiv fstpt andl dec mov loope mov push sbb lea cmpsl fild xlat xchg push movsb cmp arpl dec pop in aas scas (bad) xor popa pop fsubl dec fbld pop push les adc or sahf cltd mov call arpl fstpt xlat fwait sbb add pop and add cwtl cmpsl arpl std adc inc insb dec jns and lret dec xchg inc sub subl repnz stos push or xchg (bad) repnz dec movsl je inc jge jecxz test lds leave lcall loopne xor (bad) fldl mov loop dec (bad) cmp movsl sub fs int mov movsl icebp (bad) repz or test scas mov mov (bad) pop mov add call mov jp call push cmp mov jg add shrl push (bad) dec add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push and sar jecxz ja jmp in rcr frstor cmpsl (bad) je fnstsw jnp sbb (bad) sbb (bad) lcall (bad) jmp js repnz add jmp icebp mov cld mov xchg xchg jae jg xchg fnstenv jb xchg dec lahf scas xchg and int3 mov mov clc lcall jo cmp in lods fs nop xor push xchg mov test mov adc and hlt ror loope and fisttpl xchg cld pop call dec sub jle dec fidivl (bad) fbld (bad) adc mov cmp les dec sub sbb mov stos jns push popf int3 add xchg inc add add ja,pn adc stos insl push sub add mov pop or ret mov adc lret fcmovnu in adc jo imulb add inc sub adc sub out rcll and and fnop es inc repnz mov bound fidivl mov and push cmp call jbe enter movsl (bad) or pop movsl pop xor jnp inc std lods sbb jno lods add pop xchg xchg xor sbb fimull out or adc mov adc xor adc inc cs fadd pop xlat in andl sub lods cmp pop add mov dec sub aad xchg (bad) pop xchg cltd cmc ret push and jns jmp lds (bad) dec ss aad cmp push push xchg dec xor and mov jp adcl stos fstpl push jmp add mov jnp jno mov jmp xor (bad) sarl dec mov inc sbb repnz mov test fstpt (bad) in inc mov mov push out cmp push push or or or pop inc pop mov pop add addb cmpsl stos add data16 popa and dec push jl lods aad dec push and mov mov (bad) test mov push xor adc insb lahf test hlt jge dec cmp mov sti iret cmpsl inc and scas jb xchg jmp cwtl xchg aaa sbb lods ja xorb cmpl dec mov idivb pop dec cmc cld cmp inc or (bad) lods mov mov sbb fdivrl jne pop mov sub pushf jb adc xchg jae push and arpl jno push in sub xchg sti mov idivl sti js cmp arpl mov adc daa int push or push iret and lods dec mov and in leave mov xchg and (bad) mov sbb in cmp mov mov fs xor jno out outsl jg and fldcw clc js push clc icebp test mov inc mov lock or jp pop pushf into xchg repz push xchg ljmp mov sub ficom mov je mov jns dec das lcall add push and jae sub cmp adcb gs int3 push (bad) mov mov xchg mov xor (bad) and add fiaddl les sbb cmpsl jle inc dec inc repnz dec (bad) (bad) lock adc mov push cs pusha pop pop xor fmull add loope stc dec xlat (bad) adc and lods and pop and add push mov push je add jmp jns out jg inc test aad lret out push sbb jle add lret call xchg mov mov or imul fsts cmp lret push out aad lea sarb (bad) push imul loope insl mov movsl adc ror xor pop sbb hlt test int3 ljmp fbld and movsb dec push jg lret fistpl dec test or push pop mov cltd lods mov cmp xchg xlat push pop in outsl pop (bad) or ret adc pop lock popf (bad) pop sub jns jne xchg xchg dec jns leave mov lea push insb push push stos out push jle pop out adc push jb stos test push aam jl mov jb cs inc sahf jl cmc (bad) or loop sub cmp cwtl adc xlat push ret repnz jo xchg (bad) stc cmp clc js (bad) lcall (bad) out jge pop rcl xchg adc roll aas dec outsw mov sbbl xlat ljmp int sbb sti dec jb stos cs adc cmp lahf mov into and sbb mov add mov or mov dec clc js je call mov stc pop in sti ret aam and loope mov mov testb out and push mov adc cmc js cmp sub xchg rcl or cmp or ret and and mov rcrb (bad) aas add aaa pop leave xor push mov add inc scas aad roll and sbb jo mov pop daa cmp movsl jno inc add add pop mov loop xchg dec jmp jnp push shlb fidiv jo fadd jae notb pop mov xlat fisub in outsl fidiv adc mov inc sar cmc push (bad) pop into inc (bad) insl mov mov sbb mov or push xchg sub dec lahf adc add repnz xor (bad) mov push je ss mov int3 pop dec adc loopne aam lea mov stc adc mov je push jle fnop subl mov cmp xor inc add xor xchg aas aaa add iret dec in lods xor fucomip dec pop push rcrl or push clc iret pop push stc dec mov scas sbb add arpl sub mov daa rclb fcoms mov lret add mov and std mov adc fwait mov jmp xchg loopne add jno lcall stos push pop aas pusha xchg add mov aas dec or loopne jle cld test jp push stos inc push inc sahf pop icebp in xor lock mov add cwtl pop ljmp icebp xor leave fnsave popa jp jbe out out int3 aaa loopne adc fcompl stos sbb out jae loop and dec sub mov adc cmp jbe dec sub push lret out push addr16 aaa nop bound enter push (bad) out ret ret cmp inc popa in jmp lods int inc adc push dec pop xchg pop push cwtl pop rcrl pusha popa outsl inc jge out xchg inc (bad) mov adc sbb insl icebp or js mov (bad) jp cli mov xlat mov inc hlt leave call cltd sarb inc cwtl push repz ret fucomi (bad) jo ss dec lock movsl and arpl pop pop add push lcall scas fstpt cmpsb ljmp cmp mov mov jle jb dec mov movsb fwait sbb xor (bad) lret pusha push outsl cmc aad aas cmp mov (bad) insl jb inc jae into lds push jb mov mov (bad) jle repz sub add dec mov mov inc add lods popf clc and and test pusha sbb cmp sti ficoml es cmpsb cmp pusha sarb push sti mov inc pop jmp ja (bad) and out hlt imul (bad) mulb sub adc push sbb pop xor gs in mov xchg sbb test add mov jno xchg repnz out sub cmp ljmp push xchg aaa into pop push pop pop mov jnp insb out fcmovbe (bad) lahf iret psrlw bound or (bad) int cld das repz lea push xchg jne mov inc lds xchg and push jl les les clc cwtl lret mov daa cmpsl test xlat mov dec cltd movsb enter lods push inc xchg push bnd add fldcw das (bad) jmp push mov scas ret cmpsb xchg cmp fistpll arpl xor mov ss lock xchg fstps outsl mov xor aaa push addr16 and mov es cmp inc sahf add stos icebp xor add repz and cltd jle xchg int subl cmp loop sub lcall (bad) cmp xchg adc sbb xchg pop fs fs (bad) out mov addb or adc lds push fdivrs or mov les adc rcrb fcompl test xor cmp lock (bad) pop adc cmp xchg jmp push lock aas adc pop sbb sub adc mov fldenv lea aaa adc popl outsl shrb jl pop lea add inc (bad) (bad) js push pop jnp mov jmp or fwait mov aaa dec insb push mul dec xchg add out nop popa (bad) or pop cmpsb jg jnp sbb push sti xchg mov and mov mov cmp push js je in popa xor dec xor inc in xchg cmp push es xchg mov stos xrelease bound es rcl (bad) in sti mov mov sub aad push cmpsl faddl sahf xor addr16 pop jp iretw js cs mov sahf rsm sub aam fcoms rcrl inc lods call sbb mov sar xchg jnp je movl inc imulb ficompl scas lret enter mov lock jl in xchg dec mov stos es mov and fmull xchg rcrb mov ja cmp xlat jg in rolb outsb inc loope or (bad) or jae inc js test sbb nop movsl rcr stos jle mov and lcall pause pushf lret mov jmp popf mov jg mov sbb test inc stc shrl inc out or in clc insb (bad) and cs loopne pop ljmp jns outsb push clc push mov inc lcall inc ja arpl pop or xchg sahf rcll jo gs in add out je loopne xchg jg cltd pop addr16 lds sbb xlat or cmp or fcmovnu daa ret and aas xchg rorl rcrb std jecxz pop pop jl jae sub int xor lret fdivrp (bad) fidivrl xor nop sbb cmpsl jl push call sub imul hlt jnp es in imul jmp pop fst adc gs bound sub mov cli xchg push sub int3 xchg push push jle jecxz add pop aaa pop push lret dec out dec push pop in lahf inc loope push adc imul inc fdivrl fimul mov sbb push xchg cmpl gs andl cld jbe and popa test adc ss add xchg jecxz pop (bad) dec pop pop imul sub and pop fnstenv dec jecxz sbb fldt cwtl push enter jecxz cmp cmp insb ret xchg or inc movsb sub sbb dec enter jmp mov or iret mov xchg sbb adc test lcall ds lods push jns sbb mov xor rolb dec push (bad) (bad) pusha inc ret mov xor cwtl je sarl cmpsl cltd mov scas add lock and push xor jnp mov jecxz cwtl xchg dec fnsave js cmp nop inc ja cwtl inc imul aad daa inc repnz dec jle mov addl dec mov dec push push insl jle adc insb sbb gs clc mov fidiv and sub pop lods cltd popf pusha das mov jge and push sar jge dec inc sbb mov inc fstps (bad) leave sti fstpt out sbb fbld (bad) mov inc icebp push cmc outsl imul repnz lea lahf jmp dec cmpsb loop out sub and stc js cmpsb (bad) xlat lock outsb lods cltd pop inc imul loopne daa mov decl notb pop fs mov js cmc imul mov int out notb loop mov hlt mov push or lods mov or in lret sbb arpl jl sub or xchg leave and inc push and or cli test fcmovu or hlt lcall sbb jg or or jae (bad) push mov and dec xchg hlt enter cld add inc hlt add enter cmp ret dec mov pop scas dec movsb les fwait lret jg push int lods fisub push pop inc sub int3 imul lds add xchg push add push stc test das (bad) mov mov lods lret jnp push arpl mov xchg jae sbb mov xchg cmp adc jg loope cmp rcrb xor cmpsb sti adc sub arpl pop adc ret (bad) pop dec cli fisttp cmp mov popf push hlt cmp mov sub aas and xchg lahf test sub sarb lods rclb mov aas (bad) xor jnp stos fisubr mov sti cli in pop rcrl lods fs jne enter cmpsl iret or cmp sub jge jecxz adc movsb lds adc (bad) and jne fdivr jecxz int3 xlat jbe and out pop dec jg scas lods xor movaps xchg (bad) jae push pop and mov scas add or and xchg aad (bad) das sbb outsl cmp sub insb mov sub dec dec dec cmp lods xor mov cmp outsb add xor inc mov and into bound push repnz sbbl inc dec push sar movsl pop dec ficoml adc frstor jp jle fnstenv into repnz mov pop pop (bad) std les (bad) pop mov popa (bad) std pop fwait cmp aaa xchg mov xor mov out (bad) rcl fildl or lret mov xor add mov rorb js loop mov das pop mov mov cmp cmp cmp leave xchg mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc push push aas sbb rolb shll fdivl mov sbb sti cwtl out fadd les mov fnsave fcmovb je mov out cmp add sub jg (bad) int sub dec xchg lret or bts cmpsb insb mov cmpsb subl xchg xchg and fimul cld aam bnd pop adc ja,pt fsts dec movsb cmpsl cld add jl mov mov inc cmp fwait data16 mov sbb jmp imul jp sbbb movsb movsl decl jg outsl jge jno hlt mov arpl or cmp dec in inc popa in lcall cmp and add inc mov cmp test or push imul dec test pushf test push pusha adc fwait mov je adc enter sub add xchg adc insl in adc fisttpl adc addr16 pop aad (bad) fimul push icebp add nop jns in daa fidivr mov inc xchg int sbb jmp pushf cld daa and and adc movsb mov mov sub insb bound sub fdivrl xchg jp outsl loopne sbb les lock xchg sbb mov dec in jns mov mov push inc mov jl mov xor pop scas push mov pop jbe pop xchg inc dec xchg jb jmp pushf outsl in cmp addr16 into aam push nop fdivr push dec xchg lea pop in repz in pop (bad) mov mov dec popa and cltd (bad) add rcrl loop (bad) xor jg push pop in popf test imul jb inc sbb imul jmp xor sbb jo xlat xchg or mov inc inc pop outsb cs inc gs lret mov push inc cld cld jbe sub xor pop test (bad) in and xchg push pushf push test adc sub outsb jne fildll add xchg imul jb mov xchg cld mov cmpsl mov mov and jne pop jmp movl cmp lret les hlt scas lock popf icebp or icebp aas sub dec mov inc dec mov push mov leave addb aas (bad) loopne imul jmp rolb sub jle cmp push (bad) fimull jg push stos jmp rcr movsb dec jge push push adc in stc outsl or scas test cld pop or push cmpsb xor shlb push sbb (bad) xor push jp mov in lds clc fsincos mov inc push bound mov pop loopne xor mov fadd loopne jb in call xor (bad) sbb and ss or mov sbb mov (bad) jb sub adc bound mov pop xchg inc fsts jecxz sahf (bad) imul pop mov aaa push and and push jo (bad) ror xchg adc or stc pop or enter add cltd sub out xchg sarb jmp lahf cmpsl je fistpll jb int ret int3 mov jmp mov lcall xor out inc sub add or data16 inc shlb inc ja mov bnd push fistpll in pop mov and (bad) mov sub mov cwtl (bad) adc enter lcall inc lahf pushf jg out dec mov sbb mov or data16 push mov inc je sbb xor push (bad) and push cmpsl inc bound (bad) cmp mov js sub iret or add push insl bound fadds (bad) cli ficom (bad) sbb inc jg (bad) dec mov std cwtl insb cmp pop or cmc repz pop adc sbb ja bound push ljmp dec pop jae testl jnp (bad) cld fisubr std shll pop out jae sbbl fadds jg lods mov dec inc mov mov xchg cltd popf cmpl repz mov sub rcll aas js testb mov jnp call int3 push mov imul test int3 jns repnz inc cmp xor std push sub popa jmp dec mov sub dec out and push add lea loope jl jp add cmp stos mov mov ljmp push iret aad or cmp aam push icebp dec cmpl cwtl cltd aas (bad) (bad) cmpsb fwait and mov mov mov inc mov push repz mov pop andl out (bad) iret jecxz sub jp inc out test xchg or pop stc int cmpsl fldcw lea cltd mov adc aas pop pop incl push outsb jp pop sbb jb jmp pop and adc inc mov leave adc xchg es ja negl mov push fs mov adc mov pop (bad) ljmp mov std call add sub mov orl xor shrb mov mov ret fisubr adc cmc ds jno arpl push out arpl fchs xchg sarb or in xchg xchg cmp data16 mov xor mov sub jbe je fidivr sbb int add adc int or adc faddl lcall and cmc xlat jbe loop clc jo and enter mulb xchg (bad) stos xlat aad cmp out xchg cmpsb ret mov add iret mov aam pop mov aas pop sub lock mov push and cmp mov sbb pop out jle jg and loop dec push roll aaa add jae andl enter mov imul das cmp pop stc aas adc (bad) stc pop enter cmp jb repnz fnstcw repnz sahf out int test jo dec ret cmp pop adc xor test add arpl adc or int xchg scas scas fiaddl jne xor shl pop (bad) enter and test adc lock sub jp push lds dec dec xchg mov lock sbb jns fwait cli iret push push jne std sahf inc and pusha sahf test hlt pop arpl (bad) xor adc inc xor jp lea xor (bad) and into sbb pop mov das insl iret outsl xlat dec mov les jecxz add sub jmp jb es jne push aaa xor roll xor outsl pusha js test and adc mov dec lahf inc shll xchg pusha cmpsl xor call test mov mov mov jbe,pt or repz mov mov mov lret inc jecxz cmpsb xor jne gs mov out sbb sub mov cmp jge mov je and insb int push inc add lock inc and pusha jb outsb gs (bad) push aam cmp imul jg or ljmp inc in jmp sub dec pop cwtl mov and mov cwtl add stos inc and jae negl loopne nop out xor xorl js fwait es and lea jns jne jne xchg fidivr mov mov sbb lock pusha test xchg mov inc jge dec jecxz int jl inc imul (bad) into pop faddl xor jg (bad) cld hlt sub cmpsb and mov dec sub or xor cmpsb (bad) adc push in add cmp mov movsl bound xchg and dec int dec ds xor dec push mov outsb imul dec lods repnz sbb (bad) outsl movsl dec jmp cli jmp js mov loop aad icebp out mov pop outsl push into sbb push js fdivp repz stos mov dec dec sub add scas addr16 or aad xor hlt add jp mulb mov xlat into dec inc push (bad) mov ljmp out sbb movb cld push dec push stc mov sub outsl mov (bad) outsl jmp dec pop insb xor (bad) in jno adc mov dec xlat test (bad) mov or jecxz xor or movsl repz int3 fnstenv push fsts mov call inc push push pushf jno pop stos jle push test fbstp out add push jge (bad) hlt adc or inc (bad) jns leave pop mov (bad) push mov adc test xor and repz fisub xor insb ss xchg xor fildll jl add adc out lcall push fwait xchg and mov adc fadds insl xchg sub push icebp fsubs adc fisub lret lret pop sub sub push mov test fcmovbe lahf jae dec or cmc aas ja mov loopne clc add mov data16 (bad) push and add test pop sbb nop dec mov test add and subl mov out lock sti data16 scas xor mov cli (bad) xor push cmpsb stos sbb cmp repnz mov mov mov pop ret adc add rcl cwtl sahf mov and jne (bad) sub sub xchg mov insl mov dec add xor js in sbb es or mov pop mov cwtl xchg sbb subl jno and outsl mov dec push cmpsb rclb pop adc cli jmp shrb or cli cmp mov jns icebp lock xchg adc xor inc dec push arpl sub mov out roll cmpsb pop outsb pop stc lods jp call cmp sub and hlt imull insb sahf jg jae (bad) mov stos notb hlt fcomps mov push push sub popa jg xchg or mov movsb clc hlt cmp push or jne cmp sbb fdivp jge fistp sub mov pop addr16 mov jmp inc mov (bad) jb cli cld pop addr16 cltd mov xor mull jecxz imulb or lds pop popf fidivrl sbb jp nop jb cmpsb jo add aaa in bound loope int3 int adc xor pop and mov inc pop loope dec dec stos sahf push jl daa lock loope jmp mov sti pop les outsl jnp pop enter lock into cmp jg scas mov ret outsb out lea xchg add rcrl dec dec jp (bad) sbb arpl pushf xor popf adc xorb and sbb jns jne loope and mov js inc int callw jecxz push or sub lahf test movsl dec lret aad xchg test jae in iret push rcrb pop dec int3 jge (bad) shrb jp xchg (bad) out dec mov (bad) int3 loope mov sti mov mov dec insb xor loop (bad) fcmovnu cwtl pop and mov jge cmp insl loope sarl jo aas rolb cli lods ds xor cs jo mov popa dec xchg enter inc adc inc xchg mov pusha stos sub mov xor jno pop inc or dec arpl addl add lcall xchg lods jg (bad) scas aad shlb or (bad) jge fbstp in jo lods sahf fnstcw mov repz inc sub out xchg sub lret cltd insl mov xor call mov pop mov jae inc jecxz rep fimul jb push adc mov pop push inc xor arpl fildl mov (bad) fisubl arpl (bad) sbb mov into (bad) je icebp daa mov pop (bad) (bad) std addr16 scas and ljmp out ljmp mov or dec fstps sbb push xor jl mov inc xor outsl cmp mov das pop in dec push fwait (bad) mov cltd cmp add push or int3 cmp xchg xchg sbb mov stc popa sbb out leave in lea jmp jmp cltd xor fimul (bad) cli repnz lods sub mov mov inc push jne (bad) (bad) hlt out push lods mov jg inc pop sar (bad) daa push ljmp mov loope fs fstps fbstp inc hlt cli xor push add aas jge mov inc pop (bad) xchg cli push pop xor mov push add outsb in (bad) cli mov ds xchg mov pushf mov xchg dec ss add dec insl jne mov andb xor mov pop inc sbb cmp pop (bad) xchg stc andl jmp add xor sbb leave xchg xchg (bad) mov cmp js daa xor push out sbb shl repz out add fcomip sub xorb mov jns mov pop movsb pop nop lds aam shr repnz daa jecxz test in dec jo mov int mull ret mov add lds ficompl pop xchg cmp lcall imulb cs outsb xor lods sahf or cmp inc push xor pop mov jno pop mov add pop push cmpsb mov mov dec daa dec or fwait ja sub scas pop cmp xlat cmc jbe test pop adc inc ret test add pop (bad) out xlat (bad) rcl lds pop (bad) es mov mov add and jl sub test mov dec jo out pushf in add adcl cmp ret stos mov push add scas or push add mov (bad) jbe jl inc xchg lea fwait addr16 (bad) aad pop (bad) ja pop call aas sti cmp push (bad) fisubrl rcll dec or mov incb loopne outsb dec imul mov daa xor mov fmul ds jnp dec lret adc ja mov push loope xchg dec pushf cmp sub sbbl lods es and xchg add sahf (bad) imul adc push mov adc aad call daa fstl pop mov add js call inc das pop mov mov das pop mov mov das (bad) incl add pop push add xchg in fidivr add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int3 adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push inc adc adc sub cmp movsb push pop push sbb fstp cmp inc push cmp aaa push mov out sti fidivr stc jl add loopne cmp fldln2 inc ss mov mov cmp adc pop inc inc hlt imul jp outsb mov jle cmpsl ss pop stos sub cmp mull inc mov outsb and xchg sbbl mov in outsl xchg mov fsubs add sti loop adc (bad) dec addr16 cs dec adc stos jle icebp inc mov mov leave or insl mov xor (bad) sahf cltd jno or mov xor shrb daa jae or movsb (bad) or dec add sub or cltd mov or lds mov mov mov jle xchg jg gs in sbb mov inc movsb into xchg lea outsb cmp mov and push pop icebp xlat lcall mov xor stos dec rolb sub pusha mov in ret mov aas loop mov inc roll push xor (bad) test stc lods ret adc xor fmull fbstp iret xor jge push loop bnd shlb imul movsl jae mov adc mov popa cmp decb mov jne mov sub jns mov lods push cmc arpl push sbb xchg and mov imul adc inc lock or popf sub pushf fnsave push sbbl mov dec or out adc bound and mov jg es xchg (bad) clc and popa lock and jo jb imul mov xchg mov pop push inc push jb divl xchg ja mov rcll jne notb dec dec fisttpl faddl fimull cmp inc mov insb outsb shr pop (bad) aam repz repnz js hlt add xor push inc stos xchg pop jge lods sbb cld dec sahf jle imul inc add out es int3 movsb inc xlat push jno sarl cmp aam dec in arpl inc ljmp jg outsb add pop scas sbb mov call neg mov fadd sbb or jnp mov xlat xor xlat push sbb jmp pop inc mov inc mov andl out and mov push sahf outsl test pop imul or dec test int mov adc jb hlt push mov xor xor daa sub cmp (bad) lock aaa in fs jge es cmp inc ja adc in lahf and mov pop dec fsub push scas clc gs pop sbb pop (bad) in adc fsubl mov jg fistl pop pop dec mov lock xor xchg cmp pop pop lock inc repz fnstsw mov ret int3 es xor lods inc lss mov out daa nop fstl jp push fadd mov in xor data16 pop adc aam and pop and (bad) dec into dec (bad) mov inc (bad) cmpsl cmp out pop dec jno mov push cmp mov mov cmp lret fsubr mov leave mov (bad) test test ror jl xchg (bad) or push cmp xchg jo pop es sub and icebp or pop insl xchg mov (bad) enter test xor fist xor mov cli xor into jl stc jae push push cmp xchg movsl scas mov sarl cmc fild fnstenv xchg imul inc fstpl sbb stos cmp mov pop xor call cwtl (bad) mov (bad) lods stos popf xchg jno xchg push dec mov (bad) mov shl dec adc jge push add or mov push lcall pop sahf jne pusha mov test mov dec jg arpl adc jle xorl add sub into sarb xchg pusha in sbb hlt dec clc inc (bad) mov idiv mov int3 jle fucom inc mulb ror or pop inc rcll (bad) fdivrp (bad) cltd fsub stos inc mov adc aas push sub and adc xchg and dec or das cld daa mov cvtpi2ps push das out jnp inc repz (bad) adc push lret jge jp repnz sti mov sbb inc lods aad xor adc mov xor popf stc sub clc mov add push mov mov je ds inc jl sub xchg inc cmp jle ds fidivrl insl je imulb xchg push jne iret cmp mov adc jl ja test mov jae enter rclb push mov push stc pop rol sub scas pop pop and mov push xchg lea inc shrb sahf cli xor mov shlb push sub jecxz jnp pop and and xchg pop cmp outsb jae add loop (bad) fcmovne lahf imul ret lahf cmpsl mov dec push push ljmp mov inc sub mov cmp in xlat in sub mov cli hlt scas ljmp dec xchg push or mov pop in push jbe data16 push jno add (bad) mov gs push dec sub in out rorb jb mov cmpsb and push xchg jb mov fildll loopne add (bad) jne and pusha sbb out aam cwtl inc sbb pop mov xchg inc sarl mov (bad) jecxz add insl je jbe arpl arpl mov jmp aad dec gs shr fldenv mov ret jp int test cmp jmp cltd add xchg (bad) mov push mov stos cmp mov test in adc jne mov jb xchg out cs cli adc lock lret and mov mov lds mov pushf lds por test dec int jne cmpsb push call add jae xor out cmpsl jo cmp cmp mov mov sbb xchg jge dec rol in loop push fisttpll mov nop cmp mov push aaa mov sub dec pusha idivb cwtl cwtl icebp dec cld movsl jae int3 mov aas jl fistpll xchg dec sbb (bad) out or dec dec cli ret sub imul fisttpll jmp int3 push movsb imul sub add cmp mov adc imul pop popf add loope rorl mov dec dec cmp call test jle jl cmp sbb (bad) subb out or lret pop mov mov dec adc (bad) daa insl shr rorl push xchg xchg or mov lcall xchg (bad) mov or into fwait fwait stc aad xchg sbb xor mov test sarl push test sub pop fdivrp lret out mov out inc movsl dec jnp and xor xchg push outsb sarl push adc std call sbb (bad) adc pushf sbb dec stc lcall jge push cmp repz fldenv js shlb fmul (bad) mov push cs je rclb push iret sbb mov into sub loopne mov cmpsl jl sub cmp movsl cltd in mov xor fimul (bad) out inc pop adc popf ja xchg clc pop (bad) dec notl cwtl mov pusha outsl push es nop lea ss ss das dec lods mov add or inc or in loop xchg mov aas dec notl mov cmp lea jne fwait mov jl (bad) fcoml fwait and (bad) aam out (bad) jp sub dec les outsb adc and push adc adc inc in cwtl lds out rcr mov sbb stos push jecxz cmpsl xor pop cli pushf loopne ss pop (bad) divb adc insl loopne test arpl shl jno mov inc cmpsb leave rol jb movaps dec cltd jge xor icebp adc int in inc push jb test jae into test mov dec fs sub ffreep ja pop push aaa test xchg cltd rclb subl xlat jmp jb fwait inc popl scas test pop or pop and daa data16 lods dec mov push ljmp (bad) adc xchg adc (bad) mov mov xor stos xchg bound fidivl xchg mov add popa repnz xchg mov mov leavew mov movsb add aaa push mov jns inc fstpl in loope ret arpl aas or popl cmpsb scas pop lret imul pop xchg xlat dec xchg ret ss pop jecxz lock call pop mov insb sbb into notl dec pop xor in cmp mov int3 out cmp dec cmp cmp adc push dec imul jne cmpsb cmp jb movsb mov lods cmpsl sbb lret les sbb out sbb add daa cmp mov (bad) iret cmc dec movb int ja lret pop aad mov int jno mov idivb add and and xor (bad) fs inc sbb sahf fisubrl xorl cli pop pop mov jae aad mov mov adc pop push jne mov lret pop sbb cltd xchg incb push jp xchg jp and pop adc fild data16 loope mov mov cmp lock xchg (bad) jae,pt lret sahf and (bad) lea dec jo mov xchg push movsb add ss loopne and mov stos pop shrl pop rclb sbb and push mov out sbb sub cld in jnp repnz sbb repnz jno push push arpl popa fidiv mov into test (bad) rcrb mov adc or in and sbb mov insb pop lret les (bad) pop push fisttp jns sbb sbb cld das das mov dec fucomip loopne mov clc iret xchg xlat hlt pop mov push aad adc push add imul or jno inc cmp xchg mov adc pop cli push arpl popa test lret nop arpl mov xor icebp mov dec xchg jnp jns jmp ds mov in in int mov (bad) or enter mov push stc sub jg xchg fs sub or jle movsb out cmp lods imul rcll jbe adc dec adc out push icebp callw roll lods xchg inc nop mov insl sbb pop test sbb pop lock xor sti ja cltd xor adc cmp jbe and mov dec xor sub cli xlat inc in mov in call mov ret ljmp xchg ret out mov lcall loop popa or fsubrl sub sbb fistp fwait clc sbb js out xor pop xor out das repnz dec lret fcmovu mov mov inc xchg mov push mov mov cli lcall jg jnp cmpl push in (bad) stc mov mov mov mov pop (bad) imul repnz (bad) pop pop xorb cmp insl dec pop adc mov sarb fiaddl push sbb std (bad) xchg jns dec sub data16 and ljmp push nop ret test sbb adc loop inc sqrtps rorl lcall loope popf sub and ror nop rcrl adcl mov movsb out adc pop andl ficoml out sub (bad) mov cs mov int3 push xor (bad) aam and push dec leave fdivrs mov fild mov jmp mov sbb xchg inc mov pop push add jne or or jb les int dec pop push sti add lea pop mov bound mov xlat fwait sbb cmpsb mov aam and jb mov nop push (bad) fidivl popa int3 pop fsubr mov mov or adc cmp inc xor inc insb sbb (bad) sub push mov mov inc mov int je inc lahf add jns out xor inc fidivr int3 icebp loopne push jno popa cmp xchg jns xchg jns,pn inc inc ficompl add insb sbb inc pop lods xchg mov cli mov xor in push (bad) loop jne cmc bound rol push dec xor bound xchg out sahf int call cmp pop cwtl rcll test pop scas mov inc jno or cld repz xor repz cmp xchg jb pop stos push imul cld sub cltd push cmp dec xchg xor imul add (bad) enter insl add in push ret fs sbb adc xorl sbb xchg jge mov data16 push and rclb mov mov loope push xor jnp jae push adc pop aam and ja mov cs adc adc in (bad) lcall stos icebp mov fs pop xchg int mov mov lea hlt subl xor dec (bad) push xor sub lock call popa and cmp and mov enter pop test shrb xchg jbe clc sub sub or daa imulb sub fs inc mov dec and pop cmc iret jno mov pop mov addr16 xchg add repz call repz and dec les jae mov jno dec pop and repnz pushf scas out mov cmp jp les sub mov neg xchg mov add xor pop mov movsb aad jne cmp leave mov jp test push sti pop push fs imul jp and pop jge arpl xor adc mov (bad) (bad) (bad) jo cmp outsl mov mov mov addr16 sahf cmp mov iret sahf cmp decl add aas dec cmpsb add dec mov push add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push and xadd icebp pop rcl frstor cmpsb mov ret je clc dec sbb jmp sbb jae enter mov sti mov add cmp push bound mov sti xor in setnp inc add (bad) dec inc jg es imull jno,pn dec vcvtps2dq xor insb cmc and and jne js cmp lea repnz ret ror jnp insb cmp insb jp mov dec sub test mov and push outsl sub hlt adc into dec imul inc pop mov es cmc adc sub clc insb jne cwtl test test sub inc in push xor xchg mov cmp insb inc pop add jno and popf pop sti (bad) push test xchg dec dec std nop adc cltd lcall push dec ficompl sbb xchg mov pop std sti arpl adc xchg xchg mov rcrl lock stos int3 pop pop (bad) jno cmpl into fisttpll mov pop xchg push aad subl dec dec or data16 popa ljmp cld out mov or les icebp cs pushf aam mov xchg cmp scas ss sub mov mov ds mov cmpsl mov pop jns xor shlb xchg hlt jp stos pop (bad) jge aas fsubl jmp roll cwtl mov add cmpsl cmc mov scas int pop dec mov test push mov stos test pop jb outsb xor in mov clc (bad) fimull pop mov aaa mov inc xchg cmp inc cmp cmp xchg sbb mov (bad) in or adc aas insl or sub ret leave mov loopne test pop mov adc pop sbb pop xchg lret sub adc dec stc out mov lods mov xor divb add test mov mov cmpsl mov in mov jmp xchg aas pop cltd fcoms pop push dec inc cmp movsl sub mov outsb xchg arpl (bad) ja dec pop fndisi(8087 mov xchg dec test stc mov arpl inc (bad) cmp sub mov jno xlat pop ss imul cmp ss jp mov daa pop out xchg cld stos mov mov xor jl in cwtl out (bad) sarb add cld call jmp or cmp ficom inc int lret mov arpl sub or jns adc mov lock je mulb (bad) aaa xchg sbb out lahf sbb imul pushf mov (bad) dec sbb outsl cmp out push xchg push pop addb push mov mov clts test add arpl insl setl fisub pop dec push xchg mov lock xchg jmp dec fcmove mov cltd fisttp mov loope jmp cmp cld inc repz xor dec sub (bad) in outsl push (bad) scas std insl fcmovne lods es mov jg push test int push add jbe dec and (bad) xor sub daa push outsl xor jae mov cmc xlat add stc pop lock lea fwait mov add repnz cmpsb shrl or aas test pushf pop ficom rclb pop dec in (bad) sub (bad) push and scas popf xor mov or pop imul cmp gs movsl push cmp mov repz mov je jns and out test xchg in dec sahf xchg dec jmp insl jp icebp jae sub sub imul (bad) mov mov pushf push sti and add loopne push jnp fmulp cmp push mov inc hlt inc cmc jp pushl add scas push add jno cmp inc jmp mov (bad) push pop jbe xor push push jp ja out mov cs jg mov mov pop or clc and scas lea cmp rcrb insb cltd mov mov dec (bad) push gs lods push mov in fistl pop jge sti std cmp daa test ljmp jae jb aad imul aaa inc cs xchg xchg call push pop adc in imul jb dec in stc push lods and push mov xchg loop outsb call aas jp sub dec xorb pop (bad) adc jp push pop push lods cmpl outsb pop pusha push icebp or pop (bad) insb pop gs push pop insl enter pop push push pop lock dec jns mov imul add inc es push in xchg pop and lods mov xchg (bad) lret mov sti into cmpsb cs loop jbe enter sti jno sub xchg data16 push (bad) xor push dec outsb dec sti fxch adc dec out xor mov cmp outsl nop dec mov (bad) fwait cmpsl jecxz cs outsb or cwtl cld add (bad) fwait mov call mov rol xchg jae arpl adc adc sti jecxz mov outsb inc sbb les jae mov jmp bound mov inc mov addb xchg push cld out xchg adc mov and and nop out xchg jge lds mov jnp ret cmp stc mov jno shrb mov ds push xchg je sbb int3 mov shr jp xor ss or inc xor repz jecxz pop gs outsl (bad) nop scas ja jp addl jmp and adc insb fcoms fidiv jp inc jecxz fcoms pop mov movsb punpckhbw (bad) mov les ljmp cmp aaa dec stos fst cltd cwtl xchg adc add dec push xchg movsl aaa loopne pusha sti inc add imul jg xchg dec fimull pushf mov xchg fsts (bad) (bad) pop mov cld push ljmp call push jecxz push sbb push mov push movsb arpl pop frstor (bad) and mov aaa mov pushf js (bad) iret addl mov adc push lea pop mov repnz stc xor push lahf add xchg out out mov inc push push arpl jbe inc shl xchg cmp sahf xchg out pop in pop mov cli cmpsl push data16 jmp daa fisub and push xchg push int sti inc jmp jbe jle rcpps or add mov push push in imul test inc fmulp loop movsb jmp enter int3 out adc mov push dec jno sbb ret ja dec out mov enter adc cmp cmp mov mov aam xor and leave pop pushf mov xchg stos mov movsb xchg loopne xchg pop jnp push ret mov and or das adcl ja sarb data16 das pop xchg rcll cmp leave cmpb jp cmp push in xchg push insb addr16 xor out lea and daa xchg jbe (bad) jne repnz test (bad) xor cmp fidivl clc pop and mov repz std rclb xchg cmp xchg sub push ficomp iret push jl mov fnsave adc dec pusha adc jno mov jb mov xor pavgb fistpll sbb aam loop dec inc out fwait out push mov and xor xor fistpl aam jne aam aad pop dec and push cli mov (bad) (bad) call nop mov in in (bad) in jmp int3 insl xor push (bad) rolb sbb lcall enter sbb jb sub adc lcall adc dec stos lret pusha pop fistl test dec mov (bad) xlat or mov cld pop pusha sub enter lea insb pop mov ja outsb jb cmpsl gs lahf jns rcll in mov mov stos adc sti aad pop testb sbb and xor ds jmp pop or inc (bad) imul jns pop sbb mov cmpsb dec jecxz mov add push jno xlat fwait xor hlt pop mov lcall in xchg mov jb mov pop mov fs pop push xchg stc push (bad) sbbl lret cmp ljmp mov and cli sub stos mov xor in rorb cmp pop cmp xor stos and mov or push movsl dec push cmp mov mov xchg fsubr insb mov fisub cmp test mov and sub jle jg cs pop inc popf pushl xchg and outsb sub jmp rorl stos dec mov inc push cmp js and cmp mov shrb mov mov and and sub jbe xor mov pop daa mov xchg or pop pop and xchg sub adc sbb movsl mov lods aam jb shrb stos mov mov mov ds or mov leave push mov add call leave jnp jnp pushf jmp call fnstsw (bad) sbb jecxz xchg or add xchg ret cmp sub xchg jne sti jns mov adc cmp cmp arpl mov pop mov clc xchg (bad) imulb cmc in scas mov mov (bad) mov xor dec bound adc out ret dec aaa pop roll jle fwait mov mov add imul or pop adc leave ret pop push sub xorl inc mov stos sbb push pop mov sub cmpsb dec cwtl test cmp sti lcall out pop mov push pushf sbb test xor in mov sub in adc (bad) addr16 inc cs lcall mov jp rcrl xchg pop adc pop mov pop xchg test sub out adc fisttpl (bad) aas mov mov mov leave mov cmp lcall enter adc in cmp push jecxz out fdivr xor ss fcoms data16 pop ror or or jp adc testl insl out dec stos adc andl (bad) faddl push mov pop and pop fstp sub fstpl xchg ret xchg pop jecxz mov testl sbb mov mov ss dec add jae sahf dec dec mov nop out dec cmp or cwtl jbe pop mov fwait push lea mov out fchs lcall inc cmp cmpsl xor jnp test xor (bad) jmp loope and dec xor fidiv xchg xchg sahf xchg lock inc jl in or arpl out sar mov sub sub jno add sahf rol sub jne into jo dec jbe push orl aas adc cmc dec in sub dec test icebp xchg mov leave xor push mov int3 lock in push sbb and push movl xor xchg test dec in pop sub out fs loop mov and mov sbb iret cmp outsb push jle or pop fsubrs aam (bad) mov sub adc xlat lcall mov add mov sarl jle sub xchg push inc cmp push sub rorb gs adc out sub gs push bound cmpsl hlt push neg pop pop inc jecxz ss mov adc mov (bad) divl fidiv iret das insb clc mov cli popa mov (bad) mov dec inc loope pop xchg push adc jp jbe cmp lahf cmpsb (bad) lret in mov out mov lock (bad) std shll xor cmpsl jl ljmp mov ret push dec add ja push xchg mov lret jb mov adc add mov test iret sub icebp lahf or jb cmpsb sbb push cmp xchg jmp jecxz or mov mov popf cmp pop push pop mov jo outsl xchg mov fldcw mov push lret inc adc cmp hlt (bad) cmp mov cmp cwtl add sahf push and fnop dec inc mov cs mov pop call cld cmp sub xchg cmpsl ret mov xchg ja dec sub and stos mov dec daa mov mov sti les cmp (bad) sub pop mov push pop hlt leave push push cmpl iret mov push std icebp addl jo pop dec (bad) push mov jns sub sbb sub sbb out stc pop fidiv pusha xchg lret adc fldt leave mov mov xchg cmp loope sub dec into sub mov jecxz arpl loopne fcmove add add test mov xor mov xlat jg push (bad) sbb mov hlt xchg xlat xor push mov shrb xor or dec sbb and stos lods in popf pop dec (bad) stc xor fdivrs adcl dec mov dec arpl inc xchg or push imul mov jecxz xor (bad) jae (bad) push cmp push lods es mov mov push popa push xor sbbl xor push xor push push gs ljmp adc out sbb loop fdivr int pop and repz mov test dec inc mov iret cmp (bad) cli mov pop sub jae repz and fstpl cmp scas es mov jnp (bad) push pop sub pop loopne xchg mov inc cmp out pushl mov add mull push fmuls add jle (bad) pop push cs or dec ret fimull cmc call jmp xchg mov ds cwtl pop sub test inc in adc dec and jo jp mov mov gs repnz jmp rol std loope pop add xchg aad out shrl push (bad) out or jecxz ja xor adc mov cmp movsl arpl mov in xchg mov and push adc dec inc lods lcall aaa xchg mov mov loope (bad) cld jmp (bad) adc xchg and popa int3 idivb mov jp ljmp jp ljmp sar adc push add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rclb add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push inc adc mov or xorb fwait (bad) xor sbb dec mov (bad) call push jmp jns repz push xlat dec mov fstps sar fsubl jp adc adc jg hlt mov (bad) mov sub cmp cltd adc stc pushf pop leave and sub xlat or or xchg ja jo pop push test push daa scas or lds movsl in call mov pop pop ljmp mov pop push xchg push movsl xor loope jno cmp aaa test cli adc jns or es and mov mov setle enter push dec scas adc fwait inc rcrb dec mov das push xor xor add add add xor bound inc dec inc movsb sahf push inc mov pop jge push aas test xor cmp adc jnp fadd cli mov mov popa push jne hlt andl ret fwait (bad) jle push fs and std hlt je sarb int aam test test inc jb lea outsl pop push rcll xor (bad) cmpsw or adc mov ret mov int inc cwtl mov xor rcrl frstor mov (bad) or mov push push test lahf jb and daa addb dec (bad) imul and enter cwtl bound or je pop cmp pop arpl push daa stc ja outsb xchg jecxz mov int3 sti pusha adc outsb and or sub push jnp sbb cmpsl jecxz add cmc jae dec sti push xchg inc xchg add add xor popf hlt inc into daa push icebp xlat enter (bad) shll sahf jae sbb lahf (bad) arpl iret xchg cmpsl inc sbb arpl mov mov dec xlat mov adc mov (bad) inc xlat les test popa jo scas fstl cmp ss cmp into inc jns push mov pop dec mov lods dec jle aad das add jmp inc or jl stc into and jmp repz and cmp inc cmpsb stc mov pop lret sbb jl std or xlat push pop sbb stos les cwtl fsubs movsl and fisubrl decl lret fs pushf mov inc adc push out loopne push pop jb adc lea xor int jge mov and mov inc and push jp sbbl iret loop hlt push mov bound loope cmpsb or inc repz xchg xchg push xor int3 sub hlt daa mov (bad) pop jle ja aad test inc cmp leave or jae mov enter pop divl ret rorb lret inc cltd pop mov lahf mov adc pop idiv (bad) dec clc mov mov dec mov fs sahf xlat cld fs idivl mov lret cmp data16 and je repnz jo sub xchg pop std stos sub lahf inc cmpsb cs loop pop inc lahf pop int3 sub leavew mov mov icebp (bad) pop push mov int3 jmp xchg push cmp not cli inc popa out loop jmp fnstenv (bad) mov mov sub jb call pop aam and jg sub in dec in rcrl cmp sub xlat out sahf sbb mov sbb xchg pop xor cld cld test out jb sub sub dec popf mov mov cld pop lcall jnp into xchg in das gs jae andb mov mov fnstsw mov mov mov add pop enter stos les cmc fsubrl xchg bound sbb cltd xor adc pop mov or pop cli cmp jnp adcb push lret ljmp (bad) cwtl test aam inc jl fs ss test jae and push test mov jns xor sbb fist jns lcall or aam mulb pop cmp jbe iret lods cltd or (bad) adc (bad) stc push sbb xor pop stc icebp incl mov lods (bad) cmp push leave cmp inc ja in (bad) stos hlt or cmp pop daa std repz ret jbe shll cmc daa add dec push (bad) mov or adc mov out adc push dec ret pop xor adc out in call fstps xor sbb in sbb inc sbb jg (bad) fcmovne jg fisubl in les ljmp xchg jecxz mov sarl add lcall and lea lcall mov sbb enter pop sbb mov ficoml jp ljmp xchg push ljmp mov cmp scas add or cmc out xor roll aaa sbb cmpsl mov repz or add cmp dec scas (bad) sbb ficompl decl lods push (bad) mov push lods push sahf sbb ffreep and pop pop dec push xlat pop aaa sbb push scas fwait lahf in push repnz clc fimul cmpsl stos fcomi es aas xor jae imul jle arpl pop lock mov mov sti mov (bad) (bad) mov fs mov lods or inc loope pop xor xor inc test fbstp (bad) inc push jge adc std jnp adc (bad) in dec sahf add insb fwait lret jle mov pop pop in daa xlat imul xchg (bad) imul cwtl fnop add mov mov dec stos dec add outsb decb jecxz jmp js and or or bound inc lret xchg dec mov insl pop into fmull mov or aad pop xlat pop mov sub jecxz jne cmp cmp dec xchg sahf push xor outsl repnz mov insb icebp xchg icebp imul fsubrp push inc out sub not ja xor shll mov popa std rcr into adc outsb ja (bad) and mov mov push test aas imul jecxz testl mov jle leave repnz test mov sub push mov dec pop sti xchg mov daa (bad) pop inc dec dec xchg jle push adc and inc push (bad) push xchg push cmp jecxz addr16 fs ret mov mov inc and arpl mov out in jp test adc xchg pop pop jno push jb or std mov stc in mov cmp imul or out (bad) adc sar xchg sub repnz frstor (bad) std (bad) out lahf inc (bad) sbb or cmp xchg pop subb pop rclb push pushf out paddusb scas pop jns inc aas (bad) cmc lods sbb sahf add mov lret sbb imul fmul jge in testb lods mov ss dec rolb bound lret insb jecxz (bad) cmp mov inc jo stos pop in jp test ja sahf push xchg mov mov jne test movsl outsb fmulp xchg xchg pop dec adc add lahf inc jp adc push or test jns jb ror mov mov fs rorl das mov mov add lea std xchg mov and mov lret add sub rclb mov add loopne fisubl xor in je hlt test (bad) test mov push mov add cmpsb mov (bad) std jns and sbb (bad) xor movsl lcall cmpsl ss push imul aad (bad) push bound aaa push movsl or push inc xchg sub mov out push cmp jno dec mov insb lock mull fstl cmp int popa scas xchg add ljmp adc fistp inc ret fwait xor or xchg push arpl fucomi push mov push jl outsb outsl in cmp sbb mov mov hlt inc mov stc pop mov add push daa ret push cltd cmc fbstp jge out xor pusha cmp outsb push mov and ds or iret sub (bad) sti (bad) xchg adc dec pop in push pop add adc dec popa fs jo push lock out (bad) mov in fs mov fcmovu loope lret mov inc pop pop enter xchg add xor cmc sbb pushf rclb sti test jnp xchg or jns xchg shlb stos stos sbbb push nop pop cwtd outsl enter xor mov jmp add mov lret dec mov out mov mov sbb fnstcw or stos inc iret cmp mov pop xchg jnp inc lock cmp das dec xor add dec daa cmp mov aam pushf or lods inc pop (bad) ss inc flds aas repz dec jo mov pusha mov in push xor mov outsl jge push lahf aam mov bound and cld mov in mov sbb lcall sub sub call or sbb aad or das cld repnz or add dec jne stos (bad) xor mov xchg pop add inc pushf test or js jg lret push sub call xchg jns aaa push push cmp jbe addr16 loopne pop mov aam mov pop (bad) mov lds in or cmpsl pop dec jmp sub push test and in cmp lock mov js adc dec sub rclb jno popa lods mov rcrb cwtl xor sti mov stos jmp ret pop sbb jmp aad push add ret movsl movsb ja mov loopne pop leave das sbb (bad) sub out inc cmp push cltd or jg int cmpsl lods xrelease fcmovne insl inc xchg and sbb jo imul test (bad) das fs xor adc jb out and popa mov pop adc (bad) ret pop arpl sbb std add scas mov or mov jb stos (bad) pop bound push xor push adcb loope push mov addr16 clc xor cmp or xchg xchg jp xlat pop inc outsb add push (bad) fistl or mov mov data16 sbb movsb (bad) jo mov or mov rolb mov pusha shr mov cld lcall sti aad push mov daa das mov and lock (bad) mov outsl mov pop adc and sub je in xchg aad mov jge inc (bad) and and je push nop mov sahf jecxz loop mov (bad) add push lahf jns adc ret not fild cmpsl sub jg movsl adcl (bad) dec in sahf iret rep ret das test lds cld pop jno cmpsl push add jl data16 fdivr shl insb nop xor jo fidivrl mov gs inc cltd or sub loopne call (bad) repz sub xor cmp in inc push or and std (bad) ffree fnsave mov sbb aas test imul mov fsubr cmp mov loopne popf insl (bad) in xchg mov daa mov mov jns into repnz push sbb (bad) leave pop mov cmp or adc pop (bad) fisubrl sarb xchg cmpsl push jbe adc test cmp and aas jle cltd call jo adc push out cli xchg inc jmp push add xor mov adc ret mov insl in xor mov dec mov mov pop push sub fs lret bound adc inc call cmpsl insl cmp push jnp or jmp cmp (bad) popa mov addl fldcw xor sub int lcall cld inc fcmovb xor fstps add sub mov jp (bad) sbb cli push dec mov cmc xor jnp test sub mov adc pop sub jl popa add push pop pop int3 cmp (bad) xor sbb cwtl cmp movsb int3 fs jle mov mov lret and mov add not cmp rcll pop push mov test loopne sbb push xchg out mov mov xor loop imul mov mov mov cmp imul dec lds je add (bad) sbb loope shll ret push ss jle mov addr16 aaa insb xorb mov popf lret sub test test stos or fcmove add bound cwtl insl mov shlb mov mov xchg lock leave stos mov scas sub cmp gs and stc lret xor fnstsw mov jb mov sarb pop lret sbb rclb jnp (bad) push mov sbb out sub stc jns add cli test shr push xchg mov (bad) je out js imul pop lock adc loope jns xor (bad) int mov dec pusha test jo aad mov fistp and sbb sbb aaa pop loopne mov mov loopne mov push das push mov subl mov push dec out leave push imul mov loop cli in push popl mov loopne xlat push fld aas or stc cmp mov and add cwtl lods out jo rolb jnp adc cmc adc (bad) popf jecxz xchg xchg pop xchg rcl lea lahf fdivr adc dec flds aas jp inc fs xor xor push pop lret push test lcall js test iret mov xchg xchg jae xor push js icebp in sub xchg sahf fdivrs stc stos pop out inc outsl inc dec scas cltd or repnz and mov inc out push xchg out adc pushf rol aaa dec in inc hlt pop mov js or adc stc push bound leave (bad) mov arpl (bad) movaps and jne adc (bad) in stos lret xor test js mov mov dec icebp inc push sbb aam dec cmpsl pop jno add sarl or stos lds add rcl mov mov pushf cmp std test les arpl xchg xchg inc (bad) cmp call push cmp mov fild add btr xlat clc inc push leave add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add iret adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc div rcr arpl (bad) xor imul outsb add xchg sbb dec imul jns jnp (bad) loope and xlat jge add leave sub pushl mov flds pop xor fcoms scas jl test jae mov jns mov ja adc enter rep arpl (bad) jno cmp (bad) pop xchg pop andb cmpb cwtl sub (bad) je sahf inc loop lock out lods into jg dec xor sbb (bad) imul or outsl fnop mov movb inc fidiv mull xor test mov adc xlat loope mov (bad) cmp frstor mov pop fsubrs pusha mov movsl int add sbb xor add mov inc add aas cwtl std jno lret sbb jmp ja push and and and decb fist inc mov push (bad) (bad) imull pop sub push mov xchg stc and adc stos cmp add mov sbb sti sbb mov ljmp inc lahf (bad) mov loope out add dec sbb popa mov cmpsb adc jg fs jno fs dec xchg in loopne add cmp jmp cmc aas adc lock fsubs mov mov idiv mov push push ret xor scas cwtl or add pop mov dec jge sub jp in icebp mov es lods popl (bad) jle push dec and cmpsb pop mov pop bound fstl cli movsb inc fcomp ror into (bad) std dec (bad) jns pushf iret mov lods xor lods movsb aad in pop popa pop jmp xchg call outsl ljmp adc rol and enter lret inc push push sbbl fisttpll sub inc mov or in imul mov lea rcl cli repnz jb fs mov sub mov in ret mov cmp jecxz xchg push push mov cmpsb dec pop jb mov out fs mov dec ljmp pop push dec xor xchg int3 sbb int icebp dec cli mov xor xchg mov shll cs pop inc fucomip shl pop ret inc je lds jl fdivr jmp inc mov js fwait ss fmull das add xchg and dec inc mov mov xchg ret ja push je adc jae sbb dec fnstcw add in or cmpsl int3 pop or pusha cmpsb (bad) sub xor fistpll sub dec loope push and les insb loope jo lahf sbb cmp movsl dec jae mov call (bad) cmpsl outsl arpl iret dec stos fnstcw mov fistl push cmp mov movsb sti ss mov xor and jle stos cmpsl in mov in movsl inc or popf dec push aas push repnz jecxz popa push sbb outsb pop add stc dec (bad) fbstp fdivp jno fisub test xchg cld cs mov insl cmp and leave addr16 xor aaa and pusha (bad) addr16 push jmp fsts adc ss cmpsl cmp lock in and aaa push dec push out out mov inc dec pop xlat mov addr16 add imul jmp push jb movsb or test (bad) mov call in test jecxz and arpl cmp aaa push testl sub sub js cmp lea lahf add pextrw lods fcos xchg jo in (bad) jae dec or xchg inc push ss add test add and xor or mov lods xchg pop and and cmp cmp (bad) cs push pop aas cmpsl pop mov decl arpl jns popa mov xor nop pop gs out push (bad) out pop pop addr16 pop es jmp inc add push outsb dec mov lcall test add decl nop lods cmp cld cld mov fiadd jg ja in adc insb mov das inc pop jne bound jg inc jmp and aaa jmp (bad) sar dec (bad) cmp cmp movsb inc clc dec inc jb adc push adc out pop ret repnz mov mov dec mov jbe cmp (bad) stos inc jge xchg adc (bad) cli fsubrp or mov dec xor cmp (bad) stc in out jl andl dec (bad) in pop call fmuls dec mov push iret test nop or mov rorl push (bad) push aas ds (bad) push lret out push dec arpl pop push sub push jp pop pop hlt mov cwtl into dec in jno inc dec pop jb push mov (bad) fimull mov cmpsl push (bad) xchg adc jo add cwtl pop dec jbe and (bad) jecxz (bad) add pop and stos mov sub mov inc int in fiadd lods xor lretw jp in cltd mov dec jg arpl cs aad rorl mov sbb add dec hlt leave jge mov and sub aad pop jns inc xlat xor lods out aaa mov repz fs mov sbb cmp fs movsl sbb cld xchg fs jp nop cltd fstp out xchg lods cmc aas sub (bad) dec pop scas shll pop (bad) or sahf xor adc dec mov lret cmp jle,pt bound ds in mov sub daa mov adc aad jnp inc mov in insl (bad) in outsl sbb mov pushf sub cmpsb sbb mov int aam or lahf popa dec test sbb inc fs mov mov mov dec xor rol inc hlt push or sub negl shrl sbb lods and xchg (bad) xor std movsl jbe xor insb or mov xor rcr mov pop out xchg or mov xchg (bad) lret test push sbb jge sti push ficoml xor cmp rcll (bad) sbb in pop mov lcall (bad) jmp outsl xchg test xchg (bad) frstor scas scas mov out xor mov ss scas (bad) inc sub fwait push jo test mov jae mov jecxz cmpsb jb mov test push pop ds fwait lret stc (bad) mov mov xchg enter mov and cli clc xchg cmp test inc xchg test iret cmp rorb xorl dec xchg ss sbb (bad) jl inc pop mov xchg and inc push inc cmc dec adc inc lahf mov dec jno or out push fwait aaa repz sbb jns shrl adc jo sahf das sbb sarb stc outsl inc xor notb cmp mov or jge cmp pop inc push (bad) fdivrp mov fildll cmp ja push in lret mov mov fmull cs in lahf sbb call jge xchg pop jb mov inc fnop roll mov jne jo jns jle xchg notb out test adc mov inc inc clc iret out xchg enter fdiv mov mov or sub in cld lahf daa or jnp ljmp dec sahf or (bad) jb leave inc jp negl jns pop or lret pop cmp movsl mov fsts push sti push add bound into out xor lret iret jae arpl pop lods mov or adc lods xchg dec push aad clc es ret and popf ret xor outsl xchg into imul mov loopne arpl std iret mov sbb lahf imul mov outsl xor inc mov and sbb sbb inc or (bad) arpl cmp ds iret push push neg dec daa push push mov or jle pushf inc pushf mov ljmp sub add clc mov lcall stos dec sub pop scas sub cmp notb xor (bad) cmpsl xchg and dec cmp or jns or inc pop sub cli inc fsubrp adc popf ret mov xor pop mull mov in dec xor jbe mov add or aas or inc ret sub das icebp pop dec wrmsr dec sub xor xor adc leave inc scas add or dec out cmp xchg inc outsb js cmp arpl hlt (bad) sbb inc call pop sub mov sub mov inc cmc into cld fidiv mov pop je pop and inc hlt in pushl ljmp push or mov jl mov mov movsl int3 (bad) in out je or lods push das and out cmp lods (bad) push outsl (bad) leave or or and fwait repnz shll test iret flds inc adc leave loop fisttp roll (bad) imul pop sbb mov icebp ret mov or test inc les fistpl add or mov adc gs mov in pop push dec outsl jecxz mov dec xor ret lea mov dec mov loopne sbb mov jl xor orl jne mov (bad) dec xor out inc popf testb mov rcrb mov mov mov stos add or imul and xor test (bad) or add sub jl notb dec (bad) dec dec ja push cmp mov and cli xchg xchg stos pop adc test sbb jp shlb (bad) inc lret (bad) icebp stos pop push xchg cmpsb jbe fnstenv push mov mov sub jnp sarb dec sbb in pusha push pushf lock jle (bad) dec fiadd sub cmp push lock fdivrp sbb sarb cmp pop popf xor clc cmpsl lea dec xor out cmp pop out add fnstenv out mov clc bound pop (bad) push xor imul inc and inc call add add pop insl sub call das movsl movsb movsl hlt rclb iret ljmp je jns lret adc fnop test arpl pop xor rorl (bad) fnop jnp inc cmpsl add jns push pop lods stc add repnz cmc sbb lea mov push jl bound push in enter xchg mov sub stos jecxz lods cmpl arpl ja,pn jne and cwtl add add gs fcoms out stos inc aam mov repz shrl rolb mov scas mov mov or into mov xchg pop movsb ja into lahf or xchg (bad) int3 lods nop xor pop cmp cmp ljmp xchg into mov hlt popf xchg cmp xchg loop int3 or test mov lret stos inc dec cli jno test fsubrs stos and jne xchg insb add add bound faddl jecxz pop mov lret adc test movsl loop (bad) adc mov in lret mov fistpl push rcrl xor xchg clc js inc adc mov popf iret dec add push cmp xchg cs pop xlat out jl cmp adc xchg sub xor bound xchg xor mov pushf jle xlat xor mov data16 loopne (bad) xor sub fidivrl into into imulb and call xchg int push push iret daa pop jne bnd inc xor cmp jg mov inc andl xor mov adc outsl jmp mov stos dec ss xor and adc int pop or in cmp pop push or fstpt shl lods mov pop lahf dec dec insb mov dec loop pop inc fistl fisubr mov sahf sbb adc or test daa lods cmpsb jne pop lods loopne in dec push loop mov cmpsl jge and stos sub adc sub and mov dec bound jg mov fsubs (bad) (bad) jmp in jb mov xorl outsb adc mov outsb movsb icebp jo outsl or adc stc std ret loop dec cmp mov pushl sbb push aaa pop js ja mov or mov pushf movsb xchg xchg in mov mov push mov pop insb and xchg dec (bad) or aas aam aad ret gs jnp js push ds insl call jae es jno mov je ja xor icebp enter (bad) clc mov sub mov int3 pop out and jg data16 bound dec sbb adc xor loope das pop popf sbb add stos in sub je jnp inc insb jl push adc jge sub sbb sbb out stos stos jg xchg aad sub dec jmp ficoml (bad) pop into int rep cli or jb add mov add sub stos addr16 jge dec sub cwtl in scas leave and xor mov scas ret daa pop sub orl outsb cli push dec xchg mov xchg pop adc popf shr mov cld fsubr stos cmp jl loopne lret push shr (bad) mov sub push adc sbb dec mov xor sarl inc (bad) mov jl jge inc notb jmp jns push xchg and sbb mov jl incb mov cmp jl mov out fstl leave adc ds pusha ret imul stos insb and in in lods rcll push sub call sub enter adc cmp pop inc cmc sub loopne sbb shlb fsubrp cs pop mov int3 add jle inc lods test inc mov fisttpll sub gs enter jmp in cmpsb and adc adc (bad) jo xchg xlat sub rorb fwait (bad) add popa push sub in lods imul loope call (bad) push ret adc mov jecxz adc lods sub cli popf cmpsl cmp lea out or fsubr imul mov xlat mov clc data16 cli dec jg mov xchg cli rcrb xchg adc push dec jne fist cmpsl jae cmpsb stc out pusha and mov test loop mov das pop mov mov das pop mov push add incl mov mov add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rcll add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc and inc movsb cmp and dec cmp nop sbb and out xchg and out stc sbb repz outsl dec add out iret hlt loop into clc ja daa push and imul jp mov xor add mov xchg popa into (bad) sbb dec cmp ficom cld outsl sbb mov push pop push cmc pop pop imul pop lret clc clc adc ja xchg popa cmc xor addr16 pop (bad) mov xchg mov mov inc bswap lds fistpl push fidivr sub ret or jne or data16 cwtl out xor sahf cmp jno sbb arpl (bad) bound ja je push ljmp pop ja aad aam pushf and push ret dec add sbb clc test sbb add cltd push loopne push mov push ret iret cmpsb fistp xor sbb mov hlt aam pop unpcklps lret cmc mov mov dec in dec stos repz pop sbb xchg lds imul or push pop sub jmp sub xor xchg inc inc inc sbb mov sbb dec jbe iret push xchg lret sbb inc test mov lret fwait int3 outsb xchg cmpsl rolb jb mov and or ret mov xor fs ret iret ror cmpsb std mov mov xchg stos in adc clc mov sub pop adc (bad) mov mov mov xlat lret and cwtl jge hlt sub mov andl mov jno mov add bound push sub out fimul and mov ds dec fiaddl inc ret ret stos add fwait push mov hlt imul sti push icebp jne lock test enter adc dec rcll xchg (bad) in pop and mov sbb popa aas cwtl fwait (bad) jns iret jge adc inc insl gs fwait in xlat imul (bad) pushf int3 insb out (bad) movsb jg inc pop jecxz add adc and pop jl nop cmc cmpsl and push dec inc aas repz test nop adc and fcmovnu lret in adc aas es mov loop popa roll inc xchg sub dec lret cmp push dec (bad) int lds adc insb and push movsb and imul mov and adc push mov ficom call dec jecxz,pn test and jne (bad) or sbb cmp add movsl sub outsb fwait (bad) jo or mov push mov xchg jnp iret in rorb mov pop (bad) enter mov xchg cmpsl bound pop nop mov cmp test mov cs ljmp imul pop mull mov xchg sbb js mov fbstp aaa jno and mov fcmovu jmp xchg sbb mov jns subl push int3 cwtl sbb adc mov (bad) inc cli push test cmpsl pop cmp std dec xchg fnstsw fcmovbe mov leave xor pop in mov push jge outsb cmp jmp shl outsb iret rorb inc sub repz mov add pop outsb cld sbb fwait pop jb sbb int sbb pop sahf inc test or inc iret fbstp sarb cmp fcompl ret out into jl sbb lret rorb pop fdivrs iret pop insb (bad) or leave out hlt (bad) sarl rorb lret mov (bad) jle jge lods arpl stos pop push cwtl xchg lock pusha lgdtl js in mov dec mov scas les in cmp aas jmp dec adc repz aam adcb mov jb inc movsl mov shlb les bound popa jmp out mov mov popf cs imul mov jae push stos insl (bad) cmp pop pushf in and jae loopne lcall mov cmp add push out xor add (bad) or inc sbb lret adc mov mov jns andl mov std stos xor stos push add gs and popf jmp data16 mov (bad) jp cmc out popf fcmovnu enter cltd repnz stos sbb cwtl inc or cmp mov cld mov inc ret sub imul enter add fstps jnp inc imul push cltd fdivrl or xor mov add dec mov lods scas arpl rcr je jae pop int3 ja cmp fidivr inc out in aaa divb inc in (bad) cmc (bad) pusha arpl loope imul inc mov pop mov lea push xchg (bad) jmp add xlat leave sbb xchg xor fild lods cmpsb fs rcrb pop mov loope ljmp into mov aam out ret bswap jb dec and pop movb int lea and hlt cwtl xor mov into add (bad) pop mov mov popa jo pop pxor or ljmp js jp sbb lock cli clc mov mov leavew lock outsl sub inc clc fnsave pop cmp scas lea mov (bad) sbb pop push dec pop xor jl bound popa mov nop js addb pop sbb iret xor fdivr popf sub push lret adc mov cmpsb or (bad) xchg movq push push test mov inc lret cli or sbb scas mov inc add insb cmp stc cmp mov mov xor test or fisub sbb dec mov pop movsb dec xor xchg mov inc mov cwtl and lret lods dec and in movsb cmp mov sub jge out popa (bad) xor movsb inc js inc daa gs cmp orb push (bad) outsl jae pop sub sbb push in or test arpl adc push mov mov fwait dec jl subl mov xchg sbb mov pop (bad) (bad) sbb jge test mov test mov cmpsl jmp fcoms cmp fwait ds pop mov pop fmul int jae jecxz inc (bad) iret dec ret leave fild inc mov pop loopne sbb mov loopne mov (bad) aaa lods testl lock xchg aam loop hlt inc in dec (bad) pop sbb mov pop xchg cmp mov sbb pop xchg pop rorl (bad) out pop movsbl mov mov inc and popa lret sbb xor or (bad) push loopne stos mov sti and fnsave dec adc popa jne pop mov sahf sbb cmp cmp lods out mov daa jecxz cs jae ret xor insb push adc xor push xchg rcrl ja in in dec push (bad) push or daa mov fcompl push btr jne add (bad) inc test mov xchg popa lds adc xor push cmc push fcoml and pop les mov jae mov aaa mov (bad) insb insb std dec mov aam xchg mov lahf fcoms or dec icebp mov xchg jno es sbb sbb sub (bad) cli (bad) push fdivrp adc or mov pop scas insl xor inc arpl insl (bad) aaa arpl lock adc ds in insl mov xor fs (bad) jge lret pop adc push ret mov mov fcmovu cmpsl div movl push mov and fnsave shll fwait jno sbb mov or (bad) imul out es push test fadds out dec je or and pop cs or cltd mov pop mov add nop lahf adc gs bound in ficom mov out rclb inc ret jae fsubrl mov stc inc push mov in pop pop (bad) out mov jnp push es or adc cwtl xor cmpxchg add inc and ljmp sub xor test xor add negb cli (bad) xor and subb hlt jle mov sub adc out jne adc pop icebp sar jle and sahf and and add rcrl fwait add push xor xor jp test in call sbb lods pop dec dec lods roll pop stc sub in (bad) pop mov js cmp std sbb fs add push jp jmp fbld std xor and dec mov lds dec shrb sbb mov xor (bad) popf ja fldt fistpll add xchg cmc xchg ja add stos icebp daa jo addr16 (bad) dec sbb add stos jns and stmxcsr mov imul hlt inc ret (bad) into sub xor mov mov dec jae frstor into popf xor lock aam push xor pop cld push in mov adc jl cltd hlt mov jge add mov adc pop and or pop int xchg hlt inc add mov sti add idivl fnstsw mov sub movl cld cld add jg movsb lea adc stos inc mov xchg pop (bad) addps or aam cmp add mov icebp fstps push test mov addr16 and sbb pop lods sbb cmpsb xchg inc mov cmpsl jp xor push std rolb lods add lods dec hlt xchg pushf mov mov nop cmp sti decb mov and (bad) into xacquire cmp push sti push scas sub aaa sbb cmpsb mov stc inc ja icebp jp push loopne cmp mov adc push sub and in aam cmp scas mov cs ds dec shl cmc stos mov aaa (bad) (bad) sbb cmp pop adc and inc int3 dec pusha movsl out mov xor jge ljmp rcl mov ljmp add fiaddl sarb stos stos xchg cmp jp shrb cs rorb xchg mov inc idivl mov lcall and movsb cmc test ret (bad) leave lcall xchg jp ja dec xor cmc test jle fstps add gs ret fiadd push rcrb push and pop dec inc fmull xchg insl dec cwtl inc inc (bad) ljmp loopne (bad) push js imul sub jb mov andb jae mov pop stos fistp notb arpl pop (bad) adc enter popa rclb xchg mov incb cmpsl jo mov (bad) jge cli jb and sbb sub mov mov jo fistpll mov shll cwtl mov aas orl xchg adc or in xor push and jg sub das lahf push pop fstpt pop sbb xchg cli cmpsl and (bad) lret in mov stc xor (bad) sbb mov loope scas jl cltd stc sbb daa sub mov sarl or sbb int pop scas add data16 cmpsb gs data16 pop and in sub fwait cmp inc sbb inc inc fstl pop sbb add mov jge mov sbb ret push push fdiv (bad) inc jnp,pt cmpl jb cmp arpl jmp aaa lock push es mov jl in mov idiv (bad) xor sub lret jo sub mov sub pusha mov int pop test pusha jmp add fwait test nop out (bad) repnz xor push pop pushf gs scas jmp mov aam sahf sbb jle jne stos xchg (bad) mov xor ds xchg outsl pop fstp ret mov cmp adc std pop movb adc pop xabort pop mov lods icebp mov add jge or roll or pop push (bad) pop cmp xor stos and sub repz mov inc cmpsl cmpl in add dec ss sbb inc std js jle fs pushf dec clc popa leave adcl aaa fwait mov sub (bad) add cmpsb cli setbe dec cld sbb shl (bad) frstor std clc jl icebp mov sahf adcl pop jl push mov push adc xor loop jae ja mov xchg add iret in pop dec and aad aam imul mov ljmp jnp and xchg sub jae aaa jbe mov pop sbb sub (bad) dec (bad) mov fwait sub mov ficompl out hlt fstpl pop std fwait mov push xchg cmp mov aas push add addr16 pop lret inc jne dec fbld mov fild pop mov dec cmp lea insl inc in sub cltd jg inc push pop mov mov dec aas lock in imul js xor mov (bad) sti fisttp popf iret popa and jae into ret sbb or imul push inc (bad) push mov and ljmp mov push xor jmp mov clc lret (bad) and or and pusha scas cmp imul fucomi aam pop xor shrb incb xchg and ljmp sub ret fs out mov xor and std (bad) lock jecxz xchg mov stos add add dec bound xor stos adc das fisttp std adc mov cmp mov cltd fs das gs ja lret cwtl mov cmp jo clc daa push (bad) fldl pop push in in push cmc mov inc jle ret sbb dec lods xchg cltd cmpsl inc popa xchg shrb cltd or dec insl mov adc (bad) in adc adc or mov jmp inc scas daa addr16 in jb jl pop mov popf push mov sbb cmp and jnp cli hlt (bad) addr16 iret xchg and mov xchg flds movsb jp mov or cmp inc popf mov movsl jl inc mov sub call sub cmpsl mov pop imul mov xor loop cs out rorl push add push aad lcall jnp in fnstenv jnp in fnstenv add incl js or les out add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add iret adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push and jecxz icebp arpl pushf out push (bad) xor daa dec insl dec dec fidiv xor xor test jb aaa (bad) std jle jg cmc stc pop sahf pop push add hlt (bad) lahf (bad) mov imull pop fs dec punpcklbw pop jl arpl sbb xchg xchg xchg xchg mov dec imul or fisttpl xchg push in lret and inc fs out bound int enter orl xchg scas (bad) pop cmpsl movsl cmp xchg shrb cmp mov sub or out mov pop repnz daa mov adc pop fs sti repz adc or mov pop sbb add cs dec adc int3 test sbb adc or push pop aad rclb xchg roll pop sbb jbe xor xchg repnz xor sti outsl mov sbb inc jne jo js dec mov push pop imul aas xchg movsl push lods sbb sti and in lods insl mov lret (bad) fisubl pop mov pop xor mov cmp ja cmp (bad) sahf lahf xchg popf xor inc movsl ret out jp lea outsb xchg pop jg pop shlb xor sbb mov adc repz mov push (bad) lea mov cwtl repnz sub and mov xchg xor jecxz rcrb xor sbb shrl mov iret jb jbe ret loop cld jg sahf xlat xchg push add xchg lods jnp,pt rorb push sbb iret sub aaa (bad) sbb mov mov mov pop sub lds daa xchg sti sub jp dec (bad) cmp mov cmp inc xchg mov leave jb push les and lods push rcrl xchg lds jo fcmovbe daa ret out jbe test push pusha (bad) mov dec sub or sub inc mov hlt xorb or mov or sub and jo sar imul (bad) fnsave jmp jo jns icebp dec inc xchg xor sbb cmp mov in lret mov adc pop lcall lea mov in and xor cmp cmc scas lcall jmp mov push arpl mov (bad) push scas imul int3 xchg inc mov push jge fdivs sbb xor xor (bad) dec mov mov inc loop repnz ficomp dec adc (bad) sub ret dec xor lret mov test and mov stc loope,pn sub xchg fldenv lret fs daa mulb je xchg outsb add push inc adc adc push lea xor out decb xchg ljmp mov dec mov mov ret pushf xor mov adcl jge sbb pop out sbb popa add inc ja dec mov (bad) mov inc jp xor mov jbe add sbb mov cmp mul pop aas imul sub xor mov insb sbb add jp cmp lahf xor mov and aas ss and push pop ret jbe xchg idivl (bad) lret cmpsl sbb mov xchg int3 in xor adc inc insb sbb (bad) fisubr sbb mov ret negl push loop dec in movb sub jns fistpll push jge cwtl addr16 xchg xchg push jno jb fsubrl push fstpl out nop leave dec hlt lcall pushl mov push out pop dec xchg cmp out mov adc cmp sub pop mov or scas je dec ret adc xchg mov dec adc hlt add les adc js push dec cwtl add and mov sub cmp mov cmpsb pushf push pop jmp add mov sar into cmpsb shll mov iret ret (bad) cmpsl mov pop add pop xchg mulb and fsubrl loope and aas xchg xor mov sub mov (bad) mov es shlb pop je ds popa cmc cmp out (bad) fstps xor xchg or scas xchg stos xchg cltd out test push es lock push mov hlt and nop loopne lock jle aas ret pop (bad) and pop sub pop pop jp aam mov dec inc stc push push test (bad) sti test pop jle (bad) jmp mov movsl mov adc cmp add mov sub inc pusha cli mov cmp cmp xchg push ficompl mov and push xchg xchg cltd and sub inc dec (bad) lcall xchg sbb loope flds test adc cmp test imul pusha mov push das movsl addl arpl leave pushf and push dec mov push lret fwait pushf adc and xchg dec jne dec mov cltd jge or ret inc arpl lods xor es xchg out aad xchg mov clc (bad) xor jl jbe xor pusha jle adc push cmpsb loop test sbb cwtl loopne inc lcall jp aas jmp dec inc out inc cmc incl fidivrl int imul xchg mov push and cmp mov mov loop xor mov (bad) xchg outsb iret fdivl scas mov gs xchg lods cld xor dec inc dec jo push fldcw int mov inc add push ja sahf loope fwait call cli je in mov loopne add aad pop jmp rolb iret test mov mov cmp fwait lods cs adc push (bad) mov (bad) inc jno ficomp adc sbb jmp (bad) (bad) inc pop lret or imul stos ss lret add xchg mov dec inc repz jecxz sbb (bad) pushf (bad) test fdivs js mov jne ss (bad) mov stc cltd push gs dec into jge call cmp xchg mov jmp fstps xor repz cmpsb mov add add mov imul pop pop lds mov aam adc cmp ss popa xchg add (bad) xor mov or adc lds and sbb pop xchg sub (bad) test sbb scas inc loop,pn fsubs es sub pop inc aas mov fldcw enter lock cmp mov xor push fldenv mov jmp enter out push int inc push imulb cmc xor mov hlt imulb sti or ja loopne out inc (bad) mov out mov cli pop in pop xor push jno repz push je mov sbb pop mov ds (bad) (bad) loopne and pop cwtl mov pop fucomi cs repnz jno and inc mov dec jbe outsb hlt movsb cmc jns add stos scas in adc mov (bad) lea xor loopne in xchg rclb dec hlt adc sub hlt xchg popf loopne outsb pop out popf mov into insl xchg outsl aas inc adc xchg (bad) incl adc sbbl ret cli push dec test xchg sub push sub fisttp xchg push stc outsl aam (bad) mov (bad) mov jmp mov xadd fidivr xor ret mov xor mov cli fidivrl mov inc jnp mov ljmp iret (bad) cli sub adc push (bad) cmp adc mov mov xchg lods test jns inc out push ficom jecxz cwtl out mov scas in mov mov lea jne push lret pop fimull je push les adc iret cmove mov sbb nop pop cwtl cmpsl cmp sub push (bad) adc fwait jns sub xor xor inc mov lret outsl les mov dec rorl loopne jmp popa lods ror fcompl jnp cltd xchg xchg test repz and imul pop mov in pop ss test mov ficomp cmp imul pop (bad) iret daa jmp sub dec mov repnz test and fs dec int xchg stc push mov repnz je pop test enter or mov daa scas mov mov daa mov (bad) xor cmp or jns (bad) icebp test jge xor xchg jo add cli jae lods jmp push sub adcb mov lock adc push xchg jge sti sub cmp (bad) or inc jnp jg (bad) ror js push (bad) repnz mov daa lcall ds fisttp xchg leave or bound mov xchg lods add pushf imul pop sbb sub mov pop out test jg mov mov xor pop imul scas pop mov stos sbb dec cwtl aam sub out push inc sub cmp or mov push out pusha cmp push pop mull jns jg sbb mov jecxz movl cltd mov sub and lahf jnp mov pop adc mov shlb (bad) je dec fs aas cmp rorb fnsave jle jl orl in fdivl mov push and dec stc call lock inc insl mov or pop movsl mov sub arpl sbb je jb push pop mov adc (bad) cmp lret sub sbb sub lahf jmp (bad) jo push leave add addb jg push aas jmp or mov adc out (bad) in cmc insb in sbb add xor imul add in xor cmp sub test popf pop sar or fimul or es pop outsl icebp imul mov lret jge daa sbb cs fstpt sub imull mov pop idivl dec mov (bad) dec jo call pop inc push and mov xchg cmpsl imul lods leave dec mov inc jno aad pop fnstcw fwait jl jo xchg sbb add mov xchg stc lea imul ret xor ret les out push inc fsubs shrb mov jnp in cli ficompl inc sbb into fldcw mov xor and repz xchg push aaa push fstpt rcll sbb into push mov daa fwait mov (bad) sti out repnz bound sub sbb mov movsl inc sub pop movsb cmp add imul mov jo and lods test mov fisub pop inc lret and sub loopne (bad) loope push sub sahf test lahf stos stc dec jns mov jmp sbb out sbb mov push shrl or push xor lock loop pop mov adc dec pop dec imul movsb xchg pop gs cltd fwait push sub sub add jne xor sbb push ret dec dec mov push xchg push cmpsl cmp mov pop fwait jno loop fldl push push setne out test sar clc (bad) pop pushw mov fwait outsb jp add jmp and mov pop sub outsl adc and and mov pop mov int in rolb inc cmpsb sbb aad aaa mov lds mov cmpl xor ss inc xchg sbb inc aaa jge mov ret sub inc sahf or push shrb popa pop push mov outsb pop dec xor out jnp xor mov sbb fsubrp enter xchg stc fbstp sbb (bad) iret xor sahf dec and adc in xchg mov pop mov shlb mov lea outsb add icebp pushf (bad) mov dec xchg pop mov mov aad aas sub cmp adcl inc lahf adc and mov jge jge jmp dec sar sbb add cltd pop ret mov mov popa bound adc jl mov lods push jecxz add test or enter adc aas jo jns (bad) (bad) cmp dec daa sbb sub jae xlat faddl insb pop fisttp sahf mov or mov mov jb pop daa jp lcall xchg addr16 sarl inc or lahf sbb aaa lahf xchg push fidivl and push fcomp pusha and or out (bad) push and lea xor repz ds xchg cmp adc jns fs and std call (bad) stc sub ss aaa cmc hlt dec cltd mov mov (bad) mov mov inc sub dec jae sub dec mov shrb lock addb mov mov repnz lret sub lock mov add cmc (bad) mov aad fadd out xchg arpl add leave push pop fistpl cltd ljmp fdivs (bad) (bad) xor cmp adc add lcall int push xchg jb jmp push push lahf push sbb push call xchg pusha mov mov subl xor pop fistpl js mov fiaddl sbb in xchg cmp aad rcr cmpsl insb mov mov jo pop push loop and gs test pop or addr16 push imul dec push lahf pop jp add cmpsb fwait mov xchg insl jne pop sbb popf push fidivl mov and stos addr16 std inc scas sub loope sub cmp stos push ret pusha cmp jo lock stc cmp dec cld dec hlt push xchg (bad) loopne mov in test sbb jno pushf dec arpl out outsb es and out or cmpsb xor xor xchg out pop xchg mov mov bound das cld ds (bad) repz outsl std cmc lcall rorb cmp aas pop ljmp mov xor andb or add insl (bad) clc in mov (bad) outsl xchg je dec repz jg sub xor inc sub mov or push mov addb call push cmp mov jp call loopne jle in push ret add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int3 adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb rolb fwait cmp (bad) xor cmpsb mov outsb loop jmp jns mov cltd scas loope (bad) leave dec (bad) cmpsb int jnp scas icebp jp movb nop sahf add push mov mov fistpl rolb div push test dec in outsl cmc (bad) hlt jle mov add les xchg (bad) in sahf das pop pop add in push mov fs imul pusha and pop rcl (bad) jne outsb lret pop out fwait adc mov loop inc pop sbb repnz enter sbb dec insl pusha aam cmp add pop and int3 out adc adc je inc sbb scas cmp je outsl cmp imul (bad) jno fmulp icebp cwtl pop xor into js iret dec jo dec inc xchg adc addb repnz fs lds in xchg fildl ds inc addl inc loopne xchg aad test out pop testb mov add (bad) mov cmp adc push or xchg ljmp pop mov loop dec sbb test jns mov xor pushw clc iret ret sarl dec lds add add sbb mov dec sbb lahf mov test or xchg mov ja pop lahf push push cmp ja popf dec sub imul inc mov push stos ret or lcall push xchg sbb mov pop dec jecxz push sbb xor push cmp pop add nop aam sbb (bad) mov cmpsl push sub gs call mov pushw clc inc outsl test lret mov adc pop xchg insl dec lea loope and cltd call mov dec push sbb scas (bad) mov jg xor dec add vpsrlw push or inc pop jbe jbe pop je popa adc cmpsl xor mov cmc fldl (bad) mov inc jns test notl xchg jno sub xchg outsl jl repz repz jae or inc sbb adc daa cwtl les xrelease cmp or ja inc in int3 xchg out rolb js faddl pop hlt mulb add lock cwtl mov hlt push mov daa sub inc sahf cld adcb cwtl shrl lahf mov jbe nop push scas bound imul ljmp xor cmc xchg into pop lods inc mov mov mov cmp scas ja cmp out (bad) cld xor cmpsl repnz adc mov (bad) xor nop push mov push pop xchg cltd call int3 xchg iret popa pop mov or cltd test scas or mov je mov xor fmuls (bad) mov lcall fwait adc xchg dec fmul xchg or leave mov mov xchg xor bound cmp dec iret jg hlt adc fcompl out add pop aas dec inc jp pop dec pop push pop xchg mov adc addl aas int adc insl pop sub dec arpl aam clc sbb cmp stc jb mov inc stos dec jo sub insl sysexit sbb jne pop xor ljmp (bad) cli ljmp pop push add xchg mov (bad) dec rorb test (bad) cs out pop daa rorb mov jp (bad) mov mov mov mov mov out mov pop stos xchg imul push pop cli sbb and pushf mov pop xor daa xor cltd xor mov jmp je pop sahf out mov sbb fsubl jne sti mov jbe lea pop pusha inc aad lret xor ja scas add push xor sti (bad) pop or stc das roll das scas or imul addr16 or pusha mov lock sbb xor lods cmp dec mov pop repnz daa dec sub movsb push cmp push mov mov pop cltd fs jmp ss repnz xor repnz add xchg mov (bad) mov in repnz int dec pop test movsb xchg bnd inc mov push jnp push add adc jmp fwait jnp or lods aam addb les and mov (bad) jg xor add and jnp int3 pop push fidiv cmp mov mov mov movsl pop cs shl push bound push lea dec mov push (bad) xor (bad) outsb ja out dec pop arpl pop push inc cmp or cmp xlat dec sbb mov inc notb (bad) cld and cwtl ja (bad) lahf pop xchg pop test loope xchg add mov mov in sarl gs out or add lods pusha pop push fnstsw mov iret cmp mov popf jl and or sbb cmp sbb mov push std add mov mov nop dec jg mov or shll aad mov in dec mov loop,pt sbb cmp je mov lods int and mov je xor pop or jl pop add mov lret push xchg subl lahf fs push sbb pop data16 sub mov push mov pop xlat inc insl pop rcrl lcall mov into cld popa sub (bad) repnz pop jne repz push dec cmpl xchg xchg or loop lahf inc jg cmp push inc xlat push inc ja gs lret outsb add imull aam jp sub test pop adc gs data16 cs jle ja ja sbb mov mov pop lds test imul sub xchg add push insb cs xchg fnstsw ret int fadds adc pop xlat adc (bad) jge fstpl inc fmuls (bad) cld test inc xchg xchg mov cmp js icebp cld adc cli pop or xchg xchg mov jmp add jge push mov pop or push outsl cli mov mov add rclb jecxz sbb fmul in aas sub sbb lcall das push lahf int3 xchg pop mov xlat in arpl add lahf xor stos fidiv in mov xor test and mov ljmp sarb lock and outsb hlt fisub pop push jmp test sti ljmp (bad) adc xlat xchg jge sbb jnp jne clc out rclb push jnp out mov add jne arpl adc push dec f2xm1 adc inc dec (bad) mov push mov ficom add pop and cmp mov inc lahf mov mov push push mov mov outsl pusha ljmp in pop (bad) cmp pop xchg jae add dec jno test adc scas mov gs pop mov iret sbb js call or fnstsw jnp xchg call sub sub test loope dec xchg (bad) fidivl les mov lcall in test scas (bad) adc out xchg sub adc xor mov sub mov add xchg dec push cmp cmp pusha xor sbb jne lcall outsb loopne sub fcom fdiv movsl in mov pop inc xor jns mov test (bad) cld fisttpll mov adc push jo in and push iret in rcr jge int3 xor or jae arpl sub sub adc das sbb sbb dec cmp push test in push cltd mov frstor and jns loope fisttp jmp loop and (bad) dec cmp repnz imul (bad) adcl fisttpll sbb sub pop mov or icebp push sahf imul stos xchg sub xor xchg cwtl imul pop dec (bad) jne push or mov icebp mov mov mov inc or into in xor lsl and call call sar repnz pop inc loop out jle sub or daa lods mov dec mov push push das mov incb dec adc lds in push das xchg fsubl xchg xor outsb dec out jo test mov divl popa cwtl mov outsl sub test stc xchg bnd push push outsb sub into ds xor jae pop cmp and adc mov cmc and subb scas sbb lahf call mov and jno cwtl xor addr16 pop fwait sti dec dec faddl push xchg push test in jae lret or cli dec call out xchg pop xchg stc add jns popa subl daa xchg xchg inc cmpsb sbb mov dec adc jne sub ret aad lea call fcomi dec push rclb xor push jl mov lcall sbb push xchg jbe sub fcmovnu sub lods arpl jp push fisubr jp and mov call out pop movsl (bad) adc (bad) loope jnp loop add jne (bad) xor and mov outsl cli out xchg loope ret mov fsubs cmp xchg bsf inc add pop xor fist fnstsw sub inc pop outsb aas ss add sub daa test or ds ss sub les enter add sbb inc mov lea fucomip mov jmp fisttp cmpsl lret lret mov cmp lret cmp hlt or sbb or jns test inc leave inc xchg or push pop loop cmp sbb cmpl lock cmpsl jl scas xchg mov push jl dec int3 xor push pop mov pop mov add push arpl aam cs arpl or sahf arpl push xor adc out (bad) xchg and test repz mov bound mov movsl lods cmp fcos out dec jge mov cmp jne mov in rcrb xchg and or pop std negl iret jne les call sub mov cmp mov fwait push mov dec inc shl mov xchg inc in dec cmp xchg sarb jne negb jae push cmp mov lcall xor icebp mov inc (bad) icebp inc add fs xchg dec pop js lods seta jo in jmp cwtl mov xlat int3 jbe int3 xor arpl sahf rorb pop sbb and mov sub pop xor add adcl ret in cmc mov mov data16 pop scas int3 scas mov mov loope cmpsb std movsl cs stos xor sarl imul das adc xchg jae xchg cs clc outsl push cmp mov push popf jmp mov cmp imul test pop inc js in add arpl ja inc mov fcmove and bound inc and jp pop mov lcall add pop pop jecxz daa les jo and negb movsb and gs cmp pop mov fdivrs leave inc adc scas mov mov xchg sbb nop mov dec cmp dec in icebp enter cwtl flds sub jmp mov and shll lds jg mov mov add sub cmp mov paddq adc clc mov dec push (bad) jg xlat add call out mov les cmp and add adc sti and push gs cmp sub and shll mov movsl sbb mov movd rorl mov jge popa out jl jmp push xchg xchg dec and push aad (bad) push add push mov pop add mov mov lea cwtl ret dec mov xor cld cltd xchg idivb xor sarb xchg imul mov push bound imul fstl int3 ret pop mov stc imull add (bad) jo mov fisubrl sbb lahf lret jne lea fwait arpl xor loope or sbb mov test fisubrl mov cmp cmp cmp inc addr16 insl xchg jne inc rolb mov pop (bad) pop adc (bad) mov arpl mov je pop xchg sub mov test fwait loop dec jl adc inc pop sbbb add push dec jmp pusha in ret cmc xor test lahf mov ljmp popf cmp pop fisubl pop pusha mov cltd push sub or xchg xchg aad pop leave mov jns pop adc icebp mov pop xlat mul icebp cmp pop sbb mov std sub (bad) mov jo pusha inc insb lahf mov pushf ljmp xor mov mov mov pushf sub lret adc xchg inc xor int outsb out int3 mov add mov aad aas out cmpsl ja mov incb sub push (bad) (bad) movsl (bad) push xor and jp jo push cmp sbb add jecxz push adc xchg lret out sbb in pop dec jnp mov out xchg neg xchg daa cmpsl scas mov aam sub push jmp mov sbb dec shlb call xor mov and xor cmp test test push inc outsl lahf mov cwtl (bad) hlt pop test cmp mov frstor mov mov hlt fcomip sti jo inc jge mov movsl push in gs inc mov sti mov lea (bad) icebp ret in fiadd out (bad) inc lods arpl imulb fdivrl movsl dec add je pop mov rcr push mov test loopne insl shrb or ss pop add and mov popf (bad) mov mul adc or pop ss mov cli mov sbb in insb mov dec jmp sbb aas sbb popf in addr16 ret out xor notl icebp dec jb out repz hlt sbb sbb test push mov xchg (bad) lea cs dec inc push mov pop imul and fwait (bad) popf pop fst inc dec (bad) adcl movsb dec stos fwait dec cmpsb pop insb inc lods inc pushf lret mov push push xchg out in jl xchg xor mov out jg std idivb xchg mov jg (bad) push cmc jmp mov jp call push cmp mov add add bound add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int3 adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc add add inc xchg xchg mov add es xchg outsb adc pop pop dec mov je aam adc movsb push out ja imul add ret notb xchg pop (bad) xor fcomi mov xlat pop sbb les loop loopne rorb lods in lods (bad) cmp pop and mov push add (bad) loope pop movsl in cmpsb loopne out test add pusha imul icebp dec es xchg xchg push pop sbb lcall cmp and mov mov ljmp fstl jp jmp pushf jbe movsb mov xor inc rolb push outsl jb or fs cs pop jge inc std imulb jp dec sbb push mov cmpsb jge ljmp mov sub mov repnz mov cltd bound mov fdivl mov andl rcll mov mov rcll pop xchg shl jnp test adc fstpl stos cmc fsubrs test lds loop and sarl rcrl pusha hlt aas stos ljmp rol inc xlat jmp mov mov imul sbb lock mov pushl push dec sbb push test cmp push ret insl jmp mov add or or fsts push jecxz jne aaa pop xchg push fstp sti jl xor push rcl fwait shll push int3 xor xor test sub push cmpsb xor mov lea inc test rcll jg inc dec clc mov mov sbbb push jbe xor mov mov orl repz pop sub pop gs mov mov mov jae pop jp sub call (bad) adc movb sub pushf mov (bad) (bad) cmpsl adc ds and and test repnz es fnstcw jle pop enter out push aas add popa movsb insl cmp sbb adc add jle mov or inc bound cs icebp popf cmpsb push mov inc sub or ret aad bound (bad) and pop mov dec jb sbb or ja xchg xchg xchg pop cmp sbbl adc stc popf or mov jb mov adc jl pop xor push (bad) push pusha ret testl in (bad) jne das push sub mov sub mov mov inc mov stc in inc dec mov add fistl test ret fbld sub adc lods add loopne xlat pop mov frstor and (bad) push xor leave loope test mov or mov pop leave int3 xor sbb into inc scas fs lahf jae dec mov dec sti test aam arpl and pop jmp repnz pop dec std popf nop lahf lcall rolb in test jge outsl inc fmulp (bad) pop rcl (bad) adc andl out dec mov fs mov mov mov inc dec popa jmp loop mov pop scas fwait sub fwait add mov sub out loop xor pop stos push adc nop das jb stos cmpsb mov sub sub sub jp sbb xchg out mov jne jp push mov fsubrl dec int3 (bad) mov push or add pop movsb (bad) mov push outsl das xchg icebp clc sub rclb mov int3 mov xlat cli cli rclb push subl dec mov inc adcl mov or jno xchg pop in jno decb (bad) lret fadds je out jnp test fs sbb ds mov xchg sub pop inc daa test pop fldt mov jp fs pop into sub or (bad) and adc aam das insb loop,pt sti cmp lods cmpsb std (bad) test mov bnd jl ret sbb movsl pop idivb adc enter scas loop imull sar rcr jo and pushf ljmp les mov cs test pop pop incl loope lret cld or cmp xor push push mov cmp inc (bad) mov push in aad lea jbe gs or inc lret push lret in sarl pop xchg mov cltd data16 and mov jle (bad) lods leave push pop sub mov scas insl xchg sbb and outsb mov gs or sbb outsb xor add add mov jecxz add repz xor cmp add loop xchg inc xchg cli loopne mov shrl outsb popf in and call xchg mov fucom aad inc (bad) mov add dec mov test sub rolb mov cmp cltd in push lret mov push in jge outsl sub mov mov aad sahf sub hlt and push arpl fst test lret cmp movsl cmp add jp jge pusha (bad) in sbb add add mov les test nop sub jmp adc dec mov lods dec cwtl call xchg inc sbb lds xor sbb loop lcall lds ror adc mov dec cmp rclb mov jno out push outsl int or es dec xchg sub jno lea lret mov sub mov mov pop stos and fldl dec call int3 mov lahf repnz cmp outsl loopne clc in dec repnz gs mov mov sub movaps jbe or jg cmp cmp push xchg sbb dec dec imul movsl adc fadd push mov sub (bad) push in cmp fbstp mov sti pop roll cltd call push inc int sbb out call cmpsl das out test dec adc cs sbb push dec lods cmp sub aam mov push jne pop movhps add negl int pop mov out mov ja test pushf push pusha fsubrl push cmpsb jge ds addr16 jg fs lock sub adc addb xor or std pop jo push xor sahf cmc add in cmp in jne cmp out cmp (bad) jne repz (bad) (bad) in mov std in repnz enter fimul pop jae mov test fs (bad) inc xchg movl mov sarl addr16 pop pop notl cmp rolb ds out xchg or inc dec outsl in in push movsl aad cmpsl imul ljmp and faddp push popa pop add jg pop rorl faddl mov sahf in jae inc mov pusha test loope xor xchg lahf dec or push push or jno pop (bad) mov sub imul mov divb call jle cli (bad) repnz and cmpl and loope mov push enter sub std bound imul jo xchg (bad) xor inc nop icebp cmpsb cltd xor dec inc lock jnp cli shll jg icebp adc sub stos cld push xchg cmp rorb adc pop lret arpl fcomi mov scas add std mov xchg push shrb dec shlb les mov call (bad) push pop aaa cwtl mov jmp mov jle cmp add pop jp dec fbstp loopne (bad) mov sbb iret into cmp lods dec mov xchg ficoml mov mov or leave sub std lods aam pop push cmpsb divb and xor cmp int pop gs sub (bad) dec sbb add cltd pop (bad) jne ret fsubrl or scas out movsb inc xchg pop movsb gs jg xchg das (bad) push dec fcom movb mov and imul mov cmpsb das nop jne add or shrb popa popa mov imul pushf in hlt fisub or (bad) push inc jnp xchg in xchg lret sbb call xor jbe ja jp stos lcall lock push sub iret add jmp mov in shlb jecxz hlt arpl and (bad) jb dec push popf lahf pop adc inc das je fdivp jmp cld stos jl out inc adc cltd in jp or out cmp and jle jb stos xor leave push mov push stos in ljmp dec popf fadd les sub push andl in stos (bad) adc add insb sbb jae mov out push dec jb leave xor pop cmpsl movsl stc cmp mov xchg mov push lea scas insb imulb out daa mov mov push clc lods inc loope inc fdivs cltd add jno mov jmp (bad) shrb lods test pop iret adc dec push mov mov lods pop dec (bad) insb push cmc add mov out mov icebp std xor push push mov mov jb adc daa mov insl lods lret push add jle and xchg gs sbb hlt arpl mov mov call mov adc addr16 mov or or (bad) jl push jbe leave xchg mov or jl mov subl fidivrl lods push adc adc popa clc sti mov iret add jbe nop fdivs add mov sbb mov movsb xchg test (bad) repz xchg mov lock bound cmpsl mov ds in mov bound enter jmp cs (bad) fwait (bad) xor scas sbb clc mov sub inc sbbl aaa scas iret xor (bad) lods hlt or clc dec fisttp add or jp hlt inc outsb into inc popf aas pop inc adc repz lcall dec xchg cmpl insb mov push sub cmp push bndstx push push cmp or test pop jns orl icebp sbb shll push enter mov stos (bad) dec loopne mov test (bad) js or push mov divb push xor or pop int das adc fldt xor or cmpl (bad) mov sbb mov cmpsl shrl pop or popf cmpsb popf gs inc and jmp add insl jecxz,pn or pop bound push aad inc push xlat xchg xchg aad adc sbb xor sti mov (bad) hlt pop inc movl lret sahf sub (bad) ds loope cwtl je sub jle adc mov sbb inc xchg pop cld movsb dec jg jae fiadd mov ss push mov cmp leave movsb outsl add lods lcall fisub loop inc xor dec inc mov pop xor add inc (bad) mov sbb test mov ja jo fwait lret add xor aad or add rolb adc jl jge cmp imul add lds pop jb scas decb mov aam xchg xchg aad xchg insb sub add add (bad) mov out inc inc popf aas jge (bad) iret xchg fs cmp xor sti pop inc orl data16 nop jae dec add mov sub into push data16 imul cmpsl add outsl fadd jno xchg mov aam push out fadds add test stos cmpsl sub jb xor lock cmp repz mov mov lock loope psubd sbbl or pop hlt or cmp inc in xchg nop js mov pop adc jo rorb je jmp adc sti dec xchg mov or or std rolb inc fistpl daa mov das jns call xchg (bad) and dec xchg and shll add sub fcomp add pop push and jb data16 lahf shlb xchg jg sbb dec in add sub sbb fistl popa sub add in inc (bad) push test sub stc repz aas pushf mov push shr sbb and mov push maxps (bad) mov jg xchg test icebp dec lds xor bound fisubr dec aam loope mov cmpl xchg into pusha pusha lods xor loope inc lock fsts push mov pop sub je leave xor jge push jg push addr16 xor sub or orl test ja ljmp cmc push xchg mov jbe jg inc xor adc pop xor fisubl mov int3 lods add data16 (bad) xchg (bad) scas jno daa dec fcmovnbe jp jno or test icebp sbb stc and (bad) xchg cwtl or xchg jecxz (bad) adc outsb cmpsb xchg inc mov jno pop mov mov pop popl add push aaa insb fstps xor lea pop ret cld (bad) lods (bad) and jp cmp mov dec mov xchg or data16 mov cmp jae mov sbb movb jp in xlat movsb push xchg or sahf arpl call test xlat mov cs sbb ds sbb in xor fnstenv je (bad) rcrl push mov jne (bad) mov mov xor dec push (bad) xor cmp xchg fldcw ja add inc pusha jno lret sbb adc jmp popa push sbb outsl dec mov stc mov (bad) mov stos (bad) (bad) les outsb pop adc adc cmp sbb cltd cmp cmc shlb jecxz ljmp xlat inc imul mov or ret jmp inc add sub leave sti adc jmp pop or fcomi nop out pop ret mov outsb fsub xor or mov dec adc adc xor or lret or cmpsb dec pop push jo popa stos loop dec add loope je aaa stos sub pop iret subb mov insl jge andl rep out ljmp cld out pop js gs mov in lock icebp xor jmp int3 push scas cltd aaa es ret (bad) lods pusha dec call stos (bad) cld or dec popa (bad) pop dec (bad) (bad) xor mov jp mov and sti fs inc mov mov outsb test inc cmp cmp jnp push dec mov add adc pop or js loopne addl push cmp lock addl push cmp incl add pop xchg and adc add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb rolb fsubrl (bad) xor jmp jb les clc stos xor fnstsw sti jle xlat repz add fsts loopne jmp lods insb mov cld test cmp sbb dec sbb lcall dec sti lds icebp les (bad) dec sub or leave inc sub bound sbb sarl xchg mov imul mov cld pop lret cmc mov sbb push mov imul je aad cmpsl clc cs sbb push (bad) mov and jl ret es test lahf aaa mull repnz stc add cmp cs addr16 in and pop aam add pop out insb jo and test cmpsl outsb ljmp pop and std mov mov sub lea pop cmp dec sti mov stc dec adc mov bound push mov cltd shrl adc xor imul xchg jae add ds pop push sub pop cmp clc arpl fwait unpcklps and cld or cs cmp mov out jge int jb mov es cld mov aaa sbb mov mov push (bad) adc scas xlat movsb sub ds cmpsl enter xchg (bad) inc pop mov add jns pop ljmp ja mov mov or icebp iret repz lahf inc fimul movsb fldcw sub sahf lock lret ss ret xor sbb mov movsb push (bad) sti sbb push dec push sub xchg and and mov cwtl es cmc push daa sub cmp imul stos push out or pop xchg jns push mov pop mov test dec mov lods lret dec pop jp adc pop jnp pop inc call dec int3 test dec jbe xor arpl ds and mov mov out push stos fs jmp adc aam cmp mov or and and sbb mov xor test call xlat xor mov mov popa inc ret mov movsl jns outsb inc mov test or jl xchg jle jbe test fwait mov test aaa addb aad jo jge in rcl aam insb sti adc movsl push fcoml loop jecxz ds inc mov dec (bad) jae je jb add or pushf ret in data16 in jbe push or sub out jle mov inc adc mov movsl lods jmp out lods mov fwait sbb loop pop jno sub andnps (bad) add fidiv stc dec aas mov xchg test or or aam gs aas loop mov mov xor cmp or clc and fiadd push (bad) and (bad) cmp mov xor pop mov sub mov sbb mov fnstsw push xchg scas adc sub (bad) xor add loopne ljmp stos jecxz cmp pop stos aam lds inc out pop rorb fs jle jbe jmp inc mov lret mov test rcll fisub outsb test jbe lret jl aaa pop pop outsb bound pop insb push aaa bound pop insb out dec mov loope std sub mov mov clc sbb and iret daa std xor shrl rorl ret insl add icebp out leave das add mov add mov xchg or cmp inc nop outsl movsl mov rorb sar pop xor not std in aad lea movsl cmp or sub dec fimull cmp incb pop test or cltd adc mov push xor lea icebp xor dec into adc addr16 rcl pmullw ret pop jg add mov jl push fcoms mov jmp imul (bad) push xchg scas pushf mov popf gs xor enter icebp arpl adc sbb and cmpsl pop lds xor push cmpsb inc mov xor xchg pop jb and in rorb mulb mov inc cmc stos hlt loop xor outsb out (bad) out leave scas inc mov loop mov insb mov jbe cli mov bound push dec dec pop push shrl stos les iret push stos jb inc xchg jne in dec lods mov pop mov (bad) das mov cld sbb in xor pop mov repz sbb and add mov push xor and fs jge dec mov sub or ds movsb and jo xchg (bad) sub out stc push ret pop xorl outsb fdivrs and test ja push mov out test icebp cmpl jns sarl imul jmp cld pop mov stos jg pusha or inc ret cmc ja or cmpsb testl add jmp mov pop jp fsts pop fmull jno stos out adc xchg lretw and mov xchg shlb push movq and push stos scas scas cmp mov imul jno int cmp fs pop lret imul mov sub nop pop or loop jnp add cmpsl inc rclb or and ret stc dec int scas inc imul jns daa jmp jne repnz cmp xchg je xchg icebp inc jl push (bad) mov and or daa dec xchg fs fnstenv mov fwait pop aaa jmp sti cmp faddl stos adc fwait and mov push daa fsubrp (bad) aaa sub xchg push popf xor into mov loope mov aam ss sbb (bad) jo and outsb or mov dec orb (bad) cmpsb out shl jecxz in push jb jo bound adc ss sbb jns dec and nop inc mov mov in sbb push lcall sarb inc es imul sub (bad) repz popf imul xchg adc jle pop jb stc and leave xorb push mov cwtl (bad) sub (bad) add cmp or outsl mov hlt xor lcall sahf aad xchg sbb xlat and leave push and jne mov dec pop push cltd js cli movsl das push inc dec inc adc jb out mov fstps dec mov and cmp jno out enter cmp (bad) xchg pop (bad) cmpsb push and mov in (bad) loopne dec decb nop sarl aad jbe mov jno inc cli mov mov pop xchg roll adc aas cmp fsubs (bad) push insb push adc sbb stos (bad) inc or sub lret (bad) jne je jae pop insl psubsw loopne stc mov mov jo fisubl imul (bad) mov (bad) mov inc ret jg xor sbb jmp lea mov jecxz xor call ljmp cmpsl aad (bad) push mov test test jnp xchg sub clc ret (bad) jns xor loope or xchg pushl sub cmp daa pop push jbe (bad) push fwait jmp cld (bad) dec mov loope dec test add repz inc and jb mov jmp cmp imul clc fcmovnbe xchg das stos fimul daa or jbe dec jecxz call (bad) outsl fld and fmuls push ret rclb imul test sarl and lock pop xchg fcoms (bad) dec enter mov dec ja mov jnp cmpl dec vpaddusw (bad) insl cs stos jge addl xor add jecxz pop mov icebp xchg adc push adc mov xchg push add enter (bad) (bad) icebp data16 cmp cmp sbb mov jg jecxz ja call cwtl or push gs jae jmp cwtl jle adc (bad) or push sbb pop dec push jo pop movsl adc xor xor jmp jecxz leave add out test push (bad) cld jno pop jae fsub hlt push mov jo je xchg adc or jge int3 jmp push cmp adc dec adc cld inc mov add xor loopne mov mov cwtl inc nop mov mov scas lahf (bad) xor insl inc cmp push es jne sbb sti cmp xchg xchg mov fwait or (bad) fmull fstl popa xlat in jae (bad) sub pop test dec adc push push push xor aaa ret pop loop int imul test (bad) push mov sbb adc mov movsl mov and mov xor insb insl xor (bad) daa fisubr fidivrl icebp pop int3 mov push sub adc inc hlt or loopne pop xchg mov cmp cmp push insl xchg in icebp sbb movsl jecxz mov int sti mov cmp or pop pop jp insl popf push fiaddl xchg fcomip call jb mov sub iret jnp mov inc jecxz xchg pushf stos jb out mov stc fdivl ljmp xor push out fstl int xchg jp frstor sub mov addr16 pop cmp mov sbb sarb jecxz push lret mov mov inc and test cwtl data16 or cltd push insl sub test into cwtl mov in push test cld jl je and cwtl testb mov aam bswap lds inc ret or fcmovnbe adc cli cmc and mov jne pop add int pop out lahf andl lret xchg addr16 ljmp adc or in cmpl lahf and pusha insl pushf in test (bad) (bad) pop lock je mov push mov lods in lods dec inc inc rcrl pop nop cmp icebp dec and sahf sub mov adc xchg nop (bad) je (bad) pop out add mov pop or push push adc mov lods jae xor mov xchg insb repz add adc notb lods (bad) arpl pop xchg std lcall push aaa cli dec dec (bad) aaa mov stos xor ret lret les or hlt in lcall xchg mov lods xlat sub pop dec fisubrl fild (bad) scas ficoml (bad) dec sbb xchg notb mov scas xor add sti add adc or cmc add clc fcompl push xchg addl jbe sub pop in xchg jg loop les sub jg fnstsw in out mov pop pusha stos pop cmp dec dec or dec lods jo push xchg cmc adc jns (bad) idivb xchg insl or (bad) or nop (bad) pusha lret push clc mov cmp daa sbb ret cli out pop cmp mov rorl mov repnz icebp pushf sbb (bad) loopne and lcall popf notl mov (bad) sub sbbb xor jecxz jmp movsb mov stos xchg sub insl fs insl jp adc loopne clc jb jbe or int3 lret jle adc dec popf and mov jge dec (bad) ss and data16 jle fxch xchg inc popf xchg mov jecxz xor dec xchg popa js push sbb jno mov mov fsts xchg mov jo (bad) or cmp mov adc pop sub push ds loope js roll mov cwtl or movsl cmp lret push (bad) cwtl inc sub or and jb leave dec or jne adc cmpsb cli fisttp jmp and loopne jmp sub out addr16 push fstpt pushf dec shl mov mov pop mov inc push lods repz dec mov or xor arpl rcll add mov sbb inc inc pop or call pop add arpl inc pushf dec pop pop rcrl and pop mov int3 test push jmp xor cmpsb imul mov aad aam out push jg lahf aaa push loope xor and push pop jmp popf aam push jnp lret pop push pushf push repnz loope sarb add jmp adc pop xchg in outsb adc int mov xchg jecxz popa mov jae loop and (bad) aaa adc ficompl not cli cwtl xchg push push pop mov or sbb ret mov xor stos cltd lea aaa loop rclb arpl and xor ret inc insb das dec xor sbb mov inc mov xchg stc sbb mov xchg xor xlat xchg mov hlt cld jp rorl sahf mov dec mov inc mov ja test ja jne cli (bad) mov fdivs out aas add cmpsl mov (bad) sub jbe xchg jle fstpl add cs (bad) xor cs add pop loopne and add xor daa es shlb lcall out (bad) call into jbe in scas bound pushf sbb into cmp sahf mov inc jo mov in push xor dec (bad) jbe lahf adc pop in dec cmp mov loop ret mov mov std imul and fcompl icebp fldl mov xchg xor push mov insb inc sub xor clc push push out pop lods aaa xchg rcl mov sub ljmp mov test repz cmp dec cwtl xor nop ret test pushf out cli loopne lahf xlat stos pop jecxz xor jnp pop (bad) not popf dec mov arpl je xor in sbb mov popf mov add dec mov dec jmp fsub lock push xchg popa pop nop ljmp jbe xchg outsl or jge xlat pop scas inc repnz daa sub dec xchg push rorb push adc jge pop outsl dec add sbb fcoml shlb jp call push cmp mov incl cmp lret dec insb jge add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mov add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc cmp dec or push rcl in push movsb mov ja inc push je dec ja dec stos sarb in adc fistpll lahf jmp add rorb sar je mov int add mov (bad) cmp xlat pusha (bad) out sbb std jge ja cmp cld jae and mov pop push aam jmp add sbb add sbb jg xlat daa or sbb cmc sbb clc loop xor fwait add dec outsb fstl and nop out pop ja push xchg xchg cmp and xchg jg stc add mov xor dec loop fs ficom aaa das pop dec jmp (bad) lods push or sahf mov jae (bad) mov inc jns decb sbb nop or addr16 (bad) mov fmull sbb cli mov enter inc imul push enter mov inc push icebp (bad) rdrand mov loop lea pop xor shlb and xor arpl int and inc (bad) sbb pop cmc out jmp (bad) cmp or in lods mov loop std adc cltd inc cld stc cmp gs ss xchg xchg pop addl addl cltd hlt push fisubl xchg (bad) push leave lahf xchg aas pop lods (bad) or fbstp test jl jo xchg cmp cmp int ljmp pop jg fdivs in push mov sbb mov (bad) js (bad) stc mov scas loope mov jp hlt xor push and (bad) dec mov popa xchg (bad) cmp and iret out mov or lock cmpsl pop xchg in pop inc jb adc jge push cmp jl xchg mov mov adc sbb lods fcmovnbe pushf jno jg lcall andl push outsb push inc clc out les jno in jecxz out imul clc lods push lods imul add add pop int cmp inc sub repnz sub pcmpeqw dec mov inc das mov pop adc dec mov mov and popaw add inc (bad) xchg lret loope lock cmpsl xchg mov movsl inc pop dec stc aaa in pop pop xor inc ljmp ja into test fsubs test sub das and repz fmull xchg cld mov fstps and jne mov inc repnz mov jno fstpl decl jns and xor in mov push (bad) mulb inc loop pop mov movsl jns icebp push dec mov cmpl sub mov in mov sarl mov pop sub movq xor (bad) fsubl mov push sub xchg sbb inc inc int3 dec int3 leave sub insl xor outsb int3 gs incb xor add ret mov fisttpll mov cmp pop test sbb movsl in out cwtl dec mov jle (bad) fstps out mov add mov imul jecxz js (bad) fwait sahf test or imul shrb inc mov lahf push sub add push mov and ret std sub scas push push cmp scas sub loope cmpsb jmp ss imul fcmovu and lock mov or out jmp or fldt jno jnp jb arpl es ret andb pop dec mov into add pop dec inc repnz add fdivrs adc lods arpl jbe das data16 andl into and sbb jge cmpsb cmp cmp push and jle sub mov sbb aad or iret mov xchg nop pop ja dec scas addl xlat inc inc sbb rcll icebp icebp loope sbb jmp push adcb das mov jl mov std mov pop mov loope mov xor into cs inc inc leave inc fwait xchg sbb jne (bad) lea in push inc add jbe jnp pusha push insb loopne or cli scas outsl call int3 mov jb cmpsb add inc cld je add test adc dec fstl rcrb add push jno adc fstpl mov jnp repnz orl stos push cmp xlat xchg loope test and sbbb or fisubl jbe xchg lahf aaa xchg mov idivl jecxz imul adc mov stos xor sahf jbe cmc out push imul pusha mov addr16 push mov fnsave imul cmpl sub aas mov out ret jne push dec mov in dec and je test (bad) in je dec sbb sbb xchg dec pusha pop ret pop (bad) (bad) adc cs jnp rclb lret mov ret call rcrl scas and pop ret lahf push dec or sub xchg mov les push or (bad) or mov cwtl push add ss cltd or mov scas shrl loope imul (bad) mov mov ficoml sub xchg lea nop jecxz lahf repz mov and sbb cmp (bad) jb xchg push mov sbb lret jge call daa mov dec jmp ljmp lahf lret mov out cmc push cmp testb test and xchg mov fdivl (bad) cmp dec and mov fstpt or daa lahf push jl jbe xchg pop (bad) (bad) pop cli rorl addb pop lock inc push or or aad insb fsubrp push sbb enter push repnz ret mov xor fcmovnb ret jge gs push daa in inc imul xchg test test fdiv push cmc jge ss idivb sti movnti fisubrl dec inc mov lock fnstenv pop jns dec addr16 jmp test xchg cmp sub data16 das mov pop inc les mov xchg adc (bad) imul int cmp pop (bad) std adc mov fs dec xchg dec jbe rcll push paddusb lret push mov xor cli mov dec int3 jge divl jmp mov (bad) push or sahf clc sub sti jp push add push repz sub mov inc ljmp adc jne xchg xor ret leave jl call adc push cmp inc adc int3 and and fist out loop lods cmpsl dec xchg sub pusha pushf mov fstpt sub ret push xor aas icebp movsb jmp enter mov outsb dec push sti mov pop push jecxz loopne rclb lds and ljmp cvtps2pd bound add xchg sub mov adc xor sbb add jne pop in pop mov xor mov lea inc icebp sbb mov rcrb sub add clc jns test js and cmp imul cmp daa and push bound push jge out push les mov stc cmp mov lahf lock fsubl dec scas jnp push in fiaddl out lods sub and ss add nop mov xchg fmull cmp xor iret fwait mov xchg push inc insl cmp rcr out imul pop mov adc rorl fisubl call pop lock sub xchg sbb mov push pushf sbb mov loope jno lahf aad popf cmpsl hlt jo xchg fnstcw jge lds push idivb push cmp jae push lret into test lcall mov popf mov xchg in loope xor lods call sub xchg sub dec mov ljmp cmpsl xchg popa (bad) xor xorl mov data16 jle fcmovnb ret push push lcall xchg in xchg pop push frstor inc and mov orl loop jge lret push push pop adc mov sbbb and push xchg int3 notl repnz js (bad) js xor das mov rol and jmp mov pop insl push leave cmp sub fwait cwtl mov cwtl stos lcall in (bad) ja fnsave in jg,pt mov inc scas jb test cmp (bad) hlt mov es dec fsubp jns popa push jg mov jp pop sbb sub repz lcall adc and aam lahf jno cltd and jbe cld xchg cltd popa imul gs adc fadds imul mov cmp adc sbb dec daa dec xor (bad) (bad) jmp bnd xchg cli jnp mov dec outsb xchg jl insl lods mov cmp scas lea aaa xchg pop pop sti mov ds call clc push jle pop ja jb xlat add in outsb cmp mov sub test mov imul std sub inc dec mov out ljmp add xchg fsts pop mov add ret (bad) ja sets push push stc enter in xchg push add cmpl dec adc test nop xchg fwait xor mov add pop cli rorl dec cli dec push cmp test in ret test pusha fstpl stc outsb jns sub cwtl add xchg int3 cmpsl popf xchg sub rorl sbb pop sbb mov jne mov jg aad add cwtl pushf jp mov int3 outsb loopne xchg or int imul and add xlat pop fidivl and (bad) rorl jno xorl pop push insl jbe jne mov xchg adc adc adc cmp inc stos mov xchg in xchg mov mov ljmp mov mov insl mov ficompl iret stc inc fist fldl in dec sbb xchg (bad) push nop les pop (bad) mov stc gs dec and mov pop in or in xchg sbb and (bad) insb sub cmpsb pop aas push lret out mov das nop or ljmp sub cmp mov into inc (bad) or call mov mov gs movsb dec mov cmp rcll aad sbb dec repnz jbe pop lea loopne inc add in lock test and xlat jo mov push lahf xor inc pop xchg test cmp imulb or xchg fimull arpl lret jae or (bad) je in xor xor dec faddl sbb adc int3 mov push fs fildll jl sbb int mov inc (bad) jne jno (bad) pop inc sbb nop icebp cmp es jne push faddp out mul pop iret sub rolb sbbl cmpsl xchg in leave cs (bad) mov leave inc adc popa mov aad out dec dec push adc repz or xchg (bad) xchg popf cmpb std sti jp pop in stc mov (bad) jmp pop add lcall xor (bad) adc js in repz lcall jl out sbb mov ds cmp inc xor cmpsb dec mov jns pop stos (bad) ret pop sbb mov pop xchg fiaddl push stc sub shlb insl es out ljmp pop ret cmp (bad) sti and sbb das pmovmskb ret lret or or ja icebp and mov enter adc pop das mov cwtl sub ljmp jge movsl enter data16 rolb stos aaa (bad) in inc pminub out pop add add or cmp movsl xlat scas push pop jnp (bad) ficom push fs dec ficoml push jp push cmp jno hlt loopne test cmp or (bad) lret out outsl mov into loope and pop repz cmpsl jg pushf and xor sbb cwtl daa or push sbb test enter inc scas in enter shlb inc gs mov dec andb addr16 dec inc push rcrb out fisttpll fldl jbe xchg cs cld arpl (bad) dec ja xchg ret or nop pusha outsl jge stos insl sbb imul pop aam fisubrl add xor add (bad) popf decb data16 outsb iret pushf add mov inc push cli movsb push (bad) mov sub ficom or mov push (bad) sti cs add cmpsl ficomp add imul adc push jge lods cmp sub es lds cmp (bad) lock pop (bad) das dec popa divl dec xchg pop shrb cltd sbb cmp fucomi cmpsb cs popf pop xchg xchg pop cli xchg push sub sub ret fsubrs sahf push xor cmp push iret mov xchg imul aam fwait imul call notl in mov in xchg cld ss jb idivb mov lahf je adc inc std adcb sarl scas adc call arpl fnstsw aaa adc xchg ficomp adc and pop xlat and push (bad) jne rcr add scas pop rorl test jb mov sub xor dec mov fimul push dec popa push mov setge cmc out adc insb rclb jno inc ljmp mov push (bad) push notb shr iret in cmc out mov mov stos mov push aam jno cld incb add pushf int lods bound push or jbe je sbb dec int in mov out mov mov fistpll push je pop xlat arpl data16 in pop lea add out mov fwait mov mov in jns imul or lea cli js xchg and outsl fwait and aaa enter xchg sbb mov mov clc ret cmp test mov dec test jge sti fwait ret push pop and divl mov pop rcll sbb pusha hlt xrelease pop movl out lret add dec and jo out mov xor mov into jge das movsl and outsl lahf daa dec sahf cmp repnz xchg daa dec sahf cmp repnz xchg daa dec incb add aas mov mov add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas fmull rolb lahf imul fstp jecxz cmp popa (bad) (bad) int3 aam popf cmp sbb jae popa dec psrlq sahf iret repz jl add scas notl aad popf jb lahf movsl stos and sbb push dec xchg adc fwait je std gs test push or mov stos jle pop loopne lcall (bad) or sti ret and mov cmpsb xor push std sbb push repz xlat ret fisubr stos cs inc pop scas pop xlat aam and pop adc insl jne pop mov stos out bound dec push movsb cmc in enter and inc sub (bad) fstpl xlat js mov insl jmp cmpb dec push xor xchg pop orl jmp inc jp mov sahf fs (bad) lds inc test fimul scas adc das mov addr16 xor dec mov fs mov dec leave pop daa je xchg push jns test loope pop ficompl sbb sub movsl and lea aas ret aam pop jb aad in xchg mov xchg dec mov scas cmc std test aas and hlt lret push bound ret mov fdivr sti aad scas pop mov jl scas and mov std sahf jecxz sub test pop mov test push pop lea cmpl adc mov ljmp pop sbb mov xchg pop test (bad) std lods ja fwait dec (bad) repnz cmpsb or ss dec or mov fstpt pop test in cmp lock jb int cmp add pusha mov inc cmp (bad) sbb cmp mov stc ret or xchg mov ss jno hlt cmp out xchg mov jb push jns pop cmp cmp xor idivb in xchg ret mov popf nop jmp add inc addr16 lds xchg dec xchg dec add xor nop fucomi int3 sub (bad) mov pop sub in and fimul sahf cltd imul mov and jns pop lret push mov (bad) mov xor sub sbbl negb mov adc dec shl adc cmp pop dec pushf pop mov and push adc sub mov rcr mov mov pop lcall sbb pop popa scas cmovl add mov adc mov sbb aas addr16 sub pmaxub push call jl cpuid adc ljmp fisubrl std in jno add fldl sbb fwait movsl sub jno sbb jmp cmp inc xchg das xor fildl sarb ja pop (bad) mov das mov xor (bad) mov and mov test push int3 push xchg push mov lret (bad) or test inc or push mov in mov sti es in test pop mov js lret add test rolb push push call pop rorl cmpsl mov int (bad) test into pop inc push aad sub adc cli sbb cmp in lods stos mov out mov (bad) aaa or lods icebp mov aas mov push jge scas mov jge pop push jno pop aaa addr16 fs cwtl jb ljmp leave mov in insl test add fisubrl add jl push mov addr16 jl push or (bad) adc ret pop imull test sarb xor scas pop lods adc roll xlat cmpsb loopne jns cwtl pop fucomip out fimul subl inc out test es sbb cmp mov out test and cld jg fimul out int3 mov sub push add push pushf adc cmpsb jge pusha pop cld ja out or lret mov jg in and sub cmp gs popf sub jp dec adc loop lahf xor sub mov (bad) es xchg incl mov fs sub stc push cmpsb or and cmp fadd inc scas bound pop gs xor xchg sbb dec lock sub stos iret lods inc (bad) nop imul push lcall (bad) jno out shrb mov arpl faddl jmp outsb (bad) sbb xchg adc push shlb push iret movb sub xchg jnp push mov sbb mov fstp test cltd scas aas lods leave xor loope test mov sub imul es push fimul jb mov xchg or orb push sbb (bad) outsb in jecxz mov pop (bad) movsl cli repnz ljmp loop in popf mov jg test cmpb pop ret mov mov cs push xchg xchg les out mov jno (bad) cs xor pusha leave push scas push jne adc outsb (bad) fsubr adc decb ret out rorl fmull test jbe lahf data16 roll sahf mov mov es mov lcall pop and insl hlt xlat pop shrl cmc add icebp push in js in in in push aam xor (bad) and jno push sbb sub mov mov pop jp in lods (bad) stc xor lods outsb lahf dec es dec xchg and sahf les mov les cmp add add out xchg mov arpl in repz ret aas cwtl jecxz mov nop jle arpl lea push lcall jmp cmc cmp arpl mov push insl xor mov test sbb push pop adc das sahf adc icebp sbbl mov enter subl sub push ss cmp and xchg adc sarb dec ret insb ftst or pop mov lea push push arpl pushf cmovnp xchg lea (bad) orl push xchg stos jmp ret lret (bad) das xor jne test scas sub daa or sub push and leave and xchg jecxz sahf stc pop mov push divb adc pop imul call daa lods sbb int push into dec adc rorb rcrl push ss mov test adc lock xchg enter aad scas ljmp test scas jae fistpll dec inc lret (bad) call push cmp decl xchg lret rorl jno sti sbb mov add jg lods lods push or in cmp mov call push pop cwtl int pop repnz jecxz xchg fscale sub sahf or dec sbb jnp cmp into subl cmp movsb dec push jg (bad) fisttp add sub test insl mov (bad) aam mov mov out pusha add xchg and push xor cmc ljmp jg jle xor sub daa and clc cmp xchg jae ja je cli fsubl jge sbb fldl iret jo sub ds push imul push adc movb xor mov hlt rolw jg leave in adc lods iret loope outsb ljmp dec mov (bad) call sar es iret push xchg mov sbb popa add xchg test inc push outsl and push adc nop pop insb dec popf icebp fsts (bad) mov jmp sbb mov dec mov dec repz ljmp bound inc or cmp push jno sub jmp sub ss loopne out adc sub pop ds push in fisubrl adc push dec shll lcall aam cmp inc push or lds cli fnstenv xchg sub iret add xchg pop lret fcoml mov or xchg gs scas mov mov fldenv sarb jb movsb in loopne fnop nop lcall lret inc sub insl out push roll push mov dec les popf movsb jp leave lcall xor push not mov pop and (bad) sub inc xor (bad) and (bad) push cwtl rol dec outsb push shlb adc inc aas lock dec xchg aaa call cmp inc mov test (bad) daa pop fisttp jne (bad) loope jl shll test into loop xchg jns cld adc jno stos xor cs jno outsb and and aad cmp pop ja xlat test jecxz jbe,pt (bad) sub std lds push (bad) cld int ds add data16 sbb push in icebp pushw cmp int3 adc inc pushf mov jecxz jg push pop es pop jo lret xchg push xchg out cli push sbbl mov les and mov or ja and mov push xor sbb mov and mov call stc mov cmpsb mov iret xchg outsb loop rol clc lods xor xor rcrb xchg pusha cld adc mov int3 cltd cld jnp add in pop (bad) cwtl push push push add fistl hlt or ljmp pop push dec or push cltd enter adc pop das xchg or mov in pop fidivrl mov outsb jecxz scas rorb aad mov cmp fistpll jg cs daa sbb xchg fist mov int3 fsubl mov jne (bad) in mov cmc movsb jb movsl sub test cmp sti fisubl (bad) xlat push inc xchg scas push adc inc sub insl dec test xchg sub mov sbb jmp and xchg jne es cmp adc and idivl adc fcoml pop mov pop mov (bad) pop jl test (bad) mov add int (bad) int3 push xchg into imulb aaa xchg mov (bad) mov fdivrs xchg pop lods mov or jl movsb pop cmp push inc leave (bad) jb test inc lcall das push push cmp mov (bad) movsl pop mov sbb dec and test jnp cmp dec testb repnz mov pushf test aas das gs cmp jnp mov xchg and aaa mov adcl jecxz lea (bad) enter pushw ror xor xlat fs push and xrelease int sarl sub negb clc push sub daa jge movsb xor sub cmp pop pop mov mov (bad) cltd mov sbb mov hlt cmpsb mov test xchg dec movsl popf repnz push mull nop aad ljmp insb and mov sarb gs sbb (bad) adc jp mov mov lock inc xlat scas test sbb inc cmp cmp cmc pusha test push inc shl in xchg pop lret (bad) jb cmc mov mov fisttp (bad) movsb loopne cmp pop mov lods mov ret cmp bound mov subl fistl rol mov lret pop add pop jne pop out sahf mov xor push xor sahf mov jo cmpsb xchg insb pand (bad) dec adc pop push sti mov xor lea cmp jns cmpsb cmp xchg jmp xchg aaa fdivr cwtl jnp cltd inc jle decl mov out adc icebp add adc fist sbb push stos cli jp jge push mov loop mov (bad) fs push push mov scas flds xchg jae imul push ficompl subl (bad) jmp sub jmp add scas mov cmpsl daa inc adc out test and add dec adc adc and xchg mov add (bad) es or xchg inc test insb aad clc or outsl nop mov lret mov loopne leave ljmp fcom adc fild mov outsl stos lock gs mov jo andl pop xor mov scas lds sub pop incb jmp add jge xor mov xchg jle mov stos xorb push mov mulb push (bad) scas push cmp dec jge xor xor repnz adc or sub out fstpt xor fs sub es and mov jg fldpi stc cmpsl or enter mov fwait xor add xchg mov push cmp test inc sub and imul inc mov lds sub inc jecxz jl and sub aaa pop push sbb push mov sbb pop fsts xchg dec nop popf aad std mov in scas in lds push dec mov mov call jnp (bad) mov pushf dec int xchg cmpsl aad sbb xor ret jmp cmp mov in pop adc movb add into test (bad) fistl push sbb mov incb fdivl pop add stos mov insb cmp mov pop das arpl xchg push (bad) les mov xor in push stc add push jge in leave push xchg adc add pop ss sub (bad) jg clc jbe je xlat pop les das rorl rcrb sbb cld fcoml fcom (bad) mov lret pushf mov mov pop aam je lock fnstsw or lahf add out (bad) add rcrb sbbl rorb xchg jbe adc test and fwait cmc cmp icebp jnp fcmovb stos enter imul roll enter sbb push push aad jecxz xor xchg cmp add mov jns cli iret inc mov and or ljmp sub inc sub pop test sub repz or add sbb adc scas lret je (bad) sub xchg xchg and mov or lods stos or mov ja in (bad) iret fstl xchg and jg add pop (bad) out hlt aaa cs test mov (bad) repnz mov hlt dec and jmp sub jmp rolb std inc mov pop or js loopne addl push cmp lock addl push cmp incl add pop stos mov (bad) add add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add leave adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop xchg or out out push fstpl lea xchg lea frstor and rorb ljmp mov add dec cmp (bad) mov or ja fxch and dec xchg cmpl fistl enter mov mov and pop ss pop adc repz dec aad add jbe push pop jo push cmpsb mov xchg cwtl int3 jns movsb jmp lods adc sbb pop ja mov lret push das and outsl subl push (bad) out xor imul xchg in fdivrp gs jp jae std and insl int and xchg aas rclb sbb aaa xor xor leave sbb sarl mov lret loopne dec push pop adc inc stc cltd inc add movsb push dec out cmp fs jb,pn push mov fs ds movsl mov cmp lods cltd imul push mov into idivb adc jbe faddl jmp scas aam dec pop mov divb in popf in daa lcall mov bsr xchg popl jmp pop jno aas stos sarb push and sbb jg movsb push fstpt cmp (bad) mov repnz cmp mov aas jns mov mov adc sub repz fisub push fstl stc mov into pop jns pop arpl mov mov (bad) in adc cli xchg ret cs test add (bad) xor out dec repnz int jle repz push dec enter xchg sbb sub mov jae ret das lret cmp dec dec (bad) mov test cmp dec inc negl cmp das jp icebp adc xlat loop js leave iret loopne fmull mov repnz adc imulb lods and fstl sahf (bad) fwait cmc cmp jne or add clc sahf jno int push add cwtl lcall jmp popf rcrb xchg pushf xchg lock mov xor imul aas fnop adc pop mov xor rolb dec push scas insl xchg adc stc dec cmp jecxz pop push adc or cmp aaa and clc mov cmpsl sbb or xchg mov aam mov das mov subl int3 adc push sti mov (bad) push mov pop pop push insb clc leave pushf pop daa ja fldt xor jp xor inc popa icebp add stos daa data16 icebp outsb lods pop leave mov aas xchg or (bad) sub cmp mov jae stc pop jp mov sub mov ja into dec mov mov frstor cmp pushf scas mov unpcklps sub enter add ret or cmp lcall in xchg add mov call jbe dec pop stos xor movsb pop imull jmp jns ja mov adc aam adc fnstenv test ljmp ljmp scas in pop jnp or test cmc cmc xchg sbb or adc movsl (bad) lock loopne loope mov sub subl cli inc dec mov sbb data16 pusha and xor xor ja sub fs pop test mov dec sti daa sahf push push mov repnz add cmp movsl lret xchg out loop mov lea add dec adc sbb pop and push movsb push xchg mov jl ss imul into push cli (bad) mull rcr jp lahf mov stos sub cmpsb (bad) xchg popf lods pop mov jnp ficoml (bad) or pop fdiv adc mov or mov gs lret xor cmp or lock inc fidivrl jo and js pop jmp adc mov sbb and call mov (bad) cmp mov (bad) sbb mov outsb inc cmp cmc fwait enter mov add dec mov out fisttpll pop adc bound int mov pop lret movsl mov mov pop fnstcw jo adc xchg rcrl ffreep pop mov rcrl lcall pushl jo xlat in andb push lea hlt cmc adc fs rcl sub push mov out and daa (bad) xchg in or loope ss add outsb sbb inc cmc mov pop mov das push insl nop add jno jg js cld mov xor add push adc mov push outsl jo adc in push mov jne adc lret aas sub and sub mov lock pop sub jecxz out or ljmp jmp icebp xlat push icebp jnp pop xlat inc cmp test fwait or incb shrb mov jg adc adc (bad) ss or sbb cmpl pop dec std and mov ret adc xchg jb push mov sahf lods xchg hlt sub leave popf dec flds pop stc and clc ss testl xlat into cwtl adc xchg int sbb (bad) push sbb mov jl les push mov repnz lcall stc (bad) mov lds lahf outsl mov sbb pop xlat scas test cltd test pop jle sub notl or mov fbstp mov ja fisttpll fcomps out imul cld or cmp (bad) sbb lock cmp adc xchg lods mov xor mov xchg inc cmp notb mov push cwtl cmpsl pop (bad) jge pop jmp fild ret add mov push xlat imul mov mov jnp mov and test xor lds sarb push call stc cld add sub pop and cmp popa jb test push lahf mov or mov les addb fnstsw (bad) pushf sub xchg aaa xchg mov jbe fnstenv dec stos push fsubl icebp jmp mov mov fstpt adc ret jmp xor mov lock (bad) push or cs mov das mov dec sbb stos lahf jo jns sbb imul mov push mov dec push mov or lds and xchg aaa or idivl out add out leave ret aam push adc mov xchg mov jnp scas popf sbb jp adc movsl stc fcmove repz adc mov fdivrs pop clc mov pop cmp jne ret cmp ds dec int (bad) out shrb es or sarb inc arpl and jns or xchg inc xor and outsb mov jne ja lret cwtl mov in loope stos pop je xchg mov mov add outsb push into xchg repz int iret xchg cltd pop stc mov mov addr16 or sub in rorl mov pusha iret test fwait push repnz (bad) mov xchg dec mov flds movsl sub sub or data16 mov std sbb in sbb ljmp inc fldl mov and es movsb xchg xchg inc xchg das and lds pop outsb xchg mov mov in push adc push out pop cmpsb xchg ds cmc cmp leave adc lods mov xor cmp nop pushf pop mov xchg sbb stos fisub bound lods mov jecxz sbb dec sub aaa sub stc mov jb cwtl and lods out dec cmp mov jecxz aaa add xchg xchg insb cmp fsubr push mov jnp mov jne add imul sub in mov or outsb mov fstl xchg mov (bad) je adc in imul jo (bad) mov cld or dec fs outsl dec add aas js xchg notb adc mov add lar (bad) cwtl popf movsb sub adc fwait mov cs cmp loopne je imul imul sub int inc movsb ret lds pop adc xor xlat shll xchg mov push jp push insl lods (bad) mov ss mov pop in pop lock xchg ficoml cld test fldl mov pop imul xlat mov dec and scas sbb add xor cmp es imul loope hlt or inc int insl mov icebp dec add jne push iret fwait popa pop inc push dec sbb sarb bound cltd (bad) xor in xchg repnz movsl clc ror je cmpsb adc jmp scas out mov cli (bad) dec iret sub push pop sbb cli push adc imul test outsl leave incl add xlat xchg push sbb inc or xchg fnsave jno pop xlat xchg rcll xchg pop mov mov cmp es (bad) inc imul jnp sbb jmp jae mov jecxz push cmp pop hlt mov pushf scas cwtl cmpsl fidivr lahf lahf pop jae pop lock sti push sbb push roll lcall cs xchg xor shr bound xchg mov cli cld out and mov cmp test mov mov rorl les add cmc pop inc mov pop stos js mov or mov (bad) dec aas sbb xor pop mov mov aad jnp outsb mov shrl cmp sahf adc gs add jne in sub push aaa or jae in popl and fwait movsb adc and lods mov adc xchg push or stos testb pop pop pop pop jbe dec int3 adc mov fildl inc sub adc pop or and out stos mov sbb jae cltd push ds pop aas out fidivl or hlt pusha (bad) jge inc dec and adc push xor push fstpt mov xlat (bad) adc or jns inc inc std cmpl popf out pop mov and or pop jge icebp movsb or push xchg xor lea lar faddp enter inc jp xchg lods lods add xor jle push add addr16 movsl (bad) jmp hlt aam leave adc adc xor scas push ss sarb inc int3 js divb shl stos sbb std das insb xchg hlt adc sub je nop push or or xor sbb mov test cmp stc cmp fist lahf jae inc mov aas scas dec je (bad) (bad) (bad) pushf ret jne leave in and (bad) jecxz pop movl aas mov lcall (bad) cmpsl mov push sbb jbe adc fwait ljmp (bad) in sbb psrad mov into sti cmpl pop rorl mov dec mov sahf test sti xchg popa pop in imul (bad) mov xchg mov mov adc xchg jmp sub ds adc mov jo or jns dec clc dec popa mov dec imul jp adc adc in push sti and sbb int3 icebp jl dec sbb leave xchg add xor shrl pop push dec out xor iret dec movsl push cmpsb dec and lods inc jmp daa xchg sbb in cwtl xor lds dec jecxz in add cli pusha jno sub push mov cmc xchg fildl adc sub call pop fisubrl outsb imul fist add ficoml push cmp stos (bad) popf mov dec cmp pop mov out sub and adc test (bad) out rcrl inc and sbb out icebp lods mov pop mov mov popf pop inc adc inc hlt xor cmp pop xchg sbb ja xor inc jo mov jge add xlat test adc and xchg outsl cmp adc les (bad) mov sar cmp ds (bad) lret ret sub inc dec orl das mov ret sub stc repz inc cmpb clc push push cld lds hlt mov loope lds add mov xchg ret clc (bad) push inc test mov mov ss mov insb sbb stos sbb pop inc mov pop pop andl xchg push inc arpl (bad) jbe aas pop inc scas xlat jno aas xchg lret xor aas inc aas mov leave (bad) out mov lea pop nop scas dec scas or mov xchg sbb pop iret cwtl sbb xchg aad mov cwtl mov xor iret mov jae loop (bad) int cwtl inc sahf out fsubr inc fnop pusha int shrb sti mov out test push iret mov adc enter pop cmpsb iret add xor frstpm(287 hlt insl lret ds cmp push add xchg ja dec cmp adc insb loop aam jns xor imul lock xor (bad) jae addr16 nop lock mov mov xor (bad) (bad) xchg daa fsub mov mov xchg xchg cmp rcrl (bad) xor bound cmc cmp imul and and sub adc cmp push jbe push stc pop std ja pop mov sbb arpl adc and loope mov jecxz out jge repnz inc push and and std push mov cmp and divl fdivrp jp lea pop add sti push cwtl xchg lret aaa hlt sbb notl push (bad) mov iret xchg and jecxz push xor out rcll (bad) xor dec lods cltd cmp scas cli in mulb push push or mov mov xchg add inc outsb pop jmp inc xchg jbe mov push (bad) jo lret inc sub (bad) jb sar cltd jbe in push push inc lahf test dec adc mov repz cld jp jecxz sub jb push sub mov inc addr16 loope and scas mov jg lods mov dec outsb jecxz imul aaa mov adc fcoml fcmovne ja mov hlt (bad) mov lods sub cmc adc jno sub fistpl push sub mov add inc jg rorb xor pop movsl fdivrs dec mov mov xor cmp mov popa out lcall dec (bad) jnp fidivr ret jo rolb mov test mov jp call push cmp mov jg and repnz pop lret add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rcll add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push and jecxz icebp ret xor mov pop fcmovnbe je dec ja out arpl adc fnstsw (bad) jmp cmp je ja sti std mov inc cmp cmp add adc incl inc jb xchg cmp add imul sbb cmpsb adc and sbb (bad) cmp and call adc out push or jnp push sahf mov xor dec xchg lret call xor cmc ret mov push mov test rcrb (bad) lret dec ficoml cs dec jecxz mov and subl push dec xchg gs mov cli push jl jmp cmp sub jns lea das xchg adc adc sub out sarl add dec sub lea mov in ljmp sahf cmpsb push push push fwait pusha or imul (bad) cli adc dec faddl mov fld1 pop mov cs lret sbb jge push adc push jo je cmp bound dec mov outsl das outsb jg xor sbb ljmp fdivs loope in int3 ret push add inc dec mov pusha ljmp push xor pop xor cld adc cmp or repnz int or mov test xchg mov cmp jle,pt fwait lret or jae xchg ret orb imul iret adc sub push je adc lea stos push or xor push pop je and leave (bad) imul mov (bad) jne daa pusha scas bound outsl inc cwtl cmp inc push sbb imul or pop fistpll cli inc or cmc xor or cmp sbb xor inc fisttpl (bad) hlt sub call enter fistpll xchg push jl leave jnp dec loopne push pop inc sub push inc push sti mov or inc sbb loopew ret xchg pop cmp inc (bad) jbe push jmp arpl cltd jno pop fistp inc (bad) arpl xchg xchg sub repz add dec adc jp jno lods mov xor int out inc sub insl icebp push div xor jecxz or call cld lret mov test pop jge or pop xchg and or or imul add out test ds bound mov xor adc cli pop pop push mov cmp jmp icebp ror mov or pop xchg inc cmp mov pop ljmp xchg pop mov cli cmpsl loop add jge push jne sub adc ror add xchg ds jb dec push sub push mov rolb mov imul ds fiaddl mov (bad) jb cmpsl ljmp aaa inc fidiv iret test dec jl jo sbb inc imul scas fsubs xlat das xor sub hlt and xor dec out xchg shrb in fnstenv push je dec daa inc xchg and call pop sar cmp nop jne inc or aad jns mov mov and (bad) push mov (bad) push xchg data16 fdivrs or dec mov lret jb flds and dec xchg adc pop adc enter lods int in in fstp aaa pop into ja out (bad) push shrb jbe sbb std mov cltd mov pop cmpsl push xchg push shlb scas enter imul cwtl push std pop insl dec push (bad) push inc mov sti pop mov cld nop sub cwtl (bad) xorl cmp sbb and xchg push xor test or inc jmp or data16 ss dec daa fwait xor cmpsl sub add add incb icebp add cmpsb mov decb lock cmp (bad) scas jmp in pop pushl xor jb icebp jbe add (bad) ds lahf push pushf sub lret fdiv sub or jle adc lds jne jae push and fdivrp add ss inc test mov xorl cmpsb push and jge je sbb inc cmc dec or popa sbb push insb sub jnp xchg mov cmp mov dec pop int cs push mov repnz sbb pop pop cmc movsl jecxz push xchg xorl sub inc xchg out dec jmp es jno mov int3 pop jo dec fwait addl and arpl stos clc outsl add (bad) clc ljmp out loope push pop and aam push mov (bad) or pop lahf mov pop inc xlat pop sqrtps aaa scas adc mov ds mull jae lret (bad) gs mov adc fcomi std (bad) mov mov sub pop xchg xchg sub imul and xchg lea xor ljmp push js rorb push mov adc data16 stos add fbstp xor sarb cli test addr16 loopne lock and test push pop cmp cmp aaa mov or les movsb je int3 mov inc repz (bad) mov pop jns (bad) pop adc test icebp mov test mov mov push pop xchg out lcall sbb call mov inc insb lds jge jg aas lret imul pop je push xchg inc jns loopne add iretw fs jg xor cmc std cmc lret test pop adc fwait push push sti or mov and loope pusha iret lods (bad) mov imul leave add cmpb in pushf lea sti nop inc pop xor inc dec andl lods xchg ja icebp scas aam mov sub and dec out push mov in xor fsubl pushf clc sub rcll mov sub fwait (bad) jo lods jmp cld and inc xor std repnz cmp dec popa out xor aad sub bound xor (bad) (bad) xor sub cmp fstl (bad) mov and (bad) dec cwtl dec push fstl mov rcr cmp adc push adc loopne push fcmovnb ret or fldt cmc test mov mov mov ljmp mov movsb lock mov rolb pop (bad) fwait pop lea jns gs xor jg mov loop out and ret add inc fisttpll shl aam test test sub ss ret xchg jno push xor outsl (bad) lcall scas cmp andl sub loop outsb xchg imul idivl xchg scas das cmp xchg lahf stos pop movb in sbb inc xlat cmc sub xchg adc xor lret cmp pop in test mov aam sti int mov cmp pop fistl leave mov (bad) mov jecxz addl jg xchg imul mov push mov cwtl sub les and movsb repnz add push ljmp push pushf xchg mov mov cld lret adc jle psllw mov jg outsb popf mov fdivs add fistl lcall mov xchg dec pop js push out les and lock arpl xchg mov pop and xchg loopne push outsb lock outsb pop dec ja adc clc lock (bad) icebp jns jb mov fildll dec enter std jb dec clc sbb gs sub mov sahf adc jmp mov cmpsl push pop sbb mov cli mov fld1 or mov (bad) enter mov icebp xchg dec scas pop iret (bad) xor out pop pop fnstcw push imul adc test jae and pop lahf stc jmp mov clc xor mov mov xor into shr (bad) call out mov jge in mov xchg cmc jno fadd xchg xor test mov lcall fwait cmp sbb stos jbe aad xchg pop lds cmp popa in in icebp lcall jmp lahf ret pop in dec lds add out test pop insl ds sub jecxz imul js,pt jl aad mov and and sahf inc ds mov movsb push sbb jg pop sbb mov into clc iret icebp or xchg (bad) or and in (bad) aad imull dec cmp mov pop stc mov pop (bad) jecxz cltd push mov pop inc arpl pusha sub inc inc (bad) stos xor add push jg enter daa imul xchg lea mov (bad) loopne scas xchg std pop sarb popa cmp scas mov xor mov cli (bad) (bad) aas aam cmp jno mov mov rclb add shr ss scas mov out in pop mov ret out cltd inc jecxz xlat icebp inc aaa sbb push jbe cmp push jmp xchg dec mov enter pop js fisttpl scas jmp idivb pop scas lcall faddl jo stc scas es and sbb jns loopne mov in ror incl ljmp adc ss or pop clc test icebp sbb fsubrs mov mov xchg call mov pop sbb mov mov sub add (bad) out (bad) popf xchg mov jp std cmp popa fldt test fnop divl in lods xor inc fmull int sub ret cmp adc xlat xchg (bad) je mov ds sbb jno pop in cmp enter xor jmp cmp mov cmc sub test push cmp sub push popf and je mov mov in arpl (bad) cs (bad) pop mov std add sub or cmp sbb push dec nop ss popa sahf lods icebp imul les sbb movsb mov jne scas out xor adcl repnz mov jmp fdiv enter cmp lret sub cmp push scas out mov sbb xlat shrl or (bad) push icebp push push subl push cmp dec je jmp xlat dec xor adc or dec insb shrl mov xor xor sbb dec into into ss ret out mov lea and stos popf jbe lods inc mov shll aaa (bad) add and movsb stos daa xorl outsb cli pushf aaa shl add inc ljmp rol and xlat adc or mov rclb (bad) cmp imul int3 adc and (bad) stc bound fcmovnb push popa mov out jne (bad) call pop out rcrl arpl outsl rcll lcall inc inc mov fildll ja inc pop inc hlt clc fsubrs lock gs sub fdiv insl mov iret or lret and mov daa iret jns out jmp aas movsl cmp jg in aam dec int clc jle movb insl out sub sti ja js xchg push mov jmp enter xor fldt push cmpsl dec aam idivl fld aad and gs call nop mov jns sub mov movsb mov in push cmp call add out loopne push stos data16 push push mov mov inc pushf sbb dec (bad) aad pusha fiadd dec add cmc in or adc fldt movl shll lret cltd fwait popa sub (bad) fistpl mov fdivs xlat xor and adc icebp (bad) leave nop mov cltd push sahf cmp and jb lret or xchg aas cli xchg mov fbstp sub scas das adc (bad) mov adc sti add test mulb jno sahf push popa loope imul rorl xchg nop and adc or in test imul repz mov mov push jl (bad) jae call adc orl into or aam pushf mov loopne pop test lahf jge push jecxz jno or sbb insl sub inc popa bound lahf mov pop outsb rclb lret inc mov arpl (bad) ss xor inc jge js mov mov cmpsl roll scas faddl pushf (bad) dec adc inc mov pop inc xchg dec cmp nop mov in jns (bad) (bad) out xor or lods scas cmc inc cmp and pop xchg nop pusha jmp rorb dec mov pop sti or daa and sub cmp rorl int3 pusha outsb and pop cmp repz dec mov in aas xor nop loope and sub sahf mov es fcomp icebp iret mov mov fs out mov xchg ret mov nopl jp or shll mov jmp cmpsl cmpsb or cmp xchg scas das xchg xor ret pop push lds cmc push cli inc mov fwait pop dec dec popf arpl bound idivl addr16 add outsl test add push mull jbe ficomp (bad) out mov scas push mov cltd push sbb lret sub sahf cmp mov mov adc scas mov push push lea fidivrl jbe xchg push aas xchg incb imul cmp pop pop mov xor jmp fistp test xor (bad) jmp call jne in xchg dec dec frstor cmp insb mov out (bad) (bad) clc mov sbbb enter lods je xor or adc scas cmp mov repz loopne mov cli icebp ljmp dec xchg pop pop mov push out je dec add test ficom xor ds std pop cmp cmp sbb cmp jae add bound sbb or pop test js mov outsl loop outsl ss mov xchg mov mov pop ljmp fstpl sub mov aam repnz mov jb movsl fwait dec jg loopne and mov dec inc jmp xorl daa lock mov mov or icebp jle dec mov arpl das sbb js arpl dec faddl lret cmp add cmp in xchg daa dec sahf cmp repnz xchg daa dec sahf cld out add incb cwtl and insb lea add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas adc rolb adc aas fxch cmp flds cmpsb lret ficomp jnp int3 xor push fldenv mov and adc (bad) sti jle xlat repz add out dec cmp mov outsb test cli xlat ss (bad) jge jnp les fisttpll xchg xlat nop mov mov mov es sbb hlt lret push or mov or adc cwtl movb xor inc flds mov mov push and push sahf sbb lea aam xor subl popf inc (bad) leave pop out in inc xchg lea xlat jo movsb mov loope in fadds jbe jp mov scas std in mov out jecxz (bad) dec mov enter outsb pop push lock sahf stos into andl dec sti pushf outsl fs fcmovbe dec aam lock xor dec popf inc and lahf clc sub je push int rol mov outsl in lods sub std into (bad) pop xchg mov xchg xlat or mov aad jl lods (bad) jnp test xchg popf enter xchg lds jg sub loopne scas xchg jo pop loopne test ds scas mov shrl fimul and out jmp mov call sti pushf mov ret inc repz ljmp adc jmp push cld and mov mov jne rorl daa (bad) cwtl es pop mov jge shr imul inc xchg les test inc movsb xor add inc int3 ficoml in clc mov pop cmp add fldt jb pop daa (bad) test test loope mov jb out jb popf adc mov out pop addr16 bnd in rcr out adc sub arpl in ret inc repnz das jle lock dec lea fcompl mov insb push sti cmp dec pop (bad) mov leave pop data16 mov in dec pop rolb xor cltd test pop loopne movsb or cwtl fs mov fwait push mov push jnp inc jp mov mov cli sub mov mov ds mov inc add fwait cli mov lcall jp push mov adc aam into and fisttp adc test dec dec adc jns jle (bad) shrb mov inc test push nop outsb push cmp js inc and mov outsl sub sarl dec vpmaxsw sarl or and loop xchg rclb dec inc movsb sarl test pop dec mov lret ret cli push xlat aas shr jbe les fsub in push pop (bad) pop mov or addb lods sub insb cltd mov leave mov jb or hlt in cmpsl ret test sti pop and insl insl pop pushf test sbb ret add or dec outsb lods xchg mov dec fs jae das rclb jns shrb push mov (bad) dec mov sub mov xchg cmp inc mov imul dec das push sub sbb test imul lods ljmp cmp pop add sub mov push mov add fldenv cmc pop out loope iret jne xchg subl adc pop mov das adc xchg or and sbb lret cmpsl fdivr jmp lds mov outsb mov sub ret lahf scas int3 push dec mov or xchg cmc jge sub mov ret push cmp pop mov aas cmpsl movsb pop push in pusha add repz scas rcr add xchg mov das sub mov xlat sub lods push sub inc adc jg stos pop movsb pop or lret ds add sti mov (bad) idiv pop inc pushf stos dec mov outsl mov adc mov scas cmpsb cld lahf cmpsl in into bswap mov jns mov push clc dec cs push dec imul aad int3 aad jae cmpsl push adc sub ret xchg jae mov into into call push jns enter dec ja hlt mov outsb jo push pop repz shll sub ret cs or es scas xchg pop inc lods pusha pop js movsb cmp daa cld jb mov pop (bad) jp inc faddl ljmp imul dec xchg mov shrl jbe push add ljmp inc in mov je dec subb xor in rorl cli sbb pop ret adc pop mov xor jl pop add jecxz mov sbb jle pop test xlat test fs loop mov pop add push rcrl xchg stos xchg aas movsb mov bound mov sub add out enter mov adc cmp (bad) (bad) das jmp dec xchg insb jb push clc bound fidivl popf jnp sti xor loop mov jmp lea pop mov dec int mov out sbb lea mov lea je out imul fwait icebp and jnp jns mov scas jmp pop (bad) jmp mov cmp fcompl imul sahf ret data16 call fwait fwait xor arpl pop add pop movsl mov xchg mov mov ljmp sub xchg pop sub inc shrb aam popa jns sub jle in xchg jb pop mov cmp subb incb clc mov std out mov mov mov adc scas js pop test out jle stos cs dec cmpsb mov inc cmp or imul dec into inc stos imul lods data16 pop sub mov cltd pop mov lcall test adc adc stos jp and lods fnstenv sbb sbb pop xor out adc lea jmp xchg bound xor dec cmp mov cltd dec std jns inc shlb cmp cmpsl stc mov in fdivrp loopne shrl xchg push jl cmp (bad) movsl iret aam test lods xor pop push and push add fiadd jns sub and sub jle lea sub pushf mov out imul xor (bad) pop mov sub adc jmp cmp sbb lahf out fcompl lods aad push jecxz mov gs xchg in movsb dec lods and (bad) (bad) sub push js lock andl movsl inc or loop in fdivrs xchg nop outsb and es cmp int cltd rol (bad) jg mov fnstenv lret sbb call or inc or lea add xor scas push jbe rcll cltd sbb lret mov imul xchg cwtl pop xchg or jae jne roll or (bad) daa jnp nop mov sub cmpsl pop jns pop mov jle pushf xor cltd jne mov jo adc das add sub xchg rcl idivb (bad) mov loope or adc lcall sahf bnd push push fistp xchg mov jo aas lock xchg and and andl in data16 mov inc fisubl pop lods dec (bad) adc pop add nop add jecxz push dec into fcomps or jae out imulb aam xor decb call pop int3 lahf in inc xchg add (bad) fcoml sub test xlat and or pop out test rcrl clc add movsl adc std mov jns sub sub or pusha sbb into jp shll fsubs xor push sub (bad) adc jl jle or fmull ret jns pop xor clc and add cmp cmc dec jmp int3 fildll jp and xchg sub cmpsl call cmp xchg data16 mov mov sub inc out lods jnp insb stc or (bad) (bad) xor das add inc mov (bad) icebp packssdw fnstenv rcr int and mov je sub mov add jecxz pop repz xor std xlat lea es or and mov fsub insl fidivrl mov inc xchg push rcl mov out arpl xlat leave les cwtl pop mov fsubrl incl out inc mov mov lds nop push scas ds loope jbe (bad) loope xchg xor gs fcomps std push adc mov cmp add jne imul xchg adc js adc xchg dec and leave ds inc xor jns sarb jp and xor inc test cmp mov inc dec ds mov mov xlat call pop (bad) fbstp aam push cld int mov xchg pop sti repnz mov cmpsb pop (bad) fisub jp imul xor ljmp jns aaa insl sub inc cmpsl jno loop push les pusha push cmp lahf je pushf jge jae jbe ljmp push (bad) jns ds outsl sub mov insb jbe aam adc mov mov xor mul popf inc rcl mov jne jb (bad) stc fist fist push stc inc ret jbe lea pop mov push mov fsubrs ja sbb das ss pop or mov les and js dec jo adc ds mov mov jne jp pop pop js (bad) lret cltd (bad) sbb mov movsb xor stos shr aad or lea test out push cmp sbb fbstp adc ljmp repnz incl push or cmp and jp inc pop jge (bad) cmp retw or lret out repnz mov mov inc mov ss cmp mov inc inc (bad) dec cmp rcll or insl push lds imul aaa imulb xchg pop (bad) xor fdivl inc cld mov scas clc jo fs fwait and mov xchg cs pop inc and int3 adc mov rolb mov out pop pusha in push jo dec std lods daa mov mov inc cmp stos into pop push push lret jne movsl loop mov jae imull lods lock lret jp popa fdivrl (bad) mov subb movsb and (bad) mov inc test insl arpl or ja,pn cltd adc sbb jge jno sub or pop lcall jle clc iret add jne push out mov scas (bad) scas jae adc lahf imul or jge les in mov out addr16 pop stos int mov xchg scas pop mov fbld xor test repnz in dec mov pop daa mov pop sbb fxch add fbstp jge adc xchg fsub mov add add xchg in fild js (bad) clc js out xor fildll mov rcr imul add pop cmp testb mov fucomi push mov stos mov mov push (bad) mov enter push mov (bad) mov loop mov or outsl pop sarb adc xchg je mov mov stos mov push pushf and shrl mov lea dec lret ja sub jp and pushf and loope ret jae das add sub fwait cld dec les sub rorl and pop pop mul adc stos push ljmp mov cld ljmp sub ss outsl imul xchg repz int3 ss cmp (bad) stos arpl fldcw xchg lods xchg adc fist lods push xor mov int and sub pop popa imul sub mov dec bound lahf sub das out dec out (bad) mov scas xchg fwait add cmp movsl (bad) mov xlat movsb mulb mov dec cmp jo (bad) sbb mov das jb sbb push push add mov xor in push test repz (bad) sub cwtl (bad) out mov iret cli outsb jmp inc add or lods jns ret and push dec add ja arpl arpl inc lds sbb dec inc iret repnz xchg rcrl mov add sbb mov les pop daa cmp orb add xchg pop sti pop xchg int3 pop jnp dec pop stc mov xchg popf icebp fmul push pop pushf stc test icebp push xlat pushf and mov xor mov out lret pop xor adc or lea lds loop sbb cmp sti mov lds rcll inc xchg mov jo mov mov and pop jbe movq jp xor dec xchg movsl xchg push aas xchg and or fs rclb adc sbb aad inc push mov xor push mov pushf outsl push pop xchg or mov mov dec fistl bswap daa movb fwait lea roll shll outsl xchg (bad) (bad) mov frstor std orl div lcall add add or jno mov lock lret or push add sub fldcw sbb push inc push push fistp sarb imul xchg movsl mov add (bad) mov add (bad) xor sub jmp cmpsb cmp mov push or add and aas mov xchg jae sub arpl and repnz arpl fimul cmp arpl sbb sbb data16 (bad) lret in push loope or pop inc aas jecxz aam enter lcall push orl in pop pop leave shrl mov mov cmpsl mov arpl (bad) (bad) aas push inc cmpsb xchg cmp das push cld adc mov enter dec pop cwtl mov sub jns fdivp mov rclb call mov xor aas jecxz int cmp mov jmp push cwtl out cmp aad adc mov fwait icebp mov pop (bad) cmovl nop sbb lcall mov jmp cwtl dec pop in pop inc cmp inc inc sub mov pop nopl lock addl push cmp lock addl jg add add mov add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rclb add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc push push pop adc mov dec ja nop out rorl mov adc add xchg inc pusha test je mov or (bad) xchg xchg mov out cmp jo mov mov das loopne fistl and imul or and outsl mov cmp xchg fistl subl xchg inc pop testb jne sbb xchg sub pusha push ds pop dec dec mov std cmc pop outsl daa popf pop jecxz mov mov clc sbb and xor jb fildl cmp mov cli lret lods repz cli add sbb sub ficompl les rcll fiaddl (bad) mov jne out fistpl sub dec int3 cmpsl loopne daa adc arpl outsl jle call or in mov and stc in hlt xchg jo jnp jmp cltd add xor mov lods loope scas or pop jecxz cld int ret fadd shlb stos cmpsl fcmovu dec adc popa fiaddl lods push mov and je sahf lahf and in lahf je sbbl aam cmp lock test and outsb in mov xchg jp dec iret mov mov or addr16 or inc push or mov aad lret xchg test mov imul lret aad sti (bad) xchg cmp and idivb push (bad) and hlt icebp into mov call pop outsb sub in fidiv notl sahf stos movd sub ja mov (bad) and push lret dec sar add cwtl repnz repnz dec adcb je cmc (bad) jl enter xchg enter sbb gs jge pop loope xchg ja fsubrs dec shrb sbb cmpsl int lahf xor or jns sub popa in mov and adc data16 imul ret cmp ret fcomps and jno mov loope subl mov sahf sbb (bad) xchg sbb fisubl movsb mov pop fcomps sbb mov mov push jp dec mov jg or lods push or in jne adc faddp sbb daa or inc mov dec outsl inc xchg (bad) rcrl xchg in push inc mov sahf cmp stos pop pop mov and jb je lods jne ds icebp into idivb jecxz pop stos cli jmp dec in mov je and loope sbb cmc out dec inc leave pusha ja push mov xchg mov cmc aaa leave mov cmpl mov ljmp xchg pop sbb hlt (bad) insl ret hlt (bad) lea mov add fstp inc (bad) sbb notl inc mov mov cmpsl stc (bad) pop notb rcrb or outsl int3 mov or sub lret dec aaa testb shr inc lea mov test sub out (bad) sbb lods xchg xlat inc lret dec loope xor lret bound in (bad) pop icebp add loope cmp and xlat aam mov cmc and adc ss pop xchg call and push sbb fmul pop pop pop pushl mov mov push xchg (bad) inc add add iret push sub adc xchg (bad) jne cmp ja lods lret pop push test inc and add gs jp inc ret fwait pusha setne pop popf push and xor rolb mov rcll mov pop ret dec add cld dec ret mov jne xchg pusha jae inc push cmp dec adc call aaa aad xchg stc mov les dec lret fwait sbb ljmp pop push div fs jno push ss jge daa inc xorl dec sbb scas sub lock mov xchg pop in pop hlt cltd shrl inc and pop aaa (bad) jbe mov inc outsb cmc or add inc lahf jl inc and lahf push mov std movsl mov pop addr16 dec cmp add sub icebp cmp cmp repnz je push cmp insl fldl test scas xchg mov imul and adcb push jmp dec out and jmp pop arpl into mov mov js cli shrl sub dec arpl outsl xor das ret and mov int3 push (bad) sti jno xor pop jp jp push arpl out je or inc add dec dec xchg cmp sbb cmp out loopne dec scas icebp out cltd and popf rorb inc lcall nop mov and push pop pop add xor sub sbb sbb push push sub lahf cli inc bound test mov mov jle,pn pop stos pop cmp mov hlt add repz mov inc xchg lds jp mov jnp mov jne lret adc xor fstp lds rorb ja add dec decl cld scas cmp in mov cld clc inc dec scas sahf insb in dec or iret sub (bad) xchg imul pop cmp std xchg cmp and sbbb mov lret sti or inc imul lock pop and mov sahf mov mov popf ds gs push dec sti xchg lock dec fisubrl stos sub fwait loopne (bad) dec sbb or add sbb mov in mov out push int mov xor sub fcmovnu outsb out xlat sbb rcrb js adc std and std push mov cli stc sbb and jp cli insb pop repnz rcl jmp and and push pushf sub leave xchg cmc imul sahf inc sahf jbe arpl (bad) sub or cmp mov js (bad) idiv cmp mov and stos pcmpeqb adc xor jecxz loope and and mov xor jle sarl out dec xchg hlt dec pushf xlat mov fist in ss push xchg jmp and cmc cmp sarl push cmpsb push adc push adc ret add daa push call scas fstpl fwait jp jno lret (bad) sahf (bad) push fdivs es mov test insb stos add inc lods push dec test pop imul hlt or rorb mov pop ret adcb repz (bad) push push rcr ja sbb lds pop pop loop arpl xchg sbb popf dec cmp and in shll dec mov mov mov lea bound imul jbe ss aam dec std stos fdiv data16 add cmp cmp mov dec stos mov out fildll insl (bad) fs mov jne mov adc in into and leave out sbb rclb mov stos ss dec enter pop jl sub loope adcb fs mov clc sbb mov and test in xor icebp jle xor fstpt jle icebp in or movsl or or inc cmp jecxz fildl lret xor xchg mov aaa and pop pop sbb cmp cld mov in sbb pop lods add cli and nop inc adcl xchg and pop or test push mov cs sub pop adc stos cmp push or mov enter cmp lds into or lds and jnp (bad) and pusha push (bad) jg aad mov clc mov (bad) mov or push and cmp sbb (bad) fs xor mov xchg mov test out jne sbb lds jnp iret push sbb mov push lods cltd inc lret jl movsl leave test outsb (bad) out loop inc fcmovb sahf aas insb sbb jg ret xchg fwait push add xchg dec js arpl int3 pop inc (bad) pop mov xor xorl dec lea dec dec push xchg loopne cmp jmp mov and cmp or dec cmp sbb stc or xchg call adc mov mov cmc js mov xchg inc xor jecxz,pt sub or add fidivr cmp mov jecxz adc fcomps sbb xchg subb les mov out xchg cwtl jl lahf xchg jae sbb xorl fcoml outsl adc sub mov test aaa mov push pop sbb sub or clc lods pop push mov mov lea loop adc daa mov or in push movsb in pop push adc mov aad insl inc mov cwtl push mov sarb lret mov pop shrb lcall cs int notl dec fld pushf mov nop jmp (bad) xor (bad) push insb (bad) xlat mov gs inc inc mov imul sub ss lret push aas dec lea push jmp test mov clc lods sub out xor stos mov sub xchg scas jb popa popa call mov imull insl rcl bound mov mov arpl xchg push mov dec xor pop add xchg rclb pop stc test loop loopne int3 mov xchg mov or mov sub fisttpl mov mov cmpsl mov and push mov add (bad) pop sub dec pop xor dec mov int3 inc fisub xchg sub xchg mov mulb rorl dec pop xchg push pop sub mov inc notl dec in xor addr16 cmp imul xchg imul mov push xor mov dec cmp jge inc (bad) pop lock aam pusha outsb (bad) lock xor jnp inc mov inc xor repnz push and test mov sbb xor idivb repz int3 leave push movsl jb daa fcmove btr xchg les pop into pop lret loopne mov mov inc call and rclb mov pop stos add movsb lods aaa into movsl and icebp xor or popw mov int loop jne loopne cvtps2pi or cli jns xchg int outsb pushf in stos push ss dec mov sbb inc bound sar fidivl repnz das cltd cwtl fs dec push jb dec mov xor xchg mov mov xchg clc rcrb les stos movsb stc sub in mov iret test ds add das aad or push cmp stc xchg dec sbb xor jno or popf xchg jb xor or (bad) imulb cwtl arpl mov push push push cli lahf add mov push mov test fwait leave sub hlt outsl dec (bad) leave push push cli dec mov mov jmp inc (bad) push das (bad) mov ljmp fwait xor mov xor pop stc add lcall mov adc mov (bad) out push sbb pop push sar and xor pop or sbb test sti daa jmp jnp push cli push stos cmp roll lock or push xchg shr add aam imull mov pop aam in adc ficom xor push push in mov mov cmc push pop repz jae movl jge add les lcall in fisubr (bad) xor mov cmp dec popf decb das gs sti jl adc add fnstsw dec cmc adc ss cmp shr xchg rcrl pop push (bad) mov push clc jl jmp pop movsb push mov out std xchg sub je ljmp (bad) xor adc scas arpl gs adc cmp cmpsl pop pop pop pop xchg bound int3 in cmp adc sti insl test sub lock aaa gs lcall in push fimull dec jg xchg mov sub push das mov push mov sbb dec push leave lcall (bad) out mov adc inc or xor jle jns ds out or mov pop fdivrl aam dec mov std scas sbb pop fs xor cmp and insl lcall aaa push imull push xchg inc jl cmpsl clc (bad) mov sub data16 cltd mov nop xor mov in movsb ret pop sub pop nop pop push xor sub push xchg cs push into rclb xlat jbe dec scas call ljmp aad lret jb adc js stos aad lahf ljmp sbbl aas sub add fnop nop jge sti pop mov rolb cmp adc cmp (bad) jae outsb inc stos sub mov push sbb sbb daa adc mov dec lods int shrl mov bound in ret icebp add xor jge xor rcrl jp mull jecxz xchg dec push ja sub mov (bad) shrb not cwtl insb or dec jnp mov xchg lods int mov ret cmp add sub xchg hlt pop adc dec dec test fistl in sbb inc xor ss pop sti mov lcall mov (bad) inc mov shlb insb sti xchg mov or push aas pop (bad) fwait pop jnp jg out mov (bad) imulb es jmp add xor mov push lock jbe stc mov push cmpsl daa or bound fistp cmp imul sub je orb add test jo (bad) jecxz or das adc pop (bad) pushl fs imul test sti out cltd inc stos not mov in dec mov fidivl sbb jle push scas mov popa sub push push xor mov mov and xor push xor dec xor xchg jo adc push xchg call cmp test inc stc gs xchg or xchg xchg sub inc push cli mov jae mov mov xor out sbb mov aaa cmp and adc mov jne inc adc jno hlt nop jl jae cmpsl xchg or in je xchg lds xchg mov or (bad) push fistl test fcmovnu pop (bad) (bad) cwtl and repz dec negl mov xchg and jg sarb mov jnp out fnstsw (bad) cmp cmp push mov xor add add dec inc scas inc pusha (bad) or sub add add xor pop fs xor or xchg push fdiv bound adc inc mov mov outsb sbb pop in dec dec mulb in pop ret mov mov mov sbb mov xchg cs fsubrl mov int xchg (bad) aaa xchg lds outsb scas mov add mov inc (bad) xlat dec lods xchg (bad) loop outsl adc ds inc sub (bad) dec aam adc sbb add add mov adc out (bad) jg pop mov pushf lret popf call sub in aam push testb adc mov aaa mul mov sti jns cmp (bad) movsl mov (bad) (bad) dec sub mov lahf adc jbe xchg (bad) aad repz push jbe and push imul jae cmp or inc std pop loopne fnop mov inc hlt bound lahf sbb jge mov xor or test cmp gs mov dec arpl inc mov mov push movsb (bad) ds bound leave add inc xor test or xlat jb (bad) mov push popf (bad) jg xor inc mov pop imul out call cs dec enter or icebp stos pop or sbb mov (bad) sub mov imul inc inc jge in xor adc gs (bad) cmp fmuls jno xor int3 push pushf inc xor lret jg mov sub dec lods in add clc sub and bound mov mov fist sbb cltd sub push xchg mov add cmc (bad) sub (bad) (bad) cmp mov dec loopne and sbb push rol add xchg or lods lret pusha sbb pop cmp pop jne pop stc hlt push bound lahf xchg sub mov and sbb mov and and push dec cs lret push jbe (bad) es fcoml xor aas cmp subb xor dec int gs in pop sbb lahf in repz sbb test xchg cmc sub mov test jbe xor sub push out xorb bound inc addps enter add pop mov fs lahf fnop sbb orl dec mov xchg adc daa sub sub fcmovbe push mov loop pop push pop jl xchg mov mov stos (bad) push pop movsb push xor jmp ja ret cmp add arpl stos xchg fcmovnu and adc pop mov int3 jns adc xchg add or sub inc imul xchg mov lret cmp gs faddl les or mov (bad) notb test das sub xor xor mov scas repz and push mov pop jl push and or out sub cmpsl sahf cmc fildl or and (bad) xchg lahf mov and mul repz inc shlb bound insb sbb xchg mov and (bad) icebp adc lock jmp ljmp pop pop (bad) sub mov jmp fdivrs jae dec push add mov scas aas stos xchg pop adc xor jg add xor and adc push and out sbb (bad) out pop inc mov pop aam mov iret cltd sbb mov jecxz sbb aad test fist stos mov les jecxz out (bad) divl cld dec pop push jmp mov lahf pushf in push (bad) xchg clc hlt dec imul and cmpsl jmp xor or stc inc cwtl daa mov cmpsl (bad) outsl es iret push jecxz scas lea mov ret or in je movsb xor sbb inc add add inc adc aaa adc sbb (bad) mov mov xchg add cld jne or mov scas ds mov sbb sub mov fistp dec push test lretw test arpl xor pop stc push stos mov in outsl push xchg lea dec les cmp pop mov nop call mov lods xchg mov outsb inc (bad) fstps cmp mov jne or notl cmp fwait aaa lcall xor mov dec addps outsb ret dec test inc inc (bad) mov cmpb cmc pop arpl stos scas inc nop fwait push ret clc mov in gs sub and dec test or aaa pusha and adc adc adc add (bad) lods clc cmp mov and mov inc sub (bad) (bad) xor test inc add rorb mov adc cmpsb aam ss or xchg out pop mov stos popa popa clc dec daa cmpsl inc out cmp cltd rcrl stc jae mov xchg stos xchg enter mov out xor dec mov shrl divl popa xor imul rorl das adc jge mov clc adc sub lds popa jmp rorl xchg aam dec ror (bad) cmp dec loopne fs lcall sbb push (bad) mov add incl mov sbb arpl cmpsb std movsb lds scas mov shrl jnp mov (bad) aaa dec adc cmp pop enter fstl or dec lods das mov xor cltd add or pop adc pusha jns ret mov add lcall pop push fidivl sarb mov dec scas dec test inc xchg cmpsb jae aam cltd mov sub imul mov es lods test in gs push hlt jbe pop (bad) aaa lret adc adc popl dec cmp rcl jle xor mov sbb ds sub (bad) lret xor test push add test and inc in (bad) je mov jbe push xchg dec push mov sbb sahf clc fwait daa push inc ss cltd test jp mov jae stos mov dec repnz mov push inc notb xchg rorl testl mov test mov jmp test inc or mov int dec cltd sub enter shlb ror dec rclb mov dec jo jae inc dec fstpt xor sbb pop rcrl cmpsl dec ret add lret mov arpl mov xchg stc and push pop lea insb push sarl dec xor and leave cmpsl cmp pop pop and (bad) nop and jp not pop ljmp sbb shlb sbb xlat xchg adc jne or into push xchg pop cmp lcall (bad) in push inc outsb mov dec mov mov js adc loope daa pop ret shrb jg int3 (bad) and pop jbe stc adcb dec mov in rorl hlt cmpsb jp (bad) test or aaa or adc add cmp fldenv or fcoml cmpsl sub call dec test xchg or mov addr16 xor aaa cmp xchg lcall sbb adc cmp cltd sbb mov xor jae stos or repnz jno xor dec inc test sbb adc add imul das and jge mov int dec pushf sub sar popa mov lock pop xchg rcrl cld mov sub dec stos clc xchg dec xor sbb je and xor sbb jmp mov ret arpl rolb stc lods mov aad jns ja cmp jge adc jb lret leave adc pop sub xor inc roll mov ljmp cltd xor jp dec xlat push adc jne or arpl pop pop jb inc lcall scas inc cwtl mov dec rcrl jle mov cli mov test data16 mov aaa mov push sbb pop dec imul ret sub or hlt sarb fstps cmp adc adc popf pop xchg inc and (bad) mov sub add push push mov call mov out add cli cmp adc cmpsb fnsave sub dec cli fstpt xchg faddl mov sbb popa add inc daa cmp cltd cld sbb dec dec jae stos jbe gs repnz jno xor pop idiv mov mov jae (bad) push cmp out aaa jo imul shrl out inc inc int cmpsb mov adc adc sub rolb dec rclb (bad) (bad) aas cmp dec dec clc aam pop dec fnstcw xor xor sarb out sub aaa mov fistpll cmp jge arpl adc test insl pop orb fisttpll jno fbstp and pop data16 scas mov mov ljmp out cwtl inc jae mov ret imul das jne or mov mov lcall adc mov dec xchg jae jle mov ret scas bound or push mov ja xlat pop push inc mov lcall push hlt add sub or aaa ret and adc adc adc add cmp clc mov rcl ljmp call cmpsb test dec add cli or jle push adc jg dec cmpsb or push cmp cli ret lahf pop push ja (bad) nop jge out push clc andl inc jge pop cltd test adc mov mov loop add cmp mov int3 xor dec xor sbb inc xchg lret addr16 jge push and jbe pusha inc mov test jae test addr16 mov imul (bad) outsl sar imul mov mov inc push cli push mov add sahf insl pop repz int mov mov add scas rcl inc mov jbe and xchg (bad) jo pop je mov std cmp pop push dec es cmp jmp das sub lods xchg push pusha sbb test test sub xchg push adc sarb (bad) insl nop out mov mov js dec popl das and inc inc mov pop sub aad fdivr addr16 sti lods repnz arpl sbb sbb push mov gs ficoml or nop pop call jb fdivl cmp cmovbe dec adc and (bad) jg push call sbb lret stc sub outsb xor mov orl or mov mov add fist push xlat test cwtl popf sbb xor inc mov xchg inc pop jne fisttp dec out shrb or inc sub cmpsl or (bad) jl pop add ja push (bad) aam mov lret xchg movsb push xchg adc lods dec and shl inc int arpl xlat mov pop dec clc mov dec push clc daa stos and jns xor sbb dec ror int orl dec test fldl ja insl das mov xchg or xchg inc lods lea xchg icebp jne movsb out cmp bound shlb push js add ret in cmp (bad) pop inc aas inc out xchg ss push push rclb (bad) pop or les pushf outsl mov movsl jne sub ficom jp inc or lcall pop inc mov pop and mov ljmp mov pop jno pop mov pushf cmp verr scas push (bad) mov add push aam cmp shll aas pop cmp or imul (bad) cmp les push enter pop pop push into cmp das ret jno fmul and pushf push add push add xor mov bound dec call adc into mov xchg mov divb in cmp mov adc pop jmp repnz mov cmp dec xor mov loope jmp inc adc xor addr16 mov and sbb (bad) mov int dec sub vpcmpgtb (bad) xor add cmp dec lahf and push (bad) push and or xor sbb sar dec ror int mov nop dec xchg xchg mov xor sbb xor (bad) out hlt bnd stc push mov jecxz jnp in mov pop mov cmp negb or adc scas xchg outsb inc pop (bad) (bad) mov setle mov lret movsb fldcw ds call xchg inc aaa aas sbb jl inc lea sub xchg ljmp xchg jno jle (bad) in pop scas mov and xor std push clc mov push mov pop nop xor int and fwait jne lods mov in gs or cmc cmp stos fnstenv aaa stos daa out inc adc popf call and jle mov push push aas lret call (bad) test les inc sti test pop adc in adc movsl jno mov mov adc push mov out add inc cwtl cmp cwtl test xchg fiadd or hlt jae test cltd arpl repz test cwtl fcmovne ja inc mov lcall es pop adc je (bad) dec incl cs test iret mov movsb xchg adc mov mov bound mov cs data16 lds jle lret adc jno (bad) push mov lcall ficompl mov stos fldl dec jmp add jo cwtl jecxz push mov aas (bad) pop pop imul sub into hlt cmp std cmp push (bad) mov out ljmp and push repnz repnz dec push pop test in movsl addr16 or hlt lock inc (bad) xor push jle int3 pop inc mov js jg mov decl popf inc test aad push rcrb mov mov movsb add imul inc inc xlat cwtl push ret movsl mov in data16 or repnz mov sub sub jecxz inc push dec sbb add xor insl jns out xchg rolb sbb shrb cli in sbb cld jb ret (bad) (bad) inc hlt cltd sbb test adc notl jno mov xchg jp mov xlat cmpsb pop xchg sahf sbb outsl sbb aaa xor and or lretw scas sub xor jb xor dec and lods movsb cmp push aaa in pushl pop or cmp dec inc mov cmp inc pop jae mov iret mov sub shr dec fdivp outsl pop shrl pop dec loope xchg ljmp inc mov pop adc mov std fmulp leave inc or roll (bad) out int push movsl outsl xlat cs xchg les (bad) into data16 cld loope mov xor dec dec push mov es out mov and xor sbbl out cmp jno test sub sbb or lds sarl stos imul hlt adcl jns (bad) dec xchg daa or and cmpsl mov jge pop and cld insb jmp dec bound pop jae or popf add scas popa pop ficom pmulhuw jno jge (bad) mov stos push add bound pop inc xor cwtl add xor sub sarl push out into dec push push aas fcoms lods in dec add bnd iret roll sub xchg xor daa cld jp cmp sub test lcall and dec test push jge orl cmc bound add out jno sub pop ss mov out loopne,pt in decl inc sub jbe imul mov (bad) rclb jno add sub inc pop pusha outsl shr loopne aam dec jo sbb mov dec push sti or sbb dec sbb ret pop lcall lcall int (bad) jne jbe xor sub jb inc cmp icebp jmp aas lahf sti gs xchg inc bound and (bad) jne cld fmul xor dec pop dec (bad) mov repnz jae movsb fldt xor into cltd pop push pop rol add cwtl int addr16 add xchg sbb dec mov mov (bad) fcoms movsl nop cli pop adc pop adc mov (bad) stc jle inc nop mov pop mov xchg (bad) stos bound mov movsl add out je add jmp mov mov sub sbb dec adc and xlat jbe push call push cmp xor loopne add xor sub jae inc loope inc decb sbb idivl andl sub mov or test xchg xchg sbb add adc xor popa dec popl dec out (bad) mov cmpsl sti add es aas in pop adc outsb std sub fdivr jns push add aaa jno jmp mov push icebp sarl or outsl out mov lds lret mull xlat cld arpl push scas dec outsb add pop dec cld mov dec xor scas and jns xor sbb dec ror int mov mov test xchg cmpsb lret fstl jge arpl cmpsb std xorl push mov cmpsb adc out mov pop pop push mov push dec jg hlt cmp pop roll inc inc pop inc (bad) mov ljmp jge and out cltd inc sbb adc imul jg div sahf push jp inc mov and pop inc mov pop and mov sti scas repz mov mov adc (bad) xchg sbb pop or stos pusha inc fistpl or or hlt cmp test mov stos or aaa inc and adc dec adc add cmp and (bad) jg push call push ds call (bad) test les dec cli test or adc in inc mov pop cmp mov aaa xchg adc nop sahf sbb popa add and addr16 test daa sbb mov in ret stos fwait lret mov xor lret xor scas mov sub fincstp jge push add xor imul das mov rorl arpl inc dec sub (bad) dec sar popa add scas dec bound mov lret push clc pop scas and jns xor sbb dec ror int mov mov test add jge arpl cmpsb cld xorl push mov jecxz jp jmp lea rorl xor hlt cmp pop sub xor scas nop inc inc push inc (bad) mov ljmp jge and out cltd inc sbb adc imul dec sbb icebp xor inc mov and pop inc mov cli dec xchg pop and mov sti scas fild xchg mov or adcl clc stos pusha inc repz jne pushf mov in gs or hlt sbb test mov stos sub adc dec adc add cmp and (bad) stos (bad) pop loop test (bad) fidiv popa sti mov add add jmp push sbb cmp popl add sarb ljmp negl mov push pusha sbb or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov repz xlat stos mov movsb sahf xchg mov (bad) or xor loop stos nop pushf popf test inc aad xor xor sub pop sub mov push test int3 xchg mov out xchg scas (bad) repnz jmp ja jecxz inc mov dec cmp (bad) mov ret cmp and loope mov mov cmp hlt jo idivb repnz cmp dec in lods iret in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs rol adc clc cwtl jecxz jge xchg sub loope cmp lret add push pop loope and mov enter in xchg imul pop das sub test (bad) (bad) jo popa sti mov add add jmp push sbb cmp popl add sarb ljmp negl mov push pusha sbb or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov repz xlat stos mov movsb sahf xchg mov (bad) or xor loop stos nop pushf popf test inc and cwtl jp jns xor sub pop sub mov push test int3 xchg mov out xchg scas (bad) repnz jmp ja jecxz inc mov dec cmp (bad) mov ret cmp and loope mov mov cmp hlt jo idivb repnz cmp dec in lods iret in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs rol adc clc cwtl jecxz jge xchg sub loope cmp lret add push pop loope and mov enter in xchg imul pop das sub test (bad) (bad) jo popa sti mov add add jmp push sbb cmp popl add sarb ljmp negl mov push pusha sbb or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov repz xlat stos mov movsb sahf xchg mov (bad) or xor loop stos nop xchg popf test inc and cwtl jp jns xor sub pop sub mov push test int3 xchg mov out xchg scas (bad) repnz jmp ja jecxz inc mov dec cmp (bad) mov ret cmp and loope mov mov cmp hlt jo idivb repnz cmp dec in lods iret in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs rol adc clc cwtl jecxz jge xchg sub loope cmp lret add push pop loope and mov enter in xchg imul pop das sub test (bad) (bad) jo popa sti mov add add jmp push sbb cmp popl add sarb ljmp negl mov push pusha sbb or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov repz xlat stos mov movsb sahf xchg mov (bad) or xor loop stos nop xchg popf test inc and cwtl jp jns xor sub pop sub mov push test int3 xchg mov out xchg scas (bad) repnz out pop xchg fildll mov xchg outsb ffreep mov ret cmp and loope mov mov cmp hlt jo idivb repnz cmp dec in lods iret in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs rol adc clc cwtl jecxz jge xchg sub loope cmp lret add push pop loope and mov enter in xchg imul pop das sub test (bad) (bad) jle inc sti mov in and mov adc add shr sbb pushf dec pop movsb push mov popl add sarb ljmp negl mov push pusha sbb or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov repz xlat stos mov movsb sahf xchg mov (bad) or xor loop stos nop xchg popf test inc and cwtl jp jns xor into jmp pop push pop or cltd call xchg lods inc push xchg test pop (bad) data16 mov dec es mov ret pop loope (bad) inc mov mov cmp hlt jo idivb repnz cmp dec in lods iret in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs rol adc clc cwtl jecxz jge xchg sub loope cmp lret add push pop loope and mov enter in xchg imul pop das sub and (bad) pop adc push push test cmp mov jnp repz shr sbb stos push pop xchg sti add sarb ljmp negl mov push pusha sbb or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov repz xlat stos mov movsb sahf xchg mov (bad) or xor loop stos nop xchg popf test inc and cwtl jp rclb xor lods pop (bad) test jbe jg xlat pop push mov inc pop xchg test pop (bad) jb xchg leave cs mov inc fcmovnb cmp and loope mov mov cmp hlt jo idivb repnz cmp dec in lods iret in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs rol adc clc cwtl jecxz jge xchg sub loope cmp lret add push pop loope and mov enter in xchg imul fcmovnu sub sbb test mov popa sti mov add add shr sbb mov cltd inc popl add sarb ljmp negl mov push pusha sbb or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov repz xlat stos mov movsb sahf xchg mov (bad) or xor loop or xchg mov xor cltd cmp jns xor sub pop and jg fs test int3 xchg xchg (bad) xchg addb (bad) jb xchg ficoml fdivl (bad) mov ret cmp and loope mov mov cmp hlt jo idivb repnz cmp dec in lods iret in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs rol adc clc cwtl jecxz jge xchg sub loope cmp lret add push pop loope das jge test dec jp repz fistpl in mov mov (bad) aaa pop das sub sub pop add and mov and repz ret call es lcall add sarb ljmp negl mov push pusha sbb or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov repz xlat stos mov movsb sahf xchg mov js push lret divl xchg lret xor xchg popf test inc and pop jp cld pop xor lods pop (bad) test aas xor (bad) incb mov xchg mov push add (bad) jb xchg (bad) xor ffreep mov ret cmp and loope mov mov cmp hlt jo idivb repnz cmp dec in lods iret in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs rol adc clc cwtl jecxz jge xchg sub loope cmp lret add push pop loope pop push push push es jp loop enter in xchg imul fcmovnu sub sub test incb jo popa sti mov cmc push push test cmp mov data16 pop pop loop cmp pop movsb push mov popl add sarb ljmp negl mov push pusha sbb or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov repz xlat stos mov movsb sahf xchg mov pop clc push fnsave out loop stos nop xchg stos je xor mov jp (bad) dec xor fisttp pop sbb fidivr out push stos dec and xchg scas (bad) repnz jmp ja jecxz inc mov dec cmp (bad) mov ret cmp and loope mov mov cmp hlt jo idivb repnz cmp dec in lods iret in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs rol adc clc cwtl jecxz jge xchg sub cmp sbb adc or ret test sub jbe enter in cltd cwtl (bad) jmp cltd mov xor (bad) pop pop popa lods inc test aam (bad) pop pop xchg sti cmp mov adc add jmp push sbb cmp popl add sarb ljmp negl mov push pusha sbb or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov repz in fdivs mov push jo ret adc loope clc push lret repnz xchg dec (bad) stos nop xchg popf test inc and mov fistpl xor lods pop (bad) test jbe jg mov int3 xchg mov out xchg scas (bad) repnz jmp ja jecxz inc mov dec cmp (bad) mov ret cmp and loope mov mov cmp hlt jo idivb repnz cmp dec in lods iret in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs rol adc clc cwtl jecxz js xchg sbb gs jle sbb adc or ret test pusha jp mov enter in lods fcmovbe jmp notl sbb pop scas pop inc xor xor sti mov add add jmp push sbb cmp popl add sarb ljmp negl mov push pusha sbb or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov repz xlat stos mov movsb mov ret adc loope clc push fnsave loop das bound jg and int3 jp jns xor sti lds sub mov push test int3 xchg mov out xchg scas (bad) repnz jmp ja jecxz inc mov dec cmp (bad) mov ret cmp and loope mov mov cmp hlt jo idivb repnz cmp dec in lods iret in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs rol adc clc cwtl jecxz jge xchg sub dec lds dec repnz push repz and jp sti int mov mov jmp js (bad) aaa pop das sub test (bad) (bad) jo popa sti mov jbe mov mov dec pop add out sbb rcll push jb call and arpl xchg cmpl pop (bad) (bad) in dec inc mov sbb jle mov xchg scas mov pop ret mov dec mov xchg pop test scas inc inc dec addl or out inc jg fstps idivl cwtl pop bound mov push pop fdivrs das ds rcrl mov test jbe hlt and sub call out pop popa sub in dec loope or loopne inc lahf mov jnp mov lea mov lret jecxz and frstor xchg pushf xchg sbb lret dec popf jae stos cmp mov jno sub dec js (bad) mov lahf cmc cmp and mov pop pusha jns push jb mov xlat mov sub mov scas or inc push outsl sub pop rcrb dec inc xchg bound cli xchg (bad) jno lret stc and ds sbb outsl aad int3 adc rcrb dec sbb popa dec mov out add jmp mov xchg push mov loopne (bad) hlt jo xlat sub es pusha and and xchg fiadd inc cwtl mov call in repz test test push push aad pop imul mov popf or in in cmp fistpl xchg push lcall lock mov pop arpl mov jmp xchg inc sub pop add fs adc mov stos in pop out lcall pop addr16 adc hlt fnstsw fstps sub (bad) adc add (bad) je fs pop sarl push add cmp xchg popl rdtsc call shr fs in cmp sub jbe mov fdivrs nop sub pop cmpsb push nop out sbb and pop mov fwait testl push test mov cmc (bad) lock xor cmpsl call lock jmp inc add ljmp mov push mov das sbb jge xchg pushf push loop test sub (bad) jnp (bad) fimul lea pop cmp out xor out test jle rcrl xchg iret loope push rcrb aam push fcoml push push (bad) cmpsb add aam push lds mov test (bad) cmp ja test loopne xchg fsubrl shll and out mov or mov (bad) xchg sbb inc xchg mov xor scas pop scas mov loopne sahf push sbb push bound cmpsl add pop push mov cltd jg inc push in mov dec clc pop aas jbe mov push mull mov add andl inc xchg cwtl sbb fwait mov out jg add imull xchg fisttpl sbb dec push hlt add cmp clc push ljmp cwtl or in mov lods fdivrs loopne or in das cmp xchg dec pusha movsl lret push cmp cmpl fstpt daa (bad) mov sahf fs sti into push icebp dec mov fistpll sbb loop rol lock fidivrl xor imul out sub mov aad pop adc cmp imul sbb data16 roll std mov adc xor int dec wbinvd adc xchg mov outsl adc icebp xchg push imul in jo xor sbb mov xchg lret aam inc dec popf test imul push add bound cmpsb push andl sbb mov add stos dec loopne mov mov cmpsl dec dec xor and enter pop imul or mov jbe lods mov ret lahf sbb aad adc imul lods jne or jp pop pop dec mov bound cs mov or mov test jle aad testb cs jp sub dec pop mov push dec test inc cwtl fwait add (bad) mov in retw hlt push jns fldenv jns imul adc adc xlat cmp and aad clc sub xchg xlat ds insl jecxz,pt es inc test dec add cli mov movsl mov fildl cmpsb xor cmp (bad) pop jnp xchg pop add mov out jle je inc inc jecxz pop popf lods sbb push (bad) dec dec (bad) jae scas imul repnz push inc xor mov aam sub ljmp push sub gs jno imul cs mov adc adc das lret gs aam pusha cltd (bad) icebp dec bound mov dec sbb dec xchg jnp xor sbb sarb imul push fnop dec out test push cli jg popa pop cmpsb stos xchg (bad) loopne movsl std sarl pusha push stos mov insb imul loopne mov outsl cmp pop in and icebp xchg test inc and xor dec inc pop ret sub mov imul jg (bad) icebp out jns out xchg sahf and leave (bad) leave out jp add mov dec jmp stos mov pusha data16 push mov mov outsb in jge xchg sbb pop push imul cltd jne daa mov out arpl stos idivb fldl2t xchg and adc gs add cmp and (bad) fs jge stos sarl or out test inc add xor test jecxz pusha cli scas push and cmp je mov mov aaa xchg adc nop sahf sbb popa push clc and or cltd imul jbe mov lods es pmuludq hlt mov dec (bad) lock cmpsl adc pop cli popa jmp lock lea mov sbb scas es pop je subb mov (bad) (bad) rcrb dec lahf xchg dec pop dec cld lods mov jmp cs cmp sub shll into adc test (bad) fwait push movsb jge outsl cmpsl std orl sbb stc dec mov insb pop popf in jns (bad) loopne lea xor inc dec inc xor and leave repz pop and cmp nop dec inc push inc cmc mov ljmp jbe and in inc sbb adc imul mov outsb pop push mov xor dec inc mov clc dec test jle mov stc scas ret test mov mov daa mov arpl test xor mov popf and hlt mov hlt pop imul jg xchg sbb popf add (bad) jle push call push ds call lds les dec cli test or adc cmpsb jno mov cli mov xor inc nop pushf sbb popa add inc cwtl cmp cwtl sti pop adc or jae stos or repnz sub lods mov sub fincstp jge push add xor imul sub pop jge mov int dec je and cmc gs shr popa psrlw pop inc cld lods (bad) popa cmp dec adc pop scas das dec scas jns xor sbb inc rcl int mov test test add jge arpl cmpsb orl mov xchg and mov mov dec dec cmp xor call and fild sub into jg lods (bad) sbb inc es scas (bad) mov arpl xlat (bad) pop mov dec add sbb (bad) sahf in push or in adc jns invd stos popf sbb jmp adc mov cwtl cwtl rolb not gs rolb xchg popf sub aaa fstps sbb test dec (bad) pop (bad) fldenv test aam lds inc imul dec scas push test cld inc shlb lcall mov xor (bad) sbb imul or dec xor inc xchg fstpl insl jg sarl mov pop mov daa or mov dec scas ljmp adc push mov mov inc jp pop aad lret add sbb in das addr16 sbb sbb imul jo lret das gs stc jg push ds sub sub movsl cmp rolb in cltd jp (bad) adc adc pusha mov icebp add in cmp icebp push je out adc lods cltd xor es jns test sbb add addr16 mov mov pop jg xchg xor fistpll push push xchg pop bound push pop fs mov and fmulp cmp int mov jecxz push dec sbb lods xchg ret insl pusha cli out pop mov cld fisttp (bad) mov add test cmp sahf jae cli subl mov mov into cmp jg sti pop not ret sbb dec pop and mov outsb mov mov cmp xor inc jno js daa xor jnp gs push lea aas faddp mov lret mov mov mov (bad) cmpsl test arpl insb dec les cmp nop pop dec shl push pop pushf idivl lock push icebp stos dec cmpsb dec add pop fstps in repz sub aad out loop jmp jae test cmp mov or inc mov and inc xor inc sub fmuls mov (bad) jp inc es ds and repnz pop outsb out jbe mov cltd mov adc sub repnz adc loopne and mov jnp insl out mov std (bad) repz enter ret (bad) pop arpl mov test sbb mov es push sbb jne sub cmp push pop xor inc jbe je scas sbb sub cmpsl (bad) jae int push cwtl test lcall and lret mov pop xor (bad) int mov sub mov test sub fistpll xor jmp jmp cld (bad) int push and and lds in daa sub movsb ljmp popa stc fdivrl mov std sub pop mov mov sbb jbe test pop outsl das lret dec mov jmp icebp mov push stos pop jmp arpl cltd jmp sub movsl push sbb shll xchg (bad) cmp cmp sbb or movsb inc pop cmp into push cmpxchg inc dec inc dec aam jb inc mov movsl (bad) cmpsl dec or inc imul mov adc or lahf xchg add or lea jmp inc movsl movl loopne jg cmp pop inc dec lds sbb into sub loope or (bad) into ljmp rclb daa int3 push cmp in push add lods adc cwtl jne and inc jnp stos int scas mov fchs insl sub xlat adc ret ret js (bad) add jae sub xchg movsb pop int3 pop jo addr16 test nop mov lods xchg push push ret push pop push push incl xchg stos jg imul xlat sbb dec mov fwait into pop pop popa pop icebp xor dec inc fs in jg (bad) fstpt (bad) int3 scas xchg add add inc mov imul (bad) (bad) push out jge xchg movl les cmpb ficompl (bad) fnop out sarb jge push fidivl aad mov out inc mov call jg stos pop shrl fstl daa lahf test aad adc jne out pop add sarb cmp ret cmc inc arpl pop popf sbb popa inc or pop inc repnz pop popa jmp lods enter xchg pop pop and xchg scas sarl push xchg pop out mov sbb sub xchg push sub ss mov inc sbb (bad) notb loope,pn jns sbb in mov cmp into sub std ds test sbb outsb fcoml pusha test lea (bad) jae das cwtl mov cmp rcrb adc movsl ljmp sbb mov sub addl stc pop add xchg and push push push jp lcall jl ret xor inc sub fadds leave xchg inc and mov ljmp in dec jmp sub lret sub and sbb dec loopne adc xchg stos and in cmpsl stos pop lret lcall int jg (bad) jno movsl xchg push ret push popa aas shl push das mov xchg and lret pop fistp dec push jo int3 xor aaa cmp daa sarl rorb (bad) cmp jmp sahf push mov stos in jnp test popw mov imul jno sahf inc insl movsb popl nop test or sti shrl sahf pop adcb dec or insl jmp sbb aad dec cmp ss xor mov pop bound (bad) lock lea insl lret pop push add add cmp addl mov dec xchg faddp jo imul pop push stc scas sbb sahf (bad) xor sahf jl test jno leave aad or popa push stos and adc mov div push push mov js ret ret out xchg cmpsb xchg add ss arpl ret mov bound dec pop rorl xchg or jmp sbb adc pop xchg jb jns push (bad) lock popa aas fcomi adc test aad add or outsb jp sahf outsl mov faddp cld or and iret imul mov rcrb ja out sub rep or call fsubrs jmp outsl sbb pop fcom enter xor fisubr or xchg out ret xchg int3 mov loop dec pop fs jge xor xor je es jo loop push sbb cld rorb jae push mov movsb je mov js (bad) xor stos outsl pop mov pop sbb lods clc xor lcall sub adc sub (bad) stc jo and mov mov pushl jge or test jae pop (bad) sbb jmp sub outsl and xor xchg adc add fmul adc gs cwtl (bad) bound inc imul data16 insl pop aam sbb ds mov cmp push add push and cli push daa mov int int3 push (bad) fnstsw stc lcall dec jle pop out mov mov and cwtl inc adc rcl pop test sbb sahf jp add push and lods sbb arpl lds sub into popa add push clc decl aad int adc jg mov int3 rcrl imul jns insb and gs adc sbb enter lea idivb xchg out loop cmp xor negb mov adc mov or loopne loop,pt pop call rolb push mov (bad) mov js push imul dec gs add push mov (bad) je cld mov xor pop mov inc dec or mov ss lds inc push shrl fildl push rcl sbb ret jnp inc insl lock mov inc lret add cmp fcomps add gs (bad) jae out sub lcall or cmp arpl pop bound jg shll or adc test int3 into arpl arpl mov daa stos inc sub pop jb mov jns sarb mov pop sbb cwtl dec dec xorl push lods jae mov iret loope stos cmp sti pop xchg adc mov mov jbe cwtl dec jnp xchg pop or inc inc outsb mov fs pusha inc xchg pop insb sbb sbb push pop mov iret aas adc or cltd cwtl mov mov fwait inc jmp aas push sahf negb jne jo or jle aam sbb jg je,pn (bad) icebp (bad) mov test dec out rol sub mov add dec pop fstp xor test stc je lds mov (bad) int3 inc pop test (bad) cmc mov or xchg jo sub outsl (bad) xor xchg push xlat sahf call in popa pushf mov pop dec or mov sub lods sti daa sub test loop and stos push aaa test out jg jns (bad) adc jecxz and clc insl mov dec cmpsb or pusha push push shll into jbe daa dec mov cmpsb int3 stos inc xchg xrelease lods pop sbb fcmovnb ja and or or in push sub push sub nop push mov and aam shll mov dec cmp pushf mov pop push out mov jmp imul pop hlt jne lret jge jno (bad) rcrb fwait lods out or pop xchg test pusha aad test add movsl (bad) fldt cmpsb xchg fs in add mov xchg push scas pop sub pusha insb jg data16 hlt scas addr16 pop gs dec out js dec gs stos xchg call fadd test and cmpsw xchg outsb xchg push (bad) leave lcall mov das push jg mov pop je push (bad) arpl popf les test mov lea iret sub shlb add (bad) pop iret imul stos pop outsl mov std cmp cmp out xchg lods fbstp aaa pop pop mov dec pop inc sti imul pop test mov aaa ds pop dec popa scas ret rcrl mov inc dec xchg pop and in pusha test pop xlat cltd or jge mov jne dec gs cmp popa je dec pop xor (bad) call mov xor xchg pop repnz cmp in jg je fcmovbe and xchg fwait cmp popa push add insb mov jg scas pop inc jp,pn test mov arpl or lahf add xchg add mov je lret xchg mov dec aad popf dec adc or jmp inc sub dec mov cmp loopne sub int xor lret pushf in cmp (bad) fnstenv clc mov xor mov push pop sti add xor pop jae mov stos push jnp inc imul mov xor repnz mov push add call pushf in pop inc jno mov xor aam jo inc loopne sbb jb xor jle xlat mov and fisttp insb rorl sbbl in cmp loop adc sahf inc xchg fidivr adcl xor pop xor pushf cmp inc jle jmp mov test test (bad) mov mov and (bad) in mov in movsb les (bad) jae (bad) pop xor sub mov cwtl push inc dec stos lcall ret mov mov mov fs in popa push or push cmp popf mov js jae repz imul mov mov outsb inc bound mov and out or (bad) (bad) out mov adc jno ljmp jo int cmp inc gs rcll jo ret cmp imul in sbb adc jl lret rorl jl das jle (bad) jmp scas mov mov cmp jl pop insb pop loopne and dec ja xchg rcrl movsl or outsb add out pusha add fmull adc insb sbb and in sub cmp jne dec mov or fsubs adc mov dec icebp add sarb in xchg mov in mull xor xor outsl rorl jge mov out leave xor rcrb movsl mov sub mov imul outsl jne pusha and ja inc cmp inc popf pop nop inc push movsl jg and imul add popa jmp roll lock bound nop pusha js mov push nop lock js adc in mov enter pop mov adc or or lcall xchg lods push jno pop inc es (bad) scas in mov nop inc xchg xor push pop mov inc ljmp call sbb jbe test cmp sub xchg add shrb cmp and and mov push (bad) and and dec mov test sbb es lret dec hlt cmc mov daa int cmp aad divb xchg xor test cmp lcall mov inc and xchg cmp inc dec (bad) repnz jp mul inc (bad) lea fcoms and sub decl or test xor or test xor rorl or sbb sti push iret sub fidivl cmp inc idiv jae pop dec cmp mov and ror push (bad) mov dec push and jno jge jno jbe jo leave adc adc (bad) push test push addr16 jnp (bad) icebp cmp cltd (bad) ss xorb xchg outsb cmp popf dec dec xchg leave jge inc (bad) aam inc loop push xchg ret jmp mov pusha cltd inc daa and std pop push in loope jno imul ret out jae push xchg xchg pop add xchg mov dec mov cmp pop pop adc jbe mov clc test add out idivl movsb aam add mov lcall notb sti or cmp (bad) in dec es jg xchg mov test mov and loopne insb (bad) mov jp inc or iret faddp mov enter mov xor clc pop cmp sub dec push inc addr16 mov (bad) arpl (bad) inc push aad mov dec aaa xchg mov aaa movl jecxz mov sub inc aas js adc aad xor cwtl mov push mov mov and or outsl cmc xlat inc bound insb sahf cmc mov ficoml push xlat lea and xchg fidivl out fldcw fidivrl je dec xchg ja addr16 cmp (bad) sarb push call (bad) popf or pop xchg mov and mov icebp in cmp jp sysenter push int3 jge test das pop mov lahf ret hlt je mov and in jle adc and loop jno pop loop sub adc or jg mov lods (bad) idivl push roll xchg faddl xor fs dec clc mull sub mov call test pop lds adc lahf fisubl add push adc mov mov lret ret push mov pop sub out dec subb in xchg repnz mulb imul sarl int3 mov cmp lret xchg test jp dec cwtl sub pop inc push cmp push pop insl push xlat loop or lahf jmp mov xorps ljmp xlat movsb jg pop repnz (bad) adc fs mov aas sub aaa cmc push dec xor xchg nop adc push or mov inc ret lods fistp jae lret push hlt xchg (bad) inc out lock pushw cmc aaa aas (bad) lods pop xchg leave aam xchg mov xchg imul fprem call dec fistpll xor pop stos sbb mov lea out (bad) mov ds sbb movsb mov adc lods push cmp fs inc popf and icebp repz fucom adc push inc cmpsb push and test andl clc outsl adc rorb insl cmc sub xchg (bad) outsb (bad) jne cmpl xor aam into inc (bad) cmp dec jbe push cmp jne popf dec sbb cmp (bad) pop (bad) mov add mov sub sub mov mov and fistl imul ljmp jle sbb adc jno mov nop mov enter out sub icebp out test imul and dec sub mov cmp pop dec sub jo xchg xor pop fdiv xor pop and jbe rclb mov sub scas pop mov add or inc jge fstl fadds pusha jle fcom pcmpeqb sub fwait mov mov push xchg jecxz dec jo sbbl jecxz pushf cmp push iret cld pop inc cltd cmpsb inc xchg cmc repz rcr xor (bad) rorb rcl daa sbb jnp scas sub dec and pop fisubrl cmpsb cmp (bad) jl insb sbb or (bad) push push push sbb out ficoml mov fistp lahf inc aas jp adc mov add fiaddl mov pop icebp inc sub nop and add sub sbb push or rcrb in xlat cmp and mov sub mov dec leave arpl in and popa pop adc jne mov movsb mov cmp ds cmc outsb cmp sub leave push inc loop jge mov (bad) lret das or jns lret ss adc orl xchg scas push or mov lahf movsl or lods test fs xor dec inc ljmp sbbl or xchg orl and cmp dec jl xchg sub push dec (bad) inc push xor inc les jecxz sbb sub imul or sahf movsl daa jbe or fwait xchg fnstsw sub inc cmp out lods sub cmp mov test or (bad) adc cs lret jno jo orb push and (bad) sbb (bad) or adc lods ret loopne pop inc inc ss mov jbe js popa lea dec and aad adc test insl add fldl ja cli lds les addr16 push cs sbb iret lret cmp fistpll inc loop outsl mov xor sahf pop popf adc inc dec push add push push clc ljmp sub dec mov or das inc xchg fneni(8087 outsb movsl sbb pop and or sbb sub pop addr16 mov inc pop inc xor pop cmpsb std iret adc pusha adc jge xchg sub fstpt adc push cs cltd mov and gs ret or gs cmp mov sbb stos sub (bad) adc xor ljmp cmp sbbb out mov pmaxub or and add pop inc inc lods xchg xor inc dec fdivr and ficom lea pop into mov or mov sti xor xlat xchg sbb mov add push flds and or inc imul hlt lods sub cmp mov mov adc xor fildl add cwtl inc (bad) (bad) jo pusha jp mov adc mov loop xchg repnz mov mov (bad) loop push mov and jge jnp dec xchg push dec mov mov in and jae in rorb test stos bound lahf loopne jns pop bound pop add lret sbb fcomps inc loop push xchg fldt cld divl and push inc or push dec cltd ret jg and outsl sub lods push xchg mov pop cmp ret (bad) pop popl mov addr16 push jo sbb mov inc sti in pop xor les js adc pop dec pop lds pcmpgtw je and mov ret repnz inc mov push mov aas xor and int3 mov out test or cmpsb mov jge xchg and mov sub jecxz sub sbb xor push jl mov inc xor (bad) xor and pop add mov jge inc and (bad) xchg in and pop mov sti mov sbb jg cltd test jp pop or sub insl inc repz imul mov cld cmp xchg enter xor sub mov pop and jnp ret fsubs xlat fdivl ss imul cmpsb lods cld push pop addl pop pop sub out es push into inc mov loop push movsb sbb xor dec movsl mov test popf push fildll loopne rorb jae fcmovbe add imul je ret inc ret mov push sub outsb inc clc loopne jnp outsl out dec cmpsb push mov rcll addr16 dec mov cltd js mov addr16 pop jne sub xchg mov loop dec pop and das mov into inc fidivrl incb mov enter lret (bad) cmp (bad) es xchg imul jge mov sub mov sub icebp stos jo xchg sub xchg xor cmc outsb xchg mov xchg sub xchg lds or xor inc addr16 test dec inc inc dec (bad) ljmp inc pop and adc scas jmp inc inc add outsl cmp xchg jnp push decl or fwait xchg (bad) jae sub (bad) ss xor cmp cmp nop lret push jmp ficompl add fisubrl mov fcomps jb jae sbb out push xor fistpll jmp lahf inc nop lea fisubr aaa pop pop (bad) inc push data16 mov xor push push stos pop movsl test mov sahf mov popf lock push inc jg jnp out cmpsb add into out dec popa xchg mov pop clc jbe mov pop orl add cwtl jnp in (bad) arpl jle dec and inc lcall inc cmp fcmovne sbb mov jge cmp popa jne test aaa leave jle lahf cmpsl dec mov pop push xor jge clc fbstp pusha arpl inc jmp or mov push jno jmp pop push cltd leave cld or addb dec and jns pop stos jno mov push cmp sub loopne insb fimul cmp and cwtl lock xchg sub mov or lret xchg test or sub inc ja sbbb sub push dec icebp lds add inc mov add fdivrs xor push mov sti in loope jo adc xchg icebp fdivrl cmp cmc adc dec pop aaa adc fdivr sbb sub mov mov adc and (bad) jno jo xchg mov mov stos es cmp or or fyl2x in (bad) imul add cmp pop nop je mov les lret pushf sub lret popf add mov pop arpl inc xor cmpsb push adc out push (bad) push loop push xchg fbstp aam imul pop daa aam das push add and test jge test pop dec bound inc scas dec lea pop adc cltd push and pop gs test ret in pop pop sbb arpl pop mov (bad) xor pop loope or mov out mulps cmp pop out or sbb mov imul test out sbb cwtl (bad) iret mov or stos loop hlt sarl popf cmp shrl jmp mov push call and daa jno push jbe xchg xor push push lret in inc pop sub aas add out mov fwait shrb mov mov adc cmp (bad) mov or clc adc adc in ds out mov clc outsl adc mov adc jb add push ljmp test (bad) mov clc imul xchg into test gs inc sub cmp lret cmp mov xchg mov and lock or jl int3 lahf sub mov (bad) imul fs pop and notb xlat shrb dec insl xchg fistpll pop repz (bad) call lcall xor cmp loopne outsb jno and imul in xchg ret xchg js (bad) pop inc aas inc cltd ret mov pop mov jnp es add or iret sbb in inc and das mov ret (bad) out sbb bound adc or cltd hlt out add sbb je push and push adc jle mov iret test sbb mov daa out cmp inc enter out (bad) pop sbbl sbb mov push in sbb xor inc push dec cmp sub push dec scas ret xor sub lea leave test and aaa xchg mov mov push ja adc jp sub sub push dec xor repnz or rol lahf and mov lahf sti out jmp or xor adc adc in icebp pop (bad) je imul cmp lret (bad) out mov lcall ljmp andl cmp outsl fwait push fwait and mov mov (bad) (bad) mov push inc pop test push test fbstp test rorb lretw push xor rcrl sbb xchg adc popf fcoms mov jle ds xchg pop inc addr16 inc inc cltd int jne push adc lods lock insb jno push pop xor std cmpl sub mov aad jle mov pop ds adc arpl cmp movsb mov test ud2 out pop or into int pop lea insb clc dec lret pop aas cmc add mov cmovs cmp sti das loope andl test or xlat hlt hlt push sahf xor stc xchg add fcos mov loop or add es pop inc push cmpsb cwtl push mov pop dec pop push scas ret jnp cltd out test mov push sahf mov cltd add xchg lods mov mov sbb sbb (bad) scas frstor sub loop lcall cmp sub cmp mov scas pushf cmc movsb and xor shrl or push flds jnp jae sub mov add jmp cwtl imul jne push inc ja push leave insl lods jo push adc jg and jg mov dec add lahf icebp cmp and push bound adc ror xor mov add jnp mov jle add push xor dec daa (bad) je adc dec mov scas iret pop mov xchg lahf inc pop stos pop cs (bad) lock mov pushf sbbl or pop daa (bad) sbb lock xor into je inc push mov inc lds add loopne pop xchg je dec in lock aam jb ljmp jns xor adc and int mov fildll add lret dec push dec jge arpl cmpb jns xor push inc (bad) leave insb xor clc dec in lods and mov xchg pop data16 inc test mov dec jbe lods das mov xor cltd and pop idivb in pop jne or daa push test mov lcall xchg inc fbstp fwait jle mov sti mov test sub mov aas mov push sbb pop dec imul movnti mov in gs or hlt push jp flds test jbe add test sbb dec or add jbe rcl add test push mov call xchg test js fdivr jbe jae (bad) adc in inc cmp mov std jnp xchg jns mov sbb inc add lods daa lock popa cmp cltd jl or mov mov stos inc lret div iret jno xor inc inc notb xchg rorl testl mov imul das movsl inc lods jge mov adc adc int dec adc inc lds jge xor and insb out fisubl fimull loop sti lods xor ds loop (bad) scas not aam imul inc mov xor pusha jl aam dec sbbl mov fs cmpsl dec xor ja std fldcw in ret bound cli out jnp sahf ja rorb pop add push mov sbb pop mov test clc imul je insl cld dec out push cli mov rcrl adc std (bad) cltd adc or sbb and adc in xchg and nop sbb sbb ret xchg jo push sbb xor or dec test jg outsb xchg xor xchg js sub sub mov xchg xorl lret das aas popf iret lahf and add cld xchg dec fcmovne mov aaa mov scas inc sub push mov push pop jne mull lock xor std call dec imul add jo (bad) std repnz mov push dec fdiv dec inc call pop push xchg jb adc adc dec xor mov dec incb jb test jb xor dec dec ret pop or push pop cmp sub int3 and lea outsl lds xchg notb push movsb cmp mov jnp shll aad cmpsl hlt lcall add outsl inc loope lock out inc repnz xor cmp ja push test dec or decl mov insb pop call test and jge jne sub fmull mov std stc fisttpl xchg (bad) call ja aaa mov sarl aad out adc pop lcall cli jmp mov les inc adc pusha pop ljmp popa stos or xor mov jne cs pop nop rclb sahf or (bad) jmp aaa (bad) or scas xorl gs rep or rcr mov jns adc xchg fidivl mov push int imul dec dec sahf pop lock sarl jl jge int3 mov sti bound add popa add xchg pushf popl jb adc jl add cltd gs (bad) ss adc mov add sub in lret dec es mov pop sub in fs lds mov xchg adc div (bad) jne dec jmp hlt mov push xchg pop push pusha xchg ds gs mov mov cwtl cmc dec or cmp jmp ret sub mov mov dec xchg add lea xor movsb jge in mov (bad) (bad) push fstps jge mov test sub jo sub aam adc loop ljmp jmp inc les int xchg in out mov repz scas sbb push xor jmp or xchg (bad) imul jmp rcll dec mov jns jmp jno (bad) lret pop orl xchg in sbb test adc inc dec adc jno cmp cs rcll push call push rolb ljmp mov movl arpl adc mov pop mov cli mov sbb mov out addr16 jp push imul sbb or aam ret stos or and int3 xor popa mov aad cltd add idivl mov jo inc add jbe lock flds rorl popa inc fcoms cmp inc (bad) (bad) jecxz shll push dec cld mov jp (bad) dec push (bad) and ds inc (bad) adc bound mov dec or cmpsb std mov push mov in jo aad cmp ljmp ss lret adc repnz mov imul test lods fldl rolb ret jle in scas jg push push in lock ss mov push sub (bad) out jae mov pop and lret test scas repz inc in sub jno push shl in and add stos pusha dec test cltd daa in arpl arpl hlt cmp test mov cmp and jno pop mov lock clc push stc leave rclb adc movsl cwtl inc outsb xor mov jp rcl dec cli test sbb adc in push mov insl mov cli mov cmp mov nop cwtl sbb and popa inc fwait push xor jbe popf or bnd lds lret scas hlt and xor cmp mov std sub push push sub xor push lock das cmp (bad) setae imul and cs add scas gs je pop aam (bad) insb ss push push clc or bound sub sbb dec rol mov pop jle test sub push dec arpl lods mov lock push cmpsl jmp jb mov loopne (bad) insb fistpl or jne and fisttpll rorl lods xlat xchg push sub repz inc adc sub jg and in or dec pop jge and jl in push pop mov aas jle mov lds cli xchg test insb mov pop jnp or sbb das pop imul jg repz cmpsb ret (bad) outsl cmp cmc hlt cmp (bad) mov adc popa pop adc dec cs cmp or (bad) jg dec in int3 push push sbb xlat sub xor sub push fs push push shlb adc out ret cmpsb jo movsb mov cltd fs xchg pop jne mov out popa add cmp addr16 xchg jbe adc ret stos or sub mov cs cmp scas mov and fincstp jle push adc xor dec mov jle lahf imull mov jge mov adc mov outsl and out inc fnop push shrl arpl std mov dec push repnz xor push adc popf jo ror cld push mov mov (bad) iret add add and std xorl push mov jecxz jp lcall aaa rorl xor adc leave hlt js pop sub popa cmp jo (bad) mov fnstenvs lods mov jge sub out cltd inc sbb fsubp lods in movsl je sub cld leave mov jp inc mov and pop inc cmpsl mov outsl xchg pop sub in (bad) add sti scas stc mov xchg mov pop rcr in and add stos pusha inc fcompl pop imul loope test (bad) adc jg popf add out mov aad jnp shlb adc adc les dec cld jmp or xor xor adc xorb add jge mov jle sahf sbb pop in cwtl cmp lahf jmp adc pop pop ss hlt jb mov lret (bad) cmc or inc mov mov repnz jp sub pop lret imul inc mov xor aaa xchg adc lea inc sbb out ret in (bad) popa add pop jb cli aad insb cmp (bad) and pop scas dec insl mov sbb fcompl pop mov out push mov mov xchg test pop mov pop push mov mov cmc xchg gs jecxz jle or lea dec sub jecxz cmp insl sub movsb cmp nop inc inc pop push daa lea ljmp lods jbe inc (bad) call mov mov movsl jae xor cwtl cmp mov pop sub xchg in push xor adc jle push (bad) mov test insl insl add rclb (bad) in mov or bound lcall orl cmc (bad) sahf push xchg fnstenv xor sbb dec sbb cmp cmp push sub jg shr mov push jge push enter insb add xor mov rorb sarb push or push inc out jno mov dec inc add mov xor mov mov fucomi and dec inc cwtl cmp xor pop ret stos or repnz add dec xor scas mov lods out fincstp jge push add xchg jo sbb jle test mov dec jge add xchg adc mov xor (bad) xchg movsb dec rorb dec je inc pop dec std xchg int cmp and clc pop movsb push addr16 adc pop arpl popf imul in push lea mov inc cmpsb lret xlat cmp jge imul push mov jecxz insb es push cs add sub or and or nop adc mov sti fwait xor xlat test or ret add pop fnstsw (bad) or emms push pop inc mov sub mov dec sbb pop and mov lods cmc ljmp add jnp jp cmc in sub or inc fcompl pop cli (bad) outsb int3 or stos push ficom inc maskmovq negl dec adc or mov shrb inc out cmpsb aad data16 cmp inc mov jnp jecxz (bad) test dec push mov cmp inc out inc mov sbb sub jmp push (bad) in xchg cmpb or mov ficomp or je mov lret (bad) (bad) sbb ss cmpsl jae add in sub and push push andb inc mov dec mov lods subl add (bad) add (bad) imul scas dec fs pop dec cld mov dec jno pop scas and in jns xor xor dec sti or andl mov push mov arpl mov xorl push mov jecxz adc sub rolb sysenter sub int jno pop xor sub xchg sbb mov (bad) mov cmp and ljmp jl imul jle repz mov jp inc jecxz lcall pop (bad) mov cli dec cltd jo jle mov icebp fcmovnu test addr16 pop pop call (bad) xchg push add mov je fcompl orl fistp or and xor sbb adc inc scas and fsubrl sti mov ss sub xor scas sahf cmp cli test pop test adc mov (bad) sbb add adc aaa xchg adc fbstp sahf dec das clc and or cwtl cmp in test adc push addl cmpsb popf dec jno cmp xor scas mov fstps aam out test add and jo int3 jb jle jecxz daa stc xlat sub rorl arpl adc sub (bad) ljmp stc test xchg sbb dec cld mov pop cmp dec or dec mov cmp lret mov push push mov xchg cmp add jecxz push movsb jnp and cmpsb mull addl sub loope or adc in jae and frndint dec cld pop sub sbb scas nop inc sub orb int3 xchg jae inc (bad) inc sbb fmulp scas in movsl je jg mov jp inc jecxz lcall pop dec sarb or mov icebp fcomi test jge push popf int sbb mov and or popa push enter mov gs push out inc jb fnstenv xor cmp adc cmp enter adc push push aas ret jmp je sbb test les cmp test or int inc mov cmp jnp nop cmp mov push loopne aas dec adc fs or and stos add cltd iret xor and imulb scas sub rcl imul push and jnp mov fisttpl or sahf mov mov dec gs add pop bound mov jb inc cld mov dec adc adc sub jge and jb rcrb lret pop rcrl adc insb pop dec je std mov hlt js shrl in inc ja std loopne mov and jbe inc xor das aas (bad) fdivrl in pop sub sub jg mov ljmp add std cltd inc pop je ret inc mov or loopne jp inc repnz lcall pop sbb xchg cli dec xchg sub mov ljmp inc xchg rcll jno cmp test or mov out ret lods mov notl lock jne fnstenv xor out ds dec adc push xchg loop notb mov mov movsl call sarl lea dec cld xchg es adc lea cmp popf pop dec xchg adc nop sahf pop into mov clc and cbtw cmp out sbb sbb sbb scas and sbb xor scas fisttp (bad) mov push push jl xor js xchg ja loop mov jmp arpl mov xor sub xchg xor hlt jns shrb dec pop pop lahf cwtl adc dec sbb mulb dec mov or (bad) shrl aad fwait push mov fisttp (bad) xlat mov imul sub scas sbbb shll iret inc imul and rorl adc sub hlt cmp inc mov mov push sbb rcrb jbe lret sub push inc cmc mov dec vdivss imul pop dec div sahf jns pop inc mov xchg and pop inc jle fcoml sarl scas notl xchg xchg inc add adc (bad) xchg sbb add imul jne lods mov in push call jp fnstenv aaa dec daa mov adc lahf sub sarl push data16 and outsb (bad) test lds dec cli xchg pop mov adc cmpsb push mov cli mov aaa xchg pop lea out popa paddusw dec cmp ss in adc (bad) ljmp aad sbb mov xor dec cs imul (bad) mull push add xor sbb mov inc call xlat ja movsl lods pop cld dec arpl mov aad gs sar popa or scas inc bound mov dec adc pop out cmp xor sbb push ror int mov rorl scas add adcb mov xorl ss lods push sub dec dec inc aas push sbb leave repnz adc ds fsubl fisttpll push lods fisttpll dec (bad) jmp pop pop cmpsl ljmp dec add sahf push jo fildl push add dec inc mov push sahf mov shrl xchg inc xchg mov data16 cmc in sub punpckhwd xor fistpl push jg or or repz mov fidiv push and mov stc cmp and (bad) imul pushf fwait rcll sbb in jae add lods shr dec cli (bad) and cmpsl push push into cmpsb jno nop mov jno aaa xchg sbb (bad) stos inc mov ja es pop push lods pusha adc pop adcl mov rcr and aaa sub imulb std sub cmc repnz adc push bound and imul pop lock cmp push shlb popa into cltd xor and lret push dec clc scas popa add (bad) push sbb je dec aam (bad) insb cmp arpl movsb add lahf sub xor ss xlat out push mov mov and movsb jge dec pop cmpsb std test repz iret imul xlat lret jl jge dec inc push and pop sub daa or nop popa inc pop inc clc mov sti ljmp mov in outsl push pop xlat les sarb arpl sbb mov sahf push push jp inc cmpsb inc lcall pop inc mov cli pop mov xlat pop cld outsl loope sub test inc mov pop jnp adc xchg push mov or fwait arpl fwait jne mov adc or out sbb mov stos pop aaa and push lret adc jecxz stc cmp xor add push call push xor (bad) pop pop adc xor mov mov dec cld pop or pmulhw inc test (bad) jl add lcall mov enter and addr16 orl mov mov testb stos or adc cmp and es fisttpl xor jge push push push addr16 js cmp js repz mov sub inc or adc xor test sub out dec rcr popa or scas dec arpl mov dec or ret sbb rolb pop popf imul (bad) je rcr inc xchg popf mov pop mov leave jno mov mov cmc cli push stos scas loopne popf jmp loopne lea aaa rorl sub add hlt aas in pop sub das or nop movb stc mov sti ljmp arpl inc stc mov popf inc imul rolb in movsl jg ja mov sub mov arpl sub pop inc cmpsb cwtl test jns call leave test xchg out adc inc xchg iret jb jne gs call mov scas pusha aaa repz ret stos ret xchg loope adc cmp fnsave pop or sbb dec adc and cmp and (bad) jle push call gs lret call ret jnp rcl dec jmp or in dec sbb je mov inc xchg cli mov and inc mov je popa add inc mov jae mov fsub ret stos add lods jb repnz jl dec cmp mov sub (bad) ja push push push es jo inc imul mov or xchg xchg outsl int dec pop mov (bad) addr16 fsubrl pop dec mov lret adc pop stos push scas mov popa sbb sbb dec ror mov mov xorl push arpl xlat xorl push xchg shrl in push stos jmp sub dec dec dec pop mov adc cs mov cwtl adc ljmp adc mov sbb fimull xor into jns xchg mov jp insb xlat inc lcall pop inc cmpsb cwtl mov mov inc jmp test mov inc jno adc outsb jg or rolb cs lods mov cmc (bad) or repnz test mov lods inc and add dec add loop xor outsb (bad) jge cmpsb aad pusha push ds ds gs outsb xor scas out mov ljmp rcr push or ja stos mov (bad) cli mov stos xchg adc nop xchg outsl cld popa add push shrb mov (bad) pop repz lcall repnz imul cmp pushf mov sub push les push or imul or or mov int dec dec sub xlat out daa sar pusha adc stos dec fcoml mov dec adc add loopne xor sbb dec nop jns lods push int addl out cmpsb lret xlat and jge imul test sbb repz pop shrl out fisubr jle push fldt pop xchg and ret out cld pop inc xchg movsb orl outsb push mov loopne cs and xchg outsl mov xlat enter adc movsl jne push js icebp out adc xor lcall pop dec mov xchg enter js mov xchg shrb int or (bad) mov faddl insl xchg pop pusha inc (bad) mov ret mov gs or hlt cmp fistpl sub sbb cmp lea loope mov jb adc sub xor and stos mov cli mov sub adc cmpsb bound jno add test or mov pushf mov jmp daa insl dec sahf sbb add fwait dec jns (bad) insl inc cld fs cmpsb add pop mov adc add sub lods mov xor (bad) push aad add test arpl jle cli fildl (bad) inc xchg ja lcall push dec and cwtl out dec lock mov cld icebp pop dec divb repz clc or jg pusha lret fstl push mov neg xchg test sub jge arpl cmpsb into (bad) mov fwait sbb stc dec mov insl add push push push jp cmp clc dec inc ds xchg adc (bad) ss jp dec (bad) cmp lcall sub pop jbe cmpsb cmc sarl and or mov xchg xor cld fmull imul inc lcall ss mov xchg out lret fistl sti scas icebp test data16 rolb mov in addr16 xchg sbb pop or test and shlb or mov hlt ss mov or adc adc adc sub cmp or pop cmp and sub cmp icebp jnp jmp xor into or and inc mov pop cmp mov xor inc loop sbb pusha daa addr16 xchg cs add setns mov pusha ret stos or aaa and das cs cmp adc sub rorl sub jo dec lods mov das mov jns (bad) aam xchg adc and and in gs fadds pop jo pop and mov push and jns and jp sub inc cmp lret in loope dec fild adc jg bound cmp cmp rcr mov or (bad) lea rorl dec or adc in (bad) sub xor test rep (bad) jbe mov mov add out jp pop rcl push mov push adc pusha xchg (bad) cwtl push gs sub pop inc fisubr pop inc sarl mov stos lret mov clc stos mov sub or popaw lret jecxz xchg or xor hlt cmp fnstenv aaa inc and js adc repz loope cmp call adc rclb outsb cmp mov rolb (bad) movsb loopne mov adc test mov cli mov xor inc nop sbbl add pusha cwtl cmp xchg jmp adc or ret lcall or and adc enter jno push imul mov das (bad) movsb (bad) xor adc mov fdivrl int3 cltd popa dec sar inc in shrl pop dec (bad) lcall clc pop stos xor mov adc sbb dec ror ficomp imul repz pop push arpl cmpsb xchg pop mov popf loop,pt jge mov pop popf jmp loopne lods xchg outsb shll outsb inc xor pop or hlt cmp adc xor xchg inc adc loop sbb lods fisttpll inc out rcll fimul test bndstx inc sahf push jp inc mov add push bound mov pop lcall cld gs jmp loop in in jmp add (bad) repz fidivrl js mov or lods mov lds or sarb scas enter or ss aaa in push add mov ja lret (bad) jne dec call sub lret sub and mov aad ret popa jo ds sub mov pop cmp lock mov sub popa sbb sahf sbb xchg fwait xor lcall add cmp stc int3 dec mov into push dec xor stos xor enter inc pop sub popa xor fs fsts das xor packsswb and scas or loope xor (bad) popa push (bad) jno xchg jo mov mov adc cmc sbb jns adc cmpsb ror int lods dec fisttp pop mov pop jb mov xchg mov xchg or out lods lret jl lds les pop adc rorl fidivl adc push ds stos cwtl cmp pop inc repz test movsl pop dec daa inc inc into ja sbb adc insl loopne movsl jne add lcall pushf pop push push bound mov daa mov and mov adcb inc xchg mov aas mov shlb (bad) xchg pushf mov andl mov or sbb stos fnsave xor icebp cmp adc fwait sbb aad push and insb enter rclb push ds mov add inc (bad) scas icebp or rolb or in imul cmpsb pop cmp jnp nop cmp adc cmpsl and popa xor cmp jmp or inc mov lret push or pop sub fiadd clc sub bnd push push push jl xor sbb mov das mov push push xchg stos adc dec pop nop lds addr16 scas dec dec adc dec clc xchg shrl cmp incl fimul popa mov pop sbb sbb dec ror in mov cli dec popf test push mov or faddl repz push into fisub in lret inc jp stc enter inc mov dec dec inc sbb and iret xchg pop pop or cmp xchg outsl dec pop inc fmull or call mov dec dec pushl pop dec adc inc push leave movsl jne and in (bad) jb xor outsl lcall jb test and mov cld push ljmp stos dec lods xchg add jno pop mov mov pusha cld xchg repz jne stos mov repz hlt cmp mov sbb inc and adc sbb (bad) jg pop shl push push fs leave sub rolb xor mov push lret xor or mov pop push and mov sub dec sbbl inc call sbb cmp jae mov mov xor dec pop shrb cli add fincstp jnp push add test imul ds or inc jns stc mov int gs sub (bad) je (bad) int adc xchg pop in mov cmp rolb scas and (bad) jns xor sbb push popf imul int lea cltd dec mov fcmovbe cmp jge imul lahf or xchg iret mov in mov (bad) ljmp fs xor es (bad) cmp (bad) test fisttpl outsb mov ljmp rcrl xor mov mov jl dec mov daa inc punpckldq mov sub cltd (bad) outsl jmp scas loopne clc out xchg mov add mov addr16 fs fistpl sbb (bad) gs or hlt sbb fstps inc jne cmp fistp repnz jns sub mov inc jg ds ret test fidivrl adc push lods adc jno cmpsb outsb je mov cmpsl insb xor mov xchg popf je popa add inc mov and fstps adc rorl ret stos or aas repnz loope jnp xor dec and test dec shrl sub fincstp lods dec push add jo,pn arpl stc xor add mov je mov sub aaa dec dec sar dec sbb scas inc sarb mov push clc or jns inc aad adc sbb out mov lret (bad) into add jge arpl cmpsb mov ret into bound out push stos jmp cmp dec dec xor and jmp cmp push pop push pop push leave jecxz inc pop inc mov sub xor outsb lods (bad) fldt xor or sar inc sbb xchg pop nop imul (bad) div mov mov and pop inc (bad) or and inc clc iret outsl std sti scas repnz data16 inc xchg mov pop mov xchg sbb push or stos pusha inc iret fwait jne loopne or or hlt cmp mov mov test cmp adc dec adc add cmp and (bad) jl push call pop ds call (bad) test leave add push or in inc (bad) cmpsb xor pop cmp xchg adc nop mov clc out and pushf int3 sbb jae mov jae scas inc lret push div je xor ss stc sub push push add imul shll inc jne fwait mov adc pop arpl mov enter fbld pop sub repnz cmp pop repz add pop xor or (bad) imul int mov enter test push xor je cmpsb dec xchg rcll xor mov clc pop lcall inc xor cmp repnz inc dec aaa xor mov sbb xchg add out jbe mov xchg jnp nop pop adc call xlat les or hlt mov mov push inc inc mov subl (bad) cmpsb mov push hlt dec and dec mov cmp bound mov pop mov fstpl pop sbb inc ret ret stos mov dec gs fstps aaa jbe scas adc jae aad (bad) cmp clc push bnd push push pop and sub xor test ret loopne or mov adc or pop jo mov mov insl lea sarb call daa popa inc push daa and loopne or push cld jmp adc sub mul mov dec repnz jnp sub jnp and jne cmpsb insb adc xchg das std pop xchg popa rorl int push popa and (bad) pop sar popa ss orb xor clc mov dec sbb imul pop rcrb jbe xlat leave int xchg sub cwtl xchg mov pusha push arpl add push div push mov jmp jmp lea dec inc sub aas adc inc sub or mov pop xchg xchg sub mov mov xor xlat cmp dec cwtl in mov mov insb pop add inc nop call lahf pop xchg pop pop pop mov (bad) std lret sahf mov ret mov sbb sbb daa jbe imulb jnp movsl nop jb mov sub (bad) clc jb lods or push or adc xor sbb fldcw jne cmp sub xor cmc jae shrl repnz push mov jbe or adc cmpsb jno mov cli mov daa xchg or (bad) mov in popa add inc cwtl cmp cltd test adc fwait or sub stos or xor jno xor sbb jb sub fincstp inc push push add xor imul das mov jge mov int dec pusha sub pop fs stos dec addr16 pop pop dec cld stos (bad) dec cmp dec sbb add add sbb rcrb int mov mov add jge arpl addb shrl jecxz sub jns xor xor and leave xchg cmp pop sub push sub das inc pushf mov jmp jbe mov adc in cwtl inc sbb mov test in (bad) jne or mov das pop js ss pop inc mov pop and mov loop mov mov inc xchg mov or mov pop (bad) xchg sbb clc stos jns fwait fwait or scas mov in jbe or hlt jl sub mov scas or and and adc adc adc add cmp xor (bad) data16 adc cmp pop push push ds xor bnd sar dec cli popf push inc mov push inc add adc xchg cli mov daa xchg mov nop xlat sbb push stc and das push cwtl cmp cltd into sbb dec xchg gs stos push lret add sbb xor push ror std sbb push imull pusha add popa sub imul roll fisubr add js mov int dec stc sub mov inc popa adc je ficom add dec mov dec or xor sbb aam int mov test sbb in push adc cmpsb aaa test mov pop (bad) xchg mov and stos shr std lea jg xchg xor sub leave loop nop push nop and inc or xchg ljmp dec xor dec xchg rcr push adc bound add sbb jne rclb loop inc xchg mov inc sbb jle mov std pop jmp mov cltd push pop mov sarl push sbb cmp ss pushf mov cmc inc fs jnp pop xlat xchg outsb or and adc add aas (bad) xor (bad) sub stc not add cwtl das mov repz xchg sub inc xchg xor lds and add inc rcrl jbe cmp sti ret xchg cmp loope ljmp pop fwait mov mov dec andl sub cmpsl loopne lock dec adc ret mov rorl lods cli negl push call jge mov push mov jg mov int pop sbb sbb das jo ror pusha add dec fidiv sub pop clc repz dec mov xchg imul iret int mov (bad) loope xchg fstl jge arpl cmpsb loopne mov and mov icebp push lea cmpsl leave pop dec inc xor and leave hlt cmp pop ljmp inc pop inc (bad) mov ljmp je and out cltd adcl fisubr in movsl jne or mov jno inc mov and ja lods mov dec xchg pop and mov std inc jmp scas repz mov mov push pop rcrb mov xchg sbb or inc fistpl lret call in cmp test mov insb add ss and adc dec adc add xor and push call (bad) xor sub xor test jmp push or adc in dec into movsb inc je mov mov icebp fwait je (bad) mov out popa add inc mov xor or jno stos sbb repnz xor dec and mov cli repnz out dec out push push add push in imul imul jge mov jne sub test fisttpl sub out leave enter (bad) mov push mov pop dec cld sub add dec aaa jns adc sbb xchg ror int mov (bad) cmp test add jmp push movsb jge jnp cmpsb out adcl mov mov stos jmp lea lock aaa xor and leave hlt cmp pop ljmp inc pop inc (bad) mov ljmp push xor inc inc in cltd roll xlat lods adc imul mov push push pop inc mov and rolb mov dec xchg pop and mov aam or sti mov cmpsl pop pop jo and (bad) xchg sbb pop add pop stos push inc gs mov jmp decb hlt push push test mov cmp xor and adc dec adc add mov adc clc out enter push nop mov add adc test push or cmpb or orl mov sbb mov cmpsb sahf fisttp sbb out popa add dec push cmp cltd in adc or jnp stos cmp repnz xor inc xor xchg mov sub dec (bad) dec pop mov insb popa push push in imul iret mov jge mov fistp xchg mov sbb (bad) fnop cwtl push xor sub and gs and jns xor adc shlb int mov fistpll test push movsb jge arpl scas xor repz push mov adc cmp jp mov xor hlt cmp pop mov xchg add addr16 mov ljmp cmp mull shr (bad) sbb (bad) adc jne or jb cmp lcall pop inc call pop and mov mov aam sti mov mov pop mov xchg sbb pop in stc stos sub mov pushf in outsb in or hlt adc fnstenv cmp and dec adc add fldcw xor xor rcll cmpb and adc test stos or aam push in inc and pop jne mov mov mov mov out popa add dec xchg cmp adc or js stos pop lret mov xor inc pop idiv mov sub dec notl pushf add mov imul ret mov das push mov adc pop push int3 call (bad) fnop push dec stos mov pop dec cld sub inc clc mov jns sub sbb (bad) out int mov (bad) lahf dec xchg test push movsb jge arpl mov ljmp mov mov xlat lea cmpsl rcr inc and hlt cmp pop mov xchg sbb data16 mov ljmp and mov cltd (bad) sbb push adc jne or add mov lcall ret mov jo pop and mov movsb scas cmp add je cmc in and mov inc and pushf in push or test mov cmp (bad) cmp and dec adc add mov (bad) adc sub mov push push xchg (bad) movsb call (bad) test lods add cli out push or adc in inc cmpsl mov pop cmp mov icebp xchg das add mov out popa push clc in push inc test movsb cltd test adc push mov stos (bad) lret mov xor dec sbb daa mov sub pop testb add popa xor imul adc or xor jge mov cli adc sub in mov shlb ds bound jl push cmp dec (bad) clc pop scas and jns xor or ror int mov (bad) loope cli test cmpsb lret fstl jge bound mov fwait sbb stc push mov shrl stos jmp lea lock and leave hlt cmp pop stos cmp rcll mov ljmp fidiv and in cltd sbbl jno sahf in movsl jne or movsl adc pop inc mov and ss or and mov push scas repz mov mov movsb mov xchg sbb push js bound jne scas mov std jmp orl cmp test mov insb or pop adc dec adc add cmp and call sarb mov add xor test lods add cli dec push or adc in inc cmpsl mov pop cmp mov icebp xchg das add mov push clc in push inc pop negl push mov stos fcmove repnz xor dec std hlt jl sbb imul out pop testb add inc mov mov pop das xor jge mov cli adc sub in mov shlb dec dec bound jl push cmp dec std clc pop scas and jns xor jnp dec ror int mov (bad) loope cli test add jge bound mov fwait sbb stc push mov xor xchg stos jmp lea lock and leave hlt cmp pop stos cmp rcll mov ljmp test and in cltd sbbl sub in movsl jne or add js lock lcall dec inc mov pop and mov std scas btc mov or lods and sbb in push ret lods mov in jae (bad) cmc (bad) pop test mov sub push aaa push and adc add cmc and (bad) jae push call nop mov add bnd shr addr16 mov or adc in inc mov or pop cmp mov icebp xchg fs mov out popa add inc cwtl cmp cltd xchg adc or jae stos push lret mov xor dec imulb std sub (bad) jge push add xor imul cs test xor pop rorl (bad) int dec or (bad) dec lock shrl pop dec fdivrl imul pop scas and jns xor cmp dec repz int mov mov test add jge arpl cmpsb std xorl mov loop jp jmp aas lea rorl inc xor and leave hlt cmp pop sub xor lods nop inc inc pop inc (bad) mov ljmp jge and fistpl push aam pushf in les or sahf push jnp aas mov and pop inc mov pop mov cld repz sti scas icebp test mov adc mov and or stos pusha inc fstps pmulhw hlt cmp fnstenv aaa inc and adc dec adc add cmp and (bad) jg push call push ds sub xor test les dec cli test or adc in inc mov pop cmp xchg pop push (bad) mov out popa add inc cwtl cmp cltd test adc or or hlt jae stos or repnz xor dec xor scas mov sub fdiv jge push add xor imul sub or rorl arpl mov sub (bad) dec sar popa add lods dec bound mov dec push clc pop scas and jns xor sbb dec ror int mov mov test add jge arpl cmpsb cld xorl push mov jecxz jp (bad) loopne lea aaa rorl xor and leave hlt cmp pop sub xor scas nop inc inc pop inc cmc mov ljmp jge and out cltd inc sbb adc imul jg div popf push jp inc mov and pop inc mov pop and mov stc scas push xchg sti mov scas add jne aad cmc in es inc or pop packssdw mov fwait shrl in or hlt aaa imul cmp add dec adc adc cmp and (bad) jg push call adc sbb movsl call (bad) test les inc cli jle or aaa adc hlt adc cmpsb gs cmp mov cmp inc nop xchg or popa pop clc xor cmp pushf test adc dec divb stos or aaa repnz or xor xor scas mov sub xchg out push push add imul rcll das xor jge mov int dec and sub in add (bad) popa add jmp bound mov dec push clc add adc sbb rcrb push mov mov test adc outsl push arpl cmpsb cmp ds mov jecxz jle xchg in lea dec aam dec inc xor and leave idivb cmp addl sub jmp mov push cltd es pop xlat (bad) adc jne or div sahf push jp inc mov and pop inc mov pop and stos (bad) imul mov mov add jp adc xchg xchg sbb pop push js stos fs std mov test gs (bad) subb out inc adc popf add cmp and (bad) jle or mov push push jo lret call ret test roll jmp add in inc out mov je mov mov dec test sbbl and pusha inc repnz cltd test outsl jbe mov stos or repnz and dec xor mov std xchg std fincstp jg inc adc jo insb inc mov das mov jge mov int dec sub lds jbe sar popa in scas dec popa xchg fwait dec dec cld mov dec sbb add icebp daa lret sarb dec ror int cwtl dec fisttp mov jge arpl std xorl push mov loop jp jmp cmp jp rorl imul fildll in pop and scas nop inc inc jne (bad) mov ljmp jge and out cltd inc sbb xchg push aam pushf in clc pusha add sahf push jle sub sub in pop inc hlt movsl cli dec xchg pop jg sarl sti scas testl jno adc sbb add imul sbb fwait je lods mov in gs or hlt cmp test and adc dec adc add loop and sub push call push ds sub std insb add xor icebp jnp shll data16 adc in inc mov pop cmp cli mov aaa xchg push push (bad) mov out popa add inc cwtl cmp cltd test adc jnp ret lret mov xor dec xor scas mov sub fdiv pop inc push add push in imul sub out sub inc or mov adc adc dec or cmp es dec dec xchg lods pop and xchg (bad) lea dec xor out scas dec dec cltd jns xor sbb and loope push mov fbld add jge arpl cmpsl xchg sbbl mov call push fisttp pop dec add mov and (bad) nop movb mov add add jmp push sbb cmp popl add sarb ljmp negl mov push pusha sbb or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov repz out adc movsb xchg js jo inc out lret (bad) or mov xchg lret xor xchg popf test inc and cwtl jp jns xor sub pop sub mov push test int3 xchg mov out xchg scas (bad) repnz jmp ja jecxz inc mov dec cmp (bad) mov ret cmp and loope mov mov cmp hlt jo idivb repnz cmp dec in lods iret in add xchg adc push repnz sar jne hlt cmpsb xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs rol adc clc cwtl jecxz jge xchg cs jb push loope cmp lret add push pop loope das jg test cmc jp jo enter in xchg imul pop das sub test (bad) (bad) jo popa sti mov add add jmp push sbb cmp popl add sarb ljmp negl mov push pusha sbb or push fidiv test in mov add xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov repz xlat stos mov movsb sahf xchg mov (bad) or xor loop stos nop xchg popf test inc and cwtl jp jns xor sub pop sub mov push test int3 xchg mov out xchg scas (bad) repnz jmp ja jecxz inc mov dec cmp (bad) mov ret cmp and loope mov mov cmp hlt jo idivb repnz cmp dec in push dec in sub repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs rol adc clc cwtl jecxz jge xchg sub loope cmp lret add push pop loope and mov enter in xchg imul pop das sub test (bad) (bad) jo popa sti mov add add jmp push sbb cmp popl add sarb ljmp negl mov outsl fistpl mov mov rorb dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov repz xlat stos mov movsb sahf xchg mov (bad) or xor loop stos nop xchg popf test inc and cwtl jp jns xor sub pop sub mov push test int3 xchg mov out xchg scas (bad) repnz jmp ja jecxz inc mov dec cmp (bad) mov ret cmp and loope mov mov add (bad) int mov lock in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs rol adc clc cwtl jecxz jge xchg sub loope cmp lret add push pop loope and mov enter in xchg imul pop das sub test (bad) (bad) jo popa sti mov add add jmp push sbb cmp popl add sarb push adc adc pushf mov lcall mov or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov repz xlat stos mov movsb sahf xchg mov (bad) or xor loop stos nop xchg popf test inc and cwtl jp jns xor sub pop sub mov push test int3 xchg mov out xchg scas (bad) repnz jmp ja jecxz inc mov dec cmp (bad) mov ret push pushf mov outsl rorl fstl ret sbb int (bad) or cmp dec in lods iret in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs rol adc clc cwtl jecxz jge xchg sub loope cmp lret add push pop loope and mov enter in xchg imul pop das sub test (bad) (bad) jo popa sti mov add add jmp push sbb cmp movsl (bad) sti add or in repz cmp xchg mov push pusha sbb or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov repz xlat stos mov movsb sahf xchg mov (bad) or xor loop stos nop xchg popf test inc and cwtl jp jns xor sub pop sub mov push test int3 xchg mov out xchg scas (bad) repnz aad hlt xchg leave cs aam int or iret fcmovu sub jmp adc or jo idivb repnz cmp dec in lods iret in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs rol adc clc cwtl jecxz jge xchg sub loope cmp lret add push pop loope and mov enter in xchg imul pop das sub test (bad) (bad) jo popa sti mov add add test lock jg outsl out inc inc stos repnz or in repz negl mov push pusha sbb or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov repz xlat stos mov movsb sahf xchg mov (bad) or xor loop stos nop xchg popf test inc and cwtl jp jns xor sub pop sub mov push scas inc ds enter cmp pop and mov pop cmpsb rcr pop add repz fcmovu sub jmp adc or jo idivb repnz cmp dec in lods iret in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs rol adc clc cwtl jecxz jge xchg sub loope cmp lret add push pop loope and mov enter in xchg imul pop das sub test inc (bad) pop pop xchg sti clc (bad) cmp out jmp mov pop and jg outsl out inc inc stos repnz or in sbb pop negl mov push pusha sbb or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov repz xlat stos mov movsb sahf xchg mov (bad) or xor loop stos nop xchg popf test inc and cwtl jp ret and pop jecxz inc jg mov xchg inc unpckhps and mov pop cmpsb rcr pop add repz fcmovu loope mov mov cmp hlt jo idivb repnz cmp dec in lods iret in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs rol adc clc cwtl jecxz jge xchg sub loope cmp lret add push pop loope and mov enter in xchg imul fcmovnu sub xor pop test lods cmp mov mov dec ficoml cli pop and jg outsl out inc inc stos repnz sarb ljmp negl mov push pusha sbb or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov repz xlat stos mov movsb sahf xchg mov (bad) or xor loop adc xchg mov xor les and xchg push xor rcll icebp xlat pop jecxz inc jg mov xchg inc unpckhps and mov pop cmpsb rcr mov ret cmp and loope mov mov cmp hlt jo idivb repnz cmp dec in lods iret in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs rol adc clc cwtl jecxz jge xchg sub loope cmp lret add push pop loope and cmp repz call mov (bad) cld mov sub cmpsl pop test lods cmp mov mov dec ficoml cli pop and jg movsb push mov popl add sarb ljmp negl mov push pusha sbb or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov repz xlat stos mov movsb sahf xchg mov pop clc push mov dec xchg cmpsb cmp cmovb push inc cmp dec sbb jp xchg push xor rcll icebp xlat pop jecxz inc jg mov xchg inc unpckhps and mov xchg dec cmp (bad) mov ret cmp and loope mov mov cmp hlt jo idivb repnz cmp dec in lods iret in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs rol adc clc cwtl jecxz jge xchg sub pop sti cmp dec repnz pop repz lret dec inc jp sahf lret enter in pop cmpl sub cmpsl pop test lods cmp mov mov dec ficoml cli pop jmp push sbb cmp popl add sarb ljmp negl mov push pusha sbb or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add push repz out inc imul cld mov jo std cs mov pop (bad) movsb push outsb dec jo scas sbb push cmp inc xchg cmpsb cmp cmovb push inc cmp dec sbb jp xchg push xor rcll icebp xlat pop jecxz inc jg mov xchg inc unpckhps jmp ja jecxz inc mov dec cmp (bad) mov ret cmp and loope mov mov cmp hlt jo idivb repnz cmp dec in lods iret in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl notb push cltd push gs (bad) jge adc jge jecxz lret repnz out xchg mov mov sti sbb lret dec inc jp sahf lret enter in pop cmpl sub cmpsl pop test lods cmp mov mov dec adc add jmp push sbb cmp popl add sarb ljmp negl mov push pusha sbb or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl dec inc stos outsl std cs icebp mov in add cmp out insb in pushf xor sbbl sahf sbb pop mov add jo scas sbb push cmp inc xchg cmpsb cmp cmovb push inc cmp dec sbb jp xchg push xor rcll icebp xlat pop jecxz inc jg mov xchg mov out xchg scas (bad) repnz jmp ja jecxz inc mov dec cmp (bad) mov ret cmp and loope mov mov cmp hlt jo idivb repnz cmp dec in lods iret in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf inc xchg push mov inc and addl jne or add sub xchg or add cmp xchg call or sbb lret dec inc jp sahf lret enter in pop cmpl sub cmpsl pop test lods cmp mov dec lret add add jmp push sbb cmp popl add sarb ljmp negl mov push pusha sbb or push fidiv push mov dec and stos data16 xchg aam test pop std sbbl int sub jg cs (bad) int pop out lea xchg aam push adc sbb pop mov add jo scas sbb push cmp inc xchg cmpsb cmp cmovb push inc cmp dec sbb jp xchg push xor rcll icebp xlat pop sub mov push test int3 xchg mov out xchg scas (bad) repnz jmp ja jecxz inc mov dec cmp (bad) mov ret cmp and loope mov mov cmp hlt jo idivb repnz cmp dec in lods iret in add xchg adc push repnz sar dec insb ja xchg (bad) dec gs push pop popf jl xlat mov pop xchg flds jno or cltd mov lea adc xchg call or sbb lret dec inc jp sahf lret enter in pop cmpl sub cmpsl pop nop inc mov and popa lcall mov adc add jmp push sbb cmp popl add sarb ljmp negl mov push pusha sbb or push fidiv push mov dec and adc add adc or lcall repz mov pusha xchg xor jb cs (bad) int pop out lea xchg aam push adc sbb pop mov add jo scas sbb push cmp inc xchg cmpsb cmp cmovb push inc cmp dec sbb jge xchg inc xchg fstl jge arpl cmpsb std xorl push mov jecxz jp jmp lea rorl xor and leave hlt cmp pop sub xor scas nop inc inc pop inc (bad) mov ljmp jge and out cltd inc sbb adc imul jg div sahf push jp inc mov and pop inc mov pop and mov sti scas repz mov mov adc (bad) xchg sbb pop or stos pusha inc fistpl or or hlt cmp test mov stos or aaa inc and adc dec adc add cmp and (bad) jg push call push ds call (bad) test les dec cli test or adc in inc mov pop cmp mov aaa xchg adc nop sahf sbb popa add inc cwtl cmp cltd test adc or jae stos or repnz xor dec xor scas mov sub fincstp jge push add jo imul das mov rorl arpl mov sub (bad) dec sar popa add scas dec bound mov dec push clc pop scas and jns xor sbb dec ror int mov mov test add jge arpl xorb xchg insl or stos mov insb jg add xor and mov and scas nop cli inc lock call mov and out cltd inc sbb ret imul jle div sahf push jp inc mov and pop inc mov pop push jle mov sahf scas mov inc cli mov xor sbb pop push inc mov adc fdivs (bad) or hlt cmp test pop andl and adc adc adc add (bad) push clc cmp push js lods sub call (bad) test hlt add push cmp or imul imul cmp fidivr xchg js mov sub add inc mov sbb bound mov repnz repnz mov imulb std jnp int jl pop add imul rorl das pop inc jns cmpsl mov adc adc sub xchg rcrb dec or adc (bad) push cmp dec outsb clc bound js scas sbb insb ror int mov (bad) dec stc test push (bad) jge arpl xchg sbb fwait sbb stc popa mov out push push lea insb push sarl dec sub push and mov and scas nop xor inc test shrd lcall xlat ret imul mov push pop pop mov lcall xor mov dec in and mov (bad) scas addl push sarb cmpsl sbb pop cmp stos pusha inc icebp fwait je lods mov in mov hlt push jp fld test or aaa daa and adc adc adc add (bad) jg push call pop test xlat call scas test test or in push pusha mov jae in adc mov cli ret jnp xchg ja mov sub pusha clc pop daa add cmp cltd int3 sbb jae mov jae stos outsl lret ret bnd (bad) xor pop (bad) lret shrl pop out mov add popa push jo imul rcrl jmp inc inc insb jge mov adc adc int dec sub vpcmpgtw scas popa jo rorb add cld into (bad) cmp dec insb clc je dec dec fdivrs xor sbb jo (bad) int mov (bad) dec out stos add lret mov arpl cmpsb stos adc jmp mov jecxz dec stos shl push lea shll jb ss jb add and lret loop sub sub test (bad) fcoms mov adc sub pop jno loopne cmpsl pop incl adc lret shl jae jnp mov nop sub outsb add lahf cmp ret push mov test fcoml xor shrb add push loope jno data16 (bad) fstl sti notb divb mov popf push adc sti xchg dec add and jno pusha xchg inc stos inc inc mov xchg movsl xor cwtl lret pop sbb sahf scas movsl outsb sub cmpsb inc jne dec pusha mov std iret push sbb (bad) jbe mov cmp push addb fcomps or jmp add add imul bound insl add or pop fist jbe ds add add inc sbb icebp bts mov jbe popf ret and inc inc mov xchg mov push xor or cmp xchg outsb int and push ja out jle cmpsl or mov jbe (bad) push movsl out and sbb push inc aad out vhsubps add clc xchg or dec call aas add pop dec jbe (bad) sbb xor inc push pop fucom jp jns fwait stc dec enter cmpsb std scas pop adc fs out pushf cld outsb cmp test sbb push xchg sbb jns lods jns push dec xor in sub push mov test pop xchg es gs mov and or stos pusha inc fistpl or or hlt cmp test mov stos or aaa inc and adc dec adc add cmp and (bad) jg push call push ds call (bad) test les dec cli test or adc in inc mov pop cmp mov aaa xchg adc nop sahf sbb popa add inc cwtl cmp cltd test adc or jae stos or repnz xor dec xor scas mov sub fincstp jge push add jo imul das mov rorl arpl mov sub (bad) dec sar popa add scas dec bound mov dec push clc pop scas and jns xor sbb dec ror int mov mov test add jge arpl cmpsb std xorl push mov jecxz jp jmp lea rorl xor and leave hlt cmp pop sub xor scas nop inc inc pop inc (bad) mov ljmp jge and out cltd inc sbb adc imul jg div sahf push jp inc mov and pop inc mov pop and mov sti scas repz mov mov adc (bad) xchg sbb pop or stos pusha inc fistpl or or hlt cmp test mov stos or aaa inc and adc dec adc add cmp and (bad) jg push call push ds call (bad) test les dec cli test or adc in inc mov pop cmp mov aaa xchg adc nop sahf sbb popa add inc xchg cmp cltd les or hlt jae stos or repnz xor dec xor scas mov sub fincstp jge push add jo imul das mov rorl arpl mov sub (bad) dec sar popa add scas dec bound mov dec push clc pop scas and jns xor sbb dec ror int mov mov test add jge arpl cmpsb std xorl push mov jecxz jp jmp lea rorl xor and leave hlt cmp pop sub xor scas nop inc inc pop inc (bad) mov ljmp jge and out cltd inc sbb adc imul jg div sahf push jp inc mov and pop inc mov pop and mov sti scas repz mov mov adc (bad) xchg sbb pop or stos pusha inc fistpl or or hlt cmp test mov stos or aaa inc and adc dec adc add cmp and (bad) jg push call push ds call (bad) test les dec cli test or adc in inc mov pop cmp mov aaa xchg adc nop sahf sbb popa add inc cwtl cmp cltd test adc or jae stos or repnz xor dec xor scas mov sub fincstp jge push add jo imul das mov rorl arpl mov sub (bad) dec sar popa add scas dec bound mov dec push clc pop scas and jns xor sbb sbb mov add dec inc add add add add or add jbe xor xor add add add push push add and add or add push je imul add sbb add add add inc push dec inc add add sbb add add insb outsl bound add add add push xchg mov add cli add add add add add inc add add add adc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add lret add push add add push add add push add add push add add push add add and push add aaa add add inc add add and push add add add add add push add add add add add add add add add pop add add add add add add push add add push add add push add add push add inc add add add add add add add add add add add add add add add add add add inc add add inc add add aaa add add and or iret add add add add add add add dec add cmpsb add lock adc inc add add push inc add add jp push add add push in adc cli push in push add pop inc add add or push add adc push add adc push add adc push add mov push add add add or or or push add add add add adc add add jle add add add add add adc lock add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add adc add adc dec add add add pop add add add add sbb add adc out add add add pop add add add pop add add add add add add add sub addl movsb add add sub addl movsb add add das add add add add add push add add add add add push add adc add sbb add flds or add add pop movsb add add add add pop add sbb adc push add add add add add add add adc add lcall add adc add sahf add add add add adc add jmp add add adc add lock add add add adc add (bad) or add add add adc add decb hlt add add add add roll call add add add add add add add add add add add add add add add add add add add xor roll sbb adc pop add add add pop or add pop or add pop movsb add add add adc or add sbb or add and add add add add add add add add add add add add add add add add add add and add add add jae add fsubs add add adc lcall and add add add add add add add add add add add add and xchg add pop add add and adc pop add add add xchg add add daa add add xchg add pop add add add add add add add add add add add add add add add add sub add add add add sub add add add add sub add add add add add add add add adc roll adc add js add add xchg add add sub add add add add sub add add add add add sub add add add addb add sub add add add add add add xchg add pop add add add add adc lar add add adc sbb lods add add add add add add xchg add add add add xchg add pop add add add add xchg incl loopne add push xor add add add add add add adc lcall xor add add add add add add add add add add add add add add adc cmp add adc pop add add movsb xor xchg add add add add xchg add pop add add add add adc incl lods add add add add add add test add pop add add adc roll les add pushf cmp add add add add cmp add add add in cmp add add add add add add xchg add add add nop cmp add add add mov add add sbb add cwtl cmp add add add add adc sbb dec add test test add pop add add add add movb add in pop add cmp add add addl push add add add addl push add add add les cwtl add pusha inc add add adc lock add add add add add add add add inc add add adc pop add add add inc add add xchg test mov or mov add add add add inc add add xchg sub xchg add add add add xchg add sub add add add add add inc add add adc sahf add push add inc add add xchg sbb add add add dec add add xchg inc pop mov push add add add xchg push pop rolb add add add xchg je in add add dec add add les mov pop add add add add les cwtl pop mov dec add add test add pop add add add add les mov add add add pop cmc add add add add add add add add adc hlt add add add loop add add loop add add out add add bound bound mov add add mov add add add movl add push push add add arpl add add (bad) pop add add bound bound bound adc xor add pop add add add add xor push add dec add popa add mov mov add add add add add jbe pop add add add add add add add add ret add fildl pop add add add add cmpsb add add xchg add add add sub add pop add add add add add mov add add mov add add mov add add add add repnz add pop add add push add adc rolb add add inc add fs jns in add add add addl add cwtl add roll fiadd cmc add add pop add add add add add add add rolb add add pop add add add add add add add add add add add aam mov mov rolb add add pop cmc add add pop cld add add or add add add add add add add add add add add add add add add add add add add add add mov add scas add inc add inc add inc add arpl dec add inc add inc add jg add jb add arpl fwait add add add adc add pop add add add add sbb add cmp add sbb add test add cmpb add add add add add add add add add arpl jle fwait add add add add outsb add add jnp xchg add add add add imul int3 add add add add add add add add adc add add xchg add push mov add add add add pop or pop adc add add inc add add add add or add dec add add add or sub add add add ret add pushf movb add nop movl movl jmp add add add add push add adc mov add adc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add pop add add add add add add add add add add add add add or add add add add add add add add add add add add add add add add add add add add add add add add add add add add or add add push add add add add add add add add add add add add add add add jp leave add (bad) add add cmp leave add add xor xchg add add add add stos add scas add add add add add add add add add add add add add xor add add pop add add add or imul or jge or add sldt add add add add add add add add insl popa je insl fs cs add je insl fs add arpl insb imul gs cs imul inc outsl jb jae push jns je insl cs jb ja outsb add jae gs add jae gs cs outsl jb add xor xor sub gs jne arpl jb,pn jae jne arpl add gs je add outsb je insl gs gs jo jb add jae gs cs jne je insl gs outsl insl jo insb gs gs imul imul inc jb popa jns inc jb popa jns push jne je insl gs imul fs add popa jb arpl outsl jb loope test loope mov arpl (bad) lods add arpl add je outsl fs popa jae add jae gs cs gs arpl outsb add jbe imul outsl insb outsl jb addr16 push push loope mov push popa bound outsb je outsl insb add je dec je insl push imul gs (bad) movsb add jb push push gs bound arpl popa imul je jb jae addr16 inc jb jo imul jo imul add (bad) mov outsl outsb gs bound inc jae gs bound addr16 inc jne insb dec popa insl add jb outsb addr16 (bad) mov loope mov jne gs bound xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl inc outsl outsb je outsl insb add je push gs add (bad) mov loope mov loope movsl add (bad) mov dec gs outsl fs outsb outsw add je push imul add push imul add (bad) mov inc outsb jne gs bound push jns je insl cs imul arpl add jb popa jns addr16 push popa bound addr16 push popa bound addr16 outsl insb insb arpl outsb add addr16 gs addr16 push imul gs loope mov inc jb jne outsb je jne insb inc js gs imul inc outsl insl popa imul inc jne jb outsb je outsl insl popa imul add (bad) mov push gs insb jbe inc jbe outsb je popa outsb fs gs popa fs inc jae gs bound gs insb jbe add je jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add jae insb jbe inc jbe outsb je jb jae dec outsb arpl arpl outsl jb insl popa je insl fs cs outsb imul jb add je inc outsb je jns outsl imul add jb jo popa jb gs inc outsl outsb je outsl insb inc jbe outsb je jb jae addr16 inc outsl outsb je outsl insb add arpl insb add je inc insb imul je outsb insb add je inc outsl outsb je inc outsl outsb je push gs push outsb fs jb dec gs jae jb push gs add gs arpl outsl outsb je js add je outsl jb popa je insb popa addr16 loope mov dec outsb jbe insb imul imul jo imul popa je dec outsb jae popa outsb arpl outsb fs outsb ja popa jo inc js gs imul pop dec gs popa add outsb jae insb add imul push outsl imul jae inc jbe outsb je jb jae addr16 dec outsl arpl imul je outsb inc popa jae add je insl fs cs outsl outsb je outsl insb inc outsl insb fs addr16 push imul data16 jb add gs inc imul jb jae imul gs add (bad) mov dec popa jns jne push gs imul je popa bound arpl gs pop add je pop add je inc insb imul add inc insb imul add outsb je gs jb je jb push gs je insb add outsb je outsl insb push je insb gs dec outsb push popa imul gs push push jns outsl popa jb inc jne jae jae je push imul pop pop add je inc outsl outsb je imul je outsl jne fs outsl jb add jne fs jo arpl imul add fs add imul arpl imul pop inc jae gs bound addr16 push gs arpl dec outsb fs dec popa je add js push gs jb je jb popa imul je jb jae inc jbe outsb je jb jae addr16 push gs inc outsl jne fs addr16 push gs inc outsl jb popa je insb popa addr16 dec inc imul insb add popa jo imul je outsl jb popa je insb popa addr16 je js inc outsl jne fs dec inc outsb jne gs bound push jns je insl cs outsl insb insb arpl outsb jae push je imul fs push jns je insl cs gs add jo outsb add je imul je imul je outsl jne fs inc imul jae bound je jb bound add jae gs cs outsl insl jo outsb outsb je outsl fs add imul jae bound je je add insb jne push jns add push popa bound outsb je outsl insb add jae push arpl jbe jb arpl je insl push imul pop dec outsl jbe jb outsb add je dec jbe jb outsb fs addr16 dec imul jbe insb imul je dec jbe jb outsb fs jbe insb jne add inc jb popa je inc outsl outsb je outsl insb add inc outsl outsb je outsl insb inc fs je inc outsl outsb je addr16 inc outsl jne je dec outsb dec outsl jne gs outsl jbe add dec outsl jne gs gs jbe add je inc popa arpl outsl insb outsl jb dec outsl jbe jb outsb add gs outsb fs cmp jb jbe je dec insl jo gs outsb je je outsl outsb inc gs imul inc inc xor xor inc inc xor cmp xor xor inc xor inc xor xor xor inc ss xor inc inc inc inc aaa xor cmp aaa inc inc xor cmp inc xor inc xor inc aaa inc inc xor xor ss inc aaa xor xor inc inc xor cmp inc inc cmp inc xor cmp inc inc inc xor cmp inc cmp xor ss inc inc inc xor cmp xor xor xor xor xor inc xor aaa xor xor inc inc xor add xor ss xor inc inc inc xor xor cmp aaa cmp inc cmp cmp xor cmp xor cmp xor add je push imul loope mov loope test loope mov loope mov and xor and xor and xor inc jae gs bound jb fs popa jb inc je jb bound add jae insl bound outsl jo jb addr16 jb bound add jae insl bound jb fs je je jb bound add jae insl bound imul outsl outsb inc je jb bound add imul jne add jae gs cs jne je insl gs outsb je jb jo gs imul insl push imul je jb bound add jo jb jae dec insb fs jae inc je jb bound add outsb je insl gs outsl insl jo je bound imul bound add insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae insl bound outsl insl jo outsb jns je jb bound add jae insl bound outsl outsb imul je outsl outsb inc je jb bound add jae insl bound gs jb jo imul imul jae gs bound imul imul lods pop mov mov jo out or xor mov mov pop jg aad cmp add add or add add add or push or or sbb add add and sbb sbb add add pop or adc adc or or sbb add adc push add adc push or pop push or or and add sub adc add push add sub or sub sbb and adc adc add add or add or sbb or cmp or or and push or add push push add or pop add or or or or sbb adc add push add add push adc add sbb sbb sbb sbb pop or or or sbb or push or add push add push or adc adc push add add add or add sbb inc add add add add sbb pop or sbb or or and adc adc add pop push add add pop or pop or or and adc adc add pop push add add pop add or sbb add add push push add sbb add adc add adc or adc add push add push add sbb insl push add adc jno or adc add adc or adc and adc and add adc add cmp push push or pop or jns or or adc adc add dec push add or pop pop or addb sbb and adc add addb and adc add addb pop or adc or or sbb push add add lea adc adcb sub add add add sub adcb sbb or adc push push add add push add adc or adc or or and adc add andb pop add sbb or add or adc push add push adc sbb sbb or or add sbb add add or push or add sbb or addb or sbb and adc add addb or pop or or or add or adc pop pop or or or and add xorb push add xorb add xorb adc pop push adc sbb or adc add xor pop add or and add add dec add xchg or adcl add adc lea and adc adc add or or cmpb or sbb and adc adc or add or add or or or or or add or or add or add add adc adcb push adc push adc add add and add xor addb sbb or add or or or or sbb push and adc add add pop push or or sbb and add andb adc or add add xor addb xchg push and add adc add add add add add or pop add addb adc or or add jge or adc and add or and add addb or adc add add andb andb add and add and adc add push add and add sub add sub or push adc push adc adc push adc adc pop push or sub sub or adc or add sub adc add add add add adc jo jb addr16 and xor xor add push add or je insl fs add or add xor xor xor xor add add and cmp xor sub sub sub sub cmp popa xor cmp add add add add add add add add push add push jb jo outsl outsb inc js gs imul ja add add or add add add nop add push xchg add add add add add add pop inc outsl jb js dec popa imul jb gs insb add add add and 