push mov push call test jne push call pop ret nop nop nop nop nop nop nop push mov lea push push push push movl call mov pop ret nop nop nop nop nop nop nop nop nop nop push push push push call add push push call push mov movl call mov push call mov mov push call mov add test je lea push push push push push call mov test je mov push push call mov push push push mov push push call mov push mov call mov push call test je mov push call mov pop test pop je mov push call call pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov push push call mov test jne pop xor pop ret push push push push push push push call mov cmp jne pop xor pop ret mov lea push push push push push movl call push call pop mov pop ret nop nop nop nop nop nop push push push mov xor test jle mov mov sub mov mov cmp jne inc inc cmp jl pop pop mov pop ret pop pop xor pop ret nop nop nop nop nop nop nop nop nop nop nop mov push push push push mov cmp jg xor sub mov js mov mov push lea push push call add cmp je mov inc cmp jle pop pop pop or pop ret lea pop pop pop pop ret nop nop push push push push mov mov push mov push add push mov mov push push call mov test mov jne mov push push push push call test mov jne pop pop pop pop pop ret mov push push call push call mov xor push push mov mov mov mov mov push push call mov push push push push call mov mov add mov mov push shr rep mov push and rep mov mov push mov add mov mov call mov mov add sub je push push call add push call add test je push call mov add mov test je add test je push push push call test jne push call add xor pop pop pop pop pop ret movl pop mov pop pop pop pop ret nop nop push mov push push xor mov mov movl mov cmpw lea jbe push push add cmpl jne mov mov test jle mov push push add push push call mov mov mov xor shr mov rep mov and rep jmp mov mov push push add push push call mov mov mov mov add mov shr rep mov and rep mov mov mov inc add mov xor mov mov cmp jl pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop push mov push xor push mov xor mov cmp lea jbe push push lea mov mov mov shr shr mov and and shr test je mov mov push push push call jmp lea test lea mov je or mov mov test jne test je mov jmp test je mov test jbe mov lea push push push push call mov xor inc add mov mov cmp jl pop pop pop pop pop ret nop nop nop mov push mov mov add mov test jbe mov mov add test jbe push push push lea mov sub xor test lea jbe xor mov mov and cmp jne mov and add add mov inc sub add shr cmp jb add mov test ja pop pop pop pop ret nop nop nop nop nop nop nop push push push push push mov mov mov mov add mov test jbe mov push add push mov call test jne mov test je add push call mov cmp je mov mov lea push push call add mov test je mov mov mov inc mov mov test je mov lea add jmp mov lea mov mov test je test je and jmp lea push push call test mov je mov add add test jne mov push add push mov call test jne mov mov jmp pop pop pop xor pop pop ret pop pop mov pop pop pop ret pop pop pop mov pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov push push push mov mov add push mov test je mov mov add test je mov test je mov mov add add test movl jbe mov mov add push push call add test je mov mov inc add add cmp mov jb pop pop pop xor pop ret xor mov cmp je cmp ja mov pop pop lea mov add pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov mov push push mov push add call movl mov test je mov push xor test jle push mov mov mov cmp je push call mov inc cmp jl pop mov push call add pop mov test je push push push call push push call push call pop ret mov sub test push push je mov test jne mov xor lea movb rep stos stos mov xor lea movb rep mov push stos stos lea push push call lea lea push push call add test je mov push push lea mov push add xor push mov movb movb movb lea mov mov mov movb mov push push call mov add mov push call mov mov mov xor mov add shr rep mov and rep mov mov mov shr rep mov and rep lea push call mov push mov call mov mov mov xor mov add shr rep mov mov and rep xor test jbe mov xor mov and shl shr add mov inc cmp jb add lea push lea push push push call add test jne mov lea mov mov add call test je mov lea push push mov push push mov mov movb movb mov movb mov movb movb movb call add cmp je mov mov mov rep mov mov add mov mov mov jmp mov mov add add mov mov mov pop pop test je push call add pop pop add ret nop nop nop nop nop nop nop nop nop sub push push push call mov xor lea mov rep stos stos mov lea rep mov lea push push push call mov mov mov mov test mov je mov test jbe push call mov add test je push push call add test je sub mov lea mov rep call mov test je cmpl jne push push call add test je push call mov mov pop pop pop add ret pop pop xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop sub lea movb push push movl call push call test je mov mov lea movl push push push push push call test je movb mov push call mov and add ret nop nop nop nop nop nop sub push call test jne add ret push push call mov test jne add ret push mov xor lea movl rep lea push call mov pop cmp je cmp je xor add ret mov add ret nop nop nop nop nop nop nop push mov push push call push call pop ret nop nop nop nop nop nop sub push push mov mov push call add test je push push call push call test jne push push mov lea mov push rep stos stos lea push push call lea push push call movb mov or xor repnz not sub lea mov mov mov or repnz mov dec shr rep mov lea and push rep call add test pop pop je lea push call add test jne pop pop add ret lea push call lea push push call add mov pop pop add ret lea push push call add mov pop pop add ret nop sub push mov xor lea movb rep stos stos lea push push call mov lea push push push push call pop add ret nop nop sub push push mov push push push push call xor xor mov mov mov lea mov mov mov push rep stos lea push stos call mov or xor lea repnz not sub push mov mov mov or repnz mov dec shr rep mov push and push push push rep mov lea push push mov mov mov mov mov mov call mov cmp je lea lea push lea push push push call push call jmp lea lea push push movw movw movw movw mov call lea lea push push call mov mov mov mov mov mov mov mov push push push push push push push call mov cmp je lea lea push lea push push push call push call push push call pop pop pop pop add ret nop nop nop nop nop nop nop nop nop nop sub push push push push xor mov xor lea mov push rep stos stos lea push call mov or xor lea repnz not sub mov mov mov or repnz mov dec shr rep mov lea and push rep call add test jne pop pop pop mov pop add ret xor call cmp jae mov jmp lea movl push call mov add xor cmp sete inc mov call test je mov mov xor lea mov rep mov push stos stos lea push push call cmp jne cmp jne lea push lea push push call lea push call add pop pop pop pop add ret mov mov lea push push push call lea push call add pop pop pop pop add ret cmp jne cmp jne push call push push lea push push call add pop pop pop pop add ret mov xor lea mov rep stos lea push stos call mov mov lea push push push call mov xor lea mov rep stos lea push stos call mov mov lea push push push call mov xor lea mov rep mov mov mov lea mov lea rep stos lea mov push push stos push lea push push movl mov call add lea lea lea push push push push push push push push push push call pop pop pop pop add ret mov sub test push jne mov push mov lea rep lea movl push call test pop jne lea movl push call test je mov dec je dec jne mov cmp jne mov cmp jne mov pop mov add ret cmp jne mov pop mov add ret test jne mov pop mov add ret cmp jne mov test jne cmpb jne mov pop mov add ret mov pop mov add ret cmp jne mov pop mov add ret cmp ja mov pop mov add ret movl xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov sub test push jne lea push push call lea push push call lea push call test mov jne push call mov push push call test jne mov shr jne push lea push push call add push call pop add ret nop nop nop nop push mov sub push push push xor mov xor lea mov rep stos stos lea push push push call lea push call mov xor lea mov rep add lea stos push push stos call mov or xor lea repnz not sub mov mov mov or repnz mov dec shr rep mov lea and rep push mov mov push call call mov push call mov add cmp je cmp je cmp jne mov xor lea mov rep stos stos sub mov lea mov movl rep call add mov pop pop pop mov pop ret cmp jne mov pop pop pop mov pop ret mov mov xor lea mov mov rep stos mov mov stos mov mov lea push mov mov mov xor mov mov rep stos stos lea push push call mov xor lea mov rep stos stos mov xor lea mov rep stos lea push push stos call lea lea push push push push call mov lea push push call add test je lea lea push push call add test je mov xor lea mov rep lea push push push stos call mov mov lea xor rep mov lea rep lea lea push push call mov xor lea add rep mov push movl movl movl mov mov movl call push push call lea push call test je mov cmp je push push call mov push call xor pop pop pop mov pop ret lea push push call add test je mov xor lea mov rep stos lea push push push stos call mov xor lea mov rep stos lea push push stos call mov or xor lea repnz not sub mov mov mov or repnz mov dec shr rep mov lea and push rep call lea push call add test je mov xor lea mov rep stos stos lea push lea push push call lea push push call mov mov or xor repnz not sub lea mov mov mov or repnz mov dec shr rep mov lea and push rep call lea lea push push call add lea push lea push push call lea push call add push call sub mov lea mov movl rep call lea lea push push call add test je call mov push call pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop push call jmp int3 int3 int3 int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp jmp jmp jmp mov test jne cmp jle decl mov cmp mov mov jne push call test pop mov jne xor jmp andl mov push push mov call incl pop pop jmp test jne mov test je mov push lea cmp jb mov test je call mov sub jmp push call andl pop pop push pop ret push mov push mov push mov push mov test jne cmpl jmp cmp je cmp jne mov test je push push push call test je push push push call test jne xor jmp push push push call cmp mov jne test jne push push push call test je cmp jne push push push call test jne and cmpl je mov test je push push push call mov mov pop pop pop pop ret jmp cmpl jne pushl call pop ret push push pushl call add ret pushl call neg sbb pop neg dec ret jmp jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call xor cmp setne mov ret nop nop nop nop nop nop nop nop nop nop sub push push mov push push push push push push push call mov cmp mov jne pop xor pop add ret lea movl push push movl call test je mov mov mov push push push push push mov push mov call test mov je push push push call mov add push push push push push call mov pop mov pop add ret nop nop nop nop nop nop nop nop nop nop push push mov push xor mov cmp je push call mov mov mov cmp je cmp je push call mov mov cmp je cmp je push call mov mov mov pop pop mov pop ret nop nop nop nop nop sub push xor push push push movl call mov test jne pop pop add ret push lea push push movl call mov push call lea push push call test je mov lea push push call add push call add test jne mov mov lea push push call mov mov cmp je lea push push call test jne push call pop pop mov pop pop add ret mov push call pop pop mov pop pop add ret nop push push call ret nop nop nop nop nop nop sub push push xor mov xor lea mov rep call mov cmp jne pop xor pop add ret lea movl push push call test jne pop pop add ret push lea push push movl call mov push call mov push call add cmp jl mov lea push push push call add test jne mov mov lea push push call mov mov cmp je lea push push call test je jmp mov push call pop pop mov pop pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov push call add ret nop nop sub mov lea push push push movl call mov push push lea push push push push movl call add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov mov cmp jb cmpl je push call xor ret nop nop push mov push mov push mov push push push push push push push call test jne push push push push push push push call test jne pop pop pop ret pop pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop push push push push mov test jne mov test je push push call test jne mov mov add cmp je mov mov mov add add add mov lea test je mov push push call add test je mov add add add test jne pop pop pop xor pop ret xor mov mov add pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov mov push push push push push call ret nop nop nop nop nop nop mov sub cmp push push push mov jne mov push call add mov xor cmp mov je push lea push push call mov push lea push push call add push call mov mov cmp jne push push call mov cmp jne push push call mov cmp jne push push call mov cmp jne push push call mov push push call push mov call mov cmp je cmp jne push push call mov cmp jne push push call mov mov cmp jne push push call mov cmp je cmp je cmp je mov cmp je cmp je cmp je lea push push push mov call push call mov push push call add push push push call mov cmp je push push call mov add test je push lea push push push push call test je push push call mov add test je push push push push push call test je mov test je push push push call add mov jmp push push push push push push push call mov neg sbb neg mov mov test pop je push call test je push call mov pop pop pop add ret pop pop xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop sub push push push push push call mov push push call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call mov mov xor lea movl mov rep or mov mov mov mov mov push lea xor mov mov push push lea push push push mov mov mov movb movb movb movb movb movb movb movb movb mov mov call cmp jae mov lea push lea push push push push call cmp jae push lea push push lea push push push mov movl call cmp jae mov mov mov push lea push mov mov sub add mov lea lea lea push push push push mov call cmp jae mov lea mov push lea push lea push push push mov call cmp jae mov lea sub push mov call push call cmp jae mov mov mov mov mov mov mov lea mov push lea push lea push push push push lea push push mov mov call cmp jae mov cmp je mov mov testb jne mov push push call mov pop pop pop pop add ret nop nop nop nop nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov mov mov push push push call add pop ret nop nop nop nop nop nop nop nop nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov mov mov push push push call add pop ret nop nop nop nop nop nop nop nop nop nop nop nop push push mov test je mov test je mov test jne push call push push call mov push push call add pop pop ret pop or pop ret nop nop nop nop nop nop nop nop nop push push mov test je mov test je mov test jne push call push push call mov mov push push push call add pop pop ret pop or pop ret nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov push call add pop ret nop nop nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov push call add pop ret nop nop nop nop nop nop call jmp nop nop nop nop nop nop mov jmp nop nop nop nop nop nop push call pop ret nop nop nop nop mov mov test jne or mov mov jmp ret nop mov mov ret nop nop nop nop nop nop mov push push push mov lea mov push movl call lea movl call mov mov add ret nop nop nop nop sub mov mov mov push push mov mov mov mov push lea push push mov mov movl movl call add test jne lea push push call mov add cmp je lea push call add mov test je mov pop pop add ret mov lea push mov call add pop pop add ret nop nop nop nop mov xor cmp je mov cmp je push mov mov mov mov push neg sbb push and mov mov mov push call add xor pop ret mov ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov test je mov test je push push call add mov mov push push call add movl xor pop ret mov pop ret nop nop nop nop nop nop nop nop mov push push xor cmp je mov mov cmp jne cmpl jne mov cmp jne pop mov pop ret mov mov cmp jne movl mov cmp jne movl mov push push push call add cmp mov jne pop mov pop ret mov mov mov cmp mov jge mov neg movl cmp jl cmp jg mov mov shl mov mov mov neg sbb push not and push push call mov add mov mov push cmp jne call add mov pop pop ret call add xor pop pop ret push call add mov pop pop ret pop mov pop ret nop nop mov mov mov push push push push call add ret nop nop nop nop nop nop push push push mov test push je mov test je cmpl je mov xor cmp mov setne dec mov and mov mov mov cmp ja jmp mov test je dec xor mov mov inc mov mov mov mov mov mov mov mov and inc cmp mov je movl mov movl mov jmp mov mov shr add cmp jbe movl mov movl mov jmp movl mov test je dec xor mov mov inc mov mov mov mov xor mov mov inc mov mov shl add div test je movl mov mov mov movl mov jmp test jne movl mov mov jmp mov push push push call mov add cmp jne mov movl mov movl jmp test jne mov cmp jne mov mov mov lea push push push call mov add mov test je movl jmp movl mov test je dec mov mov mov inc xor mov mov mov mov shl mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov add mov mov mov inc mov mov mov mov cmp je movl mov movl mov jmp mov mov mov movl mov test jne mov pop pop pop pop ret mov mov dec inc mov xor mov mov mov mov shl mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov inc mov mov mov mov test jne mov pop pop pop pop ret mov mov dec inc mov mov mov xor mov mov add pop mov mov inc mov mov mov mov pop movl pop mov pop ret mov movl mov movl movl pop pop pop mov pop ret mov movl pop pop pop mov pop ret pop pop pop mov pop ret nop ja add out inc add loopne add sbb adc add mov adc dec add gs add rolb adc dec add inc dec add jnp add add adc inc and push mov push test je mov mov mov mov cmp je cmp jne mov mov push push call add cmpl jne mov push push call add mov movl mov mov mov movl test movl je push push push call mov add mov pop pop ret nop nop nop nop nop push push push mov push push mov push call mov add test jne pop pop pop ret mov push push push call add mov test jne mov push push call add xor pop pop pop ret mov mov push push push call add mov test jne mov mov push push call mov push push call add xor pop pop pop ret mov push add push push mov mov movl call add mov pop pop pop ret sub mov push mov push mov mov mov mov mov mov mov mov push cmp push mov mov jae sub dec jmp mov sub mov mov cmp ja jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov mov jb jmp mov mov and mov shr and cmp mov ja jmp sub movl mov and shr shr sub mov jmp mov lea push lea push lea push lea push push call mov mov mov push mov push mov push push push call add mov test je shr mov sub movl jmp shr mov sub movl jmp mov mov mov cmp jae xor cmp je xor mov mov dec mov mov shl add mov or inc cmp mov jb mov mov not and shr xor jne xor mov cmp mov mov je mov mov jmp mov test je mov test jne mov mov cmp jne mov mov cmp je mov cmp mov jae sub dec mov jmp sub test mov jne mov mov push push push mov call mov mov add cmp mov mov jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp mov jae sub dec mov jmp mov sub mov test je mov mov movl cmp jbe mov cmp jbe mov mov mov mov mov shr rep mov mov and sub rep mov mov mov add mov mov sub add sub mov mov mov mov jne mov neg sbb and mov jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov jb mov and mov mov and cmp ja mov and cmp ja mov push shr and lea mov push push call add mov test je shr sub movl movl jmp mov mov mov mov shr add cmp jae cmp jae mov mov test je mov xor mov dec mov mov mov add shl movl or inc cmp mov jb mov mov and sub mov mov shr mov mov inc mov mov mov shr add cmp jb mov mov cmp jae mov mov mov movl mov inc mov mov cmp jb mov push lea lea push mov push push push movl call add mov test jne mov movl jmp mov mov mov mov mov and shr and lea cmp jae mov cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc cmp mov jb mov mov and xor mov lea mov mov cmp mov jae mov sub mov shr mov mov mov inc jmp cmp mov je lea sub mov neg sbb add and mov add cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc mov mov cmp jb mov mov shr mov mov and add mov shr add mov sub mov mov mov mov and shr and lea mov add cmp ja cmpl jne mov cmp jb mov mov jmp mov xor mov inc mov mov dec mov jne mov mov mov mov shr and and lea cmp jb mov mov push push lea lea push push lea lea push mov push mov shr and and inc push add push push movl movl movl call add mov test jne mov mov mov push push mov push push push call add test je mov mov mov push push call add movl jmp mov mov mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add cmp jne mov push push movl call mov mov mov mov mov mov mov add cmp mov mov mov jae sub dec jmp mov sub mov mov test jne movl jmp mov mov mov mov mov mov sub mov add mov push push movl mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add push push mov mov push mov call add pop pop pop pop add ret mov mov movl add shr movl mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov movl mov push movl mov mov mov mov sub add mov mov push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add mov movl push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub add mov mov mov push push push call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov sub add mov push push movl mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov push mov push sub mov add push mov mov mov call add pop pop pop pop add ret mov mov movl push movl mov mov mov mov mov mov push mov mov mov sub add push mov mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov mov mov mov mov mov sub mov mov add mov mov push push movl push mov call add pop pop pop pop add ret mov mov push push call mov mov movl movl mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov mov mov sub add push mov mov push push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret movl jmp mov mov mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov mov sub mov add mov mov push push push call add pop pop pop pop add ret movl jmp mov mov mov mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov push mov mov mov sub add push mov push mov call add pop pop pop pop add ret lea les adc dec add pop dec add add dec add cmp push add jno add mov add sub inc dec add movsl dec add pop push add nop nop nop nop nop nop nop nop push mov push mov push push push call mov mov push push call mov mov push push call mov push push call add xor pop pop ret nop nop nop nop nop nop nop push mov push mov mov and shr test jne pop mov pop ret push mov test jbe push cmp mov jb mov sub cmp jl mov shr mov neg shl add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add add dec jne test je xor mov add inc add dec jne mov xor mov div mov mov mov xor div test mov ja pop mov pop shl pop or pop ret nop nop mov mov push push call add ret nop nop nop nop nop nop nop nop nop nop nop nop nop mov push call pop ret nop nop nop nop mov push push mov push call add test je mov mov mov mov mov mov movl mov mov ret nop nop nop nop nop nop nop sub push push push mov push mov mov mov mov mov mov mov mov mov mov mov cmp jae sub dec jmp mov sub mov mov cmp ja jmp cmpl jb cmpl jb mov mov mov mov mov mov mov mov sub mov add mov mov mov mov mov push push push push xor xor mov mov push push call mov mov mov mov mov mov mov mov add cmp mov jae sub dec jmp mov sub test mov je mov dec neg sbb and add mov mov jmp mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov mov mov sub mov xor mov test jne mov mov mov movl jmp test je mov and mov mov mov movl mov jmp test jne mov mov mov mov lea mov mov jmp mov test je movl jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov sub xor mov mov mov test je mov and mov mov mov movl mov jmp test jne jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov movl mov sub mov cmp mov jae mov sub mov mov jmp mov add mov cmp jb mov mov mov test je mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov inc movl mov mov mov inc mov mov dec mov mov cmp jne mov mov mov dec mov jne movl jmp mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov movl mov mov inc dec mov movl jmp movl movl jmp mov mov mov mov mov mov sub movl add mov mov mov mov push push push call add pop pop pop pop add ret mov movl movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add mov mov push push push mov call add pop pop pop pop add ret cmp jbe mov sub inc dec mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov add jne add imul xchg pop add or adc pop add (bad) pusha add ss add outsb popa add nop nop nop nop nop nop nop nop mov push mov mov push call add ret nop nop nop nop nop nop nop nop nop nop nop nop push push push mov push push movl mov push call mov add test jne pop mov pop pop ret mov mov push mov push lea push push mov push push push push push push push push call mov add cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je cmpl jne movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov push push push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov lea inc dec mov jne cmp jne mov mov mov mov pop pop pop xor pop add ret mov mov lea mov mov cmp jne inc add cmp jbe mov cmp mov jae mov mov mov lea cmp jne dec sub cmp jne cmp mov jbe mov mov mov mov shl cmp jae lea sub js inc add shl cmp jb lea mov mov lea sub mov jns pop pop pop mov pop add ret add mov mov xor dec je xor add add dec mov jne mov xor mov add cmp mov je mov mov lea mov mov inc mov mov mov inc cmp jb mov mov neg mov mov mov mov cmp mov mov mov movl mov mov mov jg mov lea lea mov mov mov mov mov dec test mov je jmp mov lea cmp jle inc mov jmp mov mov mov add inc add mov mov sub mov cmp jbe mov mov mov sub mov shl cmp jbe mov or sub mov add cmp jae inc cmp jae mov add shl cmp jbe sub inc cmp jb mov mov shl mov mov add cmp ja mov mov mov lea mov test lea mov mov mov je mov mov mov mov mov mov mov mov sub mov shr mov mov sub sar sub mov mov jmp mov mov mov mov mov cmp jg mov mov mov sub mov mov lea cmp jb movb jmp mov mov cmp jae cmp sbb and add mov jmp sub mov shl mov mov add mov mov add mov mov mov sub mov shl mov shr cmp jae mov lea mov add mov lea mov add cmp jb mov mov shl test je xor shr test jne mov mov mov xor shl mov lea mov dec and cmp je mov dec sub mov mov sub shl mov dec and cmp jne mov mov mov mov dec mov mov test jne mov mov add inc mov mov inc cmp mov mov jle mov xor cmp je cmpl je pop pop pop mov pop add ret nop nop nop nop nop nop nop push push mov push push mov push push push push movl call mov add test jne pop pop pop mov pop pop ret mov mov mov lea push push mov push mov push push push push push push push call mov add test jne mov cmpl je mov mov lea push push mov push mov push mov push push push push lea push push call mov add test jne mov cmpl jne cmp ja mov push push call add xor pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp jne mov push push movl mov call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop mov mov mov mov mov mov mov mov xor movl movl ret nop nop push push mov push push mov mov push mov mov cmp mov mov jbe mov mov sub cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep mov mov and add rep mov mov add cmp mov jne mov mov cmp mov jne mov mov mov sub mov cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep add mov mov mov and add rep mov mov mov pop pop mov mov mov pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov mov push push mov mov mov push mov push mov mov mov cmp mov jae sub dec mov jmp mov sub mov mov mov mov mov mov mov cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea test je xor mov shr sub mov test jne test jne mov mov and add xor mov lea test je xor mov shr sub mov test je and sub mov and add mov mov shr cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea xor mov shr sub mov test jne test jne mov mov and add xor mov lea xor mov shr sub mov test je and cmp jae mov dec mov xor mov mov mov shl add or mov inc cmp mov jb mov mov mov and add mov shr mov sub sub mov mov sub mov mov cmp jae mov mov sub add cmp jb mov sub cmp jbe sub mov mov inc inc dec jne mov mov mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp xor mov shr sub mov mov mov inc dec mov cmpl jb cmpl jb jmp mov mov mov movl sub mov mov mov shr cmp jb jmp mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop xor pop add ret test je mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop mov pop add ret mov mov mov movl sub mov mov mov shr cmp jb mov mov sub mov lea sub mov mov mov add mov mov mov sub mov add mov mov pop pop pop mov pop add ret nop nop nop nop nop nop nop nop nop nop push cmp lea jb sub sub test cmp jae sub mov test mov mov mov push ret int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret jmp jmp jmp jmp jmp jmp jmp int3 int3 lea jmp mov jmp add inc imul add ds add jp push fdivr decl jne and aas jae jecxz in cmp aas pop (bad) mov pop subb mov pop imul jg xor dec lods push out sahf out ret mov sahf pop fstpl cmpsl mov aaa sub sub cs mov jae pop test dec rolb stos jae fst push enter sub rorb fucomp dec fiaddl movsl push es cs lahf les int3 popl and popf adc rcrl (bad) ret lods movsl call into inc dec xchg (bad) icebp or ffree js rorl leave addr16 int addr16 (bad) in (bad) sub push dec mov int3 dec lret ds push pop push shrl in pop in popa lahf in jge dec dec and mov iret inc lret ret pushf hlt jl mov iret inc lret int3 stos movl push or fdivrs sbb fbstp mov lock aad sub mov or roll outsb xchg push inc (bad) loopne iret test sub outsl push divl insl xchg nop lods (bad) leave inc addr16 push pop mov or idivl dec mov inc pop in sub mov popf add sbb nop pusha out stos js push rcrl outsb xor pop xchg mov lret lods jl pushf sbb test ljmp mov or cmc cs fsubl pop loop fs mov bound cmpsl enter xchg jp pop push out ja call mov loope cmp movsl sub in cmp lea dec jbe repnz loop gs xchg shrb call lret adc mov lcall (bad) inc pop call dec mov lods icebp ja inc add fs hlt mov imul iret xchg ljmp in cmp ljmp lea ja testl js decl sbb andps pop pop bound sbbl jnp (bad) dec insl fcoml sbb cli leave add xchg es imul pushf push leave dec push pop add mov inc push xchg lret lock sub mov std sub inc pop pop mov inc jbe push rolb or rcrb fwait adc pop test out cmp cld sbb out es xchg inc push mov das imulb nop fldl2t push mov xchg stos std sahf sub call xchg insb add out mov addr16 mov and into inc sahf out test push imul aam mov stc lea push and mov shrb cmpsb mov mov mov xchg sbb xchg (bad) mov push inc xchg addl push cwtl test out or jns (bad) sub (bad) sbb lods gs pushf aad adc xorl push adc mov sub aad call pop cld rclb ljmp pop pop scas mov loope mov addb sahf pop add pop inc add loope pop aaa mov jge jae addb or sbb rclb add movsl jecxz ja (bad) ret aam dec or test in xchg shrl push inc mov popf cld inc push clc arpl inc inc cwtl (bad) xor mov cli push cltd aam ss or pop repz xorl and in stos sbb daa out je push test sub out and addr16 ljmp lock scas into add push push pop fidivrl cmc mov hlt int3 rorb add lret out clts imul xchg sub dec mov daa les ret push addr16 add and mov inc dec sbb cltd mov roll add mov int3 notl xor xchg push add leave fwait pushf mov push aas (bad) popf lock rcr cmp lahf pusha faddl push imul mov pop fadds pop mov out (bad) js cmc pop jno cmp xchg lock and mov cmp fwait cmpsb (bad) cmp test mov push es repnz cmp cli sub in cmp inc leave add push cmp repnz cmp adc jo fisttpl clc and fucomi ja jp add mov jecxz (bad) leave sbb pop fldl xor inc sarl mov iret adc jo push jno ret loopne call cmp dec push fstps pop jmp inc punpckhbw cmpsl cmc inc hlt inc push mov sbb push jg and es int xchg dec mov repnz add cmpsb push sbb sbb rcll jge xchg (bad) pop lds cs lock pop nop inc mov xor imul inc and sub cmp insb roll arpl (bad) orb pop fsubs (bad) cmpsb sub or xor lahf stos mov popf xor xorl pop dec jnp shlb (bad) lods test cmp sbb (bad) sarl loope repnz mov fnstcw loope mov test inc clc lods int negl sub pop outsl fs aaa movb xor and es pop push cmp push pop and shrb fs jle sub out mov into add dec fisubrl push xchg movsb stos clc add movsb push mov outsl pop les mov jecxz icebp and outsb mov in out push movsl pop repz sar rorl pusha mov aad mov adc sti mov in jmp arpl jp arpl aad and mov stos subl (bad) cmpsl shll push push adc (bad) and call mov pop inc jo enter jns ss in ljmp test cltd cmpsl cwtl add xchg sub push das mov pop aaa imul and hlt adc push cmp mov jo sahf testl xchg nop dec js gs xchg inc arpl sbb xor xchg sub push arpl and lods outsb mov cltd inc lahf cmp call add cwtl mov adc cmp jns push cmp mov imul push scas jb and addr16 inc lods cmpsb ja adc movsb push (bad) lock jge sub sar movsb push pop into (bad) xchg or cmpsb pop out jb inc imul scas cli jecxz mov adc pop repnz loope aad jmp rclb mov out je sub mov push (bad) jl sub mov (bad) jno push rcrb iret sar lock int stos mov dec pop fsin clc jle add (bad) mov inc movb sbb pop mov shlb pusha mov pop pushf negl in mov outsl push bound jmp dec xor jl xchg adc lcall lcall fs iret cmp mov popf xor mov jg xchg adc test push jae dec out jo lret xchg mov cmp sub xchg seta pop in aaa hlt aad rorb call sbb dec int lds inc push (bad) mov aas mov mov xchg pop repz ficomp adc add cld popa loopne insl scas pop sub fstps gs jecxz and sub mov arpl lods xor enter push xchg shr push fcomps inc ss mov pop cli in or push aaa sti cmp repz or mov loopne das push (bad) pop enter into popa aad rorl stos dec push or cwtl icebp mov hlt lret and jmp add jae mov sbb pop pop add pop cmpsb mov test loop lret mov int3 rolb popa mov mov sarl push push sbb aad and add jmp fistp xor mov loope stos pop shll pop push xchg cmc jmp cmc inc cmp adcl out div add das adc fs cltd mov loop mov mov xchg sbb jecxz mov pop es mov xor xor adc or mov popf lret stos adc addl dec ficoml nop cli mov negl imul dec scas movsb adc pop xchg push insb and sbb mov fnsave mov jno add jl cli ret adc jmp push or cmp cmp inc fcoms lcall loopne fs fisub mov addr16 ljmp cltd adc aam bound xchg mov (bad) and push dec loope mov lcall and mov fdivrs push and cmp pop lahf xor xchg sub lock or cmp pcmpeqb cmpsl adc icebp adcl lret nop ficomp mov inc sbbl or daa add cmp mov sbb sti sti popa dec xchg pop pop imul pop cmc (bad) out sti mov scas fcoml out mov shrb jle cmpsl sbb call sbb cmpb fs sbb sarb push jge xor lds xchg ja pop mov sbb xchg cmpsb in sbb loopne mov stos movsl or fwait lods shr icebp mov lock push fstl sub jae pop cmp scas fisubrl jle pushf adc aad mov jb inc insb push aam shrb fdivs imul xor pop sbb in nop jbe fnstsw cmp andb jne cmpsb jp cltd sbb dec jl pop cmp mov call add lods test xor inc outsl ss (bad) negb dec push push jle pusha or cmc aam mov ds mov pop icebp push push loopne xchg mov js or insb mov jmp push loop enter mov data16 sub dec cmc dec iret push js (bad) dec pushfw or into test inc xor inc push mov dec mov add sahf test ss inc stos pushf and aad (bad) jecxz inc xchg in push inc or lods test dec je (bad) lahf push imul pop test aam xchg out stos (bad) and mov pop sahf cwtl adc test into arpl sbb xor inc jl adc ss nop fistpll add pop sub lock les into cmpsb cmpsl mov out rcrl push jnp inc insb int mov and aad lock mov fldenv mov mov xchg repz stos repz or stos push insb jge cs int3 test ja cmpsl jecxz dec push leave fcmovbe imul fcomi push test mov fwait xchg or sbb and xchg dec or movsl inc data16 and (bad) jle imul jecxz mov inc jge popf andb mov or out insl push nop sti data16 mov imul and add hlt add (bad) fwait cmpsb cmp mov sub das jno xchg jmp mov insl popf jl mov repnz sti aam push sub pushl stos ljmp shll pop pop push in out test sbb xor mov subb xor out cmpsl test jne daa jmp test cmp xchg pusha jnp jecxz stc fidivl (bad) adc loopne pop and add dec dec testl lahf xor mov xor nop add imul xchg xchg out in test stc push xor mov pop (bad) push jne clc xchg push (bad) imull insl sub jmp js adc mov push cmp aas cmp pushf rclb push insb out or mov sahf or outsb rcll mov mov (bad) (bad) div mov aad pop push mov scas push xchg mov (bad) addr16 jo call ja call rorb call shlb cmp xlat data16 (bad) cmp out or sbb adc das cltd dec icebp scas enter fxch int3 js inc loop lea movsl into int3 aad js push mov lret push mov push sub xor mov mov pop xor lea jg pop test fwait add shrl es jge (bad) lods iret lds (bad) int xlat inc xchg push rorb fisubl enter aaa lahf inc stc sub dec fcomps mov leave or dec lds xchg repnz sbb sbb data16 into cmpb roll pop lcall aaa add test incb dec mov lahf addb (bad) and jmp mov push adc les inc add sbb push fstpt sbb push inc (bad) jmp lret lret in es cmp gs jl fstl sub outsb scas push push (bad) cltd xchg out insb push pop (bad) adc aam loopne insb insl into in flds mov int stos cmp into jp insb popf sub jmp mov in (bad) aad sbb lahf outsb xchg aad adc test ja lret gs add popa jmp mov roll sbb pop dec fs sub imul pop arpl add mov mov push pop jmp mov pop sbb xchg lock lahf inc popa push mov mov addr16 pop dec ss mov jl add popa test sarb jle jg dec push mov jg pop shll iret and mov add ret leave mov inc imul pop andl xchg aad pop je arpl rorb out cmpsb pop (bad) outsl mov mov lods dec fcoms xor ret mov les or jle enter jge xchg int3 aas pop dec testl lahf adc popa mov jl loop out jle and inc movsl pop sub insl inc ds adc inc mov ja dec sbb lret cmp push sbb or (bad) pop mov sub lds mov je (bad) lcall add jg jmp (bad) stos pop mov aas addl xchg jo neg dec jne outsb cmp sub mov (bad) xor (bad) or xor movsl inc dec das jnp xchg cmpsl dec sub dec mov jl xor out negb imul jbe ja movsl jae xor sbb cmp rcrl (bad) sbb or fwait sub je push xchg rol fistpll outsb fs loope out bound sub mov mov mov mov adc fsubl rcll mov xor idiv and mov xchg in mov lock jmp rorl or xor pop sbb adc and out das out mov mov lods stos pop (bad) mov cmc repz sub push or inc repz inc and or xchg xchg imul sbb push fnstcw mov mov push push cwtl jge ljmp inc hlt or test cmp outsb icebp cmpsl add pushf pop sar inc mov clc mov inc icebp mov movsl aas lret jp lods sbb push add adc jne pop mov out cmp mov cmpsb inc xor insb push dec fstpt sub out ficomp mov fmull cmp roll xchg clc (bad) mov push adc cld orl inc fmull mov dec mov cmp inc cs inc and or repz cmp xor mov repz mov pop gs mov lds sub add lcall enter addr16 faddp stos ret xchg faddl in loopne mov jecxz stos sub pop (bad) xchg fsubrl sbb rcrb fstpl insb adc (bad) rcll fistl in push xchg cmp test repz (bad) push dec popa cld movsb mov test jno sbb cmp cmp xchg sub iret push in cmp or pop lret jmp aad mov pop mov in test xchg data16 xchg shrb jmp jle in adc iret andl (bad) mov mov lods call jb out inc mov imul aas int dec push bsf test rorb int pxor or shrb mov and out or push outsl loop std rcrb sbb jb cmp mov movsb xchg fdivp xor mov cmc or dec add push and adc mov out mov out loop lahf mov fcmovu dec jge or lahf pop inc sbb and nop lret sbb adc or pusha adc movsb loopne cmpsl xchg scas cmp mov mov aad dec xchg and sub xchg pop sbb or mov cmp scas inc out test jb,pn push mov jp xchg pop cs in cmp mov daa mov add sbb mov mov mov push xchg xchg stos daa jp adc push cmpsb or xchg ret test dec aas mov leave sbb pop fcomip xlat dec cmpsl inc shrl mov pop push adc mov cmpsb mov iret adc cmp test pop ss (bad) xor inc fisttpll add shrl mov sub mov in int3 js adc xor pusha repz std subb push push test sbb pusha repnz pop inc lods movsl fiadd fldl lods fild fcomps push sub xchg in aaa cmp fiadd cli jmp cmp inc (bad) sub mov push inc add dec lods and dec xchg into mov and bound (bad) loopne loop movsl aad sub jne jns xchg rclb fcomps inc pop popf sbb sbb and push adc mov (bad) not cmp adc adc pop shrl loop mov shlb push daa cmp popa lds pop push sbb in loope jns adc stos mov out outsl pop inc jecxz xchg pop fistpl rcl dec pop mov sarb xchg adc adc mov pop vmovntps scas push ljmp jmp ret xchg sbb jp shll mov std pop sub sub mov xchg adc mov push push maxps lods push imul jo lds or (bad) mov mov test sbb sub and sti jns outsb or xchg es les aad in push rorb push mov fcmovbe inc stos test arpl mov or or popa pop mov mov xchg iret mov imul (bad) mov int pop or lcall sub or sub lret mov and inc fisubrl inc iret push notb lods fidivr outsl test jl dec (bad) and xchg sub mov lahf cmp xorl or fildl scas push out mov jl fs mov cmp test mov sti movb jo pop adc mov mov ret mov (bad) push or sub popa jo cli jb jnp pop push in sub pop or aas fld jge mov xor push loopne scas fcmove cmp jmp pop arpl ret ljmp xor inc sub jbe inc pop fcompl in imul subb loope inc in pop push inc scas or pop and imul fnsave fnsave xchg test call in add mov subb cmp loop int3 mov (bad) pop mov pop (bad) incl add and add mov and pop pop mov out test mov or (bad) int3 push add clc or in loope frstor xor inc sarl popa mov add dec arpl mov ljmp test mov sbb pop jns dec fmulp jp dec sub pmaddwd mov lock jecxz cmp cmp xchg je (bad) scas mov jl sti stos mov inc sub or movsb imul mov mov sahf mov xor ljmp adc push stc ds or ret push cwtl push std adc icebp mov jle jns or pop jmp lcall fistl fcmovnu out add int3 inc dec enter int3 andl inc clc adc sub xchg sub js fs sbb imul mov sub in sub aad into or cmpsl popa pop mov insl or ljmp out and inc inc ret add mov push cmpl cmc inc add mov arpl loope loop inc outsl fs or inc (bad) dec inc cmp pop sbb and dec dec push adc bound shrl push lea int3 jmp into cmpsl or shlb jo ret cmpsl sarb dec ds pop lret xor mov aam mov pop cli lds or dec cmp cmpsb call testb cld adc cmp push test aad in fstp sbb xchg sbb mov sti pop inc aas push (bad) mov or aad jecxz imul insb xor in sub sbb xchg (bad) xchg jo and dec rcl push aam testb mov add ja adc mov push push sub pop sub sbb in mov or lret call pop loopne test ja sahf or lods cmc int3 sarb ret ljmp pop movsb add enter xor mov popa lock ljmp leave (bad) rcll or push es fcomip add mov bound mov push repz popf jmp xchg (bad) jae and bound sbb xor fcomip mov enter inc add mov out sbb add lcall insl leave std mov test pop (bad) int adc push add add cwtl sub outsb mov imul faddp push inc cmp push and loop pop rcl jmp cmpl jl push insl pop sub mov cmp cld je pushf repnz mov xorb movsb test jp cmpsl dec cli test push lahf add cmp sub lret dec add dec insb ljmp cwtl movsb cmc popf je jecxz adc sub xlat mov push int (bad) lea fwait dec outsl addr16 jnp add jnp rclb inc cmpsl lret pop jmp mov ljmp dec orb cmp test loopne push inc xor adc cltd sti lret into jae ds inc add pop pop mov shr jo mov mov mov or pop into sbb cmovae leave aas push push pop (bad) popa movsl inc mov stc lea leave adc cmp test sbb push push (bad) leave enter fild hlt inc imul fnop add loop mov mov lret shrb push (bad) jb or int3 adc in inc adc cli mov push aaa cmc xchg sub outsl into out and popa pop mulb cmp out gs lret inc into bound and das lds scas stos or cltd xchg out mov stc jl mov pop shrb call mov adc cmp lock xchg or aas add push mov out sub addb sti adcb mov dec dec mov sbb ja sahf xchg aas roll imul repz pop push int3 lahf fmuls push xchg cltd and (bad) cmpsl mov add sub pop fildll xor pop and adc adc dec adc mov and and mov add movsl add inc ja push (bad) sbb pop sahf in xchg add frstor scas cmpsb mov (bad) repz cmp insl (bad) push push data16 xchg xchg dec xchg adc mov test and (bad) sbb sub push int xor leave scas sbb and les cs push xchg insl sbb mov pop sbb test lcall ss sbb push sub mov mov mov cwtl fdiv (bad) cmp sarb sbb push jnp xor and push imul (bad) (bad) pop scas int (bad) mov jmp fcomip std mov mov test int3 inc ljmp push cmp scas xlat call xchg dec insl cmp sbb push ja enter sub dec xchg scas fisubr jecxz insb xor lods sbbl icebp sub stos xchg fdivrs fsubr xchg adc push mov int3 sub outsw dec lea loopne in xlat pop mov mov fldl shrb adc mov mov lcall jg test iret jp lcall inc push add sti mov std js outsb xor or mov xor jecxz daa push mov xchg (bad) and loop cmp int3 rolb insb lahf stos shlb xchg mov inc xchg addl popa and enter fcoms lret push in lea stos scas in xlat arpl jns mov movsb int push iret ljmp rorl jg ficompl stos adcl lds dec shr je sbb (bad) push dec sub (bad) std adc enter inc mov incl xchg fnsave and aam push stos xlat es (bad) leave iret int3 jno outsb or aaa clc icebp and jg,pn addr16 nop cmp andb fmuls jo aad dec imul pusha shrb ljmp xchg fsubr jmp andb (bad) scas lea out sub dec jno sub adc rclb daa in scas in and test mov mov ret outsl scas nop sub xorb pushf enter ret ret inc mov repnz pop (bad) packssdw (bad) adc pusha add rorb in push push pop inc outsl leave adc mov fwait xchg mov push test cmp lea jno loop xor dec pop fsubrl outsl iret push (bad) inc lret mov fdivr int3 mov mov sub insl ficom ljmp sbb in inc sbb sub fstl (bad) push jle (bad) xor cmp add and lods inc lods sbb pop hlt lods (bad) or pop in (bad) xchg iret mov mov aas cmc ss shll ljmp shl lds sbb jbe adc lahf mov scas clc push ret cli in push test shl rclb mulps xchg mov cmc popa lods (bad) lock ret mov out jecxz add add lret int dec inc pop psubw fs xorl or push fnstenv sbb and orl push in dec popa mov fimul loopne mov mov jl inc xchg popa sbb adcl lods pop or xchg shrl in lret and jns jl,pt cli push sbb icebp cmc (bad) push mov mov mov outsb in insb loop int inc adc ficomp js mov inc test cmpsl in xchg dec stc hlt aad or or xor push inc sbb sbb icebp repnz jmp cli xlat add cmpsl inc pop outsl fisubr sub sub (bad) dec loopne or sub fimul aam rcrl stos push cltd adc sbb jl es (bad) sub pop into and ret lock cmp lcall in and or cli and or xchg (bad) leave inc mov sti inc mov cmc int3 popa stc stos loopne push fs adc stos mov addr16 xor insl xor sbb je cmp (bad) jno push scas fidiv dec (bad) xlat push pop ret dec mov cwtl stos mov insl test sahf aam movsb lahf dec scas dec dec mov decl sub xchg mov (bad) lcall inc xlat lret imul subl aad pop inc lahf adc js jns (bad) aaa leave dec out sbb inc mov and lcall mov cmpl icebp sub jno lret push pop inc loope add push scas or mov and data16 adc pop inc movsb daa mov adc test push icebp jo lcall test cltd shrl push call pop inc call popf insb push add add addr16 fucomi or in xchg cmp movaps mov stos decb (bad) mov mov ret pop repnz imul in shrb rclb lea adc jle pusha fistp pop fstpt icebp js inc cmp loope adc or scas fcoml popa and cltd add rcll jne mov xor jle rolb or add and daa lcall popa fisubrl pop xor (bad) adc stos mov mov jmp and fisubrl (bad) and popa out adc shlb incb jp mov adc dec add inc add int3 test mov subb mov mov sbb jp cli add scas aam pop loop (bad) jp mov pusha inc addb push jge jle neg dec jnp sub jge lods and and aad mull jo lods cs push jo mov lea xchg arpl push sbb xchg jns or (bad) in icebp ja xchg inc neg dec mov dec test cmp and pusha scas int3 push stc (bad) mov mov push pop stos mov int cs pushf push cltd adc jecxz aas xor inc push adc mov or push call cmp inc ret xor jnp dec popf jns push out fcoms pop cmc movsl xor mov jb push cmp sti jp (bad) mov add inc stos mov ficom out in push pop dec mov dec or ss int mov pop pop insb jmp popf mov (bad) lea addr16 stos into adc cs and or ror std xor mov and and cltd xor mov inc inc dec xor movsl scas movsl xchg xchg mov push sti cli jmp out shl (bad) iret ret add push inc loop faddl (bad) ss lret mov push cli sahf push sbb ror std xchg ljmp (bad) int xor bound ret lret pop repz dec add je jp mov fidivrl inc aaa inc inc aaa adc in cmp das xor dec aam xchg pusha add jg mov cld pop adc addb or or jp dec jg rorb push dec xchg jae sbb decb and aam mov sbb pop mov jmp sbb mov ja lret and jbe aaa (bad) fldenv ds lret mov sbb adc sbb leave movsb pop dec lods lods add xchg inc mov cmp test stc sub and incl jmp aas (bad) xor fwait push popf mov mov mov mov jmp in or lods pop or mov in inc daa lods jle pop inc lret or insb divb movaps or add mov (bad) xlat add fs aas out jno mov stos mov inc xor pushf add aas pushf push test pop fisubrl xlat dec xchg jecxz imul jnp add imul mov aam ret cli xchg int3 int cli popf mov fnsave aad sub adc jbe xor and in hlt lock jl movsl je (bad) and ja ljmp jp stc adc and or push mov aas ficom push test push in fwait nop xchg xchg xlat loop aas test and push dec in or int3 sarl push (bad) loopne xchg enter mov into shrl movsl push pop iret add popa scas into jae (bad) mov int mov pop sbb data16 sub fistp push push js fwait hlt pushf std (bad) push ficomp aam pop pop lds (bad) ljmp sbb mov lods mov das push arpl in fistp out movsl loop lock addr16 inc mov insl inc (bad) dec lock imulb push push inc sbb sbb mov dec (bad) cmp rcrl insb insb sub popa pop ja mov fs cld js sti mov sti xchg out mov jecxz or mov jg add push fstpl and inc sub mov test mov cmpsl push xrelease inc push push sbbl cmpsl xor lahf (bad) js dec out fs subl mov xor out leave jne aad out out clc lds fistp inc (bad) jmp clc sbb (bad) loop idivb jl test (bad) push mov pop xchg xchg adc sbb lock mov test popa scas and decb ljmp mov xchg fnop pop orl call movsl stos mov xchg (bad) sbb mov cmp pop adc push outsb jecxz jg add jmp inc pop dec movsl sbb or test hlt popa inc mov scas mov outsb mov aam sub jb loop xor leave je mulb sub pop add outsl std ss mov cld xchg imul imul in sub jb sub xor lret xchg or insb dec cmp mov out inc stc inc test pop int3 sbb aaa cltd (bad) sub fiadd xor jno enter push cmp popf jne xchg sub pop inc adc xchg mov dec sbb jae pop lods imul xor push addl test push stos pop push fwait jg xchg imul mov xchg xchg inc movsl mov adc (bad) inc pop lcall imul push insl inc add jp mov out inc in leave test mov incl pop xchg addr16 stos cmp sbb inc cli mov push sbb mov inc jb and aam movsl insb sub fwait lret xor rcrb int shlb cmc (bad) and lcall push scas jl loop jp arpl shlb xor rorl in mov xor and and jg jbe cmc jno movsb call sub ljmp jle push andl pop (bad) push pop push sbb pop mov scas call dec xchg outsl ja out sbb shlb push mov lea and cs sti dec aam (bad) lods fistl ficomp loop jle addl pusha jo and negl outsb sbb sarb imul dec repnz adc test adcb rorb test movsb push (bad) sub cwtl out mov xor insl pop inc dec add hlt xchg mov insb lahf mov push mov mov sbb cmp mov cmpb sub push pushf mov cs sbb and in shr push into daa cs mov mov xchg inc lods sti xchg sbb fcmovnbe sub xchg clc pop call sbb inc iret pop fucomp mov test fstpt in xor or cmp sub mov cmc inc scas pop jns lock (bad) xor fidivr and sub adc mov push pop jb gs mov (bad) repz mov outsb xlat push or std inc push pop push cli mov (bad) iret int3 xor mov cwtl and out rol jl clc inc mov pop outsl popa out data16 xor dec pop shrl mov (bad) dec sti vandnps in cmp leave sti mov pop dec sbb sub movsb and add xor add xchg insb dec adc ja daa rol jp jecxz dec sub jmp (bad) fistpl loopne hlt mov popf andl mov ret jmp mov addl cmpps adc inc lds in in or jbe push add dec std mov mov mov ja in sub ret icebp sub das inc pop xchg lock js pushw add pop aad fs adc mov add inc push lods (bad) aam daa jo push out test pop clc stos in inc xor (bad) cli push pushf and aad cmpsb inc (bad) (bad) sbbl movb movsb inc (bad) or xchg arpl add (bad) mov push mov jmp insl mov cmpsb xchg mov and sbb movsl icebp rorb xchg outsb xor cs fwait lods icebp mov ret nop fiaddl shrb xchg mov fsts lret push mov inc and add push jns mov js pushf cmp stos push pop jg sbb pop lret jns add scas mov mov push pop mov sub pop test leave sub aam mov stos incb les push ja inc in insb xchg ret push pop pop leave scas mov push sbb adc shlb pop xchg pushl mov mov shrb (bad) adc lahf (bad) mov fistl idivb shll push jle pop fwait add sub push ficomp aas jecxz dec fwait push lods fwait push rcll cmp frstor and jne mov add fdivs fldcw add lcall (bad) leave mov jne or add icebp mov adc or or cmpsb pop aam xchg mov push dec sbb mov inc mov sbb lds jl test call dec inc push cmpsb stos loope sti fwait pop iret outsl loop mov inc jmp push push in mov mov push (bad) (bad) iret jecxz push and and in sbb xchg leave test fwait stos cmc cs fs addb mov jae sbb cmpsl in jg mov jle rorl iret ja repz jb in jb add xchg pop push (bad) popf or pop ja int mov in pusha jbe imull push cmp loopne stos jp fisubrl out test popf xor std xchg xchg cmpsb add or cmc hlt je jne dec popf out in add sti in cmpsl push iret jmp ljmp dec pop call clc (bad) jmp push fisttpl jne idivl lods insb arpl mov jnp lret sub push jge jbe out out adc dec sbb pop jge sti dec (bad) cld xchg pop xchg pop jmp or std lcall scas jb,pn sub lds or iret daa xchg hlt jb sbb andl jmp xor jle (bad) das imul ja cmpsb jns jb lret mov mov lock fisubl das add shll shlb mov loopne xor inc and nop pop insl es inc test (bad) call sub dec iret pop add inc adc xchg rorb leave xor push add add (bad) sbb popa or push lea cmp xor pop inc cmp mov push ljmp mov jl sbb or fild (bad) sbb adc fadds jno mov enter lret sub lret sarl arpl pop xor inc mov dec or int paddusw lds out or loopne and shrb test cmp loop dec push mov loop ss (bad) mov mov mov scas roll mov gs fidivr push mov jecxz jbe adcb and sbb pop push mulb stc stos lea hlt push pop add loop stos loop push ffreep add lea lea xor push pop je fisubrl (bad) dec in dec mov repnz jmp push scas jp sbb jno cmp xchg mov add inc or inc icebp (bad) push cmp cmp aam iret xor je inc cmp popa adc pop in dec jecxz popa xchg jl insl mov add dec mov iret mov inc lock movsb xchg add adc loop push arpl push mov loop cli jmp out cld daa jmp (bad) cmc pop cmpsb mov in rclb (bad) xor add pop or rorb lods (bad) (bad) and mov lret call loopne mov ret push or daa rorb sbb xchg cmc ret nop xchg cwtl pop clc (bad) push gs and gs add pop enter or mov in ljmp jnp enter cmpsl aad fidivl cmp xchg sub or jl jno loopne (bad) mov out std sbb ret adc xor add (bad) pextrw lea sub pop sbb jno mov rorb xchg xchg xor dec jb jmp push lret jne inc adc cmp insb push test js jo out sub add cmpsl xchg out loop out push dec jg inc mov aaa cli sub xchg pusha dec adc jnp adc test call sub in stos insb ljmp out mov (bad) mov fcoms scas lret lock inc rclb cmc icebp push pop push sub jno scas sarb dec leave scas in pop mov mov xchg test pop in dec xor (bad) adc mov xor mov pop sub sub aam pushf repz imul shll lods movsl inc mov cmc pop xor dec dec test and dec pop test lds and dec adc pop sti sub push or dec jno in fnstcw cltd in out jo adc sbbb or imul inc in push pop fwait inc mov test call xor (bad) in jo jg pop push cli push (bad) lcall into ret jb xchg mov rcrb mov dec lods test roll mov pop push popf add pop in (bad) out mov loope jg data16 jge or push outsb mov lcall test out sbb iret in push jle mov pop sbb pop cmpsb fiadd cltd jnp xor roll or xor mov mov in push xchg xchg push sub es mov push xchg repz jbe repz lock adc aam out push (bad) ss out sbb dec in outsb sbb mov fmull fwait sub mov imul or push test xchg gs movzwl cltd push cmp mov into push push clc subl fcomps pop imul xchg cltd jg aaa xchg lea and inc sub psllq xchg loope mov popa ret fisttpl xchg loopne pop xchg stos pop or xchg out fsubp pop and inc aas daa cld jl dec adc movsb ret mov adc (bad) das iret mov mov fldl2t ret dec icebp cmp push sarl ror xchg imul mov jo rcll inc (bad) sub into dec mov cmp sti les ret xchg adc loop sbb cmp mov or xchg (bad) in idivl mov movsb test push pushf or add adc sbb faddl xor inc push xchg or pop mov (bad) inc cwtl ficoml sti jecxz repnz or test jle (bad) cmp ss mov (bad) dec xchg faddl and xor fwait xchg (bad) lds cmp sub insb cltd (bad) lds xor pop cs mov int sub inc std push (bad) jb repnz outsl cmpsb movb (bad) sti pop inc jg stos sbb int sub (bad) xchg push aas jno rcrb xlat jns ficom aas int mov clc scas mov xor fs mov mov pop fstpt cmpsb je in test sbb jnp aad dec pop icebp ja icebp add push and into idivb mov or xor mov (bad) outsb repz xchg push jbe adc fildll mov jo int cmp (bad) cmp movsb mov lock out lods or test (bad) ds adc pop enter jno or sbb test lret push pop lahf pop sub mov addl dec mov pop cmp xorb aaa push push cmpsl cmp lret inc push sarb adc in ficom or int or xchg sub in pushf cs sti rcr jnp and push sbb into cmpsl std cwtl ret test xorl cmpsl add add pop and pop jecxz push fnsave out push jne jge pop adc aaa fadds mov jb pop out nop outsl out adc push pop sub push pop movb (bad) cmc insl pop jno cmp std aaa or lock insl notb rclb and mov stc and addr16 sub rcll mov loop or lea pop push out xchg and out xchg roll loope mov loopne cwtl imul sbb pop xchg sbb scas adcl pop cmpsl mov fimul leave jg std aam aam lds mov fildll jp lods (bad) clc fnstenv mov pop push cli aas add push jne dec imul add mov shrb insl ficompl xchg mov out sbb mov cmc stc push dec (bad) inc std or aam lea leave fdivs cs iret jo jnp enter push sbb pop push mov pop push push outsb mov scas lcall dec cmp push xlat cmp add aas sub or pop xor popf cmpsb mov int3 dec lcall (bad) in mull cmpsl xchg push or sbb push adc dec test int jae push cmpsb dec mov sarb popa pop call ret aad sbb in fidivr pxor sbb nop test imul in mov in std or push add xlat sbb and mov push gs mov sub pop mov push icebp mov and jecxz jno into es lea mov or mov fadds ljmp icebp mov (bad) (bad) xchg leave mov inc ja dec lods mov push push lds aam loope pop xchg bound sahf rcll or call cmp sub pop call dec mov sbb mov lock xchg jno jg data16 (bad) push lds dec mov jo adc sub sub fildll ficoml (bad) popf inc cli xchg dec scas jnp or xlat sbb push pop jge cmp adc jnp pop lret flds push adc xor imul test jle and adc mov jbe mov jge mov mov jp pop pop push in lods add loop cld jle test int3 iret dec repnz add (bad) cmp mov add mov (bad) xchg mov sarb add ret pop mov pop adc add xlat arpl cwtl (bad) stos jle cli or fcomip adc mov fistpl (bad) jae std pop sbb cmpsb ja or mov push mov xor adc pop into dec scas addr16 aad inc imul lret ss pop mov add sub mov movsl inc cmc out cltd push out (bad) add pop inc shr ss rolb sbb inc lcall push fdivrs add push and pusha adc int jo out inc (bad) mov dec pop sub dec sbb adc cwtl mov test js cmp pop jg cmp jmp lcall mov (bad) test (bad) out ret clc loope push out insb and leave mov inc stos fcompl mov stos andl cmp pop fistpl mov insb mov mov mov mov sub imul test js in gs pop aad cmp out addr16 mov mov fsubrp sahf inc adc dec or mov sub jbe jnp mov sub add ret push pop mov ret loope jl bound and and or push jae pop ret cmpsb (bad) xor repnz sub cli movntq cmp xor popf pop xlat dec pop repz sbb cld cwtl or rolb mov test ljmpw jns jbe pop ret adc mov in loopne int3 in and gs dec push dec imul enter adc push enter aad gs mov jg jo imul insb cmp push dec pop rclb (bad) imul jbe pop (bad) mov nop leave nop dec rcr mov cmpsl sub or mov mov scas pop pop push loope mov dec mov into icebp jmp orl mov mov sbb fadds lret adc or data16 ljmp mov fadds add xchg loop aam inc test sbb jo dec xor jne dec rcl dec add dec mov pop xchg jp jno setg pop (bad) mov adc addb (bad) icebp loopne push adc dec jmp loope add cld mov push adc adc or cmc push rep test call aam lea aad jnp jg mov push popf cmp jmp (bad) xchg aam sahf mov inc lds int inc fnsave lahf imull sti xchg pop sti xchg popa rcl sti ret outsb test (bad) hlt popa ret pushf subl adc out sbb pop in mov sub cwtl insb (bad) lea call pop mov call (bad) cmpsl sahf or test push hlt cmc jg test cwtl test mov push loop dec fcoms and ret jo lcall cmp cmp icebp cmpsl fsubrs fwait subl sbb cltd push lds push and cld push pop xor xchg adc repnz fimull lods insl add adc movsl aad xor xchg into (bad) mov cltd cld loopne mov dec mov sub ja popf push xchg sbb ffreep push outsl cmp inc sbb cmpsl dec xchg (bad) loopne loopne or dec icebp mov test sub lods mov fsubrl push les test cmc je nop ljmp jecxz int mov lret (bad) movsl sbb mov mov dec repz fldt inc mov (bad) lock arpl push cmc rolb mov rcpps pop xor pop cmp clc fidivrl enter (bad) and add mov pop and in stc jnp pop mov or adc ffreep fadds inc loopne and cmp sete sbb fs add insl nop in pop dec ret ret stos ljmp mov ret dec cmpb or clc clc push pop lea lea cmp xor cmp sbb xor jg or lock mov mov mov cmp lahf mov dec mov sub lcall add dec inc or les cmp nop insl loopne shlb sbb lock ljmp fdivl mov dec stos cld xchg cli pop xor lock push or jge and pop sbb sti scas inc insl add pop xchg pop mov add lods lahf add lret inc lcall adc mov jno and rclb jno push fisttpl add (bad) fs push into add out cmp mov fildl in mov or add or shrl adc in jo xor push pop orl sub (bad) std and loope mov pop jle xlat ss pop pop les inc in test repz int3 ds (bad) shr (bad) int3 aam jne je fisttpll insb cli sbb pushf inc mov scas test and xorl (bad) enter xor lock xchg cltd and mov jmp push rclb pusha jne fldt pusha sub mov les cmp sbbb ss mov push cltd imul data16 pop ret repnz fdivr push movsb sbb out sarl cmp negl test pop scas fsub addr16 cmp jns cmp scas or adc scas fs xchg xchg cmp sub mov cmp rcr repz inc pop inc aam mov sub ja xchg enter sbb bound pusha ja xlat rcrl or and xor je out xor or lcall sbbl into dec imulb dec aas sub (bad) mov push mov subl cmp jg cwtl data16 or jbe,pn fsubs mov cmp sub scas lods sahf xor cmc test stc mov fistpl adc cmpsl push test pop jle fmulp cmp and pop pop dec and lods hlt mov test lds push xor out jle push rcll (bad) jne out pop sbb jne adc xor mov sti jge hlt pop loopne ficomp add lret or ror cmp dec loope dec and adc (bad) mov xchg inc mov in cmp sbbb sub clc mov push pop imul rclb sbb pop cmp jb sbb dec loop sbb dec jge sti cmpsl xchg jg pop test lcall push and sbb mov xor or test loope xchg dec out in xchg addl or fs outsb lods inc adc push add out test inc mov pop or lds js fcmovnu jge ret decb or pop push inc inc mov es iret push pop pop (bad) in movsb mov cmp int3 mov lods (bad) fldcw jg (bad) pop mov ljmp shll nop inc mov cmc inc fstps lcall and int3 lea or mov and test dec test into scas push popf test lods in hlt test pop and call cmpl push jns inc xchg stos in fwait pause out jmp jmp pop dec push div and sbb lock ss rorl cld mov push ljmp cli add or inc xchg push jp add sahf add out add mov and mov xor test or xor cmp lods xchg push pop les mov jbe sub dec xor pop adc dec push pushf mov ds inc adc jmp sahf jp lcall sbb push mov push insl and shlb es (bad) (bad) ror mov jne shlb loop cmc inc or out scas in les inc bound lret cmp or out and or jae (bad) fistpl rclb subl pop negb roll outsw mov iret add sub into push sbb jmp mov adc lret js sti fdivr lret push ds xchg shll mov cmp adc je dec or les push xor jmp jmp test inc lods cmp or pop cltd in fwait push test out jns (bad) test cmp dec movsl fldl cmp fcmovne dec repnz into sbb cli xchg adc mov aas mov mov repz jg in and xor (bad) lds and push out xchg mov jg incl int3 fdivrl loope stos or and lahf push mov and xchg inc mov mov sub jae clc pusha es push or push push sub aaa xchg nop sarl mov pop pop (bad) leave mov push iret cmp out xchg (bad) jbe cmp or xchg les and mov lods inc fimull xor pop pop pop ja lahf cmp test nop sbb inc pushf xchg add dec mov or fadd nop push mov aas lds push insb jo cmpl js cwtl pop pop lock cld pop push fwait add or cmp and repz hlt lret lock cmp xchg inc dec cmp add adc outsl or aaa cmovbe cld mov cli inc lahf roll pop ss xor and pop push add xor pop lcall mov dec stos cmp mov imul lcall lret in stos rorb mov aad mov loop cmpsl in inc imul pop sbb pop mov add lods pop ret sub push adc stc jns enter popa (bad) fwait xchg loopne bound aam iret pop dec out imul pop addl fiadd add xor divb or stos cmp mov in ljmp push jne mov pop lcall and repz inc outsl add add jg sti loope add cmp add pushf stc pop and fsubl into sahf or out fildll pop daa ja jg push and loop (bad) dec fnstsw icebp mov xor sub in pushf sbb inc xor adc add pop jl pop and mov aad repz and sbb lea stos stos inc lds push inc jp xchg or sbb mov ljmp xchg adc pop mov xchg mov mov dec aaa xlat and pop lahf xor je cmpsb push add andl les xlat mov aam jae or jbe pop int int3 outsl mov sub (bad) stc cwtl pushw lcall lods jp mov mov test repz jne xor add int3 shlb sub or test add xor jb pop xor rorl add adc mov sub jge outsb push subb adc ficoml lds sbb stos inc inc xor inc mov dec lcall pop (bad) popa dec add adc and pop shl (bad) sbb sub pop imul add jno fwait sub fwait jle adc sti dec stos or pop test ret adc pop xor out aaa sbb ret (bad) into pop inc stos xlat enter cmp mov imul cmp and in jnp jg jecxz push (bad) pop fs cli and jp fistpll sub and adc push pop leave cwtl cmc pop pushf inc cmpsb pop xchg imul insl fsubrs (bad) call xchg sub pop sub cmc cld aaa scas mov sarl cmp xchg push pop mov push lods fldenv cmp sti push and popf xor cmp sbb sub push or shlb out xor roll inc ret pop cltd push outsb lock in es (bad) in mov or and or sbb xlat xlat sub lret neg dec cmp add push mov lods cmp xor scas je cwtl (bad) mov or imull imul int sub jmp shrb mov lret stos jmp mov cmp pop sbb test ljmp xor sub lods mov call mov (bad) out and xchg aam inc pop movsb test push mov (bad) imul mov jp add sub xchg enter jae cmp clc js das and ljmp (bad) or inc or incl lds ret mov inc pop out jo ja xchg xchg add cld or int or es orb xchg test xor repnz fcomps popa cmp push arpl js pop addl inc cmp das test fcoms loopne js sub mov xchg cmpsl lcall in jo out jle fs xchg xchg lock sub sub sub sub das leave push incl test enter rcrl repz cmc roll push add aaa mov pop pop (bad) (bad) sti out pop xchg mov inc stos add or fs scas test push (bad) out mov dec adc inc (bad) aaa mov or sbb jecxz out jnp pop dec insb cltd push inc or xchg je aas push rorb lcall dec mov loopne ret mov adc push mov fstps dec pop inc stc rcrb pushf outsl sbb mov cmc jle mov inc cmc cvtpi2ps and ficoml jne mov jmp imul popa and (bad) (bad) aad pop je mov hlt into push sbb les add cld fadds add and sub in es cmp mov test xchg push je fistl test mov outsb pop aaa add mov bound push cmc in scas pushf andps pop pop js shl xor mov mov sub dec ret push pop mov (bad) or push push lret out lock in loopne dec movsb push std sub mov movsl xchg pop xor dec insl sbb lds inc pop mov (bad) cltd mov mov mov adcl ficom fimull int sbbl les jmp sub icebp sbb repz (bad) stc jmp divb add add movsb add mov scas mov aam jns mov xor divb das leave loop push inc adc jle (bad) loope fisubrl (bad) hlt or push sbb inc int3 ss sbb adc fidivl ja mov jnp js jecxz testb shrl scas rcr rcll lods pop mov iret scas roll xchg sub rcr insl test test push decl scas jns lds jns or jns lea nop hlt out (bad) dec sbb sti push imull (bad) adc xchg and lds int ret insb popa mov dec iret ret inc adc sbbl negl adc jecxz lds imul lods clc adc fnstsw lods inc pop sbb fcmovne pop xor nop cltd stos adc (bad) cmc mov imul xchg sub ror rorl push lret adc test (bad) add inc lds inc cmp cmpsl pushf sahf lods add pop call xor ret and or (bad) loopne (bad) insl mov adc push gs xorl push cmp aad xor fsubs or cli enter fiaddl call inc push sub hlt sub popf clc outsl lods cmp mov or add jmp pop sbb js push mov push mov fisttpl (bad) aad aaa ret mov addr16 mov dec jle cmp inc in sub push mov or sub aas xlat sub dec out dec and mov mov ss sub and lock inc in sub fcomps out loopne mov push push inc xchg push sub pop sub push cmpsb lret fldcw mov lahf mov stos pop xchg call inc push and repz aam scas leave inc sbb pop scas (bad) pop sub mov loopne lock fdivr int3 xor jge dec cmp imul icebp and jecxz and negl add jmp push push rorl mov fnop sahf out es imul mov pop dec mov sbb lret popf sahf xchg scas sub xchg adc inc xor cs and cs inc jbe xor cmp sub sbb sarb jl jge cld jnp addr16 and (bad) and sahf rcrl test lret xchg adc std add ficomp in test dec test (bad) cld icebp inc rclb stos movsb lcall add add cmpsl mov leave dec bound mov bnd fcoml cmp int3 cmp enter mov inc push push add xchg mov (bad) xor clc or aad pop (bad) testb arpl test add in pop aas push mov pop dec (bad) and dec aad sbb and push inc popf jecxz lea nop push int test push or xchg jle fsubl add push (bad) jnp mov cld outsl movsl movsb sahf xor mov je fild sarl cmp or pop push fild sbb jns mov adc add nop (bad) in aas and mov push push add icebp adcl lret sub in test inc test lds test int3 addl bound xchg in rcll xchg ja jno cmp addr16 movd mov leave or sub push pop rorb xor push test fimull mov sahf pushf sub xchg sbb sbb adc mov xchg daa mov sub dec adc repnz stc push or pop pop add or mov dec iret test insb mov arpl mov cmpsb adc pop mov and push mov je pop cmp or mov lcall ret xchg outsw (bad) xchg (bad) and imul mov push and nop dec cmpsb push loope loop or fidivr and nop loopne flds popa rorb push mov (bad) leave fwait mov jbe jae xlat faddl mov dec stos and out andl loopne cld data16 es lret aad sbb xor or rolb loop xor xchg pop inc fistp divb not jb xorl lahf (bad) mov inc jle pop std xlat loopw push inc addb lock sahf jns pop shr adc xlat pop test sbb pop jns push fcomps lcall movsl neg dec jmp aad push add xchg clc and stos addr16 push dec sahf fisttpll (bad) push int3 mov iret cmp loopne into popa lcall call or cmp fisub adcl lret sbb repz adc popf imul daa (bad) mov rcl mov and movsb ds popf jecxz mov jne mov popa std xchg or movb popa leave add inc (bad) out push leave pop add push sub add icebp sub stos xchg inc adc mov mov cld xor aam (bad) jge pop lock sahf add inc inc leave popa sbb (bad) insl test dec fsubrp in incb cwtl test push (bad) xor in mov dec jmp xor cmpsb dec mov inc in (bad) jle lea xor mov xor mov lock cld dec stc add shr scas fld sbb jmp push outsb ret push jb outsb clc subl lret aaa xor sub jge mov sbb pop mov cmp jl (bad) int3 sbb sbb sti notb popa jae mov pop mov ret insl mov decl mov enter (bad) xor lock inc (bad) mov cld xlat (bad) adc mov jbe fwait or mov add stos push sub add sbb test xor push inc mov int3 roll push sub fistl pop cwtl dec pop imul xor jno int3 pop add push jnp sahf das js arpl adc rcr outsl ret inc mov jno stc loop pop add pop xor inc imul mov or mov adc pop jo xchg (bad) pop faddp fsubrs scas out xor jae xor push jb cs and sub imul push xchg sub xchg xor xchg cmpsl xchg daa jle fs inc inc inc dec loop loop fmuls fwait mov push push leave cmp fstpt fcmovnu push mov jb aam test movsb aad js mov mov mov int3 mov rorb lret or add add dec lock cmp adc (bad) insl mov jns add inc out pop adc fidivr (bad) stos ss loop adc ljmp inc push and cltd subl imul idivb mov subl rcrb ss jecxz dec dec mov push fidivr repnz inc aas cmp fildl fnop mov ret mov mov inc pop jl lret mov lcall push mov dec rolb or test fisttp ds adcb cmpb inc (bad) negl loopne aas fstpl sahf jle push test mov inc cmp mov fiadd or div pop lahf das insl jae mov outsb add adc mov aad cltd push push mov cmp cmpsl repnz xchg mov fdivrl dec sub aad movb add sbb decl pop insb lods xchg mov mov adc jecxz sti lds pop pop aad xchg cmp xor jg (bad) repnz scas inc pusha jge xor aaa dec ss pushf bound stos inc pop sub xorl and mov dec inc cmpsb and repz stc ret aaa pop mov mov shl push xor sbb jnp mov sbb jns mov (bad) sbb jae xchg xchg hlt jo scas div inc iret xchg jp mov cmpsl sub stos sbb (bad) push and mov jno pop pop and jno jmp jne sbb daa sbb fucomi mov sub fdivs test aad pop cmc icebp sbb and cmp mov jle xchg sub lcall dec nop cld sbb sbb loop jle cld orb pop into shr in pop nop mov push in aaa xor movsb dec lea push mov and (bad) sub out dec adc jmp pop jl xchg jl mov js es rcrl imul mov mov insb shl mov push movsl movsb cmp fisttpl push add mov cwtl push movsb fnsave call (bad) push das mov or inc dec sbb je jge loopne andl mov adc push jmp lods lret mov in in xor dec xlat sbb jmp (bad) fcomps (bad) enter mov xchg loopne mov das cs adc stc xor sub bound mov or std bound les pop lcall jg sub pop lock adc ret ss dec add loope sbb inc rcrb aam push cs push push jge loope lods pop movsl roll out dec fbstp pop xchg sarb jns mov dec loop daa fidivrl mov lea dec dec sub dec jno jb (bad) and jae inc mov mov in popf pop inc std add push stos clc xor cs out dec jg mov jns cs jecxz addl sbb jo sbb das xchg pop dec mov pop push inc stos sub jmp mov adc outsl and xchg idiv lods leave pop lret lods sbb mov jno and adc bound dec push out fnstcw mov les mov outsb (bad) je fucomi loop movsbl pop add cmc out mov and pop insb jnp jl hlt pop stos test adc add (bad) les adc lret push loopne mov cli mov es icebp pushf out out or dec jae inc fwait mov les dec cmpsl scas mov (bad) mulb jns clc inc (bad) mov call xorl ds add (bad) jb pop add cmp ss push jo sbb popf call jnp (bad) and (bad) aas add cmpsl loopne lods popf rcrl ret nop xor inc lcall cmpb pop xor ss jl push js in sub test (bad) fdivl and notl mov cmc fsubrs cmp push mov mov mov sub int pushf je mov fisubl int3 inc pop push int3 sub mov dec (bad) test sti (bad) addb and inc fisubr push or scas stc add cld adcl or mov mov shll test or sub cmpl out out or cmpsl xchg enter fldcw pop add xor sub sub fsubl inc cltd (bad) sub mov fcomps nop nop popa mov sub setg or push ja movsl pop dec inc stc mov cltd cmc push cmp insb and popf jnp push jl and xor sarb mov add dec lods and push ss cmpsb push stos push push cs adc js mov shrl jns mov ret mov xchg inc clc jl dec pop nop push fcmovnbe mov xchg jo out cltd mov dec addps sbb add in push sbb outsl mov jl jmp pusha aam outsl jae fldenv mov mov ret in push imul fisub mov in pop int add inc popf ret aas xor ds inc movsb sbb pop jnp sub add add mov (bad) dec inc mov push es cs inc mov movsl (bad) fidiv inc out rcrb fimull add jns (bad) xor push iret add cs pop fcmovnb sub cmpsl rolb les or adc pushf sub aaa sbb or aaa lahf jmp or pop push lret ret test leave imul test nop xor stos inc or cmpsl fldl push mov ja push cmp jle and xor andb lcall std xor mov cld les xor xchg adc loopne pop jmp dec out inc cmpb push cmp lret out call jbe int3 mov int3 mov les mov inc stc mov cmp fnop stos cmp jno fisubr les daa jo cmpsb dec sarl popf cs lret dec jno mov jne in (bad) jnp add test fidivr mov lret lea mov adc cmp iret mov push roll jecxz add add jns iret out scas pop xchg xor push xor dec int jns rorb test aas int3 pop out push push je pop push rcll mov mov inc inc js fbstp mov gs je pop sbb movsl add push xorl xchg flds (bad) lock cmp mov hlt sarl mov jbe sbb mov cmp in out dec sarb fidivr fstl dec mov les mov xor and xchg cwtl dec or hlt sub cmp mov clc jge pop fisubr das cwtl add push pushf jb lret cmpsl sbb push mov lea sub sub bound or sbb je jge inc leave aas in pop lret rcrb (bad) adc jmp cltd push add inc mov fstpl push xor jns push int3 fwait call ljmp inc lods push fdivrs cld cmp in or (bad) xor push pop jle adc sbb sbb push sbb mov into dec pop movl aaa aas leave cmc sub and mov into add pop insb push clc nop jo add hlt scas inc cmpsb divb or ss out mulb cld cmp popf inc mov push aas insl push les dec xchg lock mov arpl or mov enter (bad) leave lds loope push test add inc cltd jns jp movsl nop cld mov lahf stos pop push subl add push cmpsb popf mov cmp roll push fnstcw pshufw test or xchg push out pop decb lods jns jp mov xchg aad jb stc xchg adc pushf xchg (bad) lea lret arpl sbb jmp pop sbb test xchg leave aad inc jbe fs lret lcall xchg enter or dec add stc icebp cmpl xchg mov incb ret in cmpsb mov lret je loop js cld dec les imul in lcall jbe dec sbb jb in lahf inc mov inc adc std sbb int push cmp pop cmp test and jno push sbb popf js mov imul sub inc xchg popf movsl push in out mov iret jno movsl push jl adc shlb xchg add cli in sub leave xor addr16 push sub in inc arpl dec gs nop lret xor imul jl jle hlt and dec cmp je (bad) cs (bad) outsl ja lea or test in lods cmp add in mov cmpsl jp aad xchg jb ja frstor stos out cmp clc iret adc xor in pop mov jecxz lret popf cld outsb sbb jne lods jp mov iret adc pop xor test (bad) xchg loopne sub mov add aam data16 add xchg icebp es xchg mov inc push jge and lea leave xchg (bad) fincstp sub stos mov mov hlt fcoms sub fild fidivrl pop outsl loope mov adcb fwait cmpsb add sti ret mov sub ret xchg cmp cwtl inc stos js push cli dec int3 and fsubl cmpsl pop dec inc sbb jmp lock adc es sbb ss jle in add push xchg adc lods stos push xor int adc mov push dec sub jle shl (bad) xor repz push fdivs lods xchg cld mov jns mov mov inc and sub (bad) outsl push dec pop hlt ret test mov test inc pusha add xchg push cwtl dec mov mov dec mov adc gs out mov cmp xchg aad pop sahf sub xor addr16 adc enter dec loop pop sahf add icebp dec clc arpl gs mov mov mov cltd xchg ror pop push sbb sahf push push fadds fcompl rorb push mov or ret jecxz rcrl mov add test lret sbb cltd xchg lods xchg insb cmp jge pop notl xor mov cmp stc std mov clc dec (bad) push mov jb sub test cmpsl aad mov pop (bad) js sbb (bad) loop std sub fsubs dec pop fsubr hlt mov sbbb stos lahf lret repnz add pop outsb lods arpl sub lea mov mov sub imul ds inc lahf inc mov dec pushf push add js push in mov scas fcomps int3 mov addr16 das jmp fwait arpl cmc lret push or jmp aas and push xor loop lcall fnsetpm(287 xchg inc addl and std addr16 rclb jae lods dec enter and mov jl mov fisubr mov lea adc loop sub sbb push xchg adc xchg adc adcl pop mov sub notl lea js inc dec jae inc mov fisub lods je hlt adcl adc adc mov pop add fsubp add cwtl ficomp jne add js adc shll xchg dec test jb sub dec or or mov xchg cli aam mov ds mov sbb jbe inc or jae xchg inc sbb push jecxz adcb push ds in mov dec sbb aaa add sub push add or pop es rorl xlat loopne inc mov out sub dec mov lds dec dec jle or test test lods ret xor jns sbb loope jg xor fdiv mov rolb mov inc fadd push dec xchg jmp dec cmp aas and scas shrb stos roll out and dec jp cld xchg fcmove sub shlb aas xchg adc sub adc xchg push cmp popa and stos jle test popa push ret push pop mov sbb (bad) dec adc aad js cmpsl add mov das dec aam clc arpl sti fmuls inc pop ja mov test xchg add cmp aam das xor (bad) jge scas xchg jo fisttpll jp push inc and mov cmp lcall loop cs sti out jnp or stos subb mov mov ljmp out leave sbb push lds and nop cmp (bad) test lods clc fxch test iret mov scas (bad) shrb mov popa cmc adcl (bad) call addb jle or jne es dec and insb sbb pop mov rol dec fdivl mov jbe leave push clc (bad) (bad) jo loopne and sbb or jp loop dec cmp add xor incl clc push cmp fwait es sub repz pop add mov in pslld fwait imul xlat cmp push sbb (bad) and ljmp jg (bad) aas (bad) sbb xchg sbb loop mov imul jmp enter pop mov (bad) clc mov and inc add sbb repnz mov sti lea leave adc icebp push loopne stos mov faddl sbb cli xchg loop hlt cmp mov sahf xchg jge inc (bad) adc xchg leave cmp inc jo loopne,pt pushl adc aaa outsl mov jmp inc xor out cmp xor in stos mov xchg push nop adc not mov mov test dec jbe scas xchg out cmp or adc sub mov fbstp rolb mov lds push mov xchg jbe (bad) mov jno jo clc nop out jmp sub sub jb sbb ljmp (bad) xor mov jo fmuls jle or sar xchg mov loopne mov jmp cmc (bad) jl or sti adc movsl push and jp popa loop,pn pusha ret mov mov jae xor lods mov popa mov jno push add pop sbb push xchg sbb inc inc into lds aas (bad) mov and mov test into sub xor push pop ss sub jecxz inc arpl adc push jne fdivrl xchg inc pop pop imul xchg movb test clc mov and and push push loopne pop std std (bad) push push (bad) xor jo cmpsb mov shll mov outsb push adc adc xlat sub (bad) sbb cmp mov adc xor in sub sub adc sbb test aad and lods push in push and cli cld gs bound lahf adc inc stc lret rorb mov inc out mov push mov jno and ret dec imul mov xor sub push ja lock gs imul pushf add in jo adc cmpsb call outsl jecxz push mov mov jge andl lds xor inc bound sub ret cmp jnp mov mov push (bad) lea (bad) cltd jp cltd inc add outsb (bad) jbe adc insl and xorl (bad) mov xchg fdivl dec addb fwait or bound and add inc mov aas mov gs cltd sarl rcll sti mov inc pusha loop mov xchg push adc or dec insb sbb pop cmp push mov rclb subb das jo mov add out pushf sbb (bad) loop loopne xlat sub dec scas (bad) (bad) pop aam scas mov gs lds lret ds or shrb lods andl out aam arpl lret out lret int loop add insl js lods andl pop fs mov out pop sbb insb pop cltd fldcw out rcl (bad) xor sbb nopl mov sub cld and mov and push push add stc lods jbe push push lret xchg mov stc outsl sbb mov fnsave fldt sbb outsl lret jbe sahf (bad) neg add mov dec or push ret int3 inc addb jno (bad) mov dec cmp xchg sub stos dec das into jge (bad) push inc pop into push inc add mov out pop fist int3 repnz or mov inc add hlt add je std dec push or cmp xchg gs lahf das pusha xor das (bad) xchg mov lret imul in lahf pusha jae fs jecxz xchg rcll jae call jg jae push sbb mov and idivl pop inc lock pop add fsubrs cmpsb je sbb hlt stos lods loope and rcrl in and jg and pushf std adc cmp add or clc aaa dec loop push jle shll inc test cmp or out cli in dec stc andl inc cwtl xchg movsb push pop iret sub add dec and lcallw mov push fistp inc mov fsubr mov lret fxtract pop loop or test imul xor ja in dec sbb add mov outsb or or sahf ret cmp aaa push aad gs xor and das push or pop gs mov lds sub add pop addr16 pop clc lcall lds fisttp mov push xchg test pop lock out add dec aaa ret adc jmp cmc mov dec fistp inc test test sbb iret ja jb je push aaa fwait and xchg lock popf cmp and loope fisttp push mov pusha push inc scas shrb jl in sbb daa pusha lahf add cwtl mov notb jae out add mov pop (bad) xchg mov jl xchg push or pop mov inc out inc es loopne mov sbb out mov fsub xchg cmpw fdivrp dec jno call jne jg rolb sbb and mov iret sahf scas mov inc es fdivrl in lods lods jp or clc icebp or pop add je mov ja ds and or rorl or rcll jbe push data16 push push sbb popf fisttp aad sub call clc imul les inc aam push jo (bad) dec dec push outsl add push lods dec out fimull cs outsl pop incl sbb (bad) fdiv cmpsb imul pop iret scas (bad) iret ds or lock movsb sbb adc add adc pusha add iret push pop pop inc xchg out fimull or push mov xchg or mov pop cmp pop push add nop arpl mov sbb jmp add imul fbstp or nop rcr popf jge push sub cmpb dec inc sahf mov pusha imul loop jns add imulb mov ret pushf iret and test sub and and pop xchg xchg mov arpl mov iret pop dec mov iret jle nop xchg mov (bad) xchg dec cmp dec mov pop das dec jne loopne xor scas cmp jno push shrl inc sub or xor pop pusha cs and cmp sti or cmc inc dec sub bnd enter mov push push pop mov push mov xchg push nop into movb insl scas jne push push mov fidiv iret mov (bad) lock fnop insl fucomp cld ja push mov into push pop adc je out mov and push jo jle sub hlt or sub shrl mov inc sbb mov mov mov xchg movsb daa pop outsl not mov repnz popa aam mov fistpll (bad) sub sbb cmpsl add xchg sub jno (bad) mov xchg or xchg dec fnstenv sub fist mov lahf lods call cs xor (bad) jp mov push mov inc mov cmpl pushl lds ja mov mov pop imul popa out push and cmp push popa fcompl std bound loopne (bad) psadbw enter inc fistl nop pop movsl xchg sbb cmp cmp or sbb jp scas cmp cmp lcall adc icebp fwait pop arpl push ja cmp or fcomp mov mov adc into cmp push sub adc ds xor push dec addr16 scas xchg les mov push push arpl les mov movb mov into imul sbb jecxz lds popf mov fild push inc xchg sbb cmp lret ret shrl dec insl ss fisttpl adc xor imul lods dec jg aam out adc mov inc cli loope sti cli das mov xor call adc mov fildll fbstp pop xor adc mov mov pop mov or adc sbb mov shrb sti enter (bad) pusha pop xlat jb,pt or sub adc js adc add or cmp (bad) cmp fisub adc cmp mov into push in pop inc adc push sbb (bad) push cmpsl sti mov push ja add jl ljmp (bad) fwait cmp lret mov xor jb jo and push mov or repnz popa dec lret movsl adc (bad) inc xchg fsubrl push mov cltd inc mov clc sbb and aaa cmp sbb mov cmovae or jecxz adc out mov mov js xor mov loop clc or rcrl jno sub (bad) mov rorl out pop sarb mov cmc dec aas xchg loope xor xor jp xchg mov mov jns mov jne adc (bad) xlat adc lcall test sbb (bad) das push cmp sub xchg pop pop lret (bad) or mov xor cmp inc std imul sub nop sub inc mov pop das xor sbb dec dec stos fcom pop pop inc mov jo adc dec int mov add xor xlat inc fbstp fnstcw add sahf outsb dec addl fwait in aas cld cs inc lds ret mov je jb movsl push es stos inc bound jge leave mov (bad) (bad) dec movsl and xchg movsl xchg mov insl outsl lcall push lret rorl out and aam pop scas push mov inc push sub mov neg or mov imul (bad) hlt mov sub jg std mov fimull adc out stos pop add test (bad) push cmp fistp icebp fisttpl notb leave fildl fisttpll movsb add pushf fs adc (bad) mov cs lods mul jp test inc pop jl rcll add (bad) lea xchg xlat jl fwait and loopne cmpsb rcr mov in mov in es add sub test ss ret cmp or loope mov movsb sub inc lock cwtl andb (bad) or leave adc or insl pop jge lret movsl loopne loopne mov lock mov cli jae aam dec rcrb mov (bad) hlt les mov mov push out push mov sub or adc xor insl jb xor sbb and mov jae sbb xor (bad) adc and fstpt dec or mov hlt mov aas js gs test mov andb cltd pop mov (bad) popa rcrl xor inc inc shll mov dec loope aam movsl (bad) (bad) or adc stos dec inc dec mov cmp shrl hlt mov sub xor mov pop fistl sbb test out add or xchg or mov dec xor enter mov pop adc push mov lahf insb ret sarb and cmp pop subl dec movsb outsb mov jno xchg and or dec pop push sub dec es lea (bad) xor sarl xchg outsb lods popa pop mov mov push inc or (bad) sbb mov sub in ljmp cld inc nop pop pop call jne lock fldt pop cmpsl pop and sbb sbb cmp add and jnp xlat or outsl lcall sbb fwait pop dec adc and negl lods in cmp mov test (bad) out jl lahf lret xlat lret mov into lock xchg (bad) sbb mov push ss inc cmc lcall mov pop xlat pop jnp loope jmp and push mov movsb nop xor icebp mov cmpsl inc addr16 cmp je pop (bad) cmp sbb xor call int3 jns mov neg icebp adc jecxz addr16 sbb pop repnz mov leave inc and popa dec cmp jns push outsb fs leave adc push mov popf sub pop xor pop dec jns (bad) aam in int3 testb sbb xor lods pop sub adc jecxz roll inc pop sub mov mov fiadd and xor add addr16 clc (bad) (bad) xor scas sub fsubs adc fisttpll and out and mov sahf inc xchg sti pop and das fwait mov shll (bad) sbb sbb dec sub jns pop mov push cmp mov jno (bad) scas call xchg daa and cwtl cmp lods sti sub sub ja out jmp ret xchg in hlt mov pop fisubl loopne sub jno cli pop inc and fistpll cmpsl lock pop rol lods mov int3 stos mov and (bad) or jae cli mov mov ljmp jnp push jo xchg pop frstor sub mov (bad) mov jno cmpsl inc sbb jl inc loop xor std dec sub inc outsl ljmp dec pop xor test ret mov mov add mov add cmp dec ret add testb out aad (bad) imul dec subb call push add jge fdivs out lock push in jnp jbe iret cwtl fcoml enter cmpsl lds dec cmpsl (bad) hlt loop xchg or mov xchg sub push cmp ret sahf int3 mov ficom dec popa pushf pop out aas push xchg pop lock mov or xchg iret xlat pop lods xor popf mov mov cmc xchg push inc insb xchg and icebp pop xor inc adc sbb dec or (bad) xchg add daa pop (bad) ja jno xlat mov push out in mov stc clc xor sbb subps push cmp mov scas xchg shlb push in (bad) pop insl xchg aam fmul (bad) mov popa std repz add or inc jecxz sti dec movsl fidivr jl fcoms movsl and pop jb xchg xchg add cmp and xchg push ljmp mov adc jo inc test lahf mov arpl aad fcmovnb imul fdivrs sub rclb adc adc dec ret push pop mov sub or scas fadd inc je cltd sbbl lock test dec je mov xor emms pusha test xor ds dec nop mov nop adc sar push int3 (bad) mov xchg imul pop iret pop js adc lock in scas jns and and dec hlt outsl (bad) xlat sbb std jnp shr icebp push (bad) push jno nop xlat and cmp xor push icebp and push inc jg,pn outsl pop jo pop jns (bad) adc push incb inc int xor cmp ret dec jo xlat sbb (bad) mov mul xchg sahf cs jmp inc cmp push jecxz cmp jbe je lcall or je clc aaa (bad) incb add cmp sarl mov (bad) cmpsl dec pop push mull xchg addr16 jo xchg stc ja dec xchg add push cmp sub mov adc cmc inc sub aad ret push mov and mov dec add inc sti out lds lds add inc (bad) adc inc cmp and ldmxcsr popf int inc outsl push into xor cmpsl fld mov jo pop jbe stos pop adc jae cmp mov xlat cmpsb sub add addb and dec sub xchg aaa xchg push sbb ja dec clc mov ljmp add xor repz sarl jb inc jecxz test fistpll cs loopne lds pop sub pushf arpl out adc gs sbb pop outsl mov cmp mov mov shrl inc xchg js aas in notb xchg cwtl mov cs arpl fisttpl dec inc cmpsb pop and mov popf aam push mov sub into cltd xchg in xchg lahf decb test dec jo adc mov jne jb negl sub mov test arpl fistl push add mov in push (bad) cmc pop in push loop es enter cmp adc lret inc shlb inc xorb mov and leave push pop jnp pop jmp nop and cwtl or mov xchg xor jo sub inc into stos sub ljmp jae rolb lods pand cltd test ret sub mov sti int pop ret mov aas jecxz xchg clc (bad) xchg out lea xor push mov pushf cmp push loope movsl int push mov dec fistpll mov pop xchg pop (bad) jmp or movsl sub insb mov rolb test or push fisttp sahf (bad) (bad) (bad) in incb es pop sbb cltd and jno test (bad) enter xchg sbbl dec outsb les pop ret test test or rcr into or lods inc inc leave push aad ljmp mov adc loope popf inc push rcrb fsubrl lcall pop insb les cmc fdivs in lret (bad) jb addr16 sbb add xchg mov or push or clc pop jge repz in lret sbb in fstpt into mov repnz sbbl inc mov adc mov sub out sarl (bad) dec jecxz cmc jmp cmpl mov aam xchg xor adc pop mov push cmp lret mov push (bad) icebp shrl push repz or mov jmp mov std push or lods lods jo in test loope lock ret clc (bad) jb ljmp pop ficom loopne xchg xor jae sbb inc push scas neg push cli inc popl int3 in in lds das inc mov (bad) adc outsl in movsb cmp jecxz adc mov lahf jne adc je insb ljmp lcall and test xchg (bad) mov (bad) adc push jnp enter sub sbb or push rolb test sub scas ja or ss pushf fnsave gs in mov xor (bad) movsl mov aad jo jp movsb adc and jnp inc ja mov mov pop out sarw fwait gs cli das sbbl sti sbb divl dec push xchg js cwtl fs test fwait jne rcrb pop aam add pop cmp and in sub sbb cmpsl mov popf movsb sbbb sbb cmpb pop mov jne cmp pop mov pop out out push sarb ret lahf imul inc ret xchg scas mov push jp and mov cmc xchg aaa lock insl jo jae sbb sahf in mov ret iret pop in gs (bad) lock mov pusha imul ficoml shl xchg insb mov out push inc sbb mov mov sbb dec scas mov mov imulb mov xchg mov sbb jle,pt cmp ret inc xor fsts xorl add std lds std out xchg lcall dec decl je adc dec in lock (bad) rorl imul icebp aad xor outsl jmp sub in sub dec mov cmpsb push adc sbb add ret sbb in xchg xchg dec ljmp or pop mov mov test lcall fistpll mov inc cmp and ficom shl popa jo bound and into enter pop cld rcl mov in (bad) inc (bad) sarl push add mov mov or out stos loope ja (bad) pop out leave pop pop xor inc sar inc pop aaa dec adc or sub pop xor lret arpl fnstsw pop popa icebp add mov inc pop fist xchg push mov adc (bad) loop and mov inc int3 or std outsl jmp fstp inc push outsl rep adc pusha cwtl movsb ret out xlat dec cli sarl dec dec push fldt ret ss mov imull fs or add fild stc inc aam out addr16 popa out out (bad) outsb sti addr16 xor and mov out mov idiv (bad) xchg or cwtl test iret movsl xchg jno outsb bound stc dec mov lock jmp ret imul pop rclb or inc mov push xchg int3 pop out inc pop inc mov jg sub daa lds mov rorl cmp lret imul dec test push jg cltd jns or and lret aad dec xor aam xchg sbb jge es adc xchg pop orb mov pop daa add push dec repz push cwtl imul stos out or push fnstenv lods mov js (bad) fcompl ljmp dec into loope mov fildl cwtl stos js add mov scas jns loopne arpl mov pushf push cmp xor xchg mov mov jnp add mov jmp cmp cmp cmp (bad) ja or xorb sbb js out xor in mov mov xchg push add push fnop push jno pop int3 inc cmp cli in js jg dec and (bad) cs ja xlat imul inc or jbe popa sub xor aaa aas xor add xchg imul jle into jl dec mov jo mov pop mov outsb inc mov sahf adc mov sub (bad) sub fimull or imul pushf mov ffree xchg movsb inc adc xchg (bad) push add xchg inc adc cmp jg push sub push xchg add push xor lods mov xchg jl mov pop and jo add xchg mov in mov (bad) js xchg dec (bad) jmp pandn test xor push jmp in cmp (bad) lret lret ret mov aas cmp add pop mov mov rcrl sbb jle pusha call les lea test push icebp dec int jp cmp push outsb scas and xor sub movsl lods jae and cmc arpl cmp add (bad) leave mov push lock cmpl ret (bad) or jge mov push scas in jg push ss fsubrl mov fstl mov ret sub add (bad) test mov xchg rcr enter xor test repnz mov xchg sub push (bad) mov loop les jnp and pop stos mov and jo jle push add popa insl leave jb insb out (bad) idivl cmc mov das pop add lret dec int test dec repz sub dec (bad) insb mov sahf rcr inc mov adc pop sub xchg enter cltd movsl in dec jg mov xchg lods xor mov insl xchg jp ficom shr mov (bad) jno xchg sub mov fdivrl mov mov rol jne mov mull fist (bad) in fmulp or dec idivb rcrl int3 pop xchg ds jne out fincstp fisttpll movl aaa es cmp xchg sub in in sbb test push jae enter cmp je gs js add push mov (bad) clc inc out stos mov inc mov aad (bad) xor fmull mov jns push mov inc add scas cmp aas ds fs push jl fildl lock loopne cmpsb dec call outsl aam call out xchg out jge sub (bad) mov add lret std movsl inc cwtl lahf mov mov adc push push icebp pop ds andl (bad) mov cltd jno mov push lods shrb inc (bad) sahf cmpsb mov ret ret dec xor xchg pop inc cmpsb popa in lret sub add add in cltd pop xchg dec adc cmp push out nop call dec (bad) sbb gs movsb enter test cwtl mov xchg popa and daa rcll push jle jge jae aam cmp mov cmp pop scas (bad) int pusha push lds (bad) aas aas inc or mov or cmp mov xor sarb mov mov sahf in and jl jge ss jo clc and jb xchg mov ljmp sbb daa jle leave mov (bad) es cmp scas xor push fadds scas fildll mov push repnz lods mov insl jg or xchg and aas test shrb ljmp es and imul sub aas in ljmp inc cmpsl es xchg sahf test call fildl (bad) out test sbb ss ret push stos out bound or dec dec adc pop cmp xchg arpl mov enter fld or push mov pop inc lcall fsubl and insb inc (bad) inc loopne jl aad iret dec cmc daa push xorl or sub sbb dec test dec mov pop inc jne lock mov dec xor xorl jl addr16 and jmp and js movsb pop mov (bad) lock cmc push xlat push addl aaa or sbb mov pushl loop jbe,pn dec pushf fstp std mov pop sahf stos out popf std lods jbe ud2 pusha adc or pop pop sbb dec inc jnp and add ror loopne arpl or jecxz xchg adc inc ss adc scas sub out jo in out add fwait sbb fwait shll mov arpl sub add xlat lcall lret in fwait mov push ja int insb inc inc ret mov cmc mov and mov adc leave and mov and es xchg sbb mov cwtl outsl jg (bad) mov dec in stc clc frstor jo (bad) (bad) scas cmp pusha or xor sub jmp xchg inc lods mov and std push mov pop movb adc mov adc inc pop or mov pop xchg xlat int mov xor or xor or fmul pop loop aad in xor popa adc jns out xor xor push mov dec lret and cmp add xchg push fsubl xor dec sbbl sbb cwtl or sub test mov in enter (bad) push push mov jge xor and pop sti mov pop xor inc mov out xor pushf es pop mov aad sub dec nop push cmp ja dec dec jbe jp mov xchg out sbb xlat adc inc movsl (bad) sbb (bad) leave push fstpt les xor cmp dec and enter imul roll aad arpl fisub aam push sbb inc mov std clc mov (bad) cmpsb mov movsb push cmp (bad) adc or jle dec (bad) xchg sub in pop (bad) jae sub xchg cmc les jp sub lret xchg mov cmpsl adc cmc jb mov push js pop popf jbe fsubrs movsb nop je xor pop in in sbb arpl (bad) inc cmc popf lea mov pop sahf ss cmp shlb sti mov cmp movsw fwait xchg push mov xchg sub aaa in inc dec aaa pushw mov scas sarl jo mov clc pop push add movsb leave cmp and jecxz int fsubrs adc cmp xchg lret jecxz sbb pop lock cmp enter mov fcomps mov movb mov lods mov mov in mov xlat adc jle test insl sub mov call jo ss adc jmp sti sub xor movsl mov add xchg push es push cmp mov add push aaa pop inc aas cmp mov pop mov jp repnz jae (bad) inc inc les jnp iret (bad) mov mov sbb aad jo pop lds push dec mov mov mov mov pop outsl popa enter loopne and sub sub cmpl or neg imul leave loop mov sbb mov cltd pop pop push movsl adc in insb (bad) mov ret out dec cmp jg into into daa fildll rol mov push ljmp movsw aaa lods mov int out or in mov test pop mov jl xchg inc subl inc aas aam cmp jo loopne add je dec inc push mov pop mov shr inc sahf ds inc add inc xor sbb jae add fld1 mov rolb (bad) cmpsl (bad) xor gs in (bad) je and dec (bad) out add or and pop add les push (bad) lret pushf xchg cmp mov popf sub cmpsw mov mov or pop movsl popa lret jp lea lea test jns call mov sbb insb xchg inc sub mov pop out es push mov ljmp cmpsb call in or popf and stos adc jb inc fistpl push cs cmp and (bad) out in adc pop addr16 add mov mov test cltd jne imul in adc out push push imul in xchg int3 mov cmp dec pop repz lods stc psubsw scas lcall (bad) rol or outsb mov jae aad mov scas mov mov scas ds mov dec mov cmpsb jle (bad) xlat mov fistp push push inc in and vdivps insl imul sahf mov mov lods mov mov fwait and test aad (bad) insl test xchg test cld mov push fsubrs or js shr xchg jle ficompl push int out leave stc add or bound enter (bad) lods or mov or push xor nop test enter ds sub pop icebp aad xchg ret cmp sbb adc rcrl rcrl pop (bad) and movsb push push or nop add add inc add jno mov out mov std xor (bad) stos sub xchg (bad) cmp xchg jne daa jnp pop shr test fs cmp ja push sti mov inc mov push ret xor popa mov pop stc in out stos pop addl cmp frstor pop (bad) adc push dec mov aad mov mov pop scas xor mov xchg jb xchg adc ret jg imul movsb add (bad) xchg arpl lret ds jmp int lds inc mov cmpsl adc push sub pop (bad) mov enter inc lret push jg fidiv es test (bad) jg dec js jno xchg inc pop push dec jle (bad) hlt shlb ficom mov loop mov lret pop (bad) jmp notl xorl push lds xchg mov in lahf div mov nop aad in mov fsubs outsl scas sti (bad) xor (bad) pop sub out xlat mov enter test and or xor js out pop ss in mov pop neg mov or push daa aaa sbb in xchg aam push arpl test mov jle lds mov or in outsl xchg jno mov inc je pop sbb stc arpl xor push xchg push push (bad) pop push xchg or (bad) push clc movb cmpsl push adc cmp or mov xor sub lcall mov cmp mov mov mov sbb icebp sbb stos sbb xchg loope pusha inc lret or or addr16 aaa mov dec test sbb push js inc dec add cld or add in stos mov add mov jmp stos fcomps in cwtl mov negl aaa pop movsl popf shrl mov cmp inc xor inc scas lock loop loop xchg push or std loop out push jns sahf sbb and movsb imul push (bad) idivb mov cwtl jecxz je in xchg inc ljmp cmp inc adc lgdtl sarl cwtl std dec and inc dec subl ror adc aad push (bad) fiaddl ljmp scas fild mov push jp sar idivl cld pop nop fsubl jle cmc ret (bad) push add data16 mov cmp ret or aaa iret imul push cmpsb ret mov cltd out jno dec sti cltd shlb pop dec nop xorl sbb icebp call jmp pop push xor xchg lret dec mov add xor xor add pop clc jbe lret cmpsl xchg cmp dec dec adc ds jne and pop ds and adc ret or stos test inc push push jge sbb aam (bad) lock cmp in inc call dec dec (bad) sti pushf jle lret repnz sbb jge arpl ljmp cltd mov xchg in dec jp jecxz cmpsl inc mov mov sbb adc popaw pop sub scas lds mov flds sub jne mov cltd mov lcall or add jne and out mov outsl sub lock add cltd in (bad) jbe std fwait paddw lret push lods scas and in aaa repz adc adc rol and jbe mov sbb and cmpsl mov adc scas mov addl in cmpl es xor cmc pop inc adc push mov add push xchg add arpl mov xorl sub les jmp lods ja sub pop fimul icebp xor pushf std out xchg sti lret jmp add dec aad xor imul sub mov cmp add je push push div xchg push or push ffree xor jbe or push inc bnd js cli jle cmp jmp faddl dec jmp test fildl fildl sub mov mov sbb loop cld jp mov mov std push pop push lret dec je movsb mov (bad) pop mov outsl adc lods inc and lea aas xchg adc test cs sahf stos adc lahf xchg lret inc (bad) add lcall (bad) cld inc sahf leave sub or mov push ja addr16 pop andl mov movsb shl jne outsl adc js int3 mov lds (bad) pop lods mov push mov or addr16 sub pop add std adc rol lahf push jb lret outsb mov lcall adc push add daa cmpsb or inc push sbb push push sahf in out repz sbb cwtl sub xor pop fbstp cmc cltd loopne inc call cs mov mov push out and xchg push mov xchg mov pop rol cmpsl xor mov cmpsb pop in lret cmp dec js jno mov daa and or scas adc psllq inc mov mov xor mov mov push sbb in or mov pop cmp dec mov std flds xchg cmp mov out jmp jl rol xor andl aad jns mov icebp loop jecxz xlat loope or xchg std lock bound jo push xchg ds ds add adc jo inc clc sub inc push nop or lea (bad) jge jmp push mov ds loopne popf cmpxchg mov (bad) cmp lea and sub adc scas cmp pop test out pop and or fldt sub mov cmp push cmp adc inc fidiv mov out xchg xor subb xchg (bad) scas into and jae punpckhwd adc cwtl addr16 jge ja mov imul adc ficom cmpsl test daa out cmp xor lock xor mov cld jmp insl out push cmp lds xchg (bad) mov mul dec pop mov mov jl or push dec aad es imul pop inc scas jmp xchg inc dec hlt roll sub es inc push movsb arpl fsubrl mov fldcw mov ljmp xlat aad (bad) icebp cmp xchg adc (bad) push mov sub movsb push jns adc pushf cltd mov dec test stc jmp xchg sbb push and ret jb mov push enter shl xchg in (bad) add insb pushf pop add add sti loope nop pop pop ljmp repz imul mov (bad) fdivs mov jmp jmp sub aam lods fwait adc or std in cld rol stos movsb insb pop aad mov (bad) loop xchg cmp xor insb jb or into sqrtps bnd sub or imul cmp xchg dec jo jae loop jb in roll inc fdivp ss cmp dec ds loopne outsb fs push add mov dec fdivrl jge rol into iret (bad) pusha cmp roll mov ss pop add jno jo shrl sub roll movsl pop and test cmc cmp pop hlt and loopne inc fwait test push pushf cmp push sti adcl lret cld shlb mov pop std jne mov bound mov sub leave adc mov sbb ds clc cwtl shrb popf add pushf adc pusha add data16 jmp test sbb sti aad outsb jmp pushf jns mov scas jbe cmp fscale notl rcrb lock not loop icebp repnz ror cmp jp aas lret shlb or (bad) pop out test and sahf xchg lea or cld jnp subl orb outsb movsl stc add mov test mov mov incb stos test sub call sarl ss fst sub inc xchg mov loop popa mov jge in sbb jae inc addl (bad) jnp mov sub loop xchg cmc jl mov popa jnp in adc popf repz adc fcmovnbe jb inc jo sub je or mov enter push leave xor test jns sbb test (bad) fsub ja std add sbb addr16 add dec loopne imulb insb addl xor jb and lds cmp ret out imul xchg mov sub mov insl sti sub mov xchg in mov inc aad pop adc stos leave orl fnstenv push mov fnstcw mov xor pop outsb nop call or cwtl jno mov sbbl pop ret cmp xor pushf mov jbe mov les repz sub add xor addl in dec cli out and mov push mov mov out mov cs mov push xor dec popf cld adc movsl push pop xchg mov rcrb in aam pop movsl cli in aaa inc sub mov sub or sbb cmpsb and jb push ja (bad) mov add fld dec lcall test sbb pop mov add push rcr xor push push loop sub sbb dec inc or dec sbb call fucom xchg scas (bad) js mov xlat lret icebp pop sbb test hlt (bad) xchg sbb or mov mov inc lret sbb push mov fidivrl jne shr mov lods mov and in xchg imul add dec loope xchg xchg cmp sub mov add nop adc sbb pop popa push lcall cmpsb stos loope fistpl lcall stos in push popf dec (bad) jo jns,pn mov or es push inc sti mov clc push test or aaa and xlat ss dec cmp xor sbb and sbb les mov add inc fadds xchg dec push in lahf or scas cmc jge and insb add mov (bad) jns movsb jno rol lea push jnp mov pop add (bad) (bad) cmp xor jbe push nop shl jae ja sbb jle (bad) aaa inc push jmp lahf mov loope cmp mov add add ret sbb push (bad) jb push mov cmpsb fisttp nop inc or call mov (bad) das push pop mov ds loope nop test (bad) mov mov in jns jmp or negl jge sti stos or push push push out or inc adc (bad) repz add rclb jo faddl sub mov add std sti dec lods clc jnp cmc mov shrb push xchg push jle and xchg in sub (bad) fs lahf lock mov sbb inc pop jg loope xor pop fidivr jmp mov dec mov cli or inc dec stos cmpsl (bad) outsb dec jo enter dec xchg push cmp movsb pop cli mov stos out insl (bad) gs jno repnz call and repz rorl loopne sbb jp xchg mov ds mov pop js fwait jo add lahf je mov sbb popa ss in ja mov cli ljmp mov mov clc push jle (bad) mov stos jo test sti (bad) mov jle sub es je xchg xchg popf inc loop (bad) ljmp sbbl nop xor sbb int push mov add sub inc js cmc lcall mov dec movsl inc and rolb insb mov sbb inc mov imul repnz sub mov push cmpsb dec aas jl roll mov add popf andl popf sub out stc mov enter insl cmp pop pusha add xchg pop in in mov mov push sbb mov push jge rorb jo sbb nop (bad) jp mov jns sarb pushl and bound fwait jmp add pop add pop addr16 push into scas (bad) lods mov popf xchg ljmp pop imul add imul scas push push lret add sub ficoml mov or pop jecxz aaa fs lods sub mov inc jg sub or cs cmpsl jge xor (bad) push mov fs mov xor xchg clc pop mov out std test insb cs adc fisubl aas cmpsb cmc push mov or out cwtl das gs pop push clc push mov (bad) pop out jl icebp in inc aas arpl popf xor sbb mov out lock mov sub xor mov leave js mull add xchg jp scas xchg inc inc lea sub outsb cmp lahf jmp jae mov adc mov ret repz dec push and dec xchg (bad) mov cmpsb or scas jmp (bad) cs sub (bad) jae xlat xor jnp repnz mov les stos cs mov sub decb sti or inc repz sub sub sub dec inc cmp mov test xchg push aad push (bad) pop mov int syscall cmc jbe and shrb sbb pop test mov jno and cmovo (bad) mov sub sbb test mov push and cld stc rclb mov and sub sbb addr16 je mov push bound sbb xchg adc aaa shll fnsave out rolb fwait loope mov test xor cmp (bad) xor ret in mov (bad) push jg (bad) (bad) ret mov dec movsb mov incl mov pop int3 mov inc mov and jb mov cld cmp aam sbb add repz ret push xor jp jns dec roll icebp or xor sub clc sub hlt adc push push pop xor testb cli int3 mov fiaddl scas cmpsl push es push xor cmc (bad) jne inc out leave and lret jecxz dec add ds fadds pop sub ja xchg loopne popa hlt shrb cld insl movsb jge cmc pop xchg adc daa adc sub pop pop imul pushf pop inc push jo leave (bad) adc sbb or xchg stos lods jo gs repz repnz shlb mov je push in dec pop jecxz lret lret sbb pop mov (bad) lahf push dec int3 xchg aad fild xor pop mov push (bad) adc cmc int3 xor imul sub call and scas mov ds lds add mov insb outsl lret lea cmp shlb loope cmp fucomi stc rolb aam out cs mov and or and sbb iret sbb cmp jns enter sub dec cs sub jp push leave int3 fwait aad nop inc sbb dec dec rclb and xchg int3 insl cwtl loopne pushf iret test ljmp (bad) mov lds aaa jmp sti push xlat stos push push pop xchg inc leave push dec or frstor mov xor jg test xchg mov push (bad) dec loopne in es mov decl mov std jnp mov mov jno mov inc xchg xlat (bad) mov (bad) xchg sti push clc jae add jmp jns push sbb xchg fs loop outsb mov leave ret or xor mov dec insl inc in cmpsl lret sub sbb popf mov jmp rcrl adc lds fdivl outsl fldenv mov mov pop fs jo dec inc inc jb push rcrb sti jns fcomi into aaa pop imul dec movsl in mov je pop sbb cs (bad) repz cmp popl sbb mov push leave (bad) or pop rolb dec dec (bad) fnstenv mov sub mov (bad) lods mov mov (bad) lods mov mov (bad) lods mov sub stc imul push mov aam inc repz pop mov mov cmpsl mov or icebp xor das push inc and mov (bad) iret das insb cmpl xchg (bad) xchg jp sbb movsb xor imul nop mov dec repz lea orl mov fstps lods xchg das add (bad) dec aas sub inc fmull movl push mov cmp das insb leave xor loop sbbl insb ret cmp mov mov inc pop push dec push fld aaa mov dec push mov sub xor pop mov jecxz outsl cmp test aam mov call pop aas insb xor or sahf pushf xor push cmp dec jmp sub xchg jle add sbb (bad) inc dec push fldcw jle insb push sub push pushf jbe dec dec pop sub les pop loopne fcmovb push push mov push sub jae movups push jae mov pop fiaddl mulb push push fist pop ljmp sub leave leave jns stc inc mov cmp dec fdivl dec push stc stc fsubl mov push mov inc push leave cmpsb mov adc mov add xor fimul inc inc and shr xchg push and rorb dec push int3 inc dec mov or aam roll bound (bad) leave (bad) mov popa push jo jne out int3 daa fsubrs push sub cwtl mov mov cmp or pushf and or add xchg cmpsl xchg mov jns cmpl ss (bad) mov dec js mov push (bad) rcrl jp push mov xchg push fadds hlt shufps insl mov inc mov stc xor mov or mov lods or sbb jmp jbe cmc movsl out lahf dec andl pop inc xchg xchg out addl jb orl pop ror test sbb push jb and jle xchg loopne push mov sbb lahf xchg cltd xchg mov push inc test call das lahf imul data16 xor mov xchg add jmp cli and das lahf lahf jne xchg sub subl fnstcw mov das lahf gs adc loope sub mov loop xchg mov cwtl das inc outsl adc push ja cmp mov stc test sbb xor mov gs xchg nop push insb push ss xor push das cltd lahf sahf cmpsb mov mov dec (bad) xor adc xchg stc add orl xor jmp hlt sub cmpsl pop jb jle loope jnp scas inc cmc mov push inc inc or sbb or inc imul pop fsubr mov adc push push jmp jb (bad) orl inc xchg enter das out lods incb test xchg aaa and xor imul cmp out dec pop nop out or int3 in inc sub mull xchg pop mov xchg out fs push push lret outsb jbe mov fdivrp sbb decb clc pop push xor outsb pop inc imul jb pop pop arpl adc mov cwtl stc push mov lahf cmp imul push daa mov pop inc movsb (bad) popa xor jbe inc and int3 push lcall xchg (bad) xor cld arpl adc cli jne pop mov mov loopne addr16 int3 xor pop adc xchg mov cld mov jns int3 ja mov and push cmc (bad) cli jl aas aaa sbb mov outsb add and add fs sub adc or mov push out xchg inc enter jns dec jne pop fwait cmp jle stc jae xor jbe out loop imul mov push int jno shlb mov lret leave adc ret rolb jae repz and push outsb arpl (bad) fwait jmp popa dec cmpsb push jge sub movsb xchg mov dec inc cmp lds xor mov push mov xor imulb push outsb push andw gs or lret or cmp cmp mov sbb pop jnp jp and ret hlt bound in insl mov xor sar inc test (bad) xor addl mov xor stc loop cltd stos xor push mov ret add es push outsb dec jno movl jns sub outsb orl inc (bad) rcrl mov and pop mov outsl xor xor int lahf xor xorl sbb push jb outsb in xor cltd xor xchg and stos fwait imul xchg sub test push sub mov adc arpl out and cli fnsave cli cwtl gs jecxz mov push loopne (bad) lock daa fwait push pop inc mov add cmp ss sti (bad) stc push cmp mov stos add lods test faddl insl aaa stos push dec xchg jmp bound int3 mov mov movsl mov and push cwtl jle push pushf jecxz pop or cmp sub popa lock mov add mov sbb push cmp ja imul push or cltd sbbl sahf gs xor push out inc (bad) into cld in (bad) (bad) out or shll and fs jno hlt inc xrelease dec dec jge dec int3 mov icebp inc sbb faddl ja pushf xchg stc or xchg mov bndldx fidivl stc and push xor bound xor inc movsb or or cmp cmp xor je pop dec jle test jl mov cmp and rcrl in jae jnp das cwtl push repnz push in inc pop test insl jo xchg sub popa into pop cmp int3 and lret pushw xchg lods fwait mov popf cltd loop loope icebp stc cld daa jge jle adc push push stc stc outsl js insl mov mov sar push and adc mov es xor (bad) cli sub mov adc sbb sbb pop lods repz add adc push dec and bnd sbb xor mov inc push out (bad) cwtl cmc outsl lahf sahf lahf addr16 lods inc mov cli dec dec rclb out (bad) sub push pop and cmpl cmp jae enter sub and dec sbb scas sub orl sbb scas add inc (bad) dec out outsb subl ret test adc addr16 out or mov mov daa adc adc cmpsl push scas icebp stos sub cmp sbb sub cmp repz mov rolb (bad) fimull xor shll notb mov les inc and or or int inc stos fstps out cwtl mov mov aaa cltd sub sub mov int3 dec int3 shlb (bad) lret mov int3 dec dec test test int3 ret push mov add lds dec mov jmp mov mov cmp outsl int3 ret insl inc jl lahf push push push in les dec mov xor mov cwtl inc fdivrs leave int3 leave fxch mov pusha mov cmp or sar push mov ror daa pop out ror sub int3 dec leave test jl sbb mov (bad) jb dec out clc ret inc (bad) cmp or adc mov mov mov mov cld cmp sarb call stc pop jg inc out sub aaa testb push cmpsl mov inc test sub add push dec dec add testb xchg ds pop jge inc sbb cmpsb imul ljmp mov inc push imul sub adc out mov call aam (bad) mov sbb incb les mov xor imul loope push (bad) (bad) call into inc or mov sbb fwait mov inc gs sbb fstl lret push mov orl mov xchg bound lret (bad) clc fsubr lcall decb xchg xor (bad) adc sbb (bad) mov dec dec inc repz fisttpll fisttp jb enter sbb inc popf lods scas mov pop stc jnp xorl es mov popa xchg pop cld and jb xchg and and jnp mov (bad) jg or lea adc dec cmp movsb add xchg ds xor (bad) div jo aam lcall lods add add enter xlat fldt ret mov mull sbb divb add clc fsubs mov scas std and sbb (bad) les mov mov add inc out add xchg and mov and lret jl sub lret iret ret xchg mov paddusb pop enter xor dec add pop ret lret sbb cli std imull xor adc dec mov fstpl pop fldt lds (bad) cmp sub push je int fbstp pusha push (bad) dec mov dec mov stc mov lock push pop mov repnz scas add mov jmp dec add sbb or cmpsb add pop push in sahf lcall cli xchg (bad) cmc rcll pusha dec out shrl add icebp or xchg cmpsb pushf xchg push xchg test xor icebp lret xchg xchg loope xchg pop bound jmp mov sbb dec jmp cmp push push or cmp pop mov add push in pop adc enter loopne test pop inc mov into in std mov scas mov sbb push subl fildl (bad) flds out (bad) fsts enter cltd cli shlb push pop imul mov jge sub repnz cmp xor jecxz xadd (bad) mov xchg lcall (bad) mov push frstor fdivl cs or (bad) sub pop (bad) mov push or or pop iret stos ljmp cmpsb dec sbb movl push push stos cmpsb or pop dec dec stos mov (bad) and cmp aad negl (bad) dec icebp cmp outsb sbb pop add push mov std leave or js mov loop inc lds fildl inc jl rcll mov adc jge push out sbb insb pop test cmp add push mov repnz addl mov shrb fild (bad) add adc pop negb xchg xchg mov push cmp sub btr jecxz mov (bad) xor push mov cmp sub (bad) repz repz shll add push or mov add in xchg or push or push or roll or pop stc sti movsb mov lock jmp lods testl and xor push loope mov or mov xor push jl movsl jmp or leave lods test or mov fwait (bad) clc (bad) mov xor lods (bad) stc push popa add pop sub or ds push out or test push xor loopne insb ja pop stc pushf stc rcrl mov (bad) out (bad) push add movsb jp sti movsb clc lods aad (bad) or add pop cld sbb (bad) mov fsubrs cld dec fldcw xchg lea dec pop int inc jmp icebp push enter out add fs in (bad) mov out (bad) push int dec sahf dec scas inc mov sub repnz nop fisub mov inc loop adc pop adc test add inc (bad) je xor popf hlt push lods inc dec xchg aad nop inc add int3 insl clc jge mov mulb rorl orl rolb sahf std pushf das push add fucomip aas stos iret pop cld add xlat xchg xchg sbb je,pt push ljmp fistpll sub cmp mov add mov xlat push idiv ss insb inc stos mull out push negl or push test push movsl pop mov dec aam fs dec icebp imul mov hlt push decb leave mov icebp dec loope loope icebp and pop rcrb stc push test insb movsl lea push test insl mov pop cmp lods ret xchg in cmp mov mov push pop pop aas std lods scas bound mov dec dec or pop dec xor push scas inc mov dec nop jo ret imul mov fisub cmp mov adc iret mov inc (bad) cmc hlt pop mov mov jp cli sub inc pop push jle js mov jle cmpsl pop add dec lcall jp ret xchg add add das ja adc or pop les test xchg lea stc jmp cmp imul test fcomip mov sbb mov mov pop fildl lds cmc adc add and outsl stos int cmp pushf mov mov dec test (bad) je push in leave xchg enter int dec clc cmp add test enter push lds mov and push (bad) xor jb fsubs inc pop (bad) cmp mov aad xor cmp cli cs jl inc negl movl rorb jmp mov inc icebp dec loope pop xchg mov aam inc pop ret and lahf cmc and loope out out test aad scas xchg in scas fimull push test jmp fsub in inc lea (bad) fucomp in lahf pop sbb stc call jno scas std dec sbb iret fdiv test pop dec scas rclb out std loopne call (bad) inc mov pop inc sahf dec aaa (bad) loopne rorl push mov sub sub or push sub sbb add or inc adcb out mov lock or dec fcmovne repnz repnz aad je movsl sub and mov movsb lret test test mov sbb (bad) movsb aas lods jmp dec cmp inc cwtl aad jecxz gs cmc fptan cmp mov cmp mov movsb nop dec outsl cli dec add pop cld sti lock ja popf and jecxz mov mov xor (bad) mov inc daa fidivrl inc mov inc and jl popf ljmp lret lcall mov inc loope pop push pop aad and pop inc in in gs lret fsubs inc mov add xlat and fs fcompl movsl add mov neg cmpsb sub nop dec loope ret adc add (bad) pop daa pop stos xor sub sti pusha mov ds pushf lcall mov mov sub push in pop enter sbb ret out out mov mov dec push sarb jae lds roll iret fdivrs push sub pop pop dec std leave sahf sarb inc sbbb lods adc repnz adcb aam mov sahf and sub pop inc add mov xor and je cmp out out xor icebp mov adc jecxz xor jl jbe xchg sub or (bad) mov cwtl sub cmp decb ret (bad) les pop gs cli cmp add and xor adc cmpsb xchg call stc daa cmpsb (bad) sub cmpsb iret jne add pop dec out ret mov lcall pop dec loope mov dec cmc pop hlt jecxz int3 mov insb in lahf pop xor push orl add mov sub insl and popf xchg int rep lret push loope loope loopne xchg fildll ffree cwtl pop test test (bad) mov jmp cli fnsave loopne adc adc jmp mov scas mov pop dec bound mov (bad) mov xchg cmp stos pop adc add mov in lahf cmp sub rep ds push or test addr16 imul arpl out mov mov mov mov mov loopne,pn xchg arpl mov xchg lods add mov push mov sub gs fistpll stos cwtl stos sbb xchg push xor xor xor pop scas addr16 pop lock mov ja jbe and jnp mov les test mov inc sub out repnz or ret push or decl rcrb push or or pop ret cmp push mov sbb push je test nop lcall sarb adc shlb and aas cld inc add movsb stos test cld mov outsb cmp in dec mov lcall loope cmp jns cli push sar or lss jo fldenv ret movsl ret mov bound xchg mov or adc out mov mov inc push jmp mov stos subl pop out xchg adc jno push pop sub jmp (bad) pop lock jecxz je icebp xchg insl cmp rclb pop sbb insl fs push add and loope mov cmp sub sbb pop scas shrb movl dec iret sar in pop sub xchg in push pop dec scas mov outsb (bad) mov sbb cli jmp stos out and fstpt (bad) push aaa inc arpl fildll nop mov ja jle ss mov inc pop xor mov cmp repnz mov xor or inc dec cmpl ss insl xor (bad) sub insb lea mov cmpsb dec cmpsb ret cmpsb movsb cmp inc stc dec stc sti sub fisubrl and mov outsl je movsl stos test adc stos mov dec sub pushf sti das xor mov (bad) mov sub mov xchg or or in xchg inc cltd or dec pop fnop ljmp movsb in movsb in movsb in movsb in movsb in movsb in movsb in movsb in movsb in movsb in movsb in movsb in movsb in movsb in movsb in movsb in movsb in les (bad) outsb aam xchg jmp in (bad) jns in aad dec fs (bad) push enter cmpsb or int fcmovbe lret pushf clc movsb or pushf test mov or or call mov add mov sub (bad) iret dec imul dec aas loopne out fbld add repnz inc add adc loopne cli inc dec mov lcall jl xchg test rorl pushl xchg fidivrl xor mov cmp ja push push cmp mov jno mov repnz mov je push mov out mov fwait sbb pop or mov mov out mov andb xor (bad) (bad) push pop into out mov sub jns xchg aas or cmp outsl adc (bad) or mov jo sbb call mov call xchg out arpl xor xchg mov jmp popf mov lcall mov push aaa (bad) pop fnstsw outsl mov jmp cmp adc repnz sbb fdivr cmp pop dec push jae pop push mov fnsave lcall push push push xchg (bad) mov frstor pop iret adc sbbl cmp lret js les pop fild int mov cltd sub pop and and hlt js mov mov das inc test sbbb and fisubrl push adc pop xchg pop orb sbb push je xor call aam (bad) or call and daa inc clc repz or out inc cmp pop cli in lods mov lock cmpsl cld sub jge jmp dec das add and cld push sub test jno dec pop or and scas pop popa and and jmp cmp ret mov sub (bad) hlt clc fidivl mov pop cltd dec mov jge scas fwait pop and sub scas jae mov leave bound inc xlat cmpsl add inc (bad) xlat sarb dec div les data16 int cmp or in insb and inc or jge fstpt sti push jl sub jbe inc cmpsb lahf jns mov sbb inc xor mov pop sbb (bad) sbb or sub mov mov dec xchg sub (bad) int3 sbb repz mov lcall ret adc mov ret dec lods jp stc jl lret (bad) ds and not add and pusha cmc sti in jns insl lock repnz xchg inc aad push icebp cmp dec inc cltd inc xchg in gs dec inc mov pushl (bad) xchg cmp rorb scas mov inc (bad) mov sti fwait mull jnp call or mov inc mov fldt scas pop inc jne out cwtl psubsb test rclb (bad) mov add nop sub mov sub add hlt jnp mov push stc addl inc push xor xchg test sub mov inc icebp lods add jbe js pop mov stos adc adc jmp aad push jno sti ss pop xchg push cmp lahf mov out jno mov jg jns xor (bad) loop rorb push stc outsb pop popa (bad) fnstcw mov enter push dec jp dec and outsb aam fdivrp mov aam adc gs ss dec and cmpsb add sbb adc cltd mov sahf sbb out jmp icebp cmc jl xchg jge das aad fidiv sbb pop jbe sarb std or adc cltd cmp fdivrp pop and (bad) rorb xor push test ds sarb lret push or mov lds sub (bad) ja jbe out pop sarb or lret cmp xchg cwtl es xor sub mov out adc dec popl out rcl (bad) (bad) pop repnz sub pushf pop test or insl mov cs not rolb adc jp outsl imul sub (bad) xchg sub in clc jg icebp dec pop or inc sub xchg bound (bad) adc cmpsb aad xchg xchg jbe call sbb cmpsl cltd mov adc ss push stos aam orb aam cmpsl mov movsb rclb popf mov xor into insl sbb ret jl push cltd pop sarl das fnstenv or xrelease ja push repz xchg xor inc sbb and push movsl mov sub jl outsl and and xor mov dec lea mov dec adc sbb out adc add push push stc and shll lock je mov js xlat xchg js (bad) cs adc mov mov sahf fildll mov lahf into sub and xchg inc xor ds mov jbe insl mov sbb add rorl and xor cmpsl sbb idiv inc jl xchg xchg push jge mov dec mov jbe test mov call jg add stos jmp xor and fwait pop sbb lods xor xlat fdivs xor out enter test lret imul aaa sub add mov sub xchg add mov or aas ja xchg mov add and cmp (bad) and pop das or les mov add push xor inc adc mov jecxz and clc fwait (bad) sub rcl ret insb pop aam (bad) int3 mov and (bad) pop cmp dec inc cli addr16 gs mov aaa mov jne pop inc psrad inc lret fst dec jae iret insb insb xor cmp int mov pop aaa lret imul mov divl sbb in inc fs or addr16 push mov fwait sub mov cmp push sub sbb fisttpll mov insb in bound iret das scas enter cmc nop jnp jl je les add cmp (bad) fidivr test fwait jne call scas mov ja lahf or xor int cmp sub xor jecxz hlt fnsave mov cmp (bad) mov dec adc mov jns dec adc in fcmovnb push cmp sbb mov sub push push pop js shrl gs mov pop sbb cld mov cmp mov sarl in cwtl in xchg ds (bad) mov cli aam js mov insl inc loopne stos or adc xchg jno hlt lods xorl adc xor icebp cmp imull bound sub push push mov sbb jns mov fistl in std mov sti jle push nop xchg divl jbe dec sub mov pop push xchg rorl cltd fs cmp mov push int3 push aam rorl inc cld push ret orl or sarl aaa les lcall xor push add arpl shll lods xlat inc test pop pop dec push sbb adc xchg mov into adc jbe mov cmc and fwait test insl xor inc cmpsl push xor fcmovne sbb fcmovnbe fs jmp adc inc push fadds test lock push adc (bad) push jp dec lret jbe xchg adc and mov rorl (bad) cld mov enter sbb dec jecxz out dec repnz xchg xchg outsl sub daa xor pop jmp sub test outsb insl xchg and xchg outsb outsl addr16 fldcw ss fcoms sti popa add push bound sub fwait and jge and loop or mov adc pop pop fistp push cli imul mov ja push push cwtl pop mov mov cwtl push jl mov dec jmp icebp jb jbe xchg fucomip mov cmp xchg bound pop sbb int3 push adc and lea lds inc cmp or mulps and dec dec out stos std or outsb dec loopne pop or mov imul dec add sarb dec mov mov out xor mov mov adc cmpsl vmovshdup jmp loop in jns push outsb loop aas fs and and ret mov xchg push scas push sub js,pt and xlat sti lods cli aaa mov (bad) cmpsl xor lret mov sbb dec fsubrs mov (bad) cmc rcll pusha cltd inc push adc rorl imul fmuls iret sub push notl mov fsubrl lds push xchg cwtl mov pop push cs fmull jbe cmp sub sahf inc call sarl pop pop xchg testb repnz daa enter sbb leave ja adc and push push cmp scas add sahf pop jns sti pop addr16 mov outsb inc mov sahf add xor mov bound pop xchg fcomps (bad) int3 xor call add mov out leave adc lea xchg lcall cmp cli pop inc mov loop lds mov mov xchg sub mov test inc push cmp loopne rolb xor or stos out mov inc push roll jmp pop pop subl aaa xchg xchg out imul pop sub push mov mov and mov pop xor mov jge adc test push mov xor je iret sub and hlt sub mov mov (bad) lods ja lds pop insb mov lds rclb sti sbb iret js mov jns or aas fcmovnb outsl jg xchg adc mov sbb scas lret inc jo test aaa or mov jno (bad) ja and dec cmp xor cmp adc inc sub adc xchg mov jno mov and addr16 adc adc inc inc sub adc jae stos cmp adc xor jae push pop adc incb and adc aaa adc jb inc popa cmp and fwait aas add cmp jae jp inc ja push mov pop cmp cmp xor adc adc adc aas movsb mov pop jae adc push adc push mov adc mov cmp inc adc pop adc adc adc mov cmpsl aas repnz xchg mov mov mov xchg and aaa popa adc jno jl jb xchg aas and (bad) loope pusha adc (bad) adc jb inc popa cmp adc and inc popa xor and xor adc repnz mov adc xchg and addr16 fsts sub into movl mov scas adc inc jae push jmp xor mov icebp sub inc addr16 adc aas or xor mov shll push ja pop mov popa xor out adc icebp and adc jae (bad) xor aam and jae add mulb adc mov andl mov jno daa and dec jno cltd mov xchg and and hlt popa and ja inc mov jno loope out adc sbb cmp addr16 and adc mov popa and stos aas adc adc xchg adc xchg hlt and iret jno (bad) jae mov pop jae dec cmp adc inc sub addr16 xchg and jae adc push mov cmpsl aas push and aas call mov and mov imul ss int3 cmp mov add fdivrs dec mov dec cmp adc adc inc adc xchg aas scas push xchg cli push (bad) jae je sub adc or loope ds adc add je mov jae adc mov push dec ja xlat mov popa xor cmp adc jae ja and lret xchg aaa ret cmpsb adc xor inc xchg stc push push and cmp aaa jbe push mov popa mov pop stos aas or cmp and and cmp add lods adc push adc cmp adc xor mov data16 sbb adc in mov iret cmpsl aaa or addr16 aaa jmp in adc mov push (bad) les mov (bad) les je,pt popf rcll popa xor cmp and aaa (bad) mov jp jb mov cmp imul inc jno test mov adc mov adc cmp adc adc (bad) adc jp aaa dec mov mov aas mov xor adc divl cmpsl aas jecxz xor adc test and adc adc jae add leave xchg or and aas aam mov jae sbb xchg and mov xor adc mov cmp shlb xor cmp xor xchg mov aam (bad) clc fldcw jbe in lea aaa sahf xchg movsb movsb imul adc ret jg mov dec mov lret mov setg js out adc (bad) mov xchg enter pusha pushf pop enter out fsubrs sti mulb bound push ficoml rcl sub pusha and jb or lret jg incb pop dec push mov ja mov lahf jns sti sbb jnp adc jmp imul mov sub in sub sahf js test pusha sub mov mov or shl rcll pop dec cltd sub cmc mov enter imul pusha xchg mull jmp xchg sub not stos insl fsubrs jecxz ds movl dec nop leave xor movsb pop cmp sub into in cmpl add cwtl outsb or jae pusha mov fwait ss orl pusha cmp lret push js and adc cmp dec in int3 popf in iret sahf add addl pop cmp jmp jae dec xchg scas lcall int3 and inc add inc lret push stc fimul lret out xor hlt loop repnz mov and or repnz out idivl push loopne cmp addl add cltd add adc int3 xor mov mov dec addl jbe pop mov mov or mov inc or push in add mov mov xor jg sbb cmp imul negb (bad) mov xchg notb mov pop xchg cmpsb cmp clc push push bound imul and (bad) mov das or pusha lahf aaa adc jae adc sub aas in xacquire mov aaa pop cmp iret xor aaa xchg and dec jbe xlat jl add pop add cli xchg mov cld mov fild sub mov lea mov mov stc xchg adc scas lahf mov sbb out pop outsb jp ret cli loope pop mov aad lret lock ret dec cld and jnp das lea adc mov and xor dec arpl popf and sub push movsb dec inc push push lret in push jnp cmp xor int3 lret insb dec int3 data16 push jg jecxz (bad) sub pop out sbb jmp xchg mov test cmpsl jecxz into cs sub push jp xlat pop cs sub mov mov dec pop pusha aad cli sub sbb mov sbb mov mov xor in mov rorl pop ret js movsl dec push sbb push push test cmp in into push jg jg and lock stc and (bad) and adc int3 ftst pop sub mov inc fs inc push dec sub mov stos fsubrl mov and xlat and jmp test ret js pop xchg sub insl test sbb out fisttp sarb sub jo popf adc push scas push scas lods pop imul adc imul insl je mov mov xchg pushf das iret jbe setb dec xchg adc xor hlt adc shll and mov adc sbb mov cmp lret cmp std scas test scas jo xchg lcall dec jbe adc repz iret fidiv ss add dec jmp pop dec add cmc mov jmp ja in xchg cmpsb movsb fs fisttpll sub mov in ja jb cmpl int scas xor add inc inc push mov jnp iret xchg mov or inc xchg dec pop lcall add xchg xchg aam jp jbe xor inc xor aam mov push inc adc inc andl fcoml mov lret pop add or ficom mov push adc push cmc int3 in pushf sarb mov xchg cmp mov fcoml push fdivs repnz xchg (bad) sbb xor lret inc std push jle data16 pop mov out jae cld and sub fsubp insb inc (bad) aas mov addr16 imul fbstp hlt fsubr sub cmp dec outsb (bad) outsl popa jne mov scas jge push fiadd aas in insl push shll rorl lods push fisub pop pop sub loopne test xorb sar inc inc arpl test enter and cmp push mov (bad) cmp mov and mov sub outsb adc jae mov ss sub inc cli mov push mov jbe jb dec dec pop xor adc inc iret pop xor adc adc sub or xor mov pop xor mov xor sti lock cmp bound add xor add inc pop int3 out scas cmp lretw mov sub aaa andl nop pop (bad) jle inc aaa out inc ds cmp inc mov push or into push test adc mov ds pop or cmc scas and das and mov scas pop adcl jno xchg xor int3 jp (bad) aaa mov push aad stos push sti icebp push mov jp push jbe mov ret mov clc mov jae daa xchg cmp sbb mulb and stos xor sbb cltd and mov or pusha mov rcll xchg rcrl cmp (bad) (bad) test mov test ds mov mov or test out hlt jp jno mov sbb lock lock dec or pop mov mov add mov lds pop dec arpl imul jns dec mov and mull pop rorl add pop pop popf xchg pop cmpsb ret dec jmp leave inc adc bound ret mov loopne mov inc jns cmpsl sub dec in ret adc fdivl ljmp leave adc mov cmpsb cmp or (bad) sbb fstpl lods push sbb xor stos xchg cmp divb xchg lds sbb inc jmp adc cwtl add scas insb cmp cmp outsl out repnz push out mov mov jnp cwtl xor mov loop inc fldt (bad) or or mov cmpsl dec (bad) ss iret pop pushf inc mov adcl test test xchg lea sub adc popa sti or push outsb ja mov (bad) sub sub mov ja insl subl dec push (bad) push inc rcll lods insb cmp int3 mov sbb hlt dec sahf inc fimull std orl sub adc or dec and jle cli sub in adc fnstsw lret adc lds xchg xlat xor imul imul add repz out xchg cmp xlat test lods in loope dec jg,pt (bad) and out sub mov adc dec arpl or mov mov lock sti mov mov pop or and xchg es cwtl jmp cmp subl je dec dec pop mov mov cmp repnz mov (bad) shrl mov ror sahf dec outsb xchg sub xor push cld xor cmp dec je shr loope aas aad add jmp es mov inc or mov xchg test sbb (bad) (bad) push xor leave push pop cmovg lea sti je test in pop sbb or sbb push test mov movsb in lods and nop std add jae pop push push mov mov sar std pop adc jb shrb es nop mov jae or mov mov inc frstor lret sbbb add mov out (bad) and xor je mov popa std add aaa push (bad) or dec addb inc notl push cmpsl inc addl js sbb cmpsb xor add ljmp imul shrb cmpsb mov dec les ror divb ret fldenv call inc or popa jae inc mov jae mov sub daa les sbbb subl mov (bad) ds pop lahf mov xchg sbb xchg pop rclb sub pop sbb cld (bad) lock out out push and andb pusha aam xor push popl and inc add push stos pop lods stc mov int mov xchg pop test test dec fcoms popf push push into adc rcr jp mov aam aas xorl inc mov and and fdivrl js inc addr16 nop shlb push adc jnp iret int add aam push sti sub xor dec cmpsl push adc mov (bad) jae (bad) lret (bad) adc xchg stos add rol das mov sahf mov out pop mov outsl dec push js xchg add xor pop push or xor and sbb test inc es repnz or adc sbb push lock js aas jo pusha xorl or in cmp mov xor testl adc jo out pop (bad) stos je push fild je fwait insl test jg push lcall mov jbe popa or dec cli jmp js ret in xchg int or xor bound mov adc daa jbe jge sarb dec fmull dec mov dec or cmpsl repz out sbb jno cmp rcr popa mov cli mov aam adc subb repz sub aad or dec movsl and (bad) xor pminsw idivb (bad) jae int3 pop and out push adc lcall ljmp mov dec pop adc xchg sub mov mov xlat test dec or xchg mov in mov pop fwait push addr16 push push ss xchg cmpsl test cmp and test mov lcall loope out adc out inc rorl xchg test enter jle add jmp aam out lock dec xor xchg push (bad) in pop jmp mov cmpsb adc push popa mov fisttp cmc test xchg xchg add jo (bad) jno push sbb cld leave pop lahf into sbb in push adc cs lret enter jns das int3 adc shrb call (bad) sbb fsts cmp fisubrl jl jnp sub cmp out fidivl inc js lock pop rorl adc push fldl mov mov add pop or pop xchg cmp lahf and aas cmpsb and push sub jl jnp sub jb mov pushaw adc aas mov push mov jg push sbbl pop loope mov xchg jg mov cs mov cmp push lods ret sbb repz sbb je add cmp loope (bad) das int lret cld push sarb lret outsb push out push jecxz iret jb adc rcrl stos fmulp test inc scas das sub jb daa mov push cld mov ss js inc sbb cmp or inc ja and sub loope jo fwait sub ret lcall js mov pop and imul add sub dec pusha (bad) jns enter rcrl jecxz mov add jns adc xor mov pop es xchg jae inc push sbb xchg cmp cmp jno jno lds inc or push cli inc cltd cmp jg (bad) loopne or jge sub out ds xor stos or mov xchg pop jg mov lds mov addr16 (bad) mov pop xor mov aaa popf loopne sbb repnz mov repz enter movl lret xchg les in push sbb push add mov js (bad) repnz xchg scas jnp sbb push push sbb dec jp mov lods loopne xchg roll add xlat inc inc add push loop dec push push add es (bad) cltd mov hlt test adc cmp mov (bad) mov rcll sub sbb adc cmp xor (bad) dec call pop ds in lcall push and scas xor or sub mov repnz or scas inc sahf jns lret fimull inc mov dec repnz and mov push enter mulb mov mov gs rcll addr16 pop ss int cltd xchg rcrl xchg cmp jne cld shlb cmc dec stc fsts or sub xor je or xchg out xchg xor addr16 fwait outsl (bad) mov pop cmp or xchg add sbb mov out xchg push inc cmp mov mov jecxz inc sub (bad) and insb adc xor push scas mov iret xchg arpl das out aas fisttpl cli imul push mov sar inc adc and xchg cwtl add sbb xchg lds jle in aaa or hlt dec mov mov pop jno cmp mov dec stos xor scas mov rorl sub adc jl ss or mov nop repnz cwtl into mov xchg mov rcr adc sub mov (bad) jp data16 cs sarb imull dec lret and add jno repz out mov pshufw sub sub in mov jbe xor mov leave lret cs and sub inc movl arpl scas fwait cli mov inc or adc fs scas xchg xchg cltd sub negl push sub aam loop nop xor dec clc dec insl and in mov add fstpt aas popf test loopne mov mov cli in es enter cltd fnstenv pop scas xchg mov pop and aad mov mov outsb push repz scas int (bad) jae fs dec push xchg inc cli mov dec shr jns jg lds mov adc data16 push push cmpl sahf insb and call or fsub inc mov cmp bound pop mov mov js sub insl xchg mov cmc jne stc jle add loop push addr16 data16 loopne pop out out ja,pn and ret push xchg jb mov add mull ss ds push nop cwtl jae xor icebp lcall and in xchg mov loope (bad) push jb mov xor mov sub mov inc push inc in add xlat adc mov sbb push push and push xlat fist nop daa mov lret mov mov imul fmull into pop inc lcall add add cwtl ret fisubrl imull push jne pop mov push mov lahf add pop xor pop adc xor xchg cltd dec xchg sub in mov ret ljmp or in and inc rcr cmp stos (bad) icebp pop xchg sarl (bad) addb adc or pop push xor bound sub scas lods test add in sub push push fcoml pop aas aaa pop dec in xchg mov mov dec in sub ret sbb int cmp mov xor rorl sub (bad) jb lock icebp push cmp jns mov repnz notl aas mul xor push jg lcall rcrb cmp sbb cwtl sbb (bad) shll stc adc pop inc xchg push mov or xchg cmpsl js mov flds jge lods xchg push je int3 in (bad) xorl rcrl xor es jno das xchg adc loope movsb mov xchg repnz aam in adc bound dec sub das movsb jle mov push arpl cld and (bad) mov jns sti popf addb add popa dec fisttpll lret js test test movsb add inc adc in pushf paddq mov mov repz out jmp pop sarl lock cld push cld jp xor adc and dec loopne dec dec scas fidivrl loope or and stos in xlat mov cmc lret inc pop push xor lcall add or (bad) and jo jmp adc sub jns xchg jnp xor outsl lods jp cmp dec mov pop (bad) jb test sbb (bad) mov outsb inc lea loope cwtl movsl loopne and gs test rep xchg fnop add mov andb loope es or stos shrl mulb mov pop xchg and pop xor adc lods and cmpsl hlt cli into fmull ret pop iret jmp test insb std nop mov and jo scas xor aas lret xor addl xchg test repnz xchg and sub push lock das push mov xchg faddl mov jbe mov (bad) cmp or inc sbb xchg addr16 jno mov adc imul push mov inc lods js mov (bad) mov jnp outsb cld xor push (bad) xchg pop mov hlt mov ret cs icebp inc sub pop xorl fwait xor push xchg xchg mov dec popa aas inc cli jp stc cmp jmp or ds and stc lock mov pop xchg push inc jbe ss insl (bad) pop leave lea lahf mov and js jmp push mov loop cltd inc mov fnstsw les and jae jecxz dec dec xor xor aad lods prefetch push outsb pusha repnz outsl out rclb dec fsubl in cmpsb ja mov lds cmp cmp mov xchg ss (bad) jae sti popf pop xchg es sub movsl jno xchg mov ja mov dec jecxz (bad) out xor dec movsl dec daa daa mov imul xchg pop in out jg dec fsts enter or dec lahf mov or adc pop ret mov push mov loopne sahf outsb (bad) loope call loope sbb in js pusha jne sub hlt adc cmp data16 push pop cmp popf insl pop jg cmp pusha and iret push pop jae,pn mov (bad) jecxz int lods (bad) ds lods push out aad sub std lods pop jae push movsb push and jo dec xchg mov mov cmc scas sahf jo sbb js and xadd sub loope mov xchg popf push lcall dec push add jnp mov xor mov divl lds popf push jno pop fstps push test xchg stos data16 pop xor sub or popf mov mov sub je cmp mov push adc dec adcb sbb jmp mov inc mov or push jg dec clc outsb popf xlat dec lock scas negl data16 lea jns cmp cmp xchg push cmp out leave std cmp test ss and fildl idivl bound inc pop fnop mov dec adc lret lret cmp dec mov jle insl jae imul inc mov nop and push adc and je jmp pushf sbb pop ror aas je cmpb lods mov fcmovnu push popf pop inc sbb (bad) frstor add adc mov sub out mov push inc or inc inc mov inc and scas or inc clc dec or add mov mov mov mov (bad) mov fild xlat repnz leave lcall push test into mov xor outsl or sub inc (bad) xor cmp incb hlt cmp (bad) xchg fs jb ja fist ljmp mov outsb jnp sbb cmp das jne aas and mov popa movsb fstpt sbbl cmpl sbb mov mov imul sbb in scas jnp adc test xor cli insb add xor inc jbe sahf (bad) mov jge push stos ljmp sub iret jbe dec jns sub cld imul jg sbb add add test xchg (bad) out (bad) insb ja mov add out int3 xchg xchg cmp sub in cmp test and popf adc enter in push scas test lret add adcl sti fwait mov test aas jmp dec mov sub test push test pop jecxz lret pop in inc cmp mul dec pop cmp pusha fdivl and cmp add imul cmp xchg cmovl push mov sbb in ficom mov or pop icebp push (bad) fucom fdivr test movsb cltd adc mov das pop into adc test push dec sahf xor fistp dec and in lods popf sarl aaa aas sbb ljmp inc mov (bad) cmpsb dec xlat popa push sbb out test xchg enter dec push test push outsl mov mov js mov pop lds adc mov ss push pop fcomps shll aas out or xchg rcrb adc mov inc jae jnp mov (bad) loop adc add insb xchg sbb out ljmp pop cld sahf xlat mov xchg rclb ret adc mov pusha (bad) pop fildl pop sub cmp jno fldt mov mov mov inc and stc xchg pushf jbe pop adc ret jmp jne imul inc sarb push mov push xor xchg (bad) imul adc popf xlat and add and cmp cwtl jo aaa pop xchg pop lret mov mov xchg test in cmp ss sahf inc inc jbe outsb adc popl lcall int3 dec cmp adc (bad) sub cmp mov data16 adc adc icebp xchg or push repnz add out adc out inc mov jmp das popa js pop xor or scas loop jmp mov cwtl movsb or xor push rcrl cltd xchg mov adc add clts or pop push int push cmp jle out mov dec aad fisttpl mov arpl cmpsb dec add jp adc and mov push ficom je sbb cmp fucomip jnp (bad) movsb das jnp mov xor xorb out xchg xor sbb (bad) out sbb or ja inc or mov pcmpgtd mov push sub aam add sbb cmp adc das daa mov jp sbb xchg fwait adc sub ret or cs adcl orb (bad) (bad) fstps xor fcmove (bad) insb inc stos (bad) es (bad) ficompl push imul jb gs sbb mov rcll pop (bad) lcall mov mov mov fistl sub ds push test outsb inc orl out sub ds xchg mov insb cs ret psubsw and jle test xchg sbb loopne lea ja inc out dec cmp mov iret lods mov test cltd cwtl lahf (bad) lock testl (bad) and sbb sbb je pusha mov test push mov and (bad) sub inc mov pusha mov ljmp mov (bad) pinsrw lretw cmp or cmp push lret stos pop stos xlat pop push loop push xchg scas mov ret mov ds xchg push inc rdtsc adc mov jns ret fnstcw es lock daa pusha leave jg shrb sbb push mov and adc sti pop imul (bad) cmp and push imul sbb imul xchg dec dec test movsb repnz je push xor ljmp mov imul adc sub or lea in and mov fbstp jg fucomip sti (bad) jg cmp jl scas jnp scas in movsl int mov das push xchg cli popf sbb xchg enter mov fisttpl inc dec cmp fs jae lahf insl mov bnd push loope lret adc pop testl test cmp xor daa jecxz out shll inc cmpb lret std cmp cmovns add (bad) xorl arpl clc mulb add xlat or xchg adc mov xor icebp cmp in stc push gs or movl or (bad) shll xchg or outsl sub jbe pop mov push cmpsb or mov cmpsb mov cmp cmp xchg popa je mov push (bad) imul pop mov imul mov push ds sbb xchg dec mov sub adc ds int3 lahf fwait ljmp aaa mov fcomps mov mov or cmp xchg dec icebp xor sahf add inc rcrl outsl or sub gs (bad) inc rorb and das out sbb in mov loopne jmp pop jo sarb add cmp (bad) mov push in jmp shr xor push adcb and jp sub fcmovnb in cmp add dec inc fbld cmpsl add adcl scas out in mov push push push jae (bad) sbb fidivl cmp orb into cmp aam movsb scas sahf xchg pop cmpl jns dec push fsubs sbb pop push mov dec jbe mov add pop in icebp dec dec pmulhw jne fimull add push pop inc push jp xor push xchg es pop in xor push fstpl aam adc push js notl (bad) xchg dec aam push push adc adc cmp stc mov mov mov and pop lds xor adc xchg data16 xchg xchg add inc mov shll imul sub fidivl and cmp lea push std xchg fiadd sbb and aad mov jns xchg popa cmc adc push or lret arpl or mov ljmp sti mov (bad) (bad) mov lods dec pop sbb inc push xor leave rcl or push pop aam push out pop cmp mov loope test pop int push leave cltd sahf add dec xchg loop mov js mov sahf xchg mov out pop (bad) fimul mov xor mov xchg jp (bad) decb in imul cmp cmp cmp fisubr mov or in loopne jle stos and sub rcrb mov std fistl clc cli clc fildl xchg jg mov mov icebp mov sub and mov idivb (bad) cs xor and cmp scas jb aas in adc call out sub and inc push mov je mov add sub in pop sahf jmp loope out pop pop in std inc repnz fimul or lahf mov mov mov add mov je sbb cltd aad mov cmpb jle cli cltd push test fstp cmp movsb xchg out add mov mov fwait test mov pop scas mov daa dec or negb adc adc movsb bound and mov sbb int3 loop fsubl aaa in cmp inc nop leave (bad) jno fild dec fild scas js xor mov (bad) pushf inc cwtl and or mov sub and sahf mov lcall cmc xlat fs fwait xchg mov or add push dec cmpsl outsb pop add dec adc data16 rorb (bad) mov push mov test (bad) or (bad) shlb or icebp adc mov pop adc insl push sbb and dec mov aad jns adc ja xchg mov dec rclb stos int3 sbb mov lcall scas xchg jecxz adc sbb and les add rcrb mov popf inc idivb xor (bad) cltd mov inc sti sub jo loopne mov out dec aam ret pop pop jbe rclb add lds or popa add sub lds jmp call jbe aaa out add das (bad) dec push loopne int3 cltd mov ds repz xchg mov mov push adc push xstore-rng or dec xor mov jo ja enter flds bound clc mov push das stos or mov bnd outsl fmul movsb int (bad) cmp push bound dec adc gs jle daa lcall or clc push aam mov jnp lods push enter inc pushf test clc jl iret xchg push ja push pop add cli sbb aaa popa dec xchg into cwtl add fidivr jge mov (bad) enter test pop in daa (bad) aaa push mov lock jae aam push mov inc popa ljmp or push ret inc push cltd outsb aam push pop call lret leave int3 fidiv iret adc in aad movsb sbb dec jecxz emms inc (bad) xor jns mov ds mov dec adc into add dec icebp lods in adc push add scas add jg mov and mov pop jmp hlt jmp sub pushf lds lret sub (bad) inc mov mov sub and cmc rcll add and sbb xchg adc in movsb test repnz aam add clc or xor loope sub mov sahf jo jbe xchg mov ja fdivl cmpsl loopne,pn push mov pop movb divl jno lock movsl jno xlat xor or add (bad) pop sub mov mov repz pop or push mov add jp int es loope stos push xchg inc je ja push inc je xchg sub inc sbb push jecxz sbb ljmp enter dec sbb pop pop dec arpl sub jbe xchg sbb fwait push lock mov mov lret xchg xchg mov inc scas out fcomps mov sbb mov dec sbb pop (bad) jne int enter clc jns mov (bad) xlat mov aad (bad) mov jb int3 cmp (bad) sti xchg jg mov ja fwait and add jae mov ret int3 cmp add call mov jecxz xor ret rorl sbb sbb out outsl add lahf mov xlat mov cmpsb xchg sbbb or ss fild sti fnstsw int stc and les (bad) jns pop std sub sub push jl dec sahf dec call pop clc fwait pop xor mov icebp cmpsb (bad) icebp cmpsb inc repz pop test adc mov inc cmpsl or lret sub sbb sbb enter addl dec lods pop (bad) cmpsl sub pushf inc add out lret jae stc lea add pop sub lret mov pop mov js mov icebp mov dec sti call or adc das aaa shll int3 loopne push cmc xchg jecxz dec mov loop mov lods lods pushf fistl les scas cltd xchg stos sbb fiadd icebp pop dec fistp xchg sbb mov dec cmpb mov in ret inc std ja fs or push mov jle ljmp int push inc ja cld jecxz jge dec pop dec es adc (bad) loop (bad) daa loop cld test jg cmp fsubrs nop mov xor subb pop sub push dec icebp faddl popf cmp xchg fs pop lret aam jnp cmpsl out mov sub imul jle icebp cwtl inc in (bad) hlt pop (bad) sub jbe mov jle cwtl and jg test das jle adc push inc cltd cs adc dec lcall mov andl inc popf aad dec daa popf pop mov jns,pn leave pop aad mov mov int3 push fs out sbb in adc pop fs and das iret jmp dec outsb js fwait or test pop cwtl inc or mov aaa out push xlat imul fldl loop out or out ss xchg cmp fs out outsb mov je sbb hlt or leave cmp leave ss add out push out dec cwtl jp mov out out mov aad cwtl inc es push out aam xlat push dec mov cwtl push ds pop out push je test popa or mov adc cwtl dec es icebp je push inc shrl sbb push dec adc imul leave pop dec xchg popf aam out imul in push cwtl inc es dec jne sub imul es int movsb out aas lock cmpsl sub jno adc repz and adc ds mov xor jmp push jge xlat sbb adc or dec push jns jno (bad) xlat sub sbb lret es mov adc arpl add jp inc push jnp jno adc addr16 jb adc adc jne xor jns pop push and adc (bad) sahf popa and xchg xchg fidivrl pop int lock add mov pop (bad) lock fmull icebp (bad) (bad) pop pushf cmpsb pop push mov test aad jo cmp ljmp pop add movsb sub hlt jmp mov (bad) jb add ja sub pop pop cmp jle test or insl (bad) daa roll inc push lret inc jg cli decl and sahf ds dec mov add and lcall (bad) aaa sbbl insb sbb mov int mov je (bad) ja pop ljmp mov mov movsb shll cmp xor shr mov push mov cwtl mov fcmovnb push pop inc scas jg mov imul pop aaa cmp (bad) xchg or cmpsl dec push in adc pop cmp mov rorl iret outsb movsb mov hlt push clc es rorb jg push in orl hlt mov mov popa es add sub inc test jl mov jbe (bad) movsl in push repnz mov pop pushf std insb mov jns dec sub jnp fs fildl js pop lcall popf (bad) pop ret sbb popf (bad) mov outsl fwait pop sub xor and dec jns add inc dec xchg and lds or daa (bad) sahf or xchg ja mov inc cltd add je aas mov je stos jecxz mov sub sub loop xor push out mov add inc xor ljmp xchg imul in (bad) int fcomps clc rorb insl test mov mov sbb xor mov xchg ss jge cmp pop push outsb and sub xor xorl cmpsb sbb mov fst jmp and int sbb test lret mov ret mov arpl jnp fldenv dec xchg xchg or push xchg and ret int jnp sub xor fcompl push sub cmp mov mov mov enter inc pop test mov mov scas rclb or add stos dec in push cmp mov and inc sub push mov movsb cld neg jo jl mulb adc xor imul push inc cmp xchg lods lret js push inc push push pop shr inc (bad) mov sub js or jecxz and and (bad) (bad) call mov test dec fcomps test mov mov mov mov icebp in iret sbb imul inc pop mov je push aad cmpsl popf xor mov sub mov (bad) jnp or pop adcl mov cmp xor int3 mov cld call mov dec pushf xcrypt-ofb cmpsl test add sbb pop dec push mov (bad) or cmovl jl in cmp test (bad) loope sub in out loope ja loope rcrl sbb sahf xchg and xor out mov stos (bad) mov mov cltd insb lcall xor dec rcl test xor pop into popa je nop scas jae adc xlat sbb scas dec pusha sbb inc sub das jo int push adc lcall test sbb (bad) mov or sarl sub idivl adc xor add mov sub push in sti push fs mov divl out xchg jecxz test hlt nop fwait xlat sub mov movsl (bad) mov push in cmp jle sub pop pop xlat (bad) lret fldt cld repz mov aam jo mov add sub sub ja dec and cmp loop xor fwait enter ret (bad) fcomi mulb cld jmp pushl test lea daa mov sub mov bound jl (bad) mov sbb cmp sbb xchg nop sbb ret insl and pop into jo jnp shll dec dec cmp loopne mov sbb mov mov sahf addr16 fisubrl dec jge push loopne cli aas or dec aaa mov cmp push mov dec adc pop cmpsl add movsb and out lock adc leave cs jmp (bad) mov xor sub enter xchg movsl pop (bad) (bad) in ja fisttp jge push cs (bad) sub daa cltd cmp inc stos gs scas aad (bad) les xor les in (bad) mov dec sbb push hlt aaa jae pause ds bnd xchg mov (bad) sahf dec inc out mov sbb and sbb call mov pop sbb out add pop cmp push lahf stos xor (bad) fcomps cmp push add sub loopne cmpsb xchg inc xchg push sbb cltd push xchg in xchg jbe mov inc or mov fild cmpsb js ja mov or xor outsb push adc push jo pop sub ret sbb outsl rcl and sbb sub jae pusha lahf outsl sub in fild mov jle push xchg mov popf lcall data16 je dec adcl arpl or add addl dec jge inc pop sub jmp or dec mov mov push das sahf loope stos cmp (bad) push addb sbb aas and std aas push adc mov fwait add mov lock repz push outsl in cmp push push stc fildll cwtl mov dec insb mov or and sbb adc mov push popa push sar add mov dec subl enter pop xor mov mov movsl sub mov inc or aad dec std lock xchg adc inc inc sbb pop fimul dec notb mov inc test adc data16 lret cmpsl pop lock sbb adc sub pop jne jnp xor aaa sbb fwait push jae jecxz ljmp jb mov jbe mov inc test sub lahf xchg cmpsl xor jae adc xlat mov pop fisttp fiadd or test dec fmulp mov lds pop scas int dec (bad) test push mov ss aad adc ficom dec scas mov pop fidivl insl jo add cwtl in (bad) adc cmp mov stos push stc lcall mov dec frstor mov xchg cltd cmp stos rcl mov scas xchg mov out mov sub and or pop out cmp inc jmp lods pop mov int je into adc je gs cmp pop hlt leave cmp movsl push cmpsl xchg mov (bad) mov xchg dec push add (bad) imulb pop shlb rolb mov lea inc pop inc das mov ret fcompl xor mov pop (bad) cmp cltd sub lea mov aad adc push mov and out stos xchg icebp shrb cmp lret jecxz das lea sub movsl dec jb (bad) ja outsb xchg stos sti lret subb or les in aaa pop in rolb adc mov or inc sbb adc pop mov js pop inc push mov lea xlat aas pop fildl arpl sub mov (bad) sub in cmp nop sbb mov scas mov sarl stos adc pop leave clc leave pop xor sub cld jno or lahf ljmp pop ret in jmp xor test adc adc xor mov shrl data16 jecxz xor lea pop push fidivl (bad) loopne ror and test inc pop or sub daa ds mov repz jp decl fistpll fwait jecxz call into lret iret jg (bad) ljmp sub pop mov loopne test xor add cmp rcrl mov out test (bad) lret mov iret repz or xchg fldl inc add push xchg aad sub repz xchg jle cs faddl in adc lock (bad) into xor pop test pop int aad sub psraw (bad) xchg pmulhuw xor scas xor mov adc popl add dec push punpckhdq inc pop sub mov add in xor scas xor xchg fst paddsb xor (bad) aad sub lds fisub add dec add or jecxz mov iret (bad) fcoml hlt hlt inc int3 cmp repz sub adc (bad) ret and rcr in push pop stc mov adc mov cmp inc rcrb push pop (bad) inc fimull clc jo scas jle dec jno xor or mov and push and mulb sbb adc insb mov mov xchg loopne lahf outsl ret into push cwtl mov push jbe gs nop test rorl cld mov movsl test sbb xor inc sarb fistpl cmp fsubrs sbb mov movsb test test xchg test adc mov test icebp repnz and (bad) fistp (bad) (bad) loopne (bad) lds out fwait dec sub (bad) cltd mov and les fucom dec out push mov or rorl xchg adc bound (bad) imul mov call sbb xchg inc rcl xchg inc lret mov data16 and lcall dec or pushf movsb cmp add cmp int lret add lods push fsts dec pop add push cld stos lret inc cmp loopne gs adc mov call insl push repz das lods add lahf (bad) mov repz push test stos and fs lea (bad) sarb int3 jge int3 pop and clc adc in int3 or (bad) (bad) xor mov test mov dec rol adc jno cs aam fisttpll repnz test rolb andl das lret in notb and jmp sarb and pop shufps pop shlb imul hlt and arpl addr16 pop mov inc fcoms sbb jl adc mov (bad) push into adc pop xchg movsl mull pusha push popw mov xor dec xchg mov fs pop in xchg rcrb pop call mov into cltd mov push sbb push sbb inc daa mov add inc sahf imul mov aam outsl jo ds xchg (bad) (bad) out xchg push xchg test or mov and dec add (bad) out xor sub es sub adc mov dec pop sbb xor ficom dec mov repnz rcrb pop push sub xchg insl or imul mov or leave xchg imul dec test fisub mov pushf dec add mov daa ret pop bound fcompl daa lods gs orl mov jnp jg pop mov sbb fdiv xchg xchg aad sbbb lea in and inc mov shl mov in pop (bad) aas int3 xor bound jnp push or mov mov sub pop (bad) pop sahf xchg repz sbb jbe and mov push and lret sbb lds or xor xchg nop adc js sbb lret mov sbb int3 test jb imul vmovss mov mov (bad) mov inc jbe lods sub bound inc rol pop xor mov mov les aam cld les shrl or adc mov js je mov xor insb dec sub mov jne pop mov stos lds xor inc aam mov cmp xor dec inc add mov int3 clc sub repz lods push repz xchg pinsrw push cld add lods dec imul mov mov dec jo movb aam cld (bad) repz rorl enter in ret (bad) repz shufps insb xor pop enter ret push fidivr fdivrs (bad) cmc cmp shl out (bad) sbb pop cmp test outsb lds mov adc pusha and jne (bad) stc jae int xchg and into aas xchg cli sub aam loope mov mov jnp mov pop sub adc mov test (bad) cs movsl mov mov cmp jo cld sub adc cmp loopne outsb sbb pop int jne xor and hlt or fwait je pushf lods repnz rorb int3 xchg mov test pushf xchg xchg in pop fs pop sahf ret xor (bad) and mov setg test inc repz mov xor and (bad) test (bad) icebp dec jp cmp lahf (bad) mov imul imul repnz add mov insl sub mov fcoml sahf rcll mov sbb insl jnp add scas push push loope sbb cld div sarl cld mov (bad) repz imul into push addr16 rcrl daa adc cmpsb outsl sbb adc (bad) insb sbb faddl fnstcw int3 paddq xor mov (bad) testl xchg lahf adc imulb dec (bad) popf stos xor xchg lods adc (bad) icebp ret adc lock sbbl sbb repnz movsb mov push (bad) xchg (bad) mov cmp aam inc sbb rcr xchg mov add and std inc (bad) push ret lods and pop pshufw lea inc shl push xchg and pop inc test or sbb (bad) test mov test xchg dec jbe dec mov sti bound pop scas imul test or push pop fmull mov enter das and les and mov or out mov jle lods xchg les movsb push int3 dec cs les iret cmp out pop fmul sub fadd or fcompl les sahf lret enter in mov mov int push pop pop push adc lods cmpsb cmpsb mov popf pusha popf or cwtl insb rol maxps sub std pop (bad) in or lret pop ror (bad) dec into call in or fsubl pop loop inc in fimul (bad) lds jecxz test dec js in les das pop in loop or sbb addb test call lea add les (bad) int3 add sbb push lret jl les mov (bad) push mov jg cmpsb dec outsl inc jno jecxz sbb repnz pushf cltd and inc out push aam pop jecxz lods aad jmp scas push aam push out cmpsb dec (bad) lcall scas ljmp dec push jbe (bad) sub xchg jns cs clc ror sbb pop rclb cld (bad) dec leave mov inc shr int3 lods pop int3 (bad) dec int3 lret mov push jne jl fstpl test loope mov in pop aam inc repz dec lret int3 enter outsb out int3 push sbb push aad fwait dec xor or idiv stc mov inc imul int3 (bad) mov xor pop inc stc (bad) mov jp xor popa sub lahf jmp add jo mov jecxz dec lock outsl adc xor jge aam js sbb idiv jmp add mov and pop lret popf mov ret mov out add mulb enter not jns pop jo xor push jnp mov lcall sbb (bad) aam pop mov sub xor arpl xor add fidiv mov repnz and enter orl mov sarl mov (bad) (bad) cwtl outsl aas mov in inc aad fldt and cmp jge add pop jns shll movsl jecxz sbbl loopne out out adc or ret maskmovq testl cmp mov sub push test or (bad) mov rorl jg sub lcallw inc scas je jge push outsb pop icebp push sbb inc add fdivl fldenv pusha pop xor dec sbb xorb cmpsb sahf and (bad) lock xchg sahf adc mov (bad) mov mov cmp pop and mov ret dec aas incb mov jle mov mov dec push xchg unpcklps fsts stc imul sub and loop mov scas add sub iret jo fsubrl push iret imul adc popa and xchg jle push lea outsl ficom jb mov mov iret jmp inc mov (bad) popf lods mov sbb adc test fisttpl aad shrl adc imulb add jge inc jmp ret push adc lcall mov pop test test cmp nop call aas sub jmp inc mov sahf jae (bad) iret mov mov mov test out ret push push daa mov push fstl aaa adc adc xor adc icebp push fist xchg mov hlt or fsubrs dec (bad) mov sub cmp dec test or dec and cld lcall test (bad) mov jge test pop lods insertq jns push pop pop lret movsl int3 cmpsb push dec sub rdmsr pop hlt fildl ds sub inc mov inc fcmovne jl fisttpl cmpsl mov (bad) push inc enter xchg popa adc xor sti fcompl lock xchg or mov mov cmpsb movsl or lods out or jg lret loope adc in and xor mov (bad) dec out xchg loop push pop arpl fimul lahf repnz int3 mov mov jg mov imull aad stc es inc je in cmpsl sub sti and adc bswap xchg or xchg les adc mov out sbb pusha leave xor pushf jo fisttp or add idivl mov mov cmpsb mov xor dec pop inc imul inc adc jmp repz fdivrl sbbl pop add nop sbb call sbb lret pop add sbb push pop (bad) fwait jge xor xor mov mov (bad) mov adc fnop scas movsl inc push call cmpl sub les mov clc inc pop push call and mov ror sbb xor xor xchg stos clc jmp mov push jl call push les dec xor (bad) gs fmull add dec lock int3 mov pop pop add mov mov imul push fwait test pop lods rolb out cmp (bad) lret lods cmp inc sub fsubp out (bad) movsb xchg loopne das rcrb xchg mov xor (bad) orl aam dec adc data16 add or rcr test jmp push dec dec push jecxz xchg loope xchg hlt fcompl xchg sub icebp std dec repz mov jb xchg xchg mov movsl jecxz jge lcall push lcall push sbb mov outsl pop js sbb jl lods xchg or mov pop inc mov pop xchg mov cmpsl fs mov lahf xchg in lds lea xor xchg ja mov jl mov outsb mov fmull sub outsl ret pop fbld mov xchg inc data16 xor mov mov stc mov xor push int xlat cltd jl (bad) jae imul mov nop xchg mov out cli insb call imul ss cmp xlat sti fisttpll rorb sub pop sub arpl in xchg mov sub loop std inc push decb icebp adc mov or sub xchg dec pop mov rcr imulb hlt jb stos adc pop stos pop outsl (bad) (bad) lods sbb xor lcall movsl ror xor stc (bad) adc xchg jne adc insl fldl jbe sub inc xor movsl lcall push and xchg adc in jnp pop sbb orb jle pushf mov imul roll add inc mov xor inc icebp or push cmpsb iret (bad) clc jb (bad) and and out in mov adc (bad) imul iret int xor rcrl and add outsl outsb insl bound cmp mov ja lret push cli xor es in xor xor sub into and rep cmpsl bound jge (bad) (bad) cmp push lcall js pop fmul rclb or idiv and aas push mulb es cmpb xor loopne lods mov jnp lret and inc mov lea mov outsl bound sbb lahf outsl icebp or (bad) push das in mov jmp roll decb jp mov shrl in push mov pop mov jae leave cld test imul mov fsubl xchg cmpsb pop mov cld and mov int mov adc lret cmp and adc sub insl into (bad) icebp jg ja sarl sar fstl in mov fisttp add pusha repz mov int3 faddp mov push bswap dec out (bad) pop xchg fisttpl xorb lods add fcmovu lods jg mov sti xlat add ret add cld fldcw (bad) fnstenv imul dec je xchg cmpsb lods sbb dec xchg push loopne outsl lods push push imul iret xor mov iret mov xchg fstp xor pop (bad) in insb shlb cwtl mov fsubs dec pop pop push inc push pushf (bad) fstp jecxz movb fsubs cmpsb push subl sub or mov out js cmp loop dec inc mov stc in and psrld cmp adc push fwait clc ljmp sti add sub std or jo inc add aaa sbb les test push xchg cmp inc mov shrl jp pop sub pusha aaa pop pop ret mov rcrl test into inc gs xor xchg mov movsb or fwait pop lds aas jmp ret testl push sbb lock adc cmp lock ret fiaddl cmp dec repz sbb pushl add push push imul mov jl test ret in xchg pop shrl xchg or (bad) scas call cwtl adc ficoml xchg mov sub insb dec in mov push aaa xor pop arpl sbb adc mov pop xlat inc push imul out ds pop out fs sub mov push stc mov and adc inc ja jo mov daa subl mov mov ljmp adcb in cmp pushf je cwtl stos xchg (bad) dec subl test out pop mov aaa outsl dec repz (bad) repnz inc sarb adc cmp add sub and fstl xor dec inc test int pop push pop mov je cmp out xor imulb insl push sti dec cltd out jmp aad cwtl mov (bad) jp pop sbb lods xor mov enter mov dec (bad) js cmpsb movsl cmp jnp or add stos jg pop cwtl cmp add xchg pop pop dec cwtl dec out outsl mov rol mov data16 push xlat mov aam movsb icebp add xchg mov xor cmp sarl gs (bad) fs xor adc jne push shll push push mov stos xor sbb push pop dec pop inc inc cmp cmp adc jb mov xor push mov (bad) sub clc pushf mov mov cmp (bad) lods pop popf inc ficompl (bad) cmpsl lods mov stos lds sbb popf les sub (bad) daa add loop xchg inc jnp mov jge xor ret jns lods jmp mov adc arpl mov cmp push add xchg xchg xchg (bad) pop lds insb cs out adc aam int jns test fdivrs sub add out (bad) rorl (bad) divb icebp lcall inc pop inc mov sar scas mov xor rorl inc lret xchg nop add push xor or call add lret mov mov int3 rcrl or lcall movsl mull push pusha stos push lods (bad) mov ljmp cmpb sub ror and mov ret mov mov (bad) mov ss stc and scas xchg inc jbe std or mov mov xor jno and mov lret in stc pop lock sahf mov dec sbb fistp test or int3 mov loopne ret psrad fs insb sti aaa movsl fistp xorl lds lods push xchg inc push jns inc jp xlat xor or (bad) js das or sbb jne ss scas test push aam mov ss sti cmp cmp insb inc inc in mov inc pop div jns ss add lret mov sub jge mov daa mov fnstsw mov push sbb imul fcmovnbe popa cmp scas mov mov xlat jge adc sbb mov inc mov lcall xchg cmpsl ljmp mov jecxz mov jecxz in sbb les xchg inc stc pop cwtl ret mov jecxz jbe cmpsb jnp loop and rcll mov mov loop xchg sbb mov rol or aas cmp adc mov test movsb xlat out ss iret gs scas mov xor pop pop cmp xchg (bad) sahf je cltd icebp add jno js sub imulb mov (bad) iret mov notb scas loopne test movsw sub xor mov sub cmp mov sbb inc and test sub jg push sub test in jne mov clc stc inc mov test mov xor lock or sbb dec sub cs sbb int outsl pusha sbbb adc stos sbb jbe lret int int3 (bad) cs sub out cmp sub ret adc or fwait nop pop nop pop mov (bad) xor xor int3 gs xor pop ret adc or fmulp sub mov into test mov mov mov cmp mov sbb inc out sbb scas and sbb test fs xchg pop xor (bad) call into jle pop mov aad or lock lods push or sub mov adc mov xchg inc xchg jns nop pop js scas and into push add mov cli pop inc or push xor pop sbb push or scas (bad) ret cltd pop jecxz,pt inc in push mov adc mov xchg ja mov xorl xor aaa ss hlt cmpsb adc loop mov inc sub pop push mov sub and sub jg cwtl or aad repnz or dec lods or sbb fdiv into ret cs jle (bad) test or mov sarb ljmp lret lds and adc js ds jl std or cmp push dec lcall data16 je adc (bad) pop std in mov fldcw (bad) pop repz aaa mov sbb lods xor cli add std or add fnsave adc js sbb add mov sbb iret rolb lods cmp lock sub sbb sarb add xchg mov push mov xchg outsl sahf or pop jmp cmp sbb add push into in ret push sub negb xor push jge ja and add xor aad xchg push int3 les dec (bad) cli inc (bad) push hlt out pop int3 jo add daa fnop movsl mov jmp xor inc (bad) jo (bad) call adcl jge sahf notb mov xor shlb out imul xchg ja or pop in cmp jnp or stc ret pop inc xchg add mov or in xor push ljmp cmp sbb jnp mov pop mov ljmp cmc movsl ss jne mov xor adc ljmp cmp pop ds xor addr16 in rclb popf lds (bad) or sarb mov dec cmp decb ss lcall mov rorl dec mov je fsubr and or mov into dec push pop ret ret push lcall inc andl and xlat sbb push rcr adc inc mov aam stos cmp lock cwtl or push cmp pop pop cmp inc inc loop cmpsb or andl mov (bad) das (bad) out mov pop inc test mov repz stc flds sub in inc push add fsubl jecxz (bad) xchg and dec stc jne ljmp aas and aas fldl icebp fstps sbb xchg xor xlat xor jno xor jno arpl push mov adc dec cli arpl jae bound nop int3 sub xchg xchg xchg and adc xchg sbb push out mov stos rcrl nop test pop mov popa xor and mov imul aas sti faddl sbb stos shlb rcrl dec fsts cmp iret popa test sahf lret test sahf jg js xchg mov mov xchg dec cmp je add pop pop cmp pop or xchg and insb push stc sahf or xrelease leave push and mov sbb dec push fs sbb pop push mov xchg ja inc mov xor mov sahf les stc jo ja cli ret cltd push rcrl pop xor mov pusha adc stos mov sub mov test hlt aad push cmpsb mov out fwait (bad) roll mov in lret mulb into (bad) out add pushf inc mov sbb jbe dec mov or jl cmp pop mov int sbb inc aas aam mov test jne push outsb jmp sbb (bad) mov pop iret cmpsl inc dec daa cmp sbb lea pop fdiv fwait jl adc push nop imull jo jmp xchg cmp test jecxz mov clc or and sbbl pop jg cli mov lock push pushf xchg adcl gs inc or add lods fisub ds or mov push pop or fsts mov pop stos aas cld pop fwait test pop or push xchg stos jns data16 inc movsb xlat jge rolb and loopne movsl mov dec out jo movb dec sub jmp pop jg lods adc push outsl cmpsb js push mov (bad) leave arpl xchg out ss ss or insb mov ss pop test mov jge or jb out jmp cmpsb mov test es xor lock (bad) icebp pop aad std or mov mov mov inc mov add pop cmpsb pop movsb sbb add inc xor mov pop scas lock test mov cmp sbbl subb mov push pop in mov pushf insb lods mov cmpsb imul sbb xchg inc daa jo push jle or pushf enter mov push insl ror mov cltd movsb xchg pop aas inc cli inc sbb call out push test daa sbb pop sbb sbb (bad) ja cmpl out cmp rclb jno out sarl mov xchg mov loopne push adc int3 int and push int3 jno mov xor stos fstpl sbb mov dec jmp outsb dec add cmpsl mov cmp add mov adc dec and scas lcall shlb inc mov in jl out sahf es fwait setg dec jns or std insl stos jg dec scas les enter out xor aas jnp mov jge pop shlb dec or fcoms test mov jge fisubl andl or clc outsl or and rorb idivl imul or leave sar jno mov lods outsl stos jns mov idivl dec cmp cmp adc loop sbb loop cmp loop sbb pop icebp and nop (bad) lcall out jns in add mov fwait sub ret mov rcrb mov imul in pop push sub ja cli jge movsl pop mov mov std adc push lahf adc iret jmp dec mov jne cmp into xchg inc rcrb mov or mov cli hlt xor mov or xchg pop lods dec jno or inc ss mov xchg repnz adc add inc add push addl push scas push jb jle (bad) mov jl mov pop dec sbb sub push notl sti and xchg add mov inc aaa and or cmc (bad) mov add dec inc addr16 xor push dec in test mov inc push out fisub jnp (bad) mov pusha or and sbb add xor add mov test lahf xchg repnz fnstsw cltd sbb aam jbe add mov dec mov lret jne aad bound jns mov mov mov jno orl jbe adc out xor sub xchg adc or jle pop add or hlt inc mov inc test fcomps out aad (bad) repnz fldenv add movsl or xchg lcall push shrb inc rcrl pop shll inc insl jne push lods es mov icebp pop cltd insl mov imul and cmp rcrb push insb push (bad) (bad) inc leave jne dec and mov cli add iret sbb mov mov pop std test mov mov fwait pop jns scas jmp dec push test fdivrs mov cmpsb or cs lods imul xor (bad) ljmp xlat loope fnstenv mov outsl incl add out arpl or aad test and adc je sbbb mov (bad) xchg das mov add mov out adc pusha and jmp pop or (bad) pop das mov mov inc fidivr push in outsl test out popf cwtl mov lret or xor fisubrl (bad) mov mov push or scas out pop xchg dec gs scas dec aad sub (bad) movsb mov scas mov dec je sbb inc add rcl rol (bad) mov mov cmp movsl mov adc push xchg xor sbb ja adc xchg mov xor movsl dec daa lods xor fimul jne mov or xor inc xchg push or mov push ds pop (bad) lock out arpl or sub addr16 mov dec pop adc sti xlat enter mov fmulp clc fisttp push cli jo jno movb lods ret lods inc daa aam pop pop mov adc cwtl call and scas pushf or jne aaa cwtl scas popf shlb sub js push adc add in jo and jbe mov lret and leave outsl (bad) ret sbb pop (bad) and cmp shrb fsubl fnstsw (bad) adc xor call xor ss mov (bad) or mov clc inc cmp cmpsb add int stos int3 inc lods xlat xchg pop in pusha jns cmpsl add mov xchg mov sbb outsb mov add cmp in outsl shrl sbb sbb lea (bad) jnp clc xchg (bad) mov loop mov xchg adc ret inc popf je adc movsb aas add push dec (bad) dec das jb daa das movsl xchg arpl test mov xchg cmpsl inc inc movsb cwtl mov inc fnstcw scas xor dec cs sbb push adc adc sbb add pop daa mov mov mov test xor push fstl pop aas cli mov inc mov in inc jae fsubs inc fnstcw mov mov adc mov inc iret rolb push js loopne fcoms mov and aas hlt lahf push push pop mov dec outsl mov loope (bad) sbb lea dec clc xor jp adc or cli movsb jg mov jno sub int3 pop addr16 stc repz jno mov lds lods inc test xor cli adc enter push or add repnz (bad) dec push (bad) fiaddl xchg mov pop jmp (bad) sbb popf pop aam cmp push push xor cmc add mov outsb idiv daa and arpl in aaa cwtl gs call cmp or inc popf inc adc jle imulb outsb or pop jne push adc jge jle dec cwtl je,pn cmc pop lods adc mov jle inc mov fimull xchg xchg mov mov adc in dec bnd call cmpsb movsb push cwtl roll push lcall or push fldenv push sbb push jne mov imul xchg daa repz sbb and push jl divl sbb mov test outsb jno (bad) mov push mov adc pop push (bad) jnp les pop scas xor adc idiv (bad) aas repnz call int3 adc mov add loopne xor mov mov sub je xor hlt mov cmp mov hlt outsb jns movl jmp mov stos cmp or xor pop fistpll adc sti nop data16 dec jmp inc enter jbe xor adc ficompl pop and pandn xor imul push inc xlat mov lods xor push notl in insb cmp cwtl jne mov js sub xor push pcmpeqb lock out roll scas dec push pop add lds aaa ss icebp mov mov pop or add sbb inc les scas dec loope sub hlt es inc mov loope ret in stos mov inc les cltd push pop or mov sbb fdivrl aam sub xor and lods dec stos mov xor mov dec push mov arpl movsl in xor scas imul ret mov and adc orl lock cwtl mov subl adc lret lea lea push dec out jmp movsl (bad) hlt data16 jmp and out addr16 std jge adc cmp and xchg or mov sti xchg shll mov lods jnp,pt aaa aad cmpsl sub sbbl ret or aam gs cmp mov or mov mov in lret gs and fs or (bad) xor add lcall pop push (bad) in les inc nop scas pop inc and (bad) sahf or daa and cli sub jmp loop mov push out sarb mov jbe je inc movsl xchg mov push xor enter xchg push mov lea pop mov sbb ljmp adc hlt vmread jno ja out hlt add mov dec dec into pop xor adc jp or dec sbb adc lret arpl inc jne test mov sub imul sub jmp mov push cmpsl push sbb into jno stos push jge iret sub (bad) mov hlt roll shlb idivb mov (bad) mov push lea repz or jl loopne int3 aaa dec jmp xchg mov dec daa pop adc daa dec sub sub cmp (bad) cmp popa pop sbb dec push xor negb sbb xchg dec loopne and das mov out pusha dec xor add mov push into jl mov test ljmp pop enter xor lahf ja fimull jne fildl shrb shlb or jg push sbb mov dec cmp push andl in inc popa nop inc cs xor fsubrs jl inc es cmpsl xchg sbb cmp lahf mov or and mov xchg add mov rcll push lret test sti inc push inc xchg mov dec mov fidivrl adc add push and roll (bad) jnp (bad) aaa mov dec sbb cld stos mov arpl adc sbb and push xor mov mov test loopne fldt add adc sbb mov xor jmp add push int3 xor (bad) movsl mov mov cmp aas cld cmp mov ss xchg and pop movsl pop pop sti sub (bad) cmp mov dec and pop inc xchg push jl xor push fild adc fsubrl or dec cli mov (bad) aam jge and sbb mov mov mov pop mov int aas and jp aad dec and je stos sbb mov sahf ljmp jne or mov imul pop and outsl int imul adc or pusha pop or jmp fsubs sbb adcl sub mov mov fsts out mov push rcrb lods push imul (bad) mov or icebp (bad) maxps dec (bad) (bad) jne pushf aam cmpsl jmp cmp or sbb mov shr and sbb or fisubrl sub sub (bad) out push pop outsl mov fcompl jb insb dec sbb lahf sbb and js cmp popa cmp nop aas sub mov jb jmp cmpsb push push (bad) mov adc inc fdivrs repz jl jns jg subl aas xchg push or sbb sbbb inc lock int aad outsb mov out xor cmp (bad) mov subl xchg loope dec sub in ret (bad) jg lret out jnp mov sub (bad) cwtl mov cld ret push pop xchg inc mov insb addr16 mov aaa add adc in fsts cld adc adc scas push dec je xchg push movsb stos cli or pop imul pop int mov adc pusha out int3 inc cwtl ja arpl sub xchg repnz or lret jg inc add adc test je xchg mov sbb addr16 mov pop pop sub jecxz mov jno mov ljmp push dec orl out or push dec jg pop xlat pop fiaddl or xor xchg mov into or pop and fwait pop ret pop jno jns adc cmp cmp (bad) mov scas faddl xchg je out fs dec sahf mov push outsb mov sbbl fadds js fsts jno out enter xlat es pop cld mov cmp or inc mov or cld cmpsb sahf loopne add xchg pop sbb aad push xor inc mov fsubl in mov or jbe cmp loopne addr16 xchg add fisubl mov pop mov and rdmsr mov cwtl ss xchg dec lods or dec jmp mov cmp inc mov je gs mov lcall add cmp dec sbb lea lret mov jo repz imul popa mov imul fidivl jmp jg mov clc in js test and xor jne mov inc mov scas fmull enter push test jp push movsb subl adc bound pushl dec and mov pusha mov mov xor xor (bad) inc in into xchg inc test jge mov stos inc and insl mov xor mov adc stos xor fstl fdivl sbb imul pop mov hlt daa cmpsl imul push xchg xorb push and pusha imul pop mov add cmc cli negl sub ljmp jg and idivb pop jae,pn mov test repnz xor loope pushf leave push rorl xchg ret pop lahf sahf push js jmp cmp mov xor sbb sbb (bad) dec out fxam fsubr inc test add popf pop cmp mov mov loopne xor jg sti jecxz pop push cs in jno cmp dec pop in pusha lock (bad) sarb (bad) jle mov or fwait outsl (bad) xor test xchg ds in mov lock mov insb mov sub pop push out mov or add add mov fisttp (bad) dec push adc outsl loopne out leave lahf mov mov aas cmp rclb out add sbb cmp mov aam mov mov (bad) rcl pop fisttp jae jnp in sbb aas (bad) jecxz lea pop cmp gs xlat imul sbb push fistpll and add rolb sub xor inc shll jl jno add or dec pop (bad) jg xchg mov daa scas jmp xor and cmp push push es daa dec roll inc lret loope in sarl or mov imul (bad) out daa in (bad) data16 shlb cmp dec dec xchg mov push or subb push subb std jge enter cli inc aas push mov lods shrb lock pop fistpl jecxz test adc lods jae push mov xor mov mov mov sub xor (bad) cmp mov sti test cwtl sub fcom int pop mov shrb and ret mov daa leave adc stos clc mov mov mov (bad) mov cld adc aad adc add fsubs mov pop es gs in cmpsl lods adc test mov (bad) xchg mov add mov dec idiv fdivrs mov add add daa add inc push pmulhw lods sub stos pop and pop (bad) subl xchg gs pop xchg mov fcomi dec in jne pop (bad) mov mov lock dec or bound arpl insb xchg out xor xchg movsl scas mov and jp das inc sub or jl sbb cmp dec push stos push xlat test clc test js mov fdivrp fcomps (bad) ss mov jnp or (bad) mov sub and sbb shrl pop dec mov jne adc sub and and mov imul push iret inc lahf push in (bad) std xchg aaa mov shr cmp int3 mov sub js es cld data16 aaa xchg xor mov jge lock sub mov jg ss cmp and and mov data16 (bad) xor pop and movsl addr16 mov std push lock (bad) divl sar mov push pop sbbb add mov xor dec stos or add jne cmp nop lods adc popf or cmpsl dec pop in sub pusha cld and mov stos rcll pop pop daa out (bad) sbb jle mov sarl lods es in shrl cli push xchg push fisubr mov test sbb and sarb shrl pushf sub mov lods or subl cmpsl xchg sti sub jg ficomp jbe test mov call scas xchg mov (bad) sbb outsl call pop push cmp pushf cmp xorl loop push out push xor lods adc add pushf xor dec lods mov fisubrl sbb addb pop add mov lods xor iret push pop ljmp out scas pop xchg add imul sbb (bad) or jo nop pop jnp daa cs movsl jg or mov push xor ret lods push loope xlat out out xchg aas pop arpl movsl xchg out inc xchg pop fwait aam scas sbb add lahf fisttp je adc lods inc inc pop rcrb pusha jecxz sub jecxz int cmpsb jmp (bad) mov pop mov push xor inc or stos daa insl jecxz data16 push pop fwait outsb sub jno leave fcomi bound in fist movsb mov hlt mov and (bad) lds imul sub jns mov mov jp and stos jge ds cwtl fsubp lret push cwtl out cmp js loop popf push es adc ficompl fcmovnbe daa stos and xor or (bad) and data16 or arpl shl int mov pusha loope lahf scas mov mov popf xor jge mov sbb push les jle add ja mov and xchg gs add in jns iret test in (bad) loopne mov dec imul jno pusha push out jb ss cmp sub test inc cli cmp cwtl stos fcomps lods insb iret leave and push xchg mov sbb cmpsb mov rolb xchg mov out lods push jb int daa mov adc pop data16 xor out lret mov in fisub mov bswap es inc fucomp xchg mov dec dec mov stc lahf (bad) mov cli stc imul xor mov loop imul inc stc inc cwtl inc dec xor sub add push mov cmp pop and xor (bad) push cmp popf push adc mov mov xor das adc andl xchg faddl roll mov xorl inc fldl2e or ljmp inc test fwait aad imul repz add sarb mov test movsl xor mov lret jo mov push lods dec ret cmc test push sbb pop dec push dec ret aam (bad) cltd add fcompl jne test loope fild dec sub jp mov adc inc dec ds push push int pushf out pop lret push mov mov push mov pusha les jecxz dec test push or out adc arpl sbb hlt (bad) and rcr dec dec fcmove cmp sub inc test mov jge jmp dec jo cmp adc adc std or pop lcall popa add mov push jb sub or push imul repz or jmp aas pop lahf push testl fst inc popf (bad) and pop xor pop sub sti insl sbb (bad) in ljmp out scas (bad) repz push out sub pop scas jl (bad) jl sti cs inc (bad) jae cmp push dec and cld ds std mov ds ss cmc inc insb push cmpb push push cmpsl pop shrl xor nop movsl and xchg xor mov jae stos mov popf jmp adc cmp popl das cmc pop loop mov or xorb fcoms pushf popf or mov aaa add aam jo inc jmp loop sti xchg jmp punpckhwd scas lret inc jne inc popf add daa add pop jecxz dec xchg (bad) mov (bad) je (bad) xor sub hlt and test stos sub push xchg ljmp sub or mov repz jp pop dec ficoml sti sub and cmpsb rcrb adc pop sbb pop (bad) repnz ljmp mov pop cs dec and sbb (bad) aaa insl mov mov jbe mov xchg mov mov test es out and mov add loop add adc or (bad) in mov xor mov push push ja icebp jns loope loope fstl arpl fs rcr rclb shll mov dec mul sub adc push jnp cmc adc jo,pn repz inc inc push cmp sub (bad) mov (bad) aaa mov fistpl inc out ret insb (bad) xor loop mov mov out cmp xor cs flds xchg sub sub and (bad) mov push lds pop lock mov xchg subl hlt push xchg fnstcw push cmpb cmpsb sub ljmp add loopne cltd mov push je rclb (bad) hlt loopne ds cli sti in int3 cmp or ret pop xor mov outsb inc mov out je jecxz fwait adcl dec cltd fisubl aad push lret inc stos fwait stos push mov xchg inc or mov inc dec add daa test int sbb add mov adc (bad) imul in mov sahf xchg fwait push int mov pushf je fs out call aas add inc xchg faddl fwait in mov sbb mov adc mov fwait mov inc out popa imul jge cmp je les jb inc mov mov fdivs adc ret cmp mov and divb add ss jbe out andl (bad) jp lea sub jmp sbbl lcall stos loope lret mov or dec inc xchg mov xchg aam out adc int3 sub icebp fistp (bad) movsb mov roll xor fimul iret (bad) jne sar mov dec pop test jle (bad) cmp cwtl (bad) insb adc xor cwtl jb packsswb pop mov jae lods repz test out out pop adc mov in ret loopne mov addps addr16 ficomp lods mov mov test inc icebp sub test sti int dec pop (bad) dec inc dec pop (bad) cli arpl sahf mov adc mov je add and push pop enter int sti jle mov aam data16 imul ljmp lret dec hlt dec pop das cmc push in sbb xchg xchg xor aaa jecxz sub out push out out stos stc push sti ja lods and sar xchg dec adc movl mov jbe sahf jmp cli sahf xor dec (bad) loopne ds outsl jne xchg and sub lods in push scas xchg push lcall add ret (bad) fwait inc sbb insl (bad) inc jno pop bound (bad) push add or stos mov in pop pop mov mov cmp shl lret cmp lods out std idivl and pop mov or dec fmull push jge dec rol jo aad mov cmp mov sbb mov and inc inc sahf dec sub mov stos mov aaa cmp sbb es stos sti and outsl fistl pop arpl out add mov jg call mov jne jge sub jne xor push movsb imul out dec fldlg2 lods dec loopne lods stos lret fidivl sbb mov sbb fs cmp (bad) jecxz sbb ficom dec int3 in mov mov (bad) sti xor xchg push xor xchg mov daa adc dec mov imul test je and sbb and mov je adc sbb adc mov inc scas data16 imul adc sub xor mov jecxz in das push (bad) in imul scas adc sbb ds mov inc mov (bad) and mull xchg or xchg jne fimull jp sub mov and jnp sub xor lods adc mov sub mov insb in xchg sbb dec pop fcomi adc iret daa jnp sbb mov ja adc fildl add inc sub mov cli and mov clc test fsubp adc sbb insl push cltd mov imul mov xor jl dec lret and repnz dec jbe mov xchg and mov lds push addr16 xor cmp lock pop inc push sub lcall cmp repz jecxz adc cmp add xor gs test sbb dec (bad) push mov idiv test pop mov pop in inc sbb clc xor push scas xchg aaa lds js xchg scas mov adc adc push ss pop sti std pop out jl sbb js mov add lods lods mov hlt fdivrs in loope clc lret cmp jg push pop (bad) fdiv fwait int imul cmp lds movsb divb push jecxz fbstp inc push jmp lock dec mov mov xor fs mov mov fisub aas mov xor mov popl insl sub adc divb add cmp icebp add xchg sub xor sub jb xor mov push xor std dec enter ds imul sbb mov mov sub popl push loopne (bad) mov mov push dec xor pop les and xchg mov xchg and xor fidiv jb pop sbb sbb rorl insb loop sti (bad) jno mov fldenv xor push xor in sbb adc sbb mov sub fld mov mov (bad) and (bad) mov jge xor loope pop or cltd imul stos ds test cs xor stos cmp daa push xchg add sub dec arpl mov pop mov mov add mov mov adc cmp lcall imul mov ret pusha (bad) mov mov mov mov lods jle ja jbe aad cmpsl jo cmp sub ljmp aaa xlat cmp leave jb mov sbb adc inc divb push js repz xor cwtl push fsubrl inc or add imul jl jmp inc sbb push mov into (bad) std fwait movsl test or lock or xor ds lock cmp test pusha xchg jo (bad) fs jns fs test sar cmpsb leave jns (bad) pushf dec (bad) mov xlat fdivrl xchg fidiv xchg (bad) clc out arpl inc outsb sbb xchg lea in jmp in aas push jge mov jl data16 les fdiv movsl mov out lds jge push xor lret mov push xchg dec sbbl inc jecxz icebp in jb (bad) cmp dec pop dec cmp and pop aaa xor push dec mov (bad) (bad) jp js pushl push stos jp test fs das push add les enter aad (bad) jmp xor jmp test andl lcall outsl cmp jle cmc aad mov es or dec jno,pn mov and xor fldt push fistpll fildl int3 outsb cs pushf sub add int mov out stc mov lahf das add mov xchg pop cmp pusha add cmp push cmpl sub leave js sub sbb int3 popf cmp (bad) out movsb out mov lock or xchg and xchg clc jne sbb ret shrl lahf das or incb lret adc adc inc inc sbb leave scas lds xchg pop data16 sbb (bad) divb add jne adc gs cmc inc sbb xor adc mov xor inc subl into xchg jae ficomp sti dec xchg lds lds sub in cmc into (bad) imul imul mov xor roll (bad) dec jnp xor dec cli fsubrp fcoml dec outsl sahf call int3 pushf jecxz or dec hlt cmp add cli inc push sub (bad) testl or test cmpsl out mov outsb lcall sub adc cmp hlt pushf inc (bad) fdivrl or inc push test (bad) in aas jae mov mov sbb (bad) call daa and outsb addr16 mov in lods xor xchg sub cmp mov fsubrl adc cmp ror cmp cltd sbb fwait sbb xchg pop scas aad imul mov cli out pop sarl mov push mov dec mov int3 add sub daa lea es sub pop sub jg cltd neg stos leave lret jns ss lock sahf mov mov dec add test movsb adc ret icebp sub mov idivb aas pushf add clc mov and jne dec jns dec inc jmp dec pop out movsb jno out adc dec jecxz mov jmp push adc mov loop jmp pusha fwait cmp shld roll push mov dec fstpt scas pop cmp adc push xor out into insl push sub (bad) bound add add insb loop sub jno fidiv push lcall (bad) test jg rcll cmc insb xchg xchg imul ja push sbb (bad) adc mov aam je cltd stos stos cld jp add test and nop outsb lods inc in cmp out inc ds jo jmp into sub gs cwtl dec or jns (bad) sarb pop icebp inc jmp dec mov and ret sub adcb test ds rclb jno mov jecxz add (bad) push pop dec mov pop cmp lock imul dec xchg jno idivb call stos lds sbb pop aaa lret fs jb sub jle mov mov cmp pop jae test cmp test mov rcrb mov mov rol stc idiv mov mov test xchg or mov and sbb sub testl push stos inc or cmp pop popl mov lret add ret (bad) cld stos shlb cmp cmpsl pop hlt dec mov stos (bad) mov enter cmp sbb negb not pop leave jmp sbb add shlb dec arpl push stos cli and mov and out mov inc into movsl adc jns lock enter into jle xchg fdiv jbe pop fs mov sbb aam (bad) push (bad) (bad) xor sub cmp lods rcrb test call xor jnp pop rolb imul sbb adc sbb lret xchg hlt in pushf int3 (bad) orl ret sbb mov movsl (bad) mov lods cmpsb sti xchg out ss dec rcll mov roll insb jne out jne aas (bad) inc jnp mov mov or dec pop mov mov mov sbb addr16 add pop faddl pop outsl cmp out ret or pop aas ds xchg fdivrl insb mov insb ret repnz lods lock (bad) xor push lods call pop rcrl fiadd jge xchg mov cmp mov es cmp repnz or aaa add test add sbb adc cmpl add sbb das (bad) dec dec jl popa clc and subl in adc xchg sub cs shlb inc ficom mov pop fmuls je mov addr16 push lret out rcll adc xchg fmull mov popf sub xchg dec xchg inc in fwait movsb jbe mov sarb push test fadds pushf add lea dec test inc inc xchg ss xchg add mov jl fadd push data16 cltd dec xor pop mov jnp xchg icebp xchg mov add mov and cmpps inc loopne xchg in test (bad) popw mov icebp xchg push stos mov insl shlb mov in loop cmp mov js mov notb adc scas imul scas fwait cltd xchg out (bad) icebp orl lcall scas jl in mov je out dec adc cmpsl ret imul jbe fs pop in or mov jno xlat inc ret aas jge cmp call lahf xor and jne,pt setb addr16 outsb push lock cltd xor cmpsb sbb les mov test fs xchg mov mov jl rcr mov push jle mov addr16 in lret mov out pop xor xchg cs cwtl jne xor push inc mov in jp mov mov sub push minps mov inc aas int3 stos fdivl sbb jnp cmp push lret sti stos xor daa mov rol mov daa incl mov insl rep mov bound jge adc mov (bad) dec lea fldcw jnp xor mov out lods in inc imul in inc mov pushf sub cmp inc mov and cmp mov fs inc in or or pop pop or xor push or (bad) push push sbb test adc dec mov xchg lock into add stos ljmp sub fcoms lea jbe,pn push mov aaa or out push mov mov ss sarl movsl scas mov pop cmp in cmp push mov jne fdivrp lahf hlt cmp push cmpsl in fnstcw xchg mov push sbb rcrl lods aaa push (bad) dec das cmp iret orl cmp xchg unpcklps push push stc jne jge cmp rol sub inc xor cmp pop enter adc jne mov mov inc (bad) dec xor movb dec sub in mov roll arpl and call call adc inc mov lods (bad) sbb cmpsl jb cmpsl jne sbb cltd mov push shrl movsb or add push fidivrl push setno xor scas lock mov xchg out inc and xchg sbb out cmc ret rcrl int (bad) mov scas pop cmp pop pushl pop lock in cmpsb cli lcall (bad) jmp mov adc cld xchg (bad) fidiv xchg aas sbb in mov and mov lods xchg xchg (bad) scas pop (bad) mov cmp jnp out ja int mov dec jg cli jne mov or mov sti adc sub (bad) inc fisubl push bnd stc call stos and inc (bad) lcall add pop rcll pusha (bad) xor mov add sbb cmp add sbb jmp fisttpl adc out add mov jbe out fdivrl iret ljmp mov xor add cmp dec je cmp pusha sub xor add and sbb mov insb mov mov (bad) adc mov movsl mov mov and jnp dec add test aam ds pop sti and cltd xor ret xchg fstp jns jae in bound outsl aam inc jae stos scas imul insl lret jp rcrl adc (bad) pop inc in cmp andb dec xlat nop std adc aaa inc add jne sbb sbb lods dec sbb inc or (bad) or mov ret movsb xor ficompl scas adc sti and aam mov xchg nop adc push xor idiv or inc xor dec test fiadd nop or dec pusha jb inc outsl int pop mov jne mov in jle or (bad) jo cmp xchg mov jnp fistl ss xchg and into aaa jns adc insl cmp iret jns mov dec adc xchg adc jne mov mov das sub sbb repnz int3 add pop cmp jns ds stos inc push xchg jae add fwait cld xchg divb test xchg push decl pop xor xor xchg mov sbb in inc jle xorb cmp xor out movsb popa pop jmp ret push push add mov dec pop arpl or pushf test jmp pop inc hlt bound cmovge and stos and jb cmovs call lea mov and repnz cs jge lds std push daa add out pop aam adc addr16 daa jge mov (bad) cltd test mov jge lods adc push mov ljmp add xor fdivrs cmc int xchg lahf xchg inc lods cltd (bad) inc popf fisubrl (bad) jno in cmp (bad) cmp out cwtl in scas xor add test add je stos subl (bad) xor cmc and sbb sbb cmp in rorb mov xchg adc add stos mov std mov loopne aad cltd mov dec push xor mov aam mov jno movsl test jmp add js and jecxz test sub dec xchg push mov js push psrlq scas jmp cmp ja fs cmp xchg in dec cmp xchg (bad) loopne lcall icebp mov push loopne out stc out aaa xchg jb add call adc loopne jecxz mov into sti pop inc rorb sbb cmc andl dec or inc lods dec sbb lods xlat into in xor cmp popa pop inc sahf pop pop jmp cwtl sub jno scas cmp dec call mov jge push (bad) mov mov or xchg jb rcl xchg pusha popa or xchg pop or inc inc xor loopne inc aas jae mov inc mov push lock stos jmp aaa adc nop mov lock cs sarb stos ret ret jp (bad) inc out adc test or pop daa dec sub mov scas nop xor lret xchg mov fdivrl xor adc pop je cs mov xchg jle mov mov movsl rolb push aam popa fmulp inc das frstor mov mov sti out js std fwait jg push fimull loope fimull adc notb cmp aam and lret xchg xor cmpsl sbb rcr push mov aaa add jecxz pop cs push inc cmp pop xchg mov in neg stc hlt out pop idivb loope mov lahf and jecxz xlat andl lea mov adc dec out adc and xor loop mov xor inc sbb add shll shrb sahf hlt outsb push xchg push out jno mov push rcrl jb cmp sub pop fcomi push lahf in cmp loop sahf repz iret ds lea dec jge aad iret mov or cwtl inc and cltd cwtl pushf dec inc adc jne mov and pusha mov popa and pop cmp mov adc adc sti pop addr16 ja cmc lret adc pop in pop xchg jmp mov mov (bad) repnz lods pop (bad) or dec test int dec sub rorb pop (bad) test loopne cmp pop or test int3 clc lcall inc inc pusha cmc adcl mov push cltd sub xchg sbb (bad) xlat jo adc pop pop fneni(8087 xor shr mov inc shl mov call pop test mov jae inc out xchg in shrl lock or std push (bad) stc adc lret outsb and pop xchg out out or or add in movsb aad mov adcl push daa nop aaa cmp repnz push xchg sbb aas into repnz test xor lds cwtl popf jae call imul je inc movsb bound (bad) fstpt push out mov iret (bad) pop pop dec gs ja cmp mov aam sub mov cmp and stos add pop popa cmpsb adc pop (bad) iret mov mov aam insb js jl dec icebp xchg iret mov lods pop xchg lcall lret or (bad) sar imul jmp outsl out push pop jne sub jns int mov popa loopne scas (bad) in daa push mov push stos mov xchg or loop in arpl cltd stos cmp fs sub loopew sub lods xchg push ja lret loop cmp enter ds jmp sarl cmpsl xor data16 in jbe mov loopne orl mov cmpl stc lods xchg adc js jmp cs xchg addl push cli mov cli mov cmp or (bad) loopne sub adc push mov inc scas mov or push fwait rcl xor mov (bad) and cmpsl sbb adc sbb test or pusha lret ror xchg pop lds pop in ret push frstor push jno sarl movsb sbb inc cltd arpl mov dec push sti cmpsl xlat lcall int3 xchg push (bad) cwtl dec (bad) sbb fimul xchg or xor mov faddl int3 xchg inc addr16 mov (bad) dec pop int3 (bad) cld js sub mov rorb or cmp out and roll mov repz jae loope sub hlt cmp mov xor scas cmpsl xor and (bad) shll xor push shll rolb mov mov mov mov loop or pop (bad) xor and push cmp fs mov pushf jp jle pop fdivr mov mov mov sbb xor push xor test or (bad) or mov ljmp and lret dec fidivrl int shlb nop int ljmp lret ret pop icebp mov xor push sbbb mov ret (bad) pusha ds in push add mov jnp push test dec mov bound cmp test cs popa fcmovne out in in ds inc mov and push (bad) out popa decl push imul xchg lds clc pop into mov fiadd pushf lret clc cwtl sub mov test testl sub cmp or adc (bad) mov loope cmpsb inc pop and scas and out lea mov pusha dec das lds sub adc mov mov test push adc mov mov inc pop xchg jno pushf and mov int pop in mov xor sub or mov jge sub mov mov xchg fimul inc aas cmp lods adc inc clc imul mov jmp inc repz dec xchg loope or mov mov dec dec xor sub nop into dec xor fwait pusha push xchg xor (bad) shl ljmp dec pop pop add pop push aaa leave js ret or rcl fwait jne nop repz out out sub imul dec outsb cmpsl push les std jns sbbl mov test xorb sub push add scas sbb jne mov sbb aam cltd enter sub ret push outsl mov sub lcall dec rcr sbb mov into lock scas ret ret fimull mov call (bad) pop ljmp popa and lcall icebp ss icebp ds mov jmp add movl scas dec rcl dec adc sbb xchg push into lcall fbld clc int3 sbb xchg fldt insb stos mov add ret das adc mov lret lret insb xchg scas and enter xchg popf test shl sub das pop andl push jecxz push pushf jne cmpsl in mov imul loope popf or int sbb (bad) dec adcl les jp sub aaa jo dec insb dec incl cwtl pop (bad) aas bound rcll (bad) push add dec mov or jae cmp (bad) cmp (bad) lcall jo jne,pt adc and into inc aas decl imulb mov dec xorl lahf (bad) xchg lock dec mov fstl xchg add cmp test icebp lea inc mov in ffree or gs jle ja ret mov jbe xor adc decb adc sub clc sub pop shrl fdivs mov dec xchg push or les pop inc test fsts dec test push push push sbbl js in sahf shrl push jmp sub repnz stos cmovg dec xlat fisubr push or mov mov aas cmc (bad) scas imul dec pop pop xchg xor jl jo fidivr daa or cli (bad) adc mov notb sbb mov lret test pushf fidivl shlb mov jmp outsb ret daa test (bad) out jae add call loop mov cmp xchg and cmp loopne push int adc xchg mov sub mov add (bad) jne js ja test xchg movsb mov push scas cld add xchg and lock pop loope sarl xchg out imul push popf mov movsb push jnp cmp push jp outsb sbb aaa push dec mov test push xor xchg adc jbe (bad) jne mov nop jae sbb jl sub fild int cmp sti fiadd leave push sbb (bad) int3 inc cmp xchg pop out insl and test arpl bound popa xor movsl push in or arpl ja or js cwtl cmp fwait mov fcompl jb pavgb mov xchg mov mov adc bound fldt mov cwtl adc mov std xchg or pop out out or push test inc imul arpl push pop imul int or dec sbb lret pop and push ficompl xchg outsl xchg mov xlat lock mov arpl mov adc mov lcall call xchg (bad) ljmp aaa rol xor lahf sbb mov subl pop mov jno lods pop xchg mov jnp js push mov add aaa mov hlt xor adc mov mov mov ret sub cmp (bad) add aad dec jns or jg aaa cld fsubl cwtl pop mov das je and outsl aas lods jo push fcmovbe sti imul inc jnp,pn data16 xchg sub (bad) lahf jne std and stc popa lcall mov mov pop mov and inc sbb decb add pushf repnz mov cmp mov push fstpl xor (bad) cmp xchg (bad) mov enter imul push ret cltd pusha sbb clc outsl sahf cmp and mov daa push loop push lock xlat scas ficomp gs sub cmp outsl jnp inc push pop pop mov (bad) sete les test lcall xor mov sbb pop rol and lea lods hlt xchg add mov cld cmp (bad) push out dec xor fistpll int3 popa jo xor rorb iret and and (bad) cld sbb dec (bad) lret std ret mov mov jge push setl cmp pushl push (bad) stos jmp mov add cmc popf dec stos adc addr16 jge out dec imull and xchg dec int nop (bad) aas sti ss imul adc bound push lret mov jo inc push sub (bad) mov arpl inc in xchg cmpsl sub inc ja popa bound ja fdivrs mov shll push into push jg cmc stos fstp clc and xor dec stos bound (bad) xor int cltd cwtl ja paddd loope or add in inc cmpsb mov insb call xchg in pusha loop dec mov outsb jge jnp mov jp nop stos scas push jae xchg cmc (bad) cli (bad) lods inc aam jg movsb shrb mov push outsb test mov or cmpsl (bad) pop cmp jge outsl dec inc insb or mov cld and jae fldcw cmp fistl sub stos out (bad) jg test pop repz andl push or (bad) jno add frstor sbb aad (bad) jb cmpsb add and inc mov loopne outsb xchg icebp pop mov lds int outsl push pop xchg and jmp push das xchg inc jg xchg into nop lcall sbb ret mov push lcall imul ret lahf fwait adc outsb loope and pop ret pop ds cmp cwtl jbe inc pop adc iret (bad) pop or xor int3 (bad) notl xor mov repz add jo notl add lds es fwait outsl push insl sbb inc es xchg xor mov dec jg and dec aam roll or sti sbb dec aas mov dec daa inc pop mov ljmp mov mov mov sub jnp sti fadd inc jl mov pop movsl fidivrl les push xor movsl shl sbb mov outsl js imulb shlb arpl fisttp cmp jae fisttp je dec out ret sbb pop repz jecxz data16 fcmovne leave sbb fnstenv dec in test xchg in jmp jae dec dec adc in push dec inc or fidivl push imul mov and mov fwait std outsl sub xchg das shrl test lcall fiadd in jle ret push sub push inc call cmp mov mov fnstenv jbe (bad) fwait xchg popl mov adc into xchg mov cmpb loope sub mov adc cwtl cmc add pop jg sbb xlat repz negl pop repnz pop test jecxz cmp mov mov sbb (bad) stc xchg outsb adc outsl add leave testl test lahf dec push jl adc jnp cmp push jns scas sub lds ja jg xlat xor push sub jne inc into fwait dec pop mov pusha outsl mov mov cli mov add test mov xchg push mov sbbl mov sbbb scas cmpsl outsb nop or dec jp movsl lret mov pop sarb das dec das pop movd maxps outsb mov fidiv fs and fdivs stc sbb lahf je jge in fmulp leave pop cmp into push jnp scas push int3 cmp jae and inc xchg sub sub pop adc stc and or lock int3 enter add mov lret jbe repz call fs xor hlt jecxz mov cmpsb pusha into and mov movsb cld sub pop pop lds dec jg test dec shll cmp fildl inc jns add mov mov movsb or and add push mov ss aad inc sub popf cmpsl mov inc (bad) test or stc test and cmp adc popf movsl sub (bad) stc ja imul dec aam inc test push ds cmp test pusha mov mov js dec enter stos lods mov scas (bad) dec ret jo stos lcall (bad) out shll pop in scas lods movsl lahf push int or jge cmp (bad) jno mov jo aaa xchg (bad) test lock cltd add scas pop leave mov dec enter rol outsb pop jp aaa sbb (bad) cmp (bad) loope xchg (bad) mov fadd scas in mov pop stos xchg shlb lds int3 push push sarl push out jge test sub js push dec nop loope jb xchg ljmp cltd in inc lcall insb add rolb data16 mov dec shll aas mov insb add fucomi call cbtw out mull scas xor xor cmp lret pusha xor jg xchg ds inc lcall les out insl xor loopne inc and sarl dec ss (bad) out fsubp (bad) int3 cmc sarl mov pop push adc jo call push mov ret cmp imul mov or jecxz loopne cs cmpsb xlat bound aam pop mov cmp sbb jecxz insb sbb mov inc sbb xchg pushf std les lods push int js imul stos dec mov push repz imul out pop cmp cmc xchg daa push in pop addr16 pop xor push je pop and pop into dec ljmp mov adc lock insl icebp into mov push dec fdivs stos cmp pushf pop adc loopne pop mov leave add mov sub dec inc push lods mov mov xchg xchg xchg out icebp add fs out push stos cli and imul jo pop mov dec imul cmp div xchg (bad) ss dec inc sub adc out xchg je adc dec jp ret or dec aad in aam mov xchg popf enter push scas push and clc or rcr pmaxsw mov out outsb das cli fldt sub xchg (bad) ds pop sahf push pop mov lret pop jno pop inc sub (bad) imul mov into mov cmpsl cmpsl cld jg xchg mov ds mov lds rorb cmp pop leave sub pop mov lods (bad) mov adc test mov sbb xor repz idiv sbb icebp (bad) mov mov cld addr16 (bad) mov push insl lods mov inc xchg nop iret inc insb fisubl (bad) push inc adc dec js cwtl mov mov lods cmp fsubr inc ja (bad) adc je mov pop in jge stos mov std ja fs mov inc push andb cmp test (bad) testb mov mov rol es test push fwait sti xchg jbe loopne mov or mov into cmp lahf mov ja xor push xchg xor daa out (bad) daa push scas std mov push das jp sbb std jg cs and mov (bad) pop sarb enter pop xor out call outsb cld sarl xchg movl xor mov (bad) xchg sahf and cmp add jns aam push dec loope jnp cmp xchg (bad) mov data16 hlt (bad) fisttpl popf pop cmp mov int3 xor xchg sub push push lahf jbe mov pushf out cmpsl int3 nop mov leave mov insb ja pop lret inc fstpl jl xchg ds adc leave fcmovnb out push add or cmp out or pushf frstor sub jecxz pop and lcall popa cli xlat mov daa sbb mov and arpl cwtl or or cmp and or mov xchg mov lahf popf sbb pop xor mov movsb addl popf sbb jnp pop dec loope or sub es (bad) repnz push jle adc pop dec mov pushl stos das add out push add push sub cmpsl cmpsb inc add aas xor (bad) cwtl aaa sub adc jnp push out pusha inc stos push adc nop leave xchg hlt les movsb setns ja repz (bad) mov test xor sti cwtl xchg (bad) sbb fnstenv sbb call and push cltd pop jecxz ja ja xorl pop add push aad jg les adc ja dec mov push subb sub pop iret ljmp inc dec pop jnp xchg ret (bad) cwtl pop jne repnz mov test bound pop mov add outsb aas push ljmp inc ja xchg xchg mov add xor fmull loope and aaa or test sahf je dec (bad) fdivrl (bad) push (bad) dec sbbl pop mov aam in sub mull mov mov ror in ss push pop xor xchg adc rcrl jp rcrl pop adc or fstp inc adc leave mov push lds out fs jl fisubl and mov add push sub fadds lret mov sbb rcrb jl dec loopne into sub imul cmp inc (bad) addr16 fwait push and out es (bad) int3 dec aaa jo xchg mov (bad) xor or (bad) loop push pop mov scas or leave xchg sti addr16 push sbb pop shrb test ret jle push dec or dec mov mov xchg ud2 pop mov xor mov push das sti notb sbb push scas sahf and push push nop adc gs push addr16 test stos sti adc ret adc mov xor aas mov dec or rolb xlat aaa imul out add xor pop mov je pop dec sub push bound shr xlat jmp popf clc mov mov fsubrs insb and lret adc jne cmp loope loopne fs adc dec cmp jne pop pop fstpl and sbb xor lret sbb mov inc xor inc clc std mov xor nop xchg mov dec cmp popa pop (bad) and mov movsl ds push les mov sarl in testl mov inc mov lods jg sbb cmpsb test out cmp stos int3 adc adc outsb sti arpl icebp out pop cmc push and adc movsb push mov pop (bad) lea cli or adc mov cltd push dec cmpsl fld add pop xor loopne into sarl mov jg xor inc sbb pop mov test jge and lea add out (bad) int rcrb push fisttpll dec scas cmpsb or imul inc pop adc push rol lea dec loopne pop loop fdivs xchg mov rolb mov and fld addr16 jecxz dec pop es test xor jb mov or (bad) or sbb lods (bad) xor push (bad) lahf fcomp cmp xor test popa std enter push pushf rcrl xchg sub or addr16 mov sbb ja add int3 pmuludq inc cmp lret imul sbb xchg push jge scas pop icebp push and fldenv pop push aad (bad) jnp xlat sub outsb leave xor mov dec cs xlat add fwait aam push inc loopne or loope jae and mov imul push add xchg pop mov xor (bad) fwait lock cmpb (bad) mov (bad) repnz push and enter hlt test mov adc inc mov (bad) js mov jl pusha adc gs push mov sub stc lods and pop sub inc (bad) jp ss in lods mov out pushf fsubl cmpxchg add lea aad jno sub shll sar cmpsl jne sahf jne sbb lcall lods inc fidiv ret xlat cs lock shlb pop test sbb (bad) nop pop jne test popa pop or andl rcll mov iret push pushl cmp mov repnz cmp mov xchg mov lcall scas hlt or sub inc inc cltd pusha push mov ljmp push rolb lret or add fwait cwtl or fldcw lods lret out addr16 and adcb aaa mov scas sub repnz cwtl out or cmp mov dec mov inc push xchg imul cltd ret arpl das repz pop ret inc int3 mov dec dec push xor pop xor push xchg ficomp xlat sbb jg (bad) les jb xchg cli fdivr xor xor test aam mov frstor popf pop xor or bound push insb mov out fisubrl cmp pop xorb shrl popa push or imul stos inc pop jmp cmp adc and fwait dec mov mov (bad) cli enter call in inc (bad) iret jnp add and xor jo notl mov cmp int pop inc inc or dec (bad) sbb add int fwait mov jbe pop dec and sub rcl jo jnp dec xor jo in sub xchg jbe or mov sahf mov mov push ffree cs push (bad) xor mov cltd ror xorl mov aam sbb jmp daa pop mov enter pop je and push push push js push jns xadd stc fdiv sbb cmc jb dec clc ljmp je pop adc aam outsl cmc loope mov inc fcompl cmpxchg mov push lods (bad) mov xor xor mov jmp jmp imull add xor dec push bound xor movsl push test jne (bad) test mov in fnstenv out pop or pop sarb rcrb fiadd insl ficom iret pop sbb mov in mov repz (bad) in jg lret cs mov mov popf fadds push pop push cs clc inc aam out dec mov dec (bad) and sar jge cs cs xchg loop test mov inc jmp xchg sub sbb push mov sbb cwtl test adc call sbb sbb lret cmpsl lds lcall mov in and (bad) dec lahf xchg push pop dec inc and inc insb ret leave ret js loopne push int3 xchg and pop in rclb xchg int3 mov sub mov add mov cmp cmp les sbb sub pop out jnp orl lcall insb daa clc jno lods inc (bad) fist jle xor xchg xchg dec jne mov push inc jge push dec adc outsl lahf jnp cmc mov (bad) fnsave xchg lds or sub push sub movsl xchg mov sbb and sbb nop movsb push popa dec iret xchg fistpl (bad) jnp pushf mov sarl lahf sbb clc fnop pop add mov mov push stos cmp lds lahf scas aam cs fist popf (bad) xor pop adc int3 pop rorb push in mov insl pop cmc pusha and adc and dec rcrb (bad) inc aaa fistpl or pop mov jp or icebp cmc mov sub rcl mov xchg sarl push pop jbe add adc mov gs fwait pop mov test dec (bad) mov xchg iret mov fs mov lret mov popf repz mov xchg pop out loopne and cli das ljmp subw movsb inc das xchg push outsl mov or mov mov push add es das cs fimul popl pop inc dec xor mov popa data16 int3 pop fsubrl les add call addr16 clc pop pop inc jnp adc sub mov add jb pop pop xor add movsl outsb dec fmuls jmp popa lds xor in jno adc cmp out dec add mov out add push jge or sbbl mov and mov jno cltd cld hlt inc fbstp xlat je in iret and sbb mov mov dec mov jg das mov pop std xor push jmp adc mov fwait loopne push bound repnz mov vpmuludq gs test test sbb movsl (bad) sub faddl add add mov mov pop dec pop mov sbb mov mov into xchg rcl mov add ds js or out aas in sub inc (bad) and rcll cmp push shl mov pop cwtl aam (bad) cmp jne ret and fs sar xor insl sbb adc inc in or out stos repz xchg mov dec es add add icebp fmuls mov sbb add insl pop scas insb in loope in loope mov mov loope insb fisttpll ss jecxz lods pop xchg rolb push sbb or add jg out stos and aaa je fidiv stos int3 push arpl push or in xchg enter icebp pop or adc sbb mov lds loope sub add lds mov jmp out hlt mov jns jnp jnp add aaa loope fsubs pushf lea bound push xor xchg daa add adc imul pop mov ret lret jno rcll data16 xorl xchg bnd icebp push add pusha jo xchg dec retw bound test xorl sub jg mov cmp dec jge cltd push push inc mov dec nop sbb popa jae jl lods jp pop mov (bad) xchg mov mov ds xor in and inc dec popa aad adc jle pop popa mov aam push jne or lcall bound outsl push insb sarl mov lods pop cmpsl test gs mov ljmp or pop jno xchg arpl mov mov push adc xlat push insl dec or leave movsb sbb pop aam dec movb dec pop lods fs cmpsl inc jo es add xor lcall cld xorb sbb mov ret sbb (bad) decl xor xchg mov jbe test sbb aaa imul inc adc xor and push repnz fidivrl and cltd aad mov jl int sbb jge jnp movb dec daa cmp jge jg imul mov shlb mov cs cwtl std pop xchg insb stos aad loope mov (bad) outsl popl inc mov adc mov jno jge sub mov ljmp jl inc or add movsl cmpsl dec outsl and dec dec clc dec add pushl sbb shlb rorl xor mov lea loop,pn sub (bad) out mov fdivrp inc aam jae hlt lcall arpl fsubl lahf xchg ds or fwait mov jb fidivl jb jne out or or int in or jge mov or dec lret adc xor or cmp out mov iret (bad) sarl mov xor sbb ret ljmp je mov mov fildll mov add inc (bad) jl dec push rcr (bad) std dec (bad) hlt leave mov movl gs cmc ficoml call inc xor or xor mov fdivrp pop mov popf gs int mov movsb (bad) xchg rcrb xor adc lods mov and ss and mov mov xchg in xchg test hlt out jle pop adc dec pushl push mov fldenvs mov fisttp (bad) cmp and xor sub push iret (bad) aad sbb lds (bad) imul jo jae mov xchg push popf mov inc decl ss fwait std xor (bad) dec push insb lods je push xchg dec push lret int mov or dec loope mov xor repnz cmp outsl das mov ret rorb es (bad) icebp pop cmp mov addr16 fisubrl dec adc js ret subl roll loopne insb pop call jmp and and incb inc pop jns fildll pusha dec xor out daa add push les mov outsl mov cld push stc add lret imul pop aam inc jmp inc cmp mov std stc dec mov or add ret fidivrl push pop outsb shrl pop mov ljmp lahf sbb andb stc inc out testb pop cmp add sbb lret fisttpl scas rolb push shrl and arpl int dec and mov and mov add incl dec ficom cli lods mov ja fbstp call lret loop test push iret stos sarb movsl mov and mov xchg mov sti jg pop jbe cli jecxz inc aas stc mov pop imul mov push bound int jae dec pop ret xchg fildll sub push dec pop jmp sar loop fistp inc mov jo fcomps cmpsb inc sbb jne jecxz test cli or jb xor into clc cmp sub hlt test jge frstor cmpsb xor (bad) daa mov push push add or mov in data16 xlat push mov xchg or arpl mov pushf lods and jl jecxz lods pushl pop clc (bad) jb ja jmp in jb cli test dec ss cmp vorps add and les xor movsb scas dec pusha cli rcrb test mov icebp orb jne cmc inc insb mov adc fdivrs inc or dec adc push push lea aas (bad) setl jle lcall dec xchg cltd fldt inc ds sub (bad) xor aas fs xchg pop xchg (bad) hlt out jo sbb fcomps lods inc push bnd fmul or sub sti lar xlat outsl mov subl mov lret push dec shrl jno subl mov cwtl sahf aad dec mov and lods add sbb (bad) mov and (bad) jecxz xchg inc xor xchg add test mov push (bad) add xor and cmp adc icebp adc aas repnz ljmp add (bad) (bad) mov outsb pop push arpl lods mov movsl push lock sub hlt dec lds lock or jmp dec dec inc push mov adc adc test or icebp sub cmp (bad) xor xchg fsub adcl and sbb insb dec inc cltd mov cmpb out insb push fidiv addr16 lock pop ja dec xor mov inc xchg cmc incl pop ret fsubrl pop out inc cmpsl pop cs pop mov ljmp inc aaa push outsb pop movq fwait leave push das xor dec sub mov jb xchg scas jbe cmp sub xchg pop mov repnz pop push cld stos xor fsubrs fiadd add int ss je mov daa cld mov mov push pop addb lret gs mov mov es inc stc xchg adc xchg test jne mov xchg mov stos or xor pop jg push pop std outsl pushf sbb mov mov dec jno in loope std jp or push mov (bad) and or mov push cs (bad) or sbb mov (bad) mov mov sbb fistp sbb xchg adc sbb jmp push inc (bad) out cld mov pop sbbl test and out sbb fcmovnbe repnz adc push inc shrb dec or imul popf sbb pop dec mov dec cwtl sbb push (bad) inc add mov push cli mov stos xlat mov push fidivrl mov xor and mov jnp pop or std cmp ja xchg inc test cmp xor cld lret cld pop xor ret ss (bad) popa dec int cmpsb fwait sub (bad) mov mov cmp cmp lds popa adc dec xchg add bound mov and jbe in add int3 dec and mov or pop test cmp nop xchg push or dec pop testb not sub push xchg setle int adc jo sub add mov mov dec fcoml cmp lret pop xchg int xor jnp sbb jmp jb mov (bad) dec inc mov lret jecxz push adc mov insb dec pmuludq mov or pop add sbb lods mov cltd lahf jmp ret xchg inc cmpl out stos shrl add push xchg js cmp sub mov sbb stos push jecxz cwtl lret es in or cmp mov test mov sub adc push fidiv lahf mov mov xchg sbb push enter xor add inc (bad) pusha push lds or cmp xchg ja rcl sbb movsb inc cmp aas sbb imul outsl fldenv ja push adc mov nop aam les and iret loopne pop fadds (bad) cmp divl jb sbb mov sub stos jae js nop data16 stc push pusha dec xchg cli or insb mov xor cli dec mov outsl and mov lret call fidivl stc es mov fwait adc lds std and cwtl enter sarb call push mov sub es imul (bad) fs jmp dec mov inc pshufw pusha out jl nop inc dec adc clc or les (bad) into movsl mov push pushf add inc jge int3 fdiv je,pt push or push out adc cmpsb fidivrl and mov rolb xchg orl and adc dec repz dec sbb (bad) ja mov push dec out mov xor mov jb push ret sub lret loope jecxz fucomip lods inc cmpsb lods insb mov sub pushf ret dec mov pop jl enter shr and je scas dec int3 mov push sbb out jb scas jmp mov mov out outsb fistp cld in test scas jle jno insb xor (bad) enter (bad) inc lahf push notb dec adc dec mov lret lcall out out push inc scas inc movsl sub fdivr mov mov add push aaa mov adc stos xchg dec ds cmp loopne xchg test pop gs pushf stos rcrl (bad) cmp aam and mov push fucomi ds dec lea push mov ret push ret xchg add and dec lods idivb test cli dec inc dec fdiv icebp xchg adc test aad xor mov xor inc sbb mov push call adc ljmp or sub pop jnp std jg xor dec iret subl lock jmp mov mov or and outsl icebp jg and out icebp push fsts cmpb xor push mov int fstl or mov repz test pop mov push pop add push cli enter int3 movsl jg ficompl std mov sub xchg sar rol jns mov and in lret inc sbb lret rolb call ds and inc hlt rcrb aad mov xchg lret and pop mov push scas int3 mov ret xor outsb inc mov outsl in sub jmp adc sub loop loopne enter mov dec or mov xor addl push in cmp mov out int3 sahf arpl (bad) imul test push mov aaa jge mov and xchg fstps js pop mov push mov cmp lret cld sbb enter scas cmp jg jp scas movsl mov pop stos les (bad) ss int3 jbe mov in mov xacquire sub add dec push dec inc push jl cmp inc mov xchg pop pop ja inc je imul fistpll jecxz call jmp lock daa movsl mov lcall sub pop adc mov test iret mov imul prefetcht0 pusha add xchg stos daa jnp in mov mov pop cld adc pop lahf iret sbb jno pop lcall in push movsl cmp push movsb daa add fistpll or push popa movsb mov sbb sahf and mov aaa loopne xchg cmp dec out bound mov push (bad) lods sub das pushf jnp in popw ljmp out jne leave sarb iret sahf push pop data16 lahf out lods pop aam inc rclb mov lahf xor arpl mov clc lods int faddl dec lods int faddl jl jp inc cmp (bad) loopne jns stos test adc out je movsb (bad) adc push dec mov inc in rcl mov jb fs imul push inc out add lahf movsb ret loop mov mov cwtl addr16 js push xchg pop jo out mov adc or in enter push push lret pop ja movups xchg adc aam les imul jns add jbe dec clc popa jbe jb ds adc pop push fildll out aas (bad) stos pop ret iret sbb push mov mov and push (bad) jae cmc clc dec lret add inc sahf addr16 dec xchg sahf jle mov cs xor jnp xchg dec lahf call dec (bad) xchg xchg mov fdivrs push imul add add lcall in push jecxz cmp imull jg adc sarl push in xor sbbl dec pop and mov insl movsl outsl jnp outsb pop xor sub jnp xor xor enter stc pop cmpsb xchg (bad) pop dec bswap imul sarb mov mov lds adc outsl add movsl bound inc adc inc stos jl mov xlat cmp ss loope inc sbb push pop push push mov pop mov gs (bad) (bad) sbb adc (bad) lret add dec mov mov xchg stos pusha daa adc adc xlat imul cs (bad) test iret ret bound sbb push add je and sarl rclb push push in insl cmp mov fwait (bad) repz repz cmp test jmp lret inc push sahf test imul cmp int (bad) int les or inc push push jecxz testb mov or in push mov in repz (bad) aam jecxz inc enter popf mov cs aam fimul or jle mov fcomp mulb fisub sbb js adc sbb mov push inc pop nop fidivl pop pop push pop insb or sbb in push in popf (bad) fmul scas in addl pusha gs push sarb jp mov push cwtl pop or inc lcall push (bad) mov loope pusha (bad) cli je data16 int jge shrb bound (bad) imull mov dec mov std or sahf mov call loopne sbb ja adc lods hlt imul popf hlt xlat scas imul (bad) pushf xchg fsubs sub stos push cmpsb adc and xchg dec ja das popa cmp clc xor enter add pop xchg inc mov rcrl and mov adc into ljmp gs je dec xchg or cmp lahf mov cli das dec inc cmpb rep mov es clc push shl adc cmp mov ds xor push int outsb adc loop jae or pop mov xor fdivl lods rcrb mov mov add mov outsb cmp pop push call fadds jb ret pop mov push jae sub call ret add jl mov cmpsl ds (bad) mov call add push jle lods or and outsb adc push or cmpsb pop or xor mov jmp cltd xchg lea pop xchg or (bad) dec xchg adc pand or dec cli sahf jge loopne add sbb jl ret fildll pop cltd jecxz mov or lock push movsb xor pop pop aaa cmc push push mov (bad) (bad) sub leave jg aad loopne xor stos in loop mov out sub stos call aas pop lret dec adc jns mov jb cmpsw and mov pop or pop mull cmp fnstsw mov sub icebp in or lods mov mov sarl inc lret mov xchg cld repnz repz test mov ja sub cld inc (bad) rolb dec jo pop stos stos stos icebp pushf pop and lret (bad) js jg test mov or push xchg add ljmp push lahf push pop inc sbb push push ret pop in mov dec jo xchg mov mov or into adc imul dec jne push cmpb jmp in cmp cltd sub popa sub iret or std test mov pop jne push dec xchg or inc sub rorl jo iret push movsb dec (bad) in mov cs jge add jecxz xchg js loop popf cmp xchg mov out inc insl and pusha xchg mov lods stc pop (bad) (bad) mov inc xlat pop adc cmp ds into adc pop clc jle das rep add mov xchg push je or dec ds mov mov fildl pop sbb and rolb xchg scas pop ret std stos std loop pop mov stos cmpsb dec jne pushf xor rorb push push fimul sbb mov sbb mov and inc dec ret scas xchg bound das push ficompl (bad) sti cmc add rcrl mov out testb jno lahf movsb push pop push xchg aam add call out cs pop jmp mov sub out (bad) mov ret mov lahf sbb aaa out inc or add mov scas scas cli dec fistpll push mov mov stos cmc pushf ret subl push ja andl push mov fsubrl loopne (bad) mov sbb into movsb xchg mov lret movsb or repz lock xchg lds das sbb mov mov je push push (bad) pushf es dec or inc xor cmp mov add sbb dec aam push fldcw addl int3 fldcw xor add outsl ja mov jnp (bad) lcall repz (bad) sbb inc int push cmc sub gs in das sbb sub aaa bound inc pop test cmp xor inc ds rorl sub and int3 mov movsl ret lret mov or dec push sub or stc dec out xchg (bad) sarb (bad) adc sub out pop in rcrb pop xorl jb or push rcrb dec fcmovnu add xorb adc cld (bad) fadd mov imulb fildll movsb mov je pusha hlt fiaddl popf lds addl push outsl pop out xchg and mov sub cmp rorl jb mov push in loope pop ficompl fwait aam ret lret pop vfmsub213ss pop xchg shl push sahf xchg mov mov popf stc inc sbb dec inc sarl subl aaa add cmp mov jp jecxz jmp ja movsb lret fistp scas sub pop and stos aad jl call push push stos mov mov mov loop push mov (bad) sub sub xchg jmp sbb sbb lods jp popa loope loopne cmpsb jl das sti (bad) bound sbb leave rcll or rclb sub sti xchg pushf inc adc sahf dec and pop in xor xor loope in lea and lcall sub xchg lret mov rcrl add adc mov jne xchg loop mov rclb dec dec flds negl push or stos dec push mov fsubrl dec xor xchg cmova mov xor out cmp andb cmpsl out xor lea cs jnp or and imul adc shll pushf negb push clc xor movsb mov adc cld mov jecxz sub sub das stos jg rcrb push lea cwtl sbb aaa and cli outsb jp lods cs xchg jns cmpsb cmpl mov push xchg cmpsl pop dec dec push jo mov dec cmpsb inc sub loopne (bad) insb inc (bad) xor inc jmp push out leave ret pop jecxz loop daa addr16 dec loopne jo in stc push in add jecxz add and int3 iret arpl push lea and rcrb rclb lret rcrb or sub test cmpsb nop stos mov jle insb rcrb dec lret lahf in pop pop add mov (bad) sub ss mov flds cmp pop (bad) pcmpeqd or pop sbb hlt push jns xchg or outsl pop cli mov into jae imul push clc fdivr fs das jmp jge es test decb dec sub flds mov clc mov in sbb xor decl sbb inc pop and lds pop xor jecxz repz push mov inc lock (bad) enter xlat outsl inc inc jp jne sbb jno push inc mov mov or or loopne adc arpl pop lcall xchg ljmp adc aad xchg sbb imul stos sub mov push rcl fsubp cmp int int3 test int lods in fisttp in sbb dec pop sarl gs faddl jp mul mov repz mov push jp or aaa outsb lds sub sub aas repnz add enter inc lahf aas hlt in repnz jno imul jp mov mov inc add sub cmpsb cmp jp pop pop mov pop sub push mov mov mov cli repz mov repz xor add nop pop andl sub movsb jl adc jo movb mov push push mov repz pop andl pop fimull (bad) xor dec adc stos adc fidiv pop fsubr cwtl jno stc lea sub or and sub lea fisttp fisubr jl jne sarb fiaddl bound mov sub movsbl cmp mov jno in dec mov inc scas cmp jnp gs stc add sub adc dec inc xchg iret xchg mov mov mov pop or aad and sub (bad) outsb int3 jno cmp jns add xor push ret bound cmp pop and scas cmp jnp lahf cmp jnp mov xor andl sbb sub mov pop cmpsb adc repz xlat mov int push int3 fstpt adc dec outsl pushf fild fsub xor mov xbegin dec xor xchg push pop clc xor sti movsb jbe (bad) cmp pop ljmp mov or and and pop cmc lahf mov mov adc adc adc sti and jmp mov push (bad) pop repnz sbb (bad) (bad) mov adc sti stos inc and mov adc adc outsl jne mov mov mov ja out adc jp cmpsl jb test cli push jle int dec pop testb pusha aam in in mov test push jmp cmpsb add push test inc push xchg adc clc int3 (bad) xor jae xchg pop pushf sbb adc nop cltd cwtl jb add je out repz or xor inc push and mov xor adc adc std jmp push out es pop dec outsb loope xchg dec out mov ss int xchg mov sahf pop mov adc cmp mov sub shlb lods mov pushw (bad) cltd enter leave cmp cwtl jl cmp arpl xor aaa jmp outsb pop jl (bad) daa leave (bad) in (bad) mov lods mov sarb or add xor loopne test sti and jl mov out gs mov cmp cmc pop push adc out xor mov mov add sub cmp lret addb gs lds leave cmp lret int xor movsb sbb lea iret xor adc outsl stos daa inc mov into xchg add fwait or out push jbe or and insl (bad) int3 add lds call pop pop push pop rdtsc test inc add or cmp es ret stc mov mov sbb jno xlat sub lds out or fiadd imul inc add dec xchg inc insb push icebp test int data16 data16 push in sbb inc and cmp iret sbb (bad) fist divl push cli adc jb or cld pop xchg mov ror arpl lods hlt and lods pop aaa out test mov dec hlt pushf hlt sub xchg push addb sbb loope cmp scas pop (bad) mov test cmp rorb and movsb rorb sti (bad) nop sarl and jg mov cmpsb or pushf movsl dec sti mov arpl dec test pop push inc (bad) movsb adc ret sbb daa mov shrl negl push daa jns (bad) fcoml lock cmp push rcr gs adc or clc and pop sti mov xor push movsl dec (bad) adc adc das out and mov xor (bad) jmp ja out loope dec and fmul cmpsb dec mov cltd cmc xchg rorb or mov (bad) xor ret test sbb sbb (bad) ficompl pop push jno lahf dec jl arpl shll pop sub lock nop (bad) in pop js sbb pop arpl insl frstor add mov test mov push xchg jp iret icebp out sahf or jns or push push bound jbe in jnp into outsl andb sbb call mov inc mov cltd jp push repnz inc and movb push mov (bad) dec leave inc fs mov jecxz add xchg (bad) sarb stos pop fiaddl mov sbb ljmp mov fwait int3 sbb outsl les loopne xor adc inc stc popf in clc push test int xor shlb jo cmp sub and mov and ss test add repnz dec (bad) (bad) mov test mov sbb test add adc and (bad) fnstsw pushf mov daa push jmp pushl or push pusha or or das bound mov jbe test insl insl lea or sub or dec popl ljmp nop out cltd fs sahf mov int3 add (bad) lcall push insb scas test dec icebp mov mov jo sbb mov mov add arpl dec lods xchg add jg push xor dec in sub ret repz bswap cmp inc push insl inc xchg les int testb (bad) push mov sti xlat inc jge xchg ret cmp mov out lods jnp lret sub dec inc outsl push ljmp push popf push test insl loope dec fsts pop pushf leave lods dec fldl inc outsb mov les nop mov int3 pop cmc aaa std jae dec pusha mov dec inc and cwtl outsl jecxz in in int3 dec add mov and shr xchg subl in outsb lret mov xchg inc dec ret cmp mov das and xchg xor mov push sub insl aas push data16 add pop les in inc mov mov nop fimull loop mov outsb sbb stc pop adc push pop jle clc or pop addr16 les pop mov mov jecxz sbb pop cmpsb decb cltd adc insb add (bad) mov ret out rcrl mov dec movsb in nop fisubl jg dec push jge loope dec sbb arpl push test push fisttpl pop or push push mov test xchg std pop xchg and popf inc or cltd pop (bad) xchg mov test stc mov xor out pop subl in mov sub clc dec int pop repz sbb jo adc popa dec mov rclb mov pop mov xchg sbb xor das mov fcompp sbb mul jno push pop mov cmp repz in xchg add adc fimul cmpsb out inc mov push dec jo scas jl (bad) and mov shrb ss dec inc mov pop or rcrb lock stos insb jmp sbb loop pop mov jl aad and mov cmp int3 mov loop clc adc aaa push or in push mov imul push stos outsb mov mov aaa mov dec pusha xchg or push sub in mov mov jmp mov cmpsl adc or jg iret cmp test rorl sub mov test fxch aad pushf hlt into idiv lret sarl pusha dec inc dec popa decb rorb xchg lea add sub fiaddl movl inc test mov push shrb es addr16 sbb sbb xor sti pop mov pop lret xor sti adc jae pop dec clc xchg fnstcw shlb adc (bad) mov ficom fadd jmp xor push rcll enter adc mov lods or mov call inc cld jb es popa mov sti mov mov lret in sub xor lods push push mov cs cmp push inc inc dec jge (bad) cld inc mov mov test pop sbb imul stos add adc jae div lret pop pusha pop lock bound lods movsl sub clc and add dec pusha outsl push mov imul loopne dec cmc stos into (bad) cld jo roll xchg lea sub mov add and sbb xor mov out jns loop add movsl mov cmpsl jns pop pop in sub mov lods pop add arpl aas dec adc adc add gs jno add inc push xchg and cmpsb and movsl dec xchg insb dec enter cld rcll xor sbb fldcw mov repnz adc sub mov inc ja sub xor push pop ret rorb mov or or lds (bad) and fldt and stc aas xchg lods pushf cmp jle push cli sbb pop ds fisubr cmpsl mov xchg scas (bad) add sbb push sbb xchg fdivrl lods mov push pop in call lds call or pop hlt (bad) sahf adc dec pop aad lcall rorl out mov stos int3 inc ljmp lock xchg packssdw mov bound push sub mov cld ja push mov jge sbb fwait pop inc xor pusha add shll push inc add or or iret sbbl outsl jg bound (bad) fmull inc xchg mov lods movsb ja inc int or or clc outsb mov dec out (bad) sbbb stc xor jg push mov sbb into cli js hlt test push (bad) fsubl add mov popf push adc lret sbb jne cli subl lock ds scas dec fimul call push cmp cmc rcrb ds jp sub jp aad dec in loopne sar xchg pop fimul (bad) dec or ljmp movb inc sub mov inc pop notl pop jg les fsub addr16 scas clc xchg (bad) lock xor xchg add out les outsl or scas fstpl dec fnstcw sub inc in (bad) sti aaa xchg push fs addl inc add dec mov sub inc popa push jno les imul add lock mov cmpsb or mov repz (bad) adc push and xchg mov js xchg in pop mov or mov sbb pop push stc cmp xchg pop lea mov lods sbb (bad) and sub or repnz daa loop cli pop dec sahf pop dec loope and mov decb mov adc mov sub ja dec cmpsb pop or cmp stos inc fcmovbe sbb bound fnop ret inc scas (bad) ret scas imul xor out movsl bound pminub (bad) xor xchg mov mov jecxz or ret pop cmp adc enter adc (bad) mov and mov fistpll jbe shrl in inc cmp mov adc aas rorl pop ret push test xchg jo cmp iret dec xchg arpl fidivl pop mov mov pop fcomps loope nop in repz lahf or mov jae xor xor cli outsl insl inc outsl push ds loopne out inc popf pop xor xchg cmp add add mov lret hlt pop mov fs jp int add mov leave pop dec xor mov jno into and lret scas call mov sahf out cmc repz xchg mov and mov push or mov mov inc and add je dec in sar dec jecxz inc jno sub fiadd mov cmp dec mov (bad) push sti jns mov lock mov aaa rcll ja lret pop ficompl dec inc std mov sub scas (bad) data16 out cltd cmp cld icebp xlat clc adc add into aad lods and ds pop xor fucomip cmpsl adc cwtl mov mov jecxz pop (bad) or dec dec imul cmpb test push test mov movsl pop mov push lahf xlat ljmp aam cmove nop (bad) cli imul mov (bad) lret int3 jnp sbb push add cmpsl inc cld popa jl xlat push ss pop negl or inc out les jns test add mov cmp xor push fnstcw ja add jge in lods jmp push or cmp mov dec jbe push (bad) mov lds and lds lret cli push (bad) sbb push sub fwait cli dec dec cmpsb icebp mov seta aad push lods pusha push adc pop mov das sub enter push out push jl inc pop jl mov (bad) in dec imul inc inc push adc and fs es test out (bad) je or push inc lock pushf sbb or lods push fldcw ret movsb or daa mov push in or dec mov and lods cmp jo dec push xchg inc fsubs sub repz push ljmp mov sbb (bad) repnz cmp ret jge fiadd out cmpsb movsl push cmc clc cmpsl sbb dec mov sahf mov adc xlat push mov iret (bad) stc or fimul xchg in mov cltd lock (bad) jecxz,pt cli inc push ucomiss mov and or (bad) jnp in sbbb mulb adc fcmovnb or scas ss dec adc les cmp lock or fistpl flds jns mov xlat cwtl mov adc pushf dec inc sub xchg or push inc stos cmpsb push ret into inc mov dec lret xchg subl mov xor sub jl test xor js ss sub nop out dec sti rol fsubrs jo add sub pop push jns,pn jne lds dec (bad) push jl cmp fs and xchg cwtl ficoml (bad) rcr dec in (bad) (bad) rcll add pop pop ss sbb pusha repnz xor cwtl shrl mov (bad) xchg call in mov or sub mov jne addb mov push test ss cmc dec push fimul mov sbb test pop dec sbb add dec sub insb inc push dec inc das (bad) movsl mov xor loope or loope push les inc (bad) lods fs cld push push dec mov and cmc test out pop adc jb notb jle call stos sti (bad) aas jb insl jb (bad) movsb inc int3 push adc mov sbb lret int3 add sub ret (bad) fisubl jnp aad shl lods inc rorb mov mov js inc and les push cmpsl icebp dec xchg push jmp jmp or cli lcall js data16 rolb test and push push dec outsb jecxz cmp cli dec sbb rcrl mov loopne int adc mov xchg popa inc sbb mov fstpl popa inc sub mov aad adc push sbb inc out xor (bad) je insb imul scas movsl aas xchg mov movsl int3 les inc sub mov gs cmc pop adc inc nop push fsubrs lock push or bound ljmp or mov pop xchg insb mov inc mov outsb repnz inc adc cld fimull push jo das jae dec sub mov mov push push cs inc xchg sbb mov stos push mov and rorb dec (bad) jg sub loop (bad) iret xor sub (bad) nop jg scas pop mov push mov jo dec and fistpll add mov inc andb mov js ret xchg (bad) push or mov popf loopne push mov insb cmp fcmovnu les pop jno push jge pop push push cmp dec mov out andl into mull inc xor jecxz push pop mov insb (bad) in push mov std aad pop pop jmp (bad) dec lods add es lea jb fdivrp fistpl pop outsb loop stos test push nop in sub test aaa insl lods (bad) stc imull (bad) xor mov lock int push jp outsb xchg testb mov pushf xchg inc cmp lock or fild xchg or inc cmpsb daa and sub fldl fisub ret push mov mov mov fsubrp les fiadd sub jle rcrb int (bad) mov into push jmp sbb in jge mov icebp pop sar xchg cli enter lods in fs push mov xor cwtl mov lcall movsl out pop push mov sub inc adc fildl test inc call dec in xor or insb in jo outsl add push rolb xor dec (bad) mov cltd mov and lods cmp and pop xchg ljmp js (bad) leave sahf push inc sub in je (bad) sub cmp test pop pop mov dec les pop (bad) add xor ret mov pop mov sub mov pop inc jb fidivl roll inc es roll pop insb mov repnz ret loope out sar inc xor cmc leave mov mov add sarl orl into push jle lock adc insb inc cmc push int3 dec ss pusha rol push out daa in mov icebp iret cmp cltd xor pop xchg pusha cwtl pop ss push mov adc rcll mov jae gs jnp jl popa arpl gs or scas push loope dec imul cmp push stos out adcb movsl inc les (bad) mov insl or add in push or and fistpl sti jno xlat sub stc shld pop xchg inc ds inc jle sbb std or push enter or push adc mov and sub mov (bad) loop jmp call fwait ljmp lods mov mov sub fdivs lods mov dec mov andb mov mov aaa dec faddl pop jnp dec inc test pop repz mov add mov sub insl sub fldenv push sahf mov and sahf iret stc cld xchg in loop shrb call mov leave dec pop push sub dec jl lock rolb lret lcall mov icebp imul (bad) divb adc push lods inc movsl aaa and stos mov mov (bad) push mov push daa aaa jno div movsb fsts pop lret out sarb jecxz shrl das push mov pop (bad) js rcl stos jecxz dec inc mov inc and xchg insb rdpmc jl dec dec pop imul jmp mov adc adc mov roll cmpsl stc (bad) decl pop xor (bad) pop cs hlt stos add ja les mov fmuls hlt lcall aam andl je les dec aad les imul dec mov push or push add out stos stos or sbb push push int das xor mov mov rolb ret imul pop xor inc scas into sub xor in xor mov lret adc adc ja sub cs jge ja mov (bad) rcl adc and and push shr (bad) jo (bad) inc decl leave (bad) lcall adc fisub stos xchg test xlat lcall xor and sbb push js jmp cmpsl sub cmpl arpl stos push (bad) shll push scas dec fs in mov out out cmp clc sub mov xchg hlt xlat mov fcoms add negl push (bad) int3 into dec mov (bad) fiaddl dec rcll add pop jns ret jl adc pop outsl jno inc sub mov es mov sub and mov jmp mov add fisttp sub rorb dec adc xor popf dec jl mov iret mov xor arpl xchg push loop (bad) adc jnp enter add (bad) icebp push cld push mov loop pop xchg xor lret jnp sub (bad) cmp in push cld out adc dec jnp or and jno in roll sub aam out loopne mov mov jne fsubp xchg push add cmp (bad) dec sarb pusha dec insb cmpsl pop fisttp aas dec enter mov jge mov add cli (bad) cmp sbb fidivr lret testl mov (bad) adc aam sahf fucomip cltd or sarb pushf sbbl inc push inc cmpsl add xchg test mov out mov mov mov dec adc lahf fildl push mov or push xor cmp (bad) enter mov mov daa add mov adc es and sub pop out pop mov inc rorb repz jp xor mov xor dec jl (bad) fsub sbb ret ss cmp outsb mov lret and sub jge stos lods mov add pop ret add pop adc mov sub and scas imul and sbb add mov mov loop mov push cmp sbb jb jb repz inc xchg outsl test sbb imul lods (bad) cmpsl cwtl push fwait rolb mov xchg mov sub ret mov fadd outsb mov call jne xor pushf loopw push inc cld stos int and test inc pop dec and insl mov sub rclb pop pop sbb pop or jne (bad) pushl push jl rcrb dec jo fcmovne fdivrl ljmp push iret fsubrl xchg mov outsb push mov pusha jbe (bad) cld adc mov or adc adc mov bound sub mov inc aad arpl jo cmp push fcoms (bad) sub bound adc dec and xlat push orl xchg adc lahf mov dec push xchg sbbb xor scas mov xlat cmpsb subb xorl clc mov cmp insl ficom addr16 inc dec xorl add or jnp xor xchg enter inc mov sahf roll leave cmp pop fistpl es imul iret add jp mov mov inc inc dec cmp cmp mov insl mov xchg inc pop sbb cmpl mov cs pushl pop or outsl rcll into or mov xchg mov and jge and loopne cmc ja cmpsb lret fdiv jmp inc xor ret dec sti inc insl fcmovnu mov cmp arpl mov les out xor jg (bad) sbb and pushl mov (bad) mov mov sub gs dec clc jb leave mov add xor xor mov sbb rorb insb dec mov cmpsl out cltd xchg inc ljmp pop push mov iret cmp stc jnp idiv sub icebp fisubl ljmp or mov rol in pop inc mov push cmp and cmc inc cld push push mov lahf test jge mov (bad) loop push push test mov cmpsl jb push test mov xor int3 adc mov (bad) xor mov mov xchg insb movsl mov push cmp xchg loop jo outsb jge scas aaa and xor or xor or and pop or inc jno pop or jno (bad) or jns fs loop sbb aaa fs jno pop lret bswap add outsl inc les test das pop pop push nop jno test aam dec inc pop out outsl inc in jae aaa xchg dec cmp push xchg jge movsl nop xor (bad) xchg add scas mov xor pop cmp in scas iret sub xchg rclb xchg xchg call addr16 xor cmp push sahf cltd xor loope or in sbb xchg push pop (bad) jo lahf lods xor fisttpl loopne jge adc jle insl stos xchg jg mov sub fbld xlat lcall fisubrl jge xchg aad sub push xchg jge scas pop lods repz pop dec test lods mov fild sbb pop adc xor jp mov fs push xor jae jle out lds repnz jecxz or movsl jp mov fstps sub (bad) (bad) ss ss dec mov mov cld jnp push jecxz xor push dec dec into dec adc lods push int3 fidivrl sahf or repnz outsb xchg inc out repz iret cltd mov xor pop call (bad) aam icebp pop imul lret stos pop pop stos loopne and push rorl and fiadd adc mov add xchg ret enter inc fs lods repnz mov dec repnz je dec xor pusha cmp stos inc fidivl jnp test add pop inc movsl iret ds js mov insl mov jge lea pushf ss lock push sbb fwait std sti jnp push jns push sub cmp movsb jg and inc (bad) dec ss inc in in push aas scas pop arpl mov push sahf aas out or sbb jno sub cs in jle stc es incb add je lock push sysenter stos call xor rcll adc ds mov outsl dec mov dec in lret inc je (bad) lcall adc je lods out fs ror mov aas mov jecxz andl movsb lds sbb xorl rcll fsubrl and xchg ret sub cmp aaa leave mov leave mov leave mov jne jecxz push and cmpsl in and int jle stos iret sbb leave pop mov lods outsb cmp test les cmp adc test xchg (bad) iret jge push dec sbb ret dec mov or enter clc (bad) mov in add dec mov jno add mov ljmp or addr16 or mov scas les out mov cli push sub mov stos jne xchg cmp orl sub sarl lods xor (bad) add jl mov sbb mov mov loopne cwtl mov xchg enter sub or ret fisubl int3 and sub and and pop shrb xor call loopne in dec lock aas pop dec sbb pusha addr16 add sbb scas outsl mov icebp dec push jo mov or jo cmp outsl in mov lods xor mov lret gs mov lret lods mov xor orl dec out or xchg inc add and mov and push in mov (bad) in cmp test pop out fistl sbb mov jns (bad) sbb push movsl fdivs aam out cmp mov sarl xlat sbb cmp xor out mov xchg fistpl xchg xchg xor sbb test sub hlt xorl jbe repnz roll and sbb orl xchg mov inc sub add js push jp test sbb inc cmpsb dec scas (bad) and sbb dec add sarl cwtl dec shl lods test je dec subl xchg add dec js loop fisubrl ror adc push enter loopne hlt adc cmc nop lcall sarl push add sub jb jbe lods (bad) sub sbb jle adc inc je mov adc jbe lret ffree pop jnp mov bound test cmp cvtps2pd pop mov out std gs out fst inc push repz lock push cmpsb xchg add divb xor xorl clc movsl adc adc pushf rolb sub fisubl xchg lea inc xor imul cmp or push sahf sub dec jle cmpsl pop outsl pop stos shl mov push inc sub add sub (bad) mov adc in into cwtl xchg test pop lds fsubr xor insb lds fsubrl stos pushf dec fmul cwtl les jg jns cmp mov test (bad) (bad) std (bad) (bad) adc pushf mov emms iret pop push jl mov sbb into jg pop cmp stc mov mov mov mov cs xor cmp inc or fidivrl fisttpl insl cli fdivrs xchg push cs mov xchg sbb push sbb mov or sti push ja and mov mov mov rcl fisttpl dec inc (bad) cmp orl adc cs rclb addr16 or adc imul xor fwait cmp fldt (bad) popf jae push cmp (bad) adc sub cmpsb fstpl adcb add xchg out dec inc jmp pop jp and shlb pusha inc loope xchg movsl sub xchg jg jge and mov ja mov test je or push push sub shll lock jae sbb jo ljmp daa adc dec or jle in pop mov aas jb (bad) repz mov push imul mov mov ds sbb cwtl mov rorl popf leave js push mov imul cld sbb sbb xchg nop jns ud2 imul test jo inc sub mov xchg mov and test loop mov xor in push sbb (bad) push js lea add iret es sub xlat test (bad) dec fdivrl insb fs popa fwait push loopne xchg add scas (bad) mov out xchg fstpt mov xchg mov rol sub pop jge xor lret and pop cmp sbb sbb xor push adc xor inc add xchg nop add sub fs dec les call ss mov nop xor and pop ds ds mov stc xchg dec into adc stc dec sarl mull sbb sbb mov mov cmp test push or repnz (bad) lcall fmull mov in cmpsl mov test jno adcl pop ja push mov add movsl sbb jno ljmp fcomps push sti stos xorps pop xor scas xor loop xchg outsb mov je pop ret cld aas and sbb into loope in cs jbe das imul rcrb mov movsb xchg stos pop sub call icebp and test push sub adc shrb adc icebp mov push jle,pt jno add xchg and jnp repnz stos into push xor cmp call xchg repz cs mov ret out negb std pop mov adc jae mov loop or loope fidivr aas rorb leave jno lret leave adc shll pop push std inc (bad) movsl mov daa add je jno push out dec pop adc sbbl or inc rcrb dec add push hlt mov pop mov gs and mov (bad) pop sbb push insl repnz addr16 mov outsl inc mov (bad) mov sarl jl aas jbe lcall ja inc mov jnp and (bad) push out test popf and or out int3 cltd mov push cmpsb push jle xor dec pop dec cmc lahf arpl dec xor xor fstpl jg gs loope jae and int3 jae sbb jbe loope adc cwtl popf mov movsl pop das pop lahf pop jae int into pop pushaw adc out aam (bad) (bad) jo mov push push incb icebp jb push add xor push inc cmp (bad) jge push mov mov stc jnp popf cmp lret (bad) push dec push and xchg ss les std cmp loop inc push dec lret pop lret dec xchg insl lret jmp cmp ja sbb push in jb jl je mov xchg mov cmp wrmsr sahf aad sub ss (bad) scas notl jb inc xchg xchg inc pop dec (bad) iret jl in xchg pusha mov out mov jae jno in mov fcmovne pop or or std pop cwtl dec out xor pop sbb or push push dec jecxz cmp cmc test loop lods aaa stc and aaa imul icebp cmpsl cli dec cmpb outsl xchg jo push adc les ja sbb lea xchg add inc jbe call test inc mov xchg mov cmc bnd lret outsb in and jns rcl into dec cmpsl daa push loop add loopne jle cmc lret adcl cmp jb mov mov jg sbb cmp rorl add aas push and mov add dec or mov sub cld leave sbb cmp xor ret cmpb mov outsl and mov sbb jb popa push test mov inc insl push lret sbb mov or lods xor push pop pop sarb inc sbb xor add push mov pop mov (bad) rsqrtps or mov fildll (bad) jo xchg adc push insb sbb lahf or div xchg invd mov mov mov cwtl mov adc cmp scas sub push inc xor jge andl dec mov mov jp out pop mov push xor cs cmp test push cmpsl push aad mov cli lret push mov and (bad) xor push xchg cmp mov insb (bad) out sbb add or add orl fimul mov xchg mov or fisubl outsl or pop lcall and mov xlat je test stos stc cld (bad) or ret adc cmp jnp,pn mov push jmp test sub (bad) rclb adcb (bad) test popa inc push mov bound and mov ficoml rcl cmp or xchg or in lea fidivr fisubl loopne pop jp sbb insb (bad) mov mov mov or scas jb sbb hlt loopne scas repz sbb outsb sub or hlt loop pushf sbb dec cmc sbb mov lds roll jno pushw loop inc mov adc fistpll lret roll adc repnz ja push jmp cmp inc cmc pop jl andb mov popf inc lods (bad) imul popa mov (bad) push sti scas xchg xor jne fstps leave or (bad) test fdivrs ret mov push inc repnz mov xchg adc scas sub adc adc add faddp push xchg jns dec pusha out jg ss clc inc aam pop iret repnz movsb repnz mov push xor lea std outsb inc mov fwait jae jnp sti pop jnp movsl mov je xchg scas outsw inc les mov lret dec xchg cmc pop stc pop mov jbe adc add lret cltd sub dec adcb imul in lcall xchg (bad) mov pop push lret add xchg shrb lahf push or icebp test movsb xchg and insb push popf hlt ficompl test push in pop sub xchg es out lock sub inc test push or pop and inc (bad) jne push loopw insl mov mov imul push mov push mov pop rcr push dec gs cwtl fidivr add insb cmpsb stc jecxz,pt or xor lock mov cs mov scas out mov mov sbb sbb test rolb add in icebp or addr16 jle cmp enter lea popa jno aad in cwtl sub (bad) scas push and popa sbb sub mov nop lock mov dec xchg push aam jmp nop add sub mov cwtl jmp fisttp sub (bad) es jge mov mov xlat and cltd out pushf testl mov (bad) mov mov cmp (bad) sbb test arpl cmc xor and call cmc dec pop fsubrl aas or push lock hlt and jb outsb pusha mov (bad) jb mov mov leave push jg das add dec add jne lret in stos or jmp pop cs xor fistpll les fdivrl out xchg mov std sti sti (bad) pop jmp jae aam arpl dec (bad) scas mov xor aaa dec mov mov out test enter (bad) ror push lods and or pop mov fs movsb xchg add mov cmp rorb lea loopne cmp push inc jns scas dec addr16 ror dec das jo mov push pop mov jnp test and sbb shr pushf cmp xchg cmp inc cld rclb xchg call stos inc pusha and adc mov (bad) addr16 xchg sarl xchg xor int3 adc and mov stos sarb inc out mov sub frstors sbb out (bad) out stos movsb int daa or cmp enter jno pop and in test arpl push cmp add jecxz rol mov sbb pushf mov push jnp xchg mov fildll jae jnp ljmp mov stos popf shrl inc dec jbe js,pt mov (bad) rcl adc sar push subl push (bad) mov cld addl or das arpl sub inc out lret icebp sahf adc mov decb out jl lea rcrb xor mov and sti xchg into pop cmp add mov (bad) in fwait jp sbb sub popf pop dec hlt mov jg ds mov je loop movsl jecxz or cwtl loope xchg lods mov out jbe adc mov hlt repz mov mov sbb cmp fwait (bad) call (bad) notl push sbb push mov push cmp je pop adc cvtdq2ps xor jmp lcall sub adc or arpl cltd out cmpsl les jae test scas pop sarb or aas lahf lret ffreep je xchg sub sub scas mov aad push mov icebp cmc lahf and fnstcw mov cld (bad) daa das inc ret mov jno adc pop add scas rcrb sub rclb mov repz mov sbb lret cwtl inc call mov jp dec test sbb fnsave hlt jb (bad) push fisubl xchg ljmp fnstsw int jbe xchg jns arpl ss adc dec push adc adc leave mov xchg pop jo test mov sbb inc xor test xor popf (bad) sarl xchg jle sub cmp lods pop lret aas xor xchg push idivb dec outsl push sub into daa call inc fdivs ljmp lock adc scas push fsubrs xchg iret lahf ss imul cmp sub (bad) (bad) and pop sbb fnstenv js (bad) mov push shrl mov lret pusha add mov icebp lret adc jmp (bad) mov cmc addr16 ds push int test dec jmp int loopne lahf mov add or pop mov aaa push dec mov xor ret sub sbb addr16 dec push repz mov mov loopne jae cltd dec andl push adc leave mov add sub imul cwtl push pop pop in push lods cmp cs add je push push xor sbb pop movsl inc rcrb popf or out (bad) push fisub sbb hlt inc xor jno out jle cmc (bad) (bad) ljmp sbb sti push aad test int3 pop push movsl (bad) lahf out inc data16 dec lret (bad) dec or ret (bad) mov das push inc ret mov sbb jns cmpsb adc cs mov sbb fucom cmp inc lea push imul (bad) int jnp sarb dec cwtl popa cmc sub jl ret inc lods sub sub sarl imul mov ror fldt aas cli je adc js js push xchg inc pusha sqrtps popa cmp loop cld and jl gs fcomi loop fiadd fwait es or icebp mov mov outsl andl popf jg mov ja sarb or mov mov xchg adc gs pushl inc xor idivl pop fisub test clc orb (bad) add xor dec ret lds fidivr inc mov pop dec mov loope mov imull enter aaa rolb (bad) mov ret push pop pop js out mov sbb fildl lret leave dec pusha bnd sbb packuswb nop mov aam aaa aad cltd data16 pop sbb push negb jg or push cmpsl mov in jne adc in or or lahf sub fnstcw js mov mov push xor adcl ds xchg test mov out icebp sub lret outsb sub sub push sbb and fcmovne in (bad) dec mov das fwait mov mov lret leave push sub xchg pop inc or dec sub cmp lahf mov repz lcall add sbbb push sti imul jmp daa jae subl jge add popf sbb aad in push aas movsl inc xchg mov fnstenv pop cmp push daa or mov or and aam inc push out arpl lcall lods jp pushf xor mov xor cmp xchg sahf push outsl and out mov sbb xchg push sub push cli ret out icebp mov into pop aam or cs aaa inc arpl into mov lret jb xchg jo outsb (bad) jb iret out push jp int3 xchg push fmul adc subb dec mov dec popa out adc daa push add mov jmp je xchg ds add bound outsb leave orl pop data16 stos pop mov daa fbstp sbb aam (bad) cli dec pop outsb (bad) pop in add cmpsb mov cmp mov adc jno adcl mov xor sarl pop outsb insl sbb cld xchg gs les aaa adc mov daa cld xchg or fwait out mov repnz out dec icebp push adc mov call jnp (bad) in ja cwtl sub sbb inc js push shll cmp aam cs nop pop mov ss out pusha xchg scas pop dec add data16 sub mov pushf insl push adc jecxz fs lea sub lds insb je mov cmp inc push adc push bound divb xchg imul in add and jnp sbb push out popa sub aaa sbb mov sbb xchg mov test loopne fistp ja pusha rcrl mov outsl jp sub mov cmp andl fidivrl out mov test mov lock inc lahf shlb sub (bad) out inc (bad) in sahf mov lock cli cmp std popf cmp lock vhaddpd add in ljmp or pop pop push add rcrb lcall xchg lods (bad) cmp sub lret inc and mov fcmovnu push sbb out arpl lcall jbe ret idiv clc (bad) in push adc pop outsb cld xchg dec xchg jbe lret sub and or push movl add dec sub lret loop sbb or fidivl pop ret cmpsb pop aaa push sub mov xor jb lock ffree push jp push lods add arpl mov lods bound repnz dec gs push int mov sub mov ds pushf mov cmc mov cmp test leave pushf jbe xchg jecxz mov dec push hlt or xchg add cltd leave sbb or sub jnp push cmp divb pop (bad) jno xchg mov shrl sbb scas out cmp push lret divb call xor adc adc into xchg iret int3 ds or int fldenv je (bad) pop imul sub dec sbb push es rcrl adc (bad) mov imul leave (bad) rolb shlb jbe push push stos ss inc mov xchg dec inc jge jle jnp dec mov jecxz rclb lds fisubrl lret jae aad pop ret ljmp rorb popa or (bad) xchg std xor mov sbb xor cmp rol dec mov or xor cmpsb std push std jae fldl2t rcr dec icebp mov mov adc push adc sub xor ss jo ds fdivl rcrb and jnp mov sub iret jmp clc push cwtl xchg pusha mov in hlt and (bad) cltd xor jmp loop xchg icebp push clc test in adcb cmp mov int mov mov mov (bad) push out sbb stos (bad) (bad) (bad) jbe ds xchg pop sahf xor mov pop xchg cmc push jbe stos pop inc add sbb pushf sti jp inc nop jle dec add les add or lds aas sbb mov test and xchg movsl push shl and pop lods mov leave xchg xor inc add mov fstpl mov test dec sti dec dec arpl fcomps and pop push bound icebp (bad) push adc or xchg sub (bad) hlt outsb xchg mov jnp out push jnp mov jo mov les loope xchg mov ja test test xor push aad xorb out aam sub stos and aas scas add (bad) mov cmpsb loop out xchg mov es stc into add (bad) mull sti push xor rol adc push lgs inc cltd inc loopne daa lahf jle jg out pop dec scas leave or rcll mov adc jmp fiaddl cld xor xchg icebp popa dec and enter movsl jno jno pop or mov push aad xlat lcall movsl jmp stc jbe cmp inc fwait cs dec adc mov addr16 adc or add add push push or sub test cmp jmp jne data16 shll xchg ret sub mov push xchg push subl sbb aam jns mov repz mov lret pop clc cmpb mov dec fmulp jp fcomps add mov xchg or xchg inc xorb leave xor jmp jne sbb mov clc js jo std mov xchg ljmp push inc imulb out out dec push cwtl dec or or xchg out lods adc mov inc jl jne fcomps push nop repz scas mov cmp mov dec (bad) insb mov insl cmpsl inc ljmp xchg mov out sub in pop cmpl rcrb add (bad) mov xchg mov cmp push int xchg or dec cmp mov push and fidivr sahf or iret or les sar aaa cmpsb aaa xchg add cltd mov xor jmp mov inc scas or lcall mov cmpsl cmp fisubr dec fwait mov xorb fdiv sahf cmp push xchg je mov xor cmp pop movsl cld je ljmp cltd mov xor out pop scas scas call xor adcb sub xchg pop out (bad) frstor (bad) and sahf sbb sub cmp fwait and jnp xchg lds repnz adc inc cmp xor push (bad) (bad) adc sbb dec inc sbb mov js repnz subl mov cli lret ficom xor or inc add (bad) and mov push into mov fbld fadd fcmovnb std addr16 inc idivb xchg jns cmp add mov pop dec and insb addr16 xchg lret sbb lret ljmp jge xor jp pop mov xorl jl jmp jns mov mov adc outsl imul xor imul adc sub xchg es cld pop mov mov mov mov int mov jge or les iret je sub std jno cmp loope,pn jle lods (bad) adc xchg les imul cwtl push repz dec fwait aad arpl and js jb shll sub inc xchg mov hlt push xchg shr mov pop notl cwtl loope adc test cmp inc mov adc mov push enter jle cmp mov sub jp test xchg adc popa cmp or mov roll pop in push fstpl pusha outsl leave mov test out cli sub mov (bad) xor and aas rorb insl cmc adc fisubr and pop addr16 hlt adc xor or pop push add pop ljmp push test mov (bad) mov mov xor (bad) jmp dec inc inc ficomp loopne inc mov or dec ror mov xor sbb push imul sahf imul pushl mov lds test mov sub xchg scas ja pop inc cltd (bad) pop out daa xchg mov sub add fldenv mov imul inc in xor xor mov jge pop cltd pop xor into mov dec jb mov cmp xchg jbe daa cmpsb lods iret xchg or pop adc xchg xchg leave jo xor adc cmpsb adc xor lock dec xchg repz stc ljmp lock iret das mov cltd adc sub xchg pop mov call pushf and mov xor pop sbb sbb daa roll cli out pop iret scas stos aad fs sbb mov adcl cmpsl mov mov sub jmp rcrb rcrl (bad) lahf out inc mov mov scas mov sbb sub push (bad) fiadd ja pop scas sarb or pop mov aaa push repz (bad) clc loop and jmp gs mov aad xchg mov insb jno fwait pop fs cli stos daa (bad) js lock lds int test push jl fisubrl ss jg xchg sbb adc das mov les jbe xchg hlt pop jno fcoml mov mov and mov jle lret rep pop sub test repnz mov insl dec stos xchg jp clc push cmpsl fimul pop pop xchg repnz xchg je adc pop stos je jg iret pop jbe pusha mov cltd xchg mov loopne insl js dec aam xlat dec jle add ret ljmp mov (bad) xchg mov iret cmp stc aad ret data16 inc outsb and inc cmp inc (bad) mov sbb cli ret sbb jns gs jmp jmp enter or cmp js test adc mov pop loopne lods jmp bswap and mov (bad) adc add jae cmpl jle lret in sbb repz pop mov addl add jne cmp data16 ja int lods mov arpl add insb outsb sub dec sbb or popa and jnp jecxz add sbb aas push sbb xor xchg push xor adc sub imul loop jnp fs push add mov inc dec andl xor sub dec outsb xor mov xchg sub push andb mov jo idivl adc add sub gs xor jbe scas sub xchg aas xor xlat gs fisubrl mov push les mov sarl test call push out in jg jo mov sub idivl nop dec sbb divb dec scas lcall daa jl loop or mov fucomi inc add lcall cmpl jo,pt jbe mov dec lods inc mov mov loop xchg pop in loop push fcomip or sub aam mov daa xlat xchg mov cmp iret mov fiadd call push sarl sub jp xor loope fmulp mov fisttpll sbb test pop xor mov cmpsb jne inc or sub jg test dec mov andb dec mov jae lods mov sub daa xor push stos xor jae mov lea mov fbld lods scas lea hlt cmc jmp ljmp mov pop xor mov ret push jl inc nop stos mov fsts dec mov and lret xor lcall jns cltd leave cmpsl dec mov cmp enter mov jno rorl jne ss in dec stos flds jecxz cwtl lcall mov dec (bad) (bad) insb aaa mov ss sbbl fbstp movsl jb mov in lcall ret in mov pop insb and push mov or fdivl dec aad and loop mov and mov pop cli adc jno rolb jecxz decb (bad) (bad) pop je xor leave and sahf pop jo jmp adc adc pop movsb loope shl into push add lahf push pushf dec sbb jbe sbb jle out mov sub pop lea rcll iret test xchg mov adc mov pushf lods xchg int in push je pop mov and xor and pushf or orl in jmp or pop jo cmp (bad) dec cltd fistl test loop mov xor aaa jl xchg (bad) notl add cmp repnz clc popa lock test adc add in fidivl faddl or and pop or lods ficompl (bad) adc inc xor movsb dec or and xchg fidivl andb popf mov xor rcrl mov xchg push js es or xchg sarl add ja jl lret lds sub mov int3 inc xchg sbb inc push mov dec mov xchg lock mov imul dec dec and aaa inc repnz outsb imul cmp pushf js add mov gs push popa lret inc jmp aad (bad) mov xor add cmp jo (bad) icebp sub mov mov or jp bound out mov xchg jge push bound lock adc outsl push test xchg inc test aaa mov push mov lcall inc mov push jbe mov jbe xor cmpsl stc shlb add cmp iret xchg push call sbb pop cmp cmpsl orl dec jmp push into imul xchg xchg sbb push mov mov mov (bad) (bad) ffree lahf loop addr16 jne dec inc jg test call pushf cmp mov stc pop in test jge dec jnp sub mov (bad) mov push stos adc das loopw daa sub aaa add icebp mov fidivrl stos daa and mov and pop and add rorl data16 enter stos xchg (bad) sbb sbb mov jae pop movsb fcmovnbe enter jle clc rcrb mov cmp mov lods std cmpsl test stos insb sub xor xor cmc xchg or enter xchg pop das cmp addr16 jne lods add push out enter scas icebp sbb dec mov out std (bad) rclb add push cld aas outsb pop pop mov in (bad) lea mov dec rolb or pop cmp in ljmp adc out jge movsl inc sub xchg inc xor or stos or icebp lea dec pusha leave inc push test mov pushf fistpl push xchg and mov inc je or dec jnp (bad) add lcall and sub sub xor bound jns dec enter inc hlt sub mov dec loopne bound lahf test rcrb add loope cld jmp push enter lock pusha es cmp test cmp aas addl fs rolb sub jp mov sbb push dec ret dec push insl aaa or js mov adc dec cmp sub pop ja mov jbe mov pop test or push and inc and inc mov pop jmp xlat mov cs stc jns testb movsb out mov and pop inc push and (bad) mov pop insb aaa xchg enter imul test push sti idivb add ljmp mov cld mov test stc jecxz dec add cltd pop (bad) jbe rorb lret cs dec test pop inc dec test dec enter out or rol inc out cli sub jnp js push lds dec sti fist outsl mov je lcall mov add call or shll jle fsubl aaa pop sub popf cs inc aam loopne int out xchg push fistl lret pop into les add xchg push jb sbb mov cmpsl sub mov sbb loope push xchg cmp fcmove jbe cwtl movsb or mov (bad) fwait sahf popf adc sbb xchg or mov pop adcl mov imul lcall mov movsl (bad) in xchg ja lds fldcw insb aad in stos cltd push loope push jo inc mov dec mov inc popf xchg push das lcall mov mov cmp in inc push js push mov lret ljmp mov cmp fimul ss test pop jo sub ljmp push test popa sub push test out js add pop jo dec push pop movaps lret insb movsl subl inc fs lods push dec inc lret outsb dec jecxz insb movsl lods lret mov setge mov test test cwtl pop je hlt xchg push test aas pop sub sahf cmp sub sub mov test sub xchg jle dec sub inc pop xor stos movb imul or adc cmpsl movsl nop sub dec insb imul test push fild shl mov movsl cmp mov xchg dec (bad) push lcallw popa ja bound sahf lods lahf push stos jp in push push loopne cwtl sbb mov cmpsl int3 mov mov arpl add inc mov pop jle lret mov jecxz pop out xchg push inc dec sbb xchg xor sbb cltd pop je mov in pusha sbb shrb mov out pushf (bad) cmc push mov movsb xchg movsl lahf push and ficompl xchg movl add imul sarb jmp lcall dec int3 mov fistl mov rcrb scas lret mov imul inc adc lods ss rorl mov movsb xchg ret push nop mov int add iret jnp data16 pop adc lods xchg (bad) sbb adc cmp mov push adc fsubs lods data16 imul addl pop rorb and mov xchg pop mov (bad) iret jmp and movsl and fcmovbe jge push mov loope pop or repz cmp jo ret outsl cmp sub mov bound xor aad jbe dec movsl xchg jle lcall mov mov ret cltd cmp imul cs push leave lret xor ret dec inc inc sahf dec mov imul push lcall xchg loop adc adc cltd sbb bound pop es add jmp mov mov or xchg inc inc fs fwait mov push es (bad) fdivrs mov jle mov insl xchg or lahf outsb cmpsb mov xchg lds push push popa mov mov mov das mov rep or (bad) mov sbbb daa popa fisttpl cmp popf je sub addr16 lret adc xlat fs cmpsl pushf lcall jne pusha xor xor xor pushf dec es es xchg frstor and add mov pop aad mov or mov xchg mov fcomps imul rcll rol pop jmp addr16 dec xor mov pop stos xor out popa or and adc xchg xchg arpl and cwtl cmc pop sub mov and mov pop into cmp dec insl inc xchg jnp cmp fstl sub inc dec pop dec psubsw (bad) mov cmpsb subl cmp push std loopne and sbb mov and fistl inc mov fldln2 lret xchg or sub xor add sbb sub ret xor lcall aas or pop sti mov pushf sbb js or and movsb mov mov xchg pop ret jo scas or mov pop aad push mov pop or daa mov push in push jnp mov mov test out xchg sub sub mov leave push es mov lret loopne push gs xchg dec inc cmp in inc mov and lock adc fdivrl push dec mov test pop out sub xor out dec mov adc sub orl dec inc xor xor lods sbb fs fcompl jl (bad) loopne out lret cltd jns dec adc and (bad) mov movlps xor sarl lahf (bad) imul push cmpsb popa outsl inc jl cmpsb rcrb dec les jge jp jmp cltd aad pop lret data16 arpl adc dec push cmc (bad) rcr jnp push xor movsl imul xchg rorb mov jne cwtl xchg and lret push cs ljmp test mov or mov mov and xchg mov push call je and pop push outsb push aas cmp lods hlt pop popf (bad) xor je mov popf mov out stos movb into repz and mov fcmove das (bad) jo mov movsl hlt rclb scas out sub inc push jno jl out xor loop fwait test dec and dec scas in mov data16 push jb mov or (bad) sti jb or lret es test std cltd xchg sbb fcoms sub xlat (bad) outsl xlat jl adc sub (bad) cltd dec xchg lds rorb ret pop out xor int sub push mov dec xor or mov push pop insb rorl daa mov mov inc pusha (bad) jecxz scas imul adc pop jmp stos mov pop add jmp movsb mov loope xchg xor loopne sub xchg add fcmovnb jg cmc in xchg push jb xchg mov xchg add push in loope (bad) shlb fs nop lods mulb mov std cmp sub jge jb mov sub mov lcall add (bad) ret lcall pop and xchg (bad) clc fildll jecxz or mov sbb inc jbe cltd sbb dec push pop lahf sub xchg iret pop mov jp scas (bad) jl pop fnstenv pop mov rcrl sub xor adc push ja gs adc add imulb mov ret push add sub sbb jne (bad) fwait xor ret xor xchg test sti lock add mov sub leave cmp enter sbb pushf mov pop fnstcw cmpsl mov fiaddl in ss jecxz (bad) outsl fidivr call adc fiadd add stos stos mov add in nop inc sbb add cmp fiadd fs pop inc loope mov push dec sbb mov pop mov add cmp cmp lret adc movsl pop inc das or je sbb mov xlat stos jecxz lock cmp and daa ljmp (bad) add mov popf dec mov pusha mov cld pop push xor mov sub xchg push inc inc lcall sbb mov inc popa popf mov out popa xor or mov js and add rclb mov repnz or out dec jb sbb mov mov add cs insl (bad) mov enter insb movsb scas dec movsb test and sbb (bad) xchg pop push add in aad (bad) sub mov and inc sbb aaa outsl mov or inc lahf insl pop movb inc jo aad sub adc ja stos or movsb push mov pop dec sub jno in arpl push or pop add xchg lea add mov mov js into sub addr16 nop inc push mov ljmp adc sub adc cmp mov cltd lea xchg mov or jb sbbb or mov add pushf jl rcrb and xchg add xchg push aam loopne dec int push data16 dec or and aad push adc lret xchg (bad) mov push cmpsb scas cs sahf adc out mov pop push arpl test das push xlat (bad) jecxz xchg inc lds shrb push loop push dec mov jg cmp (bad) movsb inc mov add inc pop inc lock cmc push stc mov fnop push and cwtl popa mov add jbe jmp mov rclb cmpsb lea xchg rol sub sbb lahf add loopne (bad) repnz js push cmp xchg push mov and (bad) je or jmp cmpsl std push add rcr add and test in fadds inc sbb mov outsb jb movsl pslld sarb pop mov sbb mov enter sub push cs in mov call cmpsb mov add xlat aaa sub loop (bad) dec (bad) lret xlat lds xchg mov add dec inc adc cmp lahf jnp mov fisub adc sahf xchg dec lds dec adc shr sbb ljmp xchg pop (bad) sbb mov inc inc push xchg jno std cs scas xlat inc cwtl mov adc sbb scas notb adcl clc sub sahf cs mov jno test cwtl int dec dec imul flds jle mov inc cld mull and pop cwtl mov adc sub mov aas pop push xor cmp outsl es push cwtl sbb shlb xchg push loopne jg stc jge push scas shrb pop lods test push mov fbld cld movsb in mov out xlat or out ljmp mov xor or test dec jno mov adc rclb push icebp cmc mov nop das imul jge mov mov ds ljmp sub (bad) in shll inc cmpsb pop (bad) jl dec mov imul sub inc pop sub js add imul inc insb neg aam pop xchg mov mov movsb outsb (bad) rolb jo mov (bad) push fistpl and pop andl sub xor mov mov jbe cmp or lea push cmc xchg das cmp outsb add out ja lock pop neg cmpb (bad) dec arpl and les shrl fldt data16 xchg outsl loopne pushf jns sub push push sbb fcmovu test sub dec clc xor aas daa std lcall popf xchg or int3 push cmp adcl mov pop xor rcll xlat jp mov inc mov call enter inc imul icebp sbb mov outsb movsl jne pop test test mov dec cmp and and mov divb and arpl xor sub mov ja sti push aas xchg mov gs sahf lret pop sbb dec mov iret sbb push inc push jne add sub sub add push aam mul fxtract outsl pcmpeqw sbb push jb sbb stos mov jmp addr16 sbb hlt sbb popf test mov hlt ficompl imul push cmp mov or push push mov mov add sarl sub or aam fsubrs cltd push pusha fcmovnb dec and out dec jmp fcmovbe xchg rclb scas inc or (bad) cmpl lret ficompl mov sbb sbb pop cld dec jle jns xchg (bad) lock fcoml adc mov outsb out stos in or sub adc lds movsb dec cwtl sub add pop xor jns popa outsb loope das dec stc pop arpl mov fucom out xchg dec cmp pop mov outsb xchg lods insb push outsb mov ficoml mov push out dec data16 pop arpl xlat pop aam loop mov pushf mov out pushf aaa rorb push inc into ja outsl cmp (bad) mov cmpb and inc (bad) adc out add push sbb sub ss mov inc sub add std pop cmp push out data16 inc repz mov jecxz inc movsl ficompl mov loop cmp in test cmp icebp iret loopne sbb mov pop jno dec fldt fs movsb push pop es xchg inc stos and inc or pop jecxz movsb xchg loope push mov cmp push push adc cld mov lock lds xor sub shrl mov loop sub test jecxz int pop outsb cmc push ss mov imul adc (bad) pop pop jmp jne scas push idivb push xchg push xchg cltd stc dec in dec xlat or aad cmp sbb mov ja xchg (bad) mov xor mov dec jno aas inc mov lock inc dec das xor xor pop or dec and add fwait insl test or push dec sbb scas sbb imul mov xor ja pop leave nop push push shll frstor and adc aaa addr16 mov lock clc sahf call adc insb (bad) pop mov adc lods lret and mov inc loope mov mov lock mov rol cli into sbb sbb loopne (bad) jo pop arpl cmp inc jbe ficompl mov stos push scas jecxz int3 lret lcall jmp ret imul xchg xchg rcrb push jbe fsubl lret xlat stc adc add sub pop scas in popa lea xor shll cmp incl (bad) push mov sbb xchg adc and mov push push dec jbe add and sahf cmp add aad mov adc incb (bad) or test es lods mov and jge push inc push repnz or mov movsl mov push mov aam les int3 call xlat mov adc add stos ret or adc std pop cmp jecxz sbb push sub and idiv dec mov out xchg push push rcl f2xm1 push (bad) imul cs das push jno pop inc xchg stc sbb mov popf das xor in (bad) adc (bad) mov pop and aaa mov leave mov js mov push or cmpsl push sbb cltd xor dec lret xchg test add mov push cmc andb mov xor js xor add push mov pop mov lock dec jno xor loopne pop lret inc mov pushf sbb cmp or mov stos mov cld push pop into xor sbb pop enter push int lahf sarb shrb pushf mov jecxz xchg xchg repz inc test jl jmp mov negb rclb mov cmp pop enter ret dec aaa or (bad) xchg inc aas xchg lcall out pop ljmp adcl dec xchg jle jmp iret loope dec sub stc fisttpll loope popf out out sub in hlt insl in or xchg imul and iret or cli or insl or ret arpl clc ja mov sub fisttpll outsl (bad) (bad) imul jp jge data16 outsl dec cli cmp dec jns lcall enter test mov sbb xchg push mov rcr repnz add lret adc fisubrl call xchg fwait and cmp xor movsb imul daa pop xchg popf repz mov clc push (bad) fist xchg push loop push jl push mov mov mov mov sarl inc push inc ret jns fsubr pop xchg loop loope fidivrl fs (bad) xor nop nop shl fcoms loope mov mov (bad) das cltd push adc jge mov int3 add or enter xor xchg add int (bad) in repz jne or xor lods dec mov out jne pop popf mov pop push inc xchg je (bad) mov in ds imul sbb outsl inc cli and sbbl xor xor loop sbb xor idiv sahf mov aaa dec out lock xor jg sbbl xlat or roll adc cmp lock pop and push jge jg xor fcom imul add ret inc mov mov push mov add pop add (bad) mov int fcmovnb lret push xchg jle sbb stos ss test (bad) push pop inc mov aas inc or in into push push lock sbbl cltd or sbb or mov stc push push mov xchg lock in dec xor mov mov cmpsb sbb inc and out movsl adc int3 jge pushf or xor stos pop loop mov fnstcw in sbb mov jne es cli lcall or in (bad) into test jge shll sbb les aaa (bad) aaa daa xchg xlat xchg add (bad) mov and jmp (bad) cltd mov mov data16 mov imul clc (bad) and dec and cmpsl mov shrl cwtl pop inc enter mov aas inc sub push mov insl cs pop fistl push lock inc hlt xchg lcall pop ret cmpsl test test sbb push pop jo test inc loop out inc lods cmp push fwait mull aas fild cmc sub cmp mov or or inc icebp pop popa mov jge dec adc popa mov jne aam jbe sbb test lret sub (bad) enter jo mov inc cmpsl sbb jo sbb inc push add fdivrs adc outsb push ret insl (bad) (bad) push je sahf mov pop shrb rol ret cmpsl stos lret imul sbb aaa fwait rcl jl (bad) in mov or inc in daa or aam popa (bad) adc or lods cmp iret or or ret push cmpsb aam inc or shrb mov loopne imull pop out test mov test aaa imul cs lds and rclb push sbb lods stos push push or dec enter mov rclb out and outsl cmpb inc or call aas pop jl in and mov pop ret jo cmpsl test inc sarb lods (bad) or subl inc add xchg push pop mov decl mov test cmp lods out lret add xchg mov ja and cltd jae jmp cmp int3 (bad) cltd or xor leave ja adc and (bad) add clc fdivl or lret std pop imul rolb in in dec dec sti jno cmp push stos nop pop push inc enter pusha hlt cmp xor add or ret push outsl adc (bad) nop int3 or mov das ret mov rclb cmp jge fildl jbe jne shl or mov mov push gs mov sbb mov bound inc mov insl jge cmpsl xchg jno sbb sbb addr16 je cmpsb (bad) pop out inc jo mov jle movsl stos push add mov jno pusha add pop in test cld ja dec popa lea or dec or rcll add (bad) leave icebp jo push mov jne cmpsb push mov icebp nop adc pop push popa fidivl jg mov xchg out adc pushf adc out cmp repnz mov cwtl cmc insb mov lcall mov mov cs xchg lret jecxz adcb repnz lock pop and rcrl sbb mov movsb dec cmp repz cmp out and and (bad) dec push lret sbb push jne or (bad) pushf push mov xchg push fnstsw fwait inc test xchg inc repnz ljmp enter sbb and mov clc sbb sbb aad jns mov mov dec mov popf sbb pushf jecxz mov (bad) ficomp imul lea or and popa lcall dec inc hlt shrb mov add repz jno sub mov out addr16 mov lea dec mov bound lret and xor test scas int cld mov lret cmp mov mov (bad) (bad) fs sbb ret icebp dec push jbe inc or cmp jnp popf push adc or rclb xlat lcall orl cs arpl fidivrl stos (bad) dec mov shlb in les int3 mov xor jecxz dec mov cs mov scas das cmpb add stc and mov xor insl sbb test shrb movsb dec dec (bad) xchg gs rol jns jo fdivs mov jae mov inc pop cmp rep dec aaa mov addr16 into xor add popa adc sysexit fsub mov mov lods mov sbb add (bad) scas cmp js mov sbb jp movsb and sub mov jp pop fwait rcrb out stos sub xor xlat ds push mov iret mov fiadd jnp xor push sbb das mov shlb leave movsl loop or and int or inc pop rcrl pusha and xchg dec scas xchg ret shll scas out mov int adc icebp pop out cmp mov nop mov push dec repz adc mov add and sahf into and and daa or inc mov cmp test int3 aaa ss and and sbb sub (bad) and push outsb and rorb in aam pop fwait ds pop das push pop dec mov pop fdivrs and dec xor or (bad) hlt (bad) mov fisubr call les int test mov mov ficom mov lds xchg (bad) mov cli mov sarb (bad) cmp mov lret scas sub xchg pop adc or adc push lea mov lock jle xchg addb mov add cmp add add push push lahf lods jp (bad) sub sub mov inc pop sahf jp jge,pt neg jg in xor xor (bad) shrl sbb inc cmc mov inc lods test les mov out or sbb imul mov dec gs aam or out test pop jns inc imul clc sub jg sarb jbe xor mov jmp sti aaa call test out es jb jecxz addr16 mov insl mov icebp lock loopne and jl dec out in push (bad) cmp and or xor fstl jl lods jnp sbb loopne (bad) scas push loopne mov sarb jno mov stos push aaa (bad) xor sub xchg cmp aas sbb inc mov (bad) repz jns xchg clc add lahf add adc fnstcw movsl jne pop jmp cli adc add sahf cmpsb stos lret add fsubl dec dec aam jae arpl cmc pop in jecxz dec xchg (bad) sub add cmp js xchg lcall test shlb dec dec cmpsl call movsl push loop movsl movsl ficompl test or sub incl pop add mov stos out dec push push add test mov std push mov cmpsb sub out fwait negl (bad) insb xlat iret (bad) out shll mov das xor push insl loop cwtl mov hlt lahf jns cmp decb push lret xchg jnp inc insl xchg lahf lods push ror lret out push pop out push add push mov cmc adc mov mov cs cmp subb subb sbb (bad) hlt inc insb ljmp xchg pusha cmp xor pop bound inc pop popa popa es cmpsb pop clc xor push adcb pop xor loopne push sar negb std jp dec adc mov sub dec mov fwait lods inc xor mov sahf clc xor out mov rolb jecxz mov adc mov xchg arpl loopne mov xchg shrl cli or and test jae rcrb dec movsl mov push jl or add (bad) gs mov data16 aaa aas (bad) push fisttpll xor and out out pushl and push in jbe cmc aad dec outsb sbb inc sub stos inc adc out sbb out or es ret add push aas dec or pop jae sbbl add scas mov shll sub dec mov and adc in mov in xlat jg or pop (bad) dec mov out js or imul adc or xchg int add sub jg sbb push iret sub insl outsb data16 pop push cmp lock push lods in out pop push stc adc mov pop mov sbb test add xchg sbb js dec dec scas in push pop xchg adc lock hlt dec mov dec lret push scas pop or ficompl sbb ret cmp xchg scas inc js and mov mov icebp push push popa in dec mov lcall shll dec inc (bad) jle scas (bad) lahf jecxz push jmp cmpsl jns enter and lea (bad) and xchg push xchg cmpsl int xor mov andl loope jb (bad) push sbb sbb shrb adc xchg xchg cmp out mov and mov inc sbb (bad) xchg adc (bad) jnp fidivr sub inc (bad) xlat cli pop mov adc mov jne jle push mov fcomps inc fwait xlat sbb out add lods cmp cld xor jmp add iret loopne mov jno in mov sbb mov inc andb lea pusha stos xchg mulb pop push pop lret mov mov outsb push scas nop sbb loope shlb insb es sub jno push sub addl sbb cmpsl jmp fisub mov xchg (bad) lods cmp fstpl test test xchg mov jbe sub outsb cmpl xchg stos mov mov in fsubrp adc cwtl sub sti mov test mov fmul (bad) ja pop mov leave add das dec sti ror stos sbb mov jl push outsb jmp sbb imul out les fiadd push inc mov or call repnz cmc push (bad) xchg fwait (bad) mov inc (bad) jp out jmp rclb or rcll movsl cld push into inc adc push inc test sub dec xchg sub fidivl inc mull adc and push hlt add cmp xchg in orl mov lcall fidivl xchg insb movl stos xlat shlb or pop adc mov test aaa dec loop (bad) fs xchg (bad) mov enter xchg and (bad) dec mov out mov (bad) sub ret mov out lods jo adc fldt nop ljmp ffree push or insl xor inc stc sti inc into outsb pop loope (bad) frstor sbb and pusha add sbb pop push ficomp ficompl fisubrl cwtl mov sahf mov inc fwait insb sub and out add add fnsetpm(287 call outsl lcall imul test and lods cmc push iret es imulb aad pop pop arpl add xchg mov sbb mov inc add (bad) das dec pop mov pop out jmp loopne dec repnz add and bsf add nop mov lock dec loope mov ret div pop sbb fnstcw imul and movsl in sti pushf adc mov mov xlat arpl rolb jb idivb add nop adc loopne test mov or (bad) in ja adc sub mov pop scas jb outsb dec fcoms sbb sbb xor and lret in (bad) arpl or mov jbe lods shr and push je mov sub or clc and jbe pop or sti or popf aas (bad) adc insl cmp jmp adc aam dec cmpsb pop mov dec out or dec xchg cwtl lea xor stos sub mov cld jecxz stos repz in cli mov subb inc mov inc pop (bad) stos xlat stos add lcall das cs fstpt mov stos pop fcoml imul mov lea lahf in imul and (bad) (bad) push jle mov out xor sbb pop stos pusha mov dec sbb xchg test dec cmp cmp mov jb je mov mov lds shlb mov dec out and xchg xchg adc outsb or mulb fistpl stc shll jbe xchg mulb fiadd je je mov sbbb enter ja jae mov and xchg mul cmpl mov adc sbb xor and mov inc (bad) jmp push mov (bad) frstor cmp lret in stos cltd repz mov das dec into or clc pop test xor mov lods jmp test add jne pop lcall dec sbb mov pop ss adc sbb loop stos lock mov sbb lahf mov in mov clc decb (bad) xchg fst sbb bsf xchg lods lcall adc push int3 ret arpl cltd sbb mov jae mov insl and cmp lcall mov cmc inc mov ds out loope push mov pusha xchg movb adc test pop js cld les aad aad xchg mov enter ror add (bad) cli stos mov scas inc fisub xchg inc loope mov adc in sub add clc push inc inc (bad) cmp int rcrl jns cmp push out push pop int3 hlt cwtl mov loope rolb mov cmp movsb jle rorl (bad) sub iret fchs in pop xchg lock gs insw lahf fwait int out add mov push adc add adc mov cmp push outsb (bad) fnsave xor inc adc adc cmp adc faddp jno sub pop les ret cmpsl incb dec ja xor or cmpsb sbb loop mov xchg shrl rcrb inc pop xor cmpsl adc divb xlat stos bound dec cmpsl hlt jbe shrl lcall stos and sbb adc adc idivl ljmp mov es mov adc adc push mov cmp loope lret and xchg sub stos add clc mov data16 cmp dec xchg xchg sub dec jg jno adc mov or adc ljmp fcom sbb mov leave inc mov lret cwtl adc ja stos punpcklwd hlt push pop int sub (bad) jno jp mov push and stos daa adc pop mov in inc sbb dec jno mov imul dec mov test fisttpl fisttpl leave mov adc mov clc stc stc outsl lods cmp negb mov jmp call mov pop dec and sarb ficomp xchg pop scas push xor sub insl stc mov or (bad) jne mov stos and dec push mov jmp dec sbb pusha pop daa fisubrl pop sub stos (bad) cmpsb icebp imul xchg cwtl push cmp dec adc xchg dec aaa fistl push add stos pop ss mov stos cmp xchg outsl mov mov fildll daa mov adc xchg sbb cmp test mov xchg or mov es push nop add rcrl imul xchg outsl scas cmp sarl xchg dec and dec push mov sub dec mov fs push es std clc jno jns pop repz xor push fcmovbe js cmp sahf movsl xchg lds push jle aas sbb ds mov sbb nop movsl in cmpsb mov xchg nop push mov sbb sub pop (bad) add sahf int (bad) iret mov int jge cmp push lahf jmp cmp sbb scas fsubl jmp dec ja stos pop sbb movb mov jmp push sub pop lret in push mov sti xchg pop mov pop xchg aaa cmpb pop add testl cmp test or daa insb jle jbe out inc pop dec out imul fisub inc movsb jo out inc movsb inc sarl or xor loop cli (bad) dec lods push sbb in les inc add push push das test out icebp and fiaddl test enter ss mov ret and lock sub (bad) cmp insb inc mov pop inc sbb test mov inc outsb int3 dec sti ret idiv fsubrl xchg sub mov into push or add mov cmp jmp jl dec leave shrl jp js dec loop jmp fsubr fcoml cld enter out insl dec lods es insl in push mov xor push aam or ljmp and inc inc push outsl xchg neg subl push dec out insl cwtl dec lods gs pop xchg and adc mul mov or pushf gs sub (bad) shrl lret data16 sub mov jne cmp ss lahf xor shll pop xorl cmp adc jno dec jne (bad) pop mov mov push fcom sub outsl out cld rorb call push jl dec lahf adc (bad) adc adc movsl cld movsbl jl movsl (bad) pop push pop mov pushf pop or xor fmul pop dec (bad) notb mov mov (bad) popf addr16 dec jnp pop or ret fidivr xor mov daa sub xchg jb mov mov lret inc mov inc cs dec xchg or lcall icebp imul popa inc lcall std popa lock popf daa hlt push and and or add roll iret loope xor fcmovnbe cmp jo sbb sub (bad) mov scas cli push ficomp hlt out rcrb scas xchg lods and dec xchg imull mov xchg enter loopne mov lcall hlt test imul pop xor dec jge jae aad dec dec push xchg aad dec and ficomp add fistp push (bad) dec and adc push pop sti les dec push jmp test push xchg test lahf xchg push push mov enter nop (bad) test sti push fnstcw hlt ss lock lods xchg push (bad) or enter jge xchg xchg packssdw out imulb enterw or mov adc lods aas cmp sub xor shll push je mov pop push out divb cmpsb adc lahf push mov dec inc mov pop mov adc xchg test push lahf insb out cmp adc sbb cmc (bad) adc repz pop and xchg mov push cmpsl pushf mov sbb jno jns sbb rcrb mov (bad) iret fs mov dec adc jae stos out push jmp dec mov idivb xor jp sbb nop xchg pop sub mov sbb pop aam mov hlt out inc out movsb rcr mov dec cld mov leave cs hlt fsubrs out test pusha js mov dec inc cmp test fcmove iret dec cld mov aas int3 jl out dec iret mov js in dec aad cmc dec inc mov (bad) adc (bad) or mov ss push sarb clc lods sub clc insl sub mov xchg or pop fnop sub scas call out mov call mov enter (bad) fmull mov push fdivrs dec ror pushf xchg dec (bad) (bad) jge (bad) enter int mov (bad) aam inc enter rcl dec fimull sub (bad) fucomp jl inc dec rol pop int ror (bad) (bad) insb add dec iret (bad) xor inc jb adc and es dec sti loop aam and inc (bad) hlt cmpsl (bad) imul lods sub pushl mov push (bad) add subl insl fildll sbb adc dec fwait mov sbb sub dec fimul dec int3 rcrb (bad) jle jl flds (bad) xor push pop clc lods scas inc loope scas out add fsub dec xchg mov mov int3 jnp sub lret (bad) int3 cli push mov fildll iret mov test lcall (bad) add cmc cmc adc inc out gs push fdiv cwtl mov mov pop sbb out cmc (bad) jo std push test xchg mov push or push or adc mov push ja movsl aad lcall sbb adcb aad loope xor outsb stc pop push imull mov pop adc es fisubrl iret push xchg rcll imul out xchg push jne add (bad) out lahf jo jmp std sbb push gs leave icebp dec jb xchg push std cmp sub xlat xlat xchg xlat push xchg push fucomip cltd rclb stos cmc cwtl pop dec int3 scas jge movsl imul sbb jg nop jmp sarl mov xor dec dec mov fs add ljmp dec gs sbb push out and (bad) je jmp mov push lods je push (bad) test out adc out mov mov pop into ret (bad) enter mov xchg jge mov or pushf ss push call stc cltd ja pop adc cwtl aas xchg mov rorl jle adc jg mov mov xor loope roll push sub inc xchg push ljmp push mov out mov stos push std pop pop push or scas adc ja fstl cltd leave bound jecxz jo mov fistl mov sbb jns jb in and addr16 push ret or fnstsw sbbl and out fwait popa jbe lds xchg out and outsl pop dec test sbb mov in nop xchg xchg fstl imul (bad) in das push push jle xchg lret mov lcall addr16 sbb out icebp jl fisttpl hlt cmpsb cmpsl test pop xchg push cmp pop test pushf les inc test leave popf mov jl inc mov mov sbb or mov mov jmp ret dec pusha jnp out movsb out outsb rol fcomip push dec add xor mov (bad) xor hlt push int3 aam enter imul jp sub js (bad) jne (bad) lods inc mov xchg insl nop std clc add add aas and es jbe inc xchg pop dec cmp scas or hlt lods aaa mov adc repz mov cmp es iret call mov pop fistp aas scas cmp pop cmp out lock mov sub stos out pop mov push add add jl mov push pop or rcl icebp imul push dec scas outsl mov jne xchg hlt ss adc adc idivb mov imull jle imul adc (bad) roll push mov and icebp sbb test (bad) int3 sub out aaa adc mov xchg sub adc aad xchg cmpsl repz (bad) xor xchg nop jae jne xchg sub jg adc popa xchg popa pop cmpsl negl xchg sub dec mov or stc jg stos add popa pop xchg jle jl mov mov stos dec popa pop xchg lock stos out adc or adc sub sub stos push stos mul int adc and xchg fcmove (bad) pushf cmpsl std sbb push jno xchg sti or pop cmpsl stc jp xor cmpsl sbb adc sub mov stos push stos notl sub notb lea fs add mov add call xchg (bad) cmp cmp jl addl lods cltd fidivrl or imul add push (bad) enter mov mov dec dec inc push add push push cli fistpl fsubs mov cwtl or aam lock sub dec cmc push stos test (bad) icebp in and adc jp sahf cmp movsb rcrl in push cmpsl enter inc jl jbe pop ret cld xchg xchg rol lods fcomps fild daa movb xchg out adc dec push mov ja xor and and out into pop inc cmp sub jmp stos sub sub enter pop popa aas dec arpl cmp inc setno mov cmp mov inc addl je lahf and sbb daa icebp xchg and sbb lret mov pop push cmp sarb pop out icebp repnz and mov pop adc dec stos sbbl and sti jecxz add sbb out sbbb ja jne ficomp add cmpsb pop (bad) lds ret fwait stos xchg pop pop mov or sti adc add ss adc inc add jl std add inc jmp ret jp,pt gs ret popf or inc leave int3 arpl sub adc and lret jecxz repz inc jnp jge push (bad) (bad) cmp es mov ds and mov push jnp fs sub cmc stc adc addr16 adc jp add cmp xor jmp out dec out mov hlt (bad) fsubs cmp (bad) adc and and lret cmp cltd loopne xchg sbb nop cmp dec cld cli jecxz ret push je mov mov xchg cld adc out in repz int3 addr16 add sahf add cwtl jle scas test sub mov xchg or or or call es cmc jp mov push pop push loope fiadd pop rclb ds mov xor loope aad in out mov mov inc aad pusha in mov xchg mov lods les (bad) (bad) mov nop push fsubs add mov adc mov insb sar push std dec cmp sbb mov or dec jmp hlt fwait jmp xchg stos (bad) sahf sahf pop (bad) or pop xchg cmp iret int3 and idivl and sbb lods in sub das in nop xchg (bad) push in and add ds test and push cmc push xor (bad) jle jl (bad) sub jecxz loop mov ds dec fldl lea cld xchg push fcoml jecxz fsqrt cmp sbb add inc dec mov mov mov fidivl faddl test loope mov test dec inc cmp (bad) sbb call paddb mov xchg jge lock push jae or fs mov aaa es adc lea and popf adc idivl cmp adc cld add or mov shrl lds sbb int aam dec jo mov mov sbb test sub ds add loop cmp xlat add adc enter dec cmp (bad) bound mov push pop rcrb adc pop sbb (bad) push pop push fisubr or sbb cmpsb jo ja (bad) jo push iret xor push mov cmc jnp into cmp add in mov cmp rcrl push ljmp aas cmp push faddl cmp pop stos ret dec mov (bad) je sub dec inc shr ret pushf out mov mov sbb js mov mov jg imul repz push mov mov add mov movsb jecxz jg jns loop pop jo dec mov push mov mov fidiv xor lock or inc mov inc xchg loop test mov mov ficoml insb push ficomp jne clc es inc sbb or adc pop mov sti cmp aaa xchg push pushl imul scas mov pop xchg lret test je add nop outsb cwtl insl fldt repnz imul leave cld and in cmpsb mov sahf in jge mov sti pop rorl repz imul fucomi inc push xchg dec inc pop push add cmc mov pop pop cltd add mov ret mov scas jae rcll cs push mov add dec cmp inc mov mov sbb xor inc mov out pop dec adc stos fmulp lods loop cmp sub rorl lods lret mov add xor and push ret jne int cli mov cmc inc mov add mov in (bad) lock orl ljmp sub adc mov pop mov in rcrb aas int clc enter (bad) outsl mov add mov call hlt pop mov wrmsr push call (bad) jg and pop cwtl outsb nop xor push pop int mov in (bad) sti and inc loope add sub mov mov mov add stos daa inc inc nop pop sub add push lcall shll gs mov or mov add cwtl rorl adc mov push dec push (bad) shrb jb add fs testl dec push bound int xchg stos adc xor stos and cmp ret push mov inc mov mov lret ret ret add inc mov cmpsb movl scas mov (bad) test mov xchg mov out cli outsl idivb test add daa and scas pop mov popa or inc les pushf xor sarb pop add jle in adc mov and xchg std push ds shlb (bad) aad dec mulb xor nop push xchg pop xor inc pcmpgtd hlt hlt enter sbbl insb add pop iret das js (bad) rcrb lahf (bad) jo jmp (bad) jne test mov dec lahf lods mov stos jo jb ret in cmpsl xchg test jl inc cltd in inc scas cmp loopne add mov fild pop lcall test xor cwtl test out in adc je and scas dec mov push ss cmp lahf sbb pop gs shrb mov sub pop in (bad) jno fsubr mov outsb cmpsb xchg mov insb inc and sti xchg (bad) sti mov adc fs inc sbb pop (bad) or xchg jle lods or push repnz hlt stc cli inc aam ret cmp xor orl push fldenv ficom fcoms insb aas clc xor jl mov dec push popa fdivrs push mov mov (bad) push shll test std out adc dec push (bad) test jbe mov outsl mov fsubrs jnp aam sub cmc sbb cli out lea jnp cmp lods or sbb mov orl loop sub (bad) and (bad) hlt in fidivrl push xchg add movsl (bad) xor imul lahf clc inc jnp fldl2e js rolb sti test mov pop cmc adc xchg pop scas daa and cmpsb sbb popf movsb push xor inc dec hlt shrb fidivl inc fwait das arpl cmp aaa std cmpsb test cwtl xchg jae sbb fmuls push fmuls dec and xchg pop cmp xchg xchg mov xchg jno or lea fcoml decb test dec sub mov aad clc cmpsl andl sete mov js inc std mov mov mov cmp mov sbb xchg mov imul loopne mov jp arpl mov jl outsl jmp lcall mov fisubl paddsb xor mov push xor fstps and adc push jg lds or cwtl jnp xchg popl and les mov out inc push es cmpsl pushf mov mov pop aam cmp loopne xchg and mov leave cmp stc (bad) pushf sbb hlt les popa mov push xchg scas mov mov (bad) gs mov and ret fstl loopne cltd ss outsl xchg jnp roll sub sbb arpl popf xchg mov xchg dec pop cmp dec cld sahf clc xchg mov inc push mov lahf xor xchg fisttpll stos in mov out and inc movsb sub or jno add mov xor mov push jmp dec sahf scas out jbe mov scas adc mov inc and outsl (bad) mov mov and lods mov sti dec push sub cmpl xchg addb mov sub hlt out cmp lahf lret insl aad out jo rcr inc ds cmp jmp stos fsubrl out fwait data16 das and mov outsb and dec cli pushf xchg xchg or mov cmp inc xchg lods jo dec lea cmp pop sub dec sub neg inc fcomps or mov push dec test adc leave in and rolb lea jmp out mov rorb pop xchg dec sub shr test pop popa or ficompl test xchg lcall or lret lods push cmpsb pop mov fwait cmp jle std dec cmp adc dec push pop push popf xchg nop fcom add jle scas dec push jl sub insb sub hlt push mov push ss mov mov mov repz inc push lods xchg call mov iret imul push enter pop pop push push mov int movsb enter and aad hlt in or xor dec hlt inc ds fmuls sub out mov and mov mov aas dec adc dec add in call dec (bad) mov push cmp jmp (bad) not sub inc push cmp mov mov call pop fisubl jecxz,pt mov pop adc dec xchg mov ja or in fmulp test adc mov scas cmp inc jl inc mov pop push add stos inc mov (bad) repz mov jp pop mov frstor outsb push leave and push lret std shr add push inc aas sbb adcb insl mov dec loopne jns lret sbb stos xorl ficoml mov dec dec cmp or inc xchg or rclb xchg inc jecxz (bad) xor stos mov add jbe in or cmpsb aaa adc xor popf cli cmp rol shll inc rcrb daa mov lret scas dec xchg lahf sub into jecxz or js cmp psubd dec sbbb test jp fcoml test stc stos cwtl add sub inc lret jecxz add lret lret pushf add fmul out mov jle rolb daa icebp adc ror mov icebp mov or xchg in push mov push (bad) leave mov sbb adc mov cmp cmp in cmp push gs mov xchg enter push jle iret dec pmuludq lods aas mov stos (bad) scas jnp (bad) cmp iret aas nop (bad) rorl pushf push pushf pop sub and pop fidivrl push rolb ss xor fwait mov daa and repnz dec in mov xlat lret adc dec sti fadd sub fdivl imul sub mov sahf repnz mov cmp jbe pop sbb arpl leave inc fistpll xor ret pop adc aas rcrb and cs stos int pop cmpsb mov test add dec mov add cld push fs (bad) (bad) (bad) mov inc dec stos enter sub nop push pop inc jno mov pop add loopne mov mov fistpl mov mov pop int push ret cmp adc sbb int je int jg,pt daa inc outsb pushf je test and mov fcomps movsb aam adc cld or sti imul cs or lods inc ret add mov dec add or lds jae pop and and sbbl push add lock imul push and jg clc je inc mov mov xlat xchg (bad) leave sub cmc clc add jmp jecxz pushf cmp lds into lea pop insl shlb dec mov push xchg dec push decb adc pop dec loopne mov stos cwtl pop cwtl cmp pop (bad) xor mov add incl xchg pop pop call jmp (bad) jmp data16 fnstsw lock cmpsb adc pop xor loopne adc cmpsb daa mov jle mov loopne adc dec scas ret add je push push inc arpl cmpsb mov mov pusha pop adc insb sbb sub xor jmp (bad) xor or das jbe (bad) xor shll ja jp pop sbb mov shr mov fmull cmp outsb xchg jg cwtl and mull int3 fstpt mov fcoml pop loope (bad) cwtl mov mov aas (bad) iret jg sbb sub push test sbb xor xorl inc dec outsl mov add mov rclb xchg cmp inc jmp mov lock loopne (bad) or stos and pop pop and out das xchg lahf or sbb arpl add jno jbe cld jb xchg lea pop rcrb mov (bad) adc fninit iret jmp movaps fmuls push push cmp incl push in (bad) mov jne cmp ss pop cli inc lret stc inc sbb dec cltd out inc cwtl fadds dec jg in into ljmp xlat inc cld aad ret cmp inc inc mov addl add pop sbb jmp pop xchg inc inc nop decl stc pop jb or inc cmpl xchg mov and sbb sarb mov xor loopne in adc dec (bad) mov hlt jno (bad) out sub jmp pop push lock xchg jb sti adc jl pop cmpsb pop mov and or ret ds aas icebp cltd fcoml mov xlat fs in mov xchg inc mov push test popf jo inc mov sbb adc pop fcomps mov es scas add push mov imul xchg xchg leave mov mov (bad) mov divb sahf dec inc or out clc jg cmc stos scas (bad) inc dec push cmpsl xchg inc mov xor gs icebp icebp call xlat xor dec in nop inc movsl and mov add in pop jle push dec test das shlb push add stos imul dec jnp insl pop daa call sbb call sub xchg mov lock (bad) push or ret push inc ficompl sub pop or (bad) jge lahf and pop jae test (bad) sbb (bad) adc xchg test cld mov lret pop lods inc push subl jle dec mov push subl xchg scas pop lcall dec mov out push (bad) xchg ja test ljmp bound ficom (bad) pop mov imul popf ja shrb addr16 adc pop dec adc xor stos sbb sub mov sub (bad) movsb rolb mov jle pop test cmpsb pop push popf cmp out sarl pop out dec (bad) mov or inc push movsl sub xchg mov pop jl sub pop into mov insl clc jmp mov sub dec xor cmp mov push sbb dec ja mov jne insb stc cmp flds fidivrl xchg push sub mov mov adc test sti jbe repz or cmp int fs jbe and in jnp out lcall repz mov std sub in (bad) hlt sbb stos pop lahf fimull inc mov dec push sub xchg xor out or lods dec bound add inc mov inc jbe or push fs sub jne mov or pop push push scas inc shlb xorl pop add pop adc mov push mov xor or xchg push pop and cmp jno lds dec adc xchg mov cltd dec jge inc add (bad) addr16 mov sub cmp mov sub fistpl pop loope rorl ja int jnp mov or mov movsb std and ljmp icebp rcrl dec push imul pop push or ficom lcall cs test push cmp inc lods mov arpl xchg lahf xchg ds (bad) fbld dec jb fwait (bad) std jo jb pop lcall lea loope dec sahf or fildl sub insb sbb cmpsl push sahf jp push lcall push xor fiadd fstl insb sub sub mov decl shlb dec mov lret pop fs out movsb les cmpsl repz and lcall jle dec adc scas inc xchg lods push cli adc test icebp cmp stos movsb push int3 loope cmc mov cmp div int3 inc inc jp gs jne xchg cmpsb dec outsb adc mov jle les (bad) rcl pop dec scas pushf jle sbb jns cmpsb cmpsb enter mov rclb mov mov dec inc insl or sub ljmp jl test les enter popf outsb push push cli inc in lret pop jle pushf insb lds jno cmpsl jne iret loop int cmpsl std push add xchg test popa pop xchg sub mov xchg aaa adc andl push sub adc pushf push jno pop mov daa sbb adc mov pop hlt shll lret jg stos in adc cld clc dec je jp xchg je stc sub xchg stos bound mov xchg pop mov and pop std inc stos loopne mov push popa sub adc jmp jno xchg cmp aam jg stos and insb adc in push mov inc loope,pn push adc enter fbld out cmp add bswap gs into inc in fildl cmpsb (bad) out popa fidiv sub call in (bad) mov leave data16 xchg out jmp sbb dec pop mov movsb in dec lret sub dec enter in dec sbb jmp out lahf pusha add or mov in push aad jg sbb push out mov adc cmpl stos mov lret dec xchg lret outsb fistl stc in test int pop test cmp mov cmp (bad) lods (bad) sub xchg sarl xlat lret push jno fsubrl rclb dec cmpsl popf push push inc test insl xchg cmp inc dec arpl cli loop int adc insl cmpl loop std movsb movsl push inc push mov orl sub arpl mov xchg insb std (bad) rol dec jmp inc dec inc dec inc dec into (bad) in sub je repz mov stos dec (bad) scas (bad) int3 enter push and ficompl mov js cmp jo pop lds inc hlt xor lock js call mov lret std inc in (bad) mov xchg test cmp cmp scas mov inc ss xchg sub fs repnz lods aas inc adc and xor pop gs xchg push adc sub inc jle xor loopne (bad) pop sbb xchg fsubrl pop das add clc fimull xchg and xchg push (bad) mov and pop ret sub shlb push cmp and dec dec or inc cmp mov cmc sub dec jne inc in add sahf inc push mov lret repz int3 mov aas and sarb aaa int pop sahf inc jae lds pop cmp aas bound iret add push jmp (bad) mov mov mov add addr16 or mov dec mov pop mov dec add xor lock xchg mov test in mov inc mov inc daa lods cmp cmp inc movsb mov (bad) mov sub xchg jo lock inc pop dec and or ret sub mov add mov mov aas adc xchg xchg sub mov cmpsb int3 stc xor jg (bad) push xchg rol mov mov cmp push and (bad) iret or fsubrs ret sbb psubsb movsl lret cmc je fstpt push (bad) mov jo hlt inc xor adc mov push int add fcoms rcrl aas pop inc subl sti jnp cmp lret cmp mov bound mov xor and aas jmp xchg cmp jle cmp mov and movb or and call out aas iret fldl mov add mov or jae dec jne mov mov dec sbb sahf sub xchg jge aas insl (bad) arpl add sbb incl sarl dec mov mov out add iret testl sbb adc rorb or push insb sbb push xor lods xor add jnp ret adc mov jae mov aam sar mov (bad) pop arpl mov sbb lds in ret xor jmp iret push fcompl cmp outsb lds insb jmp inc fdivl cltd bound ror sbb sti in add pusha mov fstpl shlb inc mov mov sbb cmp dec add jns jle inc cmp (bad) xor or mov xor xchg sbb xlat cmp cmp int dec icebp cmp pushf push pop pop or inc xchg mov ds bound jge mov pop sub inc xchg aas cmpb mov push int aam jb mov test mov cmp bound rep xchg cmp aas popa (bad) mov cmp fdivs cmp adc test sub mov clc add (bad) mov dec cmp rolb btcl negb lods cmpl insb shlb inc xchg les lret daa aad pop cld idivb cmp and add cld imul mov cmp rcrl fisttpll imul out mov cmp scas ret je cmp aas mov imul leave jnp dec adc loop loop inc hlt sbb xchg mov repz xchg arpl repnz xor sti iret dec cmp call cmp test flds mov cmc and arpl pop push jge sar je and int3 push je fadd mov (bad) jae push movsb icebp xor sub and hlt orl inc mov cmp lds repz (bad) pushf xor aam mov xchg ret scas aas (bad) bound xor sub sub adc (bad) or inc ss xchg add push cmp cld (bad) mov mov (bad) mov xchg dec mov cwtl imul cmp pop in cwtl hlt xor pop mov pop xlat mov and mov inc and add jge int ljmp mov sub ret xor and movsb idivb cmp lret jnp cltd cmp adc dec mov mov shlb push mov mov ds mov adc aas add inc hlt ret iret and aas inc add mov sub cs cmp pushf aas inc and fdivrs (bad) stc imul jb lret sub hlt and xor jb fidivl mov ficom mov test dec iret stos nop test jbe fisubrl xor inc mov aaa mov add pmullw aas test adc mov in xor rcrl cmp cmp aas negl ror xchg mov cmc icebp xor jb test xor lods or inc fcoms into insl xchg mov inc pop add add and test sub popa xor jns popa xor mov popf in jbe or (bad) push xchg int3 jbe xchg (bad) jns mov push adc cmp fstl aas dec adc ret and mov add repz int push add pop jb enter pop jnp (bad) mov mov jno add pop clc (bad) repnz pop gs cmp outsb arpl pop cmp sbb arpl (bad) adc mov mov cmp add test loop adc ljmp and out inc adc and int fst stos sub stos sbb divl (bad) mov outsl iret jae ret cltd int3 idivl rclb xchg cmp or nop or sub ficoml adc bound add push xchg cld mov popf stos jo aas insl or sub in cmpsb push jnp daa insb dec arpl arpl shl cmp add inc mov ss ja ret scas ja fmuls jb pop add add nop cmp add rolb cmp in aas inc add xor mov sub inc and push sub sarl ds cmp or lret pushf idivb mov xlat mov loopne mov inc inc jae sub jmp add cmp xor popf sub mulb loop inc mov mov lahf push (bad) icebp lods xchg cmp mov popf aam cmp test adc (bad) ljmp mov or fist iret push fsubl ret fimul ss cmpsb sub scas cmp movsb aaa sahf or js inc and ljmpw sbb outsl cmp fdivl and xor push cmp cmp aas cmp add sarb and mov adc pop mov lret (bad) xor aas cmp iret add hlt add inc cmp mov ret and xor jo cld xor pop cwtl push and jmp sahf add fdivs mov xchg mov xor sub aaa push cmp or mov push insb in ds push pop push inc adc xchg enter js sbb (bad) cs pop mov sub sub xchg cld bnd clc pop sti repnz mov xchg jb xchg rcrl push sub or mov enter jb jecxz add xor out in mov addl xchg cmp jmp push mov dec sub subl and and js imul cld test cmp xor dec into cmp dec daa push lret adc fbstp cmp aaa in hlt cs jae jne sahf ja sub fild xchg xchg cmp out inc mov popf push js popf repz dec push mov (bad) aad aam xor and jne cmp xor loope adc xor ret fsub mov or cmpb dec mov inc cmp cmp ljmp sub and cmp mov sbb int mov data16 jne pop push sub push cmpb (bad) pop rcll cmpl clc mov jno inc popa jmp (bad) jmp sbb mov mov push push sub cmp aas in mov add mov ds mov cmp (bad) mov int lods or ror cmc mov mov sarb movsl adc and inc cmp adc sub (bad) xor cmp or mov leave sub leave jae xor inc xor dec mov and loopne pop xor mov inc adc cmp cmp aaa mov dec xchg test xor hlt sar jge aas dec and add js outsb xor int3 add subl jae or (bad) mov xlat insb inc push scas adc in mov mov int3 xor mov out fldl or (bad) xchg cmp cmp mov subl cmp xor adc movsb xor testb shr mov or cmp sbb mov push and cmp adc cmp ss mov movsb and mov in (bad) mov jb or inc jbe fs in sbb ret fwait loope add sub mov (bad) mov add push (bad) fisubl pop mov mov jge lea stos cmp sub (bad) test andl sub in stos sarl sahf and mov incl mov ja and xlat inc mov dec fimull mov (bad) cs cmpsl mov mov inc and data16 arpl cmp mov pop xchg or mov aad int3 cmp fadd xor test fldpi sub lea push sbb lcall (bad) cmp ss cmp test mov in stos sarl or add sub add sbb cmp mov mov sbb cmp arpl mov push ss mov and sub test (bad) cs pop mov xchg add mov xor mov mov mov mov movsl mov daa int dec fisubrl loopne imul sti mov mov ret or push fwait arpl mov test xchg and pop push ds push mov fadds sub or adcl notb xchg xchg popf addr16 in mov mov in sub add mov push mov lock sahf add mov dec sbb aas add push test je fsubrl movsb pop shrb cmp push hlt sbb lds lock xchg fild into add sub and gs lock popa (bad) mov sbb inc cmpsl fcmovu sbb (bad) mov outsb lods inc (bad) sbb or jmp push or sub sub add je movsb aam ret nopl std pop sbb add adc push dec call adc jle insb lds loope subl mov xchg insl popf test push out loope push push cmc dec out cmpsb (bad) jo pop sahf adc jge inc inc mov mov fiaddl imul push (bad) xor push xchg add pusha mov int3 mov xchg inc jp inc mov cli pop jp xchg push imul jns inc (bad) enter sub std lods (bad) fs fcmovu sahf or std jp jp js movsb dec dec dec xchg adc fmull ds and sub cmpsl insb scas insb lods insb inc lea in push push jno mov sbb fwait xchg js xchg pop jl jl mov mov js stos mov fsubl xor add push add mov enter mov mov mov mov mov out mov fidivr js mov dec sub leave sub lcall mov pop jge add push daa push and jmp test xchg out mov call lods mov inc push movl add (bad) xchg inc js cmp or scas aad orb mov fstl out ficomp jmp mov out insl rcrb test in pop out out loopne mov test repz pushf cltd pushf popf pushf loope pusha insb fstpl pushf xlat sbb in in loopne ds mov jecxz jecxz jecxz jecxz jecxz pop std pop cld pop sbb push xchg addr16 gs popw cvtps2pd push inc pop test xchg test inc pop inc ucomiss pop ficompl pop fcoms mov inc xchg test add imul bound out loope jl popa xchg dec xchg in xchg rcl insl in imul push rorb aad pushf sahf cmp fildl inc int fstp (bad) out mov icebp fimul in out out into in hlt fmuls fsubl push pop pop cli imul int3 outsb insb mov cs and mov push incl add pop push xchg jmp add jl emms adc lods clc adc lods xchg pusha (bad) xchg in jmp pop sub loope stos push pop icebp pusha movsb mov adc imul int (bad) pop sti daa push sbb sbb lea (bad) cmc sbb xchg xor outsl push or push mov or and cltd sub outsl cmpb cmp ds gs inc mov ds or imul dec xchg pop imul mov loope cmpl sub (bad) inc dec cmpsb test lods push push mov fdivrs sbb fistpl mov sub push icebp dec mov nop fdivs fidivl pop pop push sahf mov dec call insl (bad) xlat lret mov ljmp jno inc ja jecxz repnz pushf sub jno cld mov and daa lahf sub adc or jnp lcall and sti loop dec repnz push loope jmp loope sbbl ljmp mov pushl test push iret add mov fild push jns mov cmp mov add mov pop bound movsl cmp icebp xor mov pop sahf pop jne icebp xchg loope aad out (bad) scas (bad) je orl sub pop cmp insl movsl ja mull mov out jmp adc sbb cwtl icebp mov stos xchg jle subl test ret mov push pop xor sbb sbb in hlt pop (bad) add mov adc add cmp sub adc dec mov mov fcompl mov (bad) je cmp pop outsl or jbe sub movsl push inc sub mov sbb and fidivl xchg dec shll movsl fimull push mov jo rcr cmp divb cmp (bad) mov xchg mov fcmovnbe sbb fldcw mov insl mov cmpsb push xchg mov and mov pop cmp mov in repnz sbb (bad) dec outsl outsb jbe mov (bad) rcl sbb hlt aam ds pop push push mov or es lahf ret fs adc fldt pop and xchg jo (bad) movsb pop imull mov out lret idivl orl xchg mov out clc jle cmpsb mov pop movsb ljmp insb cwtl roll stos imul mov loop loopne iret mov inc jns cmp cs mov xor lahf out cmp sbb leave loop or shrb movsl push and mov lds es pop hlt jp pop mov mov inc shl insl and mov inc rcll sbb adc aas cmp shrb xor sub dec into pop mov loope mov xchg divb add add (bad) (bad) or cltd mov xor xchg cmp push jae icebp xchg dec inc loop ffreep dec cli das bound cwtl xchg ret inc (bad) inc dec scas cli sar xlat int3 dec pop int3 inc (bad) int3 xchg dec (bad) or lret inc int ljmp aad int lock sub stos jmp pop mov and jg stos mov mov mov cmpsl js icebp pop mov mov and jg stos scas adc popa push xchg cli adc adc jle jne test push ja dec jg stos pusha adc rorb lahf mov cmpsl stc jp and push sub jg stos push stos nop stos in sbb adc xchg std sbb mov stos aad pusha adc stc pop mov sub sbb adc jns pushf or cmpsl std out push lea jg stos xchg cmpsl icebp cmp iret addl stc les scas adc xchg sbbb mov (bad) shrb insl faddl push fsubr ret inc lods dec (bad) int3 lods add (bad) jno or mov in shlb (bad) jmp iret or fmull xchg (bad) out jle pop in dec sub or pop fs in test incl dec inc clc mov sti outsl add ret cld repz mov push cmc fmuls fsubs xchg js jns idivb scas adc ds xchg add ret cltd movsl and jae mov cs iret and cmp fucomi adc and cmp jae or in in les dec es and inc xor jp xchg out mov mov mov cmp mov jmp cld aad push push stos dec or inc xor sbb push xor jmp mov nop das inc add dec mov call test pop mov roll xchg mov hlt cmp mov sarb addr16 jge ljmp das nop jns inc fnstsw mov and adc (bad) stos loopne sbb adc leave pop fadd sbb cmp in cmp ss ds jb mov test das (bad) jb add sub ja pop popa or stc aas lret push mov pop lods add cli loope mov mov imul cmp cmp aad int3 les or sub mov and shrb sbb int add cmpsl and cmp push push mov inc cmp and lret xlat add rol mov movb pop nop add push addr16 sub mov ret lea aad (bad) cmp lea xchg cmp lahf arpl in mov es add add aas inc dec das xlat cmp pop or test mov lahf adc call sub adc hlt jo bound adc rcrb lret add sbb xchg fnstenv ss mov sti mov adc (bad) jb insb inc or daa jmp or test aas (bad) ficomp sub fadds mov mov lds pop sub (bad) mov push or enter fcoms mov dec in push jb,pt lea pop dec mov mov mov gs inc xor adc pop js mov sar sarl add xchg cmp mov mov adc add adc les mov into inc lods daa fcoms add mov (bad) enter test addl and mov xchg ljmp (bad) mov ja mov mov lods xor ds call jl aas or add and sub lods add dec fnstenv shr fcomip mov pop add ret pop mov dec aam add pop push cmp data16 ljmp loop or fild loop inc add or jo cmp lret cld shrb push cmpl cmpl xchg cmp cmp and ret mov (bad) stc (bad) in fs mov loop movl push into sar das in mov leave and cld and lret movsb xchg xor and jl adc sub inc mov cmp jnp sbb jp sub xor lret lret lods aam lock enter push incl xchg pop dec pop fs test aad outsb pop jle push orb push sahf mov (bad) pop lret push sbb fstpl addr16 fs pop loopne inc push dec or loop mov sarl aam in in lcall pop into push int3 xor (bad) (bad) stc les fadd insb dec (bad) in (bad) push push negb cmp cs nopl jecxz (bad) (bad) mov xchg bswap (bad) rolb clc mov or aam sub pop lret jo sbb mov pop push jmp out lcall push aam imul rol jmp push ret inc stc mov inc sub incb outsb in fmuls (bad) aam pop jg lods mov (bad) cmc test jecxz ret clc in pop jle mov push jno mov sub push loop in mov loop (bad) mov inc hlt sbb les movsb adc pop (bad) push add fwait pop cltd pop dec lcall lods dec out lret inc lea mov (bad) ljmp dec pop ljmp ljmp orb mov fstp cli out out out int sub dec (bad) call inc inc in fs cmp loope loope loope xchg fwait cmp outsb mov test xchg fidivr fstpl std push int mov test mov mov inc add add jbe stc scas leave mov xchg (bad) push fdivr ficomp xchg push dec pop pop in mov sahf push je dec pop (bad) call xchg out fcoms pop ss inc (bad) (bad) mov testb loope loope push pop push sub dec jle jle test test pop push dec pop outsb sbb aas ss inc inc (bad) dec jbe testb (bad) (bad) outsb data16 add outsb xchg push (bad) fs fs lea mov (bad) mov lds dec (bad) lea outsb inc add in out fimul pop pusha lea and sub cmpsl out pop pop std pop cld pop sbb push xchg add xchg or test test test test test lods mov inc add add pushf insl lret enter fsubr leave stc xchg mov mov xchg add mov xor mov or jg adc roll bound pop mov mov jle mov and stos decl pop pop sbb push pop rol lcall ffreep jecxz mov in lods enter cld push repnz mov mov ficoml pusha dec leave scas les mov adc xor inc cltd sub movsl cwtl sarb inc dec imul popa adc adcl sbb sub stos fwait jl add push xchg (bad) loopne mov or fimul inc aad cwtl mov mov and rcrl lea bnd jmp insb shrb into sbb sbb and push add cmp sbb scas mov push or loopne (bad) hlt xor cwtl pop movsl push sub dec and insl ret (bad) shl pop adc in lods mov adc cmp lods (bad) cld vpor (bad) popa pushf sbb or out call leave jge or dec fiaddl js inc call cmp test jns sti (bad) push outsl push into cmc mul push pop ss rcll mov cmpsl push push pop push push clc mov xchg (bad) loop or loopne push mov mov (bad) pop (bad) in es push push pop (bad) or xor and (bad) or push ret jbe mov int inc std sti imul iret cmp inc std mov sbb sbb cwtl nop mov aam aas les or sub dec pushf add ss adc shr repnz mov mov fbld (bad) mov (bad) ds mov mov pusha stos inc outsl test jnp test adc mov dec daa jle mov xor mov push scas loope pusha pop lcall mov (bad) mov (bad) and ljmp roll cli add sar xchg xor cwtl push mov dec sti fxch stc in adc and outsb into int out out outsl push leave rolb sarl mov cmp (bad) pushf test dec xchg popa mov xchg or push mov cmc scas xchg adc sbb mov fistl aad cwtl add dec dec or fidivrl xor les lret les popf cmp fildll fcmove push dec xor and sbb cmpsl sub or sbb push xor out jbe (bad) in clc push pop insb in sub fsubrs fdivs jl repnz dec sbb (bad) adc xchg (bad) sbb add sbb cmpsl fdivs mov cmp mov lock out pop test (bad) pop fs es mov hlt imul nop dec mov fwait aas aad mov aas mov lret pop adc outsl push or jecxz ja (bad) sub push outsl push or add push das mov xchg mov pop lock fidiv jecxz dec pushf loopne cmpsl adc dec push xor mov lods push (bad) enter test fsubl add jp mov lret or out mov mov pop in invd xor push fiaddl lods mov mov jmp or std sub cltd in dec stos test jne (bad) jmp fadd in int movsb xlat jns mov aaa mov mov inc push and push andl sbb ret or push popa add int3 sbb cmp popf aad inc in mov xor stos push jnp inc (bad) mov push jns mov jo push into sub xchg mov test rclb and lds or cmp pop push fidiv fst jbe push shrb (bad) loopnew,pt loope jge aam jne mov mov and or xchg rolb insb push call jne add xchg cmpsl push ficom pop mov mov or jnp cld fdivl push decl or (bad) sub into lods or and (bad) push (bad) shll push mov add lods popl inc nop sbb call out ret int3 fdivr (bad) inc xor out xor mov (bad) cmp movb jne in cs fmul mov inc pop mov stc jnp add add jmp pop sahf push loop bnd insb (bad) lock sbbl push sub push mov adc repz int sub stos adc adc mov addr16 in cmc repz ror dec jmp lds in push mov iret clc mov mov pop enter jno shlb repz mov pop mov pop mov mov mov jp mov ret sbb (bad) jle fistl fwait loopne xchg adc and add rcr rclb jne and (bad) imul loopne imul (bad) rclb push into or cld mov lods testl in pop jmp push insb sub push test hlt cmc out orb sub adc dec notl mov (bad) pop aad cs lahf loopne daa inc iret lret sbb lret lahf jns sub or lods js pop cltd test mov pop ss xor int and in mov xchg sbbb add jmp imul push xor ficomp mov in cmc xorl dec je pop mov popw lret push adc dec enter fstps fcmovu add dec xchg int3 (bad) sbb pop imul ljmp dec xchg aad int3 outsb (bad) jo mov jnp pop loopne mov jb or push (bad) sub mov pop popf ds clc mov shl jp lcall push (bad) push adc push inc cmp push and push (bad) bound mov faddl jmp add mov cmp sbb mov std testl cmp addb stos jne jmp cmp sub repz add or das scas out jb inc xchg push dec daa dec daa int3 inc inc or mov ret pushf inc aad iret arpl xadd adc movsb xchg jle inc push in shrb lods fistpl pusha fcoml sub hlt sbb xor test rclb pop jecxz lods aam fwait into int adc outsl (bad) icebp jge pop lahf (bad) xor jp cmpsl insl popa out fisttp mov add fadd dec mov pop divl push inc adc cmp mov rclb inc mov dec pop cmp and in sbb into xor in data16 subl es cmc clc sub je stc cmp loopne pop mov adc mov adc jg,pn jl jl mov rcl iret lds loopne jmp mov sbb cwtl lds stos dec lods dec popf pop pop cmpsb rorl inc cmp dec mov xchg out jbe ret and and mov and (bad) lods xor loopne lods shrl decl out push in movb dec pop lock test orb sbb fxch mov and adc hlt sahf lods mov shrb ror mov mov mov or aad mov arpl adc rcr jne insb mov sahf mov clc int cmp insb jo cmp sub mov fcomi (bad) push or jecxz adc and sbb inc dec (bad) ljmp cli aam movb (bad) dec fimull int3 sub mov ficoml lods and (bad) into jecxz les pushf xor inc jecxz pushf andl fsubrs adc hlt out lahf add pop push and lea mov dec inc xchg xchg icebp push nop in hlt mov outsl push inc mov jle fcmove mov or inc jae enter fldenv out (bad) mov fistp dec sub push insb mov add roll dec fs ror sbb iret or ja mov ret es pushf add xchg mov jae inc ret cmp xor push cmp sahf fildll jbe adc cs mov dec icebp xlat test insl pop jp mov fdivrs ja mov pop mov pop and adc push shlb xchg and dec fmull dec lcall popa sbb mov sbb push test jecxz repz dec stc xor (bad) in pushf push push js xor and (bad) loope or aas addr16 mov pop cmpsl insl aas xchg xor push add sti cwtl lcall in movsb xor divb xchg (bad) test push sbb js and cmp in or insb push mov jp add movsl fs les int rorl fstpt sub mov inc mov xor dec mov xor outsb ret out popf data16 pop mov ds mov mov sbb dec jmp xchg cmp push cmpsl cmp or push sub insl mov into inc je mov leave dec mov (bad) scas push cli (bad) int push mov dec push outsb fstpt mov push stos sbb and ja cs jb and ljmp xchg mov pop xchg inc orl cs test ret (bad) push push jecxz divb mov out dec cmpsb (bad) repz test cmp lcall push sbb lret js xchg xlat fstps sbb jne negl std pusha icebp ret mov mov iret inc insl ret cmp aaa xchg jp test test jecxz repz in mov fstps repz ret inc dec mov fiaddl push stos cmp jg mov movsl jg jo xchg stc mov jnp jno push gs fimul add jecxz pop sti jecxz xchg rol insl xchg test xchg sub xor negl lea (bad) dec inc push dec and push cmp ret push cs sti mov sahf cmp out fcoms pop (bad) stc pusha push loop imul push inc ficoml leave in fadd pop lea push mov adc push (bad) pop int (bad) sti ds cmc mov dec xor (bad) fisttpl or insb add ds lea out dec (bad) cmp pop and out mov sbb adc mov push es (bad) sarb xor cmovl (bad) dec shll test popf lret lcall fadd sub insb jle xchg popa std mov dec movsl imul and cli fidivrl pop insl inc out push dec stc jnp push fistl hlt ljmp cwtl jb ds mov lea xchg lret shrb dec aam punpckhdq cmp lds mov popl mov mov inc popf movsl mov rolb mov cld fwait jl ret push push out mov iret mov fbstp clc xlat lods stos sbb cwtl (bad) push xor mov in movl ret pop out icebp inc push mov popf in (bad) xchg fistpl scas lret cwtl and (bad) outsb loop aas dec movsb outsb hlt cmpb xchg movsl dec mov ljmp test sbb sub jo cmp imul orb inc jne push push push lret mov fwait push dec pop or mov inc (bad) push shlb push imul xor dec or dec sbb aas in push aad jl add fcompl fwait out dec outsb add jne out insb adc cld cmp cmp ds inc outsl mov mov (bad) jp inc leave fisubrl xchg (bad) mov inc push stc fisubrl (bad) loopne or pop sbb pop xchg pop push rcl scas push sbb mul add jne or push popa pop push pop lds outsb mov cwtl adc lds orl aad or dec and sub hlt daa sbb or inc xor mov aaa fisttp or and in mov icebp (bad) daa push mov or cli daa mov inc dec mov xor lret jo mov cli mov aam mov out lods stos sub pop pop aad add mov xor pop push jmp lahf inc fldt fstp mov xorb packuswb xchg shrl inc add fsubrp mov push cld leave hlt ss (bad) jmp lret lret sti jns cli jmp outsl and mov stos popf push xchg xchg rcrl (bad) lahf push fisubl sub cmpsl fidiv cld (bad) std in aaa jp pop mov fs daa daa addr16 arpl or cmp je (bad) pusha push pop and test addl sbb xchg movsb in xchg in gs add call insb (bad) leave fmulp dec loop dec incb add out (bad) fmul xchg jno daa xchg jg add in sub movsl movaps pop pop lods adc and xorl inc sub cli pop xchg lods stc ret clc ret dec fadd imul mov int3 jno mov mov repz pop aad (bad) xchg sub mov mov adc pop xchg movsb test out jbe adc imulb xchg or xchg mov out and cltd inc xchg jge mov xchg push cltd inc mov es clc shrl xor (bad) push out sahf xchg lods bound and mov (bad) ret push outsb ds inc testb sub push mov push in jp out jmp test mov shll repz mov outsb xchg jecxz fnop std mov mov ss lahf mov xor mov insl dec cmp pop or adc pop adc outsb mov (bad) or mov sub ds adc repz jmp seta mov inc or sub add pop ret sub pop addr16 in sub xor push xor jecxz cmc loope data16 jl inc or cwtl add test dec mov xchg fnstsw pop (bad) mov scas and sub add mov lods cmp add sbbl pop js and dec subl ret xor sbb (bad) xchg jno cmp mov mov int3 push repz nop nop jl mov sub shl xor mov pop push js mov nop shlb adc outsb xchg mov jb jno mov (bad) movsb cmp jbe cmp push enter add out or lea mov mov mov cli pushf sub lret (bad) cltd sarl mov stos pushf pop repnz push cmp loop mov push lcall and fs or or js test or fwait es pop outsb fidivrl mov je jae cmp mov ja cmp cwtl fidivr xchg mov data16 mov adc repz pop cmpsb inc cmp dec xor xchg sbb add cmc inc cwtl dec cs push daa daa mov lcall sbbl sbb xor jle insb push rorb insb daa dec loopne xor xor ljmp or nop aam jl and xor cmpsb rclb add sbb cmp ja jbe pop stos inc (bad) (bad) xor lds ret push and dec shlb les or dec pop bound adc inc arpl or adc in xchg add dec outsb add and xchg push jo imul mov (bad) (bad) fadds jne ret shrl movsl mov cmpsb or dec sbb adc out dec mov imul push inc jno arpl pushf xchg loopne (bad) in or pop movsl jmp sbb frstor xchg jb sub and ds or xor inc push sub pop mov lods cmp aam dec fnstcw add gs adc mov sbb das loope inc fisubl cli (bad) xor es cld lea dec xor pop inc in imul test mov or data16 xchg jp mov and and aad jne push push adc or insl xchg movsbl ret loopne fucomi sbb pop pop das imul mov repnz jno,pn hlt ss mov mov insb das mov fistpll or sbb clc xor insb daa (bad) hlt mov lret push add inc out mov mov (bad) icebp ficomp mov scas loope frstor and scas aad push lds mov ds outsb fs dec xor cltd ss lret xchg hlt jbe in cmpsl fdivrs sub fild or xor ret adc and jo rcr jl ja mov subl ret aad sbb insb (bad) mov xchg dec (bad) gs jb mov cmpsl jb ds mov movb dec fadd sar leave push hlt pop and sbb xchg arpl add xor and inc jg je scas and xchg mov and jecxz test data16 inc popf jge fs (bad) mov xor (bad) stc sbb aas test insb cmp cmpsl insb bound cltd sub inc jl cmp add xlat subl ljmp test and add and add stos mov xor jmp pop int3 mov sub sub fdivs mov fcmovbe xorl arpl js pop test mov xchg jne lock adc imul jno push clc mov xchg cs pop mov mov lds xchg xchg dec push sbb xchg cmc fnsave xchg call shr cmpsb in push sbb insl adc cld push pop imul and dec push iret jg (bad) pop fimull xchg ds gs cs repnz shrb lea pop fistpll push pop xor mov loop gs jl mov std jecxz int3 and fisubr dec cwtl sub mov push xor push inc cli arpl cmp (bad) scas xlat (bad) pavgw fidivrl push inc rclb mov in push push and insl popa jo jle mov loop push sahf ss fimull mov loop mov repnz cmp mov ss inc push xchg jnp pop es arpl lcall and sbb fwait pushf mov daa cmp add jno aam cmp add push hlt mov jb sarb dec jno mov mov push mov sbb push aaa fadd les mov mov fimull movsb and jg mov in xlat gs xrelease xchg call pop jbe call mov jae lea lret sub pusha cli bound mov sarb mov xchg inc (bad) cmc cmc jmp sarl cmp sarl pop pop pop imul clc lock out xchg mov sbb fsubr repz push or jb dec loopne gs add lock push pop movsl or es shlb mov scas ljmp sti pop push pop sbb aam test cmp mov test sub (bad) xchg mov out enter es pop pop fimull cs bound mov outsb mov jl mov push ret sub dec cmc push repz mov outsb pop or pop (bad) jecxz xchg (bad) xchg ja and mov insb inc push in xchg sub (bad) lret add sub gs in lods and inc or sbb cmpsl into into sbb xor cmpsl xchg dec jmp xor clc dec jb xor add mov (bad) mov test add mov sub jne in or sub jnp sbb sti mov lods sbb pop inc popa cmp cld inc scas fsubrl nop pop fsubrl sahf (bad) fsubrl push dec jbe inc and xor pop cld push out xchg enter and (bad) add push cmp dec cs mov mov call pop lds and inc test out and mov push daa call fiaddl xchg lcall ds std xchg mov and pop and and mov call movsb outsl pop and fcomps icebp lret out mov and and aam ret (bad) pop ret mov lcall outsl loop add pushf and and out add mov mov dec inc iret sub dec cmpl jns adc jno jle fstl sbb sahf add adc je faddp xor adc push ds push push mov and jecxz in pop daa test fnsave push lret rolb sbb outsb xchg sub cmp pop out sub sbb mov mull into mov lea je pop lea jo imul daa add in jecxz enter pop pop pop add pushf fdivl sbb push sub mov push lock popf mov cmpsb pop sub (bad) dec test in adc pop mov pop and push mov mov imul inc (bad) jno sub mov pop mov sbb jl mov jne test push lock dec jmp outsl popa mov mov test lods loope fist push divb lods daa and orps jl jge cmp push inc sbb xor (bad) hlt daa ljmp jg sahf flds jle scas push lock dec in inc push movsb popf add mov inc dec jle adc mov push nop nop sub mov xchg or popf je push mov in adc dec movsb add or jge dec inc cmp dec int3 inc and inc sub inc mov jmp shrb sbb sub sbb xor adc push sub mov push das jl cltd pop movsb or push add dec adc shll xor (bad) ficompl das xlat outsl push push lea lock and push leave in movsl lods pop ds (bad) lea xchg sti cltd mov cld push mov js inc loop jecxz or mov jp jg push jecxz or mov inc sub jge and popa fcom dec insl je cmp cmp icebp xchg mov shr leave call cs mov push cmp leave dec out sub xchg enter lock xor addr16 fucomp lods std add cmp sahf aas xchg jmp inc out cmpsb nop mov je inc int3 push dec push inc jns jbe stc and mov ficompl daa sar ss das xchg ficomp pop cltd mov sbb ss ja nop test sbb aam push cmp pop test jle popa adc fadd and inc test repz movsb aam ret jl mov jp lret stos push iret xchg dec bound pop popf pop mov int repnz inc js test and sub rol xlat out dec daa mov mulb inc lahf daa fs imul or mov ficompl push orl insb sub sarb dec aad ret mov cmp out dec ds sbb or addr16 into mov mov stos jae loope mov sbb xchg ja xlat call (bad) jge mov loop hlt sbb std cmp push sub jge add fisub cmp or mov fcoms mov sti shl push out or mov fstl repz adcl das fsubl mov push and test and lret mov ret pushf pop dec mov cmp test jmp sahf (bad) cmpsb add outsl mov dec cmp jnp imul cmp dec mov or lret add inc cmp sti push in sti andw cmpsb push aad xor add mov xor aad popf add jg add xor xchg and mov sahf dec fdivrs ret jae inc dec mov ficomp sub (bad) fldcw xchg ss int3 loope int3 inc pushf int3 push in int3 add int3 add les fmul imul aam ja int cmp es test notl imul jl sarb stc dec sub std add adc lock sbb xor cmp lcall push out sub and jo mov and pushf xor dec stos les into dec pushf mov enter sub lret iret std mov pop arpl inc mov push adc je pop jecxz xchg pop push sub test in mov (bad) fwait mov jmp pop nop jmp scas (bad) or pop inc (bad) mov dec jecxz (bad) das mov add push daa inc cwtl sbb ds mov pop adc in loopne adc hlt loope jo jle in fldl call xchg mov xchg adc sahf cmc inc and movsb cmp aaa inc (bad) aaa inc inc test lret mov decb push hlt rcl jne or mov aad sbb pop iret push lods jno mov dec (bad) mov dec std mov and cmp fidivl or clc jmp daa daa cmp pop mulb and mov rclb xchg adc bound adc aaa or sahf xchg push xor xchg repz sub and js push xchg mov fist mov dec add pop mov (bad) lret sahf hlt jae leave (bad) push adc xchg add sub push mov jbe and in or lds mov push sub cmpsl inc jae mov adc insl adc pop aaa push (bad) mov (bad) stos popf in lret mov pop xlat outsl mov xor jmp mov aam mov push test sahf rorb repnz cmp dec inc sbb add das jle dec repz outsb mov mov test cmpxchg into mov (bad) pop ljmp add or push xchg iret (bad) mov and fnsave loop pop ret sub xor sbb push dec push dec inc push int xor xchg inc and sub jo insl (bad) fnstenv ljmp adc add sarb mov lods add mov insl test negb lock nop lods cmp add xor push push mov pop data16 mov xor pop jbe inc mov cmpsb xchg (bad) mov (bad) iret jp hlt mov pop adc push inc in inc sub mov push xor or xor pop leave test inc mov ljmp cltd push push mov adc clc outsb mov sbbl fisubl jg push sub jns inc xor nop/reserved xor adc push xchg ret lret jecxz push inc test and sbb xchg pop outsb mov fldt cltd inc mov mov in and (bad) aad push pop rclb cmp mov data16 cld loopne ret push mov mov or (bad) jbe out or clc xor pop dec in js push aad addb mov rep std pop loopne push sub ds in (bad) mov and imul loope fcmove sbb (bad) mov cs ja test sbb es or xchg xchg sbb adc popa cmp addl push imul fstpl lcall in iret movsl and popa cmp mov mov cmc xchg mov xchg cmc dec outsl sub or mov pusha cmp or mov ss cli into arpl adc inc add inc dec xchg or fsubp das add sbb hlt cld (bad) mov hlt cltd mov movsb jns out and (bad) lds cmp mov mov cmp xchg gs add out lea stc fsubs cwtl movl shrl cmpl jns mov mov rcrb xor mov gs dec ret jns mov sbb xchg sbb jb movsl xor xchg push push js cmc in dec pop inc sub fcoms ljmp iret push repnz xchg add xchg std outsl mov sub in push mov mov popf or or sti adc jg repz data16 fidivrl js stc push or sbb es adc dec imul jne es adc rorb mov mov inc iret mov mov push sub xchg cltd call leave sub in xchg mov out lret mov cli in dec lret roll cmp outsb inc std rcr lods push rol mov mov insb mov xlat sar sahf dec push ja ds insl xor mov dec adc scas mov push push inc gs imul fidivr mov mov sbb and (bad) xor imul sbb daa jbe mov das insb add and rcrl add cmp adc stos dec pop das jmp repnz jns cmp out in (bad) sub and xor and mov test mov in jns mov addr16 mov movsl (bad) mov pop sbb jo insb mov dec mov push push sahf xlat subl fstpl inc or lods je insb daa popf inc fimul add pop pop pop xchg lds mov test les pop cmp stc pop push mov mov repz cwtl cmp jg push cwtl out je repz mov inc in cmp je insb daa bndstx sub dec out sub das (bad) sarb pop (bad) pushf stos pop loop mov bound dec pusha sbb inc mov cmpsb gs sub sbb insl jnp cltd icebp inc mov mov xor in cmp and in cltd cmc fisub pop adc cmc inc sub (bad) mov cmp in sub lds call sbbl inc daa (bad) aas stc int pop addr16 enter test or cmp idiv and jo sarb inc mov inc cmp aaa rcll mov arpl call repz xor jnp aas xor (bad) int push pop dec je es stos cmp adc push (bad) aaa mov or cmc xchg loopne test (bad) pop push scas dec cmpsl pop (bad) lret mov movsl cmp in xor dec jecxz cmp test adc add test scas mov dec aad or std int3 jl lea pop xor mov xor (bad) pop sti dec cmc lods gs call lods test lcall es cmp xchg and adc bound dec imull out xchg sti mov ret add add in lea pop adc jl int3 and jne cmc mov enter add xor (bad) mov sbb fdecstp push jnp push pop mov imul and jo xchg dec addr16 ficompl lods and ficoml (bad) outsb and cmp inc or cmp mov data16 cmp adc xor mov inc loopne (bad) jne in pop les jbe fnstsw ffree test sub rcrb jecxz push cmp pop js out aas xchg mov jno xor jne lock ret aad xor dec incb pop sbb xchg lods sub fs jmp aam sarb jno arpl nop in bound hlt push mov jo inc daa or push sbb cmp jo or jnp loopne add sub insl sbb lret xchg hlt mov (bad) rorb in xor (bad) sbb mov mov add mov lods xor push js hlt jno xchg add inc mov int sub (bad) inc repnz sub dec mov and sub xor pop jmp lcall mov xchg (bad) arpl cmp adc fs fimull rcr arpl fadds ja inc mov or mov pusha ljmp lea pop cmpsl push hlt aad dec insb sub mov rcrl sub lods imulb jnp sahf jecxz cmp cmpsl imul ret lret dec sub mov test push insl fnstsw push (bad) nop inc pop jb xor dec add or xor and dec jb adc pop adc push mov jge imul pop sub inc adc xchg jmp xor jne jno test lret xchg xchg mov mov mov in add pop outsl pop xor out ljmp push (bad) add shlb jl lret jo sarb clc lret (bad) and pop cmp scas mov repz jnp movsl or fadds sbb and divb pop (bad) push ret jmp stos xor push jmp xchg lods cli hlt (bad) rorb xor sbb dec outsb loop sbb pushf lock pusha gs mov mov ret lret cmpsl call insl pop push push xor das inc jp or dec pop in jb iret rorl sub js (bad) jb rcrb or mov mov pop dec insb sub stc roll fwait xchg xor call ret mull mov adc insb stos or cltd movsb iret lods sbb sbb and jle inc out dec sbb push mov adc pushf or lret xor sbb imul jl negl add dec int lcall mov or push mov leave push stc fiaddl inc les out pushf mov orl push stc fdivrp jns jb clc mov mov imul sahf cmp cmp nop (bad) imulb xor ds push mov dec rcr nop or das lret push mov push mov dec movsb mov aas movsl xchg mov sub xchg mov stc push sub dec jl mov cmp sbb pusha rcrb enter cmp nop and fistpl sub lods stos jl (bad) das fistpl ja dec rcrl das movsl jl xchg xor pop cmp mov push popa jns pop jge mov daa xchg jmp jnp mov test mov fiaddl test mov cld xor xchg push cmp ret mov adc cltd jno daa aaa push mov cmpsl test sbb ss jbe cltd cwtl xchg adc bound sbb mov lahf mov cmp mov lret ds xchg cld cmc ret scas pop (bad) jp pop (bad) jmp dec cmp push push shrb add test fsubs or pop push jp push stos js jns and js cmp pop xchg mov scas int popf inc dec jmp or xchg xchg out aad pushf inc xlat and aam fadd inc mov cmp jle cmp push sub in stos por ret (bad) les or sub in lods or fmull int3 xor dec (bad) mov cmpsl insl shl imul into leave or mov adc cmp enter (bad) adc and mov jecxz lahf shlb jg cmpsl scas out nop insl pushf jbe push xchg push ficomp mov cltd nop repnz je dec and mov xchg add or cmp mov sti inc bound cmpsl cld fnstenv xor dec popa push mov adc cld sbb movsl or inc push pop jne dec jg push cmpsb add push xor rclb cmp xchg sub pop fwait dec sub push inc daa jbe fwait stos lcall lret dec mov dec nopl ret and insl xor xor pop push inc ja jbe (bad) sbb rol adc aad xrelease dec arpl jmp pop push mov in out daa lret (bad) fimull pop mov lahf xchg lods push fisubr stc mov call push andb dec rcrl add and ret popl stc xor xor pop ror mov adc sahf xchg sbb mov dec or and mov test jne (bad) mov xchg test xor es pop inc push push in les data16 jg cmp jmp or cltd jg fnstenv notl sub cmpsl pop sub mov out sub jae cmp or in sbb imul addr16 push cmp (bad) js nop add lret push xchg std jmp in mov adc jns pop fimul cmpsl cmp adc popa dec inc bound pop sahf mov pushf daa sub and jp aaa leave pop cmp mov jge jg daa dec mov es aaa xor mov mov cwtl clc inc dec jne cli adc and adc mov scas sub stos and aaa dec stos add sbb lods pop sbb (bad) xor cmp mov ret test test mov int3 enter push mov outsl or lret xchg pop inc cmp lods push (bad) call mov or add (bad) jl ret rclb xchg outsl mov sbb imulb mov push xor jl pop insl js pop inc das rclb mov dec and push lcall stos fistpl ljmp rcrl lcall pop and adc ret call xor sbb (bad) out out int3 daa push pop into push pushf sti mov dec mov push or adc in and leave and adc sub insb fsubr ffree push int fistl aas (bad) xor add dec push fimul cmpsb pcmpeqw xchg cmpsl test cmpsl clc pop add (bad) (bad) xor fdivrl in push fistp in sub mov jmp mov fisub cmp fstpt cld jecxz dec imul cmc or test lahf movsb leave jmp mov adc in lcall pop xchg (bad) sub sub dec add mov lock cld and xor mov stc xlat mov (bad) inc or gs ret xchg test stos add addl nop (bad) icebp inc jo cmp xor mov pop xchg and jo rorl cs (bad) (bad) push push sbbl add sub outsb or pop out cwtl xchg mov xlat repz (bad) test (bad) shrb pop jo mov pop mov addb mov pop xor faddl sbb js push push sbb pop out addb push je push test cmp or add pop mov push mov je aad sti jl fnstenv jno pushf sti and push addr16 je lahf mov mov cs and jae jecxz jno shll sbb adc repz or ja ret adc out inc mov jne mov movsb shrl repnz or push arpl mov jb xor add repz frstor gs (bad) out pop or repnz mulb push in gs or jno fbstp ret fsubrs sahf sysenter hlt test js sub jne (bad) or pop adc sarl push mov mov pop or flds xchg out imul test roll or xor ljmp jp add cwtl cmpsb out jne mov cmovle fsubl push arpl inc and sbb mov je inc ja add sub xchg outsl cmp mov sbb mov mov jne jecxz or aas xor push or repnz and imul inc sub pop inc adc mov outsl xor push ja fisttpl imul notb out mov sub les (bad) (bad) cmp jg add jecxz insb repz or movsl jecxz add (bad) das cmp jg and arpl lock insb mov sub pop lds ret and pushf popa call xor ljmp int add nop xchg scas imul je loopne jle sub xor es and xlat xor lahf fstl xor adc xor and jae addr16 sbb cwtl adc or and xor mov jne mov lock mov mov xor mov aaa cmpsb out mov mov sti sbb and xor test mov adc ja mull cmp stos sti mov or push sub mov pop outsb outsl inc divb fildl outsl lea xlat pusha stos in sub xlat inc dec mov jle inc rorb mov in pop imul fadds xlat dec xor ja inc xchg or stos es adc xchg pop sub shl sbb int jb fdivs cmovnp adc jg loop mov (bad) jo (bad) jo xor or jbe in (bad) jl and stos dec pop adc test (bad) xor mov and rol mul rcr inc mov push push fidivr ja sarl test test inc mov in jns out mov push mov mov sbb xor leave jp imul mov addr16 jp mov xor sbb mov mov cmp loope sub pop lret dec mov dec lret in and lds ljmp mov repnz loope push arpl xchg aad mov mov ds mov stos mov jecxz mov lock out mov ror stos pop cmp inc popf fistl rcr pop insl cltd push xchg fcomps cs push mov fwait mov mov mov lahf and std sub mov sub mov cltd mov gs loope int clc and cmp dec sarb mov xchg adc mov jo add lret mov fiadd inc leave mov stos es dec scas test stos jl jb js mov stos cli cmp adc dec mov and or (bad) mov data16 movsb imul cs jge add inc dec or jbe mov imull mov xchg mov inc rorb inc xchg sub fs mov loope xchg data16 outsl adc jl mov and or inc push sub sbb cmp mov shlb enter std (bad) xor addb or add push adc or sub add mov push xchg add stc ljmp movsb jge mov jo imul xchg in push push lret scas push jb ficom fwait outsl dec shrb out mov cmpsb mov sub negb fisubrl imul pop js bound sbb cmpsl movsl shl leave jmp jg pop ret adc adc push push (bad) jbe jl lcall bnd data16 and adc cmp nop and loopne adc fsubrs adcl push or jb gs sti repnz lds and cmp hlt imul pop mov divb sbb and jge pusha mov cmp cmp (bad) addr16 push inc in hlt mov xchg ljmp (bad) inc or pop mov add mov sahf jno in dec jle lea mov cmpl out dec mov jmp jecxz sub or in jnp mov jle stc mov jns and mov cld ret mov (bad) jno lret sbb loope js mov sbb and pop push mov aad stos loope sub sub pop sbb addr16 (bad) mov sbb or and loopne and out rclb pop (bad) push push jecxz int andl lock mov imul ret scas add rorb push lahf jno psraw andl sahf lds adc outsl test mov loopne ds in faddl aam fadd push mov lcall frstor insl sbb push pop subb mov pop mov inc lea ds jne shll cmpsb test (bad) sbb push test cmp and cmp mov sub lock (bad) mov je mov pop cltd push daa xchg ret xchg pop dec xorl fsubs dec or fisubrl arpl clc xchg adc jnp mov addr16 cmp push aaa in insb push cs xchg pushf push push lods mov inc fild es leave sbb ljmp add fdivl push lea fadds push push out xor sbb aaa jmp ja jge mov in or addr16 push cmpsl inc inc and cmp test cwtl xchg and fs jp pop loope xor adc adc push or dec (bad) pop push mov std movsb dec ret xrelease push or push adc mov iret fiadd or (bad) cli mov andps clc mov mov repnz lret jle push sbb push xchg pop leave and ret out xchg (bad) inc lods (bad) cld (bad) mov aas sub push dec cmp rorl mov xchg and in or and sbb jmp lret loop cwtl inc mov dec add rorl mov rorb sbb (bad) and dec and or inc mov dec sub mov and mov mov rorl mov roll imul sub cmp bswap mov mov fildl dec enter orps push pop cmp dec adc mov popa add mov enter or sti sbb bound adc lret test das push xchg and inc out lcall adc or addr16 jno aam mov scas cmp js adc push and mov pop subl xchg add push xlat adc mov sub jno sbb sub add inc sub lods mov bound fbld push cmp xor lahf sub pop push repnz and push out shl mov lahf push icebp mov pop pop movsb dec add push cmp lds mov imul sub test inc xorl jp and xchg cld (bad) pop fsubrl out push push inc int3 xor aam mov jb sub sub imul cwtl sti inc icebp inc adc sub sbb jge jo repz fisubrl stos pop stc mov lahf adc pop jns iret and lods jecxz repz (bad) push pop jnp inc (bad) fistp xchg jbe stos jp cmc daa scas js icebp jp xchg mov mov cmp mov mov mov gs repnz inc stos dec roll push push incl or mov add in sub out (bad) int xlat adc sub pushf sub mov shr or (bad) pop loop ss jge mov push lcall dec push test add hlt nop dec test pop inc shl lods iret dec mov (bad) int3 (bad) sbb push mov or (bad) pop mov add xchg pop jmp cs push pushf push out xchg xchg in aam int3 ret jbe,pt cmpsl shrl inc lds jle in cld dec and les or dec jbe and inc outsl movsb js pop ficomp cli push leave into fidivrl xor sbb inc xchg pop inc cmp inc das je add jo jb mov mov xchg les or mov dec insb push jp push in out mov push dec push repnz jmp fnsave inc ffreep pop xor shll insl inc (bad) test jno rolb mov inc inc push or repz inc stc dec sub lcall adc push inc insl push mov cmpsb mov dec icebp xor jge popa pop roll mov subb mov (bad) lret sub loop out daa (bad) out paddd mov push mov pop movsb (bad) out pop mov mov jmp pop jp mov inc add ret fstp leave jge out xorl jmp or fstl into pop insb adc cmp push mov mov cld pop cmp test aas pop pop div popa sti add xchg lea cmp pop out popf add xor movsl cmpl jecxz stos add sbb jo jnp test and inc or push xor mov xlat fldl mov outsb aas in mov dec popf push fisttpll mov fisttpll mov je mov inc pushf loopne ffreep and add inc stc pusha mov sub test imul ss stos fs cmpsl scas push pop sbb (bad) xchg pop pop scas push push mov and stos test ljmp (bad) pop daa in push dec cmpl cld ds (bad) jae inc scas or mov fs pop andl or sub fimul pop stos cmpsl add xchg adc imul xchg bnd sub pop ret imul fbld jecxz jg es out mov iret mov and ja sub das out sub call pushl sub lahf fs cmp sahf add sub push sub or into das dec sbb sbb sbb pop or bound mov test or push mov sbb fdivp cltd scas nop mov or fistpll nop dec jle mov lods je inc cs hlt push jp push jp jp fnstcw add repz push jo jb loopne sbb ret (bad) hlt int jp ljmp xor outsl aas mov cmc xchg adc cli lods test pop clc xchg frstor scas pop icebp je out xchg or pop loope mov lods jmp gs fwait inc mov sub pop jne loopne xlat dec mov jmp lahf jns mov and testl fdiv testl sahf icebp mov pop je sub push cmc pop cmc dec cmpl sbb add xchg repnz xor xor pushf or repz (bad) out enter int3 mov lds sbb aam cmp dec les lods dec adc shlb ret shrb call loope dec mov push leave arpl mov (bad) dec lahf lret rol mov mov out inc xchg ficomp lret (bad) mov (bad) fmull pop gs pushf mov imul cwtl popf sub leave movsb sbb in lods inc pop loopne decb pop (bad) clc jl pop inc (bad) in or dec into mov sbb sahf cmpsb clc test fisubr int3 sub int nop hlt jge sub jne test mov fstps sar mov sbb inc lret subl (bad) data16 inc into aam in push mov jne adc test aad inc ret mov (bad) or and xchg push push push in cmp pop push popf (bad) imul fimul ja mov xchg cmp mov inc out xlat cmpsl ljmp sti mov pop cmc mov (bad) xlat (bad) arpl pop xlat mov sub in inc rcll out rclb and int sti add sbb xchg (bad) mov cli jo rclb pop in int3 jb int3 call lret jns lcall test stos xchg scas imul mov or pop jbe push stos (bad) ljmp jle test dec imul jp jp xchg lret out cmp es jle dec sub or xchg mov outsb sbb mov push pop popa stos push lea fwait inc roll adc adc sub adc lods or add inc pop push push hlt or call push jnp xrelease pop insl cmp jo sti jmp xchg aam sub into int3 dec xlat inc inc in xlat jmp ss adc icebp or mov and inc pusha dec (bad) enter add or push loop (bad) pop jp enter cli cmp cmpsl xor pop adc aam stos dec lahf lret adc xor push outsl xor pop dec xor xchg rcrb test dec insb jo push jl out ret adc stc cmpsb stos leave cmpsb cmpsl lar daa in iret fimull sbb popf lods cmpsl xchg dec sti push jmp in push sub and xor jnp clc icebp stc xchg sub and incl out mov fcoml cmp pop xchg sbb fucomip jae push sub (bad) adc outsl add push data16 sbb jo or loopne adc pop aaa push push testb xchg push adc xor ss lret fcomp js mov pop pop sbb adc cmpl test jo dec push lcall mov inc jae les jo xor cld je rolb inc mov adc pop xor mov add aas add enter xchg cld jge jnp xor inc xchg push adc js dec out (bad) rorl je push shlb and inc popf cltd inc mov mov popa shlb push iret jae (bad) push mov ss fdivl ret fdivl push int3 and push xchg fldcw inc lea cmc fwait cmpb cmpsl andl idiv jge rolb inc add mov mov mov loop leave pop stc je add cs jge aaa les sbb inc outsl nop dec add cmp jg leave leave mov test mov scas daa sahf pop mov sahf cltd pop adc (bad) push or inc aad push sbb jb inc rclb into aam mov je dec ja jae lret into lret mov add and xor or jns sbb das clc pop cmpsb mov aas lds cmp jae sbb xchg mov or or xlat shll in in ds sahf sbb movsl rorb inc lods xchg pop mov repnz add dec mov popf subl iret dec jo cmp jo inc fnstsw ja jecxz xchg aad and insl or jnp pushf daa add jmp fidivr outsb sbbl and popf pop push mov pop aas test and mov mov lock fsts add std xor inc lcall and inc lods cwtl adc mov inc mov cmpsb rclb and (bad) aam (bad) fcoms je sub xor std orl mov sub pop mov fnsave jecxz jg or outsl (bad) stc ret ret pusha dec shrb sub (bad) xor js xor adc cli dec inc mov (bad) or or add test ficompl dec push sub and add popa jge pusha dec xor pushf rol dec cmp outsl mov aas jl testl dec jns add pop outsb and cld call test adc jne gs xchg cmpsl stos mov push pop cwtl outsl xchg xchg popa dec insl adc sahf arpl stos iret xchg sub xor xor and pop push mov fs push outsb sub repz lods mov push adc data16 rol sbb xchg jo mov jb int lcall mov imul add cmp jno test xchg pop jns push mov lcall and scas test fcmovu and lcall jle cmc cltd add imull aaa sub mov or pusha or xchg push mov xchg mov mov int3 jecxz lret or cmpsl jmp lahf js std mov in ja daa insl hlt pusha mov imul ret jbe push fsts scas cmc push pop jb fs out mov (bad) leave add mov loopne jle imull xchg je push pop repnz push sbb inc sbb sbb or mov (bad) icebp lea jbe mov push jmp adcl cmp sub jp pop jl push cmp testl cli xchg lahf sub test data16 negb jbe add and pushw scas jb jmp (bad) or imul mov fnstsw scas fwait add mov inc out jle add nop inc sub lret adc cmp mov pop inc mov pop xchg stos lret sub adc stos xor dec dec and jl scas notb movsb js pop inc xchg dec sti xchg inc push push add jle jle movsb dec bound jp or rorb and xor (bad) bound mov xlat xchg xchg repz and mov push cmc push xchg cltd stos notb jns sahf jb ret rcll push and jecxz jae sub int3 jle mov jl js sbb inc jne mov cmp inc lahf movsb dec (bad) fs ss mov push sub sub (bad) int3 int3 cltd daa test add sar cltd mov mov xchg sbb out mov sti ret add inc shl mov adc sub dec lea mov lods inc and sub dec mov cli mov fistpll xor or outsb push iret or xor int3 gs mov dec cmp jmp enter inc dec int ffree fisttpl adc cld dec cmp jo sarb mov pop (bad) and int adc pop inc or fmul or xchg (bad) mov fmull ja push push aad divb xchg and xchg pop dec fadd in cmp int3 lods xchg xchg addr16 xchg cmpsl shrb xor lods mov rep adc cld xchg push add pop loop inc xor jae (bad) aad cmc pop sbbl pop push (bad) sbb outsl push (bad) pusha pushf pop in inc pop mov mov vpmovdb ret xor adc pop sub sub not xorb inc and sub insb repnz bound mov insl xor pop repnz xor sbb (bad) roll mov and std das and repz dec inc or add lods insb push enter and stos movups lret xor ljmp mov pop adc pop sub mov cmp movzwl push repz sub lods insl cmp out (bad) loope mov dec test lcall cmpsl repnz xor xor scas and sbb dec icebp cmp movups mov roll (bad) cmp rorl les iret lea scas pop dec insb pop or inc cmp mov dec dec stos daa gs dec fstpt cmc int push shrl femms push fcoml jp int3 sbb adc mov pushf arpl cmp jae mov adc mov inc add mov ret dec lret cmp mov fucomp sub xor jae stos dec mov sub daa aas pop xor arpl xor jnp adc std daa nop aas lods daa icebp into jb leave dec sbb jl xor aad mov out xor and cmpsb test cmp inc cmp cmp cmp ljmp aaa int cmp dec shll out pop cmp sub aad aas sub je loope and add cmpsb fdivs sbb sbb shlb or icebp out xor and mov inc inc and icebp pop pop and mov pop jb mov and jae sbb inc and adc adc xchg pslld jl and mov dec mov sti ficoml xor ret sarb cmpsb cmp ja fiaddl mov cmp or xor add rcr xor mov and (bad) inc and push add repnz jae xchg cmp sub cmp and and mov cmp cmp lods sub iret push or pop imul lahf mov cmpl imul and mov fsubs cmp jns jecxz sub add gs outsb call cs loope clc dec aas insl push cmp dec (bad) xor add arpl push aas flds repz mov hlt cmp push xrelease aas inc das aad clc mov cmc icebp or pop aam and inc mov movsb add mov into (bad) sub fstps pop xchg cmp mov inc (bad) in dec cmp sub lret push mov and mov mov gs mov fild loopne (bad) dec xor push and and arpl sarb repz mov dec mov (bad) ret gs xchg adc daa add loopne inc add xor inc adc xor int3 arpl adc sub mov sarl mov out insb mov inc push mov push cmp and jae lcall or mov jmp dec and dec mov inc pop movb aas in xor xor aaa cmp push sub add mov rcl xor and aas clc scas xor and xchg cmp jge xor loopne fucomp cmp add fisttpl inc mov or ss mov loopne add pop cmpsl repnz (bad) cld into pusha std stos and les arpl inc jmp nop bound cmp xor and out (bad) dec popf and test xor (bad) outsl push loope sub icebp out xor call mov aaa pushf imul add sbb pop dec push cmp inc fs notb test stos jb pushf push nop sbb push mov push stos clc jmp sbb push jno aaa dec in mov sbb nop flds dec cltd (bad) pop add lds in mov jl push mov push mov aas push mov push daa inc lcall jae dec mov test (bad) (bad) jae mov jl push mov jp push addr16 lock pusha aad sbb dec data16 sub xchg sbb adc cwtl nop inc xchg je jo ljmp add (bad) (bad) jne fwait lahf push and inc cmc cli or inc dec iret (bad) in in cld or lea loope lret aam cld test cltd lret ljmp and loopne (bad) in cli sbb sub fadds inc addr16 push jb popa xor add enter jae int xchg leave sbbl pusha movsb std xor lret and and xor test xchg pop cmpsl (bad) in xchg pop cli push into mov pop (bad) imul out ds hlt test pop push and js dec test clc bound add xchg jecxz mov int3 dec jecxz add inc and push fildll repnz stos data16 dec xchg hlt mov imul pinsrw stos mov jns adc (bad) cmpsb adc int3 mov imul cwtl subl nop sbb pop sbb jae fistpll add ds and dec outsl cmp add xor sbb jo add sub movsb (bad) xor in mov push cmp inc sub push lret cmc lret pop jno xor cmp jae or in pushf sub jb mov jae dec adc mov mov inc stc pop hlt mov jp inc (bad) push mov add cmp scas pusha out fwait das fimull cmp and sahf jb sbb mov pop sbb dec test add sbb je mov inc lods mov mov out scas fidivl adc dec dec std iret xchg xlat shll loop sub out dec adc mov insl add lahf pop sub push iret adc out lods notb fisubr mov ficom icebp aas add scas rolb repz push (bad) jo cmp push xchg pop add fidivr lds cmp xor aaa mov pcmpeqd loop aas or (bad) pop cltd scas sub cmp xchg adc inc add pop aad mov adc and incl dec adc jge flds xor or mov cmpsl ffreep cmp bound dec pop inc inc inc adc cmp ret rcll test call inc push call clc inc test mov cmp jnp popl in adc test jnp scas push add insl push mov xor inc or sbb push mov pushf (bad) xor lods mov insl lods mov outsb push add lret xchg hlt insl aam imul mov xor pop push mov pop push mov cmp mov in mov push or sbb ja add scas add lock pop out push pop imull notl lcall (bad) fmul fs faddp and ds in fcmovu xchg (bad) jo adc dec movb jl orl dec lods xor mov dec pop outsb mov dec cmc fdivrp arpl inc adc dec or ljmp mov cld pop loope enter pop js mov cmp sti pop sar push int3 call icebp lcall jmp into mov fldl adc aam fdivrs jmp pop push test cwtl insb out adc pop leave cmp jb push mov jmp (bad) je fildl pop dec fisttpll out mov xor mov in ljmp lea aas aad pop fs cmp and fcomp mov sub jecxz adcb inc jl lods sub mov push cmp aad cmp xchg add lds xchg pop mov in (bad) ret into js pop ljmp add out stos add jbe push ljmp enter cmp in in or fucomp ds fdivrs sub ret int (bad) pop pop mov call (bad) push test divb orb mov lret idivb inc iret out lahf lcall jns inc xchg add divb mov (bad) (bad) in movsb (bad) int3 sub lods jecxz ror pop test rol std scas inc dec loopne jl les test push hlt mov into shlb stos fimull inc iret sbb jmp shr sbb (bad) mov hlt clc adc int3 mov cmc movsb pop incb enter sbb lahf int3 arpl rcrb pop inc pop mov into cltd lods fs adc push jb xor sub xor jmp pop scas xchg mov mulb cli icebp and cli test cmpsl sarl dec mov push pop fildl addl scas pop test and js push fldenv cli mov inc sub movsl or push sbbl stc ret icebp out xchg dec sbb mov in sub pop dec and repz inc mov ljmp or jno lret push pop jmp leave mov push jae (bad) and lahf frstor push add scas mov cli xchg jp ret cmp fisubrl xor lret or mov or movsb loopne outsl dec push mov scas je pop or mov jp loope neg (bad) imul sbb addl lods repnz xlat out push mov push sub cmp mov sub mul mov dec jo hlt jl inc sbb daa inc adc and jle lcall mov rol xchg lcall in lods sbb mov cmpsl popa mov mov insl push pusha stc mov fnstenv test mov inc stc loopne adc xor movsb or lock loope imul inc das sahf add push sub in jmp sub ret pop f2xm1 push (bad) mov data16 pop jge outsb ljmp pusha out das pop sub fidivrl inc lret fnop outsb mov or mov or hlt int3 (bad) out pop lods fdivrl push inc sub lret es cmpsl xchg pop addr16 lods pop cmp lret fbstp pushf insb insl mov jne pop dec mov (bad) pop popa ret daa xchg xlat push sub push mov fdivrl adc hlt inc test xchg inc mov adc loop enter rcl lret stos pusha test cmpsb shrb xchg fldl jmp (bad) jo push int3 fcoml iret stos out mov repz xor out loopne int out (bad) out push jmp scas jae push addb push lea mov loop jbe xchg xchg and fistp mov sahf pop jecxz into push lcall pop roll fsubrs (bad) subl sahf sub or sub fucomip loopne push clc sub (bad) jmp int3 push es ret xchg xchg xchg jle in dec sbb aas lret (bad) cld add pop les jmp ss xchg dec fnsave pop xor addb cmp out mov sbb sub lods fidiv int3 es fdiv in mov fadds lea push cmp sub jbe lds rcll push mov stos and push pop clc pop movsl push pop enter out aad in add add (bad) pop ror lods dec push fstl je push pop loopne xchg out mov enter mov in pop adc (bad) loopne adc mov ljmp or (bad) lret dec xlat mull rcr mov test xchg (bad) or lods jg mov (bad) stc cmp imulb cs (bad) mov in or cld jmp mov cld addr16 dec icebp out (bad) pop cmp cmpsb icebp mov stos (bad) faddl or cmpsl popa and in xchg push push (bad) jecxz in add pop insb jb mov and hlt int3 loope jne jae mov dec std fisttp sbb dec popa adc insl dec into pop (bad) test mov add call mov (bad) iret or inc jecxz (bad) (bad) mov sbb add sub sar add int lcall or jns add add repnz shll inc adc sbb inc movsb push das in mov test pop ret test fcoms hlt pop xor lods dec or cmpsl outsb cltd fnstsw inc movswl rolb mov fidivrl mov dec push (bad) stc roll rcrb hlt fcomps test enter mov cmp jns lods pop cmpb inc mov in jno dec scas dec push mov int3 jae (bad) loope int pusha nop dec sub xchg sbb scas adc add pop push rcl (bad) push pop enter iret add sub nop pushl mov sahf fs mov dec daa aam mov shlb mov xor mov push lods fstpt (bad) or push sti xchg xchg and daa mov xor sub (bad) jmp rcrb push repz mov xor cmp out sahf push inc dec test in mov inc ja leave fsubp mov int or dec aam (bad) leave sub insl sbb movsb jne push adc out push mov pop add xchg sbb inc gs gs in add cmp js int3 adc into mov int3 mov dec (bad) (bad) fadd or adc rcr adc stos in xchg sub clc and cmp (bad) mov or pop ret mov mov dec jle int3 ret cmp jne cmp sub pop mov or clc faddl ror je int in iret lods in and sub faddl ret in shrd fadd ljmp dec push cmp push sub clc push lock sbb mov sub (bad) in subb (bad) fsubrl sub push ret push ds inc sbb cmpb lds mov aad push pop das int3 xchg xchg scas inc mov enter jmp inc into ret jg int3 lods (bad) aas into ljmp int3 out sub outsl fsubrl cld in sbb inc add xchg int3 test xchg mov enter int mov int3 rcr sbb mov dec push inc ss inc pop les mov fwait enter mov lds lock addb mov mov int fmul repnz inc loop push into pop mov cs mov lods xchg cmpsb jmp inc ret aad fadd push (bad) cmc fistpl mov sub pop dec inc int3 test dec les repz xor cmp cmp sub mov int test (bad) pop jp or enter fisubl (bad) xchg faddl or add push pop cld test lods test xchg int3 in iret xchg js inc dec ror (bad) scas or cmp loope test ficom out enter aam cltd xchg aam pop outsl adc jb punpckldq push inc data16 pop and inc rorb leave out shl jge pop test pop xor shrb cmp test mov int push and and or add lcall jmp out jbe adc cmpsb out insl or ja test (bad) movsl mov dec inc inc sub dec fist insl outsb lods mov lods cmp dec leave out sar imul add imulb in adc dec sbb xor mov fildl push decl icebp jl (bad) icebp xor lods pop (bad) and add mov push arpl ret loope aas fcmove cs sub hlt push xlat fldz or jo addl clc ds lock cld test lods mov repnz int3 or gs (bad) add push or lahf inc (bad) xor aam lods daa sbb dec pop scas (bad) sub mov inc (bad) xchg (bad) in xchg fdivr aad hlt gs out (bad) shll jns in mov lods sbb sub and mov cltd fsts cltd rcll xchg cmp pushf gs (bad) add rcrb push lods mov adc in sbb test push rorb ret or out insl add js scas cmc push mov adc (bad) jne mov cs clc insl sub js lahf dec daa fisubl fstps mov adc out (bad) lods (bad) cld fcoml int3 push pop movsl jb cmp ffreep pop dec mov inc jge jge les cmp push mov outsl jbe int mov mov sbb aaa aam loop inc das sbb and mov fdiv sarb (bad) jmp push scas sbb jmp add jmp mov (bad) lret inc push push pop jmp xchg (bad) xchg lds pop call loop inc aas aad jmp sub push fucomi push movsb cmp in mov int3 rolb dec cmp lods cwtl (bad) fist add ror shrb inc jle sub mov dec out fwait push mov out enter add test outsb sarl xor call scas or sbb rcll jo dec push inc mov or imul push lock jnp aad das sbb stos cs and insl stc in dec sbb sbb stos inc dec sbb cmpsb fadd inc fisubr into movsb lds int3 mov gs sbb mov push dec push paddb in scas sbb pusha dec int3 dec or les int aas push (bad) enter iret lcall mov in cmp dec rclb jbe sbb shrl cli xchg pop insl lods ret cvtpi2ps sbb int ret push dec cld or int3 mov dec xchg insl inc fisttp dec or sub lods enter push aam fmul xor sbb inc push mov roll in out inc scas in jg push push outsl hlt clc and or fs or lock lods push add xor insl mov loop lret ror (bad) fdivl stos (bad) cli sbb mov mov sub sbb int3 add aam fdivrs sbbb out (bad) mov jmp or adc pop xchg icebp inc cli icebp sbb fmuls rol xchg inc cmp les mov dec sarl loope mov cld dec (bad) push sbb push adc mov jge add insl xor pop pop sub or mov stos cld cmc jo (bad) xchg and lea test mov jge cmp push loope int3 ds push sub aas push stos ja (bad) jne jb lahf dec cwtl mov dec pop xchg mov (bad) ficompl jmp ljmp clc push out mov mov (bad) mov or test sbb (bad) into mov push in sahf sub dec cmpsl fsubrs sbb jae pop scas and cwtl mov pop insl leave lret dec stc jmp enter hlt insb test test loop (bad) in shrl aam ja lods mov insl lcall or pop call pop int sbb iret out popa xchg repz jg lods hlt fsts jl imul or xchg xchg (bad) cwtl mov imul rcl cmp lea fisttpll fisttp movsl sub jmp (bad) sahf cld pop outsl imul dec mov cmp dec mov add jnp orl mov cmp dec pop sbb inc mov in xor shll stos sarb roll test cmp fwait mov sub mov sub adc sbb bound loop leave aaa ja and mov cmp xor cmp push or xchg dec pop ror ret std jb sub outsb pop and pushf int in mov xchg outsb adc mov cmp push or dec cli dec (bad) lock inc dec sub add fdivl pop and lret add rolb fdivrl ret (bad) in push mov fidivl imul addr16 sbb out cld adc lods popa fld cmp xor (bad) in int3 push (bad) repz pusha mov aas cmp push fiaddl pushf add movsb pop dec enter or (bad) dec mov (bad) sar jl addr16 push sub cmp (bad) aam pushf and (bad) icebp insb daa fcmovu pop int repz test mov int3 jge lret mov fadd push mov loopne out ror cld repnz insl dec popf xchg push pop test les clc dec push dec sub dec test into or imul cmp dec cli lea test les ds push sub adcb mov mov xor cmp mov test stc xchg fldl imul std (bad) decb lret gs fisubr cmovnp mov inc int (bad) mov in rorb jb arpl dec arpl in sub cmpsl (bad) movsb adc and (bad) ja pushf xchg cmpsb xor stos ds iret ja push or jg movl jb mov inc sbb sub int xlat pop cld in fcompl les je or jg fsubs (bad) fdivs les mov imul pop dec xchg fimull xchg mov and pop inc cmp and aam mov and fcompl les and pop cmp cmpsw mov push push enter and imul push sbb jg fadds cmp sub int mov dec int cld pop cld in mov (bad) daa aam aam fadd out imul sbbl sbb sub int cld pop cld in lds lds adcb and pop xor xchg push sbb imul lret or sbb mov and pop xor mov into mov loopne sbb les into push sbb pop xor xchg push sbb imul test mov fadds xchg and pop xor test in mov (bad) jno jns jp add sub fnstenv dec pmulhuw fdivrs lods ja sub adc inc mov sbb jno push (bad) jp push adc dec push icebp xor xchg mov cmp imul xor pop (bad) mov das dec or jl imul and jnp test xchg push leave push push sbb sub dec das nop or cmp dec mov jl fidiv jge into mov mov aam scas repz test mov shll or push mov jae cmp push lahf mov icebp in sbb jp stos gs push mov push pop mov push scas adc sub (bad) lock pusha lret enter mov adc push jo or and mov xor cmp cmp jg push or lods and inc push xor mov test fisubrl mov mov ja sub sahf push mov mov mov cs sahf jmp dec xchg jecxz (bad) xchg inc adcl push mov movsb sti push dec fbld jmp aas notb (bad) xchg (bad) (bad) jne mov icebp or jne dec xlat mov jo sub xchg loope lcall jp pop and mov cmp mov push ds sub movhps jbe mov xor stc mov jb sbb movsl mov jp dec push xchg fsubs clc push notb stos arpl xorl fisttp dec out cwtl insb mov ljmp jecxz add add add mov outsb mov inc pop fmul add mov sub test cmc sarb hlt jns or icebp movsl mov dec jns stc aad push scas scas adc insl mov inc (bad) cmpsb hlt or jmp fs push or pop pop fwait pop out in testb fcmovbe mov cmp fimull in cmpsl or fidiv jns xchg lds push test lcall adc jo xchg sbb inc in sahf scas js lods aaa push xchg sub push inc push lods pop or dec mov push push icebp movsl pop inc dec inc orl mov sbbl std mov pushf push cmp arpl or cmp sub daa inc arpl aaa or movsl loopne and dec push shrl nop jle mov ffreep sbb xchg xchg sub test test push push test pop push xchg ljmp push (bad) push sbb fsubrl cs sbb in clc mov sub in dec aam (bad) xchg incl call mov ret dec mov out jp or and insl fwait jns xchg stos test xor mov mov fcom nop dec cmp lret das fimull inc cmp cwtl aad sub iret pop insb rolb inc sub popf mov jl mov and nop pop pop stos cld mov daa (bad) movsb sbb and jae pusha shr repz jae xor cmp cmc jg aas das ret cld push (bad) aam cmp int3 adc mov cmp (bad) movsl cmp data16 adc outsl je push (bad) mov cli mov push rorb cmc pop int lods mov fimul jo push mov loope cmp stos push in add jp lea push push stos out test leavew add push pushf or pop or test mov out push jnp lea inc sub je add dec stos sub lcall or je mov adc (bad) or insb pusha mov inc sub sub repz push or je sti lods mov ljmp out inc xchg pop cmp jnp imul cmp (bad) scas in ret lds pop xchg sbb bts stos jnp cmp pop fdiv mov push cmp xchg fdivr rcrl test cmp insl (bad) mov test dec mov and mov stos addr16 cli cmp fnstenv lods ret insb (bad) fldcw cwtl xchg sub out lea ds mov stos xchg lahf jns stos test sub and sub cmp pop sub (bad) into into ret or xor cmc jmp enter mov pop repnz loop sub (bad) jno add mulb mov in mov or mov sbb ja push cmpsl imul jno push jle push sti lds inc mov out adcl cmpsb int dec xor adc fdivrp clc es jno jno xchg xchg jge mov jbe push add div rorb adc cwtl (bad) nop popa push (bad) sti and in mov mov aam lret rorb mov pop cli fs enter sbb pushf repnz push ljmp repnz adc movsl adc inc shr movsb dec (bad) push sub sub adc subb cmp dec mov mov repnz mov hlt push inc gs push cli push lcall dec sarl jno movsl pop mov push dec pusha dec mov js and mov aam lahf arpl (bad) jne xor clc pop or jne mov push ljmp das jle xchg das sbb mov sbb push mov pop xor dec lods sbb shlb repnz pushl pusha mov adc push mov cmp mov pop xor aas inc xor movsl (bad) mov or adc jb pop fimull mov loop xor adc ljmp mov shlb iret push jmp push lcall loopne dec push adc mov push mov in pop adcl mov cltd rorl pop adc sub adc adcl cmp out arpl xchg mov out mov jo mov test add mov (bad) jno inc xchg (bad) roll xchg repnz leave pusha (bad) mov inc test xchg pop jecxz movsl xchg sti in rcl sbb (bad) inc cld xor push or or jecxz inc fninit inc mov out addl pop and and fcom xor sub repnz loope mov jne fidivl subl mov dec inc sub std sahf add cmp mov or xchg sbb adc push icebp xor pushf push jne or dec mov xor adc repz iret outsl and in adc fs sub in repnz aad lret fisubrl nop add mov inc adc adc loop push aaa dec pop sti cmp fsubp into add xchg mov std mov cmp sub and xor pop cltd dec mov movsl ret inc je in jge icebp popa cmpsl pop mov imul (bad) xor stos icebp sub rcll jae adc fildl add jae push std int out mov in push mov sbb aaa sub push pop cmpsl sbb out imul mov sub mov outsb mov xor imul (bad) jnp add sbb fcmovnbe iret lahf pop add mov inc add repz stc add movsl ss inc mov cs aas xor push cmp inc add movsb sar inc xor sbb dec adc dec sbb lahf push in inc cmp mov adc inc popa pop icebp mov mov (bad) nop inc bound or hlt ret pop aad ror popa cli and icebp das jae in rcrl mov dec sahf mov lods xor sbb mov mov sbb je aad cltd mov dec sub les or pop sub ds adc dec jle jecxz andl roll aas mov xchg cs jg dec dec sbb outsl mov add aaa out adc mov daa sbb lods clc push test cs sbb fmuls sbb mov scas sub lcall outsb lcall aad mov inc mov or movsl inc cli or pop dec enter andb hlt hlt cmp inc cld (bad) or pop add ljmp push ret and sti mov cli cmp mov jle xchg lds int lret pushf cmp mov push (bad) mov mov sbb xor and push dec cs xlat fucomip fidivr xlat sub shll popf cli es movsl outsb xor xor jne push pushf fsubs add test adc std cltd inc lods stos sbb ljmp mov push xchg pop pop fs popf inc xor adc or add push (bad) mov ja lret cs test jb sub rcrb or cs ror and gs into pusha sahf add pusha in mov pusha xchg xlat inc test sbb inc (bad) fs jb dec (bad) xor dec xchg inc call xchg inc mov sub je in and aaa (bad) mov pusha and cltd sub jbe movsb clc inc mov pop fdivl and arpl repnz adc xor imul xchg mov pop mov (bad) mov sub stc jne and inc pop cmp ret loope sbb inc adc pop cltd cwtl popf imulb std (bad) mov xor cli mov sbb test movsb adc mov outsb add push fs xchg divb mov rorb push dec clc push jecxz dec ret jne mov popa lcall lret stos push cltd or pop sub pop inc xor ret dec mov (bad) mov sub es mov mov add pop sub mov lea push xor inc xor insb cmp or je inc and dec and in shr pop je es cld loope mov lret cmp add inc mov ds insl test cmpsb jns das iret cs (bad) mov sar stc test sbb imul test xchg fsubs or fs imulb or in dec cs add mov call fistpll outsl cmp mov mov mov cmpl out stc pop dec mov cmp push sub rcll xchg ds roll insl adc push (bad) push aam add push out and movntps shll loope mov popa lcall cmpsl adc pop imul sbb sbbb sub mov (bad) and int fildll inc idivl jmp inc pusha dec and aad bsr jp mov fstl popf jmp std push mov ret mov mov pop lret pop sbb or mov data16 jle inc adc xchg bts cmpsl imul and jb and repz push nop push fwait mov sbb icebp mov (bad) or cmc dec pop and xchg mov shrb fsts and mov push dec jno jmp add mov adc mov aad sahf leave aaa in sub xchg mov lret mov sbb outsb je sbb inc pop mov bound ds xor je scas pop pop pminsw stc push jecxz test adc scas popf pop pushf cmp sbb add ja jecxz out jno in cmp imull outsb rorb pusha sbb inc mov stos inc xor mov push or cmpsb out xor ds js or add cli push cltd jns push call mulb call or sbb jmp cmp adc mov decl test fsts jb js lods test lret sbb mov outsb andb fcompl cmp mov cs sbb push pusha pushf pop sbbb push scas push cmpl sbb xor xchg rcrl lahf dec xchg push fild dec push and imulb xor cmc inc mov sarl mov pop (bad) or xor push mulb sub ljmp sbb push push cltd in sub imul (bad) std sub imul lods sub xchg data16 cmp cmp cmp inc std cmp mov cmpsb out loopne repnz sbb popa add pop xchg out or mov sub daa int aam (bad) ss pop sub pop dec mov gs ret push sub jnp add incl outsl jae xchg pop pusha pop mov inc inc negb stos outsl popf adc cmpsl mov outsl or cltd push cltd (bad) xchg cmp into or inc pusha fdiv sub stos fisub push imul out pop add call pop push in test shrl mov push mov fisttp (bad) sbb xor ss (bad) mov or sub mov mov lret cltd inc xchg push mov inc daa loopne fmull scas sahf mov sub pusha cmp sub lods mov dec sub loope or pop (bad) fdivr lcall xchg insl pusha dec and es das mov nop (bad) xchg ret in cld es xchg add std repnz out popl and dec in (bad) sub xchg xchg pop in sub push xchg cwtl in sub xchg xchg xchg inc mov push cld out inc test ret test mov xor and cmc cmp push outsl ret imul ljmp push jno,pt mov lahf aam sub pop mov pop stos es lcall or mov push (bad) fsts inc dec pop or js inc adc or mov and inc and scas outsl sub popf (bad) je scas xchg mov adcl inc and add call push pop pop nop loopne cld data16 in nop outsl mov sbb cmpsl je jnp adc mov ljmp mov fnstenv sub pusha cmp lds std scas dec das in loopne inc xor jne xor cli insl loope dec (bad) std and adc sbb and push bound xor mov adc mov test or fstp fiadd ja imul mov lea clc cltd mov sbb jno scas mov outsb leave xor test adc aam sbb into rorb out jle (bad) insl lahf cmovno fildll les or cmp insl xor mov push test test dec push icebp out xor mov (bad) push ffree xor fldl or or imul pusha xchg sub mov iret or fmull inc les pop data16 dec and fcmove mov mov cli mov mov int aas fucom inc jl jl and montmul cmpsb inc pushf cmp push (bad) lret lret push and aaa or lret jg cs sbb orl jl jno scas xor insb push cmp hlt jge insb rcrl jbe mov icebp icebp mulb sbb je daa jp mov jmp fwait imul in push jg mov call pop pop pop cmpl push push mov out inc and pop in in repnz and xlat popa jl jle mov (bad) push xchg jne push ds cmc dec jg or jl test in cmc pushf pop jmp int3 (bad) pop subb push scas dec dec out inc sahf shrl lods in cmp mov call cmp (bad) push xor mov xlat stc mov xor in push jmp sahf mov jne test pop in pusha sub neg xchg cwtl mov dec pop and gs stos iret addr16 imul popf jnp aas fiaddl sahf (bad) push lock (bad) out fsub jb sub jae xlat sbb loopne xchg xchg lods mov (bad) cmp or sub lahf pusha inc xor and inc inc cld movsl cld (bad) shr pop jge and pop pop pop (bad) xor outsl ret bound pop std cmp lcall test les dec int3 pushf (bad) flds scas sar mov and cli or scas fsub scas adc mov mov insl orb (bad) int3 sub cmp xor push or cld ds loop xor shr mov dec xlat push sbb cmpsl in leave xchg loop xchg mov cld insl pop mov mov xchg ret daa push lea rolb mov and mov jo jns cmp jae fisttpl lea dec stos repnz add fdivl jp inc push inc std dec enter ret sub std push sbb stos mov add cs orl mov jmp mov mov jmp rol jno loop fisttp xchg call sub ds (bad) imul add into ja sar in mov xor and bound call inc push pop cwtl mov fs push add jg mov rolb popf sub sub inc xor cli or insl xor xchg jae lcall fwait jbe inc sarb or xor (bad) mov xor stc sub fiadd jge mov test data16 test outsb push mov or call daa clc xchg inc pushf daa jmp mov or mov je push fs cmpsl out stos pop (bad) jo mov ret lahf movsb jbe test mov lea xchg mov stos inc frndint shr movsl (bad) fiaddl aas rclb ja or mov pop jecxz int out xchg roll add mov jmp (bad) ds pop push pop lret push jge test and mov dec faddp add inc sub mov insb nop fnstsw ret enter inc mov sub sub mov cmp outsl stc sub pop mov fbld and push out dec lods pushf std dec adc leave sub sbb aas es iret inc pop xlat xchg int3 inc sub es push cmp loopne push stos sbb repnz subl test jecxz xlat scas clc rclb (bad) stos rolb movsb add inc jne inc sbb xor pusha cmpsb adc out pop xchg xor jno (bad) dec orb ja int pop sub mov enter push fidivr popa fcompl cmp and popa cmp mov js fimul xchg pop shlb ror mov mov mov sahf mov lea push insl xchg mov fsts cld mov cld and movsb adc xor inc movsl into push pop rcrl adc adc sahf xor loope sarl adcl lock pop test mov adc sti frstor aam cmpsl adc cmpsl fwait mov int3 (bad) pop sub jle fsubr push pop push stos movsb jae mov lods xchg sbb bound das (bad) lea cmpsb stos int3 mov inc cmp int push (bad) add mov add sbb test scas xor xor xchg aas inc xor push cmp ret adc jl in adc mov int fisub mov jecxz,pt xorl sahf test aaa jecxz and ds sarl adc pop sti or jo inc mov dec aas mov leave add push gs jl rol movsb nop scas inc gs jmp ror mov jge dec inc loope imul loope jle push les and test mov xchg push cltd jle loop add mov cltd push data16 push (bad) mov jns lret repz push imul inc (bad) test inc xor ljmp xor push loopne cmp stc and xchg cmpsl jno cmpsl xchg int3 fisubrl rcrl aas adc daa mov xchg push mov dec and fdivp xchg sub fisttpll sbb cmp add fwait jno adc jge data16 sbb lock xor ret cld or or les inc adc push (bad) and (bad) and (bad) or jo popf in or daa mov add xor data16 leave cmp dec into xor fidiv push in xchg add int3 out cmp jl push adc hlt (bad) (bad) adc inc pop add rorb xchg enter hlt fcoms fcoms in call lods cmp cmpsl pop mov cli jl push inc lods sarl mov fstps and lcall jb repnz dec dec imul pop clc (bad) inc (bad) xchg pop lods in lea dec into and xor mov mov (bad) int3 std inc sub mov pop sbb sub (bad) and sub mov cmp aas bnd add jecxz cmpb sub sub push mov movsb sub and inc cld fwait sub popl ss jp bound pop adc and cmp insw arpl or sbb rclb mov cwtl cmc or pop push sub sbb rcrb push xorl cmp dec test sbb push insl inc mov inc mov or mov sub jne jns xchg rcrl fidiv gs push xchg ret push mov sub pop cmp mov leave jnp out aaa or inc jmp mov sub push push aam and or pop jne das cmp es mov nopl xchg (bad) xor pop xchg push push bound push push insl jb xor and and leave xchg rorl and jge xchg cmp push push mov imul mov mov or adc push xchg adc jno popf (bad) cmc cmp jp cmc imul out iret sub adcl or inc jb data16 mov or adc ret or dec xchg mov je fyl2x adc push mov mov xor xor mov push mov jns pop inc dec rcl lret push movups stos rcrl stos imul mov dec stos mov pop jbe pop push mov add addr16 jmp cmp idivb jg call lahf cs xor (bad) xchg div mov pop imul pushf jmp ret pushf scas lods (bad) (bad) hlt and jne push xchg and shr sub call sbb imul (bad) mov (bad) popf inc outsb leave cltd rolb inc ja or mov push inc push dec push orb inc int3 lock loope outsb mov mov outsl stc (bad) out push or pop cmpsl out shr and out pop add mov dec adc adc stc in xchg movsl sarb fsubl repnz inc enter rclb loope push mov (bad) xchg test adc jg mov add dec push fnstcw sbb jns xchg sub mov mov mov jl cs popl pop add mov js jmp pop xchg push js sahf insb xchg add outsb sahf js movsl lret dec fidivrl cmpsl mov outsl cmpsl or outsl jg or inc fisttpl les jb adc pop (bad) aaa (bad) mov sub or int int3 gs sbb pusha repz mov inc jp lahf push cmp sbb sbb insl inc xchg dec push xchg and mov mov pop xor inc das ja add jg inc clc repnz enter dec sbb in nop fldl stos faddl or pop 