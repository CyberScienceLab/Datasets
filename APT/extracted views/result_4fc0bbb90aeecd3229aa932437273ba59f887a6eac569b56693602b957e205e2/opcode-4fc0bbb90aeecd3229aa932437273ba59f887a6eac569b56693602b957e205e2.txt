push mov mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl movl jmp mov add mov mov add mov mov add mov mov cmp jae mov movsbl sar mov mov mov mov mov movsbl shl and mov mov add cmp jae mov movsbl sar movzbl or mov mov movsbl shl and sar mov mov add cmp jae mov movsbl sar movzbl or mov mov movsbl and mov mov mov mov jmp mov movb movzbl mov mov mov mov jmp mov movb mov movb movzbl mov mov mov mov jmp mov movb mov pop ret push mov movsbl cmp jl movsbl cmp jg movsbl sub jmp movsbl cmp jl movsbl cmp jg movsbl sub jmp movsbl cmp jl movsbl cmp jg movsbl add jmp movsbl cmp jne mov jmp movsbl cmp jne mov jmp xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl jmp mov add mov mov mov sub mov test je mov add mov mov movzbl push call add movsbl shl and mov mov movzbl push call add mov movsbl sar movsbl or mov mov movsbl cmp je movsbl and shl mov mov movzbl push call add mov movsbl sar movsbl or mov mov movsbl cmp je movsbl shl and mov mov movzbl push call add movsbl movsbl or mov jmp mov sub mov movb movl jmp mov sub mov movb mov mov movl mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov jmp mov mov pop ret int3 int3 push mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov cmpl jne mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl jmp mov sub mov cmpl jl mov add mov sar and je cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov add mov jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov add mov jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov add mov jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov add mov jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp jmp cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov add mov jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov pop ret int3 int3 push mov sub push movl movl movl movl movl movl movl mov mov mov test je movl movl movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge mov shl mov shl lea mov shl add mov movl mov shl mov shl lea mov shl add mov movl jmp jmp jmp jmp push push push call push call push push call add mov cmpl jne jmp push mov push mov push call add movl movl mov push call add mov mov add mov mov and sar mov mov mov add mov mov and mov mov mov add mov mov mov mov mov add mov mov push call add test jne mov cmp jge cmpl jne movl mov shl mov shl lea mov shl add mov cmpl jne mov shl mov shl lea mov shl add mov mov mov mov sub mov imul mov shl mov shl lea mov shl add mov mov mov mov add mov mov shl mov shl lea mov shl add mov mov add mov shl mov shl mov shl lea add mov mov jmp mov sub mov shl mov shl lea mov shl add mov mov imul mov shl mov shl lea mov shl add mov mov mov mov shl mov shl lea mov shl add mov mov add mov shl mov shl mov shl lea add mov mov mov push call add mov mov add mov mov and sar mov mov mov add mov mov and mov mov mov add mov mov mov mov mov add mov jmp mov push call add test jne mov push call add mov jmp movl mov push call add movl jmp mov add mov cmpl jge mov movl jmp movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge mov shl mov shl lea mov shl add mov cmpl jl mov and shl mov mov and shl or mov mov and shl or mov mov or mov cmpl jne mov mov mov mov mov mov add mov jmp movl jmp mov add mov mov cmp jge mov mov cmp jne mov mov jmp jmp mov cmp jne mov mov mov mov mov mov add mov movl jmp mov add mov mov shl mov shl lea mov shl add mov mov cmp jge mov shl mov shl lea mov shl add mov mov imul mov mov mov mov jmp jmp jmp jmp jmp cmpl jl cmpl jl cmpl jge jmp jmp mov sub mov mov mov jmp movl movl movl jmp mov add mov cmpl jge mov cmpl je cmpl jne mov mov mov cmp jge mov mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov jmp mov add mov sub mov mov cmp jge mov mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov mov jmp mov cmp jge mov add mov sub mov mov cmp jge mov mov mov cmp jl mov cmp jl mov cmp jl mov cmp jl movl movb movl mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl mov cmp jl movl movb movl mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl mov cmp jl movl movb movl mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl mov cmp jl movl movb movl mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl mov cmp jl movl movb movl mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb cmpl jl cmpl jge movl cmpl jl cmpl jge movl cmpl jl cmpl jge movl cmpl jl cmpl jge movl cmpl jl cmpl jge movl cmpl jl cmpl jge movl cmpl jl cmpl jge movl movl mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov add mov movl mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov add mov movl movl jmp mov add mov cmpl jge mov cmpl je cmpl jne mov mov mov mov cmpl jle mov movb mov add mov mov add mov mov push mov push call add movl jmp mov add mov mov cmp jge mov mov push call add mov add mov jmp mov mov push call add jmp mov movb mov add mov mov add mov mov mov push call add jmp mov add mov sub mov cmpl jle mov movb mov add mov mov add mov mov push mov push call add mov add mov jmp mov add mov mov cmp jge mov mov push call add mov add mov jmp mov mov push call add jmp mov movb mov add mov mov add mov mov mov push call add mov mov jmp mov cmp jge mov add mov sub mov mov movb mov add mov mov add mov mov push mov push call add mov add mov jmp mov add mov mov cmp jge mov mov push call add mov add mov jmp movl mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov add mov jmp movl mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov add mov jmp movl cmpl jge cmpl jne cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov jmp jmp movl jmp mov add mov mov cmp jge movl jmp mov add mov mov cmp jge mov mov mov cmp jne jmp jmp mov cmp jne mov mov mov mov mov add mov jmp movl movl jmp mov add mov mov cmp jge movl jmp mov add mov mov cmp jge mov mov mov cmp jne jmp jmp mov cmp jne jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp movl mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov add mov jmp movl cmpl jne mov imul movl mov imul movl mov imul movl mov imul movl mov imul movl mov imul movl mov add mov jmp mov sub imul mov imul mov mov mov imul movl mov sub imul mov imul mov mov mov imul movl mov sub imul mov imul mov mov mov imul movl mov add mov mov cltd and add sar add mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push push cmpl jge mov add mov call movl movl movl movl movl movl movl movl movl movl movl movl cmpl je movl mov push call add mov mov add mov jmp mov sub mov jmp mov sub mov cmpl jl mov imul mov imul mov cmp jne mov add imul mov imul mov mov jmp movl jmp mov add mov mov cmp jge jmp movl movl jmp mov add mov mov cmp jge movl jmp mov sub mov cmpl jl mov sub mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov jmp jmp movl mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov add mov jmp cmpl jge xor jmp lea push push call push push push lea push call push push call add mov mov push mov push push push call add mov push call add push push push lea push call push push call add mov mov push mov push push push call add mov push call add push push push lea push call push push call add mov mov push mov push push push call add mov push call add push push push lea push call push push call add mov mov push mov push push push call add mov push call add push push push lea push call push push call add mov mov push mov push push push call add mov push call add call push call add push call add push call add push call add push call add mov mov mov mov mov mov lea jmp dec dec dec dec xor pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 push mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push push call add mov cmpl jne xor jmp push mov push mov push call add movl mov mov mov push call add mov mov push call add test jne mov push call add mov add mov mov push call add cmp jne jmp mov push call add mov jmp mov push call add movl movl mov cmp jge movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov mov mov mov mov add mov jmp push push call add mov cmpl jne xor jmp push mov push mov push call add movl mov mov mov push call add mov mov push call add test jne mov push call add mov add mov mov push call add cmp jne jmp mov push call add mov jmp mov push call add movl movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov movl mov mov mov mov mov cmp jge movl jmp mov add mov mov cmp jge mov add movzbl mov movzbl cmp jne jmp jmp jmp mov cmp jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movzbl test je mov push push mov add push call add add mov mov mov mov mov add mov jmp movl jmp mov add mov mov cmp jge mov add movzbl mov movzbl cmp jne jmp jmp jmp mov cmp jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movzbl test je mov push push mov add push call add add mov mov mov mov mov add mov jmp movl jmp mov add mov mov cmp jge mov add movzbl mov movzbl cmp jne jmp jmp jmp mov cmp jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movzbl test je mov push push mov add push call add add mov mov mov mov mov add mov jmp movl jmp mov add mov mov cmp jge mov add movzbl mov movzbl cmp jne jmp jmp jmp mov cmp jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movzbl test je mov push push mov add push call add add mov mov mov mov mov add mov jmp movl jmp mov add mov mov cmp jge mov add movzbl mov movzbl cmp jne jmp jmp jmp mov cmp jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movzbl test je mov push push mov add push call add add mov mov mov mov mov add mov jmp push push call add mov cmpl jne xor jmp push mov push mov push call add movl mov mov mov push call add mov mov push call add test jne mov push call add mov add mov mov push call add cmp jne jmp mov push call add mov jmp mov push call add movl movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov mov mov movl movl mov mov mov cmp jge mov cltd and add sar cmp jge mov movzbl test jne mov add mov cmpl jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov shl mov mov mov jmp mov add mov mov add cmp jge mov mov mov mov mov add mov jmp mov mov movl jmp mov sub mov cmpl jl mov mov mov sub mov shl sar and je mov movb mov add mov jmp mov movb mov add mov jmp mov add mov jmp mov movzbl test je mov add mov movl jmp mov sub mov cmpl jl mov mov mov sub mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov jmp mov add mov jmp movl movl mov cmp jge mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov add mov mov add mov mov push push mov add push call add add mov jmp push mov add push call add xor mov xor call mov pop ret int3 int3 int3 int3 int3 int3 push mov sub push push call add mov cmpl jne xor jmp mov push call add mov mov push call add test jne mov push call add mov push call add mov jmp mov push call add movl movl mov cmp jge movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov mov mov mov add mov jmp push push call add mov cmpl jne xor jmp movl mov push call add test jne mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov imul mov mov mov imul mov mov mov imul mov mov mov imul mov mov mov imul mov mov mov imul mov mov mov add mov jmp mov push call add movl jmp mov add mov mov sub cmp jge mov imul mov push mov imul mov push mov imul mov push mov imul mov push mov imul mov push mov imul mov push call add jmp movl mov add mov mov mov mov addl cmpb jne mov sub mov mov push push push call add xor mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov movl jmp mov add mov cmpl jge mov movb jmp mov mov cmpl jne mov add mov push call add mov mov mov mov movl mov movl movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov mov mov addl cmpb jne mov sub mov je mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movsbl cmp jne lea mov mov add mov mov mov mov addl cmpb jne mov sub mov cmpl jne movsbl cmp jne mov add cmp jle mov mov mov mov mov add mov mov mov mov addl cmpb jne mov sub mov je mov mov mov mov movl mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp call jmp jmp movsbl cmp jne mov add cmp jle mov mov mov mov mov add mov mov mov mov addl cmpb jne mov sub mov je mov mov mov mov movl mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp call jmp jmp xor jmp jmp movsbl cmp jne jmp jmp movsbl cmp je movsbl cmp jne jmp jmp xor mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov call mov xor mov movl mov push lea push push call lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov mov movb movl jmp mov add mov mov cmp jge mov movsbl cmp jne movb jmp jmp movzbl test je lea push push call push call add push call add call cltd mov idiv add push call push call cltd mov idiv add push call cltd mov idiv add push lea push push lea push call add push lea push push lea push push push call mov push lea push push call push lea push lea push call push push push lea push push push call push call mov xor call mov pop ret int3 int3 int3 push mov sub push push call push lea mov addb lea mov lea mov lea mov lea mov lea mov push push push mov push call push push push mov push call mov push call add mov push mov push call add test jne xor jmp push mov push call mov push push push lea push call test je lea push mov push mov push call test jne lea push call lea push call jmp mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl movl movl movl movl mov mov push mov push call mov push push call mov movl movl movl push mov push call mov lea push call mov pop ret push mov push mov mov push push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov cmpl je cmpl je cmpl je jmp mov and movzwl mov mov shr and movzwl mov mov mov cmpl je cmpl je jmp push push mov push push mov push call jmp mov push call jmp mov push mov push mov push mov push call jmp jmp lea push mov push call mov lea push mov push call jmp push call jmp mov push mov push mov push mov push call jmp xor mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je cmpl je jmp mov jmp mov and movzwl cmp je mov and movzwl cmp jne mov and movzwl push mov push call mov jmp xor mov pop ret jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp cmp jne repz jmp mov push mov sub push xor cmp jne call push push push push push movl call add or jmp mov cmp je push mov mov lea push push pushl lea push movl movl call add decl mov js mov mov jmp lea push push call pop pop mov pop pop leave ret mov push mov lea push pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl call add pop ret mov push mov lea push pushl call pop pop pop ret mov push mov lea push pushl call pop pop pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov push mov mov push xor cmp jne call push push push push push movl call add xor jmp mov and pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add xor jmp mov and pop pop ret mov push mov pushl call test jne call jmp xor test je push call pop or pop ret xor pop ret mov push mov pop jmp push push call xor mov xor mov cmp setne cmp jne call movl push push push push push call add xor jmp xor mov cmp setne cmp je xor cmp setne cmp je call mov cmp jne call movl jmp mov cmp jne call movl push lea push push call add jmp push pushl push push call add mov movl call mov call ret pushl call pop ret mov push mov push pushl pushl call add pop ret mov push mov push push mov xor cmp jne call push pop push push push push push mov call add mov jmp push pushl pushl call add mov cmp je xor jmp call mov pop pop pop ret mov push mov call mov mov pop ret call mov imul add mov mov shr and ret mov push mov sub push push push xor cmp je cmp je mov cmp jne call push push push push push movl call add xor pop pop pop leave ret mov cmp je or xor divl cmp ja mov imul testl mov mov mov je mov mov jmp movl test je mov and je mov test je jl mov cmp jb mov push pushl pushl call sub add add sub add jmp cmp jb test je push call pop test jne cmpl mov je xor mov divl sub push pushl push call pop push call add cmp je mov cmp ja mov add sub cmp jb mov jmp mov movsbl push push call pop pop cmp je incl mov dec mov test jg movl test jne mov jmp orl mov sub xor divl jmp orl mov jmp push push call xor cmp je cmp je xor cmp setne cmp jne call movl push push push push push call add xor call ret pushl call pop mov pushl pushl pushl pushl call add mov movl call mov jmp pushl call pop ret mov push mov sub push push mov xor cmp jne call push push push push push movl call add or jmp push call cmp pop mov jge mov push push push call add cmp mov jl mov test jne sub jmp mov mov push mov sub mov test je mov mov sar mov and shl testb je mov cmp jae mov cmpb jne incl xor inc cmp jb cmp jne mov jmp test js call movl jmp testb je mov cmp jne mov jmp mov mov sub add sar and lea mov mov shl testb je push push pushl call add cmp jne mov mov add jmp cmpb jne incl inc cmp jb testl jmp push pushl pushl call add test jge or jmp mov cmp ja mov test je test je mov mov mov testb je incl mov sub mov mov add pop pop pop leave ret push push call xor xor cmp setne cmp jne call movl push push push push push call add or jmp pushl call pop mov pushl call pop mov movl call mov call ret pushl call pop ret mov push mov push mov mov test jne call movl or jmp and cmpl mov jne push call add andl pop push call mov pop test jns and mov jmp test je test je test jne movl pushl pushl push call pop push call xor add cmp setne dec mov pop pop ret push push call xor xor cmp setne cmp jne call movl push push push push push call add or jmp mov cmp je cmp je cmp jne pushl call pop mov push pushl pushl call add mov movl call mov call ret pushl call pop ret mov push mov push push mov push xor or cmp jne call push push push push push movl call add or jmp testb je push call push mov call push call push call add test jge or jmp mov cmp je push call pop mov mov mov pop pop pop pop ret push push call orl xor mov xor cmp setne cmp jne call movl push push push push push call add or jmp testb je mov mov call ret push call pop mov push call pop mov movl call jmp mov push call pop ret push push call xor mov xor mov cmp setne cmp jne call movl push push push push push call add or jmp push call pop mov testb jne push call pop cmp je cmp je mov sar mov and shl add jmp mov testb jne cmp je cmp je mov sar and shl add jmp mov testb je call movl push push push push push call add orl cmp jne decl js mov movzbl inc mov jmp push call pop mov movl call mov call ret mov push call pop ret push push call xor mov xor mov cmp setne cmp jne call movl push push push push push call add or jmp push call pop mov testb jne push call pop cmp je cmp je mov sar mov and shl add jmp mov testb jne cmp je cmp je mov sar and shl add jmp mov testb je call movl push push push push push call add orl cmp jne decl js mov movzbl inc mov jmp push call pop mov movl call mov call ret mov push call pop ret mov push mov mov decl js mov movzbl inc mov pop ret push call pop pop ret mov push mov push push lea push call mov mov push add push adc push push call cmp jl jg cmp jbe or mov mov test je mov mov leave ret mov push push push mov call movl mov pop ret movl jmp mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret mov push mov sub jmp pushl call pop test je pushl call pop test je leave ret testb mov jne orl mov call push call pop push lea call push lea push call int3 mov push mov cmpl jne call pushl call push call pop pop pop ret mov cmp jne mov cmpl jne mov cmp jne cmpl jbe xor cmp setne mov ret xor ret push push call xor mov lea push call push pop mov mov cmp jne mov cmpl jne mov cmp jne cmpl jbe xor cmp setne mov jmp mov xor inc push call pop test jne push call pop call test jne push call pop call mov call test jge push call pop call mov call mov call test jge push call pop call test jge push call pop push call pop cmp je push call pop call test je movzwl jmp push pop push push push push call mov cmp jne push call call mov jmp mov mov mov mov push push call pop pop ret mov mov mov cmpl jne push call call movl mov jmp xor inc ret mov movl mov call ret call jmp mov push mov sub mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl mov mov mov mov call mov push call pop push call push call cmpl jne push call pop push call push call leave ret mov push mov push push mov push call mov mov pop test jne call movl orl or jmp test je call movl jmp push xor test je mov test je mov and mov mov mov and or mov mov mov test jne call add cmp je call add cmp jne pushl call pop test jne push call pop testl push je mov mov lea mov mov sub dec cmp mov jle push push pushl call add mov jmp or mov or jmp mov cmp je cmp je mov and mov sar shl add jmp mov testb je push push push push call and add cmp je mov mov mov jmp xor inc push lea push pushl call add mov cmp je orl or jmp mov and pop pop pop leave ret mov push mov mov push mov movb test jne call mov mov mov mov mov mov cmp je mov test jne call mov mov cmp je mov mov test jne call mov mov testb jne orl movb jmp mov mov mov mov mov pop pop ret cmpb je mov andl ret mov ret testb je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov testb push push mov mov je cmpl jne mov add jmp mov decl mov call inc cmpl jne call cmpl jne mov mov call cmpl jg pop pop pop ret mov push mov mov addl mov mov pop ret mov push mov mov addl mov mov mov pop ret mov push mov mov addl mov mov pop ret mov push mov sub mov xor mov push mov push mov xor push mov pushl lea mov mov mov mov mov mov mov mov mov call test jne call movl xor push push push push push call add cmpb je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne xor cmp je mov mov mov mov mov test je inc cmpl mov jl mov sub cmp ja movsbl movsbl and xor jmp xor xor movsbl push sar pop mov cmp ja jmp orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne orl jmp orl jmp orl jmp orl jmp orl jmp cmp jne add mov mov cmp mov jge orl negl jmp mov imul movsbl lea mov jmp mov jmp cmp jne add mov mov cmp mov jge orl jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne inc inc orl mov jmp cmp jne cmpb jne inc inc andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je mov lea push movzbl push mov call pop test mov pop je mov lea call mov inc mov test je mov lea call jmp movsbl cmp jg je cmp jg je sub je dec dec je dec dec je dec dec jne add movl mov orl cmp lea mov mov mov jge movl jmp testl jne orl jmp testl jne orl mov cmp jne mov add testl mov mov mov je cmp jne mov mov mov movl jmp sub je dec dec je sub je dec dec jne add testl mov je movzwl push push lea push lea push call add test je movl jmp mov mov movl lea mov jmp mov add mov cmp je mov cmp je testl movswl mov je cltd sub sar movl jmp mov jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne testb movl je orl jmp mov add mov call test je testb je mov mov jmp mov mov movl jmp orl movl mov test je mov mov add jmp jne cmp jne movl jmp cmp jle mov cmpl jle mov add push call mov pop mov test je mov mov mov jmp movl xor mov add mov mov mov lea push pushl movsbl pushl mov push pushl lea push push pushl call pop call mov add and je cmp jne lea push push pushl call pop call pop pop cmpb jne cmp jne lea push push pushl call pop call pop pop cmpb jne orl inc mov push jmp movl mov jmp sub je dec dec je sub jne movl testb movl je mov add movb mov movl jmp test jne add test je mov test je movswl jmp movzwl cltd jmp mov test je cltd jmp xor mov test je cmp jg jl cmp jae neg adc neg orl testl mov mov jne xor cmpl jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add cmp mov mov mov jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp dec cmp je inc inc cmp jne sub sar jmp cmp jne mov mov mov jmp dec cmpb je inc cmp jne sub mov cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub testb jne pushl lea push push call add pushl mov lea lea call testb pop je testb jne push push push lea call add cmpl mov je test jle mov mov movzwl decl push push lea push lea inc push inc call add test jne cmp je pushl lea lea call cmpl pop jne jmp orl jmp mov push lea call pop cmpl jl testb je push push push lea call add cmpl je pushl call andl pop mov mov mov test je mov mov mov jmp cmpb je mov andl mov mov pop pop xor pop call leave ret nop mov lret inc add lret inc add inc add int3 inc add int3 inc add into inc add mov mov pop ret mov push mov sub mov xor mov andl push push lea push push call lea mov lea add mov mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov lea movl mov mov mov mov movl movl mov call push mov call lea push call test jne test jne push call pop push call push call mov xor pop call leave ret mov push mov push pushl call pushl mov call pop pop mov mov pop pop ret pushl call pop ret mov push mov pop jmp mov push mov pushl call pop test je pop jmp push call pop pop jmp xor push push push push push call add ret mov push mov pop jmp mov push mov mov xor cmp je inc cmp jb lea cmp ja push pop pop ret mov pop ret add push pop cmp sbb and add pop ret call test jne mov ret add ret call test jne mov ret add ret mov push mov push call mov push mov call pop mov call mov pop pop ret mov push mov call test jne push pop pop ret call mov mov xor pop ret mov push mov push mov xor cmp jne push push push push push call add push pop jmp call mov mov xor pop pop ret mov push mov call test jne push pop pop ret call mov mov xor pop ret mov push mov push mov xor cmp jne push push push push push call add push pop jmp call mov mov xor pop pop ret mov push mov sub push xor cmp jne call push push push push push movl call add or jmp mov cmp je push pushl mov pushl mov pushl lea push movl movl call add decl mov js mov mov jmp lea push push call pop pop mov pop pop leave ret mov push mov pushl push pushl pushl call add pop ret mov push mov sub push xor cmp jne call push push push push push movl call add or jmp pushl lea pushl movl pushl movl push mov mov call add pop leave ret mov push mov pushl push pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov sub push xor cmp jne call push push push push push movl call add or jmp push mov push mov cmp je cmp jne call push push push push push movl call add or jmp mov mov cmp ja mov pushl lea pushl movl pushl mov push mov call add mov cmp je cmp jl decl js mov mov jmp lea push push call pop pop cmp je mov jmp xor cmp mov setge dec dec pop pop pop leave ret mov push mov pushl push pushl pushl pushl push call add test jge or pop ret mov push mov pushl pushl pushl pushl pushl push call add test jge or pop ret mov push mov push xor cmp jne call push push push push push movl call add or jmp push mov cmp je cmp ja call movl jmp pushl pushl pushl pushl push push call add cmp jge mov cmp jne call movl push push push push push call add or pop pop pop ret mov push mov pushl push pushl pushl pushl call add pop ret mov push mov push push xor cmp jne call push push push push push movl call add or jmp push mov push cmp jne cmp jne cmp jne xor jmp cmp je mov cmp ja call movl jmp call pushl pushl pushl cmp jbe mov mov inc push push push call add cmp jne call cmpl jne call mov jmp mov push push push mov call add mov cmp jne cmpl jne call cmpl jne call mov mov jmp cmp jge mov cmp jne call movl push push push push push call add or pop pop pop leave ret mov push mov pushl push pushl pushl pushl pushl call add pop ret mov push mov pushl push pushl pushl pushl push call add test jge or pop ret mov push mov pushl pushl pushl pushl pushl push call add test jge or pop ret mov ret mov push push pop test jne mov jmp cmp jge mov mov push push call pop pop mov test jne push push mov call pop pop mov test jne push pop pop ret xor mov jmp mov mov add add cmp jl push pop xor mov push mov sar mov mov and shl mov cmp je cmp je test jne mov add inc cmp jl pop xor pop ret call cmpb je call pushl call pop ret mov push mov push mov mov cmp jb cmp ja mov sub sar add push call orl pop jmp add push call pop pop ret mov push mov mov cmp jge add push call mov orl pop pop ret mov add push call pop ret mov push mov mov mov cmp jb cmp ja andl sub sar add push call pop pop ret add push call pop ret mov push mov mov cmp mov jge andl add push call pop pop ret add push call pop ret mov push mov sub mov push xor push mov mov mov mov mov jmp inc cmpb je mov cmp je cmp je cmp je call push push push push push movl call add xor jmp movl jmp orl mov jmp movl orl xor inc inc mov push cmp je lea mov cmp je movsbl cmp jg je sub je sub je dec je sub je sub je sub jne cmp jne orl movl jmp or jmp testb jne orl jmp movl jmp testb jne mov and or mov mov and or mov jmp cmp jne orl movl jmp sub je sub je dec je sub je sub jne testl jne or jmp cmp jne andl movl jmp cmp jne or movl jmp testl jne orl jmp testl je xor jmp orl inc mov cmp jne cmp je jmp inc cmpb je push push push call add test jne add jmp inc cmpb je cmpb jne inc cmpb je push push push call add test jne add orl jmp push push push call add test jne add orl jmp push push push call add test jne add orl jmp inc cmpb je cmp je call push push push push push movl call add jmp push pushl lea pushl pushl push call add test je xor jmp mov incl mov mov mov mov mov mov mov mov pop pop pop leave ret push push call xor xor mov push call pop mov xor mov cmp jge mov lea cmp je mov mov test jne test jne lea cmp ja lea push call pop test je mov pushl push call pop pop mov mov testb je push push call pop pop inc jmp mov mov jmp shl push call pop mov mov mov add cmp je push mov add push call pop pop test mov jne pushl call pop mov mov jmp mov add push call mov mov mov mov cmp je andl mov mov mov mov orl movl call mov call ret mov push call pop ret int3 int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov ret mov mov pop pop pop pop pop mov pop push ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov add xor call mov mov add xor jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov sub push mov push mov xor push mov movb movl lea cmp je mov add xor call mov mov add xor call mov testb jne mov lea mov mov mov mov cmp je lea lea mov lea mov mov mov test je mov call movb test jl jg mov mov cmp jne cmpb je mov cmp je mov add xor call mov mov add xor call mov pop pop pop mov pop ret movl jmp mov cmpl jne cmpl je push call add test je mov push push call add mov call mov cmp je push push mov mov call mov mov mov mov cmp je mov add xor call mov mov add xor call mov mov mov call mov cmp je push push mov call jmp push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret push mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret mov mov mov push call xor xor xor xor xor jmp push mov push push push push push push push call pop pop pop pop ret push mov push push pushl call add pop ret mov push mov pushl call test jne pop jmp pop ret mov push mov push pushl mov call test je mov cmp je push pushl call call test je mov jmp mov push call test jne push call pop test je push push call test je pushl call mov mov pop pop ret push call pop ret mov push mov push pushl mov call test je mov cmp je push pushl call call test je mov jmp mov push call test jne push call pop test je push push call test je pushl call mov mov pop pop ret call ret mov push mov pushl pushl call call pop ret mov ret mov push pushl call mov test jne pushl call pop mov push pushl call mov pop ret mov push mov pushl pushl pushl call pop call pop ret mov cmp je push pushl call pop call orl mov cmp je push call orl jmp push push call mov push call test jne push call pop mov mov movl xor inc mov test je push push mov call mov push pushl call mov mov movb movb movl push call pop andl pushl call movl call push call pop mov mov mov test jne mov mov pushl call pop movl call call ret xor inc mov push call pop ret push call pop ret mov push push call pushl mov call call mov test jne push push call mov pop pop test je push pushl pushl call pop call test je push push call pop pop call orl mov jmp push call pop xor push call pop mov pop ret mov push call mov test jne push call pop mov pop ret push push call mov test je mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov cmp je push call pop push call pop andl mov test je push call test jne cmp je push call pop movl call push call pop movl mov test je push call pop cmp je cmp je cmpl jne push call pop movl call push call pop call ret mov push call pop ret mov push call pop ret mov push mov cmpl je cmpl jne push pushl mov call test je pushl pushl call call mov pop push pushl pushl call pop call pushl call mov cmp je push push call pop ret jmp jmp mov push push mov push call test jne push call pop mov test je mov push push call push push mov call push push mov call push push mov call cmpl mov mov je cmpl je cmpl je test jne mov mov mov movl mov mov call mov cmp je pushl push call test je call pushl call pushl mov call pushl mov call pushl mov call add mov call test je push pushl call pop call mov cmp je push push call mov pop pop test je push pushl pushl call pop call test je push push call pop pop call orl mov xor inc jmp call xor pop pop ret mov push mov mov call mov xor mov mov push xor mov mov mov cmp jne xor jmp cmp jne call mov call push push push push push movl call add or jmp push push mov mov sar lea mov and shl add mov add sar mov mov cmp je cmp jne mov not test jne call xor mov call push push push push push movl call add jmp testb je push push push pushl call add pushl call pop test je mov testb je call mov xor cmp lea sete push mov pushl mov call test je xor cmp je test je call mov mov xor mov cmp jbe mov mov test jne mov mov xor cmp sete mov mov add cmpl je mov mov mov andl push lea push jmp movsbl push call pop test je mov sub add xor inc cmp jbe push lea push push call add cmp je inc incl jmp push push lea push call add cmp je xor push push push lea push push lea push push pushl inc incl call mov test je push lea push push lea push mov mov pushl call test je mov mov add cmp mov jl cmpl je push lea push push lea push mov mov movb pushl call test je cmpl jl incl incl jmp cmp je cmp jne movzwl xor cmp sete inc inc addl mov mov cmp je cmp jne pushl call pop cmp jne addl cmpl je push pop push mov call pop cmp jne incl incl mov cmp jb jmp mov mov incl mov mov mov jmp xor mov add testb je mov mov test jne mov cmp jbe jmp mov mov andl sub lea cmp jae mov incl mov inc cmp jne incl movb inc incl mov inc incl cmpl jb mov lea sub push lea push push lea push mov pushl call test je mov add cmp jl mov sub cmp jb jmp mov cmp jne cmp jbe jmp mov mov andl sub lea cmp jae mov addl movzwl inc inc cmp jne addl push pop mov inc inc addl addl mov inc inc cmpl jb mov lea sub push lea push push lea push mov pushl call test je mov add cmp jl mov sub cmp jb jmp cmp jbe mov andl sub push lea pop cmp jae mov movzwl add add cmp jne push pop mov add add add mov add cmpl jb xor push push push lea push lea sub cltd sub sar push mov push push push call mov cmp je push lea push mov sub push lea push mov mov pushl call test je add cmp jg jmp call mov cmp jg mov sub mov cmp jb jmp push lea push pushl pushl pushl call test je mov andl mov jmp call mov cmpl jne cmpl je push pop cmp jne call movl call mov jmp pushl call pop jmp mov mov testb je mov cmpb jne xor jmp call movl call andl or jmp mov sub pop pop mov xor pop call leave ret push push call mov cmp jne call andl call movl or jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and je push call pop mov mov testb je pushl pushl pushl call add mov jmp call movl call mov orl movl call mov call ret pushl call pop ret mov push mov mov push xor cmp jne call push push push push push movl call add or jmp mov pop pop ret mov push mov push push mov mov mov and xor cmp jne test je mov push mov sub test jle push push push call pop push call add cmp jne mov test jns and mov jmp orl or pop mov andl mov pop mov pop pop ret mov push mov push mov test jne push call pop jmp push call pop test je or jmp testl je push call push call pop neg pop sbb jmp xor pop pop ret push push call xor mov mov push call pop mov xor mov cmp jge mov lea cmp je mov testb je push push call pop pop xor inc mov mov mov mov test je cmp jne push call pop cmp je incl jmp cmp jne test je push call pop cmp jne or mov call inc jmp xor mov mov pushl push call pop pop ret movl call cmpl mov je mov call ret push call pop ret push push call xor cmp jne push call pop jmp pushl call pop mov pushl call pop mov movl call mov call ret pushl call pop ret push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmpl je push push and and cmp pop pop jne pop pop pop jmp test jne shr and cmp jb rep jmp nop mov mov sub jb and add jmp jmp nop jmp nop mov testl and mov mov mov mov mov shr mov add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov add shr add cmp jb rep jmp lea mov inc add inc add inc add inc add inc add inc add inc add inc add inc (bad) in inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov movsb clc inc add inc add clc inc add leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop inc stc inc add inc add inc add rorl add jmp cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea in inc add stc inc add stc inc add stc inc add inc add inc add inc add cli inc add inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov inc cli inc add inc add inc add add leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret push push call xor mov lea push call movl push push pop push call pop pop cmp je mov mov lea jmp movb orl movb mov movb movb movb mov movb add mov add cmp jb cmp je mov cmp je mov lea lea mov mov cmp jl mov movl jmp push push call pop pop test je mov lea mov addl lea jmp movb orl movb andl andb movb movb andl movb add mov add cmp jb incl cmp jl jmp mov andl test jle mov mov cmp je cmp je mov test je test jne push call test je mov mov sar and shl add mov mov mov mov mov push lea push call pop pop test je incl incl inc addl cmp jl xor mov shl add mov cmp je cmp je orb jmp movb test jne push pop jmp mov dec neg sbb add push call mov cmp je test je push call test je mov and cmp jne orb jmp cmp jne orb push lea push call pop pop test je incl jmp orb movl inc cmp jl pushl call xor jmp xor inc ret mov movl or call ret mov push push mov mov test je lea jmp cmpl je lea push call mov add add cmp jb pushl call andl pop add cmp jl pop pop ret mov push mov push mov push call pop cmp jne call movl or jmp push pushl push pushl push call mov cmp jne call jmp xor test je push call pop or jmp mov sar mov and shl lea andb mov pop pop pop ret push push call mov cmp jne call andl call movl or jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and je push call pop mov mov testb je pushl pushl pushl call add mov jmp call movl call mov orl movl call mov call ret pushl call pop ret push push call mov test je cmpl jne push call pop andl push call pop mov test je push push call pop pop movl call cmpl jne pushl jmp push call pop ret push push pushl call test jne call mov call push call mov pop call ret mov push mov push mov push push call pop cmp je mov cmp jne testb jne cmp jne testb je push call push mov call pop pop cmp je push call pop push call test jne call mov jmp xor push call mov sar mov and shl pop movb test je push call pop or jmp xor pop pop pop ret push push call mov cmp jne call andl call movl or jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and je push call pop mov mov testb je pushl call pop mov jmp call movl orl movl call mov call ret pushl call pop ret mov push mov push mov mov test je test je pushl call andl xor pop mov mov mov pop pop ret mov push mov push mov push xor cmp jne call push push push push push movl call add jmp mov test je test jne test je or mov jmp or mov test jne push call pop jmp mov mov pushl pushl push call pop push call add mov cmp je cmp je testb jne push call pop cmp je push call pop cmp je push call sar push lea call and pop shl add pop jmp mov mov and cmp jne orl cmpl jne mov test je test jne movl mov decl movzbl inc mov jmp neg sbb and add or mov or pop pop pop ret int3 int3 int3 int3 int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret mov andl andl movl ret mov push mov push mov push push mov movl mov test je push call mov inc push call pop pop mov test je pushl push push call add jmp andl movl mov pop pop pop pop ret mov push mov mov mov movl mov andl mov pop ret mov push mov push mov push mov movl mov mov test mov push je test je push call mov inc push call pop pop mov test je pushl push push call add jmp andl jmp mov pop mov pop pop pop ret mov push mov push mov push push mov cmp je mov mov test mov je test je push call mov inc push call pop pop mov test je pushl push push call add jmp andl jmp mov mov pop pop pop pop ret cmpl movl je pushl call pop ret mov test jne mov ret mov push mov push lea push mov call movl mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret movl jmp mov push mov push lea push mov call movl mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret movl jmp mov push mov push pushl mov call movl mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret movl jmp mov push mov push mov call testb je push call pop mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov pushl push call pop pop pop ret mov push movl call pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov pushl push call pop pop pop ret mov push call pop ret mov push mov mov add push add push call neg pop sbb pop inc pop ret mov push mov mov add push add push call neg pop sbb pop neg pop ret mov push mov mov add push add push call pop pop xor test setg mov pop ret lea ret mov movl ret mov ret mov push mov pop jmp mov push mov push push push push pushl call pushl mov mov call mov pop pop cmp jb mov sub lea cmp jb push call mov lea pop cmp jae mov cmp jae mov add cmp jb push pushl call pop pop test jne lea cmp jb push pushl call pop pop test je sar push lea call pop mov pushl call mov add push call pop mov mov pop jmp xor pop pop pop leave ret mov push push push call mov push call add mov mov test jne push pop pop ret andl xor pop ret push push call call andl pushl call pop mov movl call mov call ret call ret mov push mov pushl call neg sbb neg pop dec pop ret push push call andl mov cmp ja push call pop andl push call pop mov movl call mov call ret push call pop ret mov push mov cmpl jne call push call push call pop pop mov cmp jne mov test jne inc push push pushl call pop ret push mov cmp jne push call pop test jne test jne inc add and push push pushl call pop pop ret mov push mov push mov cmp ja push push mov cmpl jne call push call push call pop pop mov cmp jne test je mov jmp xor inc push jmp cmp jne push call pop test jne test jne inc add and push push pushl call mov test jne push pop cmp je pushl call pop test je mov jmp call mov call mov pop mov pop jmp push call pop call movl xor pop pop ret mov push mov mov mov pop ret mov push mov push push call pushl call pushl mov call push mov call add mov pop pop ret push call pop ret pushl call pop ret mov push mov pushl call pop test je pushl call pop test je xor inc pop ret xor pop ret mov push mov sub mov push push push pop mov lea rep mov mov pop mov pop test je testb je movl lea push pushl pushl pushl call leave ret mov push mov mov mov cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne call xor pop ret push call xor ret mov push mov push mov push call pushl call add cmp ja test je pop pop ret mov push mov call pushl call pushl call push call add pop ret mov push mov push call test je push push call test je pushl call pop ret mov push mov pushl call pop pushl call int3 push call pop ret push call pop ret mov push mov push mov jmp mov test je call add cmp jb pop pop ret mov push mov push mov xor jmp test jne mov test je call add cmp jb pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov cmp je mov xor pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov cmp je mov xor pop pop ret mov push mov cmpl je push call pop test je pushl call pop call push push call pop pop test jne push call mov movl call cmpl pop je push call pop test je push push push call xor pop ret push push call push call pop andl xor inc cmp je mov mov mov cmpl jne pushl call pop mov mov test je pushl call pop mov mov mov mov sub mov cmp jb call cmp je cmp jb pushl call mov call mov call pushl call mov pushl call add cmp jne cmp je mov mov mov mov mov mov jmp push mov call pop push mov call pop movl call cmpl jne mov push call pop pushl call xor inc cmpl je push call pop ret call ret mov push mov push push pushl call add pop ret mov push mov push push pushl call add pop ret push push push call add ret push push push call add ret mov push call mov push call push call push call push call push call push call push call push call push call add mov pop ret mov push mov cmpl je pushl pushl pushl pushl pushl call add pop ret mov push mov push push push mov push push xor xor mov cmp je inc mov cmp jb cmp jae push call pop cmp je push call pop test jne cmpl je cmp je push mov push mov push call add test je push push push push push call add push mov push push movb call test jne push push push call add test je xor push push push push push call add push call inc pop cmp jbe push call sub add push mov push sub push push call add test je xor push push push push push call add jmp xor push push push call add test je push push push push push call add mov pushl push push call add test je push push push push push call add push push push call add jmp push call mov cmp je cmp je push lea push lea pushl call pop push pushl push call pop pop pop leave ret mov push mov xor mov cmp je inc cmp jb xor pop ret mov pop ret push call pop cmp je push call pop test jne cmpl jne push call push call pop pop ret ret mov push mov mov mov push cmp je mov imul add add cmp jb imul add pop cmp jae cmp je xor pop ret mov push mov push push push call mov test je mov mov push mov mov push cmp je mov imul add add cmp jb imul add cmp jae cmp jne mov jmp xor test je mov mov test jne xor jmp cmp jne andl xor inc jmp cmp je mov mov mov mov mov cmp jne mov mov mov add cmp jge imul mov andl mov mov inc add add cmp jl mov mov mov cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl pushl push call pop mov jmp andl push call mov pop mov or pop pop pop leave ret mov push mov mov cmp jne pushl push call pop pop pop ret xor pop ret mov push push xor cmp jne call mov test jne mov mov cmp ja test je test je cmp jne xor test sete mov movzbl push call pop test je inc inc jmp cmp ja inc mov test jne pop mov pop ret cmpl jne call push mov push xor test jne or jmp cmp je inc push call pop lea mov test jne push inc push call mov pop pop mov test je mov push jmp push call mov inc cmpb pop je push push call pop pop mov test je push push push call add test je xor push push push push push call add add add cmpb jne pushl call andl andl movl xor pop pop pop pop ret pushl call andl or jmp mov push mov mov mov pop ret mov push mov push mov push xor push mov mov mov movl cmp je mov addl mov mov cmpb jne xor cmp mov sete inc mov jmp incl test je mov mov inc mov mov movzbl push inc call pop test je incl cmpl je mov mov incl mov inc mov mov test je cmpl jne cmp je cmp jne test je movb andl cmpb je mov cmp je cmp jne inc jmp dec jmp cmpb je cmpl je mov addl mov incl xor inc xor jmp inc inc cmpb je cmpb jne test jne cmpl je lea cmpb jne mov jmp xor xor cmp sete mov shr test je dec test je movb inc incl test jne mov mov test je cmpl jne cmp je cmp je test je movsbl push test je call pop test je mov mov incl mov inc incl mov mov incl mov jmp call pop test je inc incl incl mov inc jmp test je movb inc mov incl mov jmp mov pop pop test je andl incl leave ret mov push mov sub push xor push push cmp jne call push mov push push mov call mov mov cmp je mov cmp jne mov mov lea push push push lea call mov add cmp jae mov cmp jae mov shl lea cmp jb push call mov pop cmp je mov lea push add push push lea call mov add dec mov mov xor jmp or pop pop pop leave ret mov push mov mov sub push push mov push xor xor cmp jne call mov cmp je movl jmp call cmp jne push pop mov jmp mov cmp jne cmp jne call mov cmp jne xor jmp mov cmp je inc inc cmp jne inc inc cmp jne mov push push push sub push sar inc push push push push mov call mov cmp je push call pop mov cmp je push push pushl push pushl push push push call test jne pushl call pop mov mov push call mov jmp cmp je cmp jne call mov cmp je cmp je inc cmp jne inc cmp jne sub inc push mov call mov pop cmp jne push call jmp pushl push push call add push call mov pop pop pop leave ret mov push mov mov push mov cmp jae mov test je call add cmp jb pop pop ret mov push mov mov push mov cmp jae mov test je call add cmp jb pop pop ret xor inc ret mov push mov xor cmp push sete push push call mov test jne pop ret xor inc mov pop ret cmpl jne push xor cmp push mov jle push mov add push push pushl call pushl push pushl call add inc cmp jl pop pushl push pushl call pop pop pushl call andl ret mov ret mov push mov sub mov andl andl push push mov mov cmp je test je not mov jmp push lea push call mov xor call xor call xor call xor lea push call mov xor xor cmp jne mov jmp test jne mov shl or mov not mov pop pop pop leave ret andl ret mov push mov push push mov push mov mov mov push push mov call or pop cmp jne call movl mov mov jmp pushl lea push pushl push call mov cmp jne call test je push call pop jmp mov sar mov and shl lea andb mov mov pop pop leave ret push push call or mov mov mov cmp jne call andl call movl mov mov jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and jne call mov call movl push push push push push call add or mov jmp push call pop mov mov testb je pushl pushl pushl pushl call add mov mov jmp call movl call mov orl orl movl call mov mov call ret pushl call pop ret mov push mov incl push call pop mov mov test je orl movl jmp orl lea mov movl mov andl mov pop ret mov push mov mov cmp jne call movl xor pop ret push xor cmp jl cmp jb call push push push push push movl call add xor jmp mov and sar mov shl movsbl and pop pop ret sub je sub je sub je dec je xor ret mov ret mov ret mov ret mov ret mov push push mov push xor lea push push call xor movzwl mov mov mov mov shl or lea stos stos stos mov add lea sub mov mov mov inc dec jne lea mov mov mov inc dec jne pop pop ret mov push mov sub mov xor mov push push lea push pushl call mov test je xor mov inc cmp jb mov movb test je lea movzbl movzbl cmp ja sub inc push lea push push call add inc mov inc test jne push pushl lea pushl push push lea push push push call xor push pushl lea push push push lea push push pushl push call add push pushl lea push push push lea push push pushl push call add xor movzwl test je orb mov jmp test je orb mov mov jmp movb inc cmp jb jmp lea movl xor sub mov lea add lea cmp ja orb mov add jmp cmp ja orb mov sub mov jmp movb inc cmp jb mov pop xor pop call leave ret push push call call mov mov test je cmpl je mov test jne push call pop mov call ret push call pop andl mov mov cmp je test je push call test jne cmp je push call pop mov mov mov mov push call movl call jmp mov push call pop ret mov push mov sub push xor push lea call mov cmp jne movl call cmp je mov andl jmp cmp jne movl call jmp cmp jne mov mov movl jmp cmp je mov andl mov pop leave ret mov push mov sub mov xor mov push mov push mov push call mov xor mov cmp jne mov call xor jmp mov xor cmp je incl add cmp jb cmp je cmp je movzwl push call test je lea push push call test je push lea push push call xor inc add mov mov cmp jbe cmpb je lea mov test je movzbl movzbl jmp push lea push push call mov add imul mov lea mov jmp mov test je movzbl movzbl jmp mov mov or movzbl inc cmp jbe mov inc inc cmpb jne mov incl add cmpl mov jb mov mov movl call push mov lea lea pop mov inc mov inc inc inc dec jne mov call jmp orb inc cmp jbe inc inc cmpb jne lea mov orb inc dec jne mov call mov mov jmp mov xor movzwl mov shl or lea stos stos stos jmp cmp jne or mov pop pop xor pop call leave ret mov push mov sub push lea call mov cmpl je cmpb mov je mov andl leave ret cmpb je mov andl xor leave ret push push call orl call mov mov call mov mov call mov cmp je push call pop mov test je mov mov mov rep andl push pushl call pop pop mov test jne mov pushl call test jne mov cmp je push call pop mov push mov call testb jne testb jne push call pop andl mov mov mov mov mov mov xor mov cmp jge mov mov inc jmp xor mov cmp jge mov mov inc jmp xor mov cmp jge mov mov inc jmp pushl call test jne mov cmp je push call pop mov push call movl call jmp push call pop ret jmp cmp jne cmp je push call pop call movl jmp andl mov call ret cmpl jne push call pop movl xor ret mov ret mov ret mov push mov push push mov mov xor push cmp je cmp je mov cmp je cmp jne mov cmp je cmp jne push call pushl call pop pop mov cmp je cmp jne push call pushl call pop pop pushl call pushl call pop pop mov cmp je cmp jne mov sub push call mov mov sub push call mov sub push call pushl call add lea mov cmp je cmp jne push call pushl call pop pop lea movl cmpl je mov cmp je cmp jne push call pop cmp je mov cmp je cmp jne push call pop add decl jne push call pop pop pop pop pop ret mov push mov push push mov push mov push call mov test je push call mov test je push call mov test je push call mov test je push call lea movl cmpl je mov test je push call cmpl je mov test je push call add decl jne mov add push call pop pop pop pop ret mov push mov push mov test je push push mov push call mov test je push call mov test je push call mov test je push call mov test je push call lea movl cmpl je mov test je push call cmpl je mov test je push call add decl jne mov add push call pop pop mov pop pop ret mov push mov test je test je cmp je push push pop mov rep andl push call pop pop pop ret test je test je push mov cmp je push mov call pop test je push call cmpl pop jne cmp je push call pop mov pop ret xor ret push push call call mov mov test je cmpl je call mov test jne push call pop mov call ret push call pop andl lea mov call mov movl call jmp push call pop mov ret mov push mov push push call mov test push pop sete inc mov mov cmp je xor cmp je cmp je cmp je call push push push push push movl call add or jmp and jmp or mov jmp orl mov pop pop pop ret mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov ret push push call mov test je push call pop andl mov test je push call test jne mov cmp je push call pop movl call cmpl je push call pop movl pushl call pop mov test je cmpl jne cmp je push call pop movl call mov mov mov push call pop call ret mov push call pop ret mov push call pop ret mov push mov pop jmp push push call call mov push push call pop pop mov mov test jne call movl xor jmp call call mov mov mov mov push call pop andl pushl call pop movl call push call pop movl pushl call movl call mov call ret mov push call pop ret mov push call pop ret jmp xor ret mov push mov push push mov xor cmp jle push lea add pushl pushl pushl call add test je push push push push push call add dec jne pop pop pop pop ret mov push mov push push push mov push xor push push call mov mov add test jne xor jmp cmp jne lea cmp je push push lea push push call add test je push push push push push call add mov jmp push push mov call cmp jmp cmpl lea mov jne cmp jae cmp je push push push pushl jmp cmpl jne cmp jae cmp je push mov push push add jmp cmpl jne cmp jae test je cmp jne push mov push push sub push call add test je xor push push push push push call add cmp je test je incl lea push push call test pop pop jne or pop pop pop pop ret mov push mov push push mov push pushl pushl call add xor test je push push push push push call add lea cmp je push push push pushl pushl call add lea cmp pop pop je push push push pushl pushl call add pop ret mov push mov sub push xor inc push mov call pop mov test je push lea movb mov mov lea lea pushl mov push pushl push push push call mov add mov movl push push push call add test je xor push push push push push call add pushl mov pushl call pop pop test je andl incl mov addl shl lea lea pushl mov mov push pushl push push push call add cmpl jl cmpl jne mov mov test je push call test jne pushl call pop mov test je push call test jne pushl call pop mov andl andl mov mov mov jmp pushl call mov mov xor pop cmp je push call test jne pushl call pop mov cmp je push call test jne pushl call pop mov mov mov mov mov pop pop leave ret mov push mov sub mov xor mov mov push push mov push mov mov mov mov mov call add lea mov lea lea add mov mov test je cmpl je cmpl je cmpb jne cmpb jne push pushl pushl call add xor test je push push push push push call add cmp je xor mov mov mov mov cmp je mov mov jmp push call mov pop mov cmp jae push pushl call pop pop test je push pushl call pop pop test je andl lea push push call pop pop test jne lea push push push call add test je movzwl mov mov lea push push pushl call add cmpb je mov cmp jb mov mov inc push push push pushl call add test je xor push push push push push call add jmp xor cmp je push push pushl call add cmp je push pushl pushl call add pushl pushl pushl call add test je push push push push push call add mov jmp xor mov pop pop xor pop call leave ret mov push mov sub mov xor mov push push mov call pushl mov lea push lea push push lea push push add call add test jne xor jmp mov shl lea pushl lea push call pop pop test je lea push call add push mov call pop pop mov test je mov mov mov lea add imul mov mov mov lea push push mov lea push call mov lea push mov mov mov add add push push call add test je xor push push push push push call add mov mov add mov movzwl mov push lea push pushl call add cmpl jne mov andl mov mov mov mov mov mov cmp je mov incl mov mov mov mov mov mov add cmpl mov jl jmp mov test je lea mov mov mov mov mov mov mov cmpl jne push pushl lea pushl push push push push push call add test je xor mov and inc cmp jb push pushl lea push call add neg sbb inc mov jmp andl mov mov mov mov cmpl jne mov mov mov imul push call pop test je mov pushl mov call mov pop mov mov mov mov jmp cmpl je mov add shl lea pushl call test jne pushl call pushl call andl pop pop mov mov add shl movl mov mov mov pop xor pop call leave ret mov push mov sub mov xor mov mov push push xor mov push mov cmp je cmp je push call pop jmp shl mov jmp movl mov cmp je cmpb jne cmpb jne cmpb jne mov push push call mov pop pop test je sub mov je cmpb je movl mov jmp mov push push pushl call add test jne pushl call pop cmp je incl add cmp jle inc push push call mov xor pop pop cmp jne cmpb jne cmpl jg push push lea push push call add test je push push push push push call add pushl mov lea movb call pop test je incl add cmpb je inc cmpb jne xor cmp je mov jmp xor jmp push push push push lea push push call add cmp je lea test je pushl lea push call pop pop test je push lea call pop test jne and jmp incl inc add cmp jle xor cmp jne cmp je call mov pop pop xor pop call leave ret mov push mov cmpl push push ja cmpl je xor inc push push call mov pop pop test jne call movl xor pop pop pop ret push push call pop pop mov test jne push call pop jmp push push call pop pop mov test jne pushl call push call pop jmp mov mov call pushl mov mov call pop test jne pushl call pushl call push call add jmp pushl mov pushl call pop pop test je pushl call pushl call pushl call push call add xor jmp mov mov mov mov mov jmp mov push mov pop jmp push push call xor mov cmpl jbe call movl push push push push push call add xor jmp call mov mov call orl mov push push call pop pop mov mov cmp je push call pop movl mov mov call mov call pushl mov mov call pop mov cmp je cmp je push pushl call pop pop test je movl push call pop movl lea mov call push call pop testb jne testb jne mov mov call push mov add push push call add call andl call jmp mov mov xor push call pop ret mov push call pop ret jmp push call push call pop pop movl call mov call ret mov andl ret mov push push xor lea pushl call add pop mov cmp jb pop pop ret mov push mov push mov push call add cmp jbe or mov pop pop ret mov push mov mov mov mov pop ret mov push mov push push xor pushl call mov pop test jne cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor push pushl pushl call mov add test jne cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor pushl pushl call mov pop pop test jne cmp je cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor pushl pushl pushl call mov add test jne cmp je cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret push push call xor xor cmp setne cmp jne call movl push push push push push call add or jmp call push pop add push push call pop pop mov call add push call pop mov lea push push pushl call add push call mov call add push push call add movl call mov call ret call add push push call pop pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push push pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push push pushl call add pop ret mov push mov mov mov or xor cmp sete neg sbb and mov pop ret mov or xor cmp sete mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je mov add test je test jne add lea lea mov mov add xor xor add test je mov test je test je test je test je jmp lea mov sub ret lea mov sub ret lea mov sub ret lea mov sub ret mov push mov sub push push mov xor push mov cmp jne cmp jbe mov cmp je mov xor jmp mov cmp je orl cmp jbe call push pop push push push push push mov call add mov jmp pushl lea call mov cmp jne mov mov cmp jbe cmp je cmp jbe push push push call add call movl call mov cmp je mov andl pop pop pop leave ret cmp je cmp ja call push pop push push push push push mov call add cmp je mov andl jmp mov mov cmp je movl cmp je mov andl jmp lea push push push push push lea push push mov pushl call cmp je cmp jne mov cmp je mov jmp call cmp jne cmp je cmp jbe push push push call add jmp mov push mov push pushl pushl pushl pushl call add pop ret mov push mov sub pushl orl lea call lea push pushl mov pushl lea pushl push call add test jne mov jmp or cmpb je mov andl leave ret mov push mov push orl push pushl call push pushl lea push call add test jne mov leave ret or leave ret mov push mov sub pushl lea call movzbl mov mov movzwl and cmpb je mov andl leave ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov mov cmp sbb neg pop ret mov push mov pushl push pushl call add test jne cmpw je pop ret xor inc pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret mov push mov pushl push pushl call add test jne cmpw je pop ret xor inc pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je xor mov test jne cmp jb cmpl je jmp push mov cmp jb neg and je sub mov add sub jne mov shl add mov shl add mov and shr je rep test je mov add sub jne mov pop ret mov ret mov push mov push mov push mov mov cmp je cmp je cmp je cmp je xor jmp xor inc cmp je cmp je xor jmp xor inc test jne test jne mov cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp jne cmp je cmp je cmp je cmp je cmp je cmp je xor jmp xor inc cmp je cmp je cmp je cmp je cmp je cmp je xor jmp xor inc cmp jne mov mov xor test jne xor test jne mov xor cmp sete jmp cmp jne mov mov mov and neg sbb and neg neg sbb neg cmp jne xor inc jmp xor jmp xor cmp sete mov pop pop pop ret testb je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov testb push push mov mov je cmpl jne mov add jmp mov decl mov call inc cmpl jne call cmpl jne mov mov call cmpl jg pop pop pop ret mov push mov mov addl mov mov mov pop ret mov push mov sub mov xor mov mov push mov push mov push pushl xor lea mov mov mov mov mov mov mov call orl mov cmp jne call push push push push push movl call add cmpb je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne cmp je mov mov mov cmpl jne cmp je xor mov orl orl orl mov mov mov mov mov mov mov test je mov jmp mov inc xor cmp mov jl mov sub cmp ja movsbl movzbl and jmp xor mov imul movzbl xor shr inc mov cmp jne cmpb je cmpl jne push lea push push call add test jle mov cmpb jne cmp jne push lea push push call add mov jmp mov mov cmp jne push lea push push call mov add dec lea mov mov cmp jne cmp jl cmpb jne cmp jge cmp jle mov mov mov mov jmp cmp je cmp ja jmp cmp jne cmp je cmp jne cmpl jne jmp orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne orl jmp orl jmp or jmp orl jmp orl jmp cmp jne cmp jne addl mov mov jmp push lea push push call mov add dec lea mov cmp jne cmp jl cmpb jne cmpl jge cmp jle mov shl lea cmp je pushl push push jmp shl mov mov cmp mov jge orl negl jmp mov imul movsbl lea mov jmp mov jmp cmp jne cmp jne addl mov mov jmp push lea push push call mov add dec lea mov cmp je shl mov mov cmp mov jge orl jmp mov movb mov mov jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne inc inc orl mov jmp cmp jne cmpb jne inc inc andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je mov lea push movzbl push mov call pop test mov pop je mov lea call mov mov incl test je mov lea call jmp orl jmp movsbl cmp jg je cmp jg je sub je push pop sub je sub je sub jne add mov mov orl cmp jne cmp jne cmpl ja mov shl lea cmp jne movl mov jmp testl jne orl jmp testl jne orl mov cmp jne mov cmp jne addl mov mov jmp sub je dec dec je sub je dec dec jne push pop testl je cmp jne addl mov movzwl jmp cmpl ja mov shl cmp jne lea cmp jne mov jmp pushl pushl push jmp mov movzwl push push lea push lea push call add test je mov jmp cmp jne addl mov movzwl jmp cmpl ja mov shl cmp je mov movzwl mov mov lea mov jmp cmp jne addl mov mov jmp cmpl ja mov shl cmp je mov mov cmp je mov cmp je testl movswl mov je cltd sub sar mov jmp mov jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne testb movl je orl jmp cmp jne addl mov mov jmp cmpl ja mov shl cmp jne lea cmp je pushl pushl push jmp mov mov call test je testb je mov mov jmp mov mov mov jmp orl movl mov test je cmp jne mov mov mov add mov jmp pushl pushl push push call add test je jmp cmp lea mov mov mov jge movl jmp jne cmp jne mov cmp jne mov add mov jmp cmp jle mov mov cmp jle mov add push call mov pop mov cmp je mov mov jmp cmpl ja mov shl mov add mov mov mov mov lea push pushl movsbl pushl push pushl lea pushl push pushl call pop call mov add and je cmp jne lea push pushl pushl call pop call pop pop cmpb jne cmp jne lea push pushl pushl call pop call pop pop mov cmpb jne orl incl pushl jmp movl movl jmp sub je dec dec je sub jne movl testb movl je mov add movb mov movl jmp cmpl ja mov shl cmp jne lea cmp jne movl jmp pushl pushl push jmp test je cmp je cmpl ja mov shl cmp jne lea cmp jne movl jmp pushl pushl push jmp mov mov mov jmp test je test je cmp jne addl mov movswl jmp cmpl ja mov shl cmp je mov movswl jmp cmp jne addl mov movzwl jmp cmpl ja mov shl cmp je mov movzwl jmp test je cmp jne addl mov mov jmp cmpl ja mov shl cmp je mov mov cltd jmp cmp jne addl mov mov jmp cmpl ja mov shl cmp jne lea cmp jne mov jmp pushl pushl push push call add test je jmp mov mov xor testb je cmp jg jl cmp jae neg adc neg orl testl mov mov jne xor cmpl jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add cmp mov mov mov jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp mov cmp ja shl cmp je mov mov testl mov je cmp jne mov mov mov mov jmp movl mov mov mov jmp dec cmp je inc inc cmp jne sub sar jmp cmp jne mov mov mov jmp dec cmpb je inc cmp jne sub mov cmpl jne cmpl je cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub test jne pushl lea push push call add pushl mov lea lea call testb pop je testb jne push push push lea call add cmpl mov je test jle mov mov movzwl decl push push lea push lea inc push inc call add test jne cmp je pushl lea lea call cmpl pop jne jmp orl jmp mov push lea call pop cmpl jl testb je push push push lea call add cmpl je pushl call andl pop mov mov mov test jne xor cmp je cmpl jne cmpl jne cmp jne xor cmp jl mov lea mov dec je dec je dec je dec je dec je dec je dec dec jne mov add jmp mov add inc add cmp mov jle incl cmpl jge xor jmp cmpb je mov andl mov mov pop pop xor pop call leave ret nop inc inc inc add inc add inc inc add inc inc add inc inc add inc inc add inc or je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov testb push push mov mov je cmpl jne mov add jmp mov decl mov call inc cmpl jne call cmpl jne mov mov call cmpl jg pop pop pop ret mov push mov sub mov xor mov push mov push mov xor push mov pushl lea mov mov mov mov mov mov mov mov mov call test jne call movl xor push push push push push call add cmpb je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne xor cmp je mov mov mov mov mov mov test je inc xor cmp mov jl mov sub cmp ja movsbl movzbl and mov imul movzbl push shr pop mov cmp je push pop cmp ja jmp xor orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne or jmp orl jmp orl jmp orl jmp orl jmp cmp jne add mov mov mov test jge orl negl jmp mov imul movsbl lea mov jmp andl jmp cmp jne add mov mov mov test jge orl jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne inc inc orl mov jmp cmp jne cmpb jne inc inc andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je andl andl lea push movzbl push call pop test mov pop je mov lea call mov inc mov test je mov lea call jmp movsbl cmp jg je cmp jg je sub je dec dec je dec dec je dec dec jne add movl mov orl cmpl lea mov mov mov jge movl jmp testl jne orl jmp testl jne orl mov cmp jne mov add testl mov mov mov je test jne mov mov mov movl jmp sub je dec dec je sub je dec dec jne add testl mov je movzwl push push lea push lea push call add test je movl jmp mov mov movl lea mov jmp mov add mov test je mov test je testl movswl mov je cltd sub sar movl jmp andl jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne testb mov je orl jmp mov add mov call test je testb je mov mov jmp mov mov movl jmp orl movl mov test je add mov mov jmp jne cmp jne movl jmp cmp jle mov cmpl jle mov add push call mov pop mov push test je mov mov mov jmp movl pop add mov mov mov mov lea push pushl movsbl pushl mov push pushl lea push push pushl call pop call mov add and je cmpl jne lea push push pushl call pop call pop pop cmpb jne test jne lea push push pushl call pop call pop pop cmpb jne orl inc mov push jmp mov mov jmp sub je dec dec je sub jne movl testb movl je mov add movb mov movl jmp test jne add test je mov test je movswl jmp movzwl cltd jmp mov test je cltd jmp xor mov test je test jg jl test jae neg adc neg orl testl mov mov jne xor cmpl jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add cmp mov mov mov jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp dec cmpw je inc inc test jne sub sar jmp test jne mov mov mov jmp dec cmpb je inc test jne sub mov cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub testb jne pushl lea push push call add pushl mov lea lea call testb pop je testb jne push push push lea call add cmpl mov je test jle mov mov movzwl decl push push lea push lea inc push inc call add test jne cmp je pushl lea lea call cmpl pop jne jmp orl jmp mov push lea call pop cmpl jl testb je push push push lea call add cmpl je pushl call andl pop mov mov mov test je mov mov jmp xor cmp je cmpl je call push push push push movl push jmp cmpb je mov andl mov mov pop pop xor pop call leave ret mov adcb jg inc add push inc add inc add inc add push inc add push call xor mov push call pop mov push pop mov cmp jge mov shl mov add cmp je mov testb je push call pop cmp je incl cmp jl mov mov add push call mov pushl call pop mov mov inc jmp movl call mov call ret push call pop ret mov push push xor mov cmpl jne lea mov push pushl add call pop pop test je inc cmp jl xor inc pop pop ret andl xor jmp mov push mov push mov push mov test je cmpl je push call push call andl pop add cmp jl mov pop mov test je cmpl jne push call add cmp jl pop pop ret mov push mov mov pushl call pop ret pushl push call push call pop ret push push call xor inc mov xor cmp jne call push call push call pop pop mov lea cmp je mov jmp push call pop mov cmp jne call movl xor jmp push call pop mov cmp jne push push call pop pop test jne push call pop call movl mov jmp mov jmp push call pop movl call mov call ret push call pop ret mov push mov mov push lea cmpl jne push call pop test jne push call pop pushl call pop pop ret mov push mov sub push xor testb push push mov mov mov movl mov je mov movb jmp movl mov lea push call pop test je push push push push push call add mov mov test jne test jne cmp je orb mov and sub mov mov je dec je dec je call mov orl call push pop push push push push push mov call add jmp mov jmp test je test jne movl jmp mov mov push pop sub je sub je sub je sub je sub jne cmp sete mov jmp movl jmp movl jmp movl jmp mov mov mov and mov cmp mov jg je cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp cmp je cmp je cmp jne movl mov movl test je mov not and test js movl test je orl orl orl test je or test je orl jmp movl jmp test je orl call mov cmp jne call mov orl call movl jmp mov mov push pushl movl pushl lea push pushl pushl pushl call mov cmp jne mov mov and cmp jne testb je andl push pushl lea pushl push pushl pushl pushl call mov cmp jne mov mov sar mov and shl lea andb call push call pop call mov jmp pushl call cmp jne mov mov sar mov and shl lea andb call mov push call pop pushl call cmp jne call movl jmp cmp jne orb jmp cmp jne orb pushl pushl call mov mov and sar mov pop shl pop mov or mov mov mov and sar mov shl lea andb mov andb mov jne test je testb je push or push pushl call add mov cmp jne call cmpl je pushl call jmp push lea push pushl mov call add test jne cmpb jne mov cltd push push pushl call add cmp je push push pushl call add cmp je testb je mov mov test jne mov and jne or jmp or mov and cmp je cmp je cmp je cmp je cmp je cmp je cmp jne movb jmp mov mov and cmp jne movb jmp mov testl je testb mov jne mov mov and cmp je cmp je cmp jne mov cmp jbe cmp jbe cmp jbe cmp jne movsbl xor dec je dec jne movl movl jmp push push push pushl call add or je push push push pushl call and add cmp je push lea push pushl call add cmp je cmp je cmp jne cmpl jne movb jmp mov cmp jbe cmp jbe cmp ja push push push pushl call add or je push push push pushl call add and cmp jne jmp mov and cmp jne pushl call pop call push pop mov mov jmp cmp jne push push pushl call add cmp je movb jmp push push pushl call add jmp movl movl mov sub push lea push pushl call add cmp je add cmp jg mov mov sar mov and shl lea mov xor and xor mov mov sar mov and shl lea mov mov shr shl and or mov cmp jne testb je mov mov and sar mov shl lea orb mov mov mov and cmp jne testb je pushl call push pushl lea push push pushl and push pushl call cmp jne call push call mov mov and sar mov shl lea andb pushl call pop jmp mov mov sar mov and shl mov mov pop pop pop leave ret push push call orl xor mov xor cmp setne cmp jne call movl push push push push push call add or jmp mov pushl push pushl pushl lea push lea call add mov movl call mov cmp je call mov jmp xor cmp je cmp je mov sar mov and shl mov lea andb pushl call pop ret mov call ret push push call xor mov xor mov cmp setne cmp jne call push pop mov push push push push push call add mov jmp orl xor cmp setne cmp je cmp je mov and neg sbb inc je mov pushl pushl pushl pushl lea push mov call add mov movl call mov cmp je orl call ret xor mov cmp je cmp je mov mov sar and shl mov lea andb pushl call pop ret mov push mov push orl push lea push pushl pushl pushl pushl call add test je or leave ret mov leave ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov sub push pushl lea call xor cmp jne cmp je mov andl xor jmp mov cmp jne pushl pushl pushl call add cmp je mov andl jmp cmp jne call push push push push push movl call add cmp je mov andl mov jmp push mov cmp jne call push push push push push movl call add cmp je mov andl mov jmp push mov movzbw decl incl movzwl movzbl testb mov je cmp jne movzbl testb mov jne movzwl mov jmp mov mov cmp jne mov jmp shl movzbw or incl movzwl mov mov cmp jb cmp ja add jmp cmp jb cmp ja add jmp movzwl lea testb je movzbw movzwl jmp movzwl mov mov movzbw movzwl movzbl inc testb mov je cmp jne mov jmp mov decl cmp je shl movzbw or movzwl inc mov cmp jb cmp ja add jmp cmp jb cmp ja add jmp movzwl lea testb je movzbw movzwl jmp movzwl mov mov cmp jne cmp je cmp jne cmp je mov andl xor pop pop pop leave ret sbb and dec cmp je mov andl jmp mov push mov push pushl pushl pushl call add pop ret mov push mov sub push xor cmp jne xor jmp push pushl lea call mov cmp jne pushl pushl pushl call add cmp je mov andl jmp cmp jne call push push push push push movl call add cmp je mov andl mov jmp push mov cmp jne call push push push push push movl call add cmp je mov andl mov jmp mov movzbw decl incl movzwl movzbl testb je cmp jne movzbl xor testb je cmp je mov andl xor pop pop pop leave ret mov mov cmp jne xor jmp shl movzbw or incl movzwl movzbw movzwl movzbl inc testb je cmp jne xor jmp mov decl cmp je movzbw shl or inc movzwl cmp jne cmp je cmp jne jmp sbb and dec cmp je mov andl jmp mov push mov push pushl pushl pushl call add pop ret mov push mov mov mov pop ret push push call andl pushl pushl call mov jmp mov mov mov mov xor cmp sete mov ret mov cmpl jne push call andl movl mov call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov cmp je xor pop ret mov add cmpl jne xor mov cmp sete mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov add movzwl push push movzwl xor push lea test jbe mov mov cmp jb mov add cmp jb inc add cmp jb xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov mov xor cmp sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret push push mov jmp push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret mov push mov sub mov xor mov push xor cmp je cmpl jne call mov cmp jne mov jmp push lea push push lea push push call test jne cmpl jne call cmp jne mov push push push lea push push lea push push call push call mov cmp je push lea push push lea push push call test je mov mov xor pop call leave ret movl jmp push push call xor mov xor cmp setne cmp jne call mov call movl push push push push push call add or jmp pushl call mov push call pop pop mov mov decl test je mov movzwl addl push call pop mov cmp jne orl movl call mov call ret push call pop ret push push call push call pop andl pushl call pop movzwl mov movl call mov call ret push call pop ret mov push mov sub push push mov xor cmp je cmp je cmp jne mov cmp je xor mov xor pop pop leave ret pushl lea call mov cmp jne mov cmp je movzbw mov cmp je mov andl xor inc jmp lea push movzbl push call pop pop test je mov mov cmp jle cmp jl xor cmp setne push pushl push push push pushl call test mov jne mov cmp jb cmp je mov cmp je mov andl jmp call movl cmp je mov andl or jmp xor cmp setne push pushl mov push push push pushl call test jne jmp mov push mov push pushl pushl pushl call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub sbb not and mov and cmp jb mov pop xchg mov mov ret sub test jmp mov push mov mov push push test jl cmp jae mov sar mov and lea mov shl cmpl jne cmpl push mov jne sub je dec je dec jne push push jmp push push jmp push push call mov mov xor pop jmp call movl call andl or pop pop pop ret mov push mov mov push xor cmp push push jl cmp jae mov sar mov lea mov and shl add testb je cmpl je cmpl jne sub je dec je dec jne push push jmp push push jmp push push call mov orl xor jmp call movl call mov or pop pop pop pop ret mov push mov mov cmp jne call andl call movl or pop ret push xor cmp jl cmp jae mov and sar mov shl add testb jne call mov call push push push push push movl call add or jmp mov pop pop ret push push call mov mov sar mov and shl add movl xor cmp jne push call pop mov cmp jne push lea push call pop pop test jne mov incl movl call cmp je mov sar and shl mov lea push call mov call ret xor mov push call pop ret mov push mov mov mov and sar mov shl lea push call pop ret push push call orl xor mov push call pop test jne or jmp push call pop mov mov cmp jge mov test je mov mov add cmp jae testb jne cmpl jne push call pop xor inc mov cmpl jne push lea push call pop pop test jne mov jmp incl andl call cmpl jne lea push call testb je push call add jmp mov mov push call pop ret cmpl jne movb orl sub sar mov shl add mov cmpl jne inc jmp push push call pop pop mov test je lea mov addl mov add cmp jae movb orl movb andl add mov jmp shl mov mov sar mov and shl mov movb push call pop test jne orl movl call mov call ret push call pop ret push push call xor mov xor testb je add testl je or testb je or pushl call cmp jne call push call pop or call ret cmp jne or jmp cmp jne or call mov mov cmp jne call movl call mov jmp mov pushl push call pop pop or mov sar lea mov and shl mov mov mov lea andb mov lea andb movl movl call cmp je mov jmp mov xor cmp jne mov sar mov and shl mov lea andb push call pop ret push push call mov cmp jne call movl or jmp xor cmp jl cmp jb call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and je push call pop mov mov testb je pushl call pop push call test jne call mov jmp mov cmp je call mov mov call movl orl movl call mov call ret pushl call pop ret push mov sub mov mov mov mov mov shr jmp lea movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne mov mov mov pop ret push mov sub mov mov mov mov mov cltd mov mov xor sub and xor sub cltd mov xor sub and xor sub mov or jne mov mov and mov cmp je sub push push push call add mov mov test je mov mov add sub mov add sub mov mov mov mov rep mov jmp cmp jne neg add mov mov mov mov rep mov add mov add mov sub push push push call add mov jmp mov mov mov mov shr rep mov and rep mov mov mov mov mov pop ret push push call andl movapd movl jmp mov mov mov cmp je cmp je xor ret xor inc ret mov andl movl mov call ret mov push mov sub xor push mov mov mov push pushf pop mov xor push popf pushf pop sub je push popf xor cpuid mov mov mov mov mov cpuid mov mov pop testl je call test je xor inc jmp xor pop leave ret call mov xor ret cmpl jne xor ret mov sub neg sbb not and ret mov push mov mov lea push cmp jbe call xor push push push push push movl call add push pop jmp xor cmp jne call jmp mov xor pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp cmp je mov mov xor pop pop ret mov push mov push push pushl call mov test jne pop ret mov andl andl mov xor mov movl inc pop ret mov push mov mov mov imul add jmp mov sub cmp jb add cmp jb xor pop ret mov push mov sub mov mov push mov push mov sub add shr mov imul lea mov mov dec mov test jne push lea mov mov mov mov mov mov test jne sar dec cmp jbe push pop mov cmp jne mov cmp jae mov shr lea not and decb jne mov and jmp lea shr lea not and decb jne mov and mov mov mov mov add mov mov mov mov mov mov mov sar dec cmp jbe push pop mov and mov jne sub mov sar push mov dec pop cmp jbe mov add mov sar dec mov cmp jbe mov cmp je mov mov cmp jne mov cmp jae mov shr not and decb jne mov and jmp lea shr not and decb jne mov and mov mov mov mov mov mov mov mov mov jmp mov cmpl jne cmp je mov lea mov mov mov mov mov mov mov cmp jne mov mov inc mov cmp jae cmpb jne mov mov shr mov or mov mov shr lea or jmp cmpb jne lea mov shr mov or lea mov shr lea or mov mov mov mov decl jne mov test je mov mov push shl add mov push push call mov mov mov shr or mov mov mov andl mov mov decb mov mov cmpb jne andl mov cmpl jne push push pushl call mov pushl push pushl call mov mov imul mov sub lea push lea push push call mov add decl cmp jbe subl mov mov mov mov mov pop pop pop leave ret mov push mov push xor cmp jne add imul push pushl push pushl call cmp jne xor jmp addl mov mov imul add push push pushl call mov cmp je push push push push call mov cmp jne pushl push pushl call jmp orl mov mov incl mov orl mov pop pop ret mov push mov push push mov mov push push mov push xor jmp add inc test jge mov imul lea push mov pop mov mov add dec jne push mov push shl add push push call test jne or jmp lea mov cmp ja mov sub shr lea inc orl orl lea mov lea movl mov movl add dec jne mov mov add lea mov mov lea mov mov andl xor inc mov mov mov inc test mov mov jne or mov mov shr not and mov pop pop pop leave ret mov push mov sub mov mov push push mov push mov mov sub add shr mov imul lea mov mov and dec cmp lea mov mov mov jle test jne add cmp jg mov sar dec mov cmp jbe push pop mov mov cmp jne mov cmp jae shr mov lea not and decb jne mov and jmp add shr mov lea not and decb jne mov and mov mov mov mov mov mov mov sub add cmpl jle mov mov sar dec lea cmp jbe push pop mov lea mov mov mov mov mov mov mov mov mov cmp jne mov mov inc mov cmp jae cmpb jne mov mov shr mov or lea mov jmp cmpb jne lea mov shr mov or lea lea mov shr or mov mov lea mov mov jmp mov lea mov mov jmp xor jmp jge mov sub lea mov lea mov sar dec mov mov cmp jbe push pop testb jne mov sar dec cmp jbe push pop mov cmp jne mov cmp jae mov shr lea not and decb jne mov and jmp lea shr lea not and decb jne mov and mov mov mov mov mov mov mov mov add mov sar dec cmp jbe push pop mov lea mov mov mov mov mov mov mov cmp jne mov mov inc mov cmp jae cmpb jne mov mov shr mov or lea mov jmp cmpb jne lea mov shr mov or lea lea mov shr or mov mov mov xor inc pop pop pop leave ret mov test je mov push shl add push push call mov mov mov shr or mov mov mov andl mov mov decb mov mov cmpb jne andl mov cmpl jne cmpl jle pushl push pushl call mov mov imul mov sub lea push lea push push call add decl andl ret mov push mov mov sub push xor cmp jne or jmp cmp push mov push mov mov jle mov cmp je mov mov lea mov mov lea mov mov mov mov mov push xor cmp pop lea mov mov mov rep jl cmp je mov add cmpl lea jne cmpl jne mov mov test je dec cmp jg incl jmp mov sar dec cmp jle push pop lea incl cmp jl test jne cmp jg lea cmp jne mov cmp jb jne add inc cmp jl mov mov cmp jne xor andl lea mov mov mov cmp je mov cmp je mov cmp jb add cmp jae mov and add lea cmp je cmp je mov and add mov cmp jne cmp je mov sar dec cmp jle push pop cmp jne mov cmp jne incl mov mov cmp jne cmpl je cmp mov jge mov shr or or jmp lea shr or or mov cmp jne mov cmp jne cmp jne inc cmp mov jl mov mov xor mov cmp jne mov cmp jne addl addl shll incl add cmpl mov jl mov cmp jne mov cmp jne add incl mov cmp mov jl xor pop pop pop leave ret push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push pop jmp mov push mov push xor cmp jne xor jmp mov cmp jne mov cmp jbe call push push push push push movl call add jmp mov xor inc jmp push mov cmp je cmp jne cmp ja push call pop test jne call push push push push push movl call add jmp mov movl xor inc jmp call movl xor pop pop pop ret mov push mov sub mov mov imul add add and mov sar push dec cmp push push jge or shr orl jmp add or xor shr mov mov mov jmp mov mov and and or jne add mov cmp jb cmp jne mov jmp mov mov and and or jne add mov cmp jb cmp jne jmp cmpl jne add mov cmp jb cmp jne mov jmp cmpl jne add mov cmp jb cmp jne call mov mov test jne xor jmp push call pop mov mov mov cmpl je mov mov mov mov cmp je mov mov and and or jne andl mov lea mov and and or jne incl mov add jmp mov mov imul lea mov mov xor and jne mov and push pop jmp add inc test jge mov mov mov sub mov sar dec cmp mov jle push pop cmp je mov cmp jne cmp mov jge mov shr mov lea not mov and mov decb jne mov mov and jmp lea shr mov lea lea not and decb mov jne mov mov and jmp mov cmpl mov mov mov mov mov mov je mov lea mov mov mov mov mov mov mov cmp jne mov mov inc cmp mov jge cmpb jne mov mov shr or mov mov shr mov or jmp cmpb jne lea mov shr or mov lea lea mov shr or mov test je mov mov jmp mov mov add lea mov mov mov mov lea mov test jne cmp jne mov cmp jne andl mov mov lea pop pop pop leave ret mov push mov sub mov push mov push pop mov mov cmp jne call andl call movl or jmp push xor cmp jl cmp jb call mov call push push push push push movl call add or jmp mov sar push lea mov and shl add mov test jne call mov call movl jmp cmp ja mov cmp je test jne cmp je mov add sar mov movsbl dec push pop je dec jne mov not test je and mov mov mov jmp mov not test jne call mov call movl push push push push push call add jmp mov shr mov cmp jb mov pushl call pop mov cmp jne call movl call movl or jmp push push push pushl call mov mov mov add mov mov add testb je mov cmp je cmp je mov mov inc decl movl movb cmp je mov mov cmp je cmp je mov mov inc decl cmpb movl movb jne mov mov cmp je cmp je mov mov inc decl movl movb push lea push pushl push mov pushl call test je mov cmp jl cmp ja mov add lea testb je cmpb je cmp je mov cmpb jne orb jmp andb mov mov add mov mov cmp jae mov mov cmp je cmp je mov inc inc mov jmp mov dec cmp jae lea cmpb jne inc inc mov movb jmp mov jmp incl push lea push push lea push mov pushl call test jne call test jne cmpl je mov testb je cmpb je movb mov mov mov jmp cmp jne cmpb je push push push pushl call add cmpb je movb inc mov cmp jb jmp mov lea testb jne orb jmp mov mov inc mov sub cmpb mov jne test je dec mov test js inc jmp xor inc movzbl jmp cmp jg cmp jb dec movzbl inc cmpb je mov movzbl movsbl test jne call movl jmp inc cmp jne add jmp mov add testb je inc cmp mov jl mov mov mov inc cmp jne mov mov mov inc sub jmp neg cltd push push push pushl call add mov sub shr push pushl push pushl push push call mov test jne call push call pop orl mov cmp je push call pop mov cmp jne mov jmp mov mov xor cmp setne add mov mov jmp cmp je mov cmpw jne orb jmp andb mov mov add mov mov cmp jae mov movzwl cmp je cmp je mov inc inc inc inc mov jmp mov add cmp jae lea cmpw jne add mov push jmp mov jmp addl push lea push push lea push mov pushl call test jne call test jne cmpl je mov testb je cmpw je push pop mov mov mov mov mov mov mov mov movb jmp cmp jne cmpw je push push push pushl call add cmpw je push pop mov inc inc mov cmp jb jmp mov lea testb jne orb jmp mov mov inc inc sub mov jmp call push pop cmp jne call movl call mov jmp cmp jne mov jmp xor pop pop pop leave ret push push call mov cmp jne call andl call movl or jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and je mov cmp sbb inc jne call mov call movl jmp push call pop mov mov testb je pushl pushl pushl call add mov jmp call movl call mov orl movl call mov call ret pushl call pop ret mov push mov mov push xor push push cmp je mov cmp ja call push pop mov push push push push push call add mov jmp mov cmp jne mov jmp mov mov mov inc inc cmp je dec jne cmp jne mov call push pop mov mov jmp xor pop pop pop pop ret push push call push call pop andl mov mov test je mov mov mov test je cmp jne mov mov push call pop pushl call pop andl movl call call ret mov jmp push call pop ret push push call mov xor cmp jne push push push push lea push push call add mov cmp jne xor jmp push call pop mov jmp dec mov add cmpb jne mov cmp ja dec push call pop mov cmp jne push call pop mov test je add push call pop mov test je pushl push push call add xor cmp je push push push push push call add mov mov mov mov mov mov jmp push call pop pushl call pop movl call mov call ret mov push call pop ret push push call push call pop andl mov mov test je mov mov mov test je cmp jne mov mov push call pop pushl call pop andl movl call call ret mov jmp push call pop ret mov push mov cmpw jne movl pushl push push pushl pushl pushl call add pop ret push push call xor mov cmp jne push call pop mov cmp jne push push add push push call add mov mov cmp jne push lea push push call add xor jmp push call pop mov mov mov dec mov test jbe lea cmpb jne movb jmp push call pop mov cmp je lea push call pop mov test je pushl push push call add xor cmp je push push push push push call add mov mov mov mov mov mov mov jmp push call pop pushl call pop mov movl call mov call ret mov push call pop ret push push call push call pop andl mov mov test je mov pushl call push call pop pop mov jmp movl call call ret push call pop ret int3 int3 int3 int3 int3 int3 mov mov test jne mov cmp jne or je cmp jne or je shr cmp jne or je cmp jne add add or jne mov xor ret nop sbb shl add ret test je mov add cmp jne add or je test je mov add cmp jne or je cmp jne or je add jmp push push call xor mov xor cmp setne cmp jne call movl push push push push push call add or jmp cmpl jne push call pop mov push call pop mov cmp je mov sub mov jmp mov movl call cmp jne push push pushl call mov mov call ret xor mov mov push call pop ret push push call call mov test je andl call jmp xor inc ret mov movl call call ret call mov test je call jmp push push call pushl call pop test je andl call jmp xor inc ret mov movl call int3 push call pop mov ret mov push mov mov mov mov mov mov pop ret push push call xor push call pop mov cmp jne mov pushl call mov movl jmp mov pushl call mov movl pop cmp je cmp je call mov movl call cmp jne xor jmp xor push call pop ret cmpl je pushl call pop xor inc call ret mov push mov mov mov push cmp je mov imul add add cmp jb imul add pop cmp jae cmp je xor pop ret pushl call pop ret call add ret call add ret push push call andl mov mov cmp je cmp je push pop cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp jne call mov test je mov cmp jne pushl call pop mov test je pushl push push call add pushl mov call pop test je mov mov cmp je jmp mov add mov imul add cmp jae cmp je jmp push call pop andl cmp je cmp jne cmpl jne push push call xor inc cmp jne mov jmp call mov call mov movl mov mov sub je sub je sub je sub je dec jne pushl call pop mov cmp je push call mov jmp pushl call pop mov cmp je push call mov jmp pushl call pop mov cmp je push call mov jmp pushl call pop mov cmp je push call mov pop movl call cmpl jne mov mov jmp mov push call pop ret cmp je cmp je cmp je cmp jle cmp jle call movl xor push push push push push call add or call ret push push call xor mov mov mov cmp jg je mov push pop sub je sub je sub je sub jne call mov mov test jne or jmp mov mov jmp pushl mov call mov add mov jmp mov sub je sub je dec je call movl xor push push push push push call add jmp mov mov jmp mov mov jmp mov mov movl push call mov pop xor cmpl je cmp jne push call cmp je push call pop xor mov cmp je cmp je cmp jne mov mov mov cmp jne mov mov movl cmp jne mov mov mov mov add cmp jge mov imul mov mov incl jmp call mov movl call cmp jne pushl push call pop jmp mov mov cmpl je push call pop ret push call pop cmp je cmp je cmp jne mov mov cmp jne mov mov xor call ret mov push mov mov mov pop ret mov push mov push push push pushl call mov mov xor pop cmp jne call push pop push push push push push mov call add mov jmp push mov cmp jne push call mov cmp jne call push pop push push push push push mov call add mov jmp push push call mov cmp jne call mov mov call push call push push push push push mov call add call push call pop jmp push call pop mov call push push mov call cmp je pushl call push pushl call test jne call movl call mov jmp xor pop pop pop leave ret mov push mov sub mov xor mov mov push push mov xor cmpl push mov mov jne push push lea mov push pushl mov pushl push call mov add cmp jne call cmp jne push push push pushl pushl pushl call add mov cmp je xor inc push push call mov pop pop cmp je push pushl mov push pushl pushl pushl call mov add cmp je push push call pop pop mov mov cmp jne cmp je push call pop or mov pop pop xor pop call leave ret lea push push push push call add test je push push push push push call add cmp je push call pop xor jmp cmp jne push push mov push pushl pushl push call add test je mov mov movzbl push call pop test je mov mov imul add sub inc inc cmp mov jl jmp mov push mov mov mov pop ret mov push mov sub push push push call andl cmpl mov jne push call mov test je mov push push call test je push call movl push mov call push call movl push mov call push call movl push mov call push call pop mov test je push push call push call pop mov mov cmp je cmp je push call pushl mov call pop pop mov test je test je call test je lea push push lea push push push call test je testb jne orl jmp mov cmp je push call pop test je call mov test je mov cmp je push call pop test je pushl call mov pushl call pop test je pushl pushl pushl pushl call jmp xor pop pop pop leave ret mov push mov mov push xor push push cmp je mov cmp ja call push pop mov push push push push push call add mov jmp mov cmp jne mov jmp mov cmp je inc dec jne cmp je mov mov inc inc cmp je dec jne cmp jne mov call push pop mov mov jmp xor pop pop pop pop ret mov push mov push push mov xor push cmp jne cmp jne cmp jne xor pop pop pop pop ret cmp je mov cmp ja call push pop mov push push push push push call add mov jmp cmp jne mov jmp mov cmp jne mov jmp cmpl mov jne mov mov inc inc cmp je dec jne jmp mov mov inc inc cmp je dec je decl jne cmp jne mov cmp jne cmpl jne mov push mov pop jmp mov call push pop mov mov jmp mov push mov mov push xor cmp jl cmp jle cmp jne mov jmp mov mov jmp call push push push push push movl call add or pop pop ret mov push mov mov mov pop ret mov ret mov push mov sub pushl lea call movzbl mov mov test jne cmpl je mov mov movzwl and jmp xor test je xor inc cmpb je mov andl leave ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov sub pushl lea call mov test je cmpl jne push push pushl pushl call add cmpb je mov andl leave ret cmpb je mov andl xor leave ret mov push mov push pushl call pop pop pop ret mov push mov mov test je mov mov add pop ret mov push mov mov test je sub cmpl jne push call pop pop ret mov push mov mov jmp dec cmpb je inc test jne dec mov sub dec pop ret mov push mov sub mov xor mov push push xor push mov cmp jne push push xor inc push push push push call test je mov jmp call cmp jne movl cmp jle mov mov dec cmp je inc cmp jne or mov sub dec cmp jge inc mov mov cmp je cmp je cmp jne mov cmp jne mov mov mov mov xor cmp push push pushl setne pushl lea push pushl call mov cmp je jle push xor pop div cmp jb lea cmp ja call mov cmp je movl jmp push call pop cmp je movl add mov jmp mov cmp je push pushl pushl pushl push pushl call test je mov push push push pushl pushl pushl call mov mov cmp je testl je cmp je cmp jg pushl pushl push pushl pushl pushl call jmp cmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl add jmp push call pop cmp je movl add mov jmp xor cmp je pushl push push pushl pushl pushl call test je push push cmp jne push push jmp pushl pushl pushl push push pushl call mov push call pop pushl call mov pop jmp mov mov cmp jne mov mov mov cmp jne mov mov mov pushl call pop mov cmp jne xor jmp cmp je push push lea push pushl push pushl call add mov cmp je mov push push pushl push pushl pushl call mov cmp jne xor jmp jle cmp ja add cmp ja call mov cmp je movl add jmp push call pop cmp je movl add mov jmp xor cmp je pushl push push call add pushl push pushl pushl pushl pushl call mov cmp jne xor jmp pushl lea pushl push push pushl pushl call mov mov add neg sbb and push call pop jmp pushl pushl pushl pushl pushl pushl call mov cmp je pushl call pop mov cmp je cmp je push call pop mov lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl pushl call add cmpb je mov andl leave ret mov push mov push push mov xor mov mov push push xor push mov cmp jne lea push xor inc push push push call test je mov jmp call cmp jne push pop mov jmp mov cmp je cmp je cmp jne mov cmp jne mov mov mov mov xor cmp push push pushl setne pushl lea push pushl call mov cmp je jle cmp ja lea cmp ja call mov cmp je movl jmp push call pop cmp je movl add mov test je lea push push push call add push push pushl pushl push pushl call test je pushl push push pushl call mov push call mov pop jmp xor cmp jne mov mov mov cmp jne mov mov mov pushl call pop cmp jne xor jmp cmp je push push lea push pushl push pushl call mov add cmp je mov pushl pushl pushl pushl pushl call mov cmp je push call pop mov lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl call add cmpb je mov andl leave ret mov ret call mov mov cmp je mov test jne call mov ret mov push mov sub movzwl movzwl mov mov test jne or leave ret andl push push mov lea push push push xor inc lea push push call mov lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call push push pushl or lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl push lea push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push mov push lea push push call add or mov pop mov pop leave ret mov push mov push mov test je pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pop pop ret mov push mov push push push mov cmpl mov je push push call mov pop pop test jne xor inc jmp mov call test je push call push call pop pop jmp movl jmp mov add mov cmp je add push call mov xor pop pop pop pop ret xor cmp je push push mov cmp jl cmp jg sub mov inc cmp jne pop pop ret cmp jne mov lea mov mov mov cmp jne jmp mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret mov push mov sub push mov push xor push mov mov cmp jne cmp jne mov mov movl jmp push push call mov pop pop mov cmp jne xor inc jmp mov push pop push rep call xor pop mov cmp jne pushl call pop jmp mov cmp je push call pop mov cmp jne xor inc pushl call pushl call pop pop mov jmp mov mov movzwl push push push lea push push call mov lea push push push lea push push call or lea push push push mov lea push push call add or je push call pop or jmp mov mov jmp mov cmp jl cmp jg sub mov inc cmpb jne jmp cmp jne mov lea mov mov mov cmpb jne jmp mov mov mov mov mov mov mov mov mov xor inc mov mov test je mov mov mov test je push call mov test je push call test jne pushl call pushl call pop pop mov mov mov mov mov mov xor pop pop pop leave ret xor cmp je push push mov cmp jl cmp jg sub mov inc cmp jne pop pop ret cmp jne mov lea mov mov mov cmp jne jmp mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret mov push mov sub push push mov push xor mov mov mov cmp jne cmp jne mov mov mov jmp push push call mov pop pop cmp jne xor inc jmp push call pop mov cmp jne push call pop jmp mov cmp je push call pop mov cmp jne push call pushl call pop jmp mov movzwl lea push push push lea push push call mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or je push call push call pushl call pushl call add jmp mov jmp mov cmp jl cmp jg sub mov inc cmpb jne jmp cmp jne mov lea mov mov mov cmpb jne jmp push pop mov mov rep mov mov add mov mov mov mov mov mov mov mov mov mov xor inc xor mov cmp je mov mov mov cmp je push call mov cmp je push call test jne pushl call pushl call pop pop mov mov mov mov mov xor pop pop pop leave ret mov push mov sub mov xor mov push xor push mov push mov mov mov mov mov mov mov cmp je lea cmp jne push movzwl push push lea push push call add test jne push call push mov push mov call push push mov call push push mov call push push mov call add mov cmp je cmp je cmp je cmp je cmp je mov mov xor mov mov inc cmp jl lea push pushl call test je cmpl ja movzwl cmp mov jle cmp je lea mov cmp je movzbl movzbl jmp mov movb movzbl inc cmp jle inc inc cmp jne mov push push pushl add push push pushl mov push push call add test je mov mov push pushl mov push add push push inc push push pushl push call add test je mov push pushl add push push mov push inc push push pushl push call add test je mov mov lea xor cmpl mov mov mov lea mov mov mov mov lea mov mov jle cmp je lea mov mov cmp je movzbl movzbl cmp mov jg lea jmp mov incl mov mov inc inc mov mov movzbl cmp jle mov inc inc mov cmp jne push lea push push call push lea push push call mov push lea push push call mov add cmp je push call test jne mov sub push call mov mov sub push call mov sub push call pushl call add mov movl mov mov mov mov mov mov mov mov mov mov mov pushl call pop mov jmp pushl call pushl call pushl call pushl call xor add inc jmp lea mov cmp je push call mov mov movl movl movl movl xor mov pop pop xor pop call leave ret call mov mov cmp je mov test jne call mov ret mov push mov mov test jne pop jmp mov mov pop ret call mov mov cmp je mov test jne call mov ret call mov mov cmp je mov test jne call mov ret call mov mov cmp je mov test jne call add ret xor ret mov push mov sub push push push pushl lea xor call mov mov mov mov shl pushl call pushl mov call add incl cmpl pop pop mov lea jb lea push call mov pop mov test je andl mov movb pushl mov inc sub lea push push call add test je xor push push push push push call add push call add mov movb pushl mov inc sub lea push push call add test je xor push push push push push call add push call add incl cmpl pop jb movb cmpb pop pop pop je mov andl mov leave ret push call pop ret mov push mov sub push push push pushl lea xor call mov mov lea mov movl pushl call pushl mov call mov pop pop mov add add decl lea mov jne lea push call mov pop mov test je add movl mov movb pushl inc sub lea push push call add test je xor push push push push push call add push call add mov movb pushl inc sub lea push push call add test je xor push push push push push call add push call add add decl pop jne movb cmpb pop pop pop je mov andl mov leave ret push call pop ret mov push mov sub push push push pushl lea xor call mov mov mov mov shl pushl call pushl mov call add incl cmpl pop pop mov lea jb lea mov movl mov pushl call pushl mov call addl pop pop mov add decl lea jne pushl call pushl mov call pushl add lea call pushl lea call pushl lea call lea push mov call mov add test je push push push lea call andl lea mov add sub mov mov mov mov pushl mov sub add push push call add test je xor push push push push push call add push call mov lea mov mov pushl mov sub add push push call add test je xor push push push push push call add push call incl addl cmpl pop lea jb lea mov lea mov movl jmp mov mov mov pushl mov sub add push push call add test je xor push push push push push call add push call lea mov mov mov pushl mov sub add push push call add test je xor push push push push push call add push call addl addl decl pop lea jne mov sub add mov pushl push push call add test je xor push push push push push call add push call lea mov sub add mov pushl push push call add test je xor push push push push push call add push call lea mov sub add mov pushl push push call add test je xor push push push push push call add push call lea mov sub add mov pushl push push call add test je xor push push push push push call add push call lea mov sub add mov pushl push push call add test je xor push push push push push call add cmpb je mov andl pop pop mov pop leave ret push call pop ret cmpl push mov je push mov test je mov mov incl inc decl cmpl jne pop pop ret cmpl mov push jbe push cltd pop idiv add mov inc decl mov test jle cmp ja mov mov dec mov mov mov dec mov inc cmp jb pop ret mov push mov push push push mov xor mov cmp je cmpl mov jbe push cltd pop idiv add mov inc decl mov test jle cmp ja mov mov dec mov mov mov dec mov inc cmp jb jmp cmp jae dec lea test je push cltd pop idiv mov add incl mov dec cmp jne mov add sub jmp mov pop pop leave ret mov push mov push push movsbl cmp push push mov mov jg je cmp jg je sub je sub je sub je sub je dec je sub jne mov xor cmp jl cmp jg jmp mov xor cmp jl cmp jg mov mov jmp mov xor cmp jl cmp jg mov mov jmp mov movb mov incl decl jmp mov xor cmp jl cmp jg cltd push pop idiv mov cmp jne push pop jmp sub je push pop sub je dec dec je dec dec je dec jne pushl pushl jmp mov xor cmp jl cmp jg cmp je lea jmp mov xor cmp jl cmp jg mov mov cmp jl cmp jg cmp jge xor jmp push cltd pop idiv cmp jl inc jmp mov xor cmp jl cmp jmp mov jmp mov cmp jl cmp jle call xor jmp cltd push pop idiv pushl push add imul add jmp cmp jg je sub je sub je dec je dec je dec je sub jne mov xor cmp jl cmp jg pushl lea push jmp mov cmp jl cmp jg mov pushl push pop mov mov call pop jmp pushl xor pushl push push cmp je push pushl call add test je mov cmp je mov pushl movb mov incl decl push push push push pushl call add test jne jmp push jmp mov xor cmp jl cmp jg mov mov jmp mov xor cmp jl cmp jle call push push push push push movl call add xor jmp mov mov jmp mov xor cmp jl cmp jg lea jmp sub je sub je dec je dec je dec jne call call mov xor cmp mov setne mov mov mov jmp mov xor cmp jl pushl cltd push pop idiv mov jmp pushl xor pushl push push cmp je push jmp push jmp mov xor cmp jl cmp jg pushl xor inc jmp mov xor cmp jl cmp jg cmp mov jg mov jmp mov mov call xor inc pop pop pop leave ret mov push mov sub mov xor mov mov push push mov xor sub push je dec je mov jmp mov jmp mov cmpl mov je cmpl mov jne mov mov add push mov mov inc mov mov mov mov mov mov mov mov push xor push mov lea push push pushl mov mov call mov cmp je add cmp jg call mov cmp je movl jmp push call pop cmp je movl add mov cmp je pushl mov push push lea push push pushl call dec test jle mov mov cmpl jbe mov mov mov mov incl mov inc decl dec test jg pushl call pop xor inc lea pop pop pop mov xor call leave ret mov test je mov mov cmpl je xor mov mov inc inc cmp je mov movsbl cmp jg je cmp je cmp je cmp je cmp je cmp je pushl push call pop pop test je cmpl jbe lea cmpb je mov mov mov incl decl mov mov mov mov incl inc decl mov test jne jmp mov dec je dec je dec je dec jne mov jmp mov jmp movl mov jmp mov dec je dec je jmp movl mov jmp push push call pop pop test jne add jmp push push call pop pop test jne add mov mov jmp add test je mov test je cmpl je cmp je pushl movsbl push call pop pop test je cmpl jbe lea cmpb je mov mov mov incl decl mov mov mov mov incl inc decl mov test jne jmp inc jmp mov dec je dec je dec je dec jne mov jmp mov jmp movl mov jmp mov sub je sub je sub je dec je sub jne mov dec dec je dec dec jne mov jmp mov jmp mov cmpl mov jg mov jmp mov cmp jne cmpl jbe movsbl pushl push call pop pop test je cmpl jbe lea cmpb je mov mov mov incl decl mov mov mov mov incl decl jmp cmpl jbe pushl movsbl push call pop pop test je cmpl jbe lea cmpb je mov mov mov incl decl mov mov mov mov incl inc decl mov test jne jmp mov dec je dec je jmp movl mov jmp mov dec je dec je jmp movl mov jmp mov dec je dec je jmp movl mov pushl mov pushl mov push pushl call add test je mov jmp xor jmp mov push mov sub mov push pushl xor lea mov mov call mov cmp jne call push push push push push movl call add cmp je mov andl xor jmp push mov cmp jne call push push push push push movl call add cmp je mov andl xor jmp push mov mov cmp je mov cmp jne mov mov mov mov cmp jbe mov cmp je cmp je lea movsbl push push call pop pop test je xor inc cmp jbe lea cmp je mov mov mov incl decl mov mov mov mov incl inc decl jmp mov cmp je inc xor cmpb jne inc inc push pushl lea push lea push mov lea call add test je inc cmp ja cmp jbe mov mov sub mov cmp je mov andl jmp mov mov mov cmp jne cmp ja call movl jmp cmp jbe movl jmp call push push push push push movl call add cmp je mov andl xor pop pop pop leave ret mov push mov pushl push pushl pushl pushl pushl call add pop ret mov push mov push push pushl pushl pushl pushl call add pop ret mov push mov push pushl pushl pushl pushl pushl call add pop ret call mov cmp je mov test jne call mov ret int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jae mov add pop leave ret mov push mov xor push xor inc cmp jl push push test je mov add cltd sub mov mov sar lea pushl mov pushl call pop pop test jne mov add mov jmp jge dec mov jmp lea cmp jle pop pop xor test sete pop mov pop ret orl call mov mov ret mov push mov sub mov xor mov push mov test je cmpb je push push call pop pop test je push push call pop pop test jne push lea push push pushl call test je lea push call pop mov xor pop call leave ret push lea push push pushl call test jne xor jmp lea push push call pop pop test jne call jmp mov push mov xor mov cmp je inc inc cmp jb xor inc pop ret xor pop ret mov push xor jmp mov sub inc cmp ja add jmp mov sub cmp ja add movsbl shl lea mov test jne mov pop ret xor mov inc cmp jl cmp jle sub cmp ja inc jmp ret mov push mov sub mov xor mov push push mov call mov mov add call mov push lea push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne push call pop test je orl mov mov mov shr not and mov pop xor pop call leave ret mov push mov sub mov xor mov push push lea push mov and push or push mov call test jne xor jmp lea call cmp je cmpl je mov push mov call push mov call pop cmp pop je xor inc mov xor pop call leave ret mov push mov sub mov xor mov push push push mov call mov mov add call mov mov push lea push mov neg sbb and add push push call test jne andl xor inc jmp lea push pushl call pop pop test jne push lea push mov neg sbb and add push push call test je lea push pushl call pop pop test jne orl mov jmp testb jne mov test je push lea push pushl call add test jne pushl orl mov call pop cmp jne mov jmp mov test jne push call pop test je or mov mov mov mov and cmp je push lea push mov neg sbb and add push push call test je lea push pushl call pop xor pop test jne orl mov cmp je or mov jmp cmp je pushl call pop cmp jne push jmp cmp jne cmp je lea push pushl call pop pop test jne push push mov call pop pop test je orl cmp jne mov mov shr not and mov pop pop xor pop call leave ret mov push mov sub mov xor mov push push mov call mov mov add call mov push lea push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne cmp jne push jmp cmpl jne cmpl je lea push pushl call pop pop test jne push push mov call pop pop test je orl mov mov mov shr not and mov pop xor pop call leave ret pushl call sub neg pop sbb push inc push mov call testb jne andl ret pushl call pushl sub neg sbb inc mov call sub neg sbb andl inc cmpl pop pop mov je push pop jmp mov call push push mov call mov test je test je test jne andl ret pushl call sub neg sbb inc pop mov je push pop jmp mov call push push mov call testb jne andl ret mov push mov push push push call mov mov add test jne orl jmp lea lea mov mov test je cmpb je push push push call add mov andl test je cmpb je mov test je cmpb je call jmp call cmpl jne push push push call add test je mov test je cmpb je call jmp call jmp mov test je cmpb je push call sub neg pop sbb push inc push mov call testb jne andl jmp movl call mov mov cmpl je mov sub neg sbb and mov call mov mov test je cmp je cmp je movzwl push call test je push pushl call test je mov test je mov mov mov mov mov mov test je mov mov cmp jne push push push call add test je xor push push push push push call add jmp push push push pushl call test je push lea push push pushl call test je push push sub push pushl call add xor inc jmp xor pop pop pop pop ret test je xor test setg lea mov ret movzbl movzbl sub je xor test setg lea mov ret mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov ret xor ret mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov ret xor ret mov push push mov jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne add add sub cmp jae add add cmp ja jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne xor pop pop ret mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne movzbl movzbl sub je xor test setg lea mov jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp lea jb inc add out add ljmp stos loope add jmp inc add loope add in add call inc add inc add inc add add loopne add jecxz add out add fildl jle inc add inc add inc add inc add fiadd loop inc add out add fiadd push loop add out add push push mov mov sub je dec je dec je dec je dec je mov mov push push pop jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne add add sub cmp jae add add cmp ja jmp mov jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test je mov jmp movzbl movzbl sub je xor test setg lea mov jmp xor test jne xor pop jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne movzbl movzbl sub je xor test setg lea mov jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne movzbl movzbl sub je xor test setg lea test je mov jmp mov mov movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp mov mov movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl jmp mov mov movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl jmp mov mov movzbl movzbl jmp xor pop pop pop ret imul inc add inc add repnz add testb cli inc add incb pop repnz add inc add inc add inc add icebp inc add stc inc add std inc add icebp inc add cmc inc add stc inc add inc add hlt inc add cld inc add lock add hlt inc add inc add out inc add inc add inc add call in push andl push mov test jne xor jmp push cmp jb lea test jbe mov mov mov add add test je cmp jne mov test je cmp jne mov test je cmp jne mov test je cmp jne addl cmp jb jmp movzbl movzbl jmp movzbl movzbl jmp movzbl movzbl jmp movzbl movzbl jmp mov mov jmp mov test je cmp jne inc inc incl cmp jb xor pop pop leave ret movzbl movzbl sub jmp int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov mov mov or je add bt jae lea add pop leave ret push call pop ret push push call mov xor cmp jbe push pop xor div cmp sbb inc jne call movl push push push push push call add xor jmp imul mov mov cmp jne xor inc xor mov cmp ja cmpl jne add and mov mov cmp ja push call pop mov pushl call pop mov movl call mov cmp je pushl push push call add cmp jne push push pushl call mov cmp jne cmp je push call pop test jne mov cmp je movl jmp xor mov push call pop ret cmp jne mov cmp je movl mov call ret push push call mov test jne pushl call pop jmp mov test jne push call pop jmp cmpl jne xor mov cmp ja push call pop mov push call pop mov cmp je cmp ja push push push call add test je mov jmp push call pop mov cmp je mov dec cmp jb mov push push pushl call push call mov push push call add cmp jne cmp jne xor inc mov add and mov push push pushl call mov cmp je mov dec cmp jb mov push push pushl call push pushl call add movl call cmpl jne test jne inc add and mov push push push pushl call mov jmp mov mov push call pop ret mov test jne cmp je push call pop test jne call cmp jne mov call push call pop mov jmp test jne call cmp je movl jmp test jne inc push push push pushl call mov test jne cmp je push call pop test je cmp jbe push call pop call movl xor call ret call jmp test jne call mov call push call mov pop mov jmp mov push mov mov push xor cmp jbe push xor pop div cmp jae call push push push push push movl call add xor jmp imul push push mov cmp je pushl call pop mov push pushl call mov pop pop test je cmp jae sub push push add push call add mov pop pop pop pop ret mov push mov push mov push call push call pop pop test je call add cmp jne xor jmp call add cmp jne xor inc incl testl jne push push lea cmpl mov jne push call pop mov test jne lea push mov mov pop mov mov jmp mov mov mov mov mov orl xor pop inc pop jmp xor pop pop ret mov push mov cmpl je push mov testl je push call andl andl andl andl pop pop pop ret push push call call mov add mov xor xor cmp setne cmp jne call movl push push push push push call add or jmp push call pop mov push call mov pushl pushl pushl push call mov push push call add movl call mov call ret mov push call pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov mov sub cmp jne andl jmp mov cmp jae movzwl mov mov and movzwl mov jmp pushl lea call mov pushl pushl lea push push lea push lea push push call add test jne and cmpb je mov andl movzwl movzwl and leave ret mov push mov push mov cmp jne xor leave ret mov cmp jae movzwl mov movzwl movzwl and leave ret cmpl jne pushl lea pushl push push lea push push push call add push pushl pushl call add leave ret mov push mov pop jmp push mov sub mov mov mov shr pxor jmp lea nop movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea dec jne mov mov pop ret push mov sub mov mov cltd mov xor sub and xor sub test jne mov mov and mov cmp je sub push push call add mov mov test je add sub mov xor mov mov rep mov jmp neg add mov xor mov mov rep mov mov mov add sub push push push call add mov mov mov pop ret mov push mov sub push push pushl lea call mov mov xor cmp je mov cmp jne call push push push push push movl call add cmpb je mov andl xor jmp cmp je cmpl jl cmpl jg mov push mov mov lea cmpl jle lea push movzbl push push call mov add jmp mov movzbl movzwl and test je mov inc jmp cmp jne orl jmp cmp jne mov inc mov test jl cmp je cmp jg test jne cmp je movl jmp mov cmp je cmp je movl jmp movl jmp cmp jne cmp jne mov cmp je cmp jne inc mov inc mov mov xor divl movzbl movzwl test je movsbl sub jmp test je mov sub cmp movsbl ja sub add cmp jae orl cmp jb jne cmp jbe orl cmpl jne mov dec test jne cmpl je mov andl jmp mov imul add mov mov inc jmp mov test jne test jne and je cmpl ja test jne cmp jbe call testb movl je orl jmp testb push pop setne add mov mov test je mov testb je negl cmpb je mov andl mov jmp mov test je mov cmpb je mov andl xor pop pop pop leave ret mov push mov xor push pushl pushl pushl cmp jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov cmpl push pushl pushl pushl jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov sub push push push xor push push push pushl mov mov call mov and add mov cmp je push push push pushl call mov and add cmp je mov mov sub sbb js jg cmp jbe mov push push call push call mov test jne call movl call mov pop pop pop leave ret push pushl call pop pop mov test jl jg cmp jb mov jmp mov push pushl pushl call add cmp je cltd sub sbb js jg test ja mov pushl pushl call pop pop pushl push call push call xor jmp call cmpl jne call movl or mov jmp cmp jg jl cmp jae push pushl pushl pushl call and add cmp je pushl call pop push call neg sbb neg dec cltd mov and mov cmp jne call movl call mov call mov mov and cmp je push pushl pushl pushl call and add cmp je xor jmp push push call mov cmp jne call andl push pop jmp xor cmp jl cmp jb call mov call push pop mov push push push push push call add mov jmp mov sar lea mov and shl mov movsbl and je cmp jg jl cmp jae call mov call push pop mov mov jmp push call pop mov mov testb je pushl pushl pushl call add mov jmp call push pop mov mov movl call mov call ret pushl call pop ret mov push mov mov cltd push push pushl call add neg sbb pop ret mov push mov push mov push mov mov sar lea mov and shl lea mov add push movzbl movsbl and sar cmp je cmp je cmp je cmp je cmp jne orb mov lea mov and or mov jmp orb mov lea mov and or jmp andb jmp orb mov lea andb test pop pop pop jne mov pop ret neg sbb and add pop ret mov push mov mov cmp je cmp je cmp je call movl xor push push push push push call add push pop pop ret push push call xor pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov mov xor pop pop ret push push call mov cmp je cmp je cmp je cmp je cmp je call movl xor push push push push push call add or jmp mov cmp jne call movl jmp xor cmp jl cmp jb call movl jmp mov sar lea mov and shl mov movsbl and je push call pop mov mov testb je pushl pushl call pop pop mov jmp call movl orl movl call mov call ret pushl call pop ret mov push mov sub push xor push push cmp je pushl lea call cmp jne call push push push push push movl call add cmp je mov andl mov jmp mov cmp je mov cmp jbe call push push push push push movl call add cmp je mov andl mov jmp mov cmp jne pushl push pushl call add cmp je mov andl jmp mov movzbl lea push push call incl mov movzbl lea push push call add inc decl je cmp je cmp je sub mov jmp xor pop pop pop leave ret mov push mov push xor cmp jne cmp jne call push push push push push movl call add mov jmp cmp je cmpl ja pop pop jmp push pushl pushl pushl call add pop pop ret xor push push push push push push push call mov ret xor push push push push push push push call mov ret mov push mov cmp je cmp je push call mov cmp je cmp je push call pop ret mov push mov mov mov inc inc test jne sub sar dec pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmpl je push push and and cmp pop pop jne pop pop pop jmp test jne shr and cmp jb rep jmp nop mov mov sub jb and add jmp jmp nop jmp nop cmp add add rorl inc add add jmp add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov add shr add cmp jb rep jmp lea or inc add adc add adc add adc add adc add adc add adc add inc (bad) in inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov and inc add inc add add leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop les inc add push inc add mov sub shr sub cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea fs inc add add add add inc add inc add inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov rclb add push inc add push inc add push inc add leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret mov andl ret mov push mov mov mov mov mov xor mov mov mov pop ret mov push mov cmpl je jmp mov mov pushl mov call pop mov mov test jne pop ret mov mov test jne xor ret cmp jl cmp jg movsbl sub inc mov ret xor jmp test je cmp jl cmp jg movsbl shl inc lea mov mov cmp jne mov inc mov cmp je or ret mov push push mov push xor cmpb jne inc mov mov mov cmp jl cmp jle cmp jne xor inc mov movsbl cmp jg je test je cmp jne lea cmpb jne mov inc mov movsbl cmp jg je sub je sub je dec dec jmp cmp jl cmp jle cmp jle cmp jne inc mov jmp movsbl sub mov inc or mov test je or jmp and cmp jge mov mov test je and or jmp and mov and je cmp je cmp je mov jmp test je and jmp and jmp test je and or jmp and or jmp test je and or jmp and or and sub je dec dec je dec dec je dec dec jne and or jmp and or jmp test je and or jmp and jmp cmp jle cmp jle cmp jne and or jmp mov jmp inc mov mov cmp jl cmp jg movsbl lea mov call or jmp mov jmp mov dec jmp or jmp sub je dec je dec je sub jne inc mov mov cmp mov jl cmp jg movsbl mov or sub mov test je and or jmp and test je and or jmp and or test je or jmp and and sub je dec dec je dec dec jne test je and jmp and jmp test je and or jmp and or jmp test je and or jmp and or jmp xor test sete add mov jmp and or jmp and or jmp or inc mov jmp mov cmp jl cmp jg movsbl inc add and mov cmp ja jmp mov test je and or jmp and test je and or jmp and or jmp mov test je and or jmp and test je and or jmp and or jmp mov test je and or jmp and test je and jmp and jmp and or jmp and or jmp and or jmp and or jmp and or jmp and or jmp cmp jne inc mov mov jmp xor test setne add mov mov pop pop pop ret nop push sbb xchg sbb aam inc add sbb add sbb add sbb add sbb add inc add not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov and xor cmp setne mov ret mov shr not and ret mov shr not and ret mov shr not and ret mov and ret mov and ret mov and ret mov shr not and ret mov and ret mov shr not and ret mov push mov mov not test mov mov jne inc inc pop ret mov push mov push push mov add and cmpl mov je push call pop jmp test ja push pop mov push cmp jae mov cmp ja push push mov call test je andl jmp xor test je mov test je mov jmp mov sub mov mov jmp xor jmp sub mov mov mov lea pop pop pop pop ret mov andl movb andl ret mov push mov mov mov mov mov mov mov pop ret xor cmpb setle ret xor cmp sete ret movsbl ret mov orl ret mov shr and ret xor cmp je testl je inc ret cmpl je orl ret xor cmp je testl je inc ret orl ret mov shr and ret mov shr and ret orl ret mov shr and ret orl ret mov shr and ret orl ret mov shr and ret orl ret mov test jne xor ret mov jmp mov test jne xor ret mov jmp mov push mov mov test jne mov pop ret mov pop jmp mov push mov mov cmpb je mov mov cmp jle mov pop ret mov push mov mov mov mov mov mov mov pop ret xor cmpl sete ret mov orl ret mov movl ret mov push mov mov mov movl mov pop ret xor inc ret mov ret mov push mov mov cmp jae mov mov inc pop ret mov push mov mov mov movl test je mov cmp je cmp jne xor mov pop ret mov test je mov test je mov mov jmp xor ret mov test je mov test je mov mov jmp xor ret mov push mov mov test je pop jmp mov pop ret mov push mov mov mov mov dec neg sbb and add movl mov pop ret mov ret cmpl setne dec and ret mov push mov xor inc test jne or mov xor mov mov mov mov mov movl mov movl mov mov movl mov mov cmp ja imul add pop ret mov pop ret mov push mov mov mov orl mov mov movl mov pop ret mov push mov cmpl jge mov mov push push mov call mov mov mov call add pop mov pop mov pop ret mov push mov mov mov call test jne mov mov pop jmp pop ret mov push mov push pushl mov mov pushl mov call cmp jae pushl mov mov push call pop pop ret xor cmp je inc inc cmpb jne ret mov push mov test jbe sub mov mov inc dec jne pop ret mov push mov cmpl jne xor pop ret mov test je cmp jne inc inc decl jne movzbl movzbl sub pop ret mov push mov mov mov orl lea orl mov mov mov test je push mov mov mov pop jmp andl andl mov mov mov mov mov mov movb pop ret mov push mov sub xor mov and and push lea push push lea push pushl mov mov call mov add leave ret mov push mov sub mov and and push xor lea push push lea push pushl mov mov call mov add leave ret mov push mov pushl mov pushl call pop ret mov push mov mov push mov push mov sub cmp jle mov test jbe mov mov sub mov push mov mov inc dec jne pop lea pop pop pop ret mov push mov cmpl push mov je push push mov call test je pushl mov call jmp xor test mov setne dec and mov jmp andl movb andl mov pop pop ret mov push mov push mov mov andl cmp je cmp je xor jmp mov andl mov cmp jne push call pop mov test jne movb mov pop pop ret mov push mov push mov mov push mov push test je test jne mov call lea push push mov call mov test je jmp mov mov lea push push call movb jmp test je movb pop mov pop leave ret mov push mov cmpl push mov je push push mov call test je pushl mov pushl call jmp xor mov test jne movb pop pop ret mov push mov push mov andl movb andl cmpl je push push mov call test je pushl mov call jmp xor mov test jne movb mov pop pop ret mov push mov mov push mov andl mov cmp jne push call pop mov test jne movb jmp andl mov pop pop ret mov push mov push mov cmpl je push mov cmpl je push push mov call test je mov mov mov mov jmp xor test je incl mov mov pop mov pop pop ret mov push mov mov cmp ja mov cmp je cmp jg mov mov mov mov mov mov jmp push jmp push mov call mov pop ret mov push mov push push mov mov movl test je cmpl je push push mov call mov mov test je test jbe mov sub mov mov inc dec jne jmp andl andl pop mov pop pop ret mov ret mov test je mov mov ret xor ret mov push mov pushl pushl pushl pushl call add pop ret mov push mov cmpl jne push push pushl pushl call add jmp mov pop ret mov push mov mov cmpb pushl jne mov incl call jmp pushl call pop pop mov pop ret mov push mov pushl call mov pop pop ret mov push mov push mov cmpb jg cmpl mov je cmp je cmp je test je push call pop push mov call jmp push call mov pop pop ret mov push mov push mov cmpl je push call jmp push mov test je mov test je sub je dec push mov je push call test je pushl mov push call jmp push call test je mov movl mov jmp xor mov test jne movb jmp movb pop pop pop ret mov push mov xor push mov mov andl mov cmp je push lea push call mov pop pop ret mov push mov mov xor push mov mov andl mov cmp je xor cmp je inc cmp jne push push mov call mov pop pop ret mov push mov push mov xor push mov mov andl mov mov cmp je cmp je mov mov mov cmp je cmp je cmp je cmp je cmp je cmp je cmp jl cmp jle cmp jl cmp jle cmp jl cmp jle cmp jb cmp jbe testl je inc inc mov mov cmpb jne push pushl mov call mov mov test je inc mov cmp je andl movb jmp cmpb jne movb jmp movb mov pop pop pop ret mov push mov sub mov xor mov push xor push mov push mov andl lea mov mov push push pushl dec pushl call add mov or mov mov mov jne lea sub push push mov call mov pop mov pop xor pop call leave ret mov push mov sub mov xor mov mov push mov xor mov andl cmp push lea mov mov mov jg jl cmp jae mov neg adc movb neg mov push jmp xor push push push pushl dec call add mov mov mov mov or mov jne pop cmp je dec movb lea sub push push mov call mov pop mov xor pop call leave ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov push mov cmpb jg mov mov test jne movsbl push mov call jmp cmpl jne push mov call jmp push mov call mov pop pop ret mov push mov push mov cmpb jg push mov test je cmpl jne push call jmp mov test je cmp je movsbl push call jmp push push mov call test je push mov call jmp xor push mov call pop mov pop pop ret mov push mov xor push mov mov andl mov cmp je push lea push call mov pop pop ret mov push mov mov xor push mov mov andl mov xor cmp je inc cmp jne push push mov call mov pop pop ret mov push mov push push mov mov test je movsbl sub incl cmp ja mov andl andl shr not test je and sub je push pop sub je sub je sub je sub je sub jne push jmp push jmp push jmp push jmp push jmp push call add push lea call mov mov mov mov mov leave ret push jmp push mov call mov leave ret mov push mov mov mov mov test je cmp je push jmp incl push call jmp push call mov pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov push mov cmpb jg push mov test je cmpl jne push call jmp push push mov call test je movl mov jmp xor push mov call pop mov pop pop ret mov push mov push mov cmpb jg push push mov xor cmp je cmp je cmp jne push call jmp push push mov call cmp je xor cmp je inc cmp jne push push mov call jmp xor push mov call pop pop mov pop pop ret mov push mov sub push xor push mov mov andl movl mov cmp jne push mov mov cmp je cmp je cmp je mov jmp push mov call mov mov cmp je movsbl sub cmp ja mov push lea inc push mov call push mov call jmp andl lea push lea push mov call mov sub cmp pop pop jle mov cmpl je lea push call lea push mov call cmp jne push mov call cmp je jmp push mov call pop mov pop pop leave ret mov push mov push push mov mov push mov mov mov push mov mov call lea push call pop push mov call push mov call mov cmpb jne incl mov pop leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov sub push mov xor cmpb mov jne inc movl mov mov cmp jne mov push call mov jmp cmp jl cmp jg movsbl sub cltd inc push mov push cmp je lea call push pushl lea push call add jmp lea call mov mov mov mov mov mov jmp push push xor jmp test je cmp jl cmp jg movsbl sub push cltd push mov push mov push mov call add mov adc inc mov mov mov mov cmp jne mov inc mov cmp je push mov call mov jmp push jmp xor push push cmp je cmp je lea call jmp lea call jmp cmp je lea call push pushl lea push call add jmp lea call mov mov mov mov mov mov pop pop pop leave ret mov push mov sub mov mov andl andl test je movsbl add cmp ja jmp push jmp push jmp push jmp push lea call mov movsbl incl sub je dec dec je dec dec je dec dec jne lea push lea push push call mov mov add jmp mov mov mov mov mov leave ret push jmp push mov call mov leave ret cmpsb das inc add das inc add das inc add inc add call in mov movsbl sub sub je dec dec je lea push call pop mov test jne mov mov test je cmp je cmp je mov push call jmp mov incl shr not test mov jne mov push lea push lea call mov mov mov mov mov mov leave ret incl mov mov mov mov leave ret mov incl shr not test mov jne mov push jmp incl push mov call mov leave ret mov push mov mov mov sub test je cmp jne incl mov mov xor and mov mov leave ret push pushl lea push call push lea push push call add jmp push pushl lea push push push lea call mov call mov call mov leave ret mov push mov sub andl push push mov xor inc mov mov movsbl mov sub mov je dec je dec je cmp je mov cmp je cmp jne add shl movsbl inc push lea inc mov cmp jbe push lea call push push lea call push lea push lea call mov mov mov mov push lea push lea call mov mov mov mov cmpb mov pop jne incl jmp push lea push lea call mov mov mov mov mov cmp je incl jmp push lea call mov mov mov or mov mov jmp push jmp mov movb jmp cmp je push mov call mov jmp mov push lea movb call jmp cmp jne mov cmpb setne dec and add mov mov incl mov andl mov pop pop leave ret mov push mov mov sub push xor cmp je call cmp mov jge mov cmp jne lea push push lea lea jmp andl push push mov mov mov test je push lea call jmp mov decl test je mov cmp je push lea push lea push push call push lea push push call add mov call push lea call cmpb jle cmp je lea push lea push test je mov jmp push lea push push lea push push call add mov call mov call mov mov mov mov lea push lea push call mov mov pop pop mov or pop mov mov pop jmp mov push cmp je lea push push lea push push lea push push lea push push call add mov call jmp lea push lea lea push push push call mov call mov call push pushl call mov pop pop pop leave ret mov push mov sub push pushl lea push push call push lea push push call add mov call mov leave ret mov push mov push pushl call mov pop pop pop ret mov push mov push pushl call mov pop pop pop ret mov push mov push pushl call mov pop pop pop ret mov push mov mov mov sub push push mov xor mov mov inc cmp mov jg mov cmpb je lea push call pop push lea push push lea push lea call mov call push mov call cmp jg mov cmpb je push jmp mov mov test je cmp je push lea push lea push call push lea push push call add mov call push mov call mov cmpb jne inc mov cmp jg cmpb je push mov call cmp jle cmp jg mov cmpb jne push mov call push mov call mov cmpb jne incl jmp cmp jg push lea push push call add push mov call mov pop pop leave ret mov push mov sub pushl lea call mov mov incl cmp jne mov mov incl cmp jne incl lea push push call lea push push call mov mov add test je cmp je inc mov mov test jne cmpb jne dec mov push jmp mov inc mov mov mov mov mov leave ret push mov call mov leave ret mov push mov push push mov mov test jne mov push call jmp push cmp jne incl lea push call push push pushl call add jmp pushl call pop pop mov leave ret mov push mov sub mov xor mov mov push mov incl push movsbl cmp push mov jg je sub je sub je dec je dec jne lea push call lea push call cmpb pop pop jg cmpb jg push lea push lea call test jne push mov call jmp mov mov cmp jne mov mov movb jmp movb lea push push push lea push lea push lea call mov call mov call jmp mov cmpb jne incl push mov call jmp lea push call pop push push push lea call jmp push call jmp decl push jmp cmp je jle cmp jle cmp je cmp jne push lea push push call lea push call mov mov mov add mov jmp lea push call testl pop je push lea push lea call lea push call push call pop pop test je push jmp push lea push push cmp jne push lea push call add mov call jmp push lea jmp push lea call cmp jl cmp jg lea push call pop push lea call push lea call sub je dec je dec je dec je dec jne lea push call pop push lea call push lea call lea push call pop push lea call push lea call lea push call pop push lea call push push lea call jmp push call pop mov mov pop pop xor pop call leave ret mov push mov mov xor sub cmp je cmp je cmpb jne inc mov mov cmp jne mov push call jmp push push pushl call jmp cmpb jne pushl inc pushl mov call pop pop jmp push mov lea push push call mov pop pop pop test je lea push push lea push call mov mov mov add jmp test je lea push push jmp mov mov mov mov mov leave ret pushl push pushl call add mov leave ret mov push mov pushl pushl call mov pop pop pop ret mov push mov sub mov xor mov push xor push mov mov andl mov movb movl cmp jne push mov mov mov cmp je cmp je cmp je mov jmp push mov call mov mov movsbl sub cmp ja inc mov push mov lea push call jmp and mov mov cmp jne inc mov push lea call jmp cmp jne inc cmp je mov lea push call jmp cmp jne lea push call testl pop je push lea push lea call lea push call push call pop pop cmp je push jmp push lea push lea push lea push push call add mov call jmp push lea push lea push lea jmp and lea push lea push mov call pop pop mov mov mov mov mov sub cmp jle mov cmpl je lea push call lea push mov call cmp je pop mov mov pop mov xor pop call leave ret mov push mov sub mov movsbl push xor mov and and push xor inc cmp mov mov mov jg je cmp je cmp jle cmp jle cmp jg movsbl pushl lea call cmp je lea push lea push push call mov mov add mov mov mov mov mov mov mov pop pop leave ret and mov cmp je lea push call push lea push push call add push lea call mov cmp je mov call cmp jne push lea call push lea call mov cmp je movb mov cmp jne mov mov mov mov jmp inc mov push mov lea push push call mov mov add mov mov mov cmp je cmpb jne lea push lea push push call mov mov add mov mov cmp je lea push lea call jmp dec mov push mov call mov jmp cmp je jle cmp jle cmp jne movsbl inc cmp mov jg cmp jge cmp jg je cmp je cmp jle cmp jle cmp jg movsbl pushl mov call jmp movsbl pushl jmp movsbl pushl lea call mov or mov mov mov jmp cmp je cmp jle cmp jle cmp jne push push lea push call mov add or jmp movsbl inc mov cmp je cmp jne push push jmp cmp jg cmp jge sub je dec je dec jne movsbl pushl lea call mov mov cmp jne push pushl lea call jmp movsbl sub js cmp jae pushl lea call mov movsbl incl cmp je cmp je add cmp jbe decl jmp lea push lea push lea call push lea push lea push call pop mov call push lea call push lea push lea push call pop mov call push lea call push lea push lea push call pop mov call push lea call push lea push lea push push call pop pop mov call push lea call push pushl lea call jmp lea push push call pop pop lea push pushl lea push lea push push lea push lea call mov call mov jmp movsbl pushl lea call push lea push push call mov mov add mov mov cmp je test je push jmp lea push pushl lea call jmp cmp jl cmp jle cmp jle cmp jle cmp jne movsbl inc cmp mov jl cmp jle cmp jle cmp jg movsbl pushl jmp movsbl pushl lea call mov cmpb jne lea push call pop push lea call mov cmpb jne incl jmp lea push call pop push lea call push lea call mov mov mov mov jmp movsbl pushl jmp movsbl pushl jmp xor inc movsbl pushl lea call cmp je cmp je orl jmp mov push mov mov sub cmpb jne cmpb jne orl orl orl push mov push mov lea mov lea push mov inc mov inc lea mov mov cmpb movb jne inc mov lea push lea push push call jmp push lea push push call mov mov add mov mov test jne movb cmpb jne lea push call push lea push push call add push lea call mov test je mov call cmp jne push lea call push lea call cmpb je mov cmpb je incl mov mov mov mov mov pop mov mov pop mov pop leave ret mov push call mov leave ret mov push mov sub mov xor mov mov push mov movsbl push mov sub mov cmp ja mov incl push push call mov jmp andl mov and cmp jne lea push push call pop pop mov mov mov mov mov mov inc mov cmp je dec xor mov cmp setne inc push lea call jmp mov push mov push mov call pop test jne addl jmp mov mov push mov call pop test jne addl lea push call testl pop je push lea push lea call lea push call push call pop pop lea test je push call jmp push call push lea push lea push lea jmp push lea call push lea push lea push lea push push call add mov call push lea call jmp cmpb je cmp jne mov xor and incl mov mov jmp push push lea call mov mov mov mov pop cmpb je mov cmpl je lea push call mov mov mov mov mov mov pop xor pop call leave ret mov push mov sub push push mov push xor push lea push mov andl push mov call add push mov call mov cmp jne mov mov cmp je cmp je push lea push push lea push lea push call pop mov call mov call push mov call mov mov cmp jne incl jmp cmp je push jmp cmp jne push mov call jmp push lea push push lea push push lea call mov call mov call push mov call pop mov pop pop leave ret mov push mov pushl call mov pop pop ret mov push mov mov sub push push mov shr xor not inc and je test je xor mov movsbl andl mov and incl sub je sub je dec je dec je dec je dec je dec jne push jmp push jmp lea push mov call push lea push push call mov mov add mov mov jmp push jmp push jmp push lea call andl and test je mov mov mov mov lea push call pop lea push lea call mov mov mov mov mov jmp mov decl push call mov pop pop leave ret mov push mov mov cmpb jne inc cmpb jne push pushl call pop pop jmp push push pushl mov call jmp push push pushl call add mov pop ret mov push mov sub push call add push lea call mov cmpb je movsbl inc mov mov sub je dec dec je sub jne mov push call mov leave ret lea push call pop push lea call jmp push lea call jmp push lea call push lea call mov mov mov mov mov leave ret mov push mov sub push push push xor mov and mov call mov mov xor inc cmp je testl mov jne mov cmp jne mov push call mov jmp cmp jne push push pushl call add jmp cmp jne mov mov mov mov jmp mov andl mov mov je xor mov and cmpl sete mov test mov je and jmp and test je mov and cmp je cmpl mov je and jmp and test je mov and cmp je cmp je test je mov mov shr not test je shr not test je lea push call push lea push push call mov mov mov add mov jmp lea push call pop push lea call mov mov mov test je and jmp and test je cmp jne lea push call pop mov push lea push push lea push call mov call push lea call lea push call mov pop test jne push lea push lea push lea push push call add mov call push lea call push lea call lea push call mov pop mov shr not test je mov shr not test je test jne lea push lea push push lea push lea push lea push push call add mov call mov call mov mov mov mov jmp and and and and and xor mov mov mov mov mov mov cmp je and jmp and cmp je cmp je mov and cmp jne lea push call mov mov mov lea push mov call mov mov mov lea push mov call add jmp cmp je mov and cmp jne lea push call pop mov mov mov mov lea push call pop mov mov mov mov xor cmp je cmpl je mov and cmp je mov and cmp lea push je call pop mov mov mov mov jmp call pop push lea call mov mov shr not test je shr not test je lea push lea push lea push call pop mov call mov mov mov mov jmp lea push call pop push lea call mov cmpl je cmpl je testl jne push lea push push call add push lea call jmp mov mov mov mov and xor mov cmp je lea push push call push lea push push call add push lea call testl je mov mov mov mov jmp xor push push mov call cmp je mov movb andl mov lea push push call pop pop mov mov mov mov mov mov test je and jmp and test je test je mov and cmp jne push lea push lea push lea push push lea push lea push lea push push lea push lea push lea push push call add mov call mov call mov call mov call jmp test je mov and cmp jne push lea push lea push lea push push call add mov call push lea call jmp push lea call push lea push lea call push lea call push lea push lea push call push lea push push call add mov call push lea call test je mov and cmp je lea push lea call mov shr not test lea push je call pop push lea call jmp call pop push lea call mov shr not test je test je mov mov mov mov mov mov mov mov jmp pushl lea call mov mov test jne mov and cmp jne lea push pushl call pop pop jmp test jne mov and cmp je test jne mov and cmp jne push pushl lea push call pop push lea push push lea push lea call mov call mov call jmp test jne mov and cmp jne lea push pushl call jmp test je mov and sub jmp mov and neg sbb inc test mov mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push jmp cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push jmp cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push lea call jmp cmpl jne mov and cmp je cmpl je mov and sub jmp mov and neg sbb inc test mov je and jmp and test je mov mov and xor cmp sete neg sbb test jne mov xor cmp sete neg sbb test je lea push lea push push call add jmp lea push lea push call pop pop jmp mov mov xor mov mov cmp je and sub jmp and neg sbb inc cmp je mov shr not test je mov cmp je and sub jmp and neg sbb inc cmp je cmp je mov and sub neg sbb inc jmp xor inc cmp je lea push lea push push call mov mov mov add mov mov test je mov and cmp je test je mov and sub jmp mov and neg sbb inc test mov je and jmp and test je mov test je and sub jmp and neg sbb inc test je mov and cmp je mov test je and sub jmp and neg sbb inc test je mov and cmp je mov test je and sub jmp and neg sbb inc test je mov and cmp jne lea push lea push push call mov mov mov add mov mov shr not test je cmpl mov je and sub jmp and neg sbb inc test je cmpl mov je and xor cmp sete mov jmp and sub neg sbb inc test je lea push push jmp cmpl mov je and sub jmp and neg sbb inc test je cmpl mov je and xor cmp sete mov jmp and sub neg sbb inc test je lea push push jmp cmpl mov je and sub jmp and neg sbb inc test je cmpl je push test pop sete jmp mov and neg sbb inc test je lea push push lea push call mov mov mov add mov cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je testl jne lea push lea push push call mov mov mov add mov test je lea push lea push push call mov mov mov add mov mov mov mov pop pop pop leave ret mov push mov sub push push mov push test je andl lea push push call or pop pop mov mov mov mov mov jmp mov mov cmp jne inc mov cmp jne cmp jne lea push call mov pop jmp inc mov cmpb jne jmp lea push call mov mov xor inc pop test je test je mov jmp andl mov shr and cmp jle mov mov mov jmp mov mov test je cmp je lea push call cmpl pop je cmpb je lea push lea push lea movb call mov mov mov cmpb mov mov je lea push call pop mov mov mov mov lea push lea push lea jmp lea push lea push lea push push lea call mov call mov mov mov mov cmpl je test je or mov mov test je or mov test je mov test jne mov mov test je cmp je push jmp incl test je cmpl jne test jne andl andl lea push lea push call pop pop jmp lea push pushl call pop pop jmp test jne push mov call mov pop pop pop leave ret mov push mov sub push xor push mov push mov andl mov mov mov jmp mov mov cmp je cmp je cmp je cmp je cmp je push lea push push call add push mov call cmp je push lea push push call add push mov call mov mov cmpb jne inc mov movsbl sub je dec je sub je dec dec je sub push je lea push lea push call pop jmp lea push push lea push push lea inc push push mov call add mov call mov call push mov call movb jmp lea cmpb jne cmpb jne mov push lea push push lea push push call add mov call push mov call mov cmpb jne incl jmp push lea push push lea push lea push call push lea push push call add mov call jmp push push lea call push lea push push call add push mov call mov cmpl je lea push call jmp lea push dec push mov lea jmp lea push push lea push push push call add mov call push mov call cmp je mov mov cmp je cmp je push jmp cmp jne push mov call jmp push lea push push lea push push lea call mov call mov call push mov call pop mov pop pop leave ret mov push mov mov mov sub test jne pushl push pushl call add mov leave ret cmp jl cmp jle cmp je mov push call jmp push movsbl sub inc mov cmp jne mov test je movsbl sub inc cmp mov jl cmp jmp pushl push pushl call add jmp test jl cmp jle or cmp jne mov push call mov jmp andl andl push mov mov push mov mov mov and mov je lea push lea push push call mov mov mov mov add cmpb lea mov push je lea push lea push call push lea push push call add mov call jmp lea push push call add mov mov mov mov mov mov test je cmp jne mov incl and cmp lea push je call pop mov mov mov mov test je mov shr not test je lea push lea push lea push call push lea push push call add mov call mov mov mov mov jmp call pop push lea call jmp push jmp lea push push pushl call add jmp lea push call pop push lea call mov shr not test je lea push lea push lea push call pop mov call mov mov mov mov jmp lea push call pop push lea call xor cmp je push lea push lea push lea push push call add mov call mov mov mov mov push push mov call cmp je movb andl mov mov jmp xor lea push push call pop pop push lea push lea push call push lea push push call add mov call push lea call mov and cmp je cmp je lea push lea call mov shr not test lea push je call pop push lea call jmp call pop push lea call cmp je mov mov mov mov mov mov mov mov mov jmp push mov call mov pop pop pop leave ret mov push mov sub mov mov push push mov and push xor mov movb test je cmp jne pushl lea push lea push lea push call mov add cmp je mov mov mov mov jmp mov mov xor cmp setl and movsbl push mov dec and add sub and mov pop mov sub je dec je sub jne mov shr not test je push call add cmpl lea push je lea push lea push push call mov call mov mov mov mov jmp mov shr not test je push call add cmpl lea push je lea push push lea push call mov call mov mov mov mov jmp mov mov shr not test je shr not test je push call add cmpl lea push je lea push lea jmp call incl mov cmpb jne pushl lea push lea push lea push call mov add test jne mov mov xor cmp setl movsbl dec and add sub jmp mov mov mov jmp cmpb je inc mov cmp ja pushl lea call lea push lea push lea call mov mov xor mov mov cmp je lea push lea push push lea push lea call mov call mov mov mov mov cmp je lea push lea push push lea push lea call mov call mov mov mov mov test je cmp je push jmp cmpb je lea push lea push push call mov mov mov mov add cmpb lea push mov lea je push lea push call pop mov call jmp push push call add mov mov mov mov jmp mov cmpb je lea push call pop push lea call mov mov test jne push lea call jmp incl cmp jne mov shr not test mov je and cmp jne cmp jne lea push lea push lea push call pop mov call mov mov mov mov jmp and cmp jne lea push call pop push lea call test je lea push lea push push call mov mov add mov mov test je lea push lea push push call mov mov add mov mov xor mov cmp jne mov cmp je mov test jne mov cmp je push lea push push lea push push lea push push call add mov call mov call jmp test je mov mov mov mov jmp mov cmp je push lea push push call add push lea call mov or cmpb je or mov mov mov jmp cmp jne mov cmp je testl jne mov cmp je push pushl lea push push push lea push push call add mov call mov call jmp push push pushl call add jmp mov cmp jne push mov call mov pop pop pop leave ret mov push mov sub mov mov and xor and and mov test je cmpb jne mov cmp jne addl lea push call push lea push push call add jmp cmp jne lea push push call pop pop mov mov cmp jne mov mov lea push call pop mov mov cmp jne xor leave ret cmp je testl jne mov cmpb jne mov mov jmp pushl lea call mov test jne mov test je mov call inc mov add and push call pop mov test je pushl lea push call mov mov jmp cmp jne inc mov inc jmp inc cmpb je jmp mov inc inc mov test jne mov mov mov leave ret mov push mov push push mov mov push xor push cmp je cmp jl cmp jle cmp jne pushl lea call mov mov cmp je cmp je testl jne push lea call cmp je push lea call lea push pushl call pop pop mov jmp push pushl lea pushl pushl push call xor cmpb sete push lea push pushl call add jmp push lea call pushl lea call mov cmp je push lea call push mov cmp je cmp je push lea call push lea call mov mov mov mov mov pop pop pop leave ret mov push mov push pushl pushl pushl call mov add pop ret mov push mov push pushl pushl pushl call mov add pop ret mov push mov push pushl pushl pushl call mov add pop ret push push call mov xor cmp jne xor jmp push call pop test je push call pop mov mov mov mov mov mov mov movzwl push push pushl pushl pushl lea call lea call mov mov call movl call mov call ret push call pop ret push push call mov xor cmp jne xor jmp push call pop test je push call pop mov mov mov mov mov mov mov pushl pushl pushl pushl pushl lea call lea call mov mov call movl call mov call ret push call pop ret mov push mov mov mov sub push push push test je incl andl movzbl mov and mov or cmp movb jg je sub cmp ja movzbl jmp push jmp push jmp push jmp push jmp push jmp cmp je jle cmp jle cmp je cmp jne mov mov incl mov movzbl cmp jg cmp jge cmp jg cmp jge test je cmp jne pushl lea push call push push pushl call add jmp decl push lea call jmp push jmp cmp jl cmp jle cmp jg push jmp push jmp push jmp cmp jl cmp jle cmp je cmp je cmp je add cmp ja lea decl push call mov pop mov mov mov test jne mov mov mov jmp push jmp push pop mov mov and xor mov mov mov mov cmp jne push lea push lea push lea mov or push call add test jne push lea call mov mov mov mov jmp push jmp push jmp push jmp push lea call jmp mov and jmp lea jmp push lea call push lea call cmp jne mov sub je push pop sub je sub je sub je sub je sub jne movzbl sub je sub je sub je sub je sub jne lea push push lea jmp lea push push lea jmp lea push push lea push call mov mov add mov mov mov cmpl je push lea push push call add push lea call mov mov mov mov mov jmp cmp jne test je push lea call test je push lea call jmp test je push lea call lea push lea push pushl call jmp pushl push pushl call add mov pop pop pop leave ret mov inc add fs add fs add fs add fs add add add add add add mov sub mov movsbl push xor mov and sub push mov je sub je sub mov je dec je push pushl call pop pop jmp push lea call cmp je push lea call mov mov incl mov lea push lea push pushl or mov call jmp mov cmp je cmp je mov push call jmp inc inc mov movsbl sub je sub je dec je dec jne and push lea push push pushl lea inc push mov mov call push pushl call add jmp push pushl inc pushl mov call jmp pushl inc pushl mov call jmp pushl push pushl call add mov pop pop leave ret mov push mov sub pushl lea call mov mov xor cmp je cmp je cmp je lea push pushl call pop pop jmp incl cmp jne mov push call jmp lea push push pushl call jmp incl andl push lea push push mov lea push lea push call mov mov mov mov lea push pushl call add jmp lea push push pushl call add mov leave ret mov push mov sub push push push mov call test je andl movb andl mov jmp xor push pushl call lea push call add pushl lea push push lea push lea call mov call push mov call mov pop leave ret mov push mov sub mov xor mov testb push je push call pop call test je push call pop testb je mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov lea mov movl mov mov push mov lea push push call lea add mov lea push movl mov mov call lea push call push call int3 mov push mov mov mov mov and not and or mov pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov cmpl sbb neg pop ret mov push mov mov and pop ret mov push mov pushl pushl call pop pop test jne cmpl je pop ret xor inc pop ret mov push mov pushl call pop test jne cmpl je pop ret xor inc pop ret mov push mov pushl pushl call pop pop test jne cmpl je pop ret xor inc pop ret mov push mov movzbl push call pop test jne cmpb je pop ret xor inc pop ret mov push mov pushl pushl pushl pushl call pop ret mov push mov sub pushl lea call pushl pushl pushl pushl call cmpb je mov andl leave ret mov push mov push push mov xor mov mov push mov push push xor xor inc cmp jne push push push push call test je mov jmp call cmp jne push pop mov jmp mov cmp je cmp je cmp jne cmp jne mov mov mov mov push push pushl pushl call mov mov cmp jne xor jmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl add jmp push call pop cmp je movl add mov jmp xor cmp je pushl push pushl pushl call test je push push cmp jne push push jmp pushl pushl push push push pushl call mov push call pop mov jmp pushl pushl pushl pushl call lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl push call add cmpb je mov andl leave ret mov push mov sub mov xor mov push lea push push pushl movb call test jne or jmp lea push call pop mov xor call leave ret mov push mov sub mov xor mov mov mov mov mov push mov mov push mov mov push xor mov mov mov cmp je mov lea push push call mov test je cmpl jne lea push pushl call test je cmpl jne mov movl cmp jne pushl call mov pop inc cmp jle cmp ja lea cmp ja call mov cmp je movl jmp push push pushl pushl push pushl call mov cmp jne xor jmp push call pop cmp je movl add mov jmp mov cmp je lea push push pushl call add push pushl pushl pushl push pushl call test je mov cmp je push push pushl push push pushl push pushl call test je mov jmp mov cmp jne push push push push push pushl push pushl call mov cmp je push push call pop pop mov cmp je push push push push push pushl push pushl call cmp jne pushl call pop mov jmp cmpl je mov mov pushl call pop mov lea pop pop pop mov xor call leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub and add sbb or pop jmp push lea sub and add sbb or pop jmp mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov mov xor pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov mov xor pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov mov xor pop pop ret mov push mov mov push xor push cmp je cmp jbe cmp je mov push mov cmp je mov cmp je cmp je call push pop push push push push push mov call add mov jmp cmp je call push pop push push push push push mov call add mov jmp lea pushl call inc pop mov cmp jne xor jmp cmp jbe push pop jmp pushl pushl pushl call add pop pop pop pop ret mov ret mov ret mov ret mov ret mov push mov call mov mov pop ret mov push mov call mov mov pop ret mov push mov call mov mov pop ret push push call xor mov mov mov mov mov mov push call pop mov call mov lea push call pop cmp je push push push push push call add lea push call pop cmp je push push push push push call add lea push call pop cmp je push push push push push call add call mov mov or mov mov push call pop mov mov cmp je cmp je mov cmp je push push call pop pop test je mov cmp je push call pop push call inc push call pop pop mov cmp je push push call pop inc push pushl call add cmp je push push push push push call add jmp mov cmp je push call pop mov push call cmp je xor inc mov mov imul mov cmp je mov imul add mov cmp je mov cmp je mov sub imul mov jmp mov mov lea push push push mov pushl push push push pushl mov call test je cmp jne mov mov mov jmp mov mov mov lea push push push mov pushl push push push pushl call test je cmp jne mov mov mov jmp mov mov mov movl pushl call pushl call pushl call add movl call cmp jne push push push mov pushl call add test je push push push push push call add add cmpb jne movl inc push call pop imul mov mov cmp je cmp jl cmp jg inc jmp xor mov push call pop ret cmpb jne inc push call pop imul add jmp cmp jg inc mov cmp jge cmpb jne inc push call pop add jmp cmp jg inc mov cmp jge cmp je negl movsbl mov cmp je push push push pushl call add test je push push push push push call add jmp mov mov mov call mov mov call mov call ret mov push mov sub andl cmpl push push push mov mov mov jne and jns dec or inc mov jne mov push cltd pop idiv test jne lea cltd mov idiv test je mov shl mov jmp mov shl mov mov lea cltd lea mov idiv push pop inc push mov mov cltd idiv mov mov sub mov lea cltd and add sar mov imul add add lea cltd pop idiv mov imul sub add cmp jg lea jmp add cmpl jne cmpl jne mov push cltd pop idiv test jne lea cltd mov idiv test je mov mov jmp mov mov cmp jle sub jmp and jns dec or inc jne mov push cltd pop idiv test jne lea cltd mov idiv test je mov jmp mov add imul add imul add imul add cmpl jne mov mov mov jmp lea push mov mov call pop test je xor push push push push push call add mov imul add jns addl decl jmp mov cmp jl sub incl mov pop pop pop leave ret mov push mov sub push lea xor push mov call pop test je push push push push push call add cmp jne xor jmp mov push xor inc cmp jne cmp je cmp je movzwl movzwl push movzwl push movzwl push cmp jne movzwl push push movzwl push push push jmp movzwl push push push push push movzwl push call movzwl movzwl add push movzwl push movzwl push cmp jne movzwl push push movzwl push pushl push jmp movzwl push push push pushl push movzwl push call add jmp cmp push pop push pop movl mov jge push pop mov movl movl push push push push push push push push push push pop call mov push push push push push pushl pushl push push push pop call add mov mov cmp mov jge cmp jl cmp jg cmp jle cmp jge mov pop pop leave ret cmp jl cmp jg cmp jle cmp jge xor jmp mov imul add imul add imul cmp jne xor cmp setge jmp xor cmp setl mov jmp push push call xor cmp jne push call pop mov cmp jne call incl movl call call ret push call pop ret push push call push call pop andl call movl call call ret push call pop ret push push call push call pop andl mov call mov movl call mov call ret push call pop ret mov push mov mov push mov push movzbl lea inc cmp ja add movzbl lea inc cmp ja add test je cmp je pop sub pop pop ret mov push mov sub push pushl lea call xor cmp jne call push push push push push movl call add cmp je mov andl mov jmp push mov cmp jne call push push push push push movl call add cmp je mov andl mov jmp mov cmp jne push pushl call pop pop jmp push mov movzbl lea push push call incl mov movzbl lea push push call add inc cmp je cmp je sub mov pop cmp je mov andl pop pop leave ret mov push mov push xor cmp jne cmp jne call push push push push push movl call add mov jmp cmp je pop pop jmp push pushl pushl call add pop pop ret mov push mov push push pushl call add pop ret mov push mov pushl push push pushl call add pop ret mov push mov pop jmp mov push mov pop jmp mov push mov push push pushl call add pop ret mov push mov pushl push push pushl call add pop ret mov push mov push push push mov xor cmp jne call push pop push push push push push mov call add mov jmp push cmp ja call push pop push push push push push mov call add mov jmp xor cmp mov setne inc cmp ja call push jmp mov add cmp ja mov mov cmp je movb lea movl neg mov xor divl cmp jbe add jmp add mov inc incl xor cmp jbe mov cmp jb mov cmp jb mov jmp mov dec mov mov mov dec mov inc cmp jb xor pop pop pop leave ret mov push mov cmpl mov jne test jge push push jmp push pushl pushl mov call pop ret mov push mov xor cmpl jne cmp jge inc mov push pushl mov pushl call pop ret mov push mov mov mov push pushl pushl call pop ret mov push mov sub push xor push cmp jne call push pop mov push push push push push call add mov jmp cmp jbe xor cmp mov setne inc cmp ja call push jmp mov add cmp ja mov mov mov mov cmp je neg adc movb lea movl neg mov mov pushl pushl push push call mov mov mov mov cmp jbe add jmp add mov mov inc inc mov test ja test jbe cmp jb mov cmp jb movb call push pop mov mov xor jmp movb dec mov mov mov mov dec mov inc mov cmp jb xor pop pop leave ret mov push mov xor cmpl jne cmp jg jl cmp jae xor inc push mov push pushl pushl pushl pushl call pop pop ret mov push mov push mov push pushl pushl pushl pushl call pop pop ret mov push mov cmpl jge xor pop ret pushl pushl pushl pushl call pop ret mov push mov sub pushl lea call cmpl jge xor jmp pushl pushl pushl pushl call cmpb je mov andl leave ret mov push mov sub push pushl lea call mov lea cmp ja mov mov movzwl jmp mov sarl lea push mov and push call pop pop test je mov push mov mov movb pop jmp xor mov movb inc mov push pushl pushl lea push push lea push lea push push call add test jne cmp je mov andl xor jmp movzwl and cmpb je mov andl pop leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl pushl call add pop ret mov push mov mov add pop ret mov push mov sub push push pushl lea call mov mov cmp jae mov cmpl jle lea push push push call mov add jmp mov movzwl and test je mov movzbl jmp cmpb je mov andl mov jmp mov cmpl jle mov sarl lea push mov and push call pop pop test je mov push mov mov movb pop jmp call movl xor mov movb inc mov push pushl lea push push push lea push push pushl lea push call add test je cmp movzbl je movzbl shl or cmpb je mov andl pop pop leave ret mov push mov cmpl jne mov lea cmp ja add pop ret push pushl call pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov or je mov mov mov mov mov lea mov or mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret pushl call pop test je call push call push push call add jmp mov push mov push pushl call pushl mov call pop pop mov mov pop pop ret pushl call pop ret int3 mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret mov push mov cmpl push mov jne xor jmp push test jne cmp je call test jne mov test je cmpl je pushl call pop mov jmp push call pop cmp jbe mov cmpb jne push pushl push call add test je add mov test jne xor pop pop pop ret mov lea jmp mov push mov push push mov xor cmp jne call push pop push push push push push mov call add mov jmp mov mov cmp je cmp ja jmp cmp jne cmp je mov push pushl call mov pop cmp je push call inc pop mov cmp je cmp jbe push pop jmp push pushl pushl call add test je push push push push push call add xor pop pop pop pop ret mov push mov push push push xor cmp jne call push pop push push push push push mov call add mov jmp mov mov cmp je mov cmp je pushl call pop mov cmp je push call mov inc push push call add mov cmp jne call movl call mov jmp pushl push push call add test je push push push push push call add mov cmp je mov xor pop pop leave ret push push call xor xor cmp setne cmp jne call movl push push push push push call add xor jmp mov push pushl call pop pop cmp sbb neg je push call pop mov pushl call pop mov movl call mov call ret push call pop ret push push call push call pop xor mov xor mov cmp setne cmp jne call push pop mov push push push push push call add mov jmp mov mov cmp je cmp ja cmp jne cmp jne xor inc jmp xor cmp je cmp je mov pushl call pop mov cmp je push call pop inc mov cmp je cmp jbe movl jmp push pushl pushl call add cmp je push push push push push call add mov movl call mov call ret push call pop ret push push call push call pop xor mov xor mov cmp setne cmp jne call push pop mov push push push push push call add mov jmp mov mov cmp je mov xor cmp setne cmp je pushl call pop mov cmp je push call mov inc push push call add mov cmp jne call movl call mov mov jmp pushl push push call add cmp je push push push push push call add mov cmp je mov mov movl call mov call ret push call pop ret mov push mov sub push push pushl lea call mov mov xor cmp je mov cmp jne call push push push push push movl call add cmp je mov andl xor xor jmp cmp je cmpl jl cmpl jg push mov mov mov mov inc cmpl mov jle lea push movzbl push push call mov add jmp movzbl mov movzwl and cmp jne cmpb mov jne orl jmp cmpb jne mov inc mov mov push pop cmp jne cmpb je movl jmp mov cmp je cmp je movl jmp mov cmp jne cmpb jne mov cmp je cmp jne inc mov inc mov mov mov cltd push mov push push push mov call mov mov mov mov mov mov movzbl movzwl test je movsbl sub jmp test je mov sub cmp movsbl ja sub lea cmp jae mov orl cmp jb ja mov cmp jb mov cmp jne cmp jne xor cmp jb ja cmp jbe orl cmpl jne mov decl test jne xor cmp je mov mov mov mov jmp push pushl pushl push call xor add adc mov mov mov mov incl mov jmp mov mov test jne test jne and je cmp ja jb cmpl ja test jne cmp jb ja cmpl jbe call testb movl je orl orl jmp testb je andl mov jmp orl mov mov pop test je mov mov testb je mov mov neg adc neg mov mov cmpb je mov andl mov mov pop pop leave ret mov push mov xor push pushl pushl pushl cmp jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov cmpl push pushl pushl pushl jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov sub push pushl lea call mov xor cmp jne cmp je mov andl xor jmp cmp jne call push push push push push movl call add cmp je mov andl mov jmp cmp je push mov cmp jbe call push push push push push movl call add jmp mov cmp jne pushl push pushl pushl call add jmp pushl push pushl push pushl push pushl lea push call add cmp jne cmp je mov andl mov jmp add cmp je mov andl pop pop leave ret mov push mov push pushl pushl pushl call add pop ret mov push mov push push push push xor push mov mov mov cmp je mov push push push push push push push push call mov cmp je push push call pop pop mov cmp je push push pushl push push pushl push push call test je lea push push call pop pop test jge cmp je pushl call pop mov add mov cmp jne xor pop pop pop leave ret or jmp pushl call pop jmp mov push mov push andl push lea push pushl pushl call mov add test jne cmp je call test je call mov mov mov pop leave ret mov push mov xor cmp jbe mov cmpb je inc inc cmp jb pop ret mov push mov mov jmp dec cmpb je inc test jne dec mov sub dec pop ret mov push mov sub mov xor mov mov push push push xor mov mov mov mov cmp jne push mov push push push push push call test je movl jmp call cmp jne movl cmp jle pushl mov call pop mov mov cmp jle mov push call mov pop mov jmp cmpl jge xor jmp cmp jl mov cmp je cmp je xor inc cmp jne mov cmp jne mov mov mov cmp je cmp jne cmp jne push pop jmp cmp jg cmp jle push jmp lea push pushl call test je cmp jle cmpl jb cmpb lea je mov test je mov cmp jb cmp jbe inc inc cmpb jne jmp cmp jle cmpl jae xor inc jmp cmpb lea je mov test je mov mov cmp jb cmp jbe inc inc cmpb jne jmp mov push push pushl push push pushl call mov mov cmp je mov test jle push xor pop div cmp jb lea cmp ja call mov test je movl jmp push call pop test je movl add mov jmp andl cmpl je push pushl pushl pushl push pushl call test je push push pushl pushl push pushl call mov test je jle push xor pop div cmp jb lea cmp ja call mov test je movl add jmp push call pop test je movl add mov jmp xor test je push push pushl pushl push pushl call test je push push pushl pushl pushl pushl call mov push call pop pushl call mov pop jmp xor xor cmp jne mov mov mov cmp jne mov mov mov pushl call mov pop cmp je cmp je push push lea push pushl push pushl call mov add test je push push lea push pushl push pushl call mov add test jne push call pop jmp mov mov pushl pushl pushl pushl pushl pushl call mov test je push call push call pop pop mov lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl mov pushl lea pushl pushl pushl pushl call add cmpb je mov andl leave ret mov push mov sub push pushl lea call mov xor cmp jne cmp je mov andl xor jmp cmp jne call push push push push push movl call add cmp je mov andl mov jmp cmp je push mov cmp jbe call push push push push push movl call add jmp mov mov cmp jne lea push push pushl pushl call add jmp pushl lea push pushl push pushl push push push call add cmp jne call movl cmp je mov andl mov jmp add cmp je mov andl pop pop leave ret mov push mov cmpl jne pop jmp push pushl pushl pushl call add pop ret mov push mov push mov jmp push push pushl call add test jne mov mov cmp je test je add mov test jne mov sub sar neg pop pop ret mov sub sar jmp mov push mov push push mov xor mov test je cmp je add inc cmpl jne push inc push push call mov pop pop mov test jne push call jmp push call mov add add pop mov test jne and mov pop pop leave ret mov push mov sub mov push xor mov cmp jne call push push push push push movl call add or jmp push mov push mov cmp je push push call mov pop pop mov cmp je cmp je xor cmp sete mov mov cmp jne call mov cmp jne cmp je cmp je call test je call movl or pop pop pop leave ret cmp jne push call pop mov cmp je mov cmp jne push call pop mov cmp je mov mov mov cmp je sub pushl call mov cmp pop jl cmp je lea pushl call pop cmp jne mov mov mov mov jmp mov mov mov inc lea cmp jne cmp jae push push pushl call add cmp je jmp cmp jne cmp jge neg lea cmp jl cmp jae push push pushl call add cmp je mov lea mov mov mov mov mov cmp je mov push push call inc pop inc push call mov pop pop cmp je push push call inc pop inc push push call add test je push push push push push call add mov mov sub add mov inc neg sbb not and push push call test jne orl call movl push call pop cmp je pushl call mov pop mov mov jmp pushl call mov pop mov xor jmp mov push mov push xor cmp jne xor jmp push push pushl call mov inc push call mov pop pop cmp je pushl push push call add test je push push push push push call add mov jmp xor pop pop pop pop ret mov push mov sub push pushl lea call mov xor cmp jne call push push push push push movl call add cmp je mov andl xor jmp push mov cmp jne pushl push call pop pop jmp movzbl testb je inc mov cmp je movzwl movzbl shl or cmp jne dec jmp movzwl cmp je inc movzbw movzwl cmp jne movzwl cmp jne cmp je mov andl jmp cmp je mov andl xor pop pop leave ret mov push mov push pushl pushl call add pop ret int3 int3 int3 int3 int3 lea pop ret lea lea xor mov push mov shl mov test je mov add cmp je test je test jne or push mov shl push or mov mov mov mov xor add add xor xor xor xor add and jne and je and jne and jne pop pop pop xor ret mov cmp je test je cmp je test je shr cmp je test je cmp je test je jmp pop pop lea pop ret lea pop pop pop ret lea pop pop pop ret lea pop pop pop ret jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp movl mov jmp add inc add add add aas inc push bound pop popa insb insb outsl arpl je inc inc add add add add aas inc push gs gs imul inc inc add add add inc mov xor inc add inc add add add add add add add add add add add add add add sbb add add add add add add add add add add add or add or add or add or add or add pop add add add add add add add push add add add add add add add add add add add add add add add add add add add add add add add add add or add add add add add adc add push add add add add add add add add add or add insb add add add add add add add sbb add jb add or add push add add add add add add add add add add add add add xchg add add add add add add add add add cmpsl add add add add add add add add add add add add add add pop add or add or add or add mov add add add add adc add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add (bad) (bad) incl mov inc add add add aas inc push bound pop arpl je jae fs inc add jl inc add add add aas inc push bound pop je jo imul add add jl inc add add add aas inc push pop pop outsb outsl outsb pop jb je pop outsl bound arpl je inc inc add mov inc add add add aas inc push je jo pop imul add add add add clc test add add add test add add add add add test add add add cmpsl inc add add add add mov add pop cmpsl inc add add add inc add add add cmpsb inc add add add cmpsb inc add add add add cmpsb inc add add add add add add movsl inc add add add add add add add movsb inc add add cld mov add in mov add fsubl add fsubs add enter add add pop add add add or add adc adc adc adc adc adc adc adc adc adc adc adc adc adc add add add and and and and and and and and and and and and and add popa bound gs imul jo jb je jbe js jp add add add inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop add adc adc adc adc adc adc adc adc adc adc adc adc adc add add add and and and and and and and and and and and and and add arpl addr16 insl outsb outsl jo jb je jbe js jp add add add inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop add in add add movsb add add jns and add add add cmpsb fild add add add add add add add cmp add add mov add cmp add inc incb add add add mov add cmp add inc incb add add add mov in call add add add add mov add add push ficompl and pop fisubrl xor adc add xor incb add add inc add (bad) (bad) incl add add add add add adc inc add jmp add jmp add jmp add jmp add add add add add inc add lods inc add mov add jmp add add add jmp add in add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add xor inc add inc add add inc add add inc add add inc add inc add mov add mov add inc add mov add inc add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add inc add add inc add add inc add add mov add add add add add add add add add add das dec add das dec add das dec add das dec add das dec add das dec add das dec add das dec add das dec add jg jg jg dec out inc add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add icebp (bad) incl add add push add push add out inc add lock add (bad) (bad) incl add add add add (bad) (bad) incl add add add add (bad) (bad) lcall add add add add add js add xchg add add add add add add add add add add add insl add add (bad) (bad) lcall add add add add add ja add xchg add add add repnz add add add add add add insb add add insl jo jno je je add cs popa jb add cs popa jb add cs popa jb add cs popa jb add fs popa jb arpl popa jb add cs popa jb add cs popa jb add cs popa jb add fs popa jb add add add add adc rolb inc add add rorb addb add or push add pop add push inc xor mov add pop add or add adc xchg add daa add inc push add shrb orb add sbb aam (bad) aaa add push inc je mov add pop sarb add inc test and adc rolb adc add add rorb adc movsb add or push add push inc mov mov add pop add sbb push xor add sbb push mov add sbb in xor add push (bad) ja rcrb hlt pop mov add xadd add inc add xor adc rolb or rorb or dec add xchg add es xor mov add lahf add or push add sub or shrb or pop add push (bad) mov shrb je mov add pop sarb or bound adc rol inc xor or add ror xorb or sbb xlat push (bad) ss mov mov add fild add inc les xor xchg sbb out inc cmp push mov add cmp in xor aam (bad) testl add rorl pop sar add orl or add xorl roll inc inc inc adc shlb sub orl add add adc pop inc inc sub jo add and or inc inc cmp add and nop dec andb or or push shl rorb js xorb dec inc dec add add and sbb xchg cmpb (bad) push pop mov cmp push xor shlb xor cwtl dec add adc add daa add add dec sbbl daa rclb adc mov inc or push inc mov jno pop sub dec or rolb sub (bad) pushf adc test sbb add cmp adc sub ret jo add or push add orb in or pop (bad) (bad) push (bad) mov xchg adc pop add mov fcoms add push (bad) mov mov subb pop adc je test add pop jo add pop add rcrb clc pop sarb orl add push adc roll sbb add add sub add rolb subb ret rorb nop or fs inc sbb imul or add sub jo add sbb call inc adc add push int pushf and sub inc sbb call mov dec addr16 mov add push test js push push ret inc add rolb xchg and dec inc push sbb popa stos or adc cltd push mov loopne add and test xorl (bad) cmp and js xorl lahf add cmpl sub shlb mov xchg add and add pusha cltd or sbb loopne or popa les sub inc nop push jo add rol inc jb xchg or push add mov rclb adc cmpsl or push adcl mov add dec sub push add nop mov pop or or add pusha cmp jb rcrb sbb cmp fild test add adc pop mov and movaps add pusha pop pop pushf cmp jp hlt sbb pop addl sub into or testl add sbb add pop and xchg sbb push jge or mov add bswap jle testb movl loopne andl or jg adc lret inc add add jo add inc sbb call inc add adc addl or add or xor js fmuls clc pop icebp add sub xor and inc adc loope or ret loopne add and or add and add xchg add dec mov add pop add mov or ret add adc or and or jne nop inc mov add adc push cwtl sub push and bound mov loope mov adc je pop sbb or push mov ret xor xor outsb and bound push call loope adc ret rclb add add sbb (bad) or xor adc xchg test loop xorb add push inc jl add pusha xor dec or test pop dec sbbl push or lea push adcb add dec and or add and inc and add sub jo add inc jo loopne inc inc pop adc push insb add daa adc pusha cmp or xchg shr sbbb fs js fmuls mov push xchg or xor and inc mov and loop adc cwtl inc pop and add add and es xor dec dec loop adc add mov mov add sbb pusha xchg adc rolb dec add pusha adc pop or (bad) jae mov orl dec adc and mov loope add add sub test daa mov add test inc mov icebp aas add pop sbbb sub inc add cmp adcl test cmovno sbb add push sub mov jmp shlb sbb loope xchg movsb adcl fdivs add push nop add sbb inc repz add mov xchg or mov rcl jo (bad) inc and push and push cwtl cmpsb test add or add mov mov inc in rclb adc popf add xchg inc dec add xorb addr16 pop pop popa dec add sbb xor shrb sub cmp in bound clc pop rcll nop push addb sub mov stos add sub inc stos adc add mov lds adc mov mov adc mov sbb jle jno add add scas add or sbbb and test lret adc push mov sbbl add pop and push sbb mov pop sbb sub lcall add pop ret stos add sbb jne mov mov mov sub sub loop adc ds pusha mov pushf sub push jge lock movsb push xor dec pop addl add dec loopne mov pusha arpl add inc or mov adcl lock dec mov add xor adc popa sub dec add add nop or sbb loop and jo mov inc dec and add pusha cmp add test enter or or xlat or adc mov lods dec (bad) in pop push loope or enter sbb or adc mov loopne lds adc dec sub loop nop mov dec mov add pop es add lcall adc pop or popa push add daa inc nop sub and and or adc std pop lock sub rol inc push add adc add sub mov sbb shr fadd add jno andl pop ret scas push (bad) mov les cmp fmuls out add inc jecxz add xor mov nop bound adc sbb jl lods pop popa sbbl lds or push mov sbb inc pop or xchg addb ds add add sbb add push sbb ljmp and sbb mov adc xchg and or inc andl add inc mov js inc adc mov mov mov push add nop add push inc and and inc add add pop or out inc cmp add adc in xor and and or pop ret daa or inc push add add imul lods xorl or enter sbb add mov inc js lock or sbb xor cmp jle add adc push add xchg lcall mov (bad) outsb push sbbl js rcrl add add sub sbb iret ret loopne or or inc test rcrl pusha or pop push dec pop lds push and sbb pop xchg sbb jecxz sbb add and mov cmovo xchg push rorl jnp or testl push sbb rcl rolb or push inc inc inc cwtl adc lea and addb add pop or aam fcoml adc adc test inc xor add add jno nop mov xchg or sbb add loopne arpl or push xor imul sub sbbl xchg xlat inc fsubl and add push subl add inc popa add fadds lea xadd add mov add subl fiaddl xchg cmp add daa inc nop ss jae mov js push loop mov popa pop add and push and mov push push sub int3 or ljmp dec mov (bad) aaa inc cs sub pop cmpb bound sbb fldl pop popa mov push mov sarl pop test xor rcrb enter or (bad) or or jp sbb rorb sarl push sbb mov push add or sbb call add inc sbbl pop or popa ret cmpl cmp test add adc les and and push cmp test daa popa lds add jno push cmp loopne push pusha in and popa leave add fdivrs add adc add adc rol inc inc inc or mov ret xchg push push push mov pop add xchg sbb out sub rorb sbb push loopne add sbb jo add adc nop add rclb sbbb add sbb cmp rorb add or adc mov je push jo mov add inc pop or mov mov (bad) jae sub lahf or add or push mov js cmpl or and rorb dec dec jecxz adc pop dec and mov mov sahf add and xchg adc stos add adc das inc (bad) add jne in xor test loop int3 cmp pop pop and and mov cmpb bound rclb cmp inc jae cwtl push add rolb sub sub scas test add pop jae insb cmp push in andl push loope or inc arpl jo inc in mov cmp add cmp mov inc mov inc int3 jno loopne cmovo orb rorl js inc or mov shrb pop loopne inc rolb and xchg push adc xchg popa and sbb add xor inc mov in inc imul pop lcall orb loopne (bad) mov inc dec adcb cwtl add or push lock nop add push adc sub scas and jae sub mov push pop add jp (bad) push mov xchg in or (bad) pop shr jo (bad) or pusha imul adc ret loopne or subb rolb pop sub xchg cs mov inc cli inc aam mov cmpxchg inc add outsl inc xchg loope orl cmpb movsl (bad) pusha pop orl adc add push dec fildl push mov xor sub cmpsb daa andl pop mov loopne sbbl inc clc daa mov add out or xorb outsb subl push add push leave add rdtsc sbb add sub mov or add mov enter push nop cmp add lock xor popl pop addl mov shrb push add addl add sbb loopne add sbb add sbb cmp out pop dec mov andl or shll inc adc test add add add lock xor cmp test inc and inc inc xor nop nop test shr rclb add jp addl sbb in sub xor enter xchg push pushf test add test adc and enter or mov addb add adc cmp orl add cmovs bound cmp add mov inc pop adcl (bad) push add enter push dec push inc js mov inc cmp or psubusb pop add add jnp call loopne andl jne mov loopne add push push jne jle adc add adc xchg adc add nopl (bad) repnz mov xchg sbb add into seto xchg cmp adc fcomps shll push and (bad) and rolb sbb sar loopne add sbb enter adc push sub and jle push adc test add or xchg (bad) cmp loopne pop hlt or fnop movsb inc xor xchg push dec (bad) lcall pusha or add add jno add pop add sbb dec or inc loopne add mov xorb pop sbb lds adc lock adc sub pop add and or ret loopne enter outsl adc add jb pusha fmull rclb mov push dec add sub fstl je add jp and or add adc das inc xor aam mov addl rorb mov dec adc iret or add xor add mov rcrl mov stos xor or pop rcrl add je mov sbbb and js les xor rcrb loopne and xchg pop xchg xor imul inc shrb push loope or sbb ficompl jo orl and mov mov pop les inc mov xor enter xor jo cltd sbb cmp add mov mov mov popa and jo inc movsb cmp sbb add inc push add aad sbb sbbl add push cmp add push lds adc xchg test sub test pusha aad rorb push inc adc loope adc es loopne add mov or enter das add ds outsl inc xchg mov ds and jle jo add pusha cwtl pop mov sarb or adc cmp test rorb daa mov dec add sub inc andl adc pusha adc push add add nop les mov pop push and push xor xchg sub jne mov nop sub imul mov mov sub sub loop sarb jae fldenv les dec pop cmpb and ret inc sbb add in fs mov xor adc and and dec sub jo add rol inc roll or sar or popa add lcall inc adc mov cmp rorb dec or inc mov or xchg add and push loope test andb or or addb mov mov les adc mov and push add ror cmpb sbb cmp jl loopne test sbb xchg cwtl xchg jecxz and sbb xlat add test and loope or test sbb xor les and fs adc cld sub mov pop adc pop adc adc das inc xor hlt dec mov mov (bad) jae add inc ret and add jae push xor bound mov popa push sbb add inc and and dec push jne test mov inc orb xchg sub push add or or mov or mov ficoml mov xor mov cmp jbe add jo sarb and sbb jl movsb cmp das roll xor addr16 mov add dec mov adc xor push mov adc add rol or sub rolb and xor mov sbb (bad) dec or inc mov or aas mov shll inc adc test subb orb inc inc sbb addb cmp loop add sbb inc push and xchg mov (bad) push cmp push loope or add out add xor movsl adc ret push add (bad) adc movsb lds and pop cs xlat xchg sbb ret sub cmp push aam and sbb loope add adc nop add lcall sub mov int3 or cmp add mov mov rol and cmp mov sbb mov je and in sbb in (bad) mov inc sub sbb dec icebp (bad) add xor mov mov inc rcll push push sub or push inc push (bad) cli push mov adc mov dec lods sbb pop mov shr adc es ss cli or add or ds mov je ret clc sbb test les rolb addb sbb inc push push mov mov outsl sbb inc lcall inc pop and inc ret add cmp andl enter adc add or sbb inc dec jo add mov lods add mov xor push adc (bad) jmp pusha or push and fadds loopne xchg mov and adc or ja rcrb mov dec inc xlat or loopne add jno adc imul daa leave or sub sbb fdivs add daa fsubs (bad) js bnd dec lahf mov add pop pop loopne add mov aas add sub int ret dec andl cmp add andb sub add add jle int3 sub movsb add mov (bad) ret mov sbbl incb cmp mov mov add sub ja js loopne adc push mov mov shll dec pusha add push xor sub add testb and add rol mov mov add and sbb ret ljmp lds push imul mov addl xor movl push loopne orl push adc inc andb or add add pop inc add push orb call stos add xorb sbb sub add push dec es mov add cmpb imul xchg push push addb inc sbb rorb or bound and push aam inc cmp dec and adc inc mov aaa inc nop pop dec aas add mov add and movsl add mov sbb add inc xchg or rcrb push icebp jnp loopne and and add stc adc add pop cmp add adc and test adc pushf movsb inc hlt or adc cwtl or (bad) cwtl movsb cmpl call push sub mov lds pop sbb adc jne mov (bad) mov rorb or andl cs or loopne adc push loopne mov or mov pop lods pop inc fsubrl pusha mov leave adc movsl ret inc sbb lods push andb pop fdivrs inc add push arpl sbb add lret mov add or or mov test xor mov cmp add add cmpsb mov test and add add mov add mov inc xor add or sub inc scas inc and aaa add loop add push loopne or pop mov xor leave cmp and popa test loopne add or xchg hlt cmpsl les imul add ret xchg mov mov mov adc push inc repz inc adc sbb mov orb push jb add mov add clc sub xchg add dec addl rcll dec loopne add jmp xchg mov addb push mov push rcrb add add push adcl loope or out add and push add add sub fmull cs or shll pop add stos add and pop inc out add stos and (bad) sbb inc pop and gs or push inc sbb ret inc mov xchg adcl jo and sbb add and rcrl js sbb mov jo or loopne or xor out loopne add xor sub xchg add adcb push add mov and sbb sbb rolb add xchg sbb daa add rclb cmp add nop rorb adc push mov and daa jo lret jo add stos addb loop xchg fmull imul pusha lds sbbb or pop dec les nop inc (bad) cmp inc or pop rcrl inc mov int3 pop and or or dec test add sub push ret jl xchg push test inc aas add xchg or (bad) mov les sbb jl xchg sbb lock mov or aas and nop inc lahf or and add add cwtl add loopnew sub add and push add inc scas pop call lock mov nop cmp push and xchg mov bound push lock mov sub jns and or sbb jl (bad) xor or mov leave adc scas inc ret add xor rolb add push xor lret mov adc scas xor js dec call inc jae or leave cmp sbb loopne xchg jbe nop add sub jo add pusha jo loopne dec int3 xor adc test and mov xor push adc add rclb add push loope and add ds sub cmp inc subl add dec push sahf xchg clc stos movsl push or adc inc adc add mov add adc or xor (bad) adc orb daa ret jmp xchg pop inc jle push ficom or and loop add adc or ret or xor mov pop or dec jb push pop add lds push add jbe cmpsl sbb sub add ja das sub bound and push add rcrb pop push call mov mov pop inc xor sub pop dec mov mov popl (bad) lea in push and popa add loope inc add push arpl sbb add add roll or and add inc sbbl push inc fild dec add add and sub fs out pop addb push jb adc adc lds cli pop pusha leave orl cwtl sub xchg add push or add pop mov or test and push adc mov push loope add js shl (bad) divb mov xor cwtl and adc jb xorl mov pusha call aam rclb cmp enter xor jo cld adc stos sub push cmpb pop add sub pop test mov mov inc je loop xchg xor inc pop pop inc daa mov and test movsl test adc adc pop and sub xchg add sub sbb adc pop (bad) call mov inc mov mov lods and inc movsl push lock rcll adc jns negb and sbb pop mov push dec dec cmpl xor add pop loopne or and add pop lock imul insb add or movl push adc mov addb xor mov (bad) xadd mov or insl inc cmp loopne orl roll nop add or push add dec add nop test and ret cmp add mov add test sbb add xor dec rorl addb mov mov and (bad) into or pop and or adc int3 addl pop inc fs adc cld mov jo test push push clc xchg (bad) pusha jne les pop popa jl xchg cmp ret sbb (bad) mov enter pop rclb and in mov dec push add sarl sub mov xchg add lods add sub test mov inc mov xor pop xor add mov mov bound jno add or pop add and shlb lea inc sbb call loopne add adc les movsb sbb cmc popl stos cmp sbb fcoms (bad) pop dec jb xchg inc ror andb fdivrs add pop loopne add imul mov addb push jge cwtl push loop xorl mov test nop xchg push mov xchg test mov ret enter or daa push aam les inc adc sub mov rorb js test push test add add add add push add shl inc push cmpb ss mov and or pusha xor leave dec test lods arpl jb mov (bad) mov add (bad) dec mov int3 add push aaa movsl ret xchg and fs add push dec mov cwtl jle ret inc add add stc push je mov or inc je fcoms mov mov add andb pop loopne xchg jl add sub add pop ret dec js pusha push inc push add push sbbl or add les inc icebp or inc pop push nop mov ja int3 cmovb mov popa add pop andl ljmp icebp fisttp add arpl punpcklwd and mov pop lods dec rolb rorl or rol mov arpl add add or (bad) add mov rorl xchg mov rcll xchg jnp loopne adc add mov add or lea das nop xor fmull jae and inc mov add sbb addb cmp loop addb inc push pop xor cmpb ss mov and xor leave cmp inc inc add movsl hlt or rolb mov push sbb rolb mov loopne cmp and push lea add pop xchg pop pusha dec or inc or mov dec or pop add push sbb dec rclb push sbb inc js (bad) je mov jle mov inc sub push add dec adc pop popa pop sub add ja das push cmp les pusha push (bad) mov js test incb or andl cs es add lock (bad) int mov add pop mov add lea or jp adcb xchg mov mov push loope or sbb xor jle orb orl or inc rcll and sub inc sbb inc mov mov (bad) mov pop loopne add sbb sbb xorb add push test xchg jg inc push and dec add add mov loopne xor sbb dec pusha adc sbbl xor or add push xorb or add js fcom movb sbb push mov arpl cwtl adc loopne sbb test xorl adc cmp inc push or and push sub hlt add inc loope cwtl ljmp aam add and add dec addl roll adcl or adc inc loope and adc adc adc mov stos sub fadds test loop add add nop sub or push subb xchg (bad) or clc and sbb or push push adc lock insb jg imul jne ficoml lock add push and mov mov or push cmpl and repnz or test adc add addps mov inc push mov add xadd cmp inc lds xor add pop and add dec inc adc xchg or mov push adc add and add rcrb loopne push dec sbb or inc andb or pop add sbb rolb shl rorb adc or dec adc test or add and or fs pusha inc adc xor sahf xchg je les roll push mov xor push add rorb sub mov mov sub add and (bad) popa mov sbb mov add js (bad) clc scas or push arpl pop or push add mov pop popa pop (bad) mov mov adc cmp mov arpl add orl add dec (bad) das das (bad) je pusha push inc mov mov js (bad) cli push mov add add in cmpb adc pop dec push (bad) dec mov add sbbl loopne or mov inc ficoml and pop or (bad) fdivs add pop ret or mov dec sbb xchg add inc sub cmpb (bad) and or or aas subb jg movsb dec and adc test subb orb inc inc sbb loopne dec inc add cmp adc inc push cmpb ss negb xor add test add mov push adc cmpsb sbb nop dec shrb mov call and mov leave rcrl pop test adc nop daa loopne add hlt xchg cmpb push inc movsb cmp pusha inc add push (bad) xor inc sbb or inc jo rcrl (bad) push or add iret test call xchg sarl mov or test nop daa test and pusha sub dec xor xchg test and sub push and rclb js add push sub push mov (bad) cli sbb push and nop cmp loop inc sbb sub repnz loopne test add mov add xor adc jnp mov add add (bad) xor xor (bad) or clc andl and sbb loopne push inc sbb add inc mov arpl invd addb nop add xor andl add (bad) inc push popa dec or add adc mov add xchg call dec adc cltd sub (bad) pop add loopne sbb push loopne adc push (bad) scas popa push sbb xor add inc mov rorb xor movsb xor js inc sbb loopne xchg js sbb call xor hlt sub xor mov nop pop (bad) pusha pop xchg add adc adc addr16 fcmovb xor jno sbb jecxz or ret mov dec andl clc cmp cmp and hlt adc ljmp inc pop orl inc mov test (bad) xor xchg arpl push test add hlt or subl push and nop cmp in and call mov xchg xchg add push inc or nop add mov les rcrb mov push or adcl jnp mov pop lret mov xchg sbb add mov dec bound xchg or sbb (bad) and and dec xor add add xor push orb push and add pop add push inc xor add cmpb pop add or pop adc adcb shr loopne push js loopne add push ret inc add sbb add movsb add imul insb int3 inc cmpsl add push sahf xchg clc stos mov ret pop or loope adc mov inc inc or and sub add les pop or les mov xor cltd lret nop pop xchg jl loopne add es pusha mov in or loopne add inc test push mov and pusha sub add sbb out add or jmp pop add push mov add add or xor fidiv pop cmp inc add or lock sbb rol inc jb xchg or lret pop and add xor clc pop adc movsb pop mov orl or sbb lcall inc fwait sub xchg test push push xor fiaddl loopne add subl dec add adc mov mov add mov dec and je pushf add or pop pusha cmp add test inc add ds jle clc mov xchg or jbe mov push cmp add inc int3 out popa xchg xorl test jb mov loop add int3 add hlt sub or cmp sub andb add inc xor cmpsb adc mov fiaddl ss add bound loopne push xor add inc ds cmpl mov push mov add sub cwtl sub test mov pop sub push add add or ja test shrl lahf int3 out addr16 mov (bad) mov mov test sub call lock pop add push in mov (bad) cli sub pop shr shlb mov dec sbb jp pusha in mulb les pushf pop shrb lahf add dec add test pusha push xor jge cwtl and dec test popa push adc add and movl push loopne orl call add add sbbb add pop add pop jo test clc or dec adcb add (bad) push pop xor sub stos dec nop cmp add out dec pop mov lcall and cmp jno cltd mov dec mov inc inc mov xor and or (bad) mov cmp loope inc pusha sub add sbb loope (bad) cmp inc nop pop pop and cli or lahf test sub xchg or adc pop mov test adc lock pusha loop sarb popa add adc sarb and sbb add xor sub add adc dec adc movsb (bad) ret add inc sub adc jo pop push or pop add sub sbb insb jg pop adc jne fsubrl pop test roll mov shrb push hlt push loopne add push inc mov mov mov jp mov pop lods pop inc sbbl xor xchg cmp add add pop loopne add imul mov orl push inc test xor push nop or (bad) and adc xchg das cmpb pop xchg dec add sbb into xor xchg mov lcall jo subb aam or movb cmp nop test add sub jo mov sbb pop add push loopne add xor lcall imul push push addb sbb dec xchg pop mov or arpl or mov mov and add and xchg adc pop (bad) pop inc inc inc add sbb mov dec add cwtl pop xorb add dec xchg je loopne add push test dec inc fadds test adcb sub xor test or xor and xchg sub lods add add inc inc pop pop lock push xor icebp pop nop pop test out add pop mov or pshufw cmp add or pusha inc cmpsb sbb outsb (bad) movsl cmpb xor mov pop ret js fdivs add psrlq add add or xor or add xor or mov inc sbb rorb sahf add les sbb or inc imul inc adc add or add or pop adc or andb add popa sub cltd xchg shr push pop add mov (bad) mov add xchg shl mov bound ret push xor leave cmp xor cmpsl sub test push mov addb sbb scas mov andl cmp add jne movsb add stos sbbl daa orb or jns and lods or inc xor add test add or xorl je ret icebp push sub add inc lds cmp xchg mov lock add and test adcb push inc cwtl or push rcl add lods sub mov jnp (bad) mov pop push pusha mov movsb adc lahf ret loopne (bad) les inc icebp pop nop jecxz mov inc repnz and pop mov mov cmpsb push rcll add xor pop fdivs or add adc pusha movb xor add mov lods sub (bad) sbb add rolb push or inc test js add add (bad) inc or push add add push or pop add sbb call inc int3 add or mov sbb xorb sbb cmp and popa push sbb add mov fsubl mov add dec pusha xor mov push inc (bad) adc movsl ds cmp repnz fsubl call or js inc mov sbb add cltd adc or lahf add push ret jl nop pop (bad) pop inc inc inc pop mov mov add and (bad) into xchg xor inc lahf add or stos addl mov jno xchg jl popa pop or mov rolb push lcall (bad) mov pusha or pop call mov test mov pop and mov cs fistpl push xchg push adc (bad) ja icebp scas add push loopne sbb cmp jnp nop sarl rolb cmp pusha movl sub addl add sub rol push inc test xor (bad) add mov and (bad) andl psubsw inc push loopne mov shrl cmpsb dec cs add (bad) xor mov sbbb insb and and sbb add xor andb add pop push pop add push loopne add mov (bad) jo mov rolb xchg sbb xor pop add arpl adc add add outsb leave call xorb pop dec imul adc push int3 inc inc adc dec xchg add add push orb sbb xchg or outsl inc sub xchg movsl cmp add pop or dec sbbl push add insl test movsb dec add outsl adc or jne nop flds cs push sub or sub test mov mov (bad) mov pushf adc push inc mov lock or andl lcall jbe add (bad) xor sarb push inc pop sbb and cmovs hlt sbb outsb or sbb in sub add or add les or mov inc nop adc adcb push adc xchg push mov mov lds sub mov and and mov lcall add add add adc sub mov xor or dec add sbb addb cmp loopne mov inc or nop xchg subb inc pop pop pusha cmp add or cld insb inc rclb jae out add jb push mov mov test cmp sbb add insl sbbl lahf adcb adc dec fwait push sbb xchg or rolb sub add popa jecxz add push pop xchg addr16 hlt push jo or insl mov inc jp add test loop add or mov lods inc and cmp lods push ret fsubrl jl and add sbb sbb mov scas push inc mov mov nop cmp push and cmpsb mov mov fs sub sarb notb sarb jg add inc (bad) cmp outsb or (bad) sub ret mov loop adc mov rorb lds sbb and add push xchg xlat push xor inc lds xor add (bad) adc ret xor loopne push cmp mov add fimul addb mov test loop or inc inc pushf or add outsb or xor inc add or add push inc xor and add jno nop or adc sbbb xchg (bad) push pop xor add add test insb xchg test add rcrb int add ds jle and mov subl jae sub sarl jo adc gs adc add test (bad) push push nop inc (bad) cmp push mov inc xchg adc xchg pop or sub xor sbb clc and jb and inc aas add adc or inc pushf adc fcmovb lock push jae or xor sub and into xchg adcb orb fildl cmp jne fcoml push add dec xor mov adc aas pop pop push inc mov push or popa aaa and xchg push pop (bad) mov shll sub or or add fldl fmull pop test push inc icebp or add insb andb push lock pop adc pusha add push mov addl movsl mov cmp je test fdivs add pop adc hlt frstor add xor add add lret jge cwtl adc xorl adc nop xchg lea pop dec sbbl lcall sbbl out (bad) aaa add xor or cmpsb push test rorb add push add mov mov add pop pusha adc daa inc dec dec add add sbb call mov inc sbb sub in push and push rcrb add insl repnz xchg and or push xchg in es mov mov ret inc xlat sbbl push pop and push pop xchg hlt add inc xchg sbb push cmpl dec sbb inc and clc xchg or mov dec cmp nop cmpsb (bad) push sub add (bad) loope adc xchg rclb sbb adc mov adc add mov add mov inc (bad) push and or inc loop pop push push sub fs pop add les cmp cwtl jbe mov loopne inc or add nop popa add xor stc or jp push sub inc pop mov (bad) icebp add test mov (bad) xor mov pop xor or fs ds imul inc mov or xchg xchg adc fnstcw push push rol test mov inc movsb cmp dec inc cwtl add orb push add add adc or sub xchg add ss inc data16 sbb fisub add mov mov (bad) out and add add push jl sbb data16 add imul inc inc inc das adc and xchg adc scas adc or jge test popa aas or mov (bad) adc pop addl leave pusha inc lcall add push sub push dec andl inc daa (bad) movsb dec adc push mov iret add add lods add push push add lahf mov add or push add xchg inc test rcrb addr16 test and loop inc jg rolb mov decb xor dec loopne jge jmp add sub loopne cmp jnp sbb and mov inc ret rolb xadd mov sub orl push push adc mov fdivs (bad) adc aaa add xor or roll subl subb orb daa cmp inc xor adc add sub adc add nop cmp xor call xchg iret xchg and insb sbb movsl sub loopne mov pop rol cmp or mov enter or xor cmp js test or cmc addl inc les loopne cmp pusha or inc xchg pusha nop pop mov add xor mov mov sbb les js dec ret dec andl nop daa lds shrb ljmp inc sub push add push add jp mov rcll mov rcrb sub fsubl and xorl pop andl inc add ret shr loopne add mov and bound add and sub xor fstpl aaa lds push mov inc jle movsb mov add sub mov aaa add and push push sbb ljmp gs jo add pop (bad) push add inc sbb jo andl daa sbb fcompl xor mov rclb cwtl add or or clc sbb incb inc add add daa add add pop inc pop add push loopne add and xor loopne lea pop pop jecxz or or push (bad) adc movsb lds mov nop sbb popa push ret jno or and xchg xchg test or mov adc cld adc inc jle jo add pusha cwtl pop mov (bad) jae test add call orb addr16 push add push mov mov mov pop adc push movl sbb add sub lods add sub pop inc bound and add add and dec inc ljmp in cmp push addr16 movsb dec and adc add add pop inc andl lds (bad) or inc xchg test andb push and add and xor clc loop sbb inc add mov sbbl in or sbb test sbb add xor mov adc xchg add mov or or cwtl and cwtl xor ficom and mov add or push daa cmp adc or or add mov sbb cmp fcompl and xor adc push pushf mov addl orl pop gs ljmp loope push aam in add ljmp je inc xor nop cmp adc mov xchg add ljmp pusha adc pop xor add je add rcl loopne add add aas push out test addl pusha sub sub sub or push mov mov pop sbb or adc mov or pop inc push add pop adc cmp fxch add cmovb idivl or xorl lret inc inc or das or push mov push or mov addl cmp add rorl add push xor rorb mov mov dec pop jb xchg adc add add daa inc sub mov push or (bad) sbb or xor inc sbb or pusha adc test subb nop or sbb stos pop adc sbb add add inc dec inc dec cmp xorb or andl xor pop mov and pop int and lds xor lret push pop push inc adc in mov repnz add xor and xchg inc inc ficom inc lret test cltd or and add and xchg bound cld or and scas inc loopne pusha dec andl lock sbb out movsl sbb scas lret xor add mov jno or ret add out xlat or dec inc movlps jb jno lds sbb push (bad) xchg or movsl rclb sbb push jl mov adc out punpckhwd add push orl adc xor mov sub orl push push inc add pop push cwtl xchg cmp inc sbb shrl inc mov xchg inc push adc push insl or cmp sbb lock add jns leave inc adc dec adc add add mov popa and xchg roll dec add test inc or add cmp faddl add mov inc cld push inc push xchg or inc xchg clc and add inc add or dec dec pop inc add outsb add adc cld add int3 add mov push dec xchg add dec addl shlb cmp popa clc add pop nop mov add and dec cmp sub addl sub mov shrb mov mov inc push add push dec incl push (bad) mov xor and adc loop and enter cmp test repz aam inc push cmp xor loopne popa jnp mov (bad) and push pop shlb stos jne xor inc sbb and dec pop dec pusha add adc rol (bad) xor add dec dec scas adc arpl push dec add xor adc sbb push shrb add cld or sbb add inc adc cwtl add or add pop inc cmp rclb fs jno and sub push nop cmp cmp (bad) cmp inc pushf mov mov shrb inc add movsl cmp sub jb push mov popa xor mov jno or sbb test popa repz test and pusha sub mov mov cwtl mov hlt add adcb adc scas or aaa ret stos or mov add dec mov add cwtl add dec cwtl je add inc xchg cmp and (bad) inc aam loope mov shrb mov add ret mov lcall mov fimull rclb or pop add push mov adc mov push movlps jb shrl pop inc scas mov add mov arpl mov and and cwtl cmp mov and mov sarb xor clc push xchg xlat add add push xor ret call lods movsl xor xchg inc (bad) mov lret in pusha or test (bad) xor lea daa sbb (bad) inc push loope xchg add roll xor add sbb adc add add jae test jno nop or adc test mov (bad) push and sbb popf add push sbb daa imul mov call xor push adc movsl ds push or jne lahf popf xchg adc aaa cmp loope pop inc mov bound adc add loop adc or pop adc add fld es and or inc jecxz icebp fimull test movsl add adc sbb add inc xchg or and add sbb cmpsb (bad) js add adc inc aam lock add rclb dec xor addl or mov (bad) jbe fmull lock loope add xor ret std or dec fdivl mov les inc icebp or (bad) xor js movsl push pop mov adc orl push mov xor addl loopne dec in add or push xor lds and inc (bad) sbb adcl jns add cmp mov int3 mov je leave inc inc push adc test loope add inc es scas ret mov jo subb je loopne inc cmp inc adc add push sub adc rclb add out and enter dec push mov sbb mov cli inc jo or inc daa ss les lock mov dec mov clc fild gs imul test (bad) ljmp push repz inc mov push push sahf add inc gs or lahf mov and jns mov (bad) jg mov add adc lcall shlb call xchg shrb and sbb xchg arpl add pop adc in inc sbbb subb push mov sarb mov rol bound add les inc cmpl jb add cmp js out js pop adc and mov or setb lea jnp push js leave or icebp and pusha xor mov xchg xlat adc mov rorl imul mov sbb pop inc (bad) cs popl inc jns jecxz add cli push loopne mov sarb pop test dec push lret mov inc adc test (bad) xor mov cmpsl or test inc dec and adc add add pop inc cmp add cmpb push fcomps lea nop popf mov add inc inc cwtl enter add jecxz or mov pusha fcompl loopne dec sbb xor or and mov inc popl cli shll jo dec movb sub adc add in addb adc xchg ret push mov mov sbb out sub inc mov and sub fiadd stos mov adc mov push mov sbb leave test adcb sub sub sub push sub or sub subl int dec rcrb and test les jp in mov add sub xor addl sbb pop mov xchg into or adc inc add and sbb loopne or mov xchg push mov mov and push cli cmp pusha add mov jg push adc test add jo add or push pusha adc cwtl add or push loopne inc cmp pusha adc and inc scas inc and add or andl mov lock mov cwtl mov rcrb or cmpsl and or add add adc outsb cmp push lock sbb sub xor push pop and shlb sbb mov orb xor dec lea call xor add xchg or mov add je loop pop xor add test je add inc into push and mov and jp and add and mov inc push xchg enter sbb roll shrb push add (bad) mov loopne subb xchg int3 mov adc push sarb sub pop dec xor mov fwait pushf repz fimul test add add cmp adc int3 dec mov add sbb ret mov xor add adcl mov rorb ror add imul add dec sahf jl inc add test mov adc add or adc mov mov hlt xor or sub xor dec add add or pop add add mov add xor xorb xorl fsubrs bound push aas test (bad) testl xor jecxz push and fwait push (bad) hlt movsb test shrb mov mov dec (bad) or xor jl mov inc ret aam and inc cmp and rcll or ret mov dec bswap dec add and sub inc ficoml sbb pop xor add adc dec add push add mov add adc or ljmp je shrb aas nop mov mov andl add adc pop xorb cs stos adc mov push mov (bad) hlt adc ret dec cmp mov mov add cmp lds sub lock push mov addl xchg mov add imul or rol rolb add subl movsl mov dec adc push or pop push mov js rclb loopne test sbb icebp pop andl sbb or sub rclb enter add jae fs mov nop sbb in inc je or mov inc push add cmp add (bad) push sub (bad) (bad) push mov jae call fldln2 or sbb adc shrl adc ljmp xor add add jb popa mov fdivl add bound rorb lahf mov (bad) ficompl (bad) jno or and xchg das inc xor hlt dec mov xorl cwtl mov daa inc nop and stc adc sub inc or jne cmp ret mov add adc add mov in push inc adc adc push adcl add add sbb jne fmull adc stos push lock movsb jnp orl and push inc adc hlt xor stc cmovno push mov xchg test sub mov jae push in sbb fdivs add push nop jle add inc lds xor lds test ror xor cmpw add add add and mov sbb push push nop hlt add inc add add mov inc xor rorb js andb mov dec adc test mov rclb adc test (bad) mov add mov or fs shr dec mov jg xor add sub lock xchg jnp fistp cld lods add js inc xor adc (bad) jb sarb cmp and jle jo orl addb pop test push add nop loopne and push sub cmpl mov mov adc shl cmpsl xchg sbb dec sbb push test daa les sub lcall sbbl aas nop out sbb jl push rclb mov enter push xchg subl (bad) fmull adc leave adc add insb inc sbb sahf and and or pop adc mov sub bound adc adc jo push arpl sbb mov dec jp shl pop sub push add pop jo add and sbb inc les sbb push or sahf pop loopne sbb pop ja mov push or or (bad) inc inc pop adc jo andl adc mov subb push add fxch shlb ds ds leave mov (bad) fisttpll sub shll data16 fadds subl add xchg push inc rcll push inc int test inc outsb push inc or test cmp js add mov popa inc add outsl inc in lock add adc or add adc inc xor andb js,pt dec push pusha loopne adc mov mov lock js add mov mov andb daa xchg (bad) or cli and xchg scas add mov int3 sbb cmp add inc mov nop sub enter (bad) call jl inc fildl cwtl ja adc nop repnz das fs cwtl pop inc jbe sub cld xor addl sbb pusha pop push xor into sub xor inc push sbb xor arpl sbb add push sbb adc or js adc js lret loopne addb and stc ds iret scas adc movups add cmp adc push push nop add or push or or sbb add ret ds pop xor xorb sub nop sbb fs faddl mov dec mov js xchg add repz mov mov jle icebp push mov sbb xor test mov mov pop and add and les push mov gs clc and and aas xor into inc adc js add or bound aam and adc mov adc or sbb std (bad) sarb sbb adc push inc mov push or sub push adc pop add sub nop add sub pop andl movsb loop push fmuls cmc xchg inc mov adc push jle pop adc addr16 aas jo add mov in sub or (bad) and add shll mov adc addb rorl add ss xor pop int3 and hlt or ret repz lahf fdivr loope ds adc sub mov (bad) cmp add or and and add subl popa nop add add add or mov adcb add jo and sub aam test xchg and test incb xor dec test dec nop fsts sbb stc dec bound cmp in push inc loopne push xor hlt lahf loopne and xor cwtl loopne movsb aaa sbb adc adc sbb in (bad) insb adc add push add mov add popa scas push adcb add add push inc adc lock movsb or or add and mov pop sub add fmul inc pop push call mov xchg adc add push xor or das fs loopne or jg rolb cmp cld dec inc inc mov xchg xor rclb inc rorb cmpb add mov add and xchg jo add push (bad) adc (bad) jle lock inc adc mov xor add sbb rcrb cmp rorb adc enter and or mov inc pop add es add enter sub sbb cltd sbb pop xchg loopne and mov nop dec mov add sub in add push lds rorb insb mov cmp or xchg flds movsl ret cmpps xchg dec adc popa unpckhps shll push dec shrb dec and jno and add inc cltd xchg shlb popa pop (bad) mov push pusha sub xor fisubl push push call add jnp scas test and lods and inc int mov subb adc pop (bad) call leave add sbb shlb mov xor dec nop ss mov and nop add pop mov add and test pop loop xor jnp and mov and and cmpb pushf pop adc add pop xor add add and or push cmp ljmp mov int pop mov loopne inc and sbb add mov (bad) shll test and push or push rorb bound and add sub and dec pop xor xorb inc cmp add or or lods push addr16 bound push pop sbb loope and addl (bad) ja mov enter adc pop xchg insb sbb xchg add outsl dec xchg ss or enter (bad) (bad) add xchg add popa add adc add or inc push mov add shlb popa pop (bad) mov cmp adc xchg bound sub mov ret inc es pop inc les sub or or add adcl fdivrs bound and mov mov dec and mov enter mov ds jp push dec rcrb xor rcrb dec pop pavgb or push push or or and sbb fs lock add mov movups loopne adc rorb cltd adc call fwait add push or pop add sbb fcomps cmp rorb add and clc or inc pop adc add sub (bad) dec inc inc xchg add push xorb or push xorb sbb and sbb imul inc inc and subb cmp adcb lds ljmp xchg xor add or adc lret test mov mov xor inc je rolb adc (bad) icebp add cmp cmp loopne sbb test loop inc dec push add push rorb sub jmp cwtl add fstps fsubrs add sub nop lcall mov (bad) repnz imul pushf sbb or pop jb (bad) cld push mov add cs push or push inc adc inc lcall test push xchg and adc int3 inc xor jmp jle shlb test stos add push je sbb or pop adc add push mov xchg xlat and add sub orl inc loopne test rolb push sub adc or push mov popa sbb ljmp mov inc adc xor push sbb sub jo or adc mov mov les or push adc fmuls pusha jne jno push rolb packsswb mov dec mov out mov cmp sbb mov adc or xor pop bound inc and loopne pop gs mov push dec add das adc xchg sbb adcb xor jo mov jo decb cmp push add inc xchg pop adc loopne and sbb adc sbb jb je add cwtl test jno sub push xchg adc int3 adc sub test leave insb inc jo popf mov add or sbb pmuludq subl or js enter sub inc adc ja cmp and loope sub mov mulb sbbb (bad) inc jge mov mov cmp pop push add and or jp test ret xor popa orl adc icebp push js add add pusha (bad) push rcll xchg push lock sbb mov lock lret rolb mov mov mov adc clc xor sub xor add add rorb and add add roll add push jns pusha ja enter add xchg xor cltd test mov lock addb xchg inc and les inc and push or icebp ret xor inc jo nop inc (bad) cmp cmp js adc sbb inc bound ret jl lock sub scas inc mov pusha loop xor add pusha aaa and pop es loopne insb push and sbb add or je pop sbb pop and pusha pop xchg or mov (bad) or ss add adc js mov jnp push sbb add adc or rcll mov or push add sbb enter and or cltd adc xor adc daa xor push sbb rcll cmp mov es popf sbb pop adc int3 adc ret cmp pop cmp pusha add stc add push xor mov test push cmp push sub mov cmp or test loopne rcrl mov or sbb pop inc push jg dec add or mov mov int3 and xor ret es mov inc and xor add loopne add push and rorb add or inc adc add push add test add inc les ljmp bound int pop mov enter mov bound pop and push addb sbb js insl push addb mov in dec mov sbb mov sarl add add enter or sahf add test bound mov xchg fist inc sbb bound imul jo push mov add inc push xor cwtl mov aam cmp lret popf inc inc lea and inc and push xchg cmpsb pop movsb push push sbb xlat adc jb inc lea fildl adc adcb inc or les jno pusha or int3 add xchg addr16 test add xor mov inc dec cmp mov or adc and push add dec rclb stc arpl sub (bad) sbb out scas push fadds push imul and pop or xor xchg pop loopne and pop sbbl inc sar push icebp add dec add add pop subl xor test (bad) loopne add push inc hlt cmp aas int pop in sbb dec sbb push or adc push xor inc ret test daa mov pusha fmuls inc clc add dec push popa or pushf jne push dec js or and fimull inc nop push call jo add sbb into loopne cmp xchg inc or sarl xchg movsb lea repnz rolb adc movsb mov dec rorb hlt xchg xchg mov aad dec push test sbb repnz adc imul add adc ret dec dec xor lods and push sub add or xchg and pop lds cli xor test pop arpl mov je movsb rcrb xor mov and mov push lods lea sbb adc mov sub mov pop add popa sti and cs aaa dec cltd jae push cmp add inc xor aaa lea inc in dec dec lds and adcb push add mov fs loopne inc cmp adc and adc and sbb in adc adc and enter add movsl adc sub adc add xchg (bad) stos dec nop pop xchg adc and mov fs sbb mov lods or dec bound pop sbb (bad) xor pop sub add roll add push loopne and mov adc sbb fisubl cmp icebp or imulb scas adc pusha dec mov adc mov and push xor sahf mov (bad) jb bound or inc xchg dec enter imul dec test cmp and outsl and loopne xchg cmp add sub push or jae movsb jns lods mov ljmp nop or cli es out add and and mov orl xchg in push pusha add inc xchg push pop or ret nop add or sbb dec or mov adc lea and in popa jo or test push xchg or sbb test iret mov pusha adc add popl push fwait or leave inc or sub mov inc push inc sub test or xor lods es adc push inc sbb rcrl jge xchg add dec int3 push xchg jno stos add mov cmp inc cmp and sub inc (bad) cmp daa push push or xor sbb push sbb andb repnz add push cmpb push xchg sub cld fs inc sbb or xchg test sbb or test push rcl movsb imul sub or jae or push sti and mov pop xchg shll test fiaddl push icebp rorb adc dec test mov and push jbe mov dec roll push mov jl (bad) ss mov ror lcall and ret adc push inc call loop addl inc or add add sbbb sbb enter and or sbb call adcb nop inc test or dec shrb add add (bad) dec in jo xor mov rolb and sbb and lods push icebp or adc mov loopne add adc sub bound je adc in or dec sbb nop jp adc addr16 leave aaa inc sub addb sbb add jo or inc lods test jns in add mov xor or adc ficoml mov xchg pusha adc nop sub fnop ficom sub dec fdivrs xorl out pop xor subl loop inc pop jg rclb mov sbb out jge adc push mov rcl jl or mov mov shrl adc inc xor stos cmp addr16 mov movsb or pop loop add enter add adcb sub push pop adc mov pushf dec lds dec push push push (bad) push xor and push mov movsb mov adc add lahf fstl jo sbb adc in push dec adc ffree xor add roll nop add sub push or pop add sbb sbb cmp je pusha and loopne inc xor cmp add or inc and faddl or mov xor sbb xchg inc push sub push aad test inc ret outsb xor cs vandps movsb mov adc xchg add loopne sub mov es sbb insb arpl jle xor mov pop lcall mov lret sub fiaddl xor das mov rorl push add mov and lret xor pushf cmp inc mov add ljmp inc xchg xor movsl xchg sub sub inc rclb sub or daa sbb and loop cmp mov nop out dec repnz jp jb adc test rolb pop sbb call outsb cwtl test mov inc push mov aam gs and xchg ljmp loope rcrl mov sti mov inc pop sub cwtl cmp nop adcl and add jo add mov loop xor xor add xor add mov xchg (bad) push adc test inc mov aam (bad) xor cmp leave and cs inc mov xor mov xor mov sub pop lea sbb cmp rorb dec xchg js inc adc add inc lret push movsb fisubl sub xchg les out aaa adc xor mov cmp loop adc das pusha dec cmpsb imul pop xchg decb inc aad sub shll dec adc mov lahf or add mov adc rolb xor es movsb into add enter addr16 lods lea pop sub sub dec or sub sbb fild jp add add inc mov sbb mov shrb push sub and xor or fs and inc mov ret loope mov inc push mov loopne inc jmp mov (bad) sub movsb xchg and add add cmp adc rcll and adc mov push js popa add test adc cmpb shrb ffree sub xor add pop add push inc xor xor add je loopne push (bad) jo push mov mov add adc sub pusha xchg adc cmc inc pop cmp add sub add push xchg mov mov roll dec push movsb adc xor shrb pop mov add inc sbb rorb sub inc jle push pop sbb or adc mov and pop sbb pop mov adc cmpsb nop icebp add push sbb rcll and or lds xor and rcrb into ja push or inc add and inc or jo (bad) push push pusha je test sub push aaa or loope dec lcall test into and adc aam xchg or jmp and pop nop push xchg push adc sbb scas or lock loope add push inc pop sub mov pop xchg xor adcl jnp nop das fs aaa inc push adc rolb rolb xor mov inc rorb mov popa push add add loopne xchg fadds inc adc mov orb inc inc jo loopne inc cmp and xor mov inc ja lods adcl orl inc add sbb push add sbbb lret (bad) jno mov loopne inc push cmp adc test lock mov add inc hlt sbb testb jne add mov push xlat (bad) add cwtl push fs xor or sub and outsb jo fimull adc (bad) pop fwait pusha sbb mov dec stos lea add adc adc or data16 jle mov orb mov inc cmp test ljmp push sub mov orb mov adc or pop sbb xorb xchg mov je inc jp hlt stos dec mov adc mov addps inc push cmp mov pop aaa sub js add add ja add cmp test rolb test sbbl out rolb lock cmpsl push mov or push add pop add push inc xor xor add je loopne inc cmp and adcl and mov int3 sahf les add and pop movsb inc adc popf dec dec insl iret mov and sub sub cmp xor add or inc and cmp jp adc pop cmpsl or and clc pushf inc mov lds imul or or dec cmp push les mov push addr16 xchg jl (bad) pusha dec dec lret test xchg mov adc sbb add xchg sbb ret adc leave lret sbb rcrb jl es cmp jno ret and mov fcoms inc xchg pushf shrb inc dec clc adc inc jae fldenv cmp or dec sbb cld (bad) or int jb or add sub push sarb orb dec xchg jae cmpsb popf inc ljmp mov and cmp fldenv push inc adc mov ret xchg and sbbl sbb jbe sbb shr orl add pusha or or addb je enter xor xchg push add and mov add and cmovs roll xchg mov and push addl and pop adc fiadd adc clc (bad) popw aaa mov in adc dec xchg daa js dec mov add daa jge or bound push out dec and mov mov mov cli push add mov cmp xor nop sbb lock and add gs mov inc and sbb ss push dec jle jno push inc test (bad) add or jl dec mov cmp call adc xchg sub inc andl movsl lret xor imul cmp ss jb in mov add xchg jno fsubrs add fmuls mull add push and add dec push les pop mov inc cli cwtl std sarb push mov or inc dec xor scas dec aam adc add sbb hlt fs movb inc add or add push cmp adc shlb std inc or xadd aam mov sub adcl sbb add mov adc dec add add orb and add fcomps call js ret pop dec clc or sbb (bad) add (bad) jo dec add popa sub pop cmc mov mov inc add hlt mov fisubr add movsb subb sub push movsb in enter or rclb sbb test bound pop and jle ret xchg jmp data16 xchg es or cld jne negb mov xor ljmp cltd lds sub lret push xchg mov test inc mov mov mov inc call movd shr pop sbb add push adc pop xchg (bad) (bad) jb sub adc dec lcall test inc stos cs jp adc mov pop add push mov movsl sbb fisttpll mov addl adc mov and xor mov stos loope sbb jnp mov loope lret cmp cmpsb daa insb dec enter nop push test in mov popa and jg mov and adcb push add mov add add pop xchg les push and mov add insb xor adcb aam add shlb dec push stos (bad) jo cmpsl fstl pop xchg pusha jge add addr16 jno subb mov dec push js add rcrb dec ret mov mov leave pop or or lahf test dec data16 xchg adc add mov xor inc push rclb and sub xchg add xchg cltd aad daa mov sub add xchg cwtl and sub (bad) adc add repz adc xchg add cmp (bad) mov es push lock adc dec or push or adc mov pop mov xor dec test xchg into cmpsb test push lea sub inc (bad) xor stos pushf cld cmp fwait add in mov lret cli pop ljmp (bad) add jno bound mov push mov jne test inc icebp mov dec sbb add or or addb jo mov inc xor and testb ja xchg add push and aaa test xchg hlt outsl je sub dec mov push call in add and jle xchg cs cmpsl cmc inc sub mov jae mov js inc aam mov test int3 call shrl and mov sbb and sbb in movsb xchg dec or rcrb xor dec jp ror jnp jmp cld dec cltd xadd das pop push (bad) ja push rcr sub ljmp adc mov cmp dec adc cmpsb in pop or or mov xor xchg in arpl push push mov cwtl inc cmp stos add test enter mov add add sub mov test sub xor add test xchg (bad) pop mov stos insb jbe pushf pop leave fcmovb loop aad sub pop cmp mov add arpl inc in add sbb int3 and in stos mov and push jg push xchg je and pop insl inc cmp add pop clc mov push mov add sbbb sbb enter add sbbb pop pusha adc adc or inc and mov add dec add stos jo stos mov rolb sub cltd (bad) pop popa push sbb push push inc push add sahf add inc rclb movsb xor sbb bound adc inc mov mov mov xchg ss les sub xchg fs gs sbb or xchg stos inc lahf movsl sbb mov test (bad) call mov sub int3 push inc pop sub pop push cmp inc (bad) mov mov loopne inc in mov movsb mov aam add or pop mov xor stos lds subl pop or dec adc push and xchg into (bad) call jp dec sub popa orl jbe adc xor jp adc inc fcoml sub mov stos aad imul aam lret push popf mov or and or mov scas sbb jbe cmp and in add push xchg fs adcb cwtl add or or addb jo mov rolb xchg and push inc (bad) adc mov fiaddl xchg (bad) push cmp out and dec pop mov dec fcompl sbb out stos js test ss sahf xchg pusha xchg inc outsl stos andl and mov inc loopne xchg enter sub inc dec xor inc inc (bad) dec mov xchg sbb mov or dec pusha bswap mov aam inc fdivrl js add scas test or and (bad) lds cmp out add dec cmc jne mov leave inc sbb mov xchg sub sbb push fs cmp push inc pop and adc dec cmove sub repnz loop and add scas popa push fstpl clc push test add test rolb add inc add adc mov xchg test xchg jg clc add or ds inc mov (bad) nop jne sub adc sub inc sbb add pusha or adc push shl inc push add mov inc dec and xchg mov mov and loop sub add add (bad) adc fiadd (bad) loop movsl pop push sub out nop add xorb insl add jne xchg ror sub outsb jo (bad) test jo sub mov sbb call enter ss mov inc or ret or repnz mov or lods pop test les add sub icebp sub inc xchg mov data16 cmp sub ljmp dec ucomiss xchg ss push cmpl in xchg and xchg lahf push movsb pusha imul loop movd sbbl mov fs pop xchg xor push (bad) or shrb (bad) mov mov or add pop xchg nop mov dec and mov jl mov and cmp push pop xor stc add bound sbb mov push popf sub sbb xchg dec les add or lret mov xchg add pop lret push pop mov jbe cmp nop ss or push add add jo add and adc shl inc push add out sbb dec mov xor push pusha add aas add xor sbb mov adcb mov inc cmp call je les dec cmc lds xchg rorl popf inc mov inc stos movsl push sub push mov sbb add inc or lds inc pop add push xchg pop xchg nop cltd pop rorl xor push adc je and sahf lds dec mov xchg sub or or sbb mov mov leave cwtl cmp jnp and in sub ret andb or push push pop push jle mov or test (bad) push int3 repnz push fsubrs xchg mov nop std add pusha sub hlt xor out icebp add push xchg jg in sub ror shr movsb lea sub lods gs sub and ds mov sahf lods add sbb dec xor lods lea add rorb adc cmp out pop sbb leave xor or pop sub adc (bad) dec or rcl nop mov imul or push inc and xor add pop add push inc xor xor add je loopne inc add in sbb add xor adc push test dec and add pusha xchg add jp faddl aad pop ja in sub or pop (bad) push sub pop test inc xor sbb sub sahf xchg cwtl mov cmpsl add imul push mov inc pop or xchg cs cmpsb nop mov sbb mov stos push mov add mov mov jecxz stc sbb pusha mov movsl adcl mov jmp adc hlt into sub dec add ret jno sbb jbe pop es inc (bad) xchg xor sub push add add imul adc dec stos jne (bad) xchg adc jp inc xchg stos cmc lea pop mov and xchg popf and bound or mov mov cwtl mov (bad) out mov push and mov das add and or mov cmp inc dec imul roll cmp (bad) fsubrs sbb fistl push pop or jo mov mov dec add add orb and add fcomps call jns mov push mov mov (bad) push pusha (bad) sahf push dec xchg inc inc sub push add and leave add mov push (bad) push popa mov mov xor mov xchg lock aam je bound mov lcall or ds bswap test sub add data16 jge pushf insb dec jnp cmp int push adc call loope sub or pushf pop jo test dec call adc lods std jo orl hlt jno dec sub sbb adc sub pop popa mov lods mov popa inc (bad) xor into jb jb push test mov push adc jno mov push jbe inc test movsl jno lea cli mov sbb aad scas inc jb das pop xchg dec push or loopne and (bad) fidivr pop sub or pusha xchg sub mov pop xor roll mov xchg mov jae lcall in and mov dec xchg (bad) jae in pop repnz and add add orb and add fcomps call test sub dec add push mov mov mov sub inc (bad) in sbb dec stos movsl pop xor shrb pop mov dec pop xchg lock sub push adc xchg fs and cmp push inc fcoms movsl or add or and pop cs lret pop pop jns inc xchg mov sbb xchg add or mov popa adc sti sub push mov sbb mov inc call les and dec sbb and or inc jbe leave mov sbb in ja mov sbb add andb sti xlat addb xchg stos add adc sbb xchg xchg loopne test and push in addl inc and xor jns push mov in and push mov xchg mov pop popa cmpl pop clc sbb add inc xchg sahf jp dec (bad) jp mov mov in or nop out cmpsb adc push jp pop add pop stos js add dec add add orb and add fcomps call test add add xchg iret inc add and xor mov jmp lds dec dec adc xchg and pusha jmp or nop je and shrb outsb push hlt repnz push in add ja sbb (bad) stos adc push inc sbb mov rorb fs cltd cltd nop mov (bad) scas jo scas jno stos push pop repnz add sar xchg (bad) pop mov cmpl jl cmp xchg sub pop cltd xchg dec mov xchg repz popf jge push sbb and or dec sbb unpckhps and addr16 movsl imulb push cmp inc movsb imul xchg js and das int cmpb jae mov rorl add enter push mov sbbb into stos mov inc and push mov push lock icebp faddl pop int3 pop and xor imul fcmovbe notb inc (bad) and pop rcrb aad scas push insl jmp add inc sahf mov out mov or add lods orb adc test (bad) xor nop or sbb sbbl mov in xor or and pop xchg popa sub jp jne dec ja shlb inc add push stos mov or xor or inc pop sarb sbb dec dec or add push fwait adc mov pop dec adc das pusha sbb push pop xchg test inc ficoml sahf add or call inc pop or dec add mov sbbb add add shlb or imul and int3 lar lds fsubrl rorb or xor and xor lods daa mov es ret cmp loop cmpl (bad) push pop loope pop and mov es ja mov sub push sahf mov xor or pop pusha lret push (bad) adc or cmpsl and sbb dec sbb out cmp dec dec sahf pusha ljmp sub dec add cwtl ds push xchg sub add push or pop add sbb rolb cmp jo mov sarb adc add xor add add xlat ds or sub jp dec or mov shlb inc testb sub push (bad) mov dec xchg push add push and test popa add push pop ret add adc or popf notb movsb mov leave or lea ret sbb lods adc cwtl xchg pusha cs push int jmp add and (bad) sahf jb sbb (bad) mov add jno rclb cmc or popa push or or pop or or add sbb and mov cmc sub push pop in sbb mov push sub iret add mov call xlat rol xor cmp adc xor xchg shlb cwtl inc call mov cmp mov add (bad) loope fs es jle subl popa loop addl inc aad pop fwait lods cmp js xchg or cmp sets push and xor mov jmp pop test and lds adc xor stos add cmp addb sbbl dec inc cld les or add push or pop add sbb rorb add mov adc add int3 incb push adc cwtl jp adcl and lcall or mov xor lahf bound push pusha adc daa and mov dec mov lds and or adc xchg nop inc add add (bad) outsb or pop and or pop add or jp dec ss rcrb add lods push inc xor inc push jo cmpsl movsl mov jmp lds cmpsb adc jmp sub addl pop dec inc sub insb push sbb pop mov loopne xor movsl add rolb mov bound xchg and cmp bound push js loop cmpsb sub in pop lcall pop movsb bound addr16 fsubrs cwtl mov lods ljmp lcall enter pop add movb add add ret (bad) xchg cmp xor pusha or mov scas and aaa (bad) xor push lcall add test sbb or daa jne sub add adc xor nop or sbb sbbl and add xor push fmull add jmp adc inc jp les mov cmp xor dec dec pushf and push xor test int3 xchg movsl outsb add mov or cmpsl ret fidivl cmp xchg popa push dec cld push loope xor lret sbb je add lea adc xchg in mov add jbe loop loop adc and mov pusha push xchg pop loopne pop stos (bad) dec ljmp add lcall push pop fwait sbb mov jle lds ret (bad) hlt daa mov data16 js inc mov movsb cmc inc decb nop rorl cmc pop sub pop dec jo test cmpsb cmp inc lcall and xchg add mov mov push bound xchg out test mov add sbb add ja mov push cmp aas add pop pop mov cs mov xchg jg xchg or add movsl test inc adc mov adcb add pop subl sub jbe push insb and adc mov inc fnstenv xchg (bad) dec lods (bad) xchg lods sub (bad) jno lock in and (bad) gs sub dec nop (bad) mov int3 jge icebp xor lcall aaa inc (bad) (bad) jle pusha xlat test or stos mov mov or xchg pop movsl mov xor lret mov push loop or (bad) shrb cmp xchg jl inc push adc or dec andl sahf adc mov dec scas out or or sub mov xchg sbb sub add (bad) inc xor push inc sbb test adc bound inc mov loop xor sub dec xor inc gs sbb (bad) dec ret or jmp mov test cmpsb dec addb push inc (bad) xor insb or xchg fs adc sbbb and pusha add aas cmp ficompl lret add pusha adc test subb orb and add fcomps call js addr16 or adc or add flds xor push or stos add cmp pop dec inc and push or xchg loope jmp sbb mov dec sbb push xorb leave movsb inc add icebp lods fwait fs push pusha xchg loope lea test je mov shl or cmp lock scas je rcrb aas adc call xchg sbb xlat sub or flds lock sbb mov push inc or sub or dec scas ret inc mov xchg inc stos sub dec pop cmc pop mov and movsl pop jae xchg dec cmovb push pushf xlat mov out xor or (bad) cmpsl cmp xchg pop xchg dec loop xchg icebp subl add add dec adc loope mov in fs xchg xchg insb inc gs jl mov jno test xor inc mov jo or sub icebp popl inc add add jo add and adc shl inc push add jmp inc xor inc adc and push add add add cmp add jecxz andb out sub mov xchg lock enter push sbb push pop xor xor mov aas dec cmp add xchg jno adc test outsb or or int3 or cmpsb mov pop cs leave xchg loop lods mov xchg imul mov into add inc loopne psubw add inc xchg add stos pusha bound sub rcrb test mov push inc sbb aaa arpl mov push inc mov xor mov test loope mov aas xchg xor sbb bound add or lods mov orb add (bad) jne in bound add xor dec add pop or fs jle lcall es cltd pusha int3 push adc int jp mov xor add xor loopne mov cmp lods scas dec xchg shlb or push add pop add push inc xor and push daa xor push add and xchg add inc data16 das nop mov dec pop test mov cltd xor or add pop xchg push test and sahf xchg add mov xor out add inc xchg or roll mov test adc sub dec sbbb mov pop and or push rclb cld repnz les arpl aam xchg add dec int3 cmp insb cmpsb push sub test add xchg push insb jle xchg dec rolb sbb jne cli sbb out jb add nop mov inc lcall mov popa inc test (bad) mov mov dec (bad) pop xor fisubl mov inc dec call add xor imul sbb mov jbe inc push xchg test mov es and push sbb dec (bad) adc inc mov cmp fadds out int3 adc fldl adc cmpb sbb cmp xor inc cwtl les movb insl add cmp outsl mov pushf and adc (bad) pop fwait out xor pop lea add (bad) xor mov pusha jo mov loopne popf fs cwtl add xadd xor sbbl cmp adc loope add (bad) inc bound push jb sbbl sub addl pop mov test or mov out adc into push sbb ja inc imul aas sub (bad) jb mov inc jmp (bad) push mov in cmp fnop cltd cmpsb pop sub andl ret mov jmp mov add in push jne add mov (bad) mov and lods ljmp (bad) (bad) sbb lock xchg jb xchg mulb imul inc jbe shlb aad mov lods sarb cmpsb push xchg pop movsb push mov cmp cs loop mov xor fwait and push mov inc ret mov add cmp push sbb sbbl mov and sub addr16 push cmp jge ljmp iret xchg add add orb and add fcomps call js and add and add fwait or pusha and pop inc xor xor jp fwait or pop lods or and or mov hlt loop adc add (bad) roll mov xor add aam add pop push xor cmp add and add out cmc sbb or xchg cs add outsl inc in addr16 fs or clc fwait leave pop xchg cmpl imul xchg andb and fcoms dec adc into push test cmpsb sbb and sub int inc arpl and and mov adc add pop lret and (bad) xor in adc mov call adc xchg xchg test dec movsl call adc gs add xchg and lds adc dec add lea aam push jno bound xchg pop shlb xor ljmp adc and loop sbb (bad) mov push push fldl lret repz add jo add inc sbb mov in cmpsb cld add cmp sbb add push adc or mov ljmp pop sbb rorb add fimul cwtl push push es dec and push pop xorl mov dec or shlb rcll (bad) pop dec cmp sbb or sbb mov in add stos lret loope mov daa repz xchg dec mov xchg jno and sub aas (bad) loopne out mov inc loopne sbb inc pop add mov pop sub lods push addb sbb xor adc sbb pusha shrb mov xchg sbb test cmp add lret mov and push into movsb roll test popf leave insb dec jmp push ds push mov fcoms or cwtl sub int push test aam add sbb fs and push push adc and mov inc mov insb leave and and cmp ss mov lds dec dec cmc imul jb push into rcl int jns test ss xchg add xor add pop add push (bad) inc and or sbb call mov lahf fs mov nop push adc loopne cmp sub add mov add cmovae sbb push mov adc sbb add dec dec mov push (bad) xchg add add mov lea or dec shrb leave mov pop (bad) pop pop nop sbb call push jo (bad) jl pop cltd inc mov mov jl popa push add push xchg cmp add inc test rol movsl movsl lcall sbb sbb je or jg rolb mov (bad) ret sub mov enter sbb jno adc rcll lods jo insl sub pop push cmovbe sub call sub jo dec mov ret rcrl sbb pop inc (bad) mov mov add dec sbb adc jle inc xorl sub test (bad) fnsave dec dec adc mov and xchg lock int add lret repnz dec add add orb and add fstps (bad) mov and lret inc mov jo nop xor ds orb push mov ret push into test js adc sbb sub mov test inc add xor sub cmp add test and outsb jb aam (bad) je cmp push xchg insb mov inc mov imul add or xchg pop push pop dec xchg mov push fmuls adc adc cmp icebp xchg jle sbbl sub pusha fcoms (bad) mov test add loop test xchg lahf cmpsb jo lods cmp call push daa test push pop scas push or addr16 arpl std and movsb mov dec das push mov push mov pop imul imul mov jmp cmp mov xchg push mov jo xor shrb sbb js adc xchg push sbb add mov dec push scas test push xor rolb pop xchg int3 inc dec xorl test aam dec (bad) mov daa pop inc popf ret xor add or nop imul cltd in (bad) dec xchg in mov add adc xor mov pusha jo mov loopne addb test adc add ret ret adc repz push mov loopne xchg test add cld cmp push inc add cmpsb cmp mov les ds fs xchg push adc xor or inc cmp cwtl or push stos push sbb mov add dec rcrb cmp loop xor (bad) rorb clc xor test or movsb xorl movsb icebp mov mov jne cwtl mov adc push clc sub xor add loopne add js dec cli addr16 cltd movsb cs or cmpsb test imul (bad) test xor in push push push push pop rclb sub pop add sub dec xchg lret sti stos aam lret (bad) dec inc into push mov or stos mov add xchg push sbb add mov add xchg enter insb cwtl (bad) aad lods test das jnp add mov and and sbb lock xor add add xor add pop add push inc xor xor add je loopne inc cmp inc adc test add rorb add xchg flds nop and shrb inc iret add jp jmp mov test fcompl sub scas aad sbb daa pop rorl enter and stos mov and and jae add xchg addr16 add jno sub je cmp enter aad aaa mov clc ljmp inc insl dec sub sbb add inc jne adc stos sahf mov cmpl xchg mov imul or push imul inc es mov loopne pop movsb out xor jb and insl pusha push or add push shrl popa (bad) mov pop test lods and push add popa and rorb adc pop sbb sbb cmc mov add pop test pushf push sbb mov xor sub mov push rclb loop sbb movsl and out hlt adc and adc inc sbb ss mov les or divb adc test subb orb and add fcomps call cwtl loope lods cs add sahf (bad) testb and sub adc or lods adc add push fisubl sub nop rorb je test sub push mov push lock test ret dec or jmp mov ret test out test fsubrs popf or or push lds add jne cmp push adc add mov mov nop and ret lods lods in jo lret pop push mov loopne mov (bad) (bad) sbb dec lret enter adc scas xchg mov push mov xor or push movsb test mov push cmpsb inc hlt xor dec sub xorb add lret into and daa add (bad) sub or stos daa push cli xlat mov add and loop mov mov pop add add add sbb movlps or adc push enter or addb jo cltd jl inc and add std cltd sub loope add adc mov adc push adc and stos push inc push scas add push cmp push adc test or xor loopne imul into int3 test fcoml es stos dec mov push lea in (bad) addr16 pop ret push rorb mov gs inc jle out and (bad) loopne sub adc jp rcll fidivl in fdivrs lea xor adc sbb pop mov inc inc and (bad) iret rolb sbb sbb js xchg xor ror sub faddp es push sub add mov xchg add cmp inc sub stos addl and and push xchg or adc test inc lret pushf (bad) adc xchg add ds out (bad) movsb push add dec arpl push mov adc mov pusha push pop mov sbb xor push inc adc cwtl add or add adc push shl inc push add or mov adcb (bad) call xchg inc dec pusha and fisubl sbb pop ss push cmp or rcll stos jae lahf push rcrb or and addb cmp pop loope adc movb dec add mov mov xorb lods pop bound fildll mov adc loopne mov cmp data16 ss les or push inc push sub cs sbb jg jns lret xor icebp aad dec adc push and xor add stos dec aam flds es jne es ss sub fisttpl mov loop pop and or sub shl add imul mov jb and call sub pop movsl (bad) lret pop arpl push push dec or inc sub jb adc sub jecxz insb stos push inc je andl fs push push sub push push movsl push test mov jl add push repnz mov lret rol mov and (bad) repnz dec and daa aam fsts int daa sbb nop mov xor add add sbbb sbb enter and or sbb or xorb sbbb insl mov xor outsb add push xchg pusha xor sbb dec sbb add ds popf jmp dec xchg insb shll dec push movsb and pushf add nop fldcw dec push xchg xor gs jno int3 cmp leave jge call (bad) iret add and lcall mov sbb insl add push jl xor xor xchg push xchg sbb push aam mov fbld (bad) in test nop add mov sahf fidivl jp fs mov les add jbe xor and iret (bad) mov mov sub xorl pop inc jmp pop imul scas pop sub pop jle inc add pop and sub dec jl xchg (bad) lcall test in imul jmp mov fisubl (bad) lock push and add pusha adc mov inc xor xor sbb call adc add adc jmp das es test data16 pop insl cmp xor mov bound and xchg loope movsl mov add xor fistp and pusha or stos cmpsl cwtl inc leave jns adc fsubl ss mov and (bad) adc pop fidivrl test sub aas sub test inc out movsl mov dec imul rcrl jmp add les sahf stos fsts mov xchg jb adc or pushf cmp xchg int in mov cwtl mov or jecxz insl mov push call pop dec cwtl lahf subl popa jno sbb shll mov dec mov lret lret mov hlt dec (bad) jne and aam adc (bad) adc or inc popl dec leave add sbb lret adc pop aad xchg push jnp sub shr or push add fsubl jb iret adc outsb inc jo,pn aaa xchg xor sbb rorl push leave push sub adc (bad) mov clc push repnz dec aad xor test (bad) hlt (bad) xchg pop add mov push add sbbb sbb enter and or sbb call jo es add jae test adc add orb add cmp add sub stc call xchg sub (bad) adc mov push adcb icebp ficomp lcall dec adc in add adc sub outsl or fldenv outsl dec xor nop sbb pop test mov xchg inc lods dec imul test arpl lret adc and clc fwait xchg clc ss arpl or and push or inc outsb lret sahf mov push pop pop and push sbb cli jnp (bad) aas fisubrl aaa fsts mov call jp ret es cmp cmp loopne cltd mov das aad mov scas jmp fs push and jb push addr16 adc xchg jl push sbb pop xor push push xchg sbb (bad) pop xchg xchg dec xor push cli (bad) fwait mov subl xchg mov sub adc add add sbbb sbb enter and or sbb jmp and cmpsl add gs xor and xchg xchg mov adc xor aad sbb xor push jge adc pushf adc lcall aaa pop mov xor xor jp xorb int3 test popl push mov cltd stos xchg mov ljmp adc add mov or push adc imul cwtl xchg xor sub imul sub pop cmc adc pop (bad) add xor bound ret bound sbb mov mov in sahf mov aaa pusha mov loopne push or pop mov mov addl mov mov lds push rcrl add roll or (bad) add aad stos or mov outsl das inc imul dec pusha add aaa pop pop mov xor rorb fldcw fcmovnu nop add aas and and and xor sbbb or addb jne inc or mov xor cltd cld add ret add or add xor add xchg inc mov pusha fs (bad) pushf xchg popa cmpsb lret (bad) neg add movsb sub mov adc hlt gs pop pop dec loope outsb mov pop movsb mov rcrb or ds bound add fisttpl or and scas jno test adc xor cmp jecxz adc mov and mov jp in or sub xchg and aad cmpl in (bad) es subl add out cs leave rclb xor sbb subl lret mov and and push icebp sub mov and call xchg inc sub xor jns pop xchg (bad) repz popf mov les movl pop sub lret fildll and mov (bad) std mov popa int faddp outsl imul cs sbb fcmovnu mov push mov cmp push push mov add insl ljmp inc and add add sub push or pop add sbb rolb push add mov jge,pt int3 sbb or inc pop mov stos add xor addl push mov sub xchg mov shll add adc test cmp mov std mov inc fiaddl xor mov sbb xor xchg or jno (bad) jp (bad) mov clc inc or pop and cwtl add aas add stos jge xor and mov out rclb js push inc and jge (bad) xchg and mov mov dec mov retw mov mov xchg bound sbb (bad) in movsb mov dec mov push dec mov out adc test lods xchg mov sbb leave sbb mov movsl sahf sbb push outsb shrb cltd mov js fwait jg xchg push mov push adc xchg repz cmp ds sar xor xor cwtl (bad) decl jo fidivr mov push addb or mov add fcoms and pusha adc cwtl add or add adc push shl inc push add jmp dec mov xor and mov mov mov inc lods add push lods sub loopne adc pushf adc add sub (bad) js movl add mov les add xchg repnz inc jno subl sbb mov inc cmp lcall adc data16 pextrw insb das inc xor hlt xchg or adc push aas push out cmp mov adc mov xor jb jbe mov mov (bad) sub add inc fs add insb (bad) push mov add scas inc arpl lahf xchg nop and roll xor push fsubrl add (bad) pop fimull sub lahf arpl and xchg and mov push inc and adc fdivs outsb and mov pop repz loopne addb movsb fcompl add add dec and sub pushf (bad) adc adc outsl lock fs xchg xchg add jle repnz add fwait mov ret cmp shll clc dec inc mov adc loopne add pusha or or addb jo mov (bad) cmp add ret lahf rorb in sahf mov inc and dec push mov pusha xor andl push xchg aad sbb dec add xchg push lcall pop dec jno subb icebp adc cmp cmp adc cmp sbb xor or rcrb leave ret and inc dec xor sub xchg add sti fcomps leave orl loopne inc pop mov rol inc cwtl adc movsl je rcrl adc jb inc lret cmpsb out cmp inc dec cmp and cs out adc sbb jecxz mov jno lea movsl push mov jb inc inc mov ja push pop add xor mov adc push dec cmp lret (bad) and imul sti pop js (bad) add xchg ret sbb adc sub inc movsb adc xchg ret (bad) push inc pusha lods enter shrl fcoml add or (bad) (bad) xchg cmp addl (bad) jae push cmp mov aad mov aas sub rolb and dec test and xor add pop add push inc xor xor add je loopne inc cmp addl mov or data16 xchg xchg movsb add xchg pop repnz mov test adc jnp jo pop ss shll sbb imul dec adc clc dec inc and xor xor cmpsl nop cld addr16 data16 ja dec pop and mov loope cmp test bound lock or mov rclb imul and jne gs pusha js (bad) and sub iret sbb mov or pop pusha push xor and adc addr16 cmp dec pop mov mov sahf push sub shrl inc and mov jo cmp mov jne or or punpcklwd leave sbb js push imul or popa aad insl les test push xor cld jno stc test ret ror stc pop add imul mov add scas cmpsl jo xchg stc les dec or xor push loop pop and test jb orb adc test subb orb and add fcomps call js pusha aam add inc stos mov orb rorb inc nop mov add lods fs xchg nop and loopne aam add adcb fmuls out icebp xchg add dec jp test jno xchg jmp orl add mov xchg adc (bad) xor xchg add dec scas insl push sarl jne xor loope jle adc dec push cltd sbb xchg mov addr16 mov cli inc jbe xchg rol (bad) jno xor mov loopne and fistl mov lea iret es pusha movsl and adc xor sbb inc or cmpsl in mov popf push adc test or data16 mov sub les in add cmp push rolb (bad) or pusha add push mov cmpsb lods out push cs add sbb rorl push scas xor orl dec mov stc push add insb icebp es cld add and push and add nop or jo mov loop sbb add inc adc data16 xchg add and mov icebp dec and add xchg or (bad) rcll push subl popf insb mov jno sbb incb jb sahf xor pop mov data16 cs xchg gs xchg aas and sbb mov cwtl cli mov adc ss jmp rolb outsl lods fdivl add test stos inc mov bound (bad) enter cmpsb lret adc jl inc (bad) cmp and sub mov call push jb repnz add outsb add pop test pop mov les mov push xorl (bad) lods cmp nop jp push pop mov mov dec jnp sarb sub push sub (bad) sub mov sarl pop pop shll add or add pop xchg js jb add bound add add sbbb sbb sbb cmp jo mov or or add inc or and adc adcb or dec gs adc bound sub loopne popa sub pop sbb ljmp fiaddl rcrb mov adc cld cs loopne sbb inc cmp mov (bad) negl sbb into inc add push test sbb mov loope pushf sbb inc push rclb mov lods (bad) sbb pop and jnp dec pop mov inc (bad) imul adc mov pusha and sub adc daa mov cmp test lods aas xchg jle loopne pusha pop xor push ret mov adc in (bad) lods fs test jae les push mov sbb cmpsl mov jno cmpsb in pop or or dec pop data16 or jp dec push aad sub fwait les push jp mov nop pop fld add xor repnz push lret lcall xchg xchg movsb fcoml test push popa jg notb orb sub loop mov cmp cmpsl or add cs jae test and and push push dec inc (bad) addps dec rcrb or pushf stos lods imul in (bad) jnp xor fiaddl push jns mov add and mov jo push and repnz mov push dec cs mov inc or jno aam or lea inc adc push lret sub dec sbb mov into push add sub add mov xchg adc cmp xchg in daa xchg cmp and inc mov shrb loope or adc and mov xchg add and (bad) (bad) jbe mov dec dec jb mov call jno stos push jb out pop test push cmp loopne stos leave pop xor adc xchg or add and mov and add clc out aaa add orl ret sbb sub pushf les inc scas arpl cmp cld mov imul int3 enter dec dec movsb and add add nop or sbb cs hlt pushf and inc (bad) loope imul pusha popf inc ficoml aas mov adc cmp (bad) mov push xor icebp mov xor xchg lret outsb cmp mov lods or jae xor mov cltd add jb jbe jb test cmp xor scas jno rolb xor mov add add add cmp dec push loop loop push push mov pop push push fsubl add sbb pop ljmp cwtl in sub and out cmp jb,pn dec add js mov popf cmp (bad) int3 pop lret rcr repz into outsb je loop (bad) jo addl push addl xchg and rdmsr movsl or cmp cmp push push jle push jae add mov aas xchg adc nop xchg or (bad) xor jmp xor add pop lods dec add mov inc stos and add sub nop or jo repnz mov dec jae es loopne cmp (bad) inc stos pusha add xchg or mov xor pusha sub push cmp dec out push dec rolb test jp fiaddl movsl xchg mov or ja,pn mov (bad) ds xor pop inc mov adc fiaddl or icebp mov sub cwtl push lock mov (bad) jb push faddl cmp inc xor pextrw les jb lret sbbl sbb mov and mov xchg pushf sbb lahf push movsb mov dec add adc xchg adc ret cld push cs or push xchg mov and sbb push and xlat pop loopne fisubrl (bad) dec adc xchg jecxz and adc xor addl mov jb insl pop mov dec mov lods xchg mov cmp fcompl xor dec iret (bad) xchg outsl call rcr sub out push dec xlat aas sub jno pushf add int cmp push xor push or push loop rolb inc xchg or inc add sbb mulb push shrl cmp dec repnz xchg rorb dec and push stos mov sub pusha jbe,pn mov xchg add mov cli out xchg xchg in pusha xchg rclb into jo sub jecxz gs mov sahf push (bad) adc add inc test mov nop pop cltd aam and inc mov stc add xor inc js mov dec mov sahf xor loop add mov mov in (bad) leave and pop adc data16 mov nop rorl ret push sbb or call mov sub outsb stos sbb loop testl inc mov inc mov inc and or dec orl sbb in enter sarb aas into in rolb xchg xor inc popf or jb sbb sub aam int3 (bad) jnp sbb (bad) aaa fstl (bad) xchg jmp test sbb pop mov (bad) lods mov ljmp mov inc adc test subb orb and add fcomps call jns inc aad and inc jp push push xchg adc dec add hlt push or inc add or adc sub xor stos inc dec mov jnp leave dec mov or (bad) adc test popf adc aam sbb int xor cs ret sbb movsb sub (bad) loope mov inc adc andl add push xorl mov dec sbb repz cld inc inc push sub push pop add xchg pop or dec jb xchg or cmp adc les jmp dec dec sti jb sahf sub pop mov push pop popa dec js (bad) out es loopne push sub into fcomps (bad) in pop mov in push inc and rorb and cmp es ja hlt or push ja jns mov adc cmp add sub ds pop icebp add movsb mov push rcrl jp movsb fs dec mov fdivrs inc cmpsb add stos cwtl push bound xchg (bad) jne jo mov cmp pop mov xor sbb mov pusha jmp sbb loopne (bad) inc ja loop enter add pusha or or addb jo test push mov add cmovs add dec test pusha and push push cwtl dec add movsb je xchg movsl cmp mov ja mov xor imul mov je push sbb test push cli fst test fs cmpl cmpsb sub push inc loopne rolb dec addr16 dec mov pusha pop mov int dec xor cmpsb jg in adcl add or sub dec push push push xor in xchg popa stc mov pop mov xor (bad) xchg inc add xor in add out ja test rcrl mov push loopne shrl mov insl dec in mov cmove mov out pusha pop adc popa stos int3 dec ret sub mov inc shlb cmp push es lret dec sub (bad) xor or or nop or repnz or orl imul mov aaa push test outsb movsb or xor xlat movsl push scas inc inc cmpsb mov rolb xchg dec rorl call jp inc cmp push cltd mov sub inc loop dec add add jo add and adc shl inc push add fmuls or inc and mov sub mov mov sub mov inc cmp add and lcall add inc push pop movsb aam sbb xorw das adc test sbb sub adcl inc imul adc push sbb cmpsb imul pop mov jle and sub test cmpsl push cmp (bad) mov (bad) repz sahf push in add out cmpsb jne xor cmpsl push es inc cmp mov movsb dec popf xor loopne dec adc sub in add inc in scas movsl (bad) ljmp mov (bad) or movsl sub stos pop jl gs sub mov and lcall mov scas sub repnz lock xchg daa push mov add add sub push mov std in and push jl nop rolb cli adc ret push sbb push sub push pop xor cmpsb lret fwait test lret es testl jae mov shrb jns loope jae add adc jmp call arpl mov add adc cwtl add or push fcomps call js ret and or add or inc fwait sub pusha adc cltd adc add xor add sub push and out imul push shlb jg call pop (bad) sbb mov shlb dec add lods subb das cltd int bound cltd sub push ficoml cmp push jne (bad) pop rcrb ret xor xor movmskps jb mov dec xor add sbb dec jbe test push sbb lods and imul push push mov fldt lret and and hlt pop stos jae cmp addr16 stos sbb or push and jo inc sti mov es inc (bad) aad jnp movsb rol or aaa popf inc test outsl inc or adcl or mov insl loope xchg inc shl lock cltd sbb movsl xor js push fwait mov add and cmpsb shlb or push add pop add push inc xor xor add sbb ljmp add sub inc stos mov adc mov inc arpl out push add xchg lods adc rolb adcb fdivrs ds or jmpw xor stos cmpsl jle cmp inc mov pusha sub sbb sub cwtl fsubl in test jmp mov nop rolb jecxz pop (bad) aad ljmp sub and push (bad) mov je je inc lret adc (bad) add pop lahf or jecxz pop and push (bad) sub xchg or (bad) cmp fcmovbe or nop sub repnz sbb xor mov fcoml adc mov xchg fbstp mov and sbb (bad) jbe jnp fcompl bound pop and push sbb mov xor or insl in and jae js lock dec xchg mov into mov pusha pusha push inc ljmp orl add nop or jo mov loope addb and pop adc cwtl add ret sbb cmp in cwtl or dec rcrb jno mov bound fcomps cmp jmp sbb enter xchg inc out sbb into push orb (bad) cmp negl repnz arpl add and jno aam and xchg movsl and insl or mov lock or adc in add jecxz push rcrl add stos inc (bad) sahf inc and xor push jae cmpsb pop mov add ret mov sbbl cmp lds jmp sbb xchg cs or sub xor (bad) loopne in insb cmp xor pop xchg cmp mov lods inc enter cmp and xor push cmp fs cmp (bad) daa sbb push push jecxz rorb rolb es mov or leave fstps pop adc lock pop js push orb adc mov add and or pop add (bad) push lock int3 sahf lds daa inc adcb jae nop mov sub sub stos add clc push dec sub sbb out xor (bad) aad xor sti or nop jmp movsb mov push out daa test and sbb movsb stos adc hlt aaa mov aaa movsb lods jbe sti popl cld fisubl inc xchg add lods cld jno lret adc lods mov (bad) (bad) push add inc loopne xor inc (bad) or aam dec ss xchg je sub mov cmp pop lea mov shrl pop or (bad) inc pop loope stos fdivs and sbb push das xor xchg add shrb jo add push test add or inc inc cmp xor call jp mov push int mov xor fsubs pop addr16 sub push enter rolb sbb inc incb js rcpps orl and mov or mov pop sub xor add pop add push inc xor xor add je loopne inc cmp repnz addb movb adc dec add fnstenv stc or add cmp rcrl test andl adc pop adc jge cmp mov cli and xchg or push out and daa and add xchg push pop (bad) hlt test dec pop or fwait or test nop rcl push fsubrs dec loope dec decb xor mov or nop inc icebp lds cwtl mov xchg sub movsb sub enter xor xor mov jo xor cmp ljmp add dec repz stos lds (bad) sbb xchg add mov aaa push add cmpsb sub cmp in in test das xor test add inc rorb popf sub je and dec repnz test and mov daa mov lcall call jo xchg movsb ret push and jbe rolb mov sbb mov push adc orb sbb rcrl adc clc or in add mov test lcall push imul adc inc or pusha sub adc ss pusha mov dec loop adc stos je sub pop xchg add or sbb adc push adc or enter push stos movsl push and sbb cmpsb cmp lods jno dec add push pop push ret mov mov aas pop aam adc add insb mov (bad) and inc loop movsb push and and addr16 movsb add inc lcall mov mov mov or sub mov pop mov add (bad) mov cmp mov and (bad) lret add push xchg dec cmp ret ficoml adc add fwait add push cmp add rclb fidivr add sub add xor xor push dec test (bad) sbb fistl aad or push or aam lods lds add add pop mov dec add add addb cmp and mov sub (bad) mov xor xor mov xor or xchg sti sub or ret rorl sbb xchg lods adc jmp (bad) mov shlb inc and push jl add rorb mov les dec xchg add imul xor bound inc mov inc ret sub add cmp mov push inc call xor mov mov outsb xadd add add mov xchg sbb or movsl pop mov push sub cmp xlat sub mov inc xorb mov outsl sbb fcoml or sbb mov fs mov adc cmp ficomp add mov movsl or push or imul dec mov add and (bad) fistpl push sarb stc (bad) pop out and dec outsl and leave les and xchg test or pop lds add sub je cwtl push fadds icebp arpl adc adc mov call lock push dec or icebp dec inc fiadd (bad) add pusha adc mov mov jecxz add (bad) or add lahf lds dec andl add sub dec or lahf in dec int3 js lcall xchg int3 jp push pop cmp in and push loop adc push pop cmp and sbb or fadd cmpsl inc jae or sbb dec jecxz push nop sbb dec jo push fs adc (bad) mov popa jo jle inc jnp cld jle dec fs cld lcall or nop loop xchg push and testl inc (bad) outsb push pop xchg add mov jecxz xchg or js push pop adc sahf addr16 sbb test lea lret add mov sarb test and inc push and fimull sub xor jo xor cmpsb dec adc cmc xchg push mov in sub dec sub inc pushf and sub add mov rol aad addr16 pop lock pushf push jno and pop test pop enter mov outsl add repz or jb dec push mov int3 out enter and inc add cmp xor lret sub shrl xchg mov adc cwtl cmpsb shlb jae mov loopne or insl xchg add xor mov clc or dec xor or and add xchg shll and cmc add and add xchg lret out les addl xchg in add add adc jno in inc lahf dec mov arpl test (bad) lock imul mov or rolb inc fcomps jae in in pop inc aas add test rorl test adc cmp sub push xchg sub and xor and adc cmp fildl data16 dec rolb xchg in out or mov lret adc cmc xor orl lret push sbb call nop add add or stos adc cmpb push jo nop sbb cmp bswap push nop and push and dec es inc call xchg cmp push cmp pop rolb pusha movupd leave push xor mov bound add inc (bad) dec jg push stos push add adc adc pop push outsl xchg leave fldl gs into out add or add mov pusha jo mov jae and dec and push or (bad) jns icebp mov inc add sti movsb jmp icebp lods leave fsubr adc in jo cmp into fwait and cmpsb inc or data16 ret inc aaa int out mov push push mov ret jecxz nop stos pop push jo aam call loope dec mov icebp mov mov dec xor and ret jl jne pop fadd orl into addl dec mov xor (bad) mov mov dec dec or test and sub ffreep inc mov fucom and sahf cmp or pop push mov movsl and sub mov (bad) fbld and pop add mov sbb pop push pop and mov cmp or arpl mov dec mov test mov sub adc ljmp int3 pop xchg mov adc dec rcrb push inc jne jns sub stos pop ret add sub pop adc xchg jp inc addl sarb pop cmpsb xor loopne add adc jo in dec inc sub aam adc cs loop xchg gs and pop mov adc and adcb push add mov pusha jo mov lock and or pusha and or adc dec push mov pop mov push xchg test mov xchg inc cmpb and mov imul roll std orb or hlt repnz shlb dec push (bad) outsb sbb push xchg push mov mov pop pop daa or mov xchg mov sub xchg (bad) or cmpsl iret push or fnsave mov jle or xchg adc adc sbb popa sahf das mov push xchg mov in and dec cmp jle out scas mov mov mov and push cmp sub xchg push out fcomp jmp xchg xchg test test repnz xchg loop test and ja add cmp and icebp outsb cmp xor xchg or and out test lods xor inc das pusha aas sbbl aaa jl les xchg mov add test push in outsl jp orb lea add add cmp jno pop addb jo and ds add rolb pop mov inc roll add test push movb add xchg sbb fadds rcrb cld outsl and mov jo inc jnp sub and pop add lock lods mov sti adc inc push adc and mov lcall and add inc and into and add sub dec ljmp lret cmp clc add inc pop or outsb cmpsl dec fsub adc add loopne dec or push or xchg out sbbl jae cli xchg xor and ljmp jne imul call stc inc movsl mov inc push inc mov das insb adc testb inc std out push push mov pushf add repnz adc (bad) (bad) mov int3 or pop fdivrs inc cld out icebp dec test sbb (bad) adc adc movsb and jne mov mov xchg stc or jns pusha add mov inc adc xor nop or sbb sbbl inc and and imul rorl inc pop and sbb sarl mov sbb xchg fucomi mov adc sbb push mov nop stos testl test pushf xchg rorb adc or pop mov adc xor sub sub inc test xchg adc mov jne loop lea cmp and jb add sbb fiaddl rcll test sbb cmp or push fwait nop popa pop imul int3 lods push (bad) mov mov lret mov jae sub push test push ljmp stos je push gs sbb test or add mov mov je fidivr cmp mov int3 ljmp int push js fcompl xor ljmp push sbbl ds and jb int pop sbb lock and dec add xchg nop lock pushl push mov and xor add sbb enter and or sbb call lock cmp and add add mov adc or jo sub add and xchg ret cmp xchg ljmp push mov adc (bad) inc js sub xchg test fs xor outsl pusha aas push nop popf enter movsl add and (bad) or pop jge xchg dec dec mov int3 sahf xorb xor sbb sahf popa pop or xor mov adc mov mov mov xchg mov hlt out loopne sbb xchg test push push or movsb icebp sbb push cmp sahf push cltd loop dec sbb dec add jne add xchg adc or jbe call das or sub mov bound push into or stos push inc or test mov push data16 dec stos inc cltd stos xchg (bad) call sub mov inc xor std pop lret add pop shll cs lret dec adc clc push mov mov pop cmpsl xchg rcl dec rol cmpl inc loop and push sub sbb add dec in or cvtps2pi aad sbbb push xor add pop cltd mov sar or ret es frstor add adcb push add mov pusha jo mov lock adc fs and adc and and mov xorb or xchg inc fmuls push xor mov dec cmpsw mov outsb ja jmp sbb mov push mov dec push mov movb jecxz imul jae cmp dec pop dec sbbb mov enter sub mov test sbb add nop shll es xchg insl addl movsb nop repnz inc inc xor ljmp cmp jo cwtl push mov or lret insl sti add push scas lds or add sub gs inc sub add adc xchg jne icebp cmp dec mov les mov jno mov cs adc sub sbb loopne cwtl movsl pop scas or or push xorb leave mov int sbb in pop int3 push popa add pop lock adc adc enter es ret outsl cs lret cli hlt dec in add cmp icebp mov push adc lcall movl add ret nop add sub push or pop add sbb rorb add mov adc add add int3 jmp and enter inc adc push mov sub mov bound and mov mov fwait add xchg and push add mov xchg jp loope add int push xor and mov sbb mov mov int3 mov xchg imul pop add sarl mov push call nop and push add add pusha insb stos jl mov inc jp cmp push loopne adc xor inc push les add test imul mov lock lods sarb popa push xchg pop andl aas mov daa inc cmp das adc and cs pop mov inc xor mov or mov or push sbb test adc sub es jne add pop scas adc jb or inc lret xchg adcb cwtl add or or addb jo mov mov jae push pop push loopne or pop movl add and or add dec test or orb add xchg add sub or add mov rcrb jno shlb sbb push cmpb inc inc cmp jge inc cli push inc rolb mov (bad) pushf add adc push jbe nop sbb js dec (bad) int3 add sarl test jge dec add dec rcr cltd jo stos xchg pop les pop flds add aad pushf mov inc pop mov xchg pop cwtl loope add inc and xchg mov mov call and sbb jb andb es loop cmp push cmp rorb ret pop sub pop xor cld (bad) in dec inc cli inc cmp inc mov add dec shrl sub pop sub inc test fnstcw int add inc pusha cmc xchg je loopne adc aam inc sti add pushf sub push push mov stos and push icebp std orb nop mov cmp insl add push or add sub push or pusha add sbb sbb sar add mov jb or add cmp push adc adcl stos inc pusha or pop cs adc jp les pop je movsl nop out inc repnz push or push aad mov xchg mov xchg and push adc jne or sub adc xchg add dec sbb sbb push mov jno add pop sbb insl push push mov mov enter adcb inc cmp push sub sahf daa push push sub dec loopne mov jecxz (bad) dec add push mov push sbb sbb aaa rcrb test or push inc in add shll push jb movsb jne mov loopne push jp push ret cmp fisttpll js xchg loope xor test mov mov pop mov or fisubr add sbb add xor pop sbb (bad) icebp xchg and pop pop popa adc jbe jne loope sub jo inc or or subb mov ds push or add loopne popf loopne xorb cmpsl fidivr icebp aad or cmp add sbb insb movsb sub xchg ret (bad) xchg jecxz and popa add movsl cmpsb mov jp jbe cs and int3 inc rcrl cmp pop add adc insl and pusha add and adc shl and (bad) cwtl add enter push adc adc push add mov loopne inc push loopne or enter add es je adc nop mov cmp (bad) jmp subb xchg sbb and mov loope or daa test (bad) jle inc imul cwtl addr16 dec and xchg mov andl and adc inc pop lea repnz movsb xorl aad mov mov push stos aaa adc or loopne mov (bad) out lcall sub and ret imul popw lods lds pop add sahf xchg sbb inc dec xor pop aad or or xchg adc mov lea out dec fnsave and (bad) cli inc xor push cmpsb mov mov rcll add sub inc adc pop add dec xchg rcll lods loop add test push or jp (bad) mov mov loopne cmpsb aam push pop cmp push je test add js (bad) insb dec jb push test or or ja inc inc cs cmp dec andb xor and dec enter mov sub call pop in adc outsl movsl mov ret or sahf dec mov push rcrb je (bad) xor xchg (bad) int3 (bad) int je dec rcl loope inc xchg in dec mov ss adc bnd or gs inc ja or stos shrb dec mov dec pop lret popl dec push dec addl jb jmp mov dec cmp add (bad) or mov insl in js push or lcall (bad) push adc out movb push cmp (bad) fucompp in sbb inc push pop ja mov aam mov leave and loope aad or inc ficoml (bad) and insb push dec test aaa xchg lea ret and mov or add out and inc stos pop xor fnstenv cwtl enter icebp jb je scas or add xor cmp dec mov bound in orb hlt fidivrl ret jp data16 mov pop inc int3 push ss push lcall sub jnp cwtl dec sub adc mov test mov adc movsb adc xor lock ret in xorl test or bound jb or cltd dec jl cmp xchg pushf les xor jbe ret xchg repz sahf mov and push repz andb mov dec pop mov mov loop inc mov push mov mov test pop mov aaa fwait daa pop cmp es add in push lahf sub popa mov inc and enter mov stos adc int and orl dec cmpsb dec jae loope sarb sub push add nop int3 jb mov sbb pop add and aad mov inc and xor cmpb and inc xor xchg add shrb js test cs movb movsl sub sub mov and imul jl mov mov movsl out ja rcrl sbb pushf xchg call arpl lds add or sbb push mov in and lret ja cmp ret (bad) (bad) repnz and xchg in in shlb jmp out nop ss imul pop in mov sbb insb xchg repz pop dec test sub and repz sbb insb or mov pushf adc jnp aad (bad) aam mov inc mov nop lcall out push cmp in or mov xchg dec test mov int lods fiadd lods clc popa mov addl jge imul xor pop fsts movl push repz (bad) sub loop add push aad mov or adc cmpsb shlb or push add sbb addb inc mov int3 mov dec mov inc add xchg movsl xor loope sbb popf xor sub hlt sub push int lcall add or and pop sbb sti arpl ret mov sub cwtl or push test or iret xchg or mov movsb sub arpl sarl add or lret pop mov jne or mov (bad) or test dec in xchg sub push mov cmp test rclb lret xchg adc enter mov push inc inc int3 dec mov adc ss stc aad cs mov inc mov xor (bad) jbe mov xchg add mov pop test es clc push lret mov cltd or xchg or pusha scas test pop popl insb cmp (bad) clc ja pop cmp gs fwait gs mov jmp icebp addr16 and and scas push pop sub add push (bad) mov or inc test lock ret adc push and dec add xor cmpsb and adc xor xor push pop ffree and popf stos repnz sub fisub and test add lods sbb stos mov xor cmp xor sub and lods mov sbb stos mov cmp and and lcall and and sbb cmp aaa sbb cwtl lcall loope inc mov test inc leave test das cvtpi2ps sub or int3 in sub or jmp pop or lods lret push es in test dec cltd in lds mov test fs xchg push pop aam push bound inc bound mov dec or dec pop inc sarl (bad) mov mov push push or int3 in insb insl push sub into (bad) sub push adc xchg loopne rorl and adc xlat pop data16 jbe icebp and ja inc adc inc push rcll pop push rorl or pop push cltd popa mov lods pushf mov xchg call jo in loopne mov sbb les mov jmp (bad) or or mov into push xchg xchg adc fcoml cltd xchg sbb loop inc xchg xchg xchg mov inc (bad) mov jp xor jae rclb dec (bad) dec sbb adc push aad pop cltd sub sub dec stos int mov sub dec ljmp lcall mov adc in das jae xchg adc into and sbb fs inc dec dec and jns dec dec fldl lds push mov int mov push dec mov imul call sub call mov or mov repnz and and aad cltd (bad) fisttpll add rorb lods mov out leave jne ja and pop adc jbe inc daa adc push xchg movsl inc test inc gs test aaa cmpsb mov inc dec ljmp xchg xchg mov fnop mov jno lods or adc or (bad) popa mov loop pop adc int push (bad) (bad) insb leave mov cld mov push js push aas (bad) (bad) cld inc push push jae pop inc push in xchg es inc roll test push aaa xchg daa jbe rcll xchg je xchg rcll les xchg movsl xor xchg inc jae jbe jb and and and adc xchg mov xchg or ret (bad) arpl rorl and stos mov dec loop scas ficoml repnz (bad) in sub jo sbb or pop xchg repz ss sbb ljmp dec scas and lods lods lea xor and and cld dec test inc push xchg xor les jle push xchg add (bad) push sub jno movsl inc out mov (bad) (bad) (bad) (bad) clc mov jg out xor push inc or call or loop xor dec mov cld dec lea (bad) cli inc mov lcall test jmp push jae xor pop jmp inc inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld dec sub jge or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std rorb xor ret adc ret lcall pop stos or or fs xor adc xchg test ja push adc mov sub cmp lods cmp mov sbb mov mov (bad) call icebp cmp fstp sbb and mov adc sbb and pop jae jae push (bad) mov adc ret nop lcall sub sbb daa lods cmpsl sbb and cmpsb xor mov lods or or lcall push mov push sbb sbb rol enter fistpl mov cwtl (bad) out into inc adc dec enter in dec pop mov dec sub scas inc ja gs push xor aaa push adc sbb dec (bad) xchg push dec aam rcrl adc aaa jne mov cmp inc xor inc dec cmp imul mov dec inc dec addr16 push push xor push inc inc stc sbb data16 inc jne aaa popa xor jnp mov xchg sbb loop imul or mov or cmp mov jecxz xchg in cmc add not and adc daa sbb mov inc inc inc cmpsl jae sbb adc inc gs push imul pushf fcomps mov mov lock push sahf push and xor xor movsl mov xchg test or or adc xchg adc cmp sbb xchg nop (bad) call xchg push jg lods xor xor shrl rorb jbe mov pop movsb mov mov enter insb xchg les dec or inc and popf and and cltd test cmp ret or sbb adc mov das push xor push rcrb bound add inc adc xchg adc je add mov movsl pop xchg je xor xor data16 aaa mov pusha mov popa cmp sub inc aaa arpl xor jo adc or or (bad) mov inc push push fiaddl add inc jae adc push add popa add mov test cltd popf jmp mov sbb int cmp jno mov xor xor cmp xor cltd xor lret adc daa push jl push pop (bad) xchg jb xchg xor xchg jbe adc adc aaa test and daa cmpsl xor jbe je xchg je hlt movsl fs addl into insb in xchg repz stos sbb lods mov (bad) dec loop push xchg int3 in inc adc pop and gs xchg jmp loop xchg add adc xchg aam and xchg and mov dec test ja imul push push cmpsl test pop data16 xchg fs mov xchg adc sbb lods fstps cwtl xchg push xchg cmp mov mov cmp mov xchg stos cmp inc push das inc push jp inc and mov xchg xchg mov jmp push daa and cwtl mov pop lea push pop inc cmpsb mul pop mov les fs aam and add inc daa adc rclb or push xchg int xchg sbb push push rcll xchg or inc xchg adc leave popa int or movsb lods loope push rcrl adc cmp int adc xor aad in cltd sbb cltd test adc inc inc mov (bad) xchg fmuls into mov pop hlt cmpsb mov data16 xchg insb xchg mov nop stos mov bound pop jb mov sahf out lock mov (bad) mov mov jb scas jo mov (bad) jbe orl in fstps pop add mov stos xchg addl aaa cltd mov add and mov xchg adc notb dec lret dec and ret sbb push and sbb or inc movsb and sub arpl je push je out movsl pop cmpsl jne mul sub enter (bad) mov outsl push inc inc inc dec push insl adc and inc push lods test xchg mov call lcall das inc and or cwtl push push les cmp sub mov daa push sbb into push adcl popf or mov and adc and mov dec xchg dec fisttpll mov lods adc mov (bad) mov inc sub pop mov adc lea push xchg je pop cltd leave (bad) xor and xchg test xchg add cmp cltd lcall sbb push mov aas les mov pop mov adc rcrb rcl pop rcrb popf int3 push rorl adc ja outsl bound adc push sbb sbb jb xor pushf in inc outsb inc adc and push rclb lret dec roll push sbb bound xor gs inc xor loop inc cli and mov test mov out ss mov inc mov test insb xor imul enter test mov xorl int3 (bad) inc outsl dec and mov xchg and push pop rclb nop pop xchg adc push or and test je ret adc movsl cmp inc push xchg movsb int3 shlb call data16 out enter into insb movsb bound pop pop out mov lock jb mov into outsb xchg pusha lcall (bad) (bad) lcall out pop int3 pop pop insb out fcomp (bad) mov bound pop pop pusha ret int3 rolb shrb mov into insb movsb bound pop pop out xchg pop jb pop jb mov nop push test mov mov pop pop fisubr movb mov movsb lret (bad) mov out mov repnz xchg xchg (bad) lcall (bad) xchg call xchg enter pop lock pusha xchg (bad) stos (bad) out outsb aam fs mov (bad) mov hlt pop shlb xchg insb pushf mov pop pop push cwtl test movsb (bad) shlb (bad) (bad) repnz xchg mov lods (bad) fisub pop pop pop pop mov xchg (bad) into test (bad) enter stos lcall mov out into mov out shlb xchg rol test pop lock mov shlb mov movb mov bound fs mov xchg mov mov bound lods mov out push out (bad) stos push lcall pushw xchg out shrb scas bound pusha mov mov (bad) (bad) mov (bad) (bad) (bad) jb (bad) xchg (bad) (bad) push nop faddl bound into movsb mov jo mov insb pushf ficom (bad) (bad) (bad) (bad) aam mov stos xchg bound mov test into mov fisub repnz into mov stos stos (bad) stos sahf shr push pop pop pop rcrb lods mov stos mov ret lock mov in outsb pop pop push mov mov mov mov xchg int3 insb pop pop push cwtl pushf test repnz scas ficom (bad) fcmovu (bad) pop jb ficomp mov mov test jb pop (bad) fcmovu (bad) pop jb cwtl movsb int3 rcrb test mov (bad) nop in aam (bad) mov in xchg out into mov out lret test (bad) (bad) stos bound aam scas stos push int3 pop pop stos mov mov pusha xchg (bad) aam scas stos push int3 pop pop stos mov xchg test mov xchg pop jb pop lock (bad) jo mov shrb (bad) repnz sahf fsubrs (bad) (bad) (bad) hlt stos out jo mov (bad) fcmovu (bad) pop jb loop in pop scas ret pop (bad) fsubrp enter mov push mov mov fs mov mov lret mov test repnz (bad) push (bad) xchg fs mov mov push pop pop bound outsb pop pop jb pop jb fs test pop pop jo mov nop (bad) (bad) (bad) (bad) pop data16 lcall scas (bad) pop int3 pop pop (bad) jo fisubr push hlt pop (bad) out cmpsb pushf rol test pop pop jb loop lock (bad) mov (bad) stos xchg fs mov test (bad) rorb test test movsb (bad) mov cwtl push (bad) (bad) xchg insb (bad) out (bad) mov xchg out cmpsb (bad) test jb loop mov pusha xchg insb mov mov mov movb lcall nop mov shlb mov insb mov (bad) (bad) xchg hlt data16 jo mov mov enter pop jb pop jb mov nop movsb cmpsb ret test into xchg pop jb pop jb mov nop movsb (bad) aam scas (bad) push pop pop pop ret lock mov mov pop push mov mov mov movsb (bad) (bad) lock test mov aam test bound insb (bad) (bad) (bad) ret pop (bad) fcmovu (bad) pop jb cwtl mov (bad) test xchg fs mov mov int3 aam mov mov (bad) push mov pop outsb pop pop pop jb push mov mov bound repnz xchg lcall mov (bad) mov mov test fmul pushf enter call mov jo data16 xchg stos bound jo xchg stos out scas mov stos mov test movsb xchg cwtl movsb into mov mov into push rolb out sahf cwtl movsb int3 test fcoms jo (bad) mov jb pop pop fisubr fiadd pop (bad) mov pop pop faddp pushf fiadd enter movsb lret fdivl pop faddp call shl mov mov lods fisub push out mov sahf jb (bad) (bad) xchg bound sahf aam push data16 xchg lcall cwtl mov (bad) xchg hlt pop push repnz movsb rcl cwtl (bad) xchg fs into mov nop pop pushf cwtl shrb pop pop push cwtl movsb into mov mov shlb mov in push mov aam push data16 insb mov (bad) push (bad) lock xchg mov sahf xchg xchg call xchg test repnz movsb rcl fisub lcall mov ficom pop jb in push fs into mov shlb out (bad) (bad) rorb (bad) pop int3 pop pop insb lcall test hlt pop aam mov insb mov rolb int3 movsb int3 mov cmpsb xchg mov test repnz xchg mov xchg mov mov pushf mov stos cmpsb pushf mov aam repnz call nop (bad) (bad) (bad) (bad) (bad) sahf into rolb xchg in cwtl insb nop hlt fiaddl nop mov pop push cwtl movsb into cmpsb mov sahf ror mov mov mov (bad) (bad) insb mov (bad) mov cmpsb mov bound rclb enter movsb fs mov (bad) mov call mov mov enter pusha push mov pop (bad) xchg mov mov jo xchg lods push (bad) mov pop pop pop shlb pusha mov cmpsb xchg mov test repnz xchg mov les pop xchg les pop xchg ret mov lcall hlt mov scas shlb lcall pusha xchg (bad) jo cwtl pusha mov push xchg xchg (bad) (bad) mov (bad) (bad) (bad) mov push mov mov mov lods fisub fimull fdivs xchg mov jb (bad) mov movsb mov insb mov sahf mov (bad) repnz in sahf fcomps cmpsb lods lock (bad) xchg xchg (bad) (bad) (bad) (bad) into push (bad) mov into repnz lcall enter (bad) mov xchg data16 nop (bad) (bad) (bad) (bad) mov into lret xchg (bad) test push xchg jb xchg test into nop rcl mov rorb mov out lret rorb mov into jo mov pop (bad) xchg (bad) out hlt loopne jo fadd mov pushf cmpsb mov fimul movsb into nop test xchg movsb out mov lock xchg mov (bad) repnz sahf fcomps cmpsb lods lock (bad) xchg (bad) aam mov mov (bad) lret into nop test mov out mov shlb cmpsb lods lock (bad) xchg bound (bad) xchg nop (bad) (bad) (bad) fiadd lret xchg rolb lret test (bad) (bad) (bad) shlb sahf push fmuls movsb xchg outsb (bad) stos cmpsb mov aam repnz movsb xchg pop out pusha cmpsb sahf jo fmuls movsb xchg outsb pusha shrb call xchg movsb xchg pop push pop xchg fmuls test (bad) (bad) (bad) pop (bad) mov jo fadd mov cwtl pop jb lret mov nop (bad) (bad) (bad) insb test (bad) mov xchg mov fmull rolb ror mov fmull rolb mov movsb mov fmull ror ret push rclb (bad) fnop nop (bad) fsubrp mov (bad) sahf mov pop xchg bound int3 hlt data16 lcall lcall (bad) push xchg pushf pop int3 sahf fcomps jo fsubrs xchg pop repnz pushf mov bound into lcall mov mov xchg pop repnz mov jo aam (bad) into mov test (bad) xchg into int3 mov pusha (bad) (bad) rcl mov xchg jb xchg movsb out sahf mov nop test mov mov out data16 loopne hlt pop xchg xchg lods into xchg mov (bad) rcl mov xchg jb xchg movsb out sahf xchg movsb into cwtl test xchg movsb out xchg mov xchg mov xchg mov (bad) repnz hlt pop xchg xchg lods into xchg mov mov mov mov (bad) mov rorb mov out lret rorb push mov pop (bad) xchg mov scas pop pop pop pop pop int3 sahf fcomps jo fsubrs xchg mov (bad) (bad) xchg out mov (bad) (bad) mov into mov mov (bad) (bad) xchg call xchg movsb xchg jo shlb sahf mov rcrb shrb call xchg movsb xchg jo shlb sahf mov repnz movsb xchg push sub xor sub cmp and mov mov mov sub pushf sub xchg xchg mov mov enter outsb mov (bad) shlb lcall (bad) (bad) lcall out pop int3 pop pop inc (bad) (bad) xchg pushf test or xchg dec xor and mov pushf ror mov jb pop jb mov nop push test mov fcmovne rcrb mov sub push mov adc push push dec mov call xchg enter pop lock pusha xchg (bad) stos (bad) out outsb aam fs inc les andl sub cmp fnstcw pusha mov imul inc les adc jl dec test fs ss push dec dec inc pop imul push inc push outsl jbe xor dec inc sbb rcrb stos adc sub push lret adc mov (bad) sbb pop jns mov mov jp rorl fwait cmp sbb ret mov data16 inc xchg adc pop (bad) xor cmp push sbb pop rolb and jb movsb aaa and bound and mov mov hlt andl dec push rcll lock test into mov fisub repnz xchg aad sbb lret (bad) rcrb pop fcoms fiadd mov mov je lds sbb cltd fstps adc inc cltd adc int3 pop es sbb rclb nop mov test mov adc mov push push xchg sbb pop xchg adc sbb pop sbb bound test or mov xchg pop xchg inc inc sub xchg or das xor inc shlb cltd lret stc cwtl ficomp fisttpl ja imul cmp aaa (bad) cmc jns pop fstpl add mov inc adc inc dec and mov mov stos (bad) sbb bound or inc stc cltd mov jo and xorl dec jbe push das aaa das das xor inc xchg (bad) fisttpll xor jnp mov mov stos mov movsb and aaa test push and push sub pop movsb test xor das mov jbe dec ja cmp or orl xor push jns mov xor xchg mov ja call xchg or loop xor mov dec xor cmpsb and test sbb test or or inc dec sub xor out cmpsb inc add dec cmp inc and push pop mov cmp dec sub addr16 push mov test sbb rcl or and leave cwtl push push push fwait adc data16 into and xchg xchg mov push sarl and cmpsl inc fdivl sub cs mov sub les and jno xchg xchg cmp popf add es dec xor in dec push imul cmpsb xor push cltd and dec inc cmp inc mov fs and adc bound sbb adc sbb or push push adc pop adc adc push mov fisub lcall es inc xchg mov sahf inc addl jno mov mov lcall cmp or xor xor jmp imul push push dec adc mov sbb push pop out dec ss jp adc mov dec cmp cmp jmp dec and push (bad) fsubs push xor cmp fs loop jp sbbl fwait and sbb pop mov sub jno xor and inc xchg ret and imul daa movsb popa sbb xchg adc lret int mov insl add pop imul jecxz mov xor push nop in lea xor adc jp pop mov pop mov popa jnp lcall push push or mov ss inc inc adc inc xchg or xor imul xchg sub xchg xchg je xchg mov es pop xchg push fstp pop rol movb and rcrl push or pop rcr push pop push les loope (bad) loopne call sub icebp xor jl sub adc jl call and push and imul mov dec es loop push and out jno and sbb cmpsl xchg scas and cwtl sahf push mov inc arpl inc inc ss xor gs inc inc dec push push push inc imul imul gs cmp imul imul dec push ja dec push push push inc push imul popa dec inc xor inc inc pop push inc inc outsl push inc inc inc xor push push push js dec xor dec data16 js dec inc inc inc inc xor dec jo outsl push imul dec dec das dec insb das push cmp push inc addr16 inc inc dec das das pop das jns dec inc inc inc inc inc dec xor dec jbe jne dec inc inc inc inc inc sub jns dec push addr16 jns dec das jns inc pop inc cmp push cmp push inc addr16 inc inc push fs cmp dec addr16 inc inc inc dec xor imul dec push ja inc aaa addr16 inc ss dec inc aaa ja inc sub jns jbe jp data16 dec dec push addr16 inc inc inc push imul pop inc dec cmp push ja dec push addr16 inc ss dec dec push ja inc aaa addr16 inc aaa ja inc sub jns push xor data16 dec dec push addr16 inc inc inc imul inc jns push imul inc imul inc ja imul arpl sub sub inc addr16 imul dec push das das das das das dec insb das push cmp push inc addr16 inc inc dec push push inc push dec inc inc inc dec inc inc inc inc inc push addr16 inc inc jae inc inc inc dec inc inc inc inc inc ja push inc inc inc dec inc inc inc push jns inc inc dec je push jns push dec cmp xor inc dec insb inc push imul push push inc dec je push inc dec push dec cmp xor inc dec insb inc push jns push dec xor imul inc push push dec push dec cmp push push dec inc inc inc inc inc inc push ja das push dec dec push addr16 inc inc inc imul inc inc gs inc inc inc dec addr16 inc inc arpl inc inc imul das dec ja inc dec push addr16 dec push ja dec push push push inc push imul pop inc imul inc imul dec pop insb das dec ja inc dec push addr16 dec push ja dec push addr16 dec push ja dec push addr16 dec push ja dec push push push inc push push dec push push insb data16 dec pop imul inc imul cmp push dec jbe imul jb push inc inc imul insb pop inc xor inc inc inc inc inc imul xor dec push cmp dec xor jne xor imul insb jp jb inc inc inc inc inc dec das inc jp outsl jbe inc cmp js dec push push push cmp dec inc push outsl push xor inc dec pop inc push push insb xor xor inc jbe arpl push das xor inc dec push inc push pop push jp data16 push dec xor insl dec imul dec dec push push inc das xor inc dec push inc imul pop ss inc dec inc inc inc pop outsl xor dec push push inc dec push inc push arpl jae dec cmp pop insb xor arpl popa addr16 jno dec push inc push inc inc imul outsl dec inc inc inc inc js jns cmp dec push push inc outsl xor dec push push inc xor outsl pop push inc aaa inc addr16 inc dec cmp ja outsl dec popa inc addr16 addr16 outsl inc js inc inc dec push inc xor inc push cmp inc dec push das jbe das push pop insb inc xor push aaa das das das das outsl inc push inc inc inc dec je xor addr16 inc ja addr16 ja inc ja cmp dec inc push outsl jne das das das das pop inc cmp inc insb dec ja je dec inc push inc ja popa dec cmp inc inc inc inc xor push inc imul jae push ss push inc imul push dec push dec pop inc inc dec push push imul inc push push outsw jp ja inc dec imul pop inc dec ja xor inc dec inc fs popa dec push imul addr16 inc push dec inc xor push inc imul dec cmp ja outsb push push xor inc jae inc inc inc dec jb outsl jae imul dec push addr16 dec js aaa inc inc inc inc push imul cmp dec push jae inc pop xor push inc inc push das xor push xor inc xor das das sub jns push push push jp jp push fs push dec push push imul das imul dec inc ja inc push je inc jb bound inc push inc inc pop push inc inc dec dec jo push pop jae inc outsl inc das xor ss xor inc inc inc inc js jns ja sub push push push dec aaa dec jne jp inc inc inc inc pop push je push inc cmp arpl dec push data16 inc push inc jno pop xor inc inc push push outsl xor inc inc outsl ss xor inc dec push inc dec dec pop inc inc aaa fs inc dec push inc inc aaa fs das inc push dec imul inc ja push jbe ja outsl inc das xor inc dec push das push push outsb inc push jne jbe push inc inc dec and fwait and mov test mov xor mov mov mov jle lret into mov aam xchg pop rcrb fcoms lea rclb adc inc outsl lods cmp and cmpsl test sub mov daa mov sbb lds xor movsl add inc aad and mov inc loope mov add int3 mov repnz pushf mov bound jb and xchg lret cmpl lret mov xchg rcll push xchg or sub inc inc dec xor dec pop lret int cmp or inc sub adc in fmul jmp sub pop popf and les loop push lcall lea dec sub inc adc adc into push push jb and and cmp add and into and xor mov push and sub lret dec ret sbb lcall push adc aam xchg bound adc (bad) and lret adc dec and lcall xchg sbb stc sbb pop loop inc mov push stos dec ret popa jp mov rolb (bad) (bad) decl stos mov mov arpl jp lret dec jns sbb nop data16 push jbe imul jb into outsb pop fcomp mov mov mov leave ret xchg fwait jns xchg adc lret push mov and pop mov dec leave popf add call call or pop or (bad) in dec mov mov sub int sub xchg call dec push das xor xor lea mov popa inc jmp xchg or dec aam stos orl push inc sub and movsb (bad) fisubr dec or mov sub in imul sub in dec sub and repnz std sub adc or test lock (bad) (bad) sahf rolb inc leave mov jnp mov lret bound stos imul (bad) lret les les and jno xchg loop das adc popf dec jmp or cs sbb mov adc pop nop (bad) pop dec adc loope bound cmp jb inc rcrb or fwait dec mov arpl inc mov rclb mov push push push fst lea adc or sub jmp call out leave push dec insl out imul sbb dec add (bad) gs xor jne push xor test push rcrl mov nop lods xor dec stos inc xor push fs mov imul adc sbb sbb xchg pop or out mov test cbtw shlb mov pushf outsb xchg ljmp mov call jo xor xchg cmpsl dec stos fisub outsb mov sub push push inc mov mov nop lods and inc pushw inc ja push jbe adc clc cltd frstor xchg mov into inc xchg test add enter iret inc or sub bound adc push push push push xchg rcrl push ficoml mov and xchg adc lea mov jmp cmpsb into ljmp arpl pop xor js push xor mov daa dec dec cs (bad) xchg addr16 inc inc and inc add xchg xor mov cmp inc fs ss dec addr16 es jg sub and and mov xchg jb test push popf push aad and outsl jbe adc js int3 mov and aaa cmp stos (bad) adc ss imul mov mov and mov jae (bad) (bad) les les xchg fwait inc ret loope test mov push adc nop test test aas xchg add jmp push and (bad) and or xor fs bound lret xchg test xor dec in sahf insb mov (bad) pop lcall int cmp sub push sbb adc imul jp jmp sub in lods dec fisub xchg dec inc and mov inc inc adc jg call dec insl addr16 xor sub cmp cmpsb fwait and push nop stos (bad) mov mov adcl adc test mov dec inc mov jne cmp popf test adc call dec and and pop test push push mov aam sbb push dec into push xchg dec ficom adc push push pop dec rcl mov push cwtl pop adc aad mov lret int3 pop pushf sbb push push push pop lret mov nop push xchg pushf push push push adc dec lret int3 or or cwtl lcall nop push push push push pop adc push pop adc xchg pop adc pop adc push sbb push or adc push adc dec adc pop xchg push fnop into adc push push pop dec or fimull adc cltd sbb sbb nop push xchg nop push rorl dec adc push push dec adc xchg push dec adc or dec xchg push or lret lret cltd push pop mov pop rclb xchg lcall fmul xchg sbb lea push rcrl pop adc fcoml lret int3 pop fwait rcrl pop rclb pop sbb rcr pop xchg aam push pop sbb mov fcmovnu lea push xchg mov push push dec sbb push pop int push aam push sbb pop pop rclb rcll adc sbb rorb pop pop ficompl push push fwait fwait rcr push push push push push adc pop sbb fstps adc push push push aad sbb nop pop rclb fwait push popf rclb adc aam push push fstps xchg nop push push pop adc sbb popf rcrl push fcmovnbe pop push push push push push push sbb or push nop push pop adc adc push fwait adc fcoml pop rclb ficoml dec sahf dec xchg adc pop push adc pop rcrb push xchg sbb ficoml push push fwait push popf int sbb push pop adc adc push fwait adc ficoml rclb ficompl fst push pop or push or mov lret int adc dec adc or aam lret lret lret lret fst push push push fnop rcll push push pop lret rcll push push dec xchg cwtl mov lret into push lcall push cltd cltd sahf push cltd sbb push sbb adc fwait int3 cwtl nop push push push push push (bad) push sbb mov push (bad) push sbb pop xchg sbb adc cltd into dec aad adc adc push sbb pop xchg lcall push push (bad) push sbb pop cltd fwait nop fwait push or pop xchg push (bad) push sbb dec (bad) fwait push or dec fcom dec mov push dec mov rclb push push pop or int or rcrb dec rcrb push sbb xchg lcall push cltd cltd xchg rcrb sbb push sbb push pop adc into sbb or pop pop xchg fistl lea dec fcmovnu mov aam xchg push xchg or or pop xchg sbb nop rcrl fwait aam sbb sbb pop mov (bad) mov lret lret fxch adc pop dec adc fcmovnu sbb or or pop adc adc push rclb nop fstl fimull fimull fimull into or pop pushf xchg pop popf xchg sbb push adc push pop or adc push rcrb lea fimull push dec or fimull push dec push sbb dec adc sbb push xchg xchg lea lret adc adc pop pushf xchg fcmovnu or adc push rcrb xchg push pop xchg popf fstps into or aam adc fcmovu dec adc into sbb sbb sbb cltd sbb adc nop push push sbb push fnop push push rcl pop lcall adc push xchg xchg adc xchg push push adc xchg sbb rcrb or fimull int3 int3 into adc pop xchg int adc sahf push adc aam push sbb push cltd lret lcall pop sbb sbb mov sbb sbb adc fwait or sbb int3 aam (bad) xchg sbb sbb ror pop push dec or rcrl xchg or mov mov into sbb push rclb nop rclb int3 pop adc nop nop push or ficompl rorb rcll pop lret fimull dec ficom push dec into pop mov adc pop adc sbb sbb nop push push sbb fwait pop fcmove push push push dec ficom adc rcll dec rcl mov pop lea lret rclb pop push xchg or push push xchg lret ficom or pop sbb mov fisttpll mov adc push nop pop push adc aam push sbb pushf push push ficoml lret lret lret aad rcll pop rcll pop pop xchg adc rcll into pop push popf rclb sbb push popf aam rcl or push dec adc sbb int3 pop mov pop sbb mov rcrb dec rclb push push (bad) pop push aad push push push or cwtl ficompl add stos sub aaa mov pushf xor cmpsl sub and sbb sub stos cmp xchg xchg cwtl mov xor xchg add loope lds or popa add rol mov inc inc adc mov nop call mov and xchg sbb and and add inc mov xor sub push inc arpl inc inc inc imul dec inc xor imul imul inc dec inc inc dec dec cmp push inc imul pop push inc xchg inc add xchg push or mov xchg cltd push pop mov pop rcll mov fcmovnu int sbb je sbb mov loop xor and mov jp dec rcrb dec inc outsl bound dec xor les lret mov nop fldcw loope dec xor addr16 popa inc imul out push push pop inc push and aam sub scas lret xchg adcl inc pop push je xor ja jno insb insb push push inc les aam or inc insb dec jo jae inc dec push inc ja mov dec sub cmpsb push test or es pop ja je and push sub pop mov test inc cwtl fnstenv inc mov idivl es addr16 inc and lret pop lret or xor lret aaa cmpsb sub and sbb mov and cltd xor xchg (bad) out mov mov mov into mov jb mov test mov nop inc xchg cmc inc mov push adc int3 bound adc pop inc cs sbb data16 repnz sbb (bad) enter and lret adc outsl xor sub cmp dec jbe pop arpl mov or test aam xchg xchg movsb xor add mov adc inc adc mov xchg arpl mull mov push in movsl add adc add push inc inc and (bad) cmpsb cmc push xchg (bad) xchg xlat and inc jae adc inc insl out xor adc pop lret mov mov rorl fwait mov and mov bound xchg stos (bad) mov and (bad) pop out dec xor mov fimull push dec push sbb stos mov xchg mov sarl rcrl adc mov into lret lods push outsl adc jg cltd rclb xor sbb xchg cmp aad lcall into push enter dec push dec dec movsb push push vpscatterqd repnz pushf int3 mov test enter dec or cmp test test lods xor xchg cltd test and lods mov cmpsl sub call adc cmp (bad) xchg adc fcmovnbe into pop push dec or rcrl mov mov xchg push jae in sbb test int3 (bad) and je and adc push xor xor hlt lods xchg mov popf or adc sub and push pushf mov sub mov pop in jbe xor fmuls dec enter scas loop inc (bad) mov movsb out mov and xchg cmp fiadd (bad) cmc sbb test call mov jns loope pusha leave xchg or add lret push and jno movsl xchg inc lods or lea in ja and push das loop jns cmp cmpsl sub mov sbb jp xchg loope fstl loop insb icebp sub aam and mov xor sbb inc aas cld test or xor cmpsb mov mov inc lret icebp sub push xor xor call call mov xchg cltd movsl gs add sbb push or fimull mov xorl cmp lcall inc dec push insl mov sbb inc aam cmpsb outsb and rcll mov mov or jp xchg in dec imul enter or adc dec insb clc xchg push and (bad) es mov mov mov sub loop dec loop dec les sahf mov aaa xor and adc lahf adc adc and cs call js (bad) jno and xor jae pop inc adc xchg addr16 popa and into int enter lahf (bad) es fwait xchg adc popf (bad) mov mov fisubr xor (bad) mov xchg nop nop pop into nop lods xchg xchg sub dec sub into lods dec call in lods push dec dec call sub sub insl jmp sub sub int lea push sub out dec ljmp enter in sub out or daa or in sub out test and call out and dec dec sub or sub in in sub inc sub sub out push call out lods or (bad) leave lods call out dec ljmp lods dec dec sub enter in out inc or or cs dec sub call mov or mov sub es mov push mov sub sub jmp push sub sub sub enter out or ljmp dec or sub enter lods call out or daa or in inc in out push ljmp call jmp dec sub out sub call call call and or in in jmp dec sub or enter or out dec lods push out sub mov (bad) ljmp push sub enter lods push enter in push dec push in sub sub dec in push sub dec lods push leave sub in out inc out push dec dec or sub dec sub dec sub sub sub sub sub sub sub mov out dec enter sub or in out inc out push dec sub dec out outsb inc add in (bad) or push dec dec sub leave call dec dec or sub imul in cmovle (bad) lods into out dec or push cmpsb leave lods ljmp sub leave ljmp sub pop sub out or sub cs scas push mov call test imul push imul dec sub test mov movsl out sub jmp and das sub out lods leave ljmp sub pop sub out or sub cs scas push mov call test imul push imul inc out sub or (bad) jmp sub sub cs lea sub or push ljmp sub pop sub out or sub cs scas push mov call test imul push imul sub test test sub das dec jmp mov or push push xchg sub dec sub mov sub sub sub (bad) sub or insb ljmp or lods out inc out sub mov out sub dec sub mov in sub jmp xchg enter sub test out push push lea push or mov or mov inc gs in enter sub lods int3 test sub dec pop or test out or cmpsl or call cmovs call add sub sub (bad) jmp push sub int xchg in jmp sub test mov cmpsb leave test or sub ljmp vcvttpd2dq call out push mov sub call sub push in sub xchg sub dec and or inc or or test or sub in sub push push ljmp sub dec test in imul dec dec sub sub imul dec data16 or inc or vcvttss2si or test imul lret push push into in into jmp out iret sub sub sub (bad) or es mov lods outsb scas mov dec sub movsl jmp out dec lret enter sub dec ljmp push sub in dec sub sub sub or lods sub imul enter in mov sub mov sub imul stos int push dec out inc sub ljmp mov int dec or dec sub sub (bad) in ljmp test in ljmp mov sub into test mov imul imul or sub dec or push lret sub mov (bad) push movsl out or jmp in lods dec or sub and cmpsl sub mov mov mov sbb xor mov stos movsb mov cltd mov mov mov fs push imul into push push push dec ficom adc fcomps dec ficoml int3 aad lea into push popf rorl int3 dec aam nop nop push ficompl jmp vpminsw sub inc sub sub out push call out lods or je add cmpsb cmc and push movsb movsb adc fs xor (bad) xchg nop in mov lcall push push inc inc xchg xchg add adc lcall pop jnp mov push bound xchg loope push mov xchg add xor sbb jnp jnp addl cmp call test fmull pop mov aaa clc xchg adc sub icebp aaa mov mov adc sbb (bad) sub or inc or push sub and lods or dec and or test inc or dec sub xor arpl and xchg mov jl enter and fwait and jo out push dec dec inc push sub push inc push dec jae ss pop aaa aam pop popf int3 push xchg adc mov adc push dec xchg pop aad nop rorl rclb aad adc pop in push mov call int3 enter repnz dec pop dec imul dec push push jp xor mov fs and lock repnz (bad) (bad) decl push push dec and xchg fcom mov cmc push and mov dec jno inc push dec inc and pop popf rcrb adc sbb rorb or pop add fs test mov ret cmp xor sbb nop enter test pop insb cmp inc push outsl dec inc outsl inc and xchg sub sub mov or mov inc jle (bad) push lret mov dec ljmp cmp daa and jp and inc pushf stos cltd mov mov jp popa dec inc xor and shll adc xchg or pushf outsb mov lock sahf aam xchg mov pushf mov mov and adc or mov pop cltd sbb ficom out push fucomp mov xor sbb lea push inc push test push enter sub cwtl xchg nop les bound mov fisubr inc outsl push push inc aaa inc dec push push xor ljmp adc jp dec sub xchg mov mov sub xchg test and icebp sub or inc hlt xchg leave sbb call nop mov fs arpl dec das dec push inc inc inc jbe arpl (bad) (bad) nop mov push mov mov popa (bad) and dec xor sbb push adc pop addr16 mov scas mov cmpsb test fcmovu xor and movsl movsl cmp sahf mov inc bound sub cmpsl rcrb int adc and leave jp mov dec popa mov pop inc push cwtl ficompl jae adc cltd mov and cmp adc popa pop dec sub mov mov ljmp pushf jae pop dec nop fnstcw jae int3 movsl enter iret mov lahf repnz mov jg insb xor cmp insb mov stos decl and js into scas mov lret adc xchg xor push and mov icebp sub (bad) les inc jbe push xor adc or es sarl xor and mov or imul pop rcr mov pop and jmp aaa inc push push xchg and test imul movsb lea or inc gs sub loopne mov movl adc xchg dec mov push repz mov push cmpsb jle inc and sbb adc aam out dec insb dec dec inc dec push das js pop outsl xor push and push test and mov cmp movsl adc push arpl xchg into es mov sub sbb push dec xor jae andl jp ror or dec mov cmp or mov or sbb sbb and push inc xchg sbb or jnp cmp mov stos leave lcall cmp fwait mov or inc or and and or sub dec ret adc bound cmp cltd jnp ret mov cmp mov cmpl jae or dec (bad) mov and and mov mov adc dec lret lret or or dec (bad) mov dec mov push lcall mov dec andl jnp shrb jp dec mov (bad) imul mov or bound pop push jae or cmp pop sub xchg push dec sub or mov jns jns jnp ror or jnp mov jns jp or (bad) dec jp jp inc mov cmp jae or dec and imul push mov or mov or mov or mov or mov mov sub or sbb xor sub and or sbb cmp push xor mov pop sub xchg mov dec or ret pop ret or adc sbb sub inc (bad) adc or pop or sub or stos or cmp leave mov sub mov and cmp adc or inc lret sbb and lret or test lret jns lret ret ret pop sub inc sbb jp or or or mov and xor push or or dec pop mov cmp cmp or or and stos jb lret lcall cmp lret mov stos dec xchg stos and cmp or adc adc or dec (bad) sub sub or ret cmp jnp cmp jb rcll and xchg mov or or adc mov dec mov xchg mov jae sarl sbb or ret sub sarl and or mov xor or dec (bad) sub cmp adc or ret sub sarl and or mov or sbb or jnp cmp mov or sbb ret sarl sub adc or and dec mov sarl sbb or xchg sub adc or mov sub pop push or or mov or jnp dec ret jp cmp sub or adc jns and mov lret or mov jns rolb or mov jp mov or or cmp jnp shll mov mov xchg cmp cmp inc popa lcall cmpl mov sbb jnp and cmp or lcall or adc imul dec rorb or adc sarl push mov adc stos mov and xorl lret jnp jnp inc and sbb dec mov sbb and cltd lret lcall and xor mov cmp mov mov jns lret ret adc adc jns jae and push jb cmp or or arpl xchg dec push and mov mov adc and (bad) mov ret pop sub inc sbb mov mov adc or inc mov cmp mov or sub dec stos and (bad) mov and dec or ret pop mov ret (bad) push adc imul jp mov jp mov or jnp jnp lcall bound (bad) or xor mov mov cmp mov mov dec adc jns pop dec xchg mov and cmp xchg mov adc or or stos jns stos sub jp cltd ret and mov and ret mov lret mov mov fwait sbb sub jb or sub or and sub ret and jp stos fwait dec (bad) ret mov ret mov stos or mov or jnp sub cltd ret and sub xor lret lret dec ret lret sbb dec pop lret sbb inc lret sbb and ret mov arpl mov mov push jns jns popa pop and push xor mov mov add mov mov or ret pop imul adc inc push sub or and sub leave ret or inc arpl and pushf sbb and xor mov mov mov mov sbb mov test lods sbb and and mov movsb mov cmp and mov cmpsl and xor mov inc dec pop inc fs dec push inc push outsl popa addr16 push das js ja pushf loope es mulb mov and and mov bound ret dec lret lret or test xchg call xchg cmpsb (bad) repnz test mov popf repnz je int3 out insb insb xchg lcall xor insl push test xchg mov mov xchg cltd xor sub cmp cmp mov imul nop mov pop aam rclb (bad) cltd adc push adc rcll adc inc mov clc xchg push imul push lret push ret test mov test inc es adc xchg mov movsl and mov mov aad push push into sbb adc xchg cltd sbb adc cmpsb cmc push adc push push adc addr16 gs daa xor jne jae mov daa and mov stos lods les movsb mov inc jne xchg icebp sbb mov (bad) (bad) mov pusha rcl scas xchg rcrb into mov pushf mov out call into lcall adc inc stos inc adc adc inc push hlt mov mov or sbb push xchg xchg lcall mov insb lcall adc or nop test mov xchg xchg mov test mov rcrl adc pop popf rorb aad inc jb dec ss push inc pop fs dec jno inc pop stos and and sub movsb sub add into imul sub xchg in xchg sarl test mov ficom arpl mov mov into into pop out enter and out es xchg jae jb inc mov ret xor addl xchg inc je xchg xor push divl xchg xchg sbb (bad) aam dec inc dec cmp bound inc dec jp sbb ret sub push mov adc lods (bad) ljmp push xor dec inc and or or mov or (bad) mov dec call out into sub daa ss mov xchg xchg inc fnstsw popa mov andl sub xor sub inc inc dec push dec push jne insl inc push xor sub movsl xor sub stos cmp cmp dec enter icebp cmp inc xor jb popf pushf (bad) out mov push rolb dec xchg mov nop push mov mov sub mov int3 rorb insb hlt repnz bound out mov (bad) pushf (bad) int3 mov mov mov mov cmpsl (bad) lock icebp cmp in dec push data16 inc and in cmp lods inc call popf sbb sbb adc push or dec push xor ss push push inc loop je aad mov es adc dec xchg dec adc adc loope inc (bad) out popa pop test movsb fisttpl or xchg leave adc enter fisub hlt movsb inc xchg and adc inc (bad) xor inc mov dec xchg or push sbb mov and mov inc rclb int3 sahf pop pop pop jle mov sahf shlb adc outsb out addr16 inc push jmp push call int3 les adc inc inc and ss inc or adc les call mov mov inc sbb add mov sahf and pop clc xchg mov adc adc les loopne jo in hlt insb lahf mov mov sub movsb fiadd js roll test cmpsb cmp inc lds dec gs jb ss jae imul push mov inc call dec sub sub mov fwait sbb fwait adc dec in repnz xchg cwtl imul ficoml mov cmp adc sbb fiaddl cmpsl pushf dec stos push sub and incb movsl xchg mov push outsb mov arpl pop inc push aaa cmpsl or mov jae mov jmp dec sub cltd dec or sub jbe les mov sub xor (bad) and sub sub mov call cld dec push xor xor (bad) daa aaa js pop and ss inc sub xor dec aaa push dec inc inc inc dec push dec push sub inc push inc inc push gs inc js inc push inc inc inc inc ss inc pop gs inc imul xor das das das inc addr16 dec push push inc inc dec push push popa jbe outsl push jbe das das xor inc pop jns push push inc inc inc inc inc inc dec cmp xor imul jne jbe inc inc inc inc push je cmp fs cmp insl dec je inc dec push outsl imul inc dec cmp pop push outsl fs jno push inc inc aaa js push pop dec push push outsl jno addr16 inc push sub jbe inc inc inc dec push dec ja inc push push insl dec push inc inc aaa js push pop dec push push outsl imul xor inc inc inc dec imul outsb das je inc inc inc inc inc outsl arpl inc inc push sub jbe inc inc inc dec push inc push push insl dec push inc inc aaa js push inc dec push push inc js inc inc inc inc xor inc inc inc inc push dec push inc imul inc jbe inc inc inc inc inc jb xor ja inc inc dec jne xor inc inc inc jbe push dec insb inc inc inc inc das aaa bound inc inc inc ss outsl dec inc inc inc inc js inc dec jbe push inc inc inc inc dec inc jp pop imul inc arpl inc inc inc xor outsl fs inc inc push cmp ss dec dec inc inc inc pop push push outsl inc push xor das sub xor inc xor jae dec cmp inc jp outsl fs fs ss dec dec inc inc inc pop dec push das cmp dec push ja aaa js push dec dec push push outsl jne arpl inc insl inc js inc dec arpl dec xor inc inc inc pop pop xor push push push popa dec fs push push push xor cmp inc inc inc bound xor inc inc dec pop inc fs dec push das cmp push inc inc inc ja push inc push push das pop imul inc push xor xor inc ja inc inc inc dec pop inc fs dec push das cmp outsl xor inc xor das push inc fs insl dec inc xor inc fs dec push das cmp gs ja fs jno push ja inc ja push inc push push das pop cmp push pop pop pop imul inc inc bound inc inc inc push das cmp insb xor xor fs push dec push xor push xor cmp dec inc inc inc bound xor inc inc dec pop inc fs dec push das cmp push inc inc inc ja push inc push push das pop imul inc push xor xor inc ja inc inc inc dec pop inc fs dec push das cmp outsl xor inc xor das push inc fs insl dec inc xor inc fs dec push das cmp gs ja fs jno push ja inc ja push inc push push das pop cmp push pop pop pop imul inc inc bound inc inc inc push das cmp push jne js aaa inc push xor inc fs dec push imul outsl push xor xor dec sub das sub insb insb xor bound jbe das das xor sub insb xor sub push inc inc dec push dec push jne xor data16 das push pop jbe pop jae jp dec dec jno inc push inc ss xor das das das outsl push xor das xor ja pop push xor inc inc push outsb inc xor dec sub inc xor push das imul pop xor outsl addr16 data16 das cmp cmp ja push das das cmp inc dec imul pop dec insb das inc inc dec push insl jns push push push outsl popa data16 das das xor inc xor push aaa das das das das outsl inc addr16 inc inc dec jbe popa addr16 push inc insl dec fs inc imul pop inc fs dec inc ss imul inc inc xor inc outsl jns push inc inc inc outsb inc push pop jbe sub outsl arpl push addr16 jp pop insb inc das inc dec push imul inc dec cmp dec bound push push inc pop imul dec push popa addr16 outsl das inc dec inc inc inc addr16 inc push inc inc push das das push push dec arpl inc dec inc inc inc inc inc inc inc inc jb data16 push dec inc inc dec push xor dec push dec js push xor xor inc addr16 inc inc inc insb fs dec xor imul push push push push pop xor push inc inc aaa jns pop xor outsb das cmp dec cmp push push push push inc dec push xor pop push pop das xor das xor das xor das xor das xor das xor das cmp jb inc inc inc dec push xor outsb push inc dec cmp push push fs dec insb cmp dec imul dec push push addr16 inc dec jae imul push addr16 xor ss xor inc inc inc xor fs imul insb inc dec dec jae push inc dec push push xor fs push das fs inc push das xor das cmp sub dec and adc movsb movsb sbb movsb sub test mov movsl mov loope add xor cmpsb push inc xchg add xor repnz inc ja and cmpsb mov adc arpl cmc arpl repz in and adc sub test lcall mov (bad) or andl cmp lret push mov dec sbb in add inc addr16 xchg je add ja test adc adc notl jb test cltd dec (bad) sahf aam pushf out inc jne aam sub (bad) rcrb lret adc aas enter orl and xchg add push testb dec (bad) in bound jno movsb mov push daa xorl les dec inc sbb ret jae movsl cmp gs lods and xlat and mov mov ss dec dec push inc pop push push outsl inc push xor das sub push addr16 xor jae mov ss dec dec xchg cmp imul scas in push (bad) invd dec mov lods sub lcall sub cmpsb xor test stos sbb pushf mov mov movsl test inc adc adc xchg push int or adc mov xor xchg add adc xor mov mov mov xor loop xor gs in ja inc jmp sub push mov mov xchg push daa jae and lds pop daa and (bad) (bad) (bad) (bad) (bad) call push adc or pushf push jbe mov mov push or sub ljmp dec insb xor sub push inc mov inc in ret dec pop jae jp dec dec jno inc push int3 rolb xor xor mov les dec sub fstpl mov jae jbe (bad) sbb xor adc inc push mov movsb addr16 fwait or push adc pop push adc lcall and cmpsb mov pop test inc movsl cmp xor sub enter mov adc sub or in pushf fmull into push out mov inc pop cmpsl test rorb rcll dec pop int sbb rcrb adc rclb (bad) mov jp and xor mov mov jo mov inc stos pop dec es mov xor push push push push pop xor push inc and lcall jo test push adc pop les dec test adc jmp test xor xchg inc or mov stos or lods sub dec (bad) push cmpsl adc xchg int3 lds xchg dec and dec nop push mov outsb (bad) mov out data16 cmpsl je (bad) ljmp and fwait cmp adc push or into jno stos or fiadd inc fs cmp les aam xchg (bad) and xor pop xor jp ret xor push push dec ret icebp and sub dec pop les xchg mov inc push cmp adc xchg adc lods (bad) mov pop decl cmp xor push xor insb clc sahf mov inc sub jb mov test and in and ret or popa pop lods movsl mov and and and popa and adc add cmp or push dec pop cmp leave dec inc and dec xor pop lea data16 cmp pop psllw lret (bad) es mov sub test inc inc loop xchg out sbb movsb test mov sub stos mov fs addr16 xchg cmpsb hlt arpl sbb int3 out mov mov sub sbb sub sub call and mov xor jp mov jb movsb cmpsl xor outsb enter mov inc mov sbb movsb enter int push dec dec dec adc sahf mov ss les sub fs xchg or adc dec xor mov and inc out pop or hlt test jae inc ret fiadd push bound cltd xor bound mov sbb fs sub arpl fwait push adc les mov loope int movsb int lods sbb inc dec and movsb in sub inc lods fs int adc popa jmp adc inc loope add mov sub loope jmp pop loope lds sbb and fdivrl inc add cmp push push add or add mov add int add push popa lods loopne pusha loopne fdivrs add shll add mov mov add gs sub add add movsl loopne xor adc (bad) call mov and test add fsts or cmp mov mov add popa push cmp or xor inc fchs fsts lods add popa mov mov popa push popa cmp aam add roll adc inc mov mov rcll in xor and fs gs sub or adc in adc mov add popa pop or fstpl add flds mov cmp mov mov cmp adc or cmp adc add add int jmp xor jmp xor push or adc add add gs add fldl add fstp push add test add leave lods sub or mov add or jmp or sbb xor in frstor inc in cmp lods add xchg or add int or loopne cmp lods xor inc adc test rcr or lds mov add cmp xor inc adc test mov add fdivrs mov gs mov lds adc sbb add leave pusha loope sbb add dec xchg dec sbb and pop mov mov add shll fdivrs add int3 int add int and ffree lds cmp add pop test frstor dec inc adc inc inc or pop fnstenv popf add inc loope sbb or dec add sbb fstp mov xor inc popf adc mov cmp add leave pusha loope and sarl xchg or mov add rcll push popa lods mov push lods and dec add dec inc (bad) mov mov or in pushf leave gs mov mov add enter mov fsub pop lds aad test pop lea jmp xor inc lods or test fstpl or inc and sbb xor fldenv sbb sub lods xchg or or or inc inc sub sbb or gs cmp adc and leave lods xchg xchg sub add fnstsw and fdivrl add movsl popf sub flds loope or inc cltd or add mov and (bad) leave add gs sbb loope leave lods xchg xor adc inc xor movsl and dec test add lea mov mov popa inc inc mov inc mov imul loope adc fxch pushf lods fstpl pop mov lds inc imul roll mov push pusha shll or popa mov add and inc add test inc in loope in aad in roll pop cltd inc sub add add (bad) mov add and xor pop sub add or inc popf add and aad add mov add add test add popf and add sub or add test add add sub in xchg popa movsl sub sub add mov add xor test mov daa push sbb aam rcl sbb rclb pop xchg lcall rcr dec es out sub in xchg test pop or sub cs push (bad) or dec call or sub test mov in push sub xchg mull push push inc xchg cmpsl adc divb je mov or mov xor imul fadds xor inc hlt out sahf das inc popa addr16 outsl das push inc inc inc inc outsb inc push pop je dec inc imul cmp and xor sbb fwait sbb mov int3 push dec mov sub (bad) sub dec dec hlt inc or jnp mov sub imul ss and mov push adc dec adc rcrl rcll dec sahf or mov push sbb dec roll jmp stos add test sbb aaa sbb xor les dec cmp xor xor push push xor xor (bad) and inc adc nop loop xor addl sub mov mov cmp sub daa mov or and cmp push xchg jg sahf push adc dec adc xchg mov xchg add push mov fwait mov mov icebp xor out dec inc bound inc sbb sbb sbb cmp rclb push rcrb pop sahf push pop rclb pop adc mov xchg repnz daa mov xchg and inc mov test adc in test push call jbe hlt out int3 lock fadds insl adc int3 mov enter rorl es call push xor icebp xchg dec xchg dec sbb and les pop es and push iret adc push arpl and jp mov push push push inc inc xor arpl sub push rorl dec jmp stos sub movl in pop (bad) call popa pop inc ret xor arpl xchg and (bad) cmpsb xchg cmpsb into and push test and rclb test xchg nop mov xchg and popf xchg dec lods loop ljmp movsb (bad) xchg test fstpl mov cmpsb xor adc insb test jne xchg dec mov and fs dec and fnstsw and fdivrl lret dec cmp and and sub sub xchg sarl cltd adc sub leave mov mov pushf (bad) into mov mov mov and xchg or inc inc inc adc es dec in out push (bad) enter mov and (bad) in inc cmp push dec adc ss adc xchg jns xchg adc mov (bad) stos or cltd xchg outsb inc inc inc inc push mov inc xchg adc movsl movsb and mov scas xchg rol adc nop nop mov xchg jns mov lea sub mov sbb sub jno sub insb pop rorb or sub sub dec lods dec dec in stc push push fwait adc dec xor imul pushf dec sub bound arpl enter out xor icebp sub loop xor call mov call mov or xchg daa mov lret int3 enter out or xchg xor into and cltd or loopne sub xchg xchg dec sbb ljmp push jmp lea inc cmp ret sbb (bad) fs dec enter jmp push daa jg popf cltd fsub adc inc in aaa inc inc xchg cmp roll or test xor stos mov pop adc push popa inc push inc and pop mov dec dec xor test and mov xrelease dec xchg adc call stos xor sub inc ret mov mov sub adc inc je andl mov mov call sub lret jae enter out rorl das inc sub add and lcall sbb dec sub dec nopl xchg (bad) bound loop xor hlt in fs and lods pushf (bad) mov mov push cmpsl adc nop xchg or fsubs gs inc mov lret adc xlat adc inc into popa icebp and enter lea xchg sbb mov hlt jecxz xchg xchg dec mov movsb mov mov jp lcall adc mov fwait (bad) mov sbb push push inc push adc xor sbb xchg cwtl nop xchg adc or ljmp cmpsb mov and mov pushf and mov stos sbb cmp mov mov mov pop movsb sub mov test mov cltd and cmpsl mov mov xchg mov xor cwtl sbb xor sbb mov lcall xchg mov mov mov cltd sbb sbb mov sbb sbb mov mov sub sub cmpsb xor cmp sub movsb mov and and and lcall xor movsl cmpsb sub cmp and mov mov sub mov fwait sbb mov cmp sub mov test and mov and mov sub mov and ss mov mov mov movsl cmp sub mov test pushf and mov and mov sbb mov sub movsl mov cltd lods xor cwtl sbb cmp sbb xor pushf cmpsl cmpsb sub xor xor lods xor cwtl pushf mov mov sub stos sbb mov stos mov test lcall and xchg mov movsb mov test mov and cltd test test movsl sbb xor ss cltd cmp sub stos lods sub sbb mov mov mov mov sbb and mov cmpsl test sbb cmp xchg xchg cmpsb daa sub mov pop mov xor cmp pop mov mov and and lods cwtl cwtl and mov and xor sub es cmpsb adc stos movsl sub sub cmp cmp and xor mov lcall test sbb sbb mov lcall sub xor mov aaa mov mov xchg lcall mov cwtl stos sub mov mov pushf sub mov aaa sub cwtl sub pop xchg xchg movsl and and and xor and mov xor lcall and mov mov sbb mov xor sub sbb stos mov stos movsb stos aaa mov xor movsl cmpsb sub mov mov and and mov and movsb mov test pushf and and xchg stos mov xor and xor mov mov sub cmp cmpsl sub and sub mov and daa and mov mov mov cmpsb sub mov sbb mov sbb mov mov mov xor sub mov mov mov mov mov and mov sub mov and mov cwtl and movsb sub mov sub mov es test ss adc mov mov mov adc mov sub mov sbb cmp xor stos lods sbb sbb sbb xor test mov stos and mov sub xor sub mov cltd cltd pushf and sbb mov mov sbb test mov and cmp mov aaa test movsb lods and mov cmpsb sub mov movsb mov sbb daa and mov mov movsb cmp xor mov xor cmpsl and sbb sub and xchg xchg lcall mov stos sub sub and and pop xchg xchg lcall lods cmp and sbb cmp cmpsl sub mov lcall mov mov pop xchg pushf mov and mov stos ss movsb movsb xor movsb sub mov cmp test mov and mov xor sub mov mov and mov xor lods sbb sub xor and cmpsb sub xor cmp mov xchg cmpb xor dec pop int dec rcrl push dec adc push adc aad or xchg pop nop lea push adc pop push adc lea sbb rclb sbb fst push push push push or pop int3 xchg or mov sub in into xor cmp adc mov pusha push shrb fmull imul movsb dec cs push xchg mov in adc dec dec leave in in cltd mov adc xor inc xor mov and add mov test sahf xchg cwtl mov adc movsb int3 aad xchg inc mov adc adc mov push mov (bad) rcrl mov add imul mov mov push mov xor iret and icebp xor mov and inc xchg adc inc xchg shl das xor mov pop cwtl sbb cmp sbb xor pushf cmpsl cmpsb sub xor or mov cmp arpl push jp das xor or popa mov mov and sbb inc push sub pop inc inc aaa mov mov fstps dec sub xor arpl ret mov je inc notb sbb mov test out into enter jbe push and mov mov jb imul lret mov mov mov xchg mov jns bound and hlt enter repnz adc pop aad sbb inc xor into mov enter test hlt (bad) xor mov mov push or and mov xor mov movsb mov push mov xor push imul jb and pop pop pop dec inc repnz mov stos bound mov xchg je xchg push push dec push mov push inc xor dec or push inc ret sbb cmp inc stos adc or out xor sbb xchg mov pop ret adc pop mov fisub xchg repz mov inc pop je rorl imul and mov into push stos out mov xchg mov push push cmp fs xor movsl pop sbb shrb call ljmp xor cmpsb inc sub je mov out enter lcall mov sbb sbb cltd push mov mov xchg push pop sbb or pushf fnstenv cmpl addl imul push call cmpsb je inc adc sub or or sub sub cwtl push int and inc or jno or xchg xor sub cltd popf rorb pushf movsb into and cmp push bound rol scas mov gs inc jns push push push pop pop push xor sbb clc mov cmp popf shlb dec xorl aam adc sub inc in dec inc push decb insl dec ja dec inc adc jp rcrl adc cltd cltd sbb adc fs mov cmp push or mov mov call insb nop nop call adc cmpsb sbb fwait adc push sbb inc xchg adc enter int sbb adc fs inc imul je push rcrl adc push inc add mov add dec xor jns sub shlb lea int and add (bad) push outsl jp xor mov xor lcall inc cmp aaa mov movsb or push dec dec add cmp int in inc cmpsb inc inc xor lcall xor push xchg in jo mov inc push (bad) xor sub xchg es push push data16 cmpsl je in push lcall into mov imul xor adc sub and insb inc dec inc push das mov dec lods (bad) inc je dec es icebp sub stos mov or xchg cmp int push and mov mov sub call bound and fmuls inc gs cwtl xchg xchg adc lds dec call sub dec or sub leave or lods mov sub or call test out dec add or stos pop or dec or sub in out sub in in jmp mov out in out mov or or sub insl dec jmp sub sub sub dec sub sub sub out outsb out or sub sub sub dec ljmp sub sub dec test dec ljmp dec sub dec stos test in push sub out iret das dec jmp lods int3 data16 sub imul out call lea call in sub sub sub es into call or dec sub sub (bad) mov sub in out or jmp or int3 sub mov dec sub sub call lret sub dec dec sub push cs ljmp inc out or jmp push das or imul out sub or sub sub cs daa sub out in leave mov or ljmp sub inc outsb dec dec out addr16 es sub int mov push lea or test or ljmp sub in call sub add sub sub jmp imul sub xchg jmp mov sub sub or dec dec in call lods sub or sub dec out or enter sub dec dec jmp or xchg sub out or es (bad) test lods int3 test or and jmp mov sub dec sub dec ljmp in inc insb mov sub mov dec ljmp dec out inc dec jmp or daa daa sub dec jmp enter or test add lea or sub call sub push or out call push mov cmpsb mov in call sub sub sub imul leave sub dec jmp or mov ljmp dec call dec (bad) in in sub (bad) or in dec into in dec stos test out or addr16 or sub test dec or gs in out inc out or int cmpsb test mov test mov or sub or xchg or into jmp sub or es imul mov lea push call or xchg or into jmp sub or es imul push enter stos pop or or or leave iret dec test in into call lret dec ljmp push sub push lret or lret test in into call lret dec ljmp mov sub or mov into call mov data16 sub cmpsl or sub into sub sub or ljmp sub sub sub sub out or pop or insl inc call or xchg push gs in test in dec dec es sub lods insb sub mov sub sub sub sub or or test out or cmpsl or sub or test sub leave imul sub push lods imul mov sub test sub (bad) out out push cmpsb call out sub or (bad) or sub sub mov int3 sub dec int and or pop or or cmpsl or test int3 dec (bad) sub das inc or or or enter push in dec stos push ljmp dec dec sub mov sub push jmp inc out push lods push test push push or mov xchg sub or or in sub sub or imul jmp enter in push sub out in insb mov test test sub mov mov sub dec sub cs inc or sub or out dec or sub sub push or add out mov test in out out jmp push cmpsb lea (bad) sub in push cs sub sub sub sub lret dec or addr16 or sub mov in mov sub mov jmp mov dec sub sub xchg imul int inc or or sub sub sub enter in push leave cmpsl or into jmp leave dec in sub in in out sub dec sub dec jmp dec push dec into call push lods test sub sub lods lods dec sub push sub or sub or in dec push or dec dec jmp sub dec cmovp or push es sub sub dec jmp mov or sub and push or dec call dec mov sub leave dec push vpmulhw dec call sub (bad) mov stos test and push dec jmp sub sub sub lret sub (bad) or sub dec inc stos sub inc push lods xchg jmp pop push (bad) dec inc mov test int3 mov mov dec jmp lret (bad) in in xchg out dec add es or ljmp sub dec dec out ljmp enter in sub sub in cs dec vpminsw int mov or sub inc cmpsb or leave push movb jmp add (bad) mov out xchg test test sub push call sub cmpsl or enterw sub dec dec sub addr16 inc cmpsb sub inc mov stos cmp xor and and sbb sub mov and pushf mov sub mov sbb test jmp xchg sbb mov mov mov sub out push or push jmp xor mov and cmp add mov inc lds xchg add and insb inc jae push cmp xor or xchg or or sbb or or sbb roll add xor add loope lods adc fisub into mov mov mov in iret cmpsb pop mov mov sub mov call ret and adc push adc adc test mov inc add mov xchg cmp out in inc out inc inc outsl dec addr16 gs mov mov or lret mov (bad) ret cmp mov leave or insb xor inc inc das xor xor adc aaa test lods sub xor cmpsl mov lods sub cmp movsb pop mov test frstor inc loope int movsb loope or mov mov sub ds movsb cmpsb hlt inc xchg push xchg push adc adc ret adc enter inc xor dec les dec inc xor gs cmp push bound (bad) adc lret cmp push mov inc insb mov sub dec push inc push push jb push dec jae cwtl in popf mov and mov and mov push xor xor in outsb push inc xor push sbb sbb enter mov enter xchg inc adc sub inc adc adc jbe addr16 ficom lcall dec dec pop gs push data16 std dec mov shrb xor int3 test add cwtl mov pushf xchg imul xchg sub mov cs push enter cmp pop push int3 mov insb pushf hlt enter out mov pusha mov pop xchg (bad) ret adc repnz mov mov lods aaa sub and mov mov cwtl mov cmp test mov sbb test mov sub xor and movsb sub sbb xchg xchg xchg xchg mov xor mov mov xor stos cmp stos lods sub and sub pushf xor lods sbb sbb mov cmpsb pushf and mov movsb test mov mov mov and sub sbb cmpsl pushf xor xchg cltd test xor cmpsl sbb mov sub mov cmp xor xchg mov mov sbb cltd lods sbb mov mov pop mov test mov cmp and and lods cmp sub and daa and sub cmpsl xchg mov mov mov fwait fwait cmp movsb xor xor sbb and mov test sub movsb mov cmp cmpsl cmp mov mov pop xchg xchg mov lods xor sbb mov and movsb mov pushf mov movsb sub mov mov sub test cmpsl cmpsb sub xor sbb mov cmp sbb xchg xchg mov movsb test mov lcall sbb mov adc movsb mov mov mov cmp movsl pushf mov mov pushf and sbb mov sbb sub movsb mov sbb xor mov xor sbb sub and sub xchg xchg xchg mov es and fwait cmp cmp xchg xchg mov mov test cmpsb cmpsl sub cmp mov mov movsb mov mov stos sbb movsb mov xor mov and cmpsl mov mov xor cmpsb test and sub sbb sbb mov mov mov sub and mov xor mov aaa lods pop mov daa mov xor cwtl lods pop pushf cmpsl sub and xchg mov xor cmp daa cmp mov mov lods and xor sub xor test mov mov cwtl stos cmpsb sbb sbb and sub and test mov cmpsb mov and mov sbb test mov sbb sub pop xchg cltd aaa mov and mov mov mov sbb pop xchg stos stos cmpsb xor mov daa sub test mov sbb sbb sbb cltd sub xchg stos lods mov sbb mov mov mov sub xor sub daa test mov mov adc mov mov sub pop xchg stos mov mov mov mov sbb sub mov mov mov mov pop test xchg xchg xchg xchg mov test mov sbb pop xchg mov and lods cmp mov cmpsl daa es test mov sbb mov daa sub xchg xchg mov mov and pushf lods pop mov sub test mov cmp mov mov xchg xchg xchg cmpsb sub mov pop mov lcall cmp cmp cwtl sub mov pop mov and mov mov mov sbb stos test mov sub and sbb and cmp lods sub mov sub xor sbb mov mov sub mov mov sbb mov fwait mov sub mov xchg xchg pushf lods xor sbb es mov stos lods xor pop mov mov and cltd mov pushf pushf cwtl and xor sbb pushf sub and xor ss xchg mov sub pushf and fwait cltd cltd stos cmpsl stos sbb mov and sub xchg pushf lods xor mov pop xchg xchg xchg cmpsb sub and stos test xchg xchg pushf xor mov xchg xchg xchg cmpsb xchg xchg cmpsb xor mov sbb mov xchg stos mov fwait cltd cltd stos cmpsl xor sub and mov mov movsb mov xor xchg xchg mov mov cmp mov pop xchg xchg mov cwtl and xor sbb daa mov sbb xchg xchg stos mov mov cltd stos cmpsb mov sub aaa mov cwtl mov cmp mov pushf mov cwtl mov xor mov pop lcall lcall mov fwait and adc xor sbb mov mov sbb cmp sbb mov mov sub mov stos mov stos cwtl mov mov mov and cmp sub aaa mov mov test mov cwtl sub mov movsl cmpsb cmp and pop cltd lods xor and mov sub mov sub pushf sub sub mov mov sub xor sub cmpsl xor movsb sub mov cmp xor mov cwtl sub mov movsl cmpsb cmp and pop cltd lods xor and lods xor mov sub xor xchg fwait and mov mov and sub test mov and sbb mov pop cmpsl xor movsb sub mov cmp cmpsl mov cmpsb mov cwtl and mov aaa mov cmp and cltd mov xor xor sbb mov sub movsl sub mov aaa mov cltd xchg xchg cwtl mov cmp sbb and mov mov sub and and aaa mov mov mov sub cmpsb mov lcall sbb and aaa mov mov mov mov xor cmp xor cmpsb adc sub mov sub aaa mov cwtl mov cmp mov cmp cmp and mov mov cmp pop xchg mov and pop xchg xchg xchg mov fwait and cmpsb mov sub and and aaa cmpsb mov mov stos lods mov aaa test mov mov and sub pushf and mov movsb cwtl mov cmp test movsl sub mov sub movsl cmpsl xor pushf and sub mov cmpsl sub mov mov and sub sub and fwait cmp cmpsb sub test movsl cwtl mov mov mov mov cmp cmp sub cmp cwtl sbb cwtl and mov mov sbb cmpsb movsb cmp sbb sub mov mov mov mov mov sbb mov and lods mov pop mov movsb mov and and sbb mov sub test and and sbb mov mov sub lods mov mov cmp mov movsl mov mov movsb lods xor cmp sbb sbb cwtl cmp xor lods sub movsb test cwtl movsl lcall mov and cmp cmp mov and sub mov sub mov cmpsb sub cmp sub mov cmpsb sub mov sub cmp sbb movsb sbb and cltd and mov xor sbb xchg mov mov movsb mov sbb lods sub cltd mov mov sub xor sbb movsb sbb and daa pop movsb sub mov lods fwait cltd aaa sub mov sbb mov mov movsb mov cmp mov movsb lods xor cmp sbb sub mov lods mov mov sub xor movsb mov lcall sbb mov mov mov cmp movsb mov daa mov and cmp and and mov daa mov and cltd cltd cwtl and test and mov sub and sub mov sub test cmpsb sub test cmpsb sub test stos xor mov sub mov cmp sub lods aaa sub and mov mov cwtl mov cmp test mov sbb test and xchg mov mov mov mov sub and xchg xchg xchg xchg mov xor mov inc popf adc mov add popa push pop mov rcll lret bound enter xchg push ja push dec aaa dec push jae dec dec dec imul xor adc jb mov stos pop sbb xchg or int3 aam xchg xchg mov fstps or xchg push cwtl push xchg cltd lcall es xor cltd les (bad) xor and mov ret (bad) xor or cmpl adcl adc lret (bad) (bad) int sub into out test push push or mov xchg sub or or in sub sbb dec mov inc fs push (bad) xor jnp sbb dec out shr (bad) jae ja push dec push push xor dec hlt test hlt lds mov fadds test xchg rorl push and xchg fldenv pop js dec cmp dec xor mov fs lds daa sbb xor rclb rol jb movsb and cmpsl fwait and xchg loop inc rclb xchg popf lret cmpsb outsl xor dec ja dec push push jp xor int3 mov mov aam test mov inc adc sub cmp and stos inc xchg jp pop push inc rcrb and fwait and xor pop mov cwtl mov test test (bad) bound insb xchg mov push cmp lret xor xchg sahf dec repnz fimull lock rolb and nop xchg test xor and xchg jp or or cmc and xchg push inc push and and mov adc fwait jmp cmpsb enter cmp ja movsl ror mov int xchg dec push push push rorb xchg or aam and or or int js repnz push es imul imul sbb add inc aaa jbe mov xor stos push subl push arpl jp test call cmpsb insb (bad) jb les mov inc mov xchg or xchg adc jbe and and mov jno cmp xor push inc inc gs inc xchg sbb and daa cwtl sub and inc inc test sbb icebp sub lret dec sbb push js lcall sbb inc pop in inc inc push push dec or repnz inc jae and jno jp mov in dec addr16 xchg movsl push popa scas nop mov xchg adc pushf xchg adc mov fmul int mov decl dec dec push xor push adc and into fmull sub and repz cli inc ret mov jnp cmpl dec imul iret cltd fsts fnstcw mov movsl inc enter xchg xchg cmp adc (bad) es push mov mov cwtl mov cmp les mov aad and sub push sub or and sbb mov sahf hlt lods (bad) xchg mov push les xor and mov dec or mov int3 dec out sub aam es adc xor and and ss mov insb cltd loop dec in pop dec pop enter mov or insb dec repz xor cmpsl xor jp (bad) call sub and bound rcrl int3 lret xor xor jb adc imul or (bad) cld lret dec iret inc loop inc cld enter sub push and into cwtl mov mov lret popf pop sbb aad adc adc xchg xor sub mov js pop test out or and xchg xor sub sbb dec imul (bad) lcall sub dec enter or aas adc mov and and or xchg add sbb push pop jbe adc data16 test xchg dec ret mov push enter sbb aam test cmpl jb and bound mov mov mov dec mov sbb lret arpl and cmpl xorl dec sbbl and sbb cmp rorl xchg mov or mov sbb ret dec addl pop mov stos mov mov ret or andl inc mov mov bound mov mov push mov mov bound cmp stos mov lret sbb adc mov pop push leave xchg or mov push or arpl lret xor or or mov and inc mov dec ret cltd mov sbb mov popa sbbl mov sub mov jno inc lret lret xchg jb sub (bad) imul sub sub mov sbb or or inc push dec ret mov mov ret xchg subl jb sbb (bad) mov mov pop and dec adc or subl jb sbb ret mov ret mov jp dec mov ret mov jp dec mov and (bad) dec cmp stos dec jns jp inc dec or or sbb xor jb jb bound cmp ret cmp bound mov mov cmp lret push cmp pop mov dec inc push cmp lret adc stos mov and sbb pop shrl dec sbb mov cltd mov mov push xor sbb stos sbb cmp xchg dec addl cmp dec and stos push or or push sub xor pop cmp mov ret dec and or jp or mov xor or or dec lcall dec cltd mov cmp or sub (bad) or sbb or adc dec mov stos or or mov mov or or jb mov mov dec jp or mov bound mov sbb (bad) dec push sub or or pop xor dec (bad) or jp or mov bound stos push and mov push xchg mov and or and and or jns mov mov stos stos or or jae mov jp adc mov lcall or or mov xor mov dec mov or mov push stos mov jb adc fwait mov jns dec (bad) stos dec cmp mov mov stos or mov sbb lcall mov jb mov push lret xor dec mov mov stos stos or mov stos stos or sbb rorb xor xor bound lcall jns mov cmp or stos add xor xor jp xor jp sbb mov imul push rorb xor adc bound lcall dec mov or mov xor imul mov push jp xor jp sbb mov shll inc or xchg jp sbb or cmp or adc or (bad) xor or mov dec stos lret xchg popa jnp inc adc jnp rol (bad) stos or mov or cmp dec mov mov jb mov bound sbbl mov xor xchg dec addl arpl xchg adc imul (bad) or xor mov or or sub mov or adc pop xor push mov lcall xor mov or and stos mov ret jp dec or or xor lret mov stos dec cmp push jns roll jae mov or jp and dec ret jnp rol inc (bad) and inc sub cmp lcall lcall xchg mov ret dec pop mov and mov (bad) and ret or dec bound mov ret (bad) or or or or popa mov mov mov mov push test cmp dec stos sub stos jp dec stos cmp stos sub cmp or jns sub push mov sbb movsb mov and and sbb mov adc test and and sbb mov mov sub lods mov mov cmp mov movsl mov mov lods xor cmp sbb sbb cwtl cmp xor lods sub test cwtl movsl lcall mov and cmp cmp lods and mov sub mov sub mov cmpsb sub adc push push enter xchg aad sbb or or mov fwait lret aad fstpl add aad lret xor adc or sub aaa inc inc push imul aaa xor inc imul repz test hlt mov cltd push mov pop dec rcll int3 rcll adc push lret lods xor sub mov sub mov lods mov mov sub kmovw dec dec inc dec je inc dec je adc cld enter lea sub out data16 or or adc mov (bad) mov mov xor imul dec dec inc push xchg rclb adc and mov stos mov mov mov imul sub or inc push jne into popf xchg or dec out lods cli inc mov xchg sub push test mov jbe push pop jp ret dec and leave dec dec sub call xor cmpsl xor stos test and mov fsts adc je and jbe js push jno fwait bound clc xchg push mov xor add movsb pop nop push rcll das imul push inc and stos push sbb push jge xchg add pop push test call jns inc out je xchg cwtl test xor and sub and daa fs cmp and mov mov sbb adc dec (bad) push bound rcrb sbb rcrl xchg pop aad and sub shrb mov mov mov and dec push movsl and xchg pushf sbb jo stos and and ja xor inc es xchg aam nop push mov add hlt out dec js insb inc inc dec push dec adc into adc nop push sbb inc ret adcl sub and and sbb mov andl inc hlt and inc push sub and xchg mov movsb inc rcll adc data16 jae in and dec test and test inc loop out dec fs jno mov or fsub adc sbb jecxz ss xor mov or and fsubp hlt jo loopne adc and shrl and pop mov and mov sbb xchg inc insb cmp push pop or or push or popf pop adc cltd shlb push xor sarl sub shrl sub insl inc bound movsl adc adc inc push rcrb mov sbb inc pop xor in fldl adc mov mov mov sbb popa arpl aam out test je adc ret ret xchg or xor jp (bad) sarb push push rcrl push mov (bad) pop and inc sub movsl inc mov int3 mov adcl (bad) call stos outsl mov cld dec sub push xor jmp dec dec call mov icebp cmp sub sub es loop xor and dec pusha test out negl sub xchg inc pop xor call stos mov aam imul mov sbb cmp rcl xchg pop sahf push mov fnstsw mov pop les inc jbe push ja xchg adc enter imul mov mov adc les cmp mov shll loop push nop sarl sub ljmp lcall xchg xchg mov js adc cld dec or insb dec adc daa inc into and inc and dec or aaa inc adc lods bound push les inc fiaddl aam inc out pop inc adc inc iret icebp xor inc (bad) (bad) aam outsb into ljmp test into (bad) mov shlb aam lcall (bad) repnz pushf lods rclb mov cmpsb shrb call (bad) mov bound push fcomps mov lods fmul jb push mov push into jo into into jo pop lcall lods push xchg out mov bound lock sahf repnz lods push xchg bound mov mov lods pusha xchg (bad) ljmp (bad) lock insb lock sahf repnz lods push xchg bound mov mov lods pusha xchg (bad) ljmp insb out repnz out into (bad) enter out lock xchg mov into outsb fs cwtl out sahf jb bound xchg bound data16 (bad) nop stos xchg into jo stos sahf jb xchg mov (bad) bnd in mov movsb mov loopne in pop push ljmp hlt mov xchg mov mov pusha out shlb xchg push (bad) enter mov xchg out into pop in shrb cwtl aam mov shlb mov push xchg bound (bad) xchg (bad) (bad) xchg cmpsb pushf lods push xchg bound xchg ljmp xchg mov (bad) bound loopne mov xchg mov pushaw shlb mov xchg jo bound lcall test shl xchg mov (bad) out mov xchg int3 int3 ficompl lods mov fsubp test xchg test push xchg test rclb ficomp aam data16 test pusha fimul enter pop xacquire (bad) (bad) (bad) into nop pusha fcmovbe jo test push bound (bad) test pusha push pushf (bad) rorb rorb lcall enter cwtl insb repnz test mov pop xchg fs xchg jb rorb lods data16 mov rcrb cmpsb out test (bad) push pushf jb (bad) xchg lret xchg lret cwtl cmpsb into cmpsb cwtl lret xchg lret mov (bad) (bad) xchg mov cmpsb xchg cmpsb into rclb mov cmpsb xchg stos mov mov bound into cmpsb xchg test in push out mov push xchg xchg rcrb xchg push test outsb jo (bad) (bad) xchg outsb out (bad) outsb (bad) jo pop (bad) (bad) (bad) (bad) into pushf mov jo mov xchg movsb sahf out into nop pusha cwtl (bad) nop stos pushf aam outsb into in out (bad) (bad) (bad) xchg mov test fs lcall test xchg (bad) (bad) (bad) into pushf mov cwtl test rorb mov nop jo out sahf cwtl test rcrb pusha mov sahf (bad) mov xchg shrb call sahf rol ficompl fsubrl mov enter test out outsb mov test push fmuls int3 repnz xchg jb scas jo mov pusha mov stos xchg scas pushf in movsb mov int3 pop pop into lret (bad) out (bad) (bad) faddp shrb (bad) hlt lock mov (bad) xchg (bad) (bad) mov xchg (bad) mov (bad) (bad) (bad) xchg (bad) xchg (bad) xchg mov xchg int3 mov fcmovbe xchg scas into (bad) (bad) (bad) (bad) mov repnz fadds ret mov fcmovbe mov ret lcall scas mov (bad) (bad) (bad) shrb out into (bad) (bad) aam scas out into (bad) (bad) (bad) mov movb mov (bad) mov fisubl (bad) (bad) (bad) (bad) xchg call mov (bad) (bad) (bad) (bad) aam scas (bad) ret mov (bad) (bad) xchg enter enter (bad) hlt nop movsb mov pushf (bad) (bad) mov shrb lods jo stos mov jo jo jo mov mov repnz nop stos lcall fiadd (bad) (bad) test lcall mov lock (bad) jo mov (bad) into (bad) (bad) lcall mov ret (bad) (bad) mov mov fmuls mov test push test (bad) ljmp scas lods data16 mov call hlt repnz mov test push into test (bad) mov jo bound mov bound hlt test push into mov pop pop jb mov (bad) outsb repnz (bad) xchg jo mov (bad) aam dec and mov movsb mov test cwtl sub sub xor and cmpsl sub sub cmp and cmpsb mov adc adc mov push or cltd lret fcmovu aad sbb push int adc into push sbb or (bad) cltd into adc rcrl rorl xchg or rolb dec jbe ss dec push ja dec dec jns sub sub xor push inc inc inc jbe imul aaa xor das imul (bad) cld (bad) dec or inc into jmp sub sub or (bad) je xchg adcl jnp push cmp stos pop xchg push inc ficoml xor sub mov lea test add gs mov movsb and jb repz mov pop adc adc push dec or cmp and adc shlb mov push inc cmp xor dec insb das inc inc dec imul and jb sub fsub sbb pop xor jnp jae mov dec sbb add xchg push or sub mov push dec int3 sub daa push cmpsb sub or xor dec xor or ret xor and lods adc cwtl jo nop push test push xchg pushf rclb ficomp aam data16 test movsb mov adc je push rclb stos sbb push or adc push or or rcrl xchg rorb inc jecxz xchg inc inc xor push ret addr16 xchg in mov fnsave cltd adc mov inc outsb bound dec imul push jb xor sbb leave pop or push push es mov cwtl and push dec inc push (bad) clc xchg dec hlt movl inc pop bound mov movsl sub lcall mov add push ja aaa adc push leave inc or sub dec out outsb add dec adc lea sbb sub mov xor popa inc xor sub dec pop add cmpsb xor and mov fucom sub (bad) in int mov sbb test push and les xchg in adc sbb mov mov adc push mov jb scas jo mov mov mov pop push mov sbb fstps ljmp call test or sub sub sub xor movsl xor les xor mov and xchg add dec lods dec stos into fs popa inc dec bound arpl push pop cltd movsb fstpl add scas (bad) and (bad) ret push mov (bad) (bad) xorl or (bad) mov push push je adc jle es lcall (bad) pushf inc inc push xchg mov test ret or or or inc inc stos sbb and mov test mov mov sub fnstenv push mov inc dec and xchg and enter xlat cwtl lds push bound push dec aaa push cmp push inc (bad) lock xchg and lds fmull aaa das dec je dec inc push jp push jae jp inc xor imul push xor pop xor pop push xor mov shlb and stos pop nop in adc mov xor mov test or pushf call jae cmp mov cmp push push scas dec mov ss sub cmpsl or or dec call int adc and dec jmp (bad) and dec mov jmp inc or xchg test out xchg dec inc push inc and dec push sbb push dec bound adc nop pop enter aad fsub std xor fxch test aad int rorl sub mov xchg mov lods insb nop xchg lret shll and sbb sub inc loop inc adc dec push stc adc aad mov or es fs xor push je ss (bad) cmc or repz xchg dec xchg in inc rcll jbe and ret sarl mov push push add or ficoml dec data16 pusha data16 lds xorl cmp xchg xchg or (bad) sbb cmp or inc jp mov mov addr16 dec inc ss in pop mov lods inc imul rcrl mov mov mov jo pusha xchg shr test daa jne es sbb xchg and fwait sub adc xor mov xchg sub dec lret imul add adcl xor mov or aaa stos les sbb popf shlb mov gs divb jbe push sbb aad xor pop sub push mov xor inc cmpl lret mov push dec mov xor mov dec mov or cmp dec and inc lcall lret adc lcall inc lcall bound inc (bad) rorl fwait sbb ret pop imul sbb mov lcall or pop push adc mov jp mov or dec cmpl test xor cmp mov leave xchg dec jno stos or (bad) sbb jp mov mov sarl sub sarl jnp dec and mov pop mov cmpl dec stos and cmp dec and sbb xchg mov mov xor mov or xor push bound lcall jns mov add adc and dec or jp or and ret jno jnp cmpl (bad) mov sbb leave jns jns rorl or push stos ret pop stos jnp stos ret mov jp mov mov mov and mov push adc jns cmp mov or mov adc ret and sbb mov mov mov shll jp mov mov arpl mov cmp jns sarl or mov push xor sarl mov jnp mov mov xor (bad) ret fwait dec mov bound lcall or push andl arpl sub xor mov or mov sbb adc or popa mov xor pop jns jns dec (bad) ret cmp jns and lcall mov mov cmp or imul test mov sub lcall mov mov cmp jp mov or or inc lret sbb and pop sbb lcall or bound mov dec dec cmpl dec lcall and stos bound jnp pop and mov push mov lret shrb dec lcall fwait lcall or adc or bound inc cmp or adc or or push mov cmp or and adc sbb ret xor arpl pop adc lret or mov or rorl mov dec mov dec mov mov mov xchg cmp jns or lcall mov mov and or and mov dec mov push or or mov sbb jnp xchg sarl xchg push jnp fwait push jp xor jns (bad) sub xor mov arpl mov mov lret lret push cmpl mov mov cmp mov push or or mov ret pop roll pop (bad) mov pop ret arpl mov cmp or and mov sub or adc ret arpl arpl sbb jnp sbb pop jns pop and or and imul shrb imul shrb imul rorb stos push or bound and or mov dec mov adc or or adc and lret push stos xor or (bad) adc jb xor mov cmp sub push inc cltd xchg lret or cmp mov addl ret push adc lret mov mov ret lret jp dec or inc (bad) or cmp mov xor or and mov xor push or mov or fwait cmp stos jnp inc mov cmp rol lret bound jp jb imul mov mov ret dec jp mov jb imul ret dec or or adc or mov ret pop sub inc sbb (bad) sbb lret and bound or mov ret ret pop sub cmp mov adc mov mov sbb or or (bad) stos xor bound xchg adc adc sbb or cmp jno dec (bad) stos stos pop ret jns stos stos xor stos stos jp mov mov and dec addl adc or mov jnp sub or mov lret mov arpl dec dec arpl pop inc stos dec dec mov lcall and mov arpl push xor jns stos stos and stos mov mov or xor jnp lcall jns lcall or pop mov push leave leave jnp and push lret mov cmpl or inc sbb or sbb and mov fwait and xor test mov cmpsb or int3 mov int3 push and inc xchg cmpsb (bad) xor add adc inc ss push adc arpl and adc repnz daa ss (bad) cmc add and hlt gs adc xchg add push (bad) push repz arpl and xchg inc inc xor inc xchg and jecxz push adc add jbe adc xor xchg cmpsl jae add push and mov pop mov adc stos es jns adc push adc adc ficompl int adc push ficompl push push rcll aam pop int3 rclb xchg push adc xchg pop rclb nop xchg xchg adc push push push fcmovnbe pop push adc adc (bad) mov mov fimul xchg lods out xchg repnz dec imul push push push pop imul ret mov aad xchg adc adc mov nop mov mov jo stos into data16 ret jo mov aam mov dec xchg dec dec and or xor or mov enter pop xchg test lds pop jae ja or adc xchg adc rclb push sbb push rcrl pop push cltd cltd sbb xchg popf aam dec int mov mov dec iret inc jns sbb xchg adc adc int3 rcrb rclb adc popf lret xchg cltd (bad) hlt lcall push push adc aam push xchg xchg xchg push push xchg fcmovnbe fstl dec test pushf mov inc (bad) sbb xchg pop (bad) into xchg nop out (bad) cwtl mov aaa sub dec push inc push xor xchg pop inc mov push mov test cwtl es cmpsl xor adc test adc push sub mov lods or push mov cmp xchg sbb rcl aam movsb xor test xchg (bad) fs int3 mov sub and xor push clc popf adc xchg insb mov push int3 push mov (bad) lock mov push inc pop es dec jmp jns sbb xor mov push int mov call sub inc sub rorl push ljmp add cltd xor lods call imul push adc mov push adc xor int3 stos fcoms mov clc sahf xchg jl or inc or (bad) imul test inc inc jns mov aad fs in addr16 sbb sbb and cltd sub xor cltd cmpsb and sbb and lods test adc movsb jecxz mov sub mov (bad) fsubl mov mov mov out mov jb hlt in inc gs addr16 jne divb subl dec pop mov test and xchg rcll push adc dec cmp jo xchg lcall adc cmp inc inc movsl daa stos sbb mov movsl cmpsb sub and daa mov mov iret int3 xchg jo xchg sahf pusha inc gs sbb adc push test lret fucom push xor pop xor mov movsb sub xchg test and stos ret push pop xchg push adc (bad) mov out push or mov sub jb and leave jge sub cmp lds and mov dec sahf xchg cmp mov adc push sub (bad) cmp aam sub (bad) inc xor imul and and test adc mov sub inc mov push or pop mov mov xorl cltd rcl sbb nop pop rclb inc xor adc mov xor mov insb lock mov fmull xor (bad) in out xchg fldl2t xchg adc pop pop mov dec mov cltd aam xchg dec fs xor and adc mov pop les rol pusha mov cmpsl mov jb mov sub push xor adc fwait cld dec sub in ja inc movsl pop cwtl mov sub mov (bad) rcrb cmp sbb dec dec (bad) into outsl mov dec jmp icebp sub lret cmp rorl mov mov jp inc arpl loope sbb xor and aad roll and (bad) dec (bad) in int3 test and sbb mov loop gs push loop das jmp inc pop les icebp xor out ja cmp xchg sbb adc and and (bad) sbb loope adc mov and mov ficomp pop orl sub push adc xchg jnp inc mov cmp rol lret bound jp xor test (bad) mov mov mov and inc mov sarb mov push ret dec or (bad) xor or or or jb cmp mov xchg jb ret (bad) push adc dec andl jns cmp mov xchg adc xor cmp sbb mov or jns push inc imul or sbb pop or addl or or stos ret push ret xor sbb inc dec (bad) or dec stos stos lret dec rol leave ret or or test or mov dec (bad) sub mov or or mov stos leave jns or and xchg or or xor adc and cltd leave lcall cmp or mov or mov or sbb and inc or push or xchg sub popa jns (bad) mov mov mov or cmp or lret dec xor mov or mov jnp ret mov cmpl mov mov xor mov cmpl sub leave mov xor mov jnp mov ret or shll xor dec (bad) shll jp stos ret mov dec lcall stos stos sbb (bad) lret and mov xor or lcall push jp ret imul mov sub xchg adc stos or lcall sbb ret mov dec ret jns stos test jns stos imul stos sbb mov ret or jp pop inc mov stos push roll lret mov push mov stos adc cltd ret fwait jnp xor jns jb mov mov cmp mov stos dec push test jnp jns jns and and lcall and mov jnp mov jp mov jns mov adc jp adc pop dec jae sbb or sbb addl adc or jnp cmp jns jns xchg sbb jno mov jns lcall jns jns and jp lret jns leave xchg xor addl sub cltd jns jns jae inc or lcall jns jns and jp jb jns jns xchg pop jnp jns mov jns lcall jns jns and jp jb jns jns xchg jb cmp jns lret sbb jns jnp push push jp jb jns jns xchg (bad) jnp mov cmp xchg or rorb mov lcall pop mov jns jns xchg lcall jns lcall jns jns and jnp and jns leave xchg mov push xor lcall jns jns and jnp and jns leave xchg lret mov jns rcrl pop ret jns jnp imul and jns leave xchg adc mov xor jns sarl jns jns and jnp and jns leave xchg sub leave xorl jns lcall jns pop and sub jnp jp or or jp lret jns pop xchg inc or or jnp sbb mov or mov inc xchg jns jns mov or jp mov pop xchg pop or or jnp mov jns or mov and mov or jp and jns pop xchg jb or or or mov or mov jp jns jns mov or jp jb jns jns xchg mov or or test cmp mov dec lcall and mov xor mov inc stos jnp adc lret mov xor mov inc stos jnp push (bad) cmpl sbb cltd mov mov inc mov dec cltd (bad) cmpl mov mov xor jb pop dec (bad) lret mov dec or or mov jns rorl lret mov dec or or mov jns rorl lret mov dec or or mov jns rorl lret mov dec or or mov jns rorl lret sbb mov or or mov jns rorl lret cmp mov or or mov jns rorl lret pop jnp mov or or mov jns lret lcall stos rolb mov dec fwait mov mov dec and fcomp or sahf push pop adc aad push push dec push pop mov sbb push xchg cltd lcall fwait pop mov dec adc popf mov nop push push adc pop push xchg xchg sbb xchg xchg push sbb xchg or xor dec push dec popa addr16 pop outsl xor test mov rorl push or or sub push xchg adc lcall or rcrb dec adc push push push pop pop xchg push dec adc adc or mov push ja xor dec (bad) sub mov (bad) repz adc mov arpl mov sub call xor xchg adc pop jbe xchg push mov or mov adc push adc or dec dec or scas dec mov sub popa jns shrb pop popa inc sub fstl nop int dec out xchg xchg xchg arpl xor adc push jbe adc mov and pop lds xchg dec int3 mov push sub movsb jne cmc jbe xor add popa and dec stos xchg pop lock out pusha rorb adc mov daa sbbl cmpsb push arpl xor xor and cmp mov addr16 inc mov inc xchg shll sub xchg mov je test lcall out push insl sub sub sub ror in jmp or lods dec inc push enter xchg adc sbb sbb fmull into push out mov mov dec enter test (bad) hlt pop mov dec cmp xchg xchg lcall xchg mov imul imul adc xchg push test sbb mov xor push and cmp xchg sbb leave mov xor xchg pop int sbb jbe mov jbe lret cs xor jb cmp push inc cmpsb hlt adc lret inc xchg sub cltd imul inc mov mov pop enter leave xchg imul sahf cltd xor daa mov bound clc popf sbb sub mov fs imul (bad) enter dec mov sub push popf int jno aaa or inc into inc mov or jae pop xchg dec sub or fcoms and bound mov adc (bad) stos mov dec daa inc or dec cwtl fwait nop bound cld inc ljmp (bad) andl test dec push imul sbb and cmpsb and cmp enter lds dec leave sbb dec pop popf or out ficom fstl pop mov xchg mov fs jb adc rclb (bad) and clc cwtl xchg jl out cld xchg ljmp bound mov jmp mov dec or inc mov rcll fild aaa stos lods aaa mov mov push mov sbb leave xor and inc xor and xor xchg in jmp push dec dec xchg xor es xchg cltd mov aaa mov lods and push dec mov jg jmp xchg push mov cwtl out addr16 dec ja mov pushf rcll fstpl xchg push icebp sub and adc pop dec adc push adc cltd pop pop rcll cmp or enter cmpsb inc es cmp xor insb inc jb and mov pusha xchg push mov cmpsb cmp mov dec jne dec mov es cltd xchg mov pop dec sub inc leave sbb enter aam test jae adc fs inc ljmp pop cld dec or js in dec je adc lds rcr adc xor out inc dec sub xchg test aad adc jo pop fsubrs nop int popf xor test jns push popf fstps les mov xor or xchg sbb xchg adc (bad) mov push testb mov leave mov xor xor adc add sub movsb cmp mov mov nop mov inc dec dec dec cmp adc cltd push je dec lret adc inc dec pop inc xchg push xor sub mov daa scas (bad) stc sbb ficompl push sub inc pop repnz inc cmp mov test mov insb inc push mov int3 mov jmp dec adc inc sub out daa xchg scas loop das call bound (bad) inc dec adc or stos dec ret popa jp mov jnp inc dec (bad) stos dec ret popa jp mov jnp inc dec pop lret sub adc stos dec ret popa jp mov dec jp dec or pop xchg cmp dec xchg mov pop dec xchg mov inc sub ret jb pop dec mov xor jno leave ret sbb or or and pop and mov and fwait roll push mov or jns xchg xor pop push mov sbb mov arpl mov or cmp sub cmp and add mov push dec xchg mov pop push mov sub or sub or dec (bad) cmp lret dec sub and pop mov sbb pop ret jnp dec sbb rol lret lcall push or cmp lret dec sub and lret sub dec sub sbb pop mov sbb jnp dec sbb leave (bad) mov sarl mov inc bound or pop xchg cmp (bad) lret inc inc or inc inc or cmp sbb or inc or subl mov pop sbb jns roll push mov or pop or inc bound or shrl stos or xor or dec xchg stos mov sbb stos or bound or pop and xchg dec mov (bad) inc dec mov push xchg dec ret (bad) lcall ret xchg dec mov (bad) sub sub lret dec ret (bad) lcall mov mov (bad) adc sub or or or ret mov lcall jnp inc bound or stos mov and sub bound or xor xor mov lret sub and stos dec ret popa jp mov dec (bad) cmp mov (bad) cmp jnp inc or xor xor mov lret sub and lret sub sbb lret sub adc stos dec ret popa jp mov imul shrb imul shrb lret mov mov (bad) or xor mov mov jb mov pop or xchg or or mov mov cmp mov jns jp sbb (bad) cmp mov adc xchg rol leave mov jns (bad) sub mov popa mov pop inc dec sub or mov mov jns xor xor jp adc or or xor and mov sbb mov ret push jns mov xchg mov or rorl cltd ret fwait jnp xor jns ret jb mov mov cmp cmpl mov cmp rol lret bound jp mov jb dec bound xchg dec mov push xchg and bound xor push xchg and bound jns mov mov sub push xor mov or sbb shlb lret sbb sub stos cmpl inc and mov jno mov xor mov and mov jns jp or sub adc stos mov and jp xchg and or mov jnp and (bad) imul mov leave mov cmp mov jnp mov xchg and dec (bad) mov sub or lcall or dec ret rcrl imul or mov mov mov leave mov cmp jns stos dec jns jp ret fwait and imul jnp xchg or or stos jnp and cmpl and jb or and or and sub leave stos and stos inc mov xchg stos xor jnp sub jns mov adc sub jnp and or leave mov cmpl xor mov and mov mov leave mov jb jns ret pop mov leave mov add adc dec ret cmp push ret sub xchg mov dec fwait and push adc inc stos stos mov and mov adc sub imul mov and ret cmp leave mov mov mov sub (bad) pop mov ret adc mov leave mov cmpl and cmp lret xor mov jnp arpl cltd fwait sbb mov dec sbbl jp lcall xchg sub jb sbb xor arpl rcl sub mov sbb imul shrb leave mov or xchg lret inc and pop arpl cmp or xor jb sbb and xchg mov sbb xor mov mov or mov pop lret adc inc lret sbb and imul das dec ja inc dec inc outsl addr16 (bad) mov movsl adc xor dec inc dec outsl inc imul dec push ja dec adc les addl add addr16 out inc jecxz xchg xchg adc int3 mov inc lret xchg movaps inc jmp stos scas sbb int3 int3 cltd mov ficoml push rcll fcmovnbe sub (bad) push or push or les xchg daa js shll gs and inc bound pushf adc pop push adc sbb int popf fstps les xor xchg popa leave (bad) mov ficom sarb loop inc (bad) movb enter jae and sub and lcall inc test push jbe mov xchg dec lods push inc js adc test sub mov and and xor mov movsl or gs lcall ret lea inc dec and lret adc dec and dec pusha lea inc dec xor push cltd add ror in pop out nop inc adc adcl les push call int3 repnz sahf mov (bad) (bad) call jmp xchg pop pushf aad xchg adc nop xchg js xchg jbe sub dec sub sub stos push cs mov das xor sbb je adc mov inc dec inc aaa dec ja push dec aaa dec push jae dec pop lret (bad) lcall loop adc xchg popa and adc dec lds push adc test (bad) lds inc mov or loopne insl in sub das cmp sbb or sahf push pop adc mov and enter dec test popa dec adc popa lcall push arpl xchg lea test push inc mov or movsl xchg jecxz fs adc push pop (bad) adc pop push or test stos es inc pop mov or aam loopne fcompl (bad) pop push fs int3 aad popf cwtl fstp jno jnp mov xchg and dec (bad) mov sub aad lcall dec push sbb dec insb repnz add and cmpsl cmpsb sbb cmp mov cmpsb mov dec stos sahf rorb rcrl (bad) xchg push inc and sbb mov fs es data16 fs outsl in inc bound adc push bound test stos push xor cmp cmp and dec push adc pop inc and push adc mov pop gs jb jp mov and stos mov and and cmc or (bad) jmp lret ficomp push mov bound mov sarl dec jmp cmp mov (bad) push sub add mov cmpsb xor mov dec dec lods es shrl es mov sub dec sub or dec out imul adc xchg adc push push into xor dec addr16 inc int3 jb sub push adc adc mov jo mov push push add loope inc imul imul hlt and aas mov adc xchg xchg xor movsb sub rcll adc and sub aam adc mov dec pop xchg int3 int3 int3 movsb bound nop push dec stos into sahf mov (bad) loop inc mov inc leave sub in and push arpl icebp sub inc test and (bad) adc in mov test into rcrl sbb test dec out cwtl aad xchg popf mov push cwtl lock rolb sub push test push xor mov pop and sub repnz mov stos sub lds xor or push test roll sbb or or popf xchg dec xchg hlt fs les xchg test cmpsb hlt push cld dec dec mov popa adc es mov mov mov bound cmpsb push out inc xor cmpsb popa sub in (bad) xor push (bad) fsubrs jb scas push loope cmp test dec cmp outsl das loop ja (bad) shr mov adc jae addr16 aas push stos bound and and sub fs es mov es lcall imul cwtl xchg test aam out push push sahf jecxz push es adc sbb data16 jmp and jb mov adc jns and adc sbb fwait ret jnp or sbb xor jns bound jp pop xchg jns (bad) mov mov stos stos or adc sbb xor jns bound jp pop xchg jns mov (bad) or or mov stos stos or cltd mov sub bound or ret inc rorl rol stos sbb and mov sarb inc xchg mov stos mov mov cmp mov xor mov dec mov xor mov mov jns mov adc and adc jns pop xor mov mov mov xor jns and adc sub cmp mov sbb or xchg or or mov mov stos inc lret xor and ret push mov jns jb and adc and ret and xchg inc rorb bound or mov mov mov jns jns jb and push jnp xor jns dec bound jp rorl jnp sbb ret and and xchg and mov jnp mov and sarl jnp sbb adc ret arpl push or mov cmp sbb cmp and jno xor lret stos or lcall or jb or or mov popa jns lret (bad) mov xor or or leave stos xor cmp mov ret lcall mov mov jb xor jns or jns mov jns xchg or or or pop sub adc sbb mov cmp mov ret cmp or or bound cmp sub inc cltd ret mov sbbl and rcll or inc stos fwait dec (bad) mov dec lcall or adc cmp mov cmp jnp sbb jns jns sarb pop lret adc jnp mov mov or jns mov lret xor sub xchg mov xor pop bound sbb or or andl stos mov dec ret or mov xor bound ret lret sbb adc jp jns mov cmp mov and jns and adc and lret push stos stos or push mov stos push sub sbb dec pop lret sbb and or push mov dec pop jno or mov or and dec pop mov dec pop lret rorb (bad) xor cmp push xor pop xchg mov imul lcall mov xor cmp push sbb imul or pop stos or jnp mov or (bad) adc or mov bound or xor pop cmpl stos or stos dec jns mov mov arpl and jns jp adc or or sub jnp cmp mov push stos or or xor or or inc adc mov adc or or inc mov cmp push inc and jns pop inc rolb sbb dec push lcall mov (bad) xor or jp pop stos or cmp push cmpl or xor or push mov jnp mov ret pop sub cmp cmpl stos or inc stos dec or inc jp cmpl sbb ret (bad) push adc xor jp lret mov shrb lret mov test mov adc dec push or or push mov or mov sub sbb mov (bad) sub adc or or adc or or and xchg sbb ret push jns stos xor mov bound mov pop stos stos cmp cmp mov lret mov bound mov or jb mov sub sbb mov push cmpl or rolb or or dec sub or xchg mov mov cmp or dec mov bound or and leave (bad) jnp jno push sbb jnp or mov and jb inc or bound mov stos cmp fwait lret rclb or mov xchg cmp or fwait rcrb jnp push or or dec (bad) fwait rcrb jnp xor or or sbb jb or or dec (bad) sub xor sub cmp or or adc mov or xchg sbb mov bound mov adc cmp dec and sbb xor pop xchg xchg mov xor sub mov mov pop cwtl mov aaa cmpsl and cmp sub stos mov mov clc xchg adc or pop pop mov pop adc int push mov or or lea sub dec sub dec or shrl (bad) rcrb cmpsl sbb push pop inc xchg mov stos mov mov leave mov xor mov dec lea xchg adc or dec push adc pop mov adc xchg cltd nop xchg dec xchg rcr adc rcrl adc ss or sbb push mov sbb test cmpsl push xchg or lea sub test cmpsb inc ss add xor lods sbb leave mov push dec dec ds aam enter pusha xchg (bad) cmc add cmpsl mov cld dec mov push cmc and xor roll cmpsl jae inc aam adc ja out push jb mov data16 inc mov jecxz fs xchg adc je in adc inc je fisubl mov mov sbb xor cmp enter push and push xchg sbb sbb cmpsl lcall dec or mov nop pushf push xchg push dec push rcr int test test (bad) je sub popf inc rcrl mov push add cmpsb xor mov xor push dec push imul dec push dec pop inc dec sub inc inc inc inc xor push inc popa addr16 inc and and dec in jg dec je in and ja xchg mov bound pop mov lcall xchg sbb mov movsb test out xchg hlt out xchg xor mov rolb mov mov (bad) pushf loop mov (bad) pop data16 jno and ja gs movsl push and adc or or inc jo mov push inc mov and lcall cmp xor movsl movsb and mov cltd mov mov lea repnz sub inc loop inc enter fist and and or adc sub jnp (bad) (bad) lea or pop xor popf or loopne insl cmovns or xor loope cltd inc sbb dec lods stc adc rclb inc cwtl aam mov lods push jg sbb rcl inc out mov sub mov shrb lret mov push xchg adc aaa dec std pop popa pop in pop rcr mov lea adc rcll cwtl cltd adc xchg aam insb jmp mov stos sbb dec mov pop stos stos cmp sub push adc xchg push xchg mov aam into (bad) and xchg push mov sub call sahf ficomp lea dec leave leave or mov pushf int jmp sbb dec sub sub ror adc inc add je sub adc xor push adc popf (bad) lea sub mov pop adc jg int leave test sub imul sbb or mov and sub mov sub out xor dec inc inc adc adcl clc xchg mov loop xor mov dec sub mov sbb lea out inc insl jmp std xor gs movsl cwtl (bad) mov in fldcw cs sub das cli inc mov lcall or and inc cmp jae lds push xchg ret xchg test push xchg cmp ds aaa gs mov decl lahf xor jnp xorl or bound les and int3 dec inc and xor mov mov dec jmp and lock nop out (bad) test nop pusha xchg fpatan cmp loop push mov sahf adc and sbb aam jo in out and inc mov and stc lcall in xchg push int3 loopne inc es inc dec jmp sub sub push push out sub sub (bad) lds imul es push popaw cmp adc xchg sbb repnz in mov sbb enter mov sbb sub lahf in dec push adc dec mov enter cli push xchg leave mov mov adc adc pop adc sub popa inc dec movsl scas and xchg xor lods xor and scas lret es xor inc data16 and stos repnz inc (bad) in in pop push mov xchg mov enter movsb int3 xchg lcall data16 int3 out aam mov mov cwtl test xchg scas jo mov out mov (bad) les mov aam data16 pop pop push push (bad) sahf jb hlt lods xchg call push (bad) (bad) (bad) (bad) (bad) mov xchg bound lods mov pop pop push mov pushf shrb xchg (bad) (bad) (bad) (bad) mov mov mov (bad) enter into (bad) out (bad) (bad) (bad) (bad) mov insb ret (bad) (bad) xchg enter movsb int3 xchg (bad) jo loopne (bad) (bad) (bad) (bad) xchg call push (bad) (bad) mov mov enter jb (bad) rcrb pusha stos xchg xchg int3 jo (bad) (bad) test pop pop push mov mov mov test loop fnop mov ror pop (bad) mov pop into test enter jo (bad) xchg into (bad) (bad) (bad) mov jo (bad) mov (bad) mov loop int3 jb test fimul test lock lods in jb mov mov in aam pop push mov mov in pop pop pop pop into pop into test mov mov insb out out call jo xchg mov into cwtl out mov jb (bad) test push pushf rol mov fmull (bad) pusha stos (bad) (bad) nop stos mov test mov movsb into jo into out fiadd xchg pop pop scas lods fmull into push out stos lods fmul pop enter test hlt (bad) xchg fcompl push call pop sahf jo pusha (bad) (bad) out sahf pop enter into ljmp enter int3 nop (bad) test fsubrp jb pop pop push test (bad) test push pushf into (bad) mov fsubrl sahf mov stos enter int3 movsb mov mov movsb mov cwtl test lock shrb int3 repnz int3 into mov (bad) (bad) (bad) test ror pushf movsb lret mov mov into shlb pop pop push cwtl test repnz (bad) hlt in xchg ljmp (bad) push fs out push test rorb (bad) jb insb jo (bad) push repnz ficomp test stos mov (bad) jb shlb stos rol (bad) mov (bad) (bad) xchg rorb xchg aam movb stos loop mov fcoml (bad) (bad) (bad) (bad) insb hlt cmpsb xchg test lock scas nop mov stos xchg out lock stos stos mov out into pop into mov push hlt test (bad) nop mov mov mov mov jb shrb xchg (bad) (bad) (bad) (bad) into jo pop lcall mov call out mov (bad) into mov insb test in fcmovb data16 mov mov mov mov mov (bad) mov push (bad) into into jo xchg sahf pusha pusha stos (bad) lock sahf stos mov (bad) ror bound mov into pushaw mov shlb mov insb into xchg enter int3 movsb (bad) (bad) enter int3 mov out (bad) insb (bad) cwtl mov out mov (bad) jb xchg mov repnz nop pusha int3 in xchg into mov in pop pop pop data16 mov enter push mov jb (bad) (bad) (bad) (bad) xchg test mov (bad) enter enter xchg push shlb jb stos mov mov xchg into (bad) (bad) (bad) nop mov jo push out rcl stos mov (bad) cwtl fs (bad) jb into mov (bad) mov call (bad) enter sahf mov xchg pusha (bad) pop enter test (bad) test push pushf into (bad) mov hlt in xchg call (bad) enter lcall pusha test mov pushf into (bad) mov call mov (bad) push mov mov stos mov pop data16 xchg enter mov mov (bad) sahf out stos sahf (bad) lock int3 pop pop into jo stos mov mov lcall mov shlb mov test call jb cwtl enter loop xchg xchg bound ljmp xchg test push mov fadd into mov push ljmp sahf out data16 into cwtl mov push mov lcall xchg ljmp repnz in int3 mov jo les jo lcall hlt lcall hlt lcall in mov ret (bad) (bad) (bad) (bad) (bad) xchg (bad) (bad) xchg (bad) (bad) hlt out xchg loopne xchg (bad) shrb push xchg mov test xchg and cmp mov test mov mov sub and cmpsb pushf and and xchg cltd movsl cmp mov sub xchg xchg xchg inc gs addr16 jne push push and inc pop xchg in push cmpsb repz pop and repz inc inc xor inc adc adc adc xchg push movsl fs inc jecxz xchg repz and (bad) xor dec mov mov adc sub push inc inc dec jae imul lods mov mov lods xor add flds aas int3 (bad) jo loopne (bad) inc adc inc popa daa lcall xor arpl test xchg add test and mov sbb sub mov mov sbb loope mov mov or mov dec sub prefetch sub test xchg add arpl bound je cmp sub jae aaa mov xchg xchg inc inc inc daa imul xchg push sbb popf (bad) add push xor cmpsb data16 test xchg xchg adc add inc addl pop push cmp xchg stos or dec sub (bad) mov test or dec out sub out das xor sbb xor xchg aad popf aad fwait sbb movsl aaa pop rcll push pop or adc ror sbb sbb ror (bad) adc fisttpll lods (bad) enter test dec lret clc mov jb movsb cmpsl xor mov add gs aam sbb test shrb xor cmp stos push inc data16 sub and and test ja adc pop es andl adc hlt in je (bad) and xchg and push push push pop push inc push push test lods or lea xor mov xchg push jmp push push pop or or dec push sbb push (bad) and mov sub dec cmp lds mov rorl loope dec dec adc stc adc or je dec je js cmp inc enter test mov les mov mov mov mov mov (bad) mov mov and daa cwtl or popf and lea cltd cltd rcrl int3 adc stos aam push xchg inc popa xor clc cltd xchg je arpl xchg lds adc pushf mov and movsl movsb sbb cmp inc xchg adc bound sub and sub or and jmp iret push dec inc insl sub push cmp or xchg pop in inc xor jns lcall popa xchg xchg adc and jnp aaa xchg sub or daa clc mov movsb dec call (bad) push adc adc sub sub push adc push sbb adc js xchg es cmp pop xor dec mov cltd mov push sbb push frstor inc jae dec mov push leave mov ror lea int sbb mov xor or ret int adc int lret lret xor inc xor ret popa jp mov dec mov jns mov push movups rcrb shrb xchg rcrb jb xchg mov inc or xor adc lret lea push inc pop dec xor mov or lea xor dec add ret (bad) and test xor sbb mov jns push lea pop test gs add jae inc xor inc and xor cmp sub push lods xchg cmp add fmul inc pop mov dec push adcl arpl pop inc movsl push ret mov pop lods dec dec dec push jbe gs xor jnp mov out jl push pop adc dec or adc or test test xor xchg mov mov test mov mov sbb pop movsb sub and jno mov test mov xchg add adc sub inc mov movsb and mov cmpsb xchg xchg or xor test pushf scas and sbb mov cmp xchg mov jb nop out mov out hlt cwtl adcl sbb call out sub and cmpl (bad) int3 adc stos xchg or hlt test pushf test xchg push test xchg pop xor movsl arpl xchg xchg testl popf push xor pop icebp sbb loop push cltd fldl push stos test fs and adc mov xchg and sub dec xor dec mov mov stos fs push inc inc adc jl push adc loop inc in das xor popf fiadd mov cwtl push mov fwait pop push add mov pop mov and inc fsubp adc insl data16 mov dec dec jns push push adc lcall add adc dec push rclb xchg xor xor sub sbbl lcall and bound xchg mov stos or sbb mov mov mov mov adc mov or or and xor or jp adc lcall and jns pop dec jp ret dec ret adc mov jns orl jnp add stos sub jb or or mov jnp and or mov mov mov or adc and xor cmp imul jnp ret cmpl push stos or pop or mov and dec push jns mov stos xor jp mov sbbl mov dec shll or dec (bad) stos dec dec ret dec push ret sub jb adc mov jns and xor or xor ret pop rol leave mov sbb rol jnp mov or or push adc or sub fwait push stos mov mov ret stos ret sub jnp push dec or dec bound mov xor push or sbb xchg cltd cmpl fwait or sbb lret pop or mov stos mov sub jns dec ret or xor or or or mov sub jnp pop jp jns push lret sbb stos jnp xchg jp jns mov adc xor lcall leave cltd jns ret and jp push or and jp push or sbb or (bad) sub popa pop xchg jno jp or or fwait ret xor jnp sarl jns push adc or sub sarl jnp ret mov jp mov rorb sbbl sbb xchg lret cmp or adc jns mov jnp mov ret stos cmp mov mov xchg leave mov inc pop or sbb xor xchg or adc mov adc or adc cmp dec mov mov xor jnp jnp or mov stos jns pop sub lret sbb dec pop lret sub push jb or rol dec stos ret mov mov sbb xor leave pop pop stos xchg or ret imul xor rcl (bad) mov ret lcall ret imul mov ret or jnp sbb mov adc jns pop sub cmp lret jns xor xor and imul or or or or (bad) xor or xchg xor jnp mov mov ret inc lret mov sub sbb cmp rorl dec sbbl dec sarl and xchg jnp sbb jns jns rclb jae (bad) arpl stos cltd (bad) or or or or dec and mov mov sub jns xor mov xchg jnp sbb jns jns rol mov mov mov stos lret mov jp xor (bad) push pop inc dec and cmp or sbb stos dec dec addl jns jns (bad) mov xor (bad) (bad) jb or jno sarb or mov roll mov jnp stos jns pop sub imul push pop jns jp jp pop cmp sarl stos test jns stos imul mov roll and lret mov cmp stos test push adc test jnp jb adc mov xchg mov jnp mov or dec stos ret ret dec mov mov test cmp mov (bad) mov or imul stos sbbl and lret sbb push and dec push and lret and inc xchg and or lcall ret roll sub arpl mov or or stos xor mov or or mov inc lret dec or mov rorb rorl or mov mov mov jns xchg cmp or or stos sarl adc jns mov jp adc jp mov adc mov (bad) jnp or jb sub jp or inc xchg sub cmp or or (bad) ret pop adc cmp dec jns jnp ret mov mov mov adc jp stos mov mov xor stos or stos ret mov mov pop lret addl xchg dec or pop sub dec and sub daa and movsb mov cmp mov aaa and xor mov cltd and and mov mov xor mov and mov movsb and xor cltd cltd cmp test mov fnstcw lods movsl mov movsb loope mov mov mov fstl push xchg test out lock mov pushf xchg mov cmp or inc ret dec or fcmovnu sbb rorb out stos pushf ret hlt mov xchg aam pop bound arpl adc mov and sub daa mov ss xchg push pop pop sbb sbb xchg cwtl nop xchg inc repnz inc cmpsb xchg testb ret mov sbb outsb ret iret and xor push ja push pop push int3 mov insb mov mov sub sbb or mov cltd or sub das adc cltd mov pop dec mov aad in and ljmp dec inc push sub stos dec leave mov mov gs sbb mov mov daa sub dec dec dec jns sub outsb das outsl inc clc lcall mov mov lods aam dec jo jae inc push cmp inc dec push imul outsb mov cwtl lock push xchg inc xlat je push jne xchg test dec and mov sub stos adc dec push out je adc cltd adc ficom push push adc or push and xor mov adc xchg cltd xchg sbb rcr pop mov mov (bad) leave dec bound jo popa insb dec cmp xor jbe xor inc inc insl enter stos xor sbb mov je mov je ret add jb cmp lods sbb pop inc and and adc (bad) es xchg aad push daa sub cltd pushf and inc lret adc in jmp ljmp or cmp (bad) mov and mov jno cmp ss pop das jmp push cs lret test inc or or dec out xchg and pusha stos and enter jecxz (bad) test insl (bad) out inc push pop cld lea stos scas and enter pushf lods loope push lds test fcom dec sub inc push mov fistl mov out imul popf ljmp pop mov xor and and and sub mov es jge pop mov pop pop leave test mov dec (bad) xchg mov pop adc outsl aaa les mov mov inc (bad) cmc xor inc inc xchg sub jp or dec or xchg fwait les cld dec es xor adc cli inc inc mov dec or sub icebp xor or movb imul and stos mov sub mov fdivrs xor adc iret or dec in ljmp inc adc pushf int3 push push adc mov (bad) dec dec adc inc sbb xorl push inc (bad) jmp sub push jno and popa enter leave mov sub adc fisub jbe dec int daa data16 dec out push and push adc adc out test icebp and adc leave push dec gs and movsl add sbb movsb cmp jbe and mov push dec fnop xchg popf nop int push pop mov lods jmp mov mov (bad) and mov dec (bad) push movsl sub cmp imul mov inc sqrtps or mov inc repz and enter pop adc inc push mov or inc adc sub adc daa sub xchg addr16 xchg push xor mov popf lahf adc loop outsb (bad) out gs fimul mov fisub jbe dec out xor xor dec dec sbb fistpl fs insb das cmp xor mov les and es xor gs nop leave push fstpl and sub and lcall inc (bad) cmp (bad) rorb or inc xor lret inc mov cwtl rcl cmp push push xchg lods adc mov sbb push push push adc push fcmovnbe push push xchg xchg pop push pop mov xchg sbb popf rorb popf rcll lcall adc adc xchg pop rclb push pop push push push rclb rcrl push lcall pop xchg pop into adc push dec lret cltd nop rcll push fwait rclb push dec push rcrl mov xchg push push push push or xchg xchg sbb push push push push push push push adc or lea xchg sbb push push dec fst push pop dec pop nop lea adc pop rcrb rcl push sbb rcrb xchg dec sbb (bad) rcr rcrl push sbb push push dec dec aam aad dec adc sbb dec int3 (bad) or sbb dec push mov mov push adc nop push pop adc rclb push sbb push or (bad) push sbb push dec dec adc sbb adc lret fimull adc push or into adc dec int3 (bad) or into adc pop int3 push sbb push sbb lret lret into pop xchg sbb rorl adc push push adc popf push cltd ficom dec ficom adc push push mov pop sbb cltd xchg push dec lret into push cwtl push nop pop push pop rclb push push rcrl pop push push push push adc xchg (bad) cltd cltd adc pop pop rcrl or aad pop dec push push adc push push or xchg push or (bad) adc cltd xchg xchg dec ficom push pop sbb push sbb rcll popf int3 push rorl adc push push xchg xchg aad sbb rorb aad pop dec sbb lret int3 pop push lcall push nop push (bad) cltd cltd mov ficoml push mov adc aam lret lret int3 push or cltd push push adc push rcrl lret into push dec ficom push pop xchg pop (bad) push dec xchg mov or lret int3 push or xchg push sahf push push push pop popf rcll push lcall push pop push push push fcompl fwait rclb pop aam dec push rcr sbb push push pop adc adc fcomps push push cltd xchg sbb push xchg into sbb fxch aad sbb pop aam sbb nop push aam adc push push push nop lcall push push pop fstps push pop rclb dec push xchg sbb xchg sbb adc rclb adc lcall push push push pop adc xchg push pop ficoml push push push push xchg or cltd push push adc push rcll xchg push sahf push push push fwait int3 push dec push rclb xchg push xchg push push push push push xchg dec into pop push adc nop rcrl push push pop aam dec xchg push xchg push push push push push xchg dec into push fsts nop rclb xchg push xchg push push push push push xchg dec into pop push adc pop fimul xchg adc xchg nop aam adc push lcall push pop sbb rclb push popf fcmovbe push pop or xchg push or lea xchg push nop pop mov sahf adc ficoml push push push push xchg sbb adc push push push pop adc pop push adc aam pop lret fimull rcll adc adc xchg pop sahf adc push xchg sbb xchg aad fwait rcl dec into dec adc aam dec ficom push push into adc xchg nop aam fsts xchg xchg aad push pushf push xchg xchg or xchg pop sahf adc push rclb ficoml push pop rclb push sbb pop rcl adc fcmovu adc push push sbb push or adc push push aad fcmovbe push pop int3 push aam nop nop push adc lret int3 aam rcll rcl popf fcmovbe adc cltd int3 fstp rcll dec adc pop mov pop rcl push xchg xchg push rclb or xchg push pop (bad) adc rclb adc dec sbb push push push mov xchg pop rcll push popf push or xchg push pop rcl nop rcll cltd fstp popf mov int adc push adc adc rcrb push pop dec adc rcl xchg sbb push pop fstps rcll push pop adc xchg sbb xchg pop sbb nop xchg dec push adc push pop adc aam push pop rclb lret fisttpll mov rcll push dec push adc pop ficompl pop into sbb push pop adc fsts aam lret into push dec push adc push pop adc nop aam dec int3 aam lret int3 aam rcll aad fst rcrl nop aam push pop rclb int push push xchg sahf adc xchg sbb push push rcr lret or lret lret fimull pop push nop pop push pop ror int nop nop rclb lea dec pop int int adc nop mov pop pop rclb push dec lret push adc push adc rclb ficompl adc adc int3 pop fwait sbb nop pop or (bad) push mov nop pop mov adc dec into pop pushf lcall or ficoml fcmovbe push push pop fimull aam fcoms nop push fwait pop push push pop aam pop adc xchg push push or pushf push push dec push push xchg pop adc pop ret test mov stos stos and mov mov mov test mov cmp mov sub xor xor mov mov or test mov fldenv adc lods sub or push lds mov bound test gs push push dec jo (bad) jo insb movsb (bad) cwtl out mov mov jae pushf mov sbb in and add mov fstpl popa int inc inc lods inc mov xor mov push test sub mov or enter aam test and adc inc arpl xor icebp sub rorb adc sbb adc lret jmp or or mov mov int3 push sbb push sbb (bad) mov sbb rorl adc push push adc popf push cltd fimul outsb repnz dec arpl jae xor push nop pop dec test xor mov cltd cltd adc pop inc fmull das data16 roll lcall hlt les in arpl xchg push jbe sbb int mov nop fiadd into movsl adc xchg aam mov int3 stos (bad) adc xor mov mov dec xor mov mov outsb sub sub push inc dec push adc fcomps adc xchg into adc fxch aad sbb pop aam sbb nop push aam xor xor mov mov mov fisub (bad) xchg and dec xchg es xor dec jmp dec push xor movsb cld lret dec in test dec jg int3 out inc out xchg dec mov dec push xchg push adc xchg adc pop ficoml lcall daa movsl and in dec pop inc adc sahf push and les test movsb mov and xchg dec lods stos jo inc repz mov and or daa cmpsl mov add adc iret dec sub dec dec push imul fs adc cmpsl xor test xchg push xor and cmpsl xor dec fiaddl jp push push mov enter adcl mov gs dec imul cwtl push mov pop xor dec mov mov pop mov lret xchg (bad) gs jbe fs push jb mov enter faddl sbb sbb cmp add mov scas es dec es pushl fwait mov and xchg sbb xchg nop shll inc and xor xor int3 fstp shll jp dec pop xor mov jl enter insl dec aas adc dec cmp xor xchg pop push adcl and lods ss mov inc xchg mov dec stos inc xchg adc xchg or push mov (bad) repnz mov inc es sub cmp cmpsl mov lods cmp in dec jmp and loop xor pop mov pop xchg adc and or pop adc and outsb and jecxz mov cmpsl mov jl leave (bad) jns (bad) jmp imul dec push xor bound les adc aas stc adc adc and nop sahf into gs cmpsl mov xchg and adc mov mov mov loopne lods ljmp jno mov inc cmc mov cmp mov ja cwtl mov jmp inc push outsl inc push in inc arpl mov inc sub sbb sbb rcrb push mov xchg call jp (bad) cld dec enter test inc and pop adc inc je adc dec test sub in push popa inc (bad) push cmp inc in imul jae dec xchg pop xchg adc ljmp shll cwtl jg ret mov or invd dec push pop xchg push jg sbb pop pop daa adc int3 inc push fs (bad) adc loop inc mov scas out dec push pop adc mov adc das enter xlat cwtl int test cmp mov repnz aam jb mov loop push loop jbe adc and (bad) in fs xchg movsl jne and jmp and mov inc adcl mov and scas push (bad) stc adc dec dec pop xchg push adc push add xlat in outsl js cltd leave adc fxam cmp adc ret mov or imul mov sub or or dec mov push and push lret bound mov or and sub jp adc or sub mov or adc ret pop sub push lret mov dec or xor jae sbb or (bad) xor or mov push adc and orl push sub sbb or mov sub jp adc or sub or or adc mov and jae sbb or sbb (bad) pop leave mov push sbb mov mov or or sbb sbb mov jnp adc jns cmp mov inc imul ret ret pop sub push lret mov dec or xor jnp sbb sbb stos sub inc sbb mov leave (bad) push adc ret sbb mov push lret and sbb pop sub or mov rorb sub jnp jns mov (bad) or ret bound push ret mov and popa lcall ret dec mov (bad) cmp and popa lcall lcall jp pop adc sbb cmp inc push jnp or and or or sub inc sbb mov mov sub dec sbbl xor mov adc or or xchg mov lret sbb cmp sbb or or mov ret or adc mov (bad) or or mov ret or stos shll or test and sbb imul lret or or jnp xor jp mov mov mov mov test mov push stos roll xor jnp xor xor sbb mov inc mov jns or xor imul xor jnp popa jns jns dec stos mov stos dec (bad) inc adc jp inc lret and rol lret or push cmpl sub dec pop mov stos dec mov sub (bad) jp pop ret mov or rorl jns mov mov jp imul popa mov dec inc lcall jp ret mov mov cmpl mov and jno lret lcall or sbb push mov cmp xor stos mov or or inc xchg sub stos or jns stos xor jae xchg adc cmp or jnp cmp push (bad) pop dec lcall stos dec (bad) lret cmp or stos mov mov or cmp push lret pop cmpl sub jns dec push cmp or xor xchg or mov lret mov cmp mov or stos mov or dec mov and sub or or jp stos mov xchg adc and and jb sub or jns mov xchg mov xchg xor adcl mov jp and sbb xor jp cmp or dec mov sub sbb push (bad) pop dec lcall and add add fldcw add push sub sub dec sub sub enter stos (bad) sub dec jmp xor dec push inc dec inc push das js cmp imul xchg (bad) nop xchg (bad) nop stos mov mov fmuls int3 push nop (bad) mov (bad) xchg enter mov and cmp ja push cmp ja push addr16 dec fldl rol test mov movsb cmp dec cmp imul in out push jp xchg pop call mov or mov sbb sbb sbb xor rcr cmp xor int3 enter pop sub dec ljmp inc out lret dec or iret dec push xchg in lret das push adc pop or les xor shrl jp jp pop adc sbb cmp inc push jnp (bad) and or or sub fwait or mov adc push rorl adc adc push lcall push fwait (bad) push adc les test or xor roll in das dec lret movsl add movsl push addl jne xchg dec les inc arpl mov dec push xor hlt test test mov xchg xor test lods and dec sub push lods sub js insb movsl xor test lcall adc pop adc and xchg movsl lods inc sbb cmp sarl (bad) aad in inc cs cmc je xor and push sbb into (bad) nop sahf cwtl mov lock shlb arpl and stos cmp and lods test inc (bad) inc push mov lea xor xchg loopne push inc inc adc and sub sbb mov cltd rcr xchg aad jb movsb mov sub mov sub out cmp outsl imul into inc es sub popf xchg fstl es or push dec push cmp adc xchg bound or sub or mov xchg pusha movsb fisub jns in dec xor inc into sar jmp mov stos aaa hlt xchg inc inc pop arpl adc mov sbb push lret arpl je test sub cmpsl cs mov sahf inc cmpsb xor push adc and int3 movsb mov nop (bad) repnz xchg ljmp dec sub inc nop test rclb enter xchg adc aam roll adc and inc lea dec mov ja test adc movsb mov adc cmp dec test cmpsb xchg sub mov inc mov data16 adc xor and sub add fstp dec into sarl and dec or mov enter popf rclb adc xchg loop xor and enter xchg adc push xchg pop cmp pop lcall adc stc or sub cmpsb cmp adc pop xor aas xchg mov es mov mov movsb sub cwtl pushf adc mov xor jno mov dec mov sub mov inc ret pop dec test lret daa xor xor mov mov xchg (bad) and insl xor inc inc inc adc xchg push js xchg mov xchg cltd les (bad) decl push inc dec dec push outsb inc clc cwtl dec jg inc enter push (bad) xor and and and mov clc cwtl push test pushf dec jno bound inc les sub dec mov dec es push imul ficoml fxch insb stos aam inc adcl call (bad) (bad) (bad) gs je das mov xchg test cld dec dec xor mov push and xor adc rcl mov push imul cmp adc int push mov mov mov adc pop or inc xor or rol cmp push dec push inc adc les ds les into insb mov mov (bad) xchg mov mov push mov out (bad) aam (bad) (bad) (bad) mov mov cmpsb loop (bad) (bad) rcl mov push pop pop pop lock mov in xchg (bad) in call aam lcall lcall test pusha xchg outsb pusha mov pusha mov pushf jo in push (bad) out hlt cwtl (bad) out bound movsb lods fsubrp out shlb xchg insb lcall out nop mov bound mov out lods hlt mov xchg int3 rcr mov stos xchg bound (bad) xchg (bad) stos mov pushf test xchg bound mov hlt repnz pushaw xchg int3 pushf mov out mov repnz pushf lods rclb mov shl pop fs mov mov (bad) (bad) (bad) (bad) (bad) stos mov (bad) (bad) (bad) xchg lods fmul loop (bad) out mov out (bad) pushf sahf rolb into mov loop (bad) out mov out (bad) movsb sahf into call lock mov cwtl movsb xchg mov repnz movsb xchg ljmp fmuls nop stos pushf lcall mov (bad) (bad) (bad) (bad) mov xchg data16 lcall mov aam lcall push (bad) (bad) shlb (bad) mov xchg (bad) (bad) (bad) (bad) aam out (bad) xchg sahf aam scas (bad) (bad) (bad) lock mov cwtl int3 xchg shrb bound xchg test (bad) lock mov jo pusha cmpsb mov stos xchg test stos lods mov mov (bad) enter enter shlb (bad) mov test call pop jb xchg test pop enter pop data16 lcall (bad) ljmp movsb lcall mov insb repnz enter (bad) jo scas insb xchg aam pop pop pop pop enter pop data16 lcall (bad) ljmp movsb xchg pop lock (bad) jo mov pop data16 lods (bad) mov mov xchg mov test mov (bad) xchg sahf rorb lcall bound mov mov pop data16 lods mov pushf test mov pusha ret call push out (bad) xchg rol xchg mov pushf enter insb (bad) lock (bad) xchg pop push mov pop fdivs lcall (bad) test (bad) (bad) (bad) mov cwtl push data16 hlt data16 mov enter out sahf call mov (bad) (bad) (bad) ret loop scas aam cwtl (bad) xchg (bad) ljmp cwtl hlt ljmp fidiv xchg movsb mov test insb (bad) lcall sahf into data16 mov into test (bad) int3 fsubrp push (bad) (bad) mov scas jo lods rclb mov shl pop rcrb (bad) mov (bad) (bad) (bad) (bad) stos mov (bad) (bad) (bad) test (bad) mov hlt enter bound mov in xchg in rolb mov mov (bad) xchg nop mov (bad) out (bad) (bad) (bad) mov (bad) mov into xchg bound mov (bad) (bad) xchg test enter out sahf faddl lods fisub pushf mov mov ljmp pop mov test test push (bad) sahf rcl into into (bad) (bad) aam out (bad) bound in xchg insb xchg mov (bad) (bad) (bad) hlt fs in mov lcall xchg test movsb aam out (bad) xchg mov (bad) enter movsb xchg pushf lods xchg xchg mov cmpsb stos mov mov enter movsb xchg mov shlb (bad) nop xchg out stos mov ljmp xchg bound aam mov loop mov mov test jb xchg mov xchg mov mov mov rol test push repnz xchg mov xchg mov mov jb xchg aam in call pushf lods xchg (bad) (bad) test (bad) nop xchg out stos mov mov enter movsb xchg stos xchg xchg (bad) (bad) (bad) (bad) test fadds into (bad) (bad) (bad) mov (bad) (bad) (bad) (bad) (bad) into nop pop mov mov (bad) int3 (bad) (bad) mov lock (bad) (bad) (bad) test (bad) hlt mov (bad) (bad) (bad) (bad) nop out (bad) (bad) sahf out mov (bad) int3 (bad) mov insb lock (bad) (bad) (bad) test mov in rolb (bad) (bad) nop out (bad) xchg dec and fwait and movsb mov test xor cmpsl mov stos test pushf rcr lods test imul mov sub mov adc sub shrl in sbb pusha (bad) xor pop popf or adc and shll mov loope fcom add fucomp xor fstpl sbb mov push and xor adc pop fsub lds inc loope aad sbb add jmp shll popf inc int lds lods sbb and imul adc sbb mov sbb in inc or cmp inc cltd cmp int sbb movsb lods in and pusha lds dec jns push aam xchg xchg imul mov sub inc inc enter xchg cmp jle and ja adc pusha xchg xchg dec out mov repnz push jne inc jne addr16 xor insb inc inc inc insb fs dec push dec and lret rolb dec cmp dec inc inc dec inc push push das xor mov aam lcall push cltd xchg push xchg rcll in dec push cmp imul inc dec mov jns bound push adc ret inc sub sbb dec lds insb sub push push enter pop adc daa mov inc arpl adc dec push dec das js imul adc rorb inc jae xchg mov dec sub cmp aad push movsb addr16 xchg push ficoml push popf loop jb inc inc push loop push (bad) and sub mov sbb xchg cmp dec insb (bad) lock mov dec adc (bad) daa inc aam es and (bad) or stos popa stos mov and rcrl or xchg aad sub mov or stos mov (bad) ljmp inc mov jmp xchg push and adc jg xchg jnp fwait xor push xor je nop in pop jecxz push xchg or aas adc and inc inc xor mov dec dec adc or lds cmp and jb movsb cwtl pushf inc ljmp mov lret dec test adc sub pop and ja in mov inc aad inc push inc adc xor jl mov pop ficoml nop les mov inc loop push adc dec daa xor adc fstl movsl bound and or xchg movsl test xchg cmp cmp xchg in or sub aam in loop insl call jp sbb adc xor sub adc adc inc enter mov je and jo mov xchg divl and inc in xchg popa push leave and clc nop push movsb dec dec push inc les and cwtl xchg xchg and clc sahf adc or push lahf loop dec stc or push cltd icebp sub inc leave jno movsl or xchg xor lods data16 adc sub fadd xchg xchg mov movsb jb and mov adc xchg add mov inc xor jb mov sbb out enter and xchg lods enter or push cmp dec inc push push int3 loopne ret pop and lret lret adcl mov xchg adc push ficompl dec push push lea lods mov data16 cmpsb out xor ss addl xor pop aam int sbb cmp xor mov aaa movsb sbb pushf test and sub imul xchg mov push xchg mov sub mov mov fwait icebp xor repnz mov icebp sub jl sub lret cmp aad xchg nop xchg cmc mov les stc cwtl fisttpl shlb push inc xor repnz and push addr16 xchg rorl cmpsl call or dec jb dec out in imul dec das or sub les xor xchg dec cmp or adc cwtl and adc sbb xchg mov aaa lods mov pop loop dec adc and dec dec mov mov xor adc xor xchg loop data16 out out insb push inc dec dec xor fs inc and stos mov dec fs push or popa jp adc roll mov dec mov mov sarb and cmp mov or dec addl or dec jb jp jnp lret bound or dec mov mov and adc lret sbb xor mov or dec stos mov mov adcl or mov mov cmp stos or lret jp adc sbb or dec xor or stos mov sbb jnp and rcrb jb mov and jp stos jb sbb mov mov shlb mov sub or and sub or dec or ret pop roll or imul mov cmp inc xchg xor or ret pop ret pop ret mov inc mov lcall pop pop stos or ret pop stos xor jnp mov jp mov or pop cmp or dec mov sub mov or dec mov inc mov xor mov dec mov (bad) xor mov mov add ret sbb (bad) lret lcall and ret jp xor or and and xchg or mov dec ret stos ret jnp sbb push xchg and or xor mov arpl ret and (bad) sub xchg or cmp ret mov mov mov push stos mov or jp jb sub lret xor stos ret cmp jb and mov cmp inc xchg and dec mov pop ret lret popa mov cmp or push inc sbb (bad) dec mov ret cmp jb and mov cmp inc xchg and orl ret lret popa mov cmp or ret and jp or jp push stos ret cmp mov (bad) ret pop sarl or push and ret jnp xor or xor xor jnp stos ret cmp xor dec pop ret mov sbbl or or or push inc mov mov jns stos stos or dec sbbl cltd (bad) mov ret pop mov xchg xchg or or lret jnp mov mov jno jnp or push (bad) xchg pop inc xorl or jp ret pop and jns and push jnp sub or dec mov mov dec sarl mov jno lcall mov jno or adc or adc jns ret jns lcall or sbb jnp rorl or cmp mov mov sbbl jb or or xor jns stos sub mov fwait bound or adc or mov lret sbb jnp stos sub mov arpl jnp addl cltd mov imul or xor mov mov arpl mov jnp and leave (bad) adc cmpl lcall or or dec ret adc mov or xor jnp and fwait mov and lret stos ret lcall push test dec jnp mov or mov xor fwait jp mov or or lcall lret jns jns stos jnp mov dec mov ret push stos xor inc sbb (bad) push mov bound pop mov jb lret inc mov cmp jns jns jnp (bad) mov dec xchg sbb xor cmp leave fwait jp xor or and bound mov jp xchg and or mov push leave mov jns jnp (bad) ret mov (bad) xor and or dec mov and bound dec bound lcall mov cmp jns jns jnp (bad) mov pop and cmp or or dec mov and bound dec bound (bad) mov jb sbb or mov push leave mov jns jnp (bad) ret dec stos mov push xor or push and fwait jnp xor or dec mov and bound dec bound mov adc or mov push leave mov jns jnp (bad) mov mov mov cmp adc or dec mov and bound dec bound jp jp xchg roll or mov push leave mov jns jnp (bad) mov (bad) push xor cmp rcrl or dec xchg xor cmpl addl mov jnp sbb sbbl jns mov jp mov or or and cmp sbb and and daa fwait and pop mov and sub cmpsb xor sbb pushf mov cwtl sub mov test mov call mov xor inc arpl xchg xchg push jne jb jbe xchg jne push movsl push push adc fs arpl add nop push inc outsl cmp inc and dec xor popf pop aam adc int3 repnz into mov into movsb fdivp xchg int3 hlt pop lcall inc xor dec inc ss inc inc push inc dec push gs inc dec imul pop pop imul cmp dec inc dec fs xor push jno dec cltd fisttpll and test adc adc repz mov mov adc mov sub movsl cmp sbb sub push sbb rcrl xchg pop sbb xchg lea dec bound mov ret sbb (bad) lret lcall and ret jp xor push mov fwait stos lret bound cltd ret jno dec ret test adc xor mov arpl ret sub xchg or cmp test dec push ja jp jb inc push push push cmp inc dec push imul dec push push cmp dec xor cmp dec adc dec cltd rol mov nop fsubs lret stos iret dec dec dec push xor inc dec xchg push dec es xor stos mov popf int3 jb jo xchg out inc ja je xor push cmp mov pushaw mov push shlb cmp jne dec push push push inc outsl aaa jne sub mov cltd cwtl sub inc pop mov mov into ret es sub loop inc and sub adc into movb dec xchg test ss mov loop fs subl cmp enter sbb mov xor movsb xor sbb enter (bad) popf dec inc inc aaa dec ja imul fwait pusha nop rolb lods fmul fdivp xchg push stos sub xor es mov movsb es les stos push xchg outsb mov rorb mov pop lret in xchg vpblendw push push jmp inc stos mov jae cwtl push jb and dec dec cli push lcall lret adc adc les xor mov mov and and (bad) mov outsb inc adc and sub push push pop sbb les icebp sbb pop dec dec aas rclb sbb sbb in es pop adc daa mov pop incb xchg jbe sub mov inc les xchg pop hlt test adc xchg je sarl and cmp ret (bad) nop scas mov hlt mov mov es xor and movsl add cwtl cwtl rol int mov outsb or loop jno je int3 mov xchg inc mov imull dec push sbb iret adc mov out mov xchg (bad) in xchg movsb pop dec dec push sbb test and pop pop sarb out jno or pop push test nop test aaa dec decl movsl out ja adc xchg fnstsw adc mov xor lretw repz pushf daa sbb les xchg test fs mov inc sbb and and cld dec inc loop cmp cmp out dec push inc inc inc mov lret mov movsl imul inc push xor pop pop xor dec add fs sub lret pop or xor lret xor icebp cmp incb fs les mov pop call cwtl cmpsb cmc test sbb xor aad daa and or sbb cmpsb or dec in jl or push mov xchg in sub movsl movsl inc adc add push xchg inc repnz fs mov push je xor push jbe hlt and and test int xor jle mov push cld dec nopl push xor mov sub aaa push (bad) int3 xlat mov jae adc push outsl mov dec sub fnop xchg adc and enter stos adc nop loop dec adc inc mov sbb adc dec sbb push adc or lret ficompl sbb pop fwait rcl sbb push push sbb push push sbb rclb push push sbb xchg sbb push sbb cwtl rcl push push rcll (bad) sbb fstp lret adc push push pop push dec adc fstl rclb pop or push adc push adc (bad) sbb push adc dec rcl cwtl mov or fwait int rcll popf rcll push push push dec mov adc push push cwtl mov or fwait int pop adc popf rcll push push push pop push sbb push push push push push adc dec aad push push push pop adc sahf push adc fimull pop pop rclb or (bad) dec push fcoms (bad) xchg pushf rcrb xchg cwtl xchg sbb xchg pop rclb fcmovnbe pop xchg push (bad) push fcmovnbe xchg rorb adc pop sbb xchg adc pop dec sbb push push push pop xchg dec mov sbb push xchg cwtl sahf or xchg pop push cltd sbb rcrb push pushf lret lret lret lret aad fcmovnbe xchg rorb adc cwtl xchg or lret ficom xchg ficoml adc lret lret into adc lret lret lret rclb fimull pop xchg pop pop rclb pop sbb mov sbb rcrb push rcrl push push mov lret into push pop pop int3 push pop xchg dec rcrl adc lret fcmovu sbb (bad) xchg cltd rclb adc push push push push push push dec xchg push xchg adc rcrl push push push push or push push pop cwtl cwtl rclb rclb popf mov adc pop adc pop xchg dec rclb pop aad aam push dec int push adc push pop xchg push sbb int or dec xchg fmuls sbb adc fwait or fisttpll xchg fcmovnbe push rcr rcrb dec fcmovbe push dec push mov adc xchg xchg adc cwtl push push pop push push fimull push push pushf push push dec push fwait xchg nop pushf push adc aam cltd sbb aad pop rclb or ficoml push push push push dec dec dec push or fnop push push push push ficoml pop mov fimull push popf rcrl push sbb sbb rcrl push lea rcll xchg pop or fcoml cltd sahf sbb aam xchg pop adc fst push pop pop rcl xchg xchg pop adc pop int3 push pop xchg dec rcrl adc adc push push rcrl push push push pop adc rcrl push push xchg lret into push xchg fcoms fmull sbb xchg lea push rcrl push push xchg lret into push xchg fcoms xchg dec rclb rcll xchg sbb push push rcrl push push sbb pop int3 push rclb or rclb xchg fcoms int3 push popf rcll push push push dec push rcll or rcll push (bad) adc int3 push popf rcll push push push pop int3 lcall mov push push push push push (bad) pop xchg push push push push or sbb fnop nop popf int lcall cwtl pop popf rclb xchg push push push push or sbb (bad) fstl xchg lcall nop fistpl cwtl push mov adc xchg push adc ficoml pushf push pop dec int3 aad dec nop rcr push push push rcll or xchg cwtl rclb push push rorl or lret lret lret xchg aad fstp adc push adc push push push dec dec adc fcmovnu rclb rclb adc sbb adc push push push push cwtl sahf pop ror sbb push fimull aam push pop lret aad push xchg sbb pop adc rcrl rcr xchg push push push sbb push aad push pop dec sbb push push adc xchg into sbb cltd push mov adc pop dec or push or pop ficoml push push push push push into sbb push push fcoml rclb or push pop or rcrl mov push pop push pop rcll adc popf rclb pop or dec sbb push push (bad) push adc fstps adc pop push xchg push rcll push push push push dec push lea or mov pushf push dec push xchg lret int3 aad dec int3 push sbb into sbb sbb xchg cltd push mov fimul push or push push push into or rclb push dec pop sbb cltd sbb sbb push rcrl xchg pop adc xchg adc nop push push adc cltd popf rcr dec int adc dec push pop int3 lret push int dec pop xchg (bad) pop popf rclb pop lea into push rcrl mov into sbb sbb push push rcll adc sbb sbb adc cwtl rclb xchg dec xchg pop or adc fcoms push xchg sahf adc adc aad push push push push dec xchg sahf adc push rcll adc sbb sbb int pop rcl xchg cwtl nop xchg pop pop int3 push pop xchg dec xchg pop or fstp fstpl push into push xchg popf adc adc xchg push push push push push inc pop ret xor sbb mov xor cltd xor mov mov xor mov stos cmp mov cmp xor lcall or imul pushf mov mov and pushf and sbb mov xor sbb sbb mov and sub pusha (bad) int sbb mov and fstpl and xor adc mov push inc xor push insl and movsl xchg mov adc xor xchg test jbe xor and addl adc xor push movsl es gs je adc hlt sbb rclb adc pop sbb xchg adc push loope lea fimull adc lret mov mov mov pop arpl nop nop dec (bad) sahf aam cmpsb out adc push inc and clc xchg (bad) mov pop mov inc inc sub xor mov int lea call sub sbb or cltd les pop bound imul and inc lcall mov int push and pop pop imul movsb xchg in inc inc sub dec push push insb xor je xor dec push inc nop int push gs lds mov sbb lret enter inc jno mov jb jb mov jb sbb jp lods test or sbb pop mov jo mov lds xor hlt adcl inc inc inc test adcl add xchg and les push jne clc lcall and mov xchg rclb fmull ss inc pushl xor xchg lea cmp cmp mov mov rol cmp cmp cmp outsl and or adc pop and leave mov mov mov inc xchg push test test inc mov push pop (bad) aam adc push pop xchg adc xor sbb test cltd push and or xor cmp mov lea inc dec sub pop mov xchg xchg xchg mov mov test sub daa mov mov rclb rcll sbb dec inc bound dec xor fs inc and lcall push xchg sbb pop adc rcrl rcr mov stos nop fcom loope mov dec out and les xchg add add xchg adc adc mov daa add mov pop lcall and or dec sbb sahf mov stos es sub mov dec dec lahf mov mov jg sbb fwait mov push es mov bound enter mov inc jl out (bad) xchg repz adc inc stos add dec jp and xchg inc ror dec push jbe inc ja push jo adc xchg mov cmp les icebp xor or lret out scas mov les popa dec dec pop jae adc mov inc dec adc adc inc jbe and sbb sbb rcrb rcrb sub xchg mov cmp mov xor cwtl sbb imul jae push push xchg mov ret push jo inc (bad) inc mov les mov pop decl clc nop pop xchg adc push mov sbb es clc popf sbb fwait mov popa int3 dec sub scas mov mov sub das dec jbe popa inc dec jo dec adc xlat adc mov lea mov sbb adc mov mov arpl and push ja xor insb (bad) xchg mov pop (bad) rorb repz bound pop xor mov sub mov xchg repz sbb push (bad) adc inc sbbl dec nop lods fmul bound adc call inc aaa inc inc insb inc adc xchg mov gs cmc inc add in cmp mov mov mov popa call or xchg adc jo dec out dec push dec push gs rol mov (bad) es push inc scas xlat adc adc inc hlt xchg sbb les daa xchg rclb pop dec (bad) shr mov pusha dec enter jmp jo imul inc or cmp dec out add xor jnp pop push dec test jno mov adc inc arpl adc pop push push es xor fstl adc dec sub daa addr16 xorl push test xor push mov and xor sbb mov inc test mov mov int and xor je xor dec xor ret outsl stc sbb ljmp inc aaa inc adc and mov jg mov inc movsl mov xchg jbe push je jne push test fs push adc xor les xchg fs fs push adc adc mov xchg push xchg push aaa xchg je (bad) hlt adc add add adc ret xchg and ret xchg hlt (bad) inc arpl inc test addr16 adc adc rcll addl xchg adc aaa add adc adc and xor es and adc adc xchg adc add xchg pop xor adc mov es adc xchg inc adc arpl inc inc je adc adc xorl xchg xchg cmpsb push jne xchg adc adc jne push test jae xchg xchg movsl push jne push divb les pop xchg xor repz add and xchg gs adc mov and push out movsb inc testb adc xchg inc mov data16 hlt gs inc xchg adc es push aam jbe andl adc xor xchg in notb xor adc xchg adc test inc xchg in movsl inc test xor adc xchg push ss addr16 adc inc cmc es adc xchg adc and test inc ss les les jbe push movsl push jae push jbe in xchg adc (bad) (bad) inc addr16 jbe xchg aad inc jne es addl adc divb pop je push movsl push jne push jbe in and xchg jae aad jae xchg push notl jne addr16 movsl push jne push divb mov adc repz xchg repz xchg add repnz (bad) repnz es jae data16 adc test pop xor adc adc push test (bad) mov repnz inc addr16 push test notb xchg mov xchg add add xchg adc adc adc jae in push xchg xor hlt mov xchg adc xchg pop xor fs movsl push test fs xchg inc adc xor cmpsb addr16 movsl push test xchg (bad) test push notb hlt aaa inc test push mulb hlt aaa inc test movsl push test gs addr16 repnz test xchg ret test in inc and xor adc lds xor xchg push mov adc adc adc jae in gs addr16 inc pop mov cmc jbe ret inc and movsl jne push inc repz push xchg fs arpl repnz mov add loop add divb adc mov pop inc movsl xchg inc xor addl adc jb test adc ja push je jne push test fs xchg adc je les xchg fs fs test pop mov xchg push test je mov adc add add adc ret xchg add ret xchg hlt (bad) inc movsb push pop adc es adc adc xchg adcl mov push xchg xorl xchg xorl xchg xorl cmc xorl inc inc inc hlt gs pop adc es and xor push fs adc inc adc add daa adc arpl arpl xchg pop xor adc mov mov adc dec and test mov and mov mov mov and pop mov lods xor cmpsl mov mov sub test mov leave and sbb adc or push inc rcll addl xchg adc aaa add sbb sub mov sbb test daa cmp in rcll nop mov enter insb iret xor adc sub push mov lcall pusha int movsb in sub rcll push cmp cmp push push push push dec gs inc dec js pop cmp jae push das and mov or pop xchg adc stos jae shlb jnp stos pop or mov jp stos mov arpl xchg inc jp push mov mov mov jb xor jb jnp mov mov lds pop movsl cmp push and sub dec es pop dec inc arpl lret or dec imul mov xchg push outsl inc dec push xor outsl dec push dec xor dec dec je outsl pop insl push push inc push bound and push (bad) adc cli push inc jb xchg ret sbb stos dec xchg push dec mov insb sahf repnz stc sbb lcall shlb repz pop xchg movsb es xchg cmpsb sub cmp pop xor push sbb push or push mov movsl sub imul inc or lods insl sub or push xchg xor push dec mov scas and sbb mov sbb pop and mov xor pop sbb mov lods pushf sub or loopne and adc xchg mov or sub ljmp dec popa push enter fsqrt inc mov mov stos mov jle cmpsb hlt in repnz and movsl jne push inc sub imul je mov adc push mov mov xor xchg lods js push jno mov xor hlt mov lcall mov xor inc inc inc hlt gs icebp sbb or decl and adc movsb shlb mov outsb out mov cwtl shlb mov cmpsl cmpsb sbb inc xchg enter aam cmp dec xchg pop xor lods inc pushf fnop rolb imul push sbb fidiv sbb lcall adc inc inc arpl movsb and dec mov xchg dec and xor cmp push push movsb xchg mov push or mov mov sub xchg test lods fs xchg push xchg pop inc ja fs in fstps in clc fwait xchg mov dec and mov mov shll das xor jns inc aaa mov cmp inc mov lods mov push xor jg rcl out aaa aaa dec jae loop outsl cmpsb cmp mov cmp pushf outsb inc and pop loopw aaa adc ret xchg inc gs sbb cmp xchg roll mov test ret adc dec movsl dec aam lret cltd mov pop and imul adc sbb lods mov jno mov bound jno and inc mov (bad) cld lea in inc jmp sub or lods mov mov sbb inc add xor and and inc out push cld into jmp adc sbb adc inc adc and stos xchg add leave mov jae xor sub scas cwtl jb jb les in lahf (bad) out cld dec and incb movsl arpl fdivs mov mov adc addr16 lds jno daa jno xor mov sbb xchg pop clc xchg sbb and push jecxz pop int3 dec lret pop bound cltd test fisubl out gs ret add cltd sbb push shl xor push fs or cmp xchg lret mov mov rorb outsl bound mov dec lcall xchg sarb pop mov (bad) test es mov mov into jg pop mov popa inc leave inc loopne or or in or leave in out sub imul push push dec cs add or in in test jmp into jmp add mov outsl dec or or or mov call sub cs or sub jmp mov sub out sub mov sub leave push dec push cmpsb sub sub dec jmp add inc dec and lods dec push inc push enter sub imul jmp call add sub es enter in sub mov sub mov or in imul ljmp sub test or in out ljmp call es (bad) sub in out (bad) in out call (bad) add int mov in mov or leave jmp inc in push int mov sub or mov or leave out sub sub imul sub or ljmp dec daa or sub or sub or test out es sub mov dec into call or sub and or mov in jmp int3 das dec sub sub sub in in out addr16 mov (bad) in inc sub (bad) out mov sub sub dec sub sub sub leave dec out or es sub push push int (bad) out insl or in sub dec sub cs ljmp sub add sub lea dec scas push dec lret or sub sub sub push or sub sub sub addr16 or push call sub or push sub sub inc call dec sub dec scas or test inc in sub call or jmp inc ljmp mov mov sub sub sub sub imul call (bad) es sub sub push lret or enter sub mov dec into call or out lret dec dec sub lret dec into sub sub lret dec dec in jmp sub sub test int3 (bad) stos (bad) sub imul dec push dec es sub push in cs sub mov sub es dec enter int lret dec or sub sub sub mov or sub sub (bad) in push es jmp insl test dec dec push sub es enter mov sub mov or inc or or sub mov ljmp ljmp es sub sub dec dec sub sub sub out jmp or out into dec sub pop es sub dec int push gs sub sub sub outsb (bad) sub test push xchg dec push gs sub dec dec or leave stos xchg out dec ljmp sub add jmp test sub daa cs push es scas test mov ljmp dec into call sub call insl push out vpaddsb push insb out call push in jmp das es mov (bad) imul leave or in imul vpminsw lods out sub in sub dec in lea dec int3 vcvttpd2dq sub out dec es lret in sub lret sub in dec test vpaddsb or outsb imul cmpsb dec test es out leave test sub call mov push or in push stos cs or imul daa sub inc sub sub cs sub das push or push leave sub mov test sub mov dec into call sub or in mov sub imul sub sub sub int dec in sub in or mov stos (bad) sub dec test sub lea leave xchg lods test mov mov sub out dec out enter mov xchg mov sub imul inc push or daa push sub in (bad) and call or ljmp in int test sub in int imul and xor sbb mov pushf loope or fucom int leave movsl fisttpll mov sub hlt in xchg adc je push fs add repz je movsl add test repz cmp sub notb cmc xchg inc and and (bad) mov mov push movsl andl andl pop adc xchg mov inc je or or das sub jmp sub push pop push push dec xchg xchg aam or push pushf push adc rcll sbb mov push xchg gs addr16 push cmp adc rcrl aaa das mov sbb lods in mov inc pop test sub adc ret xchg test and cmp (bad) push xor inc and imul stos or dec dec stos out test es xor imul xor xor dec sub dec dec das popa inc popaw jp les cmp xor inc xor and mov jae xor xor sub dec pop jne add frstor add add inc enter in call int (bad) out insl or pop push dec jne push jo addr16 dec jns push loopne and dec xor pop insl push dec inc push test test sub mov movsl mov mov (bad) lock inc and add xor jae sub cmp test cltd xchg int3 mov inc push push jno push loop imul jnp jnp and xchg sbb sub or and xor mov inc inc out sub addr16 cmp aad lea xor and insl es (bad) lret dec inc jbe and xchg xor dec je sub das inc push push jns ss enter mov in repz (bad) hlt lea sub mov stos mov pusha mov bound enter addr16 scas daa outsl cltd loope rcll adc sub cmp push push push xchg nop dec fst or or fmuls fstl sub mov hlt repz mov movsb inc push lahf nop fnstenv dec ljmp scas mov xchg mov sub into cmpsb mov shrb les adc cltd (bad) add iret mov insb out xchg repnz push popf mov inc lds in mov sub int3 in inc and cmp mov leave fnstcw inc rorl dec xor insb das enterw les xchg pop dec leave mov mov fcom dec push les pop ja sbb pop popf rcrb dec pop fimul (bad) repnz sahf fcompl popa mov mov (bad) xchg les in int or sub (bad) mov popa cltd and cld mov sub sbb adc xor test mov test sub pushf sbb mov xor imul stos test sub push mov fmull jmp dec mov and out icebp xor nop fstl in and xor imul mov xor and aaa lcall rcrb add sahf sahf fs mov sub mov push jb inc xor pop sbb cld dec es (bad) es repnz mov sbb jnp (bad) and lcall mov (bad) bound and jns push es pop mov mov cmp mov inc addr16 popa bound dec stc push dec ficoml mov push je (bad) sbb adc inc xchg outsl mov and jnp push daa xor cwtl int3 shll scas int3 fmull xchg test ret fmulp call mov dec insl sub xor mov add dec adc test and movsl and sahf (bad) xchg xchg (bad) in pop inc xchg jns ficomp test enter arpl mov mov lods out (bad) xchg sahf shr cwtl xorl pop sub enter and dec and test adc cltd fwait (bad) and push nop loop jo test dec out sbb xor lods and or inc adc adc xchg sub or (bad) xor iret dec int3 sub popf int3 bound adc xchg xchg loop inc movsb sbb mov mov xor jl dec xchg sbb sbb dec stos xor sbb push or jb stos push aam mov jo xchg movsb int3 out mov (bad) (bad) xchg mov int3 repnz mov fdivs (bad) push mov xchg call jo lret pop pop jo mov in (bad) (bad) (bad) (bad) insb xchg pushf int3 (bad) (bad) test (bad) lods enter pop scas into pop aam enter insb cwtl test movsb int3 aam lret (bad) (bad) xchg call mov (bad) mov mov fdivs (bad) (bad) test lret pop pop jb stos push shrb jb outsb data16 push mov (bad) (bad) (bad) xchg mov outsb pop pop push bound lods enter lret lret shrb mov movb (bad) (bad) (bad) sahf jb data16 fsubrp mov mov mov repnz outsb pop pop (bad) fdivs sahf aam pushf into (bad) (bad) insb mov test (bad) lods enter mov pop jb mov jb test mov mov call mov into (bad) (bad) pop data16 shlb lcall xchg test lock data16 insb xchg (bad) pusha (bad) (bad) mov int3 mov mov mov call mov mov data16 pop data16 pop jb cwtl mov cmpsb cwtl movsb int3 hlt pop movsb mov out push mov outsb push pop pop pop (bad) fsubrs (bad) mov (bad) xchg mov jb pop pop stos mov (bad) (bad) mov nop shrb scas outsb pop in pop pop insb nop test (bad) (bad) test jo mov mov in xchg out hlt cwtl (bad) insb pop lret call shr lock (bad) (bad) into lret test mov lcall (bad) (bad) xchg mov pop pop bound mov into out pop pop pop into jo lcall pop pop stos mov jo loopne mov data16 nop lcall (bad) (bad) mov lock mov aam pop pop jb pop lock jo mov pop int3 pop pop stos mov pushf test mov mov aam scas xchg push pop pop pop insb lcall in data16 loop mov rcrb movsb in pop pop rcrb bound sahf shlb lcall pushf movsb lret pop data16 xchg insb xchg aam pop pop jo enter scas mov bound movsb mov push pop pop pop stos mov into xchg scas (bad) ret push shlb (bad) (bad) mov (bad) (bad) xchg test enter lret (bad) (bad) xchg in nop insb mov test hlt pop aam mov insb lcall (bad) mov pushf jb jb mov (bad) pushf (bad) (bad) (bad) (bad) (bad) mov xchg out bound (bad) push xchg nop out (bad) xchg (bad) (bad) mov lock pop jb mov movsb mov movsb movsb xchg mov xchg mov mov jb sahf rcr shlb into mov stos mov nop ret les scas into mov mov scas ret (bad) mov xchg scas aam mov pop mov xchg pop les out loopne (bad) test movsb xchg hlt pop in pop pop into jo mov pop push (bad) mov insb out (bad) lods ljmp mov out push test ret (bad) enter mov (bad) (bad) mov (bad) (bad) (bad) (bad) into lret xchg mov ret fiadd mov mov mov fdivp movb pushf out xchg (bad) (bad) (bad) (bad) in faddl fsubp bnd (bad) xchg mov mov mov test mov mov jo pushf faddl (bad) (bad) insb (bad) out (bad) (bad) xchg into (bad) (bad) insb mov push mov (bad) push mov (bad) (bad) (bad) (bad) xchg in nop stos mov xchg test movb (bad) (bad) (bad) hlt out mov hlt (bad) (bad) (bad) mov fiadd jo mov hlt (bad) mov (bad) mov lock test xchg lcall pop lock jo (bad) mov mov lcall jo loopne mov pop in pop enter mov mov mov push ret test into xchg mov test fcmove jo pusha xchg (bad) aam mov pop bound (bad) enter (bad) xchg bound aam mov (bad) (bad) mov fisub mov (bad) enter (bad) mov xchg test test fsubl mov enter pop lock fidiv mov aam movsb fiadd xor sub push addr16 inc dec cmp push data16 push xchg mov inc jae addl xor mov push je adc xchg inc fs mov inc in or mov rcrb and jno push fs push das das push addr16 push fs pop push ss inc inc adc push lcall sub pop mov mov mov fdivs adc and mov inc dec or dec daa sub out in cmpsb scas testb (bad) mov in out mov leave es call push xchg cltd pop xor sbb movsl stos stos mov xor pushf mov mov movsb out xor das lods insb pop imul push dec and das pop pop data16 pop jb mov jb test inc je xchg adc daa and (bad) rcr mov adc inc pop test data16 mov ret inc adc push cmpsb sub sub sub cmpl mov fisttpl (bad) mov xorl lret lret mov or push sbb push or mov jo jmp popa mov sub jmp xchg rorl cmp int3 in scas push push push xchg adc fwait rcrb xchg in xor push xor cmp adc dec scas xchg push pop and pop or or enter push stos nop lcall sbb jae and inc xchg dec fnstenv jg insb lcall xor adc sub sub push jbe inc push repz push testb test popf cli jecxz push inc push test data16 adc ljmp aad dec nop push adc sbb sbb push sub mov mov ss dec je sbb mov cmp sbb arpl out mov frstor and adc fs les sub lds xchg adc ficom xchg push pop rcll sbb cmpsl mov mov (bad) into mov sub inc cltd fadds test jbe adc aam js push mov sub inc out mov inc pop adc xchg xor rorl push arpl jb inc inc pop arpl fidivl and and mov push xchg adc outsl jns inc xor push jae dec dec int pushf sahf jb and loop push adc sbb inc jae cltd (bad) and and push in push push ja xor imul pop inc mov xchg fs aam in adc mov mov cmp jbe fs jno push fs icebp sub pop mov jae xchg dec xor mov inc fs pop jno loop das xchg inc adc dec push xor test es mov loop inc loop outsb cld inc lea sbb xchg sbb mov xor xchg call mov test push roll and (bad) mov and xchg or push scas and jl push xor pop lahf mov and push sbb adc xor imul roll enter cwtl and cmc or insl lret push les push xor and ljmp gs xchg xor jne es lea test xchg adc cmp inc mov arpl sub dec xor sub (bad) mov and bound cltd sbb fsts adc xchg movsl lods pusha mov xchg lcall imul pop and js (bad) in inc push inc mov sbb aad popf push js pop test and pop jle push or push adc xor cld (bad) jmp enter xor jno and sub mov sbb clc xchg lea inc addr16 loop inc inc ret inc pop inc clc mov les (bad) (bad) cld dec sub push cmp and adc mov cwtl xchg pop loop jbe cmp adc (bad) jbe inc inc sub jb and test xchg xchg aam fisub es jae out int3 aam (bad) push and int3 cltd sbb stos stos and sub pushf adc icebp sbb jl test dec jmp and gs and dec lods mov sub outsb cwtl rorb mulps push test test add bound loop dec decl xchg cmp push adc mov jne clc xchg sarb pop js das das cmp cmp inc outsl xor push das das das xor inc imul push das pop cmp push push cmp das das das push dec xor dec jbe das xor outsl xor inc dec push das cmp inc pop inc inc inc inc das xor inc inc dec xor push das das das xor push das cmp cmp jae inc inc inc inc inc dec push das cmp inc je inc inc inc das xor inc inc dec xor push das das das xor push das cmp cmp jae ja inc inc inc dec push das cmp inc je inc inc inc das xor inc inc dec xor push das das das xor push das cmp cmp arpl dec push das cmp inc je inc inc inc das xor inc inc dec xor push das das das xor push das cmp cmp inc inc push inc inc dec xor push jbe das cmp inc inc inc dec fs dec push das cmp pop push cmp das das push dec push das push pop push bound xor sub das das addr16 outsb das imul inc fs outsl aaa imul dec inc pop xor dec ja push dec aaa dec imul dec jno das das cmp jae push push dec inc inc inc gs ja xor insl inc inc inc inc inc push xor data16 das cmp jne push push push jae das das das inc dec dec addr16 dec jae pop push dec inc inc dec fs sub inc inc inc inc aaa das cmp dec aaa imul inc inc push push jae data16 das js inc inc push inc insb xor cmp inc dec xor dec outsb das das xor gs js push inc outsl dec inc pop inc inc dec xor dec outsb das das xor jbe xor push inc inc dec xor push das das das xor inc imul push das pop cmp push push xor das das das push dec xor dec outsb das das xor jbe xor push inc inc dec xor push das das das das cmp gs push inc inc inc push inc push push das pop cmp push push xor das das das push dec xor dec outsb das das xor insl outsl inc push push xor das das das popa dec ja push addr16 push das cmp js jns push das cmp pop push jae data16 das push push das push das xor push push xor das das das popa dec push push push addr16 push das cmp js jns push das cmp pop push jae data16 das push push das push push xor inc fs das das das xor inc xor push push das pop cmp push push xor das das das push dec xor dec outsb das das xor insb dec dec push das cmp inc je inc inc inc das xor inc inc dec xor push das das das xor push das cmp cmp push push xor das das das popa dec inc bound inc push das cmp js jns push das cmp pop push jae data16 das push push das push das xor push push xor das das das popa dec bound inc push das cmp js jns push das cmp pop push jae data16 das push push das push popa dec ja push addr16 dec push das cmp cmp push imul pop imul jae data16 das push dec xor dec outsb das das xor jbe dec cmp jb push inc inc inc inc inc dec push das das inc inc inc inc inc push pop pop xor sub das pop ret pop js das das cmp cmp inc outsl xor push push mov xchg (bad) stos mov mov jno stos dec push xchg repz repz repz inc fs cmp insb inc pop inc inc inc xor dec cld int3 inc out data16 aas and mov lcall jmp arpl dec loop inc (bad) (bad) adc mov into push push push push push xchg cltd sbb (bad) lret push testb test dec jmp sub xchg adc in sub stos mov and and and fwait movsl cmp or cs adc adc nop xchg xor mov aam (bad) out int3 mov (bad) xor mov iret adc out xchg movsl add and (bad) inc bound cltd mov cmp lods pop mov adc pop or (bad) aam xor aaa jmp mov mov pop icebp sub jg int3 test cltd push mov cld xchg or mov cltd push push adc test lret int3 aad jns push xchg push (bad) decl rcrl push sbb and shrl pop (bad) clc xchg or fdivrs cli out lds xchg addr16 inc xchg xchg push orl inc lret inc ret xchg stos (bad) adc test ror test incb adc and dec cmp or mov nop int adc movsb xor movsb mov scas xor push imul push bound (bad) mov cltd push sbb fs je je dec dec mov mov fs gs lcall movb mov lret or leave loop push xchg mov xor or cmpsb or outsl xor xor mov jp popf shlb xor and sub dec sub (bad) push int3 mov (bad) fmull mov xchg shrl enter mov xchg lea mov or sub adc mov mov mov dec lea pop cld dec mov rcrl push inc shlb cmp sub mov stos scas (bad) movsl andl push push mov repnz sahf shlb mov sub and sarb sbb mov aad mov sbb ljmp push dec xchg nop pop les dec mov sub mov jl mov leave xchg enter push and mov sarb popf or pop cltd cwtl xlat adc pop mov mov sbb test and xor jle push cmp lea and xor xchg mov call incb inc xchg and cmpsb mov lock les jb mov arpl mov jbe xor cmp sub mov mov push and lods jmp data16 push push mov pop test or fldl mov (bad) dec dec cs push cmp sub mov dec test pop push sbb aam and mov or mov dec mov ret mov cwtl sahf pop add lea or adc dec adc lret fstpl movsb cmp cmpsb mov mov cmp xchg nop out xorl mov mov mov and adc cmp stos cmp fdivrl jp mov or bound lret enter sbb test cltd inc xchg pushf int3 shll stos insb lret or loop arpl cmp jb mov jp pop mov je or adc sub cmp mov or sbb lcall sub stos bound jnp popf shll dec (bad) (bad) mov test mov fwait les nop cwtl mov icebp and and sbb mov jo adc jg xor (bad) cmpsb jno movsl push mov icebp sbb incb stos test xchg xchg jb jmp dec dec stos push xor push ss jo cld dec dec adc lcall outsl jbe cld mov cs pushf dec data16 dec dec cld dec mov cli movsb fs test and mov nop xchg cmp and mov out sub push inc repnz addr16 xchg adc rcrb push (bad) in out and adc adc test ret popa dec dec popa jno inc dec push addr16 inc popa push addr16 push addr16 push das js imul inc inc imul inc cmp push push imul inc inc inc inc dec push inc inc inc push push das push push push imul dec inc push pop push push imul inc dec inc push jo xor ss xor inc inc das fs push push push push imul inc das xor xor xor dec dec xor dec push inc inc inc inc das fs push outsl das xor dec push cmp dec inc js das xor das xor ss outsb cmp das sub jns ja push xor xor dec inc outsb inc ss dec inc inc inc inc das inc push inc jns push inc inc dec xor dec dec sub arpl das das cmp xor dec dec dec ja inc inc inc das push push imul outsl insl outsb dec inc inc dec jb ss jp das das sub gs push pop jbe addr16 inc ja inc push insb arpl xor jp xor pop outsl inc inc push inc inc push cmp inc push inc inc inc jbe imul cmp imul pop outsl inc inc inc inc inc inc bound fs inc das fs jp fs push fs push push das js ja inc push inc imul sub ja inc inc push cmp dec inc push das inc push ja push push inc jno insl outsl inc popa inc inc inc inc inc inc das fs inc push das js outsl inc inc push inc dec cmp push push push push inc inc dec push push jns push data16 push push imul inc inc inc inc inc gs data16 das inc arpl push inc dec push data16 js dec inc imul inc push push push cmp sub xor push cmp inc push inc inc dec pop inc imul pop inc push data16 data16 js push push das js push cmp inc push xor das js ja imul pop xor fs push jb dec xor inc inc dec push das cmp push pop outsl push dec fs sub push inc inc inc das inc pop push jp push inc das fs das inc push addr16 push push inc push das js pop inc inc push inc das xor das js pop inc inc push inc push jp inc dec pop xor pop ja push ja aaa dec ja push dec aaa dec push jae inc push inc push insb gs push imul inc dec push push dec push imul dec push gs push push xor das push dec push gs pop xor jb dec je inc inc inc dec push gs push push pop imul push arpl fs push ss js inc inc inc dec push gs push push xor das push dec push gs xor push ss inc js inc inc dec push gs push push xor xor dec xor imul push pop imul cmp dec fs xor push dec outsl imul xor inc inc dec fs jns fs xor xor outsl outsb dec inc inc inc dec xor inc inc dec fs inc addr16 outsb outsl push inc cmp xor das xor das xor das xor das xor das xor das xor das xor ss jbe das das sub inc inc ja push imul inc outsl inc ja inc push push cmp push dec inc inc push cmp dec je sub xor inc ss inc push data16 imul arpl push push xor push arpl push inc inc xor pop inc inc inc inc popa inc addr16 push addr16 outsl push imul and mov and mov test mov xor mov sbb xor test add and or sbb fs add movsb and xchg shll mov test les cwtl shr enter sub cmp jge cmp or sub movl jmp or or enter test movsb gs inc xchg adc xor in bound sbb cltd sbb cmpsb mov pop cltd cmp mov adc gs add gs popf xchg in adc sub (bad) call pop jmp mov add or add push popa int popa pusha loope rcll and int3 inc in mov jp adc xchg xchg push adc push pop dec pop int (bad) rcrl inc sub add test lods call inc mov push dec lods hlt movsb xrelease gs roll xchg daa xchg (bad) xor adc xor mov dec ret or xor xchg inc push cmp mov dec or pop ja inc pop inc adc test push push movsb xor mov xor xor test xor mov mov inc dec or dec enter cmc dec fs das inc push addr16 jmp push jp inc aam aad rorl rorl (bad) xor xor and sub sub data16 pop mov data16 shl insb pushf call rclb lea outsb jp mov cltd mov xor int3 lock mov lcall xor daa daa sub dec lret in es push test enter sbb mov dec rclb sbb push fistpl gs xchg enter push and sbb sub ret pop jl stos adc adc or sbb rorl adc pop rcll test (bad) xchg xlat adc (bad) es and add adc xchg aam cwtl data16 jns or mov mov dec ja bound and mov mov adc je aaa jl jmp sub push and stos jp es sub (bad) call xchg pushf dec sub xchg shlb loop adc and fstps adc int and es outsb adc push test mov pop jo nop xchg lea insb jbe dec jae jb push xchg and cmp fs xchg adc js lea xchg adc femms sub lret fiadd notb lcall mov mov mull fs adc and mov pop xchg dec fdivp out xchg xchg hlt mov hlt loop (bad) and int3 mov mov inc divl jle bound xor in push inc jno test xchg xor adc or push aam xchg mov xor mov imul es sub lret mov data16 es sbb dec sub fcoms inc (bad) notb sub push xchg push nop pop dec mov push cwtl popf (bad) lock and adc xchg adc xchg insl inc xor mov sub dec push sub enter mov cmp push lods mov inc cltd sub pop (bad) loope and dec dec inc outsl dec dec cmp cmp inc inc adc inc dec adc xchg (bad) clc xchg push sub dec sub test sub sub dec mov sub sub test int3 ljmp inc dec sbb fstp enter test ja jae push xor adc test into pop push adc into pop int fistl cwtl mov bound mov inc push je movsl push mov jbe movsl jl dec and cmp (bad) and repnz mov inc inc mov gs jbe repz inc (bad) mov push adc adc bound mov mov and dec mov fcoml dec lret test rorb mov fsts dec mov pop enter mov inc xchg jecxz push and sbb push cmp sub sbb lods in int3 pop inc (bad) and das inc fimull sub push cltd (bad) jno aaa mov lcall cwtl cwtl es cmpsl sbb mov mov cmpsl mov lods and stos pop xchg xchg xchg cmpsb sub xor movsb stos test test mov and sbb mov daa mov sub sub xor mov sbb movsl sub mov mov cmpsb and pop mov and cmp movsb mov xchg xchg xchg mov sbb xchg lcall mov sub xor mov movsb mov xor sub xor and cmpsl sub test test mov xchg xchg xchg mov and mov mov pop xchg mov sub xor cwtl stos cmp xchg mov mov sub mov sbb cmp lods mov cmp mov mov mov sub sub mov sbb aaa mov cmp xor and xor mov sub test and xor and mov cmpsb cwtl cmp xchg xchg lcall stos test test adc sub stos mov movsb fwait xor sbb xor mov adc sub and mov test and stos test mov mov xchg cmpsb sub xor and and cmpsb mov xor and mov sub sub stos test movsl mov pushf aaa and cmpsb mov aaa mov movsb movsb cmp mov sbb sbb sbb adc mov sub xor mov test mov mov cmp xor cmp mov cwtl sbb sub movsb and test pop xchg xchg xchg mov mov sub mov sub mov xor cmp sub mov xor cmp cwtl sub mov sub and mov cmpsl xor test sub movsb lods and xor mov adc xor mov xchg lcall xchg cwtl mov cmp xor cmp mov movsb mov sub stos mov sub test test mov cltd and xor mov adc mov xchg xchg lcall xchg xchg xchg cmpsb and mov test sbb lods cmp xchg xchg cmpsb sub mov pop xchg xchg xchg mov mov cmp sbb movsb mov sub mov and stos stos sub xor stos mov sub and and cmpsb sub mov mov stos stos cmp cmp pushf pop lcall mov mov xor and xchg xchg xchg cmpsl cmp mov mov mov and mov xor sbb pushf daa mov pop mov mov and sub cwtl mov mov mov xchg fwait and sub mov mov cmpsl mov mov mov pop lcall mov mov xor xor cmp mov mov mov and mov xor sbb pushf daa mov xchg mov sub mov mov sub mov mov mov mov xor daa pop test cmpsb sub mov and sub mov sub xchg lcall xchg cwtl mov cmp xor cmp xchg fwait xchg xchg lcall and pop xchg xchg xchg mov movsl xchg xchg xchg mov sub mov mov sub test test mov cltd and xor mov adc xchg fwait xchg xchg lcall xchg xchg xchg cmpsb and mov test sbb lods cmp xchg xchg cmpsb sub test pop xchg xchg xchg mov xor pop xchg lcall mov sub stos stos test cmp cwtl sbb and and pop pushf xchg xchg xchg cmpsl cmp mov mov mov and mov xor sbb pushf daa mov pop mov xchg mov stos lcall xchg xchg fwait and cmp xor sbb mov sbb sub daa pop test cmpsb sub mov and sub mov sub xchg lcall xchg cwtl mov cmp xor cmp insl bound mov cwtl cwtl es cmpsl sbb mov mov cmpsl mov stos or in imul stos add xchg xor mov or and mov dec mov push mov cmp push xchg divb mov dec adc jbe push adc jg mov push mov mov xchg cltd push push xchg adc inc mov mov cmpsl sub sub mov mov pop xchg mov sub xor mov and ss and lods aaa mov cmp lods mov cmp mov test mov sub sub sub mov daa push fstps xchg push mov inc push and das sub add in out aaa dec std xor mov and lods inc add or push push inc sub daa cmp stos movsl hlt xchg inc pop adc (bad) sbb stos addr16 pushf rclb scas jo mov lcall push gs arpl addr16 add arpl and inc add xchg test addl jbe lcall adc xchg or push and adc dec ficomp mov sbb or or (bad) insb mov xchg mov xor stos sbb jp sbbl ret orl arpl cmpsb and inc iret sub mov insl test jo int3 int3 cmpsb ret int add dec dec push shlb push mov enter adc and xchg adc pop data16 ret mov mov and insb stos (bad) and cmp mov inc xchg jbe mov xor xchg add or nop sar and dec test adc int3 push pushf call test enter int3 arpl push xor adc sbb jnp pop xor jnp bound nop (bad) data16 pop insb mov jp movlps (bad) inc fsubrs imul inc mov nop test mov pushf pop mov lea mov incb repnz popf adc cmpsb das sub dec das mov and aas clc nop lret (bad) dec insb lret cld xchg inc incb inc push shrl jmp push mov mov jg mov mov (bad) incb repz mov dec outsb fist ret mov clc xchg mov dec insb mov sub xchg mov in jmp dec lds sub dec inc pusha pop (bad) incb arpl (bad) push sub decl xchg rcrb hlt mov adc iret (bad) and sbb decl add cltd adc fmul hlt push icebp cmp cmp in xchg adc fs jecxz mov call (bad) cld mov into (bad) movsb clc xchg aam jae das outsb ja adc lods dec sub loop inc icebp sub mov adc mov mov or jno lods jno sub movsb dec sub call sub xchg inc fstp sar cld mov (bad) icebp sbb adc xor decl and sbb xor cmpsb out out inc test dec dec xchg decl outsb shrl repnz pushf aaa jl cs and cmpsl jle in dec sub push stc sbb clc xchg push mov incb xor outsl les and xor dec jmp in es fisub xchg les inc je and sub sbb xchg dec insl test inc jbe (bad) (bad) xor iret cld dec inc repz aaa mov dec or test test xchg jecxz and lahf les jmp sub and xor and lret js xchg bound (bad) and xor cmpsb (bad) clc xchg adc loop push les enter int stc sbb cltd push mov adc sbb cld mov cs js rorl mov and and inc mov add sub xchg pop fidiv or push inc adc hlt jl add pop mov loop xor jae jb pop insb arpl mov or mov and adc pop int out pop push gs xor rcrb out or lods sub sbb repz clc cltd dec les dec or into or loop fcoms mov (bad) mov inc xorl enter adc int3 aad pop push push sbb pop xchg push sbb push pop sbb cltd mov ficompl rorb dec (bad) fistpl fsts fimull aam push mov adc adc dec rcrb mov adc adc (bad) fwait sbb push xchg sbb xchg mov aad push dec adc fsts rcrl adc rcll dec ficoml lret lret lret fxch adc pop adc sbb push push push push push or adc push sbb adc push dec lret into pop fcoml xchg or xchg aad xchg push push rcrl lret lret adc fcomps xchg dec xchg dec sbb adc int3 aam fcoms pop rclb rcrl lret into push push popf pop mov sbb push pop sbb mov dec fwait rcrb dec fxch (bad) adc push push push dec mov lret ficom push pop pop rcl xchg cltd pop adc xchg pop pop lret lret lret pop pop rcrl cltd pop adc xchg sbb push pop rorl xchg adc lret sbb pop aam sbb nop push aam adc push push push nop lcall push push pop fstps push pop rclb dec push xchg sbb fnop xchg push push push push dec pop push fwait nop aam rcrb push pop xchg push pop aad xchg sbb fistl push push pop push push xchg aam adc push cwtl push push push xchg pop rcrl ficomp adc sbb sbb aam rcrb push pop xchg push pop aad xchg sbb xchg rcll push push rcll aam adc or xchg fst rclb pop pop rcrb push xchg popf rcll push push cltd xchg sbb adc push inc dec and stos lods cmp lods xor cmpsl mov mov pop xchg mov mov mov ficoml fimull aam push mov adc adc dec rcrb mov adc adc (bad) fwait sbb xchg sbb xchg xchg xchg push push dec adc fsts rcrl nop rcll dec ficoml int3 out sub or test sub dec mov sub or push cmp inc push inc inc inc xor mov dec sub push inc ja push dec xor mov rorl adc mov iret mov xchg and inc pop aad int sahf cwtl test fiadd data16 je inc dec imul cmp js outsl cmp and fwait and add fsts aad push loope fstpl in pop loope adc fxch pushf lods push roll mov mov lcall sub cli inc push ret bound adc sub push sbb mov xor inc adc aam gs je xchg xchg inc adc inc and inc inc je loop inc and dec jp and or mov push mov ret push push and mov dec or insb ljmp mov scas push or in call inc jno inc imul cmp nop rolb nop xchg mov mov test pusha inc mov inc push xor sub loop inc jmp (bad) sub push push and add sub push mov mov or pop movsl xor mov mov cmp rclb cmp or loope and lahf icebp sub sub mov mov pop jmp leave push fmull xor sbb xchg lcall es dec jns rorb xchg adc xchg cmpsb into push pushf (bad) int movsl sub and adc xchg pop pop or into adc xor and mov (bad) and and mov andl cmp stos inc stos add adc adc es inc inc dec xor cmp (bad) jmp xor mov or or cmpsb enter icebp sbb enter out and loop dec in imul icebp mov das push mov es je or push pop test cld mov mov push and mov pop hlt pop pop push (bad) enter gs jbe data16 test data16 cld dec or icebp sbb jae cltd xchg push push or sbb mov mov mov jno push dec xchg xor or and movsb lods les scas repnz aam pop and add xchg ljmp jmp out or loop outsl adc (bad) mov loop xor xlat dec repnz cmp xchg or pushf shlb aaa cmp lret push (bad) rclb popa int3 lods mov push cmpsl jno mov or inc inc inc xchg pusha sarb adc xor mov cmp loop jno sbbl xchg mov push cmpsl andl sbb daa and cli push adc or push cmp mov push je adc xor fxch enter mov shrb outsb call das pop inc mov mov dec mov jbe push xor nop dec dec (bad) fsubrp xchg in ja inc mov adc and movsl adc or leave fstpl xor xor addl pop xchg adc jbe ja xor inc dec jno xor int3 mov xchg push and pop cltd cmp push dec call cmp push jp add in cld dec (bad) cld xchg inc xor adc inc push and mov rorl sbb incb repnz andl adc dec push push inc push push jp bound mov cmpsl clc mov add push xor fwait in cmp and (bad) adc lcall popa imul imul mov xchg jp lea dec push mov mov inc je push and dec dec pop dec stos sbb loopne int3 sahf jo xchg test les inc jo icebp and xor sbb adc (bad) aam (bad) mov in xchg out bound jo mov mov into (bad) (bad) lods data16 test hlt fs (bad) mov (bad) test loop fcmovu mov mov cmpsb pushf movsb into movsb mov movsb (bad) lock push mov mov pusha xchg ret (bad) xchg (bad) (bad) (bad) nop in mov xchg test nop mov jb pop push mov nop mov mov into (bad) (bad) enter (bad) lods jb mov call (bad) insb pop mov lods fsubrp out lcall lret fmul lcall pop shlb (bad) mov mov (bad) rclb (bad) shrb mov repnz cmpsb xchg mov into test mov mov sahf rcl pop int3 pop pop (bad) jo lret xchg lcall mov stos bound fsubl xchg in pop ficom push lock fisub pop mov lods (bad) xchg (bad) (bad) mov mov pop outsb pop enter pop into movsb data16 push test enter jo hlt pop pop bound lock repnz pushf lods rclb mov xchg lods fsubrp out rcr pushf mov into (bad) (bad) rorb in mov push pop pop push mov (bad) push mov into (bad) (bad) (bad) xchg in mov pop pop pop push cwtl push sahf rcrb ror jb mov push mov xchg into mov mov movsb stos mov xchg (bad) (bad) xchg fmuls mov fiadd stos mov jo pop outsb pushf stos (bad) into (bad) (bad) pop lock (bad) jo mov pop hlt (bad) fdivp scas fiadd shr test test ficom xchg call mov in sahf stos sahf into xchg pop (bad) nop stos nop rcrb fisub (bad) test repnz mov repnz sahf push (bad) sahf aam faddl out into into pusha data16 pushf scas lods push mov (bad) jb fidiv mov jo ficomp rorb mov pop pop push lods scas aam mov stos mov pop out mov xchg enter mov mov mov enter enter mov (bad) push enter pop jb mov aam ret (bad) lods fisub insb mov pop enter out mov pop mov (bad) int3 lret enter push push shr push pop pop pop shlb mov stos mov mov mov pusha data16 push ror test (bad) (bad) shlb pusha mov insb xchg out cmpsb xchg mov test repnz pushf lods rclb test mov pushf movsb int3 lock shrb pushf outsb mov test push (bad) (bad) stos bound enter push test movsb scas (bad) hlt (bad) into jo mov stos push xchg pop jb shrb in pop data16 aam mov push pop pop pop pop data16 mov mov jb mov test enter movsb int3 shrb aam mov stos xchg mov in pop pop bound pop enter enter bound (bad) enter mov out mov (bad) (bad) xchg mov mov (bad) push pop pop pop stos xchg fmul push mov (bad) (bad) mov xchg (bad) into (bad) (bad) pop data16 xchg aam mov pop int3 pop pop stos mov xchg test mov mov stos test mov into mov ret sahf mov lret pop pop jb pop lock jo (bad) mov push pop pop pop stos xchg mov pop pop bound repnz int3 repnz ror test pop pop pop pop enter stos mov mov (bad) enter enter lods int3 mov movsb cmpsb cwtl test hlt pop enter ror test pop pop pop pop enter insb pushf nop push pop pop pop pop movsb int3 shrb push pop pop pop stos mov jb pop xchg fsubs mov (bad) mov pop pop pop pop enter mov int3 mov (bad) test out xchg out shlb out lods ret mov ret int3 lock (bad) (bad) xchg (bad) lods fdivs (bad) mov jo data16 xchg pop lock mov mov test fisubr movsb shlb aam bound data16 (bad) pop data16 mov data16 stos lods in jb mov jo cmpsb mov mov pop data16 enter mov in int3 jb pop mov test out xchg push repnz lock aam mov stos mov test data16 lcall stos xchg (bad) mov push (bad) out (bad) (bad) dec and cmp xor daa movsl sbb sbb sub xor mov mov daa cmp sub cmpsl sub test cmpsl sub mov adc sub mov mov cltd and sbb pop pop sub add and flds in mov inc inc mov es mov sub sub fwait pop lods sub aaa mov movsl and mov cmpsl and xor fldenv movsb roll sbb mov movsl sub push pop xor inc inc push xor ror mov mov cmp mov mov jnp mov mov xor and xor dec jnp pop jno cmp inc sbb (bad) mov jp jns int adc push pop int3 push mov nop pushf push push or aad jb test and int fsts push rorl (bad) mov dec adc les jo hlt pop pop bound lock repnz pushf lods rclb mov adc lret xor xchg push (bad) cmc arpl inc fs mov leave sub daa mov sbb sub lcall and mov sub xor sub inc jmp sub test je pop or adc imul out dec dec out or cmp es hlt mov arpl xor dec mov stos js nop push sbb or rclb push add (bad) dec jns adc or push ficompl fstp fxch or les mov stos (bad) jb fidiv mov jno pop jbe cmpl inc inc gs push cwtl mov int3 imul call or lret sub gs es push xor inc popa inc clc lcall andl mov pushf and inc gs cmpsl stos xchg adc push adc add xor or adc push addr16 and pop dec push dec imul dec aaa push and ret mov sub leave jmp xchg scas adc adc sarl (bad) data16 sub xor push pop movsl and test mov jns xchg mov sbb mov sub adc es popa inc fldl xor add sub inc arpl pop xor jmp xchg inc xchg and lret sub push stos jno loop jns repnz (bad) enter adc dec push xchg dec xor (bad) and mov mov pop or push or sbb (bad) rorb ja adc ret xchg push mov lcall pop pushf aad mov xchg loop insl enter scas and das adc and shlb aam test in push push jbe sub mov (bad) aaa mov mov pop and test repnz cmp or xor xchg sbb adc aas cld inc push pushf (bad) dec dec inc mov insl dec data16 aaa push pop stos jb and cltd mov mov daa xor icebp daa lods fs xor dec icebp daa sub sbb out inc ja jae icebp xor sbb in dec and loop push adc nop sar xchg xchg jno sbb push push dec inc dec ja jne jae adc daa push push inc cmpsb (bad) test test insb into xchg out (bad) cmpsb cwtl mov scas cs inc xchg or rcll fs sbb jb sbb xor sahf cwtl mov in nop arpl cmc fs loope lret or cs dec out sarl mov mov adc mov in xchg sub test hlt addl mov push pop jbe sub and mov enter adcl popa lcall (bad) stos inc mov push mov sbb fwait or adc rcl lcall mov adc fcmovb (bad) in (bad) in test outsb bound cwtl gs hlt repz icebp xor xchg xor cmpsl and (bad) (bad) repz dec out into and outsb and sub enter mov icebp sbb dec fisubr test xchg hlt repnz subw enter (bad) jno push inc in dec and mov inc inc adc arpl jmp and cmpsb ljmp or into push enter sbb mov (bad) lock mov stos mov (bad) mov sbb ret (bad) bound mov (bad) mov lret or sub ret push lret jno xchg jp mov bound dec dec or and jnp jns jnp cltd (bad) or xor jnp or or xor sub mov mov or mov mov mov pop sbb or sbb mov (bad) mov pop pop stos or add mov jns xor jno xor cltd mov or mov or and arpl or dec imul adc jns shll jns mov cmp mov ret or xor popa mov mov cmp sub ret xchg cmp mov lret rclb mov cmp or sarl pop dec (bad) or pop popa pop push jp sub rcll and and (bad) or and arpl pop cmp ret or and push ret cmp sub and mov ret jp cltd (bad) or and arpl pop push (bad) mov lret dec xor lcall mov pop sub pop and or jns fwait mov xchg mov xor or sbb jnp pop sbb ret or and sub sbb sub ret or pop or imul stos inc push mov lret or or jnp jb or or or jnp mov push or push adc adc bound or jnp adc xor mov sarl inc and cmp dec mov or cmp xchg adc and sbb or or sbb cmpl (bad) and sbb or jnp adc xor sub jnp jb or or mov and or xchg or or or mov sub mov cltd ret inc mov dec stos mov jns inc cltd jns mov mov cmp dec mov mov mov lret mov jno adc bound sbb inc roll or dec mov rcrb or inc and and or xchg or or or mov sub mov cltd ret inc mov dec stos mov jnp adc sub dec mov cmp dec mov mov mov push dec or or orl lret jnp mov xchg lcall sbb rcrb or inc xor ret mov mov xchg or or xchg or or inc mov push adc adc adc sub xchg sbb or inc ret lcall and and cmp or or mov mov mov or pop mov xchg lret dec pop cmp adc dec (bad) mov xor mov sub or rcll dec sub mov adc or and jnp sub lcall mov fwait and jnp dec mov (bad) mov xor arpl sbb pop jns lret xor popa mov mov sbb stos mov mov or xor jp (bad) xor dec jae jp and sbb or inc push pop stos or or and push mov jp mov jns mov stos pop dec mov or sbb jae xchg adc jnp xchg bound or stos lret jp (bad) xor or mov mov mov push xor and jns jns mov and sbb or inc push pop stos or or and sbbl push and and mov ret dec jnp and mov mov mov cmp dec jnp jns jnp jns mov inc jnp mov sbb mov sbb sbb pop arpl sbb imul sbb adc jnp adc adc xor sub lret mov stos mov mov xchg rcrl mov mov and jns ret (bad) mov mov xor sub or inc jns mov (bad) mov add mov xor (bad) mov or mov leave mov xor jp ret jnp xor dec mov sub and and mov inc or xchg cmp bound jnp sbb or adc xor sub cmp or pop mov ret shrl inc xchg (bad) jns leave pop sbb orb sub mov xchg xchg xchg cmpsb sbb mov sub mov sbb lods mov movsb sub mov sub stos push nop rcll xchg pop push push push adc xchg fsts int3 adc cltd fcmovnbe push push push mov fcom xchg xchg dec push xchg aad fimull push cltd or sub inc imul inc imul lcall sbb xor test cwtl and jno mov xor xor and aam rcll xchg in out xchg sbb sbb cltd or cmp xor inc adc sub jmp enter imul imul or lods mov jmp mov in enter add sub into jmp enter sub ljmp push or pop fisttpll in sbb int mov int adc jmp nop push mov (bad) hlt fisubr nop (bad) mov mov cwtl xchg xchg test test xchg out mov scas jo xchg inc (bad) mov (bad) sbb aaa mov (bad) roll push ficompl jne xchg adc aam adc daa xor inc push je add notb lret test (bad) or mov mov ljmp cmp pinsrw les sbb je or xchg imul xor adc add test adc popa sub jae test testb pop adc sub dec cltd fstpl cmp mov xchg (bad) xchg (bad) lods aas (bad) cld dec or xchg popf int3 aam lcall push xchg inc adc jbe addr16 arpl xor (bad) sbb mov mov push in jb sbb enter lods out push jae inc xchg adc sbb enter sbb aad cli sbbl ret adc dec (bad) mov xor mov cltd push push adc mov int3 rcrb mov pop scas ret push testl sub inc lret int3 int3 leave leave or push cmpsb enter cmp cmp mov adc mov fcoml mov xor mov inc cltd push cltd call jae mov push lea inc lret sbb jae xchg adc aam adc mov popf cwtl in pop fsub shl data16 mov icebp sbb ss mov xchg inc pop jae sbb sbb and pop mov loop inc mov or sub addr16 push and and repnz cmp inc dec dec lret (bad) mov sub inc inc xor add test mov add xor mov lcall mov inc aam (bad) cld dec stos add ja sub inc inc repnz mov cli inc cmp sbb xchg pop lds mov sbb and sbb pushf pushf xchg mov cwtl sbb lcall xchg cmpsl mov movsl test enter inc mov inc imul or cmpsb in in stos insl push mov or enter xchg push test and sub xor sub and dec push outsl and stos test pop cmp das cmp loop inc (bad) fsubrs pop push outsl push xor dec mov adc dec push push push dec xor or dec dec jmp imul mov inc pop xor stos cmp adc sbb mov xor movsl mov movsl mov xchg mov jl jmp sub into inc test test push sub sbb test or cmp les pop mov lret cmp nop loopne mov call mov inc sub leave mov cltd enter imul iret adc cmp (bad) jb adc pop dec inc xchg mov mov aam pop int das dec dec fs push les adc mov push aaa sbb in popa lea gs jg cltd mov sbbl cmp push cmp gs pushf fmul inc inc ljmp and and popf lret mov or pop test dec fs adc pop and dec or pop mov mov mov enter dec enter add inc les lret sub pushf jg fabs dec (bad) cld dec dec loop ja push push inc push jp jns mov mov dec push imul push push inc inc inc inc inc xor outsl popa dec cmp push outsl push pop fs push push je jb ss dec inc ja dec inc push imul xor inc ja jb imul cmp xor jne js cmp arpl imul inc dec push push jns pop push inc push xor fs inc popa dec dec push push inc inc das dec aaa xor dec push inc dec push imul inc arpl imul outsb dec jb push pop xor pop xor inc inc inc inc dec push dec imul inc inc inc inc inc imul inc sub inc das xor inc aaa pop inc inc aaa pop dec inc pop jbe ja inc dec inc cmp aaa ja inc xor cmp inc inc js dec inc imul dec aaa push push push dec das sub dec cmp dec imul inc cmp xor imul inc das xor dec xor arpl aaa push inc jp push jb push dec jae imul xor push inc jp inc cmp cmp push pop jbe addr16 inc inc inc inc pop outsl dec insb aaa push data16 das ja push imul gs push js das arpl dec xor jbe das das xor push dec jbe js pop xor inc inc inc dec imul xor inc cmp js ja xor inc aaa dec dec push dec xor dec imul imul cmp imul pop xor xor inc inc inc inc inc dec push imul inc dec push push jns push inc jb dec das outsl push cmp inc inc inc inc dec data16 inc inc ja dec push push inc inc inc inc inc push xor inc jbe jbe imul dec push xor jb inc inc inc dec jo inc sub ja dec addr16 dec xor pop outsl dec inc aaa bound cmp xor addr16 je jae ja jbe ja imul inc dec jns dec jo push push dec addr16 das inc ja inc push push dec aaa push data16 das ja xor jbe dec cmp push inc inc xor cmp inc dec js jbe dec xor arpl js push push imul dec imul xor jo inc push pop inc outsb push das imul xor inc inc jb push addr16 inc inc inc inc push pop inc dec cmp inc push arpl push dec das xor push outsl dec cmp inc dec jns xor inc sub inc ja inc inc imul addr16 ja addr16 push xor push push ja xor dec jae imul dec cmp inc aaa inc jbe inc xor inc das das das das ss sub das sub inc inc das xor xor dec xor jbe imul inc push outsb pop xor push push imul das jbe das push outsl je dec inc js das xor imul xor inc inc das inc arpl push push inc inc ja push dec imul popa ja gs dec jae pop jae push imul jns push push push inc jne inc pop inc inc inc das imul xor inc xor inc xor inc xor inc xor inc xor imul pop insb fs insb fs dec insb fs dec insb cmp cmp inc inc addr16 inc inc inc popa sub inc inc inc dec imul inc inc imul inc dec fs push pushw outsl insl popa pop inc imul fs sub inc inc inc inc das inc push push push push inc inc ja push je push pop xor dec xor inc inc jno push jb push sub push arpl inc das cmp sub xor inc bound push aaa das das xor inc inc push cmp xor jns das das das push xor xor inc inc dec xor inc inc push push xor push xor dec inc dec inc inc inc outsl addr16 addr16 dec push fs push das cmp push inc push push xor push xor popa inc dec inc inc inc inc jno inc outsl inc push pop push push push das push push pop jae inc dec push push xor push xor inc addr16 inc popa imul xor das xor inc ss inc push push xor push xor popa push xor inc inc das xor inc xor xor push xor popa push xor inc inc das xor inc xor inc push push xor push xor popa push outsl inc push pop push push push das push dec push xor imul push jae inc inc inc imul inc imul inc fs push dec push data16 das xor push das das push push push fs dec push dec imul inc addr16 push inc inc dec inc inc inc inc push cmp cmp pop dec push xor inc push dec push data16 das xor push das das push push push fs dec push dec imul inc addr16 push inc inc dec addr16 inc inc push cmp cmp pop dec push xor inc push dec push data16 das xor push das das push push push fs dec push dec imul inc addr16 push inc inc inc addr16 inc inc push cmp aaa push das pop dec push xor inc push dec push data16 das xor push das das push push push fs and mov mov cmp mov mov pushf and test stos sub and test xor mov test mov and and lods cmp sbb mov mov sub and xor mov and test mov and movsl sub and movsl push mov data16 into mov push nop stos pushf ror cwtl nop es sbb or pushf adc int3 aam adc xchg rclb lea into sbb lea mov or (bad) jo in stos xchg outsb movsb mov mov pusha arpl arpl xchg cmp and pushf lcall and shll lds (bad) rcll pop enter int movsb ret lcall xchg scas jo mov and adc ret jne (bad) inc xchg adc gs xchg divb adc and mov mov cmp or movsl xor push push inc add cmp fmul and and stos stos shrb cld inc data16 (bad) lock (bad) in sahf pop fisub nop xchg out adc jbe jbe dec pop xor addr16 push xor jb movsl cmp mov cmpsb movsb xor bound adc push cmp mov shlb inc push xchg and sub push pop lcall mov sahf sbb xchg int3 adc fistpl int sbb xchg rclb scas (bad) mov inc push pop inc outsb push das icebp cmp popf adc gs inc cmpsb adc jbe divb test cmp lods adc sub cmp (bad) int3 in jmp xchg mov lcall jo call inc inc xchg pop or push cwtl int3 movsb inc repz arpl daa sbb mov (bad) inc inc in cmp out and pop das jbe push outsl je dec inc js and sub jb dec mov xor jp sbb ret sbb (bad) xchg cwtl ret lret lcall sbb mov es mov sub (bad) and lcall and xchg movb sbb and dec and or jb or xor pop stos adc xor arpl dec inc inc inc dec fs adc sbb push mov adcl stos mov (bad) push das push sub inc sbbb bound xor jnp mov push adc data16 aam into pop nop lods push test jae sub popf sub out sub and sbb mov in call push das push mov and sub (bad) fisub outsl and inc push pop push icebp daa cmp inc mov xchg pop leave mov xor mov ret pop lcall xchg xchg or aas adc push or adc movsb js inc mov add sub push das pop adc sbb inc out inc xchg icebp sbb (bad) and jl lret mov xchg sbb (bad) and sbb stos adc mov xchg sbb (bad) and jl mov xor dec and cmp dec dec sub sbb sbb mov sub xchg test in (bad) decl jp push inc push cmp sub mov or mov (bad) daa xor xor push add dec loop xor jb mov push push push push bound insb push jbe das xor xor jg mov stos cmp push mov int3 dec mov inc dec loop mov xchg xchg mov push arpl imul and push inc and lds popf int add cmpsb pushf int dec dec sub insl outsl push and lret push es xor dec push cmp adc (bad) aam adc mov push cwtl (bad) rorl and ss adc sbb repnz mov das jp push adc add xchg fcom (bad) jmp push enter scas and ret lret dec arpl cmp ret dec cmpsb stc adc fsts out xchg fs inc enter and bound and sbb fimull and xchg (bad) into mov pop mov push loop data16 call dec jae dec xor push inc inc cmp adc jb mov sbb push adc in dec outsl push enter test mov add inc push ja je and inc and hlt mull fs adc aaa test daa add push andl test xor add cmpsb and xor (bad) xchg mull repz out push adc xchg inc adc (bad) aam xorl xor es test xchg test push adc pop cmpsl xchg inc in test jbe ss and xchg and xchg xchg adc xchg push movsl push aaa xor adc jne push je push adc push adc xchg inc cmc bound jecxz fs add add jecxz repnz xchg and xchg and (bad) cmpsl jbe adc gs addr16 inc inc jbe xchg push adc xchg inc jbe test mov xchg (bad) aam and inc xchg adc in test xor add adc jecxz fs add adc adc hlt and inc inc inc xor xchg fs xor push push inc test push push mov fs repz adc adc ja push add push movsl push push mov fs repz repz movsb xor xor adc push movsl push push mov fs hlt adc adc add inc mov test adc push test je add adc mov jbe adc adc xchg and movsb xor and mov add cmc gs xor je mov ja adc adc (bad) xor adc push adc jne push je out xor adc push add and xchg test inc xor adc adc adc jne push je out xor adc push add and xchg test inc test inc and testb out xor adc push add testb repz adc push adc mov testb movsl push push mov fs repz movsl push inc mov push movsl push push mov fs repz repz movsb push je adc and mov fs repz arpl aam and xor adc repnz in xor push aad notb notb je hlt gs inc xchg adc xor adc push add hlt cmpsl cmpsl test adc repnz add and cmpsl test arpl lds gs je push cmpsl je les les test and hlt fs testb testb testb hlt movsl inc test daa fs add xchg aam gs je push cmpsl je les les test and hlt fs testb testb testb hlt cmpsl cmpsl xchg adc daa fs add xchg aam add and push gs jae inc xor in movsb adc and inc fs add push addl adcl hlt xor roll cmpsl je xor xchg add hlt adc xor push xchg testl mov adc adc add and gs je inc fs xlat mov addr16 adc adc adc inc movsb xchg inc push push xchg inc push fs inc inc les inc xor je and pop test les push je adc xor jne xchg inc mull adc xchg add repnz inc push hlt adc adc xor adc adc hlt xor xchg data16 adc je je adc inc push push jne mov je adc je je adc xor push jne and jecxz inc adc hlt xor testl mov movl xchg jecxz movsb adc pop xchg je xor testb fs repnz mov xchg add hlt gs xchg adc xor push adc add cmc push push mov mov push movsb push addl inc testb fs inc repnz test push adc xor and movsb inc test test mov movsb and les addr16 xchg je je xor and and xor adc test repz hlt es adc xchg and mov xor repz inc adc mov xor repnz jne add divb adc cmc addl adc inc adc and push adc data16 xchg xchg repnz adc xor adc pop inc xor ja xor cmpsl xchg push (bad) test xchg push movsl xchg addl repnz push add and xchg and mov xor repz hlt gs inc xchg adc ja arpl pop xchg (bad) in cmpsl xchg adc (bad) movsl push inc mov push movsl xchg addl repnz push add jb xor test sub sbb sub xchg xchg lcall enter sub outsl or int3 dec or in or out sub or out shrl aam or adc or push push push adc or xchg cltd pop adc push push sbb xchg rcrb adc push adc fcmovne rclb push rclb (bad) sub or cmpsb or sub or ljmp in call mov dec sub sub sub das dec dec cmp inc inc xor xor js (bad) and dec inc pop lods and sub cmp stos sub cmp mov xor cwtl mov sbb xor scas sub movsl and pop mov test mov es loop inc and mov push fwait les call (bad) int3 sahf inc push push inc andl xchg or dec sbb push adc (bad) mov out hlt adcl and movsb xor aas mov xchg push sub inc push push fs push xor adc cmp inc stos mov mov bound adc dec dec sub cltd xchg sbb (bad) xor mov loope or out in dec insl arpl jmp (bad) push enter inc xor dec (bad) (bad) inc test adc push and mov jns stos stos cmp lcall mov icebp sub adc mov cmp in dec push das les jnp (bad) and mov mov xchg sahf sahf xor test push jae data16 in push adc je je push cmpsl je les jp mov stos dec mov jp std cmp int3 leave or add in and (bad) clc sahf sahf jg mov sub or or test inc push imul push cwtl shlb fcmovu xchg jo insb out (bad) hlt out sahf out shlb push jbe push (bad) testl (bad) and cwtl xchg aam add fs xlat mov addr16 adc inc and rorb sub adc adc and xor loope push mov in mov daa or xchg push push adc fstl sbb mov inc xchg data16 xor sbb fwait js rorb in imul dec lret fs jno js xor mov dec imul inc in and cltd nop pop rclb push add stos xor (bad) push bound data16 cmp sub mov es and out nop and mov inc dec jns inc aaa inc int3 repnz into xchg jb test and cmpsb not sahf and push or push jp pop mov scas xor jae xor mov out je inc aaa js push inc xor lret inc sub dec sub test fmuls dec lods out or fcoms aad les and cltd inc faddl dec push lret jmp lods cmpsb and and pop loop inc xchg movsl jmp movsb test popf or mov xchg cltd sub leave sbb mov stos push push sub sub out dec dec inc dec sub (bad) xor push mov dec push jns pop mov sar mov inc test jae nop xchg or popf loop jno sbb jmp mov ret pop icebp sub jle test sub repnz sub sub sbbl aam mov adc or dec or cmp inc fucom mov (bad) (bad) (bad) jmp dec push xor es sbb xchg data16 divb icebp aaa test pop push mov inc dec adc clc xchg push dec mov lcall push cmp lret int3 aad aas mov cmp dec xchg push data16 (bad) gs sub insb xchg (bad) call inc xlat rcrb dec pop push mov test mov inc cltd inc mov mov adc es push pusha xchg in adc jb (bad) and js lea jns icebp sub fs and leave cwtl fdivrl and pop adc mov push data16 cltd loop ja sub addr16 popa inc push xchg mov in dec out cmp sub out push cwtl xchg adc mov mov clc mov mov les repnz mov int3 push data16 mov lea xor pushf dec dec inc xor sarl xor mov cmp in insl outsl dec adc xor adc rorl mov mov dec mov and or mov mov xor sub imul (bad) stos or pop cltd ret mov inc stos jb push mov inc and xchg xchg or jp imul push xor and mov leave mov dec mov and or dec lcall sbb jb or adc stos ret push jnp xor cmp (bad) xchg sub jb xor mov ret cmp sub xor push ret sbb xor mov mov jp rcll mov sarl fwait push lret and mov adcl ret ret arpl or mov jp rol or lcall jb mov jp or mov or sbb and mov or sub or or dec mov jb jnp sarl cmp dec mov lcall jns xor imul mov addl or or jnp xchg lcall and jb sub jns sbb and inc stos jae and xor sarl or xor mov jns jnp jns mov jno mov or jp mov jns (bad) mov mov mov jnp stos jns pop sub dec cltd (bad) push pop inc jno xor inc push (bad) sbb inc popa jp jns mov xchg xor mov jp adc ret sbb mov mov ret (bad) push adc dec jb jp pop jae and jnp pop push jns mov mov mov ret mov cmpl ret lret mov xor sub dec pop jb or or xor or pop mov jp jb adc cmp or xor pop dec lcall cmp lret rol push stos mov xor popa xchg sub xor or cmp sbb sbb cmpl xchg lcall bound push adc bound sbb pop sub sbb sbb jp or jb mov jp ret jb mov fwait mov or stos mov sub mov xor pop pop or xorl dec mov push sbb mov cmp pop lcall jp pop xchg jns mov ret and stos or adc mov (bad) mov sbb cmp dec popa (bad) push sbb ret sub jns jp push stos mov xor mov mov jb sbb pop arpl push or lcall ret pop sub dec addl jae sbb jp or bound xchg jp ret jnp sub stos sarl sub sbb jb dec mov sub xchg sbb mov push sbb adc mov sub mov jns push stos stos stos inc sbb (bad) pop jnp xor dec bound push sbb pop dec xor mov mov jo and xor and stos mov cwtl cwtl mov and mov mov mov sub mov mov xor sub mov cmp cltd aaa mov mov movsb cmpsb pushf and dec or cltd stos test cltd movsl push popa mov mov rorl cmp or push popa popf push sbb xor inc inc dec push inc inc das fs jp inc pop repnz mov mov leave push inc mov add loope cltd popa mov sub mov mov or sub push imul lret dec call push movb xchg adc aam xor je mov test leave cs test popa addr16 dec xor cmp dec insb inc aaa dec push ss dec cmp pop data16 pop fs push cmpsb cwtl lods movsb inc inc inc xchg jecxz aaa pushf and xchg and cmp pop xor mov mov jns xor mov jnp jns mov jno mov mov ficom mov stos fidiv mov push rcrb and ss test pop ror mov hlt icebp cmpsl sub and sbb and cmp inc imul and xor test push inc xchg arpl out stos sub cmp mov sub mov inc imul js push xor dec push imul dec xor inc dec ja cmp xchg loop jne xor inc inc xchg xchg les inc push push mov adc rcrl mov lods mov (bad) stos xchg in (bad) dec push dec fs dec inc push push js and lcall and xor dec and call xor inc fs jno inc push push rcrb push xchg adc xchg pop or aaa je push xor mov dec popa (bad) inc jae ret sub jns nop xchg mov inc and xchg (bad) xor adc roll or xor mov cld (bad) call mov sub dec jmp test cltd int cwtl (bad) xchg inc into test pop das and fnop xchg xchg aas out push inc dec dec js dec sub adc sbb pushf mov jo out (bad) outsb hlt data16 int3 test fcom fdivs xchg sub cmp lods jae and stos movsl and int int mov stos adc movsl xchg pushf (bad) les outsl outsl push jne and mov repz fwait and sub xor dec stc xchg adc sbb es stos jnp lret and xor mov adc adc xchg stos nop scas cwtl outsb cwtl rcl scas out adc cltd mov fwait sbb shl cwtl pop xchg bound sahf nop gs push adcl inc xchg clc cltd xchg jno mov shll pop xor das adc xchg imulb push sbb and aaa das adc fs adc mov mov mov and push push inc jns sbb sbb rcrl sub sub (bad) (bad) jae sbb xor xor imul jbe and daa sub les push xchg xchg mov (bad) lods in and add sub and and and inc repz push xor mov mov push cmp dec inc push imul ja adc mov rcll mov push mov mov lret (bad) cld dec or pop push insl inc test dec or adc pop mov inc roll sub sbb or mov xchg pushf push xchg ficoml pop (bad) and arpl and inc hlt xchg push jg adc stos mov mov (bad) mov add xchg ror test lret lcall mov xchg push add andl mov xchg and mov mov arpl cwtl cltd lcall adc adc mov cmp push call jp repnz enter dec in lods in lret enter xchg into push pushf or cmp xchg push clc xchg adc mov jecxz sbb test movsb in cmp mov int3 dec test sub je adc addr16 test inc xchg ja adc stos (bad) and es (bad) hlt inc push adcl and gs add cmpsb es pop jno mov push xor cltd fwait call and xor mov cltd fld pusha (bad) loop pop xor int3 mov dec ljmp (bad) and in fs mov test mov xchg adc xor cmpsb test adc pop mov xchg gs mov addl xchg adc push xchg divb fs xchg adc inc and xor pop je push xchg adc push jne je aaa adc mov daa test fs inc xor cmpsl xchg inc add rcll push movsl xchg gs and je inc movsb xor movsb mov out and jbe fs and test xchg and adc xchg addr16 push adc inc adc adc repz adc fs fs adc repnz test cmpsl push adc repnz xchg push push test adc and jb xchg mov ss and adc and xor and push es divb xor fs repz mov jne adc test adc and xor xchg divl xlat xor xchg mov inc jae hlt ret and xchg inc andl adc adc xor je addl divb gs cmpsl xchg xchg test xchg aaa xor movsl gs aam cmpsl add xchg xchg xchg xchg push xchg push adc repnz repnz inc add inc add adc xor xchg pop xor inc je (bad) jae mov xor data16 jae mulb mull test and xchg repz mov je test bnd push xchg (bad) repz jae adc xchg je fs divw push push add and inc cmc adc adc test es adc adc ret xchg xor add cmc jbe xor adc repz movsb and inc add push inc adc xor hlt es je cmc xchg and xor data16 xor add je xchg je inc xchg test adc adc les fs xchg test notb adc adc add and xchg xor adc push push push xchg xor inc xor push xchg jbe lds daa adc aaa fs xor daa mov test addr16 movsl xchg inc add jae ss repz push mov hlt data16 cmpsl test test push aaa cmpsb repz les ja xchg push adc xchg add mov xorl xor xchg fs test inc adc inc xor inc xor adc and daa jbe adc mulb ja and test repz cmc adc push gs addr16 je xor push adc je je je cmpsb addr16 ja xor mov push adc test test test movsb and fs hlt data16 and xchg jecxz hlt adc push (bad) aam cmpsl jae push adc adc hlt (bad) je and inc push adc adc and movsb inc jne adc ret fs addr16 push aaa xchg je push daa jbe adc data16 je add add (bad) testl and test xchg hlt adc xor cmc test push gs push adc inc push adc inc push daa and push je adc push and xchg inc push push and gs inc jne adc addr16 push loop test xchg push adc and and and arpl xchg adc inc inc xchg xchg je je adc ja add jbe adc push mov inc cmc xorl movb xchg push movsb xchg adc repnz addl in adc inc je and and daa ja movsl test and je xchg xor jbe test inc push inc es repz inc adc aam add xchg (bad) test adc je push pop addl xor divl addl xor xchg in cmc add xchg test in adc adc (bad) in and xor repz inc inc data16 (bad) hlt gs inc xchg adc adc xchg test push xchg hlt inc and movsl add xchg add inc jb test push xchg test ret je pop xor fs xchg movsl fs xchg adc add jb xor xchg cmpsb push mov xchg movsl push aam movsl push test (bad) hlt xchg movsl xchg jne arpl movsb inc hlt adc xchg les divl jae xchg inc arpl aaa xchg je mov adc test pop and fs push fs adc and jae addl hlt inc inc and push xchg add mull mov lds xchg les xchg inc inc adc push xchg add xor dec and fwait and mov cmp mov movsb mov xor adc sbb adc xchg or push push xchg pop sbb rcll push push adc dec dec dec rcrb push nop push sbb or rcll dec (bad) popf rorl sahf adc popf or xchg lcall dec push rcrl insb mov xchg mov and jae pop xchg jae xchg mov jnp adc ret pop lret addl ret jns mov adc adc push ss xor lret mov xor xchg push data16 push popa das dec das xor push push push xchg pushf mov sub les in lret pop into jb movsb test pushf insb mov movsb jb mov outsb fcom fs cmp xor inc dec xor inc dec jae imul ja dec dec xor bound dec push frstor loopne jno popf cltd pop loope in popa add movsb int and cmp shll mov call test add mov sub adc sbb dec int movsb (bad) cmp cmp (bad) lods sbb int3 dec out (bad) into mov inc and xchg test inc sbb lods movsb fisubrl insb outsb pusha repnz mov mov test cmp or or or lods pop pop scas rol test pop jo mov pusha scas es sbb mov aaa lods mov mov pushf mov outsb mov out mov xchg stos nop lods push fmuls enter mov ret adc and int movsl dec cwtl rcll dec popa dec push addr16 jno inc and dec sbb mov mov movsl cmpl dec insl push push pop sub inc sub test int3 outsl dec or cmp jp pop sub xchg popa adc shlb mov (bad) test xchg imul dec dec enter dec dec cs ja xor mov sub out inc push das push xor adc fst pop rclb scas cwtl outsb mov into hlt xchg dec inc dec push push push pop cmp adc xchg cmp call dec and push dec into mov adcl dec mov popf pushf test repnz sub adc (bad) inc inc mov ret ret pop mov lcall shll test xchg and xor and jns adc test mov stos pushf xor xor movl movsl gs adc pop sbb pop xor push jp push inc das adc xchg int3 push fs inc inc inc push cltd dec fucom sub xor (bad) mov sbb loope enter dec test xor dec inc xor dec das insb inc mov nop mov xchg ljmp mov dec stos dec sub repnz push push jns sbb sbb inc sarb mov pop xor and jge frstor cmp mov cmpsb xchg movsl sub lret cmp rorb mov ficom jnp sub jo mov xor mov stos push inc or ret adc cmp imul rorl movsb movsb aaa mov sbb mov xor mov fnsetpm(287 arpl inc and mov mov and daa inc jb xor loopne push and test xor sbb xor cltd mov adc and mov stos mov cwtl in and andl stos cmp add adc es je xchg rolb inc test xor dec outsb (bad) mov xor sub or push sbb inc sub adcl add sbb xchg daa push mov xor cs and cwtl aad in and mov outsb ljmp outsl addr16 lret dec scas outsb cmp sub sahf adc sub adc mov and cmp and aad bound popf fsub inc push adc and adc xchg lds push gs and pop dec sahf mov and es and dec (bad) fidiv int3 dec or jo adc mov loopne mov aaa clc xchg sbb dec push fs inc enter mov inc sbb xchg push and sub dec (bad) or jns adc and dec sbb push and call xchg dec lea cmpsb mov das jp push les xor das aaa jne imul fisubl and dec sbb or das outsl stc sbb push push push pop ficomp cmp je mov daa enter xlat jmp jp xor and cmpl xor cmpsl cwtl jb test xchg and dec cltd cmpsl and and push fstpl xchg push push sbb adc lret pop xchg sbb push push sbb push adc push xchg xchg adc cltd xchg sbb fisttpll adc int3 xchg push adc adc xchg xchg or adc push xchg push push push (bad) push xchg mov push push popf rcrb mov rclb push push cltd xchg sbb push pop dec adc push pop int3 or or ficoml pop int rorb adc xchg popf sbb or fwait sbb cltd xchg sbb or lret lret int push push rcrb push push sbb dec pop push xchg sbb dec lret into adc nop push xchg or cltd adc rcll cltd rclb xchg adc rclb adc xchg cltd pop adc xchg pop lea sbb pushf sbb push push xchg lret int pop lret rcrb push push fwait push adc sahf sbb xchg pop mov push pop push adc push aad aam push adc dec int3 adc (bad) sbb dec sbb pop pop rclb push push push pop rcrl rclb push mov (bad) dec push (bad) rcll mov ficom push xchg pop rcll push mov into sbb adc nop nop push (bad) fcom push push push push xchg xchg adc cltd xchg sbb cltd (bad) lret lret ficom fcomps lret rcrl push xchg dec ficom adc pop dec aad push rorl push xchg cltd pop adc xchg int3 int lret lret sbb or fwait sbb sbb rcll pop push adc pop mov push push xchg mov or push pop push nop nop push push rcrl adc push pop lcall xchg cltd pop adc xchg (bad) int lret into push popf rcrb mov rclb push push cltd xchg sbb push push xchg pop pushf fxch fstp aad pop fimul pop push mov pop mov pop rcrb or ror pop push xchg nop pushf ror dec rcll popf rclb into or xchg xchg lret int3 aad pop xchg push sbb xchg adc or into pop dec popf aad sbb adc sbb sbb pop rclb pop rclb adc pop xchg popf (bad) push pop push fistl aad mov push push push sbb push push push mov pop adc or pop adc lea fwait or push pushf push rcrl dec push rcll pop xchg or pop xchg push adc int3 popf popf mov int or pop int3 or or dec pop dec fst or pop dec or sbb lcall push dec adc push push pop pop rclb push xchg rorl xchg xchg xchg sbb push cwtl pop pop mov adc ficomp rorb aam fmull lret lret xchg pop rcrb rorb mov popf rcrb sbb nop push push sbb adc mov cltd push push adc push sbb mov fmull int3 aad push dec adc cltd cltd push push cltd sbb sahf pushf dec ficompl or lret lret fimull dec fstps sahf or rcrl or pop push adc or dec push pushf popf rcrb sbb adc mov xchg push sahf push push push or adc rcrb fcoms pop pop pop rclb push xchg rorl xchg xchg xchg sbb push cwtl pop push or adc ficomp rorb aam fmull lret lret cltd popf rcrb sbb adc adc xchg pushf push sbb push push fcoms dec (bad) sbb push cwtl pop push or adc ficomp rorb aam fmull lret lret lret aam sahf sbb aam pushf push sbb push push pop adc xchg pop mov adc or sbb adc xchg push push pop rclb xchg sbb nop rcl push xchg lcall push rclb xchg adc push (bad) push pop rclb xchg push adc lret lret aad ficoml adc push sbb rclb push push rcll xchg push sahf push push push fwait int xchg nop rclb xchg sahf push sbb or pop int3 xchg sahf push sbb adc pop push adc sahf sbb pop int3 xchg sahf push sbb sbb pop pop mov int adc push push adc push push pop pop or push adc adc nop push xchg or push pop sahf push sbb adc mov dec dec rcr mov pop adc xchg cltd push sbb rclb or xchg pop sahf xchg push push rcrl adc xchg cltd push adc into push rcll push adc push push pop nop xchg push push dec dec rcr xchg lea lret fisttpll xchg or push pop sahf push sbb adc mov dec dec rcr pop or int3 (bad) push or adc push pop popf aam nop push push xchg sbb mov aad push adc nop push push adc or into adc xchg dec fimul push pop push cltd rcl pop rcl lcall push dec into pop pushf xchg sbb adc rclb xchg push adc mov aad or sbb xchg pop rcl lcall push inc dec and mov mov xchg xchg cwtl mov cmp push adc push xchg xchg adc cltd fwait mov mov lret int adc int3 xchg push adc adc xchg xchg or adc push xchg push push push (bad) push xchg mov push push popf rorb cmpsb xchg mov bound cmp dec jns push cmp push dec dec sbbl call je test (bad) clc popf push push pushf int3 ficoml sbb dec pop push xchg sbb dec jo out mov and xchg mov cmp nop dec or enter movsb lret insb mov insb bound dec inc push das xor addr16 dec insl inc push data16 ss dec push push push adc mov inc imul mov movb mov mov (bad) dec push (bad) rcll lret ficom xchg (bad) popf stos sbb stos pushf aaa and mov and cmpsl mov mov mov enter pop nop mov out in inc data16 mov adc sub sbb xor sub or push pop push nop nop push push rcrl adc push pop lcall pushl mov mov cmp test imul lret inc ror jp rclb dec push rcrl pushf rol mov xor movsl xor cmp push sub into ljmp push inc mov sub les mov test xchg (bad) hlt xchg test sbb inc push push xor insb xor mov xor mov stos jmp into vcvttpd2dq push lea test test jmp pushf (bad) in int cmpsb inc imul inc xchg in and and ret cmp jno leave lcall xchg mov xor mov mov and mov arpl rorl add xor mov inc push push outsl jo es and xor cmp xor fstps sahf or rcrl or pop push adc or dec push pushf test mov jp xchg push dec or adc jae xchg push jg in inc xor icebp cmp aad mov xchg pushf push sbb push push fcoms dec (bad) aas cld inc data16 xor cld inc call mov adc cs imul call push dec fs push addr16 inc and ret test sub or sub sub outsb test or sub adc jg in cwtl mov sbb mov (bad) lock push adc jns imul mov push mov pop sahf aam push xchg ret pushf movsb enter test daa test xchg sahf pushf test repnz mov lcall xchg movsb jbe push (bad) jmp stos jns pop sbb mov mov sub cmpsl xor sub mov xor lea aam sub dec dec dec lea sub (bad) cmc inc adc xchg mov mov dec ret test adc xchg (bad) (bad) cld (bad) dec out shrl and xchg and add cmpsb dec xchg repnz (bad) in gs icebp cmp or inc cmc addl mov push outsl das jne das les fisttpl xchg or int3 push jno dec fmull aas loop cmp mov sahf es jb rcr les push xor mov lods inc int3 pop fs mov add inc lahf adc loop js xor sub push (bad) (bad) outsb adc dec dec sub (bad) ret jb dec movsb and mov shr ret jb mov or movsb push dec dec xor mov mov adc adc add aad xchg cltd dec lds fsubrl out (bad) leave cmovge out (bad) or sub mov in mov test (bad) cmpsb mov insb ljmp rcll and (bad) lret and fcomps test repnz jns mov pop adc pushf or incb inc inc cwtl lcall and dec enter cmpsb nop into mov mov bound es sbb dec xchg jno movsb int3 mov inc sub outsl mov mov rcl imul mov mov and adc daa push cmp dec ds mov test xchg dec (bad) test icebp xor adc mov push and add rorl or fstps int add sbb sub and xor fldenv sbb add or or sub sbb xor cmp add dec inc popf or sbb add fisttpll popf or lods xor inc dec inc popf or sbb add leave xor cmp add rorl sub rcr sbb in popa mov add add sbb sub lds frstor enter test lods mov add lods mov add and or cmp add adc inc or or adc mov rcll mov rcr adc xor inc adc dec inc or add lods pop xchg fadd sbb rorl add or xor lods add xor leave sbb and mov aad lds add add inc add adc mov pop and adc add movsl push fldcw mov test sbb in inc or add or mov inc inc or xor int mov add fdivrs mov lods adc and int lods adc push mov test adc inc inc or pushf loope push pushf loope xor or sub xchg pop fldl imul and xor cwtl mov sbb lea lds and and add mov lods and sbb sbb lds sbb mov add add or sub test sbb in inc or add inc mov loopne int lea cltd call in inc or xor test xchg cltd fisttpll or inc sub add add test dec cltd popf gs jmp int add leave add adc inc lods add adc add test add rcr lods adc lods inc add sbb or roll and sbb and fsub movsl fsubrl inc adc mov or adc cmp sub dec dec test mov mov add loope lods loope adc sub inc push mov or inc sub int lods adc inc sub add inc add mov movsb roll and adc sbb add and xor int sbb adc mov add cltd or cmp or test sbb in inc or pop push loope adc rorl add in sbb push inc inc adc add sbb pop test in mov mov add xor cwtl lods and push xchg gs mov add adc or fstpl rcrl xor mov cmp mov rorl adc mov add in test mov rol add xchg push mov mov pop adc pop leave mov mov inc inc or cmp lods adc adc or sbb mov fldenv test sub leave fldl pop aam rcrl loope mov popf (bad) loope adc mov and call loope loopne inc inc (bad) leave adc in add mov and or sub pop xchg xchg sub push xchg pop sub movsl sbb xchg push rcr xchg mov aad popa and sub mov inc mov lea roll movsl cwtl mov lods test in gs lds mov shll and rcll shll mov shll pop int adc loope mov dec cwtl mov add fdivrs mov cmp mov xor dec xchg imul fldcw fstpl xchg xor and call adc mov pushf mov xchg cltd xor fwait and mov lcall and and cmpsl mov cmpsl lcall and fs lret sub lods push addr16 divb les and je les test dec sbb enter movsl adc sbb in repnz cltd or into loopne mov mov (bad) mov xchg lcall rorb xor popa mov cmp mov jp dec dec and les test inc xor inc inc sbb lods adc in jb xor inc pop xor jbe pop xor push sub push inc jne addr16 movsl inc roll xchg mov inc test xchg inc xor xor fldenv test nop push stos (bad) bound and movsl and mov movsb cwtl or or dec ljmp lret and dec insb inc dec inc inc das inc push inc jns inc inc inc push dec das xor addr16 jbe inc dec push dec popa jbe das cwtl mov scas and (bad) push outsl xchg test mov jo stos gs aam arpl cltd push int mov fdivs mov ss mov adc cmpsb test fs les and jns inc inc inc (bad) push sub (bad) nop pop mov data16 enter int3 test repnz movsb int ja inc push cmp push mov adc xor xchg in popa leave sub adc fs push test and jns ja pop mov lods inc push and jl mov dec imul xor fcomps cltd mov xor dec push xor push mov push sub adc adc jg and inc cmp or enter sahf push push or pop sub das dec mov xor jg pop push loope inc and ret sub inc hlt test push fs movsl test mov ret inc out hlt adc xchg xchg inc lds xchg rorb rolb sbb fs out mov (bad) sub cmp int push or push imul sub out mov xor sub lcall xor dec mov lea lea test pop sub xchg mov push adc sbb (bad) cmpsb mov test outsl or sub push cmpsl sbb pushf and sbb sub cltd fs cmp inc and adc fdivrl (bad) xchg es mov adc sub xchg push rcr mov aad popa and sub movsb xor sbb or lods test in fs sub inc les adc xchg push sub ljmp (bad) mov push push jecxz (bad) aam adc dec dec mov xor mov bound adc mov imul inc jns cmp xor sbb cwtl lods sub xchg mov movsb sub sub dec out xchg insb mov dec jae dec cmp adc push mov ficoml jmp jmp mov xchg cmpsl fs adc inc jbe and xor xchg loope add dec mov xor fwait jns jnp inc lret or sub mov dec adc dec jmp push inc movsl cmp ret lcall jecxz loopne mov or adc es xchg sbb sub data16 xor fs mov mov test (bad) dec out mov cmpsb adc and xor sbb sbb mov sahf and test and or rclb insb pushf data16 mov mov ljmp jno lods xchg or mov out inc fs push inc adc sbb xchg aam insb cmp push add das (bad) call loop inc mov arpl xchg push les cmpsl je pop cmpsl and sbb xor and es lods sbb lods enter int cmp or cwtl int3 shll jle in mov daa test add push imul dec int3 faddl clc xchg (bad) xor cld dec sub shll mov mov sub fsubs mov push test or xor adc aas enter nop data16 xchg popa aaa mov call inc push movsl xor sbb cltd sbb fwait pushf loop dec and xchg adc in fmull les pop aad push nop test (bad) out mov mov loope cmp and sub and bound fldcw mov jbe sub cmp and and adc mov dec or pop clc xchg adc lcall lods cmp mov xor pushf sub mov loop dec (bad) in (bad) and imul xchg push and dec nop loopne lods rcrl movsl mov mov int lret icebp sub and movsl sub test mov xor mov cltd xchg xchg xchg pushf cwtl movsb movsb cwtl mov fwait and sub xchg xchg xchg mov test mov test mov cmpsb xchg xchg xchg xchg pushf cwtl and sub fwait and pushf test mov xchg xchg mov test xchg cltd test movsl cmpsl mov and mov test and xchg mov xchg mov mov mov sub xchg mov mov sub sub and movsb lods and cmpsl mov cmp cmpsb mov sbb mov cmp mov mov cmp movsb sub mov sub xchg cltd lods sbb mov mov sbb cmp and and cwtl xchg test sub cmpsb and mov cwtl lods mov xor test mov fwait mov mov cmp mov mov sbb mov mov stos pushf daa lcall mov lods mov daa sub daa mov fwait mov stos movsb mov mov sub cwtl sbb pushf xor cmpsb xchg cltd lods mov mov and sub cmp cmpsb sub sub mov sbb mov and mov pop mov test and and sbb xchg pushf test mov sub and cmp sub mov sub cmp sbb test xchg mov cmp and mov fwait and and sub mov sub and xchg xchg xchg xchg mov mov sub pushf es sub sbb and and stos lods sbb cmp mov cmp pop xchg mov lods sbb and sbb and mov sub mov and sbb aaa test mov and mov pushf and stos pushf aaa and mov sub and cmp sbb mov sub mov mov stos cwtl mov xor lods and pop movsb sub xor sub cwtl lods mov cmpsl mov sbb pop xchg mov cmp and cmp and sbb xor mov mov cwtl mov fwait and mov sub cmp movsl stos stos mov xor xor and mov sub xchg lcall ss xor cmpsb mov cmp and and and mov and mov and mov sub xor xchg mov mov test mov and mov and mov lods xor mov fwait and sbb movsb lods and sub and cmp and mov sbb sub mov and mov pushf test xchg orb sbb mov cmpsb stos cwtl mov stos mov xor mov cltd xchg xchg xchg pushf cwtl movsb movsb cwtl mov fwait and sub xchg aam mov fisubr jb arpl mov or mov inc lret adc sbb jl sub imul sub or imul or cs insb in in imul test in in or sub or sub or push jns dec je adc pushf enter (bad) enter mov and aam mov nop mov adc cmc adc mov ret sbb mov popf test push or mov dec sub sub ror xchg arpl sub or mov (bad) or mov int xor loope rcr nop enter sub sub leave lret lea jbe dec lcall xor dec or pop enter mov lods jb (bad) mov repnz movsb rolb pop lcall xchg adc push or pop mov and imul ror xchg or pop xchg dec mov sub inc jno xchg cmp bound mov ljmp lods dec es dec enter sub mov xchg xchg loop inc in cmp adc adc rclb push xchg xchg push adc pop pushf int3 ficoml push sbb cwtl mov ficom (bad) fsubrs xor fstl int adc sbb and inc mov loope in lods xor sub and cmp sbb mov sub mov mov pushf movb and movsb sub or faddl (bad) xor push dec inc dec imul je inc push fs ss jae and xchg or push inc dec push pushw mov pop xor sahf adc xchg aad mov xchg (bad) cmpsl jae dec lret sbb push add mov xor ja repz xchg lcall test xor roll xorl mov mov sbb sahf fsubs push jne push repz in sub push jmp mov outsb call or imul and mov cmp and push dec push xor lret (bad) sub xor dec lret dec inc dec pop dec dec dec cmp sub dec dec xor adc popf popf enter fbld mov mov int3 and bound (bad) fmuls xor cmpsl addr16 inc aaa push xchg pop gs imul mov sub nop push adc and sub mov ljmp inc push add je test movsl push sub xor stos mov call outsl adc dec sub dec sub and lea xchg adc adc adc cltd inc mov and shll test or lods repnz in popf and xor mov daa xchg and adc icebp cmp mov pop sbb sub loop and (bad) mov pop cltd or dec cs push popa dec sub dec push inc addr16 fs dec mov cmp xchg inc movsl adc xor mov xlat jl or lods xor stos test pop mov or mov xor sub xor mov add test inc xor lret pop xchg mov hlt mov leave cmp lods mov and (bad) int mov ljmp mov test imul adc rcrb xor xlat mov sbb mov mov inc push inc js movsb pop mov cmp mov es jb cmp adc gs xchg and cmp adc adc sub aaa mov bound int3 test cld int3 int dec out inc (bad) call inc gs push mov lods push xor sub inc jg dec or adc mov fldenv xchg fnsave dec or or push ljmp leave push lret dec das movsb sub stos stos sbb sub cltd or adc sbb push xchg xchg inc mov and call sahf (bad) mov scas mov cmpsb and pop adc sbb hlt bound fwait cmpsb stos mov push pop push pop mov aam adc cmpsb and push es pop adc mov mov scas adc dec movsl jno movsb js pop inc hlt xchg mov adc es dec xchg adc jne les jne inc stos lea sub rcrb pop sahf push push adc cmpl sahf push adc or adc inc cwtl pop adc aad push es aaa push inc push dec arpl inc inc inc dec push inc push push imul dec ja insb pop dec cmp das cmp imul imul arpl dec jns jae push addr16 imul imul dec xor cmp sub pop xor inc inc inc inc push imul pop pop imul push push ja xor ss dec das das das cmp js insb inc das dec xor cmp inc push inc ss push imul data16 das sub popa addr16 dec jp push js das das imul cmp dec xor push insb popa dec push ja pop push dec push xor aaa das cmp imul gs dec push imul dec insb das inc inc push push outsl je inc dec dec jne outsl pop xor jae imul jns dec dec gs push push push data16 das das das pop inc das inc cmp inc outsl jae dec push dec inc inc inc outsl dec das cmp inc push das push das xor dec pop pop cmp pop pop insb jbe ja push inc ss dec das das sub outsb push imul inc fs push dec inc pop pop pop push push cmp dec inc imul dec dec das das das xor inc imul outsb sub jae dec jae inc inc inc inc push imul ja fs sub inc xor dec cmp inc xor inc das fs inc das fs push fs jp data16 das das xor inc inc dec jae dec jae fs ja push pop jbe addr16 inc addr16 inc xor inc inc popa dec push das cmp inc push inc inc inc inc das inc push inc jns push inc inc ja xor push inc dec push imul cmp push dec inc inc dec pop inc fs push dec push pushw push pop outsl push push cmp push dec inc inc dec pop inc fs dec dec push das cmp js inc cmp inc pop outsl dec cmp jb das das cmp jp cmp imul inc xor inc inc dec xor push xor das xor jbe xor dec xor push xor das xor outsl xor inc inc das inc push push push push inc das fs jns push das cmp xor das js arpl imul inc dec jb push inc pop jae inc inc inc inc inc push popa inc insb push push inc inc push jb addr16 push push inc fs xor inc inc inc pop jno push cmp push dec inc inc dec jbe pop jae inc inc push inc inc dec push pop popa inc inc inc inc inc inc das fs push dec popa dec inc insb push push inc das inc fs push push inc ja gs dec jae inc inc inc inc push imul xor inc inc sub dec inc inc inc bound data16 inc push inc inc das js xor imul arpl inc inc push inc imul jbe push xor dec jbe pop jae inc push pop jbe push push dec push push xor xor das cmp sub je pop xor push jp push cmp dec jno xor push data16 ja xor sub push addr16 jp outsl outsl xor pop inc imul inc cmp ja dec outsl inc imul inc push dec inc imul outsl inc inc push inc imul inc imul inc ss pop push xor inc gs xor inc push push imul xor push dec inc imul inc das xor cmp inc das xor js inc inc xor je bound inc inc push js inc inc inc dec pop inc inc jp xor push push imul dec xor jno imul inc push dec inc imul inc push push dec cmp inc inc ss xor push gs xor dec dec outsl inc imul imul inc imul inc push cmp push pop jbe sub push xor dec inc outsl dec push pop xor inc push bound push ss addr16 push pop ja inc push ss dec push push push addr16 pop das js imul inc inc das xor das js xor push inc inc push push cmp inc dec xor inc inc push das xor cmp push push inc pop insb jbe ja dec dec push inc push push pop imul push inc dec push inc inc dec pop inc fs jns push gs push push push cmp inc insb pop cmp data16 inc inc inc inc arpl dec pop sub gs push push push cmp dec xor inc dec push das xor imul push ss insb outsl das ja inc inc inc data16 fs fs push popa dec outsb cmp inc das inc fs push push inc insl imul das inc gs push pop jbe jne push outsl inc inc inc outsl push inc bound das xor das xor das js inc cmp inc das xor imul inc push push arpl das das das push push das pop popa inc addr16 addr16 dec push das cmp js cmp inc inc popa inc ja push addr16 outsl push sub das xor outsb dec jbe das xor dec ss arpl inc inc outsl popa inc jo inc dec imul aaa jae das sub addr16 inc inc inc inc popa dec addr16 addr16 dec push addr16 outsl inc jne das das xor dec dec and cwtl fisttpll rcl rclb adc push xchg ficompl adc (bad) fwait push adc adc into push or rcl xchg pop rcll adc pop fst rcrl push (bad) sbb adc pop fcompl or in cmovl push es int outsl or lret dec or mov dec mov cmpsb mov mov out or push or or (bad) sub dec dec mov div es repnz (bad) push jae adc xchg movsb shll jo jo pusha jo jo fiaddl out movsb mov sahf aam push jo lcall jb repnz pushf lods push sub sub aaa mov cmp sbb lcall cmp and push adc pop fstps sbb mov test and mov pushf push push or or add mov dec pop pop insb jbe ja push inc ss dec and xorl xchg dec lea sub sub sub stos pop or test test pop or jnp sbb and mov push ja fs inc daa mov cmpsl sbb mov mov sub mulb loop repz add push clc nop cltd sub jbe jbe push je push jae addl xor test push inc xchg xchg sbb mov inc (bad) mov inc xchg dec push stos ret jp loope adc or pop dec cmp cmp dec sbb adc ficom or out dec mov cmp test push bound sbbl in outsl xor sbb jmp lret push and or cmp and adc adc je mov mov push stos stos jns or and nop push bound or inc cmpsl xchg and or nop lret adc je adc out xor adc jbe adc mov adc and bound les das cmp sub je pop xor push jp push cmp and loope fldl adc pushf xchg inc imul lret int mov movsl mov lea sub lahf enter test and lret push mov or mov imul popa jne and fadd int rcrl dec or movsb and mov xor sub and or mov mov xchg cltd popf fimull adc scas jno cltd lret aad pop push adc rcll push xchg dec or imul ret adc mov popf or or out dec imul dec pop sbb test and mov xchg cltd je inc xor mov stos adc xchg bound inc lret sub sub mov arpl mov fstps push fisttpl or bound inc loop pop call fwait pop int sub data16 or lret and push popf fsubl jp xor jns xchg dec nop fcom dec test ret xchg mov sbb inc adc inc dec imul pop mov inc dec addr16 aaa push les and pop pop and inc xor mov fisub add jmp fnstenv cmp leave in dec jl push cwtl pushf mov mov lcall pop sub adc xor sbb dec out clc xchg nop inc ljmp or rorl daa addl and enter into in mov or dec mov cmpsb and outsl dec xor pop es loop sub push push xchg dec or mulb mov and int3 mov insb sahf int3 jecxz test mov adc xchg aad sbb mov pushf int3 int3 rolb das jp (bad) sub cltd or inc sub sub jno cmpsl loop data16 dec jne mov int3 insb pushf aam aam inc xchg es mov cmp dec push inc push xchg repnz ffree call cld dec cmpsb sahf daa adc jmp inc dec jmp and stos iret enter out and movsl inc xchg adc movsb loop push int3 lret into jo les les les jl sub xor enter mov and leave xchg adc or xor mov and roll incb test sub les mov aad clc nop rcrl or rcrl lret into push pop push push pop aam rorl fsts ficomp lret lret lret ficoml push mov xchg push xchg adc push cltd xchg sbb adc push xchg xchg or push push pop dec pop push mov pushf push push xchg or lcall pop int3 xchg push adc push mov nop fistl ficom rclb rclb adc push adc int xchg cltd sahf adc int3 aad pop push adc fstl adc push push dec dec aam push rcl push adc push mov push mov mov dec dec aam push rcll fwait mov sbb xchg xchg dec into push rcll fwait mov cltd aam rclb xchg popf int3 push rorl rcrl mov fnop push dec xchg xchg nop lret lret into push adc sbb push push adc aad int3 xchg push xchg (bad) push rclb xchg adc nop aam rcrb push dec xchg rcrl lret adc ficoml push push push push cltd adc fisttpl xchg sbb sbb sahf pop mov int push push xchg pop adc xchg pop int3 dec push adc push adc dec push adc push nop nop rcrl pop rclb push or fimull pop pop or into or push pop into adc dec xchg push xchg aam rclb xchg dec into push rcrl pop rclb push dec xchg push xchg adc rclb xchg dec into push fistl ficom rclb xchg push xchg adc rclb xchg dec into push rcll dec xchg push xchg adc rclb xchg dec ficom push pop lret fimull lcall push pop pop rclb rcr pop fimul aam rcll pop fwait aam push or int adc sbb lea push xchg rclb push push xchg pop sbb rcll push adc nop push ficoml push push dec ficomp push popf rcrl ficompl pop push pop popf fst pop adc adc aam dec xchg push or lret into pop xchg sbb push xchg int fwait push sbb xchg lcall dec sbb push fxch adc mov (bad) fwait rcr rclb push push push dec push xchg sbb adc lcall push pop pop rclb lret lret sbb adc push rcrl adc fsts push lcall push push push or sbb pop pop xchg pop into or push pop into adc pop adc lcall nop push push push push or fcoms pop adc rcl lcall push push push or ficompl push dec sbb push pop xchg push pop fcom push push push push xchg or or adc push push rcrl aam push push push adc push sbb push sbb adc push push push rcrl nop push push push push dec xchg push xchg fst rclb xchg dec into pop sbb push xchg nop rclb xchg push xchg fst rclb xchg dec ficom push pop xchg push pop rcl nop rcrl pop rclb push push adc nop push push or push nop nop mov lret (bad) xchg push nop cltd aam adc rcl xchg nop rclb push push xchg pop adc ficom sbb adc rorb dec adc xchg push pop aam xchg or cltd push sahf adc push rcrl int3 aad pop xchg push pop rclb nop rcrl nop push push push push push dec push rcr dec lret (bad) push pop adc adc fwait rorb adc push pop xchg push pop rcl xchg or adc push dec ficom push pop sbb mov into dec adc pop sahf adc push or adc push lcall push push push or or aam rcll adc push push push xchg dec into push fsts push rclb xchg push xchg adc push push push xchg dec into pop push lcall push push push or sbb push push push push push adc adc rclb push push dec adc fcmovbe nop nop push dec rcrl push push push dec xchg push xchg adc push push xchg pop xchg push pop fcoms xchg or dec cltd fst dec adc xchg push pop fcoms xchg or xchg push sahf push push push rcll dec xchg push xchg fst rclb xchg dec ficom push pop dec ficoml lret into dec sbb xchg push nop cltd aam adc adc push fwait rcl xchg nop rclb push push xchg pop adc into pop push popf rclb fcoms aad pop rcl xchg nop aam push push or ficompl rorb xchg dec push push nop sahf adc xchg push pop fsts push push push xchg or adc fstpl adc push push push adc lcall push adc push nop lcall xchg adc pop push sahf push or adc push push or popf rclb push or xchg pop pushf fxch aad sbb pop ficomp aam adc push push push nop lcall push push push pop lcall xchg pop lret into push adc pop pop adc nop push push pop xchg push pop rcrb fcom push push xchg xchg push fisttpl aam adc sbb sahf push or int adc fmull adc aad lret int3 push rcrl pop rclb xchg rcr sbbb sahf or rcrl lret into push pop push push pop aam rorl fsts ficomp lret fmul or dec mov dec or out enter into push enter sub sub inc push in sub dec sub lret int push sub dec pop or es push outsl or pop sub sub or mov lret or sub enter jne nop in lods inc dec imul mov mov les testb cmc xchg and and pop popf dec (bad) xchg out bound (bad) push cwtl aam xchg into (bad) (bad) insb mov insb sub inc inc inc inc sub cltd and adc popf nop aam rcrb insb mov js js push push imul inc inc inc sub cmp in out xchg je xor adc mov inc dec insb inc dec inc and xchg pop and mov stos mov jo mov xchg repz hlt loope xor xchg push (bad) (bad) and lock (bad) jo es xor cmp inc dec imul adc fisub push inc fs popa dec dec xor add xor sbb sub and push ficoml push push push mov into call sub in dec aam push xor push xchg push dec xchg push or inc sub push dec sub mov mov lret outsl sub or (bad) mov in bound mov sbb adc and sub icebp loop dec adc sbb pop call dec ja ret jmp xchg or bound push fs mov (bad) out xchg cmp icebp sub add sbb (bad) xchg dec into mov sub dec mov cltd or adc sahf and dec push outsb adc sub jno cmpsl mov fiadd xchg or jl test adc xor xor adc adc enter xor or fwait pop daa push jg xor in xor call ror and dec ficoml popa das icebp daa xor sub bound loop das cld dec test daa insb dec test jno xor es mov outsl xchg pusha (bad) (bad) into test xchg arpl pop mov jnp mov xor xor les sbb mov mov fs or sub dec sub sbb pop rorl out inc in sub int lret and dec push das les cmp icebp xor mov or sbb pop ss subl cmp icebp xor cld dec imul and loop inc adc inc and jno cmpsl inc test and jnp daa cmpsl js xchg aas hlt inc or mov test (bad) xor jle pop loop inc (bad) and xchg dec in pop enter and inc xchg xor cld dec in mov es xor xchg (bad) or adc and xchg push test xor test in inc gs jp mov ror out int3 dec inc loop dec adc jb xchg (bad) push and cmp sbb push aad mov dec push mov addl add repnz mov dec arpl jp dec mov mov mov and push repz dec sub sub adc and in sub dec sbb sbb and cmp and xchg xchg mov xor sbb xorl es dec xor push xor ror cltd mov fstps inc fadd and xchg mov xor adc rcr lods loopne imul ss jne movsl push inc push pop mov xchg xchg inc in pop je cmpsb sub ficompl xchg or lea lcall or pop pop adc aad push or pop rcrl inc mov mov dec je dec inc jb xor bound sub popf sbb (bad) test popf icebp sub mov sub adc push jae imul push in and sbb sbb xor mov mov adc adc outsl (bad) lret ss inc adc cltd cld leave sub or sbb xor pushf adc cmp and pop (bad) and cmpsl inc inc sub les arpl pop push inc adc sub out dec push inc dec inc and dec dec scas xor xchg jnp jle and xor cwtl into fbld mov dec mov int daa sub in inc push ja (bad) mov xor dec call into mov popaw xor icebp sub mov mov mov or xor xchg sub jae and cmpl lcall cmp sarl xor jb sub mov stos lcall adc mov xchg xor jns mov sbb sub or mov (bad) xor or stos sub sbb and mov jns mov ret sbb dec xchg xor mov jnp sbb sbb or push mov ret imul lcall arpl jnp andl cmp or xor sbb sbb arpl or sbb mov cmp or jb test stos dec or jns mov or dec mov sbb or xor pop stos or mov mov lcall jnp jns mov or jnp cmpl mov lret mov cmp cmp mov dec ret xor sbb or or sub mov stos dec test adc or or mov or dec sbbl or or mov or pop and mov mov jb or mov arpl xchg inc sarl stos or or or or mov xchg jns stos push ret xor xor mov (bad) stos jnp mov xor and mov imul cmp and xchg (bad) cmp mov and mov adc (bad) pop or sbb and ret lret lret push mov imul mov and xchg xor mov dec mov sub sbbl imul sarl lret mov rol mov mov pop leave mov or mov jns mov sub sub mov stos imul mov or stos or xchg xor and or stos or xchg xor mov mov or dec rorl or jp popa mov mov and ret bound andl leave mov cmpl or ret stos mov or or jae sub pop jns jp or adc lcall mov ret fwait xor ret (bad) xor or mov cmp (bad) xor or ret fwait xor jp jnp rol (bad) stos or mov jns jns or or jns sub ret jae mov lret lret xor jp jnp roll lret jns jns jnp ret mov or cmp jns sub ret jae mov lret lret xor jp jns stos dec push lret jns jns or mov jns sub ret jae mov lret lret xor jp push lret jnp jns stos dec xchg xor cmpl xor or ret push lret jns jns dec and das xor inc fs popa dec push imul dec push das sub lcall push cmpsl je and jnp stos lcall adc mov xchg xor adc mov test or aam adc nop push sbb jno cmp cmp pop pop arpl das adc pop cwtl mov and and sub mov jae dec jae pop insb jbe ja inc outsl js insb inc inc inc outsl inc xchg and jp or sbb mov cmp xchg test test mov aam mov fldcw lea mov jmp pop xchg je xor mov notb jmp mov dec ud2 int push xchg int3 pop xchg adc lret aad push pop mov xchg add xchg xor xchg nop lods or sbb or xchg push outsb imul mov push sub call into sub push push push push lcall into ljmp xchg adc addr16 inc xchg and add notl inc dec out mov jmp lret push or int3 push es dec addr16 addr16 adc rcrl test push leave or shrl test pop popf or xchg lcall jae mov xchg popa int fiadd repz stos inc jb pop rcl mov sahf out bound imul cmp lods in sbb mov int test or mov mov inc inc mov popa adc and sub jb xchg movsl call hlt test xchg xchg mov fsubs add adc xchg xchg push (bad) sbb adc sbb mov enter or mov push es push push dec inc and (bad) xor pop scas pop hlt mov mov data16 adc out test or sub or inc (bad) (bad) cld mov int3 ljmp popa dec ja (bad) (bad) clc cwtl xchg and icebp sub and cwtl mov mov inc enter dec sub test faddl inc push dec pusha mov pop ret mov mov xchg imul arpl push movsb xor and jo rcll lds and sub cmp inc cld inc or ja adc mov mov and sbb fdivrl lea mov sub sub cmp push dec inc or push jb inc xchg sbb inc mov xchg loop inc mov mov inc mov push jae mov lea xchg xchg dec rcl (bad) iret xchg xor push ror jp xor setno add stos sub jns dec push inc push icebp xor in dec fs xor mov mov adc push nop xchg mov ljmp adc inc inc inc push or inc push mov push je dec lret xor clc xchg pop and and lret and inc dec xor bound fisub popa cmp in bound push cwtl mov fidivl in popf test inc fldl les sub xor lods pop std push and xor imul dec pop int push adc adc and enter arpl sbb mov and les xor int3 sar xchg movsb int3 shll stos adc adc daa push sahf fsubr and lret insb dec stos adc mov sub popa sbb add dec bound dec fwait xor mov push adc cmpsl mov mov mov out fs imul jo push das xor pop mov jb dec dec (bad) push xor sub bound les sbb dec inc and dec test add or pop cwtl dec lods icebp and xor dec popa das cltd rcrl dec sub cmp jno push push and and inc mov andl cltd sbb add add xor inc dec push inc addr16 inc ss xchg mov or xor js cltd cmpsb arpl inc jne in dec jbe mov (bad) into gs sbb (bad) es and pop dec jmp test out into dec fist cmp jno movsb loop outsb and jp inc lcall (bad) adc adc cld test out dec into xchg (bad) pusha jo mov dec xchg call cmp and in inc and (bad) in mov test scas push mov push lret mov dec in call out scas scas movsl in outsb call out jmp imul sub xchg sub sub dec or sub sub dec dec enter insl in int3 in outsl cs sub sub or sub sub lea push insl insl sub push out out cs in imul mov vcvttpd2dqy (bad) mov sub sub imul in scas enter sub (bad) and push dec sub sub imul ljmp mov stos es and ljmp jmp sub test call dec test jmp dec outsb imul sub mov jmp sub sub or (bad) outsl or sub mov jmp call out mov or call lret xchg lods dec into dec vpaddsw imul into out sub cs outsb ljmp in jmp lret sub dec in dec enter call mov in dec into dec vpaddsb iret or or insl dec push mov out push or es or or lods sub data16 in in imul leave out in outsb call sub lret outsl sub call mov leave sub sub enter push lods ljmp in sub push sub sub push inc dec inc mov int3 lea mov leave jmp ljmp xchg sub data16 into ljmp push call ljmp or dec vpmaxsw push dec sub insl enter test dec sub sub sub sub outsb jmp cmpsb sub sub push in and dec add insl sub insl insl or sub sub leave or in outsl cs sub es in cs leave iret movsl in imul es int3 test or sub imul imul or dec enter push movsl in sub int3 mov mov sub dec add push insl sub sub dec stos mov lods lea or sub mov daa or and gs or mov test into jmp insb push (bad) dec dec sub or es mov dec in jmp sub call in es int push in jmp das inc in outsb int or mov enter ljmp dec add gs mov out movsl in imul into lods ljmp push addr16 es or imul sub sub out enter addr16 lret cs jmp es dec movsl call call mov out lods cs in dec or sub addr16 daa push in out ljmp sub inc push in dec or add mov dec lret or sub sub sub leave dec in out call lods es insl or cs dec jmp out dec es push or out int outsl or ljmp imul add lret cs insb in ljmp mov sub mov mov or mov or push sub pop sub sub leave stos dec (bad) sub imul into vcvttpd2dqy sub test jmp stos jmp lods or and sub dec sub or dec int outsl sub lret sub push lods mov in or call sub lea mov dec enter sub prefetch or lods in cs call dec sub out lret dec sub enter in outsb call scas push sub jmp sub sub outsl sub push call ljmp test jmp mov ljmp push sub sub sub dec dec vpmaxsw or dec mov sub lret outsl sub sub cs push push lods sub imul sub or out mov sub or insb mov sub sub sub (bad) in mov in call das cs sub out in push int test loopne and xchg pop rcrl xchg pop adc push xchg adc fcmovnbe push push pop xchg int pop pop dec lret lret push (bad) rcrb rclb push push or int sub push or sub sub dec dec enter insl in int3 in outsl cs pushf push dec imul xor fwait pop xchg sbb xchg add (bad) out vcvttpd2dqy (bad) mov sub xor and (bad) rcrl dec (bad) xchg pushf jb (bad) inc xchg sbb pop cltd loope adc inc pop push (bad) lds fldl mov inc loope gs frstor imul adc add frstor dec int and push adc adc int3 xor jp dec adc and inc adc cmp mov in je cmp sub aaa cmpsl sub cmp xor sbb or xchg mov dec sub mov adc pushf xchg adc mulb gs popa int3 xchg xor adc jns int3 adc sbb jno cltd inc pop inc fs lea jb repnz pushf lods rclb cwtl lods mov mov insb pop xor pop inc fs inc sbb test mov push mov imul sbb sbb xor sbb loopne jmp xor gs adc mov push push adc jae and add xor inc mov and adc xchg adc mov movsl pop adc pop mov out dec dec cmp and ret adc outsb dec mov sbb xchg sbb push xchg int3 int3 es dec dec pop adc aam mov push xchg call dec out mov jne xchg xchg mov push push xor and rclb enter outsl inc movsl sub mov cmp xchg push push adc mov mov popf xor lods mov pop int3 (bad) jo fidiv xchg push bound lret inc fs (bad) sarl fwait and adc aam sbb popf pop aad popf xchg or push addr16 sub sub adc jae je adc xchg mov int test xchg jns rolb stos xor test or mov xor xor leave adc in xchg out iret adc int dec sub inc xchg leave mov (bad) xchg or sub mov loope cmp adc push (bad) xchg and aam sbb or mov xor xor or sbb cwtl lds dec imul clc fwait push dec rol loop cld dec dec ret in xor adc dec test mov mov test xchg xchg xchg dec imul jb cmp into push and cwtl dec sub call adc lret (bad) hlt (bad) adc xchg push xchg mov xor mov mov int pop xor adc sbb insb dec in jns dec cltd or int lods dec dec test sub xor sbb sub sub adc test jbe movsb xor inc stc mov and and inc cmpsl test stos cmpsl or inc loop inc and sbb cltd pop push jno sub leave cmp push sub cmp cwtl fs inc and popa sub cltd mov xor pop and jae mov bound les rorl sub movsl insl dec scas stos sbb adc cwtl mov mov cmpsb mov movsb push pop aad push dec adc pop pop (bad) nop jle push and push dec les push inc push inc popa dec addr16 push adc dec cmp inc adc mov push movsb dec cltd fstps rcrb into outsb jb scas mov roll adc in jp outsl xor mov (bad) xor inc imul test xor les imul push adc push cmp mov sbb jg roll aad dec xchg fisttpll adc movsb lea dec inc pop loop xor sub das inc inc or test test xchg out (bad) ss xchg adc and inc push mov addr16 outsl dec imul das jb inc jl sub mov or movsb imul out and stos jae dec stos pop mov dec xchg pushf adc pop jo (bad) and mov cmpsb daa xor test mov scas inc repz adc sub aaa clc fidivr inc adc and mov arpl scas xor lret mov test stos and adc popw mov push inc inc je adcl movsb adc adc adc adc cmpsb aam pushw mov inc ss xchg mov adc xchg aam test adc divl je mov repnz inc popw mov push inc push xchg cmpsb jecxz test inc mul test adc adc inc inc addr16 (bad) jne and inc inc jne adc movb xor inc gs movsb xchg mov adc adc adc cmpsl jae xlat mov movsb push addl mov movsb les push mov mull addr16 push lds test add and add inc mull push adc test test push repz les test add and addr16 adc jbe hlt xor divb adc mov adc xchg in and and rcll adc and push movsb ja repz test and inc (bad) hlt adc test data16 hlt xchg mull push adc test xchg pop xchg fs hlt push cmpsl test add inc hlt push inc hlt adc fs data16 push movsl cmpsb fs mull mov adc xchg xor jae addl movsb fs adc testb adc push adc xor aam adc add inc xchg test in cmc add jecxz jne movsb inc adc adc adc gs cmpsl jbe adc xchg add adc loop add and aam xchg mov inc je and inc xchg xchg aam push ja cmpsb gs cmc and inc adc inc adc push je adc xchg inc inc shll je adc push je push jae addl xor adc adc adc adc test mov hlt mov addl inc xchg ss push xchg push xor inc mull hlt inc inc jne adc adc cmc inc mov jne xchg adc adc adc les inc test data16 inc mov and xchg inc test mulw mov xor test push inc inc loop adc xchg push adc xchg xor jne and inc jne add jae je xor test xchg push ss movsb adc xor je lds adc mov adc adc xchg add xchg and ss ss cmpsb mov in movsl movsl push xchg jne and inc jbe mov aam je adc inc cmc inc aam mov inc add inc add xchg add aad adc inc and inc test repnz addl test adc push cmpsl inc push adc adc test mov hlt mov addl inc aam adc push xchg push xor inc mull hlt inc inc jbe adc adc cmc inc mov jne xchg adc adc adc les inc test data16 inc mov and xchg inc test data16 repnz xor test push inc inc loop aam xchg and add adc aam adc push xchg je ret add xchg ja xchg inc aaa je adc and movsb adc adc jbe adc adc les inc inc test add xchg movsl pop je aaa je adc inc test mov inc repz xor jbe adc adc aam adc adc adc bound adc xchg (bad) hlt xchg inc (bad) hlt xchg test push adc inc push je push test adc xrelease test adc adc lds xchg ja hlt adc xor xor xchg adc test adc adc testl inc repnz mov test data16 (bad) arpl repnz xor test je aam fs adc adc mov xchg aam je je adc adc adc jb mull inc test test fs (bad) repnz mov (bad) cmc jne mov adc je and xchg xchg je xchg daa xchg xor inc inc inc in adc test mov inc push adc jae adc push je xchg adc fs xchg xchg xacquire hlt xchg inc fs xchg mov xchg add jae data16 adc adc inc (bad) es xor adc jbe mulb notb adc and adc adc es xchg xor adc xchg and add xor adc xchg push test fs (bad) (bad) repnz movsb les test and test cmpsl cmpsl jb repnz mov xchg adc add adc movsl es adc adc adc repz xor inc xchg and push push movsb adc aam push data16 adc ret nop dec and mov sbb mov sahf fwait push sbb mov cltd adc int sbb aad dec push rcrb push adc (bad) (bad) mov xchg xchg fsubl and push push data16 popa dec addr16 push push inc das inc fs ja push inc dec repz lods and cmpsl pop adc xchg popf int3 push pop mov pop or lcall nop push adc dec adc or adc aam nop nop push push dec adc adc push aad push dec ficom push inc jo (bad) repnz inc inc push imul pop push inc pop sub push inc pop jae inc cmp inc push outsl push inc inc dec dec cmp nop mov pop xchg fisttpll int ficoml push mov mov and xor mov pop mov scas dec push inc dec jne push push and jp and mov sub and int mov xor sbb add sbb pop adc xor mov add adc adc inc loope frstor dec sub inc inc es cmp movsb mov lds sub or test sub (bad) mov daa sub sub (bad) ljmp sub in pop jae adc mov repnz aaa xor lcall int xchg dec imul lea mov insb repz push push mov es mov and or loopne lods inc je dec dec xor or jnp orl movsb push (bad) mov mov mov shr mov mov mov popf and movsb lds cmp push and enter out inc ss xor mov hlt mov enter pusha es adc inc push cmp enter mov mov sub mov and xorl icebp sub (bad) stc push sbb xchg push and xchg adc out repnz dec mov nop dec add mov and cmp int sub push xor cmp inc enter (bad) inc mov test and sbb cmp pop pushf xor int3 movsb lock jb jecxz mov mov mov inc test adc adc xor push rcll cmp pop insl dec inc inc movsl sbb fwait sub xchg jmp push pushw leave outsb lret or test add aam repz and xchg xchg je xchg daa xchg xor cmp and cwtl into push out push ret outsl cwtl (bad) in and cmp and xor push adc sbb bound sahf imulb and loop bound dec mov dec in nop shrb and mov mov ret sarl push push sarb rorb sub xchg dec lods lods dec cmp stos mov push or push and push xchg and ficoml mov lea xor arpl ret xchg pop adc test lea sbb rcll adc mov stos xchg dec cs cltd sbb cmpsb hlt repz jns cltd xchg and int dec jmp sub push fmull fcoms mov mov xchg (bad) sub mov icebp sub inc test and push mov in stos enter sbb cmp push xchg adc mov xchg push es xor addr16 mov xchg (bad) pop and jae rcrb xor xor dec lret test and mov fs insb jecxz sbb sbb cmp ret mov ud2 cmp cmp mov call dec sub or xchg adc jae and sbbl dec sub imul mov xchg test mov dec inc enter xor adc roll push sub inc pop mov or inc xchg xor push dec les (bad) lret pop int stos mov and out inc cmp xchg push jmp push dec (bad) out jmp xchg push xchg sbb fdivrl icebp and jmp cmpsl je xchg inc aam aad pop xor cmp bound inc adc aaa xchg mov xchg (bad) (bad) xchg nop out (bad) mov int3 (bad) mov hlt cwtl (bad) insb stos into test aam xchg lods push mov test (bad) lods ljmp in nop int3 mov hlt pop pop pop push xchg aam pop pop pop jo jb push fs hlt pop pop pop jo call pusha mov (bad) (bad) in pop pop pop out push mov ret int3 pop pop pop out mov pop (bad) (bad) xchg into (bad) (bad) (bad) pop pop pop pop mov int3 pop pop pop push les in pop pop pop push rclb shrb jb xchg movsb jo (bad) xchg test stos rorb movsb aam data16 pop pop int3 xchg mov pop hlt fdivs lcall aam mov call pop pop pop mov (bad) mov (bad) xchg mov jb rclb pop pop mov (bad) aam mov pop pop out push xchg nop pop (bad) (bad) xchg into (bad) (bad) (bad) pop pop pop pop mov int3 pop pop pop push les in pop pop pop push rclb call pop jo call pop pop pop mov stos pushf scas outsb pop pop pop jo call in pop pop pop push mov test jo (bad) xchg test mov test into mov pop jb mov cmpsb shl mov pop pop hlt (bad) movsb movsb hlt call lcall jb out mov into jo out repnz xchg xchg (bad) xchg pushf jo (bad) mov mov xchg mov push pop pop jo out lcall xchg ret movsb mov scas (bad) mov shlb fisubr movsb mov nop fdivp out pop pop fs xchg (bad) stos (bad) ret enter (bad) cwtl test pop push shrb pop pop ret loop mov jb (bad) sahf rorb insb xchg les fadds ror nop pusha xchg (bad) insb nop xchg in jb out bound pop pop push aam in mov fs mov rclb scas (bad) pushf lods rclb movsb stos lods pushf scas lods hlt cwtl les xchg pop pop push pushf movsb int3 lock insb mov push mov mov mov mov mov xchg faddp into stos movsb mov test outsb into xchg hlt pop push loop loop movsb mov pop jo ljmp test xchg nop sahf pop push push shrb stos push (bad) mov int3 outsb pop rcrb stos lcall stos (bad) stos push aam fcompl pop out mov mov in scas jo mov nop pop pop jb insb xchg in fs pop pop in in cmpsb bound (bad) insb mov lock (bad) xchg (bad) test movsb enter cwtl loop pop in jo fs aam lock pop pop aam mov stos mov stos mov (bad) insb xchg ljmp enter into xchg outsb jo fmul outsb nop push shlb mov aam cmpsb xchg ret test mov outsb pop pop jb pop hlt mov stos mov mov nop mov nop pop pop push pushf in mov outsb pop pop pop fisubr pop pop push movsb mov mov pop pop pop jb outsb mov bound repnz (bad) hlt stos mov pusha mov pop int3 pop pop stos mov pop jb mov nop stos cwtl aam fs pop int3 pop pop insb cwtl aam pop pop push pushf (bad) mov jb pop jb stos bound (bad) fidiv pushf in mov jb pop pop (bad) pop outsb pop pop push pop pop bound stos pop pop scas rol test push pop pop push rclb in pop pop aam scas stos pop int3 pop pop stos mov pop jb mov nop stos cwtl aam fs pop int3 pop pop insb mov pushf (bad) mov jb pop jb stos bound (bad) fidiv pushf in mov jb pop pop fisub fs mov test stos pop pop scas rol test push pop pop push into fcompl pop pop fisubr xchg test (bad) xchg fmuls mov fidiv ficoml test (bad) xchg bound mov lods fcmovbe pusha movsb enter xchg movsb lret rcrb bound sahf aam ljmp into mov into jb in pop pop mov nop cwtl mov pusha data16 push mov ret push pop push jb mov (bad) pushf (bad) (bad) (bad) (bad) (bad) mov xchg out bound out (bad) xchg (bad) (bad) mov xchg mov pop int3 pop pop stos mov mov mov aam mov xchg (bad) aam mov pop int3 pop pop stos mov push mov pop pop bound mov into (bad) (bad) (bad) xchg mov pop pop bound and mov sbb and and mov sub xor mov mov stos cmp cmp sub movsb mov mov inc gs jp sub aam adc sbb rorb adc pop xchg push dec pop popf test dec push dec inc aaa popa push bound into lret xchg xchg into (bad) (bad) andl lret dec je out ljmp nop fidiv mov push push xchg mov push adc push push enter and xchg xor sarl popa lret xor xor cmp adcl sub mov cltd cwtl nop push push (bad) or xor sub sbb mov (bad) call test cmp cmp test or mov nop rcrl pop loop inc xor fwait dec (bad) mov cmpsl inc xchg adc pop cwtl pushf mov mov sub mov cmp sub adc pusha rcrl fldenv lods xchg cs call stos dec sub out sub push sub or (bad) ss push inc pop ja dec outsl jp push das xor dec imul inc fs addr16 outsl insl dec push sub sub jns and dec mov movsb imul adc lret jnp sbb cmp dec or mov aam inc adc movsl fmul sahf gs testb dec pop ret mov mov arpl mov lcall ret lcall mov push fwait push cltd adc push mov aad nop rcrl rclb (bad) (bad) pop mov shlb jns subl xor jb or sbb shrl insl or insb ret and fwait repnz cmp mov and frstor inc sub jb jb push xor and call data16 push in inc and jp xchg mov push mov jns xchg push adc push les push mov dec xchg outsb jo and outsb jb mov cmp loop push test sub mov fwait and movsb inc in mov jnp mov mov call cmp inc insb xor leave mov inc jne mulb fs push jbe inc repz adc sub loop sub xor inc push lds lds sbb lds lret pop fwait dec in inc insb push enter mov bound mov aas loop sub and iret icebp sub jg (bad) into frstor jp mov push sbb sub inc or mov sbb lea lcall sbb adc xor outsb push dec insb adc sub cmpsb mov int3 push in repnz sub mov cwtl sbb dec cs movsb xchg mov dec leave dec or xchg sub push into dec jno cmp stos mov into push adc nop mov (bad) or stos push and inc xor cld dec out shrb and inc cmpsl ja outsb xchg pushw (bad) fidiv mov into mov int fs movsb push mov jb test sbb notb pushf dec dec inc das inc enter xchg inc push mov push out jae pop cwtl cltd aaa mov or jo loopne adc into es and nop mov lock shl xchg popf and sub icebp xor mov jns (bad) or into dec push sbb mov mov enter int3 inc xchg inc ja lea and jb adc and xchg lahf xchg xor fsubrl daa mov mov mov xor and mov xchg xchg es js ja push adc jp and pop and xchg (bad) and andl xor ror les or scas (bad) push pop mov inc and or and mov dec mov loop push xchg mov or adc (bad) enter pop xchg or (bad) mov ss mov dec test lcall popf sahf sbb sbb or lods lods sbb sub and icebp xor loop xor dec push inc push dec ss dec dec dec sub push jae addr16 daa sub mov in imul sbb rcrl add sub jle addr16 inc mov xchg xchg test (bad) enter incb push repz push in xchg adc push xchg pop fwait cld mov inc push and repz xor divb mov repnz ss and xor adc and adc cmpsl adc and adc mov hlt and xchg retw notb ja repz (bad) hlt adc xchg testl inc push inc in ret adc aam push inc hlt out repnz adc (bad) jbe test adc (bad) repnz lds xchg push mov xchg xchg adc adc movsl xchg inc push adc inc inc xchg adc inc adc movsb and push xchg gs xchg testl and addl push mov fs repz mov repnz arpl arpl xchg and xchg push adc adcl xor xlat xor repnz je adc push je xchg divb push (bad) je xchg cmc xorl mull xchg inc push push xchg and xchg adc and mov push push adc inc and and movsb push adc adc pop mov fs jbe test cmc inc xchg movsl push addl adc out xor adc push add jbe xchg push mov adc inc mulb push and mull push mov test movsl xchg push mov adc inc hlt adc repnz push mov adc adc xchg mov adc inc xor push xchg fs and repnz je mov ja xchg adc inc hlt adc inc xor add testb cmc xchg mov repnz push mov adc adc hlt es adc repnz inc push cmpsb cmc add repnz push mov test mulb ret movsl xchg repnz jbe xchg push mov push movsl xchg push mov adc inc repz xchg add and adc add jbe pop jne push je out xor adc push add jbe jne testb in xor roll jae xor test adc push add jbe adcl mov push movsl xchg push mov adc inc repz aam adc mov arpl adc xchg and adc out xor adc push jbe inc adc adc push adc xchg adc xchg inc notb repnz xor adc xchg arpl push movsl xchg push mov adc adc fs repz addl push movsl xchg push mov adc adc fs repz (bad) movsb xchg arpl adc xchg hlt out xor adc xchg aam and adc inc es push adc jne push je adc jbe push xchg test adc adc adc inc hlt jne repnz and movsb inc adc adc and mov fs repz mov push movsl push push mov fs repz arpl repz aam ss addr16 xchg adc adc mov testb xchg test adc jbe adc adc adc repnz hlt fs push jbe mov test push in adc je xchg push push je hlt mov test xchg fs adc xor fs repnz test adc push xchg adc movsb aaa test repz inc cmc xor test xchg adc movsb aaa test repz cmpsb cmc je test push jbe mov test push in test xchg je xchg push push je adc xchg fs adc xor fs repnz test adc push xchg adc movsb aaa test repz inc notl test xchg adc movsb aaa test repz cmpsb repz test push jbe mov test push in test je push xchg push push je adc xchg fs adc xor and aam les xchg adc movsb aaa test repz inc notb xor xchg adc movsb aaa test repz adc adc and add aam ss addr16 xchg adc adc mov jbe je adc xchg fs adc xor fs xor repnz and push testb push xor adc adc test inc push jne in xor hlt push adc jne push je in xor je adc xor fs hlt loop repnz fs inc repnz fs inc repnz xlat cmpsl inc repnz push push xor xor repnz bound repnz bound repnz xlat xor gs push ret push arpl push fs xchg xor xchg pop je push movsl addl and test push adc mulb divb adc jae add adc mov (bad) je adc inc mulb xor add xor adc adc hlt notb testb mov bound das xor xor dec inc inc dec addr16 sub das das ss push inc dec jae jno and xor push es lea fmull dec into pop fisttpll int fsubrs and lcall cmpsl aaa xlat sbb mov and pushf xor jb insb push dec aaa dec push imul dec jae inc inc inc insb mov ret stos (bad) mov mov mov push inc mov inc dec loopne sub jl out or push push imul lret jnp arpl arpl xchg and xchg push adc adcl xchg sbb mov nop mov xchg xchg (bad) sbb into test loope fldl mov lea pop movsb lods in aad movsl or adc and rcrl movb and mov mov sbb sbb pop inc cmpl add int push test out push das push push and dec es jp dec imul enter pop les and cltd test dec mov xchg xchg fdivrl sub dec inc push enter mov fcompl sub dec pop call insl ljmp ficoml daa inc insb enter sub sbb les and mov cs loop das push rcrb test sahf orl pop and sbb dec cmp inc xor push enter mov mov and mov and lcall fldl test inc icebp and inc mov mov sbb mov in inc jns xchg sub sbb cmp stos mov orl push adc cmp jmp jb and cmp cmp les stos mov jmp push dec (bad) (bad) (bad) call push aas dec lcall jl and adc cld dec call dec mov push arpl (bad) fimul es inc leave lahf adc nop fnstenv call sbb leave scas push test mov cs push leave lret bound adc mov sbb bound mov xor xor inc js (bad) out push stos push rcl aam es or mov push test mov loop xchg sahf and pop and (bad) xor pop mov leave sbb testl enter popf and or sub int or repnz pusha push shlb adc lods inc lret sub pop push shl pop fs lcall xor movsl sbb xchg popf push xor test xor mov or sub inc in outsl pop xor or push dec inc adc je dec inc adc cwtl xchg jmp or adc cmp nop scas into repz sbb push out enter repz adc pop dec lods inc cmp (bad) adcl jl test lcall xor repnz inc nop loope roll aam xor icebp mov (bad) stc adc or mov or sbb mov push xchg adc mov dec jae and and mov inc cld dec or mov out dec inc inc cmp jp adc xor enter and xor nop pop dec icebp sub jl test push push mov sub cld dec mov and adc in adc push or fcmovne xchg adc icebp sub cwtl sahf aam (bad) int3 and add and out test jns xchg sbb xchg imul and imul incb mov push xor sub dec cmp jmp jb jp (bad) (bad) (bad) cld dec inc ljmp xor dec inc adc mov inc dec pop inc cld dec push inc push les icebp cmp les push inc mov inc push (bad) push push and movlps jmp sbb setns mov or cwtl (bad) adc movlps push test mov call les (bad) (bad) clc xchg fwait clc xchg xchg mov insl jg mov cld dec out icebp and push into ljmp dec push (bad) (bad) and aas cltd dec push (bad) stos iret and push pop mov daa xchg mov dec jmp mov xchg or adc or inc movsb cmc push and xchg adc pop int rcl lret lret lret fcoml push rclb push push rcrl xchg mov sbb aam adc xchg push xchg fcomps or cwtl cltd fcoml push dec push nop push push pop rclb xchg push sbb sbb nop pop or adc sbb push xchg aad into sbb pop mov nop aam pop fcom sbb push push push push pop rorb rclb sbb nop nop xchg pop pop aam pop xchg pop fcmovbe adc into sbb nop push rclb rcrl aam push push dec push sbb push sbb push adc adc dec push dec or sbb xchg sbb push fwait rcl push push push push nop rcrl aam push push push push adc nop push pop adc xchg pop push push xchg rclb push push rcll ficoml adc sbb fst push push dec or push xchg popf rclb push nop push rclb rcll xchg pushf push mov lret fcoml nop pop rcll lcall fcoml push push nop aam lcall push pop xchg push pop int pop rclb nop fstps adc pop (bad) fst adc push pushf fwait rcl push push rcrb or fwait nop aam rcrl aam fcoms push rcrb fst push dec xchg nop rorl into push sbb dec adc nop pushf push xchg lcall xchg adc mov lret adc sbb fst push push push fimull push dec fwait rclb push push rcrb or pop nop aam rcrl cltd push dec lret lret nop aam fimull rclb (bad) xchg sbb pop rclb mov aad fnop nop push sbb int3 aam rcrb sub test fwait and xchg mov xor mov and lods xor loope mov dec pop test popf rorl in add popa cmp mov loopne and sub (bad) cmp add inc xor add add sbb rol adc mov dec mov mov push nop push out inc push arpl push push xor push outsb sub xor inc inc dec je imul dec inc inc jbe fs inc outsl inc inc dec inc inc inc mov and mov (bad) bound dec mov sub or rcll ficoml test xchg xor push dec test inc fs jmp dec out mov dec adc out push push imul jae xor jnp imul inc jae or mov pushf fwait shr dec daa add dec call dec adc in xchg inc sub loop mov popf and roll push inc push xor mov inc movsb out mov sub inc push notb and xchg fldcw or dec push insl dec iret or imul dec dec ja mov sub nop cwtl rclb dec adc bound les es inc xor inc loopne inc inc gs and rcll cltd sbb rcrl (bad) fs dec push test aaa mov xor sbb adc dec push les xor mov inc pop (bad) or sub call adc mov aam and jb test push xchg divb mov mov sub lds xchg add push jb push mov outsl and push test fs dec inc push data16 adc xchg xor dec arpl lret nop test dec jmp popf sub rcrl in popf xchg test cmp sbb push es xor inc out test and sbb int3 dec pop push into sbb fxch aad sbb pop fstps (bad) mov movsl dec and sub (bad) jae imul push nop rclb push test mov fs mov bound xchg bound xor mov jb popf xchg dec xchg pop lcall sbbl sahf shlb int3 xchg ret lods mov test sbbl add fidiv test fs out xchg push mov arpl jne outsl adc lahf adc dec push xchg aaa xchg loop (bad) ret ror mov jns or push xor mov adc dec sub mov repnz and push (bad) nop sahf jo mov adc and das inc inc xchg cmp stc adc push jl mov and sub loope enter in inc ds adc pop cmp loop dec adc popf mov mov sub cmp and mov in call (bad) (bad) dec bound mov or fcoms pop pop pop loop arpl (bad) movsl xchg pop lods loopne int push pop pop or loop push mov xor dec mov cmpsl mov (bad) sar enter movsb and xor push jp sub cmp adc mov ljmp inc sub inc popa inc adc es leave mov sbb frstor bound lcall and (bad) mov shll divl dec les js sub stc lcall test call xchg rcll rcl rclb (bad) xchg test call mov inc test xchg rorl mov dec jmp bound xor les push pop movsb xor mov sbb out mov and stos jg icebp sub or mov lods dec scas stc adc cwtl fs inc outsb inc in push inc jns adc cltd xchg nop dec rcl sbb int3 es lahf enter mov mov movsb aas les mov int3 ljmp push inc sub jae and and (bad) repnz xchg test imul ja jns cmp dec call int push dec stos leave push jmp leave lret xor xor aas (bad) out and xchg mov scas push cmp dec shl ljmp fwait shll insb das inc mov inc dec insl fs outsl xor data16 inc add sbb pop adc scas inc gs sub sarl in add loop inc xor int3 xchg outsb bound adc rclb adc dec popa mov mov sub sahf and repz aaa sbb xchg and push or rcr mov push loop push in outsb push outsb int3 mov lret mov mov popf (bad) inc inc jne es mov call loop dec and or or mov imul push adc or sbb or push sub push or and mov lret dec (bad) push sbb and dec mov dec xchg sbb pop inc sub and sbb rclb adc sub lret dec xchg dec cmp jnp stos mov xor sbb mov xchg cmp mov inc xchg sbb or add adc add adc and adc dec adc lret mov sbb jp ret adc sbb stos lret or inc (bad) xor mov xor jp xor jb sbb sub xchg mov ret jns stos sub dec rol cltd ret or mov xor jns stos dec ret xorl jnp stos mov dec mov push inc adc xchg sbb pop mov dec bound push and inc xchg sbb or imul push adc or pop mov mov jp dec (bad) mov dec jp dec pop mov sub mov cltd mov inc sub cmpl jp ret mov cmp mov xor mov dec jp dec fwait dec or adcl xchg cmp or (bad) mov or or or ror pop rorl or and pop cmp pop (bad) mov dec andl sbb pop mov or jns xchg xchg sbb pop and or xchg (bad) mov and (bad) push adc jb cmp push rorb (bad) mov and and cmp ret dec mov imul pop adc xchg sbb mov and arpl xchg sbb jae jae and arpl and sbb mov or xor mov and and mov lcall addl mov dec andl jp ret and xchg sbb pop dec jno sbbl and mov sbb sbb mov pop dec jno stos push and mov stos mov jae push sbb sub and cmp lcall xchg sbb adc or and sbb leave mov cmp jns xchg xchg sbb pop and or push stos mov xor jp xor jb sbb sub xchg mov ret jns stos sub push stos mov dec xchg (bad) push xor sub or push xchg sbb pop dec cmpl or inc xchg sbb or push sub push or and mov dec pop or push and and dec mov dec xchg sbb pop jp or xor mov xchg mov push sbb mov lret mov pop or dec cmp jp fwait mov cmp jns sub adc and and sbb or add adc sub ret lret xor sub pop ret inc inc inc imul inc dec inc push ss jae inc dec push inc push jae and push sub repz push dec sub or or lods jmp xor inc sub and sbb arpl cmc push dec sub call xchg push nop push fimul push push xchg adc aad push xchg rclb outsl push xchg (bad) (bad) mov test test jb test mov push lds in aad imul inc or add sub dec shrl mov js push inc dec and movsb gs repz mov loop inc push (bad) ljmp adc enter sub les push and adc and push sub ja mov lods mov pop imul (bad) rcl out (bad) nop xchg pushf mov lcall and test fstpl cltd cmp test movsl int add push loope in mov add test jp imul enterw jecxz pop test push mov push rorb pop add in into pop into xchg mov cmpsl adc or fsubs test roll lea imul sbb adc insb out lcall sub mov sub xchg ja imul movsl adc sub sub push das xor cltd cltd push inc dec push and mov lcall adc inc inc adc mov and sbb icebp xor enter enter mov and inc push movsb mov lea push test aam and lods fwait and dec and and es cltd roll and aas decl daa cld dec call std inc or xchg aas icebp xor jg inc inc xor cmp lret xor xchg and gs cmpsl mov lret test pop push push xchg fxch sbb aam inc mov movsb and addr16 adc pop inc cmpsb in mov mov mov pop or push mov lret push orl (bad) (bad) clc xchg sarl loop inc call ret bound sub movsb mov decl je dec leave aas call mov adc xchg pushf jmp sbb fcompl lret lret mov mov (bad) (bad) jmp xchg popa jp and push or push mov add dec dec push mov or inc int sbb pop xor imul (bad) mov fnstsw or (bad) sub xor dec pop das push push xchg int3 int3 repnz movsb movsl push jo shlb xchg (bad) jo fdivp jb pop pop imul test aam cwtl cltd cmpsl mov mov push sbb sub test jns dec push inc dec enter stos insb outsb xchg mov lret lret mov jp cltd sbb inc repz bound xor or adc mov les addl xor cmp leave add enter pop cltd lods sub movsb lret xchg push out lcall xchg (bad) fidivl lea push pop test cmpsb cwtl lock mov (bad) popf test dec ja imul and xchg mov or or and pusha mov mov addr16 je cmp cld int mov test sbb push out inc in jb dec imul cltd sahf sbb enter sahf data16 in repnz lcall das xor fwait or dec in xor adc xchg pushf pop test pop inc push mov sub js sbb bound dec cwtl dec dec lahf test dec aaa dec push imul and inc mov aam lcall stc xchg xchg pop adc xchg data16 xor arpl or push mov inc loop insb and sbb push dec fs adc mov inc aaa ja adc aas mov ret or enter lahf adc fs jecxz cmpsb ret stos cmp mov xchg test fistp lds lret (bad) enter mov js mov fs movsb mulb hlt cwtl xchg nop push xor dec sub lret mov adc aam fs gs and sbb movsb pusha xchg jb and adc adc adc (bad) mov (bad) fisubr call test and movsb iret xchg mov gs pop sarb push clc fwait fwait stc sbb mov test lods adc nop push (bad) mov dec dec push inc and push mov icebp and cmpsl mov dec dec and jb cltd cmp fmuls js mov dec es jbe loop imul or out int dec push in inc push push xor pop mov (bad) xor sub pop pop (bad) icebp sub mov cmp cmpsl movsl mov xchg xchg mov mov xchg xchg stos movsb mov adc mov sub mov mov mov sub mov mov xor pop mov test mov cmp mov and movsb cwtl stos movsl and and lods and mov sub stos test test mov fwait sub test mov mov sub test stos mov stos movsl and mov mov cmpsb mov mov mov test and movsb cmpsl sbb and mov mov lcall mov lcall mov sbb xchg xchg pushf cwtl and sbb sbb and pop mov test xchg pushf cmpsl cmpsb sub test mov mov sub test stos mov stos movsl and mov mov cmpsb mov mov and mov mov sub test mov mov xchg cwtl mov mov xchg stos xor cwtl stos cmpsb sbb and mov mov pop mov test cmpsl sub mov cmp mov mov mov pop cltd stos cmpsb xchg mov stos mov xor and and mov sub mov daa movsb mov and and lcall test mov sbb xchg mov mov xchg xchg cmpsl xor mov pop mov mov cmp and mov pushf xor mov xor cmp and mov cwtl mov mov sub xchg mov test test and and movsb es sub sub and and movsb mov stos pushf aaa and sub cmp mov xor and mov xor mov xchg mov sub sub mov cmpsl mov xor mov xor test xor sub mov lods sub mov sbb mov mov stos movsb mov cmp cmpsb movsb sub xchg lcall and sub mov mov test mov sub xor xchg xchg mov mov mov mov lcall xchg cltd stos cmpsb xchg cltd stos movsb stos xchg mov mov xchg xchg mov mov mov sub test mov test mov mov mov cmpsb xchg xchg mov and sbb movsl mov mov xor sub mov xchg fwait mov mov and adc sub mov sub sub and es stos mov mov mov and cmp mov mov mov and sub pop mov mov fwait xchg xchg cwtl mov aaa mov mov cmp mov xor and pop mov sub mov xchg xchg mov cmp mov test and lcall add lods xor cmp cmpsl movsl mov xchg xchg mov mov xchg xchg stos movsb mov adc pop push xchg push sbb pop int3 push push nop nop xchg pop push pop mov push pushf push push fcmovnbe pop push es das inc arpl inc inc ja sub ja inc inc dec je push inc dec inc dec xor inc js push push cmp dec pop inc inc xor inc movsb xor sub les cwtl movsb xchg pushf lods xchg xor mov sbb test and cmp cwtl enter out les push hlt inc push (bad) cli arpl or dec sarl mov pop pusha push push jb xchg hlt iret dec test fist lret stos sub xchg mov push rclb enter cwtl outsb xchg mov test jne adc movsl bound sub sub mov cmp mov mov mov cltd stos cmpsb xchg mov stos mov push mov mov nop xchg test (bad) lock stos pushf cwtl data16 hlt xchg inc adc adc push push data16 xchg inc adc xor adc mov push inc cltd xchg inc movsl adc mov cmp ret fisubl dec push adc or adc pop pop pop fcoml push ss insb inc das dec dec dec adc mov (bad) xor or adc xor sub lret mov cmp mov lcall inc inc inc imul ja push xor push rcll mov adc xchg andl mov mov and mov mov arpl cmpsl jbe je push hlt aam inc icebp sub mov cltd adc and mov xor mov push call gs mov xchg xor lea sub pop inc sbb sbb ja insb xor xchg (bad) hlt cmpsb push lods fist inc test mov xchg movsl jbe mov je dec dec add inc push dec xor xchg imul inc adc mulb push cmpsl fs aaa gs and mov inc inc adc fwait push fstps dec dec das push dec dec inc loop push loop inc dec jae inc imul inc movsb sub cmpsl sub in fstl dec dec ret rclb push push push inc lret mov movsb sub enter mov repz or and les inc data16 adc xor or or or xor adc mov push jp jl push in inc inc push xor mov sbbl push dec push dec addr16 das sub inc rorb push nop xchg aad pop sarl mov mov and sbb test push arpl sub mov out gs stos dec mov into xchg cmp mov sbb out insl imul imul inc inc inc das ja movsb enter xchg mov mov xor inc dec jp inc aaa pop inc (bad) call inc fs push test add repz ljmp or mov fwait push mov mov fimul fs and pop mov imul push xchg xchg xor cmp cmp out dec xor jbe push dec lcall stos mov mov andl popf clc cltd xchg cmp enter ss mov sbb loopne dec lret fs movsb cmp mov ret mov pop les nop mov movsb nop movsb scas shlb in data16 mov sub enter icebp adc iret loop push and jnp pop and sub outsb cwtl mov fs (bad) hlt out mov mov xor mov sub stos movsb test test and ret mov int xor or (bad) and inc je (bad) xchg movsl and cmc push arpl sbb jae movsb mov sbb in lods pop rcrb push sbb rolb (bad) and xor lods icebp sub inc jmp mov leave add xor xor sbb int3 test (bad) lcall bound cmpsb cmpsb mov and push adc xchg scas inc hlt inc add and rclb cmp repnz fsubs inc jae push push addr16 inc adc xchg fs in mov test pop push fwait aam pop cmp mov imul enter in in (bad) (bad) and xchg cmpsb dec loop dec adc mov adc cmp push adc es xor popf cmpsl (bad) div sbb fstp les adc mov and push inc xchg xor xchg mov inc push push xchg inc je and (bad) gs cmpsb notb mov inc push jb (bad) test adc jbe je push xchg adc (bad) repnz je test xchg fs fs ret xchg repz test xchg les cmpsb mull repnz fs movsb (bad) xchg movsb and push ss push inc ja xor adc test jbe push divb movsl add divb je data16 jbe push push mov fs and push xor repz test inc xor push test (bad) testb repz xchg adc vpblendmw testb repz adc addr16 xchg je xchg push jae lds test testb repz je mov and adc jne movsl xchg inc hlt movsl mov inc cmc inc xchg mov inc gs addr16 inc inc jbe xchg adc xchg xor adc mov and adc (bad) xchg xchg test cmpsl xchg xor jb jae adc data16 movsb and adc test cmpsl fs adc fs (bad) mull lds push inc test pop mov in xor cmc xchg mov pop push xchg adc push je inc movsl push push mov fs repz testl fs and adc jne inc adc movsb and adc and adc push movsb daa je adc and notl and movsb daa je adc and out xor adc push xchg and movsb daa je adc and mov push push push jb mov adc test test movsl push push mov jbe adc movsb ss adc inc hlt in and xchg xchg xchg mov xor adc movsl push xchg testb push movsb xor push adc and mov adc adc fs repz add repz lds repnz xchg cmpsl es addr16 addr16 ret push arpl jb inc inc jbe xchg adc cmpsb hlt (bad) mov adc jne es push je push movsl push push mov (bad) hlt adc aaa arpl xchg mov push push jae adc repz push mov fs repz adc adc movsl push inc mov push movsl push push mov fs repz testl fs and adc push add jbe out inc push je in xor cmc jbe push push mov fs hlt gs inc xchg adc xor adc adc adc cmpsl je adc adc inc aaa test adc movsl push push mov fs test adc push add xchg adc out xor adc push add jbe xchg push mov adc adc fs test adc push add and xchg arpl repnz out cmpsl test xor adc push test adc jne push je out xor adc push add jbe xor add jbe test xchg push movsl xchg push mov adc adc fs repz cmc test inc xor and movsb and and mov fs testb repz repz repz add push xchg inc push inc daa inc adc add and xchg and movsb and xor adc adc in fs xchg test inc cmpsb inc (bad) testl adc xchg lds mov inc push push xchg and je adc (bad) jae push mov adc inc data16 je adc xchg adc movsb and inc testl ja adc add adc xchg test cmc xor (bad) repz inc adc inc adc adc aam inc and push test adc xchg push divb xchg testb adc adc movl adc movl adc adc test xchg movsl xchg adc adc mov addr16 adc xchg test push movsb ja push adc and mov push push push adc adc out xor adc push add and xchg and movsb es adc and mov adc inc hlt adc adc add inc xchg adc xor adc push test adc jne push je out xor adc push add xchg jbe test xchg push movsl xchg push mov adc adc fs repz push inc xor and movsb daa je adc and mov fs testb testl add push xchg inc push inc and adc add and xchg and movsb es adc and mov add and xchg test inc movsl inc testb testl adc xchg mov adc xchg mull mov inc lock ret xor dec ficom push sbb rclb sbb mov int or pop adc push push push ficompl rcll dec xchg pop pop mov lret rcr adc push pop xchg dec xchg fsts xchg bound push adc es call inc cmpsb xchg movsb xchg outsb out data16 xchg lcall mov lods out (bad) mov nop addr16 addr16 addr16 inc push push imul dec cltd push sbb mov mov enter gs clc mov int3 mov inc jne loop cwtl dec dec inc inc ss jns inc cmp xor insb pop arpl dec cmp adc jg cmp cmp add adc int fmull into push test into lret test mov pop pop jbe pop inc adc rcrb ljmp add mulb divb adc data16 sbb xchg or sbb enter cmp xor push loopne push push jns dec sub xor sub pushf test test mov mov outsl je inc dec push inc dec inc out push push xor inc and push lahf cltd xchg mov (bad) and pop int3 pop lock (bad) jo adc mov fnop mov sbb sub lret sub fs pop imul push ficoml test imul and adc aaa nop (bad) lods xchg xchg cmpsl es sub mov or dec or (bad) jp pop push or mov adc imul icebp sub adc adc jg (bad) out jmp inc push push jns dec sub or sbb dec jecxz sub stos jg out push jo inc inc adc ret enter inc cs push test xor xchg aad mov inc pop loop jno mov icebp sub mov dec mov es and in mov push loop outsl mov pop xor mov out decb aaa jae dec xor mov aam (bad) in fiaddl xor mov or xchg (bad) or cmp clc sahf or (bad) jb mov test push addr16 xchg and inc ja les (bad) (bad) es dec int3 cmp aam (bad) mov cmpsb sub jg dec dec aas cld dec push sbb mov inc mov xor pop push mov jns dec fstpl cwtl mov aam dec sub int3 ljmp push dec mov mov dec or lods movb lcall or cmp pop sahf sbb rclb or xor and mov pop or xlat adc enter stc push pop or shlb xor adc sub out dec push ss cwtl mov fist enter (bad) enter sbb test mov push dec mov test xchg add and xor js dec xchg inc loop xor cmpsl movsl and xchg push push and and mov dec test cltd mov iret sub xor dec dec enter aad shrl mov rorl and and and pop push cwtl (bad) xor dec pop push inc bound dec dec and inc mov push push push dec push and imul xchg mov xor and add mov mov loop push int3 mov repnz sahf fs sbb cltd xchg sbb out into into orl les dec mov dec stos ds sahf adc les aaa outsl dec cmp das xor and loop push mov ror out or sbb xor sbb push and lds scas mov xchg fwait and enter insl xor iret mov daa adc outsb xchg mov and sub pop callw ret xchg xchg movl and sbb test jns in dec push arpl xchg xchg and popf push js push inc hlt (bad) les mov mov and repnz adc cwtl pushf rolb rclb and pop hlt inc lcall leave adc pop adc dec dec (bad) es enter loop xchg sbb adc pop out dec imul les adc (bad) clc cltd fidivrl xchg adc mov es xchg sbb bound cld dec dec add ljmpw ret mov push sbb push nop push adc adc xchg push or stos xchg pop popa adc inc divb pushf frstor loopne or fldl2t xchg pushf dec dec je mov or or pop daa inc or push or push adc sbb insb and jmp shlb push dec icebp and dec lods ljmp scas in test or push addr16 gs addr16 icebp and sub sub xor and fwait sub mov sub test xor movsb test mov mov mov mov and and sbb stos lods cmp lods sbb sub sbb mov movsl sub cmp mov mov movsl sub mov sub mov mov mov pop mov xor pop cltd stos test and cmpsb cmp mov mov mov mov es sbb lods and mov and test mov mov and mov mov movsb test mov sub fwait aaa mov sbb and mov lcall test and mov lcall and lcall cmp xchg mov mov sub cmpsb sub and mov lods mov mov mov mov aaa mov mov mov mov daa mov sub cltd and xchg mov and sub cmp cmp mov daa mov mov sbb mov mov mov and stos xor mov and and and mov mov mov mov and mov xor mov sbb sbb movsl mov xor mov adc and movsl sub xor sub and mov mov xor xor sub and mov sub movsl and mov mov test cmp and sub cmp sub stos xchg cltd stos test and cmpsl sub xor fwait and cmpsb sub xor sub mov daa pop movsb mov mov sub fwait and mov cmpsb mov sbb test mov cmp test mov and pop mov test fwait and xchg mov xor sbb mov mov aaa lods cmp sub cmp xchg mov sub mov and xchg xchg cwtl mov cmp test mov mov aaa and sub cmp cwtl lods sub cltd stos mov sub aaa stos sbb adc daa pushf lcall pop fwait xchg mov sub sub cmpsl mov mov pushf sub and sbb cltd and xchg lods mov mov mov mov sbb sbb cwtl sub cmp and movsb xor pop mov mov sub movsb sub cmpsb pushf and aaa sbb mov sub sbb pushf cmp pop xchg xchg xchg mov cwtl sub xchg cmpsl sbb sub mov mov movsb cwtl mov mov fwait es mov mov mov mov movsb orb sbb mov sub sub xor and fwait sub mov sub test mov movsb test mov mov mov mov and and sbb stos lods cmp or stos sub dec sub imul iret or cmp fsubrp dec inc das fs push push ss inc pop dec inc dec jns je ss push push popf nop sahf pop aam pop pop mov rcll push dec je dec inc and stos or lods adc and inc in inc adc rcl lds mov dec or dec scas imul adc push push adc ficompl fxch fimull (bad) ret dec adc mov and mov in je,pn adc xchg test test sbb and xchg mov and sub cmp cmp int3 jo shrb mov mov jo mov jno imul dec fs loop xor inc push jne dec addr16 insb insb push jns sub xor inc dec inc dec push dec fs and nop imul sub or and mov in add xchg pop dec inc cmp (bad) sarl sbb int or adc adc sarb adc insb xchg cltd movsl xor in xor cmp cmp inc xchg fs dec mov or push mov mov or adc lea lret adc pop lods mov push pop pusha test lods ljmp subl cmp lret repz lds dec xchg aad mov arpl fwait mov mov adcl sarl or xor push xchg rcr or movsb or pop xchg or (bad) push shlb fsubs nop push cmp and movsb xor sub scas cmpsb ret and mov rcll dec xchg adc sbb dec sbb int or out inc push mov sub sub dec (bad) sub es outsl dec and test pushf shlb push sub cwtl adc jmp in dec dec outsb int3 test xor cwtl sub dec les inc ja push dec adc xchg sbb push dec lret adc sbb adc push rcrb push push sbb xchg xchg cwtl rcll dec adc pop push sbb push rcrb rorl lcall mov sbb pushf and adc popf rcr push fcmovnbe (bad) or mov mov call sub mov sub inc xor stos mov fs (bad) and dec lea xchg xchg lcall pop push push sbb rclb adc mov inc test push fs push adc sub outsl or and mov enter out dec frstor cmp (bad) xchg mov mov enter mov sub mov xchg mov cltd xchg inc shrl push or adc call inc arpl add xor xchg mov add adc sbb pop inc (bad) les cmc xor movsl inc outsb (bad) call adc adc and fst push inc mov es add lods fs push dec dec ja cmp push jb dec jb cmpsb and sbb sbb mov adc xchg xchg push xchg ljmp aaa int3 pop fs insb jno or and and fldenv bound jnp xchg (bad) mov and push test push nop lds insb in cld dec or inc pop xchg adc dec sub xor cmp leave mov bound fs inc jo movsb pop mov test mov sub lods pop mov sbb and movsb mov in jns adc daa xchg sbb loop (bad) incb jne jae mov sbb xor mov iret push es and mov ja inc xor enter bound arpl out adc in mov test stos push loop push xor jle xor fwait nop lods sbb push cltd lods leave xor inc test icebp cmp fistl imul test xor mov and add into and dec dec decl cmp popa inc data16 xor addr16 data16 test and lods icebp ss dec inc xor mov push test fs lds sbb dec inc adc cmpsl jmp jae xchg adc push gs push xchg xchg or pop test inc or lods into ljmp or cs dec scas imul int3 lret sub dec lret out call dec (bad) int cs es jmp sub sub push in es sub sub imul lea dec daa sub sub or movsl call dec or or call dec es daa or test lret push ljmp cmpsb out push lea inc or addr16 in jmp sub in jmp in sub sub sub in sub dec int3 enter or dec or sub or sub enter inc mov in push cmovle into mov push insl enter into insb in ljmp push lods daa sub imul (bad) mov in mov call out ljmp or test dec sub (bad) in out sub or or out dec in cs test sub push sub dec sub dec sub dec out mov push sub dec outsb mov or popl or sub sub out es xchg push out or outsb lea push test or inc call enter in call out jmp (bad) sub cs (bad) movsl in imul sub imul out ljmp dec int3 int3 dec jmp or lods enter or sub lods in in vpminsw dec out ljmp in out sub or or out dec in mov sub lods dec sub lret outsl sub sub or mov int stos pop or cmpsb sub or out (bad) test jmp inc out sub dec dec sub sub sub jmp (bad) in cmpsb sub mov in sub in out sub in out mov test enter call sub enter outsl dec sub (bad) sub or jmp xchg leave es sub jmp (bad) dec mov sub mov mov or es (bad) ljmp dec es out sub int3 (bad) es es sub lret push sub dec push in out or call push sub enter out (bad) out jmp imul or dec dec iret sub int xchg mov mov int sub stos es or add jmp stos sub sub dec es push inc enter out (bad) sub cmpsb lea leave out dec add or popl sub sub out xchg out mov sub das dec jmp data16 insb lds or leave inc into jmp sub or test mov dec lds test sub or sub or or in cmpsb (bad) sub dec sub stos or xchg inc or pushw ljmp dec mov or scas jmp vpcmpgtw push insl dec stos or jmp imul in vpaddsb or es cmovne mov lret dec sub enter dec sub lret sub in in out sub push es dec dec into int outsb outsl inc gs enter into insl or mov stos (bad) or ljmp out lods in push and out test es in push mov mov mov or in or (bad) push inc in mov in mov in mov inc in mov in in outsb in push in push gs stos and out test es sub movsl in out dec (bad) sub pop sub pop es pop sub pop sub pop add out sub or lret outsl push sub pop sub pop es pop es pop sub pop sub or in in out sub or lret sub sub call sub mov dec into lods and sub or lods or inc or mov leave or (bad) scas out jmp push call (bad) sub or or test dec push leave (bad) sub leave iret push daa or or or push xchg (bad) sub imul data16 xchg sub enter sub lods enter mov dec dec imul or and stos sbb cmpsb mov test mov xor scas sub sub xor pushf test cltd xor fwait mov and mov (bad) adc dec push xchg aad fimull pop adc (bad) dec into dec sbb lcall adc nop lea xchg push or sbb pushf push xchg xchg xchg dec xchg dec adc push pop rcr push xchg sbb cmpsb out push lea inc or addr16 in jmp sub in jmp in sub sub cs sub dec int3 enter or dec or inc ret pop lret dec adc mov adc stos dec jae sbb mov and pop mov int3 aad pop sbb fst rorl (bad) dec push mov dec fcmovnu lea or int or adc fcmovnbe into sbb lret int3 fwait aad sbb fst dec adc dec sub in out sub or or out dec in cs test mov lret sub dec sub dec dec mov mov push sub dec outsb mov or popl or sub and jns dec adc xchg sbb xchg adc dec into push sbb rorb xchg int dec lret lret shl ss inc dec dec cmp sub and pop bound arpl xor cltd shl sub cltd mov xor cmc arpl fs movsl test xchg leave sahf sbb xchg xchg mov adc mov push dec (bad) and inc lds xor xchg mov inc je xchg xchg add xchg push addl pushw test push fs inc inc and aam xchg (bad) and jnp mov jnp jle in xchg push ficompl push cmp pushf xchg fcmovnbe adc xchg sbb push dec push nop pop nop dec out repnz bound mov out mov fs sbb adc mov inc inc inc pop dec inc fs cmc sbb adc pop push mov xchg cltd test xchg push dec pop fidiv dec je das inc cmp mov mov jp mov dec sbbl pop dec jmp sub adc push sbb push or xchg or rclb loop push and stos and push push inc pop dec adc movsl and rcr cmp xchg cmp mov repnz pushf cmp push mov push xchg cltd push pop popf rolb int3 push pushf mov mov enter movsb bound xchg push push adc mov inc cmc push xchg and test cltd or (bad) dec in adc xor xchg adc movsl sbb (bad) mov push ficoml fnstenv popf adc mov xchg sub (bad) jb adc hlt lods in fiadd jno xor xor adc cmpsb in mov push fs bound loop xor lret sub loop das repnz out jmp dec xor sub dec push adc adcb xor orl push push aas clc lcall adcl js push test lret dec ljmp jmp mov daa js xchg mov jmp int lret sahf adc nop xchg cmp push mov sub xchg sbb es push add popa add into es push ja insl bound and mov adc adc enter push movsb push movsb push je xor mov inc sub mov lret lea inc xor fwait or dec sub cmpsb mov aam loopne and sarb sub inc sbb popf lea xchg je hlt adc in cli push sbb and sarl sarl inc inc add xchg xchg xor inc inc test es lods inc int3 jl lds imul sahf shr jmp or insb mov dec test sbb inc es mov cmp lcall cmp ss mov mov mov inc pop dec in mov es cltd push js sbb inc inc adc enter sub fstps pop fwait rcrl pop bound xchg das icebp sbb ljmp icebp sub jae mov xchg movsl test adc pop ljmp dec inc insb in mov xchg rolb ret or mov dec cmp pop dec xchg push test mov and icebp cmp and cltd fdivrl (bad) push and mov jp jae adc adc adc sbb arpl pop test imul call push ja cltd test lods dec mov push push adc (bad) mov xchg das sub push dec adc mov dec mov test data16 daa inc sbb adc ljmp adc mov in mov das add adc push mov in pop loop dec adc sub rcrl (bad) or pop mov rcrb mov sbb sbb sbb mov sbb adc push fimull sbb push dec xchg push push mov mov sbb push push push pop adc ficom mov lret int fwait or push sbb push mov lret int xchg mov or push pushf or lret lret sbb lret fimull pop pop rcrb adc push push ficompl int ficom ficoml xchg pop rcrl aam push or int xchg lcall push pop push mov fxch xchg adc pop adc rcrb mov push dec xchg rorb adc or int3 pop push lcall xchg dec fisttpll rclb push rclb sbb pop nop push push push push pop adc or rclb push push dec xchg fcoms fisttpll rcrb push push rcll cltd popf rclb adc pop push push push or aad lret int3 aad push dec into dec push xchg cltd fistl or int adc pop adc rclb cwtl lea fwait lret (bad) sbb push or push push pop rclb push pop or xchg pop push push adc rclb push mov cltd lret sbb sbb sbb push fwait or cltd push dec aam ficomp xchg rcr nop push nop push adc dec push push push into sbb aam sbb or pop dec push xchg push rcll xchg or lret lret adc push pop int3 xchg push adc or rcrl mov or rclb nop push push push push push dec nop xchg push push push push rcll push sbb fwait lret lret adc aam push sbb or pop or rcrb mov pop adc aam dec dec xchg ficoml lret lret lret aad pop xchg fimull int fimull pop push pop push push push push push dec xchg push push or mov adc push pop rclb push rclb push mov mov push push mov adc xchg or rclb dec push push push push aad (bad) adc adc rclb ficomp or xchg push mov push mov rorl adc push dec xchg rcr fxch lret lret lret aad push adc pop mov adc xchg int fimul xchg fcom pushf push adc adc adc fstl fisttpll adc xchg push pop adc sbb xchg push push push push push rcll xchg adc pop dec sbb push into sbb push adc rclb push push pop rorb push adc push push pop rcrb aad pop sbb lea xchg dec dec adc xchg cltd popf fimul pop or push pop push push aam dec rcl fimull adc push aad push popf rorb dec sbb push push push xchg xchg int (bad) push push push xchg xchg (bad) push adc adc push pop dec sbb pop push pop push adc aam adc push ficompl aad fwait push nop popf pop xchg adc push pop dec int3 adc dec int3 rclb adc or adc push aad push popf rorb pop pop rclb push xchg xchg int rcll push push xchg xchg (bad) push adc adc nop push push push dec int3 fcom pop dec adc push push popf pop push sbb int fxch adc pop int3 into adc cltd fnop push push push pop rcr sbb mov xchg push adc rcrl push adc adc rcll push xchg xchg (bad) push adc rcll push adc push aad push popf rclb pop into sbb push lea pop rcl ficompl or or aad fwait adc popf pop int or lret fxch adc dec sahf fwait fwait int fnop push push fwait push lcall xchg int rclb push push xchg xchg (bad) push adc sahf mov push sbb push push fwait push popf rclb push pop fcom pop pop rclb push push pop adc xchg mov lret fisttpll mov lret lret lret fimull int int popf rcll sbb int sbb push popf rcr or cltd (bad) lret (bad) fwait rcrb adc rcll dec lret sbb rclb push push pop rclb lcall push adc pop push adc adc push adc or xchg xchg xchg dec int3 aad pop dec int3 adc ficoml lret fisttpll push push rclb xchg rclb rcll fcom dec xchg fimul xchg aad or sbb adc dec lret lret fcoml rcll fcmovu popf mov int3 pop push xchg push push dec xchg rcll lret into sbb mov or fcmovne (bad) pop mov into adc rcll sbb int push fmuls dec ficom xchg cltd rcrb xchg or adc adc push rcr push mov lret lret fxch adc pop int3 int3 sbb push push dec push rclb rorl int3 aad int dec fmull lret lret rorl push dec push push cwtl fstl lret int adc xchg fnop push push push push dec int3 aad aam push dec push xchg pop adc aam dec push adc adc cwtl mov adc fwait rorb sbb lods pop mov movsb mov movsb xor and stos lcall xor cmp and mov movsl pop mov push movsb enter lock pop push pop push mov loop dec dec dec das push das jo jo xor cwtl sbb and mov and shl ficomp hlt mov out xchg pushf mov inc mov sub movsl sub cltd sub test and movsb mov sbb cwtl mov cmp pop xchg cwtl mov xor lods sub es and lods xor or mov mov adc pop sbb les or inc imul (bad) xor dec adc addl push xchg push repz adc data16 adc push xchg inc push and xchg adc jns xor mov jnp push int3 out sub movsb cmp and adc mov cltd lret sbb sbb mov cwtl movsb lret movsb into lock mov mov mov mov xchg xchg xchg cmp sub adc or enter lea adc (bad) loopne in dec insb dec nop leave cmp push movsb mov clc mov jns xchg push push aas pop inc inc push insl dec jp gs xor dec sub dec xor je inc inc xor pop dec pop pop xor dec push push push inc pop push dec push push dec inc imul dec dec dec cmp adc lea mov aam mov lret push mov and ror jno sarb cmp mov push int3 jo pusha (bad) lods rclb or inc sahf lea xchg xchg lea and (bad) or push arpl and mov mov mov mov adc push dec enter (bad) inc jne aam mov enter scas daa xor adc xchg push adc movsl xor jne test int dec dec lods leave cwtl mov test xchg add iret nop fstps mov lea pop aad xor inc xor inc push dec push dec adc xchg fwait push adc adc enter test jbe inc je and (bad) xchg sbb mov int3 insb hlt (bad) outsb out loop push mov call sub sub sub push xor stos jnp xor dec iret inc jp ret pop mov mov and or ja push ja outsl dec popa dec inc dec xchg xor scas and or jmp push adc push adc adc cmp lds stc xchg push push rclb test adc mov mov in adc es dec stos or call out inc incb repnz xchg pop mov xchg push push lcall and jnp xlat les pushf rorl into insb (bad) data16 jno xchg xchg adc push cwtl fstl loop inc (bad) les (bad) xor sbb push xchg shlb push and mov push sbb xchg mov movsb stos lods xor cmpl push es sbb jne (bad) enter pop mov mov sbb in shll inc test lods jle push pop and test jno sub xor xor in pop jbe mov es loope sub xor cmp pusha rorl nop loope jmp in and mov cmp (bad) lcall pop dec or mov push mov rorl les aaa clc mov aas push arpl bound aaa dec ja push dec aaa dec push jae mov adc mov imul stos push adc jl mov sub out inc ss insl popa rcrb popf or mov mov inc dec insb clc xchg pop xor cltd cmp adc cltd lret xchg aam dec or sub bound and dec push inc test xchg cmp (bad) es dec les mov lret fisub inc inc mov mov push stc fwait or sahf mov jno mov into movsl adc mov and inc sub (bad) mov sub leave jmp mov push inc dec inc and int3 fmull lods or cwtl popf mov sub bound adc lcall mov inc adc fdivrl push lret push sbb mov (bad) (bad) incb and ja xchg lret dec pop repnz outsb movsb out movsb pop int3 xchg call mov call (bad) shrb repnz movsb (bad) repnz mov (bad) cmpsb cwtl (bad) xchg mov shrb mov cwtl (bad) bound xchg movsb lret (bad) in mov pop push mov enter test repnz out mov pop data16 jb insb xchg pushf mov xchg int3 outsb outsb in mov call bound out nop pop enter enter enter enter shlb lcall push cwtl enter lock pop movsb int3 xchg mov pop pop pop push test (bad) test fcmovu test pop pop scas lods fiaddl mov ljmp (bad) fcomps pop pop nop hlt pusha rolb xchg movb jo ror jo rclb scas insb xchg nop pop pop push mov mov mov (bad) (bad) mov sahf mov push pop push into pusha into int3 outsb pop insb xchg pop in push xchg out into (bad) (bad) (bad) mov xchg xchg nop push pop push xchg rclb test enter (bad) pop jb xchg sahf aam push pop pop shlb mov in jb pop data16 stos pop data16 lcall push mov test (bad) in int3 pop pop push pushf outsb mov test (bad) (bad) mov pop pop pop pop enter enter enter pop data16 stos pop data16 mov lods ljmp into jo into insb cwtl lret in push mov xchg mov (bad) enter mov bound scas jo mov rcrb enter lock les mov lret mov out bound pop in push mov (bad) out xchg pusha stos mov pusha pusha xchg in fs hlt (bad) lret pop pop pop pop nop outsb out test cwtl mov loop push (bad) mov (bad) xchg test fsubp mov pusha xchg xchg jb (bad) into (bad) mov (bad) (bad) (bad) mov mov xchg push (bad) mov (bad) (bad) xchg enter pop bound pop enter ljmp mov data16 lcall (bad) aam ficom test mov mov data16 movb fsubs ficomp cwtl mov mov nop mov shlb (bad) shlb xchg ror xchg pusha nop mov movsb scas pop data16 into pop data16 (bad) stos mov jb mov nop pop pusha fisub int3 pop data16 into pop data16 (bad) pop data16 (bad) stos mov jb mov nop fsubrp int3 in pop pop push mov lret data16 lcall hlt lcall rclb mov movsb test mov mov xchg fmuls mov cwtl test xchg pop enter bound mov in enter pushf mov push (bad) mov ljmp movsb insb pushf in scas pop in jb scas lods in xchg out into out (bad) hlt lcall outsb mov cwtl int3 mov mov ljmp fimull movsb mov insb mov out mov data16 in fsubrp nop pop mov out bound out xchg nop xchg lret (bad) lcall test fsubrp bound movsb xchg test hlt (bad) fsubrl mov (bad) hlt bound aam mov stos xchg bound out jo (bad) xchg fmuls mov (bad) (bad) xchg movsb lret enter push (bad) mov test enter nop shlb (bad) into fs pop scas fimul into pop into xchg movsb out push test mov pushf into (bad) mov in fidiv mov (bad) mov loop (bad) mov (bad) fdivl fmulp (bad) lret lret mov mov jo cwtl test lock mov mov enter pop repnz pushf lods rclb mov rcl repnz loopne (bad) mov jo (bad) cwtl enter pop data16 mov aam data16 insb sahf movsb hlt pop in push pushf movsb enter jb test bound mov mov (bad) (bad) xchg int3 test xchg mov out data16 in pop into test movsb mov lret test mov pushf into (bad) mov aam cwtl push stos (bad) sahf mov enter movsb lret mov mov into test insb mov mov in mov outsb (bad) xchg (bad) hlt aam enter nop shlb (bad) into fs pop test (bad) shlb jo bound hlt lods in fmulp outsb hlt push pop jo mov pusha stos stos (bad) cwtl enter fs in hlt lods push stos lret fs in jb mov insb xchg lcall test nop push dec and mov mov and cmpsl and and mov sub test push sbb lcall dec push or sbb int3 pop xchg or int adc mov ljmp lods syscall out (bad) sub leave sub (bad) sub mov lods call dec push sub mov stos dec (bad) add pop mov popa or int xor adc lods xor or mov or inc xchg je and (bad) hlt and xchg hlt in data16 data16 adc xor mov push adc mov adc (bad) movsl sbb mov sbb xor and sub inc imul dec inc stos daa lods movsb adc xor xchg mov cmp add or pop enter pop movsb mulb stos lret or stos lods xchg dec push and inc int3 hlt (bad) in int3 pop movsb daa sbb aaa int3 (bad) mov adc lahf adc and test or or leave mov fs push push xor cmp cmp push jbe xor dec cmp xor mov lcall adc dec push xchg add andl or mov out es xor jp sub mov pop dec lret adc in fadd int sub lods add sbb test pushf push xchg aam cltd xchg mov mov jecxz cmp jno addr16 inc dec push push imul ss push push push inc pop dec pop adc sbb lcall jno jb lret (bad) xor jae mov sbb dec inc and inc mov xchg xchg les push add sub adc xor dec jnp aaa mov repz mov xchg mov jae xor movsb fist xchg sub je loop dec adc aaa mov inc jb pushf mov sub mov cmpsb sbb and in inc jne cltd or cmp pop inc sub jbe loop inc dec aaa inc gs push addr16 dec push dec adc xchg sub leave lret push mov mov leave ret mov adc and jp jp mov sbbl pop dec jmp outsl je clc xchg sbb rcr test xchg bound bound push sub call rorb inc push adc rclb fs push dec push pop imul ja push outsl inc push dec jae addr16 addr16 dec ja pop gs stos dec jae sbb in pop pop jno and sbb dec inc cmp sub sub sub adc lea pop cwtl outsb xchg (bad) repnz loopne (bad) mov xor (bad) imul cltd push adc dec pop adc xchg xor jo xchg jg push cmp and aad test test cltd test sar pushw jne and inc into shlb and dec inc cltd ret mov or pusha stos enter hlt addr16 push inc test sbb nop in sbb data16 push lods test daa stos daa xor sbb sub and mov xchg fst int and push xor fwait mov xor pop cltd aaa mov lods mov mov movsb cmp cmp cmp lods mov xor movsl mov gs int push into jmp sub dec imul and and inc (bad) daa je sub movsb and mov dec (bad) push lcall insb lock pushf and sbbl int3 mov enter clc popf adc xor stos sbb cmp and mov shlb inc xor xor cmpsl data16 pop xor xor dec lcall insb repz add data16 out daa sbb xchg test js push mov inc ss pop inc xor jae jns int3 xchg dec addr16 imul and sbb mov fmull lds sbb rcl or cwtl hlt bound test mov inc pusha mov jo adc mov loop dec enter mov xor cmp cmp push insl jo bound mov dec test jb bound push repz jl mov sub cmc adc xchg (bad) push mov mov jns sarl adc mov lods xchg es add xchg pop (bad) in (bad) and sbb (bad) inc and push aas xchg push or pushf inc dec xor sbb int mov mov pop inc or mov es and test mov jno cltd inc in xchg rclb dec push sahf push sbb rcl adc or nop mov test icebp cmp mov int3 ret adc insl dec jns jbe adc mov lret cld dec mov dec add lret and mov mov mov inc xchg push data16 inc mov es jne adc movsl jbe inc cmpsb divb mov inc add fs test xor movsl adc xor out xchg xchg adc mov addr16 divb xor adc lds xor adc adc adc adc adc movsb pop ja movsb xor movsl xchg mov xchg push mov adc test xchg jne jb xor addl inc adc xchg jne movsb adc adc adc xlat cmpsl je xor fs push xor test xchg addr16 ja xchg add inc xchg ss hlt ret and xchg adc adc (bad) inc xchg es inc xchg inc xchg push jb xor xchg xchg adc xchg mull xchg xorl repnz push movsl inc push xor es adcl push and test push test adc jb je gs (bad) les adc roll daa adc hlt aaa adc cmpsl push lds out xor and jbe xorl xchg movsl xchg repz adc adc xchg push xchg xchg aaa jbe je xchg xchg je inc addl fs es adc xchg push and movsl xchg roll adc mov movsl inc xchg fs jb push movsl adc adc xchg inc arpl push xchg xchg xchg mov fs xchg jne inc fs xchg push xchg adc add cmpsl mov xchg (bad) adc push mov add data16 jbe xchg fs xor push adc jbe es out hlt adc daa cmpsb movsl add xchg movsl push xchg arpl test hlt mov inc push xchg (bad) aad ret adc test xchg xchg xchg test es addl xor push xchg pop xchg adc test jne inc divb and push adc adc xchg xchg adc je inc adcl (bad) in xchg inc loop xchg add repz push je push push lds gs jb je adc adc push aam fs xchg ja jne mull jae add adc adc adc repz ja inc push mov jae addl test push aaa daa adc add adc adc inc gs inc inc test je adc add test xchg aad push xchg xchg aaa add data16 jbe xchg fs xor add cmc add inc push mov cmpsb gs jae push xchg adc add mov mov test addr16 adc adc mov addl push xchg in mov hlt (bad) cmpsb xchg add jbe xchg loop pop inc adc xchg mov cmc and push je xchg test ret test aaa jbe xchg movsl push ss jbe fs repz and test data16 xor mov mov push xchg push inc xor add inc je (bad) jne aam inc addl xchg gs xchg fs xor xchg push addl adc es (bad) mulb aaa fs xchg movsb xor mov in xchg xchg push aaa jbe and push test inc xchg (bad) cmc inc inc gs arpl data16 xchg arpl adc push xor mov jecxz (bad) mov (bad) xchg xchg movsb xchg xchg push inc ja addl aam je push je mov inc cmc add inc push adc movsl push je rcll inc inc repz xchg aad add jne jb in xchg adc adc xchg mov xchg add addr16 mov xchg test push movsl push xchg arpl movsl test xchg xchg data16 inc es je mov aad gs xchg add jbe xchg test inc inc arpl jecxz inc jbe inc jne adc xchg inc add andl inc push mov es test jb xchg adc inc and je push je mov ss add inc push mov cmpsb gs jae push xchg adc add mov mov test addr16 adc adc mov addl push xchg in mov hlt (bad) cmpsb xchg add jbe xchg loop pop inc adc xchg mov cmc and push je xchg test ret test aaa jbe xchg movsl push ss jbe fs repz and test data16 xor mov mov push xchg push es xor xchg inc xchg gs and adc je push inc cmc and xor inc push mov push movsb mov adc adc cmpsl je adc adc inc adc adc xchg xor jne aam inc addl data16 jbe xchg fs xor push adc es hlt out xchg adc inc movsl push je dec and xchg cltd aaa stos lods sbb movsl push test mov and int movsb int and mov add int add frstor popf mov imul cmp inc loopne add xchg (bad) out in xchg mov cmpsb rcrb lret (bad) gs xchg jne jb sbb sbb mov xchg jne stos (bad) or sarl sbb sbb and pop mov and jp xchg lret nop fcomps fisub inc xchg and test or jb jp and mov mov pop xchg cwtl mov sub test sbb and mov cwtl mov xor sub and aam rcrl dec fwait rcr dec pop pushf sbb push push adc ficoml or in lea inc das xor outsl xor pop jbe insl pop push imul addr16 imul xchg or dec cltd dec aad push lds in or sub mov in leave or addr16 or add sub dec in lods dec xor inc arpl sbb movsl mov mov xchg stos sub cmp cmp cmp in gs movsw xor sbb mov sub test or adc mov push push popa mov inc dec dec jp push mov stos xor ret cmp xchg or in push fxam movsl pusha dec insb jmp dec inc or ret and dec dec mov push xchg rorl lock mov xchg mov xchg push push shrl rcrb xchg dec pop push dec pop push mov ja jne mull jae add sub rcrb dec sbb xchg sbb int3 (bad) outsb fs popf int3 loop in loopne mov mov push test mov push pop xchg mov mov loopne (bad) mov mov cmpsb outsb and mov and and push fwait cmp dec and push xor xchg mov and int3 les mov rcrl gs inc dec xor imul push xor jae nop roll adc aam int3 (bad) flds adc push pushf mov dec test cmp mov and mov ljmp pop ja inc xchg push inc dec cwtl repnz pop test in int3 cmpsb shrb inc inc dec sub cmp sub popa pop popa push inc inc les dec or popa inc adc or xchg rcrl mov mov jo aam push adc in mov les and dec dec sub out out leave sub xor arpl jbe push dec outsb repnz xchg inc jbe inc jne adc or mov pusha sahf mov test adc or loop imul (bad) (bad) (bad) (bad) (bad) and popf push dec xchg fwait shlb push sbb pop popf rorb adc pop pushf dec adc call mov push jg test dec cs iret inc data16 rorb cmp sub nop int3 loope iret dec fs push xor sahf xchg cwtl movsb jo push cwtl test adc or inc dec fs les or mov in inc inc jp and rorb addr16 enter mov (bad) decl cmpsb sub repnz cmp and cwtl mov (bad) call stos rclb aaa push and jb push mov enter mov in mov out mov les sbb adc xor dec ljmp pop cmp xchg aad pop sahf pop rcll xchg push je addr16 push xor es dec call cmpl mov into push sbb mov int fstl mov and pop inc sub leave outsb dec jmp adc inc push xor sub incb xchg (bad) dec mov movsb sbb cmp icebp sub pop fs xor cmc gs and js adc es js adc sub push fs cmpsl push and nop push cld dec mov mov icebp daa lods adc dec dec out fs jne adc adc adc rclb mov in inc pushfw dec inc lahf push and jno mov shr les fsub or dec cltd or xor and in sub and mov in or mov or sub inc mov or add movsb loope push aam xchg sbb add call xchg or xchg or cmp push cltd or aad ror or pusha shll adc fsub sbb add dec loopne rcr fldl popf sub test rcr shll and xchg sub (bad) pop adc popa popf add inc dec sbb mov push add push mov (bad) mov inc movsl and inc or movsb in or mov or aad push lds in or sub mov push sarl sub or adc add in movsb in sub pushf (bad) pop adc and inc and jmp xor (bad) mov and lods test inc inc or popf xchg gs add inc pop cmp dec mov add cmp test and fstpl mov fcomp (bad) fstpl or push mov push inc test sub and sbb call lea sbb add shrl and push cltd or push rorl pusha roll roll sarl popf cmp popa in rorl adc (bad) ror cmp add sbb adc mov (bad) cltd popf sbb add pop sub inc mov or add movsb loope push aam xchg sbb add call xchg or xchg or cmp push cltd or aad ror or pusha shll adc fsub sbb add dec loopne rcr fldl popf sub test rcr shll and xchg sub (bad) pop adc popa popf add inc dec sbb mov and rcrl add lods inc in add add lods xor add pusha int (bad) (bad) leave popf push int add and inc movsl and inc or lods add loope add push lds in or add add lods xor roll loopne pusha loope add mov mov (bad) and shll shrl loope fldcw lods fnstenv push cltd fnsave xchg cltd dec sub rol loope inc mov rcll int3 shll and push movsb mov and fstps mov inc cltd add mov mov adc or lods mov add rorl popa dec cltd xchg xchg mov add add rorl cmp add add imul movsl xor imul dec fstpl and add pushf loope popf inc mov or add movsb loope push aad xchg sbb add call cmp xchg or cmp movsb loope push (bad) sarl or and or xor jmp sbb add dec loopne and xor aad sub test rcr shll and xchg sub (bad) pop adc popa popf add inc dec sbb mov or sub adc cmp int3 leave dec fldcw popf xchg adc add adc add popa xchg or lds sarl adc mov or lds lods dec or or cmp and fldcw fadd pop xor and and xor pop sub in dec inc mov pop xor test dec gs xor loope xor lods aad dec dec popa movsl push pop inc test pop leave xor movsl pop enter leave mov movsl pop leave popf movsl pop leave lea pop leave push xchg dec mov lods mov lds push loope add add adc adc or fnstsw add inc movsl pop pop int popf and and add (bad) adc adc fxch int or adc in or sub fstp rcll fsts add inc mov adc leave enter cmp and mov add (bad) push push pop xchg cltd nop rcrl push dec dec dec adc (bad) cltd lret nop dec adc sbb adc sbb adc push fistpl push push xchg fxch sbb aam rcrl push xchg pop rclb in daa push dec xchg je or mov mov jae sbb mov pop push mov inc aad ror or pusha shll adc fsub sbb (bad) sub jmp add jbe je and mov inc push xchg addl xchg movsb je inc movsl xchg jne inc movsb movsb bound sub xor push imul xchg fs push xchg xchg aaa jbe je and xchg stos adc or adc hlt pusha (bad) cwtl test fisub xchg or adc mov xchg sbb movsl mov dec dec and sbb cltd mov cmpsb cmp cmp in gs les stc adc sbb pushf push jns xor jae push ja dec das xor arpl dec push push addr16 rorb dec dec push mov dec mov lret (bad) xchg test je mov or rcrl push xchg push inc fs inc mov adc pusha pushf inc in movsl mov fldenv (bad) ror cmp add mov dec test cmp jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push xchg dec rcll cmp or and das nop lods xor adc fwait cmp scas es (bad) and pop es and jns bound inc mov and fsubrs bound aam repnz popa mov jno dec mov sbbl cmp pushf daa sub xchg cwtl or bound hlt test pop test (bad) out fiaddl mov in aam mov lcall in mov xlat inc sub lods sub and enter test adc (bad) sub aam rorb mov mov xchg hlt adc das mov iret repnz loope xchg adc repnz out adc insb cmp jg (bad) (bad) cld dec dec mov mov dec dec leave pop dec and xchg add push inc sub inc arpl mov cmpsl enter bound aaa dec push jae dec dec dec imul movb (bad) notb (bad) (bad) push and or sub jmp xor adc fs and xor cmp fcmovnu fcompl lret int3 push xchg adc (bad) scas inc sbb daa mov cmp sub sahf and mov xchg and cmp and mov and rorl aam aam push dec adc dec dec xor xor mov fwait sub mov fwait pop rcll (bad) data16 imul adc inc (bad) or push into push add push test push inc lret lcall dec pop adc lods xor or jp mov sbb sbb pushf push jg push inc adc adc dec mov sub push stos (bad) mov and inc push sub ret push lea push push rorl insl lods jmp loop dec adc adcb in and dec cld dec lret and dec mov (bad) or cltd loopne int3 dec sub and es je and mov (bad) loop enterw jno mov adc mov insb mov dec (bad) sub imul adcb in pop les insl dec adc and (bad) pop dec inc bound jae and leave mov lods inc or sub vpmulhw sub test out vpaddsb push dec and in lods mov sub into or out in lea lea dec imul outsb out or sub dec dec imul outsl or or data16 in cmpsl sub data16 sub dec or insb out dec dec scas inc in sub dec sub outsl sub int3 sub sub sub or sub dec sub int3 out dec dec inc dec test ljmp es imul dec sub xchg es sub mov imul vcvttpd2dq out dec mov das dec sub imul test sub leave dec insb in or lods mov push sub imul mov stos push dec dec dec mov sub sub into out addr16 and in out call mov leave push or out into mov sub push call sub or test mov lret dec es cs dec out dec sub or test sub mov stos mov inc sub jmp mov or test data16 sub sub sub daa cs imul sub lods jmp dec cs sub mov lret cs sub sub dec das sub mov sub sub push stos mov ljmp sub dec das dec dec int3 cs lods in sub mov or sub dec dec call out lret sub cmpsb call or sub cs dec dec push inc mov in test push inc int push or sub dec sub out mov dec dec or sub or daa or out or sub or sub sub sub push movsl out imul test or sub in into inc in into in xchg call sub out call sub sub dec jmp es sub or sub dec lods or xchg push or push outsl inc in out in mov mov insb call mov push sub sub imul sub das dec sub es or mov in out es dec mov ljmp iret dec sub mov or lods test sub sub cmpsb dec sub push or call sub mov test sub dec or imul sub out in sub sub or imul (bad) sub mov test dec sub sub sub or out movaps lret dec outsb in leave or call sub dec sub sub sub out in push call dec sub out test ljmp sub sub (bad) sub inc in dec jmp sub sub sub out xchg or sub sub or sub or or daa sub xchg iret or in lods in enter (bad) sub out sub in sub out xchg dec sub jmp in movb dec add sub or daa sub sub test out lret dec (bad) sub (bad) or cs imul mov dec enter test push dec addr16 mov add leave push in mov sub or or in mov int out push sub sub sub or dec es push in test test in int sub sub mov mov mov mov sub data16 and out or sub sub in out test (bad) insb call imul outsb scas imul dec mov in vpaddsb mov imul (bad) sub push mov sub imul out dec in lods inc dec dec enter or sub sub sub dec sub out push sub out dec push dec (bad) gs mov push push mov dec inc enter xchg int sub sub sub dec stos pop and enter sub mov dec push or test call push push or test sub sub mov dec cmpsl or inc or dec test or stos dec in push dec in mov insl out mov mov mov dec out mov call push sub leave enter (bad) out dec daa sub sub lret mov dec sub push sub push test sub sub sub or dec sub movsl ljmp test xchg sub lret jmp imul sub iret or int test int3 int3 enter in sub lea push mov sub sub push sub test sub dec jmp dec sub dec out or stos dec (bad) or dec ljmp or sub or dec stos dec (bad) daa cmovs dec lea or stos dec (bad) dec into enter gs push or test sub sub sub sub or scas push imul out xchg sub xchg or scas lods or inc sub add test out ljmp push enter sub jmp test or stos dec mov das dec call in push inc outsb (bad) and test sub cs sub sub es in dec or call push pop daa or sub sub mov push dec jmp dec mov inc in call inc sub add jmp sub imul test outsl or push dec in ljmp (bad) in out sub jmp mov int dec out inc enter mov test stos dec mov jmp dec insl lods ljmp test dec es dec add (bad) cs inc sub es dec and in out sub test out enter xchg leave jns jp mov popa addr16 das aaa das das xor xor jae imul xor push ja push inc push jb dec jb addr16 imul imul jae ja jne xor addr16 dec push dec inc aaa aaa inc sub push jb imul dec push dec push jns cmp popaw addr16 imul inc push push inc inc jno inc addr16 inc dec inc cmp ja cmp xor or bound inc xor jo ja or fistpl adc lret fcmovbe enter int3 xchg sbb fwait and cmp mov pop movsb mov xchg xchg pushf and cmpsb cmpsb mov mov mov sub dec mov stos push dec dec dec mov xor leave mov (bad) loope inc lods inc pop mov loopne pop dec mov adc push pushf rorl push sbb dec push sahf adc rcll pop aam fs and xchg add inc inc (bad) out addl xchg je and mov sbb and sub sub adc ja dec sub inc inc dec xor inc inc push inc inc lea into adc xchg cwtl pop aam adc call lret mov or xchg mov bound cmp push mov or js nop mov mov jo stos adc lret or test inc jb inc inc sahf sbb xchg push fwait rorl push push movsl test cmpsb movsl andl push adc and xor xor sbb mov out mov dec push sub or mov pop jns cltd ret and push mov adc mov mov mov es and ss and call sub das and pop or inc push mov lret or or xor jp inc push dec fsts enter (bad) aam push xor xor sbb scas mov pusha mov shlb inc mov fwait adc xchg adc mov daa movsb xchg cmp xchg loope mov in xor call mov or push mov rcrl xchg sbb out out rclb dec int3 sub ret mov lret insb pop xchg shlb jo movsb out xchg sahf jb repnz int3 nop movsb mov test movsl jmp inc inc adc popf sbb push or push test mov arpl enter fisubl cltd lcall popa inc adc stos cmpsb inc xor mov mov gs popf fchs inc insb push ret pop arpl jg mov sub jnp adcl mov dec test pop inc xor xor mov int and or mov push xchg push or mov fldcw arpl xor stos les cwtl aam gs inc les fcoml cltd push push inc retw es mov insb mov insb call mov jns or cltd push fwait bound and sub popa dec and pop data16 jb insl bound adc mov and int3 dec (bad) gs inc jp sub mov jb ss inc jb cmp and sub cmp push push inc and jnp xchg lcall push int3 adc dec fcoms test repnz mov mov cmp sub nop ror lds dec in inc popa jbe inc sbb lea push fmuls jbe adc inc roll xchg and gs je pop ss mov xchg push mov sahf adc fmul pushf es jmp add push or and popf loope popa inc jmp es icebp sub les adc and lret call mov mov push dec adc xchg fist mov xor cmpsl and mov and test and adc lea and dec es dec les dec dec es dec inc push inc adc call dec adc movsb mov cmpsl daa xchg mov inc sbb aad ficoml dec dec das adc bound les fistpl push xchg jb mov sub cmp nop in popa add sub sub mov bound and adc xchg lea sub ret mov mov (bad) cpuid int3 jmp dec sub daa or dec sub sub test xchg xchg (bad) call xchg or mov fnstcw lea mov stc sbb addr16 xor inc loop inc inc sahf dec adc adc and enter popa adc scas inc xchg scas pushf and mov daa inc cmp out push imul sbb sub inc pusha dec enter mov sbb cmp sub mov loop outsl adc pop push sbb cltd mov mov lds or scas inc xor adc xchg and dec enter push enter into inc push cmpsb mov cltd sbb xor pushf (bad) loopne daa fisttp add leave movsl popa pop fstpl or movsl pop pop mov pushf loope and movsb lds movsb int int fisttpll movsb int3 mov pop pushf leave pop inc add jmp inc fsub mov pop inc add and or sub leave mov lds fisttpll ror pushf int3 leave fldl rcrl push lea add cwtl rcrl add frstor rcr in pusha roll and movsb lds movsb int3 int3 shll fstp xchg mov xor xor inc dec or sbb test frstor mov lods and add mov sbb lds leave pushf lods int3 sarl or lods popa fldl rcrl pusha shll pusha rol int3 rcr xchg and xor xor and or mov cltd cltd dec sub or call add test push cltd add in add sbb or fdivrs lods popf or lds cmp loope in sub popf or mov imul mov mov shll and aad mov (bad) leave add in loope fs int3 in and sub movsb lds movsl pop popa movsl movsb lds or sbb mov push popa (bad) fabs loope in lods mov cmp roll add fldl add int3 lods adc add mov mov mov sarl fnstenv test lods cwtl loopne aam in add lods popf or xchg xchg enter inc inc shl sbb sub loopne and add rol loope mov mov loope mov in mov lods add int3 mov add fs fsubrl add mov rcrl add fld1 in or cmp add inc xchg dec lds in popa mov cwtl int push cmp inc rcl dec xchg or or xchg leave rol adc fsub and dec mov mov lds and cmp xor adc fldl loopne popa add add and inc dec mov mov lods push mov lds xchg or sub movsl xor dec xor jmp sub add movsb int loope dec fstpl in in adc test mov or int3 enter mov mov fsub add add add or add inc inc in leave inc in frstor or add adc imul popf add xchg dec fnstenv pop cltd or xor cltd adc fldenv flds fstl xor mov loope add and mov lods and rcrl mov or inc mov popf inc shl add sbb add in lds rcll in sbb lods xor and or lds pop cltd adc aad mov pop dec and mov loope popa dec cmp add int add cltd add dec movsb lds popf xchg xor cltd mov add cltd cltd xor cltd cltd mov xchg dec (bad) mov pusha int3 fdivrs push and mov leave adc leave leave or aad adc and mov int3 leave gs aad mov rorl fldcw popf xchg adc add popf inc in movsl push int xor adc cmp sub movsb shll push popa movsl movsb shll mov imul in lods mov and popf and adc fldenv mov roll sbb test mov inc rol pushf lods mov sbb mov sbb loope imul inc add add lea lods in inc cmp or xor loope and loopne cwtl mov imul dec dec xor mov and mov sbb rorl int3 int movsb ror ds mov xor sbb sub sub sub mov sub mov and mov es xor sbb jo loope fdivrs inc add jmp inc fsub mov mov sub sub imul inc call sub push gs dec in out dec sub (bad) sub mov je and pop xor adc adc je inc jae add adc and add sbb scas cmp pushf es cmpsb movsb cmp lods mov aad rcrb dec push pop adc (bad) fwait (bad) adc push push mov in int3 leave pushf lods into addr16 and icebp sbb xchg dec cmp insl dec cmp mov sub cltd or call or or adc add inc inc fs dec and adc dec cmpsb mov (bad) sub int or inc and lret outsb les insl adc mov nop dec popf int jae pop test sbb sbb lods pushf xchg cltd pushf mov or mov mov push inc cmp push gs insl imul insl cmp imul adc cmp lret dec xor fs push ret rclb inc (bad) sub or pop xor jnp jns jns push sbb fnop jmp ljmp (bad) dec dec or sub sbb mov xor xor adc test sub movb mov cli inc inc jnp ror lcall and push push adc or push mov stos or and mov or je test inc arpl sub sbb sub sub inc push enter arpl inc xor stos jns mov sub push and inc mov dec bound cmp mov xchg and push xchg mov lret mov sbb mov add adc (bad) inc or mov and mov pop sub nop mov (bad) push adc sub cltd fcom cltd test xor sub inc inc gs and and xor and mov popa mov lods and push int3 movb dec add repnz popf push or mov and movlps and mov enter mov data16 jne sahf and push fwait dec data16 (bad) scas (bad) (bad) movsl adc cs jbe hlt sbb adc mov subl cltd mov rolb cltd rcrl xchg sbb inc push and stos lcall dec and mov adc pop cltd xor adc cmp inc das insl dec enter push stc sbb push adc fs inc mov inc inc ljmp or leave enter dec mov mov xchg (bad) mov xchg push je jb mov cmp test sbb mov cmpsl movsl push sbb pop nop (bad) ficoml pushf bound push jo les (bad) daa inc outsl adc addr16 lds in shl enter xchg sarb shll mov fisttpl cs arpl xchg in jno xor push push inc icebp sub popa enter movsl movsb adc cmpsb cmp (bad) in out repnz aam out cmpsb and jno lcall push inc lret lret ret jno lret fnop mov lea ds xchg fsts dec sbb es xor xor adc xchg pop fimull nop mov cmpsb sub push sbb push sub cmp dec sub jmp or scas stc xchg push push int3 dec (bad) jno and into lcall mov xchg rcll into push or push sahf xchg popf fwait rorl lret mov mov out and sbb cmp loopne mov in add mov or adc fcomp sub popf xor add fucom lods add shl mov leave fucom or add frstor and or inc adc xor adc or leave fstp sbb add inc and add and pushf loope or add or roll xchg or add rcrl fnstcw in push push adc xor adc add (bad) push cmp and adc add lods inc add lds popf fstps frstor adc sbb rorl roll jmp and rcrl inc mov pop (bad) add xchg add mov adc adc fstpl roll int or or or add inc add xor rcr sub add mov in sbb int3 fucomp mov or adc add (bad) push cmp xor adc inc dec popf cltd mov or rol sbb add sub adc roll roll inc xor add adc or push pop pop imul or popa or xor fstp sbb add mov adc and pushf loope and int and in push leave fucom or add inc sub and loope or int or in add inc shl aad fisttpll add in add roll xchg or inc add inc inc add rorl (bad) xor xchg int or mov or adc cmp mov mov add fldl add in xor sbb add int lods sub or cltd inc and and or sub lea rorl add in mov mov and adc or mov sub or inc xor xor fstp sbb add mov adc and pushf loope and int and in push leave fucom or add inc sub and loope or int or in add inc shl aad fisttpll and add inc popa inc inc add rorl and cmp add fldl or popa inc inc popf cltd lods add xchg inc (bad) in add leave or add int fldl or popf add xor mov in inc imul sbb popf xchg gs add mov (bad) sub popf call xchg inc cmp adc inc add adc popf mov adc jmp inc add adc popf sub xchg add sbb xchg add add xor xor add and (bad) sub or inc lea add (bad) jmp mov add (bad) (bad) jmp add and add add cmp shll int cltd fldl adc adc and add mov add (bad) test jmp add cmp sub inc pop or mov lds mov (bad) add mov and jmp add leave mov lods sub or push add adc add popa and popf mov adc in dec mov inc add adc popf sub xchg add sbb add and test in add xor or sub popf add and add xor adc xor sbb add loope adc adc int cltd fldl adc adc and add lea adc fldl add fnstsw in rcll dec or and frstor or or add (bad) aad pop roll adc lods in fisttpll movsl mov add push pusha loope rcll lds in mov adc cltd and mov add lea popf inc mov add shll and int roll or dec lods cmp sub xor shll fstl xor mov fmul pushf leave popa int and int add mov xor rcl nop loope inc leave add and loope test or sub mov fisttpll xchg fisttpll add in aad xchg in cmp popa and in gs lods add in adc add sbb xor dec xor dec cmp or imul mov test pop add in or add cmp adc lods xor loope lds rol loope fstp fldenv inc or mov sub xor mov popf adc adc rorl push inc dec cmp sbb in adc in fstpl or int3 int add or cmp adc inc lea sbb add mov popf adc movsl pop popf and rol mov int3 (bad) xor aad fdivrl in xor dec xor lea lds and leave or dec adc fucom add movsl adc inc adc dec add mov or fisttpll sbb mov pushf sbb lods aaa mov mov and sbb xor and stos and sbb xchg xchg cmpsb pushf and cmp cmp sub sub and and mov pushf mov cmpsl mov popa and xor adc push es imul or pop mov mov and jp pop mov adc int leave jmp lret mov sub xor (bad) push cmp es addr16 inc cld enter out enter les and or dec push and or jb mov lcall fmull and das adc sbb sub mov outsb int3 hlt movsb push cmpsl cmpsb in repz xor xchg hlt sbb arpl mov add in lds fist mov push xchg push jne je and xchg xchg ret test adc sub fnstsw xchg and cmp xchg push and (bad) test call lds icebp and aad rcrl adc pop rcl into pop pushf nop fwait rclb icebp sub or fmull enter jo push test xchg shlb (bad) xchg xchg call xchg adc and test mov sbb fwait rcrl (bad) lret lret (bad) int3 fst pop adc and lahf (bad) (bad) (bad) dec out cmpsb mov dec sub adc xchg dec imul inc enter mov addr16 and xchg fnstsw adc movsl cmp jge gs add mov (bad) inc popf call xchg inc cmp adc inc mov loop insl icebp and call lret push xor dec outsl dec xor decl movups rcrb loop inc clc nop pop jg dec dec xor cmp mov mov xchg push or loopne out and dec jnp xchg push data16 push pop xchg pusha ffreep loop mov (bad) inc mov popa pop loop inc mov mov jg lcall (bad) (bad) (bad) cld inc or outsb in pop or and sub push mov pop int movaps or or sub stos sub dec xchg mov leave or hlt xchg adc xor lods mov push push xchg pop popf ficoml push fistl pushf nop lea rcll push pop adc pop sahf popf (bad) nop dec sbb adc mov int3 xchg sbb in ret cmpsb in ja test xchg inc inc inc sub push or or adc popf mov push inc dec push inc push aaa arpl fisttpll dec jae pop gs dec dec push popa cmpsb daa xchg movsl cmp sub adc sbb adc inc or jmp sub sub and sub cltd aaa and mov xor mov lds leave sub int call test daa or sub xchg jbe imul sub mov sbb xor sbb test mov enter out (bad) out enter test inc push cmpsl add mov mov lods sub push inc nop mov push nop push and mov inc pusha (bad) adc pushf aam xor inc inc xchg call enter test sub and aad mov xor nop test arpl add mov inc int jns adc mov sbb mov loope shr jmp imul mov dec pop cmp dec push xchg mov cmp sub movsl and dec push nop mov xchg mov into push adc out xchg repz sbb mov sub fs das push mov and sbb mov (bad) or lret or jo je and mov fwait (bad) js lcall dec lret aam dec gs shrl gs xor (bad) fcmovu adc sbb pushf mov aam and mov adc iret xchg test adc mov xchg mov loop imul mov pop mov push rcll dec out sbb int3 pop loopne test push pop outsb rcl mov test push pop pop push rolb xchg mov (bad) aam stos (bad) out outsb shlb insb movsb push push pop pop push pushf enter mov in pop pop outsb (bad) jo (bad) xchg (bad) insb mov push pushf enter stos shr pop pop outsb aam mov int3 ljmp xchg bound loop xchg aam stos (bad) out outsb into stos mov lret pop pop push pushf enter xchg xchg pop pop outsb rolb insb enter pop push pushf shlb pop loopne test push pop outsb shl mov (bad) bnd pop push cwtl enter lock test pop shl pop pop push mov hlt xchg in pop pop ljmp loopne cwtl pop pop push mov lret pop pop shlb xchg into jo stos insb enter pop push push (bad) sahf fdivs int3 pop pop shlb out into jo mov loop pop push push (bad) sahf fcomp in int3 pop pop shlb out into jo mov loop pop push push (bad) sahf fsubs aam scas into stos sahf rolb push ficompl mov mov mov loop pop push push (bad) sahf (bad) ljmp scas pusha stos sahf into enter pop out push fsub xchg in pop pop ljmp loopne in pop pop push fdivs aam mov insb stos jo pop pop push pushf enter movsb repnz pop outsb aam mov int3 xchg pop push cwtl movsb lret push (bad) out (bad) (bad) (bad) xchg pop data16 lcall pop mov mov (bad) insb movsb out loop pop push push (bad) sahf fmull data16 insb cwtl lods jo pop pop mov mov mov mov push push (bad) sahf (bad) in mov mov insb lret pop pop push push (bad) sahf fidivl ljmp loopne in pop pop push fsubrl ljmp loopne cwtl hlt pop pop push pop pop pop bound pop pop jo pushf call pop pop loopne cmpsb fcompl push pop pop pop push fcmovu xchg int3 pop pop aam scas mov pop pop insb mov loopne pop push push (bad) sahf fmuls aam mov insb mov loopne pop push push (bad) sahf (bad) repnz mov cmpsb pushf movsb mov insb aam xchg bound lret aam cwtl push pop push mov fimull sahf push (bad) sahf (bad) xchg in mov mov insb stos pusha loopne pop push push (bad) sahf fsubl pop pop aam lods (bad) pop pop pop pop stos sahf aam lret pop out outsb aam mov enter pop push pushf test aam movsb pusha cwtl push pop push mov stos pusha cwtl push pop jo push (bad) sahf fmull aam mov insb mov push push (bad) sahf fnop ljmp stos insb mov lcall ret pop pop pop loopne xchg pop pop push aam pop push fmul xchg mov mov insb mov xchg ficomp push push (bad) sahf fsubrs pop pop pop fisubr xchg sahf xchg bound mov ljmp lcall pop pop out push fcmove xchg mov rorb movsb outsb in pop pop push ficompl ljmp loopne (bad) in pop pop push pop pop pop push fsubs mov lods fisubr pop pop stos sahf into scas lret pop out push pop pop pop push fmul xchg mov test xchg bound data16 pop jo push (bad) sahf fsubl in pop pop aam data16 pop in push pushf movsb enter mov test pop mov stos scas lcall pop pop out outsb aam movsb mov insb pop pop push pushf test hlt loopne (bad) nop push pop push mov mov jo pushf movsb mov mov pop pop pop mov (bad) movsb mov cwtl in pop insb mov into push mov pusha xchg stos data16 mov push pushf movsb enter (bad) push pop in pop mov stos scas (bad) stos sahf shlb in pop pop out outsb rclb insb mov insb pop pop push pushf test mov data16 mov mov insb mov push (bad) sahf fdivs aam data16 insb movb enter lcall aam scas mov lret pop out outsb shrb stos xchg (bad) insb test insb pop pop push pushf movsb mov mov pop pop pop mov les insb scas (bad) pop pop push pushf movsb (bad) lock pop pop pop mov mov mov xchg in pop push mov outsb mov push pop jo push (bad) sahf fsubl int3 pop pop aam stos lcall aam lret pop out push mov bound pop pop jo push aaa push inc ss sub das sub dec xor mov (bad) aam stos (bad) out outsb shlb pop mov cmpsl add xor dec insb mov rcll cmpsb stc or inc dec loop dec enter pusha inc push repz and cmp inc cmp (bad) lret bound nop (bad) arpl mov ret cmp repz inc adc in iret dec outsb lret sbb pop rcrl xchg or stc adc dec aad pop into push push inc lcall in add lcall rol inc adc and ss jl int3 sub (bad) fsubs dec push out push ficompl mov mov jecxz or add leave enter loope stos push ret scas pop or fistl xor fwait sub daa cltd sbb cmp xor inc push fs (bad) (bad) (bad) xchg pop data16 lcall inc sub mov movb xor and sub insb cwtl lods jno inc jno ss ret test lods enter test push xchg sarl in lret les inc inc mov (bad) repz cwtl mov das cmp je inc jbe int mov fwait pop pushw push inc aaa das and enter insb inc les adc int mov dec es ss dec adc push mov fwait push fs xor inc mov adc sub (bad) dec movsl icebp sub das xchg test inc scas and inc sbb xchg sub enter or enter mov mov dec repnz mov (bad) in lahf and pop test mov xchg lcall and fcom loop push icebp ss push and test dec mov xor dec mov es and movsb jne inc inc mov mov nop enter in push data16 pop in gs and je xor aam and mov dec sub mov fs imul mov or pop jns sbb adc mov movsb cs adc in bound enter stos inc test outsb and adc xor sub xor adc adc cltd int3 jno lcall and insb dec into repnz mov dec movsb (bad) lock or (bad) (bad) xor enter int xor mov in mov and icebp cmp (bad) rorb jne sub cmpsb inc pop clc xchg lcall insb xor push (bad) repnz lret mov inc icebp cmp rol hlt jo xchg adc sbb ljmp and or or popf movsb push outsl das mov adc movb inc xor and sub cmp pop adc movsb mov cmpsb inc bound icebp cmp or arpl inc and sbb outsl (bad) in insl dec adc enter xchg adc push daa test sub sbb xchg push bound (bad) call and cwtl lcall mov mov adc dec adc aaa sub pop dec mov inc les enter pop mov cltd shll pop enter pop adc or mov jb mov rorl sarl xchg cwtl mov xchg clc xchg dec icebp and pop adc lea out shrl xor outsl imul xorl stc or sub mov xchg mov cs xor les mov mov test fmul and ficomp cmp xor bound mov adc sbb sbb sub xchg xor sub cltd dec mov jae nop fldenv mov addl push jb dec jl dec mov cmp fwait (bad) and fs pop je and or je inc jg imul and aas clc cltd fisttpl fsubp ljmp gs imul sbb dec dec or lcall rorb lds frstor push dec enter (bad) or ljmp movsb (bad) and mov adc stos inc test sbb aad mov stos mov mov ja arpl dec les lods pop insb jbe push xor inc inc jo sbb test adc test test or sub mov and inc mov faddl ljmp adc loopne inc in adc push cltd adc xchg add xchg cmp dec lea xchg xchg dec cwtl fcmovu test inc inc inc push loop push (bad) and iret loop push xchg adc sahf and shll jb and cs jb in jne inc mov adc enter push pop dec leave cmp or dec mov cmp lods (bad) and mov xchg aad test cmp mov and dec nop (bad) cmp and and cltd sub sbb adc or push dec inc or add pop xor popf adc dec add or add inc adc mov and or pop inc mov cmp mov adc mov rcll mov int pop movsb lods in aad movsl or or or push (bad) xor fdivrl or or aad add or add sbb adc add xchg mov mov mov call xor pop int pop gs pushf lods push rcrl inc add xor leave adc lods mov add inc lods adc adc dec or sbb sub dec cltd add or mov cmp mov mov lea pop movsb lods in aad movsl or or or push (bad) xor push inc lods or or lds add or add sbb adc rcr (bad) or mov lods pop xchg fmul test add sub les lods cmp add mov cmp leave inc lds adc mov rcll mov int mov add cwtl fdivrl inc inc adc lds lds adc mov adc cmp add test mov cmpsb mov mov mov xor movsl mov aaa mov lcall test mov test xchg xchg lods cmp mov or int3 lcall nop push xchg dec fisttpll lcall push (bad) rcrb aam nop xchg outsb pop pushf mov nop movsb xchg (bad) cwtl enter (bad) test scas (bad) lock inc fs adc and lret test es cmc xchg inc mov ret push arpl jb inc inc jbe jbe bound or xchg and mov shlb push mov les jb pop popa ret mov fwait push sbb stc sbb pop mov pop and orl xchg sbb or mov adc xchg push fcmove insb xchg out bound pushf test pop and sub pop mov xchg fcoml fcoml mov ljmp mov inc popa dec enter push inc je push push sbb daa and xchg test test inc (bad) in addr16 data16 lea in mov push (bad) stc sbb aad xor mov and inc pop enter cltd int3 (bad) test fmul fwait adc dec inc xchg and (bad) dec adc les inc pop jb sbb (bad) sub cld dec or daa les fs lea sub (bad) enter mov adc fs inc cmp sbb scas cwtl outsb xchg bound test adc inc xor mov sahf xchg (bad) es stc adc push sbb jbe jb (bad) incb inc inc mov das cltd add aaa enter xchg xchg movsl and cld mov dec pop jmp addr16 outsb das loop jbe or inc jo fsubl dec addr16 dec xor mov (bad) mov out mov sbb test jbe inc je mov test xchg rcll aaa repnz mov and in aaa push enterw pop int3 lods in pusha cwtl stos adc sub lods mov dec incb repnz iret (bad) (bad) gs push mov lods lea ljmp sub outsb jo jbe mov adc lcall adc xlat nop (bad) cs adc mov mov push jne addr16 and pop cltd test lea jmp push mov es pop call lret scas in push outsb push in inc jno les lcall inc adc ja cwtl lcall lods scas and lret dec out push inc movsl inc pop insb mov mov or inc xor mov inc push (bad) call or mov xor mov and mov sub lret mov mov inc xor and int3 cmpsb test das jns roll inc aaa mov push inc pop dec imul mov ret clc cltd (bad) sbb bound popa clc lea mov add xchg adc mov push fstl mov lahf adc movlps push and insb dec test aaa xor dec imul and cwtl push mov cmp mov loop in sub mov adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std mov or adc ret cmp lcall sub and subl sbb mov or lcall xor mov mov push inc dec pop inc adc sbb xchg push (bad) cwtl les push ficompl les out (bad) sahf push inc inc xchg ja cmp adc insl xor mov and dec push data16 dec ret mov aam cltd loop inc adc dec dec loop imul jno ja movsb fadd xchg daa js fildl xchg adc pop dec mov sub and nop xchg and and arpl sbb stos xor or inc inc mov and lea ret ljmp xchg rclb mov push mov xchg mov inc sbb and sub mov icebp and inc push nop lea pop insl cld xchg lret xor mov popf xchg mov das mov pop dec dec mov mov mov les xchg push les (bad) push stos cmp adc test fmull jno and stos les adc push pop clc xchg xchg add jmp jae dec dec (bad) inc sub inc and (bad) rcll and lods pop dec lods mov xor pushf xchg sub imul icebp sub and inc (bad) (bad) dec imul or rcl les adc dec dec add mov es fcoms jg js mov lahf in inc ja les les xchg mov sahf sbb push loop addr16 cld dec dec cmp lods xchg and jle cmpsb sbb adc (bad) loop popa adc movsb dec dec pushf dec sub in jmp sub sub or sub sub sub sub sub or sub sub sub push sub lods or sub outsb sub jmp sub sub sub push jmp mov leave dec test call sub insl xchg sub sub sub sub sub into mov or push inc or dec sub es push iret or gs push sub sub push dec mov sub es xchg dec sub sub dec es push test sub mov push test sub sub data16 dec sub cmpsb data16 dec sub sub dec mov dec dec sub mov sub and sub enter int sub mov mov enter or inc lea sub dec dec sub lea sub imul push dec dec sub lea sub sub xchg test push test dec dec sub inc push xchg test sub sub sub sub sub dec test insl sub cmpsl or sub sub push or sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub iretw dec or in lret sub in mov in or out sub call into dec dec push mov test dec sub outsb in push sub dec scas mov ljmp mov mov dec call sub dec jmp jge cltd pop popf and lock (bad) into (bad) fidiv sub or xchg mov push push and mov or mov insb cld mov into mov int3 dec sub push inc or xor add int and sub mov xor mov xchg and add dec es fs xor xchg sbb cmp cwtl mov or xchg dec sub rcl es adc ljmp xchg lcall dec int inc inc mov xchg and xchg and xchg sub dec lea inc pop mov ds cwtl lea adc fcompl adc ficompl push push push dec or arpl add jmp test test xchg mov aad adc ficoml sbb ror adc cltd ficomp rcrb dec aad shrb stos inc cmc xor stos and xor mov cmp sub mov mov imul dec jmp pop inc adc nop pop jmp or jmp dec leave dec into lret dec ljmp push jns sub stos cmpsb mov mov dec cmp push inc jbe push xor and mov daa and sub xor sub xor jle addr16 xchg scas es lods sub loop jp adc fwait adc insb dec inc inc inc push inc inc ja dec inc addr16 inc push xor inc inc inc push inc js push inc push outsl bound xor jns push push pop outsb dec inc imul ja dec cmp push dec jp inc push xor xor push push xor pop inc inc push xor push imul jo push inc xor xor push insb adc arpl mov popa lret cmp mov push xchg inc orl mov mov inc xor sbb and xor pop xor imul lcall xchg or xchg pop and int3 inc das cmp sub dec mov dec (bad) xor jb stos bound dec xor dec xor (bad) adc dec adc pushf les into inc data16 cmp mov bound dec inc xchg mov sbb mov aam mov imul push shrl and xchg sbb cld dec lea jo mov push and enter fistl mov cmp jne les movsb xlat jae mov aas loop jp adc andl (bad) jb mov pushf dec popl jp mov lret outsl mov adc outsl adc sbbb jo inc xchg arpl mov xchg mov and popa xor gs clc sahf or jb loop addr16 xor push push dec dec push inc xor mov xchg insb insl sub pop add fs mov rcrl dec les pop inc fsubrp mov mov and push sub aam out inc push in xchg sub bound pushf sbb fisub dec les mov aad les adc (bad) stc adc add shlb ret popa sub cmpsl jg dec lods mov xchg aas (bad) clc cltd or jmp pop dec les (bad) xchg adc aas clc lea mov cmp dec (bad) pop jo out iret (bad) (bad) (bad) cld dec push pop inc sub sub aam inc xor decl xor xor cld dec push (bad) cld dec sub es lahf clc xchg dec mov bound (bad) cld dec or and popa xor jg icebp daa sbb inc xor (bad) inc (bad) out (bad) es icebp daa cmp decl and call dec ja mov dec int dec mov sbb or mov push out and fcomip and and and dec mov (bad) and mov xchg xchg cmp dec xchg dec mov ljmp sarb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld mov sub (bad) (bad) clc xchg rolb (bad) call sbb sbb push sarb icebp and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp inc jcxz,pn or push sub inc enter iret (bad) inc (bad) mov adc hlt and and inc adc aam rclb (bad) and pop les jbe je dec test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc nop xchg jg call or push and (bad) (bad) (bad) fcmovb xor jne mov test xchg cmpsb xchg notl xchg gs mov jne mov xor xchg aad push es es jecxz ss adc mov push push out mov pop adc inc daa adc cmpsl inc lds inc jbe push push daa push xchg (bad) divl aaa jae inc xchg xchg aaa and movsb (bad) xor mov inc add andl adc xchg cmpsb inc aaa inc divb push (bad) mov push mov add xor ja test xchg (bad) cmc inc adc and add mov jns push push xchg push push sbb mov aaa ja in jae adc and inc fs jne jbe ss and xchg xor xchg xchg xchg push les mull xor push (bad) movsb pop test movsb roll inc mov mull xchg adc movsb jne aad xchg push xlat inc ss test xor inc inc push xchg and andl xchg aam mov jne out jbe push adc xchg rcll cmpsb inc test inc adcl inc xchg push divb pushf rorl mov lds test aad dec lods sarl mov mov mov in mov test mov fldenv int test fxch xor (bad) xchg rcl mov fstp xor lods fsub adc (bad) inc adc in mov cmp int3 mov push lds popa pop (bad) in push int fstpl shrb cltd mov fnstsw loopne flds in mov lods inc inc gs jbe inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) xchg sub stos and mov es sub sub xor stos je or inc lods cmp dec adc loope push lods in push pop sub sbb pop lds loope pusha aam popf and dec sbb lds test aad dec lods sarl mov mov mov in mov test mov fldenv int test fxch xor (bad) xchg rcl mov fstp xor lods fsub adc (bad) inc adc in mov cmp int3 mov push lds popa pop (bad) in push int fstpl shrb cltd mov fnstsw loopne flds in mov lods inc mov in fsub and mov jmp add sbb or push push lds and or mov add leave dec lods xor mov add sbb cmp inc add test imul add imul add leave cmp mov sub imul movsl imul or int add mov lods add dec mov add or add lds add mov movsl lea lods add dec mov aad pop sbb xchg inc or push mov leave add add add mov mov roll add popf or gs and movsl add popf or popa dec lds inc add sbb gs lods add xchg popa sub imul xchg mov sbb mov leave dec mov add popa cmp push pop in imul aad gs lods add xchg add lods add add add push add add popf add rorl sbb sub imul fldenv rorl add int popa cmp and popa sub xchg dec or lea in sub add popf inc mov jmp mov or lea lea gs cmp gs cmp and leave cmp test rorl inc popf sub and adc lea in sub add int leave cmp xchg sbb xor in pop sbb gs sub mov aad pop xchg mov or cmp mov and fstl enter and lds (bad) sbb dec (bad) sbb cmp mov and mov fs dec or xchg and lds (bad) sbb dec (bad) add imul mov or and mov pop test and popa sub sub add aad mov roll popa dec mov sbb dec mov int in pop cmp mov and in or add aad mov roll pop aad xchg sbb mov imul in or or imul popf xchg mov mov fs dec or xchg and lds (bad) sbb dec (bad) sbb imul mov or and mov pop test and popa sub sub add shll aad push and fs (bad) popa cmp lea in and popa sub sub add popf mov aad pop xchg mov or cmp mov and aad int in pop cmp mov and mov mov rorl add int pop cmp xchg or loope xchg sbb or xchg popa sub add sbb pop shrl aam and sbb or xchg popa sub gs rorl leave sbb mov cmp imul or xchg sbb add aad popa xchg mov add fldenv int and xchg sbb push popf fs int in pop cmp mov and (bad) lea fs sbb and sbb push mov pop sbb add adc or imul pop rcll aad sub or xchg dec or xchg and lds (bad) sbb jmp sub add mov fs (bad) mov jmp mov aad xchg and lds (bad) sbb dec (bad) sbb or imul popf imul dec (bad) sbb dec (bad) sbb imul mov aad xchg and lds (bad) sbb dec (bad) add imul gs fstpl lea pop shrl aam and or or imul popf xchg mov mov fs int in pop cmp mov and mov mov rorl or imul popf imul dec (bad) sbb dec (bad) add imul mov aad xchg and lds (bad) sbb dec (bad) add cmp and sbb aad and int in pop cmp mov and add imul shll cmp lea in and int lds add imul imul aad in lods imul test sub add popf xchg mov mov imul dec (bad) sbb sub mov add int leave cmp xchg sbb xor mov add sbb or add sbb sbb mov imul add and xchg sbb push mov popa test add add inc add in adc lods inc inc add add add add add add add popf add add add add lods add add inc add add add add add add inc movsl mov add add add roll add add add imul in add rcll inc inc add add add add roll imul add xchg fldl cltd pusha int aad pop loope push add sub test roll or lea in fs loope fs sbb mov in imul fldl xchg sbb cmp add int lods fs sbb mov in lea sbb add sbb cltd fs dec mov leave fldl gs cmp pop inc mov sub lret (bad) sub xchg push movsl in jmp mov or sub inc test dec outsb or lods mov test scas sub into add insl dec or scas push int push cs outsb dec es into imul cmpsb mov inc outsb (bad) or scas or dec movaps dec iret dec gs lret or daa sub int3 data16 xchg (bad) mov or xchg scas dec inc jmp call push pop sub inc gs mov out inc and push mov dec outsb call pop sarb xchg pop bound adc test push call ret popa stos or xchg or cwtl mov sbb inc adc dec sbb lds inc inc rcll dec (bad) or dec dec mov (bad) inc xor adc scas enter mov xor lods ljmp rorl aam cli adc lods ror cmpsb fimull adc push mov inc enter fisttpll sub ja arpl and bound adc gs scas adc popa or and mov push mov enter sub push pop adc sbb into mov mov fmul mov adc mov xchg in dec into bound adc xchg lcall dec mov cmp ja movsl push aam movsl movsl xor inc and xor mov les sub push addr16 inc adc je cmp nop rcrb adc xchg lcall mov in inc inc xor sbb mov test dec dec xor push jbe imul dec lea and repnz cmp aaa jl xchg inc push push aam pop fwait push popf cmp inc pushf pusha les into mov jb xchg xchg (bad) (bad) (bad) (bad) (bad) mov movsb push fimull ret loopne mov rol mov insb mov xchg into mov jb xchg xchg (bad) (bad) mov mov pushf pusha les into enter (bad) fs into mov jb lret aam fs enter mov movsb in (bad) rolb mov movsb in (bad) rol (bad) mov lods ficom data16 in (bad) rolb xchg mov (bad) fsubrl xchg mov pusha mov xchg ror mov xchg out (bad) (bad) (bad) mov mov lods (bad) xchg nop mov mov movsb in (bad) rolb (bad) fsubrl xchg mov pusha mov xchg ror mov xchg out (bad) (bad) (bad) (bad) test les enter test pushf pusha les into mov jb (bad) data16 repnz les into ret fadd fimull (bad) (bad) (bad) (bad) mov test mov pushf fadd scas lods ljmp lock mov les xchg fcoms test (bad) mov (bad) mov lods call xchg mov mov test les xchg fcoms jb (bad) fcmovbe into mov mov les movb scas lock mov (bad) xchg mov (bad) (bad) mov lock mov mov xchg nop mov enter les jb (bad) data16 repnz les into mov lock (bad) data16 repnz movb fs xchg nop mov enter les test (bad) (bad) (bad) (bad) mov lods xchg (bad) mov (bad) fisubrl ret fcoml jb lret aam fs enter mov movsb in (bad) rolb enter xchg out (bad) (bad) mov lods ficom data16 in (bad) rolb mov test les enter mov movsb in (bad) rolb mov movsb in (bad) rol (bad) (bad) mov mov pushf pusha les into mov lods hlt enter mov movsb in (bad) rolb mov movsb in (bad) rol (bad) mov lods ficom data16 in (bad) rolb enter mov movsb in (bad) rolb mov movsb in (bad) rol (bad) (bad) (bad) (bad) (bad) mov mov (bad) fsubl mov fdiv (bad) mov (bad) mov lods call xchg mov movb fs pushf pusha les into enter (bad) fs into mov jb (bad) data16 repnz les into ret fadd fimull (bad) mov les into mov lods hlt enter mov movsb in (bad) rolb mov movsb in (bad) rol (bad) (bad) (bad) (bad) (bad) mov mov mov movsb in (bad) rolb enter mov movsb in (bad) rolb mov movsb in (bad) rol (bad) (bad) (bad) test (bad) fs rol mov les push xchg mov enter les faddl mov enter xchg mov (bad) fsubrl xchg mov (bad) fisubrl (bad) mov mov mov movsb in (bad) rolb enter mov test mov pushf pusha (bad) fsubrl xchg out (bad) (bad) (bad) (bad) test enter (bad) fs into mov lods hlt enter mov movsb in (bad) rol (bad) (bad) mov (bad) fcmovb faddl mov les mov scas lcall fisubl (bad) (bad) mov les (bad) (bad) (bad) (bad) (bad) mov les mov enter les (bad) (bad) mov mov enter les (bad) (bad) mov pusha (bad) (bad) nop out jb (bad) (bad) fisubl mov jb mov mov mov pusha (bad) (bad) xchg (bad) (bad) (bad) in mov pusha (bad) (bad) nop lock (bad) (bad) ficoml (bad) (bad) (bad) mov (bad) (bad) test (bad) (bad) (bad) xchg xchg (bad) (bad) xchg (bad) (bad) (bad) (bad) push mov into (bad) (bad) (bad) mov jb (bad) (bad) jo (bad) (bad) (bad) xchg mov jo (bad) (bad) (bad) call xchg into (bad) (bad) (bad) xchg (bad) (bad) (bad) (bad) call cwtl cmpsb pusha (bad) (bad) xchg in (bad) (bad) loop (bad) (bad) (bad) cwtl test (bad) (bad) mov mov xchg ror mov (bad) (bad) (bad) (bad) (bad) mov enter shlb test (bad) (bad) xchg jo (bad) (bad) (bad) mov xchg enter xchg mov enter (bad) (bad) test mov lods ljmp push mov test mov xchg fadd data16 bnd pusha (bad) (bad) test mov test aam pusha (bad) mov mov lock mov les jb mov mov enter les jb enter (bad) fs rol mov (bad) (bad) mov (bad) data16 (bad) mov mov les jb (bad) mov (bad) (bad) (bad) (bad) (bad) mov mov movsb fdivs bound mov pushf fdivs (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov mov xchg xchg (bad) data16 loopne (bad) pushf (bad) xchg mov (bad) xchg (bad) ljmp xchg mov (bad) xchg (bad) fiaddl out xchg mov (bad) mov (bad) cwtl mov into test lods xchg into xchg int3 (bad) loopne (bad) test push enter (bad) nop (bad) xchg mov (bad) xchg (bad) ret xchg into test lods (bad) loopne (bad) mov lcall loopne (bad) mov (bad) xchg xchg (bad) mov mov xchg mov (bad) xchg (bad) lcall xchg mov (bad) xchg (bad) xchg (bad) loopne (bad) xchg movb loopne (bad) test mov mov into xchg mov (bad) xchg (bad) (bad) (bad) loopne (bad) mov mov stos xchg (bad) jb fadds mov stos xchg (bad) insb (bad) fadds mov stos xchg (bad) data16 fadds mov stos xchg (bad) in (bad) fadds mov stos xchg (bad) aam fadds mov stos xchg (bad) sahf (bad) fadds mov mov xchg into xchg enter (bad) mov out mov xchg into mov pusha xchg (bad) jb enter mov (bad) test (bad) ljmp nop mov pusha xchg (bad) into (bad) enter (bad) nop mov pusha xchg (bad) mov into mov (bad) xchg (bad) fiadd out mov (bad) xchg (bad) cwtl (bad) mov (bad) (bad) (bad) mov stos xchg (bad) mov mov (bad) mov fmul mov (bad) pushfw mov scas push les test mov (bad) mov fmul mov mov loopne mov movsb xchg (bad) fidivl enter (bad) (bad) mov mov movsb lcall pushf pusha ret fsubrs mov (bad) (bad) mov fmul mov mov enter movsb in enter mov pushf hlt mov enter jb mov pusha lods cmpsb lcall lcall stos (bad) lcall (bad) (bad) (bad) (bad) in (bad) fsubs mov movsb fmulp stos mov ret ror (bad) (bad) (bad) (bad) mov rol (bad) mov mov (bad) rol (bad) mov (bad) (bad) (bad) ror stos loopne (bad) (bad) loopne les pushf fadd mov enter enter mov (bad) (bad) (bad) (bad) test mov mov out fs ror mov in (bad) into (bad) (bad) test stos outsb push fs test into repnz outsb outsb shr mov (bad) (bad) (bad) (bad) out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov repnz mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov mov cmpsb (bad) call mov stos bound scas lods loopne mov pushf (bad) mov mov ret loop fs (bad) mov hlt enter enter lret lock data16 mov call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop hlt outsb pop mov mov push aam jo int3 pop pop pop pop pop pop pop pop jo (bad) mov stos mov out mov mov mov (bad) mov int3 pop pop pop pop jo pop lock nop test nop repnz rclb cmpsb mov xchg xchg loop repnz call lcall pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop (bad) out lods mov out test test test test (bad) (bad) (bad) (bad) mov (bad) (bad) (bad) mov (bad) (bad) out test nop lcall mov lcall (bad) mov test (bad) mov fadds mov lcall xchg mov test mov hlt (bad) mov rolb mov push fadds into test (bad) mov ljmp test (bad) (bad) (bad) (bad) (bad) out test (bad) mov fadds into test (bad) mov ljmp test (bad) (bad) (bad) (bad) (bad) (bad) test (bad) mov hlt (bad) mov xor movsb mov ss mov mov test cmp stos cmpsb mov sbb xor mov sub cmp arpl sbb xchg sarb mov mov fs dec or xchg and lds (bad) iret sub sbb int sub dec sahf nop test mov in lods dec xchg dec hlt movsb daa inc xchg jae test adc out bound jne and pop rorb pop pop int3 aam pop adc es ss add dec mov test and ret mov (bad) lock and cltd push adc sbb call (bad) or les es test and out cmpsl xchg and inc jne and daa xchg xor (bad) clc xchg pop mov and sub xchg adc icebp and (bad) (bad) call (bad) (bad) stc push xchg aad mov dec dec add adc and (bad) (bad) (bad) (bad) (bad) (bad) inc pushf shlb lahf (bad) cld dec dec add call jae xchg mov dec mov jp push xchg xor stc push mov lcall xchg bound xor std and roll sub inc and and dec jp shl cs and adc cltd nop dec (bad) mov and mov inc out (bad) and mov dec and mov add mov sarb adc jae adc mov lahf icebp cmp or xchg push bound adc inc push movb cltd xchg or js mov jmp sbb orb adc call inc xchg push imul xchg pusha (bad) in adc mov (bad) or and pop dec or je mov xchg (bad) fiaddl push into pop out inc inc dec push inc and cmp scas les xchg or push push lea fs cld dec sub sub fs and fcoms adc mov mov xchg add (bad) adc movlps mov aas icebp cmp push xchg sub adc pushf inc enter push dec adc aas cld dec enter xor les pop adc mov aas les cld dec jmp dec es es and adc sbb inc jbe inc xchg xchg sbb out jb lea enter movsl add bound enter xlat adc inc xchg xchg bound les inc push popa xchg (bad) mov xchg loope cmp push pusha lods cmpsb lcall lcall or cwtl fwait xor sub mov mov cmp lret arpl adc xor dec pop mov enter js lcall rcll push dec lret adc sahf push (bad) int pop rcll pop call cld mov test ljmp mov test lret sub int mov ljmp xor cmp dec (bad) mov hlt mov shrb aam lock hlt inc mov xchg jns (bad) (bad) (bad) cwtl pop hlt outsb pop mov mov sahf aam jo int and jp lcall adc lcall sbb cmp xchg pop lock nop test nop repnz xchg (bad) mov cmp mov mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push pop cwtl xchg pop inc or inc inc je or dec xchg sub loop ja mov adc (bad) jl dec cmp xor pop pop cltd push jle xchg pop (bad) jmp arpl cld dec cs (bad) (bad) clc xchg adc nop xchg mov and dec (bad) (bad) clc nop popf mov (bad) inc ret (bad) decl (bad) (bad) (bad) (bad) call adc (bad) (bad) (bad) call adc incb push cmp push lods mov xchg stc adc fmul bound and outsb inc inc inc mov decl jae jno cwtl jg cld dec imul (bad) (bad) inc (bad) out adc jl mov (bad) cld dec dec mov inc lcall or and mov pop or or mov sub sub jbe mov inc dec dec incb push push es mov sub ja in inc inc jo (bad) fisttp sub add adc int3 dec or xchg pop (bad) and mov or dec sub inc xor push nop xchg and cld dec dec aas les and inc enter es push nop nop nop push push mov test mov or sbb mov (bad) call sub sub dec mov les adc call push addr16 push les (bad) (bad) (bad) and dec sub sub icebp and nop js pop movsb dec ja inc adc inc cmc adc jns adc dec aas adc iret jmp inc ja xchg pop repnz dec clc xchg push jg (bad) clc nop pop jle and mov sub jg (bad) (bad) cli mov inc jne xchg es add push and xor cmpsl cmp data16 mov pop xor cmp push xor insb push ja inc and push (bad) lret aas cld mov imul aad dec push xchg adc and or es mov push dec pushf pusha les push push leave adc push xchg jg and stc push pop rcrb push inc (bad) (bad) (bad) (bad) (bad) cld dec dec aas mov and or iret (bad) (bad) (bad) (bad) cld dec or (bad) (bad) fldenv sub mov sub mov mov cmp xchg push adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push and (bad) (bad) (bad) (bad) (bad) and das (bad) clc cltd xchg jg clc nop pushf mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc nop xchg jg adc (bad) loop push clc xchg pop (bad) (bad) (bad) (bad) (bad) decl push jg inc addr16 (bad) (bad) (bad) (bad) cld dec dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc nop xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push and jg les inc (bad) (bad) call push aas (bad) (bad) (bad) (bad) es pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp inc dec (bad) decl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl addr16 pop les mov dec out clc cltd push jg (bad) (bad) (bad) (bad) (bad) and add mov mov lcall add or add adc mov cmp xchg (bad) into test and push inc movsb adc arpl mov cltd mov rorb or mov insb call pop adc mov cld dec dec pop decl sub mov arpl adc test jmp rorb inc outsb clc cltd adc loop inc push and jle es les (bad) loop push les (bad) (bad) es adc xlat (bad) (bad) and into and popa xor call adc inc lods iret cld dec dec push sub inc je sbb (bad) decl dec inc test push push dec mov test xor call adc (bad) (bad) lods xchg nop in pushf loopne fs mov lock loopne mov mov (bad) inc lods cmp (bad) inc test and inc ret (bad) insl adc (bad) and (bad) (bad) and outsl (bad) (bad) (bad) (bad) decl lret mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) and dec inc test (bad) (bad) push sub jmp push push inc dec xchg dec inc or and inc push clc xchg popf repnz mov clc nop xchg jno and insb les icebp and stos iret (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl push dec insb dec push xor pop je dec xor xor pop xor dec push inc jp push addr16 jp jns push inc xor dec push enter (bad) and inc les push push inc in xor xor inc out aaa xchg lds adc movsb fs xchg xor cmpsb les clc xchg sbb decl cmpsl les popf (bad) call jae jmp push inc (bad) ljmp push out sub ljmp into jmp dec ja enter mov mov sbb lds sub cmp mov imul (bad) std dec push mov rcrl mov lods xchg mov adc in push arpl cli inc xchg imul jae adc and stos cmp (bad) inc pushf (bad) mov enter push dec bound jbe test data16 and mov out mov jge sub addr16 imul inc bound inc mov push pop inc inc bound dec xor dec imul imul inc rol xchg js mov and cmp stos cwtl mov mov and cmp xor bound dec adc dec dec stos es lods or ljmp lea cwtl fwait push popf cwtl fisttpl adc sbb addr16 push mov (bad) ss xchg movsl jle fs inc cmc xchg dec dec test or dec sub sub dec jle push inc push adc push sbb mov jb test push push jp js xor sub pushf aam xchg lea sahf sbb gs sbb push sub sbb xor aaa mov rorb and lds test mov mov cltd xchg dec mov xchg jno mov sub sub sbb mov es mov xchg jg or xchg sub (bad) push daa cmp dec data16 arpl push sub push jp xor adc dec bound push lcall aad mov dec lahf mov mov push adc or inc inc inc inc adc mov dec mov and (bad) add out xchg inc fisttpll les ds jg adc push popf (bad) push and jle and xchg inc movb shrb mov cmp icebp and jle and cld dec dec pop nop pop loop push mov icebp sub icebp and aaa mov call adc decl out jae inc push or adc (bad) (bad) adc mov xlat cltd cmp nop enter daa cmp lods inc movsb arpl mov out into arpl ss jb xor in xchg sub mov push popa sbb or jmp incb adc (bad) adc (bad) (bad) and inc push decl (bad) (bad) (bad) (bad) clc nop xchg jle inc jg (bad) (bad) dec test test push mov jns xchg push pop (bad) and pop (bad) and outsl xchg xor rcll or push decl pop mov pop les jg sbb (bad) (bad) (bad) (bad) (bad) and les les xor xor dec sbb loop xor les or test and mov (bad) sahf out in inc inc je (bad) mov inc jle adc xchg adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push sub icebp and dec inc mov (bad) jmp push push loop pop (bad) (bad) (bad) (bad) (bad) cld dec dec shrl test jmp push ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) and in mov or jno cmp ljmp stc sbb mov (bad) dec xchg pusha les push and xchg fwait mov lcall (bad) (bad) (bad) (bad) and das clc cltd sbb call jb (bad) push and (bad) (bad) inc (bad) outsl (bad) (bad) (bad) call jnp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc fadds js adc and inc mov insl fs jo and inc dec inc sub aad test xchg test cwtl icebp daa cmp dec data16 push push test push nop test and rcrb adc xor lods enter cmpsb test es xchg (bad) (bad) (bad) (bad) push xor dec pushf (bad) xchg (bad) jge xchg pop inc add cmovne dec sub lret ds sub mov push sub sbb icebp pop mov push daa cld dec push loop push decl out out mov dec jg adc aam enter xlat inc bound rcrb or cmp nop push and inc mov daa jae repnz adc and loopne clc nop push js or nop push bound mov and xor test sbb cmpl or aam mov adc inc cmp dec or mov adc adc (bad) xchg hlt test mov xchg sbb inc cmp enter (bad) and inc xchg push mov inc mov adc dec lret inc xor mov stos adc adc inc push xchg adc or icebp sbb cmc jno stos inc ljmp inc ret xchg xor sub or scas es and bound (bad) dec popf xchg dec test inc je sbb dec lcall shrl imul and les adc cltd fsubs outsl inc inc dec jb adc pushf dec into xchg and mov cmpsb inc push inc xor sbb inc dec inc pop in call mov xor inc xor and inc test sub (bad) out (bad) and iret clc cltd aam xchg or jbe fs adc ja cmp dec insl fisttp mov push decl mov mov or icebp xor and (bad) push sub decl add icebp and inc hlt test mov cwtl and mov inc and adc shlb (bad) jmp jp mov (bad) call xchg pop clc lcall mov in jae inc adc aaa (bad) jmp sbb adc jg push xor incb xchg (bad) loop cmp inc (bad) and psllw incb notb mov mov and inc cmp icebp xor jg into adcl scas (bad) stc sbb lcall sbb pop mov jg lret sbb and sbbl aad adc bound (bad) (bad) out pop fwait xor test mov lods bound (bad) jmp jbe dec inc and pop (bad) and (bad) (bad) (bad) (bad) (bad) call pop xchg and and push es les dec out cld dec daa pop cld dec or leave in or mov loop cmp cmp push mov les (bad) (bad) (bad) (bad) (bad) call shlb jmp inc cmp and cld xchg inc push pop and mov call mov mov (bad) jmp cmp (bad) jmp das xor push cld dec and mov (bad) call pop scas in xor xor inc pop jno dec and sub dec mov mov mov loop inc (bad) (bad) dec jo bound push pop mov push sub and (bad) (bad) clc xchg dec js popf aas mov (bad) jmp jns jp adc adc xchg inc inc (bad) (bad) decl mov and mov in das dec xor inc mov mov mov mov into fs and push jg loop das mov (bad) xchg test shrb xor (bad) (bad) and adc jle adc nop push inc (bad) xchg clc nop push mov xchg add pop or ss (bad) jmp cmp push loop push loop mov adc aad aam push dec (bad) stos mov mov inc inc push pop cmp cmp xor loop ja or pop (bad) call dec daa in inc dec inc (bad) inc push kmovw (bad) clc mov cld dec scas pushf dec push and jmp das dec cld mov es (bad) stc or rcll xchg or dec or dec dec and dec push inc je inc clc popf xchg jg stc push sbb xchg (bad) and (bad) (bad) call fwait cmpsl loop inc (bad) jmp cmp inc inc push loop dec loop inc mov (bad) decl mov in xor fs jbe mov call mov out (bad) (bad) (bad) es and aas adc (bad) jmp inc and push inc xchg adc xchg or dec push (bad) call jnp mov mov xor and cwtl xchg lods jno mov and jle inc aas (bad) incb inc movsl pop rorb popf les push lcall sahf pop aas and sub pop (bad) (bad) and (bad) clc mov jg xchg das (bad) jmp ret das adc (bad) (bad) jmp push and clc mov jg ret call mov adc aaa mov addr16 xor jg icebp xor aas (bad) cld inc imul cmc sahf daa push dec (bad) (bad) (bad) and adc iret adc xlat in cmp (bad) jmp inc pop stc adc xchg jg stc adc adc incb push and and out and aas les jp call adc (bad) (bad) decl sar fwait adc push adc scas (bad) incb gs (bad) inc ljmp (bad) (bad) stc or pop xchg mov sbb (bad) (bad) cld inc jmp mov pop inc dec jl or mov (bad) decl pinsrw (bad) (bad) incb mov mov fimull xor inc inc adc cmpsb push es loop inc (bad) inc push xlat cld dec popw (bad) cld dec dec aas mov (bad) decl mov mov and (bad) (bad) (bad) clc mov cmp inc pop adc jg jmp jnp mov and mov lock decl sub and push sbb and mov xor mov pop mov movsb mov in jg push popa dec inc icebp and mov sub mov push xchg pop adc push rclb ficomp shl xor inc jae inc dec inc (bad) and push and mov icebp sbb les enter mov mov icebp and repnz popf shrl (bad) pushf aam clc fwait pop inc mov jne in inc xor xchg test inc and inc cmp add sub les clc xchg push jg lret pop sbb mov sub mov xor adc cmpsl mov cld mov or dec or or sub push dec sbb inc or jp push lahf in jno ja ret pop repnz pop (bad) es lcall mov icebp and mov daa inc outsl les inc scas repnz lods mov and les loop jns and loop mov mov loopne and cltd adc lea incb ret add sbb inc dec or or lcall and xchg sub mov mov xchg xor pop or and pop xor dec jno mov xchg and call nop sahf jl dec cld dec mov xchg xchg sbb dec dec icebp sub icebp cmp icebp sbb mov movb stos cmp or inc inc mov les adc mov cltd (bad) icebp and (bad) (bad) les dec or mov and mov push or enter xchg push test pop (bad) out (bad) adc push adc dec or xor les xor stos or (bad) es and aas adc nop pop jg and xchg push les and cmp cld dec dec mov sub and enter push ja ret stos (bad) inc mov and add push adc dec dec pushf dec lea cwtl xchg pop (bad) in fistl rorl shll insl loop dec mov and fcoms mov inc and push cmp dec (bad) test mov pushf sbb cmpsl call lret or sub (bad) daa fisttp pop (bad) clc nop aam inc cld dec test icebp sub les mov and mov mov imul movsb push xchg mov or nop push pop adc pop rclb push push push push push push push push push pop push mov rclb sbb push push push dec rorl cltd nop pop rcrl push sbb push dec sbb cltd push pop rcr push sbb push push push push push push push pop rcrl fistl fsts rclb pop rcrl fistl fsts push adc push aam xchg mov adc pop sbb xchg dec pop sbb push xchg rclb adc push push rcll adc push push adc aad rclb sbb aam push dec xchg mov popf rcll sbb fwait sbb int sbb push fstl adc popf cltd or xchg pop push adc cwtl fistpl ficom xchg pushf (bad) xchg aad rclb push push xchg aad pop xchg fistpl adc xchg rcrl push dec sahf sbb push push int fcoms push xchg sbb push lcall adc push push sbb push mov popf cwtl fistl pushf sbb dec pop pop pop push lcall pop sbb adc sbb xchg sbb push push xchg rcrl xchg xchg sbb adc push nop push push push pop rclb push push adc mov push push push push push xchg mov sahf pop fistl pop adc fwait sbb rcll adc xchg sbb sbb xchg cwtl rclb rcll adc mov int3 mov push xchg push xchg xchg fwait sbb push sahf pop fisttpl push adc push push push pop rcll adc fistl pop push push fcmovnbe push push sahf push xchg rorl mov xchg adc push adc sbb adc xchg dec xchg pushf aad fistpl pop sbb adc sbb mov xchg int3 push pop push int3 pop adc push push dec xchg mov push int fcoms sbb xchg xchg adc fwait pop sbb adc sahf push push lcall adc fwait sbb rcll xchg push xchg sbb mov xchg int3 push pop push int3 pop adc push ficomp adc xchg push push pop push push xchg push xchg adc xchg dec push push push push push push cwtl xchg adc rcrl rcll adc adc push adc adc push aam adc lcall xchg xchg fwait sbb xchg fcomp push lcall into pop pop push adc push push adc sbb xchg adc nop xchg ficomp cltd adc lcall rclb pop fstps sbb dec pop xchg xchg adc sbb fwait push pushf (bad) xchg cwtl rclb xchg push aam xchg mov dec adc adc adc pop sbb adc pop fistl xchg pop push adc push push rcll adc push pushf sbb dec adc fistpl sbb xchg push adc dec xchg sahf cwtl ficom push pop int3 aam adc rcll dec xchg sahf cwtl ficom lea adc adc fwait push push adc adc xchg ficompl sbb adc cwtl push into dec adc pop push push push pushf sbb into pop xchg xchg push dec push push push pushf sbb adc sbb push fwait push xchg xchg fwait sbb push pushf sbb fwait sbb push push push xchg nop push push pushf sbb sbb fwait pop sbb xchg cwtl rcrb aam push xchg adc fcoms sbb xchg push pop adc adc adc pop sbb xchg push popf rcrb sbb adc fwait sbb push lcall cwtl rorb xchg push xchg ficomp sbb aad fcoms sbb pop fstps sbb xchg lea aam sbb xchg dec adc fistpl push xchg rorl popf rclb push push xchg push xchg adc fcoms sbb adc sbb pop sbb adc sbb pop rclb push push adc xchg push pushf sbb dec adc fwait push push adc adc pop sbb xchg cwtl rorb push xchg push xchg adc fcoms sbb xchg push lea push fcom aam xchg mov adc int pop mov popf push push adc sbb adc rcl lcall aad push push dec adc rcl lcall rorl fst xchg push xchg adc push push adc mov push push push xchg push aam aad sbb xchg fwait adc ficomp mov xchg push xchg rcrl sbb rcrl adc sbb push adc xchg pop rorb dec push sbb push push fwait adc rcrb push ficom sbb pop push push push sbb pop adc sahf push dec rcrb push ficom sbb pop push push push adc push push fwait sbb push sahf pop push adc push dec xchg pushf aad xchg lcall rcrl push pop fistpl push push ficomp pop push xchg sbb pop or push rcrl push dec aam sbb xchg push xchg adc pop push adc xchg xchg popf (bad) push rcrl adc adc push pushf sbb xchg mov adc rclb push push xchg fcoms pop aad dec pop fsts sahf sbb pop adc push xchg adc (bad) xchg adc push xchg sbb adc rclb dec pop sbb xchg fmuls xchg adc adc xchg pop sbb pop xchg lcall push xchg nop pop fstps sbb nop sahf pop mov sahf push xchg adc rcrb push xchg pop push lcall nop mov fnop push push rclb pop mov sahf push xchg aad push nop push xchg pop mov pushf fcoms push fnop push push sahf push xchg rorl xchg aad aad fistpl push push pop rclb mov xchg rcrl sbb or sbb aad into pop cwtl pop rclb adc xchg sbb ficom xchg dec pushf rclb pop rclb dec pop sbb xchg fmuls xchg cwtl mov popf pop adc dec adc push pop sbb adc pop fistl xchg pop push adc cwtl fistpl xchg nop push push pushf sbb sahf or xchg aad cwtl mov popf pop adc dec adc sahf sbb push sbb xchg fcoms pop aam pop push pop int3 aam fmuls xchg cwtl mov popf pop adc sub inc addr16 dec inc inc dec aad mov mov or lea rclb cltd xchg and lods xor xor cmp xor inc jno sbb mov pushf sarl sbb sub sub pushf mov sub lods sub sub inc dec inc push js fs dec jae push mov inc inc imul push insb bound push pop pop push outsl push ja mov data16 repnz mov aam mov les enter mov and and push (bad) leave cltd sbb fwait push and inc dec jae mov es pop dec (bad) inc imul mov lods xchg mov push les test sbb leave inc add pop leave sbb xchg adc cmp dec mov imul cmp lods dec (bad) lahf out inc push pop push mov and mov cld dec es cmp xchg xor les sbb fsubs xchg push sbb lods sub js pop repnz mov cltd sbb xchg inc or mov pusha dec sub cmp and sub inc push xor mov stos jle data16 xor xor (bad) icebp sbb cld dec sub sub sub cmp lea enter mov cmp rcl (bad) into xchg sub mov js lcall xchg lret dec sbb dec jb movsl mov xor adc daa sbb (bad) fsubl leave nop xchg pushf xor and xor adc sub lret outsl dec scas and into mov sub icebp sbb clc mov rcr fs movsb (bad) (bad) out and or and pop dec dec loop jp and clc xchg xchg jg movsb sahf orl push jg inc insb inc push fs and loop xor ret in addr16 inc cld dec inc jg les popa loop xor mov (bad) arpl mov jo icebp sbb inc mov and popf ds lods cmp xor es jg and stos mov xchg xchg and jae mov or xor adc loop,pn xor sbb mov dec fsubr (bad) into mov out jo insl push inc adc adc dec icebp sub xchg cmp dec mov ret push cmp les xchg and sbbl (bad) cmp gs enter daa cmp (bad) sub cmp es dec dec aas adc push nop fcos xchg push sbb pop mov xlat clc xchg pop jno mov loope adc in dec dec fcoms adc (bad) (bad) call xchg orb loope les bound clc xchg xchg inc jb and pop clc xchg popf add mov cld dec cmpsb jno cmp sub dec dec fcomip sub (bad) (bad) (bad) and in mov push pop dec sub mov arpl inc gs sbb sub inc adc cmc mov lret push test dec es pushf fisub fist dec daa mov dec test sub fwait add cmp or lret lahf adc dec and jg sub xor call mov and (bad) clc mov xor push outsb les push and push mov xlat clc cltd or and jo sbb dec push clc cltd sbb jbe arpl adc adc cmp mov fisub inc ja lods lods pushf mov xor les xchg lea imul (bad) mov mov in popa imul imul inc lea sub fs pop jmp test pop aad add in imul mov sub add in imul test mov fldl adc pop cmp fs pop and mov lods or lea sub test mov fstl or popa or dec leave pop aad mov aad sbb roll adc aad imul shll mov aad test popa add adc or inc pop cmp xchg pop mov imul mov and add adc in gs dec mov pop aad dec pop aad xchg sbb mov imul add lea mov add leave mov push mov (bad) mov lods lds lea add or pop rcrl mov lods aad mov popa add mov mov sbb mov int in popa dec aad sbb sub lea dec (bad) leave fldl imul rcrl sbb xchg pop pop popa add int mov mov mov imul pop aad sbb pop mov mov pop rcrl or xchg sbb test pop aad pop aad mov sub gs dec rorl sub pop xchg adc push (bad) mov inc or mov mov rcrl pop lds imul or push leave pop rcrl int pop pop sbb adc mov gs dec mov leave pop aad popa mov or push popa pop mov mov loopne imul add imul aad leave pop aad fisttpll mov push popa sub dec pop aad mov (bad) mov pop lea dec pop aad xchg sbb mov imul in popa dec aad sbb sub lea dec (bad) popf sub popa dec sbb pop pop jmp fs loope add mov lds sub push leave pop in mov test gs dec lds add in xchg popa or fs cmp xchg pop aam push leave mov inc inc adc xchg popa or dec leave pop rorl jmp lea gs lea dec adc lea jmp in or lea mov adc add int aad and imul mov enter sbb or in popa or inc int mov popa dec mov sbb adc xchg popa or dec pop (bad) int rorl add adc or dec pop aad lea add adc adc dec in int xor lods add lea cmp xchg pop or add sbb push adc aad jge mov sub cltd test xor and lods sub aaa sub mov stos cmp cltd sub xor aad push xor aad inc rol mov add test lds nop xchg or mov es int rclb rcl dec aam add test sub inc or push insl inc jne lret mov fisub push out adc enter mov enter mov pushf in (bad) fsubl and jno cmp dec push push xor push pushf push nop push adc xchg fcomp push fwait adc push xchg push push dec lcall imul bound insb in inc push inc and fcmove pop xor cltd and es and xor rorl popf sub mov mov nop (bad) mov test and sub cld mov popa adc addr16 call and fs loop push les push adc adc dec push inc gs arpl inc les pop aam or stos adc sub sub fwait in xor adc dec inc add mov ss xor dec dec cmp and call dec movb arpl pop or push cmpsb adc test and and sbb test or mov cmp ret xchg sbb mov sbb sbb dec bound les and or xlat (bad) and mov mov and mov cmp call bound aas decl inc push inc imul repnz imul (bad) adc cmp cs sub mov enter fisttpll test js dec xor push insb inc push outsb adc mov cmpsl je mov xchg mov adc pushf dec lret sbb insb adc (bad) cld dec enter and stos ror clc mov mov movsb out (bad) and sub leave dec jmp aas icebp sub (bad) les push insb (bad) and subl leave dec dec test iret and jp adc xor xchg and mov mov push arpl push movlps loop dec adc mov (bad) push inc mov mov push and js xchg cmp sub pop and inc daa sbb (bad) clc xchg lcall xor bound adc sub lea mov fisub or or aas adc xchg and (bad) and js push mov xchg nop mov mov adc jg test test push and test adc movsl push gs scas inc xchg stc sbb rclb fwait sar xor and aas mov adc push cmp sub inc and in and xor aaa les les mov decl test mov cmp stc or push xchg inc mov lcall cmp clc xchg mov adc aaa enter les pop mov daa repnz jmp bound cmpl les daa orl js lcall xchg xchg cmp gs xor enter lahf les (bad) push test out das jmp bound dec daa clc mov and loop inc in dec ja loop inc (bad) loopne inc jb decl rclb loop je and xchg jg push push call mov cltd sbb pop or loopne fcoml lods (bad) les and jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call inc xor inc addr16 push addr16 cmp inc inc inc mov mov sub ss cmp mov movsb mov imul jmp test imul sub or dec cmp or lret repnz mov (bad) (bad) (bad) (bad) (bad) jmp sub or je aas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std and leave dec mov (bad) in sub push dec push lods inc push or or test inc push sub dec adc mov xor push sbb dec push lds pop mov gs pop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc (bad) (bad) jge mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in mov sub jmp int3 sub mov dec push mov cs imul dec mov (bad) dec xchg lods lods sti and sub sbb pop and stos (bad) bound mov xchg stos bound mov rol mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push test daa jne je and jne xchg add aam adc xor push xchg xchg mov outsb inc notb dec lds sbb shlb inc dec inc dec inc push jno addr16 (bad) and jle inc mov (bad) clc xchg or popf sbb lds test ljmp push aaa mov and stos mov mov pop pop sbb jg jno lret push sub and pop cmp cwtl pushf mov outsb pop pop pop jb loop inc (bad) (bad) (bad) (bad) (bad) (bad) pushl adc repnz inc inc (bad) (bad) (bad) (bad) (bad) jmp push mov or nop push sbb mov fs loopne (bad) xchg test into xchg call cmp stc adc xorl mov mov mov inc mov dec sub sub and sub sub xchg test adc in inc jp adc adc sub dec roll adc mov push loop push mov and es and pushf mov xchg inc mov and pop mov loop xor mov leave adc movlps mov dec imul icebp and les pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld dec sub (bad) cld dec mov (bad) decl pop icebp and call push jmp dec push loop inc (bad) cld dec dec jg sub icebp and clc xchg adc call cmp adc and int3 icebp sub and inc xchg call sarl adc (bad) jmp inc inc addr16 and lret xchg sarb stos rorb test (bad) mov mov inc scas adcl xor mov mov clc popf roll and or lea and push adc movsb push and dec les bound loop jae test mov and incb push mov xor movsb outsb inc and and (bad) dec inc (bad) stc nop mov mov dec in xor es decl xor mov jmp push inc (bad) (bad) (bad) (bad) call xor adc push adc push sbb les call ret mov ja push sahf and and inc enter popa adc (bad) (bad) and and sub push mov sub call cwtl xor test gs push aaa je xor cmpsl mov dec xchg popf inc jb pushf test mov test enter ret ljmp call jo fcmovb out test inc gs inc xor loop dec les mov sub and outsl dec inc inc and dec push rcrl repnz movsl and sub pop frstor inc sbb test dec lods add in jno addr16 (bad) out ljmp sub jno movsb les xor int3 clc xchg push or movb test xchg mov or (bad) adc fs dec push addr16 dec ja xor xor movsb je add (bad) rcrb cs bound loop xor pop ja xor jns ja pop les mov dec push insb bound pop adc mov cmp lcall movsl and xchg pushf and mov mov mov cmpsb movsl and mov test sub sub mov and mov sub and mov mov mov mov and movsl sub lcall xchg xchg xchg mov push add inc and add out call or cs inc or sub dec lods call stos test inc in sub and cmpsb sbb cmp and test mov and cmp cmpsb and mov cmp mov mov mov and movsb xchg mov sub dec adc inc inc sbb test add leave or ljmp inc addr16 inc adc dec inc ja dec inc das xor push imul inc and xchg imul adc enter out mov les (bad) xchg fidivl into mov xchg rol (bad) (bad) mov xchg xchg jo hlt mov (bad) mov repnz and xor call inc dec push or mov mov out ja jno inc adc push push ret sub mov and movsl adc jno sub insb pushf ror and jno and adc xor shrl cmpsl dec stos into movsb fs add xchg add mov nop push pop push fcmovne adc adc pop adc pop int3 xchg xchg xchg push pop or imul inc ja dec xor and mov dec inc inc push xor inc cmp dec jno push inc outsl push push insl xor push xchg pop fwait sbb ss dec insl inc inc push data16 dec ss xor js push xor jns mov fwait rorb out inc and push and je inc test gs xchg movl adc push and movsb cmpsl sbb or dec jmp cld dec mov inc dec push push jb adc mov add imul adc and cltd xchg dec and dec pop leave add popf test and xor sbb xor adc inc and sub mov mov add xchg xchg test and pop test es push inc dec xor dec dec inc xor arpl xor mov sub and mov pop adc sub adc jns adc xor xor pushw push pusha nop lcall faddl xchg hlt repnz ljmp je arpl push or push push int xchg rcll adc enter push push inc push and nop pop adc push adc int dec xor push out bound inc push xchg pop dec jmp into bound movsb cmp lods cmp test pop gs pop push and xchg xor adc and movb dec test fimull xchg leave xchg xchg pop push push xchg mov push mov int3 push jno cltd adc or sub stos mov incb inc repz sbb sbb nop ret xor xchg jb cmp mov imul jae nop (bad) cld dec es je inc pop xor mov xchg push add pushf inc xor or rcrl inc adc sub es mov sub pusha rolb push inc inc jns insl inc push inc xor inc push inc inc dec push pop popa addr16 dec inc inc inc inc xor outsl das das cmp push jb inc inc push outsl pop push imul push dec inc dec inc inc inc push dec xor xor dec jne addr16 inc jp push inc xor inc inc inc jne inc addr16 dec inc xor inc js push inc xor inc inc xor inc push push bound inc pop push arpl pop dec push pop inc inc jb inc push inc addr16 inc push push je xor dec pop dec fs outsl push dec inc imul push outsw push das ja das das sub jns ja push addr16 jp inc ss push inc push inc inc dec xor push inc das pop jbe push jns cmp inc inc insl inc inc push ja inc dec jo inc push imul dec addr16 dec push ja arpl pop inc xor inc dec outsl xor jbe dec das das cmp ja push popa dec inc inc dec xor dec inc cmp ja jbe dec outsl inc dec inc addr16 popa dec jp inc inc xor dec dec addr16 dec inc push arpl inc fs inc inc push popa dec push inc inc ja push inc xor inc inc inc jne push push cmp inc jae fs inc pop push push inc dec dec ja dec inc inc jbe das addr16 bound inc ja push dec pop je inc ja gs inc dec push inc cmp outsb inc inc arpl push dec ja js dec jno addr16 pop sub inc inc inc dec push inc inc dec push inc inc inc inc sub inc push jns inc inc outsl push push bound push inc inc js push inc inc push bound bound cmp js push inc popa outsl push push arpl dec insl addr16 push push jno push push push imul xor inc imul pop inc ja inc sub pop push arpl insl inc dec push xor inc sub data16 sub inc jbe push inc inc dec push push inc push jae das js inc inc inc ja ja je jo push bound jp imul pop jbe inc imul inc jae inc imul js insl inc inc jae das xor push popa ja imul inc push inc inc push inc dec inc dec inc push dec jae xor ja jno xor dec inc push addr16 dec xor ja outsb xor inc dec cmp push inc das push push inc inc xor dec xor inc inc cmp push inc inc popa addr16 addr16 inc inc arpl ja insl xor inc fs arpl jb push inc inc dec arpl dec popa inc inc dec inc sub jo inc jp inc push push xor inc inc jae dec insl imul ss dec cmp jp inc cmp xor dec inc inc addr16 jo addr16 pop imul push inc push pop jne inc inc pop push addr16 inc outsb popa addr16 jno inc push inc inc inc imul xor inc inc inc push inc inc inc xor dec fs dec insl push inc inc dec inc popa ja inc outsl inc inc inc imul outsl inc inc inc xor push imul jae inc jb inc inc dec arpl popa cmp inc fs inc inc dec arpl inc arpl arpl xor js dec addr16 inc js push inc jns jb inc push inc inc jae inc inc je arpl jp push dec xor imul push inc inc outsb inc arpl dec insl jne inc imul dec push js js inc outsb inc inc ss push imul xor outsl ss push sub outsl dec dec dec xor push push xor push push push push gs push xor dec xor addr16 inc jp push inc xor push inc pop inc bound push bound push bound inc push push inc push jno addr16 inc dec je aaa inc inc dec inc xor xor ja push dec dec inc inc inc inc inc inc addr16 addr16 push jp inc inc push push inc inc inc outsl inc push dec push inc dec push jns cmp inc inc addr16 inc push je inc inc arpl addr16 push inc dec dec dec push push push popa dec dec push xor push pop push push addr16 pop push cmp jne inc jp dec jno push pop cmp xor push push dec dec insl outsl inc inc insl imul inc inc jo xor xor arpl ja jno outsl arpl xor inc inc dec inc popa addr16 inc dec xor inc push outsl dec cmp inc dec xor inc push das inc push push pop inc inc cmp jno inc insl push jns push push ja dec ss push popa imul dec jae inc insb inc dec jb push jno addr16 xor push jno arpl dec imul dec js inc dec pop inc inc pop xor inc dec inc dec pop das inc dec push insl cmp push jne inc arpl inc inc ss dec inc pop dec xor gs inc aaa dec push inc xor inc inc cmp js jbe push dec pop inc push inc inc js jns ss inc jns inc dec inc inc jbe inc inc addr16 js inc jbe push addr16 jne xor das inc inc inc inc dec xor inc jae arpl imul addr16 jp push push inc push dec dec inc inc dec addr16 inc push push inc ja sub push arpl push push jo pop pop ja inc sub inc inc inc sub inc pop pop push fs inc ja xor push inc ja inc push push inc inc inc dec inc fs dec jb outsl jne inc inc push inc push push xor addr16 dec dec js cmp jns ja inc pop inc inc das jb addr16 inc inc xor gs inc inc inc inc push push das js inc dec xor dec jno inc dec push inc inc inc imul popa dec ja jns inc cmp pop inc jo inc pop inc inc push inc cmp xor pop push outsb popa inc dec xor pop outsl xor jbe dec inc inc inc pop js push inc jae push pop ja push inc push inc inc ja inc dec inc inc imul push inc addr16 inc push push inc xor jae inc pop je push xor push inc jno cmp inc dec je inc inc dec inc push ja dec xor inc dec inc imul inc fs push inc push inc jb push inc insl dec cmp push pop jbe addr16 inc je inc addr16 push jno inc dec inc push inc inc inc imul cmp inc inc xor dec push inc jae inc xor addr16 dec inc inc inc ss ja inc push ss inc xor je inc jbe inc inc imul pop ja inc inc inc outsl dec push inc inc push arpl ja inc inc inc push bound addr16 das ja push inc dec je inc inc inc push inc ja dec inc jns inc inc inc jb inc dec jo dec inc dec push push inc popa push inc outsb cmp inc fs dec dec push push push push inc inc push inc inc aaa cmp das sub imul xor dec inc push pop push push gs das push addr16 inc push push jns js inc jbe cmp inc push inc imul inc inc pop je sub dec inc push addr16 push push dec xor inc dec imul inc inc inc push inc inc inc inc outsb dec push inc inc arpl aaa das js push dec push inc dec popa inc ja cmp inc dec pop push inc outsb addr16 inc fs push fs inc jae xor inc das xor pop dec inc inc jo inc inc outsl inc push ja jno inc arpl js inc dec insl push insb inc xor dec xor insb inc inc arpl jno js jno push push inc push ja popa dec addr16 dec jo push dec imul cmp dec inc dec push dec ja push push inc dec inc outsl insl inc push push jno push dec xor inc inc xor dec inc inc xor push push dec sub xor pop push fs inc push sub push addr16 inc dec inc inc push inc ss dec dec dec jae dec xor dec push inc inc dec dec push jae inc pop inc imul dec xor inc js xor pop inc dec dec push inc push inc push outsl dec push inc pop inc cmp push cmp dec sub gs push push dec dec inc push push inc inc pop addr16 inc jb inc fs pop inc inc popa dec push push push gs inc push dec inc inc xor dec dec inc push ja inc pop dec xor inc inc jno dec dec inc outsl xor inc dec cmp dec arpl dec popa sub push das inc inc push dec dec js inc inc xor push dec bound inc dec dec dec push cmp inc push dec inc dec xor push inc push dec inc dec cmp outsl addr16 inc jae inc push push ja inc inc dec dec push addr16 inc addr16 pop js pop ja inc arpl data16 inc arpl imul dec inc inc pop jno das cmp pop inc inc dec xor inc popa insl js pop inc dec dec push cmp inc inc push imul xor push inc inc xor inc xor imul ja inc dec and stos mov mov movsb mov mov mov xchg xchg pushf test movsl sub lods sub cmpsl cltd adc aad rorl imul sbb rcll and leave add int3 mov push mov sub inc inc pop push arpl dec push pop inc inc jb inc push inc addr16 inc push push je xor dec pop dec fs outsl push dec inc imul push outsw push das ja pop sub jns ja push addr16 jp inc ss push inc push inc dec xor push inc das pop jbe push jns cmp inc inc insl pop push ja inc dec jo inc push imul dec addr16 dec push ja arpl pop inc xor dec outsl xor jbe dec dec cmp ja push popa dec xor xchg xor push cmp jp push push or xchg or mov sub inc fs inc inc push adc mov mov test mov xchg test (bad) mov movsb mov dec sub push xor stos push mov mov adc pop push mov mov pop push push pop dec mov aam inc addr16 and mov or int3 nop fcmove into fsubl push pop pop pop int cwtl fs test push les and mov adc movsl xchg mov test mov int dec call jmp in or insb dec outsb out dec or or imul sub sub push mov push test pop lcall mov sub movsl mov sbb movsb mov mov sbb or imul inc icebp and and and mov (bad) (bad) (bad) mov test inc adc mov lea test adc inc roll mov sub cmp inc fcomp fnstsw jmp call (bad) rclb push inc inc pop push addr16 inc outsb adc mov loop adc (bad) bound aad cwtl pop (bad) fimul stos jp mov mov mov and adc aaa add adc fwait xor or outsl sbb leave cmp daa inc aam pop cmpsl push adc adc jbe and and aaa dec xchg (bad) test or movsl xor push (bad) mov xchg pushf pusha xchg lcall es jbe es sbb adc cmp mov les sub lds out jmp call mov jmp inc ljmp inc outsl inc push dec push inc dec les jb sbb dec cmp jne test xor gs pop dec dec add adc or int3 push xchg adc adc popf rcll pop rcll pop pop pop les xor divb ja cmpsl adc test fs inc dec xor mov leave jp or test and dec fisubrl and insb dec or nop fwait or push loop and popf pop les sub cmp and test pop xchg daa push push and mov movsb cmp test mov add or dec outsb les inc js mov fs push addl movsl cwtl mov mov repnz call push arpl mov cltd movsb adc sub daa jne sub outsl enter lea jae or sahf push adc dec fcompl dec dec push pop rcr pop adc push push mov mov test (bad) xor dec mov repnz test and xor rclb sbb sbb pop lcall sub call aam inc dec xor jb push cmp sarl roll adc cmp mov cmp sub and and cmp mov and (bad) sub cmp xor push icebp xor mov bound pop rcll dec insb cwtl out rclb out mov iret dec inc imul (bad) ficom or stc adc xchg mov xor and and adc jecxz sbb rcll adc push cmp lret inc mov cmp fwait cmp adc pop pop add in dec push inc imul bound adc pop and pop int jmp push lcall aaa dec pop push dec push inc dec popa inc adc leave xchg push push adc loop xor mov int3 inc mov daa add mov xor fmuls and (bad) ljmp fcoms xchg loopne mov mov xchg test cwtl xchg push mov (bad) mov xchg and xor mov sub mov mov cmp sub push sub xchg sub mov dec dec fbld lret data16 loope mov inc push and inc pop cmp dec sub jb inc fs pop dec popa dec push push push gs inc adc adc sub lret pop dec xor cmp and mov mov cmp leave push sbb xchg and dec xor cmp cmp outsl xor fwait and xchg test pop xchg lea sbb and push (bad) cmpsb je push xlat test add mov inc mov dec fs xchg mov mov cmp fwait push stos and mov stos (bad) sub and mov dec cmp cmpl cmp xchg jp or jns or push lret sub orl cmp jp or pop or xor or jns sub adc and or jnp ret dec sub adc cmp mov and mov lret or sub lcall mov dec and xor or mov sub or or sub stos or bound xchg mov push jnp stos dec mov pop xchg and adc sbb or sub lcall adc and sbb inc xchg mov xor mov sub ret or cmp (bad) sub mov mov sbb and inc mov adc lret stos or or mov sbb or or jnp mov or lret mov add ret ret jp and adc mov cmp fwait mov lret xor lcall bound (bad) dec or inc stos lcall and pop xchg mov dec lret arpl lret mov and xor sbb mov test cmp sub or jp cmp and mov mov mov cmp or cmp xor pop jns ret sub or or stos jp mov pop (bad) dec dec mov cmp jno or and mov jp mov push sbb adc ret pop or mov and sbb stos xor or stos xchg inc and mov mov pop mov push mov sub adc shll sub imul xorl cmp and mov xor or mov mov or lret pop jp xor fwait dec pop cltd orl dec sub rorb pop ret cmp bound or or or pop sarl mov push pop cmp push mov mov arpl xor mov roll mov ret (bad) jno mov or adc cmp sub push cmp or dec sarl or cmp inc lcall cmp sbb xor jnp lcall dec jp or adc arpl adc or or mov mov cmp mov jp pop or mov sbb jp imul xor lret inc mov pop push adc sub cmp or mov adc dec mov dec xor and cmp lcall or bound adc (bad) jb jno adc jno jb fwait inc mov adc adc or or jno mov xchg or or sub mov or pop sbb or sub or sub or or jnp bound adc sbb dec lret inc (bad) xor adc jb and mov dec push cmpl push dec (bad) ret jnp jp sub ret mov lret or sub mov (bad) lret mov adc or (bad) adc (bad) adc or and mov or sbb dec ret mov ret (bad) and pop pop sub rcrl dec xor jnp jno cmp pop mov pop dec pop mov sub mov add fwait push lcall or mov or inc adc cmp adc cmp or or cmp sub or lcall push or push or mov cmp sub cmp sub cmp sub push pop or sub or sub mov or cmp or push mov sub or xchg or sub xor or (bad) lret or (bad) adc mov or or jae or imul adc mov or or or (bad) mov or lret cmp sub cmp or or jp or sbb adc pop push mov sub or jp sbb sub or or jp adc or or arpl xchg xor lcall stos bound or test mov mov mov or ret stos mov test mov test sub mov fwait and cmp and mov test xchg mov and mov mov xor and mov mov xor aaa lods and mov movsb sub sbb mov mov and mov xor mov daa mov and test mov fsubrp out bnd mov mov mov mov int3 into (bad) mov fsubl out mov fcomps aam lock xchg outsb out mov test xchg push inc hlt push push push xchg inc push and xor mov test (bad) hlt mov xor movsb push test adc push pop adc rcll push xchg nop push adc adc add andl mov sbb or sub sub pop or dec sub or pop or call mov dec outsb jmp sub call or leave jmp or mov sub push scas push sub dec sub and daa sub pop dec dec xor imul enter cmp adc cmp mov mov lea cmp cltd adc adc add pushf loope sbb adc fldl2t sbb sub adc inc call loope mov jns stos xor push nop push xchg or into sbb into push dec popa dec push imul mov rcrl rcr loope movsl fisttpll sbb sbb call sub mov push and cmp push push inc imul xor imul pop inc sub addr16 popa adc pusha lcall mov mov dec push or in repnz mov jo movsb loop inc inc push mov cmp bound push inc adc or push sbb xor das xor test mov movsb mov mov mov lret and dec inc addr16 push push xor outsl dec imul jno inc inc push dec inc xor dec outsl inc insl cmp push das sub bound push pop addr16 dec xchg sbb mov push dec inc outsb imul imul inc dec push inc sub push aaa inc push inc xor pop sbb mov and (bad) gs push ja das ss sbb enter bound mov xchg and push lea or fs cmpsb sbb cmpsb cmpsb test mov sbb pop movsb (bad) lret mov mov (bad) push mov test and lcall mov lret and push and call test add in out mov push test mov inc xor inc push cmp xchg sbb sub mov mov jne and jbe inc push push insl adc sbb inc in repnz sub dec xchg xchg (bad) adc mov sbb loop push loop inc adc rolb and loope es sub or dec insb cmp mov cwtl pop les xchg leave popf or push mov inc xor push jno mov sub cmp sbb and mov sub sub pop fstl mov mov or push mov jmp in call outsb int3 imul sub xchg js je xor mov xor dec dec inc push das dec dec dec sub pop dec xor inc inc jno dec mov inc (bad) es (bad) dec inc adc pop adc rcll fstl test movsb int lods leave or lods or or outsl or cmpsl inc aaa pop add cmp mov adc pop sbb push xchg rcr mov xchg jnp inc mov mov xchg cmpsb sbb mov stos sbb popf sub dec mov outsb jmp lret sub es mov and sub mov cmp sbb mov mov cwtl xor lods int3 test movsl and sub cmpsl dec mov test and mov push mov sbb mov es insb out dec or es leave (bad) xor xchg fmul nop pushf (bad) (bad) movsb loopne rcr dec jne pop xor inc cmp cmp mov mov insl push xor movsl aaa mov xor mov mov xor adc adc inc inc aaa xchg lods dec or lret movsb cmpsb mull test xchg aaa xchg (bad) adc sub push adc ficompl movsb test mov pop and adc lds lods leave mov sub leave and dec loope dec imul dec xor dec dec xor rcr mov ja sbb fsts pop dec test repnz divl xchg xchg inc lea lods loope cmp inc pop adc rcr cmp sub ljmp push sub adc mov cmp hlt (bad) pop insb shr test and xchg test les push dec jmp mov sub push cmp inc (bad) (bad) adc out or ucomiss cs or sbb mov mov fldcw fsubrs adc cmp cmp xchg inc xor mov or imul ret xchg stos popa xchg dec push sbb imul addr16 inc push inc push push push jb push jno and lcall or sub sbb cmp lcall roll dec lret addl xor movsl jbe and xchg and cmpsl es movsb inc les push xor daa or popa imul push lods mov data16 adc movsl and sub xchg dec push cltd mov pop push or rcr dec pop sbb test ljmp cs into dec into lods insb cs dec dec or xchg dec mov int mov cltd xor outsb cmpsb lock mov xchg pushf movsl cmp lods cmpsb sbb and and cwtl cmp pushf cmp adc push pop adc push sbb dec or adc push sbb dec adc lret mov out mov mov stos mov movsl aaa cmp mov sbb xchg inc xorl sbb enter lret stc adc int (bad) fmull mov mov in lcall mov or xor mov sbb mov sub bound and rcll imul movsb xor sub rcrb fxch sub dec xchg data16 les gs push xor arpl js inc inc dec xor inc inc inc inc jns inc das pop jo popa pop addr16 dec push popa push dec xor addr16 popa xor inc dec pop popa insl push cmp insb jo cmp push bound inc insl xor js push inc jp dec ja ss popa xor inc xor jb pop inc insl bound push xor inc aaa dec pop inc outsl inc push inc inc push xor push insl ss addr16 xor data16 xor outsb inc dec js insl jbe sub inc gs dec push das das dec push js dec inc inc dec xor inc push addr16 inc imul inc inc inc xor inc jno je inc dec jne xor inc pop jns push push push push ja push dec dec inc push inc inc cmp jo inc dec sub inc addr16 dec aaa addr16 inc push inc pop dec popa outsl inc cmp inc inc arpl insb pop jns xor push jae jae cmp je inc inc dec inc xor dec inc addr16 pop imul inc dec gs das inc dec push bound inc cmp gs imul xor bound inc push push cmp inc inc inc cmp js data16 cmp cmp bound jne push dec dec inc insb fs push insl bound xor inc dec inc inc inc pop inc inc dec inc dec inc addr16 inc dec addr16 jns inc dec inc inc inc inc dec inc inc pop dec ja inc dec push inc inc push inc addr16 inc dec addr16 inc inc inc inc inc inc push push addr16 push inc inc inc push insb push addr16 inc outsl ss inc inc push inc inc push inc dec inc inc push push inc jae inc inc inc inc inc dec outsl inc dec inc push addr16 inc push inc inc inc push push dec inc push jno inc inc push xor push aaa inc inc push inc push xor inc inc jae inc push push push addr16 ja outsl ja inc dec outsl inc inc inc outsl inc inc inc addr16 inc dec inc inc dec push inc inc inc dec inc inc inc inc dec inc inc dec outsl popa inc inc push jae inc push arpl push inc inc push jno inc inc inc jo inc inc push inc inc fs inc popa insb xor inc inc addr16 inc dec xor inc inc push xor inc xor inc inc push dec inc inc push popa push push inc inc dec inc inc inc inc inc inc push inc inc outsb inc push inc inc dec ja inc dec inc inc inc inc ja inc dec push xor push inc inc inc ja inc inc push jno push inc inc das inc inc push ss inc xor inc jp push inc inc dec inc inc inc dec push inc inc dec addr16 inc dec jo inc inc push inc inc inc push xor push imul inc inc popa addr16 inc xor inc inc dec jns inc dec push arpl addr16 inc inc push jae inc push cmp push inc dec xor addr16 inc xor inc inc inc push inc inc inc inc push bound xor fs xor inc inc ja inc pop pop push xor xor push inc push imul dec dec inc inc push push inc inc pop dec inc inc push pop jbe dec push je push inc inc inc inc fs push imul dec insl push jae inc ja push xor dec push xor inc inc dec jns inc xor addr16 inc arpl insb pop push js pop outsb dec push inc inc push inc inc inc push push arpl inc pop xor pop dec dec insb arpl dec inc inc inc inc cmp js pop push push inc inc inc inc inc popa inc arpl push jae inc inc jo outsb insb xor push jbe ja jo inc push inc popa inc inc jns inc inc push inc inc dec jae xor push inc inc push pop push inc insb inc pop inc pop arpl xor pop jo ret and adc dec sahf sbb nop ror push adc iret sub jmp or sub sub mov push imul test adc movl es push shll pop test inc mov fs inc adc xor (bad) and test inc mov adc adc scas fs stos fisubrl enter data16 xor outsb inc dec js insl jbe sub inc gs dec push das das dec push js dec inc inc dec xor inc push addr16 inc imul inc inc inc xor inc jno je inc dec jne xor sub mov sub sub mov and push push push rorl fistl enter insl test imul sub adc xor xchg ret push mov adc xor xor test inc mov and arpl mov cmpsb xchg rcrl rcl cwtl mov dec sbb or push fcmovu xchg int adc push or call or mov xchg jbe test adc adc jno sbb push xor inc dec inc mov test repnz push and jae push inc xchg or (bad) and push dec mov and adc cmp cmp and nop xchg inc cmpsb xchg mov lcall push les pop pop xchg sbb call xor and pop rorb (bad) out loop and mov enter push push xchg and adc mov sub bound push push adc es shll mov cmp pusha lcall mov cmp sub shrb mov (bad) cwtl mov pushf inc dec and cld mov or push inc adc movsb stos call sbb xchg adc sbb rorl mov icebp and rorl dec sub call fs xor and mov push movsb mov rol nop mov inc push inc outsl push and adc (bad) mov inc mov rorb (bad) bound in inc les sub mov push xchg pop sbb pop xchg lcall xchg sbb rcrl imul pushf and jmp inc inc test inc adc add movsl gs gs and dec dec push xor lds xchg fmull xchg pushf cmp dec and dec bound sub mov lods cltd and sbb dec dec fstp xor push inc pop inc mov pop xchg pop fstps push or dec ljmp lcall adc call int3 dec or push insb arpl push stos mov ret movsl add dec sbb xchg mov test mov inc and push adc mov (bad) and and les push insl insb jne push mov inc push cmp stos mov ret inc jns inc outsb ja outsl imul cmpl dec stos or dec dec mov xchg sub lds xor xchg xchg mov rcll mov (bad) test jb cltd stos mov mov sub adc aad sbb test test rolb xchg and sub les fwait popf rorl lcall and push or int mov dec aam adc mov inc ret outsl xchg cmp add xchg lcall dec repz test and and xchg inc xchg push or pop imul out lcall icebp and mov dec lods bound adc lea xor (bad) arpl mov xchg push push (bad) call dec inc push inc gs inc dec mov xor mov loop je push xchg cmp xchg dec fmul and lods sbb push rcrl ss xor fbld push aam mov xchg mov (bad) out lock ret cli sub int dec adc pop lock cwtl jo in xchg inc shll sbb call dec dec and xchg adc int dec test xchg pop enter test aad xchg movsb in nop dec adc adc out into pushf (bad) (bad) hlt gs xor push inc aam daa sub xor adc fmuls xchg pop fs imul dec inc xchg cltd int3 adc mov adc (bad) arpl bound xchg and sarl pushf dec mov and mov sub xchg inc mov arpl xor insb dec push adc adc xchg dec enter mov rcrl jno mov popa lcall mov jl lods int3 mov ss or xchg test xchg adc daa push mov jp or sub test xor push pop int fcmovnbe dec or mov sub cmp mov test gs push test sbb mov push xchg dec iret pop xchg lea mov call (bad) jp sub ret (bad) sub aad mov adc in push cwtl (bad) pop cwtl mov xor dec jne bound aaa sbb movsb mov mov lcall in fcomp hlt insb loopne shll stos inc rorl inc jnp push pop arpl daa notw in call outsb insb aaa dec jns ja inc sub lcall mov or int int dec fsubrl (bad) daa addl mov adc jno sbb push push dec dec scas dec out dec in mov (bad) pop jne lret sarl pop rcll or inc mov inc lret dec dec adc fnop repnz in repnz call in jns sbb and mov dec insb mov (bad) icebp cmp xor pop dec jp cltd sbb or fcoml into mov test lds leave and dec xchg sub mov pushf pop sahf xchg mov fwait mov les push lret mov fwait adc inc dec int fsts fldl lret inc push mov dec lret sbb jmp xchg and cltd xor cmp fmull fxch sbb test push daa sub (bad) xor mov jbe xor data16 and leave jnp (bad) (bad) xchg inc test mov fs jno lods adc inc and and ss mov hlt adc xchg ja (bad) jae je inc xchg adc push movsl and cmc inc hlt pop push adc divb push mov pop xchg push gs xchg xor hlt adc es xchg jne add inc ja adc push jne je test jbe inc adc pop es push adc mov xor cmpsl cmpsb inc test and inc inc and mov and es xchg xchg adc mov notl mov xor movw aam ss rcll inc out mov inc adc adc xchg add test xor cmpsb push pop inc and xchg ja daa push mov adc mov xor add xchg cmc adc push xchg push mull push xor inc adc fs mov push adc adc mull bound divl push movsb adc arpl inc and mulb aam adc pop xor aaa jne xor and inc push mov inc fs je adc je test push fs xor xchg inc gs adc aaa xchg mov mov adc lds inc gs inc xlat xchg xlat cmpsb testb repz je inc and and es xchg xor jbe push adc (bad) push adc xchg (bad) mov xor push add (bad) mov jne xchg je pop xchg xchg xor inc xchg add xchg cmpsb (bad) xchg push pop add notl pop pop and je add adc inc data16 push daa jne adc je test aam movsl adc push xchg out push adc adc inc add push inc push aam in out inc xor adc push movsl jne add test adc xchg push data16 push mov addr16 and ret test push xlat push inc xchg xchg gs xor jne add (bad) xchg mov adc push adc add xor push xchg test push push and xchg adc and and adc jbe inc and and xchg and arpl pop cmpsl xchg inc test out je add mov xor push add inc adc gs loop xor adc xchg pop push es push (bad) mov out repz xchg push push daa xor push xchg aaa test xchg je mov inc cmc add out movsl push mov gs adc divb (bad) xchg add xor aam mull xlat pop test je adc fs jae mulb adc es daa and xor daa data16 xor mov xor push push push je lds cmpsb xor fs je es and xor test jbe inc daa push daa inc je movsl push gs adc xor pop aaa inc xchg (bad) repz adc es out adc movsb inc es inc xchg jbe aaa inc je and mov mull mov mov adc movsb xchg je addr16 push push jne adc test data16 test adc xor adc test push mov mov adc cmc inc inc push push inc xchg addl push push jae aad xchg out xchg and adc xchg test ss movsb inc xchg push inc cmpsb je bound sbbb nop push fcomp rcl fcmovnbe push ficomp adc into sbb push adc adc cmpsb sub ljmp test dec insb lret sub inc adc inc xchg jne add inc ja adc push jne je test jbe inc adc pop es push popa pop pop sbb shll inc mov adc or in test add leave xchg and movsl inc or cmp fisttpll pop mov xchg lods mov or xchg mov inc add rcr popa push in loope enter int xchg (bad) imul add int roll xor int movsb sarl (bad) enterw insb mov push mov in loop push hlt call (bad) in mov test lods aam rcrb and shll sub int or xchg test (bad) (bad) test test test xor imul test test sbb push pop ficoml pop rorb fwait int pop rclb xchg cltd fsts push aam sbb loop xchg mov and dec imul xchg aad pop adc nop push lcall or pop pop xchg cltd ror adc mov call dec addr16 push ret push mov push push pop dec insb fsubr stos mov xchg jns sub stos push jb jae and shrb xchg imul lea shrb faddp stos xchg (bad) mov inc dec ss inc dec gs jo imul ja xor mov lcall pop lcall pushf pop push sbb (bad) or sub lods dec sub enter call movsb bound xor mov aaa sub pushf cmp sub xor mov sbb push rorl lea sbb mov call push ljmp es push (bad) mov out repz xchg push push daa xor push xchg aaa test xchg jno cmp sarl adc mov mov into mov insb test sbb cmp (bad) lock outsb mov into push aam pusha pushf mov (bad) movsb in mov cwtl inc dec push jbe inc inc imul inc inc popa addr16 insb push jp dec inc dec dec inc sbb cmp sbb adc push lods pop inc dec adc test out bnd push mov xchg pop pushf cltd xchg cwtl (bad) (bad) push popf xchg push adc dec fimull rcll xchg sbb adc lcall xchg sbb rcrl pop pop push aam cwtl dec xchg lcall lcall push pushf pop shll rol push xor fcmovnbe or ss es pushf rclb push xchg adc (bad) pop adc fcoms mov lods mov lds sub or movsb push movsl inc adc ss adc ret xor cmp adc pop sbb push leave int pop sub movsb hlt push adc arpl ss sub mov dec insb and push inc outsl inc sub mov enter es sub movsb push hlt movsl xchg mul push (bad) lret and mov dec leave pusha mov cltd test mov into jo fiaddl sbb sub and xchg and pop push stos inc arpl aad jmp dec sub addr16 adc mov inc adc lods dec lods leave sub mov cs inc inc inc inc sub movsb xor loop loop in push mov push jb js xchg mov xchg lret push bound insb dec outsl jns arpl pop mov sbb mov adc push push rcr rorl or or cmp xchg fsts push dec dec xor inc ss sbb mov nop sahf sahf sbb xchg fmuls rorl mov push cmp icebp sbb adc mov aaa inc xor adc mov xchg jmp xor mov stos rorl inc into push test test movsb aam mov (bad) repnz and cltd lret cmp dec les cmpsl xor xchg jne inc push dec mov das inc sub dec mov mov nop pop test daa and shll add sbb (bad) mov adc mov inc mov and gs leave xchg lods pop adc mov loop fs pushf addr16 sub xor cmp int inc (bad) movb and loop pop adc popa sbb xchg pusha les ret inc and test mov dec lea data16 repnz shrl or mov adc fnstcw sbb push or movsb jae out xlat push out jne cmp mov cmp mov fimull fmull mov sub enter xchg mov jae xchg and adc imul mov mov (bad) sahf adc sub mov data16 dec push mov int3 adc mov insl xor xor leave adc and dec sub pop nop (bad) or lods ljmp dec call dec call inc push insb outsb das pop and gs fstpl (bad) xor fisttpll test dec outsb dec sub notl (bad) aaa je xlat adc aaa and je dec adc xor pushf test lret pop dec mov and mov (bad) rorl scas int push xor les mov je ja dec les mov pusha es cmp and xchg mov push push lea pop jp shll fldl cmp xor mov cmpsb inc xor push ja and push push cmp leave mov addr16 sub cltd stos arpl jo adc cmp sub jo gs sub sbb and mov popl sub lcall popa enter rcll mov mov das add mov ror fmul mov cmp and rolb and movsb inc inc cmp and pop jl sub lea and test daa pop xchg lcall rorl imul movsb adc rclb push or push push push rcrb scas (bad) lock and mov fcoml faddl xchg aaa push jp das jbe inc sub sub push xor mov sbb rcrl mov (bad) daa and and in push aaa pop jae das push dec pop xor mov push ret and lcall in inc push xchg daa adc sbb lret int3 test mov mov xor xor dec imul mov inc push gs roll dec mov adc or ror lea cwtl daa es sub daa sub sub cltd or fistl dec xchg bound inc sbb mov push push imul dec mov in adc mov dec inc inc int3 (bad) enter inc addr16 gs inc sarb mov dec sub je mov mov lds in sbb cmpsb xchg lcall test lcall push jno cmp in dec or ja adc cmp call jae mulb mov inc imul mov ror stos pop mov mov lret xor sbb shll jp ret dec mov fwait xor xor adc jb mov and mov mov cmp ret mov pop inc lcall and xchg ret shlb or fwait mov dec mov stos xchg push mov jp mov mov sbb jb cmp or mov and sbb imul sbb jb and mov mov mov orl test inc mov fwait xor mov push mov sbbl or jnp mov cmp jnp dec xor subl sub pop cmp sub sbb add or lcall and jae lret lret cltd mov fwait mov bound mov mov lret jp mov rolb mov xchg ret and lret mov mov and ret pop mov mov imul adc and or lcall jb sbb pop rorb cmp xor mov adc xor cmpl xor adc adc leave mov sbb andl inc add ret imul mov or mov arpl lcall or jb stos mov mov (bad) and adc sub inc xchg and mov sbb mov or jb imul dec sbb lret or mov mov cmp fwait dec pop push cltd lret adc or sbb inc inc bound mov popa stos stos xor cmp bound cmp lcall jnp sbb push mov mov xchg xor stos mov and cmp jb cmp inc bound mov and adc or inc inc pop mov xchg mov mov sbb cmpl sub imul sbb pop mov dec xchg stos mov and adc bound lcall mov mov mov or mov and cmp xor jnp or jae sbb or pop and push pop mov jp push jns push mov fwait jb lcall or ret cmp and mov jnp mov lret jb mov or mov mov or dec xor lcall jnp xchg jp sbb mov cmp mov inc mov fwait cmp mov ret sbb mov arpl or ret or sub or mov lcall pop pop mov popa mov adc inc mov dec cltd leave ret jp push jns arpl cmp mov adc or and adc xor mov or fwait or mov or mov outsb call (bad) out mov cs (bad) call mov xchg insb lret dec test enter lods mov insl leave xchg mov out pop or outsl or sub out mov dec stos or call insl push push push dec or dec mov int lret cmovs sub sub stos dec stos outsb call call cmpsb ljmp push jmp sub inc (bad) mov call dec insb imul dec test or sub into call push mov add inc mov fwait xor mov push mov sbbl lods mov nop pop pop fsubrp mov xchg cmpsl sbb mov mov adc xor xor and mov mov mov sbb pushf mov mov mov sub test cwtl mov sub stos stos xor and outsb out mov or sub sub mov rcrl pop pop pop mov mov imul adc and or lcall jb sbb pop rorb cmp xor mov adc xor cmpl xor sbb faddp mov test int3 out test (bad) enter dec test or loope movsl cmp push lds ror inc sub lea sub stos scas call int3 call mov cmp mov (bad) in mov xchg jo cwtl int3 mov (bad) test mov mov mov mov sbb test mov movsl movsl cmp les cmpsb xchg xor jae mov mov popf or cmp inc outsl arpl push fcompl popf lea es arpl adc aam jb scas mov fcomps popf rcrl sbb mov mov xor mov cltd cmp mov mov sub sub lods push xor xor dec xchg xchg gs push mov sub mov dec mov jns dec stos mov or mov and cmp xor (bad) int insl enter and push xchg sbb or mov mov push mov imul mov sub leave mov lret jb (bad) (bad) les sahf lcall (bad) fcoms xor mov mov movsl mov xor cmp mov cmp pushf and mov fwait sbb mov and xchg out scas dec push lret adc inc xchg pop pop mov adc sbb jb es pushf mov inc out (bad) call ret or mov push cmp and mov out xor popa data16 scas in (bad) repnz out and mov mov sub call mov push add adc lds mov xor fs (bad) aam movsb loope add mov sub and mov stos or xchg cltd xchg or xor push push je fwait or (bad) pop mov push cmpsb je push inc in jbe xor in mov pop mov int sub pop inc adc push popf mov pop push sbb or or xchg rolb mov test pop sub mov dec dec add inc xchg dec pop sbb adc ficomp xor popa int3 scas fs xchg mov fwait aam fcmove push sbb mov adc sub (bad) xor push pop insb inc xor mov or push or fwait or mov ljmp fstpl lds les xor and rcr dec shlb ja aad push adc adc mov adc jne insb bound xor push inc jo xor mov test (bad) in insb jb pusha rolb cmp xor ret in pushw (bad) and xor in movsb out sbb adc pop pushf aad test test push sub lds rol or inc imul and dec push xchg shlb and xchg jae cmpsl xor mov push sbbl jno or dec dec xor fs adc rcrb rcrl push inc addr16 int3 mov into leave lret sub jno imul rolb mov dec adc hlt and mov push pop sbb lcall lock mov daa aaa xor sbb and dec add jae inc adc (bad) push xchg sub and sbb or roll call bound inc lret and or dec xor mov nop lea movsl xchg push aam cmp sarl jne dec push lcall or dec adc jne and daa and stos cltd adc xchg cmp fcoms aam inc inc je adc mov in aad roll sub and xor lods lea scas scas pop xchg sbb dec fcoml es test gs mov dec stos inc inc dec int3 fiaddl xchg xor xor jno inc inc and nop mov hlt data16 cmpsb aam cmp stos fwait cmp sbb scas sub out mov inc and mov dec movsb aam fbstp dec bound push or push jbe inc mov jl test in aaa insl adc mov jae fwait cmp mov (bad) and inc inc lcall push push sbb mov fidivl sub leave push pop lods (bad) out dec mov xor test bound flds fldcw xchg dec xor and (bad) push xchg dec scas cwtl ret inc ret (bad) (bad) in out loop test sub sub push xor stos rolb aaa xor adc push fs mov addr16 test int add pop imul fadds gs cmp cmp jbe aaa cmpsb gs add xor loope iret dec dec out es inc dec xor fcmovbe xchg lea out inc jp sub xchg xor sub gs mov dec mov jmp xchg test enter ret xchg leave mov mov into mov loop lret adc sbb pusha (bad) sahf push pushf into insb (bad) lcall (bad) xchg fsubl (bad) xchg imul or xchg repnz loopne xchg fcmovb enter out jo (bad) mov mov lods lret out inc ja dec inc and mov add lea inc imul (bad) scas loop les in nop pushf lea sbb outsl imul sbb push xor and sbb mov jnp pushf dec mov ja stos sub sub ret fsub mov loop movsb fsubs mov add jae mov sbb jmp and jp jae shl push and adc lcall gs arpl sbb push dec roll inc (bad) xchg dec xor jne pop adc adc push dec out xor inc xor inc pop or push push addr16 cmp ficompl pop rcl or jae bound xchg sbb shr jb pop lret adc sbb or test or shlb adc xchg fsubs jb xor stos mov adc or push and sbb pop xchg arpl xchg or test mov pop and xchg sbb dec mov sub or xchg or ret jp ret ret jnp inc dec mov push jae or pop xchg (bad) leave lret pop or ret shll (bad) inc pop sbb adc jb pop or leave jnp fwait subl sbb and xor mov inc xor rcrl or arpl and mov pop mov sbb jp adc and mov mov jp or adc (bad) mov fwait xchg cmp and xor inc xor inc mov ret ret sbb xor xchg dec xchg xchg rcrl or stos lret jb adc stos or rcrl (bad) mov lcall sub sub sbb sub inc and or pop push dec and mov mov mov ret and bound adc mov or mov pop arpl or imul mov or push rorl and mov or stos mov mov mov jb push sub push dec or mov mov jb jb ret cmp fwait mov lret lret xchg mov stos or shlb inc ror mov sub jnp pop xor test (bad) xor and adc mov mov push mov xor cmp cmp imul adc ror push jp mov adc mov or mov adc (bad) adc sarl or and popa xchg imul jp cmp or cltd add cltd (bad) dec mov push mov (bad) or xchg stos xchg xor mov and push lret mov or imul push push or stos lret or inc sub mov ret jb rorb (bad) xchg lret xor inc mov or pop sbbl lcall mov xchg or mov mov shrl mov inc pop mov xor sbb fwait xchg mov xchg or ret jnp orl xchg or cltd ret addl mov and imul lcall mov fwait arpl mov xchg xor or mov and ret push lret sarl xor dec jp bound mov lret mov dec mov or cmp imul lret mov cmp sbb mov or sbb pop and jb sub inc dec ret adc xchg xor adc adc mov adc (bad) sub jp push ret dec cmp or sub adc xor bound inc mov pop pop (bad) or leave mov imul or mov stos dec cmp or mov mov xor xchg pop jnp or sub push pop ret xor push push xchg push pop fxch fcoml popf dec adc sbb adc push xchg xchg or rcrb xchg fstps push pop xchg int3 cwtl push ficomp rorb fstl dec xchg fwait push sbb fwait xchg xchg aam push dec pop roll insb mov cmovle (bad) mov cmpsb adc je adc mov jnp fwait subl sbb and lds mov jo fs cwtl xchg cwtl fsubs mov xchg call jns inc push inc cmp daa xor sbb mov int3 push xchg push or ror call lret in sub mov int dec or addr16 test test data16 and and push push stos lret jb adc lods adc mov in pop lcallw gs inc fs inc outsl adc test push xchg leave imul (bad) mov test and hlt cmpsb arpl lcall push pop in in xor add in leave vpunpcklwd inc adc pusha vunpckhpd int adc cmp cmp sbb add lds pop sbb (bad) mov test add pop (bad) fstpl sbb or enter fwait mov lret lret xchg mov stos or shlb inc (bad) xor and cltd fldl int3 push into xchg mov (bad) fnop push outsb out (bad) call lods xchg stos int3 xchg inc insw insb outsl jns push pop pop ja jp insl dec dec dec push dec sub sub stos and xchg adc pop sbb rorl pop xchg adc pop rolb out dec dec lret pop or lods imul and xchg adc push cltd xchg push rcrl dec cs or mov cmp push sahf dec dec insb (bad) test mov ja dec inc outsb push jp xchg lret xor (bad) enter push mov daa xor sbb fnstsw adc mov push (bad) xchg jbe dec imul xor inc inc inc jae xor xor inc xor xor sbb sbb adc mov sub es stos mov arpl inc roll lea call mov mov mov outsb pop ja ss dec data16 bound xchg dec (bad) cs (bad) or int3 push test repz or push ret sbb mov cltd rcl mov sbb bound jb insb dec bound cmpsb fwait aaa and mov pop fmull xchg and and xchg adc adc jb call insb pop and xor push or push dec push out dec dec mov ja mov inc adc andl mov mov or fmuls (bad) push mov into lods or mov sub cmpsb mov lret addr16 and test pop mov sbb lcall lret push mov rcl or or into dec xchg fsts sbb test shlb push fs push sbbl lcall lods loopne cltd sub pop mov lods xchg pusha (bad) mov xchg (bad) (bad) xchg test pop inc dec dec ss push push xchg or (bad) fstl insb in (bad) (bad) out xchg lcall xor pop imul xor out xchg mov test stos sub mov xor arpl and xor nop aam rcr or mov mov mov jp stos stos stos sbb mov jae rcrl mov jo inc xchg arpl xor rorl dec test cmovbe dec push dec adc lds in lods inc push and jno ss dec cmpsb cmpsl or test out inc push push ja mov les js pop ss das jb outsl inc sbb xor (bad) pop dec or test and jnp adc test insb (bad) xchg mov into xorl push mov sub sbb xor and pushf cmpsl pop mov fwait or dec inc dec ret dec aaa movsb mov cmp aaa and mov cmpsb mov mov and push adc mov fstl xor inc sbb sub cmp mov (bad) in outsl es xor mov int or leave sbb xor inc es cmp test call and xor dec xchg lret stos push call and mov popa das inc cmp mov pop pop pop adc dec rorl into imul in mov movsb fs mov mov outsb push inc inc outsb dec xor mov dec lea cmpsl movsl push les xor jp mov mov ret pop popf pushf mov fisubl cmpsb mov inc inc arpl inc dec sub push or lea cmovp cs mov shll inc sub ficompl jo xor dec je inc xor mov (bad) rclb cmp mov out sbb mov mov dec mov dec push jb and xchg in insb imul push fwait push fwait sub mov test test andl xchg lret adc or mov dec inc push ja push push lea rcrl ror dec in stos mov sub xor cmp adc sbb pop xchg or in in out test jp jns ja outsl dec push sub mov pushf daa cwtl dec (bad) rorb push ret mov xchg adc push cltd adc rcrl (bad) fistpl fs inc inc xor xor and mov or xchg push xchg push adc inc and nop mov test test ficoml lret test fwait fwait popa lret xchg mov xchg imul mov fsubrl test add inc sbb cmp sbb push pop push sbb dec or (bad) in lcall fcmovbe adc lret (bad) cmp fwait int (bad) es ss push xchg test sub popa fs xor sbb aaa gs addr16 data16 xor dec add rcll lea mov es cwtl lods sbb sub rorl inc sub mov aad xchg dec push push mov or push lret imul jae push push push inc dec je dec mov push xchg push bound mov dec stos pusha xchg fiadd and cmp movsb mov lret ja arpl aaa mov mov ret cwtl sahf hlt jno push adc (bad) sbb lcall push push and push mov mov (bad) lcall add rcll mov (bad) push mov jae dec bound jne inc ss imul fadd ror xchg mov aaa mov mov xor call insb test inc lret jp push adc stos mov jecxz (bad) jno and xchg jnp sub pop ret cmp push push mov (bad) dec dec bound dec cmp cmp xor mov or pusha ret (bad) (bad) loop loop rcrb out test in lret shr test pop xor adc popf xchg pop push popf aad sub xchg mov jb and mov mov inc or les sbb test call arpl dec ljmp inc inc adc xchg push inc pop and adc mov stos outsb xchg lods pop pusha (bad) xchg repnz fisubrl push fsubr xchg (bad) (bad) enter xchg movsb bound pop int3 loop aam outsb pop test (bad) out (bad) bound mov outsb ljmp les int3 loopne lret lods xchg (bad) pusha xchg test data16 xchg mov (bad) fsubr mov outsb lock (bad) mov (bad) pop fs int3 out lret movb aam in fsubl fs mov mov mov xchg cmpsb pusha movsb mov mov xchg mov mov (bad) mov into out ljmp xchg call (bad) xchg cmpsb (bad) mov push mov out sahf jo cwtl ficoml pusha bound (bad) mov mov (bad) into fs hlt lret mov mov fcmovbe mov sahf xchg mov cwtl pusha (bad) mov in out into scas mov loop (bad) lcall mov ficomp lcall (bad) (bad) xchg loopne pop les mov cmpsb mov out in jo mov shlb mov int3 fcmovu enter mov call lock call jo (bad) mov fs enter xchg call in loopne lcall loop lret cwtl loop lock lock mov nop (bad) xchg into test lods movsb movsb fsub push mov xchg fcmovb fisubrl lods fmul outsb mov cwtl nop int3 out lock sahf shlb (bad) (bad) call push push scas xchg mov aam lret stos (bad) nop bound push pushf outsb (bad) nop loopne (bad) fmul (bad) lret pushf (bad) xchg pusha mov scas out movb enter insb enter (bad) mov into (bad) scas bound (bad) mov into xchg fcoms (bad) xchg aam outsb jo fdivp test insb aam jo (bad) mov (bad) mov push test outsb (bad) xchg mov xchg repnz into xchg (bad) lcall out fsubrs (bad) xchg xchg xchg cwtl lcall lret test ret out cwtl lods in rolb jb (bad) lods nop lcall jo nop rcl mov lcall cwtl aam in (bad) mov out lcall push xchg mov pop (bad) scas mov lcall lock lock (bad) sahf (bad) rol fcmovb loop repnz (bad) xchg call mov (bad) xchg mov xchg hlt push mov (bad) lcall enter (bad) cwtl xchg lock ljmp mov aam aam mov bnd call pusha nop in jo mov xchg fsubrs (bad) jb (bad) (bad) mov insb ret (bad) mov insb (bad) xchg aam out (bad) (bad) xchg data16 shrb les (bad) cwtl in outsb int3 mov push int3 mov out mov aam loopne mov xchg lock fsubrl test outsb call ror mov jb jo push enter push ljmp cwtl nop cmpsb push int3 insb jo mov loop,pn sbb fwait movsb stos pop cwtl and xchg mov and sub stos movsb mov cmpsl xor and cwtl test daa cmp mov xor mov mov cmp mov sub xor test xor and mov ss cltd and mov xor cwtl xor mov cmp sub stos xor sbb lods xor mov sub sub sbb mov cltd movsl and stos lods xor sbb mov lods daa sbb sub cmp cwtl in (bad) mov popa pop or dec adc in sarl add rol frstor popa leave lea add in pop rcl imul mov sbb cmp inc aad shrl enter pop sbb and aad imul add in lea sub (bad) mov mov sub sbb fisttpll test xor pusha int dec rorl and mov nop loope sub pop lods shr lods int loopne inc sub push jno cmp push imul dec jb je ja popa jb jo dec push jno gs jno js js gs jbe inc dec addr16 push push push outsb jo pop dec insl popa insl xor aaa pop push dec data16 js pop insl push je dec imul insl movsl sbb xor xchg pop lcall push or (bad) outsb add out xor cmpsl and and mov mov fstps push push lea push (bad) aad dec pop xchg pushf sbb pop adc rcrb adc ficom int xchg dec adc (bad) xchg adc or jmp dec sub in test in xchg push (bad) (bad) (bad) xor mov inc push push push daa xor addr16 test xchg movsl fs fs xchg xchg push ret xor mov xorl aam adc and daa mov cmp mov sbb sub xor mov movsl xor sub adc cltd movsl sbb mov daa cmp mov mov sbb and xchg mov or and (bad) data16 lds xor inc mov data16 je push andl inc pop mov aaa mov mov lods sub int mov in nop int3 mov push int3 mov out (bad) aam loopne mov lock fsubrl test outsb call lret jb jo push xor popf push adc or data16 sahf (bad) pusha and test test roll or push pop sub (bad) mov inc push mov andl (bad) rcrl rcrl push xor push push push dec xor jns js outsb inc ja xor jne inc outsl xor xor sub lret adc pop mov mov rcrb push dec sbb adc push fmuls (bad) adc adc mov cltd pop pushf lea sbb fmuls adc dec dec js inc inc das bound push ja dec inc adc adc cmpsb (bad) test fdivp xchg ljmp movsb stos fcomps inc xlat add xchg hlt ss push jb adc lods cmpsl mov xor mov sbb xchg pop sbb push push popf mov dec nop cltd popf rorb sbb sbb rcl or push push xchg push lea ficomp push cwtl push sbb mov rolb lds sub cmp sub and xor mov stos movsl mov xor sub mov mov mov test cmp or pop movsl es xor and mov sub sub sbb fldl dec imul int3 pushf (bad) mov fsubl adc test arpl push and adc movsb ss aam adc in xor addr16 aaa and and loop xchg inc push jne mov daa jne xor hlt cmpsb inc mov push adc movsb mov push xchg daa cmpsl je cmc xchg addr16 push mov ss adc jecxz aad inc addr16 adc mov push mov push es hlt adc xchg cmpsl cmpsb testl inc adc daa pop inc jne jne es arpl gs cmpsl test jbe divl xchg addr16 inc cmpsl data16 les hlt xchg cmpsl inc xchg je xchg aaa fs push in xor addr16 xor adc mov and adc addr16 je push mov cmc cmpsb gs cmc cmpsl je ja aad movsl xchg in je je add ja inc add adc push addl adc inc es movsb out es jne push inc push mov je xor xor jecxz adc xchg and and adc xchg fs (bad) out cmpsl xchg fs adc daa inc xchg xchg ja mov ss xor xor and ret test xor pop inc and fs mov and cmpsl xchg je xchg (bad) mov adc ja push (bad) ret test mov adcl push mov aaa test xchg xor xchg push pop cmpsl push fs inc push pop adc ja addr16 xchg adc push fs xchg ss jb inc xchg adc pop xchg mov adc pop fs fs mov xchg jbe xor testl push push ret pop movsl je addr16 xchg lds adc xlat test (bad) in xchg adc jecxz xchg movsb movsb xchg xchg adc (bad) mov repz add inc push xlat xchg out adc xlat xchg mov je adc inc aaa push jae je push xorl xchg xor es inc lds gs pop cmpsb xchg xorl push adc push notl and adc testb ss pop xor push cmc push push xor xchg push mov mov daa inc ja cmc inc xchg xchg xchg push xor mull xchg push inc xchg push adc test inc xor movsl cmpsb cmpsb lds inc mov push adc daa push add (bad) xor push adc cmpsb lds jae adc mov inc jb arpl movsb adc mov inc in arpl inc xor push mull xchg aad je adc pop je cmpsl fs push and adc jne xor movsb cmc xchg adc test xchg daa addl push push pop push cmpsb movsl xor inc jbe lds hlt adc mov hlt inc inc movsl pop cmpsb movsb xchg adc movsl adc push je xchg cmpsl xor xchg ja xchg and adc ss test ss cmpsb les addr16 adc test adc adc addl notb movsl push push in xor aad mov push push mov divb test inc ss inc xchg push xor jae push ss inc ret adc hlt adc in ss inc hlt adc jae mov xor xor xchg push xchg jae inc xchg xchg xor add pop je xchg aaa xchg push test and xchg fs adc inc xor addr16 xor in daa arpl xor adc mov es cmpsb push inc adc push jne gs xor add adc xchg ss es mov push xchg push xor adc xchg inc push test cmc and adc jbe fs mov inc je xchg jbe addr16 es fs xchg cmc adc xor xchg push ret and je and xlat xchg ja and jbe adc in push ss add and aaa inc es xlat divb aaa inc test push test adc test xchg inc adc test xor xor push mov xchg ja push test aad ss inc adc adc inc hlt push xor xor adc test adc gs pop push xchg data16 cmpsb in jne (bad) notb out jne adc xchg es repz data16 adc push mov es push test xchg fs push ss xchg xchg arpl adc je adc xor pop push cmpsb hlt and xchg repz (bad) roll pop pop je xchg xchg arpl add je cmpsl arpl xchg jne addr16 push and adc je repz je xchg mov in add jne push aad push push daa xchg push mov test xlat adc ss xor inc adc inc xchg xor jecxz xor xchg test notl ja fs mull test push and out daa je push xchg push and add test xor xchg (bad) and mulb adc jbe in adc inc xchg je xor test fs xchg adc gs es cmpsb adc data16 xchg inc arpl aaa xchg je mov cmpsl addl inc adc je addl movsb adc xchg ja les xchg inc ret xchg xorl xchg es push push adc mov je push and inc xlat add ss push hlt aad add data16 inc mov and ja je (bad) xor mov arpl cmpsb xchg adc ja addl hlt es xchg adc mulb out ret daa inc push push adc lds inc je test xor daa addr16 add movsl xor addr16 out and (bad) pop cmpsl je xchg push adc cmpsl add jbe cmpsl je fs repz xchg jae xchg inc push push inc gs xchg shll add push jbe xchg data16 movsb jecxz inc push adc xor jne movsl push adc mov ss xchg add jae movsl push pop inc inc xchg cmpsl xor cmpsb (bad) push les xchg cmpsl add xchg pop push cmc inc push push mov je es push ja mov inc add daa push adc adc cmpsb xor jbe xor and xor xchg adc data16 fs jne xchg adc arpl push mov mov adc jne hlt out inc xor test adc fs xchg pop add ss (bad) test jbe push adc (bad) gs ja addl add inc daa xchg jne push movsb test inc pop mov and add push inc movsl es testl (bad) and xor xchg gs (bad) push cmpsb (bad) in push adc push aad xor gs xchg xchg cmc pop and ja es push ret xchg inc jbe xchg adc xor je (bad) mov xchg mov ja test ss push aad xlat pop xor inc test inc rcll push adc inc in adc jbe xchg xchg (bad) xor addr16 aaa inc movsb push add push je push notb movsb push test ja add xlat jbe movsb movsb gs add xor movsb mov pop add xchg movsl movsl ja mov test movsb daa jbe push xchg push adc (bad) mov cmpsb cmc movsb aam push je and inc xchg mulb xchg lds inc daa je repz movsl addl jbe je xor push xchg adc inc xlat push inc and test je inc xor xchg aaa push movsl xchg inc adc adc (bad) in (bad) push adc cmpsb cmpsb movsb addl inc movsl test (bad) mov adc daa push and inc inc and inc and xchg inc jne adc and xor push ss movsl adc adc inc push pop push je add xchg out inc adc push (bad) mov mov cmc ss je es add xchg daa add arpl adc xchg inc xchg xchg in and mov adc xchg adc inc xchg (bad) push xchg inc je adc inc testb inc jae push adc add es mov addl adc cmc inc test jae push add adc data16 adc inc mov addr16 adc push loopne ret mov insl test mov into cmpsb outsb inc int inc es call int mov dec ljmp outsl es imul int3 dec dec dec call test push sub imul mov movsl data16 scas dec imul mov dec out or mov dec dec cs ljmp outsb lret dec dec or dec in insl out imul stos es call jno bound push mov mov dec pop mov push mov (bad) int3 out (bad) xchg mov (bad) mov mov mov test int3 scas rcr mov test mov xor movsl mov sbb sub mov and mov xor sub mov sub cmp movsb xor and sub sub int3 dec dec sub mov jp xor cltd mov (bad) pop dec fwait pop push cltd popf fwait pop rcrb jo mov notl inc pop inc and adc cltd xor inc or jns inc js addr16 and (bad) jp sbb bound mov jecxz push mov aaa test xchg xor push (bad) cltd cmp rcll lds xor push dec inc xor inc jns imul sub (bad) insl out int3 push in in imul adc adc (bad) hlt scas xchg insb call sbb adc xchg pushf outsb mov movsb xchg sub or mov mov and aaa xor mov inc scas add sub rcrl and push insl push inc cltd sbb push sbb cmpsl cmpsb xchg xorl push adc mov mov popa pop mov dec outsl push ja bound into pop adc adc pop aad push movsl xchg push mov sub fucom cmp inc or dec jns push jbe jne inc cwtl push xchg adc dec scas test mov fsubs mov sub or rcll lea mov xor rolb arpl movsb sub roll (bad) movsl out (bad) int jp xchg (bad) mov test mov daa mov sub push mov sub inc adcl xchg and jge dec sub inc je push jp inc xchg sahf xchg dec pop dec rclb pushf shlb xor and mov les push adc adc (bad) cmp mov imul insl pop dec xor jae sub imul ret mov enter mov or add mov ss inc sub fstp leave test in (bad) int bound push push jo dec inc push sbb int push mov nop pop enter jo and loope inc sub add adc mov leave fsub adc push rorl mov stos and sub fs leave mov push xchg jae sbb or test adc nop (bad) pop xchg push test and (bad) into xchg (bad) test mov push and test pop sbb mov and mov sbb cltd sbb inc int leave pushf int dec in call inc xchg adc adc push or sbb xchg and test xor xor push mov test (bad) aad or cltd xchg and inc and ror add in je inc lds mov mov stos mov movsl out sub sub sub xchg inc stos sbb ror lret xor mov push or fwait ret push adc mov sub into fcomp push inc push sbb pop mov sbb pop popf mov aad mov sbbl xchg push roll and dec adc sub or dec sub dec inc popa adc cwtl lea out mov sub fwait mov inc or test enter sbb mov adc push add xchg repnz adc cmpsl and or enter or dec insb leave in sub inc leave test test cmp test gs fs xor push inc nop push (bad) sahf push or aaa inc xor xchg lcall outsb inc jae dec xor je cmp inc js js inc push jb inc jne inc push pop xor mov and mov iret inc mov fstpl rcr xchg lea lcall sbb dec rcrb call push push adc push push pop lds inc jbe das jo dec dec push inc mov imul and or (bad) sbb push xchg push test cmc inc and (bad) inc inc sbb lcall add push push xor js xchg test xor gs test dec fs insb dec push adc lcall push xor xchg inc inc inc add push ss arpl or push add gs insl jbe mov dec fcoms rcrb xor sbb data16 sub push out and cltd or test xor mov sub dec mov ljmp jp adc movsl push inc movsl es testl xchg sbb enter xchg es pop mov sub jb xchg sbb and dec jp nop popf nop xchg add push ret xchg inc jbe xchg adc xor jb mov cmp xchg call or push imul (bad) cmp adc lea nop movsb adc xchg (bad) xor or shr adc imul stos or cmp (bad) jp mov mov (bad) push lret mov mov test gs imul fwait aad xchg push or movsb outsb int3 mov inc data16 or test inc daa je repz sbb cmp add mov and sbb pop lret push lret bound fcompl mov push mov jbe (bad) mov sbb insb bound call mov mov inc adcb fs push inc push pop push jae movsl cmp and push data16 ss je mov sarl leave shl inc jno xor xor enter inc call shll mov sbb pusha rcrl mov xor nop lods dec out mov sbb (bad) int3 data16 sahf outsb loop cmpsb frstor addl (bad) movsl xchg push (bad) xchg adc and xor and xchg jno movsb mov or imul xor xchg mov inc sbb push fcom pop rorb in and sbb fwait push pop nop dec pop pop rcrb nop xchg jae add retw push dec rorb arpl loope xor test ss je in adc hlt mov cmpsb push pushf xor xor sarl cmp adc call in ljmp mov push mov mov test dec and mov push les inc or ficoml loop xor sub mov inc arpl xor rol and push and int jmp call xor adc mov mov dec adc and cmp mov mov adc in lock test lock push jecxz fist cltd mov xchg sbb push push daa xchg out sbb int dec loop nop out test gs push cmpsb out fs push push and push and je jae gs xchg push (bad) push test inc cmpsb xchg arpl inc xchg push push jne and adcl adc movsl test mul push and inc adc inc test adc es ret jae and cmpsb je push test jecxz adc mull je adc test push je push daa and push xchg inc jne adc push push es inc notb fs mov aam test xchg pop xchg ss jae push es adc jbe push cmpsb repz test daa test mov xlat inc (bad) (bad) inc push data16 adc push xor ss push inc xchg xchg cmpsb cmpsb repz test push inc ja push movl gs je movsl xchg mov adc xchg les adc add gs movsl inc add es adc repz push mov adc jae xchg and mov movsb fs push and mov xchg add push inc xchg adc jbe repz inc adc xor xchg push push hlt push jbe add test xor repnz adc adc arpl inc bound xor (bad) ja mov inc add mov mov fs adc adc test xchg aad divl hlt adc adc inc jae inc xorl jne xchg (bad) mulb push push push adc movsb and adc mov ja inc movsl adcl hlt adc xchg ja repz aaa xchg xor movsb jbe inc xor push push adc xchg data16 push lds mull ja in xchg push xchg and mov and adcl xor jae jae aaa push cmpsb xchg jbe push (bad) push aaa ss push rcll movsb xor adc xchg xor add test inc es xor inc arpl test xchg ss push xchg push and inc es push inc adc je inc out mov aaa adc mov ret xchg xor xlat xor push xchg push jbe mov add cmpsb lds push push xor pop daa xchg xchg add push xor ja xor test add test xchg hlt (bad) xchg add jne movsl adc xchg push in les xlat xchg jbe cmpsb (bad) xor inc addl push hlt adc gs push repz xor div push mov xchg jae es push xor push repnz xor push inc xchg adcl add xor data16 adc and pop daa adc addr16 inc movsl xchg jae adc xchg pop push adc pop xchg xor movsb (bad) arpl jae adc xor pop test repz adc xchg test movsl adc add adc and inc mov xchg movsl daa movsb xchg xchg pop inc mov xchg in test xchg and lds movsb push push les xchg hlt movsb xchg push in push mov adcl push ss push test xorl gs xchg push push hlt (bad) xor je adc out push and movsl addl pop push xor xor nop push int3 pop pop xchg int xchg xchg sbb into pop xchg rcrb pop sbb push fstps cltd xchg sbb mov push dec pop push (bad) dec nop xchg or push push ficoml push xchg fstpl rcll sbb push pushf xchg or test mov push dec dec dec call es mov in (bad) mov gs into push mov daa and push xchg inc jne adc push push es inc notb fs mov aam test xchg pop xchg ss jae push es adc jbe push cmpsb repz test daa test movsb push inc dec imul jb add inc sub mov in xchg or or inc ja push movl gs je movsl xchg mov adc xchg les adc push mov jb push mov sub imul outsb fs in cwtl xchg xchg mov jp inc addr16 dec sub mov mov xor test cwtl xor cmpsl fwait mov movsb sbb nop rcrl dec pop rcll or cwtl cmpsb pushf pop push lcall push je sub addr16 push arpl addr16 fs push cmp adc cltd cltd rclb pop push dec sub leave stos or push aam jae inc xorl lcall cmpsb in test hlt test fsubrp mov dec addr16 jp xor es mov mov fmuls into pop xchg push sbb int3 sub sub xchg sub jp jb and pushf test ficom (bad) xchg cltd pop or adc cs outsb stos dec or sub push aaa ss imul aam sub lea loopne lods jo loopne mov nop mov fs addr16 inc inc inc inc sub mov lods xor int sub sub movsl movsb je inc out mov aaa adc stos or stos into enter test mov push inc push push push push push inc xor cmp xchg mov int fcomp adc adc invd ljmp test movsl adc xchg push jmp fwait pop inc xchg fimull inc gs gs sub sub test cltd mov push aam pop fcmove int3 (bad) int3 lock out es add test mov lcall jo (bad) mov arpl repz sbbw lods lods cltd movsb rorl sub daa adc addr16 inc movsl xchg je mov sbb adc cwtl int3 pusha pushf outsb insb bound js dec xor push inc xor mov lcall and sbb fcmove (bad) rorl outsb scas sub dec dec dec sub in test and sub lret and jp fwait xchg dec xchg lock data16 insl js outsb ss inc push mov rcll call or push sub out inc push test imul dec and lods xor daa mov mov imul int3 loope add test imul shr test lods (bad) xchg pusha repnz outsb pop dec jae push inc inc dec js inc push push insb push cmp fldl or rol pop or dec das dec mov push (bad) imul mov pop sbb add and cwtl leave jmp (bad) lock (bad) movsb mov pushf jo jbe data16 andl leave in loope les fs aam movsb jo test dec je jp pop push outsl cltd popa xchg mov inc sbb inc mov daa pop push daa xchg jp sbb lods leave rorl xchg jb ja and push pushf int3 and outsb inc dec adc xor mov leave (bad) add sbb shlb xchg (bad) mov inc xor dec jne dec push adc pop cwtl roll mov addr16 dec xor jbe and rclb int3 dec in lea movsl lds movsl push inc stos sarb lea movsb pop (bad) push (bad) in sahf bound push ss cmp sbb stos cmp ficoml push xchg adc rorl test push inc push inc push jns push lcall popf sbb into les and push xor imul inc sub pushf xchg mov mov mov cltd xor es push aaa xor adc push stos fs add push and mov and sub adc out mov and rorl or mov push cmp xchg movsl mov mov stos xor cmp xor mov inc dec sub dec inc cmp mov mov and push sbb xchg aad adc sbb cltd rcrb call ss xchg ret mov cmpl and int test (bad) enter les mov fisubl fs and inc cltd push or ja mov xchg ret lea push adc (bad) mov dec inc push inc push xor inc inc push xor jp xor jbe js xor cmp addr16 data16 out data16 cmpsl cmpsl je and lods sub xor inc mov pusha dec into jb cltd lods mov xor pop xchg dec iret or push imul (bad) ror mov fisub into push fsubl pop out mov pop pop pop mov popf mov mull inc push jno pop jp mov imul mov xor sbb xchg shl daa inc and mov mov (bad) lret cmpsb loope cmp xchg xor xchg lea push push aaa xor xor lret inc mov sahf or jecxz inc xchg pop xchg push stos bound push pop scas inc es movsl jp pop movsl sub rcll mov mov insb mov push dec push push push nop push or sub data16 push sub stos xor xor jne fs bound dec rcrl les inc mov pop lcall xchg push pop push popf mov and lcall lock in call xor cmp daa jle inc inc outsb dec pop push mov fsubs push jbe addr16 jae and flds movsl pusha fxch mov dec xor jb push dec adc sbb sbb xchg or lods sub leave scas pop xchg rclb out test ja and cltd stos (bad) lret fs dec inc and adc and and out insb js fs dec push dec addr16 xchg pop nop loope push out in mov ljmp push jp xor imul sub mov mov mov adc int3 nop rclb adc pop xchg inc or or cs adc adc sbb les inc jae imul sbb adc adc (bad) xchg mov insb test out mov push aaa cmp bound xor inc xor scas and inc shrl or mov jae and mov sub test fstp add fnstenv xchg push adc xor es push sub mov pop aad sbb rorl mov sbb sbb pushf pop test jae pop bound inc xor mov aaa push mov sub outsb addr16 out push mov inc aaa xor test mov ret and mov sub xchg movsl xchg xor sbb xor nop pop xchg pop pop sbb push sbb fsubs xchg mov je cmp sbb sbb inc mov inc adc bound mov lea ret lret xchg int mov jo xor inc jb imul in out call in call sub mov or dec call out xchg dec int3 in sub or or sub mov lods enter mov call test out scas call lods and push sub dec (bad) push call iret dec push call dec das push sub int call into cs out int3 call mov ljmp cmpsb mov outsb sub call inc push lods lret call dec dec sub push or (bad) mov lea dec imul outsb ljmp movsl out insb leave sub outsb push call sub test or or dec dec insb out lea call (bad) out sub call sub sub sub into push int3 sub data16 dec mov or outsb call jmp dec dec sub out mov dec out or cs sysret push sub sub insb outsb sub out dec scas dec sub dec insl ljmp dec sub mov sub lea out sub dec push enter dec scas or test dec sub inc or pop sub test outsb enter jmp sub stos inc call daa or gs sub push call mov leave mov imul inc sub push sub sub cs dec outsl es sub sub insb insb enter lea mov push or into scas dec push iret pop push leave test push lods outsb cs leave lods push stos in dec out mov movb out int dec mov es mov lods inc lods dec mov sub insb int3 or push daa es insb in call ljmp mov sub or dec sub cmpsl or sub dec int3 dec out dec (bad) sub out test dec sub ljmp in mov sub int3 (bad) ljmp test mov insl or dec dec test or out sub in enter test (bad) mov or sub mov cmpsb or insb dec sub test push test dec cs outsb inc mov es das sub push lods xchg int sub test leave or or or sub or sub or in movb stos sub cs imul lret daa push enter lret cs call daa or test sub inc in dec ljmp or dec outsb imul or and or out push sub out es test addr16 push imul or jmp sub int into int dec push or lods dec push push call in call imul stos and sub insl sub lods dec (bad) or (bad) mov movaps sub pop ret mov out call in call sub mov or dec call out xchg dec int3 in sub or or sub mov lods enter mov call test out scas call lods and push sub dec (bad) push call iret dec push call dec das push sub int call into cs out int3 call ret mov mov int3 lock loop and stos stos mov and mov cmp xor cmp es xor cmp and in ljmp jns sbb dec inc fwait cmpl cmp inc inc ret rcrl cmp rclb cmp jns xchg arpl jb jae cmp push lret inc mov mov dec fwait cmp jae mov jb fwait rcrl adc lcall stos jp mov xchg xchg or (bad) mov mov jnp jb mov rol jb adc adc and cmc adc cmpsl cmpsb jbe movsb adc fs daa xor push xchg jecxz adc mov jae xchg add xor inc es xchg inc inc aam inc and xor loope pusha in push add ja dec push push pop inc push xor arpl inc inc cmp push das push dec push inc pop xor jne push insb jo leave pop adc nop mov xchg cmpsb mov mov mov mov xor insb insb enter lea mov push or into scas dec push iret pop push leave test inc popa and mov int3 lcall test sbb mov cltd daa xor leave adc bound imul sub xor inc lcall adc fcmovnbe inc (bad) loop push es and push xchg push xor adc (bad) aam les inc repz aam xor or insl xchg pop sbb xor dec push push inc xor rcr ficom fsts sbb mov adc test fisubl test les adcl and push das sub push popa stos xchg jae sbb jp push sbb and bound (bad) lock inc fldenv cwtl loope fsubrl call jno imul pop cmp lcall push pushf push shlb xchg arpl cltd enter pop in xor inc dec push jae popa dec inc jno imul adc pusha les cmpsb test cwtl cmpsl mov fs mov aaa xchg sbb fwait cmp into sub int outsb bound or lcall movsb outsl addr16 adc adc test mov and fcom adc inc in mov sub inc push jp addr16 adc nop aam fstpl push pop push adc adc (bad) arpl xor mov rcrb adc fistl fsts mov xchg lcall and push les or arpl inc dec dec inc jae push or int sub inc inc inc adc into pop adc ss inc xlat xchg adc stos mov xor and and inc adc mov leave or js inc pop cmp inc push pop adc fwait push push rcl pop add daa test mov inc daa xchg and in xchg and jo addr16 addr16 inc je das jp das addr16 das sub sub push xor addr16 jne cmp xor and rol ljmp sahf in sahf lock test mov mov mov xor sbb inc or push insl pop ss jae nop aad int popf pop mov sahf sbb push pop push lcall je add jbe add add je push push ss adc movsb adc test xchg and dec fwait aad dec jns lcall es jae and xchg push inc fs push push repz push inc add leave mov dec mov sub mov or mov ljmp out callw bound mov mov xor dec dec movb push pop outsb enter mov int3 roll inc ret popa pop pushf out dec xor popa inc les xlat add fstl sub fcompl pushf rclb push sbb or sbbl pusha ret test adc xor aam in sub dec dec inc popf push pop push dec push adc cmpsb aaa xchg jne cmpsb and and mov push or push xor adc pop cwtl ficompl or pop push int nop push lea pop movsb inc inc data16 or adc inc dec gs cltd sbb xor jae das inc nop xchg push xchg aam xchg (bad) xchg push push xchg push xchg movsb dec jno xor pop fstps adc xchg or es loope mov dec adc (bad) fmul dec push pop push ret and inc xor dec mov sub push adc imul adc mov dec dec push xor cmp pushf test lock xor mov cltd adc arpl xor aad xchg push push out adc adc ret push ret xorl notl pop add xor xor rol push mov inc push gs pop das pop xor jae addr16 outsl je dec dec jp jae dec adc or adc shlb xor and outsb dec outsl or jae mov or into push or sahf bound xor cmpsl enter mov es cmp mov or or inc mov sub cltd or adc mov (bad) push rcll outsl popa xchg lods adc pop fs xor popa aaa and push test stos mov dec lret sub sbb fcompl loop js jae mov sbb in cmp cmp fs pop pop push adc adc lret rcrb inc xchg push out xchg sbb push xor inc (bad) and push ljmp scas adc (bad) fmul dec (bad) xchg dec mov aam xchg sub xor cmp jbe xor jb inc inc xor pushf fistl arpl and or in cmpsb lods fcmovbe enter xchg cmpsl adc icebp xor or add sub lret lods sbb fnstsw pop enter in add mov (bad) int3 inc ud2 dec call xor inc mov andl adc xor jo xor dec push sub rol mov dec stos in jns xor xor adc push (bad) daa jae xchg pop je inc aad popa sbb mov sub xor jmp shrb out xor inc push popa adc sahf dec adc xchg push add xchg fs popf or jo jp arpl ja mov dec (bad) bound and pop iret adc mov in les jo adc int or sbb in adc mov and stos aaa mov mov jne inc adc adc out add push inc add mov sahf and sub shlb xchg aaa cltd cmp xor sbb xor mov xchg xchg lcall mov cmpl sbb push enter sbb nop cwtl pop int3 lock xchg repnz int fisub adc mov fiadd aaa add and test or adc pop roll bound test xchg pushf aam (bad) pushf in stos lods (bad) push xchg test (bad) cwtl pushf ljmp lret xchg mov mov xchg lcall enter (bad) cwtl test xchg test fcmove test sahf data16 int3 int3 fs xchg fsubl (bad) hlt loop sahf data16 in fs lret (bad) xchg fmul mov lret (bad) hlt fs hlt mov cwtl test mov pop outsb sahf (bad) lcall in cwtl mov (bad) lcall mov loop (bad) cwtl data16 into mov rolb xchg mov mov into mov (bad) mov xchg mov loop (bad) mov xchg push mov les push test loopne in (bad) test push loop rcr fs in mov mov test (bad) mov pusha lock out (bad) mov mov cwtl aam (bad) pushf test (bad) out (bad) xchg jo xchg pop fsubl enter pusha into mov xchg jb push loop ret xchg out (bad) into (bad) fsubs scas (bad) test push fsubr pushf out test int3 cwtl test xchg aam aam fs hlt (bad) mov lods in bound enter xchg aam (bad) mov call (bad) xchg test aam xchg (bad) mov test test fmull mov stos jo mov mov mov xchg rclb mov jo outsb push mov jb lret ret xchg callw hlt (bad) test loop push ficom xchg in repnz mov push hlt fisubr out mov in lods insb les mov shlb aam out xchg fsubrs mov loopne loop mov xchg loopne outsb fnop (bad) (bad) mov into pushf pushf loopne (bad) test push push mov jb xchg rcr stos loopne out test lret test mov test lret cwtl pushf test (bad) out test (bad) int3 loop (bad) fmulp nop pushf (bad) xchg mov test bound fiadd xchg push pop (bad) test aam ljmpw fsubrs ljmp mov cwtl pop (bad) test jo lcall into lret xchg data16 (bad) fdiv out xchg in cwtl fmuls mov repnz (bad) aam (bad) bound mov insb (bad) test xchg loopne in fs xchg in outsb ljmp xchg (bad) xchg loopne lock les out lret fiadd mov (bad) ficomp in nop in outsb rclb loopne sahf aam cmpsb push lret mov push test lods xchg (bad) (bad) fsub lret fsubp lret into mov xchg test fs (bad) pusha pushf aam (bad) in outsb pushf out out mov into mov mov (bad) shlb out mov in bound enterw insb scas (bad) pusha mov push scas fsub data16 mov (bad) mov ret xor aad or push lret aam push xchg xchg rcll lcall push nop dec rclb adc adc cltd dec rclb adc mov adc push rclb push lcall push sbb adc pop rclb out cvttps2pi (bad) dec es xor and xlat aaa cmpsl adc repz xor cmpsb push data16 cmpsb out push cmpsb push and mov xchg lcall or or inc jns jp imul bound and push data16 into mov rolb xchg mov mov into mov mov mov mov sbb mov cmp ss sbb cmp mov mov movsl and sub mov mov int3 dec push push sbb push aam aam dec push pop push sbb dec lods sub sub cmpsb dec or in lret int3 mov test adc adcl mull je jbe lds test mov xor movsb sub popf rclb fsts fstpl lcall pop nop push adc adc mov mov or mov xchg int test dec imul inc and and and add adc hlt adc adc cmc pop jae xchg test inc xchg test inc xchg xchg adc addl sub mov dec fsts pop xor jne push ja outsl dec outsb push cmp mov mov mov mov sub xor pushf cmp test test cmp sbb rcll sbb pop pushf sbb pop xchg popf rcl pop fcoms pushf adc push or lret jmp daa inc inc mov xchg addl and inc jp cmpl and inc int inc test lret cwtl pushf test (bad) out test (bad) int3 loop (bad) fmulp nop pushf (bad) xchg mov xor dec pop imul dec push dec xor xor dec and sub mov sub mov stos cmp loop inc inc es fwait daa lods xor mov cwtl fmuls pop push dec dec dec jns imul xor flds in fs xchg ja xor aaa mov sbb push push pop rcr rcrb aad lcall add jae arpl cmp dec xchg stos inc mov inc pop sub rcl test xchg flds (bad) mov dec test dec call dec dec sub es dec cmpsb cs out into out call xchg inc and adc movsb ror adc lods aad leave (bad) lds pushf (bad) insb mov add inc mov out aaa adc mov push dec ret cmp imul sbb inc cmp movsl cltd call adc fcoms lcall mov push push int3 cltd sbb data16 gs inc insb ss cmp push dec inc fs mov sbb rcrl push into cmovbe or leave mov push dec sub and cmp into aam xchg repnz lcall rorl or inc stos mov imul xor mov or inc mov cmp sub mov sub xchg pusha movsb (bad) aam ret push xchg pop int3 repnz out mov arpl jp cmp xor jp xchg (bad) insl cwtl xchg push inc aam mov jno jae cmp aaa push and fmul mov (bad) lock (bad) xchg jns fs jne popa push inc xor xor gs jbe ja adc and push test mov popa sbb call test xchg mov xchg insl xor addr16 and mov movsl sub sbb sub and pop xchg xor xchg cltd pop leave pop sub shrb sub call adc push xor xor mov sbb push fs test enter fsubrl and stos mov pop push adc xchg push rclb popf pop rclb mov lods xchg ljmp inc in gs adc test push aaa push addl adc xchg inc mov mov mov mov inc roll movsl gs (bad) (bad) repnz adc mov icebp and inc loope xchg xor mov sahf xchg mov add dec push out js inc insl push inc xor cmp sbb mov xor push and dec push inc inc leave sbb or aad jmp cwtl nop dec imul add and cmpsb xchg mov mov data16 dec sub mov out dec arpl inc and aam es push je data16 mov xchg xor repz pop daa inc xchg leave stos inc jnp mov sbb lcall push adc imul lods loopne loopne insl ja dec inc push inc gs xor gs ja or dec adc sub lods dec es out push xor push xor lcall push push dec fimul test cmp imul xor clc cltd sbb mov pop xor inc inc xor push mov fnop push or (bad) push sub movsb (bad) xor mov shrb ret sbb sub (bad) cmpsb xchg movsb and push xor or xchg and stos mov xchg rcr xchg sub insb outsb jne bound inc mov int loope enter cltd or and adc mov stos mov dec cmpsl das dec jmp add cmpsb in data16 not roll push push jno or mov lcall mov js data16 push xor xchg imul fwait and push rolb xchg cmpsb sarb es cmp push dec cmp push push insb and imul adc sbb push jb es xor cmp fldl cmpsl xor es xchg push roll cmc sub test xchg (bad) cwtl sahf xchg mov mov xor jb test xor mov jnp leave mov sbb test mov push push jns arpl aaa push and ret gs push push in and sbb xor sbb dec pushf or xchg adc push dec jns adc xchg adc repnz loop adc cwtl int3 mov repnz (bad) enter and gs sahf push pop pop adc or mov mov lcall push fwait xor scas add cltd popf gs xchg (bad) and jmp xor test fstl xor dec mov mov xchg or sub or inc jns mov dec ficomp and xor repnz cmpsl stos or fisub mov lock inc lds pop dec sub cmp test in out and js mov sbb bound dec adc sbb enter cltd adc aam (bad) xchg mov mov aaa jo sub das xor mov mov cltd and cltd xor mov rorb es push pop gs das adc cltd mov sbb or daa push scas or test movsb je pop dec xor sub push les jp push or shrl or xor cmp sbb and movsb xchg fwait cwtl mov xor mov int adc mov mov out les insl mov mov data16 jne jecxz xor mov mov or pop inc push lods sbb add xor movsl add aam rcrl aad adc fnsave adc dec lods cmp roll popa test mov and xor roll lods gs sbb add mov enter int sub inc or cmp pop add dec mov mov xor leave sub add gs nop fsubrl fs mov enter mov cmp gs and cmp aad adc fsts call adc leave (bad) mov add lods jmp sbb add fldl pop shl pusha lods xchg dec add push lods mov add aad popf mov sbb int3 (bad) adc adc test sub add or and int lds rcrl sbb adc int gs int fstl push dec test popa mov lods dec add leave sbb add aad mov imul or in and rcrl cltd inc or ror add add lods cmp lds loopne fnsave lds push lods or gs or imul mov sbb mov or cmp leave add test lods test add aad loope int3 vmovupd lods inc xchg sub mov lods leave aam push xor mov adc fnstcw inc mov adc xchg dec mov sub popf sarl adc cmp loope or in cltd sbb adc lods or inc mov or mov (bad) loope or dec mov lea fldcw shrl inc mov fnstenv add leave or loope lea adc lds cltd mov mov pop lds lods (bad) add mov int popa add loope dec lods loope dec add mov mov add in movsl (bad) enter sbb push lds dec dec sub sub xor inc cmp dec add xor aad in adc dec frstor or add jmp lea add loope xchg adc or and mov aad mov pop add aam adc aad roll or roll or and or inc pusha rcll sarl sub rcr fldcw or dec mov mov lds ror imul or sub cmp lds add jmp cmp popf or leave dec loopne push rcr adc sub push (bad) pop or or xchg nop push fcomps sbb pop xchg sbb push xchg adc dec or xchg xchg dec push push sbb push fistl dec push lret dec imul mov sub mov lods enter dec sub mov or or mov or leave or pop and xor cmp pop jns mov adcl jns mov or or (bad) orl lods (bad) cmp enter mov cmp gs and xchg mov xchg mov mov push aaa dec xor xor cmp mov lods adc and adc dec sbb dec (bad) push pop sub add adc hlt inc add (bad) push stos dec cmp pop push mov fst int3 (bad) loop movsb outsb repnz xchg jne popa inc xor xor push outsb jne inc inc inc xor inc es cmpsl cmp sbb push or popf rorl push push xchg adc push xchg (bad) sbb aam dec dec sub int3 ljmp and arpl inc cmp or sub rcrl cltd inc or data16 mov push imul push xor mov cmp cmp pushf aad rcr fcmovnbe sahf push pop adc sub lea out inc push roll adc in test and jae hlt inc pop jbe and and xchg mov ss adc push pop test xor je inc mov push mov jae xchg push mov push jne ret xchg je andl test and inc loop push ss andl aaa mov cmp cltd int3 fst pop xchg push sbb sahf sahf dec sbb adc rcl sbb nop xchg pop les push insl push xor js inc dec jae das push insb insb arpl adc mov adc dec or popa ss insl jo inc insb xor test mov and mov or lcall xchg jbe xchg es fldcw mov enter mov (bad) jo cmpsb and andl and lcall dec stos cmpsb sub dec inc or je and sub aad out add daa mov leave insb test addl test stos sub and mov aam mov in lock xor xor rcrb pop adc enter mov es push adc cmp rcll sarl fisubrl insb xchg in mov push xor xor jb callw xchg xchg mov mov xor imul sbb cmp sbb ficom int inc xchg push ljmp dec push dec popaw inc cmp sbb and rclb test es lcall or mov dec push ror mov pop dec inc jnp pop xor fwait push inc aam roll mov push cmp out call call pop push popa inc pop inc push jp push push das inc je pop inc inc dec dec xor pop push xor jbe ja inc xor adc mov xchg push push lret push or mov out cmp pop inc inc daa lods test adc xor loope xchg bound int3 faddl pop and push je and lcall bound dec outsb xor jnp and loope inc mov inc jns arpl dec push jbe sub sbb ss xchg into or xchg imul adc sub sub jmp test sub mov sbb xor lcall sub mov sub test sbb dec leave rorl inc into and daa xchg mov sbb pop adc pop roll cmpsb mov jmp movsl xor xchg cmpsl pushf xor sbb cmp (bad) mov outsb sahf xchg xchg pusha and sub xchg pop push sub inc mov ret movsb sbb test push push push inc dec dec insb inc sbb movsb test mov xchg test or dec sub xor inc mov fs and sub xchg mov (bad) (bad) outsb sahf loopne in and xchg adcb push mov je ret sub xchg mov stos xchg inc addr16 mov shll mov jb fnop enter xchg inc inc inc adc sarl out mov outsb mov fsubrl xchg push adc in mov push movsb cmpsl ja add push leave mov dec lret mov xor (bad) aad inc (bad) les jns inc cmpsb xor mov mov rclb pop rorb sahf adc push sbb xchg xchg inc cmpsb enter push or or mov xchg xchg xchg test xchg je (bad) cmc add mov int aam (bad) mov fimul adcl jo xor xchg lcall rcr adc insl dec dec es push jne inc sub xor stos pushf rorl es cmpsb call push or mov push xor addr16 addr16 sbb and sub xchg outsb repz aaa lods and les cmp mov loope or mov pop sub mov pop fstp dec sub push imul push xor fwait mov xchg mov lods xor mov mov xor cmp push adc aad mov or leave into out push sbb mov xchg ret test xchg xchg aad adc ja xor and test xor adc lods fs (bad) jo push (bad) mov pop jno inc pop insb jne jbe dec outsl jb and mov test sbb sbb push push dec dec fcomps adc jmp insb out call push dec sub or imul roll imul xchg enter inc pop sub jp jno sub bound mov or into and dec xchg adc test mov insb dec dec in adc adc in testb and ficomp ficompl fnop push jno and jp sbb and mov sbb mov nop mov jmp das adc jns fst sbb pushf xchg test mov push ret and ss jp leave push rcr lds jp jb xor popa adc mov nop push mov xor push push and jo xor ja ss mov lcall mov outsl xor inc dec jo push push aaa ss imul pop dec fcoml push add popf or enter (bad) mov sub dec dec jns adc imul xchg cmpsl push and enter cmpsb dec adc xor cmp test mov cmpsb pusha and and push inc ljmp lret sbb xchg ss jp pop cmp pop push dec dec dec inc inc push xchg mov adc lods fsub pop (bad) stos xchg xchg adc loope and mov mov adc adc daa xchg or (bad) enter out enter out inc pop es cli and lods adc dec mov mov inc loope xchg shll mov fs xchg xor mov daa sbb in dec and jb adc sbb rcr push lcall mov imul data16 js sub xor gs sub bound xor jb rorb inc dec xor mov xchg adc lcall cmp and mov adc xor jnp mov arpl arpl adc sbb arpl inc mov jb mov mov xor cmp push push dec dec mov xchg or pop mov xchg mov sbb push xchg ret sub sbbl or jp dec pop (bad) mov xchg mov mov mov (bad) or ror pop inc sbb or mov jp and or xor ret rorb xor test sub lcall jp or lret dec mov jnp cmp and sarl and lcall mov or and mov rcl pop mov sbb leave (bad) mov xchg jp ror or or cmp or ret pop mov bound jae lret pop or mov or adc jnp xor arpl mov mov sub (bad) lret or and (bad) mov jp sbb or sub jp pop or pop jae mov stos mov pop sbb sbb sbb andl and lret mov mov mov stos mov jnp fwait adc lcall jp or xor ret mov pop or xor mov push xchg sbb sub ret stos xor lret jp dec pop or sbb leave xchg andl and mov stos push mov or mov mov pop jp inc sub or mov cmp or or push cmp mov or lret inc (bad) push mov pop sub lcall inc lret xchg ret lret mov test or mov lcall sbb xor dec mov stos jnp dec lcall roll mov or pop ret sbb lcall xchg mov xor xor jae jnp cmp or pop sub mov ret rcll lret mov pop push inc ret mov arpl mov lcall jp adc pop or mov stos mov or cmp lcall push leave xchg push push sbb rorl ret dec rorl jp mov mov lret mov or jnp xchg and xchg mov cmp sarl sbb imul mov (bad) jnp mov or rorb jb dec mov inc jp xchg mov ret sub inc pop or inc mov stos shrl (bad) and mov or (bad) xor ret mov mov mov (bad) or mov pop mov cmp ret mov mov pop or inc jnp inc xchg mov sub pop mov pop sbb or sbb arpl or push adc pop nop pushf cwtl xchg fst adc (bad) adc push or xchg dec sub or or daa add xchg test notl pop push xor jae (bad) xchg (bad) movsl cmpsb es adc mov push (bad) jbe jne inc addl push in jbe hlt inc jae adc aaa push addr16 and push je adc push cmpsb xchg xchg ja lds ja adc mov mov and test sbb ret sub sbbl sub pop sbb push lods ja push cmp xor pop cmp inc push aaa imul inc dec xor aaa aaa sub pop inc inc inc inc inc push push xor push push jp sbb fwait lods and mov mov sbb rcrl xchg pop push pop push dec mov fstps sbb pop nop int or sbb sbb rcrl aam pop pop rcrl int ficomp cwtl pop push fcmovbe into dec adc push push pop cwtl dec pop push pop adc sbb xchg inc mov sub sub lret dec insb sub cmpsl xchg notb adc and push mov sub (bad) lret or and (bad) mov jp adc mov nop push mov dec outsb push bound insl xor mov lods mov xor sbb pop sbb sbb (bad) push push fstl pop push xchg push fwait adc pushf dec mov sbb xchg fimul cwtl pop aad pop rcll sbb dec or lret or mov test xchg push xchg xchg xchg hlt mov mov mov aaa xchg xchg and inc adc xchg out xchg aam fs adc jb mov mov pop jp inc sub xchg sbb ljmp enter movsb jne bnd fs pop imul insl and out cmpsb (bad) mov mov (bad) insb sahf lret rorb dec jns push xor inc sbb mov sub mov ficomp push dec int out out int push enter mov xor hlt push stos arpl pop push pop ret sbb cltd xchg dec pushf pop pop xchg inc mov adc pushw out and fstps push pop sbb push push mov pop fisttpl or sub inc imul mov add outsb out into jo push (bad) lock mov cmp jo inc dec addr16 cmp and sbb mov push pushf pop sbb or ljmp cmpsl and mulb inc push inc daa mov mov push push push adc push mov call outsb dec mov test inc test loop aaa adc inc popf sbb xchg adc (bad) rorb inc addr16 inc addr16 cmpsb sbb sbb mov mov push gs pop fs sub imul pushf daa xchg stos stos adc mov sbb sbb rclb xchg call mov daa sbb movsb cmp xor jbe adc lcall int adc fsts push repnz ljmp bound sub jno cmp cmpsb int3 test test push adc and stos stos mov mov int3 fisubrl cmpsb bound dec das imul inc adc sbb pop xchg sub add xchg aam xchg push and inc mov cmp xchg in lods into dec dec push or sub push aad lods cmp adc pop call sahf bound inc aaa push jp sub movsl mov ss xor sub mov int3 in outsb cmpsb lea cmpsb aaa arpl daa push push push (bad) ss sbb dec pop adc (bad) mov xchg (bad) call pop xor dec das aaa dec mov or lea fs xchg repz jns cmpl popa fldenv dec pop push gs push xor push inc pop mov mov cmp mov dec mov xor dec stos jae bound rcrl jno sbb aad dec sub les lods inc in test sbb or lret cmpsb loopne (bad) push inc ret pop jb mov lods and xchg pop mov cltd les xchg xor ret push xor loop je jae nop dec adc mov mov pushf and jbe xor inc cltd mov inc scas ret xchg pop or push fs inc es inc inc and jb adc push mov xchg pusha bound xor je jbe daa cmpsl movsb cmpsb movsl sbb or sahf adc push adc adc inc int sub jmp pop and push ret in fldl rcll (bad) push aam mov mov push jns pop dec arpl sub lods adc jmp imul inc and test add sbb mov mov loopne mov mov ja xor inc xor push push mov or loope popf or test in aad adc (bad) push stos mov cmpsb push (bad) icebp xor (bad) (bad) cmpsb lods sub es adc xchg add xchg les cmp mov or int and enter call out sub sbb into movw test sub and aad pop push roll dec popf adc call xchg bound cwtl mov xchg pop int3 sbb fstl into inc xor popa cmp cwtl xchg dec dec fwait enter test addr16 cmpsb xchg cmpsl push and in jne ja pop inc mov bound mov cs inc jp jo adcl inc in daa or dec int3 int lods lods loope push mov into data16 int3 shlb outsl inc push outsl jb popa xor outsb mov je push jp push push dec and addl xchg xchg pop fld int3 mov and mov loopne dec or js mov lret rorl and mov lcall xchg sbb lcall mov nop rorb mov fild es test dec sub iret push imul push xchg mov push enter fmull pop inc pop xor xchg jo out mov inc mov jp adc push xchg lock and aaa and rclb inc hlt push inc sbb mov mov push pop aad (bad) inc movsb data16 sub call test push xor inc sub sub push aaa xor sub cltd sahf mov sbb or jmp rcrl adc or mov push mov adc inc fisubl test xchg and xchg inc loope push adc adc cmp sbb roll stos lods sub inc outsb mov add ret jb or fidivl sbb mov lcall sbb push push lret mov int rcll xchg mov and xor data16 and cmp into loop in (bad) and fwait xchg or push push dec fnop movsb ret xchg lods or cs xchg xchg aaa mov popf pop and inc xor and stos xor mov dec cmp out mov mov ss fwait sub or in mov fwait sahf mov or fs jne jb mov cltd sub mov jo jbe xor push inc xor and cmp movsb or cmp out test ljmp test inc pop test cmp lods xor lods add sub or pushf dec (bad) push xchg shrb sub test insl dec dec bound xchg sub push push xor inc inc and mov mov mov loop push xchg inc (bad) addr16 andl or aam sub sbb fimull sbb fmull test out addr16 insl xor xor and adc and mov (bad) insb mov push sahf jl mov xor gs fadds push xor pop mov test addr16 adc xchg adc aam xchg test int3 loopne lods mov fmull dec push dec dec mov push fistpl lods pushf ret mov enter scas cmpsb and adc push xchg pop rcll fs mov xchg into and pushf enter imul mov dec and xor dec mov or xorl mov push mov jae mov inc cmp sbb cmp rcrl dec lods mov mov movsb and mov or int3 flds rorl pushf sarl rcll inc lods and add test inc roll int lea flds or aad gs lds test dec int adc frstor cltd imul add aad rcr xchg fstps add sarl add enter popf adc lods sbb xchg lods or test lods mov cmp add xchg fisttpll add pop gs add movsl cmp add xchg dec loope in sbb xor add test adc add leave in aad cmp and cmp and push mov leave inc add int sbb add add int3 (bad) add fstl in and lods and cwtl mov inc mov and in popf mov test add loopne mov add dec aad imul int3 loope and pop add (bad) sub pop pop pop test test add xor add adc add xor lds cmp xchg dec mov int and movsl pop mov sbb imul mov add lods rorl add loope push fcom inc inc add popf push xor inc movsl push lods popf push (bad) xor ret xor cltd dec rclb int3 adc rcrb push pop xchg dec rcr adc adc push cwtl pop fcompl adc sbb int3 pop (bad) aam push lcall aam pop aam outsb jmp dec lods (bad) push out scas into xchg cmpsb enter in inc push or inc imul test je adc fs push push mov es popa xchg test push xchg jns or dec push ljmp xchg adc and and imul dec jb push or lds aad add xor add test adc adc mov in stos ljmp push jae xor dec dec inc daa sub mov adc rcr ror into addr16 dec lods dec imul out lods lea cmpsl sub jecxz cmpsb (bad) notl mov push or pop cmp or popf or lea push xor outsl inc ss cmp xchg dec push or sbb dec lret lods dec push scas enter and rcll xchg adc and mov or sub aam rol adc push movsb fsubr addr16 sub xchg test push pushf pushf push int3 mov xchg sbb data16 dec mov adc test adc mov bound mov and movsl push lods popf push (bad) xor xchg push in fsubr (bad) (bad) rorb jo mov (bad) xchg ljmp (bad) cmpsb (bad) and sub mov push or lcall fwait sbb rorl out in es mov mov fstps pop lcall xchg cs mov call jbe add push cltd mov mov xor adc aam lods pop mov lods int mov test aam (bad) mov dec outsl jns das push bound mov mov mov push sbb adc dec dec insb mov sub test dec and jne sub and mov int test push dec inc xor movsb mov and cltd int3 shl (bad) xor sub pop test push movsb and or mov inc ja and lods cmp mov fcmovnbe pop xchg pop adc test mov inc data16 test xchg pop gs dec push add adc mov aad int xor lods mov rol sub sub in bound inc xor fwait lods xor xor cwtl ficomp fstpl dec out inc das dec dec outsb sub call push xchg es cmc adc ret ret lret xchg lret lahf xor popa xchg adc or mov push inc dec push push gs sub sbb fwait aaa mov fistl adc test or xchg repz rorl pusha (bad) scas test inc es xchg xchg xor mov sbb lea xchg push push push ret dec stos stos mov dec pop pop int3 shll dec (bad) aaa xor dec dec push jne inc xor xor xor sub adc cwtl cltd pop xchg dec push or xchg stos mov and xor sub pop bound sub sub lds loope xor cltd adc mov cmpsb out in rcrb out xor cmpsl mov out and xor and mov hlt mov arpl inc fs aaa xor xor pop pop cwtl push jno mov mov ljmp sub dec data16 push vmovapd inc push gs mov jne push inc push aam add inc xor mov adc xchg (bad) (bad) mov push xor xor push outsl inc xor mov sbb cwtl mov push outsb or insb dec imul int into (bad) hlt nop xchg (bad) fsubl adc mov xchg repnz lods and sub mov adc inc cltd cmp push shlb mov mov push fstps pop int push dec int3 mov out int sub ss fs shll shrl mov dec fstps int pusha lods and push push pop mov jb nop mov popa jns push push cmp xor cmp js jae jne adc cltd aam mov roll outsb inc and xor mov adc lea int3 cs imul gs cmp sub (bad) lds fisubl inc ja movsl cmp shrl or pop xor je outsb push cltd cmp inc dec dec test and jae and hlt push and adc arpl sub mov dec cmp dec mov inc fs push pop push inc es sbb mov sub sub lods push inc imul cmp outsl inc inc and fwait and mov sbb push mov dec mov (bad) es pop and xchg sub adc out rcl stos fadd outsb les arpl mov in adc adc rolb adc cltd mov xchg pop (bad) sbb enter or mov mov leave fimull push gs das inc cmp pop mov movsb enter out roll mov test insl les insl outsl and cltd or or je mov rol pop mov bound inc xor cmpsb sub into lock data16 hlt push push cmp pop sbb mov hlt rcrb sub cmp cmp or dec mov test fwait sub mov pushf push call mov insl jae gs call sub addl xchg xchg add sbb mov push add and mov mov sub outsl inc dec push stos sub xor rol test dec jmp call sub outsb outsb sub lea and pop rcll fcompl xchg fcmovu test out inc xlat movsl add test sbb pop adc push rcr xchg mov pop mov pop pop pop test inc je lcall push pop mov mov and adc shll sub pop (bad) rclb jp push push xor js leave sub leave xor and sbb (bad) hlt addr16 xchg and mov data16 pop cltd adc pop fimull enter and mov sub in add mov cmpsb ss mov aam jbe and xor mov cmp pop xchg (bad) push lret (bad) rcrb adc xor xor (bad) or push or int3 pop cwtl rcrb and inc xor cmp xor leave call push movsl es sahf adc shll xchg mov gs in xchg pop mov (bad) sarb mov lcall outsl arpl pop inc imul push imul pop insl push int3 cwtl pop xchg mov fadd gs cmpsb (bad) push test push mov movsb (bad) and xchg jecxz inc bound mov adc enter or xor popf rcll pop les cmp aad mov pusha ret pusha xchg mov data16 mov xor arpl dec jb adc mov mov adc mov je jnp mov (bad) mov mov push mov mov gs repz sub or inc fucom or fstpl mov imul inc lea sahf inc nop arpl mov pushf daa cmp adc or or adc xor push les and (bad) je test es and pop pop arpl pushw cmpsl xor fs xchg push xor add xchg push xchg add je adc adc test daa xchg cmc push mulb test xor adc hlt aaa test push xor xchg and push loop inc cmpsl push inc adc and jae repz addl movsl pop xor mov xchg adc push xchg adc inc rcll arpl arpl inc mov xchg push and mov push xchg xchg push ja push test xchg adc xchg test aam adc addr16 and lds inc adc arpl xchg adc cmpsb jae xor movsl adc inc mov mov ja pop adcl adc test test pop add es xorl adc jbe push adc xchg add daa ss je adc add in movsl xchg adc xchg cmc pop je xchg aaa adcl arpl aam aam gs xor inc mov xchg xor add inc test xchg xor inc je hlt push and inc aam xchg adc xor inc jne xchg jbe push ret addr16 pop pop addr16 and inc pop daa movsb and add push inc mov adc out out adc push fs inc pop addr16 push xlat xor xchg adc aam ss inc add addl arpl push inc xchg adc xchg movsl jne jb inc ss inc adc ss xchg je inc hlt mov adc inc pop addr16 test (bad) mov es ja xor push inc repz and inc adc je je pop push jbe cmpsb xchg xor pop xchg inc push repz adc xchg ja movsl mov mov andl cmpsb es mov push aaa push and aaa push xchg xchg push arpl adcl hlt push (bad) cmpsb mov (bad) divl cmpsl push aam adc jne fs mov push ja hlt pop test xor inc adc xor adc inc movsl fs jbe add repz add adc retw push adc xchg adc (bad) push pop jne xchg push rcll addl jecxz adc ja inc jbe push adc xchg je gs je xchg aaa xor adc and xor inc xchg ss push and in mov gs test xchg push xlat adcl adc push test pop fs mov (bad) test je daa pop je push add inc cmc adc adc xchg and adc adc push xchg ja add mov rcll out and xchg cmpsb arpl pop push push and xchg fs test push inc movsl xor fs out push jbe aam push inc adc jne aaa push cmpsl inc and xchg hlt xor xchg inc adc push xchg daa add in fs xor pop jne fs inc adc xor test xchg adc and es cmpsl test adc push xchg jbe gs and jecxz inc adc in and inc adc pop adc xchg xchg add movl aaa xchg adc xchg daa ss in jecxz,pn xchg pop fst pop adc push dec xchg xchg (bad) sbb or xchg xchg sub cs sub dec insb mov sub out push leave mov int3 cmpsb push insb mov or sub test push call or and sub or push sub imul in hlt aaa test push xor xchg and push loop inc cmpsl push inc adc and jae repz addl movsl pop xor push ret jp push inc lcall mov sub mov (bad) enter sahf (bad) (bad) (bad) (bad) repnz out ljmp dec push jb dec inc xor jne push imul sub xchg mov cltd int (bad) or push pop sbb xchg rorl push or or cs or dec and pop aaa xor cwtl mov sub pushf or (bad) popf pop pushf fsts dec sub stos or push push xchg cmc add leave fwait shrl sbb gs or in dec push mov sbb shll gs adc jb lods (bad) loopne enter bound insl inc push inc and cwtl xor stos cmp and in mov dec push testl mov imul mov dec scas mov dec jae inc js adc fwait sahf popf adc push adc ljmp sub mov arpl inc ss push mov stos xchg fwait imul xchg sub in (bad) fstl dec imul sub pop lcall push pop fwait adc or imul or sub aad push test xor mov shrl int leave xchg jmp (bad) ljmp ret data16 je cmp dec dec inc adc popf mov ficomp or ljmp scas out inc js arpl push test mov cmpsl stos mov and and sbb xor mov dec in mov fnsave (bad) mov mov bound pushf jo mov out into fsubr (bad) (bad) xchg xchg ss ja jns jae inc inc xor xor xor sub cmp es push sbb pop push push lcall sbb pop pop fmul mov rclb add outsb dec push call mov and call push pop adc push and inc cmp xor adc ljmp push push sub sbb mov sub cmp mov rcll mov ljmp mov inc cmp xor outsb jns adc fldt jne fs inc inc cltd xchg ret lret push adc lock into (bad) mov pushf mov push jne push insl ss bound mov mov sbb and push into sbb pop push es xor xor adc fcoml cmp dec xor inc es fwait mov mov sbb outsl or popa xor and (bad) pop mov cmp fcoml adc outsb (bad) in es scas dec cmpsb or push and push divb sub mov int mov hlt fimull pusha mov bound push jo dec pop and shrl dec imul dec int3 jno cwtl inc push out mov push aaa xor das inc cmp mov xor inc dec scas (bad) xor bound push pushf adc adc aaa aaa adc inc rorl xchg mov inc out xchg pop enter ljmp ret sarl cltd lret mov mov out ret sbb cmp push mov push dec sbb push xchg or push int push stos xor inc lret pop shrl mov adc (bad) jno sbb es lcall into push sbb mov movsb jbe mov and cltd test xchg adc int3 ljmp test jns outsl dec dec imul cmp ret xchg fmul mov xchg loopne and arpl pop cmp jns sub fldcw loope adc fcmove nop call mov xchg push lds xor and jae xchg addr16 mov ss inc add push push mov push jne mov hlt push ja aaa xchg and push push push push mov in movsb adc inc adc lds adc add fs push adc adc aad xchg push inc aaa cmpsl xor push je push add fs inc xor add es mov ss xor xor arpl adc jbe xchg xchg push push inc adc les mov push xor adc test mov jb inc xchg hlt inc fs lds inc adc aaa push push adc je out xchg push push and jecxz (bad) cmc pop jbe cmpsb xchg ss adc mov mov inc repz push xchg je xor and movsl adc cmpsb xor mov test push fs movsl and add xchg inc xchg and adc inc mov inc adc jne push mov adc adc test arpl data16 push mov jae xor mov es push jecxz daa xor adc push daa xor es out movsb adc xchg jae mov in adc xor ss xchg push and daa jbe xchg notl je movsl jne mov daa push jae roll xchg mov test inc jecxz xchg testl hlt adc xchg je and xchg adc (bad) xchg aaa adc push test cmpsl inc out repz adc addl adc mov inc pop es xor xchg inc test and push xchg push push xchg xchg inc and xchg inc jne adc mulb and je xchg mov cmpsb jae mulb aaa push inc test push cmpsl je push je inc movsl xchg movsb xor push arpl (bad) hlt xor ss push test adc (bad) out in es ss adc and hlt jecxz xor inc adc movsb inc push xchg arpl addr16 add les inc addr16 gs daa xchg xlat xor xchg and adc inc add push jbe aam inc es adc adc aam addr16 in (bad) xor adc inc adc inc push push movsl test gs fs xor adc pop mov out aad adc adc xor adc daa jne pop xor xchg adc xchg xor xchg adc inc push cmpsb es xchg push test inc out jbe xchg and cmc push push inc in adc push cmpsb xlat pop inc and push and mov xchg xlat xor fs adc inc daa daa data16 fs xchg adc xchg push push mov lds push inc fs ss daa xor push and add movsl push push adc movsb (bad) hlt adc (bad) in xchg inc jne jae inc adc es out inc movsl push inc ss (bad) aam xchg mov arpl es cmpsl push xchg data16 and adc cmpsl inc xchg arpl cmpsl adc inc adc xlat jae adc ret inc push push test inc arpl adc inc push xchg les adc (bad) jne jbe and xchg xchg mulb and and adc push movsb ja movsl xchg push movsl data16 out xchg mov jecxz add push aaa test mulb notl je movsb (bad) push xchg adc xor add push mov pop inc xchg inc adc aam xchg xchg adc mov push adc adc inc test push test inc adc jbe inc and daa xor inc and les jae add ret repz aaa adc and divb fs je push and xchg je and ss push out jne hlt adc push push inc adcl addr16 and gs xchg lds (bad) notl inc mov push xor inc je mov xor xor test inc xchg pop movsb adc xchg push arpl hlt adc cmc push data16 arpl (bad) movsb aam xchg inc out xor movsl push add inc add xor xor data16 inc xchg add in daa jbe movsb xor cmpsl add (bad) out and xchg adc mov les push ss inc ret inc hlt mulb adc adcl add xchg out xchg jbe xchg xchg add gs push adc xchg jne addr16 inc mov adc push xchg xchg xchg mul inc aaa pop xor jae addr16 push testl testb ss adc jecxz xchg mov mov adc jae mov and inc adc xor adc adc es and push inc test push push pop inc inc cmpsl ss notb (bad) in fs xchg push push xchg ss aaa adc xchg inc fs ss addr16 and xchg hlt jbe xchg xchg and in xchg inc jbe es adcl adc movsl xchg (bad) xor aam gs jbe push test inc movsb adc test in out push mov adc mov push movb adc inc je xchg push xor adc adc adc fs inc cmc and push (bad) push adc adc je add pop xchg adc aad mov movsb adc aaa push lds push inc add xchg push xchg inc cmpsl xchg test hlt out hlt adc divb xor gs inc inc xchg test xchg test adc push mov inc adc inc cmpsb mov push inc (bad) les adc add inc aam je xchg ja push jecxz xchg inc jae je mul push mov (bad) xchg ja lds pop movsb mov gs cmpsb xchg test xor test push les add and xchg and adc push daa test aad and add je test repz mov in and push and pop push je daa add jbe pop push push and xor push push jb xchg xrelease je xchg xor push testb pop test xchg add adc test xor pop movsl notb mov jbe adc test push push inc mov movsl xchg (bad) push xor pop xchg xchg mulb adc add mov push inc and xchg push daa addr16 gs cmpsb xor and inc xchg aam (bad) ja daa xchg add mov pop inc jne xchg repz push jecxz push adc xchg push inc add push adc mov xchg mov inc movsb xor popw push out and adc push and adc (bad) testl movsl xor hlt adc je add xor gs inc jbe aam adc movsl inc xchg cmc push and push adc push push inc movsl test xchg push notl xchg pop and xor push mov test movsb xor (bad) mov cmc inc xor aad mov not (bad) ss aam adc add jne push aaa xor jae movsl add xchg xchg push and daa pop inc add ja and push push xchg repz xorl xchg movsb jne adc (bad) aad adc hlt push es (bad) mov adc push xor adc aaa inc xchg xchg adc aam mov hlt aam hlt xchg inc pop cmpsb jbe push xchg in cmpsb aaa xor ja (bad) and xchg aam out add push movsb and xchg push fs push push repz add push adc inc test xchg adc push arpl (bad) mov jbe adc push ret xor ja in jae daa fs xor xor push jbe jae pop push inc add jne mov gs movsl adc data16 xchg xchg push adc xlat inc je xchg mov ss adc push mov out test testl adc adc inc push adcl and je inc xor and mov adc inc jbe and out and movsb test jbe xchg cmc addl adc xchg je mov and cmpsb adc mov pushf cwtl mov cmp test movsl and mov mov mov and cmp mov mov sbb mov sbb mov aaa sub and cltd cmp sub test mov and stos test mov cwtl mov mov mov and movsl and cmpsl xor test cmp mov sub cmp xor xor lcall and stos sub and sbb mov xchg stos and pop mov mov cltd mov mov inc sub (bad) ljmp jmp int3 (bad) out lods cs sub dec data16 mov add dec mov enter dec iret dec dec data16 mov inc push sub lea mov call outsb sub inc out dec or (bad) sub (bad) sub sub out int or out push cmpsb test scas or lods dec scas push dec (bad) aam xchg jae mov in and popa popf xor dec out in leave and dec push push imul jno ss xor imul xor jb and lods loop push xor leave sbb pop fmull lock xchg mov int3 outsb aam pushf lret cltd and loope push int call xchg ror inc sub or sub int movsb lds inc sub test in and sub (bad) adc cmp add sbb add test leave mov or xchg mov fcomps ret mov ficomp xchg mov shrb in out (bad) pusha (bad) cwtl xchg ljmp repnz bound outsb stos into lret push and movsb aam addr16 in (bad) xor movsl inc adc inc push push movsl test push xor lea xor and inc xor movsb daa jne pop xor xchg cmp xor and fwait cltd ficompl dec movsb pushf (bad) loopne push inc in cmpsl push cmpsb xlat pop inc and push and ss xlat xor fs cmp cmp xor sub rcll xchg cltd sub mov sub inc and sub cmp rcr push pushf fstl sub test xchg int and rcrl test xchg ljmp fwait sbb lods cmp mov sbb lcall pop adc rcrb aam push sbb push cltd (bad) xchg fcmovnbe nop mov fadds and adc mov mov ljmp (bad) lock repnz pop sahf ljmp shll ret sbb popf dec fstpl sbb xchg push pop ficompl dec adc rcrb lcall pop adc adc adc sbb fistpl push or fisttpl fisubl inc xor xor mov and adc lea pop pop cmp sub pushf sbb int sbb mov cmpsb fsubs dec sub mov loope push push fadd xchg and cmpsb (bad) and bound dec das push ss push inc xor dec xor push lret nop stos loopne enter movsl dec push xor je jo dec push dec inc push ja pop inc push dec dec jp ss outsb jno mov ret push ss inc ret inc hlt mulb test push movsb imul inc add pop push popf aad popf push sbb cltd dec push pop push fisttpl push sub insl out or lret push adc dec sub xor mov nop mov fmul mov fwait int3 pop sbb adc adc dec dec xor movsl xor mov mov mov mov mov and imul les jb out lret mov imul lea push xchg fsts (bad) sbb fsubl mov xor pop movsb int mov insb inc push dec inc ss xor push push imul dec push push push xor inc dec jne es fwait cmpsl mov loope les je aaa push lds push inc add push xchg inc cmpsl xchg test push dec movl or mov add addr16 inc inc imul push inc push ja jp cmp insl insb dec jo push dec aaa dec dec push xor addr16 inc jno outsb xor xor outsl outsb jno imul jno dec dec push push cmp inc push and push sbb stos bound cs push push jo dec inc xor insl push inc adc arpl arpl jb adc mov pop nop fcompl pop push (bad) aam rcrl push sbb fimull sbb pop aam dec repz cmp cwtl and cmp and mov sub and cmp cwtl mov movsl sbb mov mov sub sbb push sbb push or dec scas push aam xor pushf les sub dec push imul adc adcb sbb int3 fwait push fwait mov into pop sbb int3 push test ficoml (bad) scas mov nop ljmp hlt inc xchg xchg mov cmp mov sub lods mov xchg ficomp stos sub nop test sub sub movsl xor and sub arpl sbb imul es movsl sub mov ror push mov jns push ss push aaa inc jo movsl aaa cltd pop lods sbb rclb dec sbb push sbb xchg cwtl fwait nop sahf or fcoms pop les push aaa inc xchg pop mov adc and add inc and addr16 ss fdiv cmpsl add mov fs push push repz add push adc inc test mov push add fcmovu push or or ret or test jne movsb lds gs movsl adc data16 xchg sbb popa mov mov or (bad) push push xchg and int and inc and mov or cwtl dec mov insb das adc into inc inc and adc mov xor loope cmp lea mov stos outsb and sub cltd ss mov dec xchg xchg pop xor lret sub dec dec icebp adc mov mov in dec enter addr16 xor das adc dec adc les lret dec in lods sub popf pop movsb xor imul lret or lret test leave mov loopne (bad) jno and adc push flds sub cltd mov and pop in mov mov push cmpsl mov mov test adc add and mov sbb xor sub or sbb fcmovbe (bad) mov test push outsl gs inc cltd xor mov xor hlt mov mov inc and sub and dec daa sub call fwait adc fucom pop sub inc fxam in es sbb cmp xchg and fst xor out insb (bad) dec lea dec or or add data16 test scas lea push test sub int lret dec sub sub outsl dec or (bad) enter push outsb sub out dec sub scas dec es leave in dec ljmp outsb test dec scas enter data16 cs imul or push sub lods push mov mov in or mov sub or lea in dec inc test dec jmp dec scas dec inc call stos sub movsl call (bad) insl out sub out push call dec callw int sub sub dec call jmp lods insb into lret insb stos movsl imul out sub or mov sub call in dec dec (bad) int call sub or cvtpi2ps sub sub dec lret or scas out call mov sub dec scas dec cs sub sub mov mov test mov mov call imul dec dec dec jmp sub or dec test dec dec sub push stos imul enter mov push insl or call in sub sub push or test dec dec call sub cmpsb test sub inc movsl insb inc sub dec insb mov (bad) enter jmp sub dec xchg test scas mov outsb out push sub dec push dec das add or dec dec int3 scas dec sub sub das dec enter or sub push or sub (bad) lods push call dec in sub dec push test lea sub in test mov inc call data16 leave xchg call ljmp mov sub gs test imul (bad) daa or dec (bad) stos dec stos dec outsb call stos test lods lret dec enter push mov data16 cmpsb out (bad) enter into scas int lods stos inc outsb push call out insl out sub sub es inc sub cs (bad) dec enter sub out (bad) or or insl into stos lods mov insb push mov dec insb int3 dec enter enter insl imul xchg call sub lods dec sub dec dec jmp xchg sub dec jmp imul sub sub sub call dec dec lret dec dec sub out mov jmp inc mov call insb jmp lret inc mov mov daa es outsb (bad) cmpsb (bad) mov mov in or mov test cmovge mov out mov out es cmpsb gs call sub jmp es es sub dec dec push push mov int (bad) mov test lea insb xchg sub mov outsb insl push int push mov or test daa lods test push mov (bad) (bad) mov dec push lds imul mov push dec sub sub test sub jmp dec add mov insb (bad) dec lea dec or or add data16 test scas lea push test sub int lret dec sub sub outsl dec or (bad) enter push outsb sub out dec sub scas dec es leave in dec ljmp outsb test dec scas enter data16 cs imul or push sub lods push mov mov in or mov sub or lea in dec inc test xor inc mov mov push lret imul adc mov cmp cmpl movsb es push xor xchg xor je inc test xchg push mov gs push push mov inc xor adc je hlt inc ja (bad) cmc xchg je add in cmpsb and data16 sub in mov dec daa sub xor mov ret and mov lcall call (bad) call stos xchg into mov mov (bad) insb call into xchg mov xchg xchg stos and mov xor and mov mov mov sbb mov sub test mov xor mov daa xor and mov mov lcall cltd sbb and imul enter subl sbb pop pop mov lcall pop mov test xchg inc xchg and popa or dec cmp jmp imul dec push jns jns imul pop dec je push popa gs inc xchg sbb pop dec cwtl ficom lret ljmp cltd fisttpll add cltd xor adc dec ja das das outsl insb dec inc inc inc inc push das inc adc ror push sbb push dec push push xchg lea push nop fst pop xchg lcall (bad) test cmp cmp enter scas int lods stos inc outsb push call out insl out sub inc xor (bad) pop xchg mov pop dec int mov mov jae stos and sbb jp or cmp pop xor xor xchg int xor pop xor push xor dec push je imul sbb fwait xchg sbb popf rorl or fwait sbb nop test (bad) xor movsb aad daa test in lods push dec sub popf jmp sub arpl pop pop xor xchg push nop push pushf (bad) fwait int3 cwtl rolb aaa adc or into test jo xor mov dec cltd fimul enter andl leave mov pusha pop out mov pusha inc andl (bad) daa xor cmpsl and test lea insb xchg sub mov outsb insl push imul rorl xchg mov push cwtl bound lret xchg (bad) lock scas insb push lcall test xor mov sub and or cmovge sub cmp xchg test mov lret pop sbb pop rclb repnz (bad) (bad) call sub cmp dec sub and lods movsl sbb sub mov xchg or push mov cmp adc jns sbb dec sbb test sbb and lret or mov pop sbb xchg and mov xchg push adc push test movb mov movsb cmpsb mov dec lods dec test es or or mov cwtl xchg inc xchg mov popf rcr inc adc rcr sbb into sbb xchg or movw adc push aam fmuls and xchg inc rorl shrb leave movsb rcrl mov cwtl lcall and push dec call xchg mov xchg push dec push cmpsb addr16 ja imul dec or out test jmp outsl sub ljmp rcrb (bad) jno mov test pop enter xchg (bad) loopne hlt outsl inc sbb cwtl aad sbb mov inc es pop sub pop push rcll adc ret dec ljmp adc dec cmpsb ja inc dec pop push mov enter and inc or pop rorb rclb adc or mov push stos mov sub int3 lret gs jb mov sub test and lock insb into pop push mov jo mov lret mov push ja ja outsb aaa inc jns inc dec xchg sub popa dec xor pop inc push inc fs ss xchg pushf pop (bad) or dec test sahf gs xor cli adc lret fs daa inc add sub aaa xchg mov (bad) push dec sub jnp or lret lock test (bad) aam mov test sub movsb mov ret pop mov popf pop mov sbb jo and push xor arpl mov (bad) or adc or push push push inc adc mov sbb dec movapd call inc dec (bad) inc mov xchg divb mov rcr frstor sub sub mov es push es xor pop pop mov dec dec inc xor push jns inc adc nop int3 rcll fisttpl push dec push stos mov push adc fisubr mov popf sbb push nop xchg fisttpll popf shlb xor xchg sub xchg cltd mov mov lret or mov sub and mov and sub cltd loope cltd push popa mov stos addl xchg or out clc nop rorl les ja and sbb mov outsl jno pop dec addr16 je jbe stos imul mov daa push test jnp lret xchg or sbb imul jp xor sbb mov xor inc or int xchg repz mov cltd cmp dec fisubr and xor aaa cltd les test aaa sbb mov mov insb out ljmp aam test cmp stos xor xor dec sub or in adc pop movsl mov les loop dec in jns xor sbb push movsb jns dec dec mov and cmpsb xchg push pop push xor outsl xor popa inc nop aam push xchg ror xchg fcompl jae (bad) push mov jp inc or pop rorl int3 (bad) shrb push adc jae inc xor sub xchg push adc dec push les mov insb lods int lods ret inc lcall rcr sbb in jbe sub mov sahf and cmp jo inc mov push jmp insl mov xor nop mov sub cmp ss adcl mul movsl daa push and push rcll inc push test cmp xor movsb test xor xchg push mov sub cmp xchg xchg xchg push sub adc mov ror dec sub movsl adc push pop fcoml fimull dec cwtl enter add popf sbb dec ja adc adc push push cmpsb ja inc inc test ss xor adc xchg xor xchg mov xor mov stos addr16 xchg add sub and xchg inc push jbe cmp cmp dec int3 out inc ja and fwait or mov push and and and leave mov xchg int3 ljmp push dec mov dec loop dec mov adc (bad) jb xor movsb or xchg and inc nop pusha es js pushf (bad) enter push fcoml nop mov (bad) out test pop (bad) loopne lret loopne mov mov xchg mov mov xchg xchg pushf out xchg aam push int3 lock xchg test xchg fdivl lods jb test xchg repnz in bound (bad) (bad) mov fnop lret data16 les mov cmpsb out mov hlt (bad) outsb lcall mov mov enter xchg (bad) shrb mov ret mov xchg int3 loopne lret push out mov cwtl lcall bound insb into (bad) mov outsb loop into fs rcl pusha (bad) hlt into mov into mov shlb (bad) call mov mov push mov fadd cwtl nop loopne (bad) stos jo ret xchg aam (bad) push aam xchg (bad) sahf xchg mov mov (bad) out les shrb lret pop xchg (bad) mov mov mov jb into in mov lods pusha (bad) scas lret push mov call push pusha (bad) (bad) mov fisubr jb mov fiadd (bad) mov scas shlb (bad) enter pushf nop cwtl out cwtl mov (bad) jb xchg xchg xchg ljmp (bad) hlt enter xchg fiaddl push ret mov fcom pusha mov xchg out fsub jb scas ret insb ret cwtl int3 ret ljmp ljmp (bad) mov jb lcall les stos hlt fsubrl (bad) into jo lock in hlt sahf mov movsb fsubl (bad) cwtl fsubrs fidivl push stos mov aam into test ret mov push (bad) fmul mov push (bad) (bad) shrb pusha into xchg les in out push fs (bad) (bad) aam into sahf aam mov (bad) out mov mov ret fsub pusha (bad) mov into cmpsb pusha loopne (bad) cmpsb movsb lods push pushf xchg aam insb sahf rcr aam (bad) cwtl xchg mov xchg out in les xchg test push mov (bad) lock mov ljmp (bad) hlt mov scas bound mov test mov test data16 hlt lcall data16 fdivp loop push (bad) outsb cmpsb shr data16 loopne (bad) (bad) movsb hlt rcr push lods push push lcall data16 data16 (bad) int3 nop bound pusha movb out mov (bad) test test fs mov test rcl xchg out fcoml loopne xchg (bad) xchg movsb fs loopne into rcrb lcall insb ret loopne mov mov bound mov cwtl bound test (bad) mov (bad) outsb sahf scas push ret mov (bad) mov pushf mov scas scas test (bad) pushf outsb int3 xchg movsb fsub ret call push fs mov call push (bad) cwtl test lret outsb (bad) cwtl nop bound (bad) insb bound lcall dec or popf rcrl xchg rcr xchg (bad) push adc mov fcompl sbb pop sbb push or push push push nop aam dec fwait adc rcrl dec aam rclb push popf rcr pop xchg dec adc fstps xchg lcall call cmpsb or sub dec test das sub outsb dec push sub in es enter enter test sub or push inc (bad) sub mov call call jmp out inc xor cmpsb je push xchg inc push adc adc xor sbb mov mov mov xchg bound mov stos jno mov mov adc pushf enter roll push hlt shlb (bad) call mov mov push mov fsubs add test lcall mov and sahf xchg mov mov (bad) out les and sub adc movsl je xchg push ja inc xchg jne inc mov stos ret adc call push nop arpl outsl xor cmp cmp aaa dec fs and dec lcall and fnsave pusha xchg mov jne inc dec and shll adc fwait push push dec (bad) out inc imul xchg movsb arpl inc mov or pop inc xchg push mov xor outsb insl mov fstps (bad) sbb scas dec lret xor jmp or or in ret push push rcll inc movsb push je or orl xor rcrl cmp jnp jnp or xor or lea in out push fs (bad) (bad) aam into sahf aam mov (bad) mov jne inc push pop dec popa adc xchg sahf sbb int3 sbb lret (bad) lea imul or xor inc xchg push xor movsb push mov pop pop dec mov sub xor aad movsl add mov scas bound push add push inc jp ss sub cltd lods and pushf and mov movsb hlt rcr push lods push push inc daa sbb sbb cltd xchg or push pop pop rcrb sbb pop pop xchg adc pop (bad) dec dec mov sub push dec adc push push sub cmp shl adc movsb fs loopne into rcrb xchg outsl js jae ss js jo inc push aaa push inc inc push push jns dec movsl xchg push pop push pop push or push nop nop push pop adc rcll rolb ljmp or (bad) dec or dec mov jbe xchg and or mov mov pop rorl (bad) sub xchg add jecxz xor adcl push mov adc mov sbb sub lcall push dec or adc fwait mov (bad) mov insl push ficoml push ficomp les xor and and or mov int mov mov or adc inc in or mov mov call movsl ss push push adc adc push push out and out cmpsl je and mov je jne jecxz je aad xor mov hlt adc xchg movsl push adcl inc mov je add repz rolb or dec in test dec or cs or (bad) je mov loop jb cmp sbb lret mov jnp lcall bound xchg sbb pop ja bound and rorl call adc adc mov int cmp cs inc push inc and cwtl mov and mov sbb fsts sbb pop mov (bad) xchg push push daa push into call jmp or jbe test adc inc je and arpl sub dec loope popa push or loop (bad) ljmp inc pop push cmpsl xor xor cmpsb sbb mov out out (bad) lcall mov adc into pop ffree mov sub outsb mov ja adc lret dec imul cltd mov ret out rcrb xor and adc (bad) ret ret xor mov xchg lcall adc push sub lea dec sub mov mov notl movsb push jnp xchg dec mov xchg inc les inc js sbb adc or sub push sbb lcall test mov in mov xor jns xchg call dec out dec sub mov push aad je mull adc fs stos and popa sbb lret lea cli and and mov pop and arpl and mov and enter xchg xchg fisubl aam (bad) aad shll xor movsl mov pushf adc sub lods dec inc (bad) ja and data16 mov mov sub push lret adc adc imul cwtl aad sbb into aam out jb movl movsb test sub dec int3 in scas call aam mov ja push push adc enter scas xor subl mov mov cs push sbb adc aad mov je inc xor jb adc xchg push fstl dec leave or (bad) lret int in gs insl dec sbb cmp movsl and mov ljmp cltd lret jp lcall mov inc mov inc and and or pop pop sbb push inc inc and mov mov movsb sub mov dec outsb dec insb call dec imul push (bad) fs mov pushf mov push mov push xor jbe dec inc push push inc and sub dec or (bad) dec mov xchg (bad) and test cltd mov and mov mov mov push fstpl or mov (bad) hlt inc addl cltd adc push imul sbb mov mov pop adcw and mov xlat dec adc xchg push in ja insb adc xchg int xchg dec out data16 mov push mov pop inc mov inc mov inc xor inc and xchg push ret mov mov cs callw push push je add inc push pop bound cmp mov push lods fstl outsb ljmpw gs jl bound cmp adc cltd rorb xchg dec push and call insb and adc dec inc popf imul fst leave mov insl xchg jo jae inc and es es jns lea or insl push mov out jb cmpsb mov or ss add sub mov aad adc fs es sub cmp ror imul ret xor stos and aad or push mov es xchg inc sbb inc imul mov inc adc loop ficoml out inc and scas mov aaa dec xor inc adc xchg (bad) cwtl xchg push sbb inc push push imul xor mov ret or xchg push or vpsubusw mov (bad) loopne inc push test sbb mov out xor adc ja mov rcrb push push dec repnz rolb arpl lcall in fisubl xchg xchg nop in sub fstl daa fs cmp sub sbb mov stos test and sbb sbb test cmp movsb cmp xchg mov test cmp sub mov sub xor cwtl sbb mov mov mov mov mov and and xchg lods es mov movsb mov xor mov mov mov mov mov fwait mov lcall sub sub xor mov sub xor mov and lods cmpsb xor cmpsl test sub mov mov mov xor and and cmp sbb mov sbb pop mov sbb mov mov mov xchg test adc stos cmp lods cmp and and mov movsb and cmp mov lods fwait cmp sub xor cmpsb pushf sub lods and movsl mov mov mov mov movsl sub cwtl lcall mov xor mov test mov and xor mov lods sub stos cmpsl cmp fwait cwtl and mov and sub cltd xchg cmpsb mov fwait and cmp and and daa xchg mov cmpsl sub cwtl pushf sbb xor mov mov xor mov cmpsl stos sbb test mov xor sub sub sbb cmp pushf mov sub and fwait stos and sbb mov mov sbb mov mov test cwtl mov sub sbb mov cmpsl mov mov and cwtl mov daa and cmpsb sub xor mov sub mov mov fwait and mov mov mov mov mov mov cmp mov mov xor and mov movsb mov sbb movsb mov sbb and pushf sub cmp test cltd stos and movsl cmp mov sbb mov mov cmpsl cmp and mov sub and mov and stos xor aaa movsb cmp sub lods and sub sub cmpsb xor mov fwait test cmpsb xor cltd mov mov mov mov and cmpsb sbb lcall mov cltd lods mov sbb cmpsb sub xor xor mov xor xor mov mov sbb movsb xchg mov mov mov cmp xor mov sbb mov cmp adc mov xor stos mov stos movsl xor sub xor sbb stos mov mov test mov movsb cmp mov fwait daa mov mov pop ret sub push push push push push push pop fstpl adc push rclb (bad) int lcall adc push iret dec imul stos mov pop push in into iret dec out or push in daa xchg push in inc out xchg add adc push xchg jbe je adc je fs xor push jae mov movb inc out push data16 movsb adc div es mov aam mov rcll xor es mov mov mov and mov mov loope popa adc cmp sbb pop xor int3 lds fs pop movsl aad lds inc adc fs rcl popf or mov sarl aad adc cmp cmpsb (bad) (bad) int3 loop mov loop test call mov lock inc push inc inc push ja inc push inc jns imul jo and mov xor xchg mov add lret imul sbb test mov stos or dec test or sbb dec mov test cmp dec mov inc fadd sub mov nop les mov test push lcall mov xor sub jne daa sub cwtl pushf sbb xor xchg movsl in stos sub out call ljmp push out in lea mov cmpsl movsb and daa inc push adc lret sbb or pop sbb push dec sub out lret scas mov xchg es inc jne sbb loope mov jmp lds out xchg out sahf (bad) cwtl out jns outsb dec inc dec imul jae sbb and cmpsb and lcall inc lret call call in and push (bad) mov mov adc test jmp (bad) out test add push movsl push xchg adc push test mov dec mov push out add inc and mov movsl cmp xchg rcl popf mov cltd sbb lcall mov mov lea sub test repz mov test adc jb mov and sub and push adc dec aam dec sub lea outsb push mov cmpsb mov repnz xor lea fmul xor adc into into mov into and mov adc cwtl movsb call nop enter dec dec imul insb push mov pushf sbb and aam sub cmpsl push inc cmpsl cmpsl pop mov push and lcall (bad) and adc lods push mov inc inc addr16 inc mov push rcrb inc dec leave imul sub outsl mov adc xchg hlt push mov jae mov jp loope and in and sub jno and jns xchg push test fs es aaa addr16 jne je push cmp jp adc lods mov mov je dec push push insb jb adc fwait push fstl sbb or outsb leave sub add and sub dec int mov test dec sub xor pushf cwtl and pushf mov int3 rorb and cmp stos adc mov mov sbb test in or cmpsb test cmpsl jne mov cmc xor inc inc xor enter rolb pop push mov insl popa insl aaa dec push push mov mov repnz mov fstl imul xor aad pusha roll mov popf adc or push dec push test lret ss popa mov imul xor mov lcall push arpl mov adc adc push mov nop xchg data16 je jo inc inc jne push xor mov test loopne mov (bad) (bad) fsubp cmpsb in mov (bad) ret and lods dec outsb call xor (bad) je sarl mov cltd cmpsb mov xchg or xchg or xchg push adc ficoml sub push push push pop dec pop cmp inc ja aaa xor and aaa cwtl cltd mov (bad) fcmovbe xchg push fsts push aad xchg push int3 rclb insb inc outsb dec cmpsb dec stos dec movsb push push movsb cmc inc mov and in in scas push mul add inc adc sahf push dec mov cmpsb int3 mov pop xor inc xor xor mov or cmp sbb into xchg dec sub dec inc inc push inc dec jns jb aaa push jp imul mov cmp cltd fimul mov or and xor mov and cwtl movsb mov lret mov push test lods cmpsb mov mov aaa push inc rcrl mov mov or dec cltd xchg or adc dec sub lds sub mov inc xchg or sub sbb mov aad daa mov dec fistl call xor push test mov pop rcll mov int3 push jb aam repnz jbe xor je xor push xor push dec lds mov test (bad) lret push stos mov push outsb push push xor pop push dec push ficompl les pop mov inc outsl dec lods push test add cmc test adc adc movsl cmp inc adc nop inc or push inc and cwtl stos mov and fstps xchg xchg sbb nop out xchg jo pop dec ss dec outsb outsl ja push push push jne inc jns fsts test test mov mov inc push adc xor rorl mov adc xor je data16 push xor daa je xor pop xor push push je lds or outsb lret pop sbb lcall into test mov and push data16 rorb inc and mov ror sub dec iret sub sub lret leave push push lods mov cmpsb mov cmpsb xchg lea pop push adc adc adc dec rcll push mov dec scas or mov lret xchg xchg bound js push pop sbb pop int3 cwtl xchg enter mov movsb push shrl pop dec xor mov xor fwait mov cwtl nop mov out inc jne add adc sbb dec lret mov int and (bad) lock push in rorb jno outsl sub push cltd (bad) insb dec add jae inc adc xchg sahf dec bound mov outsl xor push dec ja jno dec xor mov data16 push popa push rorl dec in inc dec into sub or add mov sub sbb loope nop faddl ret adc jp lods fnsave lret xchg and or ljmp and mov sbb and mov inc xor jae sub xor dec orl mov (bad) int lods adc or sbb or cmp sahf xchg pushf mov and mov push inc insl enter test imul es xor mov xchg fmuls cmp or movsl rorl dec int dec scas imul dec or inc das adc inc push xor or mov aam (bad) dec stos stos and (bad) leave test rol dec dec dec add push adc movsl mov xchg je in and mov fistl adc movsb out mov rorl xchg mov xor inc inc popa dec dec dec push mov mov fwait pop or and rorl dec sbb aam dec mov sbb adc push or xchg fwait pop (bad) adc adc fstl xchg (bad) adc dec sbb push sbb dec int3 push sbb pop or push popf or adc sbb sbb sbb lret dec (bad) into dec push pop pop push push lea dec fstps adc push rcrl aam rcll dec aam adc sbb push aad sbb push pop rcll sbb sbb adc pop pop or mov lea ficomp push int rclb pushf push mov fstpl push fcompl sbb push dec or pop lcall cltd fstpl adc adc push rcrb xchg xchg pop rcl or push fcomp pop adc fcoms sbb int push sbb rcl xchg mov lret fst pop rclb push sbb adc push sbb lret fimul dec fsts fst lret push push lcall cltd push fstpl push cltd aam fstl xchg push mov ficoml nop push sbb adc sahf sbb rcrb sbb pop rcl push or rcrb push rcl xchg adc push sbb pop push sbb adc adc adc sbb xchg aam pop mov push xchg dec nop push adc xchg pushf lea xchg fst cwtl push into pop rclb adc or push aam or adc cwtl dec sahf sbb dec fnop pop cltd dec or ficomp lea push push mov mov fwait mov push adc ficoml int3 xchg pop push push push push sbb rcr sbb adc rcll sbb sbb fcmovnbe (bad) pop push push xchg cltd push push push pop rcrb push pop adc fstl xchg aam fcmovnu int3 adc fst fstpl ficom fsts pop xchg sbb xchg xchg push fstpl push push lret adc push push fistpl adc pop rcrl sbb xchg rorb lret rorb push dec adc fcompl mov xchg rcr fnop push fimull fsts xchg push into adc ficompl pop rcrb push adc xchg push adc rcrb mov push xchg pop pop adc adc lea (bad) pushf adc push nop int sahf push rcrl sbb pop rcrb fxch aam fcmovnbe ficom rclb pop popf int3 xchg dec push push int3 sbb adc pop popf push xchg xchg push push xchg push int3 dec push adc aad fnop dec rcl xchg xchg push rcrl ror adc xchg fst pop cltd push dec cltd push sbb fimul mov fistpl dec push or sbb rcl aam push push push push push rcrb push pop fstp dec sbb lcall sbb pop lcall push push pop or popf xchg push pop rclb int3 sbb adc rclb (bad) sbb push sbb xchg or xchg lcall rcll fimull adc push push push push sbb xchg sbb rclb pop cwtl int pop sbb cltd push xchg xchg push pop cwtl rcll or sbb rorb aam xchg fcompl mov pop fcmovnu mov lret inc pop ret mov int daa push xchg es test or xchg dec scas in xchg sub push outsb leave enter dec imul dec sub mov push pop and xchg sub sub dec out call push mov sub call enter lods stos sub imul sub or dec mov sub or xchg mov ret pop stos lcall cmp arpl xor mov mov test mov sbb cmp lcall and adc cmp mov leave lret xor sbb rcrl xor mov (bad) rolb les into xchg bnd sub pop mov fwait sub sub mov movsb mov aaa sbb movsb sbb gs push dec and adc pop shlb jne jbe movsl sbb pop mov add push xchg adc popf or mov adc aad test and add inc lds pop jmp popa mov movsl mov sub imul push je push push inc dec push inc outsb xor dec pop xor push aaa xor push jb bound inc popa push cmp inc adc or push aam or adc adc xchg xor adc add mov or xor bound cmp cmp inc lcall xchg pop push push cmpsl xchg test xor mov dec sub addr16 jb inc jo push je push push imul xchg xchg fst fstpl ficom fsts pop xchg sbb xchg xchg push cmpsl push daa ss push mov arpl and sbb add inc les dec xor inc xor xchg test ja arpl gs push test popf cmp or loope test mov inc push cmp push push inc nop pop sahf mov push xchg pop pop adc movsb aaa xchg in (bad) aam fs rorl xor or cltd in adc pop adc loope xor add inc sub lods add leave lds addr16 xor outsb jne push push inc push pop push xor js mov adc sahf mov mov mov fmulp inc or xchg fsts push push pop daa ja and push inc test test in in mov or movsb xor mov mov and es or push xchg or xchg push subl adc pop or xchg pop push push adc les popa vmovupd bound push push xor inc adc mov or rclb call adcl jp rcrl stos sub jae (bad) xor out flds aad aam xchg fcompl mov mulb xchg jb sub fnstcw lea xchg push inc les aaa xor mov mov jbe xor roll (bad) adc mov and popa popf mov add mov leave leave pop inc in sub ss push push pop inc mov pop xchg pop fnop xchg inc addr16 jbe inc and pop dec adc jns inc xchg adc push push or popf inc or sahf pop push xchg xchg adc xchg adc mov test test inc arpl jnp inc pop adc mov int3 nop bound sbb cmp sub dec or pop dec adc xchg xchg and ror int mov insl inc push je push sbb xchg push push les hlt data16 test and xchg rcrl fmul scas test cwtl mov and cmpsl es es jmp sub xor pop push and rorl cltd bound inc or push fcom xchg sbb adc add hlt arpl hlt inc mov sub sarl test xchg loope in lods outsl or dec sub cmpsb or pop pop (bad) push pop or xor inc js gs mov xchg xchg pop fistl inc xchg fwait subl stos adcl inc gs push xchg dec inc and inc push ss xor adc xchg inc xchg je inc push push or xorl je xchg pop jb mov mov mov dec dec (bad) int3 sub dec xor inc xchg xchg push rorb pop rorl nop push mov push cwtl push dec pop dec (bad) out test mov cmp ret or mov jno xchg sbb stos sbb fwait mov fldl jmp rorl (bad) test mov and sub inc xchg pop push sbb xchg sbb movsl test xchg cmpsb cltd push mov gs dec xor xor bound mov xchg loop insb xor xchg ror lea or mov or dec xor xchg aaa arpl mov int ficoml into sbb hlt (bad) in add push sbb movsb cmp and xor xchg sub mov lret dec dec mov xor dec stos jnp xchg js or bound cltd movsl cmp (bad) sub xchg push fcompl mov (bad) mov mov sub stos cltd mov dec sub enter inc dec out push and leave (bad) or data16 inc popa pop mov sub dec dec push mov xchg sub stos mov inc push xor mov mov mov pushf sbb lret int or ficom xchg divb cmp lods cmp push dec dec ja jp inc jno mov lea pop icebp and or lock sbb mov and dec push cs sub out imul xchg inc mov adc enter mov mov push in jns popa mov rolb push outsb jbe xor popa dec dec outsb inc sbb xchg fsubr push jb sub mov cmpl and pop mov adc int3 lds sub mov sub dec jb push scas fsubs push inc sbb xor cmpsl sbb inc lret rcrl mov or ja ja js arpl or sub jbe sub fs and xchg fistpl fsubr xchg xchg cmp sub shll andl push sbb pop dec xchg jo pushf xchg gs xchg je or xor sub popa push dec dec push push push inc push pop mov or test loopne mov mov ss mov push cmpsb jecxz aaa sub es addr16 push inc push xor dec inc cltd lret rclb and lret test enter dec dec in jns imul (bad) movaps sub gs iret dec test inc cmp jb xor adcb and movsb xor and mov test xor popf call adc adc stos lret xor aad dec inc push js mov xchg jb sbb and dec mov movsl cmpsb sub adc je and out mov aam faddl daa xchg test lcall cmp stos xor and xor inc ror pusha mov mov xor adc mov rorb or rolb test sbbl adc out mov data16 mov movsb shlb push cmc push arpl sbb roll test ss sbb rolb adc push inc and movsb mov mov lcall mov xor mov test movsl and mov and stos cmp sub sbb stos sub cwtl mov xchg fwait cmp sub and cmp test mov test mov mov mov sbb xchg mov ss sbb mov mov cmp sub xor xchg movsb mov mov sub mov mov mov cltd cmp mov cwtl cmpsl sub stos sub mov mov sub sbb mov cmp and cmp xor cmpsb and and daa sbb mov movsl sub test pushf and cmp and mov mov mov xor cwtl and es movsl cltd lcall sbb and movsb mov cmpsl and mov aaa sbb and movsl xor mov sbb and sbb test mov cmpsl sbb mov cmpsl sub test cmpsb and lods sub and and and stos mov cmp mov movsl sbb mov mov fwait and mov lods xchg lcall mov sub pop cmpsb mov xor cwtl xchg pushf mov mov mov sub mov test and cmp ss cmp cltd and lods and mov cmp xchg mov xor and mov mov mov fwait sub and and mov cmp mov mov cltd and mov stos and mov mov xor sbb stos xor xor mov mov cmp mov sub and sub cmp cmp xor test mov mov cwtl and and mov sub mov mov cmp mov test mov pushf daa cltd aaa mov and and cmpsb and mov mov cmp test lcall sbb mov and sub and sub mov stos stos mov cmp mov mov xor cltd cmp pushf mov xor adc mov mov mov mov sub movsl sbb cwtl and pop lods mov cmp and and sub mov stos and sbb mov xor lcall pushf and cmpsb mov cmpsl sub mov cmp mov sbb rcll push fstp sbb rcrl pop popf adc mov rorb adc int3 cwtl pop rcrl sahf pop aam rcrb rorb rcrl lret sbb xchg push xchg fwait sbb dec push das dec call iret dec dec sub lret mov dec dec es mov leave outsl push (bad) stos sub int3 scas or sub inc int3 movsl in lea int push xor xchg xchg out rorl push mov pop and xchg xor dec sbb cmp mov imul dec adc or fwait mov lret bound ret mov arpl mov pop lret mov rorb enter mov cs es popl or das sub sub dec xchg xchg (bad) ljmp imul adc xchg sbb sarl (bad) or mov or fwait lcall jp xchg xor lods xor roll test test pusha mov (bad) lcall mov fsubl mov mov push dec arpl inc inc cmp mov push imul or jmpw dec test and push in xor ret adc les add adc sub xchg sbb push in pop leave cmp imul xchg mov rcll ss mov mov dec int adc inc in dec dec push xchg (bad) jbe ss xor mov inc push xor xchg push lcall add sbb lcall mov xor push aaa push insl pop inc inc jbe jae popa outsb jo push das inc push and (bad) dec pop xchg fldl add sub xchg jmp flds loope inc test mov jo mov mov enter (bad) test outsb movsb ret lods mov fidivl in mov mov mov push bnd lret insb (bad) test mov xchg xchg lret outsb int3 out test xchg in hlt push int3 loopne loop mov jo into lcall xor push dec ja imul push pushf xor test mov mov cwtl and and mov pop pop cwtl fcompl insl dec push sub stos sub or inc dec inc inc xor rolb bound loope or mov xor and mov (bad) int3 mov aaa bound jb inc and mov mov stos roll lret or dec sub movsb inc push mov movsw add cmpsb mov adc dec xor xor and mov pop adc or jb cmp shll inc fldl mov adc xchg scas cmpsb (bad) lock mov shlb movsl mov ss es push outsb and dec xor and aad aam lds fstl pop movsb xchg test push jo dec ja push dec push insb arpl dec dec dec and lret sub movsl fstl cmpsb mov movb (bad) mov je js outsl js lret cmp test fs jae mulb xchg jae xchg xchg shrb dec cwtl rorl inc adc pusha hlt rcrb adc mov aad lcall push or mov movsl movsl les push xchg pop ss push pop sbb leave pop mov mov mov jo push divb jb adc xor jp ret sub adc lcall fs and test adc rcrl test test mov xchg sub loope pop xchg or mov hlt repnz push xchg add jbe mov es dec jns inc sbb xor xor enter lea popa and lret arpl or inc cmp cmp rcll ficomp int3 push sbb imul daa cs push and test test xchg and popf imul (bad) lock mov ss inc dec jo outsl popa inc push inc es cwtl mov cmp lea push dec lret aad dec pop xchg dec or data16 sub inc mov mov lcall lods sub mov jae and dec mov pushf push rcrl movsl add push inc cmpsb cmpsl cmpsl xor xchg push test inc leave lret mov adc cwtl in and sbb xchg into mov lock inc pop dec dec xor adc shrb xchg (bad) out out cmpsl push in sbb stos sbb and cmpsb aaa popa xor and pop dec ficom pop push call inc push divl inc push or stos sbb jae xor and mov loopne inc mov push jo push jns adc xchg rcl int3 push sbb add push xchg xchg pushf dec jmp cmp xor mov int3 push pop pop ficom dec and daa cmpsb adc sub mov dec fwait adc dec cs in or sub (bad) xor and or lret mov (bad) sarl mov sub push pop adc xchg sbb dec dec sub dec dec scas in sub movsb movsl test push push idivb (bad) cs test mov xchg fs cld dec lds mov inc testb xchg test jb mov dec gs xor inc inc cmp push dec xor inc call das or push inc mov cmpsb xchg je (bad) notb cltd cltd sbb add pop je inc xlat je add ss in inc (bad) cmp stos cmp or cmp cmp or (bad) xor and mov pop inc dec popa js adc dec and cmpsb mov mov test sbb es dec test sub push jne es xchg push (bad) adc mov mov or insl adc pop mov and repz aad sub push inc mov popf lret dec pop imul adc push (bad) movsb push push aaa pop and arpl sub imul fsubrl mov inc inc push pop xor mov fcmove xchg fiadd sub or mov (bad) inc inc push je sbb lret stos mov xchg rcr xchg push adc xor mov jns fs xor mov test inc or inc test pop push and adc cltd inc xor pushf sub xchg test cmpsl test leave mov xorl in and mov ljmp repz ficom rorl mov sub popa lret ret adc xchg fwait les mov push xchg xchg popf sbb dec daa or lea mov adc lcall dec (bad) xchg lea int3 push sbb jns push pop adc shlb xor mov push lods int dec cmpsb jbe adc daa test and xchg nop fcompl xchg movsb arpl jae lret inc lcall outsb pusha xchg js dec push jns jbe push outsl inc inc cmp push data16 dec lcall int3 mov sahf push and mov mov cmp push sub nop mov mov adc adc xchg dec push push mov push shrl stos enter out adc imul adc push sub int mov push stos mov mov xor loopne inc dec lods enter adc inc dec cmp mov test lcall lds xchg call mov mov popa aaa jae jno adc mov inc inc jns jbe stos subl adc data16 dec inc adc xor cmp sbb or fwait imul adc (bad) sbb jp cmp dec or mov lret sbb adc pop mov and and inc stos push adc sub or sub or mov jb arpl adc xchg xor jno mov (bad) stos or or cmp ret sub xor (bad) mov and jb pop sarb and xchg andl dec and bound ret and mov sub cmpl sbb or xor dec stos xor xchg jnp mov lret shrb xor dec lcall mov mov (bad) pop mov xchg mov push stos pop pop pop cmp mov mov cmpl ret pop mov mov and jb adc jb cmp mov xchg arpl sub and mov (bad) lret imul and and and mov lret push stos mov inc inc mov xor sbb or or or jb mov sbb or mov push mov or stos pop lret push cltd mov or addl mov mov stos (bad) or or or jno lret jp lret pop cltd mov pop dec sbb or jns lret ret stos jp or cltd ret mov xchg stos or sub or sub sub stos or stos cmp add or stos inc xor bound cmp adcl jb mov sub xor mov pop (bad) ret pop or adcl sub sbbl cmp rcrl or xchg imul pop adc or jp xor stos or mov and imul ret adcl or bound or sub or adc fwait pop jp sbb (bad) mov mov bound or bound imul lret jp and sbb sub sub and or mov bound jae and sub stos adc arpl lret push ret xchg mov sub mov test or test imul mov adc sub adc lret mov lret or xor sbb stos or mov mov stos xchg cmp shlb jae orl (bad) lret push dec mov or cmp push mov mov or rol mov stos inc adc arpl fwait pop stos or adc adc and test bound or sbb mov or arpl sub ret pop pop dec pop and sub xor pop fwait sbb sbb lcall or cmp mov sub xor mov imul push popa ret adc subl jae cmp mov mov sub insb out int3 (bad) es push cmpsb mov das or or scas or sub leave sub outsb sub sub or insb lret or sub push out leave test mov mov test ljmp insb test movaps xchg enter mov mov dec iret dec (bad) sub or test dec sub or lea mov mov out mov into call int dec ljmp inc dec or mov mov jae ret ret and mov sub cmpl sbb or xor dec test out (bad) les mov int3 mov int3 fs test shlb lret (bad) fsubr (bad) in movsb insb (bad) loopne lods bound xchg (bad) mov out scas ljmp lock mov mov fwait xor and daa sub mov cmp mov jmp xchg lods xchg dec (bad) lea enter sub lods inc stos out inc out in or dec sub lret sub insl push or es ljmpw outsb xchg or sub call test mov or stos pop lret push cltd mov or addl mov mov test shlb xchg xchg loop xchg pop mov fsts xor adc loope mov cmp pop jp inc xchg dec aam adc ror xchg adc push in push test mov inc pop aad sbb loopne scas mov dec inc cltd rcr fcompl xchg fistl ja xor xchg xchg sbb pop xchg (bad) lret sbb cmp movsb mov push addr16 inc or pop xchg pop xchg fcoms cmc push add aad mov test xor mov cs cmpsb into outsb imul fwait pop jp sbb mov adc xlat inc les fs xchg push je adc inc ss push xor push inc add adc mov aaa inc xchg fs es ss push lds push adc mov sub inc leave rcr test mov xor jne data16 inc or sbb push int rclb push lret mov lret or mov xchg add (bad) (bad) aad popf or xor cmp inc les test lret push dec mov or jne dec push ja mov or or stos inc adc arpl fwait pop adc out movsb ret mov bound sub mov fwait and test push gs cmp dec dec dec sub inc push xor arpl and xchg pop popf or insb pop push inc inc arpl push push sbb popf rcr dec adc movsl xor adc dec mov or and mov and int3 lods out es in cmpsb (bad) enter pop jnp adc dec aam bound inc popf rcll nop push dec rcrb dec mov (bad) and sbb rorl outsb push insb push insb je push pop xor lret stos inc dec sbb aam mov hlt fiaddl aaa fs rcrl push (bad) in dec sub inc dec arpl pop sbb push sbb mov test cmp test aaa sbb mov sub jnp mov jae mov mov loopne mov out out shrb xchg mov mov pushf sbb and iret dec or dec or sub mov and pop push jno xor push inc dec xor inc insb adc inc adc aam repnz ficomp es xor mov mov test xor push ficom pusha fsubrl push push gs inc push dec inc push inc inc xor addr16 inc mov cltd sbb adc jbe pop cltd pushf fimull dec sbb insb test sub sbb mov mov xchg test mov sbb rcrl pushf sbb push dec lret leave sub dec push call mov mov dec addr16 arpl xor sub inc inc jmp dec imul or test or mov lods in leave sub data16 call adc or jp dec dec je das dec mov or dec enter ret mov mov xchg sbb push daa inc shll sub mov or xor push jo mov mov mov dec push inc mov fistpl adc fnop mov rol lret test pop mov mov mov dec (bad) movsl gs int3 imul inc push jae dec lret mov mov shl dec je inc inc fwait rcr lea push adc mov xor xchg (bad) aam ljmp sbb movsl mov mov cmp test push add or das xor je pop adc xchg xchg cltd rorl xchg hlt (bad) xor xor push inc sbb adc pop xor cmp pop lods lds push imul aaa imul into dec (bad) outsl jno and mov sbb les movsl mov sub ljmp leave sub lea add jb push push scas mov xchg movsb cmp mov fwait test adc (bad) movsb test dec shr rcll inc xor adc shll adc jo insl jp dec xor inc ss xor mov adc test inc aaa les push jae push and jmp and loop ficoml dec or dec sub aad leave mov sub out gs push inc inc inc adc xchg adc pop test jb rcrl and push xchg pop cwtl enter xchg sub gs inc movsl xor mov sub shll enter into test xchg mov cmp stos cmp fs sub leave push mov dec inc fs sub mov push inc xor xor pop inc cwtl push push cltd push mov push fwait lea dec and jae xchg cwtl dec push pop pop add mov dec mov jbe jne dec push dec inc mov mov out dec into hlt and mov cmp dec inc pop jne dec jns mov xchg into pop pushf enter mov in push fcoml retw fsubl test in jp adc leave or push adc lret push sub movsl sbb mov dec jmp sub mov dec xor and sbb pop dec in push mov mov xor test movl shr test sbb and movsl or int insl adc sub rcrl and dec outsb popa push dec xchg xchg xchg lods cmp xchg out addr16 jae push fisttpll and pop inc adc lods into hlt xchg mov mov mov mov cmp xchg and or lods shll mov inc out movsb inc cmp and (bad) push push outsb and sbb dec mov imul push ja stos mov leave mov sbb xor ficompl (bad) cmp lods xchg lcall cwtl mov aaa sbb call das inc in inc out sub call push mov mov dec test push and push pop sbb adc pop or or sbb mov mov mov lods in sub test or enter call dec mov sub fadd inc iret sub in out or xchg cwtl pop push fistl int3 pushf pop xchg (bad) into rolb xchg mov or pushf aad les fstp adc xchg or fadd and loope cltd call adc adc popa leave fldl sbb mov imul pop sbb or inc lods push adc fstl (bad) (bad) adc loope rcr fldl xor adc fisttpll shll fisttpll add in pop sbb or rol fisttpll dec sub rcrl popf lods add or rcr and sub or mov push frstor and mov lea inc lds pushf rcll add cmp in and push add mov mov sbb test enter loope add sub imul cmp inc mov add sub (bad) call dec lods sub test xor loopne fsubrl add or fsts loope or movsl dec sbb popf add popa mov test imul leave cmp cltd sub test fisttpll leave leave and dec movsl mov xor int in adc in mov rcll add pop and test mov dec mov pop push popf adc sub add mov int rcl xor add jmp gs adc or sbb sbb and add aad sbb add xchg imul add sbb push xchg add pop sbb mov add (bad) mov and add int3 int3 aad sbb lods mov mov fnsave add and push sbb imul test dec mov sub mov add mov leave leave sbb mov mov mov in inc (bad) fnstcw roll mov rcll adc xchg mov sbb mov int jmp fs cltd sbb xor loope sbb mov frstor imul test in xchg push call add cltd int nop (bad) inc (bad) adc cmp aad and mov aad cmp mov lds sub lea fldenv dec add push inc test add push in leave imul mov fstp fstl sarl xor add inc aad dec adc xchg cmp adc mov sbb adc leave rcl rcll cltd add movsl xchg xor pop mov sbb ror adc lea in or xchg add mov cltd pusha fadd lds pop add cmp test call and cmp xchg xchg sbb fst sbb push pop or pop fcomp mov sbb push adc fistl rcll dec xchg sbb rcrb aam push aam mov pop adc adc popf push fstl rcl push adc push dec aad sbb dec fisttpll popf rcrl int push mov push adc sbb int3 leave mov mov dec enter or dec sub cmpsb imul dec call mov or xchg cs dec sub ljmp sub or adc inc mov xor xchg xor adc mov add mov lea inc lds pushf rcll add cmp in mov data16 mov pop insb inc inc imul inc jb jno cmp sbb movsl mov xor mov cmpsl mov and mov xchg fwait cmp sub ss cmpsb fwait pushf sbb xchg mov nop xchg fwait nop (bad) dec or dec xchg push sbb dec push ficoml fwait pop rcrb push fcom sbb push pop or rcrb mov xchg rorb aam out xchg mov popa jp ja push imul cmp xor outsl outsb push dec dec push xor push inc pop insb push dec dec popa jne ja pop inc push outsl popaw inc inc push push addr16 arpl and xor jne ja ja jns jp stos and cmp mov leave or add sbb and adc jo ljmp mov push xor dec pop inc xor sbb cwtl adc fcoms fmull int cmpsl or pop sub imul or test insb outsw dec inc adc xchg inc out mov adc adc xor movsl sahf cwtl pop xchg fwait sbb push cwtl fmull sbb enter dec cs dec out or sub jmp inc pop sub mull roll sub adc mov lcall xchg imul inc jp inc dec pop xor push pop dec jbe xchg sbb mov dec into enter repnz and adc daa xchg sub mov pushf rcrl or mov adc stos sub sbb gs aam int3 dec enter and inc push dec xchg xchg inc push mov sbb push pop pop pop xchg xchg dec and and adc cmp xor adc xchg out mov stos ljmp mov mov sbb imul (bad) xor push add fimull jo bound jb sbb inc enter or xchg add mov cltd popa and mov mov shr (bad) push hlt fs dec pop inc inc push inc je dec dec push push outsb pop arpl inc push insb push ja dec pop imul addr16 inc ja xor inc push inc insl inc dec jne xor mov mov mov dec xchg aad ljmp push xor dec push dec dec dec inc sbb sbb xor push xchg xchg pop adc lret or test or jno mov mov movsl gs mov scas insb push nop loop push hlt push pop cmp inc js sub mov ficompl adc (bad) xchg xor addr16 xor xor inc inc inc xor dec and cmp cmpsl lods sub mov mov xor pop push cwtl int adc lcall data16 or inc aam aaa ja divb adc addr16 mov push xchg xor push xchg daa stos xchg push mov rcrl enter popa pop aad mov leave int fnstsw or cmp call (bad) fcompl pushf movsb test jo in (bad) into inc adc hlt sbb push or lret dec out mov aam jbe xchg adc cmc jne rcll push push mov ret mov jp jb xchg pop pop lds mov fnsave ss push xor mov xchg lret rorl and and rcr or push inc ret xor sub push cmp fimull inc dec jo outsl popa and bound sbb pop dec xchg aam mov cmpsb jae aaa fwait enter movsl adc adc repz or or or sub pop sub adc repnz ljmp insb outsb push xchg popa mov outsb leave bound xor imul push ret mov push inc and loop fadds dec inc xor jb and xchg fcmovnbe movsb jae push adc inc pop pop mov dec bound icebp cmp sbb les dec movsb out cmpsl cmpsb gs xchg push data16 mov fwait cmp inc movsl adc mov bound loop (bad) hlt push xchg and inc mov movsb inc movl (bad) mov popa mov (bad) sub (bad) or hlt jo xchg cmpsb xlat adc popl or icebp and insb push dec jae push inc sbb mov xor sarl or push xchg jecxz jae and cmp adc jb lcall mov jbe addr16 xor adc je or mov xchg shll mov push pop sbb sbb mov or insl iret inc or jno leave mov adc lcall inc es xchg adc movsb stos and lea mov push movl test push bound xor mov push fwait lcall dec sub data16 scas fs ss adc lods dec imul cmp out inc sbb cwtl lods sub sbb in sub adc pop lret mov push jb lret adc dec enter lcall and inc mov dec mov (bad) mov bound cmp jp inc sub mov int sbb das or cltd lret ret and lret icebp xor mov test les jae xor cmp mov lock imul dec aam push adc scas sub sub pop data16 jp mov and mov mov mov out jmp adc out adc inc pop inc sub loop jno loope enter inc dec pop inc xor and mov in sub dec dec int3 test (bad) into fimul pop push inc outsb push pop dec and mov and cmp sub and xor lods or lods bound inc xor and roll inc insb inc sbb mov xor mov and adc mov mov pop rorl or aam push push adc int adc test dec cmp dec leave sub cmp andl test adcl add mov adc xchg cs and dec push push mov xchg pop pushf pop adc das sub data16 je push fs mov loope or and mov aam mov mov dec imul jo bound xchg mov mov out push (bad) xchg push mov ror inc sbb and adc mov dec or bound mov mov push cmpsb stos loop popf cltd int dec mov mov adc mov lcall js adc push dec dec pushf dec sub rcll push ficoml and shrb fcoml lcall test mov and sub mov test mov cmp stos mov mov and mov pop mov and cmpsl mov cmp ss mov sbb xor aaa mov and mov cmpsl aaa mov aaa fwait sbb sbb cmp and mov cmp test xor mov xchg mov cmpsb cmp mov sub and adc mov sbb fwait and movsl mov mov cmp mov ss sub cwtl mov cmp mov movsb sbb mov aaa test mov xor sub lods es sbb cmp daa sbb sub cmpsb mov xor es sbb sub xor stos cmp mov xor sub mov mov sub mov and mov lods mov cwtl sub cmp aaa mov cmp aaa mov sbb and mov sub sub sub and and mov xor mov mov sbb cmp cmpsl mov movsl pop mov cmp cmp and cmp lcall mov and mov sbb xor xor sub cmp mov xor movsl mov xor mov and and and cwtl cmp mov cmp fwait cmp mov aaa mov xor cmp sbb xor stos mov and cmp mov mov mov mov xor mov sbb movsb xor mov xor movsb mov test sub and and cwtl mov sub mov sub stos cltd cmp mov mov mov sbb stos stos and mov mov mov and cmpsb mov aaa mov mov sub cmp mov xor and sbb and stos sub cmpsl xor xchg test cwtl xchg mov sub mov sub pop mov sbb sub sbb mov sub sbb mov cmp mov xor cmp mov movsl xchg mov sbb mov mov mov sbb fwait cmpsb mov cmp mov mov cmp mov cmp sbb mov cmp sbb test xchg stos mov and cmpsl stos mov mov fwait mov lcall xchg lods mov sbb and mov mov xor test xchg push mov push pop fistpl sahf push push rcll fistl rcrl push (bad) push push push pop rclb rorb (bad) test xchg das inc xor imul push xor dec arpl jbe jp and ss mov sbb xor aaa mov and mov fisttpll pop pop pushf fwait int rcll or mov mov lods out out insl dec (bad) push sub insl dec cs inc outsl sub or mov lods out dec out dec movsb les inc mov push mov sbbl or cmp adc in inc popa push insb popa jno adc popa sahf push sbb lea or enter je je xchg push pop push cmc add adc sub and or imul mov and lds inc sbb xor add pop lds leave in dec push inc or test mov popf add xchg xor sub cmp xor adc sub mov mov jb (bad) cmpsb pusha mov inc dec xor outsl inc push popa push dec ja push outsl push xor ja imul popa push ja push inc dec dec inc ja cmp push sbb sbb and mov sbb mov mov mov cmp cmp and cmp xchg sbb push aam fsts xchg push adc inc mov data16 adc arpl sbb mov sbb pop sub xchg inc inc push and xchg mov adc and mov mov adc jnp jnp mov sbb or pop fwait xchg inc int3 call ljmp sub cs add adc addl mov sbbl add test lea test enter dec inc jo pop xor inc addr16 xor xor arpl inc and sub test sbb int3 cwtl xchg pop adc cwtl fst aad nop push push push dec rclb adc popf (bad) adc push pop sbb rcll rcl push sbb or fwait popf xchg dec lret dec in leave or or push and pop test inc adc adc out cmp jmp inc adc test pop int3 in insb test xchg cmp dec sub js sub pop outsb jne jb push inc outsl inc xor xor cmp mov movsl mov popf sbb (bad) in cmpsb loop loop cwtl lds mov cmpsb mov cmp mov mov cmp scas dec into out sub (bad) daa test xor push xchg or pop mov sbb xchg movsl xor rcrl lods gs iret inc sub mov xor test and pushf mov mov mov cmp mov mov mov fwait cltd cmp mov mov and sub mov cltd xor and and cmp mov stos xor sub mov sbb mov cmp sub movsl mov cmp and sub mov mov sbb and pop mov mov mov sbb sub mov pop mov mov sbb and mov adc and test sbb mov mov pushf mov and sbb mov mov cmpsb fwait mov mov mov mov mov sbb cmp test and and movsl xchg test mov mov aaa sbb mov fwait sub cmp mov sub movsl mov xor mov daa test aaa xor sbb sub sbb mov sub xor sbb daa sub sub sbb sub xor sub and cmp sub sub mov mov sub mov aaa sub sub ss cltd sub mov and test xor stos cmp mov mov stos sbb movsl mov mov mov mov mov mov mov test test mov movsb mov mov mov mov sbb xor xchg xchg movsl sbb mov mov and sbb test xchg lods sbb cmpsl test mov mov and mov mov cwtl mov cwtl and mov mov mov test mov mov and mov mov xor mov cltd sub mov cmpsb daa sub mov mov mov mov sub cmp lcall stos and mov sbb cmp mov movsl cmp mov sub xor sub stos mov test mov cltd xor mov sub and mov mov mov and lods and sbb test mov mov and mov mov cwtl daa and daa test mov cmpsb xor mov mov mov mov cmp mov mov lcall cltd mov mov and mov sbb movsb xor sub mov cltd test mov mov xor mov and sbb mov xchg mov cmp sub cltd sbb sub mov sub sbb xor and cltd mov mov mov sbb ss mov cwtl fwait cmpsl fwait cmp mov mov sbb mov cmp mov mov and mov and sbb mov mov sbb mov mov cmp mov mov mov sub mov mov sub sub and mov mov cwtl and mov mov xor mov cwtl mov lods and mov sub sub stos stos pushf cmpsl mov mov and and and and xor and cmp cmpsl xor cmp mov sbb and mov xor and and mov mov mov sub lods and and cmp adc cmpsl mov mov xor mov mov and mov cmp cmp cmp lods pushf pushf cmp and and fwait es xchg pushf cmp mov mov mov mov cltd xor cmp mov daa sbb cmp sub mov cmp mov fwait cmp stos cmp mov cmpsl xor and mov xor and xor mov cmpsb mov movsb lods cmpsb sub mov movsl mov mov mov mov cmpsl mov cmp test stos mov mov mov test mov and movsl xor mov and xor cwtl mov xor and cmp cmp mov mov and mov mov mov movsb fwait mov pushf cltd mov mov xor mov mov mov mov mov sbb sbb and sub sub mov xor mov mov xor adc movsb and movsl mov cmp xor mov fwait sub mov fwait mov and mov cmp pushf pop mov mov mov mov xor sbb sub mov pushf aaa fwait and mov mov mov and test sbb movsb mov mov sbb lcall cltd mov xor mov cmp stos and and xor sub and movsl mov xor stos xor stos sbb mov movsb and mov cmp and sub mov sub sbb mov mov cmp lods mov cmpsb xor sub sub movsl cmp mov sub and xor sbb mov mov and and and mov test sbb mov adc xor and mov sbb stos cmp sub cmp xor and sub and xchg mov cmpsl test mov test lods and and sbb cmpsb mov fwait pushf cmp sub mov cmpsb cmpsb mov mov movsl pushf mov cmp mov mov mov cltd xor mov mov mov mov ss mov mov xor test mov mov mov mov and ss and mov xor sub mov mov pushf mov mov cmp stos mov mov cmp movsb mov mov xor sub sbb lods sub cmpsb mov cmpsb mov cmp mov and xor mov mov xor cmpsl mov mov cmp xor xor and mov cmpsb mov and mov mov cmp fwait xor movsb mov movsb cmp movsb cltd mov mov mov fwait mov sub cmp and mov mov lods mov mov mov test mov cmpsb cmp sub cmp test mov sub and aaa mov mov xor and mov cmpsb mov mov adc mov sbb stos and test movsl mov and mov and mov aaa sub mov movsb daa cmp mov mov mov mov cmp sub mov xor cwtl mov mov sub mov xor sbb and mov and sub pushf daa xchg lods sub mov xor and mov mov sub mov mov mov mov sub and xor mov mov and movsb cmpsl mov sbb xor cmpsl xor xor adc xor and xor mov mov mov mov xor and mov cmp sbb and mov mov sbb mov mov mov mov mov cmpsb lods cwtl xor mov lcall cmp mov mov sbb lods mov cmp mov mov mov aaa cmp xor mov cltd stos sbb sub stos and mov sbb cmp xor mov mov sub mov sub and mov cmp xchg rclb fcom into pop push aam popf fcomps pushf sbb push sbb push cltd push push cltd (bad) push mov dec int3 popf xchg nop push pop adc push pop xchg pop pop xchg xchg or aad push push pop adc push nop push sbb rcl pushf adc fistl lcall push push adc xchg nop push push pop rcr pop fcmovne int3 sbb dec sub inc or sub int3 sub dec dec sub cmpsb lods inc out imul ret xchg mov jnp lcall dec mov leave mov lcall and inc fcom cmp add mov data16 jb ret les push call outsb hlt fs push push fidiv mov xor dec xor dec outsb dec js mov rcll dec cwtl dec popf ljmp push inc (bad) jecxz gs xchg repz add ss aad push jne adc push movsb movsb cmc and addl pop jb cmp sbb ret xor xchg push sub stos mov rcll fisttpll int pop xchg xor xor hlt shl push nop pushf lods fsubrs movsb (bad) les mov xor cmc gs adc stos dec adc stos or mov (bad) (bad) mov push or mov stos sub lcall mov push dec ret ret lcall cmpl and cltd mov stos dec xchg ret sub pop mov fisub adc xchg cmp enter jmp sub call pop mov xor mov (bad) mov aaa and inc fidiv scas (bad) call pusha (bad) pusha pushf mov repnz (bad) repnz movsb call repnz inc cmp dec cmp daa and and test mov cmp mov cmpsb and push fstps pop inc in mov push imul addr16 dec inc and mov in aad sub push int3 stos xchg out out pusha cmpsb (bad) mov les mov addr16 push push push cltd xchg sbb xchg lcall dec sub test push fimull imul popf or aad mov adc nop mov adc xor ljmp cs lea inc push inc jns dec dec sub cmp add sub pop insl dec xor dec nop mov push mov lret mov lcall mov inc pop pusha pop lcall mov pop shrb mov mov outsb mov mov out xchg jo mov pusha shlb cmp mov mov mov inc or mov push es movsl adc mov pop (bad) jb adc (bad) leave adc out es xor fwait mov mov sbb ror sub sub cmp inc addr16 adc dec sub add and nop sahf ljmp pusha xchg mov arpl inc lcall popa sub sub outsb inc xor stos stos pushf cmpsl mov popf adc aad or add cmp rcl sub lock in xchg mov call jo xchg lods rorl mov shl mov mov and fs adc jp ret rcrl sbb or inc inc pop adcl push push arpl outsb push adc adc cmp lret arpl and int int fs leave rcll sub or xor adc sbb add loopne outsb inc ja sub inc xchg or es mov push push test es and xchg and ja cmp les push dec pop jne ja push insb jo push jno push aaa xor dec sub dec push push inc inc cmp jno cmp dec dec and xor mov cmpsb mov xor and or fwait push (bad) lods sbb fsubrs xchg sahf fdivs (bad) and push and test shll dec insl cmovb mov leave pop loope loope dec and mov xchg lock push outsb rorb dec ja cmp and lret pop dec adc fimull cwtl stos xchg and xor push adc insb cmp sub adc xchg lret ss inc xchg xchg jb mov cmpsl mov pop (bad) cwtl mov jmp das adc daa xor mov xchg push pop pop adc sub or out mov push test add adc out xchg (bad) hlt pop push jno mov fldenv call mov lods ret movsb data16 xchg jbe dec insb inc xor mov or and xor fwait mov dec adc adc insl xchg mov xchg jbe mov jae inc and push fs cmpsl add data16 or sub add mov rolb xchg nop xchg xchg daa sub fadd imul push dec push inc xor dec jp cltd nop mov js jne imul test or xor addr16 pop jno or stos or pop dec mov rorb pop inc pop inc insb dec dec and sbb sub cmp test adc lds and bound aad xchg ret push fcoml mov dec xchg in outsb hlt pop mov sbb or scas test call sbb mov (bad) push aam sbb sbb aam scas or insb dec adc xchg mov mov sbb sub xchg and mov adc push xchg int3 enter movsb mov mov outsb inc daa add sub into test int3 out xor dec jns xchg jmp lcall ret mov mov cmp rorl mov call inc push and jne xor sub data16 (bad) fnop outsb into nop out mov xor dec xor xor jae mov popf dec fisttpll mov jns inc inc insb jae dec and xchg xchg push out mov jae dec jns push mov fstp rorl pop dec push pop (bad) push nop push push rclb sbb fmuls dec cltd or pop sbb popf xchg pop pop rcll push cltd xchg fistl mov sbb cwtl push fwait or aam adc aam fsts xchg pop push rclb pop xchg pop push lcall mov push adc fwait fwait xchg push rcll push pop pop push adc cltd dec pop (bad) push aad fcoms fwait xchg rcrb pop push adc pop xchg xchg xchg cltd adc adc ficom pop pop sbb cltd rclb or dec dec sbb xchg push pop dec push adc rclb xchg adc (bad) xchg adc rclb xchg push adc mov fcoml fistpl cwtl xchg fcomps push push pop push adc adc sbb rcl cwtl aad fst sbb rcr int rcll fisttpll adc rclb pop sbb pop sbb sbb (bad) adc rorl pop mov pop nop push rorl push pop mov xchg push pop lea adc lea push or fistpl push xchg adc adc fcoml xchg push nop push or dec adc pop sbb pop cwtl push push dec sbb rclb pop fcoml sbb lea xchg dec pop push push pop xchg ficomp xchg int3 fcompl push pop sbb adc cwtl push (bad) mov pop pop pop sbb dec sbb ficomp dec aad adc int pop push mov xchg push or sbb fsts push rcll adc xchg adc pop pop sbb pop xchg rclb nop pop rcrb ror into adc or ficompl adc ficompl nop xchg adc ficomp adc adc pop adc rcll push (bad) ficom aad rcrb pop lcall pop rcrb push aam cwtl push cwtl aam pop rclb push pop adc push cwtl rorb pop pop xchg push push push dec rcr rclb ror rcrl xchg push pop xchg dec push xchg pop pop mov mov push fistl push or sbb int3 pop xchg push pop pop rcrb dec popf xchg push dec lret xchg sbb rcll pop pop fwait adc xchg adc ficomp push fcomps push adc xchg fwait rcrb xchg xchg sbb rcrl pushf popf rcrb fistl fisttpll adc lea nop xchg push push adc rcrl pop push adc xchg (bad) sbb cwtl rcrb push fcoms pop fstpl (bad) push mov push ficompl pushf dec (bad) push xchg fcoml pop popf push sbb xchg mov sbb lea xchg rcll push rorl pop popf pop cltd fwait lea push adc (bad) sbb adc lret rcl sbb sbb lea pop pop sbb xchg xchg aam push aad adc or cwtl rclb sbb fwait push xchg nop push fcoml fcompl dec push nop push pop or cwtl pop dec sbb dec rcrb rcl push or adc rclb nop push pop fmull rclb fimull adc adc xchg push adc xchg cwtl rcrb push adc pushf push fstl dec pop fwait pop rclb push push rcrl aad pop pop pop aam adc mov rcrb dec push or adc xchg push dec rcll lea xchg push adc push adc push lret fst push pop pop sbb nop push xchg aam mov sbb sahf dec pop rcrl int3 rcrl rcll pop adc mov sbb push lret fstl rcrb cltd rcrb popf mov or fwait dec sbb adc adc adc fstl ficomp pushf push push push nop aad (bad) aam pop rcr pop sbb push dec pop adc adc fistpl adc pushf rclb sbb pushf sbb aam push dec int lea push nop push pop push aad dec lcall adc pop mov pop aad rclb or push adc nop (bad) pop fcmovnbe push xchg xchg nop aam aam xchg push push push pop rclb or lcall rcrb ficompl xchg aad sbb fst int3 sbb (bad) pop push int3 adc cwtl fistpl dec adc rclb pop xchg mov sbb fcmovu rclb int rcrl rclb or push mov push push into sbb dec fisttpll xchg (bad) push cwtl rclb push pop or aad push adc pop nop fst push dec adc ficom push nop push push push push fistl push adc push rclb lea rcrb push push sbb sbb adc dec fstps push push xchg fmuls fstps push push fcompl sbb push fwait xchg dec cwtl rcrl fistl dec sbb int mov push sbb push dec push adc fistl xchg push fildl jecxz adc push nop push push rclb sbb fmuls dec cltd or pop sbb popf xchg pop pop rcll push cltd xchg fistl mov sbb cwtl push fwait or aam adc ljmp cs sub or inc or es adc inc xor push push push test xchg and xchg jne data16 es xchg pop xchg inc test and cmpsb inc jae push in adc test les mov fwait sub imul mov adc adc jns shlb lcall in outsb dec sub or (bad) dec dec in sub sub sub sub or enter push outsb jmp je jae hlt inc inc xchg je mull add je hlt addr16 dec xorl pop mov stos ret cmp mov cmp add and mov (bad) or sbb sub ret sub loope leave enter leave inc adc (bad) jb mov jo pop inc inc inc xor dec dec cmp test xor movsb mov cmp xor cmp sahf lea xchg dec pop push push pop xchg ficomp xchg int3 fcompl push pop sbb adc cwtl push (bad) mov sub dec dec test test sub (bad) xor jne push je inc (bad) aam aaa and aam mulb test adc and mov mov shrl push and leave add mov loope popa mov xchg lods dec movsl leave pop dec sub and sub cmp stos sub xchg xchg pop adc aam cmovbe or mov das es dec sub mov cs sub or sub sub cmpsb mov xchg mov lret pop jnp or pop jp leave (bad) inc mov mov pop push ret mov shll lret push jp cmp movsl xor xchg lods fwait cmp lret dec push lods in lods movsl call (bad) hlt movsb test inc popa jae cmp mov aaa sub xor fnsave dec dec inc data16 test (bad) mov xchg inc pop and xchg xor movsb jb inc or jae sub adc push sub cmp and push jne outsl pop dec xor rcll xchg fcoml dec stos push imul xchg xchg test sub test mov arpl xor ss inc daa xchg mov sbb sub lea rcll mov push mov mov int3 push lea ljmp ja xchg push push and cmp lds movsb loope adc (bad) mov dec lods mov inc inc and xchg sbb (bad) or mov dec enter fs es push movsb xchg test pop xchg mov or push push ror sub sub cs mov and or jmp ret inc sub sbb sub out dec ss push inc and xor sub popf xor outsb addr16 push fs adc adc lock outsb fs mov sub xor cmp inc aaa push fstl ficomp mov nop fcomps aam dec pop adc or fcom mov inc push insl pop inc push inc pop fwait and and push aad dec lcall xchg jecxz jbe cmc push xor inc xchg and mov sbb mov jb xchg jp rorb sbb dec out call or ljmp or or ljmp mov imul mov sbb inc dec lods sarl rcll (bad) into rcrb hlt mov je push xor jp test ljmp out scas push sbb sub test push bound hlt push mov stos cmpl sbb ljmp push sbb test cmp mov data16 loopne out les xchg data16 xor and gs inc inc (bad) push inc xchg adc jae test shll stos mov mov mov mov mov stos xor stos cmp cmp and movsb sbb xor stos xor mov adc movsl and aaa cmp movsb mov sbb mov cmpsb mov mov mov sbb cmp xor sub stos lods test mov stos mov ss mov sub cwtl mov sub aaa sub and mov cmpsl xor mov mov xchg mov test xor and test xor stos cmp and cmpsl sub and mov movsl mov mov ss mov cmpsb xor cmpsb cmpsb adc mov mov xchg mov cmpsb mov sbb sub mov pushf and mov mov pushf cmp mov lcall mov sbb mov mov mov mov mov and xchg xchg mov mov cmp stos cmp mov sbb mov stos and sbb cmp cmp test xor lods movsl mov xor and mov adc mov pop mov mov xor mov mov mov mov xor sbb mov mov mov lods fwait fwait stos sub cmpsb mov sub sub movsl adc xor sub aaa mov test cmp mov cwtl ss cmpsl mov cmpsb mov movsb pushf cmp daa xor mov cwtl mov stos mov cwtl mov mov xor mov mov mov mov and sub sub mov xor mov mov and test cmpsb mov mov and cmp aaa cmp aaa sbb mov mov mov mov mov xor sub xor stos cmp mov cmp and mov cmpsb mov mov mov mov fwait mov mov lods test cmp xchg mov mov mov stos mov mov cmp aaa sub sub mov xor mov mov pushf xor xor mov xor mov sbb test daa cmpsb xor and cmp mov cmp xor stos test and mov lods sub mov xor sub sub daa stos sub test sub xor sbb mov stos fwait mov cmpsl mov mov mov cmpsl daa sbb mov xor mov mov and xchg mov mov movsl mov and cmp xchg movsb sub and mov sub mov lcall and mov daa sbb sbb sbb sub xor adc movsb and sbb adc daa xor mov mov mov cmp test lods ss stos and cmpsl and mov sbb xchg mov sub sbb and mov pushf pushf mov fwait xor sub mov sub fwait mov mov xor mov mov mov mov xor sbb cmp mov mov mov and mov mov xor mov lods sbb xor cmp mov mov mov cwtl mov xor mov mov sub cmp cmp lcall sbb sub and mov and test sub sub sbb stos cmp xor xor and mov mov mov mov and xor lcall xor movsl sbb mov and mov mov and sbb mov xor mov mov stos cmpsb and cmp sub stos mov cmpsl sub and sbb xchg mov mov xor cmpsb cmpsb lcall and and pop mov xor cmp mov pushf stos and movsb and and mov cltd mov mov and xor stos test and and and mov movsl xor and mov xor fwait cmp mov movsl sub aaa sbb cmpsb and cmp sub mov mov movsb and and sbb mov mov and cmp mov mov xor and cmpsl sub movsb mov es sub mov and lcall sbb and mov sub mov sub movsl cmpsb sub stos and movsb mov test cmp mov and mov and sbb mov mov mov daa lods xor movsl xor sub cmp mov xchg cltd and movsb sbb cmpsl xchg mov mov movsl cmp xor sub sub mov aaa sub cmpsl xor and mov mov cmp sub and cmp aaa mov and mov sbb test mov sub xor sub test mov sbb and mov mov lods stos mov sbb mov mov sbb test fwait and aaa sub sbb and cltd cmp mov sub mov lods stos mov mov mov mov mov test mov mov test mov xor test mov and stos mov cmpsl cmp pushf mov cmp mov sub lcall xor mov mov mov aaa and daa cmpsb mov sbb mov test sbb mov cmp test xchg mov cmp mov mov cmpsl mov xor and adc aaa mov fwait and and sub and and cmp mov mov mov cmp mov xor sbb mov sbb mov aaa mov mov pushf lcall mov cmpsb mov cmp lods cmp sub sub and sub pushf xor mov stos mov mov mov mov mov cltd xor mov cwtl sub mov mov ss mov mov and xor sub sub sbb cwtl sbb movsb mov mov mov mov fwait xchg mov movsb mov mov daa and daa and mov xor mov mov cwtl sub cmp and mov sub mov and movsl mov dec call cs and ljmp ljmp sub push dec stos dec jae push stos bound pop stos push and sbb stos mov ret dec jnp push or mov lcall jb rolb inc sbb mov or cmp stos adc orl or jb mov sbb jno and mov cmp pop dec lcall sbb inc arpl mov bound xchg and xor push push cmpl cmp jp arpl stos arpl adc jp cmp mov ret movsb call (bad) out xchg (bad) sahf (bad) jb (bad) lock mov out cwtl int3 loop cwtl push out test xchg stos mov (bad) rclb (bad) (bad) cmpsb pushf push daa mov mov ss pop cmp pop inc cltd fisttpll mov dec push adc ja and add inc cmp mov dec dec mov scas inc data16 inc or mov call lret sub cmp xor rclb mov in in repnz test sbb test push scas scas push int3 lods sub mov mov xchg cmp adc adc mov pop mov mov xor mov mov mov in dec iret or out sub pop es sub inc push push push imul leave stos and nop loopne scas (bad) fsubrp jo mov out push es sbb or inc dec dec push dec js je jae dec xor dec inc push imul adc pushf lret mov fwait or sbb mov xor xor sbb sbb cwtl rclb dec mov and sub shll mov stos sbb or and mov sub sub lcall nop (bad) fsubr xchg push in hlt inc xor int int loope add mov test push rcll jns inc dec jbe dec pop and fwait mov sub xor mov lods test cmp enter insb test mov stos mov mov in cmpsl arpl lods xor pop sbbl mov inc mov lcall push mov adcl pushf mov sub enter or mov stos mov jb inc adc bound mov xchg pushf in inc inc pop xor mov ljmp push inc push xor out xor stos adc into mov adc xchg mov xchg lret data16 in es push movsb xchg test cmp inc dec and or and and sub xchg addr16 jb test int call test pop jns or mov mov rcll shlb (bad) push movsb and sbb adc cltd mov sub rcrl rorl mov ret arpl push and into cmpsb lods insb inc es lods rorl and bound cmp add cwtl cltd xchg dec ljmp jne repz or insl dec fs inc cmp sub in out or xchg mov mov pusha mov fadds test mov outsb lcall sub mov dec and shll inc push push pop inc js jb xor jo xor pusha xchg xchg or mov cwtl call movsb jb mov sub cmpsb aam loope shll sbb call mov or cmp lret fs sub xor xor lret lods mov outsb (bad) nop hlt xchg inc xchg sahf sbb push or push mov (bad) jae stos and and mov lret pop or insb xor lret nop popf pop add ret add lcall inc push inc push push push das push data16 dec ja xor and inc jne imul (bad) push pushf fcoms aam inc adc pop aam leave or push dec insb mov xchg (bad) and arpl or loopne inc xchg rcrl push into sbb addr16 and aam and test fs daa movsb xor mov add sub dec pop outsl inc insb inc adc sbb or xchg (bad) retw add in popa and int3 mov movsl call ret fwait rol xchg dec push fimull push test movsl cmpsb sub stos and or sub dec push arpl adc dec mov xchg push mov cwtl and cltd mov jmp (bad) jmp push mov jnp leave jns and adc cmp test mov dec push ror stos sub stos adc enter out (bad) call cmpsl addr16 je cmp dec cltd push adc adc gs jno addr16 imul pop inc inc mov int es dec sub or insb mov fs push pop pushf adc dec adc xchg fcoms xchg xchg aam push push cmpsb (bad) xor in adc fs enterw inc push shll mov adc xchg leave rol test frstor lods stos mov dec sub push lea out (bad) ljmp mov push xor mov and int push test mov in mov leave out and jbe jne ret cmp nop lcall and xor mov adc ret jo lcall sub mov push push xchg imul pop pop repnz sbbl mov mov dec insl xchg push lea or xor addl adc loop insb mov fs int3 dec out sbb push jb lcall sub outsb icebp cmp jb adc mov mov sub sub arpl subl mov lcall shrb sbb fwait sub lcall sahf inc cmpsl jbe mov mov fisubl inc arpl adc ss mov test mov sub sbb or xor inc cltd dec push fstl cltd rorb fimul cmpsl xchg je in add push xchg mov int test inc push push adc (bad) lret out fsubs xor mov push adc and and arpl cltd stos sbb and xor in les and xchg sbb icebp cmp mov movsb dec mov xorl lea xor mov mov sub jbe adc dec das das push xor mov lds jp insb gs mov arpl inc mov pop push pop adc inc inc test dec int insb cmp fs and (bad) adc or data16 xor and jbe xor inc push inc xor dec inc add and sub jne and mov mov mov lds fstl rcll cmp cmpsb mov dec dec sub int mov out pop sbb or inc addr16 lods cmp bound fs ja mov add in push cmp mov insb leave cltd mov test xor inc je dec push jne xor insb out push adc insb dec or lret mov xchg (bad) mov imul dec imul mov cs (bad) lret mov out push lea dec test (bad) sub push xchg sub test ljmp (bad) es or sub sub int xchg lret sub sub stos sub sub sub clts imul sub or insb dec out lods test dec test dec stos dec mov dec call mov gs jmp stos sub insb lea dec mov cmpsb dec movsl in outsl push or leave sub cmpsl invd insb lods mov mov out sub dec call (bad) dec insb add lods out cs dec call push das sub addr16 sub dec scas cmovs or call sub push call (bad) insb out sub push es and mov sub insb out mov sub popl gs test push dec mov sub xchg call ljmp sub gs dec in call mov iret dec call dec dec pop or or call or into inc (bad) sub push dec ljmp mov outsl dec push mov mov sub or sub imul cmpsb dec sub xchg or sub outsb movl sub sub push test jmp dec dec xchg mov mov daa pop es (bad) lret dec inc mov dec dec dec sub cmpsb cs or sub sub mov lret sub or or push mov test lods mov (bad) leave lret dec outsl inc mov cmpsb leave leave or (bad) lret or cs sub out dec call sub dec sub stos xchg sub test or mov or out out movsl out dec out or es sub sub stos ljmp enter push dec dec mov enter das dec or inc test outsb int outsb into or sub out cmpsb push call mov lea lea gs cs out (bad) call jmp push in call cmovle or inc mov push imul cmovle int3 push dec (bad) push call sub outsb outsb dec out call es es cs test (bad) dec push or inc cs dec sub lods int3 sub inc outsw sub sub mov lea dec imul movsl imul dec popl out or dec sub sub mov mov test mov sub ljmp sub or sub sub int (bad) dec or push or iret sub sub out stos mov leave mov cmpsb lods outsl dec test test dec dec cmovbe sub dec data16 es out lret sub addr16 mov imul pop ret mov mov sbb sbb mov lods xor cmpsb xor lods cmp cmp xor ss sub mov cmp mov cmpsb xor lcall mov sbb mov mov xor sub sub xor lods test movsb and test and cmp cltd mov cmp aaa mov sub xchg mov lods mov pop mov cmp and sub and mov and sub lods xor xor fistpl cwtl fmul or adc push pop xchg cwtl lcall rclb pop rcrb xchg adc push adc push sbb pop push xchg sahf push push rclb cltd fcoms push push push dec sbb mov fcoml pop rcl push sbb dec sbb xchg sbb push push push adc rcr int adc mov fstl sbb push xchg adc or cltd rorl int aam rorl sbb out movsb in js fs push jp dec outsb jp inc das jne jb js pop js addr16 inc dec jb bound cmp inc push push outsl push dec jp inc xor jp je pop jb ss mov adc sbb push fsts pop fisttpl or push sbb push lcall or pop cwtl push cwtl push adc (bad) push nop xchg dec or push sbb nop dec push dec fstps xchg xchg (bad) xchg xchg nop xchg pushf xchg pop fwait dec pop aad adc pop adc sub dec lret sub mov outsb sub int lret dec call (bad) leave lret dec outsl inc dec ss dec push imul pop inc mov jb lds or mov cltd xor ror int3 in pop aad sub xor and int fstp (bad) mov jmp xchg inc aad and jmp push or sub cs in out or int outsb into or dec daa sub cmpsb out cmpsb push call ljmp xor xor and mov dec xchg rclb jb nop mov cwtl in rclb mov out insb pusha hlt pushf pushf (bad) lods hlt in data16 pop into xchg into nop cmpsb int3 mov out mov xchg data16 ret jb mov loopne xchg cmpsb aam jmp popa dec dec pop sub jns dec and fwait mov and dec cmpsl xor and mov mov push inc (bad) sub mov adc mov enter xchg mov mov mov push dec gs push das push xor insb inc imul dec push inc dec insb jne dec jae jne arpl dec inc pop inc push jp dec push imul lods insb mov addr16 mov imul dec sub dec int cwtl push fst rclb xchg fisttpl adc adc mov test xchg sub inc xor xchg dec dec and lds pushf dec or aad mov pop pop xchg adc pop rclb push sbb int pop xchg into pop shlb jb xchg xor or fcomp add adc sub enter xchg add mov pop loope xor inc push xor pop lods pusha aam popa sub fdivrl push imul inc aaa aaa cltd test xor rcrl fldcw aam sub dec add xor dec ss push push inc dec popa dec dec js lea or out outsb push dec push push adc test movsb les and test pop push je cmpsb jne and inc lds adc test testl addl data16 adc (bad) movsb fs and aaa ja fs movsl gs je xor xchg push movsb xchg addl (bad) (bad) xchg mov sub test mov sbb fsub or movsl imul dec in in push inc jo inc inc push je inc outsb push cmpsl cmp sbb lods and fmull push and sbb in repnz lock mov adc xchg int3 pop push sbb out outsl cs insb dec fstps pop mov es mov mov lret test mov xor sub lods test sub lret (bad) or or jae mov mov mov fnop in loopne int3 loopne cmpsb mov aam xchg (bad) mov xchg push xchg xchg enter mov mov out jb test xchg cmpsb inc push xchg xchg xchg es or sub cltd or mov loope xor dec sub lds xor push inc add cmp jnp xor jno sbb in and or into nop mov int3 xchg mov ljmp ficom jo ret ret mov (bad) in mov nop xchg ret addr16 inc movsl test ss mov hlt daa je and and mov xor sbb fwait xor sbb fmull inc push pop mov or insb (bad) fs adc imul outsb outsb dec imul gs inc dec jne imul inc and ret jno xchg push pop xchg lcall aad push or nop xchg shr out insl insl push xor pop inc imul insb xor inc outsl je insb push jbe inc cmp xchg push lea aam sbb xchg popf int3 push fcoml aam sbb sahf nop push nop aad dec push xchg adc sbb dec out or data16 sub xor push inc push xor mov mov mov movsb xor dec dec outsl xor cmp cmp movsl sbb xor movsl xor cmp and mov and mov test lcall and fmull xor inc jp cmp dec jne rorl pop xchg sahf adc adc push int push push sbb sbb fstl sbb pop push push aad rcll pop sbb sbb test mov or aad fs mov es into mov adc mov insb mov or dec out mov push dec call out sub xchg fs pop xor fs movsb adc mov push (bad) movsl jae sbb int3 ljmp (bad) pusha shrb xchg sahf (bad) out (bad) pop xchg cmpsb fdiv and mov pop int3 mov or int sub sub sub inc aaa add jbe mov sbb sub xor sbb out loop push mov mov nop mov jb repnz fcmovu xchg callw push stos loopne mov into and and es inc and push (bad) fsub add fisubl and lcall imul mov ret mov inc andl inc mov inc insl dec and stos sbb xchg mov inc xchg push push cmp stc adc push push cmp sub xchg adc je pop xor cwtl xchg sbb xor push xor mov in fldenv inc xchg test mov xor lds push sub inc or sub stos dec cltd or rcll cwtl mov test nop lret cltd popa mov xchg int3 nop outsb xchg mov inc inc push hlt push adc inc pusha int3 inc addl pop pop xchg enter (bad) jo lret (bad) mov push lcall jb lcall jb in lock mov ljmp xchg jb into (bad) lcall (bad) out into (bad) in outsb fs out rclb lcall out mov call cwtl xchg call fsubl (bad) rcrb rcr sahf out outsb xchg ret push fsubrs (bad) fsubrs stos push xchg (bad) out mov sahf ret out test xchg xchg mov lock (bad) out (bad) mov lret cmpsb fs enter xchg mov fsubrl mov scas hlt (bad) xchg in pop (bad) call xchg (bad) xchg cmpsb ror loopne in xchg test out (bad) push jo nop loop mov pusha xchg test (bad) jo out mov (bad) push hlt xchg mov mov pusha loopne xchg mov (bad) mov test xchg out (bad) mov out bound mov cwtl shl repnz mov mov push mov xchg (bad) mov xchg push mov lcall xchg call outsb mov mov (bad) mov mov (bad) xchg mov nop mov pushf int3 fsubrp (bad) (bad) repnz pop repnz out mov jb mov pushf lock mov pushf mov out repnz ljmp (bad) mov out push mov mov lock scas ljmp mov sahf push lret mov jo rorb out mov xchg sahf movsb (bad) mov xchg data16 jb cmpsb int3 into into lcall into jo mov test into mov call cmpsb enter (bad) mov in lock (bad) mov xchg stos mov ret shl repnz outsb xchg mov (bad) xchg pushf hlt test mov out sahf nop (bad) xchg (bad) insb out xchg hlt into lock out in (bad) lcall enter cmpsb (bad) into nop out test enter mov fsub les mov nop mov (bad) sahf mov bound (bad) mov jb fsubs hlt outsb lock mov mov mov out in nop out pusha mov rolb out mov data16 out xchg mov ljmp push enter lock pop cwtl (bad) into mov in rorb test lods out cmpsb xchg test out fs loop int3 lock loopne in pusha (bad) in scas hlt scas mov lret fiadd faddp xchg ficom lret lret fsub stos (bad) fmuls fidiv aam pop push rcl (bad) (bad) jb xchg mov call (bad) enter enter (bad) fmull (bad) mov lret enter stos (bad) scas fsubl in mov ret scas jb (bad) jo cmpsb bound ljmp into lods (bad) fcoms scas ret pop ret mov cltd push pop pop (bad) sbb adc pop rorl int3 adc pop adc adc sahf sbb pop pop cltd pushf sahf pop fcoml push pop xchg push xchg or dec pop fcoml into (bad) out or and sub or mov mov adc inc jecxz xor xchg in testl mov stos andl inc or mov or mov or nop (bad) rorl int3 out or and adc push push xchg xor inc es xor je adc in xchg inc adc movsb jne je xchg xorl (bad) jne movsb movsb adc xchg xchg movsl inc daa xor mov and bound cmpl adc fwait (bad) (bad) mov ret mov mov and test cwtl rol or xchg lods fs xchg test push sbb lcall cmp test mov cltd mov mov xor test insl sub push movsl push call lea stos mov ljmp data16 lods int push push leave ljmp dec sub insb mov es int3 int call out sub cmovp mov leave es in ret stos mov lcall jp or or adc lcall pusha fabs mov pop aad pop inc add test mov sbb mov xchg outsb dec dec push imul insb addr16 dec imul lret mov sub lods sub loope adc test into mov call cmpsb enter inc popa jb js dec gs dec push pop rcl push xchg inc (bad) mov push xchg aaa xchg inc sbb movsl and and into movsb pusha lods mov mov out sahf nop dec inc ss inc dec jae fs js push push inc and cltd aad dec lea dec mov jmp mov lods sub or sub dec sub mov sub mov das or es sub repz push lds jnp sarl int3 jmp scas addr16 ret lods lcall pop rcll dec rclb (bad) sbb rcr aam push cwtl mov rcrb sbb push pop adc sahf adc pushf push or and inc cmp and stos and popf dec fstpl dec sub into pop push dec cmp pop roll int or jmp push adc movl mov and mov ficoml jb xchg jae sub sbb sub bound jbe insb inc xor mov lods mov pop adc push xor (bad) mov int3 push xchg aad cli and popf pop lods mov dec mov xor sub inc and fwait cmpsl pop mov enter leave mov adc test push push pop jae lret shll nop xchg adc ja jne push sub push jae cwtl fcoml dec inc or in lret xor movsb sbb jb data16 test mov es xchg cwtl aad xchg and mov lcall mov aam lds sub cmp jbe and sbb push (bad) out addr16 push inc data16 adc cmpsb stos and sbb sbb fsts rcrl into insb ficom jno xchg mov rcrb inc mov out call dec sub enter mov mov inc adc scas (bad) lock ret pushf repz aaa mov sub add mov sbb nop pop adc cwtl fs push inc xor imul mov push int push (bad) or inc and in mov mov (bad) dec push inc xor cmp mov inc push xor (bad) xor inc adc xchg fsubl mov ret xchg push xor mov cmp stos cmp push stos jns pop mov cmp inc loope mov pop mov into mov push jns jne dec inc and movsb xchg pushf xor xor mov mov cmp mov push xor dec push inc adc test xchg fldt cmpsl xor inc inc xor sbb stos imul ret and lcall shl mov dec dec imul dec adc push sub repz xchg xor sbb adc mov loop mov lret out push dec pop outsb cmp jno inc push jp inc pop inc inc sub lcall push mov fistl dec push push insb es sub inc push sub rorl dec mov or push push xchg adc push lods rcl nop lds int3 push and push push inc inc sub cmpsb mov pushf sbb dec ljmp pushw dec xchg mov or int or inc inc orl xchg cltd dec les lds xchg test (bad) adc ss cmpsb test sbb sbb push sbb or sub pop or movsb xor inc mov arpl mov insb jmp xor dec dec inc xor cmp ss hlt mov pop pop lret test mov dec xchg lcall and and inc cmp mov xchg (bad) mov xchg movsb into es xor es lea mov dec (bad) and das push mov outsb inc jbe push pop leave xchg inc cs sub sub lea sub les bound and xchg xchg rorb cwtl mov inc and pushf sbb mov lods dec das or gs inc adc xor xchg rorl mov dec aaa inc push dec mov dec inc mov into inc ljmp inc cmp xor xchg lods movsl and stos sub inc xor inc mov push sbb mov lea mov lds repnz (bad) pushf aam lock adc xchg popf les and xchg dec pop xchg (bad) lret sub sub sub les gs xor pushf sub popf sbb int and data16 pop test mov cmp mov push push pop push aad sbb loop xor adc xchg lea movsb aam loopne push imul push imul mov lea xchg dec dec xchg lret or xchg pop adc adc (bad) enter (bad) insb sahf aam es xor ret stos sub xchg sbb insl dec push outsl jns xor rolb xchg loope adc nop into sub push inc pop push xchg into test pop inc inc addr16 outsl dec dec enter push mov lcall or cwtl mov and mov (bad) cmpl xchg sbb or fdivs push es es popa sub xchg cltd sub cs dec xor cltd in aad and push adc mov pop xchg cmp in popf adc lods push cltd in xchg into mov aaa jb mov mov adc int3 mov rorb roll push movsb jo dec ss int sbb dec call dec and mov cwtl push bound mov aam push fadd scas xchg fs xchg push movsl addr16 and xchg push sbb bound adc adc inc xor add xchg push and and imul jae inc outsb push dec xor push dec inc inc jae inc insb push outsb je dec jae outsb outsl push jp jne insb dec dec imul inc xor xor js inc jae aaa pop xor popa push aaa dec xor jne jp cmp dec inc xor jae jp sub dec dec push dec jbe inc jae inc cmp arpl inc je imul dec dec dec jbe fs jno arpl xor push jns imul inc outsb sub push gs inc bound inc inc xor push popa insb pop dec inc imul imul push push outsb xor pop imul xor push inc push xor xor inc insb addr16 pop inc ja inc cmp outsl inc pop popa push inc inc inc dec push gs push push insb cmp inc dec pop jno xor push insb insb insl inc inc imul inc push imul jns dec inc dec dec inc inc fs dec push xor inc inc dec je dec push aaa dec jne inc inc inc push xor push dec inc arpl gs inc insb inc dec imul popa inc inc push outsb dec push push push inc xor inc inc cmp xor inc js pop inc inc dec cmp push push inc jne ss inc addr16 inc push js outsl inc xor dec inc push push inc push inc bound dec jne fs aaa sub insl inc inc arpl xor pop gs ja dec das push sub insw inc dec outsl inc dec insw xor outsl push inc jae jae dec dec jno xor xor inc dec dec push imul aaa push inc dec das dec jne xor dec addr16 outsb push push bound data16 inc inc inc addr16 imul jp dec dec je inc xor outsb pop dec push insb inc push inc je dec jne jae insb push push inc jo fs dec jno data16 addr16 push push fs jb push je push inc push insb dec dec jne jne cmp dec push jbe dec xor dec das inc inc gs data16 data16 cmp arpl outsb insb xor inc inc insb inc jp pop inc push arpl push inc inc inc dec popa inc push ja jo dec inc push dec cmp inc fs inc push inc jae ja fs inc push push inc dec jae dec push aaa push inc inc xor push push push addr16 inc inc push inc inc inc je arpl cmp push outsb aaa dec ja dec fs inc push bound jne inc jae push xor xor inc aaa ja dec push push jns gs addr16 fs dec inc fs ja jno addr16 outsb inc jns dec cmp js addr16 outsb inc jp sub jns inc push inc aaa inc jne xor inc imul jbe dec js cmp dec ss inc xor push insl addr16 dec ss inc cmp outsb xor jne push imul xor fs dec outsb push xor pop dec addr16 aaa dec dec imul dec jp inc dec jne dec pop jns push dec addr16 jbe cmp bound jb inc cmp jbe ja xor xor insl insb jae inc jbe inc push pop imul push outsl xor jbe inc jo inc insl xor imul push push imul insl insl inc inc das sub imul inc arpl cmp dec inc das jae xor push insl inc inc jne dec inc push inc jno inc cmp push pop inc xor jo inc insb jp push inc inc inc fs push pop ret xor mov pushf test mov mov mov sbb test sbb mov mov mov cmp sbb mov mov cmp and cltd mov mov mov mov cwtl and mov cmpsb and sub fstl push ficoml rcll cwtl push (bad) mov popf push fsts mov dec sbb push lcall dec rcrl mov push or lcall push pop adc aam pop (bad) adc sbb sbb popf rclb push pop fcmovnbe fsts push xchg push pop pop push lcall push pop push mov cwtl push fistpl sbb pop fwait aad fstps push nop xchg adc rcll xchg sbb rcll pop aam push adc adc mov rclb dec rcll int3 sbb adc dec sbb fisttpl push xchg pop xchg xchg aad xchg push int adc or push xchg mov ficoml dec xchg cltd aam adc push pop rorb adc xchg nop xchg push push adc cwtl popf push popf push pop sbb fstps dec adc cltd pop xchg sbb dec rorb mov outsl push inc jae jae dec jno xor xor dec dec push imul aaa push dec das dec jne xor dec dec outsb push push bound data16 dec inc addr16 imul jp dec dec je inc xor pop dec push insb inc push inc je dec jne jae insb push push inc jo fs dec jno outsb addr16 push push fs jb push je push inc push insb dec dec jne jne and cmpsb lcall mov cmpsl mov mov mov gs and mov jmp xchg mov rcr scas (bad) mov loopne lcall test mov lods mov repnz enter stos lods mov mov fcmovbe cwtl cmpsb stos shrb sbb dec add loopne push mov sub adc add int pop roll inc adc fldl push dec in and adc lds or xor cmp xchg or int lds aam leave xor jmp pusha lods loope fsts inc adc cltd gs jmp or fldl2t xchg add aad mov pop aad pop lods mov adc lea sub andl xchg je out mov cmpsl xchg (bad) movsb test je addr16 test jbe and xchg divl push sub or (bad) test shr arpl cmpsb repz xchg xor ja cmpsb rcll out jbe xchg hlt repnz sub mov in imul xor pop int3 loopne movsb fiaddl lea add sbb mov xchg mov fcom mov jb mov stos call lods lods nop les mov and mov dec jp ss pop or inc sarl ret push inc xor rcrl pop pop roll inc cmpsl data16 test xchg and aaa daa xorl lea frstor fmul imul and in pusha mov ljmp dec jmp outsb into inc scas push stos sub (bad) xor sarb lods lods mov int aad inc lcall enter lods adc mov leave dec int3 dec mov sub enter xor cmp push (bad) rcll dec mov push xchg mov dec mov or adc adc push movsl push adc jb xor adc push and inc mulb xchg xchg inc push push addl or xchg mov xchg adc dec stos leave dec xchg or in enter jmp sub (bad) sub ljmp push xor movsb mov mov je push mov test and xor and adc xchg sbb and mov mov or dec mov mov xchg and inc push xchg mov and cmp bound inc push enter sahf inc arpl xchg mov gs and mov xchg inc hlt and push mov mov inc adc mov xor js xor aaa push imul cwtl pushf mov sbb cmp mov lcall daa sbb push in dec data16 into scas dec (bad) xor jno gs jne ja mov mov scas and sub push cwtl int3 rcl into adc push xchg nop rcrb adc adc push adc sbb pop (bad) mov fistpl dec xchg in arpl push push inc insl jp inc jo inc dec fs xor dec addr16 dec push ja xchg mov pop jb xchg adc pushf pop pop cwtl push adc mov sub sub mov sub data16 js pop cmp bound pop je jns pop dec inc dec push insb cmp dec imul mov xor fs and jae nop pushf rolb adc and lret cmp mov push xorl sbb mov les and gs dec xor outsl jbe xor lcall or dec cmpsb jmp sub xor rcrl xor sbb bound insl sub push imul daa add xor mov sub mov outsb ss jbe stos or dec data16 jo push push dec pop dec bound ja jne push adc or insb lret xchg inc roll cmpsl cli push mov mov xchg lcall (bad) nop (bad) into movsb fcomp mov loope adc xchg xchg xchg sbb dec rcrl dec inc push pop and dec dec imul les xchg xchg add imul nop hlt outsb insb ret mov adc xor rorb xchg push xchg adc adc sbb movsl cmp lea push rclb enter ret jb mov popf sbb mov pop out out in test fs and lret xchg push es push je arpl daa es cmp mov aad dec (bad) mov pop adc (bad) fmul fmull arpl inc jmp xchg mov xor dec inc dec adc adc (bad) push arpl push mov loopne in mov ret dec nop pop xchg xchg adc pusha fs and je in push jae pop adc (bad) mov and rcll xchg xor xorl icebp cmp xchg test scas push fcoml push xchg adc and sbb test pop mov xor jae push jb pop jae mov or loopne push xchg popf mov inc push imul cwtl sahf sbb mov sub jb or or jb ret bound adcl arpl dec and in test fisttpll and xor lcall test les dec sbb das mov rcl ljmp int push hlt cmpsb jae andl movl mov dec dec mov cmp daa add sub stos mov dec fs sahf lods bound inc test mov and movsl mov adc lods shll add dec loop mov pushf jb cmpsl les sub rcrl sbb or pop xchg sub ret mov xor sbb or fwait or dec mov pop ret xor jns or mov xorl (bad) mov mov push jp or xchg mov (bad) or sbb or lcall stos and imul cmp or lcall sub cmpl dec sub ret pop mov cmp stos inc shrl and (bad) dec mov xorl stos inc jae mov jnp sbb imul or cltd pop xchg dec jnp or or xor push mov inc ror sub jp adc or jnp mov mov cmp or push (bad) rcll sbb jb mov mov sbb xchg imul sub mov dec jp and rorb mov mov mov pop mov lret jp arpl or push dec ret and xchg mov adc push mov mov pop jns or dec xchg ret sub mov push adc lcall bound cmp mov cmp mov inc mov adc or and pop mov stos push jp mov shll test cmp fwait jns jnp mov and bound mov bound stos xchg mov dec push mov cmp jp adc sbb mov leave mov or xchg rcll lcall and mov or pop pop mov ret mov sub stos stos stos or mov lcall lret mov or pop push xor pop mov or imul orl xor mov mov sub or ret adc mov jnp and or arpl mov rclb lret inc mov dec xchg or or push push mov lcall lret pop (bad) push or rcll sub or or popa ret jb jb stos bound sbb jae stos pop arpl and or (bad) arpl sbbl jae inc mov mov push or ret sub fwait cmp xor adc (bad) xor mov and mov or cmp adc and inc jns lcall or and mov pop or pop adc adc or fwait jns orl or sub push jnp or sbb sbb inc or sub or or xchg lret xor mov mov mov fwait stos xchg mov mov sbb cmp jns cmpl imul lcall rcl mov mov push lcall cmp jnp xor dec inc mov test orl pop mov adc sbb rclb cltd fcomps aam push dec sbb (bad) insl sub call lods lret and enter add lret sub or (bad) out add inc mov sub in out inc int3 dec and jmp daa sub xchg out sub mov sub into push lods mov sub mov sub daa je fs pop push hlt xor xchg push in test xchg and notl test add addr16 add mov stos inc jae mov jnp sbb imul enter lods int3 lods leave movsl mov test mov test ret nop mov lret push inc popa js imul inc xor dec inc dec je xor sub xor mov sub stos cltd sub test test mov xchg cmpsl mov mov mov sbb cmpsb xor movsb cmp mov es mov sbb mov xor mov mov sub mov mov mov lods and push xchg pop adc xchg cmovbe in call or call imul and mov lods cmp mov mov inc adc int3 data16 mov jne push xor inc dec dec popa xor dec movsl (bad) fcoms fcmovne rcrb xchg push push int pop fwait mov pop xchg pop dec popf roll dec dec dec data16 dec push and add daa inc adc pop jne ja xor mov push xchg and test add (bad) inc in xor add adcl xchg ja les push xor pop mov or imul orl xor mov mov nop push dec adc lods out xchg inc jbe je jb js jns inc insb outsb pop jno gs inc pop push inc cmp lods sbb adc pop xchg push mov push or inc sub insl outsb or movsl cmpsl and push cmc je in xchg push or xor push dec dec fs inc and es cmp frstor inc lods push inc inc inc fwait cmp xor pop push test xor arpl dec inc xor sbb dec add sub out or inc add pop adc adc sub adc roll test dec je cmp cwtl pushf lods sub mov adc (bad) ret int3 xchg out pusha hlt mov repnz test ljmp scas aam (bad) les ret xchg loopne xchg loopne (bad) xchg fisubr outsb pop jp dec dec jb adc rcll dec call dec or push call cmpsl sub repz and (bad) cmpsb mov leave cmp cltd push inc or mov mov mov inc and data16 scas in ret mov lock stos sub mov les adc mov sub lods xor dec or push gs in aaa ja fs jne and pop test enter jmp or xor data16 je inc xchg (bad) mov sub sbb xchg dec cwtl out (bad) data16 jb inc dec push and mov dec aam lds add xor enter lock xchg out mov imul nop leave mov je jb mov adc push inc je dec mov lcall outsl cs mov jne inc aaa mov mov mov popf adc ret lret insb xchg inc push push jns insb xor jne inc dec jae inc xor cmp sbb lods xor dec or or xchg es push es sub sbb xor jno ret cmp sub fwait cmp mov lret lds (bad) push mov lret ret push mov cmp mov hlt call mov push xchg inc xor cmp push push je xor pushf sbb sub adc inc and mov inc inc and pushf aaa sbb daa sub in (bad) push ljmp roll inc cmp sbb mov xor lea push sbb int3 xchg les xchg jns sbb popf xchg adc data16 xor adc jbe inc xchg push xchg add fisttpll loope mov sub cs bound arpl or int out inc imul pop push outsb shrb cmp cmp sub dec out cmp imul fimul fdivl je and data16 and inc and popf dec xchg push push ss dec push adc cmpsb mov adc fcoml adc xchg push js lcall data16 test adc pop inc pop push icebp sbb mov lea ss xor mov sbb mull inc and xor inc ss push outsl dec pop bound sbb xchg push adc push add icebp adc outsb mov pushf mov in mov jns pop ss ja pop xchg lds dec jo insb dec push xor or dec into lods dec sub movsb inc movsb mov mov repz mov inc mov or sbb push (bad) dec push fnop pop daa test and or dec dec test mov ja and push and cmp push bound adc lds mov test daa add mov xchg and adc mov mov lds push and out test movsb lret mov push mov and lods xor add inc inc push js push jge (bad) in into ficom nop mov mov xchg test sub ss popf sbb adc xchg mov jo pop or pushf mov in enter jp push jne xor out je xor mov pop inc daa mov cltd mov shrl sbb or pop push fstps mov data16 insb (bad) lret adc lcall lret lret leave (bad) mov sbb xor test sub and fsubs (bad) inc pop push xchg and daa sub sbb pop leave adc mov nop mov pusha repnz mov push bound dec inc dec and xchg push aad fsubl cmp adc xor inc and sub cmp inc mov cmp lea or jb mov mov imul stos inc stos push mov outsb call insb in stos test lea lock adc inc push cmc adc inc stos arpl and fwait xchg push xor sbb fmuls push sub or sub sub inc int3 outsb int3 out cwtl xchg loope mov iret push outsb sub dec (bad) gs insl jo insl xchg or and push test jp xchg and lcall aam cltd inc popf dec gs xor jae sbb pushf xchg inc fisubrl inc outsb inc outsb pop push push pop inc inc inc sub mov test mov or mov cmp cmpsl mov sbb enter dec and adc pop sbb cwtl pop or push xchg xchg push sbb push aam xchg push pop xchg popf pop xchg rorl ficomp push push popf push pop aam rcll sbb xchg or adc push or (bad) sbb rclb push push sbb push pop pop sbb dec aam xchg dec rclb sbb pushf sbb rcl push or cwtl xchg rcrb dec sbb dec ficom fcompl rcrl cltd xchg mov int fstl push pop mov adc pop fnop push int xchg ficomp aam fstpl fwait rcrl push adc push aad sahf xchg push fcoml push adc sbb push pop xchg fwait sbb xchg fstl (bad) adc adc adc sbb lea popf fwait sbb push cltd push fwait adc sbb xchg rcrl push rcrl int xchg lcall rcl adc dec pop nop push rorb ror adc xchg adc push pop rcrb adc (bad) push into pop sbb fcoml mov rcrb pushf dec rcrl rclb push dec ficom pop pushf push fwait cltd int3 nop dec dec fnop xchg pop adc adc pop rcrb into push adc or lcall xchg pop aad rcll push or push dec sbb sahf pop xchg xchg dec adc xchg adc adc push fnop push sbb xchg push push dec xchg push pop ficomp or nop fstp rorb rclb aad pop adc rorb lret fcmovnu adc rcll ficompl push adc int int push push push cwtl int xchg xchg sbb xchg pushf dec or sbb rorl or cltd adc pop lcall cwtl xchg sbb fcmovnbe mov dec sbb adc adc push pushf ficoml xchg xchg push push dec push adc mov xchg xchg adc rcrl sbb rclb lea cltd fistpl pop pop pushf sbb fcomps or lcall pop rclb dec ficoml xchg pop cltd int dec adc nop aam pop cltd push sbb rcrb xchg dec pop aad mov push push push pop (bad) push push push xchg sbb (bad) xchg push push push sbb popf aam rcl fimull fwait aad adc rorb rclb fwait push mov mov push fwait or cltd push adc push push fcoms xchg push fwait adc pop xchg xchg cwtl aad or pop push sbb push ficompl mov fnop push sahf pop fst push mov adc ficompl ficompl pop adc sbb cwtl (bad) int3 aam xchg adc push mov push int3 pop pop sahf mov push ficompl fistl pop lea or lea adc int3 push or mov push adc push adc mov push push pop xchg push pop rcl sbb pushf lea sbb sbb adc dec aam push lea push fwait lea push push nop mov adc pop ficomp fmuls nop push rclb int fstl adc cltd ror fcompl ficompl nop rcll rcrb dec pop pop pop rcl push dec rclb fmull or push rcll fstps dec popf aad lcall cltd or push sahf pop pop xchg xchg rclb push ficom rcrb dec fistl push pop nop fcompl fwait nop push mov inc pop ret xor or push xchg xchg push sbb push aam xchg push pop xchg popf pop xchg rorl ficomp push push popf push pop aam rcll sbb xchg or adc push or (bad) adc sub das or inc push mov fs je push xchg adc addr16 je adc xchg es xchg ret adc adc aaa xchg (bad) ja aam out dec or adc mov shll lret sbb or mov mov mov popa ret pop mov shrb (bad) or sbbl stos shrb jae mov sbb adc int3 sub enter sub mov stos int sub dec or lods dec sub mov or mov dec or dec or or daa sub sub push mov mov call push mov (bad) je add and je ja mov mov adc shrb pop mov ret cmp imul or and pop inc imul sbb ret push cmp mov jae leave mov sbb mov stos or xchg sub and adc sbb fmuls fs outsl js aaa pop inc dec dec inc ja inc cmp push inc ja inc fs inc and movsb pop xchg mov and sbb xchg int int bound bound sub mov cmp sbb mov xor xor xor and cmp sbb adc adc dec insl dec femms into lret dec dec mov (bad) and xchg push xchg xor and mov mov call outsb jo push popa je inc xor fwait xor dec ficoml xchg pop cltd int push dec imul or adc xchg xchg aam jne cmp sub xchg sbb popf aam rcl fimull dec outsl and inc pop sub rcrl sbb adc fsubrs ljmp push popa inc push dec insb push outsb xor jb dec arpl dec je movsb (bad) (bad) lea push sahf pop fst push mov xor jmp lcall (bad) out data16 mov test mov mov xor xor jp popa inc push adc xchg lea out bound push insb inc inc push inc push inc das xor mov xchg aam rcrl push out in or ja jne test mov jmp fcmovbe bnd fs in mov push cltd ror fcompl hlt in xchg cmp mov inc loop data16 daa push xor inc and xchg mov nop push xchg xchg cmovg sub test sub movsl insl enter inc xchg movsb aaa push cmc es xchg jae rcl imul push inc mov xor int3 aad fs cmp sub test aam jbe inc sub mov mov mov mov scas ljmp push inc xchg mov aam movsb inc mov mov lcall or mov dec cmp rclb dec fucom push movsl inc fldl (bad) cmp out (bad) ret jnp and dec sbb xchg rorb int sub insb jmp lods mov adc mov mov mov push mov int3 dec (bad) call pop es jb lret mov or mov fwait or call insb data16 outsb in outsb dec sub or mov xor jb jbe and adc rcr or rcll pop lea mov xor cmp sub rorb out jno push jne inc sub sub mov and adc fwait or enter ljmp and xchg lds sub and cltd mov pop push sbb push rcll xchg sub mov mov popa push insb imul xor (bad) cmp push test aad push int3 dec or push cmp cltd jmp (bad) lods test call mov push xchg ja mov xor xor xchg pop xchg pop push pop push data16 inc xchg addr16 and aad adc adc test cmpsb push pop pusha push cmc adc sub in mov (bad) jae leave jp in test fnsave in shrb das das imul and mov insl cvttps2pi jns xchg sbb push push adc mov inc pop push daa xchg cmpl dec or mov dec sub xchg out lds push sub or mov sub mov mov mov dec or fs data16 inc sub sbb fcom pop or xchg add push cmpsb test data16 into (bad) dec ss dec imul adc (bad) test stos sub call and out es repz or adc pop mov sub cmp xor push enter xchg and repz mov sub sub dec mov inc rcrl ret fwait push adc mov xchg sub aad mov push imul adc lcall jo push xor (bad) dec adc pusha shr data16 in push xchg and sub push or insl out cmpsb (bad) jp inc dec jns and arpl stos test loop mov jb inc inc push jo cmp jb adc xchg adc fsub loopne mov inc sbb cmpsl sbb mov pop dec ficompl lock data16 push pop pop lret push mov adc cmp mov insb sub push stos lods call sub stos in call or push inc sub sub and push adc aad ror inc sub mov je push push cmp mov movsl mov mov mov inc dec mov adc adc push enter dec out pop imul dec jae popa mov xchg xchg push dec xchg lret xchg or jns or push inc and cmp sub fnstsw mov sub sub cwtl int3 ljmp bound dec outsb xor outsb jo xchg daa xchg xchg aaa and lret cmp xchg pop mov dec sub and xor test add rol in mov sub xor cmp enter sub pop push sub sub sub in dec stos es inc push xor mov sbb insl push adc inc and popf or gs sbb dec push outsb inc xor dec ljmp cmp cwtl cmpsl mov (bad) jo cmpsb data16 ret mov dec mov aaa aaa add and sub inc test cwtl xchg fisubl dec outsl adc and shrl aam es icebp xor dec mov dec popa push ja jb data16 dec out push insb dec pop pop adc adc (bad) out arpl push inc add and sbbl mov fsts leave roll mov inc sub aaa daa cmp inc and lcall imul pop es push cmp orl insl inc addr16 inc and cmpsb cltd stos lods xor inc cwtl lods inc lds pop xchg push inc (bad) nop inc pop fs cmp in and push inc inc xor xchg pop xchg inc add data16 and and inc push jbe xchg add push in adc arpl and les ret xchg push xor daa xor pop and and gs adc xchg test xchg aaa add xchg adc jbe and push inc test ss push and and repz inc test and inc mov jne fs add bound xor mov arpl inc push movb out arpl inc es (bad) jne add ja ret inc cmpsb push push mov xchg addr16 mov adc adc xchg xlat movsb out and xchg push adc data16 out movsb mov push je xchg cmpsl xor adc adc jbe in addr16 je mov add mov cmpsb je arpl not es daa cmpsb ss pop and adc mulb xchg out addl and cmpsb xchg inc aaa aaa je push rcll es add data16 je xchg push jae add mov pop xor ja push adc gs les and cmc xor les push mov inc push cmpsb aaa adc adc cmc add xchg je adc xchg adc xor adc je adc fs movsb push push je push cmpsb xchg xchg add push repz je cmpsb push and cmpsl inc daa je and push push cmpsl adc in adc xchg xchg xchg arpl inc xchg aam aaa push inc inc test xor inc inc arpl je ss addr16 and les push xchg and and data16 and mov aaa je aaa add notb daa inc mov and in inc xchg cmpsl cmpsb je mull movsb xchg addl daa cmpsl xchg aaa adc hlt xor xchg aam adc xchg adc inc data16 adc and mov xchg in adc fs jecxz jae xchg ss xor push push (bad) adc cmc push testb ss adcl cmc aaa je movsb test in je ss xor je and push inc inc ja adc xor notb adc daa xchg ja adc es xor out mov adc data16 lds out inc movsb xchg adc adc xchg aaa xor xchg and xor add adc inc inc gs xchg test xchg inc xchg jne inc je je inc fs les (bad) xchg cmc movsb xchg xchg movsw push je xor test data16 xchg xchg xor adc roll inc inc je je repz cmc adc and inc inc mov push adc adc inc mull push and add and jbe xor inc and mov add les pop inc push daa data16 jae xor je adc gs data16 cmpsl push mul inc push and push xor push les xchg adc xchg pop and add and and cmpsb xchg ja jne and pop inc adc stos xor sbb cmp cmp and xor and mov test and cmpsl and stos mov sbb and cmpsb sbb sub mov sub cmp mov cltd mov mov and mov mov fwait mov mov sub and lods mov sub mov sub mov lcall test cmp xor sbb stos cmp fwait stos sbb mov mov mov and pushf and lods mov xor xor lcall mov xor movsl mov cmp stos mov mov cmp sub cltd sbb mov stos cmp mov sbb cmp mov daa sub sub stos mov cmp cmp sbb mov and cmp mov mov xor mov cwtl daa and movsl mov sbb test sub sub mov and mov pop adc (bad) lds add loope popf and gs gs leave fnsave imul imul add fs dec lea inc int3 es dec sub leave stos sub daa sub push mov (bad) test xchg enter insb xchg cmpsb insb call dec dec or in test xor imul imul xor pop cmp xor push insb das popa xor jb inc xor push dec jno jp addr16 dec jp imul xor xor outsl inc inc dec dec jno xor cmp jbe push inc dec inc jbe je imul jb jno jne dec push jno inc push inc jno inc pop dec xor insl push inc pop insb jno inc popa insl popa pop pop inc inc dec push outsl push xor cmp dec xor dec push ja dec inc dec dec cmp outsl dec inc addr16 jae xor push push push dec inc inc inc fs js popa xor dec inc push push inc inc dec gs adc stos adc mov lret cmp cltd mov mov mov mov jae and lret pop xor sbb xchg popa lcall adc pop adc dec adc xchg adc adc adc pop dec (bad) xchg push dec lcall pop into adc rclb rcll (bad) mov xor rolb adc jp sbb mov test lret jp imul bound inc inc xor dec imul xor xor mov pop or mov jp mov cmp subl test adc stos lcall pop fwait cmp lret inc xchg mov jae mov dec cmp popf mov pop pop adc push cltd sbb pop pushf sub cmpsb mov dec mov dec dec dec sub cmpsb mov in or mov cmp dec push push dec inc insl gs xor dec push push mov adc cltd adc pop pop or push or nop pop dec pushf adc rcll xchg nop xchg dec (bad) cwtl mov mov mov adc les mov pushf mov (bad) mov xor lea adc push inc or jb dec push jbe inc dec inc jne imul dec jbe data16 dec dec push jbe dec inc sub pop xor xor bound das outsb xor xor movsb sbb and fwait mov cmp xor sub daa push loope mov xor and fwait stos mov inc push adc inc test ja mov aaa ja xchg data16 lds int pop or cmp xchg sbb fistpl test sub enter dec (bad) and sub mov or dec mov adc pop push sbb mov nop push sahf pop sbb push dec sbb adc push and pop lcall and sub push (bad) adc int int3 add xchg inc test xchg daa sbb xor inc push pop inc dec xor jns push push jb jae sub fmul pop push lea sbb cwtl ficoml push mov mov pop mov mov out mov xchg mov stos call pushf test jno push cmp inc shll xchg aam test lret in nop in arpl xchg push sub adc sbb cmp or ljmp inc imul cmovge lret push daa or jmp jne jns dec jno ja insl insb jae cltd leave cltd movsb fld les lret outsb or cmpsb push mov lret les das jns adc popl imul mov xchg pusha stos bound xchg adc sbb cmpsb loop (bad) mov and sub mov mov out and cli push stos or jb dec inc xchg mov rcll mov cmp mov push shll push xor xor ret pushf dec dec xchg and rcrl push push mov dec das or outsb (bad) mov cmpsb jmp ljmp jb xor jno lea enter lock outsb lock ljmp push aaa addr16 or jp pushf xchg xchg xchg xchg mov pop dec rcll in fs xchg aaa and cmpsl xchg xchg push xor movsl je xor movsb mov xchg push ja mov cmp sbb xchg arpl imul (bad) mov lret fwait jnp and lods in jmp sub and and mov adc mov or lea or adc cwtl xchg push rcrb rcrb push cltd xchg sbb pushf fsubs pop mov or xchg movsl push mov inc adc sbb imul sub ja mov jbe sub je gs sub pop dec lds cmpsb loope stos push or nop lea xchg les inc xchg and mov lret hlt xlat push push mov es int flds dec cmova mov cmpsb ljmp test rorl movb jb sub mov and test insl es bound mov or xchg dec push jnp sbb push or mov or jo mov pop les inc (bad) xor and nop xchg xor mov scas nop xchg xchg fcom and jb mov mov mov rclb popf push rcr int lcall fnstcw push push loope adc mov mov mov mov inc mov or jp dec inc push xchg xchg and loop dec adc xchg mov aam push enter lret push out pop mov xor cltd test xchg lcall mov bound hlt xchg xchg jno test mov pushf mov lods lret into lea test mov cmpsl xchg sub push xlat inc xor mov sub dec stos sub sub ljmp cltd mov in pop push aaa rcrb mov push or push dec fs aaa push push in jp pop and jnp test adc mov stos ss mov mov mov mov mov mov sbb movsl sub cmp mov mov and cwtl movsl movsl mov sub stos sub cltd cmp es stos sbb xor lcall sub ss lods sbb mov cmpsl cmp and stos mov mov mov mov xchg mov sbb sub cmp and sub mov xchg mov cmp xor mov sbb pushf lods sub sub mov mov mov sbb mov mov cmp mov mov movsb mov cmp cltd mov mov movsl sub mov and mov sbb mov and stos lcall and sbb fwait mov sub cmp mov cltd stos mov mov and mov lcall stos cwtl and xor cmp lods xor lods sub movsb mov stos mov mov stos and sub and mov sub and mov and pushf lods sub movsb and and xchg test and cltd mov xor mov mov mov mov cmpsl sub lcall stos and cwtl mov mov and and test and cmp movsb mov and sub mov test sub test mov mov cltd and lods xor xor and xor sbb mov mov daa test sub cmp stos and mov cmpsb mov mov mov cwtl cmp sub cltd cmp cmp cmpsb mov mov sbb sub sbb sub and and sbb mov mov fwait stos mov pop mov mov cmp sub sub mov cwtl sbb mov fwait adc sub fwait lods cmp sub and mov xor lods mov pushf cmp mov mov test stos mov sub xor mov pop mov sub xor mov mov sub sub cmpsl sub mov pushf ss and mov sub xor mov xor xor cmp sbb pushf daa and sub sub mov pushf mov ss fwait sub sbb cmp mov pushf and sub mov mov mov movsb mov cmpsb mov mov xor sub xor fwait mov xor sbb mov and sbb mov mov pop ret sub push fstps aad pop or popf fcmovnbe push fcompl lcall (bad) lea or push nop push push xchg sbb adc aad xchg lret imul sub dec test test dec or stos inc lret sub sub test rcll daa test and bound imul shll sbb (bad) and stos or mov and xor leave pop xor xchg pop leave stos or adc or cmpl push dec jp cmp rcrb popf adc (bad) in loopne aam pusha cmpsb mov data16 xchg (bad) out mov inc xor push arpl sbb es mov pushf or rcll push dec jmpw or xchg inc pop and push sub inc fldcw pop sub test lcall out push cmpsb les jo mov jb popa arpl push jo xor mov mov and test adc lcall push fsts fcompl adc push cwtl cltd (bad) xchg push rcrb inc or sub lea dec or fs hlt notl adc ss inc mulb test rolb jp sbb or jp xor mov (bad) test stos aam dec dec dec bound cmp cmpsl sub lcall stos and cwtl mov mov and or adc outsb test loopne xchg rclb pop inc jns inc pop adc orl mov and and push ret xor mov mov and xor test cs push out inc cmp sbb sahf adc adc lea xchg lods mov (bad) lcall push inc xor push jno je dec inc insb jno inc outsl jo push cmp and sub and and sbb mov mov fwait stos mov pop mov or dec mov mov ljmp add xchg cmpsb adc push je bound xor lods cmp popa dec adc mov and popa lea (bad) cmpsb pop xchg enter mov push inc inc xor xchg mov rclb adc test xlat xchg cmc xchg xchg xor and lcall xchg pop int3 mov xchg mov inc jns inc cmp jbe sub and pushf daa and sub sub mov push push push push or sbb adc nop out mov push xor sub mov mov mov inc and mov push xchg or adc fstl xchg xchg inc addr16 adc sbb sbb or rclb call outsb (bad) out insb in out or inc lods push dec sub stos dec jecxz push adc testb mulb push sub cmp jb in sarb xor aaa ss inc inc and sbb popf or sbb push xchg dec dec lods push cs dec dec out jo dec jae adc movsb int3 mov out in inc sub lods and sbb adc xchg inc aad inc push mov xor mov xchg in cmp in and popa push pop mov aam imul xor pop xor mov dec push dec adc push in and lods add movsb hlt mov mov xor bound dec cmp adc rclb adc out leave mov push in call mov push jne sub fldcw cwtl rcrb pushf hlt les bound gs xor sbbl mov test mov sbb push push rcrb dec mov and aaa add push xchg lret lcall lds sbb scas test add xor sbb sahf (bad) rolb dec inc bound xor sub rorl cmpsb outsb sub push mov add and mov test push push ja sub stos cmpsb mov stos and mov mov sub mov lea das dec stos mov and movsl je adc xor mov adc fcmovbe movsb pop ja push mov mov push xchg loopne arpl push push sbb loope lods sbb sub cmpsb cmpsl push cmpsl data16 ss jae inc mov dec pop mov jae jb gs outsb and mov pop mov scas inc in mov and mov mov xor (bad) arpl cmc mov sbb mov scas aam mov outsl dec cmp xor popa mov fwait adc push arpl sbb cmp or enter mov (bad) mov ss inc imul lods test call lds and gs inc in es shrl mov push xor dec xor sub sub sbb adc add fisub movsl pop test sub mov adc movsb out hlt jb mov jb dec push das ja dec mov and push sub or xchg int3 mov jbe imul int jmp inc ja je fwait adc shlb and sbb push and inc sbb mov cmp mov (bad) fs addr16 je sub and push cmp pop inc lcall ret cmp (bad) rcrl test xor xor mov mov and es movsl add adc adc mov sbb push aaa je xchg gs mov and aaa inc je popf sbb (bad) mov (bad) scas repnz stos fisub mov cmp pop mov mov adcl adc loope xor inc or sub ficoml inc pop arpl adc and xchg push xchg adcl push rcrb and leave sbb xchg mov (bad) in sbb cmpsb ret inc cmp xchg xchg cltd pushf cmp mov xchg adc and popf int3 repnz jno mov dec call dec xchg in inc push and mov dec push dec jbe xor and mov push test gs and int faddl push je enter xchg jae push cmp pop mov in sub lods aam dec pop or test fs fs out mov push outsb jns dec mov sbb rcrl cwtl (bad) cmc adc aad hlt push sub ror lcall pop inc push xchg xchg cmp sbb shlb mov and dec adc bound xor jb sbb jno int sarl ljmp inc lds inc mov or arpl insb rorl sub and (bad) jns ror pop sahf popf inc cwtl in out xor fcom mov sub lcall sub xor mov sbb lcall rcr xchg pop xchg popf fcoml adc aam (bad) enter ja popa xchg adc mov lret fwait mov pop (bad) mov push dec push stos leave (bad) int scas call push andl movsb adc (bad) xchg icebp ss mov lock mov mov dec inc inc outsb mov shrl push sbb sbb popa pop int pop lds inc sbb add push rcl in popf add xor dec pop xchg mov add dec aad aad movsb roll add lea pop roll test add lods push pop enter push sub enter int in add and in add mov cltd mov adc inc call int in sub rcr lea mov mov adc pop xchg lods loope flds mov lods sub pushf int3 lods adc sub add (bad) in leave fstl add fsts int in lea loope xor dec dec rol in lods or movsl sub or fxch sarl mov fstps lds rorl or loope fstps add xor mov fstl fsub rcll leave lods add test inc inc or adc or xchg push (bad) mov add push add dec test gs pop or rorl sub lds dec lds sarl mov dec lods mov xor adc cmp shl in lods add cmp and adc pop mov or push mov popf aad inc and mov add rorl add rcll popf mov roll loope test sarb adc fs add fnstsw xor fnstsw xor sub rorl sbb cmp shl loope add test mov in frstor gs in test add sub lea sbb adc loope loope sub xor add rcl add adc mov sbb sub add imul lods add sub cmp xor mov in lods lods int fldl dec push rcll int xchg mov adc aad popf lods int3 aam mov mov gs dec mov mov mov mov rcll mov in fsubrl lds add leave inc rcl dec sbb push lods add (bad) rcr inc mov cltd sbb xor pop and popa lea mov inc lds adc mov lds add xor fst add lods shrb add mov inc sub leave lea popf xchg xor inc gs test aad add mov aad add mov and add fadd mov sub add xchg in int xor add cmp dec sbb mov mov sub and xor movsl mov cmp test xor sub stos mov sub sbb pushf mov xor sbb cmpsb xchg test and lcall cwtl mov and cmp mov movsb sub daa sub sub xchg stos stos sbb mov mov sbb movsb and xchg mov ljmp dec int3 int and lods leave outsb lret dec (bad) scas sub dec push mov dec dec daa sub sub add enter lods outsl or lds jmp imul inc dec dec cmp dec dec pop xor bound push dec dec jbe imul dec jp pop cmp imul dec inc ja das push push xor jns imul pusha imul jno dec inc jbe jo cmp ss inc push insl popa jno pop xor xor inc imul ss jbe pop jb dec xor push inc cmp xor inc aaa cmp dec addr16 inc push push inc outsb dec push jp imul push jo and and sbb sub pop xor je push dec inc dec pop push xor push jno inc jo sub push outsb push xor imul push push inc push inc dec dec push dec push push cmp adc xchg mov adc sahf xchg xchg pop xchg adc adc adc adc xchg pop into sbb push sbb push pop fwait push push adc push rcrl cltd adc adc (bad) push sbb fcomps fistpl (bad) or (bad) pop adc adc aam rcl push adc pop adc sbb fwait adc aam xchg xchg pushf or shr jo mov ret hlt repnz xchg inc sbbl xchg dec aad adc xchg push xchg fcom adc adc dec fstl or or dec es jmp outsb sub dec or push dec mov inc enter dec leave outsb in xchg jmp stos sub lods leave dec or sub jmp pushf mov mov test mov fstps adc push cltd int sbb int3 int fistl fwait pop sbb rcrb faddl daa push adc adc inc push xchg lds xchg mov sub leave inc rcl dec sbb push sub rcr inc mov sbb xor and popa mov fadd shrb xchg fnop aam (bad) loop aam mov lods fcoml xchg fisub push in xchg (bad) cwtl fsubl outsb lcall xor sub xor lcall mov movsl cmpsl xor mov sbb movsl sub sub insb mov sub dec dec leave imul imul out xchg imul and test and push daa add jae push xchg push and out and jbe push inc push adc daa mov or mov dec outsb or push call in dec dec dec stos dec push out mov (bad) enterw push (bad) mov out sub mov or lret dec in lret dec xor cmp or xor stos sbbl xor inc rcl dec shrl xor movsl push inc pop movsl imul jns pop imul jb push bound inc jns inc xor dec jo xor outsl push adc inc xor xchg lea cltd and aad mov out into xchg xchg stos les mov mov stos mov (bad) pusha outsb push data16 mov adc sub push int3 leave push fs shlb mov jns dec ret mov adc pop cmp stos nop sahf adc push lock xchg movsb push push call xor stos mov adc and lds sub out addr16 into data16 in outsb push jns adcl lcall mov and mov adc in movsb push inc adc (bad) xchg arpl push xchg cmpsb xlat adc push jmp ljmp out dec outsb jmp in cmpsb sub (bad) push or es add imul push in dec (bad) or (bad) push dec and adcl push rol cltd jmp cmp mov test dec stos sub je xchg inc mov cmp cltd xchg leave inc jmp xor adc test cmpsb xchg ja push pop inc stos xchg lret cmp sbb jmp test mov outsb leave inc into mov xchg sub sub ret cmp sbb mov int3 fcoms dec adc push sbb rclb add les stos pushf cmpsb xchg xchg nop mov movsb and sbb mov popa mov mov or jp jnp mov adc rcrl mov aad or dec sub inc or mov cs call push mov rcll ficompl sbb dec pop inc push and les ljmp bound les je (bad) out sub int push push loope sbb and xchg mov mov adc inc push inc movsl xor ss mov xorl ja arpl movl adc xchg xor int3 lret bound jo xchg push inc mov mov mov xor dec pop pop inc inc xor pop xor xor push push inc pop cmp jp dec outsb jp inc imul inc push cmpsb xor sub mov cmpsl ss test mov sbb cwtl mov xor imul dec xor mov cmpsl aaa aaa inc xchg and mov mov es ss in ss movsl add je push movsl adcl test and cmp and fwait and and aaa sub test and mov sub mov xor sbb xor cmpsl xor or sub or in in cltd mov lret enter sub mov cmp es mov sub and out xor xor or push pop sbb movb je (bad) testb mov and mov mov test xor adc push scas dec shrl test mov (bad) leave popf and sub enter or sub mov (bad) or sahf pop adc fstp les push and and adcl mov loop pop mov pushf xchg imul sbb lods lret dec das arpl xor jne inc dec imul mov adc inc lods dec and fcoms xchg push push cltd sahf sbb popf rcrb mov cmpsb bound xchg xchg (bad) loopne lock cmp rclb xchg adc sub or shl test out lret test jb stos enter out aaa add xchg repnz pop push arpl push test jns fistl inc inc inc cmpsb mov cwtl mov int3 scas cmpsb dec dec or or sub fidivl xor lcall xchg jns mov leave sbb adc test mov test adc fisttpll dec inc push pop push popa das inc ss insb jo dec insl push bound push outsb jo addr16 (bad) sub mov xchg inc dec into loop dec mov mov cltd pusha aam test popf sub popf or or dec leave add mov popf cmp adc mov dec imul or push in lods mov flds sbb aad or fstps sub in add cmp cmp aam xor push pusha fadd cmp adc popf adc fsubrs fstl inc popf adc sbb pop mov sub xor pop dec mov adc xor lds loope fcomp pop sub and cltd mov rcrl xor or sub mov xor cmp in leave xor xor or test adc or sbb popf or pushf int3 int sub sub lods fisttpll add sbb fstl inc in mov shll loope fldl (bad) mov add xor mov add push dec roll pop pop mov test cmp inc mov fsts dec enter cmp or dec test aad (bad) fisttpll rcll dec cmp popf fmul lods popf inc popf inc xchg fisttpll aad mov (bad) int add cmp popa lods fisttpll test adc and mov (bad) aad xchg fstl xor lds or lds dec cmp adc aad lods aad fisttpll lods fnsave add (bad) mov dec cltd sbb test (bad) int add xor leave fstl lea int sbb xchg int or test test imul xor enter roll dec lods fstl in cwtl aad mov add lds pop fstl in fstps fsts dec test aad adc leave cmp nop int or lds mov popf or gs fisttpll int mov add inc adc mov roll mov mov fstpl xchg leave add pop mov popf adc nop leave jmp mov pop imul test or shl mov test mov test adc cmp popa mov in or sbb inc add xchg sbb dec aad inc or popf cmp lods push int or loope fmul rcr add lods lds (bad) int or rcl adc imul push lds ror popf add push push in fnstenv add aad jmp adc sub add inc cltd movsl sbb and movsl sbb pop inc fstl mov pop shl xor add fstps loope (bad) int3 mov mov sbb xchg and pusha mov add test in mov add cmp (bad) int add sbb or rcrb lcall nop push push push cwtl fcoms push xchg rclb lcall push sbb rclb pop pop fcmovnu pop rcrb push xchg push dec rcll lea adc push rclb push sbb fisttpll pop rcrl push push or adc rorl pop rcrl sbb or ljmp int lods inc or mov mov es scas or insl lds mov or xchg int3 dec xchg dec or push xchg dec dec cmpsb imul sub dec (bad) stos or or imul sub push and sahf sbb int3 int3 rclb aam rcrb xchg fcomps rcl nop rcr rcrb adc push xchg push push dec int3 popf (bad) cs lea out call out dec push call dec data16 dec out mov outsl dec push lret inc push sub data16 push ljmp sub into stos or scas call out notl push cmpsl je and mov je push inc mov xor xchg ja and inc je push push out push in adc inc adc cmpsl cmpsb mulb push xor je push xchg movsl jne les adc sbb roll ljmp loop mov mov int3 scas ljmp out (bad) les lcall lcall int3 mov (bad) push inc fs inc arpl inc inc jb push outsb bound xor sub xor mov lods mov cmp imul mov mov jnp jno cltd mov fstpl lds pop fstl in fstps fmuls (bad) popa popa push outsb jbe and cltd daa cmp sbb fstl pop rcr or mov jo into mov jae pop xor xor ja sub sbb mov adc fstpl xchg push xchg push pop fst xchg sbb roll push stos int3 cmpsb dec sub imul call insb xchg cmpsl jbe out adc jbe push pop je push cmpsb adc (bad) stos and gs test mov mov pop insl inc cmp (bad) lret add add xchg sbb dec aad inc mov insl pop imul and cmp mov push pop int3 push xchg fmull dec int3 and lret dec push inc inc inc adc and adc fs xor or mov mov arpl mov push inc mov rclb inc push pop dec ja imul push push dec and sbb mov stos and mov push adc lret fst fcmovbe or es sub inc insb call imul sub in (bad) ss dec push in out push sub pop das xor dec bound sbb in jmp outsb jno xor push and sbb fisttpll xchg cmp int adc xchg in fsubr les mov outsb push push outsb inc mov inc into into es dec sub add xchg notl pop inc push movsw xchg aam icebp cmp xchg flds mov inc dec pop jp push fs pop inc dec sbb pop mov lcall xchg inc cmpsb xor sbb or (bad) fs mov mov jb push jecxz xchg int3 cmpsl or push inc xor daa mov adc aaa pop and dec adc adc shlb scas test mov pop xor jae xor adc xchg fldcw test daa inc sbb pop xchg adc fwait dec fwait dec jb fsub and lea pop push movsb lret mov and lret repz popf push xchg dec into ljmp push inc push inc outsb imul xor test or mov into inc xchg xchg lds (bad) lds adc cmp mov insb inc jns movsl sbb popf xchg sbb fmuls push pop popf push sbb dec inc sub scas mov in dec in call xchg jbe mov cmp inc xchg adc fmul cmc and arpl leave adc roll sub mov clts out or xchg push data16 movsl adc or mov mov xchg int (bad) (bad) lret mov dec inc push insb cmp jae or mov xchg mov out push test adc fadd lds cmp stos push mov movsl xchg sub test les aad or adc mov cltd daa xor sbb cmp xor cwtl push in ljmp cmp xor xor pushf pusha test pop lock lret scas mov lea dec fwait pop int3 sbb insb ficom mov mov and popa adc cmpsb faddp (bad) sahf mov cmp inc dec xor inc ja gs dec ss enter gs ja push jns gs ficompl or insb fcoms adc xchg rclb pop outsb nop bound xor push inc addr16 inc addr16 adc cmp dec dec out mov call inc push movsb adc lcall ficoml cmpsl xchg (bad) stos test or lcall push adc adc insb dec scas xchg push jb lret mov sub pop lds sub bound adc cmp sub sbb xor int3 loop (bad) xchg stos outsl and xchg pop xchg aam popf pop shrb addr16 sub nop loopne dec sub push sub or dec dec mov or imul cmovle fs movsb movsb adc jae inc xor ss popa and sbb or lret sub or xor and icebp cmp xchg sbb inc es imul cmp cwtl xor dec push push xchg push xor inc push fs hlt xor xchg enter sahf mov insl push cmp inc je adc mov push rcrb insb ret cmpsb lcall or (bad) xor inc gs xor xor out test cwtl in inc bound ret sub pushf xchg loop push mov adc (bad) mov inc xor and gs inc aad inc and inc adcl adc push dec aad sahf pop int3 outsb mov xor mov sbb adc loopne in mov out push or stos lret sbbl mov mov xchg inc ja inc xor sbb fmul dec stos dec or jp dec js jb adc pop pop pop fcompl push ljmp sub mov inc in imul into out outsb or test add sub mov or dec bound adc and and loop inc mov and lcall addr16 xchg fstpl mov or imul cmp adc sbb pop enter popf adc fldenv inc adc adc aaa jne aaa xchg xor (bad) sub sub cmp sub cmp adc movsl sbb loop inc and inc lret cmpsb mov lods imul jmp movsb leave bound pop inc popa cmp repnz mov cmp cltd dec movsl imul mov sub and insl mov sub cs int3 int3 mov sub out (bad) es imul lods inc dec or sub push push (bad) lret or sub out sub push stos dec sub data16 test xchg push lret or imul data16 inc insl iret cmovl cmpsb or push mov sub inc mov dec test cs test sub int3 push mov dec push or dec cmpsl sub or out sub or push or sub mov or insb out dec dec enter dec in dec sub dec dec xchg sub insb out or insl push sub or imul inc das push enter push (bad) or out sub sub lea xchg or push call or dec sub dec enter or pop sub sub cs int cmpsb or or imul imul es mov sub and imul call test or sub ljmp dec sub push outsb mov sub into (bad) das and dec mov dec or insb das sub dec sub push dec out inc call or mov jmp push sub mov data16 sub dec call sub sub push mov enter in dec sub push lret dec ljmp insl into mov in dec sub cs or outsb cmpsb into int3 ljmp sub cmpsb push outsb out iret dec sub jmp test stos sub mov (bad) cmpsb inc push imul sub sub insb mov int sub dec sub lods mov out or sub push or sub inc xchg (bad) enter mov sub sub out push or sub test scas insb in push sub mov dec call sub mov out or sub scas or dec enter cs int3 outsb dec mov jmp sub mov outsb outsb call insb into inc out sub data16 push call out outsl dec jmp sub mov enter call imul or jmp sub sub iret sub sub lea enter dec mov call sub or es dec dec in test call test or or sub cmpsb or leave in push test sub mov dec mov cmpsb (bad) sub lret cs or cmpsl push sub jmp cs in gs call inc lea (bad) stos sub mov dec ljmp or push sub or mov or or jmp sub call das or pop sub sub or cs stos test leave insl imul sub sub and mov sbb test cmp stos mov mov and fwait xchg movsl cmpsb mov mov ss sub sbb and pop mov xor sbb mov mov mov cmpsl sub sub cmp xor test cwtl sub mov test movsb mov test cmpsl mov test movsb sub cwtl daa mov adc mov inc pushf int mov add inc test xor inc leave sub sbb and xor add sub fisttpll roll int lods and fldl2t add add pop roll mov pushf jo xchg call fs lret (bad) mov jb lods aam (bad) mov fsubr pusha mov loopne insb pushf fisubl movsb (bad) nop in out mov (bad) mov bound fisubr mov out ficom lods int3 xchg lcall lock cwtl xchg mov fisubr (bad) into push data16 push call in (bad) insb movsb mov lret ret aam push mov pop mov cwtl xchg test sahf mov bound cmpsb mov sub aaa xor cmp and cmp movsl and sub mov sub fcomps pop xchg int3 sbb fisttpll cltd aad aam test out push outsb out iret push mov je aaa ss adc adc sub cmp or xchg pop rcr pop push les gs ss cmpsb (bad) les xlat push xor add xchg push mov adc push inc mov in (bad) lret jo xchg in ljmp into (bad) scas xchg cwtl test (bad) aam xchg mov outsb loopne mov jb xchg fisubl nop test lds sub popa dec pushf mov das dec xchg mov data16 push call out outsl dec loop push adc ror test into mov lods (bad) (bad) pop pusha movsb insb ficomp ret addr16 adc push in inc divb jae ss mov ss mulb push cmpsl fs and inc push push mov jbe xchg xor cmpsb and fwait daa mov mov mov xor cltd mov stos xchg mov movsl cmp mov movsl mov cmp mov sbb (bad) adc gs xor xor inc push sub xor nop xchg (bad) xchg enter xchg xchg xchg mov cmpsl rcrb pop sbb adc inc lods xchg cmpsb adc xchg push adc xorl adcl ror lcall adc xor and inc add push mov inc push xchg in daa sub dec outsb mov (bad) dec test jbe adc sub fnstcw inc lea inc jne movsl and daa sbb mov sbb or inc movsl mov pop cmp lods mov sub fsub adc dec adc xchg fwait xchg push mov dec stos stos xchg test fmul add and enter inc inc test loop sub mov lret dec and sub sub rorl mov or shll leave sub test cmp xor inc bound dec inc ja dec inc addr16 inc push movsb cmp cmp aad xchg lds push adc in push and dec inc mov ret inc dec dec imul sarl stos jnp cltd (bad) jb push mov mov lret sub cltd push push push lcall test lds sbb adc (bad) loopne fsubrs cmp xor aaa xor popa push adc cwtl pop bound dec dec dec dec xor jp je (bad) lret test sub mov (bad) fsts xor cltd mov add xlat mov sbb jne das pop adc xchg xchg aad sbb test mov mov and and push xchg pushf adc adc push sbb (bad) ljmp mov ss xchg or outsb outsb xor mov daa sub leave daa or es pop sub xchg and popf imul (bad) loope push mov inc into mov push dec stos addr16 ja outsl and test push mov xchg movsb int3 out lcall xchg mov mov int3 rcl stos fidiv push in loop mov (bad) dec xor push xor adc popf pop lcall nop pushf adc ret les test lock into (bad) lret xchg hlt test mov xchg int3 jb and jb lret ror xchg rcll or jb mov inc lret (bad) mov rcll push imul sub imul mov popf push jb xor xchg xchg mov rcl fadd fcom pop enter dec outsb into outsl jb jp jne jp gs push inc xor xchg fwait cltd rclb push xchg adc sbb rclb sahf push pop push sbb fcmovnbe adc adc sbb rcrb and sbb cmp xchg xchg adc or and movsl mov sub xor and movsl mov test and aaa test stos push cltd fistpl push fcoms push adc (bad) pushf or sbb int3 xchg adc es sub (bad) (bad) scas and test and aad xchg mov push xchg test jb mov dec dec pop insb jo jo insl adc sub xor sub arpl popf cltd fnstsw in (bad) xchg outsb xchg (bad) mov and add mov or sub gs and aam sbb or pushf mov cmpsb shll mov sub and cmpsb cmp int test test jmp and xor xor adc adc xchg xor inc adc test or fs movsb xor and movsl ss xchg mov mov and in rorl pusha (bad) in pop (bad) sbb ror bound mov imul ret cmpsb mov push cmpsb pusha movsb mov xor popf adc out test xor mov cmpsl sbb and adc push fwait adc enter nop and cli push and sbb lret inc dec sbbl jo call cmpsb ficom imul imul push inc dec xor inc pop insb pop inc cmp push pop aaa push imul sbb in (bad) cmpsb (bad) xchg sahf movsb addr16 xchg ja jns push push push mov out aam and mov cltd inc mov dec int dec jbe push jo xor dec inc and lret sbb inc mov hlt xchg xchg xor and cld dec insb xchg push jp insb out jb jo data16 push push bound mov push pop dec push das movsb and mov cmpsl stos mov push cwtl push adc ficoml adc xchg pop xchg push sbb xlat ja jbe adc adc xchg pop test in mull and ja adc je adc push push xchg xchg xchg push movsl xchg mov test xchg push adc xchg aam arpl mov (bad) repnz test aaa push mov adc xlat gs mov xchg xchg jne push and xor xor mov push notl inc mov movsl adc notb adc aaa daa data16 jbe inc push push xchg pop daa cmpsb ss fs add in jae inc xchg fs adc je push cmpsl ja (bad) mov adc push pop add test mov rcll movsl and jbe cmpsl add mov push inc cmpsb aam and jae adc xchg xchg jne mov ja daa ss out ret xchg repz adc xchg je cmpsl add xchg adc xchg test xchg ja inc xchg inc mov daa xchg jae mov mov pop and xlat xor adc adc push out xchg mov jbe mov inc xchg xor les ja jae xor hlt adc jbe cmpsl push les add jne jbe daa test ja xchg hlt adc push cmpsl pop push out push in pop mov adc xor jne adc aam daa mov push pop cmpsl push inc inc gs xchg xchg inc push cmpsb fs jbe and xchg lds push jae aam xor mov adc je cmpsb push xchg jbe xchg push mov jne xchg je cmc mov add jne xchg hlt adc push inc inc jbe mov push xor adc adc xor data16 ss inc push inc xchg adc push mov pop xchg push hlt adc mulb add adc push aaa je push hlt adc mov (bad) ss add xchg xchg inc movsl inc xorl xchg xor xchg cmpsl test retw xor data16 inc push repnz adc xchg xchg and mov xchg xchg xor je movsb es and daa pop jbe cmpsb jne jae adc cmpsl xor adc mov not push movsb and ss push je push inc push adc push aam divb adc mov pop daa inc movsb out xchg push adc test xchg (bad) push xchg cmpsb divl jbe add push movsb push adc test jbe xchg xchg push xor xor and adc add ss addr16 xor out inc adc push out adcl inc mov mov mov pop xchg inc adc (bad) movsb repz test test xchg aaa push test inc adc adc daa ja (bad) inc in je xchg out jne (bad) cmpsb je and adc adc xchg je jne pushw push movsb and and mull jae divl les xor inc je jbe push in cmc inc add repz daa fs mov adc pop adc test adc xor test les je mov xchg pop xor ja inc xor inc add cmc fs inc es push xchg daa xchg adc push adc push and nop insl arpl pushf (bad) fcmovbe dec dec dec fcompl adc push pop sbb adc lret out or mov sub test or mov sub (bad) out lret sub cs sub cmpsb (bad) repnz test aaa push mov lret sbb imul mov gs pop rorl push hlt in mov dec je inc dec push push xor jnp or jmp fldcw adc (bad) in xchg push dec push ja push dec inc push xor push push jp imul xor cmp pushf sub sub push dec inc leave movl dec dec and daa jbe cmpsl add mov push inc cmpsb aam and jae adc xchg xchg jne inc mov jae gs mov lcall xchg cmp fs pop pop inc sub inc push dec jp inc jno jae pop mov fadd sub popf cltd and in push leave (bad) mov cmp push fsubr pushf in hlt jo jne arpl inc push dec xor inc cmp cmpsb cmp mov popf pop fwait adc push push jmp in push push mov jae stos ja xor push sub test gs adc loop call enter arpl test and push push pushf pop adc dec out test in xchg ja pop gs adc ret or mov loopne pusha (bad) jo into mov mov push push insb imul inc and mov mov imul mov xor adc in adc hlt (bad) hlt sahf aam mov (bad) mov inc imul ja xchg sahf pop ficoml rcll dec mov in cmpsl or push or int3 int imul lret mov fwait pop cmp dec sbb mov push adc mov cmpl add sub push mov int add lods mov les inc addr16 popa fs inc inc push insl dec ss imul jp inc dec dec insb push jb jp jb xor jns gs push ja dec aaa arpl das inc inc inc dec inc inc inc pop dec ja imul sub stos and cmp mov mov dec insl mov sub lcall mov xchg test mov cmp and sbb push or rcr push pop fdivl sbb mov dec jmp adc mov and cwtl loope mov test ret test mov fsubs in outsb data16 push inc xor push ja outsl gs dec outsl push xor addr16 outsl xor jbe jbe sub push inc inc jno dec dec push push inc js inc inc xor push sub cwtl cmp mov sub leave cmp adc push addr16 inc push inc cmp dec inc jns das xor push push hlt push arpl dec and mov sbb fst lea pop inc pop xchg loope mov inc mov aaa xchg xchg bound cltd pushf cwtl roll (bad) in in dec js xor lret mov jbe jbe push dec jp jbe and dec or push and pop adc (bad) sub xchg mov aad fstl shrl fisubr ljmp inc sub cmpsb movsb xchg hlt xor adc aaa and popf adc push les xor xor mov and mov push xchg dec sbb or mov int or aam or jb sub fisttpll push sub mov push sub mov cwtl mov mov dec into jmp push enter inc push call xchg xchg gs xchg adc adc lret jp inc or xor fsubrs xor mov xchg sbb inc and pop mov pop xchg rclb inc push sub cmpsl daa push (bad) (bad) jne ss test sahf push mov lods ljmp sub sbb stos or test jbe xchg fs xor xlat movsl adc ret lods iret xor fwait imul xchg adc (bad) inc in xor arpl pop bound adc inc sbb push or mov sbb pop dec cwtl (bad) test push daa xor aaa sbb and push cltd rclb pop fstl sbb nop pop push int mov mov js pop jp aaa dec push sub and lret cs dec sub push mov sub aad lods fabs adc fnop movsb jo lcall ja inc push push xor pop and sahf mov mov mov je int es out test fs in ss hlt push mov xor fwait or imul pop lds lods sub cwtl sahf hlt enter (bad) daa xchg mov cltd xor pushf inc mov xchg xchg push dec mov mov aad rorl leave aam sub lret out dec jmp aaa jo fs xchg or xlat and xchg push rcll out test insl lods test sbb push push and sbb ret mov dec inc popa nop xchg sbb (bad) lock je sub call lds loop fs cwtl lret divl cmp mov or pop inc nop out arpl xchg add movsb inc push push push mov xchg mov lods bound cmp cmp (bad) movsb xor or rcrl push sbb mov dec inc inc addr16 inc int3 pusha test adc rcrl aaa mov dec test sub jmp dec popl cmp dec jns sub mov adc dec push or inc jne cmpsl aaa cmp stos inc gs sbbl into loopne mov (bad) fistl adc push sbb jb and cltd or push andl xchg lcall inc data16 push inc dec dec inc bound js or pop sahf sbb push xchg pop xchg dec cs outsb iret push and push inc dec inc sub sbb mov stos inc ss aaa dec ror sub or insl push lea xchg int3 iret daa or sub inc test inc mov stos roll test dec push inc jb ja adc or daa sub sub mov xchg dec add inc inc fs imul adc push mov cmpl leave popf in (bad) int inc xchg push and xor or push mov jno inc jo fs inc popa bound mov lds cwtl mov loopne loopne ljmp das inc cmp pushf push adc jno xor nop mov mov lock xchg es mov outsb dec insb inc xor cmp adc jmp aam sub or repnz xor jbe push xchg and mov push cmp or in sbb fs lock scas jo bound dec cmp sub sub sub cmpsl je cmc cmpsl and ss and xchg xor lret mov nop push roll dec stos bound xor xchg adc sahf xchg stos xchg call xchg gs push push dec pop insl addr16 outsb ja xor and lds cmp in sub daa mov test push or dec ljmp xchg xor jnp xchg adc dec mov dec sub or pop pop mov shll push sub xchg cltd movsl mov or lret sub push cmp mov and inc and or dec push adc push test mov push push stos adc dec or mov xor dec push (bad) push nop vpsraw rorl dec or jmp mov mov cmp adc int nop mov mov test xchg dec push push dec pop push test pop and push xor sbb xchg mov and push shl (bad) nop movsb insb stos mov jno inc addr16 inc pop outsb xor inc cltd pop je jns sbb sub xchg sub nop call out mov insb (bad) mov into inc ret xchg sbb push inc dec insb mov sub call data16 inc mov sahf xor mov mov das inc inc cmp and (bad) or xchg push loop push les cmp aam xor xchg mov (bad) rolb inc jae in fucomp and push xor stos adc rcll into adc push or dec dec inc mov mov inc dec addr16 dec dec cmp outsb jns push inc dec inc jne cmp xor fs dec gs dec pop jo insl imul jne aaa inc ss inc xor xor inc outsb inc dec inc inc xor imul pop inc inc jno inc ja inc inc addr16 jbe inc jns push jbe dec jns jno inc inc push push push xor inc inc pop pop push imul dec ja cmp dec dec imul dec jno dec sub inc inc xor das jp das jbe xor push outsb sub push xor insl xor inc cmp xor inc aaa gs inc inc inc sub push dec inc inc fs js push pop inc je pop inc dec dec fs insb ja jo xor inc push xor sub insl jne push dec insl inc bound inc dec pop pop xor bound inc dec xor pop push inc inc dec xor data16 jno ja dec inc dec imul imul arpl dec push pop xor jp inc dec push xor popa push xor xor inc dec push push xor je outsl inc jbe inc xor xor inc outsl inc inc dec inc inc jbe inc aaa push xor cmp push ss jp jo push cmp xor dec outsb imul xor push imul js ja inc dec fs je insb push inc dec dec pop ss xor push inc dec xor aaa jp cmp inc push insb inc ss je je push xor inc fs inc ja dec inc inc jae inc xor ja insl inc dec ss push xor imul inc xor inc imul das inc cmp jae ret xor dec pop push pop sahf pop aad push nop pop dec dec pop xchg mov cltd push xchg (bad) sbb fistpl adc popf sbb cltd lea mov fisttpl nop rclb pop sahf xchg adc adc adc dec rcrb (bad) into mov push jbe dec jns jno arpl mov mov sub stos adc cmp and test and test mov mov mov pop mov lcall stos sbb into dec or xchg push or gs or leave test inc testl inc adc arpl lds mov popf mov fiaddl out xchg mov push mov xchg jo xor pop push inc inc dec xor data16 jno ja dec inc xor mov and (bad) lea sahf mov dec lods xchg in sub test inc and sub pop sbb fcmovnbe pop xchg push dec or sbb mov pop ror mov push jae rol bound (bad) sbb dec dec shll mov mov push dec lods movsb (bad) dec cmpsb inc push inc movb xor mov cltd (bad) pop pop xchg sub fstl lods cmp test lock mov and rcl dec push data16 stos add push and test inc test mov test jbe xchg adc cmc addl push cmpsl je hlt mov daa ss inc push push (bad) je imul mov lcall jp jno jno jmp adc lods pop loopne push push fisttpll xor xor lods lods loope loope and enter cwtl bound scas enter mov dec insl jp insl pop jb sbb adc mov popf or and inc rol (bad) fstl fidivl xchg lock fcomp fs lret out test test fsubr (bad) mov and xor pop leave xchg push sarb cmp lea loopne test cwtl mov stos bound out out (bad) fs loopne cmpsb (bad) (bad) hlt lcall jb into mov ljmp xchg (bad) aam hlt mov cwtl mov push jo bound adc pop inc popa mov into out loop loopne mov mov mov dec dec push inc and mov sbb mov mov fmull adc popa mov mov or cmp pop sub dec mov or and subl stos cmp mov or push sbb or mov mov and adc mov in push test out sahf and fwait sub mov push lds (bad) in and fisttpll test leave inc leave mov sbb fdivl mov outsl inc bound push lcall mov sbb data16 data16 adc dec mov stos sub and sbb sub lret mov mov loopne inc outsb inc push xor addr16 scas push dec sub stos pushf mov and mov cmpsb test iret or mov dec into call push dec dec dec out call dec dec and mov xor lcall rorb or lods call or mov inc inc xor imul sub dec (bad) cmp mov xor lcall imul dec or inc pop add jmp xor and inc data16 push mov sub lods scas dec into dec inc dec test into sub mov mov hlt xorl push jnp sub jp mov mov and leave mov das pop push push push mov mov leave shll pushf rcrl mov push outsb int3 xchg (bad) mov stos (bad) fcomps es and and mov fnstenv mov pop call (bad) push xor cmpsl popa xor xchg ficom sbb aad adc dec imul popf sbb pop mov stos lock mov xor or push adc mov call data16 lods sub dec dec xor dec dec inc and sub enter push mov rol into mov jb and lods push inc insl int3 out imul es es inc in in enter push lea jb aaa sbb xchg pop (bad) dec int3 or shrb xchg xchg inc push fs push js and inc or and inc movsl xchg xor mov mov lods add int3 data16 loop fnsave inc mov push cmp lds sub sub mov test loopne call mov out push pop xor xor mov sbb pop cltd les add mov cltd push sub push pop dec jo arpl dec jp dec inc xor sub mov mov sub cwtl cmp sbb adc sbb daa jae sub and adc fcompl (bad) dec out or inc push sub mov xchg and push xchg (bad) stos lcall mov divb rcrl ret adc mov lcall jne das push xor push inc xor sbb or lret mov push adc xor fucom adc mov pop movsb mov jb je inc dec xor xor mov lods jecxz push lods adc outsb scas fs fsts xchg xchg push inc cs push ljmp cmp inc or sub rcr mov push dec bound inc loop inc adc cmp cwtl lcall inc test sub lea sub adc aam cmpsb push rclb popa push pop push mov pop mov sbb dec out push push ljmp mov fs xor inc sub loop mov lods cmpsb cmp outsb repz roll lods out out scas dec pop mov inc in mov pop rcll fisttpl sbb mov (bad) test dec sbb xchg shll bound jbe inc cmp sbb dec test xchg xor pop xchg sarl mov adc test push jmp test adc and gs jne xchg sbb lea es inc xor push xor or or adc adc out out daa xor sub mov jbe mov pop mov dec jne imul mov cmp mov mov notb xor in push mov cmpsl mov mov or mov lods mov push dec xor inc sbb aaa sub in dec push outsl (bad) fsubrs test mov and and stos lods pushf mov adc rcll push pop mov lret mov stos xchg inc in test outsl dec push mov leave (bad) mov insl inc rorl test out dec dec es and xchg popf mov (bad) xchg in adc outsb fmul test fisubl mov adc sub call aaa xchg je push daa mov repz mov cwtl push fcomp bound adc push push cmpsb outsb or inc repnz xchg xchg enter (bad) inc data16 push loop sbb int3 cwtl and inc imul test ljmp test int3 mov imul dec stos dec mov insl ljmp or sub test lret push push dec sub test call sub sub sub dec lods add jmp insb dec xchg stos push mov or dec dec sub sub mov push dec sub insl dec leave leave insl sub mov mov leave mov or push dec cmpsb or leave cs imul sub dec enter mov imul dec sub mov lods mov into push sub mov jmp push sub ljmp or mov push mov insb dec mov into sub dec cs push scas sub or sub into call push enter insl lods call test dec in xchg stos scas or or lods sub cmpsb imul outsb call or sub sub in into dec into in gs jmp xchg mov data16 mov test sub leave sub imul imul sub cmpsl or insl ljmp dec enter mov test scas or cmpsl pop or test mov stos in out in call lods in es or inc gs iret dec sub test lods int3 call sub test sub outsb enter or sub inc cmpsb scas xchg enter push or push cs add push xchg insl outsb mov push dec or lods lret das dec outsl or sub imul or imul sub dec lea movsl call lods mov jmp dec in xchg sub or sub int lret sub gs push jmp xchg push push test test or dec or inc sub sub or lret imul movaps dec call in lret dec outsb xchg dec xchg inc sub sub sub dec lret mov inc das dec sub insl dec out sub cmpsl daa sub enter sub jmp pop sub (bad) mov or dec sub and push mov dec int3 enter insl or or sub mov sub dec inc or dec dec (bad) dec xchg or or dec out insb lret xchg imul sub lods dec sub push mov test out mov call inc ljmp push call dec sub sub inc sub cs stos (bad) mov call or dec insl in call inc dec mov sub into sub dec dec test (bad) and mov mov sub in into push mov or sub push enter push stos dec sub test stos inc or lods stos imul dec test push iret or sub or or movsl insl out sub in cmpsb dec push dec cmpsl cs insb int push out out dec mov mov sub push call sub in sbbb adc pop int cwtl pushf ficompl ljmp or es push ja push pop xor push arpl ss (bad) testl xchg mov xchg aad aam xor je adc (bad) ss (bad) ss xchg push xor push data16 adc es jecxz fs push (bad) push les push xor dec sub cmp push leave ret cltd lret xchg sub lcall lods pop adc popf adc mov rol or int3 int3 out ljmp into outsb mov test mov mov into rol test mov fcoms jecxz sub movsb xor sbb mov stos mov cmp xchg cltd xchg rcll pop rcll lcall rclb pop sbb push push (bad) fwait pop push (bad) sbb cwtl dec adc pop int push int pop fistpl dec test xchg nop enter inc push xor xor push push dec dec dec insb imul inc dec inc cmp imul fs push dec outsb inc pop pop dec push mov fisttpl sbb push mov stos in out in call repnz jae xchg mul cmpsl pop adc ret stos xor sbb rorb ret or mov mov ret or adc sub inc or arpl mov movsb mov fstpl rclb dec lret das dec outsl or mov and add lcall mov xor movsl popf aam adc movsb stos fsubs lret insb xor addr16 push je dec xor sub stos xor mov cmpsl mov mov or mov rorl rcll movsb out xchg and xchg and mov sbb sub sub popf mov ror adc pusha hlt bound les xor arpl jp sub pushf pushf mov and popf xchg push rcrb xchg inc mov mov adc sbb (bad) jae sub ficoml popf ror scas dec dec enter outsb dec call or dec es jmp loop push es add jae je divl gs inc jbe xchg fs push daa xchg out push movsb xor divb ss jbe xor lds inc arpl jne test mov and ret push or add rcl dec leave jmp ss es divb cmpsl and mov xchg dec mov into sub dec dec test xchg mov xor pop xchg push jae mov cmp inc adc adc test (bad) scas mov dec outsb jbe jae js inc cmp sbb roll out sub in cmpsb dec insw push adc sub jmp inc xchg jo inc jae dec inc pop stos mov test daa mov lock fidiv js pop insl xor stos cwtl sbb lret dec mov lret or sub cmpsb data16 pop mov xchg cmp push mov stos sub (bad) xor adc test movsb push pop lds mov sub adc fistl dec scas gs out push adc mov xchg rorl inc pop cmp cmpsb lock jb mov addr16 push das jae jbe jbe adc cltd fcompl inc sub sub dec int3 movsb addr16 jno adc mov jno jno dec dec sub mov xchg cmpsb xchg mov cmp (bad) leave call jae adc and and imul push push dec jae inc xor xor stos cmp roll sub push mov int xor mov and fnsave loopne cmp inc movl push mov xchg mov and roll inc sub leave inc test sub je idivb push inc test arpl lcall push mov mov jne inc ss jbe inc cmpsb cmp sub out dec dec push imul mov mov mov mov inc push repz fwait mov sub cmp mov leave adc (bad) out call insb inc push data16 mov sbb and dec lods xor fmull xchg sbb and inc stos pop inc fs adc popa mov mov jns push adc leave inc pop mov xor cltd mov int dec fcoms and movsb mov xchg xchg fstp call xor movsl lcall or test jae mov mov lcall adc leave cmpsb test sbb xor push xchg pop dec dec mov sbb mov enter xchg push and inc xchg lds dec sub xchg cmpsl inc add mov sbb mov and dec es cs test outsl in pop dec imul rcrl lds fs cmpsb lods xchg sbb popf xchg add sub fwait pop fadds addr16 addl cmp mov outsb push push push ret add xchg adc pop xor mov mov jp cltd push lds adc mov test xchg adc pop fcmovnbe rclb enter adc and or rcll mov push dec sub xchg cmp adc xchg movsb out mov mov cwtl fwait xchg cwtl xchg jno mov mov cmpsb arpl xchg rcrb pushf lcall icebp xor mov sub cltd or movsb push outsb push inc fs push jbe push ja push imul cmp insb je inc je jno addr16 jp cmp mov lcall call in cwtl inc inc divb xor lods xor stos and dec sub in push daa es gs xor jnp ret dec dec dec and int3 outsb ljmp dec push push cmp inc cltd leave flds sub cmp jae lcall dec sbb cmpsb outsb ljmp and push ret stos push push or leave pop dec xchg pop roll jmp push sbb xchg out les push xor sbb xchg xor lret dec sub and and mov mov (bad) lret insl inc push push fs inc jo dec bound sbb cmp int3 loop loopne xchg push mov test or mov or jp adc and mov cmp rorl or outsb fs imul mov pop sahf lea data16 pop push pop ficoml (bad) mov lock scas lret cltd mov xchg adc mov (bad) lods ficom out and dec les addr16 and divb movsb push pop jae test stos inc sub xchg sub dec inc adc stos out aam (bad) pop xchg cmp cmpsb or push in rcll sahf mov mov mov cltd in mov cltd cltd push or dec in dec or es out dec xchg movsb ret add and sub test loope (bad) lods xlat xchg in mov mov inc cmp popa imul int mov insb xor adcl or rcrb push inc ja xchg or mov mov jl sub inc push and inc cmp lods mov int fisttpll adc fnstsw test mov subl xchg dec das es int3 data16 (bad) or aad or rcrb adc fistpl lea (bad) adc pushf sbb sbb or rclb pop mov fwait pushf sbb sbb push push pop pushf xchg or fst fimul xchg adc rcl push mov sbb pop cltd aad push pop sbb adc push fcompl sbb (bad) mov push push aam fstp push or push sbb rclb or cltd pop pushf lea sbb fcoms push adc int3 cltd aad pop xchg fcmovu sbb push push push xchg push mov into sbb xchg rcrl push push dec rcll pop fcmovnbe pop sbb adc push rcll xchg fstl push push aad adc push mov dec int3 ficomp int (bad) push push xchg (bad) dec (bad) ficomp push or rorb adc push pop mov rclb rcrb sbb sbb sbb push dec xchg mov sbb pop ficompl rorb aad fwait push (bad) (bad) int push pop mov dec nop ficompl (bad) rclb ficom int3 pop fisttpl push ror push (bad) pop nop push sbb xchg fwait xchg push or nop xchg push push sbb push push push push push dec (bad) mov cltd or pop rclb sbb ficompl pop rclb xchg xchg pop sbb sbb fnop push pushf or int push mov sbb push pop sahf sbb sbb push pop pushf push or int xchg fcompl push pop push sbb rclb adc or dec xchg aam sbb sbb adc fcoms adc adc push rcll popf sbb sbb xchg pop pop push fst push fwait pop cwtl fwait int3 fstp pop ficoml pop sbb dec fcmove xchg push sbb pop pop mov push adc pop push push int3 sbb sahf push lcall push sbb push rcl sbb rcrb int3 lcall push push push push dec fcom adc adc adc adc adc push pop push dec (bad) dec into adc sbb nop xchg sbb rcrb fistpl sbb rclb sbb rclb push pop adc rcr rorl sbb sbb xchg adc adc push xchg xchg push pop xchg cwtl push sbb aam fcoml push fisttpll ficompl dec adc int lret pop mov adc popf pop adc pop int push pop sbb pop or popf sahf dec aam push adc rcrb push aad lret pop dec ficom adc adc dec adc fcompl pop pop rcll pushf push xchg adc cwtl rclb mov rcrb push push xchg lret fcompl rorb dec fsts lcall push adc sbb pop aam push aad xchg sbb fistl push adc adc push xchg cwtl push dec rclb push pop sbb sbb sahf cwtl pop pop pop rclb dec pop dec push int rcrb rclb int popf dec aad (bad) dec pop rcrb adc fmull pop rcll pop push cltd dec sbb sbb xchg sbb nop pushf lcall sbb xchg pushf rclb pop fwait or fwait push fwait pop pushf nop push xchg xchg fcomps or push push or xchg push dec lret push sbb insl arpl invd sub int3 jmp call ljmp call das push ljmp cs imul insl ljmp sub dec add push lods leave outsb xchg or sub imul dec sub sub ljmp lea or sub test push outsb out stos add call movsl in out scas dec inc test loopne mov inc add push add int gs sub mov add or sub loope or leave inc and push xor push inc inc push pop push inc xor dec xor aaa jns jns xor xor inc xchg xchg (bad) dec (bad) ficomp pop mov mov test mov movsl and out es and leave push fsts mov push ss push pop aaa xor xor inc ss push push ficom int3 pop fisttpl push ror push (bad) pop nop push sbb xchg fwait xchg push or nop xchg push push sbb push push push push push dec (bad) mov cltd or pop rclb sbb ficompl pop rclb xchg xchg pop sbb sbb shll add repz mov adc daa xchg mov xor cltd mov fldcw cmp inc dec dec inc inc xor inc push inc ss push push insl inc pop jbe xchg or fcoms inc (bad) xor xor mov call mov and cltd mov dec or insl leavew test mov bound mov lcall aam test mov mov mov test cs push dec test inc rorb sub cmpsb loopne insb repnz test movsb scas mov mov xchg pop mov arpl pop fs movsl mov aam cmp sub pushf rorl push inc aaa dec rolb ss imul sbb mov rolb push mov aad push nop mov or cmp push push js imul imul pop (bad) imul insl inc dec inc imul mov lret xor jmp aad lret mov movsl xor cmp dec dec gs dec cmpsb lret imul sbb xor pop push xchg mov xor movsb inc jne push push test ret test (bad) leave push cwtl pop pop push movsb adc xchg adc push hlt pop xchg sub fs push or aaa adc imul in mov faddl xor gs imul ss dec aaa dec xor leave mov push push or mov fwait sbb sbb and sbb imul sub data16 push mov jmp dec sub (bad) int lea rol mov inc ljmp dec pop sahf push dec push cwtl (bad) dec ljmp xchg sbb jo mov mov cmp test inc ret dec or mov fcmovne xchg lcall inc movsl cmpsl and aad sbb inc and xchg xor inc push cmp dec jp inc dec jo sub adc cltd adc adc movsl cmp loopne push in imul sbb xchg sahf sbb movsb push adc ja (bad) jno cwtl sbb or push jp dec dec dec push inc inc xchg pop xchg xchg adc aam push nop push mov lds sub (bad) xor dec or xor inc pop imul or cltd push sbb adc pusha mov inc mov aad dec inc xchg push lcall and movsl sbb pop stos cmpsb daa mov pop mov out lea imul out call call xchg xchg arpl and lea data16 dec dec scas dec dec (bad) or adc leave nop xchg adc mov cmp xor mov lret pop sub (bad) lret and adc and out (bad) int3 (bad) les cmp es and mov arpl xor pushf int sbb pop rcl push pop fwait push adc je addl push movsb in inc xor or dec gs sbb test push gs pop pop pop push outsl pop fs je ja mov dec imul dec data16 into call sub sub es es imul and arpl push xchg sbb (bad) xor fimull fsubl sbb cmpsb mov stos mov inc (bad) lods test cmp pop imul pop and int3 pusha fisubrl cwtl test mov mov dec pusha nop loopne xchg es dec lea dec aam pop sub test cmp mov cmp cmpsb pop shlb les fsts mov cmp xor push dec dec das push xor lret (bad) dec into sub xchg push xchg sub adc mov sub popa dec xor mov mov int3 ljmp (bad) mov inc sub and mov fisttpll arpl dec pop pop dec push push inc fwait sbb pushf push adc push movsb je hlt je jbe inc push jno xor pusha enter jno push dec dec push xor dec xor or inc sbb or pop call cmp rcrl mov cmpsb (bad) mov out les stos and and xor lds ja imul xchg add (bad) push and push pop hlt test pop in in lret xor sub xor push adc out hlt inc movsl xchg movsb and sbb inc xchg cmpsb adc sub cmp mov cwtl push fs cwtl ljmp and sbb test mov addr16 dec adc test stos and mov sbb dec xchg insl das inc lret or jmp push lcall cltd andl lods or je mov adc movsl shl sub sub mov inc jmp imul push ja and dec test fcomps and mov dec stos test inc push stos stos arpl mov or push fistl xor (bad) sub or push insb pop xor data16 sub and xchg test xor mov stos imul sbb out movb fs test daa sbb outsb xchg aam fcmove fmul sbb (bad) cmc inc xchg jecxz xor es dec sub inc lret and ret jae lea mov xchg mov sbb fstpl ret insb fsubs mov aam or inc dec push push xor adc xchg mov pusha data16 (bad) out mov adc pop push push adc inc pushf ljmp mov xchg int pop fmuls jno stos sbb mov or dec cmp push cwtd nop fstps or dec cmpsb sub sub adc xor ret inc lcall imul xor inc fwait aad xor jnp push xchg push lcall adc lret js push bound xor mov xor dec lods movsb cmpsb and popa and mov xor inc imul xchg daa sub and int3 xchg daa push push sub cmp or jnp scas data16 adc cmp ja imul fstps pop movsb jb ss (bad) comiss xchg push imul adc ficoml loop xor sbbl push ret jo xchg pushf xchg pushf mov pop sbb xchg xchg fisttpl dec pushw loop push push outsb mov xchg pop outsb loopne call inc cmp (bad) mov test sub mov cmp xor insl push mov and xor lcall xor jle aaa bound es (bad) loop jb mov mov aam adc rorb push test pushf add arpl mov pop int3 mov data16 ffreep shr test lods inc or sbb fmuls inc pop outsl and and test pop cmp pop adc and xchg or fsubrl xchg scas inc or dec sbb xchg mov leave mov fs shrb lods adc sbb imul xor adcl ret inc adc dec mov loop dec adc (bad) fs hlt addr16 aaa push xor test and and arpl (bad) out out pusha lods fiaddl mov xchg loopne mov enter enter cmpsb test lret mov mov insb fiaddl (bad) xchg (bad) xchg xchg xchg (bad) hlt fsubrp (bad) xchg push repnz (bad) nop lcall test jb cwtl lods loop lcall (bad) mov pushf nop les mov jb repnz lods movsb lods (bad) pushf scas scas scas enter jb mov mov mov bound xchg (bad) mov pop outsb int3 fsubr (bad) out test mov lock lcall hlt mov test pop into (bad) stos into mov mov (bad) (bad) xchg mov fcmovbe into (bad) les loop movsb loop mov out xchg xchg (bad) xchg ljmp xchg (bad) test xchg outsb jb fisubr pushf (bad) (bad) enter lcall cmpsb mov (bad) xchg data16 insb mov out test out lock into mov mov mov bound sahf sahf xchg mov mov (bad) xchg mov cwtl aam sahf scas lcall xchg into ljmp (bad) fs in loopne insb outsb (bad) out xchg (bad) loop hlt in mov aam mov ficom mov (bad) xchg (bad) mov mov test jo outsb sahf stos (bad) push pop mov loopne bound ret pushf ror enter (bad) insb jo jb (bad) jo fs (bad) (bad) hlt (bad) in xchg in mov out ljmp test (bad) (bad) (bad) (bad) mov sahf xchg cwtl xchg jb stos (bad) mov xchg xchg (bad) stos bound int3 adc xchg pop rcll nop push push cltd push rcrb adc pop adc xchg aam sbb pushf (bad) sbb fwait push rcll pop push push rcr ficompl int int sbb mov dec aad movsl out callw mov into sub dec xchg dec enter leave or mov push push push inc sub fs jne jbe xchg add adc je inc adc adc adc mov repz (bad) push daa jae pop mov xchg pop rcl push sbb sbb fnop push pop (bad) push rcll push push rcl adc lret dec sub dec call sub dec cs into out inc aad adc xchg push push and mov xor adc daa adc (bad) mov xor adc (bad) repz hlt out push inc je push xlat push mov out gs push xor aaa adc fs cmpsl je (bad) xor out data16 inc xchg jbe pop and adc xor test adcl cmp sbb sub stos jp imul sub sbb inc mov or jnp xchg inc cmp mov aad adc xor mov test jo outsb sahf stos (bad) nop das pop inc jo xor imul fs imul loope in movsb loope leave sub xchg in mov out ljmp test (bad) fs add sbb lret cmp (bad) stos dec ret xchg dec imul test xchg add xchg data16 dec xchg push or add rorb push gs gs xor mov cmp xor loopne lds int pop inc nop lret ret data16 mov mov (bad) lock mov aam mov ss lret push and xchg popa (bad) mov rcrl dec fimull repnz jb push jbe inc inc ss xor sub adc mov dec lods ret mov xor aaa xor mov and add push imul in dec xchg xlat push aaa addl dec fisttpll push adc push push pop adc adc int test sub inc adc jb and test inc sbb cmp xor push xchg xchg (bad) xchg sbb xchg cmpsb inc cmpsl pop xchg sub mov xchg cmpsl arpl je cmp adc lods cmp adc fsubs jo movsb mov ja jae pop cmp mov fcoml jmp insl dec movsl je lret mov mov test leave mov add jmp xorl (bad) addr16 popa mov fwait call xor cmp xor rcrl int or vprotw or push test mov out push sub in es cmpsb push movsb xchg (bad) in xchg push fs mov adc int3 or mov lock dec gs (bad) cmpsb mov ljmp mov cmpsl and pop push sbb push dec or stos int3 xchg xchg dec inc addr16 adc inc xchg mov sahf sbb mov push imul data16 arpl xor mov mov mov mov xor cmp lods and loop jo lea loop mov scas movsb mov dec dec jae dec jns jmp jmp imul sbb les lds adc and or dec dec sub adc fwait popf pop int3 fwait adc cmpsb movsl ljmp test and adc add cltd inc and fnstsw mov pusha jb push inc cmp jne data16 xchg xchg stos and mov lds or jns sbb xor cmp cltd sub dec cmovs inc xchg dec and pop fisttpll inc and dec push xchg and mov xor mov fwait into pop push fcmovnu push dec dec out and dec and xor and pop mov in test fsubl arpl mov and rcrb adc nop fisub xor xor lods mov data16 insb xor xor push mov dec fsubp ficomp pushf pushf and stos or mov dec jo cmp aaa mov mov and leave mov outsb dec enter test inc jecxz fwait xchg mov pop adc sahf hlt (bad) push lret les test mov sub xchg dec into sbb sbb mov mov pop push push fistl rorb inc adc test jmp icebp cmp nop aad mov hlt xchg xchg outsb and cltd and rcr lods fsub out sbb lret rcll dec or out xchg repnz es sarl daa jns pop fisttpll or fmul fadds and cmpl sub imul jmp nop outsb jo nop mov adc push push push dec dec and jmp pop arpl arpl inc push sub dec lds dec mov jno adc adc lret fs lret sub daa and push xor cmp mov and movsb xlat and and ret mov inc push xchg sbb and adc stos test pop mov sub dec pop adc (bad) mov fs and loope stos sbb mov jo mov enter out mov dec fs addr16 je push outsb cmp mov xor mov lods xchg xchg xchg lds dec sub arpl mov in jno cmpsl rorl dec sub dec dec movsb cmc push adc and push arpl and pop mov pop adc fildl xor insl jp and fsts mov movaps xor jecxz gs data16 adc mov dec or sub dec pop inc cmp sub lods test cs je sub xchg mov lock xchg xor inc xor inc inc push xor inc ja adc inc inc inc ja outsb js xor leave inc or int3 lods mov lods shrl ljmp inc push cwtl lods leave adc mov sbb lods pusha fcoml mov arpl and push push mov xchg sub mov aad adc push mov xor pop mov dec cwtl pushf test inc aaa xchg xor mov dec cltd xchg mov out xchg jb ss rorl outsb lret dec sub sub and xor push pop inc push mov roll inc in mov gs bound xor mov (bad) loopne mov aaa sub adc lods adc jmp lret bound mov or push sbb or dec in mov mov push stos cltd fwait mov cmp and je and mov fcomps (bad) es push aaa arpl popf or data16 loop addr16 inc dec dec adc pop sbb mov dec js jo js push inc xchg movsl inc mov stos or ds xchg inc cmp pushf pop dec int3 push pop fimul out sub or sub aaa and and mov mov push mov xor fadd sub mov (bad) int3 push pop data16 pop adc and int rcrb lret jb jae insb aaa inc jbe inc aaa data16 das fs push addr16 ja push outsb inc imul arpl inc popa dec popa inc imul pop inc outsl push push pop inc dec dec pop inc xor popa push pop push inc pop pop push ja dec jno inc dec imul dec popa push sub jo dec aaa cmp push dec bound jae imul push ss dec outsl dec dec cmp jb pop push inc bound dec imul addr16 xor insb push xor inc pop pop xor inc das push dec jb inc inc push inc jb cmp pop inc push dec inc inc inc aaa jp jo bound aaa push inc inc gs xor arpl js gs jb outsb cmp inc dec inc inc push insb imul inc ja dec gs push inc outsb addr16 inc insl push inc pop inc push push inc insb jo bound inc bound inc push inc js inc je inc imul jbe dec addr16 inc jno outsl imul dec das inc ja xor jae push outsl cmp inc inc jno dec insl xor inc push inc push ja popa js push inc outsl inc push dec jns inc inc pop inc sub insb inc ss inc bound jae gs cmp sub inc gs imul das jbe addr16 xor xor outsl ss inc pop sub dec popa jno push das push ja ss push xor push inc push ss dec jno push inc sub inc inc dec dec dec push jae dec inc push inc inc push jne inc push sub push inc inc popa fs sub dec cmp push inc popa pop das fs xor inc jo imul outsl push inc push jns insl popa jns aaa jne inc jne push push xor xor dec ja cmp pop addr16 ja inc push xor push push inc inc inc imul push jne inc push xor xor jae addr16 push xor push xor push ss outsb popa sub je jne inc popa ja push dec inc data16 dec inc inc sub cmp xor insl das arpl jbe inc pop push inc dec ja addr16 jns gs inc inc sub jae push sub addr16 dec insl js push outsb push inc push xor push dec inc push insb jno inc jo cmp xor cmp push inc push jo jb jo xor inc xor xor inc inc jns jne xor jb push addr16 inc imul jns push inc inc inc inc popa aaa js jne jbe inc inc insl jne outsl je push jb jae jne bound pop pop outsl cmp inc bound inc jne dec pop push addr16 ss xor jne sub inc jbe pop xor arpl xor inc dec popa aaa cmp dec push outsl addr16 push push xor push jns pop ja inc popa outsl pop arpl popa pop inc insb jae outsb xor outsb inc inc push dec pop push push ja je dec jno inc pop insw jbe push inc jno das arpl inc dec jb jae dec jp addr16 gs xor insb inc xor push dec pop jb xor inc dec imul inc push inc jp xor push dec inc dec dec ss push je inc push je inc dec push push dec jno pop dec push inc xor push xor cmp cmp gs bound dec xor jne inc dec push push je jns xor ss outsb xor dec jno xor inc sub dec xor fs inc push aaa dec ss dec xor inc cmp xor inc insl jae inc inc data16 ret and rcrb rcrb rorb (bad) lret fstps fstl cltd aam in push enter push push in push or sub jmp test xor adc movsl xchg gs mov xor pop mov sub push or lcall pop mov and or adc pop jns pop leave adc leave or lods inc add rcr push leave or mov in test jo bound mov data16 (bad) into fsubrl (bad) xchg mov bound mov mov push lret int3 fdivl hlt (bad) xchg dec gs inc ja dec gs imul test lods and xor and sbb mov pushf and pushf sbb daa movsl mov and cwtl daa xchg mov cmpsb cmp cmp mov cltd and and sbb sbb push push pop push push adc (bad) sbb lea cltd pop dec dec lret push cltd push fcmovbe push mov or xchg dec pushw lods (bad) scas lods dec loop pop popa daa xor cmp sbb mov sbb daa and adc es and sub mov test mov mov sub sbb pop mov inc in mov stos dec (bad) sub lea or ljmp lods das sub out stos sub dec mov mov dec leave scas in sub or into call lret mov mov mov push jmp scas call inc xor je adc lds test data16 out mov inc xchg mov mov mov adc push adc fmulp in lcall addr16 jns gs inc inc sub jae push sub addr16 ss cmp or adc fsts push pop or or push or push push xor lcall pop mov ficom dec int3 push cltd pop xchg push fnop rcrb or pop lcall rclb dec fimul (bad) xchg outsl je push jb jae jne bound pop pop outsl cmp adc push pop xchg int3 jmp outsb cmpsb add leave mov stos sub sub dec xor mov pop push inc leave cmp in popa fnsave lea or lret test fcmove xchg (bad) nop mov test insb call imul dec mov dec scas gs push xor insb adc sub imul and sbb push dec xchg adc fstpl rclb fwait xchg mov sub mov cltd sbb cwtl mov dec adc ljmp inc enter mov xlat adc push push ljmp sub jmp je and sub mov fmull arpl daa add imul (bad) mov js inc xor push and bound leave adc push adc inc outsl cs iret sub ret lret leave rcrl pop push or and repnz mov pop fmul popf pop int push divb xchg adc adc mov lods jb in test (bad) flds mov mov push adc adc es lret sub scas inc inc push int3 enter mov ret inc and test mov rcl adc push push dec lods xchg sub inc je imul frstor daa jb and adc sbb xchg mov ret lcall sub sbb int int3 aad test fcoml and or adc xor mov dec cmp sbb adc xor cwtl cwtl and or (bad) xchg pop call xchg addr16 cmpsb icebp sbb in or int3 sub push inc daa sbb mov adc mov sbb lcall cs inc push jb lret popa int3 xchg enter mov fadds xchg bound lods or dec mov stos and xchg xchg or fst sbb adc rclb inc dec xchg shrl rol dec insb mov fmuls inc sbb sub enter cwtl and sub je rcl jno lcall inc inc mov pushf sbb fs inc sbb int aad and int aad push lods push xchg data16 das push pop pop push arpl and xor xor out testl in push les arpl xor push pop sbb fistl pop push dec mov dec or push mov add pop ja mov (bad) stos mov stos inc mov push adc arpl popa mov add xor test in nop lret enter push pop dec xor mov mov mov sbb test mov pop out xchg jbe test cmp or sbb aam inc stos iret and mov rclb mov or jnp pushf or nop fcompl loop insl dec sbb sub sbb and mov int3 imul in xchg add inc inc movsb roll pop je pop mov push or inc scas outsb nop bound inc jae push xor jo imul cmpsl cmpsb mov xor mov adc xor xor xor adc sbb xchg or mull data16 ss xor push popa sub or sub test push sub and add fstps dec mov xlat push cmp popa and or jae inc push mov pop adc daa and xchg xchg cltd dec adc dec je popa sub jnp sub sbb sub (bad) int3 les in (bad) nop lret fdivl daa xchg cld dec push test (bad) (bad) pop fstps cwtl mov ljmp inc jno pop push test rcll push push or out mov je adc inc mov cmp bound loope adc fstl int call inc das inc inc dec arpl jnp push pop push adc es add ret jnp stos mov xchg jbe push (bad) jno xor inc adc and jmp repz push dec test mov outsl or (bad) push popa dec jno insb adc mov and in and xchg dec jmp mov dec inc dec inc cmp mov and mov pushf xchg push adc fdivs push adc push push iret sub push enter pop sub ss fstp (bad) ljmp xor cltd aad xchg (bad) dec (bad) out imul mov push adc adc sbb mov mov aad push sub fsubrl jbe cmp mov xchg push sbb int3 aam lret (bad) repz roll mov in int sub xchg xor in imul insb lret lret repnz je data16 inc inc cwtl in int or jae cwtl pop sub inc jbe and ss daa pop je fs andl mov fs inc inc adc or push and mov enter (bad) cmpsb movsb and shrb stos sub and sbb cwtl test mov lods test and cltd mov xchg movsb xor aaa sbb mov cmp xor sub mov mov mov mov mov movsb cmpsb stos mov mov ss mov and mov mov mov cmp mov mov mov mov sub mov cmp cmp and and cmpsb mov mov cltd cmpsb mov mov cmp sub xor cmpsb cmp mov mov mov mov cmp pop stos mov mov and sbb xor movsb cwtl sub daa cmp mov and mov sub cltd aaa mov cmp test movsb sbb mov cmp fwait lcall movsb sbb mov test and sbb lcall mov mov mov cltd sub mov and mov sub mov and pop stos sub mov mov mov and xor mov mov mov xor and cmpsl sbb mov and and test mov mov cwtl aaa mov sbb aaa sbb mov mov sbb cmp mov mov movsl test mov and sbb and movsl movsb mov mov mov stos mov cmp movsl sub cmp cmp sub sbb stos sbb mov lods stos cltd stos and test test xor mov sbb daa sbb movsl xor sbb sbb mov test movsb lcall and cmpsb mov mov mov cltd mov mov xor mov fwait cmp mov mov xor and xor sbb fwait cmpsb cwtl fwait mov pushf and xor and mov mov cmpsl xor mov mov stos mov lcall mov cmp aaa and mov mov movsl cmp mov cmp cmp pop cmpsl mov mov mov stos mov mov xor lods mov mov mov mov lcall mov and mov and test cmp sbb cmpsb cmp mov pushf lods mov fwait sub mov and xor lcall xor mov movsl xor sub sub lods and mov and cmpsb cmp cmp test mov and mov mov and mov mov xchg aam dec dec or int3 push push pop sbb pushf push push popf pop lret push dec xchg rcr push int3 (bad) cwtl fwait rorb sbb mov (bad) fistpl sahf sbb aam popf or rcl xchg cltd ficom sbb int3 sbb int3 push pop lcall push push fsts sbb out mov push push mov outsb push imul in jmp push call test mov mov int int3 stos das das sub cmpsl cmovle outsb mov sub sub das dec sub test ljmp test sub dec sub ss xchg adc movl xchg jp sbb dec or cmp sbb fwait push or mov pop jp mov or mov xor jb and shll mov push inc das inc jno xor xor xor xor push inc cmp movsb sbb mov push dec int adc fiaddl insb data16 daa add test dec mov stos mov pop shrl jns sub sbb adc test test inc insl dec daa sub mov and pop stos sub movsl mov fstp push fistpl push push push xchg ficomp adc rorl insb xchg insb outsb inc or dec mov mov jb xchg in xchg mov pop mov pop (bad) xor add mov mov mov pusha movb inc xor movsl and fcmovnu push aam ficoml lea dec ljmp dec xchg call pop jo jns jb push imul cltd sbb rclb daa jne movsb gs mov mov addl mov cmp pop int sub inc sbb pop ficoml push (bad) nop (bad) mov dec xor inc ss dec data16 xor cmp xor mov cmp fwait xchg pop push push sbb (bad) in mov ja inc dec ss insl jo dec pop push popaw inc inc ja aaa ss adc xchg fcmovnbe pop dec lcall jne push xor inc xor cwtl fwait mov pushf and aad fstl inc xor jbe xor mov xchg mov fstl fimull call stos test mov fmull inc jo push push insb inc cmp mov cmp pop mov (bad) cltd sbb inc in in insb push dec outsb push in xor hlt and xchg xchg inc hlt push mov fs xchg sub xor stos mov pop jno pop or dec lds leave rol leave sub rcl inc adc loope mov inc xchg xchg xchg xchg xchg movsb xor jb sub mov or cltd xor push push ror sbb sbb dec call jne cmpsb cmpsb adc je test mov movsb inc adc je and daa push je push mov fwait bound dec lods inc add xchg loope test aad mov in jmp inc xchg inc adc inc movsl bound daa mov mov sbb push pushf fcomps (bad) lock outsb push inc push jae inc sub fwait cmp test mov xchg adc insl push push das cs mov cs enter inc push push dec ss movsl mov xor daa adc mov dec outsl sub push je push (bad) daa cmp fstpl sbb push lcall push dec dec dec test or lret cmp mov xor and inc ret push sub shrl or and and jmp and mov enter jmp addr16 test add mull adc popf sbb pusha inc and and or lret cs lcall push imul inc jb inc daa aaa mov mov sbb inc dec inc fs inc and (bad) lret rcll adc stos dec xor or ret dec cmp push lds sbb adc movsb bound in mov outsl popa dec push jno je and mov pop cltd mov push rorl mov adc or or lds adc (bad) mov mov cmpsb mov xor push push sub sbb xor adc (bad) mov aad mov xchg mov push xor xor out xchg loopne xchg mov data16 addr16 popa sub adc imul mov ret aad mov loopne pushf mov push imul and sub adc ret fcomp ret push pop push sbb or adc inc sbb cltd mov xor popf pushf or dec sbb roll dec inc imul or testl cmp cltd lcall push lods mov dec push push pop jae inc dec inc sub mov sub mov push jecxz inc pop pop ja adc lcall mov mov cwtl dec push adc add stos mov push inc cmp je push inc xor mov xchg dec inc lods les cmpsb xor movsl data16 push bound mov sbb sub lods fnstcw dec mov es arpl xor push push sbb and push or repnz inc and xor pop cmpsb inc push push xchg lret dec ret leave ret inc sub mov mov mov mov pusha lcall inc push daa cmpl dec out push adc imul rcr or push push jns dec xor addr16 pop mov dec xchg les daa inc xchg inc test movsl xchg xor mov pop jbe and inc or popf and fstpl inc in dec call dec adc (bad) mov pop insb pop dec push xor mov jne popa jns popf lcall mov xor inc aaa dec imul push adc xchg mov lock mov push xor pop push and or (bad) into xchg cwtl mov cwtl data16 inc xchg xchg xchg cmp dec jmp lods xchg es pop mov push xor xor mov push jbe dec push addr16 push leave popf sbb jo inc cmp xor sbb shrl adc cs (bad) data16 sub insb int3 mov xchg je inc push sub jo (bad) scas lock repnz out (bad) push repnz push inc push daa movsl adc mov add lret mov int3 nop test mov dec data16 arpl addr16 cmp aam or out cs lods insb icebp es mov rcll push push test xchg in outsb loop dec xor lret rcll xchg and mov mov ret inc mov xchg bound mov push rcrb fstpl pop mov push and fisubl pusha mov dec push (bad) adc xor dec int (bad) xor gs dec and imul in test (bad) pop xor cwtl fldenv dec int aaa cmpsb inc rorb jo inc push push les xchg lcall inc push arpl loope mov in mov int sub enter xchg testb dec xchg lods xchg lds shll mov bound inc insl pop adc sub or lahf inc sbb cmp lea push sbb rorl lock daa movsb test push or mov lds data16 cmp lret xor and sbb (bad) call in jno test or (bad) (bad) dec push pop pop shrb pop rcrl push inc inc inc jae cmp or push pop push push mov fisubl jb adc aad aad xor fisttpll enter lods test jo inc and xor movsb pop enter push js push mov ret loop dec inc sub mov mov sbb leavew test xchg arpl add and and xchg jb daa sub nop in mov adc push dec test stos sbb rorl or in dec mov inc aaa adcl inc (bad) mov xor and rcrl xchg adc imul jmp cmp aaa loop js cltd aad stos in mov icebp and fwait stos dec mov or leave xchg loope xor lret push leave (bad) ja mov aam aam call xchg push es sub fs xchg addr16 mov lods and jae gs sbb xor sub popf sbb or popf mov nop push or xchg or outsb dec mov mov lods add pop mov gs mov lods int sbb int3 mov and shll test mov test add fnstcw xor add xor and add push shll frstor gs xchg lods or add pop leave inc sbb or cwtl fucom pop in cmp loope cmp fs int3 int (bad) xor or xchg and in movsl add push cmp test and and add sbb fs adc dec adc in sub mov or xor pushf (bad) adc (bad) int test mov jmp fsubrl inc cltd and jmp inc xchg gs xor cmp sarb add dec leave push add lds movsl add xchg mov aad cmp fstp add rol lea add or leave add rcrl aad add gs xor mov mov dec add dec mov mov dec and roll rorl add inc pop leave fstl inc leave add movsl test xchg lea inc push sub inc test add xor leave mov adc imul cmp pop leave imul (bad) sub dec ljmp sub lret lods insl outsb push out inc or sub push lods dec and dec sub or call xchg jmp mov sub mov int enter sub mov push in das sub stos sub mov data16 insl or ljmp enter out sub (bad) out sub sub out or call and dec pushw mov and lret lret ret dec or jae push pop adc dec mov sbb adc sub les push lret sahf cmpsb mov jb mov xchg test mov mov stos mov lods inc call dec scas mov int3 lods outsb insb insb sub add roll pop stos sub mov scas hlt mov push xchg jns imul add mov mov sbb cmp dec leave push or addr16 jno dec ss imul or mov push inc push xor fnstsw call imul xor sbb push push adc dec adc xchg ss ret ret addr16 xor lea dec mov mov jae dec push dec push js je xchg adc xchg adc sbb cmc add adc xor mov push dec inc push push push mov mov lods sub leave imul lret push mov mov (bad) lret fcoml adc test and mov mov (bad) arpl inc mov push or mov xchg scas call (bad) cmp sbb and push mov push stos dec ljmp dec adc or xor imul cmpsb jne dec jne aaa adc cmp ja push dec jbe cltd pop xchg adc rclb shlb je hlt divb sub inc shll mov mov or pop inc push push imul push inc xchg sbb dec rcl lea dec shlb mov inc jbe je nop aad loope ror inc mov or cmp push sub jp inc or adc xchg mov or popf fnstsw dec ss pop inc inc adc jo test aaa cmpsl xor mov dec lods dec leave lret sub out or inc push dec (bad) mov and lock lock test cwtl movsl es mov lcall pushf pop int3 lcall test pop adc (bad) aam mov xchg mov call xchg sub fldl rorb and lret rclb nop cwtl nop movsb push fs cltd adc sbb rcll inc adc xchg fs cmp and or ss aaa push jo xchg call push sarl (bad) test lcall xchg mov cmp cltd mov adc xchg sbb gs or sub dec enter arpl pop pushf adc push adc data16 and ret sbb or or pop inc jp dec popa jp adc (bad) je push cmp adc dec dec inc inc inc sub fs xchg push pop fistl pop xchg sbb and inc insl or push sub sub in xchg jne push adc mov in call je xchg push sub lods daa adc test sub push pop mov mov mov js imul sbb adc sbb mov rol sbbl jo adc fsts rcrl pop aam fwait cltd in aaa xor inc sbb pop aad cmpsb mov into and test sbb adc ljmp dec adc in sub or cwtl xchg dec dec fsts int3 fimul adc nop pop xchg xchg push push rcr adc int3 pop push dec cltd rcl xchg adc sbb rcrl xchg lea push xchg fimull cmp mov cmp mov call push addr16 sub xchg call mov bound dec stos mov or inc push push adc push lea xchg fnop stos lret inc aaa push inc je enter leave sbb or cmp fstpl lea call xchg or adc ret cmp sub pop adc fnop push add mov add adc xor sub pop nop movsb xchg push mov aaa cmpsb push je je (bad) mov adc loope add js ss addr16 jae jns pop ror rorl int3 aam scas mov and aad imul pop xor test int pop mov lcall imul lds rcll pop dec shlb ja cmpsb xor adc mov test inc inc les xor shlb inc data16 movl mov cltd push test ss and mov or push sub and mov mov in rolb push and stos adc loop ror xchg nop jb cwtl movsb test adc or inc xor into push pop adc aam adc adc push cmp data16 mov ljmp mov mov int3 callw nop insb arpl and sbb push xor fs (bad) jno sub lods rorb push popa inc inc mov inc sub insl xor push mov lods mov movsb ss dec cmp mov or push inc jb jo das ja or dec dec into fs insb push mov xchg jmp inc inc popf xchg adc ficomp data16 push push adc mov push xchg dec dec aaa jo jae ret xlat xor jle hlt xchg mov dec out push int or jb push push mov push adc into xchg inc xchg sbb push lea cmpsl jbe add (bad) data16 xchg sub cltd mov xor cbtw nop nop loop ja add frstor insb sub push stos mov mov lcall rorl inc fwait pop dec sbb xchg fcmovnbe pop pop fs insl dec push inc or (bad) mov ficoml pop fisttpl dec ror sbb aam xchg int3 (bad) mov mov scas inc jbe je xor mov lret sub pop jb jno mov sbb pushf pop fisttpl inc mulb cwtl sahf pop nop cmpsl push daa inc xchg xchg loope (bad) mov inc (bad) inc xchg and xor lret push push das pop and jo sahf movsb jb repnz and mov xor dec das push movsl push shll sbb dec add in and adc mov pop xchg xor sub push arpl stos or adc xchg and test test stos fwait jp ret xor call (bad) push fs adc test push fwait xorl les stc cltd rcrl pop rorb adc loopne and mov mov rcll movsl xor adcl xchg and and vmovupd push jo push xor ja dec push push jns and lret jp adc or xchg arpl arpl mov cmpsl add lds je push xor cltd mov mov lret bound xchg sbb mov jnp or jmp jns dec inc or push nop push fcoms pop fs je imul insb imul addr16 push or daa add ljmp push sub xchg or xchg sub jmp sub enter push data16 sub outsl or leave dec sub cs in sub mov or dec push in daa sub scas push push iret or in (bad) sub dec cmpsl or in mov dec push sub scas into insb push xchg or push sub jmp push in scas scas call or lea es ljmp push call or mov sub mov sub out call sub insb data16 imul sub int or cmpsb mov jmp or sub dec sub sub xchg out inc outsb dec dec scas dec dec (bad) or mov or push push vpextrw lds dec or inc sub imul dec das add sub lret mov out push push push test dec out sub (bad) into enter dec or cmpsb in sub sub (bad) sub sub lea leave inc in scas call imul (bad) dec sub sub (bad) or stos push mov dec mov inc test (bad) test lret es lret sub in out add push push sub or imul out xchg push inc data16 data16 (bad) out xchg outsb mov dec dec sub mov sub dec sub enter push outsb call dec enter stos leave lret sub inc enter or stos inc dec dec sub test scas daa sub enter or push es inc jmp dec jmp int test call mov or (bad) sub dec lea stos sub int mov sub cmpsl push dec scas cs call int3 dec and sub dec imul mov and pop or dec mov inc (bad) stos and out dec cmpsb dec imul call test mov dec scas call lret mov stos lods call in es into call lods test dec dec es call push cmpsb ljmp imul xchg or inc into call inc or call int mov in ljmp dec dec sub or enter call imul dec stos dec mov mov lea mov lods mov imul dec mov or dec call in dec data16 out cs (bad) jmp sub dec lods dec test push dec scas or jmp dec sub outsb or sub call ljmp sub dec insl into imul sub jmp dec call lods insl push mov into call xchg or dec mov int3 call out dec sub pop ret cmp (bad) dec sbb pop rcl or adc adc push lcall or sahf push push pop or sbb or xchg pop sbb rcll push push pop fistl lcall ficom sbb lcall dec push push push ficoml ficompl adc adc adc pop lcall dec push int3 rcrl (bad) or inc (bad) push iret or in (bad) sub dec test test movsb xchg je addr16 inc pop or push inc jno lcall popa pop ret mov push popa mov inc in add lods test adc mov lock test out lcall ja xor fcoms fmul cwtl (bad) adc cmpsb sub test int or cmpsb mov jmp or sub imul cmp and and adc or push vpextrw lds dec or inc sub imul xchg (bad) hlt and inc adc push mov mov mov and loopne int xchg and dec lea mov shrl bnd lods jb into mov inc push jbe aaa insl ja inc inc and daa sub mov adc adc adc dec or xchg test inc push adc adc jbe aaa add xchg lcall imul sbb fwait int or nop fstl push xchg xchg int out test or sub dec sub enter imul test fs jbe fs and leave test push jb push scas pushf (bad) mov bound lcall outsb cmp inc dec inc xor mov es and adc sbb push sub and inc jbe adc inc xor test xchg mov jae dec pop cmp or mov mov mov mov pop popf or (bad) push cmpsb (bad) xchg pushf mov ja xor pop cltd pop mov xor lods scas ret loop insb out (bad) fmuls movsb (bad) and xor lcall or inc sbb xchg popa mov or aad sub dec or fstpl movsb (bad) push je and and and lret ret push mov frstor int xchg lds ror sub in (bad) out xchg mov loop jo xchg into mov daa ja sub cwtl mov test lods dec test xor inc stos rcll xor dec dec push push ja data16 inc das push dec pop xor push inc ja imul push xor adc xchg dec dec and fldl lods mov (bad) aam data16 repnz into test lret nop rcrb xor pop pop push xor and lcall mov mov mov stos loopne into cmpsl inc mov adc adc mov push das xor dec jbe ja push push xor dec dec dec push ja inc insl xor imul dec dec push xor inc jno inc and movsl sbb xor xchg pop push fstps xchg mov (bad) iret sub es cmpsl fs hlt xchg gs push xor pop adc and push into adc cmpsb xor popa ss aam sub imul jmp outsb call sub call scas dec inc cmpsl or push out addl rorb ljmp scas (bad) into outsl dec out enter cwtl and popf adc inc int outsl dec pop ja fs cmp movsb xor push popf pop lea push push push pop rcrb fnop xchg into nop aaa jno jb push jns sub push inc cmp sbb mov mov push cmpsb imul mov sub movsb jne xchg rorl fnop fsubr mov gs jb push ja mov test (bad) int lds jmp cmpsb cmpsb inc inc dec inc and cwtl and rcrl push rorl cltd les sbb and frstor nop fstpl and push adc mov and jle add daa popa sbb out inc xor dec xor inc mov pop js cmp dec adc sub leave xchg popf adc mov mov inc push pop jne push dec jae inc push jns inc daa cmpsb and sbb stos sub mov or enter stos rol mov jns ss push adc cmp mov loope leave mov mov test mov movsb sub mov pushf push push sahf push rolb xor jne je jnp stos popa pop mov sbb mov sub jp adc sbb enter mov je xor and lret mov (bad) arpl dec xchg stos mov shrl dec mov push adc mov mov and cmpsb mov and sub lds fstl inc popa sub aad adc push sub or or xchg les cmp dec inc push xor or fdivrl cltd adc mov cmpl cmp rorb mov inc popa arpl jmp (bad) jbe xlat je inc xor addr16 ja gs testl inc hlt xchg adc lcall add jnp mov lret adc sbb cwtl enter stos mov jbe imul sbb lcall ljmp cmpsb and repz xchg pop xchg in xchg xchg ret mov mov jno adc sbb inc xchg xchg dec mov pusha inc xchg xor (bad) xor cmp les pop xor outsb inc xor xchg and mov fwait adc sub jmp leave or inc ss movsl and xor or adc push ja dec ja inc inc and and cmpsl and int3 aam xor push inc cmp sbb and or call fild xor cltd cmp xor test rorb fisub adc popf xchg inc xchg xchg (bad) mov mov cmp xchg mov (bad) push aam fcomi aaa mov mov mov cmp popa data16 js inc sub lods ss ss es or or push inc jae adc mov jae fs imul xor es imul or sub push inc stos ret mov jnp lret int3 mov into sub xchg cmpsb jbe xchg xor js bound rorl in es test out popl imul imul ja mov sbb pop mov pop (bad) into jo xor mov xchg mov mov inc imul roll test addr16 sub adc (bad) jbe sbb pop sbb mov adc and and enter mov (bad) mov rcll hlt movsl xchg pusha int (bad) mov sub xor je imul fwait pusha cltd pushf add repnz xlat xchg xor movsb inc cltd pop jns push test dec dec pop and mov inc cmp inc inc in test xor sub lds fsts loop xchg enter mov or mov test (bad) shrl aaa test sahf sbb rcr dec inc dec inc jae adc adc add xchg mov inc push insl data16 jo dec xchg int lea dec push loop outsb and mov data16 outsb xor inc and mov and sub cltd mov cmp sub and mov xchg mov cltd mov sbb xchg mov and lods sbb mov test mov mov xor and xor mov mov lods cmpsb mov lcall mov mov xchg lods and cmpsb mov xor mov pushf pop cwtl xor mov mov sbb sub and test sub fwait lods sub stos xor daa sbb cmp mov mov cmp sub mov xor movsl mov cmpsl aaa mov sbb and cmpsl and mov cmp mov lods cmp lcall xor and test sbb pop mov adc mov cmp cmp mov mov cmp test and xor mov cmp mov aaa sub mov mov sub mov fwait daa mov mov sbb cmp mov aaa sub stos and mov cmpsb and test mov stos cmpsb mov cmpsl cltd xor cmpsl and mov cmpsl sbb mov cmp mov and cmpsb xor mov es mov xor sub xor and mov mov movsb mov mov mov mov sub sbb mov xor mov lcall mov test mov mov test movsb sbb pushf and cmp xor xor sub sub mov movsb mov stos mov mov cwtl and mov mov sub mov cwtl cmp xor xor test mov pushf cmp movsl mov xor sbb pushf and cmp mov aaa movsb mov mov mov mov and movsb mov sub fwait and movsb cmp aaa cmp mov stos cwtl cmpsb xor mov daa cltd pushf pushf mov mov and mov cmpsl pop movsb lcall xor sub aaa cmpsb mov test sub stos test pushf lods daa mov mov ss cmp pushf ss sub mov mov xor sub xor mov cmp mov sbb cmpsl cwtl cwtl mov cmp cltd mov pushf sub test mov stos adc xor stos adc cmp cmp and mov movsb daa mov es daa xor sbb cmp and stos test test and mov mov sub mov mov movsb sub and mov test and sub es sub push mov push adc xchg push push popf rcl popf push adc push cltd ficomp fcmovu dec fisttpll (bad) dec xchg dec es movsl in lea push imul sub push inc or cmpsl je xor mov cmpsb arpl adc inc xchg push jecxz xchg and xchg inc inc xchg xchg repz adc inc xor test push push mov movsb adc push (bad) inc xchg cltd sarl jae mov call in popa leave and outsb mov repnz push pushf insb fsubr outsb hlt push (bad) lcall mov movsb mov xor dec outsl inc aaa mov sbb and dec out imul jmp dec dec or or sub int mov movsl ljmp test call inc insl imul imul or insl stos in mov test insl data16 stos dec out jmp mov (bad) mov je pop push movsb mov out es ret dec sub lcall and dec pop mov mov jb mov adc rcr jmp add mov xor or out lcall nop cmpsb scas lcall arpl jp inc dec inc ja cmp outsb inc jns dec cmp inc inc sub cmp xor dec dec xor mov cmp mov and push xchg or into adc rcrb fisttpl dec mov int insb push test inc push push mov mov sub jmp xor inc mull test je ret inc movsl xchg divl sarl xchg cltd lods cmp fldcw cmpsb call out scas jo xchg call scas mov inc inc insl xor xor inc adc mov pop push mov ljmp push cmp xchg mov jo dec outsb fs imul cmp mov aaa mov (bad) fcoml push push push dec cmpsb in dec out sub imul inc arpl fs je sub in xor int3 outsb sub sub lcall mov lret dec test inc mov loop xchg inc aaa add addl sub mov (bad) out stos mov xchg enter fcomps push push cmp xor dec dec adc xor sub xor mov cmp mov inc es int es push fs dec xor and jp rcll lods push out push gs push xor fcomp enterw movb loopne lret sahf (bad) (bad) stos hlt test pusha pushf les in mov inc divl test aad mov outsl addr16 pop jns insl jp push xor fs dec inc push inc and sbb xchg pop fwait adc push dec outsb imul push mov out push xchg movsb rcll test test in cmp fmul (bad) (bad) cwtl nop in (bad) loopne int3 stos insb lret repnz (bad) in int3 mov mov cmp dec dec inc js dec and xor mov sbb xor xor (bad) in sub inc outsb sub lods lods sub or push scas mov test mov xchg mov xchg test mov add inc popf adc sbb mov insb mov mov lret mov stos push and test pop inc stos mov mov mov mov sbb xchg mov xor pop or fsubl inc xor push inc push xor inc push push push dec inc inc popa dec pop push inc js push xor push xor xor stos inc addl or aam mov out mov or dec sub push insb es das inc insb dec (bad) dec push inc inc cmp lcall mov sbb nop xchg xchg pop xchg xchg sbb fcomps test mov push adc mov rcrb jbe inc inc daa mov or fmul es cs jne mov adc push push sub mov or popf jmp es xchg movsb adc xchg push ja push and mov rclb pop pop fimull (bad) or scas push sub movsl or (bad) (bad) xchg je imul je push push push js dec mov xchg push dec shrb cmpsb (bad) aad ss xchg mov les sub popa bound or sahf pushf ficoml dec inc imul lods lods inc out sbb and xor jns rcl popf loop dec adc push jbe mov data16 outsb push je push enter (bad) daa and push dec stos arpl sbb mov int3 repnz insb in mov xor pop push pop adc into bound ret inc xchg aam and aad pop xchg rorb fsts dec lret ljmp pop jbe insl and xor test in dec push enter (bad) fsubrs xor data16 dec imul mov cwtl lods sub cmp push sbb xchg rclb pop popf fmull pushw test jne jb xor xor inc sub aaa mov and push scas inc sub bound xchg shrl push out xchg aam pop cwtl inc add mov cmp stos cmpsb dec or adc sbb sbb leave xor fs push jbe jne imul push mov inc lcall sub add inc ret mov adc leave and (bad) and data16 mov mov sahf and xorl mov mov adc (bad) les call push dec jno xor in mov inc inc push xor and ror outsb call dec dec into das dec in mov xor imul test and rcrb int fisttpl pop xchg push pop pop push or and inc inc lret pop mov dec or xor pop add xor (bad) rcr (bad) mov sbb popf rcrb sbb fcoml sbb int dec fistpl pop pop sbb push or or daa and xchg inc bound mov xchg mov nop mov in sub xor lea rorl dec mov sub or sub sub push xchg jbe sub inc cmp (bad) and adc push jae xchg jnp or xchg jae xchg es test sbb or fstl outsb mov insl lret sub xor je and dec mov imul inc mov inc sub cmp xor adc sub push pop cmp sub sub inc inc jb loope mov sub inc inc adc push arpl xchg lea mov rol jb in mov push mov push xor mov inc and jmp iret movntps inc je inc lret dec and movsb fstps adc push js push outsb dec bound inc xor sbb fiadd (bad) adc sarb inc jl stos sub push or push lret adc insl leave push mov lret jns dec inc and adc sub mov push loopne dec enter dec push test testb mov xchg pushf jo data16 and cmp mov dec cs adc push push inc xor outsl insb imul xor enter repnz mov inc push push sbb sub sub cltd lret data16 xor daa fs sub sbb rcll mov lret nop pushf fisub and dec (bad) test test test test mov leave push lea push mov and sub mov push fisttpl popf xchg popf inc mov mov xor and (bad) int adc dec add in mov xor inc xor push pop xor inc inc dec xor insl ss insb inc inc jb inc inc inc insl inc push push ss jns inc dec push inc outsb dec jp xor addr16 imul insb xor inc inc push push dec pop imul outsl jo xor push xor inc jo dec arpl jne inc inc inc js das inc xor gs xor inc dec arpl pop fs jbe ja push imul dec push inc dec das pop inc inc cmp inc ja data16 push dec push inc inc push fs addr16 push inc imul insb push inc push jno das bound push outsb jb inc insb xor fs jbe push inc xor push xor push push dec ja aaa xor ja dec pop jp ja inc inc dec bound popa outsb dec push ja pop ja jbe inc bound push inc push xor outsb xor jne inc inc push push push arpl ja push pop inc inc xor push push aaa inc inc insb imul bound push ja das js gs je cmp inc inc dec push dec insl outsb dec das cmp inc das imul jns inc cmp cmp jo gs ja inc inc je outsb inc xor dec addr16 bound je push cmp inc dec jbe jp das inc push dec inc inc je push inc outsb jo push imul insb push push inc js push jp push ja push addr16 dec sub das pop ja inc push imul inc inc inc push push inc gs inc dec jp inc pop xor gs inc pop pop xor push insb inc xor imul push bound insl xor push dec push bound jns dec jne inc inc ss inc inc dec jbe push ss push insb cmp inc das imul jns inc inc fs outsl push push push pop dec push inc pop js xor inc push push inc outsl pop push gs push push addr16 dec jno jo dec push push insl jb inc imul cmp addr16 insb js insb xor pop jp ja jp dec popa js pop xor push ja inc jns dec dec inc bound push inc sub jo jns jae inc jbe push imul fs gs popa aaa inc addr16 imul insl jno ja imul sub addr16 cmp insl push dec bound jne inc xor jne xor inc dec inc dec cmp aaa inc push jb addr16 pop inc jae das xor bound inc ja dec dec pop xor dec data16 dec push inc push imul popa inc addr16 insb pop push pop insl pop dec push insl jo inc outsl push jno sub je push inc js dec fs dec arpl je inc xor jae bound push ja inc push dec push xor inc outsl cmp dec xor jns aaa xor gs inc imul addr16 outsl push push outsl jbe jno js inc xor inc bound popa pop inc inc inc gs inc xor cmp dec inc dec jns cmp ja gs inc das xor xor inc cmp inc xor push jns push inc js xor push js pop pop sub outsb xor push xor dec inc dec sub dec push inc popa push xor insl insb inc outsl inc jo push dec dec xor inc je js jbe pop dec dec pop push inc popa arpl addr16 push dec jns xor jbe jb inc xor push pop jae pop ret mov mov lea push push call test or mov cmp mov jb shrb dec dec cmp dec (bad) mov sub xchg adc adc dec lcall (bad) adc bound and mov or ret adc fwait cmp imul sbb and or inc ret push cmp jno lret lret and mov push xor mov mov pop aam rclb scas into mov loopne mov fsubs xchg xor mov sbb stos sub sub cmp and xor mov es into enter leave int call lods (bad) outsl or sub lret (bad) cs or or es call sub sub stos sub out cvttps2pi in test mov or outsb dec das cmp inc lcall rcrl pop into pop nop pushf adc je and inc inc in adc inc inc and jae inc data16 fs push cmpsl add and inc and xor mov push sbb rcll test jb dec sub das pop ja inc push imul inc inc inc push push inc gs inc dec jp adc push or rolb xchg xor inc pop add inc mov mov push inc jns dec jne inc inc ss inc inc dec inc xchg dec xchg adc push push sbb test cmpsl xchg movsb adc inc push xchg adc and push mov push mov stos enter mov stos imul int3 in jo loopne and push and out out xchg enter in pusha pop mov and and xor mov xchg mov or push js imul pop pop push cwtl dec rcrb ficompl (bad) xchg xchg mov lods xchg lcall sub insb dec es scas call cmpsl es imul cmp leave push dec int3 (bad) xor lods and and cltd fisttpll and pop lods and mov sbb insl pop dec push insl jo inc outsl push jno sub sbb adc cwtl ficoml fstpl pushf xchg (bad) sbb sbb sbb lcall and jmp sbb xor mov sub mov fwait mov cmp lods mov mov xor jb push sub push xchg call sbb xor and sbb mov mov lods lods adc inc test push jno and pop inc pop fwait or cmpsb pusha fadd aam fcmovu mov (bad) loopne and call data16 pushf mov (bad) ret lock mov inc fs and movsl sub cs ss jo inc adc pusha lret in cwtl push (bad) ret aam push stos adc mov shlb mov and mov pop cmpsb pushf xor push dec mov lea or dec mov cltd (bad) xchg xor push xchg dec inc (bad) call mov ss stos mov and mov lods or jb dec push imul pop push push fistpl int dec shll out test test cmpsl movsb inc adc inc jbe movsb adc hlt ret sub and inc push and sub xor and sahf xchg mov nop call ficomp push push pop fstpl fwait mov mov xchg es adc pusha fild push push sbb lret mov cmp movsb daa xor sub dec sub mov sub xchg jns mov pusha lcall inc lea push push int3 mov xchg xchg test addr16 sbb fdivs rorb adc (bad) popf inc cwtl pushf rorl rclb push and insl js inc nop pop xchg pop pop push push dec cltd dec add loop je repz sub lret pushf daa movsl mov inc imul dec test lret lret jb arpl or mov fwait inc xor adc mov mov scas call mov xchg cmp inc mov inc ja divb loopne pop sbb cmp lcall and imul imul sbb outsl xor arpl push insl addr16 cmp jb xor xor cmp adc test daa and add mov cmp es push inc inc ss inc pop addr16 pop cmp inc pop addr16 das jb xor addr16 xor js xor adc push pop sbb rcrb cmp fldl gs add sub xor arpl or or int3 lds adc sbb rcrl xchg xchg sub shll cmp mov lret lcall xchg xor adc jecxz xchg xchg push stc lea rcrb enter xchg fs xor lcall lcall mov mov or int3 call xor sub lretw push dec and popa sbb or jno outsl inc push push inc inc sbb adc (bad) push push adc (bad) sub xchg adc ja push imul xor and or dec arpl pop imul pop cwtl rcll xchg dec lret push cltd push int3 xchg fildl and mov mov mov push jp arpl rorb lcall or dec and cmpsb in (bad) mov adc sbb mov cmp and dec test sub xor out mov add roll inc popf push pop pop aam rcrb push mov and inc sub lds cmp dec mov push push ficompl or cltd or cmp mov stos mov mov scas push xchg cmp jb (bad) or sbb jae fwait jb xchg xchg pop mov test mov xchg lret adc xchg mov sbb (bad) xor mov movsb mov pusha stos adc and xor and push mov push push nop fldenv gs sbb fwait xchg mov loop mov xchg cltd push mov pop rolb add or (bad) mov mov push daa es mov pop into dec jmp bound sub stos subl in cwtl test rcr mov mov lods sub daa xor ror adc xor xor mov xor xor mov mov sub insb lods push cmp fldenv aad push and sub xor (bad) int3 dec or pop xchg nop fcoms je jp pop test mov xor lea mov daa daa mov mov or jnp jnp fwait nop push test adc mov pop lcall mov test (bad) jmp sbbl mov adc jno cmp or aad dec inc ja jp inc jbe jns push cmp insl les lcall shll movsb lret popa cmp push imul js inc nop rcll adc pop xchg mov xor mov ret or test stos push lret (bad) aam inc sub mov jmp or sub push push cmp dec cmpsb mov inc inc push inc adc adc xchg xchg mov in mov int3 inc and mov insb fmul and sub and dec sub or sub sub pop lret push in push inc xor adc sahf push dec xchg rolb xchg scas fs out (bad) mov fisubl cmpsb out (bad) test mov xchg mov enter lret (bad) xchg xchg sahf loopne in pusha fsubrs test ljmp jo mov pusha bound (bad) into (bad) xchg cwtl repnz lcall data16 mov nop mov mov call stos xchg jo lods push (bad) xchg push lret xchg fisubrl out test ljmp ljmp fisubl mov data16 cwtl xchg insb nop xchg (bad) (bad) test lcall in jo push push (bad) (bad) movsb (bad) movsb fsubrs out xchg scas lret mov in pushf loop push scas in ret mov outsb mov xchg (bad) xchg hlt cwtl push out nop in mov into xchg into xchg loopne cmpsb pop sahf sahf enter lock loop test data16 cwtl loopne scas push sahf lret test mov pusha (bad) cmpsb (bad) (bad) stos mov rclb (bad) (bad) mov cwtl xchg ljmp scas fcomps sahf mov int3 (bad) shr insb mov mov (bad) xchg mov movsb mov mov hlt jo cmpsb cwtl rolb (bad) mov (bad) mov mov lods nop repnz fdiv jo scas xchg shlb faddp mov lods mov in lret stos ret xchg sahf pushf mov fcoml (bad) mov pop outsb ret mov (bad) into (bad) hlt mov fs xchg (bad) into (bad) xchg jb mov lock jo mov lods lock fs into (bad) lcall out nop mov fdivs fsubs lret in mov push out jb fiadd (bad) jb pusha push enter shlb (bad) mov (bad) mov xchg jo sahf mov nop insb movb mov (bad) mov outsb (bad) data16 movb mov mov xchg mov loopne movsb pusha outsb call test (bad) in mov (bad) out in jb (bad) enter fiadd in push pop fsubp (bad) out mov jb movsb pushf mov lods movsb enter xchg into (bad) out call out sahf out (bad) xchg loopne fmul lret fcoms pushf aam insb mov mov out (bad) lcall test scas pop push mov push (bad) (bad) into (bad) bound mov mov mov test call (bad) fsub xchg fidivl push mov cmpsb mov mov xchg xchg sahf mov loop (bad) (bad) xchg int3 push les movb mov (bad) (bad) call mov hlt lods mov (bad) sahf (bad) cwtl stos test out mov into (bad) (bad) (bad) mov mov (bad) (bad) bnd (bad) data16 enter cmpsb mov mov stos outsb nop out (bad) loop aam pop scas scas rorb pop in outsb mov mov (bad) ljmp xchg test pusha (bad) lcall mov push push nop scas mov (bad) (bad) nop ret fnop in in (bad) pusha into (bad) mov into xchg fimull lea sub dec stos sub sub call stos insl or dec outsb call dec sub sub dec push dec jmp test mov outsb imul or lods push jmp or cs es daa or sub sub (bad) imul cmovl insb mov or jmp scas xchg mov test mov sub sub cmpsb sub dec cmpsb into dec push call dec and sub popl mov sub scas call mov leave or mov sub sub mov (bad) or mov sub push xchg bound mov ret movsb cwtl jb xchg les in ret mov outsb mov xchg (bad) xchg hlt cwtl push out nop in mov into xchg into xchg loopne cmpsb pop sahf sahf enter lock loop test data16 cwtl loopne scas push sahf lret test mov pusha (bad) cmpsb (bad) (bad) stos mov rclb test sbb aaa and and int3 int3 push test dec ljmp insl push out xchg sub push xor dec sbb loope dec xor imul ret lret xor adc xchg shlb faddp test sub sub ret test and xchg test stos aaa and lea adc xor das aaa popa dec js ja imul inc sbb push dec pop xchg sbb into or push cmpsb mov inc test adc and xor inc push test mov outsl push insb push xor inc push sbb inc jae div and push push sub push shrb lds inc push push addr16 bound push inc cltd aad into push xchg (bad) pop xchg or aam es adc lods pop fldl aam int jno bound push mov inc push out mov push lret pop mov (bad) and aam cwtl (bad) enter fiadd in push pop fsubp (bad) out mov jb movsb pushf and and xor sub outsb mov mov push dec (bad) adc sub into ficompl mov test mov sbb sub dec pop mov sub int inc in rcrl xor je inc cmp sbb (bad) push push xchg lea push sub stos cmp inc lcall xchg xchg sahf mov loop test sbb cmp mov lods sub mov (bad) mov adc (bad) cwtl stos test out mov mov cwtl mov sbb cs xchg in je mov push xchg jmp or jb jp push aaa dec inc pushf pop sbb push push adc xchg fs hlt je aad call sub or gs push data16 dec test or push dec in call mov pop adcl outsb out xchg test adc sbb pushf sarl jne xor jno jp movsl or jae aaa dec push push and xchg push xchg push cmpsl xor daa push jecxz (bad) cmp test jne je pop push xor inc ss arpl outsb fs dec inc xchg fcmovnbe popf sbb adc jae push push and mov fiaddl es sbb aaa and int sub pop arpl push adc adc data16 pusha mov mov push cltd xchg dec enter into inc push pop ss mov sbb pop loop fs xchg (bad) xchg pop rclb shlb xchg inc inc push xor stos stos mov imul push dec dec jp xor dec dec imul lock xchg cmpl cmp push sub rcrb push xchg pop mov test cmp sbb and push aam dec dec lods or dec push sub adc adc jb in (bad) lcall fstpl push sbb mov xchg cmpsl sub sub cltd movsl mov dec push lcall sbb or or xor push xor mov mov xchg je sbb test dec xor xor push adc dec push push xor lcall dec xor mov mov or imul jo pop mov fwait mov cmpsb fsubr ret outsb lods inc (bad) and mov movsl in into push pop adc pushf in call xchg movsb lods mov mov inc push xor sub leave push pop int3 cwtl shlb test xorl and sub or xor bound fsts fcompl xor adc push push push xchg push push nop int mov lcall adc enter cmpsb out sahf daa xchg xchg xor adc jmp int3 xchg and sub data16 mov test ja divl sub xor nop fstps inc insb dec rolb add addr16 sub xor lea xchg hlt and movsl push pop test push int3 jmp push sub dec ret mov lret inc lods sub dec mov and pop push adc fsubl ret test mov sbb mov mov imul adc outsb (bad) data16 mov mov mov xchg and xchg xchg or and aaa cmp popf or or sub int3 sub sub dec and lcall sbb push adc mov cmp xor test xor sub sub or or je cmp (bad) push dec jmp and pushf ret mov dec movsl out imul or lret push mov push jo inc nop pop xchg xchg xchg xchg pop sahf adc test enter cld (bad) sub inc bound mov jb pop das data16 stos pop adc pop and sub xchg test rorb adc push test and mov push je cmp and sub inc and arpl mov cltd in push inc and pop int3 lret jo lea mov mov (bad) call not push imul outsb test mov lods shlb add inc fs jb mov ret arpl sub xchg mov es mov bound scas arpl jno cltd sbb aad adc cltd cltd push lea push adc lret jb addr16 inc xchg sub lds xor aad rcll xor sub stos mov (bad) mov jno and xor in into sbb outsb dec dec jno les dec or sbb mov fwait jmp dec dec sub ret inc adc and inc xor jns mov xchg mov addr16 xchg (bad) dec push adc roll and cmp jecxz imul xchg fsubrs sbb mov and xchg xchg jecxz jae adc push push das addr16 fimull test stos mov cwtl test movsb bound adc dec mov or adc in inc jne idivl sahf pop enter out cmp or add popf adc mov and or mov mov dec (bad) adc sub or xchg jae xchg mov mov imul rol jb jae stos or lret pop or or cltd ret cmp or mov lcall jae sbb sub mov sub stos lcall sbb or shrb dec sub jae mov sbb jp rorb stos or mov leave xchg xchg xchg lret jnp bound mov cmp stos sub pop xor inc shrb add lcall cltd jnp lret or shll mov cmp or adc stos inc mov mov and or mov rcrb dec mov xor mov mov xchg pop push mov push cmp xchg pop jnp mov mov or or jae xchg pop or or cmp dec pop mov mov jp mov or jp pop or jb lcall adc or mov xchg xor and xchg sub mov stos popa add or mov orl mov push xchg stos stos adc or xchg mov inc bound or jno mov jnp or inc lret adc stos lret or or sub lret jae jae lret lcall rorl adc or cmp or stos mov or jns or xor stos and mov mov jnp jp subl jp sbb or mov lret mov or sub and rcrl dec and fwait or or mov dec or jnp cmp adc sub inc mov mov push or shll fwait mov jb lret lret or fwait adc mov or xchg cmp sub subl or xor stos jb (bad) arpl (bad) lret mov (bad) sbbl cmp mov or inc pop ret jns or inc or or or arpl xor cmp xchg adc or and xchg jp pop or add pop rorb sbb ret jb lcall lcall mov xor lcall stos stos and pop ret bound mov subl inc xchg fwait or xor or stos jp pop sbbl mov or stos ret imul inc mov and or add xchg stos mov or mov inc cltd stos or (bad) mov mov and mov mov xor stos and mov sbb stos shll sarl and mov pop or and sub sbb mov cwtl cmp sbb sbb lods sub mov xor cwtl cmp daa xor mov stos es sbb xor mov mov mov sbb lods mov sbb mov cmp sbb lods stos and xor mov and mov lcall cmp cmpsl test and cltd lcall movsl daa mov sub lcall stos mov movsl mov es sub lods mov cmp stos cmp aaa mov ss cltd xor and sub mov lcall and xor mov sub sub sbb cmpsl test cmp lods cmp pop loope sub test cmp leave sub mov mov pusha fldl inc mov sub mov dec push dec jae aaa dec das dec push xor cmp dec sbb aad xchg cltd mov pushf xchg or push adc pushf push xchg xchg dec rcrb pushf sbb dec adc xchg sbb push rclb mov xchg fcmovnbe popf sbb adc int adc rclb cltd xchg pop push push inc ret rcll push push movsb and xchg out out xchg push push xor xor jbe and xor test aaa and and push inc fs clc lcall cltd xchg sbb mov mov aad fstl loop push rcrb xchg push push dec or aad aam fsts push push xchg xchg pop sbb push xchg pop int3 fmuls mov (bad) fdivrs xchg (bad) in lock test into movsb aam (bad) lret lcall xchg ljmp insb lcallw cwtl out push aaa arpl stos and mov mov pushf lcall enter or stos mov test jne pop push adc push push cltd inc popf popf ffree and leave dec sub or or dec sub (bad) or daa or cmpsb aam test and data16 xchg test lds and xor mov add mov cmp int mov dec movsb cmp cltd movsl rclb int3 dec into sbb imul insb sub leave dec test add or mov pushf xor stos or loopne rcrl aam push (bad) nop bound in pushf nop cmpsb push cmpsl fs sbb push xor and or mov adc inc sbb cmp xor and and mov cmpsb mov mov and in enter mov into imul test call jne push dec adc into or add push jo repnz loopne les xlat and lret pop les mov into lret in in bound mov xchg fs ljmp call int3 mov xchg lods lret stos ljmp data16 fcom data16 out mov scas test (bad) push sahf (bad) out gs out aaa inc sbbl cmp cwtl movsb and fwait sub pop aam xchg adc sbb inc stos addr16 mov xchg movl jecxz xchg and mov xlat inc test cwtl dec or rcl push int3 call xchg nop lcall outsl movsl and cwtl mov cmp mov xor xchg out ljmp mov loop pushf mov ret mov int3 in movsb sbb mov mov or adc add inc in jp lret lret push stos adc pop jp inc arpl push adc xor pop mov dec dec xor ss mov cmpsb mul push adc and es fstl out sub inc or imul xchg out test inc dec inc stos es int3 push inc dec xor mov push leave pop cmp lret or lcall push mov test pusha jo daa pop and and mov jmp dec dec sub enter imul cmp adc (bad) or sub shlb rcll test int adc mov jb enter mov jb xchg lcall les cmp fwait sub mov xor xor mov mov pop push xor and xchg addr16 icebp sub cltd xor (bad) movsl bound dec and mov sahf pop fcoml sbb ficoml lret ret sub dec rcrl int add insl dec popa xor lret stos jo push add scas adc leave into cs es lret sub es inc pop mov mov call stos pushf mov insb cmpsb mov ret hlt push (bad) dec dec bound pop cwtl mov ficom mov call je push pop mov and mov data16 mov and ss push xor mov lcall inc (bad) fs mov nop in leave inc sub push leave sbb push nop mov (bad) mov es sbb ficom mov xchg pop rol test imul and movsb adc and mov mov and movsb (bad) lret mov push sub pushf test inc mov xor mov mov adc test dec leave cmpsb inc inc push xor jno inc or sub pop cltd sbb xchg mov rorb loop movsb mov mov lret call (bad) test shlb jb ficom cltd dec aam push xchg mov lea aam lcall cltd adc nop push adc sub lods imul inc dec call dec dec addr16 outsb inc jbe xor push gs popa dec jno dec push xor xor mov or jnp mov lea leave mov bound dec das das imul inc and jnp rcrb inc jmp int in in outsb enter (bad) int dec jns imul addr16 imul jbe and sub inc push ret test xor fs cmp jbe mov lcall push inc lret inc xchg andl or sbb int xchg mov sbb lret push cmp (bad) mov xor adc lret enter les pusha mov loopne in pop outsl insb xchg or movsl xchg and lods and aaa sbb cmp movsb mov xor mov mov int dec aam pop sbb fcmovbe push sbb sbb fimul scas es and mov daa sbb imul dec or scas out daa lds scas jmp or mov outsb dec or inc cmp inc or cmp loope or lea (bad) inc add xor or dec movsl insl sub mov cmp popf or fcomp xlat dec xor inc inc sub xor push inc xor js fsub cltd popf or test das and sub xchg pop add mov ret sahf lods xchg push sarl dec dec leavew into or or insl int3 cs dec mov dec or mov sub insb push sub enter sub insl int cmpsl sub gs push sub push out mov (bad) (bad) (bad) lret sub int test sub xchg lea call dec add sub insb outsl push inc lods scas leave cs sub in iret dec sub mov test call gs in in dec dec or sub out or das push dec stos push call sub xchg sub es into outsb xchg sub mov sub (bad) int dec sub push into dec call push mov out or call ljmp sub out push in leave sub cmovl push dec lea dec mov mov out mov dec sub or or cs scas test push ljmp cs or into test lea lods dec inc test cs into test (bad) cs lret push test lret sub out leave test ljmp mov or mov call mov stos sub in cs lods mov insl dec dec call int sub sub mov push movsl in push es or sub insl insl dec push test dec out dec push dec push ljmp mov mov cs mov sub es or es cmpsb sub sub dec scas dec imul sub lods call lods insb scas int or lods lret dec mov insb int3 call leave lods sub dec dec lret (bad) or imul dec into or (bad) dec or outsl inc dec in iret sub push into lret insb lods sub es out cmpsb leave lods xchg ljmp or lea dec pop push mov sub outsb out leave imul call lods outsb in imul cs dec stos dec dec int3 inc sub insb inc data16 cmpsb or sub (bad) push mov call insl inc stos es in jmp call stos daa push outsb es sub or inc outsb test xchg leave xchg sub push sub daa es sub stos cmpsb mov (bad) int insw pop push es es lea sub call cs dec or call scas or sub push cs dec cmpsb insb test or sub test sub mov ljmp es or lret lods stos int push push outsb or sub mov data16 dec jmp mov mov xchg in sub mov sub leave scas lods or es xchg sub push sub mov sub sub mov in dec prefetch or jmp or dec sub sub mov lea into sub or push (bad) or movsl insl int push int cs test jmp inc pop lea cs movsl outsl dec int3 lods or leave sub and aaa xchg int pushf int3 sbb adc cwtl dec sbb xchg xchg adc adc push sbb push rcrl dec fcom push dec popf pushf pop pop fstl push push adc fistpl lret (bad) nop xchg pushf sbb adc fisttpll lcall rcrb lea lea push push mov scas lea call dec add test aaa andl push push fs push and out push jae hlt push inc je dec mov push adc or cmpl jno popa fldl lds lods popf add movsb (bad) int flds movsb loop insb (bad) xchg (bad) mov hlt in pusha in in xchg xchg mov ret into mov movsb jo stos repnz loop cld inc dec addr16 inc dec push push jp inc inc js insl arpl insb imul je push push dec pop insl inc inc push xor jo jne jo push inc jbe jne imul inc insl pop jno dec bound sub inc jbe xor je dec xor inc xor xor push inc push das xor dec inc addr16 ss push inc dec inc inc xor xor outsb addr16 inc aaa js sub pop pop movsl fst mov int sub sbb lds rcll movsl ljmp test cmpsb xchg mov mov ja test mull adc mov and inc mov sub push dec push push push add scas dec push xor inc stos cmp mov cmpl leave jmp popf add xor cltd inc or data16 xchg xchg mov loopne mov mov (bad) cmpsb hlt fs int3 mov inc jbe pop dec gs outsl jno inc push push sub sbb mov and sub mov sbb cmp movsl pushf test mov sub mov (bad) mov call in les xchg bound xchg mov jne outsl je je outsl inc inc jno xor mov xor lods pushf sbb sbb dec into mov dec xor das ja xor ror xor nop xchg mov aaa push dec push xor inc outsb outsb imul cmp xor and and cmp mov mov cmp mov pop rcr aad adc pop lcall insl cs dec cmpsb insb test add push xor sub or out sub sub (bad) push les xor sub dec mov mov je add movsl jne inc movsb jae inc xchg in pop and mov and inc lea fisttpll lds out (bad) into mov outsb les pop test xchg lods and and adc jb arpl les jnp mov mov jns pop adc aad lods jmp cmp (bad) aam mov push dec inc push xor inc sbb cmp sbb cwtl lea int3 int adc lret dec or das inc out jbe xor adc lods cltd sbb mov int3 mov xchg xor mov and (bad) xchg xchg gs inc sub adc and call stos rorb jb inc gs dec inc and cmpsl adc and adc in int test and push test sub sbb leave and loope adc stos (bad) mov inc and add mov push adc pop push dec mov dec sub outsb mov xchg mov push inc inc xor lcall jo enter rorb shlb outsb mov push push ja pop inc xor pop inc dec pop jae jae sub ret dec or push lods dec lds add pop mov mov xor mov mov adc rcll pop mov es sbb int3 sbb (bad) or dec xchg push sbb movb mov mov lea enter gs xchg or adc sbb mov out lret inc data16 push jns jbe js inc inc pop outsl pushw roll sub int in ljmp loope sbb (bad) xchg lret push out mov ja dec bound dec addr16 cmp mov and xor mov inc fs xchg and xchg and mov dec (bad) lods sub push stos lods mov je js lret mov fs sbb sbb pusha data16 xor adc push mov sub push xchg and xchg xchg data16 adc push arpl data16 adc jae push ss pop sub sub or push cmp aad and (bad) (bad) push jo lcall loop fs pusha es sahf xchg dec jb faddl lret xor nop pop push push push adc sbb cwtl movsb sub cmp adc push cwtl fwait rcrl rorl dec push daa cs movb mov inc mov sub inc push dec js cwtl in xor loope inc es push sbb sub adc rclb xchg cli sub aam gs or xor or xchg xor and inc fmull shll sub inc push sbb movsl adcl jae je retw adc adc and stos pop cltd sahf mov stos cmp mov adc rcll inc ss andl test (bad) into dec mov subl and fsub test add mov test inc mov push mov mov (bad) sub and sub cs addr16 arpl or and push sbb aam (bad) lock ret and daa lcall mov or loop jo inc das jo js mov xchg adc and lods roll sub movsb sub cmp lods adc leave in stos gs xor dec push and mov and insb xor fucomp dec movl or or cmp and enter fstps or xchg fs divb stos cwtl mov mov xor adc repnz shrb mov enter mov mov bound adc and leave push (bad) movsl ret test cltd adc aam and sbb push enter xchg lret xor mov (bad) mov pusha addr16 cmpsl xor xor cmpsl sbb mov bound push stos (bad) mov cltd sbb enter xchg xor push push push push xor cwtl ror adc jb stos test sarl inc xchg pop cwtl loope loope mov adc xchg push nop pusha fisubl (bad) sbb adc (bad) ljmp aaa sbb jns jno jno mov pushf fstl jno mov mov push push or rcll jnp mov mov (bad) enter adc xchg fs push popa xor enter mov es and daa sub aaa movsb aaa call ss push inc sbb lcall inc inc push push scas xor inc mov mov ficoml mov into mov fs jne push jp sbb mov les movsl mov movsb repnz xchg adc push or mov cmp pop lods mov aaa bound adc xor fnop int3 inc xchg outsb xchg in xchg adc adc mov adc adc adc inc adcl push hlt push and movsl xchg adc and jbe (bad) hlt aam addl hlt jecxz test cmpsl adc xor mov cmc push xchg push mov in add fs xchg add jne arpl xchg push mov cmpsb xor push mov add test and adc mov notl push push xchg aam xchg adc aam fs cmpsl es xchg push adc movsb hlt addl ja xchg gs push xor je xchg xchg xchg fs push test inc xchg mov xchg notl divb adc fs fs out jb adc cmpsb xrelease adc adc aad arpl ja je xchg push cmpsb xor inc add push adc addr16 (bad) adc adc rclw inc adc (bad) mov rcll push je divb cmc jae mov pop push xor xor fs mov xchg xchg xor adc mov push adc daa and test aam add jne loop aam pop addr16 div adc fs jbe ja adc hlt pop movsl inc hlt push jae inc adc movsb xor test out push adcl adcl gs test in addr16 inc adc addl adc adc jecxz out jbe jbe aaa push je jae ja cmpsl push xor mov je ja je aaa xchg and mov adc lds jne add adc daa movsb pop add ja add inc arpl jne jne inc fs aaa addr16 push gs push mov xchg inc daa adc pop adc movl adc inc jae xor inc inc push inc adc es push out test push divb data16 push push jbe cmpsb gs xchg xchg pop mov cmpsb test jecxz (bad) jbe adc addl push test and and notl inc xchg ja adc test adc push movsl add push ja adc xchg add movsb aam je daa and mov adc adc aaa notb adc (bad) jbe es addl xor inc adc adc and xchg push mov push (bad) mov adc aam hlt xchg pop test les cmpsl and push adc adc xchg xor xor gs movsb (bad) je mov je mov ja test adc xchg adc pop je test push jbe add adc push xchg xchg xchg adc aaa and push cmpsb inc aaa cmpsl daa and push xchg inc xchg in jbe adc inc test push inc xchg ss inc ja push jae push movsl xor xor inc cmpsb daa aaa xor add adc cmc and and adc cmpsb je cmc inc je adc pop inc test (bad) fs push inc inc adc xorl out ss adc inc (bad) aam adc hlt adc je addr16 movsb gs testl les xchg in and movsb movsl adc addr16 xchg xchg mov adc add ss test xchg je xlat adcl add xor inc repz xchg inc add repz and xor and stos lods xor sbb mov mov movsl sbb sub fwait pop sbb fstp rorl push dec push sbb fstpl push adc pushf dec fcom push into sbb push push pop fcomps xchg rcrb mov pop aam mov sbb mov sbb xchg pop pop int3 rcrl dec adc xchg pop lcall pop fstpl push pop dec sbb aad pop push cltd xchg push pushf lcall fwait push or xchg rorb push xchg cltd sbb ficomp pop xchg pop pop rcrb pop push dec pop xchg adc push lcall rorl xchg push xchg aad adc xor ss dec cmp pop jb jb push data16 push dec gs arpl fs push xor dec gs xor jbe dec popa xor and lcall mov imul adc sbb bound or pop jno ret push stos stos mov orl sbb xchg push lret or push (bad) inc mov sbb push mov fstl int push push or pop xchg sbb pop int3 adc push pop xchg nop int xchg mov rcrl sahf or rcll xchg dec popf lods mov outsb sub ljmp int3 lret in dec outsb or inc out out outsl dec cmpsb imul cs inc imul mov or dec dec or out or (bad) cs ljmp mov stos lret lods iretw mov insl out sub outsb cs or sub dec push xchg sub xchg enter gs int3 in enter dec dec lret das cmovbe or push dec lods in es imul test imul mov insl or dec sub xchg insl in test dec push push inc xor cmp or dec xchg mov push cmp xchg xchg ror inc fwait pop mov fwait jnp sub arpl dec adc inc ret lret mov and cmp in lods sbb inc adc shl fnstenv add shrl test xchg popf add in sbb jmp mov (bad) and dec xor adc inc aad xchg dec dec jmp mov sub dec call dec mov dec dec xchg outsb stos xchg sub xchg out cmpsb int3 (bad) sub leave dec mov mov mov mov push lods or or dec ljmp (bad) cmovl imul push mov call dec in push dec dec or mov dec push out lods lods int3 test in push dec lods test sub sub call into (bad) out or sub cmpsb or mov or push push adc adc xor lcall cltd fwait dec inc mov cmp fwait imul shrl sarl loope inc adc xor mov mov iret push gs leave dec mov or inc out into or jmp daa and enter pusha movsb (bad) mov mov mov mov mov rcll mov push xor stos subl jae stos sbb sbb ret lret lret mov mov and fwait push lea mov adc rcrb push sbb xchg push xchg push xchg sbb push pop push dec rcrb dec sub out mov or imul rcr pop dec mov test cmpsl ja test and and sbb lds and je sub cmpsl cmp adc sub and pop inc lcall mov mov jp xorl inc ret pop ret jno lods (bad) or push sbb and mov cmp cwtl mov cmp cltd and movsl fwait and lds and inc lea outsb add in push dec jbe stos mov (bad) push adc adc lret dec stos push sbb sbb sbbb mov bound push test xchg sbb or sbb or pop rorb rcll sbb push push adc xchg fwait rclb lcall and xchg or loop xor mov and mov mov pop movsl sbb xchg lods mov fs movsb movsb push push in data16 push test movsl mov mov xchg mov rorb js insl adc sbb fwait dec fsubs sahf inc adc jae bound inc mov ror push loop jbe xor inc imul movsb sbb mov sbb popa mov push add dec jne and mov (bad) out daa mov xchg adc call pop mov pushf xchg fsubl and rclb je daa inc les push push xor and adc outsb jmp test out sub test mov and mov adc xchg test dec sub push or scas sub sub add dec call dec inc dec gs outsl inc inc inc pop inc das insl fs mov sbb (bad) xchg fstl rclb xchg fstps xchg sbb pop xchg lea xchg dec or push push sbb adc cltd fcoml adc dec (bad) out (bad) mov nop mov push mov mov mov mov aad push dec lock xchg push cmc push jne mov adc fs in outsb daa push js int3 mov movsb pop mov mov push pop push rcrb adc xchg cltd xchg adc push xchg int3 sbb cwtl dec xchg (bad) or int xchg ror pop xchg xchg fstps push rclb rcll or daa sub loope int dec aad (bad) xor daa shlb mov mov imul push aad xchg pop fs data16 adc xchg push sub mov sbb repz orl mov fsubs xchg mov shrl adc inc push push jns inc scas test pop mov dec es or ljmp aam push jecxz add testb and push cmp adc adc mov sub mov mov cltd (bad) rcrl mov inc jnp push mov push loop mov lcall nop (bad) pop mov shr insb push cltd movsl xor add xor push mov lds inc arpl movsl xchg ret xor mov imul push push inc lcall int3 dec int3 les shlb cmpsb fwait sub call inc dec insb (bad) in and push dec pusha xchg push loop inc adc into daa inc loop cmp inc mov test pop (bad) xchg and shlb dec push push outsl imul sub or int outsb cmpsb out es dec outsb lods jmp call daa push mulb and loope (bad) (bad) cmp mov pop inc mov add (bad) xor les and gs movl mov dec aam push push ror int3 fsub ret ficom repnz sbb sub loope dec sub lret xor pushf adc dec dec dec mov or outsb sub imul cmpsb xor xchg daa push daa jns sbb fadds shlb test fcmovne sbb push adc aam adc rcl xchg push fwait push rcll lea sub sub mov sbb xchg sbb mov lods imul fadd loope or rorl jmp add leave and or adc add cmp lods mov test leave sbb mov push aad push cwtl int3 enter fmul in lds sbb lea leave adc leave popf adc xor jmp roll aam sbb lds lea and or dec push lds int adc sub lds fisttpll or mov dec lods adc leave popf shrl ror xchg sbb aad or aad or test imul mov imul add mov adc xchg xchg rol mov lods aad popf or xor in (bad) add mov add lods in and adc pop enter sub or push rol mov popf add mov int in fstl and or aad and sbb push lods or lods add mov mov mov loope test sbb or aad cmp lea loope sub int add xchg leave xor add sbb loope and and lds lds xchg adc popf lods add mov dec adc popa (bad) gs vpsrlw inc push fnstenv lods push sub mov popf add pop push mov cmp adc lods add push sbb fisttpll lods add lds adc pop lds sub xchg cltd xchg lea xor mov lods mov push movsl movsl inc add pop xchg popa test mov and fldl dec push (bad) xor push add gs lds int3 int3 loope shrl xchg int push add sbb cmp sub inc add pop pop and vpmullw dec leave (bad) popa cmp inc inc cmp mov mov in adc fdivrs popf lods and adc fldl popf or int pop dec inc pop lds adc lods mov xor add sbb int cltd xchg lods flds add sbb and int or in add aam int test pushf rcr lods mov xchg sub inc mov push and and popa push inc sub add loope test add fucom fdivrs fdivrs in push add mov int3 rorl add add adc popf loope push rcr adc (bad) push lds pop pop sbb xchg push xchg push dec mov gs in lods imul add mov lods aam sbb cmp sub rcll shr lods add mov arpl adc nop push into push (bad) sbb adc sahf popf adc popf fcoms dec fst push push push pop adc xchg pop adc rcl cltd adc adc pop rcrb lea xchg lea mov lea or push pop adc adc aad dec sbb xchg or cltd rcrl adc ficom adc ficomp popf dec ror int3 push mov lods insl imul scas call sub out push outsb dec sub jmp or ljmp leave dec inc push mov add inc ss arpl xchg xor push adc xchg cmpsl adc mov movsl jbe addr16 xchg addl movsl movsb push les cmpsb push hlt je shlb xor and stos push cmp or fwait and lret xchg or or stos adc push xor and mov mov jp and pop xchg cmp ret mov jb and popa jnp xor sub mov rcll nop push push push xchg inc dec int3 call lea dec push dec int es lea inc call push insl dec or dec dec lds mov test xchg loop cmp mov sub int call in nop lock mov dec inc inc pop xor and test sub mov fsts push xchg adc rorl int3 dec insl leave (bad) or aaa xor xchg repz daa inc gs push mov mov jnp push sub push daa fs ss fstps aam adc sub or out movsl ja adc push inc inc xor push lret push push mov sub xchg push movsl movsl inc cmp fs ret push (bad) rclb les enter xchg lret add and push xchg mov mov adc int3 int3 loope shrl xchg int adc enter pushf pushf in pop mov jb push push dec imul mov pushf stos mov push adc xchg adc dec insl dec pop cs test cmpsb (bad) cmpsl (bad) divb xor imul xchg mov call push jno js jb dec and cmp stos sbb lcall sub push inc and arpl xchg inc adc adc push mov mov xchg sub inc adc loopne mov mov mov sub push dec push bound push fwait mov ret and scas push out sub (bad) mov mov and add lret imul test sub fwait cmp xchg test adc lods scas mov push fs push insl dec pop inc xor je and mov xchg sub xchg lods aam sbb movb dec xor cmp aaa xor adc sbbl or mov dec insl adc mov (bad) rol or xchg pop or push outsb fs insb imul inc xor mov sbb int3 into jo les pushf sbb daa sbb int adc mov es pop inc push andl lcall sbb int3 push dec jbe inc xor popa jo adc mov mov fs aaa xor push cmp xor and cmp movsb ss and jne sbb push aam push sbb sbb xchg rcr sbb inc push dec jns je push inc imul arpl dec addr16 xor mov sub mov or in loope dec cmp mov mov and movsb sub sub and sbb fwait rorl in sub mov mov xchg rcll push add dec imul lret sub and sub pushf shrl xor fstl xchg ret xchg (bad) fidivl xor and les adc sbb or cs cmp mov gs and shrl movsl push lds mov jb outsb push push outsb dec imul or pop cwtl movsb cmp adc or mov dec jb inc push arpl lea rclb repz aam push xchg (bad) repnz push and xor inc and dec mov push inc lret fnstenv mov inc cmp sbb or dec jmp insb jb xor mov sub lods sbb dec or nop fstpl call mov (bad) inc mov xor and es cmc push and mov adc fcmove pop jp popf mov cwtl shl inc xor dec int3 in das xor sbb adc pop rclb mov out or es insb pop bound pop movsl sbb outsb push hlt (bad) mov lock mov push push jp lcall jne lods outsb ret mov outsl dec sub cmp xor movsb daa stos cmpsb sub xchg mov adc movsb ficomp in push sbb sbb insb test mov mov rorl sub dec insb test push call mov xchg sbb rcr push test mov inc inc popa inc jp insb imul and mov inc fs jae push pop dec push jb xchg cltd mov rolb inc orl lret lea imul push je mov ret push or push stos ret jp ret arpl sbb sbb and in cmp gs sahf pusha test nop lcall stos mov daa movsb mov inc ror adc imul jb inc sub and mov sub cmp fnstsw sub and cmc xor adc push (bad) aaa jne mov aam mov adc in loop repnz inc daa mov sub aaa mov dec into push or data16 test movsb repz cmpsb and divl adc sub push bound and adc sahf ficomp inc and mov cmp mov mov dec cmpsb inc outsb jae lret pop mov dec mov bound inc inc arpl sub stos xor movsl adc mov cmp cmpsl and rorl test movsl and and daa xor xchg pop and dec adc cltd stc adc out call xor inc or pop ror inc mov dec dec outsb push sub xor pushf xchg imul and xchg stc or push sbb ret shlb bound inc adc mov and sbb lods mov rorl push xchg enter pop pop insb sub mov sbb shr les cmp cmp or ret sbb dec imul sub sub call push test sbb xor add mov sub imul or (bad) data16 and sub mov xchg push pop pop adc adc adc (bad) test xchg mov cmp jns push inc sbb mov push aam push push (bad) push sbb xchg xchg repnz aad and xchg mov push xchg inc push cmpsb stos and inc push mov xor push xor xchg ret mov sub mov mov mov mov jns dec jp dec dec loop pop xchg and xor push int3 hlt fs push popa cmp repz mov cmpsl pop sbb dec nop enter push outsb outsb mov aam aad pop pop int3 (bad) mov cmp sub popa lcall push adc (bad) push xor cltd sbb mov in adc shlb enter mov mov sub in and imul pushf (bad) test daa subl mov leave pop cltd (bad) mov mov movsl call jbe arpl xchg adc cmpsb and nop pop jno mov mov (bad) xor fwait xor dec dec sub jge mov hlt xchg push mov pop data16 dec push push pop adc xchg adc push dec dec push lret in sub aam xor fwait adc bound xchg xor cs call addr16 les inc and test stos and pop adc (bad) nop xchg push int3 sahf rcr into xchg cmp mov mov ficom aam or leave imul es lods call inc push inc adc inc sub icebp sub and mov inc xor lods lods sbb xor ja push lcall mov dec push mov jb enter (bad) loop dec xchg int loope dec sub pop insb adc sbb shrl dec (bad) jb push lcall pop mov mov mov xchg mov mov lret imul or stos push mov mov jp adc xor mov push sbb xor ret jno xor xor inc test pop mov adcl rorl adc xor mov mov dec or pop shll adc dec dec push dec jp push mov push or mov lret sub jno bound leave stos pop xor push or mov xchg dec push xor arpl mov or pop (bad) and andl sarb mov adc jae sub fwait lcall xchg push xchg rorb jp pop mov pop stos inc or push mov sbb jnp mov sub adc mov and adc jae mov pop or or xor mov sub sarl cmp sbb sub or or mov sub inc xor sarb (bad) or pop andl or lret mov mov stos or or push or inc mov jp mov mov sbb or leave xchg addl adc mov mov cltd (bad) sbb sub pop or sub test adc xchg and push adc ret xor jp arpl push mov jb cmp sbbb sbb or pop adc xchg push xchg (bad) fwait nop push ficoml adc adc pop xchg dec sbb es out insb into inc call sub dec out sub test dec mov ljmp push cmpsl push outsb dec (bad) or dec in dec jmp test dec sub push pop and cltd daa test and test cmp lcall mov pop mov sub cmpsb and mov movsb mov cmp and push xchg sbb xchg add mov jae xor gs dec xor xor push cmp mov xor sub cmpsb xor xor lret push dec sbb push push xchg fstl lea mov mov mov xchg aam inc daa es mov test push mov sbb jmp mov adc scas fcoml mov ljmp jbe das push imul xor jbe cmp mov adc cmpsb je xchg xor inc jp push sub inc xor imul imul inc cmp lods cmp sub lcall test push xor inc mov imul jae inc inc and pushf stos pushf test nop xchg popf push push push mov insl test dec jmp (bad) dec insb popa push arpl dec out lret lods out outsl sub push data16 push push imul sub adc adc cwtl aam out (bad) call dec inc gs arpl push inc cmp xor test rorl outsb sub cs jmpw addr16 push mov xchg arpl cwtl xor fstpl push in ljmp xchg es and movsl fwait lcall sbb push int or dec push dec nop push or lret lret push mov lea into dec cmpsb out lret into mov or push das add xor das inc sub xor adc sbb popf pop sbb pop pop rclb (bad) fistpl rcl push dec or ljmp test das or or out jmp int outsb dec dec sub test cmpsb push test aaa ja (bad) push xchg push test cmc push je push push notl mov je xor daa push push cmc je and jae mov xchg je testb movb je push arpl xchg sub mov push or test inc adc or roll and mov push pop arpl dec int3 lret in xchg int3 and les fwait push push adc arpl sbb sub in sbb shr shrb mov out ljmp mov (bad) xchg enter repnz ljmp mov and and imul lock lods ret test jb lods mov xor aam movsl divb lret pop rorb xor mov subl sbb jns cmp mov (bad) or push jp mov mov ret push push lret fwait mov ret cmp (bad) jb inc sub dec cmp fwait pop jno mov mov mov mov mov jno jne outsl addr16 and mov mov test daa cmp mov pushf les push js ja dec jns push dec push pop pop jp ja xor inc outsl popa jo fs inc and cwtl and rorl mov insl or or xor dec xor andl pop push xchg int add test or out dec insb loop xor cmp sbb xor and sub adc lret loop push inc ss sbb shrl fcompl mov out xchg out pop fmulp lret lret shrb data16 aam push and (bad) out inc es cmp xchg fisttpll and xor in xor adc mov data16 loop aam pushf insb lcall mov sbb sbb mov xchg pop int3 xchg adc push imul inc xor xor in jne xchg sub fisttpl push adc pop push lea dec sub or in imul xor xchg dec pop int3 push push dec adc (bad) sub stos (bad) sub inc cmp mov sub movsb pushf adc lcall dec adc push cltd xchg or xchg ljmp and fwait mov adc lea mov jp ret xor mov shll rorl in scas mov dec aaa adc lcall mov sub cmp fnstcw adc cld movb xchg ret inc (bad) mov adc jno bound ret and mov mov arpl sub test dec mov test in js arpl and mov mov aaa movsl cmpsl stos cmp cmp mov mov adc mov and fsub xchg xchg sub push cmp cmp or fisttpl ljmp xor mov xchg fcoml or pop xchg xchg rclb dec dec push sub or push jno mov and and inc ret sbb ss lods xor ret xchg mov push xchg xor sbb cmpsb int3 sub stos sub addl jns fwait sub xchg (bad) fst xor mov pop push inc insl inc and mov fmuls push mov push cmpsl or jns jnp popf adc xchg je inc ret addr16 outsb gs out add xchg sub cmovbe and outsl inc dec out push cmpsb or movsl test and jecxz fwait sub cltd mov shrl push scas (bad) out fisubl xchg gs mov xor into dec insl add push and jo adc sbb mov dec dec lods les xor inc sub es and xor xchg xchg sub mov nop rcr xor jns outsb dec jae inc sbb cmpsb sub sbb addr16 adc sahf popf mov dec int3 into or jo xor and mov sub gs adc fs les pushf and xchg xchg mov or repnz sub inc mov push xor (bad) sbb pushf xor push test loop daa add aad inc cmp adc aam xchg mov mov mov push dec scas insb mov dec movsl imul mov mov xor lea dec bound xor stos inc roll sahf nop pusha mov daa add dec xchg push mov lods dec les xor imul push inc xor mov cwtl sbb push inc daa and xor mov push or mov test mov addr16 outsb dec jp push and mov push inc xor test xchg inc gs inc xor arpl mov and adc mov sub dec dec daa sub pop sbb test sbb xchg movsb mov daa xchg cwtl mov in pop insb push adc nop xchg adc sbb sbb adc cmp loopne (bad) (bad) mov cltd sub test adc pop test (bad) (bad) hlt pop jne movsb adc test enter fisubr lret mov jecxz sub mov pop pop rcrb inc aam mov fisub xchg xchg xor sub pushf sbb sub and mov mov mov mov mov mov xor sbb lods and sub pushf lods adc xchg cmpsb mov sbb cmpsb mov movsl mov mov lcall and cwtl cmpsb and mov cmp mov movsb cmp pushf and aaa lcall mov movsl sub mov daa and cwtl mov mov fwait and lcall mov mov cmp lcall xchg lods mov cmpsb xor cmp test mov mov mov and xchg test and mov mov and mov mov test mov and mov and fwait and mov mov cwtl xor sbb cwtl cmpsb test test cmp mov cmp sbb cmp and mov mov lods sbb xor mov mov lcall lcall cmp mov cmp mov mov movsl sub mov mov sub test mov cmp cmp xor movsl mov cmp and and mov aaa mov xchg mov mov cmpsl cmp and mov mov sbb lcall es xor stos and cltd xor cmpsl mov stos movsb mov sub sbb mov mov xor cmpsb test cmp sbb and sub xor movsb mov mov pushf mov mov and xor sbb cmpsb and movsl mov lods ss cmp xor xor mov mov sub lods cltd sbb sub mov and cmp mov mov xchg lods sub mov cmpsl sub mov daa sub mov and aaa xor cmpsl and and mov cmp mov test sbb mov and test mov adc test sbb aaa sub sub mov xchg mov mov xor cmp mov xor mov daa cltd daa xor mov mov mov mov lods and cmpsl cmp lcall sbb pop mov sbb xor mov mov xchg mov fwait mov sub mov mov stos mov xor mov mov sbb mov mov aaa mov mov test and lcall mov sbb sbb mov lcall and movsl lods mov test mov cmp lcall movsl lods xor xor mov pop ret sub pushf sbb sub and mov mov mov mov mov mov xor xor mov mov fwait pushf lods adc xchg cmpsb mov sbb mov movsl mov mov lcall and cwtl cmpsb and mov cmp mov movsb cmp and aaa lcall mov movsl sub mov and cwtl mov mov fwait and lcall mov mov cmp mov xor movsl xor cmp test xor sbb cmp sbb ss test and mov and and and mov test cmp mov aaa mov and mov mov cwtl xor and test cmp push push int3 fcoml popf sbb fwait mov push push sbb xchg xchg push push pop mov popf push xchg lea or sbb push or lret sbb mov pop push bound xchg push xor push test je aad andl dec aad mov imul in or loope and jmp inc add cmp int sbb fnstsw jmp dec dec dec jp cmp and adc push popf adc dec dec pushf pop sbb adc adc arpl cltd jns mov mov lea pop insl dec dec push dec jno dec insb pop jp movsb aaa cmp stos movsl sub pushf mov ret andw xchg xchg mov xchg xchg addl addr16 xchg jae ret inc addr16 jbe pop aaa mov xchg xchg xchg and push mov pop movsl xchg inc adc inc cmpsb (bad) es ja adc mov movsl xchg mov aaa xor push xchg in aaa fs mov jnp or sub (bad) jae xchg inc ret jp jb bound xchg fwait or sarl adc mov mov xchg sbb rclb fst fwait xchg xchg add mov push sub inc push inc dec inc inc inc outsb push pop pop dec xor pop lret push xchg sbb pushf push aad adc adc dec pop nop push adc xchg push pop ficompl fwait xchg pushf dec (bad) xchg push cwtl fwait lcall pop pop mov (bad) enter nop xchg xor sarl fwait adc fisttpll inc sub add lds pop sub int push mov aam fs ficom mov xchg mov loopne fisubl mov cmp adc and mov adc sub int cltd xor cmp cltd test sbb lea stos cmp mov dec data16 cmp dec xor xor cmp arpl dec push dec cmp imul mov mov xor inc scas nop loopne (bad) xchg fcoml daa mov test push data16 movl divb hlt aam adcl jecxz aaa pop cmpsl movsb mov shll (bad) xor sub or and pushf sub lds roll ret adc das jne insl ja adc andl (bad) xor mov push shl imul mov out movsb jo xchg out (bad) nop repnz out repnz (bad) enter dec js pop inc cmp jae dec inc je jne dec popa push jo movsb and mov sbb stos fadds add les pop push jbe andl inc into loop aaa nop aad mov and dec shrl dec stos inc jo jns dec imul xor push dec push sbb aad fs bound adc cwtl shlb inc jo push push xor xchg mov mov (bad) cmp jbe outsl adc out mov movsb sbb and adc mov test dec lds leave int3 lea dec adc lcall lret aad xchg fwait sbb or lcall adc sbb (bad) mov divb xchg cmpsl push dec adc int dec xchg out xchg gs jae push popa adc jmp dec imul lret or rol scas (bad) data16 xchg push and mov cltd mov movsb aaa fwait or (bad) cs dec cmpsb dec and or or push sub dec test sub daa push in imul inc loop daa xchg inc adc mov dec lods out sub cs test inc push dec xor xor xor jbe push sub mov lock repnz in hlt lcall mov test xor mov lret push inc push push data16 or or into sbb push and push je push movsl movsb adc jbe movsb ss fsts cmp pop rclb xchg xchg movsl cmp mov leave stos rcll pop pop pop loop bound cltd mov mov mov (bad) jb lret and scas mov xor mov or mov sbb mov push mov adc xchg shll or adc and mov data16 aam push adc lret pop mov mov jp sbb shrl push fstps es cmp or sub outsb call adc nop ffree (bad) lds shr inc xchg sub scas inc push mov sub and cwtl pushf mov xchg inc inc mov movsl sbb mov mov mov aaa sub dec xor rclb inc adc repz inc mov int3 daa xor inc gs xor adc les mov xchg rclb xchg repnz addr16 adc sbb xor adc dec es repnz or inc lret das (bad) enter add pushf mov cmpsl cmp dec icebp and enter jl leave add push adc sbb and cmp lahf and sub or fmulp inc jecxz mov and faddl bound les dec pop cmp js dec inc mov loopne int3 jle add aaa jb aaa ss adc fst les sub sub adc cmp into xchg arpl sub int sbb rcll (bad) ret movsb (bad) loop dec adc push sbb mov dec ret or push inc and jae mov push nop inc loopne daa add sbb mov pop and les xchg adc or sbb push lcall and and inc push les and bound xor mov xchg adc es push rcl mov cs xor xchg or inc sub dec push xor jbe xor stos push stos dec dec dec push push fwait sub xchg adc ret sub (bad) je mov pushf fstps jae push xor push cmp dec sub xor (bad) aad gs call sub rorl push add jmp push and rcrl (bad) add leave adc mov (bad) xor sbb in push int add push add and popa mov lds xchg popa fnstenv add loope adc add aam lea sbb rol adc xchg popa mov int gs enter add test inc add sub lea mov int3 lds aad int movsl mov add test fldenv popa xor sbb mov test shll rcll cmp in sub mov xchg mov leave lds pusha (bad) test fstl (bad) mov shrl or mov (bad) xchg mov lods sbb sbb add mov and add fsub call pushf aam add inc dec add shll mov aam ffree imul lds popf add xchg sbb add push and loope dec mov imul pop lea rcr mov mov int lds frstor fldl popf movsl add gs dec loope lods or enter mov or loope mov add lods xor popf popf sub xchg aad mov or (bad) flds mov popf add adc loope adc add lods xchg or or pop add roll aad cltd lds (bad) aad sub popf add movsl lds add and int3 fsub xchg roll aad loope inc pop roll xor in jmp inc add int pop fstps sub lds sbb lea sbb mov cmp push les xor cmp aad in add push cltd cmp add sbb and add popf mov adc push or cmp adc and add int lea mov mov lods add lods sub adc dec cmp movsl loope cltd inc push gs (bad) (bad) inc add int in sub xchg adc int mov lds and add test add and or fsub gs xchg mov cmp add sub or lea popf add popa popa xor add int3 fldl xor cmp int shl inc add and test add fnstenv roll push test add rcll adc dec mov dec and mov mov fsubrs add pop ret xor push push push pop lcall fcoml fwait rorb (bad) pop int sbb push pop pop pop push ficomp adc rcrl push sbb xchg dec xchg or pop sbb push pop fistl push push sbb dec dec jmp mov enter inc xchg adc and mov stos ret or and mov lcall jnp mov cmp lcall (bad) and mov popa enter add test inc add sub adc out insb fcom out (bad) fmuls dec imul mov sbb sbb xchg pop fcoms dec (bad) sub and inc push in daa and adc ror push and pop movsl xchg xchg mov leave lds pusha (bad) test fstl fsubr push data16 jo ja ss sub movsl mov mov sub xchg sbb dec int pop mov or test in xor test bound xchg sub mov rorb (bad) xchg xchg fimull push dec aaa js push dec cmp mov mov movsl sbb aaa xor xchg fstpl fnop dec pop pop sbb lea or sub or mov stos dec push lds sub lret lods dec movb xchg and (bad) xchg and push test bound jbe mov mov push push push jbe aam adc xor push xor cmp mov sub push or leave pop and pop mov cmp ret adc push inc sub int3 into sub push adc jbe add or lret mov lea mov jne cmp push je jb sbb cmp scas test ja push mov mov pop leave lret mov inc pop sub loope lea in test push nop ret adc jno lret pop mov stos in dec ljmp cmpsl jae data16 inc xchg movsb mov push or bound xor push or cmp inc push dec outsb ss mov fwait mov or sub out xchg test gs mov mov int in sub xchg adc lea imul xor or dec xchg arpl inc ja adc rcrl lods inc xor cmp mov movsl ja xchg jne movsb xlat test jp mov mov cltd mov sub or jbe js mov mov mov movsb and push add es mov and xchg arpl mov stos fwait arpl pop fwait lret sarl xor inc and or rorl push mov xchg sahf mov inc pop dec dec xor dec push ja inc cmp xor es push aad adc xchg fwait cwtl push push xchg sbb rcl cwtl cltd push pushf pop adc or mov fiaddl inc je ja dec dec dec and mov xor cmp xor jmp fmull inc add cmc mov and add adc fs or pop sbb adc xlat dec (bad) lret stos test cmpsb cmpsl cmovnp ljmp test sub enter mov imul call das sub mov or jb inc adc adc fsubr hlt pushf xchg (bad) stos iret rorb xchg sub in sub sub call xchg pop add aaa add adc xchg jnp lret xchg mov xor mov cmp sub xchg add pushf mov insb xor pop ja push inc cmp test cmpsb stos mov pop push cltd fmul xchg cwtl pop rclb adc dec call scas loop jne and mov test xor mov mov mov and sbb nop fstps lea pop push (bad) mov mov mov jb xor adc xchg (bad) dec int push leave (bad) sub xchg and push sbbl xchg push or ret lods in daa and sbb sbb cltd adc lcall dec lret pop sub das sub mov jns inc js mov ret sbb int fnsave dec pop dec inc cmpsb dec jbe inc pop dec inc cmp lcall sub or insl into dec xchg jbe mov adc mov push gs jae xchg adc rcrb adc das push lods lods inc in in call movsl ss es xor adc jbe mulb dec or xor mov stos insb into (bad) xchg mov shrb mov fstpl sbb mov hlt xchg data16 pop stos and sbb adc mov out (bad) daa cmovns dec or test xchg xchg lea movsl and fidivl mov test out xor push xor jae jo shll dec fstps mov cmp mov fisttpll inc sub adc (bad) sahf lods push pop stos cmp cwtl movsb and push dec aad fsts sbb nop push sahf sbb cwtl cli and fldenv mov int3 in mov in call js inc inc jns jno sub jne xor and into data16 mov push jae sub cwtl ror fld mov pop das js jp inc and xor and adc (bad) xchg sbb inc mov mov or jne out cmp mov inc push xchg mov push cmp pop inc pop sub dec imul mov mov jp xor jb addr16 xchg pop leave xchg scas adc fisttpl ljmp jns ja inc inc cmp and and push mov mov mov inc xchg inc in repnz jnp sbb stos mov jp imul sbb push pop cltd push inc jo inc push mull in cmp popf adc out into xchg xchg mov imul aad enter dec in call inc xor xchg push movsl sbb push mov or lea call cmp adc sbb popf adc or cwtl rcrl adc sub mov les cmc adc mov shrl jbe aaa jns xchg pop adc into and mov push mov xchg call in dec push dec lret inc xchg cmpsb push lds outsb mov dec dec push push adc and sarl daa ja sub or popf mov sbb mov pushf mov push mov inc inc sub sub inc je xchg mov fstl nop push dec call push jbe inc cmp adc adc mov (bad) inc jecxz cmpsb push xchg cmp jne popa outsl jp addr16 xor jno dec push inc jbe adc mov xor adc adc xor fldl popf mov lods mov xchg out adc xor xor in fisttpll xlat and sbb sbb aam test arpl sbb arpl mov arpl sarb push adc adc mov or dec (bad) mov and mov (bad) insb cmpsb jb call outsb out test nop inc ss pop xor sub dec popf or sbb nop cmpsb shrb lock mov mov insl addr16 bound push push fs stos mov xor cmp mov and sbb dec mov data16 and je mov mov dec mov imul push or lcall push xor je sbb xor cwtl test xor mov xchg mov mov stos mov cmp mov xchg cmpsb aaa xchg mov and and sbb sub mov sbb mov movsb fwait mov mov mov and mov mov cmp sub aaa mov sub cmpsb mov mov sub and cmp mov ss mov pushf mov mov stos stos sub sbb mov lods stos movsl sub movsb sub movsl and mov test cmpsl xor cmpsl cmp mov mov and cmp mov mov mov and movsl pop lods sbb daa sbb xor lods sub lcall es stos cmp sub pop mov xor xor and xchg mov test mov cmp mov sub mov cmpsb daa and mov pop cltd mov mov sbb fwait sbb mov pushf xor lcall es and and fwait mov pushf and mov mov mov sbb and cwtl and xor xor and mov mov movsb test xor cmp sbb mov mov cltd cmp mov stos sbb sbb stos fwait sub and and cmp mov sbb xor cltd and mov test cmp mov and aaa mov mov mov mov sbb cmpsb mov mov and stos mov mov cmpsb and mov mov mov xchg mov lcall mov xchg cmpsl cmp mov cmp cwtl cmpsb xchg mov mov cmp and cwtl mov cmp xor sbb and cwtl mov and mov mov mov and mov sbb and movsb sbb cmp test mov lcall mov adc cmpsl cwtl and sub cmpsl xor test stos mov cmpsb lcall lcall pop mov movsb mov mov xor lcall sub xor mov sub sbb and mov sub xor xor stos and cmpsb mov pop mov xor stos cmpsl sbb xor mov mov sbb cmpsl mov and cmpsb mov mov xor lods stos cmpsb daa mov lcall sbb xor sub mov and mov sub movsb and xor sbb test mov lods daa and ret xor sbb push int3 push sbb (bad) push push sbb dec aad mov adc pop nop dec rcrl lret fst pop push sbb xchg xchg push mov xchg lcall xchg fcomp lea int scas das sub inc inc imul ljmp dec outsl dec sub sub dec lret dec insb xchg insl enter sub outsb dec ljmp mov (bad) cmpsl adc push popa xchg push and dec adc adc pop sbb sub mov (bad) mov xchg test nop mov repnz xchg loop sahf data16 das dec xor xor dec ja js dec dec insl xor inc data16 ss jae sub aaa mov mov mov and inc mov xlat es xchg xchg sbbl (bad) xor test enter lods mov data16 testl push dec xor stos dec mov pushf fcompl ljmp pop inc jne dec imul shlb imul dec pop or inc out insl push push mov gs arpl push adc sub cmp lds mov xor bound into mov inc popaw imul sbb and mov ficompl rcl pop push mov mov mov and rol dec lcall enter dec lds xor addr16 inc and xor daa stos sbb sbb dec xchg push push push rcr nop push push ficomp int (bad) ljmp xor xor dec xor xor cltd and mov test rcll pop rorl dec dec in sub out push inc push and fimull test lret mov sub pop dec inc xor inc cmp mov mov fisttpl aam mov es push jae xchg jns imul lea mov int3 mov in cmpsb ficompl lods mov popa push insl xor dec sbbl fmull and adc imul dec stos inc mov adcl push sbb aam enter jo xor xor xor dec inc sbb cmpsl push dec out (bad) inc sub notb and hlt push arpl mov shrb lods cltd test shl pop dec push inc insb addr16 aaa imul xor sub inc push mov mov cmp ljmp push inc xor es push (bad) xchg or sbb xchg push rorl or outsl das dec in call and fs sbb xchg xor dec out and dec dec pop cmp cltd sbb lods and mov sub movsb and xor sbb test mov lods daa and sbb push fwait push pop push push nop push push aad or imul xchg push shll fxch add and test mov add test gs inc div movsb (bad) inc sbb (bad) and stos lods inc or push mov leave (bad) sub sbb vunpckhpd int mov xor pop ficoml push inc cmpsl ja pop arpl mov mov sbb stos or and cmp adc fnop sahf enterw xchg mov ja jne bound jne inc sbb daa cwtl push dec call dec mov mov les (bad) ss inc addr16 inc stos xor fwait arpl mov lds add mov pop ss dec insl jb sbb cmp mov push adc push dec mov or sub jae jae sub call adc call outsb mov mov push xor xor outsl inc cmp pop mov xor fwait push fisttpl adc mov into lods repnz push adc lcall test flds in out lea ja and sbb fcompl dec fwait xchg ficom push leave leave scas out mov push outsb pushw dec imul or (bad) dec inc xor ret stos ret popf or scas (bad) and lcall mov mov xchg add inc lret mov dec adc xchg rcrl pushf mov push inc xor inc dec push and add adc dec mov or push cs xchg jb mov lds inc sub fwait and inc lret push or and xor mov mov cmp or fwait imul push xor pushf test xchg nop es and in mov dec jno sbb xchg test xor xchg push mov xor and xchg adc or push pop fwait adc mov and adc mov mov les repnz mov (bad) adc mov mov dec inc inc inc dec jp inc adc lds (bad) hlt mov pop (bad) aam test ja cmp fs popa ss outsb addr16 dec dec dec inc push jae inc dec bound arpl inc inc je xor arpl and xor cmp mov test and mov stos test mov mov and daa mov mov stos cltd cltd dec shl int3 dec sub test and mov dec cmpsb es sub dec mov xor ja cmp xor xor mov sbb int push push inc fcoms mov push xchg dec adc nop dec pusha out aam shlb and adc jb and adc dec or mov adc adc dec les and adc adc pop sbb dec call or push je xchg push hlt (bad) and and movsb and div push not inc inc jns xchg pop xchg dec (bad) ret xchg je out inc adc or xchg xor mov lret ret inc insl outsl jp das js jns xor mov sbb enter test mov push inc push insb xor inc push xor fnstenv loopne test mov cwtl push daa inc sbb dec int3 push jb inc jb dec xor outsb push dec and xor mov lcall inc test and dec inc int (bad) loopne rol aam pop lock (bad) test and and fstl fsubl loopne push inc inc jne sub fs pop je xor sbb xor insl push ss mov or imul mov mov adc rcll (bad) test arpl push ja xor imul lret dec in in js imul sahf cltd rorl int3 pusha ficomp (bad) movsb xchg cmp mov push or xchg xchg pop adc push insl test jmp mov int and lcall bound xchg jb (bad) nop dec ja sub das ja inc jp dec inc inc dec mov inc and xor les xor aaa mov imul jbe je mov xchg shll daa adc and sbb adc and or rorb mov xchg jae adc stos or pop lcall es lret sbb inc (bad) loope fwait adc dec popa cmp loope xchg fisub repnz out mov xor ja bound and sub cwtl cmpsl mov nop rcrb sbb mov inc movsb repz xor (bad) push aam loop ja xor sub pop stos mov xchg or (bad) jne adc adc push sbb (bad) pop je mov (bad) stos pop mov lods gs mov cmp xor mov jmp outsl adc jb (bad) mov mov lods dec inc inc ss push popa inc push inc push imul inc dec dec push fs push imul cmp push inc fs inc xor ja push fs arpl push xor jp xor push dec ss jne jb insl cmp pop addr16 inc js inc push cmp push dec pop push inc jbe xor dec inc dec inc inc gs outsb dec dec bound ss inc popa dec pop addr16 jno inc push jb inc inc push inc inc push dec insl dec inc dec inc inc xor xor push ja das dec inc push insl xor sub push inc xor insb xor sub inc aaa inc inc dec xor outsb imul inc dec jns cmp outsb jo jae inc je inc popa cmp imul push xor dec jne pop pop sub sub aaa jb jp xor inc dec addr16 das pop pop xor pop addr16 dec imul jp inc inc bound imul addr16 jb pop fs je sub inc dec pop push inc dec push insl xor push inc bound imul ja ss push aaa inc inc inc outsl dec push inc jb ja jb inc insb dec je inc push outsb dec xor dec dec jne push inc push cmp xor cmp inc inc popa dec xor aaa dec xor js inc je xor dec addr16 push inc inc jae push push jp push push dec ja popa xor dec pop push xor inc inc aaa push jae dec push je dec dec ja push data16 fs dec inc jns addr16 inc xor xor inc xor pop inc inc push outsb dec addr16 insb dec data16 push xor jno insl xor fs inc jno cmp push sub outsb xor push jb dec js dec addr16 cmp push inc push push jp pop addr16 insl dec jne dec xor xor pop cmp xor jns inc jne popa outsb push push addr16 pop push push pop push ja das cmp insl outsl push xor js inc inc arpl cmp aaa dec dec push push inc inc inc inc inc push dec jp inc push dec jns jp cmp das cmp push insb inc js dec push inc xor inc je js push inc push inc gs jno xor push inc gs js bound inc bound dec gs outsl fs jae je jns addr16 jae js dec insl xor cmp inc inc jo bound inc dec imul js pop push push push push dec pop inc aaa dec dec inc gs dec bound inc dec inc inc aaa xor push jo dec inc imul xor outsl inc cmp inc imul dec bound push pop inc dec jp inc inc ss push addr16 inc inc je xor jo insb cmp jne arpl pushw push pop inc dec inc push xor ss inc jno push push inc inc push ss push inc jp inc dec dec push js ja insl xor dec inc dec dec dec push jp dec inc inc dec inc inc dec push push jp dec dec das cmp inc inc inc push jns js imul inc push dec popa jns push jb dec addr16 inc inc addr16 inc jno insl push jne cmp dec push pop inc imul inc jae dec dec push xor push push insb jns inc dec dec dec push popa ja dec cmp inc dec dec dec addr16 push dec inc push inc dec imul addr16 xor inc push cmp push inc popa inc arpl ja dec inc js jae xor dec inc inc push jb push pop inc ja inc imul outsl jns inc push bound jo outsl push inc jne inc dec and sahf popf adc push adc aam rclb rcll push sbb or sbb nop int popf rcrb cltd push sbb adc or push sahf lea sbb rcrl dec adc push pop rclb or xchg mov lcall mov xchg adc or nop (bad) dec xchg push fcoms adc test scas dec call dec mov or sub int call hlt movsb xor mov movsl push jecxz mov sub cmp mov lcall push lret cltd ret adc orl xor and mov or rcrl sbb mov sbb cmp adc cmp imul xchg rorl sbb pop leave imul movsb lods popf popf or xor leave mov rol shlb enter insb in cmpsb outsb test test lret in mov xchg call xchg fs xchg ljmp nop pusha fisubr les imul push inc je xor dec addr16 push inc inc jae push push jp push push dec ja popa xor dec pop push xor inc inc aaa push jae dec push je dec dec ja push data16 fs dec inc jns mov int test pusha mov test in fcomps lods push sahf out jb rcr mov loop jb aam push into xchg push nop lock into (bad) jo out stos mov into test mov xor xor pop cmp and cmp mov sub mov lods xor adc bound (bad) xchg shrb bound cwtl stos cmpsb (bad) mov hlt mov xchg xchg adc mov adc dec imul and stos arpl pop mov or or adc fmull cwtl rclb jae js bound inc bound dec gs outsl fs mov adc iret or lea push dec inc stos dec sub xchg test test movsb adc push hlt mov adc lcall pop adc or push or fwait ror pop rclb fistl adc fwait aam push push ficomp inc into pushf xchg je xor jo insb cmp jne arpl pushw push pop dec and sbb and mov stos sbb push iret or int xchg sub test fs adc and lds mov xchg xchg and xchg sbb push fcoml dec jmp stos scas stos inc or mov movsb pop xor sub and dec dec stos lods cs in leave daa and mov mov dec test sub in lods ljmp stos mov xor dec out dec inc dec cmp mov mov mov mov sub mov and push push sbb (bad) aad rorl inc mov push pop inc pop enter mov add leave test sbb sub es cmpsb jbe adc mov xchg mov inc gs mov stos jb stos sbb stos mov shrb xchg or or adc mov orl mov and jb xchg xchg jecxz and mov mov inc jp dec jno and jnp xor adc push aam test ret out xchg cmpsb enter lcall jb push push arpl popa and cwtl cwtl lret jbe aaa and mov mov aaa mov pushf mov mov cmp inc notb adc mov adc (bad) mov jae sbb stos mov sbb adc or mov dec mov in and jbe adc adc pop pushf xchg push dec inc dec dec out insb cs sub push test je movl inc jp test xchg adc loop test out jo mov pop inc push insl push imul hlt inc addr16 fs or mov ret lret inc or push das adc mov xchg aaa je xchg mov data16 push cmc xchg in mov mov or fcompl xchg daa daa inc and mov lea adc scas test sub dec xchg xor push pop loop inc inc daa mov daa sub lods cmp xchg mov outsb int3 mov mov mov out lods enter or lods pushf iret inc outsb push dec inc dec dec pop mov sub mov mov and sbb pop (bad) xchg fistpl outsb push push adc xchg sbb sub or sbb and fwait lret dec mov sarl nop movsb insb push imul fwait jae push push pop push adc scas mov cmpsb sub inc xchg cwtl cltd inc insb movl mov imul arpl es and dec inc rcrl lret adc adc pop ficoml (bad) push daa or stos outsb hlt orl lcall dec mov bound or int fmul (bad) sub aam insb push fsubr xchg nop mov and adc xor lret jp ret and int out inc push dec insb das enter outsb xlat mov rol leave pop lds and add int3 and and test sbb adc mov jb aam push jp fs push inc xor pop jb es cmp sbb sbb pop adc or dec or pop sbb mov or stos lret ret mov cmp xchg test and mov rclb pop mov addr16 js ja inc data16 dec and push lcall inc push xor imul and lods inc in push inc das arpl inc adc push adc pushf out mov inc and ss inc dec lea sbb mov adc aad cmpsb daa cmpsb xchg xor xor and pushf daa mov jnp popa mov mov fsubr ljmp insb xor addr16 xor in inc inc xor aad sbb movsb and cmp mov and xchg mov xchg pop adc adc mov data16 hlt out xor or mov and xor xor insb js xor dec in inc addr16 jo mov lcall mov mov cmp aaa addr16 ljmp mov or add xchg xchg dec or and mov loope lods popf adc gs movsl fisttpll mov lds (bad) or mov xor pop sbb les jmp mov sub inc or aad mov popf movsl popf or adc lods sbb cwtl int xchg in in sub sub fldenv int3 (bad) lds loope adc mov (bad) mov adc adc in mov rcrl or mov pop mov push push lods rorl leave inc adc loope mov sbb add frstor cmp imul mov or (bad) int loopne aad or pop movsl test int xor cmp or sbb in roll aad lds cmp test (bad) mov mov int3 (bad) xor enter shrl mov sub sub mov pop loope rcrl test popa mov xor adc cmp lea adc and loopne mov adc loope and cltd add popf and sarl pop inc or mov or movsl or popf or or push imul cmp inc lods push int3 loope xor popf dec mov sub or test rcr or xor lods dec xchg vpunpckhwd in fnsave (bad) fstpl mov add or mov add mov fnsave movsb aad popf adc imul lea mov lods lea in test popf test fisttpll enter push fldenv xor inc mov cmp lods mov popf or mov fstps imul lods popf or push xor popf adc pop inc adc xor add cmp rcrl mov lds or rol lds sbb leave and imul in xchg (bad) fisttpll push shl and in push sub fisttpll rol aad loope or lds or inc popf test cmp popf or fnstenv popa pop popf or xor aad adc sub popf or mov or fsub fstl mov and add sbb fldl rcr jmp add loope aad cltd mov adc jmp adc int3 int3 aam or mov sbb or cmp dec xor (bad) rorl aad cmp xor add rol dec inc cltd lea sub dec inc add pop and gs leave sbb int fnstsw cmp and int add sub and fisttpll adc sub test imul rcrl jmp sbb loopne leave push (bad) mov add sub test roll add aad roll lods add and mov add lods pop cmp lds aad mov or popa inc popa xor add cmp lods mov add dec push lds push rol popf and add xchg cmp add inc push lods mov popa inc add or fcom add cmp int lds xchg and xchg test test lds mov rol in (bad) int add fld mov cmp mov fstl adc cmp mov xor xor imul lds lds loope leave pop inc mov in popf add movsl and les mov pop popf mov test popf or mov imul movsl lea int and frstor mov fnstenv loope mov and mov in fldl lods cltd mov add test leave xor cmp int adc add push mov popf add dec enter sarb inc mov mov (bad) fldl sub aad int xor xor fnstcw add and aad enter ret das adc sbb nop mov xchg rclb or adc sbb (bad) sbb lret push pop or ficompl cwtl xchg pop push xchg push sbb xchg pop popf rclb pushf rorl lahf or leave push and scas dec call call stos push data16 test gs in sub dec xchg mov lret (bad) insb int3 (bad) es sub sub insl (bad) insl mov int push sub outsb data16 data16 enter or xchg enter cs lods scas mov insb dec into call mov sub inc mov daa jb ret xchg dec mov sbb add frstor cmp imul mov or (bad) int loopne aad or pop movsl test int xor cmp or sbb in roll aad lds cmp test (bad) mov mov int3 (bad) xor enter shrl mov sub loopne into test loopne mov shlb fsubrs mov loopne (bad) bound (bad) fsub rolb jb jo mov nop inc insl jb push xor inc dec inc ss cmp aaa mov mov or lods in nop aam xchg test (bad) xchg (bad) (bad) shr lock pusha lret movsb mov sub cmp dec dec jne inc sub mov stos adc lea lea lcall pop rcrl sbb push dec rcrl rclb sbb dec test mov push test bound (bad) xchg push push and cmp xchg (bad) mov lea mov lods lea in test popf test fisttpll enter imul int3 xchg (bad) mov insl sub xchg enter into mov sahf push mov mov mov fwait pop adc and sub gs inc adc xor sahf cmpsb jb shrb (bad) test hlt pop jo fsubs scas into xchg (bad) in push cwtl inc inc fs xor dec jo addr16 pop jp dec dec push cmp ja sbb cmp mov and movsb ss mov xor and mov int sbb sahf jb test aam in inc ss mov lods dec sub sub dec call lods test dec ret xchg cmpsb xor movsb xchg push lods or sbb fldl rcr jmp add loope aad cltd mov adc sub and xor push inc and (bad) test and inc pop movsb hlt jb lret pop or adcl xchg push dec push adc cwtl inc data16 push (bad) mov or mov lret lret mov sbb dec inc imul dec sub insb jmp in int3 sub dec push adc xchg xchg adc cmp or sbb xchg lcall mov xchg aam xchg ss das je xor addr16 jp inc cmp xor xor push je dec sbb and sbb and cmpsl mov rclb or push sub push into es mov or xchg and pusha dec (bad) xor daa xor adc enter loop xchg xchg inc inc pop adc xor adc pop adc dec pushw dec sub movsl push cmpsl es sbb pushf cltd xchg gs inc jae inc inc mov fisttpll push sbb rorl into sub loop xor jae inc mov movsl test adc outsl xor cmp push push outsl jno push xor sub and mov pop pop adc dec or insb call rcll mov ret mov and or or in mov enter or insb xor and xchg add int3 and adc xor int3 shr (bad) out inc and xor stos aaa xchg mov mov dec cmpsb test push mov jnp lret sub mov inc int inc out movsb xor outsb mov pop or lret int push or lods insl lods int3 xchg mov sub lcall arpl loope xor pop (bad) dec sub add and pop fwait push xchg sbb pop ret mov mov lods cmpsb test stos mov push insl jno outsl dec js adc adc sub push push sub aad and adc xor and sbb pop mov dec inc ljmp jb sbb cltd sbb dec int3 leave iret lea sub or divl cmpsl pop adc mov push xor dec enter mov or lret rclb inc sub mov mov cwtl push pop sbb lret fs inc sbb cmp and lods in imul imul (bad) cwtl xchg ficom in inc mov (bad) enter mov jbe and mov mov sbb (bad) dec inc xor dec inc mov adc test xchg xor mov cmp out je push push push adc call sub int3 inc outsb add inc cmp mov movsl cwtl xor cmpsl cmpsl mov test insb into push insb and lret rcrb into pushf cmpsb jns pop adc fs and sub stos cmpsl mov cltd rcll push push rorl sub sub push inc xor push cmp rcrb xor popa jmp pop movsl xchg adc hlt adc test in cmp lods cmp cmp inc lods mov adc xchg sub test or rclb das adc cpuid xchg aam sbb pop mov pop pop enter loopne mull and adc push int mov pop xor loope jmp inc add sub hlt out jb fadd pusha pushf mov movsb mov mov jno data16 dec xor mov mov inc push outsb dec jp dec mov xchg lcall add cmp and andl pop xchg adc inc xchg mov cmp ljmp xchg adc mov fcmovu mov fstpl aam or data16 jo movb mov adc loope fs or jb mov jns test lret mov int3 inc lret fcmovnu pop (bad) enter iret adc cwtl in sub ficom test mov hlt ret les bound xor mov cmp xor add cmp adc push lds adc pop xchg push test je aam lret jb ret sbb cmp mov mov push cltd inc add in popf add push inc dec push xor or pop adc mov push je pop pop addr16 inc xor dec jb or push sbb and mov xor lods sub in inc aaa cmpsl xor mov lods sbb mov push popa inc addr16 sbb int fistpl mov es cmp and inc int mov sahf mov fsubl adc or xchg fs sbb jb cltd cwtl xchg sbb bound push xor pushf daa movsb mov mov gs cmp mov pop dec rclb fstl dec test sub ror rcl adc push out test lods (bad) or fwait mov sub inc push inc gs es and stos mov add and add int dec rcr xor test fs add test rorl add add mov dec push loope push movsl or push sbb dec push add popf add popa sbb xchg popa sbb sub test loope add popa sub xchg add sub xchg popa shrb mov sub sbb mov adc cltd inc pushf aad adc aad (bad) leave add in rol test rol mov leave add lods (bad) mov (bad) test aad (bad) aad add int fisttpll test adc mov add rcl push lds test mov nop roll xchg adc aad gs sarl xor fldl fsts in (bad) or inc adc or add xor add adc mov test adc sbb inc add inc adc add add push lds dec push popf or sbb pop lds imul inc or mov cmp xchg popa and xchg add rcl lea popa cltd add cmp fldenv mov and test mov xor add aad lods imul pop mov test cltd roll mov leave add leave fst mov loope add pop ror mov imul mov sub cmp movsl popa and jmp mov inc leave xchg sub nop lds leave ror adc mov pushf fsts adc aad popa mov fldl popa fsubrl add int3 shl cltd leave dec mov mov add or shll add push inc sbb add shll mov pop and push popf sub add sarl add lods fnstsw add adc xor add mov dec push and cmp sbb push add mov pop pop and xchg pop mov rcl add mov test pop imul (bad) mov inc add add aad adc mov add inc or add gs test imul add and rol or sub rorl add inc or aad sbb mov adc or or (bad) popf adc add or mov or xchg test (bad) and or inc add add inc or inc or add popf adc add lds rorl add sub stos or outsb imul dec es mov dec sub insb jmp or test push push scas or lea dec lret lret sub sub int3 call sub (bad) sub or sub sub dec int adc cmp or and cmp xchg and adc sub sbbl jae or lret inc or xor mov sarl (bad) mov stos mov mov mov jb xchg or adc mov (bad) or arpl or mov fwait adc mov xchg or mov sbb mov lcall or ret lcall rcrl mov xchg andl or aam fs cltd sbb mov xor lcall mov mov mov sbb sbb mov mov dec sub sub call mov or lret sub dec enter mov and fs dec push ja fwait mov call mov mov mov pop test aaa xor mov cmp daa inc inc cmp xchg hlt push xchg xchg (bad) arpl cmpsl xor mov test dec push insl pop dec push insb inc inc fs imul pop jno outsb inc inc push outsb imul jo jne outsl popa jno xchg leave movsb leave fmull adc aaa sub data16 cmp movsl mov adc loope popa and inc inc inc jp xor fs inc xor xor pop xor dec adc int push aam push push sbb int pop lcall push sbb dec push push push dec pop mov push sbb dec fisttpl xchg in push add aaa test mov stos sub dec dec dec enter into or stos dec in or sub leave push sub push or mov dec fwait jnp cmp out sahf test bound mov test enter bound xchg or loop xchg mov (bad) inc inc inc lds and xchg pop mov rcl add addr16 push dec push pop dec inc je jo outsl enter mov test or cvtps2pi mov ljmp jns adc mov fcompl inc cmpsb mov test (bad) or inc outsl inc inc inc mov in inc xor inc ss adc inc dec sub dec and sbb into into and jno mov arpl sub cmp scas adc adc inc xor sub jno mov jno clc xchg push nop push fcompl push push push sbb push pop push push push fcoml push fcompl rcll sbb push push sbb push pop pop rcll pop push push nop push rclb push lea nop push fwait rclb push push rcl push push popf push push push sbb push push fcoml rcll (bad) push push cltd rcll sbb push pop fimull or rclb dec sbb push dec (bad) push pop pop rcll sbb push pop pop adc push dec adc push (bad) push nop push fcmovnu push push push sbb push cwtl push push push int nop push fcmovu pushf sahf pop sbb adc sbb rcrl fstl pop nop sahf push push push pop adc pop sbb lea nop push adc sahf xchg mov push sbb pop push push mov pushf pop int3 rclb dec fcompl or push push sbb pop adc cltd int push sbb fstl or adc push pop sahf lea sbb lret rclb or xchg push nop rclb push nop push push push pushf fst nop push pop (bad) adc push sbb rclb pop rcrl sbb push sbb push nop push pop rcrb fst adc rcrl xchg pop adc adc rcll pop int push sbb aam push dec adc push nop xchg rcll push nop push xchg push pushf push adc push xchg push sbb aad push cwtl aad pop push xchg push (bad) adc push sbb push rcl push nop push pushf (bad) pushf push sbb push fcompl nop push lcall adc adc sbb sbb sbb lcall adc pop sbb rcrb nop push rcrl pop push fwait push xchg dec sbb push fcomp sbb mov nop push aad popf lcall adc fcompl rcr sbb fmull push push (bad) push adc sbb push push nop push rclb push push sbb xchg adc int push adc pop aad push push push push push push push adc adc (bad) nop push push push push fwait xchg dec pushf pop rclb push push push dec push ficomp pop pop push push nop push rclb push sbb rclb push push fst push push adc pop rcr pop fnop nop push aam nop push rclb push sbb dec adc adc rclb push xchg push pop rcrb int3 adc push push push push pop nop push push pop push push push push xchg push push push xchg or adc nop push push pop pop sbb nop push adc nop push adc push fst nop push rcrl aad nop cwtl push nop push push push push push push push push sahf sbb xchg fcoms push push pushf cwtl nop push pushf pop lcall sbb push sahf pop sbb or cltd nop push lea sbb ficomp sbb fcoml nop push rcr pushf fsts adc fistl push aam sbb sbb sbb fstps sbb fcomps or fcompl fcompl pop fstpl (bad) sbb sbb pushf pop popf nop push int popf pop nop pop sbb or adc ficomp adc fcoml push adc pop rclb push nop push push dec rclb push fistpl push adc push adc pushf rclb popf dec lret rorl sbb adc fisttpll mov popf rclb pop into adc push push rcr (bad) push (bad) rcll pop rcl adc push push pop sbb push push nop push rcll fcom fimull rclb fsts rcrb pop dec sbb push rcrb aam (bad) ficompl rclb fstl dec adc int3 adc dec xchg sbb push adc lret rclb push push push xchg aad ficoml push fcmovu adc pop adc adc adc aad lcall push lcall pop push fwait adc sbb dec sahf sbb mov fcoms or push sbb dec (bad) mov adc fstps fistl dec sbb push dec rcrl push rcrl rclb rclb push pop push pushf pop fwait push lcall xchg xchg aam (bad) nop (bad) adc push fwait adc pop pop pop dec fcmovnbe push fistpl xchg fistpl pop pop rclb ficompl fimul pushf mov adc dec popf dec aam pop sbb pop rclb ficomp xchg sahf pushf int nop push pop xchg push pop (bad) adc sbb sbb into dec (bad) nop push lcall dec pop xchg nop push xchg adc int int3 fcoml fstpl lea sbb aam int (bad) lret lret aam int push sbb mov push push push push push adc into adc adc adc push pop rclb push push adc push push push push lea xchg adc push aam push adc xchg push push push int xchg adc fcoml rcr fistl aam nop push rcrb push push or adc sbb push rcrl int3 xchg xchg adc nop push adc push dec push aad pop adc push pop adc push xchg adc nop xchg push mov adc pushf push xchg rcrl xchg adc xchg xchg push into pop pop xchg rcrl fsts sbb cltd push push dec adc or (bad) mov cltd (bad) push int cwtl xchg ficomp push fcompl push cltd push fistl popf pop rclb cltd pop lea lcall aad or fcoml push pop push sbb adc nop push push rcrb sbb dec sbb push or sbb rcll int3 nop push sbb pop pop pushf push fistpl push lret cwtl push ficompl push fstps sbb mov (bad) (bad) xchg adc sbb push adc xchg mov xchg ficomp xchg adc rcrl fcom adc push pop xchg sahf adc lea push sbb dec pop cltd popf rclb dec or popf or push fistpl pop pop cltd rclb sbb sbb push push push lcall lcall rcrl rcll push pop rcl fst push nop cltd fcom push push push push rcrb into push sbb int ficoml pop adc pop xchg pop dec sbb push dec sbb push (bad) xchg ficoml rcrb rcrb pop or (bad) or push nop push lcall mov nop push nop xchg adc or push nop push pop adc aad push mov nop cltd rcll adc mov mov sbb push push push or mov adc popf fcom dec rcr xchg pop lea push lcall xchg mov push pop rorl fimull push push push sahf push push rcll ficomp fstl aad pop sbb pop sbb rcr pop cwtl pop adc pushf sbb fstpl pop xchg nop push xchg adc dec into pop cltd adc cwtl mov adc push adc mov aam lret aad adc push push xchg sbb push dec rclb adc or push push pop adc push nop rcrb fxch adc int nop push push pop rcrb push push popf (bad) push dec rcrl lret push push adc adc push adc sbb adc fstl into sbb adc pop xchg push rcrl rcr fcmovbe xchg pushf sbb push push adc cltd fst rcll adc fstps mov dec xchg fwait push fwait push fcoms pushf pop push ficomp lret adc adc push pop xchg push push pop push push rcrb push rcrl adc ficoml push pop xchg dec nop lcall aad push cwtl push adc adc pop sbb push rcll push push or lea pop fcoml rorl sbb rcll popf rcll xchg dec rcrb rclb pop sbb pop pop fcmovnbe adc fstl sbb sbb popf sbb fsts push sbb adc sbb push push or push push int push adc push push cltd fst adc pop dec popf rcll pop rcrb rcrb sbb popf rorb pop fnop mov into adc xchg xchg push rcll cwtl rclb adc sbb push pop adc pop xchg lcall adc push adc sbb push pop popf rcl xchg push push rcl sbb rcll or rclb push push push push xchg push xchg push xchg rclb or adc dec push rclb sbb push xchg sbb rclb dec xchg xchg sbb adc int3 sbb push adc rcrb rcr into adc xchg adc aam adc push or xchg push nop push nop pop cwtl rclb fstp rorb push push lea rorb fst sbb fstps xchg sbb push push adc pop sbb int pop mov fstl popf into push push sbb popf rcrl or push sbb push pop pop ficoml adc fstpl dec popf rcrl into sbb dec sbb adc int fstp push push int lea sbb dec into sbb ror sbb dec (bad) sbb fstps push rorl fwait rcl ficompl pop push sbb cltd rcl pop push lcall push push rcrl or lcall pushf or mov rclb fcom sbb push ficompl nop push push push push rcl pushf cltd pop lcall or or cltd xchg fcmovbe push mov xchg adc rclb mov nop push xchg pop sbb fwait sbb push xchg push xchg adc dec sbb pop xchg pop int3 push fwait pop aad pop adc sbb xchg cltd xchg xchg pop adc push push ficompl xchg aam adc push adc xchg xchg push push xchg push push rcrb rcl sbb rclb mov rcrb pop sbb rclb adc pop sbb cwtl (bad) adc fwait lea pop adc push sbb push xchg adc sbb sbb pop lcall sbb pop push dec rcrl xchg aam (bad) xchg push pop push sbb lret fstl rorb int3 fisttpll sbb dec fcompl lea (bad) rorb adc sbb push sbb and sbb sbb nop into es jb mov mov push lea nop push fwait rolb and mov (bad) and jno mov imul sbb lods cmp les and xor sub or inc adc negb inc and ss daa xchg xchg ja adc xchg xor (bad) mull pop addr16 movsb daa xchg aam pop test xlat xchg and adc push cmpsl movsl and cmpsb jae adc xor aad mov xor inc push aaa pop cmpsb andl or cltd stos inc mov cmp stos mov mov lret jae test jp and sbb bound or or (bad) add add movsb mov (bad) mov out mov test out nop (bad) (bad) stos nop fsubl dec inc inc jae jae jo inc outsl ja inc inc imul dec inc dec outsl dec inc inc cmp ja dec inc jo push inc inc xor push inc push inc dec pop push inc inc dec push jo dec push inc dec sub mov sub mov mov sub adc push sbb push les jo inc jo bound imul js dec dec xor cmp xor inc inc xor imul inc inc dec push dec jno push inc inc push imul inc inc arpl pop imul outsb inc inc push outsb jbe push and mov aaa movsl mov mov mov and gs test ljmp dec outsb push xor inc inc dec enter fistl mov xchg adc adc fstpl cld dec es nop popf loop dec mov inc jno inc (bad) (bad) mov jns dec inc xor inc mov ret stc adc aad mov mov sbb xchg fcoms test mov bound ja outsb dec push inc and xor sbb aaa cmp and rcrb rcr test xchg xchg cmpsb notl push sbb fwait sub and gs outsb jae addr16 dec bound inc imul jno mov fstpl (bad) adc outsl mov and xchg sub das dec outsb dec sub clc lcall (bad) inc inc adc aam pop pop nop cmp xor inc xor das push sub cmp push pop mov adc adc mov into lcall sub adc (bad) scas mov (bad) es adc sbb dec sub imul push push imul cmp xor and pop pop pop adc int push or in insl or lods and push mov push adc scas test rol scas fdiv movb xor sub cmpsl adc inc inc sub inc es xchg push mov lcall sub xchg mov mov lds dec sub inc inc xor sub mov and xchg mov imul adc pop push sbb (bad) and lods ror cmpsb into cmpsb ljmp lret cltd ret (bad) jo rclb imul pop or dec movsb inc inc ja xor xchg jne push push adc lret adc aam int3 fsubrl push es mov mov das push xor inc cmp adc test cmp inc fsub inc roll or dec inc push pop dec adc dec inc xor cmp and test push int xchg adc faddl movsl xor inc dec and pop (bad) mov dec (bad) fs test hlt mov dec inc cmp push js adc xchg push xchg adc dec sub sub or or jo xor mov sub dec push sbb aad pop cmp gs cmp stos xor cltd cmp inc cmp xor cmp lea lcall in xchg sub jns xor or mov sbb dec add push inc mov data16 call xlat push adc mov sbb or dec inc push inc sbb cwtl xor sub cwtl xchg mov xchg ficomp xchg adc iret dec stos or push js jbe adc sub (bad) in cltd fmull and adc sub mov aad popf adc shrb out enter mov imul push push inc push pop fst xchg sbb adc and cmp or into inc push sub push or mov addr16 stos pop push lret sub lea aad dec or push push push xor adc movsb mov dec dec sub test mov sbb loope mov adc stos and dec push inc inc daa cmp sub mov lds icebp xor hlt (bad) pop bound lcall mov cwtl pop add shll xchg mov test dec push adc sahf cltd xor and or inc push and xor (bad) xchg push push xchg sbb movl stos test or inc jae and lods stc xchg push dec rcrl lret jo xchg mov sarl mov cmp push dec push and movsl sub xor popf sbb adc sbb sbb (bad) les insl pop outsl popa push adc mov nop enter lods fs into xchg lcall es xor stos mov lcall popa inc adc and faddp xchg test movsl rcll out lods cmpsb ljmp adcl cmp inc test cmp mov mov inc andl mov data16 xchg test and repnz fwait mov mov or imul and jae xor movsb aam inc out and mov rcll dec imul shlb push jns jp jb sub mov les and sub or pop and dec outsb loop ss inc jae push push xor inc dec inc inc inc addr16 inc cmp inc jae dec inc xor push xor inc ja dec js inc inc inc inc push inc outsb arpl inc addr16 inc ja dec xor inc jp cmp dec ss ja jae fs ja xor inc inc dec je inc jae jo inc cmp das aaa jne cmp das jbe xor inc dec ja inc pop ja pop aaa ss insb sub outsl cmp arpl inc inc aaa jbe popa js push pop xor jno cmp xor dec cmp inc ja inc jb aaa dec ja push inc aaa jb gs outsl popa sub outsl ja xor sub pop push outsb inc inc inc das sub jb dec push push inc push imul je dec push outsb addr16 dec insl dec push aaa gs insl inc inc inc insb xor imul jo push das sub inc arpl jo inc push inc push inc dec jb outsb push inc push xor xor inc imul cmp push pop imul inc data16 push push js push insb outsl inc inc push push inc push jns ja push dec inc jp outsl xor ja popa insb dec inc pop insb inc push push dec push inc imul push ja inc inc js inc inc outsb dec push push push dec inc inc dec outsl inc push push xor imul xor push pop dec inc ja inc push insl insb jbe push jae dec inc xor push insl js bound arpl inc data16 xor push dec push inc push push push push push jns jb ss cmp js das inc jns dec push imul jns jb das jbe xor imul xor bound cmp inc das jno jbe gs xor xor insb jno je jno ss dec inc jbe xor xor dec inc inc dec fs dec fs ss xor push inc inc pop jo imul dec jp push jno insb cmp aaa push dec inc inc jb dec popa inc inc sub outsb aaa das ja outsl dec inc pop jns bound sub pop dec inc outsb inc data16 gs inc js dec inc inc js addr16 outsb dec dec ja outsl inc push inc push cmp outsl je arpl inc imul xor inc dec outsb dec push outsl dec cmp xor dec push bound inc imul dec push push popa arpl inc ja inc aaa bound cmp dec inc outsb jno pop dec inc push dec inc ja inc inc xor inc outsb pop push inc push xor data16 insb xor inc inc addr16 xor outsl dec xor arpl xor addr16 inc pop push insb push push push inc inc dec jp je push dec inc push dec inc dec push jae inc addr16 popa push push imul inc fs push inc push dec ja inc arpl inc push aaa push xor outsb je inc dec xor data16 inc imul addr16 dec imul dec xor jne addr16 push inc dec inc push push jae outsb dec dec jns insl ss outsb inc ja inc jo inc xor imul jb inc das jae inc jns xor xor inc das jne insl ss aaa jns jbe inc cmp push jns push push js inc dec jns outsb dec jno push xor dec xor push push cmp ja xor dec push sub js xor fs dec insl cmp cmp dec ss jbe ss inc push js inc imul inc inc sub sub jp das addr16 jo inc pop xor dec ss inc cmp inc push inc jae addr16 push inc inc xor jb xor ja xor xor pop push inc inc inc inc aaa insl push xor arpl ja addr16 jbe data16 inc inc inc bound inc push push dec inc dec dec inc insl dec xor insl dec pop popa jno jns dec dec ja dec pop push inc outsl inc jp cmp pop inc data16 dec jo pop push inc inc imul inc jne inc outsl addr16 push xor pop inc arpl push push inc data16 outsl inc inc pop xor ja dec outsl push jp dec inc inc jae addr16 xor arpl inc insb ss inc inc fs dec xor ja push push inc push pop cmp push ja xor gs push insl imul dec pop pop bound pop push inc inc cmp das pop push push outsl jno inc jp inc push addr16 xor push inc outsb push push push inc push dec inc xor inc popa aaa inc aaa xor insb push addr16 jne push addr16 inc xor imul inc ja sub push push inc addr16 push jno insb xor push jae inc dec inc push imul push inc pop push push imul inc pop popa dec push cmp xor inc inc inc inc gs bound inc inc ja inc sub insl jno dec insl push dec ja dec xor dec popa aaa xor inc inc xor jbe push pop outsb addr16 je dec jp outsl insl cmp inc push jo arpl jbe jno push inc imul jns fs popa pop addr16 jb push inc je pop ja jae inc das jae dec imul push push inc inc inc push ja jo push xor jb jp xor push inc fs push xor xor pop inc sub xchg sbb adc int3 sbb push adc rcrb rcr into adc xchg adc aam adc push or test sub sub insb ljmp sub push int3 lods movb mov push in xchg sub mov xchg outsb data16 or cmpsl cs inc es enter out xchg inc xchg jae je ret (bad) repz inc xor es xchg inc adc xchg mov xlat xchg roll add es ja adc ja push push push notb mov divl cmc xchg mov aad jbe in xor repnz mov hlt mov cmpsb jne pop dec lret jp mov cmp imul sub or and pop mov dec mov xorl cmp inc and or leave xchg mov lea nop leave dec leave cltd sbb in push pop imul test es hlt adc push fs daa xchg xchg push shrb mov mov popa mov dec cltd pop xor add sub fstl lock xchg xchg mov dec outsl inc push push xor push daa cmp sub mov ss and mov mov sbb lods and sbb rcr adc or dec or pop push enter mov jae cmp xchg mov imul in cwtl pusha jb mov das xor bound cmp mov mov fwait sbb pop sbb push int fcoms cs push xchg or daa add push push sub sub ret add (bad) jmp (bad) fnstenv pop sub sub jecxz divl or lret ret adc pop pop jb adc loopne lret lock push outsb dec dec ja inc sub sub mov cmp mov lcall pop int3 sbb ljmp or sub sub dec outsl dec sub lea sub rcl (bad) fcoms adc sub push call add in fs adc xor push jne push ss hlt mov aaa je inc test jb mov pop pop mov leave (bad) scas mov pop and lcall xchg ss je mov jae ret mov mov xor shll xor insb ljmp xchg mov imul dec jns insl ss or xchg int into inc iret cs dec call out es cwtl popf push ror cmpsb out sub int3 call mov push js inc dec jns inc cmp mov sub ror int lcall mov out lea loop dec movsb mov or rcl push adc sbb sbb or push adc aam lea fnop pushf adc mov xchg push or aam aad pop ficompl rcl push rorb sbb mov xchg or push (bad) xchg adc push push int push or xchg sbb fstp sbb fisttpll push rcr xchg popf rcl aad push xchg push nop fwait push mov fistl pop pop push push pop push rcrb adc ficom (bad) nop fstps push adc adc rcrb rcrb (bad) pop xchg xchg sbb pop adc push pop rcl (bad) mov sbb rcrl aam cltd rclb ror xchg adc aam push pop or fsts adc int3 pop aad xchg push pop sbb ficoml adc (bad) aad pop push (bad) rcll push xchg xchg push cwtl lcall adc xchg dec (bad) push adc fcompl push xchg rclb pop xchg push sbb rcll pop nop push sbb int fsts rcrl xchg lea sbb push push rcrl dec push push rcrl rcll push fwait or lcall rcll rcrl pop xchg aam push xchg aad mov push sbb into push push or adc adc pop push cwtl cwtl xchg nop rcr aam or xchg fwait pop push rcr push push popf rcll int3 push mov dec int3 sbb push push or sbb cltd rcrb rcrl dec sbb pop aad sbb push pop ficom adc pop mov (bad) rclb fnop fsts adc adc lcall xchg pushf cwtl fimul cltd adc pop dec aam fstp rclb rcr dec sbb sbb adc dec push push nop xchg lcall push pop xchg cwtl pop fwait xchg push sbb sbb popf ficompl cwtl (bad) aam pop lea nop aad adc fst adc push sbb cltd rcrb dec fnop push rcll or adc fimul adc push xchg push fwait sbb pop pop adc adc push xchg pop pop mov adc fcoms push or aam lcall ficom rcll sbb or cwtl xchg rorb adc ficom adc lcall push cltd fcom sbb push adc push push nop lea fwait pop sbb adc cltd rcr cwtl popf rclb dec push aad sbb push xchg adc sbb push cltd rclb or xchg cltd pop sbb push sbb push ficoml push push push cwtl pop adc mov xchg pushf int xchg push or pop nop xchg push (bad) lcall push push (bad) mov aam lcall push sbb pushf adc cltd or aam fcoms adc rcl sbb rcll pop rcr pop sahf lcall adc fcompl lea lea sbb xchg int xchg push rclb pop pop into sbb push push rcll xchg adc pop push dec push sbb xchg dec adc push lret aam rcrl aam mov sbb fcoml xchg adc pop sbb or adc nop (bad) push push fimull fcmovu pop into dec fcompl push pop xchg mov cltd sbb pop sbb xchg sbb dec or sbb pop fcoml fcompl cltd push push cltd rcll xchg cltd dec fwait pop rclb or dec fcompl aam or push adc lcall push adc push fistl sbb rcrl adc push (bad) push sbb nop nop pop rcll pop push pop sbb pop rcll push push push or push cltd pop sbb mov pop fmuls sbb adc sbb xchg sbb fmul cltd rcrl fimul push mov push sbb cwtl fst push fwait dec xchg push pop (bad) rcrl rcrb lcall (bad) nop push push push push sbb fwait push cwtl pop pop pop rclb fcompl nop pop xchg dec aad adc pop xchg dec dec sbb or nop push pop pop popf push push sbb popf pushf adc rclb dec rcrb lret pop push push mov adc push push sbb pop push dec push xchg lcall push pop sbb push sbb aam pop rorb int fstl pop nop fisttpl sbb mov push push dec (bad) dec lcall adc push int3 ficoml rcr rcrb popf rcrb push adc dec int3 fnop aam pop ficom sahf push push xchg xchg int pop lea lea sbb adc or rclb int3 sbb xchg or cltd or lea xchg sbb rcr or push push nop popf rcrb xchg sbb push adc cltd push popf ficom or adc rorb pushf rorb pop or adc lcall fstps adc int3 pop (bad) pop mov rcll fnop fstpl pop dec fcoms pop dec sbb sahf popf int nop dec rcll xchg fstps fstpl xchg mov xchg or fimul rcll cltd aad pop xchg nop push adc push pop adc sbb sbb xchg int (bad) popf fwait sbb adc fwait sbb dec pop rclb pushf pop ficom into sbb xchg mov lcall fwait dec pushf push push or pop pop dec lret fsts push pop xchg dec pop aam rcll adc rcll xchg sbb lcall push fwait sbb rclb xchg (bad) adc aam int3 rclb push push rorb dec pop rorl pop int3 dec rcll lcall xchg adc sbb rcrl sbb int3 xchg lcall adc adc into adc push sbb push dec adc rcrb popf push sbb adc fistpl adc adc pop fst mov fstps ficom aad sbb fistpl sbb sahf pop xchg push sbb aad aam pop (bad) (bad) push push push sahf or adc push fst or cwtl push dec aam or cltd adc lea push popf fcompl (bad) adc push lea push rclb sbb pushf adc rcrl nop mov rcll push xchg popf push fwait push pop popf dec sbb or pop pop dec fcoml int fwait push sbb adc adc adc xchg xchg mov nop fcmovnbe push pop pop rclb aam int3 pushf rclb popf aam fistl popf sbb cltd rclb sbb push ficom pushf push dec push pop pop lcall push mov push cwtl xchg adc dec pop adc adc push adc sbb push sbb adc popf or xchg into push fcomps push cltd dec (bad) mov sbb int fstl adc ficompl sbb popf cltd adc cltd rorl xchg dec int cltd push push mov push push xchg xchg pop rcrl aad adc cltd push push fst (bad) mov int3 push int3 adc sbb rcrb popf rcrb (bad) sbb pop adc or xchg aad rcll rcrb ficompl push adc fcoml rclb fwait push popf rclb pop pop xchg adc mov push sbb rcr aam push pop push (bad) or push dec rorl push dec sbb adc pop adc mov push fwait push pop fstp pop fcompl cltd dec xchg xchg into or rcrb fcomp mov dec push pop rcrl push rcl pop push pop sbb cwtl xchg push xchg dec dec nop fimull xchg xchg popf rcll fistl aam ficom or push lcall sbb cwtl fcoms sbb push push cltd xchg aad dec ficompl pop pop rcr xchg popf sbb push or dec xchg adc adc lea fistpl xchg sbb popf push push pop or push dec push pop rorl rcr popf nop rcl rcrb mov ficomp dec lea fstps aad push xchg push cltd aad rclb pop sbb fistl fcom push rcl xchg fwait sbb aad xchg lea push push pop push adc sbb push int3 xchg into pop lea cwtl pop push pushf fst dec sbb lea push push fimull push rcrl rorb adc mov fnop fstl lea sbb pop mov dec rcrb ror pop fisttpll dec fstps or push dec fmull xchg mov rcl sahf xchg pushf fwait xchg sbb sbb sbb aad sbb rcl xchg rcr push adc lea push push or aam int3 xchg push push into adc sbb sbb pop pop pop push xchg or nop push fcmovne adc mov rcrb pop pop xchg or push adc rclb pop mov push sbb rcrb push pushf pop sahf push sbb nop push rclb (bad) popf adc rclb xchg push sbb pop (bad) rclb mov rcl ficoml lea push dec pop pop int3 mov push fcoms push adc push push push adc fst popf rcr push lcall push aam pop fistl xchg dec push or int3 mov rcrl adc sbb xchg push push push fmuls pop (bad) pushf pop rclb push lea (bad) push aam ficom push adc push xchg sbb fimul fistpl adc ficomp push fcomps pop dec fsts int push xchg fcoms fstps push sbb push adc pop push adc cltd rcr rcl pushf mov dec fcompl adc pop or rcr sbb pop push sbb push dec lea mov pop rcl pop ficoml adc adc aam rcll pop sbb aad mov nop fwait or pushf pop rclb or pop adc adc inc dec and lds inc and test inc sub sub ljmp call test dec movb or dec test test in stos push sub or outsb out or outsb (bad) or cmpsl sub call push mov dec test or insl test comiss imul or push mov imul leave jmp enter mov in cs dec in call shlb sbb repnz fimul (bad) xchg xchg mov nop nop (bad) movsb mov xchg out out test mov aam mov mov stos out mov lret scas fcmovbe sahf out mov (bad) rorb jo mov pop mov mov hlt sahf test lret mov stos movsb stos mov (bad) mov outsb mov int3 cwtl fcom ret ljmp lock fiaddl push test push cmpsb mov mov aam push out mov mov mov mov movsb shlb mov stos test loopne (bad) mov les mov cmpsl mov cmpsl cmp cmpsb mov cwtl xor mov aaa mov aaa xor xor mov stos mov test mov and sub sbb mov mov mov push sub into out or or call dec outsl inc inc sub lret mov data16 cmpsb push out out call cmpsb mov lea pop sub dec dec outsb sub jb or jnp or pusha hlt les (bad) les xchg mov call ficoml (bad) cmpsb pushf xchg test out xchg pusha test push sub xor mov mov cmpsb mov dec dec cmpsl sub or push push dec dec lods gs stos outsl dec push test sub push int3 call push jmp or inc xchg call or in test dec inc leave stos test in int lea inc out es call dec (bad) arpl test dec dec push push ja ja push addr16 push push inc xor das dec inc gs inc jne push pop arpl push push push cwtl pop adc mov out insb mov xor sbb xor cmpsb mov sub mov inc leave mov lods call (bad) sbb dec mov fs stos push xchg out xchg xchg sahf lcall hlt rcl mov mov aam arpl xchg and sbb and data16 stos call addr16 into stos sub iret dec mov test add push dec (bad) bound sbb mov mov and sbb adc lods and das cmp jb pop push inc imul cmp jb inc inc inc inc xor push xor jbe inc cltd pop sbb xchg sbb dec or sbb loop xchg cmp sub xor cmpsl sub fwait ss mov mov xor lods mov and mov rolb mov fwait or (bad) mov (bad) loop xchg mov or and lret addl or mov shrl and mov (bad) lock hlt mov loop test les push pop xchg xor mov int lods or lret dec dec sub test and imul out xchg rcrb fcomp lcall lock int3 fisubrl cwtl scas loopne xor sub dec imul sub jae (bad) fwait cmp mov push outsb ljmp scas hlt ljmp loopne push lods rcr in hlt out (bad) stos enter xchg daa test mov sub sub cs ss cmp adc dec lcall adc arpl test mov xchg ss addr16 xchg inc test adc xor je push mov xchg or inc inc dec xor jp jno jno push inc xor jbe inc xor mov data16 dec test adc pop jae mov stos cmp ret pop lcall adc out nop out jo test movsb out inc add inc adc add add lds mov jmp add sub dec addr16 outsl jbe adc or pop shll push je cmpsl jae and xor (bad) aad je mulb pop andl add fldenv nop lret fcomps nop push adc push pop add roll (bad) popf fwait sbb adc fwait sbb adc mov mov push addl cmc xchg and lods and dec and cmp adc test sub inc xorl mov jp jb mov out (bad) xor mov dec xchg das inc dec push popa mov into dec scas data16 and xchg mov test bound dec lcall adc inc dec adc popa adc push fildl test or fwait pop dec test mov cmp jo push outsb aaa xor or push ljmp aad adc test xor adc aad aam or xchg cmp sub test sub mov cwtl dec lret stos sub adc mov push xchg push xchg mull pop lret or je sbb int or popf or loopne cltd lods inc fmul test test ss movsl xor sub push cmp cltd and sahf mov or and jbe adc adc ss and movsb call sbb insb pusha ljmp cmp je inc push mov push and sub sub and or fwait pop mov sbb push call sub dec sbb or jae addr16 push inc push xchg aad rcll daa xchg inc jbe xchg push cmp xchg rcll adc mov (bad) scas xchg mov xor fiadd mov sub outsl ja xchg mov insb xchg cmpsb jo test xor stos cwtl repnz fs insb dec lret inc push sub ret cltd lea inc adc xchg pop pop (bad) and dec lea or out xchg ret fwait adc sub loop ja mov pop cmp or sub jno ss mov int3 mov inc dec xor lcall cwtl xchg and and jb push out (bad) push push nop ffree or fadd add rol sbb rcrl xor mov add sbb mov popf or int in xchg vmovupd leave push xchg fldl cmp popf or mov leave add movsl rol push loope popf or push add popf or lods inc pushf leave adc dec adc lods push popf add xor nop lds rcrl (bad) mov add pusha roll push mov fmul xchg rcrl test test lds rorl and inc adc aad adc frstor sub cmp lds (bad) xor in enter movsl fisttpll xchg popa push adc and gs or sbb or or dec inc add xor loopne xor loopne ror sub sbb fisttpll mov int cmp in or popf push adc add aad test or push push or sbb add in lods mov and jmp xchg cmp add in xchg sbb shr test mov mov loope and aad sbb dec popa cmp popf or mov roll movsl loopne lea loopne test (bad) or shl mov roll xor mov add sbb pop shll (bad) in or or adc adc or xchg mov lds popf add loope (bad) (bad) sub ror in or popf add mov or sub xor mov test sbb nop (bad) mov adc mov or (bad) flds or sarl gs mov cltd mov add add in fstl sbb push in int fisttpll loope lods lods fnstcw add push loope aam mov test popa push inc mov pop dec mov aam xchg movsl pop inc adc mov and push popf or adc or loope push xor fstl leave sub rcr jmp or or add cmp mov mov mov adc xor lea xor int or int test pop lds aad (bad) fsts lds leave pop mov nop mov add loope fnstcw dec dec or mov test pop mov add mov roll cmp mov inc or in and loope shr popf adc loopne movsl mov add fldcw shll jmp rcrl (bad) fstp add xchg test add add fstpl int mov aam mov leave pop rorl in rcrl in xchg xchg inc add lods gs push or pushf loope fldenv push gs rcll fldl pop test movsl rcrl or xor inc loope add in movsl loope or or or loope mov inc or lods sub enter add rcll imul push in in add fisttpll or leave lds sub or dec push pop in xchg popa adc imul mov jmp inc adc lods in fldl adc add popf add popa add add cltd mov xchg leave mov fisttpll mov or aad fstp adc pop xor in or aam in xor popf adc fldcw (bad) mov fadd mov aad add mov mov xor add aad inc mov (bad) or ror int3 int3 rcrl in aad mov test lds xchg lods cltd and lea aam aad adc pop fsub loopne add mov shl fldl lods and fs inc add xor in or loopne or aad jmp xchg int or inc in inc aad fstl shrl dec test aad mov loope roll mov adc fldl movsl adc pop xchg leave inc add inc dec and or mov mov es in call stos or or inc dec call arpl cmp stos fwait mov (bad) and or xchg mov jno cmp xor mov jb popa ret xor inc dec orl sbb mov mov rol pop mov xchg sub sbb jb sub and or dec push popa mov or jns xor adc ljmp cwtl mov sbb cmp cltd xor xor mov sub mov test sub cmp sbb mov sbb aaa test mov cltd sbb cwtl mov mov mov sub lods stos and mov movsl xor mov test stos stos es sbb cmpsb lods mov mov mov cmp cmpsb xor sub (bad) dec ljmp sub sub scas sub sub outsl xor pushf and dec push push outsl daa sub sbb and dec sub mov push enter hlt sahf ret (bad) enter push mov outsb movsb mov insb into mov fwait mov mov sbb aaa xor mov push enter mov andl cmp rcrb fidivl scas mov into mov sbb cmp mov pop mov mov sub lods in mov call es dec das dec mov inc xchg lret adc in loopne fsubl mov mov imul mov lea enter and leave jnp and lcall adc ret mov sub mov pop and stos fisubr xchg fisub lahf dec xchg lret rcrb pop push ficom rcll fimul dec rcrb fcmove xchg aam pop xchg adc (bad) and je inc xchg adc push in adc push gs push inc xchg gs push (bad) daa test (bad) aad inc stos jp or cmp rol ret stos and xorl mov push xor faddl fsubrp movsb iret inc or xchg pop xchg push dec fcom dec dec jae inc inc xor fwait mov mov repnz ljmp (bad) (bad) sbb mov mov mov mov cmp sbb cmp mov or dec lods sub lret call jb xor (bad) push test shrb in outsb mov nop out jo pusha hlt jb mov jo rcr jb mov loopne mov scas push pop xchg out out inc xchg leave add fstpl int mov aam mov leave pop rorl push xor jns gs inc imul imul inc pop addr16 push cmp pop cmp fcomp loopne test mov mov lods sub or dec sub js and mov adc int inc jae test test push ret xchg mov mov leave mov cmpl dec lret shrb cltd rol je xor adc fnstenv or dec push pop in xchg popa or pop imul xchg cltd rcrb push xchg popf xchg ficom es mov inc jne and aad ss xor and and (bad) test movsl mov sub mov lea into cmpsb out lods out call out sub push sbb mov xchg push mov pop mov xor aaa sbb test sub mov and outsb or push call ret rorb scas les repnz mov mov mov dec insb es movsl insb leave sub adc xor dec mov or sub mov adc lret xchg mov call jne mov adc loope add xor in adc inc outsb dec jp xor js inc cmp jp jne adc repnz lret ficoml xchg xchg push fcmovnu pop or cwtl in (bad) rolb xor sub sub int mov inc inc sub jns imul insb lea push xchg push mov call mov sub mov movsb in and dec fisttpll in fcom sbb push or wbinvd insb insb in outsl push das and xor adc rorb fs push testl adc int3 cmpsb mov push sbb jb jb stos mov adc dec (bad) lods mov test and cltd mov sub (bad) jmp mov sub insb test sub mov adc data16 jne jo bound dec das inc jns adc test rcl nop movsb mov aam ss test sbb or lods adc test push lea push xchg adc pop je inc cmp popa jb pop cmp adc roll and or leave das sub mov shl cmp add pop xor push xor imul inc adc fcomps outsl and or push or aad sbb fs repnz (bad) out mov sahf loop loop mov aam (bad) test shlb jb movsb fiaddl xor mov es out push jns,pn push dec pop test and shll or xor push inc push outsb dec inc nop pop push sbb push dec inc test sub daa xchg shl loope inc push pop or pop (bad) popf rcl fstl int call leave stos xchg pop xchg ret cmp mov rcll mov loop and cmp das adc mov push movsb inc pop add xchg test lcall lcall sbb sub xor xor sbb lods out cmp push aaa (bad) in (bad) inc pop adc je sub sbb int3 imul mov cmp out out xchg dec push pop jbe xchg je test push push test je xchg and inc mov inc or xor push dec push imul dec jmp adc or rolb out repnz or add rcl lret mov xor rolb and pop mov movb cmp inc lock inc data16 test or sbb sub push xchg push ss push adc pop or aam test and inc loope (bad) mov or js adc inc adc mov lods (bad) xchg xchg adc loop loopne mov (bad) shr mov mov out mov mov pushf outsb mov (bad) (bad) ljmp loop (bad) xchg repnz bnd (bad) xchg pushf hlt data16 loopne lcall lock out in pop out mov mov mov outsb push test out jb mov mov pushf test mov xchg mov in xchg ljmp test mov in (bad) stos (bad) test mov lods out into mov (bad) enter out (bad) mov push mov int3 loopne xchg call mov test test out test pusha test aam push hlt xchg sahf into xchg fs test hlt mov (bad) (bad) call enter mov (bad) scas mov lcall xchg push mov test fcompl outsb into hlt movsb lcall hlt mov lock test bound xchg pusha sahf hlt (bad) mov test into mov test (bad) mov mov mov mov pusha mov push jb scas hlt pop lcall xchg movsb in xchg jb xchg mov out mov (bad) mov xchg pusha lret out loopne mov lret mov pusha les les data16 xchg push xchg fs repnz nop cwtl test (bad) (bad) enter mov shlb xchg call sahf out test fmul sahf mov into out mov in nop les (bad) pushf test hlt fsubr mov in int3 (bad) mov push loopne hlt into test mov lock rcr rcr fs mov (bad) mov enter fisubl out push cwtl loop out xchg fisubrl int3 pop fdivs mov test mov mov xchg cmpsb test cmpsb call (bad) in cmpsb lods xchg mov xchg xchg cmpsb out fsubs rolb lcall mov (bad) pushf ror fiadd les mov insb mov xchg push (bad) mov outsb mov test (bad) fsubl fadd mov outsb into mov fdiv ret faddp test mov nop stos fsubp fadds fmulp repnz bound ljmp xchg (bad) outsb loopne rcrb movsb xchg out rolb mov fs mov cmpsb int3 mov scas fsubrl outsb mov xchg test ret movsb mov mov (bad) in xchg mov out (bad) into mov mov fs mov rol fs fs (bad) test lock stos (bad) lods loopne (bad) mov stos test mov into (bad) out mov rclb scas xchg outsb push mov mov call loop mov in cwtl (bad) fs mov pusha push aam lcall repnz into (bad) in stos push fisubl push out xchg stos push xchg (bad) (bad) shl (bad) cwtl out (bad) data16 push into test mov mov xchg test hlt enter mov (bad) scas push mov (bad) call pop out lods fcoml call xchg mov ret ljmp mov ret nop xchg in sahf (bad) test movsb in jo lock insb into xchg sahf pusha xchg lock test pushf fcmovu aam xchg data16 mov aam (bad) push xchg mov ljmp push mov test mov mov push lcall out (bad) push pop hlt jb into xchg outsb mov xchg (bad) lods shr mov test ljmp xchg out xchg (bad) lret (bad) test pop xchg fimull sahf (bad) xchg push in xchg xchg loopne rolb mov lcall in fsubp call jo mov out pusha pusha mov mov stos mov mov out (bad) rcl les into test mov cmpsb mov outsb xchg rcr into ret (bad) mov mov xchg xchg mov fs mov xchg mov cmpsb mov call mov (bad) lods ljmp outsb pop aam call out mov mov out (bad) repnz (bad) hlt lock (bad) bound fcompl movb loop mov test push xchg les lret mov test fsubrl mov nop out push movsb into test xchg aam insb fmul push out xchg mov test test mov hlt lods jo push mov scas fsub xchg lret jecxz,pn or insl lret insl push mov sub call sub in call movsl addr16 sub test out daa sub sub iret inc push cmpsb or sub das dec or (bad) mov push dec lds sub cmpsb out stos mov mov das or jmp sub into mov into inc mov mov das dec test dec lods inc mov push sub sub mov in call (bad) dec insb (bad) es out call dec xchg push or mov sub dec test push sub call sub dec in call lods stos mov mov push lret mov ret pop ret cmp popa xchg dec stos cmp jp and jns mov adc rcl push ret lret mov cmp (bad) dec xchg mov rclb mov jnp or adc and jnp lret stos adc and mov sub sbb and lret adc test insb hlt jb scas hlt pop lcall xchg movsb in xchg jb xchg mov out mov (bad) mov xchg pusha lret out loopne mov lret mov pusha les les data16 xchg push mov sub mov cmp mov test mov test or cs ljmp int3 jmp daa sub call sub out stos stos sub enter mov sub sub add insb in data16 enter or rorl dec jns mov sbb into (bad) enter fisubl pushf lcall mov xor stos stos cmpsb or mov or push mov (bad) dec sub mov data16 mov in call leave insb insb sub call fwait mov or push jae (bad) ljmp lcall sbb fcoms adc fst nop dec xchg dec pop mov rolb mov je jno xchg popa add int3 (bad) mov popa xor popf adc leave mov mov xor jne dec push outsl jno inc inc cmp outsl addr16 xor dec dec lods insb mov sub outsb call and or xor leave popf adc dec cltd sbb pop mov or push jns push jp dec dec ljmp dec sub mov or mov xchg xchg sub es xor inc xor inc sbb (bad) mov stos test mov into (bad) out mov rclb scas xchg outsb push test mov and cmp inc dec mov mov cs arpl stos jae xchg push mov aam les xchg push dec fisttpl mov rorb stos push push add int add call imul dec mov mov push push push push push push and lods fcoml call xchg mov test stos push arpl push add mov and adc xchg xor xchg adc sub ror loope dec int jno xor push inc mov nop lcall addr16 xchg test je es xchg arpl push inc xchg je inc fmul sbb lods add out into in gs and inc adc pop rcll rclb xchg and notb jbe mov push je je cmpsb fs xchg push ss les (bad) hlt cmpsb aam jb test adc in xchg xchg loopne rolb sub movsb mov int sub dec out outsb mov call jae xor inc addr16 push pop ficoml push cwtl push cmpsb push push xor xchg xchg xchg inc xor inc fs and adc inc inc adc jbe and test andl xchg xchg adc data16 xor inc inc je mov addr16 inc push xchg je ret jb mov add adc lods inc test add loope movsl lods lds adc xchg or xchg xchg sbb push adc pop lcall mov sbb lret jb mov nop out push movsb into test xchg aam insb fmul push and and lcall sub sub lcall push jae fs jae je testl movsb xlat add and out inc xchg je mov xor push rcll inc repz and xchg pop adc xchg je div roll add fs adc out ja xor adc inc je and xchg fs xchg jbe adc in pop jbe test cmpsb cmc adc and push inc aaa xchg je movsb les ja xchg arpl out xor mov push mov je push push gs add je xchg arpl in push xchg push aam and adc xchg fs inc movsb adc and push push je and ja adc addr16 (bad) jae repz test xlat and push fs inc xor je fs and xchg inc xchg arpl jbe divl (bad) mull adc and rcll andl aaa daa cmpsb out push inc xor inc inc adc xchg xchg and arpl xchg adc test jae gs pop inc xor in jbe xor mulb cmc arpl je testl inc arpl xchg and and je cmpsl push inc adc test mov adc and andl and add push ss mov inc and and xlat pop movsl adc xor data16 mov je (bad) arpl adc (bad) in je cmpsl push inc push adc les (bad) adc je mov adc je adc lds push aam mov add adc inc push in aaa cmpsl xchg (bad) xchg movsl adc test xor cmc inc ss adc mov push (bad) xchg movsb notl je inc xor mov test xor je push inc notl xor push je add inc adc movsb cmpsl je push rcll mov add adc ja pop adc xor gs adc inc xor (bad) mov ja adc add aad (bad) in adc addr16 es (bad) je push push and xchg test arpl gs jbe addr16 addr16 add (bad) and and jne aaa je fs cmc and and pop ja daa daa push (bad) push addr16 adc xlat and add inc xlat test and and ja repz adc addl add (bad) je inc push mov xchg push pop xor data16 aaa arpl je add push and inc daa je xor (bad) es adc inc xchg mov fs inc adc jne inc pop push mov xor adc inc je aaa xchg pop es xor (bad) in cmpsb jb inc je inc xchg hlt (bad) mov shll (bad) je movsl cmpsb hlt push (bad) jne movl xchg aaa inc xchg and xchg mov adc cmpsb cmpsl adc xchg adc xchg aam xor xchg adc es xchg aaa push arpl inc adc mov xchg (bad) cmc inc mov push jne adc push mull je test aam mov jecxz data16 xchg mov divb ja xor xchg inc je add inc inc add ss ja xor je push and and adc push out mov xor and (bad) mov add lds fs mulb xchg adc push je mov cmpsl add (bad) notl ja arpl xor add push xor adc and inc addr16 mov aaa push push je xor adc test cmc adc test xchg xchg xor xor inc push movsl inc es push divb push je xchg mov inc jae je cmpsb fs ss je xor xchg inc xchg xor je add and adc push jecxz adc es inc pop mulw out test inc and adcl jne inc adc mull aam movsb and aad cmpsb out adc xor addr16 and xchg ss xchg mov push addr16 mov and inc add inc repz pop pop and aaa fs adc push xor push (bad) xchg xchg je push out xchg mull es jbe xor inc data16 je ss movsl xor je push lds xlat pop jbe xchg cmpsb push mov ja and es jne xchg xor xchg xor and je push xchg (bad) andl (bad) addr16 cmc xchg jbe daa aaa je je adc and push pop movsl fs adc fs out mov test adcl movsb inc and push je push xchg arpl push aad xor adc in add adc ss in aaa (bad) testl mov xchg push cmpsb je and xor adc xor inc push (bad) repz je movl adc inc adc push out cmpsl je and pop cmpsb repz cmc xchg mov adc inc inc and mov test je xorl out movsb push out movsl adc and xchg inc and aam mov push adc fs (bad) xlat movsb xchg je cmpsl inc add xor xchg mov adc ja push divb inc xor out aam inc je xor pop add xchg lds hlt xchg aam xchg xchg ja xchg push je mov xchg addr16 mov mov adc and mov mov inc cmpsl je adc and xor gs adc xchg inc jbe je xor xchg adc jae mov inc lds xor in test jne data16 xchg testl mov je add xchg inc hlt xchg movsb inc pop push adc mov mov push gs hlt out es cmpsl and and and ja cmpsb test adc inc cmpsl inc inc mov push mov divl je xchg addl lds jbe inc in inc je xchg movsb jne fs addl fs lds xchg daa fs push xor and gs cmpsb out and les xor push xchg ret adc xor push ss inc daa push add je xchg test ss aam xchg push je aaa push cmpsb daa and xchg adc test movsl and (bad) je and push in adc es adc adc push mov xchg push movsb inc je xchg movl je aaa and mull xor xor adc addl xor adc je mov fs xchg add xchg adc jae mov arpl inc cmc andl pop fs and adc test movsl xor xchg xchg jae mov jecxz xor adc test cmc movsb adc testl movsb xor xor cmpsb xchg test inc push xchg inc xchg je add inc xor inc repz adc andl xchg je adc push xchg notb es push (bad) in and notb arpl je xchg in ja xorl jne adc not push jne push arpl inc out mov xchg repnz and aaa and add push mov addr16 jne adc cmpsl xchg xchg aaa je add test jbe movsb push mov adc push cmpsl xchg xor es xor ret inc je inc xor hlt adc xchg xchg inc aaa test and and gs push xor test inc push es adc adc mov and push je jbe xor xchg and daa je xor in adc pop inc inc push xor mov xchg ja je jecxz inc and add mulb adc push in xchg cmpsb cmpsl and xor inc je xchg adc je push les push adc adc gs je push and and test je jne fs push jne inc xchg adc in jne xor inc inc xchg ja xchg andl test aaa cmpsl je movsb xchg pop adc push and push (bad) addl xchg dec and out call ljmp xchg scas or dec into mov or call sub lods call insb in scas inc dec sub push sub int outsb iret push outsb call push or push lret sub sub int3 ljmp sub sub stos sub mov sub jnp adc jp and stos xor fwait lret cmp push bound or ret dec xor pop pop pop sub xchg lret jnp adc (bad) mov inc arpl (bad) jb stos lret or jno mov xchg and sbb subl mov mov out outsb pop insb (bad) xchg shlb enter xor xor movsb mov mov aaa mov cmp and sbb sub ss mov sub sbb mov xor and sbb fwait xor cltd test mov fwait cmp and mov cmp mov mov aaa mov xchg stos sbb mov mov test cmp sbb mov cmp sub dec ljmp das or ret xor fwait popa jp pop mov adc sub rorb mov (bad) movsb push data16 test in outsb xchg pusha (bad) cwtl cwtl faddl enter enter out xchg mov hlt (bad) out test nop adc sub and mov xor mov mov movsl sub leave ljmp push int3 test lods lods call push or cs (bad) out cmpsb push enter scas call sub dec or test or mov pushw sub mov or sub dec insl imul adc push pushf or adc xchg push push push push sbb cwtl pop cltd pop sbb sbb xchg push sbb pop rcll push mov xchg push ficompl pop adc pop mov aad fst sbb dec push int3 xchg nop push out daa daa push (bad) push addr16 adc xlat and add inc xlat test and and ja repz adc addl add (bad) je inc push mov xchg push pop xor data16 aaa arpl je add push and inc daa je xor (bad) es adc inc xchg mov fs inc adc jne inc and inc or jns jb push inc jae insb data16 pop dec addr16 push addr16 push pop das dec imul insl addr16 inc pop pop outsl inc dec xchg push sbb rcrl rcrb pop fstl push xchg sahf pop fst push rcl dec adc nop push push pop push pushf int3 xchg rclb es xchg aaa push arpl inc adc mov xchg (bad) cmc inc mov push jne adc push mull jp lcall into test repnz xchg (bad) into out xchg mov sub test mov mov test cmp leave add and aad mov popa adc mov or mov xor cmovnp sub or gs das dec or mov scas inc out call lea dec call test lret data16 dec in mov test outsb scas scas call popa inc push es mov inc and sbb rorb xchg xchg je cmpsb fs ss je xor and divl push and adc push jecxz adc popf test test mov dec push sub push inc jae dec cmp inc jno push inc popa sub xor das jp das addr16 xchg ficom fwait lcall les adc rcrl xchg dec sahf pop rclb jne testb jne data16 rol ror (bad) fnstcw mov inc stos arpl cmp or leave jnp adc enter mov (bad) int3 push mov movsl sub add pop gs popa inc ja xor bound cmp inc adc xchg pop xchg nop popf les (bad) adc cmp xor xor jp dec jno inc xchg pop cltd lcall push push xchg or push je and mov int3 mov es push inc outsl push jae inc xchg adc mov sbb pop xchg nop push sbb xchg dec pop sbb inc inc mov xor sub xchg aad cmp dec insl mov mov mov stos jae sarl sbb insb (bad) sahf mov sahf mov xor mov and into scas dec test sbb rcr fisttpll push bound inc sub sbb cmp out nop ljmp mov jmp (bad) sub ljmp ret imul inc and cmpsb call dec push lret dec and bound inc nop dec sbb mov (bad) rcrb xor stos ret (bad) fs in into mov into ret sbb cwtl lods cmp sbb ss inc lds xor in test mov xchg and mov mov lret jmp mov sbb cmpsb cmpsb test je xor dec and push mov sbb inc hlt inc in and cmp dec stos and xor adc insl adc push jbe pop jne dec inc push inc das xor push pop push dec jb inc nop xchg mov int fistl push adc xor push xchg ret adc xor push sub adc aad mov dec insb (bad) js adc or bound inc outsl jne inc adc adc dec xorl cmp adc or pop hlt and jmp mov mov dec das loop dec inc adc push xchg lea sbb pushf int3 sbb movsb mov fs xchg add sbb pop test xor mov or or or cmp enter or inc pop inc jbe pop adc adc enter test fimull dec adc les add inc xor and lds and mov mov mov xor xor inc inc outsl sub cmp inc (bad) mov mov sbb mov xchg mov cmpsl rolb cmc push mov pop adc in jmp lds and or inc pop dec push addr16 imul push sahf sbb or aad test xchg inc je inc pop mov outsl or in lods insb call mov stos mov mov adc jo imul jp mov sub mov xchg push xchg stos mov gs inc mov (bad) (bad) data16 or aam mov leave dec mov repz xchg inc je sub aam ret add xchg and cmp mov or and mov push inc outsb pop aaa push arpl inc jb inc adc fcompl push ficom adc aam scas inc or mov sbb inc jo push sub dec outsb push inc bound dec sub inc js dec inc jno push dec dec imul xor cmp ss inc jns jns insb jae ss pop addr16 jae pop pop aaa insl aaa inc inc das inc inc inc jo jns inc push jbe gs push dec dec imul push sub inc popa dec outsl dec dec push push arpl addr16 inc pop inc ja arpl insb jb inc inc jne insb popa pop jb inc arpl inc jns js sub push inc xor pop jne jne jp fs insl inc cmp imul push inc dec dec popa ss aaa insl xor inc popa outsb jb push inc bound xor push outsl dec inc arpl push inc pop ja dec xor xor arpl js inc imul push dec sub jp das addr16 sub jae inc dec inc push popa inc inc inc push jb push inc inc push insb xor dec xor push xor jo inc push push ja inc push cmp addr16 push cmp je jb cmp jb arpl dec push push push addr16 outsb ss dec push push inc inc cmp xor dec js gs addr16 imul pop jns inc inc pop dec inc push push inc dec inc xor inc push jbe inc dec push das sub inc inc dec dec gs push push insl jbe addr16 dec insb das insl arpl ja inc xor pop aaa data16 inc xor inc aaa push inc push pop arpl inc inc inc addr16 jo xor inc aaa outsb addr16 inc inc xor inc xor inc inc cmp inc jp dec push js push push jbe inc inc jno jae das jb dec dec js inc outsl push dec jp insb outsb xor push jae inc jb jbe push dec addr16 dec push push inc addr16 gs inc inc inc jno push pop dec addr16 popa popa push xor xor inc push ss ss addr16 je push popa jo jp dec cmp xor inc jb cmp jo addr16 xor das cmp imul jne bound xor addr16 inc push xor js push inc cmp inc pop jp je imul inc dec push dec bound arpl arpl inc xor inc jno dec cmp addr16 xor pop ja imul imul pop inc pop addr16 addr16 xor imul bound jno pop imul push das inc inc dec das jbe dec push xor push push inc push push addr16 inc dec dec jns insl inc inc jo je push push outsb dec dec addr16 insb dec aaa xor xor push inc inc sub inc jbe dec imul push fs imul inc inc inc dec addr16 addr16 inc jae ss inc dec inc dec jns inc push pop xor inc push insl inc inc xor jne pop addr16 xor push jns gs jns inc dec inc data16 js dec jne addr16 inc push push imul push das xor dec inc addr16 pop jo inc dec xor inc inc push outsl xor insl inc ss jbe sub cmp push outsb inc inc xor push outsb aaa xor push aaa addr16 jno cmp insb dec inc xor data16 inc insl inc push dec push addr16 fs je addr16 dec inc inc inc pop jno push addr16 aaa imul inc ja dec cmp dec dec pop inc inc das push inc xor cmp addr16 jp push jb jb jne jb inc outsl push fs pop inc jae insl addr16 cmp inc xor pop dec ss inc imul push aaa push inc sub inc outsl aaa jae xor dec inc inc jp push jo dec addr16 js inc inc je xor aaa arpl dec push dec xor push push jns inc inc xor push jbe inc fs push push dec js sub addr16 inc imul jbe dec jo inc inc xor push das push push pop fs addr16 xor je jno jno inc inc inc jbe push arpl inc jns inc addr16 je jne imul pop push inc inc push dec push aaa outsb xor sub popa jne jb push inc inc inc dec xor xor push addr16 addr16 outsb dec jb push push pop addr16 imul jp xor ja pop push insl inc xor inc dec jb dec das push push gs push addr16 dec inc arpl xor inc inc jns push jae cmp jno inc sub sub inc dec inc xor insb outsb dec push outsb data16 inc jb inc aaa pop inc pop insb inc push aaa jbe inc inc inc xor inc inc pop jne inc addr16 dec push xor addr16 fs inc pop jns inc push inc dec inc jns addr16 push bound cmp xor inc inc jne das bound push insl addr16 imul insl aaa inc inc xor popa insb dec jb addr16 jbe xor imul dec inc inc push xor inc push outsb popa outsl jp addr16 pop fs push xor xor dec outsb pushw popa xor outsl jp jbe ja jae inc xor jae insb inc inc addr16 xor push push inc inc je sub je push dec inc addr16 jp js inc jp insl imul dec push arpl outsl addr16 inc jecxz,pn pushf adc sbb pop fcmovnu fcoms rcrb push xchg push rcr fnop dec or into sbb push dec sahf pop pop sbb lea fistl dec fisttpl adc or pop adc rclb fcmovbe adc sub sub in push mov dec stos sub mov sub or call outsl sub movsl push push jb adc inc jne push pop push xchg aam test push mov mov jne xor cmpsb adc and es je jae lcall mov cmp adc or mov or loope or mov adc add add xchg push adc add aad aad rol add cltd sbb rcrl cwtl in into jo (bad) in mov xchg aam stos cmpsb into (bad) fsubrl rcrb (bad) (bad) jo nop push lret imul pop jns inc inc pop dec inc push push inc dec inc xor inc push jbe inc dec push das sub inc dec es mov xor mov mov out sub in int es push pop xor rorl add jmp or aad shll or pushf int jmp int or imul add pop in xchg xchg lock xchg mov fsubrl (bad) (bad) xchg scas jae dec addr16 dec push push inc addr16 gs inc inc inc jno push pop dec addr16 popa popa push xor xor inc push mov sbb sbb xchg xchg dec push push or rcr xchg push sbb pop rorl pop sbb rclb or push fcomps (bad) adc push dec pop nop push push pop mov sbb aam rcl aad fmuls push push mov push sbb rorb push lret dec sub dec sub dec or stos and push push aam int push vpunpckhwd movsb lods mov mov jbe dec push xor push push inc push inc sub es xchg mov test fstpl pop xchg push sbb adc xchg push adc dec xchg popf xchg fsts dec mov dec mov sub or sub call lods call sub lret inc dec dec sub aam inc xor addr16 and lds lret or or jb xor rol xor sbb push test loopne movsl or inc mov addr16 les push push stos or push pop jns xchg mov sbb test bound movsl jbe jae push mov ret bound lods add mov cmp or rcrl dec es aaa imul cmp movsb movsb lods mov lcall xor cmp sub movsl adc (bad) fwait pop cltd rcrb dec ror dec sbb insb cmpsb iret dec xchg mov lods call push cmpsl cs movaps (bad) dec sub mov or or push inc mov adc mov jecxz (bad) ja add jae es and test adc inc push jne xchg jbe pop sarb mov imul test shll lret cmp orl push mov sbb mov leave (bad) xor sbb pop pop adc mov sbb jno stos cltd pop cmp adc or (bad) mov je inc cmp jb xchg adc pop mov (bad) mov mov test or dec mov inc ljmp dec dec insb insb mov xchg xchg test dec sub cmpsl push mov call push enter in push out push movsb inc es dec inc out into test xor and mov cmp sbb sbb push push push push adc sbb push cwtl sahf push mov dec cltd push push push pop dec or fcoms pop (bad) enter inc push insl aaa inc inc xor mov cmp xor cwtl mov pushf movsb and sub mov adc pop push xchg rclb ret jnp mov nop int sbb rcll dec mov call sub sahf dec ficoml sbb sbb ret push movsl push (bad) mov adc xchg addl adc leave mov mov add leave fmul xor adc ror leave pop popf add cmp fdivrl lds sbb adc leave inc ror rol ror popf adc adc pop sub add xchg jmp loope add imul add cmp mov mov rol or and roll leave or dec adc movsl fldcw or add sarl mov popf mov gs movsl xchg add dec adc popf or int3 leave adc gs roll in gs or pop fisttpll xchg xchg popa popa mov sub fisttpll sbb push sub leave xor shll call and sbb int test test test add jmp mov or test lds sub sub (bad) cltd lds popf adc shrb fstps mov test pop lds popa sbb aad push test add fnsave popf add mov sbb test fsts in popa mov popa xor adc lea adc add rcr (bad) sub popf or enter inc add mov movsl xor (bad) mov sarl (bad) aad add xchg sbb lds cltd inc rcll push fisttpll or mov adc rcrl in add imul fisttpll inc flds dec dec aad sbb fstl int (bad) rcrl fldl fstps shll add or rorl fisttpll sub mov cmp lds in fstl add push dec sbb ror xchg sbb fldcw or gs adc xor add (bad) int or leave leave lods xchg leave pop int in add xchg dec mov shr add test ror xchg cltd fisttpll leave inc cltd gs lods aam sub push leave and inc loope cmp int dec loope adc xor dec mov and fisttpll sbb aad or or sub mov or pop fsts dec sbb mov cmp cltd xchg xchg add cmp gs fstl lods sbb lds sbb (bad) adc sbb leave popf or test dec inc add popf imul test call or test mov leave mov mov inc or adc lds pop fstp shll int frstor fldcw lods inc int (bad) xor and or push xor gs mov xchg pop xchg pop leave inc adc (bad) rcl test (bad) int popf popa in popf or shll xchg or pop inc adc sbb pop xor inc or lea dec fst popf adc aad adc gs adc lds loopne inc or xor sbb inc lea or xchg inc add inc test inc add push inc leave xor inc popf or popa mov popf add fnstenv (bad) inc adc xchg pop rcr flds sbb lods adc xor or and movsl push sbb cltd sub imul inc mov popf add xor aad test inc or and xchg fisttpll movsl imul in dec gs adc add movsl mov aad push push fisttpll and xor int add (bad) rcrl fldl leave or inc int or and or rol fucomp sub pushf in xor adc fstl and pop xchg fstl fstl mov sbb fcomp loopne adc cltd test (bad) mov lods dec (bad) xor in loope adc add lds mov xor flds adc loopne mov test loope test shll cmp inc adc loope int3 lods mov cmp add aad roll dec add add loope add cltd rol test add int lds pop movsl adc lds lods lods jmp add loopne sarl or sbb adc enter aad jmp adc sub fisttpll in lods aad push fisttpll rcrl add (bad) xor dec popf add cwtl mov inc or inc mov mov rcrl roll aad dec or xor cmp cwtl rorl rol loope sbb popf or push cmp pop push xor mov adc inc add sarl leave sbb leave add mov popf or int adc int xor test xchg and inc adc mov (bad) test test push sub leave test mov adc inc or and gs add xor int (bad) jmp test xchg or add mov dec inc or sub (bad) xor or pop int inc (bad) fisttpll dec push mov cmp or pop mov mov aad mov sbb or inc and in popf add inc adc dec sbb or dec adc loope dec popf or sbb or xchg popf or sbb nop int or fs dec mov add mov or inc or int int dec popa inc or xor add lea xor add sub lds imul inc sub aam popa inc or rol xor dec add fstps roll int shll or xchg pop aad lods fstps in fisttpll imul fisttpll sbb inc or popa mov int lds and adc lods xchg push inc or cltd xchg lods popa pusha lds sbb mov lods add frstor cmp cmp push rcll in popf adc dec xchg (bad) in popf adc popf xor call or rorl sbb mov fisttpll xor xor add lea add mov mov sub mov and inc fstl dec mov pop push push vsqrtpd fldl sbb (bad) or sbb mov adc and inc adc cmp loope pushf loope lds leave sub popf xor flds mov adc lods rcll fld pop add fisttpll fstpl or in add xor xchg inc adc nop int popa dec inc loope (bad) add int in fnsave add shl int3 vpaddusw add push inc or imul xor sub sbb or xor push adc les xor inc data16 daa arpl inc inc hlt jb inc inc aaa and xlat inc (bad) repz repnz divb xchg inc xor inc inc adc xchg add ss xchg inc xor and (bad) testb jbe adc xchg add push test je bound xchg mov adc and xor push daa and adc adc xchg movsb and (bad) test xchg inc in out mulb je movl adc jne jne inc push adc ja je xorl inc add inc adc in ja add inc je ret xchg push rcll inc adc push push test in je xor test and adc movsl xchg roll pop into test loop pushfw aam mov adc cwtl push aam dec push popf push pop rcrl rcl ficomp pop int3 dec adc mov cmp xor or fwait arpl push push jne jbe sub push inc jbe jns jae jns jno push inc xchg lret lods call cmpsb in mov mov mov sbb test fsts in popa mov popa xor adc lea adc add rcr (bad) sub popf or enter inc add sub cmpsb mov xor mov fwait xor and xor mov mov cmp xchg addr16 adc push roll adc adc xchg fs and je add and fs mov bound fcmove les (bad) (bad) fsubrs scas rcrb enter loopne repnz xchg nop int rcll rclb mov inc popa lret and mov xchg cmp fwait and jp inc ss inc inc data16 inc dec pop dec imul xor push jae inc dec jno aaa pop dec xor inc dec insl inc dec dec insb mov push inc push xor adc inc xor xor fs jb pop push sub dec inc dec dec ljmp or mov rcll dec loope adc xor dec mov and fisttpll sbb add sbb and adc jbe push and push je mov mov fiadd nop xchg es adc scas xchg mov cmc adc adc and mov xor and sub int3 sub and inc dec sub dec es insb call outsb inc das inc outsl cs loop insb inc dec dec movsl jmp cmpsb push sub fstp shll int frstor fldcw lods inc int (bad) xor and add mov mov aam (bad) testb inc dec xor xor addr16 bound jae xor ret lret xor insl jp inc push imul outsb call or and xchg or xchg test int and sbb sbb inc arpl cmp or arpl outsl arpl inc dec sub push imul dec xchg or dec add mov add fnstenv push xor mov mov lcall (bad) es inc inc xor and dec stos push inc dec dec cmp pop insb imul dec dec push das push outsb push outsl jp gs je (bad) push mov jae xchg xchg out inc mov jno pop shlb and mov lret inc lcall mov or push adc sub jbe das arpl dec arpl inc cmp gs inc inc dec xor mov sbb test int xchg nop push pop push sbb push push add xchg xchg mov inc jne adc fmul mov insb jo mov data16 push cmp aam push xor in loope adc es outsb dec pop ja jns or dec dec dec stos test cmp push cs dec daa or or inc adc mov adc adc xchg push push jnp mov shrb adc sbb orl cwtl nop push nop andl inc mov sbb push pop pop rol inc adc xor push stos stos cmp xor push dec inc enter dec (bad) pop or data16 sub ljmp data16 dec push cmp or fwait xor pop xchg movsb cmpsb cmpsl sub xor cmp movsb mov jp adc xor nop (bad) cmp sub sbb imul add sub push jae jnp stos andl xchg cmp or ss ss push inc xor mov xor ss movsb inc (bad) push fs aam jbe and and xor mov and inc mov lds pop adc data16 jns jp inc cmp dec inc pop inc fs and shlb inc outsl inc or daa or mov (bad) push dec push mov cmp or pop mov sbb mov lods and cwtl push push adc jnp mov enter int ljmp mov enter rcrl sbb sub sbb fs dec mov add sub mov adc inc js xor push push pop push inc dec jb and inc inc xor jns insb inc outsb mov mov test adc xor and sub mov push jecxz push mov xchg loopne mov inc or in and xor mov out and xchg rcl lcall inc dec outsb and lcall mov or int or sub popf push or bound mov jno jp lret mov addr16 add mov push adc mov push mov cltd dec push test cmp inc xchg jb into (bad) adc aad push data16 outsl pop xor sub push inc adc fwait mov or fs dec outsb inc push xor adc mov bound imul cmp sub call mov rcl lcall (bad) jb ret sarl mov dec adc xchg or push inc or test and xchg xchg jbe adc mov mov and lcall push adc outsb fisubl pop xchg (bad) mov fmull fs pop dec inc dec dec lods stos dec push call adc mov lock fs aam adc fwait dec mov lret and adc jp or sub ret sbb pop sbb pop mov or and and and mov pop xchg jnp xchg arpl sbb shrl leave ret mov mov stos sarl and push jp mov mov push push dec cmp cltd pop subl adc lret mov (bad) push cmp leave leave jnp jb inc sbb pop jnp jb lret and sbb mov xor mov mov mov stos mov xchg lret mov mov mov adc xchg pop mov lret fwait xchg mov and sbb mov xor and sarl adc adc lret push jp imul lcall sub and ret jb xor mov sbb pop push and adc pop lret xchg jno bound inc mov stos pop pop or mov ret mov pop sbb and mov cltd mov mov mov jnp sbb (bad) and xorl push ret and or cmp push cmp xorl imul mov rorl ret or pop mov mov sbb cmp mov xor mov xor mov pop pop sub or stos lret push sbb push lret mov dec inc or or lcall imul shrl xchg pop mov mov shrl dec or cmp lret shrb pop imul mov sbb mov mov adc leave (bad) or inc adcl ret mov stos lret push jns stos jb pop or adc mov rol or and sbb stos jae or mov fwait mov cmp xchg rorb arpl imul lret lcall cmpl ret mov and mov sbb (bad) pop stos or andl addl stos imul arpl imul dec pop jnp jnp cmp and jns mov stos sarl xor lret or mov sub dec jnp sbb ret adc xchg leave mov mov dec or jno adcl or pop mov or xor stos sbb mov cltd pop sbb pop mov cltd lret or mov xor mov mov lret sbb mov arpl lcall rcll mov or push mov jae ror ret xchg mov pop adc or stos or adc jp stos stos or jp sbb mov sbbl jp sbb mov adc stos jp cmp xchg dec or mov jp cmp fwait inc xor mov mov cmp sbb dec sbb mov or cmp cmp lret lret push inc mov rcll roll andl mov dec mov (bad) or imul mov dec dec dec or test jns leave mov lcall mov push lret stos stos lcall imul mov lret lret xchg or or mov sub lret pop mov lret dec inc mov pop xor ret jb or rcrl jp cmp sbb fwait and jnp or rorb or jnp adc mov lret popa stos lret push bound mov pop stos dec and sub ret cltd andl or dec inc adc or or jns pop jp sub pop cmp jp and inc cmp rorb subl lret or dec cmp imul lret sbb or xchg stos sub ret mov sub push and jb ret (bad) xor jno cmp or orl jno or mov imul lcall push mov sbb jnp xchg mov xchg push sub arpl jnp sarb or pop ret cltd sarl cmp dec and mov xorl cmp push stos fwait mov or lret adc stos imul pop inc cmp push push dec pop or pop xchg xchg push nop mov push pop aam push ficomp push cwtl push adc into adc fistpl adc popf sbb rcrl xchg adc aad adc rcr or or fcomp xchg sbb ror aam lea pop xchg push dec sbb push rclb cltd rorl adc fiaddl sub cs or stos stos dec sub sub mov sub out or daa and or in push out sub mov xchg mov (bad) es mov mov sub add daa xchg in gs adc pop push daa push data16 es adc daa inc and inc test xchg push xor data16 adc addl test aam cmc data16 lcall sub and rcrl cltd cltd adc insb call dec addr16 sub mov es lds movsb adc test add pop pop or mov ret mov pop sbb and mov cltd mov mov mov popf or mov (bad) add loope test mov xchg fnop in mov xchg adc (bad) (bad) or into mov jb mov push int3 ljmp push jb sub dec sub mov cltd sub mov mov and mov lcall ljmp and imul and and popa in shrl lods mov jmp (bad) scas in jo into jb (bad) data16 mov jne cmp je jne sbb lcall xor daa or aam mov pop fstps nop fcompl pop fcoms cltd dec rorl out or inc dec dec xor arpl imul lret lcall fnsave adc loop (bad) cmpsb mov enter dec jae push ss jno dec push inc jo inc xor bound lcall mov dec outsb jmp test je and lret imul (bad) xchg adc fisubr mov mov lcall mov in loopne dec leave insl and xor mov aad leave lods insb lret es lods imul das dec gs sub and or aad and les sub arpl mov sub lods adc sarb and stos xchg and leave sbb stos pushf into mov jo outsb les fsub inc movsl xchg je sub cltd int add pop aam mov ljmp inc mov sub mov (bad) aaa and cltd stos roll xchg sub int cwtl enter and ja inc inc pop dec arpl inc cmp pop inc push jns pop inc inc inc push pop inc dec cmp dec inc dec xor imul js outsl pop inc push inc cmp xor inc dec push xor inc sub inc push cmp push js inc dec dec dec insb dec jns jb imul xor dec aaa pop xor push xor dec dec fs xor pop push push push jne jae inc ja push inc dec push js arpl js pop outsl jb ja imul xor xor xor xor pop dec dec dec push insb jbe push dec jbe sub arpl pop inc cmp push inc push ja das inc addr16 inc push insb inc bound fs imul push jae cmp xor dec imul inc outsb push insl cmp push push xor inc jns inc imul inc cmp push xor xor push inc fs push xor arpl outsl sub dec inc je xor jne jbe ja dec inc push inc dec inc inc push inc jno inc jo push inc inc addr16 inc push jns inc dec addr16 inc dec jp jns push xor push xor inc dec inc jae push push push inc pop dec inc dec pop xor data16 cmp inc addr16 jno jae inc dec outsb xor push inc insl sub dec inc xor xor insl dec outsb dec push xor inc dec jp push jp inc push push push inc dec jne aaa fs imul inc push push jp jp cmp das outsb inc inc push imul push inc inc inc addr16 ss inc push xor ja inc inc insl dec jne je jno jbe dec jo push push bound push dec cmp inc inc push jno insl insl pop dec jo dec push inc push ja xor dec inc inc inc pop push inc inc dec xor inc xor je fs fs das insl inc aaa push dec dec push inc dec inc push inc pop inc outsb dec dec dec js inc js insl inc ja inc push inc jne inc inc outsb jns push xor push inc dec xor popa push inc push xor inc inc push push jp inc push dec js jo inc inc cmp push dec jno push inc insl inc push bound inc dec insl ss push inc inc jo das xor dec sub push inc inc dec push push xor push push dec push inc inc cmp push dec outsl cmp push addr16 inc inc pop arpl push xor ss imul imul xor push inc pop inc push xor xor das inc inc js push xor outsb push imul push push jae xor pop outsb inc dec inc xor push dec inc dec dec push inc jno push dec pop push xor dec insb xor cmp jp inc inc cmp push dec je imul inc inc inc outsb push xor aaa insb xor dec outsb gs push outsb dec dec dec js dec outsb gs pop imul inc inc push inc dec jbe imul push inc dec dec xor push cmp jns inc dec jns sub arpl dec outsl cmp push inc xor push push inc dec dec xor popa push pop imul fs fs dec dec xor arpl cmp dec inc insl inc pop inc inc inc xor inc inc xor addr16 jne popa jne inc dec inc push push push inc push jb imul dec jne push push xor dec xor inc inc jae push outsl push inc dec jp pop inc inc insb gs dec dec inc js jae dec imul push pop jbe inc inc inc xor dec inc push imul cmp ss inc inc inc push inc push inc outsl pop sub inc inc je jbe xor dec inc insb insl inc dec jns inc dec jns addr16 dec dec inc dec jo push xor xor inc dec dec xor xor jp ja dec insl jne jo imul dec je dec push ss bound inc push data16 jo xor inc dec insl dec sub xor jae inc inc je push outsb xor xor dec inc pop insl inc imul inc dec popa push inc insb insl inc inc inc outsb push xor insb dec jo inc inc push push xor push addr16 dec inc inc push jno outsb ss inc cmp je outsl dec cmp inc dec xor push push jno gs fs push das xor push dec inc das push je inc dec jno insb xor push xor cmp inc dec jbe bound jne popa addr16 push jp dec xor inc jb inc dec insl sub ss cmp dec push das insl xor dec dec dec inc dec xor push push push inc inc je jbe pop inc jp dec insl inc inc push inc gs inc jbe xor dec push cmp jae dec xor inc inc jae dec je fs push imul dec bound cmp imul xor pop xor inc inc arpl push jo push dec dec jne dec outsb dec imul ss inc dec sub jbe xor xor inc dec jno dec dec popa dec je inc inc inc dec inc cmp gs fs inc dec jp sub outsb sub inc inc push inc push xor popa push gs dec inc dec popa js dec dec jno inc insl inc inc xor pop push jne push inc jno inc arpl outsw pop inc jbe outsl inc dec gs inc cmp pop das inc inc xor insb das inc insb inc jo jae dec xor outsl cmp dec insb jns dec dec push inc jb pop inc dec dec ss inc pop push push js pop push imul push push jb dec je jp inc arpl imul push dec imul push push push inc jne dec data16 jno push dec inc pop inc xor dec arpl inc inc addr16 inc inc je jno jbe dec jbe push push ss push xor inc pop inc js dec push xor push inc push push xor cmp dec inc inc push jns jae dec js pop pop inc dec jno inc xor ss dec push inc gs jne bound inc inc xor imul dec pop imul xor inc xor inc inc outsl dec dec dec pop pop inc inc jb inc inc je xor insl ss inc dec dec push dec xor xor jns dec xor outsl sub jno inc dec inc pop dec dec addr16 inc imul push inc dec push sub fs ss dec pop push insl insb fs fs jbe inc inc jae fs aaa xor xor push inc dec gs jno dec imul inc dec jno push dec pop ss push dec je dec push inc push dec push pop jo pop jp inc inc inc ja inc jbe dec outsb jns inc outsl dec jp xor pop push inc dec xor pop push xor dec jbe dec jo dec dec dec insl gs dec push inc dec inc js imul inc imul push push dec inc inc push popa aaa inc inc dec push push inc inc dec insl inc arpl push push push jo dec js dec dec insb inc inc xor dec jbe xor dec imul inc push push popa push push inc cmp push js inc push aaa push arpl inc inc push push ja push push inc push arpl inc push inc push je jns ja dec outsl cmp pop das dec push push dec inc inc inc push jno push insl arpl bound push dec inc dec inc xor dec ss inc popa dec dec push dec bound pop inc inc dec inc dec dec dec push xor push dec xor data16 pop imul js inc inc dec inc inc arpl dec jno inc jns dec xor inc xor inc inc dec push xor je push arpl xor cmp imul push push js das dec dec imul cmp push jno push gs xor bound push insl xor dec jb inc jb push das dec imul dec inc fs pop das inc inc cmp push jb jo push xor inc jns inc pop xor xor dec dec inc push popa jo sub inc pop dec push imul das jp inc inc js push inc insb fs fs inc dec dec push jp popa xor push xor dec inc push gs push xor addr16 bound push push addr16 inc inc dec sub jae gs js inc cmp push jo push inc fs inc inc dec push inc push push pop inc push jae dec imul ja xor dec jno dec imul jns xor inc push push inc inc imul dec dec xor pop cmp dec jp xor push jp jne push addr16 push push xor inc fs push dec dec xor popa gs push pop inc dec jbe xor inc dec cmp inc dec dec cmp arpl push push inc dec inc pop arpl push inc pop pop arpl inc xor inc push jno dec push dec inc dec inc xor push jne dec je inc bound bound insb inc inc je push fs inc inc insl aaa inc inc ja inc cmp dec push jns je push inc inc inc imul xor inc ss ja jbe sub jb inc inc push inc js outsl xor inc jne aaa push xor push inc push gs dec ja outsb aaa insl push pop cmp inc dec jno xor dec bound push inc dec dec xor pop popa xor bound inc dec imul imul jae inc pop ss push xor inc push arpl jbe xor inc dec outsb aaa dec dec js inc push aaa inc inc je bound addr16 dec inc pop popa xor push xor dec bound dec push inc push sub inc push push inc push bound popa push inc inc push inc outsb inc dec outsl je dec push inc dec arpl arpl jo inc fs inc cmp imul push dec xor xor sub xor outsb inc push cmp data16 inc imul dec jno push das push push push pop inc dec je inc arpl inc push ja pop push insb jb cmp inc dec outsb xor xor das outsl inc inc push das bound ja jo inc dec xor xor push inc inc jne inc insl aaa inc cmp dec inc inc push aaa jo inc inc pop inc dec cmp push sub cmp cmp inc jae xor fs dec inc inc dec insl inc jne jp aaa dec data16 dec dec jne jb xor inc inc fs popa push dec bound xor dec insl push push dec jp jb das inc inc dec cmp jb xor dec cmp dec outsl insb je sub pop push xor xor dec xor push inc dec jp dec cmp jne dec ss inc push popa bound popa xor xor cmp push jno bound mov stos and cmp xor mov and mov lcall and and daa mov mov cwtl pushf lods movsb test sub cmpsb mov cmp cmp movsb mov cltd cmpsl sbb sbb cltd mov xor sbb sub mov mov mov sbb aaa mov cmpsl stos mov mov and mov stos mov and movsb cmp xchg mov xor stos and mov and cltd mov daa mov fwait daa xor mov sub and mov mov mov lods mov sub xor pop movsl sbb daa sub and xor xor and sbb xchg mov movsl mov xor xor xchg enter (bad) lock les push mov bnd into pushf mov shrb xchg lods bound outsb cmpsb scas aam mov data16 call mov jo test xchg fsubl mov push jo (bad) push sahf into fcompl pop (bad) sahf hlt in hlt enter aam xchg ljmp mov movsb and xchg (bad) mul adc xchg push repnz and or fcmovbe pop (bad) adc adc nop push sbb push adc xchg ficom push adc push adc rcll adc xchg xchg lcall ror push xchg mov or adc push (bad) aam adc xchg aad push adc rclb ficom push sahf sbb mov mov aam data16 mov (bad) ret xor arpl dec (bad) xor and mov mov adc ret imul lcall adc lcall push ret jp lcall and dec lods dec lods popaw jo outsb bound pop inc push xor xor das push js push xor outsb push imul push push jae xor pop outsb dec inc xor push dec dec dec push inc jno push dec pop push xor insb xor cmp jp adc leave xchg popf push pop int3 push imul in xchg in gs push and push lds sub lods cltd cltd sub and lods dec push addr16 test cmp popa pop lret sbb arpl push push jp mov or andl dec mov and and mov pop cltd ret jb pop cmp rcll pop push push mov lret fisttpll pop push test mov push test inc hlt mov fwait enter mov fmul ljmp imul push pop jbe xor lcall push lea push adc xchg push rcll (bad) mov pop xchg popf adc dec sbb repnz addr16 push je les dec dec xor xor jp ja insl jne jo imul mov enter cltd popf rcrl or sub stos dec data16 gs jbe inc and xchg jbe pop push inc xchg test cmpsb cmpsb fs push sarl lret out in loop addr16 inc inc push jno outsb movsb sbb movsb cmp mov pop push xchg fcompl sbb or mov leave dec daa sub inc pop add dec mov movsl cltd xor or sbb mov lods xchg movsl pop fld pop loopne lret push push dec dec dec movsb sub xor movsl cmp mov sub movsb sub cmp inc aam and fwait sbb push mov mov fadds pusha aam or dec insb ljmp push mov mov push aaa jae addl push push inc and adc inc and jns pop adc dec test dec lds unpcklps push hlt in pop test (bad) push (bad) fs aam add and adc sbb jmp dec aam push ja les aaa add push ret les mov jns and movsb sbb imul xor test imul lods sbb push mov lods dec (bad) lds push xchg int3 into int3 mov lret mov nop movb (bad) call daa xor sub sub cmp sub mov test adc sbb leave dec push mov sub mov dec test mov pop pop pop into sbb sbb (bad) int into adc adc push adc pushf lcall adc xchg or pop dec cwtl jae mov stos aaa and dec addr16 inc imul leave dec or mov xchg xchg jae xchg inc test jmp js dec test pushf sbb dec test jmp cs sub xor and and sbb es cmp rcrb cltd nop rcll sahf sbb sub or push popa aaa inc inc dec adc sbb stos mov roll jnp sbb and and dec test out dec stos outsl or in or dec sub imul cs dec dec xchg test fs inc daa pushf xchg add dec inc push jno push insl arpl bound xchg pop adc sub leave sub lods dec es and xchg outsb out mov xchg movsb ret push mov push push add popa dec shrl arpl adc pushf enter cltd rclb pop push int3 rcrb sbb xchg sbb in aam pop nop and movsb movsb jbe xchg xchg push test xchg aaa testl int3 imul cwtl cltd or pop dec push imul movb push jb shll cltd cmpsb arpl test mov inc dec dec sub dec inc insb lea add jae push adc test stos inc push jae imul ja xor rcrb dec pop dec or xchg pop mov pop int cwtl fmull cwtl sahf push inc mov sbb push push and pop dec stos push cmp lods adc shrb imul pop arpl push inc pop pop arpl xor inc push jno dec push xor test bound adc mov jae and sub or ret daa xchg xlat inc movsl add es push inc je jne and mov sub or xchg pop sbb or loop adc adc test cwtl cltd lods adc insb ret xchg aad enter fldcw aad scas nop xchg xchg lock loopne adc test adc (bad) cwtl dec push int3 dec pop jmp sub dec sub lds dec push ljmp aaa and lcall ret xor mov in je outsb dec cmp data16 inc imul stos stos xor movb mov cmp dec mov sbb insb and mov adc cmp push test and jp jl or inc dec cmp jns dec xor push pop cmp cltd cltd mov fwait adc insl inc and leave mov dec push cmp dec mov sub dec stos mov add cmp cltd cmpsb dec (bad) call adc dec pushf push xchg adc lea sbb and sub mov loope pop pusha xchg mov inc popa outsb push sub es call lret dec insl lea or int3 test inc adc mov pushf mov orl push push dec pop xor out inc dec cmp dec dec dec jb pop push dec gs xchg es push mov dec mov pop adc loopne out iret loop dec cltd lea dec xchg or lock test cmpsl test cmpsl dec ficomp and test les jbe sub xchg fstp rcl call mov popa sbb and dec mov mov int lret loopne (bad) mov les shrb aam mov (bad) fdiv adc je pop push adc notw notb and push nop mov ss and adc test xchg adc dec or dec insl int cmpsb mov or dec addr16 or mov and hlt mov je xchg adc and cmp sbb inc xchg leave rolb inc js adc jae stos sbb ret mov adc inc lret xchg or or sbb cmp sbb sbb mov or xchg xorl lret ret or fwait (bad) xchg (bad) mov stos dec adc sub ret mov dec jnp lret ret mov dec mov lcall inc push mov mov or and popa stos xchg ret fwait lret pop mov push mov jns or or push mov or imul dec adc (bad) lret mov sub cmp jp subl bound cmp (bad) subl subl cmp test sub lcall mov cmp mov or xchg xor mov mov stos or lcall and stos or bound sub jnp (bad) mov sub xchg rcrl or sub mov or adc mov xchg stos xchg sbb lret orl inc popa lcall arpl or lcall push cmp sub push imul mov lret pop mov sbb mov lret shrl or mov mov imul arpl sbb push adc sbbl stos or mov jnp (bad) mov or andl xchg ret mov jb stos sbb arpl and ret pop xchg or lret lret xorl mov xchg dec arpl and ret xor int aad push mov dec sbb xchg ficom push push push xchg dec nop pop pop fistl push rcrl int3 push adc fcom push aad push mov rclb mov xchg push push xchg push adc or sub lods sub sub cmpsl push out dec enterw jmp jmp test xchg inc xor jb addl stos pop push (bad) mov or and popa stos xchg ret fwait lret pop mov push mov jns or or push mov (bad) jo test sbb (bad) mov push cmpsb data16 cmp jne dec push inc ss and sbb xchg mov nop cwtl rcll dec lods jmp cs inc sub ja cmpsl and lcall and stos sub mov adc mov (bad) pushf (bad) mov xor pop bound dec sub test and test mov mov imul cmpsl xor jne add data16 jno test aam int enter hlt mov adc mov lea pop adc sub or or inc ss movsb and lcall leave subl rcrl test rorl or push xor mov imul and push rcrb sub in (bad) mov mov imul sbb inc lcall xchg les inc (bad) mov adc movsb mov out ret xchg test xor js mov fistl mov lea loopne stos jmp mov push in and push push or stos xchg arpl fwait cltd mov or push push pop pop fcompl dec inc into in movsl jmp xor mov mov movsl push loope and lods xchg cltd lods adc rcl push shrb inc xor sbb mov pop pop sbb push push cwtl mov jp jno rolb pop xchg nop mov scas mov dec imul inc cmp mov mov dec dec push dec sub test mov inc xor ljmp mov mov mov xor adc adc sub push js mov pop pushf popf popf pop fwait rorl lret dec stos data16 push inc je mov addl jns imul push jo pop xor outsb push js and sub and push lcall fsubl movsb ss push push mov jns xor repnz out test jb jbe je inc and cmp lds adc inc inc mov pop sbb (bad) call aam dec cmp movsl and adc cmpsl mov inc (bad) cmpsl push jno movsl mov pop cwtl xchg fnop nop hlt sahf mov xchg inc imul mov pop rcl dec insb dec test scas dec insl mov push dec outsl adc pop sub adc push in adc ljmp stos sub ret and pop xor shlb cmpsl inc cmp aaa xchg cmpsb mov fmull inc mov stos ret sbb hlt mov fs mov sub push outsb adc shr cmpsl test jae test xor movsb push jb pop xorl and push adc adc fisub test int3 fcoms loop xor xchg sub and (bad) inc sub and sahf adc data16 data16 xor and inc mov dec or call and and mov mov xchg xchg or pushf (bad) sub mov inc movsl xor lods sbb enter outsb test cmp xor adcb rol inc mov inc push and inc push sbb sbb dec stos in dec inc mov movsb hlt push les xchg mov movsl dec out xchg fs lds aaa jb dec inc jns lret or mov stos and xchg (bad) into int3 iret inc es cwtl xchg or fwait cwtl jae mov daa movsb xor xchg sbb pop pop fwait lea (bad) mov cmp mov mov push pop dec inc inc repnz pop adc lcall push mov sub mov xchg shl loop hlt in xor mov push out aaa xor inc inc adc cmp cwtl aad push lds dec dec (bad) es push push inc je xor ss mov enter fs xor addr16 daa sbb fstpl int3 (bad) aaa bound jp adc pop push dec rclb push sbb movsl inc ljmp (bad) adc mov rorl adc mov xchg ret loop loop push xor cmp je and adc popf dec or pop out lcall push pop xchg (bad) in lcall popa push repz int lret dec xchg outsb into and imul iret adc jns lret fisttpll inc popa sub movsb push add jno sub adc (bad) scas mov out mov stos int3 nop out (bad) lret lcall push fstl mov cwtl out (bad) ljmp cmp fwait cmpsl mov ljmp sub dec jmp wbinvd mov leave sub sub lods or sub call or cmpsb inc xchg xchg xchg and cmp mov ret xchg or adc sbb adc sub stos xor mov adc push fldenv movsl int3 leave sub imul xor scas outsb mov (bad) fcmove ljmp ret fnop push shl out xchg xchg xor outsb dec jo ja jne bound jae jne xor xchg mov mov adc out xchg mov out fiadd je je mov pop sarl adc mov push leave mov test fstl xchg sbb test adc jno xor loope loope cwtl lods mov dec push sbb cmp leave inc lods inc adc (bad) mov mov ss mov xchg xor mov scas adc rcrl xchg push or fiadd movsb adc or or dec pop pop pushf lds mov xchg and or or push xchg aam push inc inc sbb sbb stos and mov cmpsb xchg xor rcr test inc (bad) dec xor xchg jno sbb cmp or sub adc (bad) int3 call ljmp aad lods test loopne dec mov jo inc cmp mov daa inc adc xor mov mov aad xlat mov insb inc pop stos cltd xor mov insl and push insl pop adc sbb cmpsb (bad) mov sbb xor mov jb dec sub cmp xor mov aaa mov adc dec imul xor stos xor loope popa pushf lret or and xor or mov inc mov popf add sarl daa sub dec imul jne or and pop or xchg lcall push adc push adc popf push push push or sbb or lcall push sbb fcmovnu push push xchg dec rorl rorl or sahf or lret int aam push pop pop pop pop or popf pushf lea adc fmuls push push adc popf lcall rclb dec sbb adc pop ror pop pop nop lret sbb rcrb fcompl rcl pushf lea pop adc adc sbb xchg fcmovu xchg ficompl sbb xchg sbb rcrb push sbb rcl fstp pop rcl pop fwait int pop adc into adc push sbb fwait adc aad mov mov int sbb (bad) xchg push xchg ficompl xchg nop push pushf rcr adc rclb fwait push nop push nop xchg push push or rcl lcall fimull adc push int adc push pop xchg rclb push sbb sbb sbb pushf sbb sbb fstps lea aad pop push nop push push rcrb push pop adc push xchg xchg fstpl pop push xchg push pop adc lcall adc or pop xchg push push lcall xchg push adc rclb fimul sbb cwtl fnop dec xchg popf fmul adc sbb push rclb push sbb pop push adc rcrb fstl rclb int fstl dec (bad) sbb fwait push xchg push pop push push sbb or xchg int3 push push adc sbb push cltd sbb rorl sahf xchg mov lret aam adc sbb popf pop rorl int3 into or int3 xchg xchg adc rclb fstpl push pop push push rcrl pop push popf push push into pop or adc pop adc popf push sbb fcmovbe sbb aad dec rcl pop adc sbb lcall (bad) rcl pop fcompl push fcmove pop push fwait adc (bad) pop adc rcr cltd rorb sbb nop pop xchg push mov push popf xchg lcall (bad) lcall pop xchg push popf adc mov push adc push pop adc xchg xchg push push push xchg xchg ficompl sbb lcall push nop push cwtl fsts pushf adc rorb or push push lcall rcll push push pop rcrl push sbb nop push dec adc fmul push rcll xchg adc push cwtl fstl adc push xchg dec xchg lcall rcrb rcrb nop pop dec pop cwtl rclb pop aad adc push adc push rcll pop pop rclb sbb (bad) lret ficom dec rclb sbb xchg aad pop fwait lea xchg or or pop mov pop rcll fcomps pop dec dec rorb push push push or adc dec rcrl int pop pop dec dec popf sbb fcompl lcall fistpl adc dec adc mov lea fistpl (bad) pushf lea lcall push fwait or fwait or lea ficoml push rcrl rcrb pop mov push aad push dec rcr pushf adc sbb push pop (bad) push aam push sahf xchg rclb (bad) xchg ficoml orb or or or lods sub sub or push xchg or lea in int or out ljmp test es pop add in in sub xchg into inc lods call inc outsl dec iret dec outsb sub mov dec int inc dec lods dec out sub xchg mov call gs int3 scas push and sub repnz xchg mov ret dec mov and pop xchg jnp dec or xchg mov xchg sbb cmpsb mov push mov hlt divl je mov and add dec mov sub pop mov mov or lea xor imul imul inc push imul adc fimull adc push int adc push pop xchg rclb push sbb sbb sbb pushf sbb sbb fstps lea aad pop push nop push push rcrb push pop adc push xchg xchg fstpl pop push xchg push pop adc lcall adc or pop xchg push push lcall xchg push adc rclb fimul sbb cwtl fnop dec xchg popf fmul adc sbb dec (bad) mov shlb and test or call cmovns cltd test jp mov jnp mov ror imul or xor mov lret mov adc enter outsb hlt jo xchg and and mov lret das dec lods call in out lret push cs or sub ret sub stos mov lret mov mov sbb cwtl ljmp outsb xchg (bad) mov insb (bad) hlt in in xchg ljmp xor sub dec into or insb dec call test mov add mov lret push mov pop mov rorb push mov and mov push adc push test xchg adc in cmpsb ja push mov mov xchg inc adc xchg rorb or push push lcall nop pop rcrl push sbb nop push dec adc fmul dec pushf mov (bad) inc xchg and sub dec int push call push or lret mov or imul mov sub sahf pushf movsb pusha insb mov mov call int3 fs jae mull mov cmpsb cs (bad) enter inc mov mov push xchg and mov movsl or xor push inc xor push sub popf pop pop dec dec popf sbb fcompl lcall fistpl adc (bad) inc add xchg shl daa and not test push cmc xchg xor popf or pushf inc dec dec push sbb cmp cmp xor aad imul push popa push inc inc xor cmp test scas rcrb es xchg and leave loope inc xchg add rcr leave loopne mov sbb xor mov xor test mov mov mov push mov into mov inc or arpl lret lods enter data16 sbbl dec cmp mov pop mov mov mov mov (bad) fsubs and mov jbe cmp push inc inc dec addr16 adc sub xchg nop hlt loopne loopne jo push mov push data16 mov lret or pushf mov inc repz push xor lcall in data16 pusha out mov push out and dec sbb fstp les xchg cmp pop cltd cmp cltd stos sbb sbb mov mov mov mov daa mov mov loop test stos cmp and sub es dec call jns gs mov fmull shlb es adc push lods (bad) xchg in pop (bad) (bad) test and stos and (bad) (bad) fdivs (bad) xchg mov mov mov cmp mov mov daa sub mov movsl mov mov shlb xchg ss add xchg mov dec pop mov and mov mov jno jp push push push mov into adc xchg adc and pop dec sub lcall and and push insb and pop lret xor pop mov out inc in lods inc xchg xor adc arpl adc test push in mov cs mov mov test out les test sbb xchg out push ret sub xchg stos imul push xor arpl ret push sbb adc inc gs imul or stos inc push inc dec je adc adc mov jb fs mov adc mov es lea inc push bound imul mov jmp xchg pop adc dec hlt push or pusha int add mov mov jmp das inc push imul lds test stos cmp daa xor cmp es sub or jne inc addr16 dec inc ja inc push xchg pop adc fstl bound cltd into inc out divb sbb cs sub dec and dec sbb ljmp xor pop adc aaa push das dec dec imul in daa add sub mov cmp fldenv dec es jns mov out push cmp mov or sahf es mov jae cwtl stos cmp sub out out or es mov lods nop enter stos out add inc sbb adc fstps cltd (bad) shlb mov fwait (bad) pop stos adc scas loopne scas pushfw mov sbb aad test and sub sub inc or or dec imul (bad) sub (bad) pop loop popa mov or lret pop adc lea mov inc addr16 xor (bad) loope mov dec scas test jns mov push insl inc jp outsl loop aaa adc mov xchg inc inc xchg loope popa pop mov xor inc cmp mov jmp mov ljmp cmp pop xor das push sub inc das push xor das ja inc inc addr16 inc inc inc push inc inc ja dec inc addr16 inc inc xor js push inc push push push inc js pop inc push xor jns push dec inc push insl dec jns jo cmp outsb jo ja outsl inc dec push dec dec xor dec dec outsb jae das push jne xor inc push imul push push inc push push insb dec push imul inc xor xor jae insb push push inc push xor push imul inc xor inc inc push pop inc push insl insb ss outsl gs jae bound jne dec inc js outsb push inc fs push xor push inc dec xor data16 inc outsl dec inc push xor dec imul inc insl xor sub dec inc imul outsl inc jno xor dec xor xor inc inc pop insl inc imul cmp inc outsl xor inc outsb jb pop push pop dec outsl push imul xor push cmp xor addr16 pop jp sub dec aaa imul jne je push dec push jne outsb addr16 push jno xor outsb dec push xor inc insl dec insl inc jae outsl js xor jbe outsb push js push jno insb addr16 jae jp push outsl push aaa insl inc ja push popa pop jb js inc fs inc push cmp xor push inc push inc push jns sub push jne inc inc jno inc push outsl push bound cmp xor push imul ss inc arpl inc arpl inc dec js addr16 popa xor xor cmp imul xor ss gs arpl inc bound data16 arpl insl inc inc jbe aaa fs arpl cmp ja dec popa pop jbe push push jp dec addr16 dec jno pop das insl inc dec jne inc inc aaa insb outsl jne push xor push inc dec fs dec jns sub push inc push xor xor inc das xor jo jae jb outsl push inc push xor aaa pop sub dec sub aaa bound sub addr16 insb push dec aaa outsl popa dec imul addr16 xor ja outsb jp inc jae jo dec aaa ja bound pop inc insl xor xor jp dec inc xor jno jae pop inc js outsb dec ja dec push ja outsl inc fs inc jp jb jns inc inc data16 dec cmp cmp inc push jne xor jb sub inc push jne sub inc dec ja jb inc push jbe insl cmp xor je dec sub outsb dec addr16 inc imul inc dec xor jb pop push inc inc jae dec push inc jne dec jns pop push xor inc xor addr16 dec push cmp inc sub inc inc push imul push inc inc bound push jae ja dec inc xor push jbe push push inc inc push je push pop push push inc pop inc inc xor je pop jne xor inc insl xor push inc jne xor arpl push fs xor xor gs arpl inc sub inc inc outsl dec inc push pop imul inc inc dec ss pop imul push inc xor das push xor das ja push inc fs jae xor das dec js inc inc arpl jno das inc ja inc jo jae jns je dec js inc xor xor cmp push inc push xor jno jae inc push pop jne jne xor ja dec imul xor inc inc js jno je ss push jne inc jae pop push push xor inc push imul popa xor dec push ss push addr16 push fs addr16 push jne insl push insb push jbe das push aaa sub inc xor push inc dec jp js imul inc arpl push outsl aaa inc push inc das inc push inc inc push ja inc push xor push imul inc xor xor push insb dec push push inc push push push ja inc push ja inc pop js addr16 push dec push ja outsb popa inc imul arpl ja inc arpl push xor xor inc aaa dec cmp aaa jns inc dec ss ja dec inc ja push inc inc dec bound dec outsb dec jns jp inc dec aaa push xor push xor push push inc dec bound dec outsb popa xor jp inc dec aaa data16 dec imul bound dec outsb jno sub inc dec aaa jbe push dec jns das push xor bound sub ss inc push xor push xor xor dec das arpl xor push inc js push inc ja addr16 inc inc inc push das addr16 push jb inc je popa xor push dec pop outsb dec inc inc push inc inc jb jne jno imul insb dec xor fs jno inc outsb xor xor push inc dec insl insb ss dec dec push imul dec outsb inc imul addr16 push inc cmp pop inc jns inc push dec je gs ja ja insl popa push jae dec outsb outsb inc inc bound xor push push dec insl dec pop inc dec imul inc jns sub je addr16 push xor dec dec inc je imul push inc je push pop dec inc cmp jno dec cmp inc inc dec and movsl outsb into push gs call test dec sub dec insb call jp ret sub mov mov rolb movsb cmp mov mov dec dec push test insb out sub into or lods or sub dec cmpsb dec dec sub in (bad) das push jne xor adc xchg push xchg aad pop adc dec push enter rorb stos sbb lods and mov or inc push insl insb ss outsl gs inc cwtl xchg int3 pop pop xchg adc inc test xor adcl adc int3 push aad and mov xor mov and cmp mov fwait sub mov mov sbb lcall sub mov cltd pushf movsl cltd mov mov sub mov test sbb mov test stos test mov movsb test mov xor lods cmp and lcall mov cwtl mov sub stos cmp mov stos sbb sub out sub dec outsl push call push or test dec dec stos iret sub dec scas test sbb mov mov movsl ss daa xchg gs xor es xlat xorl adc addl xchg xchg divb xor xor je and inc addr16 aam dec aam xchg push mov in cmp adc test push dec push and popf dec push push stos ret push test sbb mov arpl or mov and leave stos test jns mov mov or push mov mov jns cmpl aam xchg outsb faddp sahf rolb into xchg push fcoml pop mov movsb sbb lods mov test mov dec leave or xchg fnstcw inc (bad) mov sbb in add cmp lods xor aad leave jmp sub mov cmp lret cmovnp xchg mov pop mov adc mov xchg mov popa mov mov inc dec enter imul jnp jns cmp test mov rcrb test test fs or pop rol pop gs test or aad lds or mov or fadd or (bad) aad push xchg fisttpll enter fstl fisttpll lods aad or push pop imul push ror mov sbb pop (bad) int push int or or pop add mov cwtl cmp and xor test cmp push in dec dec js inc xor adc sbb xor jno jae inc push pop jne jne xor ja dec imul push xchg in loop call ljmp test and mov sub cltd and add fmuls sbb bound mov popf adc js imul inc arpl push outsl aaa inc push xor mov or adc and sub dec invd jb mov adc cmp or test cltd test sbb dec cmpsb loop dec inc popf rcll (bad) adc xchg push push dec bnd pushf xchg test daa and cwtl sbb sub cmpsl xor mov xchg or data16 dec imul fwait lea ficomp mov inc gs (bad) into mov mov lds inc inc (bad) mov test mov mov mov dec xchg es sub lret or inc jb adc xor fs jno fwait lea sbb inc xchg fistl jp popf rclb xchg xchg mov cwtl push test jae leave mov cltd push push cmpsl jae (bad) adc out lea rcrl insl dec and lret outsb xchg mov cwtl push rcr call xchg adc fstpl and jb (bad) (bad) int3 xchg jb (bad) test cmp cmp sbb mov cmp mov mov ret dec mov shl jae mov cmp sub das push jno or pop (bad) push or push push inc inc jbe mov xchg mov or inc aaa dec les inc inc inc push inc int3 in xchg xor inc and sbb ss jp imul bound cmp inc dec je push push ss inc xor dec mov outsl pop and gs xchg hlt inc push cmpsb aam loop (bad) pushf mov sub lods mov mov fs dec dec and dec xchg pusha lcall mov dec dec imul lcall adc xchg dec test sub cmp stos mov inc fldenv inc and mov shll xor movsb dec lea xor test pop add and mov scas inc xorl adc fisubl lret rcrl in pop jno and mov movsl sbb gs dec ljmp xchg mov in or int3 int ficompl xorl ljmp cltd or aam aad test inc je or test lea xor sub mov mov sbb mov jns gs gs imul lds inc outsb inc out jae cmp and pop cld dec lret in mov xlat xor xchg inc orl loop dec adc cltd sbb push aas icebp cmp or xchg int (bad) pop mov push loop jbe adc dec sbb mov mov mov mov and adcl pop mov inc (bad) int mov adc pop add test cs xchg jbe dec fwait pop les xchg inc and imul push and test and cmp aad pop dec sub ljmp push sub jmp push insl or sub or or (bad) or dec dec insb sub sub push insl test sub mov mov out dec push call push lods call test cmpsb mov lods push or or sub call dec mov dec sub in push sub or lods call insb (bad) in ljmp lods call stos dec stos sub es int3 stos push mov mov (bad) call ljmp sub call inc outsb xchg mov jmp or or out dec (bad) scas pop daa push mov or gs insl enter dec lret add dec sub push dec sub or cmpsb sub xchg jmp imul cmpsl cs sub dec in jmp mov or dec call dec stos call sub sub cs dec das or mov test or dec dec mov test dec stos leave dec push or push dec inc sub or test enter xchg push dec (bad) dec dec or sub or dec cs or lret dec test mov (bad) lods xchg lods mov sub push das or dec jmp jmp dec mov lret es out dec jmp test (bad) in sub sub or outsb dec push dec sub call sub dec (bad) stos or sub mov or sub sub call xchg or push test sub jmp or mov out test daa or out call out iret dec in test test mov sub or mov push mov dec lret sub int sub in (bad) in sub mov or or sub lods mov in xchg insb in ljmp dec sub sub outsb leave stos imul sub sub cmpsl sub call xchg sub or sub sub mov imul ljmp sub test out (bad) or insb int addr16 sub (bad) or mov out cmpsb or jmp lods dec (bad) scas stos test test test (bad) outsb xchg es dec push mov data16 mov dec data16 dec scas leave outsl sub dec femms push das or gs into inc or leave mov outsb mov mov outsb into dec or dec outsb scas cs sub or sub into push or stos dec sub mov insl imul dec out sub push or lret ljmp or (bad) enter test out push in stos sub sub lods stos insl imul push sub movsl outsb or sub into push enter out cs dec lods cs in dec mov mov (bad) mov or (bad) dec sub inc outsb call lods leave das sub mov dec outsb lret and sub mov sub mov xchg or in push sub sub in int lds movsl in call test sub dec dec dec call or out or sub dec dec dec int3 call insb outsl push mov sub sub sub leave dec call outsb sub das or mov sub test scas sub dec sub dec jmp (bad) sub dec or push daa or sub insl or outsb in call or dec dec sub call stos or dec sub (bad) dec dec lret dec sub dec lods call mov call lods lret lea cmpsb mov int push or insb insb in jmp call lea cmpsb leave test lods test sub sub stos in or insb push or or sub cmpsb xchg dec scas lea push inc call out sub inc cs dec push scas test sub gs push call in out insl es cs leave test es push push sub test mov lods lea push dec dec or cs in lds enter int mov leave or insl (bad) push or or push or or mov sub push enter sub or and stos daa test sbb test sbb mov sub cmp mov mov and sbb mov sub mov sub sub xor cmpsl stos aaa stos mov mov mov mov mov sbb mov loope xchg sbb imul or lea add xchg mov loope test mov aad test (bad) sbb pop mov leave sbb push push mov or popf or inc shrl shl adc sub xor cmp test jmp in roll mov enter mov cltd pusha lods (bad) leave leave sub xor sbb ret aam lcall (bad) pushf cwtl insb ficomp mov in pop mov (bad) test pop in mov xchg (bad) (bad) loop mov (bad) movsb into test scas mov into leave pop dec inc xor jb inc js cmp dec inc push dec js addr16 push inc xor xor popa dec inc push inc push dec jo push push inc xor xor pop bound inc push pop je push pop inc xor xor bound pop inc push jo xor pop pop xor cmp xchg xchg cltd adc or xchg or sbb aam adc cltd or push xchg pop xchg dec xchg fcompl fcomp (bad) mov mov cwtl (bad) xchg xchg rcr sarb (bad) cwtl jo (bad) mov insb ljmp (bad) mov lcall (bad) loopne test data16 test jo xor mov and stos dec sbb bound jnp mov dec jns stos jno jns mov cmp xchg push adc pop adc int3 push adc pop fcoml test push (bad) mov and movsb xor cmpsl and and and movsb aaa test mov mov cmp and cmp fstl in roll daa xor xor inc das das jbe fcomp lods cwtl inc les push push jns and jnp mov test inc mov dec xor popa xor movsl sbb and cmp mov and cmp adc fstp ror fstpl popf pop lcall adc pop fcoms pushf xchg fstpl pop pop pushf sbb pushf adc ficompl push fstps popf pop pop push lcall xchg aam (bad) nop aam fwait rcrb sbb cltd push push push sbb dec into push not xchg xchg (bad) push cmp push loopne mov cmpsb push xchg test jbe cmpsl xchg adc push pop je addr16 mulb arpl push popa cmp mov sub mov inc inc dec jp jbe sub xor xor cmp xor fs (bad) mov xchg mov aam popf or daa lods mov lock mov cmpsb int3 movsb movsb hlt mov test test addl lods sub sub aam mov mov xchg push and mov xor fwait sub cmp test mov and aaa movsb sub mov movsw and and mov enter dec lret dec and xor mov nop dec rcll pop xchg push cltd sbb shr or sub jmp out in dec lea cmpsb leave test or test or insb bound xchg mov pop mov fldcw int test enter int cmp mov inc cs jne sub adc fmull dec nop mov out outsl adc dec inc pop adc ja inc xchg andl xchg xor fsubrs hlt (bad) xor and cmp sbb mov xchg mov pop push mov enter mov sub enter dec or or sub inc or dec sub mov in stos push or insl fs inc cmp xor inc push scas pusha (bad) xlat dec push inc xor insl push push mov dec push pop movsb push push xor les dec dec xor cmp (bad) rolb xchg dec inc sub mov fisttpll push insb inc out inc js je mov in fsubr insb into bound xchg loopne fcmovu shr xchg shrb xor xor jne xchg mov add cmpsl xor sub adc adc pop fimul pushf pop xchg pop adc adc fsts or outsb and adc or push adc lea scas loop outsb dec inc inc xor arpl insl int3 lcall cmp adc arpl lcall push xor insb dec insl mov push xor push cmpsb test push (bad) sub pop stos sub lret dec enter movsb sub cmp movsl and sub out sub (bad) pop dec xor inc les jne lea leave or popf cmp data16 cmp imul mov es repnz sahf inc xchg adc icebp sbb or dec sub mov sbb mov or and sub test sahf sbb fwait mov pop xchg or ficoml push xchg lret int3 push adc pop push pop dec dec rcll push repz lcall pop popf pop fsts inc inc es xchg sbb xor inc mov (bad) out adc ss lcall xchg xchg sub xor and cmp lods xchg ljmp xchg pop fisttpll fs or sub xchg gs sub fisttpll mov inc cs lods and nop (bad) daa add pop mov gs (bad) repnz and dec pop dec stos and adc es test add out xchg mov dec xchg es scas dec cmpsl push lret outsb into loop ja test xchg in inc movsb inc andl adc add aad add loopne daa sub xor xchg leave jnp scas loop inc enter hlt and dec sbb fstpl push adc jne lods popa sbb sbb fstl (bad) leave inc add dec or test dec lret cmpsb sub dec call jb das adc pop and inc int3 in xchg adc xchg dec sub dec bound xchg movsb xor cmp and ror dec flds jo dec outsb (bad) ror inc jbe hlt mov test push and push dec imul dec inc adcl popf pop fwait pop mov adc popf push or mov and xor xor in sub mov dec in (bad) xor rcrb cltd adc xchg mov inc push xchg movsl add fstps and rcll sarl mov dec and pushf repnz fisub push xor movsb dec sub popa dec dec pop and lret sub or pop push mov pop sbb mov inc mov lods lret sub sub inc sub int sub int xchg int3 inc out mov int push jmp lea scas mov sub jmp lret outsb out or int push dec cmpsb dec sub dec or sub mov enter sub out test das es sub outsb push imul sub insl cs sub sub dec lret dec lea sub outsb dec cmpsb call or lea lret or sub inc scas dec add sub outsb cmpsl es inc test push imul outsl dec sub test cmpsb lods call dec dec int3 lods imul sub daa sub or mov push dec int3 imul sub inc push enter push in call or into outsl or sub dec ljmp sub xchg out call lods jmp sub mov sub dec sub sub sub mov pop or call enter mov mov test sub dec enter enter (bad) or call ucomiss dec or call dec dec push call or mov insl sub dec outsl dec (bad) iret sub sub in leave dec (bad) or scas or push test stos outsb call sub or inc sub (bad) jmp es or push pop es sub push dec push sub sub push dec sub daa or outsl sub lret push dec test insb lods cmpsb scas call int3 in lds test outsb int push or cs out and into in gs dec (bad) test gs sub test lea inc push mov imul imul sub mov scas mov or int3 push (bad) outsb leave leave in or xchg add out dec push sub dec cs jmp mov sub enter es mov test or es (bad) in push or and or call call scas or or mov sub in push or push push or or sub leave inc sub call jmp dec or sub lret test into test or insl mov or outsb or stos (bad) dec lret push or call sub dec outsl sub push stos in imul mov into scas mov push into inc mov or sub cs or leave push int test or dec enter sub or or push or es das dec dec dec test sub call dec push dec call sub (bad) lods in or sub mov es out in lods dec dec gs push data16 sub dec int3 test sub sub push dec inc insl arpl sbb push lea mov push fwait adc lea aad (bad) into pop adc sbb push (bad) push push rcll push push sbb adc fcoml adc xchg xchg cwtl xchg fstp adc xchg dec nop push dec lcall or push test das es sub outsb push mov inc push xchg xchg mov pop dec mov inc adc imul or mov shrb leave test fldl add test test aad loopne mov or xchg mov pop xchg hlt rol lret push mov push aam lods lret outsb out fdivl push outsb push cmp bound inc inc push xor arpl ss xor push inc inc cmp ja inc dec ja dec dec data16 push jns inc push jns dec xor push jbe ja jns pop cmp xor dec ja je imul imul dec jno addr16 dec popa push and cmp xor and mov and movsl cmpsb sub test push push fwait nop cltd ror nop xchg popf or fstps ficompl pop int3 rclb adc fisttpl pop xchg fcompl nop dec xchg adc popf rcr push xchg adc ficom push lret xchg xchg mov cltd pop adc push or or xchg addl xchg data16 push jne xchg xor dec xor sbb (bad) arpl ror mov fwait jnp xchg pop mov (bad) leave lds loope mov in pop push aad add mov lods xchg xchg aad add popf cwtl lods and and int movsl dec dec cmpsb (bad) outsl das dec sbb mov mov xchg mov cmp push xchg sbb rclb pop dec adc in push push sub cmpsl push inc and xchg and mov cmp nop push out lcall enter sahf lcall push inc dec pop pop xor inc inc and mov sub xchg lea fimull rcll aam adc adc fcomps rorb xchg pop rcll push pop sbb fcoml adc push addr16 mov int3 int3 outsb dec push or or mov leave xchg bound mov rcr xchg or insb push cmp jo outsb inc inc sbb xor test and xchg xchg nop ficom dec es sub push and mov sbb int3 loope (bad) in adc xchg (bad) ret xchg call dec inc xor ss insl dec inc xor stos sbb and sahf sbb cltd push pop sbb inc leave das dec dec dec test sub cmpsl add and daa cmp mov mov loop mov push push repz xor (bad) pop pop lcall xor sahf daa push fcomps cwtl mov mov arpl jns pop dec dec jae sbb sbb mov push or daa cs mov mov cltd fnstenv inc imul mov mov push sbb cltd adc and sub or pushf pusha xchg popa popa xor push mov fstps lea lea sub sub enter adc push les push mov xchg andl lret xchg pop jnp rcll push (bad) (bad) (bad) cs dec lods sub lods mov data16 cmpsl xchg inc out divb jbe arpl sbb sub push (bad) iret mov push xor dec mov xor dec and and test inc (bad) data16 pop cltd and pop push adc arpl xchg sub sbb cwtl dec dec xchg sbb mov mov ficomp dec test out inc xchg in es test repnz aam test hlt mov xor fs xor cmp inc es mov pushf cmp dec sbb adc jns sub ret xor and fimul mov int rorb xor and mov pushf push dec int enter dec int sub lods lea (bad) dec stos (bad) inc arpl xor mov xchg aam adc pop rcll call dec dec or addl mov sbb dec adc dec xchg adc fld1 test ret es sbb cltd loopne leave mov inc int3 stos imul outsb (bad) imul dec call inc cmc xchg and fs in loope hlt hlt ret loop addr16 mov xchg sbb in jmp jmp cmpsb mov (bad) outsl outsb xor push data16 push push push dec inc sub cmp pop daa or or test in add imul mov sub inc and and dec (bad) rcrb jbe and lods and adc out mov mov (bad) xchg mov inc jp cmp cmp mov adc call jbe mov xor lret stos sbb sbb adc rcr test and sbbl test loope dec mov movsb addr16 push push xchg push and fs and sub adc out ret mov ret mov xor jbe mov pop sbb fmull insb and push and cmpsb and push xor mov fwait and push mov dec in sub inc mov rcll mov and inc leave cwtl lods xchg adc ljmp mov mov dec popa ss xor push adc pop pop xchg fs jae adc (bad) adc repz or cmp or dec pop inc push push adc fsts sbb push data16 push insb dec outsb cwtl roll inc push cltd lea adc fmuls push inc jp xor and mov and test mov xchg fnop fcomps xchg inc call mov xchg shll push adc das dec dec enter test mov notb pop bound pop cltd or dec leave test imul pop rcrl push add ljmp sub lods adc (bad) loopne ljmp jne xor push push arpl inc xor mov mov xchg inc lds inc in jns push and jnp jns sbb push enter into mov imul pop mov dec lret aad test test push sbb hlt arpl loope mov inc inc xor push inc ja and mov and (bad) out roll mov movsl daa mov dec push mov cltd adc cwtl bound xchg adc dec dec sub ret inc daa adc mov cmp and sbb pop sbb dec into lods test sub cs or inc inc inc adc and rcrl pop loop fs cmp inc push cmp in xor xor sub sub and dec test adc ret lret repnz push push outsl arpl xor nop xchg (bad) adc lret dec dec iret sub or out insl ss jns adc mov (bad) jb mov arpl fistl sub into add and popa cmp xor dec pop xor push subl nop rorl sub or mov jecxz mov inc and add mov mov dec inc mov fistpl pop push adc push int3 enter movsl inc and and movsb stos movsl cmp mov nop out pusha enter adc xchg jp mov cmp xchg test mov pop and xchg and mov adc sub mov ror inc or pusha int xchg sbb aad xchg (bad) lock jb inc cmp xor mov pop or test push xchg xchg jb and daa hlt inc (bad) and inc mov dec dec test inc dec (bad) stos daa fs xor sbb xor xchg xchg cltd aam int ror nop int3 repnz aam mov xor cmp mov ja inc sub aaa gs int pop aam sbb add int3 out dec loop cbtw rcl dec mov fs xor cmp xchg fadd int xchg cmovp xchg inc cmp xor gs adc sbb adc rcrb adc fstl rcrb lea inc dec cmp adc into stos nop into ficomp push and stc adc adc or or sub mov (bad) lret and or test pop pop fldenv leave popa sbb push daa or ja lds adc movsl push movsb gs add and and xor and mov and xchg push and push adcl xchg je movsb adc xchg jbe inc gs pushw pop daa adc daa and arpl (bad) adc inc jae push adc cmpsb inc out jae and xchg mov notl inc es cmpsb xchg les inc je add cmc xchg xchg data16 mov andl je xchg arpl xchg mov push adc lds pop push push push arpl adc inc inc mov adc es push addr16 test out xchg notl je cmpsb xor aam push xchg ja adc xchg inc and cmc add add and adc push adc ss mov push and xchg add movsl xor inc test and push mov mov je (bad) xchg push fs push xchg xlat jne adc adc add xchg ja adc adc xor addr16 adc mov xor je xor and adc adc adc je cmc jae xor push adc xchg gs (bad) push adc je and test xor pop jbe xchg jbe adcl adc mov jne mov test push xchg xchg xchg adc movsb xchg and adc mov mov mov les push xchg aad push es es adc mov notb cmpsl add jbe adc push notl pop pop daa and daa push hlt mov ja and movsb adc je adc cmp pop xchg xchg xchg or adc xchg ficomp adc xchg push push adc int3 push lea push fwait popf dec mov sbb ficoml rclb pop or pop pop pushf push or xchg dec mov push pop dec sbb adc push push push (bad) cltd sbb dec push dec sub int3 jmp in bound dec and mov daa lods cmp xchg mov lret or int3 arpl xchg mov or (bad) mov aad rcrl enter fs mov test and lods and (bad) dec ficom adc push adc mov test inc cmp (bad) test or cltd and in pushf cmpsb (bad) pop xchg test in repnz xor stos stos stos xor xchg xchg cltd sbb int3 test push fs push xchg xlat je jp lret jb sbb xor addr16 adc or rcrl sbb inc or add adc scas mov ret loop fs cmc jae xor test push xchg pop xchg rcr sbb dec test scas inc xor addr16 ret and cmpl cmp pop and xor lds test push imul or lret push mov jb xchg sub (bad) fcoms or test insb lods out sub cs dec dec lods jmp dec outsl inc inc xor mov mov mov mov cmp mov mov pushf cmp test xor mov push adc dec cltd adc das dec xchg in out test inc mov ret push push data16 inc mov shll sub fsub mov or push imul push je push je jbe movsb ss dec popa adc loope pop sbb lods test popf add xchg repnz fcoml repnz call lcall fs hlt mov outsl aaa push inc xor push xor stos movsl and and xchg aad adc or dec stos leave dec mov lret (bad) sub test push andl mov mov rcll leave mov dec jp dec push xor xor and stc adc xchg pop mov inc xchg daa stos rorl lods sub push lods push inc outsb das xor and pop and sub mov and sub adc (bad) lcall inc push js inc addr16 jp adc sub loopne test (bad) in das es je push jns mov inc lret lret cmp pop mov arpl xchg test lcall sub dec sub inc and xor sub adc rcr adc (bad) bound movsb in mov sbb sbb cmp (bad) jae adcl (bad) mov inc push arpl jns xor cltd test xor cmpsl sbb (bad) cltd dec adc gs daa pop rorl cmpsb mov dec or call jae jbe xchg push hlt out inc adc inc or subl push cmp dec arpl lcall push in sub mov sbb adc out ss jb adc sub cmp inc inc inc mov mov rcrb sahf adc into add jo xchg in mov test ret stos and cmp xor pop outsl cmp pusha xchg mov flds dec inc out jb sbb test mov inc or and call dec dec dec mov jbe movsb xor push sbb pop mov xor or mov jmp stos or or xchg and xor lods out dec dec push out sub dec push scas sbb mov scas outsb outsl es jns push xor cmp dec jp push dec and jp leave or xchg sbb or inc push test dec enter sub inc pop and mov (bad) (bad) and cli and rcll push mov sub mov pmulhuw pop inc adc insb dec dec movsb jno push inc stc push push aam repnz paddd sahf inc hlt xor xor mov or and enter rorl in pop enter scas repnz mov test les nop xchg mov aaa and data16 in add jbe xchg inc shrb test sub fistpl push adc or or xchg lret sub mov cltd mov mov popa arpl ss imul inc mov rcll out xor adc aad dec xchg adc pop xchg pop test push jne inc mov mov xchg cmpsb (bad) and mov (bad) inc test icebp sbb cld dec lea jne xor adc movsb fistp xchg out xchg je xchg (bad) xor mov mov into mov xor and adc xchg andl pop dec into adc jmp sbb push rcll lcall inc inc jns and push pop int lcall addr16 arpl jo xor push inc push push (bad) fs push and jno cmpsb mov mov pop jmp dec dec and test dec mov inc mov les mov iret or dec mov or sub outsl xor stos and roll xchg push dec movb cmpsb aaa and gs inc or adc push or sbb or mov inc loop dec call push ss xor mov sbb pushf dec mov adc adc test inc pop inc aaa je leave lret cmp ret or dec dec imul xor mov ja xchg rcll outsb leave sub adc and lret mov mov mov ljmp dec call or push inc and cltd stos cmpsb xchg push and and sub xor test ret push inc jbe cwtl push and mov pop rcr sbb enter dec push inc inc dec jae aaa push aaa inc popa imul push dec dec push adc aam fisubl inc adc movsl sbb popa inc dec mov and mov dec test inc arpl icebp xchg adc sub outsl dec jae pop lcall pop push les inc jno cmpsl adc mov inc addl sahf es in gs notb xor xor test push je add aad adc (bad) hlt gs test push adc jbe mov adc xchg xchg adc gs and fs movsl jne test mov and and adc jne test in xchg adc inc mov xor adc xchg gs adc je xor xor adc xchg inc gs xor cmpsb je adc je movsb push je fs je les je add push xchg cmpsb je movsl adc movsb adc es inc xor movsb adc adc adc and test xchg arpl inc xor test push inc adc testb testl add mov and jbe mulb mov test testl pop test hlt push movsl push push in test adc je adc and pop xchg adc ja cmpsb je push fs push push je push mov adc and xchg adc fs daa je aam adc add xchg adc les je adc adc push xchg jbe aad je mov adc inc adc je je jbe push and push adc in xchg cmc test push inc je movsl fs hlt adc pop movsb adc inc push adc addl push adc and adc cmpsl fs push push adc aam jbe adc xchg xchg adc adc divl es test aaa je adc je push adc push cmpsb je push adc test addl push xchg je push adc je xor ss adc adc test and xchg adc push inc jne push rcll cmpsb xor xor adc xor and daa cmpsb inc test adc and adc mov lds ja push and push divl movsl test push ss data16 adc inc je gs inc xlat xchg (bad) aad ss adc adc aad in adc adc data16 ss ss and repz push fs xchg jne jne push xor xor inc mov push and xchg movsl movsl adc add push fs aam movsb and push test push test push inc (bad) je mov push push xor jbe lds test addr16 repnz hlt push ret test test xchg push xchg adc adc adc inc inc and je mov ja movsb xor hlt xchg jae movsb adc adc push je and test movsb fs inc gs gs test test inc arpl inc jne adc jne aad inc xchg ja adc ja (bad) and test inc test inc xchg je xchg movsb push adc adc test hlt push ret test test hlt push xchg adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc hlt adc adc inc adc adc adc es test je ss les je push adc test and adc adc test pop ret xor sub mov lods sbb cmp test xor sbb cmpsb test mov pop pushf sub and cmpsb mov mov sub sub and sub stos xchg mov cmp and lods lds add mov mov push sub stos sub push pop inc inc pop addr16 pop outsl push push addr16 dec inc adc adc xchg push push lcall adc es inc test movsl popa and mov sub ror or adc mov mov sub inc cmovne dec cs dec in dec dec pop or test push jbe and mov cmpsb adc add pop xchg xor add or sub inc inc inc enter ficoml (bad) mov test and ret test out addr16 push ja adc sbb rcrb push push push fwait xchg push push (bad) add iret adc jns push nop push or mov popf test adc scas mov bound idivl push add out arpl je push adc pushf mov in imul push imul lret cltd adc fcomp imul dec sub or out cmovs test xchg xor int3 jb mov test xchg lea mov mov dec push and adc mov cwtl mov mov xor test xchg (bad) aad cmp cmpl stos push jo mov lea push pushf fsts movsb mov mov mov stos mov jo mov xchg scas lods lcall stos mov mov stos mov and sub stos push mov imul inc adc dec inc dec push icebp and and mov pushf sbb mov sub xchg pop adc xchg xchg rclb pop adc xchg mov push push pop sbb aam xchg (bad) push push lea sbb adc push xchg fst pop xchg pop sbb nop xchg lcall into mov lock hlt inc inc inc repz (bad) (bad) jmp dec inc xor jp mov adc and insb call and addr16 push icebp sbb jmp call mov lahf icebp and bound mov in ja das adc adc shrl and mov int3 mov jo xchg mov inc sbb les add and adc inc inc jns aaa inc je hlt xchg add jge in imul dec push dec inc addr16 mov ret adc and push push pushf xchg xchg push push fwait pop ficompl aam push adc adc rcrb xchg ret adc sbb popf test pop cmpsb and js push fs push imul adc divb sub ljmp lods ret cltd inc dec cmp into inc test and movsb cmp lea outsl push and cmp aaa adc adc adc and andl xor push test or push dec sub push inc xor cmp mov push testl ljmp jmp dec dec scas cmp adc and xchg adc jne (bad) je xchg and mov dec call movsl or xchg dec mov dec push hlt test push and and jno mov push cmp stos mov es sahf nop xchg test add cmpsl xchg xor sbb xchg gs (bad) fs (bad) and out (bad) mov mov push faddl mov push in nop ret movsl movsb and mov icebp sbb je and nop int sub scas and adc mov repnz push flds and inc test dec sub jmp mov cs call jne (bad) enter fbld ret test test mov and popf or or data16 roll push and dec pop lcall cltd or scas test push inc mov cmp movsb sbb mov test (bad) das xor sbb rcrl movsl popa dec shl dec bound xor popa mov arpl in cwtl xchg pop js fwait mov stos loop dec xor pop shrb cmp or push loop ja and adc mov mov (bad) (bad) and int3 dec enter popa dec adc mov scas adc popf sahf inc (bad) iret cltd int in inc fisub je inc test sub mov popf xchg inc xchg and mov xor aad lcall push adc dec inc inc dec pop loop push enter out inc inc jae pop mov or jbe movsb jbe jno mov (bad) push mov ja jno sbb adc pop xor push mov dec inc test and inc sub inc shl les aaa sbb and adc add pop loop jo jae insb jo cmp lods icebp and xchg sarl inc icebp and fcomps cld dec int3 (bad) (bad) (bad) (bad) (bad) (bad) push and clc cltd aam lcall ljmp sub sbb or xchg push cmp push push push push push push (bad) or push push push push push push push pop aam pop rclb push push push pop adc rclb push rclb xchg push or push push push push push push push adc adc rclb nop push push push adc rclb push push push push push nop aam rclb aam pop (bad) xchg rcrl (bad) xchg fstp rclb lea rcrb xchg push xchg dec push push xchg sahf sbb cwtl push aad cwtl pop dec pop cwtl xchg aam push (bad) rclb aam rclb dec lcall rcrb (bad) or (bad) pop push xchg adc xchg dec push aad push push push xchg sahf push cltd push adc pop push sbb xchg sbb push xchg rcrb pop push xchg push xchg dec push push xchg sahf push cwtl xchg adc push xchg rcrb sbb xchg push xchg dec push push xchg sahf sbb cwtl push aad cwtl pop dec pop cwtl xchg aam push (bad) rclb aam rclb dec lcall push or pop adc push aad fcoms lcall dec mov pop fcmovnbe nop aam rclb aam pop (bad) xchg rcrl (bad) xchg fstp rclb lea rcrb xchg push xchg dec push push xchg sahf sbb cwtl push aad cwtl pop dec pop cwtl xchg aam push (bad) rclb aam rclb dec lcall xchg push xchg xchg push aad fmul mov fimul sbb pop push push adc sahf dec push adc pop push push push push push push pop rclb aam rclb sbb push xchg xchg xchg xchg adc int3 pop cwtl push rcrl xchg sbb push nop rclb aam rclb aam (bad) push aad cwtl push into sbb push adc sbb pop sbb int3 pop xchg push int3 pop rclb pop adc or push rcrb xchg push xchg xchg push aad fcoms lcall dec mov pop fcmovnbe nop aam rclb aam pop (bad) xchg rcrl push lcall cltd adc pop adc cwtl mov popf xchg push sbb aam lea rcrb xchg push xchg dec push push xchg sahf sbb cwtl push aad cwtl pop dec pop cwtl xchg aam push (bad) rclb aam rclb dec lcall nop rcrb xchg xchg xchg xchg adc adc push xchg sbb adc dec aam push pop push xchg xchg xchg xchg adc int3 pop cwtl push rcrl xchg sbb push nop rclb aam rclb aam (bad) push aad cwtl push into sbb xchg aad rclb pop adc push aad fcoms lcall dec mov pop push dec aam push pop push xchg xchg xchg xchg adc int3 pop cwtl push rcrl xchg sbb push nop rclb aam rclb aam (bad) push rcrb dec pop adc xchg pop into push adc int3 fistpl cltd adc popf adc cwtl (bad) dec mov sbb push xchg rcrb or pop rcrb xchg push xchg dec push push xchg sahf sbb cwtl push aad cwtl pop dec pop cwtl xchg aam push fnop push push push push push push push int pop adc push push push push push push push push push push fcmovbe pop cltd rcrb push push push push push push adc sbb lcall push push push push adc push push sahf nop push push push push push push push push push adc rclb adc push push push push push push push into adc rcrb and call inc inc and (bad) mov nop push dec enter and xor sub push inc inc inc push push mov add mov and inc lods sub mov pushf faddp repnz inc jbe movsl inc add xchg xchg gs and xchg es cmpsb adc data16 pop xchg push cmpsb and and mov cmp cmpsl cmp movsb xor lods test lods pushf stos arpl push cmp xor es cmp ss sbb mov iret pop (bad) (bad) jmp dec and xchg pop adc push aad les mov jmp jg (bad) push mov push (bad) push jne xchg and (bad) enter sub mov sub into inc dec je inc dec dec decl addr16 pop push xor insb imul (bad) (bad) (bad) cld mov dec xor cmp test test mov (bad) jmp push insb bound sub sbb (bad) (bad) dec mov lods out (bad) (bad) (bad) cld mov mov test and or ljmp and imul cld mov out aas cltd lods add movsb and xor dec pop and or xchg or loop push stc sbb pop popf (bad) addr16 aaa je (bad) mov nop popf incb adc aas mov mov push push pop sbb inc pusha (bad) and pop xchg imul adc mov mov addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) and dec xchg imul into pushf and pop test in inc popa ja lret adc fs inc inc xor mov out mov pushf in (bad) xchg insb ljmp insb push sahf (bad) bound push and adc add lret lcall mov loop jns (bad) push xor dec aaa jne insb inc dec insl push outsb inc dec gs cmp ja popa jp popa dec push pop dec xor imul arpl aaa jo gs dec xor dec xor inc bound cmp xor dec bound imul imul je xor dec push push dec inc xor jbe push cmp dec outsl popa jbe bound xor push push dec push jo jae cmp popa xor sub cmp dec insb insb imul pop bound push jp push sub dec adc sbb xchg adc nop xchg push xchg sahf pop aad pop dec sbb adc push xchg pop mov dec aam dec aad fcompl pushf pop fstl nop int3 pop fisttpl mov or cwtl xchg cltd ficomp sahf cltd xchg cwtl into adc adc pushf xchg adc xchg lcall pop sbb pop (bad) (bad) or adc pop sahf adc xchg fistl int popf lret cwtl lcall sbb xchg or push pop int pop pop sbb sbb pop push lcall adc pop pop sbb or push push fcomp sbb popf nop rcll push fcmovnbe push mov lcall int3 xchg xchg sbb lea mov fcmovnu fcmovbe sbb or push pop push rcl cltd ror sbb adc int3 adc sahf sbb aam cwtl (bad) dec fmuls pop push pushf rclb cltd fst xchg push xchg rclb push dec (bad) xchg push fcoms sub inc and adc xor mov aaa xchg xchg push les xor adc fs add lds jne je xchg inc xor cmp sub and sbb xor sub sbb daa cmp cmpsl cmp sbb test mov adc jmp vpmulhw cmp push loope or les sub popa int3 rcrl jns push imul and popa shrl mov or popa inc mov int3 lds aad (bad) rcr dec scas fs push pusha dec das insl addr16 je dec popa xor xor push ss xor jo push dec je inc addr16 sbb sub push inc mov rorb and dec aaa imul dec imul dec jno outsb cmp dec push adc cltd sbb mov pop out ret mov in int3 cwtl mov scas (bad) (bad) test out lret cwtl push mov push push lods and test aaa inc push out xchg mov mov out jecxz inc addr16 jne notb mov jbe test lds sarl sub mov les inc movsb xchg es sbb mov sub aaa mov sub xor cmpsb lods ss mov mov mov mov ss lods or or scas dec sub add xor sbb and cltd (bad) sub in mov mov xchg xor xchg leave rcl mov xor inc xchg repz mov or pushf (bad) mov lret or call enter xchg jae xchg (bad) roll xor adc pushf mov mov pushf stos sub push cltd adc (bad) pop in aam aad into inc and xchg aaa movsb mov push or rcr (bad) fwait push adc int3 push lret loopne ficompl in stos mov les outsb call cmpsb mov lcall pop push inc dec push xor xor imul popa aaa arpl mov cltd sub leave adc rcrl int mov sarb in gs or out in jmpw dec xor and xor mov sub xchg mov jmp loope and sub loope cmp (bad) xor jmp ljmp mov adc mov fwait push lcall and aad hlt test push add cltd test aad mov lret mov pusha xchg fwait cmp dec jg fiaddl and (bad) xor addr16 decl aas les and nop mov call in addr16 jle and adc adc adc adc adc adc mov and adc adc adc adc adc xchg xor adc adc adc adc adc xor xchg les adc adc adc push arpl and adc adc notb xlat cmpsb xchg add add push inc test daa adc xor in les add xor mov mov xor push aam and push push adc repz push repnz ja les cmpsl movsl addr16 xor cmc xor inc in and aam xchg push push data16 test fs addr16 cmpsb inc jae xchg aaa data16 inc mov inc mov les push mov xchg mov mov jne movsb push mov adc push push cmc add test add arpl push (bad) mulb inc push add xor mov data16 daa adc mov inc jne test es arpl xchg push test je (bad) mov push rcll jae aaa push adc lds inc push (bad) out cmpsb adc adc roll ss movsb inc inc addl and jbe gs movsl arpl mov inc out add push div xchg xchg daa push inc (bad) (bad) es xchg xor push les adc adc adc (bad) xor cmpsb aaa movsb xlat movsb xlat movsb xlat movsb xlat mov xchg aaa inc push cmpsb xor add adc inc add push mov xchg xchg push movsl cmpsb inc push push cmc add les mov inc xchg xchg xchg inc and jae push aaa xchg addr16 add xlat inc (bad) (bad) aaa daa jne xchg jecxz daa and fs mov push arpl or in sub mov fistl nop jp add mov mov xor dec in cmpsb imul sub insb scas mov cs sub int jmp xchg cmpsb push push push cmpsb mov mov xor push aam and push jno adc xchg jns adc jns adc xchg cmp jmp mov rcr shll jo into aam fiaddl (bad) insb rolb cmpsb (bad) push int3 enter lock pushf fs data16 fcmove push push call mov pop xor jp dec push sub push pop inc dec inc inc pop jno imul push jo ss cmp data16 push jo insb arpl inc pop arpl imul jb inc pop xor dec inc inc push push pop inc dec push inc push xor sub cmpsb lcall cwtl stos sub mov sub pop dec test and or out call mov mov out lret sub dec inc insb mov xchg sub in out insl or imul stos mov imul xor outsl dec mov int in rcll sub flds inc (bad) cmp in test push cmp dec inc push pop xor addr16 je dec js cmp dec xor dec inc xor js data16 xor je insb jae ja cmp bound jp cmp dec ss cmp xor jnp stos inc xchg sbb jmp in xor loope fsts xchg mov inc aad adc dec xor push fld mov xor jae sub sub cmp mov sub mov adc and push fs push jb jnp sub (bad) fwait xor mov invd out (bad) sub or outsb in dec leave or test test dec or leave in or enter outsb push push sub lods cmpsb (bad) xor cmp stos mov movsb lcall push push xchg push push sbb mov in dec iret or leave sub stos imul in sub push into push call sub or lret sub mov inc test push dec enter dec data16 dec dec daa sub push outsb imul add xchg addr16 cmc push xchg (bad) xchg je push lds pop mov (bad) xchg lret mov sbbl lret xor or sub nop push aas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) and adc or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl (bad) and jb mov sbb xor pop inc (bad) xchg adc lods les loop inc adc adc sub addr16 (bad) cld dec sub decl (bad) (bad) push and nop aam nop mov aam push jno mov test sub call inc out bound inc imul lea inc cld int sub dec mov cmp test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std subl mov mov sbb sbb cld dec out dec cwtl pop sbb cwtl int push popf sbb push push sahf or fs and sbb jg les lret inc pop femms cmpsb dec mov decl dec int3 icebp and in les and sub sbb bound inc and dec mov mov cmpsb rcll mov enter dec jmp and lea fstl pop repz or les and dec cwtl sarb bound loope dec scas xor cmp and mov (bad) xchg mov and stc fwait dec sbb aad mov push inc xchg mov sub inc out test xor mov inc adc into dec push test add push pop inc bound push adc adc jl es xor (bad) cld lea sub sbb sbb mov or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) and clc mov clc xchg push and xor dec fmull insb inc and pop fwait mov inc hlt (bad) adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) and lock mov inc push cmp and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc nop push nop push push push mov aas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jns loop inc mov add lea movntps sub dec dec fs imul pop adc push pop sbb mov into cmp and sub xor or jp mov (bad) mov (bad) stos out test and push lcall or mov cld enter in js push jg sbb inc cmpsb je sbb inc or push popa push inc jne inc mov ret sbb dec call icebp and out adc aas adc movsb dec cs sbb mov mov dec sub mov adc push popf rcrb dec dec stc adc in ja push test jmp mov insb call adc icebp and loop jp dec das adc sub mov repnz mov sub xchg popf (bad) decl sbb int3 cld dec dec pop icebp sub (bad) (bad) (bad) call adc mov clc nop popf xor sub test clc xchg sbb mov inc xor (bad) (bad) (bad) (bad) clc xchg cltd (bad) (bad) call push adc iret (bad) jmp inc insl clc nop nop jg or call ja inc js arpl dec insb bound jae push inc xor js arpl imul push inc push je pop dec je insb push insl cmp xor dec push dec jbe push jo arpl xor push imul insb insl pop pop dec xor push jns arpl cltd mov jb dec adc rcrl push stos push dec mov dec or or pop push dec xor jp imul lret stos mov mov xchg inc and adc mov push pop push xchg int sbb push pop fstps jle inc adc movsb xchg jb mov movsb jp sbb lret inc adcb int3 mov mov inc call xor addr16 pop js push inc xor cltd and inc or mov scas mov mov xchg int3 and inc es or (bad) adc mov inc mov jnp mov rcll sbb cmp sahf pop mov mov mov push lcall es int3 xchg fadd mov fsts (bad) xor dec add adc int3 xchg mov call nop pushf push inc mov dec sbb mov dec js xchg and mov push xchg sahf movsb pop insl inc jae stos dec adcl loop js lods (bad) movsb mov fsubs aad test push icebp sbb (bad) cld dec cmovb and sub insl ret mov lods dec out adc xor xchg sub xchg mov repz jb sub test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld dec mov jge mov movsb mov mov push xorl and mov aas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl and xchg pop adc mov jl dec dec test je inc inc adc lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std adc (bad) push push aaa mov movsb sub mov mov and lods mov cmp es rcll pushf rcrl ficomp xchg aam pop push pop pop sahf xchg rcl dec sbb mov stos es mov leave scas or dec into jmp dec dec dec sub or dec test dec imul dec insl test das dec ljmp lea jmp stos lea call ret xchg cmc xchg xchg push cmpsl cmpsb (bad) movsb mulb jae push cmpsb out mulb mov jns mov xchg stos jnp pop mov enter push jmp in test adc leave call loopne (bad) lea add aad sarl lcall fsubr push mov push mov mov mov aam mov jne xchg leave jp mov imul lcall lods sarb fdivrl and (bad) out test ja inc inc popa dec inc and and jle inc test push sub ficomp rcll push xchg pop sbb push sbb dec das dec out test or push or leave (bad) out sub cmpsb sub scas or xchg mov in sub out int3 push or inc adcl and inc xchg adc mov and out mov mov sub jae jns xor and cmpl jnp sub jnp mov jp mov cmp mov jnp sub jnp or jnp cltd mov mov mov xchg jnp sbb jnp sbb jnp mov jns into xchg out es mov jae inc ss cmp test xor xchg dec push aad push xchg push xchg or or and dec xor push xchg xor push cmp push xor push xor push imul cmp inc lods int3 lods gs aad fs fs push sbb push insl inc call fs push jp jp lret pushf mov inc loop cmc cwtl nop push or push hlt sbbl push stos mov push mov stos dec out movsb ja (bad) and test sbb loopne sub and arpl cltd sub xor cwtl mov aam pusha lcall dec cmp cmpsl sub sub xchg mov inc jp pop dec inc dec mov pushf sbb cmp aaa lcall xor cmp cmc xor fs mov arpl mov xchg push xrelease jno xor insb mov data16 daa cmpsl test cmp push xor mov xchg sbb lret aam mov adc bound jne pop mov out test pop xchg or mov adc lret push dec adc fwait (bad) jae dec scas inc push dec les cwtl xchg dec pop sbb int3 push push sbb test (bad) xor shrl jp int3 lea jmp adc lea ljmp cmc push rcll inc (bad) je test dec jb (bad) ret mov push inc xchg inc fsts rorl push movb jns push dec jae and pop (bad) adc xor pop lea stos pop lret xchg sub aaa outsl das and or xlat je sbb push cmpl jp mov adc stos mov test iret dec test lods fs dec dec clc xchg xchg cmp inc jb mov jl int push mov jb cmp and push push mov stos or sbb dec js xor inc jp jl or xor sbb lret pop dec les dec insb movsb pushf sbb fistl dec adc pop into or push pushf dec jo pop aad mov dec or cmp push dec pop xchg or add jb daa sbb push or xor enter mov xor sub adc pop dec dec or mov xlat push inc cwtl xchg xchg mov sub adc les outsl xor pop push inc cmp daa sbb cmpsl mov xor sub pushf sbb and sbb sub lcall lcall mov fwait es mov mov and mov mov aaa mov cmpsb stos cmp sub mov movsb and ss lcall sub sbb mov sbb mov mov mov sub cmpsl sbb pushf mov mov and test sub and es movsb mov daa and cwtl cmp sub sbb sbb and sbb and mov cmpsb and mov lods sub mov mov sbb lcall xor cmpsl cmp lods cmpsl mov xor cmpsl movsl and daa cmpsb xor cmpsl cmpsl mov pushf cmpsl stos test test stos and cmpsl stos cmp cmpsl mov lcall cmp daa mov cmp cmpsl mov cmp aaa mov cmpsb pushf cmp cmp sbb xor and sub pop movsb mov sbb sbb xchg stos cmp and mov adc xchg mov sbb xchg cwtl and mov mov mov sub movsb sub mov cmpsb sbb cmpsb mov xchg cmpsb mov cmp and cmpsb mov mov cmpsb mov mov cmpsb mov mov es mov es mov es mov es mov cmpsb mov mov cmpsb mov and mov cmpsb mov mov es cmpsb mov daa mov cmp cmpsl pushf lods fwait cltd mov mov fwait mov sbb xchg mov movsl xor mov xor and pushf xor cmp test sub cmp sub sbb and sub sbb sub cmpsb test lods pushf mov sbb mov sbb test xor xor pushf mov xor xor mov mov mov sbb sub mov sbb cmp mov mov adc xchg mov cmp mov mov mov and test movsb pushf cmp mov and sub sbb cmp and mov cmp sub cmpsb mov cmp mov xor cmpsb mov mov cmpsb mov lods es sub cmpsl and cwtl xor sub cmpsl sub mov xor and xor xor and mov mov sbb mov cmp lcall cmp daa test xor mov es and cmp lcall sbb and mov aaa mov mov sbb cmp test xor sub sbb mov sbb sub sub sub cwtl adc sub mov mov cwtl and mov mov mov and cmpsl cwtl cmp test and cmp cmpsl and cwtl sbb sub and mov xor xor test sbb movsb cmpsl sbb cltd mov pop lods cltd mov mov xor cmpsl movsb xor cmpsl cmpsb mov sbb cmp cmpsl mov fwait mov mov cmp sub stos pushf cmpsb mov mov stos mov mov es stos pushf mov ss mov adc mov mov sub cmpsl lods xor mov mov es mov cmpsl and cwtl xor sub daa sbb cltd mov xor mov pop lcall stos mov xor sub stos daa mov cmp cmp mov cmp mov and pushf sub and cmp sbb and cmp xor test mov sbb mov adc xchg mov cmp test mov and lcall mov cmpsb pushf lcall xor cwtl xchg mov xor mov and mov sbb cmp lcall xor stos cmpsl test sub stos xor cmpsl mov lcall xor sub pushf stos mov sub mov sbb test pushf adc sub mov and xor cmp test xor movsl test mov mov adc xchg pushf and fwait test mov and mov sbb mov mov mov cmpsb mov mov es cmp mov and mov mov es daa and mov sub and sub sub sbb aaa mov and cmpsl xor cwtl cltd mov es xchg mov mov xor cltd and aaa and and cltd daa cmp cltd pop mov lods cltd mov sbb cltd fwait sub mov cmpsl stos lcall cmp cmpsl mov fwait xor stos fwait pop mov lods daa mov cmp and sub test mov xor sbb mov cmp cwtl sub cmp test mov mov mov and cmpsb mov mov stos xor test mov and movsb mov mov movsl lods mov cmpsb cmpsb stos mov cmpsl sbb lcall mov cmpsb mov mov cmpsb test daa and mov cmp cmp es cmpsb xchg mov and mov xor sub add inc xor xchg dec adc cltd fsts ficompl or push aam or rcl xchg dec push lcall pop adc fcoms push dec xchg push fwait into adc (bad) cltd lcall xchg into sub out cs lods dec call jmp or pop or daa sub xchg sub xchg or dec sub lret and sub sub inc pop stos adc push mov rcll ficom push adc push aam adc push rcrb xchg adc xchg xchg pop int3 push lret leave lods pushw dec dec mov stos mov imul mov sub imul mov outsb sub bound inc cmp cmpsl cmp xor push sahf xchg mov mov hlt sahf cwtl into push sahf sahf and movsb bound mov jp or out sub ss out push xchg das dec dec test sub xchg cmpsl xchg and xchg cmpsl movsl xchg add addl adc addl xchg mov adc inc mov jae mov sub and add inc adc popf and aam mov nop mov out xchg cwtl push dec bound js inc dec gs gs sbb sub pop stos and mov mov mov es push push xchg xchg adc pop push aad cltd xchg pop pop ficomp xchg mov rorl scas sub leave scas push das dec mov es cmpsb mov rcr int pop pushf xchg push into push dec int3 rcrl int ficompl int lcall push mov sbb addl and cmp adc test mov xchg xchg pop mov mov call dec cmpsl cs inc push and or xchg dec xchg dec push es xor dec and lods xchg mov adc xchg mov cmp or es inc dec inc inc ja or test ss aaa ja and adc mov dec or or loope xchg stos lcall addr16 rclb imul adc rcrl xchg mov and xor sub push sub jae xchg add test hlt out repz scas es cmp cltd xchg add imul cltd aad pusha push hlt fmul cltd mov cmp lods sub les cmpl mov or or out insl inc sub or cmpsl and or inc lods push test insb dec inc enter and dec push cmpsb add lret and mov or stos push call push sub dec dec mov mov dec stos dec das sub out dec out dec lods jmp or out cmovnp dec (bad) dec sub int3 in pushw dec mov push test outsb dec dec cmpsl or jmp push call lea jmp outsl dec dec test lret imul dec insl or daa push ljmp cmpsl sub lods sub lret addr16 inc dec stos or cmpsl outsl inc imul in lret or call push sub mov leave stos dec outsl push int or das dec lea lods imul jmp or dec cmpsb insb das dec stos mov enter mov mov test stos mov xchg out pop push into sub push dec leave out int3 out mov es or or or daa push dec dec dec stos or xchg mov sub dec or daa sub push daa add mov lods in or mov sub push sub sub test mov or mov imul mov out dec test dec push or outsl dec (bad) cs call or out call dec ljmp lea stos dec dec lods jmp scas dec es out addr16 mov sub stos or daa sub inc dec push addr16 mov xchg ljmp out or xchg in popl push lods gs out inc outsl dec add test ljmp mov sub sub call inc push out dec mov push sub out pop sub movaps lods out sub scas enter mov mov mov jmp das dec cs int dec dec leave push xchg lret or mov imul dec or and int es outsl dec dec jmp mov inc call stos outsl or cs sub ljmp jmp out dec dec in imul mov (bad) jmp out dec cmpsb jmp mov or (bad) or sub outsb sub lret test inc lods mov xchg or insb in iret inc out push into gs push call insl call lods dec sub test outsb jmp test outsb ljmp cs mov outsb in push imul test sub out dec mov out mov or lods imul sub push outsl dec lods dec into imul or sub dec sub or mov lret dec or cmpsb dec or push push insb test into dec in xchg lds cs in out (bad) dec sub or dec stos or or xchg or xchg push dec movsl insl or dec or push push add or call outsb call dec dec dec test sub popl sub scas sub mov cmpsb leave scas dec push sub imul mov sub sub push dec dec lea sub push sub stos es dec or or cmpsb dec dec mov mov mov mov sub mov lea or stos mov mov dec lea cmpsb lea jmp outsl dec or in jmp int mov cmpsb xchg ljmp jmp out data16 dec mov jmp or pop or xchg ljmp dec dec or cs mov sub sub dec sub sub sub in out dec push test dec mov lods out out dec dec lea insl dec sub dec outsl dec enter scas out data16 dec leave enter dec mov leave pop push or leave insl out call in data16 jmp dec cmpsb or dec movsw insl dec push lret wbinvd out dec es out dec dec imul mov or (bad) outsb addr16 push dec sub sub sub addr16 sub inc dec lret daa sub or imul gs mov and dec push imul call sub sub sub or dec dec mov dec lea in out call stos dec scas or lods dec out push ljmp sub lods out sub dec inc imul jmp into or mov leave dec cmpsb add lret sub mov sub sub dec leave int dec (bad) dec inc or or sub mov stos mov or or daa cs inc push or pop es ljmp mov or lret in sub outsb lea sub lods gs (bad) add push dec in or in ljmp call sub sub dec mov or dec in or or lods xchg mov mov sub pop ucomiss dec scas push mov scas mov test xchg lods push cmovnp call dec (bad) or dec enter enter scas dec leavew leave test pop or in data16 mov imul dec out int3 imul leave int es sub int inc out dec es mov lret jmp out dec lret push imul enter ljmp leave ljmp test dec lea test enter out sub cmpsb cmpsb out dec (bad) leave in movl test das dec out or daa push leave lret jmp mov lretw sub es enter in in out dec dec sub call dec iretw or cmpsb (bad) outsl dec dec or lret insl dec jmp jmp out dec es es dec xchg out es scas dec scas dec out push out dec vpxor cmpsl or dec out or dec or push dec (bad) stos or cmpsl or lods out lret stos or xchg mov movsl push inc leave sub test or test test dec sub sub or or dec sub stos push stos sub mov or or mov or mov leave push xchg lret or scas dec lret inc xchg sub dec stos mov inc or inc ljmp insb (bad) dec stos mov jmp outsb lret imul dec sub mov dec mov in sub cmpsb push push out enter out dec cmpsb (bad) in dec dec sub sub or dec pop sub xchg or dec lret xchg or sub xchg push scas sub push cs inc push sub xchg imul lods mov lea outsl inc mov cmova ljmp and stos push jmp sub sub test call dec scas call test cs scas out dec lea sub scas or mov test dec mov or mov scas dec das sub imul dec lea or movb leave outsb pushw stos mov push call sub sub cmpsb leave lret sub mov imul mov sub stos es test iret dec dec imul dec jmpw es dec lea or dec mov mov call cs dec es das dec cmpsb jmp ljmp int3 lods dec das or imul lret or dec out or push in test lods or ljmp out or push insl dec jmp sub xchg or pop sub inc es or sub or out or stos movsl insb dec xchg outsb push outsb in or call inc or sub sub stos or imul dec pop sub in data16 in dec stos dec (bad) int3 data16 insl dec cmpsb jmp das dec int into ljmp call lea test ljmp mov imul ljmp sub push lret or in mov lret sub or int mov into (bad) dec ljmp mov or xchg sub inc lret or push sub test push enter mov scas or outsb imul mov es dec das dec or popl subl fimull dec fimul aam lea sbb fcomps adc fcmovnu lea xchg in scas inc outsb mov or add notl je je adc pop andl cmp fstl push sbb xor pushf loope popf jmp push ror sub sub dec inc xchg aam movsl xchg and out xor jecxz push ss cmpsb push xchg jecxz push aaa daa cmpsb push test cmc xchg xor inc jne hlt xor inc mov test jae mov movsb push hlt (bad) mov gs and jne je cmpsl ss xchg xorl lds cmp mov push call int3 in dec stos or jae xor jns xor std xor lock aam cwtl lcall rcrb hlt mov xor push push dec xor or sub sbb inc xchg ljmp sub out lods or push into sub push dec leave out int3 out daa aaa inc repz ja add roll add xchg xchg cmpsl cmpsl push add inc pop adc sbb mov sbb (bad) orl fcoml (bad) and sbb xor adc loope add sbb jmp cmp test popa inc dec jo xor mov fwait mov sbb test inc jne cmc xor bound bound rcll jp and pusha (bad) jo test nop mov (bad) ret sub lea loopne dec adc mov in mov adc inc sub in popl bound mov into adc int mov scas lcall (bad) inc sbb fimul push adc or push pop xchg xchg xchg pop pop ficomp xchg fcoml pop xchg pop push aad or mov loop xor mov sub sbb daa adc dec adc xchg dec dec ficom dec dec ficoml leave outsl dec dec jmp mov inc pop pop dec xor nop pushf int3 int3 mov sahf stos push pop ja inc push arpl jae arpl adc cmp push aam dec add js dec call mov stos mov inc mov jo out push insb hlt outsb pusha mov notl mov fs inc arpl or push or xchg push or xor adc test sub movsl inc inc fs sbb inc xor dec js push push and jae imul pop adc pop push or outsb leave lret inc pop je test pusha lretw in xor sub dec ja cmp lret dec jns push xchg push adc (bad) test loopne inc xchg sbb fs nop aad inc rorb ja inc jp dec xor dec and sub loopne adc mov mov cmpsb les dec cmp rorl fiadd sub cmpsl and cwtl sbb les dec push xor push xor pop push dec mov xchg bound dec xor xor fs jns xor push imul mov insb js pop push xor adc cmp push leave cltd cmp in and xor mov aad (bad) adc in pop or xchg sbb nop leave or into call xchg and les mov int3 fsubrp hlt hlt mov mov sub dec dec xor mov cmpl push or inc cmp rcll stos test or cwtl daa mov lcall fmul wbinvd out dec es (bad) call cmp sub xchg push adc push push or mov and mov and bound insb les xor jp or dec xor ss fmull jb xor loopne out dec lods inc ja inc xor ja push push pop imul aas int3 ret nop pushf xchg xor mov or dec leave int dec (bad) dec inc or or adc fisttpl or lds lcall mov inc mov subl sbb mov arpl sbb loop dec les fs je adc cltd adc jp push daa les mov scas adc mov shlb jno cmp rcl or mov enter push ss dec inc sbb sub sub dec es ss arpl and jb pop lcall daa cmp jb sub sub inc xchg inc cmc or stos in dec mov inc (bad) je adc cmpsl mov fmul sahf lret outsb hlt fsubrl jo test out xchg hlt fsubp sahf (bad) jo pushf test outsb sahf (bad) mov loopne sahf fcom insb mov loopne sahf faddl xchg aam stos sahf loopne insb fimul out lock mov data16 in sahf in stos insb push aam pushf sahf lock outsb xchg hlt out sahf hlt xchg outsb mov bound jb push outsb (bad) ljmp hlt in pop sahf lock mov jo aam test mov mov test stos mov test ljmp data16 hlt insb xchg mov mov lcall (bad) (bad) nop stos out into hlt mov lcall sahf lcall mov rorb lret xchg pusha mov (bad) pusha mov movsb loop nop push enter pusha xchg stos in mov bound lods (bad) pushf fsub fs push pushf out fs mov ficomp mov pushf fs enterw pushf outsb mov in test (bad) sahf nop xchg push sahf mov fdivs data16 outsb sahf mov insb fmull lcall (bad) (bad) jo hlt lock xchg push (bad) mov aam fsubl aam mov movsb pusha jb mov mov aam (bad) mov hlt data16 test aam fsubrs fsubs hlt push pop nop hlt jo mov aam shlb aam lret xchg pop (bad) (bad) (bad) (bad) mov (bad) (bad) (bad) (bad) test jb mov call (bad) aam fcomps test ficomp mov test mov in in repnz hlt (bad) mov hlt cwtl aam nop pushf mov (bad) aam sahf pushf xchg out ljmp pusha outsb mov bound stos into (bad) mov (bad) in test mov insb test push cmpsb out pushf hlt mov pushf fmul fs aam outsb pushf bound fcomps lret insb mov fcomps shl sahf xchg (bad) push hlt fisubrl int3 out mov mov loop sahf out insb insb test nop sahf hlt fisubr mov rcrb mov rcrb hlt in pushf sahf lock jo aam cwtl mov mov mov aam push mov jb test fisubl aam jo fisubrl data16 mov out push pusha aam xchg mov (bad) (bad) rcl nop test test xchg mov pushf into (bad) data16 aam mov insb (bad) data16 lret jo data16 int3 (bad) pushf out mov bound test stos sahf cwtl mov out sahf mov (bad) cwtl sahf cmpsb stos push hlt fcomps mov fdivp sahf (bad) mov lods sahf fsubr insb mov loop sahf loopne insb fimul mov fisubr insb test cmpsb mov test jb fsubrs mov (bad) (bad) (bad) (bad) mov mov (bad) mov mov loopne xchg out in repnz mov repnz mov hlt mov bound int3 hlt sahf loopne jb hlt jo lcall test test mov lods xchg mov pushf lret insb aam out pushf int3 (bad) bound aam movsb aam sahf pushf fcomps lock loopne fs les hlt les into stos data16 test mov enter xchg xchg mov fcomps aam aam mov enter sahf xchg mov aam lret (bad) push sahf stos mov aam ret in hlt fmul sahf mov loopne sahf fidivl cwtl sahf loopne insb fdiv loop sahf out insb insb aam lret xchg outsb sahf test ret mov lret int3 sahf insb out in hlt in lods sahf push mov test call data16 outsb mov aam data16 hlt enterw push sahf aam stos mov mov mov mov jo pop jo jo (bad) (bad) test (bad) mov (bad) (bad) xchg hlt test int3 mov out mov mov lock nop hlt lcall ljmp xchg (bad) lcall lret lcall pushf lcall stos xchg bound scas stos (bad) call (bad) out (bad) hlt mov pushf lret jo stos mov mov pushf (bad) jo pushf mov mov mov pushf fidivl lret nop pushf loopne fs ret (bad) mov mov enter push scas pushf push loopne sahf fsubp insb fsubrs mov lret stos outsb stos aam mov bound data16 aam lock test fsubl aam push mov pusha mov movsb push outsb mov aam enter push outsb hlt jo (bad) (bad) xchg (bad) (bad) (bad) (bad) mov test lcall scas lcall (bad) lcall repnz xchg lcall push lcall ficomp movsb mov mov hlt pushf mov (bad) pushf (bad) fisub aam (bad) pushf loopne fs aam data16 fisub mov stos pushf push ljmpw jb pop test pusha sahf mov loopne mov int3 hlt rorb (bad) rcr sahf cwtl (bad) push sahf sahf jo pop mov movsb sahf movsb into push mov hlt sahf stos (bad) push aam movsb sahf mov push aam pop sahf lret movsb mov lock in insb (bad) aam mov test in sahf insb stos outsb in ljmp test repnz mov mov hlt fs lcall lret pop mov mov mov mov aam mov out push push lock pop cwtl mov mov test (bad) mov aam insb mov aam (bad) (bad) (bad) mov (bad) xchg in xchg pushf test push mov mov mov stos aam mov mov out mov test lcall fs stos lcall fcomps mov push aam lcall pop mov out (bad) (bad) (bad) xchg (bad) test (bad) (bad) mov aam mov xchg sahf hlt mov xchg (bad) lcall (bad) ficomp or push ficompl adc dec or rcr rorl adc sbb xchg push sbb push fistl push rcr fxch lcall int rcrl or cmpsb (bad) outsl dec dec or enter hlt in test mov adc int3 push dec (bad) lcall scas dec scas dec out push out dec (bad) roll push xor add mov and movsb push add push test add xchg gs pop push push adc inc inc xor push sub (bad) mov subl add add jmp rcr lods jmp adc gs push sub sbb sbb cmp rol mov inc push rorl rol in pop add xchg push test rcll mov mov leave mov xchg jmp data16 test (bad) sahf nop xchg push sahf mov fdivs data16 outsb sahf mov insb fmull arpl and cmp and loope push in inc xor sub call test inc adc cmp movsb mov xor test bound adc inc xchg inc mov xchg notb jl sub aaa inc dec and and stos and movsb mov and out (bad) test ficomp mov pushf es mov es xchg rorl lcall movsl and xor sub push xor mov bound xor push push dec popa cmp inc sub cmpsl xor sbb imul bound fcomps push dec ss xor push data16 dec das inc xor mov mov int3 aam or in test push cmpsl pop test xor push xor jbe inc push subl mov adc ficompl into push xchg or push adc add inc es ss xchg xor sbb rorl lret (bad) rcl sbb push mov inc adc stos rolb mov pop sub in push pop mov rorl cltd lcall dec inc dec xor push imul push mov adc aam mov outsl jns mov mov adc dec mov push rorl or jno mov sub imul rcrb and in adc inc xor leave leave test fs in mov dec add xor mov mov (bad) fldcw lods lds movsl movsb stc xchg push xchg sahf adc xor adc jge sahf test mov test push jb and bound mov push jp inc xchg push mov shl test lods rorb pop push push fmul and (bad) xchg daa adc sbb mov je dec xor int3 fstpl lods sahf push mov test call addr16 xor in call imul xchg mov inc push adc popa inc loope mov jno and or dec jmp inc ja mov lcall push (bad) cli sub add mov inc xchg dec cmpsb add das dec dec mov and bound scas stos (bad) call (bad) out and mov xor sub rcll int3 mov rorl inc loop outsl inc sbb mov sbb push push rorl (bad) dec jns shrl xor pushf and cmp inc mov and push pop les aad inc lret mov nop sahf push push (bad) mov mov dec push xor xor es mov mov in test pop rcll mov mov adc xchg rolb and mov outsl xor gs adc sbb dec adc xor cwtl rcl test (bad) or jp cmp push and data16 cmc cmpsb xor xchg cmpsl mov loopne mov mov cmpsb repnz cmp mov or xor sbb loop push enter rorb push outsb cmp adc adc js pop les cmp add mov les pop je inc pop and xor mov pop jno sub inc insl enter nop nop push inc push dec push addr16 inc dec insb dec outsb xor xchg ss inc aad adc (bad) xchg and dec es and xor cmpsl mov lcall mov test sub mov mov test mov cmpsb lcall daa xor cmpsl aaa and cmpsl cmp xor cmpsl cmpsl sub xor cmp mov fwait mov fwait movsb fwait mov and pushf cmp mov cwtl and and daa and lcall daa and and sub mov xor daa and cmp and cwtl mov and mov movsl xor mov mov mov and cmp and cmp mov movsb cmpsb mov es mov daa sub cwtl mov cmp cltd mov lods es cmpsb pushf cmp cmpsl and xor mov sbb sbb sub daa and sub mov and mov xor cwtl mov xor sbb ss xor aaa cltd sbb xor cmpsl cmp and xor mov xor cltd and adc sub lcall test lcall mov mov ss mov sbb test cmp cmpsl mov cmp sbb pushf sbb cwtl pushf sbb lcall cmpsl fwait lcall pushf movsb fwait cltd mov mov mov and aaa pushf sub lcall and pushf xor cmp test mov mov es cmp mov sbb cmp sbb sub pushf mov sub sbb stos sbb mov sbb cmp cmp xor lcall sbb sub xor test cmp adc sub sbb sub adc xchg mov cmp mov mov mov and mov and cmpsb stos cmpsb mov cmpsb mov mov es and es mov es mov cmpsb mov mov es es mov mov cmpsb cltd cmp es cmpsb fwait cmpsb mov cmpsb xchg mov sbb mov sub mov lods cwtl sub mov xor mov mov and mov mov mov and xor mov mov sbb xchg mov pop mov test and and cmpsl and cwtl and sub and mov daa mov mov and and sub and xor mov and daa and cwtl xor and cmpsl and sub daa cmp daa sub cwtl and mov mov cmpsb mov mov mov mov cmp mov mov cmpsb and mov cmpsl mov and cmpsl cwtl cmp cmpsl cwtl mov lods and xor mov mov sbb cltd mov mov mov cmp mov cmp mov fwait cmp daa fwait mov mov pushf sub cmpsl pushf mov sub pushf mov xor fwait mov test xchg mov mov movsb test mov stos test xor and mov daa and lcall cmp test mov sub cmp test sub and aaa test mov sbb and pushf xor cmp pushf and and cmpsb mov es mov mov cmp cmpsl mov mov mov and test mov and cmp sub daa and mov mov sub mov xor cwtl lcall cwtl mov xor cltd and xor sub cltd sub aaa xor cmpsl cmp cltd and xor daa mov test sub xor cmpsl movsl mov cmpsl cmpsl mov and mov mov mov mov mov lcall test and mov fwait xor mov cmp cmp mov cmp and mov test cltd sub cmpsl cltd test mov cmp mov cmp and cmpsl pushf mov xchg mov test mov cmp mov xor mov xor sub pushf mov sbb xor mov xor pushf mov xor sbb mov sbb cmp xchg mov cmp xchg mov cmp sbb test test mov adc xchg mov sbb xchg xchg mov mov mov mov mov and cmpsb mov and mov cmpsb mov xor mov sub stos mov xor and cmp mov mov cmpsb mov mov cmpsb mov mov cmpsb mov mov cmpsb mov sub mov test mov mov mov and mov pushf and cmpsb xchg test and mov sub mov sub daa es sbb sub cmpsl sub cwtl and mov pushf daa sub cmp and mov xor and and cmpsl xor cwtl movsb and cmpsl xor sub cltd xor xor cmp mov sbb xor daa cltd push cwtl push push fcomps xchg xchg fcomp int xchg or push adc push push push adc push insb movsb adc aad push xchg movsb mov rcll movsl daa movsl pop add xor pop xchg inc addr16 in es xchg je cmpsb xor and fs hlt in inc xchg inc (bad) and jne je cmpsl push xor je ja cmpsl inc xchg add mov pop cmpsl jae and mov enter dec test das dec enter scas dec out dec sub out dec mov push inc dec es xor daa and cmp and cwtl mov and nop push lea xchg pop rcrl aad fsts pop ficomp int3 xchg pop int dec adc sbb pop xchg pop dec ficoml nop mov push push push inc cmp es xchg test jo loopne sahf lcallw dec dec dec inc inc xor push popa dec dec pop xor inc daa daa sbb sbb sub daa and rcll adc into sub data16 pop push dec dec mov int xor and xchg dec xchg xchg sbb rorl push adc lds push out outsl dec push leave jmp lea ljmp mov in lods or push scas dec dec (bad) sub addr16 lret cmovle into dec mov (bad) (bad) dec ljmp mov cmpsl inc je inc jae inc xchg jbe dec cmp mov mov mov and aaa pushf sub lcall jo mov xchg xchg test ret mov imul (bad) mov add (bad) or lret pop inc dec push in push rcl jo cmpsb test test lods pusha jb test jb mov push pop jae inc sbb test test mov sub inc leave lods lods sbb mov hlt outsb hlt mov sub int3 aam adc xchg or adc les push ja and adc lret repz adc adc push adc repnz dec insl jae fs dec inc dec outsl ja and imul (bad) hlt mov lcall int dec ljmp imul jp popa adc xchg xor pushf xchg and test xor mov mov xor test mov cmpsb loop pop xchg and out mov sub adc cmp mov mov pushf in inc push xor cmpsb mov call or inc adc mov shlb ja int cmp imul (bad) cmp jo popa adc mov loop xor ljmp jns mov jne (bad) ljmp jns dec leave mov mov imul (bad) inc mov arpl cmp inc and mov adc aam enter fbld sbb roll mov sub adc es je ss push adc fs inc dec pop xchg pop lea xchg imul pushf enter push xchg push fwait bound (bad) mov jae xor hlt push adc sbb movsb xor sub call repz lcall (bad) cli and adc fiaddl jae cmp leave and cltd adc inc je stc sbb push jno lods (bad) in (bad) out repnz cmp loop les es sbb data16 inc push sub mov lods inc lret and adc jo daa jb sbb test test cwtl lods lea pushf mov cmp dec and les adc push enter dec out loop inc adc (bad) lock push aad pop andl dec out je shlb inc stos imul rcll inc xchg out mov mov lds sub decl aas loop dec enter lcall in adc push ja pop and mov mov jmp cmpsl xor test cmp and je xor mov arpl inc xor xor daa sbb dec out addr16 ja popf inc cmp hlt imul imul adc data16 cmc adc sbb insl ja (bad) sahf lret adc nop dec mov out sahf aam insb inc push mov fcomps jb (bad) out mov mov addr16 cld (bad) sub or and jp les nop lds pushf xchg xor mov loop ja and movsb out mov adc (bad) mov dec pushl jb or mov sbb jae mov xchg lea or sub fdivl mov cmp daa mov mov lods cmp adc fnstsw adc loope roll rcr push adc push cmp pushf frstor rcrl test ror cmp add xchg adc sarl aad cmp pushf fnstsw flds adc int fldl cmp (bad) in aad inc and rcll adc add adc inc adc aad adc aad adc aad adc aad adc aad adc aad adc aad adc aad adc aad adc fsts mov aad adc (bad) adc gs adc add or add (bad) xor adc fnstsw popa inc lds gs mov gs lods adc cmp lds test adc cmp popa and leave adc cmp pusha sarl inc add or mov gs cmp aad flds in fnsave adc fldl inc mov inc int mov inc fldl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add daa mov cmp cmpsl mov and movsb cmp cmpsl cwtl cltd popa adc popf cmp int3 sub fs je cltd popf adc inc cmp int mov jne dec aaa and in aad inc and rcll adc add lods sarl adc aad adc aad adc aad adc ret add xorl mov adc mov ss mov int mov cmp enter es cmc adc fs adc (bad) hlt inc test and mov into inc aam adc inc daa je test push push inc arpl inc je cmpsl jae mov jne in jae sub out pushf les inc test xor sub daa sub test xor cltd and sub cmpsl xor ljmp pop movsl adc sbb test mov inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) and adc sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add test paddb jne mov movsl sub dec inc push xchg xchg add push lods sub cltd test mov or adcl cs push and push push mov sbb push mov sub dec adc sub push xchg xlat loopne add and inc leave add xor cmpsl movsl jo lds xchg mov psrld lret push push outsl and cli dec in cwtl int mov push xchg sub and arpl dec push outsl sub cmp sub xchg movsl sub xchg movsl sub xchg movsb push sub mov arpl xor xchg xchg or push movsb (bad) mov xchg movsl sub xchg movsl sub sub in clc lods leave sub sub xchg sbbl and sub xchg movsb xchg dec gs xchg in dec dec fs push xchg in dec push xchg adc xchg movsl sub fucom sub xchg movsl sub xchg movsl sub xchg pusha test jae repnz movsl sub xchg movsl sub xchg movsl jmp sub xchg movsl dec pusha mov sbb sub dec and lret fbstp hlt xor mov movsl sub jae dec push dec es popf in dec push xchg lods sub sub mov xor xchg movsl sub and movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg orb add movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub or sbbl mov cmp (bad) repnz inc adc push pop movsb inc sub mov fisttpll mov push pop movsl inc repnz arpl (bad) rcl or int3 sub xchg shl xor push push push or lcall movsl pop imul push nop jb sbb cmpl dec mov cmp (bad) mov roll pop push or daa rclb xchg fnop sub call (bad) aam out test (bad) mov mov rcll or and sbb push push addl ljmp sub sbb shrl mov dec push sahf xchg cmpl adc fs fcoms push movsb adc pop or mov adc and push mov in xchg dec rcrl cmp sbb dec push leave add lds in mov dec xchg xor push xor sub mov or sbb popa pusha mov add xchg dec mov popa add dec and sbb pop dec stos gs cmp int dec gs xor aad test cmp xchg dec pop ljmp adc mov xchg or push cmp or jbe mov jnp inc mov or into dec dec shll in fs int3 (bad) adc ja call mov or scas outsl jle lcall or fnstsw scas mov arpl (bad) out stc out xor outsb cmp leave fiaddl imul jecxz push inc daa pushf and and xchg xor mov les cwtl push mov xchg lcall stos imul mov mov xor cmc jae movsl addr16 cwtl rcll inc adc rcr adc int fstl fincstp lcall mov in test arpl and push int3 pop sub push movsl rcr fiaddl les add and or xchg add movsl cmp xchg rcll mov lret pop xor or push mov xor aam lock push mov cmpsb mov lods inc push leave in adcl xchg xchg ficompl inc je icebp xchg cs jae lock or and adc repnz pop (bad) and xor dec xchg adc mov test enter test mov ja mov daa xchg movsl mov xor sub clc inc test lret mov push stos mov or and stos movsb insl int3 arpl cmpsl mov inc in xor rcrb add andl clc pop lods xchg mov sub mov test mov xchg movsb xor xchg inc cmpsl (bad) aam add fs daa cmpsl (bad) aam add ret mov ret movsl xor in cwtl pop stos jmp fwait mov scas xchg xor test and (bad) cs mov imul std lds push lods les pop jae leave add push mov and add pop add push and ljmp addr16 (bad) outsb jbe imul add lea out adc outsb jne imul hlt pop push and inc and stos lods and xchg or push daa insb sub or push nop push mov divl add imul sbb lea mov dec sbb mov (bad) adc loop (bad) andb testl xchg test or ds xchg bound push dec lret adc push push lods mov test push test push test adc insb push dec xchg aam xchg dec pop in addr16 ret adc bound adc bound xchg ja pop dec sbb dec jl jnp or imul cwtl dec xor (bad) jbe xchg jne xchg pop pop dec sbb pop jb add test adc sbb add sbb (bad) push and add adc push fisttpll sbb cmp xlat push add hlt xchg sbb adcl insl jp sbb mov sbb inc or or pop sbb jnp repz mov dec lock xchg addr16 push adc push cmpsl pop mov mov sbb mov adc sbb mov les mov cmp sti adc sbb call adc adc mov sbb cwtl jle and push sbb push bound (bad) xchg adc push mov in sub push pop fsubrs (bad) rcr xlat jns dec push adc adc sbb push mov (bad) addb mov arpl testb ss and ss mov sbb test sbb push jnp jb (bad) or xor test add adc adc scas cs lea jbe (bad) jno mov adc lods into mov adc ss test adc in test test push dec (bad) insl test jge cmp adc xor inc adc pop and sbb or push and (bad) aam mov imul (bad) jne sbb ret addr16 dec data16 xorb adc loop push sbb and xor sbb xchg popf loop hlt xchg xchg arpl movsb mov adc add adc pop lret int3 lret ret (bad) inc divl divl divl push add add shlb arpl fs add repnz xor pop xor cld push cmp cmp mov add jae add out arpl fcmovnb xchg (bad) jae add xchg add sbb and jp add pop sbb stos adc or xchg adc js in mov js xchg in ret js xchg adc cltd roll pop rorl mov mov mov pop (bad) push gs loopne rclb rcrb and enter jbe insb xchg cld movsb insb aad ss sub push ljmp andl daa imul loop xchg pop mov or mov mov push xchg mov sub jno sub sbb add mov rol push sbb push sbb mov mov adc push push pop mov adc movsb stos arpl cmpsb xchg jbe and jbe dec xor es (bad) jne cmp cli xchg movsb movsl push xchg jb or add sbb cli xchg movsb movsl inc xchg jl mulb out add and xchg rcll xchg jl xchg push movl movsl or dec and adc inc test sub insl inc jns sbb cmp mov adc adc and stos inc repnz int cmpl movsl jnp mov std dec and pop repz arpl int push cmp es movsl div movsb jno push xchg jb or inc ret add push div movsb movsl out add insb and cmp xorl and repnz (bad) adc add mov sbb xor or adc push jae jns add sbb add lret movsl or cmp in ss pop cld enter roll cli lret movsl or cmp std ss arpl cld (bad) xor clc rcrb cmp lea loopne test aaa xchg mov add dec and push dec push add int xorl or jb add mov dec jae std dec and push inc add add or sub xchg cmp adc mov pop roll pop rorl divl bound call gs lcall lods repz or call daa aam and adc shll (bad) call xchg mov addl fdivs call add or aad fcoms adc test shll push bound add adc push adc jb adc pop les add mov mov (bad) push sbb shll sbb jno push inc sub cmp (bad) loope movsl xchg or mov mov (bad) push sbb shll sbb jno push inc sub cmp add addl add mov mov and cmp add mov add mov enter arpl adc or push je je adc jae lds (bad) mov xchg pop push shll mov test sarl daa movsb inc lock adc mov gs fadds stc addl rorl xchg stc cmpsw push jecxz test add sbb daa aam stc xchg out or ret xchg or cld lret lds add jnp andl add push addl rorl call or ret xchg inc notl adc sarl adc (bad) aad adc subl xor imul adc enter cmpsl mov push push adc stc mulb dec inc add js shll xchg or hlt orl adc jbe dec xor popa push insb fdivrl lds mov ret dec xor pop cltd lds aad popa or imul insb push add add mov lock jae lock repz add sub adc adc add addr16 pushf addr16 std xor lcall and or add sbb lods stos sbb lcall and imul rcll mov (bad) (bad) mov mov mov xchg ljmp add jae mov push push xor inc call in je jbe fstl push lods es add mov xchg pop or mov (bad) or sub inc pop les push arpl inc inc jo pop lea mov insl adc xchg or add sub pusha and push sub shrl (bad) sqrtps mov call and xchg mov and int3 sbb or pop inc test inc sbb hlt jno lock test movsb mov pusha xchg jno inc test mov push adc shll dec xchg jne xchg push pop add rorl push xor and (bad) pop add jo insl in fimull mov movsb push les xor mov jle jp mov and mov dec xor rorb enter icebp and xchg or inc inc sbb sbb and hlt jo inc jne add hlt jo xchg or pushf sub sbb fs pop sbb daa or rorl sub xor jne jbe clc lods mov mov mulb lock xchg dec (bad) fisubrl adc dec repnz sub xor (bad) loopne inc rcrl loope addl rorl sahf and repnz mov repnz fnstsw or test add add push rcrl lret loopne lock inc mov xchg jmp inc leave inc xchg inc push dec loope into loop or ja cmp fs or lret int or lds dec aam inc ljmp outsl je adc lret xchg push ja and xchg add sub mov dec daa mov insb lds inc addl ret sub xor adc push inc insb sub inc leave inc or adc mov add daa sbb push xchg sub push mov insl mov movsl mov sbb add and js ret ljmp loopne or mov dec xchg daa and jno xchg sub outsl shlb xlat dec sahf add push test xchg sarb pop and jo dec sub ret stos das sub enter leave sub pusha sbb lret push add (bad) cwtl adc mov js,pn stos insb xor sub sub pusha sbb icebp cmpsb add (bad) popa sub dec test jge stos and test loopne insl int mov mov scas lods frstor icebp cmpsb add rclb fs out movsl jb and and adc adc movsl arpl push shlb jo lret adc sub add and inc dec push sub mov mov and push or imul push lds xchg mov xor adc das outsl push pop fisubrl jmp xor xor and xor pusha (bad) xor cmc js int3 inc sarl jno add inc movsb sub mov popf (bad) push fldcw shrb xchg and fstps jns fisubrl xor add daa pop sbb call xchg push aas orl stos sub jle sub scas subl into mov sub lea and and push shl push dec push push pop rorb popl inc (bad) mov xchg movsl outsb xchg rcr inc clc and aas xor adcb mull (bad) and and addb and push mov push or cmp std int3 inc xor push add cmpsl (bad) int3 add sub push xor sub aas data16 dec pop std sub jno ret add lret add xchg mov mov aam dec adc jb xor cmpsb xchg add rclb jno das inc push cmpsb or add cmp je scas inc push sbb and leave je js data16 sbb pusha inc leave movsb dec add adc leave inc es adc int3 shrb cmp inc xchg push aad cltd push aad dec push xor leave xchg xor (bad) (bad) (bad) (bad) dec cltd mov leave xchg add cwtl sub add or das mov inc sub or lahf inc sub (bad) ljmp (bad) add shll add dec cmp mov in lea inc sub adc rcrl ficomp add add and xchg movsb add mov inc mov jl jae cs fwait arpl lret mov scas cmp or das dec stos pop push popa pop (bad) movsl xor xchg xchg adc xchg pusha sarb or mull dec dec test mov xchg lds ss xor dec call cli xor adc stos xor insb popa sbb cmp push cltd pop jge add sub dec and xor dec test fsub push fs rcrl xor cltd ss lock sub fisubl addr16 pop insl push push inc or and insl call and inc fisttpll pop mov cmp sbb cmp arpl cwtl inc dec data16 xchg cmp and or es and dec cmp rcl xor stos xchg or push dec adc push rsqrtps jle test movb inc enter outsb fstl xlat inc les push dec rorl xchg or mulb dec les scas sbb (bad) (bad) xor test sbb pop dec pop cmp or lcall (bad) shrl xchg rorl pop and inc sbb mov cs add push jmp cmpsb add test jmp mov or sar into cmp adc cmp aam arpl push xlat lods cmp ret adcb pop repnz xchg jmp xor (bad) and iret movsl push inc push test xchg repz xchg dec jl jl,pt repz out push leave lahf pop fs jns and mov or mov inc iret stc dec and push (bad) and mov or or inc cld adc or pop cmp iret add ss bswap cld arpl aam data16 (bad) or jle jge inc andb mov sub xchg loop jl jno shrb xchg sub mov stos mov cmp inc xor dec mov ljmp xor jge (bad) sbb jl add cmp mov cld sub hlt mov lcall pop sub or push pop cs (bad) hlt mov pop lahf hlt ficom ret jo jno and or mov jmp repz sbb lods xor adc ret std dec adc addl orb nop and fildll mov ret sub or xchg mov xchg (bad) jle sub sbb mov and test loope subl and jmp fwait icebp mov rcrb out push rclb (bad) xor xlat sbb push mov je fwait or push nop (bad) xor xor push inc sub mov in mov pop adc and sub inc or add xor and cld (bad) lock orl repnz add int3 std outsb popf lahf cmpnleps push fcoml jg dec outsb mov sbb cmp out lock push pop imul add cmp lds mov mov mov sbb push std dec aas mov (bad) cmp and lret xchg into and frndint jle inc (bad) cmp in jecxz mov icebp lea mov lcall mov dec cmp mov push arpl jbe (bad) int clc loope inc jo iret sbb pop mov mov montmul cmpsb add mov inc add push add jo dec inc or dec adc push dec mov inc adc fld (bad) xor add xor cmp (bad) xchg or les xor les add mov (bad) and sbb test cwtl dec rorl rol les inc sbb inc adc mov int lret and jnp inc add mov inc sub sbb sarl add out lock dec fmull orl push mov hlt fs sub sub sarl bound insl insl in mov cmp mov jp sub into pop ficoml adc les cli add adc lods and sarb mov push sub fist mov lea xor jbe add daa xor or xor pop (bad) dec adc outsb add jmp shll xor xchg (bad) push lds lret mov rcrl add out shlb (bad) int test lods dec loopne mov adc add and les cmp mov ret es (bad) (bad) insb (bad) sub ficom cltd add and push lahf and push and (bad) add sub inc imul sub adc mov mov dec pop arpl repnz jb stos inc jb jecxz lds adc pop jle adc subb imul mov pop mov lds lcall flds aam arpl sub xor xor mov sbb fwait out rorb cmp mov mov sbb loop insl mov xchg dec inc pushf popa sub clc cwtl push js ficoml ficoml ret sub mov adc ss (bad) aaa cmp dec jmp xchg xchg dec mov adc inc xor dec in iret test jno stos stos push and xchg add and ja negl pop incb sbb jno insb xchg and ret js cli ret push ljmp ss xor xor lea adc loope jb cmc cwtl cmpsl mov xchg or daa out and cmp fwait cmpsl push push loop jbe sarl xor add loop rcl ret bnd lods xchg out jb xchg jb xchg out inc inc inc jb sub xchg out inc stc xchg push inc stos mov dec and enter test fwait aaa dec add fldl and test adc or adc jbe adc aaa cmpsl inc cwtl nop adc loop cmp jbe imul (bad) jnp xchg mov inc cmpsl inc inc adc sarl rcl inc sarb push lret push (bad) jge addl (bad) jb out sub je jb and in test jo (bad) xor lock repnz (bad) jle push insl add jnp pop push cmp mov cmp fs inc jmp lods jmp mov adc add bound dec add adc add inc adc inc sti pop mov es cld mov pop rolb mov jne xchg lcall mov ljmp mov (bad) popa inc clc and inc out xchg xchg cmp mov pop fmul imul fldt lret pop fcmovu lret xlat fildl jbe mov (bad) lcall aam lods xor addb push mov jb xchg test inc sti pop fmuls inc add jp enter insb jecxz into xor push jb dec scas xchg jp mov enter mov mov stc jl xchg lcall mov jnp int add orl in imul mov pop lea xor adc xor sub cmp loop jp (bad) mov jp jecxz add bnd mov movsb (bad) jo xchg add mov mov (bad) and test sbb sbb ljmp fidivl fildl add mov (bad) bound xor rcll xor (bad) bound push push or mov mov mov mov push ret cld mov jb mov dec mov mov pop imul jmp pop xlat ja sbb js xchg lcall cli repnz push stos mov bound mov push bound cmpsl mov push mov fld mov shlb and roll push data16 xor cmp insl repnz bound mov add imul inc xor pop fs repnz adc xchg jno inc add adc bound repnz inc dec xchg xchg xor data16 popa cld outsb ss dec fdiv gs dec mov xchg stos and dec sub cltd jp cs stos rcll inc out and cs xchg jmp or es pop mov cs add adc std test bound xor dec mov mov inc data16 fs xlat mov inc ret (bad) inc adc push jb insl popf dec mov jb arpl movsl mov in xlat sub out or jmp mov data16 test addr16 jo inc ss aad mov jnp loope std test and sbb pop and dec repnz addr16 xor (bad) loope dec ret sti sub adc inc jb xor push inc daa les (bad) and in fsubl daa push ret dec push pop add bound div dec jbe pop leave cld jns xor rcrb pop cld je je pusha imul notl inc dec mov test inc push cmpsl push xor loope push repnz imul je sub adc adc adc loope dec inc dec and ret stos addr16 mov pop inc or push test xor (bad) mov xchg (bad) (bad) xlat dec inc and rol inc cmp push add push push rorl cmc xchg add fxch stos loope jae xor lea xchg sub push mov sbb sbb in in in in in in in lds and jb xchg rolb cmp jl mov dec adc pop bound stc in adc (bad) xlat jb xchg dec dec dec push (bad) fs and movsl insb sub repz cmp loope inc push and fisubl xchg jmp movsb xchg mov mov rcrl inc pop xor repnz mov mov pop add fs (bad) mov or fisttpll test cmp pop adc jb lods cli mov mov (bad) mov popf mov mov mov arpl movsl jb inc add in call loop add and hlt mov rorl and cld adc sub mov sub out fs sbbl mov xor fisttpll hlt mov cmp jno adc jge adc mov adc mov mov call repnz or add jge pop add pop mov adc jns sub aaa cmc mov add pop push pop inc bound pop add inc inc mov aaa mov sub rcrl xchg inc dec inc insb sbb rorl inc int3 push or adc inc mov cmp sub push insl adc add add mov jb jnp xor ja (bad) jb (bad) jb mov mov and hlt cmp add sub mov xor adc push addl xor cmp xchg arpl mov cltd xchg leave adcl adc adc popa addb xor popa andl data16 adc add popa fs popa mov popa imul inc andl popa mov bound icebp popa add popa imul icebp popa mov bound icebp popa adcb data16 mov mov je mov icebp bound andl popa add xor popa mov push je mov icebp popa test popa data16 popa add push xchg xchg xchg adc push pop popa shrl lea pop sti inc shrl sub leave hlt fstps stos icebp bound leave hlt fstps xchg bound vpmuludq pop andl fstps andl fstps jno dec dec hlt fsts bound movsl xchg jbe dec cwtl add pop adc xchg fnstenv cmp sub mov js sbb in in in in in in in in call inc xor sbb cmp dec dec sbb inc dec fnsave xor test jns adc pusha inc popa cmp aaa test xor fistl jp stc imul stos mov sbb loope jnp push cwtl jno imul imul in in in jmp in xor arpl and mov xchg sarl clc push mov sub or jb sbb jbe ljmp inc jns flds and fcmovb repnz inc xchg jl dec lods int3 pop dec dec sub loop xchg push add lods int3 pop dec cmp loop xchg push or jno push (bad) add inc jns mov jns stos es mov int jnp mov mov pop ss mulb in lcall mov or imul sarl sbb and and xlat sub daa ja and imul jo jge idiv dec jl pushf in dec imul pop mov (bad) fisttpll ret adc inc mov and and and pop mov (bad) mov or and clc cmp sub sub jl mov mov sbb sbb aam out es mov jl or insb mov dec pop sbb outsl outsl outsl push or insl je (bad) jne arpl ja xchg sub inc sbb aad mov xchg sahf out loop and fs (bad) add dec xlat mov add and and loop push dec xchg sub sbb adc sbb dec add in dec add imul sbb sub dec adc (bad) sahf or mov loope leave add xor push loope adc insb sbb inc cmpsl mov rorl outsl outsl outsl arpl ja sarl stos adcl mov mov push mov jbe xor data16 (bad) in xlat xor sbb mov int pushf arpl loope dec jl xchg jle imull loope shrl loope add imul and sbb dec inc push sbb xchg sub jnp push dec add repnz dec cltd adc push in lret jecxz and fidiv and push daa repz (bad) out push sub les xor aam lods adc js and loop mov inc dec (bad) and adc push loope xchg push pop sub inc loope orl dec inc aaa add push push mov cwtl mov jae sbb mov inc lods pop push jae push adc je push sbb (bad) arpl add and popa addl or and inc aas pop inc jo add mov add shrb aaa fdivl inc movsb aaa aam mov inc out loope sbb mov icebp inc sub shll cld xchg inc or or push daa pop fsubl inc arpl dec mov aam insb shlb xchg push ret xchg lret inc xor lret inc fs movsb imul mov or push mov push popa inc sbb test and fsubrl fdivl in jb mov pop fucomp jb push add dec jae out pop add jb aam faddl xchg add inc out push add insb xor sbb arpl add popa inc fisub inc in fldenv push and (bad) mov adc rol jmp push pusha repnz addr16 pop gs and hlt and shlb xchg dec in push push add mov push mov add mov pusha ret in cmpsl or jecxz bound lret fwait cltd jge adc (bad) jbe mov adc inc push adc inc jbe and rolb bound imul shlb aad adc pop jbe mov gs sub nop fwait lods bound cmp xchg mov cmp imul cmp bound sub pop or sbb or or lods mov inc xor fwait cwtl and inc jmp dec sub and icebp dec lock loop arpl (bad) mov mov dec dec dec dec add and lods pop pushf xor xorl push dec dec dec inc in cmp xchg jbe inc in or pop jns mov jnp mov push rcrb pop inc in push jecxz lds (bad) testb push dec dec dec dec dec dec dec inc jecxz in decb inc cmpsb dec inc ljmp push inc test mov push cmp sbb xor lcall pop in fcoms inc jmp test cmp jno bound fs imul in mov jno lea jb bound pop dec push add aam jo loop jne xor push fidivl ja call xchg xchg push push pop lods push dec sbb repz (bad) mov mov sub xor ret xchg inc ret cmpl pop mov jb hlt stos shlb push jb jno jl or lods xor repnz adc or jp movsb xor mov lods xor pop mov sbb xchg fldt inc cld lcall xchg dec add scas mov loope imul jb jns rcrl jb pop mov xor test xchg rcll mov push mov adc adc inc or inc pop (bad) icebp js jno jp shl pop dec test cwtl lret icebp in sub adc arpl pop push scas scas scas scas scas scas scas scas cmpsl mov jb cmc lock jp pop loop ret in fldl dec push inc (bad) fstpt ss data16 jb dec arpl mov push mov push xor insl jns rclb in je shl leave adc leave add loope (bad) loope adc (bad) call jae push sbb inc mov jns mov push movsb sbb xchg repnz xchg mov push repnz jmp insb pop pop cmpsb cmpsl fwait les inc xchg push jae out xchg rcll rolb icebp pop ret repnz cmpsb (bad) jb daa aam push xchg push ret pop int3 data16 mov daa (bad) icebp mov mov xchg inc jns imul xchg mov stc cmp insb mov push mov stc and dec daa movsb mov xor xor aaa aam ja mov and jb fisubl push je push add ja loopne pop dec and sarl xor imul push loop addl pop mov loop inc xchg push pop adc scas leave mov sub mov loop ljmp mov pop mov imul ret gs loop loopne mov add dec or pop cmpsl and stos jno and mov xchg shlb or mov xor lods ljmp mov lods ret sub pop xchg add or (bad) cmp pusha mov add or jnp orl in mov add xor cltd adc test loop aad sahf loope testb inc dec sbbl cmpsl mov shrb (bad) mov sub add xchg add sbb mov mov xor rorl mov movsb push fcmovb dec xchg xor (bad) mov adc dec xchg or nop outsl ss lock aam mov stc sub and scas (bad) xor movsl or pop lods jo pusha xor repnz lods out sbb js sbb add add addl inc mov lahf inc inc lods dec push (bad) cld mov mov jbe,pn test lods leave mov sub xor mov cld int3 lret xor outsb add add mov push popa sbb push fwait pop jb inc inc xor out push rcll dec mov sub mov push lret and movsb ja mov xor faddl mov sub push pop mov outsb aaa xor stc ja int test outsl push or scas test mov mov out push (bad) (bad) in rorl xchg add add in cwtl rolb xor mov mov aam add ret dec inc int3 mov pop mov xchg add inc dec jb loop movsb xor je inc mov add add cmp dec or add movsb shll adc daa in movsb push ja xchg dec pop mov xchg cld fldl2t loope test nop movsb ret rolb insb pushf lods imul add adc movsb push and adc mov adc sbb dec ret mov inc dec repnz or xchg scas xor push cld add gs movsb aas aaa mov xchg insb xlat icebp cmc notl xchg bound xchg push push inc inc dec dec movsl shrl push cld add mov test popf or (bad) dec add lods call enter pop movsb sub adc inc (bad) lods test cmpsb popa inc icebp xchg scas mov inc insl aaa cli and mov movsl xchg (bad) inc inc lea hlt pop sub push xchg adc je lods xchg mov mov sbb or movsb lret add lcall mov pop rolb sub daa loop dec xchg mov pop bound leave (bad) jge aam mov insl mov add dec sbb cmpsl mov mov aaa (bad) and cs add movsl out adc push repnz std test dec and mov mov mov pushf xchg popf aaa hlt mov ret (bad) dec and mov or ret daa fnstcw dec and mov in out movsl push dec and mov in out movsl pop bound lds in out movsl pop bound mov push mov daa mov mov inc inc imul ds (bad) inc out lods xchg dec or stos bound in daa fnstcw inc inc icebp lds pop fstps dec loope inc divb aam lret bound inc cmc push dec out test push rolb mov cmp pop sbb movsb push mov inc rorb sub cld mov jb cmpsl repz lds mov push inc loop add add lds mov lds push jle aaa hlt popa in mov cs ret mov test lods inc loopne inc cmp dec aaa hlt pop adc addl pop sbb push cmc xor xorl (bad) stos xchg das daa lods adc dec xchg in adc dec orl popa jmp pop lods pop rcll dec push lds in pop movsb pop pop ret adc pop daa movsb push mov outsb pop rorb repnz inc lcall movsl cmpsl pop or repnz cli xor xor aaa hlt mov icebp sub inc lds rolb and mov notl shrl mov and mov pop mov inc insl inc mulb inc cmp inc inc sti pop rcrl hlt fstl inc out mull push movsl ret daa dec add (bad) mov aam aaa lock xor (bad) xor push xor cmp pop xchg movsl push test stc inc push adc xor fwait lds push mov mov cmp adc xor xchg xor xor pop or push cmp push (bad) icebp push roll push inc (bad) icebp jns xchg xor ss mov ss xchg loop cmp push push popf sbb icebp and sub dec xorl and mov and mov mov xchg ret inc mov xor cltd repnz imul popf sbb icebp and sub mov int lea xor xor pop mov and sbb cmp aad aaa push xor fiadd sub cmpsb mov mov pop stos mov jne mov mov xor xor sbb addl aaa jb adc push jl sbb mov cmpsl (bad) daa test mov xchg xchg stos pusha add push and lods sahf sbb test or addr16 or adc int3 (bad) jge test pop jp xchg lods pop movsl bound loope mov xor out push imul push loop dec sbb inc xchg gs xor out push fdivrl dec adc (bad) xor or adc mov loop cmp jl adc dec jne in fmuls sbb mov sbb sub subl pop imul xor clc xor cwtl test sbb lods sbb cmp mov xchg xor icebp into xchg mov xor cmp or negl shl cwtl cmpsl (bad) daa movsl xor pop subl mov shl mov add repnz cwtl test sbb adc cmp mov ja jae xor ficomp out (bad) lret pop dec adc movsl pop pop pop cltd xchg xor adc movsl cli adc movsb fiaddl aaa lods push xor scas test mov inc mov sahf jp ret sbb movsb fptan ds lods push xor imul push clc mov dec xorb add add or stc push push repnz stc push or testl xchg mov (bad) add cld repnz out and icebp leave data16 jmp lock inc aad dec xor jecxz xor jmp ss dec xor jecxz xor xchg mov imul add in add push test jp hlt sbb push push xor adcl adc bound xlat add mov jbe cmp or and cmp pop xor and or xchg add mov sbb push or add xor inc adc push cli pop faddl xor dec push repnz out push repnz mov cmc movsb ror movl cltd push inc mov call loopne sub hlt ss mov aad lret and mov mov lods xchg sub sub jnp hlt in mov push add push repnz mov out add aam (bad) add repz loop or add cmp stos loop add push add sbb icebp imul dec mov xchg daa ret mov push hlt dec mov xchg call inc inc lret lret mov push jp pop mov cmc pop imul or lods icebp and push enter or or in add mov lods jo mov nop mov push nop test mov mov mov push dec adc cwtl ss cld cli sub push cld xchg inc xchg inc pushf xchg and xchg imul jb repnz mov cli dec aaa fwait in stc inc or jp fwait in clc mov adc ret ss xchg adc pusha aad ljmp lods sti push or or add stc in bound pop cmc xor inc cmp mov call icebp fs push hlt jl mov mov rorb movsb and bound or xchg inc aad xor dec pop imul arpl lcall sub data16 sbb mov sbb or cmpsl inc js jmp xor push icebp sti and dec inc shll andl push ja dec pop mov inc pop mov xchg xchg iret sub outsl arpl xor push bound push xchg int3 pop push and mov sahf jo mov rcl mov pop mov movsl inc insl fwait jns (bad) dec xchg mov sbb lock mov out test dec add inc mov cmp pop ljmp je cmp outsl lcall div lcall inc stos rolb mov ljmp fs movsb inc or pop add push dec mov test jb hlt push pop sbb add xchg pop test and pushf cwtl jnp xor dec xchg mov sub and je sahf je ret fcmovnbe mov jo or push push push pop inc jmp xchg imul repnz dec dec out dec cmp dec pop sbb add xchg pop xchg cmp and adc mov inc insb lods xchg push mov or call sub mov inc sbb mov aad cmp aaa xchg mov ljmp std dec jno sarl xor sbb stos jns in adc rcr pushf loope shrl inc pop cmp mov inc ficom mov xchg iret push inc mov sarl sbb add and rcl mov pop inc jbe sub xchg aam xchg xchg ds push and daa cmp ljmp pop adc ljmp push movl cmp (bad) imulb mov (bad) icebp inc pop or sbb pop sahf push adc sahf shlb stos sbb pop add adc pop and (bad) call fimul mov push call mov nop in pop mov pop inc les test adc lods (bad) mov hlt loopne lock sbb je test sub dec loope xor loope rcr addr16 push pop and stos (bad) stos sbb (bad) xchg add mov jae xorl mov cmc in mov mov cmp aaa (bad) cs cmp inc inc inc inc orl jmp cld popa dec or xchg addl mov lea test addl mov push in mov cmc repz dec sti fcoml mov jg add xor arpl sbbl xchg pop enter repz scas cmc jecxz mov add mov movsl loopne cmc jecxz mov push fnsave fnstsw cmp fnstsw in xor (bad) adc arpl jecxz pop add in int lcall mov into roll xchg push ljmp clc mov test cmp mov addl jae jnp movsl repz idivl xchg in mov into adc add xchg jnp int sub orl pop dec lods jmp testl xlat mov idivl or (bad) jg repz mov dec jnp addl inc jno adc enter pop xor add cmpsb mov scas xor xchg mov dec jmp incb lea daa into roll pop cld cli ss fisttpl xchg add mov cmp mov addb pop jmp and lcall cmp (bad) mov xor mov jo add xlat lods scas sub push stos jle daa lahf and adc cmp add test ja fnstsw js ret mov push adc mov adc inc (bad) aaa lahf insl mov loope (bad) and test ss jecxz xorl repz mov jl sub incb fwait jno push test lods inc ljmp movsb add sbb push les scas imul dec scas and mov push adc adc (bad) mov movsl popf cmp pop sahf fbld adc lea repz pop ret pusha arpl out cmp push mov mov push cmpl inc jle sub loope dec int clc int3 adc mov xor push fldl mov push aaa xor add mov mov cmp sub adc clc push sbb pop mov mov fisub mov mov stc and mov aam and jbe push rorl inc lret xor push rorl xchg add jae lods mov jae cmpsl and sbb jae mov and mov push test lods pop out xorl addr16 ds pop jcxz adc in xor pop xlat loope jae jbe arpl loope pop (bad) loope cmp (bad) loope sti cmp (bad) mov adc cmp and cmp adcl mov sti mov jbe daa and inc je dec shrl push sbb stc scas jae jle cmp jmp ds jae inc jb or stc mov aam and pop out push andl fnstcw adc into or jne fsubrl je mov fistpl inc jne adc std or xchg test (bad) in arpl adc mov lods arpl jae jae jp sub sub arpl shrl stc stc scas je jle idivb out gs ds jae stc or out insb pop daa rclb and xchg fcomps jne xor add rclb jne and mov pop aaa in xchg jle movsb push lds mov inc sahf inc cmp pop in daa mov fsubl je jns xor jae mov jno jle pusha mov jl jecxz push test xor mov (bad) test aaa addr16 push arpl test jne push push push push jl sub pop aaa rcll dec inc jno test inc push icebp push push mov and mov push je pop xlat jne inc push ds push in out push inc add xchg sti stos cld ret jp xchg pop popf cmpsl icebp sti mov cmp popf mov sti mov ret jnp inc sub dec loope test arpl cmp push outsb mov push pop icebp push inc jns jmp inc push cmp je xchg inc xlat dec imul cmp add in repnz test je and dec fsts stc xchg jmp inc push cmp push pop push pop and jb je push mov sbb jae icebp push jnp inc push cmp adc push imul addl sbb jl mov mov orl xchg addl add mov dec push imul mov loope mov adc test mov mov adc jae mov cmc jae aam sahf fs or jecxz sbb outsb cmp mov xor mov stc dec int3 arpl dec sub jecxz repz pop les xchg mov jecxz (bad) pop push lock pop (bad) mov dec (bad) xchg mov in adc inc pusha mov cmpsb movsb test icebp movsb out icebp and mov mov jge dec mov (bad) mov sbb (bad) adc push xchg xorb loope insb push loope mov adc (bad) mov push adc mov push mov fdiv repnz cltd (bad) divb mov jmp xchg and push mov js call movsb popa loop mov imul imul mov mov mov rorl mov ja and or mov fstpl aad ret mov sub dec icebp inc mov cltd inc divb add jae adc or mov daa jge xlat or or clc int3 inc lock popa loope mov cld mov mov adc arpl jb xchg xor xchg test mov and (bad) dec stc xor sub rorl std adc (bad) add jge addr16 xchg rclb mov mov mov jecxz jae cmp mov in insb jecxz gs sti leave (bad) mov push mov imul adc std bound enter movb leave adc mov mov xchg push mov jae fsubl mov mov fwait pop cmp hlt xor jae ret fcomps ret mov ret mov mov xchg mov shll mov subb pop adc mov push push push pop add cwtl ja push push mov jmp jecxz push mov push push mov xor mov mov pop icebp mov cmpsl push mov mov mov loope add push cwtl lds xor mov stos pop jo popf popa xchg add push cmp xchg and jecxz mov imul xchg adc inc mul mov imul imul adcl pop test push push sahf (bad) adc aad push aad pop popf push lcall cmpsl test add daa push jne out pop lock mov mov pop add pop lcall push xorl mov xchg push mov mov les push push and xchg xor push mov mov push push push pop mov cmp mov push xor mov xchg pop add cmc repz push fisubl or sbb mov daa in addr16 or mov and (bad) in mov lret and push cs adc push jae fldl rclb inc push push xchg push push sahf jb jmp call mov xor fisubr sbb push fdivrs movl insl add repz xchg popf pop test in add mov pop pop lea test jae and idivb cltd lods sbb jmp shll subl pop sub cltd lods sbb movsl loopne cmc push and rcrl rcll push repz push pop stc (bad) adcl in mov cmpsb sbb add mov mov inc out mov push cltd add inc or inc or sub and cltd add in mov xchg xor scas andl imul mov cmpsb push cltd add mov fwait testl imul mov push mov mov dec add fildll xchg sub push sbb xchg and mov mov and push mov mov and sub aad xchg cmc mov push inc pop test mov xchg push and test dec adcl and jl roll fwait popf rcll adc imul xor push inc mov push mov mov sbb fldt inc xchg and loop mov cmpsl ja sub xor pop pop push sub mov xchg xor jo xchg movsl sub xor sub mov in and stos jno mov adc pusha mov xor sub movsb sub xor inc push mov xchg bound sub aam es push mov xchg bound bound push mov xchg bound sti and or popa add mov (bad) mov add mov mov popa je sbb add push add xor mov add adc bound inc add inc in xor mov or push je or popa lret and or popa popa shlw daa xchg bound rorb xor mov or push je daa xchg bound es push mov popa je bound imul lods (bad) xchg bound rcrl mov daa xchg bound flds sub or pushf popa je (bad) bound mov jno popa dec icebp test test mov jae in pop push and je shlb test out aad cmp in shlb (bad) ret inc movsb and inc movsb sub mov xor add lods pusha adc mov frstor loop daa ss adc ret or inc add push or pop imul ja or pop adc call jecxz addr16 mov bound and shlb cmpsb push movsb cmp xchg xchg rcll push cmpsl test in aam divl mov sub in jae jno pop (bad) push aam repz mov sub fldenv lret addr16 je and insl push mov cmp fwait icebp cwtl inc xchg and inc push test and xchg aam (bad) out sub insl push or adc adc fs xor sub addr16 bound add in cmp add aam repz cmpsl rcll lock (bad) mov jbe mov aaa ss and ss adc lods push in mov and in popa insl mov push push movsb sub mov data16 xchg in inc std xor add stos std insl jbe clc add inc and movsb daa ss adc fcmovnu mov (bad) in sub es add stos imul jbe mov push push push add stos imul sbb fdivl add stos std gs xor xlat mov test mov aam xchg adc cmp mov cmpsl and in mov mov sub jne push movsb mov movsb aaa push xchg loop xor dec (bad) and or xchg xor xor sbbl stos push pusha pop loop or aam inc mov mov add adc and and sub out mov add cmpsb mov push test (bad) sub adc orl addb pop and sbb jnp mov push (bad) mov pusha sub in pop pop or fiaddl jg push enter push and sbb mov adc rolb call jo pusha incb inc sbb dec inc pop inc out inc sbb out jne and jecxz insl push push cwtl dec shrl sub aaa push ret xchg subl sub pusha dec cmp mov mov std add sub test (bad) (bad) test dec push xchg xor mov pop mov mov jge mov adc sbb lods (bad) push pop pop test lods xor stos shlb lock cltd pop lods movl pushf jbe mov test xor dec mov add int3 mov cmp push test test or mov and in or mov sub jno xchg cwtl les push insl cli int3 or shrl jns cwtl dec cltd cmp cmpsl and and jge jbe (bad) mov nop dec in and cmpsb or int3 popf iret in mov (bad) pop das fisttpl rclb out or or jo ss call xchg fcoms bound and xor xchg push push push roll inc cmpsb movsb ret les flds adc aam rol jo out lods xchg push mov sub hlt push nop aad rcll jp xchg sbb and bound test xor push out and push xchg idivb xchg daa adc sbb adc add dec inc mov rcll push xorl mov scas inc push mov mov out pop mov pop sub push add pop adc push jae ja ret jae jno mov jae cltd cmp in lret mov les mov jnp int3 ficoml cli push cli pop add cmp lea mov xor arpl out push cmp fs cmp fs (bad) aaa push fs mov inc stos ret test arpl push jno out pop or or pop or sbb sti cwtl fistl mov and js sarl pop xchg sahf sti cwtl fistl mov and mov ja aaa dec mov int3 push jno ds in lods jl cwtl movsb out dec pop test mov mov and or adc test mov sbb ja adc xchg je jnp xchg push adc stos stc pop mov add mov jmp mov inc mov icebp lret push push dec fs mov in insb sub lds je sub in mov pushf sub xlat sarl pop nop out sti cwtl fistl xor mov cmp and inc fnstenv push jno xor mov dec push stos mov in stos stc pop mov add mov jmp mov mov mov jno push sub add mov push in adc push out insl in and insb sub lds je sub in (bad) hlt adc pushf sub xchg sarl pop nop out sti cwtl fistl xor loopne and mov cmp and inc fnstenv push jno xor pop push ja cmp out sti cwtl fistl ds loopne and mov cmp and inc fnstenv add out outsb push stos mov in stos stc pop mov add mov jmp mov adc mov mov inc add jmp sti cwtl fistl ds loopne and mov cmp and inc fnstcw fcoml mov loope lods sub leave idivl mov xor fistpl jns and push in adc push out insl in mov in insb sub lds je sub in (bad) hlt adc pushf sub (bad) les roll je mov les xchg (bad) xor je lret pushf and lret cltd lods daa sarl pop and into xor shll in mov (bad) mov insb sub lds jp sub pop nop out sti cwtl fistl cmp loope push cmp and inc fnstenv fcoml mov sub mov fwait repnz and mov icebp mov mov mov sub fs sbb lods nop xorl and mov xor mov push mov adc out sub cmpsl inc (bad) mov insb sub lds jae cli push sub in into pusha hlt adc sub xor add pop inc dec jbe fmull and stos cmp in dec adcl xchg test sbb dec (bad) adc sarb sti cwtl (bad) inc adc loopne and mov cmp and mov push jno xor add or gs or or outsb pop roll cmc mov out sub cmpsl inc (bad) mov insb sub lds jae cli push sub in (bad) hlt adc roll cmc mov out sub mov jmp mov loopne jae int3 cli cmpsl mov test and add addr16 mov (bad) mov push pop lds stos popa sarl (bad) int3 and sbb pop lea jae mov jae push aad cltd xor roll inc jo add addb add aas add imul sub or orb xor adc xchg xchg inc pop cmpsb sbb mov dec add fadd xchg repnz mov or mov or xor mov das ss (bad) xchg or loop (bad) xor inc jle sub bound jb cmpsb in dec movsb jns das lock or xor or es push rclb add dec rorb outsb pop cmc inc mov lret cld sub cmp xchg clc gs xchg pusha dec rorb sbb fimull add hlt mov or mov arpl pusha mov xchg inc add aam jmp (bad) adc repnz mov popf notb jb add dec and sub or cmp xchg and or mov add adc jmp sub dec or push jmp dec mov ds xchg aam lcall lock inc andl xor cmp pop ret push sub add add push test dec aam in cmp mov dec push jl inc adc sub and fs adc cwtl lret adc dec lock adc xchg xchg pusha or mov mov out mov (bad) mov adc in mov test and (bad) repnz cmp mov lret ud2 jbe adc push sub jl mov xor mov inc int rcll sub sahf push bound movsb mov lcall repz adc mov sbb mov xor dec xchg gs addb sbb sbb jbe lds ja cmp jo and ss pop add and mov jg icebp daa das mov or dec xchg and ss pop loopne and cmpsl les outsl fildl push inc (bad) fwait xchg push mov xchg sbb (bad) dec nop pop subb pop adc loop push jo (bad) in loope rclb ret xor shrl shll jno icebp adc cmp call pop xor and adc icebp inc mov aas add repnz jl arpl (bad) cmpsb mov xlat add loop jb call jp jge mov inc ficompl test jb test out (bad) dec (bad) in ds xchg push xor ret movsb mov push mov aaa shlb push jl cltd jno jno and xor jns add xchg adc fmull jecxz (bad) cwtl or mov jne xor test fs xor adc xchg add inc adcb es mov jno cmp mov xchg (bad) lahf or or xorl ja mov bound push jno popl (bad) imulb ds adc sbbl fisubrl cwtl push xchg jb push mov sbbl pop and jns and sbb or inc jecxz push mov mov (bad) mov and fdivrl ljmp sub lea dec addr16 or je jno inc dec mov popf mov je jno nop sbb sahf jb lods enter std es loop push repz aas push aad mov es adc or movsb aaa ds inc mov jge cltd jo inc mov and push aad adc aaa ds adc inc daa scas ret fwait lret jmp xchg adc inc sarl add xchg xorl leave shl push mov test loop pop or xor cs daa aaa push pop aaa fstpt dec enter hlt sub ljmp adc arpl pushf bound push push inc jno xor stc fs jno or jnp gs mov or and add out sbb or shl and pusha data16 sbb arpl push mov sbb test clc mov adc push (bad) js dec mov xchg leave xchg sbb xchg adc xor adc or mov inc je lea and add test (bad) addl sbb xor imul dec or test (bad) xchg inc inc flds sub pop sub cmp jo cmp sub adc xor mov mov lret inc add push shll (bad) mov aam sbb lret or push mov sub add test inc ror sbb repnz repz icebp (bad) and clc push adc push lea ljmp clc xchg add xor mov stos test inc push pop and mov mov fsubrp repnz inc cmp das mov mov fcoms lea dec mov xor in test add stc add inc or mov (bad) mov pusha out xor inc xchg out mov sub in jae jbe rorb hlt sub popl mov jno dec loope mov inc insl lret xchg xchg xor pop add cmp fisttpll fs pop and and add test push sbb cs nop xchg inc repz sbb int3 int3 fdivs pop or pop inc xchg ja mov mov dec adc jae sub ret mov les imul int3 dec or in mov mov add adc sub mov loop shrl fdiv sub daa jmp inc inc popa mov cmp inc fildll dec push iret push push pop jg jns je sub jl add pop xor test add (bad) push mov fsub and add xchg adc sbb adc clc cwtl scas data16 shrl sbb mov inc adc and add into add xchg outsl adc pop into sbb movsb xchg movsb pop xchg mov push mov add push fiadd fcmovnu mov jmp and mov sbb or out mov fldenv mov cmp sub mov test mov sub sub je pop xchg addl jb lret inc incl test add inc mov cli mov mov into xor into cmp inc sub pop ds into aaa sub bound sub sub bound sub push sbb xor ljmp mov dec lahf call test or or mov scas (bad) clc sub bound popa pusha outsb movsb mov and xor stos mov rorl ret outsb movsb mov enter push je rcll adc test in and push rcrb dec (bad) mov pusha ss push ljmp xchg (bad) jne inc jl aas fidivl push add sbb sbb sbb clc fildl inc push sbbl aam adc hlt sbb inc aam mov lods xor dec xchg movsl popa (bad) xor sbb (bad) (bad) loopne leave sbb punpckhdq or roll jbe mov (bad) (bad) adc (bad) push cmpsb and stos ds fldenv nop loopne (bad) and pop sbb cmp je fadds bnd sbb xchg adc xchg test dec mov mov pop push std inc test movsb in add xor dec mov scas or (bad) sti or lods popa xor dec js data16 pop mov mov in inc xor dec (bad) or mov pop adc or shrl out adc sbb mov orl sarl movsb data16 jne and add sbb add mov dec pop add and sbb pusha mov call jo mov insb mov cmpsb jecxz mov jmp xor push sbb push inc lods pop jno push call data16 pusha test sub push aaa xorb mov mov ret pop xchg push lret int pop sbb xchg pop pusha fistp add sahf fist data16 inc lods pop jno push cs std pop jno push pop xor (bad) insb cmp imul or xchg pop pusha fild lret push clc rorl das add xor push jae imul dec mov mov pop jmp mov xchg aam jo pop sbb or nop cmp adc add add mov mov adc xor mov sub fs or adc mov dec lret or aam fist rcl sbb (bad) ret in fbstp mov bound or popa les adcb inc popa lds or aam and sbb into fs push jo xor push add mov sbb daa add sub fwait lcall rolb std cmp mov push or inc push or or xchg lock push cmpsb out push add (bad) out add lret divl xchg xor jo push lea xchg adc push mov cwtl sbb rol clts mov adc add call or ljmp dec sbb xlat mov push add (bad) cmp imul sub aam pop dec inc mov inc push or pop int push or xor ret mov cmp pusha in andl xlat ret lcall inc sbb ja mov sbb add ja fmul xchg loopne leave nop xchg xlat arpl arpl (bad) push aaa mov mov xchg jae add imul orl sbb xlat repz xchg jnp sbb sbb xor jo popf fiadd mov or daa xchg or mov and adc jp loope nop subl (bad) mov xorb jno pusha testl ror xchg pop orl fistl mov xchg outsb out sarl sbb pushf sbb inc lock leave adc xchg adc add dec xchg push rclb hlt add lods push lret xor xor push sub or pop and pop sti pop movsl mov cmp mov movsb enter mov stos sbb sub (bad) jns dec test pop aas inc ss adc mov xor imul mov lea add rcll mov inc rorl push shll jns (bad) dec shrb xchg outsb shl sti push push pop leave sbb imul lcall or sub jb movsb pop jecxz daa and push cmpsl and cmpsl and mov inc mov mov mov inc xor adc push inc and adc mov xor cmpsl add mov mov mov push adc aam xchg mov movsb sbb imul pop (bad) jno cmc jecxz fwait out inc loope or mov (bad) pop cs mov and movsb add mov test (bad) pop mov gs jmp push xorl inc mov cmp in int3 mov addr16 sbb dec or out ja pop mov push dec out xorl xor cmc shr sbbl stc shrb dec inc daa mov pop inc bound xchg dec or loop or inc sbb mov stos pop aam mov mov xor orl flds pop sub lock cmpsb xchg insb sti rorb cmpsl adc xchg jbe xor sbb inc jb xor mov adc ret test repnz test ljmp rorl dec adc pop jne (bad) lret dec adc pop jnp pop cmp inc rorl mov mov and mov mov out loop test shlb inc (bad) add cmp ret ja repz mov outsb mov adc mov fnstenv adc es mov ret xlat sub mov aam mov xchg lea xor adc stos ret rcl andb ja add jae xchg stos ss dec add (bad) push mov cld pop add (bad) andb movsb xor je test push movsb stos gs insl or add cmpsb push adc std test ret pop and stos test cmpsb dec mov arpl mov stos or mov imul rcrb rcll inc popa inc adc sub and mov jae or xchg mov roll pop mov xchg test lret cmp (bad) xor xor (bad) cwtl fsubl xchg les movsl sbb daa mov cmpsl rcl mov mov (bad) cwtl (bad) ss adc cwtl push lds push push lds mov push scas out push push jbe inc add dec js mov lret mov mov add (bad) mov (bad) lds (bad) mov mov mov push pop adc ret push into mov gs ret hlt mov or in xor int3 ja mov jns add and insb jg (bad) jae jnp cmp add mov cltd mov jge pop hlt bnd jmp mov add fadds cmpsl divb cmp stc out sub orl movsb sbb loopne inc pop jnp xor add lcall xor int3 pop xor mov bound leave mov fdivl fcmovnb orl lret sbb arpl (bad) enter lret mov aas adc mov pusha mov xor mov dec sub xor shrl sbb sub je aam dec call cmp imul sbb ret xor in mov jecxz push jmp xor ret pop outsb cwtl push xor rcrb inc mov popa dec mov mov dec rolb ret add cmp das xor mov mov mov add cmp iret and push xlat xchg cwtl rcrl insb sbb cld repnz xor sub add out xor inc xorl xchg add movsl add (bad) jne adc jmp adcl inc push aaa sub xchg stos fmul ret mov adc ret inc inc arpl stc jmp movsb adc negl cmp jle push (bad) mov jbe repz stos negl mov inc cmp rcr in inc stos adcl adc xchg sbb jbe movsl add fstl pop mov arpl ja rcl inc inc push or leave mov ja pop mov xor subl push stc pop mov pop inc xor push inc push sbb pop mov pop inc xor push inc xor es mov test sbb inc repz add inc scas push mov sahf or mov rcrb mov mov xchg push leave mov (bad) movsb jge or loop push les movsl (bad) sbb lods addr16 jmp adc push xor popa push mov js xor cwtl popa inc push mov mov sub push mov movsb loope adc adc loope adc push mov cwtl adcb mov mov ret push inc sub in add inc stc nop inc roll roll inc xchg inc xor mov dec nop adc or push adc push sbb inc pop jae dec cmp (bad) ja aam mov mov add mov arpl xor jae stc jne movsb and or and inc xchg lds cmpsb add xchg xchg cli xor addr16 out div popf out sub jae mov mov add pusha cmp sbb hlt nop aaa mov inc movsb inc repz push bound xchg xchg jnp jnp jnp ret jnp in xchg insb sub jnp xchg jge mov xchg inc hlt xchg or add (bad) fwait ja sbb sbb fwait sbb adc cli addr16 inc push inc insb xchg jp fwait mov xchg fwait pusha mov out xchg cmpsb lock repz add repz cmp cmpsl add xor aas cmpsl add jae xor cmp xor je jne jae mov mov aas and push and test inc shll and mov ss cmpsl fcoml dec sub jbe movsl outsb xchg scas push je mov mov lods cmpsb dec aaa aam scas push cwtl sub inc cmpsl aam stos (bad) roll xor ret xchg dec inc mov add xor movsl mov cmpsb fildl jae inc mov loope not xchg cwtl inc mul roll int inc mov (bad) cmp sub cmpsb xor mov aad cmpsl cmpsb mov xor (bad) ss xor mov in ret jne popa movsl cmp inc and mov jae scas xor movsl xor aad fs push (bad) ficompl sbb cmp add jle add adc push int3 jne popa gs popa imul adc mov stc sbb inc xor jg push mov inc jb outsl dec cs lods mov push int iret inc xor mov inc outsb pop aam inc xor ret add add xchg push jp ret xor pop sub xor add push test mov (bad) je xchg lods jecxz fsubrl xor add mov pop scas add (bad) mov add xor subl add testl (bad) xchg xor cltd andl insl dec push mov inc cmp xor cli push add repz add testl ret jne aam dec sbb ret jo xchg add insl (bad) xor lcall loope push sbb pop mov cmp xor and fwait mov sbb (bad) adc xor fwait mov fdivr js leave mov mov mov mov outsl jo out mov int xchg xor sub xor add adc rep stos mov xchg cmp aad mov jb xor sbb jg push mov xor je jae cmp pop sub les fdivrl popa dec ja push popa cmp dec cwtl movsl xorl sbb xor dec dec lea enter arpl jno insl js stc mov inc adc shlb push popa imul imul enter imul enter das shrl data16 cmp enter das shll addb (bad) cmp pusha xchg negb pop fadd imul adc cmp orl inc xchg or add repnz mov out dec push mov inc dec push xorl add arpl pop ja mov dec leave sub dec jp lcall in test std pop aam addl adc push inc icebp push (bad) jbe or sbb nop notl mov loopne (bad) icebp pop flds roll sub mov cs roll jp push xchg (bad) gs adc gs loopnew mov cld in push dec sub add lea and or stc mov icebp cmpsb test std xchg lods or dec sub xchg inc cld lahf sbb dec inc loopne aad and cmp add (bad) mov or addl fldcw ds call jge les test jno mov inc add sub into pop js mov jns and gs sahf add xor flds stos jp sbb ja scas bound and pop adc ja arpl stos inc cmp or dec shll add sbbl mov dec into std or gs movsl pop cltd and sub andl mov push rorl adc add push in jno (bad) (bad) mov scas adc (bad) push xchg inc dec mov inc xor mov xchg addl inc inc mov add stos andl sbbl cmp add sub mov test test int sub mov sub xchg call test push xchg xchg push adc xchg add dec and jnp or ror enter jnp jae stos add or (bad) sub test out imul loop inc fcomp incb jb cmpl add inc pusha push xchg add in ljmp adc add xor mov sbb add in (bad) and arpl cmpsl bound fisttpll sbb gs inc jnp push push mov stos pop mov mov andl cmpsb in ljmp fs mov push mov sub dec mov mov (bad) lock xchg and xchg cltd cmp jecxz or daa imul out fxch xlat inc loop push ret inc loop push xor fincstp inc test orl xchg cmpsl sar adc andl inc hlt xchg mov (bad) (bad) mov dec loop xchg pop jge mov xchg sarl sub jmp mov aam icebp mov fcoml jnp sub xor jno in test popa and (bad) pushf and (bad) pushf andl (bad) pushf xor (bad) xchg (bad) mov out fcmovnu loope inc lret fldcw icebp ja push inc mov mov pop adc in mov adc test adc xorl mov mov sbb xlat lea mov sub in xorl add cmpsl sbb sarl adc lods icebp xchg jo mov adc xor clc loopne xchg or popf sbb or jb push adc loope ret xor xchg jp push mov push js mov xor sbb xor cltd jmp and inc add imul cltd jmp icebp jp sub inc mov ljmp (bad) jo jnp or adc jnp mov notl xchg inc hlt add adc repnz mov mov jbe push push jp pop mov jb pusha repz pusha adc pop pusha adc lods jge rclb es push test arpl pop xrelease xchg or (bad) in loopne xchg jo loope movsl (bad) push push push sti adc xorb mov out cmp push pop jnp andb pop and jno repz pop and jno add inc push (bad) movsb add pop jb xchg out push sti adc pusha adc rclb aam daa add pop jae pop jo xchg shrl sar jmp aad daa add mov pushf daa add adc jo popa jp mov jl add add mov push inc push push mov outsb sub and jno xchg add adc mov xchg push cmpl (bad) leave push push push push push and adc inc add or or mov cmp lea mov jo xchg pop cli pop out push mov adc inc mov cmp push xor mov push (bad) movsb or cmpsb loopw lds cmc pop inc les jae popf push mov push mov jb mov test cmpsb fs cmp adc and push add xor movl pop daa cmpsl add pop inc add jno jb (bad) daa ret adc es push sub jo inc push int push jmp jb je push pop insb inc add inc movsb or mov aad rclb aam daa add push ret (bad) pop jo aam lret jle mov imul pop jno push cmp gs add or cmp mov or mov jmp divl dec push mov test adc xchg lds ret adc jno daa ret adc pop and push lds xchg push or or add jnp loop jmp push pop int jbe bound push stos jmp call add push jb sub pusha sub jb in push loop (bad) enter push popa jno pop xchg sub stc in jno pop dec push inc jbe xchg sbb mov (bad) cmp inc push adc sub and pop icebp call adc push lock jmp jmp in ret enter fldl push dec adc cmpsl ss push rclb xchg jb lods cmp cmc pop dec mov cwtl mov add sti push in pop pusha adc inc jno pushf xchg loopne jns push lods cmpsb testl test add jmp push bound jmp test and and mov mov jno in push pop dec jle js aad cmpsb sub mov pop dec jo js jne or xchg add mov push mov jno (bad) mov xor mov jo jae sarl inc jno mov sub jno ret pop mov inc mov testb mov sub repnz sbb or (bad) lret xorb ja lock pop daa les pop les test jae adcl (bad) jb lds jb test leave inc js movsl adc and js call loope fcmovne dec and loopne aam sub mov jo push call add sahf inc jb leave dec and loope dec enter xor fimull jb leave dec and jmp inc add xorl pop enter inc (bad) and test leave dec and push or push (bad) repz repz ret push mov xor hlt cmp jno jne (bad) add pop leave xor cli ror inc push (bad) fsubl loop xchg in xchg inc inc jne mov lods add hlt cmpsl xchg push lock cli testl test cmpsl inc je dec lods (bad) mov push mov div pop xlat inc divb mov inc les jp dec adc pop inc push inc jbe dec cmpsl inc aam cmp jl pop ret popf imul xchg inc sbb dec jp stos (bad) cwtl xchg sbb push jl dec clc clc loopne xor out mov ss dec (bad) xor sbb dec pop pop sti mov enter jl lock cmp in cld sti in inc int xchg arpl mov sub mov jp xchg sbb mul push cli bound mov push and xchg repz mov arpl adc inc sbb insb xchg jp mov fcoml ret xor sar lods loopne sarl add gs mov jns xor xor stc inc mov in inc jb fisub xchg mov sbb insl lods (bad) repz inc sbb pop in leave (bad) jae test dec jo xchg add arpl jne stos fcmovnu shrl jne imul mov int adc fisttpl (bad) mov mov add mov sbb jmp mov adc dec sar shr inc mov icebp mov ljmp xchg mov mov popa mov push icebp mov mov rcl jmp sub jno dec xchg cmp xlat enter mov inc mov nop (bad) cmc mov stos cmp rcr ret jl adc arpl lods mov push jmp sub loope mov clc mov adc and test dec cmp add jno lods and movsb imul or imul xchg test xchg test mov out push int3 subl pop cmpsl or arpl lods es stos or movsb fwait mov inc pop sahf pop jle mov repz mov jno and popa fdivrl xor or push es out sub inc jbe dec jno ss movsl repz jns xor and and aad cmp and xor jbe and jo repz jae adc mov pop bound or sub jae lret fidiv jno mov mov push enter stc jecxz ficom mov test push pop pop and mov sub jae jmp out mov inc aad or jae push cmpl mov and sub xor inc mov xchg jnp pop (bad) jns xlat gs (bad) and jne xchg lcall and dec rclb js adc inc shlb stos mul mov inc js jne mov mov add mov add pop and in scas adc scas or and mov cmpsb jle jle sbb aam mov mov nop push js inc shl adc xlat call mov loop xchg out push ror xor fistp js cli lock sti xchg les or mov mov jnp mov fidivrl and jp push and xchg scas xchg jo jae addl lret xchg scas outsb sub adc roll mov es pop (bad) jno mov mov sub add pop loopne sub xchg mov test mov cmp sbb (bad) bound or xrelease xor shrl jg (bad) bound jne push lods rorl pushf pusha xchg test jne ljmp xchg mov aaa push mov cmpsl push dec mov fisubrl add or lret xlat mov jbe,pn push pop mov shlb mov xor stc mov gs inc fsubs xor and mov push scas adc xor ret fadds cmc jnp fsubl es fcomps fmull push and cli or adc push repz dec aam xor adc sub das adc mov outsl xlat xchg les (bad) sub mov adc or mov vpavgw sbb js mov (bad) ljmp adc mov jo out inc jge xor xchg pop outsl mov imul xor inc dec (bad) mov cwtl xchg pop std cmpsb push mov xlat jmp mov out flds add dec negb ret in sbb sbb (bad) cmp sbb loopne imul out (bad) mov loop lods std ss mov (bad) mov pop and imul imul je add mov adc xchg cmc add xchg cli lret inc or jne jns test rcr pop mov addl (bad) and rcrb mov sbb sub cmp or imul loope add call or or leave sub inc push inc xchg mov push movsl inc ret xchg mov xchg pop sbb jle push push add push sub shl mov shl mov xchg shl inc jecxz add xchg cld cmp add in ljmp rcr ror cmp (bad) bound stos jle orl rolb or rcl dec jbe cs test xor dec push xchg adc sbb sub add std add les pop sbb inc xchg cld lds xor sar mov sbb and add stc leave xchg ret leave data16 movlps mov jg xor rcl add pop jns push rorl adc out clc cmp cmpsb cmp push (bad) inc cmp xor shl inc mov mov push adcb adc sbb push shlb daa ljmp fwait in inc jae adc cmp inc inc push or je and sbb js cmpsb psubb (bad) push imul int3 and cmp sbb xor xor in and lock stos pusha jne loopne jae loopne (bad) adc and mov or popa push jb testb ret cmp nop mov leave mov jecxz inc ljmp dec aad push mov cmp pop xor sbb and add mov sbb jbe sti test js ret fidivr test pushf adcl xor push (bad) enter sbb push lret lods sbb xlat cltd jecxz jbe in push mov out fdivs dec sbb ljmp xor jge data16 or push and mov and xor (bad) and aaa jo xchg and addb push repz andl add out lock inc test xchg xchg lahf lcall popf lods mov andl xchg xor fcmove std cmp rcl ret cmp (bad) stos fisttp jbe incl xor sbb xor jbe dec adc loope xor rclb ret adc or pop pop add mov jnp mull ret cmc scas mov ljmp addl imul rorl lret inc dec test rorb add pushf or pusha bound test std xor cmpsb or int3 movntps mov jo jecxz inc add mov lds rcrb push inc clc loopne add lock xchg sub push sbb inc fisubrl sbb push (bad) popa out movsb lods mov ret ja push je mov or lds cmp push scas inc add movsl out dec nop lret add sarl push xor (bad) and sbb jae pusha (bad) loope dec iret xor repz and xchg mov fistl sbb sub pop fsubrs sarb dec stos jle inc movsl push (bad) clc sti roll pop les orb xchg nop inc fildl ss les movsb stos mov sahf cmp ja orb mov mov mov aas (bad) cmp test push pop mov das pop into push add sbb and lcall or (bad) or add lahf cmp das dec mov incb scas imul outsl jmp stc dec or shr sarb xor cmp and inc add or add das (bad) bnd xchg rorb inc adc xor pop sbb rcrl test and movsb cwtl loopne cltd stc cmp inc add mov sbb push outsb pusha pop or scas xor (bad) lock pop inc xor mov aas mov pushl adc lcall pusha or jg arpl jb sahf fiaddl rorl jns lcallw stc (bad) jbe fsubrp inc hlt push cmp adc fisttpll js sbb stos mov mov dec pop pusha stos lcall das or jl nop and adc sbb sbb xchg adc inc addr16 dec add push (bad) stc dec add mov in dec outsl (bad) imul xor testb jl dec ss push imul clc stos pushf or cmpsl enter lcall sub nop loope adc in test xchg rclb shl fwait mov clc inc mov fildl loope inc clc dec aas lret dec dec add sub sbb lcall pop (bad) icebp js and das test std lods imul lahf out mov push andb push andl sub cmp scas mov and decl (bad) xchg cwtl or jp xor arpl mov pop mov sbb lock out outsb push inc out push inc lock data16 test adcl in iret int inc push add mov rclb jl dec sbb das test daa sahf stos xchg rcrb rol das xor cwtl or loopne sub mov loope mov mov sub lea mov dec xor rolb (bad) jg sub movsb cmpsb add dec outsb sahf pop call rol xor pop ret cwtl enter pop mov and xor shlb loopne mov or stc sahf scas pop call inc sahf aaa xor or cmp add cld sub rcrl push std xor and sub test and push mov push add inc movsb popf rcll mov or push enter test test push jo (bad) in inc sub inc adc push cmc js xchg sub add out fisub fs outsl bound je rorb ret xor push (bad) sti mov stos pusha test dec ret test or inc xor js pop test or inc ss dec loope hlt and stos shlb roll cwtl inc test (bad) dec sahf push push fsubl mov add mov push mov test popa add cmp insl (bad) push aam jae sub imul test inc roll imul gs or or sub xchg lea or loope or push cwtl xor xchg pop push test and mov push sub fldt fldt fldt pop ss push sub cmpsl cmp mov jmp les out jmp pop add push sbb push je sbb loop leave and mov outsb and int idivl push sahf inc bound mov xor (bad) in push sub adc or cmp inc dec xor idivl (bad) enter or dec add mov das push repz rclb adc (bad) in or mov lret or jno (bad) notl data16 mov test std frstor jne sti lds data16 mov (bad) andl pusha inc (bad) lock cmp fwait sti adc ss sti mov or adc mov push push (bad) faddp cmp enter dec cmpsb std fsubs sub or push sahf inc bound gs adc xchg push push stc mov sub testl enter (bad) jb cmpl ds xchg into sub or mov pop inc add sbb fcoms jp insb cmp scas pushf pop sub inc aad sbbl jmp inc cmp call or inc cmp repz or dec xor dec adc xchg nop xor pusha add xor xor cld xor cmc and sbb adc mov xchg push push push movsb data16 (bad) idivb dec or inc lock and cmpsb or aam cmp aad sub mov sub add ret jno xor (bad) aam sbb cwtl mov push movsb and jo call xor inc add add adc push jbe cwtl js pop jbe data16 pop push sbb sbb test mov push push sbb adc push cwtl push jle js jno cld cmp cmc mov adc in adc clc rorl jae sbb js pop mov cwtl xchg js jg xchg jbe icebp mov icebp inc call push cwtl cwtl dec lock popf jle test mov sahf shr push pop es xchg js xor inc cwtl cwtl jnp in adc xchg hlt fcomps cmp lea push cmpsb mov repz adc ja in jle xchg pop push cwtl cwtl sbb pop fcomps js dec test (bad) (bad) ds xchg pop cmp js mov test cmpsb inc xchg mov es repz dec cwtl cs repz push (bad) jnp pop cmc sbbl and cwtl das sbb repz adc ja in jle jl pop push js adc push pop fcomps js dec test (bad) test or orl push (bad) jge cwtl inc and imul pop dec push xchg jae cld cmp fdivp push ja aad sub ja cwtl sub inc jnp loope cli dec mov and cwtl das sbb repz adc ja in jle jl pop push jns cwtl adc push pop fcomps lret js dec test (bad) test data16 gs mov and pop cmc rcrl dec lret rorl pop xor adc xor adc addb fstl popa inc mov ret adc jno sub and nop rcll sbb jno popa inc jl mov mov and adc xor push dec cli loopne addr16 arpl mov inc popa xchg popa loope lea inc sbb adc sahf mov cmp aaa imul rcll inc roll adc fmull jae pop xchg hlt fcoms hlt cmc out add rcrb push sub in test mov dec cli div outsb lods dec icebp dec sub lret mov dec pop sbb enter mov es inc hlt fldenv push inc dec dec sti pop aaa lret pop and adc sbb into sti xchg dec mov repz (bad) push rcll push add stc aas mov cmp pop cmp shl sub std ret adc cs shl scas data16 std add adc mov (bad) rcll popa dec jae sbb adc dec repz decb sbb sbb repz xchg cltd mov xchg add orl inc into arpl roll lcall cmp inc into push push movsl or test shll fcomi popf fwait and rcl lcall pop dec je mov roll (bad) repnz push push mov push mov lods rol xchg repnz imull push andl add mov push xchg pop xchg and and (bad) repz and jb sub (bad) push (bad) repnz rcl scas dec mov push mov mov push mov jns push jo test cmp mov std inc fcmovnu mov mov hlt mull jb mov rep adc loop xchg ret xor clc loop xor aam repnz xor in fiaddl lock repz (bad) hlt vcmppd pop rorl and repz adc xor add shll adcb mov arpl or cmc call (bad) xor mov orl add inc vpaddusw sbb test orl mov push hlt mulb hlt clc ret cmp add inc cmp ja cmp xor cmp inc and call sub mov pop mov movsb xorl pop and out negb andl orl leave insb jns je repz mov movsb repz sub cld leave mov call leave clc lods sub cmp or int imul testb dec pop and jae sub sbb jno inc mov xor addr16 sbb lret rorb mov xchg mov xor (bad) rorb pop scas mov mov xlat pusha xor call movsb test xor cmpl cmp xchg lock icebp cltd pushf sub mov pop adc fstl loope xchg sti pop inc jno pop and mov inc push jl xor inc jb inc (bad) and inc ja xchg lea inc daa xchg (bad) xchg xor jb xor jp push bound xor jmp and mov lcall jne mov loope (bad) xor xor cs sub mov inc jge jle in push adc notl pop ja inc loop jne ja test gs xchg add xchg rorl rorl (bad) jae loop jge jae sub (bad) js xchg fs roll je mov sub roll aaa sub and xchg fs inc js mov cmc mov inc sbb adc xor je dec dec nop push sbb adc jae and mov sbb push (bad) jae jae test (bad) cmc ljmp xor adc xor and je inc js and in jb adc fsubs adc xchg aaa fs (bad) js es (bad) xor xchg movsb dec inc and xchg aas mov pop push inc inc jne lcall js pushf jae jnp aad xchg movsb inc jmp xor ja dec dec nop push movsw sbb add es adc push jb add pop adc mov adc cmp scas scas scas cmpsb adc fwait xchg mov fs dec xchg mov xchg mov cli (bad) scas and and arpl (bad) xor and inc out cs jecxz testl push shrb idivl cmpsl jb out je int3 loop test repnz (bad) jb test mov sub adc fs dec fwait insl imul fs jb pop bnd leave cs push cwtl adcl mov mov int3 mov xchg int nop outsl jnp sbb push sbb push dec adc inc xor jmp jb in mov jb and lods movsb out sub mov mov in or rcl jb fnsave loop pop scas je mov loope add mov pop lods data16 add dec push jb or data16 stos or cs mov lods push out gs jae push mov xchg scas popf pop scas lcall xor jnp insb test loop pop mov mov sbb jo mov ja jg je xchg dec (bad) add adc addr16 jnp jmp xor outsb jl sub dec stos loope int3 test test fxch xchg or add jb xor adc mov pop sub pushf jae push adc shl jae jb shll jge in aam jo xchg add fdivrl xor push cmpsl mov roll rcr adc aad dec (bad) es (bad) cltd test (bad) aam add loopne sbb mov fmul lahf dec lret push rorl cld enter mov ds out aam fs mov xor test ret push pop xor push pop jno popa loope imul fsub sbb sbb je (bad) cmp add jmp clc cmc loop call push pop and cmp rcrb rorl inc cmpsb push imul pushf cmp dec insb pop mov xchg fidivl inc mov cmp sbb or (bad) iret insb mov pop mov addl dec (bad) sbb sub mov flds dec jbe dec ds mov xchg push mov or mov test stos fwait add insl in shr dec lea adc rorl (bad) es jmp adc ss loop shl neg lcall es cmp mov push shlb cs shll aam xchg xor jge push pop andl inc mov push jo and addr16 mov xorb jns fucomi cwtl and xor adc roll dec sbb rorb les jl jb mov or push adc add pop int dec and (bad) in repnz xchg repnz push ret dec loop adc inc cld movsb sbb push adc add fildll aaa andl sbb ja dec movsb adc outsb xlat mov mov adc popf mov roll or jge fs mov sbbl movsl xchg xchg mov and clc lods and dec xchg sub pushf dec rcll mov clc subb pop push fwait xchg ret (bad) insb arpl mov pushf cmp rcll arpl or or mov sub loopne pop pop cmp push add in fcmovnb sahf ret data16 (bad) push sub inc cwtl inc mov jo xor jne movsl (bad) mov mov xchg rcr inc fimul and and inc xor lret (bad) pushf xchg fwait xchg jecxz insb mov xor (bad) mov out and in (bad) jb add xor or or popa push push neg lcall in fsubrp shlb inc push shrl push push ret jb jb and cmpsb pop adc jne jne jne je je push pop leave (bad) (bad) (bad) fnstcw repz push aaa add ret and (bad) jb pusha lock sbb cmc leave mov repz xor xor xor rcrl mov sbb cmp xchg push or repz scas bound divl lcall cmp (bad) rorb shl roll ret rcl mov jl and ret inc out or fs push xor ret test add les push cmp inc jge fdivl push mov loop inc sub mov xor pop or test movsb pop pop loopne xchg rcll ret lret jno jb sub sub rcl dec rol xor fildl xchg or push cmp xor movsb movsl ret sbb mov jno xchg push movsl test fwait test xchg and jno inc cmpsb mov dec cmp inc push test pusha mov mov push dec sub or in xchg test mov jbe mov data16 sbb inc inc inc fs stos cmp test stos adc rolb push lock imul pushf mov repnz inc jp scas xchg imul rorb popa cmpsl adcl pusha mov and aad inc js cmc mov loop mov int mov inc hlt daa andl mov aam aad sbb dec stos xchg jl (bad) lcall xchg sbb movsl mov test fstps or lds cmovno (bad) xor repz (bad) imul inc add sbb sahf pop cmc inc xlat mov shrb js dec adc jns loope rcl mov cmp lcall lds rcll (bad) pop mov add push sbb and loop add mov or pop inc xchg int xor stos push fisubl sbb test add inc adc add orb or fwait add cmp enter and test loopne push movsl push fimull test adc add aas test roll sbb scas sub and lret xor popf fwait push fs dec out cmp fwait sub sub adc or rclb rcll mov (bad) movsl push rcll (bad) xchg mov jbe or loopne mov fadds pop cltd test adc loop adc cmp adc push pop paddsw (bad) dec xchg dec push rcrb and sbb sbb jbe fsub push fsub outsb push test push pop jp add push and adcl mov xchg (bad) jo inc mov int3 push xchg pushf (bad) pop lret push xchg sbb insb outsl adc add mov xor js das or les stos add adc rorl sbb adcb scas inc pushf adc mov ss adc test and imul std pop and not inc or or shll and lods ret popa and xchg push mov inc sub dec xchg cs xor arpl and sub and inc dec cltd popa and adc out popa jno mov and xor xchg xor or (bad) js push jmp loop lods mov inc inc cmpsb loope adc dec mov xor popa push loop outsl outsl outsl outsl outsl outsl sbb jbe jge leave fildl clc arpl jno lcall jns into lahf outsl imul jnp sti (bad) aas jno jp mov repnz jo mov jb (bad) fistl jl or jp fildl inc lock (bad) sbb int3 int js xorl xchg stos bnd lret add sub dec rolb rclb fildl cli je adc sbb push sub cmp mov scas pop pop cltd dec insb test stos cld dec and adcb call push inc push insw out inc add call xorl subb push faddl scas adc mov ljmp inc negb mov lret or mov mov insl lret lods mov dec shll mov push arpl mov out cmpsl out daa mov dec lods xor sub (bad) stos mov jb int and push and hlt or xchg jno testb mov pusha xchg jle iret dec mov or dec movsl mov in daa test sbb xor pop fldl sbb fsubr or mov mov mov test cmpsl test sbb aaa push xchg inc (bad) pop repz push or repnz mov (bad) int shrl jge xor addr16 subb pop sbb insb ret rorl and test mov (bad) fcompl repnz test fmuls rcr mov rolb (bad) (bad) mov or push jns aaa mov jb mov adc sub test ss sar hlt adc mov aad sahf or ljmp (bad) mov mov jbe sbb mov jl mov aaa dec adc scas sub stos push jno pop mov adc push inc mov add loope jecxz cs mov (bad) nop into jnp push jnp adc jbe lock lea inc mov jecxz jbe sbb mov js ljmp mov mov dec pusha or cmp fldl adc or ljmp pop clc mov arpl or pushf fidivl inc inc jp lret push loop fs xchg addb in in and lds subl mov sbb inc (bad) or in xchg jae xor lret mov xchg and repz std mov ss lret jne mov xchg cmc add gs ljmp xchg adc cmp xchg cmp icebp xchg sub jnp ret loop pop clc mov arpl or pushf fidivl inc inc jp lret mov dec repnz (bad) mov ss sub aaa cmp push jle addr16 mov sti pusha or dec lret ret std shrl push es cmpl bound xchg inc xchg mov xor pop icebp movsb cmc add mov add jl adc (bad) mov cmp jecxz sub mov jns js jne add rorl push test int mov push sti mov mov (bad) cmp (bad) stos aaa aam dec popa lcall inc mov xor push inc sub ljmp loop popf test arpl xchg imul aam or rolb adc repnz pop mov addr16 test in in es fincstp mov repz xchg loopne lock call mov loope mov rcl aaa dec and hlt add xor pop and ss sub xlat cltd cmc enter test or es mov mov addr16 mov push push (bad) lock jecxz mov (bad) rcl ljmp adc or mov push (bad) inc add add sarb idiv test ljmp addl in fwait add sbb shr xchg cmp xchg arpl fdivr jmp rcl aaa dec and sub xchg and std xor sub es mov mov addr16 mov push push (bad) lock addr16 adc jb jmp notb push push mov data16 (bad) xchg stos or sbb sbb fstps sti ret jno in rcl jecxz xor daa in roll fcom jp rclb pop in test pop mov jmp loop test flds rol insb cmc jae imul test pop mov and inc popa imul xor or pop mov and lds xor stos sub dec push dec cmpsb jl and mov gs jns xor push or adc pop push insb inc lock push xchg add and bound and sub shll arpl inc shlb mov sub cmpsb push push in shlb mov cli inc jae shrb fwait fwait fwait fwait xchg sbb push sub and sub movsl fwait fwait xchg and add mov and and dec dec inc ret sti fadds bound lea mov jecxz jecxz cli mov fisubrl mov mov cwtl xor sub aaa sti jnp in and xor inc push ror jb fnsave in inc in inc lcall adc test movsb dec lret orl dec stc add loope and sub (bad) or add ja adc andl adc and leave pop mov and sub jb and adc repz std xor jge je ss add and fs adc sti dec lcall dec in xor sti test cmpsb mov push out cs push push ret dec ds mov test and imul and xorb xchg inc clc jb xchg test shlb aaa test test adcl xor push test add lds add stc ja int3 sbbb xchg and in add inc xchg es enter or cmpsb fcmovu add inc xlat adc cmpsb fsubl ss aam loop adc repnz cmp repz xor fwait fwait fwait xchg mov mov add add sub fs insl mov fwait cwtl (bad) and gs andl js pushf pop push and fldl and mov mov in or lea imul xlat in out pop shlb and and (bad) call and mov fcomps loopne out or push insb and insb out add xchg jae and jae adc cmp icebp jl push mov adc fwait sbb sti sbb push and and xchg sub jl and imul add dec mov and sub arpl mov jno mov mov es cld fdivs and imul lret and push inc push xchg daa cmpsl inc cmp mov andl out and xchg addr16 insb jp sbb popa jb dec mov inc jae mov lret int3 and fcmovnbe loope push pop xchg lret xchg fildl sub sub xchg aam fs mov hlt xchg test cltd add push jecxz adc xchg mov cltd push cmc jmp push sti or push call pop cmc jae and pusha mov addr16 bound dec and mov push jbe aaa adc mov enter orb lret push xor xchg mov sti and and lods add loopne adc mul sarl testl test hlt jp dec les ret fadd mov lret ret cli mul popa cld dec jbe inc leave sbbb lret ss cmp int3 imul xchg sub sbb pop mul xchg jno out xlat sub stos (bad) leave mov and add lret cmpsb cmp data16 sbb out cmp test add or test jmp aaa lret push mov adc xchg loop lds push adcb inc dec movsl inc xor sbb adc in icebp add inc test es sub sub out int3 sub (bad) scas inc dec cmp mov push and mov mov mov dec mov aam dec test inc out adc sbb jb inc (bad) mov mov add aaa or or (bad) mov cmp adc add cmpsb lahf in push and rcr cmpsl push add mov push outsb jg dec xchg xchg clc int push jbe push test cmpsl sti adc and subl pushf mov ja into pop dec cmp addr16 sbb dec imull adc movsl add movsl or push jo ficoml in add ret ret push dec popa loopne das test movsl push inc mov std lret loop cli xchg add fisttpll xor test adc popa fbstp out fsts in sbb push push std mov mov and cmpsl add mov lods push mov or or popa fdivrs add add mov fwait lahf in push mov mov adcb xchg ljmp es jg arpl (bad) pop and xor adc sbb mov loop mov mov push mov jge push adc mov femms (bad) fwait adc push dec mov inc shl xor adc int3 add pusha mov lods inc imul inc fs mov inc mov inc sbb jae jne jns lret fildl cmp xorl daa or or mov mov inc sbb adc add add mov dec pop xor aam mov inc inc nop addb inc pop rclb adcl inc add cmp mov xor mov add out sub inc or rolb or pop xchg insb ss xchg push cmpsl jge fcomps pop push mov aas mov int ret xor pop insb xor xchg mov xlat imul add imul pop xchg jnp or adc inc lock or pop adc add mov loope cs test jmp dec sarl call mov or jl mov sbb enter ret nop pop shll dec lods adc imul xchg inc test add add inc pusha mov pop push jo mov and leave das rorb or push sub push pop add pop inc sub jne lds mov lds scas xor shrb add jo add das test and and fildll inc mov pop jne xor push das into pop jne xor mov jbe or ret mov fldenv cmp pop scas call inc xchg inc (bad) sub xchg ja dec mov cmpb xorl dec sarb inc dec xor mov stos hlt inc add movsl aam les mov jge jbe loopne pop shrb sub add dec repz cmc add call pop xchg lods pop pushf mov xorl aad sub dec divb pop mov test and cmp pop inc fildll mov (bad) loop fisttpll inc jl mov pop jl in pop out sbbb mov dec jle in push sbb adc xor jb fbstp insb sbb cmp (bad) xlat out push or (bad) imul adc mov mov idivb mov pop lret add lods shll add loop mov pop mov xchg test pop dec lods jle add mov inc inc xor push sbb fnop mov xor cmp adc dec mov mov mov bound ffree adc push xadd fnsave xchg xchg lds xchg ljmp pop in lods (bad) sbb jne xorb mov pop ret sbb inc sbb test jae mov xchg jae bnd cmpsb and call cmpsb or xlat dec sub outsb out push sbb sahf xor lock andl popa and popf ss mov jae add mov dec (bad) xor sub mov pop aas add jnp pop popf push ret mov dec mov cmc push adc std inc cmc sbb push mov int push add ret icebp clc dec js popl bound xlat in xadd nop leave jo jg adc gs lock or pinsrw xchg add push das mov push jl jecxz loopne xor mov inc (bad) ret xchg (bad) fildll clc lock test fs pop (bad) xor fdivrl test add ljmp jno xor pop add lock pop (bad) loop mov jo jmp sbb clc pop or in (bad) cmc push adcb xchg or or lock test pop pop (bad) push sbb mov dec pop add xchg repz xchg mov push add xchg lock or cltd cltd mov jmp cmp adcl cwtl push push dec mov add and or cmp cmc and sub sub inc or outsb test fisub pop pop mov je dec imul mov movsb add and cmpsb int3 xchg sub in jb aam lret add in lcall xor shrb movsb andl cltd mov sbb lret ficomp pop push es cmpl push inc sub ret arpl xchg test ja and mov jg and sti outsl sbb (bad) ror jb xorl aam cmpsb adc mov cltd jne and jp leave xor dec pop pop sub pushf mov pop fwait or mov push cmp sbb inc and in push or push insl es fimull jle fwait (bad) push leave inc jno jb mov jne and test adc es push mov sahf fwait xor orb fdivs mov dec push add cltd mov loop mov xor push add push cmp movhps in push jne sub int3 xchg sub xor xchg jb aam lret add in lcall xor mov dec pop ljmp notb icebp aam push pop insl sbb sub jns pop mov jge cwtl and and gs mov mov mov mov adc mov fcompl inc inc outsb test mov call test adc xchg (bad) inc test out pop cmp xchg jp test mov cltd mov push jne and add dec mov notl shrb movsb andl cltd mov sbb lret push jns pop mov cmc and outsb out add pop roll fwait xchg fnop sbb outsb lret mov mov (bad) jmpw fwait or (bad) mov nop lds add xor stos imul and mov mov rorl rolb scas adc mov and leave rclb lods sbb gs popa mov mov dec or or push sbb adc popf dec imul sbb pop mov (bad) mov imul imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb das sbb cmp imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul cmpsb lcall imul sbb add mov aaa add xchg insb faddl xchg repz (bad) aaa add or pop shlb mov cmp int sbb push int sbb xor add dec mov cmpsb cltd pusha mov popf lret xor mov or pop add mov lods lcall push jae mov add lds jmp les je (bad) rorl add push insb fadds popf mov fwait add (bad) mov or add push gs popf mov pop push pop lods andb insb aad popf sub add push push xor xor cwtl mov add lds sub lcall xor pusha sbb movsl insb roll cltd imul mov or bound push mov movb out add inc mov push fs into and nop lods pop cmp mov mov cs xor or (bad) pop mov mov xor pop jmp cmp repz fisubrl push sub rorl push gs gs jns outsl add cmc push imul mov aaa shlb imul insl add adc add test cmp pop xor xor xchg insl nop sbb and ret fsubrs sbb cmp mov push mov mov lret pop jbe pop gs mov or sbb add sub push push dec sbb adcl cmp add xchg fsts sub mov sub or sub addb mov adc and stos jbe lea dec mov pop add inc adc inc test inc adc pop and fs inc adc inc adc or push mov outsl mov adc dec mov add icebp inc pop add ss pop jle sub push cld lods xor sbb subb push pop mov sub popf bound cmpsb inc add add lock mov or loop sub sub sbb and sbb add xor or aaa push lret xor dec mov sub push mov mov nop add stos rcll sub push inc nop leave (bad) ljmp lret pop add cmp sub add mov fmuls pop push lods adc fcomi add mov or out cmp add sbb or mov mov cs rolb sub and rclb add add adcl frstor inc add push or insl stc adcl mov enter push mov dec xor push nop or pop (bad) dec cmp mov mov xor (bad) fnsave popf imul nop subl call xchg push cmpsb js lods orb lds and push add push add inc pop mov xchg mov ss inc gs fmuls (bad) xor push push pop xor rcpps push mov scas cmp mov pushf or mov sbb ror mov cmp jo lcall xor and push add push enter mov pop xor arpl push dec or dec test and aaa popa add repnz sub and or inc mov loope pusha cmp (bad) outsb ret in mov sub fsubl enter rcr movsb mov inc or repnz outsb xor xlat scas movsb mov lods sbbb subb adc nopl inc mov pop or push pop loopne jo add movsb mov out and dec inc enter stos shr nop add dec mov adc push addl or push (bad) xchg stos ret or mov (bad) xor ret lds mov or cmpl cwtl adc xor (bad) fnsave popf imul nop andl inc inc and xchg or test and cli cmc jb das adc pop fildll ret lds lds imul inc nop fistl add adc cmp or adc cltd pop int adc fs mov add add sub aam popa aam pusha mov adcl loopne in mov pop lds inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc leave adc leave adc add fldenv add fldenv add fldenv mov xor loop sub and enter mov xor imul and add and push pop sbb gs les pop sbb gs les pop sbb gs (bad) adc fs xchg push or add mov inc or inc mov inc or inc mov inc or inc mov inc adc fs inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc inc adc add leave adc and pop and in xlat (bad) aaa (bad) aaa (bad) aaa (bad) aaa (bad) xor mov repz repz repz repz stos and lcall insl test insl xchg mov je inc je inc je inc je inc je inc je cmp insb push jp xchg out xchg out xchg out xchg out xchg out xchg out xchg popa jns arpl and and and and and and and and and and push jbe pop jbe pop jbe pop jbe pop jbe pop jbe mov ret ret fcomps fcomps sbb sbb sbb sbb call xchg jge clc jge clc jge clc jge clc jge clc jge clc jge clc jge pop jge clc jge clc jge call fdiv and pusha shrb or and and mov shr js sbb add mov mov and xor enter and xchg adc xor (bad) or das test (bad) inc mov and daa add fildl or xor call cmp imul sub loopne je fsts or or inc push and dec and lret test xchg cmp sbb push (bad) or popa mov sbb data16 les incb pop into cltd iret cmp fdivr jmp addr16 pop jne imul pop loop lds jg push mov mov cmpsl das jae xlat ja stc test sub xorl xchg fimull fdivr mov push mov test jmp clc mov sub fnsave cs aas jb fwait aas jae xlat dec jmp ja cmp cs sub hlt push jae mov ja js lods pop sarb mov lret mov jecxz mov mov in loopne ret mov mov xlat (bad) lret stos rcrb mov clc xor mov pop je ret shll sahf mov mov sahf mov inc fldt add popa mov sbb inc cmp or mov lea or add add adc jecxz jnp loope repnz add js ret dec cmp mov mov sub xchg rcll lods push xchg dec (bad) xor imul movsb jecxz arpl mov cmp (bad) xor mov add movsb push mov mov fwait mov loop adc or xor jg movsl push lea add int add lds fsubp fidivl dec cmp push lahf lea stos add lds fsubp out push dec ja mov loop scas je test rcr in or dec ja mov test jecxz jnp push mov push xor mov sbb ds data16 push mov scas je test inc divb cmp js sbb inc cmp in dec test sbb inc cmp ja cmp xchg dec jle,pt ja ss ret adc pushf sub fsubp fnstenv dec dec roll jmp aam les sub shll adc in xchg enter sbb out inc jnp jns sbb and (bad) repnz add int add and cltd ret mov dec ss stos push inc add dec movsl pop scas rorl mov stos mov ret pop in (bad) mov in dec cmp add pop dec xchg xor dec xor insl aam dec xor xor push xor add js,pt ret fmuls add push jns sbb inc xor movsb orl and mov (bad) xor in and sub mov sbb (bad) ss call or movsb xchg rorl rcl inc adc pop sbb push adc (bad) sbb nop adc dec into andl fs adc pop je cmp inc std xchg inc add fldenv rolb inc loope inc adc popf xchg xchg adc fsts jo inc std xchg pop sbb push aas gs mov xchg hlt pop add xchg adc dec and and push jo test cmp orl rolb sbb test aas push dec icebp rolb testl inc add adc jo adc das enter movsb dec fdivrl repz fldcw sub les dec xlat cwtl push out fs adc (bad) test lods imul icebp lock movsb jecxz dec sbb jmp lahf pextrw dec jl sub fbld jp sbb dec inc push (bad) sbb (bad) jae mov jnp lock add cmp ret fs lods inc dec xor xchg dec xor xor dec xor push jbe aas push xor add add sub adc add dec and add push xchg dec ss mov outsl mov add push in xchg xchg push adc xchg in xor xchg and nop dec roll inc fldenv mov mov jbe popf xchg out sub xor adc adc push inc mov je dec adc jnp ss mov inc add xchg dec cmp add out hlt popf xchg out sub xor add daa fs cmp jbe mov adc jnp ss mov bnd mov imul adc jnp icebp nop test testb xchg mov movsl sub loope (bad) repnz fwait rclb inc mov push rorl mov inc mov push sarl dec (bad) xor inc (bad) jo lods jmp fsts dec mov fsts jno push inc mov ret xchg cmpsb xchg loop inc mov ss into lcall dec mov sbb in cltd ficom or popf mov mov inc mov xor hlt xlat sbb das rcll mov mov adc jb sbb pusha add push data16 movsl push dec (bad) cmpsb rcrb xchg mov mov rcrl cmpsb out je sbb test (bad) mov pop pop pop mov sbb mov sbb jne scas push cmp inc mov popf xchg jbe stc xor and pop insb in dec pop ss pop xor sbb dec fsts push cmp cmp cmp imul sbb mulps and sub insl scas or nop mov clc inc sbb inc ja xor enter (bad) push int xchg repz (bad) fadd xor std adc call repz cwtl adc sar mov and pop jbe pop adc jge xorl pop test or push xor (bad) adc and dec mulb xor mov add and stc inc stos mov add cmpsl nop les scas bound cmp and and iret jno add imulb inc cmp xor jne sbb (bad) sbb testb or dec xchg pop xor cltd mov cmpsb nop in andl jge or and sti mov mov push scas mov add and movsb sub add ret (bad) insl mov mov nop (bad) inc je xchg movsb cmp cmc adc jl cmpl pop or adcl pop ds mov arpl pop inc pusha mov call push or mov iret sbb xor mov cmpsb repnz lea (bad) and mov call call ss sub ss (bad) xor loope and dec and lock and jecxz or pop inc add bound xor lret add and add lods and pop (bad) sub and ret pop adc and add add pop (bad) das sbb or sbbl and mov inc pushf (bad) (bad) xchg lret add and add jno lds sub stos cmp pop push dec jnp cmpl adc sbb call push nop fidivr mov ljmp inc nop icebp mov (bad) out mov int3 cld and mov xchg loop adc nop fisttpl rclb inc inc cwtl stc or daa fldl das fimull out (bad) jnp movl pop and nop (bad) cmp shrb or inc push add mov xchg mov cmpsb add shll mov dec pop push rcl inc hlt xchg mov (bad) mov xor fadds pushf sbb dec or pop and mov enter dec jb repz mov add xor jns pop rcrb cmp sbbb mov pusha inc lahf je adc inc jle jg fildl fldcw repnz movl cmp sbb popa leave add inc jb xor jns loopne mov cmp pop pop or int3 or out mov ficoml (bad) pop push in in cmp jno fsub mov or fmuls pop add dec inc pop shl fisttp sbb jbe inc shll jae xchg add xchg rep sub sbb and sub bound mov test adc push ret (bad) notl adc inc adc push in in cmp addr16 pop adc inc jle adc movb xchg and and or (bad) hlt jg add push in push mov pop or push (bad) mov pusha cmpsl test adc jge (bad) aaa pop cmpl mov cmp or cmp add cmp sbb xchg and sub pop insl inc dec lods push (bad) ds adc (bad) sbb mov mov pop (bad) (bad) xor inc insb mov adc or lods vmread adc ss imul lock and and jecxz addr16 mov pushf xor stc or sbb and test pop adc push mov mov add lock subb fsubl dec xor add imul ss popf stc sub stc pusha jno xor pop and mov pop in (bad) sbb sub pop nop xor add adc mov imul xor mov add mov inc aam or pusha fwait mov xor nop inc sub add repnz push outsl mov push cli and jl lock mov sbb or ret xchg pop dec mulb int3 cli test mov mov xchg jle pop sarb inc mov or mov pop in inc mov test inc sbb add dec add xor call (bad) mov (bad) aam adc mov pop and sbb loope xchg inc and push sub add mov (bad) pop inc jp mov inc sbb ficoml or add jmp notl aam rcrl clc imul add adc inc push jne inc mov lock xor stc inc mov mov ja lcall xor mov loop push call pop mov xor ljmp add inc sbb xor pop (bad) push push add inc add xchg push add xchg add inc lahf cmc inc inc or jg repnz adcb mov data16 add cmpsl push add xor adcb fdiv xor adc ds add inc pop xchg inc push xchg enter repnz xchg enter repnz test cltd adc add add dec mov add xchg push add jae mov fmull mov dec mov push jae int3 mov add or fisttpll icebp ss sbb xor mov cwtl mov cs popf push add pop dec cli and add add std adc add incl nop jno arpl adc pusha aas in add (bad) nop les jae add and jnp and or ss adc pop mov add mov or adc adc cmp add cld dec push mov push jb into btl out adc adc and sti mov cmp xlat sbb cmp adc aaa and add jge add imul jge cmp add lret cld adc cmp mov pusha fidivl and sub xor add arpl xchg jno popa jl jmp popa cmp movsl ds sbb inc (bad) add jne pop repz arpl add sbb incl jge add imul and and enter adc out adc inc mov mov cmp add push sahf mov (bad) fmuls movb mov or adc (bad) (bad) sarl mov jbe lods adc (bad) testl cmp or mov popf adc out adc xor add push (bad) jns cmp push out add fadd cmp les dec mov jae adc loope nop insl aam pop mov movsb sbb (bad) bound rol inc and test adc xor ljmp cwtl mov out jno lock call xor adc jg sbb add pusha nop insl aam add mov sbb (bad) bound inc cld fbld ja (bad) sbb add push mov movsb mov repz ds inc dec (bad) mov je mov pusha push or test inc and js or (bad) mov pop fldl test testb pop test inc out pusha cmpl adc fmuls ret sahf (bad) ret iret lods (bad) js xor in or sub enter or test out mov and jnp push ja and imul je mov sbb (bad) xchg inc and test adc arpl lahf pop add daa pusha and jae add rorb mov pop xor ds popl xchg call ret (bad) push test (bad) xor adc adc and inc cmp aas fwait hlt dec cmp jne cld repz xor stc and or test inc and (bad) (bad) out adc inc popf dec jg int dec jp hlt and in cmp in or mov repz (bad) int3 arpl movl xchg int loopne test mov cmpb cmpb pop btc cmp aaa lock pusha inc mov mov mov test inc inc and inc or sub add inc repz arpl rcr out lods or jge fcoms push and scas loopne jnp daa arpl cmp testb repnz push ret test cs frstor or inc mov mov ret mov push test adc xor in sbb fidivrl mov cmp testb dec in dec aas fwait hlt inc arpl add cmp adc out adc inc mov daa (bad) lock arpl fcoms bound adc adc add xlat xor in add (bad) push pop bsf clc adc xchg cmp add and jbe pop int and cmp and xor mov (bad) push ret test cs frstor or inc mov aam add rolb stc inc inc mov mov iret lods pop fstl sysret mov inc jno sub push cmp xor out sub pop mov mov dec arpl inc dec loopne (bad) xor or test das out push push in inc and mov and sti inc add mov hlt dec cmp add adc jmp xor push or pusha xchg jno and sbb adc enter or mov sub loop add xor pop sub dec rcrb shlb pop add adc lret test mov icebp and inc jnp (bad) sbb fcomp jg sbb cwtl mov sbb ret fidivrl add (bad) mov adc lods arpl prefetcht1 push lea nop dec cmp sub fiaddl cwtl je and sub and inc dec xor je dec mov add adc ds mov rorb arpl (bad) mov je movb cmpsb xor roll sbb fbstp mov (bad) stc mov and pop inc enter inc insb mov in mov dec mov nop rcrl add loopne mov xchg mov jns lret mov and mov data16 jge sbb xchg loope (bad) mov and jecxz icebp imul (bad) sbb push inc sub dec cmc or sbb xor sahf movsb mov and inc mov xchg test scas bound cmp and and iret js cmp and jno xchg mov imul cld (bad) lods sbb cmp into rolb jne inc jo push cmc inc dec sub sbb xchg pop xchg pop btc scas pusha inc jae cmp or pop dec jl jae aaa push mov jecxz cmpsl fidivr call test mov (bad) icebp pop xor jge invlpg and fcoml cli out xor dec rcrl push arpl mov jp and fstl dec arpl lea jmp out sub out (bad) xchg pop dec idiv rcrl hlt ja mov imul lock or add shl mov sarl add inc add test iret push test or stos cs sbb mov repnz mov arpl scas xchg jno or rcr test sbb inc arpl push testb inc arpl mov inc push or (bad) mov adc mov lods (bad) adc test add (bad) inc je test das out push push ficoml cltd jle jns rcrb jno sbb ds inc arpl pusha adc enter mov test sbb or lret lcall mov pop xchg inc sahf pop add repz loope pop add sbb bound cmp pop add pop arpl (bad) cmp adc aaa and shl enter mov iret (bad) and mov inc mov lret inc adc mov shr pop ret xchg add adc arpl adc dec push mov push jb loopne pusha inc in sbb nop js pop ret hlt jge pop call mov cmp pop inc xor dec sahf test cs or inc or arpl cmpsb ds insl (bad) xor add (bad) cmp mov mov cmp add sbb sub add sbb or into xor (bad) lahf or push adc pop mov movsb mov mov sti mov mov add jle pop iret jl and and mov sbb push daa loopne bound inc mov mov les or test adc pavgw unpcklps xchg mov push and mov pop sub insb inc scas xchg in and mov mov mov es sbb and btl cld and test push add mov inc push (bad) ret add inc aas sahf in inc mov cmp loop push add push cltd in push mov sub mov or pushf popa mov jo sub adc jle pop iret cmp fisub daa (bad) inc xchg pop lods add ljmp (bad) pop (bad) inc push (bad) test add arpl adc ds jb loop stos adc ret xchg jg and mov and mov and dec inc lea xchg jns and jge mov push jbe pop loopne adc (bad) lock push mov icebp mov sbb pop popa test fcoms pop jge mov ds js in push enter or and mov sub inc repz mov lods jno mov (bad) sub add and movsl cmp rcrb dec ss mov sbb (bad) and hlt inc mov jl push or xor sbb mov out ret imull xor pop or ss mov mov rolb add packuswb mov mov mov add sbb sbb je (bad) fimull test or add inc nop sarb and xor (bad) mov jo or ret mov mov adc pop mov int3 pcmpgtd pop sarb push rcrb pusha inc and lock xchg sbb ret pop imul dec cmp xor mov pop arpl movb test pop xor movsb mov push add sbb mov jecxz push pop or push cmpsb mov pop sbb inc pop ror (bad) xor (bad) xor arpl (bad) xor arpl (bad) xor add xchg or cmp jae out into jae out into jae or cmp out into jae in dec and into jne xchg lret sbb jae out add add cld out into jae roll into jae in dec and sub and sbb je into jae out sub mov out lret pusha cwtl inc das out add nop add cmp adc mov xchg sub and pop adc or push aam loope sub loope add dec or out in inc sahf insl dec xlat xchg inc ficomp push add fs pop xchg js dec pop sbb sub dec cmp mov test mov insl into jae out into jae in pop cmp pushf test mov pushf out iret or into jp into jb cmp jo or cmp out push push or add mov and xor pop out lret pop cmp add sub lea inc rolb lret push into inc add jae out sub insb in pop cmp pushf in pushf in add cmp pushf test add addb xchg cmpsl xor and lret sub add pop cmp pushf clc test pop cmp add push push add into pop add sub (bad) add add pop in add jb test pop cmp pushf test add addb xchg (bad) and lret sub add pop cmp inc dec push into jb add pushf mov push add add xchg (bad) and into jae adc add pushf mov add push xchg xor add lret pop cmp jb add cmp mov or push into jb mov jae rolb lret jae inc add add push push or cmp sub add sub test pop addb cmp mov sub gs out add mov dec inc jmp mov dec mov in jae imul leave mov cltd es xor out into inc add jae out into jae in add int leave mov out into jae in add inc ret repz stos daa nop xor out into inc add jae loopne sbb jae out lret jae out xor pop cmp out in out into jae in add pop out into jae in int3 out into mov cmp push rclb addr16 sbb cmp jae out rolb xchg add push into jae out into jae out push pushf mov sar xchg jns dec je into jae out into jb add pushf mov add jae out into jl into jae in jne cwtl testb mov mov pushf out into jae test add pushf out into jae mov pushf jmp push xchg xchg ret xchg pop inc jo imul into jae out into jb add xchg mov lods rcrl cmp jae out push add lock repz out into jae out into jae add adc pop add clc mov out into jae out into jb add xchg mov lods rcrl out into jae in add xor sbb nop xor out into inc add ljmp cmp jae out into jae in add sub cmpsl cmp jae out into jae out push add or xchg repz out into jae out into jae add and jae (bad) jae out into jae out lret jo add nop test add push dec les cmp jae out into jae add add sbb pop leave lret jae out into jae out add push adc setle into jae out into jae out add sub xchg dec sbb jae out into jae out rolb pop into inc push sub mov fcoms push addr16 dec sbb jae out into jae out rolb pop into inc push adc js jae out into jae out add sub cmp adc js pushf out into jae out into inc add lahf xchg repz xchg mov xor into jae out into jae or xorb addr16 jae out into jae out adc into jae out into jae out into inc add sbb addb jb into jae out and add nop push dec xor jae out into jae mov fidivl sub into jae out into jae in and sbb jbe lods in into pop ret cltd inc into jae out into jae out adc push add pop into jae out into jae out or add mov addb mov cmp jae out into jae mov es out into jae out into jae in and negb pusha sysret xor addr16 jae out into jae mov adc push push pushf out into jae out enter in cmp add into jae out into jae in inc pop cmp sub lods in push adc (bad) jae out into jae out enter push sbb out into jb adc push addr16 add daa push xor out into inc loop add rcrb cmp jae out into jae in and clc sbb push cmc pushf xchg sti inc imul cld out into jae out into jae inc addb sbb push jae out into jae out enter pop inc inc xchg enter les add dec add out into jae out into jae add das nop out addr16 add and and jae out into jb and scas pop adc and jno or and jae mov cmp jae out into jae mov inc cmp push jae out into jae out enter scas pop adc xor (bad) jno cmpb inc add into jae out into jae in inc pop cmp xor insb add jl sub into jae out into jae out add loopne (bad) dec daa cmp jae out into jae out or pop orl addr16 jae out into jae mov cmp out es aad out into jae out into jae (bad) add push sbbl jb insl or out into jae out into inc add add out loopne (bad) dec sub jb arpl into jae out into jae in and pushf in cld sbb out loopne (bad) dec xor pop into jae out into jae out or pop addl dec push addr16 sbb jae out into jae out jno add dec insl cmp jae out into jae out enter clc cmp and scas lods in ficoml pop aas pushf xchg fs jae out into jae out enter clc cmp and scas lods in lret orl addr16 jae out into jae mov or (bad) ret pushf lods addr16 jae out into jae test add test rcrl out into jae out addl jge and sbb pusha cvtpi2ps into jae out into jae out adc adc mov adc push inc cltd jg and adc into jae out into jae out add stos loope add subl pop leave pop pushf out into jae out into jb adc jg and push xor out into inc add shll dec inc or into jae out into jae out jno add or push add into jae out into jae in inc pop cmp inc pushf in cmp push dec and into jae out into jae mov or out enter jo popf stos (bad) ret fsubr arpl into jae out into jae in and push cmp add and dec adc inc into jae data16 out into jae in pushf stos addr16 daa and ds xchg xor jae out or dec add sbb jns sub into jae out into jae out add lret dec sub and jae out into jae out enter orb mov sbbl cmp jae out into inc add adc dec jle pushf out into jae out into jb adc sub mov cmp jae out into jae (bad) add or loop add xchg dec add into jae out into jae in inc shlb cmp enter xor out into inc add repz in or pushf out into jae out add or xchg fadds ror addr16 jae out into jae out orl enter scas pushf in scas push adc into inc ret inc adc jae in and insb orb pop xor into jae out into jb in pushf out into jae out and and xchg loope add xchg add out bound xchg push into dec adc or jl cmp xor addr16 inc add pop cmp nop pop into jb sbbl add ss in sub pop jns out enter jae addb jo pushf out adc jae addb or into jae sbbb mov pop icebp clc stos into jae in and inc or cmp sbb pop into jae mov pushf out adc sbb push jae in add sub jae mov inc movsl pop icebp test xchg js pushf out jo sbb jae out into jae in loope js fistl jno add add add mov adc inc dec add push faddl push loop loopne out stc hlt sub (bad) or sub punpcklwd test jno jae push test sub jb adc test pop xor push mov add adcl inc es test add xchg push add pop test sub push pusha add inc dec jbe add fadd push add pop js and and push sbb test pusha add orb test loop push nop add (bad) sub push push push add add xchg push loope add test imul test cmp mov add cmpsb cwtl add adc test add leave adc lcall mov add fnstcw adc sbb sub or sbb or hlt push rolb sbb adc pop imul add lds movsb cmp ret pushf pusha add out popa push mov popa insb push scas jno or inc test repz sbb adc lods add sbb xor add inc rdtsc push fld add jp jno or or into jb jo sbb jb lret xchg push repnz jl adc and in add mov lods sbb push les push fld add jno jae ds dec out add jmp push mov orb and and in mov cmp sub addb add icebp lret mov pushf out adc add addb push js and gs nop xorl mov (bad) mov (bad) mov cmp push leave movsb sub test adc or push add inc and xchg (bad) js imul aam ljmp ret mov jo mov mov sub (bad) mov mov test mov mov push dec mov fsubs jp sub cmpsb sbb leave mov push pop int jo leave mov lret push jnp cmpsb push lret xchg cmc sub jnp and pop pop inc sbb ljmp mov test lret lock insb sbb cmc mov stc mov lret outsb adc (bad) push inc pop push js mov loop movsb pop push push lret add pop jb fisubrl adc pop sub repnz lcall int jp push insl imul push jmp push sbb (bad) push std mov xchg mov push sbb push pop loop mov cmc movsb pop push push insl imul mov icebp cmp push mov jb enter ss mov mov add inc mov enter and movsl fwait mov inc jle add movsb lret or fsubs decb movsb lret add push jns jp mov imull cmp lea add inc leave mov cmc es mov mov je pusha sub cmp cwtl pusha sub xor cmp dec ror insl mov sub mov dec sub (bad) repnz ret jp mov push mov cli and add mov dec lcall jns sub inc mul add dec ror push insl mov jbe sub lret xchg insb sbb adc out jge (bad) imul ja cmp sahf dec (bad) xor (bad) cmp mov pop add test daa xor jns cmpsb loopne cli push pop int jb sbb lcall js ss pop pusha sub ss mov cmp stc push ja mov call mov xchg lods lret xlat int jo jp mov mov lret insl test (bad) daa jne stos push cmp pop mov push xchg (bad) jbe imul push adc add pop xchg fldcw adc movsb pop push push insl imul mov test mov xchg jns rolb pop pusha mov (bad) mov push cmp pop loopne xchg imul (bad) adc data16 lds test cmp xor pop adc and dec rcll pop lods dec cmp xor insb sbb ja or lea jp rcll adc mov push pop lret fsubs adc or shrl jns test test bound clc mov cmp add (bad) jbe mov lods sub pop inc pop pop mov add mov add dec cmpsb clc mov adc fnstenv test add push sbb or stc nop or addl std adc adc dec sub push push add lock sub and push movsl (bad) dec sti call movsl test push fwait pop test cwtl rcrb inc pop adc or les xchg ljmp cs mov adc push cs dec mov add fwait pop add xchg imul push and push insb in or sbb jae add add pop push ret (bad) cmp dec add inc movsl add sub je cmp outsl sub xor pop xor xor hlt mov xchg mov inc mov xchg aaa jne cmp xchg add inc mov inc adc fsubs add push (bad) ja and ss dec push fsubs mov lcall dec test in pop mov xchg popa xchg push cli add mov lret loope int ficoml xor push fsubs imul movsl xor push es les pusha shlb daa push clc or cwtl scas or arpl fnstsw xchg stos aaa add sub push shrb jns scas sbb mov outsl sub xor call xchg push mov xor adc bound sub adc loopne mov mov pusha or (bad) xchg push sub cmp stos popl test das roll mov mov push jb data16 cmp add cltd fs sahf adc call and pop imul popa add lcall pusha jp pop test inc xchg mov sbb adc lods add in mov mov adc inc icebp mov sub xor mov xor out add cmp inc mov jmpw loopne pop mov aam adc repz or or je data16 add pop push sub sub or add rcll xchg push mov inc cltd pop xor addb jmp or popa loopne movb or popf popa mov out adc inc pop scas push lret pop fmull scas inc es fstps test or stos (bad) sub push push xchg mov push movb popa cmp lcall out pusha lods xor lods shrb inc mov mov xor or push movsb adc cmp fist imul inc rol jne je lea xchg dec xor pop ss inc jp and inc jb pop cmpsb push lock andl test sub outsb jmp adc add add cmpl sub push sub lods jno aad push cmp push lds cwtl scas add add mov add lcall mov sbb fsubrl or inc (bad) and hlt jnp lcall pushf xchg push sbb and scas ret mov movb insb pop test cmpsb or inc push add out mov mov arpl jmp jo dec add push add mov dec add push adc imul cmp push cmpl push cmpl rolb (bad) lret mov fdivp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl mov and sbb xor arpl (bad) xor arpl (bad) xor arpl (bad) xor and and (bad) jbe cmpsl imul (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor mov (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xchg movsb test test arpl dec (bad) mov cmp mov cmp xor add (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor xor bound les xor jecxz (bad) xor out mov mov xor sbb xor push das mov ret jecxz (bad) xor xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl mov xor xor xor or arpl (bad) xor sbb push je sbb xor (bad) xor sub movsb (bad) enter and fs cwtl mov xor mov mov mov mov bound cltd mov xor lods inc icebp mov mov mov xchg mov arpl (bad) xor xor arpl lds repnz xor mov mov insb bound pop cwtl xchg inc xor xor arpl (bad) xor arpl (bad) and arpl (bad) sub xor mov (bad) xor mov mov (bad) xor bound arpl mov sbb push mov sbb xor sbb xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl (bad) xor xchg mov adc push or jl sbb mov mov and mov pop (bad) repnz xchg mov push fstl cwtl (bad) jno mov test xor (bad) xor inc xor push pop arpl xchg pop je adc nop or (bad) xor dec mov jno mov sbb xchg mov sbb and daa mov std sbb and xchg or inc or sbb and xchg sub mov dec mov xor ret inc xor outsb adc and xchg leave fwait jo stc adc (bad) add cmp mov mov (bad) lods andl xor int3 ljmp xchg cmp nop cwtl cmp cmp jmp das dec data16 and xor sbb sbb push or or js and lods scas loopne popa jno int3 bound pusha jnp arpl (bad) xor mov xor arpl (bad) xor arpl (bad) xor xor arpl (bad) xor arpl (bad) xor test arpl les adc orb movsb (bad) xor mov push and dec (bad) xchg mov cltd inc xor les mov call jbe ret in cmp cltd push cltd sub test lods movsl (bad) lock push inc xchg push nop mov and in call cmc in pusha scas dec push mov pop xor inc add (bad) popa push cwtl sbb sbb jp bound ret (bad) push adc das test sbb pop mov xor xorb or lods stos movsl push (bad) inc cmp and sbb jge mov push adc dec and or sbb cwtl popa add sub cmp jl xlat jb loope sub in cltd loopne ljmp push xchg adc sub adc mov fidivl mov xor xchg sub xchg outsl add std nop stos xchg test aas xchg mov insb fmulp (bad) dec mov mov inc pop fwait push jb fcoms fisubr inc sti mov insl fldl inc repz mov adc and mov mov push imul push push lcall jae loope mulb inc cs mov xor lock dec push sbb or inc cmp rcrl xchg dec adc dec cli popa daa ret push popa and sub pop cmpsb dec adc xor push push insb inc push add lret pop enter es ss jns add mov and mov push inc pusha or mov arpl push pop lods inc push inc pop dec dec (bad) leave lock cmp nop nop jecxz sub pop sub mov pusha and ret mov or xor xchg dec data16 dec mov xchg pop lock add pusha xor ljmpw sti mov cmpsb and inc mov ret mov add xchg subb mov and jecxz xchg shrb rcll dec arpl mov out jmp cmp push (bad) cmpsl push pop test popa dec sub imul mov fmull cld in les mov jne inc in sub loopne ja add shlb mov (bad) jl jp sub fcoml cmpsl sub push popa and mov xor subb test and push popa dec fwait mov xor fadd dec and arpl cmp pop push sbb sti fwait add (bad) (bad) add mov inc xor xor cwtl mov inc xor add adc out popa add xor add pusha cmp fadds ljmp insb stc (bad) lock movsb rcl data16 cmp adc cmp popa mov sbb andl sub cwtl pop or or fdiv insb pop and mov adc loopne jecxz dec fnstsw adc mov and jp in sbb mov mov mov inc sbb push lcall lcall push pop xchg popa mov sub inc push xor cmpsl imul es jae jmp xchg int3 xor in xchg add mov jge jecxz aaa sbb (bad) fidivl insb xchg loope in bound pop imul cmp (bad) lcall sahf pushf mov pop imul cmpsl sahf jns insl ret push push sahf push pop inc xchg imul mov scas add dec loope sbb adc jo (bad) shl mov xor leave or pop cmp push add sub cmpsb inc push sbb (bad) cltd jb and shlb fistpl mov in inc stos fwait shr pop jg push push rorb and shll (bad) roll insb push push popa add jnp test inc aam int cmpsl inc out out sub add push cmp shl xchg mov adcb pop adc xchg (bad) std aaa mov xchg (bad) push adc mov sub ret mov icebp inc xchg mov sbb mov rclb and leave lods loope jne sahf cmp adc lret push test or and imul xchg add std jno cmp movsb or pop jo cli push jo or lock addb add add or (bad) decb lock and jge jno xchg icebp lock xor xor lahf xor lock push xor cmp sbb lock add jno and push aaa mov test icebp imulb es aaa cwtl mov sub xor lods jbe test lock loop mov lcall push lret pushf sbb xchg jne repnz and inc pop add inc cli loop xor into ret mov test sub or or (bad) leave or jmp (bad) mov je jecxz fsubr (bad) jbe in repz pusha and add rorl cmp mov mov mov push mov in jb les push pop push pop mov or sub or xor pop and add adc lods add popa jge dec or adc pop pop cmpsl mov mov inc int3 js sub mov inc and jo adc mov inc adc xor or inc repz xor push lret push mov jbe aad cmpsb loop push dec sbb mov mov cli (bad) gs fisubrl pop aas and and cmp pop mov cmp insb mov cli stos cmp xchg movsl adc inc and inc mov mov mov xchg inc inc and xorb inc inc xchg pop sbb loopne mov rclb mov mov pop orb pusha insl insb xor les pop addb mov pop xor inc inc fldl2e div dec inc and mov pop stc mov sub dec xchg adcb push mov adc nop aas loopne adc in not jae fisttpll gs xchg add cld repz loop repnz mov xchg mov inc xchg sbbl or push push add loope xor imul pop imul lcall or cltd jae flds ret nop mov push pop in adc jno push lret data16 in sti insb insb loop dec push add in loopne cmp xchg fstps imul lods ljmp and push dec stc push enter xchg stc push push jb in (bad) xlat popa mov jae and or cli (bad) pushf push push imul inc sbb cmp ret push cmp out popf scas jo push sbb (bad) sti xchg cld ja jl out ljmp sarl arpl sub adc fcomps into fbld js aad out lret jle adc xlat lods ret or and test loop rcl xor jecxz sahf notb in xchg cmp push inc sbb xchg pop mov push mov sub rorb test and mov add jnp pop nop (bad) xchg xor fmull mov cwtl movsb pop imul stc (bad) repz xor pop pop mov inc aaa jb lods sbb adc cmp add xchg inc jle sub gs repz push fldl jmp and push sub xor xor add adc lods adc data16 jmp inc fadds jecxz jae and ret mov or in lret xor and (bad) cmp xor pusha mov mov adc mov and repnz xor mov mov mov push (bad) or or mov mov and sarb mov adc adc mov cmpsl jno or sub pop (bad) aaa push mov ret xchg sub sbb push and loop sbb ja dec jnp dec mov cmp add add pop int3 or and aaa leave add adc adc add fnstcw aad aam fnstcw add push and sarb movsl pop add inc mov cmp mov test cmp dec pop int add or mov mov inc mov adc and lods insl lods jno xchg cmc inc (bad) hlt cmpsl out pop fwait bound loop popf adc stc ret dec (bad) fcoms in add mov mov lret add jecxz push inc xlat and and jge mov or or cltd xor bound sbb push stos imul cmp aaa enter push sti divl cmpsb in push in push enter jne dec xchg lcall mov fsubs xchg lahf lea pop arpl mov je pop stos xchg popa cli mov adc push loopne cwtl pop adc test jg (bad) adc rorl and test scas cmp pop test scas adc loop incl inc insb arpl xchg cltd or jo or test (bad) lret in add call pop cmp mov inc dec stos ds push add pop or push call or push sbb sbb sub cmp ds push mov dec sub or or pop dec enter push jle cwtl push xchg or add bound bound mov lcall sbb push ret int3 sbb xor pop loopne mov or test jb add push lds dec push pcmpgtd sub rolb adc xchg movsl test or or inc das sbb lds sub scas sbb xlat pop push push lock pop add push inc jp pop (bad) push aas xor mov push dec push mov inc dec sbb xchg mov cmpsb es xchg lds movzwl lods mov inc (bad) loop pop dec push push and addr16 out divb xchg out data16 dec mov imul repz andb adc sub xchg adc cmc shrb push into or inc adc shll sbb idiv xorl push aad xchg cmp sbb adc and std movsl sar sbb adc adc negb push adc popa sbb xor int3 stos cld movsl dec pushf adc jb movsb adc mov add xor fcoms inc xchg xchg sbb add roll sub inc xchg mov xchg outsb adc div lock popa ror dec mov add adc (bad) rclb mov add pusha sub movsl dec stos inc pushf push sub movsl imul xor xchg xor imul std loopne inc hlt cmp (bad) or daa (bad) sbb in xchg mov xchg sbb rcl mov loop jge (bad) cmp ss (bad) jo push loope repz loope call loop bound and loop cmp in adcl adc and lds xchg mov inc gs inc adc rclb jae (bad) pop inc mov jae xchg jo jae sbb dec pushf xor xor sarl adc xchg adc adc fwait xchg add (bad) pop popfw popf popf int sbb xorl jo dec lret push out lea jbe add mov call dec adc push xchg mov push test int3 mov movsl cmp xchg inc sub pop pusha sbb jne (bad) imul push lods inc mov or or repnz sub jno inc adc dec jne push add inc mov stos mov and add in outsb mov or ljmp push push outsb les cmp xor rcll jne inc icebp sahf xchg mov sbb and jmp xlat shll in and sti mov mov pushw cmp pop or imul stos pop adc fsts call pop lods movsb outsl popa mov aam dec or loopne imul jecxz sti sbb and lods jl int3 mov out or or mov fs and test jmp or fidivrl push and xor xchg adc and mov (bad) add enter ret in cmp sbbb mov mov xchg add push repz xchg xor call pushf icebp jmp xchg jecxz jne and dec aam xchg hlt call in shrl or jbe mov in cmp loope mov shrl (bad) fcoms sbb push dec pusha testl fwait gs xor (bad) cmc and mov roll adc xchg inc in push orl test aad and lods es ret loop inc mov leave jp mov dec (bad) lds xchg movsl jbe cmpsl sub enter mov (bad) hlt rcr lods push (bad) lret xchg push mov and fdivr (bad) daa push leave cmpsb lds fnstenv cmc out sub leave push jp fstp sub and aaa (bad) mov pop int3 mov push in mov mov cmp rclb rcrb repnz jge push mov lret repnz nop bound dec and or (bad) insb mov push or add es sbb and adc lock mov sbb push addr16 jb sub push movsb fwait mov aad rcrb fs hlt or test jecxz testb loop mov nop mov and xor pop adc adc mov and test addl call xor jne sub lods movsl pushf movsl push lahf jb stos xchg (bad) in or mov stos lret and dec cmpsb out dec cmp dec pop (bad) popa andb popf xorb popa inc repz and cmp out fstpl fstl and aad cmc das jbe dec push mov mov inc xchg movsl pop in rdpmc leave xchg data16 (bad) xchg insl jb push out or hlt adc mov pop dec mov aam jbe add and into test cmp or jl push stos adc mov cli pop cmp mov lds rcrl int3 std cmpsb jnp or rcrl cwtl nop mov and dec aas sbb mov mov dec push sbb xor jmp in push ficomp fs imull fidiv scas mov jbe cmp pop rorb sbb lcall ficom clc cmp dec push lea arpl mov jae ret and and mov jnp cmp sbb and mov mov sahf fwait cs clc ret call (bad) insb sbb mov inc sub jl es cmp xchg pop xchg or add pushf imul mov movsb lahf bound and push popa sub nop lret jl (bad) sbb daa adc mov jb xchg (bad) mov pushf and pop mov sub mov imul sub or shll mov scas sbb jne mov addl push pushf std xor add cmpl rol aad add mov psrad push les (bad) dec and or gs sbbb sbb or nop xorps pop fwait push add push sub test xchg popa rorb inc in or and nop and inc or insb push and sbb push adc loope pusha insl mov arpl jmp or pop adc add es dec cli pop das xor lock dec and or push push fwait or mov lea mov add inc sub dec js mov cmpsb push push inc add xchg nop mov cwtl lret outsb sbb add cmp push imul cmp stos imul lods add mov mov or dec femms add and xchg inc and mov or push mov mov lock inc ss fs in mov dec test aaa inc je addl dec jp dec cmpsb ss arpl in jecxz lock sub mov fdivs push mov push mov dec sti inc xchg int test mov (bad) jbe ds (bad) aam dec cmpsb lret mov movsb jmp mov add inc and test cmp fsubrs pop pop or scas jns xchg or inc mov xchg pop jns clc add add lods mov push add hlt sarb fwait popf ret pop rorb (bad) jbe scas mov xor sbbl out or xchg xchg jbe scas mov cmp in (bad) repz add scas push add lods xor inc pop (bad) add jnp push sub lock nop adc scas jle push xlat mov push push push xchg cwtl sub add stos push lock in outsl loop mov dec nop cmpsl xor movsl push and movl js movsl dec jecxz rcrb cwtl repnz ret add dec ss mov imul lods jnp je ss ret dec dec mov xor movsl mov loopne jecxz add xchg (bad) push sub or loopne dec int jae sub or jmp inc add loop mov inc loope sbb movsl and cwtl sub dec lcall test scas push shr leave enter adcl inc and mov mov cmpsb cmp cwtl bound (bad) cmp jl sub lcall jge pop push sub enter test mov popa and push xchg adc pop mov mov adc push push cltd or repnz push divl cmp jmp pop test (bad) and xor and push orb mov mov inc and out sub (bad) mov les push sub mov jg,pn bound jg loop push xchg test pop adc dec mov movsb test (bad) dec lcall stos mov mov idivl fldt insl dec cwtl fistl jb cmpsb aam xor insl jg rcl push ret movsl shll inc int3 xor or repnz or sub pop xlat add adc dec push inc sbb movb fwait and dec push (bad) outsl cmpsl add daa dec gs xor jb sbb and daa sbb pop in or or or movsl cli xchg stc pop xchg mov (bad) push push movsl sahf pop cmpsb inc push push add mov dec xchg mov scas fwait and hlt cmp out popf dec jnp cmp inc lret adc mov dec mov movsl loopne push mov adcl push xchg int3 push sub sub cmp ss pop push movsw pop inc adc inc mov das ss pop sub pusha adc out stos rcl fimull mov pop xor push cld mov cmp (bad) push xor fisttp jmp xchg pop pop (bad) dec scas pushf outsb mov (bad) addr16 push add cmp or xor popf adc xor das inc push std push pusha adc test and add aad jne xor sub pop sub sbb jno stos sbb jnp aad push daa adc inc push (bad) jae data16 sbb pop cmpsb ret jmp mov ss adcl push dec fisub ret sbb push and test lcall subb xchg cmp dec test int (bad) adc lock and push aaa fsubs mov je sbb or addl test push pop sub in (bad) mov xchg mov push add and add ror sub ret push push dec stc pop imul aas push adc stos sarb lds lods fstl jns lods loope in push pop sbb hlt adc call hlt push mov pop mov (bad) mov adc xlat add mov cmp adc jo sub mov pushf data16 pop add cli mov add dec pushf push cld shl cmp bound sub lea sub pop pop mov stos (bad) lret sub xor mov sub sbb mov pusha push lret (bad) mov xchg inc push push lret sbb jo test and lret mov dec xchg movsl divb jl jmp mov adc xor sbb enter cmp dec push cmp dec imul je cmpb call bound pop or push inc sbb je add jmp pop xor fistl pop and inc (bad) loopne dec dec (bad) lods (bad) rol pop (bad) or and pop sbb cmp fildl imul int3 pop jno push aad aad push ret inc stos sub cmp ja mov mov ljmp jmp cwtl test lea pop (bad) sub push sub lock or xor loop into sub inc jp jbe dec es xchg jno out add js mov add dec mov cld lods sarb imul cli (bad) fnstcw xchg mov or sub cwtl xchg in xor mov sub jno sub push add sub sub jae push gs push pop lea icebp jge cmpsl push push xor cld xchg ret pusha jp pop rorw xor xchg out add sbb and adc pop popf push sbb sarl jne mov push mov mov rclb and add xor mov mull fnsave jo add dec adc push mov arpl xorl bound sbb mov push and repnz and mov out imul or arpl fs jge sub xor mov les fwait push inc add jo sahf or data16 jbe xor cltd repnz sti adc lods jle cmpsb aam test fwait mov clc in jae mov daa xchg xchg ljmp xchg cmpsb mov fldt in loopne push les ds sbb mov sub inc dec mov inc push std stos lods lock fdivs fildl or mov cmp jmp lds pop jbe lea sub test xor imul fs and roll test xchg out call fcoms loopne call pop in pushf cmp in xor inc jl lret aam adc es gs popf mov mov lret xchg pop cmp fnop enter mov dec jo sbb jbe inc lret xchg push jmp fsave jl inc push xchg pop xchg out xor rolb push push cmc mov cmp xchg xor (bad) jb add xchg and xchg mov mov mov mov sbb mov (bad) andl (bad) dec and fcoml mov push aam add movsb orl pusha fs bound add inc js xchg sbb testb adc sub shlb or jne lret pop xlat lret jne pop addr16 inc xchg push pushf xor mov ror xchg lret add les jb (bad) lret sub pop daa lds or push lock in jmp ret xlat imul pop add adc stc pop or pop sub inc push fsubs mov push mov mov cmp xor cmp jmp stos daa sbb fistl loopne jae pop add (bad) pop and adc test loop jo mov jo or lock mov movsb sbb jmp jo leave rcrb mov xchg loop sbb iret xchg push out mov xlat push scas pop aaa sbb dec dec mov mov test mov push mov mov scas inc sub shrl sub lods mov xor adc (bad) sahf lds mov mov pop loope or fiadd mov ja shlb jne daa cmp scas or movsl fidivr inc jno gs ret inc lret (bad) mulb addr16 mov aaa jo jp std div add data16 scas (bad) mov adc sub xor arpl xchg fsubr out sub stos cmpsl ss fisttpl xor mov das fsubrs add or (bad) jecxz lods and and push pop std jmp xor push mov je test push nop inc sbb push xchg dec mov sarl xor pop push and sbb movsl das in sarl cwtl adc mov inc test xor inc popa push aam or pop adc ret nop ror adc inc cmp fs testl fcom jb stos in rcrb shl cmp jo xor adc xchg cld mov sti imul cli (bad) jo cmpsb mov mov divl adcb xchg mov stos jns inc or sti mov xchg lock test inc push sbb sub sub test pop test mov jo xchg cmp pop stos lret fadd (bad) out cmpl clc cmpsb xchg or mull in cmp push push xor push ret and mov in inc sbb push and and lds add or cmp sub cmp cmpsl inc in and (bad) dec popa imul inc xchg js mov mov movb in adcb nop adc push subl jo cli test push or inc xor mov push mul repnz ficoml xor mov add xor add sub dec hlt adc stos xchg sub add push fs add sbb push pop aaa dec mov dec (bad) (bad) aaa aaa xor jns xor adc sbb adc push sub pop leave mov or sub jae enter and mov dec pop and lret push int3 pushf dec xor mov or xor lret cmp in movsl insb scas jle dec loopne xchg xchg mov cmp pushf push enter push bound jae xchg mov push xor mov or mov xchg imul or data16 cmp fdivrl movsl mov push call sbb das ret insb dec nop push xor or mov roll jbe ret test in jb imul cwtl and das test cmpsb and gs push sahf test mov jp mov daa out cmpsl or arpl movsl nop fiaddl sbb mov in inc rorl orl add (bad) lods aaa inc repnz sub test add test add dec (bad) out sbb rcrb shlb inc mov nop mov xchg sbb sub sub or sbb or sbb cmpsb scas sbb xchg mov cmc movsb mov mov bound push in lret ja adc mov lods cmpsb sarb cmp adc scas int jnp movsb inc data16 pop push xchg pushf sub inc pop addr16 mov pop mov cmpl leave (bad) mov mov stos lods mov push rorb in cs es mov das adc push je lods stos imul xor fiaddl cmpsb daa daa push mov push and mov xor cmp ljmp pop mov or sti inc cld repz push jb cwtl cwtl jno shrb add and aam aaa and lret sub shr stos es push add jle and lret cmc punpckldq std int add cmpsb or pop push sti sbb shrl inc sub das dec push mov pop pop cmpsb and jnp or test shl mov or adc data16 sbb lods pop mov roll daa pop mov outsb push mov mov mov (bad) daa popa mov ret iret fcmovnbe aad faddp fadd fnop fcomp dec (bad) and and and pop test or cli or rclb cmp cmp or testl adc xchg adc sbb push push nop jne xor cmpb out pop dec mov lods pusha lcall or pop add xor addb loop loop (bad) gs xchg popa outsb push test push enter pop lea imul inc movsb lds loop jecxz jecxz sbb inc sub add and repz sub sahf mov out mov and push daa adc and jmp adc movsb (bad) add pop std or mov test or pop mov or das dec (bad) hlt aad add mov push (bad) mov sahf xchg dec and and mov data16 add data16 jle adc test mov or mov jmp mov sti add adc data16 pop or (bad) outsb xchg cs pop mov add cmp aad jl inc fdivl arpl mov adc xchg outsb stos fcoms jno xchg push cmpsb push sub add movsb jge mov jb lock jno jb add bound push (bad) sbbl xor and inc adc scas lret mov jne cmpsl das outsl das movsl push cmp and imul push ret arpl jb shl loop int in inc loopne push or push daa call cmp mov dec mov sbb or dec mov clc xchg jns push addr16 jnp xchg cmpsb ja cmc pop or movsb movsb dec adc hlt stos add cmpsb int in and test imul and mov fistpl imul test or push xor loop jae ret orl pusha mov sahf adc jns mov sbb mov xchg jge (bad) xchg and jb and rolb add in xchg mov int repnz inc sbb xchg lds cmpsb dec ja lods hlt mov mul aam pop (bad) imul mov repz nop xor mov or adc pushf push inc jmp js mov lock lds pop jae push add in xor popa fs jno test mov in adcl push and push or jmp leave fistpl ret add sub adc dec or clc test push pop cmpsl daa int dec pop je js call jne push cmp fwait mov imull dec nop repnz adc nop cli xchg inc popa cwtl sti in scas and add in out fdivs (bad) hlt xchg jge and test xor and mov jno cmpsb (bad) lret and ja add jnp sub jno (bad) push mov or and push sub cmpsb flds int3 (bad) push aad lret shll shl xchg xchg sub mov inc adc (bad) mov mov mov cmp leave mov mov loopne loopne jo cmp nop out (bad) (bad) jns lea icebp xlat xor mov adc clc xchg loopne mov fisubl dec repnz adc mov es mov xchg and add xor add xorl aad insl adc ret loopne sub add pop xchg xor mov jb sbb mov add lods and aad cmp imul in xchg lret movsl popa xor lods inc sub add xor cmp loopne xchg (bad) and jb hlt xchg aam cmp add bound adc jns xor mov xchg fcmovnu mov add pop sbb mov aad xchg cwtl test dec sbb jo stc sbb aaa call push push out shr push mov out pop jae xor nop test popf jno push mov add jbe arpl (bad) push mov sub mov imul jbe jb repz add inc gs sub imul jp sbb jns enter mov insl sbb pushf push data16 fcompl sbb jno neg bound (bad) dec push jge fldt push (bad) mov xor cmp mov sbb (bad) and gs jae imul sub and gs sbb jp js jns icebp ja daa divl clc inc jl mov jns cmc dec gs test add popf nop jl (bad) test mov cmp in cli mov fldt clc mov sti leave loop and lds lea enterw insb mov push ret xor and add adc in sub stos xor movsl push lods pop or jno js cld data16 cli aad mov fwait gs (bad) loope jae mov test sub xchg ja push icebp push (bad) or rclb shrl clc jb push sbb and xor jmp adc divb gs addr16 negb xchg gs mov test data16 pop or sbb icebp dec push mov mov fsubrs push mov lea dec stos xchg adc lock aam imul adc xor mov cmpsb cmc push cwtl xchg stc jecxz dec mov movsl mov or mov out nop push push mov dec mov imul jb pop xor dec lods pop inc test pop cltd mov or inc add in jnp push and sub mov xchg push or add push mov stos inc xchg cmp or ret int3 in loop add mov inc or push mov pop sbb cmc dec inc mov shlb or (bad) push or xor cltd mov andl mov push xchg jo sub cmp in push es dec jb jbe inc push or test ret adc pop or fisubl push lcall lret sub xchg xchg inc push and mov push ljmp dec (bad) adc lar xchg inc stos push (bad) out outsl adc mov fmuls mov imul adc add arpl mov aam daa xchg cmp pop push adc pop int pop and or (bad) stos pop push xor (bad) mov pop adc (bad) pop pop sbb cmp aam shll inc ret add xchg insb mov (bad) adc (bad) bound push rclb and hlt (bad) pop inc in jge outsb pop and sbb repz lock mov movsb inc mov and (bad) sbb mov xor jno and hlt in inc stos inc mov imul gs icebp andl push mov enter xchg (bad) and mov jb in pop sub lods inc pop mov or pop pop pop pop ret cmp lret or fcoms inc jge gs mov stos jae ljmp push stc or aas add adc hlt push mov xor divl inc inc dec (bad) sub xor mov cmp dec ds dec fsubs jae aaa outsl xor aaa add mov and pop enter pop jbe mov sbb in add sbb sub test sbb mov pop mov push or xlat repnz inc notl pop xlat inc jae stos xchg cmpsb cltd sub jns jb add jmp sub sbb sbb or lods in in lods cmp push dec xchg imul xchg fdivs aad lret repnz fs jae pop or pop cmc mov in clc xor ds popa mov xchg mov adc xchg (bad) cld or dec push sub inc popa dec cmp rcrb pop and inc addl inc and inc ror push xor and sbb adcl mov (bad) mov (bad) and and int3 sbb es iret dec push lods test push sub or xor mov sub sbb fcomps adc pop int3 sub xlat inc mov inc imul lods push sub pop mov push dec sbb (bad) ret enter inc clc jb xchg movsb push cmp xchg and or inc pop aas aad or push mov imul pushf mov sub sub sbb cmp adc push mov add js add xchg pop icebp mov pop andl sub enter inc push xor sub push cmc sbb adc iret push sub xor push jo std adc sub inc pop outsb xchg jns jae mov imul enter push push popf mov sysexit icebp test sbbl lds sub rcrl inc mov pop cmp jl xchg data16 pop or push lods push cmpsl adc and pop inc or adc (bad) mov pop test cmpsb adc fcoms mov mov push mov mov in xlat mov push cmp sub sarl lret hlt inc dec sub and out lock add push xor add in push mov or cmp inc frstor sbb (bad) rorl popa mov mov or lcall adc movsl jne add clc mov mov push xchg push loop ja push int push jp push cltd movsl or and jmp mov sub dec shlb add mov mov movsl sahf xchg lds das xor pop jp int3 int les into aas (bad) mov ret pusha ljmp fldl or call inc cmpsl mov sub insb pop in and add push adc mov mov or test mov ss rcl jb fldcw call mov (bad) rol mov push and rcrl test lret sbb mov and dec loope sbb js mov or sbb ds aam int3 inc xchg stos repz pop mov or sub ljmp pusha das ss pop sub push push mov add mov or test fs add (bad) lcall pop sbb mov push or lcall and push stc ret mov cmp pop xchg push mov pop cmpsl xor sub aam sbb inc push push inc mov mov cwtl out in push jo sub pop rorl cmp es hlt (bad) es push ljmp mov mov loopne push cwtl sub adc stos and push test pushf add outsb and push mov xchg ret arpl sub push flds sbb mov add js cmpsl xchg or adc dec call dec lock loop aad push sbb push push and or setne call push inc mov push cmp inc push in dec je in sub adc imul xor lahf or mov sub mov imul jae adc stos in push cmp pop (bad) and dec sarb adc pop scas lcall jp inc lahf inc inc sbb sub arpl bound and add pop dec add fs push or fiaddl sarb imul sub jb jns inc call dec enter jo push jp movsl aad aad inc jecxz jbe xchg lea fs jne pop sub mov js stos push jo pop addr16 pusha mov pop pop xchg jae lcall pop xchg mov lret push stos movl mov pusha and push mov xor xchg jb sub pushf mov js ljmp sub shrb pop inc lods inc pop cmp xchg ja xchg pop pop leave call aaa loop push xor sbb divb or fsubs and negl arpl stos mov (bad) pop (bad) aam pushf jae dec xor aad jp mov addr16 cmp xchg mov imul jmp es or xlat push aam mov xchg je mov lea push add and xchg fwait mull xor and dec jne in leave inc fdivl loopne xor lret push in mov cli loope inc sbb repnz cmpsb xchg divl jbe push add lds stc ret jne and mov int3 cld xor pop in push inc movsb ror xchg sub aaa nop imul cmp test (bad) cmp ljmp and push fiadd insl idivb test add xchg push mov faddp xchg test inc je push insb xchg pop xchg mov fs push inc in jp sbb add test pop ret mov aaa rolb test aad jbe jne add cmp cmp popa shrl mov push int mov jmp (bad) cld lock push lods mov pop jl ja sub mov push repz mov (bad) xor xchg mov fldenv lock jle jae jl dec repz sbb movsl cmp repz push and jo rorl mov (bad) mov adc lods lods jae xchg sub orl mov sub (bad) xor adc sarb and jae push lahf xor ret mov pop push pusha aaa rcl jne sub xor mov movsb mov or (bad) hlt cmp cmp inc hlt sahf cmp add mov fidivl mov mov pop mov (bad) cwtl cmpsb bnd imul push ljmp xchg cltd addl mov rol or loop loop (bad) mov pop shl repnz jecxz xchg adc jmp mov push lods mov in ljmp mov pop dec cmc push daa dec cmp pop rol add fwait mov sbb mov and pop aad jns pop sbb inc je inc pop fimull (bad) mov fisubl push mov addb sub mov xor in out cmp aaa push ret cmp mov push cmc sbb cmc inc jb repnz sbb adc inc icebp push data16 mov movsl inc cmpsb xchg mov dec ret insb ret arpl mov cld mov aaa jne (bad) (bad) inc fisubl mov lock sub stos ret xor cltd push arpl lods cmc push inc cmc push and push jnp dec pushf pop or test rolb call push cmp (bad) test xchg int push ret mov insl sub fldenv sbb sbb ljmp xchg cmpsb adc inc arpl cmp insb roll fld add add sbb addl and or sub and cltd xchg xor sub jbe aad push or mov es mov xchg add cld sbb pop cld sbb clc cmpsl cld adc push gs jge cmc (bad) xchg sub sub test pushf cld cld cmc andl icebp jne icebp jge add mov jae mov mov pushf (bad) addr16 popf sbb xlat repz jae adc pop sub aaa icebp jae frstor push inc shrb test insl insl xlat mulb jle or test hlt mov pop xchg in dec sbb jne repnz in add insb jo add push add push or mov xlat or test push pusha and xchg les enter sbb mov imul test push and xchg mov pushf inc call mov sbb jb in divl std mov and les nop push addr16 sarl hlt inc fs sub hlt in pop adc lods fbstp jnp mov dec aad jb (bad) lret fwait bound xor ljmp xor loopne dec mov addr16 mov adc add js add bound jg lcall add and jecxz xchg in lds dec loop mov and mov cmp mov orl inc sub cmpsl lock jl sbb cmc xchg pop cmc leave add (bad) mov or je cmpsl cld out mov sti mov sbb xchg pop nop insl jp push imul psrld xchg jo xchg inc cmp loop add add arpl sub pop mov adc mov mov cmpsl xchg call data16 pop add lods imul push int3 xchg jecxz insb or ret adc jmp pop cld push loopne repnz cmp mov and dec or loopne push adc and add adc dec adc fcomp dec cs mov out push or xor pop insl or mov mov hlt ss pop dec test or pop push push movsb ss pop dec ret and std repnz sbb pop (bad) rcrb pushf jb insb mov out mov push out mov cmpsb pop mov (bad) adc pop mov mov xchg imul aaa cmp stos fiadd ret push int ret or push cs jl jbe test dec inc repz mov adc movsl pop jmp stos mov (bad) mov adc inc push adc lds (bad) fabs xchg mov scas (bad) adc sbb adc pop mov xor inc pop shlb ja dec popa pop shrb into dec xchg adc sbb jae adc jmp cs test jbe push sub mov roll adc test add out in pop mov pushf and xchg push pop fiaddl mov xor mov mov sub mov jecxz fsubs add add mov adc pop pop or cmp addl jb insb mov test push inc push ljmp add cmp sub adc (bad) mov or sub pop rcrl js sahf in dec cmc sub addr16 test jnp bound imulb test ret fcoml (bad) lret and bound and mov sbb mov sbbl dec push dec cwtl and mov cwtl xchg insb cmc cld in sbb and mull inc xlat push mov xchg xchg xchg test daa or mov push add test sub test leave mov hlt repz int3 push dec push into or rclb dec mov dec test xor les mov push or mov and and jle dec call add dec gs ret dec add xchg in aam cmp push add pop (bad) call cmp dec je insb or and inc pop jo pop pop (bad) or jne sbb aad push ljmp pop jecxz and rcrl adc aad mov and xor add rcrb pop addr16 lods sub bound jl pop push mull aas push pop fcmove push imul ja add mov bound push xor adc jge aaa outsb jge aas ds cmp xchg push sbb stc adcl sbb pop adc push mov or jae and ljmp lods mov fst and ret push roll pop xchg in sbbl dec arpl xchg (bad) nop mov push or pushl inc xor xor cmp test xchg cmp cmp lret ficoml sub ss pop and data16 mov xor movsl fsubrl push jmp imul jle jae or leave adc (bad) xor jbe ds outsb pop push imul push cmp hlt xor cmpsb test mov cltd jp pop and jle xchg cmpsb scas fidiv into imul xchg test push and stos or mov lods leave jp push pop inc lods and cmpsb stos add call outsb sub fnstcw lods sub movsl mov or inc push scas cld sub pop pop dec out lods mov add sbb or add roll mov mov dec jnp push inc mov test jg mov xorb add sub (bad) pop call jns pop push cs and lods cs dec add jmp lret insb (bad) pop pop rcrl xor xor mov pop jg push mov and sar jns out push inc push dec adc lods bound sub pop dec add rcl test add xchg add fsts mov addr16 gs jecxz xchg push lock mov inc cli jge dec push hlt sbb pop mov xlat mov push not mov and cli call pop cmp jmp sub stc fcoms dec daa movsb jo nop add mov cli push xchg insb mov push xor or xor dec add ss aaa inc mov int pusha cmpsb cmc push or push push clc cwtl xor arpl push cli inc lcall call and or jno fcmovbe push pop mov mov mov mov mov mov imul imul sbb rolb pop cmp pop pusha push cmpsb popa insl xor nop lret dec mov pop xchg jbe bound bound add aaa xor and and or xchg xor mov or sub push sub aam daa jb mov cld flds fs sbb ss stc sub add dec cmp dec inc negl or mov stc push add (bad) inc or test mov (bad) and sub adc jb mov xchg mov xor add inc push mov mov imul cmp fs nop roll pop cmc adc jmp imul cmpsb push lret insb movsl push jge xchg ret lods stos imul cmpsb or mov mov mov add add jmp or pop add jbe fs inc repnz mov jnp mov jp push mov jno nop ljmp xor pop mov inc ret sub in es or ja cld cmpsl sbb lret test gs jb mov mov xchg jbe (bad) out inc pop lret push and jb push sbb cli jp daa fucom pop lret (bad) adc inc push mov add mov mov xor mov add aaa stos mov ret and pop bound cmpsb jbe lds sbb and push xchg mov xchg jno fldt mov jge sti lcall xor mov inc mov add bound inc pop add mov adc jbe push ret and and xchg jo ret ljmp clc in add or lea push rorb or std xor imul rcr and xor inc shl jp (bad) add dec sbb cli jb cmp stos sbb arpl xorl xor mov aam adc repz pop mov mov lcall (bad) adc push je mov push inc aaa lods mov jle inc inc mov inc hlt push xchg aam xor and je aam stc xor mov inc push mov dec xchg aad cmpsl repnz dec aaa daa movsb jae orl mov and shl stos ret jae or push adcl hlt inc fs arpl and and jl fs test adc add mov and xchg imul nop int3 push or mov shrl add or jne inc mov or ret push mov aad xchg mov insb xchg cmp ja dec xor inc mov pop (bad) mov out lods iret sub xchg inc ret jl jne and inc lea mov xlat lods cli mov pop jae cmp roll out repz jae sbb into inc cmp and add jae dec jae jb dec sub add mov mov push mov jmp cld mov cmp push scas mov sbb inc add cmp adc sbb ss loop out push ret aas stos push inc dec add lret push jp xchg inc icebp pop (bad) lods dec bound push xor mov adc das sbb cmp mov jno sbb lea loope xchg cmpsb ljmp stos (bad) leave xchg push push add in loope sub ret xor mov mov fldcw pop in popf cmpsb inc (bad) xor testl dec mov imul jp lds or add mov xchg xchg and push cmpsl movhps aas xchg pop add push push iret ljmp inc je add mov dec sbb dec cld mov call cmc mov movsb dec dec test mov sbb ret or cmp mov outsb leave adc mov pop adc or pop inc mov add lret int3 cmp cmp shrb jnp out add inc aam movsb dec mov and aad jbe adc or inc cli shrb or adc push lcall xchg inc sbb test gs sbb sahf add pusha adc (bad) mov adc sbb lret mov lea inc rclb mov pop mov xchg sub bound or aaa stos adc cwtl inc push add clc push push jae pop add sub jle sbbb sbb dec mov scas dec sbb insl dec sub pusha hlt mov mov dec nop ret adc push data16 shr mov sub sbb test and or pop xchg outsb cs adc add fcomps out movsl xor stos movsl loop mov pop push or pop enter adc push dec jno mov mov jno xor cmp inc pop stos pusha xchg shll loop dec popf mov xchg adc pop or cli xor icebp mov test fcomps adc xchg (bad) xor adc push inc mov jno insb out dec sub jbe (bad) js and jb jmp adc sub mov aaa test or jae and cmp out cmp sbb es (bad) pop nop fdivl dec jns mov jmp push nop aam repz inc sbb pop xor add (bad) mov or xchg mov dec xchg cmp pop pop inc sbb fadds movsl dec mov mov cmp adc cmpsb fisttpl call sub mov add rol cmp (bad) adc dec btr dec and out dec inc imul repnz mov sbb xchg aaa push or jo movsb push inc insb dec push xchg je movsb jmp aam pusha aam cmp adc pop stos stos xchg nop out lods push out (bad) addb mov xchg push imul add fs test rorl ret inc xchg icebp inc fwait aaa pusha pop lcall adc int3 sub jb inc push mov adc mov xor not xchg cmp mov divl xchg insb inc shll sti test (bad) addl xorl bound push xor inc (bad) loopne push push loop push push bound mov jb nop aam sarb rcl aam jp (bad) sub push add xchg jmp xor imul sub loope mov dec adc je sub mov addl add mov (bad) sub sub cmp in jns jno pop mov lds stc mov mov sarb push pop add mov (bad) push mov adc aad roll rcrl loope mov pop cwtl imul hlt and mov imul fnstcw out add jecxz stos mov jecxz outsb fisubrl adc and push jbe addr16 jg out int3 insl std loope sub pop push xchg stc sub test inc cmpsb mov mov imul add (bad) loop mov ret adc ret pop cmp ret nop and adc popf jb cmp push shl push mov push mov pop adc call jp jp stos push cmp push pop aad movsb fisubr std fmuls lea loopne jmp repz nop repnz dec (bad) push jo (bad) mov dec arpl (bad) arpl mov mov jle mov or scas adc dec inc popf xchg (bad) mov dec and or jle fcoms cmpsb inc popf mov insl mov and sbb loop loope xor add clc leave pop clc in push jbe inc scas enter gs inc (bad) lds pusha fs add cmc movsb push dec xchg pop es orl popf and rcr mov neg aad iret and repz and adc imul cltd mov jns ret or es sub ret ret ret ret (bad) push sbb sub sub push stc mov mov mov sub pushf and mov push xor mov jae or sbb xchg sbb lds mov addb sbb adc stc and ret push cmp mov movsb stos pop out or pop and pushf and es leave mov mov mov mov and mov daa jb pushf and imul mov ja push mov fcmovb repnz leave or les xchg sbb cmp test push int3 xchg push ret leave mov push jbe cmpsl int3 daa rcrl push ret cmpsb sub sti add rclb enter or jae mov sbb sbb sub or and int3 sub mov and mov mov mov les mov sbb cmp pushf and mov lcall roll leave inc ret dec jb imul cli adc stos mov daa pop mov jmp insb sub jb xchg cld es inc xchg dec cmpsb sbb add mov dec movsb imul and rolb mov test and imul mov cmpsb test mov dec dec jns dec jl inc cmp out insb loop pop loope push mov mov xor add loop loop test inc gs xor jb cmp aam imul pop mov ja jmp mov pop inc pop dec jp mov daa cmp jne inc stos cwtl roll rorb dec jb ret xor mov add movsb xor sbb jne add mulb xor xchg cmp mov xor sbb dec dec and movsb icebp dec jmp dec pop inc mov inc xchg insb dec out stos adc out mov mov push test mov in jmp cmp loope push repnz dec cmpsl add (bad) jecxz stos stos dec call ss adc push inc jmp sub stos je mov mov addl movsb movsb cmpsb mov mov cwtl aaa xchg mov stos and xchg jb insb mov add xchg rolb shrb cmp rclb arpl in js fs stos out xchg addr16 mov jecxz cmp sub mov jl adc cmc les dec mov xchg xchg xchg xor test or mov daa xor fs imul pop push sbb add out or mov jecxz mov repz or and xor xor xchg bound adc sub pushf sti xor push pop xor stc sbb lea xor (bad) enter bound imul adc inc jecxz ret add frstor ds xchg rorb aam dec outsb mov gs movsb cmp loop test adc stc cltd and test popa and data16 (bad) mov mov sbb fmulp repnz shrb fs jo aaa dec xor jl jecxz xchg mov push or in push and test lret cmp nop sbb xor (bad) jo in lret lods cmp xor mov xorl (bad) sbb pop ss push jns ss shr cmp cmpsl lea leave pop sbb jbe stos and inc je xor sub fnstsw xchg cmpl aaa xchg loop sub loop (bad) mov mov cld dec sub pop idivl (bad) and add xchg imul xor add add add clc xchg push inc mov mov fimull add and insb xor stc cmpsb xchg sub call push mov loope push inc rcll sub xchg adc cmc lret inc push ss loopne mov mov lock movsb dec cmpsb mov shll imul jl ret test ljmp mov mov sti xchg mov jl mov xchg insb fsubs pop movsb test fisttpl test add or and test roll inc shll (bad) mov push cmpb inc jns add xchg out xor sbb jmp add push mov (bad) daa inc push repnz mov or inc stos repz cmp test push sub loop jnp pop js or mov out add mov or and cwtl movsb imul test lret cmpsl ss fcoms jmp inc push sub in bound mov dec add mov imul cmp bound inc pop xchg pop jp pop xchg jno testl in pop push pop xchg xor daa pop or das cmc les lret test jno out sub jo mov and sub pop gs mul adc outsl insl jno jbe clc xor clc lahf sbb dec jle jmp or pop in pop loope push mov pushf mov sub jg push inc loope insb scas mull sub adc cs (bad) lret adc incb sbb push push xor sub stos and add mov inc loope jbe fsubrs adc jne sub scas sbb jo sbbl or call fcmove arpl and imul mov int cmp pop xor imul xor das pusha shrl pop (bad) dec (bad) imull pop sub ret (bad) jo lcall sbb fidivl bound cmp cmp cmc data16 push aam js iret add jbe dec testb iret mov cmc add arpl jbe sbb adc add mov xchg add xor pop add sahf mov loope xchg xchg imull orb and push push inc negl fbstp jmp js jmp sub and mov (bad) dec ror in das mov cvttps2pi pusha test ret es lret aaa jo lods inc push dec or adc mov xchg cltd pop daa cmp add push jae push push push sbb stos cmpsl mov jae pop add or pop jbe pop mov pop mov jecxz sbb push dec dec aaa outsb stos push mov pop or mov inc jbe imul sub mov mov call fdiv bound xor pop daa js or jmp mov mov or xor push xchg lods sbb js mov outsb mov adc ret cmp stos mov sub or add or dec mov pop add ret or cltd js mov mov subb gs loop or mov mov (bad) mov dec (bad) push mov iret and or jb pusha mov jnp call mov ret out sbb in or clc adc xchg js mov out stc add add mov dec adc mov sub enter test addr16 (bad) adc cmp (bad) fildl jb orl les das cmp jbe mov jo push mov mov dec add scas push movsb stos jmp cmp push xchg stos fwait push xor pop pop int3 enter sbb pop sbb insl rcrl shll mov es lods push lods push loop fsubs daa pop add and add nop fs or or jl sbb sbb mov repz push cltd cli cltd repnz scas sub sti das pop push (bad) mov mov xchg xor xchg or mov push or imul popa or int out int3 sbb push out sub shrl sub shrl cltd dec (bad) lret and push mov test (bad) sub mov xor cmp sbbl mov and xor push xchg adc popa sbb dec cmpsb cwtl cs jae les mov xchg (bad) mov or pop psubusb int3 jns jp cmp cltd nop push adc out in add and (bad) int jno jl sub inc pop sbb cmp rolb into push xor sbb ja fs mov fildll fst loope sub xchg rol popl loop ret loop mov gs mov or xor or out lea mov lea adc add and jbe bound mov mov xchg in or mov xchg xchg pop clc stos and dec add jl mov xor push addl insl inc add pop xchg sahf or push cmp sbb xor out movsb movsb mov adc repz mov gs sub ss dec or out sbb cwtl imul jnp imul cmpsl fisubrl jo mov jnp push or add push mov data16 cmpsb push xchg loope sbb dec sub jnp pop cmp out inc out jne mov add add jne mov dec jmp xchg add ja mov pop jge popa push lcall push push test test (bad) test dec lock cmpsb lret ljmp or subl bound (bad) sub int3 dec adc inc and pop adc mov rol pusha repnz sbb xor xor push adc xchg mov adc mov mov mov js add cmp sbb dec bnd inc (bad) jno int3 ss pop add js stos push (bad) aad inc or icebp mov cmpsb cwtl aaa imul (bad) arpl xor adc gs test push hlt or mov mov addr16 inc cli mov adc sbb jmp nop test push add cmp es push shll jae pop add cmpsl mov cmp aad xchg sahf cmp adc mov in lock lret lock sub add jle inc push fist pop test mov enter inc lret bound pusha je test and insb pop push pop (bad) push adc push aas bound mov pop mulb ret sbb xchg ret fiaddl push nop stos cmc sub daa pop pop stos push mov lds jg lods adc lds adc dec push adc lea inc in mov push jecxz mov movsb (bad) cmp loopne shrl jae xchg mov adc loope loop jno inc mov outsl movsl inc cmp adc or jno xor push pop push xor gs xor xor fsubp xchg mov pop andb push mov lods mov inc push sbb and or xchg and add or test adc ror fiaddl sbb test cmp call mov test sbb rcl inc sub adc or dec jo mov cmp imul xor (bad) (bad) jns mov xchg mov pop xor jb (bad) xchg sbb mov inc cmpsl aam or dec pop pusha sti or xor inc inc xor mov or jae (bad) xor (bad) imul mov push clc sbb jns push popa push inc push divl fs add add sbb dec (bad) cmp pushf push inc bound and lcall xacquire movl xchg pop (bad) mov test jmp pop dec enter xor sub cwtl cmc pop aam xor jp push gs and stc add push lock jne loopne repz inc ljmp jmp push lcall (bad) shll sbb je push (bad) aad mov and xchg add aam popa pop adc mov adc xor fldt pop jb dec adc enter xor xor rcll hlt pop fsubs push daa add pusha cmp cltd mov push xchg cmp loopne mov sub xchg cltd test cltd sbb daa mov jp mov mov out pop sbb sub push imulb enter lcall sbb and sti push push adc mov mov test xor inc cltd add mov sti mov rcrl rol leave xor rcll cmp cli mov jmp fisubl and sub mov test rolb aad gs cbtw (bad) aam push and inc jnp gs sbb insb push mov mov mov dec cli movsl xchg sbb andl ret (bad) imul mulb popa adc and imul or fwait lock ljmp inc (bad) xor and arpl ret and daa pop push fadd jae jb rcll lds mov xor jne jp mov sti cld mov cld lock pop mov ja cmp test ret sub pop iret push sub xchg iret and mov nop int or push sbb jl jbe (bad) insb fildl xchg outsl test pusha sub rcpps stos test dec sub xchg xchg xchg inc dec dec dec dec push sbb movsb and dec stos movsl mov xchg mov movsb fisubrl and cwtl ljmp test stos xchg je mov movl mov movsb pushf pop adc xchg mov loop pop dec inc call cmp mov pop leave push push and stos sub in movsl movsl dec movsb inc cmpsb and sub (bad) mov or add dec add sbb mov in ret ret cli add sbb and sbb adc movsl sub xor lcall add lcall add inc sahf add loope xchg loopne cmp or dec mov cmp test add aam nop fldl jb bound and fild sahf pusha movsb (bad) and daa xchg push dec xor ret xor inc sub pop mov pop lods popf inc ss imul iret inc pop lcall cmp aam ret add stc adcb add leave cmc cli xchg or icebp clc ret (bad) je (bad) adc pop xchg inc mov pop dec mov inc sbb dec adc jne loop and and pop adc lea std insl std insl fs std popf insl cld insb lea cs scas insl imul jge cmpsb popf int3 mov in xchg jge mov repz cmpsb popf mov cld out cmp or cmp xchg add aam mov push js or test pushf lret inc push cmc push jne mov cmp push addr16 adc jnp pop negb push jae jno cmpsl push in (bad) adc lock or adc add sub jmp mov pop gs shll mov jo repz clc pop push int3 dec test jmp mov mov xchg js lods xchg sub sub push sti lds data16 xor lds mov inc add ret mov cmpsb add daa push and cwtl loop pop in mov (bad) dec lcall (bad) mov inc xchg rcl cmp imul xchg lock pop mov add fcoms mov cmp cmpsb stc addr16 enter xchg dec add dec (bad) and add cmpb jge xchg sbb jg add hlt loope dec or jg xor cwtl test scas shlb and es call add mov push inc loopne push pop sub push sti sub repz add cltd sub loop cmpsl xchg fnop push stos xchg mov orl in jne movsl jge xchg sub in ret pusha adc js lea inc add stos pushf hlt js icebp xchg dec outsl xchg cmpsb mov pop add push and push and cmp inc sti pop lcall inc mov push add bound sbb pop mov jmp xchg mov stos push jecxz movsl and imul std sbb lods sbb cmp mov mov lds mov pop xor bound lods adc mov fucomi mov cmpsb sub pushf std fsubl mov sub push nop dec (bad) and mov push in je scas rcrb sub (bad) (bad) adcl sbb mov test push das xchg movsl sahf lods dec and adc test lock icebp insb xor push lret je hlt mov add jno push sbb mov sub dec dec push and adc xor push cmp sbb inc mov ljmp and cltd adc xchg jmp aam adcl (bad) aaa add or das nop lods sbb rcll sub rcr inc (bad) sub inc loope add inc mov or or xchg xor sub pop (bad) fimull andb pop or fadd fidiv ljmp mov fcmovb mov push ja repz and ror jmp fndisi(8087 lds cmpsl pop inc dec mov mov aaa addr16 xchg add add lds and lret daa mov fldenv inc cli push jne cltd mov cmpsb lcall call and jmp imul je sbb xchg dec pop (bad) xchg and mov imul (bad) mov cmc dec add adc ret loopne xor ret sti xor inc stc mov push mov jnp add bnd (bad) ljmp mov jp cmp dec dec and (bad) mov add repnz data16 clc add inc je push test fildl cmpsl xchg cmp jp aad ret push mov (bad) mov aam les and mov add sub adc cwtl mov xchg nop stos cmc pusha jp mov dec test je (bad) cmp push mov push mov repz daa pop or outsb or cmp and sbb cmp clc sti clc sbb rcrb pop call (bad) ljmp jno repnz repz fxch fxch into (bad) rcr iret loop test ss pop and inc add or push or and jne xchg xor rclb rolb out push push (bad) push leave pushf mov xor xchg icebp (bad) xlat push mov add push mov xor push into adc add shrl cmpsl xchg jnp test insl dec sbb addr16 in (bad) insl cmp add lods pushf xor and pop mov sub dec xor jo jp cmc rol (bad) mov jecxz outsb mov sub mov out ss rorb xchg mov and lcall xchg je dec cmp pop (bad) shll scas or jbe rcr mov push cmpsb jecxz mov jg or mov (bad) (bad) mov jp xlat or lea pusha aad cmpsl dec and push mov push jmp xor xchg movsl ja mov in add push xchg popf ljmp (bad) hlt rcr push push (bad) rclb cmp cltd pop adc stos add xor xor in rorl adc pop push xchg movsb ljmp nop outsb rcl gs cmp pop pop fs mov subb xchg and or xor outsb push jnp sub or mov fs je or lods inc subl scas rcl bound cmpsl pop xchg mov mov mov fdivrs inc mov int3 push stos and jge fcmovu xchg sbb aad insb mov stos xor add add sub call jae rorb (bad) sbb aam out xor and jno ss pop sub dec adc movsb movsl add std pop outsb push fistpll fs hlt std int3 or mov int fcmovnu cmp mov fldt cltd repnz lods ljmp mov call jg (bad) sub add pushf inc jne sti fs jbe mov rcr test lock pop or stos shrb lret jp stos fnstsw test popf jne push fistpll scas and das clc push das sub scas pop ss (bad) das nop and in outsl mov test sub cmp arpl mov ja xchg call mov push cmp and xor push scas mov insl push inc sub add test sbbl cmp (bad) dec xchg vmulsd pop lods mov in mov lret xchg push sbb sub lahf ja popf dec test pop mov jno add inc stos push push and mov mov or lods jo xor xchg and adc movl (bad) or (bad) (bad) pushf into es push pop (bad) add fildll into adc lret movsl jge add or nop xor adc in stc jno js rclb inc in (bad) mov jge push mov jbe inc dec push ss ret in push mov sahf mov add add test ja pop sbb xchg and add add imul push pop adc xchg push cmp mov (bad) mov or xchg push xor adc add jae xchg or xor dec arpl dec jecxz sub pop xchg out (bad) mov test mov mov fs adc cmp sub rcrb repz sbb (bad) js aad test and mov lret mov cli mov and mov loop (bad) repnz fcom add mov mov mov pusha xlat jmp xor cmpsb mov xchg push push and (bad) enter imul jp imul shll cmp sub mov sub jo stos pop mov add sub test and jp jne mov daa push mov mov (bad) jb ljmp xchg leave xlat imul lret (bad) dec cmp jnp lret jmp and jp (bad) mov rclb shlb add test jnp or xchg and mov aad cli loopne mov lret icebp sub movsl push in xchg add pop add adc and mov out les mov movsl jne pop enter pushf mov xchg mov add sbb out jp inc stc cmp xchg stc sub call sub push in mov out cmp fs test lock sti push or insb inc fs (bad) jo ljmp jp sbbl xchg mov cmc mov pushf insb cmp dec and lds xor (bad) in (bad) data16 sarl add or dec sub jns mov xchg jecxz lock in repz xor xchg mov add xchg pop ret push and arpl xor inc leave imul gs ljmp cmp popa sbb sti insb pop aam xor mov inc enter xor mov dec loop hlt xor jb or movsb inc pop jb shrb add xor or add test push fs ds inc inc xlat inc div cli inc jmp into pop es jecxz push clc or cmp (bad) lret out ret jae movsl lds add and push adc jno jg jns jns jns jle cld cs xorl aas cmp xchg adc add mov test sbb mov sbb and xchg ds xlat repz push jae push add push sub and aas scas and adc inc jecxz test fiaddl adc and aam jmp repnz mov push loop ja and mov adc inc jae inc and jg pop mov nop push cmp shrl add xor xchg movsl jle out out mov add idiv cmp cmp in dec lcall in jp and add push dec push cmpsl or rcrl iret dec jp notb pop shlb xor bound mov lret xlat inc ja push fcoms lds cwtl xchg cltd cs imul lret add xchg sbb mov or sub jle movsl test arpl jecxz std adc (bad) addr16 inc aam aam mov pop or pop ja cmp jb jp in push bound scas in cmp fimul out sahf enter fiaddl fisttpl lds popf mov ret inc arpl es mov jb pop push mov shrb sbb cmp inc xchg popf or push and mov or ret push sub inc add xor xor cmc push movsb push insb cmp xor ss pop popa sub mov orb test insb les add movsb movsl insl adc cltd ret mov or jbe or (bad) mov sub mov mov out outsb sub jo lret jg jae adc in and das jbe sub lret jmp fcoml imul mov xor cmp sbb or push mov nop push mov sub test into sbb xchg in out ja js lret loopne loopne xor xchg add mov xchg adc rolb pop xchg push cli push mov pop lds shrb pop cmp (bad) sbb (bad) sub inc lea repz cmp jne insl dec mov pop push sub xor (bad) bound sbb fsubrl push dec or ss lcall push and xlat lods adc sarl das or sbb push rcr or xorl dec inc adc add mov mov in out adc nop add orl push pop mov mov add mov add add and add adc shlb hlt test mov and cwtl sub or or mov pop add cmp jge jge and in inc sub push cmc (bad) jb arpl ds mov jbe pop insl (bad) and icebp sbb loopne cmp xor xor popa mov xchg popa or adc adc int3 sbb pusha cs iret sbb jns sbb push outsl and jb bound cltd pop jb cwtl (bad) fmul pop mul cmp add add jecxz out lcall fisttpll (bad) mov (bad) or inc stos cmp fmuls mov rorb or lds and cmpsb mov lods jmp je loopne inc inc push adc movb add cmpsb sti cwtl xor addl sbb pusha roll jae test cmp sahf pushf lret push or int3 push adc cwtl push push sbb adc inc push or or inc imul xchg mov fs mov fwait dec push popf insl sub fdivs lret push push pushf dec mov movsb cmp mov sub test in add inc in sbb js addl movsb cltd jmp add push adc add ja sub and aaa mov faddl and xor add scas jg cmp addl mov adc or mov xor push cmp cmc popf dec (bad) cmp out add ss fnsetpm(287 leave lea jo sub dec pusha sub jno (bad) mov add mov xchg out loopne ljmp mov lods add pop cmp inc xor stos inc ret sbbb and adc arpl sub cmp dec pcmpgtw sub jle stos xchg lret or and adc insb add lret pusha ljmp pop add sbb popf rcll (bad) xor or popa les sete nopl pop vpshuflw mov jl sub loope or popa stos mov sub adc or (bad) mov pop mov out jl pop cli loope or repnz mov jns (bad) cwtl into push xor xor cmpsb xchg popa mov mov xor xor pop jne pop jne pop jne pop jne pop jne jno xchg loopne (bad) outsl xchg cmpl jno push imul jl not pop ss sub out loop jno jmp inc adc pusha popa subl add xchg mov cltd pop je sbb and and test cmp (bad) mov mov repz mov rol cli pop xchg pop lock push (bad) pop (bad) jne ljmp testl xchg stos jb cwtl popa or adc cltd add int3 xor mov vpsubb jmp mov jnp adc push pop push das xchg insl jne xchg pop push mov insb dec pop push in lret sbb stos pop push mov (bad) sbb xor insl stos cmpsb mov test inc clc ljmp pop xchg mov popf test fldt mov push inc jae cwtl or jno jno push popa jl fidivl add mov sbb rcll jge fwait cmp (bad) pop lods test pop aam (bad) adc mov mov popa out loopne adc or pop js (bad) lds shlb sbb cmp sbbl ret int mov push les adc (bad) fcmovu loopne cmp xchg popa jnp les pop call cmp sbb cmp pushf sbb mov cmc mov test xchg xchg aad cmp lcall cs fwait push sti and and (bad) js mov cmp cmpsb sbb je (bad) rcll enter fistpl ficompl pop mov xor fldenv aad ss push pop (bad) sbb data16 push pop (bad) sbb data16 push pop (bad) sbb data16 push pop (bad) sbb data16 push pop (bad) adc (bad) adc jb xchg push pop icebp js (bad) xor jmp jns (bad) pop pop shlb inc adc pop jbe pop jno pop xchg and jne das sbb sub sbb or mov sbb lret and cs gs or orb cmp cwtl xor jne icebp xor dec or add inc gs insb or push cmp nop sbb (bad) xchg or fiaddl mov pop push mov stos adc or nop sbb lock pusha sarb push (bad) push (bad) dec nop sbb cs xor and in pop or push add add add sub or mov push mov sbb cs jp popa sub cwtl xor jne icebp xor dec or add inc gs insb or push xchg sbb or pop inc inc loop sub loopne xchg or lock nop sbb adcl loopne cmp (bad) fs push lret inc cltd push inc ret rcl cmp movsb ret sub (bad) xor push pop or dec sbb xor movsl jl xor xchg push movsl rcl mov test adc lods and popa xchg popa xchg sbb push xchg popa xchg dec call cmp popa xchg add push inc or int3 adc or lret xor ret xor xor sub add xchg gs stos mov sbb sbb push test xor or push xchg popa xchg stos mov inc adc xor sbb ret or ret or int3 adc pusha mov add mov sbb das push ret or test or xchg adc pusha jmp or rclb pop imul or int3 stos push inc or ret xor xor mov inc or ret xor sub xchg andl xchg sub lret cwtl add das fdivrl inc xor xchg lods popa or ret or inc (bad) sbb orl pop push and adc andb xchg (bad) popa xchg lahf push pop cmp data16 push push adc xchg subb xor mov adc xor sti adc dec inc push push addb pop insb push stos je add pop sub xor movsb shl sub mov push dec xor or int sbb rorb orl inc cmpsl adc mov inc pushf xor mov xchg adc or or adc push test nop and outsl test xor or dec data16 xor dec stos or fsubrs xchg popa xchg popa xchg mov adc add jo loope test ret adc ret or ret or scas sarl sbb sbb sbb ret or ret push adc dec push xchg movsl sub xor stos push dec cmp cmp xlat cli pop dec xchg cmp sub xchg movsl test sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg xchg stos push xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub push xchg movsl test dec push xchg mov cmpsb xchg movsl sub xchg adc xchg movsl aad mov push xchg outsl dec push ljmp push mov adc movsl sub movsl das dec and movsl sbb xchg mov sub movsl sub cmp xchg movsl sub xchg movsl fldt stos push xchg movsl sub jp mov ss loop movsl adc mov push xchg dec and dec dec sub adc push xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg dec sub lds adc push adc dec push xchg movsl sub dec adc or and clc stos and movsl add adc cmp and mov and xchg pop enter mov add dec nop stos and cs mov inc je mov enter mov jp call fdivl test dec push mov test and ss and push push and adc cmpsb inc and inc (bad) xor data16 call push sbb adc or cltd or sub mov cwtl xchg daa mov test mov enter mov test push movsl sub mov inc or je call test mov inc je mov xchg movsl sub xchg movsl sub inc shll adc stos and jp shll adc stos and xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg push push sub xchg movsl push cmpsl push and cmpsb xchg movsl push push xchg movsl sub xchg movsl sub movsl push push jge jp inc inc hlt mov rolb dec push movsl push push jge jp inc inc hlt mov rolb dec push movsl push push jge jp inc inc hlt mov rolb dec push movsl push push jge jp inc inc hlt mov rolb dec push movsl push push jge jp inc inc hlt mov rolb dec push movsl push push jge jp inc inc hlt mov rolb dec push movsl push push jge jp inc inc hlt mov rolb dec push movsl push push jge jp inc inc hlt mov rolb dec push movsl push push jge jp inc inc hlt mov rolb icebp xor gs inc movaps push push push add mov jns inc or aam repnz in adc das push inc lret push pop mov mov test inc jp push push push add mov jns inc or aam repnz in adc das push inc lret push pop mov mov test inc jp push push push add mov jns inc or aam repnz in adc das push inc lret push pop mov mov test inc jp push push push add mov jns inc or aam repnz in adc das push inc lret push pop mov mov test inc jp push push push add mov jns inc or aam repnz in adc das push inc lret push pop mov mov test inc jp push push push add mov jns inc or aam repnz in adc das push inc lret push pop mov mov sub sub sub sub jo sub sub adc mov mov jno sub sub test test jo mov mov jo mov adc mov pop sub sub jo sub sub sub sub add mov sub push pop jns mov add sub mov pop inc and (bad) mov xorl mov or mov mov flds add mov movsb dec mov loope mov mov mov mov fcmovbe cmp fiaddl push add fmuls mov test es xchg sub mov jbe mov inc (bad) jne xor xlat xor or push ret mov sub test push jbe cli loop mov fimull push push inc sub mov add dec adc cmpl cmovb adc add mov mov mov pop pusha adc xchg or shr sbb loopne pop daa sbb mov (bad) push mov (bad) push das push and jmp sub mov or adcl ret insb dec add test sahf and daa adc popa imulb adc and dec push fild mov (bad) mov sbb shll rorb mov orb add fistpl push adc inc les pop push mov mov mov pop add inc loopne pop fimul (bad) push ja cmp sub add outsb pusha shlb mov addl dec sub add adc xchg dec add das pop and outsb mov test xor mov dec dec shlb rorb out jns xorl jo adc mov int3 push scas or jb outsb int dec arpl idiv mov nop cli mov pop cwtl rcr je fadds movups adc mov jo out repz fs mov sbb xchg rcrl movl jl mov mov pop and mov or stc inc popf int fwait stc into fstps stos mov loopne sbb shrb pop adc add icebp cld push fwait mov jo stc pop push mov inc lret insb and push movsl icebp mov add adc add push pop xor push shll inc lea pop push push push push push xlat aam pop rclb push adc push xor push adc push xor gs dec jg enter pop rorl pop adc push push add adc push xor push adc push xor gs dec jg enter pop rorl pop adc push push add adc push xor push adc push xor gs dec jg enter pop rorl pop adc push push add adc push xor push adc push xor gs dec jg enter pop rorl pop adc push push add adc push xor push adc push xor gs dec jg enter pop rorl pop adc push push add adc push xor push adc push xor gs dec jg enter pop rorl pop adc push push add adc push xor push adc push xor gs dec jg enter pop rorl pop adc push push add adc push xor push adc push xor gs dec jg enter pop rorl pop adc push push add adc push xor push adc push xor gs dec jg enter pop rorl pop adc push push add adc push xor push adc push xor gs dec jg enter pop rorl pop adc push push add adc push xor push adc push xor gs dec jg enter pop rorl pop adc push push add adc push xor push adc push xor gs dec jg enter pop rorl pop adc push push add adc push xor push adc push xor gs dec js hlt and sub lea (bad) out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsb mov movsl arpl mov mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg lods mov inc mov out ret pop popf outsl or mov xchg test jmp scas inc pop movsb movsb movsb les or xor mov daa fiaddl add mov jo (bad) jae adc xchg xor xchg xchg push push inc sub enter fs xor mov and test les mov sub int3 push mov ds dec sub push inc or adc cmpsb adc loope adc xor push test lds pop add imul mov cmp xchg xchg cwtl mov jecxz add xor shrb cmp push adc dec stos or push sub lods sub or (bad) and pop or sub cmp imul ja adc push or add push in hlt push push push nop cwtl mov and push pop mov data16 sbb aad push idiv out imul clc jmp insb jecxz fsubrl push movsl dec push out insb (bad) dec notl xchg dec (bad) mov xchg cmp jl cmp xlat push mul add lock repz push imul mov fistpl (bad) ja pop imul rol sub xor inc ror jb xchg jb xchg sub rol push mov mov jmp sbb clc ja jno xor pusha rol adc aad mov cmp inc arpl lock lds push popa xchg xchg dec in jecxz or push push add aaa mulb mov aaa repnz mov push rol movl mov xchg rclb mov stos inc enter cltd xchg popa xchg cwtl pop dec inc rol fisubl jl dec push lock stos mov push negl xlat orb addr16 fmuls enter adc pusha rcr pusha les mov push stos sti gs test aam (bad) out in add fwait lret dec dec xchg adc mov mov sub sub xor les movsb mov shl (bad) in adc adc fwait icebp cmc or add mov sub add add push jae xor mov imul mov or inc cli in mov xchg adc push and shlb fs xchg xchg ret movsl xor fisttpl jl push aaa pusha stos test movsl and lds enter xchg mov cmp inc int3 jbe rclb mov pop jb and and mov lock shrl pusha int push push movsl jne mov lock (bad) js fldcw dec pop xor pop mov jae mov push add and mull insl movsb or loopne jno nop lds xorb sub pop sub out in mov in xchg addr16 ja lret js jmp and sub ret add push mov cmp inc and and inc in sub cmp data16 xchg or cwtl flds dec shll dec es sbb rolb cmp xchg sub mov cltd sub pop mov bound aam in lcall sbb xor and inc push je add add mov xchg repnz jae add push mov popa int push pop xor or adc mov insb fist mov mov aam addl mov add aad sbb popf and xchg imul and in xchg xor movsl pop fwait cmc jns push adcb sahf xchg mov shlb call push jp nop jp decl (bad) or sbb push and das or cmp cmp (bad) pop pop aas mov ja add (bad) push or test mov push dec add ljmp ljmp add adc aad roll sub data16 mov aaa nop cmp jl out aaa xchg pushf imul and cmp pop pop dec inc push sbb pop daa sub cmp testl stos inc pop test sbb sbbl push stc mov jns insb jmp lret mov and mov popf inc xor js dec mov xor outsl pop adc lods hlt lcall xchg adc mov loop ret lcall outsb fwait push cltd ficomp (bad) lret lock out scas push adc scas mov mov jle mov rorb or jl push pop sahf fisttpll daa mov pop pop int3 cmp loope add sti mov and push enter sub ljmp sbb sbb sbb push jp jl jo sub xorl shl cld xchg xor dec (bad) or movsl fcoml (bad) dec sbb inc pop push imul mov mov mov ljmp dec stos cs subb and popa popf mov sbb jge push jb clc pop add cmpl outsb shrl stos movsb cmc sub or jae pop movsb sbb movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl add push xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg add add add add add add add add add or add or add add add cwtl add or add or add adc add add add cwtl add pop mov add or add or add sbb add pop add testl add pop add add add add add testl add pop add adc add push add add insl add inc lret add adc add push add add add inc lret add push aam add sub add add or add push aam add add adc adc add faddl add pop add pop inc add imul add sbb add pop add or add imul add sbb add add or add or cmp add add sbb add or add or mov add sbb add pop push add push testb nop add fwait mov add and add push testb adc add lock and add and add adc add out add mov add add es add out add push add mov add mov jge add add add push add adc add mov in add sub add sub add add lret add mov add sub dec add pop les add mov add sub sbb add les add inc add loop add out outsl add xor add xor add aam add outsl add clc add xor add aam add add clc add add add mov add add sbb push add push cltd add cmp add sbb aaa add push cltd add sbb add cmp add aaa add and add and add cmp cmp add fwait add and add and add das lea add add inc fadds add aaa add and add inc add inc fadds add add and add inc add inc sbb add add dec mov add iret add inc sbb add add dec mov add add es add sub add dec iret add pop dec add dec xor add add sub add sub add popa incl add add push pop add sub add popa incl add add push pop add push stc add sub add sub add insl pop add js add push stc add pop jae add add cs add js add test add pop in add push add das mov add add pop in add add das mov add out add nop inc add cltd ret add pop add bound add xor add xor add movsl outsb add bound add fs add (bad) add xor add movsl outsb add mov add fs add add xor add xor mov add data16 add imul add mov mov add insb dec add aaa add add (bad) mov add insb dec add outsb nop add cmp add shll add outsb nop add jo add cmp add fistp add push add jo add je add cmp add jmp add add jbe add cmp mov add add add jbe add jns add mov add add add add add jns add jnp add inc add add add or add sbb add jle add inc outsl add inc into add sbb add jle add (bad) les add add inc pusha add pop loop add push add (bad) les add pusha add inc roll add push add xor add xchg add roll add add xor add aas roll add fiaddl add add dec in add aas roll add add mov add (bad) add dec in add dec xchg add add push or add pusha add dec xchg add add add bound add xchg pusha add xchg mov add dec mov add insl xchg add sub add add dec push add insl xchg add add xchg sub add push add push test add test add cwtl pop add lcall add add test add xchg cltd add lcall add add push jg add icebp add pushf roll add jg add add mov add mov testl add add add pop add push dec add push roll add jnp add mov add pop add mov or add hlt add pop add pop repnz ret or add aad add add pop add pop repnz (bad) aad add or add mov add pop repnz pop jb add or add mov add mov jb add add fnstcw add lahf add mov adc add add add out add in movsl add mov add add pop popa add in movsl add out jae add add add pop popa add pusha rolb add jae add jo add xor add mov add add pusha rolb add jo add mov add mov add add pop popa add pusha rolb add mov add popa add shlb xlat jae add add bound add popa add std xchg add xlat jae add rolb add add bound add xchg add or add rolb add mov add add bound add pop add adc add fisttp add bound add add adc add adc lods add jmp in add add adc inc add jmp std add add ljmpw add sbb add in std add repnz add add ljmpw add sub add repnz add xchg add add ljmpw add ss add xrelease add pop add ljmpw add ss add inc mov add pop add (bad) dec add push mov add dec int3 add (bad) dec add stc cmpsl add imul add add stc cmpsl add sti inc add imul insb call add push add sti inc add cld flds add add add push add js add cld flds add inc add outsb dec add outsl flds add add xchg add inc add outsb dec add outsl flds add add inc add add add add jno add xchg add mov push add add add jno add jb add mov dec add add add add jb add je add mov add mov je add add je add jne add mov cwtl add add add push jne add add ja add lret cwtl add fdivs add jne add outsb add ja add js add fdivs add pop add or add lock js add jp add out add cmc add add lock or add jp add cmc add add dec add or add jp add jnp add dec add out add or add or mov add add out add scas add cvtpi2ps add add jle add sub add sub add mov add add sbbb add sub add loope add mov add aaa add sbbb add loope add popf add adc add adc add (bad) in add popf add data16 adc add (bad) in add add pop add adc jne add add pop add js add jne add mov add add js add js add mov add in add test add js add addl add outsl add test add addl add outsl add sbb add mov add jecxz add add sbb add cmpsl add mov add add call add sbb lock mov add call add sbb aad add mov add lret add push aad add data16 mov add lret add popa add and add cmc add mov add popa add faddl add cmc add and add xchg add faddl add outsb add and add xchg add xchg jg add outsb add and mov add loop add adc mov add or add jne add and add sub add sub add xchg roll add das in add mov add xchg roll add in add sub add cwtl jo add ja add sub lret cltd in add or add cs xor add pushf aad add outsb add xor add pushf aad add outsb add xor add cli add sahf cmp add out add xor add xor cmpsb add mov sbb add xor push add mov sahf add fwait pop add aaa push add cmp add mov and add test fldl add cmp add add mov add cmp add mov add cmpsb testb mov add cmp add cmpsb testb test add rcrl add aas pop add test add test lcall aas pop add inc xchg add test sub add in fadds add add inc or add lods jg add stc in add add inc cli add lods jg add in push pop add inc cli add inc xchg add scas sbb add add adc add inc xchg add inc data16 scas xchg add mov add adc add and inc data16 dec lret mov add mov add and xor dec lret dec xor add xlat add xor jbe,pt add add dec inc add mov add mov add jbe,pt push dec dec add dec inc add dec mov add mov add dec dec add pop pop add dec mov add mov add mov add pop pop add push adc add mov add mov into add js add dec fwait add dec call add mov push add xchg add add dec fiadd add je push xchg push xchg add add add push int add testb xchg add push movsb inc add push int add add mov testb movsb inc add mov add push sub add add mov jle push mov add ret add add push pop add mov jle push ret push rclb add add mov stc add rclb add add push mov add mov in push in popl add add push lcall mov popl push stc stos add push lcall mov sbb push stc stos add pop xchg add push pop add pop mov add ret pop pop xchg add adc mov add ret add mov pop adc xor add add pop loop add mov add push add and pop das arpl add add pop scas add lds add in pop das arpl pop cmp add add pusha or add in add imul cmp pop inc and add (bad) testb enter leave jecxz pop inc and add (bad) testb data16 add jecxz add dec add dec mov add data16 add add lret dec add int3 fldl pop push mov pop push sbb add add outsl (bad) add lret dec add int3 fldl pop push sbb pop pop jecxz add add jne add lret dec add int3 fldl pop pop jecxz pop pop add add add jp add int3 fldl add push pop pop add pop push ret add jl add int3 fldl add push pop push addb jl add jl add int3 fldl add push pop ja add test add add add into push add mov pop test pop xchg and add add jg add iret mov add pop add xchg and pop lahf sldt jg add adcl (bad) mov pop lahf sldt mov push add test add (bad) mov add out pop mov fildl add cmp add mov add out das sub das das xor das outsl xor xor xor xor inc cmp cmp pop inc xor inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc dec inc dec inc dec inc dec inc push inc push inc gs inc addr16 jne ja inc inc push inc push inc push inc pop inc inc push inc dec inc dec inc addr16 aaa inc inc inc inc dec dec dec inc dec inc dec dec dec inc dec insl push inc push inc push push push outsl push inc push dec push dec push sub push addr16 inc pop xor aaa pop inc pop inc pop push pop arpl popa inc popa imul insl fs fs data16 cmp arpl imul imul push outsb inc outsl dec jo jo je jne jne jns jns sub das js imul cmp inc inc dec inc xor inc inc inc inc inc dec inc dec inc das inc dec inc dec inc push inc outsl inc dec inc inc inc inc inc dec inc push inc ja inc dec inc dec inc dec inc dec dec dec inc dec das dec cmp dec xor inc push dec push push push imul inc push push push push js dec push push inc push push push xor insb push outsl pop xor pop jae inc pop pop pop gs dec bound inc fs gs data16 dec push xor push sub push push push push insb inc insl push jo jae jae je jne jbe jbe jbe jbe ja ja js jp sub inc das xor xor xor cmp inc das jbe xor inc xor inc ss aaa das aaa dec cmp inc xor inc xor inc xor cmp dec push dec outsb push xor insl push jno gs inc push inc push sub push dec pop insb pop outsl popa inc popa addr16 push push push push push insb pop outsl inc outsl inc jo jb jbe ja ja sub sub push sub sub inc das push das data16 ja jns dec xor pop xor inc xor xor cmp inc xor das xor xor xor xor inc ss ss ss ss ss ss ss ss push cmp imul inc dec inc push dec inc pop inc outsl inc inc inc push inc addr16 insl inc inc inc dec dec inc dec imul inc dec dec dec imul ja push dec inc dec insb push push push inc push gs addr16 xor push addr16 imul push dec push push push push push cmp xor push dec push ja pop push push push imul addr16 ja outsl pop inc popa inc arpl inc fs fs fs fs gs sub addr16 addr16 addr16 popa push jns inc imul jp das push push push imul insb arpl outsl inc outsl dec jo je je je je jbe jbe jbe jbe jbe ja ja ja js js js jns jp jp das xor dec xor inc ss aaa addr16 ja arpl xor inc cmp xor pop inc jae jns dec inc push inc dec inc dec inc dec inc xor inc inc dec inc ja push inc jno dec inc dec dec outsl dec ja cmp dec addr16 dec dec cmp dec inc dec dec dec dec dec dec push push push jae inc push dec push dec push push push jp inc push pop push dec push inc push inc push jne push push pop push pop push arpl pop inc pop inc pop inc pop dec pop inc arpl inc addr16 dec push ja jp das imul imul inc insb push insl inc outsb inc outsl xor inc jo jae jae je je jbe ja ja ja ja ja js js jns jp sub sub dec das push das push das jp xor outsl xor dec xor inc cmp das cmp jbe xor inc inc inc inc inc insb inc insl inc inc inc ja bound inc inc dec dec dec cmp dec push dec jno imul push push push dec push xor inc push dec push fs jbe dec pop imul pop addr16 jae push arpl push fs data16 addr16 imul push push inc imul sub xor fs dec outsb das outsb outsl outsl push jno je je je jne jns jns jp jp sub dec xor xor dec ss cmp cmp jp push cmp aaa inc pop inc xor push xor dec dec das dec addr16 inc dec sub dec inc dec inc dec push dec xor dec push dec ja xor push push push push push push push xor push fs imul jae jp gs pop push popa inc fs fs push inc imul push imul xor outsl push outsl arpl jae jae je ja ja js jns jp jp das addr16 jo inc xor xor cmp cmp inc cmp inc push inc jb inc inc popa dec push dec cmp dec pop dec addr16 inc push inc push inc push push push push push dec push push push pop push pop push outsl push ja js aaa push dec push jp inc push inc pop pop pop fs outsl popa dec arpl gs gs gs addr16 push inc imul addr16 jno jae je jbe jbe ja ja jns jns sub das cmp pop xor xor push xor ss xor bound inc fs xor inc push inc outsl dec push dec jp insb dec ja dec dec push dec push push aaa push dec push xor pop push push push addr16 xor push cmp pop popaw xor arpl push arpl inc fs fs das gs imul cmp push outsl jae jae je je je jne jne ja ja js js jp xor inc xor cmp jbe xor inc bound inc xor inc js ss inc inc xor dec inc dec dec dec xor dec sub push inc push push push push push push fs push jno jae pop pop outsb pop ss inc pop inc popa dec popa push bound pop inc addr16 addr16 addr16 push push imul jb jb ja js das xor dec xor xor xor cmp inc cmp push arpl pop dec outsb dec outsb dec xor dec push push inc push push push inc push push push imul jne push push push push dec push xor push push push gs push pop dec pop push pop push imul inc xor outsb dec outsb dec outsl data16 ja jns jns das outsb xor inc cmp inc insb inc outsl inc jae push inc push dec js push dec dec push inc push addr16 inc popa dec arpl xor inc push jno js js xor push xor xor dec xor dec inc aaa inc ss dec inc fs inc dec inc dec dec push dec pop push sub push bound push inc push outsl push ja inc push push push push pop dec popa sub bound xor gs addr16 jp inc push inc outsb pop outsl inc jbe ja ja ja das push sub push xor jns dec xor inc xor xor xor inc cmp xor inc inc inc ss inc inc push inc push inc pop inc cmp inc inc dec inc push dec sub dec ss dec dec push dec pop push xor push jno jb xor inc push inc push dec push push push xor inc push sub push push addr16 push popa push push arpl push push push addr16 addr16 addr16 addr16 push imul insb push insb js jb das outsl push jb jae jae je je je je je je je jne jne jbe ja jns jns jp jp sub pop xor bound xor js inc cmp inc inc addr16 sub inc inc inc xor inc inc pop inc jb cmp dec arpl dec jns inc push dec push jne dec push pop push inc push jb bound push push pop dec pop jns jne addr16 dec imul dec insb push outsl push jno jae jae jne jne jbe jbe ja jp jp sub inc xor dec cmp push cmp push inc bound inc push dec jp push dec push push aaa push xor push inc push push pop xor pop aaa bound push addr16 push xor dec js js das aaa xor xor cmp outsl inc dec inc dec dec jb dec dec dec dec das dec push push push xor pop push xor pop dec pop pop pop addr16 jp dec fs insb xor addr16 push imul inc insb push outsl imul je jbe sub push dec xor jp push xor xor aaa cmp inc inc push inc dec inc push dec dec dec push dec xor push jbe push push das push das push ss ja push fs fs push addr16 push insb inc jbe jbe jns jp xor dec xor cmp aaa inc inc inc imul push dec pop push xor push jp inc push push pop arpl insl data16 addr16 addr16 push push imul je jne jbe jbe ja js jns jns sub inc xor xor cmp ja push inc push inc inc inc pop inc xor inc push inc gs inc dec xor dec dec dec push dec xor dec inc dec jne xor push push push inc push push push dec push gs outsl pop dec push imul inc jae je je ja js jp xor xor xor xor pop inc inc inc outsb dec inc dec jae inc dec bound push bound jp outsl push jb gs xor arpl push jp dec outsb inc jo jbe ja js js jp das inc xor xor inc aaa inc cmp imul push inc push inc dec dec inc dec jae inc dec inc dec inc dec dec dec push dec outsl dec dec push xor push jns inc push dec push jae push push xor pop inc pop inc addr16 push outsl inc outsl push outsl pop ja ja js xor dec inc ss dec inc dec dec gs inc dec gs inc dec xor push cmp push insb push jae dec push arpl pop jb dec insb insb xor jb jbe ja js jns xor push xor push inc push inc ja imul jae je arpl push cmp inc push imul push pop push popa dec bound je push jno jbe js sub inc xor xor xor aaa dec cmp das inc dec push jo xor push xor pop pop pop bound xor push insb inc insb jno inc jo jo jae jne ja jns jp sub dec xor xor push xor push ss jo push inc push inc inc inc pop dec push dec xor push gs jbe cmp push arpl gs cmp pop push popa inc bound inc push ja push outsb ja dec js xor xor jno arpl push addr16 push push popa push xor gs bound xor imul dec jae jae je je jp sub push xor xor inc aaa xor push dec dec push pop push pop popa jbe dec xor jne xor ss cmp jno dec inc gs dec dec das push push push push push jb jb cmp popa xor insb inc jno jbe js xor xor dec inc jp dec inc imul pop dec inc push imul push push popa cmp bound push gs gs insl inc jno js jp xor dec sub imul pop dec popa dec inc dec jb insb push push push pop push push inc bound push addr16 ja dec imul outsl jbe jns jp sub jbe inc xor xor arpl bound inc insb inc imul push push push insl push inc push insb fs data16 push imul je jbe js jns cmp inc popa inc push inc push dec inc push jno arpl push je inc imul xor push inc inc inc dec dec dec push push dec jns pop push inc push push outsl imul jp das jb inc inc cmp jns push dec ja push dec inc pop cmp imul je jbe ja js js xor xor inc xor inc push addr16 push push dec push dec push dec pop push addr16 insb outsl jo xor insb inc imul dec xor push dec push bound arpl push push push jns xor xor jo inc inc inc inc dec inc dec push dec gs push imul dec xor cmp cmp inc jb dec inc inc inc jae inc dec xor push xor push xor jbe inc cmp jne jo pop push insl popa arpl imul push jns das inc xor push inc dec dec push inc push dec outsl push push jne jp jp sub das cmp pop push outsl push outsb jns inc push inc push inc inc imul dec jbe push addr16 jb outsb imul jae pop sub cmp dec inc dec inc push fs xor push cmp data16 inc jb jb jb ja js jns sub xor addr16 imul jb ja jp sub inc xor jp cmp dec cmp xor push dec pop dec push xor arpl pop arpl dec imul push insl inc je jbe ja js jp sub cmp xor push dec push dec popa bound bound push outsl outsl pop outsl popa jno jne ja js xor aaa inc outsb inc xor push jae dec push insl cmp ja sub xor dec dec dec push push push dec push dec addr16 jae jbe jns data16 sub jne push cmp dec cmp imul dec dec dec push dec dec push inc addr16 push push jo jb ja ja js js jns jp cmp dec dec dec dec push push sub push insb push inc fs fs imul dec push pop sub imul jae je sub jae sub ss inc imul push inc pop ja ja jo dec insl dec ja xor cmp sub inc das dec xor pop data16 sub jns inc push dec pop dec sub dec jp push pop push cmp dec addr16 aaa imul js jno outsl dec inc push dec push sub pop dec sub jne jbe js xor xor inc push inc push inc gs pop inc pop dec dec cmp dec inc dec pop push dec push imul imul outsb gs jae jae jne jbe ja jp xor outsb xor aaa xor xor xor xor pop pop dec bound dec push ss ja jns jns jp das dec xor sub push popa push popa pop popa pop jno inc pop insl pop jbe bound data16 imul insb insl jno je jbe jp sub push xor xor xor push inc das inc cmp inc je cmp dec jo jne insl push bound pop imul imul jbe jns sub inc ss ss aaa js jbe push inc dec dec dec dec dec jno xor push xor push jbe bound inc inc push cmp jb jb jae jbe ja ja jns jp jp sub jno xor push ss ss ss ss arpl fs gs bound dec dec inc dec dec jbe xor push jo dec gs gs jae jo inc outsb push je jne jne jne jp jp xor je js inc dec push dec push jbe jbe js inc ja sub xor jns jne insl dec inc dec pop dec popa pop bound push outsb insb xor inc xor ja push xor xor xor xor insl xor cmp jns jo je jne jns imul inc jns xor dec insb dec je jbe jns jns push dec addr16 imul push jbe jp push push push jns xor pop push pop pop pop insl pop outsb pop xor pop push popa inc popa push popa pop bound bound bound push bound imul arpl arpl imul fs insl push ss push insb jne jbe jp je push jb je je js js xor je gs cmp push inc push inc js inc inc push inc push dec push dec imul dec push jp push xor popa outsb arpl pop imul outsb outsb popa outsl jno jb bound jno jno jb jb jae jne jne jbe js jp xor dec inc xor dec ja jae push push insl push imul xor jp insl dec inc pop xor pop inc pop push pop insb pop ja push bound ja pop inc outsb inc jb push xor ja jns inc xor xor dec js inc xor ja push xor xor imul inc jae push push inc push dec outsb pop jp cmp insb inc push inc gs dec dec push dec fs inc push inc pop imul jno js jp xor je imul jo jp xor push xor push inc push dec push push push pop pop push arpl fs jp dec gs gs insb pop insb imul je xor jne push dec imul push xor push xor pop xor bound bound insb imul inc push xor inc xor dec cmp dec cmp ja xor popa inc push inc xor js jp imul push popa push js push arpl push jb ja das dec aaa push inc fs dec inc dec inc pop inc aaa inc addr16 xor dec push dec dec dec imul pop dec cmp push push xor dec insl push insl ja ja js jb ja inc xor push dec push outsb dec aaa dec push dec push dec xor inc push xor pop dec popa xor bound bound push data16 bound jo jo jae je jp sub das xor sub dec xor xor jb ss xor jne popa inc js pop inc xor dec pop dec jo jb dec dec arpl push insl push dec push jbe pop pop dec pop jo xor popa bound bound fs jb pop data16 imul jno push outsb jo cmp jo jno jno jno jb jb jb jb jb jae jne jne jbe jbe jns jns jp sub xor sub xor aaa inc aaa je dec cmp jo xor inc fs jp popa inc bound dec pop dec sub dec ss imul push imul bound push gs insb dec insb dec outsb xor dec outsb jno aaa jo jae jae je jne jne jbe js js js jns jp jp das xor xor jp arpl outsb xor xor addr16 ss addr16 jno dec dec push dec dec dec jae jns xor dec dec dec dec dec push inc pop push pop sub fs outsb push outsb imul xor jb jne jbe jns jns inc pop inc cmp jne xor insl xor je sub xor xor dec inc ss inc insl inc jo dec inc dec inc je ss outsl dec imul pop xor popa bound arpl inc inc dec push imul insl push insl popa insl insb insl js inc jno jno jno jae jae jae jne jbe jbe js js jns jp xor jne das xor xor pop cmp popa inc js jbe imul inc push dec jae xor push ss jno jne push dec pop jb popa xor gs jno jae pop jb jb jb jne jne jbe ja js jp jp das push das push das insb xor aaa xor jb xor inc dec dec dec dec jb jne outsb push jns popa push jne jbe xor arpl arpl data16 dec push imul xor insl gs jp cmp jb jae je jne jne js jp sub xor xor xor xor dec aaa push aaa bound pop inc jbe push dec fs push arpl gs data16 imul outsb jne addr16 jae jae je jbe ja xor jae xor cmp arpl inc outsb inc push dec gs insb dec js insl dec xor push cmp pop jb pop popa push popa jae outsb inc addr16 das insl jo ss jb jae jae jae je xor dec xor inc xor jae imul cmp js push dec pop dec dec dec bound push das push jp push push fs jne popa pop jp xor fs jbe xor dec imul insl push insl outsl outsb dec jo jo jno jno jno jb jb jb jne ja js jns xor xor xor push xor aaa jae dec cmp inc cmp dec aaa dec dec je bound dec push push das push imul pop push bound jne dec bound inc imul jns arpl jae jne jne jbe jbe jns ss cmp jne jne aaa imul inc jae jp das imul xor dec cmp inc jo jo sub push pop push je dec push push pop cmp popa cmp arpl dec pop imul push imul insl outsb outsb addr16 jo jo jno jb je jne js jns xor xor xor insb cmp push dec dec dec jp outsl dec jo dec dec bound push cmp push js push insl pop fs dec bound jb imul jae je jne ja js jp jp xor pop xor xor xor dec popa dec pop dec insb dec aaa dec jbe push push js pop pop pop pop arpl arpl arpl sub push push imul insl jb imul jbe js sub jb das xor jo pop xor xor jns push aaa cmp inc je fs pop push push pop dec fs imul dec outsb xor outsl push jo jo jae jne jns jp jp sub inc xor jb js jno ss inc dec cmp push push pop jno xor popa imul jo jno jb je sub inc xor inc cmp dec das dec ss outsl dec xor push jo je bound imul popa insb insb outsb xor jo jb jb jae jne jns jns jp xor ss pop dec push dec xor dec jb je sub push jns jo jae push insb pop insl fs je outsb das bound jo jne jns inc xor xor dec cmp pop dec imul dec dec outsb dec dec dec pop dec dec push ss ss jne ss insl xor jno jb jne jns jp sub dec aaa push xor sub jne pop xor xor je inc dec xor push aaa bound jne pop jno jno jbe xor dec dec push xor xor xor imul dec jbe jno push push outsb outsl dec jo jo je jne jbe ja js jp xor ss cmp fs sub dec push push cmp push inc pop cmp popa insb insl xor jb je jne jbe ja sub ss push push popa push jp dec pop dec dec outsl jae js jns push jae jne xor xor cmp jae pop inc fs jne dec dec jno outsl popa push gs push imul outsb insl outsl xor jno je das push xor xor inc pop dec bound dec je push popa bound push jo jo jb jae jns xor inc xor dec arpl push jb inc pop dec push imul das outsl inc jno jno jb ja sub jb popa xor insl inc sub push jb arpl push jo jno jb jbe js jns jp xor cmp dec inc insb pop das pop imul dec bound push imul jae jbe jns xor imul dec push aaa push insl push ss pop pop jns aaa gs xor push js jp xor popa dec jno jne popa popa aaa gs imul jns arpl sub ss outsb inc gs je push pop push push gs gs jno xor jne jne ja xor xor cmp dec xor sub pop xor fs xor imul js jp xor outsb dec push js imul jo jo jae xor xor ss fs dec push das arpl jo jno jne jne jns sub push xor pop xor aaa push aaa push aaa push push dec push je cmp fs insl arpl outsl jns jbe inc jno jno jb je js jns sub dec xor jno push dec inc dec jno cmp arpl pop arpl jno jb jbe xor js imul push jne pop push je xor gs push outsb xor jae sub imul bound gs dec jae aaa popa inc popa dec ss fs push dec xor xor aaa arpl push xor pop je das arpl insl jns cmp jo jb jae jbe xor push inc dec inc bound dec pop dec insl dec xor bound outsl insl aaa outsb jns push dec pop push dec popa push popa jno dec push insl outsb dec outsb push xor push aaa push dec bound dec gs pop push dec push dec push jb jne js jae cmp gs insl insl outsb js push jno jno jns jp das push xor cmp xor push dec fs push dec popa dec gs jne popa push push pop dec insb dec jb jb jbe sub imul outsl dec xor insl xor dec push dec inc gs insl inc jo jae xor push xor dec inc dec jae fs fs outsb push xor pop dec pop js jns imul inc xor dec aaa push xor arpl jbe xor jb jns jp das pop das jne jno dec pop insb popa das outsb xor jae je jne xor jbe pop inc cmp dec jno jne pop jo jno jae jne xor dec dec dec push push imul ja js push insb gs push insb bound je xor data16 cmp xor push push js jns jno xor dec ss xor dec insl jbe xor inc push aaa push je jne dec sub dec sub push data16 insb dec je insl das insl aaa fs xor bound popa jo imul push jne das arpl insl xor js das je cmp pop jp je pop sub xor aaa sub jo aaa cmp outsb jns dec inc dec js jns jp inc jns pop dec xor pop xor cmp inc inc dec inc push dec push dec js jns jns aaa inc jb dec dec insl xor dec js pop push je push imul cmp dec pop jns xor cmp cmp dec dec gs fs xor sub outsb jp push push xor push js ss push insb push dec dec jb ja 