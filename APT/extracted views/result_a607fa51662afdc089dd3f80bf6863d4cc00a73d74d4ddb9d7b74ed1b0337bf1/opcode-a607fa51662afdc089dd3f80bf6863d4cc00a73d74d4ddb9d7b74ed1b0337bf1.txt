(bad) jg push mov inc xor movzbl mov mov pop ret mov mov mov push lea sub push push push (bad) incl push call lea imul fstp (bad) decl lea push call inc mov add mov mov add inc add insb outsb push (bad) mov mov rep je push movsb push into std mov adcb lahf add pushl add xchg xor mov xor add adc or dec dec inc add add cmp sbb add and mov cmp gs test mov mov sbb loopne pop xchg add or or push sub add fstpt xchg or xor push dec xor neg xchg xor gs clc add outsb lcall cmp or xor push fstp lods fstps inc mov imul shr push xor jbe push push push lret or outsl in mov dec or cmp dec je add sbb pop push and repz cmpsl push sbb adc or rorb xor add pop bound adc add test (bad) (bad) decl dec mov cld dec movzwl push add add (bad) repz (bad) cld mov pop les popa mov and or inc pop pop sub xchg insl mov push push push les inc jb insl unpcklps sbb test sti fmull les and push das adc and push insl jp pop jl dec je inc divb mov push mov (bad) out cmp and adc jo movsl je nop or cmp push push daa insb add and mov orb je jmp adc add scas fs mov jne lock into push cld cld fnsave add int3 jne inc mov out aaa sbb call sub insl addl push xor or pushl btr or arpl dec (bad) mov adc scas shll mov add data16 cmp xor jmp jb sub pop pop mov repnz pop das push inc jb je push pusha inc ds mov lds std mov dec push add push push push jmp dec fs cwtl and cs (bad) inc push (bad) xchg add nop xor shll (bad) push push xor mov adc movsb idiv inc push xchg pop fcom in clc (bad) fiadd push insl jp pop pop add leave les adc pop push mov push jnp (bad) lea cli jne popf mov outsb data16 xchg add mov mov or insb mov and pop mov sbb in mov repz stc in fstps test jmp sarb xlat mov mov aaa mov xchg rorb jmp push sub sbb inc sbb (bad) cmp sub mov sbb and mov shrl (bad) mov jg movl cmp jb pushf stc inc out fidiv cld jbe sub out fcmovnu cmpsl mov cmp fisttpll or xor xor or xor pop push add add pop (bad) outsl outsl or rolb sti or add imul test ljmp xlat mov shr inc inc cmp mov jb pop adc popa fistpl add pop loopne (bad) out (bad) push shr mov or add push mov mov cmc insl je out adc push dec es lock imulb outsb mov mov add aaa ja sbb adc rol jmp add sbb push or pop (bad) rorb mov mov or add push push call (bad) jmp into cmp push add push jb (bad) mov jne cmp or lock mov mov mov push (bad) sbb es push stc xchg je fcoml cmc pop sti insl mov aam imul out jo xor sbb push outsb jmp insb jecxz rcr sahf sbb push push push roll (bad) cmp jne xor fstpl clc push (bad) int or insl nop fsubs sub clc fwait jne mov into or gs pop loope sub pushf insb pop adc cwtl std or insb ret (bad) jne (bad) loopne test sub lods gs stos adc mov mov and push clc ret sub or xchg push leave mov mov sub sbb mov mov jns mov jp andl add add lea push jae add or adc sbb aas test push movb adc lcall or inc and mov mov or and cmp pop or ds xor push jne or jne add jne or mov add add bnd add rorb push add sbb je sbb neg ja cmp jno sarl or push loopne int xor or or (bad) or in xor mov (bad) jne dec arpl lods mov pop repz pop les icebp mov cli mov mov movb das jle xor add (bad) add testb mov add jb or cmp jle lea push pop fldcw cld dec xchg xchg pop mov or insb outsl lcall inc adc ja lea movsl add shlb sub sub or xor push loope dec or mov mov pop jl cmp js or insl cmp pop xchg xchg push jp pop cli je add add add in pop add push xor xor cmp mov aas lcall push data16 dec xchg jecxz jmp fwait push jge jge mov and or fcmovne xor and mov jle (bad) imul pusha add or outsb outsb lock sbb jle and push sarl add or (bad) sbb mov mov popa test push notb pushl sub push jl pop push adc leave push and je adc sbb pushl sbb iret sarl push add pusha pop sbb test push xchg adc cmp test jae push jbe cltd or mov addr16 test fsts sbb mov mov or sarb lods or ret or add pop or lcall aaa into or es pop andl inc sbb scas mov int3 je (bad) xchg xchg jbe subl enter mov shll ficoml pusha adc push push mov (bad) mov aas cs push push outsb sbb lahf lock lcall add fs mov bound imul xor adc arpl push mov jecxz arpl loope xor sub in ss in out movsl arpl mov pushf movsl add cmp inc inc movsb sbb mov push dec dec xchg out push push cld ds inc daa test (bad) or push mov mov push adc pop (bad) push inc xor sbb mov leave hlt xchg fsubp jl ficom inc (bad) lea push nop sub xchg in adc adc xchg sub (bad) loop insl mov jne or hlt inc add add (bad) fldt jae or je jl and adc test sbb mov arpl mov shrl and and aam sbb les mov aaa sub sbb sbb push push mov (bad) or mov mov push mov addr16 jo adc jo push adc dec mov mov scas mov mov or rorl testb sub adc ret mov mov and push push mov inc add xchg sbb inc or adc add les sbb xor (bad) jge int setg mov xor je xchg fstpt neg sbb push lea mov mov mov je push jle test and mov jne or xor fildl mov jne sub int3 dec jae pop pop lds dec add mov sbb paddusb shrb and jmp mull sbb push mov scas pop mov jne mov repnz mov cmp lock in add xchg test stos pop leave gs (bad) fdivrp sub and mov stos cmp mov push scas sub mov xchg cmc repz js push or fwait or out mov xchg scas mov mov jmp outsl pop shl or or lret mov je scas push test add cltd lock cmp push inc xchg ret or push mov in pop mov push add (bad) mov xor pop sbb fmuls sub jno mov xchg rorl push lock loopne inc ljmp or cmp xchg add jmp sub leave mov out push in gs cmp adc adc pop inc adc fsubr adc movsb cld (bad) aam and cld sbb jne xchg ret adc mov pushf (bad) popf jb add out xchg xchg pop test push lock mov mov and leave dec sbb pop sarb add pop add sahf and cld mov andb shr es push pop mov test daa mov or mov add push cld sub or push sti push int (bad) into sbb sub repz rcll loope popf rclb sub sub insb pop jae das test jae in out add imull or and adc in sbb cmpsb and and shll (bad) push sarl lret pop inc pop imul incl adc sarb pop adc (bad) aam cwtl adc and xchg daa cmp mov movb mov push and push xchg enter and cltd in adc popa push sub sub insl fldcw sub sub lret jb xor xor scas imul pop cmp xchg in xor cmp cmp imul inc inc jl inc and mov inc inc or mov imul dec dec and mov push push push push aam (bad) je mov push push push jnp pop dec mov pop pop push pop pop int pop pop xor mov dec pop push pusha popa scas bound loop mov push les insb dec mov data16 mov imul enter outsb inc mov mov sbb xchg mov call mov mov mov mov (bad) pop adc push je mov dec pop and cmp jo pushf sbb sbb sahf adc mov insb cmp lods push cs in scas aam push xor jo cmpsl gs xchg add sub inc cmp pop lods (bad) js xor pop mov add mov xor mov inc sbb in sar insb xchg jno and adc inc push cs fmuls adc test add je sub push cmp movsl inc test sar add jae (bad) cmp mov jo js jns (bad) push enter das sar loope rorl add push icebp fisubr push sub popa jo dec mov (bad) (bad) dec pop lds es dec push inc imul pop add addb dec and out inc inc add inc pop imul sbb sti push xchg jo,pn xor sarl fiaddl inc mov sbb rcll jae (bad) roll jo dec loop jl push xor jb test test ss test out and push pop into jno jb and and xchg dec (bad) jne in lock rcl loopne dec push push mov enter and sub push xchg push sbb push fsubrl aad add mov jo lock loopne mov and or jmp push jb mov enter sti or add jmp sbb addr16 push pop or shrl mov pusha jbe jbe mov mov mov adc xor mov push fwait inc jne cltd movsb cwtl sub add lret mov ss les inc and out call push mov ds cvtps2pd movsl cs aaa push sbb call pop or sti mov (bad) push incl mov imulb loope andl and inc push jae adc divl int3 lea add leave adc in out mov adc xchg cwtl mov (bad) cli (bad) inc and sbb daa sub and enter pop xor mov and aaa lock icebp add xlat push add in sbb insl stos push mov pop lods dec sub and sahf jbe push mov adcl jne mov sub pop cmpb jne orb jne add add or and mov mov leave inc pop xchg jg aas rcl rcll sbb jmp mov je in scas rorb clc loope inc push sbb xchg mov xor mov movsb dec or push sbb add cmp jl sub xchg rclb pop jmp (bad) inc or cwtl mov sbb aam and in or xor cmp (bad) adc mov lcall sbb pop or faddl adc cld inc and adc loopne sbb pop add bound decl jmp cmp or xchg dec decl add dec add das xor shl push rolb adc mov insb and adc mulb inc jmp sub imul mov jbe mov and pop arpl jmp fs nop mov das fiaddl (bad) mov inc addr16 insb movsb push add jno scas push mov dec lock cmp fcoml jo imul inc xchg mov adc or aas aaa adc movsl mov pop lcall xchg fcoml jle ljmp adc out push pop jge push xor or lea or leave mov push inc fwait mov push mov add rorb cmp cli dec stos add add je add mov inc hlt push sti mov insl xorl cmp popl xchg add or jmp dec pushf push dec dec out fldcw jne adc fbstp outsl jb insb loopne cmp jb dec pop pop repnz enter dec cmp inc xor (bad) hlt add movsb inc cli cli cmp in in dec inc sahf or es jbe mov mov sub push test mov loope ret push adc or cltd (bad) xor ret (bad) add cli outsl xchg jnp notl ja add mov or push fildl push ret stos lods cmp inc add sub pop outsl mov movb add inc xchg push mov movsl hlt movb nop cmpsl cwtl push jnp sbb sbb jmp in mov in (bad) cs jo pop shlb pop cmp pop adc mov jo push and enter xor dec pop push adc js lcall sahf add or cwtl mov mov aaa jne lods es xor les fcomps bound addl push mov clc or jne lea movb shlb mov mov or xchg int lret push push mov mov push push shrb (bad) fimul mov add push jge jae mov clc xorl mulb and mov mov sbb mov leave or pop pop pop clc add dec test pop xchg in adc test sbb xor mov push rolb sub mov pop movsl fsubs stos add push or (bad) pop xchg push push xor dec ret sarb pop out xchg xor pop jb dec cmp push cmp in add das xchg aam add mov pop mov mov call inc or pop xor mov adc add cmc pop xor xchg popf push inc je out and sub (bad) (bad) pop mov data16 neg fmuls fcomps fwait je (bad) mov cwtl adc add adc add loope and fadds icebp mov out jp and test test push shr pop cmp dec xchg fmuls xor mov js jne cs clc jae aam movsl movsl movsw push enter fisub test icebp mov add jl (bad) dec hlt cmp shr js lea sub mov mov sbb les (bad) xadd in fwait mov fistl je push sub push idivb mul push jnp nop push xchg push fdivrl aam cmp xchg sbb cmp inc and mov bound or gs jecxz mov or cmp mov or push adcb add pop mov cli mov icebp mov adc sbb xor mov (bad) xor mov sahf sbb call pop jge aaa sbb sbb push xchg adc xchg arpl mov sub mov xor dec aad mov mov or inc push xchg sahf mov mov mov jnp xchg mov fwait jmp imul out pop cmp jbe add and mov jl mov cmp cld cltd rolb int mov std sub (bad) and ret sbb mov mov subl jmp xor fldt and lock push push js lea bound or or test movb mov push arpl ja js add sub xor std pop xor mov mov jmp mov test jl sub sub ret in in sub inc ja pop jmp xor sub jne cmpl (bad) xchg les or or mov (bad) mov lret push add push aam les pop inc mov xor dec inc and fdivr mov jae test lea jmp lahf adc sub jno mov mov fisttp push leave stos enter int inc mov cld push adc mov or aaa jge sti dec aam dec cmp mov int3 and dec das femms fs or xor je and fstl xor push push int in sub sbbb nop and cmc push cs mov (bad) xor mov ret push add stc adc pop aaa dec or dec add dec xor out cmc hlt imul fsubs bound enter inc test inc xchg pusha inc or pushl mov ficoml and out and push ficom adc push add push xor or xor or or xor pop mov sbb pushf mov (bad) negb adc inc jo arpl pop pop ret pop add bound rcll or loopne xorb add mov or mov mov (bad) pushl xlat test cmp jne push mov notl mov mov (bad) dec or push ss jne push push dec and insb into sbb push cmp call lods pop addl ljmp rorl cmc testb dec (bad) mov jle mov cmp movsl add je pushl mov or dec test jg add add sarb movb aam adc push pop or in loopne stc clc xor mov movsl clc mov leave add sbb add add in xor clc xor sti jne push and jmp mov cmp and inc sbb incb sub repnz stc mov xor dec or mov das push or das xor adc and mov mov add gs pop icebp (bad) outsb or divb idiv sti adc inc ss dec notb inc enter popa mulb mov lds xchg xor (bad) xor jbe xchg cmpb aaa push push cmp sti push fbstp fildl sub sub movsb inc adc push shrl je and push ljmp jb and cmp jg lcall inc push or (bad) push stos push cmp fcoml mov inc leave test pop mov (bad) enter std mov loope repz movsl movsb push (bad) jo xor push or jns sbb pop in in in jmp rclb js adc xor movb lock pop sub add sub or stc or std in outsl jne mov ljmp lods adc dec push outsb je mov or lea push sbb push daa push (bad) ss lds push dec aas sbb mull sub sub dec push mov sub scas imul leave add or pop into into pop test push inc push mov nop into and sub push call (bad) ficom jno push popa xor out push xchg add aam sbb xlat cs stc clc adc sbb inc scas nop rclb add imul (bad) jo inc enter pop inc clc cmp push (bad) jmp xor enter or pop test sbb jo mov xor iret and or or jo in jne mov mov jno xchg fistl sbb push lea jle lcall mov lods je enter and inc clc push je or xchg jno mov dec push in inc add pop xor add cmp push add and ja mov mov sbb cmp add lea or xor adc push push dec clc jne outsl int3 popa outsb mov pop iret dec mov add fisttpl push push out push or fadds insb outsb jle rol sub mov mov rclb adc and push push mov loopne add adc adc cmpb cltd push nop adc les mov add push jo pushf adc clc ret inc out roll (bad) clc sbb fmuls lock jb shll scas jb bound xor push pushf push mov push fmull sbb add dec inc loopne adc inc subl inc xchg sub dec ljmp subl nop mov pop mov rorl mov mov dec push mov push jae or sbb mov xchg dec pop push sbb push imul xor sub pop jmp sub cmpl stc push sahf sbb pop enter and data16 in insl into cmpsb nop fistpl outsb aam int3 std outsl adc incl cmpl jl pop int3 cmp inc or mov fcomps test in mov mov lock ljmp in push lock cmpsl cmp fmull adc sub test out jbe scas lock test call shlb pop aaa mov insl rcll mov out xchg and jmp movsbl testb or stos jne inc mov pop out ljmp xor jmp imul lea push mov jmp add jmp (bad) sub neg push and or ret sbb jo fs inc push push scas push loop add add mov aad insb xchg pop mov sbb pop xor enter dec pop leave adc scas (bad) les push lcall pop xchg xor pop mov les or pop ret jp sub mov ds mov imul push cs mov mov jmp int pop lock push fdivp test outsl pop sbb addl sar jp and pop or dec pop fcoml or pop cmp fbld mov xor lods test ds clc add adc mov (bad) imul add ffreep lret test sti (bad) sti mov shlb mov call icebp push push push ret popa xor icebp push (bad) hlt mov xlat push xchg push les js mov adc push lock cmp or push pop jmp mov jl lea mov add push push dec out pop dec rcrb int3 dec lea jns push pusha in pop push imul mov sbb xchg ljmp mov out xchg insb add rolb (bad) (bad) jne mov or movb jb add jo ret add and and add inc xchg (bad) inc mov push or jne jmp pop adc mov test jge jbe push xchg loope adc push in pop in or mov test jb hlt or push add ret cmp leave insb sub shlb jmp inc out sub jne lea mov bound xchg mov jl inc je,pn dec inc push xor pop push roll mov inc inc add xor inc ja and xchg mov sub mov and jp sbb pop (bad) incb pop add rolb mov sbb loopne jmp jne sub (bad) mov xor ds cmp and mov fs sbb inc mov xchg push mov mov xor data16 mov jnp (bad) (bad) xorl sbb cs inc mov dec xchg push xorl push dec jb add lods lret aas adc adc and clc test sbb jge decl mov push pop sti mov mov push dec inc dec test jg mov push push pop sub sbb adc iret mov jne add cmp jnp pusha decl inc dec cmp jg sbb and jb outsb pop inc xchg jmp mov popa and dec add mov mov inc dec jp inc movsl roll sbb mov gs jle inc (bad) adc pop dec aam orl adc push jl ljmp cli lods outsl das mov xor inc lcall icebp aaa mov inc push out add in cmp jb and mov mov xor cmp outsl push inc cmp loope shl add mov xor (bad) mov cwtl sbb cmp outsl add js cmpb call add mov fstpl in jo xor jbe sub clc ljmp fucomi incb lret fisttpll mov ss out mov test incl pushl push jp pop add push adc std inc jg xor pop fdivr ja (bad) lock dec or inc adc cwtl adc and rolb fldcw (bad) add dec or inc jne cltd andl pushf in mov push and inc add outsb decl mov mov cmp cmpsl mov cmp sbb adc push lods call push mov rcll (bad) scas test sub mov bound mov mov mov jecxz sbb or (bad) pop leave punpckhdq pop sbb push (bad) push lods lock dec sbb outsl jge xor inc pop push add icebp test call loop test and js lret shlb pop mov ret and mov push push fistpl and (bad) and pop mull std ja hlt (bad) push movzbl dec clc mov jmp inc push add jl and test testl mov push lea fstpt popa sub (bad) cmpb outsb cmc and outsl or fnstcw idivb pop add test sbb cmpl fcmovnbe xor outsl pop jg mov add sub dec and pop adc gs mov mov or push jmp or mov lea mov push xlat jne orl sti insl mov mov inc in mov test pop nop jbe or sbb pop fsubr into push push into adc shll cld and std out shlb xchg es pop dec scas cmpb adc sbb dec mov loopne (bad) mov orb cmp lock jmp outsb inc cmp pop mov jl insb jp mov stc out push stc shrb jge cld (bad) cli mov insl jmp add dec std sbb push jo (bad) scas fdivrs push mov push jge stc ss or (bad) in push sti nop add adc and jns dec pop jl leave repz cmp pop fwait int xchg mov sarb outsb mov xor sbb jl pop out push inc add jae sub adc call mov dec test mov mov push lret inc lock sub jnp mov or sbb flds or or pop push cmp stos xchg je push insl rolb outsl sbb mov addr16 or jmp push test movsl and cmc es mov adc push lods and mov mov out aad jmp add add dec and nop push jne (bad) cs push jne and ja adc mov adc mov cltd ljmp lods push ja je push andl pop inc mov xlat sbb imul cs lret test stos stc mov pusha xchg push sbb jne xor subl lret and insb decl shll nop pop cmpsb xor lahf sbb out rorb ror mov lods addb push clc clc fidivrl push mov adc xor pop rcl sub fldt mov lret inc dec shr inc popa jg inc daa addr16 mov mov mov and cmp push jge lea xchg cmpsb pop or cmp (bad) in push inc loope shlb xor (bad) not mov xchg cmpsb dec xchg sub clc or (bad) jmp xlat sbb push mov pop jmp repnz add xor outsb jnp pop jmp jne enter and pop jmp out addr16 test cmpl popa fcoms jmp mov mov push xor jmp adc popa jle dec sarl mov cli arpl xor jmp fdivs test (bad) aad je mov fistl movsb inc scas or xor movsl cmovge call insl cmp adc pop push jno aam (bad) scas add adc sahf lds and jnp cwtl or daa cmp push push add pusha push push dec push dec inc loopne insb dec push push clc repnz pusha push movb xchg or movsb out sbb sub dec out leave je push xor sub pop add xchg nop or cmp mov xchg leave sub and movb pop xchg sub jae sub in lahf sub inc inc push dec inc adc (bad) inc pop ret (bad) push inc test fsts inc out xor mov cmpsb xchg sub loopne lock sbb mov adc or xlat sub mov lea sbb ret push enter and or outsl enter jnp pop jb jns push pop dec push sub sbb rol clc bound xor sbb jl fstps (bad) adcb js movb inc push js pop push mov inc fidivl push std sub xchg dec and push sbb add sbb js jg sbb pop sub xchg cmc imul xor cltd fsub and fwait out add pusha or xchg push call jg and dec add xchg push xchg rorb pop cmp and mov sbb push pop jo loopne xchg mov js add add clc push push and mov aaa inc jmp fild ss push fldl jbe das mov inc and daa sub insb adc fisubr push mov add dec sbb mov mov js clc push scas xor inc inc mov repnz and out ljmp adc popa insl inc mov ljmp or push rclb movsl cmpsb sti add xlat cmpsb mov add lahf scas adc inc sub add or sub lds (bad) int3 push pop scas and mov imul adc cmc mov jl or mov mov in inc call fmuls inc cwtl xor ljmp pop jbe cmp add sub mov dec aad call fisttpl (bad) (bad) stc mov (bad) cmp je cmp push add jne push (bad) ljmp enter pop movsbl inc jmp mov adc inc cmp jle jae (bad) je push adc and push mov push mov cltd sub mov movsb dec bound fistpl add mov (bad) jg jge add cmp and lret inc mov jle or cmp sbb (bad) js bnd mov or push add test adc dec cmp popa pop push mul seto neg or push stc push mov or xchg adc into inc mov fcmovnb aam xlat lock xchg inc push (bad) xchg adc lock push jge cmp pop pop dec sbb loop (bad) sbb adc and pop jne ljmp adc div ret sbb and cs push mov fmulp push icebp in inc cmp sbb pop and std pop or jle imul cltd sub (bad) clc mov sub push jecxz or jge pop in add lea jo jnp es sub mov pop push das sbb xor int inc popf adc clc fucomip out cmp and mov mov mov in and stc mov xor ret ja icebp idivb mov mov mov push pop mov addl loope es lea jg push sbb inc out mov dec add jne sbb outsb (bad) stc add or cltd pop notl mov mov cmp jp (bad) jge lea cmp je push pushf fsubs mov pop por fisttpl in jle cltd mov mov or jl fucomp or (bad) iret test inc or popa outsb push add pushl sbb fcoms test push outsl adc mov mov pop decb sub mov cmp inc inc inc mov mov or icebp pop (bad) mov in (bad) outsb sti clc shr fadd fwait (bad) jne shl dec imul out (bad) fcmovnb fild mov imul push xor mov and faddl or dec sub push lcall inc pop lock (bad) icebp insl push mov and loope mov iret inc test js inc ja or mov sub mov xchg inc test into lea ja popa mov mov scas ficompl mov lret ss inc sbb mov add push (bad) mov or scas dec mov inc mov loopne test add fmul insl adcl adc lds cmp mov mov ljmp std sub loopne cmp loopne add mov cmp jne in inc in adc jno insl xchg mov lahf pop pop adc cmp cs adc or decl hlt pop push mov inc xchg outsl mov jbe or repnz xor push lcall es dec icebp lods and sbb (bad) push lock inc cmp add inc push shl fldt sub mov lea push (bad) inc mov jae flds lock add add xchg pop add xchg jge adc leave clc pop jmp cli lret mov lret (bad) cmp jne xlat inc push adc inc cmp adc scas orl fwait loop inc sub ljmp push inc dec loopne ret test and (bad) mov icebp cmpsb or xchg mov jb ja cmpsb aaa lods jmp leave jbe cmp idivb (bad) jae mov xor push or lret (bad) or sbb xchg inc adc add (bad) jb xor rorb adc decl outsb xor orl mov (bad) jo hlt dec in adcl xor mov or add mov pop dec pop adc bound and sub push rcrb jnp dec in invd add cmpsb out fdivr or adc jne std in cmp loopne push mov pop lea fs xchg in dec in mov das add jne push pop and enter in in loopne mov (bad) pop out inc sahf mov adc push push dec loop das inc mov mov xor inc dec pop cmpsl or sbb outsb xchg pop cmpsb ja or inc push push (bad) jmp pusha mov pop test mov add ja inc jmp stc mov push lea lea or (bad) pop adc jbe cltd fstpl mov sub cmp inc fstl lret and cwtl cmp out fsub sbb lret or jge jae jb adc jmp mov inc and aas mov push mov mov adc shrl ret xor test lret lods jl jo sbb push add add cmp fsubr sbb adc jl mov add cmpb cmp mov mov sub cltd mull sub pop mov lahf fwait sbb aad dec mov pop pusha imul pop (bad) mov push mov inc sti add leave jge jnp mov add or mov jge sbb cmpsb outsb adc addl or pop adc lods in in roll lret sub in xor or inc cli mov test mov sahf lods mov js and pusha inc ret mov sub dec inc or sub cmp cwtl jbe and lods xor insl mov push cwtl lret inc sbb mov cvttpd2pi bound pop push mov or lods jp xor pop sub and je hlt add adc jmp sbb add mov ret push cltd pop push lea mov push sbb std sarb inc mov add mov mov xchg test mov jl jp sub in pop cmp dec cmc into mov sbb inc and sbb incb sti adc pop insl mov fs pop jecxz xor adc xchg loopne es sub and add lds ss fidivl fs adc dec jne add mov jg js push fwait aad in cmp lea inc push ret inc cltd or (bad) mov xchg jge push lea sbb test add les rcrb push lcall mov sbb pop adc std jbe add cpuid cwtl push jno fisub (bad) xor in dec xor and jbe jne lods loop or lret lock fcoms push pop fwait mov movsb mov sbb dec int rcrl sub sbb pusha (bad) lahf sbbb sub pop dec pop sbb lods roll es sub push push loope sub xor inc js jge or les add ret cltd push fidivl les and cmp jl push sub out je dec jns push jmp sbb or jno add pop jae jle push push push push loopne pop mov movsb add pop (bad) lcall mov xchg fsubrl pop mov or mov ljmp rorl test lock pop add je pop insl pop and pop pop mov adcl or test jg mov pop cs mov aaa or mov mov pop in in or sub or push in sbb lods sarl push or (bad) xor sbb add aam push mov and mov les or es push inc loopne hlt subl xor jo push xor inc popl push xor xor mov push push push orb pop (bad) jae movsl pop insb and (bad) enter jne sub dec or jnp insl sub push push push sbb adc push and dec inc jo or in dec imull inc ds mov js adc add push sub adc push int3 mov dec ffreep fs push out add or loope loop in fs push cmpsb mov pop jge pop push in or push or test imul orb jge lock sbb push mov xchg mov cs cmp mov push mov mov push mov add call test pop je xor mov (bad) int cld stos push dec push es xchg out add dec and cmpb mov push adc nop insl and or notb jns inc out enter stos paddsb mov in (bad) lret fildl push add push push jo add push push js add push cmp add cltd mov ds repnz push scas mov out or jl pop cltd adc xor sub ljmp mov jnp adc (bad) xor jo fsubrl push or lods jnp jo add pop and data16 out iret push xlat into add pop gs mov adc push imul ds cli add ret (bad) mov pop dec adc add addr16 cmp pop (bad) push std pop pop shl or rclb not mov icebp mov jg inc ljmp inc ror mov loope mov pusha (bad) loope cmp loopne std push xchg repnz inc aad pop orb (bad) dec dec mov cmc mov sbb imul out pop ja add or pop int sub cmp stos adc sub nop fist lock sbb aam out inc fmul je movsb outsl add mov push push xor add rol sarb pop xchg xor hlt mov or mov mov in int3 test sbbb mov adc in inc xor lret rcr dec push das sbb push ja fsubl xchg movsb or xor aam out insl xor cmp div sbb xchg jle (bad) push push adc pop jl push icebp or pushl mov arpl sbb sub push fdivl mov cmpsl out adc insb sbb sbb cmp dec mov and add repz pop les adc cmp push pop (bad) ret lods (bad) (bad) and jecxz xor fisttpll dec jge imul or ljmp inc (bad) cltd jmp pop mov push les push leave ret and jne add xor cmpsl mov or or nop and insl fbld fstpl push or in fist sti fild push sbb sub popa sub (bad) stc ja or je push sti push fildll imul sti clc or add mov pusha test jle je ficom mov add jl pop or cmp mov shr or push ja cmp fldt add jnp adc push pop sar inc adc fnstenv mov adc mov mov js rolb pop adc pop or sbb stc fsubrl inc push cmp lds (bad) jne aaa call aam mov ja fcoms ljmp push push je inc sub aad loope js and ret pop jmp testb roll es jg out jb call or test fwait out cmp and adc jno sub shll (bad) jbe push insb int fwait xchg lods and inc cmpsb xor jge jle pusha mov jp add jecxz test repz xor mov faddl inc stos imul pop ss in pop push (bad) push dec push movsl dec mov jno push pop push sub push adc std or mov adc add mov xchg or sar (bad) fiaddl xsaves jo rcrb dec mov or pop xor inc out daa inc cmp mov mov and push es mov inc jbe jnp stos aad cmp and push int3 mov or sbb scas and mov cmp movsb pop push mov mov jle sti add cmpb mov add negl mov jnp rcrl push mov mov rol inc and daa inc push push cmpsb jmp cmp jl push mov imul pop popf add or fmul inc repz mov imul jno add leave les sahf movsl lcall lock or adc lock pop (bad) jle pusha push mov test mov out mov jg jmp pop add int3 lea xor pop ret push lea into add lahf xlat or or xchg jmp push mov enter lods leave xchg fcmovne pusha mov shr add bound andl fisttp dec sbb or and out adc into pop mov jne ja adc pop sarb or push ret xchg loope inc or push cmp cmovbe mov mov xchg clc sar imulb pop cltd stos jg mov (bad) in jg or xchg jne mov (bad) jne cmp sub popa add sbb push jne outsb (bad) mov jns incl pop mov dec add push dec mov cmp cmpsl lds sbb adc aam sbb cmp int pushf testb cmp sub inc inc sub xchg dec nop inc outsb (bad) insl loop inc push push push or imul adc inc xchg sbb xchg test pop js (bad) js pop jne mov pop cmp out mov xor dec jne pop mov (bad) int push or add js dec jmp subl mov or cmp inc push inc cli sub arpl shrb sahf adc adc repz or inc dec sub or and pop into xor inc push mov out push mov jl sarb adc sub xor mov mov dec fcomps insb jnp xchg and rcrl bound mov sbbl push lea pop icebp test sub xchg xchg jmp int3 int3 push ljmp cmp cmp fcmovnu pop mov and cmp jne inc fldenv add rcr scas out fwait sbb sub std (bad) adc fldcw pop pop pop sbb xchg mov add mov push mov add inc adcl mov inc idivl cli jb jb rcrl popa xor clc add sbb (bad) jle pop dec push cmp jbe dec push jecxz stos mov in (bad) fbstp int3 call lods cmp jne xor je or jne push orb cli dec pop add (bad) jmp (bad) mov andl and lods cmp test jecxz stos inc jmp jecxz stos xor dec cmc fild insl pop jecxz mov test fldt sbb mov fcmovnu lods mov cmp cmc dec mov stos mov inc sarl and sbb jns xor or mov sbb xchg insb jnp lea repz pop sub roll jbe test inc fwait aad dec divb fcoml inc cmp add outsl adc add pushl movsl lods loopne (bad) ret (bad) lea cmp ljmp pop sbbb mov fldl jmp test je mov adcl outsl push mov arpl and or je and clc jle decl jne test jge (bad) not je rcrl mov add fdivs mov mov shlb arpl sahf cmp mov push mov inc jae pop imul or je and mov outsb arpl cs fsubrs lods pop das jno adc inc adc lods loopne pop push push adc pop sub mov leave outsl inc pusha jne sti inc xor xor cmp jae and cmp jbe es jae shrb or xor (bad) cmpsb and adc sysexit sub scas mov push xlat and aaa bound jbe dec bnd mov xor lds push push sub adc xor daa adc fmul xchg int3 or (bad) add adc inc mov jno mov adc xlat push sbb xorl push push push mov or push sub jae or mov in lock aad jg jmp subl inc out mov adc push push andl or xchg pushf or mov adc rorb or or scas mov imul or gs ret sbbl sti pop cli pop inc lods adc cmp add inc (bad) dec (bad) dec mov mov orl and mov xchg loopne aam fcomp adc xchg in loopne or in mov and cmp mov inc xor pop in fnop jbe sbb cmp push or aam adc das cmp push or mov aaa mov mov adc mov jmp cmp mov fcmovnbe popf push loope jne sbb mov loop in inc add inc outsl out sbb fs jne lods jo push pop mov cmc jge data16 divl jne inc xor cmpsl jns mov push dec jmp xor jmp add inc adc push push ljmp cmp mov push test je data16 xchg addr16 pop stc gs je push sub mov inc je inc jle inc jle (bad) ljmp test and sub pop jmp sub je dec je dec js adc jne push lds jge jne in or pop jb and lret insb inc mulps icebp sub popa mov add mov (bad) jmp lock push fnop fdivrp js pop jmp jbe je add add neg enter cmc add mov dec xchg mov or push push push xor pop jne lea jl mov jne xchg jmp (bad) gs rol je popa push inc pop test xchg jbe inc roll cld sub scas and inc stos fisubl or sbb cmpsb mov cmpb jbe in mov dec mov icebp aas mov cli inc cwtl jmp fsts fcoms fimul mov (bad) xor cmpsb xor fidivrl xor or (bad) xor stc jle aam push aad outsl sub and push push mov xor andl repnz insl adc sub rol test push jb cmpsb jns or (bad) roll test pop roll dec cmpsb inc cmp test push sbb xor cwtl lea mov add or int roll jmp lds add sarb jl aam add jb sub scas test fldt and sbb add test cli (bad) jge pop ja push popf mov out dec or mov adc sub inc add jno inc rcl inc outsb ret fistp add in fmull mov fwait aam bound sti lods cltd lea lret test in call fildl cs in add out leave fxch inc in add fdivl xlat fimul (bad) addr16 fldenv ss inc jne xchg jb sub fs (bad) push add sub into insb and fsubrs adc or lea insl movsl (bad) pusha insl out pushf jno clc outsb xlat push clc or fmul jne sti fld fimul adc jmp fcoms push pop add out sub fldcw push outsb test cwtl fstps pop inc insl fisttpl adc and jp push popa add sub sub mov mov add test dec adc sarb adc sub mov mov enter add and inc jb sub jecxz jmp shr ja sbb data16 adc scas pop or fsts mov add xlat pop stos xchg fstpt sub sbb out push or pop pop loopne mov xchg and mov add adc adc shlb cmp push lcall and push mov cwtl dec mov adc insb mulb xchg fiadd jnp rcl fldenv inc add push jae push xor mov or jne inc (bad) add sbb xchg fstpl inc fmul inc and pop in fcomip lods aad sbb incl pop inc into (bad) lods mov je jecxz je mov add or push sbb rolb dec stos mov rolb jbe dec push js adc xor lret fiadd add cmp sbb or ss jne aam test lock push cmp je cmp je sbb xchg adc lret push or push jo dec mov pop mov sbb repnz mov test mov adc addl sbb arpl inc jle push add mov into insl ds mov push (bad) inc xor pop ret fwait xor lea cmp je rcll std xor fimul cmp (bad) cmp jb mov test incl pop fisub add sbb inc testl xchg mov loopne bound scas mov sbb or test add popa outsb lock lahf cmp pop test inc ret and rclb pop jle xor rcrl movaps adc pop push push enter push jmp xchg sub ffree movsl mov jecxz (bad) rcll mov jge add (bad) roll repnz sbb enter lds adc and xlat push ss mov dec push pcmpeqw sub stc jne jmp or jb xchg push pop push rorl movsb fwait push push push out or pop mov mov sbb pop jmp addr16 push mov int3 int3 push ret or inc push inc push mov xor sub lret aas cmp xor insb xlat add call add in out adc outsb or mov es add cltd xor sub ret or pop loopne mov fsubp fsqrt fyl2x repz dec lods insb fsts cs adc add lcall (bad) outsl and or adc push or mov fiaddl rcr sbb add clc int inc into push ret mov imul insl int3 outsl sbbl add pop push pop add icebp cs std pop or push push sbb push out and outsl jbe in int3 in outsl call xchg jne or or sbb sti and (bad) mov or inc push adc in jge ljmp or out (bad) cmp adc cmpl xchg jns sbb push scas adc or iret or pushf or cli sti jg dec lds clc mov push ja pusha add push int unpcklps inc xchg and add lock sbb jle add mov mov sub (bad) cmp push and jmp movsl add aad xor cmp out pop lock stc jmp push and in (bad) mov int3 sub cld add push sahf sub or test fdiv inc ljmp pop pop mov ljmp xchg rcr fstp adc icebp rclb jbe add repnz mov loope (bad) mov lea sti sub sub sub sbb push pop mov pop push divl add adc lcall mov adc or cs xor sbb mov roll mov jno jne test out mov cld je add jns das push add lea sahf sbb sub pop pop pop fcoms sbb and xor ret loope lds push roll cwtl sbb (bad) dec aad mov dec mov iret xor xchg pusha dec leave and imul int3 fimull in mov adc mov add lcall or data16 mov jo cli lcall int add pop jne ja add (bad) jne mov push inc sub sbb ljmp mov push add lock xchg lcall ds lea xor cmp sub movb movsl das pop movsb push cmp jmp int mov mov xchg xchg test adc or ret aam call push (bad) (bad) loop jp cmp jne push xor add push cmp mov cmp je call cmp adc fwait lods or sbb subl js adc (bad) setno push jl push pusha inc mov sbb mov orl mov ljmp out sub jb pop cmp jne mov (bad) addr16 (bad) or mov or andb mov in jnp sub add push push push push adc sub sub jl pop cmp cmpb pushl push scas call cltd mov test dec cmc pushf sahf push sete jo test push mov jmp adc push inc xchg sbb or mov scas pop mov xor mov leave sub mov push test xchg pusha xchg fstps fildll in mov fdivl (bad) scas dec sbb fwait push mov xchg cmp in adc push add and add (bad) mov insb clc lahf sbb pop mov sub inc xor and sbb jg adc or jg das fbld xchg in (bad) sbb pop movsl push xlat inc inc xchg test je ja and testl push xchg fildl (bad) jb xchg std ret or flds (bad) fcomp in adc inc push in fsts call jb fldenv sub add or jne xorb shrl adc sub inc fisttpll movsb add push leave cmp inc mov inc pop push xchg sbb sbb sub adc push or jg pop ret movsbl jge dec mov lock jbe shrl adc mov xor fimull imull adc dec cmp ja in (bad) jmp or (bad) je lea push call ljmp (bad) mov dec push dec mov adc xchg mov mov mov mov dec shr (bad) (bad) dec jb shl add mov and fimull push mov pop or adc sub pop push mov aam mov nop cmovl adc xchg and adc jecxz push in hlt cltd and push mov add adc mov sbb or lea ljmp sbb cmp cli cli je sub push jbe push lea shr test mov adc test test jbe pop jmp mov mov ss xchg loope sbb push jne mov test sub pop or adc sarb or mov cmp push mov xchg lods inc jmp stc add inc test adc add or xlat orl push sbb push push aam mov into add aad jnp sbb jge and inc inc or bound xor cmp decb lds adc and adc xor ja pop cmp mov in sub jle mov outsl dec xchg pop repnz pushf mov inc xor (bad) push adc js adc ja cmp add (bad) repnz out push imul roll push lods cmp push adc jnp inc (bad) aad push push pop sbb (bad) (bad) pop mov dec movb hlt cmp (bad) adc (bad) jg sub flds mov sbb mov icebp pusha adc je and loopne orl pop ja lock xor cmp and test or inc push mov mov add xchg adc lock and test mov orl loop cmp das (bad) pop cmpsb inc push (bad) jmp in outsl adc add xor sub adc mov jge cld jae insb cmc or xchg lea jae xor push enter add pop add pop cli les cmp push mov fistpll cmp call orl mov xor and mov xor and sub das push nop (bad) pop cli xchg cmp shl imull (bad) or mov or xor jmp int xlat (bad) lods or add add sub mov xchg mov add adc ljmp dec (bad) lock adc inc lcall test and and ja test add call mov adc mov cmp je inc mov icebp add cmp mov mov push add dec je sub stc out lcall test add or adc and lock mov (bad) push fdivl mov ljmp data16 or or xchg pop cld or pop push mov mov inc inc addr16 sbb lcall add add popa test add or repz lret cmp add mov inc and xor aam outsl xor lret int int mov add inc out subl (bad) shrb nop or jns sub or push fsubrl sub outsl aaa push lret xor nop je mov cmp cmpsb test xchg addl lahf repz nopw inc dec fsubrl or cmp fdivs jbe ja pop hlt add pop and add and (bad) lret push sub or sbb (bad) xor fneni(8087 pop push fwait adc fildl cmc hlt pop mov sbb cmpl pmulhuw push fisttpl test mov les jmp mov lea jbe jne test addr16 mov add push sbb add sub cwtl in add jae jg test in cmp fmulp sar and xor jb mov loope cld push sbb mov mov mov xor inc push pop jp mov xchg push mov inc ljmp pop add insl out popl sub jne unpcklps mov out popl pop pop mov pop and adc mov daa sub inc pop ret or and cld cmp (bad) jbe test pop inc inc xchg lods hlt es cmp add ja add mov orl sbbl push stos arpl add adc and dec ret xchg lcall mov jmp jbe xor pop jmp pop add jnp jle cli js or pop mov jmp push lods (bad) cli lcall dec rol ret pop jne inc shll leave mov adc lret repnz mov rcrl es repz jmp shlb pop mov or cmc or xchg rcr sti loope (bad) xor mov mov hlt incw data16 or add mov inc add push pop sarb pop inc lods and orl fs jae and lahf loopne les mov ret ss mov push or stos sub push add sub pop cld ljmp and and and sbb loop stos xchg bound xor orw and or inc lcall and sbb aam mov test out sbb pop adc add andl add and add inc dec dec pop mov jp add inc and and jg xor push adc cmp nop or into jnp jbe push or lret pop adc mov psllw cmp rcr nop fcoml imull out and ret lcall data16 sub icebp mov adc movzwl mov jns jns mov push dec popa dec mov in inc inc mov jmp lret pop add (bad) data16 bnd mov jne sbb pop ljmp repz iret lret inc inc push sbb sahf popf inc sub fstpl ret inc icebp cbtw adc je or adc (bad) mov adc cmc sbb neg sbb not add adc xor popa fldenv daa cmp je jns xchg jb dec inc shll insb inc xor mov add jnp rcrb fldt add or cmp jmp ja or mov jne lods mov out xor adc mov fildl fild cmp cmp cmp push inc push or xlat pop (bad) rcl imul xor inc adc cmp outsl add or jne jmp xchg dec xor cmp sti add xor outsl aas xchg add xchg std out lea (bad) and clc (bad) inc or incb xor sbb inc add sbb out add add out and jbe cmp add xor insb mov xchg xor dec sub or dec pop add push pop mov push in push (bad) sub push cmp dec in inc pop or pop push mov out dec insb sbb outsl or loop or jmp (bad) imulb pop jg dec xchg jecxz int3 dec test std mov mov sbb lea mov pop popaw xchg pop orb mov out inc in add into pop add mov in push (bad) or push ret add daa punpckldq sbb add jge out push cmp dec and mov cmp sbb mov cwtl insb mov and loopne sarb adc push sbb daa dec inc decl xchg pop xchg pop aad inc inc imull outsl add (bad) in add adc popf hlt out popa psubusw sub inc dec aaa cmp ds pop sbb mov xor mov push pop add rolb (bad) add daa push clc mov add mov or pusha test iret test push cmpl jo mov sbb (bad) pushl pop cmp push jne int xchg test sub fs and xor fiadd lcall adc jg push mov into adc lods adc sub cli loope daa push and and push and and dec dec inc inc and and cmp xor and and sub and and and sbb adc inc sahf and inc inc inc fs inc inc je jl stc cld sbb jge rorb rclb rcrb jns movsb shrb cmp add enter (bad) enter enter fcomp loopne enter call enter cld add xor dec xchg add orl mov fwait mov sbb sbb sub sbb sbb sbb adc or sbb sbb add add xor cmp cmp xor jl js fs insb xchg sbb fs in imul mov repnz add mov (bad) push inc cmp mov mov jns sub pop (bad) cld sbb dec push inc push inc dec jae and push push push jns je insl push outsl outsl je and jbe addr16 inc inc push pop and pop push ss dec push jae outsl and inc dec jnp out pop push dec dec dec inc dec dec dec xor jnp inc push push rsqrtps cld and fsubs and dec push push cmp lahf push dec push inc pop push mov inc inc dec inc cmovbe add dec pop inc inc sbb sub repnz dec dec sbb inc dec push dec push dec dec cwtl cmp push dec rcpps push dec subl jl push dec push jb fs je xchg inc (bad) mov lahf out push inc push gs imul jb and in outsb je inc dec inc jne insb fs popf mov dec jne bound sbb popa (bad) or dec popa insl gs fistpll push inc rcrl arpl jae data16 push imul in inc mulb dec push pop jno push inc mov push jnp cmp xchg pop inc sar inc dec dec or pop cmp inc daa inc loopne insl addr16 dec inc dec jo jmp ja push (bad) aas in ret out insb push and imul outsl jne add fsubrl pop loopne push cmp dec push pop inc inc push inc inc cmpl mov mov lods or insb outsb imul add mov data16 sub sti arpl add jo data16 jae adc push int ffree lods insb add gs dec (bad) jae je imul xor xor xor cs fcmovne (bad) xor xor cmp cmp add cwtl adc add popa shll je add arpl jne xchg lock cmc sub cmpsl (bad) nop nop movsb pop inc js insb outsl adc push push gs insb and lcall pop gs je repnz dec cmp inc aas push push push sub jno imul mov outsb pop jae bound xor jg imul popa jae mov sbb sub xchg (bad) cmp (bad) or popa fs inc outsb call test popa jo xor fistpl jae pop jns je jo push or xor push adc dec sahf sarl (bad) inc push xor xor or (bad) movsb push outsb jnp inc adc mov mov or daa inc and pop or mov ffreep in fs xor push push inc inc imul sbb push inc jae and mov es push dec or jb push xchg sbb jb mov jb mov mov mov push andnps arpl imul rcrl push jg sub jo rcrb and push mov arpl insl lahf xchg dec mov insb je jo jb cwtl push ja add pop inc mov dec popa pop cmp sti pop sarl xor mov out add sub das (bad) push jecxz imul js test sbb cs push inc scas shrb and mov outsb pop and cmpsl movsb sub ja mov jae inc imul ret sti je cmp sub popa jmp imul push into arpl push inc pop mov insb xor and scas mov (bad) mov pop xchg cmp fsubrs and popa sub jmp push jo inc testl or fwait push test fistpl sbb jp (bad) push jnp pop aam pop add dec push inc rcl fildl push jne addr16 pop rol ja insl popa push pop popf addr16 push adc sub out mov inc aas outsl xor push sub pop pop xor ds arpl (bad) pusha packuswb dec insl fstl sbb lcall and leave or or (bad) push (bad) es lods dec arpl or ja push inc sti pop pop bound dec dec dec dec mov adc pushf outsl lods or pop lret arpl jl imul insb insl add jle jne ja jns xor fyl2xp1 pop outsl xor sub push xor pusha maxps inc cmp adc pop ja sarb pop xor jns aaa push int3 out inc cmp add aad jae mov cmp add mov sub mov sbb loop or mov je and xor je (bad) sub stc pop sub les add pop inc lret add add inc push and test jae and or add and pmaxsw add sbb inc mov stos xor or lret cwtl (bad) fsubs push add pop adc outsl pushf jo inc outsl ret mov adc add rcl jo jns gs and inc inc insb cmp dec jne (bad) mov sub fstpl or insb inc arpl or notl (bad) ss xor aam jne je pop pop sub jae (bad) dec arpl popa inc ss ret sub fisubrl jmp cmpsl xor fcoml mov call add sbb and (bad) repz and sbb mov mov or jp jb mov or and jno sub and imul and dec and xor (bad) jmp scas inc (bad) arpl into clc call in loopne loop in call mov in out in jmp and int in icebp in imul call hlt in (bad) cmc push out jmp in out and sti repnz and jmp push mov cmp loop mov pop adc sub pop lcall dec pop sbb pop and mov stos and push jne push mov ret pop push sub or mov addl adc mov das add jg mov arpl dec outsl jbe int rcrl add pop xor adc inc xlat or popf data16 pop rcr cwtl mov cmp and cmp (bad) ss jae or push add pop jmp sub es jbe jne lods pop cs inc xor pop in sub inc pop xor or rcrl dec xor cmp push adc add js sbb loop cmovle push pop mov ja and mov xor cmp fild mov xor (bad) add inc jbe negb inc mov mov (bad) dec cs hlt in pop das inc jb xchg idivl jb inc xor jno pop enter repnz leave nop or inc stos and leave nop or push test add dec in or xchg inc insl cmpsb leave outsb mov dec push cmpsl ss xchg and lret das jl inc xor pop leave lret cmp (bad) mov mov sbb mov and js or inc fisttp cmp mov negl xchg and xchg fbld and mov xchg and enter sbb xchg inc push ret notb arpl insb dec bound test and cltd lret pop xor or cld (bad) xor in dec rclb scas sbb cli enter scas jne loopne jg xchg hlt pop les call rorb push in repz mov xchg or sbb nop pop enter loop pop pop jb cs nop (bad) (bad) and xor add and xor or add jmp adc addr16 or and dec stc cmc xchg or xchg lahf repz sbb adc pop lret bswap nop or jg or nop or jo nop or nop imul leave adc cmc sbb and and xor inc cmp ss test clc dec ret leave ljmp nop inc adc push leave test sbb hlt adc aas adc testl aas inc mov ss iret fcomi pop pop enter push and in nop cmc dec repnz jb cmp mov dec mov sbb mov or cmc mov xor sub mov loop and sbb xchg and mov pop xor sbb xor sbb enter sub or mov fsts jg fs sub aas outsl xchg lods push cmp xchg pop lahf and dec push fs repz jbe xchg sub inc ss and aas pop fs ss or aas mov in repnz sbb andl xchg add (bad) and push push xchg aaa out jb xchg xor inc xor push pop cs inc ss pop scas std and movb lds inc repz movsl clc or xchg lods pop call fsubs mov and and mov push fisttp jmp test jg inc ss pusha das xchg jg push inc pop lahf fs pop aas xchg inc jb xchg idivl dec mov xor das paddb xor scas outsl daa inc sub lret rclb mov xchg flds sbb (bad) loopne dec ficom mov mov pusha daa pop and pop pop iret adc or aas mov bswap loope cmp add ss jg jp faddl cmpsb stos into incb jbe inc add push paddd and aas loopne xor xor and cld mov test das cmp pop xchg (bad) das add dec xchg sbb insb js sbb fs xchg jne dec xchg push xor pop jb hlt popa xchg and mov (bad) pop pop insb and ret das push das xchg pop add repz jb sbb inc ss or xchg and ss (bad) dec mov fildll dec lods pop inc xor and and das ret inc ss ss movsb mov clc and jb jg ret xor ss bsr sbb sbb sbb sbb (bad) repz and leave dec iret mov inc push and ss jbe pop pop inc outsl inc ss xor pop in fs ss inc aas add and jp cmc and in div lret hlt xor jb xor inc outsl outsl sub and ss das cmp hlt jge inc xor icebp cmpb inc xor jl and xor and or jle inc xor add sbb and nop or lahf fsts jo or nop or fisubr or nop cmp leave nop or jb and or out sub xchg xor das and xchg sbb xchg and dec pop pop and fcmovu popf adc sbb and mov dec dec das pop sbb fmuls out dec sbb fsts out inc repnz xchg inc pop push fs setl xor out xchg negb inc pop cmpsl pop rorb and xor mov cmp hlt pminsw xchg and adc adc enter ss test xchg div icebp iret fsubs or fs in idivl cmpsb or repnz xchg inc ja fs scas in add int3 scas sbb enter lea insb shrl jecxz pop inc jb xchg (bad) pxor fs xor int ss ss jg push iret and arpl pop and and pop sbb incb pop xor leave nop or xchg jg leave nop or jae dec cs dec jmp hlt insb enter xor dec xchg enter jb pop leave mulb lds push movsb and bnd xor mov repnz mov xor clc lcall nop xor aas pop aas leave nop or stos in add scas int3 hlt push pop dec es aas or and clc ss jb mov xor mov or pop or mov sbb adc mov fs ss pop outsl movsb das sbb xor in pop fdiv push dec cs nop outsl pop idivb fistl adc bound enter pop cs dec add repnz pop dec xchg push insb enter dec outsl push aas xchg push mov add xor mov and fildll and mov jg lock mov inc rclb test jmp adc pop fwait jg,pn jg cmpb and mov cpuid mov aad pop fcomp fdivrl mov movsb cmp rclb movhps imul lret inc repz adc ljmp push fidiv dec mov inc leave (bad) jb mov pop aad jbe xor nop or push movzwl fs adc fild pop (bad) jns sti loope loop jb push movswl pop mov movsb inc das or (bad) das shr test outsl hlt out test push inc (bad) lcall pop mov repnz test pop cmp aas repnz addb add add add stc push mov xor test imul mov (bad) xor jmp pop scas (bad) (bad) or gs xchg dec add scas (bad) lods dec popa push or scas int mov leave loop add nop or rorl push stos mov or add mov jnp frstpm(287 jl add sbb (bad) xchg mov fisubr or adc arpl sub mov popa insb sbb mov dec cmp xor push jne mov pop adc lods pop aam aam jne insb xchg and addr16 push and outsb popa and or je into insb pusha push fwait aaa xchg movsl adc push sbb es mov js inc push jne jbe jne dec pop push iret pop lods stos mov or add jnp cs add sub add add cmp lahf jae adc mov xchg cmp pop and add orb add and adc orb or xchg adc push pop aas (bad) add add mov out add adc ss and dec xchg popf mov sub fdivr xchg adc adc aaa aas and add add add add in leave add insl lcall sub add add fs insb jo inc sub ljmp std inc dec arpl pop imul sub dec push inc dec pushw bound outsb jb ret (bad) (bad) incl push push dec dec imul cmp xor push inc dec inc dec lcall add jno imul ja jns jbe (bad) (bad) pushl xor xor inc inc aaa cmp dec dec dec dec inc inc dec inc push push push sti (bad) mov pop pop bound push pop push push arpl inc (bad) lret mov (bad) mov outsb in dec fnsave ss lods fcompl icebp xor mov sub jb loope push testl fidivrl mov dec push fidivr adc push cmp xchg inc pop adc insb fcoms push andl mov imul lret mov pop push add enter adc jns push inc add jg (bad) incl dec jne je inc jns gs outsl push imul insb outsl bound decl adc je insb outsb push or pop adc jo inc cmp imulb daa dec imul fidivrl xor arpl mov gs jo xor fist gs popa outsb fs push dec jo sti pop or arpl dec gs jo insb push sub lds push or imulb gs jns push gs aaa pop push push push pop jbe fmul or js sbb jb prefetch or popa jo imul lods sub sbb inc mov push sbbb imul sbb and std rcll into ds lds pop lock arpl (bad) or sbb inc inc (bad) fcmovnb (bad) xor fs imul jnp or inc inc push jb mov fsubr xor sbb push sub je add js xor fistpl cmpsb mov aam inc (bad) dec adc inc inc outsb aaa inc rcr jbe dec cli or imul (bad) dec push jb or or inc mov xor xor imul in dec jae mov out mov outsl jecxz shlb (bad) xor and dec xchg jmp fs mov outsb mov popa (bad) jbe sbb push imul (bad) mov or inc cmp cld in dec add and outsw mov (bad) adc test sbb mov (bad) or test fldt icebp arpl ret pop ss or adc xlat jno adc add pop mov or mov test insb imul lea ret pop push bound (bad) (bad) or mov rsm adc mov (bad) push push or mov in cmpsl mov or and add sub and sub mov out and jae inc jp push sbb dec icebp pop sub jne mov cmp (bad) adc cmp pop pop lods loopne dec outsb push fwait insl cmovno jne jb or jle daa and push fsubrl lcall pop push aaa addb lds mov ss mov mov into add push xorb sbb mov sahf fmull adc adc hlt push test adc dec mov fnstcw jge decl add psraw mov push push mov mov int pop sub addl mov arpl fldcw xor je push sbb inc jne inc push js iret cmovl ja jae xor data16 loopne in jge ret gs outsl js sub ss bound add jns jmp xor call call push (bad) jae lret mov xchg cmp int inc dec mov add or addr16 js add repnz lea rorl add dec jbe pop and lcall mov adc add into xchg push add fadds mov adc pusha mov adc or pop fwait lret xchg fsubrs adc negl push add daa cmp adc cmc add (bad) push add add add add pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add faddl add add clc inc add pop inc add add add add or add add adc add add sbb add inc add xchg inc add sub add inc add stos inc add cmp add inc add aam add in add repnz add add add add add inc add add add sbb add add add xor add add add add add add push add addb add push inc add add add bound add add add add add add add dec inc push dec inc dec xor cs dec dec add push inc push dec xor cs insb add pop push push xor cs insb add push imul outsl insb xor cs insb add inc inc push push xor cs insb add inc push dec cs dec dec add inc dec dec xor cs insb add inc push xor cs insb add xor xor fs insb add add fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add push gs jo outsb dec gs add add jns je outsb jo outsl je arpl je add inc gs gs outsl jb push popa jb insl jae add gs outsb imul add add jne push jb arpl jae jae add push dec inc gs outsl insb fs popa je inc add ja jo imul (bad) jg push mov inc xor movzbl mov mov pop ret mov mov mov push lea sub push push push (bad) incl push call lea imul fstp (bad) decl lea push call inc mov add mov mov add inc add insb outsb push (bad) mov mov rep je push movsb push into std mov adcb lahf add pushl add xchg xor mov xor add adc or dec dec inc add add cmp sbb add and mov cmp gs test mov mov sbb loopne pop xchg add or or push sub add fstpt xchg or xor push dec xor neg xchg xor gs clc add outsb lcall cmp or xor push fstp lods fstps inc mov imul shr push xor jbe push push push lret or outsl in mov dec or cmp dec je add sbb pop push and repz cmpsl push sbb adc or rorb xor add pop bound adc add test (bad) (bad) decl dec mov cld dec movzwl push add add (bad) repz (bad) cld mov pop les popa mov and or inc pop pop sub xchg insl mov push push push les inc jb insl unpcklps sbb test sti fmull les and push das adc and push insl jp pop jl dec je inc divb mov push mov (bad) out cmp and adc jo movsl je nop or cmp push push daa insb add and mov orb je jmp adc add scas fs mov jne lock into push cld cld fnsave add int3 jne inc mov out aaa sbb call sub insl addl push xor or pushl btr or arpl dec (bad) mov adc scas shll mov add data16 cmp xor jmp jb sub pop pop mov repnz pop das push inc jb je push pusha inc ds mov lds std mov dec push add push push push jmp dec fs cwtl and cs (bad) inc push (bad) xchg add nop xor shll (bad) push push xor mov adc movsb idiv inc push xchg pop fcom in clc (bad) fiadd push insl jp pop pop add leave les adc pop push mov push jnp (bad) lea cli jne popf mov outsb data16 xchg add mov mov or insb mov and pop mov sbb in mov repz stc in fstps test jmp sarb xlat mov mov aaa mov xchg rorb jmp push sub sbb inc sbb (bad) cmp sub mov sbb and mov shrl (bad) mov jg movl cmp jb pushf stc inc out fidiv cld jbe sub out fcmovnu cmpsl mov cmp fisttpll or xor xor or xor pop push add add pop (bad) outsl outsl or rolb sti or add imul test ljmp xlat mov shr inc inc cmp mov jb pop adc popa fistpl add pop loopne (bad) out (bad) push shr mov or add push mov mov cmc insl je out adc push dec es lock imulb outsb mov mov add aaa ja sbb adc rol jmp add sbb push or pop (bad) rorb mov mov or add push push call (bad) jmp into cmp push add push jb (bad) mov jne cmp or lock mov mov mov push (bad) sbb es push stc xchg je fcoml cmc pop sti insl mov aam imul out jo xor sbb push outsb jmp insb jecxz rcr sahf sbb push push push roll (bad) cmp jne xor fstpl clc push (bad) int or insl nop fsubs sub clc fwait jne mov into or gs pop loope sub pushf insb pop adc cwtl std or insb ret (bad) jne (bad) loopne test sub lods gs stos adc mov mov and push clc ret sub or xchg push leave mov mov sub sbb mov mov jns mov jp andl add add lea push jae add or adc sbb aas test push movb adc lcall or inc and mov mov or and cmp pop or ds xor push jne or jne add jne or mov add add bnd add rorb push add sbb je sbb neg ja cmp jno sarl or push loopne int xor or or (bad) or in xor mov (bad) jne dec arpl lods mov pop repz pop les icebp mov cli mov mov movb das jle xor add (bad) add testb mov add jb or cmp jle lea push pop fldcw cld dec xchg xchg pop mov or insb outsl lcall inc adc ja lea movsl add shlb sub sub or xor push loope dec or mov mov pop jl cmp js or insl cmp pop xchg xchg push jp pop cli je add add add in pop add push xor xor cmp mov aas lcall push data16 dec xchg jecxz jmp fwait push jge jge mov and or fcmovne xor and mov jle (bad) imul pusha add or outsb outsb lock sbb jle and push sarl add or (bad) sbb mov mov popa test push notb pushl sub push jl pop push adc leave push and je adc sbb pushl sbb iret sarl push add pusha pop sbb test push xchg adc cmp test jae push jbe cltd or mov addr16 test fsts sbb mov mov or sarb lods or ret or add pop or lcall aaa into or es pop andl inc sbb scas mov int3 je (bad) xchg xchg jbe subl enter mov shll ficoml pusha adc push push mov (bad) mov aas cs push push outsb sbb lahf lock lcall add fs mov bound imul xor adc arpl push mov jecxz arpl loope xor sub in ss in out movsl arpl mov pushf movsl add cmp inc inc movsb sbb mov push dec dec xchg out push push cld ds inc daa test (bad) or push mov mov push adc pop (bad) push inc xor sbb mov leave hlt xchg fsubp jl ficom inc (bad) lea push nop sub xchg in adc adc xchg sub (bad) loop insl mov jne or hlt inc add add (bad) fldt jae or je jl and adc test sbb mov arpl mov shrl and and aam sbb les mov aaa sub sbb sbb push push mov (bad) or mov mov push mov addr16 jo adc jo push adc dec mov mov scas mov mov or rorl testb sub adc ret mov mov and push push mov inc add xchg sbb inc or adc add les sbb xor (bad) jge int setg mov xor je xchg fstpt neg sbb push lea mov mov mov je push jle test and mov jne or xor fildl mov jne sub int3 dec jae pop pop lds dec add mov sbb paddusb shrb and jmp mull sbb push mov scas pop mov jne mov repnz mov cmp lock in add xchg test stos pop leave gs (bad) fdivrp sub and mov stos cmp mov push scas sub mov xchg cmc repz js push or fwait or out mov xchg scas mov mov jmp outsl pop shl or or lret mov je scas push test add cltd lock cmp push inc xchg ret or push mov in pop mov push add (bad) mov xor pop sbb fmuls sub jno mov xchg rorl push lock loopne inc ljmp or cmp xchg add jmp sub leave mov out push in gs cmp adc adc pop inc adc fsubr adc movsb cld (bad) aam and cld sbb jne xchg ret adc mov pushf (bad) popf jb add out xchg xchg pop test push lock mov mov and leave dec sbb pop sarb add pop add sahf and cld mov andb shr es push pop mov test daa mov or mov add push cld sub or push sti push int (bad) into sbb sub repz rcll loope popf rclb sub sub insb pop jae das test jae in out add imull or and adc in sbb cmpsb and and shll (bad) push sarl lret pop inc pop imul incl adc sarb pop adc (bad) aam cwtl adc and xchg daa cmp mov movb mov push and push xchg enter and cltd in adc popa push sub sub insl fldcw sub sub lret jb xor xor scas imul pop cmp xchg in xor cmp cmp imul inc inc jl inc and mov inc inc or mov imul dec dec and mov push push push push aam (bad) je mov push push push jnp pop dec mov pop pop push pop pop int pop pop xor mov dec pop push pusha popa scas bound loop mov push les insb dec mov data16 mov imul enter outsb inc mov mov sbb xchg mov call mov mov mov mov (bad) pop adc push je mov dec pop and cmp jo pushf sbb sbb sahf adc mov insb cmp lods push cs in scas aam push xor jo cmpsl gs xchg add sub inc cmp pop lods (bad) js xor pop mov add mov xor mov inc sbb in sar insb xchg jno and adc inc push cs fmuls adc test add je sub push cmp movsl inc test sar add jae (bad) cmp mov jo js jns (bad) push enter das sar loope rorl add push icebp fisubr push sub popa jo dec mov (bad) (bad) dec pop lds es dec push inc imul pop add addb dec and out inc inc add inc pop imul sbb sti push xchg jo,pn xor sarl fiaddl inc mov sbb rcll jae (bad) roll jo dec loop jl push xor jb test test ss test out and push pop into jno jb and and xchg dec (bad) jne in lock rcl loopne dec push push mov enter and sub push xchg push sbb push fsubrl aad add mov jo lock loopne mov and or jmp push jb mov enter sti or add jmp sbb addr16 push pop or shrl mov pusha jbe jbe mov mov mov adc xor mov push fwait inc jne cltd movsb cwtl sub add lret mov ss les inc and out call push mov ds cvtps2pd movsl cs aaa push sbb call pop or sti mov (bad) push incl mov imulb loope andl and inc push jae adc divl int3 lea add leave adc in out mov adc xchg cwtl mov (bad) cli (bad) inc and sbb daa sub and enter pop xor mov and aaa lock icebp add xlat push add in sbb insl stos push mov pop lods dec sub and sahf jbe push mov adcl jne mov sub pop cmpb jne orb jne add add or and mov mov leave inc pop xchg jg aas rcl rcll sbb jmp mov je in scas rorb clc loope inc push sbb xchg mov xor mov movsb dec or push sbb add cmp jl sub xchg rclb pop jmp (bad) inc or cwtl mov sbb aam and in or xor cmp (bad) adc mov lcall sbb pop or faddl adc cld inc and adc loopne sbb pop add bound decl jmp cmp or xchg dec decl add dec add das xor shl push rolb adc mov insb and adc mulb inc jmp sub imul mov jbe mov and pop arpl jmp fs nop mov das fiaddl (bad) mov inc addr16 insb movsb push add jno scas push mov dec lock cmp fcoml jo imul inc xchg mov adc or aas aaa adc movsl mov pop lcall xchg fcoml jle ljmp adc out push pop jge push xor or lea or leave mov push inc fwait mov push mov add rorb cmp cli dec stos add add je add mov inc hlt push sti mov insl xorl cmp popl xchg add or jmp dec pushf push dec dec out fldcw jne adc fbstp outsl jb insb loopne cmp jb dec pop pop repnz enter dec cmp inc xor (bad) hlt add movsb inc cli cli cmp in in dec inc sahf or es jbe mov mov sub push test mov loope ret push adc or cltd (bad) xor ret (bad) add cli outsl xchg jnp notl ja add mov or push fildl push ret stos lods cmp inc add sub pop outsl mov movb add inc xchg push mov movsl hlt movb nop cmpsl cwtl push jnp sbb sbb jmp in mov in (bad) cs jo pop shlb pop cmp pop adc mov jo push and enter xor dec pop push adc js lcall sahf add or cwtl mov mov aaa jne lods es xor les fcomps bound addl push mov clc or jne lea movb shlb mov mov or xchg int lret push push mov mov push push shrb (bad) fimul mov add push jge jae mov clc xorl mulb and mov mov sbb mov leave or pop pop pop clc add dec test pop xchg in adc test sbb xor mov push rolb sub mov pop movsl fsubs stos add push or (bad) pop xchg push push xor dec ret sarb pop out xchg xor pop jb dec cmp push cmp in add das xchg aam add mov pop mov mov call inc or pop xor mov adc add cmc pop xor xchg popf push inc je out and sub (bad) (bad) pop mov data16 neg fmuls fcomps fwait je (bad) mov cwtl adc add adc add loope and fadds icebp mov out jp and test test push shr pop cmp dec xchg fmuls xor mov js jne cs clc jae aam movsl movsl movsw push enter fisub test icebp mov add jl (bad) dec hlt cmp shr js lea sub mov mov sbb les (bad) xadd in fwait mov fistl je push sub push idivb mul push jnp nop push xchg push fdivrl aam cmp xchg sbb cmp inc and mov bound or gs jecxz mov or cmp mov or push adcb add pop mov cli mov icebp mov adc sbb xor mov (bad) xor mov sahf sbb call pop jge aaa sbb sbb push xchg adc xchg arpl mov sub mov xor dec aad mov mov or inc push xchg sahf mov mov mov jnp xchg mov fwait jmp imul out pop cmp jbe add and mov jl mov cmp cld cltd rolb int mov std sub (bad) and ret sbb mov mov subl jmp xor fldt and lock push push js lea bound or or test movb mov push arpl ja js add sub xor std pop xor mov mov jmp mov test jl sub sub ret in in sub inc ja pop jmp xor sub jne cmpl (bad) xchg les or or mov (bad) mov lret push add push aam les pop inc mov xor dec inc and fdivr mov jae test lea jmp lahf adc sub jno mov mov fisttp push leave stos enter int inc mov cld push adc mov or aaa jge sti dec aam dec cmp mov int3 and dec das femms fs or xor je and fstl xor push push int in sub sbbb nop and cmc push cs mov (bad) xor mov ret push add stc adc pop aaa dec or dec add dec xor out cmc hlt imul fsubs bound enter inc test inc xchg pusha inc or pushl mov ficoml and out and push ficom adc push add push xor or xor or or xor pop mov sbb pushf mov (bad) negb adc inc jo arpl pop pop ret pop add bound rcll or loopne xorb add mov or mov mov (bad) pushl xlat test cmp jne push mov notl mov mov (bad) dec or push ss jne push push dec and insb into sbb push cmp call lods pop addl ljmp rorl cmc testb dec (bad) mov jle mov cmp movsl add je pushl mov or dec test jg add add sarb movb aam adc push pop or in loopne stc clc xor mov movsl clc mov leave add sbb add add in xor clc xor sti jne push and jmp mov cmp and inc sbb incb sub repnz stc mov xor dec or mov das push or das xor adc and mov mov add gs pop icebp (bad) outsb or divb idiv sti adc inc ss dec notb inc enter popa mulb mov lds xchg xor (bad) xor jbe xchg cmpb aaa push push cmp sti push fbstp fildl sub sub movsb inc adc push shrl je and push ljmp jb and cmp jg lcall inc push or (bad) push stos push cmp fcoml mov inc leave test pop mov (bad) enter std mov loope repz movsl movsb push (bad) jo xor push or jns sbb pop in in in jmp rclb js adc xor movb lock pop sub add sub or stc or std in outsl jne mov ljmp lods adc dec push outsb je mov or lea push sbb push daa push (bad) ss lds push dec aas sbb mull sub sub dec push mov sub scas imul leave add or pop into into pop test push inc push mov nop into and sub push call (bad) ficom jno push popa xor out push xchg add aam sbb xlat cs stc clc adc sbb inc scas nop rclb add imul (bad) jo inc enter pop inc clc cmp push (bad) jmp xor enter or pop test sbb jo mov xor iret and or or jo in jne mov mov jno xchg fistl sbb push lea jle lcall mov lods je enter and inc clc push je or xchg jno mov dec push in inc add pop xor add cmp push add and ja mov mov sbb cmp add lea or xor adc push push dec clc jne outsl int3 popa outsb mov pop iret dec mov add fisttpl push push out push or fadds insb outsb jle rol sub mov mov rclb adc and push push mov loopne add adc adc cmpb cltd push nop adc les mov add push jo pushf adc clc ret inc out roll (bad) clc sbb fmuls lock jb shll scas jb bound xor push pushf push mov push fmull sbb add dec inc loopne adc inc subl inc xchg sub dec ljmp subl nop mov pop mov rorl mov mov dec push mov push jae or sbb mov xchg dec pop push sbb push imul xor sub pop jmp sub cmpl stc push sahf sbb pop enter and data16 in insl into cmpsb nop fistpl outsb aam int3 std outsl adc incl cmpl jl pop int3 cmp inc or mov fcomps test in mov mov lock ljmp in push lock cmpsl cmp fmull adc sub test out jbe scas lock test call shlb pop aaa mov insl rcll mov out xchg and jmp movsbl testb or stos jne inc mov pop out ljmp xor jmp imul lea push mov jmp add jmp (bad) sub neg push and or ret sbb jo fs inc push push scas push loop add add mov aad insb xchg pop mov sbb pop xor enter dec pop leave adc scas (bad) les push lcall pop xchg xor pop mov les or pop ret jp sub mov ds mov imul push cs mov mov jmp int pop lock push fdivp test outsl pop sbb addl sar jp and pop or dec pop fcoml or pop cmp fbld mov xor lods test ds clc add adc mov (bad) imul add ffreep lret test sti (bad) sti mov shlb mov call icebp push push push ret popa xor icebp push (bad) hlt mov xlat push xchg push les js mov adc push lock cmp or push pop jmp mov jl lea mov add push push dec out pop dec rcrb int3 dec lea jns push pusha in pop push imul mov sbb xchg ljmp mov out xchg insb add rolb (bad) (bad) jne mov or movb jb add jo ret add and and add inc xchg (bad) inc mov push or jne jmp pop adc mov test jge jbe push xchg loope adc push in pop in or mov test jb hlt or push add ret cmp leave insb sub shlb jmp inc out sub jne lea mov bound xchg mov jl inc je,pn dec inc push xor pop push roll mov inc inc add xor inc ja and xchg mov sub mov and jp sbb pop (bad) incb pop add rolb mov sbb loopne jmp jne sub (bad) mov xor ds cmp and mov fs sbb inc mov xchg push mov mov xor data16 mov jnp (bad) (bad) xorl sbb cs inc mov dec xchg push xorl push dec jb add lods lret aas adc adc and clc test sbb jge decl mov push pop sti mov mov push dec inc dec test jg mov push push pop sub sbb adc iret mov jne add cmp jnp pusha decl inc dec cmp jg sbb and jb outsb pop inc xchg jmp mov popa and dec add mov mov inc dec jp inc movsl roll sbb mov gs jle inc (bad) adc pop dec aam orl adc push jl ljmp cli lods outsl das mov xor inc lcall icebp aaa mov inc push out add in cmp jb and mov mov xor cmp outsl push inc cmp loope shl add mov xor (bad) mov cwtl sbb cmp outsl add js cmpb call add mov fstpl in jo xor jbe sub clc ljmp fucomi incb lret fisttpll mov ss out mov test incl pushl push jp pop add push adc std inc jg xor pop fdivr ja (bad) lock dec or inc adc cwtl adc and rolb fldcw (bad) add dec or inc jne cltd andl pushf in mov push and inc add outsb decl mov mov cmp cmpsl mov cmp sbb adc push lods call push mov rcll (bad) scas test sub mov bound mov mov mov jecxz sbb or (bad) pop leave punpckhdq pop sbb push (bad) push lods lock dec sbb outsl jge xor inc pop push add icebp test call loop test and js lret shlb pop mov ret and mov push push fistpl and (bad) and pop mull std ja hlt (bad) push movzbl dec clc mov jmp inc push add jl and test testl mov push lea fstpt popa sub (bad) cmpb outsb cmc and outsl or fnstcw idivb pop add test sbb cmpl fcmovnbe xor outsl pop jg mov add sub dec and pop adc gs mov mov or push jmp or mov lea mov push xlat jne orl sti insl mov mov inc in mov test pop nop jbe or sbb pop fsubr into push push into adc shll cld and std out shlb xchg es pop dec scas cmpb adc sbb dec mov loopne (bad) mov orb cmp lock jmp outsb inc cmp pop mov jl insb jp mov stc out push stc shrb jge cld (bad) cli mov insl jmp add dec std sbb push jo (bad) scas fdivrs push mov push jge stc ss or (bad) in push sti nop add adc and jns dec pop jl leave repz cmp pop fwait int xchg mov sarb outsb mov xor sbb jl pop out push inc add jae sub adc call mov dec test mov mov push lret inc lock sub jnp mov or sbb flds or or pop push cmp stos xchg je push insl rolb outsl sbb mov addr16 or jmp push test movsl and cmc es mov adc push lods and mov mov out aad jmp add add dec and nop push jne (bad) cs push jne and ja adc mov adc mov cltd ljmp lods push ja je push andl pop inc mov xlat sbb imul cs lret test stos stc mov pusha xchg push sbb jne xor subl lret and insb decl shll nop pop cmpsb xor lahf sbb out rorb ror mov lods addb push clc clc fidivrl push mov adc xor pop rcl sub fldt mov lret inc dec shr inc popa jg inc daa addr16 mov mov mov and cmp push jge lea xchg cmpsb pop or cmp (bad) in push inc loope shlb xor (bad) not mov xchg cmpsb dec xchg sub clc or (bad) jmp xlat sbb push mov pop jmp repnz add xor outsb jnp pop jmp jne enter and pop jmp out addr16 test cmpl popa fcoms jmp mov mov push xor jmp adc popa jle dec sarl mov cli arpl xor jmp fdivs test (bad) aad je mov fistl movsb inc scas or xor movsl cmovge call insl cmp adc pop push jno aam (bad) scas add adc sahf lds and jnp cwtl or daa cmp push push add pusha push push dec push dec inc loopne insb dec push push clc repnz pusha push movb xchg or movsb out sbb sub dec out leave je push xor sub pop add xchg nop or cmp mov xchg leave sub and movb pop xchg sub jae sub in lahf sub inc inc push dec inc adc (bad) inc pop ret (bad) push inc test fsts inc out xor mov cmpsb xchg sub loopne lock sbb mov adc or xlat sub mov lea sbb ret push enter and or outsl enter jnp pop jb jns push pop dec push sub sbb rol clc bound xor sbb jl fstps (bad) adcb js movb inc push js pop push mov inc fidivl push std sub xchg dec and push sbb add sbb js jg sbb pop sub xchg cmc imul xor cltd fsub and fwait out add pusha or xchg push call jg and dec add xchg push xchg rorb pop cmp and mov sbb push pop jo loopne xchg mov js add add clc push push and mov aaa inc jmp fild ss push fldl jbe das mov inc and daa sub insb adc fisubr push mov add dec sbb mov mov js clc push scas xor inc inc mov repnz and out ljmp adc popa insl inc mov ljmp or push rclb movsl cmpsb sti add xlat cmpsb mov add lahf scas adc inc sub add or sub lds (bad) int3 push pop scas and mov imul adc cmc mov jl or mov mov in inc call fmuls inc cwtl xor ljmp pop jbe cmp add sub mov dec aad call fisttpl (bad) (bad) stc mov (bad) cmp je cmp push add jne push (bad) ljmp enter pop movsbl inc jmp mov adc inc cmp jle jae (bad) je push adc and push mov push mov cltd sub mov movsb dec bound fistpl add mov (bad) jg jge add cmp and lret inc mov jle or cmp sbb (bad) js bnd mov or push add test adc dec cmp popa pop push mul seto neg or push stc push mov or xchg adc into inc mov fcmovnb aam xlat lock xchg inc push (bad) xchg adc lock push jge cmp pop pop dec sbb loop (bad) sbb adc and pop jne ljmp adc div ret sbb and cs push mov fmulp push icebp in inc cmp sbb pop and std pop or jle imul cltd sub (bad) clc mov sub push jecxz or jge pop in add lea jo jnp es sub mov pop push das sbb xor int inc popf adc clc fucomip out cmp and mov mov mov in and stc mov xor ret ja icebp idivb mov mov mov push pop mov addl loope es lea jg push sbb inc out mov dec add jne sbb outsb (bad) stc add or cltd pop notl mov mov cmp jp (bad) jge lea cmp je push pushf fsubs mov pop por fisttpl in jle cltd mov mov or jl fucomp or (bad) iret test inc or popa outsb push add pushl sbb fcoms test push outsl adc mov mov pop decb sub mov cmp inc inc inc mov mov or icebp pop (bad) mov in (bad) outsb sti clc shr fadd fwait (bad) jne shl dec imul out (bad) fcmovnb fild mov imul push xor mov and faddl or dec sub push lcall inc pop lock (bad) icebp insl push mov and loope mov iret inc test js inc ja or mov sub mov xchg inc test into lea ja popa mov mov scas ficompl mov lret ss inc sbb mov add push (bad) mov or scas dec mov inc mov loopne test add fmul insl adcl adc lds cmp mov mov ljmp std sub loopne cmp loopne add mov cmp jne in inc in adc jno insl xchg mov lahf pop pop adc cmp cs adc or decl hlt pop push mov inc xchg outsl mov jbe or repnz xor push lcall es dec icebp lods and sbb (bad) push lock inc cmp add inc push shl fldt sub mov lea push (bad) inc mov jae flds lock add add xchg pop add xchg jge adc leave clc pop jmp cli lret mov lret (bad) cmp jne xlat inc push adc inc cmp adc scas orl fwait loop inc sub ljmp push inc dec loopne ret test and (bad) mov icebp cmpsb or xchg mov jb ja cmpsb aaa lods jmp leave jbe cmp idivb (bad) jae mov xor push or lret (bad) or sbb xchg inc adc add (bad) jb xor rorb adc decl outsb xor orl mov (bad) jo hlt dec in adcl xor mov or add mov pop dec pop adc bound and sub push rcrb jnp dec in invd add cmpsb out fdivr or adc jne std in cmp loopne push mov pop lea fs xchg in dec in mov das add jne push pop and enter in in loopne mov (bad) pop out inc sahf mov adc push push dec loop das inc mov mov xor inc dec pop cmpsl or sbb outsb xchg pop cmpsb ja or inc push push (bad) jmp pusha mov pop test mov add ja inc jmp stc mov push lea lea or (bad) pop adc jbe cltd fstpl mov sub cmp inc fstl lret and cwtl cmp out fsub sbb lret or jge jae jb adc jmp mov inc and aas mov push mov mov adc shrl ret xor test lret lods jl jo sbb push add add cmp fsubr sbb adc jl mov add cmpb cmp mov mov sub cltd mull sub pop mov lahf fwait sbb aad dec mov pop pusha imul pop (bad) mov push mov inc sti add leave jge jnp mov add or mov jge sbb cmpsb outsb adc addl or pop adc lods in in roll lret sub in xor or inc cli mov test mov sahf lods mov js and pusha inc ret mov sub dec inc or sub cmp cwtl jbe and lods xor insl mov push cwtl lret inc sbb mov cvttpd2pi bound pop push mov or lods jp xor pop sub and je hlt add adc jmp sbb add mov ret push cltd pop push lea mov push sbb std sarb inc mov add mov mov xchg test mov jl jp sub in pop cmp dec cmc into mov sbb inc and sbb incb sti adc pop insl mov fs pop jecxz xor adc xchg loopne es sub and add lds ss fidivl fs adc dec jne add mov jg js push fwait aad in cmp lea inc push ret inc cltd or (bad) mov xchg jge push lea sbb test add les rcrb push lcall mov sbb pop adc std jbe add cpuid cwtl push jno fisub (bad) xor in dec xor and jbe jne lods loop or lret lock fcoms push pop fwait mov movsb mov sbb dec int rcrl sub sbb pusha (bad) lahf sbbb sub pop dec pop sbb lods roll es sub push push loope sub xor inc js jge or les add ret cltd push fidivl les and cmp jl push sub out je dec jns push jmp sbb or jno add pop jae jle push push push push loopne pop mov movsb add pop (bad) lcall mov xchg fsubrl pop mov or mov ljmp rorl test lock pop add je pop insl pop and pop pop mov adcl or test jg mov pop cs mov aaa or mov mov pop in in or sub or push in sbb lods sarl push or (bad) xor sbb add aam push mov and mov les or es push inc loopne hlt subl xor jo push xor inc popl push xor xor mov push push push orb pop (bad) jae movsl pop insb and (bad) enter jne sub dec or jnp insl sub push push push sbb adc push and dec inc jo or in dec imull inc ds mov js adc add push sub adc push int3 mov dec ffreep fs push out add or loope loop in fs push cmpsb mov pop jge pop push in or push or test imul orb jge lock sbb push mov xchg mov cs cmp mov push mov mov push mov add call test pop je xor mov (bad) int cld stos push dec push es xchg out add dec and cmpb mov push adc nop insl and or notb jns inc out enter stos paddsb mov in (bad) lret fildl push add push push jo add push push js add push cmp add cltd mov ds repnz push scas mov out or jl pop cltd adc xor sub ljmp mov jnp adc (bad) xor jo fsubrl push or lods jnp jo add pop and data16 out iret push xlat into add pop gs mov adc push imul ds cli add ret (bad) mov pop dec adc add addr16 cmp pop (bad) push std pop pop shl or rclb not mov icebp mov jg inc ljmp inc ror mov loope mov pusha (bad) loope cmp loopne std push xchg repnz inc aad pop orb (bad) dec dec mov cmc mov sbb imul out pop ja add or pop int sub cmp stos adc sub nop fist lock sbb aam out inc fmul je movsb outsl add mov push push xor add rol sarb pop xchg xor hlt mov or mov mov in int3 test sbbb mov adc in inc xor lret rcr dec push das sbb push ja fsubl xchg movsb or xor aam out insl xor cmp div sbb xchg jle (bad) push push adc pop jl push icebp or pushl mov arpl sbb sub push fdivl mov cmpsl out adc insb sbb sbb cmp dec mov and add repz pop les adc cmp push pop (bad) ret lods (bad) (bad) and jecxz xor fisttpll dec jge imul or ljmp inc (bad) cltd jmp pop mov push les push leave ret and jne add xor cmpsl mov or or nop and insl fbld fstpl push or in fist sti fild push sbb sub popa sub (bad) stc ja or je push sti push fildll imul sti clc or add mov pusha test jle je ficom mov add jl pop or cmp mov shr or push ja cmp fldt add jnp adc push pop sar inc adc fnstenv mov adc mov mov js rolb pop adc pop or sbb stc fsubrl inc push cmp lds (bad) jne aaa call aam mov ja fcoms ljmp push push je inc sub aad loope js and ret pop jmp testb roll es jg out jb call or test fwait out cmp and adc jno sub shll (bad) jbe push insb int fwait xchg lods and inc cmpsb xor jge jle pusha mov jp add jecxz test repz xor mov faddl inc stos imul pop ss in pop push (bad) push dec push movsl dec mov jno push pop push sub push adc std or mov adc add mov xchg or sar (bad) fiaddl xsaves jo rcrb dec mov or pop xor inc out daa inc cmp mov mov and push es mov inc jbe jnp stos aad cmp and push int3 mov or sbb scas and mov cmp movsb pop push mov mov jle sti add cmpb mov add negl mov jnp rcrl push mov mov rol inc and daa inc push push cmpsb jmp cmp jl push mov imul pop popf add or fmul inc repz mov imul jno add leave les sahf movsl lcall lock or adc lock pop (bad) jle pusha push mov test mov out mov jg jmp pop add int3 lea xor pop ret push lea into add lahf xlat or or xchg jmp push mov enter lods leave xchg fcmovne pusha mov shr add bound andl fisttp dec sbb or and out adc into pop mov jne ja adc pop sarb or push ret xchg loope inc or push cmp cmovbe mov mov xchg clc sar imulb pop cltd stos jg mov (bad) in jg or xchg jne mov (bad) jne cmp sub popa add sbb push jne outsb (bad) mov jns incl pop mov dec add push dec mov cmp cmpsl lds sbb adc aam sbb cmp int pushf testb cmp sub inc inc sub xchg dec nop inc outsb (bad) insl loop inc push push push or imul adc inc xchg sbb xchg test pop js (bad) js pop jne mov pop cmp out mov xor dec jne pop mov (bad) int push or add js dec jmp subl mov or cmp inc push inc cli sub arpl shrb sahf adc adc repz or inc dec sub or and pop into xor inc push mov out push mov jl sarb adc sub xor mov mov dec fcomps insb jnp xchg and rcrl bound mov sbbl push lea pop icebp test sub xchg xchg jmp int3 int3 push ljmp cmp cmp fcmovnu pop mov and cmp jne inc fldenv add rcr scas out fwait sbb sub std (bad) adc fldcw pop pop pop sbb xchg mov add mov push mov add inc adcl mov inc idivl cli jb jb rcrl popa xor clc add sbb (bad) jle pop dec push cmp jbe dec push jecxz stos mov in (bad) fbstp int3 call lods cmp jne xor je or jne push orb cli dec pop add (bad) jmp (bad) mov andl and lods cmp test jecxz stos inc jmp jecxz stos xor dec cmc fild insl pop jecxz mov test fldt sbb mov fcmovnu lods mov cmp cmc dec mov stos mov inc sarl and sbb jns xor or mov sbb xchg insb jnp lea repz pop sub roll jbe test inc fwait aad dec divb fcoml inc cmp add outsl adc add pushl movsl lods loopne (bad) ret (bad) lea cmp ljmp pop sbbb mov fldl jmp test je mov adcl outsl push mov arpl and or je and clc jle decl jne test jge (bad) not je rcrl mov add fdivs mov mov shlb arpl sahf cmp mov push mov inc jae pop imul or je and mov outsb arpl cs fsubrs lods pop das jno adc inc adc lods loopne pop push push adc pop sub mov leave outsl inc pusha jne sti inc xor xor cmp jae and cmp jbe es jae shrb or xor (bad) cmpsb and adc sysexit sub scas mov push xlat and aaa bound jbe dec bnd mov xor lds push push sub adc xor daa adc fmul xchg int3 or (bad) add adc inc mov jno mov adc xlat push sbb xorl push push push mov or push sub jae or mov in lock aad jg jmp subl inc out mov adc push push andl or xchg pushf or mov adc rorb or or scas mov imul or gs ret sbbl sti pop cli pop inc lods adc cmp add inc (bad) dec (bad) dec mov mov orl and mov xchg loopne aam fcomp adc xchg in loopne or in mov and cmp mov inc xor pop in fnop jbe sbb cmp push or aam adc das cmp push or mov aaa mov mov adc mov jmp cmp mov fcmovnbe popf push loope jne sbb mov loop in inc add inc outsl out sbb fs jne lods jo push pop mov cmc jge data16 divl jne inc xor cmpsl jns mov push dec jmp xor jmp add inc adc push push ljmp cmp mov push test je data16 xchg addr16 pop stc gs je push sub mov inc je inc jle inc jle (bad) ljmp test and sub pop jmp sub je dec je dec js adc jne push lds jge jne in or pop jb and lret insb inc mulps icebp sub popa mov add mov (bad) jmp lock push fnop fdivrp js pop jmp jbe je add add neg enter cmc add mov dec xchg mov or push push push xor pop jne lea jl mov jne xchg jmp (bad) gs rol je popa push inc pop test xchg jbe inc roll cld sub scas and inc stos fisubl or sbb cmpsb mov cmpb jbe in mov dec mov icebp aas mov cli inc cwtl jmp fsts fcoms fimul mov (bad) xor cmpsb xor fidivrl xor or (bad) xor stc jle aam push aad outsl sub and push push mov xor andl repnz insl adc sub rol test push jb cmpsb jns or (bad) roll test pop roll dec cmpsb inc cmp test push sbb xor cwtl lea mov add or int roll jmp lds add sarb jl aam add jb sub scas test fldt and sbb add test cli (bad) jge pop ja push popf mov out dec or mov adc sub inc add jno inc rcl inc outsb ret fistp add in fmull mov fwait aam bound sti lods cltd lea lret test in call fildl cs in add out leave fxch inc in add fdivl xlat fimul (bad) addr16 fldenv ss inc jne xchg jb sub fs (bad) push add sub into insb and fsubrs adc or lea insl movsl (bad) pusha insl out pushf jno clc outsb xlat push clc or fmul jne sti fld fimul adc jmp fcoms push pop add out sub fldcw push outsb test cwtl fstps pop inc insl fisttpl adc and jp push popa add sub sub mov mov add test dec adc sarb adc sub mov mov enter add and inc jb sub jecxz jmp shr ja sbb data16 adc scas pop or fsts mov add xlat pop stos xchg fstpt sub sbb out push or pop pop loopne mov xchg and mov add adc adc shlb cmp push lcall and push mov cwtl dec mov adc insb mulb xchg fiadd jnp rcl fldenv inc add push jae push xor mov or jne inc (bad) add sbb xchg fstpl inc fmul inc and pop in fcomip lods aad sbb incl pop inc into (bad) lods mov je jecxz je mov add or push sbb rolb dec stos mov rolb jbe dec push js adc xor lret fiadd add cmp sbb or ss jne aam test lock push cmp je cmp je sbb xchg adc lret push or push jo dec mov pop mov sbb repnz mov test mov adc addl sbb arpl inc jle push add mov into insl ds mov push (bad) inc xor pop ret fwait xor lea cmp je rcll std xor fimul cmp (bad) cmp jb mov test incl pop fisub add sbb inc testl xchg mov loopne bound scas mov sbb or test add popa outsb lock lahf cmp pop test inc ret and rclb pop jle xor rcrl movaps adc pop push push enter push jmp xchg sub ffree movsl mov jecxz (bad) rcll mov jge add (bad) roll repnz sbb enter lds adc and xlat push ss mov dec push pcmpeqw sub stc jne jmp or jb xchg push pop push rorl movsb fwait push push push out or pop mov mov sbb pop jmp addr16 push mov int3 int3 push ret or inc push inc push mov xor sub lret aas cmp xor insb xlat add call add in out adc outsb or mov es add cltd xor sub ret or pop loopne mov fsubp fsqrt fyl2x repz dec lods insb fsts cs adc add lcall (bad) outsl and or adc push or mov fiaddl rcr sbb add clc int inc into push ret mov imul insl int3 outsl sbbl add pop push pop add icebp cs std pop or push push sbb push out and outsl jbe in int3 in outsl call xchg jne or or sbb sti and (bad) mov or inc push adc in jge ljmp or out (bad) cmp adc cmpl xchg jns sbb push scas adc or iret or pushf or cli sti jg dec lds clc mov push ja pusha add push int unpcklps inc xchg and add lock sbb jle add mov mov sub (bad) cmp push and jmp movsl add aad xor cmp out pop lock stc jmp push and in (bad) mov int3 sub cld add push sahf sub or test fdiv inc ljmp pop pop mov ljmp xchg rcr fstp adc icebp rclb jbe add repnz mov loope (bad) mov lea sti sub sub sub sbb push pop mov pop push divl add adc lcall mov adc or cs xor sbb mov roll mov jno jne test out mov cld je add jns das push add lea sahf sbb sub pop pop pop fcoms sbb and xor ret loope lds push roll cwtl sbb (bad) dec aad mov dec mov iret xor xchg pusha dec leave and imul int3 fimull in mov adc mov add lcall or data16 mov jo cli lcall int add pop jne ja add (bad) jne mov push inc sub sbb ljmp mov push add lock xchg lcall ds lea xor cmp sub movb movsl das pop movsb push cmp jmp int mov mov xchg xchg test adc or ret aam call push (bad) (bad) loop jp cmp jne push xor add push cmp mov cmp je call cmp adc fwait lods or sbb subl js adc (bad) setno push jl push pusha inc mov sbb mov orl mov ljmp out sub jb pop cmp jne mov (bad) addr16 (bad) or mov or andb mov in jnp sub add push push push push adc sub sub jl pop cmp cmpb pushl push scas call cltd mov test dec cmc pushf sahf push sete jo test push mov jmp adc push inc xchg sbb or mov scas pop mov xor mov leave sub mov push test xchg pusha xchg fstps fildll in mov fdivl (bad) scas dec sbb fwait push mov xchg cmp in adc push add and add (bad) mov insb clc lahf sbb pop mov sub inc xor and sbb jg adc or jg das fbld xchg in (bad) sbb pop movsl push xlat inc inc xchg test je ja and testl push xchg fildl (bad) jb xchg std ret or flds (bad) fcomp in adc inc push in fsts call jb fldenv sub add or jne xorb shrl adc sub inc fisttpll movsb add push leave cmp inc mov inc pop push xchg sbb sbb sub adc push or jg pop ret movsbl jge dec mov lock jbe shrl adc mov xor fimull imull adc dec cmp ja in (bad) jmp or (bad) je lea push call ljmp (bad) mov dec push dec mov adc xchg mov mov mov mov dec shr (bad) (bad) dec jb shl add mov and fimull push mov pop or adc sub pop push mov aam mov nop cmovl adc xchg and adc jecxz push in hlt cltd and push mov add adc mov sbb or lea ljmp sbb cmp cli cli je sub push jbe push lea shr test mov adc test test jbe pop jmp mov mov ss xchg loope sbb push jne mov test sub pop or adc sarb or mov cmp push mov xchg lods inc jmp stc add inc test adc add or xlat orl push sbb push push aam mov into add aad jnp sbb jge and inc inc or bound xor cmp decb lds adc and adc xor ja pop cmp mov in sub jle mov outsl dec xchg pop repnz pushf mov inc xor (bad) push adc js adc ja cmp add (bad) repnz out push imul roll push lods cmp push adc jnp inc (bad) aad push push pop sbb (bad) (bad) pop mov dec movb hlt cmp (bad) adc (bad) jg sub flds mov sbb mov icebp pusha adc je and loopne orl pop ja lock xor cmp and test or inc push mov mov add xchg adc lock and test mov orl loop cmp das (bad) pop cmpsb inc push (bad) jmp in outsl adc add xor sub adc mov jge cld jae insb cmc or xchg lea jae xor push enter add pop add pop cli les cmp push mov fistpll cmp call orl mov xor and mov xor and sub das push nop (bad) pop cli xchg cmp shl imull (bad) or mov or xor jmp int xlat (bad) lods or add add sub mov xchg mov add adc ljmp dec (bad) lock adc inc lcall test and and ja test add call mov adc mov cmp je inc mov icebp add cmp mov mov push add dec je sub stc out lcall test add or adc and lock mov (bad) push fdivl mov ljmp data16 or or xchg pop cld or pop push mov mov inc inc addr16 sbb lcall add add popa test add or repz lret cmp add mov inc and xor aam outsl xor lret int int mov add inc out subl (bad) shrb nop or jns sub or push fsubrl sub outsl aaa push lret xor nop je mov cmp cmpsb test xchg addl lahf repz nopw inc dec fsubrl or cmp fdivs jbe ja pop hlt add pop and add and (bad) lret push sub or sbb (bad) xor fneni(8087 pop push fwait adc fildl cmc hlt pop mov sbb cmpl pmulhuw push fisttpl test mov les jmp mov lea jbe jne test addr16 mov add push sbb add sub cwtl in add jae jg test in cmp fmulp sar and xor jb mov loope cld push sbb mov mov mov xor inc push pop jp mov xchg push mov inc ljmp pop add insl out popl sub jne unpcklps mov out popl pop pop mov pop and adc mov daa sub inc pop ret or and cld cmp (bad) jbe test pop inc inc xchg lods hlt es cmp add ja add mov orl sbbl push stos arpl add adc and dec ret xchg lcall mov jmp jbe xor pop jmp pop add jnp jle cli js or pop mov jmp push lods (bad) cli lcall dec rol ret pop jne inc shll leave mov adc lret repnz mov rcrl es repz jmp shlb pop mov or cmc or xchg rcr sti loope (bad) xor mov mov hlt incw data16 or add mov inc add push pop sarb pop inc lods and orl fs jae and lahf loopne les mov ret ss mov push or stos sub push add sub pop cld ljmp and and and sbb loop stos xchg bound xor orw and or inc lcall and sbb aam mov test out sbb pop adc add andl add and add inc dec dec pop mov jp add inc and and jg xor push adc cmp nop or into jnp jbe push or lret pop adc mov psllw cmp rcr nop fcoml imull out and ret lcall data16 sub icebp mov adc movzwl mov jns jns mov push dec popa dec mov in inc inc mov jmp lret pop add (bad) data16 bnd mov jne sbb pop ljmp repz iret lret inc inc push sbb sahf popf inc sub fstpl ret inc icebp cbtw adc je or adc (bad) mov adc cmc sbb neg sbb not add adc xor popa fldenv daa cmp je jns xchg jb dec inc shll insb inc xor mov add jnp rcrb fldt add or cmp jmp ja or mov jne lods mov out xor adc mov fildl fild cmp cmp cmp push inc push or xlat pop (bad) rcl imul xor inc adc cmp outsl add or jne jmp xchg dec xor cmp sti add xor outsl aas xchg add xchg std out lea (bad) and clc (bad) inc or incb xor sbb inc add sbb out add add out and jbe cmp add xor insb mov xchg xor dec sub or dec pop add push pop mov push in push (bad) sub push cmp dec in inc pop or pop push mov out dec insb sbb outsl or loop or jmp (bad) imulb pop jg dec xchg jecxz int3 dec test std mov mov sbb lea mov pop popaw xchg pop orb mov out inc in add into pop add mov in push (bad) or push ret add daa punpckldq sbb add jge out push cmp dec and mov cmp sbb mov cwtl insb mov and loopne sarb adc push sbb daa dec inc decl xchg pop xchg pop aad inc inc imull outsl add (bad) in add adc popf hlt out popa psubusw sub inc dec aaa cmp ds pop sbb mov xor mov push pop add rolb (bad) add daa push clc mov add mov or pusha test iret test push cmpl jo mov sbb (bad) pushl pop cmp push jne int xchg test sub fs and xor fiadd lcall adc jg push mov into adc lods adc sub cli loope daa push and and push and and dec dec inc inc and and cmp xor and and sub and and and sbb adc inc sahf and inc inc inc fs inc inc je jl stc cld sbb jge rorb rclb rcrb jns movsb shrb cmp add enter (bad) enter enter fcomp loopne enter call enter cld add xor dec xchg add orl mov fwait mov sbb sbb sub sbb sbb sbb adc or sbb sbb add add xor cmp cmp xor jl js fs insb xchg sbb fs in imul mov repnz add mov (bad) push inc cmp mov mov jns sub pop (bad) cld sbb dec push inc push inc dec jae and push push push jns je insl push outsl outsl je and jbe addr16 inc inc push pop and pop push ss dec push jae outsl and inc dec jnp out pop push dec dec dec inc dec dec dec xor jnp inc push push rsqrtps cld and fsubs and dec push push cmp lahf push dec push inc pop push mov inc inc dec inc cmovbe add dec pop inc inc sbb sub repnz dec dec sbb inc dec push dec push dec dec cwtl cmp push dec rcpps push dec subl jl push dec push jb fs je xchg inc (bad) mov lahf out push inc push gs imul jb and in outsb je inc dec inc jne insb fs popf mov dec jne bound sbb popa (bad) or dec popa insl gs fistpll push inc rcrl arpl jae data16 push imul in inc mulb dec push pop jno push inc mov push jnp cmp xchg pop inc sar inc dec dec or pop cmp inc daa inc loopne insl addr16 dec inc dec jo jmp ja push (bad) aas in ret out insb push and imul outsl jne add fsubrl pop loopne push cmp dec push pop inc inc push inc inc cmpl mov mov lods or insb outsb imul add mov data16 sub sti arpl add jo data16 jae adc push int ffree lods insb add gs dec (bad) jae je imul xor xor xor cs fcmovne (bad) xor xor cmp cmp add cwtl adc add popa shll je add arpl jne xchg lock cmc sub cmpsl (bad) nop nop movsb pop inc js insb outsl adc push push gs insb and lcall pop gs je repnz dec cmp inc aas push push push sub jno imul mov outsb pop jae bound xor jg imul popa jae mov sbb sub xchg (bad) cmp (bad) or popa fs inc outsb call test popa jo xor fistpl jae pop jns je jo push or xor push adc dec sahf sarl (bad) inc push xor xor or (bad) movsb push outsb jnp inc adc mov mov or daa inc and pop or mov ffreep in fs xor push push inc inc imul sbb push inc jae and mov es push dec or jb push xchg sbb jb mov jb mov mov mov push andnps arpl imul rcrl push jg sub jo rcrb and push mov arpl insl lahf xchg dec mov insb je jo jb cwtl push ja add pop inc mov dec popa pop cmp sti pop sarl xor mov out add sub das (bad) push jecxz imul js test sbb cs push inc scas shrb and mov outsb pop and cmpsl movsb sub ja mov jae inc imul ret sti je cmp sub popa jmp imul push into arpl push inc pop mov insb xor and scas mov (bad) mov pop xchg cmp fsubrs and popa sub jmp push jo inc testl or fwait push test fistpl sbb jp (bad) push jnp pop aam pop add dec push inc rcl fildl push jne addr16 pop rol ja insl popa push pop popf addr16 push adc sub out mov inc aas outsl xor push sub pop pop xor ds arpl (bad) pusha packuswb dec insl fstl sbb lcall and leave or or (bad) push (bad) es lods dec arpl or ja push inc sti pop pop bound dec dec dec dec mov adc pushf outsl lods or pop lret arpl jl imul insb insl add jle jne ja jns xor fyl2xp1 pop outsl xor sub push xor pusha maxps inc cmp adc pop ja sarb pop xor jns aaa push int3 out inc cmp add aad jae mov cmp add mov sub mov sbb loop or mov je and xor je (bad) sub stc pop sub les add pop inc lret add add inc push and test jae and or add and pmaxsw add sbb inc mov stos xor or lret cwtl (bad) fsubs push add pop adc outsl pushf jo inc outsl ret mov adc add rcl jo jns gs and inc inc insb cmp dec jne (bad) mov sub fstpl or insb inc arpl or notl (bad) ss xor aam jne je pop pop sub jae (bad) dec arpl popa inc ss ret sub fisubrl jmp cmpsl xor fcoml mov call add sbb and (bad) repz and sbb mov mov or jp jb mov or and jno sub and imul and dec and xor (bad) jmp scas inc (bad) arpl into clc call in loopne loop in call mov in out in jmp and int in icebp in imul call hlt in (bad) cmc push out jmp in out and sti repnz and jmp push mov cmp loop mov pop adc sub pop lcall dec pop sbb pop and mov stos and push jne push mov ret pop push sub or mov addl adc mov das add jg mov arpl dec outsl jbe int rcrl add pop xor adc inc xlat or popf data16 pop rcr cwtl mov cmp and cmp (bad) ss jae or push add pop jmp sub es jbe jne lods pop cs inc xor pop in sub inc pop xor or rcrl dec xor cmp push adc add js sbb loop cmovle push pop mov ja and mov xor cmp fild mov xor (bad) add inc jbe negb inc mov mov (bad) dec cs hlt in pop das inc jb xchg idivl jb inc xor jno pop enter repnz leave nop or inc stos and leave nop or push test add dec in or xchg inc insl cmpsb leave outsb mov dec push cmpsl ss xchg and lret das jl inc xor pop leave lret cmp (bad) mov mov sbb mov and js or inc fisttp cmp mov negl xchg and xchg fbld and mov xchg and enter sbb xchg inc push ret notb arpl insb dec bound test and cltd lret pop xor or cld (bad) xor in dec rclb scas sbb cli enter scas jne loopne jg xchg hlt pop les call rorb push in repz mov xchg or sbb nop pop enter loop pop pop jb cs nop (bad) (bad) and xor add and xor or add jmp adc addr16 or and dec stc cmc xchg or xchg lahf repz sbb adc pop lret bswap nop or jg or nop or jo nop or nop imul leave adc cmc sbb and and xor inc cmp ss test clc dec ret leave ljmp nop inc adc push leave test sbb hlt adc aas adc testl aas inc mov ss iret fcomi pop pop enter push and in nop cmc dec repnz jb cmp mov dec mov sbb mov or cmc mov xor sub mov loop and sbb xchg and mov pop xor sbb xor sbb enter sub or mov fsts jg fs sub aas outsl xchg lods push cmp xchg pop lahf and dec push fs repz jbe xchg sub inc ss and aas pop fs ss or aas mov in repnz sbb andl xchg add (bad) and push push xchg aaa out jb xchg xor inc xor push pop cs inc ss pop scas std and movb lds inc repz movsl clc or xchg lods pop call fsubs mov and and mov push fisttp jmp test jg inc ss pusha das xchg jg push inc pop lahf fs pop aas xchg inc jb xchg idivl dec mov xor das paddb xor scas outsl daa inc sub lret rclb mov xchg flds sbb (bad) loopne dec ficom mov mov pusha daa pop and pop pop iret adc or aas mov bswap loope cmp add ss jg jp faddl cmpsb stos into incb jbe inc add push paddd and aas loopne xor xor and cld mov test das cmp pop xchg (bad) das add dec xchg sbb insb js sbb fs xchg jne dec xchg push xor pop jb hlt popa xchg and mov (bad) pop pop insb and ret das push das xchg pop add repz jb sbb inc ss or xchg and ss (bad) dec mov fildll dec lods pop inc xor and and das ret inc ss ss movsb mov clc and jb jg ret xor ss bsr sbb sbb sbb sbb (bad) repz and leave dec iret mov inc push and ss jbe pop pop inc outsl inc ss xor pop in fs ss inc aas add and jp cmc and in div lret hlt xor jb xor inc outsl outsl sub and ss das cmp hlt jge inc xor icebp cmpb inc xor jl and xor and or jle inc xor add sbb and nop or lahf fsts jo or nop or fisubr or nop cmp leave nop or jb and or out sub xchg xor das and xchg sbb xchg and dec pop pop and fcmovu popf adc sbb and mov dec dec das pop sbb fmuls out dec sbb fsts out inc repnz xchg inc pop push fs setl xor out xchg negb inc pop cmpsl pop rorb and xor mov cmp hlt pminsw xchg and adc adc enter ss test xchg div icebp iret fsubs or fs in idivl cmpsb or repnz xchg inc ja fs scas in add int3 scas sbb enter lea insb shrl jecxz pop inc jb xchg (bad) pxor fs xor int ss ss jg push iret and arpl pop and and pop sbb incb pop xor leave nop or xchg jg leave nop or jae dec cs dec jmp hlt insb enter xor dec xchg enter jb pop leave mulb lds push movsb and bnd xor mov repnz mov xor clc lcall nop xor aas pop aas leave nop or stos in add scas int3 hlt push pop dec es aas or and clc ss jb mov xor mov or pop or mov sbb adc mov fs ss pop outsl movsb das sbb xor in pop fdiv push dec cs nop outsl pop idivb fistl adc bound enter pop cs dec add repnz pop dec xchg push insb enter dec outsl push aas xchg push mov add xor mov and fildll and mov jg lock mov inc rclb test jmp adc pop fwait jg,pn jg cmpb and mov cpuid mov aad pop fcomp fdivrl mov movsb cmp rclb movhps imul lret inc repz adc ljmp push fidiv dec mov inc leave (bad) jb mov pop aad jbe xor nop or push movzwl fs adc fild pop (bad) jns sti loope loop jb push movswl pop mov movsb inc das or (bad) das shr test outsl hlt out test push inc (bad) lcall pop mov repnz test pop cmp aas repnz addb add add add stc push mov xor test imul mov (bad) xor jmp pop scas (bad) (bad) or gs xchg dec add scas (bad) lods dec popa push or scas int mov leave loop add nop or rorl push stos mov or add mov jnp frstpm(287 jl add sbb (bad) xchg mov fisubr or adc arpl sub mov popa insb sbb mov dec cmp xor push jne mov pop adc lods pop aam aam jne insb xchg and addr16 push and outsb popa and or je into insb pusha push fwait aaa xchg movsl adc push sbb es mov js inc push jne jbe jne dec pop push iret pop lods stos mov or add jnp cs add sub add add cmp lahf jae adc mov xchg cmp pop and add orb add and adc orb or xchg adc push pop aas (bad) add add mov out add adc ss and dec xchg popf mov sub fdivr xchg adc adc aaa aas and add add add add in leave add insl lcall sub add add fs insb jo inc sub ljmp std inc dec arpl pop imul sub dec push inc dec pushw bound outsb jb ret (bad) (bad) incl push push dec dec imul cmp xor push inc dec inc dec lcall add jno imul ja jns jbe (bad) (bad) pushl xor xor inc inc aaa cmp dec dec dec dec inc inc dec inc push push push sti (bad) mov pop pop bound push pop push push arpl inc (bad) lret mov (bad) mov outsb in dec fnsave ss lods fcompl icebp xor mov sub jb loope push testl fidivrl mov dec push fidivr adc push cmp xchg inc pop adc insb fcoms push andl mov imul lret mov pop push add enter adc jns push inc add jg (bad) incl dec jne je inc jns gs outsl push imul insb outsl bound decl adc je insb outsb push or pop adc jo inc cmp imulb daa dec imul fidivrl xor arpl mov gs jo xor fist gs popa outsb fs push dec jo sti pop or arpl dec gs jo insb push sub lds push or imulb gs jns push gs aaa pop push push push pop jbe fmul or js sbb jb prefetch or popa jo imul lods sub sbb inc mov push sbbb imul sbb and std rcll into ds lds pop lock arpl (bad) or sbb inc inc (bad) fcmovnb (bad) xor fs imul jnp or inc inc push jb mov fsubr xor sbb push sub je add js xor fistpl cmpsb mov aam inc (bad) dec adc inc inc outsb aaa inc rcr jbe dec cli or imul (bad) dec push jb or or inc mov xor xor imul in dec jae mov out mov outsl jecxz shlb (bad) xor and dec xchg jmp fs mov outsb mov popa (bad) jbe sbb push imul (bad) mov or inc cmp cld in dec add and outsw mov (bad) adc test sbb mov (bad) or test fldt icebp arpl ret pop ss or adc xlat jno adc add pop mov or mov test insb imul lea ret pop push bound (bad) (bad) or mov rsm adc mov (bad) push push or mov in cmpsl mov or and add sub and sub mov out and jae inc jp push sbb dec icebp pop sub jne mov cmp (bad) adc cmp pop pop lods loopne dec outsb push fwait insl cmovno jne jb or jle daa and push fsubrl lcall pop push aaa addb lds mov ss mov mov into add push xorb sbb mov sahf fmull adc adc hlt push test adc dec mov fnstcw jge decl add psraw mov push push mov mov int pop sub addl mov arpl fldcw xor je push sbb inc jne inc push js iret cmovl ja jae xor data16 loopne in jge ret gs outsl js sub ss bound add jns jmp xor call call push (bad) jae lret mov xchg cmp int inc dec mov add or addr16 js add repnz lea rorl add dec jbe pop and lcall mov adc add into xchg push add fadds mov adc pusha mov adc or pop fwait lret xchg fsubrs adc negl push add daa cmp adc cmc add (bad) push add add add add pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp 